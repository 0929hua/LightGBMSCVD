Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x95ea7b3
0x34 EQ
0x35 PUSH2 0x67
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x95ea7b3
0x34: V9 = EQ 0x95ea7b3 V7
0x35: V10 = 0x67
0x38: JUMPI 0x67 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xa6]
---
0x39 DUP1
0x3a PUSH4 0x23b872dd
0x3f EQ
0x40 PUSH2 0xa6
0x43 JUMPI
---
0x3a: V11 = 0x23b872dd
0x3f: V12 = EQ 0x23b872dd V7
0x40: V13 = 0xa6
0x43: JUMPI 0xa6 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x104]
---
0x44 DUP1
0x45 PUSH4 0x70a08231
0x4a EQ
0x4b PUSH2 0x104
0x4e JUMPI
---
0x45: V14 = 0x70a08231
0x4a: V15 = EQ 0x70a08231 V7
0x4b: V16 = 0x104
0x4e: JUMPI 0x104 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x14e]
---
0x4f DUP1
0x50 PUSH4 0xa9059cbb
0x55 EQ
0x56 PUSH2 0x14e
0x59 JUMPI
---
0x50: V17 = 0xa9059cbb
0x55: V18 = EQ 0xa9059cbb V7
0x56: V19 = 0x14e
0x59: JUMPI 0x14e V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x18d]
---
0x5a DUP1
0x5b PUSH4 0xdd62ed3e
0x60 EQ
0x61 PUSH2 0x18d
0x64 JUMPI
---
0x5b: V20 = 0xdd62ed3e
0x60: V21 = EQ 0xdd62ed3e V7
0x61: V22 = 0x18d
0x64: JUMPI 0x18d V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x65
[0x65:0x66]
---
Predecessors: [0x5a]
Successors: []
---
0x65 JUMPDEST
0x66 INVALID
---
0x65: JUMPDEST 
0x66: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0x0]
Successors: [0x6e, 0x6f]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x6f
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V23 = CALLVALUE
0x69: V24 = ISZERO V23
0x6a: V25 = 0x6f
0x6d: JUMPI 0x6f V24
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6e
[0x6e:0x6e]
---
Predecessors: [0x67]
Successors: []
---
0x6e INVALID
---
0x6e: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6f
[0x6f:0xa3]
---
Predecessors: [0x67]
Successors: [0x1f6]
---
0x6f JUMPDEST
0x70 PUSH2 0xa4
0x73 PUSH1 0x4
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 SWAP2
0x94 SWAP1
0x95 DUP1
0x96 CALLDATALOAD
0x97 SWAP1
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c SWAP2
0x9d SWAP1
0x9e POP
0x9f POP
0xa0 PUSH2 0x1f6
0xa3 JUMP
---
0x6f: JUMPDEST 
0x70: V26 = 0xa4
0x73: V27 = 0x4
0x77: V28 = CALLDATALOAD 0x4
0x78: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x8f: V31 = 0x20
0x91: V32 = ADD 0x20 0x4
0x96: V33 = CALLDATALOAD 0x24
0x98: V34 = 0x20
0x9a: V35 = ADD 0x20 0x24
0xa0: V36 = 0x1f6
0xa3: JUMP 0x1f6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xa4, V30, V33]
Exit stack: [V7, 0xa4, V30, V33]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: [0x2dd]
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x39]
Successors: [0xad, 0xae]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xae
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V37 = CALLVALUE
0xa8: V38 = ISZERO V37
0xa9: V39 = 0xae
0xac: JUMPI 0xae V38
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xad
[0xad:0xad]
---
Predecessors: [0xa6]
Successors: []
---
0xad INVALID
---
0xad: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xae
[0xae:0x101]
---
Predecessors: [0xa6]
Successors: [0x2e1]
---
0xae JUMPDEST
0xaf PUSH2 0x102
0xb2 PUSH1 0x4
0xb4 DUP1
0xb5 DUP1
0xb6 CALLDATALOAD
0xb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc AND
0xcd SWAP1
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP1
0xd2 SWAP2
0xd3 SWAP1
0xd4 DUP1
0xd5 CALLDATALOAD
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb AND
0xec SWAP1
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP1
0xf1 SWAP2
0xf2 SWAP1
0xf3 DUP1
0xf4 CALLDATALOAD
0xf5 SWAP1
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa SWAP2
0xfb SWAP1
0xfc POP
0xfd POP
0xfe PUSH2 0x2e1
0x101 JUMP
---
0xae: JUMPDEST 
0xaf: V40 = 0x102
0xb2: V41 = 0x4
0xb6: V42 = CALLDATALOAD 0x4
0xb7: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xce: V45 = 0x20
0xd0: V46 = ADD 0x20 0x4
0xd5: V47 = CALLDATALOAD 0x24
0xd6: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xed: V50 = 0x20
0xef: V51 = ADD 0x20 0x24
0xf4: V52 = CALLDATALOAD 0x44
0xf6: V53 = 0x20
0xf8: V54 = ADD 0x20 0x44
0xfe: V55 = 0x2e1
0x101: JUMP 0x2e1
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x102, V44, V49, V52]
Exit stack: [V7, 0x102, V44, V49, V52]

================================

Block 0x102
[0x102:0x103]
---
Predecessors: [0x54e]
Successors: []
---
0x102 JUMPDEST
0x103 STOP
---
0x102: JUMPDEST 
0x103: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0x44]
Successors: [0x10b, 0x10c]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 ISZERO
0x107 PUSH2 0x10c
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V56 = CALLVALUE
0x106: V57 = ISZERO V56
0x107: V58 = 0x10c
0x10a: JUMPI 0x10c V57
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10b
[0x10b:0x10b]
---
Predecessors: [0x104]
Successors: []
---
0x10b INVALID
---
0x10b: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10c
[0x10c:0x137]
---
Predecessors: [0x104]
Successors: [0x553]
---
0x10c JUMPDEST
0x10d PUSH2 0x138
0x110 PUSH1 0x4
0x112 DUP1
0x113 DUP1
0x114 CALLDATALOAD
0x115 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a AND
0x12b SWAP1
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 SWAP2
0x131 SWAP1
0x132 POP
0x133 POP
0x134 PUSH2 0x553
0x137 JUMP
---
0x10c: JUMPDEST 
0x10d: V59 = 0x138
0x110: V60 = 0x4
0x114: V61 = CALLDATALOAD 0x4
0x115: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x12c: V64 = 0x20
0x12e: V65 = ADD 0x20 0x4
0x134: V66 = 0x553
0x137: JUMP 0x553
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x138, V63]
Exit stack: [V7, 0x138, V63]

================================

Block 0x138
[0x138:0x14d]
---
Predecessors: [0x598]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
---
0x138: JUMPDEST 
0x139: V67 = 0x40
0x13b: V68 = M[0x40]
0x13f: M[V68] = V283
0x140: V69 = 0x20
0x142: V70 = ADD 0x20 V68
0x146: V71 = 0x40
0x148: V72 = M[0x40]
0x14b: V73 = SUB V70 V72
0x14d: RETURN V72 V73
---
Entry stack: [V7, V283]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x14e
[0x14e:0x154]
---
Predecessors: [0x4f]
Successors: [0x155, 0x156]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 ISZERO
0x151 PUSH2 0x156
0x154 JUMPI
---
0x14e: JUMPDEST 
0x14f: V74 = CALLVALUE
0x150: V75 = ISZERO V74
0x151: V76 = 0x156
0x154: JUMPI 0x156 V75
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x155
[0x155:0x155]
---
Predecessors: [0x14e]
Successors: []
---
0x155 INVALID
---
0x155: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x156
[0x156:0x18a]
---
Predecessors: [0x14e]
Successors: [0x59d]
---
0x156 JUMPDEST
0x157 PUSH2 0x18b
0x15a PUSH1 0x4
0x15c DUP1
0x15d DUP1
0x15e CALLDATALOAD
0x15f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x174 AND
0x175 SWAP1
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP1
0x17a SWAP2
0x17b SWAP1
0x17c DUP1
0x17d CALLDATALOAD
0x17e SWAP1
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP1
0x183 SWAP2
0x184 SWAP1
0x185 POP
0x186 POP
0x187 PUSH2 0x59d
0x18a JUMP
---
0x156: JUMPDEST 
0x157: V77 = 0x18b
0x15a: V78 = 0x4
0x15e: V79 = CALLDATALOAD 0x4
0x15f: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x174: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x176: V82 = 0x20
0x178: V83 = ADD 0x20 0x4
0x17d: V84 = CALLDATALOAD 0x24
0x17f: V85 = 0x20
0x181: V86 = ADD 0x20 0x24
0x187: V87 = 0x59d
0x18a: JUMP 0x59d
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x18b, V81, V84]
Exit stack: [V7, 0x18b, V81, V84]

================================

Block 0x18b
[0x18b:0x18c]
---
Predecessors: [0x70d]
Successors: []
---
0x18b JUMPDEST
0x18c STOP
---
0x18b: JUMPDEST 
0x18c: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x18d
[0x18d:0x193]
---
Predecessors: [0x5a]
Successors: [0x194, 0x195]
---
0x18d JUMPDEST
0x18e CALLVALUE
0x18f ISZERO
0x190 PUSH2 0x195
0x193 JUMPI
---
0x18d: JUMPDEST 
0x18e: V88 = CALLVALUE
0x18f: V89 = ISZERO V88
0x190: V90 = 0x195
0x193: JUMPI 0x195 V89
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x194
[0x194:0x194]
---
Predecessors: [0x18d]
Successors: []
---
0x194 INVALID
---
0x194: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x195
[0x195:0x1df]
---
Predecessors: [0x18d]
Successors: [0x712]
---
0x195 JUMPDEST
0x196 PUSH2 0x1e0
0x199 PUSH1 0x4
0x19b DUP1
0x19c DUP1
0x19d CALLDATALOAD
0x19e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b3 AND
0x1b4 SWAP1
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP1
0x1b9 SWAP2
0x1ba SWAP1
0x1bb DUP1
0x1bc CALLDATALOAD
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 SWAP1
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 SWAP2
0x1d9 SWAP1
0x1da POP
0x1db POP
0x1dc PUSH2 0x712
0x1df JUMP
---
0x195: JUMPDEST 
0x196: V91 = 0x1e0
0x199: V92 = 0x4
0x19d: V93 = CALLDATALOAD 0x4
0x19e: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1b5: V96 = 0x20
0x1b7: V97 = ADD 0x20 0x4
0x1bc: V98 = CALLDATALOAD 0x24
0x1bd: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1d4: V101 = 0x20
0x1d6: V102 = ADD 0x20 0x24
0x1dc: V103 = 0x712
0x1df: JUMP 0x712
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1e0, V95, V100]
Exit stack: [V7, 0x1e0, V95, V100]

================================

Block 0x1e0
[0x1e0:0x1f5]
---
Predecessors: [0x794]
Successors: []
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 DUP1
0x1e5 DUP3
0x1e6 DUP2
0x1e7 MSTORE
0x1e8 PUSH1 0x20
0x1ea ADD
0x1eb SWAP2
0x1ec POP
0x1ed POP
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 DUP1
0x1f2 SWAP2
0x1f3 SUB
0x1f4 SWAP1
0x1f5 RETURN
---
0x1e0: JUMPDEST 
0x1e1: V104 = 0x40
0x1e3: V105 = M[0x40]
0x1e7: M[V105] = V386
0x1e8: V106 = 0x20
0x1ea: V107 = ADD 0x20 V105
0x1ee: V108 = 0x40
0x1f0: V109 = M[0x40]
0x1f3: V110 = SUB V107 V109
0x1f5: RETURN V109 V110
---
Entry stack: [V7, V386]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x1f6
[0x1f6:0x2dc]
---
Predecessors: [0x6f]
Successors: [0x2dd]
---
0x1f6 JUMPDEST
0x1f7 DUP1
0x1f8 PUSH1 0x1
0x1fa PUSH1 0x0
0x1fc CALLER
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 DUP2
0x22a MSTORE
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 PUSH1 0x0
0x236 SHA3
0x237 PUSH1 0x0
0x239 DUP5
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 AND
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b SWAP1
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 PUSH1 0x0
0x273 SHA3
0x274 DUP2
0x275 SWAP1
0x276 SSTORE
0x277 POP
0x278 DUP2
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e AND
0x28f CALLER
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 AND
0x2a6 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x2c7 DUP4
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc DUP3
0x2cd DUP2
0x2ce MSTORE
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 SWAP2
0x2d3 POP
0x2d4 POP
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 SWAP2
0x2da SUB
0x2db SWAP1
0x2dc LOG3
---
0x1f6: JUMPDEST 
0x1f8: V111 = 0x1
0x1fa: V112 = 0x0
0x1fc: V113 = CALLER
0x1fd: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x213: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x22a: M[0x0] = V117
0x22b: V118 = 0x20
0x22d: V119 = ADD 0x20 0x0
0x230: M[0x20] = 0x1
0x231: V120 = 0x20
0x233: V121 = ADD 0x20 0x20
0x234: V122 = 0x0
0x236: V123 = SHA3 0x0 0x40
0x237: V124 = 0x0
0x23a: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x250: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x267: M[0x0] = V128
0x268: V129 = 0x20
0x26a: V130 = ADD 0x20 0x0
0x26d: M[0x20] = V123
0x26e: V131 = 0x20
0x270: V132 = ADD 0x20 0x20
0x271: V133 = 0x0
0x273: V134 = SHA3 0x0 0x40
0x276: S[V134] = V33
0x279: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x28f: V137 = CALLER
0x290: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x2a6: V140 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x2c8: V141 = 0x40
0x2ca: V142 = M[0x40]
0x2ce: M[V142] = V33
0x2cf: V143 = 0x20
0x2d1: V144 = ADD 0x20 V142
0x2d5: V145 = 0x40
0x2d7: V146 = M[0x40]
0x2da: V147 = SUB V144 V146
0x2dc: LOG V146 V147 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V139 V136
---
Entry stack: [V7, 0xa4, V30, V33]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0xa4, V30, V33]

================================

Block 0x2dd
[0x2dd:0x2e0]
---
Predecessors: [0x1f6]
Successors: [0xa4]
---
0x2dd JUMPDEST
0x2de POP
0x2df POP
0x2e0 JUMP
---
0x2dd: JUMPDEST 
0x2e0: JUMP 0xa4
---
Entry stack: [V7, 0xa4, V30, V33]
Stack pops: 3
Stack additions: []
Exit stack: [V7]

================================

Block 0x2e1
[0x2e1:0x32a]
---
Predecessors: [0xae]
Successors: [0x32b, 0x3ac]
---
0x2e1 JUMPDEST
0x2e2 DUP1
0x2e3 PUSH1 0x0
0x2e5 PUSH1 0x0
0x2e7 DUP6
0x2e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fd AND
0x2fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x313 AND
0x314 DUP2
0x315 MSTORE
0x316 PUSH1 0x20
0x318 ADD
0x319 SWAP1
0x31a DUP2
0x31b MSTORE
0x31c PUSH1 0x20
0x31e ADD
0x31f PUSH1 0x0
0x321 SHA3
0x322 SLOAD
0x323 LT
0x324 ISZERO
0x325 DUP1
0x326 ISZERO
0x327 PUSH2 0x3ac
0x32a JUMPI
---
0x2e1: JUMPDEST 
0x2e3: V148 = 0x0
0x2e5: V149 = 0x0
0x2e8: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x2fe: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x313: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x315: M[0x0] = V153
0x316: V154 = 0x20
0x318: V155 = ADD 0x20 0x0
0x31b: M[0x20] = 0x0
0x31c: V156 = 0x20
0x31e: V157 = ADD 0x20 0x20
0x31f: V158 = 0x0
0x321: V159 = SHA3 0x0 0x40
0x322: V160 = S[V159]
0x323: V161 = LT V160 V52
0x324: V162 = ISZERO V161
0x326: V163 = ISZERO V162
0x327: V164 = 0x3ac
0x32a: JUMPI 0x3ac V163
---
Entry stack: [V7, 0x102, V44, V49, V52]
Stack pops: 3
Stack additions: [S2, S1, S0, V162]
Exit stack: [V7, 0x102, V44, V49, V52, V162]

================================

Block 0x32b
[0x32b:0x3ab]
---
Predecessors: [0x2e1]
Successors: [0x3ac]
---
0x32b POP
0x32c DUP1
0x32d PUSH1 0x1
0x32f PUSH1 0x0
0x331 DUP6
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35d AND
0x35e DUP2
0x35f MSTORE
0x360 PUSH1 0x20
0x362 ADD
0x363 SWAP1
0x364 DUP2
0x365 MSTORE
0x366 PUSH1 0x20
0x368 ADD
0x369 PUSH1 0x0
0x36b SHA3
0x36c PUSH1 0x0
0x36e CALLER
0x36f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x384 AND
0x385 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39a AND
0x39b DUP2
0x39c MSTORE
0x39d PUSH1 0x20
0x39f ADD
0x3a0 SWAP1
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 PUSH1 0x0
0x3a8 SHA3
0x3a9 SLOAD
0x3aa LT
0x3ab ISZERO
---
0x32d: V165 = 0x1
0x32f: V166 = 0x0
0x332: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x348: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x35d: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x35f: M[0x0] = V170
0x360: V171 = 0x20
0x362: V172 = ADD 0x20 0x0
0x365: M[0x20] = 0x1
0x366: V173 = 0x20
0x368: V174 = ADD 0x20 0x20
0x369: V175 = 0x0
0x36b: V176 = SHA3 0x0 0x40
0x36c: V177 = 0x0
0x36e: V178 = CALLER
0x36f: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x384: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x385: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x39a: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x39c: M[0x0] = V182
0x39d: V183 = 0x20
0x39f: V184 = ADD 0x20 0x0
0x3a2: M[0x20] = V176
0x3a3: V185 = 0x20
0x3a5: V186 = ADD 0x20 0x20
0x3a6: V187 = 0x0
0x3a8: V188 = SHA3 0x0 0x40
0x3a9: V189 = S[V188]
0x3aa: V190 = LT V189 V52
0x3ab: V191 = ISZERO V190
---
Entry stack: [V7, 0x102, V44, V49, V52, V162]
Stack pops: 4
Stack additions: [S3, S2, S1, V191]
Exit stack: [V7, 0x102, V44, V49, V52, V191]

================================

Block 0x3ac
[0x3ac:0x3b2]
---
Predecessors: [0x2e1, 0x32b, 0x866]
Successors: [0x3b3, 0x3b8]
---
0x3ac JUMPDEST
0x3ad DUP1
0x3ae ISZERO
0x3af PUSH2 0x3b8
0x3b2 JUMPI
---
0x3ac: JUMPDEST 
0x3ae: V192 = ISZERO S0
0x3af: V193 = 0x3b8
0x3b2: JUMPI 0x3b8 V192
---
Entry stack: [V7, 0x102, V44, V49, V52, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x102, V44, V49, V52, S0]

================================

Block 0x3b3
[0x3b3:0x3b7]
---
Predecessors: [0x3ac]
Successors: [0x3b8]
---
0x3b3 POP
0x3b4 PUSH1 0x0
0x3b6 DUP2
0x3b7 GT
---
0x3b4: V194 = 0x0
0x3b7: V195 = GT V52 0x0
---
Entry stack: [V7, 0x102, V44, V49, V52, S0]
Stack pops: 2
Stack additions: [S1, V195]
Exit stack: [V7, 0x102, V44, V49, V52, V195]

================================

Block 0x3b8
[0x3b8:0x3be]
---
Predecessors: [0x3ac, 0x3b3]
Successors: [0x3bf, 0x3c4]
---
0x3b8 JUMPDEST
0x3b9 ISZERO
0x3ba ISZERO
0x3bb PUSH2 0x3c4
0x3be JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V196 = ISZERO S0
0x3ba: V197 = ISZERO V196
0x3bb: V198 = 0x3c4
0x3be: JUMPI 0x3c4 V197
---
Entry stack: [V7, 0x102, V44, V49, V52, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x102, V44, V49, V52]

================================

Block 0x3bf
[0x3bf:0x3c3]
---
Predecessors: [0x3b8]
Successors: []
---
0x3bf PUSH1 0x0
0x3c1 PUSH1 0x0
0x3c3 REVERT
---
0x3bf: V199 = 0x0
0x3c1: V200 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V7, 0x102, V44, V49, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x102, V44, V49, V52]

================================

Block 0x3c4
[0x3c4:0x54d]
---
Predecessors: [0x3b8]
Successors: [0x54e]
---
0x3c4 JUMPDEST
0x3c5 DUP1
0x3c6 PUSH1 0x0
0x3c8 PUSH1 0x0
0x3ca DUP5
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP1
0x3fd DUP2
0x3fe MSTORE
0x3ff PUSH1 0x20
0x401 ADD
0x402 PUSH1 0x0
0x404 SHA3
0x405 PUSH1 0x0
0x407 DUP3
0x408 DUP3
0x409 SLOAD
0x40a ADD
0x40b SWAP3
0x40c POP
0x40d POP
0x40e DUP2
0x40f SWAP1
0x410 SSTORE
0x411 POP
0x412 DUP1
0x413 PUSH1 0x0
0x415 PUSH1 0x0
0x417 DUP6
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 DUP2
0x445 MSTORE
0x446 PUSH1 0x20
0x448 ADD
0x449 SWAP1
0x44a DUP2
0x44b MSTORE
0x44c PUSH1 0x20
0x44e ADD
0x44f PUSH1 0x0
0x451 SHA3
0x452 PUSH1 0x0
0x454 DUP3
0x455 DUP3
0x456 SLOAD
0x457 SUB
0x458 SWAP3
0x459 POP
0x45a POP
0x45b DUP2
0x45c SWAP1
0x45d SSTORE
0x45e POP
0x45f DUP1
0x460 PUSH1 0x1
0x462 PUSH1 0x0
0x464 DUP6
0x465 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47a AND
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x20
0x495 ADD
0x496 SWAP1
0x497 DUP2
0x498 MSTORE
0x499 PUSH1 0x20
0x49b ADD
0x49c PUSH1 0x0
0x49e SHA3
0x49f PUSH1 0x0
0x4a1 CALLER
0x4a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b7 AND
0x4b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cd AND
0x4ce DUP2
0x4cf MSTORE
0x4d0 PUSH1 0x20
0x4d2 ADD
0x4d3 SWAP1
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 PUSH1 0x0
0x4db SHA3
0x4dc PUSH1 0x0
0x4de DUP3
0x4df DUP3
0x4e0 SLOAD
0x4e1 SUB
0x4e2 SWAP3
0x4e3 POP
0x4e4 POP
0x4e5 DUP2
0x4e6 SWAP1
0x4e7 SSTORE
0x4e8 POP
0x4e9 DUP2
0x4ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ff AND
0x500 DUP4
0x501 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x516 AND
0x517 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x538 DUP4
0x539 PUSH1 0x40
0x53b MLOAD
0x53c DUP1
0x53d DUP3
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x20
0x542 ADD
0x543 SWAP2
0x544 POP
0x545 POP
0x546 PUSH1 0x40
0x548 MLOAD
0x549 DUP1
0x54a SWAP2
0x54b SUB
0x54c SWAP1
0x54d LOG3
---
0x3c4: JUMPDEST 
0x3c6: V201 = 0x0
0x3c8: V202 = 0x0
0x3cb: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x3e1: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3f8: M[0x0] = V206
0x3f9: V207 = 0x20
0x3fb: V208 = ADD 0x20 0x0
0x3fe: M[0x20] = 0x0
0x3ff: V209 = 0x20
0x401: V210 = ADD 0x20 0x20
0x402: V211 = 0x0
0x404: V212 = SHA3 0x0 0x40
0x405: V213 = 0x0
0x409: V214 = S[V212]
0x40a: V215 = ADD V214 V52
0x410: S[V212] = V215
0x413: V216 = 0x0
0x415: V217 = 0x0
0x418: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x42e: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x445: M[0x0] = V221
0x446: V222 = 0x20
0x448: V223 = ADD 0x20 0x0
0x44b: M[0x20] = 0x0
0x44c: V224 = 0x20
0x44e: V225 = ADD 0x20 0x20
0x44f: V226 = 0x0
0x451: V227 = SHA3 0x0 0x40
0x452: V228 = 0x0
0x456: V229 = S[V227]
0x457: V230 = SUB V229 V52
0x45d: S[V227] = V230
0x460: V231 = 0x1
0x462: V232 = 0x0
0x465: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x47b: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x492: M[0x0] = V236
0x493: V237 = 0x20
0x495: V238 = ADD 0x20 0x0
0x498: M[0x20] = 0x1
0x499: V239 = 0x20
0x49b: V240 = ADD 0x20 0x20
0x49c: V241 = 0x0
0x49e: V242 = SHA3 0x0 0x40
0x49f: V243 = 0x0
0x4a1: V244 = CALLER
0x4a2: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b7: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x4b8: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x4cf: M[0x0] = V248
0x4d0: V249 = 0x20
0x4d2: V250 = ADD 0x20 0x0
0x4d5: M[0x20] = V242
0x4d6: V251 = 0x20
0x4d8: V252 = ADD 0x20 0x20
0x4d9: V253 = 0x0
0x4db: V254 = SHA3 0x0 0x40
0x4dc: V255 = 0x0
0x4e0: V256 = S[V254]
0x4e1: V257 = SUB V256 V52
0x4e7: S[V254] = V257
0x4ea: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ff: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x501: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x516: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x517: V262 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x539: V263 = 0x40
0x53b: V264 = M[0x40]
0x53f: M[V264] = V52
0x540: V265 = 0x20
0x542: V266 = ADD 0x20 V264
0x546: V267 = 0x40
0x548: V268 = M[0x40]
0x54b: V269 = SUB V266 V268
0x54d: LOG V268 V269 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V261 V259
---
Entry stack: [V7, 0x102, V44, V49, V52]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x102, V44, V49, V52]

================================

Block 0x54e
[0x54e:0x552]
---
Predecessors: [0x3c4]
Successors: [0x102]
---
0x54e JUMPDEST
0x54f POP
0x550 POP
0x551 POP
0x552 JUMP
---
0x54e: JUMPDEST 
0x552: JUMP 0x102
---
Entry stack: [V7, 0x102, V44, V49, V52]
Stack pops: 4
Stack additions: []
Exit stack: [V7]

================================

Block 0x553
[0x553:0x597]
---
Predecessors: [0x10c]
Successors: [0x598]
---
0x553 JUMPDEST
0x554 PUSH1 0x0
0x556 PUSH1 0x0
0x558 PUSH1 0x0
0x55a DUP4
0x55b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x570 AND
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 AND
0x587 DUP2
0x588 MSTORE
0x589 PUSH1 0x20
0x58b ADD
0x58c SWAP1
0x58d DUP2
0x58e MSTORE
0x58f PUSH1 0x20
0x591 ADD
0x592 PUSH1 0x0
0x594 SHA3
0x595 SLOAD
0x596 SWAP1
0x597 POP
---
0x553: JUMPDEST 
0x554: V270 = 0x0
0x556: V271 = 0x0
0x558: V272 = 0x0
0x55b: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x570: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x571: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x588: M[0x0] = V276
0x589: V277 = 0x20
0x58b: V278 = ADD 0x20 0x0
0x58e: M[0x20] = 0x0
0x58f: V279 = 0x20
0x591: V280 = ADD 0x20 0x20
0x592: V281 = 0x0
0x594: V282 = SHA3 0x0 0x40
0x595: V283 = S[V282]
---
Entry stack: [V7, 0x138, V63]
Stack pops: 1
Stack additions: [S0, V283]
Exit stack: [V7, 0x138, V63, V283]

================================

Block 0x598
[0x598:0x59c]
---
Predecessors: [0x553]
Successors: [0x138]
---
0x598 JUMPDEST
0x599 SWAP2
0x59a SWAP1
0x59b POP
0x59c JUMP
---
0x598: JUMPDEST 
0x59c: JUMP 0x138
---
Entry stack: [V7, 0x138, V63, V283]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V7, V283]

================================

Block 0x59d
[0x59d:0x5af]
---
Predecessors: [0x156]
Successors: [0x5b0, 0x5b1]
---
0x59d JUMPDEST
0x59e PUSH1 0x40
0x5a0 PUSH1 0x4
0x5a2 DUP2
0x5a3 ADD
0x5a4 PUSH1 0x0
0x5a6 CALLDATASIZE
0x5a7 SWAP1
0x5a8 POP
0x5a9 EQ
0x5aa ISZERO
0x5ab ISZERO
0x5ac PUSH2 0x5b1
0x5af JUMPI
---
0x59d: JUMPDEST 
0x59e: V284 = 0x40
0x5a0: V285 = 0x4
0x5a3: V286 = ADD 0x40 0x4
0x5a4: V287 = 0x0
0x5a6: V288 = CALLDATASIZE
0x5a9: V289 = EQ V288 0x44
0x5aa: V290 = ISZERO V289
0x5ab: V291 = ISZERO V290
0x5ac: V292 = 0x5b1
0x5af: JUMPI 0x5b1 V291
---
Entry stack: [V7, 0x18b, V81, V84]
Stack pops: 0
Stack additions: [0x40]
Exit stack: [V7, 0x18b, V81, V84, 0x40]

================================

Block 0x5b0
[0x5b0:0x5b0]
---
Predecessors: [0x59d]
Successors: []
---
0x5b0 INVALID
---
0x5b0: INVALID 
---
Entry stack: [V7, 0x18b, V81, V84, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x18b, V81, V84, 0x40]

================================

Block 0x5b1
[0x5b1:0x5fa]
---
Predecessors: [0x59d]
Successors: [0x5fb, 0x600]
---
0x5b1 JUMPDEST
0x5b2 DUP2
0x5b3 PUSH1 0x0
0x5b5 PUSH1 0x0
0x5b7 CALLER
0x5b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cd AND
0x5ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e3 AND
0x5e4 DUP2
0x5e5 MSTORE
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 SWAP1
0x5ea DUP2
0x5eb MSTORE
0x5ec PUSH1 0x20
0x5ee ADD
0x5ef PUSH1 0x0
0x5f1 SHA3
0x5f2 SLOAD
0x5f3 LT
0x5f4 ISZERO
0x5f5 DUP1
0x5f6 ISZERO
0x5f7 PUSH2 0x600
0x5fa JUMPI
---
0x5b1: JUMPDEST 
0x5b3: V293 = 0x0
0x5b5: V294 = 0x0
0x5b7: V295 = CALLER
0x5b8: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x5ce: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x5e5: M[0x0] = V299
0x5e6: V300 = 0x20
0x5e8: V301 = ADD 0x20 0x0
0x5eb: M[0x20] = 0x0
0x5ec: V302 = 0x20
0x5ee: V303 = ADD 0x20 0x20
0x5ef: V304 = 0x0
0x5f1: V305 = SHA3 0x0 0x40
0x5f2: V306 = S[V305]
0x5f3: V307 = LT V306 V84
0x5f4: V308 = ISZERO V307
0x5f6: V309 = ISZERO V308
0x5f7: V310 = 0x600
0x5fa: JUMPI 0x600 V309
---
Entry stack: [V7, 0x18b, V81, V84, 0x40]
Stack pops: 2
Stack additions: [S1, S0, V308]
Exit stack: [V7, 0x18b, V81, V84, 0x40, V308]

================================

Block 0x5fb
[0x5fb:0x5ff]
---
Predecessors: [0x5b1]
Successors: [0x600]
---
0x5fb POP
0x5fc PUSH1 0x0
0x5fe DUP3
0x5ff GT
---
0x5fc: V311 = 0x0
0x5ff: V312 = GT V84 0x0
---
Entry stack: [V7, 0x18b, V81, V84, 0x40, V308]
Stack pops: 3
Stack additions: [S2, S1, V312]
Exit stack: [V7, 0x18b, V81, V84, 0x40, V312]

================================

Block 0x600
[0x600:0x606]
---
Predecessors: [0x5b1, 0x5fb]
Successors: [0x607, 0x60c]
---
0x600 JUMPDEST
0x601 ISZERO
0x602 ISZERO
0x603 PUSH2 0x60c
0x606 JUMPI
---
0x600: JUMPDEST 
0x601: V313 = ISZERO S0
0x602: V314 = ISZERO V313
0x603: V315 = 0x60c
0x606: JUMPI 0x60c V314
---
Entry stack: [V7, 0x18b, V81, V84, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x18b, V81, V84, 0x40]

================================

Block 0x607
[0x607:0x60b]
---
Predecessors: [0x600]
Successors: []
---
0x607 PUSH1 0x0
0x609 PUSH1 0x0
0x60b REVERT
---
0x607: V316 = 0x0
0x609: V317 = 0x0
0x60b: REVERT 0x0 0x0
---
Entry stack: [V7, 0x18b, V81, V84, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x18b, V81, V84, 0x40]

================================

Block 0x60c
[0x60c:0x70b]
---
Predecessors: [0x600]
Successors: [0x70c]
---
0x60c JUMPDEST
0x60d DUP2
0x60e PUSH1 0x0
0x610 PUSH1 0x0
0x612 CALLER
0x613 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x628 AND
0x629 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63e AND
0x63f DUP2
0x640 MSTORE
0x641 PUSH1 0x20
0x643 ADD
0x644 SWAP1
0x645 DUP2
0x646 MSTORE
0x647 PUSH1 0x20
0x649 ADD
0x64a PUSH1 0x0
0x64c SHA3
0x64d PUSH1 0x0
0x64f DUP3
0x650 DUP3
0x651 SLOAD
0x652 SUB
0x653 SWAP3
0x654 POP
0x655 POP
0x656 DUP2
0x657 SWAP1
0x658 SSTORE
0x659 POP
0x65a DUP2
0x65b PUSH1 0x0
0x65d PUSH1 0x0
0x65f DUP6
0x660 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x675 AND
0x676 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68b AND
0x68c DUP2
0x68d MSTORE
0x68e PUSH1 0x20
0x690 ADD
0x691 SWAP1
0x692 DUP2
0x693 MSTORE
0x694 PUSH1 0x20
0x696 ADD
0x697 PUSH1 0x0
0x699 SHA3
0x69a PUSH1 0x0
0x69c DUP3
0x69d DUP3
0x69e SLOAD
0x69f ADD
0x6a0 SWAP3
0x6a1 POP
0x6a2 POP
0x6a3 DUP2
0x6a4 SWAP1
0x6a5 SSTORE
0x6a6 POP
0x6a7 DUP3
0x6a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bd AND
0x6be CALLER
0x6bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d4 AND
0x6d5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x6f6 DUP5
0x6f7 PUSH1 0x40
0x6f9 MLOAD
0x6fa DUP1
0x6fb DUP3
0x6fc DUP2
0x6fd MSTORE
0x6fe PUSH1 0x20
0x700 ADD
0x701 SWAP2
0x702 POP
0x703 POP
0x704 PUSH1 0x40
0x706 MLOAD
0x707 DUP1
0x708 SWAP2
0x709 SUB
0x70a SWAP1
0x70b LOG3
---
0x60c: JUMPDEST 
0x60e: V318 = 0x0
0x610: V319 = 0x0
0x612: V320 = CALLER
0x613: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x628: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x629: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x63e: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x640: M[0x0] = V324
0x641: V325 = 0x20
0x643: V326 = ADD 0x20 0x0
0x646: M[0x20] = 0x0
0x647: V327 = 0x20
0x649: V328 = ADD 0x20 0x20
0x64a: V329 = 0x0
0x64c: V330 = SHA3 0x0 0x40
0x64d: V331 = 0x0
0x651: V332 = S[V330]
0x652: V333 = SUB V332 V84
0x658: S[V330] = V333
0x65b: V334 = 0x0
0x65d: V335 = 0x0
0x660: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x675: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x676: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x68b: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x68d: M[0x0] = V339
0x68e: V340 = 0x20
0x690: V341 = ADD 0x20 0x0
0x693: M[0x20] = 0x0
0x694: V342 = 0x20
0x696: V343 = ADD 0x20 0x20
0x697: V344 = 0x0
0x699: V345 = SHA3 0x0 0x40
0x69a: V346 = 0x0
0x69e: V347 = S[V345]
0x69f: V348 = ADD V347 V84
0x6a5: S[V345] = V348
0x6a8: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bd: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x6be: V351 = CALLER
0x6bf: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d4: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x6d5: V354 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x6f7: V355 = 0x40
0x6f9: V356 = M[0x40]
0x6fd: M[V356] = V84
0x6fe: V357 = 0x20
0x700: V358 = ADD 0x20 V356
0x704: V359 = 0x40
0x706: V360 = M[0x40]
0x709: V361 = SUB V358 V360
0x70b: LOG V360 V361 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V353 V350
---
Entry stack: [V7, 0x18b, V81, V84, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x18b, V81, V84, 0x40]

================================

Block 0x70c
[0x70c:0x70c]
---
Predecessors: [0x60c]
Successors: [0x70d]
---
0x70c JUMPDEST
---
0x70c: JUMPDEST 
---
Entry stack: [V7, 0x18b, V81, V84, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x18b, V81, V84, 0x40]

================================

Block 0x70d
[0x70d:0x711]
---
Predecessors: [0x70c]
Successors: [0x18b]
---
0x70d JUMPDEST
0x70e POP
0x70f POP
0x710 POP
0x711 JUMP
---
0x70d: JUMPDEST 
0x711: JUMP 0x18b
---
Entry stack: [V7, 0x18b, V81, V84, 0x40]
Stack pops: 4
Stack additions: []
Exit stack: [V7]

================================

Block 0x712
[0x712:0x793]
---
Predecessors: [0x195]
Successors: [0x794]
---
0x712 JUMPDEST
0x713 PUSH1 0x0
0x715 PUSH1 0x1
0x717 PUSH1 0x0
0x719 DUP4
0x71a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72f AND
0x730 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x745 AND
0x746 DUP2
0x747 MSTORE
0x748 PUSH1 0x20
0x74a ADD
0x74b SWAP1
0x74c DUP2
0x74d MSTORE
0x74e PUSH1 0x20
0x750 ADD
0x751 PUSH1 0x0
0x753 SHA3
0x754 PUSH1 0x0
0x756 DUP5
0x757 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76c AND
0x76d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x782 AND
0x783 DUP2
0x784 MSTORE
0x785 PUSH1 0x20
0x787 ADD
0x788 SWAP1
0x789 DUP2
0x78a MSTORE
0x78b PUSH1 0x20
0x78d ADD
0x78e PUSH1 0x0
0x790 SHA3
0x791 SLOAD
0x792 SWAP1
0x793 POP
---
0x712: JUMPDEST 
0x713: V362 = 0x0
0x715: V363 = 0x1
0x717: V364 = 0x0
0x71a: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x730: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x745: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x747: M[0x0] = V368
0x748: V369 = 0x20
0x74a: V370 = ADD 0x20 0x0
0x74d: M[0x20] = 0x1
0x74e: V371 = 0x20
0x750: V372 = ADD 0x20 0x20
0x751: V373 = 0x0
0x753: V374 = SHA3 0x0 0x40
0x754: V375 = 0x0
0x757: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x76c: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x76d: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x782: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x784: M[0x0] = V379
0x785: V380 = 0x20
0x787: V381 = ADD 0x20 0x0
0x78a: M[0x20] = V374
0x78b: V382 = 0x20
0x78d: V383 = ADD 0x20 0x20
0x78e: V384 = 0x0
0x790: V385 = SHA3 0x0 0x40
0x791: V386 = S[V385]
---
Entry stack: [V7, 0x1e0, V95, V100]
Stack pops: 2
Stack additions: [S1, S0, V386]
Exit stack: [V7, 0x1e0, V95, V100, V386]

================================

Block 0x794
[0x794:0x799]
---
Predecessors: [0x712]
Successors: [0x1e0]
---
0x794 JUMPDEST
0x795 SWAP3
0x796 SWAP2
0x797 POP
0x798 POP
0x799 JUMP
---
0x794: JUMPDEST 
0x799: JUMP 0x1e0
---
Entry stack: [V7, 0x1e0, V95, V100, V386]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V7, V386]

================================

Block 0x79a
[0x79a:0x7d0]
---
Predecessors: []
Successors: [0x7d1]
Has unresolved jump.
---
0x79a STOP
0x79b LOG1
0x79c PUSH6 0x627a7a723058
0x7a3 SHA3
0x7a4 SWAP14
0x7a5 PUSH21 0x3651875df17e4470ad1108eef140bae082a1e0e2d0
0x7bb MULMOD
0x7bc MISSING 0xd1
0x7bd PUSH17 0x6a3cb0f530000029606060405236156100
0x7cf SWAP8
0x7d0 JUMPI
---
0x79a: STOP 
0x79b: LOG S0 S1 S2
0x79c: V387 = 0x627a7a723058
0x7a3: V388 = SHA3 0x627a7a723058 S3
0x7a5: V389 = 0x3651875df17e4470ad1108eef140bae082a1e0e2d0
0x7bb: V390 = MULMOD 0x3651875df17e4470ad1108eef140bae082a1e0e2d0 S17 S4
0x7bc: MISSING 0xd1
0x7bd: V391 = 0x6a3cb0f530000029606060405236156100
0x7d0: JUMPI S7 S0
---
Entry stack: []
Stack pops: 0
Stack additions: [V390, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V388, S1, S2, S3, S4, S5, S6, 0x6a3cb0f530000029606060405236156100]
Exit stack: []

================================

Block 0x7d1
[0x7d1:0x804]
---
Predecessors: [0x79a]
Successors: [0x805]
---
0x7d1 PUSH1 0x0
0x7d3 CALLDATALOAD
0x7d4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7f2 SWAP1
0x7f3 DIV
0x7f4 PUSH4 0xffffffff
0x7f9 AND
0x7fa DUP1
0x7fb PUSH4 0x6fdde03
0x800 EQ
0x801 PUSH2 0x99
0x804 JUMPI
---
0x7d1: V392 = 0x0
0x7d3: V393 = CALLDATALOAD 0x0
0x7d4: V394 = 0x100000000000000000000000000000000000000000000000000000000
0x7f3: V395 = DIV V393 0x100000000000000000000000000000000000000000000000000000000
0x7f4: V396 = 0xffffffff
0x7f9: V397 = AND 0xffffffff V395
0x7fb: V398 = 0x6fdde03
0x800: V399 = EQ 0x6fdde03 V397
0x801: V400 = 0x99
0x804: THROWI V399
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V397]
Exit stack: [0x6a3cb0f530000029606060405236156100, S5, S4, S3, S2, S1, S0, V397]

================================

Block 0x805
[0x805:0x80f]
---
Predecessors: [0x7d1]
Successors: [0x810]
---
0x805 DUP1
0x806 PUSH4 0x95ea7b3
0x80b EQ
0x80c PUSH2 0x132
0x80f JUMPI
---
0x806: V401 = 0x95ea7b3
0x80b: V402 = EQ 0x95ea7b3 V397
0x80c: V403 = 0x132
0x80f: THROWI V402
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x810
[0x810:0x81a]
---
Predecessors: [0x805]
Successors: [0x81b]
---
0x810 DUP1
0x811 PUSH4 0x18160ddd
0x816 EQ
0x817 PUSH2 0x171
0x81a JUMPI
---
0x811: V404 = 0x18160ddd
0x816: V405 = EQ 0x18160ddd V397
0x817: V406 = 0x171
0x81a: THROWI V405
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x81b
[0x81b:0x825]
---
Predecessors: [0x810]
Successors: [0x826]
---
0x81b DUP1
0x81c PUSH4 0x23b872dd
0x821 EQ
0x822 PUSH2 0x197
0x825 JUMPI
---
0x81c: V407 = 0x23b872dd
0x821: V408 = EQ 0x23b872dd V397
0x822: V409 = 0x197
0x825: THROWI V408
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x826
[0x826:0x830]
---
Predecessors: [0x81b]
Successors: [0x831]
---
0x826 DUP1
0x827 PUSH4 0x313ce567
0x82c EQ
0x82d PUSH2 0x1f5
0x830 JUMPI
---
0x827: V410 = 0x313ce567
0x82c: V411 = EQ 0x313ce567 V397
0x82d: V412 = 0x1f5
0x830: THROWI V411
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x831
[0x831:0x83b]
---
Predecessors: [0x826]
Successors: [0x83c]
---
0x831 DUP1
0x832 PUSH4 0x70a08231
0x837 EQ
0x838 PUSH2 0x221
0x83b JUMPI
---
0x832: V413 = 0x70a08231
0x837: V414 = EQ 0x70a08231 V397
0x838: V415 = 0x221
0x83b: THROWI V414
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x83c
[0x83c:0x846]
---
Predecessors: [0x831]
Successors: [0x847]
---
0x83c DUP1
0x83d PUSH4 0x95d89b41
0x842 EQ
0x843 PUSH2 0x26b
0x846 JUMPI
---
0x83d: V416 = 0x95d89b41
0x842: V417 = EQ 0x95d89b41 V397
0x843: V418 = 0x26b
0x846: THROWI V417
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x847
[0x847:0x851]
---
Predecessors: [0x83c]
Successors: [0x852]
---
0x847 DUP1
0x848 PUSH4 0xa9059cbb
0x84d EQ
0x84e PUSH2 0x304
0x851 JUMPI
---
0x848: V419 = 0xa9059cbb
0x84d: V420 = EQ 0xa9059cbb V397
0x84e: V421 = 0x304
0x851: THROWI V420
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x852
[0x852:0x85c]
---
Predecessors: [0x847]
Successors: [0x85d]
---
0x852 DUP1
0x853 PUSH4 0xdd62ed3e
0x858 EQ
0x859 PUSH2 0x343
0x85c JUMPI
---
0x853: V422 = 0xdd62ed3e
0x858: V423 = EQ 0xdd62ed3e V397
0x859: V424 = 0x343
0x85c: THROWI V423
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]

================================

Block 0x85d
[0x85d:0x865]
---
Predecessors: [0x852]
Successors: [0x866]
---
0x85d JUMPDEST
0x85e INVALID
0x85f JUMPDEST
0x860 CALLVALUE
0x861 ISZERO
0x862 PUSH2 0xa1
0x865 JUMPI
---
0x85d: JUMPDEST 
0x85e: INVALID 
0x85f: JUMPDEST 
0x860: V425 = CALLVALUE
0x861: V426 = ISZERO V425
0x862: V427 = 0xa1
0x865: THROWI V426
---
Entry stack: [0x6a3cb0f530000029606060405236156100, S6, S5, S4, S3, S2, S1, V397]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x866
[0x866:0x86e]
---
Predecessors: [0x85d]
Successors: [0x3ac]
---
0x866 INVALID
0x867 JUMPDEST
0x868 PUSH2 0xa9
0x86b PUSH2 0x3ac
0x86e JUMP
---
0x866: INVALID 
0x867: JUMPDEST 
0x868: V428 = 0xa9
0x86b: V429 = 0x3ac
0x86e: JUMP 0x3ac
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa9]
Exit stack: []

================================

Block 0x86f
[0x86f:0x899]
---
Predecessors: []
Successors: [0x89a]
---
0x86f JUMPDEST
0x870 PUSH1 0x40
0x872 MLOAD
0x873 DUP1
0x874 DUP1
0x875 PUSH1 0x20
0x877 ADD
0x878 DUP3
0x879 DUP2
0x87a SUB
0x87b DUP3
0x87c MSTORE
0x87d DUP4
0x87e DUP2
0x87f DUP2
0x880 MLOAD
0x881 DUP2
0x882 MSTORE
0x883 PUSH1 0x20
0x885 ADD
0x886 SWAP2
0x887 POP
0x888 DUP1
0x889 MLOAD
0x88a SWAP1
0x88b PUSH1 0x20
0x88d ADD
0x88e SWAP1
0x88f DUP1
0x890 DUP4
0x891 DUP4
0x892 PUSH1 0x0
0x894 DUP4
0x895 EQ
0x896 PUSH2 0xf8
0x899 JUMPI
---
0x86f: JUMPDEST 
0x870: V430 = 0x40
0x872: V431 = M[0x40]
0x875: V432 = 0x20
0x877: V433 = ADD 0x20 V431
0x87a: V434 = SUB V433 V431
0x87c: M[V431] = V434
0x880: V435 = M[S0]
0x882: M[V433] = V435
0x883: V436 = 0x20
0x885: V437 = ADD 0x20 V433
0x889: V438 = M[S0]
0x88b: V439 = 0x20
0x88d: V440 = ADD 0x20 S0
0x892: V441 = 0x0
0x895: V442 = EQ V438 0x0
0x896: V443 = 0xf8
0x899: THROWI V442
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V431, V431, V437, V440, V438, V438, V437, V440]
Exit stack: [S0, V431, V431, V437, V440, V438, V438, V437, V440]

================================

Block 0x89a
[0x89a:0x8a7]
---
Predecessors: [0x86f]
Successors: [0x8a8]
---
0x89a JUMPDEST
0x89b DUP1
0x89c MLOAD
0x89d DUP3
0x89e MSTORE
0x89f PUSH1 0x20
0x8a1 DUP4
0x8a2 GT
0x8a3 ISZERO
0x8a4 PUSH2 0xf8
0x8a7 JUMPI
---
0x89a: JUMPDEST 
0x89c: V444 = M[V440]
0x89e: M[V437] = V444
0x89f: V445 = 0x20
0x8a2: V446 = GT V438 0x20
0x8a3: V447 = ISZERO V446
0x8a4: V448 = 0xf8
0x8a7: THROWI V447
---
Entry stack: [S8, V431, V431, V437, V440, V438, V438, V437, V440]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V431, V431, V437, V440, V438, V438, V437, V440]

================================

Block 0x8a8
[0x8a8:0x8d0]
---
Predecessors: [0x89a]
Successors: [0x8d1]
---
0x8a8 PUSH1 0x20
0x8aa DUP3
0x8ab ADD
0x8ac SWAP2
0x8ad POP
0x8ae PUSH1 0x20
0x8b0 DUP2
0x8b1 ADD
0x8b2 SWAP1
0x8b3 POP
0x8b4 PUSH1 0x20
0x8b6 DUP4
0x8b7 SUB
0x8b8 SWAP3
0x8b9 POP
0x8ba PUSH2 0xd4
0x8bd JUMP
0x8be JUMPDEST
0x8bf POP
0x8c0 POP
0x8c1 POP
0x8c2 SWAP1
0x8c3 POP
0x8c4 SWAP1
0x8c5 DUP2
0x8c6 ADD
0x8c7 SWAP1
0x8c8 PUSH1 0x1f
0x8ca AND
0x8cb DUP1
0x8cc ISZERO
0x8cd PUSH2 0x124
0x8d0 JUMPI
---
0x8a8: V449 = 0x20
0x8ab: V450 = ADD V437 0x20
0x8ae: V451 = 0x20
0x8b1: V452 = ADD V440 0x20
0x8b4: V453 = 0x20
0x8b7: V454 = SUB V438 0x20
0x8ba: V455 = 0xd4
0x8bd: THROW 
0x8be: JUMPDEST 
0x8c6: V456 = ADD S3 S5
0x8c8: V457 = 0x1f
0x8ca: V458 = AND 0x1f S3
0x8cc: V459 = ISZERO V458
0x8cd: V460 = 0x124
0x8d0: THROWI V459
---
Entry stack: [S8, V431, V431, V437, V440, V438, V438, V437, V440]
Stack pops: 3
Stack additions: [V458, V456]
Exit stack: []

================================

Block 0x8d1
[0x8d1:0x8e9]
---
Predecessors: [0x8a8]
Successors: [0x8ea]
---
0x8d1 DUP1
0x8d2 DUP3
0x8d3 SUB
0x8d4 DUP1
0x8d5 MLOAD
0x8d6 PUSH1 0x1
0x8d8 DUP4
0x8d9 PUSH1 0x20
0x8db SUB
0x8dc PUSH2 0x100
0x8df EXP
0x8e0 SUB
0x8e1 NOT
0x8e2 AND
0x8e3 DUP2
0x8e4 MSTORE
0x8e5 PUSH1 0x20
0x8e7 ADD
0x8e8 SWAP2
0x8e9 POP
---
0x8d3: V461 = SUB V456 V458
0x8d5: V462 = M[V461]
0x8d6: V463 = 0x1
0x8d9: V464 = 0x20
0x8db: V465 = SUB 0x20 V458
0x8dc: V466 = 0x100
0x8df: V467 = EXP 0x100 V465
0x8e0: V468 = SUB V467 0x1
0x8e1: V469 = NOT V468
0x8e2: V470 = AND V469 V462
0x8e4: M[V461] = V470
0x8e5: V471 = 0x20
0x8e7: V472 = ADD 0x20 V461
---
Entry stack: [V456, V458]
Stack pops: 2
Stack additions: [V472, S0]
Exit stack: [V472, V458]

================================

Block 0x8ea
[0x8ea:0x8fe]
---
Predecessors: [0x8d1]
Successors: [0x8ff]
---
0x8ea JUMPDEST
0x8eb POP
0x8ec SWAP3
0x8ed POP
0x8ee POP
0x8ef POP
0x8f0 PUSH1 0x40
0x8f2 MLOAD
0x8f3 DUP1
0x8f4 SWAP2
0x8f5 SUB
0x8f6 SWAP1
0x8f7 RETURN
0x8f8 JUMPDEST
0x8f9 CALLVALUE
0x8fa ISZERO
0x8fb PUSH2 0x13a
0x8fe JUMPI
---
0x8ea: JUMPDEST 
0x8f0: V473 = 0x40
0x8f2: V474 = M[0x40]
0x8f5: V475 = SUB V472 V474
0x8f7: RETURN V474 V475
0x8f8: JUMPDEST 
0x8f9: V476 = CALLVALUE
0x8fa: V477 = ISZERO V476
0x8fb: V478 = 0x13a
0x8fe: THROWI V477
---
Entry stack: [V472, V458]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x8ff
[0x8ff:0x93d]
---
Predecessors: [0x8ea]
Successors: [0x93e]
---
0x8ff INVALID
0x900 JUMPDEST
0x901 PUSH2 0x16f
0x904 PUSH1 0x4
0x906 DUP1
0x907 DUP1
0x908 CALLDATALOAD
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e AND
0x91f SWAP1
0x920 PUSH1 0x20
0x922 ADD
0x923 SWAP1
0x924 SWAP2
0x925 SWAP1
0x926 DUP1
0x927 CALLDATALOAD
0x928 SWAP1
0x929 PUSH1 0x20
0x92b ADD
0x92c SWAP1
0x92d SWAP2
0x92e SWAP1
0x92f POP
0x930 POP
0x931 PUSH2 0x44a
0x934 JUMP
0x935 JUMPDEST
0x936 STOP
0x937 JUMPDEST
0x938 CALLVALUE
0x939 ISZERO
0x93a PUSH2 0x179
0x93d JUMPI
---
0x8ff: INVALID 
0x900: JUMPDEST 
0x901: V479 = 0x16f
0x904: V480 = 0x4
0x908: V481 = CALLDATALOAD 0x4
0x909: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x920: V484 = 0x20
0x922: V485 = ADD 0x20 0x4
0x927: V486 = CALLDATALOAD 0x24
0x929: V487 = 0x20
0x92b: V488 = ADD 0x20 0x24
0x931: V489 = 0x44a
0x934: THROW 
0x935: JUMPDEST 
0x936: STOP 
0x937: JUMPDEST 
0x938: V490 = CALLVALUE
0x939: V491 = ISZERO V490
0x93a: V492 = 0x179
0x93d: THROWI V491
---
Entry stack: []
Stack pops: 0
Stack additions: [V486, V483, 0x16f]
Exit stack: []

================================

Block 0x93e
[0x93e:0x963]
---
Predecessors: [0x8ff]
Successors: [0x964]
---
0x93e INVALID
0x93f JUMPDEST
0x940 PUSH2 0x181
0x943 PUSH2 0x535
0x946 JUMP
0x947 JUMPDEST
0x948 PUSH1 0x40
0x94a MLOAD
0x94b DUP1
0x94c DUP3
0x94d DUP2
0x94e MSTORE
0x94f PUSH1 0x20
0x951 ADD
0x952 SWAP2
0x953 POP
0x954 POP
0x955 PUSH1 0x40
0x957 MLOAD
0x958 DUP1
0x959 SWAP2
0x95a SUB
0x95b SWAP1
0x95c RETURN
0x95d JUMPDEST
0x95e CALLVALUE
0x95f ISZERO
0x960 PUSH2 0x19f
0x963 JUMPI
---
0x93e: INVALID 
0x93f: JUMPDEST 
0x940: V493 = 0x181
0x943: V494 = 0x535
0x946: THROW 
0x947: JUMPDEST 
0x948: V495 = 0x40
0x94a: V496 = M[0x40]
0x94e: M[V496] = S0
0x94f: V497 = 0x20
0x951: V498 = ADD 0x20 V496
0x955: V499 = 0x40
0x957: V500 = M[0x40]
0x95a: V501 = SUB V498 V500
0x95c: RETURN V500 V501
0x95d: JUMPDEST 
0x95e: V502 = CALLVALUE
0x95f: V503 = ISZERO V502
0x960: V504 = 0x19f
0x963: THROWI V503
---
Entry stack: []
Stack pops: 0
Stack additions: [0x181]
Exit stack: []

================================

Block 0x964
[0x964:0x9c1]
---
Predecessors: [0x93e]
Successors: [0x9c2]
---
0x964 INVALID
0x965 JUMPDEST
0x966 PUSH2 0x1f3
0x969 PUSH1 0x4
0x96b DUP1
0x96c DUP1
0x96d CALLDATALOAD
0x96e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x983 AND
0x984 SWAP1
0x985 PUSH1 0x20
0x987 ADD
0x988 SWAP1
0x989 SWAP2
0x98a SWAP1
0x98b DUP1
0x98c CALLDATALOAD
0x98d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a2 AND
0x9a3 SWAP1
0x9a4 PUSH1 0x20
0x9a6 ADD
0x9a7 SWAP1
0x9a8 SWAP2
0x9a9 SWAP1
0x9aa DUP1
0x9ab CALLDATALOAD
0x9ac SWAP1
0x9ad PUSH1 0x20
0x9af ADD
0x9b0 SWAP1
0x9b1 SWAP2
0x9b2 SWAP1
0x9b3 POP
0x9b4 POP
0x9b5 PUSH2 0x53b
0x9b8 JUMP
0x9b9 JUMPDEST
0x9ba STOP
0x9bb JUMPDEST
0x9bc CALLVALUE
0x9bd ISZERO
0x9be PUSH2 0x1fd
0x9c1 JUMPI
---
0x964: INVALID 
0x965: JUMPDEST 
0x966: V505 = 0x1f3
0x969: V506 = 0x4
0x96d: V507 = CALLDATALOAD 0x4
0x96e: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x983: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x985: V510 = 0x20
0x987: V511 = ADD 0x20 0x4
0x98c: V512 = CALLDATALOAD 0x24
0x98d: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a2: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V512
0x9a4: V515 = 0x20
0x9a6: V516 = ADD 0x20 0x24
0x9ab: V517 = CALLDATALOAD 0x44
0x9ad: V518 = 0x20
0x9af: V519 = ADD 0x20 0x44
0x9b5: V520 = 0x53b
0x9b8: THROW 
0x9b9: JUMPDEST 
0x9ba: STOP 
0x9bb: JUMPDEST 
0x9bc: V521 = CALLVALUE
0x9bd: V522 = ISZERO V521
0x9be: V523 = 0x1fd
0x9c1: THROWI V522
---
Entry stack: []
Stack pops: 0
Stack additions: [V517, V514, V509, 0x1f3]
Exit stack: []

================================

Block 0x9c2
[0x9c2:0x9ed]
---
Predecessors: [0x964]
Successors: [0x9ee]
---
0x9c2 INVALID
0x9c3 JUMPDEST
0x9c4 PUSH2 0x205
0x9c7 PUSH2 0x7ad
0x9ca JUMP
0x9cb JUMPDEST
0x9cc PUSH1 0x40
0x9ce MLOAD
0x9cf DUP1
0x9d0 DUP3
0x9d1 PUSH1 0xff
0x9d3 AND
0x9d4 PUSH1 0xff
0x9d6 AND
0x9d7 DUP2
0x9d8 MSTORE
0x9d9 PUSH1 0x20
0x9db ADD
0x9dc SWAP2
0x9dd POP
0x9de POP
0x9df PUSH1 0x40
0x9e1 MLOAD
0x9e2 DUP1
0x9e3 SWAP2
0x9e4 SUB
0x9e5 SWAP1
0x9e6 RETURN
0x9e7 JUMPDEST
0x9e8 CALLVALUE
0x9e9 ISZERO
0x9ea PUSH2 0x229
0x9ed JUMPI
---
0x9c2: INVALID 
0x9c3: JUMPDEST 
0x9c4: V524 = 0x205
0x9c7: V525 = 0x7ad
0x9ca: THROW 
0x9cb: JUMPDEST 
0x9cc: V526 = 0x40
0x9ce: V527 = M[0x40]
0x9d1: V528 = 0xff
0x9d3: V529 = AND 0xff S0
0x9d4: V530 = 0xff
0x9d6: V531 = AND 0xff V529
0x9d8: M[V527] = V531
0x9d9: V532 = 0x20
0x9db: V533 = ADD 0x20 V527
0x9df: V534 = 0x40
0x9e1: V535 = M[0x40]
0x9e4: V536 = SUB V533 V535
0x9e6: RETURN V535 V536
0x9e7: JUMPDEST 
0x9e8: V537 = CALLVALUE
0x9e9: V538 = ISZERO V537
0x9ea: V539 = 0x229
0x9ed: THROWI V538
---
Entry stack: []
Stack pops: 0
Stack additions: [0x205]
Exit stack: []

================================

Block 0x9ee
[0x9ee:0xa37]
---
Predecessors: [0x9c2]
Successors: [0xa38]
---
0x9ee INVALID
0x9ef JUMPDEST
0x9f0 PUSH2 0x255
0x9f3 PUSH1 0x4
0x9f5 DUP1
0x9f6 DUP1
0x9f7 CALLDATALOAD
0x9f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0d AND
0xa0e SWAP1
0xa0f PUSH1 0x20
0xa11 ADD
0xa12 SWAP1
0xa13 SWAP2
0xa14 SWAP1
0xa15 POP
0xa16 POP
0xa17 PUSH2 0x7c0
0xa1a JUMP
0xa1b JUMPDEST
0xa1c PUSH1 0x40
0xa1e MLOAD
0xa1f DUP1
0xa20 DUP3
0xa21 DUP2
0xa22 MSTORE
0xa23 PUSH1 0x20
0xa25 ADD
0xa26 SWAP2
0xa27 POP
0xa28 POP
0xa29 PUSH1 0x40
0xa2b MLOAD
0xa2c DUP1
0xa2d SWAP2
0xa2e SUB
0xa2f SWAP1
0xa30 RETURN
0xa31 JUMPDEST
0xa32 CALLVALUE
0xa33 ISZERO
0xa34 PUSH2 0x273
0xa37 JUMPI
---
0x9ee: INVALID 
0x9ef: JUMPDEST 
0x9f0: V540 = 0x255
0x9f3: V541 = 0x4
0x9f7: V542 = CALLDATALOAD 0x4
0x9f8: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0d: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0xa0f: V545 = 0x20
0xa11: V546 = ADD 0x20 0x4
0xa17: V547 = 0x7c0
0xa1a: THROW 
0xa1b: JUMPDEST 
0xa1c: V548 = 0x40
0xa1e: V549 = M[0x40]
0xa22: M[V549] = S0
0xa23: V550 = 0x20
0xa25: V551 = ADD 0x20 V549
0xa29: V552 = 0x40
0xa2b: V553 = M[0x40]
0xa2e: V554 = SUB V551 V553
0xa30: RETURN V553 V554
0xa31: JUMPDEST 
0xa32: V555 = CALLVALUE
0xa33: V556 = ISZERO V555
0xa34: V557 = 0x273
0xa37: THROWI V556
---
Entry stack: []
Stack pops: 0
Stack additions: [V544, 0x255]
Exit stack: []

================================

Block 0xa38
[0xa38:0xa6b]
---
Predecessors: [0x9ee]
Successors: [0xa6c]
---
0xa38 INVALID
0xa39 JUMPDEST
0xa3a PUSH2 0x27b
0xa3d PUSH2 0x80a
0xa40 JUMP
0xa41 JUMPDEST
0xa42 PUSH1 0x40
0xa44 MLOAD
0xa45 DUP1
0xa46 DUP1
0xa47 PUSH1 0x20
0xa49 ADD
0xa4a DUP3
0xa4b DUP2
0xa4c SUB
0xa4d DUP3
0xa4e MSTORE
0xa4f DUP4
0xa50 DUP2
0xa51 DUP2
0xa52 MLOAD
0xa53 DUP2
0xa54 MSTORE
0xa55 PUSH1 0x20
0xa57 ADD
0xa58 SWAP2
0xa59 POP
0xa5a DUP1
0xa5b MLOAD
0xa5c SWAP1
0xa5d PUSH1 0x20
0xa5f ADD
0xa60 SWAP1
0xa61 DUP1
0xa62 DUP4
0xa63 DUP4
0xa64 PUSH1 0x0
0xa66 DUP4
0xa67 EQ
0xa68 PUSH2 0x2ca
0xa6b JUMPI
---
0xa38: INVALID 
0xa39: JUMPDEST 
0xa3a: V558 = 0x27b
0xa3d: V559 = 0x80a
0xa40: THROW 
0xa41: JUMPDEST 
0xa42: V560 = 0x40
0xa44: V561 = M[0x40]
0xa47: V562 = 0x20
0xa49: V563 = ADD 0x20 V561
0xa4c: V564 = SUB V563 V561
0xa4e: M[V561] = V564
0xa52: V565 = M[S0]
0xa54: M[V563] = V565
0xa55: V566 = 0x20
0xa57: V567 = ADD 0x20 V563
0xa5b: V568 = M[S0]
0xa5d: V569 = 0x20
0xa5f: V570 = ADD 0x20 S0
0xa64: V571 = 0x0
0xa67: V572 = EQ V568 0x0
0xa68: V573 = 0x2ca
0xa6b: THROWI V572
---
Entry stack: []
Stack pops: 0
Stack additions: [0x27b, V570, V567, V568, V568, V570, V567, V561, V561, S0]
Exit stack: []

================================

Block 0xa6c
[0xa6c:0xa79]
---
Predecessors: [0xa38]
Successors: [0xa7a]
---
0xa6c JUMPDEST
0xa6d DUP1
0xa6e MLOAD
0xa6f DUP3
0xa70 MSTORE
0xa71 PUSH1 0x20
0xa73 DUP4
0xa74 GT
0xa75 ISZERO
0xa76 PUSH2 0x2ca
0xa79 JUMPI
---
0xa6c: JUMPDEST 
0xa6e: V574 = M[V570]
0xa70: M[V567] = V574
0xa71: V575 = 0x20
0xa74: V576 = GT V568 0x20
0xa75: V577 = ISZERO V576
0xa76: V578 = 0x2ca
0xa79: THROWI V577
---
Entry stack: [S8, V561, V561, V567, V570, V568, V568, V567, V570]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V561, V561, V567, V570, V568, V568, V567, V570]

================================

Block 0xa7a
[0xa7a:0xaa2]
---
Predecessors: [0xa6c]
Successors: [0xaa3]
---
0xa7a PUSH1 0x20
0xa7c DUP3
0xa7d ADD
0xa7e SWAP2
0xa7f POP
0xa80 PUSH1 0x20
0xa82 DUP2
0xa83 ADD
0xa84 SWAP1
0xa85 POP
0xa86 PUSH1 0x20
0xa88 DUP4
0xa89 SUB
0xa8a SWAP3
0xa8b POP
0xa8c PUSH2 0x2a6
0xa8f JUMP
0xa90 JUMPDEST
0xa91 POP
0xa92 POP
0xa93 POP
0xa94 SWAP1
0xa95 POP
0xa96 SWAP1
0xa97 DUP2
0xa98 ADD
0xa99 SWAP1
0xa9a PUSH1 0x1f
0xa9c AND
0xa9d DUP1
0xa9e ISZERO
0xa9f PUSH2 0x2f6
0xaa2 JUMPI
---
0xa7a: V579 = 0x20
0xa7d: V580 = ADD V567 0x20
0xa80: V581 = 0x20
0xa83: V582 = ADD V570 0x20
0xa86: V583 = 0x20
0xa89: V584 = SUB V568 0x20
0xa8c: V585 = 0x2a6
0xa8f: THROW 
0xa90: JUMPDEST 
0xa98: V586 = ADD S3 S5
0xa9a: V587 = 0x1f
0xa9c: V588 = AND 0x1f S3
0xa9e: V589 = ISZERO V588
0xa9f: V590 = 0x2f6
0xaa2: THROWI V589
---
Entry stack: [S8, V561, V561, V567, V570, V568, V568, V567, V570]
Stack pops: 3
Stack additions: [V588, V586]
Exit stack: []

================================

Block 0xaa3
[0xaa3:0xabb]
---
Predecessors: [0xa7a]
Successors: [0xabc]
---
0xaa3 DUP1
0xaa4 DUP3
0xaa5 SUB
0xaa6 DUP1
0xaa7 MLOAD
0xaa8 PUSH1 0x1
0xaaa DUP4
0xaab PUSH1 0x20
0xaad SUB
0xaae PUSH2 0x100
0xab1 EXP
0xab2 SUB
0xab3 NOT
0xab4 AND
0xab5 DUP2
0xab6 MSTORE
0xab7 PUSH1 0x20
0xab9 ADD
0xaba SWAP2
0xabb POP
---
0xaa5: V591 = SUB V586 V588
0xaa7: V592 = M[V591]
0xaa8: V593 = 0x1
0xaab: V594 = 0x20
0xaad: V595 = SUB 0x20 V588
0xaae: V596 = 0x100
0xab1: V597 = EXP 0x100 V595
0xab2: V598 = SUB V597 0x1
0xab3: V599 = NOT V598
0xab4: V600 = AND V599 V592
0xab6: M[V591] = V600
0xab7: V601 = 0x20
0xab9: V602 = ADD 0x20 V591
---
Entry stack: [V586, V588]
Stack pops: 2
Stack additions: [V602, S0]
Exit stack: [V602, V588]

================================

Block 0xabc
[0xabc:0xad0]
---
Predecessors: [0xaa3]
Successors: [0xad1]
---
0xabc JUMPDEST
0xabd POP
0xabe SWAP3
0xabf POP
0xac0 POP
0xac1 POP
0xac2 PUSH1 0x40
0xac4 MLOAD
0xac5 DUP1
0xac6 SWAP2
0xac7 SUB
0xac8 SWAP1
0xac9 RETURN
0xaca JUMPDEST
0xacb CALLVALUE
0xacc ISZERO
0xacd PUSH2 0x30c
0xad0 JUMPI
---
0xabc: JUMPDEST 
0xac2: V603 = 0x40
0xac4: V604 = M[0x40]
0xac7: V605 = SUB V602 V604
0xac9: RETURN V604 V605
0xaca: JUMPDEST 
0xacb: V606 = CALLVALUE
0xacc: V607 = ISZERO V606
0xacd: V608 = 0x30c
0xad0: THROWI V607
---
Entry stack: [V602, V588]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0xad1
[0xad1:0xb0f]
---
Predecessors: [0xabc]
Successors: [0xb10]
---
0xad1 INVALID
0xad2 JUMPDEST
0xad3 PUSH2 0x341
0xad6 PUSH1 0x4
0xad8 DUP1
0xad9 DUP1
0xada CALLDATALOAD
0xadb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf0 AND
0xaf1 SWAP1
0xaf2 PUSH1 0x20
0xaf4 ADD
0xaf5 SWAP1
0xaf6 SWAP2
0xaf7 SWAP1
0xaf8 DUP1
0xaf9 CALLDATALOAD
0xafa SWAP1
0xafb PUSH1 0x20
0xafd ADD
0xafe SWAP1
0xaff SWAP2
0xb00 SWAP1
0xb01 POP
0xb02 POP
0xb03 PUSH2 0x8a8
0xb06 JUMP
0xb07 JUMPDEST
0xb08 STOP
0xb09 JUMPDEST
0xb0a CALLVALUE
0xb0b ISZERO
0xb0c PUSH2 0x34b
0xb0f JUMPI
---
0xad1: INVALID 
0xad2: JUMPDEST 
0xad3: V609 = 0x341
0xad6: V610 = 0x4
0xada: V611 = CALLDATALOAD 0x4
0xadb: V612 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf0: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0xaf2: V614 = 0x20
0xaf4: V615 = ADD 0x20 0x4
0xaf9: V616 = CALLDATALOAD 0x24
0xafb: V617 = 0x20
0xafd: V618 = ADD 0x20 0x24
0xb03: V619 = 0x8a8
0xb06: THROW 
0xb07: JUMPDEST 
0xb08: STOP 
0xb09: JUMPDEST 
0xb0a: V620 = CALLVALUE
0xb0b: V621 = ISZERO V620
0xb0c: V622 = 0x34b
0xb0f: THROWI V621
---
Entry stack: []
Stack pops: 0
Stack additions: [V616, V613, 0x341]
Exit stack: []

================================

Block 0xb10
[0xb10:0xbc1]
---
Predecessors: [0xad1]
Successors: [0xbc2]
---
0xb10 INVALID
0xb11 JUMPDEST
0xb12 PUSH2 0x396
0xb15 PUSH1 0x4
0xb17 DUP1
0xb18 DUP1
0xb19 CALLDATALOAD
0xb1a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2f AND
0xb30 SWAP1
0xb31 PUSH1 0x20
0xb33 ADD
0xb34 SWAP1
0xb35 SWAP2
0xb36 SWAP1
0xb37 DUP1
0xb38 CALLDATALOAD
0xb39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4e AND
0xb4f SWAP1
0xb50 PUSH1 0x20
0xb52 ADD
0xb53 SWAP1
0xb54 SWAP2
0xb55 SWAP1
0xb56 POP
0xb57 POP
0xb58 PUSH2 0xa1d
0xb5b JUMP
0xb5c JUMPDEST
0xb5d PUSH1 0x40
0xb5f MLOAD
0xb60 DUP1
0xb61 DUP3
0xb62 DUP2
0xb63 MSTORE
0xb64 PUSH1 0x20
0xb66 ADD
0xb67 SWAP2
0xb68 POP
0xb69 POP
0xb6a PUSH1 0x40
0xb6c MLOAD
0xb6d DUP1
0xb6e SWAP2
0xb6f SUB
0xb70 SWAP1
0xb71 RETURN
0xb72 JUMPDEST
0xb73 PUSH1 0x2
0xb75 DUP1
0xb76 SLOAD
0xb77 PUSH1 0x1
0xb79 DUP2
0xb7a PUSH1 0x1
0xb7c AND
0xb7d ISZERO
0xb7e PUSH2 0x100
0xb81 MUL
0xb82 SUB
0xb83 AND
0xb84 PUSH1 0x2
0xb86 SWAP1
0xb87 DIV
0xb88 DUP1
0xb89 PUSH1 0x1f
0xb8b ADD
0xb8c PUSH1 0x20
0xb8e DUP1
0xb8f SWAP2
0xb90 DIV
0xb91 MUL
0xb92 PUSH1 0x20
0xb94 ADD
0xb95 PUSH1 0x40
0xb97 MLOAD
0xb98 SWAP1
0xb99 DUP2
0xb9a ADD
0xb9b PUSH1 0x40
0xb9d MSTORE
0xb9e DUP1
0xb9f SWAP3
0xba0 SWAP2
0xba1 SWAP1
0xba2 DUP2
0xba3 DUP2
0xba4 MSTORE
0xba5 PUSH1 0x20
0xba7 ADD
0xba8 DUP3
0xba9 DUP1
0xbaa SLOAD
0xbab PUSH1 0x1
0xbad DUP2
0xbae PUSH1 0x1
0xbb0 AND
0xbb1 ISZERO
0xbb2 PUSH2 0x100
0xbb5 MUL
0xbb6 SUB
0xbb7 AND
0xbb8 PUSH1 0x2
0xbba SWAP1
0xbbb DIV
0xbbc DUP1
0xbbd ISZERO
0xbbe PUSH2 0x442
0xbc1 JUMPI
---
0xb10: INVALID 
0xb11: JUMPDEST 
0xb12: V623 = 0x396
0xb15: V624 = 0x4
0xb19: V625 = CALLDATALOAD 0x4
0xb1a: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2f: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0xb31: V628 = 0x20
0xb33: V629 = ADD 0x20 0x4
0xb38: V630 = CALLDATALOAD 0x24
0xb39: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4e: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0xb50: V633 = 0x20
0xb52: V634 = ADD 0x20 0x24
0xb58: V635 = 0xa1d
0xb5b: THROW 
0xb5c: JUMPDEST 
0xb5d: V636 = 0x40
0xb5f: V637 = M[0x40]
0xb63: M[V637] = S0
0xb64: V638 = 0x20
0xb66: V639 = ADD 0x20 V637
0xb6a: V640 = 0x40
0xb6c: V641 = M[0x40]
0xb6f: V642 = SUB V639 V641
0xb71: RETURN V641 V642
0xb72: JUMPDEST 
0xb73: V643 = 0x2
0xb76: V644 = S[0x2]
0xb77: V645 = 0x1
0xb7a: V646 = 0x1
0xb7c: V647 = AND 0x1 V644
0xb7d: V648 = ISZERO V647
0xb7e: V649 = 0x100
0xb81: V650 = MUL 0x100 V648
0xb82: V651 = SUB V650 0x1
0xb83: V652 = AND V651 V644
0xb84: V653 = 0x2
0xb87: V654 = DIV V652 0x2
0xb89: V655 = 0x1f
0xb8b: V656 = ADD 0x1f V654
0xb8c: V657 = 0x20
0xb90: V658 = DIV V656 0x20
0xb91: V659 = MUL V658 0x20
0xb92: V660 = 0x20
0xb94: V661 = ADD 0x20 V659
0xb95: V662 = 0x40
0xb97: V663 = M[0x40]
0xb9a: V664 = ADD V663 V661
0xb9b: V665 = 0x40
0xb9d: M[0x40] = V664
0xba4: M[V663] = V654
0xba5: V666 = 0x20
0xba7: V667 = ADD 0x20 V663
0xbaa: V668 = S[0x2]
0xbab: V669 = 0x1
0xbae: V670 = 0x1
0xbb0: V671 = AND 0x1 V668
0xbb1: V672 = ISZERO V671
0xbb2: V673 = 0x100
0xbb5: V674 = MUL 0x100 V672
0xbb6: V675 = SUB V674 0x1
0xbb7: V676 = AND V675 V668
0xbb8: V677 = 0x2
0xbbb: V678 = DIV V676 0x2
0xbbd: V679 = ISZERO V678
0xbbe: V680 = 0x442
0xbc1: THROWI V679
---
Entry stack: []
Stack pops: 0
Stack additions: [V632, V627, 0x396, V678, 0x2, V667, V654, 0x2, V663]
Exit stack: []

================================

Block 0xbc2
[0xbc2:0xbc9]
---
Predecessors: [0xb10]
Successors: [0xbca]
---
0xbc2 DUP1
0xbc3 PUSH1 0x1f
0xbc5 LT
0xbc6 PUSH2 0x417
0xbc9 JUMPI
---
0xbc3: V681 = 0x1f
0xbc5: V682 = LT 0x1f V678
0xbc6: V683 = 0x417
0xbc9: THROWI V682
---
Entry stack: [V663, 0x2, V654, V667, 0x2, V678]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V663, 0x2, V654, V667, 0x2, V678]

================================

Block 0xbca
[0xbca:0xbea]
---
Predecessors: [0xbc2]
Successors: [0xbeb]
---
0xbca PUSH2 0x100
0xbcd DUP1
0xbce DUP4
0xbcf SLOAD
0xbd0 DIV
0xbd1 MUL
0xbd2 DUP4
0xbd3 MSTORE
0xbd4 SWAP2
0xbd5 PUSH1 0x20
0xbd7 ADD
0xbd8 SWAP2
0xbd9 PUSH2 0x442
0xbdc JUMP
0xbdd JUMPDEST
0xbde DUP3
0xbdf ADD
0xbe0 SWAP2
0xbe1 SWAP1
0xbe2 PUSH1 0x0
0xbe4 MSTORE
0xbe5 PUSH1 0x20
0xbe7 PUSH1 0x0
0xbe9 SHA3
0xbea SWAP1
---
0xbca: V684 = 0x100
0xbcf: V685 = S[0x2]
0xbd0: V686 = DIV V685 0x100
0xbd1: V687 = MUL V686 0x100
0xbd3: M[V667] = V687
0xbd5: V688 = 0x20
0xbd7: V689 = ADD 0x20 V667
0xbd9: V690 = 0x442
0xbdc: THROW 
0xbdd: JUMPDEST 
0xbdf: V691 = ADD S2 S0
0xbe2: V692 = 0x0
0xbe4: M[0x0] = S1
0xbe5: V693 = 0x20
0xbe7: V694 = 0x0
0xbe9: V695 = SHA3 0x0 0x20
---
Entry stack: [V663, 0x2, V654, V667, 0x2, V678]
Stack pops: 3
Stack additions: [S2, V695, V691]
Exit stack: []

================================

Block 0xbeb
[0xbeb:0xbfe]
---
Predecessors: [0xbca]
Successors: [0xbff]
---
0xbeb JUMPDEST
0xbec DUP2
0xbed SLOAD
0xbee DUP2
0xbef MSTORE
0xbf0 SWAP1
0xbf1 PUSH1 0x1
0xbf3 ADD
0xbf4 SWAP1
0xbf5 PUSH1 0x20
0xbf7 ADD
0xbf8 DUP1
0xbf9 DUP4
0xbfa GT
0xbfb PUSH2 0x425
0xbfe JUMPI
---
0xbeb: JUMPDEST 
0xbed: V696 = S[V695]
0xbef: M[S0] = V696
0xbf1: V697 = 0x1
0xbf3: V698 = ADD 0x1 V695
0xbf5: V699 = 0x20
0xbf7: V700 = ADD 0x20 S0
0xbfa: V701 = GT V691 V700
0xbfb: V702 = 0x425
0xbfe: THROWI V701
---
Entry stack: [V691, V695, S0]
Stack pops: 3
Stack additions: [S2, V698, V700]
Exit stack: [V691, V698, V700]

================================

Block 0xbff
[0xbff:0xc07]
---
Predecessors: [0xbeb]
Successors: [0xc08]
---
0xbff DUP3
0xc00 SWAP1
0xc01 SUB
0xc02 PUSH1 0x1f
0xc04 AND
0xc05 DUP3
0xc06 ADD
0xc07 SWAP2
---
0xc01: V703 = SUB V700 V691
0xc02: V704 = 0x1f
0xc04: V705 = AND 0x1f V703
0xc06: V706 = ADD V691 V705
---
Entry stack: [V691, V698, V700]
Stack pops: 3
Stack additions: [V706, S1, S2]
Exit stack: [V706, V698, V691]

================================

Block 0xc08
[0xc08:0xcf6]
---
Predecessors: [0xbff]
Successors: [0xcf7]
---
0xc08 JUMPDEST
0xc09 POP
0xc0a POP
0xc0b POP
0xc0c POP
0xc0d POP
0xc0e DUP2
0xc0f JUMP
0xc10 JUMPDEST
0xc11 DUP1
0xc12 PUSH1 0x1
0xc14 PUSH1 0x0
0xc16 CALLER
0xc17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2c AND
0xc2d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc42 AND
0xc43 DUP2
0xc44 MSTORE
0xc45 PUSH1 0x20
0xc47 ADD
0xc48 SWAP1
0xc49 DUP2
0xc4a MSTORE
0xc4b PUSH1 0x20
0xc4d ADD
0xc4e PUSH1 0x0
0xc50 SHA3
0xc51 PUSH1 0x0
0xc53 DUP5
0xc54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc69 AND
0xc6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7f AND
0xc80 DUP2
0xc81 MSTORE
0xc82 PUSH1 0x20
0xc84 ADD
0xc85 SWAP1
0xc86 DUP2
0xc87 MSTORE
0xc88 PUSH1 0x20
0xc8a ADD
0xc8b PUSH1 0x0
0xc8d SHA3
0xc8e DUP2
0xc8f SWAP1
0xc90 SSTORE
0xc91 POP
0xc92 DUP2
0xc93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca8 AND
0xca9 CALLER
0xcaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbf AND
0xcc0 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xce1 DUP4
0xce2 PUSH1 0x40
0xce4 MLOAD
0xce5 DUP1
0xce6 DUP3
0xce7 DUP2
0xce8 MSTORE
0xce9 PUSH1 0x20
0xceb ADD
0xcec SWAP2
0xced POP
0xcee POP
0xcef PUSH1 0x40
0xcf1 MLOAD
0xcf2 DUP1
0xcf3 SWAP2
0xcf4 SUB
0xcf5 SWAP1
0xcf6 LOG3
---
0xc08: JUMPDEST 
0xc0f: JUMP S6
0xc10: JUMPDEST 
0xc12: V707 = 0x1
0xc14: V708 = 0x0
0xc16: V709 = CALLER
0xc17: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2c: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0xc2d: V712 = 0xffffffffffffffffffffffffffffffffffffffff
0xc42: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0xc44: M[0x0] = V713
0xc45: V714 = 0x20
0xc47: V715 = ADD 0x20 0x0
0xc4a: M[0x20] = 0x1
0xc4b: V716 = 0x20
0xc4d: V717 = ADD 0x20 0x20
0xc4e: V718 = 0x0
0xc50: V719 = SHA3 0x0 0x40
0xc51: V720 = 0x0
0xc54: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xc69: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xc6a: V723 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7f: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0xc81: M[0x0] = V724
0xc82: V725 = 0x20
0xc84: V726 = ADD 0x20 0x0
0xc87: M[0x20] = V719
0xc88: V727 = 0x20
0xc8a: V728 = ADD 0x20 0x20
0xc8b: V729 = 0x0
0xc8d: V730 = SHA3 0x0 0x40
0xc90: S[V730] = S0
0xc93: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0xca8: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xca9: V733 = CALLER
0xcaa: V734 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbf: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0xcc0: V736 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xce2: V737 = 0x40
0xce4: V738 = M[0x40]
0xce8: M[V738] = S0
0xce9: V739 = 0x20
0xceb: V740 = ADD 0x20 V738
0xcef: V741 = 0x40
0xcf1: V742 = M[0x40]
0xcf4: V743 = SUB V740 V742
0xcf6: LOG V742 V743 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V735 V732
---
Entry stack: [V706, V698, V691]
Stack pops: 12
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xcf7
[0xcf7:0xd4a]
---
Predecessors: [0xc08]
Successors: [0xd4b]
---
0xcf7 JUMPDEST
0xcf8 POP
0xcf9 POP
0xcfa JUMP
0xcfb JUMPDEST
0xcfc PUSH1 0x5
0xcfe SLOAD
0xcff DUP2
0xd00 JUMP
0xd01 JUMPDEST
0xd02 DUP1
0xd03 PUSH1 0x0
0xd05 PUSH1 0x0
0xd07 DUP6
0xd08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1d AND
0xd1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd33 AND
0xd34 DUP2
0xd35 MSTORE
0xd36 PUSH1 0x20
0xd38 ADD
0xd39 SWAP1
0xd3a DUP2
0xd3b MSTORE
0xd3c PUSH1 0x20
0xd3e ADD
0xd3f PUSH1 0x0
0xd41 SHA3
0xd42 SLOAD
0xd43 LT
0xd44 ISZERO
0xd45 DUP1
0xd46 ISZERO
0xd47 PUSH2 0x606
0xd4a JUMPI
---
0xcf7: JUMPDEST 
0xcfa: JUMP S2
0xcfb: JUMPDEST 
0xcfc: V744 = 0x5
0xcfe: V745 = S[0x5]
0xd00: JUMP S0
0xd01: JUMPDEST 
0xd03: V746 = 0x0
0xd05: V747 = 0x0
0xd08: V748 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1d: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd1e: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0xd33: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0xd35: M[0x0] = V751
0xd36: V752 = 0x20
0xd38: V753 = ADD 0x20 0x0
0xd3b: M[0x20] = 0x0
0xd3c: V754 = 0x20
0xd3e: V755 = ADD 0x20 0x20
0xd3f: V756 = 0x0
0xd41: V757 = SHA3 0x0 0x40
0xd42: V758 = S[V757]
0xd43: V759 = LT V758 S0
0xd44: V760 = ISZERO V759
0xd46: V761 = ISZERO V760
0xd47: V762 = 0x606
0xd4a: THROWI V761
---
Entry stack: [S1, S0]
Stack pops: 10
Stack additions: [V760, S0, S1, S2]
Exit stack: []

================================

Block 0xd4b
[0xd4b:0xdcb]
---
Predecessors: [0xcf7]
Successors: [0xdcc]
---
0xd4b POP
0xd4c DUP1
0xd4d PUSH1 0x1
0xd4f PUSH1 0x0
0xd51 DUP6
0xd52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd67 AND
0xd68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7d AND
0xd7e DUP2
0xd7f MSTORE
0xd80 PUSH1 0x20
0xd82 ADD
0xd83 SWAP1
0xd84 DUP2
0xd85 MSTORE
0xd86 PUSH1 0x20
0xd88 ADD
0xd89 PUSH1 0x0
0xd8b SHA3
0xd8c PUSH1 0x0
0xd8e CALLER
0xd8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda4 AND
0xda5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdba AND
0xdbb DUP2
0xdbc MSTORE
0xdbd PUSH1 0x20
0xdbf ADD
0xdc0 SWAP1
0xdc1 DUP2
0xdc2 MSTORE
0xdc3 PUSH1 0x20
0xdc5 ADD
0xdc6 PUSH1 0x0
0xdc8 SHA3
0xdc9 SLOAD
0xdca LT
0xdcb ISZERO
---
0xd4d: V763 = 0x1
0xd4f: V764 = 0x0
0xd52: V765 = 0xffffffffffffffffffffffffffffffffffffffff
0xd67: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd68: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7d: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V766
0xd7f: M[0x0] = V768
0xd80: V769 = 0x20
0xd82: V770 = ADD 0x20 0x0
0xd85: M[0x20] = 0x1
0xd86: V771 = 0x20
0xd88: V772 = ADD 0x20 0x20
0xd89: V773 = 0x0
0xd8b: V774 = SHA3 0x0 0x40
0xd8c: V775 = 0x0
0xd8e: V776 = CALLER
0xd8f: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xda4: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0xda5: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xdba: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0xdbc: M[0x0] = V780
0xdbd: V781 = 0x20
0xdbf: V782 = ADD 0x20 0x0
0xdc2: M[0x20] = V774
0xdc3: V783 = 0x20
0xdc5: V784 = ADD 0x20 0x20
0xdc6: V785 = 0x0
0xdc8: V786 = SHA3 0x0 0x40
0xdc9: V787 = S[V786]
0xdca: V788 = LT V787 S1
0xdcb: V789 = ISZERO V788
---
Entry stack: [S3, S2, S1, V760]
Stack pops: 4
Stack additions: [S3, S2, S1, V789]
Exit stack: [S3, S2, S1, V789]

================================

Block 0xdcc
[0xdcc:0xdd2]
---
Predecessors: [0xd4b]
Successors: [0xdd3]
---
0xdcc JUMPDEST
0xdcd DUP1
0xdce ISZERO
0xdcf PUSH2 0x612
0xdd2 JUMPI
---
0xdcc: JUMPDEST 
0xdce: V790 = ISZERO V789
0xdcf: V791 = 0x612
0xdd2: THROWI V790
---
Entry stack: [S3, S2, S1, V789]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V789]

================================

Block 0xdd3
[0xdd3:0xdd7]
---
Predecessors: [0xdcc]
Successors: [0xdd8]
---
0xdd3 POP
0xdd4 PUSH1 0x0
0xdd6 DUP2
0xdd7 GT
---
0xdd4: V792 = 0x0
0xdd7: V793 = GT S1 0x0
---
Entry stack: [S3, S2, S1, V789]
Stack pops: 2
Stack additions: [S1, V793]
Exit stack: [S3, S2, S1, V793]

================================

Block 0xdd8
[0xdd8:0xdde]
---
Predecessors: [0xdd3]
Successors: [0xddf]
---
0xdd8 JUMPDEST
0xdd9 ISZERO
0xdda ISZERO
0xddb PUSH2 0x61e
0xdde JUMPI
---
0xdd8: JUMPDEST 
0xdd9: V794 = ISZERO V793
0xdda: V795 = ISZERO V794
0xddb: V796 = 0x61e
0xdde: THROWI V795
---
Entry stack: [S3, S2, S1, V793]
Stack pops: 1
Stack additions: []
Exit stack: [S3, S2, S1]

================================

Block 0xddf
[0xddf:0xf6d]
---
Predecessors: [0xdd8]
Successors: [0xf6e]
---
0xddf PUSH1 0x0
0xde1 PUSH1 0x0
0xde3 REVERT
0xde4 JUMPDEST
0xde5 DUP1
0xde6 PUSH1 0x0
0xde8 PUSH1 0x0
0xdea DUP5
0xdeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe00 AND
0xe01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe16 AND
0xe17 DUP2
0xe18 MSTORE
0xe19 PUSH1 0x20
0xe1b ADD
0xe1c SWAP1
0xe1d DUP2
0xe1e MSTORE
0xe1f PUSH1 0x20
0xe21 ADD
0xe22 PUSH1 0x0
0xe24 SHA3
0xe25 PUSH1 0x0
0xe27 DUP3
0xe28 DUP3
0xe29 SLOAD
0xe2a ADD
0xe2b SWAP3
0xe2c POP
0xe2d POP
0xe2e DUP2
0xe2f SWAP1
0xe30 SSTORE
0xe31 POP
0xe32 DUP1
0xe33 PUSH1 0x0
0xe35 PUSH1 0x0
0xe37 DUP6
0xe38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4d AND
0xe4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe63 AND
0xe64 DUP2
0xe65 MSTORE
0xe66 PUSH1 0x20
0xe68 ADD
0xe69 SWAP1
0xe6a DUP2
0xe6b MSTORE
0xe6c PUSH1 0x20
0xe6e ADD
0xe6f PUSH1 0x0
0xe71 SHA3
0xe72 PUSH1 0x0
0xe74 DUP3
0xe75 DUP3
0xe76 SLOAD
0xe77 SUB
0xe78 SWAP3
0xe79 POP
0xe7a POP
0xe7b DUP2
0xe7c SWAP1
0xe7d SSTORE
0xe7e POP
0xe7f DUP1
0xe80 PUSH1 0x1
0xe82 PUSH1 0x0
0xe84 DUP6
0xe85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9a AND
0xe9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb0 AND
0xeb1 DUP2
0xeb2 MSTORE
0xeb3 PUSH1 0x20
0xeb5 ADD
0xeb6 SWAP1
0xeb7 DUP2
0xeb8 MSTORE
0xeb9 PUSH1 0x20
0xebb ADD
0xebc PUSH1 0x0
0xebe SHA3
0xebf PUSH1 0x0
0xec1 CALLER
0xec2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed7 AND
0xed8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeed AND
0xeee DUP2
0xeef MSTORE
0xef0 PUSH1 0x20
0xef2 ADD
0xef3 SWAP1
0xef4 DUP2
0xef5 MSTORE
0xef6 PUSH1 0x20
0xef8 ADD
0xef9 PUSH1 0x0
0xefb SHA3
0xefc PUSH1 0x0
0xefe DUP3
0xeff DUP3
0xf00 SLOAD
0xf01 SUB
0xf02 SWAP3
0xf03 POP
0xf04 POP
0xf05 DUP2
0xf06 SWAP1
0xf07 SSTORE
0xf08 POP
0xf09 DUP2
0xf0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1f AND
0xf20 DUP4
0xf21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf36 AND
0xf37 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf58 DUP4
0xf59 PUSH1 0x40
0xf5b MLOAD
0xf5c DUP1
0xf5d DUP3
0xf5e DUP2
0xf5f MSTORE
0xf60 PUSH1 0x20
0xf62 ADD
0xf63 SWAP2
0xf64 POP
0xf65 POP
0xf66 PUSH1 0x40
0xf68 MLOAD
0xf69 DUP1
0xf6a SWAP2
0xf6b SUB
0xf6c SWAP1
0xf6d LOG3
---
0xddf: V797 = 0x0
0xde1: V798 = 0x0
0xde3: REVERT 0x0 0x0
0xde4: JUMPDEST 
0xde6: V799 = 0x0
0xde8: V800 = 0x0
0xdeb: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xe00: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xe01: V803 = 0xffffffffffffffffffffffffffffffffffffffff
0xe16: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V802
0xe18: M[0x0] = V804
0xe19: V805 = 0x20
0xe1b: V806 = ADD 0x20 0x0
0xe1e: M[0x20] = 0x0
0xe1f: V807 = 0x20
0xe21: V808 = ADD 0x20 0x20
0xe22: V809 = 0x0
0xe24: V810 = SHA3 0x0 0x40
0xe25: V811 = 0x0
0xe29: V812 = S[V810]
0xe2a: V813 = ADD V812 S0
0xe30: S[V810] = V813
0xe33: V814 = 0x0
0xe35: V815 = 0x0
0xe38: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4d: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xe4e: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0xe63: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0xe65: M[0x0] = V819
0xe66: V820 = 0x20
0xe68: V821 = ADD 0x20 0x0
0xe6b: M[0x20] = 0x0
0xe6c: V822 = 0x20
0xe6e: V823 = ADD 0x20 0x20
0xe6f: V824 = 0x0
0xe71: V825 = SHA3 0x0 0x40
0xe72: V826 = 0x0
0xe76: V827 = S[V825]
0xe77: V828 = SUB V827 S0
0xe7d: S[V825] = V828
0xe80: V829 = 0x1
0xe82: V830 = 0x0
0xe85: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9a: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xe9b: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb0: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xeb2: M[0x0] = V834
0xeb3: V835 = 0x20
0xeb5: V836 = ADD 0x20 0x0
0xeb8: M[0x20] = 0x1
0xeb9: V837 = 0x20
0xebb: V838 = ADD 0x20 0x20
0xebc: V839 = 0x0
0xebe: V840 = SHA3 0x0 0x40
0xebf: V841 = 0x0
0xec1: V842 = CALLER
0xec2: V843 = 0xffffffffffffffffffffffffffffffffffffffff
0xed7: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V842
0xed8: V845 = 0xffffffffffffffffffffffffffffffffffffffff
0xeed: V846 = AND 0xffffffffffffffffffffffffffffffffffffffff V844
0xeef: M[0x0] = V846
0xef0: V847 = 0x20
0xef2: V848 = ADD 0x20 0x0
0xef5: M[0x20] = V840
0xef6: V849 = 0x20
0xef8: V850 = ADD 0x20 0x20
0xef9: V851 = 0x0
0xefb: V852 = SHA3 0x0 0x40
0xefc: V853 = 0x0
0xf00: V854 = S[V852]
0xf01: V855 = SUB V854 S0
0xf07: S[V852] = V855
0xf0a: V856 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1f: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf21: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0xf36: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf37: V860 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf59: V861 = 0x40
0xf5b: V862 = M[0x40]
0xf5f: M[V862] = S0
0xf60: V863 = 0x20
0xf62: V864 = ADD 0x20 V862
0xf66: V865 = 0x40
0xf68: V866 = M[0x40]
0xf6b: V867 = SUB V864 V866
0xf6d: LOG V866 V867 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V859 V857
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xf6e
[0xf6e:0xfca]
---
Predecessors: [0xddf]
Successors: [0xfcb]
---
0xf6e JUMPDEST
0xf6f POP
0xf70 POP
0xf71 POP
0xf72 JUMP
0xf73 JUMPDEST
0xf74 PUSH1 0x3
0xf76 PUSH1 0x0
0xf78 SWAP1
0xf79 SLOAD
0xf7a SWAP1
0xf7b PUSH2 0x100
0xf7e EXP
0xf7f SWAP1
0xf80 DIV
0xf81 PUSH1 0xff
0xf83 AND
0xf84 DUP2
0xf85 JUMP
0xf86 JUMPDEST
0xf87 PUSH1 0x0
0xf89 PUSH1 0x0
0xf8b PUSH1 0x0
0xf8d DUP4
0xf8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa3 AND
0xfa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb9 AND
0xfba DUP2
0xfbb MSTORE
0xfbc PUSH1 0x20
0xfbe ADD
0xfbf SWAP1
0xfc0 DUP2
0xfc1 MSTORE
0xfc2 PUSH1 0x20
0xfc4 ADD
0xfc5 PUSH1 0x0
0xfc7 SHA3
0xfc8 SLOAD
0xfc9 SWAP1
0xfca POP
---
0xf6e: JUMPDEST 
0xf72: JUMP S3
0xf73: JUMPDEST 
0xf74: V868 = 0x3
0xf76: V869 = 0x0
0xf79: V870 = S[0x3]
0xf7b: V871 = 0x100
0xf7e: V872 = EXP 0x100 0x0
0xf80: V873 = DIV V870 0x1
0xf81: V874 = 0xff
0xf83: V875 = AND 0xff V873
0xf85: JUMP S0
0xf86: JUMPDEST 
0xf87: V876 = 0x0
0xf89: V877 = 0x0
0xf8b: V878 = 0x0
0xf8e: V879 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa3: V880 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xfa4: V881 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb9: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff V880
0xfbb: M[0x0] = V882
0xfbc: V883 = 0x20
0xfbe: V884 = ADD 0x20 0x0
0xfc1: M[0x20] = 0x0
0xfc2: V885 = 0x20
0xfc4: V886 = ADD 0x20 0x20
0xfc5: V887 = 0x0
0xfc7: V888 = SHA3 0x0 0x40
0xfc8: V889 = S[V888]
---
Entry stack: [S2, S1, S0]
Stack pops: 14
Stack additions: [V889, S0]
Exit stack: []

================================

Block 0xfcb
[0xfcb:0x101f]
---
Predecessors: [0xf6e]
Successors: [0x1020]
---
0xfcb JUMPDEST
0xfcc SWAP2
0xfcd SWAP1
0xfce POP
0xfcf JUMP
0xfd0 JUMPDEST
0xfd1 PUSH1 0x4
0xfd3 DUP1
0xfd4 SLOAD
0xfd5 PUSH1 0x1
0xfd7 DUP2
0xfd8 PUSH1 0x1
0xfda AND
0xfdb ISZERO
0xfdc PUSH2 0x100
0xfdf MUL
0xfe0 SUB
0xfe1 AND
0xfe2 PUSH1 0x2
0xfe4 SWAP1
0xfe5 DIV
0xfe6 DUP1
0xfe7 PUSH1 0x1f
0xfe9 ADD
0xfea PUSH1 0x20
0xfec DUP1
0xfed SWAP2
0xfee DIV
0xfef MUL
0xff0 PUSH1 0x20
0xff2 ADD
0xff3 PUSH1 0x40
0xff5 MLOAD
0xff6 SWAP1
0xff7 DUP2
0xff8 ADD
0xff9 PUSH1 0x40
0xffb MSTORE
0xffc DUP1
0xffd SWAP3
0xffe SWAP2
0xfff SWAP1
0x1000 DUP2
0x1001 DUP2
0x1002 MSTORE
0x1003 PUSH1 0x20
0x1005 ADD
0x1006 DUP3
0x1007 DUP1
0x1008 SLOAD
0x1009 PUSH1 0x1
0x100b DUP2
0x100c PUSH1 0x1
0x100e AND
0x100f ISZERO
0x1010 PUSH2 0x100
0x1013 MUL
0x1014 SUB
0x1015 AND
0x1016 PUSH1 0x2
0x1018 SWAP1
0x1019 DIV
0x101a DUP1
0x101b ISZERO
0x101c PUSH2 0x8a0
0x101f JUMPI
---
0xfcb: JUMPDEST 
0xfcf: JUMP S2
0xfd0: JUMPDEST 
0xfd1: V890 = 0x4
0xfd4: V891 = S[0x4]
0xfd5: V892 = 0x1
0xfd8: V893 = 0x1
0xfda: V894 = AND 0x1 V891
0xfdb: V895 = ISZERO V894
0xfdc: V896 = 0x100
0xfdf: V897 = MUL 0x100 V895
0xfe0: V898 = SUB V897 0x1
0xfe1: V899 = AND V898 V891
0xfe2: V900 = 0x2
0xfe5: V901 = DIV V899 0x2
0xfe7: V902 = 0x1f
0xfe9: V903 = ADD 0x1f V901
0xfea: V904 = 0x20
0xfee: V905 = DIV V903 0x20
0xfef: V906 = MUL V905 0x20
0xff0: V907 = 0x20
0xff2: V908 = ADD 0x20 V906
0xff3: V909 = 0x40
0xff5: V910 = M[0x40]
0xff8: V911 = ADD V910 V908
0xff9: V912 = 0x40
0xffb: M[0x40] = V911
0x1002: M[V910] = V901
0x1003: V913 = 0x20
0x1005: V914 = ADD 0x20 V910
0x1008: V915 = S[0x4]
0x1009: V916 = 0x1
0x100c: V917 = 0x1
0x100e: V918 = AND 0x1 V915
0x100f: V919 = ISZERO V918
0x1010: V920 = 0x100
0x1013: V921 = MUL 0x100 V919
0x1014: V922 = SUB V921 0x1
0x1015: V923 = AND V922 V915
0x1016: V924 = 0x2
0x1019: V925 = DIV V923 0x2
0x101b: V926 = ISZERO V925
0x101c: V927 = 0x8a0
0x101f: THROWI V926
---
Entry stack: [S1, V889]
Stack pops: 5
Stack additions: [V925, 0x4, V914, V901, 0x4, V910]
Exit stack: []

================================

Block 0x1020
[0x1020:0x1027]
---
Predecessors: [0xfcb]
Successors: [0x1028]
---
0x1020 DUP1
0x1021 PUSH1 0x1f
0x1023 LT
0x1024 PUSH2 0x875
0x1027 JUMPI
---
0x1021: V928 = 0x1f
0x1023: V929 = LT 0x1f V925
0x1024: V930 = 0x875
0x1027: THROWI V929
---
Entry stack: [V910, 0x4, V901, V914, 0x4, V925]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V910, 0x4, V901, V914, 0x4, V925]

================================

Block 0x1028
[0x1028:0x1048]
---
Predecessors: [0x1020]
Successors: [0x1049]
---
0x1028 PUSH2 0x100
0x102b DUP1
0x102c DUP4
0x102d SLOAD
0x102e DIV
0x102f MUL
0x1030 DUP4
0x1031 MSTORE
0x1032 SWAP2
0x1033 PUSH1 0x20
0x1035 ADD
0x1036 SWAP2
0x1037 PUSH2 0x8a0
0x103a JUMP
0x103b JUMPDEST
0x103c DUP3
0x103d ADD
0x103e SWAP2
0x103f SWAP1
0x1040 PUSH1 0x0
0x1042 MSTORE
0x1043 PUSH1 0x20
0x1045 PUSH1 0x0
0x1047 SHA3
0x1048 SWAP1
---
0x1028: V931 = 0x100
0x102d: V932 = S[0x4]
0x102e: V933 = DIV V932 0x100
0x102f: V934 = MUL V933 0x100
0x1031: M[V914] = V934
0x1033: V935 = 0x20
0x1035: V936 = ADD 0x20 V914
0x1037: V937 = 0x8a0
0x103a: THROW 
0x103b: JUMPDEST 
0x103d: V938 = ADD S2 S0
0x1040: V939 = 0x0
0x1042: M[0x0] = S1
0x1043: V940 = 0x20
0x1045: V941 = 0x0
0x1047: V942 = SHA3 0x0 0x20
---
Entry stack: [V910, 0x4, V901, V914, 0x4, V925]
Stack pops: 3
Stack additions: [S2, V942, V938]
Exit stack: []

================================

Block 0x1049
[0x1049:0x105c]
---
Predecessors: [0x1028]
Successors: [0x105d]
---
0x1049 JUMPDEST
0x104a DUP2
0x104b SLOAD
0x104c DUP2
0x104d MSTORE
0x104e SWAP1
0x104f PUSH1 0x1
0x1051 ADD
0x1052 SWAP1
0x1053 PUSH1 0x20
0x1055 ADD
0x1056 DUP1
0x1057 DUP4
0x1058 GT
0x1059 PUSH2 0x883
0x105c JUMPI
---
0x1049: JUMPDEST 
0x104b: V943 = S[V942]
0x104d: M[S0] = V943
0x104f: V944 = 0x1
0x1051: V945 = ADD 0x1 V942
0x1053: V946 = 0x20
0x1055: V947 = ADD 0x20 S0
0x1058: V948 = GT V938 V947
0x1059: V949 = 0x883
0x105c: THROWI V948
---
Entry stack: [V938, V942, S0]
Stack pops: 3
Stack additions: [S2, V945, V947]
Exit stack: [V938, V945, V947]

================================

Block 0x105d
[0x105d:0x1065]
---
Predecessors: [0x1049]
Successors: [0x1066]
---
0x105d DUP3
0x105e SWAP1
0x105f SUB
0x1060 PUSH1 0x1f
0x1062 AND
0x1063 DUP3
0x1064 ADD
0x1065 SWAP2
---
0x105f: V950 = SUB V947 V938
0x1060: V951 = 0x1f
0x1062: V952 = AND 0x1f V950
0x1064: V953 = ADD V938 V952
---
Entry stack: [V938, V945, V947]
Stack pops: 3
Stack additions: [V953, S1, S2]
Exit stack: [V953, V945, V938]

================================

Block 0x1066
[0x1066:0x1080]
---
Predecessors: [0x105d]
Successors: [0x1081]
---
0x1066 JUMPDEST
0x1067 POP
0x1068 POP
0x1069 POP
0x106a POP
0x106b POP
0x106c DUP2
0x106d JUMP
0x106e JUMPDEST
0x106f PUSH1 0x40
0x1071 PUSH1 0x4
0x1073 DUP2
0x1074 ADD
0x1075 PUSH1 0x0
0x1077 CALLDATASIZE
0x1078 SWAP1
0x1079 POP
0x107a EQ
0x107b ISZERO
0x107c ISZERO
0x107d PUSH2 0x8bc
0x1080 JUMPI
---
0x1066: JUMPDEST 
0x106d: JUMP S6
0x106e: JUMPDEST 
0x106f: V954 = 0x40
0x1071: V955 = 0x4
0x1074: V956 = ADD 0x40 0x4
0x1075: V957 = 0x0
0x1077: V958 = CALLDATASIZE
0x107a: V959 = EQ V958 0x44
0x107b: V960 = ISZERO V959
0x107c: V961 = ISZERO V960
0x107d: V962 = 0x8bc
0x1080: THROWI V961
---
Entry stack: [V953, V945, V938]
Stack pops: 12
Stack additions: [0x40]
Exit stack: []

================================

Block 0x1081
[0x1081:0x10cb]
---
Predecessors: [0x1066]
Successors: [0x10cc]
---
0x1081 INVALID
0x1082 JUMPDEST
0x1083 DUP2
0x1084 PUSH1 0x0
0x1086 PUSH1 0x0
0x1088 CALLER
0x1089 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109e AND
0x109f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b4 AND
0x10b5 DUP2
0x10b6 MSTORE
0x10b7 PUSH1 0x20
0x10b9 ADD
0x10ba SWAP1
0x10bb DUP2
0x10bc MSTORE
0x10bd PUSH1 0x20
0x10bf ADD
0x10c0 PUSH1 0x0
0x10c2 SHA3
0x10c3 SLOAD
0x10c4 LT
0x10c5 ISZERO
0x10c6 DUP1
0x10c7 ISZERO
0x10c8 PUSH2 0x90b
0x10cb JUMPI
---
0x1081: INVALID 
0x1082: JUMPDEST 
0x1084: V963 = 0x0
0x1086: V964 = 0x0
0x1088: V965 = CALLER
0x1089: V966 = 0xffffffffffffffffffffffffffffffffffffffff
0x109e: V967 = AND 0xffffffffffffffffffffffffffffffffffffffff V965
0x109f: V968 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b4: V969 = AND 0xffffffffffffffffffffffffffffffffffffffff V967
0x10b6: M[0x0] = V969
0x10b7: V970 = 0x20
0x10b9: V971 = ADD 0x20 0x0
0x10bc: M[0x20] = 0x0
0x10bd: V972 = 0x20
0x10bf: V973 = ADD 0x20 0x20
0x10c0: V974 = 0x0
0x10c2: V975 = SHA3 0x0 0x40
0x10c3: V976 = S[V975]
0x10c4: V977 = LT V976 S1
0x10c5: V978 = ISZERO V977
0x10c7: V979 = ISZERO V978
0x10c8: V980 = 0x90b
0x10cb: THROWI V979
---
Entry stack: [0x40]
Stack pops: 0
Stack additions: [V978, S0, S1]
Exit stack: []

================================

Block 0x10cc
[0x10cc:0x10d0]
---
Predecessors: [0x1081]
Successors: [0x10d1]
---
0x10cc POP
0x10cd PUSH1 0x0
0x10cf DUP3
0x10d0 GT
---
0x10cd: V981 = 0x0
0x10d0: V982 = GT S2 0x0
---
Entry stack: [S2, S1, V978]
Stack pops: 3
Stack additions: [S2, S1, V982]
Exit stack: [S2, S1, V982]

================================

Block 0x10d1
[0x10d1:0x10d7]
---
Predecessors: [0x10cc]
Successors: [0x10d8]
---
0x10d1 JUMPDEST
0x10d2 ISZERO
0x10d3 ISZERO
0x10d4 PUSH2 0x917
0x10d7 JUMPI
---
0x10d1: JUMPDEST 
0x10d2: V983 = ISZERO V982
0x10d3: V984 = ISZERO V983
0x10d4: V985 = 0x917
0x10d7: THROWI V984
---
Entry stack: [S2, S1, V982]
Stack pops: 1
Stack additions: []
Exit stack: [S2, S1]

================================

Block 0x10d8
[0x10d8:0x11dc]
---
Predecessors: [0x10d1]
Successors: [0x11dd]
---
0x10d8 PUSH1 0x0
0x10da PUSH1 0x0
0x10dc REVERT
0x10dd JUMPDEST
0x10de DUP2
0x10df PUSH1 0x0
0x10e1 PUSH1 0x0
0x10e3 CALLER
0x10e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f9 AND
0x10fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110f AND
0x1110 DUP2
0x1111 MSTORE
0x1112 PUSH1 0x20
0x1114 ADD
0x1115 SWAP1
0x1116 DUP2
0x1117 MSTORE
0x1118 PUSH1 0x20
0x111a ADD
0x111b PUSH1 0x0
0x111d SHA3
0x111e PUSH1 0x0
0x1120 DUP3
0x1121 DUP3
0x1122 SLOAD
0x1123 SUB
0x1124 SWAP3
0x1125 POP
0x1126 POP
0x1127 DUP2
0x1128 SWAP1
0x1129 SSTORE
0x112a POP
0x112b DUP2
0x112c PUSH1 0x0
0x112e PUSH1 0x0
0x1130 DUP6
0x1131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1146 AND
0x1147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115c AND
0x115d DUP2
0x115e MSTORE
0x115f PUSH1 0x20
0x1161 ADD
0x1162 SWAP1
0x1163 DUP2
0x1164 MSTORE
0x1165 PUSH1 0x20
0x1167 ADD
0x1168 PUSH1 0x0
0x116a SHA3
0x116b PUSH1 0x0
0x116d DUP3
0x116e DUP3
0x116f SLOAD
0x1170 ADD
0x1171 SWAP3
0x1172 POP
0x1173 POP
0x1174 DUP2
0x1175 SWAP1
0x1176 SSTORE
0x1177 POP
0x1178 DUP3
0x1179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x118e AND
0x118f CALLER
0x1190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a5 AND
0x11a6 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x11c7 DUP5
0x11c8 PUSH1 0x40
0x11ca MLOAD
0x11cb DUP1
0x11cc DUP3
0x11cd DUP2
0x11ce MSTORE
0x11cf PUSH1 0x20
0x11d1 ADD
0x11d2 SWAP2
0x11d3 POP
0x11d4 POP
0x11d5 PUSH1 0x40
0x11d7 MLOAD
0x11d8 DUP1
0x11d9 SWAP2
0x11da SUB
0x11db SWAP1
0x11dc LOG3
---
0x10d8: V986 = 0x0
0x10da: V987 = 0x0
0x10dc: REVERT 0x0 0x0
0x10dd: JUMPDEST 
0x10df: V988 = 0x0
0x10e1: V989 = 0x0
0x10e3: V990 = CALLER
0x10e4: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f9: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0x10fa: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0x110f: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0x1111: M[0x0] = V994
0x1112: V995 = 0x20
0x1114: V996 = ADD 0x20 0x0
0x1117: M[0x20] = 0x0
0x1118: V997 = 0x20
0x111a: V998 = ADD 0x20 0x20
0x111b: V999 = 0x0
0x111d: V1000 = SHA3 0x0 0x40
0x111e: V1001 = 0x0
0x1122: V1002 = S[V1000]
0x1123: V1003 = SUB V1002 S1
0x1129: S[V1000] = V1003
0x112c: V1004 = 0x0
0x112e: V1005 = 0x0
0x1131: V1006 = 0xffffffffffffffffffffffffffffffffffffffff
0x1146: V1007 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1147: V1008 = 0xffffffffffffffffffffffffffffffffffffffff
0x115c: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1007
0x115e: M[0x0] = V1009
0x115f: V1010 = 0x20
0x1161: V1011 = ADD 0x20 0x0
0x1164: M[0x20] = 0x0
0x1165: V1012 = 0x20
0x1167: V1013 = ADD 0x20 0x20
0x1168: V1014 = 0x0
0x116a: V1015 = SHA3 0x0 0x40
0x116b: V1016 = 0x0
0x116f: V1017 = S[V1015]
0x1170: V1018 = ADD V1017 S1
0x1176: S[V1015] = V1018
0x1179: V1019 = 0xffffffffffffffffffffffffffffffffffffffff
0x118e: V1020 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x118f: V1021 = CALLER
0x1190: V1022 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a5: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V1021
0x11a6: V1024 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x11c8: V1025 = 0x40
0x11ca: V1026 = M[0x40]
0x11ce: M[V1026] = S1
0x11cf: V1027 = 0x20
0x11d1: V1028 = ADD 0x20 V1026
0x11d5: V1029 = 0x40
0x11d7: V1030 = M[0x40]
0x11da: V1031 = SUB V1028 V1030
0x11dc: LOG V1030 V1031 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1023 V1020
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x11dd
[0x11dd:0x11dd]
---
Predecessors: [0x10d8]
Successors: [0x11de]
---
0x11dd JUMPDEST
---
0x11dd: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x11de
[0x11de:0x1264]
---
Predecessors: [0x11dd]
Successors: [0x1265]
---
0x11de JUMPDEST
0x11df POP
0x11e0 POP
0x11e1 POP
0x11e2 JUMP
0x11e3 JUMPDEST
0x11e4 PUSH1 0x0
0x11e6 PUSH1 0x1
0x11e8 PUSH1 0x0
0x11ea DUP4
0x11eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1200 AND
0x1201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1216 AND
0x1217 DUP2
0x1218 MSTORE
0x1219 PUSH1 0x20
0x121b ADD
0x121c SWAP1
0x121d DUP2
0x121e MSTORE
0x121f PUSH1 0x20
0x1221 ADD
0x1222 PUSH1 0x0
0x1224 SHA3
0x1225 PUSH1 0x0
0x1227 DUP5
0x1228 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123d AND
0x123e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1253 AND
0x1254 DUP2
0x1255 MSTORE
0x1256 PUSH1 0x20
0x1258 ADD
0x1259 SWAP1
0x125a DUP2
0x125b MSTORE
0x125c PUSH1 0x20
0x125e ADD
0x125f PUSH1 0x0
0x1261 SHA3
0x1262 SLOAD
0x1263 SWAP1
0x1264 POP
---
0x11de: JUMPDEST 
0x11e2: JUMP S3
0x11e3: JUMPDEST 
0x11e4: V1032 = 0x0
0x11e6: V1033 = 0x1
0x11e8: V1034 = 0x0
0x11eb: V1035 = 0xffffffffffffffffffffffffffffffffffffffff
0x1200: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1201: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0x1216: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1036
0x1218: M[0x0] = V1038
0x1219: V1039 = 0x20
0x121b: V1040 = ADD 0x20 0x0
0x121e: M[0x20] = 0x1
0x121f: V1041 = 0x20
0x1221: V1042 = ADD 0x20 0x20
0x1222: V1043 = 0x0
0x1224: V1044 = SHA3 0x0 0x40
0x1225: V1045 = 0x0
0x1228: V1046 = 0xffffffffffffffffffffffffffffffffffffffff
0x123d: V1047 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x123e: V1048 = 0xffffffffffffffffffffffffffffffffffffffff
0x1253: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0x1255: M[0x0] = V1049
0x1256: V1050 = 0x20
0x1258: V1051 = ADD 0x20 0x0
0x125b: M[0x20] = V1044
0x125c: V1052 = 0x20
0x125e: V1053 = ADD 0x20 0x20
0x125f: V1054 = 0x0
0x1261: V1055 = SHA3 0x0 0x40
0x1262: V1056 = S[V1055]
---
Entry stack: [S2, S1, S0]
Stack pops: 8
Stack additions: [V1056, S0, S1]
Exit stack: []

================================

Block 0x1265
[0x1265:0x1296]
---
Predecessors: [0x11de]
Successors: []
---
0x1265 JUMPDEST
0x1266 SWAP3
0x1267 SWAP2
0x1268 POP
0x1269 POP
0x126a JUMP
0x126b STOP
0x126c LOG1
0x126d PUSH6 0x627a7a723058
0x1274 SHA3
0x1275 MISSING 0xde
0x1276 PUSH2 0x193f
0x1279 JUMP
0x127a ORIGIN
0x127b PUSH25 0x8279c513a5951f36008d904040ac7af329f05abcb9ca68fc52
0x1295 STOP
0x1296 MISSING 0x29
---
0x1265: JUMPDEST 
0x126a: JUMP S3
0x126b: STOP 
0x126c: LOG S0 S1 S2
0x126d: V1057 = 0x627a7a723058
0x1274: V1058 = SHA3 0x627a7a723058 S3
0x1275: MISSING 0xde
0x1276: V1059 = 0x193f
0x1279: THROW 
0x127a: V1060 = ORIGIN
0x127b: V1061 = 0x8279c513a5951f36008d904040ac7af329f05abcb9ca68fc52
0x1295: STOP 
0x1296: MISSING 0x29
---
Entry stack: [S2, S1, V1056]
Stack pops: 106
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x95ea7b3
Entry block: 0x67
Exit block: 0xa4
Body: 0x67, 0x6e, 0x6f, 0xa4, 0x1f6, 0x2dd

Function 1:
Public function signature: 0x23b872dd
Entry block: 0xa6
Exit block: 0x102
Body: 0xa6, 0xad, 0xae, 0x102, 0x2e1, 0x32b, 0x3ac, 0x3b3, 0x3b8, 0x3bf, 0x3c4, 0x54e

Function 2:
Public function signature: 0x70a08231
Entry block: 0x104
Exit block: 0x138
Body: 0x104, 0x10b, 0x10c, 0x138, 0x553, 0x598

Function 3:
Public function signature: 0xa9059cbb
Entry block: 0x14e
Exit block: 0x18b
Body: 0x14e, 0x155, 0x156, 0x18b, 0x59d, 0x5b0, 0x5b1, 0x5fb, 0x600, 0x607, 0x60c, 0x70c, 0x70d

Function 4:
Public function signature: 0xdd62ed3e
Entry block: 0x18d
Exit block: 0x1e0
Body: 0x18d, 0x194, 0x195, 0x1e0, 0x712, 0x794

Function 5:
Public fallback function
Entry block: 0x65
Exit block: 0x65
Body: 0x65

