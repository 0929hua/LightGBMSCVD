Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6691461a
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6691461a
0x3c: V13 = EQ 0x6691461a V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xaa]
---
0x41 DUP1
0x42 PUSH4 0xbff99c6c
0x47 EQ
0x48 PUSH2 0xaa
0x4b JUMPI
---
0x42: V15 = 0xbff99c6c
0x47: V16 = EQ 0xbff99c6c V11
0x48: V17 = 0xaa
0x4b: JUMPI 0xaa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x101]
---
0x4c DUP1
0x4d PUSH4 0xc80f3c8a
0x52 EQ
0x53 PUSH2 0x101
0x56 JUMPI
---
0x4d: V18 = 0xc80f3c8a
0x52: V19 = EQ 0xc80f3c8a V11
0x53: V20 = 0x101
0x56: JUMPI 0x101 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1aa]
---
0x57 DUP1
0x58 PUSH4 0xfc0c546a
0x5d EQ
0x5e PUSH2 0x1aa
0x61 JUMPI
---
0x58: V21 = 0xfc0c546a
0x5d: V22 = EQ 0xfc0c546a V11
0x5e: V23 = 0x1aa
0x61: JUMPI 0x1aa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0xa7]
---
Predecessors: [0x67]
Successors: [0x201]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0xa8
0x78 PUSH1 0x4
0x7a DUP1
0x7b CALLDATASIZE
0x7c SUB
0x7d DUP2
0x7e ADD
0x7f SWAP1
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e SWAP3
0x9f SWAP2
0xa0 SWAP1
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 PUSH2 0x201
0xa7 JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0xa8
0x78: V30 = 0x4
0x7b: V31 = CALLDATASIZE
0x7c: V32 = SUB V31 0x4
0x7e: V33 = ADD 0x4 V32
0x82: V34 = CALLDATALOAD 0x4
0x83: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x9a: V37 = 0x20
0x9c: V38 = ADD 0x20 0x4
0xa4: V39 = 0x201
0xa7: JUMP 0x201
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0xa8, V36]
Exit stack: [V11, 0xa8, V36]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x227]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0x41]
Successors: [0xb2, 0xb6]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac DUP1
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xaa: JUMPDEST 
0xab: V40 = CALLVALUE
0xad: V41 = ISZERO V40
0xae: V42 = 0xb6
0xb1: JUMPI 0xb6 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V40]
Exit stack: [V11, V40]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xaa]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V43 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V40]

================================

Block 0xb6
[0xb6:0xbe]
---
Predecessors: [0xaa]
Successors: [0x26a]
---
0xb6 JUMPDEST
0xb7 POP
0xb8 PUSH2 0xbf
0xbb PUSH2 0x26a
0xbe JUMP
---
0xb6: JUMPDEST 
0xb8: V44 = 0xbf
0xbb: V45 = 0x26a
0xbe: JUMP 0x26a
---
Entry stack: [V11, V40]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V11, 0xbf]

================================

Block 0xbf
[0xbf:0x100]
---
Predecessors: [0x26a]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 MLOAD
0xc3 DUP1
0xc4 DUP3
0xc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda AND
0xdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0 AND
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP2
0xf7 POP
0xf8 POP
0xf9 PUSH1 0x40
0xfb MLOAD
0xfc DUP1
0xfd SWAP2
0xfe SUB
0xff SWAP1
0x100 RETURN
---
0xbf: JUMPDEST 
0xc0: V46 = 0x40
0xc2: V47 = M[0x40]
0xc5: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xda: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0xdb: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xf2: M[V47] = V51
0xf3: V52 = 0x20
0xf5: V53 = ADD 0x20 V47
0xf9: V54 = 0x40
0xfb: V55 = M[0x40]
0xfe: V56 = SUB V53 V55
0x100: RETURN V55 V56
---
Entry stack: [V11, 0xbf, V152]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbf]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0x4c]
Successors: [0x109, 0x10d]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 DUP1
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x101: JUMPDEST 
0x102: V57 = CALLVALUE
0x104: V58 = ISZERO V57
0x105: V59 = 0x10d
0x108: JUMPI 0x10d V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x101]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V60 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0x10d
[0x10d:0x1a7]
---
Predecessors: [0x101]
Successors: [0x290]
---
0x10d JUMPDEST
0x10e POP
0x10f PUSH2 0x1a8
0x112 PUSH1 0x4
0x114 DUP1
0x115 CALLDATASIZE
0x116 SUB
0x117 DUP2
0x118 ADD
0x119 SWAP1
0x11a DUP1
0x11b DUP1
0x11c CALLDATALOAD
0x11d SWAP1
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP1
0x122 DUP3
0x123 ADD
0x124 DUP1
0x125 CALLDATALOAD
0x126 SWAP1
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b DUP1
0x12c DUP1
0x12d PUSH1 0x20
0x12f MUL
0x130 PUSH1 0x20
0x132 ADD
0x133 PUSH1 0x40
0x135 MLOAD
0x136 SWAP1
0x137 DUP2
0x138 ADD
0x139 PUSH1 0x40
0x13b MSTORE
0x13c DUP1
0x13d SWAP4
0x13e SWAP3
0x13f SWAP2
0x140 SWAP1
0x141 DUP2
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x20
0x146 ADD
0x147 DUP4
0x148 DUP4
0x149 PUSH1 0x20
0x14b MUL
0x14c DUP1
0x14d DUP3
0x14e DUP5
0x14f CALLDATACOPY
0x150 DUP3
0x151 ADD
0x152 SWAP2
0x153 POP
0x154 POP
0x155 POP
0x156 POP
0x157 POP
0x158 POP
0x159 SWAP2
0x15a SWAP3
0x15b SWAP2
0x15c SWAP3
0x15d SWAP1
0x15e DUP1
0x15f CALLDATALOAD
0x160 SWAP1
0x161 PUSH1 0x20
0x163 ADD
0x164 SWAP1
0x165 DUP3
0x166 ADD
0x167 DUP1
0x168 CALLDATALOAD
0x169 SWAP1
0x16a PUSH1 0x20
0x16c ADD
0x16d SWAP1
0x16e DUP1
0x16f DUP1
0x170 PUSH1 0x20
0x172 MUL
0x173 PUSH1 0x20
0x175 ADD
0x176 PUSH1 0x40
0x178 MLOAD
0x179 SWAP1
0x17a DUP2
0x17b ADD
0x17c PUSH1 0x40
0x17e MSTORE
0x17f DUP1
0x180 SWAP4
0x181 SWAP3
0x182 SWAP2
0x183 SWAP1
0x184 DUP2
0x185 DUP2
0x186 MSTORE
0x187 PUSH1 0x20
0x189 ADD
0x18a DUP4
0x18b DUP4
0x18c PUSH1 0x20
0x18e MUL
0x18f DUP1
0x190 DUP3
0x191 DUP5
0x192 CALLDATACOPY
0x193 DUP3
0x194 ADD
0x195 SWAP2
0x196 POP
0x197 POP
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c SWAP2
0x19d SWAP3
0x19e SWAP2
0x19f SWAP3
0x1a0 SWAP1
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 PUSH2 0x290
0x1a7 JUMP
---
0x10d: JUMPDEST 
0x10f: V61 = 0x1a8
0x112: V62 = 0x4
0x115: V63 = CALLDATASIZE
0x116: V64 = SUB V63 0x4
0x118: V65 = ADD 0x4 V64
0x11c: V66 = CALLDATALOAD 0x4
0x11e: V67 = 0x20
0x120: V68 = ADD 0x20 0x4
0x123: V69 = ADD 0x4 V66
0x125: V70 = CALLDATALOAD V69
0x127: V71 = 0x20
0x129: V72 = ADD 0x20 V69
0x12d: V73 = 0x20
0x12f: V74 = MUL 0x20 V70
0x130: V75 = 0x20
0x132: V76 = ADD 0x20 V74
0x133: V77 = 0x40
0x135: V78 = M[0x40]
0x138: V79 = ADD V78 V76
0x139: V80 = 0x40
0x13b: M[0x40] = V79
0x143: M[V78] = V70
0x144: V81 = 0x20
0x146: V82 = ADD 0x20 V78
0x149: V83 = 0x20
0x14b: V84 = MUL 0x20 V70
0x14f: CALLDATACOPY V82 V72 V84
0x151: V85 = ADD V82 V84
0x15f: V86 = CALLDATALOAD 0x24
0x161: V87 = 0x20
0x163: V88 = ADD 0x20 0x24
0x166: V89 = ADD 0x4 V86
0x168: V90 = CALLDATALOAD V89
0x16a: V91 = 0x20
0x16c: V92 = ADD 0x20 V89
0x170: V93 = 0x20
0x172: V94 = MUL 0x20 V90
0x173: V95 = 0x20
0x175: V96 = ADD 0x20 V94
0x176: V97 = 0x40
0x178: V98 = M[0x40]
0x17b: V99 = ADD V98 V96
0x17c: V100 = 0x40
0x17e: M[0x40] = V99
0x186: M[V98] = V90
0x187: V101 = 0x20
0x189: V102 = ADD 0x20 V98
0x18c: V103 = 0x20
0x18e: V104 = MUL 0x20 V90
0x192: CALLDATACOPY V102 V92 V104
0x194: V105 = ADD V102 V104
0x1a4: V106 = 0x290
0x1a7: JUMP 0x290
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x1a8, V78, V98]
Exit stack: [V11, 0x1a8, V78, V98]

================================

Block 0x1a8
[0x1a8:0x1a9]
---
Predecessors: [0x489]
Successors: []
---
0x1a8 JUMPDEST
0x1a9 STOP
---
0x1a8: JUMPDEST 
0x1a9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x57]
Successors: [0x1b2, 0x1b6]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V107 = CALLVALUE
0x1ad: V108 = ISZERO V107
0x1ae: V109 = 0x1b6
0x1b1: JUMPI 0x1b6 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V110 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x1b6
[0x1b6:0x1be]
---
Predecessors: [0x1aa]
Successors: [0x48e]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 PUSH2 0x1bf
0x1bb PUSH2 0x48e
0x1be JUMP
---
0x1b6: JUMPDEST 
0x1b8: V111 = 0x1bf
0x1bb: V112 = 0x48e
0x1be: JUMP 0x48e
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0x1bf]
Exit stack: [V11, 0x1bf]

================================

Block 0x1bf
[0x1bf:0x200]
---
Predecessors: [0x48e]
Successors: []
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 DUP1
0x1c4 DUP3
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da AND
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 SWAP2
0x1f7 POP
0x1f8 POP
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd SWAP2
0x1fe SUB
0x1ff SWAP1
0x200 RETURN
---
0x1bf: JUMPDEST 
0x1c0: V113 = 0x40
0x1c2: V114 = M[0x40]
0x1c5: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x1db: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1f2: M[V114] = V118
0x1f3: V119 = 0x20
0x1f5: V120 = ADD 0x20 V114
0x1f9: V121 = 0x40
0x1fb: V122 = M[0x40]
0x1fe: V123 = SUB V120 V122
0x200: RETURN V122 V123
---
Entry stack: [V11, 0x1bf, V276]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1bf]

================================

Block 0x201
[0x201:0x222]
---
Predecessors: [0x73]
Successors: [0x223, 0x227]
---
0x201 JUMPDEST
0x202 PUSH1 0x0
0x204 DUP2
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b EQ
0x21c ISZERO
0x21d ISZERO
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x201: JUMPDEST 
0x202: V124 = 0x0
0x205: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x21b: V127 = EQ V126 0x0
0x21c: V128 = ISZERO V127
0x21d: V129 = ISZERO V128
0x21e: V130 = ISZERO V129
0x21f: V131 = 0x227
0x222: JUMPI 0x227 V130
---
Entry stack: [V11, 0xa8, V36]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa8, V36]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x201]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V132 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V36]

================================

Block 0x227
[0x227:0x269]
---
Predecessors: [0x201]
Successors: [0xa8]
---
0x227 JUMPDEST
0x228 DUP1
0x229 PUSH1 0x0
0x22b DUP1
0x22c PUSH2 0x100
0x22f EXP
0x230 DUP2
0x231 SLOAD
0x232 DUP2
0x233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x248 MUL
0x249 NOT
0x24a AND
0x24b SWAP1
0x24c DUP4
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 AND
0x263 MUL
0x264 OR
0x265 SWAP1
0x266 SSTORE
0x267 POP
0x268 POP
0x269 JUMP
---
0x227: JUMPDEST 
0x229: V133 = 0x0
0x22c: V134 = 0x100
0x22f: V135 = EXP 0x100 0x0
0x231: V136 = S[0x0]
0x233: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x248: V138 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x249: V139 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V140 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V136
0x24d: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x263: V143 = MUL V142 0x1
0x264: V144 = OR V143 V140
0x266: S[0x0] = V144
0x269: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V36]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x26a
[0x26a:0x28f]
---
Predecessors: [0xb6]
Successors: [0xbf]
---
0x26a JUMPDEST
0x26b PUSH1 0x1
0x26d PUSH1 0x0
0x26f SWAP1
0x270 SLOAD
0x271 SWAP1
0x272 PUSH2 0x100
0x275 EXP
0x276 SWAP1
0x277 DIV
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e DUP2
0x28f JUMP
---
0x26a: JUMPDEST 
0x26b: V145 = 0x1
0x26d: V146 = 0x0
0x270: V147 = S[0x1]
0x272: V148 = 0x100
0x275: V149 = EXP 0x100 0x0
0x277: V150 = DIV V147 0x1
0x278: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x28f: JUMP 0xbf
---
Entry stack: [V11, 0xbf]
Stack pops: 1
Stack additions: [S0, V152]
Exit stack: [V11, 0xbf, V152]

================================

Block 0x290
[0x290:0x2db]
---
Predecessors: [0x10d]
Successors: [0x2dc, 0x2e0]
---
0x290 JUMPDEST
0x291 PUSH1 0x0
0x293 PUSH20 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be CALLER
0x2bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d4 AND
0x2d5 EQ
0x2d6 ISZERO
0x2d7 ISZERO
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x290: JUMPDEST 
0x291: V153 = 0x0
0x293: V154 = 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x2a8: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x2be: V157 = CALLER
0x2bf: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2d5: V160 = EQ V159 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x2d6: V161 = ISZERO V160
0x2d7: V162 = ISZERO V161
0x2d8: V163 = 0x2e0
0x2db: JUMPI 0x2e0 V162
---
Entry stack: [V11, 0x1a8, V78, V98]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1a8, V78, V98, 0x0]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x290]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V164 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a8, V78, V98, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, 0x0]

================================

Block 0x2e0
[0x2e0:0x2e4]
---
Predecessors: [0x290]
Successors: [0x2e5]
---
0x2e0 JUMPDEST
0x2e1 PUSH1 0x0
0x2e3 SWAP1
0x2e4 POP
---
0x2e0: JUMPDEST 
0x2e1: V165 = 0x0
---
Entry stack: [V11, 0x1a8, V78, V98, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a8, V78, V98, 0x0]

================================

Block 0x2e5
[0x2e5:0x2ee]
---
Predecessors: [0x2e0, 0x47c]
Successors: [0x2ef, 0x489]
---
0x2e5 JUMPDEST
0x2e6 DUP3
0x2e7 MLOAD
0x2e8 DUP2
0x2e9 LT
0x2ea ISZERO
0x2eb PUSH2 0x489
0x2ee JUMPI
---
0x2e5: JUMPDEST 
0x2e7: V166 = M[V78]
0x2e9: V167 = LT S0 V166
0x2ea: V168 = ISZERO V167
0x2eb: V169 = 0x489
0x2ee: JUMPI 0x489 V168
---
Entry stack: [V11, 0x1a8, V78, V98, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1a8, V78, V98, S0]

================================

Block 0x2ef
[0x2ef:0x35a]
---
Predecessors: [0x2e5]
Successors: [0x35b, 0x35c]
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 SWAP1
0x2f3 SLOAD
0x2f4 SWAP1
0x2f5 PUSH2 0x100
0x2f8 EXP
0x2f9 SWAP1
0x2fa DIV
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH4 0x23b872dd
0x32c PUSH1 0x1
0x32e PUSH1 0x0
0x330 SWAP1
0x331 SLOAD
0x332 SWAP1
0x333 PUSH2 0x100
0x336 EXP
0x337 SWAP1
0x338 DIV
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f DUP6
0x350 DUP5
0x351 DUP2
0x352 MLOAD
0x353 DUP2
0x354 LT
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35c
0x35a JUMPI
---
0x2ef: V170 = 0x0
0x2f3: V171 = S[0x0]
0x2f5: V172 = 0x100
0x2f8: V173 = EXP 0x100 0x0
0x2fa: V174 = DIV V171 0x1
0x2fb: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x311: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x327: V179 = 0x23b872dd
0x32c: V180 = 0x1
0x32e: V181 = 0x0
0x331: V182 = S[0x1]
0x333: V183 = 0x100
0x336: V184 = EXP 0x100 0x0
0x338: V185 = DIV V182 0x1
0x339: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x352: V188 = M[V78]
0x354: V189 = LT S0 V188
0x355: V190 = ISZERO V189
0x356: V191 = ISZERO V190
0x357: V192 = 0x35c
0x35a: JUMPI 0x35c V191
---
Entry stack: [V11, 0x1a8, V78, V98, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V178, 0x23b872dd, V187, S2, S0]
Exit stack: [V11, 0x1a8, V78, V98, S0, V178, 0x23b872dd, V187, V78, S0]

================================

Block 0x35b
[0x35b:0x35b]
---
Predecessors: [0x2ef]
Successors: []
---
0x35b INVALID
---
0x35b: INVALID 
---
Entry stack: [V11, 0x1a8, V78, V98, S5, V178, 0x23b872dd, V187, V78, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, S5, V178, 0x23b872dd, V187, V78, S0]

================================

Block 0x35c
[0x35c:0x372]
---
Predecessors: [0x2ef]
Successors: [0x373, 0x374]
---
0x35c JUMPDEST
0x35d SWAP1
0x35e PUSH1 0x20
0x360 ADD
0x361 SWAP1
0x362 PUSH1 0x20
0x364 MUL
0x365 ADD
0x366 MLOAD
0x367 DUP6
0x368 DUP6
0x369 DUP2
0x36a MLOAD
0x36b DUP2
0x36c LT
0x36d ISZERO
0x36e ISZERO
0x36f PUSH2 0x374
0x372 JUMPI
---
0x35c: JUMPDEST 
0x35e: V193 = 0x20
0x360: V194 = ADD 0x20 V78
0x362: V195 = 0x20
0x364: V196 = MUL 0x20 S0
0x365: V197 = ADD V196 V194
0x366: V198 = M[V197]
0x36a: V199 = M[V98]
0x36c: V200 = LT S5 V199
0x36d: V201 = ISZERO V200
0x36e: V202 = ISZERO V201
0x36f: V203 = 0x374
0x372: JUMPI 0x374 V202
---
Entry stack: [V11, 0x1a8, V78, V98, S5, V178, 0x23b872dd, V187, V78, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V198, S6, S5]
Exit stack: [V11, 0x1a8, V78, V98, S5, V178, 0x23b872dd, V187, V198, V98, S5]

================================

Block 0x373
[0x373:0x373]
---
Predecessors: [0x35c]
Successors: []
---
0x373 INVALID
---
0x373: INVALID 
---
Entry stack: [V11, 0x1a8, V78, V98, S6, V178, 0x23b872dd, V187, V198, V98, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, S6, V178, 0x23b872dd, V187, V198, V98, S0]

================================

Block 0x374
[0x374:0x431]
---
Predecessors: [0x35c]
Successors: [0x432, 0x436]
---
0x374 JUMPDEST
0x375 SWAP1
0x376 PUSH1 0x20
0x378 ADD
0x379 SWAP1
0x37a PUSH1 0x20
0x37c MUL
0x37d ADD
0x37e MLOAD
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP5
0x383 PUSH4 0xffffffff
0x388 AND
0x389 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3a7 MUL
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x4
0x3ac ADD
0x3ad DUP1
0x3ae DUP5
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3da AND
0x3db DUP2
0x3dc MSTORE
0x3dd PUSH1 0x20
0x3df ADD
0x3e0 DUP4
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40c AND
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 DUP3
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x20
0x417 ADD
0x418 SWAP4
0x419 POP
0x41a POP
0x41b POP
0x41c POP
0x41d PUSH1 0x20
0x41f PUSH1 0x40
0x421 MLOAD
0x422 DUP1
0x423 DUP4
0x424 SUB
0x425 DUP2
0x426 PUSH1 0x0
0x428 DUP8
0x429 DUP1
0x42a EXTCODESIZE
0x42b ISZERO
0x42c DUP1
0x42d ISZERO
0x42e PUSH2 0x436
0x431 JUMPI
---
0x374: JUMPDEST 
0x376: V204 = 0x20
0x378: V205 = ADD 0x20 V98
0x37a: V206 = 0x20
0x37c: V207 = MUL 0x20 S0
0x37d: V208 = ADD V207 V205
0x37e: V209 = M[V208]
0x37f: V210 = 0x40
0x381: V211 = M[0x40]
0x383: V212 = 0xffffffff
0x388: V213 = AND 0xffffffff 0x23b872dd
0x389: V214 = 0x100000000000000000000000000000000000000000000000000000000
0x3a7: V215 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x3a9: M[V211] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x3aa: V216 = 0x4
0x3ac: V217 = ADD 0x4 V211
0x3af: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x3c5: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3da: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3dc: M[V217] = V221
0x3dd: V222 = 0x20
0x3df: V223 = ADD 0x20 V217
0x3e1: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x3f7: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x40e: M[V223] = V227
0x40f: V228 = 0x20
0x411: V229 = ADD 0x20 V223
0x414: M[V229] = V209
0x415: V230 = 0x20
0x417: V231 = ADD 0x20 V229
0x41d: V232 = 0x20
0x41f: V233 = 0x40
0x421: V234 = M[0x40]
0x424: V235 = SUB V231 V234
0x426: V236 = 0x0
0x42a: V237 = EXTCODESIZE V178
0x42b: V238 = ISZERO V237
0x42d: V239 = ISZERO V238
0x42e: V240 = 0x436
0x431: JUMPI 0x436 V239
---
Entry stack: [V11, 0x1a8, V78, V98, S6, V178, 0x23b872dd, V187, V198, V98, S0]
Stack pops: 6
Stack additions: [S5, S4, V231, 0x20, V234, V235, V234, 0x0, S5, V238]
Exit stack: [V11, 0x1a8, V78, V98, S6, V178, 0x23b872dd, V231, 0x20, V234, V235, V234, 0x0, V178, V238]

================================

Block 0x432
[0x432:0x435]
---
Predecessors: [0x374]
Successors: []
---
0x432 PUSH1 0x0
0x434 DUP1
0x435 REVERT
---
0x432: V241 = 0x0
0x435: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a8, V78, V98, S10, V178, 0x23b872dd, V231, 0x20, V234, V235, V234, 0x0, V178, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, S10, V178, 0x23b872dd, V231, 0x20, V234, V235, V234, 0x0, V178, V238]

================================

Block 0x436
[0x436:0x440]
---
Predecessors: [0x374]
Successors: [0x441, 0x44a]
---
0x436 JUMPDEST
0x437 POP
0x438 GAS
0x439 CALL
0x43a ISZERO
0x43b DUP1
0x43c ISZERO
0x43d PUSH2 0x44a
0x440 JUMPI
---
0x436: JUMPDEST 
0x438: V242 = GAS
0x439: V243 = CALL V242 V178 0x0 V234 V235 V234 0x20
0x43a: V244 = ISZERO V243
0x43c: V245 = ISZERO V244
0x43d: V246 = 0x44a
0x440: JUMPI 0x44a V245
---
Entry stack: [V11, 0x1a8, V78, V98, S10, V178, 0x23b872dd, V231, 0x20, V234, V235, V234, 0x0, V178, V238]
Stack pops: 7
Stack additions: [V244]
Exit stack: [V11, 0x1a8, V78, V98, S10, V178, 0x23b872dd, V231, V244]

================================

Block 0x441
[0x441:0x449]
---
Predecessors: [0x436]
Successors: []
---
0x441 RETURNDATASIZE
0x442 PUSH1 0x0
0x444 DUP1
0x445 RETURNDATACOPY
0x446 RETURNDATASIZE
0x447 PUSH1 0x0
0x449 REVERT
---
0x441: V247 = RETURNDATASIZE
0x442: V248 = 0x0
0x445: RETURNDATACOPY 0x0 0x0 V247
0x446: V249 = RETURNDATASIZE
0x447: V250 = 0x0
0x449: REVERT 0x0 V249
---
Entry stack: [V11, 0x1a8, V78, V98, S4, V178, 0x23b872dd, V231, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, S4, V178, 0x23b872dd, V231, V244]

================================

Block 0x44a
[0x44a:0x45b]
---
Predecessors: [0x436]
Successors: [0x45c, 0x460]
---
0x44a JUMPDEST
0x44b POP
0x44c POP
0x44d POP
0x44e POP
0x44f PUSH1 0x40
0x451 MLOAD
0x452 RETURNDATASIZE
0x453 PUSH1 0x20
0x455 DUP2
0x456 LT
0x457 ISZERO
0x458 PUSH2 0x460
0x45b JUMPI
---
0x44a: JUMPDEST 
0x44f: V251 = 0x40
0x451: V252 = M[0x40]
0x452: V253 = RETURNDATASIZE
0x453: V254 = 0x20
0x456: V255 = LT V253 0x20
0x457: V256 = ISZERO V255
0x458: V257 = 0x460
0x45b: JUMPI 0x460 V256
---
Entry stack: [V11, 0x1a8, V78, V98, S4, V178, 0x23b872dd, V231, V244]
Stack pops: 4
Stack additions: [V252, V253]
Exit stack: [V11, 0x1a8, V78, V98, S4, V252, V253]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x44a]
Successors: []
---
0x45c PUSH1 0x0
0x45e DUP1
0x45f REVERT
---
0x45c: V258 = 0x0
0x45f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a8, V78, V98, S2, V252, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, S2, V252, V253]

================================

Block 0x460
[0x460:0x477]
---
Predecessors: [0x44a]
Successors: [0x478, 0x47c]
---
0x460 JUMPDEST
0x461 DUP2
0x462 ADD
0x463 SWAP1
0x464 DUP1
0x465 DUP1
0x466 MLOAD
0x467 SWAP1
0x468 PUSH1 0x20
0x46a ADD
0x46b SWAP1
0x46c SWAP3
0x46d SWAP2
0x46e SWAP1
0x46f POP
0x470 POP
0x471 POP
0x472 ISZERO
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x460: JUMPDEST 
0x462: V259 = ADD V252 V253
0x466: V260 = M[V252]
0x468: V261 = 0x20
0x46a: V262 = ADD 0x20 V252
0x472: V263 = ISZERO V260
0x473: V264 = ISZERO V263
0x474: V265 = 0x47c
0x477: JUMPI 0x47c V264
---
Entry stack: [V11, 0x1a8, V78, V98, S2, V252, V253]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, S2]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x460]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V266 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a8, V78, V98, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V78, V98, S0]

================================

Block 0x47c
[0x47c:0x488]
---
Predecessors: [0x460]
Successors: [0x2e5]
---
0x47c JUMPDEST
0x47d DUP1
0x47e DUP1
0x47f PUSH1 0x1
0x481 ADD
0x482 SWAP2
0x483 POP
0x484 POP
0x485 PUSH2 0x2e5
0x488 JUMP
---
0x47c: JUMPDEST 
0x47f: V267 = 0x1
0x481: V268 = ADD 0x1 S0
0x485: V269 = 0x2e5
0x488: JUMP 0x2e5
---
Entry stack: [V11, 0x1a8, V78, V98, S0]
Stack pops: 1
Stack additions: [V268]
Exit stack: [V11, 0x1a8, V78, V98, V268]

================================

Block 0x489
[0x489:0x48d]
---
Predecessors: [0x2e5]
Successors: [0x1a8]
---
0x489 JUMPDEST
0x48a POP
0x48b POP
0x48c POP
0x48d JUMP
---
0x489: JUMPDEST 
0x48d: JUMP 0x1a8
---
Entry stack: [V11, 0x1a8, V78, V98, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x48e
[0x48e:0x4b2]
---
Predecessors: [0x1b6]
Successors: [0x1bf]
---
0x48e JUMPDEST
0x48f PUSH1 0x0
0x491 DUP1
0x492 SWAP1
0x493 SLOAD
0x494 SWAP1
0x495 PUSH2 0x100
0x498 EXP
0x499 SWAP1
0x49a DIV
0x49b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b0 AND
0x4b1 DUP2
0x4b2 JUMP
---
0x48e: JUMPDEST 
0x48f: V270 = 0x0
0x493: V271 = S[0x0]
0x495: V272 = 0x100
0x498: V273 = EXP 0x100 0x0
0x49a: V274 = DIV V271 0x1
0x49b: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x4b2: JUMP 0x1bf
---
Entry stack: [V11, 0x1bf]
Stack pops: 1
Stack additions: [S0, V276]
Exit stack: [V11, 0x1bf, V276]

================================

Block 0x4b3
[0x4b3:0x4de]
---
Predecessors: []
Successors: []
---
0x4b3 STOP
0x4b4 LOG1
0x4b5 PUSH6 0x627a7a723058
0x4bc SHA3
0x4bd MISSING 0xe9
0x4be MISSING 0xe1
0x4bf DUP8
0x4c0 SWAP15
0x4c1 MISSING 0x4e
0x4c2 SWAP13
0x4c3 DUP9
0x4c4 CALL
0x4c5 CALL
0x4c6 DUP1
0x4c7 SAR
0x4c8 SWAP2
0x4c9 EQ
0x4ca SWAP2
0x4cb PUSH18 0x1cbce39543b99320254bdac83e29c8d76300
0x4de MISSING 0x29
---
0x4b3: STOP 
0x4b4: LOG S0 S1 S2
0x4b5: V277 = 0x627a7a723058
0x4bc: V278 = SHA3 0x627a7a723058 S3
0x4bd: MISSING 0xe9
0x4be: MISSING 0xe1
0x4c1: MISSING 0x4e
0x4c4: V279 = CALL S8 S13 S1 S2 S3 S4 S5
0x4c5: V280 = CALL V279 S6 S7 S8 S9 S10 S11
0x4c7: V281 = SAR V280 V280
0x4c9: V282 = EQ S0 S12
0x4cb: V283 = 0x1cbce39543b99320254bdac83e29c8d76300
0x4de: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V278, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S7, 0x1cbce39543b99320254bdac83e29c8d76300, S14, V281, V282]
Exit stack: []

================================

Function 0:
Public function signature: 0x6691461a
Entry block: 0x67
Exit block: 0xa8
Body: 0x67, 0x6f, 0x73, 0xa8, 0x201, 0x223, 0x227

Function 1:
Public function signature: 0xbff99c6c
Entry block: 0xaa
Exit block: 0xbf
Body: 0xaa, 0xb2, 0xb6, 0xbf, 0x26a

Function 2:
Public function signature: 0xc80f3c8a
Entry block: 0x101
Exit block: 0x478
Body: 0x101, 0x109, 0x10d, 0x1a8, 0x290, 0x2dc, 0x2e0, 0x2e5, 0x2ef, 0x35b, 0x35c, 0x373, 0x374, 0x432, 0x436, 0x441, 0x44a, 0x45c, 0x460, 0x478, 0x47c, 0x489

Function 3:
Public function signature: 0xfc0c546a
Entry block: 0x1aa
Exit block: 0x1bf
Body: 0x1aa, 0x1b2, 0x1b6, 0x1bf, 0x48e

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

