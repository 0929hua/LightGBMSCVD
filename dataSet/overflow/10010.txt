Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xbff99c6c
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xbff99c6c
0x3c: V13 = EQ 0xbff99c6c V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb3]
---
0x41 DUP1
0x42 PUSH4 0xc80f3c8a
0x47 EQ
0x48 PUSH2 0xb3
0x4b JUMPI
---
0x42: V15 = 0xc80f3c8a
0x47: V16 = EQ 0xc80f3c8a V11
0x48: V17 = 0xb3
0x4b: JUMPI 0xb3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x15c]
---
0x4c DUP1
0x4d PUSH4 0xfc0c546a
0x52 EQ
0x53 PUSH2 0x15c
0x56 JUMPI
---
0x4d: V18 = 0xfc0c546a
0x52: V19 = EQ 0xfc0c546a V11
0x53: V20 = 0x15c
0x56: JUMPI 0x15c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x1b3]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x1b3
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x1b3
0x70: JUMP 0x1b3
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0xb2]
---
Predecessors: [0x1b3]
Successors: []
---
0x71 JUMPDEST
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 DUP3
0x77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c AND
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 DUP2
0xa4 MSTORE
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP2
0xa9 POP
0xaa POP
0xab PUSH1 0x40
0xad MLOAD
0xae DUP1
0xaf SWAP2
0xb0 SUB
0xb1 SWAP1
0xb2 RETURN
---
0x71: JUMPDEST 
0x72: V28 = 0x40
0x74: V29 = M[0x40]
0x77: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x8d: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa4: M[V29] = V33
0xa5: V34 = 0x20
0xa7: V35 = ADD 0x20 V29
0xab: V36 = 0x40
0xad: V37 = M[0x40]
0xb0: V38 = SUB V35 V37
0xb2: RETURN V37 V38
---
Entry stack: [V11, 0x71, V113]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0x41]
Successors: [0xbb, 0xbf]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 DUP1
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb3: JUMPDEST 
0xb4: V39 = CALLVALUE
0xb6: V40 = ISZERO V39
0xb7: V41 = 0xbf
0xba: JUMPI 0xbf V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V11, V39]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb3]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V42 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V39]

================================

Block 0xbf
[0xbf:0x159]
---
Predecessors: [0xb3]
Successors: [0x1d9]
---
0xbf JUMPDEST
0xc0 POP
0xc1 PUSH2 0x15a
0xc4 PUSH1 0x4
0xc6 DUP1
0xc7 CALLDATASIZE
0xc8 SUB
0xc9 DUP2
0xca ADD
0xcb SWAP1
0xcc DUP1
0xcd DUP1
0xce CALLDATALOAD
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 DUP3
0xd5 ADD
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd DUP1
0xde DUP1
0xdf PUSH1 0x20
0xe1 MUL
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 SWAP1
0xe9 DUP2
0xea ADD
0xeb PUSH1 0x40
0xed MSTORE
0xee DUP1
0xef SWAP4
0xf0 SWAP3
0xf1 SWAP2
0xf2 SWAP1
0xf3 DUP2
0xf4 DUP2
0xf5 MSTORE
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 DUP4
0xfa DUP4
0xfb PUSH1 0x20
0xfd MUL
0xfe DUP1
0xff DUP3
0x100 DUP5
0x101 CALLDATACOPY
0x102 DUP3
0x103 ADD
0x104 SWAP2
0x105 POP
0x106 POP
0x107 POP
0x108 POP
0x109 POP
0x10a POP
0x10b SWAP2
0x10c SWAP3
0x10d SWAP2
0x10e SWAP3
0x10f SWAP1
0x110 DUP1
0x111 CALLDATALOAD
0x112 SWAP1
0x113 PUSH1 0x20
0x115 ADD
0x116 SWAP1
0x117 DUP3
0x118 ADD
0x119 DUP1
0x11a CALLDATALOAD
0x11b SWAP1
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 DUP1
0x121 DUP1
0x122 PUSH1 0x20
0x124 MUL
0x125 PUSH1 0x20
0x127 ADD
0x128 PUSH1 0x40
0x12a MLOAD
0x12b SWAP1
0x12c DUP2
0x12d ADD
0x12e PUSH1 0x40
0x130 MSTORE
0x131 DUP1
0x132 SWAP4
0x133 SWAP3
0x134 SWAP2
0x135 SWAP1
0x136 DUP2
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c DUP4
0x13d DUP4
0x13e PUSH1 0x20
0x140 MUL
0x141 DUP1
0x142 DUP3
0x143 DUP5
0x144 CALLDATACOPY
0x145 DUP3
0x146 ADD
0x147 SWAP2
0x148 POP
0x149 POP
0x14a POP
0x14b POP
0x14c POP
0x14d POP
0x14e SWAP2
0x14f SWAP3
0x150 SWAP2
0x151 SWAP3
0x152 SWAP1
0x153 POP
0x154 POP
0x155 POP
0x156 PUSH2 0x1d9
0x159 JUMP
---
0xbf: JUMPDEST 
0xc1: V43 = 0x15a
0xc4: V44 = 0x4
0xc7: V45 = CALLDATASIZE
0xc8: V46 = SUB V45 0x4
0xca: V47 = ADD 0x4 V46
0xce: V48 = CALLDATALOAD 0x4
0xd0: V49 = 0x20
0xd2: V50 = ADD 0x20 0x4
0xd5: V51 = ADD 0x4 V48
0xd7: V52 = CALLDATALOAD V51
0xd9: V53 = 0x20
0xdb: V54 = ADD 0x20 V51
0xdf: V55 = 0x20
0xe1: V56 = MUL 0x20 V52
0xe2: V57 = 0x20
0xe4: V58 = ADD 0x20 V56
0xe5: V59 = 0x40
0xe7: V60 = M[0x40]
0xea: V61 = ADD V60 V58
0xeb: V62 = 0x40
0xed: M[0x40] = V61
0xf5: M[V60] = V52
0xf6: V63 = 0x20
0xf8: V64 = ADD 0x20 V60
0xfb: V65 = 0x20
0xfd: V66 = MUL 0x20 V52
0x101: CALLDATACOPY V64 V54 V66
0x103: V67 = ADD V64 V66
0x111: V68 = CALLDATALOAD 0x24
0x113: V69 = 0x20
0x115: V70 = ADD 0x20 0x24
0x118: V71 = ADD 0x4 V68
0x11a: V72 = CALLDATALOAD V71
0x11c: V73 = 0x20
0x11e: V74 = ADD 0x20 V71
0x122: V75 = 0x20
0x124: V76 = MUL 0x20 V72
0x125: V77 = 0x20
0x127: V78 = ADD 0x20 V76
0x128: V79 = 0x40
0x12a: V80 = M[0x40]
0x12d: V81 = ADD V80 V78
0x12e: V82 = 0x40
0x130: M[0x40] = V81
0x138: M[V80] = V72
0x139: V83 = 0x20
0x13b: V84 = ADD 0x20 V80
0x13e: V85 = 0x20
0x140: V86 = MUL 0x20 V72
0x144: CALLDATACOPY V84 V74 V86
0x146: V87 = ADD V84 V86
0x156: V88 = 0x1d9
0x159: JUMP 0x1d9
---
Entry stack: [V11, V39]
Stack pops: 1
Stack additions: [0x15a, V60, V80]
Exit stack: [V11, 0x15a, V60, V80]

================================

Block 0x15a
[0x15a:0x15b]
---
Predecessors: [0x3d2]
Successors: []
---
0x15a JUMPDEST
0x15b STOP
---
0x15a: JUMPDEST 
0x15b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x4c]
Successors: [0x164, 0x168]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e DUP1
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x15c: JUMPDEST 
0x15d: V89 = CALLVALUE
0x15f: V90 = ISZERO V89
0x160: V91 = 0x168
0x163: JUMPI 0x168 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x15c]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V92 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x168
[0x168:0x170]
---
Predecessors: [0x15c]
Successors: [0x3d7]
---
0x168 JUMPDEST
0x169 POP
0x16a PUSH2 0x171
0x16d PUSH2 0x3d7
0x170 JUMP
---
0x168: JUMPDEST 
0x16a: V93 = 0x171
0x16d: V94 = 0x3d7
0x170: JUMP 0x3d7
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0x171]
Exit stack: [V11, 0x171]

================================

Block 0x171
[0x171:0x1b2]
---
Predecessors: [0x3d7]
Successors: []
---
0x171 JUMPDEST
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 DUP3
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a2 AND
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 SWAP2
0x1a9 POP
0x1aa POP
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae DUP1
0x1af SWAP2
0x1b0 SUB
0x1b1 SWAP1
0x1b2 RETURN
---
0x171: JUMPDEST 
0x172: V95 = 0x40
0x174: V96 = M[0x40]
0x177: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x18d: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1a4: M[V96] = V100
0x1a5: V101 = 0x20
0x1a7: V102 = ADD 0x20 V96
0x1ab: V103 = 0x40
0x1ad: V104 = M[0x40]
0x1b0: V105 = SUB V102 V104
0x1b2: RETURN V104 V105
---
Entry stack: [V11, 0x171, V237]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x171]

================================

Block 0x1b3
[0x1b3:0x1d8]
---
Predecessors: [0x68]
Successors: [0x71]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0x0
0x1b8 SWAP1
0x1b9 SLOAD
0x1ba SWAP1
0x1bb PUSH2 0x100
0x1be EXP
0x1bf SWAP1
0x1c0 DIV
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 DUP2
0x1d8 JUMP
---
0x1b3: JUMPDEST 
0x1b4: V106 = 0x1
0x1b6: V107 = 0x0
0x1b9: V108 = S[0x1]
0x1bb: V109 = 0x100
0x1be: V110 = EXP 0x100 0x0
0x1c0: V111 = DIV V108 0x1
0x1c1: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1d8: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: [S0, V113]
Exit stack: [V11, 0x71, V113]

================================

Block 0x1d9
[0x1d9:0x224]
---
Predecessors: [0xbf]
Successors: [0x225, 0x229]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x0
0x1dc PUSH20 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 CALLER
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e EQ
0x21f ISZERO
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x1d9: JUMPDEST 
0x1da: V114 = 0x0
0x1dc: V115 = 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x1f1: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x207: V118 = CALLER
0x208: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x21e: V121 = EQ V120 0xc45e9c64eee1f987f9a5b7a8e0ad1f760defa7d8
0x21f: V122 = ISZERO V121
0x220: V123 = ISZERO V122
0x221: V124 = 0x229
0x224: JUMPI 0x229 V123
---
Entry stack: [V11, 0x15a, V60, V80]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x15a, V60, V80, 0x0]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x1d9]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V125 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15a, V60, V80, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, 0x0]

================================

Block 0x229
[0x229:0x22d]
---
Predecessors: [0x1d9]
Successors: [0x22e]
---
0x229 JUMPDEST
0x22a PUSH1 0x0
0x22c SWAP1
0x22d POP
---
0x229: JUMPDEST 
0x22a: V126 = 0x0
---
Entry stack: [V11, 0x15a, V60, V80, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x15a, V60, V80, 0x0]

================================

Block 0x22e
[0x22e:0x237]
---
Predecessors: [0x229, 0x3c5]
Successors: [0x238, 0x3d2]
---
0x22e JUMPDEST
0x22f DUP3
0x230 MLOAD
0x231 DUP2
0x232 LT
0x233 ISZERO
0x234 PUSH2 0x3d2
0x237 JUMPI
---
0x22e: JUMPDEST 
0x230: V127 = M[V60]
0x232: V128 = LT S0 V127
0x233: V129 = ISZERO V128
0x234: V130 = 0x3d2
0x237: JUMPI 0x3d2 V129
---
Entry stack: [V11, 0x15a, V60, V80, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x15a, V60, V80, S0]

================================

Block 0x238
[0x238:0x2a3]
---
Predecessors: [0x22e]
Successors: [0x2a4, 0x2a5]
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b SWAP1
0x23c SLOAD
0x23d SWAP1
0x23e PUSH2 0x100
0x241 EXP
0x242 SWAP1
0x243 DIV
0x244 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x259 AND
0x25a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26f AND
0x270 PUSH4 0x23b872dd
0x275 PUSH1 0x1
0x277 PUSH1 0x0
0x279 SWAP1
0x27a SLOAD
0x27b SWAP1
0x27c PUSH2 0x100
0x27f EXP
0x280 SWAP1
0x281 DIV
0x282 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x297 AND
0x298 DUP6
0x299 DUP5
0x29a DUP2
0x29b MLOAD
0x29c DUP2
0x29d LT
0x29e ISZERO
0x29f ISZERO
0x2a0 PUSH2 0x2a5
0x2a3 JUMPI
---
0x238: V131 = 0x0
0x23c: V132 = S[0x0]
0x23e: V133 = 0x100
0x241: V134 = EXP 0x100 0x0
0x243: V135 = DIV V132 0x1
0x244: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x259: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x25a: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x26f: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x270: V140 = 0x23b872dd
0x275: V141 = 0x1
0x277: V142 = 0x0
0x27a: V143 = S[0x1]
0x27c: V144 = 0x100
0x27f: V145 = EXP 0x100 0x0
0x281: V146 = DIV V143 0x1
0x282: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x297: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x29b: V149 = M[V60]
0x29d: V150 = LT S0 V149
0x29e: V151 = ISZERO V150
0x29f: V152 = ISZERO V151
0x2a0: V153 = 0x2a5
0x2a3: JUMPI 0x2a5 V152
---
Entry stack: [V11, 0x15a, V60, V80, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V139, 0x23b872dd, V148, S2, S0]
Exit stack: [V11, 0x15a, V60, V80, S0, V139, 0x23b872dd, V148, V60, S0]

================================

Block 0x2a4
[0x2a4:0x2a4]
---
Predecessors: [0x238]
Successors: []
---
0x2a4 INVALID
---
0x2a4: INVALID 
---
Entry stack: [V11, 0x15a, V60, V80, S5, V139, 0x23b872dd, V148, V60, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, S5, V139, 0x23b872dd, V148, V60, S0]

================================

Block 0x2a5
[0x2a5:0x2bb]
---
Predecessors: [0x238]
Successors: [0x2bc, 0x2bd]
---
0x2a5 JUMPDEST
0x2a6 SWAP1
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa SWAP1
0x2ab PUSH1 0x20
0x2ad MUL
0x2ae ADD
0x2af MLOAD
0x2b0 DUP6
0x2b1 DUP6
0x2b2 DUP2
0x2b3 MLOAD
0x2b4 DUP2
0x2b5 LT
0x2b6 ISZERO
0x2b7 ISZERO
0x2b8 PUSH2 0x2bd
0x2bb JUMPI
---
0x2a5: JUMPDEST 
0x2a7: V154 = 0x20
0x2a9: V155 = ADD 0x20 V60
0x2ab: V156 = 0x20
0x2ad: V157 = MUL 0x20 S0
0x2ae: V158 = ADD V157 V155
0x2af: V159 = M[V158]
0x2b3: V160 = M[V80]
0x2b5: V161 = LT S5 V160
0x2b6: V162 = ISZERO V161
0x2b7: V163 = ISZERO V162
0x2b8: V164 = 0x2bd
0x2bb: JUMPI 0x2bd V163
---
Entry stack: [V11, 0x15a, V60, V80, S5, V139, 0x23b872dd, V148, V60, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V159, S6, S5]
Exit stack: [V11, 0x15a, V60, V80, S5, V139, 0x23b872dd, V148, V159, V80, S5]

================================

Block 0x2bc
[0x2bc:0x2bc]
---
Predecessors: [0x2a5]
Successors: []
---
0x2bc INVALID
---
0x2bc: INVALID 
---
Entry stack: [V11, 0x15a, V60, V80, S6, V139, 0x23b872dd, V148, V159, V80, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, S6, V139, 0x23b872dd, V148, V159, V80, S0]

================================

Block 0x2bd
[0x2bd:0x37a]
---
Predecessors: [0x2a5]
Successors: [0x37b, 0x37f]
---
0x2bd JUMPDEST
0x2be SWAP1
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP1
0x2c3 PUSH1 0x20
0x2c5 MUL
0x2c6 ADD
0x2c7 MLOAD
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP5
0x2cc PUSH4 0xffffffff
0x2d1 AND
0x2d2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2f0 MUL
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x4
0x2f5 ADD
0x2f6 DUP1
0x2f7 DUP5
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d AND
0x30e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x323 AND
0x324 DUP2
0x325 MSTORE
0x326 PUSH1 0x20
0x328 ADD
0x329 DUP4
0x32a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33f AND
0x340 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x355 AND
0x356 DUP2
0x357 MSTORE
0x358 PUSH1 0x20
0x35a ADD
0x35b DUP3
0x35c DUP2
0x35d MSTORE
0x35e PUSH1 0x20
0x360 ADD
0x361 SWAP4
0x362 POP
0x363 POP
0x364 POP
0x365 POP
0x366 PUSH1 0x20
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c DUP4
0x36d SUB
0x36e DUP2
0x36f PUSH1 0x0
0x371 DUP8
0x372 DUP1
0x373 EXTCODESIZE
0x374 ISZERO
0x375 DUP1
0x376 ISZERO
0x377 PUSH2 0x37f
0x37a JUMPI
---
0x2bd: JUMPDEST 
0x2bf: V165 = 0x20
0x2c1: V166 = ADD 0x20 V80
0x2c3: V167 = 0x20
0x2c5: V168 = MUL 0x20 S0
0x2c6: V169 = ADD V168 V166
0x2c7: V170 = M[V169]
0x2c8: V171 = 0x40
0x2ca: V172 = M[0x40]
0x2cc: V173 = 0xffffffff
0x2d1: V174 = AND 0xffffffff 0x23b872dd
0x2d2: V175 = 0x100000000000000000000000000000000000000000000000000000000
0x2f0: V176 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x2f2: M[V172] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x2f3: V177 = 0x4
0x2f5: V178 = ADD 0x4 V172
0x2f8: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x30e: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x323: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x325: M[V178] = V182
0x326: V183 = 0x20
0x328: V184 = ADD 0x20 V178
0x32a: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x340: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x355: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x357: M[V184] = V188
0x358: V189 = 0x20
0x35a: V190 = ADD 0x20 V184
0x35d: M[V190] = V170
0x35e: V191 = 0x20
0x360: V192 = ADD 0x20 V190
0x366: V193 = 0x20
0x368: V194 = 0x40
0x36a: V195 = M[0x40]
0x36d: V196 = SUB V192 V195
0x36f: V197 = 0x0
0x373: V198 = EXTCODESIZE V139
0x374: V199 = ISZERO V198
0x376: V200 = ISZERO V199
0x377: V201 = 0x37f
0x37a: JUMPI 0x37f V200
---
Entry stack: [V11, 0x15a, V60, V80, S6, V139, 0x23b872dd, V148, V159, V80, S0]
Stack pops: 6
Stack additions: [S5, S4, V192, 0x20, V195, V196, V195, 0x0, S5, V199]
Exit stack: [V11, 0x15a, V60, V80, S6, V139, 0x23b872dd, V192, 0x20, V195, V196, V195, 0x0, V139, V199]

================================

Block 0x37b
[0x37b:0x37e]
---
Predecessors: [0x2bd]
Successors: []
---
0x37b PUSH1 0x0
0x37d DUP1
0x37e REVERT
---
0x37b: V202 = 0x0
0x37e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15a, V60, V80, S10, V139, 0x23b872dd, V192, 0x20, V195, V196, V195, 0x0, V139, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, S10, V139, 0x23b872dd, V192, 0x20, V195, V196, V195, 0x0, V139, V199]

================================

Block 0x37f
[0x37f:0x389]
---
Predecessors: [0x2bd]
Successors: [0x38a, 0x393]
---
0x37f JUMPDEST
0x380 POP
0x381 GAS
0x382 CALL
0x383 ISZERO
0x384 DUP1
0x385 ISZERO
0x386 PUSH2 0x393
0x389 JUMPI
---
0x37f: JUMPDEST 
0x381: V203 = GAS
0x382: V204 = CALL V203 V139 0x0 V195 V196 V195 0x20
0x383: V205 = ISZERO V204
0x385: V206 = ISZERO V205
0x386: V207 = 0x393
0x389: JUMPI 0x393 V206
---
Entry stack: [V11, 0x15a, V60, V80, S10, V139, 0x23b872dd, V192, 0x20, V195, V196, V195, 0x0, V139, V199]
Stack pops: 7
Stack additions: [V205]
Exit stack: [V11, 0x15a, V60, V80, S10, V139, 0x23b872dd, V192, V205]

================================

Block 0x38a
[0x38a:0x392]
---
Predecessors: [0x37f]
Successors: []
---
0x38a RETURNDATASIZE
0x38b PUSH1 0x0
0x38d DUP1
0x38e RETURNDATACOPY
0x38f RETURNDATASIZE
0x390 PUSH1 0x0
0x392 REVERT
---
0x38a: V208 = RETURNDATASIZE
0x38b: V209 = 0x0
0x38e: RETURNDATACOPY 0x0 0x0 V208
0x38f: V210 = RETURNDATASIZE
0x390: V211 = 0x0
0x392: REVERT 0x0 V210
---
Entry stack: [V11, 0x15a, V60, V80, S4, V139, 0x23b872dd, V192, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, S4, V139, 0x23b872dd, V192, V205]

================================

Block 0x393
[0x393:0x3a4]
---
Predecessors: [0x37f]
Successors: [0x3a5, 0x3a9]
---
0x393 JUMPDEST
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b RETURNDATASIZE
0x39c PUSH1 0x20
0x39e DUP2
0x39f LT
0x3a0 ISZERO
0x3a1 PUSH2 0x3a9
0x3a4 JUMPI
---
0x393: JUMPDEST 
0x398: V212 = 0x40
0x39a: V213 = M[0x40]
0x39b: V214 = RETURNDATASIZE
0x39c: V215 = 0x20
0x39f: V216 = LT V214 0x20
0x3a0: V217 = ISZERO V216
0x3a1: V218 = 0x3a9
0x3a4: JUMPI 0x3a9 V217
---
Entry stack: [V11, 0x15a, V60, V80, S4, V139, 0x23b872dd, V192, V205]
Stack pops: 4
Stack additions: [V213, V214]
Exit stack: [V11, 0x15a, V60, V80, S4, V213, V214]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x393]
Successors: []
---
0x3a5 PUSH1 0x0
0x3a7 DUP1
0x3a8 REVERT
---
0x3a5: V219 = 0x0
0x3a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15a, V60, V80, S2, V213, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, S2, V213, V214]

================================

Block 0x3a9
[0x3a9:0x3c0]
---
Predecessors: [0x393]
Successors: [0x3c1, 0x3c5]
---
0x3a9 JUMPDEST
0x3aa DUP2
0x3ab ADD
0x3ac SWAP1
0x3ad DUP1
0x3ae DUP1
0x3af MLOAD
0x3b0 SWAP1
0x3b1 PUSH1 0x20
0x3b3 ADD
0x3b4 SWAP1
0x3b5 SWAP3
0x3b6 SWAP2
0x3b7 SWAP1
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb ISZERO
0x3bc ISZERO
0x3bd PUSH2 0x3c5
0x3c0 JUMPI
---
0x3a9: JUMPDEST 
0x3ab: V220 = ADD V213 V214
0x3af: V221 = M[V213]
0x3b1: V222 = 0x20
0x3b3: V223 = ADD 0x20 V213
0x3bb: V224 = ISZERO V221
0x3bc: V225 = ISZERO V224
0x3bd: V226 = 0x3c5
0x3c0: JUMPI 0x3c5 V225
---
Entry stack: [V11, 0x15a, V60, V80, S2, V213, V214]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, S2]

================================

Block 0x3c1
[0x3c1:0x3c4]
---
Predecessors: [0x3a9]
Successors: []
---
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 REVERT
---
0x3c1: V227 = 0x0
0x3c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15a, V60, V80, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a, V60, V80, S0]

================================

Block 0x3c5
[0x3c5:0x3d1]
---
Predecessors: [0x3a9]
Successors: [0x22e]
---
0x3c5 JUMPDEST
0x3c6 DUP1
0x3c7 DUP1
0x3c8 PUSH1 0x1
0x3ca ADD
0x3cb SWAP2
0x3cc POP
0x3cd POP
0x3ce PUSH2 0x22e
0x3d1 JUMP
---
0x3c5: JUMPDEST 
0x3c8: V228 = 0x1
0x3ca: V229 = ADD 0x1 S0
0x3ce: V230 = 0x22e
0x3d1: JUMP 0x22e
---
Entry stack: [V11, 0x15a, V60, V80, S0]
Stack pops: 1
Stack additions: [V229]
Exit stack: [V11, 0x15a, V60, V80, V229]

================================

Block 0x3d2
[0x3d2:0x3d6]
---
Predecessors: [0x22e]
Successors: [0x15a]
---
0x3d2 JUMPDEST
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 JUMP
---
0x3d2: JUMPDEST 
0x3d6: JUMP 0x15a
---
Entry stack: [V11, 0x15a, V60, V80, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d7
[0x3d7:0x3fb]
---
Predecessors: [0x168]
Successors: [0x171]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db SWAP1
0x3dc SLOAD
0x3dd SWAP1
0x3de PUSH2 0x100
0x3e1 EXP
0x3e2 SWAP1
0x3e3 DIV
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa DUP2
0x3fb JUMP
---
0x3d7: JUMPDEST 
0x3d8: V231 = 0x0
0x3dc: V232 = S[0x0]
0x3de: V233 = 0x100
0x3e1: V234 = EXP 0x100 0x0
0x3e3: V235 = DIV V232 0x1
0x3e4: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x3fb: JUMP 0x171
---
Entry stack: [V11, 0x171]
Stack pops: 1
Stack additions: [S0, V237]
Exit stack: [V11, 0x171, V237]

================================

Block 0x3fc
[0x3fc:0x439]
---
Predecessors: []
Successors: []
---
0x3fc STOP
0x3fd LOG1
0x3fe PUSH6 0x627a7a723058
0x405 SHA3
0x406 SHR
0x407 PUSH24 0xef3a1a9df8fc130828d016d044377ba8bf10cc8c0c72859e
0x420 PUSH25 0x73c901e83d0029
---
0x3fc: STOP 
0x3fd: LOG S0 S1 S2
0x3fe: V238 = 0x627a7a723058
0x405: V239 = SHA3 0x627a7a723058 S3
0x406: V240 = SHR V239 S4
0x407: V241 = 0xef3a1a9df8fc130828d016d044377ba8bf10cc8c0c72859e
0x420: V242 = 0x73c901e83d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x73c901e83d0029, 0xef3a1a9df8fc130828d016d044377ba8bf10cc8c0c72859e, V240]
Exit stack: []

================================

Function 0:
Public function signature: 0xbff99c6c
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x1b3

Function 1:
Public function signature: 0xc80f3c8a
Entry block: 0xb3
Exit block: 0x3c1
Body: 0xb3, 0xbb, 0xbf, 0x15a, 0x1d9, 0x225, 0x229, 0x22e, 0x238, 0x2a4, 0x2a5, 0x2bc, 0x2bd, 0x37b, 0x37f, 0x38a, 0x393, 0x3a5, 0x3a9, 0x3c1, 0x3c5, 0x3d2

Function 2:
Public function signature: 0xfc0c546a
Entry block: 0x15c
Exit block: 0x171
Body: 0x15c, 0x164, 0x168, 0x171, 0x3d7

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

