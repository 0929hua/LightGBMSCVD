Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x69]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x12c0d1ea
0x34 EQ
0x35 PUSH2 0x69
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x12c0d1ea
0x34: V9 = EQ 0x12c0d1ea V7
0x35: V10 = 0x69
0x38: JUMPI 0x69 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x87]
---
0x39 DUP1
0x3a PUSH4 0x1b413d27
0x3f EQ
0x40 PUSH2 0x87
0x43 JUMPI
---
0x3a: V11 = 0x1b413d27
0x3f: V12 = EQ 0x1b413d27 V7
0x40: V13 = 0x87
0x43: JUMPI 0x87 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xbc]
---
0x44 DUP1
0x45 PUSH4 0x5d1c3171
0x4a EQ
0x4b PUSH2 0xbc
0x4e JUMPI
---
0x45: V14 = 0x5d1c3171
0x4a: V15 = EQ 0x5d1c3171 V7
0x4b: V16 = 0xbc
0x4e: JUMPI 0xbc V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xf1]
---
0x4f DUP1
0x50 PUSH4 0x8da5cb5b
0x55 EQ
0x56 PUSH2 0xf1
0x59 JUMPI
---
0x50: V17 = 0x8da5cb5b
0x55: V18 = EQ 0x8da5cb5b V7
0x56: V19 = 0xf1
0x59: JUMPI 0xf1 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x146]
---
0x5a DUP1
0x5b PUSH4 0xa7a38f0b
0x60 EQ
0x61 PUSH2 0x146
0x64 JUMPI
---
0x5b: V20 = 0xa7a38f0b
0x60: V21 = EQ 0xa7a38f0b V7
0x61: V22 = 0x146
0x64: JUMPI 0x146 V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x5a]
Successors: []
---
0x65 PUSH1 0x0
0x67 DUP1
0x68 REVERT
---
0x65: V23 = 0x0
0x68: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x69
[0x69:0x84]
---
Predecessors: [0x0]
Successors: [0x189]
---
0x69 JUMPDEST
0x6a PUSH2 0x85
0x6d PUSH1 0x4
0x6f DUP1
0x70 DUP1
0x71 CALLDATALOAD
0x72 PUSH4 0xffffffff
0x77 AND
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP2
0x7e SWAP1
0x7f POP
0x80 POP
0x81 PUSH2 0x189
0x84 JUMP
---
0x69: JUMPDEST 
0x6a: V24 = 0x85
0x6d: V25 = 0x4
0x71: V26 = CALLDATALOAD 0x4
0x72: V27 = 0xffffffff
0x77: V28 = AND 0xffffffff V26
0x79: V29 = 0x20
0x7b: V30 = ADD 0x20 0x4
0x81: V31 = 0x189
0x84: JUMP 0x189
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x85, V28]
Exit stack: [V7, 0x85, V28]

================================

Block 0x85
[0x85:0x86]
---
Predecessors: [0x1f9]
Successors: []
---
0x85 JUMPDEST
0x86 STOP
---
0x85: JUMPDEST 
0x86: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x87
[0x87:0x8d]
---
Predecessors: [0x39]
Successors: [0x8e, 0x92]
---
0x87 JUMPDEST
0x88 CALLVALUE
0x89 ISZERO
0x8a PUSH2 0x92
0x8d JUMPI
---
0x87: JUMPDEST 
0x88: V32 = CALLVALUE
0x89: V33 = ISZERO V32
0x8a: V34 = 0x92
0x8d: JUMPI 0x92 V33
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8e
[0x8e:0x91]
---
Predecessors: [0x87]
Successors: []
---
0x8e PUSH1 0x0
0x90 DUP1
0x91 REVERT
---
0x8e: V35 = 0x0
0x91: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0x87]
Successors: [0x266]
---
0x92 JUMPDEST
0x93 PUSH2 0x9a
0x96 PUSH2 0x266
0x99 JUMP
---
0x92: JUMPDEST 
0x93: V36 = 0x9a
0x96: V37 = 0x266
0x99: JUMP 0x266
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V7, 0x9a]

================================

Block 0x9a
[0x9a:0xbb]
---
Predecessors: [0x266]
Successors: []
---
0x9a JUMPDEST
0x9b PUSH1 0x40
0x9d MLOAD
0x9e DUP1
0x9f DUP3
0xa0 PUSH4 0xffffffff
0xa5 AND
0xa6 PUSH4 0xffffffff
0xab AND
0xac DUP2
0xad MSTORE
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP2
0xb2 POP
0xb3 POP
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0x9a: JUMPDEST 
0x9b: V38 = 0x40
0x9d: V39 = M[0x40]
0xa0: V40 = 0xffffffff
0xa5: V41 = AND 0xffffffff V175
0xa6: V42 = 0xffffffff
0xab: V43 = AND 0xffffffff V41
0xad: M[V39] = V43
0xae: V44 = 0x20
0xb0: V45 = ADD 0x20 V39
0xb4: V46 = 0x40
0xb6: V47 = M[0x40]
0xb9: V48 = SUB V45 V47
0xbb: RETURN V47 V48
---
Entry stack: [V7, V175]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x44]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V49 = CALLVALUE
0xbe: V50 = ISZERO V49
0xbf: V51 = 0xc7
0xc2: JUMPI 0xc7 V50
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V52 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xc7
[0xc7:0xce]
---
Predecessors: [0xbc]
Successors: [0x27f]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xcf
0xcb PUSH2 0x27f
0xce JUMP
---
0xc7: JUMPDEST 
0xc8: V53 = 0xcf
0xcb: V54 = 0x27f
0xce: JUMP 0x27f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xcf]
Exit stack: [V7, 0xcf]

================================

Block 0xcf
[0xcf:0xf0]
---
Predecessors: [0x27f]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 DUP3
0xd5 PUSH4 0xffffffff
0xda AND
0xdb PUSH4 0xffffffff
0xe0 AND
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP2
0xe7 POP
0xe8 POP
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed SWAP2
0xee SUB
0xef SWAP1
0xf0 RETURN
---
0xcf: JUMPDEST 
0xd0: V55 = 0x40
0xd2: V56 = M[0x40]
0xd5: V57 = 0xffffffff
0xda: V58 = AND 0xffffffff V182
0xdb: V59 = 0xffffffff
0xe0: V60 = AND 0xffffffff V58
0xe2: M[V56] = V60
0xe3: V61 = 0x20
0xe5: V62 = ADD 0x20 V56
0xe9: V63 = 0x40
0xeb: V64 = M[0x40]
0xee: V65 = SUB V62 V64
0xf0: RETURN V64 V65
---
Entry stack: [V7, 0xcf, V182]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xcf]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x4f]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V66 = CALLVALUE
0xf3: V67 = ISZERO V66
0xf4: V68 = 0xfc
0xf7: JUMPI 0xfc V67
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V69 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf1]
Successors: [0x294]
---
0xfc JUMPDEST
0xfd PUSH2 0x104
0x100 PUSH2 0x294
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V70 = 0x104
0x100: V71 = 0x294
0x103: JUMP 0x294
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V7, 0x104]

================================

Block 0x104
[0x104:0x145]
---
Predecessors: [0x294]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 DUP3
0x10a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f AND
0x120 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x135 AND
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a ADD
0x13b SWAP2
0x13c POP
0x13d POP
0x13e PUSH1 0x40
0x140 MLOAD
0x141 DUP1
0x142 SWAP2
0x143 SUB
0x144 SWAP1
0x145 RETURN
---
0x104: JUMPDEST 
0x105: V72 = 0x40
0x107: V73 = M[0x40]
0x10a: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x120: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x135: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x137: M[V73] = V77
0x138: V78 = 0x20
0x13a: V79 = ADD 0x20 V73
0x13e: V80 = 0x40
0x140: V81 = M[0x40]
0x143: V82 = SUB V79 V81
0x145: RETURN V81 V82
---
Entry stack: [V7, 0x104, V190]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x104]

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x5a]
Successors: [0x14d, 0x151]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V83 = CALLVALUE
0x148: V84 = ISZERO V83
0x149: V85 = 0x151
0x14c: JUMPI 0x151 V84
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x146]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V86 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x151
[0x151:0x166]
---
Predecessors: [0x146]
Successors: [0x2ba]
---
0x151 JUMPDEST
0x152 PUSH2 0x167
0x155 PUSH1 0x4
0x157 DUP1
0x158 DUP1
0x159 CALLDATALOAD
0x15a SWAP1
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP1
0x15f SWAP2
0x160 SWAP1
0x161 POP
0x162 POP
0x163 PUSH2 0x2ba
0x166 JUMP
---
0x151: JUMPDEST 
0x152: V87 = 0x167
0x155: V88 = 0x4
0x159: V89 = CALLDATALOAD 0x4
0x15b: V90 = 0x20
0x15d: V91 = ADD 0x20 0x4
0x163: V92 = 0x2ba
0x166: JUMP 0x2ba
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x167, V89]
Exit stack: [V7, 0x167, V89]

================================

Block 0x167
[0x167:0x188]
---
Predecessors: [0x2c9]
Successors: []
---
0x167 JUMPDEST
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c DUP3
0x16d PUSH4 0xffffffff
0x172 AND
0x173 PUSH4 0xffffffff
0x178 AND
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP2
0x17f POP
0x180 POP
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 SWAP2
0x186 SUB
0x187 SWAP1
0x188 RETURN
---
0x167: JUMPDEST 
0x168: V93 = 0x40
0x16a: V94 = M[0x40]
0x16d: V95 = 0xffffffff
0x172: V96 = AND 0xffffffff V212
0x173: V97 = 0xffffffff
0x178: V98 = AND 0xffffffff V96
0x17a: M[V94] = V98
0x17b: V99 = 0x20
0x17d: V100 = ADD 0x20 V94
0x181: V101 = 0x40
0x183: V102 = M[0x40]
0x186: V103 = SUB V100 V102
0x188: RETURN V102 V103
---
Entry stack: [V7, 0x167, V212]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x167]

================================

Block 0x189
[0x189:0x1e0]
---
Predecessors: [0x69]
Successors: [0x1e1, 0x1e5]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c PUSH1 0x4
0x18e SWAP1
0x18f SLOAD
0x190 SWAP1
0x191 PUSH2 0x100
0x194 EXP
0x195 SWAP1
0x196 DIV
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 CALLER
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da EQ
0x1db ISZERO
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x189: JUMPDEST 
0x18a: V104 = 0x0
0x18c: V105 = 0x4
0x18f: V106 = S[0x0]
0x191: V107 = 0x100
0x194: V108 = EXP 0x100 0x4
0x196: V109 = DIV V106 0x100000000
0x197: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1ad: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1c3: V114 = CALLER
0x1c4: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1da: V117 = EQ V116 V113
0x1db: V118 = ISZERO V117
0x1dc: V119 = ISZERO V118
0x1dd: V120 = 0x1e5
0x1e0: JUMPI 0x1e5 V119
---
Entry stack: [V7, 0x85, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x85, V28]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x189]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V121 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V7, 0x85, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x85, V28]

================================

Block 0x1e5
[0x1e5:0x1f8]
---
Predecessors: [0x189]
Successors: [0x2f3]
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x1
0x1e8 DUP1
0x1e9 SLOAD
0x1ea DUP1
0x1eb PUSH1 0x1
0x1ed ADD
0x1ee DUP3
0x1ef DUP2
0x1f0 PUSH2 0x1f9
0x1f3 SWAP2
0x1f4 SWAP1
0x1f5 PUSH2 0x2f3
0x1f8 JUMP
---
0x1e5: JUMPDEST 
0x1e6: V122 = 0x1
0x1e9: V123 = S[0x1]
0x1eb: V124 = 0x1
0x1ed: V125 = ADD 0x1 V123
0x1f0: V126 = 0x1f9
0x1f5: V127 = 0x2f3
0x1f8: JUMP 0x2f3
---
Entry stack: [V7, 0x85, V28]
Stack pops: 0
Stack additions: [0x1, V123, V125, 0x1f9, 0x1, V125]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125]

================================

Block 0x1f9
[0x1f9:0x265]
---
Predecessors: [0x328]
Successors: [0x85]
---
0x1f9 JUMPDEST
0x1fa SWAP2
0x1fb PUSH1 0x0
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 PUSH1 0x0
0x202 SHA3
0x203 SWAP1
0x204 PUSH1 0x8
0x206 SWAP2
0x207 DUP3
0x208 DUP3
0x209 DIV
0x20a ADD
0x20b SWAP2
0x20c SWAP1
0x20d MOD
0x20e PUSH1 0x4
0x210 MUL
0x211 PUSH1 0x0
0x213 DUP1
0x214 SWAP1
0x215 SLOAD
0x216 SWAP1
0x217 PUSH2 0x100
0x21a EXP
0x21b SWAP1
0x21c DIV
0x21d PUSH4 0xffffffff
0x222 AND
0x223 SWAP1
0x224 SWAP2
0x225 SWAP1
0x226 SWAP2
0x227 PUSH2 0x100
0x22a EXP
0x22b DUP2
0x22c SLOAD
0x22d DUP2
0x22e PUSH4 0xffffffff
0x233 MUL
0x234 NOT
0x235 AND
0x236 SWAP1
0x237 DUP4
0x238 PUSH4 0xffffffff
0x23d AND
0x23e MUL
0x23f OR
0x240 SWAP1
0x241 SSTORE
0x242 POP
0x243 POP
0x244 DUP1
0x245 PUSH1 0x0
0x247 DUP1
0x248 PUSH2 0x100
0x24b EXP
0x24c DUP2
0x24d SLOAD
0x24e DUP2
0x24f PUSH4 0xffffffff
0x254 MUL
0x255 NOT
0x256 AND
0x257 SWAP1
0x258 DUP4
0x259 PUSH4 0xffffffff
0x25e AND
0x25f MUL
0x260 OR
0x261 SWAP1
0x262 SSTORE
0x263 POP
0x264 POP
0x265 JUMP
---
0x1f9: JUMPDEST 
0x1fb: V128 = 0x0
0x1fd: M[0x0] = 0x1
0x1fe: V129 = 0x20
0x200: V130 = 0x0
0x202: V131 = SHA3 0x0 0x20
0x204: V132 = 0x8
0x209: V133 = DIV V123 0x8
0x20a: V134 = ADD V133 V131
0x20d: V135 = MOD V123 0x8
0x20e: V136 = 0x4
0x210: V137 = MUL 0x4 V135
0x211: V138 = 0x0
0x215: V139 = S[0x0]
0x217: V140 = 0x100
0x21a: V141 = EXP 0x100 0x0
0x21c: V142 = DIV V139 0x1
0x21d: V143 = 0xffffffff
0x222: V144 = AND 0xffffffff V142
0x227: V145 = 0x100
0x22a: V146 = EXP 0x100 V137
0x22c: V147 = S[V134]
0x22e: V148 = 0xffffffff
0x233: V149 = MUL 0xffffffff V146
0x234: V150 = NOT V149
0x235: V151 = AND V150 V147
0x238: V152 = 0xffffffff
0x23d: V153 = AND 0xffffffff V144
0x23e: V154 = MUL V153 V146
0x23f: V155 = OR V154 V151
0x241: S[V134] = V155
0x245: V156 = 0x0
0x248: V157 = 0x100
0x24b: V158 = EXP 0x100 0x0
0x24d: V159 = S[0x0]
0x24f: V160 = 0xffffffff
0x254: V161 = MUL 0xffffffff 0x1
0x255: V162 = NOT 0xffffffff
0x256: V163 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000 V159
0x259: V164 = 0xffffffff
0x25e: V165 = AND 0xffffffff V28
0x25f: V166 = MUL V165 0x1
0x260: V167 = OR V166 V163
0x262: S[0x0] = V167
0x265: JUMP 0x85
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125]
Stack pops: 5
Stack additions: []
Exit stack: [V7]

================================

Block 0x266
[0x266:0x27e]
---
Predecessors: [0x92]
Successors: [0x9a]
---
0x266 JUMPDEST
0x267 PUSH1 0x0
0x269 DUP1
0x26a PUSH1 0x0
0x26c SWAP1
0x26d SLOAD
0x26e SWAP1
0x26f PUSH2 0x100
0x272 EXP
0x273 SWAP1
0x274 DIV
0x275 PUSH4 0xffffffff
0x27a AND
0x27b SWAP1
0x27c POP
0x27d SWAP1
0x27e JUMP
---
0x266: JUMPDEST 
0x267: V168 = 0x0
0x26a: V169 = 0x0
0x26d: V170 = S[0x0]
0x26f: V171 = 0x100
0x272: V172 = EXP 0x100 0x0
0x274: V173 = DIV V170 0x1
0x275: V174 = 0xffffffff
0x27a: V175 = AND 0xffffffff V173
0x27e: JUMP 0x9a
---
Entry stack: [V7, 0x9a]
Stack pops: 1
Stack additions: [V175]
Exit stack: [V7, V175]

================================

Block 0x27f
[0x27f:0x293]
---
Predecessors: [0xc7]
Successors: [0xcf]
---
0x27f JUMPDEST
0x280 PUSH1 0x0
0x282 DUP1
0x283 SWAP1
0x284 SLOAD
0x285 SWAP1
0x286 PUSH2 0x100
0x289 EXP
0x28a SWAP1
0x28b DIV
0x28c PUSH4 0xffffffff
0x291 AND
0x292 DUP2
0x293 JUMP
---
0x27f: JUMPDEST 
0x280: V176 = 0x0
0x284: V177 = S[0x0]
0x286: V178 = 0x100
0x289: V179 = EXP 0x100 0x0
0x28b: V180 = DIV V177 0x1
0x28c: V181 = 0xffffffff
0x291: V182 = AND 0xffffffff V180
0x293: JUMP 0xcf
---
Entry stack: [V7, 0xcf]
Stack pops: 1
Stack additions: [S0, V182]
Exit stack: [V7, 0xcf, V182]

================================

Block 0x294
[0x294:0x2b9]
---
Predecessors: [0xfc]
Successors: [0x104]
---
0x294 JUMPDEST
0x295 PUSH1 0x0
0x297 PUSH1 0x4
0x299 SWAP1
0x29a SLOAD
0x29b SWAP1
0x29c PUSH2 0x100
0x29f EXP
0x2a0 SWAP1
0x2a1 DIV
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 DUP2
0x2b9 JUMP
---
0x294: JUMPDEST 
0x295: V183 = 0x0
0x297: V184 = 0x4
0x29a: V185 = S[0x0]
0x29c: V186 = 0x100
0x29f: V187 = EXP 0x100 0x4
0x2a1: V188 = DIV V185 0x100000000
0x2a2: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x2b9: JUMP 0x104
---
Entry stack: [V7, 0x104]
Stack pops: 1
Stack additions: [S0, V190]
Exit stack: [V7, 0x104, V190]

================================

Block 0x2ba
[0x2ba:0x2c7]
---
Predecessors: [0x151]
Successors: [0x2c8, 0x2c9]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x1
0x2bd DUP2
0x2be DUP2
0x2bf SLOAD
0x2c0 DUP2
0x2c1 LT
0x2c2 ISZERO
0x2c3 ISZERO
0x2c4 PUSH2 0x2c9
0x2c7 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V191 = 0x1
0x2bf: V192 = S[0x1]
0x2c1: V193 = LT V89 V192
0x2c2: V194 = ISZERO V193
0x2c3: V195 = ISZERO V194
0x2c4: V196 = 0x2c9
0x2c7: JUMPI 0x2c9 V195
---
Entry stack: [V7, 0x167, V89]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V7, 0x167, V89, 0x1, V89]

================================

Block 0x2c8
[0x2c8:0x2c8]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c8 INVALID
---
0x2c8: INVALID 
---
Entry stack: [V7, 0x167, V89, 0x1, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x167, V89, 0x1, V89]

================================

Block 0x2c9
[0x2c9:0x2f2]
---
Predecessors: [0x2ba]
Successors: [0x167]
---
0x2c9 JUMPDEST
0x2ca SWAP1
0x2cb PUSH1 0x0
0x2cd MSTORE
0x2ce PUSH1 0x20
0x2d0 PUSH1 0x0
0x2d2 SHA3
0x2d3 SWAP1
0x2d4 PUSH1 0x8
0x2d6 SWAP2
0x2d7 DUP3
0x2d8 DUP3
0x2d9 DIV
0x2da ADD
0x2db SWAP2
0x2dc SWAP1
0x2dd MOD
0x2de PUSH1 0x4
0x2e0 MUL
0x2e1 SWAP2
0x2e2 POP
0x2e3 SLOAD
0x2e4 SWAP1
0x2e5 PUSH2 0x100
0x2e8 EXP
0x2e9 SWAP1
0x2ea DIV
0x2eb PUSH4 0xffffffff
0x2f0 AND
0x2f1 DUP2
0x2f2 JUMP
---
0x2c9: JUMPDEST 
0x2cb: V197 = 0x0
0x2cd: M[0x0] = 0x1
0x2ce: V198 = 0x20
0x2d0: V199 = 0x0
0x2d2: V200 = SHA3 0x0 0x20
0x2d4: V201 = 0x8
0x2d9: V202 = DIV V89 0x8
0x2da: V203 = ADD V202 V200
0x2dd: V204 = MOD V89 0x8
0x2de: V205 = 0x4
0x2e0: V206 = MUL 0x4 V204
0x2e3: V207 = S[V203]
0x2e5: V208 = 0x100
0x2e8: V209 = EXP 0x100 V206
0x2ea: V210 = DIV V207 V209
0x2eb: V211 = 0xffffffff
0x2f0: V212 = AND 0xffffffff V210
0x2f2: JUMP 0x167
---
Entry stack: [V7, 0x167, V89, 0x1, V89]
Stack pops: 4
Stack additions: [S3, V212]
Exit stack: [V7, 0x167, V212]

================================

Block 0x2f3
[0x2f3:0x300]
---
Predecessors: [0x1e5]
Successors: [0x301, 0x328]
---
0x2f3 JUMPDEST
0x2f4 DUP2
0x2f5 SLOAD
0x2f6 DUP2
0x2f7 DUP4
0x2f8 SSTORE
0x2f9 DUP2
0x2fa DUP2
0x2fb ISZERO
0x2fc GT
0x2fd PUSH2 0x328
0x300 JUMPI
---
0x2f3: JUMPDEST 
0x2f5: V213 = S[0x1]
0x2f8: S[0x1] = V125
0x2fb: V214 = ISZERO V213
0x2fc: V215 = GT V214 V125
0x2fd: V216 = 0x328
0x300: JUMPI 0x328 V215
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125]
Stack pops: 2
Stack additions: [S1, S0, V213]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, V213]

================================

Block 0x301
[0x301:0x326]
---
Predecessors: [0x2f3]
Successors: [0x32d]
---
0x301 PUSH1 0x7
0x303 ADD
0x304 PUSH1 0x8
0x306 SWAP1
0x307 DIV
0x308 DUP2
0x309 PUSH1 0x7
0x30b ADD
0x30c PUSH1 0x8
0x30e SWAP1
0x30f DIV
0x310 DUP4
0x311 PUSH1 0x0
0x313 MSTORE
0x314 PUSH1 0x20
0x316 PUSH1 0x0
0x318 SHA3
0x319 SWAP2
0x31a DUP3
0x31b ADD
0x31c SWAP2
0x31d ADD
0x31e PUSH2 0x327
0x321 SWAP2
0x322 SWAP1
0x323 PUSH2 0x32d
0x326 JUMP
---
0x301: V217 = 0x7
0x303: V218 = ADD 0x7 V213
0x304: V219 = 0x8
0x307: V220 = DIV V218 0x8
0x309: V221 = 0x7
0x30b: V222 = ADD 0x7 V125
0x30c: V223 = 0x8
0x30f: V224 = DIV V222 0x8
0x311: V225 = 0x0
0x313: M[0x0] = 0x1
0x314: V226 = 0x20
0x316: V227 = 0x0
0x318: V228 = SHA3 0x0 0x20
0x31b: V229 = ADD V228 V220
0x31d: V230 = ADD V228 V224
0x31e: V231 = 0x327
0x323: V232 = 0x32d
0x326: JUMP 0x32d
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, V213]
Stack pops: 3
Stack additions: [S2, S1, 0x327, V229, V230]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, V229, V230]

================================

Block 0x327
[0x327:0x327]
---
Predecessors: [0x34f]
Successors: [0x328]
---
0x327 JUMPDEST
---
0x327: JUMPDEST 
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, V229]

================================

Block 0x328
[0x328:0x32c]
---
Predecessors: [0x2f3, 0x327]
Successors: [0x1f9]
---
0x328 JUMPDEST
0x329 POP
0x32a POP
0x32b POP
0x32c JUMP
---
0x328: JUMPDEST 
0x32c: JUMP 0x1f9
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V7, 0x85, V28, 0x1, V123, V125]

================================

Block 0x32d
[0x32d:0x332]
---
Predecessors: [0x301]
Successors: [0x333]
---
0x32d JUMPDEST
0x32e PUSH2 0x34f
0x331 SWAP2
0x332 SWAP1
---
0x32d: JUMPDEST 
0x32e: V233 = 0x34f
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, V229, V230]
Stack pops: 2
Stack additions: [0x34f, S1, S0]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, 0x34f, V229, V230]

================================

Block 0x333
[0x333:0x33b]
---
Predecessors: [0x32d, 0x33c]
Successors: [0x33c, 0x34b]
---
0x333 JUMPDEST
0x334 DUP1
0x335 DUP3
0x336 GT
0x337 ISZERO
0x338 PUSH2 0x34b
0x33b JUMPI
---
0x333: JUMPDEST 
0x336: V234 = GT V229 S0
0x337: V235 = ISZERO V234
0x338: V236 = 0x34b
0x33b: JUMPI 0x34b V235
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, 0x34f, V229, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, 0x34f, V229, S0]

================================

Block 0x33c
[0x33c:0x34a]
---
Predecessors: [0x333]
Successors: [0x333]
---
0x33c PUSH1 0x0
0x33e DUP2
0x33f PUSH1 0x0
0x341 SWAP1
0x342 SSTORE
0x343 POP
0x344 PUSH1 0x1
0x346 ADD
0x347 PUSH2 0x333
0x34a JUMP
---
0x33c: V237 = 0x0
0x33f: V238 = 0x0
0x342: S[S0] = 0x0
0x344: V239 = 0x1
0x346: V240 = ADD 0x1 S0
0x347: V241 = 0x333
0x34a: JUMP 0x333
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, 0x34f, V229, S0]
Stack pops: 1
Stack additions: [V240]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, 0x34f, V229, V240]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x333]
Successors: [0x34f]
---
0x34b JUMPDEST
0x34c POP
0x34d SWAP1
0x34e JUMP
---
0x34b: JUMPDEST 
0x34e: JUMP 0x34f
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, 0x34f, V229, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, V229]

================================

Block 0x34f
[0x34f:0x351]
---
Predecessors: [0x34b]
Successors: [0x327]
---
0x34f JUMPDEST
0x350 SWAP1
0x351 JUMP
---
0x34f: JUMPDEST 
0x351: JUMP 0x327
---
Entry stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, 0x327, V229]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x85, V28, 0x1, V123, V125, 0x1f9, 0x1, V125, V229]

================================

Block 0x352
[0x352:0x37d]
---
Predecessors: []
Successors: []
---
0x352 STOP
0x353 LOG1
0x354 PUSH6 0x627a7a723058
0x35b SHA3
0x35c MISSING 0xe0
0x35d EXP
0x35e DUP10
0x35f MISSING 0xdf
0x360 DUP3
0x361 DUP13
0x362 DUP16
0x363 SDIV
0x364 MISSING 0x21
0x365 LOG3
0x366 MISSING 0x47
0x367 MISSING 0xec
0x368 SWAP12
0x369 DUP15
0x36a MISSING 0xc3
0x36b SELFDESTRUCT
0x36c PUSH9 0x4dbe5eb431e85bdffe
0x376 DUP3
0x377 MISSING 0x22
0x378 MISSING 0xc5
0x379 SLOAD
0x37a SWAP9
0x37b AND
0x37c STOP
0x37d MISSING 0x29
---
0x352: STOP 
0x353: LOG S0 S1 S2
0x354: V242 = 0x627a7a723058
0x35b: V243 = SHA3 0x627a7a723058 S3
0x35c: MISSING 0xe0
0x35d: V244 = EXP S0 S1
0x35f: MISSING 0xdf
0x363: V245 = SDIV S13 S11
0x364: MISSING 0x21
0x365: LOG S0 S1 S2 S3 S4
0x366: MISSING 0x47
0x367: MISSING 0xec
0x36a: MISSING 0xc3
0x36b: SELFDESTRUCT S0
0x36c: V246 = 0x4dbe5eb431e85bdffe
0x377: MISSING 0x22
0x378: MISSING 0xc5
0x379: V247 = S[S0]
0x37b: V248 = AND S9 S1
0x37c: STOP 
0x37d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V243, S10, V244, S2, S3, S4, S5, S6, S7, S8, S9, S10, V245, S2, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, S13, S14, S1, 0x4dbe5eb431e85bdffe, S0, S1, V248, S2, S3, S4, S5, S6, S7, S8, V247]
Exit stack: []

================================

Function 0:
Public function signature: 0x12c0d1ea
Entry block: 0x69
Exit block: 0x85
Body: 0x69, 0x85, 0x189, 0x1e1, 0x1e5, 0x1f9, 0x2f3, 0x301, 0x327, 0x328, 0x32d, 0x333, 0x33c, 0x34b, 0x34f

Function 1:
Public function signature: 0x1b413d27
Entry block: 0x87
Exit block: 0x9a
Body: 0x87, 0x8e, 0x92, 0x9a, 0x266

Function 2:
Public function signature: 0x5d1c3171
Entry block: 0xbc
Exit block: 0xcf
Body: 0xbc, 0xc3, 0xc7, 0xcf, 0x27f

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xf1
Exit block: 0x104
Body: 0xf1, 0xf8, 0xfc, 0x104, 0x294

Function 4:
Public function signature: 0xa7a38f0b
Entry block: 0x146
Exit block: 0x167
Body: 0x146, 0x14d, 0x151, 0x167, 0x2ba, 0x2c8, 0x2c9

Function 5:
Public fallback function
Entry block: 0x65
Exit block: 0x65
Body: 0x65

