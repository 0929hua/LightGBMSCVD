Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8c
0xa: JUMPI 0x8c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x91]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x91
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x91
0x3e: JUMPI 0x91 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x120]
---
0x3f DUP1
0x40 PUSH4 0x18160ddd
0x45 EQ
0x46 PUSH2 0x120
0x49 JUMPI
---
0x40: V14 = 0x18160ddd
0x45: V15 = EQ 0x18160ddd V10
0x46: V16 = 0x120
0x49: JUMPI 0x120 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x149]
---
0x4a DUP1
0x4b PUSH4 0x23b872dd
0x50 EQ
0x51 PUSH2 0x149
0x54 JUMPI
---
0x4b: V17 = 0x23b872dd
0x50: V18 = EQ 0x23b872dd V10
0x51: V19 = 0x149
0x54: JUMPI 0x149 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1c2]
---
0x55 DUP1
0x56 PUSH4 0x313ce567
0x5b EQ
0x5c PUSH2 0x1c2
0x5f JUMPI
---
0x56: V20 = 0x313ce567
0x5b: V21 = EQ 0x313ce567 V10
0x5c: V22 = 0x1c2
0x5f: JUMPI 0x1c2 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1f1]
---
0x60 DUP1
0x61 PUSH4 0x70a08231
0x66 EQ
0x67 PUSH2 0x1f1
0x6a JUMPI
---
0x61: V23 = 0x70a08231
0x66: V24 = EQ 0x70a08231 V10
0x67: V25 = 0x1f1
0x6a: JUMPI 0x1f1 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x23e]
---
0x6b DUP1
0x6c PUSH4 0x95d89b41
0x71 EQ
0x72 PUSH2 0x23e
0x75 JUMPI
---
0x6c: V26 = 0x95d89b41
0x71: V27 = EQ 0x95d89b41 V10
0x72: V28 = 0x23e
0x75: JUMPI 0x23e V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2cd]
---
0x76 DUP1
0x77 PUSH4 0xa9059cbb
0x7c EQ
0x7d PUSH2 0x2cd
0x80 JUMPI
---
0x77: V29 = 0xa9059cbb
0x7c: V30 = EQ 0xa9059cbb V10
0x7d: V31 = 0x2cd
0x80: JUMPI 0x2cd V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x30f]
---
0x81 DUP1
0x82 PUSH4 0xdd62ed3e
0x87 EQ
0x88 PUSH2 0x30f
0x8b JUMPI
---
0x82: V32 = 0xdd62ed3e
0x87: V33 = EQ 0xdd62ed3e V10
0x88: V34 = 0x30f
0x8b: JUMPI 0x30f V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x90]
---
Predecessors: [0x0, 0x81]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8c: JUMPDEST 
0x8d: V35 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x91
[0x91:0x97]
---
Predecessors: [0xb]
Successors: [0x98, 0x9c]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x91: JUMPDEST 
0x92: V36 = CALLVALUE
0x93: V37 = ISZERO V36
0x94: V38 = 0x9c
0x97: JUMPI 0x9c V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x91]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V39 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x91]
Successors: [0x37b]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x37b
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V40 = 0xa4
0xa0: V41 = 0x37b
0xa3: JUMP 0x37b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V10, 0xa4]

================================

Block 0xa4
[0xa4:0xc8]
---
Predecessors: [0x411]
Successors: [0xc9]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 DUP1
0xaa PUSH1 0x20
0xac ADD
0xad DUP3
0xae DUP2
0xaf SUB
0xb0 DUP3
0xb1 MSTORE
0xb2 DUP4
0xb3 DUP2
0xb4 DUP2
0xb5 MLOAD
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP2
0xbc POP
0xbd DUP1
0xbe MLOAD
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP1
0xc4 DUP1
0xc5 DUP4
0xc6 DUP4
0xc7 PUSH1 0x0
---
0xa4: JUMPDEST 
0xa5: V42 = 0x40
0xa7: V43 = M[0x40]
0xaa: V44 = 0x20
0xac: V45 = ADD 0x20 V43
0xaf: V46 = SUB V45 V43
0xb1: M[V43] = V46
0xb5: V47 = M[V269]
0xb7: M[V45] = V47
0xb8: V48 = 0x20
0xba: V49 = ADD 0x20 V45
0xbe: V50 = M[V269]
0xc0: V51 = 0x20
0xc2: V52 = ADD 0x20 V269
0xc7: V53 = 0x0
---
Entry stack: [V10, 0xa4, V269]
Stack pops: 1
Stack additions: [S0, V43, V43, V49, V52, V50, V50, V49, V52, 0x0]
Exit stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, 0x0]

================================

Block 0xc9
[0xc9:0xd1]
---
Predecessors: [0xa4, 0xda]
Successors: [0xd2, 0xe5]
---
0xc9 JUMPDEST
0xca DUP4
0xcb DUP2
0xcc LT
0xcd ISZERO
0xce PUSH2 0xe5
0xd1 JUMPI
---
0xc9: JUMPDEST 
0xcc: V54 = LT S0 V50
0xcd: V55 = ISZERO V54
0xce: V56 = 0xe5
0xd1: JUMPI 0xe5 V55
---
Entry stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, S0]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0xc9]
Successors: [0xda]
---
0xd2 DUP1
0xd3 DUP3
0xd4 ADD
0xd5 MLOAD
0xd6 DUP2
0xd7 DUP5
0xd8 ADD
0xd9 MSTORE
---
0xd4: V57 = ADD V52 S0
0xd5: V58 = M[V57]
0xd8: V59 = ADD V49 S0
0xd9: M[V59] = V58
---
Entry stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, S0]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xd2]
Successors: [0xc9]
---
0xda JUMPDEST
0xdb PUSH1 0x20
0xdd DUP2
0xde ADD
0xdf SWAP1
0xe0 POP
0xe1 PUSH2 0xc9
0xe4 JUMP
---
0xda: JUMPDEST 
0xdb: V60 = 0x20
0xde: V61 = ADD S0 0x20
0xe1: V62 = 0xc9
0xe4: JUMP 0xc9
---
Entry stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, S0]
Stack pops: 1
Stack additions: [V61]
Exit stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, V61]

================================

Block 0xe5
[0xe5:0xf8]
---
Predecessors: [0xc9]
Successors: [0xf9, 0x112]
---
0xe5 JUMPDEST
0xe6 POP
0xe7 POP
0xe8 POP
0xe9 POP
0xea SWAP1
0xeb POP
0xec SWAP1
0xed DUP2
0xee ADD
0xef SWAP1
0xf0 PUSH1 0x1f
0xf2 AND
0xf3 DUP1
0xf4 ISZERO
0xf5 PUSH2 0x112
0xf8 JUMPI
---
0xe5: JUMPDEST 
0xee: V63 = ADD V50 V49
0xf0: V64 = 0x1f
0xf2: V65 = AND 0x1f V50
0xf4: V66 = ISZERO V65
0xf5: V67 = 0x112
0xf8: JUMPI 0x112 V66
---
Entry stack: [V10, 0xa4, V269, V43, V43, V49, V52, V50, V50, V49, V52, S0]
Stack pops: 7
Stack additions: [V63, V65]
Exit stack: [V10, 0xa4, V269, V43, V43, V63, V65]

================================

Block 0xf9
[0xf9:0x111]
---
Predecessors: [0xe5]
Successors: [0x112]
---
0xf9 DUP1
0xfa DUP3
0xfb SUB
0xfc DUP1
0xfd MLOAD
0xfe PUSH1 0x1
0x100 DUP4
0x101 PUSH1 0x20
0x103 SUB
0x104 PUSH2 0x100
0x107 EXP
0x108 SUB
0x109 NOT
0x10a AND
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP2
0x111 POP
---
0xfb: V68 = SUB V63 V65
0xfd: V69 = M[V68]
0xfe: V70 = 0x1
0x101: V71 = 0x20
0x103: V72 = SUB 0x20 V65
0x104: V73 = 0x100
0x107: V74 = EXP 0x100 V72
0x108: V75 = SUB V74 0x1
0x109: V76 = NOT V75
0x10a: V77 = AND V76 V69
0x10c: M[V68] = V77
0x10d: V78 = 0x20
0x10f: V79 = ADD 0x20 V68
---
Entry stack: [V10, 0xa4, V269, V43, V43, V63, V65]
Stack pops: 2
Stack additions: [V79, S0]
Exit stack: [V10, 0xa4, V269, V43, V43, V79, V65]

================================

Block 0x112
[0x112:0x11f]
---
Predecessors: [0xe5, 0xf9]
Successors: []
---
0x112 JUMPDEST
0x113 POP
0x114 SWAP3
0x115 POP
0x116 POP
0x117 POP
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x112: JUMPDEST 
0x118: V80 = 0x40
0x11a: V81 = M[0x40]
0x11d: V82 = SUB S1 V81
0x11f: RETURN V81 V82
---
Entry stack: [V10, 0xa4, V269, V43, V43, S1, V65]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x3f]
Successors: [0x127, 0x12b]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V83 = CALLVALUE
0x122: V84 = ISZERO V83
0x123: V85 = 0x12b
0x126: JUMPI 0x12b V84
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x120]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V86 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x132]
---
Predecessors: [0x120]
Successors: [0x419]
---
0x12b JUMPDEST
0x12c PUSH2 0x133
0x12f PUSH2 0x419
0x132 JUMP
---
0x12b: JUMPDEST 
0x12c: V87 = 0x133
0x12f: V88 = 0x419
0x132: JUMP 0x419
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x133]
Exit stack: [V10, 0x133]

================================

Block 0x133
[0x133:0x148]
---
Predecessors: [0x419]
Successors: []
---
0x133 JUMPDEST
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 DUP3
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP2
0x13f POP
0x140 POP
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 RETURN
---
0x133: JUMPDEST 
0x134: V89 = 0x40
0x136: V90 = M[0x40]
0x13a: M[V90] = V314
0x13b: V91 = 0x20
0x13d: V92 = ADD 0x20 V90
0x141: V93 = 0x40
0x143: V94 = M[0x40]
0x146: V95 = SUB V92 V94
0x148: RETURN V94 V95
---
Entry stack: [V10, 0x133, V314]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x133]

================================

Block 0x149
[0x149:0x14f]
---
Predecessors: [0x4a]
Successors: [0x150, 0x154]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x149: JUMPDEST 
0x14a: V96 = CALLVALUE
0x14b: V97 = ISZERO V96
0x14c: V98 = 0x154
0x14f: JUMPI 0x154 V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x149]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V99 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x154
[0x154:0x1a7]
---
Predecessors: [0x149]
Successors: [0x41f]
---
0x154 JUMPDEST
0x155 PUSH2 0x1a8
0x158 PUSH1 0x4
0x15a DUP1
0x15b DUP1
0x15c CALLDATALOAD
0x15d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x172 AND
0x173 SWAP1
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP1
0x178 SWAP2
0x179 SWAP1
0x17a DUP1
0x17b CALLDATALOAD
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 SWAP1
0x193 PUSH1 0x20
0x195 ADD
0x196 SWAP1
0x197 SWAP2
0x198 SWAP1
0x199 DUP1
0x19a CALLDATALOAD
0x19b SWAP1
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 SWAP2
0x1a1 SWAP1
0x1a2 POP
0x1a3 POP
0x1a4 PUSH2 0x41f
0x1a7 JUMP
---
0x154: JUMPDEST 
0x155: V100 = 0x1a8
0x158: V101 = 0x4
0x15c: V102 = CALLDATALOAD 0x4
0x15d: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x172: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x174: V105 = 0x20
0x176: V106 = ADD 0x20 0x4
0x17b: V107 = CALLDATALOAD 0x24
0x17c: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x193: V110 = 0x20
0x195: V111 = ADD 0x20 0x24
0x19a: V112 = CALLDATALOAD 0x44
0x19c: V113 = 0x20
0x19e: V114 = ADD 0x20 0x44
0x1a4: V115 = 0x41f
0x1a7: JUMP 0x41f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a8, V104, V109, V112]
Exit stack: [V10, 0x1a8, V104, V109, V112]

================================

Block 0x1a8
[0x1a8:0x1c1]
---
Predecessors: [0x546]
Successors: []
---
0x1a8 JUMPDEST
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad DUP3
0x1ae ISZERO
0x1af ISZERO
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 SWAP2
0x1b8 POP
0x1b9 POP
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be SWAP2
0x1bf SUB
0x1c0 SWAP1
0x1c1 RETURN
---
0x1a8: JUMPDEST 
0x1a9: V116 = 0x40
0x1ab: V117 = M[0x40]
0x1ae: V118 = ISZERO 0x1
0x1af: V119 = ISZERO 0x0
0x1b0: V120 = ISZERO 0x1
0x1b1: V121 = ISZERO 0x0
0x1b3: M[V117] = 0x1
0x1b4: V122 = 0x20
0x1b6: V123 = ADD 0x20 V117
0x1ba: V124 = 0x40
0x1bc: V125 = M[0x40]
0x1bf: V126 = SUB V123 V125
0x1c1: RETURN V125 V126
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c2
[0x1c2:0x1c8]
---
Predecessors: [0x55]
Successors: [0x1c9, 0x1cd]
---
0x1c2 JUMPDEST
0x1c3 CALLVALUE
0x1c4 ISZERO
0x1c5 PUSH2 0x1cd
0x1c8 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V127 = CALLVALUE
0x1c4: V128 = ISZERO V127
0x1c5: V129 = 0x1cd
0x1c8: JUMPI 0x1cd V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c9
[0x1c9:0x1cc]
---
Predecessors: [0x1c2]
Successors: []
---
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc REVERT
---
0x1c9: V130 = 0x0
0x1cc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x1c2]
Successors: [0x54d]
---
0x1cd JUMPDEST
0x1ce PUSH2 0x1d5
0x1d1 PUSH2 0x54d
0x1d4 JUMP
---
0x1cd: JUMPDEST 
0x1ce: V131 = 0x1d5
0x1d1: V132 = 0x54d
0x1d4: JUMP 0x54d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5]
Exit stack: [V10, 0x1d5]

================================

Block 0x1d5
[0x1d5:0x1f0]
---
Predecessors: [0x54d]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP3
0x1db PUSH1 0xff
0x1dd AND
0x1de PUSH1 0xff
0x1e0 AND
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP2
0x1e7 POP
0x1e8 POP
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec DUP1
0x1ed SWAP2
0x1ee SUB
0x1ef SWAP1
0x1f0 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V133 = 0x40
0x1d8: V134 = M[0x40]
0x1db: V135 = 0xff
0x1dd: V136 = AND 0xff V384
0x1de: V137 = 0xff
0x1e0: V138 = AND 0xff V136
0x1e2: M[V134] = V138
0x1e3: V139 = 0x20
0x1e5: V140 = ADD 0x20 V134
0x1e9: V141 = 0x40
0x1eb: V142 = M[0x40]
0x1ee: V143 = SUB V140 V142
0x1f0: RETURN V142 V143
---
Entry stack: [V10, 0x1d5, V384]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d5]

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x60]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V144 = CALLVALUE
0x1f3: V145 = ISZERO V144
0x1f4: V146 = 0x1fc
0x1f7: JUMPI 0x1fc V145
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V147 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fc
[0x1fc:0x227]
---
Predecessors: [0x1f1]
Successors: [0x560]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x228
0x200 PUSH1 0x4
0x202 DUP1
0x203 DUP1
0x204 CALLDATALOAD
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b SWAP1
0x21c PUSH1 0x20
0x21e ADD
0x21f SWAP1
0x220 SWAP2
0x221 SWAP1
0x222 POP
0x223 POP
0x224 PUSH2 0x560
0x227 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V148 = 0x228
0x200: V149 = 0x4
0x204: V150 = CALLDATALOAD 0x4
0x205: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x21c: V153 = 0x20
0x21e: V154 = ADD 0x20 0x4
0x224: V155 = 0x560
0x227: JUMP 0x560
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x228, V152]
Exit stack: [V10, 0x228, V152]

================================

Block 0x228
[0x228:0x23d]
---
Predecessors: [0x560]
Successors: []
---
0x228 JUMPDEST
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d DUP3
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 SWAP2
0x234 POP
0x235 POP
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a SWAP2
0x23b SUB
0x23c SWAP1
0x23d RETURN
---
0x228: JUMPDEST 
0x229: V156 = 0x40
0x22b: V157 = M[0x40]
0x22f: M[V157] = V392
0x230: V158 = 0x20
0x232: V159 = ADD 0x20 V157
0x236: V160 = 0x40
0x238: V161 = M[0x40]
0x23b: V162 = SUB V159 V161
0x23d: RETURN V161 V162
---
Entry stack: [V10, 0x228, V392]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x228]

================================

Block 0x23e
[0x23e:0x244]
---
Predecessors: [0x6b]
Successors: [0x245, 0x249]
---
0x23e JUMPDEST
0x23f CALLVALUE
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x23e: JUMPDEST 
0x23f: V163 = CALLVALUE
0x240: V164 = ISZERO V163
0x241: V165 = 0x249
0x244: JUMPI 0x249 V164
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x23e]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V166 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x249
[0x249:0x250]
---
Predecessors: [0x23e]
Successors: [0x578]
---
0x249 JUMPDEST
0x24a PUSH2 0x251
0x24d PUSH2 0x578
0x250 JUMP
---
0x249: JUMPDEST 
0x24a: V167 = 0x251
0x24d: V168 = 0x578
0x250: JUMP 0x578
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x251]
Exit stack: [V10, 0x251]

================================

Block 0x251
[0x251:0x275]
---
Predecessors: [0x60e]
Successors: [0x276]
---
0x251 JUMPDEST
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 DUP1
0x257 PUSH1 0x20
0x259 ADD
0x25a DUP3
0x25b DUP2
0x25c SUB
0x25d DUP3
0x25e MSTORE
0x25f DUP4
0x260 DUP2
0x261 DUP2
0x262 MLOAD
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x20
0x267 ADD
0x268 SWAP2
0x269 POP
0x26a DUP1
0x26b MLOAD
0x26c SWAP1
0x26d PUSH1 0x20
0x26f ADD
0x270 SWAP1
0x271 DUP1
0x272 DUP4
0x273 DUP4
0x274 PUSH1 0x0
---
0x251: JUMPDEST 
0x252: V169 = 0x40
0x254: V170 = M[0x40]
0x257: V171 = 0x20
0x259: V172 = ADD 0x20 V170
0x25c: V173 = SUB V172 V170
0x25e: M[V170] = V173
0x262: V174 = M[V413]
0x264: M[V172] = V174
0x265: V175 = 0x20
0x267: V176 = ADD 0x20 V172
0x26b: V177 = M[V413]
0x26d: V178 = 0x20
0x26f: V179 = ADD 0x20 V413
0x274: V180 = 0x0
---
Entry stack: [V10, 0x251, V413]
Stack pops: 1
Stack additions: [S0, V170, V170, V176, V179, V177, V177, V176, V179, 0x0]
Exit stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, 0x0]

================================

Block 0x276
[0x276:0x27e]
---
Predecessors: [0x251, 0x287]
Successors: [0x27f, 0x292]
---
0x276 JUMPDEST
0x277 DUP4
0x278 DUP2
0x279 LT
0x27a ISZERO
0x27b PUSH2 0x292
0x27e JUMPI
---
0x276: JUMPDEST 
0x279: V181 = LT S0 V177
0x27a: V182 = ISZERO V181
0x27b: V183 = 0x292
0x27e: JUMPI 0x292 V182
---
Entry stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, S0]

================================

Block 0x27f
[0x27f:0x286]
---
Predecessors: [0x276]
Successors: [0x287]
---
0x27f DUP1
0x280 DUP3
0x281 ADD
0x282 MLOAD
0x283 DUP2
0x284 DUP5
0x285 ADD
0x286 MSTORE
---
0x281: V184 = ADD V179 S0
0x282: V185 = M[V184]
0x285: V186 = ADD V176 S0
0x286: M[V186] = V185
---
Entry stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, S0]

================================

Block 0x287
[0x287:0x291]
---
Predecessors: [0x27f]
Successors: [0x276]
---
0x287 JUMPDEST
0x288 PUSH1 0x20
0x28a DUP2
0x28b ADD
0x28c SWAP1
0x28d POP
0x28e PUSH2 0x276
0x291 JUMP
---
0x287: JUMPDEST 
0x288: V187 = 0x20
0x28b: V188 = ADD S0 0x20
0x28e: V189 = 0x276
0x291: JUMP 0x276
---
Entry stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 1
Stack additions: [V188]
Exit stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, V188]

================================

Block 0x292
[0x292:0x2a5]
---
Predecessors: [0x276]
Successors: [0x2a6, 0x2bf]
---
0x292 JUMPDEST
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 SWAP1
0x298 POP
0x299 SWAP1
0x29a DUP2
0x29b ADD
0x29c SWAP1
0x29d PUSH1 0x1f
0x29f AND
0x2a0 DUP1
0x2a1 ISZERO
0x2a2 PUSH2 0x2bf
0x2a5 JUMPI
---
0x292: JUMPDEST 
0x29b: V190 = ADD V177 V176
0x29d: V191 = 0x1f
0x29f: V192 = AND 0x1f V177
0x2a1: V193 = ISZERO V192
0x2a2: V194 = 0x2bf
0x2a5: JUMPI 0x2bf V193
---
Entry stack: [V10, 0x251, V413, V170, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 7
Stack additions: [V190, V192]
Exit stack: [V10, 0x251, V413, V170, V170, V190, V192]

================================

Block 0x2a6
[0x2a6:0x2be]
---
Predecessors: [0x292]
Successors: [0x2bf]
---
0x2a6 DUP1
0x2a7 DUP3
0x2a8 SUB
0x2a9 DUP1
0x2aa MLOAD
0x2ab PUSH1 0x1
0x2ad DUP4
0x2ae PUSH1 0x20
0x2b0 SUB
0x2b1 PUSH2 0x100
0x2b4 EXP
0x2b5 SUB
0x2b6 NOT
0x2b7 AND
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd SWAP2
0x2be POP
---
0x2a8: V195 = SUB V190 V192
0x2aa: V196 = M[V195]
0x2ab: V197 = 0x1
0x2ae: V198 = 0x20
0x2b0: V199 = SUB 0x20 V192
0x2b1: V200 = 0x100
0x2b4: V201 = EXP 0x100 V199
0x2b5: V202 = SUB V201 0x1
0x2b6: V203 = NOT V202
0x2b7: V204 = AND V203 V196
0x2b9: M[V195] = V204
0x2ba: V205 = 0x20
0x2bc: V206 = ADD 0x20 V195
---
Entry stack: [V10, 0x251, V413, V170, V170, V190, V192]
Stack pops: 2
Stack additions: [V206, S0]
Exit stack: [V10, 0x251, V413, V170, V170, V206, V192]

================================

Block 0x2bf
[0x2bf:0x2cc]
---
Predecessors: [0x292, 0x2a6]
Successors: []
---
0x2bf JUMPDEST
0x2c0 POP
0x2c1 SWAP3
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 SWAP2
0x2ca SUB
0x2cb SWAP1
0x2cc RETURN
---
0x2bf: JUMPDEST 
0x2c5: V207 = 0x40
0x2c7: V208 = M[0x40]
0x2ca: V209 = SUB S1 V208
0x2cc: RETURN V208 V209
---
Entry stack: [V10, 0x251, V413, V170, V170, S1, V192]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x251]

================================

Block 0x2cd
[0x2cd:0x2d3]
---
Predecessors: [0x76]
Successors: [0x2d4, 0x2d8]
---
0x2cd JUMPDEST
0x2ce CALLVALUE
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V210 = CALLVALUE
0x2cf: V211 = ISZERO V210
0x2d0: V212 = 0x2d8
0x2d3: JUMPI 0x2d8 V211
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x2cd]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V213 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d8
[0x2d8:0x30c]
---
Predecessors: [0x2cd]
Successors: [0x616]
---
0x2d8 JUMPDEST
0x2d9 PUSH2 0x30d
0x2dc PUSH1 0x4
0x2de DUP1
0x2df DUP1
0x2e0 CALLDATALOAD
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 SWAP1
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP1
0x2fc SWAP2
0x2fd SWAP1
0x2fe DUP1
0x2ff CALLDATALOAD
0x300 SWAP1
0x301 PUSH1 0x20
0x303 ADD
0x304 SWAP1
0x305 SWAP2
0x306 SWAP1
0x307 POP
0x308 POP
0x309 PUSH2 0x616
0x30c JUMP
---
0x2d8: JUMPDEST 
0x2d9: V214 = 0x30d
0x2dc: V215 = 0x4
0x2e0: V216 = CALLDATALOAD 0x4
0x2e1: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2f8: V219 = 0x20
0x2fa: V220 = ADD 0x20 0x4
0x2ff: V221 = CALLDATALOAD 0x24
0x301: V222 = 0x20
0x303: V223 = ADD 0x20 0x24
0x309: V224 = 0x616
0x30c: JUMP 0x616
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30d, V218, V221]
Exit stack: [V10, 0x30d, V218, V221]

================================

Block 0x30d
[0x30d:0x30e]
---
Predecessors: [0x622]
Successors: []
---
0x30d JUMPDEST
0x30e STOP
---
0x30d: JUMPDEST 
0x30e: STOP 
---
Entry stack: [V10, 0x1a8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, S0]

================================

Block 0x30f
[0x30f:0x315]
---
Predecessors: [0x81]
Successors: [0x316, 0x31a]
---
0x30f JUMPDEST
0x310 CALLVALUE
0x311 ISZERO
0x312 PUSH2 0x31a
0x315 JUMPI
---
0x30f: JUMPDEST 
0x310: V225 = CALLVALUE
0x311: V226 = ISZERO V225
0x312: V227 = 0x31a
0x315: JUMPI 0x31a V226
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x316
[0x316:0x319]
---
Predecessors: [0x30f]
Successors: []
---
0x316 PUSH1 0x0
0x318 DUP1
0x319 REVERT
---
0x316: V228 = 0x0
0x319: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31a
[0x31a:0x364]
---
Predecessors: [0x30f]
Successors: [0x626]
---
0x31a JUMPDEST
0x31b PUSH2 0x365
0x31e PUSH1 0x4
0x320 DUP1
0x321 DUP1
0x322 CALLDATALOAD
0x323 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x338 AND
0x339 SWAP1
0x33a PUSH1 0x20
0x33c ADD
0x33d SWAP1
0x33e SWAP2
0x33f SWAP1
0x340 DUP1
0x341 CALLDATALOAD
0x342 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x357 AND
0x358 SWAP1
0x359 PUSH1 0x20
0x35b ADD
0x35c SWAP1
0x35d SWAP2
0x35e SWAP1
0x35f POP
0x360 POP
0x361 PUSH2 0x626
0x364 JUMP
---
0x31a: JUMPDEST 
0x31b: V229 = 0x365
0x31e: V230 = 0x4
0x322: V231 = CALLDATALOAD 0x4
0x323: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x338: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x33a: V234 = 0x20
0x33c: V235 = ADD 0x20 0x4
0x341: V236 = CALLDATALOAD 0x24
0x342: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x357: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x359: V239 = 0x20
0x35b: V240 = ADD 0x20 0x24
0x361: V241 = 0x626
0x364: JUMP 0x626
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x365, V233, V238]
Exit stack: [V10, 0x365, V233, V238]

================================

Block 0x365
[0x365:0x37a]
---
Predecessors: [0x626]
Successors: []
---
0x365 JUMPDEST
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a DUP3
0x36b DUP2
0x36c MSTORE
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP2
0x371 POP
0x372 POP
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 SWAP2
0x378 SUB
0x379 SWAP1
0x37a RETURN
---
0x365: JUMPDEST 
0x366: V242 = 0x40
0x368: V243 = M[0x40]
0x36c: M[V243] = V472
0x36d: V244 = 0x20
0x36f: V245 = ADD 0x20 V243
0x373: V246 = 0x40
0x375: V247 = M[0x40]
0x378: V248 = SUB V245 V247
0x37a: RETURN V247 V248
---
Entry stack: [V10, 0x365, V472]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x365]

================================

Block 0x37b
[0x37b:0x3ca]
---
Predecessors: [0x9c]
Successors: [0x3cb, 0x411]
---
0x37b JUMPDEST
0x37c PUSH1 0x0
0x37e DUP1
0x37f SLOAD
0x380 PUSH1 0x1
0x382 DUP2
0x383 PUSH1 0x1
0x385 AND
0x386 ISZERO
0x387 PUSH2 0x100
0x38a MUL
0x38b SUB
0x38c AND
0x38d PUSH1 0x2
0x38f SWAP1
0x390 DIV
0x391 DUP1
0x392 PUSH1 0x1f
0x394 ADD
0x395 PUSH1 0x20
0x397 DUP1
0x398 SWAP2
0x399 DIV
0x39a MUL
0x39b PUSH1 0x20
0x39d ADD
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 SWAP1
0x3a2 DUP2
0x3a3 ADD
0x3a4 PUSH1 0x40
0x3a6 MSTORE
0x3a7 DUP1
0x3a8 SWAP3
0x3a9 SWAP2
0x3aa SWAP1
0x3ab DUP2
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 DUP3
0x3b2 DUP1
0x3b3 SLOAD
0x3b4 PUSH1 0x1
0x3b6 DUP2
0x3b7 PUSH1 0x1
0x3b9 AND
0x3ba ISZERO
0x3bb PUSH2 0x100
0x3be MUL
0x3bf SUB
0x3c0 AND
0x3c1 PUSH1 0x2
0x3c3 SWAP1
0x3c4 DIV
0x3c5 DUP1
0x3c6 ISZERO
0x3c7 PUSH2 0x411
0x3ca JUMPI
---
0x37b: JUMPDEST 
0x37c: V249 = 0x0
0x37f: V250 = S[0x0]
0x380: V251 = 0x1
0x383: V252 = 0x1
0x385: V253 = AND 0x1 V250
0x386: V254 = ISZERO V253
0x387: V255 = 0x100
0x38a: V256 = MUL 0x100 V254
0x38b: V257 = SUB V256 0x1
0x38c: V258 = AND V257 V250
0x38d: V259 = 0x2
0x390: V260 = DIV V258 0x2
0x392: V261 = 0x1f
0x394: V262 = ADD 0x1f V260
0x395: V263 = 0x20
0x399: V264 = DIV V262 0x20
0x39a: V265 = MUL V264 0x20
0x39b: V266 = 0x20
0x39d: V267 = ADD 0x20 V265
0x39e: V268 = 0x40
0x3a0: V269 = M[0x40]
0x3a3: V270 = ADD V269 V267
0x3a4: V271 = 0x40
0x3a6: M[0x40] = V270
0x3ad: M[V269] = V260
0x3ae: V272 = 0x20
0x3b0: V273 = ADD 0x20 V269
0x3b3: V274 = S[0x0]
0x3b4: V275 = 0x1
0x3b7: V276 = 0x1
0x3b9: V277 = AND 0x1 V274
0x3ba: V278 = ISZERO V277
0x3bb: V279 = 0x100
0x3be: V280 = MUL 0x100 V278
0x3bf: V281 = SUB V280 0x1
0x3c0: V282 = AND V281 V274
0x3c1: V283 = 0x2
0x3c4: V284 = DIV V282 0x2
0x3c6: V285 = ISZERO V284
0x3c7: V286 = 0x411
0x3ca: JUMPI 0x411 V285
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: [V269, 0x0, V260, V273, 0x0, V284]
Exit stack: [V10, 0xa4, V269, 0x0, V260, V273, 0x0, V284]

================================

Block 0x3cb
[0x3cb:0x3d2]
---
Predecessors: [0x37b]
Successors: [0x3d3, 0x3e6]
---
0x3cb DUP1
0x3cc PUSH1 0x1f
0x3ce LT
0x3cf PUSH2 0x3e6
0x3d2 JUMPI
---
0x3cc: V287 = 0x1f
0x3ce: V288 = LT 0x1f V284
0x3cf: V289 = 0x3e6
0x3d2: JUMPI 0x3e6 V288
---
Entry stack: [V10, 0xa4, V269, 0x0, V260, V273, 0x0, V284]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa4, V269, 0x0, V260, V273, 0x0, V284]

================================

Block 0x3d3
[0x3d3:0x3e5]
---
Predecessors: [0x3cb]
Successors: [0x411]
---
0x3d3 PUSH2 0x100
0x3d6 DUP1
0x3d7 DUP4
0x3d8 SLOAD
0x3d9 DIV
0x3da MUL
0x3db DUP4
0x3dc MSTORE
0x3dd SWAP2
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 SWAP2
0x3e2 PUSH2 0x411
0x3e5 JUMP
---
0x3d3: V290 = 0x100
0x3d8: V291 = S[0x0]
0x3d9: V292 = DIV V291 0x100
0x3da: V293 = MUL V292 0x100
0x3dc: M[V273] = V293
0x3de: V294 = 0x20
0x3e0: V295 = ADD 0x20 V273
0x3e2: V296 = 0x411
0x3e5: JUMP 0x411
---
Entry stack: [V10, 0xa4, V269, 0x0, V260, V273, 0x0, V284]
Stack pops: 3
Stack additions: [V295, S1, S0]
Exit stack: [V10, 0xa4, V269, 0x0, V260, V295, 0x0, V284]

================================

Block 0x3e6
[0x3e6:0x3f3]
---
Predecessors: [0x3cb]
Successors: [0x3f4]
---
0x3e6 JUMPDEST
0x3e7 DUP3
0x3e8 ADD
0x3e9 SWAP2
0x3ea SWAP1
0x3eb PUSH1 0x0
0x3ed MSTORE
0x3ee PUSH1 0x20
0x3f0 PUSH1 0x0
0x3f2 SHA3
0x3f3 SWAP1
---
0x3e6: JUMPDEST 
0x3e8: V297 = ADD V273 V284
0x3eb: V298 = 0x0
0x3ed: M[0x0] = 0x0
0x3ee: V299 = 0x20
0x3f0: V300 = 0x0
0x3f2: V301 = SHA3 0x0 0x20
---
Entry stack: [V10, 0xa4, V269, 0x0, V260, V273, 0x0, V284]
Stack pops: 3
Stack additions: [V297, V301, S2]
Exit stack: [V10, 0xa4, V269, 0x0, V260, V297, V301, V273]

================================

Block 0x3f4
[0x3f4:0x407]
---
Predecessors: [0x3e6, 0x3f4]
Successors: [0x3f4, 0x408]
---
0x3f4 JUMPDEST
0x3f5 DUP2
0x3f6 SLOAD
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 SWAP1
0x3fa PUSH1 0x1
0x3fc ADD
0x3fd SWAP1
0x3fe PUSH1 0x20
0x400 ADD
0x401 DUP1
0x402 DUP4
0x403 GT
0x404 PUSH2 0x3f4
0x407 JUMPI
---
0x3f4: JUMPDEST 
0x3f6: V302 = S[S1]
0x3f8: M[S0] = V302
0x3fa: V303 = 0x1
0x3fc: V304 = ADD 0x1 S1
0x3fe: V305 = 0x20
0x400: V306 = ADD 0x20 S0
0x403: V307 = GT V297 V306
0x404: V308 = 0x3f4
0x407: JUMPI 0x3f4 V307
---
Entry stack: [V10, 0xa4, V269, 0x0, V260, V297, S1, S0]
Stack pops: 3
Stack additions: [S2, V304, V306]
Exit stack: [V10, 0xa4, V269, 0x0, V260, V297, V304, V306]

================================

Block 0x408
[0x408:0x410]
---
Predecessors: [0x3f4]
Successors: [0x411]
---
0x408 DUP3
0x409 SWAP1
0x40a SUB
0x40b PUSH1 0x1f
0x40d AND
0x40e DUP3
0x40f ADD
0x410 SWAP2
---
0x40a: V309 = SUB V306 V297
0x40b: V310 = 0x1f
0x40d: V311 = AND 0x1f V309
0x40f: V312 = ADD V297 V311
---
Entry stack: [V10, 0xa4, V269, 0x0, V260, V297, V304, V306]
Stack pops: 3
Stack additions: [V312, S1, S2]
Exit stack: [V10, 0xa4, V269, 0x0, V260, V312, V304, V297]

================================

Block 0x411
[0x411:0x418]
---
Predecessors: [0x37b, 0x3d3, 0x408]
Successors: [0xa4]
---
0x411 JUMPDEST
0x412 POP
0x413 POP
0x414 POP
0x415 POP
0x416 POP
0x417 DUP2
0x418 JUMP
---
0x411: JUMPDEST 
0x418: JUMP 0xa4
---
Entry stack: [V10, 0xa4, V269, 0x0, V260, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0xa4, V269]

================================

Block 0x419
[0x419:0x41e]
---
Predecessors: [0x12b]
Successors: [0x133]
---
0x419 JUMPDEST
0x41a PUSH1 0x3
0x41c SLOAD
0x41d DUP2
0x41e JUMP
---
0x419: JUMPDEST 
0x41a: V313 = 0x3
0x41c: V314 = S[0x3]
0x41e: JUMP 0x133
---
Entry stack: [V10, 0x133]
Stack pops: 1
Stack additions: [S0, V314]
Exit stack: [V10, 0x133, V314]

================================

Block 0x41f
[0x41f:0x4a7]
---
Predecessors: [0x154]
Successors: [0x4a8, 0x4ac]
---
0x41f JUMPDEST
0x420 PUSH1 0x0
0x422 PUSH1 0x5
0x424 PUSH1 0x0
0x426 DUP6
0x427 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43c AND
0x43d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x452 AND
0x453 DUP2
0x454 MSTORE
0x455 PUSH1 0x20
0x457 ADD
0x458 SWAP1
0x459 DUP2
0x45a MSTORE
0x45b PUSH1 0x20
0x45d ADD
0x45e PUSH1 0x0
0x460 SHA3
0x461 PUSH1 0x0
0x463 CALLER
0x464 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x479 AND
0x47a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48f AND
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x20
0x494 ADD
0x495 SWAP1
0x496 DUP2
0x497 MSTORE
0x498 PUSH1 0x20
0x49a ADD
0x49b PUSH1 0x0
0x49d SHA3
0x49e SLOAD
0x49f DUP3
0x4a0 GT
0x4a1 ISZERO
0x4a2 ISZERO
0x4a3 ISZERO
0x4a4 PUSH2 0x4ac
0x4a7 JUMPI
---
0x41f: JUMPDEST 
0x420: V315 = 0x0
0x422: V316 = 0x5
0x424: V317 = 0x0
0x427: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x43d: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x452: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x454: M[0x0] = V321
0x455: V322 = 0x20
0x457: V323 = ADD 0x20 0x0
0x45a: M[0x20] = 0x5
0x45b: V324 = 0x20
0x45d: V325 = ADD 0x20 0x20
0x45e: V326 = 0x0
0x460: V327 = SHA3 0x0 0x40
0x461: V328 = 0x0
0x463: V329 = CALLER
0x464: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x479: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x47a: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x491: M[0x0] = V333
0x492: V334 = 0x20
0x494: V335 = ADD 0x20 0x0
0x497: M[0x20] = V327
0x498: V336 = 0x20
0x49a: V337 = ADD 0x20 0x20
0x49b: V338 = 0x0
0x49d: V339 = SHA3 0x0 0x40
0x49e: V340 = S[V339]
0x4a0: V341 = GT V112 V340
0x4a1: V342 = ISZERO V341
0x4a2: V343 = ISZERO V342
0x4a3: V344 = ISZERO V343
0x4a4: V345 = 0x4ac
0x4a7: JUMPI 0x4ac V344
---
Entry stack: [V10, 0x1a8, V104, V109, V112]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V10, 0x1a8, V104, V109, V112, 0x0]

================================

Block 0x4a8
[0x4a8:0x4ab]
---
Predecessors: [0x41f]
Successors: []
---
0x4a8 PUSH1 0x0
0x4aa DUP1
0x4ab REVERT
---
0x4a8: V346 = 0x0
0x4ab: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a8, V104, V109, V112, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, V104, V109, V112, 0x0]

================================

Block 0x4ac
[0x4ac:0x540]
---
Predecessors: [0x41f]
Successors: [0x64b]
---
0x4ac JUMPDEST
0x4ad DUP2
0x4ae PUSH1 0x5
0x4b0 PUSH1 0x0
0x4b2 DUP7
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 AND
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df DUP2
0x4e0 MSTORE
0x4e1 PUSH1 0x20
0x4e3 ADD
0x4e4 SWAP1
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x20
0x4e9 ADD
0x4ea PUSH1 0x0
0x4ec SHA3
0x4ed PUSH1 0x0
0x4ef CALLER
0x4f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x505 AND
0x506 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51b AND
0x51c DUP2
0x51d MSTORE
0x51e PUSH1 0x20
0x520 ADD
0x521 SWAP1
0x522 DUP2
0x523 MSTORE
0x524 PUSH1 0x20
0x526 ADD
0x527 PUSH1 0x0
0x529 SHA3
0x52a PUSH1 0x0
0x52c DUP3
0x52d DUP3
0x52e SLOAD
0x52f SUB
0x530 SWAP3
0x531 POP
0x532 POP
0x533 DUP2
0x534 SWAP1
0x535 SSTORE
0x536 POP
0x537 PUSH2 0x541
0x53a DUP5
0x53b DUP5
0x53c DUP5
0x53d PUSH2 0x64b
0x540 JUMP
---
0x4ac: JUMPDEST 
0x4ae: V347 = 0x5
0x4b0: V348 = 0x0
0x4b3: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x4c9: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x4e0: M[0x0] = V352
0x4e1: V353 = 0x20
0x4e3: V354 = ADD 0x20 0x0
0x4e6: M[0x20] = 0x5
0x4e7: V355 = 0x20
0x4e9: V356 = ADD 0x20 0x20
0x4ea: V357 = 0x0
0x4ec: V358 = SHA3 0x0 0x40
0x4ed: V359 = 0x0
0x4ef: V360 = CALLER
0x4f0: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x505: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x506: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x51b: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x51d: M[0x0] = V364
0x51e: V365 = 0x20
0x520: V366 = ADD 0x20 0x0
0x523: M[0x20] = V358
0x524: V367 = 0x20
0x526: V368 = ADD 0x20 0x20
0x527: V369 = 0x0
0x529: V370 = SHA3 0x0 0x40
0x52a: V371 = 0x0
0x52e: V372 = S[V370]
0x52f: V373 = SUB V372 V112
0x535: S[V370] = V373
0x537: V374 = 0x541
0x53d: V375 = 0x64b
0x540: JUMP 0x64b
---
Entry stack: [V10, 0x1a8, V104, V109, V112, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x541, S3, S2, S1]
Exit stack: [V10, 0x1a8, V104, V109, V112, 0x0, 0x541, V104, V109, V112]

================================

Block 0x541
[0x541:0x545]
---
Predecessors: [0x95c]
Successors: [0x546]
---
0x541 JUMPDEST
0x542 PUSH1 0x1
0x544 SWAP1
0x545 POP
---
0x541: JUMPDEST 
0x542: V376 = 0x1
---
Entry stack: [V10, 0x1a8, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x1a8, S3, S2, S1, 0x1]

================================

Block 0x546
[0x546:0x54c]
---
Predecessors: [0x541]
Successors: [0x1a8]
---
0x546 JUMPDEST
0x547 SWAP4
0x548 SWAP3
0x549 POP
0x54a POP
0x54b POP
0x54c JUMP
---
0x546: JUMPDEST 
0x54c: JUMP 0x1a8
---
Entry stack: [V10, 0x1a8, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x54d
[0x54d:0x55f]
---
Predecessors: [0x1cd]
Successors: [0x1d5]
---
0x54d JUMPDEST
0x54e PUSH1 0x2
0x550 PUSH1 0x0
0x552 SWAP1
0x553 SLOAD
0x554 SWAP1
0x555 PUSH2 0x100
0x558 EXP
0x559 SWAP1
0x55a DIV
0x55b PUSH1 0xff
0x55d AND
0x55e DUP2
0x55f JUMP
---
0x54d: JUMPDEST 
0x54e: V377 = 0x2
0x550: V378 = 0x0
0x553: V379 = S[0x2]
0x555: V380 = 0x100
0x558: V381 = EXP 0x100 0x0
0x55a: V382 = DIV V379 0x1
0x55b: V383 = 0xff
0x55d: V384 = AND 0xff V382
0x55f: JUMP 0x1d5
---
Entry stack: [V10, 0x1d5]
Stack pops: 1
Stack additions: [S0, V384]
Exit stack: [V10, 0x1d5, V384]

================================

Block 0x560
[0x560:0x577]
---
Predecessors: [0x1fc]
Successors: [0x228]
---
0x560 JUMPDEST
0x561 PUSH1 0x4
0x563 PUSH1 0x20
0x565 MSTORE
0x566 DUP1
0x567 PUSH1 0x0
0x569 MSTORE
0x56a PUSH1 0x40
0x56c PUSH1 0x0
0x56e SHA3
0x56f PUSH1 0x0
0x571 SWAP2
0x572 POP
0x573 SWAP1
0x574 POP
0x575 SLOAD
0x576 DUP2
0x577 JUMP
---
0x560: JUMPDEST 
0x561: V385 = 0x4
0x563: V386 = 0x20
0x565: M[0x20] = 0x4
0x567: V387 = 0x0
0x569: M[0x0] = V152
0x56a: V388 = 0x40
0x56c: V389 = 0x0
0x56e: V390 = SHA3 0x0 0x40
0x56f: V391 = 0x0
0x575: V392 = S[V390]
0x577: JUMP 0x228
---
Entry stack: [V10, 0x228, V152]
Stack pops: 2
Stack additions: [S1, V392]
Exit stack: [V10, 0x228, V392]

================================

Block 0x578
[0x578:0x5c7]
---
Predecessors: [0x249]
Successors: [0x5c8, 0x60e]
---
0x578 JUMPDEST
0x579 PUSH1 0x1
0x57b DUP1
0x57c SLOAD
0x57d PUSH1 0x1
0x57f DUP2
0x580 PUSH1 0x1
0x582 AND
0x583 ISZERO
0x584 PUSH2 0x100
0x587 MUL
0x588 SUB
0x589 AND
0x58a PUSH1 0x2
0x58c SWAP1
0x58d DIV
0x58e DUP1
0x58f PUSH1 0x1f
0x591 ADD
0x592 PUSH1 0x20
0x594 DUP1
0x595 SWAP2
0x596 DIV
0x597 MUL
0x598 PUSH1 0x20
0x59a ADD
0x59b PUSH1 0x40
0x59d MLOAD
0x59e SWAP1
0x59f DUP2
0x5a0 ADD
0x5a1 PUSH1 0x40
0x5a3 MSTORE
0x5a4 DUP1
0x5a5 SWAP3
0x5a6 SWAP2
0x5a7 SWAP1
0x5a8 DUP2
0x5a9 DUP2
0x5aa MSTORE
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae DUP3
0x5af DUP1
0x5b0 SLOAD
0x5b1 PUSH1 0x1
0x5b3 DUP2
0x5b4 PUSH1 0x1
0x5b6 AND
0x5b7 ISZERO
0x5b8 PUSH2 0x100
0x5bb MUL
0x5bc SUB
0x5bd AND
0x5be PUSH1 0x2
0x5c0 SWAP1
0x5c1 DIV
0x5c2 DUP1
0x5c3 ISZERO
0x5c4 PUSH2 0x60e
0x5c7 JUMPI
---
0x578: JUMPDEST 
0x579: V393 = 0x1
0x57c: V394 = S[0x1]
0x57d: V395 = 0x1
0x580: V396 = 0x1
0x582: V397 = AND 0x1 V394
0x583: V398 = ISZERO V397
0x584: V399 = 0x100
0x587: V400 = MUL 0x100 V398
0x588: V401 = SUB V400 0x1
0x589: V402 = AND V401 V394
0x58a: V403 = 0x2
0x58d: V404 = DIV V402 0x2
0x58f: V405 = 0x1f
0x591: V406 = ADD 0x1f V404
0x592: V407 = 0x20
0x596: V408 = DIV V406 0x20
0x597: V409 = MUL V408 0x20
0x598: V410 = 0x20
0x59a: V411 = ADD 0x20 V409
0x59b: V412 = 0x40
0x59d: V413 = M[0x40]
0x5a0: V414 = ADD V413 V411
0x5a1: V415 = 0x40
0x5a3: M[0x40] = V414
0x5aa: M[V413] = V404
0x5ab: V416 = 0x20
0x5ad: V417 = ADD 0x20 V413
0x5b0: V418 = S[0x1]
0x5b1: V419 = 0x1
0x5b4: V420 = 0x1
0x5b6: V421 = AND 0x1 V418
0x5b7: V422 = ISZERO V421
0x5b8: V423 = 0x100
0x5bb: V424 = MUL 0x100 V422
0x5bc: V425 = SUB V424 0x1
0x5bd: V426 = AND V425 V418
0x5be: V427 = 0x2
0x5c1: V428 = DIV V426 0x2
0x5c3: V429 = ISZERO V428
0x5c4: V430 = 0x60e
0x5c7: JUMPI 0x60e V429
---
Entry stack: [V10, 0x251]
Stack pops: 0
Stack additions: [V413, 0x1, V404, V417, 0x1, V428]
Exit stack: [V10, 0x251, V413, 0x1, V404, V417, 0x1, V428]

================================

Block 0x5c8
[0x5c8:0x5cf]
---
Predecessors: [0x578]
Successors: [0x5d0, 0x5e3]
---
0x5c8 DUP1
0x5c9 PUSH1 0x1f
0x5cb LT
0x5cc PUSH2 0x5e3
0x5cf JUMPI
---
0x5c9: V431 = 0x1f
0x5cb: V432 = LT 0x1f V428
0x5cc: V433 = 0x5e3
0x5cf: JUMPI 0x5e3 V432
---
Entry stack: [V10, 0x251, V413, 0x1, V404, V417, 0x1, V428]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x251, V413, 0x1, V404, V417, 0x1, V428]

================================

Block 0x5d0
[0x5d0:0x5e2]
---
Predecessors: [0x5c8]
Successors: [0x60e]
---
0x5d0 PUSH2 0x100
0x5d3 DUP1
0x5d4 DUP4
0x5d5 SLOAD
0x5d6 DIV
0x5d7 MUL
0x5d8 DUP4
0x5d9 MSTORE
0x5da SWAP2
0x5db PUSH1 0x20
0x5dd ADD
0x5de SWAP2
0x5df PUSH2 0x60e
0x5e2 JUMP
---
0x5d0: V434 = 0x100
0x5d5: V435 = S[0x1]
0x5d6: V436 = DIV V435 0x100
0x5d7: V437 = MUL V436 0x100
0x5d9: M[V417] = V437
0x5db: V438 = 0x20
0x5dd: V439 = ADD 0x20 V417
0x5df: V440 = 0x60e
0x5e2: JUMP 0x60e
---
Entry stack: [V10, 0x251, V413, 0x1, V404, V417, 0x1, V428]
Stack pops: 3
Stack additions: [V439, S1, S0]
Exit stack: [V10, 0x251, V413, 0x1, V404, V439, 0x1, V428]

================================

Block 0x5e3
[0x5e3:0x5f0]
---
Predecessors: [0x5c8]
Successors: [0x5f1]
---
0x5e3 JUMPDEST
0x5e4 DUP3
0x5e5 ADD
0x5e6 SWAP2
0x5e7 SWAP1
0x5e8 PUSH1 0x0
0x5ea MSTORE
0x5eb PUSH1 0x20
0x5ed PUSH1 0x0
0x5ef SHA3
0x5f0 SWAP1
---
0x5e3: JUMPDEST 
0x5e5: V441 = ADD V417 V428
0x5e8: V442 = 0x0
0x5ea: M[0x0] = 0x1
0x5eb: V443 = 0x20
0x5ed: V444 = 0x0
0x5ef: V445 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x251, V413, 0x1, V404, V417, 0x1, V428]
Stack pops: 3
Stack additions: [V441, V445, S2]
Exit stack: [V10, 0x251, V413, 0x1, V404, V441, V445, V417]

================================

Block 0x5f1
[0x5f1:0x604]
---
Predecessors: [0x5e3, 0x5f1]
Successors: [0x5f1, 0x605]
---
0x5f1 JUMPDEST
0x5f2 DUP2
0x5f3 SLOAD
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 SWAP1
0x5f7 PUSH1 0x1
0x5f9 ADD
0x5fa SWAP1
0x5fb PUSH1 0x20
0x5fd ADD
0x5fe DUP1
0x5ff DUP4
0x600 GT
0x601 PUSH2 0x5f1
0x604 JUMPI
---
0x5f1: JUMPDEST 
0x5f3: V446 = S[S1]
0x5f5: M[S0] = V446
0x5f7: V447 = 0x1
0x5f9: V448 = ADD 0x1 S1
0x5fb: V449 = 0x20
0x5fd: V450 = ADD 0x20 S0
0x600: V451 = GT V441 V450
0x601: V452 = 0x5f1
0x604: JUMPI 0x5f1 V451
---
Entry stack: [V10, 0x251, V413, 0x1, V404, V441, S1, S0]
Stack pops: 3
Stack additions: [S2, V448, V450]
Exit stack: [V10, 0x251, V413, 0x1, V404, V441, V448, V450]

================================

Block 0x605
[0x605:0x60d]
---
Predecessors: [0x5f1]
Successors: [0x60e]
---
0x605 DUP3
0x606 SWAP1
0x607 SUB
0x608 PUSH1 0x1f
0x60a AND
0x60b DUP3
0x60c ADD
0x60d SWAP2
---
0x607: V453 = SUB V450 V441
0x608: V454 = 0x1f
0x60a: V455 = AND 0x1f V453
0x60c: V456 = ADD V441 V455
---
Entry stack: [V10, 0x251, V413, 0x1, V404, V441, V448, V450]
Stack pops: 3
Stack additions: [V456, S1, S2]
Exit stack: [V10, 0x251, V413, 0x1, V404, V456, V448, V441]

================================

Block 0x60e
[0x60e:0x615]
---
Predecessors: [0x578, 0x5d0, 0x605]
Successors: [0x251]
---
0x60e JUMPDEST
0x60f POP
0x610 POP
0x611 POP
0x612 POP
0x613 POP
0x614 DUP2
0x615 JUMP
---
0x60e: JUMPDEST 
0x615: JUMP 0x251
---
Entry stack: [V10, 0x251, V413, 0x1, V404, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x251, V413]

================================

Block 0x616
[0x616:0x620]
---
Predecessors: [0x2d8]
Successors: [0x64b]
---
0x616 JUMPDEST
0x617 PUSH2 0x621
0x61a CALLER
0x61b DUP4
0x61c DUP4
0x61d PUSH2 0x64b
0x620 JUMP
---
0x616: JUMPDEST 
0x617: V457 = 0x621
0x61a: V458 = CALLER
0x61d: V459 = 0x64b
0x620: JUMP 0x64b
---
Entry stack: [V10, 0x30d, V218, V221]
Stack pops: 2
Stack additions: [S1, S0, 0x621, V458, S1, S0]
Exit stack: [V10, 0x30d, V218, V221, 0x621, V458, V218, V221]

================================

Block 0x621
[0x621:0x621]
---
Predecessors: [0x95c]
Successors: [0x622]
---
0x621 JUMPDEST
---
0x621: JUMPDEST 
---
Entry stack: [V10, 0x1a8, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, S3, S2, S1, S0]

================================

Block 0x622
[0x622:0x625]
---
Predecessors: [0x621]
Successors: [0x30d]
---
0x622 JUMPDEST
0x623 POP
0x624 POP
0x625 JUMP
---
0x622: JUMPDEST 
0x625: JUMP S2
---
Entry stack: [V10, 0x1a8, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1a8, S3]

================================

Block 0x626
[0x626:0x64a]
---
Predecessors: [0x31a]
Successors: [0x365]
---
0x626 JUMPDEST
0x627 PUSH1 0x5
0x629 PUSH1 0x20
0x62b MSTORE
0x62c DUP2
0x62d PUSH1 0x0
0x62f MSTORE
0x630 PUSH1 0x40
0x632 PUSH1 0x0
0x634 SHA3
0x635 PUSH1 0x20
0x637 MSTORE
0x638 DUP1
0x639 PUSH1 0x0
0x63b MSTORE
0x63c PUSH1 0x40
0x63e PUSH1 0x0
0x640 SHA3
0x641 PUSH1 0x0
0x643 SWAP2
0x644 POP
0x645 SWAP2
0x646 POP
0x647 POP
0x648 SLOAD
0x649 DUP2
0x64a JUMP
---
0x626: JUMPDEST 
0x627: V460 = 0x5
0x629: V461 = 0x20
0x62b: M[0x20] = 0x5
0x62d: V462 = 0x0
0x62f: M[0x0] = V233
0x630: V463 = 0x40
0x632: V464 = 0x0
0x634: V465 = SHA3 0x0 0x40
0x635: V466 = 0x20
0x637: M[0x20] = V465
0x639: V467 = 0x0
0x63b: M[0x0] = V238
0x63c: V468 = 0x40
0x63e: V469 = 0x0
0x640: V470 = SHA3 0x0 0x40
0x641: V471 = 0x0
0x648: V472 = S[V470]
0x64a: JUMP 0x365
---
Entry stack: [V10, 0x365, V233, V238]
Stack pops: 3
Stack additions: [S2, V472]
Exit stack: [V10, 0x365, V472]

================================

Block 0x64b
[0x64b:0x66d]
---
Predecessors: [0x4ac, 0x616]
Successors: [0x66e, 0x672]
---
0x64b JUMPDEST
0x64c PUSH1 0x0
0x64e DUP1
0x64f DUP4
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 EQ
0x667 ISZERO
0x668 ISZERO
0x669 ISZERO
0x66a PUSH2 0x672
0x66d JUMPI
---
0x64b: JUMPDEST 
0x64c: V473 = 0x0
0x650: V474 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x666: V476 = EQ V475 0x0
0x667: V477 = ISZERO V476
0x668: V478 = ISZERO V477
0x669: V479 = ISZERO V478
0x66a: V480 = 0x672
0x66d: JUMPI 0x672 V479
---
Entry stack: [V10, 0x1a8, S7, S6, S5, S4, {0x541, 0x621}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x1a8, S7, S6, S5, S4, {0x541, 0x621}, S2, S1, S0, 0x0]

================================

Block 0x66e
[0x66e:0x671]
---
Predecessors: [0x64b]
Successors: []
---
0x66e PUSH1 0x0
0x670 DUP1
0x671 REVERT
---
0x66e: V481 = 0x0
0x671: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]

================================

Block 0x672
[0x672:0x6bb]
---
Predecessors: [0x64b]
Successors: [0x6bc, 0x6c0]
---
0x672 JUMPDEST
0x673 DUP2
0x674 PUSH1 0x4
0x676 PUSH1 0x0
0x678 DUP7
0x679 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68e AND
0x68f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a4 AND
0x6a5 DUP2
0x6a6 MSTORE
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa SWAP1
0x6ab DUP2
0x6ac MSTORE
0x6ad PUSH1 0x20
0x6af ADD
0x6b0 PUSH1 0x0
0x6b2 SHA3
0x6b3 SLOAD
0x6b4 LT
0x6b5 ISZERO
0x6b6 ISZERO
0x6b7 ISZERO
0x6b8 PUSH2 0x6c0
0x6bb JUMPI
---
0x672: JUMPDEST 
0x674: V482 = 0x4
0x676: V483 = 0x0
0x679: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x68f: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x6a6: M[0x0] = V487
0x6a7: V488 = 0x20
0x6a9: V489 = ADD 0x20 0x0
0x6ac: M[0x20] = 0x4
0x6ad: V490 = 0x20
0x6af: V491 = ADD 0x20 0x20
0x6b0: V492 = 0x0
0x6b2: V493 = SHA3 0x0 0x40
0x6b3: V494 = S[V493]
0x6b4: V495 = LT V494 S1
0x6b5: V496 = ISZERO V495
0x6b6: V497 = ISZERO V496
0x6b7: V498 = ISZERO V497
0x6b8: V499 = 0x6c0
0x6bb: JUMPI 0x6c0 V498
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]

================================

Block 0x6bc
[0x6bc:0x6bf]
---
Predecessors: [0x672]
Successors: []
---
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf REVERT
---
0x6bc: V500 = 0x0
0x6bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]

================================

Block 0x6c0
[0x6c0:0x749]
---
Predecessors: [0x672]
Successors: [0x74a, 0x74e]
---
0x6c0 JUMPDEST
0x6c1 PUSH1 0x4
0x6c3 PUSH1 0x0
0x6c5 DUP5
0x6c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6db AND
0x6dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f1 AND
0x6f2 DUP2
0x6f3 MSTORE
0x6f4 PUSH1 0x20
0x6f6 ADD
0x6f7 SWAP1
0x6f8 DUP2
0x6f9 MSTORE
0x6fa PUSH1 0x20
0x6fc ADD
0x6fd PUSH1 0x0
0x6ff SHA3
0x700 SLOAD
0x701 DUP3
0x702 PUSH1 0x4
0x704 PUSH1 0x0
0x706 DUP7
0x707 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71c AND
0x71d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x732 AND
0x733 DUP2
0x734 MSTORE
0x735 PUSH1 0x20
0x737 ADD
0x738 SWAP1
0x739 DUP2
0x73a MSTORE
0x73b PUSH1 0x20
0x73d ADD
0x73e PUSH1 0x0
0x740 SHA3
0x741 SLOAD
0x742 ADD
0x743 GT
0x744 ISZERO
0x745 ISZERO
0x746 PUSH2 0x74e
0x749 JUMPI
---
0x6c0: JUMPDEST 
0x6c1: V501 = 0x4
0x6c3: V502 = 0x0
0x6c6: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6dc: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f1: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x6f3: M[0x0] = V506
0x6f4: V507 = 0x20
0x6f6: V508 = ADD 0x20 0x0
0x6f9: M[0x20] = 0x4
0x6fa: V509 = 0x20
0x6fc: V510 = ADD 0x20 0x20
0x6fd: V511 = 0x0
0x6ff: V512 = SHA3 0x0 0x40
0x700: V513 = S[V512]
0x702: V514 = 0x4
0x704: V515 = 0x0
0x707: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x71d: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x732: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x734: M[0x0] = V519
0x735: V520 = 0x20
0x737: V521 = ADD 0x20 0x0
0x73a: M[0x20] = 0x4
0x73b: V522 = 0x20
0x73d: V523 = ADD 0x20 0x20
0x73e: V524 = 0x0
0x740: V525 = SHA3 0x0 0x40
0x741: V526 = S[V525]
0x742: V527 = ADD V526 S1
0x743: V528 = GT V527 V513
0x744: V529 = ISZERO V528
0x745: V530 = ISZERO V529
0x746: V531 = 0x74e
0x749: JUMPI 0x74e V530
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]

================================

Block 0x74a
[0x74a:0x74d]
---
Predecessors: [0x6c0]
Successors: []
---
0x74a PUSH1 0x0
0x74c DUP1
0x74d REVERT
---
0x74a: V532 = 0x0
0x74d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]

================================

Block 0x74e
[0x74e:0x959]
---
Predecessors: [0x6c0]
Successors: [0x95a, 0x95b]
---
0x74e JUMPDEST
0x74f PUSH1 0x4
0x751 PUSH1 0x0
0x753 DUP5
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77f AND
0x780 DUP2
0x781 MSTORE
0x782 PUSH1 0x20
0x784 ADD
0x785 SWAP1
0x786 DUP2
0x787 MSTORE
0x788 PUSH1 0x20
0x78a ADD
0x78b PUSH1 0x0
0x78d SHA3
0x78e SLOAD
0x78f PUSH1 0x4
0x791 PUSH1 0x0
0x793 DUP7
0x794 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a9 AND
0x7aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bf AND
0x7c0 DUP2
0x7c1 MSTORE
0x7c2 PUSH1 0x20
0x7c4 ADD
0x7c5 SWAP1
0x7c6 DUP2
0x7c7 MSTORE
0x7c8 PUSH1 0x20
0x7ca ADD
0x7cb PUSH1 0x0
0x7cd SHA3
0x7ce SLOAD
0x7cf ADD
0x7d0 SWAP1
0x7d1 POP
0x7d2 DUP2
0x7d3 PUSH1 0x4
0x7d5 PUSH1 0x0
0x7d7 DUP7
0x7d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ed AND
0x7ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x803 AND
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x20
0x808 ADD
0x809 SWAP1
0x80a DUP2
0x80b MSTORE
0x80c PUSH1 0x20
0x80e ADD
0x80f PUSH1 0x0
0x811 SHA3
0x812 PUSH1 0x0
0x814 DUP3
0x815 DUP3
0x816 SLOAD
0x817 SUB
0x818 SWAP3
0x819 POP
0x81a POP
0x81b DUP2
0x81c SWAP1
0x81d SSTORE
0x81e POP
0x81f DUP2
0x820 PUSH1 0x4
0x822 PUSH1 0x0
0x824 DUP6
0x825 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83a AND
0x83b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x850 AND
0x851 DUP2
0x852 MSTORE
0x853 PUSH1 0x20
0x855 ADD
0x856 SWAP1
0x857 DUP2
0x858 MSTORE
0x859 PUSH1 0x20
0x85b ADD
0x85c PUSH1 0x0
0x85e SHA3
0x85f PUSH1 0x0
0x861 DUP3
0x862 DUP3
0x863 SLOAD
0x864 ADD
0x865 SWAP3
0x866 POP
0x867 POP
0x868 DUP2
0x869 SWAP1
0x86a SSTORE
0x86b POP
0x86c DUP3
0x86d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x882 AND
0x883 DUP5
0x884 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x899 AND
0x89a PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8bb DUP5
0x8bc PUSH1 0x40
0x8be MLOAD
0x8bf DUP1
0x8c0 DUP3
0x8c1 DUP2
0x8c2 MSTORE
0x8c3 PUSH1 0x20
0x8c5 ADD
0x8c6 SWAP2
0x8c7 POP
0x8c8 POP
0x8c9 PUSH1 0x40
0x8cb MLOAD
0x8cc DUP1
0x8cd SWAP2
0x8ce SUB
0x8cf SWAP1
0x8d0 LOG3
0x8d1 DUP1
0x8d2 PUSH1 0x4
0x8d4 PUSH1 0x0
0x8d6 DUP6
0x8d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ec AND
0x8ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x902 AND
0x903 DUP2
0x904 MSTORE
0x905 PUSH1 0x20
0x907 ADD
0x908 SWAP1
0x909 DUP2
0x90a MSTORE
0x90b PUSH1 0x20
0x90d ADD
0x90e PUSH1 0x0
0x910 SHA3
0x911 SLOAD
0x912 PUSH1 0x4
0x914 PUSH1 0x0
0x916 DUP8
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x942 AND
0x943 DUP2
0x944 MSTORE
0x945 PUSH1 0x20
0x947 ADD
0x948 SWAP1
0x949 DUP2
0x94a MSTORE
0x94b PUSH1 0x20
0x94d ADD
0x94e PUSH1 0x0
0x950 SHA3
0x951 SLOAD
0x952 ADD
0x953 EQ
0x954 ISZERO
0x955 ISZERO
0x956 PUSH2 0x95b
0x959 JUMPI
---
0x74e: JUMPDEST 
0x74f: V533 = 0x4
0x751: V534 = 0x0
0x754: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x76a: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x77f: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x781: M[0x0] = V538
0x782: V539 = 0x20
0x784: V540 = ADD 0x20 0x0
0x787: M[0x20] = 0x4
0x788: V541 = 0x20
0x78a: V542 = ADD 0x20 0x20
0x78b: V543 = 0x0
0x78d: V544 = SHA3 0x0 0x40
0x78e: V545 = S[V544]
0x78f: V546 = 0x4
0x791: V547 = 0x0
0x794: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a9: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7aa: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bf: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x7c1: M[0x0] = V551
0x7c2: V552 = 0x20
0x7c4: V553 = ADD 0x20 0x0
0x7c7: M[0x20] = 0x4
0x7c8: V554 = 0x20
0x7ca: V555 = ADD 0x20 0x20
0x7cb: V556 = 0x0
0x7cd: V557 = SHA3 0x0 0x40
0x7ce: V558 = S[V557]
0x7cf: V559 = ADD V558 V545
0x7d3: V560 = 0x4
0x7d5: V561 = 0x0
0x7d8: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ed: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7ee: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0x803: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x805: M[0x0] = V565
0x806: V566 = 0x20
0x808: V567 = ADD 0x20 0x0
0x80b: M[0x20] = 0x4
0x80c: V568 = 0x20
0x80e: V569 = ADD 0x20 0x20
0x80f: V570 = 0x0
0x811: V571 = SHA3 0x0 0x40
0x812: V572 = 0x0
0x816: V573 = S[V571]
0x817: V574 = SUB V573 S1
0x81d: S[V571] = V574
0x820: V575 = 0x4
0x822: V576 = 0x0
0x825: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0x83a: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x83b: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0x850: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V578
0x852: M[0x0] = V580
0x853: V581 = 0x20
0x855: V582 = ADD 0x20 0x0
0x858: M[0x20] = 0x4
0x859: V583 = 0x20
0x85b: V584 = ADD 0x20 0x20
0x85c: V585 = 0x0
0x85e: V586 = SHA3 0x0 0x40
0x85f: V587 = 0x0
0x863: V588 = S[V586]
0x864: V589 = ADD V588 S1
0x86a: S[V586] = V589
0x86d: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x882: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x884: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x899: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x89a: V594 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8bc: V595 = 0x40
0x8be: V596 = M[0x40]
0x8c2: M[V596] = S1
0x8c3: V597 = 0x20
0x8c5: V598 = ADD 0x20 V596
0x8c9: V599 = 0x40
0x8cb: V600 = M[0x40]
0x8ce: V601 = SUB V598 V600
0x8d0: LOG V600 V601 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V593 V591
0x8d2: V602 = 0x4
0x8d4: V603 = 0x0
0x8d7: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x8ed: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0x902: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x904: M[0x0] = V607
0x905: V608 = 0x20
0x907: V609 = ADD 0x20 0x0
0x90a: M[0x20] = 0x4
0x90b: V610 = 0x20
0x90d: V611 = ADD 0x20 0x20
0x90e: V612 = 0x0
0x910: V613 = SHA3 0x0 0x40
0x911: V614 = S[V613]
0x912: V615 = 0x4
0x914: V616 = 0x0
0x917: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x92d: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x942: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0x944: M[0x0] = V620
0x945: V621 = 0x20
0x947: V622 = ADD 0x20 0x0
0x94a: M[0x20] = 0x4
0x94b: V623 = 0x20
0x94d: V624 = ADD 0x20 0x20
0x94e: V625 = 0x0
0x950: V626 = SHA3 0x0 0x40
0x951: V627 = S[V626]
0x952: V628 = ADD V627 V614
0x953: V629 = EQ V628 V559
0x954: V630 = ISZERO V629
0x955: V631 = ISZERO V630
0x956: V632 = 0x95b
0x959: JUMPI 0x95b V631
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V559]
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, V559]

================================

Block 0x95a
[0x95a:0x95a]
---
Predecessors: [0x74e]
Successors: []
---
0x95a INVALID
---
0x95a: INVALID 
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, V559]

================================

Block 0x95b
[0x95b:0x95b]
---
Predecessors: [0x74e]
Successors: [0x95c]
---
0x95b JUMPDEST
---
0x95b: JUMPDEST 
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, V559]

================================

Block 0x95c
[0x95c:0x961]
---
Predecessors: [0x95b]
Successors: [0x541, 0x621]
---
0x95c JUMPDEST
0x95d POP
0x95e POP
0x95f POP
0x960 POP
0x961 JUMP
---
0x95c: JUMPDEST 
0x961: JUMP {0x541, 0x621}
---
Entry stack: [V10, 0x1a8, S8, S7, S6, S5, {0x541, 0x621}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x1a8, S8, S7, S6, S5]

================================

Block 0x962
[0x962:0x998]
---
Predecessors: []
Successors: []
---
0x962 STOP
0x963 LOG1
0x964 PUSH6 0x627a7a723058
0x96b SHA3
0x96c CALLER
0x96d MISSING 0xa9
0x96e CALLDATALOAD
0x96f MISSING 0xab
0x970 MISSING 0xc4
0x971 MISSING 0xc0
0x972 PUSH5 0x6da7ebda14
0x978 PUSH7 0x3212f53dfe1e7
0x980 PUSH24 0xdc43611576aa5f6b9f53d90029
---
0x962: STOP 
0x963: LOG S0 S1 S2
0x964: V633 = 0x627a7a723058
0x96b: V634 = SHA3 0x627a7a723058 S3
0x96c: V635 = CALLER
0x96d: MISSING 0xa9
0x96e: V636 = CALLDATALOAD S0
0x96f: MISSING 0xab
0x970: MISSING 0xc4
0x971: MISSING 0xc0
0x972: V637 = 0x6da7ebda14
0x978: V638 = 0x3212f53dfe1e7
0x980: V639 = 0xdc43611576aa5f6b9f53d90029
---
Entry stack: []
Stack pops: 0
Stack additions: [V635, V634, V636, 0xdc43611576aa5f6b9f53d90029, 0x3212f53dfe1e7, 0x6da7ebda14]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x91
Exit block: 0x112
Body: 0x91, 0x98, 0x9c, 0xa4, 0xc9, 0xd2, 0xda, 0xe5, 0xf9, 0x112, 0x37b, 0x3cb, 0x3d3, 0x3e6, 0x3f4, 0x408, 0x411

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x120
Exit block: 0x133
Body: 0x120, 0x127, 0x12b, 0x133, 0x419

Function 2:
Public function signature: 0x23b872dd
Entry block: 0x149
Exit block: 0x1a8
Body: 0x149, 0x150, 0x154, 0x1a8, 0x41f, 0x4a8, 0x4ac, 0x541, 0x546

Function 3:
Public function signature: 0x313ce567
Entry block: 0x1c2
Exit block: 0x1d5
Body: 0x1c2, 0x1c9, 0x1cd, 0x1d5, 0x54d

Function 4:
Public function signature: 0x70a08231
Entry block: 0x1f1
Exit block: 0x228
Body: 0x1f1, 0x1f8, 0x1fc, 0x228, 0x560

Function 5:
Public function signature: 0x95d89b41
Entry block: 0x23e
Exit block: 0x2bf
Body: 0x23e, 0x245, 0x249, 0x251, 0x276, 0x27f, 0x287, 0x292, 0x2a6, 0x2bf, 0x578, 0x5c8, 0x5d0, 0x5e3, 0x5f1, 0x605, 0x60e

Function 6:
Public function signature: 0xa9059cbb
Entry block: 0x2cd
Exit block: 0x30d
Body: 0x2cd, 0x2d4, 0x2d8, 0x30d, 0x616, 0x621, 0x622

Function 7:
Public function signature: 0xdd62ed3e
Entry block: 0x30f
Exit block: 0x365
Body: 0x30f, 0x316, 0x31a, 0x365, 0x626

Function 8:
Public fallback function
Entry block: 0x8c
Exit block: 0x8c
Body: 0x8c

Function 9:
Private function
Entry block: 0x64b
Exit block: 0x95c
Body: 0x64b, 0x672, 0x6c0, 0x74e, 0x95b, 0x95c

