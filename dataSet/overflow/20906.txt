Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x21e88888
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x21e88888
0x3c: V13 = EQ 0x21e88888 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8b]
---
0x41 DUP1
0x42 PUSH4 0xa3f4df7e
0x47 EQ
0x48 PUSH2 0x8b
0x4b JUMPI
---
0x42: V15 = 0xa3f4df7e
0x47: V16 = EQ 0xa3f4df7e V11
0x48: V17 = 0x8b
0x4b: JUMPI 0x8b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x119]
---
0x4c DUP1
0x4d PUSH4 0xef220233
0x52 EQ
0x53 PUSH2 0x119
0x56 JUMPI
---
0x4d: V18 = 0xef220233
0x52: V19 = EQ 0xef220233 V11
0x53: V20 = 0x119
0x56: JUMPI 0x119 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x88]
---
Predecessors: [0x5c]
Successors: [0x16b]
---
0x67 JUMPDEST
0x68 PUSH2 0x89
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 SWAP2
0x76 SWAP1
0x77 DUP1
0x78 CALLDATALOAD
0x79 PUSH1 0xff
0x7b AND
0x7c SWAP1
0x7d PUSH1 0x20
0x7f ADD
0x80 SWAP1
0x81 SWAP2
0x82 SWAP1
0x83 POP
0x84 POP
0x85 PUSH2 0x16b
0x88 JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x89
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x71: V29 = 0x20
0x73: V30 = ADD 0x20 0x4
0x78: V31 = CALLDATALOAD 0x24
0x79: V32 = 0xff
0x7b: V33 = AND 0xff V31
0x7d: V34 = 0x20
0x7f: V35 = ADD 0x20 0x24
0x85: V36 = 0x16b
0x88: JUMP 0x16b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x89, V28, V33]
Exit stack: [V11, 0x89, V28, V33]

================================

Block 0x89
[0x89:0x8a]
---
Predecessors: [0x17c]
Successors: []
---
0x89 JUMPDEST
0x8a STOP
---
0x89: JUMPDEST 
0x8a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8b
[0x8b:0x91]
---
Predecessors: [0x41]
Successors: [0x92, 0x96]
---
0x8b JUMPDEST
0x8c CALLVALUE
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x8b: JUMPDEST 
0x8c: V37 = CALLVALUE
0x8d: V38 = ISZERO V37
0x8e: V39 = 0x96
0x91: JUMPI 0x96 V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x8b]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V40 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0x8b]
Successors: [0x1a0]
---
0x96 JUMPDEST
0x97 PUSH2 0x9e
0x9a PUSH2 0x1a0
0x9d JUMP
---
0x96: JUMPDEST 
0x97: V41 = 0x9e
0x9a: V42 = 0x1a0
0x9d: JUMP 0x1a0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9e]
Exit stack: [V11, 0x9e]

================================

Block 0x9e
[0x9e:0xc2]
---
Predecessors: [0x1a0]
Successors: [0xc3]
---
0x9e JUMPDEST
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 DUP1
0xa3 DUP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 DUP3
0xa8 DUP2
0xa9 SUB
0xaa DUP3
0xab MSTORE
0xac DUP4
0xad DUP2
0xae DUP2
0xaf MLOAD
0xb0 DUP2
0xb1 MSTORE
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP2
0xb6 POP
0xb7 DUP1
0xb8 MLOAD
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe DUP1
0xbf DUP4
0xc0 DUP4
0xc1 PUSH1 0x0
---
0x9e: JUMPDEST 
0x9f: V43 = 0x40
0xa1: V44 = M[0x40]
0xa4: V45 = 0x20
0xa6: V46 = ADD 0x20 V44
0xa9: V47 = SUB V46 V44
0xab: M[V44] = V47
0xaf: V48 = M[V131]
0xb1: M[V46] = V48
0xb2: V49 = 0x20
0xb4: V50 = ADD 0x20 V46
0xb8: V51 = M[V131]
0xba: V52 = 0x20
0xbc: V53 = ADD 0x20 V131
0xc1: V54 = 0x0
---
Entry stack: [V11, 0x9e, V131]
Stack pops: 1
Stack additions: [S0, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]
Exit stack: [V11, 0x9e, V131, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]

================================

Block 0xc3
[0xc3:0xcb]
---
Predecessors: [0x9e, 0xcc]
Successors: [0xcc, 0xde]
---
0xc3 JUMPDEST
0xc4 DUP4
0xc5 DUP2
0xc6 LT
0xc7 ISZERO
0xc8 PUSH2 0xde
0xcb JUMPI
---
0xc3: JUMPDEST 
0xc6: V55 = LT S0 V51
0xc7: V56 = ISZERO V55
0xc8: V57 = 0xde
0xcb: JUMPI 0xde V56
---
Entry stack: [V11, 0x9e, V131, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V131, V44, V44, V50, V53, V51, V51, V50, V53, S0]

================================

Block 0xcc
[0xcc:0xdd]
---
Predecessors: [0xc3]
Successors: [0xc3]
---
0xcc DUP1
0xcd DUP3
0xce ADD
0xcf MLOAD
0xd0 DUP2
0xd1 DUP5
0xd2 ADD
0xd3 MSTORE
0xd4 PUSH1 0x20
0xd6 DUP2
0xd7 ADD
0xd8 SWAP1
0xd9 POP
0xda PUSH2 0xc3
0xdd JUMP
---
0xce: V58 = ADD V53 S0
0xcf: V59 = M[V58]
0xd2: V60 = ADD V50 S0
0xd3: M[V60] = V59
0xd4: V61 = 0x20
0xd7: V62 = ADD S0 0x20
0xda: V63 = 0xc3
0xdd: JUMP 0xc3
---
Entry stack: [V11, 0x9e, V131, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 3
Stack additions: [S2, S1, V62]
Exit stack: [V11, 0x9e, V131, V44, V44, V50, V53, V51, V51, V50, V53, V62]

================================

Block 0xde
[0xde:0xf1]
---
Predecessors: [0xc3]
Successors: [0xf2, 0x10b]
---
0xde JUMPDEST
0xdf POP
0xe0 POP
0xe1 POP
0xe2 POP
0xe3 SWAP1
0xe4 POP
0xe5 SWAP1
0xe6 DUP2
0xe7 ADD
0xe8 SWAP1
0xe9 PUSH1 0x1f
0xeb AND
0xec DUP1
0xed ISZERO
0xee PUSH2 0x10b
0xf1 JUMPI
---
0xde: JUMPDEST 
0xe7: V64 = ADD V51 V50
0xe9: V65 = 0x1f
0xeb: V66 = AND 0x1f V51
0xed: V67 = ISZERO V66
0xee: V68 = 0x10b
0xf1: JUMPI 0x10b V67
---
Entry stack: [V11, 0x9e, V131, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 7
Stack additions: [V64, V66]
Exit stack: [V11, 0x9e, V131, V44, V44, V64, V66]

================================

Block 0xf2
[0xf2:0x10a]
---
Predecessors: [0xde]
Successors: [0x10b]
---
0xf2 DUP1
0xf3 DUP3
0xf4 SUB
0xf5 DUP1
0xf6 MLOAD
0xf7 PUSH1 0x1
0xf9 DUP4
0xfa PUSH1 0x20
0xfc SUB
0xfd PUSH2 0x100
0x100 EXP
0x101 SUB
0x102 NOT
0x103 AND
0x104 DUP2
0x105 MSTORE
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP2
0x10a POP
---
0xf4: V69 = SUB V64 V66
0xf6: V70 = M[V69]
0xf7: V71 = 0x1
0xfa: V72 = 0x20
0xfc: V73 = SUB 0x20 V66
0xfd: V74 = 0x100
0x100: V75 = EXP 0x100 V73
0x101: V76 = SUB V75 0x1
0x102: V77 = NOT V76
0x103: V78 = AND V77 V70
0x105: M[V69] = V78
0x106: V79 = 0x20
0x108: V80 = ADD 0x20 V69
---
Entry stack: [V11, 0x9e, V131, V44, V44, V64, V66]
Stack pops: 2
Stack additions: [V80, S0]
Exit stack: [V11, 0x9e, V131, V44, V44, V80, V66]

================================

Block 0x10b
[0x10b:0x118]
---
Predecessors: [0xde, 0xf2]
Successors: []
---
0x10b JUMPDEST
0x10c POP
0x10d SWAP3
0x10e POP
0x10f POP
0x110 POP
0x111 PUSH1 0x40
0x113 MLOAD
0x114 DUP1
0x115 SWAP2
0x116 SUB
0x117 SWAP1
0x118 RETURN
---
0x10b: JUMPDEST 
0x111: V81 = 0x40
0x113: V82 = M[0x40]
0x116: V83 = SUB S1 V82
0x118: RETURN V82 V83
---
Entry stack: [V11, 0x9e, V131, V44, V44, S1, V66]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x9e]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0x4c]
Successors: [0x120, 0x124]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V84 = CALLVALUE
0x11b: V85 = ISZERO V84
0x11c: V86 = 0x124
0x11f: JUMPI 0x124 V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x119]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V87 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x119]
Successors: [0x1d9]
---
0x124 JUMPDEST
0x125 PUSH2 0x12c
0x128 PUSH2 0x1d9
0x12b JUMP
---
0x124: JUMPDEST 
0x125: V88 = 0x12c
0x128: V89 = 0x1d9
0x12b: JUMP 0x1d9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V11, 0x12c]

================================

Block 0x12c
[0x12c:0x13c]
---
Predecessors: [0x242]
Successors: [0x13d]
---
0x12c JUMPDEST
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 DUP3
0x132 PUSH2 0x4650
0x135 PUSH1 0x20
0x137 MUL
0x138 DUP1
0x139 DUP4
0x13a DUP4
0x13b PUSH1 0x0
---
0x12c: JUMPDEST 
0x12d: V90 = 0x40
0x12f: V91 = M[0x40]
0x132: V92 = 0x4650
0x135: V93 = 0x20
0x137: V94 = MUL 0x20 0x4650
0x13b: V95 = 0x0
---
Entry stack: [V11, V145]
Stack pops: 1
Stack additions: [S0, V91, V91, S0, 0x8ca00, 0x8ca00, V91, S0, 0x0]
Exit stack: [V11, V145, V91, V91, V145, 0x8ca00, 0x8ca00, V91, V145, 0x0]

================================

Block 0x13d
[0x13d:0x145]
---
Predecessors: [0x12c, 0x146]
Successors: [0x146, 0x158]
---
0x13d JUMPDEST
0x13e DUP4
0x13f DUP2
0x140 LT
0x141 ISZERO
0x142 PUSH2 0x158
0x145 JUMPI
---
0x13d: JUMPDEST 
0x140: V96 = LT S0 0x8ca00
0x141: V97 = ISZERO V96
0x142: V98 = 0x158
0x145: JUMPI 0x158 V97
---
Entry stack: [V11, V145, V91, V91, V145, 0x8ca00, 0x8ca00, V91, V145, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V145, V91, V91, V145, 0x8ca00, 0x8ca00, V91, V145, S0]

================================

Block 0x146
[0x146:0x157]
---
Predecessors: [0x13d]
Successors: [0x13d]
---
0x146 DUP1
0x147 DUP3
0x148 ADD
0x149 MLOAD
0x14a DUP2
0x14b DUP5
0x14c ADD
0x14d MSTORE
0x14e PUSH1 0x20
0x150 DUP2
0x151 ADD
0x152 SWAP1
0x153 POP
0x154 PUSH2 0x13d
0x157 JUMP
---
0x148: V99 = ADD V145 S0
0x149: V100 = M[V99]
0x14c: V101 = ADD V91 S0
0x14d: M[V101] = V100
0x14e: V102 = 0x20
0x151: V103 = ADD S0 0x20
0x154: V104 = 0x13d
0x157: JUMP 0x13d
---
Entry stack: [V11, V145, V91, V91, V145, 0x8ca00, 0x8ca00, V91, V145, S0]
Stack pops: 3
Stack additions: [S2, S1, V103]
Exit stack: [V11, V145, V91, V91, V145, 0x8ca00, 0x8ca00, V91, V145, V103]

================================

Block 0x158
[0x158:0x16a]
---
Predecessors: [0x13d]
Successors: []
---
0x158 JUMPDEST
0x159 POP
0x15a POP
0x15b POP
0x15c POP
0x15d SWAP1
0x15e POP
0x15f ADD
0x160 SWAP2
0x161 POP
0x162 POP
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP1
0x167 SWAP2
0x168 SUB
0x169 SWAP1
0x16a RETURN
---
0x158: JUMPDEST 
0x15f: V105 = ADD 0x8ca00 V91
0x163: V106 = 0x40
0x165: V107 = M[0x40]
0x168: V108 = SUB V105 V107
0x16a: RETURN V107 V108
---
Entry stack: [V11, V145, V91, V91, V145, 0x8ca00, 0x8ca00, V91, V145, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x16b
[0x16b:0x17a]
---
Predecessors: [0x67]
Successors: [0x17b, 0x17c]
---
0x16b JUMPDEST
0x16c DUP1
0x16d PUSH1 0x0
0x16f DUP4
0x170 PUSH2 0x4650
0x173 DUP2
0x174 LT
0x175 ISZERO
0x176 ISZERO
0x177 PUSH2 0x17c
0x17a JUMPI
---
0x16b: JUMPDEST 
0x16d: V109 = 0x0
0x170: V110 = 0x4650
0x174: V111 = LT V28 0x4650
0x175: V112 = ISZERO V111
0x176: V113 = ISZERO V112
0x177: V114 = 0x17c
0x17a: JUMPI 0x17c V113
---
Entry stack: [V11, 0x89, V28, V33]
Stack pops: 2
Stack additions: [S1, S0, S0, 0x0, S1]
Exit stack: [V11, 0x89, V28, V33, V33, 0x0, V28]

================================

Block 0x17b
[0x17b:0x17b]
---
Predecessors: [0x16b]
Successors: []
---
0x17b INVALID
---
0x17b: INVALID 
---
Entry stack: [V11, 0x89, V28, V33, V33, 0x0, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x89, V28, V33, V33, 0x0, V28]

================================

Block 0x17c
[0x17c:0x19f]
---
Predecessors: [0x16b]
Successors: [0x89]
---
0x17c JUMPDEST
0x17d PUSH1 0x20
0x17f SWAP2
0x180 DUP3
0x181 DUP3
0x182 DIV
0x183 ADD
0x184 SWAP2
0x185 SWAP1
0x186 MOD
0x187 PUSH2 0x100
0x18a EXP
0x18b DUP2
0x18c SLOAD
0x18d DUP2
0x18e PUSH1 0xff
0x190 MUL
0x191 NOT
0x192 AND
0x193 SWAP1
0x194 DUP4
0x195 PUSH1 0xff
0x197 AND
0x198 MUL
0x199 OR
0x19a SWAP1
0x19b SSTORE
0x19c POP
0x19d POP
0x19e POP
0x19f JUMP
---
0x17c: JUMPDEST 
0x17d: V115 = 0x20
0x182: V116 = DIV V28 0x20
0x183: V117 = ADD V116 0x0
0x186: V118 = MOD V28 0x20
0x187: V119 = 0x100
0x18a: V120 = EXP 0x100 V118
0x18c: V121 = S[V117]
0x18e: V122 = 0xff
0x190: V123 = MUL 0xff V120
0x191: V124 = NOT V123
0x192: V125 = AND V124 V121
0x195: V126 = 0xff
0x197: V127 = AND 0xff V33
0x198: V128 = MUL V127 V120
0x199: V129 = OR V128 V125
0x19b: S[V117] = V129
0x19f: JUMP 0x89
---
Entry stack: [V11, 0x89, V28, V33, V33, 0x0, V28]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a0
[0x1a0:0x1d8]
---
Predecessors: [0x96]
Successors: [0x9e]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x40
0x1a3 DUP1
0x1a4 MLOAD
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 ADD
0x1a8 PUSH1 0x40
0x1aa MSTORE
0x1ab DUP1
0x1ac PUSH1 0x8
0x1ae DUP2
0x1af MSTORE
0x1b0 PUSH1 0x20
0x1b2 ADD
0x1b3 PUSH32 0x4772696464657468000000000000000000000000000000000000000000000000
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 POP
0x1d7 DUP2
0x1d8 JUMP
---
0x1a0: JUMPDEST 
0x1a1: V130 = 0x40
0x1a4: V131 = M[0x40]
0x1a7: V132 = ADD V131 0x40
0x1a8: V133 = 0x40
0x1aa: M[0x40] = V132
0x1ac: V134 = 0x8
0x1af: M[V131] = 0x8
0x1b0: V135 = 0x20
0x1b2: V136 = ADD 0x20 V131
0x1b3: V137 = 0x4772696464657468000000000000000000000000000000000000000000000000
0x1d5: M[V136] = 0x4772696464657468000000000000000000000000000000000000000000000000
0x1d8: JUMP 0x9e
---
Entry stack: [V11, 0x9e]
Stack pops: 1
Stack additions: [S0, V131]
Exit stack: [V11, 0x9e, V131]

================================

Block 0x1d9
[0x1d9:0x1e0]
---
Predecessors: [0x124]
Successors: [0x24c]
---
0x1d9 JUMPDEST
0x1da PUSH2 0x1e1
0x1dd PUSH2 0x24c
0x1e0 JUMP
---
0x1d9: JUMPDEST 
0x1da: V138 = 0x1e1
0x1dd: V139 = 0x24c
0x1e0: JUMP 0x24c
---
Entry stack: [V11, 0x12c]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V11, 0x12c, 0x1e1]

================================

Block 0x1e1
[0x1e1:0x201]
---
Predecessors: [0x275]
Successors: [0x202, 0x242]
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x0
0x1e4 PUSH2 0x4650
0x1e7 DUP1
0x1e8 PUSH1 0x20
0x1ea MUL
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee SWAP1
0x1ef DUP2
0x1f0 ADD
0x1f1 PUSH1 0x40
0x1f3 MSTORE
0x1f4 DUP1
0x1f5 SWAP3
0x1f6 SWAP2
0x1f7 SWAP1
0x1f8 DUP3
0x1f9 PUSH2 0x4650
0x1fc DUP1
0x1fd ISZERO
0x1fe PUSH2 0x242
0x201 JUMPI
---
0x1e1: JUMPDEST 
0x1e2: V140 = 0x0
0x1e4: V141 = 0x4650
0x1e8: V142 = 0x20
0x1ea: V143 = MUL 0x20 0x4650
0x1eb: V144 = 0x40
0x1ed: V145 = M[0x40]
0x1f0: V146 = ADD V145 0x8ca00
0x1f1: V147 = 0x40
0x1f3: M[0x40] = V146
0x1f9: V148 = 0x4650
0x1fd: V149 = ISZERO 0x4650
0x1fe: V150 = 0x242
0x201: JUMPI 0x242 0x0
---
Entry stack: [V11, 0x12c, V179]
Stack pops: 0
Stack additions: [V145, 0x0, 0x4650, V145, 0x0, 0x4650]
Exit stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, V145, 0x0, 0x4650]

================================

Block 0x202
[0x202:0x20a]
---
Predecessors: [0x1e1]
Successors: [0x20b]
---
0x202 PUSH1 0x20
0x204 MUL
0x205 DUP3
0x206 ADD
0x207 SWAP2
0x208 PUSH1 0x0
0x20a SWAP1
---
0x202: V151 = 0x20
0x204: V152 = MUL 0x20 0x4650
0x206: V153 = ADD V145 0x8ca00
0x208: V154 = 0x0
---
Entry stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, V145, 0x0, 0x4650]
Stack pops: 3
Stack additions: [V153, S1, 0x0, S2]
Exit stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, V153, 0x0, 0x0, V145]

================================

Block 0x20b
[0x20b:0x23f]
---
Predecessors: [0x202, 0x20b]
Successors: [0x20b, 0x240]
---
0x20b JUMPDEST
0x20c DUP3
0x20d DUP3
0x20e SWAP1
0x20f SLOAD
0x210 SWAP1
0x211 PUSH2 0x100
0x214 EXP
0x215 SWAP1
0x216 DIV
0x217 PUSH1 0xff
0x219 AND
0x21a PUSH1 0xff
0x21c AND
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP1
0x223 PUSH1 0x1
0x225 ADD
0x226 SWAP1
0x227 PUSH1 0x20
0x229 DUP3
0x22a PUSH1 0x0
0x22c ADD
0x22d DIV
0x22e SWAP3
0x22f DUP4
0x230 ADD
0x231 SWAP3
0x232 PUSH1 0x1
0x234 SUB
0x235 DUP3
0x236 MUL
0x237 SWAP2
0x238 POP
0x239 DUP1
0x23a DUP5
0x23b GT
0x23c PUSH2 0x20b
0x23f JUMPI
---
0x20b: JUMPDEST 
0x20f: V155 = S[S2]
0x211: V156 = 0x100
0x214: V157 = EXP 0x100 S1
0x216: V158 = DIV V155 V157
0x217: V159 = 0xff
0x219: V160 = AND 0xff V158
0x21a: V161 = 0xff
0x21c: V162 = AND 0xff V160
0x21e: M[S0] = V162
0x21f: V163 = 0x20
0x221: V164 = ADD 0x20 S0
0x223: V165 = 0x1
0x225: V166 = ADD 0x1 S1
0x227: V167 = 0x20
0x22a: V168 = 0x0
0x22c: V169 = ADD 0x0 V166
0x22d: V170 = DIV V169 0x20
0x230: V171 = ADD V170 S2
0x232: V172 = 0x1
0x234: V173 = SUB 0x1 V170
0x236: V174 = MUL V166 V173
0x23b: V175 = GT V153 V164
0x23c: V176 = 0x20b
0x23f: JUMPI 0x20b V175
---
Entry stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, V153, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V171, V174, V164]
Exit stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, V153, V171, V174, V164]

================================

Block 0x240
[0x240:0x241]
---
Predecessors: [0x20b]
Successors: [0x242]
---
0x240 SWAP1
0x241 POP
---
0x240: NOP 
---
Entry stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, V153, V171, V174, V164]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, V153, V171, V164]

================================

Block 0x242
[0x242:0x24b]
---
Predecessors: [0x1e1, 0x240]
Successors: [0x12c]
---
0x242 JUMPDEST
0x243 POP
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 SWAP1
0x249 POP
0x24a SWAP1
0x24b JUMP
---
0x242: JUMPDEST 
0x24b: JUMP 0x12c
---
Entry stack: [V11, 0x12c, V179, V145, 0x0, 0x4650, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V145]

================================

Block 0x24c
[0x24c:0x25e]
---
Predecessors: [0x1d9]
Successors: [0x25f]
---
0x24c JUMPDEST
0x24d PUSH3 0x8ca00
0x251 PUSH1 0x40
0x253 MLOAD
0x254 SWAP1
0x255 DUP2
0x256 ADD
0x257 PUSH1 0x40
0x259 MSTORE
0x25a DUP1
0x25b PUSH2 0x4650
0x25e SWAP1
---
0x24c: JUMPDEST 
0x24d: V177 = 0x8ca00
0x251: V178 = 0x40
0x253: V179 = M[0x40]
0x256: V180 = ADD V179 0x8ca00
0x257: V181 = 0x40
0x259: M[0x40] = V180
0x25b: V182 = 0x4650
---
Entry stack: [V11, 0x12c, 0x1e1]
Stack pops: 0
Stack additions: [V179, 0x4650, V179]
Exit stack: [V11, 0x12c, 0x1e1, V179, 0x4650, V179]

================================

Block 0x25f
[0x25f:0x274]
---
Predecessors: [0x24c, 0x25f]
Successors: [0x25f, 0x275]
---
0x25f JUMPDEST
0x260 PUSH1 0x0
0x262 PUSH1 0xff
0x264 AND
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x20
0x269 ADD
0x26a SWAP1
0x26b PUSH1 0x1
0x26d SWAP1
0x26e SUB
0x26f SWAP1
0x270 DUP2
0x271 PUSH2 0x25f
0x274 JUMPI
---
0x25f: JUMPDEST 
0x260: V183 = 0x0
0x262: V184 = 0xff
0x264: V185 = AND 0xff 0x0
0x266: M[S0] = 0x0
0x267: V186 = 0x20
0x269: V187 = ADD 0x20 S0
0x26b: V188 = 0x1
0x26e: V189 = SUB S1 0x1
0x271: V190 = 0x25f
0x274: JUMPI 0x25f V189
---
Entry stack: [V11, 0x12c, 0x1e1, V179, S1, S0]
Stack pops: 2
Stack additions: [V189, V187]
Exit stack: [V11, 0x12c, 0x1e1, V179, V189, V187]

================================

Block 0x275
[0x275:0x279]
---
Predecessors: [0x25f]
Successors: [0x1e1]
---
0x275 SWAP1
0x276 POP
0x277 POP
0x278 SWAP1
0x279 JUMP
---
0x279: JUMP 0x1e1
---
Entry stack: [V11, 0x12c, 0x1e1, V179, V189, V187]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V11, 0x12c, V179]

================================

Block 0x27a
[0x27a:0x2b4]
---
Predecessors: []
Successors: []
---
0x27a STOP
0x27b LOG1
0x27c PUSH6 0x627a7a723058
0x283 SHA3
0x284 MISSING 0xe6
0x285 MISSING 0xb7
0x286 MISSING 0x4f
0x287 CODECOPY
0x288 PUSH1 0x27
0x28a MISSING 0xb7
0x28b MISSING 0x4f
0x28c MISSING 0xe
0x28d MISSING 0x1f
0x28e SAR
0x28f MISSING 0xdb
0x290 PUSH1 0x53
0x292 MISSING 0xc9
0x293 CALLER
0x294 MISSING 0xe8
0x295 MISSING 0x47
0x296 MISSING 0x4e
0x297 DUP7
0x298 LOG1
0x299 PUSH27 0xe8f41d3480e6cd078ef00029
---
0x27a: STOP 
0x27b: LOG S0 S1 S2
0x27c: V191 = 0x627a7a723058
0x283: V192 = SHA3 0x627a7a723058 S3
0x284: MISSING 0xe6
0x285: MISSING 0xb7
0x286: MISSING 0x4f
0x287: CODECOPY S0 S1 S2
0x288: V193 = 0x27
0x28a: MISSING 0xb7
0x28b: MISSING 0x4f
0x28c: MISSING 0xe
0x28d: MISSING 0x1f
0x28e: V194 = SAR S0 S1
0x28f: MISSING 0xdb
0x290: V195 = 0x53
0x292: MISSING 0xc9
0x293: V196 = CALLER
0x294: MISSING 0xe8
0x295: MISSING 0x47
0x296: MISSING 0x4e
0x298: LOG S6 S0 S1
0x299: V197 = 0xe8f41d3480e6cd078ef00029
---
Entry stack: []
Stack pops: 0
Stack additions: [V192, 0x27, V194, 0x53, V196, 0xe8f41d3480e6cd078ef00029, S2, S3, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x21e88888
Entry block: 0x5c
Exit block: 0x89
Body: 0x5c, 0x63, 0x67, 0x89, 0x16b, 0x17b, 0x17c

Function 1:
Public function signature: 0xa3f4df7e
Entry block: 0x8b
Exit block: 0x10b
Body: 0x8b, 0x92, 0x96, 0x9e, 0xc3, 0xcc, 0xde, 0xf2, 0x10b, 0x1a0

Function 2:
Public function signature: 0xef220233
Entry block: 0x119
Exit block: 0x158
Body: 0x119, 0x120, 0x124, 0x12c, 0x13d, 0x146, 0x158, 0x1d9, 0x1e1, 0x202, 0x20b, 0x240, 0x242, 0x24c, 0x25f, 0x275

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

