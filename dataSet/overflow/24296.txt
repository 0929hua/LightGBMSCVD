Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x12065fe0
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x12065fe0
0x3c: V13 = EQ 0x12065fe0 V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbb]
---
0x4c DUP1
0x4d PUSH4 0x4e69d560
0x52 EQ
0x53 PUSH2 0xbb
0x56 JUMPI
---
0x4d: V18 = 0x4e69d560
0x52: V19 = EQ 0x4e69d560 V11
0x53: V20 = 0xbb
0x56: JUMPI 0xbb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe8]
---
0x57 DUP1
0x58 PUSH4 0x52541b68
0x5d EQ
0x5e PUSH2 0xe8
0x61 JUMPI
---
0x58: V21 = 0x52541b68
0x5d: V22 = EQ 0x52541b68 V11
0x5e: V23 = 0xe8
0x61: JUMPI 0xe8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x103]
---
0x62 DUP1
0x63 PUSH4 0xb163cc38
0x68 EQ
0x69 PUSH2 0x103
0x6c JUMPI
---
0x63: V24 = 0xb163cc38
0x68: V25 = EQ 0xb163cc38 V11
0x69: V26 = 0x103
0x6c: JUMPI 0x103 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x10d]
---
0x6d DUP1
0x6e PUSH4 0xc7591d35
0x73 EQ
0x74 PUSH2 0x10d
0x77 JUMPI
---
0x6e: V27 = 0xc7591d35
0x73: V28 = EQ 0xc7591d35 V11
0x74: V29 = 0x10d
0x77: JUMPI 0x10d V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x7d]
Successors: [0x122]
---
0x88 JUMPDEST
0x89 PUSH2 0x90
0x8c PUSH2 0x122
0x8f JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0x90
0x8c: V36 = 0x122
0x8f: JUMP 0x122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90]
Exit stack: [V11, 0x90]

================================

Block 0x90
[0x90:0xa5]
---
Predecessors: [0x122]
Successors: []
---
0x90 JUMPDEST
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP3
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 RETURN
---
0x90: JUMPDEST 
0x91: V37 = 0x40
0x93: V38 = M[0x40]
0x97: M[V38] = V87
0x98: V39 = 0x20
0x9a: V40 = ADD 0x20 V38
0x9e: V41 = 0x40
0xa0: V42 = M[0x40]
0xa3: V43 = SUB V40 V42
0xa5: RETURN V42 V43
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V44 = CALLVALUE
0xa8: V45 = ISZERO V44
0xa9: V46 = 0xb1
0xac: JUMPI 0xb1 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V47 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0xa6]
Successors: [0x141]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xb9
0xb5 PUSH2 0x141
0xb8 JUMP
---
0xb1: JUMPDEST 
0xb2: V48 = 0xb9
0xb5: V49 = 0x141
0xb8: JUMP 0x141
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x244]
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x4c]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V50 = CALLVALUE
0xbd: V51 = ISZERO V50
0xbe: V52 = 0xc6
0xc1: JUMPI 0xc6 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V53 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x246]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xce
0xca PUSH2 0x246
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V54 = 0xce
0xca: V55 = 0x246
0xcd: JUMP 0x246
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V11, 0xce]

================================

Block 0xce
[0xce:0xe7]
---
Predecessors: [0x246]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 DUP3
0xd4 ISZERO
0xd5 ISZERO
0xd6 ISZERO
0xd7 ISZERO
0xd8 DUP2
0xd9 MSTORE
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP2
0xde POP
0xdf POP
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 DUP1
0xe4 SWAP2
0xe5 SUB
0xe6 SWAP1
0xe7 RETURN
---
0xce: JUMPDEST 
0xcf: V56 = 0x40
0xd1: V57 = M[0x40]
0xd4: V58 = ISZERO V162
0xd5: V59 = ISZERO V58
0xd6: V60 = ISZERO V59
0xd7: V61 = ISZERO V60
0xd9: M[V57] = V61
0xda: V62 = 0x20
0xdc: V63 = ADD 0x20 V57
0xe0: V64 = 0x40
0xe2: V65 = M[0x40]
0xe5: V66 = SUB V63 V65
0xe7: RETURN V65 V66
---
Entry stack: [V11, V162]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0x100]
---
Predecessors: [0x57]
Successors: [0x25c]
---
0xe8 JUMPDEST
0xe9 PUSH2 0x101
0xec PUSH1 0x4
0xee DUP1
0xef DUP1
0xf0 CALLDATALOAD
0xf1 PUSH1 0xff
0xf3 AND
0xf4 SWAP1
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 SWAP2
0xfa SWAP1
0xfb POP
0xfc POP
0xfd PUSH2 0x25c
0x100 JUMP
---
0xe8: JUMPDEST 
0xe9: V67 = 0x101
0xec: V68 = 0x4
0xf0: V69 = CALLDATALOAD 0x4
0xf1: V70 = 0xff
0xf3: V71 = AND 0xff V69
0xf5: V72 = 0x20
0xf7: V73 = ADD 0x20 0x4
0xfd: V74 = 0x25c
0x100: JUMP 0x25c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101, V71]
Exit stack: [V11, 0x101, V71]

================================

Block 0x101
[0x101:0x102]
---
Predecessors: [0x28b]
Successors: []
---
0x101 JUMPDEST
0x102 STOP
---
0x101: JUMPDEST 
0x102: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0x62]
Successors: [0x32e]
---
0x103 JUMPDEST
0x104 PUSH2 0x10b
0x107 PUSH2 0x32e
0x10a JUMP
---
0x103: JUMPDEST 
0x104: V75 = 0x10b
0x107: V76 = 0x32e
0x10a: JUMP 0x32e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V11, 0x10b]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x349]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x113]
---
Predecessors: [0x6d]
Successors: [0x114, 0x118]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f ISZERO
0x110 PUSH2 0x118
0x113 JUMPI
---
0x10d: JUMPDEST 
0x10e: V77 = CALLVALUE
0x10f: V78 = ISZERO V77
0x110: V79 = 0x118
0x113: JUMPI 0x118 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0x10d]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V80 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x118
[0x118:0x11f]
---
Predecessors: [0x10d]
Successors: [0x34b]
---
0x118 JUMPDEST
0x119 PUSH2 0x120
0x11c PUSH2 0x34b
0x11f JUMP
---
0x118: JUMPDEST 
0x119: V81 = 0x120
0x11c: V82 = 0x34b
0x11f: JUMP 0x34b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x120]
Exit stack: [V11, 0x120]

================================

Block 0x120
[0x120:0x121]
---
Predecessors: [0x628]
Successors: []
---
0x120 JUMPDEST
0x121 STOP
---
0x120: JUMPDEST 
0x121: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x140]
---
Predecessors: [0x88]
Successors: [0x90]
---
0x122 JUMPDEST
0x123 PUSH1 0x0
0x125 ADDRESS
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c BALANCE
0x13d SWAP1
0x13e POP
0x13f SWAP1
0x140 JUMP
---
0x122: JUMPDEST 
0x123: V83 = 0x0
0x125: V84 = ADDRESS
0x126: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x13c: V87 = BALANCE V86
0x140: JUMP 0x90
---
Entry stack: [V11, 0x90]
Stack pops: 1
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x141
[0x141:0x157]
---
Predecessors: [0xb1]
Successors: [0x158, 0x15c]
---
0x141 JUMPDEST
0x142 PUSH1 0x0
0x144 PUSH1 0x14
0x146 SWAP1
0x147 SLOAD
0x148 SWAP1
0x149 PUSH2 0x100
0x14c EXP
0x14d SWAP1
0x14e DIV
0x14f PUSH1 0xff
0x151 AND
0x152 ISZERO
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x141: JUMPDEST 
0x142: V88 = 0x0
0x144: V89 = 0x14
0x147: V90 = S[0x0]
0x149: V91 = 0x100
0x14c: V92 = EXP 0x100 0x14
0x14e: V93 = DIV V90 0x10000000000000000000000000000000000000000
0x14f: V94 = 0xff
0x151: V95 = AND 0xff V93
0x152: V96 = ISZERO V95
0x153: V97 = ISZERO V96
0x154: V98 = 0x15c
0x157: JUMPI 0x15c V97
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x141]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V99 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x15c
[0x15c:0x1b1]
---
Predecessors: [0x141]
Successors: [0x1b2, 0x244]
---
0x15c JUMPDEST
0x15d PUSH1 0x0
0x15f DUP1
0x160 SWAP1
0x161 SLOAD
0x162 SWAP1
0x163 PUSH2 0x100
0x166 EXP
0x167 SWAP1
0x168 DIV
0x169 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17e AND
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 AND
0x195 CALLER
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac EQ
0x1ad ISZERO
0x1ae PUSH2 0x244
0x1b1 JUMPI
---
0x15c: JUMPDEST 
0x15d: V100 = 0x0
0x161: V101 = S[0x0]
0x163: V102 = 0x100
0x166: V103 = EXP 0x100 0x0
0x168: V104 = DIV V101 0x1
0x169: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x17f: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x195: V109 = CALLER
0x196: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1ac: V112 = EQ V111 V108
0x1ad: V113 = ISZERO V112
0x1ae: V114 = 0x244
0x1b1: JUMPI 0x244 V113
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x1b2
[0x1b2:0x224]
---
Predecessors: [0x15c]
Successors: [0x225, 0x229]
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 SWAP1
0x1b6 SLOAD
0x1b7 SWAP1
0x1b8 PUSH2 0x100
0x1bb EXP
0x1bc SWAP1
0x1bd DIV
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea PUSH2 0x8fc
0x1ed ADDRESS
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 BALANCE
0x205 SWAP1
0x206 DUP2
0x207 ISZERO
0x208 MUL
0x209 SWAP1
0x20a PUSH1 0x40
0x20c MLOAD
0x20d PUSH1 0x0
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 DUP4
0x214 SUB
0x215 DUP2
0x216 DUP6
0x217 DUP9
0x218 DUP9
0x219 CALL
0x21a SWAP4
0x21b POP
0x21c POP
0x21d POP
0x21e POP
0x21f ISZERO
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x1b2: V115 = 0x0
0x1b6: V116 = S[0x0]
0x1b8: V117 = 0x100
0x1bb: V118 = EXP 0x100 0x0
0x1bd: V119 = DIV V116 0x1
0x1be: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1d4: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1ea: V124 = 0x8fc
0x1ed: V125 = ADDRESS
0x1ee: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x204: V128 = BALANCE V127
0x207: V129 = ISZERO V128
0x208: V130 = MUL V129 0x8fc
0x20a: V131 = 0x40
0x20c: V132 = M[0x40]
0x20d: V133 = 0x0
0x20f: V134 = 0x40
0x211: V135 = M[0x40]
0x214: V136 = SUB V132 V135
0x219: V137 = CALL V130 V123 V128 V135 V136 V135 0x0
0x21f: V138 = ISZERO V137
0x220: V139 = ISZERO V138
0x221: V140 = 0x229
0x224: JUMPI 0x229 V139
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x1b2]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V141 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x229
[0x229:0x243]
---
Predecessors: [0x1b2]
Successors: [0x244]
---
0x229 JUMPDEST
0x22a PUSH1 0x0
0x22c DUP1
0x22d PUSH1 0x14
0x22f PUSH2 0x100
0x232 EXP
0x233 DUP2
0x234 SLOAD
0x235 DUP2
0x236 PUSH1 0xff
0x238 MUL
0x239 NOT
0x23a AND
0x23b SWAP1
0x23c DUP4
0x23d ISZERO
0x23e ISZERO
0x23f MUL
0x240 OR
0x241 SWAP1
0x242 SSTORE
0x243 POP
---
0x229: JUMPDEST 
0x22a: V142 = 0x0
0x22d: V143 = 0x14
0x22f: V144 = 0x100
0x232: V145 = EXP 0x100 0x14
0x234: V146 = S[0x0]
0x236: V147 = 0xff
0x238: V148 = MUL 0xff 0x10000000000000000000000000000000000000000
0x239: V149 = NOT 0xff0000000000000000000000000000000000000000
0x23a: V150 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V146
0x23d: V151 = ISZERO 0x0
0x23e: V152 = ISZERO 0x1
0x23f: V153 = MUL 0x0 0x10000000000000000000000000000000000000000
0x240: V154 = OR 0x0 V150
0x242: S[0x0] = V154
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x244
[0x244:0x245]
---
Predecessors: [0x15c, 0x229]
Successors: [0xb9]
---
0x244 JUMPDEST
0x245 JUMP
---
0x244: JUMPDEST 
0x245: JUMP 0xb9
---
Entry stack: [V11, 0xb9]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x246
[0x246:0x25b]
---
Predecessors: [0xc6]
Successors: [0xce]
---
0x246 JUMPDEST
0x247 PUSH1 0x0
0x249 DUP1
0x24a PUSH1 0x14
0x24c SWAP1
0x24d SLOAD
0x24e SWAP1
0x24f PUSH2 0x100
0x252 EXP
0x253 SWAP1
0x254 DIV
0x255 PUSH1 0xff
0x257 AND
0x258 SWAP1
0x259 POP
0x25a SWAP1
0x25b JUMP
---
0x246: JUMPDEST 
0x247: V155 = 0x0
0x24a: V156 = 0x14
0x24d: V157 = S[0x0]
0x24f: V158 = 0x100
0x252: V159 = EXP 0x100 0x14
0x254: V160 = DIV V157 0x10000000000000000000000000000000000000000
0x255: V161 = 0xff
0x257: V162 = AND 0xff V160
0x25b: JUMP 0xce
---
Entry stack: [V11, 0xce]
Stack pops: 1
Stack additions: [V162]
Exit stack: [V11, V162]

================================

Block 0x25c
[0x25c:0x272]
---
Predecessors: [0xe8]
Successors: [0x273, 0x277]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f PUSH1 0x14
0x261 SWAP1
0x262 SLOAD
0x263 SWAP1
0x264 PUSH2 0x100
0x267 EXP
0x268 SWAP1
0x269 DIV
0x26a PUSH1 0xff
0x26c AND
0x26d ISZERO
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x25c: JUMPDEST 
0x25d: V163 = 0x0
0x25f: V164 = 0x14
0x262: V165 = S[0x0]
0x264: V166 = 0x100
0x267: V167 = EXP 0x100 0x14
0x269: V168 = DIV V165 0x10000000000000000000000000000000000000000
0x26a: V169 = 0xff
0x26c: V170 = AND 0xff V168
0x26d: V171 = ISZERO V170
0x26e: V172 = ISZERO V171
0x26f: V173 = 0x277
0x272: JUMPI 0x277 V172
---
Entry stack: [V11, 0x101, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101, V71]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x25c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V174 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V11, 0x101, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101, V71]

================================

Block 0x277
[0x277:0x286]
---
Predecessors: [0x25c]
Successors: [0x287, 0x28b]
---
0x277 JUMPDEST
0x278 PUSH6 0xe35fa931a000
0x27f CALLVALUE
0x280 EQ
0x281 ISZERO
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x277: JUMPDEST 
0x278: V175 = 0xe35fa931a000
0x27f: V176 = CALLVALUE
0x280: V177 = EQ V176 0xe35fa931a000
0x281: V178 = ISZERO V177
0x282: V179 = ISZERO V178
0x283: V180 = 0x28b
0x286: JUMPI 0x28b V179
---
Entry stack: [V11, 0x101, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101, V71]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x277]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V181 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x101, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101, V71]

================================

Block 0x28b
[0x28b:0x32d]
---
Predecessors: [0x277]
Successors: [0x101]
---
0x28b JUMPDEST
0x28c DUP1
0x28d PUSH1 0x3
0x28f PUSH1 0x0
0x291 CALLER
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be DUP2
0x2bf MSTORE
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 PUSH1 0x0
0x2cb SHA3
0x2cc PUSH1 0x0
0x2ce PUSH2 0x100
0x2d1 EXP
0x2d2 DUP2
0x2d3 SLOAD
0x2d4 DUP2
0x2d5 PUSH1 0xff
0x2d7 MUL
0x2d8 NOT
0x2d9 AND
0x2da SWAP1
0x2db DUP4
0x2dc PUSH1 0xff
0x2de AND
0x2df MUL
0x2e0 OR
0x2e1 SWAP1
0x2e2 SSTORE
0x2e3 POP
0x2e4 PUSH1 0x1
0x2e6 SLOAD
0x2e7 TIMESTAMP
0x2e8 ADD
0x2e9 PUSH1 0x4
0x2eb PUSH1 0x0
0x2ed CALLER
0x2ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x303 AND
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 AND
0x31a DUP2
0x31b MSTORE
0x31c PUSH1 0x20
0x31e ADD
0x31f SWAP1
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 PUSH1 0x0
0x327 SHA3
0x328 DUP2
0x329 SWAP1
0x32a SSTORE
0x32b POP
0x32c POP
0x32d JUMP
---
0x28b: JUMPDEST 
0x28d: V182 = 0x3
0x28f: V183 = 0x0
0x291: V184 = CALLER
0x292: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2a8: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2bf: M[0x0] = V188
0x2c0: V189 = 0x20
0x2c2: V190 = ADD 0x20 0x0
0x2c5: M[0x20] = 0x3
0x2c6: V191 = 0x20
0x2c8: V192 = ADD 0x20 0x20
0x2c9: V193 = 0x0
0x2cb: V194 = SHA3 0x0 0x40
0x2cc: V195 = 0x0
0x2ce: V196 = 0x100
0x2d1: V197 = EXP 0x100 0x0
0x2d3: V198 = S[V194]
0x2d5: V199 = 0xff
0x2d7: V200 = MUL 0xff 0x1
0x2d8: V201 = NOT 0xff
0x2d9: V202 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V198
0x2dc: V203 = 0xff
0x2de: V204 = AND 0xff V71
0x2df: V205 = MUL V204 0x1
0x2e0: V206 = OR V205 V202
0x2e2: S[V194] = V206
0x2e4: V207 = 0x1
0x2e6: V208 = S[0x1]
0x2e7: V209 = TIMESTAMP
0x2e8: V210 = ADD V209 V208
0x2e9: V211 = 0x4
0x2eb: V212 = 0x0
0x2ed: V213 = CALLER
0x2ee: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x303: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x304: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x31b: M[0x0] = V217
0x31c: V218 = 0x20
0x31e: V219 = ADD 0x20 0x0
0x321: M[0x20] = 0x4
0x322: V220 = 0x20
0x324: V221 = ADD 0x20 0x20
0x325: V222 = 0x0
0x327: V223 = SHA3 0x0 0x40
0x32a: S[V223] = V210
0x32d: JUMP 0x101
---
Entry stack: [V11, 0x101, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x32e
[0x32e:0x344]
---
Predecessors: [0x103]
Successors: [0x345, 0x349]
---
0x32e JUMPDEST
0x32f PUSH1 0x0
0x331 PUSH1 0x14
0x333 SWAP1
0x334 SLOAD
0x335 SWAP1
0x336 PUSH2 0x100
0x339 EXP
0x33a SWAP1
0x33b DIV
0x33c PUSH1 0xff
0x33e AND
0x33f ISZERO
0x340 ISZERO
0x341 PUSH2 0x349
0x344 JUMPI
---
0x32e: JUMPDEST 
0x32f: V224 = 0x0
0x331: V225 = 0x14
0x334: V226 = S[0x0]
0x336: V227 = 0x100
0x339: V228 = EXP 0x100 0x14
0x33b: V229 = DIV V226 0x10000000000000000000000000000000000000000
0x33c: V230 = 0xff
0x33e: V231 = AND 0xff V229
0x33f: V232 = ISZERO V231
0x340: V233 = ISZERO V232
0x341: V234 = 0x349
0x344: JUMPI 0x349 V233
---
Entry stack: [V11, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b]

================================

Block 0x345
[0x345:0x348]
---
Predecessors: [0x32e]
Successors: []
---
0x345 PUSH1 0x0
0x347 DUP1
0x348 REVERT
---
0x345: V235 = 0x0
0x348: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b]

================================

Block 0x349
[0x349:0x34a]
---
Predecessors: [0x32e]
Successors: [0x10b]
---
0x349 JUMPDEST
0x34a JUMP
---
0x349: JUMPDEST 
0x34a: JUMP 0x10b
---
Entry stack: [V11, 0x10b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x34b
[0x34b:0x362]
---
Predecessors: [0x118]
Successors: [0x363, 0x367]
---
0x34b JUMPDEST
0x34c PUSH1 0x0
0x34e DUP1
0x34f PUSH1 0x14
0x351 SWAP1
0x352 SLOAD
0x353 SWAP1
0x354 PUSH2 0x100
0x357 EXP
0x358 SWAP1
0x359 DIV
0x35a PUSH1 0xff
0x35c AND
0x35d ISZERO
0x35e ISZERO
0x35f PUSH2 0x367
0x362 JUMPI
---
0x34b: JUMPDEST 
0x34c: V236 = 0x0
0x34f: V237 = 0x14
0x352: V238 = S[0x0]
0x354: V239 = 0x100
0x357: V240 = EXP 0x100 0x14
0x359: V241 = DIV V238 0x10000000000000000000000000000000000000000
0x35a: V242 = 0xff
0x35c: V243 = AND 0xff V241
0x35d: V244 = ISZERO V243
0x35e: V245 = ISZERO V244
0x35f: V246 = 0x367
0x362: JUMPI 0x367 V245
---
Entry stack: [V11, 0x120]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x120, 0x0]

================================

Block 0x363
[0x363:0x366]
---
Predecessors: [0x34b]
Successors: []
---
0x363 PUSH1 0x0
0x365 DUP1
0x366 REVERT
---
0x363: V247 = 0x0
0x366: REVERT 0x0 0x0
---
Entry stack: [V11, 0x120, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, 0x0]

================================

Block 0x367
[0x367:0x3af]
---
Predecessors: [0x34b]
Successors: [0x3b0, 0x3b4]
---
0x367 JUMPDEST
0x368 PUSH1 0x4
0x36a PUSH1 0x0
0x36c CALLER
0x36d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x382 AND
0x383 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x398 AND
0x399 DUP2
0x39a MSTORE
0x39b PUSH1 0x20
0x39d ADD
0x39e SWAP1
0x39f DUP2
0x3a0 MSTORE
0x3a1 PUSH1 0x20
0x3a3 ADD
0x3a4 PUSH1 0x0
0x3a6 SHA3
0x3a7 SLOAD
0x3a8 TIMESTAMP
0x3a9 GT
0x3aa ISZERO
0x3ab ISZERO
0x3ac PUSH2 0x3b4
0x3af JUMPI
---
0x367: JUMPDEST 
0x368: V248 = 0x4
0x36a: V249 = 0x0
0x36c: V250 = CALLER
0x36d: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x382: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x383: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x398: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x39a: M[0x0] = V254
0x39b: V255 = 0x20
0x39d: V256 = ADD 0x20 0x0
0x3a0: M[0x20] = 0x4
0x3a1: V257 = 0x20
0x3a3: V258 = ADD 0x20 0x20
0x3a4: V259 = 0x0
0x3a6: V260 = SHA3 0x0 0x40
0x3a7: V261 = S[V260]
0x3a8: V262 = TIMESTAMP
0x3a9: V263 = GT V262 V261
0x3aa: V264 = ISZERO V263
0x3ab: V265 = ISZERO V264
0x3ac: V266 = 0x3b4
0x3af: JUMPI 0x3b4 V265
---
Entry stack: [V11, 0x120, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, 0x0]

================================

Block 0x3b0
[0x3b0:0x3b3]
---
Predecessors: [0x367]
Successors: []
---
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 REVERT
---
0x3b0: V267 = 0x0
0x3b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x120, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, 0x0]

================================

Block 0x3b4
[0x3b4:0x493]
---
Predecessors: [0x367]
Successors: [0x494, 0x495]
---
0x3b4 JUMPDEST
0x3b5 PUSH1 0xa
0x3b7 TIMESTAMP
0x3b8 PUSH1 0x0
0x3ba DUP1
0x3bb SWAP1
0x3bc SLOAD
0x3bd SWAP1
0x3be PUSH2 0x100
0x3c1 EXP
0x3c2 SWAP1
0x3c3 DIV
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da COINBASE
0x3db DIFFICULTY
0x3dc PUSH1 0x2
0x3de SLOAD
0x3df PUSH1 0x40
0x3e1 MLOAD
0x3e2 DUP1
0x3e3 DUP7
0x3e4 DUP2
0x3e5 MSTORE
0x3e6 PUSH1 0x20
0x3e8 ADD
0x3e9 DUP6
0x3ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ff AND
0x400 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x415 AND
0x416 PUSH13 0x1000000000000000000000000
0x424 MUL
0x425 DUP2
0x426 MSTORE
0x427 PUSH1 0x14
0x429 ADD
0x42a DUP5
0x42b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x440 AND
0x441 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x456 AND
0x457 PUSH13 0x1000000000000000000000000
0x465 MUL
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x14
0x46a ADD
0x46b DUP4
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 DUP3
0x472 DUP2
0x473 MSTORE
0x474 PUSH1 0x20
0x476 ADD
0x477 SWAP6
0x478 POP
0x479 POP
0x47a POP
0x47b POP
0x47c POP
0x47d POP
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 SWAP2
0x483 SUB
0x484 SWAP1
0x485 SHA3
0x486 PUSH1 0x1
0x488 SWAP1
0x489 DIV
0x48a PUSH1 0xff
0x48c AND
0x48d DUP2
0x48e ISZERO
0x48f ISZERO
0x490 PUSH2 0x495
0x493 JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V268 = 0xa
0x3b7: V269 = TIMESTAMP
0x3b8: V270 = 0x0
0x3bc: V271 = S[0x0]
0x3be: V272 = 0x100
0x3c1: V273 = EXP 0x100 0x0
0x3c3: V274 = DIV V271 0x1
0x3c4: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x3da: V277 = COINBASE
0x3db: V278 = DIFFICULTY
0x3dc: V279 = 0x2
0x3de: V280 = S[0x2]
0x3df: V281 = 0x40
0x3e1: V282 = M[0x40]
0x3e5: M[V282] = V269
0x3e6: V283 = 0x20
0x3e8: V284 = ADD 0x20 V282
0x3ea: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x400: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x415: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x416: V289 = 0x1000000000000000000000000
0x424: V290 = MUL 0x1000000000000000000000000 V288
0x426: M[V284] = V290
0x427: V291 = 0x14
0x429: V292 = ADD 0x14 V284
0x42b: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x440: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x441: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x456: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x457: V297 = 0x1000000000000000000000000
0x465: V298 = MUL 0x1000000000000000000000000 V296
0x467: M[V292] = V298
0x468: V299 = 0x14
0x46a: V300 = ADD 0x14 V292
0x46d: M[V300] = V278
0x46e: V301 = 0x20
0x470: V302 = ADD 0x20 V300
0x473: M[V302] = V280
0x474: V303 = 0x20
0x476: V304 = ADD 0x20 V302
0x47e: V305 = 0x40
0x480: V306 = M[0x40]
0x483: V307 = SUB V304 V306
0x485: V308 = SHA3 V306 V307
0x486: V309 = 0x1
0x489: V310 = DIV V308 0x1
0x48a: V311 = 0xff
0x48c: V312 = AND 0xff V310
0x48e: V313 = ISZERO 0xa
0x48f: V314 = ISZERO 0x0
0x490: V315 = 0x495
0x493: JUMPI 0x495 0x1
---
Entry stack: [V11, 0x120, 0x0]
Stack pops: 0
Stack additions: [0xa, V312]
Exit stack: [V11, 0x120, 0x0, 0xa, V312]

================================

Block 0x494
[0x494:0x494]
---
Predecessors: [0x3b4]
Successors: []
---
0x494 INVALID
---
0x494: INVALID 
---
Entry stack: [V11, 0x120, 0x0, 0xa, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, 0x0, 0xa, V312]

================================

Block 0x495
[0x495:0x4d4]
---
Predecessors: [0x3b4]
Successors: [0x4d5, 0x4d6]
---
0x495 JUMPDEST
0x496 MOD
0x497 PUSH1 0x0
0x499 PUSH1 0x15
0x49b PUSH2 0x100
0x49e EXP
0x49f DUP2
0x4a0 SLOAD
0x4a1 DUP2
0x4a2 PUSH1 0xff
0x4a4 MUL
0x4a5 NOT
0x4a6 AND
0x4a7 SWAP1
0x4a8 DUP4
0x4a9 PUSH1 0xff
0x4ab AND
0x4ac MUL
0x4ad OR
0x4ae SWAP1
0x4af SSTORE
0x4b0 POP
0x4b1 PUSH2 0x2710
0x4b4 TIMESTAMP
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 DUP1
0x4b9 DUP3
0x4ba DUP2
0x4bb MSTORE
0x4bc PUSH1 0x20
0x4be ADD
0x4bf SWAP2
0x4c0 POP
0x4c1 POP
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 SHA3
0x4ca PUSH1 0x1
0x4cc SWAP1
0x4cd DIV
0x4ce DUP2
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 PUSH2 0x4d6
0x4d4 JUMPI
---
0x495: JUMPDEST 
0x496: V316 = MOD V312 0xa
0x497: V317 = 0x0
0x499: V318 = 0x15
0x49b: V319 = 0x100
0x49e: V320 = EXP 0x100 0x15
0x4a0: V321 = S[0x0]
0x4a2: V322 = 0xff
0x4a4: V323 = MUL 0xff 0x1000000000000000000000000000000000000000000
0x4a5: V324 = NOT 0xff000000000000000000000000000000000000000000
0x4a6: V325 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V321
0x4a9: V326 = 0xff
0x4ab: V327 = AND 0xff V316
0x4ac: V328 = MUL V327 0x1000000000000000000000000000000000000000000
0x4ad: V329 = OR V328 V325
0x4af: S[0x0] = V329
0x4b1: V330 = 0x2710
0x4b4: V331 = TIMESTAMP
0x4b5: V332 = 0x40
0x4b7: V333 = M[0x40]
0x4bb: M[V333] = V331
0x4bc: V334 = 0x20
0x4be: V335 = ADD 0x20 V333
0x4c2: V336 = 0x40
0x4c4: V337 = M[0x40]
0x4c7: V338 = SUB V335 V337
0x4c9: V339 = SHA3 V337 V338
0x4ca: V340 = 0x1
0x4cd: V341 = DIV V339 0x1
0x4cf: V342 = ISZERO 0x2710
0x4d0: V343 = ISZERO 0x0
0x4d1: V344 = 0x4d6
0x4d4: JUMPI 0x4d6 0x1
---
Entry stack: [V11, 0x120, 0x0, 0xa, V312]
Stack pops: 2
Stack additions: [0x2710, V341]
Exit stack: [V11, 0x120, 0x0, 0x2710, V341]

================================

Block 0x4d5
[0x4d5:0x4d5]
---
Predecessors: [0x495]
Successors: []
---
0x4d5 INVALID
---
0x4d5: INVALID 
---
Entry stack: [V11, 0x120, 0x0, 0x2710, V341]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, 0x0, 0x2710, V341]

================================

Block 0x4d6
[0x4d6:0x549]
---
Predecessors: [0x495]
Successors: [0x54a, 0x628]
---
0x4d6 JUMPDEST
0x4d7 MOD
0x4d8 PUSH1 0x2
0x4da DUP2
0x4db SWAP1
0x4dc SSTORE
0x4dd POP
0x4de PUSH1 0x3
0x4e0 PUSH1 0x0
0x4e2 CALLER
0x4e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f8 AND
0x4f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50e AND
0x50f DUP2
0x510 MSTORE
0x511 PUSH1 0x20
0x513 ADD
0x514 SWAP1
0x515 DUP2
0x516 MSTORE
0x517 PUSH1 0x20
0x519 ADD
0x51a PUSH1 0x0
0x51c SHA3
0x51d PUSH1 0x0
0x51f SWAP1
0x520 SLOAD
0x521 SWAP1
0x522 PUSH2 0x100
0x525 EXP
0x526 SWAP1
0x527 DIV
0x528 PUSH1 0xff
0x52a AND
0x52b SWAP1
0x52c POP
0x52d PUSH1 0x0
0x52f PUSH1 0x15
0x531 SWAP1
0x532 SLOAD
0x533 SWAP1
0x534 PUSH2 0x100
0x537 EXP
0x538 SWAP1
0x539 DIV
0x53a PUSH1 0xff
0x53c AND
0x53d PUSH1 0xff
0x53f AND
0x540 DUP2
0x541 PUSH1 0xff
0x543 AND
0x544 EQ
0x545 ISZERO
0x546 PUSH2 0x628
0x549 JUMPI
---
0x4d6: JUMPDEST 
0x4d7: V345 = MOD V341 0x2710
0x4d8: V346 = 0x2
0x4dc: S[0x2] = V345
0x4de: V347 = 0x3
0x4e0: V348 = 0x0
0x4e2: V349 = CALLER
0x4e3: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x4f9: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x510: M[0x0] = V353
0x511: V354 = 0x20
0x513: V355 = ADD 0x20 0x0
0x516: M[0x20] = 0x3
0x517: V356 = 0x20
0x519: V357 = ADD 0x20 0x20
0x51a: V358 = 0x0
0x51c: V359 = SHA3 0x0 0x40
0x51d: V360 = 0x0
0x520: V361 = S[V359]
0x522: V362 = 0x100
0x525: V363 = EXP 0x100 0x0
0x527: V364 = DIV V361 0x1
0x528: V365 = 0xff
0x52a: V366 = AND 0xff V364
0x52d: V367 = 0x0
0x52f: V368 = 0x15
0x532: V369 = S[0x0]
0x534: V370 = 0x100
0x537: V371 = EXP 0x100 0x15
0x539: V372 = DIV V369 0x1000000000000000000000000000000000000000000
0x53a: V373 = 0xff
0x53c: V374 = AND 0xff V372
0x53d: V375 = 0xff
0x53f: V376 = AND 0xff V374
0x541: V377 = 0xff
0x543: V378 = AND 0xff V366
0x544: V379 = EQ V378 V376
0x545: V380 = ISZERO V379
0x546: V381 = 0x628
0x549: JUMPI 0x628 V380
---
Entry stack: [V11, 0x120, 0x0, 0x2710, V341]
Stack pops: 3
Stack additions: [V366]
Exit stack: [V11, 0x120, V366]

================================

Block 0x54a
[0x54a:0x587]
---
Predecessors: [0x4d6]
Successors: [0x588, 0x589]
---
0x54a CALLER
0x54b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x560 AND
0x561 PUSH2 0x8fc
0x564 PUSH1 0xa
0x566 PUSH1 0x8
0x568 ADDRESS
0x569 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57e AND
0x57f BALANCE
0x580 MUL
0x581 DUP2
0x582 ISZERO
0x583 ISZERO
0x584 PUSH2 0x589
0x587 JUMPI
---
0x54a: V382 = CALLER
0x54b: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x560: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x561: V385 = 0x8fc
0x564: V386 = 0xa
0x566: V387 = 0x8
0x568: V388 = ADDRESS
0x569: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x57f: V391 = BALANCE V390
0x580: V392 = MUL V391 0x8
0x582: V393 = ISZERO 0xa
0x583: V394 = ISZERO 0x0
0x584: V395 = 0x589
0x587: JUMPI 0x589 0x1
---
Entry stack: [V11, 0x120, V366]
Stack pops: 0
Stack additions: [V384, 0x8fc, 0xa, V392]
Exit stack: [V11, 0x120, V366, V384, 0x8fc, 0xa, V392]

================================

Block 0x588
[0x588:0x588]
---
Predecessors: [0x54a]
Successors: []
---
0x588 INVALID
---
0x588: INVALID 
---
Entry stack: [V11, 0x120, V366, V384, 0x8fc, 0xa, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V366, V384, 0x8fc, 0xa, V392]

================================

Block 0x589
[0x589:0x5aa]
---
Predecessors: [0x54a]
Successors: [0x5ab, 0x5af]
---
0x589 JUMPDEST
0x58a DIV
0x58b SWAP1
0x58c DUP2
0x58d ISZERO
0x58e MUL
0x58f SWAP1
0x590 PUSH1 0x40
0x592 MLOAD
0x593 PUSH1 0x0
0x595 PUSH1 0x40
0x597 MLOAD
0x598 DUP1
0x599 DUP4
0x59a SUB
0x59b DUP2
0x59c DUP6
0x59d DUP9
0x59e DUP9
0x59f CALL
0x5a0 SWAP4
0x5a1 POP
0x5a2 POP
0x5a3 POP
0x5a4 POP
0x5a5 ISZERO
0x5a6 ISZERO
0x5a7 PUSH2 0x5af
0x5aa JUMPI
---
0x589: JUMPDEST 
0x58a: V396 = DIV V392 0xa
0x58d: V397 = ISZERO V396
0x58e: V398 = MUL V397 0x8fc
0x590: V399 = 0x40
0x592: V400 = M[0x40]
0x593: V401 = 0x0
0x595: V402 = 0x40
0x597: V403 = M[0x40]
0x59a: V404 = SUB V400 V403
0x59f: V405 = CALL V398 V384 V396 V403 V404 V403 0x0
0x5a5: V406 = ISZERO V405
0x5a6: V407 = ISZERO V406
0x5a7: V408 = 0x5af
0x5aa: JUMPI 0x5af V407
---
Entry stack: [V11, 0x120, V366, V384, 0x8fc, 0xa, V392]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x120, V366]

================================

Block 0x5ab
[0x5ab:0x5ae]
---
Predecessors: [0x589]
Successors: []
---
0x5ab PUSH1 0x0
0x5ad DUP1
0x5ae REVERT
---
0x5ab: V409 = 0x0
0x5ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x120, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V366]

================================

Block 0x5af
[0x5af:0x622]
---
Predecessors: [0x589]
Successors: [0x623, 0x627]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x0
0x5b2 DUP1
0x5b3 SWAP1
0x5b4 SLOAD
0x5b5 SWAP1
0x5b6 PUSH2 0x100
0x5b9 EXP
0x5ba SWAP1
0x5bb DIV
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e7 AND
0x5e8 PUSH2 0x8fc
0x5eb ADDRESS
0x5ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x601 AND
0x602 BALANCE
0x603 SWAP1
0x604 DUP2
0x605 ISZERO
0x606 MUL
0x607 SWAP1
0x608 PUSH1 0x40
0x60a MLOAD
0x60b PUSH1 0x0
0x60d PUSH1 0x40
0x60f MLOAD
0x610 DUP1
0x611 DUP4
0x612 SUB
0x613 DUP2
0x614 DUP6
0x615 DUP9
0x616 DUP9
0x617 CALL
0x618 SWAP4
0x619 POP
0x61a POP
0x61b POP
0x61c POP
0x61d ISZERO
0x61e ISZERO
0x61f PUSH2 0x627
0x622 JUMPI
---
0x5af: JUMPDEST 
0x5b0: V410 = 0x0
0x5b4: V411 = S[0x0]
0x5b6: V412 = 0x100
0x5b9: V413 = EXP 0x100 0x0
0x5bb: V414 = DIV V411 0x1
0x5bc: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x5d2: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x5e8: V419 = 0x8fc
0x5eb: V420 = ADDRESS
0x5ec: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x601: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x602: V423 = BALANCE V422
0x605: V424 = ISZERO V423
0x606: V425 = MUL V424 0x8fc
0x608: V426 = 0x40
0x60a: V427 = M[0x40]
0x60b: V428 = 0x0
0x60d: V429 = 0x40
0x60f: V430 = M[0x40]
0x612: V431 = SUB V427 V430
0x617: V432 = CALL V425 V418 V423 V430 V431 V430 0x0
0x61d: V433 = ISZERO V432
0x61e: V434 = ISZERO V433
0x61f: V435 = 0x627
0x622: JUMPI 0x627 V434
---
Entry stack: [V11, 0x120, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V366]

================================

Block 0x623
[0x623:0x626]
---
Predecessors: [0x5af]
Successors: []
---
0x623 PUSH1 0x0
0x625 DUP1
0x626 REVERT
---
0x623: V436 = 0x0
0x626: REVERT 0x0 0x0
---
Entry stack: [V11, 0x120, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V366]

================================

Block 0x627
[0x627:0x627]
---
Predecessors: [0x5af]
Successors: [0x628]
---
0x627 JUMPDEST
---
0x627: JUMPDEST 
---
Entry stack: [V11, 0x120, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V366]

================================

Block 0x628
[0x628:0x6c8]
---
Predecessors: [0x4d6, 0x627]
Successors: [0x120]
---
0x628 JUMPDEST
0x629 PUSH1 0x10
0x62b PUSH1 0x3
0x62d PUSH1 0x0
0x62f CALLER
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65b AND
0x65c DUP2
0x65d MSTORE
0x65e PUSH1 0x20
0x660 ADD
0x661 SWAP1
0x662 DUP2
0x663 MSTORE
0x664 PUSH1 0x20
0x666 ADD
0x667 PUSH1 0x0
0x669 SHA3
0x66a PUSH1 0x0
0x66c PUSH2 0x100
0x66f EXP
0x670 DUP2
0x671 SLOAD
0x672 DUP2
0x673 PUSH1 0xff
0x675 MUL
0x676 NOT
0x677 AND
0x678 SWAP1
0x679 DUP4
0x67a PUSH1 0xff
0x67c AND
0x67d MUL
0x67e OR
0x67f SWAP1
0x680 SSTORE
0x681 POP
0x682 PUSH1 0x1
0x684 PUSH1 0x4
0x686 PUSH1 0x0
0x688 CALLER
0x689 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69e AND
0x69f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b4 AND
0x6b5 DUP2
0x6b6 MSTORE
0x6b7 PUSH1 0x20
0x6b9 ADD
0x6ba SWAP1
0x6bb DUP2
0x6bc MSTORE
0x6bd PUSH1 0x20
0x6bf ADD
0x6c0 PUSH1 0x0
0x6c2 SHA3
0x6c3 DUP2
0x6c4 SWAP1
0x6c5 SSTORE
0x6c6 POP
0x6c7 POP
0x6c8 JUMP
---
0x628: JUMPDEST 
0x629: V437 = 0x10
0x62b: V438 = 0x3
0x62d: V439 = 0x0
0x62f: V440 = CALLER
0x630: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x646: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x65b: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x65d: M[0x0] = V444
0x65e: V445 = 0x20
0x660: V446 = ADD 0x20 0x0
0x663: M[0x20] = 0x3
0x664: V447 = 0x20
0x666: V448 = ADD 0x20 0x20
0x667: V449 = 0x0
0x669: V450 = SHA3 0x0 0x40
0x66a: V451 = 0x0
0x66c: V452 = 0x100
0x66f: V453 = EXP 0x100 0x0
0x671: V454 = S[V450]
0x673: V455 = 0xff
0x675: V456 = MUL 0xff 0x1
0x676: V457 = NOT 0xff
0x677: V458 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V454
0x67a: V459 = 0xff
0x67c: V460 = AND 0xff 0x10
0x67d: V461 = MUL 0x10 0x1
0x67e: V462 = OR 0x10 V458
0x680: S[V450] = V462
0x682: V463 = 0x1
0x684: V464 = 0x4
0x686: V465 = 0x0
0x688: V466 = CALLER
0x689: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x69e: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x69f: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b4: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x6b6: M[0x0] = V470
0x6b7: V471 = 0x20
0x6b9: V472 = ADD 0x20 0x0
0x6bc: M[0x20] = 0x4
0x6bd: V473 = 0x20
0x6bf: V474 = ADD 0x20 0x20
0x6c0: V475 = 0x0
0x6c2: V476 = SHA3 0x0 0x40
0x6c5: S[V476] = 0x1
0x6c8: JUMP 0x120
---
Entry stack: [V11, 0x120, V366]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6c9
[0x6c9:0x6f4]
---
Predecessors: []
Successors: []
---
0x6c9 STOP
0x6ca LOG1
0x6cb PUSH6 0x627a7a723058
0x6d2 SHA3
0x6d3 SAR
0x6d4 MISSING 0xc1
0x6d5 PUSH9 0x3db1b6077f057063f5
0x6df MISSING 0xc0
0x6e0 SELFDESTRUCT
0x6e1 PUSH12 0x24e27161d15fb2fd781c2a27
0x6ee ADDRESS
0x6ef MISSING 0x49
0x6f0 MISSING 0xe6
0x6f1 MISSING 0xe0
0x6f2 PUSH2 0x29
---
0x6c9: STOP 
0x6ca: LOG S0 S1 S2
0x6cb: V477 = 0x627a7a723058
0x6d2: V478 = SHA3 0x627a7a723058 S3
0x6d3: V479 = SAR V478 S4
0x6d4: MISSING 0xc1
0x6d5: V480 = 0x3db1b6077f057063f5
0x6df: MISSING 0xc0
0x6e0: SELFDESTRUCT S0
0x6e1: V481 = 0x24e27161d15fb2fd781c2a27
0x6ee: V482 = ADDRESS
0x6ef: MISSING 0x49
0x6f0: MISSING 0xe6
0x6f1: MISSING 0xe0
0x6f2: V483 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V479, 0x3db1b6077f057063f5, V482, 0x24e27161d15fb2fd781c2a27, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x7d
Exit block: 0x90
Body: 0x7d, 0x84, 0x88, 0x90, 0x122

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xa6
Exit block: 0x225
Body: 0xa6, 0xad, 0xb1, 0xb9, 0x141, 0x158, 0x15c, 0x1b2, 0x225, 0x229, 0x244

Function 2:
Public function signature: 0x4e69d560
Entry block: 0xbb
Exit block: 0xce
Body: 0xbb, 0xc2, 0xc6, 0xce, 0x246

Function 3:
Public function signature: 0x52541b68
Entry block: 0xe8
Exit block: 0x101
Body: 0xe8, 0x101, 0x25c, 0x273, 0x277, 0x287, 0x28b

Function 4:
Public function signature: 0xb163cc38
Entry block: 0x103
Exit block: 0x10b
Body: 0x103, 0x10b, 0x32e, 0x345, 0x349

Function 5:
Public function signature: 0xc7591d35
Entry block: 0x10d
Exit block: 0x623
Body: 0x10d, 0x114, 0x118, 0x120, 0x34b, 0x363, 0x367, 0x3b0, 0x3b4, 0x494, 0x495, 0x4d5, 0x4d6, 0x54a, 0x588, 0x589, 0x5ab, 0x5af, 0x623, 0x627, 0x628

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

