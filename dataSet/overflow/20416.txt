Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x9f92a6a
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x9f92a6a
0x3c: V13 = EQ 0x9f92a6a V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x93]
---
0x41 DUP1
0x42 PUSH4 0x337c445d
0x47 EQ
0x48 PUSH2 0x93
0x4b JUMPI
---
0x42: V15 = 0x337c445d
0x47: V16 = EQ 0x337c445d V11
0x48: V17 = 0x93
0x4b: JUMPI 0x93 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x7c]
---
Predecessors: [0x51]
Successors: [0xb6]
---
0x5c JUMPDEST
0x5d PUSH2 0x7d
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x20
0x68 ADD
0x69 SWAP1
0x6a DUP3
0x6b ADD
0x6c DUP1
0x6d CALLDATALOAD
0x6e SWAP1
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP2
0x73 SWAP1
0x74 SWAP2
0x75 SWAP3
0x76 SWAP1
0x77 POP
0x78 POP
0x79 PUSH2 0xb6
0x7c JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x7d
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x66: V26 = 0x20
0x68: V27 = ADD 0x20 0x4
0x6b: V28 = ADD 0x4 V25
0x6d: V29 = CALLDATALOAD V28
0x6f: V30 = 0x20
0x71: V31 = ADD 0x20 V28
0x79: V32 = 0xb6
0x7c: JUMP 0xb6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7d, V31, V29]
Exit stack: [V11, 0x7d, V31, V29]

================================

Block 0x7d
[0x7d:0x92]
---
Predecessors: [0xb6]
Successors: []
---
0x7d JUMPDEST
0x7e PUSH1 0x40
0x80 MLOAD
0x81 DUP1
0x82 DUP3
0x83 DUP2
0x84 MSTORE
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP2
0x89 POP
0x8a POP
0x8b PUSH1 0x40
0x8d MLOAD
0x8e DUP1
0x8f SWAP2
0x90 SUB
0x91 SWAP1
0x92 RETURN
---
0x7d: JUMPDEST 
0x7e: V33 = 0x40
0x80: V34 = M[0x40]
0x84: M[V34] = V61
0x85: V35 = 0x20
0x87: V36 = ADD 0x20 V34
0x8b: V37 = 0x40
0x8d: V38 = M[0x40]
0x90: V39 = SUB V36 V38
0x92: RETURN V38 V39
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0xb3]
---
Predecessors: [0x41]
Successors: [0xe6]
---
0x93 JUMPDEST
0x94 PUSH2 0xb4
0x97 PUSH1 0x4
0x99 DUP1
0x9a DUP1
0x9b CALLDATALOAD
0x9c SWAP1
0x9d PUSH1 0x20
0x9f ADD
0xa0 SWAP1
0xa1 DUP3
0xa2 ADD
0xa3 DUP1
0xa4 CALLDATALOAD
0xa5 SWAP1
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 SWAP2
0xaa SWAP1
0xab SWAP2
0xac SWAP3
0xad SWAP1
0xae POP
0xaf POP
0xb0 PUSH2 0xe6
0xb3 JUMP
---
0x93: JUMPDEST 
0x94: V40 = 0xb4
0x97: V41 = 0x4
0x9b: V42 = CALLDATALOAD 0x4
0x9d: V43 = 0x20
0x9f: V44 = ADD 0x20 0x4
0xa2: V45 = ADD 0x4 V42
0xa4: V46 = CALLDATALOAD V45
0xa6: V47 = 0x20
0xa8: V48 = ADD 0x20 V45
0xb0: V49 = 0xe6
0xb3: JUMP 0xe6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb4, V48, V46]
Exit stack: [V11, 0xb4, V48, V46]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0x191]
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0xe5]
---
Predecessors: [0x5c]
Successors: [0x7d]
---
0xb6 JUMPDEST
0xb7 PUSH1 0x0
0xb9 PUSH1 0x1
0xbb DUP4
0xbc DUP4
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 DUP4
0xc2 DUP4
0xc3 DUP1
0xc4 DUP3
0xc5 DUP5
0xc6 CALLDATACOPY
0xc7 DUP3
0xc8 ADD
0xc9 SWAP2
0xca POP
0xcb POP
0xcc SWAP3
0xcd POP
0xce POP
0xcf POP
0xd0 SWAP1
0xd1 DUP2
0xd2 MSTORE
0xd3 PUSH1 0x20
0xd5 ADD
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda SWAP2
0xdb SUB
0xdc SWAP1
0xdd SHA3
0xde SLOAD
0xdf SWAP1
0xe0 POP
0xe1 SWAP3
0xe2 SWAP2
0xe3 POP
0xe4 POP
0xe5 JUMP
---
0xb6: JUMPDEST 
0xb7: V50 = 0x0
0xb9: V51 = 0x1
0xbd: V52 = 0x40
0xbf: V53 = M[0x40]
0xc6: CALLDATACOPY V53 V31 V29
0xc8: V54 = ADD V53 V29
0xd2: M[V54] = 0x1
0xd3: V55 = 0x20
0xd5: V56 = ADD 0x20 V54
0xd6: V57 = 0x40
0xd8: V58 = M[0x40]
0xdb: V59 = SUB V56 V58
0xdd: V60 = SHA3 V58 V59
0xde: V61 = S[V60]
0xe5: JUMP 0x7d
---
Entry stack: [V11, 0x7d, V31, V29]
Stack pops: 3
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xe6
[0xe6:0x18c]
---
Predecessors: [0x93]
Successors: [0x18d, 0x191]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 PUSH1 0x1
0xea DUP4
0xeb DUP4
0xec PUSH1 0x40
0xee MLOAD
0xef DUP1
0xf0 DUP4
0xf1 DUP4
0xf2 DUP1
0xf3 DUP3
0xf4 DUP5
0xf5 CALLDATACOPY
0xf6 DUP3
0xf7 ADD
0xf8 SWAP2
0xf9 POP
0xfa POP
0xfb SWAP3
0xfc POP
0xfd POP
0xfe POP
0xff SWAP1
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 SWAP2
0x10a SUB
0x10b SWAP1
0x10c SHA3
0x10d PUSH1 0x0
0x10f DUP3
0x110 DUP3
0x111 SLOAD
0x112 ADD
0x113 SWAP3
0x114 POP
0x115 POP
0x116 DUP2
0x117 SWAP1
0x118 SSTORE
0x119 POP
0x11a PUSH1 0x0
0x11c DUP1
0x11d SWAP1
0x11e SLOAD
0x11f SWAP1
0x120 PUSH2 0x100
0x123 EXP
0x124 SWAP1
0x125 DIV
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 PUSH2 0x8fc
0x155 ADDRESS
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c BALANCE
0x16d SWAP1
0x16e DUP2
0x16f ISZERO
0x170 MUL
0x171 SWAP1
0x172 PUSH1 0x40
0x174 MLOAD
0x175 PUSH1 0x0
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b DUP4
0x17c SUB
0x17d DUP2
0x17e DUP6
0x17f DUP9
0x180 DUP9
0x181 CALL
0x182 SWAP4
0x183 POP
0x184 POP
0x185 POP
0x186 POP
0x187 ISZERO
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0xe6: JUMPDEST 
0xe7: V62 = CALLVALUE
0xe8: V63 = 0x1
0xec: V64 = 0x40
0xee: V65 = M[0x40]
0xf5: CALLDATACOPY V65 V48 V46
0xf7: V66 = ADD V65 V46
0x101: M[V66] = 0x1
0x102: V67 = 0x20
0x104: V68 = ADD 0x20 V66
0x105: V69 = 0x40
0x107: V70 = M[0x40]
0x10a: V71 = SUB V68 V70
0x10c: V72 = SHA3 V70 V71
0x10d: V73 = 0x0
0x111: V74 = S[V72]
0x112: V75 = ADD V74 V62
0x118: S[V72] = V75
0x11a: V76 = 0x0
0x11e: V77 = S[0x0]
0x120: V78 = 0x100
0x123: V79 = EXP 0x100 0x0
0x125: V80 = DIV V77 0x1
0x126: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x13c: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x152: V85 = 0x8fc
0x155: V86 = ADDRESS
0x156: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x16c: V89 = BALANCE V88
0x16f: V90 = ISZERO V89
0x170: V91 = MUL V90 0x8fc
0x172: V92 = 0x40
0x174: V93 = M[0x40]
0x175: V94 = 0x0
0x177: V95 = 0x40
0x179: V96 = M[0x40]
0x17c: V97 = SUB V93 V96
0x181: V98 = CALL V91 V84 V89 V96 V97 V96 0x0
0x187: V99 = ISZERO V98
0x188: V100 = ISZERO V99
0x189: V101 = 0x191
0x18c: JUMPI 0x191 V100
---
Entry stack: [V11, 0xb4, V48, V46]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb4, V48, V46]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0xe6]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V102 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb4, V48, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb4, V48, V46]

================================

Block 0x191
[0x191:0x212]
---
Predecessors: [0xe6]
Successors: [0xb4]
---
0x191 JUMPDEST
0x192 PUSH32 0x4ed57fa1b9006b3655d91b922739ec74eaca6ce26e16a77900106c7a028d48d4
0x1b3 DUP3
0x1b4 DUP3
0x1b5 PUSH1 0x1
0x1b7 DUP6
0x1b8 DUP6
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc DUP1
0x1bd DUP4
0x1be DUP4
0x1bf DUP1
0x1c0 DUP3
0x1c1 DUP5
0x1c2 CALLDATACOPY
0x1c3 DUP3
0x1c4 ADD
0x1c5 SWAP2
0x1c6 POP
0x1c7 POP
0x1c8 SWAP3
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc SWAP1
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 SWAP2
0x1d7 SUB
0x1d8 SWAP1
0x1d9 SHA3
0x1da SLOAD
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de DUP1
0x1df DUP1
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 DUP4
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 DUP3
0x1ea DUP2
0x1eb SUB
0x1ec DUP3
0x1ed MSTORE
0x1ee DUP6
0x1ef DUP6
0x1f0 DUP3
0x1f1 DUP2
0x1f2 DUP2
0x1f3 MSTORE
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 SWAP3
0x1f8 POP
0x1f9 DUP1
0x1fa DUP3
0x1fb DUP5
0x1fc CALLDATACOPY
0x1fd DUP3
0x1fe ADD
0x1ff SWAP2
0x200 POP
0x201 POP
0x202 SWAP5
0x203 POP
0x204 POP
0x205 POP
0x206 POP
0x207 POP
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f LOG1
0x210 POP
0x211 POP
0x212 JUMP
---
0x191: JUMPDEST 
0x192: V103 = 0x4ed57fa1b9006b3655d91b922739ec74eaca6ce26e16a77900106c7a028d48d4
0x1b5: V104 = 0x1
0x1b9: V105 = 0x40
0x1bb: V106 = M[0x40]
0x1c2: CALLDATACOPY V106 V48 V46
0x1c4: V107 = ADD V106 V46
0x1ce: M[V107] = 0x1
0x1cf: V108 = 0x20
0x1d1: V109 = ADD 0x20 V107
0x1d2: V110 = 0x40
0x1d4: V111 = M[0x40]
0x1d7: V112 = SUB V109 V111
0x1d9: V113 = SHA3 V111 V112
0x1da: V114 = S[V113]
0x1db: V115 = 0x40
0x1dd: V116 = M[0x40]
0x1e0: V117 = 0x20
0x1e2: V118 = ADD 0x20 V116
0x1e5: M[V118] = V114
0x1e6: V119 = 0x20
0x1e8: V120 = ADD 0x20 V118
0x1eb: V121 = SUB V120 V116
0x1ed: M[V116] = V121
0x1f3: M[V120] = V46
0x1f4: V122 = 0x20
0x1f6: V123 = ADD 0x20 V120
0x1fc: CALLDATACOPY V123 V48 V46
0x1fe: V124 = ADD V123 V46
0x208: V125 = 0x40
0x20a: V126 = M[0x40]
0x20d: V127 = SUB V124 V126
0x20f: LOG V126 V127 0x4ed57fa1b9006b3655d91b922739ec74eaca6ce26e16a77900106c7a028d48d4
0x212: JUMP 0xb4
---
Entry stack: [V11, 0xb4, V48, V46]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x213
[0x213:0x23e]
---
Predecessors: []
Successors: []
---
0x213 STOP
0x214 LOG1
0x215 PUSH6 0x627a7a723058
0x21c SHA3
0x21d MISSING 0xe4
0x21e SELFDESTRUCT
0x21f MISSING 0xf7
0x220 DUP8
0x221 MISSING 0xa6
0x222 PUSH27 0xc5ee95cd7982d4dcd06dd8fed5fb0ed89573b77e8057accd5f8d00
0x23e MISSING 0x29
---
0x213: STOP 
0x214: LOG S0 S1 S2
0x215: V128 = 0x627a7a723058
0x21c: V129 = SHA3 0x627a7a723058 S3
0x21d: MISSING 0xe4
0x21e: SELFDESTRUCT S0
0x21f: MISSING 0xf7
0x221: MISSING 0xa6
0x222: V130 = 0xc5ee95cd7982d4dcd06dd8fed5fb0ed89573b77e8057accd5f8d00
0x23e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V129, S7, S0, S1, S2, S3, S4, S5, S6, S7, 0xc5ee95cd7982d4dcd06dd8fed5fb0ed89573b77e8057accd5f8d00]
Exit stack: []

================================

Function 0:
Public function signature: 0x9f92a6a
Entry block: 0x51
Exit block: 0x7d
Body: 0x51, 0x58, 0x5c, 0x7d, 0xb6

Function 1:
Public function signature: 0x337c445d
Entry block: 0x93
Exit block: 0xb4
Body: 0x93, 0xb4, 0xe6, 0x18d, 0x191

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

