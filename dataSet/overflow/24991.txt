Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xf0]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6b091f9
0x3c EQ
0x3d PUSH2 0xf0
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6b091f9
0x3c: V13 = EQ 0x6b091f9 V11
0x3d: V14 = 0xf0
0x40: JUMPI 0xf0 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x132]
---
0x41 DUP1
0x42 PUSH4 0x4637d827
0x47 EQ
0x48 PUSH2 0x132
0x4b JUMPI
---
0x42: V15 = 0x4637d827
0x47: V16 = EQ 0x4637d827 V11
0x48: V17 = 0x132
0x4b: JUMPI 0x132 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x17f]
---
0x4c DUP1
0x4d PUSH4 0x4d4b1a88
0x52 EQ
0x53 PUSH2 0x17f
0x56 JUMPI
---
0x4d: V18 = 0x4d4b1a88
0x52: V19 = EQ 0x4d4b1a88 V11
0x53: V20 = 0x17f
0x56: JUMPI 0x17f V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1ad]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x1ad
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x1ad
0x61: JUMPI 0x1ad V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x202]
---
0x62 DUP1
0x63 PUSH4 0xc5292c67
0x68 EQ
0x69 PUSH2 0x202
0x6c JUMPI
---
0x63: V24 = 0xc5292c67
0x68: V25 = EQ 0xc5292c67 V11
0x69: V26 = 0x202
0x6c: JUMPI 0x202 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x22b]
---
0x6d DUP1
0x6e PUSH4 0xe4120220
0x73 EQ
0x74 PUSH2 0x22b
0x77 JUMPI
---
0x6e: V27 = 0xe4120220
0x73: V28 = EQ 0xe4120220 V11
0x74: V29 = 0x22b
0x77: JUMPI 0x22b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x278]
---
0x78 DUP1
0x79 PUSH4 0xf2fde38b
0x7e EQ
0x7f PUSH2 0x278
0x82 JUMPI
---
0x79: V30 = 0xf2fde38b
0x7e: V31 = EQ 0xf2fde38b V11
0x7f: V32 = 0x278
0x82: JUMPI 0x278 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8c]
---
Predecessors: [0x0, 0x78]
Successors: [0x8d, 0xee]
---
0x83 JUMPDEST
0x84 PUSH1 0x0
0x86 CALLVALUE
0x87 GT
0x88 ISZERO
0x89 PUSH2 0xee
0x8c JUMPI
---
0x83: JUMPDEST 
0x84: V33 = 0x0
0x86: V34 = CALLVALUE
0x87: V35 = GT V34 0x0
0x88: V36 = ISZERO V35
0x89: V37 = 0xee
0x8c: JUMPI 0xee V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0xe8]
---
Predecessors: [0x83]
Successors: [0xe9, 0xed]
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 SWAP1
0x91 SLOAD
0x92 SWAP1
0x93 PUSH2 0x100
0x96 EXP
0x97 SWAP1
0x98 DIV
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 PUSH2 0x8fc
0xc8 CALLVALUE
0xc9 SWAP1
0xca DUP2
0xcb ISZERO
0xcc MUL
0xcd SWAP1
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 PUSH1 0x0
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 DUP4
0xd8 SUB
0xd9 DUP2
0xda DUP6
0xdb DUP9
0xdc DUP9
0xdd CALL
0xde SWAP4
0xdf POP
0xe0 POP
0xe1 POP
0xe2 POP
0xe3 ISZERO
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0x8d: V38 = 0x0
0x91: V39 = S[0x0]
0x93: V40 = 0x100
0x96: V41 = EXP 0x100 0x0
0x98: V42 = DIV V39 0x1
0x99: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xaf: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xc5: V47 = 0x8fc
0xc8: V48 = CALLVALUE
0xcb: V49 = ISZERO V48
0xcc: V50 = MUL V49 0x8fc
0xce: V51 = 0x40
0xd0: V52 = M[0x40]
0xd1: V53 = 0x0
0xd3: V54 = 0x40
0xd5: V55 = M[0x40]
0xd8: V56 = SUB V52 V55
0xdd: V57 = CALL V50 V46 V48 V55 V56 V55 0x0
0xe3: V58 = ISZERO V57
0xe4: V59 = ISZERO V58
0xe5: V60 = 0xed
0xe8: JUMPI 0xed V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0x8d]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V61 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xed
[0xed:0xed]
---
Predecessors: [0x8d]
Successors: [0xee]
---
0xed JUMPDEST
---
0xed: JUMPDEST 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xee
[0xee:0xef]
---
Predecessors: [0x83, 0xed]
Successors: []
---
0xee JUMPDEST
0xef STOP
---
0xee: JUMPDEST 
0xef: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xf6]
---
Predecessors: [0xd]
Successors: [0xf7, 0xfb]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xf0: JUMPDEST 
0xf1: V62 = CALLVALUE
0xf2: V63 = ISZERO V62
0xf3: V64 = 0xfb
0xf6: JUMPI 0xfb V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xf0]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V65 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x12f]
---
Predecessors: [0xf0]
Successors: [0x2b1]
---
0xfb JUMPDEST
0xfc PUSH2 0x130
0xff PUSH1 0x4
0x101 DUP1
0x102 DUP1
0x103 CALLDATALOAD
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a SWAP1
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f SWAP2
0x120 SWAP1
0x121 DUP1
0x122 CALLDATALOAD
0x123 SWAP1
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 SWAP2
0x129 SWAP1
0x12a POP
0x12b POP
0x12c PUSH2 0x2b1
0x12f JUMP
---
0xfb: JUMPDEST 
0xfc: V66 = 0x130
0xff: V67 = 0x4
0x103: V68 = CALLDATALOAD 0x4
0x104: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x11b: V71 = 0x20
0x11d: V72 = ADD 0x20 0x4
0x122: V73 = CALLDATALOAD 0x24
0x124: V74 = 0x20
0x126: V75 = ADD 0x20 0x24
0x12c: V76 = 0x2b1
0x12f: JUMP 0x2b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x130, V70, V73]
Exit stack: [V11, 0x130, V70, V73]

================================

Block 0x130
[0x130:0x131]
---
Predecessors: [0x58f]
Successors: []
---
0x130 JUMPDEST
0x131 STOP
---
0x130: JUMPDEST 
0x131: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x132
[0x132:0x138]
---
Predecessors: [0x41]
Successors: [0x139, 0x13d]
---
0x132 JUMPDEST
0x133 CALLVALUE
0x134 ISZERO
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x132: JUMPDEST 
0x133: V77 = CALLVALUE
0x134: V78 = ISZERO V77
0x135: V79 = 0x13d
0x138: JUMPI 0x13d V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x132]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V80 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13d
[0x13d:0x168]
---
Predecessors: [0x132]
Successors: [0x59e]
---
0x13d JUMPDEST
0x13e PUSH2 0x169
0x141 PUSH1 0x4
0x143 DUP1
0x144 DUP1
0x145 CALLDATALOAD
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c SWAP1
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 SWAP2
0x162 SWAP1
0x163 POP
0x164 POP
0x165 PUSH2 0x59e
0x168 JUMP
---
0x13d: JUMPDEST 
0x13e: V81 = 0x169
0x141: V82 = 0x4
0x145: V83 = CALLDATALOAD 0x4
0x146: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x15d: V86 = 0x20
0x15f: V87 = ADD 0x20 0x4
0x165: V88 = 0x59e
0x168: JUMP 0x59e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x169, V85]
Exit stack: [V11, 0x169, V85]

================================

Block 0x169
[0x169:0x17e]
---
Predecessors: [0x59e]
Successors: []
---
0x169 JUMPDEST
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e DUP3
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP2
0x175 POP
0x176 POP
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e RETURN
---
0x169: JUMPDEST 
0x16a: V89 = 0x40
0x16c: V90 = M[0x40]
0x170: M[V90] = V329
0x171: V91 = 0x20
0x173: V92 = ADD 0x20 V90
0x177: V93 = 0x40
0x179: V94 = M[0x40]
0x17c: V95 = SUB V92 V94
0x17e: RETURN V94 V95
---
Entry stack: [V11, 0x169, V329]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x169]

================================

Block 0x17f
[0x17f:0x1aa]
---
Predecessors: [0x4c]
Successors: [0x5b6]
---
0x17f JUMPDEST
0x180 PUSH2 0x1ab
0x183 PUSH1 0x4
0x185 DUP1
0x186 DUP1
0x187 CALLDATALOAD
0x188 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19d AND
0x19e SWAP1
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 SWAP1
0x1a3 SWAP2
0x1a4 SWAP1
0x1a5 POP
0x1a6 POP
0x1a7 PUSH2 0x5b6
0x1aa JUMP
---
0x17f: JUMPDEST 
0x180: V96 = 0x1ab
0x183: V97 = 0x4
0x187: V98 = CALLDATALOAD 0x4
0x188: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x19f: V101 = 0x20
0x1a1: V102 = ADD 0x20 0x4
0x1a7: V103 = 0x5b6
0x1aa: JUMP 0x5b6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ab, V100]
Exit stack: [V11, 0x1ab, V100]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: [0x7f5]
Successors: []
---
0x1ab JUMPDEST
0x1ac STOP
---
0x1ab: JUMPDEST 
0x1ac: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x57]
Successors: [0x1b4, 0x1b8]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V104 = CALLVALUE
0x1af: V105 = ISZERO V104
0x1b0: V106 = 0x1b8
0x1b3: JUMPI 0x1b8 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V107 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b8
[0x1b8:0x1bf]
---
Predecessors: [0x1ad]
Successors: [0x7f8]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x1c0
0x1bc PUSH2 0x7f8
0x1bf JUMP
---
0x1b8: JUMPDEST 
0x1b9: V108 = 0x1c0
0x1bc: V109 = 0x7f8
0x1bf: JUMP 0x7f8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V11, 0x1c0]

================================

Block 0x1c0
[0x1c0:0x201]
---
Predecessors: [0x7f8]
Successors: []
---
0x1c0 JUMPDEST
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 DUP3
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 DUP2
0x1f3 MSTORE
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 SWAP2
0x1f8 POP
0x1f9 POP
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd DUP1
0x1fe SWAP2
0x1ff SUB
0x200 SWAP1
0x201 RETURN
---
0x1c0: JUMPDEST 
0x1c1: V110 = 0x40
0x1c3: V111 = M[0x40]
0x1c6: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x1dc: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1f3: M[V111] = V115
0x1f4: V116 = 0x20
0x1f6: V117 = ADD 0x20 V111
0x1fa: V118 = 0x40
0x1fc: V119 = M[0x40]
0x1ff: V120 = SUB V117 V119
0x201: RETURN V119 V120
---
Entry stack: [V11, 0x1c0, V457]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1c0]

================================

Block 0x202
[0x202:0x208]
---
Predecessors: [0x62]
Successors: [0x209, 0x20d]
---
0x202 JUMPDEST
0x203 CALLVALUE
0x204 ISZERO
0x205 PUSH2 0x20d
0x208 JUMPI
---
0x202: JUMPDEST 
0x203: V121 = CALLVALUE
0x204: V122 = ISZERO V121
0x205: V123 = 0x20d
0x208: JUMPI 0x20d V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x209
[0x209:0x20c]
---
Predecessors: [0x202]
Successors: []
---
0x209 PUSH1 0x0
0x20b DUP1
0x20c REVERT
---
0x209: V124 = 0x0
0x20c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20d
[0x20d:0x214]
---
Predecessors: [0x202]
Successors: [0x81d]
---
0x20d JUMPDEST
0x20e PUSH2 0x215
0x211 PUSH2 0x81d
0x214 JUMP
---
0x20d: JUMPDEST 
0x20e: V125 = 0x215
0x211: V126 = 0x81d
0x214: JUMP 0x81d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x215]
Exit stack: [V11, 0x215]

================================

Block 0x215
[0x215:0x22a]
---
Predecessors: [0x81d]
Successors: []
---
0x215 JUMPDEST
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a DUP3
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x20
0x21f ADD
0x220 SWAP2
0x221 POP
0x222 POP
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a RETURN
---
0x215: JUMPDEST 
0x216: V127 = 0x40
0x218: V128 = M[0x40]
0x21c: M[V128] = V460
0x21d: V129 = 0x20
0x21f: V130 = ADD 0x20 V128
0x223: V131 = 0x40
0x225: V132 = M[0x40]
0x228: V133 = SUB V130 V132
0x22a: RETURN V132 V133
---
Entry stack: [V11, V460]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x6d]
Successors: [0x232, 0x236]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22b: JUMPDEST 
0x22c: V134 = CALLVALUE
0x22d: V135 = ISZERO V134
0x22e: V136 = 0x236
0x231: JUMPI 0x236 V135
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22b]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V137 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x236
[0x236:0x261]
---
Predecessors: [0x22b]
Successors: [0x827]
---
0x236 JUMPDEST
0x237 PUSH2 0x262
0x23a PUSH1 0x4
0x23c DUP1
0x23d DUP1
0x23e CALLDATALOAD
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 SWAP1
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP1
0x25a SWAP2
0x25b SWAP1
0x25c POP
0x25d POP
0x25e PUSH2 0x827
0x261 JUMP
---
0x236: JUMPDEST 
0x237: V138 = 0x262
0x23a: V139 = 0x4
0x23e: V140 = CALLDATALOAD 0x4
0x23f: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x256: V143 = 0x20
0x258: V144 = ADD 0x20 0x4
0x25e: V145 = 0x827
0x261: JUMP 0x827
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x262, V142]
Exit stack: [V11, 0x262, V142]

================================

Block 0x262
[0x262:0x277]
---
Predecessors: [0x827]
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 DUP3
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d SWAP2
0x26e POP
0x26f POP
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 SWAP2
0x275 SUB
0x276 SWAP1
0x277 RETURN
---
0x262: JUMPDEST 
0x263: V146 = 0x40
0x265: V147 = M[0x40]
0x269: M[V147] = V474
0x26a: V148 = 0x20
0x26c: V149 = ADD 0x20 V147
0x270: V150 = 0x40
0x272: V151 = M[0x40]
0x275: V152 = SUB V149 V151
0x277: RETURN V151 V152
---
Entry stack: [V11, V474]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0x78]
Successors: [0x27f, 0x283]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V153 = CALLVALUE
0x27a: V154 = ISZERO V153
0x27b: V155 = 0x283
0x27e: JUMPI 0x283 V154
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x278]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V156 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x283
[0x283:0x2ae]
---
Predecessors: [0x278]
Successors: [0x870]
---
0x283 JUMPDEST
0x284 PUSH2 0x2af
0x287 PUSH1 0x4
0x289 DUP1
0x28a DUP1
0x28b CALLDATALOAD
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 AND
0x2a2 SWAP1
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP1
0x2a7 SWAP2
0x2a8 SWAP1
0x2a9 POP
0x2aa POP
0x2ab PUSH2 0x870
0x2ae JUMP
---
0x283: JUMPDEST 
0x284: V157 = 0x2af
0x287: V158 = 0x4
0x28b: V159 = CALLDATALOAD 0x4
0x28c: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2a3: V162 = 0x20
0x2a5: V163 = ADD 0x20 0x4
0x2ab: V164 = 0x870
0x2ae: JUMP 0x870
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2af, V161]
Exit stack: [V11, 0x2af, V161]

================================

Block 0x2af
[0x2af:0x2b0]
---
Predecessors: [0x8cb]
Successors: []
---
0x2af JUMPDEST
0x2b0 STOP
---
0x2af: JUMPDEST 
0x2b0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b1
[0x2b1:0x307]
---
Predecessors: [0xfb]
Successors: [0x308, 0x30c]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 SWAP1
0x2b6 SLOAD
0x2b7 SWAP1
0x2b8 PUSH2 0x100
0x2bb EXP
0x2bc SWAP1
0x2bd DIV
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 AND
0x2ea CALLER
0x2eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x300 AND
0x301 EQ
0x302 ISZERO
0x303 ISZERO
0x304 PUSH2 0x30c
0x307 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V165 = 0x0
0x2b6: V166 = S[0x0]
0x2b8: V167 = 0x100
0x2bb: V168 = EXP 0x100 0x0
0x2bd: V169 = DIV V166 0x1
0x2be: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2d4: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x2ea: V174 = CALLER
0x2eb: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x300: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x301: V177 = EQ V176 V173
0x302: V178 = ISZERO V177
0x303: V179 = ISZERO V178
0x304: V180 = 0x30c
0x307: JUMPI 0x30c V179
---
Entry stack: [V11, 0x130, V70, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130, V70, V73]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x2b1]
Successors: []
---
0x308 PUSH1 0x0
0x30a DUP1
0x30b REVERT
---
0x308: V181 = 0x0
0x30b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x130, V70, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130, V70, V73]

================================

Block 0x30c
[0x30c:0x315]
---
Predecessors: [0x2b1]
Successors: [0x316, 0x3d7]
---
0x30c JUMPDEST
0x30d PUSH1 0x0
0x30f DUP2
0x310 EQ
0x311 DUP1
0x312 PUSH2 0x3d7
0x315 JUMPI
---
0x30c: JUMPDEST 
0x30d: V182 = 0x0
0x310: V183 = EQ V73 0x0
0x312: V184 = 0x3d7
0x315: JUMPI 0x3d7 V183
---
Entry stack: [V11, 0x130, V70, V73]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V11, 0x130, V70, V73, V183]

================================

Block 0x316
[0x316:0x3b5]
---
Predecessors: [0x30c]
Successors: [0x3b6, 0x3ba]
---
0x316 POP
0x317 DUP1
0x318 DUP3
0x319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32e AND
0x32f PUSH4 0x70a08231
0x334 ADDRESS
0x335 PUSH1 0x0
0x337 PUSH1 0x40
0x339 MLOAD
0x33a PUSH1 0x20
0x33c ADD
0x33d MSTORE
0x33e PUSH1 0x40
0x340 MLOAD
0x341 DUP3
0x342 PUSH4 0xffffffff
0x347 AND
0x348 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x366 MUL
0x367 DUP2
0x368 MSTORE
0x369 PUSH1 0x4
0x36b ADD
0x36c DUP1
0x36d DUP3
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a DUP2
0x39b MSTORE
0x39c PUSH1 0x20
0x39e ADD
0x39f SWAP2
0x3a0 POP
0x3a1 POP
0x3a2 PUSH1 0x20
0x3a4 PUSH1 0x40
0x3a6 MLOAD
0x3a7 DUP1
0x3a8 DUP4
0x3a9 SUB
0x3aa DUP2
0x3ab PUSH1 0x0
0x3ad DUP8
0x3ae DUP1
0x3af EXTCODESIZE
0x3b0 ISZERO
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x319: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x32f: V187 = 0x70a08231
0x334: V188 = ADDRESS
0x335: V189 = 0x0
0x337: V190 = 0x40
0x339: V191 = M[0x40]
0x33a: V192 = 0x20
0x33c: V193 = ADD 0x20 V191
0x33d: M[V193] = 0x0
0x33e: V194 = 0x40
0x340: V195 = M[0x40]
0x342: V196 = 0xffffffff
0x347: V197 = AND 0xffffffff 0x70a08231
0x348: V198 = 0x100000000000000000000000000000000000000000000000000000000
0x366: V199 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x368: M[V195] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x369: V200 = 0x4
0x36b: V201 = ADD 0x4 V195
0x36e: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x384: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x39b: M[V201] = V205
0x39c: V206 = 0x20
0x39e: V207 = ADD 0x20 V201
0x3a2: V208 = 0x20
0x3a4: V209 = 0x40
0x3a6: V210 = M[0x40]
0x3a9: V211 = SUB V207 V210
0x3ab: V212 = 0x0
0x3af: V213 = EXTCODESIZE V186
0x3b0: V214 = ISZERO V213
0x3b1: V215 = ISZERO V214
0x3b2: V216 = 0x3ba
0x3b5: JUMPI 0x3ba V215
---
Entry stack: [V11, 0x130, V70, V73, V183]
Stack pops: 3
Stack additions: [S2, S1, S1, V186, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V186]
Exit stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V186]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x316]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V217 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V186]

================================

Block 0x3ba
[0x3ba:0x3c6]
---
Predecessors: [0x316]
Successors: [0x3c7, 0x3cb]
---
0x3ba JUMPDEST
0x3bb PUSH2 0x2c6
0x3be GAS
0x3bf SUB
0x3c0 CALL
0x3c1 ISZERO
0x3c2 ISZERO
0x3c3 PUSH2 0x3cb
0x3c6 JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V218 = 0x2c6
0x3be: V219 = GAS
0x3bf: V220 = SUB V219 0x2c6
0x3c0: V221 = CALL V220 V186 0x0 V210 V211 V210 0x20
0x3c1: V222 = ISZERO V221
0x3c2: V223 = ISZERO V222
0x3c3: V224 = 0x3cb
0x3c6: JUMPI 0x3cb V223
---
Entry stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V186]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207]

================================

Block 0x3c7
[0x3c7:0x3ca]
---
Predecessors: [0x3ba]
Successors: []
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
---
0x3c7: V225 = 0x0
0x3ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207]

================================

Block 0x3cb
[0x3cb:0x3d6]
---
Predecessors: [0x3ba]
Successors: [0x3d7]
---
0x3cb JUMPDEST
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 DUP1
0x3d3 MLOAD
0x3d4 SWAP1
0x3d5 POP
0x3d6 LT
---
0x3cb: JUMPDEST 
0x3cf: V226 = 0x40
0x3d1: V227 = M[0x40]
0x3d3: V228 = M[V227]
0x3d6: V229 = LT V228 V73
---
Entry stack: [V11, 0x130, V70, V73, V73, V186, 0x70a08231, V207]
Stack pops: 4
Stack additions: [V229]
Exit stack: [V11, 0x130, V70, V73, V229]

================================

Block 0x3d7
[0x3d7:0x3dc]
---
Predecessors: [0x30c, 0x3cb]
Successors: [0x3dd, 0x3e1]
---
0x3d7 JUMPDEST
0x3d8 ISZERO
0x3d9 PUSH2 0x3e1
0x3dc JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V230 = ISZERO S0
0x3d9: V231 = 0x3e1
0x3dc: JUMPI 0x3e1 V230
---
Entry stack: [V11, 0x130, V70, V73, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x130, V70, V73]

================================

Block 0x3dd
[0x3dd:0x3e0]
---
Predecessors: [0x3d7]
Successors: []
---
0x3dd PUSH1 0x0
0x3df DUP1
0x3e0 REVERT
---
0x3dd: V232 = 0x0
0x3e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x130, V70, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130, V70, V73]

================================

Block 0x3e1
[0x3e1:0x579]
---
Predecessors: [0x3d7]
Successors: [0x57a, 0x57e]
---
0x3e1 JUMPDEST
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0x2
0x3e6 PUSH1 0x0
0x3e8 DUP5
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x414 AND
0x415 DUP2
0x416 MSTORE
0x417 PUSH1 0x20
0x419 ADD
0x41a SWAP1
0x41b DUP2
0x41c MSTORE
0x41d PUSH1 0x20
0x41f ADD
0x420 PUSH1 0x0
0x422 SHA3
0x423 PUSH1 0x0
0x425 DUP3
0x426 DUP3
0x427 SLOAD
0x428 ADD
0x429 SWAP3
0x42a POP
0x42b POP
0x42c DUP2
0x42d SWAP1
0x42e SSTORE
0x42f POP
0x430 PUSH1 0x2
0x432 PUSH1 0x0
0x434 DUP4
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 DUP2
0x462 MSTORE
0x463 PUSH1 0x20
0x465 ADD
0x466 SWAP1
0x467 DUP2
0x468 MSTORE
0x469 PUSH1 0x20
0x46b ADD
0x46c PUSH1 0x0
0x46e SHA3
0x46f SLOAD
0x470 DUP3
0x471 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x486 AND
0x487 PUSH32 0xd1279ea816fe5d2927b75d801ea3cf9c18768d4ea697c64889a75e4b0c0bc64c
0x4a8 PUSH1 0x40
0x4aa MLOAD
0x4ab PUSH1 0x40
0x4ad MLOAD
0x4ae DUP1
0x4af SWAP2
0x4b0 SUB
0x4b1 SWAP1
0x4b2 LOG3
0x4b3 DUP2
0x4b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c9 AND
0x4ca PUSH4 0xa9059cbb
0x4cf PUSH1 0x0
0x4d1 DUP1
0x4d2 SWAP1
0x4d3 SLOAD
0x4d4 SWAP1
0x4d5 PUSH2 0x100
0x4d8 EXP
0x4d9 SWAP1
0x4da DIV
0x4db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f0 AND
0x4f1 DUP4
0x4f2 PUSH1 0x0
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 PUSH1 0x20
0x4f9 ADD
0x4fa MSTORE
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe DUP4
0x4ff PUSH4 0xffffffff
0x504 AND
0x505 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x523 MUL
0x524 DUP2
0x525 MSTORE
0x526 PUSH1 0x4
0x528 ADD
0x529 DUP1
0x52a DUP4
0x52b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x540 AND
0x541 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x556 AND
0x557 DUP2
0x558 MSTORE
0x559 PUSH1 0x20
0x55b ADD
0x55c DUP3
0x55d DUP2
0x55e MSTORE
0x55f PUSH1 0x20
0x561 ADD
0x562 SWAP3
0x563 POP
0x564 POP
0x565 POP
0x566 PUSH1 0x20
0x568 PUSH1 0x40
0x56a MLOAD
0x56b DUP1
0x56c DUP4
0x56d SUB
0x56e DUP2
0x56f PUSH1 0x0
0x571 DUP8
0x572 DUP1
0x573 EXTCODESIZE
0x574 ISZERO
0x575 ISZERO
0x576 PUSH2 0x57e
0x579 JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V233 = 0x1
0x3e4: V234 = 0x2
0x3e6: V235 = 0x0
0x3e9: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x3ff: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x414: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x416: M[0x0] = V239
0x417: V240 = 0x20
0x419: V241 = ADD 0x20 0x0
0x41c: M[0x20] = 0x2
0x41d: V242 = 0x20
0x41f: V243 = ADD 0x20 0x20
0x420: V244 = 0x0
0x422: V245 = SHA3 0x0 0x40
0x423: V246 = 0x0
0x427: V247 = S[V245]
0x428: V248 = ADD V247 0x1
0x42e: S[V245] = V248
0x430: V249 = 0x2
0x432: V250 = 0x0
0x435: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x44b: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x462: M[0x0] = V254
0x463: V255 = 0x20
0x465: V256 = ADD 0x20 0x0
0x468: M[0x20] = 0x2
0x469: V257 = 0x20
0x46b: V258 = ADD 0x20 0x20
0x46c: V259 = 0x0
0x46e: V260 = SHA3 0x0 0x40
0x46f: V261 = S[V260]
0x471: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x486: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x487: V264 = 0xd1279ea816fe5d2927b75d801ea3cf9c18768d4ea697c64889a75e4b0c0bc64c
0x4a8: V265 = 0x40
0x4aa: V266 = M[0x40]
0x4ab: V267 = 0x40
0x4ad: V268 = M[0x40]
0x4b0: V269 = SUB V266 V268
0x4b2: LOG V268 V269 0xd1279ea816fe5d2927b75d801ea3cf9c18768d4ea697c64889a75e4b0c0bc64c V263 V261
0x4b4: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x4ca: V272 = 0xa9059cbb
0x4cf: V273 = 0x0
0x4d3: V274 = S[0x0]
0x4d5: V275 = 0x100
0x4d8: V276 = EXP 0x100 0x0
0x4da: V277 = DIV V274 0x1
0x4db: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x4f2: V280 = 0x0
0x4f4: V281 = 0x40
0x4f6: V282 = M[0x40]
0x4f7: V283 = 0x20
0x4f9: V284 = ADD 0x20 V282
0x4fa: M[V284] = 0x0
0x4fb: V285 = 0x40
0x4fd: V286 = M[0x40]
0x4ff: V287 = 0xffffffff
0x504: V288 = AND 0xffffffff 0xa9059cbb
0x505: V289 = 0x100000000000000000000000000000000000000000000000000000000
0x523: V290 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x525: M[V286] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x526: V291 = 0x4
0x528: V292 = ADD 0x4 V286
0x52b: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x540: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x541: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x556: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x558: M[V292] = V296
0x559: V297 = 0x20
0x55b: V298 = ADD 0x20 V292
0x55e: M[V298] = V73
0x55f: V299 = 0x20
0x561: V300 = ADD 0x20 V298
0x566: V301 = 0x20
0x568: V302 = 0x40
0x56a: V303 = M[0x40]
0x56d: V304 = SUB V300 V303
0x56f: V305 = 0x0
0x573: V306 = EXTCODESIZE V271
0x574: V307 = ISZERO V306
0x575: V308 = ISZERO V307
0x576: V309 = 0x57e
0x579: JUMPI 0x57e V308
---
Entry stack: [V11, 0x130, V70, V73]
Stack pops: 2
Stack additions: [S1, S0, V271, 0xa9059cbb, V300, 0x20, V303, V304, V303, 0x0, V271]
Exit stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300, 0x20, V303, V304, V303, 0x0, V271]

================================

Block 0x57a
[0x57a:0x57d]
---
Predecessors: [0x3e1]
Successors: []
---
0x57a PUSH1 0x0
0x57c DUP1
0x57d REVERT
---
0x57a: V310 = 0x0
0x57d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300, 0x20, V303, V304, V303, 0x0, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300, 0x20, V303, V304, V303, 0x0, V271]

================================

Block 0x57e
[0x57e:0x58a]
---
Predecessors: [0x3e1]
Successors: [0x58b, 0x58f]
---
0x57e JUMPDEST
0x57f PUSH2 0x2c6
0x582 GAS
0x583 SUB
0x584 CALL
0x585 ISZERO
0x586 ISZERO
0x587 PUSH2 0x58f
0x58a JUMPI
---
0x57e: JUMPDEST 
0x57f: V311 = 0x2c6
0x582: V312 = GAS
0x583: V313 = SUB V312 0x2c6
0x584: V314 = CALL V313 V271 0x0 V303 V304 V303 0x20
0x585: V315 = ISZERO V314
0x586: V316 = ISZERO V315
0x587: V317 = 0x58f
0x58a: JUMPI 0x58f V316
---
Entry stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300, 0x20, V303, V304, V303, 0x0, V271]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300]

================================

Block 0x58b
[0x58b:0x58e]
---
Predecessors: [0x57e]
Successors: []
---
0x58b PUSH1 0x0
0x58d DUP1
0x58e REVERT
---
0x58b: V318 = 0x0
0x58e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300]

================================

Block 0x58f
[0x58f:0x59d]
---
Predecessors: [0x57e]
Successors: [0x130]
---
0x58f JUMPDEST
0x590 POP
0x591 POP
0x592 POP
0x593 PUSH1 0x40
0x595 MLOAD
0x596 DUP1
0x597 MLOAD
0x598 SWAP1
0x599 POP
0x59a POP
0x59b POP
0x59c POP
0x59d JUMP
---
0x58f: JUMPDEST 
0x593: V319 = 0x40
0x595: V320 = M[0x40]
0x597: V321 = M[V320]
0x59d: JUMP 0x130
---
Entry stack: [V11, 0x130, V70, V73, V271, 0xa9059cbb, V300]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x59e
[0x59e:0x5b5]
---
Predecessors: [0x13d]
Successors: [0x169]
---
0x59e JUMPDEST
0x59f PUSH1 0x2
0x5a1 PUSH1 0x20
0x5a3 MSTORE
0x5a4 DUP1
0x5a5 PUSH1 0x0
0x5a7 MSTORE
0x5a8 PUSH1 0x40
0x5aa PUSH1 0x0
0x5ac SHA3
0x5ad PUSH1 0x0
0x5af SWAP2
0x5b0 POP
0x5b1 SWAP1
0x5b2 POP
0x5b3 SLOAD
0x5b4 DUP2
0x5b5 JUMP
---
0x59e: JUMPDEST 
0x59f: V322 = 0x2
0x5a1: V323 = 0x20
0x5a3: M[0x20] = 0x2
0x5a5: V324 = 0x0
0x5a7: M[0x0] = V85
0x5a8: V325 = 0x40
0x5aa: V326 = 0x0
0x5ac: V327 = SHA3 0x0 0x40
0x5ad: V328 = 0x0
0x5b3: V329 = S[V327]
0x5b5: JUMP 0x169
---
Entry stack: [V11, 0x169, V85]
Stack pops: 2
Stack additions: [S1, V329]
Exit stack: [V11, 0x169, V329]

================================

Block 0x5b6
[0x5b6:0x5bf]
---
Predecessors: [0x17f]
Successors: [0x5c0, 0x5f1]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x0
0x5b9 CALLVALUE
0x5ba EQ
0x5bb DUP1
0x5bc PUSH2 0x5f1
0x5bf JUMPI
---
0x5b6: JUMPDEST 
0x5b7: V330 = 0x0
0x5b9: V331 = CALLVALUE
0x5ba: V332 = EQ V331 0x0
0x5bc: V333 = 0x5f1
0x5bf: JUMPI 0x5f1 V332
---
Entry stack: [V11, 0x1ab, V100]
Stack pops: 0
Stack additions: [V332]
Exit stack: [V11, 0x1ab, V100, V332]

================================

Block 0x5c0
[0x5c0:0x5f0]
---
Predecessors: [0x5b6]
Successors: [0x5f1]
---
0x5c0 POP
0x5c1 PUSH1 0x0
0x5c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d8 AND
0x5d9 DUP2
0x5da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ef AND
0x5f0 EQ
---
0x5c1: V334 = 0x0
0x5c3: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5da: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x5f0: V339 = EQ V338 0x0
---
Entry stack: [V11, 0x1ab, V100, V332]
Stack pops: 2
Stack additions: [S1, V339]
Exit stack: [V11, 0x1ab, V100, V339]

================================

Block 0x5f1
[0x5f1:0x5f6]
---
Predecessors: [0x5b6, 0x5c0]
Successors: [0x5f7, 0x6b9]
---
0x5f1 JUMPDEST
0x5f2 DUP1
0x5f3 PUSH2 0x6b9
0x5f6 JUMPI
---
0x5f1: JUMPDEST 
0x5f3: V340 = 0x6b9
0x5f6: JUMPI 0x6b9 S0
---
Entry stack: [V11, 0x1ab, V100, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1ab, V100, S0]

================================

Block 0x5f7
[0x5f7:0x697]
---
Predecessors: [0x5f1]
Successors: [0x698, 0x69c]
---
0x5f7 POP
0x5f8 PUSH1 0x0
0x5fa DUP2
0x5fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x610 AND
0x611 PUSH4 0x70a08231
0x616 CALLER
0x617 PUSH1 0x0
0x619 PUSH1 0x40
0x61b MLOAD
0x61c PUSH1 0x20
0x61e ADD
0x61f MSTORE
0x620 PUSH1 0x40
0x622 MLOAD
0x623 DUP3
0x624 PUSH4 0xffffffff
0x629 AND
0x62a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x648 MUL
0x649 DUP2
0x64a MSTORE
0x64b PUSH1 0x4
0x64d ADD
0x64e DUP1
0x64f DUP3
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67b AND
0x67c DUP2
0x67d MSTORE
0x67e PUSH1 0x20
0x680 ADD
0x681 SWAP2
0x682 POP
0x683 POP
0x684 PUSH1 0x20
0x686 PUSH1 0x40
0x688 MLOAD
0x689 DUP1
0x68a DUP4
0x68b SUB
0x68c DUP2
0x68d PUSH1 0x0
0x68f DUP8
0x690 DUP1
0x691 EXTCODESIZE
0x692 ISZERO
0x693 ISZERO
0x694 PUSH2 0x69c
0x697 JUMPI
---
0x5f8: V341 = 0x0
0x5fb: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x610: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x611: V344 = 0x70a08231
0x616: V345 = CALLER
0x617: V346 = 0x0
0x619: V347 = 0x40
0x61b: V348 = M[0x40]
0x61c: V349 = 0x20
0x61e: V350 = ADD 0x20 V348
0x61f: M[V350] = 0x0
0x620: V351 = 0x40
0x622: V352 = M[0x40]
0x624: V353 = 0xffffffff
0x629: V354 = AND 0xffffffff 0x70a08231
0x62a: V355 = 0x100000000000000000000000000000000000000000000000000000000
0x648: V356 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x64a: M[V352] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x64b: V357 = 0x4
0x64d: V358 = ADD 0x4 V352
0x650: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x666: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x67b: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x67d: M[V358] = V362
0x67e: V363 = 0x20
0x680: V364 = ADD 0x20 V358
0x684: V365 = 0x20
0x686: V366 = 0x40
0x688: V367 = M[0x40]
0x68b: V368 = SUB V364 V367
0x68d: V369 = 0x0
0x691: V370 = EXTCODESIZE V343
0x692: V371 = ISZERO V370
0x693: V372 = ISZERO V371
0x694: V373 = 0x69c
0x697: JUMPI 0x69c V372
---
Entry stack: [V11, 0x1ab, V100, S0]
Stack pops: 2
Stack additions: [S1, 0x0, V343, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V343]
Exit stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V343]

================================

Block 0x698
[0x698:0x69b]
---
Predecessors: [0x5f7]
Successors: []
---
0x698 PUSH1 0x0
0x69a DUP1
0x69b REVERT
---
0x698: V374 = 0x0
0x69b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V343]

================================

Block 0x69c
[0x69c:0x6a8]
---
Predecessors: [0x5f7]
Successors: [0x6a9, 0x6ad]
---
0x69c JUMPDEST
0x69d PUSH2 0x2c6
0x6a0 GAS
0x6a1 SUB
0x6a2 CALL
0x6a3 ISZERO
0x6a4 ISZERO
0x6a5 PUSH2 0x6ad
0x6a8 JUMPI
---
0x69c: JUMPDEST 
0x69d: V375 = 0x2c6
0x6a0: V376 = GAS
0x6a1: V377 = SUB V376 0x2c6
0x6a2: V378 = CALL V377 V343 0x0 V367 V368 V367 0x20
0x6a3: V379 = ISZERO V378
0x6a4: V380 = ISZERO V379
0x6a5: V381 = 0x6ad
0x6a8: JUMPI 0x6ad V380
---
Entry stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V343]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364]

================================

Block 0x6a9
[0x6a9:0x6ac]
---
Predecessors: [0x69c]
Successors: []
---
0x6a9 PUSH1 0x0
0x6ab DUP1
0x6ac REVERT
---
0x6a9: V382 = 0x0
0x6ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364]

================================

Block 0x6ad
[0x6ad:0x6b8]
---
Predecessors: [0x69c]
Successors: [0x6b9]
---
0x6ad JUMPDEST
0x6ae POP
0x6af POP
0x6b0 POP
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 DUP1
0x6b5 MLOAD
0x6b6 SWAP1
0x6b7 POP
0x6b8 EQ
---
0x6ad: JUMPDEST 
0x6b1: V383 = 0x40
0x6b3: V384 = M[0x40]
0x6b5: V385 = M[V384]
0x6b8: V386 = EQ V385 0x0
---
Entry stack: [V11, 0x1ab, V100, 0x0, V343, 0x70a08231, V364]
Stack pops: 4
Stack additions: [V386]
Exit stack: [V11, 0x1ab, V100, V386]

================================

Block 0x6b9
[0x6b9:0x6be]
---
Predecessors: [0x5f1, 0x6ad]
Successors: [0x6bf, 0x6c3]
---
0x6b9 JUMPDEST
0x6ba ISZERO
0x6bb PUSH2 0x6c3
0x6be JUMPI
---
0x6b9: JUMPDEST 
0x6ba: V387 = ISZERO S0
0x6bb: V388 = 0x6c3
0x6be: JUMPI 0x6c3 V387
---
Entry stack: [V11, 0x1ab, V100, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1ab, V100]

================================

Block 0x6bf
[0x6bf:0x6c2]
---
Predecessors: [0x6b9]
Successors: []
---
0x6bf PUSH1 0x0
0x6c1 DUP1
0x6c2 REVERT
---
0x6bf: V389 = 0x0
0x6c2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ab, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ab, V100]

================================

Block 0x6c3
[0x6c3:0x7f0]
---
Predecessors: [0x6b9]
Successors: [0x7f1, 0x7f5]
---
0x6c3 JUMPDEST
0x6c4 PUSH1 0x1
0x6c6 PUSH1 0x2
0x6c8 PUSH1 0x0
0x6ca DUP4
0x6cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e0 AND
0x6e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f6 AND
0x6f7 DUP2
0x6f8 MSTORE
0x6f9 PUSH1 0x20
0x6fb ADD
0x6fc SWAP1
0x6fd DUP2
0x6fe MSTORE
0x6ff PUSH1 0x20
0x701 ADD
0x702 PUSH1 0x0
0x704 SHA3
0x705 PUSH1 0x0
0x707 DUP3
0x708 DUP3
0x709 SLOAD
0x70a ADD
0x70b SWAP3
0x70c POP
0x70d POP
0x70e DUP2
0x70f SWAP1
0x710 SSTORE
0x711 POP
0x712 PUSH1 0x2
0x714 PUSH1 0x0
0x716 DUP3
0x717 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72c AND
0x72d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x742 AND
0x743 DUP2
0x744 MSTORE
0x745 PUSH1 0x20
0x747 ADD
0x748 SWAP1
0x749 DUP2
0x74a MSTORE
0x74b PUSH1 0x20
0x74d ADD
0x74e PUSH1 0x0
0x750 SHA3
0x751 SLOAD
0x752 DUP2
0x753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x768 AND
0x769 PUSH32 0xd1279ea816fe5d2927b75d801ea3cf9c18768d4ea697c64889a75e4b0c0bc64c
0x78a PUSH1 0x40
0x78c MLOAD
0x78d PUSH1 0x40
0x78f MLOAD
0x790 DUP1
0x791 SWAP2
0x792 SUB
0x793 SWAP1
0x794 LOG3
0x795 PUSH1 0x0
0x797 DUP1
0x798 SWAP1
0x799 SLOAD
0x79a SWAP1
0x79b PUSH2 0x100
0x79e EXP
0x79f SWAP1
0x7a0 DIV
0x7a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b6 AND
0x7b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cc AND
0x7cd PUSH2 0x8fc
0x7d0 CALLVALUE
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 ISZERO
0x7d4 MUL
0x7d5 SWAP1
0x7d6 PUSH1 0x40
0x7d8 MLOAD
0x7d9 PUSH1 0x0
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de DUP1
0x7df DUP4
0x7e0 SUB
0x7e1 DUP2
0x7e2 DUP6
0x7e3 DUP9
0x7e4 DUP9
0x7e5 CALL
0x7e6 SWAP4
0x7e7 POP
0x7e8 POP
0x7e9 POP
0x7ea POP
0x7eb ISZERO
0x7ec ISZERO
0x7ed PUSH2 0x7f5
0x7f0 JUMPI
---
0x6c3: JUMPDEST 
0x6c4: V390 = 0x1
0x6c6: V391 = 0x2
0x6c8: V392 = 0x0
0x6cb: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x6e1: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f6: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x6f8: M[0x0] = V396
0x6f9: V397 = 0x20
0x6fb: V398 = ADD 0x20 0x0
0x6fe: M[0x20] = 0x2
0x6ff: V399 = 0x20
0x701: V400 = ADD 0x20 0x20
0x702: V401 = 0x0
0x704: V402 = SHA3 0x0 0x40
0x705: V403 = 0x0
0x709: V404 = S[V402]
0x70a: V405 = ADD V404 0x1
0x710: S[V402] = V405
0x712: V406 = 0x2
0x714: V407 = 0x0
0x717: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x72c: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x72d: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x742: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x744: M[0x0] = V411
0x745: V412 = 0x20
0x747: V413 = ADD 0x20 0x0
0x74a: M[0x20] = 0x2
0x74b: V414 = 0x20
0x74d: V415 = ADD 0x20 0x20
0x74e: V416 = 0x0
0x750: V417 = SHA3 0x0 0x40
0x751: V418 = S[V417]
0x753: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x768: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x769: V421 = 0xd1279ea816fe5d2927b75d801ea3cf9c18768d4ea697c64889a75e4b0c0bc64c
0x78a: V422 = 0x40
0x78c: V423 = M[0x40]
0x78d: V424 = 0x40
0x78f: V425 = M[0x40]
0x792: V426 = SUB V423 V425
0x794: LOG V425 V426 0xd1279ea816fe5d2927b75d801ea3cf9c18768d4ea697c64889a75e4b0c0bc64c V420 V418
0x795: V427 = 0x0
0x799: V428 = S[0x0]
0x79b: V429 = 0x100
0x79e: V430 = EXP 0x100 0x0
0x7a0: V431 = DIV V428 0x1
0x7a1: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x7b7: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x7cd: V436 = 0x8fc
0x7d0: V437 = CALLVALUE
0x7d3: V438 = ISZERO V437
0x7d4: V439 = MUL V438 0x8fc
0x7d6: V440 = 0x40
0x7d8: V441 = M[0x40]
0x7d9: V442 = 0x0
0x7db: V443 = 0x40
0x7dd: V444 = M[0x40]
0x7e0: V445 = SUB V441 V444
0x7e5: V446 = CALL V439 V435 V437 V444 V445 V444 0x0
0x7eb: V447 = ISZERO V446
0x7ec: V448 = ISZERO V447
0x7ed: V449 = 0x7f5
0x7f0: JUMPI 0x7f5 V448
---
Entry stack: [V11, 0x1ab, V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1ab, V100]

================================

Block 0x7f1
[0x7f1:0x7f4]
---
Predecessors: [0x6c3]
Successors: []
---
0x7f1 PUSH1 0x0
0x7f3 DUP1
0x7f4 REVERT
---
0x7f1: V450 = 0x0
0x7f4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ab, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ab, V100]

================================

Block 0x7f5
[0x7f5:0x7f7]
---
Predecessors: [0x6c3]
Successors: [0x1ab]
---
0x7f5 JUMPDEST
0x7f6 POP
0x7f7 JUMP
---
0x7f5: JUMPDEST 
0x7f7: JUMP 0x1ab
---
Entry stack: [V11, 0x1ab, V100]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f8
[0x7f8:0x81c]
---
Predecessors: [0x1b8]
Successors: [0x1c0]
---
0x7f8 JUMPDEST
0x7f9 PUSH1 0x0
0x7fb DUP1
0x7fc SWAP1
0x7fd SLOAD
0x7fe SWAP1
0x7ff PUSH2 0x100
0x802 EXP
0x803 SWAP1
0x804 DIV
0x805 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81a AND
0x81b DUP2
0x81c JUMP
---
0x7f8: JUMPDEST 
0x7f9: V451 = 0x0
0x7fd: V452 = S[0x0]
0x7ff: V453 = 0x100
0x802: V454 = EXP 0x100 0x0
0x804: V455 = DIV V452 0x1
0x805: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x81a: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x81c: JUMP 0x1c0
---
Entry stack: [V11, 0x1c0]
Stack pops: 1
Stack additions: [S0, V457]
Exit stack: [V11, 0x1c0, V457]

================================

Block 0x81d
[0x81d:0x826]
---
Predecessors: [0x20d]
Successors: [0x215]
---
0x81d JUMPDEST
0x81e PUSH1 0x0
0x820 PUSH1 0x1
0x822 SLOAD
0x823 SWAP1
0x824 POP
0x825 SWAP1
0x826 JUMP
---
0x81d: JUMPDEST 
0x81e: V458 = 0x0
0x820: V459 = 0x1
0x822: V460 = S[0x1]
0x826: JUMP 0x215
---
Entry stack: [V11, 0x215]
Stack pops: 1
Stack additions: [V460]
Exit stack: [V11, V460]

================================

Block 0x827
[0x827:0x86f]
---
Predecessors: [0x236]
Successors: [0x262]
---
0x827 JUMPDEST
0x828 PUSH1 0x0
0x82a PUSH1 0x2
0x82c PUSH1 0x0
0x82e DUP4
0x82f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x844 AND
0x845 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85a AND
0x85b DUP2
0x85c MSTORE
0x85d PUSH1 0x20
0x85f ADD
0x860 SWAP1
0x861 DUP2
0x862 MSTORE
0x863 PUSH1 0x20
0x865 ADD
0x866 PUSH1 0x0
0x868 SHA3
0x869 SLOAD
0x86a SWAP1
0x86b POP
0x86c SWAP2
0x86d SWAP1
0x86e POP
0x86f JUMP
---
0x827: JUMPDEST 
0x828: V461 = 0x0
0x82a: V462 = 0x2
0x82c: V463 = 0x0
0x82f: V464 = 0xffffffffffffffffffffffffffffffffffffffff
0x844: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x845: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x85a: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x85c: M[0x0] = V467
0x85d: V468 = 0x20
0x85f: V469 = ADD 0x20 0x0
0x862: M[0x20] = 0x2
0x863: V470 = 0x20
0x865: V471 = ADD 0x20 0x20
0x866: V472 = 0x0
0x868: V473 = SHA3 0x0 0x40
0x869: V474 = S[V473]
0x86f: JUMP 0x262
---
Entry stack: [V11, 0x262, V142]
Stack pops: 2
Stack additions: [V474]
Exit stack: [V11, V474]

================================

Block 0x870
[0x870:0x8c6]
---
Predecessors: [0x283]
Successors: [0x8c7, 0x8cb]
---
0x870 JUMPDEST
0x871 PUSH1 0x0
0x873 DUP1
0x874 SWAP1
0x875 SLOAD
0x876 SWAP1
0x877 PUSH2 0x100
0x87a EXP
0x87b SWAP1
0x87c DIV
0x87d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x892 AND
0x893 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a8 AND
0x8a9 CALLER
0x8aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bf AND
0x8c0 EQ
0x8c1 ISZERO
0x8c2 ISZERO
0x8c3 PUSH2 0x8cb
0x8c6 JUMPI
---
0x870: JUMPDEST 
0x871: V475 = 0x0
0x875: V476 = S[0x0]
0x877: V477 = 0x100
0x87a: V478 = EXP 0x100 0x0
0x87c: V479 = DIV V476 0x1
0x87d: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x892: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x893: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a8: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x8a9: V484 = CALLER
0x8aa: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bf: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x8c0: V487 = EQ V486 V483
0x8c1: V488 = ISZERO V487
0x8c2: V489 = ISZERO V488
0x8c3: V490 = 0x8cb
0x8c6: JUMPI 0x8cb V489
---
Entry stack: [V11, 0x2af, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2af, V161]

================================

Block 0x8c7
[0x8c7:0x8ca]
---
Predecessors: [0x870]
Successors: []
---
0x8c7 PUSH1 0x0
0x8c9 DUP1
0x8ca REVERT
---
0x8c7: V491 = 0x0
0x8ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2af, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2af, V161]

================================

Block 0x8cb
[0x8cb:0x90d]
---
Predecessors: [0x870]
Successors: [0x2af]
---
0x8cb JUMPDEST
0x8cc DUP1
0x8cd PUSH1 0x0
0x8cf DUP1
0x8d0 PUSH2 0x100
0x8d3 EXP
0x8d4 DUP2
0x8d5 SLOAD
0x8d6 DUP2
0x8d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ec MUL
0x8ed NOT
0x8ee AND
0x8ef SWAP1
0x8f0 DUP4
0x8f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x906 AND
0x907 MUL
0x908 OR
0x909 SWAP1
0x90a SSTORE
0x90b POP
0x90c POP
0x90d JUMP
---
0x8cb: JUMPDEST 
0x8cd: V492 = 0x0
0x8d0: V493 = 0x100
0x8d3: V494 = EXP 0x100 0x0
0x8d5: V495 = S[0x0]
0x8d7: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: V497 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8ed: V498 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8ee: V499 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V495
0x8f1: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x906: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x907: V502 = MUL V501 0x1
0x908: V503 = OR V502 V499
0x90a: S[0x0] = V503
0x90d: JUMP 0x2af
---
Entry stack: [V11, 0x2af, V161]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x90e
[0x90e:0x939]
---
Predecessors: []
Successors: []
---
0x90e STOP
0x90f LOG1
0x910 PUSH6 0x627a7a723058
0x917 SHA3
0x918 PUSH23 0x65bc8cd48f67630f0f82a36eae5259527c5fa1a05a9b79
0x930 DUP4
0x931 MISSING 0x1e
0x932 MISSING 0xe5
0x933 MUL
0x934 SMOD
0x935 MISSING 0x5d
0x936 SWAP14
0x937 DUP10
0x938 STOP
0x939 MISSING 0x29
---
0x90e: STOP 
0x90f: LOG S0 S1 S2
0x910: V504 = 0x627a7a723058
0x917: V505 = SHA3 0x627a7a723058 S3
0x918: V506 = 0x65bc8cd48f67630f0f82a36eae5259527c5fa1a05a9b79
0x931: MISSING 0x1e
0x932: MISSING 0xe5
0x933: V507 = MUL S0 S1
0x934: V508 = SMOD V507 S2
0x935: MISSING 0x5d
0x938: STOP 
0x939: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, 0x65bc8cd48f67630f0f82a36eae5259527c5fa1a05a9b79, V505, S4, S5, V508, S9, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x6b091f9
Entry block: 0xf0
Exit block: 0x130
Body: 0xf0, 0xf7, 0xfb, 0x130, 0x2b1, 0x308, 0x30c, 0x316, 0x3b6, 0x3ba, 0x3c7, 0x3cb, 0x3d7, 0x3dd, 0x3e1, 0x57a, 0x57e, 0x58b, 0x58f

Function 1:
Public function signature: 0x4637d827
Entry block: 0x132
Exit block: 0x169
Body: 0x132, 0x139, 0x13d, 0x169, 0x59e

Function 2:
Public function signature: 0x4d4b1a88
Entry block: 0x17f
Exit block: 0x1ab
Body: 0x17f, 0x1ab, 0x5b6, 0x5c0, 0x5f1, 0x5f7, 0x698, 0x69c, 0x6a9, 0x6ad, 0x6b9, 0x6bf, 0x6c3, 0x7f1, 0x7f5

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1ad
Exit block: 0x1c0
Body: 0x1ad, 0x1b4, 0x1b8, 0x1c0, 0x7f8

Function 4:
Public function signature: 0xc5292c67
Entry block: 0x202
Exit block: 0x215
Body: 0x202, 0x209, 0x20d, 0x215, 0x81d

Function 5:
Public function signature: 0xe4120220
Entry block: 0x22b
Exit block: 0x262
Body: 0x22b, 0x232, 0x236, 0x262, 0x827

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x278
Exit block: 0x2af
Body: 0x278, 0x27f, 0x283, 0x2af, 0x870, 0x8c7, 0x8cb

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0xee
Body: 0x83, 0x8d, 0xe9, 0xed, 0xee

