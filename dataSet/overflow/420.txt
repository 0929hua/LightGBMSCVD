Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xad]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xad
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xad
0xa: JUMPI 0xad V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xb2]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xb2
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xb2
0x3e: JUMPI 0xb2 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x141]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x141
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x141
0x49: JUMPI 0x141 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x19b]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x19b
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x19b
0x54: JUMPI 0x19b V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1c4]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1c4
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1c4
0x5f: JUMPI 0x1c4 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x23d]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x23d
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x23d
0x6a: JUMPI 0x23d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x26c]
---
0x6b DUP1
0x6c PUSH4 0x4c738909
0x71 EQ
0x72 PUSH2 0x26c
0x75 JUMPI
---
0x6c: V26 = 0x4c738909
0x71: V27 = EQ 0x4c738909 V10
0x72: V28 = 0x26c
0x75: JUMPI 0x26c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x295]
---
0x76 DUP1
0x77 PUSH4 0x70a08231
0x7c EQ
0x7d PUSH2 0x295
0x80 JUMPI
---
0x77: V29 = 0x70a08231
0x7c: V30 = EQ 0x70a08231 V10
0x7d: V31 = 0x295
0x80: JUMPI 0x295 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x2e2]
---
0x81 DUP1
0x82 PUSH4 0x8da5cb5b
0x87 EQ
0x88 PUSH2 0x2e2
0x8b JUMPI
---
0x82: V32 = 0x8da5cb5b
0x87: V33 = EQ 0x8da5cb5b V10
0x88: V34 = 0x2e2
0x8b: JUMPI 0x2e2 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x337]
---
0x8c DUP1
0x8d PUSH4 0x95d89b41
0x92 EQ
0x93 PUSH2 0x337
0x96 JUMPI
---
0x8d: V35 = 0x95d89b41
0x92: V36 = EQ 0x95d89b41 V10
0x93: V37 = 0x337
0x96: JUMPI 0x337 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x3c6]
---
0x97 DUP1
0x98 PUSH4 0xa9059cbb
0x9d EQ
0x9e PUSH2 0x3c6
0xa1 JUMPI
---
0x98: V38 = 0xa9059cbb
0x9d: V39 = EQ 0xa9059cbb V10
0x9e: V40 = 0x3c6
0xa1: JUMPI 0x3c6 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x420]
---
0xa2 DUP1
0xa3 PUSH4 0xdd62ed3e
0xa8 EQ
0xa9 PUSH2 0x420
0xac JUMPI
---
0xa3: V41 = 0xdd62ed3e
0xa8: V42 = EQ 0xdd62ed3e V10
0xa9: V43 = 0x420
0xac: JUMPI 0x420 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb1]
---
Predecessors: [0x0, 0xa2]
Successors: []
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xad: JUMPDEST 
0xae: V44 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0xb]
Successors: [0xb9, 0xbd]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V45 = CALLVALUE
0xb4: V46 = ISZERO V45
0xb5: V47 = 0xbd
0xb8: JUMPI 0xbd V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V48 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0xb2]
Successors: [0x48c]
---
0xbd JUMPDEST
0xbe PUSH2 0xc5
0xc1 PUSH2 0x48c
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V49 = 0xc5
0xc1: V50 = 0x48c
0xc4: JUMP 0x48c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V10, 0xc5]

================================

Block 0xc5
[0xc5:0xe9]
---
Predecessors: [0x48c]
Successors: [0xea]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca DUP1
0xcb PUSH1 0x20
0xcd ADD
0xce DUP3
0xcf DUP2
0xd0 SUB
0xd1 DUP3
0xd2 MSTORE
0xd3 DUP4
0xd4 DUP2
0xd5 DUP2
0xd6 MLOAD
0xd7 DUP2
0xd8 MSTORE
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP2
0xdd POP
0xde DUP1
0xdf MLOAD
0xe0 SWAP1
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 SWAP1
0xe5 DUP1
0xe6 DUP4
0xe7 DUP4
0xe8 PUSH1 0x0
---
0xc5: JUMPDEST 
0xc6: V51 = 0x40
0xc8: V52 = M[0x40]
0xcb: V53 = 0x20
0xcd: V54 = ADD 0x20 V52
0xd0: V55 = SUB V54 V52
0xd2: M[V52] = V55
0xd6: V56 = M[V326]
0xd8: M[V54] = V56
0xd9: V57 = 0x20
0xdb: V58 = ADD 0x20 V54
0xdf: V59 = M[V326]
0xe1: V60 = 0x20
0xe3: V61 = ADD 0x20 V326
0xe8: V62 = 0x0
---
Entry stack: [V10, 0xc5, V326]
Stack pops: 1
Stack additions: [S0, V52, V52, V58, V61, V59, V59, V58, V61, 0x0]
Exit stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, 0x0]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xc5, 0xfb]
Successors: [0xf3, 0x106]
---
0xea JUMPDEST
0xeb DUP4
0xec DUP2
0xed LT
0xee ISZERO
0xef PUSH2 0x106
0xf2 JUMPI
---
0xea: JUMPDEST 
0xed: V63 = LT S0 V59
0xee: V64 = ISZERO V63
0xef: V65 = 0x106
0xf2: JUMPI 0x106 V64
---
Entry stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, S0]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xea]
Successors: [0xfb]
---
0xf3 DUP1
0xf4 DUP3
0xf5 ADD
0xf6 MLOAD
0xf7 DUP2
0xf8 DUP5
0xf9 ADD
0xfa MSTORE
---
0xf5: V66 = ADD V61 S0
0xf6: V67 = M[V66]
0xf9: V68 = ADD V58 S0
0xfa: M[V68] = V67
---
Entry stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, S0]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf3]
Successors: [0xea]
---
0xfb JUMPDEST
0xfc PUSH1 0x20
0xfe DUP2
0xff ADD
0x100 SWAP1
0x101 POP
0x102 PUSH2 0xea
0x105 JUMP
---
0xfb: JUMPDEST 
0xfc: V69 = 0x20
0xff: V70 = ADD S0 0x20
0x102: V71 = 0xea
0x105: JUMP 0xea
---
Entry stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, S0]
Stack pops: 1
Stack additions: [V70]
Exit stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, V70]

================================

Block 0x106
[0x106:0x119]
---
Predecessors: [0xea]
Successors: [0x11a, 0x133]
---
0x106 JUMPDEST
0x107 POP
0x108 POP
0x109 POP
0x10a POP
0x10b SWAP1
0x10c POP
0x10d SWAP1
0x10e DUP2
0x10f ADD
0x110 SWAP1
0x111 PUSH1 0x1f
0x113 AND
0x114 DUP1
0x115 ISZERO
0x116 PUSH2 0x133
0x119 JUMPI
---
0x106: JUMPDEST 
0x10f: V72 = ADD V59 V58
0x111: V73 = 0x1f
0x113: V74 = AND 0x1f V59
0x115: V75 = ISZERO V74
0x116: V76 = 0x133
0x119: JUMPI 0x133 V75
---
Entry stack: [V10, 0xc5, V326, V52, V52, V58, V61, V59, V59, V58, V61, S0]
Stack pops: 7
Stack additions: [V72, V74]
Exit stack: [V10, 0xc5, V326, V52, V52, V72, V74]

================================

Block 0x11a
[0x11a:0x132]
---
Predecessors: [0x106]
Successors: [0x133]
---
0x11a DUP1
0x11b DUP3
0x11c SUB
0x11d DUP1
0x11e MLOAD
0x11f PUSH1 0x1
0x121 DUP4
0x122 PUSH1 0x20
0x124 SUB
0x125 PUSH2 0x100
0x128 EXP
0x129 SUB
0x12a NOT
0x12b AND
0x12c DUP2
0x12d MSTORE
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP2
0x132 POP
---
0x11c: V77 = SUB V72 V74
0x11e: V78 = M[V77]
0x11f: V79 = 0x1
0x122: V80 = 0x20
0x124: V81 = SUB 0x20 V74
0x125: V82 = 0x100
0x128: V83 = EXP 0x100 V81
0x129: V84 = SUB V83 0x1
0x12a: V85 = NOT V84
0x12b: V86 = AND V85 V78
0x12d: M[V77] = V86
0x12e: V87 = 0x20
0x130: V88 = ADD 0x20 V77
---
Entry stack: [V10, 0xc5, V326, V52, V52, V72, V74]
Stack pops: 2
Stack additions: [V88, S0]
Exit stack: [V10, 0xc5, V326, V52, V52, V88, V74]

================================

Block 0x133
[0x133:0x140]
---
Predecessors: [0x106, 0x11a]
Successors: []
---
0x133 JUMPDEST
0x134 POP
0x135 SWAP3
0x136 POP
0x137 POP
0x138 POP
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d SWAP2
0x13e SUB
0x13f SWAP1
0x140 RETURN
---
0x133: JUMPDEST 
0x139: V89 = 0x40
0x13b: V90 = M[0x40]
0x13e: V91 = SUB S1 V90
0x140: RETURN V90 V91
---
Entry stack: [V10, 0xc5, V326, V52, V52, S1, V74]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0x141
[0x141:0x147]
---
Predecessors: [0x3f]
Successors: [0x148, 0x14c]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x141: JUMPDEST 
0x142: V92 = CALLVALUE
0x143: V93 = ISZERO V92
0x144: V94 = 0x14c
0x147: JUMPI 0x14c V93
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x141]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V95 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14c
[0x14c:0x180]
---
Predecessors: [0x141]
Successors: [0x4c5]
---
0x14c JUMPDEST
0x14d PUSH2 0x181
0x150 PUSH1 0x4
0x152 DUP1
0x153 DUP1
0x154 CALLDATALOAD
0x155 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16a AND
0x16b SWAP1
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP1
0x170 SWAP2
0x171 SWAP1
0x172 DUP1
0x173 CALLDATALOAD
0x174 SWAP1
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 SWAP2
0x17a SWAP1
0x17b POP
0x17c POP
0x17d PUSH2 0x4c5
0x180 JUMP
---
0x14c: JUMPDEST 
0x14d: V96 = 0x181
0x150: V97 = 0x4
0x154: V98 = CALLDATALOAD 0x4
0x155: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x16c: V101 = 0x20
0x16e: V102 = ADD 0x20 0x4
0x173: V103 = CALLDATALOAD 0x24
0x175: V104 = 0x20
0x177: V105 = ADD 0x20 0x24
0x17d: V106 = 0x4c5
0x180: JUMP 0x4c5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x181, V100, V103]
Exit stack: [V10, 0x181, V100, V103]

================================

Block 0x181
[0x181:0x19a]
---
Predecessors: [0x614]
Successors: []
---
0x181 JUMPDEST
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 DUP3
0x187 ISZERO
0x188 ISZERO
0x189 ISZERO
0x18a ISZERO
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x20
0x18f ADD
0x190 SWAP2
0x191 POP
0x192 POP
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 SWAP2
0x198 SUB
0x199 SWAP1
0x19a RETURN
---
0x181: JUMPDEST 
0x182: V107 = 0x40
0x184: V108 = M[0x40]
0x187: V109 = ISZERO {0x0, 0x1}
0x188: V110 = ISZERO V109
0x189: V111 = ISZERO V110
0x18a: V112 = ISZERO V111
0x18c: M[V108] = V112
0x18d: V113 = 0x20
0x18f: V114 = ADD 0x20 V108
0x193: V115 = 0x40
0x195: V116 = M[0x40]
0x198: V117 = SUB V114 V116
0x19a: RETURN V116 V117
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x19b
[0x19b:0x1a1]
---
Predecessors: [0x4a]
Successors: [0x1a2, 0x1a6]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x19b: JUMPDEST 
0x19c: V118 = CALLVALUE
0x19d: V119 = ISZERO V118
0x19e: V120 = 0x1a6
0x1a1: JUMPI 0x1a6 V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x19b]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V121 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a6
[0x1a6:0x1ad]
---
Predecessors: [0x19b]
Successors: [0x61a]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0x1ae
0x1aa PUSH2 0x61a
0x1ad JUMP
---
0x1a6: JUMPDEST 
0x1a7: V122 = 0x1ae
0x1aa: V123 = 0x61a
0x1ad: JUMP 0x61a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ae]
Exit stack: [V10, 0x1ae]

================================

Block 0x1ae
[0x1ae:0x1c3]
---
Predecessors: [0x621]
Successors: []
---
0x1ae JUMPDEST
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 DUP3
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 SWAP2
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 SWAP2
0x1c1 SUB
0x1c2 SWAP1
0x1c3 RETURN
---
0x1ae: JUMPDEST 
0x1af: V124 = 0x40
0x1b1: V125 = M[0x40]
0x1b5: M[V125] = V398
0x1b6: V126 = 0x20
0x1b8: V127 = ADD 0x20 V125
0x1bc: V128 = 0x40
0x1be: V129 = M[0x40]
0x1c1: V130 = SUB V127 V129
0x1c3: RETURN V129 V130
---
Entry stack: [V10, V398]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0x55]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V131 = CALLVALUE
0x1c6: V132 = ISZERO V131
0x1c7: V133 = 0x1cf
0x1ca: JUMPI 0x1cf V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V134 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cf
[0x1cf:0x222]
---
Predecessors: [0x1c4]
Successors: [0x624]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x223
0x1d3 PUSH1 0x4
0x1d5 DUP1
0x1d6 DUP1
0x1d7 CALLDATALOAD
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee SWAP1
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 SWAP1
0x1f3 SWAP2
0x1f4 SWAP1
0x1f5 DUP1
0x1f6 CALLDATALOAD
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d SWAP1
0x20e PUSH1 0x20
0x210 ADD
0x211 SWAP1
0x212 SWAP2
0x213 SWAP1
0x214 DUP1
0x215 CALLDATALOAD
0x216 SWAP1
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP1
0x21b SWAP2
0x21c SWAP1
0x21d POP
0x21e POP
0x21f PUSH2 0x624
0x222 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V135 = 0x223
0x1d3: V136 = 0x4
0x1d7: V137 = CALLDATALOAD 0x4
0x1d8: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x1ef: V140 = 0x20
0x1f1: V141 = ADD 0x20 0x4
0x1f6: V142 = CALLDATALOAD 0x24
0x1f7: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x20e: V145 = 0x20
0x210: V146 = ADD 0x20 0x24
0x215: V147 = CALLDATALOAD 0x44
0x217: V148 = 0x20
0x219: V149 = ADD 0x20 0x44
0x21f: V150 = 0x624
0x222: JUMP 0x624
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x223, V139, V144, V147]
Exit stack: [V10, 0x223, V139, V144, V147]

================================

Block 0x223
[0x223:0x23c]
---
Predecessors: [0x9b3]
Successors: []
---
0x223 JUMPDEST
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 DUP3
0x229 ISZERO
0x22a ISZERO
0x22b ISZERO
0x22c ISZERO
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x20
0x231 ADD
0x232 SWAP2
0x233 POP
0x234 POP
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 SWAP2
0x23a SUB
0x23b SWAP1
0x23c RETURN
---
0x223: JUMPDEST 
0x224: V151 = 0x40
0x226: V152 = M[0x40]
0x229: V153 = ISZERO {0x0, 0x1}
0x22a: V154 = ISZERO V153
0x22b: V155 = ISZERO V154
0x22c: V156 = ISZERO V155
0x22e: M[V152] = V156
0x22f: V157 = 0x20
0x231: V158 = ADD 0x20 V152
0x235: V159 = 0x40
0x237: V160 = M[0x40]
0x23a: V161 = SUB V158 V160
0x23c: RETURN V160 V161
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x23d
[0x23d:0x243]
---
Predecessors: [0x60]
Successors: [0x244, 0x248]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23d: JUMPDEST 
0x23e: V162 = CALLVALUE
0x23f: V163 = ISZERO V162
0x240: V164 = 0x248
0x243: JUMPI 0x248 V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23d]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V165 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x248
[0x248:0x24f]
---
Predecessors: [0x23d]
Successors: [0x9ba]
---
0x248 JUMPDEST
0x249 PUSH2 0x250
0x24c PUSH2 0x9ba
0x24f JUMP
---
0x248: JUMPDEST 
0x249: V166 = 0x250
0x24c: V167 = 0x9ba
0x24f: JUMP 0x9ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x250]
Exit stack: [V10, 0x250]

================================

Block 0x250
[0x250:0x26b]
---
Predecessors: [0x9ba]
Successors: []
---
0x250 JUMPDEST
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 DUP3
0x256 PUSH1 0xff
0x258 AND
0x259 PUSH1 0xff
0x25b AND
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 ADD
0x261 SWAP2
0x262 POP
0x263 POP
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 SWAP2
0x269 SUB
0x26a SWAP1
0x26b RETURN
---
0x250: JUMPDEST 
0x251: V168 = 0x40
0x253: V169 = M[0x40]
0x256: V170 = 0xff
0x258: V171 = AND 0xff 0x12
0x259: V172 = 0xff
0x25b: V173 = AND 0xff 0x12
0x25d: M[V169] = 0x12
0x25e: V174 = 0x20
0x260: V175 = ADD 0x20 V169
0x264: V176 = 0x40
0x266: V177 = M[0x40]
0x269: V178 = SUB V175 V177
0x26b: RETURN V177 V178
---
Entry stack: [V10, 0x250, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x250]

================================

Block 0x26c
[0x26c:0x272]
---
Predecessors: [0x6b]
Successors: [0x273, 0x277]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x26c: JUMPDEST 
0x26d: V179 = CALLVALUE
0x26e: V180 = ISZERO V179
0x26f: V181 = 0x277
0x272: JUMPI 0x277 V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x26c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V182 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x27e]
---
Predecessors: [0x26c]
Successors: [0x9bf]
---
0x277 JUMPDEST
0x278 PUSH2 0x27f
0x27b PUSH2 0x9bf
0x27e JUMP
---
0x277: JUMPDEST 
0x278: V183 = 0x27f
0x27b: V184 = 0x9bf
0x27e: JUMP 0x9bf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x27f]
Exit stack: [V10, 0x27f]

================================

Block 0x27f
[0x27f:0x294]
---
Predecessors: [0xa04]
Successors: []
---
0x27f JUMPDEST
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 DUP3
0x285 DUP2
0x286 MSTORE
0x287 PUSH1 0x20
0x289 ADD
0x28a SWAP2
0x28b POP
0x28c POP
0x28d PUSH1 0x40
0x28f MLOAD
0x290 DUP1
0x291 SWAP2
0x292 SUB
0x293 SWAP1
0x294 RETURN
---
0x27f: JUMPDEST 
0x280: V185 = 0x40
0x282: V186 = M[0x40]
0x286: M[V186] = V592
0x287: V187 = 0x20
0x289: V188 = ADD 0x20 V186
0x28d: V189 = 0x40
0x28f: V190 = M[0x40]
0x292: V191 = SUB V188 V190
0x294: RETURN V190 V191
---
Entry stack: [V10, V592]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0x76]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 CALLVALUE
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V192 = CALLVALUE
0x297: V193 = ISZERO V192
0x298: V194 = 0x2a0
0x29b: JUMPI 0x2a0 V193
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V195 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a0
[0x2a0:0x2cb]
---
Predecessors: [0x295]
Successors: [0xa07]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x2cc
0x2a4 PUSH1 0x4
0x2a6 DUP1
0x2a7 DUP1
0x2a8 CALLDATALOAD
0x2a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2be AND
0x2bf SWAP1
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 SWAP1
0x2c4 SWAP2
0x2c5 SWAP1
0x2c6 POP
0x2c7 POP
0x2c8 PUSH2 0xa07
0x2cb JUMP
---
0x2a0: JUMPDEST 
0x2a1: V196 = 0x2cc
0x2a4: V197 = 0x4
0x2a8: V198 = CALLDATALOAD 0x4
0x2a9: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x2c0: V201 = 0x20
0x2c2: V202 = ADD 0x20 0x4
0x2c8: V203 = 0xa07
0x2cb: JUMP 0xa07
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2cc, V200]
Exit stack: [V10, 0x2cc, V200]

================================

Block 0x2cc
[0x2cc:0x2e1]
---
Predecessors: [0xa4c]
Successors: []
---
0x2cc JUMPDEST
0x2cd PUSH1 0x40
0x2cf MLOAD
0x2d0 DUP1
0x2d1 DUP3
0x2d2 DUP2
0x2d3 MSTORE
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 SWAP2
0x2d8 POP
0x2d9 POP
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd DUP1
0x2de SWAP2
0x2df SUB
0x2e0 SWAP1
0x2e1 RETURN
---
0x2cc: JUMPDEST 
0x2cd: V204 = 0x40
0x2cf: V205 = M[0x40]
0x2d3: M[V205] = V606
0x2d4: V206 = 0x20
0x2d6: V207 = ADD 0x20 V205
0x2da: V208 = 0x40
0x2dc: V209 = M[0x40]
0x2df: V210 = SUB V207 V209
0x2e1: RETURN V209 V210
---
Entry stack: [V10, V606]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e2
[0x2e2:0x2e8]
---
Predecessors: [0x81]
Successors: [0x2e9, 0x2ed]
---
0x2e2 JUMPDEST
0x2e3 CALLVALUE
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V211 = CALLVALUE
0x2e4: V212 = ISZERO V211
0x2e5: V213 = 0x2ed
0x2e8: JUMPI 0x2ed V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2e2]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V214 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ed
[0x2ed:0x2f4]
---
Predecessors: [0x2e2]
Successors: [0xa51]
---
0x2ed JUMPDEST
0x2ee PUSH2 0x2f5
0x2f1 PUSH2 0xa51
0x2f4 JUMP
---
0x2ed: JUMPDEST 
0x2ee: V215 = 0x2f5
0x2f1: V216 = 0xa51
0x2f4: JUMP 0xa51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2f5]
Exit stack: [V10, 0x2f5]

================================

Block 0x2f5
[0x2f5:0x336]
---
Predecessors: [0xa51]
Successors: []
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x40
0x2f8 MLOAD
0x2f9 DUP1
0x2fa DUP3
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 DUP2
0x328 MSTORE
0x329 PUSH1 0x20
0x32b ADD
0x32c SWAP2
0x32d POP
0x32e POP
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 SWAP2
0x334 SUB
0x335 SWAP1
0x336 RETURN
---
0x2f5: JUMPDEST 
0x2f6: V217 = 0x40
0x2f8: V218 = M[0x40]
0x2fb: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x311: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x328: M[V218] = V222
0x329: V223 = 0x20
0x32b: V224 = ADD 0x20 V218
0x32f: V225 = 0x40
0x331: V226 = M[0x40]
0x334: V227 = SUB V224 V226
0x336: RETURN V226 V227
---
Entry stack: [V10, 0x2f5, V614]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2f5]

================================

Block 0x337
[0x337:0x33d]
---
Predecessors: [0x8c]
Successors: [0x33e, 0x342]
---
0x337 JUMPDEST
0x338 CALLVALUE
0x339 ISZERO
0x33a PUSH2 0x342
0x33d JUMPI
---
0x337: JUMPDEST 
0x338: V228 = CALLVALUE
0x339: V229 = ISZERO V228
0x33a: V230 = 0x342
0x33d: JUMPI 0x342 V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x337]
Successors: []
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
---
0x33e: V231 = 0x0
0x341: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x342
[0x342:0x349]
---
Predecessors: [0x337]
Successors: [0xa77]
---
0x342 JUMPDEST
0x343 PUSH2 0x34a
0x346 PUSH2 0xa77
0x349 JUMP
---
0x342: JUMPDEST 
0x343: V232 = 0x34a
0x346: V233 = 0xa77
0x349: JUMP 0xa77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x34a]
Exit stack: [V10, 0x34a]

================================

Block 0x34a
[0x34a:0x36e]
---
Predecessors: [0xa77]
Successors: [0x36f]
---
0x34a JUMPDEST
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f DUP1
0x350 PUSH1 0x20
0x352 ADD
0x353 DUP3
0x354 DUP2
0x355 SUB
0x356 DUP3
0x357 MSTORE
0x358 DUP4
0x359 DUP2
0x35a DUP2
0x35b MLOAD
0x35c DUP2
0x35d MSTORE
0x35e PUSH1 0x20
0x360 ADD
0x361 SWAP2
0x362 POP
0x363 DUP1
0x364 MLOAD
0x365 SWAP1
0x366 PUSH1 0x20
0x368 ADD
0x369 SWAP1
0x36a DUP1
0x36b DUP4
0x36c DUP4
0x36d PUSH1 0x0
---
0x34a: JUMPDEST 
0x34b: V234 = 0x40
0x34d: V235 = M[0x40]
0x350: V236 = 0x20
0x352: V237 = ADD 0x20 V235
0x355: V238 = SUB V237 V235
0x357: M[V235] = V238
0x35b: V239 = M[V616]
0x35d: M[V237] = V239
0x35e: V240 = 0x20
0x360: V241 = ADD 0x20 V237
0x364: V242 = M[V616]
0x366: V243 = 0x20
0x368: V244 = ADD 0x20 V616
0x36d: V245 = 0x0
---
Entry stack: [V10, 0x34a, V616]
Stack pops: 1
Stack additions: [S0, V235, V235, V241, V244, V242, V242, V241, V244, 0x0]
Exit stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, 0x0]

================================

Block 0x36f
[0x36f:0x377]
---
Predecessors: [0x34a, 0x380]
Successors: [0x378, 0x38b]
---
0x36f JUMPDEST
0x370 DUP4
0x371 DUP2
0x372 LT
0x373 ISZERO
0x374 PUSH2 0x38b
0x377 JUMPI
---
0x36f: JUMPDEST 
0x372: V246 = LT S0 V242
0x373: V247 = ISZERO V246
0x374: V248 = 0x38b
0x377: JUMPI 0x38b V247
---
Entry stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, S0]

================================

Block 0x378
[0x378:0x37f]
---
Predecessors: [0x36f]
Successors: [0x380]
---
0x378 DUP1
0x379 DUP3
0x37a ADD
0x37b MLOAD
0x37c DUP2
0x37d DUP5
0x37e ADD
0x37f MSTORE
---
0x37a: V249 = ADD V244 S0
0x37b: V250 = M[V249]
0x37e: V251 = ADD V241 S0
0x37f: M[V251] = V250
---
Entry stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, S0]

================================

Block 0x380
[0x380:0x38a]
---
Predecessors: [0x378]
Successors: [0x36f]
---
0x380 JUMPDEST
0x381 PUSH1 0x20
0x383 DUP2
0x384 ADD
0x385 SWAP1
0x386 POP
0x387 PUSH2 0x36f
0x38a JUMP
---
0x380: JUMPDEST 
0x381: V252 = 0x20
0x384: V253 = ADD S0 0x20
0x387: V254 = 0x36f
0x38a: JUMP 0x36f
---
Entry stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, S0]
Stack pops: 1
Stack additions: [V253]
Exit stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, V253]

================================

Block 0x38b
[0x38b:0x39e]
---
Predecessors: [0x36f]
Successors: [0x39f, 0x3b8]
---
0x38b JUMPDEST
0x38c POP
0x38d POP
0x38e POP
0x38f POP
0x390 SWAP1
0x391 POP
0x392 SWAP1
0x393 DUP2
0x394 ADD
0x395 SWAP1
0x396 PUSH1 0x1f
0x398 AND
0x399 DUP1
0x39a ISZERO
0x39b PUSH2 0x3b8
0x39e JUMPI
---
0x38b: JUMPDEST 
0x394: V255 = ADD V242 V241
0x396: V256 = 0x1f
0x398: V257 = AND 0x1f V242
0x39a: V258 = ISZERO V257
0x39b: V259 = 0x3b8
0x39e: JUMPI 0x3b8 V258
---
Entry stack: [V10, 0x34a, V616, V235, V235, V241, V244, V242, V242, V241, V244, S0]
Stack pops: 7
Stack additions: [V255, V257]
Exit stack: [V10, 0x34a, V616, V235, V235, V255, V257]

================================

Block 0x39f
[0x39f:0x3b7]
---
Predecessors: [0x38b]
Successors: [0x3b8]
---
0x39f DUP1
0x3a0 DUP3
0x3a1 SUB
0x3a2 DUP1
0x3a3 MLOAD
0x3a4 PUSH1 0x1
0x3a6 DUP4
0x3a7 PUSH1 0x20
0x3a9 SUB
0x3aa PUSH2 0x100
0x3ad EXP
0x3ae SUB
0x3af NOT
0x3b0 AND
0x3b1 DUP2
0x3b2 MSTORE
0x3b3 PUSH1 0x20
0x3b5 ADD
0x3b6 SWAP2
0x3b7 POP
---
0x3a1: V260 = SUB V255 V257
0x3a3: V261 = M[V260]
0x3a4: V262 = 0x1
0x3a7: V263 = 0x20
0x3a9: V264 = SUB 0x20 V257
0x3aa: V265 = 0x100
0x3ad: V266 = EXP 0x100 V264
0x3ae: V267 = SUB V266 0x1
0x3af: V268 = NOT V267
0x3b0: V269 = AND V268 V261
0x3b2: M[V260] = V269
0x3b3: V270 = 0x20
0x3b5: V271 = ADD 0x20 V260
---
Entry stack: [V10, 0x34a, V616, V235, V235, V255, V257]
Stack pops: 2
Stack additions: [V271, S0]
Exit stack: [V10, 0x34a, V616, V235, V235, V271, V257]

================================

Block 0x3b8
[0x3b8:0x3c5]
---
Predecessors: [0x38b, 0x39f]
Successors: []
---
0x3b8 JUMPDEST
0x3b9 POP
0x3ba SWAP3
0x3bb POP
0x3bc POP
0x3bd POP
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 DUP1
0x3c2 SWAP2
0x3c3 SUB
0x3c4 SWAP1
0x3c5 RETURN
---
0x3b8: JUMPDEST 
0x3be: V272 = 0x40
0x3c0: V273 = M[0x40]
0x3c3: V274 = SUB S1 V273
0x3c5: RETURN V273 V274
---
Entry stack: [V10, 0x34a, V616, V235, V235, S1, V257]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x34a]

================================

Block 0x3c6
[0x3c6:0x3cc]
---
Predecessors: [0x97]
Successors: [0x3cd, 0x3d1]
---
0x3c6 JUMPDEST
0x3c7 CALLVALUE
0x3c8 ISZERO
0x3c9 PUSH2 0x3d1
0x3cc JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V275 = CALLVALUE
0x3c8: V276 = ISZERO V275
0x3c9: V277 = 0x3d1
0x3cc: JUMPI 0x3d1 V276
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x3c6]
Successors: []
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
---
0x3cd: V278 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d1
[0x3d1:0x405]
---
Predecessors: [0x3c6]
Successors: [0xab0]
---
0x3d1 JUMPDEST
0x3d2 PUSH2 0x406
0x3d5 PUSH1 0x4
0x3d7 DUP1
0x3d8 DUP1
0x3d9 CALLDATALOAD
0x3da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ef AND
0x3f0 SWAP1
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 SWAP1
0x3f5 SWAP2
0x3f6 SWAP1
0x3f7 DUP1
0x3f8 CALLDATALOAD
0x3f9 SWAP1
0x3fa PUSH1 0x20
0x3fc ADD
0x3fd SWAP1
0x3fe SWAP2
0x3ff SWAP1
0x400 POP
0x401 POP
0x402 PUSH2 0xab0
0x405 JUMP
---
0x3d1: JUMPDEST 
0x3d2: V279 = 0x406
0x3d5: V280 = 0x4
0x3d9: V281 = CALLDATALOAD 0x4
0x3da: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x3f1: V284 = 0x20
0x3f3: V285 = ADD 0x20 0x4
0x3f8: V286 = CALLDATALOAD 0x24
0x3fa: V287 = 0x20
0x3fc: V288 = ADD 0x20 0x24
0x402: V289 = 0xab0
0x405: JUMP 0xab0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x406, V283, V286]
Exit stack: [V10, 0x406, V283, V286]

================================

Block 0x406
[0x406:0x41f]
---
Predecessors: [0xca8]
Successors: []
---
0x406 JUMPDEST
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b DUP3
0x40c ISZERO
0x40d ISZERO
0x40e ISZERO
0x40f ISZERO
0x410 DUP2
0x411 MSTORE
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP2
0x416 POP
0x417 POP
0x418 PUSH1 0x40
0x41a MLOAD
0x41b DUP1
0x41c SWAP2
0x41d SUB
0x41e SWAP1
0x41f RETURN
---
0x406: JUMPDEST 
0x407: V290 = 0x40
0x409: V291 = M[0x40]
0x40c: V292 = ISZERO {0x0, 0x1}
0x40d: V293 = ISZERO V292
0x40e: V294 = ISZERO V293
0x40f: V295 = ISZERO V294
0x411: M[V291] = V295
0x412: V296 = 0x20
0x414: V297 = ADD 0x20 V291
0x418: V298 = 0x40
0x41a: V299 = M[0x40]
0x41d: V300 = SUB V297 V299
0x41f: RETURN V299 V300
---
Entry stack: [V10, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x420
[0x420:0x426]
---
Predecessors: [0xa2]
Successors: [0x427, 0x42b]
---
0x420 JUMPDEST
0x421 CALLVALUE
0x422 ISZERO
0x423 PUSH2 0x42b
0x426 JUMPI
---
0x420: JUMPDEST 
0x421: V301 = CALLVALUE
0x422: V302 = ISZERO V301
0x423: V303 = 0x42b
0x426: JUMPI 0x42b V302
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x427
[0x427:0x42a]
---
Predecessors: [0x420]
Successors: []
---
0x427 PUSH1 0x0
0x429 DUP1
0x42a REVERT
---
0x427: V304 = 0x0
0x42a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42b
[0x42b:0x475]
---
Predecessors: [0x420]
Successors: [0xcae]
---
0x42b JUMPDEST
0x42c PUSH2 0x476
0x42f PUSH1 0x4
0x431 DUP1
0x432 DUP1
0x433 CALLDATALOAD
0x434 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x449 AND
0x44a SWAP1
0x44b PUSH1 0x20
0x44d ADD
0x44e SWAP1
0x44f SWAP2
0x450 SWAP1
0x451 DUP1
0x452 CALLDATALOAD
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 SWAP1
0x46a PUSH1 0x20
0x46c ADD
0x46d SWAP1
0x46e SWAP2
0x46f SWAP1
0x470 POP
0x471 POP
0x472 PUSH2 0xcae
0x475 JUMP
---
0x42b: JUMPDEST 
0x42c: V305 = 0x476
0x42f: V306 = 0x4
0x433: V307 = CALLDATALOAD 0x4
0x434: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x449: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x44b: V310 = 0x20
0x44d: V311 = ADD 0x20 0x4
0x452: V312 = CALLDATALOAD 0x24
0x453: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x46a: V315 = 0x20
0x46c: V316 = ADD 0x20 0x24
0x472: V317 = 0xcae
0x475: JUMP 0xcae
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x476, V309, V314]
Exit stack: [V10, 0x476, V309, V314]

================================

Block 0x476
[0x476:0x48b]
---
Predecessors: [0xd30]
Successors: []
---
0x476 JUMPDEST
0x477 PUSH1 0x40
0x479 MLOAD
0x47a DUP1
0x47b DUP3
0x47c DUP2
0x47d MSTORE
0x47e PUSH1 0x20
0x480 ADD
0x481 SWAP2
0x482 POP
0x483 POP
0x484 PUSH1 0x40
0x486 MLOAD
0x487 DUP1
0x488 SWAP2
0x489 SUB
0x48a SWAP1
0x48b RETURN
---
0x476: JUMPDEST 
0x477: V318 = 0x40
0x479: V319 = M[0x40]
0x47d: M[V319] = V747
0x47e: V320 = 0x20
0x480: V321 = ADD 0x20 V319
0x484: V322 = 0x40
0x486: V323 = M[0x40]
0x489: V324 = SUB V321 V323
0x48b: RETURN V323 V324
---
Entry stack: [V10, V747]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x48c
[0x48c:0x4c4]
---
Predecessors: [0xbd]
Successors: [0xc5]
---
0x48c JUMPDEST
0x48d PUSH1 0x40
0x48f DUP1
0x490 MLOAD
0x491 SWAP1
0x492 DUP2
0x493 ADD
0x494 PUSH1 0x40
0x496 MSTORE
0x497 DUP1
0x498 PUSH1 0xa
0x49a DUP2
0x49b MSTORE
0x49c PUSH1 0x20
0x49e ADD
0x49f PUSH32 0x50726f74656374686f7200000000000000000000000000000000000000000000
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 POP
0x4c3 DUP2
0x4c4 JUMP
---
0x48c: JUMPDEST 
0x48d: V325 = 0x40
0x490: V326 = M[0x40]
0x493: V327 = ADD V326 0x40
0x494: V328 = 0x40
0x496: M[0x40] = V327
0x498: V329 = 0xa
0x49b: M[V326] = 0xa
0x49c: V330 = 0x20
0x49e: V331 = ADD 0x20 V326
0x49f: V332 = 0x50726f74656374686f7200000000000000000000000000000000000000000000
0x4c1: M[V331] = 0x50726f74656374686f7200000000000000000000000000000000000000000000
0x4c4: JUMP 0xc5
---
Entry stack: [V10, 0xc5]
Stack pops: 1
Stack additions: [S0, V326]
Exit stack: [V10, 0xc5, V326]

================================

Block 0x4c5
[0x4c5:0x510]
---
Predecessors: [0x14c]
Successors: [0x511, 0x516]
---
0x4c5 JUMPDEST
0x4c6 PUSH1 0x0
0x4c8 DUP2
0x4c9 PUSH1 0x2
0x4cb PUSH1 0x0
0x4cd CALLER
0x4ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e3 AND
0x4e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f9 AND
0x4fa DUP2
0x4fb MSTORE
0x4fc PUSH1 0x20
0x4fe ADD
0x4ff SWAP1
0x500 DUP2
0x501 MSTORE
0x502 PUSH1 0x20
0x504 ADD
0x505 PUSH1 0x0
0x507 SHA3
0x508 SLOAD
0x509 LT
0x50a ISZERO
0x50b DUP1
0x50c ISZERO
0x50d PUSH2 0x516
0x510 JUMPI
---
0x4c5: JUMPDEST 
0x4c6: V333 = 0x0
0x4c9: V334 = 0x2
0x4cb: V335 = 0x0
0x4cd: V336 = CALLER
0x4ce: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x4e4: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x4fb: M[0x0] = V340
0x4fc: V341 = 0x20
0x4fe: V342 = ADD 0x20 0x0
0x501: M[0x20] = 0x2
0x502: V343 = 0x20
0x504: V344 = ADD 0x20 0x20
0x505: V345 = 0x0
0x507: V346 = SHA3 0x0 0x40
0x508: V347 = S[V346]
0x509: V348 = LT V347 V103
0x50a: V349 = ISZERO V348
0x50c: V350 = ISZERO V349
0x50d: V351 = 0x516
0x510: JUMPI 0x516 V350
---
Entry stack: [V10, 0x181, V100, V103]
Stack pops: 1
Stack additions: [S0, 0x0, V349]
Exit stack: [V10, 0x181, V100, V103, 0x0, V349]

================================

Block 0x511
[0x511:0x515]
---
Predecessors: [0x4c5]
Successors: [0x516]
---
0x511 POP
0x512 PUSH1 0x0
0x514 DUP3
0x515 GT
---
0x512: V352 = 0x0
0x515: V353 = GT V103 0x0
---
Entry stack: [V10, 0x181, V100, V103, 0x0, V349]
Stack pops: 3
Stack additions: [S2, S1, V353]
Exit stack: [V10, 0x181, V100, V103, 0x0, V353]

================================

Block 0x516
[0x516:0x51b]
---
Predecessors: [0x4c5, 0x511]
Successors: [0x51c, 0x60a]
---
0x516 JUMPDEST
0x517 ISZERO
0x518 PUSH2 0x60a
0x51b JUMPI
---
0x516: JUMPDEST 
0x517: V354 = ISZERO S0
0x518: V355 = 0x60a
0x51b: JUMPI 0x60a V354
---
Entry stack: [V10, 0x181, V100, V103, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x181, V100, V103, 0x0]

================================

Block 0x51c
[0x51c:0x609]
---
Predecessors: [0x516]
Successors: [0x614]
---
0x51c DUP2
0x51d PUSH1 0x3
0x51f PUSH1 0x0
0x521 CALLER
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54d AND
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x20
0x552 ADD
0x553 SWAP1
0x554 DUP2
0x555 MSTORE
0x556 PUSH1 0x20
0x558 ADD
0x559 PUSH1 0x0
0x55b SHA3
0x55c PUSH1 0x0
0x55e DUP6
0x55f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x574 AND
0x575 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58a AND
0x58b DUP2
0x58c MSTORE
0x58d PUSH1 0x20
0x58f ADD
0x590 SWAP1
0x591 DUP2
0x592 MSTORE
0x593 PUSH1 0x20
0x595 ADD
0x596 PUSH1 0x0
0x598 SHA3
0x599 DUP2
0x59a SWAP1
0x59b SSTORE
0x59c POP
0x59d DUP3
0x59e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b3 AND
0x5b4 CALLER
0x5b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ca AND
0x5cb PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5ec DUP5
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP1
0x5f1 DUP3
0x5f2 DUP2
0x5f3 MSTORE
0x5f4 PUSH1 0x20
0x5f6 ADD
0x5f7 SWAP2
0x5f8 POP
0x5f9 POP
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd DUP1
0x5fe SWAP2
0x5ff SUB
0x600 SWAP1
0x601 LOG3
0x602 PUSH1 0x1
0x604 SWAP1
0x605 POP
0x606 PUSH2 0x614
0x609 JUMP
---
0x51d: V356 = 0x3
0x51f: V357 = 0x0
0x521: V358 = CALLER
0x522: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x538: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x54d: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x54f: M[0x0] = V362
0x550: V363 = 0x20
0x552: V364 = ADD 0x20 0x0
0x555: M[0x20] = 0x3
0x556: V365 = 0x20
0x558: V366 = ADD 0x20 0x20
0x559: V367 = 0x0
0x55b: V368 = SHA3 0x0 0x40
0x55c: V369 = 0x0
0x55f: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x574: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x575: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x58c: M[0x0] = V373
0x58d: V374 = 0x20
0x58f: V375 = ADD 0x20 0x0
0x592: M[0x20] = V368
0x593: V376 = 0x20
0x595: V377 = ADD 0x20 0x20
0x596: V378 = 0x0
0x598: V379 = SHA3 0x0 0x40
0x59b: S[V379] = V103
0x59e: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b3: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x5b4: V382 = CALLER
0x5b5: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x5cb: V385 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5ed: V386 = 0x40
0x5ef: V387 = M[0x40]
0x5f3: M[V387] = V103
0x5f4: V388 = 0x20
0x5f6: V389 = ADD 0x20 V387
0x5fa: V390 = 0x40
0x5fc: V391 = M[0x40]
0x5ff: V392 = SUB V389 V391
0x601: LOG V391 V392 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V384 V381
0x602: V393 = 0x1
0x606: V394 = 0x614
0x609: JUMP 0x614
---
Entry stack: [V10, 0x181, V100, V103, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x181, V100, V103, 0x1]

================================

Block 0x60a
[0x60a:0x612]
---
Predecessors: [0x516]
Successors: [0x614]
---
0x60a JUMPDEST
0x60b PUSH1 0x0
0x60d SWAP1
0x60e POP
0x60f PUSH2 0x614
0x612 JUMP
---
0x60a: JUMPDEST 
0x60b: V395 = 0x0
0x60f: V396 = 0x614
0x612: JUMP 0x614
---
Entry stack: [V10, 0x181, V100, V103, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x181, V100, V103, 0x0]

================================

Block 0x613
[0x613:0x613]
---
Predecessors: []
Successors: [0x614]
---
0x613 JUMPDEST
---
0x613: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x614
[0x614:0x619]
---
Predecessors: [0x51c, 0x60a, 0x613]
Successors: [0x181]
---
0x614 JUMPDEST
0x615 SWAP3
0x616 SWAP2
0x617 POP
0x618 POP
0x619 JUMP
---
0x614: JUMPDEST 
0x619: JUMP 0x181
---
Entry stack: [V10, 0x181, V100, V103, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x61a
[0x61a:0x620]
---
Predecessors: [0x1a6]
Successors: [0x621]
---
0x61a JUMPDEST
0x61b PUSH1 0x0
0x61d DUP1
0x61e SLOAD
0x61f SWAP1
0x620 POP
---
0x61a: JUMPDEST 
0x61b: V397 = 0x0
0x61e: V398 = S[0x0]
---
Entry stack: [V10, 0x1ae]
Stack pops: 0
Stack additions: [V398]
Exit stack: [V10, 0x1ae, V398]

================================

Block 0x621
[0x621:0x623]
---
Predecessors: [0x61a]
Successors: [0x1ae]
---
0x621 JUMPDEST
0x622 SWAP1
0x623 JUMP
---
0x621: JUMPDEST 
0x623: JUMP 0x1ae
---
Entry stack: [V10, 0x1ae, V398]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V398]

================================

Block 0x624
[0x624:0x66f]
---
Predecessors: [0x1cf]
Successors: [0x670, 0x6f1]
---
0x624 JUMPDEST
0x625 PUSH1 0x0
0x627 DUP2
0x628 PUSH1 0x2
0x62a PUSH1 0x0
0x62c DUP7
0x62d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x642 AND
0x643 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x658 AND
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x20
0x65d ADD
0x65e SWAP1
0x65f DUP2
0x660 MSTORE
0x661 PUSH1 0x20
0x663 ADD
0x664 PUSH1 0x0
0x666 SHA3
0x667 SLOAD
0x668 LT
0x669 ISZERO
0x66a DUP1
0x66b ISZERO
0x66c PUSH2 0x6f1
0x66f JUMPI
---
0x624: JUMPDEST 
0x625: V399 = 0x0
0x628: V400 = 0x2
0x62a: V401 = 0x0
0x62d: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x642: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x643: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x658: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x65a: M[0x0] = V405
0x65b: V406 = 0x20
0x65d: V407 = ADD 0x20 0x0
0x660: M[0x20] = 0x2
0x661: V408 = 0x20
0x663: V409 = ADD 0x20 0x20
0x664: V410 = 0x0
0x666: V411 = SHA3 0x0 0x40
0x667: V412 = S[V411]
0x668: V413 = LT V412 V147
0x669: V414 = ISZERO V413
0x66b: V415 = ISZERO V414
0x66c: V416 = 0x6f1
0x66f: JUMPI 0x6f1 V415
---
Entry stack: [V10, 0x223, V139, V144, V147]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V414]
Exit stack: [V10, 0x223, V139, V144, V147, 0x0, V414]

================================

Block 0x670
[0x670:0x6f0]
---
Predecessors: [0x624]
Successors: [0x6f1]
---
0x670 POP
0x671 DUP2
0x672 PUSH1 0x3
0x674 PUSH1 0x0
0x676 DUP7
0x677 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68c AND
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 AND
0x6a3 DUP2
0x6a4 MSTORE
0x6a5 PUSH1 0x20
0x6a7 ADD
0x6a8 SWAP1
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x20
0x6ad ADD
0x6ae PUSH1 0x0
0x6b0 SHA3
0x6b1 PUSH1 0x0
0x6b3 CALLER
0x6b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c9 AND
0x6ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6df AND
0x6e0 DUP2
0x6e1 MSTORE
0x6e2 PUSH1 0x20
0x6e4 ADD
0x6e5 SWAP1
0x6e6 DUP2
0x6e7 MSTORE
0x6e8 PUSH1 0x20
0x6ea ADD
0x6eb PUSH1 0x0
0x6ed SHA3
0x6ee SLOAD
0x6ef LT
0x6f0 ISZERO
---
0x672: V417 = 0x3
0x674: V418 = 0x0
0x677: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x68c: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x68d: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x6a4: M[0x0] = V422
0x6a5: V423 = 0x20
0x6a7: V424 = ADD 0x20 0x0
0x6aa: M[0x20] = 0x3
0x6ab: V425 = 0x20
0x6ad: V426 = ADD 0x20 0x20
0x6ae: V427 = 0x0
0x6b0: V428 = SHA3 0x0 0x40
0x6b1: V429 = 0x0
0x6b3: V430 = CALLER
0x6b4: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x6ca: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x6e1: M[0x0] = V434
0x6e2: V435 = 0x20
0x6e4: V436 = ADD 0x20 0x0
0x6e7: M[0x20] = V428
0x6e8: V437 = 0x20
0x6ea: V438 = ADD 0x20 0x20
0x6eb: V439 = 0x0
0x6ed: V440 = SHA3 0x0 0x40
0x6ee: V441 = S[V440]
0x6ef: V442 = LT V441 V147
0x6f0: V443 = ISZERO V442
---
Entry stack: [V10, 0x223, V139, V144, V147, 0x0, V414]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V443]
Exit stack: [V10, 0x223, V139, V144, V147, 0x0, V443]

================================

Block 0x6f1
[0x6f1:0x6f7]
---
Predecessors: [0x624, 0x670]
Successors: [0x6f8, 0x6fd]
---
0x6f1 JUMPDEST
0x6f2 DUP1
0x6f3 ISZERO
0x6f4 PUSH2 0x6fd
0x6f7 JUMPI
---
0x6f1: JUMPDEST 
0x6f3: V444 = ISZERO S0
0x6f4: V445 = 0x6fd
0x6f7: JUMPI 0x6fd V444
---
Entry stack: [V10, 0x223, V139, V144, V147, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x223, V139, V144, V147, 0x0, S0]

================================

Block 0x6f8
[0x6f8:0x6fc]
---
Predecessors: [0x6f1]
Successors: [0x6fd]
---
0x6f8 POP
0x6f9 PUSH1 0x0
0x6fb DUP3
0x6fc GT
---
0x6f9: V446 = 0x0
0x6fc: V447 = GT V147 0x0
---
Entry stack: [V10, 0x223, V139, V144, V147, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V447]
Exit stack: [V10, 0x223, V139, V144, V147, 0x0, V447]

================================

Block 0x6fd
[0x6fd:0x702]
---
Predecessors: [0x6f1, 0x6f8]
Successors: [0x703, 0x9a9]
---
0x6fd JUMPDEST
0x6fe ISZERO
0x6ff PUSH2 0x9a9
0x702 JUMPI
---
0x6fd: JUMPDEST 
0x6fe: V448 = ISZERO S0
0x6ff: V449 = 0x9a9
0x702: JUMPI 0x9a9 V448
---
Entry stack: [V10, 0x223, V139, V144, V147, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x223, V139, V144, V147, 0x0]

================================

Block 0x703
[0x703:0x753]
---
Predecessors: [0x6fd]
Successors: [0xd36]
---
0x703 PUSH2 0x754
0x706 DUP3
0x707 PUSH1 0x2
0x709 PUSH1 0x0
0x70b DUP8
0x70c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x721 AND
0x722 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x737 AND
0x738 DUP2
0x739 MSTORE
0x73a PUSH1 0x20
0x73c ADD
0x73d SWAP1
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 ADD
0x743 PUSH1 0x0
0x745 SHA3
0x746 SLOAD
0x747 PUSH2 0xd36
0x74a SWAP1
0x74b SWAP2
0x74c SWAP1
0x74d PUSH4 0xffffffff
0x752 AND
0x753 JUMP
---
0x703: V450 = 0x754
0x707: V451 = 0x2
0x709: V452 = 0x0
0x70c: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x721: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x722: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x737: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x739: M[0x0] = V456
0x73a: V457 = 0x20
0x73c: V458 = ADD 0x20 0x0
0x73f: M[0x20] = 0x2
0x740: V459 = 0x20
0x742: V460 = ADD 0x20 0x20
0x743: V461 = 0x0
0x745: V462 = SHA3 0x0 0x40
0x746: V463 = S[V462]
0x747: V464 = 0xd36
0x74d: V465 = 0xffffffff
0x752: V466 = AND 0xffffffff 0xd36
0x753: JUMP 0xd36
---
Entry stack: [V10, 0x223, V139, V144, V147, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x754, V463, S1]
Exit stack: [V10, 0x223, V139, V144, V147, 0x0, 0x754, V463, V147]

================================

Block 0x754
[0x754:0x825]
---
Predecessors: [0xd4a]
Successors: [0xd36]
---
0x754 JUMPDEST
0x755 PUSH1 0x2
0x757 PUSH1 0x0
0x759 DUP7
0x75a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76f AND
0x770 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x785 AND
0x786 DUP2
0x787 MSTORE
0x788 PUSH1 0x20
0x78a ADD
0x78b SWAP1
0x78c DUP2
0x78d MSTORE
0x78e PUSH1 0x20
0x790 ADD
0x791 PUSH1 0x0
0x793 SHA3
0x794 DUP2
0x795 SWAP1
0x796 SSTORE
0x797 POP
0x798 PUSH2 0x826
0x79b DUP3
0x79c PUSH1 0x3
0x79e PUSH1 0x0
0x7a0 DUP8
0x7a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b6 AND
0x7b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cc AND
0x7cd DUP2
0x7ce MSTORE
0x7cf PUSH1 0x20
0x7d1 ADD
0x7d2 SWAP1
0x7d3 DUP2
0x7d4 MSTORE
0x7d5 PUSH1 0x20
0x7d7 ADD
0x7d8 PUSH1 0x0
0x7da SHA3
0x7db PUSH1 0x0
0x7dd CALLER
0x7de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f3 AND
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 AND
0x80a DUP2
0x80b MSTORE
0x80c PUSH1 0x20
0x80e ADD
0x80f SWAP1
0x810 DUP2
0x811 MSTORE
0x812 PUSH1 0x20
0x814 ADD
0x815 PUSH1 0x0
0x817 SHA3
0x818 SLOAD
0x819 PUSH2 0xd36
0x81c SWAP1
0x81d SWAP2
0x81e SWAP1
0x81f PUSH4 0xffffffff
0x824 AND
0x825 JUMP
---
0x754: JUMPDEST 
0x755: V467 = 0x2
0x757: V468 = 0x0
0x75a: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x76f: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x770: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x785: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x787: M[0x0] = V472
0x788: V473 = 0x20
0x78a: V474 = ADD 0x20 0x0
0x78d: M[0x20] = 0x2
0x78e: V475 = 0x20
0x790: V476 = ADD 0x20 0x20
0x791: V477 = 0x0
0x793: V478 = SHA3 0x0 0x40
0x796: S[V478] = S0
0x798: V479 = 0x826
0x79c: V480 = 0x3
0x79e: V481 = 0x0
0x7a1: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x7b7: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x7ce: M[0x0] = V485
0x7cf: V486 = 0x20
0x7d1: V487 = ADD 0x20 0x0
0x7d4: M[0x20] = 0x3
0x7d5: V488 = 0x20
0x7d7: V489 = ADD 0x20 0x20
0x7d8: V490 = 0x0
0x7da: V491 = SHA3 0x0 0x40
0x7db: V492 = 0x0
0x7dd: V493 = CALLER
0x7de: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f3: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x7f4: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x80b: M[0x0] = V497
0x80c: V498 = 0x20
0x80e: V499 = ADD 0x20 0x0
0x811: M[0x20] = V491
0x812: V500 = 0x20
0x814: V501 = ADD 0x20 0x20
0x815: V502 = 0x0
0x817: V503 = SHA3 0x0 0x40
0x818: V504 = S[V503]
0x819: V505 = 0xd36
0x81f: V506 = 0xffffffff
0x824: V507 = AND 0xffffffff 0xd36
0x825: JUMP 0xd36
---
Entry stack: [V10, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x826, V504, S2]
Exit stack: [V10, S5, S4, S3, S2, 0x0, 0x826, V504, S2]

================================

Block 0x826
[0x826:0x8f7]
---
Predecessors: [0xd4a]
Successors: [0xd50]
---
0x826 JUMPDEST
0x827 PUSH1 0x3
0x829 PUSH1 0x0
0x82b DUP7
0x82c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x841 AND
0x842 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x857 AND
0x858 DUP2
0x859 MSTORE
0x85a PUSH1 0x20
0x85c ADD
0x85d SWAP1
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 PUSH1 0x0
0x865 SHA3
0x866 PUSH1 0x0
0x868 CALLER
0x869 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87e AND
0x87f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x894 AND
0x895 DUP2
0x896 MSTORE
0x897 PUSH1 0x20
0x899 ADD
0x89a SWAP1
0x89b DUP2
0x89c MSTORE
0x89d PUSH1 0x20
0x89f ADD
0x8a0 PUSH1 0x0
0x8a2 SHA3
0x8a3 DUP2
0x8a4 SWAP1
0x8a5 SSTORE
0x8a6 POP
0x8a7 PUSH2 0x8f8
0x8aa DUP3
0x8ab PUSH1 0x2
0x8ad PUSH1 0x0
0x8af DUP7
0x8b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c5 AND
0x8c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8db AND
0x8dc DUP2
0x8dd MSTORE
0x8de PUSH1 0x20
0x8e0 ADD
0x8e1 SWAP1
0x8e2 DUP2
0x8e3 MSTORE
0x8e4 PUSH1 0x20
0x8e6 ADD
0x8e7 PUSH1 0x0
0x8e9 SHA3
0x8ea SLOAD
0x8eb PUSH2 0xd50
0x8ee SWAP1
0x8ef SWAP2
0x8f0 SWAP1
0x8f1 PUSH4 0xffffffff
0x8f6 AND
0x8f7 JUMP
---
0x826: JUMPDEST 
0x827: V508 = 0x3
0x829: V509 = 0x0
0x82c: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x841: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x842: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x857: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x859: M[0x0] = V513
0x85a: V514 = 0x20
0x85c: V515 = ADD 0x20 0x0
0x85f: M[0x20] = 0x3
0x860: V516 = 0x20
0x862: V517 = ADD 0x20 0x20
0x863: V518 = 0x0
0x865: V519 = SHA3 0x0 0x40
0x866: V520 = 0x0
0x868: V521 = CALLER
0x869: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x87e: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x87f: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x894: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x896: M[0x0] = V525
0x897: V526 = 0x20
0x899: V527 = ADD 0x20 0x0
0x89c: M[0x20] = V519
0x89d: V528 = 0x20
0x89f: V529 = ADD 0x20 0x20
0x8a0: V530 = 0x0
0x8a2: V531 = SHA3 0x0 0x40
0x8a5: S[V531] = S0
0x8a7: V532 = 0x8f8
0x8ab: V533 = 0x2
0x8ad: V534 = 0x0
0x8b0: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c5: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8c6: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x8db: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x8dd: M[0x0] = V538
0x8de: V539 = 0x20
0x8e0: V540 = ADD 0x20 0x0
0x8e3: M[0x20] = 0x2
0x8e4: V541 = 0x20
0x8e6: V542 = ADD 0x20 0x20
0x8e7: V543 = 0x0
0x8e9: V544 = SHA3 0x0 0x40
0x8ea: V545 = S[V544]
0x8eb: V546 = 0xd50
0x8f1: V547 = 0xffffffff
0x8f6: V548 = AND 0xffffffff 0xd50
0x8f7: JUMP 0xd50
---
Entry stack: [V10, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x8f8, V545, S2]
Exit stack: [V10, S5, S4, S3, S2, 0x0, 0x8f8, V545, S2]

================================

Block 0x8f8
[0x8f8:0x9a8]
---
Predecessors: [0xd68]
Successors: [0x9b3]
---
0x8f8 JUMPDEST
0x8f9 PUSH1 0x2
0x8fb PUSH1 0x0
0x8fd DUP6
0x8fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x913 AND
0x914 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x929 AND
0x92a DUP2
0x92b MSTORE
0x92c PUSH1 0x20
0x92e ADD
0x92f SWAP1
0x930 DUP2
0x931 MSTORE
0x932 PUSH1 0x20
0x934 ADD
0x935 PUSH1 0x0
0x937 SHA3
0x938 DUP2
0x939 SWAP1
0x93a SSTORE
0x93b POP
0x93c DUP3
0x93d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x952 AND
0x953 DUP5
0x954 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x969 AND
0x96a PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x98b DUP5
0x98c PUSH1 0x40
0x98e MLOAD
0x98f DUP1
0x990 DUP3
0x991 DUP2
0x992 MSTORE
0x993 PUSH1 0x20
0x995 ADD
0x996 SWAP2
0x997 POP
0x998 POP
0x999 PUSH1 0x40
0x99b MLOAD
0x99c DUP1
0x99d SWAP2
0x99e SUB
0x99f SWAP1
0x9a0 LOG3
0x9a1 PUSH1 0x1
0x9a3 SWAP1
0x9a4 POP
0x9a5 PUSH2 0x9b3
0x9a8 JUMP
---
0x8f8: JUMPDEST 
0x8f9: V549 = 0x2
0x8fb: V550 = 0x0
0x8fe: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x913: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x914: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x929: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x92b: M[0x0] = V554
0x92c: V555 = 0x20
0x92e: V556 = ADD 0x20 0x0
0x931: M[0x20] = 0x2
0x932: V557 = 0x20
0x934: V558 = ADD 0x20 0x20
0x935: V559 = 0x0
0x937: V560 = SHA3 0x0 0x40
0x93a: S[V560] = S0
0x93d: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x952: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x954: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x969: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x96a: V565 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x98c: V566 = 0x40
0x98e: V567 = M[0x40]
0x992: M[V567] = S2
0x993: V568 = 0x20
0x995: V569 = ADD 0x20 V567
0x999: V570 = 0x40
0x99b: V571 = M[0x40]
0x99e: V572 = SUB V569 V571
0x9a0: LOG V571 V572 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V564 V562
0x9a1: V573 = 0x1
0x9a5: V574 = 0x9b3
0x9a8: JUMP 0x9b3
---
Entry stack: [V10, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, 0x1]
Exit stack: [V10, S5, S4, S3, S2, 0x1]

================================

Block 0x9a9
[0x9a9:0x9b1]
---
Predecessors: [0x6fd]
Successors: [0x9b3]
---
0x9a9 JUMPDEST
0x9aa PUSH1 0x0
0x9ac SWAP1
0x9ad POP
0x9ae PUSH2 0x9b3
0x9b1 JUMP
---
0x9a9: JUMPDEST 
0x9aa: V575 = 0x0
0x9ae: V576 = 0x9b3
0x9b1: JUMP 0x9b3
---
Entry stack: [V10, 0x223, V139, V144, V147, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x223, V139, V144, V147, 0x0]

================================

Block 0x9b2
[0x9b2:0x9b2]
---
Predecessors: []
Successors: [0x9b3]
---
0x9b2 JUMPDEST
---
0x9b2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9b3
[0x9b3:0x9b9]
---
Predecessors: [0x8f8, 0x9a9, 0x9b2]
Successors: [0x223]
---
0x9b3 JUMPDEST
0x9b4 SWAP4
0x9b5 SWAP3
0x9b6 POP
0x9b7 POP
0x9b8 POP
0x9b9 JUMP
---
0x9b3: JUMPDEST 
0x9b9: JUMP S4
---
Entry stack: [V10, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x9ba
[0x9ba:0x9be]
---
Predecessors: [0x248]
Successors: [0x250]
---
0x9ba JUMPDEST
0x9bb PUSH1 0x12
0x9bd DUP2
0x9be JUMP
---
0x9ba: JUMPDEST 
0x9bb: V577 = 0x12
0x9be: JUMP 0x250
---
Entry stack: [V10, 0x250]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x250, 0x12]

================================

Block 0x9bf
[0x9bf:0xa03]
---
Predecessors: [0x277]
Successors: [0xa04]
---
0x9bf JUMPDEST
0x9c0 PUSH1 0x0
0x9c2 PUSH1 0x2
0x9c4 PUSH1 0x0
0x9c6 CALLER
0x9c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9dc AND
0x9dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f2 AND
0x9f3 DUP2
0x9f4 MSTORE
0x9f5 PUSH1 0x20
0x9f7 ADD
0x9f8 SWAP1
0x9f9 DUP2
0x9fa MSTORE
0x9fb PUSH1 0x20
0x9fd ADD
0x9fe PUSH1 0x0
0xa00 SHA3
0xa01 SLOAD
0xa02 SWAP1
0xa03 POP
---
0x9bf: JUMPDEST 
0x9c0: V578 = 0x0
0x9c2: V579 = 0x2
0x9c4: V580 = 0x0
0x9c6: V581 = CALLER
0x9c7: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0x9dc: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x9dd: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f2: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x9f4: M[0x0] = V585
0x9f5: V586 = 0x20
0x9f7: V587 = ADD 0x20 0x0
0x9fa: M[0x20] = 0x2
0x9fb: V588 = 0x20
0x9fd: V589 = ADD 0x20 0x20
0x9fe: V590 = 0x0
0xa00: V591 = SHA3 0x0 0x40
0xa01: V592 = S[V591]
---
Entry stack: [V10, 0x27f]
Stack pops: 0
Stack additions: [V592]
Exit stack: [V10, 0x27f, V592]

================================

Block 0xa04
[0xa04:0xa06]
---
Predecessors: [0x9bf]
Successors: [0x27f]
---
0xa04 JUMPDEST
0xa05 SWAP1
0xa06 JUMP
---
0xa04: JUMPDEST 
0xa06: JUMP 0x27f
---
Entry stack: [V10, 0x27f, V592]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V592]

================================

Block 0xa07
[0xa07:0xa4b]
---
Predecessors: [0x2a0]
Successors: [0xa4c]
---
0xa07 JUMPDEST
0xa08 PUSH1 0x0
0xa0a PUSH1 0x2
0xa0c PUSH1 0x0
0xa0e DUP4
0xa0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa24 AND
0xa25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3a AND
0xa3b DUP2
0xa3c MSTORE
0xa3d PUSH1 0x20
0xa3f ADD
0xa40 SWAP1
0xa41 DUP2
0xa42 MSTORE
0xa43 PUSH1 0x20
0xa45 ADD
0xa46 PUSH1 0x0
0xa48 SHA3
0xa49 SLOAD
0xa4a SWAP1
0xa4b POP
---
0xa07: JUMPDEST 
0xa08: V593 = 0x0
0xa0a: V594 = 0x2
0xa0c: V595 = 0x0
0xa0f: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0xa24: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0xa25: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3a: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0xa3c: M[0x0] = V599
0xa3d: V600 = 0x20
0xa3f: V601 = ADD 0x20 0x0
0xa42: M[0x20] = 0x2
0xa43: V602 = 0x20
0xa45: V603 = ADD 0x20 0x20
0xa46: V604 = 0x0
0xa48: V605 = SHA3 0x0 0x40
0xa49: V606 = S[V605]
---
Entry stack: [V10, 0x2cc, V200]
Stack pops: 1
Stack additions: [S0, V606]
Exit stack: [V10, 0x2cc, V200, V606]

================================

Block 0xa4c
[0xa4c:0xa50]
---
Predecessors: [0xa07]
Successors: [0x2cc]
---
0xa4c JUMPDEST
0xa4d SWAP2
0xa4e SWAP1
0xa4f POP
0xa50 JUMP
---
0xa4c: JUMPDEST 
0xa50: JUMP 0x2cc
---
Entry stack: [V10, 0x2cc, V200, V606]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V606]

================================

Block 0xa51
[0xa51:0xa76]
---
Predecessors: [0x2ed]
Successors: [0x2f5]
---
0xa51 JUMPDEST
0xa52 PUSH1 0x1
0xa54 PUSH1 0x0
0xa56 SWAP1
0xa57 SLOAD
0xa58 SWAP1
0xa59 PUSH2 0x100
0xa5c EXP
0xa5d SWAP1
0xa5e DIV
0xa5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa74 AND
0xa75 DUP2
0xa76 JUMP
---
0xa51: JUMPDEST 
0xa52: V607 = 0x1
0xa54: V608 = 0x0
0xa57: V609 = S[0x1]
0xa59: V610 = 0x100
0xa5c: V611 = EXP 0x100 0x0
0xa5e: V612 = DIV V609 0x1
0xa5f: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0xa74: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xa76: JUMP 0x2f5
---
Entry stack: [V10, 0x2f5]
Stack pops: 1
Stack additions: [S0, V614]
Exit stack: [V10, 0x2f5, V614]

================================

Block 0xa77
[0xa77:0xaaf]
---
Predecessors: [0x342]
Successors: [0x34a]
---
0xa77 JUMPDEST
0xa78 PUSH1 0x40
0xa7a DUP1
0xa7b MLOAD
0xa7c SWAP1
0xa7d DUP2
0xa7e ADD
0xa7f PUSH1 0x40
0xa81 MSTORE
0xa82 DUP1
0xa83 PUSH1 0x3
0xa85 DUP2
0xa86 MSTORE
0xa87 PUSH1 0x20
0xa89 ADD
0xa8a PUSH32 0x5054580000000000000000000000000000000000000000000000000000000000
0xaab DUP2
0xaac MSTORE
0xaad POP
0xaae DUP2
0xaaf JUMP
---
0xa77: JUMPDEST 
0xa78: V615 = 0x40
0xa7b: V616 = M[0x40]
0xa7e: V617 = ADD V616 0x40
0xa7f: V618 = 0x40
0xa81: M[0x40] = V617
0xa83: V619 = 0x3
0xa86: M[V616] = 0x3
0xa87: V620 = 0x20
0xa89: V621 = ADD 0x20 V616
0xa8a: V622 = 0x5054580000000000000000000000000000000000000000000000000000000000
0xaac: M[V621] = 0x5054580000000000000000000000000000000000000000000000000000000000
0xaaf: JUMP 0x34a
---
Entry stack: [V10, 0x34a]
Stack pops: 1
Stack additions: [S0, V616]
Exit stack: [V10, 0x34a, V616]

================================

Block 0xab0
[0xab0:0xafb]
---
Predecessors: [0x3d1]
Successors: [0xafc, 0xb01]
---
0xab0 JUMPDEST
0xab1 PUSH1 0x0
0xab3 DUP2
0xab4 PUSH1 0x2
0xab6 PUSH1 0x0
0xab8 CALLER
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae4 AND
0xae5 DUP2
0xae6 MSTORE
0xae7 PUSH1 0x20
0xae9 ADD
0xaea SWAP1
0xaeb DUP2
0xaec MSTORE
0xaed PUSH1 0x20
0xaef ADD
0xaf0 PUSH1 0x0
0xaf2 SHA3
0xaf3 SLOAD
0xaf4 LT
0xaf5 ISZERO
0xaf6 DUP1
0xaf7 ISZERO
0xaf8 PUSH2 0xb01
0xafb JUMPI
---
0xab0: JUMPDEST 
0xab1: V623 = 0x0
0xab4: V624 = 0x2
0xab6: V625 = 0x0
0xab8: V626 = CALLER
0xab9: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V626
0xacf: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0xae4: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0xae6: M[0x0] = V630
0xae7: V631 = 0x20
0xae9: V632 = ADD 0x20 0x0
0xaec: M[0x20] = 0x2
0xaed: V633 = 0x20
0xaef: V634 = ADD 0x20 0x20
0xaf0: V635 = 0x0
0xaf2: V636 = SHA3 0x0 0x40
0xaf3: V637 = S[V636]
0xaf4: V638 = LT V637 V286
0xaf5: V639 = ISZERO V638
0xaf7: V640 = ISZERO V639
0xaf8: V641 = 0xb01
0xafb: JUMPI 0xb01 V640
---
Entry stack: [V10, 0x406, V283, V286]
Stack pops: 1
Stack additions: [S0, 0x0, V639]
Exit stack: [V10, 0x406, V283, V286, 0x0, V639]

================================

Block 0xafc
[0xafc:0xb00]
---
Predecessors: [0xab0]
Successors: [0xb01]
---
0xafc POP
0xafd PUSH1 0x0
0xaff DUP3
0xb00 GT
---
0xafd: V642 = 0x0
0xb00: V643 = GT V286 0x0
---
Entry stack: [V10, 0x406, V283, V286, 0x0, V639]
Stack pops: 3
Stack additions: [S2, S1, V643]
Exit stack: [V10, 0x406, V283, V286, 0x0, V643]

================================

Block 0xb01
[0xb01:0xb06]
---
Predecessors: [0xab0, 0xafc]
Successors: [0xb07, 0xc9e]
---
0xb01 JUMPDEST
0xb02 ISZERO
0xb03 PUSH2 0xc9e
0xb06 JUMPI
---
0xb01: JUMPDEST 
0xb02: V644 = ISZERO S0
0xb03: V645 = 0xc9e
0xb06: JUMPI 0xc9e V644
---
Entry stack: [V10, 0x406, V283, V286, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x406, V283, V286, 0x0]

================================

Block 0xb07
[0xb07:0xb57]
---
Predecessors: [0xb01]
Successors: [0xd36]
---
0xb07 PUSH2 0xb58
0xb0a DUP3
0xb0b PUSH1 0x2
0xb0d PUSH1 0x0
0xb0f CALLER
0xb10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb25 AND
0xb26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3b AND
0xb3c DUP2
0xb3d MSTORE
0xb3e PUSH1 0x20
0xb40 ADD
0xb41 SWAP1
0xb42 DUP2
0xb43 MSTORE
0xb44 PUSH1 0x20
0xb46 ADD
0xb47 PUSH1 0x0
0xb49 SHA3
0xb4a SLOAD
0xb4b PUSH2 0xd36
0xb4e SWAP1
0xb4f SWAP2
0xb50 SWAP1
0xb51 PUSH4 0xffffffff
0xb56 AND
0xb57 JUMP
---
0xb07: V646 = 0xb58
0xb0b: V647 = 0x2
0xb0d: V648 = 0x0
0xb0f: V649 = CALLER
0xb10: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0xb25: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0xb26: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3b: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0xb3d: M[0x0] = V653
0xb3e: V654 = 0x20
0xb40: V655 = ADD 0x20 0x0
0xb43: M[0x20] = 0x2
0xb44: V656 = 0x20
0xb46: V657 = ADD 0x20 0x20
0xb47: V658 = 0x0
0xb49: V659 = SHA3 0x0 0x40
0xb4a: V660 = S[V659]
0xb4b: V661 = 0xd36
0xb51: V662 = 0xffffffff
0xb56: V663 = AND 0xffffffff 0xd36
0xb57: JUMP 0xd36
---
Entry stack: [V10, 0x406, V283, V286, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xb58, V660, S1]
Exit stack: [V10, 0x406, V283, V286, 0x0, 0xb58, V660, V286]

================================

Block 0xb58
[0xb58:0xbec]
---
Predecessors: [0xd4a]
Successors: [0xd50]
---
0xb58 JUMPDEST
0xb59 PUSH1 0x2
0xb5b PUSH1 0x0
0xb5d CALLER
0xb5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb73 AND
0xb74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb89 AND
0xb8a DUP2
0xb8b MSTORE
0xb8c PUSH1 0x20
0xb8e ADD
0xb8f SWAP1
0xb90 DUP2
0xb91 MSTORE
0xb92 PUSH1 0x20
0xb94 ADD
0xb95 PUSH1 0x0
0xb97 SHA3
0xb98 DUP2
0xb99 SWAP1
0xb9a SSTORE
0xb9b POP
0xb9c PUSH2 0xbed
0xb9f DUP3
0xba0 PUSH1 0x2
0xba2 PUSH1 0x0
0xba4 DUP7
0xba5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbba AND
0xbbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd0 AND
0xbd1 DUP2
0xbd2 MSTORE
0xbd3 PUSH1 0x20
0xbd5 ADD
0xbd6 SWAP1
0xbd7 DUP2
0xbd8 MSTORE
0xbd9 PUSH1 0x20
0xbdb ADD
0xbdc PUSH1 0x0
0xbde SHA3
0xbdf SLOAD
0xbe0 PUSH2 0xd50
0xbe3 SWAP1
0xbe4 SWAP2
0xbe5 SWAP1
0xbe6 PUSH4 0xffffffff
0xbeb AND
0xbec JUMP
---
0xb58: JUMPDEST 
0xb59: V664 = 0x2
0xb5b: V665 = 0x0
0xb5d: V666 = CALLER
0xb5e: V667 = 0xffffffffffffffffffffffffffffffffffffffff
0xb73: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0xb74: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0xb89: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0xb8b: M[0x0] = V670
0xb8c: V671 = 0x20
0xb8e: V672 = ADD 0x20 0x0
0xb91: M[0x20] = 0x2
0xb92: V673 = 0x20
0xb94: V674 = ADD 0x20 0x20
0xb95: V675 = 0x0
0xb97: V676 = SHA3 0x0 0x40
0xb9a: S[V676] = S0
0xb9c: V677 = 0xbed
0xba0: V678 = 0x2
0xba2: V679 = 0x0
0xba5: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xbba: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xbbb: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd0: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0xbd2: M[0x0] = V683
0xbd3: V684 = 0x20
0xbd5: V685 = ADD 0x20 0x0
0xbd8: M[0x20] = 0x2
0xbd9: V686 = 0x20
0xbdb: V687 = ADD 0x20 0x20
0xbdc: V688 = 0x0
0xbde: V689 = SHA3 0x0 0x40
0xbdf: V690 = S[V689]
0xbe0: V691 = 0xd50
0xbe6: V692 = 0xffffffff
0xbeb: V693 = AND 0xffffffff 0xd50
0xbec: JUMP 0xd50
---
Entry stack: [V10, S5, S4, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xbed, V690, S2]
Exit stack: [V10, S5, S4, S3, S2, 0x0, 0xbed, V690, S2]

================================

Block 0xbed
[0xbed:0xc9d]
---
Predecessors: [0xd68]
Successors: [0xca8]
---
0xbed JUMPDEST
0xbee PUSH1 0x2
0xbf0 PUSH1 0x0
0xbf2 DUP6
0xbf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc08 AND
0xc09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1e AND
0xc1f DUP2
0xc20 MSTORE
0xc21 PUSH1 0x20
0xc23 ADD
0xc24 SWAP1
0xc25 DUP2
0xc26 MSTORE
0xc27 PUSH1 0x20
0xc29 ADD
0xc2a PUSH1 0x0
0xc2c SHA3
0xc2d DUP2
0xc2e SWAP1
0xc2f SSTORE
0xc30 POP
0xc31 DUP3
0xc32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc47 AND
0xc48 CALLER
0xc49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5e AND
0xc5f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc80 DUP5
0xc81 PUSH1 0x40
0xc83 MLOAD
0xc84 DUP1
0xc85 DUP3
0xc86 DUP2
0xc87 MSTORE
0xc88 PUSH1 0x20
0xc8a ADD
0xc8b SWAP2
0xc8c POP
0xc8d POP
0xc8e PUSH1 0x40
0xc90 MLOAD
0xc91 DUP1
0xc92 SWAP2
0xc93 SUB
0xc94 SWAP1
0xc95 LOG3
0xc96 PUSH1 0x1
0xc98 SWAP1
0xc99 POP
0xc9a PUSH2 0xca8
0xc9d JUMP
---
0xbed: JUMPDEST 
0xbee: V694 = 0x2
0xbf0: V695 = 0x0
0xbf3: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xc08: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc09: V698 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1e: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0xc20: M[0x0] = V699
0xc21: V700 = 0x20
0xc23: V701 = ADD 0x20 0x0
0xc26: M[0x20] = 0x2
0xc27: V702 = 0x20
0xc29: V703 = ADD 0x20 0x20
0xc2a: V704 = 0x0
0xc2c: V705 = SHA3 0x0 0x40
0xc2f: S[V705] = S0
0xc32: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xc47: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc48: V708 = CALLER
0xc49: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5e: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xc5f: V711 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc81: V712 = 0x40
0xc83: V713 = M[0x40]
0xc87: M[V713] = S2
0xc88: V714 = 0x20
0xc8a: V715 = ADD 0x20 V713
0xc8e: V716 = 0x40
0xc90: V717 = M[0x40]
0xc93: V718 = SUB V715 V717
0xc95: LOG V717 V718 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V710 V707
0xc96: V719 = 0x1
0xc9a: V720 = 0xca8
0xc9d: JUMP 0xca8
---
Entry stack: [V10, S5, S4, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [V10, S5, S4, S3, S2, 0x1]

================================

Block 0xc9e
[0xc9e:0xca6]
---
Predecessors: [0xb01]
Successors: [0xca8]
---
0xc9e JUMPDEST
0xc9f PUSH1 0x0
0xca1 SWAP1
0xca2 POP
0xca3 PUSH2 0xca8
0xca6 JUMP
---
0xc9e: JUMPDEST 
0xc9f: V721 = 0x0
0xca3: V722 = 0xca8
0xca6: JUMP 0xca8
---
Entry stack: [V10, 0x406, V283, V286, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x406, V283, V286, 0x0]

================================

Block 0xca7
[0xca7:0xca7]
---
Predecessors: []
Successors: [0xca8]
---
0xca7 JUMPDEST
---
0xca7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xca8
[0xca8:0xcad]
---
Predecessors: [0xbed, 0xc9e, 0xca7]
Successors: [0x406]
---
0xca8 JUMPDEST
0xca9 SWAP3
0xcaa SWAP2
0xcab POP
0xcac POP
0xcad JUMP
---
0xca8: JUMPDEST 
0xcad: JUMP S3
---
Entry stack: [V10, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S4, {0x0, 0x1}]

================================

Block 0xcae
[0xcae:0xd2f]
---
Predecessors: [0x42b]
Successors: [0xd30]
---
0xcae JUMPDEST
0xcaf PUSH1 0x0
0xcb1 PUSH1 0x3
0xcb3 PUSH1 0x0
0xcb5 DUP5
0xcb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccb AND
0xccc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce1 AND
0xce2 DUP2
0xce3 MSTORE
0xce4 PUSH1 0x20
0xce6 ADD
0xce7 SWAP1
0xce8 DUP2
0xce9 MSTORE
0xcea PUSH1 0x20
0xcec ADD
0xced PUSH1 0x0
0xcef SHA3
0xcf0 PUSH1 0x0
0xcf2 DUP4
0xcf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd08 AND
0xd09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1e AND
0xd1f DUP2
0xd20 MSTORE
0xd21 PUSH1 0x20
0xd23 ADD
0xd24 SWAP1
0xd25 DUP2
0xd26 MSTORE
0xd27 PUSH1 0x20
0xd29 ADD
0xd2a PUSH1 0x0
0xd2c SHA3
0xd2d SLOAD
0xd2e SWAP1
0xd2f POP
---
0xcae: JUMPDEST 
0xcaf: V723 = 0x0
0xcb1: V724 = 0x3
0xcb3: V725 = 0x0
0xcb6: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xccb: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0xccc: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xce1: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0xce3: M[0x0] = V729
0xce4: V730 = 0x20
0xce6: V731 = ADD 0x20 0x0
0xce9: M[0x20] = 0x3
0xcea: V732 = 0x20
0xcec: V733 = ADD 0x20 0x20
0xced: V734 = 0x0
0xcef: V735 = SHA3 0x0 0x40
0xcf0: V736 = 0x0
0xcf3: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xd08: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0xd09: V739 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1e: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xd20: M[0x0] = V740
0xd21: V741 = 0x20
0xd23: V742 = ADD 0x20 0x0
0xd26: M[0x20] = V735
0xd27: V743 = 0x20
0xd29: V744 = ADD 0x20 0x20
0xd2a: V745 = 0x0
0xd2c: V746 = SHA3 0x0 0x40
0xd2d: V747 = S[V746]
---
Entry stack: [V10, 0x476, V309, V314]
Stack pops: 2
Stack additions: [S1, S0, V747]
Exit stack: [V10, 0x476, V309, V314, V747]

================================

Block 0xd30
[0xd30:0xd35]
---
Predecessors: [0xcae]
Successors: [0x476]
---
0xd30 JUMPDEST
0xd31 SWAP3
0xd32 SWAP2
0xd33 POP
0xd34 POP
0xd35 JUMP
---
0xd30: JUMPDEST 
0xd35: JUMP 0x476
---
Entry stack: [V10, 0x476, V309, V314, V747]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V747]

================================

Block 0xd36
[0xd36:0xd42]
---
Predecessors: [0x703, 0x754, 0xb07]
Successors: [0xd43, 0xd44]
---
0xd36 JUMPDEST
0xd37 PUSH1 0x0
0xd39 DUP3
0xd3a DUP3
0xd3b GT
0xd3c ISZERO
0xd3d ISZERO
0xd3e ISZERO
0xd3f PUSH2 0xd44
0xd42 JUMPI
---
0xd36: JUMPDEST 
0xd37: V748 = 0x0
0xd3b: V749 = GT S0 S1
0xd3c: V750 = ISZERO V749
0xd3d: V751 = ISZERO V750
0xd3e: V752 = ISZERO V751
0xd3f: V753 = 0xd44
0xd42: JUMPI 0xd44 V752
---
Entry stack: [V10, S7, S6, S5, S4, 0x0, {0x754, 0x826, 0xb58}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, S7, S6, S5, S4, 0x0, {0x754, 0x826, 0xb58}, S1, S0, 0x0]

================================

Block 0xd43
[0xd43:0xd43]
---
Predecessors: [0xd36]
Successors: []
---
0xd43 INVALID
---
0xd43: INVALID 
---
Entry stack: [V10, S8, S7, S6, S5, 0x0, {0x754, 0x826, 0xb58}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, 0x0, {0x754, 0x826, 0xb58}, S2, S1, 0x0]

================================

Block 0xd44
[0xd44:0xd49]
---
Predecessors: [0xd36]
Successors: [0xd4a]
---
0xd44 JUMPDEST
0xd45 DUP2
0xd46 DUP4
0xd47 SUB
0xd48 SWAP1
0xd49 POP
---
0xd44: JUMPDEST 
0xd47: V754 = SUB S2 S1
---
Entry stack: [V10, S8, S7, S6, S5, 0x0, {0x754, 0x826, 0xb58}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V754]
Exit stack: [V10, S8, S7, S6, S5, 0x0, {0x754, 0x826, 0xb58}, S2, S1, V754]

================================

Block 0xd4a
[0xd4a:0xd4f]
---
Predecessors: [0xd44]
Successors: [0x754, 0x826, 0xb58]
---
0xd4a JUMPDEST
0xd4b SWAP3
0xd4c SWAP2
0xd4d POP
0xd4e POP
0xd4f JUMP
---
0xd4a: JUMPDEST 
0xd4f: JUMP {0x754, 0x826, 0xb58}
---
Entry stack: [V10, S8, S7, S6, S5, 0x0, {0x754, 0x826, 0xb58}, S2, S1, V754]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S8, S7, S6, S5, 0x0, V754]

================================

Block 0xd50
[0xd50:0xd62]
---
Predecessors: [0x826, 0xb58]
Successors: [0xd63, 0xd64]
---
0xd50 JUMPDEST
0xd51 PUSH1 0x0
0xd53 DUP1
0xd54 DUP3
0xd55 DUP5
0xd56 ADD
0xd57 SWAP1
0xd58 POP
0xd59 DUP4
0xd5a DUP2
0xd5b LT
0xd5c ISZERO
0xd5d ISZERO
0xd5e ISZERO
0xd5f PUSH2 0xd64
0xd62 JUMPI
---
0xd50: JUMPDEST 
0xd51: V755 = 0x0
0xd56: V756 = ADD S1 S0
0xd5b: V757 = LT V756 S1
0xd5c: V758 = ISZERO V757
0xd5d: V759 = ISZERO V758
0xd5e: V760 = ISZERO V759
0xd5f: V761 = 0xd64
0xd62: JUMPI 0xd64 V760
---
Entry stack: [V10, S7, S6, S5, S4, 0x0, {0x8f8, 0xbed}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V756]
Exit stack: [V10, S7, S6, S5, S4, 0x0, {0x8f8, 0xbed}, S1, S0, 0x0, V756]

================================

Block 0xd63
[0xd63:0xd63]
---
Predecessors: [0xd50]
Successors: []
---
0xd63 INVALID
---
0xd63: INVALID 
---
Entry stack: [V10, S9, S8, S7, S6, 0x0, {0x8f8, 0xbed}, S3, S2, 0x0, V756]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, 0x0, {0x8f8, 0xbed}, S3, S2, 0x0, V756]

================================

Block 0xd64
[0xd64:0xd67]
---
Predecessors: [0xd50]
Successors: [0xd68]
---
0xd64 JUMPDEST
0xd65 DUP1
0xd66 SWAP2
0xd67 POP
---
0xd64: JUMPDEST 
---
Entry stack: [V10, S9, S8, S7, S6, 0x0, {0x8f8, 0xbed}, S3, S2, 0x0, V756]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, S9, S8, S7, S6, 0x0, {0x8f8, 0xbed}, S3, S2, V756, V756]

================================

Block 0xd68
[0xd68:0xd6e]
---
Predecessors: [0xd64]
Successors: [0x8f8, 0xbed]
---
0xd68 JUMPDEST
0xd69 POP
0xd6a SWAP3
0xd6b SWAP2
0xd6c POP
0xd6d POP
0xd6e JUMP
---
0xd68: JUMPDEST 
0xd6e: JUMP {0x8f8, 0xbed}
---
Entry stack: [V10, S9, S8, S7, S6, 0x0, {0x8f8, 0xbed}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S9, S8, S7, S6, 0x0, S1]

================================

Block 0xd6f
[0xd6f:0xd9f]
---
Predecessors: []
Successors: [0xda0]
---
0xd6f STOP
0xd70 LOG1
0xd71 PUSH6 0x627a7a723058
0xd78 SHA3
0xd79 DUP2
0xd7a MISSING 0xf8
0xd7b LT
0xd7c SWAP4
0xd7d MISSING 0xc2
0xd7e MISSING 0xe2
0xd7f MISSING 0xe0
0xd80 PUSH18 0x2f5fb73c97349c5f2fd69df8e5434cef1b7e
0xd93 PUSH8 0x647fbc4d21002960
0xd9c PUSH1 0x60
0xd9e BLOCKHASH
0xd9f MSTORE
---
0xd6f: STOP 
0xd70: LOG S0 S1 S2
0xd71: V762 = 0x627a7a723058
0xd78: V763 = SHA3 0x627a7a723058 S3
0xd7a: MISSING 0xf8
0xd7b: V764 = LT S0 S1
0xd7d: MISSING 0xc2
0xd7e: MISSING 0xe2
0xd7f: MISSING 0xe0
0xd80: V765 = 0x2f5fb73c97349c5f2fd69df8e5434cef1b7e
0xd93: V766 = 0x647fbc4d21002960
0xd9c: V767 = 0x60
0xd9e: V768 = BLOCKHASH 0x60
0xd9f: M[V768] = 0x647fbc4d21002960
---
Entry stack: []
Stack pops: 0
Stack additions: [S4, V763, S4, S5, S2, S3, S4, V764, 0x2f5fb73c97349c5f2fd69df8e5434cef1b7e]
Exit stack: []

================================

Block 0xda0
[0xda0:0xdd0]
---
Predecessors: [0xd6f]
Successors: []
---
0xda0 JUMPDEST
0xda1 PUSH1 0x0
0xda3 DUP1
0xda4 REVERT
0xda5 STOP
0xda6 LOG1
0xda7 PUSH6 0x627a7a723058
0xdae SHA3
0xdaf MISSING 0x4c
0xdb0 PUSH30 0xa05db0d89221b86dd6f52c2771a93938dc5068178a2ea8c3292eafd5ffaa
0xdcf STOP
0xdd0 MISSING 0x29
---
0xda0: JUMPDEST 
0xda1: V769 = 0x0
0xda4: REVERT 0x0 0x0
0xda5: STOP 
0xda6: LOG S0 S1 S2
0xda7: V770 = 0x627a7a723058
0xdae: V771 = SHA3 0x627a7a723058 S3
0xdaf: MISSING 0x4c
0xdb0: V772 = 0xa05db0d89221b86dd6f52c2771a93938dc5068178a2ea8c3292eafd5ffaa
0xdcf: STOP 
0xdd0: MISSING 0x29
---
Entry stack: [0x2f5fb73c97349c5f2fd69df8e5434cef1b7e]
Stack pops: 0
Stack additions: [V771, 0xa05db0d89221b86dd6f52c2771a93938dc5068178a2ea8c3292eafd5ffaa]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xb2
Exit block: 0x133
Body: 0xb2, 0xb9, 0xbd, 0xc5, 0xea, 0xf3, 0xfb, 0x106, 0x11a, 0x133, 0x48c

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x141
Exit block: 0x181
Body: 0x141, 0x148, 0x14c, 0x181, 0x4c5, 0x511, 0x516, 0x51c, 0x60a, 0x614

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x19b
Exit block: 0x1ae
Body: 0x19b, 0x1a2, 0x1a6, 0x1ae, 0x61a, 0x621

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1c4
Exit block: 0x223
Body: 0x1c4, 0x1cb, 0x1cf, 0x223, 0x406, 0x624, 0x670, 0x6f1, 0x6f8, 0x6fd, 0x703, 0x754, 0x9a9, 0x9b3

Function 4:
Public function signature: 0x313ce567
Entry block: 0x23d
Exit block: 0x250
Body: 0x23d, 0x244, 0x248, 0x250, 0x9ba

Function 5:
Public function signature: 0x4c738909
Entry block: 0x26c
Exit block: 0x27f
Body: 0x26c, 0x273, 0x277, 0x27f, 0x9bf, 0xa04

Function 6:
Public function signature: 0x70a08231
Entry block: 0x295
Exit block: 0x2cc
Body: 0x295, 0x29c, 0x2a0, 0x2cc, 0xa07, 0xa4c

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x2e2
Exit block: 0x2f5
Body: 0x2e2, 0x2e9, 0x2ed, 0x2f5, 0xa51

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x337
Exit block: 0x3b8
Body: 0x337, 0x33e, 0x342, 0x34a, 0x36f, 0x378, 0x380, 0x38b, 0x39f, 0x3b8, 0xa77

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x3c6
Exit block: 0x406
Body: 0x3c6, 0x3cd, 0x3d1, 0x406, 0xab0, 0xafc, 0xb01, 0xb07, 0xb58, 0xc9e, 0xca8

Function 10:
Public function signature: 0xdd62ed3e
Entry block: 0x420
Exit block: 0x476
Body: 0x420, 0x427, 0x42b, 0x476, 0xcae, 0xd30

Function 11:
Public fallback function
Entry block: 0xad
Exit block: 0xad
Body: 0xad

Function 12:
Private function
Entry block: 0xd50
Exit block: 0xd68
Body: 0xd50, 0xd64, 0xd68

Function 13:
Private function
Entry block: 0xd36
Exit block: 0xd4a
Body: 0xd36, 0xd44, 0xd4a

