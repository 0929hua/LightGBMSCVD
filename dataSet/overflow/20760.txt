Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb8
0xa: JUMPI 0xb8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xbd]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xbd
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xbd
0x3e: JUMPI 0xbd V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x14c]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x14c
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x14c
0x49: JUMPI 0x14c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1a6]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x1a6
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x1a6
0x54: JUMPI 0x1a6 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1cf]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1cf
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1cf
0x5f: JUMPI 0x1cf V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x248]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x248
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x248
0x6a: JUMPI 0x248 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x277]
---
0x6b DUP1
0x6c PUSH4 0x66188463
0x71 EQ
0x72 PUSH2 0x277
0x75 JUMPI
---
0x6c: V26 = 0x66188463
0x71: V27 = EQ 0x66188463 V10
0x72: V28 = 0x277
0x75: JUMPI 0x277 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2d1]
---
0x76 DUP1
0x77 PUSH4 0x70a08231
0x7c EQ
0x7d PUSH2 0x2d1
0x80 JUMPI
---
0x77: V29 = 0x70a08231
0x7c: V30 = EQ 0x70a08231 V10
0x7d: V31 = 0x2d1
0x80: JUMPI 0x2d1 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x31e]
---
0x81 DUP1
0x82 PUSH4 0x95d89b41
0x87 EQ
0x88 PUSH2 0x31e
0x8b JUMPI
---
0x82: V32 = 0x95d89b41
0x87: V33 = EQ 0x95d89b41 V10
0x88: V34 = 0x31e
0x8b: JUMPI 0x31e V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x3ad]
---
0x8c DUP1
0x8d PUSH4 0xa9059cbb
0x92 EQ
0x93 PUSH2 0x3ad
0x96 JUMPI
---
0x8d: V35 = 0xa9059cbb
0x92: V36 = EQ 0xa9059cbb V10
0x93: V37 = 0x3ad
0x96: JUMPI 0x3ad V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x407]
---
0x97 DUP1
0x98 PUSH4 0xcae9ca51
0x9d EQ
0x9e PUSH2 0x407
0xa1 JUMPI
---
0x98: V38 = 0xcae9ca51
0x9d: V39 = EQ 0xcae9ca51 V10
0x9e: V40 = 0x407
0xa1: JUMPI 0x407 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x4a4]
---
0xa2 DUP1
0xa3 PUSH4 0xd73dd623
0xa8 EQ
0xa9 PUSH2 0x4a4
0xac JUMPI
---
0xa3: V41 = 0xd73dd623
0xa8: V42 = EQ 0xd73dd623 V10
0xa9: V43 = 0x4a4
0xac: JUMPI 0x4a4 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x4fe]
---
0xad DUP1
0xae PUSH4 0xdd62ed3e
0xb3 EQ
0xb4 PUSH2 0x4fe
0xb7 JUMPI
---
0xae: V44 = 0xdd62ed3e
0xb3: V45 = EQ 0xdd62ed3e V10
0xb4: V46 = 0x4fe
0xb7: JUMPI 0x4fe V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xbc]
---
Predecessors: [0x0, 0xad]
Successors: []
---
0xb8 JUMPDEST
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb8: JUMPDEST 
0xb9: V47 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0xb]
Successors: [0xc4, 0xc8]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V48 = CALLVALUE
0xbf: V49 = ISZERO V48
0xc0: V50 = 0xc8
0xc3: JUMPI 0xc8 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V51 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0xbd]
Successors: [0x56a]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xd0
0xcc PUSH2 0x56a
0xcf JUMP
---
0xc8: JUMPDEST 
0xc9: V52 = 0xd0
0xcc: V53 = 0x56a
0xcf: JUMP 0x56a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V10, 0xd0]

================================

Block 0xd0
[0xd0:0xf4]
---
Predecessors: [0x600]
Successors: [0xf5]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 DUP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 DUP3
0xda DUP2
0xdb SUB
0xdc DUP3
0xdd MSTORE
0xde DUP4
0xdf DUP2
0xe0 DUP2
0xe1 MLOAD
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP2
0xe8 POP
0xe9 DUP1
0xea MLOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 DUP1
0xf1 DUP4
0xf2 DUP4
0xf3 PUSH1 0x0
---
0xd0: JUMPDEST 
0xd1: V54 = 0x40
0xd3: V55 = M[0x40]
0xd6: V56 = 0x20
0xd8: V57 = ADD 0x20 V55
0xdb: V58 = SUB V57 V55
0xdd: M[V55] = V58
0xe1: V59 = M[V417]
0xe3: M[V57] = V59
0xe4: V60 = 0x20
0xe6: V61 = ADD 0x20 V57
0xea: V62 = M[V417]
0xec: V63 = 0x20
0xee: V64 = ADD 0x20 V417
0xf3: V65 = 0x0
---
Entry stack: [V10, 0xd0, V417]
Stack pops: 1
Stack additions: [S0, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]
Exit stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]

================================

Block 0xf5
[0xf5:0xfd]
---
Predecessors: [0xd0, 0x106]
Successors: [0xfe, 0x111]
---
0xf5 JUMPDEST
0xf6 DUP4
0xf7 DUP2
0xf8 LT
0xf9 ISZERO
0xfa PUSH2 0x111
0xfd JUMPI
---
0xf5: JUMPDEST 
0xf8: V66 = LT S0 V62
0xf9: V67 = ISZERO V66
0xfa: V68 = 0x111
0xfd: JUMPI 0x111 V67
---
Entry stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, S0]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xf5]
Successors: [0x106]
---
0xfe DUP1
0xff DUP3
0x100 ADD
0x101 MLOAD
0x102 DUP2
0x103 DUP5
0x104 ADD
0x105 MSTORE
---
0x100: V69 = ADD V64 S0
0x101: V70 = M[V69]
0x104: V71 = ADD V61 S0
0x105: M[V71] = V70
---
Entry stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, S0]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfe]
Successors: [0xf5]
---
0x106 JUMPDEST
0x107 PUSH1 0x20
0x109 DUP2
0x10a ADD
0x10b SWAP1
0x10c POP
0x10d PUSH2 0xf5
0x110 JUMP
---
0x106: JUMPDEST 
0x107: V72 = 0x20
0x10a: V73 = ADD S0 0x20
0x10d: V74 = 0xf5
0x110: JUMP 0xf5
---
Entry stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 1
Stack additions: [V73]
Exit stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, V73]

================================

Block 0x111
[0x111:0x124]
---
Predecessors: [0xf5]
Successors: [0x125, 0x13e]
---
0x111 JUMPDEST
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 SWAP1
0x117 POP
0x118 SWAP1
0x119 DUP2
0x11a ADD
0x11b SWAP1
0x11c PUSH1 0x1f
0x11e AND
0x11f DUP1
0x120 ISZERO
0x121 PUSH2 0x13e
0x124 JUMPI
---
0x111: JUMPDEST 
0x11a: V75 = ADD V62 V61
0x11c: V76 = 0x1f
0x11e: V77 = AND 0x1f V62
0x120: V78 = ISZERO V77
0x121: V79 = 0x13e
0x124: JUMPI 0x13e V78
---
Entry stack: [V10, 0xd0, V417, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 7
Stack additions: [V75, V77]
Exit stack: [V10, 0xd0, V417, V55, V55, V75, V77]

================================

Block 0x125
[0x125:0x13d]
---
Predecessors: [0x111]
Successors: [0x13e]
---
0x125 DUP1
0x126 DUP3
0x127 SUB
0x128 DUP1
0x129 MLOAD
0x12a PUSH1 0x1
0x12c DUP4
0x12d PUSH1 0x20
0x12f SUB
0x130 PUSH2 0x100
0x133 EXP
0x134 SUB
0x135 NOT
0x136 AND
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP2
0x13d POP
---
0x127: V80 = SUB V75 V77
0x129: V81 = M[V80]
0x12a: V82 = 0x1
0x12d: V83 = 0x20
0x12f: V84 = SUB 0x20 V77
0x130: V85 = 0x100
0x133: V86 = EXP 0x100 V84
0x134: V87 = SUB V86 0x1
0x135: V88 = NOT V87
0x136: V89 = AND V88 V81
0x138: M[V80] = V89
0x139: V90 = 0x20
0x13b: V91 = ADD 0x20 V80
---
Entry stack: [V10, 0xd0, V417, V55, V55, V75, V77]
Stack pops: 2
Stack additions: [V91, S0]
Exit stack: [V10, 0xd0, V417, V55, V55, V91, V77]

================================

Block 0x13e
[0x13e:0x14b]
---
Predecessors: [0x111, 0x125]
Successors: []
---
0x13e JUMPDEST
0x13f POP
0x140 SWAP3
0x141 POP
0x142 POP
0x143 POP
0x144 PUSH1 0x40
0x146 MLOAD
0x147 DUP1
0x148 SWAP2
0x149 SUB
0x14a SWAP1
0x14b RETURN
---
0x13e: JUMPDEST 
0x144: V92 = 0x40
0x146: V93 = M[0x40]
0x149: V94 = SUB S1 V93
0x14b: RETURN V93 V94
---
Entry stack: [V10, 0xd0, V417, V55, V55, S1, V77]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xd0]

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x3f]
Successors: [0x153, 0x157]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V95 = CALLVALUE
0x14e: V96 = ISZERO V95
0x14f: V97 = 0x157
0x152: JUMPI 0x157 V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14c]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V98 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x157
[0x157:0x18b]
---
Predecessors: [0x14c]
Successors: [0x608]
---
0x157 JUMPDEST
0x158 PUSH2 0x18c
0x15b PUSH1 0x4
0x15d DUP1
0x15e DUP1
0x15f CALLDATALOAD
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 SWAP1
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP1
0x17b SWAP2
0x17c SWAP1
0x17d DUP1
0x17e CALLDATALOAD
0x17f SWAP1
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP1
0x184 SWAP2
0x185 SWAP1
0x186 POP
0x187 POP
0x188 PUSH2 0x608
0x18b JUMP
---
0x157: JUMPDEST 
0x158: V99 = 0x18c
0x15b: V100 = 0x4
0x15f: V101 = CALLDATALOAD 0x4
0x160: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x177: V104 = 0x20
0x179: V105 = ADD 0x20 0x4
0x17e: V106 = CALLDATALOAD 0x24
0x180: V107 = 0x20
0x182: V108 = ADD 0x20 0x24
0x188: V109 = 0x608
0x18b: JUMP 0x608
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18c, V103, V106]
Exit stack: [V10, 0x18c, V103, V106]

================================

Block 0x18c
[0x18c:0x1a5]
---
Predecessors: [0x6f5]
Successors: []
---
0x18c JUMPDEST
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 DUP3
0x192 ISZERO
0x193 ISZERO
0x194 ISZERO
0x195 ISZERO
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP2
0x19c POP
0x19d POP
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 SWAP2
0x1a3 SUB
0x1a4 SWAP1
0x1a5 RETURN
---
0x18c: JUMPDEST 
0x18d: V110 = 0x40
0x18f: V111 = M[0x40]
0x192: V112 = ISZERO 0x1
0x193: V113 = ISZERO 0x0
0x194: V114 = ISZERO 0x1
0x195: V115 = ISZERO 0x0
0x197: M[V111] = 0x1
0x198: V116 = 0x20
0x19a: V117 = ADD 0x20 V111
0x19e: V118 = 0x40
0x1a0: V119 = M[0x40]
0x1a3: V120 = SUB V117 V119
0x1a5: RETURN V119 V120
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, S1]

================================

Block 0x1a6
[0x1a6:0x1ac]
---
Predecessors: [0x4a]
Successors: [0x1ad, 0x1b1]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V121 = CALLVALUE
0x1a8: V122 = ISZERO V121
0x1a9: V123 = 0x1b1
0x1ac: JUMPI 0x1b1 V122
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V124 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1a6]
Successors: [0x6fb]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x1b9
0x1b5 PUSH2 0x6fb
0x1b8 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V125 = 0x1b9
0x1b5: V126 = 0x6fb
0x1b8: JUMP 0x6fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9]
Exit stack: [V10, 0x1b9]

================================

Block 0x1b9
[0x1b9:0x1ce]
---
Predecessors: [0x6fb]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be DUP3
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP2
0x1c5 POP
0x1c6 POP
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca DUP1
0x1cb SWAP2
0x1cc SUB
0x1cd SWAP1
0x1ce RETURN
---
0x1b9: JUMPDEST 
0x1ba: V127 = 0x40
0x1bc: V128 = M[0x40]
0x1c0: M[V128] = V501
0x1c1: V129 = 0x20
0x1c3: V130 = ADD 0x20 V128
0x1c7: V131 = 0x40
0x1c9: V132 = M[0x40]
0x1cc: V133 = SUB V130 V132
0x1ce: RETURN V132 V133
---
Entry stack: [V10, 0x1b9, V501]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b9]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x55]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V134 = CALLVALUE
0x1d1: V135 = ISZERO V134
0x1d2: V136 = 0x1da
0x1d5: JUMPI 0x1da V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V137 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x22d]
---
Predecessors: [0x1cf]
Successors: [0x701]
---
0x1da JUMPDEST
0x1db PUSH2 0x22e
0x1de PUSH1 0x4
0x1e0 DUP1
0x1e1 DUP1
0x1e2 CALLDATALOAD
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP1
0x201 CALLDATALOAD
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 SWAP1
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d SWAP2
0x21e SWAP1
0x21f DUP1
0x220 CALLDATALOAD
0x221 SWAP1
0x222 PUSH1 0x20
0x224 ADD
0x225 SWAP1
0x226 SWAP2
0x227 SWAP1
0x228 POP
0x229 POP
0x22a PUSH2 0x701
0x22d JUMP
---
0x1da: JUMPDEST 
0x1db: V138 = 0x22e
0x1de: V139 = 0x4
0x1e2: V140 = CALLDATALOAD 0x4
0x1e3: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1fa: V143 = 0x20
0x1fc: V144 = ADD 0x20 0x4
0x201: V145 = CALLDATALOAD 0x24
0x202: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x219: V148 = 0x20
0x21b: V149 = ADD 0x20 0x24
0x220: V150 = CALLDATALOAD 0x44
0x222: V151 = 0x20
0x224: V152 = ADD 0x20 0x44
0x22a: V153 = 0x701
0x22d: JUMP 0x701
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22e, V142, V147, V150]
Exit stack: [V10, 0x22e, V142, V147, V150]

================================

Block 0x22e
[0x22e:0x247]
---
Predecessors: [0x826]
Successors: []
---
0x22e JUMPDEST
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 DUP3
0x234 ISZERO
0x235 ISZERO
0x236 ISZERO
0x237 ISZERO
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x20
0x23c ADD
0x23d SWAP2
0x23e POP
0x23f POP
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 SWAP2
0x245 SUB
0x246 SWAP1
0x247 RETURN
---
0x22e: JUMPDEST 
0x22f: V154 = 0x40
0x231: V155 = M[0x40]
0x234: V156 = ISZERO 0x1
0x235: V157 = ISZERO 0x0
0x236: V158 = ISZERO 0x1
0x237: V159 = ISZERO 0x0
0x239: M[V155] = 0x1
0x23a: V160 = 0x20
0x23c: V161 = ADD 0x20 V155
0x240: V162 = 0x40
0x242: V163 = M[0x40]
0x245: V164 = SUB V161 V163
0x247: RETURN V163 V164
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x248
[0x248:0x24e]
---
Predecessors: [0x60]
Successors: [0x24f, 0x253]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x248: JUMPDEST 
0x249: V165 = CALLVALUE
0x24a: V166 = ISZERO V165
0x24b: V167 = 0x253
0x24e: JUMPI 0x253 V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x248]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V168 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x253
[0x253:0x25a]
---
Predecessors: [0x248]
Successors: [0x82d]
---
0x253 JUMPDEST
0x254 PUSH2 0x25b
0x257 PUSH2 0x82d
0x25a JUMP
---
0x253: JUMPDEST 
0x254: V169 = 0x25b
0x257: V170 = 0x82d
0x25a: JUMP 0x82d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25b]
Exit stack: [V10, 0x25b]

================================

Block 0x25b
[0x25b:0x276]
---
Predecessors: [0x82d]
Successors: []
---
0x25b JUMPDEST
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP3
0x261 PUSH1 0xff
0x263 AND
0x264 PUSH1 0xff
0x266 AND
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP2
0x26d POP
0x26e POP
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 RETURN
---
0x25b: JUMPDEST 
0x25c: V171 = 0x40
0x25e: V172 = M[0x40]
0x261: V173 = 0xff
0x263: V174 = AND 0xff V570
0x264: V175 = 0xff
0x266: V176 = AND 0xff V174
0x268: M[V172] = V176
0x269: V177 = 0x20
0x26b: V178 = ADD 0x20 V172
0x26f: V179 = 0x40
0x271: V180 = M[0x40]
0x274: V181 = SUB V178 V180
0x276: RETURN V180 V181
---
Entry stack: [V10, 0x25b, V570]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25b]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x6b]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V182 = CALLVALUE
0x279: V183 = ISZERO V182
0x27a: V184 = 0x282
0x27d: JUMPI 0x282 V183
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V185 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x2b6]
---
Predecessors: [0x277]
Successors: [0x840]
---
0x282 JUMPDEST
0x283 PUSH2 0x2b7
0x286 PUSH1 0x4
0x288 DUP1
0x289 DUP1
0x28a CALLDATALOAD
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 SWAP1
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 SWAP1
0x2a6 SWAP2
0x2a7 SWAP1
0x2a8 DUP1
0x2a9 CALLDATALOAD
0x2aa SWAP1
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae SWAP1
0x2af SWAP2
0x2b0 SWAP1
0x2b1 POP
0x2b2 POP
0x2b3 PUSH2 0x840
0x2b6 JUMP
---
0x282: JUMPDEST 
0x283: V186 = 0x2b7
0x286: V187 = 0x4
0x28a: V188 = CALLDATALOAD 0x4
0x28b: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x2a2: V191 = 0x20
0x2a4: V192 = ADD 0x20 0x4
0x2a9: V193 = CALLDATALOAD 0x24
0x2ab: V194 = 0x20
0x2ad: V195 = ADD 0x20 0x24
0x2b3: V196 = 0x840
0x2b6: JUMP 0x840
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b7, V190, V193]
Exit stack: [V10, 0x2b7, V190, V193]

================================

Block 0x2b7
[0x2b7:0x2d0]
---
Predecessors: [0xabb]
Successors: []
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc DUP3
0x2bd ISZERO
0x2be ISZERO
0x2bf ISZERO
0x2c0 ISZERO
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP2
0x2c7 POP
0x2c8 POP
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc DUP1
0x2cd SWAP2
0x2ce SUB
0x2cf SWAP1
0x2d0 RETURN
---
0x2b7: JUMPDEST 
0x2b8: V197 = 0x40
0x2ba: V198 = M[0x40]
0x2bd: V199 = ISZERO 0x1
0x2be: V200 = ISZERO 0x0
0x2bf: V201 = ISZERO 0x1
0x2c0: V202 = ISZERO 0x0
0x2c2: M[V198] = 0x1
0x2c3: V203 = 0x20
0x2c5: V204 = ADD 0x20 V198
0x2c9: V205 = 0x40
0x2cb: V206 = M[0x40]
0x2ce: V207 = SUB V204 V206
0x2d0: RETURN V206 V207
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d1
[0x2d1:0x2d7]
---
Predecessors: [0x76]
Successors: [0x2d8, 0x2dc]
---
0x2d1 JUMPDEST
0x2d2 CALLVALUE
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V208 = CALLVALUE
0x2d3: V209 = ISZERO V208
0x2d4: V210 = 0x2dc
0x2d7: JUMPI 0x2dc V209
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d1]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V211 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2dc
[0x2dc:0x307]
---
Predecessors: [0x2d1]
Successors: [0xac2]
---
0x2dc JUMPDEST
0x2dd PUSH2 0x308
0x2e0 PUSH1 0x4
0x2e2 DUP1
0x2e3 DUP1
0x2e4 CALLDATALOAD
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb SWAP1
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff SWAP1
0x300 SWAP2
0x301 SWAP1
0x302 POP
0x303 POP
0x304 PUSH2 0xac2
0x307 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V212 = 0x308
0x2e0: V213 = 0x4
0x2e4: V214 = CALLDATALOAD 0x4
0x2e5: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x2fc: V217 = 0x20
0x2fe: V218 = ADD 0x20 0x4
0x304: V219 = 0xac2
0x307: JUMP 0xac2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x308, V216]
Exit stack: [V10, 0x308, V216]

================================

Block 0x308
[0x308:0x31d]
---
Predecessors: [0xb07]
Successors: []
---
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d DUP3
0x30e DUP2
0x30f MSTORE
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP2
0x314 POP
0x315 POP
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a SWAP2
0x31b SUB
0x31c SWAP1
0x31d RETURN
---
0x308: JUMPDEST 
0x309: V220 = 0x40
0x30b: V221 = M[0x40]
0x30f: M[V221] = V703
0x310: V222 = 0x20
0x312: V223 = ADD 0x20 V221
0x316: V224 = 0x40
0x318: V225 = M[0x40]
0x31b: V226 = SUB V223 V225
0x31d: RETURN V225 V226
---
Entry stack: [V10, V703]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x31e
[0x31e:0x324]
---
Predecessors: [0x81]
Successors: [0x325, 0x329]
---
0x31e JUMPDEST
0x31f CALLVALUE
0x320 ISZERO
0x321 PUSH2 0x329
0x324 JUMPI
---
0x31e: JUMPDEST 
0x31f: V227 = CALLVALUE
0x320: V228 = ISZERO V227
0x321: V229 = 0x329
0x324: JUMPI 0x329 V228
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x325
[0x325:0x328]
---
Predecessors: [0x31e]
Successors: []
---
0x325 PUSH1 0x0
0x327 DUP1
0x328 REVERT
---
0x325: V230 = 0x0
0x328: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x329
[0x329:0x330]
---
Predecessors: [0x31e]
Successors: [0xb0c]
---
0x329 JUMPDEST
0x32a PUSH2 0x331
0x32d PUSH2 0xb0c
0x330 JUMP
---
0x329: JUMPDEST 
0x32a: V231 = 0x331
0x32d: V232 = 0xb0c
0x330: JUMP 0xb0c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x331]
Exit stack: [V10, 0x331]

================================

Block 0x331
[0x331:0x355]
---
Predecessors: [0xba2]
Successors: [0x356]
---
0x331 JUMPDEST
0x332 PUSH1 0x40
0x334 MLOAD
0x335 DUP1
0x336 DUP1
0x337 PUSH1 0x20
0x339 ADD
0x33a DUP3
0x33b DUP2
0x33c SUB
0x33d DUP3
0x33e MSTORE
0x33f DUP4
0x340 DUP2
0x341 DUP2
0x342 MLOAD
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP2
0x349 POP
0x34a DUP1
0x34b MLOAD
0x34c SWAP1
0x34d PUSH1 0x20
0x34f ADD
0x350 SWAP1
0x351 DUP1
0x352 DUP4
0x353 DUP4
0x354 PUSH1 0x0
---
0x331: JUMPDEST 
0x332: V233 = 0x40
0x334: V234 = M[0x40]
0x337: V235 = 0x20
0x339: V236 = ADD 0x20 V234
0x33c: V237 = SUB V236 V234
0x33e: M[V234] = V237
0x342: V238 = M[V724]
0x344: M[V236] = V238
0x345: V239 = 0x20
0x347: V240 = ADD 0x20 V236
0x34b: V241 = M[V724]
0x34d: V242 = 0x20
0x34f: V243 = ADD 0x20 V724
0x354: V244 = 0x0
---
Entry stack: [V10, 0x331, V724]
Stack pops: 1
Stack additions: [S0, V234, V234, V240, V243, V241, V241, V240, V243, 0x0]
Exit stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, 0x0]

================================

Block 0x356
[0x356:0x35e]
---
Predecessors: [0x331, 0x367]
Successors: [0x35f, 0x372]
---
0x356 JUMPDEST
0x357 DUP4
0x358 DUP2
0x359 LT
0x35a ISZERO
0x35b PUSH2 0x372
0x35e JUMPI
---
0x356: JUMPDEST 
0x359: V245 = LT S0 V241
0x35a: V246 = ISZERO V245
0x35b: V247 = 0x372
0x35e: JUMPI 0x372 V246
---
Entry stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, S0]

================================

Block 0x35f
[0x35f:0x366]
---
Predecessors: [0x356]
Successors: [0x367]
---
0x35f DUP1
0x360 DUP3
0x361 ADD
0x362 MLOAD
0x363 DUP2
0x364 DUP5
0x365 ADD
0x366 MSTORE
---
0x361: V248 = ADD V243 S0
0x362: V249 = M[V248]
0x365: V250 = ADD V240 S0
0x366: M[V250] = V249
---
Entry stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, S0]

================================

Block 0x367
[0x367:0x371]
---
Predecessors: [0x35f]
Successors: [0x356]
---
0x367 JUMPDEST
0x368 PUSH1 0x20
0x36a DUP2
0x36b ADD
0x36c SWAP1
0x36d POP
0x36e PUSH2 0x356
0x371 JUMP
---
0x367: JUMPDEST 
0x368: V251 = 0x20
0x36b: V252 = ADD S0 0x20
0x36e: V253 = 0x356
0x371: JUMP 0x356
---
Entry stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, S0]
Stack pops: 1
Stack additions: [V252]
Exit stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, V252]

================================

Block 0x372
[0x372:0x385]
---
Predecessors: [0x356]
Successors: [0x386, 0x39f]
---
0x372 JUMPDEST
0x373 POP
0x374 POP
0x375 POP
0x376 POP
0x377 SWAP1
0x378 POP
0x379 SWAP1
0x37a DUP2
0x37b ADD
0x37c SWAP1
0x37d PUSH1 0x1f
0x37f AND
0x380 DUP1
0x381 ISZERO
0x382 PUSH2 0x39f
0x385 JUMPI
---
0x372: JUMPDEST 
0x37b: V254 = ADD V241 V240
0x37d: V255 = 0x1f
0x37f: V256 = AND 0x1f V241
0x381: V257 = ISZERO V256
0x382: V258 = 0x39f
0x385: JUMPI 0x39f V257
---
Entry stack: [V10, 0x331, V724, V234, V234, V240, V243, V241, V241, V240, V243, S0]
Stack pops: 7
Stack additions: [V254, V256]
Exit stack: [V10, 0x331, V724, V234, V234, V254, V256]

================================

Block 0x386
[0x386:0x39e]
---
Predecessors: [0x372]
Successors: [0x39f]
---
0x386 DUP1
0x387 DUP3
0x388 SUB
0x389 DUP1
0x38a MLOAD
0x38b PUSH1 0x1
0x38d DUP4
0x38e PUSH1 0x20
0x390 SUB
0x391 PUSH2 0x100
0x394 EXP
0x395 SUB
0x396 NOT
0x397 AND
0x398 DUP2
0x399 MSTORE
0x39a PUSH1 0x20
0x39c ADD
0x39d SWAP2
0x39e POP
---
0x388: V259 = SUB V254 V256
0x38a: V260 = M[V259]
0x38b: V261 = 0x1
0x38e: V262 = 0x20
0x390: V263 = SUB 0x20 V256
0x391: V264 = 0x100
0x394: V265 = EXP 0x100 V263
0x395: V266 = SUB V265 0x1
0x396: V267 = NOT V266
0x397: V268 = AND V267 V260
0x399: M[V259] = V268
0x39a: V269 = 0x20
0x39c: V270 = ADD 0x20 V259
---
Entry stack: [V10, 0x331, V724, V234, V234, V254, V256]
Stack pops: 2
Stack additions: [V270, S0]
Exit stack: [V10, 0x331, V724, V234, V234, V270, V256]

================================

Block 0x39f
[0x39f:0x3ac]
---
Predecessors: [0x372, 0x386]
Successors: []
---
0x39f JUMPDEST
0x3a0 POP
0x3a1 SWAP3
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 DUP1
0x3a9 SWAP2
0x3aa SUB
0x3ab SWAP1
0x3ac RETURN
---
0x39f: JUMPDEST 
0x3a5: V271 = 0x40
0x3a7: V272 = M[0x40]
0x3aa: V273 = SUB S1 V272
0x3ac: RETURN V272 V273
---
Entry stack: [V10, 0x331, V724, V234, V234, S1, V256]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x331]

================================

Block 0x3ad
[0x3ad:0x3b3]
---
Predecessors: [0x8c]
Successors: [0x3b4, 0x3b8]
---
0x3ad JUMPDEST
0x3ae CALLVALUE
0x3af ISZERO
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V274 = CALLVALUE
0x3af: V275 = ISZERO V274
0x3b0: V276 = 0x3b8
0x3b3: JUMPI 0x3b8 V275
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x3ad]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V277 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b8
[0x3b8:0x3ec]
---
Predecessors: [0x3ad]
Successors: [0xbaa]
---
0x3b8 JUMPDEST
0x3b9 PUSH2 0x3ed
0x3bc PUSH1 0x4
0x3be DUP1
0x3bf DUP1
0x3c0 CALLDATALOAD
0x3c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d6 AND
0x3d7 SWAP1
0x3d8 PUSH1 0x20
0x3da ADD
0x3db SWAP1
0x3dc SWAP2
0x3dd SWAP1
0x3de DUP1
0x3df CALLDATALOAD
0x3e0 SWAP1
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 SWAP1
0x3e5 SWAP2
0x3e6 SWAP1
0x3e7 POP
0x3e8 POP
0x3e9 PUSH2 0xbaa
0x3ec JUMP
---
0x3b8: JUMPDEST 
0x3b9: V278 = 0x3ed
0x3bc: V279 = 0x4
0x3c0: V280 = CALLDATALOAD 0x4
0x3c1: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x3d8: V283 = 0x20
0x3da: V284 = ADD 0x20 0x4
0x3df: V285 = CALLDATALOAD 0x24
0x3e1: V286 = 0x20
0x3e3: V287 = ADD 0x20 0x24
0x3e9: V288 = 0xbaa
0x3ec: JUMP 0xbaa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ed, V282, V285]
Exit stack: [V10, 0x3ed, V282, V285]

================================

Block 0x3ed
[0x3ed:0x406]
---
Predecessors: [0xbba]
Successors: []
---
0x3ed JUMPDEST
0x3ee PUSH1 0x40
0x3f0 MLOAD
0x3f1 DUP1
0x3f2 DUP3
0x3f3 ISZERO
0x3f4 ISZERO
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP2
0x3fd POP
0x3fe POP
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 SWAP2
0x404 SUB
0x405 SWAP1
0x406 RETURN
---
0x3ed: JUMPDEST 
0x3ee: V289 = 0x40
0x3f0: V290 = M[0x40]
0x3f3: V291 = ISZERO 0x1
0x3f4: V292 = ISZERO 0x0
0x3f5: V293 = ISZERO 0x1
0x3f6: V294 = ISZERO 0x0
0x3f8: M[V290] = 0x1
0x3f9: V295 = 0x20
0x3fb: V296 = ADD 0x20 V290
0x3ff: V297 = 0x40
0x401: V298 = M[0x40]
0x404: V299 = SUB V296 V298
0x406: RETURN V298 V299
---
Entry stack: [V10, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x407
[0x407:0x40d]
---
Predecessors: [0x97]
Successors: [0x40e, 0x412]
---
0x407 JUMPDEST
0x408 CALLVALUE
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x407: JUMPDEST 
0x408: V300 = CALLVALUE
0x409: V301 = ISZERO V300
0x40a: V302 = 0x412
0x40d: JUMPI 0x412 V301
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x407]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V303 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x412
[0x412:0x489]
---
Predecessors: [0x407]
Successors: [0xbc0]
---
0x412 JUMPDEST
0x413 PUSH2 0x48a
0x416 PUSH1 0x4
0x418 DUP1
0x419 DUP1
0x41a CALLDATALOAD
0x41b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x430 AND
0x431 SWAP1
0x432 PUSH1 0x20
0x434 ADD
0x435 SWAP1
0x436 SWAP2
0x437 SWAP1
0x438 DUP1
0x439 CALLDATALOAD
0x43a SWAP1
0x43b PUSH1 0x20
0x43d ADD
0x43e SWAP1
0x43f SWAP2
0x440 SWAP1
0x441 DUP1
0x442 CALLDATALOAD
0x443 SWAP1
0x444 PUSH1 0x20
0x446 ADD
0x447 SWAP1
0x448 DUP3
0x449 ADD
0x44a DUP1
0x44b CALLDATALOAD
0x44c SWAP1
0x44d PUSH1 0x20
0x44f ADD
0x450 SWAP1
0x451 DUP1
0x452 DUP1
0x453 PUSH1 0x1f
0x455 ADD
0x456 PUSH1 0x20
0x458 DUP1
0x459 SWAP2
0x45a DIV
0x45b MUL
0x45c PUSH1 0x20
0x45e ADD
0x45f PUSH1 0x40
0x461 MLOAD
0x462 SWAP1
0x463 DUP2
0x464 ADD
0x465 PUSH1 0x40
0x467 MSTORE
0x468 DUP1
0x469 SWAP4
0x46a SWAP3
0x46b SWAP2
0x46c SWAP1
0x46d DUP2
0x46e DUP2
0x46f MSTORE
0x470 PUSH1 0x20
0x472 ADD
0x473 DUP4
0x474 DUP4
0x475 DUP1
0x476 DUP3
0x477 DUP5
0x478 CALLDATACOPY
0x479 DUP3
0x47a ADD
0x47b SWAP2
0x47c POP
0x47d POP
0x47e POP
0x47f POP
0x480 POP
0x481 POP
0x482 SWAP2
0x483 SWAP1
0x484 POP
0x485 POP
0x486 PUSH2 0xbc0
0x489 JUMP
---
0x412: JUMPDEST 
0x413: V304 = 0x48a
0x416: V305 = 0x4
0x41a: V306 = CALLDATALOAD 0x4
0x41b: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x430: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x432: V309 = 0x20
0x434: V310 = ADD 0x20 0x4
0x439: V311 = CALLDATALOAD 0x24
0x43b: V312 = 0x20
0x43d: V313 = ADD 0x20 0x24
0x442: V314 = CALLDATALOAD 0x44
0x444: V315 = 0x20
0x446: V316 = ADD 0x20 0x44
0x449: V317 = ADD 0x4 V314
0x44b: V318 = CALLDATALOAD V317
0x44d: V319 = 0x20
0x44f: V320 = ADD 0x20 V317
0x453: V321 = 0x1f
0x455: V322 = ADD 0x1f V318
0x456: V323 = 0x20
0x45a: V324 = DIV V322 0x20
0x45b: V325 = MUL V324 0x20
0x45c: V326 = 0x20
0x45e: V327 = ADD 0x20 V325
0x45f: V328 = 0x40
0x461: V329 = M[0x40]
0x464: V330 = ADD V329 V327
0x465: V331 = 0x40
0x467: M[0x40] = V330
0x46f: M[V329] = V318
0x470: V332 = 0x20
0x472: V333 = ADD 0x20 V329
0x478: CALLDATACOPY V333 V320 V318
0x47a: V334 = ADD V333 V318
0x486: V335 = 0xbc0
0x489: JUMP 0xbc0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x48a, V308, V311, V329]
Exit stack: [V10, 0x48a, V308, V311, V329]

================================

Block 0x48a
[0x48a:0x4a3]
---
Predecessors: [0xd3b]
Successors: []
---
0x48a JUMPDEST
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f DUP3
0x490 ISZERO
0x491 ISZERO
0x492 ISZERO
0x493 ISZERO
0x494 DUP2
0x495 MSTORE
0x496 PUSH1 0x20
0x498 ADD
0x499 SWAP2
0x49a POP
0x49b POP
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 SWAP2
0x4a1 SUB
0x4a2 SWAP1
0x4a3 RETURN
---
0x48a: JUMPDEST 
0x48b: V336 = 0x40
0x48d: V337 = M[0x40]
0x490: V338 = ISZERO {0x0, 0x1}
0x491: V339 = ISZERO V338
0x492: V340 = ISZERO V339
0x493: V341 = ISZERO V340
0x495: M[V337] = V341
0x496: V342 = 0x20
0x498: V343 = ADD 0x20 V337
0x49c: V344 = 0x40
0x49e: V345 = M[0x40]
0x4a1: V346 = SUB V343 V345
0x4a3: RETURN V345 V346
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a4
[0x4a4:0x4aa]
---
Predecessors: [0xa2]
Successors: [0x4ab, 0x4af]
---
0x4a4 JUMPDEST
0x4a5 CALLVALUE
0x4a6 ISZERO
0x4a7 PUSH2 0x4af
0x4aa JUMPI
---
0x4a4: JUMPDEST 
0x4a5: V347 = CALLVALUE
0x4a6: V348 = ISZERO V347
0x4a7: V349 = 0x4af
0x4aa: JUMPI 0x4af V348
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ab
[0x4ab:0x4ae]
---
Predecessors: [0x4a4]
Successors: []
---
0x4ab PUSH1 0x0
0x4ad DUP1
0x4ae REVERT
---
0x4ab: V350 = 0x0
0x4ae: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4af
[0x4af:0x4e3]
---
Predecessors: [0x4a4]
Successors: [0xd43]
---
0x4af JUMPDEST
0x4b0 PUSH2 0x4e4
0x4b3 PUSH1 0x4
0x4b5 DUP1
0x4b6 DUP1
0x4b7 CALLDATALOAD
0x4b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cd AND
0x4ce SWAP1
0x4cf PUSH1 0x20
0x4d1 ADD
0x4d2 SWAP1
0x4d3 SWAP2
0x4d4 SWAP1
0x4d5 DUP1
0x4d6 CALLDATALOAD
0x4d7 SWAP1
0x4d8 PUSH1 0x20
0x4da ADD
0x4db SWAP1
0x4dc SWAP2
0x4dd SWAP1
0x4de POP
0x4df POP
0x4e0 PUSH2 0xd43
0x4e3 JUMP
---
0x4af: JUMPDEST 
0x4b0: V351 = 0x4e4
0x4b3: V352 = 0x4
0x4b7: V353 = CALLDATALOAD 0x4
0x4b8: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x4cf: V356 = 0x20
0x4d1: V357 = ADD 0x20 0x4
0x4d6: V358 = CALLDATALOAD 0x24
0x4d8: V359 = 0x20
0x4da: V360 = ADD 0x20 0x24
0x4e0: V361 = 0xd43
0x4e3: JUMP 0xd43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4e4, V355, V358]
Exit stack: [V10, 0x4e4, V355, V358]

================================

Block 0x4e4
[0x4e4:0x4fd]
---
Predecessors: [0xfbd]
Successors: []
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x40
0x4e7 MLOAD
0x4e8 DUP1
0x4e9 DUP3
0x4ea ISZERO
0x4eb ISZERO
0x4ec ISZERO
0x4ed ISZERO
0x4ee DUP2
0x4ef MSTORE
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 SWAP2
0x4f4 POP
0x4f5 POP
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 DUP1
0x4fa SWAP2
0x4fb SUB
0x4fc SWAP1
0x4fd RETURN
---
0x4e4: JUMPDEST 
0x4e5: V362 = 0x40
0x4e7: V363 = M[0x40]
0x4ea: V364 = ISZERO 0x1
0x4eb: V365 = ISZERO 0x0
0x4ec: V366 = ISZERO 0x1
0x4ed: V367 = ISZERO 0x0
0x4ef: M[V363] = 0x1
0x4f0: V368 = 0x20
0x4f2: V369 = ADD 0x20 V363
0x4f6: V370 = 0x40
0x4f8: V371 = M[0x40]
0x4fb: V372 = SUB V369 V371
0x4fd: RETURN V371 V372
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4fe
[0x4fe:0x504]
---
Predecessors: [0xad]
Successors: [0x505, 0x509]
---
0x4fe JUMPDEST
0x4ff CALLVALUE
0x500 ISZERO
0x501 PUSH2 0x509
0x504 JUMPI
---
0x4fe: JUMPDEST 
0x4ff: V373 = CALLVALUE
0x500: V374 = ISZERO V373
0x501: V375 = 0x509
0x504: JUMPI 0x509 V374
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x505
[0x505:0x508]
---
Predecessors: [0x4fe]
Successors: []
---
0x505 PUSH1 0x0
0x507 DUP1
0x508 REVERT
---
0x505: V376 = 0x0
0x508: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x509
[0x509:0x553]
---
Predecessors: [0x4fe]
Successors: [0xfc3]
---
0x509 JUMPDEST
0x50a PUSH2 0x554
0x50d PUSH1 0x4
0x50f DUP1
0x510 DUP1
0x511 CALLDATALOAD
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 AND
0x528 SWAP1
0x529 PUSH1 0x20
0x52b ADD
0x52c SWAP1
0x52d SWAP2
0x52e SWAP1
0x52f DUP1
0x530 CALLDATALOAD
0x531 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x546 AND
0x547 SWAP1
0x548 PUSH1 0x20
0x54a ADD
0x54b SWAP1
0x54c SWAP2
0x54d SWAP1
0x54e POP
0x54f POP
0x550 PUSH2 0xfc3
0x553 JUMP
---
0x509: JUMPDEST 
0x50a: V377 = 0x554
0x50d: V378 = 0x4
0x511: V379 = CALLDATALOAD 0x4
0x512: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x529: V382 = 0x20
0x52b: V383 = ADD 0x20 0x4
0x530: V384 = CALLDATALOAD 0x24
0x531: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x546: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x548: V387 = 0x20
0x54a: V388 = ADD 0x20 0x24
0x550: V389 = 0xfc3
0x553: JUMP 0xfc3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x554, V381, V386]
Exit stack: [V10, 0x554, V381, V386]

================================

Block 0x554
[0x554:0x569]
---
Predecessors: [0x1045]
Successors: []
---
0x554 JUMPDEST
0x555 PUSH1 0x40
0x557 MLOAD
0x558 DUP1
0x559 DUP3
0x55a DUP2
0x55b MSTORE
0x55c PUSH1 0x20
0x55e ADD
0x55f SWAP2
0x560 POP
0x561 POP
0x562 PUSH1 0x40
0x564 MLOAD
0x565 DUP1
0x566 SWAP2
0x567 SUB
0x568 SWAP1
0x569 RETURN
---
0x554: JUMPDEST 
0x555: V390 = 0x40
0x557: V391 = M[0x40]
0x55b: M[V391] = V1008
0x55c: V392 = 0x20
0x55e: V393 = ADD 0x20 V391
0x562: V394 = 0x40
0x564: V395 = M[0x40]
0x567: V396 = SUB V393 V395
0x569: RETURN V395 V396
---
Entry stack: [V10, V1008]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x56a
[0x56a:0x5b9]
---
Predecessors: [0xc8]
Successors: [0x5ba, 0x600]
---
0x56a JUMPDEST
0x56b PUSH1 0x0
0x56d DUP1
0x56e SLOAD
0x56f PUSH1 0x1
0x571 DUP2
0x572 PUSH1 0x1
0x574 AND
0x575 ISZERO
0x576 PUSH2 0x100
0x579 MUL
0x57a SUB
0x57b AND
0x57c PUSH1 0x2
0x57e SWAP1
0x57f DIV
0x580 DUP1
0x581 PUSH1 0x1f
0x583 ADD
0x584 PUSH1 0x20
0x586 DUP1
0x587 SWAP2
0x588 DIV
0x589 MUL
0x58a PUSH1 0x20
0x58c ADD
0x58d PUSH1 0x40
0x58f MLOAD
0x590 SWAP1
0x591 DUP2
0x592 ADD
0x593 PUSH1 0x40
0x595 MSTORE
0x596 DUP1
0x597 SWAP3
0x598 SWAP2
0x599 SWAP1
0x59a DUP2
0x59b DUP2
0x59c MSTORE
0x59d PUSH1 0x20
0x59f ADD
0x5a0 DUP3
0x5a1 DUP1
0x5a2 SLOAD
0x5a3 PUSH1 0x1
0x5a5 DUP2
0x5a6 PUSH1 0x1
0x5a8 AND
0x5a9 ISZERO
0x5aa PUSH2 0x100
0x5ad MUL
0x5ae SUB
0x5af AND
0x5b0 PUSH1 0x2
0x5b2 SWAP1
0x5b3 DIV
0x5b4 DUP1
0x5b5 ISZERO
0x5b6 PUSH2 0x600
0x5b9 JUMPI
---
0x56a: JUMPDEST 
0x56b: V397 = 0x0
0x56e: V398 = S[0x0]
0x56f: V399 = 0x1
0x572: V400 = 0x1
0x574: V401 = AND 0x1 V398
0x575: V402 = ISZERO V401
0x576: V403 = 0x100
0x579: V404 = MUL 0x100 V402
0x57a: V405 = SUB V404 0x1
0x57b: V406 = AND V405 V398
0x57c: V407 = 0x2
0x57f: V408 = DIV V406 0x2
0x581: V409 = 0x1f
0x583: V410 = ADD 0x1f V408
0x584: V411 = 0x20
0x588: V412 = DIV V410 0x20
0x589: V413 = MUL V412 0x20
0x58a: V414 = 0x20
0x58c: V415 = ADD 0x20 V413
0x58d: V416 = 0x40
0x58f: V417 = M[0x40]
0x592: V418 = ADD V417 V415
0x593: V419 = 0x40
0x595: M[0x40] = V418
0x59c: M[V417] = V408
0x59d: V420 = 0x20
0x59f: V421 = ADD 0x20 V417
0x5a2: V422 = S[0x0]
0x5a3: V423 = 0x1
0x5a6: V424 = 0x1
0x5a8: V425 = AND 0x1 V422
0x5a9: V426 = ISZERO V425
0x5aa: V427 = 0x100
0x5ad: V428 = MUL 0x100 V426
0x5ae: V429 = SUB V428 0x1
0x5af: V430 = AND V429 V422
0x5b0: V431 = 0x2
0x5b3: V432 = DIV V430 0x2
0x5b5: V433 = ISZERO V432
0x5b6: V434 = 0x600
0x5b9: JUMPI 0x600 V433
---
Entry stack: [V10, 0xd0]
Stack pops: 0
Stack additions: [V417, 0x0, V408, V421, 0x0, V432]
Exit stack: [V10, 0xd0, V417, 0x0, V408, V421, 0x0, V432]

================================

Block 0x5ba
[0x5ba:0x5c1]
---
Predecessors: [0x56a]
Successors: [0x5c2, 0x5d5]
---
0x5ba DUP1
0x5bb PUSH1 0x1f
0x5bd LT
0x5be PUSH2 0x5d5
0x5c1 JUMPI
---
0x5bb: V435 = 0x1f
0x5bd: V436 = LT 0x1f V432
0x5be: V437 = 0x5d5
0x5c1: JUMPI 0x5d5 V436
---
Entry stack: [V10, 0xd0, V417, 0x0, V408, V421, 0x0, V432]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xd0, V417, 0x0, V408, V421, 0x0, V432]

================================

Block 0x5c2
[0x5c2:0x5d4]
---
Predecessors: [0x5ba]
Successors: [0x600]
---
0x5c2 PUSH2 0x100
0x5c5 DUP1
0x5c6 DUP4
0x5c7 SLOAD
0x5c8 DIV
0x5c9 MUL
0x5ca DUP4
0x5cb MSTORE
0x5cc SWAP2
0x5cd PUSH1 0x20
0x5cf ADD
0x5d0 SWAP2
0x5d1 PUSH2 0x600
0x5d4 JUMP
---
0x5c2: V438 = 0x100
0x5c7: V439 = S[0x0]
0x5c8: V440 = DIV V439 0x100
0x5c9: V441 = MUL V440 0x100
0x5cb: M[V421] = V441
0x5cd: V442 = 0x20
0x5cf: V443 = ADD 0x20 V421
0x5d1: V444 = 0x600
0x5d4: JUMP 0x600
---
Entry stack: [V10, 0xd0, V417, 0x0, V408, V421, 0x0, V432]
Stack pops: 3
Stack additions: [V443, S1, S0]
Exit stack: [V10, 0xd0, V417, 0x0, V408, V443, 0x0, V432]

================================

Block 0x5d5
[0x5d5:0x5e2]
---
Predecessors: [0x5ba]
Successors: [0x5e3]
---
0x5d5 JUMPDEST
0x5d6 DUP3
0x5d7 ADD
0x5d8 SWAP2
0x5d9 SWAP1
0x5da PUSH1 0x0
0x5dc MSTORE
0x5dd PUSH1 0x20
0x5df PUSH1 0x0
0x5e1 SHA3
0x5e2 SWAP1
---
0x5d5: JUMPDEST 
0x5d7: V445 = ADD V421 V432
0x5da: V446 = 0x0
0x5dc: M[0x0] = 0x0
0x5dd: V447 = 0x20
0x5df: V448 = 0x0
0x5e1: V449 = SHA3 0x0 0x20
---
Entry stack: [V10, 0xd0, V417, 0x0, V408, V421, 0x0, V432]
Stack pops: 3
Stack additions: [V445, V449, S2]
Exit stack: [V10, 0xd0, V417, 0x0, V408, V445, V449, V421]

================================

Block 0x5e3
[0x5e3:0x5f6]
---
Predecessors: [0x5d5, 0x5e3]
Successors: [0x5e3, 0x5f7]
---
0x5e3 JUMPDEST
0x5e4 DUP2
0x5e5 SLOAD
0x5e6 DUP2
0x5e7 MSTORE
0x5e8 SWAP1
0x5e9 PUSH1 0x1
0x5eb ADD
0x5ec SWAP1
0x5ed PUSH1 0x20
0x5ef ADD
0x5f0 DUP1
0x5f1 DUP4
0x5f2 GT
0x5f3 PUSH2 0x5e3
0x5f6 JUMPI
---
0x5e3: JUMPDEST 
0x5e5: V450 = S[S1]
0x5e7: M[S0] = V450
0x5e9: V451 = 0x1
0x5eb: V452 = ADD 0x1 S1
0x5ed: V453 = 0x20
0x5ef: V454 = ADD 0x20 S0
0x5f2: V455 = GT V445 V454
0x5f3: V456 = 0x5e3
0x5f6: JUMPI 0x5e3 V455
---
Entry stack: [V10, 0xd0, V417, 0x0, V408, V445, S1, S0]
Stack pops: 3
Stack additions: [S2, V452, V454]
Exit stack: [V10, 0xd0, V417, 0x0, V408, V445, V452, V454]

================================

Block 0x5f7
[0x5f7:0x5ff]
---
Predecessors: [0x5e3]
Successors: [0x600]
---
0x5f7 DUP3
0x5f8 SWAP1
0x5f9 SUB
0x5fa PUSH1 0x1f
0x5fc AND
0x5fd DUP3
0x5fe ADD
0x5ff SWAP2
---
0x5f9: V457 = SUB V454 V445
0x5fa: V458 = 0x1f
0x5fc: V459 = AND 0x1f V457
0x5fe: V460 = ADD V445 V459
---
Entry stack: [V10, 0xd0, V417, 0x0, V408, V445, V452, V454]
Stack pops: 3
Stack additions: [V460, S1, S2]
Exit stack: [V10, 0xd0, V417, 0x0, V408, V460, V452, V445]

================================

Block 0x600
[0x600:0x607]
---
Predecessors: [0x56a, 0x5c2, 0x5f7]
Successors: [0xd0]
---
0x600 JUMPDEST
0x601 POP
0x602 POP
0x603 POP
0x604 POP
0x605 POP
0x606 DUP2
0x607 JUMP
---
0x600: JUMPDEST 
0x607: JUMP 0xd0
---
Entry stack: [V10, 0xd0, V417, 0x0, V408, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0xd0, V417]

================================

Block 0x608
[0x608:0x6f4]
---
Predecessors: [0x157, 0xbc0]
Successors: [0x6f5]
---
0x608 JUMPDEST
0x609 PUSH1 0x0
0x60b DUP2
0x60c PUSH1 0x5
0x60e PUSH1 0x0
0x610 CALLER
0x611 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x626 AND
0x627 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63c AND
0x63d DUP2
0x63e MSTORE
0x63f PUSH1 0x20
0x641 ADD
0x642 SWAP1
0x643 DUP2
0x644 MSTORE
0x645 PUSH1 0x20
0x647 ADD
0x648 PUSH1 0x0
0x64a SHA3
0x64b PUSH1 0x0
0x64d DUP6
0x64e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x663 AND
0x664 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x679 AND
0x67a DUP2
0x67b MSTORE
0x67c PUSH1 0x20
0x67e ADD
0x67f SWAP1
0x680 DUP2
0x681 MSTORE
0x682 PUSH1 0x20
0x684 ADD
0x685 PUSH1 0x0
0x687 SHA3
0x688 DUP2
0x689 SWAP1
0x68a SSTORE
0x68b POP
0x68c DUP3
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 AND
0x6a3 CALLER
0x6a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b9 AND
0x6ba PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6db DUP5
0x6dc PUSH1 0x40
0x6de MLOAD
0x6df DUP1
0x6e0 DUP3
0x6e1 DUP2
0x6e2 MSTORE
0x6e3 PUSH1 0x20
0x6e5 ADD
0x6e6 SWAP2
0x6e7 POP
0x6e8 POP
0x6e9 PUSH1 0x40
0x6eb MLOAD
0x6ec DUP1
0x6ed SWAP2
0x6ee SUB
0x6ef SWAP1
0x6f0 LOG3
0x6f1 PUSH1 0x1
0x6f3 SWAP1
0x6f4 POP
---
0x608: JUMPDEST 
0x609: V461 = 0x0
0x60c: V462 = 0x5
0x60e: V463 = 0x0
0x610: V464 = CALLER
0x611: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x626: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x627: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x63c: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x63e: M[0x0] = V468
0x63f: V469 = 0x20
0x641: V470 = ADD 0x20 0x0
0x644: M[0x20] = 0x5
0x645: V471 = 0x20
0x647: V472 = ADD 0x20 0x20
0x648: V473 = 0x0
0x64a: V474 = SHA3 0x0 0x40
0x64b: V475 = 0x0
0x64e: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x663: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x664: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x679: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x67b: M[0x0] = V479
0x67c: V480 = 0x20
0x67e: V481 = ADD 0x20 0x0
0x681: M[0x20] = V474
0x682: V482 = 0x20
0x684: V483 = ADD 0x20 0x20
0x685: V484 = 0x0
0x687: V485 = SHA3 0x0 0x40
0x68a: S[V485] = S0
0x68d: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6a3: V488 = CALLER
0x6a4: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b9: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x6ba: V491 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6dc: V492 = 0x40
0x6de: V493 = M[0x40]
0x6e2: M[V493] = S0
0x6e3: V494 = 0x20
0x6e5: V495 = ADD 0x20 V493
0x6e9: V496 = 0x40
0x6eb: V497 = M[0x40]
0x6ee: V498 = SUB V495 V497
0x6f0: LOG V497 V498 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V490 V487
0x6f1: V499 = 0x1
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, S3, {0x18c, 0xbcd}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, S3, {0x18c, 0xbcd}, S1, S0, 0x1]

================================

Block 0x6f5
[0x6f5:0x6fa]
---
Predecessors: [0x608]
Successors: [0x18c, 0xbcd]
---
0x6f5 JUMPDEST
0x6f6 SWAP3
0x6f7 SWAP2
0x6f8 POP
0x6f9 POP
0x6fa JUMP
---
0x6f5: JUMPDEST 
0x6fa: JUMP {0x18c, 0xbcd}
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, S4, {0x18c, 0xbcd}, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, S4, 0x1]

================================

Block 0x6fb
[0x6fb:0x700]
---
Predecessors: [0x1b1]
Successors: [0x1b9]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x3
0x6fe SLOAD
0x6ff DUP2
0x700 JUMP
---
0x6fb: JUMPDEST 
0x6fc: V500 = 0x3
0x6fe: V501 = S[0x3]
0x700: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9]
Stack pops: 1
Stack additions: [S0, V501]
Exit stack: [V10, 0x1b9, V501]

================================

Block 0x701
[0x701:0x789]
---
Predecessors: [0x1da]
Successors: [0x78a, 0x78e]
---
0x701 JUMPDEST
0x702 PUSH1 0x0
0x704 PUSH1 0x5
0x706 PUSH1 0x0
0x708 DUP6
0x709 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71e AND
0x71f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x734 AND
0x735 DUP2
0x736 MSTORE
0x737 PUSH1 0x20
0x739 ADD
0x73a SWAP1
0x73b DUP2
0x73c MSTORE
0x73d PUSH1 0x20
0x73f ADD
0x740 PUSH1 0x0
0x742 SHA3
0x743 PUSH1 0x0
0x745 CALLER
0x746 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75b AND
0x75c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x771 AND
0x772 DUP2
0x773 MSTORE
0x774 PUSH1 0x20
0x776 ADD
0x777 SWAP1
0x778 DUP2
0x779 MSTORE
0x77a PUSH1 0x20
0x77c ADD
0x77d PUSH1 0x0
0x77f SHA3
0x780 SLOAD
0x781 DUP3
0x782 GT
0x783 ISZERO
0x784 ISZERO
0x785 ISZERO
0x786 PUSH2 0x78e
0x789 JUMPI
---
0x701: JUMPDEST 
0x702: V502 = 0x0
0x704: V503 = 0x5
0x706: V504 = 0x0
0x709: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x71e: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x71f: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x734: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x736: M[0x0] = V508
0x737: V509 = 0x20
0x739: V510 = ADD 0x20 0x0
0x73c: M[0x20] = 0x5
0x73d: V511 = 0x20
0x73f: V512 = ADD 0x20 0x20
0x740: V513 = 0x0
0x742: V514 = SHA3 0x0 0x40
0x743: V515 = 0x0
0x745: V516 = CALLER
0x746: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x75b: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x75c: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x771: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x773: M[0x0] = V520
0x774: V521 = 0x20
0x776: V522 = ADD 0x20 0x0
0x779: M[0x20] = V514
0x77a: V523 = 0x20
0x77c: V524 = ADD 0x20 0x20
0x77d: V525 = 0x0
0x77f: V526 = SHA3 0x0 0x40
0x780: V527 = S[V526]
0x782: V528 = GT V150 V527
0x783: V529 = ISZERO V528
0x784: V530 = ISZERO V529
0x785: V531 = ISZERO V530
0x786: V532 = 0x78e
0x789: JUMPI 0x78e V531
---
Entry stack: [V10, 0x22e, V142, V147, V150]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0]

================================

Block 0x78a
[0x78a:0x78d]
---
Predecessors: [0x701]
Successors: []
---
0x78a PUSH1 0x0
0x78c DUP1
0x78d REVERT
---
0x78a: V533 = 0x0
0x78d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, V142, V147, V150, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0]

================================

Block 0x78e
[0x78e:0x822]
---
Predecessors: [0x701]
Successors: [0x104b]
---
0x78e JUMPDEST
0x78f DUP2
0x790 PUSH1 0x5
0x792 PUSH1 0x0
0x794 DUP7
0x795 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7aa AND
0x7ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c0 AND
0x7c1 DUP2
0x7c2 MSTORE
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 SWAP1
0x7c7 DUP2
0x7c8 MSTORE
0x7c9 PUSH1 0x20
0x7cb ADD
0x7cc PUSH1 0x0
0x7ce SHA3
0x7cf PUSH1 0x0
0x7d1 CALLER
0x7d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e7 AND
0x7e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fd AND
0x7fe DUP2
0x7ff MSTORE
0x800 PUSH1 0x20
0x802 ADD
0x803 SWAP1
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x20
0x808 ADD
0x809 PUSH1 0x0
0x80b SHA3
0x80c PUSH1 0x0
0x80e DUP3
0x80f DUP3
0x810 SLOAD
0x811 SUB
0x812 SWAP3
0x813 POP
0x814 POP
0x815 DUP2
0x816 SWAP1
0x817 SSTORE
0x818 POP
0x819 PUSH2 0x823
0x81c DUP5
0x81d DUP5
0x81e DUP5
0x81f PUSH2 0x104b
0x822 JUMP
---
0x78e: JUMPDEST 
0x790: V534 = 0x5
0x792: V535 = 0x0
0x795: V536 = 0xffffffffffffffffffffffffffffffffffffffff
0x7aa: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x7ab: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c0: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x7c2: M[0x0] = V539
0x7c3: V540 = 0x20
0x7c5: V541 = ADD 0x20 0x0
0x7c8: M[0x20] = 0x5
0x7c9: V542 = 0x20
0x7cb: V543 = ADD 0x20 0x20
0x7cc: V544 = 0x0
0x7ce: V545 = SHA3 0x0 0x40
0x7cf: V546 = 0x0
0x7d1: V547 = CALLER
0x7d2: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e7: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x7e8: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fd: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x7ff: M[0x0] = V551
0x800: V552 = 0x20
0x802: V553 = ADD 0x20 0x0
0x805: M[0x20] = V545
0x806: V554 = 0x20
0x808: V555 = ADD 0x20 0x20
0x809: V556 = 0x0
0x80b: V557 = SHA3 0x0 0x40
0x80c: V558 = 0x0
0x810: V559 = S[V557]
0x811: V560 = SUB V559 V150
0x817: S[V557] = V560
0x819: V561 = 0x823
0x81f: V562 = 0x104b
0x822: JUMP 0x104b
---
Entry stack: [V10, 0x22e, V142, V147, V150, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x823, S3, S2, S1]
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0, 0x823, V142, V147, V150]

================================

Block 0x823
[0x823:0x825]
---
Predecessors: [0x1362]
Successors: [0x826]
---
0x823 JUMPDEST
0x824 SWAP1
0x825 POP
---
0x823: JUMPDEST 
---
Entry stack: [V10, S5, S4, S3, S2, 0x0, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S5, S4, S3, S2, 0x1]

================================

Block 0x826
[0x826:0x82c]
---
Predecessors: [0x823]
Successors: [0x22e]
---
0x826 JUMPDEST
0x827 SWAP4
0x828 SWAP3
0x829 POP
0x82a POP
0x82b POP
0x82c JUMP
---
0x826: JUMPDEST 
0x82c: JUMP S4
---
Entry stack: [V10, S4, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x82d
[0x82d:0x83f]
---
Predecessors: [0x253]
Successors: [0x25b]
---
0x82d JUMPDEST
0x82e PUSH1 0x2
0x830 PUSH1 0x0
0x832 SWAP1
0x833 SLOAD
0x834 SWAP1
0x835 PUSH2 0x100
0x838 EXP
0x839 SWAP1
0x83a DIV
0x83b PUSH1 0xff
0x83d AND
0x83e DUP2
0x83f JUMP
---
0x82d: JUMPDEST 
0x82e: V563 = 0x2
0x830: V564 = 0x0
0x833: V565 = S[0x2]
0x835: V566 = 0x100
0x838: V567 = EXP 0x100 0x0
0x83a: V568 = DIV V565 0x1
0x83b: V569 = 0xff
0x83d: V570 = AND 0xff V568
0x83f: JUMP 0x25b
---
Entry stack: [V10, 0x25b]
Stack pops: 1
Stack additions: [S0, V570]
Exit stack: [V10, 0x25b, V570]

================================

Block 0x840
[0x840:0x8ca]
---
Predecessors: [0x282]
Successors: [0x8cb, 0x951]
---
0x840 JUMPDEST
0x841 PUSH1 0x0
0x843 DUP1
0x844 PUSH1 0x5
0x846 PUSH1 0x0
0x848 CALLER
0x849 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85e AND
0x85f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x874 AND
0x875 DUP2
0x876 MSTORE
0x877 PUSH1 0x20
0x879 ADD
0x87a SWAP1
0x87b DUP2
0x87c MSTORE
0x87d PUSH1 0x20
0x87f ADD
0x880 PUSH1 0x0
0x882 SHA3
0x883 PUSH1 0x0
0x885 DUP6
0x886 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89b AND
0x89c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b1 AND
0x8b2 DUP2
0x8b3 MSTORE
0x8b4 PUSH1 0x20
0x8b6 ADD
0x8b7 SWAP1
0x8b8 DUP2
0x8b9 MSTORE
0x8ba PUSH1 0x20
0x8bc ADD
0x8bd PUSH1 0x0
0x8bf SHA3
0x8c0 SLOAD
0x8c1 SWAP1
0x8c2 POP
0x8c3 DUP1
0x8c4 DUP4
0x8c5 GT
0x8c6 ISZERO
0x8c7 PUSH2 0x951
0x8ca JUMPI
---
0x840: JUMPDEST 
0x841: V571 = 0x0
0x844: V572 = 0x5
0x846: V573 = 0x0
0x848: V574 = CALLER
0x849: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0x85e: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x85f: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0x874: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x876: M[0x0] = V578
0x877: V579 = 0x20
0x879: V580 = ADD 0x20 0x0
0x87c: M[0x20] = 0x5
0x87d: V581 = 0x20
0x87f: V582 = ADD 0x20 0x20
0x880: V583 = 0x0
0x882: V584 = SHA3 0x0 0x40
0x883: V585 = 0x0
0x886: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x89b: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x89c: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b1: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x8b3: M[0x0] = V589
0x8b4: V590 = 0x20
0x8b6: V591 = ADD 0x20 0x0
0x8b9: M[0x20] = V584
0x8ba: V592 = 0x20
0x8bc: V593 = ADD 0x20 0x20
0x8bd: V594 = 0x0
0x8bf: V595 = SHA3 0x0 0x40
0x8c0: V596 = S[V595]
0x8c5: V597 = GT V193 V596
0x8c6: V598 = ISZERO V597
0x8c7: V599 = 0x951
0x8ca: JUMPI 0x951 V598
---
Entry stack: [V10, 0x2b7, V190, V193]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V596]
Exit stack: [V10, 0x2b7, V190, V193, 0x0, V596]

================================

Block 0x8cb
[0x8cb:0x950]
---
Predecessors: [0x840]
Successors: [0x9d5]
---
0x8cb PUSH1 0x0
0x8cd PUSH1 0x5
0x8cf PUSH1 0x0
0x8d1 CALLER
0x8d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e7 AND
0x8e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fd AND
0x8fe DUP2
0x8ff MSTORE
0x900 PUSH1 0x20
0x902 ADD
0x903 SWAP1
0x904 DUP2
0x905 MSTORE
0x906 PUSH1 0x20
0x908 ADD
0x909 PUSH1 0x0
0x90b SHA3
0x90c PUSH1 0x0
0x90e DUP7
0x90f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x924 AND
0x925 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93a AND
0x93b DUP2
0x93c MSTORE
0x93d PUSH1 0x20
0x93f ADD
0x940 SWAP1
0x941 DUP2
0x942 MSTORE
0x943 PUSH1 0x20
0x945 ADD
0x946 PUSH1 0x0
0x948 SHA3
0x949 DUP2
0x94a SWAP1
0x94b SSTORE
0x94c POP
0x94d PUSH2 0x9d5
0x950 JUMP
---
0x8cb: V600 = 0x0
0x8cd: V601 = 0x5
0x8cf: V602 = 0x0
0x8d1: V603 = CALLER
0x8d2: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e7: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x8e8: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fd: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x8ff: M[0x0] = V607
0x900: V608 = 0x20
0x902: V609 = ADD 0x20 0x0
0x905: M[0x20] = 0x5
0x906: V610 = 0x20
0x908: V611 = ADD 0x20 0x20
0x909: V612 = 0x0
0x90b: V613 = SHA3 0x0 0x40
0x90c: V614 = 0x0
0x90f: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0x924: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x925: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0x93a: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x93c: M[0x0] = V618
0x93d: V619 = 0x20
0x93f: V620 = ADD 0x20 0x0
0x942: M[0x20] = V613
0x943: V621 = 0x20
0x945: V622 = ADD 0x20 0x20
0x946: V623 = 0x0
0x948: V624 = SHA3 0x0 0x40
0x94b: S[V624] = 0x0
0x94d: V625 = 0x9d5
0x950: JUMP 0x9d5
---
Entry stack: [V10, 0x2b7, V190, V193, 0x0, V596]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x2b7, V190, V193, 0x0, V596]

================================

Block 0x951
[0x951:0x9d4]
---
Predecessors: [0x840]
Successors: [0x9d5]
---
0x951 JUMPDEST
0x952 DUP3
0x953 DUP2
0x954 SUB
0x955 PUSH1 0x5
0x957 PUSH1 0x0
0x959 CALLER
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f AND
0x970 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x985 AND
0x986 DUP2
0x987 MSTORE
0x988 PUSH1 0x20
0x98a ADD
0x98b SWAP1
0x98c DUP2
0x98d MSTORE
0x98e PUSH1 0x20
0x990 ADD
0x991 PUSH1 0x0
0x993 SHA3
0x994 PUSH1 0x0
0x996 DUP7
0x997 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ac AND
0x9ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c2 AND
0x9c3 DUP2
0x9c4 MSTORE
0x9c5 PUSH1 0x20
0x9c7 ADD
0x9c8 SWAP1
0x9c9 DUP2
0x9ca MSTORE
0x9cb PUSH1 0x20
0x9cd ADD
0x9ce PUSH1 0x0
0x9d0 SHA3
0x9d1 DUP2
0x9d2 SWAP1
0x9d3 SSTORE
0x9d4 POP
---
0x951: JUMPDEST 
0x954: V626 = SUB V596 V193
0x955: V627 = 0x5
0x957: V628 = 0x0
0x959: V629 = CALLER
0x95a: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0x970: V632 = 0xffffffffffffffffffffffffffffffffffffffff
0x985: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x987: M[0x0] = V633
0x988: V634 = 0x20
0x98a: V635 = ADD 0x20 0x0
0x98d: M[0x20] = 0x5
0x98e: V636 = 0x20
0x990: V637 = ADD 0x20 0x20
0x991: V638 = 0x0
0x993: V639 = SHA3 0x0 0x40
0x994: V640 = 0x0
0x997: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ac: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x9ad: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c2: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x9c4: M[0x0] = V644
0x9c5: V645 = 0x20
0x9c7: V646 = ADD 0x20 0x0
0x9ca: M[0x20] = V639
0x9cb: V647 = 0x20
0x9cd: V648 = ADD 0x20 0x20
0x9ce: V649 = 0x0
0x9d0: V650 = SHA3 0x0 0x40
0x9d3: S[V650] = V626
---
Entry stack: [V10, 0x2b7, V190, V193, 0x0, V596]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x2b7, V190, V193, 0x0, V596]

================================

Block 0x9d5
[0x9d5:0xaba]
---
Predecessors: [0x8cb, 0x951]
Successors: [0xabb]
---
0x9d5 JUMPDEST
0x9d6 DUP4
0x9d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ec AND
0x9ed CALLER
0x9ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa03 AND
0xa04 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xa25 PUSH1 0x5
0xa27 PUSH1 0x0
0xa29 CALLER
0xa2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3f AND
0xa40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa55 AND
0xa56 DUP2
0xa57 MSTORE
0xa58 PUSH1 0x20
0xa5a ADD
0xa5b SWAP1
0xa5c DUP2
0xa5d MSTORE
0xa5e PUSH1 0x20
0xa60 ADD
0xa61 PUSH1 0x0
0xa63 SHA3
0xa64 PUSH1 0x0
0xa66 DUP9
0xa67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7c AND
0xa7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa92 AND
0xa93 DUP2
0xa94 MSTORE
0xa95 PUSH1 0x20
0xa97 ADD
0xa98 SWAP1
0xa99 DUP2
0xa9a MSTORE
0xa9b PUSH1 0x20
0xa9d ADD
0xa9e PUSH1 0x0
0xaa0 SHA3
0xaa1 SLOAD
0xaa2 PUSH1 0x40
0xaa4 MLOAD
0xaa5 DUP1
0xaa6 DUP3
0xaa7 DUP2
0xaa8 MSTORE
0xaa9 PUSH1 0x20
0xaab ADD
0xaac SWAP2
0xaad POP
0xaae POP
0xaaf PUSH1 0x40
0xab1 MLOAD
0xab2 DUP1
0xab3 SWAP2
0xab4 SUB
0xab5 SWAP1
0xab6 LOG3
0xab7 PUSH1 0x1
0xab9 SWAP2
0xaba POP
---
0x9d5: JUMPDEST 
0x9d7: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ec: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x9ed: V653 = CALLER
0x9ee: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xa03: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xa04: V656 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xa25: V657 = 0x5
0xa27: V658 = 0x0
0xa29: V659 = CALLER
0xa2a: V660 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3f: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0xa40: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xa55: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0xa57: M[0x0] = V663
0xa58: V664 = 0x20
0xa5a: V665 = ADD 0x20 0x0
0xa5d: M[0x20] = 0x5
0xa5e: V666 = 0x20
0xa60: V667 = ADD 0x20 0x20
0xa61: V668 = 0x0
0xa63: V669 = SHA3 0x0 0x40
0xa64: V670 = 0x0
0xa67: V671 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7c: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0xa7d: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0xa94: M[0x0] = V674
0xa95: V675 = 0x20
0xa97: V676 = ADD 0x20 0x0
0xa9a: M[0x20] = V669
0xa9b: V677 = 0x20
0xa9d: V678 = ADD 0x20 0x20
0xa9e: V679 = 0x0
0xaa0: V680 = SHA3 0x0 0x40
0xaa1: V681 = S[V680]
0xaa2: V682 = 0x40
0xaa4: V683 = M[0x40]
0xaa8: M[V683] = V681
0xaa9: V684 = 0x20
0xaab: V685 = ADD 0x20 V683
0xaaf: V686 = 0x40
0xab1: V687 = M[0x40]
0xab4: V688 = SUB V685 V687
0xab6: LOG V687 V688 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V655 V652
0xab7: V689 = 0x1
---
Entry stack: [V10, 0x2b7, V190, V193, 0x0, V596]
Stack pops: 4
Stack additions: [S3, S2, 0x1, S0]
Exit stack: [V10, 0x2b7, V190, V193, 0x1, V596]

================================

Block 0xabb
[0xabb:0xac1]
---
Predecessors: [0x9d5]
Successors: [0x2b7]
---
0xabb JUMPDEST
0xabc POP
0xabd SWAP3
0xabe SWAP2
0xabf POP
0xac0 POP
0xac1 JUMP
---
0xabb: JUMPDEST 
0xac1: JUMP 0x2b7
---
Entry stack: [V10, 0x2b7, V190, V193, 0x1, V596]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x1]

================================

Block 0xac2
[0xac2:0xb06]
---
Predecessors: [0x2dc]
Successors: [0xb07]
---
0xac2 JUMPDEST
0xac3 PUSH1 0x0
0xac5 PUSH1 0x4
0xac7 PUSH1 0x0
0xac9 DUP4
0xaca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xadf AND
0xae0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf5 AND
0xaf6 DUP2
0xaf7 MSTORE
0xaf8 PUSH1 0x20
0xafa ADD
0xafb SWAP1
0xafc DUP2
0xafd MSTORE
0xafe PUSH1 0x20
0xb00 ADD
0xb01 PUSH1 0x0
0xb03 SHA3
0xb04 SLOAD
0xb05 SWAP1
0xb06 POP
---
0xac2: JUMPDEST 
0xac3: V690 = 0x0
0xac5: V691 = 0x4
0xac7: V692 = 0x0
0xaca: V693 = 0xffffffffffffffffffffffffffffffffffffffff
0xadf: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0xae0: V695 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf5: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V694
0xaf7: M[0x0] = V696
0xaf8: V697 = 0x20
0xafa: V698 = ADD 0x20 0x0
0xafd: M[0x20] = 0x4
0xafe: V699 = 0x20
0xb00: V700 = ADD 0x20 0x20
0xb01: V701 = 0x0
0xb03: V702 = SHA3 0x0 0x40
0xb04: V703 = S[V702]
---
Entry stack: [V10, 0x308, V216]
Stack pops: 1
Stack additions: [S0, V703]
Exit stack: [V10, 0x308, V216, V703]

================================

Block 0xb07
[0xb07:0xb0b]
---
Predecessors: [0xac2]
Successors: [0x308]
---
0xb07 JUMPDEST
0xb08 SWAP2
0xb09 SWAP1
0xb0a POP
0xb0b JUMP
---
0xb07: JUMPDEST 
0xb0b: JUMP 0x308
---
Entry stack: [V10, 0x308, V216, V703]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V703]

================================

Block 0xb0c
[0xb0c:0xb5b]
---
Predecessors: [0x329]
Successors: [0xb5c, 0xba2]
---
0xb0c JUMPDEST
0xb0d PUSH1 0x1
0xb0f DUP1
0xb10 SLOAD
0xb11 PUSH1 0x1
0xb13 DUP2
0xb14 PUSH1 0x1
0xb16 AND
0xb17 ISZERO
0xb18 PUSH2 0x100
0xb1b MUL
0xb1c SUB
0xb1d AND
0xb1e PUSH1 0x2
0xb20 SWAP1
0xb21 DIV
0xb22 DUP1
0xb23 PUSH1 0x1f
0xb25 ADD
0xb26 PUSH1 0x20
0xb28 DUP1
0xb29 SWAP2
0xb2a DIV
0xb2b MUL
0xb2c PUSH1 0x20
0xb2e ADD
0xb2f PUSH1 0x40
0xb31 MLOAD
0xb32 SWAP1
0xb33 DUP2
0xb34 ADD
0xb35 PUSH1 0x40
0xb37 MSTORE
0xb38 DUP1
0xb39 SWAP3
0xb3a SWAP2
0xb3b SWAP1
0xb3c DUP2
0xb3d DUP2
0xb3e MSTORE
0xb3f PUSH1 0x20
0xb41 ADD
0xb42 DUP3
0xb43 DUP1
0xb44 SLOAD
0xb45 PUSH1 0x1
0xb47 DUP2
0xb48 PUSH1 0x1
0xb4a AND
0xb4b ISZERO
0xb4c PUSH2 0x100
0xb4f MUL
0xb50 SUB
0xb51 AND
0xb52 PUSH1 0x2
0xb54 SWAP1
0xb55 DIV
0xb56 DUP1
0xb57 ISZERO
0xb58 PUSH2 0xba2
0xb5b JUMPI
---
0xb0c: JUMPDEST 
0xb0d: V704 = 0x1
0xb10: V705 = S[0x1]
0xb11: V706 = 0x1
0xb14: V707 = 0x1
0xb16: V708 = AND 0x1 V705
0xb17: V709 = ISZERO V708
0xb18: V710 = 0x100
0xb1b: V711 = MUL 0x100 V709
0xb1c: V712 = SUB V711 0x1
0xb1d: V713 = AND V712 V705
0xb1e: V714 = 0x2
0xb21: V715 = DIV V713 0x2
0xb23: V716 = 0x1f
0xb25: V717 = ADD 0x1f V715
0xb26: V718 = 0x20
0xb2a: V719 = DIV V717 0x20
0xb2b: V720 = MUL V719 0x20
0xb2c: V721 = 0x20
0xb2e: V722 = ADD 0x20 V720
0xb2f: V723 = 0x40
0xb31: V724 = M[0x40]
0xb34: V725 = ADD V724 V722
0xb35: V726 = 0x40
0xb37: M[0x40] = V725
0xb3e: M[V724] = V715
0xb3f: V727 = 0x20
0xb41: V728 = ADD 0x20 V724
0xb44: V729 = S[0x1]
0xb45: V730 = 0x1
0xb48: V731 = 0x1
0xb4a: V732 = AND 0x1 V729
0xb4b: V733 = ISZERO V732
0xb4c: V734 = 0x100
0xb4f: V735 = MUL 0x100 V733
0xb50: V736 = SUB V735 0x1
0xb51: V737 = AND V736 V729
0xb52: V738 = 0x2
0xb55: V739 = DIV V737 0x2
0xb57: V740 = ISZERO V739
0xb58: V741 = 0xba2
0xb5b: JUMPI 0xba2 V740
---
Entry stack: [V10, 0x331]
Stack pops: 0
Stack additions: [V724, 0x1, V715, V728, 0x1, V739]
Exit stack: [V10, 0x331, V724, 0x1, V715, V728, 0x1, V739]

================================

Block 0xb5c
[0xb5c:0xb63]
---
Predecessors: [0xb0c]
Successors: [0xb64, 0xb77]
---
0xb5c DUP1
0xb5d PUSH1 0x1f
0xb5f LT
0xb60 PUSH2 0xb77
0xb63 JUMPI
---
0xb5d: V742 = 0x1f
0xb5f: V743 = LT 0x1f V739
0xb60: V744 = 0xb77
0xb63: JUMPI 0xb77 V743
---
Entry stack: [V10, 0x331, V724, 0x1, V715, V728, 0x1, V739]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x331, V724, 0x1, V715, V728, 0x1, V739]

================================

Block 0xb64
[0xb64:0xb76]
---
Predecessors: [0xb5c]
Successors: [0xba2]
---
0xb64 PUSH2 0x100
0xb67 DUP1
0xb68 DUP4
0xb69 SLOAD
0xb6a DIV
0xb6b MUL
0xb6c DUP4
0xb6d MSTORE
0xb6e SWAP2
0xb6f PUSH1 0x20
0xb71 ADD
0xb72 SWAP2
0xb73 PUSH2 0xba2
0xb76 JUMP
---
0xb64: V745 = 0x100
0xb69: V746 = S[0x1]
0xb6a: V747 = DIV V746 0x100
0xb6b: V748 = MUL V747 0x100
0xb6d: M[V728] = V748
0xb6f: V749 = 0x20
0xb71: V750 = ADD 0x20 V728
0xb73: V751 = 0xba2
0xb76: JUMP 0xba2
---
Entry stack: [V10, 0x331, V724, 0x1, V715, V728, 0x1, V739]
Stack pops: 3
Stack additions: [V750, S1, S0]
Exit stack: [V10, 0x331, V724, 0x1, V715, V750, 0x1, V739]

================================

Block 0xb77
[0xb77:0xb84]
---
Predecessors: [0xb5c]
Successors: [0xb85]
---
0xb77 JUMPDEST
0xb78 DUP3
0xb79 ADD
0xb7a SWAP2
0xb7b SWAP1
0xb7c PUSH1 0x0
0xb7e MSTORE
0xb7f PUSH1 0x20
0xb81 PUSH1 0x0
0xb83 SHA3
0xb84 SWAP1
---
0xb77: JUMPDEST 
0xb79: V752 = ADD V728 V739
0xb7c: V753 = 0x0
0xb7e: M[0x0] = 0x1
0xb7f: V754 = 0x20
0xb81: V755 = 0x0
0xb83: V756 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x331, V724, 0x1, V715, V728, 0x1, V739]
Stack pops: 3
Stack additions: [V752, V756, S2]
Exit stack: [V10, 0x331, V724, 0x1, V715, V752, V756, V728]

================================

Block 0xb85
[0xb85:0xb98]
---
Predecessors: [0xb77, 0xb85]
Successors: [0xb85, 0xb99]
---
0xb85 JUMPDEST
0xb86 DUP2
0xb87 SLOAD
0xb88 DUP2
0xb89 MSTORE
0xb8a SWAP1
0xb8b PUSH1 0x1
0xb8d ADD
0xb8e SWAP1
0xb8f PUSH1 0x20
0xb91 ADD
0xb92 DUP1
0xb93 DUP4
0xb94 GT
0xb95 PUSH2 0xb85
0xb98 JUMPI
---
0xb85: JUMPDEST 
0xb87: V757 = S[S1]
0xb89: M[S0] = V757
0xb8b: V758 = 0x1
0xb8d: V759 = ADD 0x1 S1
0xb8f: V760 = 0x20
0xb91: V761 = ADD 0x20 S0
0xb94: V762 = GT V752 V761
0xb95: V763 = 0xb85
0xb98: JUMPI 0xb85 V762
---
Entry stack: [V10, 0x331, V724, 0x1, V715, V752, S1, S0]
Stack pops: 3
Stack additions: [S2, V759, V761]
Exit stack: [V10, 0x331, V724, 0x1, V715, V752, V759, V761]

================================

Block 0xb99
[0xb99:0xba1]
---
Predecessors: [0xb85]
Successors: [0xba2]
---
0xb99 DUP3
0xb9a SWAP1
0xb9b SUB
0xb9c PUSH1 0x1f
0xb9e AND
0xb9f DUP3
0xba0 ADD
0xba1 SWAP2
---
0xb9b: V764 = SUB V761 V752
0xb9c: V765 = 0x1f
0xb9e: V766 = AND 0x1f V764
0xba0: V767 = ADD V752 V766
---
Entry stack: [V10, 0x331, V724, 0x1, V715, V752, V759, V761]
Stack pops: 3
Stack additions: [V767, S1, S2]
Exit stack: [V10, 0x331, V724, 0x1, V715, V767, V759, V752]

================================

Block 0xba2
[0xba2:0xba9]
---
Predecessors: [0xb0c, 0xb64, 0xb99]
Successors: [0x331]
---
0xba2 JUMPDEST
0xba3 POP
0xba4 POP
0xba5 POP
0xba6 POP
0xba7 POP
0xba8 DUP2
0xba9 JUMP
---
0xba2: JUMPDEST 
0xba9: JUMP 0x331
---
Entry stack: [V10, 0x331, V724, 0x1, V715, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x331, V724]

================================

Block 0xbaa
[0xbaa:0xbb6]
---
Predecessors: [0x3b8]
Successors: [0x104b]
---
0xbaa JUMPDEST
0xbab PUSH1 0x0
0xbad PUSH2 0xbb7
0xbb0 CALLER
0xbb1 DUP5
0xbb2 DUP5
0xbb3 PUSH2 0x104b
0xbb6 JUMP
---
0xbaa: JUMPDEST 
0xbab: V768 = 0x0
0xbad: V769 = 0xbb7
0xbb0: V770 = CALLER
0xbb3: V771 = 0x104b
0xbb6: JUMP 0x104b
---
Entry stack: [V10, 0x3ed, V282, V285]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xbb7, V770, S1, S0]
Exit stack: [V10, 0x3ed, V282, V285, 0x0, 0xbb7, V770, V282, V285]

================================

Block 0xbb7
[0xbb7:0xbb9]
---
Predecessors: [0x1362]
Successors: [0xbba]
---
0xbb7 JUMPDEST
0xbb8 SWAP1
0xbb9 POP
---
0xbb7: JUMPDEST 
---
Entry stack: [V10, S5, S4, S3, S2, 0x0, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S5, S4, S3, S2, 0x1]

================================

Block 0xbba
[0xbba:0xbbf]
---
Predecessors: [0xbb7]
Successors: [0x3ed]
---
0xbba JUMPDEST
0xbbb SWAP3
0xbbc SWAP2
0xbbd POP
0xbbe POP
0xbbf JUMP
---
0xbba: JUMPDEST 
0xbbf: JUMP S3
---
Entry stack: [V10, S4, S3, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S4, 0x1]

================================

Block 0xbc0
[0xbc0:0xbcc]
---
Predecessors: [0x412]
Successors: [0x608]
---
0xbc0 JUMPDEST
0xbc1 PUSH1 0x0
0xbc3 DUP1
0xbc4 PUSH2 0xbcd
0xbc7 DUP6
0xbc8 DUP6
0xbc9 PUSH2 0x608
0xbcc JUMP
---
0xbc0: JUMPDEST 
0xbc1: V772 = 0x0
0xbc4: V773 = 0xbcd
0xbc9: V774 = 0x608
0xbcc: JUMP 0x608
---
Entry stack: [V10, 0x48a, V308, V311, V329]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0, 0xbcd, S2, S1]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, 0x0, 0xbcd, V308, V311]

================================

Block 0xbcd
[0xbcd:0xbd2]
---
Predecessors: [0x6f5]
Successors: [0xbd3, 0xd36]
---
0xbcd JUMPDEST
0xbce ISZERO
0xbcf PUSH2 0xd36
0xbd2 JUMPI
---
0xbcd: JUMPDEST 
0xbce: V775 = ISZERO 0x1
0xbcf: V776 = 0xd36
0xbd2: JUMPI 0xd36 0x0
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, S1]

================================

Block 0xbd3
[0xbd3:0xcae]
---
Predecessors: [0xbcd]
Successors: [0xcaf]
---
0xbd3 DUP5
0xbd4 SWAP1
0xbd5 POP
0xbd6 DUP1
0xbd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbec AND
0xbed PUSH4 0x8f4ffcb1
0xbf2 CALLER
0xbf3 DUP7
0xbf4 ADDRESS
0xbf5 DUP8
0xbf6 PUSH1 0x40
0xbf8 MLOAD
0xbf9 DUP6
0xbfa PUSH4 0xffffffff
0xbff AND
0xc00 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc1e MUL
0xc1f DUP2
0xc20 MSTORE
0xc21 PUSH1 0x4
0xc23 ADD
0xc24 DUP1
0xc25 DUP6
0xc26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3b AND
0xc3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc51 AND
0xc52 DUP2
0xc53 MSTORE
0xc54 PUSH1 0x20
0xc56 ADD
0xc57 DUP5
0xc58 DUP2
0xc59 MSTORE
0xc5a PUSH1 0x20
0xc5c ADD
0xc5d DUP4
0xc5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc73 AND
0xc74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc89 AND
0xc8a DUP2
0xc8b MSTORE
0xc8c PUSH1 0x20
0xc8e ADD
0xc8f DUP1
0xc90 PUSH1 0x20
0xc92 ADD
0xc93 DUP3
0xc94 DUP2
0xc95 SUB
0xc96 DUP3
0xc97 MSTORE
0xc98 DUP4
0xc99 DUP2
0xc9a DUP2
0xc9b MLOAD
0xc9c DUP2
0xc9d MSTORE
0xc9e PUSH1 0x20
0xca0 ADD
0xca1 SWAP2
0xca2 POP
0xca3 DUP1
0xca4 MLOAD
0xca5 SWAP1
0xca6 PUSH1 0x20
0xca8 ADD
0xca9 SWAP1
0xcaa DUP1
0xcab DUP4
0xcac DUP4
0xcad PUSH1 0x0
---
0xbd7: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xbec: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0xbed: V779 = 0x8f4ffcb1
0xbf2: V780 = CALLER
0xbf4: V781 = ADDRESS
0xbf6: V782 = 0x40
0xbf8: V783 = M[0x40]
0xbfa: V784 = 0xffffffff
0xbff: V785 = AND 0xffffffff 0x8f4ffcb1
0xc00: V786 = 0x100000000000000000000000000000000000000000000000000000000
0xc1e: V787 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8f4ffcb1
0xc20: M[V783] = 0x8f4ffcb100000000000000000000000000000000000000000000000000000000
0xc21: V788 = 0x4
0xc23: V789 = ADD 0x4 V783
0xc26: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3b: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xc3c: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xc51: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0xc53: M[V789] = V793
0xc54: V794 = 0x20
0xc56: V795 = ADD 0x20 V789
0xc59: M[V795] = V311
0xc5a: V796 = 0x20
0xc5c: V797 = ADD 0x20 V795
0xc5e: V798 = 0xffffffffffffffffffffffffffffffffffffffff
0xc73: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0xc74: V800 = 0xffffffffffffffffffffffffffffffffffffffff
0xc89: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0xc8b: M[V797] = V801
0xc8c: V802 = 0x20
0xc8e: V803 = ADD 0x20 V797
0xc90: V804 = 0x20
0xc92: V805 = ADD 0x20 V803
0xc95: V806 = SUB V805 V789
0xc97: M[V803] = V806
0xc9b: V807 = M[V329]
0xc9d: M[V805] = V807
0xc9e: V808 = 0x20
0xca0: V809 = ADD 0x20 V805
0xca4: V810 = M[V329]
0xca6: V811 = 0x20
0xca8: V812 = ADD 0x20 V329
0xcad: V813 = 0x0
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V778, 0x8f4ffcb1, V780, S3, V781, S2, V789, V803, V809, V812, V810, V810, V809, V812, 0x0]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, 0x0]

================================

Block 0xcaf
[0xcaf:0xcb7]
---
Predecessors: [0xbd3, 0xcc0]
Successors: [0xcb8, 0xccb]
---
0xcaf JUMPDEST
0xcb0 DUP4
0xcb1 DUP2
0xcb2 LT
0xcb3 ISZERO
0xcb4 PUSH2 0xccb
0xcb7 JUMPI
---
0xcaf: JUMPDEST 
0xcb2: V814 = LT S0 V810
0xcb3: V815 = ISZERO V814
0xcb4: V816 = 0xccb
0xcb7: JUMPI 0xccb V815
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, S0]

================================

Block 0xcb8
[0xcb8:0xcbf]
---
Predecessors: [0xcaf]
Successors: [0xcc0]
---
0xcb8 DUP1
0xcb9 DUP3
0xcba ADD
0xcbb MLOAD
0xcbc DUP2
0xcbd DUP5
0xcbe ADD
0xcbf MSTORE
---
0xcba: V817 = ADD V812 S0
0xcbb: V818 = M[V817]
0xcbe: V819 = ADD V809 S0
0xcbf: M[V819] = V818
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, S0]

================================

Block 0xcc0
[0xcc0:0xcca]
---
Predecessors: [0xcb8]
Successors: [0xcaf]
---
0xcc0 JUMPDEST
0xcc1 PUSH1 0x20
0xcc3 DUP2
0xcc4 ADD
0xcc5 SWAP1
0xcc6 POP
0xcc7 PUSH2 0xcaf
0xcca JUMP
---
0xcc0: JUMPDEST 
0xcc1: V820 = 0x20
0xcc4: V821 = ADD S0 0x20
0xcc7: V822 = 0xcaf
0xcca: JUMP 0xcaf
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, S0]
Stack pops: 1
Stack additions: [V821]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, V821]

================================

Block 0xccb
[0xccb:0xcde]
---
Predecessors: [0xcaf]
Successors: [0xcdf, 0xcf8]
---
0xccb JUMPDEST
0xccc POP
0xccd POP
0xcce POP
0xccf POP
0xcd0 SWAP1
0xcd1 POP
0xcd2 SWAP1
0xcd3 DUP2
0xcd4 ADD
0xcd5 SWAP1
0xcd6 PUSH1 0x1f
0xcd8 AND
0xcd9 DUP1
0xcda ISZERO
0xcdb PUSH2 0xcf8
0xcde JUMPI
---
0xccb: JUMPDEST 
0xcd4: V823 = ADD V810 V809
0xcd6: V824 = 0x1f
0xcd8: V825 = AND 0x1f V810
0xcda: V826 = ISZERO V825
0xcdb: V827 = 0xcf8
0xcde: JUMPI 0xcf8 V826
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V809, V812, V810, V810, V809, V812, S0]
Stack pops: 7
Stack additions: [V823, V825]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V823, V825]

================================

Block 0xcdf
[0xcdf:0xcf7]
---
Predecessors: [0xccb]
Successors: [0xcf8]
---
0xcdf DUP1
0xce0 DUP3
0xce1 SUB
0xce2 DUP1
0xce3 MLOAD
0xce4 PUSH1 0x1
0xce6 DUP4
0xce7 PUSH1 0x20
0xce9 SUB
0xcea PUSH2 0x100
0xced EXP
0xcee SUB
0xcef NOT
0xcf0 AND
0xcf1 DUP2
0xcf2 MSTORE
0xcf3 PUSH1 0x20
0xcf5 ADD
0xcf6 SWAP2
0xcf7 POP
---
0xce1: V828 = SUB V823 V825
0xce3: V829 = M[V828]
0xce4: V830 = 0x1
0xce7: V831 = 0x20
0xce9: V832 = SUB 0x20 V825
0xcea: V833 = 0x100
0xced: V834 = EXP 0x100 V832
0xcee: V835 = SUB V834 0x1
0xcef: V836 = NOT V835
0xcf0: V837 = AND V836 V829
0xcf2: M[V828] = V837
0xcf3: V838 = 0x20
0xcf5: V839 = ADD 0x20 V828
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V823, V825]
Stack pops: 2
Stack additions: [V839, S0]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, V839, V825]

================================

Block 0xcf8
[0xcf8:0xd14]
---
Predecessors: [0xccb, 0xcdf]
Successors: [0xd15, 0xd19]
---
0xcf8 JUMPDEST
0xcf9 POP
0xcfa SWAP6
0xcfb POP
0xcfc POP
0xcfd POP
0xcfe POP
0xcff POP
0xd00 POP
0xd01 PUSH1 0x0
0xd03 PUSH1 0x40
0xd05 MLOAD
0xd06 DUP1
0xd07 DUP4
0xd08 SUB
0xd09 DUP2
0xd0a PUSH1 0x0
0xd0c DUP8
0xd0d DUP1
0xd0e EXTCODESIZE
0xd0f ISZERO
0xd10 ISZERO
0xd11 PUSH2 0xd19
0xd14 JUMPI
---
0xcf8: JUMPDEST 
0xd01: V840 = 0x0
0xd03: V841 = 0x40
0xd05: V842 = M[0x40]
0xd08: V843 = SUB S1 V842
0xd0a: V844 = 0x0
0xd0e: V845 = EXTCODESIZE V778
0xd0f: V846 = ISZERO V845
0xd10: V847 = ISZERO V846
0xd11: V848 = 0xd19
0xd14: JUMPI 0xd19 V847
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, V780, V311, V781, V329, V789, V803, S1, V825]
Stack pops: 10
Stack additions: [S9, S8, S1, 0x0, V842, V843, V842, 0x0, S9]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S1, 0x0, V842, V843, V842, 0x0, V778]

================================

Block 0xd15
[0xd15:0xd18]
---
Predecessors: [0xcf8]
Successors: []
---
0xd15 PUSH1 0x0
0xd17 DUP1
0xd18 REVERT
---
0xd15: V849 = 0x0
0xd18: REVERT 0x0 0x0
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S6, 0x0, V842, V843, V842, 0x0, V778]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S6, 0x0, V842, V843, V842, 0x0, V778]

================================

Block 0xd19
[0xd19:0xd25]
---
Predecessors: [0xcf8]
Successors: [0xd26, 0xd2a]
---
0xd19 JUMPDEST
0xd1a PUSH2 0x2c6
0xd1d GAS
0xd1e SUB
0xd1f CALL
0xd20 ISZERO
0xd21 ISZERO
0xd22 PUSH2 0xd2a
0xd25 JUMPI
---
0xd19: JUMPDEST 
0xd1a: V850 = 0x2c6
0xd1d: V851 = GAS
0xd1e: V852 = SUB V851 0x2c6
0xd1f: V853 = CALL V852 V778 0x0 V842 V843 V842 0x0
0xd20: V854 = ISZERO V853
0xd21: V855 = ISZERO V854
0xd22: V856 = 0xd2a
0xd25: JUMPI 0xd2a V855
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S6, 0x0, V842, V843, V842, 0x0, V778]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S6]

================================

Block 0xd26
[0xd26:0xd29]
---
Predecessors: [0xd19]
Successors: []
---
0xd26 PUSH1 0x0
0xd28 DUP1
0xd29 REVERT
---
0xd26: V857 = 0x0
0xd29: REVERT 0x0 0x0
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S0]

================================

Block 0xd2a
[0xd2a:0xd35]
---
Predecessors: [0xd19]
Successors: [0xd3b]
---
0xd2a JUMPDEST
0xd2b POP
0xd2c POP
0xd2d POP
0xd2e PUSH1 0x1
0xd30 SWAP2
0xd31 POP
0xd32 PUSH2 0xd3b
0xd35 JUMP
---
0xd2a: JUMPDEST 
0xd2e: V858 = 0x1
0xd32: V859 = 0xd3b
0xd35: JUMP 0xd3b
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, V308, V778, 0x8f4ffcb1, S0]
Stack pops: 5
Stack additions: [0x1, S3]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x1, V308]

================================

Block 0xd36
[0xd36:0xd3a]
---
Predecessors: [0xbcd]
Successors: [0xd3b]
---
0xd36 JUMPDEST
0xd37 PUSH1 0x0
0xd39 SWAP2
0xd3a POP
---
0xd36: JUMPDEST 
0xd37: V860 = 0x0
---
Entry stack: [V10, 0x48a, V308, V311, V329, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x48a, V308, V311, V329, 0x0, S0]

================================

Block 0xd3b
[0xd3b:0xd42]
---
Predecessors: [0xd2a, 0xd36]
Successors: [0x48a]
---
0xd3b JUMPDEST
0xd3c POP
0xd3d SWAP4
0xd3e SWAP3
0xd3f POP
0xd40 POP
0xd41 POP
0xd42 JUMP
---
0xd3b: JUMPDEST 
0xd42: JUMP 0x48a
---
Entry stack: [V10, 0x48a, V308, V311, V329, {0x0, 0x1}, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xd43
[0xd43:0xe48]
---
Predecessors: [0x4af]
Successors: [0xe49, 0xe4d]
---
0xd43 JUMPDEST
0xd44 PUSH1 0x0
0xd46 PUSH1 0x5
0xd48 PUSH1 0x0
0xd4a CALLER
0xd4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd60 AND
0xd61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd76 AND
0xd77 DUP2
0xd78 MSTORE
0xd79 PUSH1 0x20
0xd7b ADD
0xd7c SWAP1
0xd7d DUP2
0xd7e MSTORE
0xd7f PUSH1 0x20
0xd81 ADD
0xd82 PUSH1 0x0
0xd84 SHA3
0xd85 PUSH1 0x0
0xd87 DUP5
0xd88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9d AND
0xd9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb3 AND
0xdb4 DUP2
0xdb5 MSTORE
0xdb6 PUSH1 0x20
0xdb8 ADD
0xdb9 SWAP1
0xdba DUP2
0xdbb MSTORE
0xdbc PUSH1 0x20
0xdbe ADD
0xdbf PUSH1 0x0
0xdc1 SHA3
0xdc2 SLOAD
0xdc3 DUP3
0xdc4 PUSH1 0x5
0xdc6 PUSH1 0x0
0xdc8 CALLER
0xdc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdde AND
0xddf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf4 AND
0xdf5 DUP2
0xdf6 MSTORE
0xdf7 PUSH1 0x20
0xdf9 ADD
0xdfa SWAP1
0xdfb DUP2
0xdfc MSTORE
0xdfd PUSH1 0x20
0xdff ADD
0xe00 PUSH1 0x0
0xe02 SHA3
0xe03 PUSH1 0x0
0xe05 DUP7
0xe06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1b AND
0xe1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe31 AND
0xe32 DUP2
0xe33 MSTORE
0xe34 PUSH1 0x20
0xe36 ADD
0xe37 SWAP1
0xe38 DUP2
0xe39 MSTORE
0xe3a PUSH1 0x20
0xe3c ADD
0xe3d PUSH1 0x0
0xe3f SHA3
0xe40 SLOAD
0xe41 ADD
0xe42 GT
0xe43 ISZERO
0xe44 ISZERO
0xe45 PUSH2 0xe4d
0xe48 JUMPI
---
0xd43: JUMPDEST 
0xd44: V861 = 0x0
0xd46: V862 = 0x5
0xd48: V863 = 0x0
0xd4a: V864 = CALLER
0xd4b: V865 = 0xffffffffffffffffffffffffffffffffffffffff
0xd60: V866 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0xd61: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0xd76: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0xd78: M[0x0] = V868
0xd79: V869 = 0x20
0xd7b: V870 = ADD 0x20 0x0
0xd7e: M[0x20] = 0x5
0xd7f: V871 = 0x20
0xd81: V872 = ADD 0x20 0x20
0xd82: V873 = 0x0
0xd84: V874 = SHA3 0x0 0x40
0xd85: V875 = 0x0
0xd88: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9d: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0xd9e: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb3: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0xdb5: M[0x0] = V879
0xdb6: V880 = 0x20
0xdb8: V881 = ADD 0x20 0x0
0xdbb: M[0x20] = V874
0xdbc: V882 = 0x20
0xdbe: V883 = ADD 0x20 0x20
0xdbf: V884 = 0x0
0xdc1: V885 = SHA3 0x0 0x40
0xdc2: V886 = S[V885]
0xdc4: V887 = 0x5
0xdc6: V888 = 0x0
0xdc8: V889 = CALLER
0xdc9: V890 = 0xffffffffffffffffffffffffffffffffffffffff
0xdde: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V889
0xddf: V892 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf4: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff V891
0xdf6: M[0x0] = V893
0xdf7: V894 = 0x20
0xdf9: V895 = ADD 0x20 0x0
0xdfc: M[0x20] = 0x5
0xdfd: V896 = 0x20
0xdff: V897 = ADD 0x20 0x20
0xe00: V898 = 0x0
0xe02: V899 = SHA3 0x0 0x40
0xe03: V900 = 0x0
0xe06: V901 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1b: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0xe1c: V903 = 0xffffffffffffffffffffffffffffffffffffffff
0xe31: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0xe33: M[0x0] = V904
0xe34: V905 = 0x20
0xe36: V906 = ADD 0x20 0x0
0xe39: M[0x20] = V899
0xe3a: V907 = 0x20
0xe3c: V908 = ADD 0x20 0x20
0xe3d: V909 = 0x0
0xe3f: V910 = SHA3 0x0 0x40
0xe40: V911 = S[V910]
0xe41: V912 = ADD V911 V358
0xe42: V913 = GT V912 V886
0xe43: V914 = ISZERO V913
0xe44: V915 = ISZERO V914
0xe45: V916 = 0xe4d
0xe48: JUMPI 0xe4d V915
---
Entry stack: [V10, 0x4e4, V355, V358]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x4e4, V355, V358, 0x0]

================================

Block 0xe49
[0xe49:0xe4c]
---
Predecessors: [0xd43]
Successors: []
---
0xe49 PUSH1 0x0
0xe4b DUP1
0xe4c REVERT
---
0xe49: V917 = 0x0
0xe4c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x4e4, V355, V358, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4e4, V355, V358, 0x0]

================================

Block 0xe4d
[0xe4d:0xfbc]
---
Predecessors: [0xd43]
Successors: [0xfbd]
---
0xe4d JUMPDEST
0xe4e DUP2
0xe4f PUSH1 0x5
0xe51 PUSH1 0x0
0xe53 CALLER
0xe54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe69 AND
0xe6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7f AND
0xe80 DUP2
0xe81 MSTORE
0xe82 PUSH1 0x20
0xe84 ADD
0xe85 SWAP1
0xe86 DUP2
0xe87 MSTORE
0xe88 PUSH1 0x20
0xe8a ADD
0xe8b PUSH1 0x0
0xe8d SHA3
0xe8e PUSH1 0x0
0xe90 DUP6
0xe91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea6 AND
0xea7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xebc AND
0xebd DUP2
0xebe MSTORE
0xebf PUSH1 0x20
0xec1 ADD
0xec2 SWAP1
0xec3 DUP2
0xec4 MSTORE
0xec5 PUSH1 0x20
0xec7 ADD
0xec8 PUSH1 0x0
0xeca SHA3
0xecb PUSH1 0x0
0xecd DUP3
0xece DUP3
0xecf SLOAD
0xed0 ADD
0xed1 SWAP3
0xed2 POP
0xed3 POP
0xed4 DUP2
0xed5 SWAP1
0xed6 SSTORE
0xed7 POP
0xed8 DUP3
0xed9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeee AND
0xeef CALLER
0xef0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf05 AND
0xf06 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xf27 PUSH1 0x5
0xf29 PUSH1 0x0
0xf2b CALLER
0xf2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf41 AND
0xf42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf57 AND
0xf58 DUP2
0xf59 MSTORE
0xf5a PUSH1 0x20
0xf5c ADD
0xf5d SWAP1
0xf5e DUP2
0xf5f MSTORE
0xf60 PUSH1 0x20
0xf62 ADD
0xf63 PUSH1 0x0
0xf65 SHA3
0xf66 PUSH1 0x0
0xf68 DUP8
0xf69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7e AND
0xf7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf94 AND
0xf95 DUP2
0xf96 MSTORE
0xf97 PUSH1 0x20
0xf99 ADD
0xf9a SWAP1
0xf9b DUP2
0xf9c MSTORE
0xf9d PUSH1 0x20
0xf9f ADD
0xfa0 PUSH1 0x0
0xfa2 SHA3
0xfa3 SLOAD
0xfa4 PUSH1 0x40
0xfa6 MLOAD
0xfa7 DUP1
0xfa8 DUP3
0xfa9 DUP2
0xfaa MSTORE
0xfab PUSH1 0x20
0xfad ADD
0xfae SWAP2
0xfaf POP
0xfb0 POP
0xfb1 PUSH1 0x40
0xfb3 MLOAD
0xfb4 DUP1
0xfb5 SWAP2
0xfb6 SUB
0xfb7 SWAP1
0xfb8 LOG3
0xfb9 PUSH1 0x1
0xfbb SWAP1
0xfbc POP
---
0xe4d: JUMPDEST 
0xe4f: V918 = 0x5
0xe51: V919 = 0x0
0xe53: V920 = CALLER
0xe54: V921 = 0xffffffffffffffffffffffffffffffffffffffff
0xe69: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V920
0xe6a: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7f: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xe81: M[0x0] = V924
0xe82: V925 = 0x20
0xe84: V926 = ADD 0x20 0x0
0xe87: M[0x20] = 0x5
0xe88: V927 = 0x20
0xe8a: V928 = ADD 0x20 0x20
0xe8b: V929 = 0x0
0xe8d: V930 = SHA3 0x0 0x40
0xe8e: V931 = 0x0
0xe91: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xea6: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0xea7: V934 = 0xffffffffffffffffffffffffffffffffffffffff
0xebc: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V933
0xebe: M[0x0] = V935
0xebf: V936 = 0x20
0xec1: V937 = ADD 0x20 0x0
0xec4: M[0x20] = V930
0xec5: V938 = 0x20
0xec7: V939 = ADD 0x20 0x20
0xec8: V940 = 0x0
0xeca: V941 = SHA3 0x0 0x40
0xecb: V942 = 0x0
0xecf: V943 = S[V941]
0xed0: V944 = ADD V943 V358
0xed6: S[V941] = V944
0xed9: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0xeee: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0xeef: V947 = CALLER
0xef0: V948 = 0xffffffffffffffffffffffffffffffffffffffff
0xf05: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0xf06: V950 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xf27: V951 = 0x5
0xf29: V952 = 0x0
0xf2b: V953 = CALLER
0xf2c: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0xf41: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0xf42: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0xf57: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V955
0xf59: M[0x0] = V957
0xf5a: V958 = 0x20
0xf5c: V959 = ADD 0x20 0x0
0xf5f: M[0x20] = 0x5
0xf60: V960 = 0x20
0xf62: V961 = ADD 0x20 0x20
0xf63: V962 = 0x0
0xf65: V963 = SHA3 0x0 0x40
0xf66: V964 = 0x0
0xf69: V965 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7e: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0xf7f: V967 = 0xffffffffffffffffffffffffffffffffffffffff
0xf94: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V966
0xf96: M[0x0] = V968
0xf97: V969 = 0x20
0xf99: V970 = ADD 0x20 0x0
0xf9c: M[0x20] = V963
0xf9d: V971 = 0x20
0xf9f: V972 = ADD 0x20 0x20
0xfa0: V973 = 0x0
0xfa2: V974 = SHA3 0x0 0x40
0xfa3: V975 = S[V974]
0xfa4: V976 = 0x40
0xfa6: V977 = M[0x40]
0xfaa: M[V977] = V975
0xfab: V978 = 0x20
0xfad: V979 = ADD 0x20 V977
0xfb1: V980 = 0x40
0xfb3: V981 = M[0x40]
0xfb6: V982 = SUB V979 V981
0xfb8: LOG V981 V982 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V949 V946
0xfb9: V983 = 0x1
---
Entry stack: [V10, 0x4e4, V355, V358, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x4e4, V355, V358, 0x1]

================================

Block 0xfbd
[0xfbd:0xfc2]
---
Predecessors: [0xe4d]
Successors: [0x4e4]
---
0xfbd JUMPDEST
0xfbe SWAP3
0xfbf SWAP2
0xfc0 POP
0xfc1 POP
0xfc2 JUMP
---
0xfbd: JUMPDEST 
0xfc2: JUMP 0x4e4
---
Entry stack: [V10, 0x4e4, V355, V358, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xfc3
[0xfc3:0x1044]
---
Predecessors: [0x509]
Successors: [0x1045]
---
0xfc3 JUMPDEST
0xfc4 PUSH1 0x0
0xfc6 PUSH1 0x5
0xfc8 PUSH1 0x0
0xfca DUP5
0xfcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe0 AND
0xfe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff6 AND
0xff7 DUP2
0xff8 MSTORE
0xff9 PUSH1 0x20
0xffb ADD
0xffc SWAP1
0xffd DUP2
0xffe MSTORE
0xfff PUSH1 0x20
0x1001 ADD
0x1002 PUSH1 0x0
0x1004 SHA3
0x1005 PUSH1 0x0
0x1007 DUP4
0x1008 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101d AND
0x101e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1033 AND
0x1034 DUP2
0x1035 MSTORE
0x1036 PUSH1 0x20
0x1038 ADD
0x1039 SWAP1
0x103a DUP2
0x103b MSTORE
0x103c PUSH1 0x20
0x103e ADD
0x103f PUSH1 0x0
0x1041 SHA3
0x1042 SLOAD
0x1043 SWAP1
0x1044 POP
---
0xfc3: JUMPDEST 
0xfc4: V984 = 0x0
0xfc6: V985 = 0x5
0xfc8: V986 = 0x0
0xfcb: V987 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe0: V988 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0xfe1: V989 = 0xffffffffffffffffffffffffffffffffffffffff
0xff6: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0xff8: M[0x0] = V990
0xff9: V991 = 0x20
0xffb: V992 = ADD 0x20 0x0
0xffe: M[0x20] = 0x5
0xfff: V993 = 0x20
0x1001: V994 = ADD 0x20 0x20
0x1002: V995 = 0x0
0x1004: V996 = SHA3 0x0 0x40
0x1005: V997 = 0x0
0x1008: V998 = 0xffffffffffffffffffffffffffffffffffffffff
0x101d: V999 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x101e: V1000 = 0xffffffffffffffffffffffffffffffffffffffff
0x1033: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V999
0x1035: M[0x0] = V1001
0x1036: V1002 = 0x20
0x1038: V1003 = ADD 0x20 0x0
0x103b: M[0x20] = V996
0x103c: V1004 = 0x20
0x103e: V1005 = ADD 0x20 0x20
0x103f: V1006 = 0x0
0x1041: V1007 = SHA3 0x0 0x40
0x1042: V1008 = S[V1007]
---
Entry stack: [V10, 0x554, V381, V386]
Stack pops: 2
Stack additions: [S1, S0, V1008]
Exit stack: [V10, 0x554, V381, V386, V1008]

================================

Block 0x1045
[0x1045:0x104a]
---
Predecessors: [0xfc3]
Successors: [0x554]
---
0x1045 JUMPDEST
0x1046 SWAP3
0x1047 SWAP2
0x1048 POP
0x1049 POP
0x104a JUMP
---
0x1045: JUMPDEST 
0x104a: JUMP 0x554
---
Entry stack: [V10, 0x554, V381, V386, V1008]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V1008]

================================

Block 0x104b
[0x104b:0x106f]
---
Predecessors: [0x78e, 0xbaa]
Successors: [0x1070, 0x1074]
---
0x104b JUMPDEST
0x104c PUSH1 0x0
0x104e DUP1
0x104f PUSH1 0x0
0x1051 DUP5
0x1052 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1067 AND
0x1068 EQ
0x1069 ISZERO
0x106a ISZERO
0x106b ISZERO
0x106c PUSH2 0x1074
0x106f JUMPI
---
0x104b: JUMPDEST 
0x104c: V1009 = 0x0
0x104f: V1010 = 0x0
0x1052: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0x1067: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1068: V1013 = EQ V1012 0x0
0x1069: V1014 = ISZERO V1013
0x106a: V1015 = ISZERO V1014
0x106b: V1016 = ISZERO V1015
0x106c: V1017 = 0x1074
0x106f: JUMPI 0x1074 V1016
---
Entry stack: [V10, S8, S7, S6, S5, 0x0, {0x823, 0xbb7}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V10, S8, S7, S6, S5, 0x0, {0x823, 0xbb7}, S2, S1, S0, 0x0, 0x0]

================================

Block 0x1070
[0x1070:0x1073]
---
Predecessors: [0x104b]
Successors: []
---
0x1070 PUSH1 0x0
0x1072 DUP1
0x1073 REVERT
---
0x1070: V1018 = 0x0
0x1073: REVERT 0x0 0x0
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]

================================

Block 0x1074
[0x1074:0x10bd]
---
Predecessors: [0x104b]
Successors: [0x10be, 0x10c2]
---
0x1074 JUMPDEST
0x1075 DUP3
0x1076 PUSH1 0x4
0x1078 PUSH1 0x0
0x107a DUP8
0x107b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1090 AND
0x1091 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a6 AND
0x10a7 DUP2
0x10a8 MSTORE
0x10a9 PUSH1 0x20
0x10ab ADD
0x10ac SWAP1
0x10ad DUP2
0x10ae MSTORE
0x10af PUSH1 0x20
0x10b1 ADD
0x10b2 PUSH1 0x0
0x10b4 SHA3
0x10b5 SLOAD
0x10b6 LT
0x10b7 ISZERO
0x10b8 ISZERO
0x10b9 ISZERO
0x10ba PUSH2 0x10c2
0x10bd JUMPI
---
0x1074: JUMPDEST 
0x1076: V1019 = 0x4
0x1078: V1020 = 0x0
0x107b: V1021 = 0xffffffffffffffffffffffffffffffffffffffff
0x1090: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1091: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a6: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1022
0x10a8: M[0x0] = V1024
0x10a9: V1025 = 0x20
0x10ab: V1026 = ADD 0x20 0x0
0x10ae: M[0x20] = 0x4
0x10af: V1027 = 0x20
0x10b1: V1028 = ADD 0x20 0x20
0x10b2: V1029 = 0x0
0x10b4: V1030 = SHA3 0x0 0x40
0x10b5: V1031 = S[V1030]
0x10b6: V1032 = LT V1031 S2
0x10b7: V1033 = ISZERO V1032
0x10b8: V1034 = ISZERO V1033
0x10b9: V1035 = ISZERO V1034
0x10ba: V1036 = 0x10c2
0x10bd: JUMPI 0x10c2 V1035
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]

================================

Block 0x10be
[0x10be:0x10c1]
---
Predecessors: [0x1074]
Successors: []
---
0x10be PUSH1 0x0
0x10c0 DUP1
0x10c1 REVERT
---
0x10be: V1037 = 0x0
0x10c1: REVERT 0x0 0x0
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]

================================

Block 0x10c2
[0x10c2:0x114b]
---
Predecessors: [0x1074]
Successors: [0x114c, 0x1150]
---
0x10c2 JUMPDEST
0x10c3 PUSH1 0x4
0x10c5 PUSH1 0x0
0x10c7 DUP6
0x10c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10dd AND
0x10de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f3 AND
0x10f4 DUP2
0x10f5 MSTORE
0x10f6 PUSH1 0x20
0x10f8 ADD
0x10f9 SWAP1
0x10fa DUP2
0x10fb MSTORE
0x10fc PUSH1 0x20
0x10fe ADD
0x10ff PUSH1 0x0
0x1101 SHA3
0x1102 SLOAD
0x1103 DUP4
0x1104 PUSH1 0x4
0x1106 PUSH1 0x0
0x1108 DUP8
0x1109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111e AND
0x111f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1134 AND
0x1135 DUP2
0x1136 MSTORE
0x1137 PUSH1 0x20
0x1139 ADD
0x113a SWAP1
0x113b DUP2
0x113c MSTORE
0x113d PUSH1 0x20
0x113f ADD
0x1140 PUSH1 0x0
0x1142 SHA3
0x1143 SLOAD
0x1144 ADD
0x1145 GT
0x1146 ISZERO
0x1147 ISZERO
0x1148 PUSH2 0x1150
0x114b JUMPI
---
0x10c2: JUMPDEST 
0x10c3: V1038 = 0x4
0x10c5: V1039 = 0x0
0x10c8: V1040 = 0xffffffffffffffffffffffffffffffffffffffff
0x10dd: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x10de: V1042 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f3: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff V1041
0x10f5: M[0x0] = V1043
0x10f6: V1044 = 0x20
0x10f8: V1045 = ADD 0x20 0x0
0x10fb: M[0x20] = 0x4
0x10fc: V1046 = 0x20
0x10fe: V1047 = ADD 0x20 0x20
0x10ff: V1048 = 0x0
0x1101: V1049 = SHA3 0x0 0x40
0x1102: V1050 = S[V1049]
0x1104: V1051 = 0x4
0x1106: V1052 = 0x0
0x1109: V1053 = 0xffffffffffffffffffffffffffffffffffffffff
0x111e: V1054 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x111f: V1055 = 0xffffffffffffffffffffffffffffffffffffffff
0x1134: V1056 = AND 0xffffffffffffffffffffffffffffffffffffffff V1054
0x1136: M[0x0] = V1056
0x1137: V1057 = 0x20
0x1139: V1058 = ADD 0x20 0x0
0x113c: M[0x20] = 0x4
0x113d: V1059 = 0x20
0x113f: V1060 = ADD 0x20 0x20
0x1140: V1061 = 0x0
0x1142: V1062 = SHA3 0x0 0x40
0x1143: V1063 = S[V1062]
0x1144: V1064 = ADD V1063 S2
0x1145: V1065 = GT V1064 V1050
0x1146: V1066 = ISZERO V1065
0x1147: V1067 = ISZERO V1066
0x1148: V1068 = 0x1150
0x114b: JUMPI 0x1150 V1067
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]

================================

Block 0x114c
[0x114c:0x114f]
---
Predecessors: [0x10c2]
Successors: []
---
0x114c PUSH1 0x0
0x114e DUP1
0x114f REVERT
---
0x114c: V1069 = 0x0
0x114f: REVERT 0x0 0x0
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]

================================

Block 0x1150
[0x1150:0x135b]
---
Predecessors: [0x10c2]
Successors: [0x135c, 0x135d]
---
0x1150 JUMPDEST
0x1151 PUSH1 0x4
0x1153 PUSH1 0x0
0x1155 DUP6
0x1156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116b AND
0x116c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1181 AND
0x1182 DUP2
0x1183 MSTORE
0x1184 PUSH1 0x20
0x1186 ADD
0x1187 SWAP1
0x1188 DUP2
0x1189 MSTORE
0x118a PUSH1 0x20
0x118c ADD
0x118d PUSH1 0x0
0x118f SHA3
0x1190 SLOAD
0x1191 PUSH1 0x4
0x1193 PUSH1 0x0
0x1195 DUP8
0x1196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ab AND
0x11ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11c1 AND
0x11c2 DUP2
0x11c3 MSTORE
0x11c4 PUSH1 0x20
0x11c6 ADD
0x11c7 SWAP1
0x11c8 DUP2
0x11c9 MSTORE
0x11ca PUSH1 0x20
0x11cc ADD
0x11cd PUSH1 0x0
0x11cf SHA3
0x11d0 SLOAD
0x11d1 ADD
0x11d2 SWAP1
0x11d3 POP
0x11d4 DUP3
0x11d5 PUSH1 0x4
0x11d7 PUSH1 0x0
0x11d9 DUP8
0x11da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ef AND
0x11f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1205 AND
0x1206 DUP2
0x1207 MSTORE
0x1208 PUSH1 0x20
0x120a ADD
0x120b SWAP1
0x120c DUP2
0x120d MSTORE
0x120e PUSH1 0x20
0x1210 ADD
0x1211 PUSH1 0x0
0x1213 SHA3
0x1214 PUSH1 0x0
0x1216 DUP3
0x1217 DUP3
0x1218 SLOAD
0x1219 SUB
0x121a SWAP3
0x121b POP
0x121c POP
0x121d DUP2
0x121e SWAP1
0x121f SSTORE
0x1220 POP
0x1221 DUP3
0x1222 PUSH1 0x4
0x1224 PUSH1 0x0
0x1226 DUP7
0x1227 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123c AND
0x123d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1252 AND
0x1253 DUP2
0x1254 MSTORE
0x1255 PUSH1 0x20
0x1257 ADD
0x1258 SWAP1
0x1259 DUP2
0x125a MSTORE
0x125b PUSH1 0x20
0x125d ADD
0x125e PUSH1 0x0
0x1260 SHA3
0x1261 PUSH1 0x0
0x1263 DUP3
0x1264 DUP3
0x1265 SLOAD
0x1266 ADD
0x1267 SWAP3
0x1268 POP
0x1269 POP
0x126a DUP2
0x126b SWAP1
0x126c SSTORE
0x126d POP
0x126e DUP4
0x126f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1284 AND
0x1285 DUP6
0x1286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129b AND
0x129c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x12bd DUP6
0x12be PUSH1 0x40
0x12c0 MLOAD
0x12c1 DUP1
0x12c2 DUP3
0x12c3 DUP2
0x12c4 MSTORE
0x12c5 PUSH1 0x20
0x12c7 ADD
0x12c8 SWAP2
0x12c9 POP
0x12ca POP
0x12cb PUSH1 0x40
0x12cd MLOAD
0x12ce DUP1
0x12cf SWAP2
0x12d0 SUB
0x12d1 SWAP1
0x12d2 LOG3
0x12d3 DUP1
0x12d4 PUSH1 0x4
0x12d6 PUSH1 0x0
0x12d8 DUP7
0x12d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ee AND
0x12ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1304 AND
0x1305 DUP2
0x1306 MSTORE
0x1307 PUSH1 0x20
0x1309 ADD
0x130a SWAP1
0x130b DUP2
0x130c MSTORE
0x130d PUSH1 0x20
0x130f ADD
0x1310 PUSH1 0x0
0x1312 SHA3
0x1313 SLOAD
0x1314 PUSH1 0x4
0x1316 PUSH1 0x0
0x1318 DUP9
0x1319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132e AND
0x132f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1344 AND
0x1345 DUP2
0x1346 MSTORE
0x1347 PUSH1 0x20
0x1349 ADD
0x134a SWAP1
0x134b DUP2
0x134c MSTORE
0x134d PUSH1 0x20
0x134f ADD
0x1350 PUSH1 0x0
0x1352 SHA3
0x1353 SLOAD
0x1354 ADD
0x1355 EQ
0x1356 ISZERO
0x1357 ISZERO
0x1358 PUSH2 0x135d
0x135b JUMPI
---
0x1150: JUMPDEST 
0x1151: V1070 = 0x4
0x1153: V1071 = 0x0
0x1156: V1072 = 0xffffffffffffffffffffffffffffffffffffffff
0x116b: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x116c: V1074 = 0xffffffffffffffffffffffffffffffffffffffff
0x1181: V1075 = AND 0xffffffffffffffffffffffffffffffffffffffff V1073
0x1183: M[0x0] = V1075
0x1184: V1076 = 0x20
0x1186: V1077 = ADD 0x20 0x0
0x1189: M[0x20] = 0x4
0x118a: V1078 = 0x20
0x118c: V1079 = ADD 0x20 0x20
0x118d: V1080 = 0x0
0x118f: V1081 = SHA3 0x0 0x40
0x1190: V1082 = S[V1081]
0x1191: V1083 = 0x4
0x1193: V1084 = 0x0
0x1196: V1085 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ab: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x11ac: V1087 = 0xffffffffffffffffffffffffffffffffffffffff
0x11c1: V1088 = AND 0xffffffffffffffffffffffffffffffffffffffff V1086
0x11c3: M[0x0] = V1088
0x11c4: V1089 = 0x20
0x11c6: V1090 = ADD 0x20 0x0
0x11c9: M[0x20] = 0x4
0x11ca: V1091 = 0x20
0x11cc: V1092 = ADD 0x20 0x20
0x11cd: V1093 = 0x0
0x11cf: V1094 = SHA3 0x0 0x40
0x11d0: V1095 = S[V1094]
0x11d1: V1096 = ADD V1095 V1082
0x11d5: V1097 = 0x4
0x11d7: V1098 = 0x0
0x11da: V1099 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ef: V1100 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x11f0: V1101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1205: V1102 = AND 0xffffffffffffffffffffffffffffffffffffffff V1100
0x1207: M[0x0] = V1102
0x1208: V1103 = 0x20
0x120a: V1104 = ADD 0x20 0x0
0x120d: M[0x20] = 0x4
0x120e: V1105 = 0x20
0x1210: V1106 = ADD 0x20 0x20
0x1211: V1107 = 0x0
0x1213: V1108 = SHA3 0x0 0x40
0x1214: V1109 = 0x0
0x1218: V1110 = S[V1108]
0x1219: V1111 = SUB V1110 S2
0x121f: S[V1108] = V1111
0x1222: V1112 = 0x4
0x1224: V1113 = 0x0
0x1227: V1114 = 0xffffffffffffffffffffffffffffffffffffffff
0x123c: V1115 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x123d: V1116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1252: V1117 = AND 0xffffffffffffffffffffffffffffffffffffffff V1115
0x1254: M[0x0] = V1117
0x1255: V1118 = 0x20
0x1257: V1119 = ADD 0x20 0x0
0x125a: M[0x20] = 0x4
0x125b: V1120 = 0x20
0x125d: V1121 = ADD 0x20 0x20
0x125e: V1122 = 0x0
0x1260: V1123 = SHA3 0x0 0x40
0x1261: V1124 = 0x0
0x1265: V1125 = S[V1123]
0x1266: V1126 = ADD V1125 S2
0x126c: S[V1123] = V1126
0x126f: V1127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1284: V1128 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1286: V1129 = 0xffffffffffffffffffffffffffffffffffffffff
0x129b: V1130 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x129c: V1131 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x12be: V1132 = 0x40
0x12c0: V1133 = M[0x40]
0x12c4: M[V1133] = S2
0x12c5: V1134 = 0x20
0x12c7: V1135 = ADD 0x20 V1133
0x12cb: V1136 = 0x40
0x12cd: V1137 = M[0x40]
0x12d0: V1138 = SUB V1135 V1137
0x12d2: LOG V1137 V1138 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1130 V1128
0x12d4: V1139 = 0x4
0x12d6: V1140 = 0x0
0x12d9: V1141 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ee: V1142 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x12ef: V1143 = 0xffffffffffffffffffffffffffffffffffffffff
0x1304: V1144 = AND 0xffffffffffffffffffffffffffffffffffffffff V1142
0x1306: M[0x0] = V1144
0x1307: V1145 = 0x20
0x1309: V1146 = ADD 0x20 0x0
0x130c: M[0x20] = 0x4
0x130d: V1147 = 0x20
0x130f: V1148 = ADD 0x20 0x20
0x1310: V1149 = 0x0
0x1312: V1150 = SHA3 0x0 0x40
0x1313: V1151 = S[V1150]
0x1314: V1152 = 0x4
0x1316: V1153 = 0x0
0x1319: V1154 = 0xffffffffffffffffffffffffffffffffffffffff
0x132e: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x132f: V1156 = 0xffffffffffffffffffffffffffffffffffffffff
0x1344: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff V1155
0x1346: M[0x0] = V1157
0x1347: V1158 = 0x20
0x1349: V1159 = ADD 0x20 0x0
0x134c: M[0x20] = 0x4
0x134d: V1160 = 0x20
0x134f: V1161 = ADD 0x20 0x20
0x1350: V1162 = 0x0
0x1352: V1163 = SHA3 0x0 0x40
0x1353: V1164 = S[V1163]
0x1354: V1165 = ADD V1164 V1151
0x1355: V1166 = EQ V1165 V1096
0x1356: V1167 = ISZERO V1166
0x1357: V1168 = ISZERO V1167
0x1358: V1169 = 0x135d
0x135b: JUMPI 0x135d V1168
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1096]
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, V1096]

================================

Block 0x135c
[0x135c:0x135c]
---
Predecessors: [0x1150]
Successors: []
---
0x135c INVALID
---
0x135c: INVALID 
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, V1096]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, V1096]

================================

Block 0x135d
[0x135d:0x1361]
---
Predecessors: [0x1150]
Successors: [0x1362]
---
0x135d JUMPDEST
0x135e PUSH1 0x1
0x1360 SWAP2
0x1361 POP
---
0x135d: JUMPDEST 
0x135e: V1170 = 0x1
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x0, V1096]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x1, V1096]

================================

Block 0x1362
[0x1362:0x1369]
---
Predecessors: [0x135d]
Successors: [0x823, 0xbb7]
---
0x1362 JUMPDEST
0x1363 POP
0x1364 SWAP4
0x1365 SWAP3
0x1366 POP
0x1367 POP
0x1368 POP
0x1369 JUMP
---
0x1362: JUMPDEST 
0x1369: JUMP {0x823, 0xbb7}
---
Entry stack: [V10, S10, S9, S8, S7, 0x0, {0x823, 0xbb7}, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, S10, S9, S8, S7, 0x0, 0x1]

================================

Block 0x136a
[0x136a:0x1398]
---
Predecessors: []
Successors: []
---
0x136a STOP
0x136b LOG1
0x136c PUSH6 0x627a7a723058
0x1373 SHA3
0x1374 DUP6
0x1375 CALLDATACOPY
0x1376 MISSING 0xd8
0x1377 SHR
0x1378 DUP16
0x1379 MISSING 0xd6
0x137a MISSING 0x1f
0x137b MISSING 0xe5
0x137c MISSING 0xd
0x137d PUSH13 0x16d6f810f418cbcc55a45e68cf
0x138b MISSING 0xb3
0x138c MISSING 0x47
0x138d PUSH11 0x7f992b3ff9260029
---
0x136a: STOP 
0x136b: LOG S0 S1 S2
0x136c: V1171 = 0x627a7a723058
0x1373: V1172 = SHA3 0x627a7a723058 S3
0x1375: CALLDATACOPY S8 V1172 S4
0x1376: MISSING 0xd8
0x1377: V1173 = SHR S0 S1
0x1379: MISSING 0xd6
0x137a: MISSING 0x1f
0x137b: MISSING 0xe5
0x137c: MISSING 0xd
0x137d: V1174 = 0x16d6f810f418cbcc55a45e68cf
0x138b: MISSING 0xb3
0x138c: MISSING 0x47
0x138d: V1175 = 0x7f992b3ff9260029
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, S6, S7, S8, S16, V1173, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, 0x16d6f810f418cbcc55a45e68cf, 0x7f992b3ff9260029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xbd
Exit block: 0x13e
Body: 0xbd, 0xc4, 0xc8, 0xd0, 0xf5, 0xfe, 0x106, 0x111, 0x125, 0x13e, 0x56a, 0x5ba, 0x5c2, 0x5d5, 0x5e3, 0x5f7, 0x600

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x14c
Exit block: 0x18c
Body: 0x14c, 0x153, 0x157, 0x18c

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1a6
Exit block: 0x1b9
Body: 0x1a6, 0x1ad, 0x1b1, 0x1b9, 0x6fb

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1cf
Exit block: 0x22e
Body: 0x1cf, 0x1d6, 0x1da, 0x22e, 0x701, 0x78a, 0x78e, 0x823, 0x826

Function 4:
Public function signature: 0x313ce567
Entry block: 0x248
Exit block: 0x25b
Body: 0x248, 0x24f, 0x253, 0x25b, 0x82d

Function 5:
Public function signature: 0x66188463
Entry block: 0x277
Exit block: 0x2b7
Body: 0x277, 0x27e, 0x282, 0x2b7, 0x840, 0x8cb, 0x951, 0x9d5, 0xabb

Function 6:
Public function signature: 0x70a08231
Entry block: 0x2d1
Exit block: 0x308
Body: 0x2d1, 0x2d8, 0x2dc, 0x308, 0xac2, 0xb07

Function 7:
Public function signature: 0x95d89b41
Entry block: 0x31e
Exit block: 0x39f
Body: 0x31e, 0x325, 0x329, 0x331, 0x356, 0x35f, 0x367, 0x372, 0x386, 0x39f, 0xb0c, 0xb5c, 0xb64, 0xb77, 0xb85, 0xb99, 0xba2

Function 8:
Public function signature: 0xa9059cbb
Entry block: 0x3ad
Exit block: 0x3ed
Body: 0x3ad, 0x3b4, 0x3b8, 0x3ed, 0xbaa, 0xbb7, 0xbba

Function 9:
Public function signature: 0xcae9ca51
Entry block: 0x407
Exit block: 0xd26
Body: 0x407, 0x40e, 0x412, 0x48a, 0xbc0, 0xbcd, 0xbd3, 0xcaf, 0xcb8, 0xcc0, 0xccb, 0xcdf, 0xcf8, 0xd15, 0xd19, 0xd26, 0xd2a, 0xd36, 0xd3b

Function 10:
Public function signature: 0xd73dd623
Entry block: 0x4a4
Exit block: 0x4e4
Body: 0x4a4, 0x4ab, 0x4af, 0x4e4, 0xd43, 0xe49, 0xe4d, 0xfbd

Function 11:
Public function signature: 0xdd62ed3e
Entry block: 0x4fe
Exit block: 0x554
Body: 0x4fe, 0x505, 0x509, 0x554, 0xfc3, 0x1045

Function 12:
Public fallback function
Entry block: 0xb8
Exit block: 0xb8
Body: 0xb8

Function 13:
Private function
Entry block: 0x104b
Exit block: 0x1362
Body: 0x104b, 0x1074, 0x10c2, 0x1150, 0x135d, 0x1362

Function 14:
Private function
Entry block: 0x608
Exit block: 0x6f5
Body: 0x608, 0x6f5

