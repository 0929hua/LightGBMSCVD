Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6c457528
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6c457528
0x3c: V13 = EQ 0x6c457528 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa2]
---
0x41 DUP1
0x42 PUSH4 0x8295a9ba
0x47 EQ
0x48 PUSH2 0xa2
0x4b JUMPI
---
0x42: V15 = 0x8295a9ba
0x47: V16 = EQ 0x8295a9ba V11
0x48: V17 = 0xa2
0x4b: JUMPI 0xa2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x113]
---
0x4c DUP1
0x4d PUSH4 0xce43c032
0x52 EQ
0x53 PUSH2 0x113
0x56 JUMPI
---
0x4d: V18 = 0xce43c032
0x52: V19 = EQ 0xce43c032 V11
0x53: V20 = 0x113
0x56: JUMPI 0x113 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x87]
---
Predecessors: [0x5c]
Successors: [0x1c5]
---
0x67 JUMPDEST
0x68 PUSH2 0x88
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 DUP3
0x76 ADD
0x77 DUP1
0x78 CALLDATALOAD
0x79 SWAP1
0x7a PUSH1 0x20
0x7c ADD
0x7d SWAP2
0x7e SWAP1
0x7f SWAP2
0x80 SWAP3
0x81 SWAP1
0x82 POP
0x83 POP
0x84 PUSH2 0x1c5
0x87 JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x88
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x71: V29 = 0x20
0x73: V30 = ADD 0x20 0x4
0x76: V31 = ADD 0x4 V28
0x78: V32 = CALLDATALOAD V31
0x7a: V33 = 0x20
0x7c: V34 = ADD 0x20 V31
0x84: V35 = 0x1c5
0x87: JUMP 0x1c5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x88, V34, V32]
Exit stack: [V11, 0x88, V34, V32]

================================

Block 0x88
[0x88:0xa1]
---
Predecessors: [0x2cb]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d DUP3
0x8e ISZERO
0x8f ISZERO
0x90 ISZERO
0x91 ISZERO
0x92 DUP2
0x93 MSTORE
0x94 PUSH1 0x20
0x96 ADD
0x97 SWAP2
0x98 POP
0x99 POP
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e SWAP2
0x9f SUB
0xa0 SWAP1
0xa1 RETURN
---
0x88: JUMPDEST 
0x89: V36 = 0x40
0x8b: V37 = M[0x40]
0x8e: V38 = ISZERO 0x1
0x8f: V39 = ISZERO 0x0
0x90: V40 = ISZERO 0x1
0x91: V41 = ISZERO 0x0
0x93: M[V37] = 0x1
0x94: V42 = 0x20
0x96: V43 = ADD 0x20 V37
0x9a: V44 = 0x40
0x9c: V45 = M[0x40]
0x9f: V46 = SUB V43 V45
0xa1: RETURN V45 V46
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xa8]
---
Predecessors: [0x41]
Successors: [0xa9, 0xad]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa2: JUMPDEST 
0xa3: V47 = CALLVALUE
0xa4: V48 = ISZERO V47
0xa5: V49 = 0xad
0xa8: JUMPI 0xad V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa2]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V50 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xfc]
---
Predecessors: [0xa2]
Successors: [0x360]
---
0xad JUMPDEST
0xae PUSH2 0xfd
0xb1 PUSH1 0x4
0xb3 DUP1
0xb4 DUP1
0xb5 CALLDATALOAD
0xb6 SWAP1
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP1
0xbb DUP3
0xbc ADD
0xbd DUP1
0xbe CALLDATALOAD
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP1
0xc4 DUP1
0xc5 DUP1
0xc6 PUSH1 0x1f
0xc8 ADD
0xc9 PUSH1 0x20
0xcb DUP1
0xcc SWAP2
0xcd DIV
0xce MUL
0xcf PUSH1 0x20
0xd1 ADD
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 SWAP1
0xd6 DUP2
0xd7 ADD
0xd8 PUSH1 0x40
0xda MSTORE
0xdb DUP1
0xdc SWAP4
0xdd SWAP3
0xde SWAP2
0xdf SWAP1
0xe0 DUP2
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 DUP4
0xe7 DUP4
0xe8 DUP1
0xe9 DUP3
0xea DUP5
0xeb CALLDATACOPY
0xec DUP3
0xed ADD
0xee SWAP2
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 SWAP2
0xf6 SWAP1
0xf7 POP
0xf8 POP
0xf9 PUSH2 0x360
0xfc JUMP
---
0xad: JUMPDEST 
0xae: V51 = 0xfd
0xb1: V52 = 0x4
0xb5: V53 = CALLDATALOAD 0x4
0xb7: V54 = 0x20
0xb9: V55 = ADD 0x20 0x4
0xbc: V56 = ADD 0x4 V53
0xbe: V57 = CALLDATALOAD V56
0xc0: V58 = 0x20
0xc2: V59 = ADD 0x20 V56
0xc6: V60 = 0x1f
0xc8: V61 = ADD 0x1f V57
0xc9: V62 = 0x20
0xcd: V63 = DIV V61 0x20
0xce: V64 = MUL V63 0x20
0xcf: V65 = 0x20
0xd1: V66 = ADD 0x20 V64
0xd2: V67 = 0x40
0xd4: V68 = M[0x40]
0xd7: V69 = ADD V68 V66
0xd8: V70 = 0x40
0xda: M[0x40] = V69
0xe2: M[V68] = V57
0xe3: V71 = 0x20
0xe5: V72 = ADD 0x20 V68
0xeb: CALLDATACOPY V72 V59 V57
0xed: V73 = ADD V72 V57
0xf9: V74 = 0x360
0xfc: JUMP 0x360
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfd, V68]
Exit stack: [V11, 0xfd, V68]

================================

Block 0xfd
[0xfd:0x112]
---
Predecessors: [0x39a]
Successors: []
---
0xfd JUMPDEST
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 DUP3
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP2
0x109 POP
0x10a POP
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f SWAP2
0x110 SUB
0x111 SWAP1
0x112 RETURN
---
0xfd: JUMPDEST 
0xfe: V75 = 0x40
0x100: V76 = M[0x40]
0x104: M[V76] = V273
0x105: V77 = 0x20
0x107: V78 = ADD 0x20 V76
0x10b: V79 = 0x40
0x10d: V80 = M[0x40]
0x110: V81 = SUB V78 V80
0x112: RETURN V80 V81
---
Entry stack: [V11, V273]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x4c]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V82 = CALLVALUE
0x115: V83 = ISZERO V82
0x116: V84 = 0x11e
0x119: JUMPI 0x11e V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V85 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11e
[0x11e:0x149]
---
Predecessors: [0x113]
Successors: [0x3d5]
---
0x11e JUMPDEST
0x11f PUSH2 0x14a
0x122 PUSH1 0x4
0x124 DUP1
0x125 DUP1
0x126 CALLDATALOAD
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d SWAP1
0x13e PUSH1 0x20
0x140 ADD
0x141 SWAP1
0x142 SWAP2
0x143 SWAP1
0x144 POP
0x145 POP
0x146 PUSH2 0x3d5
0x149 JUMP
---
0x11e: JUMPDEST 
0x11f: V86 = 0x14a
0x122: V87 = 0x4
0x126: V88 = CALLDATALOAD 0x4
0x127: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x13e: V91 = 0x20
0x140: V92 = ADD 0x20 0x4
0x146: V93 = 0x3d5
0x149: JUMP 0x3d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14a, V90]
Exit stack: [V11, 0x14a, V90]

================================

Block 0x14a
[0x14a:0x16e]
---
Predecessors: [0x4af]
Successors: [0x16f]
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f DUP1
0x150 PUSH1 0x20
0x152 ADD
0x153 DUP3
0x154 DUP2
0x155 SUB
0x156 DUP3
0x157 MSTORE
0x158 DUP4
0x159 DUP2
0x15a DUP2
0x15b MLOAD
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP2
0x162 POP
0x163 DUP1
0x164 MLOAD
0x165 SWAP1
0x166 PUSH1 0x20
0x168 ADD
0x169 SWAP1
0x16a DUP1
0x16b DUP4
0x16c DUP4
0x16d PUSH1 0x0
---
0x14a: JUMPDEST 
0x14b: V94 = 0x40
0x14d: V95 = M[0x40]
0x150: V96 = 0x20
0x152: V97 = ADD 0x20 V95
0x155: V98 = SUB V97 V95
0x157: M[V95] = V98
0x15b: V99 = M[V306]
0x15d: M[V97] = V99
0x15e: V100 = 0x20
0x160: V101 = ADD 0x20 V97
0x164: V102 = M[V306]
0x166: V103 = 0x20
0x168: V104 = ADD 0x20 V306
0x16d: V105 = 0x0
---
Entry stack: [V11, V306]
Stack pops: 1
Stack additions: [S0, V95, V95, V101, V104, V102, V102, V101, V104, 0x0]
Exit stack: [V11, V306, V95, V95, V101, V104, V102, V102, V101, V104, 0x0]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x14a, 0x178]
Successors: [0x178, 0x18a]
---
0x16f JUMPDEST
0x170 DUP4
0x171 DUP2
0x172 LT
0x173 ISZERO
0x174 PUSH2 0x18a
0x177 JUMPI
---
0x16f: JUMPDEST 
0x172: V106 = LT S0 V102
0x173: V107 = ISZERO V106
0x174: V108 = 0x18a
0x177: JUMPI 0x18a V107
---
Entry stack: [V11, V306, V95, V95, V101, V104, V102, V102, V101, V104, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V306, V95, V95, V101, V104, V102, V102, V101, V104, S0]

================================

Block 0x178
[0x178:0x189]
---
Predecessors: [0x16f]
Successors: [0x16f]
---
0x178 DUP1
0x179 DUP3
0x17a ADD
0x17b MLOAD
0x17c DUP2
0x17d DUP5
0x17e ADD
0x17f MSTORE
0x180 PUSH1 0x20
0x182 DUP2
0x183 ADD
0x184 SWAP1
0x185 POP
0x186 PUSH2 0x16f
0x189 JUMP
---
0x17a: V109 = ADD V104 S0
0x17b: V110 = M[V109]
0x17e: V111 = ADD V101 S0
0x17f: M[V111] = V110
0x180: V112 = 0x20
0x183: V113 = ADD S0 0x20
0x186: V114 = 0x16f
0x189: JUMP 0x16f
---
Entry stack: [V11, V306, V95, V95, V101, V104, V102, V102, V101, V104, S0]
Stack pops: 3
Stack additions: [S2, S1, V113]
Exit stack: [V11, V306, V95, V95, V101, V104, V102, V102, V101, V104, V113]

================================

Block 0x18a
[0x18a:0x19d]
---
Predecessors: [0x16f]
Successors: [0x19e, 0x1b7]
---
0x18a JUMPDEST
0x18b POP
0x18c POP
0x18d POP
0x18e POP
0x18f SWAP1
0x190 POP
0x191 SWAP1
0x192 DUP2
0x193 ADD
0x194 SWAP1
0x195 PUSH1 0x1f
0x197 AND
0x198 DUP1
0x199 ISZERO
0x19a PUSH2 0x1b7
0x19d JUMPI
---
0x18a: JUMPDEST 
0x193: V115 = ADD V102 V101
0x195: V116 = 0x1f
0x197: V117 = AND 0x1f V102
0x199: V118 = ISZERO V117
0x19a: V119 = 0x1b7
0x19d: JUMPI 0x1b7 V118
---
Entry stack: [V11, V306, V95, V95, V101, V104, V102, V102, V101, V104, S0]
Stack pops: 7
Stack additions: [V115, V117]
Exit stack: [V11, V306, V95, V95, V115, V117]

================================

Block 0x19e
[0x19e:0x1b6]
---
Predecessors: [0x18a]
Successors: [0x1b7]
---
0x19e DUP1
0x19f DUP3
0x1a0 SUB
0x1a1 DUP1
0x1a2 MLOAD
0x1a3 PUSH1 0x1
0x1a5 DUP4
0x1a6 PUSH1 0x20
0x1a8 SUB
0x1a9 PUSH2 0x100
0x1ac EXP
0x1ad SUB
0x1ae NOT
0x1af AND
0x1b0 DUP2
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 SWAP2
0x1b6 POP
---
0x1a0: V120 = SUB V115 V117
0x1a2: V121 = M[V120]
0x1a3: V122 = 0x1
0x1a6: V123 = 0x20
0x1a8: V124 = SUB 0x20 V117
0x1a9: V125 = 0x100
0x1ac: V126 = EXP 0x100 V124
0x1ad: V127 = SUB V126 0x1
0x1ae: V128 = NOT V127
0x1af: V129 = AND V128 V121
0x1b1: M[V120] = V129
0x1b2: V130 = 0x20
0x1b4: V131 = ADD 0x20 V120
---
Entry stack: [V11, V306, V95, V95, V115, V117]
Stack pops: 2
Stack additions: [V131, S0]
Exit stack: [V11, V306, V95, V95, V131, V117]

================================

Block 0x1b7
[0x1b7:0x1c4]
---
Predecessors: [0x18a, 0x19e]
Successors: []
---
0x1b7 JUMPDEST
0x1b8 POP
0x1b9 SWAP3
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 DUP1
0x1c1 SWAP2
0x1c2 SUB
0x1c3 SWAP1
0x1c4 RETURN
---
0x1b7: JUMPDEST 
0x1bd: V132 = 0x40
0x1bf: V133 = M[0x40]
0x1c2: V134 = SUB S1 V133
0x1c4: RETURN V133 V134
---
Entry stack: [V11, V306, V95, V95, S1, V117]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c5
[0x1c5:0x222]
---
Predecessors: [0x67]
Successors: [0x223, 0x227]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc CALLER
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 DUP2
0x1fa MSTORE
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe SWAP1
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 PUSH1 0x0
0x206 SHA3
0x207 DUP1
0x208 SLOAD
0x209 PUSH1 0x1
0x20b DUP2
0x20c PUSH1 0x1
0x20e AND
0x20f ISZERO
0x210 PUSH2 0x100
0x213 MUL
0x214 SUB
0x215 AND
0x216 PUSH1 0x2
0x218 SWAP1
0x219 DIV
0x21a SWAP1
0x21b POP
0x21c EQ
0x21d ISZERO
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V135 = 0x0
0x1c9: V136 = 0x0
0x1cc: V137 = CALLER
0x1cd: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x1e3: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1fa: M[0x0] = V141
0x1fb: V142 = 0x20
0x1fd: V143 = ADD 0x20 0x0
0x200: M[0x20] = 0x0
0x201: V144 = 0x20
0x203: V145 = ADD 0x20 0x20
0x204: V146 = 0x0
0x206: V147 = SHA3 0x0 0x40
0x208: V148 = S[V147]
0x209: V149 = 0x1
0x20c: V150 = 0x1
0x20e: V151 = AND 0x1 V148
0x20f: V152 = ISZERO V151
0x210: V153 = 0x100
0x213: V154 = MUL 0x100 V152
0x214: V155 = SUB V154 0x1
0x215: V156 = AND V155 V148
0x216: V157 = 0x2
0x219: V158 = DIV V156 0x2
0x21c: V159 = EQ V158 0x0
0x21d: V160 = ISZERO V159
0x21e: V161 = ISZERO V160
0x21f: V162 = 0x227
0x222: JUMPI 0x227 V161
---
Entry stack: [V11, 0x88, V34, V32]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x88, V34, V32, 0x0]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x1c5]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V163 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V11, 0x88, V34, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x88, V34, V32, 0x0]

================================

Block 0x227
[0x227:0x256]
---
Predecessors: [0x1c5]
Successors: [0x257, 0x25b]
---
0x227 JUMPDEST
0x228 PUSH1 0x0
0x22a PUSH1 0x1
0x22c DUP5
0x22d DUP5
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 DUP4
0x233 DUP4
0x234 DUP1
0x235 DUP3
0x236 DUP5
0x237 CALLDATACOPY
0x238 DUP3
0x239 ADD
0x23a SWAP2
0x23b POP
0x23c POP
0x23d SWAP3
0x23e POP
0x23f POP
0x240 POP
0x241 SWAP1
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b SWAP2
0x24c SUB
0x24d SWAP1
0x24e SHA3
0x24f SLOAD
0x250 EQ
0x251 ISZERO
0x252 ISZERO
0x253 PUSH2 0x25b
0x256 JUMPI
---
0x227: JUMPDEST 
0x228: V164 = 0x0
0x22a: V165 = 0x1
0x22e: V166 = 0x40
0x230: V167 = M[0x40]
0x237: CALLDATACOPY V167 V34 V32
0x239: V168 = ADD V167 V32
0x243: M[V168] = 0x1
0x244: V169 = 0x20
0x246: V170 = ADD 0x20 V168
0x247: V171 = 0x40
0x249: V172 = M[0x40]
0x24c: V173 = SUB V170 V172
0x24e: V174 = SHA3 V172 V173
0x24f: V175 = S[V174]
0x250: V176 = EQ V175 0x0
0x251: V177 = ISZERO V176
0x252: V178 = ISZERO V177
0x253: V179 = 0x25b
0x256: JUMPI 0x25b V178
---
Entry stack: [V11, 0x88, V34, V32, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x88, V34, V32, 0x0]

================================

Block 0x257
[0x257:0x25a]
---
Predecessors: [0x227]
Successors: []
---
0x257 PUSH1 0x0
0x259 DUP1
0x25a REVERT
---
0x257: V180 = 0x0
0x25a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x88, V34, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x88, V34, V32, 0x0]

================================

Block 0x25b
[0x25b:0x269]
---
Predecessors: [0x227]
Successors: [0x26a, 0x273]
---
0x25b JUMPDEST
0x25c PUSH1 0x3
0x25e DUP4
0x25f DUP4
0x260 SWAP1
0x261 POP
0x262 LT
0x263 ISZERO
0x264 DUP1
0x265 ISZERO
0x266 PUSH2 0x273
0x269 JUMPI
---
0x25b: JUMPDEST 
0x25c: V181 = 0x3
0x262: V182 = LT V32 0x3
0x263: V183 = ISZERO V182
0x265: V184 = ISZERO V183
0x266: V185 = 0x273
0x269: JUMPI 0x273 V184
---
Entry stack: [V11, 0x88, V34, V32, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V183]
Exit stack: [V11, 0x88, V34, V32, 0x0, V183]

================================

Block 0x26a
[0x26a:0x272]
---
Predecessors: [0x25b]
Successors: [0x273]
---
0x26a POP
0x26b PUSH1 0x10
0x26d DUP4
0x26e DUP4
0x26f SWAP1
0x270 POP
0x271 GT
0x272 ISZERO
---
0x26b: V186 = 0x10
0x271: V187 = GT V32 0x10
0x272: V188 = ISZERO V187
---
Entry stack: [V11, 0x88, V34, V32, 0x0, V183]
Stack pops: 4
Stack additions: [S3, S2, S1, V188]
Exit stack: [V11, 0x88, V34, V32, 0x0, V188]

================================

Block 0x273
[0x273:0x279]
---
Predecessors: [0x25b, 0x26a]
Successors: [0x27a, 0x27e]
---
0x273 JUMPDEST
0x274 ISZERO
0x275 ISZERO
0x276 PUSH2 0x27e
0x279 JUMPI
---
0x273: JUMPDEST 
0x274: V189 = ISZERO S0
0x275: V190 = ISZERO V189
0x276: V191 = 0x27e
0x279: JUMPI 0x27e V190
---
Entry stack: [V11, 0x88, V34, V32, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x88, V34, V32, 0x0]

================================

Block 0x27a
[0x27a:0x27d]
---
Predecessors: [0x273]
Successors: []
---
0x27a PUSH1 0x0
0x27c DUP1
0x27d REVERT
---
0x27a: V192 = 0x0
0x27d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x88, V34, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x88, V34, V32, 0x0]

================================

Block 0x27e
[0x27e:0x2ca]
---
Predecessors: [0x273]
Successors: [0x4bb]
---
0x27e JUMPDEST
0x27f DUP3
0x280 DUP3
0x281 PUSH1 0x0
0x283 DUP1
0x284 CALLER
0x285 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29a AND
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc PUSH1 0x0
0x2be SHA3
0x2bf SWAP2
0x2c0 SWAP1
0x2c1 PUSH2 0x2cb
0x2c4 SWAP3
0x2c5 SWAP2
0x2c6 SWAP1
0x2c7 PUSH2 0x4bb
0x2ca JUMP
---
0x27e: JUMPDEST 
0x281: V193 = 0x0
0x284: V194 = CALLER
0x285: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x29b: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x2b2: M[0x0] = V198
0x2b3: V199 = 0x20
0x2b5: V200 = ADD 0x20 0x0
0x2b8: M[0x20] = 0x0
0x2b9: V201 = 0x20
0x2bb: V202 = ADD 0x20 0x20
0x2bc: V203 = 0x0
0x2be: V204 = SHA3 0x0 0x40
0x2c1: V205 = 0x2cb
0x2c7: V206 = 0x4bb
0x2ca: JUMP 0x4bb
---
Entry stack: [V11, 0x88, V34, V32, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x2cb, V204, S2, S1]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V34, V32]

================================

Block 0x2cb
[0x2cb:0x35f]
---
Predecessors: [0x537]
Successors: [0x88]
---
0x2cb JUMPDEST
0x2cc POP
0x2cd PUSH1 0x1
0x2cf DUP1
0x2d0 DUP5
0x2d1 DUP5
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 DUP1
0x2d6 DUP4
0x2d7 DUP4
0x2d8 DUP1
0x2d9 DUP3
0x2da DUP5
0x2db CALLDATACOPY
0x2dc DUP3
0x2dd ADD
0x2de SWAP2
0x2df POP
0x2e0 POP
0x2e1 SWAP3
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee DUP1
0x2ef SWAP2
0x2f0 SUB
0x2f1 SWAP1
0x2f2 SHA3
0x2f3 DUP2
0x2f4 SWAP1
0x2f5 SSTORE
0x2f6 POP
0x2f7 DUP3
0x2f8 DUP3
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd DUP4
0x2fe DUP4
0x2ff DUP1
0x300 DUP3
0x301 DUP5
0x302 CALLDATACOPY
0x303 DUP3
0x304 ADD
0x305 SWAP2
0x306 POP
0x307 POP
0x308 SWAP3
0x309 POP
0x30a POP
0x30b POP
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 SWAP2
0x311 SUB
0x312 SWAP1
0x313 SHA3
0x314 CALLER
0x315 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32a AND
0x32b PUSH32 0x1baf823fe862656b4bf0b5b9ce919ed86d595c8429b1153e99a9f52d7386062e
0x34c PUSH1 0x40
0x34e MLOAD
0x34f PUSH1 0x40
0x351 MLOAD
0x352 DUP1
0x353 SWAP2
0x354 SUB
0x355 SWAP1
0x356 LOG3
0x357 PUSH1 0x1
0x359 SWAP1
0x35a POP
0x35b SWAP3
0x35c SWAP2
0x35d POP
0x35e POP
0x35f JUMP
---
0x2cb: JUMPDEST 
0x2cd: V207 = 0x1
0x2d2: V208 = 0x40
0x2d4: V209 = M[0x40]
0x2db: CALLDATACOPY V209 V34 V32
0x2dd: V210 = ADD V209 V32
0x2e7: M[V210] = 0x1
0x2e8: V211 = 0x20
0x2ea: V212 = ADD 0x20 V210
0x2eb: V213 = 0x40
0x2ed: V214 = M[0x40]
0x2f0: V215 = SUB V212 V214
0x2f2: V216 = SHA3 V214 V215
0x2f5: S[V216] = 0x1
0x2f9: V217 = 0x40
0x2fb: V218 = M[0x40]
0x302: CALLDATACOPY V218 V34 V32
0x304: V219 = ADD V218 V32
0x30c: V220 = 0x40
0x30e: V221 = M[0x40]
0x311: V222 = SUB V219 V221
0x313: V223 = SHA3 V221 V222
0x314: V224 = CALLER
0x315: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x32b: V227 = 0x1baf823fe862656b4bf0b5b9ce919ed86d595c8429b1153e99a9f52d7386062e
0x34c: V228 = 0x40
0x34e: V229 = M[0x40]
0x34f: V230 = 0x40
0x351: V231 = M[0x40]
0x354: V232 = SUB V229 V231
0x356: LOG V231 V232 0x1baf823fe862656b4bf0b5b9ce919ed86d595c8429b1153e99a9f52d7386062e V226 V223
0x357: V233 = 0x1
0x35f: JUMP 0x88
---
Entry stack: [V11, 0x88, V34, V32, 0x0, V204]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x360
[0x360:0x374]
---
Predecessors: [0xad]
Successors: [0x375]
---
0x360 JUMPDEST
0x361 PUSH1 0x0
0x363 PUSH1 0x1
0x365 DUP3
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a DUP3
0x36b DUP1
0x36c MLOAD
0x36d SWAP1
0x36e PUSH1 0x20
0x370 ADD
0x371 SWAP1
0x372 DUP1
0x373 DUP4
0x374 DUP4
---
0x360: JUMPDEST 
0x361: V234 = 0x0
0x363: V235 = 0x1
0x366: V236 = 0x40
0x368: V237 = M[0x40]
0x36c: V238 = M[V68]
0x36e: V239 = 0x20
0x370: V240 = ADD 0x20 V68
---
Entry stack: [V11, 0xfd, V68]
Stack pops: 1
Stack additions: [S0, 0x0, 0x1, S0, V237, V237, V240, V238, V238, V237, V240]
Exit stack: [V11, 0xfd, V68, 0x0, 0x1, V68, V237, V237, V240, V238, V238, V237, V240]

================================

Block 0x375
[0x375:0x37f]
---
Predecessors: [0x360, 0x380]
Successors: [0x380, 0x39a]
---
0x375 JUMPDEST
0x376 PUSH1 0x20
0x378 DUP4
0x379 LT
0x37a ISZERO
0x37b ISZERO
0x37c PUSH2 0x39a
0x37f JUMPI
---
0x375: JUMPDEST 
0x376: V241 = 0x20
0x379: V242 = LT S2 0x20
0x37a: V243 = ISZERO V242
0x37b: V244 = ISZERO V243
0x37c: V245 = 0x39a
0x37f: JUMPI 0x39a V244
---
Entry stack: [V11, 0xfd, V68, 0x0, 0x1, V68, V237, V237, V240, V238, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xfd, V68, 0x0, 0x1, V68, V237, V237, V240, V238, S2, S1, S0]

================================

Block 0x380
[0x380:0x399]
---
Predecessors: [0x375]
Successors: [0x375]
---
0x380 DUP1
0x381 MLOAD
0x382 DUP3
0x383 MSTORE
0x384 PUSH1 0x20
0x386 DUP3
0x387 ADD
0x388 SWAP2
0x389 POP
0x38a PUSH1 0x20
0x38c DUP2
0x38d ADD
0x38e SWAP1
0x38f POP
0x390 PUSH1 0x20
0x392 DUP4
0x393 SUB
0x394 SWAP3
0x395 POP
0x396 PUSH2 0x375
0x399 JUMP
---
0x381: V246 = M[S0]
0x383: M[S1] = V246
0x384: V247 = 0x20
0x387: V248 = ADD S1 0x20
0x38a: V249 = 0x20
0x38d: V250 = ADD S0 0x20
0x390: V251 = 0x20
0x393: V252 = SUB S2 0x20
0x396: V253 = 0x375
0x399: JUMP 0x375
---
Entry stack: [V11, 0xfd, V68, 0x0, 0x1, V68, V237, V237, V240, V238, S2, S1, S0]
Stack pops: 3
Stack additions: [V252, V248, V250]
Exit stack: [V11, 0xfd, V68, 0x0, 0x1, V68, V237, V237, V240, V238, V252, V248, V250]

================================

Block 0x39a
[0x39a:0x3d4]
---
Predecessors: [0x375]
Successors: [0xfd]
---
0x39a JUMPDEST
0x39b PUSH1 0x1
0x39d DUP4
0x39e PUSH1 0x20
0x3a0 SUB
0x3a1 PUSH2 0x100
0x3a4 EXP
0x3a5 SUB
0x3a6 DUP1
0x3a7 NOT
0x3a8 DUP3
0x3a9 MLOAD
0x3aa AND
0x3ab DUP2
0x3ac DUP5
0x3ad MLOAD
0x3ae AND
0x3af DUP1
0x3b0 DUP3
0x3b1 OR
0x3b2 DUP6
0x3b3 MSTORE
0x3b4 POP
0x3b5 POP
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba SWAP1
0x3bb POP
0x3bc ADD
0x3bd SWAP2
0x3be POP
0x3bf POP
0x3c0 SWAP1
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 DUP1
0x3ca SWAP2
0x3cb SUB
0x3cc SWAP1
0x3cd SHA3
0x3ce SLOAD
0x3cf SWAP1
0x3d0 POP
0x3d1 SWAP2
0x3d2 SWAP1
0x3d3 POP
0x3d4 JUMP
---
0x39a: JUMPDEST 
0x39b: V254 = 0x1
0x39e: V255 = 0x20
0x3a0: V256 = SUB 0x20 S2
0x3a1: V257 = 0x100
0x3a4: V258 = EXP 0x100 V256
0x3a5: V259 = SUB V258 0x1
0x3a7: V260 = NOT V259
0x3a9: V261 = M[S0]
0x3aa: V262 = AND V261 V260
0x3ad: V263 = M[S1]
0x3ae: V264 = AND V263 V259
0x3b1: V265 = OR V262 V264
0x3b3: M[S1] = V265
0x3bc: V266 = ADD V238 V237
0x3c2: M[V266] = 0x1
0x3c3: V267 = 0x20
0x3c5: V268 = ADD 0x20 V266
0x3c6: V269 = 0x40
0x3c8: V270 = M[0x40]
0x3cb: V271 = SUB V268 V270
0x3cd: V272 = SHA3 V270 V271
0x3ce: V273 = S[V272]
0x3d4: JUMP 0xfd
---
Entry stack: [V11, 0xfd, V68, 0x0, 0x1, V68, V237, V237, V240, V238, S2, S1, S0]
Stack pops: 12
Stack additions: [V273]
Exit stack: [V11, V273]

================================

Block 0x3d5
[0x3d5:0x3dc]
---
Predecessors: [0x11e]
Successors: [0x53b]
---
0x3d5 JUMPDEST
0x3d6 PUSH2 0x3dd
0x3d9 PUSH2 0x53b
0x3dc JUMP
---
0x3d5: JUMPDEST 
0x3d6: V274 = 0x3dd
0x3d9: V275 = 0x53b
0x3dc: JUMP 0x53b
---
Entry stack: [V11, 0x14a, V90]
Stack pops: 0
Stack additions: [0x3dd]
Exit stack: [V11, 0x14a, V90, 0x3dd]

================================

Block 0x3dd
[0x3dd:0x468]
---
Predecessors: [0x53b]
Successors: [0x469, 0x4af]
---
0x3dd JUMPDEST
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 DUP4
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 AND
0x3f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40d AND
0x40e DUP2
0x40f MSTORE
0x410 PUSH1 0x20
0x412 ADD
0x413 SWAP1
0x414 DUP2
0x415 MSTORE
0x416 PUSH1 0x20
0x418 ADD
0x419 PUSH1 0x0
0x41b SHA3
0x41c DUP1
0x41d SLOAD
0x41e PUSH1 0x1
0x420 DUP2
0x421 PUSH1 0x1
0x423 AND
0x424 ISZERO
0x425 PUSH2 0x100
0x428 MUL
0x429 SUB
0x42a AND
0x42b PUSH1 0x2
0x42d SWAP1
0x42e DIV
0x42f DUP1
0x430 PUSH1 0x1f
0x432 ADD
0x433 PUSH1 0x20
0x435 DUP1
0x436 SWAP2
0x437 DIV
0x438 MUL
0x439 PUSH1 0x20
0x43b ADD
0x43c PUSH1 0x40
0x43e MLOAD
0x43f SWAP1
0x440 DUP2
0x441 ADD
0x442 PUSH1 0x40
0x444 MSTORE
0x445 DUP1
0x446 SWAP3
0x447 SWAP2
0x448 SWAP1
0x449 DUP2
0x44a DUP2
0x44b MSTORE
0x44c PUSH1 0x20
0x44e ADD
0x44f DUP3
0x450 DUP1
0x451 SLOAD
0x452 PUSH1 0x1
0x454 DUP2
0x455 PUSH1 0x1
0x457 AND
0x458 ISZERO
0x459 PUSH2 0x100
0x45c MUL
0x45d SUB
0x45e AND
0x45f PUSH1 0x2
0x461 SWAP1
0x462 DIV
0x463 DUP1
0x464 ISZERO
0x465 PUSH2 0x4af
0x468 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V276 = 0x0
0x3e2: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x3f8: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x40f: M[0x0] = V280
0x410: V281 = 0x20
0x412: V282 = ADD 0x20 0x0
0x415: M[0x20] = 0x0
0x416: V283 = 0x20
0x418: V284 = ADD 0x20 0x20
0x419: V285 = 0x0
0x41b: V286 = SHA3 0x0 0x40
0x41d: V287 = S[V286]
0x41e: V288 = 0x1
0x421: V289 = 0x1
0x423: V290 = AND 0x1 V287
0x424: V291 = ISZERO V290
0x425: V292 = 0x100
0x428: V293 = MUL 0x100 V291
0x429: V294 = SUB V293 0x1
0x42a: V295 = AND V294 V287
0x42b: V296 = 0x2
0x42e: V297 = DIV V295 0x2
0x430: V298 = 0x1f
0x432: V299 = ADD 0x1f V297
0x433: V300 = 0x20
0x437: V301 = DIV V299 0x20
0x438: V302 = MUL V301 0x20
0x439: V303 = 0x20
0x43b: V304 = ADD 0x20 V302
0x43c: V305 = 0x40
0x43e: V306 = M[0x40]
0x441: V307 = ADD V306 V304
0x442: V308 = 0x40
0x444: M[0x40] = V307
0x44b: M[V306] = V297
0x44c: V309 = 0x20
0x44e: V310 = ADD 0x20 V306
0x451: V311 = S[V286]
0x452: V312 = 0x1
0x455: V313 = 0x1
0x457: V314 = AND 0x1 V311
0x458: V315 = ISZERO V314
0x459: V316 = 0x100
0x45c: V317 = MUL 0x100 V315
0x45d: V318 = SUB V317 0x1
0x45e: V319 = AND V318 V311
0x45f: V320 = 0x2
0x462: V321 = DIV V319 0x2
0x464: V322 = ISZERO V321
0x465: V323 = 0x4af
0x468: JUMPI 0x4af V322
---
Entry stack: [V11, 0x14a, V90, V399]
Stack pops: 2
Stack additions: [S1, S0, V306, V286, V297, V310, V286, V321]
Exit stack: [V11, 0x14a, V90, V399, V306, V286, V297, V310, V286, V321]

================================

Block 0x469
[0x469:0x470]
---
Predecessors: [0x3dd]
Successors: [0x471, 0x484]
---
0x469 DUP1
0x46a PUSH1 0x1f
0x46c LT
0x46d PUSH2 0x484
0x470 JUMPI
---
0x46a: V324 = 0x1f
0x46c: V325 = LT 0x1f V321
0x46d: V326 = 0x484
0x470: JUMPI 0x484 V325
---
Entry stack: [V11, 0x14a, V90, V399, V306, V286, V297, V310, V286, V321]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x14a, V90, V399, V306, V286, V297, V310, V286, V321]

================================

Block 0x471
[0x471:0x483]
---
Predecessors: [0x469]
Successors: [0x4af]
---
0x471 PUSH2 0x100
0x474 DUP1
0x475 DUP4
0x476 SLOAD
0x477 DIV
0x478 MUL
0x479 DUP4
0x47a MSTORE
0x47b SWAP2
0x47c PUSH1 0x20
0x47e ADD
0x47f SWAP2
0x480 PUSH2 0x4af
0x483 JUMP
---
0x471: V327 = 0x100
0x476: V328 = S[V286]
0x477: V329 = DIV V328 0x100
0x478: V330 = MUL V329 0x100
0x47a: M[V310] = V330
0x47c: V331 = 0x20
0x47e: V332 = ADD 0x20 V310
0x480: V333 = 0x4af
0x483: JUMP 0x4af
---
Entry stack: [V11, 0x14a, V90, V399, V306, V286, V297, V310, V286, V321]
Stack pops: 3
Stack additions: [V332, S1, S0]
Exit stack: [V11, 0x14a, V90, V399, V306, V286, V297, V332, V286, V321]

================================

Block 0x484
[0x484:0x491]
---
Predecessors: [0x469]
Successors: [0x492]
---
0x484 JUMPDEST
0x485 DUP3
0x486 ADD
0x487 SWAP2
0x488 SWAP1
0x489 PUSH1 0x0
0x48b MSTORE
0x48c PUSH1 0x20
0x48e PUSH1 0x0
0x490 SHA3
0x491 SWAP1
---
0x484: JUMPDEST 
0x486: V334 = ADD V310 V321
0x489: V335 = 0x0
0x48b: M[0x0] = V286
0x48c: V336 = 0x20
0x48e: V337 = 0x0
0x490: V338 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x14a, V90, V399, V306, V286, V297, V310, V286, V321]
Stack pops: 3
Stack additions: [V334, V338, S2]
Exit stack: [V11, 0x14a, V90, V399, V306, V286, V297, V334, V338, V310]

================================

Block 0x492
[0x492:0x4a5]
---
Predecessors: [0x484, 0x492]
Successors: [0x492, 0x4a6]
---
0x492 JUMPDEST
0x493 DUP2
0x494 SLOAD
0x495 DUP2
0x496 MSTORE
0x497 SWAP1
0x498 PUSH1 0x1
0x49a ADD
0x49b SWAP1
0x49c PUSH1 0x20
0x49e ADD
0x49f DUP1
0x4a0 DUP4
0x4a1 GT
0x4a2 PUSH2 0x492
0x4a5 JUMPI
---
0x492: JUMPDEST 
0x494: V339 = S[S1]
0x496: M[S0] = V339
0x498: V340 = 0x1
0x49a: V341 = ADD 0x1 S1
0x49c: V342 = 0x20
0x49e: V343 = ADD 0x20 S0
0x4a1: V344 = GT V334 V343
0x4a2: V345 = 0x492
0x4a5: JUMPI 0x492 V344
---
Entry stack: [V11, 0x14a, V90, V399, V306, V286, V297, V334, S1, S0]
Stack pops: 3
Stack additions: [S2, V341, V343]
Exit stack: [V11, 0x14a, V90, V399, V306, V286, V297, V334, V341, V343]

================================

Block 0x4a6
[0x4a6:0x4ae]
---
Predecessors: [0x492]
Successors: [0x4af]
---
0x4a6 DUP3
0x4a7 SWAP1
0x4a8 SUB
0x4a9 PUSH1 0x1f
0x4ab AND
0x4ac DUP3
0x4ad ADD
0x4ae SWAP2
---
0x4a8: V346 = SUB V343 V334
0x4a9: V347 = 0x1f
0x4ab: V348 = AND 0x1f V346
0x4ad: V349 = ADD V334 V348
---
Entry stack: [V11, 0x14a, V90, V399, V306, V286, V297, V334, V341, V343]
Stack pops: 3
Stack additions: [V349, S1, S2]
Exit stack: [V11, 0x14a, V90, V399, V306, V286, V297, V349, V341, V334]

================================

Block 0x4af
[0x4af:0x4ba]
---
Predecessors: [0x3dd, 0x471, 0x4a6]
Successors: [0x14a]
---
0x4af JUMPDEST
0x4b0 POP
0x4b1 POP
0x4b2 POP
0x4b3 POP
0x4b4 POP
0x4b5 SWAP1
0x4b6 POP
0x4b7 SWAP2
0x4b8 SWAP1
0x4b9 POP
0x4ba JUMP
---
0x4af: JUMPDEST 
0x4ba: JUMP 0x14a
---
Entry stack: [V11, 0x14a, V90, V399, V306, V286, V297, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V11, V306]

================================

Block 0x4bb
[0x4bb:0x4eb]
---
Predecessors: [0x27e]
Successors: [0x4ec, 0x4fc]
---
0x4bb JUMPDEST
0x4bc DUP3
0x4bd DUP1
0x4be SLOAD
0x4bf PUSH1 0x1
0x4c1 DUP2
0x4c2 PUSH1 0x1
0x4c4 AND
0x4c5 ISZERO
0x4c6 PUSH2 0x100
0x4c9 MUL
0x4ca SUB
0x4cb AND
0x4cc PUSH1 0x2
0x4ce SWAP1
0x4cf DIV
0x4d0 SWAP1
0x4d1 PUSH1 0x0
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 PUSH1 0x0
0x4d8 SHA3
0x4d9 SWAP1
0x4da PUSH1 0x1f
0x4dc ADD
0x4dd PUSH1 0x20
0x4df SWAP1
0x4e0 DIV
0x4e1 DUP2
0x4e2 ADD
0x4e3 SWAP3
0x4e4 DUP3
0x4e5 PUSH1 0x1f
0x4e7 LT
0x4e8 PUSH2 0x4fc
0x4eb JUMPI
---
0x4bb: JUMPDEST 
0x4be: V350 = S[V204]
0x4bf: V351 = 0x1
0x4c2: V352 = 0x1
0x4c4: V353 = AND 0x1 V350
0x4c5: V354 = ISZERO V353
0x4c6: V355 = 0x100
0x4c9: V356 = MUL 0x100 V354
0x4ca: V357 = SUB V356 0x1
0x4cb: V358 = AND V357 V350
0x4cc: V359 = 0x2
0x4cf: V360 = DIV V358 0x2
0x4d1: V361 = 0x0
0x4d3: M[0x0] = V204
0x4d4: V362 = 0x20
0x4d6: V363 = 0x0
0x4d8: V364 = SHA3 0x0 0x20
0x4da: V365 = 0x1f
0x4dc: V366 = ADD 0x1f V360
0x4dd: V367 = 0x20
0x4e0: V368 = DIV V366 0x20
0x4e2: V369 = ADD V364 V368
0x4e5: V370 = 0x1f
0x4e7: V371 = LT 0x1f V32
0x4e8: V372 = 0x4fc
0x4eb: JUMPI 0x4fc V371
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V34, V32]
Stack pops: 3
Stack additions: [S2, V369, S0, V364, S1]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V32, V364, V34]

================================

Block 0x4ec
[0x4ec:0x4fb]
---
Predecessors: [0x4bb]
Successors: [0x52a]
---
0x4ec DUP1
0x4ed CALLDATALOAD
0x4ee PUSH1 0xff
0x4f0 NOT
0x4f1 AND
0x4f2 DUP4
0x4f3 DUP1
0x4f4 ADD
0x4f5 OR
0x4f6 DUP6
0x4f7 SSTORE
0x4f8 PUSH2 0x52a
0x4fb JUMP
---
0x4ed: V373 = CALLDATALOAD V34
0x4ee: V374 = 0xff
0x4f0: V375 = NOT 0xff
0x4f1: V376 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V373
0x4f4: V377 = ADD V32 V32
0x4f5: V378 = OR V377 V376
0x4f7: S[V204] = V378
0x4f8: V379 = 0x52a
0x4fb: JUMP 0x52a
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V32, V364, V34]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V32, V364, V34]

================================

Block 0x4fc
[0x4fc:0x50a]
---
Predecessors: [0x4bb]
Successors: [0x50b, 0x52a]
---
0x4fc JUMPDEST
0x4fd DUP3
0x4fe DUP1
0x4ff ADD
0x500 PUSH1 0x1
0x502 ADD
0x503 DUP6
0x504 SSTORE
0x505 DUP3
0x506 ISZERO
0x507 PUSH2 0x52a
0x50a JUMPI
---
0x4fc: JUMPDEST 
0x4ff: V380 = ADD V32 V32
0x500: V381 = 0x1
0x502: V382 = ADD 0x1 V380
0x504: S[V204] = V382
0x506: V383 = ISZERO V32
0x507: V384 = 0x52a
0x50a: JUMPI 0x52a V383
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V32, V364, V34]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V32, V364, V34]

================================

Block 0x50b
[0x50b:0x50d]
---
Predecessors: [0x4fc]
Successors: [0x50e]
---
0x50b SWAP2
0x50c DUP3
0x50d ADD
---
0x50d: V385 = ADD V34 V32
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V32, V364, V34]
Stack pops: 3
Stack additions: [S0, S1, V385]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V34, V364, V385]

================================

Block 0x50e
[0x50e:0x516]
---
Predecessors: [0x50b, 0x517]
Successors: [0x517, 0x529]
---
0x50e JUMPDEST
0x50f DUP3
0x510 DUP2
0x511 GT
0x512 ISZERO
0x513 PUSH2 0x529
0x516 JUMPI
---
0x50e: JUMPDEST 
0x511: V386 = GT V385 S2
0x512: V387 = ISZERO V386
0x513: V388 = 0x529
0x516: JUMPI 0x529 V387
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, S2, S1, V385]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, S2, S1, V385]

================================

Block 0x517
[0x517:0x528]
---
Predecessors: [0x50e]
Successors: [0x50e]
---
0x517 DUP3
0x518 CALLDATALOAD
0x519 DUP3
0x51a SSTORE
0x51b SWAP2
0x51c PUSH1 0x20
0x51e ADD
0x51f SWAP2
0x520 SWAP1
0x521 PUSH1 0x1
0x523 ADD
0x524 SWAP1
0x525 PUSH2 0x50e
0x528 JUMP
---
0x518: V389 = CALLDATALOAD S2
0x51a: S[S1] = V389
0x51c: V390 = 0x20
0x51e: V391 = ADD 0x20 S2
0x521: V392 = 0x1
0x523: V393 = ADD 0x1 S1
0x525: V394 = 0x50e
0x528: JUMP 0x50e
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, S2, S1, V385]
Stack pops: 3
Stack additions: [V391, V393, S0]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, V391, V393, V385]

================================

Block 0x529
[0x529:0x529]
---
Predecessors: [0x50e]
Successors: [0x52a]
---
0x529 JUMPDEST
---
0x529: JUMPDEST 
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, S2, S1, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, S2, S1, V385]

================================

Block 0x52a
[0x52a:0x536]
---
Predecessors: [0x4ec, 0x4fc, 0x529]
Successors: [0x54f]
---
0x52a JUMPDEST
0x52b POP
0x52c SWAP1
0x52d POP
0x52e PUSH2 0x537
0x531 SWAP2
0x532 SWAP1
0x533 PUSH2 0x54f
0x536 JUMP
---
0x52a: JUMPDEST 
0x52e: V395 = 0x537
0x533: V396 = 0x54f
0x536: JUMP 0x54f
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369, S2, S1, S0]
Stack pops: 4
Stack additions: [0x537, S3, S1]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, V369, S1]

================================

Block 0x537
[0x537:0x53a]
---
Predecessors: [0x571]
Successors: [0x2cb]
---
0x537 JUMPDEST
0x538 POP
0x539 SWAP1
0x53a JUMP
---
0x537: JUMPDEST 
0x53a: JUMP 0x2cb
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x88, V34, V32, 0x0, V204]

================================

Block 0x53b
[0x53b:0x54e]
---
Predecessors: [0x3d5]
Successors: [0x3dd]
---
0x53b JUMPDEST
0x53c PUSH1 0x20
0x53e PUSH1 0x40
0x540 MLOAD
0x541 SWAP1
0x542 DUP2
0x543 ADD
0x544 PUSH1 0x40
0x546 MSTORE
0x547 DUP1
0x548 PUSH1 0x0
0x54a DUP2
0x54b MSTORE
0x54c POP
0x54d SWAP1
0x54e JUMP
---
0x53b: JUMPDEST 
0x53c: V397 = 0x20
0x53e: V398 = 0x40
0x540: V399 = M[0x40]
0x543: V400 = ADD V399 0x20
0x544: V401 = 0x40
0x546: M[0x40] = V400
0x548: V402 = 0x0
0x54b: M[V399] = 0x0
0x54e: JUMP 0x3dd
---
Entry stack: [V11, 0x14a, V90, 0x3dd]
Stack pops: 1
Stack additions: [V399]
Exit stack: [V11, 0x14a, V90, V399]

================================

Block 0x54f
[0x54f:0x554]
---
Predecessors: [0x52a]
Successors: [0x555]
---
0x54f JUMPDEST
0x550 PUSH2 0x571
0x553 SWAP2
0x554 SWAP1
---
0x54f: JUMPDEST 
0x550: V403 = 0x571
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, V369, S0]
Stack pops: 2
Stack additions: [0x571, S1, S0]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, 0x571, V369, S0]

================================

Block 0x555
[0x555:0x55d]
---
Predecessors: [0x54f, 0x55e]
Successors: [0x55e, 0x56d]
---
0x555 JUMPDEST
0x556 DUP1
0x557 DUP3
0x558 GT
0x559 ISZERO
0x55a PUSH2 0x56d
0x55d JUMPI
---
0x555: JUMPDEST 
0x558: V404 = GT V369 S0
0x559: V405 = ISZERO V404
0x55a: V406 = 0x56d
0x55d: JUMPI 0x56d V405
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, 0x571, V369, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, 0x571, V369, S0]

================================

Block 0x55e
[0x55e:0x56c]
---
Predecessors: [0x555]
Successors: [0x555]
---
0x55e PUSH1 0x0
0x560 DUP2
0x561 PUSH1 0x0
0x563 SWAP1
0x564 SSTORE
0x565 POP
0x566 PUSH1 0x1
0x568 ADD
0x569 PUSH2 0x555
0x56c JUMP
---
0x55e: V407 = 0x0
0x561: V408 = 0x0
0x564: S[S0] = 0x0
0x566: V409 = 0x1
0x568: V410 = ADD 0x1 S0
0x569: V411 = 0x555
0x56c: JUMP 0x555
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, 0x571, V369, S0]
Stack pops: 1
Stack additions: [V410]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, 0x571, V369, V410]

================================

Block 0x56d
[0x56d:0x570]
---
Predecessors: [0x555]
Successors: [0x571]
---
0x56d JUMPDEST
0x56e POP
0x56f SWAP1
0x570 JUMP
---
0x56d: JUMPDEST 
0x570: JUMP 0x571
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, 0x571, V369, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, V369]

================================

Block 0x571
[0x571:0x573]
---
Predecessors: [0x56d]
Successors: [0x537]
---
0x571 JUMPDEST
0x572 SWAP1
0x573 JUMP
---
0x571: JUMPDEST 
0x573: JUMP 0x537
---
Entry stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, 0x537, V369]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x88, V34, V32, 0x0, 0x2cb, V204, V369]

================================

Block 0x574
[0x574:0x5b4]
---
Predecessors: []
Successors: []
---
0x574 STOP
0x575 LOG1
0x576 PUSH6 0x627a7a723058
0x57d SHA3
0x57e CALLVALUE
0x57f DUP16
0x580 MISSING 0xfc
0x581 MISSING 0x4f
0x582 PUSH26 0x3b7a9b4219d5e1f0cd568acc71eab13bbb777b1d2afeb7a2a6ac
0x59d PUSH23 0x29
---
0x574: STOP 
0x575: LOG S0 S1 S2
0x576: V412 = 0x627a7a723058
0x57d: V413 = SHA3 0x627a7a723058 S3
0x57e: V414 = CALLVALUE
0x580: MISSING 0xfc
0x581: MISSING 0x4f
0x582: V415 = 0x3b7a9b4219d5e1f0cd568acc71eab13bbb777b1d2afeb7a2a6ac
0x59d: V416 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, V414, V413, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, 0x29, 0x3b7a9b4219d5e1f0cd568acc71eab13bbb777b1d2afeb7a2a6ac]
Exit stack: []

================================

Function 0:
Public function signature: 0x6c457528
Entry block: 0x5c
Exit block: 0x88
Body: 0x5c, 0x63, 0x67, 0x88, 0x1c5, 0x223, 0x227, 0x257, 0x25b, 0x26a, 0x273, 0x27a, 0x27e, 0x2cb, 0x4bb, 0x4ec, 0x4fc, 0x50b, 0x50e, 0x517, 0x529, 0x52a, 0x537, 0x54f, 0x555, 0x55e, 0x56d, 0x571

Function 1:
Public function signature: 0x8295a9ba
Entry block: 0xa2
Exit block: 0xfd
Body: 0xa2, 0xa9, 0xad, 0xfd, 0x360, 0x375, 0x380, 0x39a

Function 2:
Public function signature: 0xce43c032
Entry block: 0x113
Exit block: 0x1b7
Body: 0x113, 0x11a, 0x11e, 0x14a, 0x16f, 0x178, 0x18a, 0x19e, 0x1b7, 0x3d5, 0x3dd, 0x469, 0x471, 0x484, 0x492, 0x4a6, 0x4af, 0x53b

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

