Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x715018a6
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x715018a6
0x3c: V13 = EQ 0x715018a6 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x73]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x73
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x73
0x4b: JUMPI 0x73 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xca]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0xca
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0xca
0x56: JUMPI 0xca V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x10d]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x10d
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x10d
0x70: JUMP 0x10d
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: [0x168]
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0x41]
Successors: [0x7b, 0x7f]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x73: JUMPDEST 
0x74: V28 = CALLVALUE
0x76: V29 = ISZERO V28
0x77: V30 = 0x7f
0x7a: JUMPI 0x7f V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x73]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V31 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7f
[0x7f:0x87]
---
Predecessors: [0x73]
Successors: [0x20f]
---
0x7f JUMPDEST
0x80 POP
0x81 PUSH2 0x88
0x84 PUSH2 0x20f
0x87 JUMP
---
0x7f: JUMPDEST 
0x81: V32 = 0x88
0x84: V33 = 0x20f
0x87: JUMP 0x20f
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x88]
Exit stack: [V11, 0x88]

================================

Block 0x88
[0x88:0xc9]
---
Predecessors: [0x20f]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d DUP3
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0x88: JUMPDEST 
0x89: V34 = 0x40
0x8b: V35 = M[0x40]
0x8e: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0xa4: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbb: M[V35] = V39
0xbc: V40 = 0x20
0xbe: V41 = ADD 0x20 V35
0xc2: V42 = 0x40
0xc4: V43 = M[0x40]
0xc7: V44 = SUB V41 V43
0xc9: RETURN V43 V44
---
Entry stack: [V11, 0x88, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x88]

================================

Block 0xca
[0xca:0xd1]
---
Predecessors: [0x4c]
Successors: [0xd2, 0xd6]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc DUP1
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xca: JUMPDEST 
0xcb: V45 = CALLVALUE
0xcd: V46 = ISZERO V45
0xce: V47 = 0xd6
0xd1: JUMPI 0xd6 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xca]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V48 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xd6
[0xd6:0x10a]
---
Predecessors: [0xca]
Successors: [0x234]
---
0xd6 JUMPDEST
0xd7 POP
0xd8 PUSH2 0x10b
0xdb PUSH1 0x4
0xdd DUP1
0xde CALLDATASIZE
0xdf SUB
0xe0 DUP2
0xe1 ADD
0xe2 SWAP1
0xe3 DUP1
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 SWAP3
0x102 SWAP2
0x103 SWAP1
0x104 POP
0x105 POP
0x106 POP
0x107 PUSH2 0x234
0x10a JUMP
---
0xd6: JUMPDEST 
0xd8: V49 = 0x10b
0xdb: V50 = 0x4
0xde: V51 = CALLDATASIZE
0xdf: V52 = SUB V51 0x4
0xe1: V53 = ADD 0x4 V52
0xe5: V54 = CALLDATALOAD 0x4
0xe6: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xfd: V57 = 0x20
0xff: V58 = ADD 0x20 0x4
0x107: V59 = 0x234
0x10a: JUMP 0x234
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0x10b, V56]
Exit stack: [V11, 0x10b, V56]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x298]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x163]
---
Predecessors: [0x68]
Successors: [0x164, 0x168]
---
0x10d JUMPDEST
0x10e PUSH1 0x0
0x110 DUP1
0x111 SWAP1
0x112 SLOAD
0x113 SWAP1
0x114 PUSH2 0x100
0x117 EXP
0x118 SWAP1
0x119 DIV
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 CALLER
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d EQ
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x10d: JUMPDEST 
0x10e: V60 = 0x0
0x112: V61 = S[0x0]
0x114: V62 = 0x100
0x117: V63 = EXP 0x100 0x0
0x119: V64 = DIV V61 0x1
0x11a: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x130: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x146: V69 = CALLER
0x147: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x15d: V72 = EQ V71 V68
0x15e: V73 = ISZERO V72
0x15f: V74 = ISZERO V73
0x160: V75 = 0x168
0x163: JUMPI 0x168 V74
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x10d]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V76 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x168
[0x168:0x20e]
---
Predecessors: [0x10d]
Successors: [0x71]
---
0x168 JUMPDEST
0x169 PUSH1 0x0
0x16b DUP1
0x16c SWAP1
0x16d SLOAD
0x16e SWAP1
0x16f PUSH2 0x100
0x172 EXP
0x173 SWAP1
0x174 DIV
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc LOG2
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 PUSH1 0x0
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 DUP2
0x1d7 SLOAD
0x1d8 DUP2
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee MUL
0x1ef NOT
0x1f0 AND
0x1f1 SWAP1
0x1f2 DUP4
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 MUL
0x20a OR
0x20b SWAP1
0x20c SSTORE
0x20d POP
0x20e JUMP
---
0x168: JUMPDEST 
0x169: V77 = 0x0
0x16d: V78 = S[0x0]
0x16f: V79 = 0x100
0x172: V80 = EXP 0x100 0x0
0x174: V81 = DIV V78 0x1
0x175: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x18b: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a1: V86 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2: V87 = 0x40
0x1c4: V88 = M[0x40]
0x1c5: V89 = 0x40
0x1c7: V90 = M[0x40]
0x1ca: V91 = SUB V88 V90
0x1cc: LOG V90 V91 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V85
0x1cd: V92 = 0x0
0x1d0: V93 = 0x0
0x1d2: V94 = 0x100
0x1d5: V95 = EXP 0x100 0x0
0x1d7: V96 = S[0x0]
0x1d9: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V98 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1ef: V99 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V100 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V96
0x1f3: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x209: V103 = MUL 0x0 0x1
0x20a: V104 = OR 0x0 V100
0x20c: S[0x0] = V104
0x20e: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x233]
---
Predecessors: [0x7f]
Successors: [0x88]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 SWAP1
0x214 SLOAD
0x215 SWAP1
0x216 PUSH2 0x100
0x219 EXP
0x21a SWAP1
0x21b DIV
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 DUP2
0x233 JUMP
---
0x20f: JUMPDEST 
0x210: V105 = 0x0
0x214: V106 = S[0x0]
0x216: V107 = 0x100
0x219: V108 = EXP 0x100 0x0
0x21b: V109 = DIV V106 0x1
0x21c: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x233: JUMP 0x88
---
Entry stack: [V11, 0x88]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [V11, 0x88, V111]

================================

Block 0x234
[0x234:0x28a]
---
Predecessors: [0xd6]
Successors: [0x28b, 0x28f]
---
0x234 JUMPDEST
0x235 PUSH1 0x0
0x237 DUP1
0x238 SWAP1
0x239 SLOAD
0x23a SWAP1
0x23b PUSH2 0x100
0x23e EXP
0x23f SWAP1
0x240 DIV
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d CALLER
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 EQ
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x234: JUMPDEST 
0x235: V112 = 0x0
0x239: V113 = S[0x0]
0x23b: V114 = 0x100
0x23e: V115 = EXP 0x100 0x0
0x240: V116 = DIV V113 0x1
0x241: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x257: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x26d: V121 = CALLER
0x26e: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x284: V124 = EQ V123 V120
0x285: V125 = ISZERO V124
0x286: V126 = ISZERO V125
0x287: V127 = 0x28f
0x28a: JUMPI 0x28f V126
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x234]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V128 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28f
[0x28f:0x297]
---
Predecessors: [0x234]
Successors: [0x29b]
---
0x28f JUMPDEST
0x290 PUSH2 0x298
0x293 DUP2
0x294 PUSH2 0x29b
0x297 JUMP
---
0x28f: JUMPDEST 
0x290: V129 = 0x298
0x294: V130 = 0x29b
0x297: JUMP 0x29b
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 1
Stack additions: [S0, 0x298, S0]
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x298
[0x298:0x29a]
---
Predecessors: [0x2d7]
Successors: [0x10b]
---
0x298 JUMPDEST
0x299 POP
0x29a JUMP
---
0x298: JUMPDEST 
0x29a: JUMP 0x10b
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x29b
[0x29b:0x2d2]
---
Predecessors: [0x28f]
Successors: [0x2d3, 0x2d7]
---
0x29b JUMPDEST
0x29c PUSH1 0x0
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 DUP2
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb EQ
0x2cc ISZERO
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x29b: JUMPDEST 
0x29c: V131 = 0x0
0x29e: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x2b5: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2cb: V136 = EQ V135 0x0
0x2cc: V137 = ISZERO V136
0x2cd: V138 = ISZERO V137
0x2ce: V139 = ISZERO V138
0x2cf: V140 = 0x2d7
0x2d2: JUMPI 0x2d7 V139
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x29b]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V141 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x2d7
[0x2d7:0x394]
---
Predecessors: [0x29b]
Successors: [0x298]
---
0x2d7 JUMPDEST
0x2d8 DUP1
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 SWAP1
0x2f3 SLOAD
0x2f4 SWAP1
0x2f5 PUSH2 0x100
0x2f8 EXP
0x2f9 SWAP1
0x2fa DIV
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x348 PUSH1 0x40
0x34a MLOAD
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 LOG3
0x353 DUP1
0x354 PUSH1 0x0
0x356 DUP1
0x357 PUSH2 0x100
0x35a EXP
0x35b DUP2
0x35c SLOAD
0x35d DUP2
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 MUL
0x374 NOT
0x375 AND
0x376 SWAP1
0x377 DUP4
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d AND
0x38e MUL
0x38f OR
0x390 SWAP1
0x391 SSTORE
0x392 POP
0x393 POP
0x394 JUMP
---
0x2d7: JUMPDEST 
0x2d9: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2ef: V144 = 0x0
0x2f3: V145 = S[0x0]
0x2f5: V146 = 0x100
0x2f8: V147 = EXP 0x100 0x0
0x2fa: V148 = DIV V145 0x1
0x2fb: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x311: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x327: V153 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x348: V154 = 0x40
0x34a: V155 = M[0x40]
0x34b: V156 = 0x40
0x34d: V157 = M[0x40]
0x350: V158 = SUB V155 V157
0x352: LOG V157 V158 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V152 V143
0x354: V159 = 0x0
0x357: V160 = 0x100
0x35a: V161 = EXP 0x100 0x0
0x35c: V162 = S[0x0]
0x35e: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V164 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x374: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x375: V166 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V162
0x378: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x38e: V169 = MUL V168 0x1
0x38f: V170 = OR V169 V166
0x391: S[0x0] = V170
0x394: JUMP 0x298
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x395
[0x395:0x3ad]
---
Predecessors: []
Successors: [0x3ae]
Has unresolved jump.
---
0x395 STOP
0x396 LOG1
0x397 PUSH6 0x627a7a723058
0x39e SHA3
0x39f DUP10
0x3a0 SWAP4
0x3a1 LOG2
0x3a2 MSTORE8
0x3a3 PUSH7 0x1fbc97d9524913
0x3ab SWAP13
0x3ac MISSING 0x4f
0x3ad JUMPI
---
0x395: STOP 
0x396: LOG S0 S1 S2
0x397: V171 = 0x627a7a723058
0x39e: V172 = SHA3 0x627a7a723058 S3
0x3a1: LOG S6 V172 S4 S5
0x3a2: M8[S12] = S7
0x3a3: V173 = 0x1fbc97d9524913
0x3ac: MISSING 0x4f
0x3ad: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [S20, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, 0x1fbc97d9524913]
Exit stack: []

================================

Block 0x3ae
[0x3ae:0x401]
---
Predecessors: [0x395]
Successors: [0x402]
---
0x3ae DUP10
0x3af SGT
0x3b0 PUSH11 0x3153c59f13f3627bda81a6
0x3bc PUSH15 0x2ba900296080604052600436106100
0x3cc PUSH25 0x576000357c0100000000000000000000000000000000000000
0x3e6 STOP
0x3e7 STOP
0x3e8 STOP
0x3e9 STOP
0x3ea STOP
0x3eb STOP
0x3ec STOP
0x3ed STOP
0x3ee STOP
0x3ef SWAP1
0x3f0 DIV
0x3f1 PUSH4 0xffffffff
0x3f6 AND
0x3f7 DUP1
0x3f8 PUSH4 0x3bdebbe1
0x3fd EQ
0x3fe PUSH2 0x7d
0x401 JUMPI
---
0x3af: V174 = SGT S9 S0
0x3b0: V175 = 0x3153c59f13f3627bda81a6
0x3bc: V176 = 0x2ba900296080604052600436106100
0x3cc: V177 = 0x576000357c0100000000000000000000000000000000000000
0x3e6: STOP 
0x3e7: STOP 
0x3e8: STOP 
0x3e9: STOP 
0x3ea: STOP 
0x3eb: STOP 
0x3ec: STOP 
0x3ed: STOP 
0x3ee: STOP 
0x3f0: V178 = DIV S1 S0
0x3f1: V179 = 0xffffffff
0x3f6: V180 = AND 0xffffffff V178
0x3f8: V181 = 0x3bdebbe1
0x3fd: V182 = EQ 0x3bdebbe1 V180
0x3fe: V183 = 0x7d
0x401: THROWI V182
---
Entry stack: []
Stack pops: 2176
Stack additions: [V180]
Exit stack: []

================================

Block 0x402
[0x402:0x40c]
---
Predecessors: [0x3ae]
Successors: [0x40d]
---
0x402 DUP1
0x403 PUSH4 0x715018a6
0x408 EQ
0x409 PUSH2 0xd8
0x40c JUMPI
---
0x403: V184 = 0x715018a6
0x408: V185 = EQ 0x715018a6 V180
0x409: V186 = 0xd8
0x40c: THROWI V185
---
Entry stack: [V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V180]

================================

Block 0x40d
[0x40d:0x417]
---
Predecessors: [0x402]
Successors: [0x418]
---
0x40d DUP1
0x40e PUSH4 0x7362377b
0x413 EQ
0x414 PUSH2 0xef
0x417 JUMPI
---
0x40e: V187 = 0x7362377b
0x413: V188 = EQ 0x7362377b V180
0x414: V189 = 0xef
0x417: THROWI V188
---
Entry stack: [V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V180]

================================

Block 0x418
[0x418:0x422]
---
Predecessors: [0x40d]
Successors: [0x423]
---
0x418 DUP1
0x419 PUSH4 0x8da5cb5b
0x41e EQ
0x41f PUSH2 0x11e
0x422 JUMPI
---
0x419: V190 = 0x8da5cb5b
0x41e: V191 = EQ 0x8da5cb5b V180
0x41f: V192 = 0x11e
0x422: THROWI V191
---
Entry stack: [V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V180]

================================

Block 0x423
[0x423:0x42d]
---
Predecessors: [0x418]
Successors: [0x42e]
---
0x423 DUP1
0x424 PUSH4 0xd8267fef
0x429 EQ
0x42a PUSH2 0x175
0x42d JUMPI
---
0x424: V193 = 0xd8267fef
0x429: V194 = EQ 0xd8267fef V180
0x42a: V195 = 0x175
0x42d: THROWI V194
---
Entry stack: [V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V180]

================================

Block 0x42e
[0x42e:0x438]
---
Predecessors: [0x423]
Successors: [0x439]
---
0x42e DUP1
0x42f PUSH4 0xf2fde38b
0x434 EQ
0x435 PUSH2 0x229
0x438 JUMPI
---
0x42f: V196 = 0xf2fde38b
0x434: V197 = EQ 0xf2fde38b V180
0x435: V198 = 0x229
0x438: THROWI V197
---
Entry stack: [V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V180]

================================

Block 0x439
[0x439:0x445]
---
Predecessors: [0x42e, 0x7db]
Successors: [0x446]
---
0x439 JUMPDEST
0x43a PUSH1 0x0
0x43c DUP1
0x43d REVERT
0x43e JUMPDEST
0x43f CALLVALUE
0x440 DUP1
0x441 ISZERO
0x442 PUSH2 0x89
0x445 JUMPI
---
0x439: JUMPDEST 
0x43a: V199 = 0x0
0x43d: REVERT 0x0 0x0
0x43e: JUMPDEST 
0x43f: V200 = CALLVALUE
0x441: V201 = ISZERO V200
0x442: V202 = 0x89
0x445: THROWI V201
---
Entry stack: [V440, S0]
Stack pops: 0
Stack additions: [V200]
Exit stack: []

================================

Block 0x446
[0x446:0x4a0]
---
Predecessors: [0x439]
Successors: [0x4a1]
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
0x44a JUMPDEST
0x44b POP
0x44c PUSH2 0xbe
0x44f PUSH1 0x4
0x451 DUP1
0x452 CALLDATASIZE
0x453 SUB
0x454 DUP2
0x455 ADD
0x456 SWAP1
0x457 DUP1
0x458 DUP1
0x459 CALLDATALOAD
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 SWAP1
0x471 PUSH1 0x20
0x473 ADD
0x474 SWAP1
0x475 SWAP3
0x476 SWAP2
0x477 SWAP1
0x478 POP
0x479 POP
0x47a POP
0x47b PUSH2 0x26c
0x47e JUMP
0x47f JUMPDEST
0x480 PUSH1 0x40
0x482 MLOAD
0x483 DUP1
0x484 DUP3
0x485 ISZERO
0x486 ISZERO
0x487 ISZERO
0x488 ISZERO
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x20
0x48d ADD
0x48e SWAP2
0x48f POP
0x490 POP
0x491 PUSH1 0x40
0x493 MLOAD
0x494 DUP1
0x495 SWAP2
0x496 SUB
0x497 SWAP1
0x498 RETURN
0x499 JUMPDEST
0x49a CALLVALUE
0x49b DUP1
0x49c ISZERO
0x49d PUSH2 0xe4
0x4a0 JUMPI
---
0x446: V203 = 0x0
0x449: REVERT 0x0 0x0
0x44a: JUMPDEST 
0x44c: V204 = 0xbe
0x44f: V205 = 0x4
0x452: V206 = CALLDATASIZE
0x453: V207 = SUB V206 0x4
0x455: V208 = ADD 0x4 V207
0x459: V209 = CALLDATALOAD 0x4
0x45a: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x471: V212 = 0x20
0x473: V213 = ADD 0x20 0x4
0x47b: V214 = 0x26c
0x47e: THROW 
0x47f: JUMPDEST 
0x480: V215 = 0x40
0x482: V216 = M[0x40]
0x485: V217 = ISZERO S0
0x486: V218 = ISZERO V217
0x487: V219 = ISZERO V218
0x488: V220 = ISZERO V219
0x48a: M[V216] = V220
0x48b: V221 = 0x20
0x48d: V222 = ADD 0x20 V216
0x491: V223 = 0x40
0x493: V224 = M[0x40]
0x496: V225 = SUB V222 V224
0x498: RETURN V224 V225
0x499: JUMPDEST 
0x49a: V226 = CALLVALUE
0x49c: V227 = ISZERO V226
0x49d: V228 = 0xe4
0x4a0: THROWI V227
---
Entry stack: [V200]
Stack pops: 0
Stack additions: [V211, 0xbe, V226]
Exit stack: []

================================

Block 0x4a1
[0x4a1:0x4ad]
---
Predecessors: [0x446]
Successors: [0x536]
---
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 REVERT
0x4a5 JUMPDEST
0x4a6 POP
0x4a7 PUSH2 0xed
0x4aa PUSH2 0x536
0x4ad JUMP
---
0x4a1: V229 = 0x0
0x4a4: REVERT 0x0 0x0
0x4a5: JUMPDEST 
0x4a7: V230 = 0xed
0x4aa: V231 = 0x536
0x4ad: JUMP 0x536
---
Entry stack: [V226]
Stack pops: 0
Stack additions: [0xed]
Exit stack: []

================================

Block 0x4ae
[0x4ae:0x4b7]
---
Predecessors: []
Successors: [0x4b8]
---
0x4ae JUMPDEST
0x4af STOP
0x4b0 JUMPDEST
0x4b1 CALLVALUE
0x4b2 DUP1
0x4b3 ISZERO
0x4b4 PUSH2 0xfb
0x4b7 JUMPI
---
0x4ae: JUMPDEST 
0x4af: STOP 
0x4b0: JUMPDEST 
0x4b1: V232 = CALLVALUE
0x4b3: V233 = ISZERO V232
0x4b4: V234 = 0xfb
0x4b7: THROWI V233
---
Entry stack: []
Stack pops: 0
Stack additions: [V232]
Exit stack: []

================================

Block 0x4b8
[0x4b8:0x4e6]
---
Predecessors: [0x4ae]
Successors: [0x4e7]
---
0x4b8 PUSH1 0x0
0x4ba DUP1
0x4bb REVERT
0x4bc JUMPDEST
0x4bd POP
0x4be PUSH2 0x104
0x4c1 PUSH2 0x638
0x4c4 JUMP
0x4c5 JUMPDEST
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 DUP1
0x4ca DUP3
0x4cb ISZERO
0x4cc ISZERO
0x4cd ISZERO
0x4ce ISZERO
0x4cf DUP2
0x4d0 MSTORE
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP2
0x4d5 POP
0x4d6 POP
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da DUP1
0x4db SWAP2
0x4dc SUB
0x4dd SWAP1
0x4de RETURN
0x4df JUMPDEST
0x4e0 CALLVALUE
0x4e1 DUP1
0x4e2 ISZERO
0x4e3 PUSH2 0x12a
0x4e6 JUMPI
---
0x4b8: V235 = 0x0
0x4bb: REVERT 0x0 0x0
0x4bc: JUMPDEST 
0x4be: V236 = 0x104
0x4c1: V237 = 0x638
0x4c4: THROW 
0x4c5: JUMPDEST 
0x4c6: V238 = 0x40
0x4c8: V239 = M[0x40]
0x4cb: V240 = ISZERO S0
0x4cc: V241 = ISZERO V240
0x4cd: V242 = ISZERO V241
0x4ce: V243 = ISZERO V242
0x4d0: M[V239] = V243
0x4d1: V244 = 0x20
0x4d3: V245 = ADD 0x20 V239
0x4d7: V246 = 0x40
0x4d9: V247 = M[0x40]
0x4dc: V248 = SUB V245 V247
0x4de: RETURN V247 V248
0x4df: JUMPDEST 
0x4e0: V249 = CALLVALUE
0x4e2: V250 = ISZERO V249
0x4e3: V251 = 0x12a
0x4e6: THROWI V250
---
Entry stack: [V232]
Stack pops: 0
Stack additions: [0x104, V249]
Exit stack: []

================================

Block 0x4e7
[0x4e7:0x535]
---
Predecessors: [0x4b8]
Successors: []
---
0x4e7 PUSH1 0x0
0x4e9 DUP1
0x4ea REVERT
0x4eb JUMPDEST
0x4ec POP
0x4ed PUSH2 0x133
0x4f0 PUSH2 0x78d
0x4f3 JUMP
0x4f4 JUMPDEST
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 DUP1
0x4f9 DUP3
0x4fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50f AND
0x510 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x525 AND
0x526 DUP2
0x527 MSTORE
0x528 PUSH1 0x20
0x52a ADD
0x52b SWAP2
0x52c POP
0x52d POP
0x52e PUSH1 0x40
0x530 MLOAD
0x531 DUP1
0x532 SWAP2
0x533 SUB
0x534 SWAP1
0x535 RETURN
---
0x4e7: V252 = 0x0
0x4ea: REVERT 0x0 0x0
0x4eb: JUMPDEST 
0x4ed: V253 = 0x133
0x4f0: V254 = 0x78d
0x4f3: THROW 
0x4f4: JUMPDEST 
0x4f5: V255 = 0x40
0x4f7: V256 = M[0x40]
0x4fa: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x50f: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x510: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x525: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x527: M[V256] = V260
0x528: V261 = 0x20
0x52a: V262 = ADD 0x20 V256
0x52e: V263 = 0x40
0x530: V264 = M[0x40]
0x533: V265 = SUB V262 V264
0x535: RETURN V264 V265
---
Entry stack: [V249]
Stack pops: 0
Stack additions: [0x133]
Exit stack: []

================================

Block 0x536
[0x536:0x5f1]
---
Predecessors: [0x4a1]
Successors: [0x5f2]
---
0x536 JUMPDEST
0x537 PUSH2 0x20f
0x53a PUSH1 0x4
0x53c DUP1
0x53d CALLDATASIZE
0x53e SUB
0x53f DUP2
0x540 ADD
0x541 SWAP1
0x542 DUP1
0x543 DUP1
0x544 CALLDATALOAD
0x545 SWAP1
0x546 PUSH1 0x20
0x548 ADD
0x549 SWAP1
0x54a DUP3
0x54b ADD
0x54c DUP1
0x54d CALLDATALOAD
0x54e SWAP1
0x54f PUSH1 0x20
0x551 ADD
0x552 SWAP1
0x553 DUP1
0x554 DUP1
0x555 PUSH1 0x20
0x557 MUL
0x558 PUSH1 0x20
0x55a ADD
0x55b PUSH1 0x40
0x55d MLOAD
0x55e SWAP1
0x55f DUP2
0x560 ADD
0x561 PUSH1 0x40
0x563 MSTORE
0x564 DUP1
0x565 SWAP4
0x566 SWAP3
0x567 SWAP2
0x568 SWAP1
0x569 DUP2
0x56a DUP2
0x56b MSTORE
0x56c PUSH1 0x20
0x56e ADD
0x56f DUP4
0x570 DUP4
0x571 PUSH1 0x20
0x573 MUL
0x574 DUP1
0x575 DUP3
0x576 DUP5
0x577 CALLDATACOPY
0x578 DUP3
0x579 ADD
0x57a SWAP2
0x57b POP
0x57c POP
0x57d POP
0x57e POP
0x57f POP
0x580 POP
0x581 SWAP2
0x582 SWAP3
0x583 SWAP2
0x584 SWAP3
0x585 SWAP1
0x586 DUP1
0x587 CALLDATALOAD
0x588 SWAP1
0x589 PUSH1 0x20
0x58b ADD
0x58c SWAP1
0x58d DUP3
0x58e ADD
0x58f DUP1
0x590 CALLDATALOAD
0x591 SWAP1
0x592 PUSH1 0x20
0x594 ADD
0x595 SWAP1
0x596 DUP1
0x597 DUP1
0x598 PUSH1 0x20
0x59a MUL
0x59b PUSH1 0x20
0x59d ADD
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 SWAP1
0x5a2 DUP2
0x5a3 ADD
0x5a4 PUSH1 0x40
0x5a6 MSTORE
0x5a7 DUP1
0x5a8 SWAP4
0x5a9 SWAP3
0x5aa SWAP2
0x5ab SWAP1
0x5ac DUP2
0x5ad DUP2
0x5ae MSTORE
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 DUP4
0x5b3 DUP4
0x5b4 PUSH1 0x20
0x5b6 MUL
0x5b7 DUP1
0x5b8 DUP3
0x5b9 DUP5
0x5ba CALLDATACOPY
0x5bb DUP3
0x5bc ADD
0x5bd SWAP2
0x5be POP
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 POP
0x5c3 POP
0x5c4 SWAP2
0x5c5 SWAP3
0x5c6 SWAP2
0x5c7 SWAP3
0x5c8 SWAP1
0x5c9 POP
0x5ca POP
0x5cb POP
0x5cc PUSH2 0x7b2
0x5cf JUMP
0x5d0 JUMPDEST
0x5d1 PUSH1 0x40
0x5d3 MLOAD
0x5d4 DUP1
0x5d5 DUP3
0x5d6 ISZERO
0x5d7 ISZERO
0x5d8 ISZERO
0x5d9 ISZERO
0x5da DUP2
0x5db MSTORE
0x5dc PUSH1 0x20
0x5de ADD
0x5df SWAP2
0x5e0 POP
0x5e1 POP
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 DUP1
0x5e6 SWAP2
0x5e7 SUB
0x5e8 SWAP1
0x5e9 RETURN
0x5ea JUMPDEST
0x5eb CALLVALUE
0x5ec DUP1
0x5ed ISZERO
0x5ee PUSH2 0x235
0x5f1 JUMPI
---
0x536: JUMPDEST 
0x537: V266 = 0x20f
0x53a: V267 = 0x4
0x53d: V268 = CALLDATASIZE
0x53e: V269 = SUB V268 0x4
0x540: V270 = ADD 0x4 V269
0x544: V271 = CALLDATALOAD 0x4
0x546: V272 = 0x20
0x548: V273 = ADD 0x20 0x4
0x54b: V274 = ADD 0x4 V271
0x54d: V275 = CALLDATALOAD V274
0x54f: V276 = 0x20
0x551: V277 = ADD 0x20 V274
0x555: V278 = 0x20
0x557: V279 = MUL 0x20 V275
0x558: V280 = 0x20
0x55a: V281 = ADD 0x20 V279
0x55b: V282 = 0x40
0x55d: V283 = M[0x40]
0x560: V284 = ADD V283 V281
0x561: V285 = 0x40
0x563: M[0x40] = V284
0x56b: M[V283] = V275
0x56c: V286 = 0x20
0x56e: V287 = ADD 0x20 V283
0x571: V288 = 0x20
0x573: V289 = MUL 0x20 V275
0x577: CALLDATACOPY V287 V277 V289
0x579: V290 = ADD V287 V289
0x587: V291 = CALLDATALOAD 0x24
0x589: V292 = 0x20
0x58b: V293 = ADD 0x20 0x24
0x58e: V294 = ADD 0x4 V291
0x590: V295 = CALLDATALOAD V294
0x592: V296 = 0x20
0x594: V297 = ADD 0x20 V294
0x598: V298 = 0x20
0x59a: V299 = MUL 0x20 V295
0x59b: V300 = 0x20
0x59d: V301 = ADD 0x20 V299
0x59e: V302 = 0x40
0x5a0: V303 = M[0x40]
0x5a3: V304 = ADD V303 V301
0x5a4: V305 = 0x40
0x5a6: M[0x40] = V304
0x5ae: M[V303] = V295
0x5af: V306 = 0x20
0x5b1: V307 = ADD 0x20 V303
0x5b4: V308 = 0x20
0x5b6: V309 = MUL 0x20 V295
0x5ba: CALLDATACOPY V307 V297 V309
0x5bc: V310 = ADD V307 V309
0x5cc: V311 = 0x7b2
0x5cf: THROW 
0x5d0: JUMPDEST 
0x5d1: V312 = 0x40
0x5d3: V313 = M[0x40]
0x5d6: V314 = ISZERO S0
0x5d7: V315 = ISZERO V314
0x5d8: V316 = ISZERO V315
0x5d9: V317 = ISZERO V316
0x5db: M[V313] = V317
0x5dc: V318 = 0x20
0x5de: V319 = ADD 0x20 V313
0x5e2: V320 = 0x40
0x5e4: V321 = M[0x40]
0x5e7: V322 = SUB V319 V321
0x5e9: RETURN V321 V322
0x5ea: JUMPDEST 
0x5eb: V323 = CALLVALUE
0x5ed: V324 = ISZERO V323
0x5ee: V325 = 0x235
0x5f1: THROWI V324
---
Entry stack: [0xed]
Stack pops: 0
Stack additions: [0x20f, V283, V303, V323]
Exit stack: []

================================

Block 0x5f2
[0x5f2:0x685]
---
Predecessors: [0x536]
Successors: [0x686]
---
0x5f2 PUSH1 0x0
0x5f4 DUP1
0x5f5 REVERT
0x5f6 JUMPDEST
0x5f7 POP
0x5f8 PUSH2 0x26a
0x5fb PUSH1 0x4
0x5fd DUP1
0x5fe CALLDATASIZE
0x5ff SUB
0x600 DUP2
0x601 ADD
0x602 SWAP1
0x603 DUP1
0x604 DUP1
0x605 CALLDATALOAD
0x606 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61b AND
0x61c SWAP1
0x61d PUSH1 0x20
0x61f ADD
0x620 SWAP1
0x621 SWAP3
0x622 SWAP2
0x623 SWAP1
0x624 POP
0x625 POP
0x626 POP
0x627 PUSH2 0x913
0x62a JUMP
0x62b JUMPDEST
0x62c STOP
0x62d JUMPDEST
0x62e PUSH1 0x0
0x630 DUP1
0x631 PUSH1 0x0
0x633 SWAP1
0x634 SLOAD
0x635 SWAP1
0x636 PUSH2 0x100
0x639 EXP
0x63a SWAP1
0x63b DIV
0x63c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x651 AND
0x652 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x667 AND
0x668 CALLER
0x669 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67e AND
0x67f EQ
0x680 ISZERO
0x681 ISZERO
0x682 PUSH2 0x2c9
0x685 JUMPI
---
0x5f2: V326 = 0x0
0x5f5: REVERT 0x0 0x0
0x5f6: JUMPDEST 
0x5f8: V327 = 0x26a
0x5fb: V328 = 0x4
0x5fe: V329 = CALLDATASIZE
0x5ff: V330 = SUB V329 0x4
0x601: V331 = ADD 0x4 V330
0x605: V332 = CALLDATALOAD 0x4
0x606: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x61b: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x61d: V335 = 0x20
0x61f: V336 = ADD 0x20 0x4
0x627: V337 = 0x913
0x62a: THROW 
0x62b: JUMPDEST 
0x62c: STOP 
0x62d: JUMPDEST 
0x62e: V338 = 0x0
0x631: V339 = 0x0
0x634: V340 = S[0x0]
0x636: V341 = 0x100
0x639: V342 = EXP 0x100 0x0
0x63b: V343 = DIV V340 0x1
0x63c: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x651: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x652: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x667: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x668: V348 = CALLER
0x669: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x67f: V351 = EQ V350 V347
0x680: V352 = ISZERO V351
0x681: V353 = ISZERO V352
0x682: V354 = 0x2c9
0x685: THROWI V353
---
Entry stack: [V323]
Stack pops: 0
Stack additions: [V334, 0x26a, 0x0]
Exit stack: []

================================

Block 0x686
[0x686:0x6a1]
---
Predecessors: [0x5f2]
Successors: [0x6a2]
---
0x686 PUSH1 0x0
0x688 DUP1
0x689 REVERT
0x68a JUMPDEST
0x68b PUSH1 0x0
0x68d PUSH1 0x14
0x68f SWAP1
0x690 SLOAD
0x691 SWAP1
0x692 PUSH2 0x100
0x695 EXP
0x696 SWAP1
0x697 DIV
0x698 PUSH1 0xff
0x69a AND
0x69b ISZERO
0x69c ISZERO
0x69d ISZERO
0x69e PUSH2 0x2e5
0x6a1 JUMPI
---
0x686: V355 = 0x0
0x689: REVERT 0x0 0x0
0x68a: JUMPDEST 
0x68b: V356 = 0x0
0x68d: V357 = 0x14
0x690: V358 = S[0x0]
0x692: V359 = 0x100
0x695: V360 = EXP 0x100 0x14
0x697: V361 = DIV V358 0x10000000000000000000000000000000000000000
0x698: V362 = 0xff
0x69a: V363 = AND 0xff V361
0x69b: V364 = ISZERO V363
0x69c: V365 = ISZERO V364
0x69d: V366 = ISZERO V365
0x69e: V367 = 0x2e5
0x6a1: THROWI V366
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a2
[0x6a2:0x6f7]
---
Predecessors: [0x686]
Successors: [0x6f8]
---
0x6a2 PUSH1 0x0
0x6a4 DUP1
0x6a5 REVERT
0x6a6 JUMPDEST
0x6a7 PUSH1 0x1
0x6a9 PUSH1 0x0
0x6ab PUSH1 0x14
0x6ad PUSH2 0x100
0x6b0 EXP
0x6b1 DUP2
0x6b2 SLOAD
0x6b3 DUP2
0x6b4 PUSH1 0xff
0x6b6 MUL
0x6b7 NOT
0x6b8 AND
0x6b9 SWAP1
0x6ba DUP4
0x6bb ISZERO
0x6bc ISZERO
0x6bd MUL
0x6be OR
0x6bf SWAP1
0x6c0 SSTORE
0x6c1 POP
0x6c2 PUSH1 0x0
0x6c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d9 AND
0x6da DUP3
0x6db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f0 AND
0x6f1 EQ
0x6f2 ISZERO
0x6f3 ISZERO
0x6f4 PUSH2 0x513
0x6f7 JUMPI
---
0x6a2: V368 = 0x0
0x6a5: REVERT 0x0 0x0
0x6a6: JUMPDEST 
0x6a7: V369 = 0x1
0x6a9: V370 = 0x0
0x6ab: V371 = 0x14
0x6ad: V372 = 0x100
0x6b0: V373 = EXP 0x100 0x14
0x6b2: V374 = S[0x0]
0x6b4: V375 = 0xff
0x6b6: V376 = MUL 0xff 0x10000000000000000000000000000000000000000
0x6b7: V377 = NOT 0xff0000000000000000000000000000000000000000
0x6b8: V378 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V374
0x6bb: V379 = ISZERO 0x1
0x6bc: V380 = ISZERO 0x0
0x6bd: V381 = MUL 0x1 0x10000000000000000000000000000000000000000
0x6be: V382 = OR 0x10000000000000000000000000000000000000000 V378
0x6c0: S[0x0] = V382
0x6c2: V383 = 0x0
0x6c4: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d9: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6db: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6f1: V388 = EQ V387 0x0
0x6f2: V389 = ISZERO V388
0x6f3: V390 = ISZERO V389
0x6f4: V391 = 0x513
0x6f7: THROWI V390
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x6f8
[0x6f8:0x7cb]
---
Predecessors: [0x6a2]
Successors: [0x7cc]
---
0x6f8 DUP2
0x6f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70e AND
0x70f PUSH4 0xa9059cbb
0x714 PUSH1 0x0
0x716 DUP1
0x717 SWAP1
0x718 SLOAD
0x719 SWAP1
0x71a PUSH2 0x100
0x71d EXP
0x71e SWAP1
0x71f DIV
0x720 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x735 AND
0x736 DUP5
0x737 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74c AND
0x74d PUSH4 0x70a08231
0x752 ADDRESS
0x753 PUSH1 0x40
0x755 MLOAD
0x756 DUP3
0x757 PUSH4 0xffffffff
0x75c AND
0x75d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x77b MUL
0x77c DUP2
0x77d MSTORE
0x77e PUSH1 0x4
0x780 ADD
0x781 DUP1
0x782 DUP3
0x783 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x798 AND
0x799 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ae AND
0x7af DUP2
0x7b0 MSTORE
0x7b1 PUSH1 0x20
0x7b3 ADD
0x7b4 SWAP2
0x7b5 POP
0x7b6 POP
0x7b7 PUSH1 0x20
0x7b9 PUSH1 0x40
0x7bb MLOAD
0x7bc DUP1
0x7bd DUP4
0x7be SUB
0x7bf DUP2
0x7c0 PUSH1 0x0
0x7c2 DUP8
0x7c3 DUP1
0x7c4 EXTCODESIZE
0x7c5 ISZERO
0x7c6 DUP1
0x7c7 ISZERO
0x7c8 PUSH2 0x40f
0x7cb JUMPI
---
0x6f9: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x70e: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x70f: V394 = 0xa9059cbb
0x714: V395 = 0x0
0x718: V396 = S[0x0]
0x71a: V397 = 0x100
0x71d: V398 = EXP 0x100 0x0
0x71f: V399 = DIV V396 0x1
0x720: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x735: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x737: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x74c: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x74d: V404 = 0x70a08231
0x752: V405 = ADDRESS
0x753: V406 = 0x40
0x755: V407 = M[0x40]
0x757: V408 = 0xffffffff
0x75c: V409 = AND 0xffffffff 0x70a08231
0x75d: V410 = 0x100000000000000000000000000000000000000000000000000000000
0x77b: V411 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x77d: M[V407] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x77e: V412 = 0x4
0x780: V413 = ADD 0x4 V407
0x783: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x798: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x799: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x7b0: M[V413] = V417
0x7b1: V418 = 0x20
0x7b3: V419 = ADD 0x20 V413
0x7b7: V420 = 0x20
0x7b9: V421 = 0x40
0x7bb: V422 = M[0x40]
0x7be: V423 = SUB V419 V422
0x7c0: V424 = 0x0
0x7c4: V425 = EXTCODESIZE V403
0x7c5: V426 = ISZERO V425
0x7c7: V427 = ISZERO V426
0x7c8: V428 = 0x40f
0x7cb: THROWI V427
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V393, 0xa9059cbb, V401, V403, 0x70a08231, V419, 0x20, V422, V423, V422, 0x0, V403, V426]
Exit stack: [S1, S0, V393, 0xa9059cbb, V401, V403, 0x70a08231, V419, 0x20, V422, V423, V422, 0x0, V403, V426]

================================

Block 0x7cc
[0x7cc:0x7da]
---
Predecessors: [0x6f8]
Successors: [0x7db]
---
0x7cc PUSH1 0x0
0x7ce DUP1
0x7cf REVERT
0x7d0 JUMPDEST
0x7d1 POP
0x7d2 GAS
0x7d3 CALL
0x7d4 ISZERO
0x7d5 DUP1
0x7d6 ISZERO
0x7d7 PUSH2 0x423
0x7da JUMPI
---
0x7cc: V429 = 0x0
0x7cf: REVERT 0x0 0x0
0x7d0: JUMPDEST 
0x7d2: V430 = GAS
0x7d3: V431 = CALL V430 S1 S2 S3 S4 S5 S6
0x7d4: V432 = ISZERO V431
0x7d6: V433 = ISZERO V432
0x7d7: V434 = 0x423
0x7da: THROWI V433
---
Entry stack: [S14, S13, V393, 0xa9059cbb, V401, V403, 0x70a08231, V419, 0x20, V422, V423, V422, 0x0, V403, V426]
Stack pops: 0
Stack additions: [V432]
Exit stack: []

================================

Block 0x7db
[0x7db:0x7f5]
---
Predecessors: [0x7cc]
Successors: [0x439, 0x7f6]
---
0x7db RETURNDATASIZE
0x7dc PUSH1 0x0
0x7de DUP1
0x7df RETURNDATACOPY
0x7e0 RETURNDATASIZE
0x7e1 PUSH1 0x0
0x7e3 REVERT
0x7e4 JUMPDEST
0x7e5 POP
0x7e6 POP
0x7e7 POP
0x7e8 POP
0x7e9 PUSH1 0x40
0x7eb MLOAD
0x7ec RETURNDATASIZE
0x7ed PUSH1 0x20
0x7ef DUP2
0x7f0 LT
0x7f1 ISZERO
0x7f2 PUSH2 0x439
0x7f5 JUMPI
---
0x7db: V435 = RETURNDATASIZE
0x7dc: V436 = 0x0
0x7df: RETURNDATACOPY 0x0 0x0 V435
0x7e0: V437 = RETURNDATASIZE
0x7e1: V438 = 0x0
0x7e3: REVERT 0x0 V437
0x7e4: JUMPDEST 
0x7e9: V439 = 0x40
0x7eb: V440 = M[0x40]
0x7ec: V441 = RETURNDATASIZE
0x7ed: V442 = 0x20
0x7f0: V443 = LT V441 0x20
0x7f1: V444 = ISZERO V443
0x7f2: V445 = 0x439
0x7f5: JUMPI 0x439 V444
---
Entry stack: [V432]
Stack pops: 0
Stack additions: [V441, V440]
Exit stack: []

================================

Block 0x7f6
[0x7f6:0x88b]
---
Predecessors: [0x7db]
Successors: [0x88c]
---
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 REVERT
0x7fa JUMPDEST
0x7fb DUP2
0x7fc ADD
0x7fd SWAP1
0x7fe DUP1
0x7ff DUP1
0x800 MLOAD
0x801 SWAP1
0x802 PUSH1 0x20
0x804 ADD
0x805 SWAP1
0x806 SWAP3
0x807 SWAP2
0x808 SWAP1
0x809 POP
0x80a POP
0x80b POP
0x80c PUSH1 0x40
0x80e MLOAD
0x80f DUP4
0x810 PUSH4 0xffffffff
0x815 AND
0x816 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x834 MUL
0x835 DUP2
0x836 MSTORE
0x837 PUSH1 0x4
0x839 ADD
0x83a DUP1
0x83b DUP4
0x83c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x851 AND
0x852 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x867 AND
0x868 DUP2
0x869 MSTORE
0x86a PUSH1 0x20
0x86c ADD
0x86d DUP3
0x86e DUP2
0x86f MSTORE
0x870 PUSH1 0x20
0x872 ADD
0x873 SWAP3
0x874 POP
0x875 POP
0x876 POP
0x877 PUSH1 0x20
0x879 PUSH1 0x40
0x87b MLOAD
0x87c DUP1
0x87d DUP4
0x87e SUB
0x87f DUP2
0x880 PUSH1 0x0
0x882 DUP8
0x883 DUP1
0x884 EXTCODESIZE
0x885 ISZERO
0x886 DUP1
0x887 ISZERO
0x888 PUSH2 0x4cf
0x88b JUMPI
---
0x7f6: V446 = 0x0
0x7f9: REVERT 0x0 0x0
0x7fa: JUMPDEST 
0x7fc: V447 = ADD S1 S0
0x800: V448 = M[S1]
0x802: V449 = 0x20
0x804: V450 = ADD 0x20 S1
0x80c: V451 = 0x40
0x80e: V452 = M[0x40]
0x810: V453 = 0xffffffff
0x815: V454 = AND 0xffffffff S3
0x816: V455 = 0x100000000000000000000000000000000000000000000000000000000
0x834: V456 = MUL 0x100000000000000000000000000000000000000000000000000000000 V454
0x836: M[V452] = V456
0x837: V457 = 0x4
0x839: V458 = ADD 0x4 V452
0x83c: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x851: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x852: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x867: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x869: M[V458] = V462
0x86a: V463 = 0x20
0x86c: V464 = ADD 0x20 V458
0x86f: M[V464] = V448
0x870: V465 = 0x20
0x872: V466 = ADD 0x20 V464
0x877: V467 = 0x20
0x879: V468 = 0x40
0x87b: V469 = M[0x40]
0x87e: V470 = SUB V466 V469
0x880: V471 = 0x0
0x884: V472 = EXTCODESIZE S4
0x885: V473 = ISZERO V472
0x887: V474 = ISZERO V473
0x888: V475 = 0x4cf
0x88b: THROWI V474
---
Entry stack: [V440, V441]
Stack pops: 0
Stack additions: [V473, S4, 0x0, V469, V470, V469, 0x20, V466, S3, S4]
Exit stack: []

================================

Block 0x88c
[0x88c:0x88f]
---
Predecessors: [0x7f6]
Successors: []
---
0x88c PUSH1 0x0
0x88e DUP1
0x88f REVERT
---
0x88c: V476 = 0x0
0x88f: REVERT 0x0 0x0
---
Entry stack: [S9, S8, V466, 0x20, V469, V470, V469, 0x0, S1, V473]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, V466, 0x20, V469, V470, V469, 0x0, S1, V473]

================================

Block 0x890
[0x890:0x89a]
---
Predecessors: [0xc32]
Successors: [0x89b]
---
0x890 JUMPDEST
0x891 POP
0x892 GAS
0x893 CALL
0x894 ISZERO
0x895 DUP1
0x896 ISZERO
0x897 PUSH2 0x4e3
0x89a JUMPI
---
0x890: JUMPDEST 
0x892: V477 = GAS
0x893: V478 = CALL V477 S1 V730 S3 S4 S5 S6
0x894: V479 = ISZERO V478
0x896: V480 = ISZERO V479
0x897: V481 = 0x4e3
0x89a: THROWI V480
---
Entry stack: [S6, S5, S4, S3, V730, S1, V732]
Stack pops: 7
Stack additions: [V479]
Exit stack: [V479]

================================

Block 0x89b
[0x89b:0x8b5]
---
Predecessors: [0x890]
Successors: [0x8b6]
---
0x89b RETURNDATASIZE
0x89c PUSH1 0x0
0x89e DUP1
0x89f RETURNDATACOPY
0x8a0 RETURNDATASIZE
0x8a1 PUSH1 0x0
0x8a3 REVERT
0x8a4 JUMPDEST
0x8a5 POP
0x8a6 POP
0x8a7 POP
0x8a8 POP
0x8a9 PUSH1 0x40
0x8ab MLOAD
0x8ac RETURNDATASIZE
0x8ad PUSH1 0x20
0x8af DUP2
0x8b0 LT
0x8b1 ISZERO
0x8b2 PUSH2 0x4f9
0x8b5 JUMPI
---
0x89b: V482 = RETURNDATASIZE
0x89c: V483 = 0x0
0x89f: RETURNDATACOPY 0x0 0x0 V482
0x8a0: V484 = RETURNDATASIZE
0x8a1: V485 = 0x0
0x8a3: REVERT 0x0 V484
0x8a4: JUMPDEST 
0x8a9: V486 = 0x40
0x8ab: V487 = M[0x40]
0x8ac: V488 = RETURNDATASIZE
0x8ad: V489 = 0x20
0x8b0: V490 = LT V488 0x20
0x8b1: V491 = ISZERO V490
0x8b2: V492 = 0x4f9
0x8b5: THROWI V491
---
Entry stack: [V479]
Stack pops: 0
Stack additions: [V488, V487]
Exit stack: []

================================

Block 0x8b6
[0x8b6:0x8d1]
---
Predecessors: [0x89b]
Successors: [0x8d2]
---
0x8b6 PUSH1 0x0
0x8b8 DUP1
0x8b9 REVERT
0x8ba JUMPDEST
0x8bb DUP2
0x8bc ADD
0x8bd SWAP1
0x8be DUP1
0x8bf DUP1
0x8c0 MLOAD
0x8c1 SWAP1
0x8c2 PUSH1 0x20
0x8c4 ADD
0x8c5 SWAP1
0x8c6 SWAP3
0x8c7 SWAP2
0x8c8 SWAP1
0x8c9 POP
0x8ca POP
0x8cb POP
0x8cc ISZERO
0x8cd ISZERO
0x8ce PUSH2 0x512
0x8d1 JUMPI
---
0x8b6: V493 = 0x0
0x8b9: REVERT 0x0 0x0
0x8ba: JUMPDEST 
0x8bc: V494 = ADD S1 S0
0x8c0: V495 = M[S1]
0x8c2: V496 = 0x20
0x8c4: V497 = ADD 0x20 S1
0x8cc: V498 = ISZERO V495
0x8cd: V499 = ISZERO V498
0x8ce: V500 = 0x512
0x8d1: THROWI V499
---
Entry stack: [V487, V488]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8d2
[0x8d2:0x8d3]
---
Predecessors: [0x8b6]
Successors: [0x8d4]
---
0x8d2 INVALID
0x8d3 JUMPDEST
---
0x8d2: INVALID 
0x8d3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8d4
[0x8d4:0x94d]
---
Predecessors: [0x8d2]
Successors: [0x94e]
---
0x8d4 JUMPDEST
0x8d5 PUSH1 0x1
0x8d7 SWAP1
0x8d8 POP
0x8d9 PUSH1 0x0
0x8db DUP1
0x8dc PUSH1 0x14
0x8de PUSH2 0x100
0x8e1 EXP
0x8e2 DUP2
0x8e3 SLOAD
0x8e4 DUP2
0x8e5 PUSH1 0xff
0x8e7 MUL
0x8e8 NOT
0x8e9 AND
0x8ea SWAP1
0x8eb DUP4
0x8ec ISZERO
0x8ed ISZERO
0x8ee MUL
0x8ef OR
0x8f0 SWAP1
0x8f1 SSTORE
0x8f2 POP
0x8f3 SWAP2
0x8f4 SWAP1
0x8f5 POP
0x8f6 JUMP
0x8f7 JUMPDEST
0x8f8 PUSH1 0x0
0x8fa DUP1
0x8fb SWAP1
0x8fc SLOAD
0x8fd SWAP1
0x8fe PUSH2 0x100
0x901 EXP
0x902 SWAP1
0x903 DIV
0x904 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x919 AND
0x91a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92f AND
0x930 CALLER
0x931 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x946 AND
0x947 EQ
0x948 ISZERO
0x949 ISZERO
0x94a PUSH2 0x591
0x94d JUMPI
---
0x8d4: JUMPDEST 
0x8d5: V501 = 0x1
0x8d9: V502 = 0x0
0x8dc: V503 = 0x14
0x8de: V504 = 0x100
0x8e1: V505 = EXP 0x100 0x14
0x8e3: V506 = S[0x0]
0x8e5: V507 = 0xff
0x8e7: V508 = MUL 0xff 0x10000000000000000000000000000000000000000
0x8e8: V509 = NOT 0xff0000000000000000000000000000000000000000
0x8e9: V510 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V506
0x8ec: V511 = ISZERO 0x0
0x8ed: V512 = ISZERO 0x1
0x8ee: V513 = MUL 0x0 0x10000000000000000000000000000000000000000
0x8ef: V514 = OR 0x0 V510
0x8f1: S[0x0] = V514
0x8f6: JUMP S2
0x8f7: JUMPDEST 
0x8f8: V515 = 0x0
0x8fc: V516 = S[0x0]
0x8fe: V517 = 0x100
0x901: V518 = EXP 0x100 0x0
0x903: V519 = DIV V516 0x1
0x904: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x919: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x91a: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x92f: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x930: V524 = CALLER
0x931: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x946: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x947: V527 = EQ V526 V523
0x948: V528 = ISZERO V527
0x949: V529 = ISZERO V528
0x94a: V530 = 0x591
0x94d: THROWI V529
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x94e
[0x94e:0xa51]
---
Predecessors: [0x8d4]
Successors: [0xa52]
---
0x94e PUSH1 0x0
0x950 DUP1
0x951 REVERT
0x952 JUMPDEST
0x953 PUSH1 0x0
0x955 DUP1
0x956 SWAP1
0x957 SLOAD
0x958 SWAP1
0x959 PUSH2 0x100
0x95c EXP
0x95d SWAP1
0x95e DIV
0x95f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x974 AND
0x975 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98a AND
0x98b PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x9ac PUSH1 0x40
0x9ae MLOAD
0x9af PUSH1 0x40
0x9b1 MLOAD
0x9b2 DUP1
0x9b3 SWAP2
0x9b4 SUB
0x9b5 SWAP1
0x9b6 LOG2
0x9b7 PUSH1 0x0
0x9b9 DUP1
0x9ba PUSH1 0x0
0x9bc PUSH2 0x100
0x9bf EXP
0x9c0 DUP2
0x9c1 SLOAD
0x9c2 DUP2
0x9c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d8 MUL
0x9d9 NOT
0x9da AND
0x9db SWAP1
0x9dc DUP4
0x9dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f2 AND
0x9f3 MUL
0x9f4 OR
0x9f5 SWAP1
0x9f6 SSTORE
0x9f7 POP
0x9f8 JUMP
0x9f9 JUMPDEST
0x9fa PUSH1 0x0
0x9fc DUP1
0x9fd PUSH1 0x0
0x9ff SWAP1
0xa00 SLOAD
0xa01 SWAP1
0xa02 PUSH2 0x100
0xa05 EXP
0xa06 SWAP1
0xa07 DIV
0xa08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1d AND
0xa1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa33 AND
0xa34 CALLER
0xa35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4a AND
0xa4b EQ
0xa4c ISZERO
0xa4d ISZERO
0xa4e PUSH2 0x695
0xa51 JUMPI
---
0x94e: V531 = 0x0
0x951: REVERT 0x0 0x0
0x952: JUMPDEST 
0x953: V532 = 0x0
0x957: V533 = S[0x0]
0x959: V534 = 0x100
0x95c: V535 = EXP 0x100 0x0
0x95e: V536 = DIV V533 0x1
0x95f: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x974: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x975: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x98a: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x98b: V541 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x9ac: V542 = 0x40
0x9ae: V543 = M[0x40]
0x9af: V544 = 0x40
0x9b1: V545 = M[0x40]
0x9b4: V546 = SUB V543 V545
0x9b6: LOG V545 V546 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V540
0x9b7: V547 = 0x0
0x9ba: V548 = 0x0
0x9bc: V549 = 0x100
0x9bf: V550 = EXP 0x100 0x0
0x9c1: V551 = S[0x0]
0x9c3: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d8: V553 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9d9: V554 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9da: V555 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V551
0x9dd: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f2: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x9f3: V558 = MUL 0x0 0x1
0x9f4: V559 = OR 0x0 V555
0x9f6: S[0x0] = V559
0x9f8: JUMP S0
0x9f9: JUMPDEST 
0x9fa: V560 = 0x0
0x9fd: V561 = 0x0
0xa00: V562 = S[0x0]
0xa02: V563 = 0x100
0xa05: V564 = EXP 0x100 0x0
0xa07: V565 = DIV V562 0x1
0xa08: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1d: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0xa1e: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0xa33: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0xa34: V570 = CALLER
0xa35: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4a: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0xa4b: V573 = EQ V572 V569
0xa4c: V574 = ISZERO V573
0xa4d: V575 = ISZERO V574
0xa4e: V576 = 0x695
0xa51: THROWI V575
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0xa52
[0xa52:0xa6d]
---
Predecessors: [0x94e]
Successors: [0xa6e]
---
0xa52 PUSH1 0x0
0xa54 DUP1
0xa55 REVERT
0xa56 JUMPDEST
0xa57 PUSH1 0x0
0xa59 PUSH1 0x14
0xa5b SWAP1
0xa5c SLOAD
0xa5d SWAP1
0xa5e PUSH2 0x100
0xa61 EXP
0xa62 SWAP1
0xa63 DIV
0xa64 PUSH1 0xff
0xa66 AND
0xa67 ISZERO
0xa68 ISZERO
0xa69 ISZERO
0xa6a PUSH2 0x6b1
0xa6d JUMPI
---
0xa52: V577 = 0x0
0xa55: REVERT 0x0 0x0
0xa56: JUMPDEST 
0xa57: V578 = 0x0
0xa59: V579 = 0x14
0xa5c: V580 = S[0x0]
0xa5e: V581 = 0x100
0xa61: V582 = EXP 0x100 0x14
0xa63: V583 = DIV V580 0x10000000000000000000000000000000000000000
0xa64: V584 = 0xff
0xa66: V585 = AND 0xff V583
0xa67: V586 = ISZERO V585
0xa68: V587 = ISZERO V586
0xa69: V588 = ISZERO V587
0xa6a: V589 = 0x6b1
0xa6d: THROWI V588
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa6e
[0xa6e:0xaad]
---
Predecessors: [0xa52]
Successors: [0xaae]
---
0xa6e PUSH1 0x0
0xa70 DUP1
0xa71 REVERT
0xa72 JUMPDEST
0xa73 PUSH1 0x1
0xa75 PUSH1 0x0
0xa77 PUSH1 0x14
0xa79 PUSH2 0x100
0xa7c EXP
0xa7d DUP2
0xa7e SLOAD
0xa7f DUP2
0xa80 PUSH1 0xff
0xa82 MUL
0xa83 NOT
0xa84 AND
0xa85 SWAP1
0xa86 DUP4
0xa87 ISZERO
0xa88 ISZERO
0xa89 MUL
0xa8a OR
0xa8b SWAP1
0xa8c SSTORE
0xa8d POP
0xa8e PUSH1 0x0
0xa90 ADDRESS
0xa91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa6 AND
0xaa7 BALANCE
0xaa8 GT
0xaa9 ISZERO
0xaaa PUSH2 0x76c
0xaad JUMPI
---
0xa6e: V590 = 0x0
0xa71: REVERT 0x0 0x0
0xa72: JUMPDEST 
0xa73: V591 = 0x1
0xa75: V592 = 0x0
0xa77: V593 = 0x14
0xa79: V594 = 0x100
0xa7c: V595 = EXP 0x100 0x14
0xa7e: V596 = S[0x0]
0xa80: V597 = 0xff
0xa82: V598 = MUL 0xff 0x10000000000000000000000000000000000000000
0xa83: V599 = NOT 0xff0000000000000000000000000000000000000000
0xa84: V600 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V596
0xa87: V601 = ISZERO 0x1
0xa88: V602 = ISZERO 0x0
0xa89: V603 = MUL 0x1 0x10000000000000000000000000000000000000000
0xa8a: V604 = OR 0x10000000000000000000000000000000000000000 V600
0xa8c: S[0x0] = V604
0xa8e: V605 = 0x0
0xa90: V606 = ADDRESS
0xa91: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa6: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0xaa7: V609 = BALANCE V608
0xaa8: V610 = GT V609 0x0
0xaa9: V611 = ISZERO V610
0xaaa: V612 = 0x76c
0xaad: THROWI V611
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaae
[0xaae:0xb21]
---
Predecessors: [0xa6e]
Successors: [0xb22]
---
0xaae PUSH1 0x0
0xab0 DUP1
0xab1 SWAP1
0xab2 SLOAD
0xab3 SWAP1
0xab4 PUSH2 0x100
0xab7 EXP
0xab8 SWAP1
0xab9 DIV
0xaba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacf AND
0xad0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae5 AND
0xae6 PUSH2 0x8fc
0xae9 ADDRESS
0xaea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaff AND
0xb00 BALANCE
0xb01 SWAP1
0xb02 DUP2
0xb03 ISZERO
0xb04 MUL
0xb05 SWAP1
0xb06 PUSH1 0x40
0xb08 MLOAD
0xb09 PUSH1 0x0
0xb0b PUSH1 0x40
0xb0d MLOAD
0xb0e DUP1
0xb0f DUP4
0xb10 SUB
0xb11 DUP2
0xb12 DUP6
0xb13 DUP9
0xb14 DUP9
0xb15 CALL
0xb16 SWAP4
0xb17 POP
0xb18 POP
0xb19 POP
0xb1a POP
0xb1b ISZERO
0xb1c DUP1
0xb1d ISZERO
0xb1e PUSH2 0x76a
0xb21 JUMPI
---
0xaae: V613 = 0x0
0xab2: V614 = S[0x0]
0xab4: V615 = 0x100
0xab7: V616 = EXP 0x100 0x0
0xab9: V617 = DIV V614 0x1
0xaba: V618 = 0xffffffffffffffffffffffffffffffffffffffff
0xacf: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0xad0: V620 = 0xffffffffffffffffffffffffffffffffffffffff
0xae5: V621 = AND 0xffffffffffffffffffffffffffffffffffffffff V619
0xae6: V622 = 0x8fc
0xae9: V623 = ADDRESS
0xaea: V624 = 0xffffffffffffffffffffffffffffffffffffffff
0xaff: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0xb00: V626 = BALANCE V625
0xb03: V627 = ISZERO V626
0xb04: V628 = MUL V627 0x8fc
0xb06: V629 = 0x40
0xb08: V630 = M[0x40]
0xb09: V631 = 0x0
0xb0b: V632 = 0x40
0xb0d: V633 = M[0x40]
0xb10: V634 = SUB V630 V633
0xb15: V635 = CALL V628 V621 V626 V633 V634 V633 0x0
0xb1b: V636 = ISZERO V635
0xb1d: V637 = ISZERO V636
0xb1e: V638 = 0x76a
0xb21: THROWI V637
---
Entry stack: []
Stack pops: 0
Stack additions: [V636]
Exit stack: [V636]

================================

Block 0xb22
[0xb22:0xb2c]
---
Predecessors: [0xaae]
Successors: [0xb2d]
---
0xb22 RETURNDATASIZE
0xb23 PUSH1 0x0
0xb25 DUP1
0xb26 RETURNDATACOPY
0xb27 RETURNDATASIZE
0xb28 PUSH1 0x0
0xb2a REVERT
0xb2b JUMPDEST
0xb2c POP
---
0xb22: V639 = RETURNDATASIZE
0xb23: V640 = 0x0
0xb26: RETURNDATACOPY 0x0 0x0 V639
0xb27: V641 = RETURNDATASIZE
0xb28: V642 = 0x0
0xb2a: REVERT 0x0 V641
0xb2b: JUMPDEST 
---
Entry stack: [V636]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb2d
[0xb2d:0xb8e]
---
Predecessors: [0xb22]
Successors: [0xb8f]
---
0xb2d JUMPDEST
0xb2e PUSH1 0x1
0xb30 SWAP1
0xb31 POP
0xb32 PUSH1 0x0
0xb34 DUP1
0xb35 PUSH1 0x14
0xb37 PUSH2 0x100
0xb3a EXP
0xb3b DUP2
0xb3c SLOAD
0xb3d DUP2
0xb3e PUSH1 0xff
0xb40 MUL
0xb41 NOT
0xb42 AND
0xb43 SWAP1
0xb44 DUP4
0xb45 ISZERO
0xb46 ISZERO
0xb47 MUL
0xb48 OR
0xb49 SWAP1
0xb4a SSTORE
0xb4b POP
0xb4c SWAP1
0xb4d JUMP
0xb4e JUMPDEST
0xb4f PUSH1 0x0
0xb51 DUP1
0xb52 SWAP1
0xb53 SLOAD
0xb54 SWAP1
0xb55 PUSH2 0x100
0xb58 EXP
0xb59 SWAP1
0xb5a DIV
0xb5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb70 AND
0xb71 DUP2
0xb72 JUMP
0xb73 JUMPDEST
0xb74 PUSH1 0x0
0xb76 DUP1
0xb77 PUSH1 0x0
0xb79 DUP1
0xb7a PUSH1 0x14
0xb7c SWAP1
0xb7d SLOAD
0xb7e SWAP1
0xb7f PUSH2 0x100
0xb82 EXP
0xb83 SWAP1
0xb84 DIV
0xb85 PUSH1 0xff
0xb87 AND
0xb88 ISZERO
0xb89 ISZERO
0xb8a ISZERO
0xb8b PUSH2 0x7d2
0xb8e JUMPI
---
0xb2d: JUMPDEST 
0xb2e: V643 = 0x1
0xb32: V644 = 0x0
0xb35: V645 = 0x14
0xb37: V646 = 0x100
0xb3a: V647 = EXP 0x100 0x14
0xb3c: V648 = S[0x0]
0xb3e: V649 = 0xff
0xb40: V650 = MUL 0xff 0x10000000000000000000000000000000000000000
0xb41: V651 = NOT 0xff0000000000000000000000000000000000000000
0xb42: V652 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V648
0xb45: V653 = ISZERO 0x0
0xb46: V654 = ISZERO 0x1
0xb47: V655 = MUL 0x0 0x10000000000000000000000000000000000000000
0xb48: V656 = OR 0x0 V652
0xb4a: S[0x0] = V656
0xb4d: JUMP S1
0xb4e: JUMPDEST 
0xb4f: V657 = 0x0
0xb53: V658 = S[0x0]
0xb55: V659 = 0x100
0xb58: V660 = EXP 0x100 0x0
0xb5a: V661 = DIV V658 0x1
0xb5b: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xb70: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0xb72: JUMP S0
0xb73: JUMPDEST 
0xb74: V664 = 0x0
0xb77: V665 = 0x0
0xb7a: V666 = 0x14
0xb7d: V667 = S[0x0]
0xb7f: V668 = 0x100
0xb82: V669 = EXP 0x100 0x14
0xb84: V670 = DIV V667 0x10000000000000000000000000000000000000000
0xb85: V671 = 0xff
0xb87: V672 = AND 0xff V670
0xb88: V673 = ISZERO V672
0xb89: V674 = ISZERO V673
0xb8a: V675 = ISZERO V674
0xb8b: V676 = 0x7d2
0xb8e: THROWI V675
---
Entry stack: []
Stack pops: 4
Stack additions: [0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xb8f
[0xb8f:0xc04]
---
Predecessors: [0xb2d]
Successors: [0xc05]
---
0xb8f PUSH1 0x0
0xb91 DUP1
0xb92 REVERT
0xb93 JUMPDEST
0xb94 PUSH1 0x1
0xb96 PUSH1 0x0
0xb98 PUSH1 0x14
0xb9a PUSH2 0x100
0xb9d EXP
0xb9e DUP2
0xb9f SLOAD
0xba0 DUP2
0xba1 PUSH1 0xff
0xba3 MUL
0xba4 NOT
0xba5 AND
0xba6 SWAP1
0xba7 DUP4
0xba8 ISZERO
0xba9 ISZERO
0xbaa MUL
0xbab OR
0xbac SWAP1
0xbad SSTORE
0xbae POP
0xbaf PUSH1 0x0
0xbb1 DUP1
0xbb2 SWAP1
0xbb3 SLOAD
0xbb4 SWAP1
0xbb5 PUSH2 0x100
0xbb8 EXP
0xbb9 SWAP1
0xbba DIV
0xbbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd0 AND
0xbd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe6 AND
0xbe7 CALLER
0xbe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfd AND
0xbfe EQ
0xbff ISZERO
0xc00 ISZERO
0xc01 PUSH2 0x848
0xc04 JUMPI
---
0xb8f: V677 = 0x0
0xb92: REVERT 0x0 0x0
0xb93: JUMPDEST 
0xb94: V678 = 0x1
0xb96: V679 = 0x0
0xb98: V680 = 0x14
0xb9a: V681 = 0x100
0xb9d: V682 = EXP 0x100 0x14
0xb9f: V683 = S[0x0]
0xba1: V684 = 0xff
0xba3: V685 = MUL 0xff 0x10000000000000000000000000000000000000000
0xba4: V686 = NOT 0xff0000000000000000000000000000000000000000
0xba5: V687 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V683
0xba8: V688 = ISZERO 0x1
0xba9: V689 = ISZERO 0x0
0xbaa: V690 = MUL 0x1 0x10000000000000000000000000000000000000000
0xbab: V691 = OR 0x10000000000000000000000000000000000000000 V687
0xbad: S[0x0] = V691
0xbaf: V692 = 0x0
0xbb3: V693 = S[0x0]
0xbb5: V694 = 0x100
0xbb8: V695 = EXP 0x100 0x0
0xbba: V696 = DIV V693 0x1
0xbbb: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd0: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xbd1: V699 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe6: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0xbe7: V701 = CALLER
0xbe8: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfd: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0xbfe: V704 = EQ V703 V700
0xbff: V705 = ISZERO V704
0xc00: V706 = ISZERO V705
0xc01: V707 = 0x848
0xc04: THROWI V706
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc05
[0xc05:0xc0d]
---
Predecessors: [0xb8f]
Successors: [0xc0e]
---
0xc05 PUSH1 0x0
0xc07 DUP1
0xc08 REVERT
0xc09 JUMPDEST
0xc0a PUSH1 0x0
0xc0c SWAP2
0xc0d POP
---
0xc05: V708 = 0x0
0xc08: REVERT 0x0 0x0
0xc09: JUMPDEST 
0xc0a: V709 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0xc0e
[0xc0e:0xc1a]
---
Predecessors: [0xc05]
Successors: [0xc1b]
---
0xc0e JUMPDEST
0xc0f DUP5
0xc10 MLOAD
0xc11 DUP3
0xc12 PUSH1 0xff
0xc14 AND
0xc15 LT
0xc16 ISZERO
0xc17 PUSH2 0x8ed
0xc1a JUMPI
---
0xc0e: JUMPDEST 
0xc10: V710 = M[S4]
0xc12: V711 = 0xff
0xc14: V712 = AND 0xff 0x0
0xc15: V713 = LT 0x0 V710
0xc16: V714 = ISZERO V713
0xc17: V715 = 0x8ed
0xc1a: THROWI V714
---
Entry stack: [0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S2, S1, S0, 0x0, S0]

================================

Block 0xc1b
[0xc1b:0xc31]
---
Predecessors: [0xc0e]
Successors: [0xc32]
---
0xc1b PUSH7 0x38d7ea4c68000
0xc23 DUP5
0xc24 DUP4
0xc25 PUSH1 0xff
0xc27 AND
0xc28 DUP2
0xc29 MLOAD
0xc2a DUP2
0xc2b LT
0xc2c ISZERO
0xc2d ISZERO
0xc2e PUSH2 0x872
0xc31 JUMPI
---
0xc1b: V716 = 0x38d7ea4c68000
0xc25: V717 = 0xff
0xc27: V718 = AND 0xff 0x0
0xc29: V719 = M[S3]
0xc2b: V720 = LT 0x0 V719
0xc2c: V721 = ISZERO V720
0xc2d: V722 = ISZERO V721
0xc2e: V723 = 0x872
0xc31: THROWI V722
---
Entry stack: [S4, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x38d7ea4c68000, S3, 0x0]
Exit stack: [S4, S3, S2, 0x0, S0, 0x38d7ea4c68000, S3, 0x0]

================================

Block 0xc32
[0xc32:0xc4f]
---
Predecessors: [0xc1b]
Successors: [0x890, 0xc50]
---
0xc32 INVALID
0xc33 JUMPDEST
0xc34 SWAP1
0xc35 PUSH1 0x20
0xc37 ADD
0xc38 SWAP1
0xc39 PUSH1 0x20
0xc3b MUL
0xc3c ADD
0xc3d MLOAD
0xc3e MUL
0xc3f SWAP1
0xc40 POP
0xc41 DUP5
0xc42 DUP3
0xc43 PUSH1 0xff
0xc45 AND
0xc46 DUP2
0xc47 MLOAD
0xc48 DUP2
0xc49 LT
0xc4a ISZERO
0xc4b ISZERO
0xc4c PUSH2 0x890
0xc4f JUMPI
---
0xc32: INVALID 
0xc33: JUMPDEST 
0xc35: V724 = 0x20
0xc37: V725 = ADD 0x20 S1
0xc39: V726 = 0x20
0xc3b: V727 = MUL 0x20 S0
0xc3c: V728 = ADD V727 V725
0xc3d: V729 = M[V728]
0xc3e: V730 = MUL V729 S2
0xc43: V731 = 0xff
0xc45: V732 = AND 0xff S4
0xc47: V733 = M[S7]
0xc49: V734 = LT V732 V733
0xc4a: V735 = ISZERO V734
0xc4b: V736 = ISZERO V735
0xc4c: V737 = 0x890
0xc4f: JUMPI 0x890 V736
---
Entry stack: [S7, S6, S5, 0x0, S3, 0x38d7ea4c68000, S1, 0x0]
Stack pops: 0
Stack additions: [V732, S7, V730, S4, S5, S6, S7]
Exit stack: []

================================

Block 0xc50
[0xc50:0xc96]
---
Predecessors: [0xc32]
Successors: [0xc97]
---
0xc50 INVALID
0xc51 JUMPDEST
0xc52 SWAP1
0xc53 PUSH1 0x20
0xc55 ADD
0xc56 SWAP1
0xc57 PUSH1 0x20
0xc59 MUL
0xc5a ADD
0xc5b MLOAD
0xc5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc71 AND
0xc72 PUSH2 0x8fc
0xc75 DUP3
0xc76 SWAP1
0xc77 DUP2
0xc78 ISZERO
0xc79 MUL
0xc7a SWAP1
0xc7b PUSH1 0x40
0xc7d MLOAD
0xc7e PUSH1 0x0
0xc80 PUSH1 0x40
0xc82 MLOAD
0xc83 DUP1
0xc84 DUP4
0xc85 SUB
0xc86 DUP2
0xc87 DUP6
0xc88 DUP9
0xc89 DUP9
0xc8a CALL
0xc8b SWAP4
0xc8c POP
0xc8d POP
0xc8e POP
0xc8f POP
0xc90 ISZERO
0xc91 DUP1
0xc92 ISZERO
0xc93 PUSH2 0x8df
0xc96 JUMPI
---
0xc50: INVALID 
0xc51: JUMPDEST 
0xc53: V738 = 0x20
0xc55: V739 = ADD 0x20 S1
0xc57: V740 = 0x20
0xc59: V741 = MUL 0x20 S0
0xc5a: V742 = ADD V741 V739
0xc5b: V743 = M[V742]
0xc5c: V744 = 0xffffffffffffffffffffffffffffffffffffffff
0xc71: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0xc72: V746 = 0x8fc
0xc78: V747 = ISZERO S2
0xc79: V748 = MUL V747 0x8fc
0xc7b: V749 = 0x40
0xc7d: V750 = M[0x40]
0xc7e: V751 = 0x0
0xc80: V752 = 0x40
0xc82: V753 = M[0x40]
0xc85: V754 = SUB V750 V753
0xc8a: V755 = CALL V748 V745 S2 V753 V754 V753 0x0
0xc90: V756 = ISZERO V755
0xc92: V757 = ISZERO V756
0xc93: V758 = 0x8df
0xc96: THROWI V757
---
Entry stack: [S6, S5, S4, S3, V730, S1, V732]
Stack pops: 0
Stack additions: [V756, S2]
Exit stack: []

================================

Block 0xc97
[0xc97:0xd2a]
---
Predecessors: [0xc50]
Successors: [0xd2b]
---
0xc97 RETURNDATASIZE
0xc98 PUSH1 0x0
0xc9a DUP1
0xc9b RETURNDATACOPY
0xc9c RETURNDATASIZE
0xc9d PUSH1 0x0
0xc9f REVERT
0xca0 JUMPDEST
0xca1 POP
0xca2 DUP2
0xca3 DUP1
0xca4 PUSH1 0x1
0xca6 ADD
0xca7 SWAP3
0xca8 POP
0xca9 POP
0xcaa PUSH2 0x84d
0xcad JUMP
0xcae JUMPDEST
0xcaf PUSH1 0x1
0xcb1 SWAP3
0xcb2 POP
0xcb3 PUSH1 0x0
0xcb5 DUP1
0xcb6 PUSH1 0x14
0xcb8 PUSH2 0x100
0xcbb EXP
0xcbc DUP2
0xcbd SLOAD
0xcbe DUP2
0xcbf PUSH1 0xff
0xcc1 MUL
0xcc2 NOT
0xcc3 AND
0xcc4 SWAP1
0xcc5 DUP4
0xcc6 ISZERO
0xcc7 ISZERO
0xcc8 MUL
0xcc9 OR
0xcca SWAP1
0xccb SSTORE
0xccc POP
0xccd POP
0xcce POP
0xccf SWAP3
0xcd0 SWAP2
0xcd1 POP
0xcd2 POP
0xcd3 JUMP
0xcd4 JUMPDEST
0xcd5 PUSH1 0x0
0xcd7 DUP1
0xcd8 SWAP1
0xcd9 SLOAD
0xcda SWAP1
0xcdb PUSH2 0x100
0xcde EXP
0xcdf SWAP1
0xce0 DIV
0xce1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf6 AND
0xcf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0c AND
0xd0d CALLER
0xd0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd23 AND
0xd24 EQ
0xd25 ISZERO
0xd26 ISZERO
0xd27 PUSH2 0x96e
0xd2a JUMPI
---
0xc97: V759 = RETURNDATASIZE
0xc98: V760 = 0x0
0xc9b: RETURNDATACOPY 0x0 0x0 V759
0xc9c: V761 = RETURNDATASIZE
0xc9d: V762 = 0x0
0xc9f: REVERT 0x0 V761
0xca0: JUMPDEST 
0xca4: V763 = 0x1
0xca6: V764 = ADD 0x1 S2
0xcaa: V765 = 0x84d
0xcad: THROW 
0xcae: JUMPDEST 
0xcaf: V766 = 0x1
0xcb3: V767 = 0x0
0xcb6: V768 = 0x14
0xcb8: V769 = 0x100
0xcbb: V770 = EXP 0x100 0x14
0xcbd: V771 = S[0x0]
0xcbf: V772 = 0xff
0xcc1: V773 = MUL 0xff 0x10000000000000000000000000000000000000000
0xcc2: V774 = NOT 0xff0000000000000000000000000000000000000000
0xcc3: V775 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V771
0xcc6: V776 = ISZERO 0x0
0xcc7: V777 = ISZERO 0x1
0xcc8: V778 = MUL 0x0 0x10000000000000000000000000000000000000000
0xcc9: V779 = OR 0x0 V775
0xccb: S[0x0] = V779
0xcd3: JUMP S5
0xcd4: JUMPDEST 
0xcd5: V780 = 0x0
0xcd9: V781 = S[0x0]
0xcdb: V782 = 0x100
0xcde: V783 = EXP 0x100 0x0
0xce0: V784 = DIV V781 0x1
0xce1: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf6: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xcf7: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0c: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0xd0d: V789 = CALLER
0xd0e: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xd23: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V789
0xd24: V792 = EQ V791 V788
0xd25: V793 = ISZERO V792
0xd26: V794 = ISZERO V793
0xd27: V795 = 0x96e
0xd2a: THROWI V794
---
Entry stack: [S1, V756]
Stack pops: 0
Stack additions: [S1, V764, 0x1]
Exit stack: []

================================

Block 0xd2b
[0xd2b:0xd72]
---
Predecessors: [0xc97]
Successors: [0xd73]
---
0xd2b PUSH1 0x0
0xd2d DUP1
0xd2e REVERT
0xd2f JUMPDEST
0xd30 PUSH2 0x977
0xd33 DUP2
0xd34 PUSH2 0x97a
0xd37 JUMP
0xd38 JUMPDEST
0xd39 POP
0xd3a JUMP
0xd3b JUMPDEST
0xd3c PUSH1 0x0
0xd3e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd53 AND
0xd54 DUP2
0xd55 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6a AND
0xd6b EQ
0xd6c ISZERO
0xd6d ISZERO
0xd6e ISZERO
0xd6f PUSH2 0x9b6
0xd72 JUMPI
---
0xd2b: V796 = 0x0
0xd2e: REVERT 0x0 0x0
0xd2f: JUMPDEST 
0xd30: V797 = 0x977
0xd34: V798 = 0x97a
0xd37: THROW 
0xd38: JUMPDEST 
0xd3a: JUMP S1
0xd3b: JUMPDEST 
0xd3c: V799 = 0x0
0xd3e: V800 = 0xffffffffffffffffffffffffffffffffffffffff
0xd53: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xd55: V802 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6a: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd6b: V804 = EQ V803 0x0
0xd6c: V805 = ISZERO V804
0xd6d: V806 = ISZERO V805
0xd6e: V807 = ISZERO V806
0xd6f: V808 = 0x9b6
0xd72: THROWI V807
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, 0x977, S0, S0]
Exit stack: []

================================

Block 0xd73
[0xd73:0xeeb]
---
Predecessors: [0xd2b]
Successors: []
---
0xd73 PUSH1 0x0
0xd75 DUP1
0xd76 REVERT
0xd77 JUMPDEST
0xd78 DUP1
0xd79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8e AND
0xd8f PUSH1 0x0
0xd91 DUP1
0xd92 SWAP1
0xd93 SLOAD
0xd94 SWAP1
0xd95 PUSH2 0x100
0xd98 EXP
0xd99 SWAP1
0xd9a DIV
0xd9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb0 AND
0xdb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc6 AND
0xdc7 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xde8 PUSH1 0x40
0xdea MLOAD
0xdeb PUSH1 0x40
0xded MLOAD
0xdee DUP1
0xdef SWAP2
0xdf0 SUB
0xdf1 SWAP1
0xdf2 LOG3
0xdf3 DUP1
0xdf4 PUSH1 0x0
0xdf6 DUP1
0xdf7 PUSH2 0x100
0xdfa EXP
0xdfb DUP2
0xdfc SLOAD
0xdfd DUP2
0xdfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe13 MUL
0xe14 NOT
0xe15 AND
0xe16 SWAP1
0xe17 DUP4
0xe18 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2d AND
0xe2e MUL
0xe2f OR
0xe30 SWAP1
0xe31 SSTORE
0xe32 POP
0xe33 POP
0xe34 JUMP
0xe35 STOP
0xe36 LOG1
0xe37 PUSH6 0x627a7a723058
0xe3e SHA3
0xe3f MISSING 0xd
0xe40 MISSING 0xab
0xe41 PUSH9 0x6e4cc19b45cc376461
0xe4b MISSING 0x2e
0xe4c MISSING 0xaa
0xe4d SWAP16
0xe4e ORIGIN
0xe4f DUP6
0xe50 SWAP5
0xe51 PUSH9 0xcbbf29dfc6a4faccd1
0xe5b PUSH22 0x2f6d6d00296080604052600080fd00a165627a7a7230
0xe72 PC
0xe73 SHA3
0xe74 DUP1
0xe75 BLOCKHASH
0xe76 ADD
0xe77 MISSING 0xaf
0xe78 OR
0xe79 SWAP5
0xe7a BALANCE
0xe7b DUP10
0xe7c MULMOD
0xe7d MISSING 0x25
0xe7e MISSING 0xd4
0xe7f MISSING 0xad
0xe80 DUP10
0xe81 CALLCODE
0xe82 MISSING 0xc0
0xe83 CODECOPY
0xe84 CODESIZE
0xe85 TIMESTAMP
0xe86 SLT
0xe87 MISSING 0xab
0xe88 ORIGIN
0xe89 PUSH15 0x32fc62e9c4274772e6800029730000
0xe99 STOP
0xe9a STOP
0xe9b STOP
0xe9c STOP
0xe9d STOP
0xe9e STOP
0xe9f STOP
0xea0 STOP
0xea1 STOP
0xea2 STOP
0xea3 STOP
0xea4 STOP
0xea5 STOP
0xea6 STOP
0xea7 STOP
0xea8 STOP
0xea9 STOP
0xeaa STOP
0xeab ADDRESS
0xeac EQ
0xead PUSH1 0x80
0xeaf PUSH1 0x40
0xeb1 MSTORE
0xeb2 PUSH1 0x0
0xeb4 DUP1
0xeb5 REVERT
0xeb6 STOP
0xeb7 LOG1
0xeb8 PUSH6 0x627a7a723058
0xebf SHA3
0xec0 MISSING 0xc2
0xec1 SSTORE
0xec2 MISSING 0xc1
0xec3 MISSING 0x4b
0xec4 SWAP8
0xec5 MISSING 0x2f
0xec6 MISSING 0xec
0xec7 MISSING 0x1f
0xec8 SWAP11
0xec9 CALL
0xeca EXP
0xecb MISSING 0x5d
0xecc MUL
0xecd MISSING 0xba
0xece GASLIMIT
0xecf MISSING 0xc6
0xed0 MISSING 0xde
0xed1 MISSING 0xbb
0xed2 MISSING 0xc8
0xed3 PUSH2 0x4b8c
0xed6 DUP2
0xed7 CALLER
0xed8 MISSING 0xf6
0xed9 PUSH18 0xe9a9165583790029
---
0xd73: V809 = 0x0
0xd76: REVERT 0x0 0x0
0xd77: JUMPDEST 
0xd79: V810 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8e: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd8f: V812 = 0x0
0xd93: V813 = S[0x0]
0xd95: V814 = 0x100
0xd98: V815 = EXP 0x100 0x0
0xd9a: V816 = DIV V813 0x1
0xd9b: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb0: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xdb1: V819 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc6: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0xdc7: V821 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xde8: V822 = 0x40
0xdea: V823 = M[0x40]
0xdeb: V824 = 0x40
0xded: V825 = M[0x40]
0xdf0: V826 = SUB V823 V825
0xdf2: LOG V825 V826 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V820 V811
0xdf4: V827 = 0x0
0xdf7: V828 = 0x100
0xdfa: V829 = EXP 0x100 0x0
0xdfc: V830 = S[0x0]
0xdfe: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xe13: V832 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xe14: V833 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe15: V834 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V830
0xe18: V835 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2d: V836 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe2e: V837 = MUL V836 0x1
0xe2f: V838 = OR V837 V834
0xe31: S[0x0] = V838
0xe34: JUMP S1
0xe35: STOP 
0xe36: LOG S0 S1 S2
0xe37: V839 = 0x627a7a723058
0xe3e: V840 = SHA3 0x627a7a723058 S3
0xe3f: MISSING 0xd
0xe40: MISSING 0xab
0xe41: V841 = 0x6e4cc19b45cc376461
0xe4b: MISSING 0x2e
0xe4c: MISSING 0xaa
0xe4e: V842 = ORIGIN
0xe51: V843 = 0xcbbf29dfc6a4faccd1
0xe5b: V844 = 0x2f6d6d00296080604052600080fd00a165627a7a7230
0xe72: V845 = PC
0xe73: V846 = SHA3 V845 0x2f6d6d00296080604052600080fd00a165627a7a7230
0xe75: V847 = BLOCKHASH V846
0xe76: V848 = ADD V847 V846
0xe77: MISSING 0xaf
0xe78: V849 = OR S0 S1
0xe7a: V850 = BALANCE S6
0xe7c: V851 = MULMOD S10 V850 S2
0xe7d: MISSING 0x25
0xe7e: MISSING 0xd4
0xe7f: MISSING 0xad
0xe81: V852 = CALLCODE S9 S0 S1 S2 S3 S4 S5
0xe82: MISSING 0xc0
0xe83: CODECOPY S0 S1 S2
0xe84: V853 = CODESIZE
0xe85: V854 = TIMESTAMP
0xe86: V855 = SLT V854 V853
0xe87: MISSING 0xab
0xe88: V856 = ORIGIN
0xe89: V857 = 0x32fc62e9c4274772e6800029730000
0xe99: STOP 
0xe9a: STOP 
0xe9b: STOP 
0xe9c: STOP 
0xe9d: STOP 
0xe9e: STOP 
0xe9f: STOP 
0xea0: STOP 
0xea1: STOP 
0xea2: STOP 
0xea3: STOP 
0xea4: STOP 
0xea5: STOP 
0xea6: STOP 
0xea7: STOP 
0xea8: STOP 
0xea9: STOP 
0xeaa: STOP 
0xeab: V858 = ADDRESS
0xeac: V859 = EQ V858 S0
0xead: V860 = 0x80
0xeaf: V861 = 0x40
0xeb1: M[0x40] = 0x80
0xeb2: V862 = 0x0
0xeb5: REVERT 0x0 0x0
0xeb6: STOP 
0xeb7: LOG S0 S1 S2
0xeb8: V863 = 0x627a7a723058
0xebf: V864 = SHA3 0x627a7a723058 S3
0xec0: MISSING 0xc2
0xec1: S[S0] = S1
0xec2: MISSING 0xc1
0xec3: MISSING 0x4b
0xec5: MISSING 0x2f
0xec6: MISSING 0xec
0xec7: MISSING 0x1f
0xec9: V865 = CALL S11 S1 S2 S3 S4 S5 S6
0xeca: V866 = EXP V865 S7
0xecb: MISSING 0x5d
0xecc: V867 = MUL S0 S1
0xecd: MISSING 0xba
0xece: V868 = GASLIMIT
0xecf: MISSING 0xc6
0xed0: MISSING 0xde
0xed1: MISSING 0xbb
0xed2: MISSING 0xc8
0xed3: V869 = 0x4b8c
0xed7: V870 = CALLER
0xed8: MISSING 0xf6
0xed9: V871 = 0xe9a9165583790029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V840, 0x6e4cc19b45cc376461, V848, 0xcbbf29dfc6a4faccd1, S3, V842, S16, S1, S2, S4, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V851, S3, S4, S5, V849, S7, S8, S9, S10, V852, S6, S7, S8, S9, V855, 0x32fc62e9c4274772e6800029730000, V856, V859, V864, S8, S1, S2, S3, S4, S5, S6, S7, S0, V866, S8, S9, S10, S0, V867, V868, V870, S0, 0x4b8c, S0, 0xe9a9165583790029]
Exit stack: []

================================

Function 0:
Public function signature: 0x715018a6
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x10d, 0x164, 0x168

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x73
Exit block: 0x88
Body: 0x73, 0x7b, 0x7f, 0x88, 0x20f

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0xca
Exit block: 0x10b
Body: 0xca, 0xd2, 0xd6, 0x10b, 0x234, 0x28b, 0x28f, 0x298, 0x29b, 0x2d3, 0x2d7

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

