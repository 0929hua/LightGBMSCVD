Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb8
0xa: JUMPI 0xb8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xbd]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xbd
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xbd
0x3e: JUMPI 0xbd V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x14c]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x14c
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x14c
0x49: JUMPI 0x14c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1a6]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x1a6
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x1a6
0x54: JUMPI 0x1a6 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1cf]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1cf
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1cf
0x5f: JUMPI 0x1cf V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x248]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x248
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x248
0x6a: JUMPI 0x248 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x277]
---
0x6b DUP1
0x6c PUSH4 0x42966c68
0x71 EQ
0x72 PUSH2 0x277
0x75 JUMPI
---
0x6c: V26 = 0x42966c68
0x71: V27 = EQ 0x42966c68 V10
0x72: V28 = 0x277
0x75: JUMPI 0x277 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2b2]
---
0x76 DUP1
0x77 PUSH4 0x70a08231
0x7c EQ
0x7d PUSH2 0x2b2
0x80 JUMPI
---
0x77: V29 = 0x70a08231
0x7c: V30 = EQ 0x70a08231 V10
0x7d: V31 = 0x2b2
0x80: JUMPI 0x2b2 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x2ff]
---
0x81 DUP1
0x82 PUSH4 0x79cc6790
0x87 EQ
0x88 PUSH2 0x2ff
0x8b JUMPI
---
0x82: V32 = 0x79cc6790
0x87: V33 = EQ 0x79cc6790 V10
0x88: V34 = 0x2ff
0x8b: JUMPI 0x2ff V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x359]
---
0x8c DUP1
0x8d PUSH4 0x95d89b41
0x92 EQ
0x93 PUSH2 0x359
0x96 JUMPI
---
0x8d: V35 = 0x95d89b41
0x92: V36 = EQ 0x95d89b41 V10
0x93: V37 = 0x359
0x96: JUMPI 0x359 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x3e8]
---
0x97 DUP1
0x98 PUSH4 0xa9059cbb
0x9d EQ
0x9e PUSH2 0x3e8
0xa1 JUMPI
---
0x98: V38 = 0xa9059cbb
0x9d: V39 = EQ 0xa9059cbb V10
0x9e: V40 = 0x3e8
0xa1: JUMPI 0x3e8 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x42a]
---
0xa2 DUP1
0xa3 PUSH4 0xad8733ca
0xa8 EQ
0xa9 PUSH2 0x42a
0xac JUMPI
---
0xa3: V41 = 0xad8733ca
0xa8: V42 = EQ 0xad8733ca V10
0xa9: V43 = 0x42a
0xac: JUMPI 0x42a V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x4f7]
---
0xad DUP1
0xae PUSH4 0xdd62ed3e
0xb3 EQ
0xb4 PUSH2 0x4f7
0xb7 JUMPI
---
0xae: V44 = 0xdd62ed3e
0xb3: V45 = EQ 0xdd62ed3e V10
0xb4: V46 = 0x4f7
0xb7: JUMPI 0x4f7 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xbc]
---
Predecessors: [0x0, 0xad]
Successors: []
---
0xb8 JUMPDEST
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb8: JUMPDEST 
0xb9: V47 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0xb]
Successors: [0xc4, 0xc8]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V48 = CALLVALUE
0xbf: V49 = ISZERO V48
0xc0: V50 = 0xc8
0xc3: JUMPI 0xc8 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V51 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0xbd]
Successors: [0x563]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xd0
0xcc PUSH2 0x563
0xcf JUMP
---
0xc8: JUMPDEST 
0xc9: V52 = 0xd0
0xcc: V53 = 0x563
0xcf: JUMP 0x563
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V10, 0xd0]

================================

Block 0xd0
[0xd0:0xf4]
---
Predecessors: [0x5f9]
Successors: [0xf5]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 DUP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 DUP3
0xda DUP2
0xdb SUB
0xdc DUP3
0xdd MSTORE
0xde DUP4
0xdf DUP2
0xe0 DUP2
0xe1 MLOAD
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP2
0xe8 POP
0xe9 DUP1
0xea MLOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 DUP1
0xf1 DUP4
0xf2 DUP4
0xf3 PUSH1 0x0
---
0xd0: JUMPDEST 
0xd1: V54 = 0x40
0xd3: V55 = M[0x40]
0xd6: V56 = 0x20
0xd8: V57 = ADD 0x20 V55
0xdb: V58 = SUB V57 V55
0xdd: M[V55] = V58
0xe1: V59 = M[V413]
0xe3: M[V57] = V59
0xe4: V60 = 0x20
0xe6: V61 = ADD 0x20 V57
0xea: V62 = M[V413]
0xec: V63 = 0x20
0xee: V64 = ADD 0x20 V413
0xf3: V65 = 0x0
---
Entry stack: [V10, 0xd0, V413]
Stack pops: 1
Stack additions: [S0, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]
Exit stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]

================================

Block 0xf5
[0xf5:0xfd]
---
Predecessors: [0xd0, 0x106]
Successors: [0xfe, 0x111]
---
0xf5 JUMPDEST
0xf6 DUP4
0xf7 DUP2
0xf8 LT
0xf9 ISZERO
0xfa PUSH2 0x111
0xfd JUMPI
---
0xf5: JUMPDEST 
0xf8: V66 = LT S0 V62
0xf9: V67 = ISZERO V66
0xfa: V68 = 0x111
0xfd: JUMPI 0x111 V67
---
Entry stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, S0]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xf5]
Successors: [0x106]
---
0xfe DUP1
0xff DUP3
0x100 ADD
0x101 MLOAD
0x102 DUP2
0x103 DUP5
0x104 ADD
0x105 MSTORE
---
0x100: V69 = ADD V64 S0
0x101: V70 = M[V69]
0x104: V71 = ADD V61 S0
0x105: M[V71] = V70
---
Entry stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, S0]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfe]
Successors: [0xf5]
---
0x106 JUMPDEST
0x107 PUSH1 0x20
0x109 DUP2
0x10a ADD
0x10b SWAP1
0x10c POP
0x10d PUSH2 0xf5
0x110 JUMP
---
0x106: JUMPDEST 
0x107: V72 = 0x20
0x10a: V73 = ADD S0 0x20
0x10d: V74 = 0xf5
0x110: JUMP 0xf5
---
Entry stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 1
Stack additions: [V73]
Exit stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, V73]

================================

Block 0x111
[0x111:0x124]
---
Predecessors: [0xf5]
Successors: [0x125, 0x13e]
---
0x111 JUMPDEST
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 SWAP1
0x117 POP
0x118 SWAP1
0x119 DUP2
0x11a ADD
0x11b SWAP1
0x11c PUSH1 0x1f
0x11e AND
0x11f DUP1
0x120 ISZERO
0x121 PUSH2 0x13e
0x124 JUMPI
---
0x111: JUMPDEST 
0x11a: V75 = ADD V62 V61
0x11c: V76 = 0x1f
0x11e: V77 = AND 0x1f V62
0x120: V78 = ISZERO V77
0x121: V79 = 0x13e
0x124: JUMPI 0x13e V78
---
Entry stack: [V10, 0xd0, V413, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 7
Stack additions: [V75, V77]
Exit stack: [V10, 0xd0, V413, V55, V55, V75, V77]

================================

Block 0x125
[0x125:0x13d]
---
Predecessors: [0x111]
Successors: [0x13e]
---
0x125 DUP1
0x126 DUP3
0x127 SUB
0x128 DUP1
0x129 MLOAD
0x12a PUSH1 0x1
0x12c DUP4
0x12d PUSH1 0x20
0x12f SUB
0x130 PUSH2 0x100
0x133 EXP
0x134 SUB
0x135 NOT
0x136 AND
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP2
0x13d POP
---
0x127: V80 = SUB V75 V77
0x129: V81 = M[V80]
0x12a: V82 = 0x1
0x12d: V83 = 0x20
0x12f: V84 = SUB 0x20 V77
0x130: V85 = 0x100
0x133: V86 = EXP 0x100 V84
0x134: V87 = SUB V86 0x1
0x135: V88 = NOT V87
0x136: V89 = AND V88 V81
0x138: M[V80] = V89
0x139: V90 = 0x20
0x13b: V91 = ADD 0x20 V80
---
Entry stack: [V10, 0xd0, V413, V55, V55, V75, V77]
Stack pops: 2
Stack additions: [V91, S0]
Exit stack: [V10, 0xd0, V413, V55, V55, V91, V77]

================================

Block 0x13e
[0x13e:0x14b]
---
Predecessors: [0x111, 0x125]
Successors: []
---
0x13e JUMPDEST
0x13f POP
0x140 SWAP3
0x141 POP
0x142 POP
0x143 POP
0x144 PUSH1 0x40
0x146 MLOAD
0x147 DUP1
0x148 SWAP2
0x149 SUB
0x14a SWAP1
0x14b RETURN
---
0x13e: JUMPDEST 
0x144: V92 = 0x40
0x146: V93 = M[0x40]
0x149: V94 = SUB S1 V93
0x14b: RETURN V93 V94
---
Entry stack: [V10, 0xd0, V413, V55, V55, S1, V77]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xd0]

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x3f]
Successors: [0x153, 0x157]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V95 = CALLVALUE
0x14e: V96 = ISZERO V95
0x14f: V97 = 0x157
0x152: JUMPI 0x157 V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14c]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V98 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x157
[0x157:0x18b]
---
Predecessors: [0x14c]
Successors: [0x601]
---
0x157 JUMPDEST
0x158 PUSH2 0x18c
0x15b PUSH1 0x4
0x15d DUP1
0x15e DUP1
0x15f CALLDATALOAD
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 SWAP1
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP1
0x17b SWAP2
0x17c SWAP1
0x17d DUP1
0x17e CALLDATALOAD
0x17f SWAP1
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP1
0x184 SWAP2
0x185 SWAP1
0x186 POP
0x187 POP
0x188 PUSH2 0x601
0x18b JUMP
---
0x157: JUMPDEST 
0x158: V99 = 0x18c
0x15b: V100 = 0x4
0x15f: V101 = CALLDATALOAD 0x4
0x160: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x177: V104 = 0x20
0x179: V105 = ADD 0x20 0x4
0x17e: V106 = CALLDATALOAD 0x24
0x180: V107 = 0x20
0x182: V108 = ADD 0x20 0x24
0x188: V109 = 0x601
0x18b: JUMP 0x601
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18c, V103, V106]
Exit stack: [V10, 0x18c, V103, V106]

================================

Block 0x18c
[0x18c:0x1a5]
---
Predecessors: [0x689]
Successors: []
---
0x18c JUMPDEST
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 DUP3
0x192 ISZERO
0x193 ISZERO
0x194 ISZERO
0x195 ISZERO
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP2
0x19c POP
0x19d POP
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 SWAP2
0x1a3 SUB
0x1a4 SWAP1
0x1a5 RETURN
---
0x18c: JUMPDEST 
0x18d: V110 = 0x40
0x18f: V111 = M[0x40]
0x192: V112 = ISZERO 0x1
0x193: V113 = ISZERO 0x0
0x194: V114 = ISZERO 0x1
0x195: V115 = ISZERO 0x0
0x197: M[V111] = 0x1
0x198: V116 = 0x20
0x19a: V117 = ADD 0x20 V111
0x19e: V118 = 0x40
0x1a0: V119 = M[0x40]
0x1a3: V120 = SUB V117 V119
0x1a5: RETURN V119 V120
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a6
[0x1a6:0x1ac]
---
Predecessors: [0x4a]
Successors: [0x1ad, 0x1b1]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V121 = CALLVALUE
0x1a8: V122 = ISZERO V121
0x1a9: V123 = 0x1b1
0x1ac: JUMPI 0x1b1 V122
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V124 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1a6]
Successors: [0x68f]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x1b9
0x1b5 PUSH2 0x68f
0x1b8 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V125 = 0x1b9
0x1b5: V126 = 0x68f
0x1b8: JUMP 0x68f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9]
Exit stack: [V10, 0x1b9]

================================

Block 0x1b9
[0x1b9:0x1ce]
---
Predecessors: [0x68f]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be DUP3
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP2
0x1c5 POP
0x1c6 POP
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca DUP1
0x1cb SWAP2
0x1cc SUB
0x1cd SWAP1
0x1ce RETURN
---
0x1b9: JUMPDEST 
0x1ba: V127 = 0x40
0x1bc: V128 = M[0x40]
0x1c0: M[V128] = V484
0x1c1: V129 = 0x20
0x1c3: V130 = ADD 0x20 V128
0x1c7: V131 = 0x40
0x1c9: V132 = M[0x40]
0x1cc: V133 = SUB V130 V132
0x1ce: RETURN V132 V133
---
Entry stack: [V10, 0x1b9, V484]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b9]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x55]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V134 = CALLVALUE
0x1d1: V135 = ISZERO V134
0x1d2: V136 = 0x1da
0x1d5: JUMPI 0x1da V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V137 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x22d]
---
Predecessors: [0x1cf]
Successors: [0x695]
---
0x1da JUMPDEST
0x1db PUSH2 0x22e
0x1de PUSH1 0x4
0x1e0 DUP1
0x1e1 DUP1
0x1e2 CALLDATALOAD
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP1
0x201 CALLDATALOAD
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 SWAP1
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d SWAP2
0x21e SWAP1
0x21f DUP1
0x220 CALLDATALOAD
0x221 SWAP1
0x222 PUSH1 0x20
0x224 ADD
0x225 SWAP1
0x226 SWAP2
0x227 SWAP1
0x228 POP
0x229 POP
0x22a PUSH2 0x695
0x22d JUMP
---
0x1da: JUMPDEST 
0x1db: V138 = 0x22e
0x1de: V139 = 0x4
0x1e2: V140 = CALLDATALOAD 0x4
0x1e3: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1fa: V143 = 0x20
0x1fc: V144 = ADD 0x20 0x4
0x201: V145 = CALLDATALOAD 0x24
0x202: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x219: V148 = 0x20
0x21b: V149 = ADD 0x20 0x24
0x220: V150 = CALLDATALOAD 0x44
0x222: V151 = 0x20
0x224: V152 = ADD 0x20 0x44
0x22a: V153 = 0x695
0x22d: JUMP 0x695
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22e, V142, V147, V150]
Exit stack: [V10, 0x22e, V142, V147, V150]

================================

Block 0x22e
[0x22e:0x247]
---
Predecessors: [0x7bc]
Successors: []
---
0x22e JUMPDEST
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 DUP3
0x234 ISZERO
0x235 ISZERO
0x236 ISZERO
0x237 ISZERO
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x20
0x23c ADD
0x23d SWAP2
0x23e POP
0x23f POP
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 SWAP2
0x245 SUB
0x246 SWAP1
0x247 RETURN
---
0x22e: JUMPDEST 
0x22f: V154 = 0x40
0x231: V155 = M[0x40]
0x234: V156 = ISZERO 0x1
0x235: V157 = ISZERO 0x0
0x236: V158 = ISZERO 0x1
0x237: V159 = ISZERO 0x0
0x239: M[V155] = 0x1
0x23a: V160 = 0x20
0x23c: V161 = ADD 0x20 V155
0x240: V162 = 0x40
0x242: V163 = M[0x40]
0x245: V164 = SUB V161 V163
0x247: RETURN V163 V164
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x248
[0x248:0x24e]
---
Predecessors: [0x60]
Successors: [0x24f, 0x253]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x248: JUMPDEST 
0x249: V165 = CALLVALUE
0x24a: V166 = ISZERO V165
0x24b: V167 = 0x253
0x24e: JUMPI 0x253 V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x248]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V168 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x253
[0x253:0x25a]
---
Predecessors: [0x248]
Successors: [0x7c3]
---
0x253 JUMPDEST
0x254 PUSH2 0x25b
0x257 PUSH2 0x7c3
0x25a JUMP
---
0x253: JUMPDEST 
0x254: V169 = 0x25b
0x257: V170 = 0x7c3
0x25a: JUMP 0x7c3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25b]
Exit stack: [V10, 0x25b]

================================

Block 0x25b
[0x25b:0x276]
---
Predecessors: [0x7c3]
Successors: []
---
0x25b JUMPDEST
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP3
0x261 PUSH1 0xff
0x263 AND
0x264 PUSH1 0xff
0x266 AND
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP2
0x26d POP
0x26e POP
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 RETURN
---
0x25b: JUMPDEST 
0x25c: V171 = 0x40
0x25e: V172 = M[0x40]
0x261: V173 = 0xff
0x263: V174 = AND 0xff V554
0x264: V175 = 0xff
0x266: V176 = AND 0xff V174
0x268: M[V172] = V176
0x269: V177 = 0x20
0x26b: V178 = ADD 0x20 V172
0x26f: V179 = 0x40
0x271: V180 = M[0x40]
0x274: V181 = SUB V178 V180
0x276: RETURN V180 V181
---
Entry stack: [V10, 0x25b, V554]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25b]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x6b]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V182 = CALLVALUE
0x279: V183 = ISZERO V182
0x27a: V184 = 0x282
0x27d: JUMPI 0x282 V183
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V185 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x297]
---
Predecessors: [0x277]
Successors: [0x7d6]
---
0x282 JUMPDEST
0x283 PUSH2 0x298
0x286 PUSH1 0x4
0x288 DUP1
0x289 DUP1
0x28a CALLDATALOAD
0x28b SWAP1
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP1
0x290 SWAP2
0x291 SWAP1
0x292 POP
0x293 POP
0x294 PUSH2 0x7d6
0x297 JUMP
---
0x282: JUMPDEST 
0x283: V186 = 0x298
0x286: V187 = 0x4
0x28a: V188 = CALLDATALOAD 0x4
0x28c: V189 = 0x20
0x28e: V190 = ADD 0x20 0x4
0x294: V191 = 0x7d6
0x297: JUMP 0x7d6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x298, V188]
Exit stack: [V10, 0x298, V188]

================================

Block 0x298
[0x298:0x2b1]
---
Predecessors: [0x8d6]
Successors: []
---
0x298 JUMPDEST
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d DUP3
0x29e ISZERO
0x29f ISZERO
0x2a0 ISZERO
0x2a1 ISZERO
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 SWAP2
0x2a8 POP
0x2a9 POP
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x298: JUMPDEST 
0x299: V192 = 0x40
0x29b: V193 = M[0x40]
0x29e: V194 = ISZERO 0x1
0x29f: V195 = ISZERO 0x0
0x2a0: V196 = ISZERO 0x1
0x2a1: V197 = ISZERO 0x0
0x2a3: M[V193] = 0x1
0x2a4: V198 = 0x20
0x2a6: V199 = ADD 0x20 V193
0x2aa: V200 = 0x40
0x2ac: V201 = M[0x40]
0x2af: V202 = SUB V199 V201
0x2b1: RETURN V201 V202
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x76]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V203 = CALLVALUE
0x2b4: V204 = ISZERO V203
0x2b5: V205 = 0x2bd
0x2b8: JUMPI 0x2bd V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V206 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bd
[0x2bd:0x2e8]
---
Predecessors: [0x2b2]
Successors: [0x8db]
---
0x2bd JUMPDEST
0x2be PUSH2 0x2e9
0x2c1 PUSH1 0x4
0x2c3 DUP1
0x2c4 DUP1
0x2c5 CALLDATALOAD
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc SWAP1
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 SWAP1
0x2e1 SWAP2
0x2e2 SWAP1
0x2e3 POP
0x2e4 POP
0x2e5 PUSH2 0x8db
0x2e8 JUMP
---
0x2bd: JUMPDEST 
0x2be: V207 = 0x2e9
0x2c1: V208 = 0x4
0x2c5: V209 = CALLDATALOAD 0x4
0x2c6: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x2dd: V212 = 0x20
0x2df: V213 = ADD 0x20 0x4
0x2e5: V214 = 0x8db
0x2e8: JUMP 0x8db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e9, V211]
Exit stack: [V10, 0x2e9, V211]

================================

Block 0x2e9
[0x2e9:0x2fe]
---
Predecessors: [0x8db]
Successors: []
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee DUP3
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 SWAP2
0x2f5 POP
0x2f6 POP
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb SWAP2
0x2fc SUB
0x2fd SWAP1
0x2fe RETURN
---
0x2e9: JUMPDEST 
0x2ea: V215 = 0x40
0x2ec: V216 = M[0x40]
0x2f0: M[V216] = V615
0x2f1: V217 = 0x20
0x2f3: V218 = ADD 0x20 V216
0x2f7: V219 = 0x40
0x2f9: V220 = M[0x40]
0x2fc: V221 = SUB V218 V220
0x2fe: RETURN V220 V221
---
Entry stack: [V10, 0x2e9, V615]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2e9]

================================

Block 0x2ff
[0x2ff:0x305]
---
Predecessors: [0x81]
Successors: [0x306, 0x30a]
---
0x2ff JUMPDEST
0x300 CALLVALUE
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2ff: JUMPDEST 
0x300: V222 = CALLVALUE
0x301: V223 = ISZERO V222
0x302: V224 = 0x30a
0x305: JUMPI 0x30a V223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2ff]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V225 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30a
[0x30a:0x33e]
---
Predecessors: [0x2ff]
Successors: [0x8f3]
---
0x30a JUMPDEST
0x30b PUSH2 0x33f
0x30e PUSH1 0x4
0x310 DUP1
0x311 DUP1
0x312 CALLDATALOAD
0x313 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x328 AND
0x329 SWAP1
0x32a PUSH1 0x20
0x32c ADD
0x32d SWAP1
0x32e SWAP2
0x32f SWAP1
0x330 DUP1
0x331 CALLDATALOAD
0x332 SWAP1
0x333 PUSH1 0x20
0x335 ADD
0x336 SWAP1
0x337 SWAP2
0x338 SWAP1
0x339 POP
0x33a POP
0x33b PUSH2 0x8f3
0x33e JUMP
---
0x30a: JUMPDEST 
0x30b: V226 = 0x33f
0x30e: V227 = 0x4
0x312: V228 = CALLDATALOAD 0x4
0x313: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x328: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x32a: V231 = 0x20
0x32c: V232 = ADD 0x20 0x4
0x331: V233 = CALLDATALOAD 0x24
0x333: V234 = 0x20
0x335: V235 = ADD 0x20 0x24
0x33b: V236 = 0x8f3
0x33e: JUMP 0x8f3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33f, V230, V233]
Exit stack: [V10, 0x33f, V230, V233]

================================

Block 0x33f
[0x33f:0x358]
---
Predecessors: [0xb08]
Successors: []
---
0x33f JUMPDEST
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 DUP3
0x345 ISZERO
0x346 ISZERO
0x347 ISZERO
0x348 ISZERO
0x349 DUP2
0x34a MSTORE
0x34b PUSH1 0x20
0x34d ADD
0x34e SWAP2
0x34f POP
0x350 POP
0x351 PUSH1 0x40
0x353 MLOAD
0x354 DUP1
0x355 SWAP2
0x356 SUB
0x357 SWAP1
0x358 RETURN
---
0x33f: JUMPDEST 
0x340: V237 = 0x40
0x342: V238 = M[0x40]
0x345: V239 = ISZERO 0x1
0x346: V240 = ISZERO 0x0
0x347: V241 = ISZERO 0x1
0x348: V242 = ISZERO 0x0
0x34a: M[V238] = 0x1
0x34b: V243 = 0x20
0x34d: V244 = ADD 0x20 V238
0x351: V245 = 0x40
0x353: V246 = M[0x40]
0x356: V247 = SUB V244 V246
0x358: RETURN V246 V247
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x359
[0x359:0x35f]
---
Predecessors: [0x8c]
Successors: [0x360, 0x364]
---
0x359 JUMPDEST
0x35a CALLVALUE
0x35b ISZERO
0x35c PUSH2 0x364
0x35f JUMPI
---
0x359: JUMPDEST 
0x35a: V248 = CALLVALUE
0x35b: V249 = ISZERO V248
0x35c: V250 = 0x364
0x35f: JUMPI 0x364 V249
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x360
[0x360:0x363]
---
Predecessors: [0x359]
Successors: []
---
0x360 PUSH1 0x0
0x362 DUP1
0x363 REVERT
---
0x360: V251 = 0x0
0x363: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x364
[0x364:0x36b]
---
Predecessors: [0x359]
Successors: [0xb0e]
---
0x364 JUMPDEST
0x365 PUSH2 0x36c
0x368 PUSH2 0xb0e
0x36b JUMP
---
0x364: JUMPDEST 
0x365: V252 = 0x36c
0x368: V253 = 0xb0e
0x36b: JUMP 0xb0e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36c]
Exit stack: [V10, 0x36c]

================================

Block 0x36c
[0x36c:0x390]
---
Predecessors: [0xba4]
Successors: [0x391]
---
0x36c JUMPDEST
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 DUP1
0x372 PUSH1 0x20
0x374 ADD
0x375 DUP3
0x376 DUP2
0x377 SUB
0x378 DUP3
0x379 MSTORE
0x37a DUP4
0x37b DUP2
0x37c DUP2
0x37d MLOAD
0x37e DUP2
0x37f MSTORE
0x380 PUSH1 0x20
0x382 ADD
0x383 SWAP2
0x384 POP
0x385 DUP1
0x386 MLOAD
0x387 SWAP1
0x388 PUSH1 0x20
0x38a ADD
0x38b SWAP1
0x38c DUP1
0x38d DUP4
0x38e DUP4
0x38f PUSH1 0x0
---
0x36c: JUMPDEST 
0x36d: V254 = 0x40
0x36f: V255 = M[0x40]
0x372: V256 = 0x20
0x374: V257 = ADD 0x20 V255
0x377: V258 = SUB V257 V255
0x379: M[V255] = V258
0x37d: V259 = M[V744]
0x37f: M[V257] = V259
0x380: V260 = 0x20
0x382: V261 = ADD 0x20 V257
0x386: V262 = M[V744]
0x388: V263 = 0x20
0x38a: V264 = ADD 0x20 V744
0x38f: V265 = 0x0
---
Entry stack: [V10, 0x36c, V744]
Stack pops: 1
Stack additions: [S0, V255, V255, V261, V264, V262, V262, V261, V264, 0x0]
Exit stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, 0x0]

================================

Block 0x391
[0x391:0x399]
---
Predecessors: [0x36c, 0x3a2]
Successors: [0x39a, 0x3ad]
---
0x391 JUMPDEST
0x392 DUP4
0x393 DUP2
0x394 LT
0x395 ISZERO
0x396 PUSH2 0x3ad
0x399 JUMPI
---
0x391: JUMPDEST 
0x394: V266 = LT S0 V262
0x395: V267 = ISZERO V266
0x396: V268 = 0x3ad
0x399: JUMPI 0x3ad V267
---
Entry stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, S0]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0x391]
Successors: [0x3a2]
---
0x39a DUP1
0x39b DUP3
0x39c ADD
0x39d MLOAD
0x39e DUP2
0x39f DUP5
0x3a0 ADD
0x3a1 MSTORE
---
0x39c: V269 = ADD V264 S0
0x39d: V270 = M[V269]
0x3a0: V271 = ADD V261 S0
0x3a1: M[V271] = V270
---
Entry stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, S0]

================================

Block 0x3a2
[0x3a2:0x3ac]
---
Predecessors: [0x39a]
Successors: [0x391]
---
0x3a2 JUMPDEST
0x3a3 PUSH1 0x20
0x3a5 DUP2
0x3a6 ADD
0x3a7 SWAP1
0x3a8 POP
0x3a9 PUSH2 0x391
0x3ac JUMP
---
0x3a2: JUMPDEST 
0x3a3: V272 = 0x20
0x3a6: V273 = ADD S0 0x20
0x3a9: V274 = 0x391
0x3ac: JUMP 0x391
---
Entry stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, S0]
Stack pops: 1
Stack additions: [V273]
Exit stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, V273]

================================

Block 0x3ad
[0x3ad:0x3c0]
---
Predecessors: [0x391]
Successors: [0x3c1, 0x3da]
---
0x3ad JUMPDEST
0x3ae POP
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 SWAP1
0x3b3 POP
0x3b4 SWAP1
0x3b5 DUP2
0x3b6 ADD
0x3b7 SWAP1
0x3b8 PUSH1 0x1f
0x3ba AND
0x3bb DUP1
0x3bc ISZERO
0x3bd PUSH2 0x3da
0x3c0 JUMPI
---
0x3ad: JUMPDEST 
0x3b6: V275 = ADD V262 V261
0x3b8: V276 = 0x1f
0x3ba: V277 = AND 0x1f V262
0x3bc: V278 = ISZERO V277
0x3bd: V279 = 0x3da
0x3c0: JUMPI 0x3da V278
---
Entry stack: [V10, 0x36c, V744, V255, V255, V261, V264, V262, V262, V261, V264, S0]
Stack pops: 7
Stack additions: [V275, V277]
Exit stack: [V10, 0x36c, V744, V255, V255, V275, V277]

================================

Block 0x3c1
[0x3c1:0x3d9]
---
Predecessors: [0x3ad]
Successors: [0x3da]
---
0x3c1 DUP1
0x3c2 DUP3
0x3c3 SUB
0x3c4 DUP1
0x3c5 MLOAD
0x3c6 PUSH1 0x1
0x3c8 DUP4
0x3c9 PUSH1 0x20
0x3cb SUB
0x3cc PUSH2 0x100
0x3cf EXP
0x3d0 SUB
0x3d1 NOT
0x3d2 AND
0x3d3 DUP2
0x3d4 MSTORE
0x3d5 PUSH1 0x20
0x3d7 ADD
0x3d8 SWAP2
0x3d9 POP
---
0x3c3: V280 = SUB V275 V277
0x3c5: V281 = M[V280]
0x3c6: V282 = 0x1
0x3c9: V283 = 0x20
0x3cb: V284 = SUB 0x20 V277
0x3cc: V285 = 0x100
0x3cf: V286 = EXP 0x100 V284
0x3d0: V287 = SUB V286 0x1
0x3d1: V288 = NOT V287
0x3d2: V289 = AND V288 V281
0x3d4: M[V280] = V289
0x3d5: V290 = 0x20
0x3d7: V291 = ADD 0x20 V280
---
Entry stack: [V10, 0x36c, V744, V255, V255, V275, V277]
Stack pops: 2
Stack additions: [V291, S0]
Exit stack: [V10, 0x36c, V744, V255, V255, V291, V277]

================================

Block 0x3da
[0x3da:0x3e7]
---
Predecessors: [0x3ad, 0x3c1]
Successors: []
---
0x3da JUMPDEST
0x3db POP
0x3dc SWAP3
0x3dd POP
0x3de POP
0x3df POP
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 SWAP2
0x3e5 SUB
0x3e6 SWAP1
0x3e7 RETURN
---
0x3da: JUMPDEST 
0x3e0: V292 = 0x40
0x3e2: V293 = M[0x40]
0x3e5: V294 = SUB S1 V293
0x3e7: RETURN V293 V294
---
Entry stack: [V10, 0x36c, V744, V255, V255, S1, V277]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x36c]

================================

Block 0x3e8
[0x3e8:0x3ee]
---
Predecessors: [0x97]
Successors: [0x3ef, 0x3f3]
---
0x3e8 JUMPDEST
0x3e9 CALLVALUE
0x3ea ISZERO
0x3eb PUSH2 0x3f3
0x3ee JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V295 = CALLVALUE
0x3ea: V296 = ISZERO V295
0x3eb: V297 = 0x3f3
0x3ee: JUMPI 0x3f3 V296
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ef
[0x3ef:0x3f2]
---
Predecessors: [0x3e8]
Successors: []
---
0x3ef PUSH1 0x0
0x3f1 DUP1
0x3f2 REVERT
---
0x3ef: V298 = 0x0
0x3f2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f3
[0x3f3:0x427]
---
Predecessors: [0x3e8]
Successors: [0xbac]
---
0x3f3 JUMPDEST
0x3f4 PUSH2 0x428
0x3f7 PUSH1 0x4
0x3f9 DUP1
0x3fa DUP1
0x3fb CALLDATALOAD
0x3fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x411 AND
0x412 SWAP1
0x413 PUSH1 0x20
0x415 ADD
0x416 SWAP1
0x417 SWAP2
0x418 SWAP1
0x419 DUP1
0x41a CALLDATALOAD
0x41b SWAP1
0x41c PUSH1 0x20
0x41e ADD
0x41f SWAP1
0x420 SWAP2
0x421 SWAP1
0x422 POP
0x423 POP
0x424 PUSH2 0xbac
0x427 JUMP
---
0x3f3: JUMPDEST 
0x3f4: V299 = 0x428
0x3f7: V300 = 0x4
0x3fb: V301 = CALLDATALOAD 0x4
0x3fc: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x411: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x413: V304 = 0x20
0x415: V305 = ADD 0x20 0x4
0x41a: V306 = CALLDATALOAD 0x24
0x41c: V307 = 0x20
0x41e: V308 = ADD 0x20 0x24
0x424: V309 = 0xbac
0x427: JUMP 0xbac
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x428, V303, V306]
Exit stack: [V10, 0x428, V303, V306]

================================

Block 0x428
[0x428:0x429]
---
Predecessors: [0xbb8]
Successors: []
---
0x428 JUMPDEST
0x429 STOP
---
0x428: JUMPDEST 
0x429: STOP 
---
Entry stack: [V10, 0x22e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S0]

================================

Block 0x42a
[0x42a:0x430]
---
Predecessors: [0xa2]
Successors: [0x431, 0x435]
---
0x42a JUMPDEST
0x42b CALLVALUE
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x42a: JUMPDEST 
0x42b: V310 = CALLVALUE
0x42c: V311 = ISZERO V310
0x42d: V312 = 0x435
0x430: JUMPI 0x435 V311
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x42a]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V313 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x435
[0x435:0x4e0]
---
Predecessors: [0x42a]
Successors: [0xbbc]
---
0x435 JUMPDEST
0x436 PUSH2 0x4e1
0x439 PUSH1 0x4
0x43b DUP1
0x43c DUP1
0x43d CALLDATALOAD
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 SWAP1
0x455 PUSH1 0x20
0x457 ADD
0x458 SWAP1
0x459 SWAP2
0x45a SWAP1
0x45b DUP1
0x45c CALLDATALOAD
0x45d SWAP1
0x45e PUSH1 0x20
0x460 ADD
0x461 SWAP1
0x462 DUP3
0x463 ADD
0x464 DUP1
0x465 CALLDATALOAD
0x466 SWAP1
0x467 PUSH1 0x20
0x469 ADD
0x46a SWAP1
0x46b DUP1
0x46c DUP1
0x46d PUSH1 0x20
0x46f MUL
0x470 PUSH1 0x20
0x472 ADD
0x473 PUSH1 0x40
0x475 MLOAD
0x476 SWAP1
0x477 DUP2
0x478 ADD
0x479 PUSH1 0x40
0x47b MSTORE
0x47c DUP1
0x47d SWAP4
0x47e SWAP3
0x47f SWAP2
0x480 SWAP1
0x481 DUP2
0x482 DUP2
0x483 MSTORE
0x484 PUSH1 0x20
0x486 ADD
0x487 DUP4
0x488 DUP4
0x489 PUSH1 0x20
0x48b MUL
0x48c DUP1
0x48d DUP3
0x48e DUP5
0x48f CALLDATACOPY
0x490 DUP3
0x491 ADD
0x492 SWAP2
0x493 POP
0x494 POP
0x495 POP
0x496 POP
0x497 POP
0x498 POP
0x499 SWAP2
0x49a SWAP1
0x49b DUP1
0x49c CALLDATALOAD
0x49d SWAP1
0x49e PUSH1 0x20
0x4a0 ADD
0x4a1 SWAP1
0x4a2 DUP3
0x4a3 ADD
0x4a4 DUP1
0x4a5 CALLDATALOAD
0x4a6 SWAP1
0x4a7 PUSH1 0x20
0x4a9 ADD
0x4aa SWAP1
0x4ab DUP1
0x4ac DUP1
0x4ad PUSH1 0x20
0x4af MUL
0x4b0 PUSH1 0x20
0x4b2 ADD
0x4b3 PUSH1 0x40
0x4b5 MLOAD
0x4b6 SWAP1
0x4b7 DUP2
0x4b8 ADD
0x4b9 PUSH1 0x40
0x4bb MSTORE
0x4bc DUP1
0x4bd SWAP4
0x4be SWAP3
0x4bf SWAP2
0x4c0 SWAP1
0x4c1 DUP2
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x20
0x4c6 ADD
0x4c7 DUP4
0x4c8 DUP4
0x4c9 PUSH1 0x20
0x4cb MUL
0x4cc DUP1
0x4cd DUP3
0x4ce DUP5
0x4cf CALLDATACOPY
0x4d0 DUP3
0x4d1 ADD
0x4d2 SWAP2
0x4d3 POP
0x4d4 POP
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 SWAP2
0x4da SWAP1
0x4db POP
0x4dc POP
0x4dd PUSH2 0xbbc
0x4e0 JUMP
---
0x435: JUMPDEST 
0x436: V314 = 0x4e1
0x439: V315 = 0x4
0x43d: V316 = CALLDATALOAD 0x4
0x43e: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x455: V319 = 0x20
0x457: V320 = ADD 0x20 0x4
0x45c: V321 = CALLDATALOAD 0x24
0x45e: V322 = 0x20
0x460: V323 = ADD 0x20 0x24
0x463: V324 = ADD 0x4 V321
0x465: V325 = CALLDATALOAD V324
0x467: V326 = 0x20
0x469: V327 = ADD 0x20 V324
0x46d: V328 = 0x20
0x46f: V329 = MUL 0x20 V325
0x470: V330 = 0x20
0x472: V331 = ADD 0x20 V329
0x473: V332 = 0x40
0x475: V333 = M[0x40]
0x478: V334 = ADD V333 V331
0x479: V335 = 0x40
0x47b: M[0x40] = V334
0x483: M[V333] = V325
0x484: V336 = 0x20
0x486: V337 = ADD 0x20 V333
0x489: V338 = 0x20
0x48b: V339 = MUL 0x20 V325
0x48f: CALLDATACOPY V337 V327 V339
0x491: V340 = ADD V337 V339
0x49c: V341 = CALLDATALOAD 0x44
0x49e: V342 = 0x20
0x4a0: V343 = ADD 0x20 0x44
0x4a3: V344 = ADD 0x4 V341
0x4a5: V345 = CALLDATALOAD V344
0x4a7: V346 = 0x20
0x4a9: V347 = ADD 0x20 V344
0x4ad: V348 = 0x20
0x4af: V349 = MUL 0x20 V345
0x4b0: V350 = 0x20
0x4b2: V351 = ADD 0x20 V349
0x4b3: V352 = 0x40
0x4b5: V353 = M[0x40]
0x4b8: V354 = ADD V353 V351
0x4b9: V355 = 0x40
0x4bb: M[0x40] = V354
0x4c3: M[V353] = V345
0x4c4: V356 = 0x20
0x4c6: V357 = ADD 0x20 V353
0x4c9: V358 = 0x20
0x4cb: V359 = MUL 0x20 V345
0x4cf: CALLDATACOPY V357 V347 V359
0x4d1: V360 = ADD V357 V359
0x4dd: V361 = 0xbbc
0x4e0: JUMP 0xbbc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4e1, V318, V333, V353]
Exit stack: [V10, 0x4e1, V318, V333, V353]

================================

Block 0x4e1
[0x4e1:0x4f6]
---
Predecessors: [0xcc0]
Successors: []
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 DUP1
0x4e6 DUP3
0x4e7 DUP2
0x4e8 MSTORE
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec SWAP2
0x4ed POP
0x4ee POP
0x4ef PUSH1 0x40
0x4f1 MLOAD
0x4f2 DUP1
0x4f3 SWAP2
0x4f4 SUB
0x4f5 SWAP1
0x4f6 RETURN
---
0x4e1: JUMPDEST 
0x4e2: V362 = 0x40
0x4e4: V363 = M[0x40]
0x4e8: M[V363] = S0
0x4e9: V364 = 0x20
0x4eb: V365 = ADD 0x20 V363
0x4ef: V366 = 0x40
0x4f1: V367 = M[0x40]
0x4f4: V368 = SUB V365 V367
0x4f6: RETURN V367 V368
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f7
[0x4f7:0x4fd]
---
Predecessors: [0xad]
Successors: [0x4fe, 0x502]
---
0x4f7 JUMPDEST
0x4f8 CALLVALUE
0x4f9 ISZERO
0x4fa PUSH2 0x502
0x4fd JUMPI
---
0x4f7: JUMPDEST 
0x4f8: V369 = CALLVALUE
0x4f9: V370 = ISZERO V369
0x4fa: V371 = 0x502
0x4fd: JUMPI 0x502 V370
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4fe
[0x4fe:0x501]
---
Predecessors: [0x4f7]
Successors: []
---
0x4fe PUSH1 0x0
0x500 DUP1
0x501 REVERT
---
0x4fe: V372 = 0x0
0x501: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x502
[0x502:0x54c]
---
Predecessors: [0x4f7]
Successors: [0xcc8]
---
0x502 JUMPDEST
0x503 PUSH2 0x54d
0x506 PUSH1 0x4
0x508 DUP1
0x509 DUP1
0x50a CALLDATALOAD
0x50b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x520 AND
0x521 SWAP1
0x522 PUSH1 0x20
0x524 ADD
0x525 SWAP1
0x526 SWAP2
0x527 SWAP1
0x528 DUP1
0x529 CALLDATALOAD
0x52a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53f AND
0x540 SWAP1
0x541 PUSH1 0x20
0x543 ADD
0x544 SWAP1
0x545 SWAP2
0x546 SWAP1
0x547 POP
0x548 POP
0x549 PUSH2 0xcc8
0x54c JUMP
---
0x502: JUMPDEST 
0x503: V373 = 0x54d
0x506: V374 = 0x4
0x50a: V375 = CALLDATALOAD 0x4
0x50b: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x520: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x522: V378 = 0x20
0x524: V379 = ADD 0x20 0x4
0x529: V380 = CALLDATALOAD 0x24
0x52a: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x53f: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x541: V383 = 0x20
0x543: V384 = ADD 0x20 0x24
0x549: V385 = 0xcc8
0x54c: JUMP 0xcc8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x54d, V377, V382]
Exit stack: [V10, 0x54d, V377, V382]

================================

Block 0x54d
[0x54d:0x562]
---
Predecessors: [0xcc8]
Successors: []
---
0x54d JUMPDEST
0x54e PUSH1 0x40
0x550 MLOAD
0x551 DUP1
0x552 DUP3
0x553 DUP2
0x554 MSTORE
0x555 PUSH1 0x20
0x557 ADD
0x558 SWAP2
0x559 POP
0x55a POP
0x55b PUSH1 0x40
0x55d MLOAD
0x55e DUP1
0x55f SWAP2
0x560 SUB
0x561 SWAP1
0x562 RETURN
---
0x54d: JUMPDEST 
0x54e: V386 = 0x40
0x550: V387 = M[0x40]
0x554: M[V387] = V871
0x555: V388 = 0x20
0x557: V389 = ADD 0x20 V387
0x55b: V390 = 0x40
0x55d: V391 = M[0x40]
0x560: V392 = SUB V389 V391
0x562: RETURN V391 V392
---
Entry stack: [V10, 0x54d, V871]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x54d]

================================

Block 0x563
[0x563:0x5b2]
---
Predecessors: [0xc8]
Successors: [0x5b3, 0x5f9]
---
0x563 JUMPDEST
0x564 PUSH1 0x0
0x566 DUP1
0x567 SLOAD
0x568 PUSH1 0x1
0x56a DUP2
0x56b PUSH1 0x1
0x56d AND
0x56e ISZERO
0x56f PUSH2 0x100
0x572 MUL
0x573 SUB
0x574 AND
0x575 PUSH1 0x2
0x577 SWAP1
0x578 DIV
0x579 DUP1
0x57a PUSH1 0x1f
0x57c ADD
0x57d PUSH1 0x20
0x57f DUP1
0x580 SWAP2
0x581 DIV
0x582 MUL
0x583 PUSH1 0x20
0x585 ADD
0x586 PUSH1 0x40
0x588 MLOAD
0x589 SWAP1
0x58a DUP2
0x58b ADD
0x58c PUSH1 0x40
0x58e MSTORE
0x58f DUP1
0x590 SWAP3
0x591 SWAP2
0x592 SWAP1
0x593 DUP2
0x594 DUP2
0x595 MSTORE
0x596 PUSH1 0x20
0x598 ADD
0x599 DUP3
0x59a DUP1
0x59b SLOAD
0x59c PUSH1 0x1
0x59e DUP2
0x59f PUSH1 0x1
0x5a1 AND
0x5a2 ISZERO
0x5a3 PUSH2 0x100
0x5a6 MUL
0x5a7 SUB
0x5a8 AND
0x5a9 PUSH1 0x2
0x5ab SWAP1
0x5ac DIV
0x5ad DUP1
0x5ae ISZERO
0x5af PUSH2 0x5f9
0x5b2 JUMPI
---
0x563: JUMPDEST 
0x564: V393 = 0x0
0x567: V394 = S[0x0]
0x568: V395 = 0x1
0x56b: V396 = 0x1
0x56d: V397 = AND 0x1 V394
0x56e: V398 = ISZERO V397
0x56f: V399 = 0x100
0x572: V400 = MUL 0x100 V398
0x573: V401 = SUB V400 0x1
0x574: V402 = AND V401 V394
0x575: V403 = 0x2
0x578: V404 = DIV V402 0x2
0x57a: V405 = 0x1f
0x57c: V406 = ADD 0x1f V404
0x57d: V407 = 0x20
0x581: V408 = DIV V406 0x20
0x582: V409 = MUL V408 0x20
0x583: V410 = 0x20
0x585: V411 = ADD 0x20 V409
0x586: V412 = 0x40
0x588: V413 = M[0x40]
0x58b: V414 = ADD V413 V411
0x58c: V415 = 0x40
0x58e: M[0x40] = V414
0x595: M[V413] = V404
0x596: V416 = 0x20
0x598: V417 = ADD 0x20 V413
0x59b: V418 = S[0x0]
0x59c: V419 = 0x1
0x59f: V420 = 0x1
0x5a1: V421 = AND 0x1 V418
0x5a2: V422 = ISZERO V421
0x5a3: V423 = 0x100
0x5a6: V424 = MUL 0x100 V422
0x5a7: V425 = SUB V424 0x1
0x5a8: V426 = AND V425 V418
0x5a9: V427 = 0x2
0x5ac: V428 = DIV V426 0x2
0x5ae: V429 = ISZERO V428
0x5af: V430 = 0x5f9
0x5b2: JUMPI 0x5f9 V429
---
Entry stack: [V10, 0xd0]
Stack pops: 0
Stack additions: [V413, 0x0, V404, V417, 0x0, V428]
Exit stack: [V10, 0xd0, V413, 0x0, V404, V417, 0x0, V428]

================================

Block 0x5b3
[0x5b3:0x5ba]
---
Predecessors: [0x563]
Successors: [0x5bb, 0x5ce]
---
0x5b3 DUP1
0x5b4 PUSH1 0x1f
0x5b6 LT
0x5b7 PUSH2 0x5ce
0x5ba JUMPI
---
0x5b4: V431 = 0x1f
0x5b6: V432 = LT 0x1f V428
0x5b7: V433 = 0x5ce
0x5ba: JUMPI 0x5ce V432
---
Entry stack: [V10, 0xd0, V413, 0x0, V404, V417, 0x0, V428]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xd0, V413, 0x0, V404, V417, 0x0, V428]

================================

Block 0x5bb
[0x5bb:0x5cd]
---
Predecessors: [0x5b3]
Successors: [0x5f9]
---
0x5bb PUSH2 0x100
0x5be DUP1
0x5bf DUP4
0x5c0 SLOAD
0x5c1 DIV
0x5c2 MUL
0x5c3 DUP4
0x5c4 MSTORE
0x5c5 SWAP2
0x5c6 PUSH1 0x20
0x5c8 ADD
0x5c9 SWAP2
0x5ca PUSH2 0x5f9
0x5cd JUMP
---
0x5bb: V434 = 0x100
0x5c0: V435 = S[0x0]
0x5c1: V436 = DIV V435 0x100
0x5c2: V437 = MUL V436 0x100
0x5c4: M[V417] = V437
0x5c6: V438 = 0x20
0x5c8: V439 = ADD 0x20 V417
0x5ca: V440 = 0x5f9
0x5cd: JUMP 0x5f9
---
Entry stack: [V10, 0xd0, V413, 0x0, V404, V417, 0x0, V428]
Stack pops: 3
Stack additions: [V439, S1, S0]
Exit stack: [V10, 0xd0, V413, 0x0, V404, V439, 0x0, V428]

================================

Block 0x5ce
[0x5ce:0x5db]
---
Predecessors: [0x5b3]
Successors: [0x5dc]
---
0x5ce JUMPDEST
0x5cf DUP3
0x5d0 ADD
0x5d1 SWAP2
0x5d2 SWAP1
0x5d3 PUSH1 0x0
0x5d5 MSTORE
0x5d6 PUSH1 0x20
0x5d8 PUSH1 0x0
0x5da SHA3
0x5db SWAP1
---
0x5ce: JUMPDEST 
0x5d0: V441 = ADD V417 V428
0x5d3: V442 = 0x0
0x5d5: M[0x0] = 0x0
0x5d6: V443 = 0x20
0x5d8: V444 = 0x0
0x5da: V445 = SHA3 0x0 0x20
---
Entry stack: [V10, 0xd0, V413, 0x0, V404, V417, 0x0, V428]
Stack pops: 3
Stack additions: [V441, V445, S2]
Exit stack: [V10, 0xd0, V413, 0x0, V404, V441, V445, V417]

================================

Block 0x5dc
[0x5dc:0x5ef]
---
Predecessors: [0x5ce, 0x5dc]
Successors: [0x5dc, 0x5f0]
---
0x5dc JUMPDEST
0x5dd DUP2
0x5de SLOAD
0x5df DUP2
0x5e0 MSTORE
0x5e1 SWAP1
0x5e2 PUSH1 0x1
0x5e4 ADD
0x5e5 SWAP1
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 DUP1
0x5ea DUP4
0x5eb GT
0x5ec PUSH2 0x5dc
0x5ef JUMPI
---
0x5dc: JUMPDEST 
0x5de: V446 = S[S1]
0x5e0: M[S0] = V446
0x5e2: V447 = 0x1
0x5e4: V448 = ADD 0x1 S1
0x5e6: V449 = 0x20
0x5e8: V450 = ADD 0x20 S0
0x5eb: V451 = GT V441 V450
0x5ec: V452 = 0x5dc
0x5ef: JUMPI 0x5dc V451
---
Entry stack: [V10, 0xd0, V413, 0x0, V404, V441, S1, S0]
Stack pops: 3
Stack additions: [S2, V448, V450]
Exit stack: [V10, 0xd0, V413, 0x0, V404, V441, V448, V450]

================================

Block 0x5f0
[0x5f0:0x5f8]
---
Predecessors: [0x5dc]
Successors: [0x5f9]
---
0x5f0 DUP3
0x5f1 SWAP1
0x5f2 SUB
0x5f3 PUSH1 0x1f
0x5f5 AND
0x5f6 DUP3
0x5f7 ADD
0x5f8 SWAP2
---
0x5f2: V453 = SUB V450 V441
0x5f3: V454 = 0x1f
0x5f5: V455 = AND 0x1f V453
0x5f7: V456 = ADD V441 V455
---
Entry stack: [V10, 0xd0, V413, 0x0, V404, V441, V448, V450]
Stack pops: 3
Stack additions: [V456, S1, S2]
Exit stack: [V10, 0xd0, V413, 0x0, V404, V456, V448, V441]

================================

Block 0x5f9
[0x5f9:0x600]
---
Predecessors: [0x563, 0x5bb, 0x5f0]
Successors: [0xd0]
---
0x5f9 JUMPDEST
0x5fa POP
0x5fb POP
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff DUP2
0x600 JUMP
---
0x5f9: JUMPDEST 
0x600: JUMP 0xd0
---
Entry stack: [V10, 0xd0, V413, 0x0, V404, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0xd0, V413]

================================

Block 0x601
[0x601:0x688]
---
Predecessors: [0x157]
Successors: [0x689]
---
0x601 JUMPDEST
0x602 PUSH1 0x0
0x604 DUP2
0x605 PUSH1 0x5
0x607 PUSH1 0x0
0x609 CALLER
0x60a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61f AND
0x620 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x635 AND
0x636 DUP2
0x637 MSTORE
0x638 PUSH1 0x20
0x63a ADD
0x63b SWAP1
0x63c DUP2
0x63d MSTORE
0x63e PUSH1 0x20
0x640 ADD
0x641 PUSH1 0x0
0x643 SHA3
0x644 PUSH1 0x0
0x646 DUP6
0x647 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65c AND
0x65d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x672 AND
0x673 DUP2
0x674 MSTORE
0x675 PUSH1 0x20
0x677 ADD
0x678 SWAP1
0x679 DUP2
0x67a MSTORE
0x67b PUSH1 0x20
0x67d ADD
0x67e PUSH1 0x0
0x680 SHA3
0x681 DUP2
0x682 SWAP1
0x683 SSTORE
0x684 POP
0x685 PUSH1 0x1
0x687 SWAP1
0x688 POP
---
0x601: JUMPDEST 
0x602: V457 = 0x0
0x605: V458 = 0x5
0x607: V459 = 0x0
0x609: V460 = CALLER
0x60a: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x61f: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x620: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x635: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x637: M[0x0] = V464
0x638: V465 = 0x20
0x63a: V466 = ADD 0x20 0x0
0x63d: M[0x20] = 0x5
0x63e: V467 = 0x20
0x640: V468 = ADD 0x20 0x20
0x641: V469 = 0x0
0x643: V470 = SHA3 0x0 0x40
0x644: V471 = 0x0
0x647: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x65d: V474 = 0xffffffffffffffffffffffffffffffffffffffff
0x672: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x674: M[0x0] = V475
0x675: V476 = 0x20
0x677: V477 = ADD 0x20 0x0
0x67a: M[0x20] = V470
0x67b: V478 = 0x20
0x67d: V479 = ADD 0x20 0x20
0x67e: V480 = 0x0
0x680: V481 = SHA3 0x0 0x40
0x683: S[V481] = V106
0x685: V482 = 0x1
---
Entry stack: [V10, 0x18c, V103, V106]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x18c, V103, V106, 0x1]

================================

Block 0x689
[0x689:0x68e]
---
Predecessors: [0x601]
Successors: [0x18c]
---
0x689 JUMPDEST
0x68a SWAP3
0x68b SWAP2
0x68c POP
0x68d POP
0x68e JUMP
---
0x689: JUMPDEST 
0x68e: JUMP 0x18c
---
Entry stack: [V10, 0x18c, V103, V106, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x68f
[0x68f:0x694]
---
Predecessors: [0x1b1]
Successors: [0x1b9]
---
0x68f JUMPDEST
0x690 PUSH1 0x3
0x692 SLOAD
0x693 DUP2
0x694 JUMP
---
0x68f: JUMPDEST 
0x690: V483 = 0x3
0x692: V484 = S[0x3]
0x694: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9]
Stack pops: 1
Stack additions: [S0, V484]
Exit stack: [V10, 0x1b9, V484]

================================

Block 0x695
[0x695:0x71d]
---
Predecessors: [0x1da]
Successors: [0x71e, 0x722]
---
0x695 JUMPDEST
0x696 PUSH1 0x0
0x698 PUSH1 0x5
0x69a PUSH1 0x0
0x69c DUP6
0x69d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b2 AND
0x6b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c8 AND
0x6c9 DUP2
0x6ca MSTORE
0x6cb PUSH1 0x20
0x6cd ADD
0x6ce SWAP1
0x6cf DUP2
0x6d0 MSTORE
0x6d1 PUSH1 0x20
0x6d3 ADD
0x6d4 PUSH1 0x0
0x6d6 SHA3
0x6d7 PUSH1 0x0
0x6d9 CALLER
0x6da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ef AND
0x6f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x705 AND
0x706 DUP2
0x707 MSTORE
0x708 PUSH1 0x20
0x70a ADD
0x70b SWAP1
0x70c DUP2
0x70d MSTORE
0x70e PUSH1 0x20
0x710 ADD
0x711 PUSH1 0x0
0x713 SHA3
0x714 SLOAD
0x715 DUP3
0x716 GT
0x717 ISZERO
0x718 ISZERO
0x719 ISZERO
0x71a PUSH2 0x722
0x71d JUMPI
---
0x695: JUMPDEST 
0x696: V485 = 0x0
0x698: V486 = 0x5
0x69a: V487 = 0x0
0x69d: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b2: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x6b3: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c8: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x6ca: M[0x0] = V491
0x6cb: V492 = 0x20
0x6cd: V493 = ADD 0x20 0x0
0x6d0: M[0x20] = 0x5
0x6d1: V494 = 0x20
0x6d3: V495 = ADD 0x20 0x20
0x6d4: V496 = 0x0
0x6d6: V497 = SHA3 0x0 0x40
0x6d7: V498 = 0x0
0x6d9: V499 = CALLER
0x6da: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ef: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x6f0: V502 = 0xffffffffffffffffffffffffffffffffffffffff
0x705: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x707: M[0x0] = V503
0x708: V504 = 0x20
0x70a: V505 = ADD 0x20 0x0
0x70d: M[0x20] = V497
0x70e: V506 = 0x20
0x710: V507 = ADD 0x20 0x20
0x711: V508 = 0x0
0x713: V509 = SHA3 0x0 0x40
0x714: V510 = S[V509]
0x716: V511 = GT V150 V510
0x717: V512 = ISZERO V511
0x718: V513 = ISZERO V512
0x719: V514 = ISZERO V513
0x71a: V515 = 0x722
0x71d: JUMPI 0x722 V514
---
Entry stack: [V10, 0x22e, V142, V147, V150]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0]

================================

Block 0x71e
[0x71e:0x721]
---
Predecessors: [0x695]
Successors: []
---
0x71e PUSH1 0x0
0x720 DUP1
0x721 REVERT
---
0x71e: V516 = 0x0
0x721: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, V142, V147, V150, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0]

================================

Block 0x722
[0x722:0x7b6]
---
Predecessors: [0x695]
Successors: [0xced]
---
0x722 JUMPDEST
0x723 DUP2
0x724 PUSH1 0x5
0x726 PUSH1 0x0
0x728 DUP7
0x729 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73e AND
0x73f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x754 AND
0x755 DUP2
0x756 MSTORE
0x757 PUSH1 0x20
0x759 ADD
0x75a SWAP1
0x75b DUP2
0x75c MSTORE
0x75d PUSH1 0x20
0x75f ADD
0x760 PUSH1 0x0
0x762 SHA3
0x763 PUSH1 0x0
0x765 CALLER
0x766 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77b AND
0x77c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x791 AND
0x792 DUP2
0x793 MSTORE
0x794 PUSH1 0x20
0x796 ADD
0x797 SWAP1
0x798 DUP2
0x799 MSTORE
0x79a PUSH1 0x20
0x79c ADD
0x79d PUSH1 0x0
0x79f SHA3
0x7a0 PUSH1 0x0
0x7a2 DUP3
0x7a3 DUP3
0x7a4 SLOAD
0x7a5 SUB
0x7a6 SWAP3
0x7a7 POP
0x7a8 POP
0x7a9 DUP2
0x7aa SWAP1
0x7ab SSTORE
0x7ac POP
0x7ad PUSH2 0x7b7
0x7b0 DUP5
0x7b1 DUP5
0x7b2 DUP5
0x7b3 PUSH2 0xced
0x7b6 JUMP
---
0x722: JUMPDEST 
0x724: V517 = 0x5
0x726: V518 = 0x0
0x729: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x73e: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x73f: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x754: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x756: M[0x0] = V522
0x757: V523 = 0x20
0x759: V524 = ADD 0x20 0x0
0x75c: M[0x20] = 0x5
0x75d: V525 = 0x20
0x75f: V526 = ADD 0x20 0x20
0x760: V527 = 0x0
0x762: V528 = SHA3 0x0 0x40
0x763: V529 = 0x0
0x765: V530 = CALLER
0x766: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x77b: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x77c: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x791: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x793: M[0x0] = V534
0x794: V535 = 0x20
0x796: V536 = ADD 0x20 0x0
0x799: M[0x20] = V528
0x79a: V537 = 0x20
0x79c: V538 = ADD 0x20 0x20
0x79d: V539 = 0x0
0x79f: V540 = SHA3 0x0 0x40
0x7a0: V541 = 0x0
0x7a4: V542 = S[V540]
0x7a5: V543 = SUB V542 V150
0x7ab: S[V540] = V543
0x7ad: V544 = 0x7b7
0x7b3: V545 = 0xced
0x7b6: JUMP 0xced
---
Entry stack: [V10, 0x22e, V142, V147, V150, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x7b7, S3, S2, S1]
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0, 0x7b7, V142, V147, V150]

================================

Block 0x7b7
[0x7b7:0x7bb]
---
Predecessors: [0xffe]
Successors: [0x7bc]
---
0x7b7 JUMPDEST
0x7b8 PUSH1 0x1
0x7ba SWAP1
0x7bb POP
---
0x7b7: JUMPDEST 
0x7b8: V546 = 0x1
---
Entry stack: [V10, 0x22e, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x22e, S3, S2, S1, 0x1]

================================

Block 0x7bc
[0x7bc:0x7c2]
---
Predecessors: [0x7b7]
Successors: [0x22e]
---
0x7bc JUMPDEST
0x7bd SWAP4
0x7be SWAP3
0x7bf POP
0x7c0 POP
0x7c1 POP
0x7c2 JUMP
---
0x7bc: JUMPDEST 
0x7c2: JUMP 0x22e
---
Entry stack: [V10, 0x22e, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x7c3
[0x7c3:0x7d5]
---
Predecessors: [0x253]
Successors: [0x25b]
---
0x7c3 JUMPDEST
0x7c4 PUSH1 0x2
0x7c6 PUSH1 0x0
0x7c8 SWAP1
0x7c9 SLOAD
0x7ca SWAP1
0x7cb PUSH2 0x100
0x7ce EXP
0x7cf SWAP1
0x7d0 DIV
0x7d1 PUSH1 0xff
0x7d3 AND
0x7d4 DUP2
0x7d5 JUMP
---
0x7c3: JUMPDEST 
0x7c4: V547 = 0x2
0x7c6: V548 = 0x0
0x7c9: V549 = S[0x2]
0x7cb: V550 = 0x100
0x7ce: V551 = EXP 0x100 0x0
0x7d0: V552 = DIV V549 0x1
0x7d1: V553 = 0xff
0x7d3: V554 = AND 0xff V552
0x7d5: JUMP 0x25b
---
Entry stack: [V10, 0x25b]
Stack pops: 1
Stack additions: [S0, V554]
Exit stack: [V10, 0x25b, V554]

================================

Block 0x7d6
[0x7d6:0x821]
---
Predecessors: [0x282]
Successors: [0x822, 0x826]
---
0x7d6 JUMPDEST
0x7d7 PUSH1 0x0
0x7d9 DUP2
0x7da PUSH1 0x4
0x7dc PUSH1 0x0
0x7de CALLER
0x7df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f4 AND
0x7f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80a AND
0x80b DUP2
0x80c MSTORE
0x80d PUSH1 0x20
0x80f ADD
0x810 SWAP1
0x811 DUP2
0x812 MSTORE
0x813 PUSH1 0x20
0x815 ADD
0x816 PUSH1 0x0
0x818 SHA3
0x819 SLOAD
0x81a LT
0x81b ISZERO
0x81c ISZERO
0x81d ISZERO
0x81e PUSH2 0x826
0x821 JUMPI
---
0x7d6: JUMPDEST 
0x7d7: V555 = 0x0
0x7da: V556 = 0x4
0x7dc: V557 = 0x0
0x7de: V558 = CALLER
0x7df: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f4: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x7f5: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x80a: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x80c: M[0x0] = V562
0x80d: V563 = 0x20
0x80f: V564 = ADD 0x20 0x0
0x812: M[0x20] = 0x4
0x813: V565 = 0x20
0x815: V566 = ADD 0x20 0x20
0x816: V567 = 0x0
0x818: V568 = SHA3 0x0 0x40
0x819: V569 = S[V568]
0x81a: V570 = LT V569 V188
0x81b: V571 = ISZERO V570
0x81c: V572 = ISZERO V571
0x81d: V573 = ISZERO V572
0x81e: V574 = 0x826
0x821: JUMPI 0x826 V573
---
Entry stack: [V10, 0x298, V188]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V10, 0x298, V188, 0x0]

================================

Block 0x822
[0x822:0x825]
---
Predecessors: [0x7d6]
Successors: []
---
0x822 PUSH1 0x0
0x824 DUP1
0x825 REVERT
---
0x822: V575 = 0x0
0x825: REVERT 0x0 0x0
---
Entry stack: [V10, 0x298, V188, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x298, V188, 0x0]

================================

Block 0x826
[0x826:0x8d5]
---
Predecessors: [0x7d6]
Successors: [0x8d6]
---
0x826 JUMPDEST
0x827 DUP2
0x828 PUSH1 0x4
0x82a PUSH1 0x0
0x82c CALLER
0x82d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x842 AND
0x843 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x858 AND
0x859 DUP2
0x85a MSTORE
0x85b PUSH1 0x20
0x85d ADD
0x85e SWAP1
0x85f DUP2
0x860 MSTORE
0x861 PUSH1 0x20
0x863 ADD
0x864 PUSH1 0x0
0x866 SHA3
0x867 PUSH1 0x0
0x869 DUP3
0x86a DUP3
0x86b SLOAD
0x86c SUB
0x86d SWAP3
0x86e POP
0x86f POP
0x870 DUP2
0x871 SWAP1
0x872 SSTORE
0x873 POP
0x874 DUP2
0x875 PUSH1 0x3
0x877 PUSH1 0x0
0x879 DUP3
0x87a DUP3
0x87b SLOAD
0x87c SUB
0x87d SWAP3
0x87e POP
0x87f POP
0x880 DUP2
0x881 SWAP1
0x882 SSTORE
0x883 POP
0x884 CALLER
0x885 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89a AND
0x89b PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x8bc DUP4
0x8bd PUSH1 0x40
0x8bf MLOAD
0x8c0 DUP1
0x8c1 DUP3
0x8c2 DUP2
0x8c3 MSTORE
0x8c4 PUSH1 0x20
0x8c6 ADD
0x8c7 SWAP2
0x8c8 POP
0x8c9 POP
0x8ca PUSH1 0x40
0x8cc MLOAD
0x8cd DUP1
0x8ce SWAP2
0x8cf SUB
0x8d0 SWAP1
0x8d1 LOG2
0x8d2 PUSH1 0x1
0x8d4 SWAP1
0x8d5 POP
---
0x826: JUMPDEST 
0x828: V576 = 0x4
0x82a: V577 = 0x0
0x82c: V578 = CALLER
0x82d: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0x842: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V578
0x843: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x858: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x85a: M[0x0] = V582
0x85b: V583 = 0x20
0x85d: V584 = ADD 0x20 0x0
0x860: M[0x20] = 0x4
0x861: V585 = 0x20
0x863: V586 = ADD 0x20 0x20
0x864: V587 = 0x0
0x866: V588 = SHA3 0x0 0x40
0x867: V589 = 0x0
0x86b: V590 = S[V588]
0x86c: V591 = SUB V590 V188
0x872: S[V588] = V591
0x875: V592 = 0x3
0x877: V593 = 0x0
0x87b: V594 = S[0x3]
0x87c: V595 = SUB V594 V188
0x882: S[0x3] = V595
0x884: V596 = CALLER
0x885: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0x89a: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x89b: V599 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x8bd: V600 = 0x40
0x8bf: V601 = M[0x40]
0x8c3: M[V601] = V188
0x8c4: V602 = 0x20
0x8c6: V603 = ADD 0x20 V601
0x8ca: V604 = 0x40
0x8cc: V605 = M[0x40]
0x8cf: V606 = SUB V603 V605
0x8d1: LOG V605 V606 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V598
0x8d2: V607 = 0x1
---
Entry stack: [V10, 0x298, V188, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x298, V188, 0x1]

================================

Block 0x8d6
[0x8d6:0x8da]
---
Predecessors: [0x826]
Successors: [0x298]
---
0x8d6 JUMPDEST
0x8d7 SWAP2
0x8d8 SWAP1
0x8d9 POP
0x8da JUMP
---
0x8d6: JUMPDEST 
0x8da: JUMP 0x298
---
Entry stack: [V10, 0x298, V188, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x8db
[0x8db:0x8f2]
---
Predecessors: [0x2bd]
Successors: [0x2e9]
---
0x8db JUMPDEST
0x8dc PUSH1 0x4
0x8de PUSH1 0x20
0x8e0 MSTORE
0x8e1 DUP1
0x8e2 PUSH1 0x0
0x8e4 MSTORE
0x8e5 PUSH1 0x40
0x8e7 PUSH1 0x0
0x8e9 SHA3
0x8ea PUSH1 0x0
0x8ec SWAP2
0x8ed POP
0x8ee SWAP1
0x8ef POP
0x8f0 SLOAD
0x8f1 DUP2
0x8f2 JUMP
---
0x8db: JUMPDEST 
0x8dc: V608 = 0x4
0x8de: V609 = 0x20
0x8e0: M[0x20] = 0x4
0x8e2: V610 = 0x0
0x8e4: M[0x0] = V211
0x8e5: V611 = 0x40
0x8e7: V612 = 0x0
0x8e9: V613 = SHA3 0x0 0x40
0x8ea: V614 = 0x0
0x8f0: V615 = S[V613]
0x8f2: JUMP 0x2e9
---
Entry stack: [V10, 0x2e9, V211]
Stack pops: 2
Stack additions: [S1, V615]
Exit stack: [V10, 0x2e9, V615]

================================

Block 0x8f3
[0x8f3:0x93e]
---
Predecessors: [0x30a]
Successors: [0x93f, 0x943]
---
0x8f3 JUMPDEST
0x8f4 PUSH1 0x0
0x8f6 DUP2
0x8f7 PUSH1 0x4
0x8f9 PUSH1 0x0
0x8fb DUP6
0x8fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x911 AND
0x912 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x927 AND
0x928 DUP2
0x929 MSTORE
0x92a PUSH1 0x20
0x92c ADD
0x92d SWAP1
0x92e DUP2
0x92f MSTORE
0x930 PUSH1 0x20
0x932 ADD
0x933 PUSH1 0x0
0x935 SHA3
0x936 SLOAD
0x937 LT
0x938 ISZERO
0x939 ISZERO
0x93a ISZERO
0x93b PUSH2 0x943
0x93e JUMPI
---
0x8f3: JUMPDEST 
0x8f4: V616 = 0x0
0x8f7: V617 = 0x4
0x8f9: V618 = 0x0
0x8fc: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x911: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x912: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x927: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x929: M[0x0] = V622
0x92a: V623 = 0x20
0x92c: V624 = ADD 0x20 0x0
0x92f: M[0x20] = 0x4
0x930: V625 = 0x20
0x932: V626 = ADD 0x20 0x20
0x933: V627 = 0x0
0x935: V628 = SHA3 0x0 0x40
0x936: V629 = S[V628]
0x937: V630 = LT V629 V233
0x938: V631 = ISZERO V630
0x939: V632 = ISZERO V631
0x93a: V633 = ISZERO V632
0x93b: V634 = 0x943
0x93e: JUMPI 0x943 V633
---
Entry stack: [V10, 0x33f, V230, V233]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x33f, V230, V233, 0x0]

================================

Block 0x93f
[0x93f:0x942]
---
Predecessors: [0x8f3]
Successors: []
---
0x93f PUSH1 0x0
0x941 DUP1
0x942 REVERT
---
0x93f: V635 = 0x0
0x942: REVERT 0x0 0x0
---
Entry stack: [V10, 0x33f, V230, V233, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x33f, V230, V233, 0x0]

================================

Block 0x943
[0x943:0x9c9]
---
Predecessors: [0x8f3]
Successors: [0x9ca, 0x9ce]
---
0x943 JUMPDEST
0x944 PUSH1 0x5
0x946 PUSH1 0x0
0x948 DUP5
0x949 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95e AND
0x95f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x974 AND
0x975 DUP2
0x976 MSTORE
0x977 PUSH1 0x20
0x979 ADD
0x97a SWAP1
0x97b DUP2
0x97c MSTORE
0x97d PUSH1 0x20
0x97f ADD
0x980 PUSH1 0x0
0x982 SHA3
0x983 PUSH1 0x0
0x985 CALLER
0x986 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99b AND
0x99c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b1 AND
0x9b2 DUP2
0x9b3 MSTORE
0x9b4 PUSH1 0x20
0x9b6 ADD
0x9b7 SWAP1
0x9b8 DUP2
0x9b9 MSTORE
0x9ba PUSH1 0x20
0x9bc ADD
0x9bd PUSH1 0x0
0x9bf SHA3
0x9c0 SLOAD
0x9c1 DUP3
0x9c2 GT
0x9c3 ISZERO
0x9c4 ISZERO
0x9c5 ISZERO
0x9c6 PUSH2 0x9ce
0x9c9 JUMPI
---
0x943: JUMPDEST 
0x944: V636 = 0x5
0x946: V637 = 0x0
0x949: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x95e: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x95f: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0x974: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x976: M[0x0] = V641
0x977: V642 = 0x20
0x979: V643 = ADD 0x20 0x0
0x97c: M[0x20] = 0x5
0x97d: V644 = 0x20
0x97f: V645 = ADD 0x20 0x20
0x980: V646 = 0x0
0x982: V647 = SHA3 0x0 0x40
0x983: V648 = 0x0
0x985: V649 = CALLER
0x986: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0x99b: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x99c: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b1: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x9b3: M[0x0] = V653
0x9b4: V654 = 0x20
0x9b6: V655 = ADD 0x20 0x0
0x9b9: M[0x20] = V647
0x9ba: V656 = 0x20
0x9bc: V657 = ADD 0x20 0x20
0x9bd: V658 = 0x0
0x9bf: V659 = SHA3 0x0 0x40
0x9c0: V660 = S[V659]
0x9c2: V661 = GT V233 V660
0x9c3: V662 = ISZERO V661
0x9c4: V663 = ISZERO V662
0x9c5: V664 = ISZERO V663
0x9c6: V665 = 0x9ce
0x9c9: JUMPI 0x9ce V664
---
Entry stack: [V10, 0x33f, V230, V233, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x33f, V230, V233, 0x0]

================================

Block 0x9ca
[0x9ca:0x9cd]
---
Predecessors: [0x943]
Successors: []
---
0x9ca PUSH1 0x0
0x9cc DUP1
0x9cd REVERT
---
0x9ca: V666 = 0x0
0x9cd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x33f, V230, V233, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x33f, V230, V233, 0x0]

================================

Block 0x9ce
[0x9ce:0xb07]
---
Predecessors: [0x943]
Successors: [0xb08]
---
0x9ce JUMPDEST
0x9cf DUP2
0x9d0 PUSH1 0x4
0x9d2 PUSH1 0x0
0x9d4 DUP6
0x9d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ea AND
0x9eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa00 AND
0xa01 DUP2
0xa02 MSTORE
0xa03 PUSH1 0x20
0xa05 ADD
0xa06 SWAP1
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b ADD
0xa0c PUSH1 0x0
0xa0e SHA3
0xa0f PUSH1 0x0
0xa11 DUP3
0xa12 DUP3
0xa13 SLOAD
0xa14 SUB
0xa15 SWAP3
0xa16 POP
0xa17 POP
0xa18 DUP2
0xa19 SWAP1
0xa1a SSTORE
0xa1b POP
0xa1c DUP2
0xa1d PUSH1 0x5
0xa1f PUSH1 0x0
0xa21 DUP6
0xa22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa37 AND
0xa38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4d AND
0xa4e DUP2
0xa4f MSTORE
0xa50 PUSH1 0x20
0xa52 ADD
0xa53 SWAP1
0xa54 DUP2
0xa55 MSTORE
0xa56 PUSH1 0x20
0xa58 ADD
0xa59 PUSH1 0x0
0xa5b SHA3
0xa5c PUSH1 0x0
0xa5e CALLER
0xa5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa74 AND
0xa75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8a AND
0xa8b DUP2
0xa8c MSTORE
0xa8d PUSH1 0x20
0xa8f ADD
0xa90 SWAP1
0xa91 DUP2
0xa92 MSTORE
0xa93 PUSH1 0x20
0xa95 ADD
0xa96 PUSH1 0x0
0xa98 SHA3
0xa99 PUSH1 0x0
0xa9b DUP3
0xa9c DUP3
0xa9d SLOAD
0xa9e SUB
0xa9f SWAP3
0xaa0 POP
0xaa1 POP
0xaa2 DUP2
0xaa3 SWAP1
0xaa4 SSTORE
0xaa5 POP
0xaa6 DUP2
0xaa7 PUSH1 0x3
0xaa9 PUSH1 0x0
0xaab DUP3
0xaac DUP3
0xaad SLOAD
0xaae SUB
0xaaf SWAP3
0xab0 POP
0xab1 POP
0xab2 DUP2
0xab3 SWAP1
0xab4 SSTORE
0xab5 POP
0xab6 DUP3
0xab7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacc AND
0xacd PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0xaee DUP4
0xaef PUSH1 0x40
0xaf1 MLOAD
0xaf2 DUP1
0xaf3 DUP3
0xaf4 DUP2
0xaf5 MSTORE
0xaf6 PUSH1 0x20
0xaf8 ADD
0xaf9 SWAP2
0xafa POP
0xafb POP
0xafc PUSH1 0x40
0xafe MLOAD
0xaff DUP1
0xb00 SWAP2
0xb01 SUB
0xb02 SWAP1
0xb03 LOG2
0xb04 PUSH1 0x1
0xb06 SWAP1
0xb07 POP
---
0x9ce: JUMPDEST 
0x9d0: V667 = 0x4
0x9d2: V668 = 0x0
0x9d5: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ea: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x9eb: V671 = 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V670
0xa02: M[0x0] = V672
0xa03: V673 = 0x20
0xa05: V674 = ADD 0x20 0x0
0xa08: M[0x20] = 0x4
0xa09: V675 = 0x20
0xa0b: V676 = ADD 0x20 0x20
0xa0c: V677 = 0x0
0xa0e: V678 = SHA3 0x0 0x40
0xa0f: V679 = 0x0
0xa13: V680 = S[V678]
0xa14: V681 = SUB V680 V233
0xa1a: S[V678] = V681
0xa1d: V682 = 0x5
0xa1f: V683 = 0x0
0xa22: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xa37: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0xa38: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4d: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0xa4f: M[0x0] = V687
0xa50: V688 = 0x20
0xa52: V689 = ADD 0x20 0x0
0xa55: M[0x20] = 0x5
0xa56: V690 = 0x20
0xa58: V691 = ADD 0x20 0x20
0xa59: V692 = 0x0
0xa5b: V693 = SHA3 0x0 0x40
0xa5c: V694 = 0x0
0xa5e: V695 = CALLER
0xa5f: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xa74: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V695
0xa75: V698 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8a: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0xa8c: M[0x0] = V699
0xa8d: V700 = 0x20
0xa8f: V701 = ADD 0x20 0x0
0xa92: M[0x20] = V693
0xa93: V702 = 0x20
0xa95: V703 = ADD 0x20 0x20
0xa96: V704 = 0x0
0xa98: V705 = SHA3 0x0 0x40
0xa99: V706 = 0x0
0xa9d: V707 = S[V705]
0xa9e: V708 = SUB V707 V233
0xaa4: S[V705] = V708
0xaa7: V709 = 0x3
0xaa9: V710 = 0x0
0xaad: V711 = S[0x3]
0xaae: V712 = SUB V711 V233
0xab4: S[0x3] = V712
0xab7: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0xacd: V715 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0xaef: V716 = 0x40
0xaf1: V717 = M[0x40]
0xaf5: M[V717] = V233
0xaf6: V718 = 0x20
0xaf8: V719 = ADD 0x20 V717
0xafc: V720 = 0x40
0xafe: V721 = M[0x40]
0xb01: V722 = SUB V719 V721
0xb03: LOG V721 V722 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V714
0xb04: V723 = 0x1
---
Entry stack: [V10, 0x33f, V230, V233, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x33f, V230, V233, 0x1]

================================

Block 0xb08
[0xb08:0xb0d]
---
Predecessors: [0x9ce]
Successors: [0x33f]
---
0xb08 JUMPDEST
0xb09 SWAP3
0xb0a SWAP2
0xb0b POP
0xb0c POP
0xb0d JUMP
---
0xb08: JUMPDEST 
0xb0d: JUMP 0x33f
---
Entry stack: [V10, 0x33f, V230, V233, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xb0e
[0xb0e:0xb5d]
---
Predecessors: [0x364]
Successors: [0xb5e, 0xba4]
---
0xb0e JUMPDEST
0xb0f PUSH1 0x1
0xb11 DUP1
0xb12 SLOAD
0xb13 PUSH1 0x1
0xb15 DUP2
0xb16 PUSH1 0x1
0xb18 AND
0xb19 ISZERO
0xb1a PUSH2 0x100
0xb1d MUL
0xb1e SUB
0xb1f AND
0xb20 PUSH1 0x2
0xb22 SWAP1
0xb23 DIV
0xb24 DUP1
0xb25 PUSH1 0x1f
0xb27 ADD
0xb28 PUSH1 0x20
0xb2a DUP1
0xb2b SWAP2
0xb2c DIV
0xb2d MUL
0xb2e PUSH1 0x20
0xb30 ADD
0xb31 PUSH1 0x40
0xb33 MLOAD
0xb34 SWAP1
0xb35 DUP2
0xb36 ADD
0xb37 PUSH1 0x40
0xb39 MSTORE
0xb3a DUP1
0xb3b SWAP3
0xb3c SWAP2
0xb3d SWAP1
0xb3e DUP2
0xb3f DUP2
0xb40 MSTORE
0xb41 PUSH1 0x20
0xb43 ADD
0xb44 DUP3
0xb45 DUP1
0xb46 SLOAD
0xb47 PUSH1 0x1
0xb49 DUP2
0xb4a PUSH1 0x1
0xb4c AND
0xb4d ISZERO
0xb4e PUSH2 0x100
0xb51 MUL
0xb52 SUB
0xb53 AND
0xb54 PUSH1 0x2
0xb56 SWAP1
0xb57 DIV
0xb58 DUP1
0xb59 ISZERO
0xb5a PUSH2 0xba4
0xb5d JUMPI
---
0xb0e: JUMPDEST 
0xb0f: V724 = 0x1
0xb12: V725 = S[0x1]
0xb13: V726 = 0x1
0xb16: V727 = 0x1
0xb18: V728 = AND 0x1 V725
0xb19: V729 = ISZERO V728
0xb1a: V730 = 0x100
0xb1d: V731 = MUL 0x100 V729
0xb1e: V732 = SUB V731 0x1
0xb1f: V733 = AND V732 V725
0xb20: V734 = 0x2
0xb23: V735 = DIV V733 0x2
0xb25: V736 = 0x1f
0xb27: V737 = ADD 0x1f V735
0xb28: V738 = 0x20
0xb2c: V739 = DIV V737 0x20
0xb2d: V740 = MUL V739 0x20
0xb2e: V741 = 0x20
0xb30: V742 = ADD 0x20 V740
0xb31: V743 = 0x40
0xb33: V744 = M[0x40]
0xb36: V745 = ADD V744 V742
0xb37: V746 = 0x40
0xb39: M[0x40] = V745
0xb40: M[V744] = V735
0xb41: V747 = 0x20
0xb43: V748 = ADD 0x20 V744
0xb46: V749 = S[0x1]
0xb47: V750 = 0x1
0xb4a: V751 = 0x1
0xb4c: V752 = AND 0x1 V749
0xb4d: V753 = ISZERO V752
0xb4e: V754 = 0x100
0xb51: V755 = MUL 0x100 V753
0xb52: V756 = SUB V755 0x1
0xb53: V757 = AND V756 V749
0xb54: V758 = 0x2
0xb57: V759 = DIV V757 0x2
0xb59: V760 = ISZERO V759
0xb5a: V761 = 0xba4
0xb5d: JUMPI 0xba4 V760
---
Entry stack: [V10, 0x36c]
Stack pops: 0
Stack additions: [V744, 0x1, V735, V748, 0x1, V759]
Exit stack: [V10, 0x36c, V744, 0x1, V735, V748, 0x1, V759]

================================

Block 0xb5e
[0xb5e:0xb65]
---
Predecessors: [0xb0e]
Successors: [0xb66, 0xb79]
---
0xb5e DUP1
0xb5f PUSH1 0x1f
0xb61 LT
0xb62 PUSH2 0xb79
0xb65 JUMPI
---
0xb5f: V762 = 0x1f
0xb61: V763 = LT 0x1f V759
0xb62: V764 = 0xb79
0xb65: JUMPI 0xb79 V763
---
Entry stack: [V10, 0x36c, V744, 0x1, V735, V748, 0x1, V759]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x36c, V744, 0x1, V735, V748, 0x1, V759]

================================

Block 0xb66
[0xb66:0xb78]
---
Predecessors: [0xb5e]
Successors: [0xba4]
---
0xb66 PUSH2 0x100
0xb69 DUP1
0xb6a DUP4
0xb6b SLOAD
0xb6c DIV
0xb6d MUL
0xb6e DUP4
0xb6f MSTORE
0xb70 SWAP2
0xb71 PUSH1 0x20
0xb73 ADD
0xb74 SWAP2
0xb75 PUSH2 0xba4
0xb78 JUMP
---
0xb66: V765 = 0x100
0xb6b: V766 = S[0x1]
0xb6c: V767 = DIV V766 0x100
0xb6d: V768 = MUL V767 0x100
0xb6f: M[V748] = V768
0xb71: V769 = 0x20
0xb73: V770 = ADD 0x20 V748
0xb75: V771 = 0xba4
0xb78: JUMP 0xba4
---
Entry stack: [V10, 0x36c, V744, 0x1, V735, V748, 0x1, V759]
Stack pops: 3
Stack additions: [V770, S1, S0]
Exit stack: [V10, 0x36c, V744, 0x1, V735, V770, 0x1, V759]

================================

Block 0xb79
[0xb79:0xb86]
---
Predecessors: [0xb5e]
Successors: [0xb87]
---
0xb79 JUMPDEST
0xb7a DUP3
0xb7b ADD
0xb7c SWAP2
0xb7d SWAP1
0xb7e PUSH1 0x0
0xb80 MSTORE
0xb81 PUSH1 0x20
0xb83 PUSH1 0x0
0xb85 SHA3
0xb86 SWAP1
---
0xb79: JUMPDEST 
0xb7b: V772 = ADD V748 V759
0xb7e: V773 = 0x0
0xb80: M[0x0] = 0x1
0xb81: V774 = 0x20
0xb83: V775 = 0x0
0xb85: V776 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x36c, V744, 0x1, V735, V748, 0x1, V759]
Stack pops: 3
Stack additions: [V772, V776, S2]
Exit stack: [V10, 0x36c, V744, 0x1, V735, V772, V776, V748]

================================

Block 0xb87
[0xb87:0xb9a]
---
Predecessors: [0xb79, 0xb87]
Successors: [0xb87, 0xb9b]
---
0xb87 JUMPDEST
0xb88 DUP2
0xb89 SLOAD
0xb8a DUP2
0xb8b MSTORE
0xb8c SWAP1
0xb8d PUSH1 0x1
0xb8f ADD
0xb90 SWAP1
0xb91 PUSH1 0x20
0xb93 ADD
0xb94 DUP1
0xb95 DUP4
0xb96 GT
0xb97 PUSH2 0xb87
0xb9a JUMPI
---
0xb87: JUMPDEST 
0xb89: V777 = S[S1]
0xb8b: M[S0] = V777
0xb8d: V778 = 0x1
0xb8f: V779 = ADD 0x1 S1
0xb91: V780 = 0x20
0xb93: V781 = ADD 0x20 S0
0xb96: V782 = GT V772 V781
0xb97: V783 = 0xb87
0xb9a: JUMPI 0xb87 V782
---
Entry stack: [V10, 0x36c, V744, 0x1, V735, V772, S1, S0]
Stack pops: 3
Stack additions: [S2, V779, V781]
Exit stack: [V10, 0x36c, V744, 0x1, V735, V772, V779, V781]

================================

Block 0xb9b
[0xb9b:0xba3]
---
Predecessors: [0xb87]
Successors: [0xba4]
---
0xb9b DUP3
0xb9c SWAP1
0xb9d SUB
0xb9e PUSH1 0x1f
0xba0 AND
0xba1 DUP3
0xba2 ADD
0xba3 SWAP2
---
0xb9d: V784 = SUB V781 V772
0xb9e: V785 = 0x1f
0xba0: V786 = AND 0x1f V784
0xba2: V787 = ADD V772 V786
---
Entry stack: [V10, 0x36c, V744, 0x1, V735, V772, V779, V781]
Stack pops: 3
Stack additions: [V787, S1, S2]
Exit stack: [V10, 0x36c, V744, 0x1, V735, V787, V779, V772]

================================

Block 0xba4
[0xba4:0xbab]
---
Predecessors: [0xb0e, 0xb66, 0xb9b]
Successors: [0x36c]
---
0xba4 JUMPDEST
0xba5 POP
0xba6 POP
0xba7 POP
0xba8 POP
0xba9 POP
0xbaa DUP2
0xbab JUMP
---
0xba4: JUMPDEST 
0xbab: JUMP 0x36c
---
Entry stack: [V10, 0x36c, V744, 0x1, V735, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x36c, V744]

================================

Block 0xbac
[0xbac:0xbb6]
---
Predecessors: [0x3f3]
Successors: [0xced]
---
0xbac JUMPDEST
0xbad PUSH2 0xbb7
0xbb0 CALLER
0xbb1 DUP4
0xbb2 DUP4
0xbb3 PUSH2 0xced
0xbb6 JUMP
---
0xbac: JUMPDEST 
0xbad: V788 = 0xbb7
0xbb0: V789 = CALLER
0xbb3: V790 = 0xced
0xbb6: JUMP 0xced
---
Entry stack: [V10, 0x428, V303, V306]
Stack pops: 2
Stack additions: [S1, S0, 0xbb7, V789, S1, S0]
Exit stack: [V10, 0x428, V303, V306, 0xbb7, V789, V303, V306]

================================

Block 0xbb7
[0xbb7:0xbb7]
---
Predecessors: [0xffe]
Successors: [0xbb8]
---
0xbb7 JUMPDEST
---
0xbb7: JUMPDEST 
---
Entry stack: [V10, 0x22e, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S3, S2, S1, S0]

================================

Block 0xbb8
[0xbb8:0xbbb]
---
Predecessors: [0xbb7]
Successors: [0x428]
---
0xbb8 JUMPDEST
0xbb9 POP
0xbba POP
0xbbb JUMP
---
0xbb8: JUMPDEST 
0xbbb: JUMP S2
---
Entry stack: [V10, 0x22e, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x22e, S3]

================================

Block 0xbbc
[0xbbc:0xbc3]
---
Predecessors: [0x435]
Successors: [0xbc4]
---
0xbbc JUMPDEST
0xbbd PUSH1 0x0
0xbbf DUP1
0xbc0 PUSH1 0x0
0xbc2 SWAP1
0xbc3 POP
---
0xbbc: JUMPDEST 
0xbbd: V791 = 0x0
0xbc0: V792 = 0x0
---
Entry stack: [V10, 0x4e1, V318, V333, V353]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, 0x0]

================================

Block 0xbc4
[0xbc4:0xbcd]
---
Predecessors: [0xbbc, 0xcae]
Successors: [0xbce, 0xcbc]
---
0xbc4 JUMPDEST
0xbc5 DUP4
0xbc6 MLOAD
0xbc7 DUP2
0xbc8 LT
0xbc9 ISZERO
0xbca PUSH2 0xcbc
0xbcd JUMPI
---
0xbc4: JUMPDEST 
0xbc6: V793 = M[V333]
0xbc8: V794 = LT S0 V793
0xbc9: V795 = ISZERO V794
0xbca: V796 = 0xcbc
0xbcd: JUMPI 0xcbc V795
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S0]

================================

Block 0xbce
[0xbce:0xbf5]
---
Predecessors: [0xbc4]
Successors: [0xbf6, 0xbf7]
---
0xbce DUP5
0xbcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe4 AND
0xbe5 PUSH4 0xa9059cbb
0xbea DUP6
0xbeb DUP4
0xbec DUP2
0xbed MLOAD
0xbee DUP2
0xbef LT
0xbf0 ISZERO
0xbf1 ISZERO
0xbf2 PUSH2 0xbf7
0xbf5 JUMPI
---
0xbcf: V797 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe4: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0xbe5: V799 = 0xa9059cbb
0xbed: V800 = M[V333]
0xbef: V801 = LT S0 V800
0xbf0: V802 = ISZERO V801
0xbf1: V803 = ISZERO V802
0xbf2: V804 = 0xbf7
0xbf5: JUMPI 0xbf7 V803
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V798, 0xa9059cbb, S3, S0]
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S0, V798, 0xa9059cbb, V333, S0]

================================

Block 0xbf6
[0xbf6:0xbf6]
---
Predecessors: [0xbce]
Successors: []
---
0xbf6 INVALID
---
0xbf6: INVALID 
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S4, V798, 0xa9059cbb, V333, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S4, V798, 0xa9059cbb, V333, S0]

================================

Block 0xbf7
[0xbf7:0xc0d]
---
Predecessors: [0xbce]
Successors: [0xc0e, 0xc0f]
---
0xbf7 JUMPDEST
0xbf8 SWAP1
0xbf9 PUSH1 0x20
0xbfb ADD
0xbfc SWAP1
0xbfd PUSH1 0x20
0xbff MUL
0xc00 ADD
0xc01 MLOAD
0xc02 DUP6
0xc03 DUP5
0xc04 DUP2
0xc05 MLOAD
0xc06 DUP2
0xc07 LT
0xc08 ISZERO
0xc09 ISZERO
0xc0a PUSH2 0xc0f
0xc0d JUMPI
---
0xbf7: JUMPDEST 
0xbf9: V805 = 0x20
0xbfb: V806 = ADD 0x20 V333
0xbfd: V807 = 0x20
0xbff: V808 = MUL 0x20 S0
0xc00: V809 = ADD V808 V806
0xc01: V810 = M[V809]
0xc05: V811 = M[V353]
0xc07: V812 = LT S4 V811
0xc08: V813 = ISZERO V812
0xc09: V814 = ISZERO V813
0xc0a: V815 = 0xc0f
0xc0d: JUMPI 0xc0f V814
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S4, V798, 0xa9059cbb, V333, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V810, S6, S4]
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S4, V798, 0xa9059cbb, V810, V353, S4]

================================

Block 0xc0e
[0xc0e:0xc0e]
---
Predecessors: [0xbf7]
Successors: []
---
0xc0e INVALID
---
0xc0e: INVALID 
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S5, V798, 0xa9059cbb, V810, V353, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S5, V798, 0xa9059cbb, V810, V353, S0]

================================

Block 0xc0f
[0xc0f:0xc98]
---
Predecessors: [0xbf7]
Successors: [0xc99, 0xc9d]
---
0xc0f JUMPDEST
0xc10 SWAP1
0xc11 PUSH1 0x20
0xc13 ADD
0xc14 SWAP1
0xc15 PUSH1 0x20
0xc17 MUL
0xc18 ADD
0xc19 MLOAD
0xc1a PUSH1 0x40
0xc1c MLOAD
0xc1d DUP4
0xc1e PUSH4 0xffffffff
0xc23 AND
0xc24 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc42 MUL
0xc43 DUP2
0xc44 MSTORE
0xc45 PUSH1 0x4
0xc47 ADD
0xc48 DUP1
0xc49 DUP4
0xc4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5f AND
0xc60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc75 AND
0xc76 DUP2
0xc77 MSTORE
0xc78 PUSH1 0x20
0xc7a ADD
0xc7b DUP3
0xc7c DUP2
0xc7d MSTORE
0xc7e PUSH1 0x20
0xc80 ADD
0xc81 SWAP3
0xc82 POP
0xc83 POP
0xc84 POP
0xc85 PUSH1 0x0
0xc87 PUSH1 0x40
0xc89 MLOAD
0xc8a DUP1
0xc8b DUP4
0xc8c SUB
0xc8d DUP2
0xc8e PUSH1 0x0
0xc90 DUP8
0xc91 DUP1
0xc92 EXTCODESIZE
0xc93 ISZERO
0xc94 ISZERO
0xc95 PUSH2 0xc9d
0xc98 JUMPI
---
0xc0f: JUMPDEST 
0xc11: V816 = 0x20
0xc13: V817 = ADD 0x20 V353
0xc15: V818 = 0x20
0xc17: V819 = MUL 0x20 S0
0xc18: V820 = ADD V819 V817
0xc19: V821 = M[V820]
0xc1a: V822 = 0x40
0xc1c: V823 = M[0x40]
0xc1e: V824 = 0xffffffff
0xc23: V825 = AND 0xffffffff 0xa9059cbb
0xc24: V826 = 0x100000000000000000000000000000000000000000000000000000000
0xc42: V827 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc44: M[V823] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc45: V828 = 0x4
0xc47: V829 = ADD 0x4 V823
0xc4a: V830 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5f: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V810
0xc60: V832 = 0xffffffffffffffffffffffffffffffffffffffff
0xc75: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V831
0xc77: M[V829] = V833
0xc78: V834 = 0x20
0xc7a: V835 = ADD 0x20 V829
0xc7d: M[V835] = V821
0xc7e: V836 = 0x20
0xc80: V837 = ADD 0x20 V835
0xc85: V838 = 0x0
0xc87: V839 = 0x40
0xc89: V840 = M[0x40]
0xc8c: V841 = SUB V837 V840
0xc8e: V842 = 0x0
0xc92: V843 = EXTCODESIZE V798
0xc93: V844 = ISZERO V843
0xc94: V845 = ISZERO V844
0xc95: V846 = 0xc9d
0xc98: JUMPI 0xc9d V845
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S5, V798, 0xa9059cbb, V810, V353, S0]
Stack pops: 5
Stack additions: [S4, S3, V837, 0x0, V840, V841, V840, 0x0, S4]
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S5, V798, 0xa9059cbb, V837, 0x0, V840, V841, V840, 0x0, V798]

================================

Block 0xc99
[0xc99:0xc9c]
---
Predecessors: [0xc0f]
Successors: []
---
0xc99 PUSH1 0x0
0xc9b DUP1
0xc9c REVERT
---
0xc99: V847 = 0x0
0xc9c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S9, V798, 0xa9059cbb, V837, 0x0, V840, V841, V840, 0x0, V798]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S9, V798, 0xa9059cbb, V837, 0x0, V840, V841, V840, 0x0, V798]

================================

Block 0xc9d
[0xc9d:0xca9]
---
Predecessors: [0xc0f]
Successors: [0xcaa, 0xcae]
---
0xc9d JUMPDEST
0xc9e PUSH2 0x2c6
0xca1 GAS
0xca2 SUB
0xca3 CALL
0xca4 ISZERO
0xca5 ISZERO
0xca6 PUSH2 0xcae
0xca9 JUMPI
---
0xc9d: JUMPDEST 
0xc9e: V848 = 0x2c6
0xca1: V849 = GAS
0xca2: V850 = SUB V849 0x2c6
0xca3: V851 = CALL V850 V798 0x0 V840 V841 V840 0x0
0xca4: V852 = ISZERO V851
0xca5: V853 = ISZERO V852
0xca6: V854 = 0xcae
0xca9: JUMPI 0xcae V853
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S9, V798, 0xa9059cbb, V837, 0x0, V840, V841, V840, 0x0, V798]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S9, V798, 0xa9059cbb, V837]

================================

Block 0xcaa
[0xcaa:0xcad]
---
Predecessors: [0xc9d]
Successors: []
---
0xcaa PUSH1 0x0
0xcac DUP1
0xcad REVERT
---
0xcaa: V855 = 0x0
0xcad: REVERT 0x0 0x0
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S3, V798, 0xa9059cbb, V837]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, S3, V798, 0xa9059cbb, V837]

================================

Block 0xcae
[0xcae:0xcbb]
---
Predecessors: [0xc9d]
Successors: [0xbc4]
---
0xcae JUMPDEST
0xcaf POP
0xcb0 POP
0xcb1 POP
0xcb2 PUSH1 0x1
0xcb4 DUP2
0xcb5 ADD
0xcb6 SWAP1
0xcb7 POP
0xcb8 PUSH2 0xbc4
0xcbb JUMP
---
0xcae: JUMPDEST 
0xcb2: V856 = 0x1
0xcb5: V857 = ADD S3 0x1
0xcb8: V858 = 0xbc4
0xcbb: JUMP 0xbc4
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S3, V798, 0xa9059cbb, V837]
Stack pops: 4
Stack additions: [V857]
Exit stack: [V10, 0x4e1, V318, V333, V353, 0x0, V857]

================================

Block 0xcbc
[0xcbc:0xcbf]
---
Predecessors: [0xbc4]
Successors: [0xcc0]
---
0xcbc JUMPDEST
0xcbd DUP1
0xcbe SWAP2
0xcbf POP
---
0xcbc: JUMPDEST 
---
Entry stack: [V10, 0x4e1, V318, V333, V353, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x4e1, V318, V333, V353, S0, S0]

================================

Block 0xcc0
[0xcc0:0xcc7]
---
Predecessors: [0xcbc]
Successors: [0x4e1]
---
0xcc0 JUMPDEST
0xcc1 POP
0xcc2 SWAP4
0xcc3 SWAP3
0xcc4 POP
0xcc5 POP
0xcc6 POP
0xcc7 JUMP
---
0xcc0: JUMPDEST 
0xcc7: JUMP 0x4e1
---
Entry stack: [V10, 0x4e1, V318, V333, V353, S1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, S1]

================================

Block 0xcc8
[0xcc8:0xcec]
---
Predecessors: [0x502]
Successors: [0x54d]
---
0xcc8 JUMPDEST
0xcc9 PUSH1 0x5
0xccb PUSH1 0x20
0xccd MSTORE
0xcce DUP2
0xccf PUSH1 0x0
0xcd1 MSTORE
0xcd2 PUSH1 0x40
0xcd4 PUSH1 0x0
0xcd6 SHA3
0xcd7 PUSH1 0x20
0xcd9 MSTORE
0xcda DUP1
0xcdb PUSH1 0x0
0xcdd MSTORE
0xcde PUSH1 0x40
0xce0 PUSH1 0x0
0xce2 SHA3
0xce3 PUSH1 0x0
0xce5 SWAP2
0xce6 POP
0xce7 SWAP2
0xce8 POP
0xce9 POP
0xcea SLOAD
0xceb DUP2
0xcec JUMP
---
0xcc8: JUMPDEST 
0xcc9: V859 = 0x5
0xccb: V860 = 0x20
0xccd: M[0x20] = 0x5
0xccf: V861 = 0x0
0xcd1: M[0x0] = V377
0xcd2: V862 = 0x40
0xcd4: V863 = 0x0
0xcd6: V864 = SHA3 0x0 0x40
0xcd7: V865 = 0x20
0xcd9: M[0x20] = V864
0xcdb: V866 = 0x0
0xcdd: M[0x0] = V382
0xcde: V867 = 0x40
0xce0: V868 = 0x0
0xce2: V869 = SHA3 0x0 0x40
0xce3: V870 = 0x0
0xcea: V871 = S[V869]
0xcec: JUMP 0x54d
---
Entry stack: [V10, 0x54d, V377, V382]
Stack pops: 3
Stack additions: [S2, V871]
Exit stack: [V10, 0x54d, V871]

================================

Block 0xced
[0xced:0xd0f]
---
Predecessors: [0x722, 0xbac]
Successors: [0xd10, 0xd14]
---
0xced JUMPDEST
0xcee PUSH1 0x0
0xcf0 DUP1
0xcf1 DUP4
0xcf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd07 AND
0xd08 EQ
0xd09 ISZERO
0xd0a ISZERO
0xd0b ISZERO
0xd0c PUSH2 0xd14
0xd0f JUMPI
---
0xced: JUMPDEST 
0xcee: V872 = 0x0
0xcf2: V873 = 0xffffffffffffffffffffffffffffffffffffffff
0xd07: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xd08: V875 = EQ V874 0x0
0xd09: V876 = ISZERO V875
0xd0a: V877 = ISZERO V876
0xd0b: V878 = ISZERO V877
0xd0c: V879 = 0xd14
0xd0f: JUMPI 0xd14 V878
---
Entry stack: [V10, 0x22e, S7, S6, S5, S4, {0x7b7, 0xbb7}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x22e, S7, S6, S5, S4, {0x7b7, 0xbb7}, S2, S1, S0, 0x0]

================================

Block 0xd10
[0xd10:0xd13]
---
Predecessors: [0xced]
Successors: []
---
0xd10 PUSH1 0x0
0xd12 DUP1
0xd13 REVERT
---
0xd10: V880 = 0x0
0xd13: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]

================================

Block 0xd14
[0xd14:0xd5d]
---
Predecessors: [0xced]
Successors: [0xd5e, 0xd62]
---
0xd14 JUMPDEST
0xd15 DUP2
0xd16 PUSH1 0x4
0xd18 PUSH1 0x0
0xd1a DUP7
0xd1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd30 AND
0xd31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd46 AND
0xd47 DUP2
0xd48 MSTORE
0xd49 PUSH1 0x20
0xd4b ADD
0xd4c SWAP1
0xd4d DUP2
0xd4e MSTORE
0xd4f PUSH1 0x20
0xd51 ADD
0xd52 PUSH1 0x0
0xd54 SHA3
0xd55 SLOAD
0xd56 LT
0xd57 ISZERO
0xd58 ISZERO
0xd59 ISZERO
0xd5a PUSH2 0xd62
0xd5d JUMPI
---
0xd14: JUMPDEST 
0xd16: V881 = 0x4
0xd18: V882 = 0x0
0xd1b: V883 = 0xffffffffffffffffffffffffffffffffffffffff
0xd30: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd31: V885 = 0xffffffffffffffffffffffffffffffffffffffff
0xd46: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0xd48: M[0x0] = V886
0xd49: V887 = 0x20
0xd4b: V888 = ADD 0x20 0x0
0xd4e: M[0x20] = 0x4
0xd4f: V889 = 0x20
0xd51: V890 = ADD 0x20 0x20
0xd52: V891 = 0x0
0xd54: V892 = SHA3 0x0 0x40
0xd55: V893 = S[V892]
0xd56: V894 = LT V893 S1
0xd57: V895 = ISZERO V894
0xd58: V896 = ISZERO V895
0xd59: V897 = ISZERO V896
0xd5a: V898 = 0xd62
0xd5d: JUMPI 0xd62 V897
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]

================================

Block 0xd5e
[0xd5e:0xd61]
---
Predecessors: [0xd14]
Successors: []
---
0xd5e PUSH1 0x0
0xd60 DUP1
0xd61 REVERT
---
0xd5e: V899 = 0x0
0xd61: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]

================================

Block 0xd62
[0xd62:0xdeb]
---
Predecessors: [0xd14]
Successors: [0xdec, 0xdf0]
---
0xd62 JUMPDEST
0xd63 PUSH1 0x4
0xd65 PUSH1 0x0
0xd67 DUP5
0xd68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7d AND
0xd7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd93 AND
0xd94 DUP2
0xd95 MSTORE
0xd96 PUSH1 0x20
0xd98 ADD
0xd99 SWAP1
0xd9a DUP2
0xd9b MSTORE
0xd9c PUSH1 0x20
0xd9e ADD
0xd9f PUSH1 0x0
0xda1 SHA3
0xda2 SLOAD
0xda3 DUP3
0xda4 PUSH1 0x4
0xda6 PUSH1 0x0
0xda8 DUP7
0xda9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdbe AND
0xdbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd4 AND
0xdd5 DUP2
0xdd6 MSTORE
0xdd7 PUSH1 0x20
0xdd9 ADD
0xdda SWAP1
0xddb DUP2
0xddc MSTORE
0xddd PUSH1 0x20
0xddf ADD
0xde0 PUSH1 0x0
0xde2 SHA3
0xde3 SLOAD
0xde4 ADD
0xde5 GT
0xde6 ISZERO
0xde7 ISZERO
0xde8 PUSH2 0xdf0
0xdeb JUMPI
---
0xd62: JUMPDEST 
0xd63: V900 = 0x4
0xd65: V901 = 0x0
0xd68: V902 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7d: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd7e: V904 = 0xffffffffffffffffffffffffffffffffffffffff
0xd93: V905 = AND 0xffffffffffffffffffffffffffffffffffffffff V903
0xd95: M[0x0] = V905
0xd96: V906 = 0x20
0xd98: V907 = ADD 0x20 0x0
0xd9b: M[0x20] = 0x4
0xd9c: V908 = 0x20
0xd9e: V909 = ADD 0x20 0x20
0xd9f: V910 = 0x0
0xda1: V911 = SHA3 0x0 0x40
0xda2: V912 = S[V911]
0xda4: V913 = 0x4
0xda6: V914 = 0x0
0xda9: V915 = 0xffffffffffffffffffffffffffffffffffffffff
0xdbe: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xdbf: V917 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd4: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0xdd6: M[0x0] = V918
0xdd7: V919 = 0x20
0xdd9: V920 = ADD 0x20 0x0
0xddc: M[0x20] = 0x4
0xddd: V921 = 0x20
0xddf: V922 = ADD 0x20 0x20
0xde0: V923 = 0x0
0xde2: V924 = SHA3 0x0 0x40
0xde3: V925 = S[V924]
0xde4: V926 = ADD V925 S1
0xde5: V927 = GT V926 V912
0xde6: V928 = ISZERO V927
0xde7: V929 = ISZERO V928
0xde8: V930 = 0xdf0
0xdeb: JUMPI 0xdf0 V929
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]

================================

Block 0xdec
[0xdec:0xdef]
---
Predecessors: [0xd62]
Successors: []
---
0xdec PUSH1 0x0
0xdee DUP1
0xdef REVERT
---
0xdec: V931 = 0x0
0xdef: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]

================================

Block 0xdf0
[0xdf0:0xffb]
---
Predecessors: [0xd62]
Successors: [0xffc, 0xffd]
---
0xdf0 JUMPDEST
0xdf1 PUSH1 0x4
0xdf3 PUSH1 0x0
0xdf5 DUP5
0xdf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0b AND
0xe0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe21 AND
0xe22 DUP2
0xe23 MSTORE
0xe24 PUSH1 0x20
0xe26 ADD
0xe27 SWAP1
0xe28 DUP2
0xe29 MSTORE
0xe2a PUSH1 0x20
0xe2c ADD
0xe2d PUSH1 0x0
0xe2f SHA3
0xe30 SLOAD
0xe31 PUSH1 0x4
0xe33 PUSH1 0x0
0xe35 DUP7
0xe36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4b AND
0xe4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe61 AND
0xe62 DUP2
0xe63 MSTORE
0xe64 PUSH1 0x20
0xe66 ADD
0xe67 SWAP1
0xe68 DUP2
0xe69 MSTORE
0xe6a PUSH1 0x20
0xe6c ADD
0xe6d PUSH1 0x0
0xe6f SHA3
0xe70 SLOAD
0xe71 ADD
0xe72 SWAP1
0xe73 POP
0xe74 DUP2
0xe75 PUSH1 0x4
0xe77 PUSH1 0x0
0xe79 DUP7
0xe7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8f AND
0xe90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea5 AND
0xea6 DUP2
0xea7 MSTORE
0xea8 PUSH1 0x20
0xeaa ADD
0xeab SWAP1
0xeac DUP2
0xead MSTORE
0xeae PUSH1 0x20
0xeb0 ADD
0xeb1 PUSH1 0x0
0xeb3 SHA3
0xeb4 PUSH1 0x0
0xeb6 DUP3
0xeb7 DUP3
0xeb8 SLOAD
0xeb9 SUB
0xeba SWAP3
0xebb POP
0xebc POP
0xebd DUP2
0xebe SWAP1
0xebf SSTORE
0xec0 POP
0xec1 DUP2
0xec2 PUSH1 0x4
0xec4 PUSH1 0x0
0xec6 DUP6
0xec7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedc AND
0xedd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef2 AND
0xef3 DUP2
0xef4 MSTORE
0xef5 PUSH1 0x20
0xef7 ADD
0xef8 SWAP1
0xef9 DUP2
0xefa MSTORE
0xefb PUSH1 0x20
0xefd ADD
0xefe PUSH1 0x0
0xf00 SHA3
0xf01 PUSH1 0x0
0xf03 DUP3
0xf04 DUP3
0xf05 SLOAD
0xf06 ADD
0xf07 SWAP3
0xf08 POP
0xf09 POP
0xf0a DUP2
0xf0b SWAP1
0xf0c SSTORE
0xf0d POP
0xf0e DUP3
0xf0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf24 AND
0xf25 DUP5
0xf26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3b AND
0xf3c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf5d DUP5
0xf5e PUSH1 0x40
0xf60 MLOAD
0xf61 DUP1
0xf62 DUP3
0xf63 DUP2
0xf64 MSTORE
0xf65 PUSH1 0x20
0xf67 ADD
0xf68 SWAP2
0xf69 POP
0xf6a POP
0xf6b PUSH1 0x40
0xf6d MLOAD
0xf6e DUP1
0xf6f SWAP2
0xf70 SUB
0xf71 SWAP1
0xf72 LOG3
0xf73 DUP1
0xf74 PUSH1 0x4
0xf76 PUSH1 0x0
0xf78 DUP6
0xf79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8e AND
0xf8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa4 AND
0xfa5 DUP2
0xfa6 MSTORE
0xfa7 PUSH1 0x20
0xfa9 ADD
0xfaa SWAP1
0xfab DUP2
0xfac MSTORE
0xfad PUSH1 0x20
0xfaf ADD
0xfb0 PUSH1 0x0
0xfb2 SHA3
0xfb3 SLOAD
0xfb4 PUSH1 0x4
0xfb6 PUSH1 0x0
0xfb8 DUP8
0xfb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfce AND
0xfcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe4 AND
0xfe5 DUP2
0xfe6 MSTORE
0xfe7 PUSH1 0x20
0xfe9 ADD
0xfea SWAP1
0xfeb DUP2
0xfec MSTORE
0xfed PUSH1 0x20
0xfef ADD
0xff0 PUSH1 0x0
0xff2 SHA3
0xff3 SLOAD
0xff4 ADD
0xff5 EQ
0xff6 ISZERO
0xff7 ISZERO
0xff8 PUSH2 0xffd
0xffb JUMPI
---
0xdf0: JUMPDEST 
0xdf1: V932 = 0x4
0xdf3: V933 = 0x0
0xdf6: V934 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0b: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xe0c: V936 = 0xffffffffffffffffffffffffffffffffffffffff
0xe21: V937 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0xe23: M[0x0] = V937
0xe24: V938 = 0x20
0xe26: V939 = ADD 0x20 0x0
0xe29: M[0x20] = 0x4
0xe2a: V940 = 0x20
0xe2c: V941 = ADD 0x20 0x20
0xe2d: V942 = 0x0
0xe2f: V943 = SHA3 0x0 0x40
0xe30: V944 = S[V943]
0xe31: V945 = 0x4
0xe33: V946 = 0x0
0xe36: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4b: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe4c: V949 = 0xffffffffffffffffffffffffffffffffffffffff
0xe61: V950 = AND 0xffffffffffffffffffffffffffffffffffffffff V948
0xe63: M[0x0] = V950
0xe64: V951 = 0x20
0xe66: V952 = ADD 0x20 0x0
0xe69: M[0x20] = 0x4
0xe6a: V953 = 0x20
0xe6c: V954 = ADD 0x20 0x20
0xe6d: V955 = 0x0
0xe6f: V956 = SHA3 0x0 0x40
0xe70: V957 = S[V956]
0xe71: V958 = ADD V957 V944
0xe75: V959 = 0x4
0xe77: V960 = 0x0
0xe7a: V961 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8f: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe90: V963 = 0xffffffffffffffffffffffffffffffffffffffff
0xea5: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0xea7: M[0x0] = V964
0xea8: V965 = 0x20
0xeaa: V966 = ADD 0x20 0x0
0xead: M[0x20] = 0x4
0xeae: V967 = 0x20
0xeb0: V968 = ADD 0x20 0x20
0xeb1: V969 = 0x0
0xeb3: V970 = SHA3 0x0 0x40
0xeb4: V971 = 0x0
0xeb8: V972 = S[V970]
0xeb9: V973 = SUB V972 S1
0xebf: S[V970] = V973
0xec2: V974 = 0x4
0xec4: V975 = 0x0
0xec7: V976 = 0xffffffffffffffffffffffffffffffffffffffff
0xedc: V977 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xedd: V978 = 0xffffffffffffffffffffffffffffffffffffffff
0xef2: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff V977
0xef4: M[0x0] = V979
0xef5: V980 = 0x20
0xef7: V981 = ADD 0x20 0x0
0xefa: M[0x20] = 0x4
0xefb: V982 = 0x20
0xefd: V983 = ADD 0x20 0x20
0xefe: V984 = 0x0
0xf00: V985 = SHA3 0x0 0x40
0xf01: V986 = 0x0
0xf05: V987 = S[V985]
0xf06: V988 = ADD V987 S1
0xf0c: S[V985] = V988
0xf0f: V989 = 0xffffffffffffffffffffffffffffffffffffffff
0xf24: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf26: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3b: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf3c: V993 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf5e: V994 = 0x40
0xf60: V995 = M[0x40]
0xf64: M[V995] = S1
0xf65: V996 = 0x20
0xf67: V997 = ADD 0x20 V995
0xf6b: V998 = 0x40
0xf6d: V999 = M[0x40]
0xf70: V1000 = SUB V997 V999
0xf72: LOG V999 V1000 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V992 V990
0xf74: V1001 = 0x4
0xf76: V1002 = 0x0
0xf79: V1003 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8e: V1004 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf8f: V1005 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa4: V1006 = AND 0xffffffffffffffffffffffffffffffffffffffff V1004
0xfa6: M[0x0] = V1006
0xfa7: V1007 = 0x20
0xfa9: V1008 = ADD 0x20 0x0
0xfac: M[0x20] = 0x4
0xfad: V1009 = 0x20
0xfaf: V1010 = ADD 0x20 0x20
0xfb0: V1011 = 0x0
0xfb2: V1012 = SHA3 0x0 0x40
0xfb3: V1013 = S[V1012]
0xfb4: V1014 = 0x4
0xfb6: V1015 = 0x0
0xfb9: V1016 = 0xffffffffffffffffffffffffffffffffffffffff
0xfce: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xfcf: V1018 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe4: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V1017
0xfe6: M[0x0] = V1019
0xfe7: V1020 = 0x20
0xfe9: V1021 = ADD 0x20 0x0
0xfec: M[0x20] = 0x4
0xfed: V1022 = 0x20
0xfef: V1023 = ADD 0x20 0x20
0xff0: V1024 = 0x0
0xff2: V1025 = SHA3 0x0 0x40
0xff3: V1026 = S[V1025]
0xff4: V1027 = ADD V1026 V1013
0xff5: V1028 = EQ V1027 V958
0xff6: V1029 = ISZERO V1028
0xff7: V1030 = ISZERO V1029
0xff8: V1031 = 0xffd
0xffb: JUMPI 0xffd V1030
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V958]
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, V958]

================================

Block 0xffc
[0xffc:0xffc]
---
Predecessors: [0xdf0]
Successors: []
---
0xffc INVALID
---
0xffc: INVALID 
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, V958]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, V958]

================================

Block 0xffd
[0xffd:0xffd]
---
Predecessors: [0xdf0]
Successors: [0xffe]
---
0xffd JUMPDEST
---
0xffd: JUMPDEST 
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, V958]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, V958]

================================

Block 0xffe
[0xffe:0x1003]
---
Predecessors: [0xffd]
Successors: [0x7b7, 0xbb7]
---
0xffe JUMPDEST
0xfff POP
0x1000 POP
0x1001 POP
0x1002 POP
0x1003 JUMP
---
0xffe: JUMPDEST 
0x1003: JUMP {0x7b7, 0xbb7}
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x7b7, 0xbb7}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5]

================================

Block 0x1004
[0x1004:0x1026]
---
Predecessors: []
Successors: [0x1027]
Has unresolved jump.
---
0x1004 STOP
0x1005 LOG1
0x1006 PUSH6 0x627a7a723058
0x100d SHA3
0x100e PUSH18 0xa7918e113725ef3c2926cf6907b5c9d28ed6
0x1021 DUP5
0x1022 ORIGIN
0x1023 MISSING 0xcd
0x1024 ISZERO
0x1025 SHL
0x1026 JUMPI
---
0x1004: STOP 
0x1005: LOG S0 S1 S2
0x1006: V1032 = 0x627a7a723058
0x100d: V1033 = SHA3 0x627a7a723058 S3
0x100e: V1034 = 0xa7918e113725ef3c2926cf6907b5c9d28ed6
0x1022: V1035 = ORIGIN
0x1023: MISSING 0xcd
0x1024: V1036 = ISZERO S0
0x1025: V1037 = SHL V1036 S1
0x1026: JUMPI V1037 S2
---
Entry stack: []
Stack pops: 0
Stack additions: [V1035, S6, 0xa7918e113725ef3c2926cf6907b5c9d28ed6, V1033, S4, S5, S6]
Exit stack: []

================================

Block 0x1027
[0x1027:0x102f]
---
Predecessors: [0x1004]
Successors: []
---
0x1027 DUP5
0x1028 MISSING 0xb2
0x1029 MISSING 0xa9
0x102a ADDMOD
0x102b NUMBER
0x102c MISSING 0x2b
0x102d SWAP2
0x102e STOP
0x102f MISSING 0x29
---
0x1028: MISSING 0xb2
0x1029: MISSING 0xa9
0x102a: V1038 = ADDMOD S0 S1 S2
0x102b: V1039 = NUMBER
0x102c: MISSING 0x2b
0x102e: STOP 
0x102f: MISSING 0x29
---
Entry stack: []
Stack pops: 29
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xbd
Exit block: 0x13e
Body: 0xbd, 0xc4, 0xc8, 0xd0, 0xf5, 0xfe, 0x106, 0x111, 0x125, 0x13e, 0x563, 0x5b3, 0x5bb, 0x5ce, 0x5dc, 0x5f0, 0x5f9

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x14c
Exit block: 0x18c
Body: 0x14c, 0x153, 0x157, 0x18c, 0x601, 0x689

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1a6
Exit block: 0x1b9
Body: 0x1a6, 0x1ad, 0x1b1, 0x1b9, 0x68f

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1cf
Exit block: 0x22e
Body: 0x1cf, 0x1d6, 0x1da, 0x22e, 0x695, 0x71e, 0x722, 0x7b7, 0x7bc

Function 4:
Public function signature: 0x313ce567
Entry block: 0x248
Exit block: 0x25b
Body: 0x248, 0x24f, 0x253, 0x25b, 0x7c3

Function 5:
Public function signature: 0x42966c68
Entry block: 0x277
Exit block: 0x298
Body: 0x277, 0x27e, 0x282, 0x298, 0x7d6, 0x822, 0x826, 0x8d6

Function 6:
Public function signature: 0x70a08231
Entry block: 0x2b2
Exit block: 0x2e9
Body: 0x2b2, 0x2b9, 0x2bd, 0x2e9, 0x8db

Function 7:
Public function signature: 0x79cc6790
Entry block: 0x2ff
Exit block: 0x33f
Body: 0x2ff, 0x306, 0x30a, 0x33f, 0x8f3, 0x93f, 0x943, 0x9ca, 0x9ce, 0xb08

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x359
Exit block: 0x3da
Body: 0x359, 0x360, 0x364, 0x36c, 0x391, 0x39a, 0x3a2, 0x3ad, 0x3c1, 0x3da, 0xb0e, 0xb5e, 0xb66, 0xb79, 0xb87, 0xb9b, 0xba4

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x3e8
Exit block: 0x428
Body: 0x3e8, 0x3ef, 0x3f3, 0x428, 0xbac, 0xbb7, 0xbb8

Function 10:
Public function signature: 0xad8733ca
Entry block: 0x42a
Exit block: 0xcaa
Body: 0x42a, 0x431, 0x435, 0x4e1, 0xbbc, 0xbc4, 0xbce, 0xbf6, 0xbf7, 0xc0e, 0xc0f, 0xc99, 0xc9d, 0xcaa, 0xcae, 0xcbc, 0xcc0

Function 11:
Public function signature: 0xdd62ed3e
Entry block: 0x4f7
Exit block: 0x54d
Body: 0x4f7, 0x4fe, 0x502, 0x54d, 0xcc8

Function 12:
Public fallback function
Entry block: 0xb8
Exit block: 0xb8
Body: 0xb8

Function 13:
Private function
Entry block: 0xced
Exit block: 0xffe
Body: 0xced, 0xd14, 0xd62, 0xdf0, 0xffd, 0xffe

