Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x82]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1be22528
0x3c EQ
0x3d PUSH2 0x82
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1be22528
0x3c: V13 = EQ 0x1be22528 V11
0x3d: V14 = 0x82
0x40: JUMPI 0x82 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd7]
---
0x41 DUP1
0x42 PUSH4 0x614d85e1
0x47 EQ
0x48 PUSH2 0xd7
0x4b JUMPI
---
0x42: V15 = 0x614d85e1
0x47: V16 = EQ 0x614d85e1 V11
0x48: V17 = 0xd7
0x4b: JUMPI 0xd7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x100]
---
0x4c DUP1
0x4d PUSH4 0x8547af30
0x52 EQ
0x53 PUSH2 0x100
0x56 JUMPI
---
0x4d: V18 = 0x8547af30
0x52: V19 = EQ 0x8547af30 V11
0x53: V20 = 0x100
0x56: JUMPI 0x100 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x155]
---
0x57 DUP1
0x58 PUSH4 0x978bbdb9
0x5d EQ
0x5e PUSH2 0x155
0x61 JUMPI
---
0x58: V21 = 0x978bbdb9
0x5d: V22 = EQ 0x978bbdb9 V11
0x5e: V23 = 0x155
0x61: JUMPI 0x155 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x17e]
---
0x62 DUP1
0x63 PUSH4 0xb60d4288
0x68 EQ
0x69 PUSH2 0x17e
0x6c JUMPI
---
0x63: V24 = 0xb60d4288
0x68: V25 = EQ 0xb60d4288 V11
0x69: V26 = 0x17e
0x6c: JUMPI 0x17e V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x188]
---
0x6d DUP1
0x6e PUSH4 0xbfbfa8e4
0x73 EQ
0x74 PUSH2 0x188
0x77 JUMPI
---
0x6e: V27 = 0xbfbfa8e4
0x73: V28 = EQ 0xbfbfa8e4 V11
0x74: V29 = 0x188
0x77: JUMPI 0x188 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x0, 0x6d]
Successors: [0x1b1]
---
0x78 JUMPDEST
0x79 PUSH2 0x80
0x7c PUSH2 0x1b1
0x7f JUMP
---
0x78: JUMPDEST 
0x79: V30 = 0x80
0x7c: V31 = 0x1b1
0x7f: JUMP 0x1b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V11, 0x80]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: [0x343]
Successors: []
---
0x80 JUMPDEST
0x81 STOP
---
0x80: JUMPDEST 
0x81: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0xd]
Successors: [0x89, 0x8d]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V32 = CALLVALUE
0x84: V33 = ISZERO V32
0x85: V34 = 0x8d
0x88: JUMPI 0x8d V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x82]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V35 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x82]
Successors: [0x347]
---
0x8d JUMPDEST
0x8e PUSH2 0x95
0x91 PUSH2 0x347
0x94 JUMP
---
0x8d: JUMPDEST 
0x8e: V36 = 0x95
0x91: V37 = 0x347
0x94: JUMP 0x347
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x95]
Exit stack: [V11, 0x95]

================================

Block 0x95
[0x95:0xd6]
---
Predecessors: [0x347]
Successors: []
---
0x95 JUMPDEST
0x96 PUSH1 0x40
0x98 MLOAD
0x99 DUP1
0x9a DUP3
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc SWAP2
0xcd POP
0xce POP
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 RETURN
---
0x95: JUMPDEST 
0x96: V38 = 0x40
0x98: V39 = M[0x40]
0x9b: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0xb1: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xc8: M[V39] = V43
0xc9: V44 = 0x20
0xcb: V45 = ADD 0x20 V39
0xcf: V46 = 0x40
0xd1: V47 = M[0x40]
0xd4: V48 = SUB V45 V47
0xd6: RETURN V47 V48
---
Entry stack: [V11, 0x95, V220]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x95]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x41]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V49 = CALLVALUE
0xd9: V50 = ISZERO V49
0xda: V51 = 0xe2
0xdd: JUMPI 0xe2 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V52 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0xd7]
Successors: [0x36d]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xea
0xe6 PUSH2 0x36d
0xe9 JUMP
---
0xe2: JUMPDEST 
0xe3: V53 = 0xea
0xe6: V54 = 0x36d
0xe9: JUMP 0x36d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V11, 0xea]

================================

Block 0xea
[0xea:0xff]
---
Predecessors: [0x36d]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP2
0xf6 POP
0xf7 POP
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc SWAP2
0xfd SUB
0xfe SWAP1
0xff RETURN
---
0xea: JUMPDEST 
0xeb: V55 = 0x40
0xed: V56 = M[0x40]
0xf1: M[V56] = V222
0xf2: V57 = 0x20
0xf4: V58 = ADD 0x20 V56
0xf8: V59 = 0x40
0xfa: V60 = M[0x40]
0xfd: V61 = SUB V58 V60
0xff: RETURN V60 V61
---
Entry stack: [V11, 0xea, V222]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xea]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x4c]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V62 = CALLVALUE
0x102: V63 = ISZERO V62
0x103: V64 = 0x10b
0x106: JUMPI 0x10b V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V65 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x373]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x373
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V66 = 0x113
0x10f: V67 = 0x373
0x112: JUMP 0x373
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x113
[0x113:0x154]
---
Predecessors: [0x373]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 DUP3
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP2
0x14b POP
0x14c POP
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 SWAP2
0x152 SUB
0x153 SWAP1
0x154 RETURN
---
0x113: JUMPDEST 
0x114: V68 = 0x40
0x116: V69 = M[0x40]
0x119: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x12f: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x146: M[V69] = V73
0x147: V74 = 0x20
0x149: V75 = ADD 0x20 V69
0x14d: V76 = 0x40
0x14f: V77 = M[0x40]
0x152: V78 = SUB V75 V77
0x154: RETURN V77 V78
---
Entry stack: [V11, 0x113, V230]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113]

================================

Block 0x155
[0x155:0x15b]
---
Predecessors: [0x57]
Successors: [0x15c, 0x160]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 ISZERO
0x158 PUSH2 0x160
0x15b JUMPI
---
0x155: JUMPDEST 
0x156: V79 = CALLVALUE
0x157: V80 = ISZERO V79
0x158: V81 = 0x160
0x15b: JUMPI 0x160 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x15f]
---
Predecessors: [0x155]
Successors: []
---
0x15c PUSH1 0x0
0x15e DUP1
0x15f REVERT
---
0x15c: V82 = 0x0
0x15f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x155]
Successors: [0x399]
---
0x160 JUMPDEST
0x161 PUSH2 0x168
0x164 PUSH2 0x399
0x167 JUMP
---
0x160: JUMPDEST 
0x161: V83 = 0x168
0x164: V84 = 0x399
0x167: JUMP 0x399
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V11, 0x168]

================================

Block 0x168
[0x168:0x17d]
---
Predecessors: [0x399]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP3
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP2
0x174 POP
0x175 POP
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a SWAP2
0x17b SUB
0x17c SWAP1
0x17d RETURN
---
0x168: JUMPDEST 
0x169: V85 = 0x40
0x16b: V86 = M[0x40]
0x16f: M[V86] = V232
0x170: V87 = 0x20
0x172: V88 = ADD 0x20 V86
0x176: V89 = 0x40
0x178: V90 = M[0x40]
0x17b: V91 = SUB V88 V90
0x17d: RETURN V90 V91
---
Entry stack: [V11, 0x168, V232]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x168]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x62]
Successors: [0x1b1]
---
0x17e JUMPDEST
0x17f PUSH2 0x186
0x182 PUSH2 0x1b1
0x185 JUMP
---
0x17e: JUMPDEST 
0x17f: V92 = 0x186
0x182: V93 = 0x1b1
0x185: JUMP 0x1b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V11, 0x186]

================================

Block 0x186
[0x186:0x187]
---
Predecessors: [0x343]
Successors: []
---
0x186 JUMPDEST
0x187 STOP
---
0x186: JUMPDEST 
0x187: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x188
[0x188:0x18e]
---
Predecessors: [0x6d]
Successors: [0x18f, 0x193]
---
0x188 JUMPDEST
0x189 CALLVALUE
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x188: JUMPDEST 
0x189: V94 = CALLVALUE
0x18a: V95 = ISZERO V94
0x18b: V96 = 0x193
0x18e: JUMPI 0x193 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x188]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V97 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x193
[0x193:0x19a]
---
Predecessors: [0x188]
Successors: [0x39f]
---
0x193 JUMPDEST
0x194 PUSH2 0x19b
0x197 PUSH2 0x39f
0x19a JUMP
---
0x193: JUMPDEST 
0x194: V98 = 0x19b
0x197: V99 = 0x39f
0x19a: JUMP 0x39f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x19b]
Exit stack: [V11, 0x19b]

================================

Block 0x19b
[0x19b:0x1b0]
---
Predecessors: [0x39f]
Successors: []
---
0x19b JUMPDEST
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 DUP3
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP2
0x1a7 POP
0x1a8 POP
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad SWAP2
0x1ae SUB
0x1af SWAP1
0x1b0 RETURN
---
0x19b: JUMPDEST 
0x19c: V100 = 0x40
0x19e: V101 = M[0x40]
0x1a2: M[V101] = V234
0x1a3: V102 = 0x20
0x1a5: V103 = ADD 0x20 V101
0x1a9: V104 = 0x40
0x1ab: V105 = M[0x40]
0x1ae: V106 = SUB V103 V105
0x1b0: RETURN V105 V106
---
Entry stack: [V11, 0x19b, V234]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x19b]

================================

Block 0x1b1
[0x1b1:0x1bf]
---
Predecessors: [0x78, 0x17e]
Successors: [0x1c0, 0x1c1]
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 PUSH1 0x2
0x1b7 SLOAD
0x1b8 CALLVALUE
0x1b9 DUP2
0x1ba ISZERO
0x1bb ISZERO
0x1bc PUSH2 0x1c1
0x1bf JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V107 = 0x0
0x1b5: V108 = 0x2
0x1b7: V109 = S[0x2]
0x1b8: V110 = CALLVALUE
0x1ba: V111 = ISZERO V109
0x1bb: V112 = ISZERO V111
0x1bc: V113 = 0x1c1
0x1bf: JUMPI 0x1c1 V112
---
Entry stack: [V11, {0x80, 0x186}]
Stack pops: 0
Stack additions: [0x0, 0x0, V109, V110]
Exit stack: [V11, {0x80, 0x186}, 0x0, 0x0, V109, V110]

================================

Block 0x1c0
[0x1c0:0x1c0]
---
Predecessors: [0x1b1]
Successors: []
---
0x1c0 INVALID
---
0x1c0: INVALID 
---
Entry stack: [V11, {0x80, 0x186}, 0x0, 0x0, V109, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x186}, 0x0, 0x0, V109, V110]

================================

Block 0x1c1
[0x1c1:0x236]
---
Predecessors: [0x1b1]
Successors: [0x237, 0x23b]
---
0x1c1 JUMPDEST
0x1c2 DIV
0x1c3 SWAP2
0x1c4 POP
0x1c5 DUP2
0x1c6 CALLVALUE
0x1c7 SUB
0x1c8 SWAP1
0x1c9 POP
0x1ca DUP1
0x1cb PUSH1 0x1
0x1cd PUSH1 0x0
0x1cf DUP3
0x1d0 DUP3
0x1d1 SLOAD
0x1d2 ADD
0x1d3 SWAP3
0x1d4 POP
0x1d5 POP
0x1d6 DUP2
0x1d7 SWAP1
0x1d8 SSTORE
0x1d9 POP
0x1da PUSH1 0x3
0x1dc PUSH1 0x0
0x1de SWAP1
0x1df SLOAD
0x1e0 SWAP1
0x1e1 PUSH2 0x100
0x1e4 EXP
0x1e5 SWAP1
0x1e6 DIV
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 PUSH2 0x8fc
0x216 DUP4
0x217 SWAP1
0x218 DUP2
0x219 ISZERO
0x21a MUL
0x21b SWAP1
0x21c PUSH1 0x40
0x21e MLOAD
0x21f PUSH1 0x0
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP4
0x226 SUB
0x227 DUP2
0x228 DUP6
0x229 DUP9
0x22a DUP9
0x22b CALL
0x22c SWAP4
0x22d POP
0x22e POP
0x22f POP
0x230 POP
0x231 ISZERO
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V114 = DIV V110 V109
0x1c6: V115 = CALLVALUE
0x1c7: V116 = SUB V115 V114
0x1cb: V117 = 0x1
0x1cd: V118 = 0x0
0x1d1: V119 = S[0x1]
0x1d2: V120 = ADD V119 V116
0x1d8: S[0x1] = V120
0x1da: V121 = 0x3
0x1dc: V122 = 0x0
0x1df: V123 = S[0x3]
0x1e1: V124 = 0x100
0x1e4: V125 = EXP 0x100 0x0
0x1e6: V126 = DIV V123 0x1
0x1e7: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1fd: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x213: V131 = 0x8fc
0x219: V132 = ISZERO V114
0x21a: V133 = MUL V132 0x8fc
0x21c: V134 = 0x40
0x21e: V135 = M[0x40]
0x21f: V136 = 0x0
0x221: V137 = 0x40
0x223: V138 = M[0x40]
0x226: V139 = SUB V135 V138
0x22b: V140 = CALL V133 V130 V114 V138 V139 V138 0x0
0x231: V141 = ISZERO V140
0x232: V142 = ISZERO V141
0x233: V143 = 0x23b
0x236: JUMPI 0x23b V142
---
Entry stack: [V11, {0x80, 0x186}, 0x0, 0x0, V109, V110]
Stack pops: 4
Stack additions: [V114, V116]
Exit stack: [V11, {0x80, 0x186}, V114, V116]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x1c1]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V144 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V11, {0x80, 0x186}, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x186}, V114, V116]

================================

Block 0x23b
[0x23b:0x24a]
---
Predecessors: [0x1c1]
Successors: [0x24b, 0x25f]
---
0x23b JUMPDEST
0x23c PUSH7 0x232bff5f46c000
0x244 DUP2
0x245 LT
0x246 ISZERO
0x247 PUSH2 0x25f
0x24a JUMPI
---
0x23b: JUMPDEST 
0x23c: V145 = 0x232bff5f46c000
0x245: V146 = LT V116 0x232bff5f46c000
0x246: V147 = ISZERO V146
0x247: V148 = 0x25f
0x24a: JUMPI 0x25f V147
---
Entry stack: [V11, {0x80, 0x186}, V114, V116]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x80, 0x186}, V114, V116]

================================

Block 0x24b
[0x24b:0x25e]
---
Predecessors: [0x23b]
Successors: [0x343]
---
0x24b PUSH1 0x78
0x24d PUSH1 0x0
0x24f DUP1
0x250 DUP3
0x251 DUP3
0x252 SLOAD
0x253 ADD
0x254 SWAP3
0x255 POP
0x256 POP
0x257 DUP2
0x258 SWAP1
0x259 SSTORE
0x25a POP
0x25b PUSH2 0x343
0x25e JUMP
---
0x24b: V149 = 0x78
0x24d: V150 = 0x0
0x252: V151 = S[0x0]
0x253: V152 = ADD V151 0x78
0x259: S[0x0] = V152
0x25b: V153 = 0x343
0x25e: JUMP 0x343
---
Entry stack: [V11, {0x80, 0x186}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x186}, S1, S0]

================================

Block 0x25f
[0x25f:0x26a]
---
Predecessors: [0x23b]
Successors: [0x26b, 0x2df]
---
0x25f JUMPDEST
0x260 TIMESTAMP
0x261 PUSH1 0x0
0x263 SLOAD
0x264 GT
0x265 ISZERO
0x266 ISZERO
0x267 PUSH2 0x2df
0x26a JUMPI
---
0x25f: JUMPDEST 
0x260: V154 = TIMESTAMP
0x261: V155 = 0x0
0x263: V156 = S[0x0]
0x264: V157 = GT V156 V154
0x265: V158 = ISZERO V157
0x266: V159 = ISZERO V158
0x267: V160 = 0x2df
0x26a: JUMPI 0x2df V159
---
Entry stack: [V11, {0x80, 0x186}, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x186}, V114, V116]

================================

Block 0x26b
[0x26b:0x2cb]
---
Predecessors: [0x25f]
Successors: [0x2cc, 0x2d0]
---
0x26b PUSH1 0x4
0x26d PUSH1 0x0
0x26f SWAP1
0x270 SLOAD
0x271 SWAP1
0x272 PUSH2 0x100
0x275 EXP
0x276 SWAP1
0x277 DIV
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 PUSH2 0x8fc
0x2a7 DUP3
0x2a8 PUSH1 0x1
0x2aa SLOAD
0x2ab SUB
0x2ac SWAP1
0x2ad DUP2
0x2ae ISZERO
0x2af MUL
0x2b0 SWAP1
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 PUSH1 0x0
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba DUP4
0x2bb SUB
0x2bc DUP2
0x2bd DUP6
0x2be DUP9
0x2bf DUP9
0x2c0 CALL
0x2c1 SWAP4
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 POP
0x2c6 ISZERO
0x2c7 ISZERO
0x2c8 PUSH2 0x2d0
0x2cb JUMPI
---
0x26b: V161 = 0x4
0x26d: V162 = 0x0
0x270: V163 = S[0x4]
0x272: V164 = 0x100
0x275: V165 = EXP 0x100 0x0
0x277: V166 = DIV V163 0x1
0x278: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x28e: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2a4: V171 = 0x8fc
0x2a8: V172 = 0x1
0x2aa: V173 = S[0x1]
0x2ab: V174 = SUB V173 S0
0x2ae: V175 = ISZERO V174
0x2af: V176 = MUL V175 0x8fc
0x2b1: V177 = 0x40
0x2b3: V178 = M[0x40]
0x2b4: V179 = 0x0
0x2b6: V180 = 0x40
0x2b8: V181 = M[0x40]
0x2bb: V182 = SUB V178 V181
0x2c0: V183 = CALL V176 V170 V174 V181 V182 V181 0x0
0x2c6: V184 = ISZERO V183
0x2c7: V185 = ISZERO V184
0x2c8: V186 = 0x2d0
0x2cb: JUMPI 0x2d0 V185
---
Entry stack: [V11, {0x80, 0x186}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x80, 0x186}, S1, S0]

================================

Block 0x2cc
[0x2cc:0x2cf]
---
Predecessors: [0x26b]
Successors: []
---
0x2cc PUSH1 0x0
0x2ce DUP1
0x2cf REVERT
---
0x2cc: V187 = 0x0
0x2cf: REVERT 0x0 0x0
---
Entry stack: [V11, {0x80, 0x186}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x186}, S1, S0]

================================

Block 0x2d0
[0x2d0:0x2de]
---
Predecessors: [0x26b]
Successors: [0x2df]
---
0x2d0 JUMPDEST
0x2d1 DUP1
0x2d2 PUSH1 0x1
0x2d4 DUP2
0x2d5 SWAP1
0x2d6 SSTORE
0x2d7 POP
0x2d8 TIMESTAMP
0x2d9 PUSH1 0x0
0x2db DUP2
0x2dc SWAP1
0x2dd SSTORE
0x2de POP
---
0x2d0: JUMPDEST 
0x2d2: V188 = 0x1
0x2d6: S[0x1] = S0
0x2d8: V189 = TIMESTAMP
0x2d9: V190 = 0x0
0x2dd: S[0x0] = V189
---
Entry stack: [V11, {0x80, 0x186}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x80, 0x186}, S1, S0]

================================

Block 0x2df
[0x2df:0x2f0]
---
Predecessors: [0x25f, 0x2d0]
Successors: [0x2f1, 0x2f2]
---
0x2df JUMPDEST
0x2e0 DUP1
0x2e1 PUSH8 0x526f1e874dd20000
0x2ea DUP2
0x2eb ISZERO
0x2ec ISZERO
0x2ed PUSH2 0x2f2
0x2f0 JUMPI
---
0x2df: JUMPDEST 
0x2e1: V191 = 0x526f1e874dd20000
0x2eb: V192 = ISZERO S0
0x2ec: V193 = ISZERO V192
0x2ed: V194 = 0x2f2
0x2f0: JUMPI 0x2f2 V193
---
Entry stack: [V11, {0x80, 0x186}, S1, S0]
Stack pops: 1
Stack additions: [S0, S0, 0x526f1e874dd20000]
Exit stack: [V11, {0x80, 0x186}, S1, S0, S0, 0x526f1e874dd20000]

================================

Block 0x2f1
[0x2f1:0x2f1]
---
Predecessors: [0x2df]
Successors: []
---
0x2f1 INVALID
---
0x2f1: INVALID 
---
Entry stack: [V11, {0x80, 0x186}, S3, S2, S1, 0x526f1e874dd20000]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x186}, S3, S2, S1, 0x526f1e874dd20000]

================================

Block 0x2f2
[0x2f2:0x342]
---
Predecessors: [0x2df]
Successors: [0x343]
---
0x2f2 JUMPDEST
0x2f3 DIV
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 DUP3
0x2f8 DUP3
0x2f9 SLOAD
0x2fa ADD
0x2fb SWAP3
0x2fc POP
0x2fd POP
0x2fe DUP2
0x2ff SWAP1
0x300 SSTORE
0x301 POP
0x302 CALLER
0x303 PUSH1 0x4
0x305 PUSH1 0x0
0x307 PUSH2 0x100
0x30a EXP
0x30b DUP2
0x30c SLOAD
0x30d DUP2
0x30e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x323 MUL
0x324 NOT
0x325 AND
0x326 SWAP1
0x327 DUP4
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d AND
0x33e MUL
0x33f OR
0x340 SWAP1
0x341 SSTORE
0x342 POP
---
0x2f2: JUMPDEST 
0x2f3: V195 = DIV 0x526f1e874dd20000 S1
0x2f4: V196 = 0x0
0x2f9: V197 = S[0x0]
0x2fa: V198 = ADD V197 V195
0x300: S[0x0] = V198
0x302: V199 = CALLER
0x303: V200 = 0x4
0x305: V201 = 0x0
0x307: V202 = 0x100
0x30a: V203 = EXP 0x100 0x0
0x30c: V204 = S[0x4]
0x30e: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x323: V206 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x324: V207 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x325: V208 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V204
0x328: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x33e: V211 = MUL V210 0x1
0x33f: V212 = OR V211 V208
0x341: S[0x4] = V212
---
Entry stack: [V11, {0x80, 0x186}, S3, S2, S1, 0x526f1e874dd20000]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0x80, 0x186}, S3, S2]

================================

Block 0x343
[0x343:0x346]
---
Predecessors: [0x24b, 0x2f2]
Successors: [0x80, 0x186]
---
0x343 JUMPDEST
0x344 POP
0x345 POP
0x346 JUMP
---
0x343: JUMPDEST 
0x346: JUMP {0x80, 0x186}
---
Entry stack: [V11, {0x80, 0x186}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x347
[0x347:0x36c]
---
Predecessors: [0x8d]
Successors: [0x95]
---
0x347 JUMPDEST
0x348 PUSH1 0x3
0x34a PUSH1 0x0
0x34c SWAP1
0x34d SLOAD
0x34e SWAP1
0x34f PUSH2 0x100
0x352 EXP
0x353 SWAP1
0x354 DIV
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b DUP2
0x36c JUMP
---
0x347: JUMPDEST 
0x348: V213 = 0x3
0x34a: V214 = 0x0
0x34d: V215 = S[0x3]
0x34f: V216 = 0x100
0x352: V217 = EXP 0x100 0x0
0x354: V218 = DIV V215 0x1
0x355: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x36c: JUMP 0x95
---
Entry stack: [V11, 0x95]
Stack pops: 1
Stack additions: [S0, V220]
Exit stack: [V11, 0x95, V220]

================================

Block 0x36d
[0x36d:0x372]
---
Predecessors: [0xe2]
Successors: [0xea]
---
0x36d JUMPDEST
0x36e PUSH1 0x0
0x370 SLOAD
0x371 DUP2
0x372 JUMP
---
0x36d: JUMPDEST 
0x36e: V221 = 0x0
0x370: V222 = S[0x0]
0x372: JUMP 0xea
---
Entry stack: [V11, 0xea]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V11, 0xea, V222]

================================

Block 0x373
[0x373:0x398]
---
Predecessors: [0x10b]
Successors: [0x113]
---
0x373 JUMPDEST
0x374 PUSH1 0x4
0x376 PUSH1 0x0
0x378 SWAP1
0x379 SLOAD
0x37a SWAP1
0x37b PUSH2 0x100
0x37e EXP
0x37f SWAP1
0x380 DIV
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 DUP2
0x398 JUMP
---
0x373: JUMPDEST 
0x374: V223 = 0x4
0x376: V224 = 0x0
0x379: V225 = S[0x4]
0x37b: V226 = 0x100
0x37e: V227 = EXP 0x100 0x0
0x380: V228 = DIV V225 0x1
0x381: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x398: JUMP 0x113
---
Entry stack: [V11, 0x113]
Stack pops: 1
Stack additions: [S0, V230]
Exit stack: [V11, 0x113, V230]

================================

Block 0x399
[0x399:0x39e]
---
Predecessors: [0x160]
Successors: [0x168]
---
0x399 JUMPDEST
0x39a PUSH1 0x2
0x39c SLOAD
0x39d DUP2
0x39e JUMP
---
0x399: JUMPDEST 
0x39a: V231 = 0x2
0x39c: V232 = S[0x2]
0x39e: JUMP 0x168
---
Entry stack: [V11, 0x168]
Stack pops: 1
Stack additions: [S0, V232]
Exit stack: [V11, 0x168, V232]

================================

Block 0x39f
[0x39f:0x3a4]
---
Predecessors: [0x193]
Successors: [0x19b]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x1
0x3a2 SLOAD
0x3a3 DUP2
0x3a4 JUMP
---
0x39f: JUMPDEST 
0x3a0: V233 = 0x1
0x3a2: V234 = S[0x1]
0x3a4: JUMP 0x19b
---
Entry stack: [V11, 0x19b]
Stack pops: 1
Stack additions: [S0, V234]
Exit stack: [V11, 0x19b, V234]

================================

Block 0x3a5
[0x3a5:0x3d2]
---
Predecessors: []
Successors: []
---
0x3a5 STOP
0x3a6 LOG1
0x3a7 PUSH6 0x627a7a723058
0x3ae SHA3
0x3af MISSING 0xaa
0x3b0 EXTCODECOPY
0x3b1 MISSING 0xbb
0x3b2 SWAP12
0x3b3 MISSING 0xd1
0x3b4 CALLVALUE
0x3b5 DELEGATECALL
0x3b6 MISSING 0xd6
0x3b7 SWAP14
0x3b8 MISSING 0xe5
0x3b9 DUP11
0x3ba MISSING 0xe7
0x3bb CODECOPY
0x3bc MISSING 0x46
0x3bd MISSING 0xc8
0x3be MISSING 0x23
0x3bf MISSING 0xcf
0x3c0 PUSH18 0x753a52b4230a16c18a71f30f973d0029
---
0x3a5: STOP 
0x3a6: LOG S0 S1 S2
0x3a7: V235 = 0x627a7a723058
0x3ae: V236 = SHA3 0x627a7a723058 S3
0x3af: MISSING 0xaa
0x3b0: EXTCODECOPY S0 S1 S2 S3
0x3b1: MISSING 0xbb
0x3b3: MISSING 0xd1
0x3b4: V237 = CALLVALUE
0x3b5: V238 = DELEGATECALL V237 S0 S1 S2 S3 S4
0x3b6: MISSING 0xd6
0x3b8: MISSING 0xe5
0x3ba: MISSING 0xe7
0x3bb: CODECOPY S0 S1 S2
0x3bc: MISSING 0x46
0x3bd: MISSING 0xc8
0x3be: MISSING 0x23
0x3bf: MISSING 0xcf
0x3c0: V239 = 0x753a52b4230a16c18a71f30f973d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V236, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V238, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x753a52b4230a16c18a71f30f973d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1be22528
Entry block: 0x82
Exit block: 0x95
Body: 0x82, 0x89, 0x8d, 0x95, 0x347

Function 1:
Public function signature: 0x614d85e1
Entry block: 0xd7
Exit block: 0xea
Body: 0xd7, 0xde, 0xe2, 0xea, 0x36d

Function 2:
Public function signature: 0x8547af30
Entry block: 0x100
Exit block: 0x113
Body: 0x100, 0x107, 0x10b, 0x113, 0x373

Function 3:
Public function signature: 0x978bbdb9
Entry block: 0x155
Exit block: 0x168
Body: 0x155, 0x15c, 0x160, 0x168, 0x399

Function 4:
Public function signature: 0xb60d4288
Entry block: 0x17e
Exit block: 0x186
Body: 0x17e, 0x186

Function 5:
Public function signature: 0xbfbfa8e4
Entry block: 0x188
Exit block: 0x19b
Body: 0x188, 0x18f, 0x193, 0x19b, 0x39f

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x80
Body: 0x78, 0x80

Function 7:
Private function
Entry block: 0x1b1
Exit block: 0x343
Body: 0x1b1, 0x1c1, 0x23b, 0x24b, 0x25f, 0x26b, 0x2d0, 0x2df, 0x2f2, 0x343

