Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x18160ddd
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x18160ddd
0x3c: V13 = EQ 0x18160ddd V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x85]
---
0x41 DUP1
0x42 PUSH4 0x70a08231
0x47 EQ
0x48 PUSH2 0x85
0x4b JUMPI
---
0x42: V15 = 0x70a08231
0x47: V16 = EQ 0x70a08231 V11
0x48: V17 = 0x85
0x4b: JUMPI 0x85 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd2]
---
0x4c DUP1
0x4d PUSH4 0xa9059cbb
0x52 EQ
0x53 PUSH2 0xd2
0x56 JUMPI
---
0x4d: V18 = 0xa9059cbb
0x52: V19 = EQ 0xa9059cbb V11
0x53: V20 = 0xd2
0x56: JUMPI 0xd2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x12c]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x12c
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x12c
0x6e: JUMP 0x12c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0x84]
---
Predecessors: [0x12c]
Successors: []
---
0x6f JUMPDEST
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP3
0x75 DUP2
0x76 MSTORE
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP2
0x7b POP
0x7c POP
0x7d PUSH1 0x40
0x7f MLOAD
0x80 DUP1
0x81 SWAP2
0x82 SUB
0x83 SWAP1
0x84 RETURN
---
0x6f: JUMPDEST 
0x70: V28 = 0x40
0x72: V29 = M[0x40]
0x76: M[V29] = V81
0x77: V30 = 0x20
0x79: V31 = ADD 0x20 V29
0x7d: V32 = 0x40
0x7f: V33 = M[0x40]
0x82: V34 = SUB V31 V33
0x84: RETURN V33 V34
---
Entry stack: [V11, 0x6f, V81]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0x41]
Successors: [0x8c, 0x90]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V35 = CALLVALUE
0x87: V36 = ISZERO V35
0x88: V37 = 0x90
0x8b: JUMPI 0x90 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x85]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V38 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0xbb]
---
Predecessors: [0x85]
Successors: [0x132]
---
0x90 JUMPDEST
0x91 PUSH2 0xbc
0x94 PUSH1 0x4
0x96 DUP1
0x97 DUP1
0x98 CALLDATALOAD
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf SWAP1
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP1
0xb4 SWAP2
0xb5 SWAP1
0xb6 POP
0xb7 POP
0xb8 PUSH2 0x132
0xbb JUMP
---
0x90: JUMPDEST 
0x91: V39 = 0xbc
0x94: V40 = 0x4
0x98: V41 = CALLDATALOAD 0x4
0x99: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xb0: V44 = 0x20
0xb2: V45 = ADD 0x20 0x4
0xb8: V46 = 0x132
0xbb: JUMP 0x132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc, V43]
Exit stack: [V11, 0xbc, V43]

================================

Block 0xbc
[0xbc:0xd1]
---
Predecessors: [0x132]
Successors: []
---
0xbc JUMPDEST
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 DUP3
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP2
0xc8 POP
0xc9 POP
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce SWAP2
0xcf SUB
0xd0 SWAP1
0xd1 RETURN
---
0xbc: JUMPDEST 
0xbd: V47 = 0x40
0xbf: V48 = M[0x40]
0xc3: M[V48] = V95
0xc4: V49 = 0x20
0xc6: V50 = ADD 0x20 V48
0xca: V51 = 0x40
0xcc: V52 = M[0x40]
0xcf: V53 = SUB V50 V52
0xd1: RETURN V52 V53
---
Entry stack: [V11, V95]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0x4c]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V54 = CALLVALUE
0xd4: V55 = ISZERO V54
0xd5: V56 = 0xdd
0xd8: JUMPI 0xdd V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V57 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0x111]
---
Predecessors: [0xd2]
Successors: [0x17b]
---
0xdd JUMPDEST
0xde PUSH2 0x112
0xe1 PUSH1 0x4
0xe3 DUP1
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 SWAP2
0x102 SWAP1
0x103 DUP1
0x104 CALLDATALOAD
0x105 SWAP1
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP1
0x10a SWAP2
0x10b SWAP1
0x10c POP
0x10d POP
0x10e PUSH2 0x17b
0x111 JUMP
---
0xdd: JUMPDEST 
0xde: V58 = 0x112
0xe1: V59 = 0x4
0xe5: V60 = CALLDATALOAD 0x4
0xe6: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xfd: V63 = 0x20
0xff: V64 = ADD 0x20 0x4
0x104: V65 = CALLDATALOAD 0x24
0x106: V66 = 0x20
0x108: V67 = ADD 0x20 0x24
0x10e: V68 = 0x17b
0x111: JUMP 0x17b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x112, V62, V65]
Exit stack: [V11, 0x112, V62, V65]

================================

Block 0x112
[0x112:0x12b]
---
Predecessors: [0x2ed]
Successors: []
---
0x112 JUMPDEST
0x113 PUSH1 0x40
0x115 MLOAD
0x116 DUP1
0x117 DUP3
0x118 ISZERO
0x119 ISZERO
0x11a ISZERO
0x11b ISZERO
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP2
0x122 POP
0x123 POP
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0x112: JUMPDEST 
0x113: V69 = 0x40
0x115: V70 = M[0x40]
0x118: V71 = ISZERO 0x1
0x119: V72 = ISZERO 0x0
0x11a: V73 = ISZERO 0x1
0x11b: V74 = ISZERO 0x0
0x11d: M[V70] = 0x1
0x11e: V75 = 0x20
0x120: V76 = ADD 0x20 V70
0x124: V77 = 0x40
0x126: V78 = M[0x40]
0x129: V79 = SUB V76 V78
0x12b: RETURN V78 V79
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x12c
[0x12c:0x131]
---
Predecessors: [0x67]
Successors: [0x6f]
---
0x12c JUMPDEST
0x12d PUSH1 0x0
0x12f SLOAD
0x130 DUP2
0x131 JUMP
---
0x12c: JUMPDEST 
0x12d: V80 = 0x0
0x12f: V81 = S[0x0]
0x131: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: [S0, V81]
Exit stack: [V11, 0x6f, V81]

================================

Block 0x132
[0x132:0x17a]
---
Predecessors: [0x90]
Successors: [0xbc]
---
0x132 JUMPDEST
0x133 PUSH1 0x0
0x135 PUSH1 0x1
0x137 PUSH1 0x0
0x139 DUP4
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP1
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x20
0x170 ADD
0x171 PUSH1 0x0
0x173 SHA3
0x174 SLOAD
0x175 SWAP1
0x176 POP
0x177 SWAP2
0x178 SWAP1
0x179 POP
0x17a JUMP
---
0x132: JUMPDEST 
0x133: V82 = 0x0
0x135: V83 = 0x1
0x137: V84 = 0x0
0x13a: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x150: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x167: M[0x0] = V88
0x168: V89 = 0x20
0x16a: V90 = ADD 0x20 0x0
0x16d: M[0x20] = 0x1
0x16e: V91 = 0x20
0x170: V92 = ADD 0x20 0x20
0x171: V93 = 0x0
0x173: V94 = SHA3 0x0 0x40
0x174: V95 = S[V94]
0x17a: JUMP 0xbc
---
Entry stack: [V11, 0xbc, V43]
Stack pops: 2
Stack additions: [V95]
Exit stack: [V11, V95]

================================

Block 0x17b
[0x17b:0x1b3]
---
Predecessors: [0xdd]
Successors: [0x1b4, 0x1b8]
---
0x17b JUMPDEST
0x17c PUSH1 0x0
0x17e DUP1
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 AND
0x195 DUP4
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac EQ
0x1ad ISZERO
0x1ae ISZERO
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x17b: JUMPDEST 
0x17c: V96 = 0x0
0x17f: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x196: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x1ac: V101 = EQ V100 0x0
0x1ad: V102 = ISZERO V101
0x1ae: V103 = ISZERO V102
0x1af: V104 = ISZERO V103
0x1b0: V105 = 0x1b8
0x1b3: JUMPI 0x1b8 V104
---
Entry stack: [V11, 0x112, V62, V65]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x112, V62, V65, 0x0]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x17b]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V106 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V62, V65, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V62, V65, 0x0]

================================

Block 0x1b8
[0x1b8:0x201]
---
Predecessors: [0x17b]
Successors: [0x202, 0x206]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x1
0x1bb PUSH1 0x0
0x1bd CALLER
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef SWAP1
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 PUSH1 0x0
0x1f7 SHA3
0x1f8 SLOAD
0x1f9 DUP3
0x1fa GT
0x1fb ISZERO
0x1fc ISZERO
0x1fd ISZERO
0x1fe PUSH2 0x206
0x201 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V107 = 0x1
0x1bb: V108 = 0x0
0x1bd: V109 = CALLER
0x1be: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1d4: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1eb: M[0x0] = V113
0x1ec: V114 = 0x20
0x1ee: V115 = ADD 0x20 0x0
0x1f1: M[0x20] = 0x1
0x1f2: V116 = 0x20
0x1f4: V117 = ADD 0x20 0x20
0x1f5: V118 = 0x0
0x1f7: V119 = SHA3 0x0 0x40
0x1f8: V120 = S[V119]
0x1fa: V121 = GT V65 V120
0x1fb: V122 = ISZERO V121
0x1fc: V123 = ISZERO V122
0x1fd: V124 = ISZERO V123
0x1fe: V125 = 0x206
0x201: JUMPI 0x206 V124
---
Entry stack: [V11, 0x112, V62, V65, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x112, V62, V65, 0x0]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1b8]
Successors: []
---
0x202 PUSH1 0x0
0x204 DUP1
0x205 REVERT
---
0x202: V126 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V62, V65, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V62, V65, 0x0]

================================

Block 0x206
[0x206:0x257]
---
Predecessors: [0x1b8]
Successors: [0x39f]
---
0x206 JUMPDEST
0x207 PUSH2 0x258
0x20a DUP3
0x20b PUSH1 0x1
0x20d PUSH1 0x0
0x20f CALLER
0x210 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x225 AND
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x20
0x240 ADD
0x241 SWAP1
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 PUSH1 0x0
0x249 SHA3
0x24a SLOAD
0x24b PUSH2 0x39f
0x24e SWAP1
0x24f SWAP2
0x250 SWAP1
0x251 PUSH4 0xffffffff
0x256 AND
0x257 JUMP
---
0x206: JUMPDEST 
0x207: V127 = 0x258
0x20b: V128 = 0x1
0x20d: V129 = 0x0
0x20f: V130 = CALLER
0x210: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x225: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x226: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x23d: M[0x0] = V134
0x23e: V135 = 0x20
0x240: V136 = ADD 0x20 0x0
0x243: M[0x20] = 0x1
0x244: V137 = 0x20
0x246: V138 = ADD 0x20 0x20
0x247: V139 = 0x0
0x249: V140 = SHA3 0x0 0x40
0x24a: V141 = S[V140]
0x24b: V142 = 0x39f
0x251: V143 = 0xffffffff
0x256: V144 = AND 0xffffffff 0x39f
0x257: JUMP 0x39f
---
Entry stack: [V11, 0x112, V62, V65, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x258, V141, S1]
Exit stack: [V11, 0x112, V62, V65, 0x0, 0x258, V141, V65]

================================

Block 0x258
[0x258:0x2ec]
---
Predecessors: [0x3ad]
Successors: [0x3b8]
---
0x258 JUMPDEST
0x259 PUSH1 0x1
0x25b PUSH1 0x0
0x25d CALLER
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x289 AND
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP1
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 PUSH1 0x0
0x297 SHA3
0x298 DUP2
0x299 SWAP1
0x29a SSTORE
0x29b POP
0x29c PUSH2 0x2ed
0x29f DUP3
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0x0
0x2a4 DUP7
0x2a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ba AND
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 AND
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 SWAP1
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc PUSH1 0x0
0x2de SHA3
0x2df SLOAD
0x2e0 PUSH2 0x3b8
0x2e3 SWAP1
0x2e4 SWAP2
0x2e5 SWAP1
0x2e6 PUSH4 0xffffffff
0x2eb AND
0x2ec JUMP
---
0x258: JUMPDEST 
0x259: V145 = 0x1
0x25b: V146 = 0x0
0x25d: V147 = CALLER
0x25e: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x274: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x289: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x28b: M[0x0] = V151
0x28c: V152 = 0x20
0x28e: V153 = ADD 0x20 0x0
0x291: M[0x20] = 0x1
0x292: V154 = 0x20
0x294: V155 = ADD 0x20 0x20
0x295: V156 = 0x0
0x297: V157 = SHA3 0x0 0x40
0x29a: S[V157] = V207
0x29c: V158 = 0x2ed
0x2a0: V159 = 0x1
0x2a2: V160 = 0x0
0x2a5: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x2bb: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x2d2: M[0x0] = V164
0x2d3: V165 = 0x20
0x2d5: V166 = ADD 0x20 0x0
0x2d8: M[0x20] = 0x1
0x2d9: V167 = 0x20
0x2db: V168 = ADD 0x20 0x20
0x2dc: V169 = 0x0
0x2de: V170 = SHA3 0x0 0x40
0x2df: V171 = S[V170]
0x2e0: V172 = 0x3b8
0x2e6: V173 = 0xffffffff
0x2eb: V174 = AND 0xffffffff 0x3b8
0x2ec: JUMP 0x3b8
---
Entry stack: [V11, 0x112, V62, V65, 0x0, V207]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x2ed, V171, S2]
Exit stack: [V11, 0x112, V62, V65, 0x0, 0x2ed, V171, V65]

================================

Block 0x2ed
[0x2ed:0x39e]
---
Predecessors: [0x3cc]
Successors: [0x112]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x1
0x2f0 PUSH1 0x0
0x2f2 DUP6
0x2f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x308 AND
0x309 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31e AND
0x31f DUP2
0x320 MSTORE
0x321 PUSH1 0x20
0x323 ADD
0x324 SWAP1
0x325 DUP2
0x326 MSTORE
0x327 PUSH1 0x20
0x329 ADD
0x32a PUSH1 0x0
0x32c SHA3
0x32d DUP2
0x32e SWAP1
0x32f SSTORE
0x330 POP
0x331 DUP3
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 CALLER
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x380 DUP5
0x381 PUSH1 0x40
0x383 MLOAD
0x384 DUP1
0x385 DUP3
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x20
0x38a ADD
0x38b SWAP2
0x38c POP
0x38d POP
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 SWAP2
0x393 SUB
0x394 SWAP1
0x395 LOG3
0x396 PUSH1 0x1
0x398 SWAP1
0x399 POP
0x39a SWAP3
0x39b SWAP2
0x39c POP
0x39d POP
0x39e JUMP
---
0x2ed: JUMPDEST 
0x2ee: V175 = 0x1
0x2f0: V176 = 0x0
0x2f3: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x308: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x309: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x320: M[0x0] = V180
0x321: V181 = 0x20
0x323: V182 = ADD 0x20 0x0
0x326: M[0x20] = 0x1
0x327: V183 = 0x20
0x329: V184 = ADD 0x20 0x20
0x32a: V185 = 0x0
0x32c: V186 = SHA3 0x0 0x40
0x32f: S[V186] = V209
0x332: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x348: V189 = CALLER
0x349: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x35f: V192 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x381: V193 = 0x40
0x383: V194 = M[0x40]
0x387: M[V194] = V65
0x388: V195 = 0x20
0x38a: V196 = ADD 0x20 V194
0x38e: V197 = 0x40
0x390: V198 = M[0x40]
0x393: V199 = SUB V196 V198
0x395: LOG V198 V199 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V191 V188
0x396: V200 = 0x1
0x39e: JUMP 0x112
---
Entry stack: [V11, 0x112, V62, V65, 0x0, V209]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x39f
[0x39f:0x3ab]
---
Predecessors: [0x206]
Successors: [0x3ac, 0x3ad]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x0
0x3a2 DUP3
0x3a3 DUP3
0x3a4 GT
0x3a5 ISZERO
0x3a6 ISZERO
0x3a7 ISZERO
0x3a8 PUSH2 0x3ad
0x3ab JUMPI
---
0x39f: JUMPDEST 
0x3a0: V201 = 0x0
0x3a4: V202 = GT V65 V141
0x3a5: V203 = ISZERO V202
0x3a6: V204 = ISZERO V203
0x3a7: V205 = ISZERO V204
0x3a8: V206 = 0x3ad
0x3ab: JUMPI 0x3ad V205
---
Entry stack: [V11, 0x112, V62, V65, 0x0, 0x258, V141, V65]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x112, V62, V65, 0x0, 0x258, V141, V65, 0x0]

================================

Block 0x3ac
[0x3ac:0x3ac]
---
Predecessors: [0x39f]
Successors: []
---
0x3ac INVALID
---
0x3ac: INVALID 
---
Entry stack: [V11, 0x112, V62, V65, 0x0, 0x258, V141, V65, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V62, V65, 0x0, 0x258, V141, V65, 0x0]

================================

Block 0x3ad
[0x3ad:0x3b7]
---
Predecessors: [0x39f]
Successors: [0x258]
---
0x3ad JUMPDEST
0x3ae DUP2
0x3af DUP4
0x3b0 SUB
0x3b1 SWAP1
0x3b2 POP
0x3b3 SWAP3
0x3b4 SWAP2
0x3b5 POP
0x3b6 POP
0x3b7 JUMP
---
0x3ad: JUMPDEST 
0x3b0: V207 = SUB V141 V65
0x3b7: JUMP 0x258
---
Entry stack: [V11, 0x112, V62, V65, 0x0, 0x258, V141, V65, 0x0]
Stack pops: 4
Stack additions: [V207]
Exit stack: [V11, 0x112, V62, V65, 0x0, V207]

================================

Block 0x3b8
[0x3b8:0x3ca]
---
Predecessors: [0x258]
Successors: [0x3cb, 0x3cc]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc DUP3
0x3bd DUP5
0x3be ADD
0x3bf SWAP1
0x3c0 POP
0x3c1 DUP4
0x3c2 DUP2
0x3c3 LT
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 PUSH2 0x3cc
0x3ca JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V208 = 0x0
0x3be: V209 = ADD V171 V65
0x3c3: V210 = LT V209 V171
0x3c4: V211 = ISZERO V210
0x3c5: V212 = ISZERO V211
0x3c6: V213 = ISZERO V212
0x3c7: V214 = 0x3cc
0x3ca: JUMPI 0x3cc V213
---
Entry stack: [V11, 0x112, V62, V65, 0x0, 0x2ed, V171, V65]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V209]
Exit stack: [V11, 0x112, V62, V65, 0x0, 0x2ed, V171, V65, 0x0, V209]

================================

Block 0x3cb
[0x3cb:0x3cb]
---
Predecessors: [0x3b8]
Successors: []
---
0x3cb INVALID
---
0x3cb: INVALID 
---
Entry stack: [V11, 0x112, V62, V65, 0x0, 0x2ed, V171, V65, 0x0, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V62, V65, 0x0, 0x2ed, V171, V65, 0x0, V209]

================================

Block 0x3cc
[0x3cc:0x3d5]
---
Predecessors: [0x3b8]
Successors: [0x2ed]
---
0x3cc JUMPDEST
0x3cd DUP1
0x3ce SWAP2
0x3cf POP
0x3d0 POP
0x3d1 SWAP3
0x3d2 SWAP2
0x3d3 POP
0x3d4 POP
0x3d5 JUMP
---
0x3cc: JUMPDEST 
0x3d5: JUMP 0x2ed
---
Entry stack: [V11, 0x112, V62, V65, 0x0, 0x2ed, V171, V65, 0x0, V209]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x112, V62, V65, 0x0, V209]

================================

Block 0x3d6
[0x3d6:0x440]
---
Predecessors: []
Successors: [0x441]
Has unresolved jump.
---
0x3d6 STOP
0x3d7 LOG1
0x3d8 PUSH6 0x627a7a723058
0x3df SHA3
0x3e0 SDIV
0x3e1 SWAP16
0x3e2 GASPRICE
0x3e3 CALLCODE
0x3e4 MISSING 0x28
0x3e5 MISSING 0xc1
0x3e6 MISSING 0xed
0x3e7 SWAP11
0x3e8 COINBASE
0x3e9 SUB
0x3ea MISSING 0x1f
0x3eb MISSING 0xc4
0x3ec MISSING 0x4b
0x3ed MISSING 0x5c
0x3ee PUSH7 0x822ca2a1e837c6
0x3f6 MISSING 0x1f
0x3f7 MISSING 0x21
0x3f8 SELFDESTRUCT
0x3f9 MISSING 0xbb
0x3fa NOT
0x3fb PUSH29 0x590af70500297300000000000000000000000000000000000000003014
0x419 PUSH1 0x60
0x41b PUSH1 0x40
0x41d MSTORE
0x41e PUSH1 0x0
0x420 DUP1
0x421 REVERT
0x422 STOP
0x423 LOG1
0x424 PUSH6 0x627a7a723058
0x42b SHA3
0x42c MISSING 0xe6
0x42d MISSING 0xa9
0x42e PUSH8 0x43520c792189272f
0x437 MISSING 0xd6
0x438 PUSH6 0x499e3b4a238f
0x43f TIMESTAMP
0x440 JUMPI
---
0x3d6: STOP 
0x3d7: LOG S0 S1 S2
0x3d8: V215 = 0x627a7a723058
0x3df: V216 = SHA3 0x627a7a723058 S3
0x3e0: V217 = SDIV V216 S4
0x3e2: V218 = GASPRICE
0x3e3: V219 = CALLCODE V218 S20 S5 S6 S7 S8 S9
0x3e4: MISSING 0x28
0x3e5: MISSING 0xc1
0x3e6: MISSING 0xed
0x3e8: V220 = COINBASE
0x3e9: V221 = SUB V220 S11
0x3ea: MISSING 0x1f
0x3eb: MISSING 0xc4
0x3ec: MISSING 0x4b
0x3ed: MISSING 0x5c
0x3ee: V222 = 0x822ca2a1e837c6
0x3f6: MISSING 0x1f
0x3f7: MISSING 0x21
0x3f8: SELFDESTRUCT S0
0x3f9: MISSING 0xbb
0x3fa: V223 = NOT S0
0x3fb: V224 = 0x590af70500297300000000000000000000000000000000000000003014
0x419: V225 = 0x60
0x41b: V226 = 0x40
0x41d: M[0x40] = 0x60
0x41e: V227 = 0x0
0x421: REVERT 0x0 0x0
0x422: STOP 
0x423: LOG S0 S1 S2
0x424: V228 = 0x627a7a723058
0x42b: V229 = SHA3 0x627a7a723058 S3
0x42c: MISSING 0xe6
0x42d: MISSING 0xa9
0x42e: V230 = 0x43520c792189272f
0x437: MISSING 0xd6
0x438: V231 = 0x499e3b4a238f
0x43f: V232 = TIMESTAMP
0x440: JUMPI V232 0x499e3b4a238f
---
Entry stack: []
Stack pops: 0
Stack additions: [V219, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, V217, V221, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0x822ca2a1e837c6, 0x590af70500297300000000000000000000000000000000000000003014, V223, V229, 0x43520c792189272f]
Exit stack: []

================================

Block 0x441
[0x441:0x45a]
---
Predecessors: [0x3d6]
Successors: [0x45b]
---
0x441 SWAP2
0x442 PUSH9 0xa3853782f98a81d054
0x44c STOP
0x44d MISSING 0x29
0x44e PUSH1 0x60
0x450 PUSH1 0x40
0x452 MSTORE
0x453 PUSH1 0x4
0x455 CALLDATASIZE
0x456 LT
0x457 PUSH2 0xa4
0x45a JUMPI
---
0x442: V233 = 0xa3853782f98a81d054
0x44c: STOP 
0x44d: MISSING 0x29
0x44e: V234 = 0x60
0x450: V235 = 0x40
0x452: M[0x40] = 0x60
0x453: V236 = 0x4
0x455: V237 = CALLDATASIZE
0x456: V238 = LT V237 0x4
0x457: V239 = 0xa4
0x45a: THROWI V238
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x45b
[0x45b:0x48e]
---
Predecessors: [0x441]
Successors: [0x48f]
---
0x45b PUSH1 0x0
0x45d CALLDATALOAD
0x45e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x47c SWAP1
0x47d DIV
0x47e PUSH4 0xffffffff
0x483 AND
0x484 DUP1
0x485 PUSH4 0x6fdde03
0x48a EQ
0x48b PUSH2 0xa9
0x48e JUMPI
---
0x45b: V240 = 0x0
0x45d: V241 = CALLDATALOAD 0x0
0x45e: V242 = 0x100000000000000000000000000000000000000000000000000000000
0x47d: V243 = DIV V241 0x100000000000000000000000000000000000000000000000000000000
0x47e: V244 = 0xffffffff
0x483: V245 = AND 0xffffffff V243
0x485: V246 = 0x6fdde03
0x48a: V247 = EQ 0x6fdde03 V245
0x48b: V248 = 0xa9
0x48e: THROWI V247
---
Entry stack: []
Stack pops: 0
Stack additions: [V245]
Exit stack: [V245]

================================

Block 0x48f
[0x48f:0x499]
---
Predecessors: [0x45b]
Successors: [0x49a]
---
0x48f DUP1
0x490 PUSH4 0x95ea7b3
0x495 EQ
0x496 PUSH2 0x137
0x499 JUMPI
---
0x490: V249 = 0x95ea7b3
0x495: V250 = EQ 0x95ea7b3 V245
0x496: V251 = 0x137
0x499: THROWI V250
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x49a
[0x49a:0x4a4]
---
Predecessors: [0x48f]
Successors: [0x4a5]
---
0x49a DUP1
0x49b PUSH4 0x18160ddd
0x4a0 EQ
0x4a1 PUSH2 0x191
0x4a4 JUMPI
---
0x49b: V252 = 0x18160ddd
0x4a0: V253 = EQ 0x18160ddd V245
0x4a1: V254 = 0x191
0x4a4: THROWI V253
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4a5
[0x4a5:0x4af]
---
Predecessors: [0x49a]
Successors: [0x4b0]
---
0x4a5 DUP1
0x4a6 PUSH4 0x23b872dd
0x4ab EQ
0x4ac PUSH2 0x1ba
0x4af JUMPI
---
0x4a6: V255 = 0x23b872dd
0x4ab: V256 = EQ 0x23b872dd V245
0x4ac: V257 = 0x1ba
0x4af: THROWI V256
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4b0
[0x4b0:0x4ba]
---
Predecessors: [0x4a5]
Successors: [0x4bb]
---
0x4b0 DUP1
0x4b1 PUSH4 0x313ce567
0x4b6 EQ
0x4b7 PUSH2 0x233
0x4ba JUMPI
---
0x4b1: V258 = 0x313ce567
0x4b6: V259 = EQ 0x313ce567 V245
0x4b7: V260 = 0x233
0x4ba: THROWI V259
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4bb
[0x4bb:0x4c5]
---
Predecessors: [0x4b0]
Successors: [0x4c6]
---
0x4bb DUP1
0x4bc PUSH4 0x42966c68
0x4c1 EQ
0x4c2 PUSH2 0x262
0x4c5 JUMPI
---
0x4bc: V261 = 0x42966c68
0x4c1: V262 = EQ 0x42966c68 V245
0x4c2: V263 = 0x262
0x4c5: THROWI V262
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4c6
[0x4c6:0x4d0]
---
Predecessors: [0x4bb]
Successors: [0x4d1]
---
0x4c6 DUP1
0x4c7 PUSH4 0x70a08231
0x4cc EQ
0x4cd PUSH2 0x285
0x4d0 JUMPI
---
0x4c7: V264 = 0x70a08231
0x4cc: V265 = EQ 0x70a08231 V245
0x4cd: V266 = 0x285
0x4d0: THROWI V265
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4d1
[0x4d1:0x4db]
---
Predecessors: [0x4c6]
Successors: [0x4dc]
---
0x4d1 DUP1
0x4d2 PUSH4 0x95d89b41
0x4d7 EQ
0x4d8 PUSH2 0x2d2
0x4db JUMPI
---
0x4d2: V267 = 0x95d89b41
0x4d7: V268 = EQ 0x95d89b41 V245
0x4d8: V269 = 0x2d2
0x4db: THROWI V268
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4dc
[0x4dc:0x4e6]
---
Predecessors: [0x4d1]
Successors: [0x4e7]
---
0x4dc DUP1
0x4dd PUSH4 0xa9059cbb
0x4e2 EQ
0x4e3 PUSH2 0x360
0x4e6 JUMPI
---
0x4dd: V270 = 0xa9059cbb
0x4e2: V271 = EQ 0xa9059cbb V245
0x4e3: V272 = 0x360
0x4e6: THROWI V271
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4e7
[0x4e7:0x4f1]
---
Predecessors: [0x4dc]
Successors: [0x4f2]
---
0x4e7 DUP1
0x4e8 PUSH4 0xdd62ed3e
0x4ed EQ
0x4ee PUSH2 0x3ba
0x4f1 JUMPI
---
0x4e8: V273 = 0xdd62ed3e
0x4ed: V274 = EQ 0xdd62ed3e V245
0x4ee: V275 = 0x3ba
0x4f1: THROWI V274
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x4f2
[0x4f2:0x4fd]
---
Predecessors: [0x4e7]
Successors: [0x4fe]
---
0x4f2 JUMPDEST
0x4f3 PUSH1 0x0
0x4f5 DUP1
0x4f6 REVERT
0x4f7 JUMPDEST
0x4f8 CALLVALUE
0x4f9 ISZERO
0x4fa PUSH2 0xb4
0x4fd JUMPI
---
0x4f2: JUMPDEST 
0x4f3: V276 = 0x0
0x4f6: REVERT 0x0 0x0
0x4f7: JUMPDEST 
0x4f8: V277 = CALLVALUE
0x4f9: V278 = ISZERO V277
0x4fa: V279 = 0xb4
0x4fd: THROWI V278
---
Entry stack: [V245]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4fe
[0x4fe:0x52e]
---
Predecessors: [0x4f2]
Successors: [0x52f]
---
0x4fe PUSH1 0x0
0x500 DUP1
0x501 REVERT
0x502 JUMPDEST
0x503 PUSH2 0xbc
0x506 PUSH2 0x426
0x509 JUMP
0x50a JUMPDEST
0x50b PUSH1 0x40
0x50d MLOAD
0x50e DUP1
0x50f DUP1
0x510 PUSH1 0x20
0x512 ADD
0x513 DUP3
0x514 DUP2
0x515 SUB
0x516 DUP3
0x517 MSTORE
0x518 DUP4
0x519 DUP2
0x51a DUP2
0x51b MLOAD
0x51c DUP2
0x51d MSTORE
0x51e PUSH1 0x20
0x520 ADD
0x521 SWAP2
0x522 POP
0x523 DUP1
0x524 MLOAD
0x525 SWAP1
0x526 PUSH1 0x20
0x528 ADD
0x529 SWAP1
0x52a DUP1
0x52b DUP4
0x52c DUP4
0x52d PUSH1 0x0
---
0x4fe: V280 = 0x0
0x501: REVERT 0x0 0x0
0x502: JUMPDEST 
0x503: V281 = 0xbc
0x506: V282 = 0x426
0x509: THROW 
0x50a: JUMPDEST 
0x50b: V283 = 0x40
0x50d: V284 = M[0x40]
0x510: V285 = 0x20
0x512: V286 = ADD 0x20 V284
0x515: V287 = SUB V286 V284
0x517: M[V284] = V287
0x51b: V288 = M[S0]
0x51d: M[V286] = V288
0x51e: V289 = 0x20
0x520: V290 = ADD 0x20 V286
0x524: V291 = M[S0]
0x526: V292 = 0x20
0x528: V293 = ADD 0x20 S0
0x52d: V294 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbc, 0x0, V293, V290, V291, V291, V293, V290, V284, V284, S0]
Exit stack: []

================================

Block 0x52f
[0x52f:0x537]
---
Predecessors: [0x4fe]
Successors: [0x538]
---
0x52f JUMPDEST
0x530 DUP4
0x531 DUP2
0x532 LT
0x533 ISZERO
0x534 PUSH2 0xfc
0x537 JUMPI
---
0x52f: JUMPDEST 
0x532: V295 = LT 0x0 V291
0x533: V296 = ISZERO V295
0x534: V297 = 0xfc
0x537: THROWI V296
---
Entry stack: [S9, V284, V284, V290, V293, V291, V291, V290, V293, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V284, V284, V290, V293, V291, V291, V290, V293, 0x0]

================================

Block 0x538
[0x538:0x55d]
---
Predecessors: [0x52f]
Successors: [0x55e]
---
0x538 DUP1
0x539 DUP3
0x53a ADD
0x53b MLOAD
0x53c DUP2
0x53d DUP5
0x53e ADD
0x53f MSTORE
0x540 PUSH1 0x20
0x542 DUP2
0x543 ADD
0x544 SWAP1
0x545 POP
0x546 PUSH2 0xe1
0x549 JUMP
0x54a JUMPDEST
0x54b POP
0x54c POP
0x54d POP
0x54e POP
0x54f SWAP1
0x550 POP
0x551 SWAP1
0x552 DUP2
0x553 ADD
0x554 SWAP1
0x555 PUSH1 0x1f
0x557 AND
0x558 DUP1
0x559 ISZERO
0x55a PUSH2 0x129
0x55d JUMPI
---
0x53a: V298 = ADD V293 0x0
0x53b: V299 = M[V298]
0x53e: V300 = ADD V290 0x0
0x53f: M[V300] = V299
0x540: V301 = 0x20
0x543: V302 = ADD 0x0 0x20
0x546: V303 = 0xe1
0x549: THROW 
0x54a: JUMPDEST 
0x553: V304 = ADD S4 S6
0x555: V305 = 0x1f
0x557: V306 = AND 0x1f S4
0x559: V307 = ISZERO V306
0x55a: V308 = 0x129
0x55d: THROWI V307
---
Entry stack: [S9, V284, V284, V290, V293, V291, V291, V290, V293, 0x0]
Stack pops: 3
Stack additions: [V306, V304]
Exit stack: []

================================

Block 0x55e
[0x55e:0x576]
---
Predecessors: [0x538]
Successors: [0x577]
---
0x55e DUP1
0x55f DUP3
0x560 SUB
0x561 DUP1
0x562 MLOAD
0x563 PUSH1 0x1
0x565 DUP4
0x566 PUSH1 0x20
0x568 SUB
0x569 PUSH2 0x100
0x56c EXP
0x56d SUB
0x56e NOT
0x56f AND
0x570 DUP2
0x571 MSTORE
0x572 PUSH1 0x20
0x574 ADD
0x575 SWAP2
0x576 POP
---
0x560: V309 = SUB V304 V306
0x562: V310 = M[V309]
0x563: V311 = 0x1
0x566: V312 = 0x20
0x568: V313 = SUB 0x20 V306
0x569: V314 = 0x100
0x56c: V315 = EXP 0x100 V313
0x56d: V316 = SUB V315 0x1
0x56e: V317 = NOT V316
0x56f: V318 = AND V317 V310
0x571: M[V309] = V318
0x572: V319 = 0x20
0x574: V320 = ADD 0x20 V309
---
Entry stack: [V304, V306]
Stack pops: 2
Stack additions: [V320, S0]
Exit stack: [V320, V306]

================================

Block 0x577
[0x577:0x58b]
---
Predecessors: [0x55e]
Successors: [0x58c]
---
0x577 JUMPDEST
0x578 POP
0x579 SWAP3
0x57a POP
0x57b POP
0x57c POP
0x57d PUSH1 0x40
0x57f MLOAD
0x580 DUP1
0x581 SWAP2
0x582 SUB
0x583 SWAP1
0x584 RETURN
0x585 JUMPDEST
0x586 CALLVALUE
0x587 ISZERO
0x588 PUSH2 0x142
0x58b JUMPI
---
0x577: JUMPDEST 
0x57d: V321 = 0x40
0x57f: V322 = M[0x40]
0x582: V323 = SUB V320 V322
0x584: RETURN V322 V323
0x585: JUMPDEST 
0x586: V324 = CALLVALUE
0x587: V325 = ISZERO V324
0x588: V326 = 0x142
0x58b: THROWI V325
---
Entry stack: [V320, V306]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x58c
[0x58c:0x5e5]
---
Predecessors: [0x577]
Successors: [0x5e6]
---
0x58c PUSH1 0x0
0x58e DUP1
0x58f REVERT
0x590 JUMPDEST
0x591 PUSH2 0x177
0x594 PUSH1 0x4
0x596 DUP1
0x597 DUP1
0x598 CALLDATALOAD
0x599 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ae AND
0x5af SWAP1
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 SWAP1
0x5b4 SWAP2
0x5b5 SWAP1
0x5b6 DUP1
0x5b7 CALLDATALOAD
0x5b8 SWAP1
0x5b9 PUSH1 0x20
0x5bb ADD
0x5bc SWAP1
0x5bd SWAP2
0x5be SWAP1
0x5bf POP
0x5c0 POP
0x5c1 PUSH2 0x4c4
0x5c4 JUMP
0x5c5 JUMPDEST
0x5c6 PUSH1 0x40
0x5c8 MLOAD
0x5c9 DUP1
0x5ca DUP3
0x5cb ISZERO
0x5cc ISZERO
0x5cd ISZERO
0x5ce ISZERO
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 SWAP2
0x5d5 POP
0x5d6 POP
0x5d7 PUSH1 0x40
0x5d9 MLOAD
0x5da DUP1
0x5db SWAP2
0x5dc SUB
0x5dd SWAP1
0x5de RETURN
0x5df JUMPDEST
0x5e0 CALLVALUE
0x5e1 ISZERO
0x5e2 PUSH2 0x19c
0x5e5 JUMPI
---
0x58c: V327 = 0x0
0x58f: REVERT 0x0 0x0
0x590: JUMPDEST 
0x591: V328 = 0x177
0x594: V329 = 0x4
0x598: V330 = CALLDATALOAD 0x4
0x599: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x5b0: V333 = 0x20
0x5b2: V334 = ADD 0x20 0x4
0x5b7: V335 = CALLDATALOAD 0x24
0x5b9: V336 = 0x20
0x5bb: V337 = ADD 0x20 0x24
0x5c1: V338 = 0x4c4
0x5c4: THROW 
0x5c5: JUMPDEST 
0x5c6: V339 = 0x40
0x5c8: V340 = M[0x40]
0x5cb: V341 = ISZERO S0
0x5cc: V342 = ISZERO V341
0x5cd: V343 = ISZERO V342
0x5ce: V344 = ISZERO V343
0x5d0: M[V340] = V344
0x5d1: V345 = 0x20
0x5d3: V346 = ADD 0x20 V340
0x5d7: V347 = 0x40
0x5d9: V348 = M[0x40]
0x5dc: V349 = SUB V346 V348
0x5de: RETURN V348 V349
0x5df: JUMPDEST 
0x5e0: V350 = CALLVALUE
0x5e1: V351 = ISZERO V350
0x5e2: V352 = 0x19c
0x5e5: THROWI V351
---
Entry stack: []
Stack pops: 0
Stack additions: [V335, V332, 0x177]
Exit stack: []

================================

Block 0x5e6
[0x5e6:0x60e]
---
Predecessors: [0x58c]
Successors: [0x60f]
---
0x5e6 PUSH1 0x0
0x5e8 DUP1
0x5e9 REVERT
0x5ea JUMPDEST
0x5eb PUSH2 0x1a4
0x5ee PUSH2 0x5b6
0x5f1 JUMP
0x5f2 JUMPDEST
0x5f3 PUSH1 0x40
0x5f5 MLOAD
0x5f6 DUP1
0x5f7 DUP3
0x5f8 DUP2
0x5f9 MSTORE
0x5fa PUSH1 0x20
0x5fc ADD
0x5fd SWAP2
0x5fe POP
0x5ff POP
0x600 PUSH1 0x40
0x602 MLOAD
0x603 DUP1
0x604 SWAP2
0x605 SUB
0x606 SWAP1
0x607 RETURN
0x608 JUMPDEST
0x609 CALLVALUE
0x60a ISZERO
0x60b PUSH2 0x1c5
0x60e JUMPI
---
0x5e6: V353 = 0x0
0x5e9: REVERT 0x0 0x0
0x5ea: JUMPDEST 
0x5eb: V354 = 0x1a4
0x5ee: V355 = 0x5b6
0x5f1: THROW 
0x5f2: JUMPDEST 
0x5f3: V356 = 0x40
0x5f5: V357 = M[0x40]
0x5f9: M[V357] = S0
0x5fa: V358 = 0x20
0x5fc: V359 = ADD 0x20 V357
0x600: V360 = 0x40
0x602: V361 = M[0x40]
0x605: V362 = SUB V359 V361
0x607: RETURN V361 V362
0x608: JUMPDEST 
0x609: V363 = CALLVALUE
0x60a: V364 = ISZERO V363
0x60b: V365 = 0x1c5
0x60e: THROWI V364
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a4]
Exit stack: []

================================

Block 0x60f
[0x60f:0x687]
---
Predecessors: [0x5e6]
Successors: [0x688]
---
0x60f PUSH1 0x0
0x611 DUP1
0x612 REVERT
0x613 JUMPDEST
0x614 PUSH2 0x219
0x617 PUSH1 0x4
0x619 DUP1
0x61a DUP1
0x61b CALLDATALOAD
0x61c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x631 AND
0x632 SWAP1
0x633 PUSH1 0x20
0x635 ADD
0x636 SWAP1
0x637 SWAP2
0x638 SWAP1
0x639 DUP1
0x63a CALLDATALOAD
0x63b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x650 AND
0x651 SWAP1
0x652 PUSH1 0x20
0x654 ADD
0x655 SWAP1
0x656 SWAP2
0x657 SWAP1
0x658 DUP1
0x659 CALLDATALOAD
0x65a SWAP1
0x65b PUSH1 0x20
0x65d ADD
0x65e SWAP1
0x65f SWAP2
0x660 SWAP1
0x661 POP
0x662 POP
0x663 PUSH2 0x5bc
0x666 JUMP
0x667 JUMPDEST
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c DUP3
0x66d ISZERO
0x66e ISZERO
0x66f ISZERO
0x670 ISZERO
0x671 DUP2
0x672 MSTORE
0x673 PUSH1 0x20
0x675 ADD
0x676 SWAP2
0x677 POP
0x678 POP
0x679 PUSH1 0x40
0x67b MLOAD
0x67c DUP1
0x67d SWAP2
0x67e SUB
0x67f SWAP1
0x680 RETURN
0x681 JUMPDEST
0x682 CALLVALUE
0x683 ISZERO
0x684 PUSH2 0x23e
0x687 JUMPI
---
0x60f: V366 = 0x0
0x612: REVERT 0x0 0x0
0x613: JUMPDEST 
0x614: V367 = 0x219
0x617: V368 = 0x4
0x61b: V369 = CALLDATALOAD 0x4
0x61c: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x631: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x633: V372 = 0x20
0x635: V373 = ADD 0x20 0x4
0x63a: V374 = CALLDATALOAD 0x24
0x63b: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x650: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x652: V377 = 0x20
0x654: V378 = ADD 0x20 0x24
0x659: V379 = CALLDATALOAD 0x44
0x65b: V380 = 0x20
0x65d: V381 = ADD 0x20 0x44
0x663: V382 = 0x5bc
0x666: THROW 
0x667: JUMPDEST 
0x668: V383 = 0x40
0x66a: V384 = M[0x40]
0x66d: V385 = ISZERO S0
0x66e: V386 = ISZERO V385
0x66f: V387 = ISZERO V386
0x670: V388 = ISZERO V387
0x672: M[V384] = V388
0x673: V389 = 0x20
0x675: V390 = ADD 0x20 V384
0x679: V391 = 0x40
0x67b: V392 = M[0x40]
0x67e: V393 = SUB V390 V392
0x680: RETURN V392 V393
0x681: JUMPDEST 
0x682: V394 = CALLVALUE
0x683: V395 = ISZERO V394
0x684: V396 = 0x23e
0x687: THROWI V395
---
Entry stack: []
Stack pops: 0
Stack additions: [V379, V376, V371, 0x219]
Exit stack: []

================================

Block 0x688
[0x688:0x6b6]
---
Predecessors: [0x60f]
Successors: [0x6b7]
---
0x688 PUSH1 0x0
0x68a DUP1
0x68b REVERT
0x68c JUMPDEST
0x68d PUSH2 0x246
0x690 PUSH2 0x97b
0x693 JUMP
0x694 JUMPDEST
0x695 PUSH1 0x40
0x697 MLOAD
0x698 DUP1
0x699 DUP3
0x69a PUSH1 0xff
0x69c AND
0x69d PUSH1 0xff
0x69f AND
0x6a0 DUP2
0x6a1 MSTORE
0x6a2 PUSH1 0x20
0x6a4 ADD
0x6a5 SWAP2
0x6a6 POP
0x6a7 POP
0x6a8 PUSH1 0x40
0x6aa MLOAD
0x6ab DUP1
0x6ac SWAP2
0x6ad SUB
0x6ae SWAP1
0x6af RETURN
0x6b0 JUMPDEST
0x6b1 CALLVALUE
0x6b2 ISZERO
0x6b3 PUSH2 0x26d
0x6b6 JUMPI
---
0x688: V397 = 0x0
0x68b: REVERT 0x0 0x0
0x68c: JUMPDEST 
0x68d: V398 = 0x246
0x690: V399 = 0x97b
0x693: THROW 
0x694: JUMPDEST 
0x695: V400 = 0x40
0x697: V401 = M[0x40]
0x69a: V402 = 0xff
0x69c: V403 = AND 0xff S0
0x69d: V404 = 0xff
0x69f: V405 = AND 0xff V403
0x6a1: M[V401] = V405
0x6a2: V406 = 0x20
0x6a4: V407 = ADD 0x20 V401
0x6a8: V408 = 0x40
0x6aa: V409 = M[0x40]
0x6ad: V410 = SUB V407 V409
0x6af: RETURN V409 V410
0x6b0: JUMPDEST 
0x6b1: V411 = CALLVALUE
0x6b2: V412 = ISZERO V411
0x6b3: V413 = 0x26d
0x6b6: THROWI V412
---
Entry stack: []
Stack pops: 0
Stack additions: [0x246]
Exit stack: []

================================

Block 0x6b7
[0x6b7:0x6d9]
---
Predecessors: [0x688]
Successors: [0x6da]
---
0x6b7 PUSH1 0x0
0x6b9 DUP1
0x6ba REVERT
0x6bb JUMPDEST
0x6bc PUSH2 0x283
0x6bf PUSH1 0x4
0x6c1 DUP1
0x6c2 DUP1
0x6c3 CALLDATALOAD
0x6c4 SWAP1
0x6c5 PUSH1 0x20
0x6c7 ADD
0x6c8 SWAP1
0x6c9 SWAP2
0x6ca SWAP1
0x6cb POP
0x6cc POP
0x6cd PUSH2 0x98e
0x6d0 JUMP
0x6d1 JUMPDEST
0x6d2 STOP
0x6d3 JUMPDEST
0x6d4 CALLVALUE
0x6d5 ISZERO
0x6d6 PUSH2 0x290
0x6d9 JUMPI
---
0x6b7: V414 = 0x0
0x6ba: REVERT 0x0 0x0
0x6bb: JUMPDEST 
0x6bc: V415 = 0x283
0x6bf: V416 = 0x4
0x6c3: V417 = CALLDATALOAD 0x4
0x6c5: V418 = 0x20
0x6c7: V419 = ADD 0x20 0x4
0x6cd: V420 = 0x98e
0x6d0: THROW 
0x6d1: JUMPDEST 
0x6d2: STOP 
0x6d3: JUMPDEST 
0x6d4: V421 = CALLVALUE
0x6d5: V422 = ISZERO V421
0x6d6: V423 = 0x290
0x6d9: THROWI V422
---
Entry stack: []
Stack pops: 0
Stack additions: [V417, 0x283]
Exit stack: []

================================

Block 0x6da
[0x6da:0x726]
---
Predecessors: [0x6b7]
Successors: [0x727]
---
0x6da PUSH1 0x0
0x6dc DUP1
0x6dd REVERT
0x6de JUMPDEST
0x6df PUSH2 0x2bc
0x6e2 PUSH1 0x4
0x6e4 DUP1
0x6e5 DUP1
0x6e6 CALLDATALOAD
0x6e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fc AND
0x6fd SWAP1
0x6fe PUSH1 0x20
0x700 ADD
0x701 SWAP1
0x702 SWAP2
0x703 SWAP1
0x704 POP
0x705 POP
0x706 PUSH2 0xae3
0x709 JUMP
0x70a JUMPDEST
0x70b PUSH1 0x40
0x70d MLOAD
0x70e DUP1
0x70f DUP3
0x710 DUP2
0x711 MSTORE
0x712 PUSH1 0x20
0x714 ADD
0x715 SWAP2
0x716 POP
0x717 POP
0x718 PUSH1 0x40
0x71a MLOAD
0x71b DUP1
0x71c SWAP2
0x71d SUB
0x71e SWAP1
0x71f RETURN
0x720 JUMPDEST
0x721 CALLVALUE
0x722 ISZERO
0x723 PUSH2 0x2dd
0x726 JUMPI
---
0x6da: V424 = 0x0
0x6dd: REVERT 0x0 0x0
0x6de: JUMPDEST 
0x6df: V425 = 0x2bc
0x6e2: V426 = 0x4
0x6e6: V427 = CALLDATALOAD 0x4
0x6e7: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fc: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x6fe: V430 = 0x20
0x700: V431 = ADD 0x20 0x4
0x706: V432 = 0xae3
0x709: THROW 
0x70a: JUMPDEST 
0x70b: V433 = 0x40
0x70d: V434 = M[0x40]
0x711: M[V434] = S0
0x712: V435 = 0x20
0x714: V436 = ADD 0x20 V434
0x718: V437 = 0x40
0x71a: V438 = M[0x40]
0x71d: V439 = SUB V436 V438
0x71f: RETURN V438 V439
0x720: JUMPDEST 
0x721: V440 = CALLVALUE
0x722: V441 = ISZERO V440
0x723: V442 = 0x2dd
0x726: THROWI V441
---
Entry stack: []
Stack pops: 0
Stack additions: [V429, 0x2bc]
Exit stack: []

================================

Block 0x727
[0x727:0x757]
---
Predecessors: [0x6da]
Successors: [0x758]
---
0x727 PUSH1 0x0
0x729 DUP1
0x72a REVERT
0x72b JUMPDEST
0x72c PUSH2 0x2e5
0x72f PUSH2 0xb2c
0x732 JUMP
0x733 JUMPDEST
0x734 PUSH1 0x40
0x736 MLOAD
0x737 DUP1
0x738 DUP1
0x739 PUSH1 0x20
0x73b ADD
0x73c DUP3
0x73d DUP2
0x73e SUB
0x73f DUP3
0x740 MSTORE
0x741 DUP4
0x742 DUP2
0x743 DUP2
0x744 MLOAD
0x745 DUP2
0x746 MSTORE
0x747 PUSH1 0x20
0x749 ADD
0x74a SWAP2
0x74b POP
0x74c DUP1
0x74d MLOAD
0x74e SWAP1
0x74f PUSH1 0x20
0x751 ADD
0x752 SWAP1
0x753 DUP1
0x754 DUP4
0x755 DUP4
0x756 PUSH1 0x0
---
0x727: V443 = 0x0
0x72a: REVERT 0x0 0x0
0x72b: JUMPDEST 
0x72c: V444 = 0x2e5
0x72f: V445 = 0xb2c
0x732: THROW 
0x733: JUMPDEST 
0x734: V446 = 0x40
0x736: V447 = M[0x40]
0x739: V448 = 0x20
0x73b: V449 = ADD 0x20 V447
0x73e: V450 = SUB V449 V447
0x740: M[V447] = V450
0x744: V451 = M[S0]
0x746: M[V449] = V451
0x747: V452 = 0x20
0x749: V453 = ADD 0x20 V449
0x74d: V454 = M[S0]
0x74f: V455 = 0x20
0x751: V456 = ADD 0x20 S0
0x756: V457 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2e5, 0x0, V456, V453, V454, V454, V456, V453, V447, V447, S0]
Exit stack: []

================================

Block 0x758
[0x758:0x760]
---
Predecessors: [0x727]
Successors: [0x761]
---
0x758 JUMPDEST
0x759 DUP4
0x75a DUP2
0x75b LT
0x75c ISZERO
0x75d PUSH2 0x325
0x760 JUMPI
---
0x758: JUMPDEST 
0x75b: V458 = LT 0x0 V454
0x75c: V459 = ISZERO V458
0x75d: V460 = 0x325
0x760: THROWI V459
---
Entry stack: [S9, V447, V447, V453, V456, V454, V454, V453, V456, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V447, V447, V453, V456, V454, V454, V453, V456, 0x0]

================================

Block 0x761
[0x761:0x786]
---
Predecessors: [0x758]
Successors: [0x787]
---
0x761 DUP1
0x762 DUP3
0x763 ADD
0x764 MLOAD
0x765 DUP2
0x766 DUP5
0x767 ADD
0x768 MSTORE
0x769 PUSH1 0x20
0x76b DUP2
0x76c ADD
0x76d SWAP1
0x76e POP
0x76f PUSH2 0x30a
0x772 JUMP
0x773 JUMPDEST
0x774 POP
0x775 POP
0x776 POP
0x777 POP
0x778 SWAP1
0x779 POP
0x77a SWAP1
0x77b DUP2
0x77c ADD
0x77d SWAP1
0x77e PUSH1 0x1f
0x780 AND
0x781 DUP1
0x782 ISZERO
0x783 PUSH2 0x352
0x786 JUMPI
---
0x763: V461 = ADD V456 0x0
0x764: V462 = M[V461]
0x767: V463 = ADD V453 0x0
0x768: M[V463] = V462
0x769: V464 = 0x20
0x76c: V465 = ADD 0x0 0x20
0x76f: V466 = 0x30a
0x772: THROW 
0x773: JUMPDEST 
0x77c: V467 = ADD S4 S6
0x77e: V468 = 0x1f
0x780: V469 = AND 0x1f S4
0x782: V470 = ISZERO V469
0x783: V471 = 0x352
0x786: THROWI V470
---
Entry stack: [S9, V447, V447, V453, V456, V454, V454, V453, V456, 0x0]
Stack pops: 3
Stack additions: [V469, V467]
Exit stack: []

================================

Block 0x787
[0x787:0x79f]
---
Predecessors: [0x761]
Successors: [0x7a0]
---
0x787 DUP1
0x788 DUP3
0x789 SUB
0x78a DUP1
0x78b MLOAD
0x78c PUSH1 0x1
0x78e DUP4
0x78f PUSH1 0x20
0x791 SUB
0x792 PUSH2 0x100
0x795 EXP
0x796 SUB
0x797 NOT
0x798 AND
0x799 DUP2
0x79a MSTORE
0x79b PUSH1 0x20
0x79d ADD
0x79e SWAP2
0x79f POP
---
0x789: V472 = SUB V467 V469
0x78b: V473 = M[V472]
0x78c: V474 = 0x1
0x78f: V475 = 0x20
0x791: V476 = SUB 0x20 V469
0x792: V477 = 0x100
0x795: V478 = EXP 0x100 V476
0x796: V479 = SUB V478 0x1
0x797: V480 = NOT V479
0x798: V481 = AND V480 V473
0x79a: M[V472] = V481
0x79b: V482 = 0x20
0x79d: V483 = ADD 0x20 V472
---
Entry stack: [V467, V469]
Stack pops: 2
Stack additions: [V483, S0]
Exit stack: [V483, V469]

================================

Block 0x7a0
[0x7a0:0x7b4]
---
Predecessors: [0x787]
Successors: [0x7b5]
---
0x7a0 JUMPDEST
0x7a1 POP
0x7a2 SWAP3
0x7a3 POP
0x7a4 POP
0x7a5 POP
0x7a6 PUSH1 0x40
0x7a8 MLOAD
0x7a9 DUP1
0x7aa SWAP2
0x7ab SUB
0x7ac SWAP1
0x7ad RETURN
0x7ae JUMPDEST
0x7af CALLVALUE
0x7b0 ISZERO
0x7b1 PUSH2 0x36b
0x7b4 JUMPI
---
0x7a0: JUMPDEST 
0x7a6: V484 = 0x40
0x7a8: V485 = M[0x40]
0x7ab: V486 = SUB V483 V485
0x7ad: RETURN V485 V486
0x7ae: JUMPDEST 
0x7af: V487 = CALLVALUE
0x7b0: V488 = ISZERO V487
0x7b1: V489 = 0x36b
0x7b4: THROWI V488
---
Entry stack: [V483, V469]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x7b5
[0x7b5:0x80e]
---
Predecessors: [0x7a0]
Successors: [0x80f]
---
0x7b5 PUSH1 0x0
0x7b7 DUP1
0x7b8 REVERT
0x7b9 JUMPDEST
0x7ba PUSH2 0x3a0
0x7bd PUSH1 0x4
0x7bf DUP1
0x7c0 DUP1
0x7c1 CALLDATALOAD
0x7c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d7 AND
0x7d8 SWAP1
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc SWAP1
0x7dd SWAP2
0x7de SWAP1
0x7df DUP1
0x7e0 CALLDATALOAD
0x7e1 SWAP1
0x7e2 PUSH1 0x20
0x7e4 ADD
0x7e5 SWAP1
0x7e6 SWAP2
0x7e7 SWAP1
0x7e8 POP
0x7e9 POP
0x7ea PUSH2 0xbca
0x7ed JUMP
0x7ee JUMPDEST
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 DUP1
0x7f3 DUP3
0x7f4 ISZERO
0x7f5 ISZERO
0x7f6 ISZERO
0x7f7 ISZERO
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc ADD
0x7fd SWAP2
0x7fe POP
0x7ff POP
0x800 PUSH1 0x40
0x802 MLOAD
0x803 DUP1
0x804 SWAP2
0x805 SUB
0x806 SWAP1
0x807 RETURN
0x808 JUMPDEST
0x809 CALLVALUE
0x80a ISZERO
0x80b PUSH2 0x3c5
0x80e JUMPI
---
0x7b5: V490 = 0x0
0x7b8: REVERT 0x0 0x0
0x7b9: JUMPDEST 
0x7ba: V491 = 0x3a0
0x7bd: V492 = 0x4
0x7c1: V493 = CALLDATALOAD 0x4
0x7c2: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d7: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x7d9: V496 = 0x20
0x7db: V497 = ADD 0x20 0x4
0x7e0: V498 = CALLDATALOAD 0x24
0x7e2: V499 = 0x20
0x7e4: V500 = ADD 0x20 0x24
0x7ea: V501 = 0xbca
0x7ed: THROW 
0x7ee: JUMPDEST 
0x7ef: V502 = 0x40
0x7f1: V503 = M[0x40]
0x7f4: V504 = ISZERO S0
0x7f5: V505 = ISZERO V504
0x7f6: V506 = ISZERO V505
0x7f7: V507 = ISZERO V506
0x7f9: M[V503] = V507
0x7fa: V508 = 0x20
0x7fc: V509 = ADD 0x20 V503
0x800: V510 = 0x40
0x802: V511 = M[0x40]
0x805: V512 = SUB V509 V511
0x807: RETURN V511 V512
0x808: JUMPDEST 
0x809: V513 = CALLVALUE
0x80a: V514 = ISZERO V513
0x80b: V515 = 0x3c5
0x80e: THROWI V514
---
Entry stack: []
Stack pops: 0
Stack additions: [V498, V495, 0x3a0]
Exit stack: []

================================

Block 0x80f
[0x80f:0x8c3]
---
Predecessors: [0x7b5]
Successors: [0x8c4]
---
0x80f PUSH1 0x0
0x811 DUP1
0x812 REVERT
0x813 JUMPDEST
0x814 PUSH2 0x410
0x817 PUSH1 0x4
0x819 DUP1
0x81a DUP1
0x81b CALLDATALOAD
0x81c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x831 AND
0x832 SWAP1
0x833 PUSH1 0x20
0x835 ADD
0x836 SWAP1
0x837 SWAP2
0x838 SWAP1
0x839 DUP1
0x83a CALLDATALOAD
0x83b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x850 AND
0x851 SWAP1
0x852 PUSH1 0x20
0x854 ADD
0x855 SWAP1
0x856 SWAP2
0x857 SWAP1
0x858 POP
0x859 POP
0x85a PUSH2 0xdee
0x85d JUMP
0x85e JUMPDEST
0x85f PUSH1 0x40
0x861 MLOAD
0x862 DUP1
0x863 DUP3
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x20
0x868 ADD
0x869 SWAP2
0x86a POP
0x86b POP
0x86c PUSH1 0x40
0x86e MLOAD
0x86f DUP1
0x870 SWAP2
0x871 SUB
0x872 SWAP1
0x873 RETURN
0x874 JUMPDEST
0x875 PUSH1 0x2
0x877 DUP1
0x878 SLOAD
0x879 PUSH1 0x1
0x87b DUP2
0x87c PUSH1 0x1
0x87e AND
0x87f ISZERO
0x880 PUSH2 0x100
0x883 MUL
0x884 SUB
0x885 AND
0x886 PUSH1 0x2
0x888 SWAP1
0x889 DIV
0x88a DUP1
0x88b PUSH1 0x1f
0x88d ADD
0x88e PUSH1 0x20
0x890 DUP1
0x891 SWAP2
0x892 DIV
0x893 MUL
0x894 PUSH1 0x20
0x896 ADD
0x897 PUSH1 0x40
0x899 MLOAD
0x89a SWAP1
0x89b DUP2
0x89c ADD
0x89d PUSH1 0x40
0x89f MSTORE
0x8a0 DUP1
0x8a1 SWAP3
0x8a2 SWAP2
0x8a3 SWAP1
0x8a4 DUP2
0x8a5 DUP2
0x8a6 MSTORE
0x8a7 PUSH1 0x20
0x8a9 ADD
0x8aa DUP3
0x8ab DUP1
0x8ac SLOAD
0x8ad PUSH1 0x1
0x8af DUP2
0x8b0 PUSH1 0x1
0x8b2 AND
0x8b3 ISZERO
0x8b4 PUSH2 0x100
0x8b7 MUL
0x8b8 SUB
0x8b9 AND
0x8ba PUSH1 0x2
0x8bc SWAP1
0x8bd DIV
0x8be DUP1
0x8bf ISZERO
0x8c0 PUSH2 0x4bc
0x8c3 JUMPI
---
0x80f: V516 = 0x0
0x812: REVERT 0x0 0x0
0x813: JUMPDEST 
0x814: V517 = 0x410
0x817: V518 = 0x4
0x81b: V519 = CALLDATALOAD 0x4
0x81c: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x831: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x833: V522 = 0x20
0x835: V523 = ADD 0x20 0x4
0x83a: V524 = CALLDATALOAD 0x24
0x83b: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x850: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x852: V527 = 0x20
0x854: V528 = ADD 0x20 0x24
0x85a: V529 = 0xdee
0x85d: THROW 
0x85e: JUMPDEST 
0x85f: V530 = 0x40
0x861: V531 = M[0x40]
0x865: M[V531] = S0
0x866: V532 = 0x20
0x868: V533 = ADD 0x20 V531
0x86c: V534 = 0x40
0x86e: V535 = M[0x40]
0x871: V536 = SUB V533 V535
0x873: RETURN V535 V536
0x874: JUMPDEST 
0x875: V537 = 0x2
0x878: V538 = S[0x2]
0x879: V539 = 0x1
0x87c: V540 = 0x1
0x87e: V541 = AND 0x1 V538
0x87f: V542 = ISZERO V541
0x880: V543 = 0x100
0x883: V544 = MUL 0x100 V542
0x884: V545 = SUB V544 0x1
0x885: V546 = AND V545 V538
0x886: V547 = 0x2
0x889: V548 = DIV V546 0x2
0x88b: V549 = 0x1f
0x88d: V550 = ADD 0x1f V548
0x88e: V551 = 0x20
0x892: V552 = DIV V550 0x20
0x893: V553 = MUL V552 0x20
0x894: V554 = 0x20
0x896: V555 = ADD 0x20 V553
0x897: V556 = 0x40
0x899: V557 = M[0x40]
0x89c: V558 = ADD V557 V555
0x89d: V559 = 0x40
0x89f: M[0x40] = V558
0x8a6: M[V557] = V548
0x8a7: V560 = 0x20
0x8a9: V561 = ADD 0x20 V557
0x8ac: V562 = S[0x2]
0x8ad: V563 = 0x1
0x8b0: V564 = 0x1
0x8b2: V565 = AND 0x1 V562
0x8b3: V566 = ISZERO V565
0x8b4: V567 = 0x100
0x8b7: V568 = MUL 0x100 V566
0x8b8: V569 = SUB V568 0x1
0x8b9: V570 = AND V569 V562
0x8ba: V571 = 0x2
0x8bd: V572 = DIV V570 0x2
0x8bf: V573 = ISZERO V572
0x8c0: V574 = 0x4bc
0x8c3: THROWI V573
---
Entry stack: []
Stack pops: 0
Stack additions: [V526, V521, 0x410, V572, 0x2, V561, V548, 0x2, V557]
Exit stack: []

================================

Block 0x8c4
[0x8c4:0x8cb]
---
Predecessors: [0x80f]
Successors: [0x8cc]
---
0x8c4 DUP1
0x8c5 PUSH1 0x1f
0x8c7 LT
0x8c8 PUSH2 0x491
0x8cb JUMPI
---
0x8c5: V575 = 0x1f
0x8c7: V576 = LT 0x1f V572
0x8c8: V577 = 0x491
0x8cb: THROWI V576
---
Entry stack: [V557, 0x2, V548, V561, 0x2, V572]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V557, 0x2, V548, V561, 0x2, V572]

================================

Block 0x8cc
[0x8cc:0x8ec]
---
Predecessors: [0x8c4]
Successors: [0x8ed]
---
0x8cc PUSH2 0x100
0x8cf DUP1
0x8d0 DUP4
0x8d1 SLOAD
0x8d2 DIV
0x8d3 MUL
0x8d4 DUP4
0x8d5 MSTORE
0x8d6 SWAP2
0x8d7 PUSH1 0x20
0x8d9 ADD
0x8da SWAP2
0x8db PUSH2 0x4bc
0x8de JUMP
0x8df JUMPDEST
0x8e0 DUP3
0x8e1 ADD
0x8e2 SWAP2
0x8e3 SWAP1
0x8e4 PUSH1 0x0
0x8e6 MSTORE
0x8e7 PUSH1 0x20
0x8e9 PUSH1 0x0
0x8eb SHA3
0x8ec SWAP1
---
0x8cc: V578 = 0x100
0x8d1: V579 = S[0x2]
0x8d2: V580 = DIV V579 0x100
0x8d3: V581 = MUL V580 0x100
0x8d5: M[V561] = V581
0x8d7: V582 = 0x20
0x8d9: V583 = ADD 0x20 V561
0x8db: V584 = 0x4bc
0x8de: THROW 
0x8df: JUMPDEST 
0x8e1: V585 = ADD S2 S0
0x8e4: V586 = 0x0
0x8e6: M[0x0] = S1
0x8e7: V587 = 0x20
0x8e9: V588 = 0x0
0x8eb: V589 = SHA3 0x0 0x20
---
Entry stack: [V557, 0x2, V548, V561, 0x2, V572]
Stack pops: 3
Stack additions: [S2, V589, V585]
Exit stack: []

================================

Block 0x8ed
[0x8ed:0x900]
---
Predecessors: [0x8cc]
Successors: [0x901]
---
0x8ed JUMPDEST
0x8ee DUP2
0x8ef SLOAD
0x8f0 DUP2
0x8f1 MSTORE
0x8f2 SWAP1
0x8f3 PUSH1 0x1
0x8f5 ADD
0x8f6 SWAP1
0x8f7 PUSH1 0x20
0x8f9 ADD
0x8fa DUP1
0x8fb DUP4
0x8fc GT
0x8fd PUSH2 0x49f
0x900 JUMPI
---
0x8ed: JUMPDEST 
0x8ef: V590 = S[V589]
0x8f1: M[S0] = V590
0x8f3: V591 = 0x1
0x8f5: V592 = ADD 0x1 V589
0x8f7: V593 = 0x20
0x8f9: V594 = ADD 0x20 S0
0x8fc: V595 = GT V585 V594
0x8fd: V596 = 0x49f
0x900: THROWI V595
---
Entry stack: [V585, V589, S0]
Stack pops: 3
Stack additions: [S2, V592, V594]
Exit stack: [V585, V592, V594]

================================

Block 0x901
[0x901:0x909]
---
Predecessors: [0x8ed]
Successors: [0x90a]
---
0x901 DUP3
0x902 SWAP1
0x903 SUB
0x904 PUSH1 0x1f
0x906 AND
0x907 DUP3
0x908 ADD
0x909 SWAP2
---
0x903: V597 = SUB V594 V585
0x904: V598 = 0x1f
0x906: V599 = AND 0x1f V597
0x908: V600 = ADD V585 V599
---
Entry stack: [V585, V592, V594]
Stack pops: 3
Stack additions: [V600, S1, S2]
Exit stack: [V600, V592, V585]

================================

Block 0x90a
[0x90a:0xa42]
---
Predecessors: [0x901]
Successors: [0xa43]
---
0x90a JUMPDEST
0x90b POP
0x90c POP
0x90d POP
0x90e POP
0x90f POP
0x910 DUP2
0x911 JUMP
0x912 JUMPDEST
0x913 PUSH1 0x0
0x915 DUP2
0x916 PUSH1 0x5
0x918 PUSH1 0x0
0x91a CALLER
0x91b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x930 AND
0x931 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x946 AND
0x947 DUP2
0x948 MSTORE
0x949 PUSH1 0x20
0x94b ADD
0x94c SWAP1
0x94d DUP2
0x94e MSTORE
0x94f PUSH1 0x20
0x951 ADD
0x952 PUSH1 0x0
0x954 SHA3
0x955 PUSH1 0x0
0x957 DUP6
0x958 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96d AND
0x96e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x983 AND
0x984 DUP2
0x985 MSTORE
0x986 PUSH1 0x20
0x988 ADD
0x989 SWAP1
0x98a DUP2
0x98b MSTORE
0x98c PUSH1 0x20
0x98e ADD
0x98f PUSH1 0x0
0x991 SHA3
0x992 DUP2
0x993 SWAP1
0x994 SSTORE
0x995 POP
0x996 DUP3
0x997 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ac AND
0x9ad CALLER
0x9ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c3 AND
0x9c4 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9e5 DUP5
0x9e6 PUSH1 0x40
0x9e8 MLOAD
0x9e9 DUP1
0x9ea DUP3
0x9eb DUP2
0x9ec MSTORE
0x9ed PUSH1 0x20
0x9ef ADD
0x9f0 SWAP2
0x9f1 POP
0x9f2 POP
0x9f3 PUSH1 0x40
0x9f5 MLOAD
0x9f6 DUP1
0x9f7 SWAP2
0x9f8 SUB
0x9f9 SWAP1
0x9fa LOG3
0x9fb PUSH1 0x1
0x9fd SWAP1
0x9fe POP
0x9ff SWAP3
0xa00 SWAP2
0xa01 POP
0xa02 POP
0xa03 JUMP
0xa04 JUMPDEST
0xa05 PUSH1 0x0
0xa07 SLOAD
0xa08 DUP2
0xa09 JUMP
0xa0a JUMPDEST
0xa0b PUSH1 0x0
0xa0d DUP1
0xa0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa23 AND
0xa24 DUP4
0xa25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3a AND
0xa3b EQ
0xa3c ISZERO
0xa3d ISZERO
0xa3e ISZERO
0xa3f PUSH2 0x5f9
0xa42 JUMPI
---
0x90a: JUMPDEST 
0x911: JUMP S6
0x912: JUMPDEST 
0x913: V601 = 0x0
0x916: V602 = 0x5
0x918: V603 = 0x0
0x91a: V604 = CALLER
0x91b: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0x930: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x931: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x946: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x948: M[0x0] = V608
0x949: V609 = 0x20
0x94b: V610 = ADD 0x20 0x0
0x94e: M[0x20] = 0x5
0x94f: V611 = 0x20
0x951: V612 = ADD 0x20 0x20
0x952: V613 = 0x0
0x954: V614 = SHA3 0x0 0x40
0x955: V615 = 0x0
0x958: V616 = 0xffffffffffffffffffffffffffffffffffffffff
0x96d: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x96e: V618 = 0xffffffffffffffffffffffffffffffffffffffff
0x983: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0x985: M[0x0] = V619
0x986: V620 = 0x20
0x988: V621 = ADD 0x20 0x0
0x98b: M[0x20] = V614
0x98c: V622 = 0x20
0x98e: V623 = ADD 0x20 0x20
0x98f: V624 = 0x0
0x991: V625 = SHA3 0x0 0x40
0x994: S[V625] = S0
0x997: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ac: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x9ad: V628 = CALLER
0x9ae: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c3: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x9c4: V631 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9e6: V632 = 0x40
0x9e8: V633 = M[0x40]
0x9ec: M[V633] = S0
0x9ed: V634 = 0x20
0x9ef: V635 = ADD 0x20 V633
0x9f3: V636 = 0x40
0x9f5: V637 = M[0x40]
0x9f8: V638 = SUB V635 V637
0x9fa: LOG V637 V638 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V630 V627
0x9fb: V639 = 0x1
0xa03: JUMP S2
0xa04: JUMPDEST 
0xa05: V640 = 0x0
0xa07: V641 = S[0x0]
0xa09: JUMP S0
0xa0a: JUMPDEST 
0xa0b: V642 = 0x0
0xa0e: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0xa23: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xa25: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3a: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa3b: V647 = EQ V646 0x0
0xa3c: V648 = ISZERO V647
0xa3d: V649 = ISZERO V648
0xa3e: V650 = ISZERO V649
0xa3f: V651 = 0x5f9
0xa42: THROWI V650
---
Entry stack: [V600, V592, V585]
Stack pops: 44
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0xa43
[0xa43:0xa90]
---
Predecessors: [0x90a]
Successors: [0xa91]
---
0xa43 PUSH1 0x0
0xa45 DUP1
0xa46 REVERT
0xa47 JUMPDEST
0xa48 PUSH1 0x1
0xa4a PUSH1 0x0
0xa4c DUP6
0xa4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa62 AND
0xa63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa78 AND
0xa79 DUP2
0xa7a MSTORE
0xa7b PUSH1 0x20
0xa7d ADD
0xa7e SWAP1
0xa7f DUP2
0xa80 MSTORE
0xa81 PUSH1 0x20
0xa83 ADD
0xa84 PUSH1 0x0
0xa86 SHA3
0xa87 SLOAD
0xa88 DUP3
0xa89 GT
0xa8a ISZERO
0xa8b ISZERO
0xa8c ISZERO
0xa8d PUSH2 0x647
0xa90 JUMPI
---
0xa43: V652 = 0x0
0xa46: REVERT 0x0 0x0
0xa47: JUMPDEST 
0xa48: V653 = 0x1
0xa4a: V654 = 0x0
0xa4d: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0xa62: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa63: V657 = 0xffffffffffffffffffffffffffffffffffffffff
0xa78: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0xa7a: M[0x0] = V658
0xa7b: V659 = 0x20
0xa7d: V660 = ADD 0x20 0x0
0xa80: M[0x20] = 0x1
0xa81: V661 = 0x20
0xa83: V662 = ADD 0x20 0x20
0xa84: V663 = 0x0
0xa86: V664 = SHA3 0x0 0x40
0xa87: V665 = S[V664]
0xa89: V666 = GT S1 V665
0xa8a: V667 = ISZERO V666
0xa8b: V668 = ISZERO V667
0xa8c: V669 = ISZERO V668
0xa8d: V670 = 0x647
0xa90: THROWI V669
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0xa91
[0xa91:0xb1b]
---
Predecessors: [0xa43]
Successors: [0xb1c]
---
0xa91 PUSH1 0x0
0xa93 DUP1
0xa94 REVERT
0xa95 JUMPDEST
0xa96 PUSH1 0x5
0xa98 PUSH1 0x0
0xa9a DUP6
0xa9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab0 AND
0xab1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac6 AND
0xac7 DUP2
0xac8 MSTORE
0xac9 PUSH1 0x20
0xacb ADD
0xacc SWAP1
0xacd DUP2
0xace MSTORE
0xacf PUSH1 0x20
0xad1 ADD
0xad2 PUSH1 0x0
0xad4 SHA3
0xad5 PUSH1 0x0
0xad7 CALLER
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed AND
0xaee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb03 AND
0xb04 DUP2
0xb05 MSTORE
0xb06 PUSH1 0x20
0xb08 ADD
0xb09 SWAP1
0xb0a DUP2
0xb0b MSTORE
0xb0c PUSH1 0x20
0xb0e ADD
0xb0f PUSH1 0x0
0xb11 SHA3
0xb12 SLOAD
0xb13 DUP3
0xb14 GT
0xb15 ISZERO
0xb16 ISZERO
0xb17 ISZERO
0xb18 PUSH2 0x6d2
0xb1b JUMPI
---
0xa91: V671 = 0x0
0xa94: REVERT 0x0 0x0
0xa95: JUMPDEST 
0xa96: V672 = 0x5
0xa98: V673 = 0x0
0xa9b: V674 = 0xffffffffffffffffffffffffffffffffffffffff
0xab0: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xab1: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0xac6: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0xac8: M[0x0] = V677
0xac9: V678 = 0x20
0xacb: V679 = ADD 0x20 0x0
0xace: M[0x20] = 0x5
0xacf: V680 = 0x20
0xad1: V681 = ADD 0x20 0x20
0xad2: V682 = 0x0
0xad4: V683 = SHA3 0x0 0x40
0xad5: V684 = 0x0
0xad7: V685 = CALLER
0xad8: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0xaee: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xb03: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0xb05: M[0x0] = V689
0xb06: V690 = 0x20
0xb08: V691 = ADD 0x20 0x0
0xb0b: M[0x20] = V683
0xb0c: V692 = 0x20
0xb0e: V693 = ADD 0x20 0x20
0xb0f: V694 = 0x0
0xb11: V695 = SHA3 0x0 0x40
0xb12: V696 = S[V695]
0xb14: V697 = GT S1 V696
0xb15: V698 = ISZERO V697
0xb16: V699 = ISZERO V698
0xb17: V700 = ISZERO V699
0xb18: V701 = 0x6d2
0xb1b: THROWI V700
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0xb1c
[0xb1c:0xc06]
---
Predecessors: [0xa91]
Successors: []
---
0xb1c PUSH1 0x0
0xb1e DUP1
0xb1f REVERT
0xb20 JUMPDEST
0xb21 PUSH2 0x724
0xb24 DUP3
0xb25 PUSH1 0x1
0xb27 PUSH1 0x0
0xb29 DUP8
0xb2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3f AND
0xb40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb55 AND
0xb56 DUP2
0xb57 MSTORE
0xb58 PUSH1 0x20
0xb5a ADD
0xb5b SWAP1
0xb5c DUP2
0xb5d MSTORE
0xb5e PUSH1 0x20
0xb60 ADD
0xb61 PUSH1 0x0
0xb63 SHA3
0xb64 SLOAD
0xb65 PUSH2 0xe75
0xb68 SWAP1
0xb69 SWAP2
0xb6a SWAP1
0xb6b PUSH4 0xffffffff
0xb70 AND
0xb71 JUMP
0xb72 JUMPDEST
0xb73 PUSH1 0x1
0xb75 PUSH1 0x0
0xb77 DUP7
0xb78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8d AND
0xb8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba3 AND
0xba4 DUP2
0xba5 MSTORE
0xba6 PUSH1 0x20
0xba8 ADD
0xba9 SWAP1
0xbaa DUP2
0xbab MSTORE
0xbac PUSH1 0x20
0xbae ADD
0xbaf PUSH1 0x0
0xbb1 SHA3
0xbb2 DUP2
0xbb3 SWAP1
0xbb4 SSTORE
0xbb5 POP
0xbb6 PUSH2 0x7b9
0xbb9 DUP3
0xbba PUSH1 0x1
0xbbc PUSH1 0x0
0xbbe DUP7
0xbbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd4 AND
0xbd5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbea AND
0xbeb DUP2
0xbec MSTORE
0xbed PUSH1 0x20
0xbef ADD
0xbf0 SWAP1
0xbf1 DUP2
0xbf2 MSTORE
0xbf3 PUSH1 0x20
0xbf5 ADD
0xbf6 PUSH1 0x0
0xbf8 SHA3
0xbf9 SLOAD
0xbfa PUSH2 0xe8e
0xbfd SWAP1
0xbfe SWAP2
0xbff SWAP1
0xc00 PUSH4 0xffffffff
0xc05 AND
0xc06 JUMP
---
0xb1c: V702 = 0x0
0xb1f: REVERT 0x0 0x0
0xb20: JUMPDEST 
0xb21: V703 = 0x724
0xb25: V704 = 0x1
0xb27: V705 = 0x0
0xb2a: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3f: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb40: V708 = 0xffffffffffffffffffffffffffffffffffffffff
0xb55: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
0xb57: M[0x0] = V709
0xb58: V710 = 0x20
0xb5a: V711 = ADD 0x20 0x0
0xb5d: M[0x20] = 0x1
0xb5e: V712 = 0x20
0xb60: V713 = ADD 0x20 0x20
0xb61: V714 = 0x0
0xb63: V715 = SHA3 0x0 0x40
0xb64: V716 = S[V715]
0xb65: V717 = 0xe75
0xb6b: V718 = 0xffffffff
0xb70: V719 = AND 0xffffffff 0xe75
0xb71: THROW 
0xb72: JUMPDEST 
0xb73: V720 = 0x1
0xb75: V721 = 0x0
0xb78: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8d: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xb8e: V724 = 0xffffffffffffffffffffffffffffffffffffffff
0xba3: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V723
0xba5: M[0x0] = V725
0xba6: V726 = 0x20
0xba8: V727 = ADD 0x20 0x0
0xbab: M[0x20] = 0x1
0xbac: V728 = 0x20
0xbae: V729 = ADD 0x20 0x20
0xbaf: V730 = 0x0
0xbb1: V731 = SHA3 0x0 0x40
0xbb4: S[V731] = S0
0xbb6: V732 = 0x7b9
0xbba: V733 = 0x1
0xbbc: V734 = 0x0
0xbbf: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd4: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xbd5: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xbea: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0xbec: M[0x0] = V738
0xbed: V739 = 0x20
0xbef: V740 = ADD 0x20 0x0
0xbf2: M[0x20] = 0x1
0xbf3: V741 = 0x20
0xbf5: V742 = ADD 0x20 0x20
0xbf6: V743 = 0x0
0xbf8: V744 = SHA3 0x0 0x40
0xbf9: V745 = S[V744]
0xbfa: V746 = 0xe8e
0xc00: V747 = 0xffffffff
0xc05: V748 = AND 0xffffffff 0xe8e
0xc06: THROW 
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S1, V716, 0x724, S0, S1, S2, S3, S2, V745, 0x7b9, S1, S2, S3, S4]
Exit stack: []

================================

Block 0xc07
[0xc07:0xe27]
---
Predecessors: [0x1010]
Successors: [0xe28]
---
0xc07 JUMPDEST
0xc08 PUSH1 0x1
0xc0a PUSH1 0x0
0xc0c DUP6
0xc0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc22 AND
0xc23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc38 AND
0xc39 DUP2
0xc3a MSTORE
0xc3b PUSH1 0x20
0xc3d ADD
0xc3e SWAP1
0xc3f DUP2
0xc40 MSTORE
0xc41 PUSH1 0x20
0xc43 ADD
0xc44 PUSH1 0x0
0xc46 SHA3
0xc47 DUP2
0xc48 SWAP1
0xc49 SSTORE
0xc4a POP
0xc4b PUSH2 0x88b
0xc4e DUP3
0xc4f PUSH1 0x5
0xc51 PUSH1 0x0
0xc53 DUP8
0xc54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc69 AND
0xc6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7f AND
0xc80 DUP2
0xc81 MSTORE
0xc82 PUSH1 0x20
0xc84 ADD
0xc85 SWAP1
0xc86 DUP2
0xc87 MSTORE
0xc88 PUSH1 0x20
0xc8a ADD
0xc8b PUSH1 0x0
0xc8d SHA3
0xc8e PUSH1 0x0
0xc90 CALLER
0xc91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca6 AND
0xca7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbc AND
0xcbd DUP2
0xcbe MSTORE
0xcbf PUSH1 0x20
0xcc1 ADD
0xcc2 SWAP1
0xcc3 DUP2
0xcc4 MSTORE
0xcc5 PUSH1 0x20
0xcc7 ADD
0xcc8 PUSH1 0x0
0xcca SHA3
0xccb SLOAD
0xccc PUSH2 0xe75
0xccf SWAP1
0xcd0 SWAP2
0xcd1 SWAP1
0xcd2 PUSH4 0xffffffff
0xcd7 AND
0xcd8 JUMP
0xcd9 JUMPDEST
0xcda PUSH1 0x5
0xcdc PUSH1 0x0
0xcde DUP7
0xcdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf4 AND
0xcf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0a AND
0xd0b DUP2
0xd0c MSTORE
0xd0d PUSH1 0x20
0xd0f ADD
0xd10 SWAP1
0xd11 DUP2
0xd12 MSTORE
0xd13 PUSH1 0x20
0xd15 ADD
0xd16 PUSH1 0x0
0xd18 SHA3
0xd19 PUSH1 0x0
0xd1b CALLER
0xd1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd31 AND
0xd32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd47 AND
0xd48 DUP2
0xd49 MSTORE
0xd4a PUSH1 0x20
0xd4c ADD
0xd4d SWAP1
0xd4e DUP2
0xd4f MSTORE
0xd50 PUSH1 0x20
0xd52 ADD
0xd53 PUSH1 0x0
0xd55 SHA3
0xd56 DUP2
0xd57 SWAP1
0xd58 SSTORE
0xd59 POP
0xd5a DUP3
0xd5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd70 AND
0xd71 DUP5
0xd72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd87 AND
0xd88 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xda9 DUP5
0xdaa PUSH1 0x40
0xdac MLOAD
0xdad DUP1
0xdae DUP3
0xdaf DUP2
0xdb0 MSTORE
0xdb1 PUSH1 0x20
0xdb3 ADD
0xdb4 SWAP2
0xdb5 POP
0xdb6 POP
0xdb7 PUSH1 0x40
0xdb9 MLOAD
0xdba DUP1
0xdbb SWAP2
0xdbc SUB
0xdbd SWAP1
0xdbe LOG3
0xdbf PUSH1 0x1
0xdc1 SWAP1
0xdc2 POP
0xdc3 SWAP4
0xdc4 SWAP3
0xdc5 POP
0xdc6 POP
0xdc7 POP
0xdc8 JUMP
0xdc9 JUMPDEST
0xdca PUSH1 0x4
0xdcc PUSH1 0x0
0xdce SWAP1
0xdcf SLOAD
0xdd0 SWAP1
0xdd1 PUSH2 0x100
0xdd4 EXP
0xdd5 SWAP1
0xdd6 DIV
0xdd7 PUSH1 0xff
0xdd9 AND
0xdda DUP2
0xddb JUMP
0xddc JUMPDEST
0xddd PUSH1 0x0
0xddf PUSH1 0x1
0xde1 PUSH1 0x0
0xde3 CALLER
0xde4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf9 AND
0xdfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0f AND
0xe10 DUP2
0xe11 MSTORE
0xe12 PUSH1 0x20
0xe14 ADD
0xe15 SWAP1
0xe16 DUP2
0xe17 MSTORE
0xe18 PUSH1 0x20
0xe1a ADD
0xe1b PUSH1 0x0
0xe1d SHA3
0xe1e SLOAD
0xe1f DUP3
0xe20 GT
0xe21 ISZERO
0xe22 ISZERO
0xe23 ISZERO
0xe24 PUSH2 0x9de
0xe27 JUMPI
---
0xc07: JUMPDEST 
0xc08: V749 = 0x1
0xc0a: V750 = 0x0
0xc0d: V751 = 0xffffffffffffffffffffffffffffffffffffffff
0xc22: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc23: V753 = 0xffffffffffffffffffffffffffffffffffffffff
0xc38: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff V752
0xc3a: M[0x0] = V754
0xc3b: V755 = 0x20
0xc3d: V756 = ADD 0x20 0x0
0xc40: M[0x20] = 0x1
0xc41: V757 = 0x20
0xc43: V758 = ADD 0x20 0x20
0xc44: V759 = 0x0
0xc46: V760 = SHA3 0x0 0x40
0xc49: S[V760] = 0x0
0xc4b: V761 = 0x88b
0xc4f: V762 = 0x5
0xc51: V763 = 0x0
0xc54: V764 = 0xffffffffffffffffffffffffffffffffffffffff
0xc69: V765 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc6a: V766 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7f: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0xc81: M[0x0] = V767
0xc82: V768 = 0x20
0xc84: V769 = ADD 0x20 0x0
0xc87: M[0x20] = 0x5
0xc88: V770 = 0x20
0xc8a: V771 = ADD 0x20 0x20
0xc8b: V772 = 0x0
0xc8d: V773 = SHA3 0x0 0x40
0xc8e: V774 = 0x0
0xc90: V775 = CALLER
0xc91: V776 = 0xffffffffffffffffffffffffffffffffffffffff
0xca6: V777 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0xca7: V778 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbc: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0xcbe: M[0x0] = V779
0xcbf: V780 = 0x20
0xcc1: V781 = ADD 0x20 0x0
0xcc4: M[0x20] = V773
0xcc5: V782 = 0x20
0xcc7: V783 = ADD 0x20 0x20
0xcc8: V784 = 0x0
0xcca: V785 = SHA3 0x0 0x40
0xccb: V786 = S[V785]
0xccc: V787 = 0xe75
0xcd2: V788 = 0xffffffff
0xcd7: V789 = AND 0xffffffff 0xe75
0xcd8: THROW 
0xcd9: JUMPDEST 
0xcda: V790 = 0x5
0xcdc: V791 = 0x0
0xcdf: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf4: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xcf5: V794 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0a: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0xd0c: M[0x0] = V795
0xd0d: V796 = 0x20
0xd0f: V797 = ADD 0x20 0x0
0xd12: M[0x20] = 0x5
0xd13: V798 = 0x20
0xd15: V799 = ADD 0x20 0x20
0xd16: V800 = 0x0
0xd18: V801 = SHA3 0x0 0x40
0xd19: V802 = 0x0
0xd1b: V803 = CALLER
0xd1c: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xd31: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0xd32: V806 = 0xffffffffffffffffffffffffffffffffffffffff
0xd47: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0xd49: M[0x0] = V807
0xd4a: V808 = 0x20
0xd4c: V809 = ADD 0x20 0x0
0xd4f: M[0x20] = V801
0xd50: V810 = 0x20
0xd52: V811 = ADD 0x20 0x20
0xd53: V812 = 0x0
0xd55: V813 = SHA3 0x0 0x40
0xd58: S[V813] = S0
0xd5b: V814 = 0xffffffffffffffffffffffffffffffffffffffff
0xd70: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd72: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0xd87: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xd88: V818 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdaa: V819 = 0x40
0xdac: V820 = M[0x40]
0xdb0: M[V820] = S2
0xdb1: V821 = 0x20
0xdb3: V822 = ADD 0x20 V820
0xdb7: V823 = 0x40
0xdb9: V824 = M[0x40]
0xdbc: V825 = SUB V822 V824
0xdbe: LOG V824 V825 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V817 V815
0xdbf: V826 = 0x1
0xdc8: JUMP S5
0xdc9: JUMPDEST 
0xdca: V827 = 0x4
0xdcc: V828 = 0x0
0xdcf: V829 = S[0x4]
0xdd1: V830 = 0x100
0xdd4: V831 = EXP 0x100 0x0
0xdd6: V832 = DIV V829 0x1
0xdd7: V833 = 0xff
0xdd9: V834 = AND 0xff V832
0xddb: JUMP S0
0xddc: JUMPDEST 
0xddd: V835 = 0x0
0xddf: V836 = 0x1
0xde1: V837 = 0x0
0xde3: V838 = CALLER
0xde4: V839 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf9: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0xdfa: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0f: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0xe11: M[0x0] = V842
0xe12: V843 = 0x20
0xe14: V844 = ADD 0x20 0x0
0xe17: M[0x20] = 0x1
0xe18: V845 = 0x20
0xe1a: V846 = ADD 0x20 0x20
0xe1b: V847 = 0x0
0xe1d: V848 = SHA3 0x0 0x40
0xe1e: V849 = S[V848]
0xe20: V850 = GT S0 V849
0xe21: V851 = ISZERO V850
0xe22: V852 = ISZERO V851
0xe23: V853 = ISZERO V852
0xe24: V854 = 0x9de
0xe27: THROWI V853
---
Entry stack: [S2, S1, 0x0]
Stack pops: 12
Stack additions: [0x0, S0]
Exit stack: []

================================

Block 0xe28
[0xe28:0xfc9]
---
Predecessors: [0xc07]
Successors: [0xfca]
---
0xe28 PUSH1 0x0
0xe2a DUP1
0xe2b REVERT
0xe2c JUMPDEST
0xe2d CALLER
0xe2e SWAP1
0xe2f POP
0xe30 PUSH2 0xa33
0xe33 DUP3
0xe34 PUSH1 0x1
0xe36 PUSH1 0x0
0xe38 DUP5
0xe39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4e AND
0xe4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe64 AND
0xe65 DUP2
0xe66 MSTORE
0xe67 PUSH1 0x20
0xe69 ADD
0xe6a SWAP1
0xe6b DUP2
0xe6c MSTORE
0xe6d PUSH1 0x20
0xe6f ADD
0xe70 PUSH1 0x0
0xe72 SHA3
0xe73 SLOAD
0xe74 PUSH2 0xe75
0xe77 SWAP1
0xe78 SWAP2
0xe79 SWAP1
0xe7a PUSH4 0xffffffff
0xe7f AND
0xe80 JUMP
0xe81 JUMPDEST
0xe82 PUSH1 0x1
0xe84 PUSH1 0x0
0xe86 DUP4
0xe87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9c AND
0xe9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb2 AND
0xeb3 DUP2
0xeb4 MSTORE
0xeb5 PUSH1 0x20
0xeb7 ADD
0xeb8 SWAP1
0xeb9 DUP2
0xeba MSTORE
0xebb PUSH1 0x20
0xebd ADD
0xebe PUSH1 0x0
0xec0 SHA3
0xec1 DUP2
0xec2 SWAP1
0xec3 SSTORE
0xec4 POP
0xec5 PUSH2 0xa8b
0xec8 DUP3
0xec9 PUSH1 0x0
0xecb SLOAD
0xecc PUSH2 0xe75
0xecf SWAP1
0xed0 SWAP2
0xed1 SWAP1
0xed2 PUSH4 0xffffffff
0xed7 AND
0xed8 JUMP
0xed9 JUMPDEST
0xeda PUSH1 0x0
0xedc DUP2
0xedd SWAP1
0xede SSTORE
0xedf POP
0xee0 DUP1
0xee1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef6 AND
0xef7 PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0xf18 DUP4
0xf19 PUSH1 0x40
0xf1b MLOAD
0xf1c DUP1
0xf1d DUP3
0xf1e DUP2
0xf1f MSTORE
0xf20 PUSH1 0x20
0xf22 ADD
0xf23 SWAP2
0xf24 POP
0xf25 POP
0xf26 PUSH1 0x40
0xf28 MLOAD
0xf29 DUP1
0xf2a SWAP2
0xf2b SUB
0xf2c SWAP1
0xf2d LOG2
0xf2e POP
0xf2f POP
0xf30 JUMP
0xf31 JUMPDEST
0xf32 PUSH1 0x0
0xf34 PUSH1 0x1
0xf36 PUSH1 0x0
0xf38 DUP4
0xf39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4e AND
0xf4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf64 AND
0xf65 DUP2
0xf66 MSTORE
0xf67 PUSH1 0x20
0xf69 ADD
0xf6a SWAP1
0xf6b DUP2
0xf6c MSTORE
0xf6d PUSH1 0x20
0xf6f ADD
0xf70 PUSH1 0x0
0xf72 SHA3
0xf73 SLOAD
0xf74 SWAP1
0xf75 POP
0xf76 SWAP2
0xf77 SWAP1
0xf78 POP
0xf79 JUMP
0xf7a JUMPDEST
0xf7b PUSH1 0x3
0xf7d DUP1
0xf7e SLOAD
0xf7f PUSH1 0x1
0xf81 DUP2
0xf82 PUSH1 0x1
0xf84 AND
0xf85 ISZERO
0xf86 PUSH2 0x100
0xf89 MUL
0xf8a SUB
0xf8b AND
0xf8c PUSH1 0x2
0xf8e SWAP1
0xf8f DIV
0xf90 DUP1
0xf91 PUSH1 0x1f
0xf93 ADD
0xf94 PUSH1 0x20
0xf96 DUP1
0xf97 SWAP2
0xf98 DIV
0xf99 MUL
0xf9a PUSH1 0x20
0xf9c ADD
0xf9d PUSH1 0x40
0xf9f MLOAD
0xfa0 SWAP1
0xfa1 DUP2
0xfa2 ADD
0xfa3 PUSH1 0x40
0xfa5 MSTORE
0xfa6 DUP1
0xfa7 SWAP3
0xfa8 SWAP2
0xfa9 SWAP1
0xfaa DUP2
0xfab DUP2
0xfac MSTORE
0xfad PUSH1 0x20
0xfaf ADD
0xfb0 DUP3
0xfb1 DUP1
0xfb2 SLOAD
0xfb3 PUSH1 0x1
0xfb5 DUP2
0xfb6 PUSH1 0x1
0xfb8 AND
0xfb9 ISZERO
0xfba PUSH2 0x100
0xfbd MUL
0xfbe SUB
0xfbf AND
0xfc0 PUSH1 0x2
0xfc2 SWAP1
0xfc3 DIV
0xfc4 DUP1
0xfc5 ISZERO
0xfc6 PUSH2 0xbc2
0xfc9 JUMPI
---
0xe28: V855 = 0x0
0xe2b: REVERT 0x0 0x0
0xe2c: JUMPDEST 
0xe2d: V856 = CALLER
0xe30: V857 = 0xa33
0xe34: V858 = 0x1
0xe36: V859 = 0x0
0xe39: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4e: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V856
0xe4f: V862 = 0xffffffffffffffffffffffffffffffffffffffff
0xe64: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0xe66: M[0x0] = V863
0xe67: V864 = 0x20
0xe69: V865 = ADD 0x20 0x0
0xe6c: M[0x20] = 0x1
0xe6d: V866 = 0x20
0xe6f: V867 = ADD 0x20 0x20
0xe70: V868 = 0x0
0xe72: V869 = SHA3 0x0 0x40
0xe73: V870 = S[V869]
0xe74: V871 = 0xe75
0xe7a: V872 = 0xffffffff
0xe7f: V873 = AND 0xffffffff 0xe75
0xe80: THROW 
0xe81: JUMPDEST 
0xe82: V874 = 0x1
0xe84: V875 = 0x0
0xe87: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9c: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xe9d: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb2: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0xeb4: M[0x0] = V879
0xeb5: V880 = 0x20
0xeb7: V881 = ADD 0x20 0x0
0xeba: M[0x20] = 0x1
0xebb: V882 = 0x20
0xebd: V883 = ADD 0x20 0x20
0xebe: V884 = 0x0
0xec0: V885 = SHA3 0x0 0x40
0xec3: S[V885] = S0
0xec5: V886 = 0xa8b
0xec9: V887 = 0x0
0xecb: V888 = S[0x0]
0xecc: V889 = 0xe75
0xed2: V890 = 0xffffffff
0xed7: V891 = AND 0xffffffff 0xe75
0xed8: THROW 
0xed9: JUMPDEST 
0xeda: V892 = 0x0
0xede: S[0x0] = S0
0xee1: V893 = 0xffffffffffffffffffffffffffffffffffffffff
0xef6: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xef7: V895 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0xf19: V896 = 0x40
0xf1b: V897 = M[0x40]
0xf1f: M[V897] = S2
0xf20: V898 = 0x20
0xf22: V899 = ADD 0x20 V897
0xf26: V900 = 0x40
0xf28: V901 = M[0x40]
0xf2b: V902 = SUB V899 V901
0xf2d: LOG V901 V902 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V894
0xf30: JUMP S3
0xf31: JUMPDEST 
0xf32: V903 = 0x0
0xf34: V904 = 0x1
0xf36: V905 = 0x0
0xf39: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4e: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xf4f: V908 = 0xffffffffffffffffffffffffffffffffffffffff
0xf64: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V907
0xf66: M[0x0] = V909
0xf67: V910 = 0x20
0xf69: V911 = ADD 0x20 0x0
0xf6c: M[0x20] = 0x1
0xf6d: V912 = 0x20
0xf6f: V913 = ADD 0x20 0x20
0xf70: V914 = 0x0
0xf72: V915 = SHA3 0x0 0x40
0xf73: V916 = S[V915]
0xf79: JUMP S1
0xf7a: JUMPDEST 
0xf7b: V917 = 0x3
0xf7e: V918 = S[0x3]
0xf7f: V919 = 0x1
0xf82: V920 = 0x1
0xf84: V921 = AND 0x1 V918
0xf85: V922 = ISZERO V921
0xf86: V923 = 0x100
0xf89: V924 = MUL 0x100 V922
0xf8a: V925 = SUB V924 0x1
0xf8b: V926 = AND V925 V918
0xf8c: V927 = 0x2
0xf8f: V928 = DIV V926 0x2
0xf91: V929 = 0x1f
0xf93: V930 = ADD 0x1f V928
0xf94: V931 = 0x20
0xf98: V932 = DIV V930 0x20
0xf99: V933 = MUL V932 0x20
0xf9a: V934 = 0x20
0xf9c: V935 = ADD 0x20 V933
0xf9d: V936 = 0x40
0xf9f: V937 = M[0x40]
0xfa2: V938 = ADD V937 V935
0xfa3: V939 = 0x40
0xfa5: M[0x40] = V938
0xfac: M[V937] = V928
0xfad: V940 = 0x20
0xfaf: V941 = ADD 0x20 V937
0xfb2: V942 = S[0x3]
0xfb3: V943 = 0x1
0xfb6: V944 = 0x1
0xfb8: V945 = AND 0x1 V942
0xfb9: V946 = ISZERO V945
0xfba: V947 = 0x100
0xfbd: V948 = MUL 0x100 V946
0xfbe: V949 = SUB V948 0x1
0xfbf: V950 = AND V949 V942
0xfc0: V951 = 0x2
0xfc3: V952 = DIV V950 0x2
0xfc5: V953 = ISZERO V952
0xfc6: V954 = 0xbc2
0xfc9: THROWI V953
---
Entry stack: [S1, 0x0]
Stack pops: 0
Stack additions: [S1, V870, 0xa33, V856, S1, S2, V888, 0xa8b, S1, S2, V916, V952, 0x3, V941, V928, 0x3, V937]
Exit stack: []

================================

Block 0xfca
[0xfca:0xfd1]
---
Predecessors: [0xe28]
Successors: [0xfd2]
---
0xfca DUP1
0xfcb PUSH1 0x1f
0xfcd LT
0xfce PUSH2 0xb97
0xfd1 JUMPI
---
0xfcb: V955 = 0x1f
0xfcd: V956 = LT 0x1f V952
0xfce: V957 = 0xb97
0xfd1: THROWI V956
---
Entry stack: [V937, 0x3, V928, V941, 0x3, V952]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V937, 0x3, V928, V941, 0x3, V952]

================================

Block 0xfd2
[0xfd2:0xff2]
---
Predecessors: [0xfca]
Successors: [0xff3]
---
0xfd2 PUSH2 0x100
0xfd5 DUP1
0xfd6 DUP4
0xfd7 SLOAD
0xfd8 DIV
0xfd9 MUL
0xfda DUP4
0xfdb MSTORE
0xfdc SWAP2
0xfdd PUSH1 0x20
0xfdf ADD
0xfe0 SWAP2
0xfe1 PUSH2 0xbc2
0xfe4 JUMP
0xfe5 JUMPDEST
0xfe6 DUP3
0xfe7 ADD
0xfe8 SWAP2
0xfe9 SWAP1
0xfea PUSH1 0x0
0xfec MSTORE
0xfed PUSH1 0x20
0xfef PUSH1 0x0
0xff1 SHA3
0xff2 SWAP1
---
0xfd2: V958 = 0x100
0xfd7: V959 = S[0x3]
0xfd8: V960 = DIV V959 0x100
0xfd9: V961 = MUL V960 0x100
0xfdb: M[V941] = V961
0xfdd: V962 = 0x20
0xfdf: V963 = ADD 0x20 V941
0xfe1: V964 = 0xbc2
0xfe4: THROW 
0xfe5: JUMPDEST 
0xfe7: V965 = ADD S2 S0
0xfea: V966 = 0x0
0xfec: M[0x0] = S1
0xfed: V967 = 0x20
0xfef: V968 = 0x0
0xff1: V969 = SHA3 0x0 0x20
---
Entry stack: [V937, 0x3, V928, V941, 0x3, V952]
Stack pops: 3
Stack additions: [S2, V969, V965]
Exit stack: []

================================

Block 0xff3
[0xff3:0x1006]
---
Predecessors: [0xfd2]
Successors: [0x1007]
---
0xff3 JUMPDEST
0xff4 DUP2
0xff5 SLOAD
0xff6 DUP2
0xff7 MSTORE
0xff8 SWAP1
0xff9 PUSH1 0x1
0xffb ADD
0xffc SWAP1
0xffd PUSH1 0x20
0xfff ADD
0x1000 DUP1
0x1001 DUP4
0x1002 GT
0x1003 PUSH2 0xba5
0x1006 JUMPI
---
0xff3: JUMPDEST 
0xff5: V970 = S[V969]
0xff7: M[S0] = V970
0xff9: V971 = 0x1
0xffb: V972 = ADD 0x1 V969
0xffd: V973 = 0x20
0xfff: V974 = ADD 0x20 S0
0x1002: V975 = GT V965 V974
0x1003: V976 = 0xba5
0x1006: THROWI V975
---
Entry stack: [V965, V969, S0]
Stack pops: 3
Stack additions: [S2, V972, V974]
Exit stack: [V965, V972, V974]

================================

Block 0x1007
[0x1007:0x100f]
---
Predecessors: [0xff3]
Successors: [0x1010]
---
0x1007 DUP3
0x1008 SWAP1
0x1009 SUB
0x100a PUSH1 0x1f
0x100c AND
0x100d DUP3
0x100e ADD
0x100f SWAP2
---
0x1009: V977 = SUB V974 V965
0x100a: V978 = 0x1f
0x100c: V979 = AND 0x1f V977
0x100e: V980 = ADD V965 V979
---
Entry stack: [V965, V972, V974]
Stack pops: 3
Stack additions: [V980, S1, S2]
Exit stack: [V980, V972, V965]

================================

Block 0x1010
[0x1010:0x1050]
---
Predecessors: [0x1007]
Successors: [0xc07, 0x1051]
---
0x1010 JUMPDEST
0x1011 POP
0x1012 POP
0x1013 POP
0x1014 POP
0x1015 POP
0x1016 DUP2
0x1017 JUMP
0x1018 JUMPDEST
0x1019 PUSH1 0x0
0x101b DUP1
0x101c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1031 AND
0x1032 DUP4
0x1033 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1048 AND
0x1049 EQ
0x104a ISZERO
0x104b ISZERO
0x104c ISZERO
0x104d PUSH2 0xc07
0x1050 JUMPI
---
0x1010: JUMPDEST 
0x1017: JUMP S6
0x1018: JUMPDEST 
0x1019: V981 = 0x0
0x101c: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0x1031: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1033: V984 = 0xffffffffffffffffffffffffffffffffffffffff
0x1048: V985 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1049: V986 = EQ V985 0x0
0x104a: V987 = ISZERO V986
0x104b: V988 = ISZERO V987
0x104c: V989 = ISZERO V988
0x104d: V990 = 0xc07
0x1050: JUMPI 0xc07 V989
---
Entry stack: [V980, V972, V965]
Stack pops: 12
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0x1051
[0x1051:0x109e]
---
Predecessors: [0x1010]
Successors: [0x109f]
---
0x1051 PUSH1 0x0
0x1053 DUP1
0x1054 REVERT
0x1055 JUMPDEST
0x1056 PUSH1 0x1
0x1058 PUSH1 0x0
0x105a CALLER
0x105b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1070 AND
0x1071 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1086 AND
0x1087 DUP2
0x1088 MSTORE
0x1089 PUSH1 0x20
0x108b ADD
0x108c SWAP1
0x108d DUP2
0x108e MSTORE
0x108f PUSH1 0x20
0x1091 ADD
0x1092 PUSH1 0x0
0x1094 SHA3
0x1095 SLOAD
0x1096 DUP3
0x1097 GT
0x1098 ISZERO
0x1099 ISZERO
0x109a ISZERO
0x109b PUSH2 0xc55
0x109e JUMPI
---
0x1051: V991 = 0x0
0x1054: REVERT 0x0 0x0
0x1055: JUMPDEST 
0x1056: V992 = 0x1
0x1058: V993 = 0x0
0x105a: V994 = CALLER
0x105b: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x1070: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0x1071: V997 = 0xffffffffffffffffffffffffffffffffffffffff
0x1086: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff V996
0x1088: M[0x0] = V998
0x1089: V999 = 0x20
0x108b: V1000 = ADD 0x20 0x0
0x108e: M[0x20] = 0x1
0x108f: V1001 = 0x20
0x1091: V1002 = ADD 0x20 0x20
0x1092: V1003 = 0x0
0x1094: V1004 = SHA3 0x0 0x40
0x1095: V1005 = S[V1004]
0x1097: V1006 = GT S1 V1005
0x1098: V1007 = ISZERO V1006
0x1099: V1008 = ISZERO V1007
0x109a: V1009 = ISZERO V1008
0x109b: V1010 = 0xc55
0x109e: THROWI V1009
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x109f
[0x109f:0x12cf]
---
Predecessors: [0x1051]
Successors: [0x12d0]
---
0x109f PUSH1 0x0
0x10a1 DUP1
0x10a2 REVERT
0x10a3 JUMPDEST
0x10a4 PUSH2 0xca7
0x10a7 DUP3
0x10a8 PUSH1 0x1
0x10aa PUSH1 0x0
0x10ac CALLER
0x10ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c2 AND
0x10c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d8 AND
0x10d9 DUP2
0x10da MSTORE
0x10db PUSH1 0x20
0x10dd ADD
0x10de SWAP1
0x10df DUP2
0x10e0 MSTORE
0x10e1 PUSH1 0x20
0x10e3 ADD
0x10e4 PUSH1 0x0
0x10e6 SHA3
0x10e7 SLOAD
0x10e8 PUSH2 0xe75
0x10eb SWAP1
0x10ec SWAP2
0x10ed SWAP1
0x10ee PUSH4 0xffffffff
0x10f3 AND
0x10f4 JUMP
0x10f5 JUMPDEST
0x10f6 PUSH1 0x1
0x10f8 PUSH1 0x0
0x10fa CALLER
0x10fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1110 AND
0x1111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1126 AND
0x1127 DUP2
0x1128 MSTORE
0x1129 PUSH1 0x20
0x112b ADD
0x112c SWAP1
0x112d DUP2
0x112e MSTORE
0x112f PUSH1 0x20
0x1131 ADD
0x1132 PUSH1 0x0
0x1134 SHA3
0x1135 DUP2
0x1136 SWAP1
0x1137 SSTORE
0x1138 POP
0x1139 PUSH2 0xd3c
0x113c DUP3
0x113d PUSH1 0x1
0x113f PUSH1 0x0
0x1141 DUP7
0x1142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1157 AND
0x1158 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116d AND
0x116e DUP2
0x116f MSTORE
0x1170 PUSH1 0x20
0x1172 ADD
0x1173 SWAP1
0x1174 DUP2
0x1175 MSTORE
0x1176 PUSH1 0x20
0x1178 ADD
0x1179 PUSH1 0x0
0x117b SHA3
0x117c SLOAD
0x117d PUSH2 0xe8e
0x1180 SWAP1
0x1181 SWAP2
0x1182 SWAP1
0x1183 PUSH4 0xffffffff
0x1188 AND
0x1189 JUMP
0x118a JUMPDEST
0x118b PUSH1 0x1
0x118d PUSH1 0x0
0x118f DUP6
0x1190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a5 AND
0x11a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11bb AND
0x11bc DUP2
0x11bd MSTORE
0x11be PUSH1 0x20
0x11c0 ADD
0x11c1 SWAP1
0x11c2 DUP2
0x11c3 MSTORE
0x11c4 PUSH1 0x20
0x11c6 ADD
0x11c7 PUSH1 0x0
0x11c9 SHA3
0x11ca DUP2
0x11cb SWAP1
0x11cc SSTORE
0x11cd POP
0x11ce DUP3
0x11cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e4 AND
0x11e5 CALLER
0x11e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11fb AND
0x11fc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x121d DUP5
0x121e PUSH1 0x40
0x1220 MLOAD
0x1221 DUP1
0x1222 DUP3
0x1223 DUP2
0x1224 MSTORE
0x1225 PUSH1 0x20
0x1227 ADD
0x1228 SWAP2
0x1229 POP
0x122a POP
0x122b PUSH1 0x40
0x122d MLOAD
0x122e DUP1
0x122f SWAP2
0x1230 SUB
0x1231 SWAP1
0x1232 LOG3
0x1233 PUSH1 0x1
0x1235 SWAP1
0x1236 POP
0x1237 SWAP3
0x1238 SWAP2
0x1239 POP
0x123a POP
0x123b JUMP
0x123c JUMPDEST
0x123d PUSH1 0x0
0x123f PUSH1 0x5
0x1241 PUSH1 0x0
0x1243 DUP5
0x1244 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1259 AND
0x125a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126f AND
0x1270 DUP2
0x1271 MSTORE
0x1272 PUSH1 0x20
0x1274 ADD
0x1275 SWAP1
0x1276 DUP2
0x1277 MSTORE
0x1278 PUSH1 0x20
0x127a ADD
0x127b PUSH1 0x0
0x127d SHA3
0x127e PUSH1 0x0
0x1280 DUP4
0x1281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1296 AND
0x1297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ac AND
0x12ad DUP2
0x12ae MSTORE
0x12af PUSH1 0x20
0x12b1 ADD
0x12b2 SWAP1
0x12b3 DUP2
0x12b4 MSTORE
0x12b5 PUSH1 0x20
0x12b7 ADD
0x12b8 PUSH1 0x0
0x12ba SHA3
0x12bb SLOAD
0x12bc SWAP1
0x12bd POP
0x12be SWAP3
0x12bf SWAP2
0x12c0 POP
0x12c1 POP
0x12c2 JUMP
0x12c3 JUMPDEST
0x12c4 PUSH1 0x0
0x12c6 DUP3
0x12c7 DUP3
0x12c8 GT
0x12c9 ISZERO
0x12ca ISZERO
0x12cb ISZERO
0x12cc PUSH2 0xe83
0x12cf JUMPI
---
0x109f: V1011 = 0x0
0x10a2: REVERT 0x0 0x0
0x10a3: JUMPDEST 
0x10a4: V1012 = 0xca7
0x10a8: V1013 = 0x1
0x10aa: V1014 = 0x0
0x10ac: V1015 = CALLER
0x10ad: V1016 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c2: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffff V1015
0x10c3: V1018 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d8: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V1017
0x10da: M[0x0] = V1019
0x10db: V1020 = 0x20
0x10dd: V1021 = ADD 0x20 0x0
0x10e0: M[0x20] = 0x1
0x10e1: V1022 = 0x20
0x10e3: V1023 = ADD 0x20 0x20
0x10e4: V1024 = 0x0
0x10e6: V1025 = SHA3 0x0 0x40
0x10e7: V1026 = S[V1025]
0x10e8: V1027 = 0xe75
0x10ee: V1028 = 0xffffffff
0x10f3: V1029 = AND 0xffffffff 0xe75
0x10f4: THROW 
0x10f5: JUMPDEST 
0x10f6: V1030 = 0x1
0x10f8: V1031 = 0x0
0x10fa: V1032 = CALLER
0x10fb: V1033 = 0xffffffffffffffffffffffffffffffffffffffff
0x1110: V1034 = AND 0xffffffffffffffffffffffffffffffffffffffff V1032
0x1111: V1035 = 0xffffffffffffffffffffffffffffffffffffffff
0x1126: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0x1128: M[0x0] = V1036
0x1129: V1037 = 0x20
0x112b: V1038 = ADD 0x20 0x0
0x112e: M[0x20] = 0x1
0x112f: V1039 = 0x20
0x1131: V1040 = ADD 0x20 0x20
0x1132: V1041 = 0x0
0x1134: V1042 = SHA3 0x0 0x40
0x1137: S[V1042] = S0
0x1139: V1043 = 0xd3c
0x113d: V1044 = 0x1
0x113f: V1045 = 0x0
0x1142: V1046 = 0xffffffffffffffffffffffffffffffffffffffff
0x1157: V1047 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1158: V1048 = 0xffffffffffffffffffffffffffffffffffffffff
0x116d: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0x116f: M[0x0] = V1049
0x1170: V1050 = 0x20
0x1172: V1051 = ADD 0x20 0x0
0x1175: M[0x20] = 0x1
0x1176: V1052 = 0x20
0x1178: V1053 = ADD 0x20 0x20
0x1179: V1054 = 0x0
0x117b: V1055 = SHA3 0x0 0x40
0x117c: V1056 = S[V1055]
0x117d: V1057 = 0xe8e
0x1183: V1058 = 0xffffffff
0x1188: V1059 = AND 0xffffffff 0xe8e
0x1189: THROW 
0x118a: JUMPDEST 
0x118b: V1060 = 0x1
0x118d: V1061 = 0x0
0x1190: V1062 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a5: V1063 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x11a6: V1064 = 0xffffffffffffffffffffffffffffffffffffffff
0x11bb: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V1063
0x11bd: M[0x0] = V1065
0x11be: V1066 = 0x20
0x11c0: V1067 = ADD 0x20 0x0
0x11c3: M[0x20] = 0x1
0x11c4: V1068 = 0x20
0x11c6: V1069 = ADD 0x20 0x20
0x11c7: V1070 = 0x0
0x11c9: V1071 = SHA3 0x0 0x40
0x11cc: S[V1071] = S0
0x11cf: V1072 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e4: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x11e5: V1074 = CALLER
0x11e6: V1075 = 0xffffffffffffffffffffffffffffffffffffffff
0x11fb: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V1074
0x11fc: V1077 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x121e: V1078 = 0x40
0x1220: V1079 = M[0x40]
0x1224: M[V1079] = S2
0x1225: V1080 = 0x20
0x1227: V1081 = ADD 0x20 V1079
0x122b: V1082 = 0x40
0x122d: V1083 = M[0x40]
0x1230: V1084 = SUB V1081 V1083
0x1232: LOG V1083 V1084 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1076 V1073
0x1233: V1085 = 0x1
0x123b: JUMP S4
0x123c: JUMPDEST 
0x123d: V1086 = 0x0
0x123f: V1087 = 0x5
0x1241: V1088 = 0x0
0x1244: V1089 = 0xffffffffffffffffffffffffffffffffffffffff
0x1259: V1090 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x125a: V1091 = 0xffffffffffffffffffffffffffffffffffffffff
0x126f: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff V1090
0x1271: M[0x0] = V1092
0x1272: V1093 = 0x20
0x1274: V1094 = ADD 0x20 0x0
0x1277: M[0x20] = 0x5
0x1278: V1095 = 0x20
0x127a: V1096 = ADD 0x20 0x20
0x127b: V1097 = 0x0
0x127d: V1098 = SHA3 0x0 0x40
0x127e: V1099 = 0x0
0x1281: V1100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1296: V1101 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1297: V1102 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ac: V1103 = AND 0xffffffffffffffffffffffffffffffffffffffff V1101
0x12ae: M[0x0] = V1103
0x12af: V1104 = 0x20
0x12b1: V1105 = ADD 0x20 0x0
0x12b4: M[0x20] = V1098
0x12b5: V1106 = 0x20
0x12b7: V1107 = ADD 0x20 0x20
0x12b8: V1108 = 0x0
0x12ba: V1109 = SHA3 0x0 0x40
0x12bb: V1110 = S[V1109]
0x12c2: JUMP S2
0x12c3: JUMPDEST 
0x12c4: V1111 = 0x0
0x12c8: V1112 = GT S0 S1
0x12c9: V1113 = ISZERO V1112
0x12ca: V1114 = ISZERO V1113
0x12cb: V1115 = ISZERO V1114
0x12cc: V1116 = 0xe83
0x12cf: THROWI V1115
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S1, V1026, 0xca7, S0, S1, S2, V1056, 0xd3c, S1, S2, S3, 0x1, V1110, 0x0, S0, S1]
Exit stack: []

================================

Block 0x12d0
[0x12d0:0x12ee]
---
Predecessors: [0x109f]
Successors: [0x12ef]
---
0x12d0 INVALID
0x12d1 JUMPDEST
0x12d2 DUP2
0x12d3 DUP4
0x12d4 SUB
0x12d5 SWAP1
0x12d6 POP
0x12d7 SWAP3
0x12d8 SWAP2
0x12d9 POP
0x12da POP
0x12db JUMP
0x12dc JUMPDEST
0x12dd PUSH1 0x0
0x12df DUP1
0x12e0 DUP3
0x12e1 DUP5
0x12e2 ADD
0x12e3 SWAP1
0x12e4 POP
0x12e5 DUP4
0x12e6 DUP2
0x12e7 LT
0x12e8 ISZERO
0x12e9 ISZERO
0x12ea ISZERO
0x12eb PUSH2 0xea2
0x12ee JUMPI
---
0x12d0: INVALID 
0x12d1: JUMPDEST 
0x12d4: V1117 = SUB S2 S1
0x12db: JUMP S3
0x12dc: JUMPDEST 
0x12dd: V1118 = 0x0
0x12e2: V1119 = ADD S1 S0
0x12e7: V1120 = LT V1119 S1
0x12e8: V1121 = ISZERO V1120
0x12e9: V1122 = ISZERO V1121
0x12ea: V1123 = ISZERO V1122
0x12eb: V1124 = 0xea2
0x12ee: THROWI V1123
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1117, V1119, 0x0, S0, S1]
Exit stack: []

================================

Block 0x12ef
[0x12ef:0x132c]
---
Predecessors: [0x12d0]
Successors: []
---
0x12ef INVALID
0x12f0 JUMPDEST
0x12f1 DUP1
0x12f2 SWAP2
0x12f3 POP
0x12f4 POP
0x12f5 SWAP3
0x12f6 SWAP2
0x12f7 POP
0x12f8 POP
0x12f9 JUMP
0x12fa STOP
0x12fb LOG1
0x12fc PUSH6 0x627a7a723058
0x1303 SHA3
0x1304 SLT
0x1305 STATICCALL
0x1306 SIGNEXTEND
0x1307 MISSING 0xdf
0x1308 XOR
0x1309 MISSING 0x5e
0x130a MISSING 0xea
0x130b GAS
0x130c MISSING 0xe2
0x130d DUP9
0x130e MISSING 0xd1
0x130f SWAP15
0x1310 ISZERO
0x1311 MISSING 0xf
0x1312 DUP15
0x1313 PUSH1 0x6
0x1315 SHR
0x1316 MISSING 0x2f
0x1317 CALLDATASIZE
0x1318 MISSING 0x1f
0x1319 NUMBER
0x131a PUSH18 0xa5cf50258ef0bc57870029
---
0x12ef: INVALID 
0x12f0: JUMPDEST 
0x12f9: JUMP S4
0x12fa: STOP 
0x12fb: LOG S0 S1 S2
0x12fc: V1125 = 0x627a7a723058
0x1303: V1126 = SHA3 0x627a7a723058 S3
0x1304: V1127 = SLT V1126 S4
0x1305: V1128 = STATICCALL V1127 S5 S6 S7 S8 S9
0x1306: V1129 = SIGNEXTEND V1128 S10
0x1307: MISSING 0xdf
0x1308: V1130 = XOR S0 S1
0x1309: MISSING 0x5e
0x130a: MISSING 0xea
0x130b: V1131 = GAS
0x130c: MISSING 0xe2
0x130e: MISSING 0xd1
0x1310: V1132 = ISZERO S15
0x1311: MISSING 0xf
0x1313: V1133 = 0x6
0x1315: V1134 = SHR 0x6 S14
0x1316: MISSING 0x2f
0x1317: V1135 = CALLDATASIZE
0x1318: MISSING 0x1f
0x1319: V1136 = NUMBER
0x131a: V1137 = 0xa5cf50258ef0bc57870029
---
Entry stack: [S3, S2, 0x0, V1119]
Stack pops: 0
Stack additions: [S0, V1129, V1130, V1131, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, V1132, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V1134, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V1135, 0xa5cf50258ef0bc57870029, V1136]
Exit stack: []

================================

Function 0:
Public function signature: 0x18160ddd
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x12c

Function 1:
Public function signature: 0x70a08231
Entry block: 0x85
Exit block: 0xbc
Body: 0x85, 0x8c, 0x90, 0xbc, 0x132

Function 2:
Public function signature: 0xa9059cbb
Entry block: 0xd2
Exit block: 0x112
Body: 0xd2, 0xd9, 0xdd, 0x112, 0x17b, 0x1b4, 0x1b8, 0x202, 0x206, 0x258, 0x2ed, 0x39f, 0x3ac, 0x3ad, 0x3b8, 0x3cb, 0x3cc

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

