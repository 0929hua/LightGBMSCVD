Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x3ab]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6e66f6e9
0x3c EQ
0x3d PUSH2 0x3ab
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6e66f6e9
0x3c: V13 = EQ 0x6e66f6e9 V11
0x3d: V14 = 0x3ab
0x40: JUMPI 0x3ab V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x402]
---
0x41 DUP1
0x42 PUSH4 0x9518589a
0x47 EQ
0x48 PUSH2 0x402
0x4b JUMPI
---
0x42: V15 = 0x9518589a
0x47: V16 = EQ 0x9518589a V11
0x48: V17 = 0x402
0x4b: JUMPI 0x402 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x57]
---
Predecessors: [0x0, 0x41]
Successors: [0x58, 0x59]
---
0x4c JUMPDEST
0x4d PUSH1 0x4
0x4f SLOAD
0x50 CALLVALUE
0x51 DUP2
0x52 ISZERO
0x53 ISZERO
0x54 PUSH2 0x59
0x57 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = 0x4
0x4f: V19 = S[0x4]
0x50: V20 = CALLVALUE
0x52: V21 = ISZERO V19
0x53: V22 = ISZERO V21
0x54: V23 = 0x59
0x57: JUMPI 0x59 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19, V20]
Exit stack: [V11, V19, V20]

================================

Block 0x58
[0x58:0x58]
---
Predecessors: [0x4c]
Successors: []
---
0x58 INVALID
---
0x58: INVALID 
---
Entry stack: [V11, V19, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19, V20]

================================

Block 0x59
[0x59:0x71]
---
Predecessors: [0x4c]
Successors: [0x72, 0x9e]
---
0x59 JUMPDEST
0x5a DIV
0x5b PUSH1 0x3
0x5d DUP2
0x5e SWAP1
0x5f SSTORE
0x60 POP
0x61 PUSH8 0x4563918244f40000
0x6a CALLVALUE
0x6b LT
0x6c ISZERO
0x6d ISZERO
0x6e PUSH2 0x9e
0x71 JUMPI
---
0x59: JUMPDEST 
0x5a: V24 = DIV V20 V19
0x5b: V25 = 0x3
0x5f: S[0x3] = V24
0x61: V26 = 0x4563918244f40000
0x6a: V27 = CALLVALUE
0x6b: V28 = LT V27 0x4563918244f40000
0x6c: V29 = ISZERO V28
0x6d: V30 = ISZERO V29
0x6e: V31 = 0x9e
0x71: JUMPI 0x9e V30
---
Entry stack: [V11, V19, V20]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x59]
Successors: [0x7d, 0x7e]
---
0x72 PUSH1 0x4
0x74 SLOAD
0x75 CALLVALUE
0x76 DUP2
0x77 ISZERO
0x78 ISZERO
0x79 PUSH2 0x7e
0x7c JUMPI
---
0x72: V32 = 0x4
0x74: V33 = S[0x4]
0x75: V34 = CALLVALUE
0x77: V35 = ISZERO V33
0x78: V36 = ISZERO V35
0x79: V37 = 0x7e
0x7c: JUMPI 0x7e V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33, V34]
Exit stack: [V11, V33, V34]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x72]
Successors: []
---
0x7d INVALID
---
0x7d: INVALID 
---
Entry stack: [V11, V33, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33, V34]

================================

Block 0x7e
[0x7e:0x94]
---
Predecessors: [0x72]
Successors: [0x95, 0x96]
---
0x7e JUMPDEST
0x7f DIV
0x80 PUSH1 0x3
0x82 DUP2
0x83 SWAP1
0x84 SSTORE
0x85 POP
0x86 PUSH1 0x64
0x88 PUSH1 0x7d
0x8a PUSH1 0x3
0x8c SLOAD
0x8d MUL
0x8e DUP2
0x8f ISZERO
0x90 ISZERO
0x91 PUSH2 0x96
0x94 JUMPI
---
0x7e: JUMPDEST 
0x7f: V38 = DIV V34 V33
0x80: V39 = 0x3
0x84: S[0x3] = V38
0x86: V40 = 0x64
0x88: V41 = 0x7d
0x8a: V42 = 0x3
0x8c: V43 = S[0x3]
0x8d: V44 = MUL V43 0x7d
0x8f: V45 = ISZERO 0x64
0x90: V46 = ISZERO 0x0
0x91: V47 = 0x96
0x94: JUMPI 0x96 0x1
---
Entry stack: [V11, V33, V34]
Stack pops: 2
Stack additions: [0x64, V44]
Exit stack: [V11, 0x64, V44]

================================

Block 0x95
[0x95:0x95]
---
Predecessors: [0x7e]
Successors: []
---
0x95 INVALID
---
0x95: INVALID 
---
Entry stack: [V11, 0x64, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V44]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0x7e]
Successors: [0x9e]
---
0x96 JUMPDEST
0x97 DIV
0x98 PUSH1 0x3
0x9a DUP2
0x9b SWAP1
0x9c SSTORE
0x9d POP
---
0x96: JUMPDEST 
0x97: V48 = DIV V44 0x64
0x98: V49 = 0x3
0x9c: S[0x3] = V48
---
Entry stack: [V11, 0x64, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xaf]
---
Predecessors: [0x59, 0x96]
Successors: [0xb0, 0xdc]
---
0x9e JUMPDEST
0x9f PUSH8 0x8ac7230489e80000
0xa8 CALLVALUE
0xa9 LT
0xaa ISZERO
0xab ISZERO
0xac PUSH2 0xdc
0xaf JUMPI
---
0x9e: JUMPDEST 
0x9f: V50 = 0x8ac7230489e80000
0xa8: V51 = CALLVALUE
0xa9: V52 = LT V51 0x8ac7230489e80000
0xaa: V53 = ISZERO V52
0xab: V54 = ISZERO V53
0xac: V55 = 0xdc
0xaf: JUMPI 0xdc V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xba]
---
Predecessors: [0x9e]
Successors: [0xbb, 0xbc]
---
0xb0 PUSH1 0x4
0xb2 SLOAD
0xb3 CALLVALUE
0xb4 DUP2
0xb5 ISZERO
0xb6 ISZERO
0xb7 PUSH2 0xbc
0xba JUMPI
---
0xb0: V56 = 0x4
0xb2: V57 = S[0x4]
0xb3: V58 = CALLVALUE
0xb5: V59 = ISZERO V57
0xb6: V60 = ISZERO V59
0xb7: V61 = 0xbc
0xba: JUMPI 0xbc V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57, V58]
Exit stack: [V11, V57, V58]

================================

Block 0xbb
[0xbb:0xbb]
---
Predecessors: [0xb0]
Successors: []
---
0xbb INVALID
---
0xbb: INVALID 
---
Entry stack: [V11, V57, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, V58]

================================

Block 0xbc
[0xbc:0xd2]
---
Predecessors: [0xb0]
Successors: [0xd3, 0xd4]
---
0xbc JUMPDEST
0xbd DIV
0xbe PUSH1 0x3
0xc0 DUP2
0xc1 SWAP1
0xc2 SSTORE
0xc3 POP
0xc4 PUSH1 0x64
0xc6 PUSH1 0x96
0xc8 PUSH1 0x3
0xca SLOAD
0xcb MUL
0xcc DUP2
0xcd ISZERO
0xce ISZERO
0xcf PUSH2 0xd4
0xd2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V62 = DIV V58 V57
0xbe: V63 = 0x3
0xc2: S[0x3] = V62
0xc4: V64 = 0x64
0xc6: V65 = 0x96
0xc8: V66 = 0x3
0xca: V67 = S[0x3]
0xcb: V68 = MUL V67 0x96
0xcd: V69 = ISZERO 0x64
0xce: V70 = ISZERO 0x0
0xcf: V71 = 0xd4
0xd2: JUMPI 0xd4 0x1
---
Entry stack: [V11, V57, V58]
Stack pops: 2
Stack additions: [0x64, V68]
Exit stack: [V11, 0x64, V68]

================================

Block 0xd3
[0xd3:0xd3]
---
Predecessors: [0xbc]
Successors: []
---
0xd3 INVALID
---
0xd3: INVALID 
---
Entry stack: [V11, 0x64, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V68]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0xbc]
Successors: [0xdc]
---
0xd4 JUMPDEST
0xd5 DIV
0xd6 PUSH1 0x3
0xd8 DUP2
0xd9 SWAP1
0xda SSTORE
0xdb POP
---
0xd4: JUMPDEST 
0xd5: V72 = DIV V68 0x64
0xd6: V73 = 0x3
0xda: S[0x3] = V72
---
Entry stack: [V11, 0x64, V68]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xed]
---
Predecessors: [0x9e, 0xd4]
Successors: [0xee, 0x11a]
---
0xdc JUMPDEST
0xdd PUSH8 0xd02ab486cedc0000
0xe6 CALLVALUE
0xe7 LT
0xe8 ISZERO
0xe9 ISZERO
0xea PUSH2 0x11a
0xed JUMPI
---
0xdc: JUMPDEST 
0xdd: V74 = 0xd02ab486cedc0000
0xe6: V75 = CALLVALUE
0xe7: V76 = LT V75 0xd02ab486cedc0000
0xe8: V77 = ISZERO V76
0xe9: V78 = ISZERO V77
0xea: V79 = 0x11a
0xed: JUMPI 0x11a V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xdc]
Successors: [0xf9, 0xfa]
---
0xee PUSH1 0x4
0xf0 SLOAD
0xf1 CALLVALUE
0xf2 DUP2
0xf3 ISZERO
0xf4 ISZERO
0xf5 PUSH2 0xfa
0xf8 JUMPI
---
0xee: V80 = 0x4
0xf0: V81 = S[0x4]
0xf1: V82 = CALLVALUE
0xf3: V83 = ISZERO V81
0xf4: V84 = ISZERO V83
0xf5: V85 = 0xfa
0xf8: JUMPI 0xfa V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81, V82]
Exit stack: [V11, V81, V82]

================================

Block 0xf9
[0xf9:0xf9]
---
Predecessors: [0xee]
Successors: []
---
0xf9 INVALID
---
0xf9: INVALID 
---
Entry stack: [V11, V81, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81, V82]

================================

Block 0xfa
[0xfa:0x110]
---
Predecessors: [0xee]
Successors: [0x111, 0x112]
---
0xfa JUMPDEST
0xfb DIV
0xfc PUSH1 0x3
0xfe DUP2
0xff SWAP1
0x100 SSTORE
0x101 POP
0x102 PUSH1 0x64
0x104 PUSH1 0xaf
0x106 PUSH1 0x3
0x108 SLOAD
0x109 MUL
0x10a DUP2
0x10b ISZERO
0x10c ISZERO
0x10d PUSH2 0x112
0x110 JUMPI
---
0xfa: JUMPDEST 
0xfb: V86 = DIV V82 V81
0xfc: V87 = 0x3
0x100: S[0x3] = V86
0x102: V88 = 0x64
0x104: V89 = 0xaf
0x106: V90 = 0x3
0x108: V91 = S[0x3]
0x109: V92 = MUL V91 0xaf
0x10b: V93 = ISZERO 0x64
0x10c: V94 = ISZERO 0x0
0x10d: V95 = 0x112
0x110: JUMPI 0x112 0x1
---
Entry stack: [V11, V81, V82]
Stack pops: 2
Stack additions: [0x64, V92]
Exit stack: [V11, 0x64, V92]

================================

Block 0x111
[0x111:0x111]
---
Predecessors: [0xfa]
Successors: []
---
0x111 INVALID
---
0x111: INVALID 
---
Entry stack: [V11, 0x64, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V92]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0xfa]
Successors: [0x11a]
---
0x112 JUMPDEST
0x113 DIV
0x114 PUSH1 0x3
0x116 DUP2
0x117 SWAP1
0x118 SSTORE
0x119 POP
---
0x112: JUMPDEST 
0x113: V96 = DIV V92 0x64
0x114: V97 = 0x3
0x118: S[0x3] = V96
---
Entry stack: [V11, 0x64, V92]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x12c]
---
Predecessors: [0xdc, 0x112]
Successors: [0x12d, 0x159]
---
0x11a JUMPDEST
0x11b PUSH9 0x1158e460913d00000
0x125 CALLVALUE
0x126 LT
0x127 ISZERO
0x128 ISZERO
0x129 PUSH2 0x159
0x12c JUMPI
---
0x11a: JUMPDEST 
0x11b: V98 = 0x1158e460913d00000
0x125: V99 = CALLVALUE
0x126: V100 = LT V99 0x1158e460913d00000
0x127: V101 = ISZERO V100
0x128: V102 = ISZERO V101
0x129: V103 = 0x159
0x12c: JUMPI 0x159 V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x11a]
Successors: [0x138, 0x139]
---
0x12d PUSH1 0x4
0x12f SLOAD
0x130 CALLVALUE
0x131 DUP2
0x132 ISZERO
0x133 ISZERO
0x134 PUSH2 0x139
0x137 JUMPI
---
0x12d: V104 = 0x4
0x12f: V105 = S[0x4]
0x130: V106 = CALLVALUE
0x132: V107 = ISZERO V105
0x133: V108 = ISZERO V107
0x134: V109 = 0x139
0x137: JUMPI 0x139 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V105, V106]
Exit stack: [V11, V105, V106]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0x12d]
Successors: []
---
0x138 INVALID
---
0x138: INVALID 
---
Entry stack: [V11, V105, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V105, V106]

================================

Block 0x139
[0x139:0x14f]
---
Predecessors: [0x12d]
Successors: [0x150, 0x151]
---
0x139 JUMPDEST
0x13a DIV
0x13b PUSH1 0x3
0x13d DUP2
0x13e SWAP1
0x13f SSTORE
0x140 POP
0x141 PUSH1 0x64
0x143 PUSH1 0xc8
0x145 PUSH1 0x3
0x147 SLOAD
0x148 MUL
0x149 DUP2
0x14a ISZERO
0x14b ISZERO
0x14c PUSH2 0x151
0x14f JUMPI
---
0x139: JUMPDEST 
0x13a: V110 = DIV V106 V105
0x13b: V111 = 0x3
0x13f: S[0x3] = V110
0x141: V112 = 0x64
0x143: V113 = 0xc8
0x145: V114 = 0x3
0x147: V115 = S[0x3]
0x148: V116 = MUL V115 0xc8
0x14a: V117 = ISZERO 0x64
0x14b: V118 = ISZERO 0x0
0x14c: V119 = 0x151
0x14f: JUMPI 0x151 0x1
---
Entry stack: [V11, V105, V106]
Stack pops: 2
Stack additions: [0x64, V116]
Exit stack: [V11, 0x64, V116]

================================

Block 0x150
[0x150:0x150]
---
Predecessors: [0x139]
Successors: []
---
0x150 INVALID
---
0x150: INVALID 
---
Entry stack: [V11, 0x64, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V116]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x139]
Successors: [0x159]
---
0x151 JUMPDEST
0x152 DIV
0x153 PUSH1 0x3
0x155 DUP2
0x156 SWAP1
0x157 SSTORE
0x158 POP
---
0x151: JUMPDEST 
0x152: V120 = DIV V116 0x64
0x153: V121 = 0x3
0x157: S[0x3] = V120
---
Entry stack: [V11, 0x64, V116]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x159
[0x159:0x271]
---
Predecessors: [0x11a, 0x151]
Successors: [0x272, 0x276]
---
0x159 JUMPDEST
0x15a PUSH1 0x7
0x15c PUSH1 0x0
0x15e SWAP1
0x15f SLOAD
0x160 SWAP1
0x161 PUSH2 0x100
0x164 EXP
0x165 SWAP1
0x166 DIV
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 PUSH4 0x23b872dd
0x198 PUSH1 0x1
0x19a PUSH1 0x0
0x19c SWAP1
0x19d SLOAD
0x19e SWAP1
0x19f PUSH2 0x100
0x1a2 EXP
0x1a3 SWAP1
0x1a4 DIV
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb CALLER
0x1bc PUSH1 0x3
0x1be SLOAD
0x1bf PUSH1 0x40
0x1c1 MLOAD
0x1c2 DUP5
0x1c3 PUSH4 0xffffffff
0x1c8 AND
0x1c9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1e7 MUL
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x4
0x1ec ADD
0x1ed DUP1
0x1ee DUP5
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x20
0x21f ADD
0x220 DUP4
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24c AND
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 DUP3
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x20
0x257 ADD
0x258 SWAP4
0x259 POP
0x25a POP
0x25b POP
0x25c POP
0x25d PUSH1 0x20
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 DUP4
0x264 SUB
0x265 DUP2
0x266 PUSH1 0x0
0x268 DUP8
0x269 DUP1
0x26a EXTCODESIZE
0x26b ISZERO
0x26c DUP1
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x159: JUMPDEST 
0x15a: V122 = 0x7
0x15c: V123 = 0x0
0x15f: V124 = S[0x7]
0x161: V125 = 0x100
0x164: V126 = EXP 0x100 0x0
0x166: V127 = DIV V124 0x1
0x167: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x17d: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x193: V132 = 0x23b872dd
0x198: V133 = 0x1
0x19a: V134 = 0x0
0x19d: V135 = S[0x1]
0x19f: V136 = 0x100
0x1a2: V137 = EXP 0x100 0x0
0x1a4: V138 = DIV V135 0x1
0x1a5: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x1bb: V141 = CALLER
0x1bc: V142 = 0x3
0x1be: V143 = S[0x3]
0x1bf: V144 = 0x40
0x1c1: V145 = M[0x40]
0x1c3: V146 = 0xffffffff
0x1c8: V147 = AND 0xffffffff 0x23b872dd
0x1c9: V148 = 0x100000000000000000000000000000000000000000000000000000000
0x1e7: V149 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x1e9: M[V145] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1ea: V150 = 0x4
0x1ec: V151 = ADD 0x4 V145
0x1ef: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x205: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x21c: M[V151] = V155
0x21d: V156 = 0x20
0x21f: V157 = ADD 0x20 V151
0x221: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x237: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x24e: M[V157] = V161
0x24f: V162 = 0x20
0x251: V163 = ADD 0x20 V157
0x254: M[V163] = V143
0x255: V164 = 0x20
0x257: V165 = ADD 0x20 V163
0x25d: V166 = 0x20
0x25f: V167 = 0x40
0x261: V168 = M[0x40]
0x264: V169 = SUB V165 V168
0x266: V170 = 0x0
0x26a: V171 = EXTCODESIZE V131
0x26b: V172 = ISZERO V171
0x26d: V173 = ISZERO V172
0x26e: V174 = 0x276
0x271: JUMPI 0x276 V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V131, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V131, V172]
Exit stack: [V11, V131, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V131, V172]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x159]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V175 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11, V131, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V131, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V131, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V131, V172]

================================

Block 0x276
[0x276:0x280]
---
Predecessors: [0x159]
Successors: [0x281, 0x28a]
---
0x276 JUMPDEST
0x277 POP
0x278 GAS
0x279 CALL
0x27a ISZERO
0x27b DUP1
0x27c ISZERO
0x27d PUSH2 0x28a
0x280 JUMPI
---
0x276: JUMPDEST 
0x278: V176 = GAS
0x279: V177 = CALL V176 V131 0x0 V168 V169 V168 0x20
0x27a: V178 = ISZERO V177
0x27c: V179 = ISZERO V178
0x27d: V180 = 0x28a
0x280: JUMPI 0x28a V179
---
Entry stack: [V11, V131, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V131, V172]
Stack pops: 7
Stack additions: [V178]
Exit stack: [V11, V131, 0x23b872dd, V165, V178]

================================

Block 0x281
[0x281:0x289]
---
Predecessors: [0x276]
Successors: []
---
0x281 RETURNDATASIZE
0x282 PUSH1 0x0
0x284 DUP1
0x285 RETURNDATACOPY
0x286 RETURNDATASIZE
0x287 PUSH1 0x0
0x289 REVERT
---
0x281: V181 = RETURNDATASIZE
0x282: V182 = 0x0
0x285: RETURNDATACOPY 0x0 0x0 V181
0x286: V183 = RETURNDATASIZE
0x287: V184 = 0x0
0x289: REVERT 0x0 V183
---
Entry stack: [V11, V131, 0x23b872dd, V165, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V131, 0x23b872dd, V165, V178]

================================

Block 0x28a
[0x28a:0x29b]
---
Predecessors: [0x276]
Successors: [0x29c, 0x2a0]
---
0x28a JUMPDEST
0x28b POP
0x28c POP
0x28d POP
0x28e POP
0x28f PUSH1 0x40
0x291 MLOAD
0x292 RETURNDATASIZE
0x293 PUSH1 0x20
0x295 DUP2
0x296 LT
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x28a: JUMPDEST 
0x28f: V185 = 0x40
0x291: V186 = M[0x40]
0x292: V187 = RETURNDATASIZE
0x293: V188 = 0x20
0x296: V189 = LT V187 0x20
0x297: V190 = ISZERO V189
0x298: V191 = 0x2a0
0x29b: JUMPI 0x2a0 V190
---
Entry stack: [V11, V131, 0x23b872dd, V165, V178]
Stack pops: 4
Stack additions: [V186, V187]
Exit stack: [V11, V186, V187]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x28a]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V192 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V11, V186, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V186, V187]

================================

Block 0x2a0
[0x2a0:0x2bf]
---
Predecessors: [0x28a]
Successors: [0x2c0, 0x2c1]
---
0x2a0 JUMPDEST
0x2a1 DUP2
0x2a2 ADD
0x2a3 SWAP1
0x2a4 DUP1
0x2a5 DUP1
0x2a6 MLOAD
0x2a7 SWAP1
0x2a8 PUSH1 0x20
0x2aa ADD
0x2ab SWAP1
0x2ac SWAP3
0x2ad SWAP2
0x2ae SWAP1
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 PUSH1 0x64
0x2b5 PUSH1 0x8
0x2b7 CALLVALUE
0x2b8 MUL
0x2b9 DUP2
0x2ba ISZERO
0x2bb ISZERO
0x2bc PUSH2 0x2c1
0x2bf JUMPI
---
0x2a0: JUMPDEST 
0x2a2: V193 = ADD V186 V187
0x2a6: V194 = M[V186]
0x2a8: V195 = 0x20
0x2aa: V196 = ADD 0x20 V186
0x2b3: V197 = 0x64
0x2b5: V198 = 0x8
0x2b7: V199 = CALLVALUE
0x2b8: V200 = MUL V199 0x8
0x2ba: V201 = ISZERO 0x64
0x2bb: V202 = ISZERO 0x0
0x2bc: V203 = 0x2c1
0x2bf: JUMPI 0x2c1 0x1
---
Entry stack: [V11, V186, V187]
Stack pops: 2
Stack additions: [0x64, V200]
Exit stack: [V11, 0x64, V200]

================================

Block 0x2c0
[0x2c0:0x2c0]
---
Predecessors: [0x2a0]
Successors: []
---
0x2c0 INVALID
---
0x2c0: INVALID 
---
Entry stack: [V11, 0x64, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V200]

================================

Block 0x2c1
[0x2c1:0x333]
---
Predecessors: [0x2a0]
Successors: [0x334, 0x33d]
---
0x2c1 JUMPDEST
0x2c2 DIV
0x2c3 PUSH1 0x6
0x2c5 DUP2
0x2c6 SWAP1
0x2c7 SSTORE
0x2c8 POP
0x2c9 PUSH1 0x6
0x2cb SLOAD
0x2cc CALLVALUE
0x2cd SUB
0x2ce PUSH1 0x5
0x2d0 DUP2
0x2d1 SWAP1
0x2d2 SSTORE
0x2d3 POP
0x2d4 PUSH1 0x2
0x2d6 PUSH1 0x0
0x2d8 SWAP1
0x2d9 SLOAD
0x2da SWAP1
0x2db PUSH2 0x100
0x2de EXP
0x2df SWAP1
0x2e0 DIV
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d PUSH2 0x8fc
0x310 PUSH1 0x6
0x312 SLOAD
0x313 SWAP1
0x314 DUP2
0x315 ISZERO
0x316 MUL
0x317 SWAP1
0x318 PUSH1 0x40
0x31a MLOAD
0x31b PUSH1 0x0
0x31d PUSH1 0x40
0x31f MLOAD
0x320 DUP1
0x321 DUP4
0x322 SUB
0x323 DUP2
0x324 DUP6
0x325 DUP9
0x326 DUP9
0x327 CALL
0x328 SWAP4
0x329 POP
0x32a POP
0x32b POP
0x32c POP
0x32d ISZERO
0x32e DUP1
0x32f ISZERO
0x330 PUSH2 0x33d
0x333 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V204 = DIV V200 0x64
0x2c3: V205 = 0x6
0x2c7: S[0x6] = V204
0x2c9: V206 = 0x6
0x2cb: V207 = S[0x6]
0x2cc: V208 = CALLVALUE
0x2cd: V209 = SUB V208 V207
0x2ce: V210 = 0x5
0x2d2: S[0x5] = V209
0x2d4: V211 = 0x2
0x2d6: V212 = 0x0
0x2d9: V213 = S[0x2]
0x2db: V214 = 0x100
0x2de: V215 = EXP 0x100 0x0
0x2e0: V216 = DIV V213 0x1
0x2e1: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2f7: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x30d: V221 = 0x8fc
0x310: V222 = 0x6
0x312: V223 = S[0x6]
0x315: V224 = ISZERO V223
0x316: V225 = MUL V224 0x8fc
0x318: V226 = 0x40
0x31a: V227 = M[0x40]
0x31b: V228 = 0x0
0x31d: V229 = 0x40
0x31f: V230 = M[0x40]
0x322: V231 = SUB V227 V230
0x327: V232 = CALL V225 V220 V223 V230 V231 V230 0x0
0x32d: V233 = ISZERO V232
0x32f: V234 = ISZERO V233
0x330: V235 = 0x33d
0x333: JUMPI 0x33d V234
---
Entry stack: [V11, 0x64, V200]
Stack pops: 2
Stack additions: [V233]
Exit stack: [V11, V233]

================================

Block 0x334
[0x334:0x33c]
---
Predecessors: [0x2c1]
Successors: []
---
0x334 RETURNDATASIZE
0x335 PUSH1 0x0
0x337 DUP1
0x338 RETURNDATACOPY
0x339 RETURNDATASIZE
0x33a PUSH1 0x0
0x33c REVERT
---
0x334: V236 = RETURNDATASIZE
0x335: V237 = 0x0
0x338: RETURNDATACOPY 0x0 0x0 V236
0x339: V238 = RETURNDATASIZE
0x33a: V239 = 0x0
0x33c: REVERT 0x0 V238
---
Entry stack: [V11, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V233]

================================

Block 0x33d
[0x33d:0x39e]
---
Predecessors: [0x2c1]
Successors: [0x39f, 0x3a8]
---
0x33d JUMPDEST
0x33e POP
0x33f PUSH1 0x1
0x341 PUSH1 0x0
0x343 SWAP1
0x344 SLOAD
0x345 SWAP1
0x346 PUSH2 0x100
0x349 EXP
0x34a SWAP1
0x34b DIV
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 AND
0x378 PUSH2 0x8fc
0x37b PUSH1 0x5
0x37d SLOAD
0x37e SWAP1
0x37f DUP2
0x380 ISZERO
0x381 MUL
0x382 SWAP1
0x383 PUSH1 0x40
0x385 MLOAD
0x386 PUSH1 0x0
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c DUP4
0x38d SUB
0x38e DUP2
0x38f DUP6
0x390 DUP9
0x391 DUP9
0x392 CALL
0x393 SWAP4
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 ISZERO
0x399 DUP1
0x39a ISZERO
0x39b PUSH2 0x3a8
0x39e JUMPI
---
0x33d: JUMPDEST 
0x33f: V240 = 0x1
0x341: V241 = 0x0
0x344: V242 = S[0x1]
0x346: V243 = 0x100
0x349: V244 = EXP 0x100 0x0
0x34b: V245 = DIV V242 0x1
0x34c: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x362: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x378: V250 = 0x8fc
0x37b: V251 = 0x5
0x37d: V252 = S[0x5]
0x380: V253 = ISZERO V252
0x381: V254 = MUL V253 0x8fc
0x383: V255 = 0x40
0x385: V256 = M[0x40]
0x386: V257 = 0x0
0x388: V258 = 0x40
0x38a: V259 = M[0x40]
0x38d: V260 = SUB V256 V259
0x392: V261 = CALL V254 V249 V252 V259 V260 V259 0x0
0x398: V262 = ISZERO V261
0x39a: V263 = ISZERO V262
0x39b: V264 = 0x3a8
0x39e: JUMPI 0x3a8 V263
---
Entry stack: [V11, V233]
Stack pops: 1
Stack additions: [V262]
Exit stack: [V11, V262]

================================

Block 0x39f
[0x39f:0x3a7]
---
Predecessors: [0x33d]
Successors: []
---
0x39f RETURNDATASIZE
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 RETURNDATACOPY
0x3a4 RETURNDATASIZE
0x3a5 PUSH1 0x0
0x3a7 REVERT
---
0x39f: V265 = RETURNDATASIZE
0x3a0: V266 = 0x0
0x3a3: RETURNDATACOPY 0x0 0x0 V265
0x3a4: V267 = RETURNDATASIZE
0x3a5: V268 = 0x0
0x3a7: REVERT 0x0 V267
---
Entry stack: [V11, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V262]

================================

Block 0x3a8
[0x3a8:0x3aa]
---
Predecessors: [0x33d]
Successors: []
---
0x3a8 JUMPDEST
0x3a9 POP
0x3aa STOP
---
0x3a8: JUMPDEST 
0x3aa: STOP 
---
Entry stack: [V11, V262]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ab
[0x3ab:0x3b2]
---
Predecessors: [0xd]
Successors: [0x3b3, 0x3b7]
---
0x3ab JUMPDEST
0x3ac CALLVALUE
0x3ad DUP1
0x3ae ISZERO
0x3af PUSH2 0x3b7
0x3b2 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V269 = CALLVALUE
0x3ae: V270 = ISZERO V269
0x3af: V271 = 0x3b7
0x3b2: JUMPI 0x3b7 V270
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V269]
Exit stack: [V11, V269]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x3ab]
Successors: []
---
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 REVERT
---
0x3b3: V272 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V11, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V269]

================================

Block 0x3b7
[0x3b7:0x3bf]
---
Predecessors: [0x3ab]
Successors: [0x42d]
---
0x3b7 JUMPDEST
0x3b8 POP
0x3b9 PUSH2 0x3c0
0x3bc PUSH2 0x42d
0x3bf JUMP
---
0x3b7: JUMPDEST 
0x3b9: V273 = 0x3c0
0x3bc: V274 = 0x42d
0x3bf: JUMP 0x42d
---
Entry stack: [V11, V269]
Stack pops: 1
Stack additions: [0x3c0]
Exit stack: [V11, 0x3c0]

================================

Block 0x3c0
[0x3c0:0x401]
---
Predecessors: [0x42d]
Successors: []
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x40
0x3c3 MLOAD
0x3c4 DUP1
0x3c5 DUP3
0x3c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3db AND
0x3dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f1 AND
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x20
0x3f6 ADD
0x3f7 SWAP2
0x3f8 POP
0x3f9 POP
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe SWAP2
0x3ff SUB
0x400 SWAP1
0x401 RETURN
---
0x3c0: JUMPDEST 
0x3c1: V275 = 0x40
0x3c3: V276 = M[0x40]
0x3c6: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x3dc: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x3f3: M[V276] = V280
0x3f4: V281 = 0x20
0x3f6: V282 = ADD 0x20 V276
0x3fa: V283 = 0x40
0x3fc: V284 = M[0x40]
0x3ff: V285 = SUB V282 V284
0x401: RETURN V284 V285
---
Entry stack: [V11, 0x3c0, V306]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3c0]

================================

Block 0x402
[0x402:0x409]
---
Predecessors: [0x41]
Successors: [0x40a, 0x40e]
---
0x402 JUMPDEST
0x403 CALLVALUE
0x404 DUP1
0x405 ISZERO
0x406 PUSH2 0x40e
0x409 JUMPI
---
0x402: JUMPDEST 
0x403: V286 = CALLVALUE
0x405: V287 = ISZERO V286
0x406: V288 = 0x40e
0x409: JUMPI 0x40e V287
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V286]
Exit stack: [V11, V286]

================================

Block 0x40a
[0x40a:0x40d]
---
Predecessors: [0x402]
Successors: []
---
0x40a PUSH1 0x0
0x40c DUP1
0x40d REVERT
---
0x40a: V289 = 0x0
0x40d: REVERT 0x0 0x0
---
Entry stack: [V11, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V286]

================================

Block 0x40e
[0x40e:0x416]
---
Predecessors: [0x402]
Successors: [0x453]
---
0x40e JUMPDEST
0x40f POP
0x410 PUSH2 0x417
0x413 PUSH2 0x453
0x416 JUMP
---
0x40e: JUMPDEST 
0x410: V290 = 0x417
0x413: V291 = 0x453
0x416: JUMP 0x453
---
Entry stack: [V11, V286]
Stack pops: 1
Stack additions: [0x417]
Exit stack: [V11, 0x417]

================================

Block 0x417
[0x417:0x42c]
---
Predecessors: [0x453]
Successors: []
---
0x417 JUMPDEST
0x418 PUSH1 0x40
0x41a MLOAD
0x41b DUP1
0x41c DUP3
0x41d DUP2
0x41e MSTORE
0x41f PUSH1 0x20
0x421 ADD
0x422 SWAP2
0x423 POP
0x424 POP
0x425 PUSH1 0x40
0x427 MLOAD
0x428 DUP1
0x429 SWAP2
0x42a SUB
0x42b SWAP1
0x42c RETURN
---
0x417: JUMPDEST 
0x418: V292 = 0x40
0x41a: V293 = M[0x40]
0x41e: M[V293] = V308
0x41f: V294 = 0x20
0x421: V295 = ADD 0x20 V293
0x425: V296 = 0x40
0x427: V297 = M[0x40]
0x42a: V298 = SUB V295 V297
0x42c: RETURN V297 V298
---
Entry stack: [V11, 0x417, V308]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x417]

================================

Block 0x42d
[0x42d:0x452]
---
Predecessors: [0x3b7]
Successors: [0x3c0]
---
0x42d JUMPDEST
0x42e PUSH1 0x7
0x430 PUSH1 0x0
0x432 SWAP1
0x433 SLOAD
0x434 SWAP1
0x435 PUSH2 0x100
0x438 EXP
0x439 SWAP1
0x43a DIV
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 DUP2
0x452 JUMP
---
0x42d: JUMPDEST 
0x42e: V299 = 0x7
0x430: V300 = 0x0
0x433: V301 = S[0x7]
0x435: V302 = 0x100
0x438: V303 = EXP 0x100 0x0
0x43a: V304 = DIV V301 0x1
0x43b: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x452: JUMP 0x3c0
---
Entry stack: [V11, 0x3c0]
Stack pops: 1
Stack additions: [S0, V306]
Exit stack: [V11, 0x3c0, V306]

================================

Block 0x453
[0x453:0x458]
---
Predecessors: [0x40e]
Successors: [0x417]
---
0x453 JUMPDEST
0x454 PUSH1 0x4
0x456 SLOAD
0x457 DUP2
0x458 JUMP
---
0x453: JUMPDEST 
0x454: V307 = 0x4
0x456: V308 = S[0x4]
0x458: JUMP 0x417
---
Entry stack: [V11, 0x417]
Stack pops: 1
Stack additions: [S0, V308]
Exit stack: [V11, 0x417, V308]

================================

Block 0x459
[0x459:0x484]
---
Predecessors: []
Successors: []
---
0x459 STOP
0x45a LOG1
0x45b PUSH6 0x627a7a723058
0x462 SHA3
0x463 RETURN
0x464 MISSING 0xef
0x465 SWAP11
0x466 MISSING 0xe6
0x467 SMOD
0x468 PUSH26 0x9bbc5d77a25d75643056b56f2e939e1606403cfd219b1afe491c
0x483 STOP
0x484 MISSING 0x29
---
0x459: STOP 
0x45a: LOG S0 S1 S2
0x45b: V309 = 0x627a7a723058
0x462: V310 = SHA3 0x627a7a723058 S3
0x463: RETURN V310 S4
0x464: MISSING 0xef
0x466: MISSING 0xe6
0x467: V311 = SMOD S0 S1
0x468: V312 = 0x9bbc5d77a25d75643056b56f2e939e1606403cfd219b1afe491c
0x483: STOP 
0x484: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0x9bbc5d77a25d75643056b56f2e939e1606403cfd219b1afe491c, V311]
Exit stack: []

================================

Function 0:
Public function signature: 0x6e66f6e9
Entry block: 0x3ab
Exit block: 0x3c0
Body: 0x3ab, 0x3b3, 0x3b7, 0x3c0, 0x42d

Function 1:
Public function signature: 0x9518589a
Entry block: 0x402
Exit block: 0x417
Body: 0x402, 0x40a, 0x40e, 0x417, 0x453

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x3a8
Body: 0x4c, 0x58, 0x59, 0x72, 0x7d, 0x7e, 0x95, 0x96, 0x9e, 0xb0, 0xbb, 0xbc, 0xd3, 0xd4, 0xdc, 0xee, 0xf9, 0xfa, 0x111, 0x112, 0x11a, 0x12d, 0x138, 0x139, 0x150, 0x151, 0x159, 0x272, 0x276, 0x281, 0x28a, 0x29c, 0x2a0, 0x2c0, 0x2c1, 0x334, 0x33d, 0x39f, 0x3a8

