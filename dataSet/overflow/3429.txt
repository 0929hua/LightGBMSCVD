Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xc0ee0b8a
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xc0ee0b8a
0x3c: V13 = EQ 0xc0ee0b8a V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4d]
---
Predecessors: [0xd]
Successors: [0x4e, 0x52]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 DUP1
0x49 ISZERO
0x4a PUSH2 0x52
0x4d JUMPI
---
0x46: JUMPDEST 
0x47: V16 = CALLVALUE
0x49: V17 = ISZERO V16
0x4a: V18 = 0x52
0x4d: JUMPI 0x52 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V16]
Exit stack: [V11, V16]

================================

Block 0x4e
[0x4e:0x51]
---
Predecessors: [0x46]
Successors: []
---
0x4e PUSH1 0x0
0x50 DUP1
0x51 REVERT
---
0x4e: V19 = 0x0
0x51: REVERT 0x0 0x0
---
Entry stack: [V11, V16]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V16]

================================

Block 0x52
[0x52:0xd6]
---
Predecessors: [0x46]
Successors: [0xd9]
---
0x52 JUMPDEST
0x53 POP
0x54 PUSH2 0xd7
0x57 PUSH1 0x4
0x59 DUP1
0x5a CALLDATASIZE
0x5b SUB
0x5c DUP2
0x5d ADD
0x5e SWAP1
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP3
0x7e SWAP2
0x7f SWAP1
0x80 DUP1
0x81 CALLDATALOAD
0x82 SWAP1
0x83 PUSH1 0x20
0x85 ADD
0x86 SWAP1
0x87 SWAP3
0x88 SWAP2
0x89 SWAP1
0x8a DUP1
0x8b CALLDATALOAD
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 DUP3
0x92 ADD
0x93 DUP1
0x94 CALLDATALOAD
0x95 SWAP1
0x96 PUSH1 0x20
0x98 ADD
0x99 SWAP1
0x9a DUP1
0x9b DUP1
0x9c PUSH1 0x1f
0x9e ADD
0x9f PUSH1 0x20
0xa1 DUP1
0xa2 SWAP2
0xa3 DIV
0xa4 MUL
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 PUSH1 0x40
0xaa MLOAD
0xab SWAP1
0xac DUP2
0xad ADD
0xae PUSH1 0x40
0xb0 MSTORE
0xb1 DUP1
0xb2 SWAP4
0xb3 SWAP3
0xb4 SWAP2
0xb5 SWAP1
0xb6 DUP2
0xb7 DUP2
0xb8 MSTORE
0xb9 PUSH1 0x20
0xbb ADD
0xbc DUP4
0xbd DUP4
0xbe DUP1
0xbf DUP3
0xc0 DUP5
0xc1 CALLDATACOPY
0xc2 DUP3
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca POP
0xcb SWAP2
0xcc SWAP3
0xcd SWAP2
0xce SWAP3
0xcf SWAP1
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 PUSH2 0xd9
0xd6 JUMP
---
0x52: JUMPDEST 
0x54: V20 = 0xd7
0x57: V21 = 0x4
0x5a: V22 = CALLDATASIZE
0x5b: V23 = SUB V22 0x4
0x5d: V24 = ADD 0x4 V23
0x61: V25 = CALLDATALOAD 0x4
0x62: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x79: V28 = 0x20
0x7b: V29 = ADD 0x20 0x4
0x81: V30 = CALLDATALOAD 0x24
0x83: V31 = 0x20
0x85: V32 = ADD 0x20 0x24
0x8b: V33 = CALLDATALOAD 0x44
0x8d: V34 = 0x20
0x8f: V35 = ADD 0x20 0x44
0x92: V36 = ADD 0x4 V33
0x94: V37 = CALLDATALOAD V36
0x96: V38 = 0x20
0x98: V39 = ADD 0x20 V36
0x9c: V40 = 0x1f
0x9e: V41 = ADD 0x1f V37
0x9f: V42 = 0x20
0xa3: V43 = DIV V41 0x20
0xa4: V44 = MUL V43 0x20
0xa5: V45 = 0x20
0xa7: V46 = ADD 0x20 V44
0xa8: V47 = 0x40
0xaa: V48 = M[0x40]
0xad: V49 = ADD V48 V46
0xae: V50 = 0x40
0xb0: M[0x40] = V49
0xb8: M[V48] = V37
0xb9: V51 = 0x20
0xbb: V52 = ADD 0x20 V48
0xc1: CALLDATACOPY V52 V39 V37
0xc3: V53 = ADD V52 V37
0xd3: V54 = 0xd9
0xd6: JUMP 0xd9
---
Entry stack: [V11, V16]
Stack pops: 1
Stack additions: [0xd7, V27, V30, V48]
Exit stack: [V11, 0xd7, V27, V30, V48]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: [0x2db]
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x52]
Successors: [0x3be]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x3be
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V55 = 0xe1
0xdd: V56 = 0x3be
0xe0: JUMP 0x3be
---
Entry stack: [V11, 0xd7, V27, V30, V48]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V11, 0xd7, V27, V30, V48, 0xe1]

================================

Block 0xe1
[0xe1:0x13d]
---
Predecessors: [0x3be]
Successors: [0x13e, 0x13f]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x0
0xe4 DUP5
0xe5 DUP3
0xe6 PUSH1 0x0
0xe8 ADD
0xe9 SWAP1
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 SWAP1
0x101 DUP2
0x102 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x117 AND
0x118 DUP2
0x119 MSTORE
0x11a POP
0x11b POP
0x11c DUP4
0x11d DUP3
0x11e PUSH1 0x20
0x120 ADD
0x121 DUP2
0x122 DUP2
0x123 MSTORE
0x124 POP
0x125 POP
0x126 DUP3
0x127 DUP3
0x128 PUSH1 0x40
0x12a ADD
0x12b DUP2
0x12c SWAP1
0x12d MSTORE
0x12e POP
0x12f PUSH1 0x18
0x131 DUP4
0x132 PUSH1 0x0
0x134 DUP2
0x135 MLOAD
0x136 DUP2
0x137 LT
0x138 ISZERO
0x139 ISZERO
0x13a PUSH2 0x13f
0x13d JUMPI
---
0xe1: JUMPDEST 
0xe2: V57 = 0x0
0xe6: V58 = 0x0
0xe8: V59 = ADD 0x0 V165
0xea: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x102: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x117: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x119: M[V59] = V63
0x11e: V64 = 0x20
0x120: V65 = ADD 0x20 V165
0x123: M[V65] = V30
0x128: V66 = 0x40
0x12a: V67 = ADD 0x40 V165
0x12d: M[V67] = V48
0x12f: V68 = 0x18
0x132: V69 = 0x0
0x135: V70 = M[V48]
0x137: V71 = LT 0x0 V70
0x138: V72 = ISZERO V71
0x139: V73 = ISZERO V72
0x13a: V74 = 0x13f
0x13d: JUMPI 0x13f V73
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x18, S1, 0x0]
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, 0x18, V48, 0x0]

================================

Block 0x13e
[0x13e:0x13e]
---
Predecessors: [0xe1]
Successors: []
---
0x13e INVALID
---
0x13e: INVALID 
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, 0x18, V48, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, 0x18, V48, 0x0]

================================

Block 0x13f
[0x13f:0x1c7]
---
Predecessors: [0xe1]
Successors: [0x1c8, 0x1c9]
---
0x13f JUMPDEST
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 ADD
0x145 MLOAD
0x146 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x167 SWAP1
0x168 DIV
0x169 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x18a MUL
0x18b PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x1ac SWAP1
0x1ad DIV
0x1ae PUSH4 0xffffffff
0x1b3 AND
0x1b4 SWAP1
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 MUL
0x1b9 PUSH1 0x10
0x1bb DUP5
0x1bc PUSH1 0x1
0x1be DUP2
0x1bf MLOAD
0x1c0 DUP2
0x1c1 LT
0x1c2 ISZERO
0x1c3 ISZERO
0x1c4 PUSH2 0x1c9
0x1c7 JUMPI
---
0x13f: JUMPDEST 
0x141: V75 = 0x20
0x143: V76 = ADD 0x20 V48
0x144: V77 = ADD V76 0x0
0x145: V78 = M[V77]
0x146: V79 = 0x100000000000000000000000000000000000000000000000000000000000000
0x168: V80 = DIV V78 0x100000000000000000000000000000000000000000000000000000000000000
0x169: V81 = 0x100000000000000000000000000000000000000000000000000000000000000
0x18a: V82 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V80
0x18b: V83 = 0x100000000000000000000000000000000000000000000000000000000000000
0x1ad: V84 = DIV V82 0x100000000000000000000000000000000000000000000000000000000000000
0x1ae: V85 = 0xffffffff
0x1b3: V86 = AND 0xffffffff V84
0x1b5: V87 = 0x2
0x1b7: V88 = EXP 0x2 0x18
0x1b8: V89 = MUL 0x1000000 V86
0x1b9: V90 = 0x10
0x1bc: V91 = 0x1
0x1bf: V92 = M[V48]
0x1c1: V93 = LT 0x1 V92
0x1c2: V94 = ISZERO V93
0x1c3: V95 = ISZERO V94
0x1c4: V96 = 0x1c9
0x1c7: JUMPI 0x1c9 V95
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, 0x18, V48, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V89, 0x10, S5, 0x1]
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, 0x10, V48, 0x1]

================================

Block 0x1c8
[0x1c8:0x1c8]
---
Predecessors: [0x13f]
Successors: []
---
0x1c8 INVALID
---
0x1c8: INVALID 
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, 0x10, V48, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, 0x10, V48, 0x1]

================================

Block 0x1c9
[0x1c9:0x251]
---
Predecessors: [0x13f]
Successors: [0x252, 0x253]
---
0x1c9 JUMPDEST
0x1ca SWAP1
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce ADD
0x1cf MLOAD
0x1d0 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x1f1 SWAP1
0x1f2 DIV
0x1f3 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x214 MUL
0x215 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x236 SWAP1
0x237 DIV
0x238 PUSH4 0xffffffff
0x23d AND
0x23e SWAP1
0x23f PUSH1 0x2
0x241 EXP
0x242 MUL
0x243 PUSH1 0x8
0x245 DUP6
0x246 PUSH1 0x2
0x248 DUP2
0x249 MLOAD
0x24a DUP2
0x24b LT
0x24c ISZERO
0x24d ISZERO
0x24e PUSH2 0x253
0x251 JUMPI
---
0x1c9: JUMPDEST 
0x1cb: V97 = 0x20
0x1cd: V98 = ADD 0x20 V48
0x1ce: V99 = ADD V98 0x1
0x1cf: V100 = M[V99]
0x1d0: V101 = 0x100000000000000000000000000000000000000000000000000000000000000
0x1f2: V102 = DIV V100 0x100000000000000000000000000000000000000000000000000000000000000
0x1f3: V103 = 0x100000000000000000000000000000000000000000000000000000000000000
0x214: V104 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V102
0x215: V105 = 0x100000000000000000000000000000000000000000000000000000000000000
0x237: V106 = DIV V104 0x100000000000000000000000000000000000000000000000000000000000000
0x238: V107 = 0xffffffff
0x23d: V108 = AND 0xffffffff V106
0x23f: V109 = 0x2
0x241: V110 = EXP 0x2 0x10
0x242: V111 = MUL 0x10000 V108
0x243: V112 = 0x8
0x246: V113 = 0x2
0x249: V114 = M[V48]
0x24b: V115 = LT 0x2 V114
0x24c: V116 = ISZERO V115
0x24d: V117 = ISZERO V116
0x24e: V118 = 0x253
0x251: JUMPI 0x253 V117
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, 0x10, V48, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V111, 0x8, S6, 0x2]
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, 0x8, V48, 0x2]

================================

Block 0x252
[0x252:0x252]
---
Predecessors: [0x1c9]
Successors: []
---
0x252 INVALID
---
0x252: INVALID 
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, 0x8, V48, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, 0x8, V48, 0x2]

================================

Block 0x253
[0x253:0x2d9]
---
Predecessors: [0x1c9]
Successors: [0x2da, 0x2db]
---
0x253 JUMPDEST
0x254 SWAP1
0x255 PUSH1 0x20
0x257 ADD
0x258 ADD
0x259 MLOAD
0x25a PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x27b SWAP1
0x27c DIV
0x27d PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x29e MUL
0x29f PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x2c0 SWAP1
0x2c1 DIV
0x2c2 PUSH4 0xffffffff
0x2c7 AND
0x2c8 SWAP1
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc MUL
0x2cd DUP6
0x2ce PUSH1 0x3
0x2d0 DUP2
0x2d1 MLOAD
0x2d2 DUP2
0x2d3 LT
0x2d4 ISZERO
0x2d5 ISZERO
0x2d6 PUSH2 0x2db
0x2d9 JUMPI
---
0x253: JUMPDEST 
0x255: V119 = 0x20
0x257: V120 = ADD 0x20 V48
0x258: V121 = ADD V120 0x2
0x259: V122 = M[V121]
0x25a: V123 = 0x100000000000000000000000000000000000000000000000000000000000000
0x27c: V124 = DIV V122 0x100000000000000000000000000000000000000000000000000000000000000
0x27d: V125 = 0x100000000000000000000000000000000000000000000000000000000000000
0x29e: V126 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V124
0x29f: V127 = 0x100000000000000000000000000000000000000000000000000000000000000
0x2c1: V128 = DIV V126 0x100000000000000000000000000000000000000000000000000000000000000
0x2c2: V129 = 0xffffffff
0x2c7: V130 = AND 0xffffffff V128
0x2c9: V131 = 0x2
0x2cb: V132 = EXP 0x2 0x8
0x2cc: V133 = MUL 0x100 V130
0x2ce: V134 = 0x3
0x2d1: V135 = M[V48]
0x2d3: V136 = LT 0x3 V135
0x2d4: V137 = ISZERO V136
0x2d5: V138 = ISZERO V137
0x2d6: V139 = 0x2db
0x2d9: JUMPI 0x2db V138
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, 0x8, V48, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V133, S7, 0x3]
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, V133, V48, 0x3]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x253]
Successors: []
---
0x2da INVALID
---
0x2da: INVALID 
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, V133, V48, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, V133, V48, 0x3]

================================

Block 0x2db
[0x2db:0x3bd]
---
Predecessors: [0x253]
Successors: [0xd7]
---
0x2db JUMPDEST
0x2dc SWAP1
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 ADD
0x2e1 MLOAD
0x2e2 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x303 SWAP1
0x304 DIV
0x305 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x326 MUL
0x327 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x348 SWAP1
0x349 DIV
0x34a ADD
0x34b ADD
0x34c ADD
0x34d SWAP1
0x34e POP
0x34f DUP1
0x350 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x36e MUL
0x36f DUP3
0x370 PUSH1 0x60
0x372 ADD
0x373 SWAP1
0x374 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x391 NOT
0x392 AND
0x393 SWAP1
0x394 DUP2
0x395 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3b2 NOT
0x3b3 AND
0x3b4 DUP2
0x3b5 MSTORE
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd JUMP
---
0x2db: JUMPDEST 
0x2dd: V140 = 0x20
0x2df: V141 = ADD 0x20 V48
0x2e0: V142 = ADD V141 0x3
0x2e1: V143 = M[V142]
0x2e2: V144 = 0x100000000000000000000000000000000000000000000000000000000000000
0x304: V145 = DIV V143 0x100000000000000000000000000000000000000000000000000000000000000
0x305: V146 = 0x100000000000000000000000000000000000000000000000000000000000000
0x326: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V145
0x327: V148 = 0x100000000000000000000000000000000000000000000000000000000000000
0x349: V149 = DIV V147 0x100000000000000000000000000000000000000000000000000000000000000
0x34a: V150 = ADD V149 V133
0x34b: V151 = ADD V150 V111
0x34c: V152 = ADD V151 V89
0x350: V153 = 0x100000000000000000000000000000000000000000000000000000000
0x36e: V154 = MUL 0x100000000000000000000000000000000000000000000000000000000 V152
0x370: V155 = 0x60
0x372: V156 = ADD 0x60 V165
0x374: V157 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x391: V158 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x392: V159 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V154
0x395: V160 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3b2: V161 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3b3: V162 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V159
0x3b5: M[V156] = V162
0x3bd: JUMP 0xd7
---
Entry stack: [V11, 0xd7, V27, V30, V48, V165, 0x0, V89, V111, V133, V48, 0x3]
Stack pops: 11
Stack additions: []
Exit stack: [V11]

================================

Block 0x3be
[0x3be:0x41b]
---
Predecessors: [0xd9]
Successors: [0xe1]
---
0x3be JUMPDEST
0x3bf PUSH1 0x80
0x3c1 PUSH1 0x40
0x3c3 MLOAD
0x3c4 SWAP1
0x3c5 DUP2
0x3c6 ADD
0x3c7 PUSH1 0x40
0x3c9 MSTORE
0x3ca DUP1
0x3cb PUSH1 0x0
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 PUSH1 0x0
0x3ea DUP2
0x3eb MSTORE
0x3ec PUSH1 0x20
0x3ee ADD
0x3ef PUSH1 0x60
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 PUSH1 0x0
0x3f8 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x415 NOT
0x416 AND
0x417 DUP2
0x418 MSTORE
0x419 POP
0x41a SWAP1
0x41b JUMP
---
0x3be: JUMPDEST 
0x3bf: V163 = 0x80
0x3c1: V164 = 0x40
0x3c3: V165 = M[0x40]
0x3c6: V166 = ADD V165 0x80
0x3c7: V167 = 0x40
0x3c9: M[0x40] = V166
0x3cb: V168 = 0x0
0x3cd: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3e4: M[V165] = 0x0
0x3e5: V171 = 0x20
0x3e7: V172 = ADD 0x20 V165
0x3e8: V173 = 0x0
0x3eb: M[V172] = 0x0
0x3ec: V174 = 0x20
0x3ee: V175 = ADD 0x20 V172
0x3ef: V176 = 0x60
0x3f2: M[V175] = 0x60
0x3f3: V177 = 0x20
0x3f5: V178 = ADD 0x20 V175
0x3f6: V179 = 0x0
0x3f8: V180 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x415: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x416: V182 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0x0
0x418: M[V178] = 0x0
0x41b: JUMP 0xe1
---
Entry stack: [V11, 0xd7, V27, V30, V48, 0xe1]
Stack pops: 1
Stack additions: [V165]
Exit stack: [V11, 0xd7, V27, V30, V48, V165]

================================

Block 0x41c
[0x41c:0x453]
---
Predecessors: []
Successors: [0x454]
---
0x41c STOP
0x41d LOG1
0x41e PUSH6 0x627a7a723058
0x425 SHA3
0x426 EXP
0x427 MISSING 0xbc
0x428 MISSING 0xcd
0x429 MLOAD
0x42a MISSING 0xd2
0x42b DUP11
0x42c MISSING 0xd4
0x42d MISSING 0xdc
0x42e MISSING 0xe2
0x42f MISSING 0xcd
0x430 PUSH8 0x6fc3466c8c78b24
0x439 MISSING 0xdb
0x43a MISSING 0x4d
0x43b PUSH4 0xb91dc44f
0x440 MISSING 0x2d
0x441 BYTE
0x442 MISSING 0xbe
0x443 PUSH3 0xaadf00
0x447 MISSING 0x29
0x448 PUSH1 0x80
0x44a PUSH1 0x40
0x44c MSTORE
0x44d PUSH1 0x4
0x44f CALLDATASIZE
0x450 LT
0x451 PUSH1 0x3f
0x453 JUMPI
---
0x41c: STOP 
0x41d: LOG S0 S1 S2
0x41e: V183 = 0x627a7a723058
0x425: V184 = SHA3 0x627a7a723058 S3
0x426: V185 = EXP V184 S4
0x427: MISSING 0xbc
0x428: MISSING 0xcd
0x429: V186 = M[S0]
0x42a: MISSING 0xd2
0x42c: MISSING 0xd4
0x42d: MISSING 0xdc
0x42e: MISSING 0xe2
0x42f: MISSING 0xcd
0x430: V187 = 0x6fc3466c8c78b24
0x439: MISSING 0xdb
0x43a: MISSING 0x4d
0x43b: V188 = 0xb91dc44f
0x440: MISSING 0x2d
0x441: V189 = BYTE S0 S1
0x442: MISSING 0xbe
0x443: V190 = 0xaadf00
0x447: MISSING 0x29
0x448: V191 = 0x80
0x44a: V192 = 0x40
0x44c: M[0x40] = 0x80
0x44d: V193 = 0x4
0x44f: V194 = CALLDATASIZE
0x450: V195 = LT V194 0x4
0x451: V196 = 0x3f
0x453: THROWI V195
---
Entry stack: []
Stack pops: 0
Stack additions: [V185, V186, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x6fc3466c8c78b24, 0xb91dc44f, V189, 0xaadf00]
Exit stack: []

================================

Block 0x454
[0x454:0x486]
---
Predecessors: [0x41c]
Successors: [0x487]
---
0x454 PUSH1 0x0
0x456 CALLDATALOAD
0x457 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x475 SWAP1
0x476 DIV
0x477 PUSH4 0xffffffff
0x47c AND
0x47d DUP1
0x47e PUSH4 0x33a581d2
0x483 EQ
0x484 PUSH1 0x44
0x486 JUMPI
---
0x454: V197 = 0x0
0x456: V198 = CALLDATALOAD 0x0
0x457: V199 = 0x100000000000000000000000000000000000000000000000000000000
0x476: V200 = DIV V198 0x100000000000000000000000000000000000000000000000000000000
0x477: V201 = 0xffffffff
0x47c: V202 = AND 0xffffffff V200
0x47e: V203 = 0x33a581d2
0x483: V204 = EQ 0x33a581d2 V202
0x484: V205 = 0x44
0x486: THROWI V204
---
Entry stack: []
Stack pops: 0
Stack additions: [V202]
Exit stack: [V202]

================================

Block 0x487
[0x487:0x492]
---
Predecessors: [0x454]
Successors: [0x493]
---
0x487 JUMPDEST
0x488 PUSH1 0x0
0x48a DUP1
0x48b REVERT
0x48c JUMPDEST
0x48d CALLVALUE
0x48e DUP1
0x48f ISZERO
0x490 PUSH1 0x4f
0x492 JUMPI
---
0x487: JUMPDEST 
0x488: V206 = 0x0
0x48b: REVERT 0x0 0x0
0x48c: JUMPDEST 
0x48d: V207 = CALLVALUE
0x48f: V208 = ISZERO V207
0x490: V209 = 0x4f
0x492: THROWI V208
---
Entry stack: [V202]
Stack pops: 0
Stack additions: [V207]
Exit stack: []

================================

Block 0x493
[0x493:0x544]
---
Predecessors: [0x487]
Successors: [0x545]
---
0x493 PUSH1 0x0
0x495 DUP1
0x496 REVERT
0x497 JUMPDEST
0x498 POP
0x499 PUSH1 0x56
0x49b PUSH1 0x6c
0x49d JUMP
0x49e JUMPDEST
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 DUP1
0x4a3 DUP3
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 SWAP2
0x4aa POP
0x4ab POP
0x4ac PUSH1 0x40
0x4ae MLOAD
0x4af DUP1
0x4b0 SWAP2
0x4b1 SUB
0x4b2 SWAP1
0x4b3 RETURN
0x4b4 JUMPDEST
0x4b5 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4d6 DUP2
0x4d7 JUMP
0x4d8 STOP
0x4d9 LOG1
0x4da PUSH6 0x627a7a723058
0x4e1 SHA3
0x4e2 MISSING 0xec
0x4e3 MOD
0x4e4 MISSING 0xd5
0x4e5 PUSH13 0x11436aeb7235038fdd5a76f692
0x4f3 BLOCKHASH
0x4f4 MOD
0x4f5 MISSING 0x29
0x4f6 PUSH28 0xc196c8ce94dd814ba84a8b002960806040526004361061008e576000
0x513 CALLDATALOAD
0x514 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x532 SWAP1
0x533 DIV
0x534 PUSH4 0xffffffff
0x539 AND
0x53a DUP1
0x53b PUSH4 0x6fdde03
0x540 EQ
0x541 PUSH2 0x93
0x544 JUMPI
---
0x493: V210 = 0x0
0x496: REVERT 0x0 0x0
0x497: JUMPDEST 
0x499: V211 = 0x56
0x49b: V212 = 0x6c
0x49d: THROW 
0x49e: JUMPDEST 
0x49f: V213 = 0x40
0x4a1: V214 = M[0x40]
0x4a5: M[V214] = S0
0x4a6: V215 = 0x20
0x4a8: V216 = ADD 0x20 V214
0x4ac: V217 = 0x40
0x4ae: V218 = M[0x40]
0x4b1: V219 = SUB V216 V218
0x4b3: RETURN V218 V219
0x4b4: JUMPDEST 
0x4b5: V220 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4d7: JUMP S0
0x4d8: STOP 
0x4d9: LOG S0 S1 S2
0x4da: V221 = 0x627a7a723058
0x4e1: V222 = SHA3 0x627a7a723058 S3
0x4e2: MISSING 0xec
0x4e3: V223 = MOD S0 S1
0x4e4: MISSING 0xd5
0x4e5: V224 = 0x11436aeb7235038fdd5a76f692
0x4f3: V225 = BLOCKHASH 0x11436aeb7235038fdd5a76f692
0x4f4: V226 = MOD V225 S0
0x4f5: MISSING 0x29
0x4f6: V227 = 0xc196c8ce94dd814ba84a8b002960806040526004361061008e576000
0x513: V228 = CALLDATALOAD 0xc196c8ce94dd814ba84a8b002960806040526004361061008e576000
0x514: V229 = 0x100000000000000000000000000000000000000000000000000000000
0x533: V230 = DIV V228 0x100000000000000000000000000000000000000000000000000000000
0x534: V231 = 0xffffffff
0x539: V232 = AND 0xffffffff V230
0x53b: V233 = 0x6fdde03
0x540: V234 = EQ 0x6fdde03 V232
0x541: V235 = 0x93
0x544: THROWI V234
---
Entry stack: [V207]
Stack pops: 0
Stack additions: [0x56, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S0, V222, V223, V226, V232]
Exit stack: []

================================

Block 0x545
[0x545:0x54f]
---
Predecessors: [0x493]
Successors: [0x550]
---
0x545 DUP1
0x546 PUSH4 0x18160ddd
0x54b EQ
0x54c PUSH2 0x123
0x54f JUMPI
---
0x546: V236 = 0x18160ddd
0x54b: V237 = EQ 0x18160ddd V232
0x54c: V238 = 0x123
0x54f: THROWI V237
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x550
[0x550:0x55a]
---
Predecessors: [0x545]
Successors: [0x55b]
---
0x550 DUP1
0x551 PUSH4 0x313ce567
0x556 EQ
0x557 PUSH2 0x14e
0x55a JUMPI
---
0x551: V239 = 0x313ce567
0x556: V240 = EQ 0x313ce567 V232
0x557: V241 = 0x14e
0x55a: THROWI V240
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x55b
[0x55b:0x565]
---
Predecessors: [0x550]
Successors: [0x566]
---
0x55b DUP1
0x55c PUSH4 0x33a581d2
0x561 EQ
0x562 PUSH2 0x17f
0x565 JUMPI
---
0x55c: V242 = 0x33a581d2
0x561: V243 = EQ 0x33a581d2 V232
0x562: V244 = 0x17f
0x565: THROWI V243
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x566
[0x566:0x570]
---
Predecessors: [0x55b]
Successors: [0x571]
---
0x566 DUP1
0x567 PUSH4 0x70a08231
0x56c EQ
0x56d PUSH2 0x1aa
0x570 JUMPI
---
0x567: V245 = 0x70a08231
0x56c: V246 = EQ 0x70a08231 V232
0x56d: V247 = 0x1aa
0x570: THROWI V246
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x571
[0x571:0x57b]
---
Predecessors: [0x566]
Successors: [0x57c]
---
0x571 DUP1
0x572 PUSH4 0x95d89b41
0x577 EQ
0x578 PUSH2 0x201
0x57b JUMPI
---
0x572: V248 = 0x95d89b41
0x577: V249 = EQ 0x95d89b41 V232
0x578: V250 = 0x201
0x57b: THROWI V249
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x57c
[0x57c:0x586]
---
Predecessors: [0x571]
Successors: [0x587]
---
0x57c DUP1
0x57d PUSH4 0xa9059cbb
0x582 EQ
0x583 PUSH2 0x291
0x586 JUMPI
---
0x57d: V251 = 0xa9059cbb
0x582: V252 = EQ 0xa9059cbb V232
0x583: V253 = 0x291
0x586: THROWI V252
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x587
[0x587:0x591]
---
Predecessors: [0x57c]
Successors: [0x592]
---
0x587 DUP1
0x588 PUSH4 0xbe45fd62
0x58d EQ
0x58e PUSH2 0x2f6
0x591 JUMPI
---
0x588: V254 = 0xbe45fd62
0x58d: V255 = EQ 0xbe45fd62 V232
0x58e: V256 = 0x2f6
0x591: THROWI V255
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x592
[0x592:0x59e]
---
Predecessors: [0x587]
Successors: [0x59f]
---
0x592 JUMPDEST
0x593 PUSH1 0x0
0x595 DUP1
0x596 REVERT
0x597 JUMPDEST
0x598 CALLVALUE
0x599 DUP1
0x59a ISZERO
0x59b PUSH2 0x9f
0x59e JUMPI
---
0x592: JUMPDEST 
0x593: V257 = 0x0
0x596: REVERT 0x0 0x0
0x597: JUMPDEST 
0x598: V258 = CALLVALUE
0x59a: V259 = ISZERO V258
0x59b: V260 = 0x9f
0x59e: THROWI V259
---
Entry stack: [V232]
Stack pops: 0
Stack additions: [V258]
Exit stack: []

================================

Block 0x59f
[0x59f:0x5a2]
---
Predecessors: [0x592]
Successors: []
---
0x59f PUSH1 0x0
0x5a1 DUP1
0x5a2 REVERT
---
0x59f: V261 = 0x0
0x5a2: REVERT 0x0 0x0
---
Entry stack: [V258]
Stack pops: 0
Stack additions: []
Exit stack: [V258]

================================

Block 0x5a3
[0x5a3:0x5d0]
---
Predecessors: [0xa89]
Successors: [0x5d1]
---
0x5a3 JUMPDEST
0x5a4 POP
0x5a5 PUSH2 0xa8
0x5a8 PUSH2 0x3a1
0x5ab JUMP
0x5ac JUMPDEST
0x5ad PUSH1 0x40
0x5af MLOAD
0x5b0 DUP1
0x5b1 DUP1
0x5b2 PUSH1 0x20
0x5b4 ADD
0x5b5 DUP3
0x5b6 DUP2
0x5b7 SUB
0x5b8 DUP3
0x5b9 MSTORE
0x5ba DUP4
0x5bb DUP2
0x5bc DUP2
0x5bd MLOAD
0x5be DUP2
0x5bf MSTORE
0x5c0 PUSH1 0x20
0x5c2 ADD
0x5c3 SWAP2
0x5c4 POP
0x5c5 DUP1
0x5c6 MLOAD
0x5c7 SWAP1
0x5c8 PUSH1 0x20
0x5ca ADD
0x5cb SWAP1
0x5cc DUP1
0x5cd DUP4
0x5ce DUP4
0x5cf PUSH1 0x0
---
0x5a3: JUMPDEST 
0x5a5: V262 = 0xa8
0x5a8: V263 = 0x3a1
0x5ab: THROW 
0x5ac: JUMPDEST 
0x5ad: V264 = 0x40
0x5af: V265 = M[0x40]
0x5b2: V266 = 0x20
0x5b4: V267 = ADD 0x20 V265
0x5b7: V268 = SUB V267 V265
0x5b9: M[V265] = V268
0x5bd: V269 = M[S0]
0x5bf: M[V267] = V269
0x5c0: V270 = 0x20
0x5c2: V271 = ADD 0x20 V267
0x5c6: V272 = M[S0]
0x5c8: V273 = 0x20
0x5ca: V274 = ADD 0x20 S0
0x5cf: V275 = 0x0
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: [0x0, V274, V271, V272, V272, V274, V271, V265, V265, S0]
Exit stack: []

================================

Block 0x5d1
[0x5d1:0x5d9]
---
Predecessors: [0x5a3]
Successors: [0x5da]
---
0x5d1 JUMPDEST
0x5d2 DUP4
0x5d3 DUP2
0x5d4 LT
0x5d5 ISZERO
0x5d6 PUSH2 0xe8
0x5d9 JUMPI
---
0x5d1: JUMPDEST 
0x5d4: V276 = LT 0x0 V272
0x5d5: V277 = ISZERO V276
0x5d6: V278 = 0xe8
0x5d9: THROWI V277
---
Entry stack: [S9, V265, V265, V271, V274, V272, V272, V271, V274, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V265, V265, V271, V274, V272, V272, V271, V274, 0x0]

================================

Block 0x5da
[0x5da:0x5ff]
---
Predecessors: [0x5d1]
Successors: [0x600]
---
0x5da DUP1
0x5db DUP3
0x5dc ADD
0x5dd MLOAD
0x5de DUP2
0x5df DUP5
0x5e0 ADD
0x5e1 MSTORE
0x5e2 PUSH1 0x20
0x5e4 DUP2
0x5e5 ADD
0x5e6 SWAP1
0x5e7 POP
0x5e8 PUSH2 0xcd
0x5eb JUMP
0x5ec JUMPDEST
0x5ed POP
0x5ee POP
0x5ef POP
0x5f0 POP
0x5f1 SWAP1
0x5f2 POP
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 ADD
0x5f6 SWAP1
0x5f7 PUSH1 0x1f
0x5f9 AND
0x5fa DUP1
0x5fb ISZERO
0x5fc PUSH2 0x115
0x5ff JUMPI
---
0x5dc: V279 = ADD V274 0x0
0x5dd: V280 = M[V279]
0x5e0: V281 = ADD V271 0x0
0x5e1: M[V281] = V280
0x5e2: V282 = 0x20
0x5e5: V283 = ADD 0x0 0x20
0x5e8: V284 = 0xcd
0x5eb: THROW 
0x5ec: JUMPDEST 
0x5f5: V285 = ADD S4 S6
0x5f7: V286 = 0x1f
0x5f9: V287 = AND 0x1f S4
0x5fb: V288 = ISZERO V287
0x5fc: V289 = 0x115
0x5ff: THROWI V288
---
Entry stack: [S9, V265, V265, V271, V274, V272, V272, V271, V274, 0x0]
Stack pops: 3
Stack additions: [V287, V285]
Exit stack: []

================================

Block 0x600
[0x600:0x618]
---
Predecessors: [0x5da]
Successors: [0x619]
---
0x600 DUP1
0x601 DUP3
0x602 SUB
0x603 DUP1
0x604 MLOAD
0x605 PUSH1 0x1
0x607 DUP4
0x608 PUSH1 0x20
0x60a SUB
0x60b PUSH2 0x100
0x60e EXP
0x60f SUB
0x610 NOT
0x611 AND
0x612 DUP2
0x613 MSTORE
0x614 PUSH1 0x20
0x616 ADD
0x617 SWAP2
0x618 POP
---
0x602: V290 = SUB V285 V287
0x604: V291 = M[V290]
0x605: V292 = 0x1
0x608: V293 = 0x20
0x60a: V294 = SUB 0x20 V287
0x60b: V295 = 0x100
0x60e: V296 = EXP 0x100 V294
0x60f: V297 = SUB V296 0x1
0x610: V298 = NOT V297
0x611: V299 = AND V298 V291
0x613: M[V290] = V299
0x614: V300 = 0x20
0x616: V301 = ADD 0x20 V290
---
Entry stack: [V285, V287]
Stack pops: 2
Stack additions: [V301, S0]
Exit stack: [V301, V287]

================================

Block 0x619
[0x619:0x62e]
---
Predecessors: [0x600]
Successors: [0x62f]
---
0x619 JUMPDEST
0x61a POP
0x61b SWAP3
0x61c POP
0x61d POP
0x61e POP
0x61f PUSH1 0x40
0x621 MLOAD
0x622 DUP1
0x623 SWAP2
0x624 SUB
0x625 SWAP1
0x626 RETURN
0x627 JUMPDEST
0x628 CALLVALUE
0x629 DUP1
0x62a ISZERO
0x62b PUSH2 0x12f
0x62e JUMPI
---
0x619: JUMPDEST 
0x61f: V302 = 0x40
0x621: V303 = M[0x40]
0x624: V304 = SUB V301 V303
0x626: RETURN V303 V304
0x627: JUMPDEST 
0x628: V305 = CALLVALUE
0x62a: V306 = ISZERO V305
0x62b: V307 = 0x12f
0x62e: THROWI V306
---
Entry stack: [V301, V287]
Stack pops: 10
Stack additions: [V305]
Exit stack: []

================================

Block 0x62f
[0x62f:0x659]
---
Predecessors: [0x619]
Successors: [0x65a]
---
0x62f PUSH1 0x0
0x631 DUP1
0x632 REVERT
0x633 JUMPDEST
0x634 POP
0x635 PUSH2 0x138
0x638 PUSH2 0x443
0x63b JUMP
0x63c JUMPDEST
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 DUP3
0x642 DUP2
0x643 MSTORE
0x644 PUSH1 0x20
0x646 ADD
0x647 SWAP2
0x648 POP
0x649 POP
0x64a PUSH1 0x40
0x64c MLOAD
0x64d DUP1
0x64e SWAP2
0x64f SUB
0x650 SWAP1
0x651 RETURN
0x652 JUMPDEST
0x653 CALLVALUE
0x654 DUP1
0x655 ISZERO
0x656 PUSH2 0x15a
0x659 JUMPI
---
0x62f: V308 = 0x0
0x632: REVERT 0x0 0x0
0x633: JUMPDEST 
0x635: V309 = 0x138
0x638: V310 = 0x443
0x63b: THROW 
0x63c: JUMPDEST 
0x63d: V311 = 0x40
0x63f: V312 = M[0x40]
0x643: M[V312] = S0
0x644: V313 = 0x20
0x646: V314 = ADD 0x20 V312
0x64a: V315 = 0x40
0x64c: V316 = M[0x40]
0x64f: V317 = SUB V314 V316
0x651: RETURN V316 V317
0x652: JUMPDEST 
0x653: V318 = CALLVALUE
0x655: V319 = ISZERO V318
0x656: V320 = 0x15a
0x659: THROWI V319
---
Entry stack: [V305]
Stack pops: 0
Stack additions: [0x138, V318]
Exit stack: []

================================

Block 0x65a
[0x65a:0x68a]
---
Predecessors: [0x62f]
Successors: [0x68b]
---
0x65a PUSH1 0x0
0x65c DUP1
0x65d REVERT
0x65e JUMPDEST
0x65f POP
0x660 PUSH2 0x163
0x663 PUSH2 0x44d
0x666 JUMP
0x667 JUMPDEST
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c DUP3
0x66d PUSH1 0xff
0x66f AND
0x670 PUSH1 0xff
0x672 AND
0x673 DUP2
0x674 MSTORE
0x675 PUSH1 0x20
0x677 ADD
0x678 SWAP2
0x679 POP
0x67a POP
0x67b PUSH1 0x40
0x67d MLOAD
0x67e DUP1
0x67f SWAP2
0x680 SUB
0x681 SWAP1
0x682 RETURN
0x683 JUMPDEST
0x684 CALLVALUE
0x685 DUP1
0x686 ISZERO
0x687 PUSH2 0x18b
0x68a JUMPI
---
0x65a: V321 = 0x0
0x65d: REVERT 0x0 0x0
0x65e: JUMPDEST 
0x660: V322 = 0x163
0x663: V323 = 0x44d
0x666: THROW 
0x667: JUMPDEST 
0x668: V324 = 0x40
0x66a: V325 = M[0x40]
0x66d: V326 = 0xff
0x66f: V327 = AND 0xff S0
0x670: V328 = 0xff
0x672: V329 = AND 0xff V327
0x674: M[V325] = V329
0x675: V330 = 0x20
0x677: V331 = ADD 0x20 V325
0x67b: V332 = 0x40
0x67d: V333 = M[0x40]
0x680: V334 = SUB V331 V333
0x682: RETURN V333 V334
0x683: JUMPDEST 
0x684: V335 = CALLVALUE
0x686: V336 = ISZERO V335
0x687: V337 = 0x18b
0x68a: THROWI V336
---
Entry stack: [V318]
Stack pops: 0
Stack additions: [0x163, V335]
Exit stack: []

================================

Block 0x68b
[0x68b:0x6b5]
---
Predecessors: [0x65a]
Successors: [0x6b6]
---
0x68b PUSH1 0x0
0x68d DUP1
0x68e REVERT
0x68f JUMPDEST
0x690 POP
0x691 PUSH2 0x194
0x694 PUSH2 0x464
0x697 JUMP
0x698 JUMPDEST
0x699 PUSH1 0x40
0x69b MLOAD
0x69c DUP1
0x69d DUP3
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 SWAP2
0x6a4 POP
0x6a5 POP
0x6a6 PUSH1 0x40
0x6a8 MLOAD
0x6a9 DUP1
0x6aa SWAP2
0x6ab SUB
0x6ac SWAP1
0x6ad RETURN
0x6ae JUMPDEST
0x6af CALLVALUE
0x6b0 DUP1
0x6b1 ISZERO
0x6b2 PUSH2 0x1b6
0x6b5 JUMPI
---
0x68b: V338 = 0x0
0x68e: REVERT 0x0 0x0
0x68f: JUMPDEST 
0x691: V339 = 0x194
0x694: V340 = 0x464
0x697: THROW 
0x698: JUMPDEST 
0x699: V341 = 0x40
0x69b: V342 = M[0x40]
0x69f: M[V342] = S0
0x6a0: V343 = 0x20
0x6a2: V344 = ADD 0x20 V342
0x6a6: V345 = 0x40
0x6a8: V346 = M[0x40]
0x6ab: V347 = SUB V344 V346
0x6ad: RETURN V346 V347
0x6ae: JUMPDEST 
0x6af: V348 = CALLVALUE
0x6b1: V349 = ISZERO V348
0x6b2: V350 = 0x1b6
0x6b5: THROWI V349
---
Entry stack: [V335]
Stack pops: 0
Stack additions: [0x194, V348]
Exit stack: []

================================

Block 0x6b6
[0x6b6:0x70c]
---
Predecessors: [0x68b]
Successors: [0x70d]
---
0x6b6 PUSH1 0x0
0x6b8 DUP1
0x6b9 REVERT
0x6ba JUMPDEST
0x6bb POP
0x6bc PUSH2 0x1eb
0x6bf PUSH1 0x4
0x6c1 DUP1
0x6c2 CALLDATASIZE
0x6c3 SUB
0x6c4 DUP2
0x6c5 ADD
0x6c6 SWAP1
0x6c7 DUP1
0x6c8 DUP1
0x6c9 CALLDATALOAD
0x6ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6df AND
0x6e0 SWAP1
0x6e1 PUSH1 0x20
0x6e3 ADD
0x6e4 SWAP1
0x6e5 SWAP3
0x6e6 SWAP2
0x6e7 SWAP1
0x6e8 POP
0x6e9 POP
0x6ea POP
0x6eb PUSH2 0x488
0x6ee JUMP
0x6ef JUMPDEST
0x6f0 PUSH1 0x40
0x6f2 MLOAD
0x6f3 DUP1
0x6f4 DUP3
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 ADD
0x6fa SWAP2
0x6fb POP
0x6fc POP
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 DUP1
0x701 SWAP2
0x702 SUB
0x703 SWAP1
0x704 RETURN
0x705 JUMPDEST
0x706 CALLVALUE
0x707 DUP1
0x708 ISZERO
0x709 PUSH2 0x20d
0x70c JUMPI
---
0x6b6: V351 = 0x0
0x6b9: REVERT 0x0 0x0
0x6ba: JUMPDEST 
0x6bc: V352 = 0x1eb
0x6bf: V353 = 0x4
0x6c2: V354 = CALLDATASIZE
0x6c3: V355 = SUB V354 0x4
0x6c5: V356 = ADD 0x4 V355
0x6c9: V357 = CALLDATALOAD 0x4
0x6ca: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x6e1: V360 = 0x20
0x6e3: V361 = ADD 0x20 0x4
0x6eb: V362 = 0x488
0x6ee: THROW 
0x6ef: JUMPDEST 
0x6f0: V363 = 0x40
0x6f2: V364 = M[0x40]
0x6f6: M[V364] = S0
0x6f7: V365 = 0x20
0x6f9: V366 = ADD 0x20 V364
0x6fd: V367 = 0x40
0x6ff: V368 = M[0x40]
0x702: V369 = SUB V366 V368
0x704: RETURN V368 V369
0x705: JUMPDEST 
0x706: V370 = CALLVALUE
0x708: V371 = ISZERO V370
0x709: V372 = 0x20d
0x70c: THROWI V371
---
Entry stack: [V348]
Stack pops: 0
Stack additions: [V359, 0x1eb, V370]
Exit stack: []

================================

Block 0x70d
[0x70d:0x73e]
---
Predecessors: [0x6b6]
Successors: [0x73f]
---
0x70d PUSH1 0x0
0x70f DUP1
0x710 REVERT
0x711 JUMPDEST
0x712 POP
0x713 PUSH2 0x216
0x716 PUSH2 0x4d0
0x719 JUMP
0x71a JUMPDEST
0x71b PUSH1 0x40
0x71d MLOAD
0x71e DUP1
0x71f DUP1
0x720 PUSH1 0x20
0x722 ADD
0x723 DUP3
0x724 DUP2
0x725 SUB
0x726 DUP3
0x727 MSTORE
0x728 DUP4
0x729 DUP2
0x72a DUP2
0x72b MLOAD
0x72c DUP2
0x72d MSTORE
0x72e PUSH1 0x20
0x730 ADD
0x731 SWAP2
0x732 POP
0x733 DUP1
0x734 MLOAD
0x735 SWAP1
0x736 PUSH1 0x20
0x738 ADD
0x739 SWAP1
0x73a DUP1
0x73b DUP4
0x73c DUP4
0x73d PUSH1 0x0
---
0x70d: V373 = 0x0
0x710: REVERT 0x0 0x0
0x711: JUMPDEST 
0x713: V374 = 0x216
0x716: V375 = 0x4d0
0x719: THROW 
0x71a: JUMPDEST 
0x71b: V376 = 0x40
0x71d: V377 = M[0x40]
0x720: V378 = 0x20
0x722: V379 = ADD 0x20 V377
0x725: V380 = SUB V379 V377
0x727: M[V377] = V380
0x72b: V381 = M[S0]
0x72d: M[V379] = V381
0x72e: V382 = 0x20
0x730: V383 = ADD 0x20 V379
0x734: V384 = M[S0]
0x736: V385 = 0x20
0x738: V386 = ADD 0x20 S0
0x73d: V387 = 0x0
---
Entry stack: [V370]
Stack pops: 0
Stack additions: [0x216, 0x0, V386, V383, V384, V384, V386, V383, V377, V377, S0]
Exit stack: []

================================

Block 0x73f
[0x73f:0x747]
---
Predecessors: [0x70d]
Successors: [0x748]
---
0x73f JUMPDEST
0x740 DUP4
0x741 DUP2
0x742 LT
0x743 ISZERO
0x744 PUSH2 0x256
0x747 JUMPI
---
0x73f: JUMPDEST 
0x742: V388 = LT 0x0 V384
0x743: V389 = ISZERO V388
0x744: V390 = 0x256
0x747: THROWI V389
---
Entry stack: [S9, V377, V377, V383, V386, V384, V384, V383, V386, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V377, V377, V383, V386, V384, V384, V383, V386, 0x0]

================================

Block 0x748
[0x748:0x76d]
---
Predecessors: [0x73f]
Successors: [0x76e]
---
0x748 DUP1
0x749 DUP3
0x74a ADD
0x74b MLOAD
0x74c DUP2
0x74d DUP5
0x74e ADD
0x74f MSTORE
0x750 PUSH1 0x20
0x752 DUP2
0x753 ADD
0x754 SWAP1
0x755 POP
0x756 PUSH2 0x23b
0x759 JUMP
0x75a JUMPDEST
0x75b POP
0x75c POP
0x75d POP
0x75e POP
0x75f SWAP1
0x760 POP
0x761 SWAP1
0x762 DUP2
0x763 ADD
0x764 SWAP1
0x765 PUSH1 0x1f
0x767 AND
0x768 DUP1
0x769 ISZERO
0x76a PUSH2 0x283
0x76d JUMPI
---
0x74a: V391 = ADD V386 0x0
0x74b: V392 = M[V391]
0x74e: V393 = ADD V383 0x0
0x74f: M[V393] = V392
0x750: V394 = 0x20
0x753: V395 = ADD 0x0 0x20
0x756: V396 = 0x23b
0x759: THROW 
0x75a: JUMPDEST 
0x763: V397 = ADD S4 S6
0x765: V398 = 0x1f
0x767: V399 = AND 0x1f S4
0x769: V400 = ISZERO V399
0x76a: V401 = 0x283
0x76d: THROWI V400
---
Entry stack: [S9, V377, V377, V383, V386, V384, V384, V383, V386, 0x0]
Stack pops: 3
Stack additions: [V399, V397]
Exit stack: []

================================

Block 0x76e
[0x76e:0x786]
---
Predecessors: [0x748]
Successors: [0x787]
---
0x76e DUP1
0x76f DUP3
0x770 SUB
0x771 DUP1
0x772 MLOAD
0x773 PUSH1 0x1
0x775 DUP4
0x776 PUSH1 0x20
0x778 SUB
0x779 PUSH2 0x100
0x77c EXP
0x77d SUB
0x77e NOT
0x77f AND
0x780 DUP2
0x781 MSTORE
0x782 PUSH1 0x20
0x784 ADD
0x785 SWAP2
0x786 POP
---
0x770: V402 = SUB V397 V399
0x772: V403 = M[V402]
0x773: V404 = 0x1
0x776: V405 = 0x20
0x778: V406 = SUB 0x20 V399
0x779: V407 = 0x100
0x77c: V408 = EXP 0x100 V406
0x77d: V409 = SUB V408 0x1
0x77e: V410 = NOT V409
0x77f: V411 = AND V410 V403
0x781: M[V402] = V411
0x782: V412 = 0x20
0x784: V413 = ADD 0x20 V402
---
Entry stack: [V397, V399]
Stack pops: 2
Stack additions: [V413, S0]
Exit stack: [V413, V399]

================================

Block 0x787
[0x787:0x79c]
---
Predecessors: [0x76e]
Successors: [0x79d]
---
0x787 JUMPDEST
0x788 POP
0x789 SWAP3
0x78a POP
0x78b POP
0x78c POP
0x78d PUSH1 0x40
0x78f MLOAD
0x790 DUP1
0x791 SWAP2
0x792 SUB
0x793 SWAP1
0x794 RETURN
0x795 JUMPDEST
0x796 CALLVALUE
0x797 DUP1
0x798 ISZERO
0x799 PUSH2 0x29d
0x79c JUMPI
---
0x787: JUMPDEST 
0x78d: V414 = 0x40
0x78f: V415 = M[0x40]
0x792: V416 = SUB V413 V415
0x794: RETURN V415 V416
0x795: JUMPDEST 
0x796: V417 = CALLVALUE
0x798: V418 = ISZERO V417
0x799: V419 = 0x29d
0x79c: THROWI V418
---
Entry stack: [V413, V399]
Stack pops: 10
Stack additions: [V417]
Exit stack: []

================================

Block 0x79d
[0x79d:0x801]
---
Predecessors: [0x787]
Successors: [0x802]
---
0x79d PUSH1 0x0
0x79f DUP1
0x7a0 REVERT
0x7a1 JUMPDEST
0x7a2 POP
0x7a3 PUSH2 0x2dc
0x7a6 PUSH1 0x4
0x7a8 DUP1
0x7a9 CALLDATASIZE
0x7aa SUB
0x7ab DUP2
0x7ac ADD
0x7ad SWAP1
0x7ae DUP1
0x7af DUP1
0x7b0 CALLDATALOAD
0x7b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c6 AND
0x7c7 SWAP1
0x7c8 PUSH1 0x20
0x7ca ADD
0x7cb SWAP1
0x7cc SWAP3
0x7cd SWAP2
0x7ce SWAP1
0x7cf DUP1
0x7d0 CALLDATALOAD
0x7d1 SWAP1
0x7d2 PUSH1 0x20
0x7d4 ADD
0x7d5 SWAP1
0x7d6 SWAP3
0x7d7 SWAP2
0x7d8 SWAP1
0x7d9 POP
0x7da POP
0x7db POP
0x7dc PUSH2 0x572
0x7df JUMP
0x7e0 JUMPDEST
0x7e1 PUSH1 0x40
0x7e3 MLOAD
0x7e4 DUP1
0x7e5 DUP3
0x7e6 ISZERO
0x7e7 ISZERO
0x7e8 ISZERO
0x7e9 ISZERO
0x7ea DUP2
0x7eb MSTORE
0x7ec PUSH1 0x20
0x7ee ADD
0x7ef SWAP2
0x7f0 POP
0x7f1 POP
0x7f2 PUSH1 0x40
0x7f4 MLOAD
0x7f5 DUP1
0x7f6 SWAP2
0x7f7 SUB
0x7f8 SWAP1
0x7f9 RETURN
0x7fa JUMPDEST
0x7fb CALLVALUE
0x7fc DUP1
0x7fd ISZERO
0x7fe PUSH2 0x302
0x801 JUMPI
---
0x79d: V420 = 0x0
0x7a0: REVERT 0x0 0x0
0x7a1: JUMPDEST 
0x7a3: V421 = 0x2dc
0x7a6: V422 = 0x4
0x7a9: V423 = CALLDATASIZE
0x7aa: V424 = SUB V423 0x4
0x7ac: V425 = ADD 0x4 V424
0x7b0: V426 = CALLDATALOAD 0x4
0x7b1: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x7c8: V429 = 0x20
0x7ca: V430 = ADD 0x20 0x4
0x7d0: V431 = CALLDATALOAD 0x24
0x7d2: V432 = 0x20
0x7d4: V433 = ADD 0x20 0x24
0x7dc: V434 = 0x572
0x7df: THROW 
0x7e0: JUMPDEST 
0x7e1: V435 = 0x40
0x7e3: V436 = M[0x40]
0x7e6: V437 = ISZERO S0
0x7e7: V438 = ISZERO V437
0x7e8: V439 = ISZERO V438
0x7e9: V440 = ISZERO V439
0x7eb: M[V436] = V440
0x7ec: V441 = 0x20
0x7ee: V442 = ADD 0x20 V436
0x7f2: V443 = 0x40
0x7f4: V444 = M[0x40]
0x7f7: V445 = SUB V442 V444
0x7f9: RETURN V444 V445
0x7fa: JUMPDEST 
0x7fb: V446 = CALLVALUE
0x7fd: V447 = ISZERO V446
0x7fe: V448 = 0x302
0x801: THROWI V447
---
Entry stack: [V417]
Stack pops: 0
Stack additions: [V431, V428, 0x2dc, V446]
Exit stack: []

================================

Block 0x802
[0x802:0x8f6]
---
Predecessors: [0x79d]
Successors: [0x8f7]
---
0x802 PUSH1 0x0
0x804 DUP1
0x805 REVERT
0x806 JUMPDEST
0x807 POP
0x808 PUSH2 0x387
0x80b PUSH1 0x4
0x80d DUP1
0x80e CALLDATASIZE
0x80f SUB
0x810 DUP2
0x811 ADD
0x812 SWAP1
0x813 DUP1
0x814 DUP1
0x815 CALLDATALOAD
0x816 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82b AND
0x82c SWAP1
0x82d PUSH1 0x20
0x82f ADD
0x830 SWAP1
0x831 SWAP3
0x832 SWAP2
0x833 SWAP1
0x834 DUP1
0x835 CALLDATALOAD
0x836 SWAP1
0x837 PUSH1 0x20
0x839 ADD
0x83a SWAP1
0x83b SWAP3
0x83c SWAP2
0x83d SWAP1
0x83e DUP1
0x83f CALLDATALOAD
0x840 SWAP1
0x841 PUSH1 0x20
0x843 ADD
0x844 SWAP1
0x845 DUP3
0x846 ADD
0x847 DUP1
0x848 CALLDATALOAD
0x849 SWAP1
0x84a PUSH1 0x20
0x84c ADD
0x84d SWAP1
0x84e DUP1
0x84f DUP1
0x850 PUSH1 0x1f
0x852 ADD
0x853 PUSH1 0x20
0x855 DUP1
0x856 SWAP2
0x857 DIV
0x858 MUL
0x859 PUSH1 0x20
0x85b ADD
0x85c PUSH1 0x40
0x85e MLOAD
0x85f SWAP1
0x860 DUP2
0x861 ADD
0x862 PUSH1 0x40
0x864 MSTORE
0x865 DUP1
0x866 SWAP4
0x867 SWAP3
0x868 SWAP2
0x869 SWAP1
0x86a DUP2
0x86b DUP2
0x86c MSTORE
0x86d PUSH1 0x20
0x86f ADD
0x870 DUP4
0x871 DUP4
0x872 DUP1
0x873 DUP3
0x874 DUP5
0x875 CALLDATACOPY
0x876 DUP3
0x877 ADD
0x878 SWAP2
0x879 POP
0x87a POP
0x87b POP
0x87c POP
0x87d POP
0x87e POP
0x87f SWAP2
0x880 SWAP3
0x881 SWAP2
0x882 SWAP3
0x883 SWAP1
0x884 POP
0x885 POP
0x886 POP
0x887 PUSH2 0x5aa
0x88a JUMP
0x88b JUMPDEST
0x88c PUSH1 0x40
0x88e MLOAD
0x88f DUP1
0x890 DUP3
0x891 ISZERO
0x892 ISZERO
0x893 ISZERO
0x894 ISZERO
0x895 DUP2
0x896 MSTORE
0x897 PUSH1 0x20
0x899 ADD
0x89a SWAP2
0x89b POP
0x89c POP
0x89d PUSH1 0x40
0x89f MLOAD
0x8a0 DUP1
0x8a1 SWAP2
0x8a2 SUB
0x8a3 SWAP1
0x8a4 RETURN
0x8a5 JUMPDEST
0x8a6 PUSH1 0x60
0x8a8 PUSH1 0x2
0x8aa DUP1
0x8ab SLOAD
0x8ac PUSH1 0x1
0x8ae DUP2
0x8af PUSH1 0x1
0x8b1 AND
0x8b2 ISZERO
0x8b3 PUSH2 0x100
0x8b6 MUL
0x8b7 SUB
0x8b8 AND
0x8b9 PUSH1 0x2
0x8bb SWAP1
0x8bc DIV
0x8bd DUP1
0x8be PUSH1 0x1f
0x8c0 ADD
0x8c1 PUSH1 0x20
0x8c3 DUP1
0x8c4 SWAP2
0x8c5 DIV
0x8c6 MUL
0x8c7 PUSH1 0x20
0x8c9 ADD
0x8ca PUSH1 0x40
0x8cc MLOAD
0x8cd SWAP1
0x8ce DUP2
0x8cf ADD
0x8d0 PUSH1 0x40
0x8d2 MSTORE
0x8d3 DUP1
0x8d4 SWAP3
0x8d5 SWAP2
0x8d6 SWAP1
0x8d7 DUP2
0x8d8 DUP2
0x8d9 MSTORE
0x8da PUSH1 0x20
0x8dc ADD
0x8dd DUP3
0x8de DUP1
0x8df SLOAD
0x8e0 PUSH1 0x1
0x8e2 DUP2
0x8e3 PUSH1 0x1
0x8e5 AND
0x8e6 ISZERO
0x8e7 PUSH2 0x100
0x8ea MUL
0x8eb SUB
0x8ec AND
0x8ed PUSH1 0x2
0x8ef SWAP1
0x8f0 DIV
0x8f1 DUP1
0x8f2 ISZERO
0x8f3 PUSH2 0x439
0x8f6 JUMPI
---
0x802: V449 = 0x0
0x805: REVERT 0x0 0x0
0x806: JUMPDEST 
0x808: V450 = 0x387
0x80b: V451 = 0x4
0x80e: V452 = CALLDATASIZE
0x80f: V453 = SUB V452 0x4
0x811: V454 = ADD 0x4 V453
0x815: V455 = CALLDATALOAD 0x4
0x816: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x82b: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x82d: V458 = 0x20
0x82f: V459 = ADD 0x20 0x4
0x835: V460 = CALLDATALOAD 0x24
0x837: V461 = 0x20
0x839: V462 = ADD 0x20 0x24
0x83f: V463 = CALLDATALOAD 0x44
0x841: V464 = 0x20
0x843: V465 = ADD 0x20 0x44
0x846: V466 = ADD 0x4 V463
0x848: V467 = CALLDATALOAD V466
0x84a: V468 = 0x20
0x84c: V469 = ADD 0x20 V466
0x850: V470 = 0x1f
0x852: V471 = ADD 0x1f V467
0x853: V472 = 0x20
0x857: V473 = DIV V471 0x20
0x858: V474 = MUL V473 0x20
0x859: V475 = 0x20
0x85b: V476 = ADD 0x20 V474
0x85c: V477 = 0x40
0x85e: V478 = M[0x40]
0x861: V479 = ADD V478 V476
0x862: V480 = 0x40
0x864: M[0x40] = V479
0x86c: M[V478] = V467
0x86d: V481 = 0x20
0x86f: V482 = ADD 0x20 V478
0x875: CALLDATACOPY V482 V469 V467
0x877: V483 = ADD V482 V467
0x887: V484 = 0x5aa
0x88a: THROW 
0x88b: JUMPDEST 
0x88c: V485 = 0x40
0x88e: V486 = M[0x40]
0x891: V487 = ISZERO S0
0x892: V488 = ISZERO V487
0x893: V489 = ISZERO V488
0x894: V490 = ISZERO V489
0x896: M[V486] = V490
0x897: V491 = 0x20
0x899: V492 = ADD 0x20 V486
0x89d: V493 = 0x40
0x89f: V494 = M[0x40]
0x8a2: V495 = SUB V492 V494
0x8a4: RETURN V494 V495
0x8a5: JUMPDEST 
0x8a6: V496 = 0x60
0x8a8: V497 = 0x2
0x8ab: V498 = S[0x2]
0x8ac: V499 = 0x1
0x8af: V500 = 0x1
0x8b1: V501 = AND 0x1 V498
0x8b2: V502 = ISZERO V501
0x8b3: V503 = 0x100
0x8b6: V504 = MUL 0x100 V502
0x8b7: V505 = SUB V504 0x1
0x8b8: V506 = AND V505 V498
0x8b9: V507 = 0x2
0x8bc: V508 = DIV V506 0x2
0x8be: V509 = 0x1f
0x8c0: V510 = ADD 0x1f V508
0x8c1: V511 = 0x20
0x8c5: V512 = DIV V510 0x20
0x8c6: V513 = MUL V512 0x20
0x8c7: V514 = 0x20
0x8c9: V515 = ADD 0x20 V513
0x8ca: V516 = 0x40
0x8cc: V517 = M[0x40]
0x8cf: V518 = ADD V517 V515
0x8d0: V519 = 0x40
0x8d2: M[0x40] = V518
0x8d9: M[V517] = V508
0x8da: V520 = 0x20
0x8dc: V521 = ADD 0x20 V517
0x8df: V522 = S[0x2]
0x8e0: V523 = 0x1
0x8e3: V524 = 0x1
0x8e5: V525 = AND 0x1 V522
0x8e6: V526 = ISZERO V525
0x8e7: V527 = 0x100
0x8ea: V528 = MUL 0x100 V526
0x8eb: V529 = SUB V528 0x1
0x8ec: V530 = AND V529 V522
0x8ed: V531 = 0x2
0x8f0: V532 = DIV V530 0x2
0x8f2: V533 = ISZERO V532
0x8f3: V534 = 0x439
0x8f6: THROWI V533
---
Entry stack: [V446]
Stack pops: 0
Stack additions: [V478, V460, V457, 0x387, V532, 0x2, V521, V508, 0x2, V517, 0x60]
Exit stack: []

================================

Block 0x8f7
[0x8f7:0x8fe]
---
Predecessors: [0x802]
Successors: [0x8ff]
---
0x8f7 DUP1
0x8f8 PUSH1 0x1f
0x8fa LT
0x8fb PUSH2 0x40e
0x8fe JUMPI
---
0x8f8: V535 = 0x1f
0x8fa: V536 = LT 0x1f V532
0x8fb: V537 = 0x40e
0x8fe: THROWI V536
---
Entry stack: [0x60, V517, 0x2, V508, V521, 0x2, V532]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x60, V517, 0x2, V508, V521, 0x2, V532]

================================

Block 0x8ff
[0x8ff:0x91f]
---
Predecessors: [0x8f7]
Successors: [0x920]
---
0x8ff PUSH2 0x100
0x902 DUP1
0x903 DUP4
0x904 SLOAD
0x905 DIV
0x906 MUL
0x907 DUP4
0x908 MSTORE
0x909 SWAP2
0x90a PUSH1 0x20
0x90c ADD
0x90d SWAP2
0x90e PUSH2 0x439
0x911 JUMP
0x912 JUMPDEST
0x913 DUP3
0x914 ADD
0x915 SWAP2
0x916 SWAP1
0x917 PUSH1 0x0
0x919 MSTORE
0x91a PUSH1 0x20
0x91c PUSH1 0x0
0x91e SHA3
0x91f SWAP1
---
0x8ff: V538 = 0x100
0x904: V539 = S[0x2]
0x905: V540 = DIV V539 0x100
0x906: V541 = MUL V540 0x100
0x908: M[V521] = V541
0x90a: V542 = 0x20
0x90c: V543 = ADD 0x20 V521
0x90e: V544 = 0x439
0x911: THROW 
0x912: JUMPDEST 
0x914: V545 = ADD S2 S0
0x917: V546 = 0x0
0x919: M[0x0] = S1
0x91a: V547 = 0x20
0x91c: V548 = 0x0
0x91e: V549 = SHA3 0x0 0x20
---
Entry stack: [0x60, V517, 0x2, V508, V521, 0x2, V532]
Stack pops: 3
Stack additions: [S2, V549, V545]
Exit stack: []

================================

Block 0x920
[0x920:0x933]
---
Predecessors: [0x8ff]
Successors: [0x934]
---
0x920 JUMPDEST
0x921 DUP2
0x922 SLOAD
0x923 DUP2
0x924 MSTORE
0x925 SWAP1
0x926 PUSH1 0x1
0x928 ADD
0x929 SWAP1
0x92a PUSH1 0x20
0x92c ADD
0x92d DUP1
0x92e DUP4
0x92f GT
0x930 PUSH2 0x41c
0x933 JUMPI
---
0x920: JUMPDEST 
0x922: V550 = S[V549]
0x924: M[S0] = V550
0x926: V551 = 0x1
0x928: V552 = ADD 0x1 V549
0x92a: V553 = 0x20
0x92c: V554 = ADD 0x20 S0
0x92f: V555 = GT V545 V554
0x930: V556 = 0x41c
0x933: THROWI V555
---
Entry stack: [V545, V549, S0]
Stack pops: 3
Stack additions: [S2, V552, V554]
Exit stack: [V545, V552, V554]

================================

Block 0x934
[0x934:0x93c]
---
Predecessors: [0x920]
Successors: [0x93d]
---
0x934 DUP3
0x935 SWAP1
0x936 SUB
0x937 PUSH1 0x1f
0x939 AND
0x93a DUP3
0x93b ADD
0x93c SWAP2
---
0x936: V557 = SUB V554 V545
0x937: V558 = 0x1f
0x939: V559 = AND 0x1f V557
0x93b: V560 = ADD V545 V559
---
Entry stack: [V545, V552, V554]
Stack pops: 3
Stack additions: [V560, S1, S2]
Exit stack: [V560, V552, V545]

================================

Block 0x93d
[0x93d:0xa25]
---
Predecessors: [0x934]
Successors: [0xa26]
---
0x93d JUMPDEST
0x93e POP
0x93f POP
0x940 POP
0x941 POP
0x942 POP
0x943 SWAP1
0x944 POP
0x945 SWAP1
0x946 JUMP
0x947 JUMPDEST
0x948 PUSH1 0x0
0x94a PUSH1 0x4
0x94c SLOAD
0x94d SWAP1
0x94e POP
0x94f SWAP1
0x950 JUMP
0x951 JUMPDEST
0x952 PUSH1 0x0
0x954 PUSH1 0x3
0x956 PUSH1 0x0
0x958 SWAP1
0x959 SLOAD
0x95a SWAP1
0x95b PUSH2 0x100
0x95e EXP
0x95f SWAP1
0x960 DIV
0x961 PUSH1 0xff
0x963 AND
0x964 SWAP1
0x965 POP
0x966 SWAP1
0x967 JUMP
0x968 JUMPDEST
0x969 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x98a DUP2
0x98b JUMP
0x98c JUMPDEST
0x98d PUSH1 0x0
0x98f DUP1
0x990 PUSH1 0x0
0x992 DUP4
0x993 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a8 AND
0x9a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9be AND
0x9bf DUP2
0x9c0 MSTORE
0x9c1 PUSH1 0x20
0x9c3 ADD
0x9c4 SWAP1
0x9c5 DUP2
0x9c6 MSTORE
0x9c7 PUSH1 0x20
0x9c9 ADD
0x9ca PUSH1 0x0
0x9cc SHA3
0x9cd SLOAD
0x9ce SWAP1
0x9cf POP
0x9d0 SWAP2
0x9d1 SWAP1
0x9d2 POP
0x9d3 JUMP
0x9d4 JUMPDEST
0x9d5 PUSH1 0x60
0x9d7 PUSH1 0x1
0x9d9 DUP1
0x9da SLOAD
0x9db PUSH1 0x1
0x9dd DUP2
0x9de PUSH1 0x1
0x9e0 AND
0x9e1 ISZERO
0x9e2 PUSH2 0x100
0x9e5 MUL
0x9e6 SUB
0x9e7 AND
0x9e8 PUSH1 0x2
0x9ea SWAP1
0x9eb DIV
0x9ec DUP1
0x9ed PUSH1 0x1f
0x9ef ADD
0x9f0 PUSH1 0x20
0x9f2 DUP1
0x9f3 SWAP2
0x9f4 DIV
0x9f5 MUL
0x9f6 PUSH1 0x20
0x9f8 ADD
0x9f9 PUSH1 0x40
0x9fb MLOAD
0x9fc SWAP1
0x9fd DUP2
0x9fe ADD
0x9ff PUSH1 0x40
0xa01 MSTORE
0xa02 DUP1
0xa03 SWAP3
0xa04 SWAP2
0xa05 SWAP1
0xa06 DUP2
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b ADD
0xa0c DUP3
0xa0d DUP1
0xa0e SLOAD
0xa0f PUSH1 0x1
0xa11 DUP2
0xa12 PUSH1 0x1
0xa14 AND
0xa15 ISZERO
0xa16 PUSH2 0x100
0xa19 MUL
0xa1a SUB
0xa1b AND
0xa1c PUSH1 0x2
0xa1e SWAP1
0xa1f DIV
0xa20 DUP1
0xa21 ISZERO
0xa22 PUSH2 0x568
0xa25 JUMPI
---
0x93d: JUMPDEST 
0x946: JUMP S7
0x947: JUMPDEST 
0x948: V561 = 0x0
0x94a: V562 = 0x4
0x94c: V563 = S[0x4]
0x950: JUMP S0
0x951: JUMPDEST 
0x952: V564 = 0x0
0x954: V565 = 0x3
0x956: V566 = 0x0
0x959: V567 = S[0x3]
0x95b: V568 = 0x100
0x95e: V569 = EXP 0x100 0x0
0x960: V570 = DIV V567 0x1
0x961: V571 = 0xff
0x963: V572 = AND 0xff V570
0x967: JUMP S0
0x968: JUMPDEST 
0x969: V573 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x98b: JUMP S0
0x98c: JUMPDEST 
0x98d: V574 = 0x0
0x990: V575 = 0x0
0x993: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a8: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x9a9: V578 = 0xffffffffffffffffffffffffffffffffffffffff
0x9be: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x9c0: M[0x0] = V579
0x9c1: V580 = 0x20
0x9c3: V581 = ADD 0x20 0x0
0x9c6: M[0x20] = 0x0
0x9c7: V582 = 0x20
0x9c9: V583 = ADD 0x20 0x20
0x9ca: V584 = 0x0
0x9cc: V585 = SHA3 0x0 0x40
0x9cd: V586 = S[V585]
0x9d3: JUMP S1
0x9d4: JUMPDEST 
0x9d5: V587 = 0x60
0x9d7: V588 = 0x1
0x9da: V589 = S[0x1]
0x9db: V590 = 0x1
0x9de: V591 = 0x1
0x9e0: V592 = AND 0x1 V589
0x9e1: V593 = ISZERO V592
0x9e2: V594 = 0x100
0x9e5: V595 = MUL 0x100 V593
0x9e6: V596 = SUB V595 0x1
0x9e7: V597 = AND V596 V589
0x9e8: V598 = 0x2
0x9eb: V599 = DIV V597 0x2
0x9ed: V600 = 0x1f
0x9ef: V601 = ADD 0x1f V599
0x9f0: V602 = 0x20
0x9f4: V603 = DIV V601 0x20
0x9f5: V604 = MUL V603 0x20
0x9f6: V605 = 0x20
0x9f8: V606 = ADD 0x20 V604
0x9f9: V607 = 0x40
0x9fb: V608 = M[0x40]
0x9fe: V609 = ADD V608 V606
0x9ff: V610 = 0x40
0xa01: M[0x40] = V609
0xa08: M[V608] = V599
0xa09: V611 = 0x20
0xa0b: V612 = ADD 0x20 V608
0xa0e: V613 = S[0x1]
0xa0f: V614 = 0x1
0xa12: V615 = 0x1
0xa14: V616 = AND 0x1 V613
0xa15: V617 = ISZERO V616
0xa16: V618 = 0x100
0xa19: V619 = MUL 0x100 V617
0xa1a: V620 = SUB V619 0x1
0xa1b: V621 = AND V620 V613
0xa1c: V622 = 0x2
0xa1f: V623 = DIV V621 0x2
0xa21: V624 = ISZERO V623
0xa22: V625 = 0x568
0xa25: THROWI V624
---
Entry stack: [V560, V552, V545]
Stack pops: 223
Stack additions: [V623, 0x1, V612, V599, 0x1, V608, 0x60]
Exit stack: []

================================

Block 0xa26
[0xa26:0xa2d]
---
Predecessors: [0x93d]
Successors: [0xa2e]
---
0xa26 DUP1
0xa27 PUSH1 0x1f
0xa29 LT
0xa2a PUSH2 0x53d
0xa2d JUMPI
---
0xa27: V626 = 0x1f
0xa29: V627 = LT 0x1f V623
0xa2a: V628 = 0x53d
0xa2d: THROWI V627
---
Entry stack: [0x60, V608, 0x1, V599, V612, 0x1, V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x60, V608, 0x1, V599, V612, 0x1, V623]

================================

Block 0xa2e
[0xa2e:0xa4e]
---
Predecessors: [0xa26]
Successors: [0xa4f]
---
0xa2e PUSH2 0x100
0xa31 DUP1
0xa32 DUP4
0xa33 SLOAD
0xa34 DIV
0xa35 MUL
0xa36 DUP4
0xa37 MSTORE
0xa38 SWAP2
0xa39 PUSH1 0x20
0xa3b ADD
0xa3c SWAP2
0xa3d PUSH2 0x568
0xa40 JUMP
0xa41 JUMPDEST
0xa42 DUP3
0xa43 ADD
0xa44 SWAP2
0xa45 SWAP1
0xa46 PUSH1 0x0
0xa48 MSTORE
0xa49 PUSH1 0x20
0xa4b PUSH1 0x0
0xa4d SHA3
0xa4e SWAP1
---
0xa2e: V629 = 0x100
0xa33: V630 = S[0x1]
0xa34: V631 = DIV V630 0x100
0xa35: V632 = MUL V631 0x100
0xa37: M[V612] = V632
0xa39: V633 = 0x20
0xa3b: V634 = ADD 0x20 V612
0xa3d: V635 = 0x568
0xa40: THROW 
0xa41: JUMPDEST 
0xa43: V636 = ADD S2 S0
0xa46: V637 = 0x0
0xa48: M[0x0] = S1
0xa49: V638 = 0x20
0xa4b: V639 = 0x0
0xa4d: V640 = SHA3 0x0 0x20
---
Entry stack: [0x60, V608, 0x1, V599, V612, 0x1, V623]
Stack pops: 3
Stack additions: [S2, V640, V636]
Exit stack: []

================================

Block 0xa4f
[0xa4f:0xa62]
---
Predecessors: [0xa2e, 0xf13]
Successors: [0xa63]
---
0xa4f JUMPDEST
0xa50 DUP2
0xa51 SLOAD
0xa52 DUP2
0xa53 MSTORE
0xa54 SWAP1
0xa55 PUSH1 0x1
0xa57 ADD
0xa58 SWAP1
0xa59 PUSH1 0x20
0xa5b ADD
0xa5c DUP1
0xa5d DUP4
0xa5e GT
0xa5f PUSH2 0x54b
0xa62 JUMPI
---
0xa4f: JUMPDEST 
0xa51: V641 = S[V640]
0xa53: M[0x0] = V641
0xa55: V642 = 0x1
0xa57: V643 = ADD 0x1 V640
0xa59: V644 = 0x20
0xa5b: V645 = ADD 0x20 0x0
0xa5e: V646 = GT V636 V645
0xa5f: V647 = 0x54b
0xa62: THROWI V646
---
Entry stack: [V636, V640, 0x0]
Stack pops: 3
Stack additions: [S2, V643, V645]
Exit stack: [V636, V643, V645]

================================

Block 0xa63
[0xa63:0xa6b]
---
Predecessors: [0xa4f]
Successors: [0xa6c]
---
0xa63 DUP3
0xa64 SWAP1
0xa65 SUB
0xa66 PUSH1 0x1f
0xa68 AND
0xa69 DUP3
0xa6a ADD
0xa6b SWAP2
---
0xa65: V648 = SUB V645 V636
0xa66: V649 = 0x1f
0xa68: V650 = AND 0x1f V648
0xa6a: V651 = ADD V636 V650
---
Entry stack: [V636, V643, V645]
Stack pops: 3
Stack additions: [V651, S1, S2]
Exit stack: [V651, V643, V636]

================================

Block 0xa6c
[0xa6c:0xa88]
---
Predecessors: [0xa63]
Successors: [0xa89]
---
0xa6c JUMPDEST
0xa6d POP
0xa6e POP
0xa6f POP
0xa70 POP
0xa71 POP
0xa72 SWAP1
0xa73 POP
0xa74 SWAP1
0xa75 JUMP
0xa76 JUMPDEST
0xa77 PUSH1 0x0
0xa79 PUSH1 0x60
0xa7b PUSH2 0x57f
0xa7e DUP5
0xa7f PUSH2 0x5e0
0xa82 JUMP
0xa83 JUMPDEST
0xa84 ISZERO
0xa85 PUSH2 0x596
0xa88 JUMPI
---
0xa6c: JUMPDEST 
0xa75: JUMP S7
0xa76: JUMPDEST 
0xa77: V652 = 0x0
0xa79: V653 = 0x60
0xa7b: V654 = 0x57f
0xa7f: V655 = 0x5e0
0xa82: THROW 
0xa83: JUMPDEST 
0xa84: V656 = ISZERO S0
0xa85: V657 = 0x596
0xa88: THROWI V656
---
Entry stack: [V651, S1, V636]
Stack pops: 24
Stack additions: []
Exit stack: []

================================

Block 0xa89
[0xa89:0xa99]
---
Predecessors: [0xa6c]
Successors: [0x5a3]
---
0xa89 PUSH2 0x58f
0xa8c DUP5
0xa8d DUP5
0xa8e DUP4
0xa8f PUSH2 0x617
0xa92 JUMP
0xa93 JUMPDEST
0xa94 SWAP2
0xa95 POP
0xa96 PUSH2 0x5a3
0xa99 JUMP
---
0xa89: V658 = 0x58f
0xa8f: V659 = 0x617
0xa92: THROW 
0xa93: JUMPDEST 
0xa96: V660 = 0x5a3
0xa99: JUMP 0x5a3
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, S0]
Exit stack: []

================================

Block 0xa9a
[0xa9a:0xaa6]
---
Predecessors: []
Successors: [0xaa7]
---
0xa9a JUMPDEST
0xa9b PUSH2 0x5a0
0xa9e DUP5
0xa9f DUP5
0xaa0 PUSH2 0x8d6
0xaa3 JUMP
0xaa4 JUMPDEST
0xaa5 SWAP2
0xaa6 POP
---
0xa9a: JUMPDEST 
0xa9b: V661 = 0x5a0
0xaa0: V662 = 0x8d6
0xaa3: THROW 
0xaa4: JUMPDEST 
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S1, S0]
Exit stack: []

================================

Block 0xaa7
[0xaa7:0xabe]
---
Predecessors: [0xa9a]
Successors: [0xabf]
---
0xaa7 JUMPDEST
0xaa8 POP
0xaa9 SWAP3
0xaaa SWAP2
0xaab POP
0xaac POP
0xaad JUMP
0xaae JUMPDEST
0xaaf PUSH1 0x0
0xab1 PUSH2 0x5b5
0xab4 DUP5
0xab5 PUSH2 0x5e0
0xab8 JUMP
0xab9 JUMPDEST
0xaba ISZERO
0xabb PUSH2 0x5cc
0xabe JUMPI
---
0xaa7: JUMPDEST 
0xaad: JUMP S4
0xaae: JUMPDEST 
0xaaf: V663 = 0x0
0xab1: V664 = 0x5b5
0xab5: V665 = 0x5e0
0xab8: THROW 
0xab9: JUMPDEST 
0xaba: V666 = ISZERO S0
0xabb: V667 = 0x5cc
0xabe: THROWI V666
---
Entry stack: [S1, S0]
Stack pops: 12
Stack additions: []
Exit stack: []

================================

Block 0xabf
[0xabf:0xadc]
---
Predecessors: [0xaa7]
Successors: [0xadd]
---
0xabf PUSH2 0x5c5
0xac2 DUP5
0xac3 DUP5
0xac4 DUP5
0xac5 PUSH2 0x617
0xac8 JUMP
0xac9 JUMPDEST
0xaca SWAP1
0xacb POP
0xacc PUSH2 0x5d9
0xacf JUMP
0xad0 JUMPDEST
0xad1 PUSH2 0x5d6
0xad4 DUP5
0xad5 DUP5
0xad6 PUSH2 0x8d6
0xad9 JUMP
0xada JUMPDEST
0xadb SWAP1
0xadc POP
---
0xabf: V668 = 0x5c5
0xac5: V669 = 0x617
0xac8: THROW 
0xac9: JUMPDEST 
0xacc: V670 = 0x5d9
0xacf: THROW 
0xad0: JUMPDEST 
0xad1: V671 = 0x5d6
0xad6: V672 = 0x8d6
0xad9: THROW 
0xada: JUMPDEST 
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S3, 0x5d6, S0]
Exit stack: []

================================

Block 0xadd
[0xadd:0xaf9]
---
Predecessors: [0xabf]
Successors: [0xafa]
---
0xadd JUMPDEST
0xade SWAP4
0xadf SWAP3
0xae0 POP
0xae1 POP
0xae2 POP
0xae3 JUMP
0xae4 JUMPDEST
0xae5 PUSH1 0x0
0xae7 DUP1
0xae8 PUSH1 0x0
0xaea PUSH2 0x5ee
0xaed DUP5
0xaee PUSH2 0x488
0xaf1 JUMP
0xaf2 JUMPDEST
0xaf3 LT
0xaf4 ISZERO
0xaf5 ISZERO
0xaf6 PUSH2 0x5fa
0xaf9 JUMPI
---
0xadd: JUMPDEST 
0xae3: JUMP S4
0xae4: JUMPDEST 
0xae5: V673 = 0x0
0xae8: V674 = 0x0
0xaea: V675 = 0x5ee
0xaee: V676 = 0x488
0xaf1: THROW 
0xaf2: JUMPDEST 
0xaf3: V677 = LT S0 S1
0xaf4: V678 = ISZERO V677
0xaf5: V679 = ISZERO V678
0xaf6: V680 = 0x5fa
0xaf9: THROWI V679
---
Entry stack: [S0]
Stack pops: 12
Stack additions: []
Exit stack: []

================================

Block 0xafa
[0xafa:0xafd]
---
Predecessors: [0xadd]
Successors: [0xafe]
---
0xafa DUP3
0xafb EXTCODESIZE
0xafc SWAP1
0xafd POP
---
0xafb: V681 = EXTCODESIZE S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, V681]
Exit stack: [S2, S1, V681]

================================

Block 0xafe
[0xafe:0xb07]
---
Predecessors: [0xafa]
Successors: [0xb08]
---
0xafe JUMPDEST
0xaff PUSH1 0x0
0xb01 DUP2
0xb02 GT
0xb03 ISZERO
0xb04 PUSH2 0x60c
0xb07 JUMPI
---
0xafe: JUMPDEST 
0xaff: V682 = 0x0
0xb02: V683 = GT V681 0x0
0xb03: V684 = ISZERO V683
0xb04: V685 = 0x60c
0xb07: THROWI V684
---
Entry stack: [S2, S1, V681]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S2, S1, V681]

================================

Block 0xb08
[0xb08:0xb14]
---
Predecessors: [0xafe]
Successors: [0xb15]
---
0xb08 PUSH1 0x1
0xb0a SWAP2
0xb0b POP
0xb0c PUSH2 0x611
0xb0f JUMP
0xb10 JUMPDEST
0xb11 PUSH1 0x0
0xb13 SWAP2
0xb14 POP
---
0xb08: V686 = 0x1
0xb0c: V687 = 0x611
0xb0f: THROW 
0xb10: JUMPDEST 
0xb11: V688 = 0x0
---
Entry stack: [S2, S1, V681]
Stack pops: 2
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0xb15
[0xb15:0xb2e]
---
Predecessors: [0xb08]
Successors: [0xb2f]
---
0xb15 JUMPDEST
0xb16 POP
0xb17 SWAP2
0xb18 SWAP1
0xb19 POP
0xb1a JUMP
0xb1b JUMPDEST
0xb1c PUSH1 0x0
0xb1e DUP1
0xb1f DUP4
0xb20 PUSH2 0x624
0xb23 CALLER
0xb24 PUSH2 0x488
0xb27 JUMP
0xb28 JUMPDEST
0xb29 LT
0xb2a ISZERO
0xb2b PUSH2 0x62f
0xb2e JUMPI
---
0xb15: JUMPDEST 
0xb1a: JUMP S3
0xb1b: JUMPDEST 
0xb1c: V689 = 0x0
0xb20: V690 = 0x624
0xb23: V691 = CALLER
0xb24: V692 = 0x488
0xb27: THROW 
0xb28: JUMPDEST 
0xb29: V693 = LT S0 S1
0xb2a: V694 = ISZERO V693
0xb2b: V695 = 0x62f
0xb2e: THROWI V694
---
Entry stack: [0x0, S0]
Stack pops: 7
Stack additions: []
Exit stack: []

================================

Block 0xb2f
[0xb2f:0xc84]
---
Predecessors: [0xb15]
Successors: [0xc85]
---
0xb2f PUSH1 0x0
0xb31 DUP1
0xb32 REVERT
0xb33 JUMPDEST
0xb34 PUSH2 0x641
0xb37 PUSH2 0x63b
0xb3a CALLER
0xb3b PUSH2 0x488
0xb3e JUMP
0xb3f JUMPDEST
0xb40 DUP6
0xb41 PUSH2 0xa04
0xb44 JUMP
0xb45 JUMPDEST
0xb46 PUSH1 0x0
0xb48 DUP1
0xb49 CALLER
0xb4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5f AND
0xb60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb75 AND
0xb76 DUP2
0xb77 MSTORE
0xb78 PUSH1 0x20
0xb7a ADD
0xb7b SWAP1
0xb7c DUP2
0xb7d MSTORE
0xb7e PUSH1 0x20
0xb80 ADD
0xb81 PUSH1 0x0
0xb83 SHA3
0xb84 DUP2
0xb85 SWAP1
0xb86 SSTORE
0xb87 POP
0xb88 PUSH2 0x695
0xb8b PUSH2 0x68f
0xb8e DUP7
0xb8f PUSH2 0x488
0xb92 JUMP
0xb93 JUMPDEST
0xb94 DUP6
0xb95 PUSH2 0xa1e
0xb98 JUMP
0xb99 JUMPDEST
0xb9a PUSH1 0x0
0xb9c DUP1
0xb9d DUP8
0xb9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb3 AND
0xbb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc9 AND
0xbca DUP2
0xbcb MSTORE
0xbcc PUSH1 0x20
0xbce ADD
0xbcf SWAP1
0xbd0 DUP2
0xbd1 MSTORE
0xbd2 PUSH1 0x20
0xbd4 ADD
0xbd5 PUSH1 0x0
0xbd7 SHA3
0xbd8 DUP2
0xbd9 SWAP1
0xbda SSTORE
0xbdb POP
0xbdc DUP5
0xbdd SWAP1
0xbde POP
0xbdf DUP1
0xbe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf5 AND
0xbf6 PUSH4 0xc0ee0b8a
0xbfb CALLER
0xbfc DUP7
0xbfd DUP7
0xbfe PUSH1 0x40
0xc00 MLOAD
0xc01 DUP5
0xc02 PUSH4 0xffffffff
0xc07 AND
0xc08 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc26 MUL
0xc27 DUP2
0xc28 MSTORE
0xc29 PUSH1 0x4
0xc2b ADD
0xc2c DUP1
0xc2d DUP5
0xc2e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc43 AND
0xc44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc59 AND
0xc5a DUP2
0xc5b MSTORE
0xc5c PUSH1 0x20
0xc5e ADD
0xc5f DUP4
0xc60 DUP2
0xc61 MSTORE
0xc62 PUSH1 0x20
0xc64 ADD
0xc65 DUP1
0xc66 PUSH1 0x20
0xc68 ADD
0xc69 DUP3
0xc6a DUP2
0xc6b SUB
0xc6c DUP3
0xc6d MSTORE
0xc6e DUP4
0xc6f DUP2
0xc70 DUP2
0xc71 MLOAD
0xc72 DUP2
0xc73 MSTORE
0xc74 PUSH1 0x20
0xc76 ADD
0xc77 SWAP2
0xc78 POP
0xc79 DUP1
0xc7a MLOAD
0xc7b SWAP1
0xc7c PUSH1 0x20
0xc7e ADD
0xc7f SWAP1
0xc80 DUP1
0xc81 DUP4
0xc82 DUP4
0xc83 PUSH1 0x0
---
0xb2f: V696 = 0x0
0xb32: REVERT 0x0 0x0
0xb33: JUMPDEST 
0xb34: V697 = 0x641
0xb37: V698 = 0x63b
0xb3a: V699 = CALLER
0xb3b: V700 = 0x488
0xb3e: THROW 
0xb3f: JUMPDEST 
0xb41: V701 = 0xa04
0xb44: THROW 
0xb45: JUMPDEST 
0xb46: V702 = 0x0
0xb49: V703 = CALLER
0xb4a: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5f: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xb60: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xb75: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0xb77: M[0x0] = V707
0xb78: V708 = 0x20
0xb7a: V709 = ADD 0x20 0x0
0xb7d: M[0x20] = 0x0
0xb7e: V710 = 0x20
0xb80: V711 = ADD 0x20 0x20
0xb81: V712 = 0x0
0xb83: V713 = SHA3 0x0 0x40
0xb86: S[V713] = S0
0xb88: V714 = 0x695
0xb8b: V715 = 0x68f
0xb8f: V716 = 0x488
0xb92: THROW 
0xb93: JUMPDEST 
0xb95: V717 = 0xa1e
0xb98: THROW 
0xb99: JUMPDEST 
0xb9a: V718 = 0x0
0xb9e: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb3: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xbb4: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc9: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0xbcb: M[0x0] = V722
0xbcc: V723 = 0x20
0xbce: V724 = ADD 0x20 0x0
0xbd1: M[0x20] = 0x0
0xbd2: V725 = 0x20
0xbd4: V726 = ADD 0x20 0x20
0xbd5: V727 = 0x0
0xbd7: V728 = SHA3 0x0 0x40
0xbda: S[V728] = S0
0xbe0: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf5: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xbf6: V731 = 0xc0ee0b8a
0xbfb: V732 = CALLER
0xbfe: V733 = 0x40
0xc00: V734 = M[0x40]
0xc02: V735 = 0xffffffff
0xc07: V736 = AND 0xffffffff 0xc0ee0b8a
0xc08: V737 = 0x100000000000000000000000000000000000000000000000000000000
0xc26: V738 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0xc28: M[V734] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0xc29: V739 = 0x4
0xc2b: V740 = ADD 0x4 V734
0xc2e: V741 = 0xffffffffffffffffffffffffffffffffffffffff
0xc43: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0xc44: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0xc59: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0xc5b: M[V740] = V744
0xc5c: V745 = 0x20
0xc5e: V746 = ADD 0x20 V740
0xc61: M[V746] = S4
0xc62: V747 = 0x20
0xc64: V748 = ADD 0x20 V746
0xc66: V749 = 0x20
0xc68: V750 = ADD 0x20 V748
0xc6b: V751 = SUB V750 V740
0xc6d: M[V748] = V751
0xc71: V752 = M[S3]
0xc73: M[V750] = V752
0xc74: V753 = 0x20
0xc76: V754 = ADD 0x20 V750
0xc7a: V755 = M[S3]
0xc7c: V756 = 0x20
0xc7e: V757 = ADD 0x20 S3
0xc83: V758 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V699, 0x63b, 0x641, S5, S0, S1, S2, S3, S4, S5, S5, 0x68f, 0x695, S1, S2, S3, S4, S5, S5, S0, S1, S2, S3, S4, S5, 0x0, V757, V754, V755, V755, V757, V754, V748, V740, S3, S4, V732, 0xc0ee0b8a, V730, S5, S2, S3, S4, S5]
Exit stack: []

================================

Block 0xc85
[0xc85:0xc8d]
---
Predecessors: [0xb2f]
Successors: [0xc8e]
---
0xc85 JUMPDEST
0xc86 DUP4
0xc87 DUP2
0xc88 LT
0xc89 ISZERO
0xc8a PUSH2 0x79c
0xc8d JUMPI
---
0xc85: JUMPDEST 
0xc88: V759 = LT 0x0 V755
0xc89: V760 = ISZERO V759
0xc8a: V761 = 0x79c
0xc8d: THROWI V760
---
Entry stack: [S18, S17, S16, S15, S14, V730, 0xc0ee0b8a, V732, S10, S9, V740, V748, V754, V757, V755, V755, V754, V757, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S18, S17, S16, S15, S14, V730, 0xc0ee0b8a, V732, S10, S9, V740, V748, V754, V757, V755, V755, V754, V757, 0x0]

================================

Block 0xc8e
[0xc8e:0xcb3]
---
Predecessors: [0xc85]
Successors: [0xcb4]
---
0xc8e DUP1
0xc8f DUP3
0xc90 ADD
0xc91 MLOAD
0xc92 DUP2
0xc93 DUP5
0xc94 ADD
0xc95 MSTORE
0xc96 PUSH1 0x20
0xc98 DUP2
0xc99 ADD
0xc9a SWAP1
0xc9b POP
0xc9c PUSH2 0x781
0xc9f JUMP
0xca0 JUMPDEST
0xca1 POP
0xca2 POP
0xca3 POP
0xca4 POP
0xca5 SWAP1
0xca6 POP
0xca7 SWAP1
0xca8 DUP2
0xca9 ADD
0xcaa SWAP1
0xcab PUSH1 0x1f
0xcad AND
0xcae DUP1
0xcaf ISZERO
0xcb0 PUSH2 0x7c9
0xcb3 JUMPI
---
0xc90: V762 = ADD V757 0x0
0xc91: V763 = M[V762]
0xc94: V764 = ADD V754 0x0
0xc95: M[V764] = V763
0xc96: V765 = 0x20
0xc99: V766 = ADD 0x0 0x20
0xc9c: V767 = 0x781
0xc9f: THROW 
0xca0: JUMPDEST 
0xca9: V768 = ADD S4 S6
0xcab: V769 = 0x1f
0xcad: V770 = AND 0x1f S4
0xcaf: V771 = ISZERO V770
0xcb0: V772 = 0x7c9
0xcb3: THROWI V771
---
Entry stack: [S18, S17, S16, S15, S14, V730, 0xc0ee0b8a, V732, S10, S9, V740, V748, V754, V757, V755, V755, V754, V757, 0x0]
Stack pops: 3
Stack additions: [V770, V768]
Exit stack: []

================================

Block 0xcb4
[0xcb4:0xccc]
---
Predecessors: [0xc8e]
Successors: [0xccd]
---
0xcb4 DUP1
0xcb5 DUP3
0xcb6 SUB
0xcb7 DUP1
0xcb8 MLOAD
0xcb9 PUSH1 0x1
0xcbb DUP4
0xcbc PUSH1 0x20
0xcbe SUB
0xcbf PUSH2 0x100
0xcc2 EXP
0xcc3 SUB
0xcc4 NOT
0xcc5 AND
0xcc6 DUP2
0xcc7 MSTORE
0xcc8 PUSH1 0x20
0xcca ADD
0xccb SWAP2
0xccc POP
---
0xcb6: V773 = SUB V768 V770
0xcb8: V774 = M[V773]
0xcb9: V775 = 0x1
0xcbc: V776 = 0x20
0xcbe: V777 = SUB 0x20 V770
0xcbf: V778 = 0x100
0xcc2: V779 = EXP 0x100 V777
0xcc3: V780 = SUB V779 0x1
0xcc4: V781 = NOT V780
0xcc5: V782 = AND V781 V774
0xcc7: M[V773] = V782
0xcc8: V783 = 0x20
0xcca: V784 = ADD 0x20 V773
---
Entry stack: [V768, V770]
Stack pops: 2
Stack additions: [V784, S0]
Exit stack: [V784, V770]

================================

Block 0xccd
[0xccd:0xce9]
---
Predecessors: [0xcb4]
Successors: [0xcea]
---
0xccd JUMPDEST
0xcce POP
0xccf SWAP5
0xcd0 POP
0xcd1 POP
0xcd2 POP
0xcd3 POP
0xcd4 POP
0xcd5 PUSH1 0x0
0xcd7 PUSH1 0x40
0xcd9 MLOAD
0xcda DUP1
0xcdb DUP4
0xcdc SUB
0xcdd DUP2
0xcde PUSH1 0x0
0xce0 DUP8
0xce1 DUP1
0xce2 EXTCODESIZE
0xce3 ISZERO
0xce4 DUP1
0xce5 ISZERO
0xce6 PUSH2 0x7ea
0xce9 JUMPI
---
0xccd: JUMPDEST 
0xcd5: V785 = 0x0
0xcd7: V786 = 0x40
0xcd9: V787 = M[0x40]
0xcdc: V788 = SUB V784 V787
0xcde: V789 = 0x0
0xce2: V790 = EXTCODESIZE S8
0xce3: V791 = ISZERO V790
0xce5: V792 = ISZERO V791
0xce6: V793 = 0x7ea
0xce9: THROWI V792
---
Entry stack: [V784, V770]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V787, V788, V787, 0x0, S8, V791]
Exit stack: [S6, S5, V784, 0x0, V787, V788, V787, 0x0, S6, V791]

================================

Block 0xcea
[0xcea:0xcf8]
---
Predecessors: [0xccd]
Successors: [0xcf9]
---
0xcea PUSH1 0x0
0xcec DUP1
0xced REVERT
0xcee JUMPDEST
0xcef POP
0xcf0 GAS
0xcf1 CALL
0xcf2 ISZERO
0xcf3 DUP1
0xcf4 ISZERO
0xcf5 PUSH2 0x7fe
0xcf8 JUMPI
---
0xcea: V794 = 0x0
0xced: REVERT 0x0 0x0
0xcee: JUMPDEST 
0xcf0: V795 = GAS
0xcf1: V796 = CALL V795 S1 S2 S3 S4 S5 S6
0xcf2: V797 = ISZERO V796
0xcf4: V798 = ISZERO V797
0xcf5: V799 = 0x7fe
0xcf8: THROWI V798
---
Entry stack: [S9, S8, V784, 0x0, V787, V788, V787, 0x0, S1, V791]
Stack pops: 0
Stack additions: [V797]
Exit stack: []

================================

Block 0xcf9
[0xcf9:0xd16]
---
Predecessors: [0xcea]
Successors: [0xd17]
---
0xcf9 RETURNDATASIZE
0xcfa PUSH1 0x0
0xcfc DUP1
0xcfd RETURNDATACOPY
0xcfe RETURNDATASIZE
0xcff PUSH1 0x0
0xd01 REVERT
0xd02 JUMPDEST
0xd03 POP
0xd04 POP
0xd05 POP
0xd06 POP
0xd07 DUP3
0xd08 PUSH1 0x40
0xd0a MLOAD
0xd0b DUP1
0xd0c DUP3
0xd0d DUP1
0xd0e MLOAD
0xd0f SWAP1
0xd10 PUSH1 0x20
0xd12 ADD
0xd13 SWAP1
0xd14 DUP1
0xd15 DUP4
0xd16 DUP4
---
0xcf9: V800 = RETURNDATASIZE
0xcfa: V801 = 0x0
0xcfd: RETURNDATACOPY 0x0 0x0 V800
0xcfe: V802 = RETURNDATASIZE
0xcff: V803 = 0x0
0xd01: REVERT 0x0 V802
0xd02: JUMPDEST 
0xd08: V804 = 0x40
0xd0a: V805 = M[0x40]
0xd0e: V806 = M[S6]
0xd10: V807 = 0x20
0xd12: V808 = ADD 0x20 S6
---
Entry stack: [V797]
Stack pops: 0
Stack additions: [V808, V805, V806, V806, V808, V805, V805, S6, S4, S5, S6]
Exit stack: []

================================

Block 0xd17
[0xd17:0xd21]
---
Predecessors: [0xcf9]
Successors: [0xd22]
---
0xd17 JUMPDEST
0xd18 PUSH1 0x20
0xd1a DUP4
0xd1b LT
0xd1c ISZERO
0xd1d ISZERO
0xd1e PUSH2 0x838
0xd21 JUMPI
---
0xd17: JUMPDEST 
0xd18: V809 = 0x20
0xd1b: V810 = LT V806 0x20
0xd1c: V811 = ISZERO V810
0xd1d: V812 = ISZERO V811
0xd1e: V813 = 0x838
0xd21: THROWI V812
---
Entry stack: [S10, S9, S8, S7, V805, V805, V808, V806, V806, V805, V808]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S10, S9, S8, S7, V805, V805, V808, V806, V806, V805, V808]

================================

Block 0xd22
[0xd22:0xdec]
---
Predecessors: [0xd17]
Successors: [0xded]
---
0xd22 DUP1
0xd23 MLOAD
0xd24 DUP3
0xd25 MSTORE
0xd26 PUSH1 0x20
0xd28 DUP3
0xd29 ADD
0xd2a SWAP2
0xd2b POP
0xd2c PUSH1 0x20
0xd2e DUP2
0xd2f ADD
0xd30 SWAP1
0xd31 POP
0xd32 PUSH1 0x20
0xd34 DUP4
0xd35 SUB
0xd36 SWAP3
0xd37 POP
0xd38 PUSH2 0x813
0xd3b JUMP
0xd3c JUMPDEST
0xd3d PUSH1 0x1
0xd3f DUP4
0xd40 PUSH1 0x20
0xd42 SUB
0xd43 PUSH2 0x100
0xd46 EXP
0xd47 SUB
0xd48 DUP1
0xd49 NOT
0xd4a DUP3
0xd4b MLOAD
0xd4c AND
0xd4d DUP2
0xd4e DUP5
0xd4f MLOAD
0xd50 AND
0xd51 DUP1
0xd52 DUP3
0xd53 OR
0xd54 DUP6
0xd55 MSTORE
0xd56 POP
0xd57 POP
0xd58 POP
0xd59 POP
0xd5a POP
0xd5b POP
0xd5c SWAP1
0xd5d POP
0xd5e ADD
0xd5f SWAP2
0xd60 POP
0xd61 POP
0xd62 PUSH1 0x40
0xd64 MLOAD
0xd65 DUP1
0xd66 SWAP2
0xd67 SUB
0xd68 SWAP1
0xd69 SHA3
0xd6a DUP6
0xd6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd80 AND
0xd81 CALLER
0xd82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd97 AND
0xd98 PUSH32 0x5998a692901c98bc4a7dd88a9aee1eb36464008fd7c594a1b5a70d41e664bf1a
0xdb9 DUP8
0xdba PUSH1 0x40
0xdbc MLOAD
0xdbd DUP1
0xdbe DUP3
0xdbf DUP2
0xdc0 MSTORE
0xdc1 PUSH1 0x20
0xdc3 ADD
0xdc4 SWAP2
0xdc5 POP
0xdc6 POP
0xdc7 PUSH1 0x40
0xdc9 MLOAD
0xdca DUP1
0xdcb SWAP2
0xdcc SUB
0xdcd SWAP1
0xdce LOG4
0xdcf PUSH1 0x1
0xdd1 SWAP2
0xdd2 POP
0xdd3 POP
0xdd4 SWAP4
0xdd5 SWAP3
0xdd6 POP
0xdd7 POP
0xdd8 POP
0xdd9 JUMP
0xdda JUMPDEST
0xddb PUSH1 0x0
0xddd DUP2
0xdde PUSH2 0x8e2
0xde1 CALLER
0xde2 PUSH2 0x488
0xde5 JUMP
0xde6 JUMPDEST
0xde7 LT
0xde8 ISZERO
0xde9 PUSH2 0x8ed
0xdec JUMPI
---
0xd23: V814 = M[V808]
0xd25: M[V805] = V814
0xd26: V815 = 0x20
0xd29: V816 = ADD V805 0x20
0xd2c: V817 = 0x20
0xd2f: V818 = ADD V808 0x20
0xd32: V819 = 0x20
0xd35: V820 = SUB V806 0x20
0xd38: V821 = 0x813
0xd3b: THROW 
0xd3c: JUMPDEST 
0xd3d: V822 = 0x1
0xd40: V823 = 0x20
0xd42: V824 = SUB 0x20 S2
0xd43: V825 = 0x100
0xd46: V826 = EXP 0x100 V824
0xd47: V827 = SUB V826 0x1
0xd49: V828 = NOT V827
0xd4b: V829 = M[S0]
0xd4c: V830 = AND V829 V828
0xd4f: V831 = M[S1]
0xd50: V832 = AND V831 V827
0xd53: V833 = OR V830 V832
0xd55: M[S1] = V833
0xd5e: V834 = ADD S3 S5
0xd62: V835 = 0x40
0xd64: V836 = M[0x40]
0xd67: V837 = SUB V834 V836
0xd69: V838 = SHA3 V836 V837
0xd6b: V839 = 0xffffffffffffffffffffffffffffffffffffffff
0xd80: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0xd81: V841 = CALLER
0xd82: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xd97: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff V841
0xd98: V844 = 0x5998a692901c98bc4a7dd88a9aee1eb36464008fd7c594a1b5a70d41e664bf1a
0xdba: V845 = 0x40
0xdbc: V846 = M[0x40]
0xdc0: M[V846] = S11
0xdc1: V847 = 0x20
0xdc3: V848 = ADD 0x20 V846
0xdc7: V849 = 0x40
0xdc9: V850 = M[0x40]
0xdcc: V851 = SUB V848 V850
0xdce: LOG V850 V851 0x5998a692901c98bc4a7dd88a9aee1eb36464008fd7c594a1b5a70d41e664bf1a V843 V840 V838
0xdcf: V852 = 0x1
0xdd9: JUMP S13
0xdda: JUMPDEST 
0xddb: V853 = 0x0
0xdde: V854 = 0x8e2
0xde1: V855 = CALLER
0xde2: V856 = 0x488
0xde5: THROW 
0xde6: JUMPDEST 
0xde7: V857 = LT S0 S1
0xde8: V858 = ISZERO V857
0xde9: V859 = 0x8ed
0xdec: THROWI V858
---
Entry stack: [S10, S9, S8, S7, V805, V805, V808, V806, V806, V805, V808]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xded
[0xded:0xf12]
---
Predecessors: [0xd22]
Successors: [0xf13]
---
0xded PUSH1 0x0
0xdef DUP1
0xdf0 REVERT
0xdf1 JUMPDEST
0xdf2 PUSH2 0x8ff
0xdf5 PUSH2 0x8f9
0xdf8 CALLER
0xdf9 PUSH2 0x488
0xdfc JUMP
0xdfd JUMPDEST
0xdfe DUP4
0xdff PUSH2 0xa04
0xe02 JUMP
0xe03 JUMPDEST
0xe04 PUSH1 0x0
0xe06 DUP1
0xe07 CALLER
0xe08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1d AND
0xe1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe33 AND
0xe34 DUP2
0xe35 MSTORE
0xe36 PUSH1 0x20
0xe38 ADD
0xe39 SWAP1
0xe3a DUP2
0xe3b MSTORE
0xe3c PUSH1 0x20
0xe3e ADD
0xe3f PUSH1 0x0
0xe41 SHA3
0xe42 DUP2
0xe43 SWAP1
0xe44 SSTORE
0xe45 POP
0xe46 PUSH2 0x953
0xe49 PUSH2 0x94d
0xe4c DUP5
0xe4d PUSH2 0x488
0xe50 JUMP
0xe51 JUMPDEST
0xe52 DUP4
0xe53 PUSH2 0xa1e
0xe56 JUMP
0xe57 JUMPDEST
0xe58 PUSH1 0x0
0xe5a DUP1
0xe5b DUP6
0xe5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe71 AND
0xe72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe87 AND
0xe88 DUP2
0xe89 MSTORE
0xe8a PUSH1 0x20
0xe8c ADD
0xe8d SWAP1
0xe8e DUP2
0xe8f MSTORE
0xe90 PUSH1 0x20
0xe92 ADD
0xe93 PUSH1 0x0
0xe95 SHA3
0xe96 DUP2
0xe97 SWAP1
0xe98 SSTORE
0xe99 POP
0xe9a DUP3
0xe9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb0 AND
0xeb1 CALLER
0xeb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec7 AND
0xec8 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xee9 DUP5
0xeea PUSH1 0x40
0xeec MLOAD
0xeed DUP1
0xeee DUP3
0xeef DUP2
0xef0 MSTORE
0xef1 PUSH1 0x20
0xef3 ADD
0xef4 SWAP2
0xef5 POP
0xef6 POP
0xef7 PUSH1 0x40
0xef9 MLOAD
0xefa DUP1
0xefb SWAP2
0xefc SUB
0xefd SWAP1
0xefe LOG3
0xeff PUSH1 0x1
0xf01 SWAP1
0xf02 POP
0xf03 SWAP3
0xf04 SWAP2
0xf05 POP
0xf06 POP
0xf07 JUMP
0xf08 JUMPDEST
0xf09 PUSH1 0x0
0xf0b DUP2
0xf0c DUP4
0xf0d LT
0xf0e ISZERO
0xf0f PUSH2 0xa13
0xf12 JUMPI
---
0xded: V860 = 0x0
0xdf0: REVERT 0x0 0x0
0xdf1: JUMPDEST 
0xdf2: V861 = 0x8ff
0xdf5: V862 = 0x8f9
0xdf8: V863 = CALLER
0xdf9: V864 = 0x488
0xdfc: THROW 
0xdfd: JUMPDEST 
0xdff: V865 = 0xa04
0xe02: THROW 
0xe03: JUMPDEST 
0xe04: V866 = 0x0
0xe07: V867 = CALLER
0xe08: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1d: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V867
0xe1e: V870 = 0xffffffffffffffffffffffffffffffffffffffff
0xe33: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0xe35: M[0x0] = V871
0xe36: V872 = 0x20
0xe38: V873 = ADD 0x20 0x0
0xe3b: M[0x20] = 0x0
0xe3c: V874 = 0x20
0xe3e: V875 = ADD 0x20 0x20
0xe3f: V876 = 0x0
0xe41: V877 = SHA3 0x0 0x40
0xe44: S[V877] = S0
0xe46: V878 = 0x953
0xe49: V879 = 0x94d
0xe4d: V880 = 0x488
0xe50: THROW 
0xe51: JUMPDEST 
0xe53: V881 = 0xa1e
0xe56: THROW 
0xe57: JUMPDEST 
0xe58: V882 = 0x0
0xe5c: V883 = 0xffffffffffffffffffffffffffffffffffffffff
0xe71: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe72: V885 = 0xffffffffffffffffffffffffffffffffffffffff
0xe87: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0xe89: M[0x0] = V886
0xe8a: V887 = 0x20
0xe8c: V888 = ADD 0x20 0x0
0xe8f: M[0x20] = 0x0
0xe90: V889 = 0x20
0xe92: V890 = ADD 0x20 0x20
0xe93: V891 = 0x0
0xe95: V892 = SHA3 0x0 0x40
0xe98: S[V892] = S0
0xe9b: V893 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb0: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xeb1: V895 = CALLER
0xeb2: V896 = 0xffffffffffffffffffffffffffffffffffffffff
0xec7: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0xec8: V898 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xeea: V899 = 0x40
0xeec: V900 = M[0x40]
0xef0: M[V900] = S2
0xef1: V901 = 0x20
0xef3: V902 = ADD 0x20 V900
0xef7: V903 = 0x40
0xef9: V904 = M[0x40]
0xefc: V905 = SUB V902 V904
0xefe: LOG V904 V905 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V897 V894
0xeff: V906 = 0x1
0xf07: JUMP S4
0xf08: JUMPDEST 
0xf09: V907 = 0x0
0xf0d: V908 = LT S1 S0
0xf0e: V909 = ISZERO V908
0xf0f: V910 = 0xa13
0xf12: THROWI V909
---
Entry stack: []
Stack pops: 0
Stack additions: [V863, 0x8f9, 0x8ff, S3, S0, S1, S2, S3, S3, 0x94d, 0x953, S1, S2, S3, S3, S0, S1, S2, S3, 0x1, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf13
[0xf13:0xf4e]
---
Predecessors: [0xded]
Successors: [0xa4f, 0xf4f]
---
0xf13 PUSH1 0x0
0xf15 DUP1
0xf16 REVERT
0xf17 JUMPDEST
0xf18 DUP2
0xf19 DUP4
0xf1a SUB
0xf1b SWAP1
0xf1c POP
0xf1d SWAP3
0xf1e SWAP2
0xf1f POP
0xf20 POP
0xf21 JUMP
0xf22 JUMPDEST
0xf23 PUSH1 0x0
0xf25 DUP2
0xf26 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xf47 SUB
0xf48 DUP4
0xf49 GT
0xf4a ISZERO
0xf4b PUSH2 0xa4f
0xf4e JUMPI
---
0xf13: V911 = 0x0
0xf16: REVERT 0x0 0x0
0xf17: JUMPDEST 
0xf1a: V912 = SUB S2 S1
0xf21: JUMP S3
0xf22: JUMPDEST 
0xf23: V913 = 0x0
0xf26: V914 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xf47: V915 = SUB 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0xf49: V916 = GT S1 V915
0xf4a: V917 = ISZERO V916
0xf4b: V918 = 0xa4f
0xf4e: JUMPI 0xa4f V917
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V912, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf4f
[0xf4f:0xf89]
---
Predecessors: [0xf13]
Successors: []
---
0xf4f PUSH1 0x0
0xf51 DUP1
0xf52 REVERT
0xf53 JUMPDEST
0xf54 DUP2
0xf55 DUP4
0xf56 ADD
0xf57 SWAP1
0xf58 POP
0xf59 SWAP3
0xf5a SWAP2
0xf5b POP
0xf5c POP
0xf5d JUMP
0xf5e STOP
0xf5f LOG1
0xf60 PUSH6 0x627a7a723058
0xf67 SHA3
0xf68 MISSING 0x48
0xf69 MISSING 0x23
0xf6a EXTCODEHASH
0xf6b SWAP11
0xf6c PUSH24 0x4d236c230d993ac1882ddb0955566195ef16b2ea54bd5370
0xf85 MISSING 0xc4
0xf86 REVERT
0xf87 SDIV
0xf88 STOP
0xf89 MISSING 0x29
---
0xf4f: V919 = 0x0
0xf52: REVERT 0x0 0x0
0xf53: JUMPDEST 
0xf56: V920 = ADD S2 S1
0xf5d: JUMP S3
0xf5e: STOP 
0xf5f: LOG S0 S1 S2
0xf60: V921 = 0x627a7a723058
0xf67: V922 = SHA3 0x627a7a723058 S3
0xf68: MISSING 0x48
0xf69: MISSING 0x23
0xf6a: V923 = EXTCODEHASH S0
0xf6c: V924 = 0x4d236c230d993ac1882ddb0955566195ef16b2ea54bd5370
0xf85: MISSING 0xc4
0xf86: REVERT S0 S1
0xf87: V925 = SDIV S0 S1
0xf88: STOP 
0xf89: MISSING 0x29
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V920, V922, 0x4d236c230d993ac1882ddb0955566195ef16b2ea54bd5370, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V923, V925]
Exit stack: []

================================

Function 0:
Public function signature: 0xc0ee0b8a
Entry block: 0x46
Exit block: 0xd7
Body: 0x46, 0x4e, 0x52, 0xd7, 0xd9, 0xe1, 0x13e, 0x13f, 0x1c8, 0x1c9, 0x252, 0x253, 0x2da, 0x2db, 0x3be

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

