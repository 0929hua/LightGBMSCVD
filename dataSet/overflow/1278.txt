Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x79ba5097
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x79ba5097
0x3c: V13 = EQ 0x79ba5097 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7e]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x7e
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x7e
0x4b: JUMPI 0x7e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd5]
---
0x4c DUP1
0x4d PUSH4 0xd4ee1d90
0x52 EQ
0x53 PUSH2 0xd5
0x56 JUMPI
---
0x4d: V18 = 0xd4ee1d90
0x52: V19 = EQ 0xd4ee1d90 V11
0x53: V20 = 0xd5
0x56: JUMPI 0xd5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x12c]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x12c
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x12c
0x61: JUMPI 0x12c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0x7b]
---
Predecessors: [0x67]
Successors: [0x16f]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0x7c
0x78 PUSH2 0x16f
0x7b JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0x7c
0x78: V30 = 0x16f
0x7b: JUMP 0x16f
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x7c]
Exit stack: [V11, 0x7c]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: [0x234]
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0x41]
Successors: [0x86, 0x8a]
---
0x7e JUMPDEST
0x7f CALLVALUE
0x80 DUP1
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x7e: JUMPDEST 
0x7f: V31 = CALLVALUE
0x81: V32 = ISZERO V31
0x82: V33 = 0x8a
0x85: JUMPI 0x8a V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7e]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V34 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x8a
[0x8a:0x92]
---
Predecessors: [0x7e]
Successors: [0x333]
---
0x8a JUMPDEST
0x8b POP
0x8c PUSH2 0x93
0x8f PUSH2 0x333
0x92 JUMP
---
0x8a: JUMPDEST 
0x8c: V35 = 0x93
0x8f: V36 = 0x333
0x92: JUMP 0x333
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0x93]
Exit stack: [V11, 0x93]

================================

Block 0x93
[0x93:0xd4]
---
Predecessors: [0x333]
Successors: []
---
0x93 JUMPDEST
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 DUP3
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP2
0xcb POP
0xcc POP
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 SWAP2
0xd2 SUB
0xd3 SWAP1
0xd4 RETURN
---
0x93: JUMPDEST 
0x94: V37 = 0x40
0x96: V38 = M[0x40]
0x99: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0xaf: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc6: M[V38] = V42
0xc7: V43 = 0x20
0xc9: V44 = ADD 0x20 V38
0xcd: V45 = 0x40
0xcf: V46 = M[0x40]
0xd2: V47 = SUB V44 V46
0xd4: RETURN V46 V47
---
Entry stack: [V11, 0x93, V165]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x93]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0x4c]
Successors: [0xdd, 0xe1]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 DUP1
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd5: JUMPDEST 
0xd6: V48 = CALLVALUE
0xd8: V49 = ISZERO V48
0xd9: V50 = 0xe1
0xdc: JUMPI 0xe1 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd5]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V51 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xe1
[0xe1:0xe9]
---
Predecessors: [0xd5]
Successors: [0x358]
---
0xe1 JUMPDEST
0xe2 POP
0xe3 PUSH2 0xea
0xe6 PUSH2 0x358
0xe9 JUMP
---
0xe1: JUMPDEST 
0xe3: V52 = 0xea
0xe6: V53 = 0x358
0xe9: JUMP 0x358
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xea]
Exit stack: [V11, 0xea]

================================

Block 0xea
[0xea:0x12b]
---
Predecessors: [0x358]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP2
0x122 POP
0x123 POP
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0xea: JUMPDEST 
0xeb: V54 = 0x40
0xed: V55 = M[0x40]
0xf0: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x106: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x11d: M[V55] = V59
0x11e: V60 = 0x20
0x120: V61 = ADD 0x20 V55
0x124: V62 = 0x40
0x126: V63 = M[0x40]
0x129: V64 = SUB V61 V63
0x12b: RETURN V63 V64
---
Entry stack: [V11, 0xea, V173]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xea]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x57]
Successors: [0x134, 0x138]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12c: JUMPDEST 
0x12d: V65 = CALLVALUE
0x12f: V66 = ISZERO V65
0x130: V67 = 0x138
0x133: JUMPI 0x138 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V65]
Exit stack: [V11, V65]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12c]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V68 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65]

================================

Block 0x138
[0x138:0x16c]
---
Predecessors: [0x12c]
Successors: [0x37e]
---
0x138 JUMPDEST
0x139 POP
0x13a PUSH2 0x16d
0x13d PUSH1 0x4
0x13f DUP1
0x140 CALLDATASIZE
0x141 SUB
0x142 DUP2
0x143 ADD
0x144 SWAP1
0x145 DUP1
0x146 DUP1
0x147 CALLDATALOAD
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP3
0x164 SWAP2
0x165 SWAP1
0x166 POP
0x167 POP
0x168 POP
0x169 PUSH2 0x37e
0x16c JUMP
---
0x138: JUMPDEST 
0x13a: V69 = 0x16d
0x13d: V70 = 0x4
0x140: V71 = CALLDATASIZE
0x141: V72 = SUB V71 0x4
0x143: V73 = ADD 0x4 V72
0x147: V74 = CALLDATALOAD 0x4
0x148: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15f: V77 = 0x20
0x161: V78 = ADD 0x20 0x4
0x169: V79 = 0x37e
0x16c: JUMP 0x37e
---
Entry stack: [V11, V65]
Stack pops: 1
Stack additions: [0x16d, V76]
Exit stack: [V11, 0x16d, V76]

================================

Block 0x16d
[0x16d:0x16e]
---
Predecessors: [0x4e7]
Successors: []
---
0x16d JUMPDEST
0x16e STOP
---
0x16d: JUMPDEST 
0x16e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16f
[0x16f:0x1c6]
---
Predecessors: [0x73]
Successors: [0x1c7, 0x234]
---
0x16f JUMPDEST
0x170 PUSH1 0x1
0x172 PUSH1 0x0
0x174 SWAP1
0x175 SLOAD
0x176 SWAP1
0x177 PUSH2 0x100
0x17a EXP
0x17b SWAP1
0x17c DIV
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 AND
0x1a9 CALLER
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 EQ
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 PUSH2 0x234
0x1c6 JUMPI
---
0x16f: JUMPDEST 
0x170: V80 = 0x1
0x172: V81 = 0x0
0x175: V82 = S[0x1]
0x177: V83 = 0x100
0x17a: V84 = EXP 0x100 0x0
0x17c: V85 = DIV V82 0x1
0x17d: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x193: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1a9: V90 = CALLER
0x1aa: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1c0: V93 = EQ V92 V89
0x1c1: V94 = ISZERO V93
0x1c2: V95 = ISZERO V94
0x1c3: V96 = 0x234
0x1c6: JUMPI 0x234 V95
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x1c7
[0x1c7:0x233]
---
Predecessors: [0x16f]
Successors: []
---
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1eb DUP2
0x1ec MSTORE
0x1ed PUSH1 0x4
0x1ef ADD
0x1f0 DUP1
0x1f1 DUP1
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 DUP3
0x1f6 DUP2
0x1f7 SUB
0x1f8 DUP3
0x1f9 MSTORE
0x1fa PUSH1 0x16
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 DUP1
0x202 PUSH32 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x223 DUP2
0x224 MSTORE
0x225 POP
0x226 PUSH1 0x20
0x228 ADD
0x229 SWAP2
0x22a POP
0x22b POP
0x22c PUSH1 0x40
0x22e MLOAD
0x22f DUP1
0x230 SWAP2
0x231 SUB
0x232 SWAP1
0x233 REVERT
---
0x1c7: V97 = 0x40
0x1c9: V98 = M[0x40]
0x1ca: V99 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1ec: M[V98] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1ed: V100 = 0x4
0x1ef: V101 = ADD 0x4 V98
0x1f2: V102 = 0x20
0x1f4: V103 = ADD 0x20 V101
0x1f7: V104 = SUB V103 V101
0x1f9: M[V101] = V104
0x1fa: V105 = 0x16
0x1fd: M[V103] = 0x16
0x1fe: V106 = 0x20
0x200: V107 = ADD 0x20 V103
0x202: V108 = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x224: M[V107] = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x226: V109 = 0x20
0x228: V110 = ADD 0x20 V107
0x22c: V111 = 0x40
0x22e: V112 = M[0x40]
0x231: V113 = SUB V110 V112
0x233: REVERT V112 V113
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x234
[0x234:0x332]
---
Predecessors: [0x16f]
Successors: [0x7c]
---
0x234 JUMPDEST
0x235 CALLER
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c PUSH1 0x0
0x24e DUP1
0x24f SWAP1
0x250 SLOAD
0x251 SWAP1
0x252 PUSH2 0x100
0x255 EXP
0x256 SWAP1
0x257 DIV
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac SWAP2
0x2ad SUB
0x2ae SWAP1
0x2af LOG3
0x2b0 CALLER
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 PUSH2 0x100
0x2b7 EXP
0x2b8 DUP2
0x2b9 SLOAD
0x2ba DUP2
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 MUL
0x2d1 NOT
0x2d2 AND
0x2d3 SWAP1
0x2d4 DUP4
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb MUL
0x2ec OR
0x2ed SWAP1
0x2ee SSTORE
0x2ef POP
0x2f0 PUSH1 0x0
0x2f2 PUSH1 0x1
0x2f4 PUSH1 0x0
0x2f6 PUSH2 0x100
0x2f9 EXP
0x2fa DUP2
0x2fb SLOAD
0x2fc DUP2
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 MUL
0x313 NOT
0x314 AND
0x315 SWAP1
0x316 DUP4
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d MUL
0x32e OR
0x32f SWAP1
0x330 SSTORE
0x331 POP
0x332 JUMP
---
0x234: JUMPDEST 
0x235: V114 = CALLER
0x236: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x24c: V117 = 0x0
0x250: V118 = S[0x0]
0x252: V119 = 0x100
0x255: V120 = EXP 0x100 0x0
0x257: V121 = DIV V118 0x1
0x258: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x26e: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x284: V126 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2a5: V127 = 0x40
0x2a7: V128 = M[0x40]
0x2a8: V129 = 0x40
0x2aa: V130 = M[0x40]
0x2ad: V131 = SUB V128 V130
0x2af: LOG V130 V131 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V125 V116
0x2b0: V132 = CALLER
0x2b1: V133 = 0x0
0x2b4: V134 = 0x100
0x2b7: V135 = EXP 0x100 0x0
0x2b9: V136 = S[0x0]
0x2bb: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V138 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2d1: V139 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V140 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V136
0x2d5: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x2eb: V143 = MUL V142 0x1
0x2ec: V144 = OR V143 V140
0x2ee: S[0x0] = V144
0x2f0: V145 = 0x0
0x2f2: V146 = 0x1
0x2f4: V147 = 0x0
0x2f6: V148 = 0x100
0x2f9: V149 = EXP 0x100 0x0
0x2fb: V150 = S[0x1]
0x2fd: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V152 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x313: V153 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x314: V154 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V150
0x317: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x32d: V157 = MUL 0x0 0x1
0x32e: V158 = OR 0x0 V154
0x330: S[0x1] = V158
0x332: JUMP 0x7c
---
Entry stack: [V11, 0x7c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x333
[0x333:0x357]
---
Predecessors: [0x8a]
Successors: [0x93]
---
0x333 JUMPDEST
0x334 PUSH1 0x0
0x336 DUP1
0x337 SWAP1
0x338 SLOAD
0x339 SWAP1
0x33a PUSH2 0x100
0x33d EXP
0x33e SWAP1
0x33f DIV
0x340 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x355 AND
0x356 DUP2
0x357 JUMP
---
0x333: JUMPDEST 
0x334: V159 = 0x0
0x338: V160 = S[0x0]
0x33a: V161 = 0x100
0x33d: V162 = EXP 0x100 0x0
0x33f: V163 = DIV V160 0x1
0x340: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x355: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x357: JUMP 0x93
---
Entry stack: [V11, 0x93]
Stack pops: 1
Stack additions: [S0, V165]
Exit stack: [V11, 0x93, V165]

================================

Block 0x358
[0x358:0x37d]
---
Predecessors: [0xe1]
Successors: [0xea]
---
0x358 JUMPDEST
0x359 PUSH1 0x1
0x35b PUSH1 0x0
0x35d SWAP1
0x35e SLOAD
0x35f SWAP1
0x360 PUSH2 0x100
0x363 EXP
0x364 SWAP1
0x365 DIV
0x366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37b AND
0x37c DUP2
0x37d JUMP
---
0x358: JUMPDEST 
0x359: V166 = 0x1
0x35b: V167 = 0x0
0x35e: V168 = S[0x1]
0x360: V169 = 0x100
0x363: V170 = EXP 0x100 0x0
0x365: V171 = DIV V168 0x1
0x366: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x37d: JUMP 0xea
---
Entry stack: [V11, 0xea]
Stack pops: 1
Stack additions: [S0, V173]
Exit stack: [V11, 0xea, V173]

================================

Block 0x37e
[0x37e:0x3d4]
---
Predecessors: [0x138]
Successors: [0x3d5, 0x442]
---
0x37e JUMPDEST
0x37f PUSH1 0x0
0x381 DUP1
0x382 SWAP1
0x383 SLOAD
0x384 SWAP1
0x385 PUSH2 0x100
0x388 EXP
0x389 SWAP1
0x38a DIV
0x38b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a0 AND
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 CALLER
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce EQ
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 PUSH2 0x442
0x3d4 JUMPI
---
0x37e: JUMPDEST 
0x37f: V174 = 0x0
0x383: V175 = S[0x0]
0x385: V176 = 0x100
0x388: V177 = EXP 0x100 0x0
0x38a: V178 = DIV V175 0x1
0x38b: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a0: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x3a1: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x3b7: V183 = CALLER
0x3b8: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x3ce: V186 = EQ V185 V182
0x3cf: V187 = ISZERO V186
0x3d0: V188 = ISZERO V187
0x3d1: V189 = 0x442
0x3d4: JUMPI 0x442 V188
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x3d5
[0x3d5:0x441]
---
Predecessors: [0x37e]
Successors: []
---
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x4
0x3fd ADD
0x3fe DUP1
0x3ff DUP1
0x400 PUSH1 0x20
0x402 ADD
0x403 DUP3
0x404 DUP2
0x405 SUB
0x406 DUP3
0x407 MSTORE
0x408 PUSH1 0x13
0x40a DUP2
0x40b MSTORE
0x40c PUSH1 0x20
0x40e ADD
0x40f DUP1
0x410 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x431 DUP2
0x432 MSTORE
0x433 POP
0x434 PUSH1 0x20
0x436 ADD
0x437 SWAP2
0x438 POP
0x439 POP
0x43a PUSH1 0x40
0x43c MLOAD
0x43d DUP1
0x43e SWAP2
0x43f SUB
0x440 SWAP1
0x441 REVERT
---
0x3d5: V190 = 0x40
0x3d7: V191 = M[0x40]
0x3d8: V192 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3fa: M[V191] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3fb: V193 = 0x4
0x3fd: V194 = ADD 0x4 V191
0x400: V195 = 0x20
0x402: V196 = ADD 0x20 V194
0x405: V197 = SUB V196 V194
0x407: M[V194] = V197
0x408: V198 = 0x13
0x40b: M[V196] = 0x13
0x40c: V199 = 0x20
0x40e: V200 = ADD 0x20 V196
0x410: V201 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x432: M[V200] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x434: V202 = 0x20
0x436: V203 = ADD 0x20 V200
0x43a: V204 = 0x40
0x43c: V205 = M[0x40]
0x43f: V206 = SUB V203 V205
0x441: REVERT V205 V206
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x442
[0x442:0x479]
---
Predecessors: [0x37e]
Successors: [0x47a, 0x4e7]
---
0x442 JUMPDEST
0x443 DUP1
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a PUSH1 0x0
0x45c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x471 AND
0x472 EQ
0x473 ISZERO
0x474 ISZERO
0x475 ISZERO
0x476 PUSH2 0x4e7
0x479 JUMPI
---
0x442: JUMPDEST 
0x444: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x45a: V209 = 0x0
0x45c: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x471: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x472: V212 = EQ 0x0 V208
0x473: V213 = ISZERO V212
0x474: V214 = ISZERO V213
0x475: V215 = ISZERO V214
0x476: V216 = 0x4e7
0x479: JUMPI 0x4e7 V215
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x16d, V76]

================================

Block 0x47a
[0x47a:0x4e6]
---
Predecessors: [0x442]
Successors: []
---
0x47a PUSH1 0x40
0x47c MLOAD
0x47d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x4
0x4a2 ADD
0x4a3 DUP1
0x4a4 DUP1
0x4a5 PUSH1 0x20
0x4a7 ADD
0x4a8 DUP3
0x4a9 DUP2
0x4aa SUB
0x4ab DUP3
0x4ac MSTORE
0x4ad PUSH1 0x17
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 DUP1
0x4b5 PUSH32 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 POP
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc SWAP2
0x4dd POP
0x4de POP
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 SWAP2
0x4e4 SUB
0x4e5 SWAP1
0x4e6 REVERT
---
0x47a: V217 = 0x40
0x47c: V218 = M[0x40]
0x47d: V219 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49f: M[V218] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4a0: V220 = 0x4
0x4a2: V221 = ADD 0x4 V218
0x4a5: V222 = 0x20
0x4a7: V223 = ADD 0x20 V221
0x4aa: V224 = SUB V223 V221
0x4ac: M[V221] = V224
0x4ad: V225 = 0x17
0x4b0: M[V223] = 0x17
0x4b1: V226 = 0x20
0x4b3: V227 = ADD 0x20 V223
0x4b5: V228 = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x4d7: M[V227] = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x4d9: V229 = 0x20
0x4db: V230 = ADD 0x20 V227
0x4df: V231 = 0x40
0x4e1: V232 = M[0x40]
0x4e4: V233 = SUB V230 V232
0x4e6: REVERT V232 V233
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x4e7
[0x4e7:0x52a]
---
Predecessors: [0x442]
Successors: [0x16d]
---
0x4e7 JUMPDEST
0x4e8 DUP1
0x4e9 PUSH1 0x1
0x4eb PUSH1 0x0
0x4ed PUSH2 0x100
0x4f0 EXP
0x4f1 DUP2
0x4f2 SLOAD
0x4f3 DUP2
0x4f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x509 MUL
0x50a NOT
0x50b AND
0x50c SWAP1
0x50d DUP4
0x50e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x523 AND
0x524 MUL
0x525 OR
0x526 SWAP1
0x527 SSTORE
0x528 POP
0x529 POP
0x52a JUMP
---
0x4e7: JUMPDEST 
0x4e9: V234 = 0x1
0x4eb: V235 = 0x0
0x4ed: V236 = 0x100
0x4f0: V237 = EXP 0x100 0x0
0x4f2: V238 = S[0x1]
0x4f4: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x509: V240 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x50a: V241 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V242 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V238
0x50e: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x523: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x524: V245 = MUL V244 0x1
0x525: V246 = OR V245 V242
0x527: S[0x1] = V246
0x52a: JUMP 0x16d
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x52b
[0x52b:0x563]
---
Predecessors: []
Successors: [0x564]
Has unresolved jump.
---
0x52b STOP
0x52c LOG1
0x52d PUSH6 0x627a7a723058
0x534 SHA3
0x535 CODECOPY
0x536 SWAP3
0x537 SHR
0x538 MISSING 0xf9
0x539 CREATE2
0x53a MISSING 0xd2
0x53b DIFFICULTY
0x53c MISSING 0x46
0x53d MISSING 0xc7
0x53e CALLDATALOAD
0x53f MISSING 0xd4
0x540 MISSING 0xe1
0x541 PUSH2 0x4582
0x544 PUSH28 0x210f050be63c775d907e0903dd4bf6d8002960806040526004361061
0x561 STOP
0x562 LOG4
0x563 JUMPI
---
0x52b: STOP 
0x52c: LOG S0 S1 S2
0x52d: V247 = 0x627a7a723058
0x534: V248 = SHA3 0x627a7a723058 S3
0x535: CODECOPY V248 S4 S5
0x537: V249 = SHR S9 S7
0x538: MISSING 0xf9
0x539: V250 = CREATE2 S0 S1 S2 S3
0x53a: MISSING 0xd2
0x53b: V251 = DIFFICULTY
0x53c: MISSING 0x46
0x53d: MISSING 0xc7
0x53e: V252 = CALLDATALOAD S0
0x53f: MISSING 0xd4
0x540: MISSING 0xe1
0x541: V253 = 0x4582
0x544: V254 = 0x210f050be63c775d907e0903dd4bf6d8002960806040526004361061
0x561: STOP 
0x562: LOG S0 S1 S2 S3 S4 S5
0x563: JUMPI S6 S7
---
Entry stack: []
Stack pops: 0
Stack additions: [V249, S8, S6, V250, V251, V252, 0x210f050be63c775d907e0903dd4bf6d8002960806040526004361061, 0x4582]
Exit stack: []

================================

Block 0x564
[0x564:0x597]
---
Predecessors: [0x52b]
Successors: [0x598]
---
0x564 PUSH1 0x0
0x566 CALLDATALOAD
0x567 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x585 SWAP1
0x586 DIV
0x587 PUSH4 0xffffffff
0x58c AND
0x58d DUP1
0x58e PUSH4 0x2d806cdd
0x593 EQ
0x594 PUSH2 0x4e0
0x597 JUMPI
---
0x564: V255 = 0x0
0x566: V256 = CALLDATALOAD 0x0
0x567: V257 = 0x100000000000000000000000000000000000000000000000000000000
0x586: V258 = DIV V256 0x100000000000000000000000000000000000000000000000000000000
0x587: V259 = 0xffffffff
0x58c: V260 = AND 0xffffffff V258
0x58e: V261 = 0x2d806cdd
0x593: V262 = EQ 0x2d806cdd V260
0x594: V263 = 0x4e0
0x597: THROWI V262
---
Entry stack: []
Stack pops: 0
Stack additions: [V260]
Exit stack: [V260]

================================

Block 0x598
[0x598:0x5a2]
---
Predecessors: [0x564]
Successors: [0x5a3]
---
0x598 DUP1
0x599 PUSH4 0x4ab89400
0x59e EQ
0x59f PUSH2 0x516
0x5a2 JUMPI
---
0x599: V264 = 0x4ab89400
0x59e: V265 = EQ 0x4ab89400 V260
0x59f: V266 = 0x516
0x5a2: THROWI V265
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5a3
[0x5a3:0x5ad]
---
Predecessors: [0x598]
Successors: [0x5ae]
---
0x5a3 DUP1
0x5a4 PUSH4 0x5e35359e
0x5a9 EQ
0x5aa PUSH2 0x559
0x5ad JUMPI
---
0x5a4: V267 = 0x5e35359e
0x5a9: V268 = EQ 0x5e35359e V260
0x5aa: V269 = 0x559
0x5ad: THROWI V268
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5ae
[0x5ae:0x5b8]
---
Predecessors: [0x5a3]
Successors: [0x5b9]
---
0x5ae DUP1
0x5af PUSH4 0x79ba5097
0x5b4 EQ
0x5b5 PUSH2 0x5de
0x5b8 JUMPI
---
0x5af: V270 = 0x79ba5097
0x5b4: V271 = EQ 0x79ba5097 V260
0x5b5: V272 = 0x5de
0x5b8: THROWI V271
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5b9
[0x5b9:0x5c3]
---
Predecessors: [0x5ae]
Successors: [0x5c4]
---
0x5b9 DUP1
0x5ba PUSH4 0x8da5cb5b
0x5bf EQ
0x5c0 PUSH2 0x5f5
0x5c3 JUMPI
---
0x5ba: V273 = 0x8da5cb5b
0x5bf: V274 = EQ 0x8da5cb5b V260
0x5c0: V275 = 0x5f5
0x5c3: THROWI V274
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5c4
[0x5c4:0x5ce]
---
Predecessors: [0x5b9]
Successors: [0x5cf]
---
0x5c4 DUP1
0x5c5 PUSH4 0xbc3da535
0x5ca EQ
0x5cb PUSH2 0x64c
0x5ce JUMPI
---
0x5c5: V276 = 0xbc3da535
0x5ca: V277 = EQ 0xbc3da535 V260
0x5cb: V278 = 0x64c
0x5ce: THROWI V277
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5cf
[0x5cf:0x5d9]
---
Predecessors: [0x5c4]
Successors: [0x5da]
---
0x5cf DUP1
0x5d0 PUSH4 0xd4ee1d90
0x5d5 EQ
0x5d6 PUSH2 0x6a3
0x5d9 JUMPI
---
0x5d0: V279 = 0xd4ee1d90
0x5d5: V280 = EQ 0xd4ee1d90 V260
0x5d6: V281 = 0x6a3
0x5d9: THROWI V280
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5da
[0x5da:0x5e4]
---
Predecessors: [0x5cf]
Successors: [0x5e5]
---
0x5da DUP1
0x5db PUSH4 0xd84bd737
0x5e0 EQ
0x5e1 PUSH2 0x6fa
0x5e4 JUMPI
---
0x5db: V282 = 0xd84bd737
0x5e0: V283 = EQ 0xd84bd737 V260
0x5e1: V284 = 0x6fa
0x5e4: THROWI V283
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5e5
[0x5e5:0x5ef]
---
Predecessors: [0x5da]
Successors: [0x5f0]
---
0x5e5 DUP1
0x5e6 PUSH4 0xf2fde38b
0x5eb EQ
0x5ec PUSH2 0x751
0x5ef JUMPI
---
0x5e6: V285 = 0xf2fde38b
0x5eb: V286 = EQ 0xf2fde38b V260
0x5ec: V287 = 0x751
0x5ef: THROWI V286
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5f0
[0x5f0:0x5fa]
---
Predecessors: [0x5e5]
Successors: [0x5fb]
---
0x5f0 DUP1
0x5f1 PUSH4 0xf3fef3a3
0x5f6 EQ
0x5f7 PUSH2 0x794
0x5fa JUMPI
---
0x5f1: V288 = 0xf3fef3a3
0x5f6: V289 = EQ 0xf3fef3a3 V260
0x5f7: V290 = 0x794
0x5fa: THROWI V289
---
Entry stack: [V260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V260]

================================

Block 0x5fb
[0x5fb:0x602]
---
Predecessors: [0x5f0]
Successors: [0x603]
---
0x5fb JUMPDEST
0x5fc CALLVALUE
0x5fd DUP1
0x5fe ISZERO
0x5ff PUSH2 0xb0
0x602 JUMPI
---
0x5fb: JUMPDEST 
0x5fc: V291 = CALLVALUE
0x5fe: V292 = ISZERO V291
0x5ff: V293 = 0xb0
0x602: THROWI V292
---
Entry stack: [V260]
Stack pops: 0
Stack additions: [V291]
Exit stack: [V260, V291]

================================

Block 0x603
[0x603:0x640]
---
Predecessors: [0x5fb]
Successors: [0x641]
---
0x603 PUSH1 0x0
0x605 DUP1
0x606 REVERT
0x607 JUMPDEST
0x608 POP
0x609 PUSH1 0x0
0x60b DUP1
0x60c ORIGIN
0x60d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x622 AND
0x623 CALLER
0x624 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x639 AND
0x63a EQ
0x63b ISZERO
0x63c ISZERO
0x63d PUSH2 0x157
0x640 JUMPI
---
0x603: V294 = 0x0
0x606: REVERT 0x0 0x0
0x607: JUMPDEST 
0x609: V295 = 0x0
0x60c: V296 = ORIGIN
0x60d: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x622: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x623: V299 = CALLER
0x624: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x639: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x63a: V302 = EQ V301 V298
0x63b: V303 = ISZERO V302
0x63c: V304 = ISZERO V303
0x63d: V305 = 0x157
0x640: THROWI V304
---
Entry stack: [V260, V291]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: []

================================

Block 0x641
[0x641:0x766]
---
Predecessors: [0x603]
Successors: [0x767]
---
0x641 PUSH1 0x40
0x643 MLOAD
0x644 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x665 DUP2
0x666 MSTORE
0x667 PUSH1 0x4
0x669 ADD
0x66a DUP1
0x66b DUP1
0x66c PUSH1 0x20
0x66e ADD
0x66f DUP3
0x670 DUP2
0x671 SUB
0x672 DUP3
0x673 MSTORE
0x674 PUSH1 0x16
0x676 DUP2
0x677 MSTORE
0x678 PUSH1 0x20
0x67a ADD
0x67b DUP1
0x67c PUSH32 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x69d DUP2
0x69e MSTORE
0x69f POP
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 SWAP2
0x6a4 POP
0x6a5 POP
0x6a6 PUSH1 0x40
0x6a8 MLOAD
0x6a9 DUP1
0x6aa SWAP2
0x6ab SUB
0x6ac SWAP1
0x6ad REVERT
0x6ae JUMPDEST
0x6af PUSH1 0x2
0x6b1 PUSH1 0x0
0x6b3 SWAP1
0x6b4 SLOAD
0x6b5 SWAP1
0x6b6 PUSH2 0x100
0x6b9 EXP
0x6ba SWAP1
0x6bb DIV
0x6bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d1 AND
0x6d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e7 AND
0x6e8 PUSH4 0x70a08231
0x6ed CALLER
0x6ee PUSH1 0x40
0x6f0 MLOAD
0x6f1 DUP3
0x6f2 PUSH4 0xffffffff
0x6f7 AND
0x6f8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x716 MUL
0x717 DUP2
0x718 MSTORE
0x719 PUSH1 0x4
0x71b ADD
0x71c DUP1
0x71d DUP3
0x71e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x733 AND
0x734 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x749 AND
0x74a DUP2
0x74b MSTORE
0x74c PUSH1 0x20
0x74e ADD
0x74f SWAP2
0x750 POP
0x751 POP
0x752 PUSH1 0x20
0x754 PUSH1 0x40
0x756 MLOAD
0x757 DUP1
0x758 DUP4
0x759 SUB
0x75a DUP2
0x75b PUSH1 0x0
0x75d DUP8
0x75e DUP1
0x75f EXTCODESIZE
0x760 ISZERO
0x761 DUP1
0x762 ISZERO
0x763 PUSH2 0x214
0x766 JUMPI
---
0x641: V306 = 0x40
0x643: V307 = M[0x40]
0x644: V308 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x666: M[V307] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x667: V309 = 0x4
0x669: V310 = ADD 0x4 V307
0x66c: V311 = 0x20
0x66e: V312 = ADD 0x20 V310
0x671: V313 = SUB V312 V310
0x673: M[V310] = V313
0x674: V314 = 0x16
0x677: M[V312] = 0x16
0x678: V315 = 0x20
0x67a: V316 = ADD 0x20 V312
0x67c: V317 = 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x69e: M[V316] = 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x6a0: V318 = 0x20
0x6a2: V319 = ADD 0x20 V316
0x6a6: V320 = 0x40
0x6a8: V321 = M[0x40]
0x6ab: V322 = SUB V319 V321
0x6ad: REVERT V321 V322
0x6ae: JUMPDEST 
0x6af: V323 = 0x2
0x6b1: V324 = 0x0
0x6b4: V325 = S[0x2]
0x6b6: V326 = 0x100
0x6b9: V327 = EXP 0x100 0x0
0x6bb: V328 = DIV V325 0x1
0x6bc: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d1: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x6d2: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e7: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x6e8: V333 = 0x70a08231
0x6ed: V334 = CALLER
0x6ee: V335 = 0x40
0x6f0: V336 = M[0x40]
0x6f2: V337 = 0xffffffff
0x6f7: V338 = AND 0xffffffff 0x70a08231
0x6f8: V339 = 0x100000000000000000000000000000000000000000000000000000000
0x716: V340 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x718: M[V336] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x719: V341 = 0x4
0x71b: V342 = ADD 0x4 V336
0x71e: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x733: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x734: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x749: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x74b: M[V342] = V346
0x74c: V347 = 0x20
0x74e: V348 = ADD 0x20 V342
0x752: V349 = 0x20
0x754: V350 = 0x40
0x756: V351 = M[0x40]
0x759: V352 = SUB V348 V351
0x75b: V353 = 0x0
0x75f: V354 = EXTCODESIZE V332
0x760: V355 = ISZERO V354
0x762: V356 = ISZERO V355
0x763: V357 = 0x214
0x766: THROWI V356
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V355, V332, 0x0, V351, V352, V351, 0x20, V348, 0x70a08231, V332]
Exit stack: []

================================

Block 0x767
[0x767:0x775]
---
Predecessors: [0x641]
Successors: [0x776]
---
0x767 PUSH1 0x0
0x769 DUP1
0x76a REVERT
0x76b JUMPDEST
0x76c POP
0x76d GAS
0x76e CALL
0x76f ISZERO
0x770 DUP1
0x771 ISZERO
0x772 PUSH2 0x228
0x775 JUMPI
---
0x767: V358 = 0x0
0x76a: REVERT 0x0 0x0
0x76b: JUMPDEST 
0x76d: V359 = GAS
0x76e: V360 = CALL V359 S1 S2 S3 S4 S5 S6
0x76f: V361 = ISZERO V360
0x771: V362 = ISZERO V361
0x772: V363 = 0x228
0x775: THROWI V362
---
Entry stack: [V332, 0x70a08231, V348, 0x20, V351, V352, V351, 0x0, V332, V355]
Stack pops: 0
Stack additions: [V361]
Exit stack: []

================================

Block 0x776
[0x776:0x790]
---
Predecessors: [0x767]
Successors: [0x791]
---
0x776 RETURNDATASIZE
0x777 PUSH1 0x0
0x779 DUP1
0x77a RETURNDATACOPY
0x77b RETURNDATASIZE
0x77c PUSH1 0x0
0x77e REVERT
0x77f JUMPDEST
0x780 POP
0x781 POP
0x782 POP
0x783 POP
0x784 PUSH1 0x40
0x786 MLOAD
0x787 RETURNDATASIZE
0x788 PUSH1 0x20
0x78a DUP2
0x78b LT
0x78c ISZERO
0x78d PUSH2 0x23e
0x790 JUMPI
---
0x776: V364 = RETURNDATASIZE
0x777: V365 = 0x0
0x77a: RETURNDATACOPY 0x0 0x0 V364
0x77b: V366 = RETURNDATASIZE
0x77c: V367 = 0x0
0x77e: REVERT 0x0 V366
0x77f: JUMPDEST 
0x784: V368 = 0x40
0x786: V369 = M[0x40]
0x787: V370 = RETURNDATASIZE
0x788: V371 = 0x20
0x78b: V372 = LT V370 0x20
0x78c: V373 = ISZERO V372
0x78d: V374 = 0x23e
0x790: THROWI V373
---
Entry stack: [V361]
Stack pops: 0
Stack additions: [V370, V369]
Exit stack: []

================================

Block 0x791
[0x791:0x7b2]
---
Predecessors: [0x776]
Successors: [0x7b3]
---
0x791 PUSH1 0x0
0x793 DUP1
0x794 REVERT
0x795 JUMPDEST
0x796 DUP2
0x797 ADD
0x798 SWAP1
0x799 DUP1
0x79a DUP1
0x79b MLOAD
0x79c SWAP1
0x79d PUSH1 0x20
0x79f ADD
0x7a0 SWAP1
0x7a1 SWAP3
0x7a2 SWAP2
0x7a3 SWAP1
0x7a4 POP
0x7a5 POP
0x7a6 POP
0x7a7 SWAP2
0x7a8 POP
0x7a9 PUSH1 0x0
0x7ab DUP3
0x7ac GT
0x7ad ISZERO
0x7ae ISZERO
0x7af PUSH2 0x2c9
0x7b2 JUMPI
---
0x791: V375 = 0x0
0x794: REVERT 0x0 0x0
0x795: JUMPDEST 
0x797: V376 = ADD S1 S0
0x79b: V377 = M[S1]
0x79d: V378 = 0x20
0x79f: V379 = ADD 0x20 S1
0x7a9: V380 = 0x0
0x7ac: V381 = GT V377 0x0
0x7ad: V382 = ISZERO V381
0x7ae: V383 = ISZERO V382
0x7af: V384 = 0x2c9
0x7b2: THROWI V383
---
Entry stack: [V369, V370]
Stack pops: 0
Stack additions: [S2, V377]
Exit stack: []

================================

Block 0x7b3
[0x7b3:0x86c]
---
Predecessors: [0x791]
Successors: [0x86d]
---
0x7b3 PUSH1 0x40
0x7b5 MLOAD
0x7b6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7d7 DUP2
0x7d8 MSTORE
0x7d9 PUSH1 0x4
0x7db ADD
0x7dc DUP1
0x7dd DUP1
0x7de PUSH1 0x20
0x7e0 ADD
0x7e1 DUP3
0x7e2 DUP2
0x7e3 SUB
0x7e4 DUP3
0x7e5 MSTORE
0x7e6 PUSH1 0xe
0x7e8 DUP2
0x7e9 MSTORE
0x7ea PUSH1 0x20
0x7ec ADD
0x7ed DUP1
0x7ee PUSH32 0x7863635f616d6f756e74203e2030000000000000000000000000000000000000
0x80f DUP2
0x810 MSTORE
0x811 POP
0x812 PUSH1 0x20
0x814 ADD
0x815 SWAP2
0x816 POP
0x817 POP
0x818 PUSH1 0x40
0x81a MLOAD
0x81b DUP1
0x81c SWAP2
0x81d SUB
0x81e SWAP1
0x81f REVERT
0x820 JUMPDEST
0x821 PUSH1 0x3
0x823 PUSH1 0x0
0x825 CALLER
0x826 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83b AND
0x83c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x851 AND
0x852 DUP2
0x853 MSTORE
0x854 PUSH1 0x20
0x856 ADD
0x857 SWAP1
0x858 DUP2
0x859 MSTORE
0x85a PUSH1 0x20
0x85c ADD
0x85d PUSH1 0x0
0x85f SHA3
0x860 SLOAD
0x861 SWAP1
0x862 POP
0x863 PUSH1 0x0
0x865 DUP2
0x866 GT
0x867 ISZERO
0x868 ISZERO
0x869 PUSH2 0x383
0x86c JUMPI
---
0x7b3: V385 = 0x40
0x7b5: V386 = M[0x40]
0x7b6: V387 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7d8: M[V386] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7d9: V388 = 0x4
0x7db: V389 = ADD 0x4 V386
0x7de: V390 = 0x20
0x7e0: V391 = ADD 0x20 V389
0x7e3: V392 = SUB V391 V389
0x7e5: M[V389] = V392
0x7e6: V393 = 0xe
0x7e9: M[V391] = 0xe
0x7ea: V394 = 0x20
0x7ec: V395 = ADD 0x20 V391
0x7ee: V396 = 0x7863635f616d6f756e74203e2030000000000000000000000000000000000000
0x810: M[V395] = 0x7863635f616d6f756e74203e2030000000000000000000000000000000000000
0x812: V397 = 0x20
0x814: V398 = ADD 0x20 V395
0x818: V399 = 0x40
0x81a: V400 = M[0x40]
0x81d: V401 = SUB V398 V400
0x81f: REVERT V400 V401
0x820: JUMPDEST 
0x821: V402 = 0x3
0x823: V403 = 0x0
0x825: V404 = CALLER
0x826: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x83b: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x83c: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x851: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x853: M[0x0] = V408
0x854: V409 = 0x20
0x856: V410 = ADD 0x20 0x0
0x859: M[0x20] = 0x3
0x85a: V411 = 0x20
0x85c: V412 = ADD 0x20 0x20
0x85d: V413 = 0x0
0x85f: V414 = SHA3 0x0 0x40
0x860: V415 = S[V414]
0x863: V416 = 0x0
0x866: V417 = GT V415 0x0
0x867: V418 = ISZERO V417
0x868: V419 = ISZERO V418
0x869: V420 = 0x383
0x86c: THROWI V419
---
Entry stack: [V377, S0]
Stack pops: 0
Stack additions: [V415]
Exit stack: []

================================

Block 0x86d
[0x86d:0x9ab]
---
Predecessors: [0x7b3]
Successors: [0x9ac]
---
0x86d PUSH1 0x40
0x86f MLOAD
0x870 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x891 DUP2
0x892 MSTORE
0x893 PUSH1 0x4
0x895 ADD
0x896 DUP1
0x897 DUP1
0x898 PUSH1 0x20
0x89a ADD
0x89b DUP3
0x89c DUP2
0x89d SUB
0x89e DUP3
0x89f MSTORE
0x8a0 PUSH1 0x9
0x8a2 DUP2
0x8a3 MSTORE
0x8a4 PUSH1 0x20
0x8a6 ADD
0x8a7 DUP1
0x8a8 PUSH32 0x6d6f6e6579203e20300000000000000000000000000000000000000000000000
0x8c9 DUP2
0x8ca MSTORE
0x8cb POP
0x8cc PUSH1 0x20
0x8ce ADD
0x8cf SWAP2
0x8d0 POP
0x8d1 POP
0x8d2 PUSH1 0x40
0x8d4 MLOAD
0x8d5 DUP1
0x8d6 SWAP2
0x8d7 SUB
0x8d8 SWAP1
0x8d9 REVERT
0x8da JUMPDEST
0x8db PUSH1 0x0
0x8dd PUSH1 0x3
0x8df PUSH1 0x0
0x8e1 CALLER
0x8e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f7 AND
0x8f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90d AND
0x90e DUP2
0x90f MSTORE
0x910 PUSH1 0x20
0x912 ADD
0x913 SWAP1
0x914 DUP2
0x915 MSTORE
0x916 PUSH1 0x20
0x918 ADD
0x919 PUSH1 0x0
0x91b SHA3
0x91c DUP2
0x91d SWAP1
0x91e SSTORE
0x91f POP
0x920 PUSH1 0x2
0x922 PUSH1 0x0
0x924 SWAP1
0x925 SLOAD
0x926 SWAP1
0x927 PUSH2 0x100
0x92a EXP
0x92b SWAP1
0x92c DIV
0x92d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x942 AND
0x943 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x958 AND
0x959 PUSH4 0x55684aa6
0x95e DUP4
0x95f PUSH1 0x40
0x961 MLOAD
0x962 DUP3
0x963 PUSH4 0xffffffff
0x968 AND
0x969 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x987 MUL
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x4
0x98c ADD
0x98d DUP1
0x98e DUP3
0x98f DUP2
0x990 MSTORE
0x991 PUSH1 0x20
0x993 ADD
0x994 SWAP2
0x995 POP
0x996 POP
0x997 PUSH1 0x20
0x999 PUSH1 0x40
0x99b MLOAD
0x99c DUP1
0x99d DUP4
0x99e SUB
0x99f DUP2
0x9a0 PUSH1 0x0
0x9a2 DUP8
0x9a3 DUP1
0x9a4 EXTCODESIZE
0x9a5 ISZERO
0x9a6 DUP1
0x9a7 ISZERO
0x9a8 PUSH2 0x459
0x9ab JUMPI
---
0x86d: V421 = 0x40
0x86f: V422 = M[0x40]
0x870: V423 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x892: M[V422] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x893: V424 = 0x4
0x895: V425 = ADD 0x4 V422
0x898: V426 = 0x20
0x89a: V427 = ADD 0x20 V425
0x89d: V428 = SUB V427 V425
0x89f: M[V425] = V428
0x8a0: V429 = 0x9
0x8a3: M[V427] = 0x9
0x8a4: V430 = 0x20
0x8a6: V431 = ADD 0x20 V427
0x8a8: V432 = 0x6d6f6e6579203e20300000000000000000000000000000000000000000000000
0x8ca: M[V431] = 0x6d6f6e6579203e20300000000000000000000000000000000000000000000000
0x8cc: V433 = 0x20
0x8ce: V434 = ADD 0x20 V431
0x8d2: V435 = 0x40
0x8d4: V436 = M[0x40]
0x8d7: V437 = SUB V434 V436
0x8d9: REVERT V436 V437
0x8da: JUMPDEST 
0x8db: V438 = 0x0
0x8dd: V439 = 0x3
0x8df: V440 = 0x0
0x8e1: V441 = CALLER
0x8e2: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f7: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x8f8: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x90f: M[0x0] = V445
0x910: V446 = 0x20
0x912: V447 = ADD 0x20 0x0
0x915: M[0x20] = 0x3
0x916: V448 = 0x20
0x918: V449 = ADD 0x20 0x20
0x919: V450 = 0x0
0x91b: V451 = SHA3 0x0 0x40
0x91e: S[V451] = 0x0
0x920: V452 = 0x2
0x922: V453 = 0x0
0x925: V454 = S[0x2]
0x927: V455 = 0x100
0x92a: V456 = EXP 0x100 0x0
0x92c: V457 = DIV V454 0x1
0x92d: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x942: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x943: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x958: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x959: V462 = 0x55684aa6
0x95f: V463 = 0x40
0x961: V464 = M[0x40]
0x963: V465 = 0xffffffff
0x968: V466 = AND 0xffffffff 0x55684aa6
0x969: V467 = 0x100000000000000000000000000000000000000000000000000000000
0x987: V468 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x55684aa6
0x989: M[V464] = 0x55684aa600000000000000000000000000000000000000000000000000000000
0x98a: V469 = 0x4
0x98c: V470 = ADD 0x4 V464
0x990: M[V470] = S1
0x991: V471 = 0x20
0x993: V472 = ADD 0x20 V470
0x997: V473 = 0x20
0x999: V474 = 0x40
0x99b: V475 = M[0x40]
0x99e: V476 = SUB V472 V475
0x9a0: V477 = 0x0
0x9a4: V478 = EXTCODESIZE V461
0x9a5: V479 = ISZERO V478
0x9a7: V480 = ISZERO V479
0x9a8: V481 = 0x459
0x9ab: THROWI V480
---
Entry stack: [V415]
Stack pops: 0
Stack additions: [V479, V461, 0x0, V475, V476, V475, 0x20, V472, 0x55684aa6, V461, S0, S1]
Exit stack: []

================================

Block 0x9ac
[0x9ac:0x9ba]
---
Predecessors: [0x86d]
Successors: [0x9bb]
---
0x9ac PUSH1 0x0
0x9ae DUP1
0x9af REVERT
0x9b0 JUMPDEST
0x9b1 POP
0x9b2 GAS
0x9b3 CALL
0x9b4 ISZERO
0x9b5 DUP1
0x9b6 ISZERO
0x9b7 PUSH2 0x46d
0x9ba JUMPI
---
0x9ac: V482 = 0x0
0x9af: REVERT 0x0 0x0
0x9b0: JUMPDEST 
0x9b2: V483 = GAS
0x9b3: V484 = CALL V483 S1 S2 S3 S4 S5 S6
0x9b4: V485 = ISZERO V484
0x9b6: V486 = ISZERO V485
0x9b7: V487 = 0x46d
0x9ba: THROWI V486
---
Entry stack: [S11, S10, V461, 0x55684aa6, V472, 0x20, V475, V476, V475, 0x0, V461, V479]
Stack pops: 0
Stack additions: [V485]
Exit stack: []

================================

Block 0x9bb
[0x9bb:0x9d5]
---
Predecessors: [0x9ac]
Successors: [0x9d6]
---
0x9bb RETURNDATASIZE
0x9bc PUSH1 0x0
0x9be DUP1
0x9bf RETURNDATACOPY
0x9c0 RETURNDATASIZE
0x9c1 PUSH1 0x0
0x9c3 REVERT
0x9c4 JUMPDEST
0x9c5 POP
0x9c6 POP
0x9c7 POP
0x9c8 POP
0x9c9 PUSH1 0x40
0x9cb MLOAD
0x9cc RETURNDATASIZE
0x9cd PUSH1 0x20
0x9cf DUP2
0x9d0 LT
0x9d1 ISZERO
0x9d2 PUSH2 0x483
0x9d5 JUMPI
---
0x9bb: V488 = RETURNDATASIZE
0x9bc: V489 = 0x0
0x9bf: RETURNDATACOPY 0x0 0x0 V488
0x9c0: V490 = RETURNDATASIZE
0x9c1: V491 = 0x0
0x9c3: REVERT 0x0 V490
0x9c4: JUMPDEST 
0x9c9: V492 = 0x40
0x9cb: V493 = M[0x40]
0x9cc: V494 = RETURNDATASIZE
0x9cd: V495 = 0x20
0x9d0: V496 = LT V494 0x20
0x9d1: V497 = ISZERO V496
0x9d2: V498 = 0x483
0x9d5: THROWI V497
---
Entry stack: [V485]
Stack pops: 0
Stack additions: [V494, V493]
Exit stack: []

================================

Block 0x9d6
[0x9d6:0xa28]
---
Predecessors: [0x9bb]
Successors: [0xa29]
---
0x9d6 PUSH1 0x0
0x9d8 DUP1
0x9d9 REVERT
0x9da JUMPDEST
0x9db DUP2
0x9dc ADD
0x9dd SWAP1
0x9de DUP1
0x9df DUP1
0x9e0 MLOAD
0x9e1 SWAP1
0x9e2 PUSH1 0x20
0x9e4 ADD
0x9e5 SWAP1
0x9e6 SWAP3
0x9e7 SWAP2
0x9e8 SWAP1
0x9e9 POP
0x9ea POP
0x9eb POP
0x9ec POP
0x9ed CALLER
0x9ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa03 AND
0xa04 PUSH2 0x8fc
0xa07 DUP3
0xa08 SWAP1
0xa09 DUP2
0xa0a ISZERO
0xa0b MUL
0xa0c SWAP1
0xa0d PUSH1 0x40
0xa0f MLOAD
0xa10 PUSH1 0x0
0xa12 PUSH1 0x40
0xa14 MLOAD
0xa15 DUP1
0xa16 DUP4
0xa17 SUB
0xa18 DUP2
0xa19 DUP6
0xa1a DUP9
0xa1b DUP9
0xa1c CALL
0xa1d SWAP4
0xa1e POP
0xa1f POP
0xa20 POP
0xa21 POP
0xa22 ISZERO
0xa23 DUP1
0xa24 ISZERO
0xa25 PUSH2 0x4db
0xa28 JUMPI
---
0x9d6: V499 = 0x0
0x9d9: REVERT 0x0 0x0
0x9da: JUMPDEST 
0x9dc: V500 = ADD S1 S0
0x9e0: V501 = M[S1]
0x9e2: V502 = 0x20
0x9e4: V503 = ADD 0x20 S1
0x9ed: V504 = CALLER
0x9ee: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0xa03: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0xa04: V507 = 0x8fc
0xa0a: V508 = ISZERO S2
0xa0b: V509 = MUL V508 0x8fc
0xa0d: V510 = 0x40
0xa0f: V511 = M[0x40]
0xa10: V512 = 0x0
0xa12: V513 = 0x40
0xa14: V514 = M[0x40]
0xa17: V515 = SUB V511 V514
0xa1c: V516 = CALL V509 V506 S2 V514 V515 V514 0x0
0xa22: V517 = ISZERO V516
0xa24: V518 = ISZERO V517
0xa25: V519 = 0x4db
0xa28: THROWI V518
---
Entry stack: [V493, V494]
Stack pops: 0
Stack additions: [V517, S2]
Exit stack: []

================================

Block 0xa29
[0xa29:0xa74]
---
Predecessors: [0x9d6]
Successors: [0xa75]
---
0xa29 RETURNDATASIZE
0xa2a PUSH1 0x0
0xa2c DUP1
0xa2d RETURNDATACOPY
0xa2e RETURNDATASIZE
0xa2f PUSH1 0x0
0xa31 REVERT
0xa32 JUMPDEST
0xa33 POP
0xa34 POP
0xa35 POP
0xa36 STOP
0xa37 JUMPDEST
0xa38 PUSH2 0x514
0xa3b PUSH1 0x4
0xa3d DUP1
0xa3e CALLDATASIZE
0xa3f SUB
0xa40 DUP2
0xa41 ADD
0xa42 SWAP1
0xa43 DUP1
0xa44 DUP1
0xa45 CALLDATALOAD
0xa46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5b AND
0xa5c SWAP1
0xa5d PUSH1 0x20
0xa5f ADD
0xa60 SWAP1
0xa61 SWAP3
0xa62 SWAP2
0xa63 SWAP1
0xa64 POP
0xa65 POP
0xa66 POP
0xa67 PUSH2 0x7e1
0xa6a JUMP
0xa6b JUMPDEST
0xa6c STOP
0xa6d JUMPDEST
0xa6e CALLVALUE
0xa6f DUP1
0xa70 ISZERO
0xa71 PUSH2 0x522
0xa74 JUMPI
---
0xa29: V520 = RETURNDATASIZE
0xa2a: V521 = 0x0
0xa2d: RETURNDATACOPY 0x0 0x0 V520
0xa2e: V522 = RETURNDATASIZE
0xa2f: V523 = 0x0
0xa31: REVERT 0x0 V522
0xa32: JUMPDEST 
0xa36: STOP 
0xa37: JUMPDEST 
0xa38: V524 = 0x514
0xa3b: V525 = 0x4
0xa3e: V526 = CALLDATASIZE
0xa3f: V527 = SUB V526 0x4
0xa41: V528 = ADD 0x4 V527
0xa45: V529 = CALLDATALOAD 0x4
0xa46: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5b: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0xa5d: V532 = 0x20
0xa5f: V533 = ADD 0x20 0x4
0xa67: V534 = 0x7e1
0xa6a: THROW 
0xa6b: JUMPDEST 
0xa6c: STOP 
0xa6d: JUMPDEST 
0xa6e: V535 = CALLVALUE
0xa70: V536 = ISZERO V535
0xa71: V537 = 0x522
0xa74: THROWI V536
---
Entry stack: [S1, V517]
Stack pops: 0
Stack additions: [V531, 0x514, V535]
Exit stack: []

================================

Block 0xa75
[0xa75:0xab7]
---
Predecessors: [0xa29]
Successors: [0xab8]
---
0xa75 PUSH1 0x0
0xa77 DUP1
0xa78 REVERT
0xa79 JUMPDEST
0xa7a POP
0xa7b PUSH2 0x557
0xa7e PUSH1 0x4
0xa80 DUP1
0xa81 CALLDATASIZE
0xa82 SUB
0xa83 DUP2
0xa84 ADD
0xa85 SWAP1
0xa86 DUP1
0xa87 DUP1
0xa88 CALLDATALOAD
0xa89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9e AND
0xa9f SWAP1
0xaa0 PUSH1 0x20
0xaa2 ADD
0xaa3 SWAP1
0xaa4 SWAP3
0xaa5 SWAP2
0xaa6 SWAP1
0xaa7 POP
0xaa8 POP
0xaa9 POP
0xaaa PUSH2 0x93d
0xaad JUMP
0xaae JUMPDEST
0xaaf STOP
0xab0 JUMPDEST
0xab1 CALLVALUE
0xab2 DUP1
0xab3 ISZERO
0xab4 PUSH2 0x565
0xab7 JUMPI
---
0xa75: V538 = 0x0
0xa78: REVERT 0x0 0x0
0xa79: JUMPDEST 
0xa7b: V539 = 0x557
0xa7e: V540 = 0x4
0xa81: V541 = CALLDATASIZE
0xa82: V542 = SUB V541 0x4
0xa84: V543 = ADD 0x4 V542
0xa88: V544 = CALLDATALOAD 0x4
0xa89: V545 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9e: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0xaa0: V547 = 0x20
0xaa2: V548 = ADD 0x20 0x4
0xaaa: V549 = 0x93d
0xaad: THROW 
0xaae: JUMPDEST 
0xaaf: STOP 
0xab0: JUMPDEST 
0xab1: V550 = CALLVALUE
0xab3: V551 = ISZERO V550
0xab4: V552 = 0x565
0xab7: THROWI V551
---
Entry stack: [V535]
Stack pops: 0
Stack additions: [V546, 0x557, V550]
Exit stack: []

================================

Block 0xab8
[0xab8:0xb3c]
---
Predecessors: [0xa75]
Successors: [0xb3d]
---
0xab8 PUSH1 0x0
0xaba DUP1
0xabb REVERT
0xabc JUMPDEST
0xabd POP
0xabe PUSH2 0x5c4
0xac1 PUSH1 0x4
0xac3 DUP1
0xac4 CALLDATASIZE
0xac5 SUB
0xac6 DUP2
0xac7 ADD
0xac8 SWAP1
0xac9 DUP1
0xaca DUP1
0xacb CALLDATALOAD
0xacc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae1 AND
0xae2 SWAP1
0xae3 PUSH1 0x20
0xae5 ADD
0xae6 SWAP1
0xae7 SWAP3
0xae8 SWAP2
0xae9 SWAP1
0xaea DUP1
0xaeb CALLDATALOAD
0xaec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb01 AND
0xb02 SWAP1
0xb03 PUSH1 0x20
0xb05 ADD
0xb06 SWAP1
0xb07 SWAP3
0xb08 SWAP2
0xb09 SWAP1
0xb0a DUP1
0xb0b CALLDATALOAD
0xb0c SWAP1
0xb0d PUSH1 0x20
0xb0f ADD
0xb10 SWAP1
0xb11 SWAP3
0xb12 SWAP2
0xb13 SWAP1
0xb14 POP
0xb15 POP
0xb16 POP
0xb17 PUSH2 0xb6e
0xb1a JUMP
0xb1b JUMPDEST
0xb1c PUSH1 0x40
0xb1e MLOAD
0xb1f DUP1
0xb20 DUP3
0xb21 ISZERO
0xb22 ISZERO
0xb23 ISZERO
0xb24 ISZERO
0xb25 DUP2
0xb26 MSTORE
0xb27 PUSH1 0x20
0xb29 ADD
0xb2a SWAP2
0xb2b POP
0xb2c POP
0xb2d PUSH1 0x40
0xb2f MLOAD
0xb30 DUP1
0xb31 SWAP2
0xb32 SUB
0xb33 SWAP1
0xb34 RETURN
0xb35 JUMPDEST
0xb36 CALLVALUE
0xb37 DUP1
0xb38 ISZERO
0xb39 PUSH2 0x5ea
0xb3c JUMPI
---
0xab8: V553 = 0x0
0xabb: REVERT 0x0 0x0
0xabc: JUMPDEST 
0xabe: V554 = 0x5c4
0xac1: V555 = 0x4
0xac4: V556 = CALLDATASIZE
0xac5: V557 = SUB V556 0x4
0xac7: V558 = ADD 0x4 V557
0xacb: V559 = CALLDATALOAD 0x4
0xacc: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0xae1: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0xae3: V562 = 0x20
0xae5: V563 = ADD 0x20 0x4
0xaeb: V564 = CALLDATALOAD 0x24
0xaec: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0xb01: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0xb03: V567 = 0x20
0xb05: V568 = ADD 0x20 0x24
0xb0b: V569 = CALLDATALOAD 0x44
0xb0d: V570 = 0x20
0xb0f: V571 = ADD 0x20 0x44
0xb17: V572 = 0xb6e
0xb1a: THROW 
0xb1b: JUMPDEST 
0xb1c: V573 = 0x40
0xb1e: V574 = M[0x40]
0xb21: V575 = ISZERO S0
0xb22: V576 = ISZERO V575
0xb23: V577 = ISZERO V576
0xb24: V578 = ISZERO V577
0xb26: M[V574] = V578
0xb27: V579 = 0x20
0xb29: V580 = ADD 0x20 V574
0xb2d: V581 = 0x40
0xb2f: V582 = M[0x40]
0xb32: V583 = SUB V580 V582
0xb34: RETURN V582 V583
0xb35: JUMPDEST 
0xb36: V584 = CALLVALUE
0xb38: V585 = ISZERO V584
0xb39: V586 = 0x5ea
0xb3c: THROWI V585
---
Entry stack: [V550]
Stack pops: 0
Stack additions: [V569, V566, V561, 0x5c4, V584]
Exit stack: []

================================

Block 0xb3d
[0xb3d:0xb53]
---
Predecessors: [0xab8]
Successors: [0xb54]
---
0xb3d PUSH1 0x0
0xb3f DUP1
0xb40 REVERT
0xb41 JUMPDEST
0xb42 POP
0xb43 PUSH2 0x5f3
0xb46 PUSH2 0xd1b
0xb49 JUMP
0xb4a JUMPDEST
0xb4b STOP
0xb4c JUMPDEST
0xb4d CALLVALUE
0xb4e DUP1
0xb4f ISZERO
0xb50 PUSH2 0x601
0xb53 JUMPI
---
0xb3d: V587 = 0x0
0xb40: REVERT 0x0 0x0
0xb41: JUMPDEST 
0xb43: V588 = 0x5f3
0xb46: V589 = 0xd1b
0xb49: THROW 
0xb4a: JUMPDEST 
0xb4b: STOP 
0xb4c: JUMPDEST 
0xb4d: V590 = CALLVALUE
0xb4f: V591 = ISZERO V590
0xb50: V592 = 0x601
0xb53: THROWI V591
---
Entry stack: [V584]
Stack pops: 0
Stack additions: [0x5f3, V590]
Exit stack: []

================================

Block 0xb54
[0xb54:0xbaa]
---
Predecessors: [0xb3d]
Successors: [0xbab]
---
0xb54 PUSH1 0x0
0xb56 DUP1
0xb57 REVERT
0xb58 JUMPDEST
0xb59 POP
0xb5a PUSH2 0x60a
0xb5d PUSH2 0xedf
0xb60 JUMP
0xb61 JUMPDEST
0xb62 PUSH1 0x40
0xb64 MLOAD
0xb65 DUP1
0xb66 DUP3
0xb67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7c AND
0xb7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb92 AND
0xb93 DUP2
0xb94 MSTORE
0xb95 PUSH1 0x20
0xb97 ADD
0xb98 SWAP2
0xb99 POP
0xb9a POP
0xb9b PUSH1 0x40
0xb9d MLOAD
0xb9e DUP1
0xb9f SWAP2
0xba0 SUB
0xba1 SWAP1
0xba2 RETURN
0xba3 JUMPDEST
0xba4 CALLVALUE
0xba5 DUP1
0xba6 ISZERO
0xba7 PUSH2 0x658
0xbaa JUMPI
---
0xb54: V593 = 0x0
0xb57: REVERT 0x0 0x0
0xb58: JUMPDEST 
0xb5a: V594 = 0x60a
0xb5d: V595 = 0xedf
0xb60: THROW 
0xb61: JUMPDEST 
0xb62: V596 = 0x40
0xb64: V597 = M[0x40]
0xb67: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7c: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb7d: V600 = 0xffffffffffffffffffffffffffffffffffffffff
0xb92: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0xb94: M[V597] = V601
0xb95: V602 = 0x20
0xb97: V603 = ADD 0x20 V597
0xb9b: V604 = 0x40
0xb9d: V605 = M[0x40]
0xba0: V606 = SUB V603 V605
0xba2: RETURN V605 V606
0xba3: JUMPDEST 
0xba4: V607 = CALLVALUE
0xba6: V608 = ISZERO V607
0xba7: V609 = 0x658
0xbaa: THROWI V608
---
Entry stack: [V590]
Stack pops: 0
Stack additions: [0x60a, V607]
Exit stack: []

================================

Block 0xbab
[0xbab:0xc01]
---
Predecessors: [0xb54]
Successors: [0xc02]
---
0xbab PUSH1 0x0
0xbad DUP1
0xbae REVERT
0xbaf JUMPDEST
0xbb0 POP
0xbb1 PUSH2 0x68d
0xbb4 PUSH1 0x4
0xbb6 DUP1
0xbb7 CALLDATASIZE
0xbb8 SUB
0xbb9 DUP2
0xbba ADD
0xbbb SWAP1
0xbbc DUP1
0xbbd DUP1
0xbbe CALLDATALOAD
0xbbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd4 AND
0xbd5 SWAP1
0xbd6 PUSH1 0x20
0xbd8 ADD
0xbd9 SWAP1
0xbda SWAP3
0xbdb SWAP2
0xbdc SWAP1
0xbdd POP
0xbde POP
0xbdf POP
0xbe0 PUSH2 0xf04
0xbe3 JUMP
0xbe4 JUMPDEST
0xbe5 PUSH1 0x40
0xbe7 MLOAD
0xbe8 DUP1
0xbe9 DUP3
0xbea DUP2
0xbeb MSTORE
0xbec PUSH1 0x20
0xbee ADD
0xbef SWAP2
0xbf0 POP
0xbf1 POP
0xbf2 PUSH1 0x40
0xbf4 MLOAD
0xbf5 DUP1
0xbf6 SWAP2
0xbf7 SUB
0xbf8 SWAP1
0xbf9 RETURN
0xbfa JUMPDEST
0xbfb CALLVALUE
0xbfc DUP1
0xbfd ISZERO
0xbfe PUSH2 0x6af
0xc01 JUMPI
---
0xbab: V610 = 0x0
0xbae: REVERT 0x0 0x0
0xbaf: JUMPDEST 
0xbb1: V611 = 0x68d
0xbb4: V612 = 0x4
0xbb7: V613 = CALLDATASIZE
0xbb8: V614 = SUB V613 0x4
0xbba: V615 = ADD 0x4 V614
0xbbe: V616 = CALLDATALOAD 0x4
0xbbf: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd4: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0xbd6: V619 = 0x20
0xbd8: V620 = ADD 0x20 0x4
0xbe0: V621 = 0xf04
0xbe3: THROW 
0xbe4: JUMPDEST 
0xbe5: V622 = 0x40
0xbe7: V623 = M[0x40]
0xbeb: M[V623] = S0
0xbec: V624 = 0x20
0xbee: V625 = ADD 0x20 V623
0xbf2: V626 = 0x40
0xbf4: V627 = M[0x40]
0xbf7: V628 = SUB V625 V627
0xbf9: RETURN V627 V628
0xbfa: JUMPDEST 
0xbfb: V629 = CALLVALUE
0xbfd: V630 = ISZERO V629
0xbfe: V631 = 0x6af
0xc01: THROWI V630
---
Entry stack: [V607]
Stack pops: 0
Stack additions: [V618, 0x68d, V629]
Exit stack: []

================================

Block 0xc02
[0xc02:0xc58]
---
Predecessors: [0xbab]
Successors: [0xc59]
---
0xc02 PUSH1 0x0
0xc04 DUP1
0xc05 REVERT
0xc06 JUMPDEST
0xc07 POP
0xc08 PUSH2 0x6b8
0xc0b PUSH2 0xf1c
0xc0e JUMP
0xc0f JUMPDEST
0xc10 PUSH1 0x40
0xc12 MLOAD
0xc13 DUP1
0xc14 DUP3
0xc15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2a AND
0xc2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc40 AND
0xc41 DUP2
0xc42 MSTORE
0xc43 PUSH1 0x20
0xc45 ADD
0xc46 SWAP2
0xc47 POP
0xc48 POP
0xc49 PUSH1 0x40
0xc4b MLOAD
0xc4c DUP1
0xc4d SWAP2
0xc4e SUB
0xc4f SWAP1
0xc50 RETURN
0xc51 JUMPDEST
0xc52 CALLVALUE
0xc53 DUP1
0xc54 ISZERO
0xc55 PUSH2 0x706
0xc58 JUMPI
---
0xc02: V632 = 0x0
0xc05: REVERT 0x0 0x0
0xc06: JUMPDEST 
0xc08: V633 = 0x6b8
0xc0b: V634 = 0xf1c
0xc0e: THROW 
0xc0f: JUMPDEST 
0xc10: V635 = 0x40
0xc12: V636 = M[0x40]
0xc15: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2a: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xc2b: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xc40: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0xc42: M[V636] = V640
0xc43: V641 = 0x20
0xc45: V642 = ADD 0x20 V636
0xc49: V643 = 0x40
0xc4b: V644 = M[0x40]
0xc4e: V645 = SUB V642 V644
0xc50: RETURN V644 V645
0xc51: JUMPDEST 
0xc52: V646 = CALLVALUE
0xc54: V647 = ISZERO V646
0xc55: V648 = 0x706
0xc58: THROWI V647
---
Entry stack: [V629]
Stack pops: 0
Stack additions: [0x6b8, V646]
Exit stack: []

================================

Block 0xc59
[0xc59:0xcaf]
---
Predecessors: [0xc02]
Successors: [0xcb0]
---
0xc59 PUSH1 0x0
0xc5b DUP1
0xc5c REVERT
0xc5d JUMPDEST
0xc5e POP
0xc5f PUSH2 0x70f
0xc62 PUSH2 0xf42
0xc65 JUMP
0xc66 JUMPDEST
0xc67 PUSH1 0x40
0xc69 MLOAD
0xc6a DUP1
0xc6b DUP3
0xc6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc81 AND
0xc82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc97 AND
0xc98 DUP2
0xc99 MSTORE
0xc9a PUSH1 0x20
0xc9c ADD
0xc9d SWAP2
0xc9e POP
0xc9f POP
0xca0 PUSH1 0x40
0xca2 MLOAD
0xca3 DUP1
0xca4 SWAP2
0xca5 SUB
0xca6 SWAP1
0xca7 RETURN
0xca8 JUMPDEST
0xca9 CALLVALUE
0xcaa DUP1
0xcab ISZERO
0xcac PUSH2 0x75d
0xcaf JUMPI
---
0xc59: V649 = 0x0
0xc5c: REVERT 0x0 0x0
0xc5d: JUMPDEST 
0xc5f: V650 = 0x70f
0xc62: V651 = 0xf42
0xc65: THROW 
0xc66: JUMPDEST 
0xc67: V652 = 0x40
0xc69: V653 = M[0x40]
0xc6c: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xc81: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xc82: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xc97: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0xc99: M[V653] = V657
0xc9a: V658 = 0x20
0xc9c: V659 = ADD 0x20 V653
0xca0: V660 = 0x40
0xca2: V661 = M[0x40]
0xca5: V662 = SUB V659 V661
0xca7: RETURN V661 V662
0xca8: JUMPDEST 
0xca9: V663 = CALLVALUE
0xcab: V664 = ISZERO V663
0xcac: V665 = 0x75d
0xcaf: THROWI V664
---
Entry stack: [V646]
Stack pops: 0
Stack additions: [0x70f, V663]
Exit stack: []

================================

Block 0xcb0
[0xcb0:0xcea]
---
Predecessors: [0xc59]
Successors: []
---
0xcb0 PUSH1 0x0
0xcb2 DUP1
0xcb3 REVERT
0xcb4 JUMPDEST
0xcb5 POP
0xcb6 PUSH2 0x792
0xcb9 PUSH1 0x4
0xcbb DUP1
0xcbc CALLDATASIZE
0xcbd SUB
0xcbe DUP2
0xcbf ADD
0xcc0 SWAP1
0xcc1 DUP1
0xcc2 DUP1
0xcc3 CALLDATALOAD
0xcc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd9 AND
0xcda SWAP1
0xcdb PUSH1 0x20
0xcdd ADD
0xcde SWAP1
0xcdf SWAP3
0xce0 SWAP2
0xce1 SWAP1
0xce2 POP
0xce3 POP
0xce4 POP
0xce5 PUSH2 0xf68
0xce8 JUMP
0xce9 JUMPDEST
0xcea STOP
---
0xcb0: V666 = 0x0
0xcb3: REVERT 0x0 0x0
0xcb4: JUMPDEST 
0xcb6: V667 = 0x792
0xcb9: V668 = 0x4
0xcbc: V669 = CALLDATASIZE
0xcbd: V670 = SUB V669 0x4
0xcbf: V671 = ADD 0x4 V670
0xcc3: V672 = CALLDATALOAD 0x4
0xcc4: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd9: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0xcdb: V675 = 0x20
0xcdd: V676 = ADD 0x20 0x4
0xce5: V677 = 0xf68
0xce8: THROW 
0xce9: JUMPDEST 
0xcea: STOP 
---
Entry stack: [V663]
Stack pops: 0
Stack additions: [V674, 0x792]
Exit stack: []

================================

Block 0xceb
[0xceb:0xcf2]
---
Predecessors: [0x122a]
Successors: [0xcf3]
---
0xceb JUMPDEST
0xcec CALLVALUE
0xced DUP1
0xcee ISZERO
0xcef PUSH2 0x7a0
0xcf2 JUMPI
---
0xceb: JUMPDEST 
0xcec: V678 = CALLVALUE
0xcee: V679 = ISZERO V678
0xcef: V680 = 0x7a0
0xcf2: THROWI V679
---
Entry stack: [V932]
Stack pops: 0
Stack additions: [V678]
Exit stack: [V932, V678]

================================

Block 0xcf3
[0xcf3:0xd8e]
---
Predecessors: [0xceb]
Successors: [0xd8f]
---
0xcf3 PUSH1 0x0
0xcf5 DUP1
0xcf6 REVERT
0xcf7 JUMPDEST
0xcf8 POP
0xcf9 PUSH2 0x7df
0xcfc PUSH1 0x4
0xcfe DUP1
0xcff CALLDATASIZE
0xd00 SUB
0xd01 DUP2
0xd02 ADD
0xd03 SWAP1
0xd04 DUP1
0xd05 DUP1
0xd06 CALLDATALOAD
0xd07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1c AND
0xd1d SWAP1
0xd1e PUSH1 0x20
0xd20 ADD
0xd21 SWAP1
0xd22 SWAP3
0xd23 SWAP2
0xd24 SWAP1
0xd25 DUP1
0xd26 CALLDATALOAD
0xd27 SWAP1
0xd28 PUSH1 0x20
0xd2a ADD
0xd2b SWAP1
0xd2c SWAP3
0xd2d SWAP2
0xd2e SWAP1
0xd2f POP
0xd30 POP
0xd31 POP
0xd32 PUSH2 0x1115
0xd35 JUMP
0xd36 JUMPDEST
0xd37 STOP
0xd38 JUMPDEST
0xd39 PUSH1 0x0
0xd3b DUP1
0xd3c SWAP1
0xd3d SLOAD
0xd3e SWAP1
0xd3f PUSH2 0x100
0xd42 EXP
0xd43 SWAP1
0xd44 DIV
0xd45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5a AND
0xd5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd70 AND
0xd71 CALLER
0xd72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd87 AND
0xd88 EQ
0xd89 ISZERO
0xd8a ISZERO
0xd8b PUSH2 0x8a5
0xd8e JUMPI
---
0xcf3: V681 = 0x0
0xcf6: REVERT 0x0 0x0
0xcf7: JUMPDEST 
0xcf9: V682 = 0x7df
0xcfc: V683 = 0x4
0xcff: V684 = CALLDATASIZE
0xd00: V685 = SUB V684 0x4
0xd02: V686 = ADD 0x4 V685
0xd06: V687 = CALLDATALOAD 0x4
0xd07: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1c: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0xd1e: V690 = 0x20
0xd20: V691 = ADD 0x20 0x4
0xd26: V692 = CALLDATALOAD 0x24
0xd28: V693 = 0x20
0xd2a: V694 = ADD 0x20 0x24
0xd32: V695 = 0x1115
0xd35: THROW 
0xd36: JUMPDEST 
0xd37: STOP 
0xd38: JUMPDEST 
0xd39: V696 = 0x0
0xd3d: V697 = S[0x0]
0xd3f: V698 = 0x100
0xd42: V699 = EXP 0x100 0x0
0xd44: V700 = DIV V697 0x1
0xd45: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5a: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0xd5b: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xd70: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0xd71: V705 = CALLER
0xd72: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xd87: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0xd88: V708 = EQ V707 V704
0xd89: V709 = ISZERO V708
0xd8a: V710 = ISZERO V709
0xd8b: V711 = 0x8a5
0xd8e: THROWI V710
---
Entry stack: [V932, V678]
Stack pops: 0
Stack additions: [V692, V689, 0x7df]
Exit stack: []

================================

Block 0xd8f
[0xd8f:0xeec]
---
Predecessors: [0xcf3]
Successors: [0xeed]
---
0xd8f PUSH1 0x40
0xd91 MLOAD
0xd92 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdb3 DUP2
0xdb4 MSTORE
0xdb5 PUSH1 0x4
0xdb7 ADD
0xdb8 DUP1
0xdb9 DUP1
0xdba PUSH1 0x20
0xdbc ADD
0xdbd DUP3
0xdbe DUP2
0xdbf SUB
0xdc0 DUP3
0xdc1 MSTORE
0xdc2 PUSH1 0x13
0xdc4 DUP2
0xdc5 MSTORE
0xdc6 PUSH1 0x20
0xdc8 ADD
0xdc9 DUP1
0xdca PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xdeb DUP2
0xdec MSTORE
0xded POP
0xdee PUSH1 0x20
0xdf0 ADD
0xdf1 SWAP2
0xdf2 POP
0xdf3 POP
0xdf4 PUSH1 0x40
0xdf6 MLOAD
0xdf7 DUP1
0xdf8 SWAP2
0xdf9 SUB
0xdfa SWAP1
0xdfb REVERT
0xdfc JUMPDEST
0xdfd PUSH2 0x8f7
0xe00 CALLVALUE
0xe01 PUSH1 0x3
0xe03 PUSH1 0x0
0xe05 DUP5
0xe06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1b AND
0xe1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe31 AND
0xe32 DUP2
0xe33 MSTORE
0xe34 PUSH1 0x20
0xe36 ADD
0xe37 SWAP1
0xe38 DUP2
0xe39 MSTORE
0xe3a PUSH1 0x20
0xe3c ADD
0xe3d PUSH1 0x0
0xe3f SHA3
0xe40 SLOAD
0xe41 PUSH2 0x1224
0xe44 SWAP1
0xe45 SWAP2
0xe46 SWAP1
0xe47 PUSH4 0xffffffff
0xe4c AND
0xe4d JUMP
0xe4e JUMPDEST
0xe4f PUSH1 0x3
0xe51 PUSH1 0x0
0xe53 DUP4
0xe54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe69 AND
0xe6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7f AND
0xe80 DUP2
0xe81 MSTORE
0xe82 PUSH1 0x20
0xe84 ADD
0xe85 SWAP1
0xe86 DUP2
0xe87 MSTORE
0xe88 PUSH1 0x20
0xe8a ADD
0xe8b PUSH1 0x0
0xe8d SHA3
0xe8e DUP2
0xe8f SWAP1
0xe90 SSTORE
0xe91 POP
0xe92 POP
0xe93 JUMP
0xe94 JUMPDEST
0xe95 PUSH1 0x0
0xe97 DUP1
0xe98 PUSH1 0x0
0xe9a SWAP1
0xe9b SLOAD
0xe9c SWAP1
0xe9d PUSH2 0x100
0xea0 EXP
0xea1 SWAP1
0xea2 DIV
0xea3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb8 AND
0xeb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xece AND
0xecf CALLER
0xed0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee5 AND
0xee6 EQ
0xee7 ISZERO
0xee8 ISZERO
0xee9 PUSH2 0xa03
0xeec JUMPI
---
0xd8f: V712 = 0x40
0xd91: V713 = M[0x40]
0xd92: V714 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdb4: M[V713] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdb5: V715 = 0x4
0xdb7: V716 = ADD 0x4 V713
0xdba: V717 = 0x20
0xdbc: V718 = ADD 0x20 V716
0xdbf: V719 = SUB V718 V716
0xdc1: M[V716] = V719
0xdc2: V720 = 0x13
0xdc5: M[V718] = 0x13
0xdc6: V721 = 0x20
0xdc8: V722 = ADD 0x20 V718
0xdca: V723 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xdec: M[V722] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xdee: V724 = 0x20
0xdf0: V725 = ADD 0x20 V722
0xdf4: V726 = 0x40
0xdf6: V727 = M[0x40]
0xdf9: V728 = SUB V725 V727
0xdfb: REVERT V727 V728
0xdfc: JUMPDEST 
0xdfd: V729 = 0x8f7
0xe00: V730 = CALLVALUE
0xe01: V731 = 0x3
0xe03: V732 = 0x0
0xe06: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1b: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe1c: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xe31: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0xe33: M[0x0] = V736
0xe34: V737 = 0x20
0xe36: V738 = ADD 0x20 0x0
0xe39: M[0x20] = 0x3
0xe3a: V739 = 0x20
0xe3c: V740 = ADD 0x20 0x20
0xe3d: V741 = 0x0
0xe3f: V742 = SHA3 0x0 0x40
0xe40: V743 = S[V742]
0xe41: V744 = 0x1224
0xe47: V745 = 0xffffffff
0xe4c: V746 = AND 0xffffffff 0x1224
0xe4d: THROW 
0xe4e: JUMPDEST 
0xe4f: V747 = 0x3
0xe51: V748 = 0x0
0xe54: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xe69: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xe6a: V751 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7f: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0xe81: M[0x0] = V752
0xe82: V753 = 0x20
0xe84: V754 = ADD 0x20 0x0
0xe87: M[0x20] = 0x3
0xe88: V755 = 0x20
0xe8a: V756 = ADD 0x20 0x20
0xe8b: V757 = 0x0
0xe8d: V758 = SHA3 0x0 0x40
0xe90: S[V758] = S0
0xe93: JUMP S2
0xe94: JUMPDEST 
0xe95: V759 = 0x0
0xe98: V760 = 0x0
0xe9b: V761 = S[0x0]
0xe9d: V762 = 0x100
0xea0: V763 = EXP 0x100 0x0
0xea2: V764 = DIV V761 0x1
0xea3: V765 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb8: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V764
0xeb9: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xece: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V766
0xecf: V769 = CALLER
0xed0: V770 = 0xffffffffffffffffffffffffffffffffffffffff
0xee5: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0xee6: V772 = EQ V771 V768
0xee7: V773 = ISZERO V772
0xee8: V774 = ISZERO V773
0xee9: V775 = 0xa03
0xeec: THROWI V774
---
Entry stack: []
Stack pops: 0
Stack additions: [V730, V743, 0x8f7, S0, 0x0]
Exit stack: []

================================

Block 0xeed
[0xeed:0xfa6]
---
Predecessors: [0xd8f]
Successors: [0xfa7]
---
0xeed PUSH1 0x40
0xeef MLOAD
0xef0 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xf11 DUP2
0xf12 MSTORE
0xf13 PUSH1 0x4
0xf15 ADD
0xf16 DUP1
0xf17 DUP1
0xf18 PUSH1 0x20
0xf1a ADD
0xf1b DUP3
0xf1c DUP2
0xf1d SUB
0xf1e DUP3
0xf1f MSTORE
0xf20 PUSH1 0x13
0xf22 DUP2
0xf23 MSTORE
0xf24 PUSH1 0x20
0xf26 ADD
0xf27 DUP1
0xf28 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xf49 DUP2
0xf4a MSTORE
0xf4b POP
0xf4c PUSH1 0x20
0xf4e ADD
0xf4f SWAP2
0xf50 POP
0xf51 POP
0xf52 PUSH1 0x40
0xf54 MLOAD
0xf55 DUP1
0xf56 SWAP2
0xf57 SUB
0xf58 SWAP1
0xf59 REVERT
0xf5a JUMPDEST
0xf5b PUSH1 0x3
0xf5d PUSH1 0x0
0xf5f DUP4
0xf60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf75 AND
0xf76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8b AND
0xf8c DUP2
0xf8d MSTORE
0xf8e PUSH1 0x20
0xf90 ADD
0xf91 SWAP1
0xf92 DUP2
0xf93 MSTORE
0xf94 PUSH1 0x20
0xf96 ADD
0xf97 PUSH1 0x0
0xf99 SHA3
0xf9a SLOAD
0xf9b SWAP1
0xf9c POP
0xf9d PUSH1 0x0
0xf9f DUP2
0xfa0 GT
0xfa1 ISZERO
0xfa2 ISZERO
0xfa3 PUSH2 0xabd
0xfa6 JUMPI
---
0xeed: V776 = 0x40
0xeef: V777 = M[0x40]
0xef0: V778 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xf12: M[V777] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xf13: V779 = 0x4
0xf15: V780 = ADD 0x4 V777
0xf18: V781 = 0x20
0xf1a: V782 = ADD 0x20 V780
0xf1d: V783 = SUB V782 V780
0xf1f: M[V780] = V783
0xf20: V784 = 0x13
0xf23: M[V782] = 0x13
0xf24: V785 = 0x20
0xf26: V786 = ADD 0x20 V782
0xf28: V787 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xf4a: M[V786] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xf4c: V788 = 0x20
0xf4e: V789 = ADD 0x20 V786
0xf52: V790 = 0x40
0xf54: V791 = M[0x40]
0xf57: V792 = SUB V789 V791
0xf59: REVERT V791 V792
0xf5a: JUMPDEST 
0xf5b: V793 = 0x3
0xf5d: V794 = 0x0
0xf60: V795 = 0xffffffffffffffffffffffffffffffffffffffff
0xf75: V796 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf76: V797 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8b: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V796
0xf8d: M[0x0] = V798
0xf8e: V799 = 0x20
0xf90: V800 = ADD 0x20 0x0
0xf93: M[0x20] = 0x3
0xf94: V801 = 0x20
0xf96: V802 = ADD 0x20 0x20
0xf97: V803 = 0x0
0xf99: V804 = SHA3 0x0 0x40
0xf9a: V805 = S[V804]
0xf9d: V806 = 0x0
0xfa0: V807 = GT V805 0x0
0xfa1: V808 = ISZERO V807
0xfa2: V809 = ISZERO V808
0xfa3: V810 = 0xabd
0xfa6: THROWI V809
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V805, S1]
Exit stack: []

================================

Block 0xfa7
[0xfa7:0x10b6]
---
Predecessors: [0xeed]
Successors: [0x10b7]
---
0xfa7 PUSH1 0x40
0xfa9 MLOAD
0xfaa PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfcb DUP2
0xfcc MSTORE
0xfcd PUSH1 0x4
0xfcf ADD
0xfd0 DUP1
0xfd1 DUP1
0xfd2 PUSH1 0x20
0xfd4 ADD
0xfd5 DUP3
0xfd6 DUP2
0xfd7 SUB
0xfd8 DUP3
0xfd9 MSTORE
0xfda PUSH1 0x9
0xfdc DUP2
0xfdd MSTORE
0xfde PUSH1 0x20
0xfe0 ADD
0xfe1 DUP1
0xfe2 PUSH32 0x6d6f6e6579203e20300000000000000000000000000000000000000000000000
0x1003 DUP2
0x1004 MSTORE
0x1005 POP
0x1006 PUSH1 0x20
0x1008 ADD
0x1009 SWAP2
0x100a POP
0x100b POP
0x100c PUSH1 0x40
0x100e MLOAD
0x100f DUP1
0x1010 SWAP2
0x1011 SUB
0x1012 SWAP1
0x1013 REVERT
0x1014 JUMPDEST
0x1015 PUSH1 0x0
0x1017 PUSH1 0x3
0x1019 PUSH1 0x0
0x101b DUP5
0x101c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1031 AND
0x1032 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1047 AND
0x1048 DUP2
0x1049 MSTORE
0x104a PUSH1 0x20
0x104c ADD
0x104d SWAP1
0x104e DUP2
0x104f MSTORE
0x1050 PUSH1 0x20
0x1052 ADD
0x1053 PUSH1 0x0
0x1055 SHA3
0x1056 DUP2
0x1057 SWAP1
0x1058 SSTORE
0x1059 POP
0x105a PUSH1 0x0
0x105c DUP1
0x105d SWAP1
0x105e SLOAD
0x105f SWAP1
0x1060 PUSH2 0x100
0x1063 EXP
0x1064 SWAP1
0x1065 DIV
0x1066 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107b AND
0x107c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1091 AND
0x1092 PUSH2 0x8fc
0x1095 DUP3
0x1096 SWAP1
0x1097 DUP2
0x1098 ISZERO
0x1099 MUL
0x109a SWAP1
0x109b PUSH1 0x40
0x109d MLOAD
0x109e PUSH1 0x0
0x10a0 PUSH1 0x40
0x10a2 MLOAD
0x10a3 DUP1
0x10a4 DUP4
0x10a5 SUB
0x10a6 DUP2
0x10a7 DUP6
0x10a8 DUP9
0x10a9 DUP9
0x10aa CALL
0x10ab SWAP4
0x10ac POP
0x10ad POP
0x10ae POP
0x10af POP
0x10b0 ISZERO
0x10b1 DUP1
0x10b2 ISZERO
0x10b3 PUSH2 0xb69
0x10b6 JUMPI
---
0xfa7: V811 = 0x40
0xfa9: V812 = M[0x40]
0xfaa: V813 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfcc: M[V812] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfcd: V814 = 0x4
0xfcf: V815 = ADD 0x4 V812
0xfd2: V816 = 0x20
0xfd4: V817 = ADD 0x20 V815
0xfd7: V818 = SUB V817 V815
0xfd9: M[V815] = V818
0xfda: V819 = 0x9
0xfdd: M[V817] = 0x9
0xfde: V820 = 0x20
0xfe0: V821 = ADD 0x20 V817
0xfe2: V822 = 0x6d6f6e6579203e20300000000000000000000000000000000000000000000000
0x1004: M[V821] = 0x6d6f6e6579203e20300000000000000000000000000000000000000000000000
0x1006: V823 = 0x20
0x1008: V824 = ADD 0x20 V821
0x100c: V825 = 0x40
0x100e: V826 = M[0x40]
0x1011: V827 = SUB V824 V826
0x1013: REVERT V826 V827
0x1014: JUMPDEST 
0x1015: V828 = 0x0
0x1017: V829 = 0x3
0x1019: V830 = 0x0
0x101c: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0x1031: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1032: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0x1047: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0x1049: M[0x0] = V834
0x104a: V835 = 0x20
0x104c: V836 = ADD 0x20 0x0
0x104f: M[0x20] = 0x3
0x1050: V837 = 0x20
0x1052: V838 = ADD 0x20 0x20
0x1053: V839 = 0x0
0x1055: V840 = SHA3 0x0 0x40
0x1058: S[V840] = 0x0
0x105a: V841 = 0x0
0x105e: V842 = S[0x0]
0x1060: V843 = 0x100
0x1063: V844 = EXP 0x100 0x0
0x1065: V845 = DIV V842 0x1
0x1066: V846 = 0xffffffffffffffffffffffffffffffffffffffff
0x107b: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0x107c: V848 = 0xffffffffffffffffffffffffffffffffffffffff
0x1091: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0x1092: V850 = 0x8fc
0x1098: V851 = ISZERO S0
0x1099: V852 = MUL V851 0x8fc
0x109b: V853 = 0x40
0x109d: V854 = M[0x40]
0x109e: V855 = 0x0
0x10a0: V856 = 0x40
0x10a2: V857 = M[0x40]
0x10a5: V858 = SUB V854 V857
0x10aa: V859 = CALL V852 V849 S0 V857 V858 V857 0x0
0x10b0: V860 = ISZERO V859
0x10b2: V861 = ISZERO V860
0x10b3: V862 = 0xb69
0x10b6: THROWI V861
---
Entry stack: [S1, V805]
Stack pops: 0
Stack additions: [V860, S0, S1]
Exit stack: []

================================

Block 0x10b7
[0x10b7:0x111d]
---
Predecessors: [0xfa7]
Successors: [0x111e]
---
0x10b7 RETURNDATASIZE
0x10b8 PUSH1 0x0
0x10ba DUP1
0x10bb RETURNDATACOPY
0x10bc RETURNDATASIZE
0x10bd PUSH1 0x0
0x10bf REVERT
0x10c0 JUMPDEST
0x10c1 POP
0x10c2 POP
0x10c3 POP
0x10c4 JUMP
0x10c5 JUMPDEST
0x10c6 PUSH1 0x0
0x10c8 DUP1
0x10c9 PUSH1 0x0
0x10cb SWAP1
0x10cc SLOAD
0x10cd SWAP1
0x10ce PUSH2 0x100
0x10d1 EXP
0x10d2 SWAP1
0x10d3 DIV
0x10d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e9 AND
0x10ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ff AND
0x1100 CALLER
0x1101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1116 AND
0x1117 EQ
0x1118 ISZERO
0x1119 ISZERO
0x111a PUSH2 0xc34
0x111d JUMPI
---
0x10b7: V863 = RETURNDATASIZE
0x10b8: V864 = 0x0
0x10bb: RETURNDATACOPY 0x0 0x0 V863
0x10bc: V865 = RETURNDATASIZE
0x10bd: V866 = 0x0
0x10bf: REVERT 0x0 V865
0x10c0: JUMPDEST 
0x10c4: JUMP S3
0x10c5: JUMPDEST 
0x10c6: V867 = 0x0
0x10c9: V868 = 0x0
0x10cc: V869 = S[0x0]
0x10ce: V870 = 0x100
0x10d1: V871 = EXP 0x100 0x0
0x10d3: V872 = DIV V869 0x1
0x10d4: V873 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e9: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff V872
0x10ea: V875 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ff: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff V874
0x1100: V877 = CALLER
0x1101: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0x1116: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0x1117: V880 = EQ V879 V876
0x1118: V881 = ISZERO V880
0x1119: V882 = ISZERO V881
0x111a: V883 = 0xc34
0x111d: THROWI V882
---
Entry stack: [S2, S1, V860]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x111e
[0x111e:0x1229]
---
Predecessors: [0x10b7]
Successors: [0x122a]
---
0x111e PUSH1 0x40
0x1120 MLOAD
0x1121 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1142 DUP2
0x1143 MSTORE
0x1144 PUSH1 0x4
0x1146 ADD
0x1147 DUP1
0x1148 DUP1
0x1149 PUSH1 0x20
0x114b ADD
0x114c DUP3
0x114d DUP2
0x114e SUB
0x114f DUP3
0x1150 MSTORE
0x1151 PUSH1 0x13
0x1153 DUP2
0x1154 MSTORE
0x1155 PUSH1 0x20
0x1157 ADD
0x1158 DUP1
0x1159 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x117a DUP2
0x117b MSTORE
0x117c POP
0x117d PUSH1 0x20
0x117f ADD
0x1180 SWAP2
0x1181 POP
0x1182 POP
0x1183 PUSH1 0x40
0x1185 MLOAD
0x1186 DUP1
0x1187 SWAP2
0x1188 SUB
0x1189 SWAP1
0x118a REVERT
0x118b JUMPDEST
0x118c DUP4
0x118d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a2 AND
0x11a3 PUSH4 0xa9059cbb
0x11a8 DUP5
0x11a9 DUP5
0x11aa PUSH1 0x40
0x11ac MLOAD
0x11ad DUP4
0x11ae PUSH4 0xffffffff
0x11b3 AND
0x11b4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11d2 MUL
0x11d3 DUP2
0x11d4 MSTORE
0x11d5 PUSH1 0x4
0x11d7 ADD
0x11d8 DUP1
0x11d9 DUP4
0x11da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ef AND
0x11f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1205 AND
0x1206 DUP2
0x1207 MSTORE
0x1208 PUSH1 0x20
0x120a ADD
0x120b DUP3
0x120c DUP2
0x120d MSTORE
0x120e PUSH1 0x20
0x1210 ADD
0x1211 SWAP3
0x1212 POP
0x1213 POP
0x1214 POP
0x1215 PUSH1 0x20
0x1217 PUSH1 0x40
0x1219 MLOAD
0x121a DUP1
0x121b DUP4
0x121c SUB
0x121d DUP2
0x121e PUSH1 0x0
0x1220 DUP8
0x1221 DUP1
0x1222 EXTCODESIZE
0x1223 ISZERO
0x1224 DUP1
0x1225 ISZERO
0x1226 PUSH2 0xcd7
0x1229 JUMPI
---
0x111e: V884 = 0x40
0x1120: V885 = M[0x40]
0x1121: V886 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1143: M[V885] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1144: V887 = 0x4
0x1146: V888 = ADD 0x4 V885
0x1149: V889 = 0x20
0x114b: V890 = ADD 0x20 V888
0x114e: V891 = SUB V890 V888
0x1150: M[V888] = V891
0x1151: V892 = 0x13
0x1154: M[V890] = 0x13
0x1155: V893 = 0x20
0x1157: V894 = ADD 0x20 V890
0x1159: V895 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x117b: M[V894] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x117d: V896 = 0x20
0x117f: V897 = ADD 0x20 V894
0x1183: V898 = 0x40
0x1185: V899 = M[0x40]
0x1188: V900 = SUB V897 V899
0x118a: REVERT V899 V900
0x118b: JUMPDEST 
0x118d: V901 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a2: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x11a3: V903 = 0xa9059cbb
0x11aa: V904 = 0x40
0x11ac: V905 = M[0x40]
0x11ae: V906 = 0xffffffff
0x11b3: V907 = AND 0xffffffff 0xa9059cbb
0x11b4: V908 = 0x100000000000000000000000000000000000000000000000000000000
0x11d2: V909 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x11d4: M[V905] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x11d5: V910 = 0x4
0x11d7: V911 = ADD 0x4 V905
0x11da: V912 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ef: V913 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x11f0: V914 = 0xffffffffffffffffffffffffffffffffffffffff
0x1205: V915 = AND 0xffffffffffffffffffffffffffffffffffffffff V913
0x1207: M[V911] = V915
0x1208: V916 = 0x20
0x120a: V917 = ADD 0x20 V911
0x120d: M[V917] = S1
0x120e: V918 = 0x20
0x1210: V919 = ADD 0x20 V917
0x1215: V920 = 0x20
0x1217: V921 = 0x40
0x1219: V922 = M[0x40]
0x121c: V923 = SUB V919 V922
0x121e: V924 = 0x0
0x1222: V925 = EXTCODESIZE V902
0x1223: V926 = ISZERO V925
0x1225: V927 = ISZERO V926
0x1226: V928 = 0xcd7
0x1229: THROWI V927
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V926, V902, 0x0, V922, V923, V922, 0x20, V919, 0xa9059cbb, V902, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x122a
[0x122a:0x1238]
---
Predecessors: [0x111e]
Successors: [0xceb, 0x1239]
---
0x122a PUSH1 0x0
0x122c DUP1
0x122d REVERT
0x122e JUMPDEST
0x122f POP
0x1230 GAS
0x1231 CALL
0x1232 ISZERO
0x1233 DUP1
0x1234 ISZERO
0x1235 PUSH2 0xceb
0x1238 JUMPI
---
0x122a: V929 = 0x0
0x122d: REVERT 0x0 0x0
0x122e: JUMPDEST 
0x1230: V930 = GAS
0x1231: V931 = CALL V930 S1 S2 S3 S4 S5 S6
0x1232: V932 = ISZERO V931
0x1234: V933 = ISZERO V932
0x1235: V934 = 0xceb
0x1238: JUMPI 0xceb V933
---
Entry stack: [S13, S12, S11, S10, V902, 0xa9059cbb, V919, 0x20, V922, V923, V922, 0x0, V902, V926]
Stack pops: 0
Stack additions: [V932]
Exit stack: []

================================

Block 0x1239
[0x1239:0x1253]
---
Predecessors: [0x122a]
Successors: [0x1254]
---
0x1239 RETURNDATASIZE
0x123a PUSH1 0x0
0x123c DUP1
0x123d RETURNDATACOPY
0x123e RETURNDATASIZE
0x123f PUSH1 0x0
0x1241 REVERT
0x1242 JUMPDEST
0x1243 POP
0x1244 POP
0x1245 POP
0x1246 POP
0x1247 PUSH1 0x40
0x1249 MLOAD
0x124a RETURNDATASIZE
0x124b PUSH1 0x20
0x124d DUP2
0x124e LT
0x124f ISZERO
0x1250 PUSH2 0xd01
0x1253 JUMPI
---
0x1239: V935 = RETURNDATASIZE
0x123a: V936 = 0x0
0x123d: RETURNDATACOPY 0x0 0x0 V935
0x123e: V937 = RETURNDATASIZE
0x123f: V938 = 0x0
0x1241: REVERT 0x0 V937
0x1242: JUMPDEST 
0x1247: V939 = 0x40
0x1249: V940 = M[0x40]
0x124a: V941 = RETURNDATASIZE
0x124b: V942 = 0x20
0x124e: V943 = LT V941 0x20
0x124f: V944 = ISZERO V943
0x1250: V945 = 0xd01
0x1253: THROWI V944
---
Entry stack: [V932]
Stack pops: 0
Stack additions: [V941, V940]
Exit stack: []

================================

Block 0x1254
[0x1254:0x12c9]
---
Predecessors: [0x1239]
Successors: [0x12ca]
---
0x1254 PUSH1 0x0
0x1256 DUP1
0x1257 REVERT
0x1258 JUMPDEST
0x1259 DUP2
0x125a ADD
0x125b SWAP1
0x125c DUP1
0x125d DUP1
0x125e MLOAD
0x125f SWAP1
0x1260 PUSH1 0x20
0x1262 ADD
0x1263 SWAP1
0x1264 SWAP3
0x1265 SWAP2
0x1266 SWAP1
0x1267 POP
0x1268 POP
0x1269 POP
0x126a SWAP1
0x126b POP
0x126c SWAP4
0x126d SWAP3
0x126e POP
0x126f POP
0x1270 POP
0x1271 JUMP
0x1272 JUMPDEST
0x1273 PUSH1 0x1
0x1275 PUSH1 0x0
0x1277 SWAP1
0x1278 SLOAD
0x1279 SWAP1
0x127a PUSH2 0x100
0x127d EXP
0x127e SWAP1
0x127f DIV
0x1280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1295 AND
0x1296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ab AND
0x12ac CALLER
0x12ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c2 AND
0x12c3 EQ
0x12c4 ISZERO
0x12c5 ISZERO
0x12c6 PUSH2 0xde0
0x12c9 JUMPI
---
0x1254: V946 = 0x0
0x1257: REVERT 0x0 0x0
0x1258: JUMPDEST 
0x125a: V947 = ADD S1 S0
0x125e: V948 = M[S1]
0x1260: V949 = 0x20
0x1262: V950 = ADD 0x20 S1
0x1271: JUMP S6
0x1272: JUMPDEST 
0x1273: V951 = 0x1
0x1275: V952 = 0x0
0x1278: V953 = S[0x1]
0x127a: V954 = 0x100
0x127d: V955 = EXP 0x100 0x0
0x127f: V956 = DIV V953 0x1
0x1280: V957 = 0xffffffffffffffffffffffffffffffffffffffff
0x1295: V958 = AND 0xffffffffffffffffffffffffffffffffffffffff V956
0x1296: V959 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ab: V960 = AND 0xffffffffffffffffffffffffffffffffffffffff V958
0x12ac: V961 = CALLER
0x12ad: V962 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c2: V963 = AND 0xffffffffffffffffffffffffffffffffffffffff V961
0x12c3: V964 = EQ V963 V960
0x12c4: V965 = ISZERO V964
0x12c5: V966 = ISZERO V965
0x12c6: V967 = 0xde0
0x12c9: THROWI V966
---
Entry stack: [V940, V941]
Stack pops: 0
Stack additions: [V948]
Exit stack: []

================================

Block 0x12ca
[0x12ca:0x1515]
---
Predecessors: [0x1254]
Successors: [0x1516]
---
0x12ca PUSH1 0x40
0x12cc MLOAD
0x12cd PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x12ee DUP2
0x12ef MSTORE
0x12f0 PUSH1 0x4
0x12f2 ADD
0x12f3 DUP1
0x12f4 DUP1
0x12f5 PUSH1 0x20
0x12f7 ADD
0x12f8 DUP3
0x12f9 DUP2
0x12fa SUB
0x12fb DUP3
0x12fc MSTORE
0x12fd PUSH1 0x16
0x12ff DUP2
0x1300 MSTORE
0x1301 PUSH1 0x20
0x1303 ADD
0x1304 DUP1
0x1305 PUSH32 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x1326 DUP2
0x1327 MSTORE
0x1328 POP
0x1329 PUSH1 0x20
0x132b ADD
0x132c SWAP2
0x132d POP
0x132e POP
0x132f PUSH1 0x40
0x1331 MLOAD
0x1332 DUP1
0x1333 SWAP2
0x1334 SUB
0x1335 SWAP1
0x1336 REVERT
0x1337 JUMPDEST
0x1338 CALLER
0x1339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134e AND
0x134f PUSH1 0x0
0x1351 DUP1
0x1352 SWAP1
0x1353 SLOAD
0x1354 SWAP1
0x1355 PUSH2 0x100
0x1358 EXP
0x1359 SWAP1
0x135a DIV
0x135b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1370 AND
0x1371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1386 AND
0x1387 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x13a8 PUSH1 0x40
0x13aa MLOAD
0x13ab PUSH1 0x40
0x13ad MLOAD
0x13ae DUP1
0x13af SWAP2
0x13b0 SUB
0x13b1 SWAP1
0x13b2 LOG3
0x13b3 CALLER
0x13b4 PUSH1 0x0
0x13b6 DUP1
0x13b7 PUSH2 0x100
0x13ba EXP
0x13bb DUP2
0x13bc SLOAD
0x13bd DUP2
0x13be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13d3 MUL
0x13d4 NOT
0x13d5 AND
0x13d6 SWAP1
0x13d7 DUP4
0x13d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13ed AND
0x13ee MUL
0x13ef OR
0x13f0 SWAP1
0x13f1 SSTORE
0x13f2 POP
0x13f3 PUSH1 0x0
0x13f5 PUSH1 0x1
0x13f7 PUSH1 0x0
0x13f9 PUSH2 0x100
0x13fc EXP
0x13fd DUP2
0x13fe SLOAD
0x13ff DUP2
0x1400 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1415 MUL
0x1416 NOT
0x1417 AND
0x1418 SWAP1
0x1419 DUP4
0x141a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x142f AND
0x1430 MUL
0x1431 OR
0x1432 SWAP1
0x1433 SSTORE
0x1434 POP
0x1435 JUMP
0x1436 JUMPDEST
0x1437 PUSH1 0x0
0x1439 DUP1
0x143a SWAP1
0x143b SLOAD
0x143c SWAP1
0x143d PUSH2 0x100
0x1440 EXP
0x1441 SWAP1
0x1442 DIV
0x1443 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1458 AND
0x1459 DUP2
0x145a JUMP
0x145b JUMPDEST
0x145c PUSH1 0x3
0x145e PUSH1 0x20
0x1460 MSTORE
0x1461 DUP1
0x1462 PUSH1 0x0
0x1464 MSTORE
0x1465 PUSH1 0x40
0x1467 PUSH1 0x0
0x1469 SHA3
0x146a PUSH1 0x0
0x146c SWAP2
0x146d POP
0x146e SWAP1
0x146f POP
0x1470 SLOAD
0x1471 DUP2
0x1472 JUMP
0x1473 JUMPDEST
0x1474 PUSH1 0x1
0x1476 PUSH1 0x0
0x1478 SWAP1
0x1479 SLOAD
0x147a SWAP1
0x147b PUSH2 0x100
0x147e EXP
0x147f SWAP1
0x1480 DIV
0x1481 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1496 AND
0x1497 DUP2
0x1498 JUMP
0x1499 JUMPDEST
0x149a PUSH1 0x2
0x149c PUSH1 0x0
0x149e SWAP1
0x149f SLOAD
0x14a0 SWAP1
0x14a1 PUSH2 0x100
0x14a4 EXP
0x14a5 SWAP1
0x14a6 DIV
0x14a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14bc AND
0x14bd DUP2
0x14be JUMP
0x14bf JUMPDEST
0x14c0 PUSH1 0x0
0x14c2 DUP1
0x14c3 SWAP1
0x14c4 SLOAD
0x14c5 SWAP1
0x14c6 PUSH2 0x100
0x14c9 EXP
0x14ca SWAP1
0x14cb DIV
0x14cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e1 AND
0x14e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f7 AND
0x14f8 CALLER
0x14f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x150e AND
0x150f EQ
0x1510 ISZERO
0x1511 ISZERO
0x1512 PUSH2 0x102c
0x1515 JUMPI
---
0x12ca: V968 = 0x40
0x12cc: V969 = M[0x40]
0x12cd: V970 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x12ef: M[V969] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x12f0: V971 = 0x4
0x12f2: V972 = ADD 0x4 V969
0x12f5: V973 = 0x20
0x12f7: V974 = ADD 0x20 V972
0x12fa: V975 = SUB V974 V972
0x12fc: M[V972] = V975
0x12fd: V976 = 0x16
0x1300: M[V974] = 0x16
0x1301: V977 = 0x20
0x1303: V978 = ADD 0x20 V974
0x1305: V979 = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x1327: M[V978] = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x1329: V980 = 0x20
0x132b: V981 = ADD 0x20 V978
0x132f: V982 = 0x40
0x1331: V983 = M[0x40]
0x1334: V984 = SUB V981 V983
0x1336: REVERT V983 V984
0x1337: JUMPDEST 
0x1338: V985 = CALLER
0x1339: V986 = 0xffffffffffffffffffffffffffffffffffffffff
0x134e: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff V985
0x134f: V988 = 0x0
0x1353: V989 = S[0x0]
0x1355: V990 = 0x100
0x1358: V991 = EXP 0x100 0x0
0x135a: V992 = DIV V989 0x1
0x135b: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0x1370: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0x1371: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x1386: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0x1387: V997 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x13a8: V998 = 0x40
0x13aa: V999 = M[0x40]
0x13ab: V1000 = 0x40
0x13ad: V1001 = M[0x40]
0x13b0: V1002 = SUB V999 V1001
0x13b2: LOG V1001 V1002 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V996 V987
0x13b3: V1003 = CALLER
0x13b4: V1004 = 0x0
0x13b7: V1005 = 0x100
0x13ba: V1006 = EXP 0x100 0x0
0x13bc: V1007 = S[0x0]
0x13be: V1008 = 0xffffffffffffffffffffffffffffffffffffffff
0x13d3: V1009 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x13d4: V1010 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x13d5: V1011 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1007
0x13d8: V1012 = 0xffffffffffffffffffffffffffffffffffffffff
0x13ed: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0x13ee: V1014 = MUL V1013 0x1
0x13ef: V1015 = OR V1014 V1011
0x13f1: S[0x0] = V1015
0x13f3: V1016 = 0x0
0x13f5: V1017 = 0x1
0x13f7: V1018 = 0x0
0x13f9: V1019 = 0x100
0x13fc: V1020 = EXP 0x100 0x0
0x13fe: V1021 = S[0x1]
0x1400: V1022 = 0xffffffffffffffffffffffffffffffffffffffff
0x1415: V1023 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1416: V1024 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1417: V1025 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1021
0x141a: V1026 = 0xffffffffffffffffffffffffffffffffffffffff
0x142f: V1027 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1430: V1028 = MUL 0x0 0x1
0x1431: V1029 = OR 0x0 V1025
0x1433: S[0x1] = V1029
0x1435: JUMP S0
0x1436: JUMPDEST 
0x1437: V1030 = 0x0
0x143b: V1031 = S[0x0]
0x143d: V1032 = 0x100
0x1440: V1033 = EXP 0x100 0x0
0x1442: V1034 = DIV V1031 0x1
0x1443: V1035 = 0xffffffffffffffffffffffffffffffffffffffff
0x1458: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0x145a: JUMP S0
0x145b: JUMPDEST 
0x145c: V1037 = 0x3
0x145e: V1038 = 0x20
0x1460: M[0x20] = 0x3
0x1462: V1039 = 0x0
0x1464: M[0x0] = S0
0x1465: V1040 = 0x40
0x1467: V1041 = 0x0
0x1469: V1042 = SHA3 0x0 0x40
0x146a: V1043 = 0x0
0x1470: V1044 = S[V1042]
0x1472: JUMP S1
0x1473: JUMPDEST 
0x1474: V1045 = 0x1
0x1476: V1046 = 0x0
0x1479: V1047 = S[0x1]
0x147b: V1048 = 0x100
0x147e: V1049 = EXP 0x100 0x0
0x1480: V1050 = DIV V1047 0x1
0x1481: V1051 = 0xffffffffffffffffffffffffffffffffffffffff
0x1496: V1052 = AND 0xffffffffffffffffffffffffffffffffffffffff V1050
0x1498: JUMP S0
0x1499: JUMPDEST 
0x149a: V1053 = 0x2
0x149c: V1054 = 0x0
0x149f: V1055 = S[0x2]
0x14a1: V1056 = 0x100
0x14a4: V1057 = EXP 0x100 0x0
0x14a6: V1058 = DIV V1055 0x1
0x14a7: V1059 = 0xffffffffffffffffffffffffffffffffffffffff
0x14bc: V1060 = AND 0xffffffffffffffffffffffffffffffffffffffff V1058
0x14be: JUMP S0
0x14bf: JUMPDEST 
0x14c0: V1061 = 0x0
0x14c4: V1062 = S[0x0]
0x14c6: V1063 = 0x100
0x14c9: V1064 = EXP 0x100 0x0
0x14cb: V1065 = DIV V1062 0x1
0x14cc: V1066 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e1: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V1065
0x14e2: V1068 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f7: V1069 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0x14f8: V1070 = CALLER
0x14f9: V1071 = 0xffffffffffffffffffffffffffffffffffffffff
0x150e: V1072 = AND 0xffffffffffffffffffffffffffffffffffffffff V1070
0x150f: V1073 = EQ V1072 V1069
0x1510: V1074 = ISZERO V1073
0x1511: V1075 = ISZERO V1074
0x1512: V1076 = 0x102c
0x1515: THROWI V1075
---
Entry stack: []
Stack pops: 0
Stack additions: [V1036, S0, V1044, S1, V1052, S0, V1060, S0]
Exit stack: []

================================

Block 0x1516
[0x1516:0x15ba]
---
Predecessors: [0x12ca]
Successors: [0x15bb]
---
0x1516 PUSH1 0x40
0x1518 MLOAD
0x1519 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x153a DUP2
0x153b MSTORE
0x153c PUSH1 0x4
0x153e ADD
0x153f DUP1
0x1540 DUP1
0x1541 PUSH1 0x20
0x1543 ADD
0x1544 DUP3
0x1545 DUP2
0x1546 SUB
0x1547 DUP3
0x1548 MSTORE
0x1549 PUSH1 0x13
0x154b DUP2
0x154c MSTORE
0x154d PUSH1 0x20
0x154f ADD
0x1550 DUP1
0x1551 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1572 DUP2
0x1573 MSTORE
0x1574 POP
0x1575 PUSH1 0x20
0x1577 ADD
0x1578 SWAP2
0x1579 POP
0x157a POP
0x157b PUSH1 0x40
0x157d MLOAD
0x157e DUP1
0x157f SWAP2
0x1580 SUB
0x1581 SWAP1
0x1582 REVERT
0x1583 JUMPDEST
0x1584 DUP1
0x1585 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159a AND
0x159b PUSH1 0x0
0x159d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b2 AND
0x15b3 EQ
0x15b4 ISZERO
0x15b5 ISZERO
0x15b6 ISZERO
0x15b7 PUSH2 0x10d1
0x15ba JUMPI
---
0x1516: V1077 = 0x40
0x1518: V1078 = M[0x40]
0x1519: V1079 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x153b: M[V1078] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x153c: V1080 = 0x4
0x153e: V1081 = ADD 0x4 V1078
0x1541: V1082 = 0x20
0x1543: V1083 = ADD 0x20 V1081
0x1546: V1084 = SUB V1083 V1081
0x1548: M[V1081] = V1084
0x1549: V1085 = 0x13
0x154c: M[V1083] = 0x13
0x154d: V1086 = 0x20
0x154f: V1087 = ADD 0x20 V1083
0x1551: V1088 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1573: M[V1087] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1575: V1089 = 0x20
0x1577: V1090 = ADD 0x20 V1087
0x157b: V1091 = 0x40
0x157d: V1092 = M[0x40]
0x1580: V1093 = SUB V1090 V1092
0x1582: REVERT V1092 V1093
0x1583: JUMPDEST 
0x1585: V1094 = 0xffffffffffffffffffffffffffffffffffffffff
0x159a: V1095 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x159b: V1096 = 0x0
0x159d: V1097 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b2: V1098 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x15b3: V1099 = EQ 0x0 V1095
0x15b4: V1100 = ISZERO V1099
0x15b5: V1101 = ISZERO V1100
0x15b6: V1102 = ISZERO V1101
0x15b7: V1103 = 0x10d1
0x15ba: THROWI V1102
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x15bb
[0x15bb:0x16c2]
---
Predecessors: [0x1516]
Successors: [0x16c3]
---
0x15bb PUSH1 0x40
0x15bd MLOAD
0x15be PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x15df DUP2
0x15e0 MSTORE
0x15e1 PUSH1 0x4
0x15e3 ADD
0x15e4 DUP1
0x15e5 DUP1
0x15e6 PUSH1 0x20
0x15e8 ADD
0x15e9 DUP3
0x15ea DUP2
0x15eb SUB
0x15ec DUP3
0x15ed MSTORE
0x15ee PUSH1 0x17
0x15f0 DUP2
0x15f1 MSTORE
0x15f2 PUSH1 0x20
0x15f4 ADD
0x15f5 DUP1
0x15f6 PUSH32 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x1617 DUP2
0x1618 MSTORE
0x1619 POP
0x161a PUSH1 0x20
0x161c ADD
0x161d SWAP2
0x161e POP
0x161f POP
0x1620 PUSH1 0x40
0x1622 MLOAD
0x1623 DUP1
0x1624 SWAP2
0x1625 SUB
0x1626 SWAP1
0x1627 REVERT
0x1628 JUMPDEST
0x1629 DUP1
0x162a PUSH1 0x1
0x162c PUSH1 0x0
0x162e PUSH2 0x100
0x1631 EXP
0x1632 DUP2
0x1633 SLOAD
0x1634 DUP2
0x1635 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164a MUL
0x164b NOT
0x164c AND
0x164d SWAP1
0x164e DUP4
0x164f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1664 AND
0x1665 MUL
0x1666 OR
0x1667 SWAP1
0x1668 SSTORE
0x1669 POP
0x166a POP
0x166b JUMP
0x166c JUMPDEST
0x166d PUSH1 0x0
0x166f DUP1
0x1670 SWAP1
0x1671 SLOAD
0x1672 SWAP1
0x1673 PUSH2 0x100
0x1676 EXP
0x1677 SWAP1
0x1678 DIV
0x1679 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x168e AND
0x168f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16a4 AND
0x16a5 CALLER
0x16a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16bb AND
0x16bc EQ
0x16bd ISZERO
0x16be ISZERO
0x16bf PUSH2 0x11d9
0x16c2 JUMPI
---
0x15bb: V1104 = 0x40
0x15bd: V1105 = M[0x40]
0x15be: V1106 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x15e0: M[V1105] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x15e1: V1107 = 0x4
0x15e3: V1108 = ADD 0x4 V1105
0x15e6: V1109 = 0x20
0x15e8: V1110 = ADD 0x20 V1108
0x15eb: V1111 = SUB V1110 V1108
0x15ed: M[V1108] = V1111
0x15ee: V1112 = 0x17
0x15f1: M[V1110] = 0x17
0x15f2: V1113 = 0x20
0x15f4: V1114 = ADD 0x20 V1110
0x15f6: V1115 = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x1618: M[V1114] = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x161a: V1116 = 0x20
0x161c: V1117 = ADD 0x20 V1114
0x1620: V1118 = 0x40
0x1622: V1119 = M[0x40]
0x1625: V1120 = SUB V1117 V1119
0x1627: REVERT V1119 V1120
0x1628: JUMPDEST 
0x162a: V1121 = 0x1
0x162c: V1122 = 0x0
0x162e: V1123 = 0x100
0x1631: V1124 = EXP 0x100 0x0
0x1633: V1125 = S[0x1]
0x1635: V1126 = 0xffffffffffffffffffffffffffffffffffffffff
0x164a: V1127 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x164b: V1128 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x164c: V1129 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1125
0x164f: V1130 = 0xffffffffffffffffffffffffffffffffffffffff
0x1664: V1131 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1665: V1132 = MUL V1131 0x1
0x1666: V1133 = OR V1132 V1129
0x1668: S[0x1] = V1133
0x166b: JUMP S1
0x166c: JUMPDEST 
0x166d: V1134 = 0x0
0x1671: V1135 = S[0x0]
0x1673: V1136 = 0x100
0x1676: V1137 = EXP 0x100 0x0
0x1678: V1138 = DIV V1135 0x1
0x1679: V1139 = 0xffffffffffffffffffffffffffffffffffffffff
0x168e: V1140 = AND 0xffffffffffffffffffffffffffffffffffffffff V1138
0x168f: V1141 = 0xffffffffffffffffffffffffffffffffffffffff
0x16a4: V1142 = AND 0xffffffffffffffffffffffffffffffffffffffff V1140
0x16a5: V1143 = CALLER
0x16a6: V1144 = 0xffffffffffffffffffffffffffffffffffffffff
0x16bb: V1145 = AND 0xffffffffffffffffffffffffffffffffffffffff V1143
0x16bc: V1146 = EQ V1145 V1142
0x16bd: V1147 = ISZERO V1146
0x16be: V1148 = ISZERO V1147
0x16bf: V1149 = 0x11d9
0x16c2: THROWI V1148
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x16c3
[0x16c3:0x176c]
---
Predecessors: [0x15bb]
Successors: [0x176d]
---
0x16c3 PUSH1 0x40
0x16c5 MLOAD
0x16c6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x16e7 DUP2
0x16e8 MSTORE
0x16e9 PUSH1 0x4
0x16eb ADD
0x16ec DUP1
0x16ed DUP1
0x16ee PUSH1 0x20
0x16f0 ADD
0x16f1 DUP3
0x16f2 DUP2
0x16f3 SUB
0x16f4 DUP3
0x16f5 MSTORE
0x16f6 PUSH1 0x13
0x16f8 DUP2
0x16f9 MSTORE
0x16fa PUSH1 0x20
0x16fc ADD
0x16fd DUP1
0x16fe PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x171f DUP2
0x1720 MSTORE
0x1721 POP
0x1722 PUSH1 0x20
0x1724 ADD
0x1725 SWAP2
0x1726 POP
0x1727 POP
0x1728 PUSH1 0x40
0x172a MLOAD
0x172b DUP1
0x172c SWAP2
0x172d SUB
0x172e SWAP1
0x172f REVERT
0x1730 JUMPDEST
0x1731 DUP2
0x1732 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1747 AND
0x1748 PUSH2 0x8fc
0x174b DUP3
0x174c SWAP1
0x174d DUP2
0x174e ISZERO
0x174f MUL
0x1750 SWAP1
0x1751 PUSH1 0x40
0x1753 MLOAD
0x1754 PUSH1 0x0
0x1756 PUSH1 0x40
0x1758 MLOAD
0x1759 DUP1
0x175a DUP4
0x175b SUB
0x175c DUP2
0x175d DUP6
0x175e DUP9
0x175f DUP9
0x1760 CALL
0x1761 SWAP4
0x1762 POP
0x1763 POP
0x1764 POP
0x1765 POP
0x1766 ISZERO
0x1767 DUP1
0x1768 ISZERO
0x1769 PUSH2 0x121f
0x176c JUMPI
---
0x16c3: V1150 = 0x40
0x16c5: V1151 = M[0x40]
0x16c6: V1152 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x16e8: M[V1151] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x16e9: V1153 = 0x4
0x16eb: V1154 = ADD 0x4 V1151
0x16ee: V1155 = 0x20
0x16f0: V1156 = ADD 0x20 V1154
0x16f3: V1157 = SUB V1156 V1154
0x16f5: M[V1154] = V1157
0x16f6: V1158 = 0x13
0x16f9: M[V1156] = 0x13
0x16fa: V1159 = 0x20
0x16fc: V1160 = ADD 0x20 V1156
0x16fe: V1161 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1720: M[V1160] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1722: V1162 = 0x20
0x1724: V1163 = ADD 0x20 V1160
0x1728: V1164 = 0x40
0x172a: V1165 = M[0x40]
0x172d: V1166 = SUB V1163 V1165
0x172f: REVERT V1165 V1166
0x1730: JUMPDEST 
0x1732: V1167 = 0xffffffffffffffffffffffffffffffffffffffff
0x1747: V1168 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1748: V1169 = 0x8fc
0x174e: V1170 = ISZERO S0
0x174f: V1171 = MUL V1170 0x8fc
0x1751: V1172 = 0x40
0x1753: V1173 = M[0x40]
0x1754: V1174 = 0x0
0x1756: V1175 = 0x40
0x1758: V1176 = M[0x40]
0x175b: V1177 = SUB V1173 V1176
0x1760: V1178 = CALL V1171 V1168 S0 V1176 V1177 V1176 0x0
0x1766: V1179 = ISZERO V1178
0x1768: V1180 = ISZERO V1179
0x1769: V1181 = 0x121f
0x176c: THROWI V1180
---
Entry stack: []
Stack pops: 0
Stack additions: [V1179, S0, S1]
Exit stack: []

================================

Block 0x176d
[0x176d:0x178c]
---
Predecessors: [0x16c3]
Successors: [0x178d]
---
0x176d RETURNDATASIZE
0x176e PUSH1 0x0
0x1770 DUP1
0x1771 RETURNDATACOPY
0x1772 RETURNDATASIZE
0x1773 PUSH1 0x0
0x1775 REVERT
0x1776 JUMPDEST
0x1777 POP
0x1778 POP
0x1779 POP
0x177a JUMP
0x177b JUMPDEST
0x177c PUSH1 0x0
0x177e DUP2
0x177f DUP4
0x1780 ADD
0x1781 SWAP1
0x1782 POP
0x1783 DUP3
0x1784 DUP2
0x1785 LT
0x1786 ISZERO
0x1787 ISZERO
0x1788 ISZERO
0x1789 PUSH2 0x1237
0x178c JUMPI
---
0x176d: V1182 = RETURNDATASIZE
0x176e: V1183 = 0x0
0x1771: RETURNDATACOPY 0x0 0x0 V1182
0x1772: V1184 = RETURNDATASIZE
0x1773: V1185 = 0x0
0x1775: REVERT 0x0 V1184
0x1776: JUMPDEST 
0x177a: JUMP S3
0x177b: JUMPDEST 
0x177c: V1186 = 0x0
0x1780: V1187 = ADD S1 S0
0x1785: V1188 = LT V1187 S1
0x1786: V1189 = ISZERO V1188
0x1787: V1190 = ISZERO V1189
0x1788: V1191 = ISZERO V1190
0x1789: V1192 = 0x1237
0x178c: THROWI V1191
---
Entry stack: [S2, S1, V1179]
Stack pops: 0
Stack additions: [V1187, S0, S1]
Exit stack: []

================================

Block 0x178d
[0x178d:0x1815]
---
Predecessors: [0x176d]
Successors: []
---
0x178d INVALID
0x178e JUMPDEST
0x178f DUP1
0x1790 SWAP1
0x1791 POP
0x1792 SWAP3
0x1793 SWAP2
0x1794 POP
0x1795 POP
0x1796 JUMP
0x1797 STOP
0x1798 LOG1
0x1799 PUSH6 0x627a7a723058
0x17a0 SHA3
0x17a1 PUSH30 0xe88fbf398c10b65ffb179e3ce1698bc60e70b336a373503690d1daade9f4
0x17c0 LT
0x17c1 STOP
0x17c2 MISSING 0x29
0x17c3 PUSH20 0x0
0x17d8 ADDRESS
0x17d9 EQ
0x17da PUSH1 0x80
0x17dc PUSH1 0x40
0x17de MSTORE
0x17df PUSH1 0x0
0x17e1 DUP1
0x17e2 REVERT
0x17e3 STOP
0x17e4 LOG1
0x17e5 PUSH6 0x627a7a723058
0x17ec SHA3
0x17ed MSTORE
0x17ee XOR
0x17ef DUP8
0x17f0 XOR
0x17f1 SWAP6
0x17f2 CALL
0x17f3 REVERT
0x17f4 MISSING 0xe1
0x17f5 MISSING 0xb8
0x17f6 POP
0x17f7 PUSH30 0x5a082bfef7d319841f01445d8919525198ba5a889f0029
---
0x178d: INVALID 
0x178e: JUMPDEST 
0x1796: JUMP S3
0x1797: STOP 
0x1798: LOG S0 S1 S2
0x1799: V1193 = 0x627a7a723058
0x17a0: V1194 = SHA3 0x627a7a723058 S3
0x17a1: V1195 = 0xe88fbf398c10b65ffb179e3ce1698bc60e70b336a373503690d1daade9f4
0x17c0: V1196 = LT 0xe88fbf398c10b65ffb179e3ce1698bc60e70b336a373503690d1daade9f4 V1194
0x17c1: STOP 
0x17c2: MISSING 0x29
0x17c3: V1197 = 0x0
0x17d8: V1198 = ADDRESS
0x17d9: V1199 = EQ V1198 0x0
0x17da: V1200 = 0x80
0x17dc: V1201 = 0x40
0x17de: M[0x40] = 0x80
0x17df: V1202 = 0x0
0x17e2: REVERT 0x0 0x0
0x17e3: STOP 
0x17e4: LOG S0 S1 S2
0x17e5: V1203 = 0x627a7a723058
0x17ec: V1204 = SHA3 0x627a7a723058 S3
0x17ed: M[V1204] = S4
0x17ee: V1205 = XOR S5 S6
0x17f0: V1206 = XOR S13 V1205
0x17f2: V1207 = CALL S12 S7 S8 S9 S10 S11 V1206
0x17f3: REVERT V1207 S13
0x17f4: MISSING 0xe1
0x17f5: MISSING 0xb8
0x17f7: V1208 = 0x5a082bfef7d319841f01445d8919525198ba5a889f0029
---
Entry stack: [S2, S1, V1187]
Stack pops: 0
Stack additions: [S0, V1196, V1199, 0x5a082bfef7d319841f01445d8919525198ba5a889f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x79ba5097
Entry block: 0x67
Exit block: 0x7c
Body: 0x67, 0x6f, 0x73, 0x7c, 0x16f, 0x1c7, 0x234

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x7e
Exit block: 0x93
Body: 0x7e, 0x86, 0x8a, 0x93, 0x333

Function 2:
Public function signature: 0xd4ee1d90
Entry block: 0xd5
Exit block: 0xea
Body: 0xd5, 0xdd, 0xe1, 0xea, 0x358

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x12c
Exit block: 0x16d
Body: 0x12c, 0x134, 0x138, 0x16d, 0x37e, 0x3d5, 0x442, 0x47a, 0x4e7

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

