Block 0x0
[0x0:0x4]
---
Predecessors: []
Successors: [0x5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5
[0x5:0x6]
---
Predecessors: [0x0]
Successors: []
---
0x5 JUMPDEST
0x6 INVALID
---
0x5: JUMPDEST 
0x6: INVALID 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7
[0x7:0x3d]
---
Predecessors: []
Successors: [0x3e]
---
0x7 STOP
0x8 LOG1
0x9 PUSH6 0x627a7a723058
0x10 SHA3
0x11 SWAP15
0x12 CALLDATASIZE
0x13 EXTCODESIZE
0x14 MISSING 0x4a
0x15 SUB
0x16 LT
0x17 MISSING 0xdf
0x18 PUSH6 0x4078f1238cae
0x1f XOR
0x20 MISSING 0x5f
0x21 MISSING 0xee
0x22 DIV
0x23 DUP12
0x24 DUP4
0x25 SWAP1
0x26 MISSING 0xa5
0x27 REVERT
0x28 SWAP16
0x29 TIMESTAMP
0x2a MISSING 0xfb
0x2b MISSING 0x27
0x2c ADDRESS
0x2d DUP5
0x2e MISSING 0xfb
0x2f MISSING 0xf9
0x30 MISSING 0xce
0x31 STOP
0x32 MISSING 0x29
0x33 PUSH1 0x60
0x35 PUSH1 0x40
0x37 MSTORE
0x38 CALLDATASIZE
0x39 ISZERO
0x3a PUSH2 0xe4
0x3d JUMPI
---
0x7: STOP 
0x8: LOG S0 S1 S2
0x9: V2 = 0x627a7a723058
0x10: V3 = SHA3 0x627a7a723058 S3
0x12: V4 = CALLDATASIZE
0x13: V5 = EXTCODESIZE V4
0x14: MISSING 0x4a
0x15: V6 = SUB S0 S1
0x16: V7 = LT V6 S2
0x17: MISSING 0xdf
0x18: V8 = 0x4078f1238cae
0x1f: V9 = XOR 0x4078f1238cae S0
0x20: MISSING 0x5f
0x21: MISSING 0xee
0x22: V10 = DIV S0 S1
0x26: MISSING 0xa5
0x27: REVERT S0 S1
0x29: V11 = TIMESTAMP
0x2a: MISSING 0xfb
0x2b: MISSING 0x27
0x2c: V12 = ADDRESS
0x2e: MISSING 0xfb
0x2f: MISSING 0xf9
0x30: MISSING 0xce
0x31: STOP 
0x32: MISSING 0x29
0x33: V13 = 0x60
0x35: V14 = 0x40
0x37: M[0x40] = 0x60
0x38: V15 = CALLDATASIZE
0x39: V16 = ISZERO V15
0x3a: V17 = 0xe4
0x3d: THROWI V16
---
Entry stack: []
Stack pops: 0
Stack additions: [V5, S18, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V3, V7, V9, S12, S3, V10, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V11, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, S3, V12, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x3e
[0x3e:0x71]
---
Predecessors: [0x7]
Successors: [0x72]
---
0x3e PUSH1 0x0
0x40 CALLDATALOAD
0x41 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5f SWAP1
0x60 DIV
0x61 PUSH4 0xffffffff
0x66 AND
0x67 DUP1
0x68 PUSH4 0x4172d080
0x6d EQ
0x6e PUSH2 0xf5
0x71 JUMPI
---
0x3e: V18 = 0x0
0x40: V19 = CALLDATALOAD 0x0
0x41: V20 = 0x100000000000000000000000000000000000000000000000000000000
0x60: V21 = DIV V19 0x100000000000000000000000000000000000000000000000000000000
0x61: V22 = 0xffffffff
0x66: V23 = AND 0xffffffff V21
0x68: V24 = 0x4172d080
0x6d: V25 = EQ 0x4172d080 V23
0x6e: V26 = 0xf5
0x71: THROWI V25
---
Entry stack: []
Stack pops: 0
Stack additions: [V23]
Exit stack: [V23]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x3e]
Successors: [0x7d, 0x11b]
---
0x72 DUP1
0x73 PUSH4 0x41f77260
0x78 EQ
0x79 PUSH2 0x11b
0x7c JUMPI
---
0x73: V27 = 0x41f77260
0x78: V28 = EQ 0x41f77260 V23
0x79: V29 = 0x11b
0x7c: JUMPI 0x11b V28
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88]
---
0x7d DUP1
0x7e PUSH4 0x532f1179
0x83 EQ
0x84 PUSH2 0x12d
0x87 JUMPI
---
0x7e: V30 = 0x532f1179
0x83: V31 = EQ 0x532f1179 V23
0x84: V32 = 0x12d
0x87: THROWI V31
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93]
---
0x88 DUP1
0x89 PUSH4 0x590e1ae3
0x8e EQ
0x8f PUSH2 0x157
0x92 JUMPI
---
0x89: V33 = 0x590e1ae3
0x8e: V34 = EQ 0x590e1ae3 V23
0x8f: V35 = 0x157
0x92: THROWI V34
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e]
---
0x93 DUP1
0x94 PUSH4 0x6bd3d406
0x99 EQ
0x9a PUSH2 0x169
0x9d JUMPI
---
0x94: V36 = 0x6bd3d406
0x99: V37 = EQ 0x6bd3d406 V23
0x9a: V38 = 0x169
0x9d: THROWI V37
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9]
---
0x9e DUP1
0x9f PUSH4 0x70a08231
0xa4 EQ
0xa5 PUSH2 0x18f
0xa8 JUMPI
---
0x9f: V39 = 0x70a08231
0xa4: V40 = EQ 0x70a08231 V23
0xa5: V41 = 0x18f
0xa8: THROWI V40
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4]
---
0xa9 DUP1
0xaa PUSH4 0x82edaf94
0xaf EQ
0xb0 PUSH2 0x1d9
0xb3 JUMPI
---
0xaa: V42 = 0x82edaf94
0xaf: V43 = EQ 0x82edaf94 V23
0xb0: V44 = 0x1d9
0xb3: THROWI V43
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf]
---
0xb4 DUP1
0xb5 PUSH4 0x8c52dc41
0xba EQ
0xbb PUSH2 0x22b
0xbe JUMPI
---
0xb5: V45 = 0x8c52dc41
0xba: V46 = EQ 0x8c52dc41 V23
0xbb: V47 = 0x22b
0xbe: THROWI V46
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca]
---
0xbf DUP1
0xc0 PUSH4 0x8d8f2adb
0xc5 EQ
0xc6 PUSH2 0x23d
0xc9 JUMPI
---
0xc0: V48 = 0x8d8f2adb
0xc5: V49 = EQ 0x8d8f2adb V23
0xc6: V50 = 0x23d
0xc9: THROWI V49
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5]
---
0xca DUP1
0xcb PUSH4 0x8da5cb5b
0xd0 EQ
0xd1 PUSH2 0x24f
0xd4 JUMPI
---
0xcb: V51 = 0x8da5cb5b
0xd0: V52 = EQ 0x8da5cb5b V23
0xd1: V53 = 0x24f
0xd4: THROWI V52
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0]
---
0xd5 DUP1
0xd6 PUSH4 0x9c24fc55
0xdb EQ
0xdc PUSH2 0x2a1
0xdf JUMPI
---
0xd6: V54 = 0x9c24fc55
0xdb: V55 = EQ 0x9c24fc55 V23
0xdc: V56 = 0x2a1
0xdf: THROWI V55
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb]
---
0xe0 DUP1
0xe1 PUSH4 0xab044622
0xe6 EQ
0xe7 PUSH2 0x2eb
0xea JUMPI
---
0xe1: V57 = 0xab044622
0xe6: V58 = EQ 0xab044622 V23
0xe7: V59 = 0x2eb
0xea: THROWI V58
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6]
---
0xeb DUP1
0xec PUSH4 0xb9f4b5c2
0xf1 EQ
0xf2 PUSH2 0x315
0xf5 JUMPI
---
0xec: V60 = 0xb9f4b5c2
0xf1: V61 = EQ 0xb9f4b5c2 V23
0xf2: V62 = 0x315
0xf5: THROWI V61
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101]
---
0xf6 DUP1
0xf7 PUSH4 0xcc4d819c
0xfc EQ
0xfd PUSH2 0x33b
0x100 JUMPI
---
0xf7: V63 = 0xcc4d819c
0xfc: V64 = EQ 0xcc4d819c V23
0xfd: V65 = 0x33b
0x100: THROWI V64
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c]
---
0x101 DUP1
0x102 PUSH4 0xd0febe4c
0x107 EQ
0x108 PUSH2 0x365
0x10b JUMPI
---
0x102: V66 = 0xd0febe4c
0x107: V67 = EQ 0xd0febe4c V23
0x108: V68 = 0x365
0x10b: THROWI V67
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117]
---
0x10c DUP1
0x10d PUSH4 0xe8b5e51f
0x112 EQ
0x113 PUSH2 0x377
0x116 JUMPI
---
0x10d: V69 = 0xe8b5e51f
0x112: V70 = EQ 0xe8b5e51f V23
0x113: V71 = 0x377
0x116: THROWI V70
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10c]
Successors: [0x11b]
---
0x117 JUMPDEST
0x118 PUSH2 0xf3
---
0x117: JUMPDEST 
0x118: V72 = 0xf3
---
Entry stack: [V23]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V23, 0xf3]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x72, 0x117]
Successors: []
---
0x11b JUMPDEST
0x11c PUSH2 0xf0
0x11f PUSH2 0x381
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V73 = 0xf0
0x11f: V74 = 0x381
0x122: THROW 
---
Entry stack: [V23, S0]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V23, S0, 0xf0]

================================

Block 0x123
[0x123:0x123]
---
Predecessors: [0x12f]
Successors: [0x124]
---
0x123 JUMPDEST
---
0x123: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x124
[0x124:0x12e]
---
Predecessors: [0x123]
Successors: [0x12f]
---
0x124 JUMPDEST
0x125 JUMP
0x126 JUMPDEST
0x127 STOP
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0xfd
0x12e JUMPI
---
0x124: JUMPDEST 
0x125: JUMP S0
0x126: JUMPDEST 
0x127: STOP 
0x128: JUMPDEST 
0x129: V75 = CALLVALUE
0x12a: V76 = ISZERO V75
0x12b: V77 = 0xfd
0x12e: THROWI V76
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x12f
[0x12f:0x154]
---
Predecessors: [0x124]
Successors: [0x123, 0x155]
---
0x12f INVALID
0x130 JUMPDEST
0x131 PUSH2 0x105
0x134 PUSH2 0x496
0x137 JUMP
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
0x14e JUMPDEST
0x14f CALLVALUE
0x150 ISZERO
0x151 PUSH2 0x123
0x154 JUMPI
---
0x12f: INVALID 
0x130: JUMPDEST 
0x131: V78 = 0x105
0x134: V79 = 0x496
0x137: THROW 
0x138: JUMPDEST 
0x139: V80 = 0x40
0x13b: V81 = M[0x40]
0x13f: M[V81] = S0
0x140: V82 = 0x20
0x142: V83 = ADD 0x20 V81
0x146: V84 = 0x40
0x148: V85 = M[0x40]
0x14b: V86 = SUB V83 V85
0x14d: RETURN V85 V86
0x14e: JUMPDEST 
0x14f: V87 = CALLVALUE
0x150: V88 = ISZERO V87
0x151: V89 = 0x123
0x154: JUMPI 0x123 V88
---
Entry stack: []
Stack pops: 0
Stack additions: [0x105]
Exit stack: []

================================

Block 0x155
[0x155:0x166]
---
Predecessors: [0x12f]
Successors: [0x167]
---
0x155 INVALID
0x156 JUMPDEST
0x157 PUSH2 0x12b
0x15a PUSH2 0x49c
0x15d JUMP
0x15e JUMPDEST
0x15f STOP
0x160 JUMPDEST
0x161 CALLVALUE
0x162 ISZERO
0x163 PUSH2 0x135
0x166 JUMPI
---
0x155: INVALID 
0x156: JUMPDEST 
0x157: V90 = 0x12b
0x15a: V91 = 0x49c
0x15d: THROW 
0x15e: JUMPDEST 
0x15f: STOP 
0x160: JUMPDEST 
0x161: V92 = CALLVALUE
0x162: V93 = ISZERO V92
0x163: V94 = 0x135
0x166: THROWI V93
---
Entry stack: []
Stack pops: 0
Stack additions: [0x12b]
Exit stack: []

================================

Block 0x167
[0x167:0x190]
---
Predecessors: [0x155]
Successors: [0x191]
---
0x167 INVALID
0x168 JUMPDEST
0x169 PUSH2 0x13d
0x16c PUSH2 0x5da
0x16f JUMP
0x170 JUMPDEST
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 DUP3
0x176 ISZERO
0x177 ISZERO
0x178 ISZERO
0x179 ISZERO
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f SWAP2
0x180 POP
0x181 POP
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 SWAP2
0x187 SUB
0x188 SWAP1
0x189 RETURN
0x18a JUMPDEST
0x18b CALLVALUE
0x18c ISZERO
0x18d PUSH2 0x15f
0x190 JUMPI
---
0x167: INVALID 
0x168: JUMPDEST 
0x169: V95 = 0x13d
0x16c: V96 = 0x5da
0x16f: THROW 
0x170: JUMPDEST 
0x171: V97 = 0x40
0x173: V98 = M[0x40]
0x176: V99 = ISZERO S0
0x177: V100 = ISZERO V99
0x178: V101 = ISZERO V100
0x179: V102 = ISZERO V101
0x17b: M[V98] = V102
0x17c: V103 = 0x20
0x17e: V104 = ADD 0x20 V98
0x182: V105 = 0x40
0x184: V106 = M[0x40]
0x187: V107 = SUB V104 V106
0x189: RETURN V106 V107
0x18a: JUMPDEST 
0x18b: V108 = CALLVALUE
0x18c: V109 = ISZERO V108
0x18d: V110 = 0x15f
0x190: THROWI V109
---
Entry stack: []
Stack pops: 0
Stack additions: [0x13d]
Exit stack: []

================================

Block 0x191
[0x191:0x199]
---
Predecessors: [0x167]
Successors: [0x5ed]
---
0x191 INVALID
0x192 JUMPDEST
0x193 PUSH2 0x167
0x196 PUSH2 0x5ed
0x199 JUMP
---
0x191: INVALID 
0x192: JUMPDEST 
0x193: V111 = 0x167
0x196: V112 = 0x5ed
0x199: JUMP 0x5ed
---
Entry stack: []
Stack pops: 0
Stack additions: [0x167]
Exit stack: []

================================

Block 0x19a
[0x19a:0x1a2]
---
Predecessors: []
Successors: [0x1a3]
---
0x19a JUMPDEST
0x19b STOP
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x171
0x1a2 JUMPI
---
0x19a: JUMPDEST 
0x19b: STOP 
0x19c: JUMPDEST 
0x19d: V113 = CALLVALUE
0x19e: V114 = ISZERO V113
0x19f: V115 = 0x171
0x1a2: THROWI V114
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a3
[0x1a3:0x1c8]
---
Predecessors: [0x19a]
Successors: [0x1c9]
---
0x1a3 INVALID
0x1a4 JUMPDEST
0x1a5 PUSH2 0x179
0x1a8 PUSH2 0x76a
0x1ab JUMP
0x1ac JUMPDEST
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 DUP3
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 SWAP2
0x1b8 POP
0x1b9 POP
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be SWAP2
0x1bf SUB
0x1c0 SWAP1
0x1c1 RETURN
0x1c2 JUMPDEST
0x1c3 CALLVALUE
0x1c4 ISZERO
0x1c5 PUSH2 0x197
0x1c8 JUMPI
---
0x1a3: INVALID 
0x1a4: JUMPDEST 
0x1a5: V116 = 0x179
0x1a8: V117 = 0x76a
0x1ab: THROW 
0x1ac: JUMPDEST 
0x1ad: V118 = 0x40
0x1af: V119 = M[0x40]
0x1b3: M[V119] = S0
0x1b4: V120 = 0x20
0x1b6: V121 = ADD 0x20 V119
0x1ba: V122 = 0x40
0x1bc: V123 = M[0x40]
0x1bf: V124 = SUB V121 V123
0x1c1: RETURN V123 V124
0x1c2: JUMPDEST 
0x1c3: V125 = CALLVALUE
0x1c4: V126 = ISZERO V125
0x1c5: V127 = 0x197
0x1c8: THROWI V126
---
Entry stack: []
Stack pops: 0
Stack additions: [0x179]
Exit stack: []

================================

Block 0x1c9
[0x1c9:0x212]
---
Predecessors: [0x1a3]
Successors: [0x213]
---
0x1c9 INVALID
0x1ca JUMPDEST
0x1cb PUSH2 0x1c3
0x1ce PUSH1 0x4
0x1d0 DUP1
0x1d1 DUP1
0x1d2 CALLDATALOAD
0x1d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e8 AND
0x1e9 SWAP1
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed SWAP1
0x1ee SWAP2
0x1ef SWAP1
0x1f0 POP
0x1f1 POP
0x1f2 PUSH2 0x770
0x1f5 JUMP
0x1f6 JUMPDEST
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb DUP3
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 SWAP2
0x202 POP
0x203 POP
0x204 PUSH1 0x40
0x206 MLOAD
0x207 DUP1
0x208 SWAP2
0x209 SUB
0x20a SWAP1
0x20b RETURN
0x20c JUMPDEST
0x20d CALLVALUE
0x20e ISZERO
0x20f PUSH2 0x1e1
0x212 JUMPI
---
0x1c9: INVALID 
0x1ca: JUMPDEST 
0x1cb: V128 = 0x1c3
0x1ce: V129 = 0x4
0x1d2: V130 = CALLDATALOAD 0x4
0x1d3: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1ea: V133 = 0x20
0x1ec: V134 = ADD 0x20 0x4
0x1f2: V135 = 0x770
0x1f5: THROW 
0x1f6: JUMPDEST 
0x1f7: V136 = 0x40
0x1f9: V137 = M[0x40]
0x1fd: M[V137] = S0
0x1fe: V138 = 0x20
0x200: V139 = ADD 0x20 V137
0x204: V140 = 0x40
0x206: V141 = M[0x40]
0x209: V142 = SUB V139 V141
0x20b: RETURN V141 V142
0x20c: JUMPDEST 
0x20d: V143 = CALLVALUE
0x20e: V144 = ISZERO V143
0x20f: V145 = 0x1e1
0x212: THROWI V144
---
Entry stack: []
Stack pops: 0
Stack additions: [V132, 0x1c3]
Exit stack: []

================================

Block 0x213
[0x213:0x264]
---
Predecessors: [0x1c9]
Successors: [0x265]
---
0x213 INVALID
0x214 JUMPDEST
0x215 PUSH2 0x1e9
0x218 PUSH2 0x7ba
0x21b JUMP
0x21c JUMPDEST
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 DUP3
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP2
0x254 POP
0x255 POP
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a SWAP2
0x25b SUB
0x25c SWAP1
0x25d RETURN
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x233
0x264 JUMPI
---
0x213: INVALID 
0x214: JUMPDEST 
0x215: V146 = 0x1e9
0x218: V147 = 0x7ba
0x21b: THROW 
0x21c: JUMPDEST 
0x21d: V148 = 0x40
0x21f: V149 = M[0x40]
0x222: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x238: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x24f: M[V149] = V153
0x250: V154 = 0x20
0x252: V155 = ADD 0x20 V149
0x256: V156 = 0x40
0x258: V157 = M[0x40]
0x25b: V158 = SUB V155 V157
0x25d: RETURN V157 V158
0x25e: JUMPDEST 
0x25f: V159 = CALLVALUE
0x260: V160 = ISZERO V159
0x261: V161 = 0x233
0x264: THROWI V160
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1e9]
Exit stack: []

================================

Block 0x265
[0x265:0x276]
---
Predecessors: [0x213]
Successors: [0x277]
---
0x265 INVALID
0x266 JUMPDEST
0x267 PUSH2 0x23b
0x26a PUSH2 0x7e0
0x26d JUMP
0x26e JUMPDEST
0x26f STOP
0x270 JUMPDEST
0x271 CALLVALUE
0x272 ISZERO
0x273 PUSH2 0x245
0x276 JUMPI
---
0x265: INVALID 
0x266: JUMPDEST 
0x267: V162 = 0x23b
0x26a: V163 = 0x7e0
0x26d: THROW 
0x26e: JUMPDEST 
0x26f: STOP 
0x270: JUMPDEST 
0x271: V164 = CALLVALUE
0x272: V165 = ISZERO V164
0x273: V166 = 0x245
0x276: THROWI V165
---
Entry stack: []
Stack pops: 0
Stack additions: [0x23b]
Exit stack: []

================================

Block 0x277
[0x277:0x288]
---
Predecessors: [0x265]
Successors: [0x289]
---
0x277 INVALID
0x278 JUMPDEST
0x279 PUSH2 0x24d
0x27c PUSH2 0x872
0x27f JUMP
0x280 JUMPDEST
0x281 STOP
0x282 JUMPDEST
0x283 CALLVALUE
0x284 ISZERO
0x285 PUSH2 0x257
0x288 JUMPI
---
0x277: INVALID 
0x278: JUMPDEST 
0x279: V167 = 0x24d
0x27c: V168 = 0x872
0x27f: THROW 
0x280: JUMPDEST 
0x281: STOP 
0x282: JUMPDEST 
0x283: V169 = CALLVALUE
0x284: V170 = ISZERO V169
0x285: V171 = 0x257
0x288: THROWI V170
---
Entry stack: []
Stack pops: 0
Stack additions: [0x24d]
Exit stack: []

================================

Block 0x289
[0x289:0x2da]
---
Predecessors: [0x277]
Successors: [0x2db]
---
0x289 INVALID
0x28a JUMPDEST
0x28b PUSH2 0x25f
0x28e PUSH2 0xac8
0x291 JUMP
0x292 JUMPDEST
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 DUP3
0x298 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ad AND
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 AND
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP2
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 SWAP2
0x2d1 SUB
0x2d2 SWAP1
0x2d3 RETURN
0x2d4 JUMPDEST
0x2d5 CALLVALUE
0x2d6 ISZERO
0x2d7 PUSH2 0x2a9
0x2da JUMPI
---
0x289: INVALID 
0x28a: JUMPDEST 
0x28b: V172 = 0x25f
0x28e: V173 = 0xac8
0x291: THROW 
0x292: JUMPDEST 
0x293: V174 = 0x40
0x295: V175 = M[0x40]
0x298: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2ae: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x2c5: M[V175] = V179
0x2c6: V180 = 0x20
0x2c8: V181 = ADD 0x20 V175
0x2cc: V182 = 0x40
0x2ce: V183 = M[0x40]
0x2d1: V184 = SUB V181 V183
0x2d3: RETURN V183 V184
0x2d4: JUMPDEST 
0x2d5: V185 = CALLVALUE
0x2d6: V186 = ISZERO V185
0x2d7: V187 = 0x2a9
0x2da: THROWI V186
---
Entry stack: []
Stack pops: 0
Stack additions: [0x25f]
Exit stack: []

================================

Block 0x2db
[0x2db:0x324]
---
Predecessors: [0x289]
Successors: [0x325]
---
0x2db INVALID
0x2dc JUMPDEST
0x2dd PUSH2 0x2d5
0x2e0 PUSH1 0x4
0x2e2 DUP1
0x2e3 DUP1
0x2e4 CALLDATALOAD
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb SWAP1
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff SWAP1
0x300 SWAP2
0x301 SWAP1
0x302 POP
0x303 POP
0x304 PUSH2 0xaee
0x307 JUMP
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d DUP3
0x30e DUP2
0x30f MSTORE
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP2
0x314 POP
0x315 POP
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a SWAP2
0x31b SUB
0x31c SWAP1
0x31d RETURN
0x31e JUMPDEST
0x31f CALLVALUE
0x320 ISZERO
0x321 PUSH2 0x2f3
0x324 JUMPI
---
0x2db: INVALID 
0x2dc: JUMPDEST 
0x2dd: V188 = 0x2d5
0x2e0: V189 = 0x4
0x2e4: V190 = CALLDATALOAD 0x4
0x2e5: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x2fc: V193 = 0x20
0x2fe: V194 = ADD 0x20 0x4
0x304: V195 = 0xaee
0x307: THROW 
0x308: JUMPDEST 
0x309: V196 = 0x40
0x30b: V197 = M[0x40]
0x30f: M[V197] = S0
0x310: V198 = 0x20
0x312: V199 = ADD 0x20 V197
0x316: V200 = 0x40
0x318: V201 = M[0x40]
0x31b: V202 = SUB V199 V201
0x31d: RETURN V201 V202
0x31e: JUMPDEST 
0x31f: V203 = CALLVALUE
0x320: V204 = ISZERO V203
0x321: V205 = 0x2f3
0x324: THROWI V204
---
Entry stack: []
Stack pops: 0
Stack additions: [V192, 0x2d5]
Exit stack: []

================================

Block 0x325
[0x325:0x34e]
---
Predecessors: [0x2db]
Successors: [0x34f]
---
0x325 INVALID
0x326 JUMPDEST
0x327 PUSH2 0x2fb
0x32a PUSH2 0xb06
0x32d JUMP
0x32e JUMPDEST
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 DUP3
0x334 ISZERO
0x335 ISZERO
0x336 ISZERO
0x337 ISZERO
0x338 DUP2
0x339 MSTORE
0x33a PUSH1 0x20
0x33c ADD
0x33d SWAP2
0x33e POP
0x33f POP
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 SWAP2
0x345 SUB
0x346 SWAP1
0x347 RETURN
0x348 JUMPDEST
0x349 CALLVALUE
0x34a ISZERO
0x34b PUSH2 0x31d
0x34e JUMPI
---
0x325: INVALID 
0x326: JUMPDEST 
0x327: V206 = 0x2fb
0x32a: V207 = 0xb06
0x32d: THROW 
0x32e: JUMPDEST 
0x32f: V208 = 0x40
0x331: V209 = M[0x40]
0x334: V210 = ISZERO S0
0x335: V211 = ISZERO V210
0x336: V212 = ISZERO V211
0x337: V213 = ISZERO V212
0x339: M[V209] = V213
0x33a: V214 = 0x20
0x33c: V215 = ADD 0x20 V209
0x340: V216 = 0x40
0x342: V217 = M[0x40]
0x345: V218 = SUB V215 V217
0x347: RETURN V217 V218
0x348: JUMPDEST 
0x349: V219 = CALLVALUE
0x34a: V220 = ISZERO V219
0x34b: V221 = 0x31d
0x34e: THROWI V220
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: []

================================

Block 0x34f
[0x34f:0x374]
---
Predecessors: [0x325]
Successors: [0x375]
---
0x34f INVALID
0x350 JUMPDEST
0x351 PUSH2 0x325
0x354 PUSH2 0xb19
0x357 JUMP
0x358 JUMPDEST
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d DUP3
0x35e DUP2
0x35f MSTORE
0x360 PUSH1 0x20
0x362 ADD
0x363 SWAP2
0x364 POP
0x365 POP
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a SWAP2
0x36b SUB
0x36c SWAP1
0x36d RETURN
0x36e JUMPDEST
0x36f CALLVALUE
0x370 ISZERO
0x371 PUSH2 0x343
0x374 JUMPI
---
0x34f: INVALID 
0x350: JUMPDEST 
0x351: V222 = 0x325
0x354: V223 = 0xb19
0x357: THROW 
0x358: JUMPDEST 
0x359: V224 = 0x40
0x35b: V225 = M[0x40]
0x35f: M[V225] = S0
0x360: V226 = 0x20
0x362: V227 = ADD 0x20 V225
0x366: V228 = 0x40
0x368: V229 = M[0x40]
0x36b: V230 = SUB V227 V229
0x36d: RETURN V229 V230
0x36e: JUMPDEST 
0x36f: V231 = CALLVALUE
0x370: V232 = ISZERO V231
0x371: V233 = 0x343
0x374: THROWI V232
---
Entry stack: []
Stack pops: 0
Stack additions: [0x325]
Exit stack: []

================================

Block 0x375
[0x375:0x39e]
---
Predecessors: [0x34f]
Successors: [0x39f]
---
0x375 INVALID
0x376 JUMPDEST
0x377 PUSH2 0x34b
0x37a PUSH2 0xb1f
0x37d JUMP
0x37e JUMPDEST
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP1
0x383 DUP3
0x384 ISZERO
0x385 ISZERO
0x386 ISZERO
0x387 ISZERO
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP2
0x38e POP
0x38f POP
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 SWAP2
0x395 SUB
0x396 SWAP1
0x397 RETURN
0x398 JUMPDEST
0x399 CALLVALUE
0x39a ISZERO
0x39b PUSH2 0x36d
0x39e JUMPI
---
0x375: INVALID 
0x376: JUMPDEST 
0x377: V234 = 0x34b
0x37a: V235 = 0xb1f
0x37d: THROW 
0x37e: JUMPDEST 
0x37f: V236 = 0x40
0x381: V237 = M[0x40]
0x384: V238 = ISZERO S0
0x385: V239 = ISZERO V238
0x386: V240 = ISZERO V239
0x387: V241 = ISZERO V240
0x389: M[V237] = V241
0x38a: V242 = 0x20
0x38c: V243 = ADD 0x20 V237
0x390: V244 = 0x40
0x392: V245 = M[0x40]
0x395: V246 = SUB V243 V245
0x397: RETURN V245 V246
0x398: JUMPDEST 
0x399: V247 = CALLVALUE
0x39a: V248 = ISZERO V247
0x39b: V249 = 0x36d
0x39e: THROWI V248
---
Entry stack: []
Stack pops: 0
Stack additions: [0x34b]
Exit stack: []

================================

Block 0x39f
[0x39f:0x3cb]
---
Predecessors: [0x375]
Successors: [0x3cc]
---
0x39f INVALID
0x3a0 JUMPDEST
0x3a1 PUSH2 0x375
0x3a4 PUSH2 0xb32
0x3a7 JUMP
0x3a8 JUMPDEST
0x3a9 STOP
0x3aa JUMPDEST
0x3ab PUSH2 0x37f
0x3ae PUSH2 0x381
0x3b1 JUMP
0x3b2 JUMPDEST
0x3b3 STOP
0x3b4 JUMPDEST
0x3b5 PUSH1 0x4
0x3b7 PUSH1 0x1
0x3b9 SWAP1
0x3ba SLOAD
0x3bb SWAP1
0x3bc PUSH2 0x100
0x3bf EXP
0x3c0 SWAP1
0x3c1 DIV
0x3c2 PUSH1 0xff
0x3c4 AND
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 ISZERO
0x3c8 PUSH2 0x39a
0x3cb JUMPI
---
0x39f: INVALID 
0x3a0: JUMPDEST 
0x3a1: V250 = 0x375
0x3a4: V251 = 0xb32
0x3a7: THROW 
0x3a8: JUMPDEST 
0x3a9: STOP 
0x3aa: JUMPDEST 
0x3ab: V252 = 0x37f
0x3ae: V253 = 0x381
0x3b1: THROW 
0x3b2: JUMPDEST 
0x3b3: STOP 
0x3b4: JUMPDEST 
0x3b5: V254 = 0x4
0x3b7: V255 = 0x1
0x3ba: V256 = S[0x4]
0x3bc: V257 = 0x100
0x3bf: V258 = EXP 0x100 0x1
0x3c1: V259 = DIV V256 0x100
0x3c2: V260 = 0xff
0x3c4: V261 = AND 0xff V259
0x3c5: V262 = ISZERO V261
0x3c6: V263 = ISZERO V262
0x3c7: V264 = ISZERO V263
0x3c8: V265 = 0x39a
0x3cb: THROWI V264
---
Entry stack: []
Stack pops: 0
Stack additions: [0x375, 0x37f]
Exit stack: []

================================

Block 0x3cc
[0x3cc:0x3d7]
---
Predecessors: [0x39f]
Successors: [0x3d8]
---
0x3cc INVALID
0x3cd JUMPDEST
0x3ce PUSH1 0x0
0x3d0 CALLVALUE
0x3d1 GT
0x3d2 ISZERO
0x3d3 ISZERO
0x3d4 PUSH2 0x3a6
0x3d7 JUMPI
---
0x3cc: INVALID 
0x3cd: JUMPDEST 
0x3ce: V266 = 0x0
0x3d0: V267 = CALLVALUE
0x3d1: V268 = GT V267 0x0
0x3d2: V269 = ISZERO V268
0x3d3: V270 = ISZERO V269
0x3d4: V271 = 0x3a6
0x3d7: THROWI V270
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d8
[0x3d8:0x4c5]
---
Predecessors: [0x3cc]
Successors: [0x4c6]
---
0x3d8 INVALID
0x3d9 JUMPDEST
0x3da PUSH2 0x3ef
0x3dd PUSH1 0x7
0x3df PUSH1 0x0
0x3e1 CALLER
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 AND
0x3f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40d AND
0x40e DUP2
0x40f MSTORE
0x410 PUSH1 0x20
0x412 ADD
0x413 SWAP1
0x414 DUP2
0x415 MSTORE
0x416 PUSH1 0x20
0x418 ADD
0x419 PUSH1 0x0
0x41b SHA3
0x41c SLOAD
0x41d CALLVALUE
0x41e PUSH2 0xeb1
0x421 JUMP
0x422 JUMPDEST
0x423 PUSH1 0x7
0x425 PUSH1 0x0
0x427 CALLER
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 SWAP1
0x45a DUP2
0x45b MSTORE
0x45c PUSH1 0x20
0x45e ADD
0x45f PUSH1 0x0
0x461 SHA3
0x462 DUP2
0x463 SWAP1
0x464 SSTORE
0x465 POP
0x466 PUSH2 0x43e
0x469 PUSH1 0x5
0x46b SLOAD
0x46c CALLVALUE
0x46d PUSH2 0xeb1
0x470 JUMP
0x471 JUMPDEST
0x472 PUSH1 0x5
0x474 DUP2
0x475 SWAP1
0x476 SSTORE
0x477 POP
0x478 CALLER
0x479 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48e AND
0x48f PUSH32 0x8e150dbd1c86723b974309ed03336edf576eab18d32d429e45ca343b40e21b8
0x4b0 CALLVALUE
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 DUP3
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb SWAP2
0x4bc POP
0x4bd POP
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 DUP1
0x4c2 SWAP2
0x4c3 SUB
0x4c4 SWAP1
0x4c5 LOG2
---
0x3d8: INVALID 
0x3d9: JUMPDEST 
0x3da: V272 = 0x3ef
0x3dd: V273 = 0x7
0x3df: V274 = 0x0
0x3e1: V275 = CALLER
0x3e2: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x3f8: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x40f: M[0x0] = V279
0x410: V280 = 0x20
0x412: V281 = ADD 0x20 0x0
0x415: M[0x20] = 0x7
0x416: V282 = 0x20
0x418: V283 = ADD 0x20 0x20
0x419: V284 = 0x0
0x41b: V285 = SHA3 0x0 0x40
0x41c: V286 = S[V285]
0x41d: V287 = CALLVALUE
0x41e: V288 = 0xeb1
0x421: THROW 
0x422: JUMPDEST 
0x423: V289 = 0x7
0x425: V290 = 0x0
0x427: V291 = CALLER
0x428: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x43e: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x455: M[0x0] = V295
0x456: V296 = 0x20
0x458: V297 = ADD 0x20 0x0
0x45b: M[0x20] = 0x7
0x45c: V298 = 0x20
0x45e: V299 = ADD 0x20 0x20
0x45f: V300 = 0x0
0x461: V301 = SHA3 0x0 0x40
0x464: S[V301] = S0
0x466: V302 = 0x43e
0x469: V303 = 0x5
0x46b: V304 = S[0x5]
0x46c: V305 = CALLVALUE
0x46d: V306 = 0xeb1
0x470: THROW 
0x471: JUMPDEST 
0x472: V307 = 0x5
0x476: S[0x5] = S0
0x478: V308 = CALLER
0x479: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x48f: V311 = 0x8e150dbd1c86723b974309ed03336edf576eab18d32d429e45ca343b40e21b8
0x4b0: V312 = CALLVALUE
0x4b1: V313 = 0x40
0x4b3: V314 = M[0x40]
0x4b7: M[V314] = V312
0x4b8: V315 = 0x20
0x4ba: V316 = ADD 0x20 V314
0x4be: V317 = 0x40
0x4c0: V318 = M[0x40]
0x4c3: V319 = SUB V316 V318
0x4c5: LOG V318 V319 0x8e150dbd1c86723b974309ed03336edf576eab18d32d429e45ca343b40e21b8 V310
---
Entry stack: []
Stack pops: 0
Stack additions: [V287, V286, 0x3ef, V305, V304, 0x43e]
Exit stack: []

================================

Block 0x4c6
[0x4c6:0x4c6]
---
Predecessors: [0x3d8]
Successors: [0x4c7]
---
0x4c6 JUMPDEST
---
0x4c6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4c7
[0x4c7:0x4e5]
---
Predecessors: [0x4c6]
Successors: [0x4e6]
---
0x4c7 JUMPDEST
0x4c8 JUMP
0x4c9 JUMPDEST
0x4ca PUSH1 0x2
0x4cc SLOAD
0x4cd DUP2
0x4ce JUMP
0x4cf JUMPDEST
0x4d0 PUSH1 0x4
0x4d2 PUSH1 0x1
0x4d4 SWAP1
0x4d5 SLOAD
0x4d6 SWAP1
0x4d7 PUSH2 0x100
0x4da EXP
0x4db SWAP1
0x4dc DIV
0x4dd PUSH1 0xff
0x4df AND
0x4e0 ISZERO
0x4e1 ISZERO
0x4e2 PUSH2 0x4b4
0x4e5 JUMPI
---
0x4c7: JUMPDEST 
0x4c8: JUMP S0
0x4c9: JUMPDEST 
0x4ca: V320 = 0x2
0x4cc: V321 = S[0x2]
0x4ce: JUMP S0
0x4cf: JUMPDEST 
0x4d0: V322 = 0x4
0x4d2: V323 = 0x1
0x4d5: V324 = S[0x4]
0x4d7: V325 = 0x100
0x4da: V326 = EXP 0x100 0x1
0x4dc: V327 = DIV V324 0x100
0x4dd: V328 = 0xff
0x4df: V329 = AND 0xff V327
0x4e0: V330 = ISZERO V329
0x4e1: V331 = ISZERO V330
0x4e2: V332 = 0x4b4
0x4e5: THROWI V331
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x4e6
[0x4e6:0x53e]
---
Predecessors: [0x4c7]
Successors: [0x53f]
---
0x4e6 INVALID
0x4e7 JUMPDEST
0x4e8 PUSH1 0x6
0x4ea PUSH1 0x0
0x4ec SWAP1
0x4ed SLOAD
0x4ee SWAP1
0x4ef PUSH2 0x100
0x4f2 EXP
0x4f3 SWAP1
0x4f4 DIV
0x4f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50a AND
0x50b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x520 AND
0x521 CALLER
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 EQ
0x539 ISZERO
0x53a ISZERO
0x53b PUSH2 0x50d
0x53e JUMPI
---
0x4e6: INVALID 
0x4e7: JUMPDEST 
0x4e8: V333 = 0x6
0x4ea: V334 = 0x0
0x4ed: V335 = S[0x6]
0x4ef: V336 = 0x100
0x4f2: V337 = EXP 0x100 0x0
0x4f4: V338 = DIV V335 0x1
0x4f5: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x50b: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x520: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x521: V343 = CALLER
0x522: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x538: V346 = EQ V345 V342
0x539: V347 = ISZERO V346
0x53a: V348 = ISZERO V347
0x53b: V349 = 0x50d
0x53e: THROWI V348
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x53f
[0x53f:0x5cc]
---
Predecessors: [0x4e6]
Successors: [0x5cd]
---
0x53f INVALID
0x540 JUMPDEST
0x541 PUSH1 0x0
0x543 PUSH1 0x0
0x545 SWAP1
0x546 SLOAD
0x547 SWAP1
0x548 PUSH2 0x100
0x54b EXP
0x54c SWAP1
0x54d DIV
0x54e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x563 AND
0x564 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x579 AND
0x57a PUSH4 0x3ccfd60b
0x57f PUSH1 0x0
0x581 PUSH1 0x40
0x583 MLOAD
0x584 PUSH1 0x20
0x586 ADD
0x587 MSTORE
0x588 PUSH1 0x40
0x58a MLOAD
0x58b DUP2
0x58c PUSH4 0xffffffff
0x591 AND
0x592 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5b0 MUL
0x5b1 DUP2
0x5b2 MSTORE
0x5b3 PUSH1 0x4
0x5b5 ADD
0x5b6 DUP1
0x5b7 SWAP1
0x5b8 POP
0x5b9 PUSH1 0x20
0x5bb PUSH1 0x40
0x5bd MLOAD
0x5be DUP1
0x5bf DUP4
0x5c0 SUB
0x5c1 DUP2
0x5c2 PUSH1 0x0
0x5c4 DUP8
0x5c5 DUP1
0x5c6 EXTCODESIZE
0x5c7 ISZERO
0x5c8 ISZERO
0x5c9 PUSH2 0x59b
0x5cc JUMPI
---
0x53f: INVALID 
0x540: JUMPDEST 
0x541: V350 = 0x0
0x543: V351 = 0x0
0x546: V352 = S[0x0]
0x548: V353 = 0x100
0x54b: V354 = EXP 0x100 0x0
0x54d: V355 = DIV V352 0x1
0x54e: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x563: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x564: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x579: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x57a: V360 = 0x3ccfd60b
0x57f: V361 = 0x0
0x581: V362 = 0x40
0x583: V363 = M[0x40]
0x584: V364 = 0x20
0x586: V365 = ADD 0x20 V363
0x587: M[V365] = 0x0
0x588: V366 = 0x40
0x58a: V367 = M[0x40]
0x58c: V368 = 0xffffffff
0x591: V369 = AND 0xffffffff 0x3ccfd60b
0x592: V370 = 0x100000000000000000000000000000000000000000000000000000000
0x5b0: V371 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x5b2: M[V367] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x5b3: V372 = 0x4
0x5b5: V373 = ADD 0x4 V367
0x5b9: V374 = 0x20
0x5bb: V375 = 0x40
0x5bd: V376 = M[0x40]
0x5c0: V377 = SUB V373 V376
0x5c2: V378 = 0x0
0x5c6: V379 = EXTCODESIZE V359
0x5c7: V380 = ISZERO V379
0x5c8: V381 = ISZERO V380
0x5c9: V382 = 0x59b
0x5cc: THROWI V381
---
Entry stack: []
Stack pops: 0
Stack additions: [V359, 0x0, V376, V377, V376, 0x20, V373, 0x3ccfd60b, V359]
Exit stack: []

================================

Block 0x5cd
[0x5cd:0x5d9]
---
Predecessors: [0x53f]
Successors: [0x5da]
---
0x5cd INVALID
0x5ce JUMPDEST
0x5cf PUSH1 0x32
0x5d1 GAS
0x5d2 SUB
0x5d3 CALL
0x5d4 ISZERO
0x5d5 ISZERO
0x5d6 PUSH2 0x5a8
0x5d9 JUMPI
---
0x5cd: INVALID 
0x5ce: JUMPDEST 
0x5cf: V383 = 0x32
0x5d1: V384 = GAS
0x5d2: V385 = SUB V384 0x32
0x5d3: V386 = CALL V385 S0 S1 S2 S3 S4 S5
0x5d4: V387 = ISZERO V386
0x5d5: V388 = ISZERO V387
0x5d6: V389 = 0x5a8
0x5d9: THROWI V388
---
Entry stack: [V359, 0x3ccfd60b, V373, 0x20, V376, V377, V376, 0x0, V359]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5da
[0x5da:0x5eb]
---
Predecessors: [0x5cd]
Successors: [0x5ec]
---
0x5da INVALID
0x5db JUMPDEST
0x5dc POP
0x5dd POP
0x5de POP
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 DUP1
0x5e3 MLOAD
0x5e4 SWAP1
0x5e5 POP
0x5e6 ISZERO
0x5e7 ISZERO
0x5e8 PUSH2 0x5ba
0x5eb JUMPI
---
0x5da: INVALID 
0x5db: JUMPDEST 
0x5df: V390 = 0x40
0x5e1: V391 = M[0x40]
0x5e3: V392 = M[V391]
0x5e6: V393 = ISZERO V392
0x5e7: V394 = ISZERO V393
0x5e8: V395 = 0x5ba
0x5eb: THROWI V394
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5ec
[0x5ec:0x5ec]
---
Predecessors: [0x5da]
Successors: []
---
0x5ec INVALID
---
0x5ec: INVALID 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5ed
[0x5ed:0x608]
---
Predecessors: [0x191]
Successors: [0x609]
---
0x5ed JUMPDEST
0x5ee PUSH1 0x1
0x5f0 PUSH1 0x4
0x5f2 PUSH1 0x2
0x5f4 PUSH2 0x100
0x5f7 EXP
0x5f8 DUP2
0x5f9 SLOAD
0x5fa DUP2
0x5fb PUSH1 0xff
0x5fd MUL
0x5fe NOT
0x5ff AND
0x600 SWAP1
0x601 DUP4
0x602 ISZERO
0x603 ISZERO
0x604 MUL
0x605 OR
0x606 SWAP1
0x607 SSTORE
0x608 POP
---
0x5ed: JUMPDEST 
0x5ee: V396 = 0x1
0x5f0: V397 = 0x4
0x5f2: V398 = 0x2
0x5f4: V399 = 0x100
0x5f7: V400 = EXP 0x100 0x2
0x5f9: V401 = S[0x4]
0x5fb: V402 = 0xff
0x5fd: V403 = MUL 0xff 0x10000
0x5fe: V404 = NOT 0xff0000
0x5ff: V405 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V401
0x602: V406 = ISZERO 0x1
0x603: V407 = ISZERO 0x0
0x604: V408 = MUL 0x1 0x10000
0x605: V409 = OR 0x10000 V405
0x607: S[0x4] = V409
---
Entry stack: [0x167]
Stack pops: 0
Stack additions: []
Exit stack: [0x167]

================================

Block 0x609
[0x609:0x609]
---
Predecessors: [0x5ed]
Successors: [0x60a]
---
0x609 JUMPDEST
---
0x609: JUMPDEST 
---
Entry stack: [0x167]
Stack pops: 0
Stack additions: []
Exit stack: [0x167]

================================

Block 0x60a
[0x60a:0x60a]
---
Predecessors: [0x609]
Successors: [0x60b]
---
0x60a JUMPDEST
---
0x60a: JUMPDEST 
---
Entry stack: [0x167]
Stack pops: 0
Stack additions: []
Exit stack: [0x167]

================================

Block 0x60b
[0x60b:0x62d]
---
Predecessors: [0x60a]
Successors: [0x62e]
---
0x60b JUMPDEST
0x60c JUMP
0x60d JUMPDEST
0x60e PUSH1 0x4
0x610 PUSH1 0x0
0x612 SWAP1
0x613 SLOAD
0x614 SWAP1
0x615 PUSH2 0x100
0x618 EXP
0x619 SWAP1
0x61a DIV
0x61b PUSH1 0xff
0x61d AND
0x61e DUP2
0x61f JUMP
0x620 JUMPDEST
0x621 PUSH1 0x0
0x623 PUSH1 0x3
0x625 SLOAD
0x626 TIMESTAMP
0x627 LT
0x628 ISZERO
0x629 DUP1
0x62a PUSH2 0x60c
0x62d JUMPI
---
0x60b: JUMPDEST 
0x60c: THROW 
0x60d: JUMPDEST 
0x60e: V410 = 0x4
0x610: V411 = 0x0
0x613: V412 = S[0x4]
0x615: V413 = 0x100
0x618: V414 = EXP 0x100 0x0
0x61a: V415 = DIV V412 0x1
0x61b: V416 = 0xff
0x61d: V417 = AND 0xff V415
0x61f: JUMP S0
0x620: JUMPDEST 
0x621: V418 = 0x0
0x623: V419 = 0x3
0x625: V420 = S[0x3]
0x626: V421 = TIMESTAMP
0x627: V422 = LT V421 V420
0x628: V423 = ISZERO V422
0x62a: V424 = 0x60c
0x62d: THROWI V423
---
Entry stack: [0x167]
Stack pops: 2
Stack additions: [V423, 0x0]
Exit stack: []

================================

Block 0x62e
[0x62e:0x63e]
---
Predecessors: [0x60b]
Successors: [0x63f]
---
0x62e POP
0x62f PUSH1 0x4
0x631 PUSH1 0x0
0x633 SWAP1
0x634 SLOAD
0x635 SWAP1
0x636 PUSH2 0x100
0x639 EXP
0x63a SWAP1
0x63b DIV
0x63c PUSH1 0xff
0x63e AND
---
0x62f: V425 = 0x4
0x631: V426 = 0x0
0x634: V427 = S[0x4]
0x636: V428 = 0x100
0x639: V429 = EXP 0x100 0x0
0x63b: V430 = DIV V427 0x1
0x63c: V431 = 0xff
0x63e: V432 = AND 0xff V430
---
Entry stack: [0x0, V423]
Stack pops: 1
Stack additions: [V432]
Exit stack: [0x0, V432]

================================

Block 0x63f
[0x63f:0x645]
---
Predecessors: [0x62e]
Successors: [0x646]
---
0x63f JUMPDEST
0x640 ISZERO
0x641 ISZERO
0x642 PUSH2 0x618
0x645 JUMPI
---
0x63f: JUMPDEST 
0x640: V433 = ISZERO V432
0x641: V434 = ISZERO V433
0x642: V435 = 0x618
0x645: THROWI V434
---
Entry stack: [0x0, V432]
Stack pops: 1
Stack additions: []
Exit stack: [0x0]

================================

Block 0x646
[0x646:0x662]
---
Predecessors: [0x63f]
Successors: [0x663]
---
0x646 PUSH1 0x0
0x648 PUSH1 0x0
0x64a REVERT
0x64b JUMPDEST
0x64c PUSH1 0x4
0x64e PUSH1 0x1
0x650 SWAP1
0x651 SLOAD
0x652 SWAP1
0x653 PUSH2 0x100
0x656 EXP
0x657 SWAP1
0x658 DIV
0x659 PUSH1 0xff
0x65b AND
0x65c ISZERO
0x65d ISZERO
0x65e ISZERO
0x65f PUSH2 0x631
0x662 JUMPI
---
0x646: V436 = 0x0
0x648: V437 = 0x0
0x64a: REVERT 0x0 0x0
0x64b: JUMPDEST 
0x64c: V438 = 0x4
0x64e: V439 = 0x1
0x651: V440 = S[0x4]
0x653: V441 = 0x100
0x656: V442 = EXP 0x100 0x1
0x658: V443 = DIV V440 0x100
0x659: V444 = 0xff
0x65b: V445 = AND 0xff V443
0x65c: V446 = ISZERO V445
0x65d: V447 = ISZERO V446
0x65e: V448 = ISZERO V447
0x65f: V449 = 0x631
0x662: THROWI V448
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x663
[0x663:0x6b0]
---
Predecessors: [0x646]
Successors: [0x6b1]
---
0x663 INVALID
0x664 JUMPDEST
0x665 PUSH1 0x7
0x667 PUSH1 0x0
0x669 CALLER
0x66a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67f AND
0x680 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x695 AND
0x696 DUP2
0x697 MSTORE
0x698 PUSH1 0x20
0x69a ADD
0x69b SWAP1
0x69c DUP2
0x69d MSTORE
0x69e PUSH1 0x20
0x6a0 ADD
0x6a1 PUSH1 0x0
0x6a3 SHA3
0x6a4 SLOAD
0x6a5 SWAP1
0x6a6 POP
0x6a7 PUSH1 0x0
0x6a9 DUP2
0x6aa GT
0x6ab ISZERO
0x6ac ISZERO
0x6ad PUSH2 0x67f
0x6b0 JUMPI
---
0x663: INVALID 
0x664: JUMPDEST 
0x665: V450 = 0x7
0x667: V451 = 0x0
0x669: V452 = CALLER
0x66a: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x67f: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x680: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x695: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x697: M[0x0] = V456
0x698: V457 = 0x20
0x69a: V458 = ADD 0x20 0x0
0x69d: M[0x20] = 0x7
0x69e: V459 = 0x20
0x6a0: V460 = ADD 0x20 0x20
0x6a1: V461 = 0x0
0x6a3: V462 = SHA3 0x0 0x40
0x6a4: V463 = S[V462]
0x6a7: V464 = 0x0
0x6aa: V465 = GT V463 0x0
0x6ab: V466 = ISZERO V465
0x6ac: V467 = ISZERO V466
0x6ad: V468 = 0x67f
0x6b0: THROWI V467
---
Entry stack: []
Stack pops: 0
Stack additions: [V463]
Exit stack: []

================================

Block 0x6b1
[0x6b1:0x747]
---
Predecessors: [0x663]
Successors: [0x748]
---
0x6b1 INVALID
0x6b2 JUMPDEST
0x6b3 PUSH1 0x0
0x6b5 PUSH1 0x7
0x6b7 PUSH1 0x0
0x6b9 CALLER
0x6ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cf AND
0x6d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e5 AND
0x6e6 DUP2
0x6e7 MSTORE
0x6e8 PUSH1 0x20
0x6ea ADD
0x6eb SWAP1
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x20
0x6f0 ADD
0x6f1 PUSH1 0x0
0x6f3 SHA3
0x6f4 DUP2
0x6f5 SWAP1
0x6f6 SSTORE
0x6f7 POP
0x6f8 PUSH2 0x6d0
0x6fb PUSH1 0x5
0x6fd SLOAD
0x6fe DUP3
0x6ff PUSH2 0xed1
0x702 JUMP
0x703 JUMPDEST
0x704 PUSH1 0x5
0x706 DUP2
0x707 SWAP1
0x708 SSTORE
0x709 POP
0x70a CALLER
0x70b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x720 AND
0x721 PUSH2 0x8fc
0x724 DUP3
0x725 SWAP1
0x726 DUP2
0x727 ISZERO
0x728 MUL
0x729 SWAP1
0x72a PUSH1 0x40
0x72c MLOAD
0x72d DUP1
0x72e SWAP1
0x72f POP
0x730 PUSH1 0x0
0x732 PUSH1 0x40
0x734 MLOAD
0x735 DUP1
0x736 DUP4
0x737 SUB
0x738 DUP2
0x739 DUP6
0x73a DUP9
0x73b DUP9
0x73c CALL
0x73d SWAP4
0x73e POP
0x73f POP
0x740 POP
0x741 POP
0x742 ISZERO
0x743 ISZERO
0x744 PUSH2 0x716
0x747 JUMPI
---
0x6b1: INVALID 
0x6b2: JUMPDEST 
0x6b3: V469 = 0x0
0x6b5: V470 = 0x7
0x6b7: V471 = 0x0
0x6b9: V472 = CALLER
0x6ba: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cf: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x6d0: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e5: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x6e7: M[0x0] = V476
0x6e8: V477 = 0x20
0x6ea: V478 = ADD 0x20 0x0
0x6ed: M[0x20] = 0x7
0x6ee: V479 = 0x20
0x6f0: V480 = ADD 0x20 0x20
0x6f1: V481 = 0x0
0x6f3: V482 = SHA3 0x0 0x40
0x6f6: S[V482] = 0x0
0x6f8: V483 = 0x6d0
0x6fb: V484 = 0x5
0x6fd: V485 = S[0x5]
0x6ff: V486 = 0xed1
0x702: THROW 
0x703: JUMPDEST 
0x704: V487 = 0x5
0x708: S[0x5] = S0
0x70a: V488 = CALLER
0x70b: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x720: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x721: V491 = 0x8fc
0x727: V492 = ISZERO S1
0x728: V493 = MUL V492 0x8fc
0x72a: V494 = 0x40
0x72c: V495 = M[0x40]
0x730: V496 = 0x0
0x732: V497 = 0x40
0x734: V498 = M[0x40]
0x737: V499 = SUB V495 V498
0x73c: V500 = CALL V493 V490 S1 V498 V499 V498 0x0
0x742: V501 = ISZERO V500
0x743: V502 = ISZERO V501
0x744: V503 = 0x716
0x747: THROWI V502
---
Entry stack: [V463]
Stack pops: 0
Stack additions: [S0, V485, 0x6d0, S0, S1]
Exit stack: []

================================

Block 0x748
[0x748:0x797]
---
Predecessors: [0x6b1]
Successors: [0x798]
---
0x748 INVALID
0x749 JUMPDEST
0x74a CALLER
0x74b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x760 AND
0x761 PUSH32 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7
0x782 DUP3
0x783 PUSH1 0x40
0x785 MLOAD
0x786 DUP1
0x787 DUP3
0x788 DUP2
0x789 MSTORE
0x78a PUSH1 0x20
0x78c ADD
0x78d SWAP2
0x78e POP
0x78f POP
0x790 PUSH1 0x40
0x792 MLOAD
0x793 DUP1
0x794 SWAP2
0x795 SUB
0x796 SWAP1
0x797 LOG2
---
0x748: INVALID 
0x749: JUMPDEST 
0x74a: V504 = CALLER
0x74b: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x760: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x761: V507 = 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7
0x783: V508 = 0x40
0x785: V509 = M[0x40]
0x789: M[V509] = S0
0x78a: V510 = 0x20
0x78c: V511 = ADD 0x20 V509
0x790: V512 = 0x40
0x792: V513 = M[0x40]
0x795: V514 = SUB V511 V513
0x797: LOG V513 V514 0xb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7 V506
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x798
[0x798:0x798]
---
Predecessors: [0x748]
Successors: [0x799]
---
0x798 JUMPDEST
---
0x798: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x799
[0x799:0x799]
---
Predecessors: [0x798]
Successors: [0x79a]
---
0x799 JUMPDEST
---
0x799: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x79a
[0x79a:0x7e7]
---
Predecessors: [0x799]
Successors: [0x7e8]
---
0x79a JUMPDEST
0x79b POP
0x79c JUMP
0x79d JUMPDEST
0x79e PUSH1 0x5
0x7a0 SLOAD
0x7a1 DUP2
0x7a2 JUMP
0x7a3 JUMPDEST
0x7a4 PUSH1 0x0
0x7a6 PUSH1 0x7
0x7a8 PUSH1 0x0
0x7aa DUP4
0x7ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c0 AND
0x7c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d6 AND
0x7d7 DUP2
0x7d8 MSTORE
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc SWAP1
0x7dd DUP2
0x7de MSTORE
0x7df PUSH1 0x20
0x7e1 ADD
0x7e2 PUSH1 0x0
0x7e4 SHA3
0x7e5 SLOAD
0x7e6 SWAP1
0x7e7 POP
---
0x79a: JUMPDEST 
0x79c: JUMP S1
0x79d: JUMPDEST 
0x79e: V515 = 0x5
0x7a0: V516 = S[0x5]
0x7a2: JUMP S0
0x7a3: JUMPDEST 
0x7a4: V517 = 0x0
0x7a6: V518 = 0x7
0x7a8: V519 = 0x0
0x7ab: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c0: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7c1: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d6: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x7d8: M[0x0] = V523
0x7d9: V524 = 0x20
0x7db: V525 = ADD 0x20 0x0
0x7de: M[0x20] = 0x7
0x7df: V526 = 0x20
0x7e1: V527 = ADD 0x20 0x20
0x7e2: V528 = 0x0
0x7e4: V529 = SHA3 0x0 0x40
0x7e5: V530 = S[V529]
---
Entry stack: [S0]
Stack pops: 6
Stack additions: [V530, S0]
Exit stack: []

================================

Block 0x7e8
[0x7e8:0x82a]
---
Predecessors: [0x79a]
Successors: [0x82b]
---
0x7e8 JUMPDEST
0x7e9 SWAP2
0x7ea SWAP1
0x7eb POP
0x7ec JUMP
0x7ed JUMPDEST
0x7ee PUSH1 0x1
0x7f0 PUSH1 0x0
0x7f2 SWAP1
0x7f3 SLOAD
0x7f4 SWAP1
0x7f5 PUSH2 0x100
0x7f8 EXP
0x7f9 SWAP1
0x7fa DIV
0x7fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x810 AND
0x811 DUP2
0x812 JUMP
0x813 JUMPDEST
0x814 PUSH1 0x4
0x816 PUSH1 0x1
0x818 SWAP1
0x819 SLOAD
0x81a SWAP1
0x81b PUSH2 0x100
0x81e EXP
0x81f SWAP1
0x820 DIV
0x821 PUSH1 0xff
0x823 AND
0x824 ISZERO
0x825 ISZERO
0x826 ISZERO
0x827 PUSH2 0x7f9
0x82a JUMPI
---
0x7e8: JUMPDEST 
0x7ec: JUMP S2
0x7ed: JUMPDEST 
0x7ee: V531 = 0x1
0x7f0: V532 = 0x0
0x7f3: V533 = S[0x1]
0x7f5: V534 = 0x100
0x7f8: V535 = EXP 0x100 0x0
0x7fa: V536 = DIV V533 0x1
0x7fb: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x810: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x812: JUMP S0
0x813: JUMPDEST 
0x814: V539 = 0x4
0x816: V540 = 0x1
0x819: V541 = S[0x4]
0x81b: V542 = 0x100
0x81e: V543 = EXP 0x100 0x1
0x820: V544 = DIV V541 0x100
0x821: V545 = 0xff
0x823: V546 = AND 0xff V544
0x824: V547 = ISZERO V546
0x825: V548 = ISZERO V547
0x826: V549 = ISZERO V548
0x827: V550 = 0x7f9
0x82a: THROWI V549
---
Entry stack: [S1, V530]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0x82b
[0x82b:0x883]
---
Predecessors: [0x7e8]
Successors: [0x884]
---
0x82b INVALID
0x82c JUMPDEST
0x82d PUSH1 0x6
0x82f PUSH1 0x0
0x831 SWAP1
0x832 SLOAD
0x833 SWAP1
0x834 PUSH2 0x100
0x837 EXP
0x838 SWAP1
0x839 DIV
0x83a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84f AND
0x850 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x865 AND
0x866 CALLER
0x867 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87c AND
0x87d EQ
0x87e ISZERO
0x87f ISZERO
0x880 PUSH2 0x852
0x883 JUMPI
---
0x82b: INVALID 
0x82c: JUMPDEST 
0x82d: V551 = 0x6
0x82f: V552 = 0x0
0x832: V553 = S[0x6]
0x834: V554 = 0x100
0x837: V555 = EXP 0x100 0x0
0x839: V556 = DIV V553 0x1
0x83a: V557 = 0xffffffffffffffffffffffffffffffffffffffff
0x84f: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V556
0x850: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x865: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x866: V561 = CALLER
0x867: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x87c: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x87d: V564 = EQ V563 V560
0x87e: V565 = ISZERO V564
0x87f: V566 = ISZERO V565
0x880: V567 = 0x852
0x883: THROWI V566
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x884
[0x884:0x8a0]
---
Predecessors: [0x82b]
Successors: [0x8a1]
---
0x884 INVALID
0x885 JUMPDEST
0x886 PUSH1 0x1
0x888 PUSH1 0x4
0x88a PUSH1 0x0
0x88c PUSH2 0x100
0x88f EXP
0x890 DUP2
0x891 SLOAD
0x892 DUP2
0x893 PUSH1 0xff
0x895 MUL
0x896 NOT
0x897 AND
0x898 SWAP1
0x899 DUP4
0x89a ISZERO
0x89b ISZERO
0x89c MUL
0x89d OR
0x89e SWAP1
0x89f SSTORE
0x8a0 POP
---
0x884: INVALID 
0x885: JUMPDEST 
0x886: V568 = 0x1
0x888: V569 = 0x4
0x88a: V570 = 0x0
0x88c: V571 = 0x100
0x88f: V572 = EXP 0x100 0x0
0x891: V573 = S[0x4]
0x893: V574 = 0xff
0x895: V575 = MUL 0xff 0x1
0x896: V576 = NOT 0xff
0x897: V577 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V573
0x89a: V578 = ISZERO 0x1
0x89b: V579 = ISZERO 0x0
0x89c: V580 = MUL 0x1 0x1
0x89d: V581 = OR 0x1 V577
0x89f: S[0x4] = V581
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8a1
[0x8a1:0x8a1]
---
Predecessors: [0x884]
Successors: [0x8a2]
---
0x8a1 JUMPDEST
---
0x8a1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8a2
[0x8a2:0x8a2]
---
Predecessors: [0x8a1]
Successors: [0x8a3]
---
0x8a2 JUMPDEST
---
0x8a2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8a3
[0x8a3:0x8bd]
---
Predecessors: [0x8a2]
Successors: [0x8be]
---
0x8a3 JUMPDEST
0x8a4 JUMP
0x8a5 JUMPDEST
0x8a6 PUSH1 0x0
0x8a8 PUSH1 0x4
0x8aa PUSH1 0x2
0x8ac SWAP1
0x8ad SLOAD
0x8ae SWAP1
0x8af PUSH2 0x100
0x8b2 EXP
0x8b3 SWAP1
0x8b4 DIV
0x8b5 PUSH1 0xff
0x8b7 AND
0x8b8 ISZERO
0x8b9 ISZERO
0x8ba PUSH2 0x88c
0x8bd JUMPI
---
0x8a3: JUMPDEST 
0x8a4: JUMP S0
0x8a5: JUMPDEST 
0x8a6: V582 = 0x0
0x8a8: V583 = 0x4
0x8aa: V584 = 0x2
0x8ad: V585 = S[0x4]
0x8af: V586 = 0x100
0x8b2: V587 = EXP 0x100 0x2
0x8b4: V588 = DIV V585 0x10000
0x8b5: V589 = 0xff
0x8b7: V590 = AND 0xff V588
0x8b8: V591 = ISZERO V590
0x8b9: V592 = ISZERO V591
0x8ba: V593 = 0x88c
0x8bd: THROWI V592
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0x8be
[0x8be:0x927]
---
Predecessors: [0x8a3]
Successors: [0x928]
---
0x8be INVALID
0x8bf JUMPDEST
0x8c0 PUSH2 0x8e8
0x8c3 PUSH2 0x8da
0x8c6 PUSH1 0x7
0x8c8 PUSH1 0x0
0x8ca CALLER
0x8cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e0 AND
0x8e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f6 AND
0x8f7 DUP2
0x8f8 MSTORE
0x8f9 PUSH1 0x20
0x8fb ADD
0x8fc SWAP1
0x8fd DUP2
0x8fe MSTORE
0x8ff PUSH1 0x20
0x901 ADD
0x902 PUSH1 0x0
0x904 SHA3
0x905 SLOAD
0x906 PUSH1 0x2
0x908 SLOAD
0x909 PUSH2 0xeeb
0x90c JUMP
0x90d JUMPDEST
0x90e PUSH8 0xde0b6b3a7640000
0x917 PUSH2 0xf20
0x91a JUMP
0x91b JUMPDEST
0x91c SWAP1
0x91d POP
0x91e PUSH1 0x0
0x920 DUP2
0x921 GT
0x922 ISZERO
0x923 ISZERO
0x924 PUSH2 0x8f6
0x927 JUMPI
---
0x8be: INVALID 
0x8bf: JUMPDEST 
0x8c0: V594 = 0x8e8
0x8c3: V595 = 0x8da
0x8c6: V596 = 0x7
0x8c8: V597 = 0x0
0x8ca: V598 = CALLER
0x8cb: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x8e1: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f6: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x8f8: M[0x0] = V602
0x8f9: V603 = 0x20
0x8fb: V604 = ADD 0x20 0x0
0x8fe: M[0x20] = 0x7
0x8ff: V605 = 0x20
0x901: V606 = ADD 0x20 0x20
0x902: V607 = 0x0
0x904: V608 = SHA3 0x0 0x40
0x905: V609 = S[V608]
0x906: V610 = 0x2
0x908: V611 = S[0x2]
0x909: V612 = 0xeeb
0x90c: THROW 
0x90d: JUMPDEST 
0x90e: V613 = 0xde0b6b3a7640000
0x917: V614 = 0xf20
0x91a: THROW 
0x91b: JUMPDEST 
0x91e: V615 = 0x0
0x921: V616 = GT S0 0x0
0x922: V617 = ISZERO V616
0x923: V618 = ISZERO V617
0x924: V619 = 0x8f6
0x927: THROWI V618
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V611, V609, 0x8da, 0x8e8, 0xde0b6b3a7640000, S0]
Exit stack: []

================================

Block 0x928
[0x928:0xa87]
---
Predecessors: [0x8be]
Successors: [0xa88]
---
0x928 INVALID
0x929 JUMPDEST
0x92a PUSH2 0x941
0x92d PUSH1 0x5
0x92f SLOAD
0x930 PUSH1 0x7
0x932 PUSH1 0x0
0x934 CALLER
0x935 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94a AND
0x94b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x960 AND
0x961 DUP2
0x962 MSTORE
0x963 PUSH1 0x20
0x965 ADD
0x966 SWAP1
0x967 DUP2
0x968 MSTORE
0x969 PUSH1 0x20
0x96b ADD
0x96c PUSH1 0x0
0x96e SHA3
0x96f SLOAD
0x970 PUSH2 0xed1
0x973 JUMP
0x974 JUMPDEST
0x975 PUSH1 0x5
0x977 DUP2
0x978 SWAP1
0x979 SSTORE
0x97a POP
0x97b PUSH1 0x0
0x97d PUSH1 0x7
0x97f PUSH1 0x0
0x981 CALLER
0x982 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x997 AND
0x998 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ad AND
0x9ae DUP2
0x9af MSTORE
0x9b0 PUSH1 0x20
0x9b2 ADD
0x9b3 SWAP1
0x9b4 DUP2
0x9b5 MSTORE
0x9b6 PUSH1 0x20
0x9b8 ADD
0x9b9 PUSH1 0x0
0x9bb SHA3
0x9bc DUP2
0x9bd SWAP1
0x9be SSTORE
0x9bf POP
0x9c0 PUSH1 0x0
0x9c2 PUSH1 0x0
0x9c4 SWAP1
0x9c5 SLOAD
0x9c6 SWAP1
0x9c7 PUSH2 0x100
0x9ca EXP
0x9cb SWAP1
0x9cc DIV
0x9cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e2 AND
0x9e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f8 AND
0x9f9 PUSH4 0xa9059cbb
0x9fe CALLER
0x9ff DUP4
0xa00 PUSH1 0x0
0xa02 PUSH1 0x40
0xa04 MLOAD
0xa05 PUSH1 0x20
0xa07 ADD
0xa08 MSTORE
0xa09 PUSH1 0x40
0xa0b MLOAD
0xa0c DUP4
0xa0d PUSH4 0xffffffff
0xa12 AND
0xa13 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa31 MUL
0xa32 DUP2
0xa33 MSTORE
0xa34 PUSH1 0x4
0xa36 ADD
0xa37 DUP1
0xa38 DUP4
0xa39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4e AND
0xa4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa64 AND
0xa65 DUP2
0xa66 MSTORE
0xa67 PUSH1 0x20
0xa69 ADD
0xa6a DUP3
0xa6b DUP2
0xa6c MSTORE
0xa6d PUSH1 0x20
0xa6f ADD
0xa70 SWAP3
0xa71 POP
0xa72 POP
0xa73 POP
0xa74 PUSH1 0x20
0xa76 PUSH1 0x40
0xa78 MLOAD
0xa79 DUP1
0xa7a DUP4
0xa7b SUB
0xa7c DUP2
0xa7d PUSH1 0x0
0xa7f DUP8
0xa80 DUP1
0xa81 EXTCODESIZE
0xa82 ISZERO
0xa83 ISZERO
0xa84 PUSH2 0xa56
0xa87 JUMPI
---
0x928: INVALID 
0x929: JUMPDEST 
0x92a: V620 = 0x941
0x92d: V621 = 0x5
0x92f: V622 = S[0x5]
0x930: V623 = 0x7
0x932: V624 = 0x0
0x934: V625 = CALLER
0x935: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x94a: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x94b: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0x960: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0x962: M[0x0] = V629
0x963: V630 = 0x20
0x965: V631 = ADD 0x20 0x0
0x968: M[0x20] = 0x7
0x969: V632 = 0x20
0x96b: V633 = ADD 0x20 0x20
0x96c: V634 = 0x0
0x96e: V635 = SHA3 0x0 0x40
0x96f: V636 = S[V635]
0x970: V637 = 0xed1
0x973: THROW 
0x974: JUMPDEST 
0x975: V638 = 0x5
0x979: S[0x5] = S0
0x97b: V639 = 0x0
0x97d: V640 = 0x7
0x97f: V641 = 0x0
0x981: V642 = CALLER
0x982: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0x997: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x998: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ad: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x9af: M[0x0] = V646
0x9b0: V647 = 0x20
0x9b2: V648 = ADD 0x20 0x0
0x9b5: M[0x20] = 0x7
0x9b6: V649 = 0x20
0x9b8: V650 = ADD 0x20 0x20
0x9b9: V651 = 0x0
0x9bb: V652 = SHA3 0x0 0x40
0x9be: S[V652] = 0x0
0x9c0: V653 = 0x0
0x9c2: V654 = 0x0
0x9c5: V655 = S[0x0]
0x9c7: V656 = 0x100
0x9ca: V657 = EXP 0x100 0x0
0x9cc: V658 = DIV V655 0x1
0x9cd: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e2: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x9e3: V661 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f8: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x9f9: V663 = 0xa9059cbb
0x9fe: V664 = CALLER
0xa00: V665 = 0x0
0xa02: V666 = 0x40
0xa04: V667 = M[0x40]
0xa05: V668 = 0x20
0xa07: V669 = ADD 0x20 V667
0xa08: M[V669] = 0x0
0xa09: V670 = 0x40
0xa0b: V671 = M[0x40]
0xa0d: V672 = 0xffffffff
0xa12: V673 = AND 0xffffffff 0xa9059cbb
0xa13: V674 = 0x100000000000000000000000000000000000000000000000000000000
0xa31: V675 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xa33: M[V671] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa34: V676 = 0x4
0xa36: V677 = ADD 0x4 V671
0xa39: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4e: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xa4f: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xa64: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xa66: M[V677] = V681
0xa67: V682 = 0x20
0xa69: V683 = ADD 0x20 V677
0xa6c: M[V683] = S1
0xa6d: V684 = 0x20
0xa6f: V685 = ADD 0x20 V683
0xa74: V686 = 0x20
0xa76: V687 = 0x40
0xa78: V688 = M[0x40]
0xa7b: V689 = SUB V685 V688
0xa7d: V690 = 0x0
0xa81: V691 = EXTCODESIZE V662
0xa82: V692 = ISZERO V691
0xa83: V693 = ISZERO V692
0xa84: V694 = 0xa56
0xa87: THROWI V693
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V636, V622, 0x941, V662, 0x0, V688, V689, V688, 0x20, V685, 0xa9059cbb, V662, S1]
Exit stack: []

================================

Block 0xa88
[0xa88:0xa94]
---
Predecessors: [0x928]
Successors: [0xa95]
---
0xa88 INVALID
0xa89 JUMPDEST
0xa8a PUSH1 0x32
0xa8c GAS
0xa8d SUB
0xa8e CALL
0xa8f ISZERO
0xa90 ISZERO
0xa91 PUSH2 0xa63
0xa94 JUMPI
---
0xa88: INVALID 
0xa89: JUMPDEST 
0xa8a: V695 = 0x32
0xa8c: V696 = GAS
0xa8d: V697 = SUB V696 0x32
0xa8e: V698 = CALL V697 S0 S1 S2 S3 S4 S5
0xa8f: V699 = ISZERO V698
0xa90: V700 = ISZERO V699
0xa91: V701 = 0xa63
0xa94: THROWI V700
---
Entry stack: [S9, V662, 0xa9059cbb, V685, 0x20, V688, V689, V688, 0x0, V662]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa95
[0xa95:0xaa6]
---
Predecessors: [0xa88]
Successors: [0xaa7]
---
0xa95 INVALID
0xa96 JUMPDEST
0xa97 POP
0xa98 POP
0xa99 POP
0xa9a PUSH1 0x40
0xa9c MLOAD
0xa9d DUP1
0xa9e MLOAD
0xa9f SWAP1
0xaa0 POP
0xaa1 ISZERO
0xaa2 ISZERO
0xaa3 PUSH2 0xa75
0xaa6 JUMPI
---
0xa95: INVALID 
0xa96: JUMPDEST 
0xa9a: V702 = 0x40
0xa9c: V703 = M[0x40]
0xa9e: V704 = M[V703]
0xaa1: V705 = ISZERO V704
0xaa2: V706 = ISZERO V705
0xaa3: V707 = 0xa75
0xaa6: THROWI V706
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaa7
[0xaa7:0xaf6]
---
Predecessors: [0xa95]
Successors: [0xaf7]
---
0xaa7 INVALID
0xaa8 JUMPDEST
0xaa9 CALLER
0xaaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabf AND
0xac0 PUSH32 0xdee7e59b5d6bc3fbc9a9da46930152736b088c9a04598c98f747dabf6174815c
0xae1 DUP3
0xae2 PUSH1 0x40
0xae4 MLOAD
0xae5 DUP1
0xae6 DUP3
0xae7 DUP2
0xae8 MSTORE
0xae9 PUSH1 0x20
0xaeb ADD
0xaec SWAP2
0xaed POP
0xaee POP
0xaef PUSH1 0x40
0xaf1 MLOAD
0xaf2 DUP1
0xaf3 SWAP2
0xaf4 SUB
0xaf5 SWAP1
0xaf6 LOG2
---
0xaa7: INVALID 
0xaa8: JUMPDEST 
0xaa9: V708 = CALLER
0xaaa: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xabf: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xac0: V711 = 0xdee7e59b5d6bc3fbc9a9da46930152736b088c9a04598c98f747dabf6174815c
0xae2: V712 = 0x40
0xae4: V713 = M[0x40]
0xae8: M[V713] = S0
0xae9: V714 = 0x20
0xaeb: V715 = ADD 0x20 V713
0xaef: V716 = 0x40
0xaf1: V717 = M[0x40]
0xaf4: V718 = SUB V715 V717
0xaf6: LOG V717 V718 0xdee7e59b5d6bc3fbc9a9da46930152736b088c9a04598c98f747dabf6174815c V710
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xaf7
[0xaf7:0xaf7]
---
Predecessors: [0xaa7]
Successors: [0xaf8]
---
0xaf7 JUMPDEST
---
0xaf7: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xaf8
[0xaf8:0xb7c]
---
Predecessors: [0xaf7]
Successors: [0xb7d]
---
0xaf8 JUMPDEST
0xaf9 POP
0xafa JUMP
0xafb JUMPDEST
0xafc PUSH1 0x6
0xafe PUSH1 0x0
0xb00 SWAP1
0xb01 SLOAD
0xb02 SWAP1
0xb03 PUSH2 0x100
0xb06 EXP
0xb07 SWAP1
0xb08 DIV
0xb09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1e AND
0xb1f DUP2
0xb20 JUMP
0xb21 JUMPDEST
0xb22 PUSH1 0x7
0xb24 PUSH1 0x20
0xb26 MSTORE
0xb27 DUP1
0xb28 PUSH1 0x0
0xb2a MSTORE
0xb2b PUSH1 0x40
0xb2d PUSH1 0x0
0xb2f SHA3
0xb30 PUSH1 0x0
0xb32 SWAP2
0xb33 POP
0xb34 SWAP1
0xb35 POP
0xb36 SLOAD
0xb37 DUP2
0xb38 JUMP
0xb39 JUMPDEST
0xb3a PUSH1 0x4
0xb3c PUSH1 0x2
0xb3e SWAP1
0xb3f SLOAD
0xb40 SWAP1
0xb41 PUSH2 0x100
0xb44 EXP
0xb45 SWAP1
0xb46 DIV
0xb47 PUSH1 0xff
0xb49 AND
0xb4a DUP2
0xb4b JUMP
0xb4c JUMPDEST
0xb4d PUSH1 0x3
0xb4f SLOAD
0xb50 DUP2
0xb51 JUMP
0xb52 JUMPDEST
0xb53 PUSH1 0x4
0xb55 PUSH1 0x1
0xb57 SWAP1
0xb58 SLOAD
0xb59 SWAP1
0xb5a PUSH2 0x100
0xb5d EXP
0xb5e SWAP1
0xb5f DIV
0xb60 PUSH1 0xff
0xb62 AND
0xb63 DUP2
0xb64 JUMP
0xb65 JUMPDEST
0xb66 PUSH1 0x4
0xb68 PUSH1 0x0
0xb6a SWAP1
0xb6b SLOAD
0xb6c SWAP1
0xb6d PUSH2 0x100
0xb70 EXP
0xb71 SWAP1
0xb72 DIV
0xb73 PUSH1 0xff
0xb75 AND
0xb76 ISZERO
0xb77 ISZERO
0xb78 ISZERO
0xb79 PUSH2 0xb4f
0xb7c JUMPI
---
0xaf8: JUMPDEST 
0xafa: JUMP S1
0xafb: JUMPDEST 
0xafc: V719 = 0x6
0xafe: V720 = 0x0
0xb01: V721 = S[0x6]
0xb03: V722 = 0x100
0xb06: V723 = EXP 0x100 0x0
0xb08: V724 = DIV V721 0x1
0xb09: V725 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1e: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0xb20: JUMP S0
0xb21: JUMPDEST 
0xb22: V727 = 0x7
0xb24: V728 = 0x20
0xb26: M[0x20] = 0x7
0xb28: V729 = 0x0
0xb2a: M[0x0] = S0
0xb2b: V730 = 0x40
0xb2d: V731 = 0x0
0xb2f: V732 = SHA3 0x0 0x40
0xb30: V733 = 0x0
0xb36: V734 = S[V732]
0xb38: JUMP S1
0xb39: JUMPDEST 
0xb3a: V735 = 0x4
0xb3c: V736 = 0x2
0xb3f: V737 = S[0x4]
0xb41: V738 = 0x100
0xb44: V739 = EXP 0x100 0x2
0xb46: V740 = DIV V737 0x10000
0xb47: V741 = 0xff
0xb49: V742 = AND 0xff V740
0xb4b: JUMP S0
0xb4c: JUMPDEST 
0xb4d: V743 = 0x3
0xb4f: V744 = S[0x3]
0xb51: JUMP S0
0xb52: JUMPDEST 
0xb53: V745 = 0x4
0xb55: V746 = 0x1
0xb58: V747 = S[0x4]
0xb5a: V748 = 0x100
0xb5d: V749 = EXP 0x100 0x1
0xb5f: V750 = DIV V747 0x100
0xb60: V751 = 0xff
0xb62: V752 = AND 0xff V750
0xb64: JUMP S0
0xb65: JUMPDEST 
0xb66: V753 = 0x4
0xb68: V754 = 0x0
0xb6b: V755 = S[0x4]
0xb6d: V756 = 0x100
0xb70: V757 = EXP 0x100 0x0
0xb72: V758 = DIV V755 0x1
0xb73: V759 = 0xff
0xb75: V760 = AND 0xff V758
0xb76: V761 = ISZERO V760
0xb77: V762 = ISZERO V761
0xb78: V763 = ISZERO V762
0xb79: V764 = 0xb4f
0xb7c: THROWI V763
---
Entry stack: [S0]
Stack pops: 66
Stack additions: []
Exit stack: []

================================

Block 0xb7d
[0xb7d:0xb99]
---
Predecessors: [0xaf8]
Successors: [0xb9a]
---
0xb7d PUSH1 0x0
0xb7f PUSH1 0x0
0xb81 REVERT
0xb82 JUMPDEST
0xb83 PUSH1 0x4
0xb85 PUSH1 0x1
0xb87 SWAP1
0xb88 SLOAD
0xb89 SWAP1
0xb8a PUSH2 0x100
0xb8d EXP
0xb8e SWAP1
0xb8f DIV
0xb90 PUSH1 0xff
0xb92 AND
0xb93 ISZERO
0xb94 ISZERO
0xb95 ISZERO
0xb96 PUSH2 0xb68
0xb99 JUMPI
---
0xb7d: V765 = 0x0
0xb7f: V766 = 0x0
0xb81: REVERT 0x0 0x0
0xb82: JUMPDEST 
0xb83: V767 = 0x4
0xb85: V768 = 0x1
0xb88: V769 = S[0x4]
0xb8a: V770 = 0x100
0xb8d: V771 = EXP 0x100 0x1
0xb8f: V772 = DIV V769 0x100
0xb90: V773 = 0xff
0xb92: V774 = AND 0xff V772
0xb93: V775 = ISZERO V774
0xb94: V776 = ISZERO V775
0xb95: V777 = ISZERO V776
0xb96: V778 = 0xb68
0xb99: THROWI V777
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb9a
[0xb9a:0xbf2]
---
Predecessors: [0xb7d]
Successors: [0xbf3]
---
0xb9a INVALID
0xb9b JUMPDEST
0xb9c PUSH1 0x6
0xb9e PUSH1 0x0
0xba0 SWAP1
0xba1 SLOAD
0xba2 SWAP1
0xba3 PUSH2 0x100
0xba6 EXP
0xba7 SWAP1
0xba8 DIV
0xba9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbe AND
0xbbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd4 AND
0xbd5 CALLER
0xbd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbeb AND
0xbec EQ
0xbed ISZERO
0xbee ISZERO
0xbef PUSH2 0xbc1
0xbf2 JUMPI
---
0xb9a: INVALID 
0xb9b: JUMPDEST 
0xb9c: V779 = 0x6
0xb9e: V780 = 0x0
0xba1: V781 = S[0x6]
0xba3: V782 = 0x100
0xba6: V783 = EXP 0x100 0x0
0xba8: V784 = DIV V781 0x1
0xba9: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbe: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xbbf: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd4: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0xbd5: V789 = CALLER
0xbd6: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xbeb: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V789
0xbec: V792 = EQ V791 V788
0xbed: V793 = ISZERO V792
0xbee: V794 = ISZERO V793
0xbef: V795 = 0xbc1
0xbf2: THROWI V794
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbf3
[0xbf3:0xc17]
---
Predecessors: [0xb9a]
Successors: [0xc18]
---
0xbf3 INVALID
0xbf4 JUMPDEST
0xbf5 PUSH1 0x5
0xbf7 SLOAD
0xbf8 ADDRESS
0xbf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0e AND
0xc0f BALANCE
0xc10 LT
0xc11 ISZERO
0xc12 ISZERO
0xc13 ISZERO
0xc14 PUSH2 0xbea
0xc17 JUMPI
---
0xbf3: INVALID 
0xbf4: JUMPDEST 
0xbf5: V796 = 0x5
0xbf7: V797 = S[0x5]
0xbf8: V798 = ADDRESS
0xbf9: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0e: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0xc0f: V801 = BALANCE V800
0xc10: V802 = LT V801 V797
0xc11: V803 = ISZERO V802
0xc12: V804 = ISZERO V803
0xc13: V805 = ISZERO V804
0xc14: V806 = 0xbea
0xc17: THROWI V805
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc18
[0xc18:0xcb7]
---
Predecessors: [0xbf3]
Successors: [0xcb8]
---
0xc18 PUSH1 0x0
0xc1a PUSH1 0x0
0xc1c REVERT
0xc1d JUMPDEST
0xc1e PUSH1 0x0
0xc20 PUSH1 0x0
0xc22 SWAP1
0xc23 SLOAD
0xc24 SWAP1
0xc25 PUSH2 0x100
0xc28 EXP
0xc29 SWAP1
0xc2a DIV
0xc2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc40 AND
0xc41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc56 AND
0xc57 PUSH4 0xd0febe4c
0xc5c ADDRESS
0xc5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc72 AND
0xc73 BALANCE
0xc74 PUSH1 0x40
0xc76 MLOAD
0xc77 DUP3
0xc78 PUSH4 0xffffffff
0xc7d AND
0xc7e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc9c MUL
0xc9d DUP2
0xc9e MSTORE
0xc9f PUSH1 0x4
0xca1 ADD
0xca2 DUP1
0xca3 SWAP1
0xca4 POP
0xca5 PUSH1 0x0
0xca7 PUSH1 0x40
0xca9 MLOAD
0xcaa DUP1
0xcab DUP4
0xcac SUB
0xcad DUP2
0xcae DUP6
0xcaf DUP9
0xcb0 DUP1
0xcb1 EXTCODESIZE
0xcb2 ISZERO
0xcb3 ISZERO
0xcb4 PUSH2 0xc86
0xcb7 JUMPI
---
0xc18: V807 = 0x0
0xc1a: V808 = 0x0
0xc1c: REVERT 0x0 0x0
0xc1d: JUMPDEST 
0xc1e: V809 = 0x0
0xc20: V810 = 0x0
0xc23: V811 = S[0x0]
0xc25: V812 = 0x100
0xc28: V813 = EXP 0x100 0x0
0xc2a: V814 = DIV V811 0x1
0xc2b: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xc40: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0xc41: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xc56: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xc57: V819 = 0xd0febe4c
0xc5c: V820 = ADDRESS
0xc5d: V821 = 0xffffffffffffffffffffffffffffffffffffffff
0xc72: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0xc73: V823 = BALANCE V822
0xc74: V824 = 0x40
0xc76: V825 = M[0x40]
0xc78: V826 = 0xffffffff
0xc7d: V827 = AND 0xffffffff 0xd0febe4c
0xc7e: V828 = 0x100000000000000000000000000000000000000000000000000000000
0xc9c: V829 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0febe4c
0xc9e: M[V825] = 0xd0febe4c00000000000000000000000000000000000000000000000000000000
0xc9f: V830 = 0x4
0xca1: V831 = ADD 0x4 V825
0xca5: V832 = 0x0
0xca7: V833 = 0x40
0xca9: V834 = M[0x40]
0xcac: V835 = SUB V831 V834
0xcb1: V836 = EXTCODESIZE V818
0xcb2: V837 = ISZERO V836
0xcb3: V838 = ISZERO V837
0xcb4: V839 = 0xc86
0xcb7: THROWI V838
---
Entry stack: []
Stack pops: 0
Stack additions: [V818, V823, V834, V835, V834, 0x0, V831, V823, 0xd0febe4c, V818]
Exit stack: []

================================

Block 0xcb8
[0xcb8:0xcc5]
---
Predecessors: [0xc18]
Successors: [0xcc6]
---
0xcb8 INVALID
0xcb9 JUMPDEST
0xcba PUSH2 0x235a
0xcbd GAS
0xcbe SUB
0xcbf CALL
0xcc0 ISZERO
0xcc1 ISZERO
0xcc2 PUSH2 0xc94
0xcc5 JUMPI
---
0xcb8: INVALID 
0xcb9: JUMPDEST 
0xcba: V840 = 0x235a
0xcbd: V841 = GAS
0xcbe: V842 = SUB V841 0x235a
0xcbf: V843 = CALL V842 S0 S1 S2 S3 S4 S5
0xcc0: V844 = ISZERO V843
0xcc1: V845 = ISZERO V844
0xcc2: V846 = 0xc94
0xcc5: THROWI V845
---
Entry stack: [V818, 0xd0febe4c, V823, V831, 0x0, V834, V835, V834, V823, V818]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcc6
[0xcc6:0xd8b]
---
Predecessors: [0xcb8]
Successors: [0xd8c]
---
0xcc6 INVALID
0xcc7 JUMPDEST
0xcc8 POP
0xcc9 POP
0xcca POP
0xccb POP
0xccc PUSH1 0x0
0xcce PUSH1 0x0
0xcd0 SWAP1
0xcd1 SLOAD
0xcd2 SWAP1
0xcd3 PUSH2 0x100
0xcd6 EXP
0xcd7 SWAP1
0xcd8 DIV
0xcd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcee AND
0xcef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd04 AND
0xd05 PUSH4 0x84cc315b
0xd0a ADDRESS
0xd0b PUSH1 0x0
0xd0d PUSH1 0x40
0xd0f MLOAD
0xd10 PUSH1 0x20
0xd12 ADD
0xd13 MSTORE
0xd14 PUSH1 0x40
0xd16 MLOAD
0xd17 DUP3
0xd18 PUSH4 0xffffffff
0xd1d AND
0xd1e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd3c MUL
0xd3d DUP2
0xd3e MSTORE
0xd3f PUSH1 0x4
0xd41 ADD
0xd42 DUP1
0xd43 DUP3
0xd44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd59 AND
0xd5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6f AND
0xd70 DUP2
0xd71 MSTORE
0xd72 PUSH1 0x20
0xd74 ADD
0xd75 SWAP2
0xd76 POP
0xd77 POP
0xd78 PUSH1 0x20
0xd7a PUSH1 0x40
0xd7c MLOAD
0xd7d DUP1
0xd7e DUP4
0xd7f SUB
0xd80 DUP2
0xd81 PUSH1 0x0
0xd83 DUP8
0xd84 DUP1
0xd85 EXTCODESIZE
0xd86 ISZERO
0xd87 ISZERO
0xd88 PUSH2 0xd5a
0xd8b JUMPI
---
0xcc6: INVALID 
0xcc7: JUMPDEST 
0xccc: V847 = 0x0
0xcce: V848 = 0x0
0xcd1: V849 = S[0x0]
0xcd3: V850 = 0x100
0xcd6: V851 = EXP 0x100 0x0
0xcd8: V852 = DIV V849 0x1
0xcd9: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xcee: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0xcef: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xd04: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0xd05: V857 = 0x84cc315b
0xd0a: V858 = ADDRESS
0xd0b: V859 = 0x0
0xd0d: V860 = 0x40
0xd0f: V861 = M[0x40]
0xd10: V862 = 0x20
0xd12: V863 = ADD 0x20 V861
0xd13: M[V863] = 0x0
0xd14: V864 = 0x40
0xd16: V865 = M[0x40]
0xd18: V866 = 0xffffffff
0xd1d: V867 = AND 0xffffffff 0x84cc315b
0xd1e: V868 = 0x100000000000000000000000000000000000000000000000000000000
0xd3c: V869 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x84cc315b
0xd3e: M[V865] = 0x84cc315b00000000000000000000000000000000000000000000000000000000
0xd3f: V870 = 0x4
0xd41: V871 = ADD 0x4 V865
0xd44: V872 = 0xffffffffffffffffffffffffffffffffffffffff
0xd59: V873 = AND 0xffffffffffffffffffffffffffffffffffffffff V858
0xd5a: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6f: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xd71: M[V871] = V875
0xd72: V876 = 0x20
0xd74: V877 = ADD 0x20 V871
0xd78: V878 = 0x20
0xd7a: V879 = 0x40
0xd7c: V880 = M[0x40]
0xd7f: V881 = SUB V877 V880
0xd81: V882 = 0x0
0xd85: V883 = EXTCODESIZE V856
0xd86: V884 = ISZERO V883
0xd87: V885 = ISZERO V884
0xd88: V886 = 0xd5a
0xd8b: THROWI V885
---
Entry stack: []
Stack pops: 0
Stack additions: [V856, 0x0, V880, V881, V880, 0x20, V877, 0x84cc315b, V856]
Exit stack: []

================================

Block 0xd8c
[0xd8c:0xd98]
---
Predecessors: [0xcc6]
Successors: [0xd99]
---
0xd8c INVALID
0xd8d JUMPDEST
0xd8e PUSH1 0x32
0xd90 GAS
0xd91 SUB
0xd92 CALL
0xd93 ISZERO
0xd94 ISZERO
0xd95 PUSH2 0xd67
0xd98 JUMPI
---
0xd8c: INVALID 
0xd8d: JUMPDEST 
0xd8e: V887 = 0x32
0xd90: V888 = GAS
0xd91: V889 = SUB V888 0x32
0xd92: V890 = CALL V889 S0 S1 S2 S3 S4 S5
0xd93: V891 = ISZERO V890
0xd94: V892 = ISZERO V891
0xd95: V893 = 0xd67
0xd98: THROWI V892
---
Entry stack: [V856, 0x84cc315b, V877, 0x20, V880, V881, V880, 0x0, V856]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd99
[0xd99:0xea9]
---
Predecessors: [0xd8c]
Successors: [0xeaa]
---
0xd99 INVALID
0xd9a JUMPDEST
0xd9b POP
0xd9c POP
0xd9d POP
0xd9e PUSH1 0x40
0xda0 MLOAD
0xda1 DUP1
0xda2 MLOAD
0xda3 SWAP1
0xda4 POP
0xda5 PUSH1 0x2
0xda7 DUP2
0xda8 SWAP1
0xda9 SSTORE
0xdaa POP
0xdab PUSH1 0x1
0xdad PUSH1 0x4
0xdaf PUSH1 0x1
0xdb1 PUSH2 0x100
0xdb4 EXP
0xdb5 DUP2
0xdb6 SLOAD
0xdb7 DUP2
0xdb8 PUSH1 0xff
0xdba MUL
0xdbb NOT
0xdbc AND
0xdbd SWAP1
0xdbe DUP4
0xdbf ISZERO
0xdc0 ISZERO
0xdc1 MUL
0xdc2 OR
0xdc3 SWAP1
0xdc4 SSTORE
0xdc5 POP
0xdc6 PUSH32 0xc1839258eafbfd5f852dd985f10b1753beae4c80078c7c52e623ba2d586f8347
0xde7 PUSH1 0x5
0xde9 SLOAD
0xdea PUSH1 0x0
0xdec PUSH1 0x0
0xdee SWAP1
0xdef SLOAD
0xdf0 SWAP1
0xdf1 PUSH2 0x100
0xdf4 EXP
0xdf5 SWAP1
0xdf6 DIV
0xdf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0c AND
0xe0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe22 AND
0xe23 PUSH4 0x2fc3127
0xe28 ADDRESS
0xe29 PUSH1 0x0
0xe2b PUSH1 0x40
0xe2d MLOAD
0xe2e PUSH1 0x20
0xe30 ADD
0xe31 MSTORE
0xe32 PUSH1 0x40
0xe34 MLOAD
0xe35 DUP3
0xe36 PUSH4 0xffffffff
0xe3b AND
0xe3c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe5a MUL
0xe5b DUP2
0xe5c MSTORE
0xe5d PUSH1 0x4
0xe5f ADD
0xe60 DUP1
0xe61 DUP3
0xe62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe77 AND
0xe78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8d AND
0xe8e DUP2
0xe8f MSTORE
0xe90 PUSH1 0x20
0xe92 ADD
0xe93 SWAP2
0xe94 POP
0xe95 POP
0xe96 PUSH1 0x20
0xe98 PUSH1 0x40
0xe9a MLOAD
0xe9b DUP1
0xe9c DUP4
0xe9d SUB
0xe9e DUP2
0xe9f PUSH1 0x0
0xea1 DUP8
0xea2 DUP1
0xea3 EXTCODESIZE
0xea4 ISZERO
0xea5 ISZERO
0xea6 PUSH2 0xe78
0xea9 JUMPI
---
0xd99: INVALID 
0xd9a: JUMPDEST 
0xd9e: V894 = 0x40
0xda0: V895 = M[0x40]
0xda2: V896 = M[V895]
0xda5: V897 = 0x2
0xda9: S[0x2] = V896
0xdab: V898 = 0x1
0xdad: V899 = 0x4
0xdaf: V900 = 0x1
0xdb1: V901 = 0x100
0xdb4: V902 = EXP 0x100 0x1
0xdb6: V903 = S[0x4]
0xdb8: V904 = 0xff
0xdba: V905 = MUL 0xff 0x100
0xdbb: V906 = NOT 0xff00
0xdbc: V907 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V903
0xdbf: V908 = ISZERO 0x1
0xdc0: V909 = ISZERO 0x0
0xdc1: V910 = MUL 0x1 0x100
0xdc2: V911 = OR 0x100 V907
0xdc4: S[0x4] = V911
0xdc6: V912 = 0xc1839258eafbfd5f852dd985f10b1753beae4c80078c7c52e623ba2d586f8347
0xde7: V913 = 0x5
0xde9: V914 = S[0x5]
0xdea: V915 = 0x0
0xdec: V916 = 0x0
0xdef: V917 = S[0x0]
0xdf1: V918 = 0x100
0xdf4: V919 = EXP 0x100 0x0
0xdf6: V920 = DIV V917 0x1
0xdf7: V921 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0c: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V920
0xe0d: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0xe22: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xe23: V925 = 0x2fc3127
0xe28: V926 = ADDRESS
0xe29: V927 = 0x0
0xe2b: V928 = 0x40
0xe2d: V929 = M[0x40]
0xe2e: V930 = 0x20
0xe30: V931 = ADD 0x20 V929
0xe31: M[V931] = 0x0
0xe32: V932 = 0x40
0xe34: V933 = M[0x40]
0xe36: V934 = 0xffffffff
0xe3b: V935 = AND 0xffffffff 0x2fc3127
0xe3c: V936 = 0x100000000000000000000000000000000000000000000000000000000
0xe5a: V937 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2fc3127
0xe5c: M[V933] = 0x2fc312700000000000000000000000000000000000000000000000000000000
0xe5d: V938 = 0x4
0xe5f: V939 = ADD 0x4 V933
0xe62: V940 = 0xffffffffffffffffffffffffffffffffffffffff
0xe77: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0xe78: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8d: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0xe8f: M[V939] = V943
0xe90: V944 = 0x20
0xe92: V945 = ADD 0x20 V939
0xe96: V946 = 0x20
0xe98: V947 = 0x40
0xe9a: V948 = M[0x40]
0xe9d: V949 = SUB V945 V948
0xe9f: V950 = 0x0
0xea3: V951 = EXTCODESIZE V924
0xea4: V952 = ISZERO V951
0xea5: V953 = ISZERO V952
0xea6: V954 = 0xe78
0xea9: THROWI V953
---
Entry stack: []
Stack pops: 0
Stack additions: [V924, 0x0, V948, V949, V948, 0x20, V945, 0x2fc3127, V924, V914, 0xc1839258eafbfd5f852dd985f10b1753beae4c80078c7c52e623ba2d586f8347]
Exit stack: []

================================

Block 0xeaa
[0xeaa:0xeb6]
---
Predecessors: [0xd99]
Successors: [0xeb7]
---
0xeaa INVALID
0xeab JUMPDEST
0xeac PUSH1 0x32
0xeae GAS
0xeaf SUB
0xeb0 CALL
0xeb1 ISZERO
0xeb2 ISZERO
0xeb3 PUSH2 0xe85
0xeb6 JUMPI
---
0xeaa: INVALID 
0xeab: JUMPDEST 
0xeac: V955 = 0x32
0xeae: V956 = GAS
0xeaf: V957 = SUB V956 0x32
0xeb0: V958 = CALL V957 S0 S1 S2 S3 S4 S5
0xeb1: V959 = ISZERO V958
0xeb2: V960 = ISZERO V959
0xeb3: V961 = 0xe85
0xeb6: THROWI V960
---
Entry stack: [0xc1839258eafbfd5f852dd985f10b1753beae4c80078c7c52e623ba2d586f8347, V914, V924, 0x2fc3127, V945, 0x20, V948, V949, V948, 0x0, V924]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeb7
[0xeb7:0xede]
---
Predecessors: [0xeaa]
Successors: [0xedf]
---
0xeb7 INVALID
0xeb8 JUMPDEST
0xeb9 POP
0xeba POP
0xebb POP
0xebc PUSH1 0x40
0xebe MLOAD
0xebf DUP1
0xec0 MLOAD
0xec1 SWAP1
0xec2 POP
0xec3 PUSH1 0x40
0xec5 MLOAD
0xec6 DUP1
0xec7 DUP4
0xec8 DUP2
0xec9 MSTORE
0xeca PUSH1 0x20
0xecc ADD
0xecd DUP3
0xece DUP2
0xecf MSTORE
0xed0 PUSH1 0x20
0xed2 ADD
0xed3 SWAP3
0xed4 POP
0xed5 POP
0xed6 POP
0xed7 PUSH1 0x40
0xed9 MLOAD
0xeda DUP1
0xedb SWAP2
0xedc SUB
0xedd SWAP1
0xede LOG1
---
0xeb7: INVALID 
0xeb8: JUMPDEST 
0xebc: V962 = 0x40
0xebe: V963 = M[0x40]
0xec0: V964 = M[V963]
0xec3: V965 = 0x40
0xec5: V966 = M[0x40]
0xec9: M[V966] = S3
0xeca: V967 = 0x20
0xecc: V968 = ADD 0x20 V966
0xecf: M[V968] = V964
0xed0: V969 = 0x20
0xed2: V970 = ADD 0x20 V968
0xed7: V971 = 0x40
0xed9: V972 = M[0x40]
0xedc: V973 = SUB V970 V972
0xede: LOG V972 V973 S4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xedf
[0xedf:0xedf]
---
Predecessors: [0xeb7, 0xefd]
Successors: [0xee0]
---
0xedf JUMPDEST
---
0xedf: JUMPDEST 
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, 0x0]

================================

Block 0xee0
[0xee0:0xee0]
---
Predecessors: [0xedf]
Successors: [0xee1]
---
0xee0 JUMPDEST
---
0xee0: JUMPDEST 
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, 0x0]

================================

Block 0xee1
[0xee1:0xee1]
---
Predecessors: [0xee0]
Successors: [0xee2]
---
0xee1 JUMPDEST
---
0xee1: JUMPDEST 
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, 0x0]

================================

Block 0xee2
[0xee2:0xef7]
---
Predecessors: [0xee1]
Successors: [0xef8]
---
0xee2 JUMPDEST
0xee3 JUMP
0xee4 JUMPDEST
0xee5 PUSH1 0x0
0xee7 PUSH1 0x0
0xee9 DUP3
0xeea DUP5
0xeeb ADD
0xeec SWAP1
0xeed POP
0xeee DUP4
0xeef DUP2
0xef0 LT
0xef1 ISZERO
0xef2 ISZERO
0xef3 ISZERO
0xef4 PUSH2 0xec6
0xef7 JUMPI
---
0xee2: JUMPDEST 
0xee3: THROW 
0xee4: JUMPDEST 
0xee5: V974 = 0x0
0xee7: V975 = 0x0
0xeeb: V976 = ADD S1 S0
0xef0: V977 = LT V976 S1
0xef1: V978 = ISZERO V977
0xef2: V979 = ISZERO V978
0xef3: V980 = ISZERO V979
0xef4: V981 = 0xec6
0xef7: THROWI V980
---
Entry stack: [S2, S1, 0x0]
Stack pops: 2
Stack additions: [V976, 0x0, S0, S1]
Exit stack: []

================================

Block 0xef8
[0xef8:0xefc]
---
Predecessors: [0xee2]
Successors: [0xefd]
---
0xef8 INVALID
0xef9 JUMPDEST
0xefa DUP1
0xefb SWAP2
0xefc POP
---
0xef8: INVALID 
0xef9: JUMPDEST 
---
Entry stack: [S3, S2, 0x0, V976]
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0xefd
[0xefd:0xf10]
---
Predecessors: [0xef8]
Successors: [0xedf, 0xf11]
---
0xefd JUMPDEST
0xefe POP
0xeff SWAP3
0xf00 SWAP2
0xf01 POP
0xf02 POP
0xf03 JUMP
0xf04 JUMPDEST
0xf05 PUSH1 0x0
0xf07 DUP3
0xf08 DUP3
0xf09 GT
0xf0a ISZERO
0xf0b ISZERO
0xf0c ISZERO
0xf0d PUSH2 0xedf
0xf10 JUMPI
---
0xefd: JUMPDEST 
0xf03: JUMP S4
0xf04: JUMPDEST 
0xf05: V982 = 0x0
0xf09: V983 = GT S0 S1
0xf0a: V984 = ISZERO V983
0xf0b: V985 = ISZERO V984
0xf0c: V986 = ISZERO V985
0xf0d: V987 = 0xedf
0xf10: JUMPI 0xedf V986
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0xf11
[0xf11:0xf17]
---
Predecessors: [0xefd]
Successors: [0xf18]
---
0xf11 INVALID
0xf12 JUMPDEST
0xf13 DUP2
0xf14 DUP4
0xf15 SUB
0xf16 SWAP1
0xf17 POP
---
0xf11: INVALID 
0xf12: JUMPDEST 
0xf15: V988 = SUB S2 S1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V988, S1, S2]
Exit stack: []

================================

Block 0xf18
[0xf18:0xf30]
---
Predecessors: [0xf11]
Successors: [0xf31]
---
0xf18 JUMPDEST
0xf19 SWAP3
0xf1a SWAP2
0xf1b POP
0xf1c POP
0xf1d JUMP
0xf1e JUMPDEST
0xf1f PUSH1 0x0
0xf21 PUSH1 0x0
0xf23 DUP3
0xf24 DUP5
0xf25 MUL
0xf26 SWAP1
0xf27 POP
0xf28 PUSH1 0x0
0xf2a DUP5
0xf2b EQ
0xf2c DUP1
0xf2d PUSH2 0xf0d
0xf30 JUMPI
---
0xf18: JUMPDEST 
0xf1d: JUMP S3
0xf1e: JUMPDEST 
0xf1f: V989 = 0x0
0xf21: V990 = 0x0
0xf25: V991 = MUL S1 S0
0xf28: V992 = 0x0
0xf2b: V993 = EQ S1 0x0
0xf2d: V994 = 0xf0d
0xf30: THROWI V993
---
Entry stack: [S2, S1, V988]
Stack pops: 7
Stack additions: [V993, V991, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf31
[0xf31:0xf3b]
---
Predecessors: [0xf18]
Successors: [0xf3c]
---
0xf31 POP
0xf32 DUP3
0xf33 DUP5
0xf34 DUP3
0xf35 DUP2
0xf36 ISZERO
0xf37 ISZERO
0xf38 PUSH2 0xf0a
0xf3b JUMPI
---
0xf36: V995 = ISZERO S4
0xf37: V996 = ISZERO V995
0xf38: V997 = 0xf0a
0xf3b: THROWI V996
---
Entry stack: [S4, S3, 0x0, V991, V993]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [S4, S3, 0x0, V991, S3, S4, V991]

================================

Block 0xf3c
[0xf3c:0xf3f]
---
Predecessors: [0xf31]
Successors: [0xf40]
---
0xf3c INVALID
0xf3d JUMPDEST
0xf3e DIV
0xf3f EQ
---
0xf3c: INVALID 
0xf3d: JUMPDEST 
0xf3e: V998 = DIV S0 S1
0xf3f: V999 = EQ V998 S2
---
Entry stack: [S6, S5, 0x0, V991, S2, S1, V991]
Stack pops: 0
Stack additions: [V999]
Exit stack: []

================================

Block 0xf40
[0xf40:0xf46]
---
Predecessors: [0xf3c]
Successors: [0xf47]
---
0xf40 JUMPDEST
0xf41 ISZERO
0xf42 ISZERO
0xf43 PUSH2 0xf15
0xf46 JUMPI
---
0xf40: JUMPDEST 
0xf41: V1000 = ISZERO V999
0xf42: V1001 = ISZERO V1000
0xf43: V1002 = 0xf15
0xf46: THROWI V1001
---
Entry stack: [V999]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xf47
[0xf47:0xf4b]
---
Predecessors: [0xf40]
Successors: [0xf4c]
---
0xf47 INVALID
0xf48 JUMPDEST
0xf49 DUP1
0xf4a SWAP2
0xf4b POP
---
0xf47: INVALID 
0xf48: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0xf4c
[0xf4c:0xf60]
---
Predecessors: [0xf47]
Successors: [0xf61]
---
0xf4c JUMPDEST
0xf4d POP
0xf4e SWAP3
0xf4f SWAP2
0xf50 POP
0xf51 POP
0xf52 JUMP
0xf53 JUMPDEST
0xf54 PUSH1 0x0
0xf56 PUSH1 0x0
0xf58 DUP3
0xf59 DUP5
0xf5a DUP2
0xf5b ISZERO
0xf5c ISZERO
0xf5d PUSH2 0xf2f
0xf60 JUMPI
---
0xf4c: JUMPDEST 
0xf52: JUMP S4
0xf53: JUMPDEST 
0xf54: V1003 = 0x0
0xf56: V1004 = 0x0
0xf5b: V1005 = ISZERO S0
0xf5c: V1006 = ISZERO V1005
0xf5d: V1007 = 0xf2f
0xf60: THROWI V1006
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf61
[0xf61:0xf68]
---
Predecessors: [0xf4c]
Successors: [0xf69]
---
0xf61 INVALID
0xf62 JUMPDEST
0xf63 DIV
0xf64 SWAP1
0xf65 POP
0xf66 DUP1
0xf67 SWAP2
0xf68 POP
---
0xf61: INVALID 
0xf62: JUMPDEST 
0xf63: V1008 = DIV S0 S1
---
Entry stack: [S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V1008, V1008]
Exit stack: []

================================

Block 0xf69
[0xf69:0xf9b]
---
Predecessors: [0xf61]
Successors: []
---
0xf69 JUMPDEST
0xf6a POP
0xf6b SWAP3
0xf6c SWAP2
0xf6d POP
0xf6e POP
0xf6f JUMP
0xf70 STOP
0xf71 LOG1
0xf72 PUSH6 0x627a7a723058
0xf79 SHA3
0xf7a MISSING 0xba
0xf7b MISSING 0xac
0xf7c MISSING 0xc
0xf7d CALLER
0xf7e SWAP14
0xf7f SWAP10
0xf80 MISSING 0x4e
0xf81 MISSING 0x4a
0xf82 PUSH11 0xcdebfc28fdb2ccb5b010d5
0xf8e SWAP15
0xf8f MISSING 0x4f
0xf90 CALLDATACOPY
0xf91 EXTCODECOPY
0xf92 MISSING 0x5f
0xf93 MISSING 0xbb
0xf94 MISSING 0xcc
0xf95 MISSING 0xd3
0xf96 DUP9
0xf97 SLT
0xf98 DUP12
0xf99 SWAP15
0xf9a STOP
0xf9b MISSING 0x29
---
0xf69: JUMPDEST 
0xf6f: JUMP S4
0xf70: STOP 
0xf71: LOG S0 S1 S2
0xf72: V1009 = 0x627a7a723058
0xf79: V1010 = SHA3 0x627a7a723058 S3
0xf7a: MISSING 0xba
0xf7b: MISSING 0xac
0xf7c: MISSING 0xc
0xf7d: V1011 = CALLER
0xf80: MISSING 0x4e
0xf81: MISSING 0x4a
0xf82: V1012 = 0xcdebfc28fdb2ccb5b010d5
0xf8f: MISSING 0x4f
0xf90: CALLDATACOPY S0 S1 S2
0xf91: EXTCODECOPY S3 S4 S5 S6
0xf92: MISSING 0x5f
0xf93: MISSING 0xbb
0xf94: MISSING 0xcc
0xf95: MISSING 0xd3
0xf97: V1013 = SLT S8 S0
0xf9a: STOP 
0xf9b: MISSING 0x29
---
Entry stack: [V1008, V1008]
Stack pops: 33392
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x41f77260
Entry block: 0x11b
Exit block: 0x11b
Body: 0x11b

Function 1:
Public fallback function
Entry block: 0x117
Exit block: 0x11b
Body: 0x117, 0x11b

