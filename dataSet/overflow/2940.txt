Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x88]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3f4ba83a
0x3c EQ
0x3d PUSH2 0x88
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3f4ba83a
0x3c: V13 = EQ 0x3f4ba83a V11
0x3d: V14 = 0x88
0x40: JUMPI 0x88 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x9d]
---
0x41 DUP1
0x42 PUSH4 0x5c975abb
0x47 EQ
0x48 PUSH2 0x9d
0x4b JUMPI
---
0x42: V15 = 0x5c975abb
0x47: V16 = EQ 0x5c975abb V11
0x48: V17 = 0x9d
0x4b: JUMPI 0x9d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xca]
---
0x4c DUP1
0x4d PUSH4 0x79ba5097
0x52 EQ
0x53 PUSH2 0xca
0x56 JUMPI
---
0x4d: V18 = 0x79ba5097
0x52: V19 = EQ 0x79ba5097 V11
0x53: V20 = 0xca
0x56: JUMPI 0xca V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xdf]
---
0x57 DUP1
0x58 PUSH4 0x8456cb59
0x5d EQ
0x5e PUSH2 0xdf
0x61 JUMPI
---
0x58: V21 = 0x8456cb59
0x5d: V22 = EQ 0x8456cb59 V11
0x5e: V23 = 0xdf
0x61: JUMPI 0xdf V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0xf4]
---
0x62 DUP1
0x63 PUSH4 0x8da5cb5b
0x68 EQ
0x69 PUSH2 0xf4
0x6c JUMPI
---
0x63: V24 = 0x8da5cb5b
0x68: V25 = EQ 0x8da5cb5b V11
0x69: V26 = 0xf4
0x6c: JUMPI 0xf4 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x149]
---
0x6d DUP1
0x6e PUSH4 0xd4ee1d90
0x73 EQ
0x74 PUSH2 0x149
0x77 JUMPI
---
0x6e: V27 = 0xd4ee1d90
0x73: V28 = EQ 0xd4ee1d90 V11
0x74: V29 = 0x149
0x77: JUMPI 0x149 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x19e]
---
0x78 DUP1
0x79 PUSH4 0xf2fde38b
0x7e EQ
0x7f PUSH2 0x19e
0x82 JUMPI
---
0x79: V30 = 0xf2fde38b
0x7e: V31 = EQ 0xf2fde38b V11
0x7f: V32 = 0x19e
0x82: JUMPI 0x19e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x87]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x83: JUMPDEST 
0x84: V33 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8e]
---
Predecessors: [0xd]
Successors: [0x8f, 0x93]
---
0x88 JUMPDEST
0x89 CALLVALUE
0x8a ISZERO
0x8b PUSH2 0x93
0x8e JUMPI
---
0x88: JUMPDEST 
0x89: V34 = CALLVALUE
0x8a: V35 = ISZERO V34
0x8b: V36 = 0x93
0x8e: JUMPI 0x93 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x88]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V37 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x9a]
---
Predecessors: [0x88]
Successors: [0x1d7]
---
0x93 JUMPDEST
0x94 PUSH2 0x9b
0x97 PUSH2 0x1d7
0x9a JUMP
---
0x93: JUMPDEST 
0x94: V38 = 0x9b
0x97: V39 = 0x1d7
0x9a: JUMP 0x1d7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9b]
Exit stack: [V11, 0x9b]

================================

Block 0x9b
[0x9b:0x9c]
---
Predecessors: [0x24a]
Successors: []
---
0x9b JUMPDEST
0x9c STOP
---
0x9b: JUMPDEST 
0x9c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0x41]
Successors: [0xa4, 0xa8]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f ISZERO
0xa0 PUSH2 0xa8
0xa3 JUMPI
---
0x9d: JUMPDEST 
0x9e: V40 = CALLVALUE
0x9f: V41 = ISZERO V40
0xa0: V42 = 0xa8
0xa3: JUMPI 0xa8 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x9d]
Successors: []
---
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa4: V43 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x9d]
Successors: [0x293]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xb0
0xac PUSH2 0x293
0xaf JUMP
---
0xa8: JUMPDEST 
0xa9: V44 = 0xb0
0xac: V45 = 0x293
0xaf: JUMP 0x293
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V11, 0xb0]

================================

Block 0xb0
[0xb0:0xc9]
---
Predecessors: [0x293]
Successors: []
---
0xb0 JUMPDEST
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 DUP1
0xb5 DUP3
0xb6 ISZERO
0xb7 ISZERO
0xb8 ISZERO
0xb9 ISZERO
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0xb0: JUMPDEST 
0xb1: V46 = 0x40
0xb3: V47 = M[0x40]
0xb6: V48 = ISZERO V170
0xb7: V49 = ISZERO V48
0xb8: V50 = ISZERO V49
0xb9: V51 = ISZERO V50
0xbb: M[V47] = V51
0xbc: V52 = 0x20
0xbe: V53 = ADD 0x20 V47
0xc2: V54 = 0x40
0xc4: V55 = M[0x40]
0xc7: V56 = SUB V53 V55
0xc9: RETURN V55 V56
---
Entry stack: [V11, 0xb0, V170]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x4c, 0x6ba]
Successors: [0xd1, 0xd5]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V57 = CALLVALUE
0xcc: V58 = ISZERO V57
0xcd: V59 = 0xd5
0xd0: JUMPI 0xd5 V58
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xca]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V60 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0xca, 0x772]
Successors: [0x2a6]
---
0xd5 JUMPDEST
0xd6 PUSH2 0xdd
0xd9 PUSH2 0x2a6
0xdc JUMP
---
0xd5: JUMPDEST 
0xd6: V61 = 0xdd
0xd9: V62 = 0x2a6
0xdc: JUMP 0x2a6
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [S0, 0xdd]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0x302]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V376]
Stack pops: 0
Stack additions: []
Exit stack: [V376]

================================

Block 0xdf
[0xdf:0xe5]
---
Predecessors: [0x57]
Successors: [0xe6, 0xea]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xdf: JUMPDEST 
0xe0: V63 = CALLVALUE
0xe1: V64 = ISZERO V63
0xe2: V65 = 0xea
0xe5: JUMPI 0xea V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xdf]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V66 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0xdf]
Successors: [0x482]
---
0xea JUMPDEST
0xeb PUSH2 0xf2
0xee PUSH2 0x482
0xf1 JUMP
---
0xea: JUMPDEST 
0xeb: V67 = 0xf2
0xee: V68 = 0x482
0xf1: JUMP 0x482
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf2]
Exit stack: [V11, 0xf2]

================================

Block 0xf2
[0xf2:0xf3]
---
Predecessors: [0x4f6]
Successors: []
---
0xf2 JUMPDEST
0xf3 STOP
---
0xf2: JUMPDEST 
0xf3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x62]
Successors: [0xfb, 0xff]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V69 = CALLVALUE
0xf6: V70 = ISZERO V69
0xf7: V71 = 0xff
0xfa: JUMPI 0xff V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf4]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V72 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0xf4]
Successors: [0x53e]
---
0xff JUMPDEST
0x100 PUSH2 0x107
0x103 PUSH2 0x53e
0x106 JUMP
---
0xff: JUMPDEST 
0x100: V73 = 0x107
0x103: V74 = 0x53e
0x106: JUMP 0x53e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V11, 0x107]

================================

Block 0x107
[0x107:0x148]
---
Predecessors: [0x53e]
Successors: []
---
0x107 JUMPDEST
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c DUP3
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP2
0x13f POP
0x140 POP
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 RETURN
---
0x107: JUMPDEST 
0x108: V75 = 0x40
0x10a: V76 = M[0x40]
0x10d: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x123: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x13a: M[V76] = V80
0x13b: V81 = 0x20
0x13d: V82 = ADD 0x20 V76
0x141: V83 = 0x40
0x143: V84 = M[0x40]
0x146: V85 = SUB V82 V84
0x148: RETURN V84 V85
---
Entry stack: [V11, 0x107, V310]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x107]

================================

Block 0x149
[0x149:0x14f]
---
Predecessors: [0x6d]
Successors: [0x150, 0x154]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x149: JUMPDEST 
0x14a: V86 = CALLVALUE
0x14b: V87 = ISZERO V86
0x14c: V88 = 0x154
0x14f: JUMPI 0x154 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x149]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V89 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x154
[0x154:0x15b]
---
Predecessors: [0x149]
Successors: [0x563]
---
0x154 JUMPDEST
0x155 PUSH2 0x15c
0x158 PUSH2 0x563
0x15b JUMP
---
0x154: JUMPDEST 
0x155: V90 = 0x15c
0x158: V91 = 0x563
0x15b: JUMP 0x563
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15c]
Exit stack: [V11, 0x15c]

================================

Block 0x15c
[0x15c:0x19d]
---
Predecessors: [0x563]
Successors: []
---
0x15c JUMPDEST
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 DUP3
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 SWAP2
0x194 POP
0x195 POP
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a SWAP2
0x19b SUB
0x19c SWAP1
0x19d RETURN
---
0x15c: JUMPDEST 
0x15d: V92 = 0x40
0x15f: V93 = M[0x40]
0x162: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x178: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x18f: M[V93] = V97
0x190: V98 = 0x20
0x192: V99 = ADD 0x20 V93
0x196: V100 = 0x40
0x198: V101 = M[0x40]
0x19b: V102 = SUB V99 V101
0x19d: RETURN V101 V102
---
Entry stack: [V11, 0x15c, V318]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15c]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x78]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V103 = CALLVALUE
0x1a0: V104 = ISZERO V103
0x1a1: V105 = 0x1a9
0x1a4: JUMPI 0x1a9 V104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V106 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a9
[0x1a9:0x1d4]
---
Predecessors: [0x19e]
Successors: [0x589]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x1d5
0x1ad PUSH1 0x4
0x1af DUP1
0x1b0 DUP1
0x1b1 CALLDATALOAD
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 SWAP1
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd SWAP2
0x1ce SWAP1
0x1cf POP
0x1d0 POP
0x1d1 PUSH2 0x589
0x1d4 JUMP
---
0x1a9: JUMPDEST 
0x1aa: V107 = 0x1d5
0x1ad: V108 = 0x4
0x1b1: V109 = CALLDATALOAD 0x4
0x1b2: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1c9: V112 = 0x20
0x1cb: V113 = ADD 0x20 0x4
0x1d1: V114 = 0x589
0x1d4: JUMP 0x589
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d5, V111]
Exit stack: [V11, 0x1d5, V111]

================================

Block 0x1d5
[0x1d5:0x1d6]
---
Predecessors: [0x63d]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 STOP
---
0x1d5: JUMPDEST 
0x1d6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d7
[0x1d7:0x22d]
---
Predecessors: [0x93]
Successors: [0x22e, 0x22f]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db SWAP1
0x1dc SLOAD
0x1dd SWAP1
0x1de PUSH2 0x100
0x1e1 EXP
0x1e2 SWAP1
0x1e3 DIV
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20f AND
0x210 CALLER
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 EQ
0x228 ISZERO
0x229 ISZERO
0x22a PUSH2 0x22f
0x22d JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V115 = 0x0
0x1dc: V116 = S[0x0]
0x1de: V117 = 0x100
0x1e1: V118 = EXP 0x100 0x0
0x1e3: V119 = DIV V116 0x1
0x1e4: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1fa: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x20f: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x210: V124 = CALLER
0x211: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x227: V127 = EQ V126 V123
0x228: V128 = ISZERO V127
0x229: V129 = ISZERO V128
0x22a: V130 = 0x22f
0x22d: JUMPI 0x22f V129
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x22e
[0x22e:0x22e]
---
Predecessors: [0x1d7]
Successors: []
---
0x22e INVALID
---
0x22e: INVALID 
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x22f
[0x22f:0x245]
---
Predecessors: [0x1d7]
Successors: [0x246, 0x24a]
---
0x22f JUMPDEST
0x230 PUSH1 0x1
0x232 PUSH1 0x14
0x234 SWAP1
0x235 SLOAD
0x236 SWAP1
0x237 PUSH2 0x100
0x23a EXP
0x23b SWAP1
0x23c DIV
0x23d PUSH1 0xff
0x23f AND
0x240 ISZERO
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x22f: JUMPDEST 
0x230: V131 = 0x1
0x232: V132 = 0x14
0x235: V133 = S[0x1]
0x237: V134 = 0x100
0x23a: V135 = EXP 0x100 0x14
0x23c: V136 = DIV V133 0x10000000000000000000000000000000000000000
0x23d: V137 = 0xff
0x23f: V138 = AND 0xff V136
0x240: V139 = ISZERO V138
0x241: V140 = ISZERO V139
0x242: V141 = 0x24a
0x245: JUMPI 0x24a V140
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x22f]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V142 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x24a
[0x24a:0x292]
---
Predecessors: [0x22f]
Successors: [0x9b]
---
0x24a JUMPDEST
0x24b PUSH1 0x0
0x24d PUSH1 0x1
0x24f PUSH1 0x14
0x251 PUSH2 0x100
0x254 EXP
0x255 DUP2
0x256 SLOAD
0x257 DUP2
0x258 PUSH1 0xff
0x25a MUL
0x25b NOT
0x25c AND
0x25d SWAP1
0x25e DUP4
0x25f ISZERO
0x260 ISZERO
0x261 MUL
0x262 OR
0x263 SWAP1
0x264 SSTORE
0x265 POP
0x266 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x287 PUSH1 0x40
0x289 MLOAD
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e SWAP2
0x28f SUB
0x290 SWAP1
0x291 LOG1
0x292 JUMP
---
0x24a: JUMPDEST 
0x24b: V143 = 0x0
0x24d: V144 = 0x1
0x24f: V145 = 0x14
0x251: V146 = 0x100
0x254: V147 = EXP 0x100 0x14
0x256: V148 = S[0x1]
0x258: V149 = 0xff
0x25a: V150 = MUL 0xff 0x10000000000000000000000000000000000000000
0x25b: V151 = NOT 0xff0000000000000000000000000000000000000000
0x25c: V152 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V148
0x25f: V153 = ISZERO 0x0
0x260: V154 = ISZERO 0x1
0x261: V155 = MUL 0x0 0x10000000000000000000000000000000000000000
0x262: V156 = OR 0x0 V152
0x264: S[0x1] = V156
0x266: V157 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x287: V158 = 0x40
0x289: V159 = M[0x40]
0x28a: V160 = 0x40
0x28c: V161 = M[0x40]
0x28f: V162 = SUB V159 V161
0x291: LOG V161 V162 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x292: JUMP 0x9b
---
Entry stack: [V11, 0x9b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x293
[0x293:0x2a5]
---
Predecessors: [0xa8]
Successors: [0xb0]
---
0x293 JUMPDEST
0x294 PUSH1 0x1
0x296 PUSH1 0x14
0x298 SWAP1
0x299 SLOAD
0x29a SWAP1
0x29b PUSH2 0x100
0x29e EXP
0x29f SWAP1
0x2a0 DIV
0x2a1 PUSH1 0xff
0x2a3 AND
0x2a4 DUP2
0x2a5 JUMP
---
0x293: JUMPDEST 
0x294: V163 = 0x1
0x296: V164 = 0x14
0x299: V165 = S[0x1]
0x29b: V166 = 0x100
0x29e: V167 = EXP 0x100 0x14
0x2a0: V168 = DIV V165 0x10000000000000000000000000000000000000000
0x2a1: V169 = 0xff
0x2a3: V170 = AND 0xff V168
0x2a5: JUMP 0xb0
---
Entry stack: [V11, 0xb0]
Stack pops: 1
Stack additions: [S0, V170]
Exit stack: [V11, 0xb0, V170]

================================

Block 0x2a6
[0x2a6:0x2fd]
---
Predecessors: [0xd5, 0x8d4]
Successors: [0x2fe, 0x302]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0x0
0x2ab SWAP1
0x2ac SLOAD
0x2ad SWAP1
0x2ae PUSH2 0x100
0x2b1 EXP
0x2b2 SWAP1
0x2b3 DIV
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 CALLER
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 EQ
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V171 = 0x1
0x2a9: V172 = 0x0
0x2ac: V173 = S[0x1]
0x2ae: V174 = 0x100
0x2b1: V175 = EXP 0x100 0x0
0x2b3: V176 = DIV V173 0x1
0x2b4: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2ca: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2e0: V181 = CALLER
0x2e1: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2f7: V184 = EQ V183 V180
0x2f8: V185 = ISZERO V184
0x2f9: V186 = ISZERO V185
0x2fa: V187 = 0x302
0x2fd: JUMPI 0x302 V186
---
Entry stack: [S1, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [S1, 0xdd]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2a6]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V188 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [S1, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [S1, 0xdd]

================================

Block 0x302
[0x302:0x481]
---
Predecessors: [0x2a6]
Successors: [0xdd]
---
0x302 JUMPDEST
0x303 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x324 PUSH1 0x0
0x326 DUP1
0x327 SWAP1
0x328 SLOAD
0x329 SWAP1
0x32a PUSH2 0x100
0x32d EXP
0x32e SWAP1
0x32f DIV
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 PUSH1 0x1
0x348 PUSH1 0x0
0x34a SWAP1
0x34b SLOAD
0x34c SWAP1
0x34d PUSH2 0x100
0x350 EXP
0x351 SWAP1
0x352 DIV
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 PUSH1 0x40
0x36b MLOAD
0x36c DUP1
0x36d DUP4
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a DUP2
0x39b MSTORE
0x39c PUSH1 0x20
0x39e ADD
0x39f DUP3
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cb AND
0x3cc DUP2
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP3
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP1
0x3d9 SWAP2
0x3da SUB
0x3db SWAP1
0x3dc LOG1
0x3dd PUSH1 0x1
0x3df PUSH1 0x0
0x3e1 SWAP1
0x3e2 SLOAD
0x3e3 SWAP1
0x3e4 PUSH2 0x100
0x3e7 EXP
0x3e8 SWAP1
0x3e9 DIV
0x3ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ff AND
0x400 PUSH1 0x0
0x402 DUP1
0x403 PUSH2 0x100
0x406 EXP
0x407 DUP2
0x408 SLOAD
0x409 DUP2
0x40a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41f MUL
0x420 NOT
0x421 AND
0x422 SWAP1
0x423 DUP4
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a MUL
0x43b OR
0x43c SWAP1
0x43d SSTORE
0x43e POP
0x43f PUSH1 0x0
0x441 PUSH1 0x1
0x443 PUSH1 0x0
0x445 PUSH2 0x100
0x448 EXP
0x449 DUP2
0x44a SLOAD
0x44b DUP2
0x44c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x461 MUL
0x462 NOT
0x463 AND
0x464 SWAP1
0x465 DUP4
0x466 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47b AND
0x47c MUL
0x47d OR
0x47e SWAP1
0x47f SSTORE
0x480 POP
0x481 JUMP
---
0x302: JUMPDEST 
0x303: V189 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x324: V190 = 0x0
0x328: V191 = S[0x0]
0x32a: V192 = 0x100
0x32d: V193 = EXP 0x100 0x0
0x32f: V194 = DIV V191 0x1
0x330: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x346: V197 = 0x1
0x348: V198 = 0x0
0x34b: V199 = S[0x1]
0x34d: V200 = 0x100
0x350: V201 = EXP 0x100 0x0
0x352: V202 = DIV V199 0x1
0x353: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x369: V205 = 0x40
0x36b: V206 = M[0x40]
0x36e: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x384: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x39b: M[V206] = V210
0x39c: V211 = 0x20
0x39e: V212 = ADD 0x20 V206
0x3a0: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3b6: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3cd: M[V212] = V216
0x3ce: V217 = 0x20
0x3d0: V218 = ADD 0x20 V212
0x3d5: V219 = 0x40
0x3d7: V220 = M[0x40]
0x3da: V221 = SUB V218 V220
0x3dc: LOG V220 V221 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x3dd: V222 = 0x1
0x3df: V223 = 0x0
0x3e2: V224 = S[0x1]
0x3e4: V225 = 0x100
0x3e7: V226 = EXP 0x100 0x0
0x3e9: V227 = DIV V224 0x1
0x3ea: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x400: V230 = 0x0
0x403: V231 = 0x100
0x406: V232 = EXP 0x100 0x0
0x408: V233 = S[0x0]
0x40a: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V235 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x420: V236 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x421: V237 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V233
0x424: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x43a: V240 = MUL V239 0x1
0x43b: V241 = OR V240 V237
0x43d: S[0x0] = V241
0x43f: V242 = 0x0
0x441: V243 = 0x1
0x443: V244 = 0x0
0x445: V245 = 0x100
0x448: V246 = EXP 0x100 0x0
0x44a: V247 = S[0x1]
0x44c: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x461: V249 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x462: V250 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x463: V251 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V247
0x466: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x47b: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x47c: V254 = MUL 0x0 0x1
0x47d: V255 = OR 0x0 V251
0x47f: S[0x1] = V255
0x481: JUMP 0xdd
---
Entry stack: [S1, 0xdd]
Stack pops: 1
Stack additions: []
Exit stack: [S1]

================================

Block 0x482
[0x482:0x4d8]
---
Predecessors: [0xea]
Successors: [0x4d9, 0x4da]
---
0x482 JUMPDEST
0x483 PUSH1 0x0
0x485 DUP1
0x486 SWAP1
0x487 SLOAD
0x488 SWAP1
0x489 PUSH2 0x100
0x48c EXP
0x48d SWAP1
0x48e DIV
0x48f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a4 AND
0x4a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ba AND
0x4bb CALLER
0x4bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d1 AND
0x4d2 EQ
0x4d3 ISZERO
0x4d4 ISZERO
0x4d5 PUSH2 0x4da
0x4d8 JUMPI
---
0x482: JUMPDEST 
0x483: V256 = 0x0
0x487: V257 = S[0x0]
0x489: V258 = 0x100
0x48c: V259 = EXP 0x100 0x0
0x48e: V260 = DIV V257 0x1
0x48f: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x4a5: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x4bb: V265 = CALLER
0x4bc: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x4d2: V268 = EQ V267 V264
0x4d3: V269 = ISZERO V268
0x4d4: V270 = ISZERO V269
0x4d5: V271 = 0x4da
0x4d8: JUMPI 0x4da V270
---
Entry stack: [V11, 0xf2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf2]

================================

Block 0x4d9
[0x4d9:0x4d9]
---
Predecessors: [0x482]
Successors: []
---
0x4d9 INVALID
---
0x4d9: INVALID 
---
Entry stack: [V11, 0xf2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf2]

================================

Block 0x4da
[0x4da:0x4f1]
---
Predecessors: [0x482]
Successors: [0x4f2, 0x4f6]
---
0x4da JUMPDEST
0x4db PUSH1 0x1
0x4dd PUSH1 0x14
0x4df SWAP1
0x4e0 SLOAD
0x4e1 SWAP1
0x4e2 PUSH2 0x100
0x4e5 EXP
0x4e6 SWAP1
0x4e7 DIV
0x4e8 PUSH1 0xff
0x4ea AND
0x4eb ISZERO
0x4ec ISZERO
0x4ed ISZERO
0x4ee PUSH2 0x4f6
0x4f1 JUMPI
---
0x4da: JUMPDEST 
0x4db: V272 = 0x1
0x4dd: V273 = 0x14
0x4e0: V274 = S[0x1]
0x4e2: V275 = 0x100
0x4e5: V276 = EXP 0x100 0x14
0x4e7: V277 = DIV V274 0x10000000000000000000000000000000000000000
0x4e8: V278 = 0xff
0x4ea: V279 = AND 0xff V277
0x4eb: V280 = ISZERO V279
0x4ec: V281 = ISZERO V280
0x4ed: V282 = ISZERO V281
0x4ee: V283 = 0x4f6
0x4f1: JUMPI 0x4f6 V282
---
Entry stack: [V11, 0xf2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf2]

================================

Block 0x4f2
[0x4f2:0x4f5]
---
Predecessors: [0x4da]
Successors: []
---
0x4f2 PUSH1 0x0
0x4f4 DUP1
0x4f5 REVERT
---
0x4f2: V284 = 0x0
0x4f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf2]

================================

Block 0x4f6
[0x4f6:0x53d]
---
Predecessors: [0x4da]
Successors: [0xf2]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x1
0x4f9 DUP1
0x4fa PUSH1 0x14
0x4fc PUSH2 0x100
0x4ff EXP
0x500 DUP2
0x501 SLOAD
0x502 DUP2
0x503 PUSH1 0xff
0x505 MUL
0x506 NOT
0x507 AND
0x508 SWAP1
0x509 DUP4
0x50a ISZERO
0x50b ISZERO
0x50c MUL
0x50d OR
0x50e SWAP1
0x50f SSTORE
0x510 POP
0x511 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x532 PUSH1 0x40
0x534 MLOAD
0x535 PUSH1 0x40
0x537 MLOAD
0x538 DUP1
0x539 SWAP2
0x53a SUB
0x53b SWAP1
0x53c LOG1
0x53d JUMP
---
0x4f6: JUMPDEST 
0x4f7: V285 = 0x1
0x4fa: V286 = 0x14
0x4fc: V287 = 0x100
0x4ff: V288 = EXP 0x100 0x14
0x501: V289 = S[0x1]
0x503: V290 = 0xff
0x505: V291 = MUL 0xff 0x10000000000000000000000000000000000000000
0x506: V292 = NOT 0xff0000000000000000000000000000000000000000
0x507: V293 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V289
0x50a: V294 = ISZERO 0x1
0x50b: V295 = ISZERO 0x0
0x50c: V296 = MUL 0x1 0x10000000000000000000000000000000000000000
0x50d: V297 = OR 0x10000000000000000000000000000000000000000 V293
0x50f: S[0x1] = V297
0x511: V298 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x532: V299 = 0x40
0x534: V300 = M[0x40]
0x535: V301 = 0x40
0x537: V302 = M[0x40]
0x53a: V303 = SUB V300 V302
0x53c: LOG V302 V303 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x53d: JUMP 0xf2
---
Entry stack: [V11, 0xf2]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x53e
[0x53e:0x562]
---
Predecessors: [0xff]
Successors: [0x107]
---
0x53e JUMPDEST
0x53f PUSH1 0x0
0x541 DUP1
0x542 SWAP1
0x543 SLOAD
0x544 SWAP1
0x545 PUSH2 0x100
0x548 EXP
0x549 SWAP1
0x54a DIV
0x54b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x560 AND
0x561 DUP2
0x562 JUMP
---
0x53e: JUMPDEST 
0x53f: V304 = 0x0
0x543: V305 = S[0x0]
0x545: V306 = 0x100
0x548: V307 = EXP 0x100 0x0
0x54a: V308 = DIV V305 0x1
0x54b: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x560: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x562: JUMP 0x107
---
Entry stack: [V11, 0x107]
Stack pops: 1
Stack additions: [S0, V310]
Exit stack: [V11, 0x107, V310]

================================

Block 0x563
[0x563:0x588]
---
Predecessors: [0x154]
Successors: [0x15c]
---
0x563 JUMPDEST
0x564 PUSH1 0x1
0x566 PUSH1 0x0
0x568 SWAP1
0x569 SLOAD
0x56a SWAP1
0x56b PUSH2 0x100
0x56e EXP
0x56f SWAP1
0x570 DIV
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 AND
0x587 DUP2
0x588 JUMP
---
0x563: JUMPDEST 
0x564: V311 = 0x1
0x566: V312 = 0x0
0x569: V313 = S[0x1]
0x56b: V314 = 0x100
0x56e: V315 = EXP 0x100 0x0
0x570: V316 = DIV V313 0x1
0x571: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x588: JUMP 0x15c
---
Entry stack: [V11, 0x15c]
Stack pops: 1
Stack additions: [S0, V318]
Exit stack: [V11, 0x15c, V318]

================================

Block 0x589
[0x589:0x5df]
---
Predecessors: [0x1a9]
Successors: [0x5e0, 0x5e1]
---
0x589 JUMPDEST
0x58a PUSH1 0x0
0x58c DUP1
0x58d SWAP1
0x58e SLOAD
0x58f SWAP1
0x590 PUSH2 0x100
0x593 EXP
0x594 SWAP1
0x595 DIV
0x596 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ab AND
0x5ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c1 AND
0x5c2 CALLER
0x5c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d8 AND
0x5d9 EQ
0x5da ISZERO
0x5db ISZERO
0x5dc PUSH2 0x5e1
0x5df JUMPI
---
0x589: JUMPDEST 
0x58a: V319 = 0x0
0x58e: V320 = S[0x0]
0x590: V321 = 0x100
0x593: V322 = EXP 0x100 0x0
0x595: V323 = DIV V320 0x1
0x596: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ab: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x5ac: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c1: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x5c2: V328 = CALLER
0x5c3: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x5d9: V331 = EQ V330 V327
0x5da: V332 = ISZERO V331
0x5db: V333 = ISZERO V332
0x5dc: V334 = 0x5e1
0x5df: JUMPI 0x5e1 V333
---
Entry stack: [V11, 0x1d5, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d5, V111]

================================

Block 0x5e0
[0x5e0:0x5e0]
---
Predecessors: [0x589]
Successors: []
---
0x5e0 INVALID
---
0x5e0: INVALID 
---
Entry stack: [V11, 0x1d5, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d5, V111]

================================

Block 0x5e1
[0x5e1:0x638]
---
Predecessors: [0x589]
Successors: [0x639, 0x63d]
---
0x5e1 JUMPDEST
0x5e2 PUSH1 0x0
0x5e4 DUP1
0x5e5 SWAP1
0x5e6 SLOAD
0x5e7 SWAP1
0x5e8 PUSH2 0x100
0x5eb EXP
0x5ec SWAP1
0x5ed DIV
0x5ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x603 AND
0x604 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x619 AND
0x61a DUP2
0x61b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x630 AND
0x631 EQ
0x632 ISZERO
0x633 ISZERO
0x634 ISZERO
0x635 PUSH2 0x63d
0x638 JUMPI
---
0x5e1: JUMPDEST 
0x5e2: V335 = 0x0
0x5e6: V336 = S[0x0]
0x5e8: V337 = 0x100
0x5eb: V338 = EXP 0x100 0x0
0x5ed: V339 = DIV V336 0x1
0x5ee: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x603: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x604: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x619: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x61b: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x630: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x631: V346 = EQ V345 V343
0x632: V347 = ISZERO V346
0x633: V348 = ISZERO V347
0x634: V349 = ISZERO V348
0x635: V350 = 0x63d
0x638: JUMPI 0x63d V349
---
Entry stack: [V11, 0x1d5, V111]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1d5, V111]

================================

Block 0x639
[0x639:0x63c]
---
Predecessors: [0x5e1]
Successors: []
---
0x639 PUSH1 0x0
0x63b DUP1
0x63c REVERT
---
0x639: V351 = 0x0
0x63c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d5, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d5, V111]

================================

Block 0x63d
[0x63d:0x680]
---
Predecessors: [0x5e1]
Successors: [0x1d5]
---
0x63d JUMPDEST
0x63e DUP1
0x63f PUSH1 0x1
0x641 PUSH1 0x0
0x643 PUSH2 0x100
0x646 EXP
0x647 DUP2
0x648 SLOAD
0x649 DUP2
0x64a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65f MUL
0x660 NOT
0x661 AND
0x662 SWAP1
0x663 DUP4
0x664 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x679 AND
0x67a MUL
0x67b OR
0x67c SWAP1
0x67d SSTORE
0x67e POP
0x67f POP
0x680 JUMP
---
0x63d: JUMPDEST 
0x63f: V352 = 0x1
0x641: V353 = 0x0
0x643: V354 = 0x100
0x646: V355 = EXP 0x100 0x0
0x648: V356 = S[0x1]
0x64a: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x65f: V358 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x660: V359 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x661: V360 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V356
0x664: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x679: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x67a: V363 = MUL V362 0x1
0x67b: V364 = OR V363 V360
0x67d: S[0x1] = V364
0x680: JUMP 0x1d5
---
Entry stack: [V11, 0x1d5, V111]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x681
[0x681:0x6b9]
---
Predecessors: []
Successors: [0x6ba]
Has unresolved jump.
---
0x681 STOP
0x682 LOG1
0x683 PUSH6 0x627a7a723058
0x68a SHA3
0x68b MISSING 0x46
0x68c DUP4
0x68d MISSING 0x47
0x68e POP
0x68f MISSING 0xde
0x690 MISSING 0xee
0x691 MLOAD
0x692 MISSING 0xae
0x693 MISSING 0x2c
0x694 MISSING 0xe8
0x695 MISSING 0xbd
0x696 MISSING 0x47
0x697 MISSING 0xdc
0x698 SWAP15
0x699 MISSING 0xf6
0x69a ADDMOD
0x69b CREATE
0x69c PUSH27 0xd53b05172c61bc2264092adec0ee00296060604052600436106100
0x6b8 MISSING 0xc5
0x6b9 JUMPI
---
0x681: STOP 
0x682: LOG S0 S1 S2
0x683: V365 = 0x627a7a723058
0x68a: V366 = SHA3 0x627a7a723058 S3
0x68b: MISSING 0x46
0x68d: MISSING 0x47
0x68f: MISSING 0xde
0x690: MISSING 0xee
0x691: V367 = M[S0]
0x692: MISSING 0xae
0x693: MISSING 0x2c
0x694: MISSING 0xe8
0x695: MISSING 0xbd
0x696: MISSING 0x47
0x697: MISSING 0xdc
0x699: MISSING 0xf6
0x69a: V368 = ADDMOD S0 S1 S2
0x69b: V369 = CREATE V368 S3 S4
0x69c: V370 = 0xd53b05172c61bc2264092adec0ee00296060604052600436106100
0x6b8: MISSING 0xc5
0x6b9: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V366, S3, S0, S1, S2, S3, V367, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, 0xd53b05172c61bc2264092adec0ee00296060604052600436106100, V369]
Exit stack: []

================================

Block 0x6ba
[0x6ba:0x6ed]
---
Predecessors: [0x681]
Successors: [0xca, 0x6ee]
---
0x6ba PUSH1 0x0
0x6bc CALLDATALOAD
0x6bd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6db SWAP1
0x6dc DIV
0x6dd PUSH4 0xffffffff
0x6e2 AND
0x6e3 DUP1
0x6e4 PUSH4 0x1612ec4f
0x6e9 EQ
0x6ea PUSH2 0xca
0x6ed JUMPI
---
0x6ba: V371 = 0x0
0x6bc: V372 = CALLDATALOAD 0x0
0x6bd: V373 = 0x100000000000000000000000000000000000000000000000000000000
0x6dc: V374 = DIV V372 0x100000000000000000000000000000000000000000000000000000000
0x6dd: V375 = 0xffffffff
0x6e2: V376 = AND 0xffffffff V374
0x6e4: V377 = 0x1612ec4f
0x6e9: V378 = EQ 0x1612ec4f V376
0x6ea: V379 = 0xca
0x6ed: JUMPI 0xca V378
---
Entry stack: []
Stack pops: 0
Stack additions: [V376]
Exit stack: [V376]

================================

Block 0x6ee
[0x6ee:0x6f8]
---
Predecessors: [0x6ba]
Successors: [0x6f9]
---
0x6ee DUP1
0x6ef PUSH4 0x3b97e856
0x6f4 EQ
0x6f5 PUSH2 0x11b
0x6f8 JUMPI
---
0x6ef: V380 = 0x3b97e856
0x6f4: V381 = EQ 0x3b97e856 V376
0x6f5: V382 = 0x11b
0x6f8: THROWI V381
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x6f9
[0x6f9:0x703]
---
Predecessors: [0x6ee]
Successors: [0x704]
---
0x6f9 DUP1
0x6fa PUSH4 0x3f4ba83a
0x6ff EQ
0x700 PUSH2 0x14a
0x703 JUMPI
---
0x6fa: V383 = 0x3f4ba83a
0x6ff: V384 = EQ 0x3f4ba83a V376
0x700: V385 = 0x14a
0x703: THROWI V384
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x704
[0x704:0x70e]
---
Predecessors: [0x6f9]
Successors: [0x70f]
---
0x704 DUP1
0x705 PUSH4 0x41c0e1b5
0x70a EQ
0x70b PUSH2 0x15f
0x70e JUMPI
---
0x705: V386 = 0x41c0e1b5
0x70a: V387 = EQ 0x41c0e1b5 V376
0x70b: V388 = 0x15f
0x70e: THROWI V387
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x70f
[0x70f:0x719]
---
Predecessors: [0x704]
Successors: [0x71a]
---
0x70f DUP1
0x710 PUSH4 0x5c975abb
0x715 EQ
0x716 PUSH2 0x174
0x719 JUMPI
---
0x710: V389 = 0x5c975abb
0x715: V390 = EQ 0x5c975abb V376
0x716: V391 = 0x174
0x719: THROWI V390
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x71a
[0x71a:0x724]
---
Predecessors: [0x70f]
Successors: [0x725]
---
0x71a DUP1
0x71b PUSH4 0x79ba5097
0x720 EQ
0x721 PUSH2 0x1a1
0x724 JUMPI
---
0x71b: V392 = 0x79ba5097
0x720: V393 = EQ 0x79ba5097 V376
0x721: V394 = 0x1a1
0x724: THROWI V393
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x725
[0x725:0x72f]
---
Predecessors: [0x71a]
Successors: [0x730]
---
0x725 DUP1
0x726 PUSH4 0x8456cb59
0x72b EQ
0x72c PUSH2 0x1b6
0x72f JUMPI
---
0x726: V395 = 0x8456cb59
0x72b: V396 = EQ 0x8456cb59 V376
0x72c: V397 = 0x1b6
0x72f: THROWI V396
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x730
[0x730:0x73a]
---
Predecessors: [0x725]
Successors: [0x73b]
---
0x730 DUP1
0x731 PUSH4 0x8da5cb5b
0x736 EQ
0x737 PUSH2 0x1cb
0x73a JUMPI
---
0x731: V398 = 0x8da5cb5b
0x736: V399 = EQ 0x8da5cb5b V376
0x737: V400 = 0x1cb
0x73a: THROWI V399
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x73b
[0x73b:0x745]
---
Predecessors: [0x730]
Successors: [0x746]
---
0x73b DUP1
0x73c PUSH4 0xa985e6c6
0x741 EQ
0x742 PUSH2 0x220
0x745 JUMPI
---
0x73c: V401 = 0xa985e6c6
0x741: V402 = EQ 0xa985e6c6 V376
0x742: V403 = 0x220
0x745: THROWI V402
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x746
[0x746:0x750]
---
Predecessors: [0x73b]
Successors: [0x751]
---
0x746 DUP1
0x747 PUSH4 0xcac3e64a
0x74c EQ
0x74d PUSH2 0x29b
0x750 JUMPI
---
0x747: V404 = 0xcac3e64a
0x74c: V405 = EQ 0xcac3e64a V376
0x74d: V406 = 0x29b
0x750: THROWI V405
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x751
[0x751:0x75b]
---
Predecessors: [0x746]
Successors: [0x75c]
---
0x751 DUP1
0x752 PUSH4 0xd4ee1d90
0x757 EQ
0x758 PUSH2 0x2f0
0x75b JUMPI
---
0x752: V407 = 0xd4ee1d90
0x757: V408 = EQ 0xd4ee1d90 V376
0x758: V409 = 0x2f0
0x75b: THROWI V408
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x75c
[0x75c:0x766]
---
Predecessors: [0x751]
Successors: [0x767]
---
0x75c DUP1
0x75d PUSH4 0xf2fde38b
0x762 EQ
0x763 PUSH2 0x345
0x766 JUMPI
---
0x75d: V410 = 0xf2fde38b
0x762: V411 = EQ 0xf2fde38b V376
0x763: V412 = 0x345
0x766: THROWI V411
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x767
[0x767:0x771]
---
Predecessors: [0x75c]
Successors: [0x772]
---
0x767 DUP1
0x768 PUSH4 0xf7abab9e
0x76d EQ
0x76e PUSH2 0x37e
0x771 JUMPI
---
0x768: V413 = 0xf7abab9e
0x76d: V414 = EQ 0xf7abab9e V376
0x76e: V415 = 0x37e
0x771: THROWI V414
---
Entry stack: [V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V376]

================================

Block 0x772
[0x772:0x77d]
---
Predecessors: [0x767]
Successors: [0xd5, 0x77e]
---
0x772 JUMPDEST
0x773 PUSH1 0x0
0x775 DUP1
0x776 REVERT
0x777 JUMPDEST
0x778 CALLVALUE
0x779 ISZERO
0x77a PUSH2 0xd5
0x77d JUMPI
---
0x772: JUMPDEST 
0x773: V416 = 0x0
0x776: REVERT 0x0 0x0
0x777: JUMPDEST 
0x778: V417 = CALLVALUE
0x779: V418 = ISZERO V417
0x77a: V419 = 0xd5
0x77d: JUMPI 0xd5 V418
---
Entry stack: [V376]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x77e
[0x77e:0x7ce]
---
Predecessors: [0x772]
Successors: [0x7cf]
---
0x77e PUSH1 0x0
0x780 DUP1
0x781 REVERT
0x782 JUMPDEST
0x783 PUSH2 0x101
0x786 PUSH1 0x4
0x788 DUP1
0x789 DUP1
0x78a CALLDATALOAD
0x78b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a0 AND
0x7a1 SWAP1
0x7a2 PUSH1 0x20
0x7a4 ADD
0x7a5 SWAP1
0x7a6 SWAP2
0x7a7 SWAP1
0x7a8 POP
0x7a9 POP
0x7aa PUSH2 0x3a7
0x7ad JUMP
0x7ae JUMPDEST
0x7af PUSH1 0x40
0x7b1 MLOAD
0x7b2 DUP1
0x7b3 DUP3
0x7b4 ISZERO
0x7b5 ISZERO
0x7b6 ISZERO
0x7b7 ISZERO
0x7b8 DUP2
0x7b9 MSTORE
0x7ba PUSH1 0x20
0x7bc ADD
0x7bd SWAP2
0x7be POP
0x7bf POP
0x7c0 PUSH1 0x40
0x7c2 MLOAD
0x7c3 DUP1
0x7c4 SWAP2
0x7c5 SUB
0x7c6 SWAP1
0x7c7 RETURN
0x7c8 JUMPDEST
0x7c9 CALLVALUE
0x7ca ISZERO
0x7cb PUSH2 0x126
0x7ce JUMPI
---
0x77e: V420 = 0x0
0x781: REVERT 0x0 0x0
0x782: JUMPDEST 
0x783: V421 = 0x101
0x786: V422 = 0x4
0x78a: V423 = CALLDATALOAD 0x4
0x78b: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a0: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x7a2: V426 = 0x20
0x7a4: V427 = ADD 0x20 0x4
0x7aa: V428 = 0x3a7
0x7ad: THROW 
0x7ae: JUMPDEST 
0x7af: V429 = 0x40
0x7b1: V430 = M[0x40]
0x7b4: V431 = ISZERO S0
0x7b5: V432 = ISZERO V431
0x7b6: V433 = ISZERO V432
0x7b7: V434 = ISZERO V433
0x7b9: M[V430] = V434
0x7ba: V435 = 0x20
0x7bc: V436 = ADD 0x20 V430
0x7c0: V437 = 0x40
0x7c2: V438 = M[0x40]
0x7c5: V439 = SUB V436 V438
0x7c7: RETURN V438 V439
0x7c8: JUMPDEST 
0x7c9: V440 = CALLVALUE
0x7ca: V441 = ISZERO V440
0x7cb: V442 = 0x126
0x7ce: THROWI V441
---
Entry stack: []
Stack pops: 0
Stack additions: [V425, 0x101]
Exit stack: []

================================

Block 0x7cf
[0x7cf:0x7fd]
---
Predecessors: [0x77e]
Successors: [0x7fe]
---
0x7cf PUSH1 0x0
0x7d1 DUP1
0x7d2 REVERT
0x7d3 JUMPDEST
0x7d4 PUSH2 0x12e
0x7d7 PUSH2 0x466
0x7da JUMP
0x7db JUMPDEST
0x7dc PUSH1 0x40
0x7de MLOAD
0x7df DUP1
0x7e0 DUP3
0x7e1 PUSH1 0xff
0x7e3 AND
0x7e4 PUSH1 0xff
0x7e6 AND
0x7e7 DUP2
0x7e8 MSTORE
0x7e9 PUSH1 0x20
0x7eb ADD
0x7ec SWAP2
0x7ed POP
0x7ee POP
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 DUP1
0x7f3 SWAP2
0x7f4 SUB
0x7f5 SWAP1
0x7f6 RETURN
0x7f7 JUMPDEST
0x7f8 CALLVALUE
0x7f9 ISZERO
0x7fa PUSH2 0x155
0x7fd JUMPI
---
0x7cf: V443 = 0x0
0x7d2: REVERT 0x0 0x0
0x7d3: JUMPDEST 
0x7d4: V444 = 0x12e
0x7d7: V445 = 0x466
0x7da: THROW 
0x7db: JUMPDEST 
0x7dc: V446 = 0x40
0x7de: V447 = M[0x40]
0x7e1: V448 = 0xff
0x7e3: V449 = AND 0xff S0
0x7e4: V450 = 0xff
0x7e6: V451 = AND 0xff V449
0x7e8: M[V447] = V451
0x7e9: V452 = 0x20
0x7eb: V453 = ADD 0x20 V447
0x7ef: V454 = 0x40
0x7f1: V455 = M[0x40]
0x7f4: V456 = SUB V453 V455
0x7f6: RETURN V455 V456
0x7f7: JUMPDEST 
0x7f8: V457 = CALLVALUE
0x7f9: V458 = ISZERO V457
0x7fa: V459 = 0x155
0x7fd: THROWI V458
---
Entry stack: []
Stack pops: 0
Stack additions: [0x12e]
Exit stack: []

================================

Block 0x7fe
[0x7fe:0x812]
---
Predecessors: [0x7cf]
Successors: [0x813]
---
0x7fe PUSH1 0x0
0x800 DUP1
0x801 REVERT
0x802 JUMPDEST
0x803 PUSH2 0x15d
0x806 PUSH2 0x509
0x809 JUMP
0x80a JUMPDEST
0x80b STOP
0x80c JUMPDEST
0x80d CALLVALUE
0x80e ISZERO
0x80f PUSH2 0x16a
0x812 JUMPI
---
0x7fe: V460 = 0x0
0x801: REVERT 0x0 0x0
0x802: JUMPDEST 
0x803: V461 = 0x15d
0x806: V462 = 0x509
0x809: THROW 
0x80a: JUMPDEST 
0x80b: STOP 
0x80c: JUMPDEST 
0x80d: V463 = CALLVALUE
0x80e: V464 = ISZERO V463
0x80f: V465 = 0x16a
0x812: THROWI V464
---
Entry stack: []
Stack pops: 0
Stack additions: [0x15d]
Exit stack: []

================================

Block 0x813
[0x813:0x827]
---
Predecessors: [0x7fe]
Successors: [0x828]
---
0x813 PUSH1 0x0
0x815 DUP1
0x816 REVERT
0x817 JUMPDEST
0x818 PUSH2 0x172
0x81b PUSH2 0x5c5
0x81e JUMP
0x81f JUMPDEST
0x820 STOP
0x821 JUMPDEST
0x822 CALLVALUE
0x823 ISZERO
0x824 PUSH2 0x17f
0x827 JUMPI
---
0x813: V466 = 0x0
0x816: REVERT 0x0 0x0
0x817: JUMPDEST 
0x818: V467 = 0x172
0x81b: V468 = 0x5c5
0x81e: THROW 
0x81f: JUMPDEST 
0x820: STOP 
0x821: JUMPDEST 
0x822: V469 = CALLVALUE
0x823: V470 = ISZERO V469
0x824: V471 = 0x17f
0x827: THROWI V470
---
Entry stack: []
Stack pops: 0
Stack additions: [0x172]
Exit stack: []

================================

Block 0x828
[0x828:0x854]
---
Predecessors: [0x813]
Successors: [0x855]
---
0x828 PUSH1 0x0
0x82a DUP1
0x82b REVERT
0x82c JUMPDEST
0x82d PUSH2 0x187
0x830 PUSH2 0x657
0x833 JUMP
0x834 JUMPDEST
0x835 PUSH1 0x40
0x837 MLOAD
0x838 DUP1
0x839 DUP3
0x83a ISZERO
0x83b ISZERO
0x83c ISZERO
0x83d ISZERO
0x83e DUP2
0x83f MSTORE
0x840 PUSH1 0x20
0x842 ADD
0x843 SWAP2
0x844 POP
0x845 POP
0x846 PUSH1 0x40
0x848 MLOAD
0x849 DUP1
0x84a SWAP2
0x84b SUB
0x84c SWAP1
0x84d RETURN
0x84e JUMPDEST
0x84f CALLVALUE
0x850 ISZERO
0x851 PUSH2 0x1ac
0x854 JUMPI
---
0x828: V472 = 0x0
0x82b: REVERT 0x0 0x0
0x82c: JUMPDEST 
0x82d: V473 = 0x187
0x830: V474 = 0x657
0x833: THROW 
0x834: JUMPDEST 
0x835: V475 = 0x40
0x837: V476 = M[0x40]
0x83a: V477 = ISZERO S0
0x83b: V478 = ISZERO V477
0x83c: V479 = ISZERO V478
0x83d: V480 = ISZERO V479
0x83f: M[V476] = V480
0x840: V481 = 0x20
0x842: V482 = ADD 0x20 V476
0x846: V483 = 0x40
0x848: V484 = M[0x40]
0x84b: V485 = SUB V482 V484
0x84d: RETURN V484 V485
0x84e: JUMPDEST 
0x84f: V486 = CALLVALUE
0x850: V487 = ISZERO V486
0x851: V488 = 0x1ac
0x854: THROWI V487
---
Entry stack: []
Stack pops: 0
Stack additions: [0x187]
Exit stack: []

================================

Block 0x855
[0x855:0x869]
---
Predecessors: [0x828]
Successors: [0x86a]
---
0x855 PUSH1 0x0
0x857 DUP1
0x858 REVERT
0x859 JUMPDEST
0x85a PUSH2 0x1b4
0x85d PUSH2 0x66a
0x860 JUMP
0x861 JUMPDEST
0x862 STOP
0x863 JUMPDEST
0x864 CALLVALUE
0x865 ISZERO
0x866 PUSH2 0x1c1
0x869 JUMPI
---
0x855: V489 = 0x0
0x858: REVERT 0x0 0x0
0x859: JUMPDEST 
0x85a: V490 = 0x1b4
0x85d: V491 = 0x66a
0x860: THROW 
0x861: JUMPDEST 
0x862: STOP 
0x863: JUMPDEST 
0x864: V492 = CALLVALUE
0x865: V493 = ISZERO V492
0x866: V494 = 0x1c1
0x869: THROWI V493
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1b4]
Exit stack: []

================================

Block 0x86a
[0x86a:0x87e]
---
Predecessors: [0x855]
Successors: [0x87f]
---
0x86a PUSH1 0x0
0x86c DUP1
0x86d REVERT
0x86e JUMPDEST
0x86f PUSH2 0x1c9
0x872 PUSH2 0x846
0x875 JUMP
0x876 JUMPDEST
0x877 STOP
0x878 JUMPDEST
0x879 CALLVALUE
0x87a ISZERO
0x87b PUSH2 0x1d6
0x87e JUMPI
---
0x86a: V495 = 0x0
0x86d: REVERT 0x0 0x0
0x86e: JUMPDEST 
0x86f: V496 = 0x1c9
0x872: V497 = 0x846
0x875: THROW 
0x876: JUMPDEST 
0x877: STOP 
0x878: JUMPDEST 
0x879: V498 = CALLVALUE
0x87a: V499 = ISZERO V498
0x87b: V500 = 0x1d6
0x87e: THROWI V499
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1c9]
Exit stack: []

================================

Block 0x87f
[0x87f:0x8d3]
---
Predecessors: [0x86a]
Successors: [0x8d4]
---
0x87f PUSH1 0x0
0x881 DUP1
0x882 REVERT
0x883 JUMPDEST
0x884 PUSH2 0x1de
0x887 PUSH2 0x902
0x88a JUMP
0x88b JUMPDEST
0x88c PUSH1 0x40
0x88e MLOAD
0x88f DUP1
0x890 DUP3
0x891 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a6 AND
0x8a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bc AND
0x8bd DUP2
0x8be MSTORE
0x8bf PUSH1 0x20
0x8c1 ADD
0x8c2 SWAP2
0x8c3 POP
0x8c4 POP
0x8c5 PUSH1 0x40
0x8c7 MLOAD
0x8c8 DUP1
0x8c9 SWAP2
0x8ca SUB
0x8cb SWAP1
0x8cc RETURN
0x8cd JUMPDEST
0x8ce CALLVALUE
0x8cf ISZERO
0x8d0 PUSH2 0x22b
0x8d3 JUMPI
---
0x87f: V501 = 0x0
0x882: REVERT 0x0 0x0
0x883: JUMPDEST 
0x884: V502 = 0x1de
0x887: V503 = 0x902
0x88a: THROW 
0x88b: JUMPDEST 
0x88c: V504 = 0x40
0x88e: V505 = M[0x40]
0x891: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a6: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8a7: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bc: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x8be: M[V505] = V509
0x8bf: V510 = 0x20
0x8c1: V511 = ADD 0x20 V505
0x8c5: V512 = 0x40
0x8c7: V513 = M[0x40]
0x8ca: V514 = SUB V511 V513
0x8cc: RETURN V513 V514
0x8cd: JUMPDEST 
0x8ce: V515 = CALLVALUE
0x8cf: V516 = ISZERO V515
0x8d0: V517 = 0x22b
0x8d3: THROWI V516
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1de]
Exit stack: []

================================

Block 0x8d4
[0x8d4:0x94e]
---
Predecessors: [0x87f]
Successors: [0x2a6, 0x94f]
---
0x8d4 PUSH1 0x0
0x8d6 DUP1
0x8d7 REVERT
0x8d8 JUMPDEST
0x8d9 PUSH2 0x281
0x8dc PUSH1 0x4
0x8de DUP1
0x8df DUP1
0x8e0 CALLDATALOAD
0x8e1 SWAP1
0x8e2 PUSH1 0x20
0x8e4 ADD
0x8e5 SWAP1
0x8e6 DUP3
0x8e7 ADD
0x8e8 DUP1
0x8e9 CALLDATALOAD
0x8ea SWAP1
0x8eb PUSH1 0x20
0x8ed ADD
0x8ee SWAP1
0x8ef DUP1
0x8f0 DUP1
0x8f1 PUSH1 0x20
0x8f3 MUL
0x8f4 PUSH1 0x20
0x8f6 ADD
0x8f7 PUSH1 0x40
0x8f9 MLOAD
0x8fa SWAP1
0x8fb DUP2
0x8fc ADD
0x8fd PUSH1 0x40
0x8ff MSTORE
0x900 DUP1
0x901 SWAP4
0x902 SWAP3
0x903 SWAP2
0x904 SWAP1
0x905 DUP2
0x906 DUP2
0x907 MSTORE
0x908 PUSH1 0x20
0x90a ADD
0x90b DUP4
0x90c DUP4
0x90d PUSH1 0x20
0x90f MUL
0x910 DUP1
0x911 DUP3
0x912 DUP5
0x913 CALLDATACOPY
0x914 DUP3
0x915 ADD
0x916 SWAP2
0x917 POP
0x918 POP
0x919 POP
0x91a POP
0x91b POP
0x91c POP
0x91d SWAP2
0x91e SWAP1
0x91f DUP1
0x920 CALLDATALOAD
0x921 SWAP1
0x922 PUSH1 0x20
0x924 ADD
0x925 SWAP1
0x926 SWAP2
0x927 SWAP1
0x928 POP
0x929 POP
0x92a PUSH2 0x927
0x92d JUMP
0x92e JUMPDEST
0x92f PUSH1 0x40
0x931 MLOAD
0x932 DUP1
0x933 DUP3
0x934 ISZERO
0x935 ISZERO
0x936 ISZERO
0x937 ISZERO
0x938 DUP2
0x939 MSTORE
0x93a PUSH1 0x20
0x93c ADD
0x93d SWAP2
0x93e POP
0x93f POP
0x940 PUSH1 0x40
0x942 MLOAD
0x943 DUP1
0x944 SWAP2
0x945 SUB
0x946 SWAP1
0x947 RETURN
0x948 JUMPDEST
0x949 CALLVALUE
0x94a ISZERO
0x94b PUSH2 0x2a6
0x94e JUMPI
---
0x8d4: V518 = 0x0
0x8d7: REVERT 0x0 0x0
0x8d8: JUMPDEST 
0x8d9: V519 = 0x281
0x8dc: V520 = 0x4
0x8e0: V521 = CALLDATALOAD 0x4
0x8e2: V522 = 0x20
0x8e4: V523 = ADD 0x20 0x4
0x8e7: V524 = ADD 0x4 V521
0x8e9: V525 = CALLDATALOAD V524
0x8eb: V526 = 0x20
0x8ed: V527 = ADD 0x20 V524
0x8f1: V528 = 0x20
0x8f3: V529 = MUL 0x20 V525
0x8f4: V530 = 0x20
0x8f6: V531 = ADD 0x20 V529
0x8f7: V532 = 0x40
0x8f9: V533 = M[0x40]
0x8fc: V534 = ADD V533 V531
0x8fd: V535 = 0x40
0x8ff: M[0x40] = V534
0x907: M[V533] = V525
0x908: V536 = 0x20
0x90a: V537 = ADD 0x20 V533
0x90d: V538 = 0x20
0x90f: V539 = MUL 0x20 V525
0x913: CALLDATACOPY V537 V527 V539
0x915: V540 = ADD V537 V539
0x920: V541 = CALLDATALOAD 0x24
0x922: V542 = 0x20
0x924: V543 = ADD 0x20 0x24
0x92a: V544 = 0x927
0x92d: THROW 
0x92e: JUMPDEST 
0x92f: V545 = 0x40
0x931: V546 = M[0x40]
0x934: V547 = ISZERO S0
0x935: V548 = ISZERO V547
0x936: V549 = ISZERO V548
0x937: V550 = ISZERO V549
0x939: M[V546] = V550
0x93a: V551 = 0x20
0x93c: V552 = ADD 0x20 V546
0x940: V553 = 0x40
0x942: V554 = M[0x40]
0x945: V555 = SUB V552 V554
0x947: RETURN V554 V555
0x948: JUMPDEST 
0x949: V556 = CALLVALUE
0x94a: V557 = ISZERO V556
0x94b: V558 = 0x2a6
0x94e: JUMPI 0x2a6 V557
---
Entry stack: []
Stack pops: 0
Stack additions: [V541, V533, 0x281]
Exit stack: []

================================

Block 0x94f
[0x94f:0x9a3]
---
Predecessors: [0x8d4]
Successors: [0x9a4]
---
0x94f PUSH1 0x0
0x951 DUP1
0x952 REVERT
0x953 JUMPDEST
0x954 PUSH2 0x2ae
0x957 PUSH2 0xaf5
0x95a JUMP
0x95b JUMPDEST
0x95c PUSH1 0x40
0x95e MLOAD
0x95f DUP1
0x960 DUP3
0x961 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x976 AND
0x977 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98c AND
0x98d DUP2
0x98e MSTORE
0x98f PUSH1 0x20
0x991 ADD
0x992 SWAP2
0x993 POP
0x994 POP
0x995 PUSH1 0x40
0x997 MLOAD
0x998 DUP1
0x999 SWAP2
0x99a SUB
0x99b SWAP1
0x99c RETURN
0x99d JUMPDEST
0x99e CALLVALUE
0x99f ISZERO
0x9a0 PUSH2 0x2fb
0x9a3 JUMPI
---
0x94f: V559 = 0x0
0x952: REVERT 0x0 0x0
0x953: JUMPDEST 
0x954: V560 = 0x2ae
0x957: V561 = 0xaf5
0x95a: THROW 
0x95b: JUMPDEST 
0x95c: V562 = 0x40
0x95e: V563 = M[0x40]
0x961: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0x976: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x977: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x98c: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x98e: M[V563] = V567
0x98f: V568 = 0x20
0x991: V569 = ADD 0x20 V563
0x995: V570 = 0x40
0x997: V571 = M[0x40]
0x99a: V572 = SUB V569 V571
0x99c: RETURN V571 V572
0x99d: JUMPDEST 
0x99e: V573 = CALLVALUE
0x99f: V574 = ISZERO V573
0x9a0: V575 = 0x2fb
0x9a3: THROWI V574
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2ae]
Exit stack: []

================================

Block 0x9a4
[0x9a4:0x9f8]
---
Predecessors: [0x94f]
Successors: [0x9f9]
---
0x9a4 PUSH1 0x0
0x9a6 DUP1
0x9a7 REVERT
0x9a8 JUMPDEST
0x9a9 PUSH2 0x303
0x9ac PUSH2 0xb1f
0x9af JUMP
0x9b0 JUMPDEST
0x9b1 PUSH1 0x40
0x9b3 MLOAD
0x9b4 DUP1
0x9b5 DUP3
0x9b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9cb AND
0x9cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e1 AND
0x9e2 DUP2
0x9e3 MSTORE
0x9e4 PUSH1 0x20
0x9e6 ADD
0x9e7 SWAP2
0x9e8 POP
0x9e9 POP
0x9ea PUSH1 0x40
0x9ec MLOAD
0x9ed DUP1
0x9ee SWAP2
0x9ef SUB
0x9f0 SWAP1
0x9f1 RETURN
0x9f2 JUMPDEST
0x9f3 CALLVALUE
0x9f4 ISZERO
0x9f5 PUSH2 0x350
0x9f8 JUMPI
---
0x9a4: V576 = 0x0
0x9a7: REVERT 0x0 0x0
0x9a8: JUMPDEST 
0x9a9: V577 = 0x303
0x9ac: V578 = 0xb1f
0x9af: THROW 
0x9b0: JUMPDEST 
0x9b1: V579 = 0x40
0x9b3: V580 = M[0x40]
0x9b6: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x9cb: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x9cc: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e1: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x9e3: M[V580] = V584
0x9e4: V585 = 0x20
0x9e6: V586 = ADD 0x20 V580
0x9ea: V587 = 0x40
0x9ec: V588 = M[0x40]
0x9ef: V589 = SUB V586 V588
0x9f1: RETURN V588 V589
0x9f2: JUMPDEST 
0x9f3: V590 = CALLVALUE
0x9f4: V591 = ISZERO V590
0x9f5: V592 = 0x350
0x9f8: THROWI V591
---
Entry stack: []
Stack pops: 0
Stack additions: [0x303]
Exit stack: []

================================

Block 0x9f9
[0x9f9:0xa31]
---
Predecessors: [0x9a4]
Successors: [0xa32]
---
0x9f9 PUSH1 0x0
0x9fb DUP1
0x9fc REVERT
0x9fd JUMPDEST
0x9fe PUSH2 0x37c
0xa01 PUSH1 0x4
0xa03 DUP1
0xa04 DUP1
0xa05 CALLDATALOAD
0xa06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1b AND
0xa1c SWAP1
0xa1d PUSH1 0x20
0xa1f ADD
0xa20 SWAP1
0xa21 SWAP2
0xa22 SWAP1
0xa23 POP
0xa24 POP
0xa25 PUSH2 0xb45
0xa28 JUMP
0xa29 JUMPDEST
0xa2a STOP
0xa2b JUMPDEST
0xa2c CALLVALUE
0xa2d ISZERO
0xa2e PUSH2 0x389
0xa31 JUMPI
---
0x9f9: V593 = 0x0
0x9fc: REVERT 0x0 0x0
0x9fd: JUMPDEST 
0x9fe: V594 = 0x37c
0xa01: V595 = 0x4
0xa05: V596 = CALLDATALOAD 0x4
0xa06: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0xa1d: V599 = 0x20
0xa1f: V600 = ADD 0x20 0x4
0xa25: V601 = 0xb45
0xa28: THROW 
0xa29: JUMPDEST 
0xa2a: STOP 
0xa2b: JUMPDEST 
0xa2c: V602 = CALLVALUE
0xa2d: V603 = ISZERO V602
0xa2e: V604 = 0x389
0xa31: THROWI V603
---
Entry stack: []
Stack pops: 0
Stack additions: [V598, 0x37c]
Exit stack: []

================================

Block 0xa32
[0xa32:0xaac]
---
Predecessors: [0x9f9]
Successors: [0xaad]
---
0xa32 PUSH1 0x0
0xa34 DUP1
0xa35 REVERT
0xa36 JUMPDEST
0xa37 PUSH2 0x391
0xa3a PUSH2 0xc3d
0xa3d JUMP
0xa3e JUMPDEST
0xa3f PUSH1 0x40
0xa41 MLOAD
0xa42 DUP1
0xa43 DUP3
0xa44 DUP2
0xa45 MSTORE
0xa46 PUSH1 0x20
0xa48 ADD
0xa49 SWAP2
0xa4a POP
0xa4b POP
0xa4c PUSH1 0x40
0xa4e MLOAD
0xa4f DUP1
0xa50 SWAP2
0xa51 SUB
0xa52 SWAP1
0xa53 RETURN
0xa54 JUMPDEST
0xa55 PUSH1 0x0
0xa57 DUP1
0xa58 PUSH1 0x0
0xa5a SWAP1
0xa5b SLOAD
0xa5c SWAP1
0xa5d PUSH2 0x100
0xa60 EXP
0xa61 SWAP1
0xa62 DIV
0xa63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa78 AND
0xa79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8e AND
0xa8f CALLER
0xa90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa5 AND
0xaa6 EQ
0xaa7 ISZERO
0xaa8 ISZERO
0xaa9 PUSH2 0x401
0xaac JUMPI
---
0xa32: V605 = 0x0
0xa35: REVERT 0x0 0x0
0xa36: JUMPDEST 
0xa37: V606 = 0x391
0xa3a: V607 = 0xc3d
0xa3d: THROW 
0xa3e: JUMPDEST 
0xa3f: V608 = 0x40
0xa41: V609 = M[0x40]
0xa45: M[V609] = S0
0xa46: V610 = 0x20
0xa48: V611 = ADD 0x20 V609
0xa4c: V612 = 0x40
0xa4e: V613 = M[0x40]
0xa51: V614 = SUB V611 V613
0xa53: RETURN V613 V614
0xa54: JUMPDEST 
0xa55: V615 = 0x0
0xa58: V616 = 0x0
0xa5b: V617 = S[0x0]
0xa5d: V618 = 0x100
0xa60: V619 = EXP 0x100 0x0
0xa62: V620 = DIV V617 0x1
0xa63: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0xa78: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0xa79: V623 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8e: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0xa8f: V625 = CALLER
0xa90: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa5: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0xaa6: V628 = EQ V627 V624
0xaa7: V629 = ISZERO V628
0xaa8: V630 = ISZERO V629
0xaa9: V631 = 0x401
0xaac: THROWI V630
---
Entry stack: []
Stack pops: 0
Stack additions: [0x391, 0x0]
Exit stack: []

================================

Block 0xaad
[0xaad:0xac4]
---
Predecessors: [0xa32]
Successors: [0xac5]
---
0xaad INVALID
0xaae JUMPDEST
0xaaf PUSH1 0x1
0xab1 PUSH1 0x14
0xab3 SWAP1
0xab4 SLOAD
0xab5 SWAP1
0xab6 PUSH2 0x100
0xab9 EXP
0xaba SWAP1
0xabb DIV
0xabc PUSH1 0xff
0xabe AND
0xabf ISZERO
0xac0 ISZERO
0xac1 PUSH2 0x41c
0xac4 JUMPI
---
0xaad: INVALID 
0xaae: JUMPDEST 
0xaaf: V632 = 0x1
0xab1: V633 = 0x14
0xab4: V634 = S[0x1]
0xab6: V635 = 0x100
0xab9: V636 = EXP 0x100 0x14
0xabb: V637 = DIV V634 0x10000000000000000000000000000000000000000
0xabc: V638 = 0xff
0xabe: V639 = AND 0xff V637
0xabf: V640 = ISZERO V639
0xac0: V641 = ISZERO V640
0xac1: V642 = 0x41c
0xac4: THROWI V641
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xac5
[0xac5:0xb95]
---
Predecessors: [0xaad]
Successors: [0xb96]
---
0xac5 PUSH1 0x0
0xac7 DUP1
0xac8 REVERT
0xac9 JUMPDEST
0xaca DUP2
0xacb PUSH1 0x2
0xacd PUSH1 0x0
0xacf PUSH2 0x100
0xad2 EXP
0xad3 DUP2
0xad4 SLOAD
0xad5 DUP2
0xad6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaeb MUL
0xaec NOT
0xaed AND
0xaee SWAP1
0xaef DUP4
0xaf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb05 AND
0xb06 MUL
0xb07 OR
0xb08 SWAP1
0xb09 SSTORE
0xb0a POP
0xb0b PUSH1 0x1
0xb0d SWAP1
0xb0e POP
0xb0f SWAP2
0xb10 SWAP1
0xb11 POP
0xb12 JUMP
0xb13 JUMPDEST
0xb14 PUSH1 0x0
0xb16 PUSH1 0x2
0xb18 PUSH1 0x0
0xb1a SWAP1
0xb1b SLOAD
0xb1c SWAP1
0xb1d PUSH2 0x100
0xb20 EXP
0xb21 SWAP1
0xb22 DIV
0xb23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb38 AND
0xb39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4e AND
0xb4f PUSH4 0x313ce567
0xb54 PUSH1 0x40
0xb56 MLOAD
0xb57 DUP2
0xb58 PUSH4 0xffffffff
0xb5d AND
0xb5e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb7c MUL
0xb7d DUP2
0xb7e MSTORE
0xb7f PUSH1 0x4
0xb81 ADD
0xb82 PUSH1 0x20
0xb84 PUSH1 0x40
0xb86 MLOAD
0xb87 DUP1
0xb88 DUP4
0xb89 SUB
0xb8a DUP2
0xb8b PUSH1 0x0
0xb8d DUP8
0xb8e DUP1
0xb8f EXTCODESIZE
0xb90 ISZERO
0xb91 ISZERO
0xb92 PUSH2 0x4ed
0xb95 JUMPI
---
0xac5: V643 = 0x0
0xac8: REVERT 0x0 0x0
0xac9: JUMPDEST 
0xacb: V644 = 0x2
0xacd: V645 = 0x0
0xacf: V646 = 0x100
0xad2: V647 = EXP 0x100 0x0
0xad4: V648 = S[0x2]
0xad6: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0xaeb: V650 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xaec: V651 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V652 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V648
0xaf0: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xb05: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xb06: V655 = MUL V654 0x1
0xb07: V656 = OR V655 V652
0xb09: S[0x2] = V656
0xb0b: V657 = 0x1
0xb12: JUMP S2
0xb13: JUMPDEST 
0xb14: V658 = 0x0
0xb16: V659 = 0x2
0xb18: V660 = 0x0
0xb1b: V661 = S[0x2]
0xb1d: V662 = 0x100
0xb20: V663 = EXP 0x100 0x0
0xb22: V664 = DIV V661 0x1
0xb23: V665 = 0xffffffffffffffffffffffffffffffffffffffff
0xb38: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xb39: V667 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4e: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0xb4f: V669 = 0x313ce567
0xb54: V670 = 0x40
0xb56: V671 = M[0x40]
0xb58: V672 = 0xffffffff
0xb5d: V673 = AND 0xffffffff 0x313ce567
0xb5e: V674 = 0x100000000000000000000000000000000000000000000000000000000
0xb7c: V675 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x313ce567
0xb7e: M[V671] = 0x313ce56700000000000000000000000000000000000000000000000000000000
0xb7f: V676 = 0x4
0xb81: V677 = ADD 0x4 V671
0xb82: V678 = 0x20
0xb84: V679 = 0x40
0xb86: V680 = M[0x40]
0xb89: V681 = SUB V677 V680
0xb8b: V682 = 0x0
0xb8f: V683 = EXTCODESIZE V668
0xb90: V684 = ISZERO V683
0xb91: V685 = ISZERO V684
0xb92: V686 = 0x4ed
0xb95: THROWI V685
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1, V668, 0x0, V680, V681, V680, 0x20, V677, 0x313ce567, V668, 0x0]
Exit stack: []

================================

Block 0xb96
[0xb96:0xba2]
---
Predecessors: [0xac5]
Successors: [0xba3]
---
0xb96 PUSH1 0x0
0xb98 DUP1
0xb99 REVERT
0xb9a JUMPDEST
0xb9b GAS
0xb9c CALL
0xb9d ISZERO
0xb9e ISZERO
0xb9f PUSH2 0x4fa
0xba2 JUMPI
---
0xb96: V687 = 0x0
0xb99: REVERT 0x0 0x0
0xb9a: JUMPDEST 
0xb9b: V688 = GAS
0xb9c: V689 = CALL V688 S0 S1 S2 S3 S4 S5
0xb9d: V690 = ISZERO V689
0xb9e: V691 = ISZERO V690
0xb9f: V692 = 0x4fa
0xba2: THROWI V691
---
Entry stack: [0x0, V668, 0x313ce567, V677, 0x20, V680, V681, V680, 0x0, V668]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xba3
[0xba3:0xc0c]
---
Predecessors: [0xb96]
Successors: [0xc0d]
---
0xba3 PUSH1 0x0
0xba5 DUP1
0xba6 REVERT
0xba7 JUMPDEST
0xba8 POP
0xba9 POP
0xbaa POP
0xbab PUSH1 0x40
0xbad MLOAD
0xbae DUP1
0xbaf MLOAD
0xbb0 SWAP1
0xbb1 POP
0xbb2 SWAP1
0xbb3 POP
0xbb4 SWAP1
0xbb5 JUMP
0xbb6 JUMPDEST
0xbb7 PUSH1 0x0
0xbb9 DUP1
0xbba SWAP1
0xbbb SLOAD
0xbbc SWAP1
0xbbd PUSH2 0x100
0xbc0 EXP
0xbc1 SWAP1
0xbc2 DIV
0xbc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd8 AND
0xbd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbee AND
0xbef CALLER
0xbf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc05 AND
0xc06 EQ
0xc07 ISZERO
0xc08 ISZERO
0xc09 PUSH2 0x561
0xc0c JUMPI
---
0xba3: V693 = 0x0
0xba6: REVERT 0x0 0x0
0xba7: JUMPDEST 
0xbab: V694 = 0x40
0xbad: V695 = M[0x40]
0xbaf: V696 = M[V695]
0xbb5: JUMP S4
0xbb6: JUMPDEST 
0xbb7: V697 = 0x0
0xbbb: V698 = S[0x0]
0xbbd: V699 = 0x100
0xbc0: V700 = EXP 0x100 0x0
0xbc2: V701 = DIV V698 0x1
0xbc3: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd8: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0xbd9: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xbee: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xbef: V706 = CALLER
0xbf0: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xc05: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0xc06: V709 = EQ V708 V705
0xc07: V710 = ISZERO V709
0xc08: V711 = ISZERO V710
0xc09: V712 = 0x561
0xc0c: THROWI V711
---
Entry stack: []
Stack pops: 0
Stack additions: [V696]
Exit stack: []

================================

Block 0xc0d
[0xc0d:0xc24]
---
Predecessors: [0xba3]
Successors: [0xc25]
---
0xc0d INVALID
0xc0e JUMPDEST
0xc0f PUSH1 0x1
0xc11 PUSH1 0x14
0xc13 SWAP1
0xc14 SLOAD
0xc15 SWAP1
0xc16 PUSH2 0x100
0xc19 EXP
0xc1a SWAP1
0xc1b DIV
0xc1c PUSH1 0xff
0xc1e AND
0xc1f ISZERO
0xc20 ISZERO
0xc21 PUSH2 0x57c
0xc24 JUMPI
---
0xc0d: INVALID 
0xc0e: JUMPDEST 
0xc0f: V713 = 0x1
0xc11: V714 = 0x14
0xc14: V715 = S[0x1]
0xc16: V716 = 0x100
0xc19: V717 = EXP 0x100 0x14
0xc1b: V718 = DIV V715 0x10000000000000000000000000000000000000000
0xc1c: V719 = 0xff
0xc1e: V720 = AND 0xff V718
0xc1f: V721 = ISZERO V720
0xc20: V722 = ISZERO V721
0xc21: V723 = 0x57c
0xc24: THROWI V722
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc25
[0xc25:0xcc8]
---
Predecessors: [0xc0d]
Successors: [0xcc9]
---
0xc25 PUSH1 0x0
0xc27 DUP1
0xc28 REVERT
0xc29 JUMPDEST
0xc2a PUSH1 0x0
0xc2c PUSH1 0x1
0xc2e PUSH1 0x14
0xc30 PUSH2 0x100
0xc33 EXP
0xc34 DUP2
0xc35 SLOAD
0xc36 DUP2
0xc37 PUSH1 0xff
0xc39 MUL
0xc3a NOT
0xc3b AND
0xc3c SWAP1
0xc3d DUP4
0xc3e ISZERO
0xc3f ISZERO
0xc40 MUL
0xc41 OR
0xc42 SWAP1
0xc43 SSTORE
0xc44 POP
0xc45 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xc66 PUSH1 0x40
0xc68 MLOAD
0xc69 PUSH1 0x40
0xc6b MLOAD
0xc6c DUP1
0xc6d SWAP2
0xc6e SUB
0xc6f SWAP1
0xc70 LOG1
0xc71 JUMP
0xc72 JUMPDEST
0xc73 PUSH1 0x0
0xc75 DUP1
0xc76 SWAP1
0xc77 SLOAD
0xc78 SWAP1
0xc79 PUSH2 0x100
0xc7c EXP
0xc7d SWAP1
0xc7e DIV
0xc7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc94 AND
0xc95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcaa AND
0xcab CALLER
0xcac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc1 AND
0xcc2 EQ
0xcc3 ISZERO
0xcc4 ISZERO
0xcc5 PUSH2 0x61d
0xcc8 JUMPI
---
0xc25: V724 = 0x0
0xc28: REVERT 0x0 0x0
0xc29: JUMPDEST 
0xc2a: V725 = 0x0
0xc2c: V726 = 0x1
0xc2e: V727 = 0x14
0xc30: V728 = 0x100
0xc33: V729 = EXP 0x100 0x14
0xc35: V730 = S[0x1]
0xc37: V731 = 0xff
0xc39: V732 = MUL 0xff 0x10000000000000000000000000000000000000000
0xc3a: V733 = NOT 0xff0000000000000000000000000000000000000000
0xc3b: V734 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V730
0xc3e: V735 = ISZERO 0x0
0xc3f: V736 = ISZERO 0x1
0xc40: V737 = MUL 0x0 0x10000000000000000000000000000000000000000
0xc41: V738 = OR 0x0 V734
0xc43: S[0x1] = V738
0xc45: V739 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xc66: V740 = 0x40
0xc68: V741 = M[0x40]
0xc69: V742 = 0x40
0xc6b: V743 = M[0x40]
0xc6e: V744 = SUB V741 V743
0xc70: LOG V743 V744 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xc71: JUMP S0
0xc72: JUMPDEST 
0xc73: V745 = 0x0
0xc77: V746 = S[0x0]
0xc79: V747 = 0x100
0xc7c: V748 = EXP 0x100 0x0
0xc7e: V749 = DIV V746 0x1
0xc7f: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0xc94: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0xc95: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xcaa: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xcab: V754 = CALLER
0xcac: V755 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc1: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0xcc2: V757 = EQ V756 V753
0xcc3: V758 = ISZERO V757
0xcc4: V759 = ISZERO V758
0xcc5: V760 = 0x61d
0xcc8: THROWI V759
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcc9
[0xcc9:0xd6e]
---
Predecessors: [0xc25]
Successors: [0xd6f]
---
0xcc9 INVALID
0xcca JUMPDEST
0xccb PUSH1 0x0
0xccd DUP1
0xcce SWAP1
0xccf SLOAD
0xcd0 SWAP1
0xcd1 PUSH2 0x100
0xcd4 EXP
0xcd5 SWAP1
0xcd6 DIV
0xcd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcec AND
0xced PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd02 AND
0xd03 SELFDESTRUCT
0xd04 JUMPDEST
0xd05 PUSH1 0x1
0xd07 PUSH1 0x14
0xd09 SWAP1
0xd0a SLOAD
0xd0b SWAP1
0xd0c PUSH2 0x100
0xd0f EXP
0xd10 SWAP1
0xd11 DIV
0xd12 PUSH1 0xff
0xd14 AND
0xd15 DUP2
0xd16 JUMP
0xd17 JUMPDEST
0xd18 PUSH1 0x1
0xd1a PUSH1 0x0
0xd1c SWAP1
0xd1d SLOAD
0xd1e SWAP1
0xd1f PUSH2 0x100
0xd22 EXP
0xd23 SWAP1
0xd24 DIV
0xd25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3a AND
0xd3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd50 AND
0xd51 CALLER
0xd52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd67 AND
0xd68 EQ
0xd69 ISZERO
0xd6a ISZERO
0xd6b PUSH2 0x6c6
0xd6e JUMPI
---
0xcc9: INVALID 
0xcca: JUMPDEST 
0xccb: V761 = 0x0
0xccf: V762 = S[0x0]
0xcd1: V763 = 0x100
0xcd4: V764 = EXP 0x100 0x0
0xcd6: V765 = DIV V762 0x1
0xcd7: V766 = 0xffffffffffffffffffffffffffffffffffffffff
0xcec: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0xced: V768 = 0xffffffffffffffffffffffffffffffffffffffff
0xd02: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0xd03: SELFDESTRUCT V769
0xd04: JUMPDEST 
0xd05: V770 = 0x1
0xd07: V771 = 0x14
0xd0a: V772 = S[0x1]
0xd0c: V773 = 0x100
0xd0f: V774 = EXP 0x100 0x14
0xd11: V775 = DIV V772 0x10000000000000000000000000000000000000000
0xd12: V776 = 0xff
0xd14: V777 = AND 0xff V775
0xd16: JUMP S0
0xd17: JUMPDEST 
0xd18: V778 = 0x1
0xd1a: V779 = 0x0
0xd1d: V780 = S[0x1]
0xd1f: V781 = 0x100
0xd22: V782 = EXP 0x100 0x0
0xd24: V783 = DIV V780 0x1
0xd25: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3a: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0xd3b: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xd50: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0xd51: V788 = CALLER
0xd52: V789 = 0xffffffffffffffffffffffffffffffffffffffff
0xd67: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V788
0xd68: V791 = EQ V790 V787
0xd69: V792 = ISZERO V791
0xd6a: V793 = ISZERO V792
0xd6b: V794 = 0x6c6
0xd6e: THROWI V793
---
Entry stack: []
Stack pops: 0
Stack additions: [V777, S0]
Exit stack: []

================================

Block 0xd6f
[0xd6f:0xf49]
---
Predecessors: [0xcc9]
Successors: [0xf4a]
---
0xd6f PUSH1 0x0
0xd71 DUP1
0xd72 REVERT
0xd73 JUMPDEST
0xd74 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0xd95 PUSH1 0x0
0xd97 DUP1
0xd98 SWAP1
0xd99 SLOAD
0xd9a SWAP1
0xd9b PUSH2 0x100
0xd9e EXP
0xd9f SWAP1
0xda0 DIV
0xda1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb6 AND
0xdb7 PUSH1 0x1
0xdb9 PUSH1 0x0
0xdbb SWAP1
0xdbc SLOAD
0xdbd SWAP1
0xdbe PUSH2 0x100
0xdc1 EXP
0xdc2 SWAP1
0xdc3 DIV
0xdc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd9 AND
0xdda PUSH1 0x40
0xddc MLOAD
0xddd DUP1
0xdde DUP4
0xddf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf4 AND
0xdf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0a AND
0xe0b DUP2
0xe0c MSTORE
0xe0d PUSH1 0x20
0xe0f ADD
0xe10 DUP3
0xe11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe26 AND
0xe27 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3c AND
0xe3d DUP2
0xe3e MSTORE
0xe3f PUSH1 0x20
0xe41 ADD
0xe42 SWAP3
0xe43 POP
0xe44 POP
0xe45 POP
0xe46 PUSH1 0x40
0xe48 MLOAD
0xe49 DUP1
0xe4a SWAP2
0xe4b SUB
0xe4c SWAP1
0xe4d LOG1
0xe4e PUSH1 0x1
0xe50 PUSH1 0x0
0xe52 SWAP1
0xe53 SLOAD
0xe54 SWAP1
0xe55 PUSH2 0x100
0xe58 EXP
0xe59 SWAP1
0xe5a DIV
0xe5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe70 AND
0xe71 PUSH1 0x0
0xe73 DUP1
0xe74 PUSH2 0x100
0xe77 EXP
0xe78 DUP2
0xe79 SLOAD
0xe7a DUP2
0xe7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe90 MUL
0xe91 NOT
0xe92 AND
0xe93 SWAP1
0xe94 DUP4
0xe95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeaa AND
0xeab MUL
0xeac OR
0xead SWAP1
0xeae SSTORE
0xeaf POP
0xeb0 PUSH1 0x0
0xeb2 PUSH1 0x1
0xeb4 PUSH1 0x0
0xeb6 PUSH2 0x100
0xeb9 EXP
0xeba DUP2
0xebb SLOAD
0xebc DUP2
0xebd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed2 MUL
0xed3 NOT
0xed4 AND
0xed5 SWAP1
0xed6 DUP4
0xed7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeec AND
0xeed MUL
0xeee OR
0xeef SWAP1
0xef0 SSTORE
0xef1 POP
0xef2 JUMP
0xef3 JUMPDEST
0xef4 PUSH1 0x0
0xef6 DUP1
0xef7 SWAP1
0xef8 SLOAD
0xef9 SWAP1
0xefa PUSH2 0x100
0xefd EXP
0xefe SWAP1
0xeff DIV
0xf00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf15 AND
0xf16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2b AND
0xf2c CALLER
0xf2d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf42 AND
0xf43 EQ
0xf44 ISZERO
0xf45 ISZERO
0xf46 PUSH2 0x89e
0xf49 JUMPI
---
0xd6f: V795 = 0x0
0xd72: REVERT 0x0 0x0
0xd73: JUMPDEST 
0xd74: V796 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0xd95: V797 = 0x0
0xd99: V798 = S[0x0]
0xd9b: V799 = 0x100
0xd9e: V800 = EXP 0x100 0x0
0xda0: V801 = DIV V798 0x1
0xda1: V802 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb6: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0xdb7: V804 = 0x1
0xdb9: V805 = 0x0
0xdbc: V806 = S[0x1]
0xdbe: V807 = 0x100
0xdc1: V808 = EXP 0x100 0x0
0xdc3: V809 = DIV V806 0x1
0xdc4: V810 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd9: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V809
0xdda: V812 = 0x40
0xddc: V813 = M[0x40]
0xddf: V814 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf4: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0xdf5: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0a: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V815
0xe0c: M[V813] = V817
0xe0d: V818 = 0x20
0xe0f: V819 = ADD 0x20 V813
0xe11: V820 = 0xffffffffffffffffffffffffffffffffffffffff
0xe26: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff V811
0xe27: V822 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3c: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0xe3e: M[V819] = V823
0xe3f: V824 = 0x20
0xe41: V825 = ADD 0x20 V819
0xe46: V826 = 0x40
0xe48: V827 = M[0x40]
0xe4b: V828 = SUB V825 V827
0xe4d: LOG V827 V828 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0xe4e: V829 = 0x1
0xe50: V830 = 0x0
0xe53: V831 = S[0x1]
0xe55: V832 = 0x100
0xe58: V833 = EXP 0x100 0x0
0xe5a: V834 = DIV V831 0x1
0xe5b: V835 = 0xffffffffffffffffffffffffffffffffffffffff
0xe70: V836 = AND 0xffffffffffffffffffffffffffffffffffffffff V834
0xe71: V837 = 0x0
0xe74: V838 = 0x100
0xe77: V839 = EXP 0x100 0x0
0xe79: V840 = S[0x0]
0xe7b: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xe90: V842 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xe91: V843 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe92: V844 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V840
0xe95: V845 = 0xffffffffffffffffffffffffffffffffffffffff
0xeaa: V846 = AND 0xffffffffffffffffffffffffffffffffffffffff V836
0xeab: V847 = MUL V846 0x1
0xeac: V848 = OR V847 V844
0xeae: S[0x0] = V848
0xeb0: V849 = 0x0
0xeb2: V850 = 0x1
0xeb4: V851 = 0x0
0xeb6: V852 = 0x100
0xeb9: V853 = EXP 0x100 0x0
0xebb: V854 = S[0x1]
0xebd: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xed2: V856 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xed3: V857 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xed4: V858 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V854
0xed7: V859 = 0xffffffffffffffffffffffffffffffffffffffff
0xeec: V860 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xeed: V861 = MUL 0x0 0x1
0xeee: V862 = OR 0x0 V858
0xef0: S[0x1] = V862
0xef2: JUMP S0
0xef3: JUMPDEST 
0xef4: V863 = 0x0
0xef8: V864 = S[0x0]
0xefa: V865 = 0x100
0xefd: V866 = EXP 0x100 0x0
0xeff: V867 = DIV V864 0x1
0xf00: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0xf15: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V867
0xf16: V870 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2b: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0xf2c: V872 = CALLER
0xf2d: V873 = 0xffffffffffffffffffffffffffffffffffffffff
0xf42: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff V872
0xf43: V875 = EQ V874 V871
0xf44: V876 = ISZERO V875
0xf45: V877 = ISZERO V876
0xf46: V878 = 0x89e
0xf49: THROWI V877
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf4a
[0xf4a:0xf62]
---
Predecessors: [0xd6f]
Successors: [0xf63]
---
0xf4a INVALID
0xf4b JUMPDEST
0xf4c PUSH1 0x1
0xf4e PUSH1 0x14
0xf50 SWAP1
0xf51 SLOAD
0xf52 SWAP1
0xf53 PUSH2 0x100
0xf56 EXP
0xf57 SWAP1
0xf58 DIV
0xf59 PUSH1 0xff
0xf5b AND
0xf5c ISZERO
0xf5d ISZERO
0xf5e ISZERO
0xf5f PUSH2 0x8ba
0xf62 JUMPI
---
0xf4a: INVALID 
0xf4b: JUMPDEST 
0xf4c: V879 = 0x1
0xf4e: V880 = 0x14
0xf51: V881 = S[0x1]
0xf53: V882 = 0x100
0xf56: V883 = EXP 0x100 0x14
0xf58: V884 = DIV V881 0x10000000000000000000000000000000000000000
0xf59: V885 = 0xff
0xf5b: V886 = AND 0xff V884
0xf5c: V887 = ISZERO V886
0xf5d: V888 = ISZERO V887
0xf5e: V889 = ISZERO V888
0xf5f: V890 = 0x8ba
0xf62: THROWI V889
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf63
[0xf63:0x102d]
---
Predecessors: [0xf4a]
Successors: [0x102e]
---
0xf63 PUSH1 0x0
0xf65 DUP1
0xf66 REVERT
0xf67 JUMPDEST
0xf68 PUSH1 0x1
0xf6a DUP1
0xf6b PUSH1 0x14
0xf6d PUSH2 0x100
0xf70 EXP
0xf71 DUP2
0xf72 SLOAD
0xf73 DUP2
0xf74 PUSH1 0xff
0xf76 MUL
0xf77 NOT
0xf78 AND
0xf79 SWAP1
0xf7a DUP4
0xf7b ISZERO
0xf7c ISZERO
0xf7d MUL
0xf7e OR
0xf7f SWAP1
0xf80 SSTORE
0xf81 POP
0xf82 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xfa3 PUSH1 0x40
0xfa5 MLOAD
0xfa6 PUSH1 0x40
0xfa8 MLOAD
0xfa9 DUP1
0xfaa SWAP2
0xfab SUB
0xfac SWAP1
0xfad LOG1
0xfae JUMP
0xfaf JUMPDEST
0xfb0 PUSH1 0x0
0xfb2 DUP1
0xfb3 SWAP1
0xfb4 SLOAD
0xfb5 SWAP1
0xfb6 PUSH2 0x100
0xfb9 EXP
0xfba SWAP1
0xfbb DIV
0xfbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd1 AND
0xfd2 DUP2
0xfd3 JUMP
0xfd4 JUMPDEST
0xfd5 PUSH1 0x0
0xfd7 DUP1
0xfd8 PUSH1 0x0
0xfda DUP1
0xfdb SWAP1
0xfdc SLOAD
0xfdd SWAP1
0xfde PUSH2 0x100
0xfe1 EXP
0xfe2 SWAP1
0xfe3 DIV
0xfe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff9 AND
0xffa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100f AND
0x1010 CALLER
0x1011 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1026 AND
0x1027 EQ
0x1028 ISZERO
0x1029 ISZERO
0x102a PUSH2 0x982
0x102d JUMPI
---
0xf63: V891 = 0x0
0xf66: REVERT 0x0 0x0
0xf67: JUMPDEST 
0xf68: V892 = 0x1
0xf6b: V893 = 0x14
0xf6d: V894 = 0x100
0xf70: V895 = EXP 0x100 0x14
0xf72: V896 = S[0x1]
0xf74: V897 = 0xff
0xf76: V898 = MUL 0xff 0x10000000000000000000000000000000000000000
0xf77: V899 = NOT 0xff0000000000000000000000000000000000000000
0xf78: V900 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V896
0xf7b: V901 = ISZERO 0x1
0xf7c: V902 = ISZERO 0x0
0xf7d: V903 = MUL 0x1 0x10000000000000000000000000000000000000000
0xf7e: V904 = OR 0x10000000000000000000000000000000000000000 V900
0xf80: S[0x1] = V904
0xf82: V905 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xfa3: V906 = 0x40
0xfa5: V907 = M[0x40]
0xfa6: V908 = 0x40
0xfa8: V909 = M[0x40]
0xfab: V910 = SUB V907 V909
0xfad: LOG V909 V910 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xfae: JUMP S0
0xfaf: JUMPDEST 
0xfb0: V911 = 0x0
0xfb4: V912 = S[0x0]
0xfb6: V913 = 0x100
0xfb9: V914 = EXP 0x100 0x0
0xfbb: V915 = DIV V912 0x1
0xfbc: V916 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd1: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V915
0xfd3: JUMP S0
0xfd4: JUMPDEST 
0xfd5: V918 = 0x0
0xfd8: V919 = 0x0
0xfdc: V920 = S[0x0]
0xfde: V921 = 0x100
0xfe1: V922 = EXP 0x100 0x0
0xfe3: V923 = DIV V920 0x1
0xfe4: V924 = 0xffffffffffffffffffffffffffffffffffffffff
0xff9: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0xffa: V926 = 0xffffffffffffffffffffffffffffffffffffffff
0x100f: V927 = AND 0xffffffffffffffffffffffffffffffffffffffff V925
0x1010: V928 = CALLER
0x1011: V929 = 0xffffffffffffffffffffffffffffffffffffffff
0x1026: V930 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0x1027: V931 = EQ V930 V927
0x1028: V932 = ISZERO V931
0x1029: V933 = ISZERO V932
0x102a: V934 = 0x982
0x102d: THROWI V933
---
Entry stack: []
Stack pops: 0
Stack additions: [V917, S0, 0x0, 0x0]
Exit stack: []

================================

Block 0x102e
[0x102e:0x1046]
---
Predecessors: [0xf63]
Successors: [0x1047]
---
0x102e INVALID
0x102f JUMPDEST
0x1030 PUSH1 0x1
0x1032 PUSH1 0x14
0x1034 SWAP1
0x1035 SLOAD
0x1036 SWAP1
0x1037 PUSH2 0x100
0x103a EXP
0x103b SWAP1
0x103c DIV
0x103d PUSH1 0xff
0x103f AND
0x1040 ISZERO
0x1041 ISZERO
0x1042 ISZERO
0x1043 PUSH2 0x99e
0x1046 JUMPI
---
0x102e: INVALID 
0x102f: JUMPDEST 
0x1030: V935 = 0x1
0x1032: V936 = 0x14
0x1035: V937 = S[0x1]
0x1037: V938 = 0x100
0x103a: V939 = EXP 0x100 0x14
0x103c: V940 = DIV V937 0x10000000000000000000000000000000000000000
0x103d: V941 = 0xff
0x103f: V942 = AND 0xff V940
0x1040: V943 = ISZERO V942
0x1041: V944 = ISZERO V943
0x1042: V945 = ISZERO V944
0x1043: V946 = 0x99e
0x1046: THROWI V945
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1047
[0x1047:0x104f]
---
Predecessors: [0x102e]
Successors: [0x1050]
---
0x1047 PUSH1 0x0
0x1049 DUP1
0x104a REVERT
0x104b JUMPDEST
0x104c PUSH1 0x0
0x104e SWAP1
0x104f POP
---
0x1047: V947 = 0x0
0x104a: REVERT 0x0 0x0
0x104b: JUMPDEST 
0x104c: V948 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x1050
[0x1050:0x1059]
---
Predecessors: [0x1047]
Successors: [0x105a]
---
0x1050 JUMPDEST
0x1051 DUP4
0x1052 MLOAD
0x1053 DUP2
0x1054 LT
0x1055 ISZERO
0x1056 PUSH2 0xaea
0x1059 JUMPI
---
0x1050: JUMPDEST 
0x1052: V949 = M[S3]
0x1054: V950 = LT 0x0 V949
0x1055: V951 = ISZERO V950
0x1056: V952 = 0xaea
0x1059: THROWI V951
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S2, S1, S0, 0x0]

================================

Block 0x105a
[0x105a:0x10a4]
---
Predecessors: [0x1050]
Successors: [0x10a5]
---
0x105a PUSH1 0x2
0x105c PUSH1 0x0
0x105e SWAP1
0x105f SLOAD
0x1060 SWAP1
0x1061 PUSH2 0x100
0x1064 EXP
0x1065 SWAP1
0x1066 DIV
0x1067 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107c AND
0x107d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1092 AND
0x1093 PUSH4 0x23b872dd
0x1098 CALLER
0x1099 DUP7
0x109a DUP5
0x109b DUP2
0x109c MLOAD
0x109d DUP2
0x109e LT
0x109f ISZERO
0x10a0 ISZERO
0x10a1 PUSH2 0x9f9
0x10a4 JUMPI
---
0x105a: V953 = 0x2
0x105c: V954 = 0x0
0x105f: V955 = S[0x2]
0x1061: V956 = 0x100
0x1064: V957 = EXP 0x100 0x0
0x1066: V958 = DIV V955 0x1
0x1067: V959 = 0xffffffffffffffffffffffffffffffffffffffff
0x107c: V960 = AND 0xffffffffffffffffffffffffffffffffffffffff V958
0x107d: V961 = 0xffffffffffffffffffffffffffffffffffffffff
0x1092: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff V960
0x1093: V963 = 0x23b872dd
0x1098: V964 = CALLER
0x109c: V965 = M[S3]
0x109e: V966 = LT 0x0 V965
0x109f: V967 = ISZERO V966
0x10a0: V968 = ISZERO V967
0x10a1: V969 = 0x9f9
0x10a4: THROWI V968
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V962, 0x23b872dd, V964, S3, S0]
Exit stack: [S3, S2, S1, 0x0, V962, 0x23b872dd, V964, S3, 0x0]

================================

Block 0x10a5
[0x10a5:0x1163]
---
Predecessors: [0x105a]
Successors: [0x1164]
---
0x10a5 INVALID
0x10a6 JUMPDEST
0x10a7 SWAP1
0x10a8 PUSH1 0x20
0x10aa ADD
0x10ab SWAP1
0x10ac PUSH1 0x20
0x10ae MUL
0x10af ADD
0x10b0 MLOAD
0x10b1 DUP7
0x10b2 PUSH1 0x40
0x10b4 MLOAD
0x10b5 DUP5
0x10b6 PUSH4 0xffffffff
0x10bb AND
0x10bc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10da MUL
0x10db DUP2
0x10dc MSTORE
0x10dd PUSH1 0x4
0x10df ADD
0x10e0 DUP1
0x10e1 DUP5
0x10e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f7 AND
0x10f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110d AND
0x110e DUP2
0x110f MSTORE
0x1110 PUSH1 0x20
0x1112 ADD
0x1113 DUP4
0x1114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1129 AND
0x112a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113f AND
0x1140 DUP2
0x1141 MSTORE
0x1142 PUSH1 0x20
0x1144 ADD
0x1145 DUP3
0x1146 DUP2
0x1147 MSTORE
0x1148 PUSH1 0x20
0x114a ADD
0x114b SWAP4
0x114c POP
0x114d POP
0x114e POP
0x114f POP
0x1150 PUSH1 0x20
0x1152 PUSH1 0x40
0x1154 MLOAD
0x1155 DUP1
0x1156 DUP4
0x1157 SUB
0x1158 DUP2
0x1159 PUSH1 0x0
0x115b DUP8
0x115c DUP1
0x115d EXTCODESIZE
0x115e ISZERO
0x115f ISZERO
0x1160 PUSH2 0xabb
0x1163 JUMPI
---
0x10a5: INVALID 
0x10a6: JUMPDEST 
0x10a8: V970 = 0x20
0x10aa: V971 = ADD 0x20 S1
0x10ac: V972 = 0x20
0x10ae: V973 = MUL 0x20 S0
0x10af: V974 = ADD V973 V971
0x10b0: V975 = M[V974]
0x10b2: V976 = 0x40
0x10b4: V977 = M[0x40]
0x10b6: V978 = 0xffffffff
0x10bb: V979 = AND 0xffffffff S3
0x10bc: V980 = 0x100000000000000000000000000000000000000000000000000000000
0x10da: V981 = MUL 0x100000000000000000000000000000000000000000000000000000000 V979
0x10dc: M[V977] = V981
0x10dd: V982 = 0x4
0x10df: V983 = ADD 0x4 V977
0x10e2: V984 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f7: V985 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x10f8: V986 = 0xffffffffffffffffffffffffffffffffffffffff
0x110d: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff V985
0x110f: M[V983] = V987
0x1110: V988 = 0x20
0x1112: V989 = ADD 0x20 V983
0x1114: V990 = 0xffffffffffffffffffffffffffffffffffffffff
0x1129: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V975
0x112a: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0x113f: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0x1141: M[V989] = V993
0x1142: V994 = 0x20
0x1144: V995 = ADD 0x20 V989
0x1147: M[V995] = S7
0x1148: V996 = 0x20
0x114a: V997 = ADD 0x20 V995
0x1150: V998 = 0x20
0x1152: V999 = 0x40
0x1154: V1000 = M[0x40]
0x1157: V1001 = SUB V997 V1000
0x1159: V1002 = 0x0
0x115d: V1003 = EXTCODESIZE S4
0x115e: V1004 = ISZERO V1003
0x115f: V1005 = ISZERO V1004
0x1160: V1006 = 0xabb
0x1163: THROWI V1005
---
Entry stack: [S8, S7, S6, 0x0, V962, 0x23b872dd, V964, S1, 0x0]
Stack pops: 0
Stack additions: [S4, 0x0, V1000, V1001, V1000, 0x20, V997, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x1164
[0x1164:0x1170]
---
Predecessors: [0x10a5]
Successors: [0x1171]
---
0x1164 PUSH1 0x0
0x1166 DUP1
0x1167 REVERT
0x1168 JUMPDEST
0x1169 GAS
0x116a CALL
0x116b ISZERO
0x116c ISZERO
0x116d PUSH2 0xac8
0x1170 JUMPI
---
0x1164: V1007 = 0x0
0x1167: REVERT 0x0 0x0
0x1168: JUMPDEST 
0x1169: V1008 = GAS
0x116a: V1009 = CALL V1008 S0 S1 S2 S3 S4 S5
0x116b: V1010 = ISZERO V1009
0x116c: V1011 = ISZERO V1010
0x116d: V1012 = 0xac8
0x1170: THROWI V1011
---
Entry stack: [S11, S10, S9, S8, S7, V997, 0x20, V1000, V1001, V1000, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1171
[0x1171:0x1185]
---
Predecessors: [0x1164]
Successors: [0x1186]
---
0x1171 PUSH1 0x0
0x1173 DUP1
0x1174 REVERT
0x1175 JUMPDEST
0x1176 POP
0x1177 POP
0x1178 POP
0x1179 PUSH1 0x40
0x117b MLOAD
0x117c DUP1
0x117d MLOAD
0x117e SWAP1
0x117f POP
0x1180 ISZERO
0x1181 ISZERO
0x1182 PUSH2 0xadd
0x1185 JUMPI
---
0x1171: V1013 = 0x0
0x1174: REVERT 0x0 0x0
0x1175: JUMPDEST 
0x1179: V1014 = 0x40
0x117b: V1015 = M[0x40]
0x117d: V1016 = M[V1015]
0x1180: V1017 = ISZERO V1016
0x1181: V1018 = ISZERO V1017
0x1182: V1019 = 0xadd
0x1185: THROWI V1018
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1186
[0x1186:0x1248]
---
Predecessors: [0x1171]
Successors: [0x1249]
---
0x1186 PUSH1 0x0
0x1188 DUP1
0x1189 REVERT
0x118a JUMPDEST
0x118b DUP1
0x118c DUP1
0x118d PUSH1 0x1
0x118f ADD
0x1190 SWAP2
0x1191 POP
0x1192 POP
0x1193 PUSH2 0x9a3
0x1196 JUMP
0x1197 JUMPDEST
0x1198 PUSH1 0x1
0x119a SWAP2
0x119b POP
0x119c POP
0x119d SWAP3
0x119e SWAP2
0x119f POP
0x11a0 POP
0x11a1 JUMP
0x11a2 JUMPDEST
0x11a3 PUSH1 0x0
0x11a5 PUSH1 0x2
0x11a7 PUSH1 0x0
0x11a9 SWAP1
0x11aa SLOAD
0x11ab SWAP1
0x11ac PUSH2 0x100
0x11af EXP
0x11b0 SWAP1
0x11b1 DIV
0x11b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11c7 AND
0x11c8 SWAP1
0x11c9 POP
0x11ca SWAP1
0x11cb JUMP
0x11cc JUMPDEST
0x11cd PUSH1 0x1
0x11cf PUSH1 0x0
0x11d1 SWAP1
0x11d2 SLOAD
0x11d3 SWAP1
0x11d4 PUSH2 0x100
0x11d7 EXP
0x11d8 SWAP1
0x11d9 DIV
0x11da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ef AND
0x11f0 DUP2
0x11f1 JUMP
0x11f2 JUMPDEST
0x11f3 PUSH1 0x0
0x11f5 DUP1
0x11f6 SWAP1
0x11f7 SLOAD
0x11f8 SWAP1
0x11f9 PUSH2 0x100
0x11fc EXP
0x11fd SWAP1
0x11fe DIV
0x11ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1214 AND
0x1215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122a AND
0x122b CALLER
0x122c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1241 AND
0x1242 EQ
0x1243 ISZERO
0x1244 ISZERO
0x1245 PUSH2 0xb9d
0x1248 JUMPI
---
0x1186: V1020 = 0x0
0x1189: REVERT 0x0 0x0
0x118a: JUMPDEST 
0x118d: V1021 = 0x1
0x118f: V1022 = ADD 0x1 S0
0x1193: V1023 = 0x9a3
0x1196: THROW 
0x1197: JUMPDEST 
0x1198: V1024 = 0x1
0x11a1: JUMP S4
0x11a2: JUMPDEST 
0x11a3: V1025 = 0x0
0x11a5: V1026 = 0x2
0x11a7: V1027 = 0x0
0x11aa: V1028 = S[0x2]
0x11ac: V1029 = 0x100
0x11af: V1030 = EXP 0x100 0x0
0x11b1: V1031 = DIV V1028 0x1
0x11b2: V1032 = 0xffffffffffffffffffffffffffffffffffffffff
0x11c7: V1033 = AND 0xffffffffffffffffffffffffffffffffffffffff V1031
0x11cb: JUMP S0
0x11cc: JUMPDEST 
0x11cd: V1034 = 0x1
0x11cf: V1035 = 0x0
0x11d2: V1036 = S[0x1]
0x11d4: V1037 = 0x100
0x11d7: V1038 = EXP 0x100 0x0
0x11d9: V1039 = DIV V1036 0x1
0x11da: V1040 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ef: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V1039
0x11f1: JUMP S0
0x11f2: JUMPDEST 
0x11f3: V1042 = 0x0
0x11f7: V1043 = S[0x0]
0x11f9: V1044 = 0x100
0x11fc: V1045 = EXP 0x100 0x0
0x11fe: V1046 = DIV V1043 0x1
0x11ff: V1047 = 0xffffffffffffffffffffffffffffffffffffffff
0x1214: V1048 = AND 0xffffffffffffffffffffffffffffffffffffffff V1046
0x1215: V1049 = 0xffffffffffffffffffffffffffffffffffffffff
0x122a: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V1048
0x122b: V1051 = CALLER
0x122c: V1052 = 0xffffffffffffffffffffffffffffffffffffffff
0x1241: V1053 = AND 0xffffffffffffffffffffffffffffffffffffffff V1051
0x1242: V1054 = EQ V1053 V1050
0x1243: V1055 = ISZERO V1054
0x1244: V1056 = ISZERO V1055
0x1245: V1057 = 0xb9d
0x1248: THROWI V1056
---
Entry stack: []
Stack pops: 0
Stack additions: [V1022, 0x1, V1033, V1041, S0]
Exit stack: []

================================

Block 0x1249
[0x1249:0x12a1]
---
Predecessors: [0x1186]
Successors: [0x12a2]
---
0x1249 INVALID
0x124a JUMPDEST
0x124b PUSH1 0x0
0x124d DUP1
0x124e SWAP1
0x124f SLOAD
0x1250 SWAP1
0x1251 PUSH2 0x100
0x1254 EXP
0x1255 SWAP1
0x1256 DIV
0x1257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126c AND
0x126d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1282 AND
0x1283 DUP2
0x1284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1299 AND
0x129a EQ
0x129b ISZERO
0x129c ISZERO
0x129d ISZERO
0x129e PUSH2 0xbf9
0x12a1 JUMPI
---
0x1249: INVALID 
0x124a: JUMPDEST 
0x124b: V1058 = 0x0
0x124f: V1059 = S[0x0]
0x1251: V1060 = 0x100
0x1254: V1061 = EXP 0x100 0x0
0x1256: V1062 = DIV V1059 0x1
0x1257: V1063 = 0xffffffffffffffffffffffffffffffffffffffff
0x126c: V1064 = AND 0xffffffffffffffffffffffffffffffffffffffff V1062
0x126d: V1065 = 0xffffffffffffffffffffffffffffffffffffffff
0x1282: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffff V1064
0x1284: V1067 = 0xffffffffffffffffffffffffffffffffffffffff
0x1299: V1068 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x129a: V1069 = EQ V1068 V1066
0x129b: V1070 = ISZERO V1069
0x129c: V1071 = ISZERO V1070
0x129d: V1072 = ISZERO V1071
0x129e: V1073 = 0xbf9
0x12a1: THROWI V1072
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x12a2
[0x12a2:0x136c]
---
Predecessors: [0x1249]
Successors: [0x136d]
---
0x12a2 PUSH1 0x0
0x12a4 DUP1
0x12a5 REVERT
0x12a6 JUMPDEST
0x12a7 DUP1
0x12a8 PUSH1 0x1
0x12aa PUSH1 0x0
0x12ac PUSH2 0x100
0x12af EXP
0x12b0 DUP2
0x12b1 SLOAD
0x12b2 DUP2
0x12b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c8 MUL
0x12c9 NOT
0x12ca AND
0x12cb SWAP1
0x12cc DUP4
0x12cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e2 AND
0x12e3 MUL
0x12e4 OR
0x12e5 SWAP1
0x12e6 SSTORE
0x12e7 POP
0x12e8 POP
0x12e9 JUMP
0x12ea JUMPDEST
0x12eb PUSH1 0x0
0x12ed PUSH1 0x2
0x12ef PUSH1 0x0
0x12f1 SWAP1
0x12f2 SLOAD
0x12f3 SWAP1
0x12f4 PUSH2 0x100
0x12f7 EXP
0x12f8 SWAP1
0x12f9 DIV
0x12fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130f AND
0x1310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1325 AND
0x1326 PUSH4 0x18160ddd
0x132b PUSH1 0x40
0x132d MLOAD
0x132e DUP2
0x132f PUSH4 0xffffffff
0x1334 AND
0x1335 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1353 MUL
0x1354 DUP2
0x1355 MSTORE
0x1356 PUSH1 0x4
0x1358 ADD
0x1359 PUSH1 0x20
0x135b PUSH1 0x40
0x135d MLOAD
0x135e DUP1
0x135f DUP4
0x1360 SUB
0x1361 DUP2
0x1362 PUSH1 0x0
0x1364 DUP8
0x1365 DUP1
0x1366 EXTCODESIZE
0x1367 ISZERO
0x1368 ISZERO
0x1369 PUSH2 0xcc4
0x136c JUMPI
---
0x12a2: V1074 = 0x0
0x12a5: REVERT 0x0 0x0
0x12a6: JUMPDEST 
0x12a8: V1075 = 0x1
0x12aa: V1076 = 0x0
0x12ac: V1077 = 0x100
0x12af: V1078 = EXP 0x100 0x0
0x12b1: V1079 = S[0x1]
0x12b3: V1080 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c8: V1081 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x12c9: V1082 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x12ca: V1083 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1079
0x12cd: V1084 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e2: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12e3: V1086 = MUL V1085 0x1
0x12e4: V1087 = OR V1086 V1083
0x12e6: S[0x1] = V1087
0x12e9: JUMP S1
0x12ea: JUMPDEST 
0x12eb: V1088 = 0x0
0x12ed: V1089 = 0x2
0x12ef: V1090 = 0x0
0x12f2: V1091 = S[0x2]
0x12f4: V1092 = 0x100
0x12f7: V1093 = EXP 0x100 0x0
0x12f9: V1094 = DIV V1091 0x1
0x12fa: V1095 = 0xffffffffffffffffffffffffffffffffffffffff
0x130f: V1096 = AND 0xffffffffffffffffffffffffffffffffffffffff V1094
0x1310: V1097 = 0xffffffffffffffffffffffffffffffffffffffff
0x1325: V1098 = AND 0xffffffffffffffffffffffffffffffffffffffff V1096
0x1326: V1099 = 0x18160ddd
0x132b: V1100 = 0x40
0x132d: V1101 = M[0x40]
0x132f: V1102 = 0xffffffff
0x1334: V1103 = AND 0xffffffff 0x18160ddd
0x1335: V1104 = 0x100000000000000000000000000000000000000000000000000000000
0x1353: V1105 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x1355: M[V1101] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x1356: V1106 = 0x4
0x1358: V1107 = ADD 0x4 V1101
0x1359: V1108 = 0x20
0x135b: V1109 = 0x40
0x135d: V1110 = M[0x40]
0x1360: V1111 = SUB V1107 V1110
0x1362: V1112 = 0x0
0x1366: V1113 = EXTCODESIZE V1098
0x1367: V1114 = ISZERO V1113
0x1368: V1115 = ISZERO V1114
0x1369: V1116 = 0xcc4
0x136c: THROWI V1115
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V1098, 0x0, V1110, V1111, V1110, 0x20, V1107, 0x18160ddd, V1098, 0x0]
Exit stack: []

================================

Block 0x136d
[0x136d:0x1379]
---
Predecessors: [0x12a2]
Successors: [0x137a]
---
0x136d PUSH1 0x0
0x136f DUP1
0x1370 REVERT
0x1371 JUMPDEST
0x1372 GAS
0x1373 CALL
0x1374 ISZERO
0x1375 ISZERO
0x1376 PUSH2 0xcd1
0x1379 JUMPI
---
0x136d: V1117 = 0x0
0x1370: REVERT 0x0 0x0
0x1371: JUMPDEST 
0x1372: V1118 = GAS
0x1373: V1119 = CALL V1118 S0 S1 S2 S3 S4 S5
0x1374: V1120 = ISZERO V1119
0x1375: V1121 = ISZERO V1120
0x1376: V1122 = 0xcd1
0x1379: THROWI V1121
---
Entry stack: [0x0, V1098, 0x18160ddd, V1107, 0x20, V1110, V1111, V1110, 0x0, V1098]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x137a
[0x137a:0x13be]
---
Predecessors: [0x136d]
Successors: []
---
0x137a PUSH1 0x0
0x137c DUP1
0x137d REVERT
0x137e JUMPDEST
0x137f POP
0x1380 POP
0x1381 POP
0x1382 PUSH1 0x40
0x1384 MLOAD
0x1385 DUP1
0x1386 MLOAD
0x1387 SWAP1
0x1388 POP
0x1389 SWAP1
0x138a POP
0x138b SWAP1
0x138c JUMP
0x138d STOP
0x138e LOG1
0x138f PUSH6 0x627a7a723058
0x1396 SHA3
0x1397 MISSING 0xd4
0x1398 DUP3
0x1399 MISSING 0xa5
0x139a MISSING 0xe3
0x139b PUSH25 0x9ad99ea3c5f0f0979b487e64e9f169f44fa2f1b8f5bab08173
0x13b5 SWAP1
0x13b6 PUSH8 0x29
---
0x137a: V1123 = 0x0
0x137d: REVERT 0x0 0x0
0x137e: JUMPDEST 
0x1382: V1124 = 0x40
0x1384: V1125 = M[0x40]
0x1386: V1126 = M[V1125]
0x138c: JUMP S4
0x138d: STOP 
0x138e: LOG S0 S1 S2
0x138f: V1127 = 0x627a7a723058
0x1396: V1128 = SHA3 0x627a7a723058 S3
0x1397: MISSING 0xd4
0x1399: MISSING 0xa5
0x139a: MISSING 0xe3
0x139b: V1129 = 0x9ad99ea3c5f0f0979b487e64e9f169f44fa2f1b8f5bab08173
0x13b6: V1130 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1126, V1128, S2, S0, S1, S2, 0x29, S0, 0x9ad99ea3c5f0f0979b487e64e9f169f44fa2f1b8f5bab08173]
Exit stack: []

================================

Function 0:
Public function signature: 0x3f4ba83a
Entry block: 0x88
Exit block: 0x9b
Body: 0x88, 0x8f, 0x93, 0x9b, 0x1d7, 0x22e, 0x22f, 0x246, 0x24a

Function 1:
Public function signature: 0x5c975abb
Entry block: 0x9d
Exit block: 0xb0
Body: 0x9d, 0xa4, 0xa8, 0xb0, 0x293

Function 2:
Public function signature: 0x79ba5097
Entry block: 0xca
Exit block: 0xdd
Body: 0xca, 0xd1, 0xd5, 0xdd, 0x2a6, 0x2fe, 0x302

Function 3:
Public function signature: 0x8456cb59
Entry block: 0xdf
Exit block: 0xf2
Body: 0xdf, 0xe6, 0xea, 0xf2, 0x482, 0x4d9, 0x4da, 0x4f2, 0x4f6

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0xf4
Exit block: 0x107
Body: 0xf4, 0xfb, 0xff, 0x107, 0x53e

Function 5:
Public function signature: 0xd4ee1d90
Entry block: 0x149
Exit block: 0x15c
Body: 0x149, 0x150, 0x154, 0x15c, 0x563

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x19e
Exit block: 0x1d5
Body: 0x19e, 0x1a5, 0x1a9, 0x1d5, 0x589, 0x5e0, 0x5e1, 0x639, 0x63d

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

