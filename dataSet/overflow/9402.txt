Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x93]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x93
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x93
0x40: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x123]
---
0x41 DUP1
0x42 PUSH4 0x18160ddd
0x47 EQ
0x48 PUSH2 0x123
0x4b JUMPI
---
0x42: V15 = 0x18160ddd
0x47: V16 = EQ 0x18160ddd V11
0x48: V17 = 0x123
0x4b: JUMPI 0x123 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x14e]
---
0x4c DUP1
0x4d PUSH4 0x313ce567
0x52 EQ
0x53 PUSH2 0x14e
0x56 JUMPI
---
0x4d: V18 = 0x313ce567
0x52: V19 = EQ 0x313ce567 V11
0x53: V20 = 0x14e
0x56: JUMPI 0x14e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x17f]
---
0x57 DUP1
0x58 PUSH4 0x70a08231
0x5d EQ
0x5e PUSH2 0x17f
0x61 JUMPI
---
0x58: V21 = 0x70a08231
0x5d: V22 = EQ 0x70a08231 V11
0x5e: V23 = 0x17f
0x61: JUMPI 0x17f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1d6]
---
0x62 DUP1
0x63 PUSH4 0x95d89b41
0x68 EQ
0x69 PUSH2 0x1d6
0x6c JUMPI
---
0x63: V24 = 0x95d89b41
0x68: V25 = EQ 0x95d89b41 V11
0x69: V26 = 0x1d6
0x6c: JUMPI 0x1d6 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x266]
---
0x6d DUP1
0x6e PUSH4 0xa9059cbb
0x73 EQ
0x74 PUSH2 0x266
0x77 JUMPI
---
0x6e: V27 = 0xa9059cbb
0x73: V28 = EQ 0xa9059cbb V11
0x74: V29 = 0x266
0x77: JUMPI 0x266 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2cb]
---
0x78 DUP1
0x79 PUSH4 0xbe45fd62
0x7e EQ
0x7f PUSH2 0x2cb
0x82 JUMPI
---
0x79: V30 = 0xbe45fd62
0x7e: V31 = EQ 0xbe45fd62 V11
0x7f: V32 = 0x2cb
0x82: JUMPI 0x2cb V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x376]
---
0x83 DUP1
0x84 PUSH4 0xf6368f8a
0x89 EQ
0x8a PUSH2 0x376
0x8d JUMPI
---
0x84: V33 = 0xf6368f8a
0x89: V34 = EQ 0xf6368f8a V11
0x8a: V35 = 0x376
0x8d: JUMPI 0x376 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x92]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x9a]
---
Predecessors: [0xd]
Successors: [0x9b, 0x9f]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 DUP1
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x96: V38 = ISZERO V37
0x97: V39 = 0x9f
0x9a: JUMPI 0x9f V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x93]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V40 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9f
[0x9f:0xa7]
---
Predecessors: [0x93]
Successors: [0x467]
---
0x9f JUMPDEST
0xa0 POP
0xa1 PUSH2 0xa8
0xa4 PUSH2 0x467
0xa7 JUMP
---
0x9f: JUMPDEST 
0xa1: V41 = 0xa8
0xa4: V42 = 0x467
0xa7: JUMP 0x467
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xa8
[0xa8:0xcc]
---
Predecessors: [0x4ff]
Successors: [0xcd]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad DUP1
0xae PUSH1 0x20
0xb0 ADD
0xb1 DUP3
0xb2 DUP2
0xb3 SUB
0xb4 DUP3
0xb5 MSTORE
0xb6 DUP4
0xb7 DUP2
0xb8 DUP2
0xb9 MLOAD
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 DUP1
0xc2 MLOAD
0xc3 SWAP1
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 DUP1
0xc9 DUP4
0xca DUP4
0xcb PUSH1 0x0
---
0xa8: JUMPDEST 
0xa9: V43 = 0x40
0xab: V44 = M[0x40]
0xae: V45 = 0x20
0xb0: V46 = ADD 0x20 V44
0xb3: V47 = SUB V46 V44
0xb5: M[V44] = V47
0xb9: V48 = M[V354]
0xbb: M[V46] = V48
0xbc: V49 = 0x20
0xbe: V50 = ADD 0x20 V46
0xc2: V51 = M[V354]
0xc4: V52 = 0x20
0xc6: V53 = ADD 0x20 V354
0xcb: V54 = 0x0
---
Entry stack: [V11, V354]
Stack pops: 1
Stack additions: [S0, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]
Exit stack: [V11, V354, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]

================================

Block 0xcd
[0xcd:0xd5]
---
Predecessors: [0xa8, 0xd6]
Successors: [0xd6, 0xe8]
---
0xcd JUMPDEST
0xce DUP4
0xcf DUP2
0xd0 LT
0xd1 ISZERO
0xd2 PUSH2 0xe8
0xd5 JUMPI
---
0xcd: JUMPDEST 
0xd0: V55 = LT S0 V51
0xd1: V56 = ISZERO V55
0xd2: V57 = 0xe8
0xd5: JUMPI 0xe8 V56
---
Entry stack: [V11, V354, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V354, V44, V44, V50, V53, V51, V51, V50, V53, S0]

================================

Block 0xd6
[0xd6:0xe7]
---
Predecessors: [0xcd]
Successors: [0xcd]
---
0xd6 DUP1
0xd7 DUP3
0xd8 ADD
0xd9 MLOAD
0xda DUP2
0xdb DUP5
0xdc ADD
0xdd MSTORE
0xde PUSH1 0x20
0xe0 DUP2
0xe1 ADD
0xe2 SWAP1
0xe3 POP
0xe4 PUSH2 0xcd
0xe7 JUMP
---
0xd8: V58 = ADD V53 S0
0xd9: V59 = M[V58]
0xdc: V60 = ADD V50 S0
0xdd: M[V60] = V59
0xde: V61 = 0x20
0xe1: V62 = ADD S0 0x20
0xe4: V63 = 0xcd
0xe7: JUMP 0xcd
---
Entry stack: [V11, V354, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 3
Stack additions: [S2, S1, V62]
Exit stack: [V11, V354, V44, V44, V50, V53, V51, V51, V50, V53, V62]

================================

Block 0xe8
[0xe8:0xfb]
---
Predecessors: [0xcd]
Successors: [0xfc, 0x115]
---
0xe8 JUMPDEST
0xe9 POP
0xea POP
0xeb POP
0xec POP
0xed SWAP1
0xee POP
0xef SWAP1
0xf0 DUP2
0xf1 ADD
0xf2 SWAP1
0xf3 PUSH1 0x1f
0xf5 AND
0xf6 DUP1
0xf7 ISZERO
0xf8 PUSH2 0x115
0xfb JUMPI
---
0xe8: JUMPDEST 
0xf1: V64 = ADD V51 V50
0xf3: V65 = 0x1f
0xf5: V66 = AND 0x1f V51
0xf7: V67 = ISZERO V66
0xf8: V68 = 0x115
0xfb: JUMPI 0x115 V67
---
Entry stack: [V11, V354, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 7
Stack additions: [V64, V66]
Exit stack: [V11, V354, V44, V44, V64, V66]

================================

Block 0xfc
[0xfc:0x114]
---
Predecessors: [0xe8]
Successors: [0x115]
---
0xfc DUP1
0xfd DUP3
0xfe SUB
0xff DUP1
0x100 MLOAD
0x101 PUSH1 0x1
0x103 DUP4
0x104 PUSH1 0x20
0x106 SUB
0x107 PUSH2 0x100
0x10a EXP
0x10b SUB
0x10c NOT
0x10d AND
0x10e DUP2
0x10f MSTORE
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP2
0x114 POP
---
0xfe: V69 = SUB V64 V66
0x100: V70 = M[V69]
0x101: V71 = 0x1
0x104: V72 = 0x20
0x106: V73 = SUB 0x20 V66
0x107: V74 = 0x100
0x10a: V75 = EXP 0x100 V73
0x10b: V76 = SUB V75 0x1
0x10c: V77 = NOT V76
0x10d: V78 = AND V77 V70
0x10f: M[V69] = V78
0x110: V79 = 0x20
0x112: V80 = ADD 0x20 V69
---
Entry stack: [V11, V354, V44, V44, V64, V66]
Stack pops: 2
Stack additions: [V80, S0]
Exit stack: [V11, V354, V44, V44, V80, V66]

================================

Block 0x115
[0x115:0x122]
---
Predecessors: [0xe8, 0xfc]
Successors: []
---
0x115 JUMPDEST
0x116 POP
0x117 SWAP3
0x118 POP
0x119 POP
0x11a POP
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f SWAP2
0x120 SUB
0x121 SWAP1
0x122 RETURN
---
0x115: JUMPDEST 
0x11b: V81 = 0x40
0x11d: V82 = M[0x40]
0x120: V83 = SUB S1 V82
0x122: RETURN V82 V83
---
Entry stack: [V11, V354, V44, V44, S1, V66]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x41]
Successors: [0x12b, 0x12f]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x123: JUMPDEST 
0x124: V84 = CALLVALUE
0x126: V85 = ISZERO V84
0x127: V86 = 0x12f
0x12a: JUMPI 0x12f V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, V84]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x123]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V87 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84]

================================

Block 0x12f
[0x12f:0x137]
---
Predecessors: [0x123]
Successors: [0x509]
---
0x12f JUMPDEST
0x130 POP
0x131 PUSH2 0x138
0x134 PUSH2 0x509
0x137 JUMP
---
0x12f: JUMPDEST 
0x131: V88 = 0x138
0x134: V89 = 0x509
0x137: JUMP 0x509
---
Entry stack: [V11, V84]
Stack pops: 1
Stack additions: [0x138]
Exit stack: [V11, 0x138]

================================

Block 0x138
[0x138:0x14d]
---
Predecessors: [0x509]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
---
0x138: JUMPDEST 
0x139: V90 = 0x40
0x13b: V91 = M[0x40]
0x13f: M[V91] = V400
0x140: V92 = 0x20
0x142: V93 = ADD 0x20 V91
0x146: V94 = 0x40
0x148: V95 = M[0x40]
0x14b: V96 = SUB V93 V95
0x14d: RETURN V95 V96
---
Entry stack: [V11, V400]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x4c]
Successors: [0x156, 0x15a]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14e: JUMPDEST 
0x14f: V97 = CALLVALUE
0x151: V98 = ISZERO V97
0x152: V99 = 0x15a
0x155: JUMPI 0x15a V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V97]
Exit stack: [V11, V97]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14e]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V100 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V11, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V97]

================================

Block 0x15a
[0x15a:0x162]
---
Predecessors: [0x14e]
Successors: [0x513]
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH2 0x163
0x15f PUSH2 0x513
0x162 JUMP
---
0x15a: JUMPDEST 
0x15c: V101 = 0x163
0x15f: V102 = 0x513
0x162: JUMP 0x513
---
Entry stack: [V11, V97]
Stack pops: 1
Stack additions: [0x163]
Exit stack: [V11, 0x163]

================================

Block 0x163
[0x163:0x17e]
---
Predecessors: [0x513]
Successors: []
---
0x163 JUMPDEST
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 DUP3
0x169 PUSH1 0xff
0x16b AND
0x16c PUSH1 0xff
0x16e AND
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP2
0x175 POP
0x176 POP
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e RETURN
---
0x163: JUMPDEST 
0x164: V103 = 0x40
0x166: V104 = M[0x40]
0x169: V105 = 0xff
0x16b: V106 = AND 0xff V409
0x16c: V107 = 0xff
0x16e: V108 = AND 0xff V106
0x170: M[V104] = V108
0x171: V109 = 0x20
0x173: V110 = ADD 0x20 V104
0x177: V111 = 0x40
0x179: V112 = M[0x40]
0x17c: V113 = SUB V110 V112
0x17e: RETURN V112 V113
---
Entry stack: [V11, V409]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x17f
[0x17f:0x186]
---
Predecessors: [0x57]
Successors: [0x187, 0x18b]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 DUP1
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x17f: JUMPDEST 
0x180: V114 = CALLVALUE
0x182: V115 = ISZERO V114
0x183: V116 = 0x18b
0x186: JUMPI 0x18b V115
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V114]
Exit stack: [V11, V114]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x17f]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V117 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V11, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V114]

================================

Block 0x18b
[0x18b:0x1bf]
---
Predecessors: [0x17f]
Successors: [0x52a]
---
0x18b JUMPDEST
0x18c POP
0x18d PUSH2 0x1c0
0x190 PUSH1 0x4
0x192 DUP1
0x193 CALLDATASIZE
0x194 SUB
0x195 DUP2
0x196 ADD
0x197 SWAP1
0x198 DUP1
0x199 DUP1
0x19a CALLDATALOAD
0x19b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b0 AND
0x1b1 SWAP1
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 SWAP1
0x1b6 SWAP3
0x1b7 SWAP2
0x1b8 SWAP1
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc PUSH2 0x52a
0x1bf JUMP
---
0x18b: JUMPDEST 
0x18d: V118 = 0x1c0
0x190: V119 = 0x4
0x193: V120 = CALLDATASIZE
0x194: V121 = SUB V120 0x4
0x196: V122 = ADD 0x4 V121
0x19a: V123 = CALLDATALOAD 0x4
0x19b: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1b2: V126 = 0x20
0x1b4: V127 = ADD 0x20 0x4
0x1bc: V128 = 0x52a
0x1bf: JUMP 0x52a
---
Entry stack: [V11, V114]
Stack pops: 1
Stack additions: [0x1c0, V125]
Exit stack: [V11, 0x1c0, V125]

================================

Block 0x1c0
[0x1c0:0x1d5]
---
Predecessors: [0x52a]
Successors: []
---
0x1c0 JUMPDEST
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 DUP3
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb SWAP2
0x1cc POP
0x1cd POP
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 SWAP2
0x1d3 SUB
0x1d4 SWAP1
0x1d5 RETURN
---
0x1c0: JUMPDEST 
0x1c1: V129 = 0x40
0x1c3: V130 = M[0x40]
0x1c7: M[V130] = V422
0x1c8: V131 = 0x20
0x1ca: V132 = ADD 0x20 V130
0x1ce: V133 = 0x40
0x1d0: V134 = M[0x40]
0x1d3: V135 = SUB V132 V134
0x1d5: RETURN V134 V135
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0, S1, V422]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0, S1]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x62]
Successors: [0x1de, 0x1e2]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 DUP1
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V136 = CALLVALUE
0x1d9: V137 = ISZERO V136
0x1da: V138 = 0x1e2
0x1dd: JUMPI 0x1e2 V137
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V11, V136]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x1d6]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V139 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V11, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V136]

================================

Block 0x1e2
[0x1e2:0x1ea]
---
Predecessors: [0x1d6]
Successors: [0x572]
---
0x1e2 JUMPDEST
0x1e3 POP
0x1e4 PUSH2 0x1eb
0x1e7 PUSH2 0x572
0x1ea JUMP
---
0x1e2: JUMPDEST 
0x1e4: V140 = 0x1eb
0x1e7: V141 = 0x572
0x1ea: JUMP 0x572
---
Entry stack: [V11, V136]
Stack pops: 1
Stack additions: [0x1eb]
Exit stack: [V11, 0x1eb]

================================

Block 0x1eb
[0x1eb:0x20f]
---
Predecessors: [0x60a]
Successors: [0x210]
---
0x1eb JUMPDEST
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef DUP1
0x1f0 DUP1
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 DUP3
0x1f5 DUP2
0x1f6 SUB
0x1f7 DUP3
0x1f8 MSTORE
0x1f9 DUP4
0x1fa DUP2
0x1fb DUP2
0x1fc MLOAD
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP2
0x203 POP
0x204 DUP1
0x205 MLOAD
0x206 SWAP1
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b DUP1
0x20c DUP4
0x20d DUP4
0x20e PUSH1 0x0
---
0x1eb: JUMPDEST 
0x1ec: V142 = 0x40
0x1ee: V143 = M[0x40]
0x1f1: V144 = 0x20
0x1f3: V145 = ADD 0x20 V143
0x1f6: V146 = SUB V145 V143
0x1f8: M[V143] = V146
0x1fc: V147 = M[V444]
0x1fe: M[V145] = V147
0x1ff: V148 = 0x20
0x201: V149 = ADD 0x20 V145
0x205: V150 = M[V444]
0x207: V151 = 0x20
0x209: V152 = ADD 0x20 V444
0x20e: V153 = 0x0
---
Entry stack: [V11, V444]
Stack pops: 1
Stack additions: [S0, V143, V143, V149, V152, V150, V150, V149, V152, 0x0]
Exit stack: [V11, V444, V143, V143, V149, V152, V150, V150, V149, V152, 0x0]

================================

Block 0x210
[0x210:0x218]
---
Predecessors: [0x1eb, 0x219]
Successors: [0x219, 0x22b]
---
0x210 JUMPDEST
0x211 DUP4
0x212 DUP2
0x213 LT
0x214 ISZERO
0x215 PUSH2 0x22b
0x218 JUMPI
---
0x210: JUMPDEST 
0x213: V154 = LT S0 V150
0x214: V155 = ISZERO V154
0x215: V156 = 0x22b
0x218: JUMPI 0x22b V155
---
Entry stack: [V11, V444, V143, V143, V149, V152, V150, V150, V149, V152, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V444, V143, V143, V149, V152, V150, V150, V149, V152, S0]

================================

Block 0x219
[0x219:0x22a]
---
Predecessors: [0x210]
Successors: [0x210]
---
0x219 DUP1
0x21a DUP3
0x21b ADD
0x21c MLOAD
0x21d DUP2
0x21e DUP5
0x21f ADD
0x220 MSTORE
0x221 PUSH1 0x20
0x223 DUP2
0x224 ADD
0x225 SWAP1
0x226 POP
0x227 PUSH2 0x210
0x22a JUMP
---
0x21b: V157 = ADD V152 S0
0x21c: V158 = M[V157]
0x21f: V159 = ADD V149 S0
0x220: M[V159] = V158
0x221: V160 = 0x20
0x224: V161 = ADD S0 0x20
0x227: V162 = 0x210
0x22a: JUMP 0x210
---
Entry stack: [V11, V444, V143, V143, V149, V152, V150, V150, V149, V152, S0]
Stack pops: 3
Stack additions: [S2, S1, V161]
Exit stack: [V11, V444, V143, V143, V149, V152, V150, V150, V149, V152, V161]

================================

Block 0x22b
[0x22b:0x23e]
---
Predecessors: [0x210]
Successors: [0x23f, 0x258]
---
0x22b JUMPDEST
0x22c POP
0x22d POP
0x22e POP
0x22f POP
0x230 SWAP1
0x231 POP
0x232 SWAP1
0x233 DUP2
0x234 ADD
0x235 SWAP1
0x236 PUSH1 0x1f
0x238 AND
0x239 DUP1
0x23a ISZERO
0x23b PUSH2 0x258
0x23e JUMPI
---
0x22b: JUMPDEST 
0x234: V163 = ADD V150 V149
0x236: V164 = 0x1f
0x238: V165 = AND 0x1f V150
0x23a: V166 = ISZERO V165
0x23b: V167 = 0x258
0x23e: JUMPI 0x258 V166
---
Entry stack: [V11, V444, V143, V143, V149, V152, V150, V150, V149, V152, S0]
Stack pops: 7
Stack additions: [V163, V165]
Exit stack: [V11, V444, V143, V143, V163, V165]

================================

Block 0x23f
[0x23f:0x257]
---
Predecessors: [0x22b]
Successors: [0x258]
---
0x23f DUP1
0x240 DUP3
0x241 SUB
0x242 DUP1
0x243 MLOAD
0x244 PUSH1 0x1
0x246 DUP4
0x247 PUSH1 0x20
0x249 SUB
0x24a PUSH2 0x100
0x24d EXP
0x24e SUB
0x24f NOT
0x250 AND
0x251 DUP2
0x252 MSTORE
0x253 PUSH1 0x20
0x255 ADD
0x256 SWAP2
0x257 POP
---
0x241: V168 = SUB V163 V165
0x243: V169 = M[V168]
0x244: V170 = 0x1
0x247: V171 = 0x20
0x249: V172 = SUB 0x20 V165
0x24a: V173 = 0x100
0x24d: V174 = EXP 0x100 V172
0x24e: V175 = SUB V174 0x1
0x24f: V176 = NOT V175
0x250: V177 = AND V176 V169
0x252: M[V168] = V177
0x253: V178 = 0x20
0x255: V179 = ADD 0x20 V168
---
Entry stack: [V11, V444, V143, V143, V163, V165]
Stack pops: 2
Stack additions: [V179, S0]
Exit stack: [V11, V444, V143, V143, V179, V165]

================================

Block 0x258
[0x258:0x265]
---
Predecessors: [0x22b, 0x23f]
Successors: []
---
0x258 JUMPDEST
0x259 POP
0x25a SWAP3
0x25b POP
0x25c POP
0x25d POP
0x25e PUSH1 0x40
0x260 MLOAD
0x261 DUP1
0x262 SWAP2
0x263 SUB
0x264 SWAP1
0x265 RETURN
---
0x258: JUMPDEST 
0x25e: V180 = 0x40
0x260: V181 = M[0x40]
0x263: V182 = SUB S1 V181
0x265: RETURN V181 V182
---
Entry stack: [V11, V444, V143, V143, S1, V165]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x266
[0x266:0x26d]
---
Predecessors: [0x6d]
Successors: [0x26e, 0x272]
---
0x266 JUMPDEST
0x267 CALLVALUE
0x268 DUP1
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x266: JUMPDEST 
0x267: V183 = CALLVALUE
0x269: V184 = ISZERO V183
0x26a: V185 = 0x272
0x26d: JUMPI 0x272 V184
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V183]
Exit stack: [V11, V183]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x266]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V186 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V11, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V183]

================================

Block 0x272
[0x272:0x2b0]
---
Predecessors: [0x266]
Successors: [0x614]
---
0x272 JUMPDEST
0x273 POP
0x274 PUSH2 0x2b1
0x277 PUSH1 0x4
0x279 DUP1
0x27a CALLDATASIZE
0x27b SUB
0x27c DUP2
0x27d ADD
0x27e SWAP1
0x27f DUP1
0x280 DUP1
0x281 CALLDATALOAD
0x282 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x297 AND
0x298 SWAP1
0x299 PUSH1 0x20
0x29b ADD
0x29c SWAP1
0x29d SWAP3
0x29e SWAP2
0x29f SWAP1
0x2a0 DUP1
0x2a1 CALLDATALOAD
0x2a2 SWAP1
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP1
0x2a7 SWAP3
0x2a8 SWAP2
0x2a9 SWAP1
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH2 0x614
0x2b0 JUMP
---
0x272: JUMPDEST 
0x274: V187 = 0x2b1
0x277: V188 = 0x4
0x27a: V189 = CALLDATASIZE
0x27b: V190 = SUB V189 0x4
0x27d: V191 = ADD 0x4 V190
0x281: V192 = CALLDATALOAD 0x4
0x282: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x297: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x299: V195 = 0x20
0x29b: V196 = ADD 0x20 0x4
0x2a1: V197 = CALLDATALOAD 0x24
0x2a3: V198 = 0x20
0x2a5: V199 = ADD 0x20 0x24
0x2ad: V200 = 0x614
0x2b0: JUMP 0x614
---
Entry stack: [V11, V183]
Stack pops: 1
Stack additions: [0x2b1, V194, V197]
Exit stack: [V11, 0x2b1, V194, V197]

================================

Block 0x2b1
[0x2b1:0x2ca]
---
Predecessors: [0x94d, 0xc9c, 0x103c]
Successors: []
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 DUP3
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 ISZERO
0x2ba ISZERO
0x2bb DUP2
0x2bc MSTORE
0x2bd PUSH1 0x20
0x2bf ADD
0x2c0 SWAP2
0x2c1 POP
0x2c2 POP
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 SWAP2
0x2c8 SUB
0x2c9 SWAP1
0x2ca RETURN
---
0x2b1: JUMPDEST 
0x2b2: V201 = 0x40
0x2b4: V202 = M[0x40]
0x2b7: V203 = ISZERO 0x1
0x2b8: V204 = ISZERO 0x0
0x2b9: V205 = ISZERO 0x1
0x2ba: V206 = ISZERO 0x0
0x2bc: M[V202] = 0x1
0x2bd: V207 = 0x20
0x2bf: V208 = ADD 0x20 V202
0x2c3: V209 = 0x40
0x2c5: V210 = M[0x40]
0x2c8: V211 = SUB V208 V210
0x2ca: RETURN V210 V211
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cb
[0x2cb:0x2d2]
---
Predecessors: [0x78]
Successors: [0x2d3, 0x2d7]
---
0x2cb JUMPDEST
0x2cc CALLVALUE
0x2cd DUP1
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V212 = CALLVALUE
0x2ce: V213 = ISZERO V212
0x2cf: V214 = 0x2d7
0x2d2: JUMPI 0x2d7 V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V11, V212]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cb]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V215 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V212]

================================

Block 0x2d7
[0x2d7:0x35b]
---
Predecessors: [0x2cb]
Successors: [0x966]
---
0x2d7 JUMPDEST
0x2d8 POP
0x2d9 PUSH2 0x35c
0x2dc PUSH1 0x4
0x2de DUP1
0x2df CALLDATASIZE
0x2e0 SUB
0x2e1 DUP2
0x2e2 ADD
0x2e3 SWAP1
0x2e4 DUP1
0x2e5 DUP1
0x2e6 CALLDATALOAD
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd SWAP1
0x2fe PUSH1 0x20
0x300 ADD
0x301 SWAP1
0x302 SWAP3
0x303 SWAP2
0x304 SWAP1
0x305 DUP1
0x306 CALLDATALOAD
0x307 SWAP1
0x308 PUSH1 0x20
0x30a ADD
0x30b SWAP1
0x30c SWAP3
0x30d SWAP2
0x30e SWAP1
0x30f DUP1
0x310 CALLDATALOAD
0x311 SWAP1
0x312 PUSH1 0x20
0x314 ADD
0x315 SWAP1
0x316 DUP3
0x317 ADD
0x318 DUP1
0x319 CALLDATALOAD
0x31a SWAP1
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP1
0x31f DUP1
0x320 DUP1
0x321 PUSH1 0x1f
0x323 ADD
0x324 PUSH1 0x20
0x326 DUP1
0x327 SWAP2
0x328 DIV
0x329 MUL
0x32a PUSH1 0x20
0x32c ADD
0x32d PUSH1 0x40
0x32f MLOAD
0x330 SWAP1
0x331 DUP2
0x332 ADD
0x333 PUSH1 0x40
0x335 MSTORE
0x336 DUP1
0x337 SWAP4
0x338 SWAP3
0x339 SWAP2
0x33a SWAP1
0x33b DUP2
0x33c DUP2
0x33d MSTORE
0x33e PUSH1 0x20
0x340 ADD
0x341 DUP4
0x342 DUP4
0x343 DUP1
0x344 DUP3
0x345 DUP5
0x346 CALLDATACOPY
0x347 DUP3
0x348 ADD
0x349 SWAP2
0x34a POP
0x34b POP
0x34c POP
0x34d POP
0x34e POP
0x34f POP
0x350 SWAP2
0x351 SWAP3
0x352 SWAP2
0x353 SWAP3
0x354 SWAP1
0x355 POP
0x356 POP
0x357 POP
0x358 PUSH2 0x966
0x35b JUMP
---
0x2d7: JUMPDEST 
0x2d9: V216 = 0x35c
0x2dc: V217 = 0x4
0x2df: V218 = CALLDATASIZE
0x2e0: V219 = SUB V218 0x4
0x2e2: V220 = ADD 0x4 V219
0x2e6: V221 = CALLDATALOAD 0x4
0x2e7: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x2fe: V224 = 0x20
0x300: V225 = ADD 0x20 0x4
0x306: V226 = CALLDATALOAD 0x24
0x308: V227 = 0x20
0x30a: V228 = ADD 0x20 0x24
0x310: V229 = CALLDATALOAD 0x44
0x312: V230 = 0x20
0x314: V231 = ADD 0x20 0x44
0x317: V232 = ADD 0x4 V229
0x319: V233 = CALLDATALOAD V232
0x31b: V234 = 0x20
0x31d: V235 = ADD 0x20 V232
0x321: V236 = 0x1f
0x323: V237 = ADD 0x1f V233
0x324: V238 = 0x20
0x328: V239 = DIV V237 0x20
0x329: V240 = MUL V239 0x20
0x32a: V241 = 0x20
0x32c: V242 = ADD 0x20 V240
0x32d: V243 = 0x40
0x32f: V244 = M[0x40]
0x332: V245 = ADD V244 V242
0x333: V246 = 0x40
0x335: M[0x40] = V245
0x33d: M[V244] = V233
0x33e: V247 = 0x20
0x340: V248 = ADD 0x20 V244
0x346: CALLDATACOPY V248 V235 V233
0x348: V249 = ADD V248 V233
0x358: V250 = 0x966
0x35b: JUMP 0x966
---
Entry stack: [V11, V212]
Stack pops: 1
Stack additions: [0x35c, V223, V226, V244]
Exit stack: [V11, 0x35c, V223, V226, V244]

================================

Block 0x35c
[0x35c:0x375]
---
Predecessors: [0x94d, 0xc9c, 0x103c]
Successors: []
---
0x35c JUMPDEST
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP1
0x361 DUP3
0x362 ISZERO
0x363 ISZERO
0x364 ISZERO
0x365 ISZERO
0x366 DUP2
0x367 MSTORE
0x368 PUSH1 0x20
0x36a ADD
0x36b SWAP2
0x36c POP
0x36d POP
0x36e PUSH1 0x40
0x370 MLOAD
0x371 DUP1
0x372 SWAP2
0x373 SUB
0x374 SWAP1
0x375 RETURN
---
0x35c: JUMPDEST 
0x35d: V251 = 0x40
0x35f: V252 = M[0x40]
0x362: V253 = ISZERO 0x1
0x363: V254 = ISZERO 0x0
0x364: V255 = ISZERO 0x1
0x365: V256 = ISZERO 0x0
0x367: M[V252] = 0x1
0x368: V257 = 0x20
0x36a: V258 = ADD 0x20 V252
0x36e: V259 = 0x40
0x370: V260 = M[0x40]
0x373: V261 = SUB V258 V260
0x375: RETURN V260 V261
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x376
[0x376:0x37d]
---
Predecessors: [0x83]
Successors: [0x37e, 0x382]
---
0x376 JUMPDEST
0x377 CALLVALUE
0x378 DUP1
0x379 ISZERO
0x37a PUSH2 0x382
0x37d JUMPI
---
0x376: JUMPDEST 
0x377: V262 = CALLVALUE
0x379: V263 = ISZERO V262
0x37a: V264 = 0x382
0x37d: JUMPI 0x382 V263
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V262]
Exit stack: [V11, V262]

================================

Block 0x37e
[0x37e:0x381]
---
Predecessors: [0x376]
Successors: []
---
0x37e PUSH1 0x0
0x380 DUP1
0x381 REVERT
---
0x37e: V265 = 0x0
0x381: REVERT 0x0 0x0
---
Entry stack: [V11, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V262]

================================

Block 0x382
[0x382:0x44c]
---
Predecessors: [0x376]
Successors: [0xcb5]
---
0x382 JUMPDEST
0x383 POP
0x384 PUSH2 0x44d
0x387 PUSH1 0x4
0x389 DUP1
0x38a CALLDATASIZE
0x38b SUB
0x38c DUP2
0x38d ADD
0x38e SWAP1
0x38f DUP1
0x390 DUP1
0x391 CALLDATALOAD
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 AND
0x3a8 SWAP1
0x3a9 PUSH1 0x20
0x3ab ADD
0x3ac SWAP1
0x3ad SWAP3
0x3ae SWAP2
0x3af SWAP1
0x3b0 DUP1
0x3b1 CALLDATALOAD
0x3b2 SWAP1
0x3b3 PUSH1 0x20
0x3b5 ADD
0x3b6 SWAP1
0x3b7 SWAP3
0x3b8 SWAP2
0x3b9 SWAP1
0x3ba DUP1
0x3bb CALLDATALOAD
0x3bc SWAP1
0x3bd PUSH1 0x20
0x3bf ADD
0x3c0 SWAP1
0x3c1 DUP3
0x3c2 ADD
0x3c3 DUP1
0x3c4 CALLDATALOAD
0x3c5 SWAP1
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP1
0x3ca DUP1
0x3cb DUP1
0x3cc PUSH1 0x1f
0x3ce ADD
0x3cf PUSH1 0x20
0x3d1 DUP1
0x3d2 SWAP2
0x3d3 DIV
0x3d4 MUL
0x3d5 PUSH1 0x20
0x3d7 ADD
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db SWAP1
0x3dc DUP2
0x3dd ADD
0x3de PUSH1 0x40
0x3e0 MSTORE
0x3e1 DUP1
0x3e2 SWAP4
0x3e3 SWAP3
0x3e4 SWAP2
0x3e5 SWAP1
0x3e6 DUP2
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec DUP4
0x3ed DUP4
0x3ee DUP1
0x3ef DUP3
0x3f0 DUP5
0x3f1 CALLDATACOPY
0x3f2 DUP3
0x3f3 ADD
0x3f4 SWAP2
0x3f5 POP
0x3f6 POP
0x3f7 POP
0x3f8 POP
0x3f9 POP
0x3fa POP
0x3fb SWAP2
0x3fc SWAP3
0x3fd SWAP2
0x3fe SWAP3
0x3ff SWAP1
0x400 DUP1
0x401 CALLDATALOAD
0x402 SWAP1
0x403 PUSH1 0x20
0x405 ADD
0x406 SWAP1
0x407 DUP3
0x408 ADD
0x409 DUP1
0x40a CALLDATALOAD
0x40b SWAP1
0x40c PUSH1 0x20
0x40e ADD
0x40f SWAP1
0x410 DUP1
0x411 DUP1
0x412 PUSH1 0x1f
0x414 ADD
0x415 PUSH1 0x20
0x417 DUP1
0x418 SWAP2
0x419 DIV
0x41a MUL
0x41b PUSH1 0x20
0x41d ADD
0x41e PUSH1 0x40
0x420 MLOAD
0x421 SWAP1
0x422 DUP2
0x423 ADD
0x424 PUSH1 0x40
0x426 MSTORE
0x427 DUP1
0x428 SWAP4
0x429 SWAP3
0x42a SWAP2
0x42b SWAP1
0x42c DUP2
0x42d DUP2
0x42e MSTORE
0x42f PUSH1 0x20
0x431 ADD
0x432 DUP4
0x433 DUP4
0x434 DUP1
0x435 DUP3
0x436 DUP5
0x437 CALLDATACOPY
0x438 DUP3
0x439 ADD
0x43a SWAP2
0x43b POP
0x43c POP
0x43d POP
0x43e POP
0x43f POP
0x440 POP
0x441 SWAP2
0x442 SWAP3
0x443 SWAP2
0x444 SWAP3
0x445 SWAP1
0x446 POP
0x447 POP
0x448 POP
0x449 PUSH2 0xcb5
0x44c JUMP
---
0x382: JUMPDEST 
0x384: V266 = 0x44d
0x387: V267 = 0x4
0x38a: V268 = CALLDATASIZE
0x38b: V269 = SUB V268 0x4
0x38d: V270 = ADD 0x4 V269
0x391: V271 = CALLDATALOAD 0x4
0x392: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x3a9: V274 = 0x20
0x3ab: V275 = ADD 0x20 0x4
0x3b1: V276 = CALLDATALOAD 0x24
0x3b3: V277 = 0x20
0x3b5: V278 = ADD 0x20 0x24
0x3bb: V279 = CALLDATALOAD 0x44
0x3bd: V280 = 0x20
0x3bf: V281 = ADD 0x20 0x44
0x3c2: V282 = ADD 0x4 V279
0x3c4: V283 = CALLDATALOAD V282
0x3c6: V284 = 0x20
0x3c8: V285 = ADD 0x20 V282
0x3cc: V286 = 0x1f
0x3ce: V287 = ADD 0x1f V283
0x3cf: V288 = 0x20
0x3d3: V289 = DIV V287 0x20
0x3d4: V290 = MUL V289 0x20
0x3d5: V291 = 0x20
0x3d7: V292 = ADD 0x20 V290
0x3d8: V293 = 0x40
0x3da: V294 = M[0x40]
0x3dd: V295 = ADD V294 V292
0x3de: V296 = 0x40
0x3e0: M[0x40] = V295
0x3e8: M[V294] = V283
0x3e9: V297 = 0x20
0x3eb: V298 = ADD 0x20 V294
0x3f1: CALLDATACOPY V298 V285 V283
0x3f3: V299 = ADD V298 V283
0x401: V300 = CALLDATALOAD 0x64
0x403: V301 = 0x20
0x405: V302 = ADD 0x20 0x64
0x408: V303 = ADD 0x4 V300
0x40a: V304 = CALLDATALOAD V303
0x40c: V305 = 0x20
0x40e: V306 = ADD 0x20 V303
0x412: V307 = 0x1f
0x414: V308 = ADD 0x1f V304
0x415: V309 = 0x20
0x419: V310 = DIV V308 0x20
0x41a: V311 = MUL V310 0x20
0x41b: V312 = 0x20
0x41d: V313 = ADD 0x20 V311
0x41e: V314 = 0x40
0x420: V315 = M[0x40]
0x423: V316 = ADD V315 V313
0x424: V317 = 0x40
0x426: M[0x40] = V316
0x42e: M[V315] = V304
0x42f: V318 = 0x20
0x431: V319 = ADD 0x20 V315
0x437: CALLDATACOPY V319 V306 V304
0x439: V320 = ADD V319 V304
0x449: V321 = 0xcb5
0x44c: JUMP 0xcb5
---
Entry stack: [V11, V262]
Stack pops: 1
Stack additions: [0x44d, V273, V276, V294, V315]
Exit stack: [V11, 0x44d, V273, V276, V294, V315]

================================

Block 0x44d
[0x44d:0x466]
---
Predecessors: [0x94d, 0xc9c, 0x103c]
Successors: []
---
0x44d JUMPDEST
0x44e PUSH1 0x40
0x450 MLOAD
0x451 DUP1
0x452 DUP3
0x453 ISZERO
0x454 ISZERO
0x455 ISZERO
0x456 ISZERO
0x457 DUP2
0x458 MSTORE
0x459 PUSH1 0x20
0x45b ADD
0x45c SWAP2
0x45d POP
0x45e POP
0x45f PUSH1 0x40
0x461 MLOAD
0x462 DUP1
0x463 SWAP2
0x464 SUB
0x465 SWAP1
0x466 RETURN
---
0x44d: JUMPDEST 
0x44e: V322 = 0x40
0x450: V323 = M[0x40]
0x453: V324 = ISZERO 0x1
0x454: V325 = ISZERO 0x0
0x455: V326 = ISZERO 0x1
0x456: V327 = ISZERO 0x0
0x458: M[V323] = 0x1
0x459: V328 = 0x20
0x45b: V329 = ADD 0x20 V323
0x45f: V330 = 0x40
0x461: V331 = M[0x40]
0x464: V332 = SUB V329 V331
0x466: RETURN V331 V332
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x467
[0x467:0x4b8]
---
Predecessors: [0x9f]
Successors: [0x4b9, 0x4ff]
---
0x467 JUMPDEST
0x468 PUSH1 0x60
0x46a PUSH1 0x1
0x46c DUP1
0x46d SLOAD
0x46e PUSH1 0x1
0x470 DUP2
0x471 PUSH1 0x1
0x473 AND
0x474 ISZERO
0x475 PUSH2 0x100
0x478 MUL
0x479 SUB
0x47a AND
0x47b PUSH1 0x2
0x47d SWAP1
0x47e DIV
0x47f DUP1
0x480 PUSH1 0x1f
0x482 ADD
0x483 PUSH1 0x20
0x485 DUP1
0x486 SWAP2
0x487 DIV
0x488 MUL
0x489 PUSH1 0x20
0x48b ADD
0x48c PUSH1 0x40
0x48e MLOAD
0x48f SWAP1
0x490 DUP2
0x491 ADD
0x492 PUSH1 0x40
0x494 MSTORE
0x495 DUP1
0x496 SWAP3
0x497 SWAP2
0x498 SWAP1
0x499 DUP2
0x49a DUP2
0x49b MSTORE
0x49c PUSH1 0x20
0x49e ADD
0x49f DUP3
0x4a0 DUP1
0x4a1 SLOAD
0x4a2 PUSH1 0x1
0x4a4 DUP2
0x4a5 PUSH1 0x1
0x4a7 AND
0x4a8 ISZERO
0x4a9 PUSH2 0x100
0x4ac MUL
0x4ad SUB
0x4ae AND
0x4af PUSH1 0x2
0x4b1 SWAP1
0x4b2 DIV
0x4b3 DUP1
0x4b4 ISZERO
0x4b5 PUSH2 0x4ff
0x4b8 JUMPI
---
0x467: JUMPDEST 
0x468: V333 = 0x60
0x46a: V334 = 0x1
0x46d: V335 = S[0x1]
0x46e: V336 = 0x1
0x471: V337 = 0x1
0x473: V338 = AND 0x1 V335
0x474: V339 = ISZERO V338
0x475: V340 = 0x100
0x478: V341 = MUL 0x100 V339
0x479: V342 = SUB V341 0x1
0x47a: V343 = AND V342 V335
0x47b: V344 = 0x2
0x47e: V345 = DIV V343 0x2
0x480: V346 = 0x1f
0x482: V347 = ADD 0x1f V345
0x483: V348 = 0x20
0x487: V349 = DIV V347 0x20
0x488: V350 = MUL V349 0x20
0x489: V351 = 0x20
0x48b: V352 = ADD 0x20 V350
0x48c: V353 = 0x40
0x48e: V354 = M[0x40]
0x491: V355 = ADD V354 V352
0x492: V356 = 0x40
0x494: M[0x40] = V355
0x49b: M[V354] = V345
0x49c: V357 = 0x20
0x49e: V358 = ADD 0x20 V354
0x4a1: V359 = S[0x1]
0x4a2: V360 = 0x1
0x4a5: V361 = 0x1
0x4a7: V362 = AND 0x1 V359
0x4a8: V363 = ISZERO V362
0x4a9: V364 = 0x100
0x4ac: V365 = MUL 0x100 V363
0x4ad: V366 = SUB V365 0x1
0x4ae: V367 = AND V366 V359
0x4af: V368 = 0x2
0x4b2: V369 = DIV V367 0x2
0x4b4: V370 = ISZERO V369
0x4b5: V371 = 0x4ff
0x4b8: JUMPI 0x4ff V370
---
Entry stack: [V11, 0xa8]
Stack pops: 0
Stack additions: [0x60, V354, 0x1, V345, V358, 0x1, V369]
Exit stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V358, 0x1, V369]

================================

Block 0x4b9
[0x4b9:0x4c0]
---
Predecessors: [0x467]
Successors: [0x4c1, 0x4d4]
---
0x4b9 DUP1
0x4ba PUSH1 0x1f
0x4bc LT
0x4bd PUSH2 0x4d4
0x4c0 JUMPI
---
0x4ba: V372 = 0x1f
0x4bc: V373 = LT 0x1f V369
0x4bd: V374 = 0x4d4
0x4c0: JUMPI 0x4d4 V373
---
Entry stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V358, 0x1, V369]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V358, 0x1, V369]

================================

Block 0x4c1
[0x4c1:0x4d3]
---
Predecessors: [0x4b9]
Successors: [0x4ff]
---
0x4c1 PUSH2 0x100
0x4c4 DUP1
0x4c5 DUP4
0x4c6 SLOAD
0x4c7 DIV
0x4c8 MUL
0x4c9 DUP4
0x4ca MSTORE
0x4cb SWAP2
0x4cc PUSH1 0x20
0x4ce ADD
0x4cf SWAP2
0x4d0 PUSH2 0x4ff
0x4d3 JUMP
---
0x4c1: V375 = 0x100
0x4c6: V376 = S[0x1]
0x4c7: V377 = DIV V376 0x100
0x4c8: V378 = MUL V377 0x100
0x4ca: M[V358] = V378
0x4cc: V379 = 0x20
0x4ce: V380 = ADD 0x20 V358
0x4d0: V381 = 0x4ff
0x4d3: JUMP 0x4ff
---
Entry stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V358, 0x1, V369]
Stack pops: 3
Stack additions: [V380, S1, S0]
Exit stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V380, 0x1, V369]

================================

Block 0x4d4
[0x4d4:0x4e1]
---
Predecessors: [0x4b9]
Successors: [0x4e2]
---
0x4d4 JUMPDEST
0x4d5 DUP3
0x4d6 ADD
0x4d7 SWAP2
0x4d8 SWAP1
0x4d9 PUSH1 0x0
0x4db MSTORE
0x4dc PUSH1 0x20
0x4de PUSH1 0x0
0x4e0 SHA3
0x4e1 SWAP1
---
0x4d4: JUMPDEST 
0x4d6: V382 = ADD V358 V369
0x4d9: V383 = 0x0
0x4db: M[0x0] = 0x1
0x4dc: V384 = 0x20
0x4de: V385 = 0x0
0x4e0: V386 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V358, 0x1, V369]
Stack pops: 3
Stack additions: [V382, V386, S2]
Exit stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V382, V386, V358]

================================

Block 0x4e2
[0x4e2:0x4f5]
---
Predecessors: [0x4d4, 0x4e2]
Successors: [0x4e2, 0x4f6]
---
0x4e2 JUMPDEST
0x4e3 DUP2
0x4e4 SLOAD
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 SWAP1
0x4e8 PUSH1 0x1
0x4ea ADD
0x4eb SWAP1
0x4ec PUSH1 0x20
0x4ee ADD
0x4ef DUP1
0x4f0 DUP4
0x4f1 GT
0x4f2 PUSH2 0x4e2
0x4f5 JUMPI
---
0x4e2: JUMPDEST 
0x4e4: V387 = S[S1]
0x4e6: M[S0] = V387
0x4e8: V388 = 0x1
0x4ea: V389 = ADD 0x1 S1
0x4ec: V390 = 0x20
0x4ee: V391 = ADD 0x20 S0
0x4f1: V392 = GT V382 V391
0x4f2: V393 = 0x4e2
0x4f5: JUMPI 0x4e2 V392
---
Entry stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V382, S1, S0]
Stack pops: 3
Stack additions: [S2, V389, V391]
Exit stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V382, V389, V391]

================================

Block 0x4f6
[0x4f6:0x4fe]
---
Predecessors: [0x4e2]
Successors: [0x4ff]
---
0x4f6 DUP3
0x4f7 SWAP1
0x4f8 SUB
0x4f9 PUSH1 0x1f
0x4fb AND
0x4fc DUP3
0x4fd ADD
0x4fe SWAP2
---
0x4f8: V394 = SUB V391 V382
0x4f9: V395 = 0x1f
0x4fb: V396 = AND 0x1f V394
0x4fd: V397 = ADD V382 V396
---
Entry stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V382, V389, V391]
Stack pops: 3
Stack additions: [V397, S1, S2]
Exit stack: [V11, 0xa8, 0x60, V354, 0x1, V345, V397, V389, V382]

================================

Block 0x4ff
[0x4ff:0x508]
---
Predecessors: [0x467, 0x4c1, 0x4f6]
Successors: [0xa8]
---
0x4ff JUMPDEST
0x500 POP
0x501 POP
0x502 POP
0x503 POP
0x504 POP
0x505 SWAP1
0x506 POP
0x507 SWAP1
0x508 JUMP
---
0x4ff: JUMPDEST 
0x508: JUMP 0xa8
---
Entry stack: [V11, 0xa8, 0x60, V354, 0x1, V345, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V354]

================================

Block 0x509
[0x509:0x512]
---
Predecessors: [0x12f]
Successors: [0x138]
---
0x509 JUMPDEST
0x50a PUSH1 0x0
0x50c PUSH1 0x4
0x50e SLOAD
0x50f SWAP1
0x510 POP
0x511 SWAP1
0x512 JUMP
---
0x509: JUMPDEST 
0x50a: V398 = 0x0
0x50c: V399 = 0x4
0x50e: V400 = S[0x4]
0x512: JUMP 0x138
---
Entry stack: [V11, 0x138]
Stack pops: 1
Stack additions: [V400]
Exit stack: [V11, V400]

================================

Block 0x513
[0x513:0x529]
---
Predecessors: [0x15a]
Successors: [0x163]
---
0x513 JUMPDEST
0x514 PUSH1 0x0
0x516 PUSH1 0x3
0x518 PUSH1 0x0
0x51a SWAP1
0x51b SLOAD
0x51c SWAP1
0x51d PUSH2 0x100
0x520 EXP
0x521 SWAP1
0x522 DIV
0x523 PUSH1 0xff
0x525 AND
0x526 SWAP1
0x527 POP
0x528 SWAP1
0x529 JUMP
---
0x513: JUMPDEST 
0x514: V401 = 0x0
0x516: V402 = 0x3
0x518: V403 = 0x0
0x51b: V404 = S[0x3]
0x51d: V405 = 0x100
0x520: V406 = EXP 0x100 0x0
0x522: V407 = DIV V404 0x1
0x523: V408 = 0xff
0x525: V409 = AND 0xff V407
0x529: JUMP 0x163
---
Entry stack: [V11, 0x163]
Stack pops: 1
Stack additions: [V409]
Exit stack: [V11, V409]

================================

Block 0x52a
[0x52a:0x571]
---
Predecessors: [0x18b, 0x614, 0x966, 0xcb5]
Successors: [0x1c0, 0x624, 0x973, 0xcc1]
---
0x52a JUMPDEST
0x52b PUSH1 0x0
0x52d DUP1
0x52e PUSH1 0x0
0x530 DUP4
0x531 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x546 AND
0x547 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55c AND
0x55d DUP2
0x55e MSTORE
0x55f PUSH1 0x20
0x561 ADD
0x562 SWAP1
0x563 DUP2
0x564 MSTORE
0x565 PUSH1 0x20
0x567 ADD
0x568 PUSH1 0x0
0x56a SHA3
0x56b SLOAD
0x56c SWAP1
0x56d POP
0x56e SWAP2
0x56f SWAP1
0x570 POP
0x571 JUMP
---
0x52a: JUMPDEST 
0x52b: V410 = 0x0
0x52e: V411 = 0x0
0x531: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x546: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x547: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x55c: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x55e: M[0x0] = V415
0x55f: V416 = 0x20
0x561: V417 = ADD 0x20 0x0
0x564: M[0x20] = 0x0
0x565: V418 = 0x20
0x567: V419 = ADD 0x20 0x20
0x568: V420 = 0x0
0x56a: V421 = SHA3 0x0 0x40
0x56b: V422 = S[V421]
0x571: JUMP {0x1c0, 0x624, 0x973, 0xcc1}
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S7, S6, S5, S4, 0x0, S2, {0x1c0, 0x624, 0x973, 0xcc1}, S0]
Stack pops: 2
Stack additions: [V422]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S7, S6, S5, S4, 0x0, S2, V422]

================================

Block 0x572
[0x572:0x5c3]
---
Predecessors: [0x1e2]
Successors: [0x5c4, 0x60a]
---
0x572 JUMPDEST
0x573 PUSH1 0x60
0x575 PUSH1 0x2
0x577 DUP1
0x578 SLOAD
0x579 PUSH1 0x1
0x57b DUP2
0x57c PUSH1 0x1
0x57e AND
0x57f ISZERO
0x580 PUSH2 0x100
0x583 MUL
0x584 SUB
0x585 AND
0x586 PUSH1 0x2
0x588 SWAP1
0x589 DIV
0x58a DUP1
0x58b PUSH1 0x1f
0x58d ADD
0x58e PUSH1 0x20
0x590 DUP1
0x591 SWAP2
0x592 DIV
0x593 MUL
0x594 PUSH1 0x20
0x596 ADD
0x597 PUSH1 0x40
0x599 MLOAD
0x59a SWAP1
0x59b DUP2
0x59c ADD
0x59d PUSH1 0x40
0x59f MSTORE
0x5a0 DUP1
0x5a1 SWAP3
0x5a2 SWAP2
0x5a3 SWAP1
0x5a4 DUP2
0x5a5 DUP2
0x5a6 MSTORE
0x5a7 PUSH1 0x20
0x5a9 ADD
0x5aa DUP3
0x5ab DUP1
0x5ac SLOAD
0x5ad PUSH1 0x1
0x5af DUP2
0x5b0 PUSH1 0x1
0x5b2 AND
0x5b3 ISZERO
0x5b4 PUSH2 0x100
0x5b7 MUL
0x5b8 SUB
0x5b9 AND
0x5ba PUSH1 0x2
0x5bc SWAP1
0x5bd DIV
0x5be DUP1
0x5bf ISZERO
0x5c0 PUSH2 0x60a
0x5c3 JUMPI
---
0x572: JUMPDEST 
0x573: V423 = 0x60
0x575: V424 = 0x2
0x578: V425 = S[0x2]
0x579: V426 = 0x1
0x57c: V427 = 0x1
0x57e: V428 = AND 0x1 V425
0x57f: V429 = ISZERO V428
0x580: V430 = 0x100
0x583: V431 = MUL 0x100 V429
0x584: V432 = SUB V431 0x1
0x585: V433 = AND V432 V425
0x586: V434 = 0x2
0x589: V435 = DIV V433 0x2
0x58b: V436 = 0x1f
0x58d: V437 = ADD 0x1f V435
0x58e: V438 = 0x20
0x592: V439 = DIV V437 0x20
0x593: V440 = MUL V439 0x20
0x594: V441 = 0x20
0x596: V442 = ADD 0x20 V440
0x597: V443 = 0x40
0x599: V444 = M[0x40]
0x59c: V445 = ADD V444 V442
0x59d: V446 = 0x40
0x59f: M[0x40] = V445
0x5a6: M[V444] = V435
0x5a7: V447 = 0x20
0x5a9: V448 = ADD 0x20 V444
0x5ac: V449 = S[0x2]
0x5ad: V450 = 0x1
0x5b0: V451 = 0x1
0x5b2: V452 = AND 0x1 V449
0x5b3: V453 = ISZERO V452
0x5b4: V454 = 0x100
0x5b7: V455 = MUL 0x100 V453
0x5b8: V456 = SUB V455 0x1
0x5b9: V457 = AND V456 V449
0x5ba: V458 = 0x2
0x5bd: V459 = DIV V457 0x2
0x5bf: V460 = ISZERO V459
0x5c0: V461 = 0x60a
0x5c3: JUMPI 0x60a V460
---
Entry stack: [V11, 0x1eb]
Stack pops: 0
Stack additions: [0x60, V444, 0x2, V435, V448, 0x2, V459]
Exit stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V448, 0x2, V459]

================================

Block 0x5c4
[0x5c4:0x5cb]
---
Predecessors: [0x572]
Successors: [0x5cc, 0x5df]
---
0x5c4 DUP1
0x5c5 PUSH1 0x1f
0x5c7 LT
0x5c8 PUSH2 0x5df
0x5cb JUMPI
---
0x5c5: V462 = 0x1f
0x5c7: V463 = LT 0x1f V459
0x5c8: V464 = 0x5df
0x5cb: JUMPI 0x5df V463
---
Entry stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V448, 0x2, V459]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V448, 0x2, V459]

================================

Block 0x5cc
[0x5cc:0x5de]
---
Predecessors: [0x5c4]
Successors: [0x60a]
---
0x5cc PUSH2 0x100
0x5cf DUP1
0x5d0 DUP4
0x5d1 SLOAD
0x5d2 DIV
0x5d3 MUL
0x5d4 DUP4
0x5d5 MSTORE
0x5d6 SWAP2
0x5d7 PUSH1 0x20
0x5d9 ADD
0x5da SWAP2
0x5db PUSH2 0x60a
0x5de JUMP
---
0x5cc: V465 = 0x100
0x5d1: V466 = S[0x2]
0x5d2: V467 = DIV V466 0x100
0x5d3: V468 = MUL V467 0x100
0x5d5: M[V448] = V468
0x5d7: V469 = 0x20
0x5d9: V470 = ADD 0x20 V448
0x5db: V471 = 0x60a
0x5de: JUMP 0x60a
---
Entry stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V448, 0x2, V459]
Stack pops: 3
Stack additions: [V470, S1, S0]
Exit stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V470, 0x2, V459]

================================

Block 0x5df
[0x5df:0x5ec]
---
Predecessors: [0x5c4]
Successors: [0x5ed]
---
0x5df JUMPDEST
0x5e0 DUP3
0x5e1 ADD
0x5e2 SWAP2
0x5e3 SWAP1
0x5e4 PUSH1 0x0
0x5e6 MSTORE
0x5e7 PUSH1 0x20
0x5e9 PUSH1 0x0
0x5eb SHA3
0x5ec SWAP1
---
0x5df: JUMPDEST 
0x5e1: V472 = ADD V448 V459
0x5e4: V473 = 0x0
0x5e6: M[0x0] = 0x2
0x5e7: V474 = 0x20
0x5e9: V475 = 0x0
0x5eb: V476 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V448, 0x2, V459]
Stack pops: 3
Stack additions: [V472, V476, S2]
Exit stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V472, V476, V448]

================================

Block 0x5ed
[0x5ed:0x600]
---
Predecessors: [0x5df, 0x5ed]
Successors: [0x5ed, 0x601]
---
0x5ed JUMPDEST
0x5ee DUP2
0x5ef SLOAD
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 SWAP1
0x5f3 PUSH1 0x1
0x5f5 ADD
0x5f6 SWAP1
0x5f7 PUSH1 0x20
0x5f9 ADD
0x5fa DUP1
0x5fb DUP4
0x5fc GT
0x5fd PUSH2 0x5ed
0x600 JUMPI
---
0x5ed: JUMPDEST 
0x5ef: V477 = S[S1]
0x5f1: M[S0] = V477
0x5f3: V478 = 0x1
0x5f5: V479 = ADD 0x1 S1
0x5f7: V480 = 0x20
0x5f9: V481 = ADD 0x20 S0
0x5fc: V482 = GT V472 V481
0x5fd: V483 = 0x5ed
0x600: JUMPI 0x5ed V482
---
Entry stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V472, S1, S0]
Stack pops: 3
Stack additions: [S2, V479, V481]
Exit stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V472, V479, V481]

================================

Block 0x601
[0x601:0x609]
---
Predecessors: [0x5ed]
Successors: [0x60a]
---
0x601 DUP3
0x602 SWAP1
0x603 SUB
0x604 PUSH1 0x1f
0x606 AND
0x607 DUP3
0x608 ADD
0x609 SWAP2
---
0x603: V484 = SUB V481 V472
0x604: V485 = 0x1f
0x606: V486 = AND 0x1f V484
0x608: V487 = ADD V472 V486
---
Entry stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V472, V479, V481]
Stack pops: 3
Stack additions: [V487, S1, S2]
Exit stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, V487, V479, V472]

================================

Block 0x60a
[0x60a:0x613]
---
Predecessors: [0x572, 0x5cc, 0x601]
Successors: [0x1eb]
---
0x60a JUMPDEST
0x60b POP
0x60c POP
0x60d POP
0x60e POP
0x60f POP
0x610 SWAP1
0x611 POP
0x612 SWAP1
0x613 JUMP
---
0x60a: JUMPDEST 
0x613: JUMP 0x1eb
---
Entry stack: [V11, 0x1eb, 0x60, V444, 0x2, V435, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V444]

================================

Block 0x614
[0x614:0x623]
---
Predecessors: [0x272]
Successors: [0x52a]
---
0x614 JUMPDEST
0x615 PUSH1 0x0
0x617 PUSH1 0x60
0x619 PUSH1 0x0
0x61b DUP4
0x61c PUSH2 0x624
0x61f CALLER
0x620 PUSH2 0x52a
0x623 JUMP
---
0x614: JUMPDEST 
0x615: V488 = 0x0
0x617: V489 = 0x60
0x619: V490 = 0x0
0x61c: V491 = 0x624
0x61f: V492 = CALLER
0x620: V493 = 0x52a
0x623: JUMP 0x52a
---
Entry stack: [V11, 0x2b1, V194, V197]
Stack pops: 1
Stack additions: [S0, 0x0, 0x60, 0x0, S0, 0x624, V492]
Exit stack: [V11, 0x2b1, V194, V197, 0x0, 0x60, 0x0, V197, 0x624, V492]

================================

Block 0x624
[0x624:0x62a]
---
Predecessors: [0x52a]
Successors: [0x62b, 0x62f]
---
0x624 JUMPDEST
0x625 LT
0x626 ISZERO
0x627 PUSH2 0x62f
0x62a JUMPI
---
0x624: JUMPDEST 
0x625: V494 = LT V422 S1
0x626: V495 = ISZERO V494
0x627: V496 = 0x62f
0x62a: JUMPI 0x62f V495
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0, S1, V422]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0]

================================

Block 0x62b
[0x62b:0x62e]
---
Predecessors: [0x624]
Successors: []
---
0x62b PUSH1 0x0
0x62d DUP1
0x62e REVERT
---
0x62b: V497 = 0x0
0x62e: REVERT 0x0 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]

================================

Block 0x62f
[0x62f:0x67f]
---
Predecessors: [0x624]
Successors: [0x1055]
---
0x62f JUMPDEST
0x630 PUSH2 0x680
0x633 DUP5
0x634 PUSH1 0x0
0x636 DUP1
0x637 CALLER
0x638 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64d AND
0x64e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x663 AND
0x664 DUP2
0x665 MSTORE
0x666 PUSH1 0x20
0x668 ADD
0x669 SWAP1
0x66a DUP2
0x66b MSTORE
0x66c PUSH1 0x20
0x66e ADD
0x66f PUSH1 0x0
0x671 SHA3
0x672 SLOAD
0x673 PUSH2 0x1055
0x676 SWAP1
0x677 SWAP2
0x678 SWAP1
0x679 PUSH4 0xffffffff
0x67e AND
0x67f JUMP
---
0x62f: JUMPDEST 
0x630: V498 = 0x680
0x634: V499 = 0x0
0x637: V500 = CALLER
0x638: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x64d: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x64e: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x663: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x665: M[0x0] = V504
0x666: V505 = 0x20
0x668: V506 = ADD 0x20 0x0
0x66b: M[0x20] = 0x0
0x66c: V507 = 0x20
0x66e: V508 = ADD 0x20 0x20
0x66f: V509 = 0x0
0x671: V510 = SHA3 0x0 0x40
0x672: V511 = S[V510]
0x673: V512 = 0x1055
0x679: V513 = 0xffffffff
0x67e: V514 = AND 0xffffffff 0x1055
0x67f: JUMP 0x1055
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x680, V511, S3]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0, 0x680, V511, S3]

================================

Block 0x680
[0x680:0x712]
---
Predecessors: [0x1063]
Successors: [0x106e]
---
0x680 JUMPDEST
0x681 PUSH1 0x0
0x683 DUP1
0x684 CALLER
0x685 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69a AND
0x69b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b0 AND
0x6b1 DUP2
0x6b2 MSTORE
0x6b3 PUSH1 0x20
0x6b5 ADD
0x6b6 SWAP1
0x6b7 DUP2
0x6b8 MSTORE
0x6b9 PUSH1 0x20
0x6bb ADD
0x6bc PUSH1 0x0
0x6be SHA3
0x6bf DUP2
0x6c0 SWAP1
0x6c1 SSTORE
0x6c2 POP
0x6c3 PUSH2 0x713
0x6c6 DUP5
0x6c7 PUSH1 0x0
0x6c9 DUP1
0x6ca DUP9
0x6cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e0 AND
0x6e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f6 AND
0x6f7 DUP2
0x6f8 MSTORE
0x6f9 PUSH1 0x20
0x6fb ADD
0x6fc SWAP1
0x6fd DUP2
0x6fe MSTORE
0x6ff PUSH1 0x20
0x701 ADD
0x702 PUSH1 0x0
0x704 SHA3
0x705 SLOAD
0x706 PUSH2 0x106e
0x709 SWAP1
0x70a SWAP2
0x70b SWAP1
0x70c PUSH4 0xffffffff
0x711 AND
0x712 JUMP
---
0x680: JUMPDEST 
0x681: V515 = 0x0
0x684: V516 = CALLER
0x685: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x69b: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b0: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x6b2: M[0x0] = V520
0x6b3: V521 = 0x20
0x6b5: V522 = ADD 0x20 0x0
0x6b8: M[0x20] = 0x0
0x6b9: V523 = 0x20
0x6bb: V524 = ADD 0x20 0x20
0x6bc: V525 = 0x0
0x6be: V526 = SHA3 0x0 0x40
0x6c1: S[V526] = V1090
0x6c3: V527 = 0x713
0x6c7: V528 = 0x0
0x6cb: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6e1: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f6: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x6f8: M[0x0] = V532
0x6f9: V533 = 0x20
0x6fb: V534 = ADD 0x20 0x0
0x6fe: M[0x20] = 0x0
0x6ff: V535 = 0x20
0x701: V536 = ADD 0x20 0x20
0x702: V537 = 0x0
0x704: V538 = SHA3 0x0 0x40
0x705: V539 = S[V538]
0x706: V540 = 0x106e
0x70c: V541 = 0xffffffff
0x711: V542 = AND 0xffffffff 0x106e
0x712: JUMP 0x106e
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, V1090]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x713, V539, S4]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, 0x713, V539, S4]

================================

Block 0x713
[0x713:0x75d]
---
Predecessors: [0x1082]
Successors: [0x108c]
---
0x713 JUMPDEST
0x714 PUSH1 0x0
0x716 DUP1
0x717 DUP8
0x718 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72d AND
0x72e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x743 AND
0x744 DUP2
0x745 MSTORE
0x746 PUSH1 0x20
0x748 ADD
0x749 SWAP1
0x74a DUP2
0x74b MSTORE
0x74c PUSH1 0x20
0x74e ADD
0x74f PUSH1 0x0
0x751 SHA3
0x752 DUP2
0x753 SWAP1
0x754 SSTORE
0x755 POP
0x756 PUSH2 0x75e
0x759 DUP6
0x75a PUSH2 0x108c
0x75d JUMP
---
0x713: JUMPDEST 
0x714: V543 = 0x0
0x718: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x72e: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x743: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x745: M[0x0] = V547
0x746: V548 = 0x20
0x748: V549 = ADD 0x20 0x0
0x74b: M[0x20] = 0x0
0x74c: V550 = 0x20
0x74e: V551 = ADD 0x20 0x20
0x74f: V552 = 0x0
0x751: V553 = SHA3 0x0 0x40
0x754: S[V553] = S0
0x756: V554 = 0x75e
0x75a: V555 = 0x108c
0x75d: JUMP 0x108c
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x75e, S5]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, 0x75e, S5]

================================

Block 0x75e
[0x75e:0x763]
---
Predecessors: [0x108c]
Successors: [0x764, 0x88f]
---
0x75e JUMPDEST
0x75f ISZERO
0x760 PUSH2 0x88f
0x763 JUMPI
---
0x75e: JUMPDEST 
0x75f: V556 = ISZERO V1101
0x760: V557 = 0x88f
0x763: JUMPI 0x88f V556
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, V1101]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0]

================================

Block 0x764
[0x764:0x80c]
---
Predecessors: [0x75e]
Successors: [0x80d]
---
0x764 DUP5
0x765 SWAP1
0x766 POP
0x767 DUP1
0x768 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77d AND
0x77e PUSH4 0xc0ee0b8a
0x783 CALLER
0x784 DUP7
0x785 DUP6
0x786 PUSH1 0x40
0x788 MLOAD
0x789 DUP5
0x78a PUSH4 0xffffffff
0x78f AND
0x790 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7ae MUL
0x7af DUP2
0x7b0 MSTORE
0x7b1 PUSH1 0x4
0x7b3 ADD
0x7b4 DUP1
0x7b5 DUP5
0x7b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cb AND
0x7cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e1 AND
0x7e2 DUP2
0x7e3 MSTORE
0x7e4 PUSH1 0x20
0x7e6 ADD
0x7e7 DUP4
0x7e8 DUP2
0x7e9 MSTORE
0x7ea PUSH1 0x20
0x7ec ADD
0x7ed DUP1
0x7ee PUSH1 0x20
0x7f0 ADD
0x7f1 DUP3
0x7f2 DUP2
0x7f3 SUB
0x7f4 DUP3
0x7f5 MSTORE
0x7f6 DUP4
0x7f7 DUP2
0x7f8 DUP2
0x7f9 MLOAD
0x7fa DUP2
0x7fb MSTORE
0x7fc PUSH1 0x20
0x7fe ADD
0x7ff SWAP2
0x800 POP
0x801 DUP1
0x802 MLOAD
0x803 SWAP1
0x804 PUSH1 0x20
0x806 ADD
0x807 SWAP1
0x808 DUP1
0x809 DUP4
0x80a DUP4
0x80b PUSH1 0x0
---
0x768: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x77d: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x77e: V560 = 0xc0ee0b8a
0x783: V561 = CALLER
0x786: V562 = 0x40
0x788: V563 = M[0x40]
0x78a: V564 = 0xffffffff
0x78f: V565 = AND 0xffffffff 0xc0ee0b8a
0x790: V566 = 0x100000000000000000000000000000000000000000000000000000000
0x7ae: V567 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0x7b0: M[V563] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x7b1: V568 = 0x4
0x7b3: V569 = ADD 0x4 V563
0x7b6: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x7cc: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x7e3: M[V569] = V573
0x7e4: V574 = 0x20
0x7e6: V575 = ADD 0x20 V569
0x7e9: M[V575] = S3
0x7ea: V576 = 0x20
0x7ec: V577 = ADD 0x20 V575
0x7ee: V578 = 0x20
0x7f0: V579 = ADD 0x20 V577
0x7f3: V580 = SUB V579 V569
0x7f5: M[V577] = V580
0x7f9: V581 = M[S1]
0x7fb: M[V579] = V581
0x7fc: V582 = 0x20
0x7fe: V583 = ADD 0x20 V579
0x802: V584 = M[S1]
0x804: V585 = 0x20
0x806: V586 = ADD 0x20 S1
0x80b: V587 = 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V559, 0xc0ee0b8a, V561, S3, S1, V569, V577, V583, V586, V584, V584, V583, V586, 0x0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, S4, V559, 0xc0ee0b8a, V561, S3, S1, V569, V577, V583, V586, V584, V584, V583, V586, 0x0]

================================

Block 0x80d
[0x80d:0x815]
---
Predecessors: [0x764, 0x816]
Successors: [0x816, 0x828]
---
0x80d JUMPDEST
0x80e DUP4
0x80f DUP2
0x810 LT
0x811 ISZERO
0x812 PUSH2 0x828
0x815 JUMPI
---
0x80d: JUMPDEST 
0x810: V588 = LT S0 V584
0x811: V589 = ISZERO V588
0x812: V590 = 0x828
0x815: JUMPI 0x828 V589
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V559, 0xc0ee0b8a, V561, S10, S9, V569, V577, V583, V586, V584, V584, V583, V586, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V559, 0xc0ee0b8a, V561, S10, S9, V569, V577, V583, V586, V584, V584, V583, V586, S0]

================================

Block 0x816
[0x816:0x827]
---
Predecessors: [0x80d]
Successors: [0x80d]
---
0x816 DUP1
0x817 DUP3
0x818 ADD
0x819 MLOAD
0x81a DUP2
0x81b DUP5
0x81c ADD
0x81d MSTORE
0x81e PUSH1 0x20
0x820 DUP2
0x821 ADD
0x822 SWAP1
0x823 POP
0x824 PUSH2 0x80d
0x827 JUMP
---
0x818: V591 = ADD V586 S0
0x819: V592 = M[V591]
0x81c: V593 = ADD V583 S0
0x81d: M[V593] = V592
0x81e: V594 = 0x20
0x821: V595 = ADD S0 0x20
0x824: V596 = 0x80d
0x827: JUMP 0x80d
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V559, 0xc0ee0b8a, V561, S10, S9, V569, V577, V583, V586, V584, V584, V583, V586, S0]
Stack pops: 3
Stack additions: [S2, S1, V595]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V559, 0xc0ee0b8a, V561, S10, S9, V569, V577, V583, V586, V584, V584, V583, V586, V595]

================================

Block 0x828
[0x828:0x83b]
---
Predecessors: [0x80d]
Successors: [0x83c, 0x855]
---
0x828 JUMPDEST
0x829 POP
0x82a POP
0x82b POP
0x82c POP
0x82d SWAP1
0x82e POP
0x82f SWAP1
0x830 DUP2
0x831 ADD
0x832 SWAP1
0x833 PUSH1 0x1f
0x835 AND
0x836 DUP1
0x837 ISZERO
0x838 PUSH2 0x855
0x83b JUMPI
---
0x828: JUMPDEST 
0x831: V597 = ADD V584 V583
0x833: V598 = 0x1f
0x835: V599 = AND 0x1f V584
0x837: V600 = ISZERO V599
0x838: V601 = 0x855
0x83b: JUMPI 0x855 V600
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V559, 0xc0ee0b8a, V561, S10, S9, V569, V577, V583, V586, V584, V584, V583, V586, S0]
Stack pops: 7
Stack additions: [V597, V599]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V559, 0xc0ee0b8a, V561, S10, S9, V569, V577, V597, V599]

================================

Block 0x83c
[0x83c:0x854]
---
Predecessors: [0x828]
Successors: [0x855]
---
0x83c DUP1
0x83d DUP3
0x83e SUB
0x83f DUP1
0x840 MLOAD
0x841 PUSH1 0x1
0x843 DUP4
0x844 PUSH1 0x20
0x846 SUB
0x847 PUSH2 0x100
0x84a EXP
0x84b SUB
0x84c NOT
0x84d AND
0x84e DUP2
0x84f MSTORE
0x850 PUSH1 0x20
0x852 ADD
0x853 SWAP2
0x854 POP
---
0x83e: V602 = SUB V597 V599
0x840: V603 = M[V602]
0x841: V604 = 0x1
0x844: V605 = 0x20
0x846: V606 = SUB 0x20 V599
0x847: V607 = 0x100
0x84a: V608 = EXP 0x100 V606
0x84b: V609 = SUB V608 0x1
0x84c: V610 = NOT V609
0x84d: V611 = AND V610 V603
0x84f: M[V602] = V611
0x850: V612 = 0x20
0x852: V613 = ADD 0x20 V602
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V559, 0xc0ee0b8a, V561, S5, S4, V569, V577, V597, V599]
Stack pops: 2
Stack additions: [V613, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V559, 0xc0ee0b8a, V561, S5, S4, V569, V577, V613, V599]

================================

Block 0x855
[0x855:0x871]
---
Predecessors: [0x828, 0x83c]
Successors: [0x872, 0x876]
---
0x855 JUMPDEST
0x856 POP
0x857 SWAP5
0x858 POP
0x859 POP
0x85a POP
0x85b POP
0x85c POP
0x85d PUSH1 0x0
0x85f PUSH1 0x40
0x861 MLOAD
0x862 DUP1
0x863 DUP4
0x864 SUB
0x865 DUP2
0x866 PUSH1 0x0
0x868 DUP8
0x869 DUP1
0x86a EXTCODESIZE
0x86b ISZERO
0x86c DUP1
0x86d ISZERO
0x86e PUSH2 0x876
0x871 JUMPI
---
0x855: JUMPDEST 
0x85d: V614 = 0x0
0x85f: V615 = 0x40
0x861: V616 = M[0x40]
0x864: V617 = SUB S1 V616
0x866: V618 = 0x0
0x86a: V619 = EXTCODESIZE V559
0x86b: V620 = ISZERO V619
0x86d: V621 = ISZERO V620
0x86e: V622 = 0x876
0x871: JUMPI 0x876 V621
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V559, 0xc0ee0b8a, V561, S5, S4, V569, V577, S1, V599]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V616, V617, V616, 0x0, S8, V620]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V559, 0xc0ee0b8a, S1, 0x0, V616, V617, V616, 0x0, V559, V620]

================================

Block 0x872
[0x872:0x875]
---
Predecessors: [0x855]
Successors: []
---
0x872 PUSH1 0x0
0x874 DUP1
0x875 REVERT
---
0x872: V623 = 0x0
0x875: REVERT 0x0 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V559, 0xc0ee0b8a, S7, 0x0, V616, V617, V616, 0x0, V559, V620]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V559, 0xc0ee0b8a, S7, 0x0, V616, V617, V616, 0x0, V559, V620]

================================

Block 0x876
[0x876:0x880]
---
Predecessors: [0x855]
Successors: [0x881, 0x88a]
---
0x876 JUMPDEST
0x877 POP
0x878 GAS
0x879 CALL
0x87a ISZERO
0x87b DUP1
0x87c ISZERO
0x87d PUSH2 0x88a
0x880 JUMPI
---
0x876: JUMPDEST 
0x878: V624 = GAS
0x879: V625 = CALL V624 V559 0x0 V616 V617 V616 0x0
0x87a: V626 = ISZERO V625
0x87c: V627 = ISZERO V626
0x87d: V628 = 0x88a
0x880: JUMPI 0x88a V627
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V559, 0xc0ee0b8a, S7, 0x0, V616, V617, V616, 0x0, V559, V620]
Stack pops: 7
Stack additions: [V626]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V559, 0xc0ee0b8a, S7, V626]

================================

Block 0x881
[0x881:0x889]
---
Predecessors: [0x876]
Successors: []
---
0x881 RETURNDATASIZE
0x882 PUSH1 0x0
0x884 DUP1
0x885 RETURNDATACOPY
0x886 RETURNDATASIZE
0x887 PUSH1 0x0
0x889 REVERT
---
0x881: V629 = RETURNDATASIZE
0x882: V630 = 0x0
0x885: RETURNDATACOPY 0x0 0x0 V629
0x886: V631 = RETURNDATASIZE
0x887: V632 = 0x0
0x889: REVERT 0x0 V631
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4, V559, 0xc0ee0b8a, S1, V626]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4, V559, 0xc0ee0b8a, S1, V626]

================================

Block 0x88a
[0x88a:0x88e]
---
Predecessors: [0x876]
Successors: [0x88f]
---
0x88a JUMPDEST
0x88b POP
0x88c POP
0x88d POP
0x88e POP
---
0x88a: JUMPDEST 
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4, V559, 0xc0ee0b8a, S1, V626]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4]

================================

Block 0x88f
[0x88f:0x904]
---
Predecessors: [0x75e, 0x88a]
Successors: [0x905]
---
0x88f JUMPDEST
0x890 DUP4
0x891 DUP6
0x892 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a7 AND
0x8a8 CALLER
0x8a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8be AND
0x8bf PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x8e0 DUP6
0x8e1 PUSH1 0x40
0x8e3 MLOAD
0x8e4 DUP1
0x8e5 DUP1
0x8e6 PUSH1 0x20
0x8e8 ADD
0x8e9 DUP3
0x8ea DUP2
0x8eb SUB
0x8ec DUP3
0x8ed MSTORE
0x8ee DUP4
0x8ef DUP2
0x8f0 DUP2
0x8f1 MLOAD
0x8f2 DUP2
0x8f3 MSTORE
0x8f4 PUSH1 0x20
0x8f6 ADD
0x8f7 SWAP2
0x8f8 POP
0x8f9 DUP1
0x8fa MLOAD
0x8fb SWAP1
0x8fc PUSH1 0x20
0x8fe ADD
0x8ff SWAP1
0x900 DUP1
0x901 DUP4
0x902 DUP4
0x903 PUSH1 0x0
---
0x88f: JUMPDEST 
0x892: V633 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a7: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x8a8: V635 = CALLER
0x8a9: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x8be: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x8bf: V638 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x8e1: V639 = 0x40
0x8e3: V640 = M[0x40]
0x8e6: V641 = 0x20
0x8e8: V642 = ADD 0x20 V640
0x8eb: V643 = SUB V642 V640
0x8ed: M[V640] = V643
0x8f1: V644 = M[S1]
0x8f3: M[V642] = V644
0x8f4: V645 = 0x20
0x8f6: V646 = ADD 0x20 V642
0x8fa: V647 = M[S1]
0x8fc: V648 = 0x20
0x8fe: V649 = ADD 0x20 S1
0x903: V650 = 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S3, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S1, V640, V640, V646, V649, V647, V647, V646, V649, 0x0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, S0, S3, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S1, V640, V640, V646, V649, V647, V647, V646, V649, 0x0]

================================

Block 0x905
[0x905:0x90d]
---
Predecessors: [0x88f, 0x90e]
Successors: [0x90e, 0x920]
---
0x905 JUMPDEST
0x906 DUP4
0x907 DUP2
0x908 LT
0x909 ISZERO
0x90a PUSH2 0x920
0x90d JUMPI
---
0x905: JUMPDEST 
0x908: V651 = LT S0 V647
0x909: V652 = ISZERO V651
0x90a: V653 = 0x920
0x90d: JUMPI 0x920 V652
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V640, V640, V646, V649, V647, V647, V646, V649, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V640, V640, V646, V649, V647, V647, V646, V649, S0]

================================

Block 0x90e
[0x90e:0x91f]
---
Predecessors: [0x905]
Successors: [0x905]
---
0x90e DUP1
0x90f DUP3
0x910 ADD
0x911 MLOAD
0x912 DUP2
0x913 DUP5
0x914 ADD
0x915 MSTORE
0x916 PUSH1 0x20
0x918 DUP2
0x919 ADD
0x91a SWAP1
0x91b POP
0x91c PUSH2 0x905
0x91f JUMP
---
0x910: V654 = ADD V649 S0
0x911: V655 = M[V654]
0x914: V656 = ADD V646 S0
0x915: M[V656] = V655
0x916: V657 = 0x20
0x919: V658 = ADD S0 0x20
0x91c: V659 = 0x905
0x91f: JUMP 0x905
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V640, V640, V646, V649, V647, V647, V646, V649, S0]
Stack pops: 3
Stack additions: [S2, S1, V658]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V640, V640, V646, V649, V647, V647, V646, V649, V658]

================================

Block 0x920
[0x920:0x933]
---
Predecessors: [0x905]
Successors: [0x934, 0x94d]
---
0x920 JUMPDEST
0x921 POP
0x922 POP
0x923 POP
0x924 POP
0x925 SWAP1
0x926 POP
0x927 SWAP1
0x928 DUP2
0x929 ADD
0x92a SWAP1
0x92b PUSH1 0x1f
0x92d AND
0x92e DUP1
0x92f ISZERO
0x930 PUSH2 0x94d
0x933 JUMPI
---
0x920: JUMPDEST 
0x929: V660 = ADD V647 V646
0x92b: V661 = 0x1f
0x92d: V662 = AND 0x1f V647
0x92f: V663 = ISZERO V662
0x930: V664 = 0x94d
0x933: JUMPI 0x94d V663
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V640, V640, V646, V649, V647, V647, V646, V649, S0]
Stack pops: 7
Stack additions: [V660, V662]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V640, V640, V660, V662]

================================

Block 0x934
[0x934:0x94c]
---
Predecessors: [0x920]
Successors: [0x94d]
---
0x934 DUP1
0x935 DUP3
0x936 SUB
0x937 DUP1
0x938 MLOAD
0x939 PUSH1 0x1
0x93b DUP4
0x93c PUSH1 0x20
0x93e SUB
0x93f PUSH2 0x100
0x942 EXP
0x943 SUB
0x944 NOT
0x945 AND
0x946 DUP2
0x947 MSTORE
0x948 PUSH1 0x20
0x94a ADD
0x94b SWAP2
0x94c POP
---
0x936: V665 = SUB V660 V662
0x938: V666 = M[V665]
0x939: V667 = 0x1
0x93c: V668 = 0x20
0x93e: V669 = SUB 0x20 V662
0x93f: V670 = 0x100
0x942: V671 = EXP 0x100 V669
0x943: V672 = SUB V671 0x1
0x944: V673 = NOT V672
0x945: V674 = AND V673 V666
0x947: M[V665] = V674
0x948: V675 = 0x20
0x94a: V676 = ADD 0x20 V665
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, S8, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V640, V640, V660, V662]
Stack pops: 2
Stack additions: [V676, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, S8, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V640, V640, V676, V662]

================================

Block 0x94d
[0x94d:0x965]
---
Predecessors: [0x920, 0x934]
Successors: [0x2b1, 0x35c, 0x44d]
---
0x94d JUMPDEST
0x94e POP
0x94f SWAP3
0x950 POP
0x951 POP
0x952 POP
0x953 PUSH1 0x40
0x955 MLOAD
0x956 DUP1
0x957 SWAP2
0x958 SUB
0x959 SWAP1
0x95a LOG4
0x95b PUSH1 0x1
0x95d SWAP3
0x95e POP
0x95f POP
0x960 POP
0x961 SWAP3
0x962 SWAP2
0x963 POP
0x964 POP
0x965 JUMP
---
0x94d: JUMPDEST 
0x953: V677 = 0x40
0x955: V678 = M[0x40]
0x958: V679 = SUB S1 V678
0x95a: LOG V678 V679 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V637 V634 S8
0x95b: V680 = 0x1
0x965: JUMP {0x2b1, 0x35c, 0x44d}
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, S8, V634, V637, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V640, V640, S1, V662]
Stack pops: 15
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x966
[0x966:0x972]
---
Predecessors: [0x2d7]
Successors: [0x52a]
---
0x966 JUMPDEST
0x967 PUSH1 0x0
0x969 DUP1
0x96a DUP4
0x96b PUSH2 0x973
0x96e CALLER
0x96f PUSH2 0x52a
0x972 JUMP
---
0x966: JUMPDEST 
0x967: V681 = 0x0
0x96b: V682 = 0x973
0x96e: V683 = CALLER
0x96f: V684 = 0x52a
0x972: JUMP 0x52a
---
Entry stack: [V11, 0x35c, V223, V226, V244]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S1, 0x973, V683]
Exit stack: [V11, 0x35c, V223, V226, V244, 0x0, 0x0, V226, 0x973, V683]

================================

Block 0x973
[0x973:0x979]
---
Predecessors: [0x52a]
Successors: [0x97a, 0x97e]
---
0x973 JUMPDEST
0x974 LT
0x975 ISZERO
0x976 PUSH2 0x97e
0x979 JUMPI
---
0x973: JUMPDEST 
0x974: V685 = LT V422 S1
0x975: V686 = ISZERO V685
0x976: V687 = 0x97e
0x979: JUMPI 0x97e V686
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0, S1, V422]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0]

================================

Block 0x97a
[0x97a:0x97d]
---
Predecessors: [0x973]
Successors: []
---
0x97a PUSH1 0x0
0x97c DUP1
0x97d REVERT
---
0x97a: V688 = 0x0
0x97d: REVERT 0x0 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]

================================

Block 0x97e
[0x97e:0x9ce]
---
Predecessors: [0x973]
Successors: [0x1055]
---
0x97e JUMPDEST
0x97f PUSH2 0x9cf
0x982 DUP5
0x983 PUSH1 0x0
0x985 DUP1
0x986 CALLER
0x987 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99c AND
0x99d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b2 AND
0x9b3 DUP2
0x9b4 MSTORE
0x9b5 PUSH1 0x20
0x9b7 ADD
0x9b8 SWAP1
0x9b9 DUP2
0x9ba MSTORE
0x9bb PUSH1 0x20
0x9bd ADD
0x9be PUSH1 0x0
0x9c0 SHA3
0x9c1 SLOAD
0x9c2 PUSH2 0x1055
0x9c5 SWAP1
0x9c6 SWAP2
0x9c7 SWAP1
0x9c8 PUSH4 0xffffffff
0x9cd AND
0x9ce JUMP
---
0x97e: JUMPDEST 
0x97f: V689 = 0x9cf
0x983: V690 = 0x0
0x986: V691 = CALLER
0x987: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0x99c: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x99d: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b2: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x9b4: M[0x0] = V695
0x9b5: V696 = 0x20
0x9b7: V697 = ADD 0x20 0x0
0x9ba: M[0x20] = 0x0
0x9bb: V698 = 0x20
0x9bd: V699 = ADD 0x20 0x20
0x9be: V700 = 0x0
0x9c0: V701 = SHA3 0x0 0x40
0x9c1: V702 = S[V701]
0x9c2: V703 = 0x1055
0x9c8: V704 = 0xffffffff
0x9cd: V705 = AND 0xffffffff 0x1055
0x9ce: JUMP 0x1055
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x9cf, V702, S3]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0, 0x9cf, V702, S3]

================================

Block 0x9cf
[0x9cf:0xa61]
---
Predecessors: [0x1063]
Successors: [0x106e]
---
0x9cf JUMPDEST
0x9d0 PUSH1 0x0
0x9d2 DUP1
0x9d3 CALLER
0x9d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e9 AND
0x9ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ff AND
0xa00 DUP2
0xa01 MSTORE
0xa02 PUSH1 0x20
0xa04 ADD
0xa05 SWAP1
0xa06 DUP2
0xa07 MSTORE
0xa08 PUSH1 0x20
0xa0a ADD
0xa0b PUSH1 0x0
0xa0d SHA3
0xa0e DUP2
0xa0f SWAP1
0xa10 SSTORE
0xa11 POP
0xa12 PUSH2 0xa62
0xa15 DUP5
0xa16 PUSH1 0x0
0xa18 DUP1
0xa19 DUP9
0xa1a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2f AND
0xa30 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa45 AND
0xa46 DUP2
0xa47 MSTORE
0xa48 PUSH1 0x20
0xa4a ADD
0xa4b SWAP1
0xa4c DUP2
0xa4d MSTORE
0xa4e PUSH1 0x20
0xa50 ADD
0xa51 PUSH1 0x0
0xa53 SHA3
0xa54 SLOAD
0xa55 PUSH2 0x106e
0xa58 SWAP1
0xa59 SWAP2
0xa5a SWAP1
0xa5b PUSH4 0xffffffff
0xa60 AND
0xa61 JUMP
---
0x9cf: JUMPDEST 
0x9d0: V706 = 0x0
0x9d3: V707 = CALLER
0x9d4: V708 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e9: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
0x9ea: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ff: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0xa01: M[0x0] = V711
0xa02: V712 = 0x20
0xa04: V713 = ADD 0x20 0x0
0xa07: M[0x20] = 0x0
0xa08: V714 = 0x20
0xa0a: V715 = ADD 0x20 0x20
0xa0b: V716 = 0x0
0xa0d: V717 = SHA3 0x0 0x40
0xa10: S[V717] = V1090
0xa12: V718 = 0xa62
0xa16: V719 = 0x0
0xa1a: V720 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2f: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xa30: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xa45: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0xa47: M[0x0] = V723
0xa48: V724 = 0x20
0xa4a: V725 = ADD 0x20 0x0
0xa4d: M[0x20] = 0x0
0xa4e: V726 = 0x20
0xa50: V727 = ADD 0x20 0x20
0xa51: V728 = 0x0
0xa53: V729 = SHA3 0x0 0x40
0xa54: V730 = S[V729]
0xa55: V731 = 0x106e
0xa5b: V732 = 0xffffffff
0xa60: V733 = AND 0xffffffff 0x106e
0xa61: JUMP 0x106e
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, V1090]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0xa62, V730, S4]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, 0xa62, V730, S4]

================================

Block 0xa62
[0xa62:0xaac]
---
Predecessors: [0x1082]
Successors: [0x108c]
---
0xa62 JUMPDEST
0xa63 PUSH1 0x0
0xa65 DUP1
0xa66 DUP8
0xa67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7c AND
0xa7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa92 AND
0xa93 DUP2
0xa94 MSTORE
0xa95 PUSH1 0x20
0xa97 ADD
0xa98 SWAP1
0xa99 DUP2
0xa9a MSTORE
0xa9b PUSH1 0x20
0xa9d ADD
0xa9e PUSH1 0x0
0xaa0 SHA3
0xaa1 DUP2
0xaa2 SWAP1
0xaa3 SSTORE
0xaa4 POP
0xaa5 PUSH2 0xaad
0xaa8 DUP6
0xaa9 PUSH2 0x108c
0xaac JUMP
---
0xa62: JUMPDEST 
0xa63: V734 = 0x0
0xa67: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7c: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xa7d: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0xa94: M[0x0] = V738
0xa95: V739 = 0x20
0xa97: V740 = ADD 0x20 0x0
0xa9a: M[0x20] = 0x0
0xa9b: V741 = 0x20
0xa9d: V742 = ADD 0x20 0x20
0xa9e: V743 = 0x0
0xaa0: V744 = SHA3 0x0 0x40
0xaa3: S[V744] = S0
0xaa5: V745 = 0xaad
0xaa9: V746 = 0x108c
0xaac: JUMP 0x108c
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0xaad, S5]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, 0xaad, S5]

================================

Block 0xaad
[0xaad:0xab2]
---
Predecessors: [0x108c]
Successors: [0xab3, 0xbde]
---
0xaad JUMPDEST
0xaae ISZERO
0xaaf PUSH2 0xbde
0xab2 JUMPI
---
0xaad: JUMPDEST 
0xaae: V747 = ISZERO V1101
0xaaf: V748 = 0xbde
0xab2: JUMPI 0xbde V747
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, V1101]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0]

================================

Block 0xab3
[0xab3:0xb5b]
---
Predecessors: [0xaad]
Successors: [0xb5c]
---
0xab3 DUP5
0xab4 SWAP1
0xab5 POP
0xab6 DUP1
0xab7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacc AND
0xacd PUSH4 0xc0ee0b8a
0xad2 CALLER
0xad3 DUP7
0xad4 DUP7
0xad5 PUSH1 0x40
0xad7 MLOAD
0xad8 DUP5
0xad9 PUSH4 0xffffffff
0xade AND
0xadf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xafd MUL
0xafe DUP2
0xaff MSTORE
0xb00 PUSH1 0x4
0xb02 ADD
0xb03 DUP1
0xb04 DUP5
0xb05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1a AND
0xb1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb30 AND
0xb31 DUP2
0xb32 MSTORE
0xb33 PUSH1 0x20
0xb35 ADD
0xb36 DUP4
0xb37 DUP2
0xb38 MSTORE
0xb39 PUSH1 0x20
0xb3b ADD
0xb3c DUP1
0xb3d PUSH1 0x20
0xb3f ADD
0xb40 DUP3
0xb41 DUP2
0xb42 SUB
0xb43 DUP3
0xb44 MSTORE
0xb45 DUP4
0xb46 DUP2
0xb47 DUP2
0xb48 MLOAD
0xb49 DUP2
0xb4a MSTORE
0xb4b PUSH1 0x20
0xb4d ADD
0xb4e SWAP2
0xb4f POP
0xb50 DUP1
0xb51 MLOAD
0xb52 SWAP1
0xb53 PUSH1 0x20
0xb55 ADD
0xb56 SWAP1
0xb57 DUP1
0xb58 DUP4
0xb59 DUP4
0xb5a PUSH1 0x0
---
0xab7: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xacd: V751 = 0xc0ee0b8a
0xad2: V752 = CALLER
0xad5: V753 = 0x40
0xad7: V754 = M[0x40]
0xad9: V755 = 0xffffffff
0xade: V756 = AND 0xffffffff 0xc0ee0b8a
0xadf: V757 = 0x100000000000000000000000000000000000000000000000000000000
0xafd: V758 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0xaff: M[V754] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0xb00: V759 = 0x4
0xb02: V760 = ADD 0x4 V754
0xb05: V761 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1a: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V752
0xb1b: V763 = 0xffffffffffffffffffffffffffffffffffffffff
0xb30: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0xb32: M[V760] = V764
0xb33: V765 = 0x20
0xb35: V766 = ADD 0x20 V760
0xb38: M[V766] = S3
0xb39: V767 = 0x20
0xb3b: V768 = ADD 0x20 V766
0xb3d: V769 = 0x20
0xb3f: V770 = ADD 0x20 V768
0xb42: V771 = SUB V770 V760
0xb44: M[V768] = V771
0xb48: V772 = M[S2]
0xb4a: M[V770] = V772
0xb4b: V773 = 0x20
0xb4d: V774 = ADD 0x20 V770
0xb51: V775 = M[S2]
0xb53: V776 = 0x20
0xb55: V777 = ADD 0x20 S2
0xb5a: V778 = 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V750, 0xc0ee0b8a, V752, S3, S2, V760, V768, V774, V777, V775, V775, V774, V777, 0x0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, S4, V750, 0xc0ee0b8a, V752, S3, S2, V760, V768, V774, V777, V775, V775, V774, V777, 0x0]

================================

Block 0xb5c
[0xb5c:0xb64]
---
Predecessors: [0xab3, 0xb65]
Successors: [0xb65, 0xb77]
---
0xb5c JUMPDEST
0xb5d DUP4
0xb5e DUP2
0xb5f LT
0xb60 ISZERO
0xb61 PUSH2 0xb77
0xb64 JUMPI
---
0xb5c: JUMPDEST 
0xb5f: V779 = LT S0 V775
0xb60: V780 = ISZERO V779
0xb61: V781 = 0xb77
0xb64: JUMPI 0xb77 V780
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V750, 0xc0ee0b8a, V752, S10, S9, V760, V768, V774, V777, V775, V775, V774, V777, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V750, 0xc0ee0b8a, V752, S10, S9, V760, V768, V774, V777, V775, V775, V774, V777, S0]

================================

Block 0xb65
[0xb65:0xb76]
---
Predecessors: [0xb5c]
Successors: [0xb5c]
---
0xb65 DUP1
0xb66 DUP3
0xb67 ADD
0xb68 MLOAD
0xb69 DUP2
0xb6a DUP5
0xb6b ADD
0xb6c MSTORE
0xb6d PUSH1 0x20
0xb6f DUP2
0xb70 ADD
0xb71 SWAP1
0xb72 POP
0xb73 PUSH2 0xb5c
0xb76 JUMP
---
0xb67: V782 = ADD V777 S0
0xb68: V783 = M[V782]
0xb6b: V784 = ADD V774 S0
0xb6c: M[V784] = V783
0xb6d: V785 = 0x20
0xb70: V786 = ADD S0 0x20
0xb73: V787 = 0xb5c
0xb76: JUMP 0xb5c
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V750, 0xc0ee0b8a, V752, S10, S9, V760, V768, V774, V777, V775, V775, V774, V777, S0]
Stack pops: 3
Stack additions: [S2, S1, V786]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V750, 0xc0ee0b8a, V752, S10, S9, V760, V768, V774, V777, V775, V775, V774, V777, V786]

================================

Block 0xb77
[0xb77:0xb8a]
---
Predecessors: [0xb5c]
Successors: [0xb8b, 0xba4]
---
0xb77 JUMPDEST
0xb78 POP
0xb79 POP
0xb7a POP
0xb7b POP
0xb7c SWAP1
0xb7d POP
0xb7e SWAP1
0xb7f DUP2
0xb80 ADD
0xb81 SWAP1
0xb82 PUSH1 0x1f
0xb84 AND
0xb85 DUP1
0xb86 ISZERO
0xb87 PUSH2 0xba4
0xb8a JUMPI
---
0xb77: JUMPDEST 
0xb80: V788 = ADD V775 V774
0xb82: V789 = 0x1f
0xb84: V790 = AND 0x1f V775
0xb86: V791 = ISZERO V790
0xb87: V792 = 0xba4
0xb8a: JUMPI 0xba4 V791
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V750, 0xc0ee0b8a, V752, S10, S9, V760, V768, V774, V777, V775, V775, V774, V777, S0]
Stack pops: 7
Stack additions: [V788, V790]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, V750, 0xc0ee0b8a, V752, S10, S9, V760, V768, V788, V790]

================================

Block 0xb8b
[0xb8b:0xba3]
---
Predecessors: [0xb77]
Successors: [0xba4]
---
0xb8b DUP1
0xb8c DUP3
0xb8d SUB
0xb8e DUP1
0xb8f MLOAD
0xb90 PUSH1 0x1
0xb92 DUP4
0xb93 PUSH1 0x20
0xb95 SUB
0xb96 PUSH2 0x100
0xb99 EXP
0xb9a SUB
0xb9b NOT
0xb9c AND
0xb9d DUP2
0xb9e MSTORE
0xb9f PUSH1 0x20
0xba1 ADD
0xba2 SWAP2
0xba3 POP
---
0xb8d: V793 = SUB V788 V790
0xb8f: V794 = M[V793]
0xb90: V795 = 0x1
0xb93: V796 = 0x20
0xb95: V797 = SUB 0x20 V790
0xb96: V798 = 0x100
0xb99: V799 = EXP 0x100 V797
0xb9a: V800 = SUB V799 0x1
0xb9b: V801 = NOT V800
0xb9c: V802 = AND V801 V794
0xb9e: M[V793] = V802
0xb9f: V803 = 0x20
0xba1: V804 = ADD 0x20 V793
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V750, 0xc0ee0b8a, V752, S5, S4, V760, V768, V788, V790]
Stack pops: 2
Stack additions: [V804, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V750, 0xc0ee0b8a, V752, S5, S4, V760, V768, V804, V790]

================================

Block 0xba4
[0xba4:0xbc0]
---
Predecessors: [0xb77, 0xb8b]
Successors: [0xbc1, 0xbc5]
---
0xba4 JUMPDEST
0xba5 POP
0xba6 SWAP5
0xba7 POP
0xba8 POP
0xba9 POP
0xbaa POP
0xbab POP
0xbac PUSH1 0x0
0xbae PUSH1 0x40
0xbb0 MLOAD
0xbb1 DUP1
0xbb2 DUP4
0xbb3 SUB
0xbb4 DUP2
0xbb5 PUSH1 0x0
0xbb7 DUP8
0xbb8 DUP1
0xbb9 EXTCODESIZE
0xbba ISZERO
0xbbb DUP1
0xbbc ISZERO
0xbbd PUSH2 0xbc5
0xbc0 JUMPI
---
0xba4: JUMPDEST 
0xbac: V805 = 0x0
0xbae: V806 = 0x40
0xbb0: V807 = M[0x40]
0xbb3: V808 = SUB S1 V807
0xbb5: V809 = 0x0
0xbb9: V810 = EXTCODESIZE V750
0xbba: V811 = ISZERO V810
0xbbc: V812 = ISZERO V811
0xbbd: V813 = 0xbc5
0xbc0: JUMPI 0xbc5 V812
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V750, 0xc0ee0b8a, V752, S5, S4, V760, V768, S1, V790]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V807, V808, V807, 0x0, S8, V811]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, V750, 0xc0ee0b8a, S1, 0x0, V807, V808, V807, 0x0, V750, V811]

================================

Block 0xbc1
[0xbc1:0xbc4]
---
Predecessors: [0xba4]
Successors: []
---
0xbc1 PUSH1 0x0
0xbc3 DUP1
0xbc4 REVERT
---
0xbc1: V814 = 0x0
0xbc4: REVERT 0x0 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V750, 0xc0ee0b8a, S7, 0x0, V807, V808, V807, 0x0, V750, V811]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V750, 0xc0ee0b8a, S7, 0x0, V807, V808, V807, 0x0, V750, V811]

================================

Block 0xbc5
[0xbc5:0xbcf]
---
Predecessors: [0xba4]
Successors: [0xbd0, 0xbd9]
---
0xbc5 JUMPDEST
0xbc6 POP
0xbc7 GAS
0xbc8 CALL
0xbc9 ISZERO
0xbca DUP1
0xbcb ISZERO
0xbcc PUSH2 0xbd9
0xbcf JUMPI
---
0xbc5: JUMPDEST 
0xbc7: V815 = GAS
0xbc8: V816 = CALL V815 V750 0x0 V807 V808 V807 0x0
0xbc9: V817 = ISZERO V816
0xbcb: V818 = ISZERO V817
0xbcc: V819 = 0xbd9
0xbcf: JUMPI 0xbd9 V818
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V750, 0xc0ee0b8a, S7, 0x0, V807, V808, V807, 0x0, V750, V811]
Stack pops: 7
Stack additions: [V817]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, S10, V750, 0xc0ee0b8a, S7, V817]

================================

Block 0xbd0
[0xbd0:0xbd8]
---
Predecessors: [0xbc5]
Successors: []
---
0xbd0 RETURNDATASIZE
0xbd1 PUSH1 0x0
0xbd3 DUP1
0xbd4 RETURNDATACOPY
0xbd5 RETURNDATASIZE
0xbd6 PUSH1 0x0
0xbd8 REVERT
---
0xbd0: V820 = RETURNDATASIZE
0xbd1: V821 = 0x0
0xbd4: RETURNDATACOPY 0x0 0x0 V820
0xbd5: V822 = RETURNDATASIZE
0xbd6: V823 = 0x0
0xbd8: REVERT 0x0 V822
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4, V750, 0xc0ee0b8a, S1, V817]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4, V750, 0xc0ee0b8a, S1, V817]

================================

Block 0xbd9
[0xbd9:0xbdd]
---
Predecessors: [0xbc5]
Successors: [0xbde]
---
0xbd9 JUMPDEST
0xbda POP
0xbdb POP
0xbdc POP
0xbdd POP
---
0xbd9: JUMPDEST 
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4, V750, 0xc0ee0b8a, S1, V817]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, S4]

================================

Block 0xbde
[0xbde:0xc53]
---
Predecessors: [0xaad, 0xbd9]
Successors: [0xc54]
---
0xbde JUMPDEST
0xbdf DUP4
0xbe0 DUP6
0xbe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf6 AND
0xbf7 CALLER
0xbf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0d AND
0xc0e PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0xc2f DUP7
0xc30 PUSH1 0x40
0xc32 MLOAD
0xc33 DUP1
0xc34 DUP1
0xc35 PUSH1 0x20
0xc37 ADD
0xc38 DUP3
0xc39 DUP2
0xc3a SUB
0xc3b DUP3
0xc3c MSTORE
0xc3d DUP4
0xc3e DUP2
0xc3f DUP2
0xc40 MLOAD
0xc41 DUP2
0xc42 MSTORE
0xc43 PUSH1 0x20
0xc45 ADD
0xc46 SWAP2
0xc47 POP
0xc48 DUP1
0xc49 MLOAD
0xc4a SWAP1
0xc4b PUSH1 0x20
0xc4d ADD
0xc4e SWAP1
0xc4f DUP1
0xc50 DUP4
0xc51 DUP4
0xc52 PUSH1 0x0
---
0xbde: JUMPDEST 
0xbe1: V824 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf6: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xbf7: V826 = CALLER
0xbf8: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0d: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0xc0e: V829 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0xc30: V830 = 0x40
0xc32: V831 = M[0x40]
0xc35: V832 = 0x20
0xc37: V833 = ADD 0x20 V831
0xc3a: V834 = SUB V833 V831
0xc3c: M[V831] = V834
0xc40: V835 = M[S2]
0xc42: M[V833] = V835
0xc43: V836 = 0x20
0xc45: V837 = ADD 0x20 V833
0xc49: V838 = M[S2]
0xc4b: V839 = 0x20
0xc4d: V840 = ADD 0x20 S2
0xc52: V841 = 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S3, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S2, V831, V831, V837, V840, V838, V838, V837, V840, 0x0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, S0, S3, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S2, V831, V831, V837, V840, V838, V838, V837, V840, 0x0]

================================

Block 0xc54
[0xc54:0xc5c]
---
Predecessors: [0xbde, 0xc5d]
Successors: [0xc5d, 0xc6f]
---
0xc54 JUMPDEST
0xc55 DUP4
0xc56 DUP2
0xc57 LT
0xc58 ISZERO
0xc59 PUSH2 0xc6f
0xc5c JUMPI
---
0xc54: JUMPDEST 
0xc57: V842 = LT S0 V838
0xc58: V843 = ISZERO V842
0xc59: V844 = 0xc6f
0xc5c: JUMPI 0xc6f V843
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V831, V831, V837, V840, V838, V838, V837, V840, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V831, V831, V837, V840, V838, V838, V837, V840, S0]

================================

Block 0xc5d
[0xc5d:0xc6e]
---
Predecessors: [0xc54]
Successors: [0xc54]
---
0xc5d DUP1
0xc5e DUP3
0xc5f ADD
0xc60 MLOAD
0xc61 DUP2
0xc62 DUP5
0xc63 ADD
0xc64 MSTORE
0xc65 PUSH1 0x20
0xc67 DUP2
0xc68 ADD
0xc69 SWAP1
0xc6a POP
0xc6b PUSH2 0xc54
0xc6e JUMP
---
0xc5f: V845 = ADD V840 S0
0xc60: V846 = M[V845]
0xc63: V847 = ADD V837 S0
0xc64: M[V847] = V846
0xc65: V848 = 0x20
0xc68: V849 = ADD S0 0x20
0xc6b: V850 = 0xc54
0xc6e: JUMP 0xc54
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V831, V831, V837, V840, V838, V838, V837, V840, S0]
Stack pops: 3
Stack additions: [S2, S1, V849]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V831, V831, V837, V840, V838, V838, V837, V840, V849]

================================

Block 0xc6f
[0xc6f:0xc82]
---
Predecessors: [0xc54]
Successors: [0xc83, 0xc9c]
---
0xc6f JUMPDEST
0xc70 POP
0xc71 POP
0xc72 POP
0xc73 POP
0xc74 SWAP1
0xc75 POP
0xc76 SWAP1
0xc77 DUP2
0xc78 ADD
0xc79 SWAP1
0xc7a PUSH1 0x1f
0xc7c AND
0xc7d DUP1
0xc7e ISZERO
0xc7f PUSH2 0xc9c
0xc82 JUMPI
---
0xc6f: JUMPDEST 
0xc78: V851 = ADD V838 V837
0xc7a: V852 = 0x1f
0xc7c: V853 = AND 0x1f V838
0xc7e: V854 = ISZERO V853
0xc7f: V855 = 0xc9c
0xc82: JUMPI 0xc9c V854
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V831, V831, V837, V840, V838, V838, V837, V840, S0]
Stack pops: 7
Stack additions: [V851, V853]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, S14, S13, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V831, V831, V851, V853]

================================

Block 0xc83
[0xc83:0xc9b]
---
Predecessors: [0xc6f]
Successors: [0xc9c]
---
0xc83 DUP1
0xc84 DUP3
0xc85 SUB
0xc86 DUP1
0xc87 MLOAD
0xc88 PUSH1 0x1
0xc8a DUP4
0xc8b PUSH1 0x20
0xc8d SUB
0xc8e PUSH2 0x100
0xc91 EXP
0xc92 SUB
0xc93 NOT
0xc94 AND
0xc95 DUP2
0xc96 MSTORE
0xc97 PUSH1 0x20
0xc99 ADD
0xc9a SWAP2
0xc9b POP
---
0xc85: V856 = SUB V851 V853
0xc87: V857 = M[V856]
0xc88: V858 = 0x1
0xc8b: V859 = 0x20
0xc8d: V860 = SUB 0x20 V853
0xc8e: V861 = 0x100
0xc91: V862 = EXP 0x100 V860
0xc92: V863 = SUB V862 0x1
0xc93: V864 = NOT V863
0xc94: V865 = AND V864 V857
0xc96: M[V856] = V865
0xc97: V866 = 0x20
0xc99: V867 = ADD 0x20 V856
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, S8, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V831, V831, V851, V853]
Stack pops: 2
Stack additions: [V867, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, S8, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V831, V831, V867, V853]

================================

Block 0xc9c
[0xc9c:0xcb4]
---
Predecessors: [0xc6f, 0xc83]
Successors: [0x2b1, 0x35c, 0x44d]
---
0xc9c JUMPDEST
0xc9d POP
0xc9e SWAP3
0xc9f POP
0xca0 POP
0xca1 POP
0xca2 PUSH1 0x40
0xca4 MLOAD
0xca5 DUP1
0xca6 SWAP2
0xca7 SUB
0xca8 SWAP1
0xca9 LOG4
0xcaa PUSH1 0x1
0xcac SWAP2
0xcad POP
0xcae POP
0xcaf SWAP4
0xcb0 SWAP3
0xcb1 POP
0xcb2 POP
0xcb3 POP
0xcb4 JUMP
---
0xc9c: JUMPDEST 
0xca2: V868 = 0x40
0xca4: V869 = M[0x40]
0xca7: V870 = SUB S1 V869
0xca9: LOG V869 V870 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V828 V825 S8
0xcaa: V871 = 0x1
0xcb4: JUMP {0x2b1, 0x35c, 0x44d}
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, S9, S8, V825, V828, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V831, V831, S1, V853]
Stack pops: 15
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xcb5
[0xcb5:0xcc0]
---
Predecessors: [0x382]
Successors: [0x52a]
---
0xcb5 JUMPDEST
0xcb6 PUSH1 0x0
0xcb8 DUP4
0xcb9 PUSH2 0xcc1
0xcbc CALLER
0xcbd PUSH2 0x52a
0xcc0 JUMP
---
0xcb5: JUMPDEST 
0xcb6: V872 = 0x0
0xcb9: V873 = 0xcc1
0xcbc: V874 = CALLER
0xcbd: V875 = 0x52a
0xcc0: JUMP 0x52a
---
Entry stack: [V11, 0x44d, V273, V276, V294, V315]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S2, 0xcc1, V874]
Exit stack: [V11, 0x44d, V273, V276, V294, V315, 0x0, V276, 0xcc1, V874]

================================

Block 0xcc1
[0xcc1:0xcc7]
---
Predecessors: [0x52a]
Successors: [0xcc8, 0xccc]
---
0xcc1 JUMPDEST
0xcc2 LT
0xcc3 ISZERO
0xcc4 PUSH2 0xccc
0xcc7 JUMPI
---
0xcc1: JUMPDEST 
0xcc2: V876 = LT V422 S1
0xcc3: V877 = ISZERO V876
0xcc4: V878 = 0xccc
0xcc7: JUMPI 0xccc V877
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0, S1, V422]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0]

================================

Block 0xcc8
[0xcc8:0xccb]
---
Predecessors: [0xcc1]
Successors: []
---
0xcc8 PUSH1 0x0
0xcca DUP1
0xccb REVERT
---
0xcc8: V879 = 0x0
0xccb: REVERT 0x0 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]

================================

Block 0xccc
[0xccc:0xd1c]
---
Predecessors: [0xcc1]
Successors: [0x1055]
---
0xccc JUMPDEST
0xccd PUSH2 0xd1d
0xcd0 DUP5
0xcd1 PUSH1 0x0
0xcd3 DUP1
0xcd4 CALLER
0xcd5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcea AND
0xceb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd00 AND
0xd01 DUP2
0xd02 MSTORE
0xd03 PUSH1 0x20
0xd05 ADD
0xd06 SWAP1
0xd07 DUP2
0xd08 MSTORE
0xd09 PUSH1 0x20
0xd0b ADD
0xd0c PUSH1 0x0
0xd0e SHA3
0xd0f SLOAD
0xd10 PUSH2 0x1055
0xd13 SWAP1
0xd14 SWAP2
0xd15 SWAP1
0xd16 PUSH4 0xffffffff
0xd1b AND
0xd1c JUMP
---
0xccc: JUMPDEST 
0xccd: V880 = 0xd1d
0xcd1: V881 = 0x0
0xcd4: V882 = CALLER
0xcd5: V883 = 0xffffffffffffffffffffffffffffffffffffffff
0xcea: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V882
0xceb: V885 = 0xffffffffffffffffffffffffffffffffffffffff
0xd00: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0xd02: M[0x0] = V886
0xd03: V887 = 0x20
0xd05: V888 = ADD 0x20 0x0
0xd08: M[0x20] = 0x0
0xd09: V889 = 0x20
0xd0b: V890 = ADD 0x20 0x20
0xd0c: V891 = 0x0
0xd0e: V892 = SHA3 0x0 0x40
0xd0f: V893 = S[V892]
0xd10: V894 = 0x1055
0xd16: V895 = 0xffffffff
0xd1b: V896 = AND 0xffffffff 0x1055
0xd1c: JUMP 0x1055
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xd1d, V893, S3]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0, 0xd1d, V893, S3]

================================

Block 0xd1d
[0xd1d:0xdaf]
---
Predecessors: [0x1063]
Successors: [0x106e]
---
0xd1d JUMPDEST
0xd1e PUSH1 0x0
0xd20 DUP1
0xd21 CALLER
0xd22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd37 AND
0xd38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4d AND
0xd4e DUP2
0xd4f MSTORE
0xd50 PUSH1 0x20
0xd52 ADD
0xd53 SWAP1
0xd54 DUP2
0xd55 MSTORE
0xd56 PUSH1 0x20
0xd58 ADD
0xd59 PUSH1 0x0
0xd5b SHA3
0xd5c DUP2
0xd5d SWAP1
0xd5e SSTORE
0xd5f POP
0xd60 PUSH2 0xdb0
0xd63 DUP5
0xd64 PUSH1 0x0
0xd66 DUP1
0xd67 DUP9
0xd68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7d AND
0xd7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd93 AND
0xd94 DUP2
0xd95 MSTORE
0xd96 PUSH1 0x20
0xd98 ADD
0xd99 SWAP1
0xd9a DUP2
0xd9b MSTORE
0xd9c PUSH1 0x20
0xd9e ADD
0xd9f PUSH1 0x0
0xda1 SHA3
0xda2 SLOAD
0xda3 PUSH2 0x106e
0xda6 SWAP1
0xda7 SWAP2
0xda8 SWAP1
0xda9 PUSH4 0xffffffff
0xdae AND
0xdaf JUMP
---
0xd1d: JUMPDEST 
0xd1e: V897 = 0x0
0xd21: V898 = CALLER
0xd22: V899 = 0xffffffffffffffffffffffffffffffffffffffff
0xd37: V900 = AND 0xffffffffffffffffffffffffffffffffffffffff V898
0xd38: V901 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4d: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff V900
0xd4f: M[0x0] = V902
0xd50: V903 = 0x20
0xd52: V904 = ADD 0x20 0x0
0xd55: M[0x20] = 0x0
0xd56: V905 = 0x20
0xd58: V906 = ADD 0x20 0x20
0xd59: V907 = 0x0
0xd5b: V908 = SHA3 0x0 0x40
0xd5e: S[V908] = V1090
0xd60: V909 = 0xdb0
0xd64: V910 = 0x0
0xd68: V911 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7d: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xd7e: V913 = 0xffffffffffffffffffffffffffffffffffffffff
0xd93: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xd95: M[0x0] = V914
0xd96: V915 = 0x20
0xd98: V916 = ADD 0x20 0x0
0xd9b: M[0x20] = 0x0
0xd9c: V917 = 0x20
0xd9e: V918 = ADD 0x20 0x20
0xd9f: V919 = 0x0
0xda1: V920 = SHA3 0x0 0x40
0xda2: V921 = S[V920]
0xda3: V922 = 0x106e
0xda9: V923 = 0xffffffff
0xdae: V924 = AND 0xffffffff 0x106e
0xdaf: JUMP 0x106e
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, V1090]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0xdb0, V921, S4]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, 0xdb0, V921, S4]

================================

Block 0xdb0
[0xdb0:0xdfa]
---
Predecessors: [0x1082]
Successors: [0x108c]
---
0xdb0 JUMPDEST
0xdb1 PUSH1 0x0
0xdb3 DUP1
0xdb4 DUP8
0xdb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdca AND
0xdcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde0 AND
0xde1 DUP2
0xde2 MSTORE
0xde3 PUSH1 0x20
0xde5 ADD
0xde6 SWAP1
0xde7 DUP2
0xde8 MSTORE
0xde9 PUSH1 0x20
0xdeb ADD
0xdec PUSH1 0x0
0xdee SHA3
0xdef DUP2
0xdf0 SWAP1
0xdf1 SSTORE
0xdf2 POP
0xdf3 PUSH2 0xdfb
0xdf6 DUP6
0xdf7 PUSH2 0x108c
0xdfa JUMP
---
0xdb0: JUMPDEST 
0xdb1: V925 = 0x0
0xdb5: V926 = 0xffffffffffffffffffffffffffffffffffffffff
0xdca: V927 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xdcb: V928 = 0xffffffffffffffffffffffffffffffffffffffff
0xde0: V929 = AND 0xffffffffffffffffffffffffffffffffffffffff V927
0xde2: M[0x0] = V929
0xde3: V930 = 0x20
0xde5: V931 = ADD 0x20 0x0
0xde8: M[0x20] = 0x0
0xde9: V932 = 0x20
0xdeb: V933 = ADD 0x20 0x20
0xdec: V934 = 0x0
0xdee: V935 = SHA3 0x0 0x40
0xdf1: S[V935] = S0
0xdf3: V936 = 0xdfb
0xdf7: V937 = 0x108c
0xdfa: JUMP 0x108c
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0xdfb, S5]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, 0xdfb, S5]

================================

Block 0xdfb
[0xdfb:0xe00]
---
Predecessors: [0x108c]
Successors: [0xe01, 0xf7e]
---
0xdfb JUMPDEST
0xdfc ISZERO
0xdfd PUSH2 0xf7e
0xe00 JUMPI
---
0xdfb: JUMPDEST 
0xdfc: V938 = ISZERO V1101
0xdfd: V939 = 0xf7e
0xe00: JUMPI 0xf7e V938
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0, V1101]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S5, S4, S3, S2, 0x0]

================================

Block 0xe01
[0xe01:0xe29]
---
Predecessors: [0xdfb]
Successors: [0xe2a]
---
0xe01 DUP5
0xe02 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe17 AND
0xe18 PUSH1 0x0
0xe1a DUP4
0xe1b PUSH1 0x40
0xe1d MLOAD
0xe1e DUP1
0xe1f DUP3
0xe20 DUP1
0xe21 MLOAD
0xe22 SWAP1
0xe23 PUSH1 0x20
0xe25 ADD
0xe26 SWAP1
0xe27 DUP1
0xe28 DUP4
0xe29 DUP4
---
0xe02: V940 = 0xffffffffffffffffffffffffffffffffffffffff
0xe17: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xe18: V942 = 0x0
0xe1b: V943 = 0x40
0xe1d: V944 = M[0x40]
0xe21: V945 = M[S1]
0xe23: V946 = 0x20
0xe25: V947 = ADD 0x20 S1
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V941, 0x0, S1, V944, V944, V947, V945, V945, V944, V947]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0, V941, 0x0, S1, V944, V944, V947, V945, V945, V944, V947]

================================

Block 0xe2a
[0xe2a:0xe34]
---
Predecessors: [0xe01, 0xe35]
Successors: [0xe35, 0xe4f]
---
0xe2a JUMPDEST
0xe2b PUSH1 0x20
0xe2d DUP4
0xe2e LT
0xe2f ISZERO
0xe30 ISZERO
0xe31 PUSH2 0xe4f
0xe34 JUMPI
---
0xe2a: JUMPDEST 
0xe2b: V948 = 0x20
0xe2e: V949 = LT S2 0x20
0xe2f: V950 = ISZERO V949
0xe30: V951 = ISZERO V950
0xe31: V952 = 0xe4f
0xe34: JUMPI 0xe4f V951
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, 0x0, V941, 0x0, S7, V944, V944, V947, V945, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, 0x0, V941, 0x0, S7, V944, V944, V947, V945, S2, S1, S0]

================================

Block 0xe35
[0xe35:0xe4e]
---
Predecessors: [0xe2a]
Successors: [0xe2a]
---
0xe35 DUP1
0xe36 MLOAD
0xe37 DUP3
0xe38 MSTORE
0xe39 PUSH1 0x20
0xe3b DUP3
0xe3c ADD
0xe3d SWAP2
0xe3e POP
0xe3f PUSH1 0x20
0xe41 DUP2
0xe42 ADD
0xe43 SWAP1
0xe44 POP
0xe45 PUSH1 0x20
0xe47 DUP4
0xe48 SUB
0xe49 SWAP3
0xe4a POP
0xe4b PUSH2 0xe2a
0xe4e JUMP
---
0xe36: V953 = M[S0]
0xe38: M[S1] = V953
0xe39: V954 = 0x20
0xe3c: V955 = ADD S1 0x20
0xe3f: V956 = 0x20
0xe42: V957 = ADD S0 0x20
0xe45: V958 = 0x20
0xe48: V959 = SUB S2 0x20
0xe4b: V960 = 0xe2a
0xe4e: JUMP 0xe2a
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, 0x0, V941, 0x0, S7, V944, V944, V947, V945, S2, S1, S0]
Stack pops: 3
Stack additions: [V959, V955, V957]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, 0x0, V941, 0x0, S7, V944, V944, V947, V945, V959, V955, V957]

================================

Block 0xe4f
[0xe4f:0xf14]
---
Predecessors: [0xe2a]
Successors: [0xf15]
---
0xe4f JUMPDEST
0xe50 PUSH1 0x1
0xe52 DUP4
0xe53 PUSH1 0x20
0xe55 SUB
0xe56 PUSH2 0x100
0xe59 EXP
0xe5a SUB
0xe5b DUP1
0xe5c NOT
0xe5d DUP3
0xe5e MLOAD
0xe5f AND
0xe60 DUP2
0xe61 DUP5
0xe62 MLOAD
0xe63 AND
0xe64 DUP1
0xe65 DUP3
0xe66 OR
0xe67 DUP6
0xe68 MSTORE
0xe69 POP
0xe6a POP
0xe6b POP
0xe6c POP
0xe6d POP
0xe6e POP
0xe6f SWAP1
0xe70 POP
0xe71 ADD
0xe72 SWAP2
0xe73 POP
0xe74 POP
0xe75 PUSH1 0x40
0xe77 MLOAD
0xe78 DUP1
0xe79 SWAP2
0xe7a SUB
0xe7b SWAP1
0xe7c SHA3
0xe7d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe9b SWAP1
0xe9c DIV
0xe9d SWAP1
0xe9e CALLER
0xe9f DUP8
0xea0 DUP8
0xea1 PUSH1 0x40
0xea3 MLOAD
0xea4 DUP6
0xea5 PUSH4 0xffffffff
0xeaa AND
0xeab PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xec9 MUL
0xeca DUP2
0xecb MSTORE
0xecc PUSH1 0x4
0xece ADD
0xecf DUP1
0xed0 DUP5
0xed1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee6 AND
0xee7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xefc AND
0xefd DUP2
0xefe MSTORE
0xeff PUSH1 0x20
0xf01 ADD
0xf02 DUP4
0xf03 DUP2
0xf04 MSTORE
0xf05 PUSH1 0x20
0xf07 ADD
0xf08 DUP3
0xf09 DUP1
0xf0a MLOAD
0xf0b SWAP1
0xf0c PUSH1 0x20
0xf0e ADD
0xf0f SWAP1
0xf10 DUP1
0xf11 DUP4
0xf12 DUP4
0xf13 PUSH1 0x0
---
0xe4f: JUMPDEST 
0xe50: V961 = 0x1
0xe53: V962 = 0x20
0xe55: V963 = SUB 0x20 S2
0xe56: V964 = 0x100
0xe59: V965 = EXP 0x100 V963
0xe5a: V966 = SUB V965 0x1
0xe5c: V967 = NOT V966
0xe5e: V968 = M[S0]
0xe5f: V969 = AND V968 V967
0xe62: V970 = M[S1]
0xe63: V971 = AND V970 V966
0xe66: V972 = OR V969 V971
0xe68: M[S1] = V972
0xe71: V973 = ADD V945 V944
0xe75: V974 = 0x40
0xe77: V975 = M[0x40]
0xe7a: V976 = SUB V973 V975
0xe7c: V977 = SHA3 V975 V976
0xe7d: V978 = 0x100000000000000000000000000000000000000000000000000000000
0xe9c: V979 = DIV V977 0x100000000000000000000000000000000000000000000000000000000
0xe9e: V980 = CALLER
0xea1: V981 = 0x40
0xea3: V982 = M[0x40]
0xea5: V983 = 0xffffffff
0xeaa: V984 = AND 0xffffffff V979
0xeab: V985 = 0x100000000000000000000000000000000000000000000000000000000
0xec9: V986 = MUL 0x100000000000000000000000000000000000000000000000000000000 V984
0xecb: M[V982] = V986
0xecc: V987 = 0x4
0xece: V988 = ADD 0x4 V982
0xed1: V989 = 0xffffffffffffffffffffffffffffffffffffffff
0xee6: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V980
0xee7: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0xefc: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0xefe: M[V988] = V992
0xeff: V993 = 0x20
0xf01: V994 = ADD 0x20 V988
0xf04: M[V994] = S13
0xf05: V995 = 0x20
0xf07: V996 = ADD 0x20 V994
0xf0a: V997 = M[S12]
0xf0c: V998 = 0x20
0xf0e: V999 = ADD 0x20 S12
0xf13: V1000 = 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, 0x0, V941, 0x0, S7, V944, V944, V947, V945, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, V979, S8, V980, S13, S12, V988, V996, V999, V997, V997, V996, V999, 0x0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S14, S13, S12, S11, 0x0, V941, V979, 0x0, V980, S13, S12, V988, V996, V999, V997, V997, V996, V999, 0x0]

================================

Block 0xf15
[0xf15:0xf1d]
---
Predecessors: [0xe4f, 0xf1e]
Successors: [0xf1e, 0xf30]
---
0xf15 JUMPDEST
0xf16 DUP4
0xf17 DUP2
0xf18 LT
0xf19 ISZERO
0xf1a PUSH2 0xf30
0xf1d JUMPI
---
0xf15: JUMPDEST 
0xf18: V1001 = LT S0 V997
0xf19: V1002 = ISZERO V1001
0xf1a: V1003 = 0xf30
0xf1d: JUMPI 0xf30 V1002
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, V941, V979, 0x0, V980, S9, S8, V988, V996, V999, V997, V997, V996, V999, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, V941, V979, 0x0, V980, S9, S8, V988, V996, V999, V997, V997, V996, V999, S0]

================================

Block 0xf1e
[0xf1e:0xf2f]
---
Predecessors: [0xf15]
Successors: [0xf15]
---
0xf1e DUP1
0xf1f DUP3
0xf20 ADD
0xf21 MLOAD
0xf22 DUP2
0xf23 DUP5
0xf24 ADD
0xf25 MSTORE
0xf26 PUSH1 0x20
0xf28 DUP2
0xf29 ADD
0xf2a SWAP1
0xf2b POP
0xf2c PUSH2 0xf15
0xf2f JUMP
---
0xf20: V1004 = ADD V999 S0
0xf21: V1005 = M[V1004]
0xf24: V1006 = ADD V996 S0
0xf25: M[V1006] = V1005
0xf26: V1007 = 0x20
0xf29: V1008 = ADD S0 0x20
0xf2c: V1009 = 0xf15
0xf2f: JUMP 0xf15
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, V941, V979, 0x0, V980, S9, S8, V988, V996, V999, V997, V997, V996, V999, S0]
Stack pops: 3
Stack additions: [S2, S1, V1008]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, V941, V979, 0x0, V980, S9, S8, V988, V996, V999, V997, V997, V996, V999, V1008]

================================

Block 0xf30
[0xf30:0xf43]
---
Predecessors: [0xf15]
Successors: [0xf44, 0xf5d]
---
0xf30 JUMPDEST
0xf31 POP
0xf32 POP
0xf33 POP
0xf34 POP
0xf35 SWAP1
0xf36 POP
0xf37 SWAP1
0xf38 DUP2
0xf39 ADD
0xf3a SWAP1
0xf3b PUSH1 0x1f
0xf3d AND
0xf3e DUP1
0xf3f ISZERO
0xf40 PUSH2 0xf5d
0xf43 JUMPI
---
0xf30: JUMPDEST 
0xf39: V1010 = ADD V997 V996
0xf3b: V1011 = 0x1f
0xf3d: V1012 = AND 0x1f V997
0xf3f: V1013 = ISZERO V1012
0xf40: V1014 = 0xf5d
0xf43: JUMPI 0xf5d V1013
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, V941, V979, 0x0, V980, S9, S8, V988, V996, V999, V997, V997, V996, V999, S0]
Stack pops: 7
Stack additions: [V1010, V1012]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, V941, V979, 0x0, V980, S9, S8, V988, V1010, V1012]

================================

Block 0xf44
[0xf44:0xf5c]
---
Predecessors: [0xf30]
Successors: [0xf5d]
---
0xf44 DUP1
0xf45 DUP3
0xf46 SUB
0xf47 DUP1
0xf48 MLOAD
0xf49 PUSH1 0x1
0xf4b DUP4
0xf4c PUSH1 0x20
0xf4e SUB
0xf4f PUSH2 0x100
0xf52 EXP
0xf53 SUB
0xf54 NOT
0xf55 AND
0xf56 DUP2
0xf57 MSTORE
0xf58 PUSH1 0x20
0xf5a ADD
0xf5b SWAP2
0xf5c POP
---
0xf46: V1015 = SUB V1010 V1012
0xf48: V1016 = M[V1015]
0xf49: V1017 = 0x1
0xf4c: V1018 = 0x20
0xf4e: V1019 = SUB 0x20 V1012
0xf4f: V1020 = 0x100
0xf52: V1021 = EXP 0x100 V1019
0xf53: V1022 = SUB V1021 0x1
0xf54: V1023 = NOT V1022
0xf55: V1024 = AND V1023 V1016
0xf57: M[V1015] = V1024
0xf58: V1025 = 0x20
0xf5a: V1026 = ADD 0x20 V1015
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, 0x0, V941, V979, 0x0, V980, S4, S3, V988, V1010, V1012]
Stack pops: 2
Stack additions: [V1026, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, 0x0, V941, V979, 0x0, V980, S4, S3, V988, V1026, V1012]

================================

Block 0xf5d
[0xf5d:0xf7b]
---
Predecessors: [0xf30, 0xf44]
Successors: [0xf7c, 0xf7d]
---
0xf5d JUMPDEST
0xf5e POP
0xf5f SWAP4
0xf60 POP
0xf61 POP
0xf62 POP
0xf63 POP
0xf64 PUSH1 0x0
0xf66 PUSH1 0x40
0xf68 MLOAD
0xf69 DUP1
0xf6a DUP4
0xf6b SUB
0xf6c DUP2
0xf6d DUP6
0xf6e DUP9
0xf6f GAS
0xf70 CALL
0xf71 SWAP4
0xf72 POP
0xf73 POP
0xf74 POP
0xf75 POP
0xf76 ISZERO
0xf77 ISZERO
0xf78 PUSH2 0xf7d
0xf7b JUMPI
---
0xf5d: JUMPDEST 
0xf64: V1027 = 0x0
0xf66: V1028 = 0x40
0xf68: V1029 = M[0x40]
0xf6b: V1030 = SUB S1 V1029
0xf6f: V1031 = GAS
0xf70: V1032 = CALL V1031 V941 0x0 V1029 V1030 V1029 0x0
0xf76: V1033 = ISZERO V1032
0xf77: V1034 = ISZERO V1033
0xf78: V1035 = 0xf7d
0xf7b: JUMPI 0xf7d V1034
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, 0x0, V941, V979, 0x0, V980, S4, S3, V988, S1, V1012]
Stack pops: 9
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, 0x0]

================================

Block 0xf7c
[0xf7c:0xf7c]
---
Predecessors: [0xf5d]
Successors: []
---
0xf7c INVALID
---
0xf7c: INVALID 
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]

================================

Block 0xf7d
[0xf7d:0xf7d]
---
Predecessors: [0xf5d]
Successors: [0xf7e]
---
0xf7d JUMPDEST
---
0xf7d: JUMPDEST 
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]

================================

Block 0xf7e
[0xf7e:0xff3]
---
Predecessors: [0xdfb, 0xf7d]
Successors: [0xff4]
---
0xf7e JUMPDEST
0xf7f DUP4
0xf80 DUP6
0xf81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf96 AND
0xf97 CALLER
0xf98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfad AND
0xfae PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0xfcf DUP7
0xfd0 PUSH1 0x40
0xfd2 MLOAD
0xfd3 DUP1
0xfd4 DUP1
0xfd5 PUSH1 0x20
0xfd7 ADD
0xfd8 DUP3
0xfd9 DUP2
0xfda SUB
0xfdb DUP3
0xfdc MSTORE
0xfdd DUP4
0xfde DUP2
0xfdf DUP2
0xfe0 MLOAD
0xfe1 DUP2
0xfe2 MSTORE
0xfe3 PUSH1 0x20
0xfe5 ADD
0xfe6 SWAP2
0xfe7 POP
0xfe8 DUP1
0xfe9 MLOAD
0xfea SWAP1
0xfeb PUSH1 0x20
0xfed ADD
0xfee SWAP1
0xfef DUP1
0xff0 DUP4
0xff1 DUP4
0xff2 PUSH1 0x0
---
0xf7e: JUMPDEST 
0xf81: V1036 = 0xffffffffffffffffffffffffffffffffffffffff
0xf96: V1037 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xf97: V1038 = CALLER
0xf98: V1039 = 0xffffffffffffffffffffffffffffffffffffffff
0xfad: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1038
0xfae: V1041 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0xfd0: V1042 = 0x40
0xfd2: V1043 = M[0x40]
0xfd5: V1044 = 0x20
0xfd7: V1045 = ADD 0x20 V1043
0xfda: V1046 = SUB V1045 V1043
0xfdc: M[V1043] = V1046
0xfe0: V1047 = M[S2]
0xfe2: M[V1045] = V1047
0xfe3: V1048 = 0x20
0xfe5: V1049 = ADD 0x20 V1045
0xfe9: V1050 = M[S2]
0xfeb: V1051 = 0x20
0xfed: V1052 = ADD 0x20 S2
0xff2: V1053 = 0x0
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S3, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S2, V1043, V1043, V1049, V1052, V1050, V1050, V1049, V1052, 0x0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S4, S3, S2, S1, 0x0, S3, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S2, V1043, V1043, V1049, V1052, V1050, V1050, V1049, V1052, 0x0]

================================

Block 0xff4
[0xff4:0xffc]
---
Predecessors: [0xf7e, 0xffd]
Successors: [0xffd, 0x100f]
---
0xff4 JUMPDEST
0xff5 DUP4
0xff6 DUP2
0xff7 LT
0xff8 ISZERO
0xff9 PUSH2 0x100f
0xffc JUMPI
---
0xff4: JUMPDEST 
0xff7: V1054 = LT S0 V1050
0xff8: V1055 = ISZERO V1054
0xff9: V1056 = 0x100f
0xffc: JUMPI 0x100f V1055
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, S13, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V1043, V1043, V1049, V1052, V1050, V1050, V1049, V1052, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, S13, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V1043, V1043, V1049, V1052, V1050, V1050, V1049, V1052, S0]

================================

Block 0xffd
[0xffd:0x100e]
---
Predecessors: [0xff4]
Successors: [0xff4]
---
0xffd DUP1
0xffe DUP3
0xfff ADD
0x1000 MLOAD
0x1001 DUP2
0x1002 DUP5
0x1003 ADD
0x1004 MSTORE
0x1005 PUSH1 0x20
0x1007 DUP2
0x1008 ADD
0x1009 SWAP1
0x100a POP
0x100b PUSH2 0xff4
0x100e JUMP
---
0xfff: V1057 = ADD V1052 S0
0x1000: V1058 = M[V1057]
0x1003: V1059 = ADD V1049 S0
0x1004: M[V1059] = V1058
0x1005: V1060 = 0x20
0x1008: V1061 = ADD S0 0x20
0x100b: V1062 = 0xff4
0x100e: JUMP 0xff4
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, S13, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V1043, V1043, V1049, V1052, V1050, V1050, V1049, V1052, S0]
Stack pops: 3
Stack additions: [S2, S1, V1061]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, S13, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V1043, V1043, V1049, V1052, V1050, V1050, V1049, V1052, V1061]

================================

Block 0x100f
[0x100f:0x1022]
---
Predecessors: [0xff4]
Successors: [0x1023, 0x103c]
---
0x100f JUMPDEST
0x1010 POP
0x1011 POP
0x1012 POP
0x1013 POP
0x1014 SWAP1
0x1015 POP
0x1016 SWAP1
0x1017 DUP2
0x1018 ADD
0x1019 SWAP1
0x101a PUSH1 0x1f
0x101c AND
0x101d DUP1
0x101e ISZERO
0x101f PUSH2 0x103c
0x1022 JUMPI
---
0x100f: JUMPDEST 
0x1018: V1063 = ADD V1050 V1049
0x101a: V1064 = 0x1f
0x101c: V1065 = AND 0x1f V1050
0x101e: V1066 = ISZERO V1065
0x101f: V1067 = 0x103c
0x1022: JUMPI 0x103c V1066
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, S13, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V1043, V1043, V1049, V1052, V1050, V1050, V1049, V1052, S0]
Stack pops: 7
Stack additions: [V1063, V1065]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S18, S17, S16, S15, 0x0, S13, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S9, V1043, V1043, V1063, V1065]

================================

Block 0x1023
[0x1023:0x103b]
---
Predecessors: [0x100f]
Successors: [0x103c]
---
0x1023 DUP1
0x1024 DUP3
0x1025 SUB
0x1026 DUP1
0x1027 MLOAD
0x1028 PUSH1 0x1
0x102a DUP4
0x102b PUSH1 0x20
0x102d SUB
0x102e PUSH2 0x100
0x1031 EXP
0x1032 SUB
0x1033 NOT
0x1034 AND
0x1035 DUP2
0x1036 MSTORE
0x1037 PUSH1 0x20
0x1039 ADD
0x103a SWAP2
0x103b POP
---
0x1025: V1068 = SUB V1063 V1065
0x1027: V1069 = M[V1068]
0x1028: V1070 = 0x1
0x102b: V1071 = 0x20
0x102d: V1072 = SUB 0x20 V1065
0x102e: V1073 = 0x100
0x1031: V1074 = EXP 0x100 V1072
0x1032: V1075 = SUB V1074 0x1
0x1033: V1076 = NOT V1075
0x1034: V1077 = AND V1076 V1069
0x1036: M[V1068] = V1077
0x1037: V1078 = 0x20
0x1039: V1079 = ADD 0x20 V1068
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, 0x0, S8, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V1043, V1043, V1063, V1065]
Stack pops: 2
Stack additions: [V1079, S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, 0x0, S8, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V1043, V1043, V1079, V1065]

================================

Block 0x103c
[0x103c:0x1054]
---
Predecessors: [0x100f, 0x1023]
Successors: [0x2b1, 0x35c, 0x44d]
---
0x103c JUMPDEST
0x103d POP
0x103e SWAP3
0x103f POP
0x1040 POP
0x1041 POP
0x1042 PUSH1 0x40
0x1044 MLOAD
0x1045 DUP1
0x1046 SWAP2
0x1047 SUB
0x1048 SWAP1
0x1049 LOG4
0x104a PUSH1 0x1
0x104c SWAP1
0x104d POP
0x104e SWAP5
0x104f SWAP4
0x1050 POP
0x1051 POP
0x1052 POP
0x1053 POP
0x1054 JUMP
---
0x103c: JUMPDEST 
0x1042: V1080 = 0x40
0x1044: V1081 = M[0x40]
0x1047: V1082 = SUB S1 V1081
0x1049: LOG V1081 V1082 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V1040 V1037 S8
0x104a: V1083 = 0x1
0x1054: JUMP {0x2b1, 0x35c, 0x44d}
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S13, S12, S11, S10, 0x0, S8, V1037, V1040, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, V1043, V1043, S1, V1065]
Stack pops: 15
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x1055
[0x1055:0x1061]
---
Predecessors: [0x62f, 0x97e, 0xccc]
Successors: [0x1062, 0x1063]
---
0x1055 JUMPDEST
0x1056 PUSH1 0x0
0x1058 DUP3
0x1059 DUP3
0x105a GT
0x105b ISZERO
0x105c ISZERO
0x105d ISZERO
0x105e PUSH2 0x1063
0x1061 JUMPI
---
0x1055: JUMPDEST 
0x1056: V1084 = 0x0
0x105a: V1085 = GT S0 S1
0x105b: V1086 = ISZERO V1085
0x105c: V1087 = ISZERO V1086
0x105d: V1088 = ISZERO V1087
0x105e: V1089 = 0x1063
0x1061: JUMPI 0x1063 V1088
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S7, S6, S5, S4, 0x0, {0x680, 0x9cf, 0xd1d}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S7, S6, S5, S4, 0x0, {0x680, 0x9cf, 0xd1d}, S1, S0, 0x0]

================================

Block 0x1062
[0x1062:0x1062]
---
Predecessors: [0x1055]
Successors: []
---
0x1062 INVALID
---
0x1062: INVALID 
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, 0x0, {0x680, 0x9cf, 0xd1d}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, 0x0, {0x680, 0x9cf, 0xd1d}, S2, S1, 0x0]

================================

Block 0x1063
[0x1063:0x106d]
---
Predecessors: [0x1055]
Successors: [0x680, 0x9cf, 0xd1d]
---
0x1063 JUMPDEST
0x1064 DUP2
0x1065 DUP4
0x1066 SUB
0x1067 SWAP1
0x1068 POP
0x1069 SWAP3
0x106a SWAP2
0x106b POP
0x106c POP
0x106d JUMP
---
0x1063: JUMPDEST 
0x1066: V1090 = SUB S2 S1
0x106d: JUMP {0x680, 0x9cf, 0xd1d}
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, 0x0, {0x680, 0x9cf, 0xd1d}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1090]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S8, S7, S6, S5, 0x0, V1090]

================================

Block 0x106e
[0x106e:0x1080]
---
Predecessors: [0x680, 0x9cf, 0xd1d]
Successors: [0x1081, 0x1082]
---
0x106e JUMPDEST
0x106f PUSH1 0x0
0x1071 DUP1
0x1072 DUP3
0x1073 DUP5
0x1074 ADD
0x1075 SWAP1
0x1076 POP
0x1077 DUP4
0x1078 DUP2
0x1079 LT
0x107a ISZERO
0x107b ISZERO
0x107c ISZERO
0x107d PUSH2 0x1082
0x1080 JUMPI
---
0x106e: JUMPDEST 
0x106f: V1091 = 0x0
0x1074: V1092 = ADD S1 S0
0x1079: V1093 = LT V1092 S1
0x107a: V1094 = ISZERO V1093
0x107b: V1095 = ISZERO V1094
0x107c: V1096 = ISZERO V1095
0x107d: V1097 = 0x1082
0x1080: JUMPI 0x1082 V1096
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S7, S6, S5, S4, 0x0, {0x713, 0xa62, 0xdb0}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1092]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S7, S6, S5, S4, 0x0, {0x713, 0xa62, 0xdb0}, S1, S0, 0x0, V1092]

================================

Block 0x1081
[0x1081:0x1081]
---
Predecessors: [0x106e]
Successors: []
---
0x1081 INVALID
---
0x1081: INVALID 
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S9, S8, S7, S6, 0x0, {0x713, 0xa62, 0xdb0}, S3, S2, 0x0, V1092]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S9, S8, S7, S6, 0x0, {0x713, 0xa62, 0xdb0}, S3, S2, 0x0, V1092]

================================

Block 0x1082
[0x1082:0x108b]
---
Predecessors: [0x106e]
Successors: [0x713, 0xa62, 0xdb0]
---
0x1082 JUMPDEST
0x1083 DUP1
0x1084 SWAP2
0x1085 POP
0x1086 POP
0x1087 SWAP3
0x1088 SWAP2
0x1089 POP
0x108a POP
0x108b JUMP
---
0x1082: JUMPDEST 
0x108b: JUMP {0x713, 0xa62, 0xdb0}
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S9, S8, S7, S6, 0x0, {0x713, 0xa62, 0xdb0}, S3, S2, 0x0, V1092]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S9, S8, S7, S6, 0x0, V1092]

================================

Block 0x108c
[0x108c:0x109e]
---
Predecessors: [0x713, 0xa62, 0xdb0]
Successors: [0x75e, 0xaad, 0xdfb]
---
0x108c JUMPDEST
0x108d PUSH1 0x0
0x108f DUP1
0x1090 DUP3
0x1091 EXTCODESIZE
0x1092 SWAP1
0x1093 POP
0x1094 PUSH1 0x0
0x1096 DUP2
0x1097 GT
0x1098 SWAP2
0x1099 POP
0x109a POP
0x109b SWAP2
0x109c SWAP1
0x109d POP
0x109e JUMP
---
0x108c: JUMPDEST 
0x108d: V1098 = 0x0
0x1091: V1099 = EXTCODESIZE S0
0x1094: V1100 = 0x0
0x1097: V1101 = GT V1099 0x0
0x109e: JUMP {0x75e, 0xaad, 0xdfb}
---
Entry stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0, {0x75e, 0xaad, 0xdfb}, S0]
Stack pops: 2
Stack additions: [V1101]
Exit stack: [V11, {0x2b1, 0x35c, 0x44d}, S6, S5, S4, S3, 0x0, V1101]

================================

Block 0x109f
[0x109f:0x10fb]
---
Predecessors: []
Successors: [0x10fc]
Has unresolved jump.
---
0x109f STOP
0x10a0 LOG1
0x10a1 PUSH6 0x627a7a723058
0x10a8 SHA3
0x10a9 MISSING 0xcf
0x10aa MISSING 0xb7
0x10ab MISSING 0xc5
0x10ac MISSING 0x4f
0x10ad MISSING 0xdc
0x10ae SHL
0x10af MISSING 0xe6
0x10b0 MISSING 0xa7
0x10b1 SMOD
0x10b2 LOG1
0x10b3 EQ
0x10b4 DUP16
0x10b5 EXTCODECOPY
0x10b6 MISSING 0xee
0x10b7 MISSING 0xb0
0x10b8 MISSING 0xe3
0x10b9 PUSH31 0xabba45e7b5349bd37454ce077ab7ef00297300000000000000000000000000
0x10d9 STOP
0x10da STOP
0x10db STOP
0x10dc STOP
0x10dd STOP
0x10de STOP
0x10df STOP
0x10e0 ADDRESS
0x10e1 EQ
0x10e2 PUSH1 0x80
0x10e4 PUSH1 0x40
0x10e6 MSTORE
0x10e7 PUSH1 0x0
0x10e9 DUP1
0x10ea REVERT
0x10eb STOP
0x10ec LOG1
0x10ed PUSH6 0x627a7a723058
0x10f4 SHA3
0x10f5 NUMBER
0x10f6 MISSING 0xa6
0x10f7 MISSING 0xa6
0x10f8 MISSING 0xdb
0x10f9 MISSING 0x47
0x10fa SLT
0x10fb JUMPI
---
0x109f: STOP 
0x10a0: LOG S0 S1 S2
0x10a1: V1102 = 0x627a7a723058
0x10a8: V1103 = SHA3 0x627a7a723058 S3
0x10a9: MISSING 0xcf
0x10aa: MISSING 0xb7
0x10ab: MISSING 0xc5
0x10ac: MISSING 0x4f
0x10ad: MISSING 0xdc
0x10ae: V1104 = SHL S0 S1
0x10af: MISSING 0xe6
0x10b0: MISSING 0xa7
0x10b1: V1105 = SMOD S0 S1
0x10b2: LOG V1105 S2 S3
0x10b3: V1106 = EQ S4 S5
0x10b5: EXTCODECOPY S20 V1106 S6 S7
0x10b6: MISSING 0xee
0x10b7: MISSING 0xb0
0x10b8: MISSING 0xe3
0x10b9: V1107 = 0xabba45e7b5349bd37454ce077ab7ef00297300000000000000000000000000
0x10d9: STOP 
0x10da: STOP 
0x10db: STOP 
0x10dc: STOP 
0x10dd: STOP 
0x10de: STOP 
0x10df: STOP 
0x10e0: V1108 = ADDRESS
0x10e1: V1109 = EQ V1108 S0
0x10e2: V1110 = 0x80
0x10e4: V1111 = 0x40
0x10e6: M[0x40] = 0x80
0x10e7: V1112 = 0x0
0x10ea: REVERT 0x0 0x0
0x10eb: STOP 
0x10ec: LOG S0 S1 S2
0x10ed: V1113 = 0x627a7a723058
0x10f4: V1114 = SHA3 0x627a7a723058 S3
0x10f5: V1115 = NUMBER
0x10f6: MISSING 0xa6
0x10f7: MISSING 0xa6
0x10f8: MISSING 0xdb
0x10f9: MISSING 0x47
0x10fa: V1116 = SLT S0 S1
0x10fb: JUMPI V1116 S2
---
Entry stack: []
Stack pops: 0
Stack additions: [V1103, V1104, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, 0xabba45e7b5349bd37454ce077ab7ef00297300000000000000000000000000, V1109, V1115, V1114]
Exit stack: []

================================

Block 0x10fc
[0x10fc:0x111c]
---
Predecessors: [0x109f]
Successors: []
---
0x10fc MISSING 0xdb
0x10fd PUSH3 0x4dbaba
0x1101 MISSING 0x2d
0x1102 CALLVALUE
0x1103 MISSING 0xad
0x1104 MISSING 0xd8
0x1105 MISSING 0xa6
0x1106 MISSING 0x28
0x1107 SGT
0x1108 MISSING 0x25
0x1109 MISSING 0x21
0x110a SWAP1
0x110b CREATE
0x110c PUSH16 0x2ae75b4bea3889410029
---
0x10fc: MISSING 0xdb
0x10fd: V1117 = 0x4dbaba
0x1101: MISSING 0x2d
0x1102: V1118 = CALLVALUE
0x1103: MISSING 0xad
0x1104: MISSING 0xd8
0x1105: MISSING 0xa6
0x1106: MISSING 0x28
0x1107: V1119 = SGT S0 S1
0x1108: MISSING 0x25
0x1109: MISSING 0x21
0x110b: V1120 = CREATE S1 S0 S2
0x110c: V1121 = 0x2ae75b4bea3889410029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4dbaba, V1118, V1119, 0x2ae75b4bea3889410029, V1120]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x93
Exit block: 0x115
Body: 0x93, 0x9b, 0x9f, 0xa8, 0xcd, 0xd6, 0xe8, 0xfc, 0x115, 0x467, 0x4b9, 0x4c1, 0x4d4, 0x4e2, 0x4f6, 0x4ff

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x123
Exit block: 0x138
Body: 0x123, 0x12b, 0x12f, 0x138, 0x509

Function 2:
Public function signature: 0x313ce567
Entry block: 0x14e
Exit block: 0x163
Body: 0x14e, 0x156, 0x15a, 0x163, 0x513

Function 3:
Public function signature: 0x70a08231
Entry block: 0x17f
Exit block: 0x187
Body: 0x17f, 0x187, 0x18b, 0x1c0

Function 4:
Public function signature: 0x95d89b41
Entry block: 0x1d6
Exit block: 0x258
Body: 0x1d6, 0x1de, 0x1e2, 0x1eb, 0x210, 0x219, 0x22b, 0x23f, 0x258, 0x572, 0x5c4, 0x5cc, 0x5df, 0x5ed, 0x601, 0x60a

Function 5:
Public function signature: 0xa9059cbb
Entry block: 0x266
Exit block: 0x44d
Body: 0x266, 0x26e, 0x272, 0x44d, 0x614, 0x624, 0x62b, 0x62f, 0x680

Function 6:
Public function signature: 0xbe45fd62
Entry block: 0x2cb
Exit block: 0x44d
Body: 0x2cb, 0x2d3, 0x2d7, 0x44d, 0x966, 0x973, 0x97a, 0x97e, 0x9cf

Function 7:
Public function signature: 0xf6368f8a
Entry block: 0x376
Exit block: 0x44d
Body: 0x376, 0x37e, 0x382, 0x44d, 0xcb5, 0xcc1, 0xcc8, 0xccc, 0xd1d

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

Function 9:
Private function
Entry block: 0x106e
Exit block: 0x1082
Body: 0x106e, 0x1082

Function 10:
Private function
Entry block: 0x1055
Exit block: 0x1063
Body: 0x1055, 0x1063

