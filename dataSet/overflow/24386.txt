Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x8da5cb5b
0x34 EQ
0x35 PUSH2 0x49
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x8da5cb5b
0x34: V9 = EQ 0x8da5cb5b V7
0x35: V10 = 0x49
0x38: JUMPI 0x49 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x9e]
---
0x39 DUP1
0x3a PUSH4 0xf2fde38b
0x3f EQ
0x40 PUSH2 0x9e
0x43 JUMPI
---
0x3a: V11 = 0xf2fde38b
0x3f: V12 = EQ 0xf2fde38b V7
0x40: V13 = 0x9e
0x43: JUMPI 0x9e V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x48]
---
Predecessors: [0x39]
Successors: []
---
0x44 JUMPDEST
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x44: JUMPDEST 
0x45: V14 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0x4f]
---
Predecessors: [0x0]
Successors: [0x50, 0x54]
---
0x49 JUMPDEST
0x4a CALLVALUE
0x4b ISZERO
0x4c PUSH2 0x54
0x4f JUMPI
---
0x49: JUMPDEST 
0x4a: V15 = CALLVALUE
0x4b: V16 = ISZERO V15
0x4c: V17 = 0x54
0x4f: JUMPI 0x54 V16
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x50
[0x50:0x53]
---
Predecessors: [0x49]
Successors: []
---
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x50: V18 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5b]
---
Predecessors: [0x49]
Successors: [0xd7]
---
0x54 JUMPDEST
0x55 PUSH2 0x5c
0x58 PUSH2 0xd7
0x5b JUMP
---
0x54: JUMPDEST 
0x55: V19 = 0x5c
0x58: V20 = 0xd7
0x5b: JUMP 0xd7
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x5c]
Exit stack: [V7, 0x5c]

================================

Block 0x5c
[0x5c:0x9d]
---
Predecessors: [0xd7]
Successors: []
---
0x5c JUMPDEST
0x5d PUSH1 0x40
0x5f MLOAD
0x60 DUP1
0x61 DUP3
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e DUP2
0x8f MSTORE
0x90 PUSH1 0x20
0x92 ADD
0x93 SWAP2
0x94 POP
0x95 POP
0x96 PUSH1 0x40
0x98 MLOAD
0x99 DUP1
0x9a SWAP2
0x9b SUB
0x9c SWAP1
0x9d RETURN
---
0x5c: JUMPDEST 
0x5d: V21 = 0x40
0x5f: V22 = M[0x40]
0x62: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x78: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x8f: M[V22] = V26
0x90: V27 = 0x20
0x92: V28 = ADD 0x20 V22
0x96: V29 = 0x40
0x98: V30 = M[0x40]
0x9b: V31 = SUB V28 V30
0x9d: RETURN V30 V31
---
Entry stack: [V7, 0x5c, V50]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x5c]

================================

Block 0x9e
[0x9e:0xa4]
---
Predecessors: [0x39]
Successors: [0xa5, 0xa9]
---
0x9e JUMPDEST
0x9f CALLVALUE
0xa0 ISZERO
0xa1 PUSH2 0xa9
0xa4 JUMPI
---
0x9e: JUMPDEST 
0x9f: V32 = CALLVALUE
0xa0: V33 = ISZERO V32
0xa1: V34 = 0xa9
0xa4: JUMPI 0xa9 V33
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xa5
[0xa5:0xa8]
---
Predecessors: [0x9e]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa5: V35 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xa9
[0xa9:0xd4]
---
Predecessors: [0x9e]
Successors: [0xfc]
---
0xa9 JUMPDEST
0xaa PUSH2 0xd5
0xad PUSH1 0x4
0xaf DUP1
0xb0 DUP1
0xb1 CALLDATALOAD
0xb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7 AND
0xc8 SWAP1
0xc9 PUSH1 0x20
0xcb ADD
0xcc SWAP1
0xcd SWAP2
0xce SWAP1
0xcf POP
0xd0 POP
0xd1 PUSH2 0xfc
0xd4 JUMP
---
0xa9: JUMPDEST 
0xaa: V36 = 0xd5
0xad: V37 = 0x4
0xb1: V38 = CALLDATALOAD 0x4
0xb2: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xc9: V41 = 0x20
0xcb: V42 = ADD 0x20 0x4
0xd1: V43 = 0xfc
0xd4: JUMP 0xfc
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xd5, V40]
Exit stack: [V7, 0xd5, V40]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: [0x1cb]
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd7
[0xd7:0xfb]
---
Predecessors: [0x54]
Successors: [0x5c]
---
0xd7 JUMPDEST
0xd8 PUSH1 0x0
0xda DUP1
0xdb SWAP1
0xdc SLOAD
0xdd SWAP1
0xde PUSH2 0x100
0xe1 EXP
0xe2 SWAP1
0xe3 DIV
0xe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9 AND
0xfa DUP2
0xfb JUMP
---
0xd7: JUMPDEST 
0xd8: V44 = 0x0
0xdc: V45 = S[0x0]
0xde: V46 = 0x100
0xe1: V47 = EXP 0x100 0x0
0xe3: V48 = DIV V45 0x1
0xe4: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xfb: JUMP 0x5c
---
Entry stack: [V7, 0x5c]
Stack pops: 1
Stack additions: [S0, V50]
Exit stack: [V7, 0x5c, V50]

================================

Block 0xfc
[0xfc:0x151]
---
Predecessors: [0xa9]
Successors: [0x152, 0x1ca]
---
0xfc JUMPDEST
0xfd PUSH1 0x0
0xff DUP1
0x100 SWAP1
0x101 SLOAD
0x102 SWAP1
0x103 PUSH2 0x100
0x106 EXP
0x107 SWAP1
0x108 DIV
0x109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e AND
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 CALLER
0x136 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14b AND
0x14c EQ
0x14d ISZERO
0x14e PUSH2 0x1ca
0x151 JUMPI
---
0xfc: JUMPDEST 
0xfd: V51 = 0x0
0x101: V52 = S[0x0]
0x103: V53 = 0x100
0x106: V54 = EXP 0x100 0x0
0x108: V55 = DIV V52 0x1
0x109: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x11f: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x135: V60 = CALLER
0x136: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x14c: V63 = EQ V62 V59
0x14d: V64 = ISZERO V63
0x14e: V65 = 0x1ca
0x151: JUMPI 0x1ca V64
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x152
[0x152:0x187]
---
Predecessors: [0xfc]
Successors: [0x188, 0x1c8]
---
0x152 PUSH1 0x0
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a DUP2
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 EQ
0x182 ISZERO
0x183 ISZERO
0x184 PUSH2 0x1c8
0x187 JUMPI
---
0x152: V66 = 0x0
0x154: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x16b: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x181: V71 = EQ V70 0x0
0x182: V72 = ISZERO V71
0x183: V73 = ISZERO V72
0x184: V74 = 0x1c8
0x187: JUMPI 0x1c8 V73
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xd5, V40]

================================

Block 0x188
[0x188:0x1c7]
---
Predecessors: [0x152]
Successors: [0x1c8]
---
0x188 DUP1
0x189 PUSH1 0x0
0x18b DUP1
0x18c PUSH2 0x100
0x18f EXP
0x190 DUP2
0x191 SLOAD
0x192 DUP2
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 MUL
0x1a9 NOT
0x1aa AND
0x1ab SWAP1
0x1ac DUP4
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 MUL
0x1c4 OR
0x1c5 SWAP1
0x1c6 SSTORE
0x1c7 POP
---
0x189: V75 = 0x0
0x18c: V76 = 0x100
0x18f: V77 = EXP 0x100 0x0
0x191: V78 = S[0x0]
0x193: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V80 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1a9: V81 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V82 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V78
0x1ad: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x1c3: V85 = MUL V84 0x1
0x1c4: V86 = OR V85 V82
0x1c6: S[0x0] = V86
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xd5, V40]

================================

Block 0x1c8
[0x1c8:0x1c8]
---
Predecessors: [0x152, 0x188]
Successors: [0x1c9]
---
0x1c8 JUMPDEST
---
0x1c8: JUMPDEST 
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x1c9
[0x1c9:0x1c9]
---
Predecessors: [0x1c8]
Successors: [0x1ca]
---
0x1c9 JUMPDEST
---
0x1c9: JUMPDEST 
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x1ca
[0x1ca:0x1ca]
---
Predecessors: [0xfc, 0x1c9]
Successors: [0x1cb]
---
0x1ca JUMPDEST
---
0x1ca: JUMPDEST 
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x1cb
[0x1cb:0x1cd]
---
Predecessors: [0x1ca]
Successors: [0xd5]
---
0x1cb JUMPDEST
0x1cc POP
0x1cd JUMP
---
0x1cb: JUMPDEST 
0x1cd: JUMP 0xd5
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x1ce
[0x1ce:0x1fe]
---
Predecessors: []
Successors: [0x1ff]
---
0x1ce STOP
0x1cf LOG1
0x1d0 PUSH6 0x627a7a723058
0x1d7 SHA3
0x1d8 MISSING 0x5f
0x1d9 SIGNEXTEND
0x1da MISSING 0x24
0x1db PUSH20 0x77927abdef5369bc084e4f381a7e9273821f1158
0x1f0 MISSING 0xbc
0x1f1 EXTCODEHASH
0x1f2 MISSING 0xae
0x1f3 MISSING 0xb8
0x1f4 MISSING 0xe0
0x1f5 MISSING 0xd2
0x1f6 MISSING 0x1f
0x1f7 MISSING 0x21
0x1f8 STOP
0x1f9 MISSING 0x29
0x1fa PUSH1 0x60
0x1fc PUSH1 0x40
0x1fe MSTORE
---
0x1ce: STOP 
0x1cf: LOG S0 S1 S2
0x1d0: V87 = 0x627a7a723058
0x1d7: V88 = SHA3 0x627a7a723058 S3
0x1d8: MISSING 0x5f
0x1d9: V89 = SIGNEXTEND S0 S1
0x1da: MISSING 0x24
0x1db: V90 = 0x77927abdef5369bc084e4f381a7e9273821f1158
0x1f0: MISSING 0xbc
0x1f1: V91 = EXTCODEHASH S0
0x1f2: MISSING 0xae
0x1f3: MISSING 0xb8
0x1f4: MISSING 0xe0
0x1f5: MISSING 0xd2
0x1f6: MISSING 0x1f
0x1f7: MISSING 0x21
0x1f8: STOP 
0x1f9: MISSING 0x29
0x1fa: V92 = 0x60
0x1fc: V93 = 0x40
0x1fe: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: [V88, V89, 0x77927abdef5369bc084e4f381a7e9273821f1158, V91]
Exit stack: []

================================

Block 0x1ff
[0x1ff:0x221]
---
Predecessors: [0x1ce]
Successors: [0x222]
Has unresolved jump.
---
0x1ff JUMPDEST
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
0x204 STOP
0x205 LOG1
0x206 PUSH6 0x627a7a723058
0x20d SHA3
0x20e MISSING 0x4c
0x20f CALL
0x210 SWAP3
0x211 INVALID
0x212 DUP3
0x213 MISSING 0xc
0x214 MISSING 0xa8
0x215 MISSING 0xd7
0x216 MISSING 0xfb
0x217 POP
0x218 MSIZE
0x219 JUMP
0x21a CALLCODE
0x21b MISSING 0xa9
0x21c MISSING 0x48
0x21d EXTCODEHASH
0x21e MISSING 0x4d
0x21f MISSING 0xc
0x220 SAR
0x221 JUMPI
---
0x1ff: JUMPDEST 
0x200: V94 = 0x0
0x203: REVERT 0x0 0x0
0x204: STOP 
0x205: LOG S0 S1 S2
0x206: V95 = 0x627a7a723058
0x20d: V96 = SHA3 0x627a7a723058 S3
0x20e: MISSING 0x4c
0x20f: V97 = CALL S0 S1 S2 S3 S4 S5 S6
0x211: INVALID 
0x213: MISSING 0xc
0x214: MISSING 0xa8
0x215: MISSING 0xd7
0x216: MISSING 0xfb
0x218: V98 = MSIZE
0x219: JUMP V98
0x21a: V99 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x21b: MISSING 0xa9
0x21c: MISSING 0x48
0x21d: V100 = EXTCODEHASH S0
0x21e: MISSING 0x4d
0x21f: MISSING 0xc
0x220: V101 = SAR S0 S1
0x221: JUMPI V101 S2
---
Entry stack: []
Stack pops: 0
Stack additions: [V96, S9, S7, S8, V97, S2, S0, S1, S2, V99, V100]
Exit stack: []

================================

Block 0x222
[0x222:0x23a]
---
Predecessors: [0x1ff]
Successors: [0x23b]
---
0x222 MISSING 0xde
0x223 ADDRESS
0x224 LOG4
0x225 MISSING 0x48
0x226 MISSING 0x4b
0x227 SWAP11
0x228 MISSING 0x48
0x229 DUP11
0x22a MISSING 0xcd
0x22b MISSING 0xd9
0x22c POP
0x22d SWAP7
0x22e STOP
0x22f MISSING 0x29
0x230 PUSH1 0x60
0x232 PUSH1 0x40
0x234 MSTORE
0x235 CALLDATASIZE
0x236 ISZERO
0x237 PUSH2 0xd9
0x23a JUMPI
---
0x222: MISSING 0xde
0x223: V102 = ADDRESS
0x224: LOG V102 S0 S1 S2 S3 S4
0x225: MISSING 0x48
0x226: MISSING 0x4b
0x228: MISSING 0x48
0x22a: MISSING 0xcd
0x22b: MISSING 0xd9
0x22e: STOP 
0x22f: MISSING 0x29
0x230: V103 = 0x60
0x232: V104 = 0x40
0x234: M[0x40] = 0x60
0x235: V105 = CALLDATASIZE
0x236: V106 = ISZERO V105
0x237: V107 = 0xd9
0x23a: THROWI V106
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S8, S2, S3, S4, S5, S6, S7, S1]
Exit stack: []

================================

Block 0x23b
[0x23b:0x26e]
---
Predecessors: [0x222]
Successors: [0x26f]
---
0x23b PUSH1 0x0
0x23d CALLDATALOAD
0x23e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x25c SWAP1
0x25d DIV
0x25e PUSH4 0xffffffff
0x263 AND
0x264 DUP1
0x265 PUSH4 0x6fdde03
0x26a EQ
0x26b PUSH2 0xde
0x26e JUMPI
---
0x23b: V108 = 0x0
0x23d: V109 = CALLDATALOAD 0x0
0x23e: V110 = 0x100000000000000000000000000000000000000000000000000000000
0x25d: V111 = DIV V109 0x100000000000000000000000000000000000000000000000000000000
0x25e: V112 = 0xffffffff
0x263: V113 = AND 0xffffffff V111
0x265: V114 = 0x6fdde03
0x26a: V115 = EQ 0x6fdde03 V113
0x26b: V116 = 0xde
0x26e: THROWI V115
---
Entry stack: []
Stack pops: 0
Stack additions: [V113]
Exit stack: [V113]

================================

Block 0x26f
[0x26f:0x279]
---
Predecessors: [0x23b]
Successors: [0x27a]
---
0x26f DUP1
0x270 PUSH4 0x95ea7b3
0x275 EQ
0x276 PUSH2 0x16d
0x279 JUMPI
---
0x270: V117 = 0x95ea7b3
0x275: V118 = EQ 0x95ea7b3 V113
0x276: V119 = 0x16d
0x279: THROWI V118
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x27a
[0x27a:0x284]
---
Predecessors: [0x26f]
Successors: [0x285]
---
0x27a DUP1
0x27b PUSH4 0x18160ddd
0x280 EQ
0x281 PUSH2 0x1c7
0x284 JUMPI
---
0x27b: V120 = 0x18160ddd
0x280: V121 = EQ 0x18160ddd V113
0x281: V122 = 0x1c7
0x284: THROWI V121
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x285
[0x285:0x28f]
---
Predecessors: [0x27a]
Successors: [0x290]
---
0x285 DUP1
0x286 PUSH4 0x23b872dd
0x28b EQ
0x28c PUSH2 0x1f0
0x28f JUMPI
---
0x286: V123 = 0x23b872dd
0x28b: V124 = EQ 0x23b872dd V113
0x28c: V125 = 0x1f0
0x28f: THROWI V124
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x290
[0x290:0x29a]
---
Predecessors: [0x285]
Successors: [0x29b]
---
0x290 DUP1
0x291 PUSH4 0x313ce567
0x296 EQ
0x297 PUSH2 0x269
0x29a JUMPI
---
0x291: V126 = 0x313ce567
0x296: V127 = EQ 0x313ce567 V113
0x297: V128 = 0x269
0x29a: THROWI V127
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x29b
[0x29b:0x2a5]
---
Predecessors: [0x290]
Successors: [0x2a6]
---
0x29b DUP1
0x29c PUSH4 0x378dc3dc
0x2a1 EQ
0x2a2 PUSH2 0x298
0x2a5 JUMPI
---
0x29c: V129 = 0x378dc3dc
0x2a1: V130 = EQ 0x378dc3dc V113
0x2a2: V131 = 0x298
0x2a5: THROWI V130
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2a6
[0x2a6:0x2b0]
---
Predecessors: [0x29b]
Successors: [0x2b1]
---
0x2a6 DUP1
0x2a7 PUSH4 0x42966c68
0x2ac EQ
0x2ad PUSH2 0x2c1
0x2b0 JUMPI
---
0x2a7: V132 = 0x42966c68
0x2ac: V133 = EQ 0x42966c68 V113
0x2ad: V134 = 0x2c1
0x2b0: THROWI V133
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2b1
[0x2b1:0x2bb]
---
Predecessors: [0x2a6]
Successors: [0x2bc]
---
0x2b1 DUP1
0x2b2 PUSH4 0x54fd4d50
0x2b7 EQ
0x2b8 PUSH2 0x2fc
0x2bb JUMPI
---
0x2b2: V135 = 0x54fd4d50
0x2b7: V136 = EQ 0x54fd4d50 V113
0x2b8: V137 = 0x2fc
0x2bb: THROWI V136
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2bc
[0x2bc:0x2c6]
---
Predecessors: [0x2b1]
Successors: [0x2c7]
---
0x2bc DUP1
0x2bd PUSH4 0x70a08231
0x2c2 EQ
0x2c3 PUSH2 0x38b
0x2c6 JUMPI
---
0x2bd: V138 = 0x70a08231
0x2c2: V139 = EQ 0x70a08231 V113
0x2c3: V140 = 0x38b
0x2c6: THROWI V139
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2c7
[0x2c7:0x2d1]
---
Predecessors: [0x2bc]
Successors: [0x2d2]
---
0x2c7 DUP1
0x2c8 PUSH4 0x8da5cb5b
0x2cd EQ
0x2ce PUSH2 0x3d8
0x2d1 JUMPI
---
0x2c8: V141 = 0x8da5cb5b
0x2cd: V142 = EQ 0x8da5cb5b V113
0x2ce: V143 = 0x3d8
0x2d1: THROWI V142
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2d2
[0x2d2:0x2dc]
---
Predecessors: [0x2c7]
Successors: [0x2dd]
---
0x2d2 DUP1
0x2d3 PUSH4 0x95d89b41
0x2d8 EQ
0x2d9 PUSH2 0x42d
0x2dc JUMPI
---
0x2d3: V144 = 0x95d89b41
0x2d8: V145 = EQ 0x95d89b41 V113
0x2d9: V146 = 0x42d
0x2dc: THROWI V145
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2dd
[0x2dd:0x2e7]
---
Predecessors: [0x2d2]
Successors: [0x2e8]
---
0x2dd DUP1
0x2de PUSH4 0xa9059cbb
0x2e3 EQ
0x2e4 PUSH2 0x4bc
0x2e7 JUMPI
---
0x2de: V147 = 0xa9059cbb
0x2e3: V148 = EQ 0xa9059cbb V113
0x2e4: V149 = 0x4bc
0x2e7: THROWI V148
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2e8
[0x2e8:0x2f2]
---
Predecessors: [0x2dd]
Successors: [0x2f3]
---
0x2e8 DUP1
0x2e9 PUSH4 0xcae9ca51
0x2ee EQ
0x2ef PUSH2 0x516
0x2f2 JUMPI
---
0x2e9: V150 = 0xcae9ca51
0x2ee: V151 = EQ 0xcae9ca51 V113
0x2ef: V152 = 0x516
0x2f2: THROWI V151
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2f3
[0x2f3:0x2fd]
---
Predecessors: [0x2e8]
Successors: [0x2fe]
---
0x2f3 DUP1
0x2f4 PUSH4 0xdd62ed3e
0x2f9 EQ
0x2fa PUSH2 0x59b
0x2fd JUMPI
---
0x2f4: V153 = 0xdd62ed3e
0x2f9: V154 = EQ 0xdd62ed3e V113
0x2fa: V155 = 0x59b
0x2fd: THROWI V154
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2fe
[0x2fe:0x308]
---
Predecessors: [0x2f3]
Successors: [0x309]
---
0x2fe DUP1
0x2ff PUSH4 0xf2fde38b
0x304 EQ
0x305 PUSH2 0x607
0x308 JUMPI
---
0x2ff: V156 = 0xf2fde38b
0x304: V157 = EQ 0xf2fde38b V113
0x305: V158 = 0x607
0x308: THROWI V157
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x309
[0x309:0x314]
---
Predecessors: [0x2fe]
Successors: [0x315]
---
0x309 JUMPDEST
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0xe9
0x314 JUMPI
---
0x309: JUMPDEST 
0x30a: V159 = 0x0
0x30d: REVERT 0x0 0x0
0x30e: JUMPDEST 
0x30f: V160 = CALLVALUE
0x310: V161 = ISZERO V160
0x311: V162 = 0xe9
0x314: THROWI V161
---
Entry stack: [V113]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x315
[0x315:0x345]
---
Predecessors: [0x309]
Successors: [0x346]
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
0x319 JUMPDEST
0x31a PUSH2 0xf1
0x31d PUSH2 0x640
0x320 JUMP
0x321 JUMPDEST
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP1
0x326 DUP1
0x327 PUSH1 0x20
0x329 ADD
0x32a DUP3
0x32b DUP2
0x32c SUB
0x32d DUP3
0x32e MSTORE
0x32f DUP4
0x330 DUP2
0x331 DUP2
0x332 MLOAD
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP2
0x339 POP
0x33a DUP1
0x33b MLOAD
0x33c SWAP1
0x33d PUSH1 0x20
0x33f ADD
0x340 SWAP1
0x341 DUP1
0x342 DUP4
0x343 DUP4
0x344 PUSH1 0x0
---
0x315: V163 = 0x0
0x318: REVERT 0x0 0x0
0x319: JUMPDEST 
0x31a: V164 = 0xf1
0x31d: V165 = 0x640
0x320: THROW 
0x321: JUMPDEST 
0x322: V166 = 0x40
0x324: V167 = M[0x40]
0x327: V168 = 0x20
0x329: V169 = ADD 0x20 V167
0x32c: V170 = SUB V169 V167
0x32e: M[V167] = V170
0x332: V171 = M[S0]
0x334: M[V169] = V171
0x335: V172 = 0x20
0x337: V173 = ADD 0x20 V169
0x33b: V174 = M[S0]
0x33d: V175 = 0x20
0x33f: V176 = ADD 0x20 S0
0x344: V177 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf1, 0x0, V176, V173, V174, V174, V176, V173, V167, V167, S0]
Exit stack: []

================================

Block 0x346
[0x346:0x34e]
---
Predecessors: [0x315]
Successors: [0x34f]
---
0x346 JUMPDEST
0x347 DUP4
0x348 DUP2
0x349 LT
0x34a ISZERO
0x34b PUSH2 0x132
0x34e JUMPI
---
0x346: JUMPDEST 
0x349: V178 = LT 0x0 V174
0x34a: V179 = ISZERO V178
0x34b: V180 = 0x132
0x34e: THROWI V179
---
Entry stack: [S9, V167, V167, V173, V176, V174, V174, V173, V176, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V167, V167, V173, V176, V174, V174, V173, V176, 0x0]

================================

Block 0x34f
[0x34f:0x356]
---
Predecessors: [0x346]
Successors: [0x357]
---
0x34f DUP1
0x350 DUP3
0x351 ADD
0x352 MLOAD
0x353 DUP2
0x354 DUP5
0x355 ADD
0x356 MSTORE
---
0x351: V181 = ADD V176 0x0
0x352: V182 = M[V181]
0x355: V183 = ADD V173 0x0
0x356: M[V183] = V182
---
Entry stack: [S9, V167, V167, V173, V176, V174, V174, V173, V176, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V167, V167, V173, V176, V174, V174, V173, V176, 0x0]

================================

Block 0x357
[0x357:0x375]
---
Predecessors: [0x34f]
Successors: [0x376]
---
0x357 JUMPDEST
0x358 PUSH1 0x20
0x35a DUP2
0x35b ADD
0x35c SWAP1
0x35d POP
0x35e PUSH2 0x116
0x361 JUMP
0x362 JUMPDEST
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 SWAP1
0x368 POP
0x369 SWAP1
0x36a DUP2
0x36b ADD
0x36c SWAP1
0x36d PUSH1 0x1f
0x36f AND
0x370 DUP1
0x371 ISZERO
0x372 PUSH2 0x15f
0x375 JUMPI
---
0x357: JUMPDEST 
0x358: V184 = 0x20
0x35b: V185 = ADD 0x0 0x20
0x35e: V186 = 0x116
0x361: THROW 
0x362: JUMPDEST 
0x36b: V187 = ADD S4 S6
0x36d: V188 = 0x1f
0x36f: V189 = AND 0x1f S4
0x371: V190 = ISZERO V189
0x372: V191 = 0x15f
0x375: THROWI V190
---
Entry stack: [S9, V167, V167, V173, V176, V174, V174, V173, V176, 0x0]
Stack pops: 1
Stack additions: [V189, V187]
Exit stack: []

================================

Block 0x376
[0x376:0x38e]
---
Predecessors: [0x357]
Successors: [0x38f]
---
0x376 DUP1
0x377 DUP3
0x378 SUB
0x379 DUP1
0x37a MLOAD
0x37b PUSH1 0x1
0x37d DUP4
0x37e PUSH1 0x20
0x380 SUB
0x381 PUSH2 0x100
0x384 EXP
0x385 SUB
0x386 NOT
0x387 AND
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP2
0x38e POP
---
0x378: V192 = SUB V187 V189
0x37a: V193 = M[V192]
0x37b: V194 = 0x1
0x37e: V195 = 0x20
0x380: V196 = SUB 0x20 V189
0x381: V197 = 0x100
0x384: V198 = EXP 0x100 V196
0x385: V199 = SUB V198 0x1
0x386: V200 = NOT V199
0x387: V201 = AND V200 V193
0x389: M[V192] = V201
0x38a: V202 = 0x20
0x38c: V203 = ADD 0x20 V192
---
Entry stack: [V187, V189]
Stack pops: 2
Stack additions: [V203, S0]
Exit stack: [V203, V189]

================================

Block 0x38f
[0x38f:0x3a3]
---
Predecessors: [0x376]
Successors: [0x3a4]
---
0x38f JUMPDEST
0x390 POP
0x391 SWAP3
0x392 POP
0x393 POP
0x394 POP
0x395 PUSH1 0x40
0x397 MLOAD
0x398 DUP1
0x399 SWAP2
0x39a SUB
0x39b SWAP1
0x39c RETURN
0x39d JUMPDEST
0x39e CALLVALUE
0x39f ISZERO
0x3a0 PUSH2 0x178
0x3a3 JUMPI
---
0x38f: JUMPDEST 
0x395: V204 = 0x40
0x397: V205 = M[0x40]
0x39a: V206 = SUB V203 V205
0x39c: RETURN V205 V206
0x39d: JUMPDEST 
0x39e: V207 = CALLVALUE
0x39f: V208 = ISZERO V207
0x3a0: V209 = 0x178
0x3a3: THROWI V208
---
Entry stack: [V203, V189]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x3a4
[0x3a4:0x3dc]
---
Predecessors: [0x38f]
Successors: [0x6de]
---
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 REVERT
0x3a8 JUMPDEST
0x3a9 PUSH2 0x1ad
0x3ac PUSH1 0x4
0x3ae DUP1
0x3af DUP1
0x3b0 CALLDATALOAD
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 SWAP1
0x3c8 PUSH1 0x20
0x3ca ADD
0x3cb SWAP1
0x3cc SWAP2
0x3cd SWAP1
0x3ce DUP1
0x3cf CALLDATALOAD
0x3d0 SWAP1
0x3d1 PUSH1 0x20
0x3d3 ADD
0x3d4 SWAP1
0x3d5 SWAP2
0x3d6 SWAP1
0x3d7 POP
0x3d8 POP
0x3d9 PUSH2 0x6de
0x3dc JUMP
---
0x3a4: V210 = 0x0
0x3a7: REVERT 0x0 0x0
0x3a8: JUMPDEST 
0x3a9: V211 = 0x1ad
0x3ac: V212 = 0x4
0x3b0: V213 = CALLDATALOAD 0x4
0x3b1: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x3c8: V216 = 0x20
0x3ca: V217 = ADD 0x20 0x4
0x3cf: V218 = CALLDATALOAD 0x24
0x3d1: V219 = 0x20
0x3d3: V220 = ADD 0x20 0x24
0x3d9: V221 = 0x6de
0x3dc: JUMP 0x6de
---
Entry stack: []
Stack pops: 0
Stack additions: [V218, V215, 0x1ad]
Exit stack: []

================================

Block 0x3dd
[0x3dd:0x3fd]
---
Predecessors: []
Successors: [0x3fe]
---
0x3dd JUMPDEST
0x3de PUSH1 0x40
0x3e0 MLOAD
0x3e1 DUP1
0x3e2 DUP3
0x3e3 ISZERO
0x3e4 ISZERO
0x3e5 ISZERO
0x3e6 ISZERO
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec SWAP2
0x3ed POP
0x3ee POP
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 SWAP2
0x3f4 SUB
0x3f5 SWAP1
0x3f6 RETURN
0x3f7 JUMPDEST
0x3f8 CALLVALUE
0x3f9 ISZERO
0x3fa PUSH2 0x1d2
0x3fd JUMPI
---
0x3dd: JUMPDEST 
0x3de: V222 = 0x40
0x3e0: V223 = M[0x40]
0x3e3: V224 = ISZERO S0
0x3e4: V225 = ISZERO V224
0x3e5: V226 = ISZERO V225
0x3e6: V227 = ISZERO V226
0x3e8: M[V223] = V227
0x3e9: V228 = 0x20
0x3eb: V229 = ADD 0x20 V223
0x3ef: V230 = 0x40
0x3f1: V231 = M[0x40]
0x3f4: V232 = SUB V229 V231
0x3f6: RETURN V231 V232
0x3f7: JUMPDEST 
0x3f8: V233 = CALLVALUE
0x3f9: V234 = ISZERO V233
0x3fa: V235 = 0x1d2
0x3fd: THROWI V234
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x3fe
[0x3fe:0x426]
---
Predecessors: [0x3dd]
Successors: [0x427]
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
0x402 JUMPDEST
0x403 PUSH2 0x1da
0x406 PUSH2 0x7d1
0x409 JUMP
0x40a JUMPDEST
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f DUP3
0x410 DUP2
0x411 MSTORE
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP2
0x416 POP
0x417 POP
0x418 PUSH1 0x40
0x41a MLOAD
0x41b DUP1
0x41c SWAP2
0x41d SUB
0x41e SWAP1
0x41f RETURN
0x420 JUMPDEST
0x421 CALLVALUE
0x422 ISZERO
0x423 PUSH2 0x1fb
0x426 JUMPI
---
0x3fe: V236 = 0x0
0x401: REVERT 0x0 0x0
0x402: JUMPDEST 
0x403: V237 = 0x1da
0x406: V238 = 0x7d1
0x409: THROW 
0x40a: JUMPDEST 
0x40b: V239 = 0x40
0x40d: V240 = M[0x40]
0x411: M[V240] = S0
0x412: V241 = 0x20
0x414: V242 = ADD 0x20 V240
0x418: V243 = 0x40
0x41a: V244 = M[0x40]
0x41d: V245 = SUB V242 V244
0x41f: RETURN V244 V245
0x420: JUMPDEST 
0x421: V246 = CALLVALUE
0x422: V247 = ISZERO V246
0x423: V248 = 0x1fb
0x426: THROWI V247
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1da]
Exit stack: []

================================

Block 0x427
[0x427:0x49f]
---
Predecessors: [0x3fe]
Successors: [0x4a0]
---
0x427 PUSH1 0x0
0x429 DUP1
0x42a REVERT
0x42b JUMPDEST
0x42c PUSH2 0x24f
0x42f PUSH1 0x4
0x431 DUP1
0x432 DUP1
0x433 CALLDATALOAD
0x434 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x449 AND
0x44a SWAP1
0x44b PUSH1 0x20
0x44d ADD
0x44e SWAP1
0x44f SWAP2
0x450 SWAP1
0x451 DUP1
0x452 CALLDATALOAD
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 SWAP1
0x46a PUSH1 0x20
0x46c ADD
0x46d SWAP1
0x46e SWAP2
0x46f SWAP1
0x470 DUP1
0x471 CALLDATALOAD
0x472 SWAP1
0x473 PUSH1 0x20
0x475 ADD
0x476 SWAP1
0x477 SWAP2
0x478 SWAP1
0x479 POP
0x47a POP
0x47b PUSH2 0x7d7
0x47e JUMP
0x47f JUMPDEST
0x480 PUSH1 0x40
0x482 MLOAD
0x483 DUP1
0x484 DUP3
0x485 ISZERO
0x486 ISZERO
0x487 ISZERO
0x488 ISZERO
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x20
0x48d ADD
0x48e SWAP2
0x48f POP
0x490 POP
0x491 PUSH1 0x40
0x493 MLOAD
0x494 DUP1
0x495 SWAP2
0x496 SUB
0x497 SWAP1
0x498 RETURN
0x499 JUMPDEST
0x49a CALLVALUE
0x49b ISZERO
0x49c PUSH2 0x274
0x49f JUMPI
---
0x427: V249 = 0x0
0x42a: REVERT 0x0 0x0
0x42b: JUMPDEST 
0x42c: V250 = 0x24f
0x42f: V251 = 0x4
0x433: V252 = CALLDATALOAD 0x4
0x434: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x449: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x44b: V255 = 0x20
0x44d: V256 = ADD 0x20 0x4
0x452: V257 = CALLDATALOAD 0x24
0x453: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x46a: V260 = 0x20
0x46c: V261 = ADD 0x20 0x24
0x471: V262 = CALLDATALOAD 0x44
0x473: V263 = 0x20
0x475: V264 = ADD 0x20 0x44
0x47b: V265 = 0x7d7
0x47e: THROW 
0x47f: JUMPDEST 
0x480: V266 = 0x40
0x482: V267 = M[0x40]
0x485: V268 = ISZERO S0
0x486: V269 = ISZERO V268
0x487: V270 = ISZERO V269
0x488: V271 = ISZERO V270
0x48a: M[V267] = V271
0x48b: V272 = 0x20
0x48d: V273 = ADD 0x20 V267
0x491: V274 = 0x40
0x493: V275 = M[0x40]
0x496: V276 = SUB V273 V275
0x498: RETURN V275 V276
0x499: JUMPDEST 
0x49a: V277 = CALLVALUE
0x49b: V278 = ISZERO V277
0x49c: V279 = 0x274
0x49f: THROWI V278
---
Entry stack: []
Stack pops: 0
Stack additions: [V262, V259, V254, 0x24f]
Exit stack: []

================================

Block 0x4a0
[0x4a0:0x4ce]
---
Predecessors: [0x427]
Successors: [0x4cf]
---
0x4a0 PUSH1 0x0
0x4a2 DUP1
0x4a3 REVERT
0x4a4 JUMPDEST
0x4a5 PUSH2 0x27c
0x4a8 PUSH2 0xa6d
0x4ab JUMP
0x4ac JUMPDEST
0x4ad PUSH1 0x40
0x4af MLOAD
0x4b0 DUP1
0x4b1 DUP3
0x4b2 PUSH1 0xff
0x4b4 AND
0x4b5 PUSH1 0xff
0x4b7 AND
0x4b8 DUP2
0x4b9 MSTORE
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd SWAP2
0x4be POP
0x4bf POP
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 DUP1
0x4c4 SWAP2
0x4c5 SUB
0x4c6 SWAP1
0x4c7 RETURN
0x4c8 JUMPDEST
0x4c9 CALLVALUE
0x4ca ISZERO
0x4cb PUSH2 0x2a3
0x4ce JUMPI
---
0x4a0: V280 = 0x0
0x4a3: REVERT 0x0 0x0
0x4a4: JUMPDEST 
0x4a5: V281 = 0x27c
0x4a8: V282 = 0xa6d
0x4ab: THROW 
0x4ac: JUMPDEST 
0x4ad: V283 = 0x40
0x4af: V284 = M[0x40]
0x4b2: V285 = 0xff
0x4b4: V286 = AND 0xff S0
0x4b5: V287 = 0xff
0x4b7: V288 = AND 0xff V286
0x4b9: M[V284] = V288
0x4ba: V289 = 0x20
0x4bc: V290 = ADD 0x20 V284
0x4c0: V291 = 0x40
0x4c2: V292 = M[0x40]
0x4c5: V293 = SUB V290 V292
0x4c7: RETURN V292 V293
0x4c8: JUMPDEST 
0x4c9: V294 = CALLVALUE
0x4ca: V295 = ISZERO V294
0x4cb: V296 = 0x2a3
0x4ce: THROWI V295
---
Entry stack: []
Stack pops: 0
Stack additions: [0x27c]
Exit stack: []

================================

Block 0x4cf
[0x4cf:0x4f7]
---
Predecessors: [0x4a0]
Successors: [0x4f8]
---
0x4cf PUSH1 0x0
0x4d1 DUP1
0x4d2 REVERT
0x4d3 JUMPDEST
0x4d4 PUSH2 0x2ab
0x4d7 PUSH2 0xa80
0x4da JUMP
0x4db JUMPDEST
0x4dc PUSH1 0x40
0x4de MLOAD
0x4df DUP1
0x4e0 DUP3
0x4e1 DUP2
0x4e2 MSTORE
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 SWAP2
0x4e7 POP
0x4e8 POP
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec DUP1
0x4ed SWAP2
0x4ee SUB
0x4ef SWAP1
0x4f0 RETURN
0x4f1 JUMPDEST
0x4f2 CALLVALUE
0x4f3 ISZERO
0x4f4 PUSH2 0x2cc
0x4f7 JUMPI
---
0x4cf: V297 = 0x0
0x4d2: REVERT 0x0 0x0
0x4d3: JUMPDEST 
0x4d4: V298 = 0x2ab
0x4d7: V299 = 0xa80
0x4da: THROW 
0x4db: JUMPDEST 
0x4dc: V300 = 0x40
0x4de: V301 = M[0x40]
0x4e2: M[V301] = S0
0x4e3: V302 = 0x20
0x4e5: V303 = ADD 0x20 V301
0x4e9: V304 = 0x40
0x4eb: V305 = M[0x40]
0x4ee: V306 = SUB V303 V305
0x4f0: RETURN V305 V306
0x4f1: JUMPDEST 
0x4f2: V307 = CALLVALUE
0x4f3: V308 = ISZERO V307
0x4f4: V309 = 0x2cc
0x4f7: THROWI V308
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2ab]
Exit stack: []

================================

Block 0x4f8
[0x4f8:0x532]
---
Predecessors: [0x4cf]
Successors: [0x533]
---
0x4f8 PUSH1 0x0
0x4fa DUP1
0x4fb REVERT
0x4fc JUMPDEST
0x4fd PUSH2 0x2e2
0x500 PUSH1 0x4
0x502 DUP1
0x503 DUP1
0x504 CALLDATALOAD
0x505 SWAP1
0x506 PUSH1 0x20
0x508 ADD
0x509 SWAP1
0x50a SWAP2
0x50b SWAP1
0x50c POP
0x50d POP
0x50e PUSH2 0xa86
0x511 JUMP
0x512 JUMPDEST
0x513 PUSH1 0x40
0x515 MLOAD
0x516 DUP1
0x517 DUP3
0x518 ISZERO
0x519 ISZERO
0x51a ISZERO
0x51b ISZERO
0x51c DUP2
0x51d MSTORE
0x51e PUSH1 0x20
0x520 ADD
0x521 SWAP2
0x522 POP
0x523 POP
0x524 PUSH1 0x40
0x526 MLOAD
0x527 DUP1
0x528 SWAP2
0x529 SUB
0x52a SWAP1
0x52b RETURN
0x52c JUMPDEST
0x52d CALLVALUE
0x52e ISZERO
0x52f PUSH2 0x307
0x532 JUMPI
---
0x4f8: V310 = 0x0
0x4fb: REVERT 0x0 0x0
0x4fc: JUMPDEST 
0x4fd: V311 = 0x2e2
0x500: V312 = 0x4
0x504: V313 = CALLDATALOAD 0x4
0x506: V314 = 0x20
0x508: V315 = ADD 0x20 0x4
0x50e: V316 = 0xa86
0x511: THROW 
0x512: JUMPDEST 
0x513: V317 = 0x40
0x515: V318 = M[0x40]
0x518: V319 = ISZERO S0
0x519: V320 = ISZERO V319
0x51a: V321 = ISZERO V320
0x51b: V322 = ISZERO V321
0x51d: M[V318] = V322
0x51e: V323 = 0x20
0x520: V324 = ADD 0x20 V318
0x524: V325 = 0x40
0x526: V326 = M[0x40]
0x529: V327 = SUB V324 V326
0x52b: RETURN V326 V327
0x52c: JUMPDEST 
0x52d: V328 = CALLVALUE
0x52e: V329 = ISZERO V328
0x52f: V330 = 0x307
0x532: THROWI V329
---
Entry stack: []
Stack pops: 0
Stack additions: [V313, 0x2e2]
Exit stack: []

================================

Block 0x533
[0x533:0x563]
---
Predecessors: [0x4f8]
Successors: [0x564]
---
0x533 PUSH1 0x0
0x535 DUP1
0x536 REVERT
0x537 JUMPDEST
0x538 PUSH2 0x30f
0x53b PUSH2 0xb80
0x53e JUMP
0x53f JUMPDEST
0x540 PUSH1 0x40
0x542 MLOAD
0x543 DUP1
0x544 DUP1
0x545 PUSH1 0x20
0x547 ADD
0x548 DUP3
0x549 DUP2
0x54a SUB
0x54b DUP3
0x54c MSTORE
0x54d DUP4
0x54e DUP2
0x54f DUP2
0x550 MLOAD
0x551 DUP2
0x552 MSTORE
0x553 PUSH1 0x20
0x555 ADD
0x556 SWAP2
0x557 POP
0x558 DUP1
0x559 MLOAD
0x55a SWAP1
0x55b PUSH1 0x20
0x55d ADD
0x55e SWAP1
0x55f DUP1
0x560 DUP4
0x561 DUP4
0x562 PUSH1 0x0
---
0x533: V331 = 0x0
0x536: REVERT 0x0 0x0
0x537: JUMPDEST 
0x538: V332 = 0x30f
0x53b: V333 = 0xb80
0x53e: THROW 
0x53f: JUMPDEST 
0x540: V334 = 0x40
0x542: V335 = M[0x40]
0x545: V336 = 0x20
0x547: V337 = ADD 0x20 V335
0x54a: V338 = SUB V337 V335
0x54c: M[V335] = V338
0x550: V339 = M[S0]
0x552: M[V337] = V339
0x553: V340 = 0x20
0x555: V341 = ADD 0x20 V337
0x559: V342 = M[S0]
0x55b: V343 = 0x20
0x55d: V344 = ADD 0x20 S0
0x562: V345 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x30f, 0x0, V344, V341, V342, V342, V344, V341, V335, V335, S0]
Exit stack: []

================================

Block 0x564
[0x564:0x56c]
---
Predecessors: [0x533]
Successors: [0x56d]
---
0x564 JUMPDEST
0x565 DUP4
0x566 DUP2
0x567 LT
0x568 ISZERO
0x569 PUSH2 0x350
0x56c JUMPI
---
0x564: JUMPDEST 
0x567: V346 = LT 0x0 V342
0x568: V347 = ISZERO V346
0x569: V348 = 0x350
0x56c: THROWI V347
---
Entry stack: [S9, V335, V335, V341, V344, V342, V342, V341, V344, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V335, V335, V341, V344, V342, V342, V341, V344, 0x0]

================================

Block 0x56d
[0x56d:0x574]
---
Predecessors: [0x564]
Successors: [0x575]
---
0x56d DUP1
0x56e DUP3
0x56f ADD
0x570 MLOAD
0x571 DUP2
0x572 DUP5
0x573 ADD
0x574 MSTORE
---
0x56f: V349 = ADD V344 0x0
0x570: V350 = M[V349]
0x573: V351 = ADD V341 0x0
0x574: M[V351] = V350
---
Entry stack: [S9, V335, V335, V341, V344, V342, V342, V341, V344, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V335, V335, V341, V344, V342, V342, V341, V344, 0x0]

================================

Block 0x575
[0x575:0x593]
---
Predecessors: [0x56d]
Successors: [0x594]
---
0x575 JUMPDEST
0x576 PUSH1 0x20
0x578 DUP2
0x579 ADD
0x57a SWAP1
0x57b POP
0x57c PUSH2 0x334
0x57f JUMP
0x580 JUMPDEST
0x581 POP
0x582 POP
0x583 POP
0x584 POP
0x585 SWAP1
0x586 POP
0x587 SWAP1
0x588 DUP2
0x589 ADD
0x58a SWAP1
0x58b PUSH1 0x1f
0x58d AND
0x58e DUP1
0x58f ISZERO
0x590 PUSH2 0x37d
0x593 JUMPI
---
0x575: JUMPDEST 
0x576: V352 = 0x20
0x579: V353 = ADD 0x0 0x20
0x57c: V354 = 0x334
0x57f: THROW 
0x580: JUMPDEST 
0x589: V355 = ADD S4 S6
0x58b: V356 = 0x1f
0x58d: V357 = AND 0x1f S4
0x58f: V358 = ISZERO V357
0x590: V359 = 0x37d
0x593: THROWI V358
---
Entry stack: [S9, V335, V335, V341, V344, V342, V342, V341, V344, 0x0]
Stack pops: 1
Stack additions: [V357, V355]
Exit stack: []

================================

Block 0x594
[0x594:0x5ac]
---
Predecessors: [0x575]
Successors: [0x5ad]
---
0x594 DUP1
0x595 DUP3
0x596 SUB
0x597 DUP1
0x598 MLOAD
0x599 PUSH1 0x1
0x59b DUP4
0x59c PUSH1 0x20
0x59e SUB
0x59f PUSH2 0x100
0x5a2 EXP
0x5a3 SUB
0x5a4 NOT
0x5a5 AND
0x5a6 DUP2
0x5a7 MSTORE
0x5a8 PUSH1 0x20
0x5aa ADD
0x5ab SWAP2
0x5ac POP
---
0x596: V360 = SUB V355 V357
0x598: V361 = M[V360]
0x599: V362 = 0x1
0x59c: V363 = 0x20
0x59e: V364 = SUB 0x20 V357
0x59f: V365 = 0x100
0x5a2: V366 = EXP 0x100 V364
0x5a3: V367 = SUB V366 0x1
0x5a4: V368 = NOT V367
0x5a5: V369 = AND V368 V361
0x5a7: M[V360] = V369
0x5a8: V370 = 0x20
0x5aa: V371 = ADD 0x20 V360
---
Entry stack: [V355, V357]
Stack pops: 2
Stack additions: [V371, S0]
Exit stack: [V371, V357]

================================

Block 0x5ad
[0x5ad:0x5c1]
---
Predecessors: [0x594]
Successors: [0x5c2]
---
0x5ad JUMPDEST
0x5ae POP
0x5af SWAP3
0x5b0 POP
0x5b1 POP
0x5b2 POP
0x5b3 PUSH1 0x40
0x5b5 MLOAD
0x5b6 DUP1
0x5b7 SWAP2
0x5b8 SUB
0x5b9 SWAP1
0x5ba RETURN
0x5bb JUMPDEST
0x5bc CALLVALUE
0x5bd ISZERO
0x5be PUSH2 0x396
0x5c1 JUMPI
---
0x5ad: JUMPDEST 
0x5b3: V372 = 0x40
0x5b5: V373 = M[0x40]
0x5b8: V374 = SUB V371 V373
0x5ba: RETURN V373 V374
0x5bb: JUMPDEST 
0x5bc: V375 = CALLVALUE
0x5bd: V376 = ISZERO V375
0x5be: V377 = 0x396
0x5c1: THROWI V376
---
Entry stack: [V371, V357]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x5c2
[0x5c2:0x60e]
---
Predecessors: [0x5ad]
Successors: [0x60f]
---
0x5c2 PUSH1 0x0
0x5c4 DUP1
0x5c5 REVERT
0x5c6 JUMPDEST
0x5c7 PUSH2 0x3c2
0x5ca PUSH1 0x4
0x5cc DUP1
0x5cd DUP1
0x5ce CALLDATALOAD
0x5cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e4 AND
0x5e5 SWAP1
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 SWAP1
0x5ea SWAP2
0x5eb SWAP1
0x5ec POP
0x5ed POP
0x5ee PUSH2 0xc1e
0x5f1 JUMP
0x5f2 JUMPDEST
0x5f3 PUSH1 0x40
0x5f5 MLOAD
0x5f6 DUP1
0x5f7 DUP3
0x5f8 DUP2
0x5f9 MSTORE
0x5fa PUSH1 0x20
0x5fc ADD
0x5fd SWAP2
0x5fe POP
0x5ff POP
0x600 PUSH1 0x40
0x602 MLOAD
0x603 DUP1
0x604 SWAP2
0x605 SUB
0x606 SWAP1
0x607 RETURN
0x608 JUMPDEST
0x609 CALLVALUE
0x60a ISZERO
0x60b PUSH2 0x3e3
0x60e JUMPI
---
0x5c2: V378 = 0x0
0x5c5: REVERT 0x0 0x0
0x5c6: JUMPDEST 
0x5c7: V379 = 0x3c2
0x5ca: V380 = 0x4
0x5ce: V381 = CALLDATALOAD 0x4
0x5cf: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e4: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x5e6: V384 = 0x20
0x5e8: V385 = ADD 0x20 0x4
0x5ee: V386 = 0xc1e
0x5f1: THROW 
0x5f2: JUMPDEST 
0x5f3: V387 = 0x40
0x5f5: V388 = M[0x40]
0x5f9: M[V388] = S0
0x5fa: V389 = 0x20
0x5fc: V390 = ADD 0x20 V388
0x600: V391 = 0x40
0x602: V392 = M[0x40]
0x605: V393 = SUB V390 V392
0x607: RETURN V392 V393
0x608: JUMPDEST 
0x609: V394 = CALLVALUE
0x60a: V395 = ISZERO V394
0x60b: V396 = 0x3e3
0x60e: THROWI V395
---
Entry stack: []
Stack pops: 0
Stack additions: [V383, 0x3c2]
Exit stack: []

================================

Block 0x60f
[0x60f:0x663]
---
Predecessors: [0x5c2]
Successors: [0x664]
---
0x60f PUSH1 0x0
0x611 DUP1
0x612 REVERT
0x613 JUMPDEST
0x614 PUSH2 0x3eb
0x617 PUSH2 0xc68
0x61a JUMP
0x61b JUMPDEST
0x61c PUSH1 0x40
0x61e MLOAD
0x61f DUP1
0x620 DUP3
0x621 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x636 AND
0x637 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64c AND
0x64d DUP2
0x64e MSTORE
0x64f PUSH1 0x20
0x651 ADD
0x652 SWAP2
0x653 POP
0x654 POP
0x655 PUSH1 0x40
0x657 MLOAD
0x658 DUP1
0x659 SWAP2
0x65a SUB
0x65b SWAP1
0x65c RETURN
0x65d JUMPDEST
0x65e CALLVALUE
0x65f ISZERO
0x660 PUSH2 0x438
0x663 JUMPI
---
0x60f: V397 = 0x0
0x612: REVERT 0x0 0x0
0x613: JUMPDEST 
0x614: V398 = 0x3eb
0x617: V399 = 0xc68
0x61a: THROW 
0x61b: JUMPDEST 
0x61c: V400 = 0x40
0x61e: V401 = M[0x40]
0x621: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x636: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x637: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x64c: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x64e: M[V401] = V405
0x64f: V406 = 0x20
0x651: V407 = ADD 0x20 V401
0x655: V408 = 0x40
0x657: V409 = M[0x40]
0x65a: V410 = SUB V407 V409
0x65c: RETURN V409 V410
0x65d: JUMPDEST 
0x65e: V411 = CALLVALUE
0x65f: V412 = ISZERO V411
0x660: V413 = 0x438
0x663: THROWI V412
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3eb]
Exit stack: []

================================

Block 0x664
[0x664:0x694]
---
Predecessors: [0x60f]
Successors: [0x695]
---
0x664 PUSH1 0x0
0x666 DUP1
0x667 REVERT
0x668 JUMPDEST
0x669 PUSH2 0x440
0x66c PUSH2 0xc8e
0x66f JUMP
0x670 JUMPDEST
0x671 PUSH1 0x40
0x673 MLOAD
0x674 DUP1
0x675 DUP1
0x676 PUSH1 0x20
0x678 ADD
0x679 DUP3
0x67a DUP2
0x67b SUB
0x67c DUP3
0x67d MSTORE
0x67e DUP4
0x67f DUP2
0x680 DUP2
0x681 MLOAD
0x682 DUP2
0x683 MSTORE
0x684 PUSH1 0x20
0x686 ADD
0x687 SWAP2
0x688 POP
0x689 DUP1
0x68a MLOAD
0x68b SWAP1
0x68c PUSH1 0x20
0x68e ADD
0x68f SWAP1
0x690 DUP1
0x691 DUP4
0x692 DUP4
0x693 PUSH1 0x0
---
0x664: V414 = 0x0
0x667: REVERT 0x0 0x0
0x668: JUMPDEST 
0x669: V415 = 0x440
0x66c: V416 = 0xc8e
0x66f: THROW 
0x670: JUMPDEST 
0x671: V417 = 0x40
0x673: V418 = M[0x40]
0x676: V419 = 0x20
0x678: V420 = ADD 0x20 V418
0x67b: V421 = SUB V420 V418
0x67d: M[V418] = V421
0x681: V422 = M[S0]
0x683: M[V420] = V422
0x684: V423 = 0x20
0x686: V424 = ADD 0x20 V420
0x68a: V425 = M[S0]
0x68c: V426 = 0x20
0x68e: V427 = ADD 0x20 S0
0x693: V428 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x440, 0x0, V427, V424, V425, V425, V427, V424, V418, V418, S0]
Exit stack: []

================================

Block 0x695
[0x695:0x69d]
---
Predecessors: [0x664]
Successors: [0x69e]
---
0x695 JUMPDEST
0x696 DUP4
0x697 DUP2
0x698 LT
0x699 ISZERO
0x69a PUSH2 0x481
0x69d JUMPI
---
0x695: JUMPDEST 
0x698: V429 = LT 0x0 V425
0x699: V430 = ISZERO V429
0x69a: V431 = 0x481
0x69d: THROWI V430
---
Entry stack: [S9, V418, V418, V424, V427, V425, V425, V424, V427, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V418, V418, V424, V427, V425, V425, V424, V427, 0x0]

================================

Block 0x69e
[0x69e:0x6a5]
---
Predecessors: [0x695]
Successors: [0x6a6]
---
0x69e DUP1
0x69f DUP3
0x6a0 ADD
0x6a1 MLOAD
0x6a2 DUP2
0x6a3 DUP5
0x6a4 ADD
0x6a5 MSTORE
---
0x6a0: V432 = ADD V427 0x0
0x6a1: V433 = M[V432]
0x6a4: V434 = ADD V424 0x0
0x6a5: M[V434] = V433
---
Entry stack: [S9, V418, V418, V424, V427, V425, V425, V424, V427, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V418, V418, V424, V427, V425, V425, V424, V427, 0x0]

================================

Block 0x6a6
[0x6a6:0x6c4]
---
Predecessors: [0x69e]
Successors: [0x6c5]
---
0x6a6 JUMPDEST
0x6a7 PUSH1 0x20
0x6a9 DUP2
0x6aa ADD
0x6ab SWAP1
0x6ac POP
0x6ad PUSH2 0x465
0x6b0 JUMP
0x6b1 JUMPDEST
0x6b2 POP
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 SWAP1
0x6b7 POP
0x6b8 SWAP1
0x6b9 DUP2
0x6ba ADD
0x6bb SWAP1
0x6bc PUSH1 0x1f
0x6be AND
0x6bf DUP1
0x6c0 ISZERO
0x6c1 PUSH2 0x4ae
0x6c4 JUMPI
---
0x6a6: JUMPDEST 
0x6a7: V435 = 0x20
0x6aa: V436 = ADD 0x0 0x20
0x6ad: V437 = 0x465
0x6b0: THROW 
0x6b1: JUMPDEST 
0x6ba: V438 = ADD S4 S6
0x6bc: V439 = 0x1f
0x6be: V440 = AND 0x1f S4
0x6c0: V441 = ISZERO V440
0x6c1: V442 = 0x4ae
0x6c4: THROWI V441
---
Entry stack: [S9, V418, V418, V424, V427, V425, V425, V424, V427, 0x0]
Stack pops: 1
Stack additions: [V440, V438]
Exit stack: []

================================

Block 0x6c5
[0x6c5:0x6dd]
---
Predecessors: [0x6a6]
Successors: [0x6de]
---
0x6c5 DUP1
0x6c6 DUP3
0x6c7 SUB
0x6c8 DUP1
0x6c9 MLOAD
0x6ca PUSH1 0x1
0x6cc DUP4
0x6cd PUSH1 0x20
0x6cf SUB
0x6d0 PUSH2 0x100
0x6d3 EXP
0x6d4 SUB
0x6d5 NOT
0x6d6 AND
0x6d7 DUP2
0x6d8 MSTORE
0x6d9 PUSH1 0x20
0x6db ADD
0x6dc SWAP2
0x6dd POP
---
0x6c7: V443 = SUB V438 V440
0x6c9: V444 = M[V443]
0x6ca: V445 = 0x1
0x6cd: V446 = 0x20
0x6cf: V447 = SUB 0x20 V440
0x6d0: V448 = 0x100
0x6d3: V449 = EXP 0x100 V447
0x6d4: V450 = SUB V449 0x1
0x6d5: V451 = NOT V450
0x6d6: V452 = AND V451 V444
0x6d8: M[V443] = V452
0x6d9: V453 = 0x20
0x6db: V454 = ADD 0x20 V443
---
Entry stack: [V438, V440]
Stack pops: 2
Stack additions: [V454, S0]
Exit stack: [V454, V440]

================================

Block 0x6de
[0x6de:0x6f2]
---
Predecessors: [0x3a4, 0x6c5, 0x10e0]
Successors: [0x6f3]
---
0x6de JUMPDEST
0x6df POP
0x6e0 SWAP3
0x6e1 POP
0x6e2 POP
0x6e3 POP
0x6e4 PUSH1 0x40
0x6e6 MLOAD
0x6e7 DUP1
0x6e8 SWAP2
0x6e9 SUB
0x6ea SWAP1
0x6eb RETURN
0x6ec JUMPDEST
0x6ed CALLVALUE
0x6ee ISZERO
0x6ef PUSH2 0x4c7
0x6f2 JUMPI
---
0x6de: JUMPDEST 
0x6e4: V455 = 0x40
0x6e6: V456 = M[0x40]
0x6e9: V457 = SUB S1 V456
0x6eb: RETURN V456 V457
0x6ec: JUMPDEST 
0x6ed: V458 = CALLVALUE
0x6ee: V459 = ISZERO V458
0x6ef: V460 = 0x4c7
0x6f2: THROWI V459
---
Entry stack: [S6, S5, S4, S3, {0x1ad, 0xec5}, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x6f3
[0x6f3:0x74c]
---
Predecessors: [0x6de]
Successors: [0x74d]
---
0x6f3 PUSH1 0x0
0x6f5 DUP1
0x6f6 REVERT
0x6f7 JUMPDEST
0x6f8 PUSH2 0x4fc
0x6fb PUSH1 0x4
0x6fd DUP1
0x6fe DUP1
0x6ff CALLDATALOAD
0x700 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x715 AND
0x716 SWAP1
0x717 PUSH1 0x20
0x719 ADD
0x71a SWAP1
0x71b SWAP2
0x71c SWAP1
0x71d DUP1
0x71e CALLDATALOAD
0x71f SWAP1
0x720 PUSH1 0x20
0x722 ADD
0x723 SWAP1
0x724 SWAP2
0x725 SWAP1
0x726 POP
0x727 POP
0x728 PUSH2 0xd2c
0x72b JUMP
0x72c JUMPDEST
0x72d PUSH1 0x40
0x72f MLOAD
0x730 DUP1
0x731 DUP3
0x732 ISZERO
0x733 ISZERO
0x734 ISZERO
0x735 ISZERO
0x736 DUP2
0x737 MSTORE
0x738 PUSH1 0x20
0x73a ADD
0x73b SWAP2
0x73c POP
0x73d POP
0x73e PUSH1 0x40
0x740 MLOAD
0x741 DUP1
0x742 SWAP2
0x743 SUB
0x744 SWAP1
0x745 RETURN
0x746 JUMPDEST
0x747 CALLVALUE
0x748 ISZERO
0x749 PUSH2 0x521
0x74c JUMPI
---
0x6f3: V461 = 0x0
0x6f6: REVERT 0x0 0x0
0x6f7: JUMPDEST 
0x6f8: V462 = 0x4fc
0x6fb: V463 = 0x4
0x6ff: V464 = CALLDATALOAD 0x4
0x700: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x715: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x717: V467 = 0x20
0x719: V468 = ADD 0x20 0x4
0x71e: V469 = CALLDATALOAD 0x24
0x720: V470 = 0x20
0x722: V471 = ADD 0x20 0x24
0x728: V472 = 0xd2c
0x72b: THROW 
0x72c: JUMPDEST 
0x72d: V473 = 0x40
0x72f: V474 = M[0x40]
0x732: V475 = ISZERO S0
0x733: V476 = ISZERO V475
0x734: V477 = ISZERO V476
0x735: V478 = ISZERO V477
0x737: M[V474] = V478
0x738: V479 = 0x20
0x73a: V480 = ADD 0x20 V474
0x73e: V481 = 0x40
0x740: V482 = M[0x40]
0x743: V483 = SUB V480 V482
0x745: RETURN V482 V483
0x746: JUMPDEST 
0x747: V484 = CALLVALUE
0x748: V485 = ISZERO V484
0x749: V486 = 0x521
0x74c: THROWI V485
---
Entry stack: []
Stack pops: 0
Stack additions: [V469, V466, 0x4fc]
Exit stack: []

================================

Block 0x74d
[0x74d:0x7d1]
---
Predecessors: [0x6f3]
Successors: [0x7d2]
---
0x74d PUSH1 0x0
0x74f DUP1
0x750 REVERT
0x751 JUMPDEST
0x752 PUSH2 0x599
0x755 PUSH1 0x4
0x757 DUP1
0x758 DUP1
0x759 CALLDATALOAD
0x75a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76f AND
0x770 SWAP1
0x771 PUSH1 0x20
0x773 ADD
0x774 SWAP1
0x775 SWAP2
0x776 SWAP1
0x777 DUP1
0x778 CALLDATALOAD
0x779 SWAP1
0x77a PUSH1 0x20
0x77c ADD
0x77d SWAP1
0x77e SWAP2
0x77f SWAP1
0x780 DUP1
0x781 CALLDATALOAD
0x782 SWAP1
0x783 PUSH1 0x20
0x785 ADD
0x786 SWAP1
0x787 DUP3
0x788 ADD
0x789 DUP1
0x78a CALLDATALOAD
0x78b SWAP1
0x78c PUSH1 0x20
0x78e ADD
0x78f SWAP1
0x790 DUP1
0x791 DUP1
0x792 PUSH1 0x1f
0x794 ADD
0x795 PUSH1 0x20
0x797 DUP1
0x798 SWAP2
0x799 DIV
0x79a MUL
0x79b PUSH1 0x20
0x79d ADD
0x79e PUSH1 0x40
0x7a0 MLOAD
0x7a1 SWAP1
0x7a2 DUP2
0x7a3 ADD
0x7a4 PUSH1 0x40
0x7a6 MSTORE
0x7a7 DUP1
0x7a8 SWAP4
0x7a9 SWAP3
0x7aa SWAP2
0x7ab SWAP1
0x7ac DUP2
0x7ad DUP2
0x7ae MSTORE
0x7af PUSH1 0x20
0x7b1 ADD
0x7b2 DUP4
0x7b3 DUP4
0x7b4 DUP1
0x7b5 DUP3
0x7b6 DUP5
0x7b7 CALLDATACOPY
0x7b8 DUP3
0x7b9 ADD
0x7ba SWAP2
0x7bb POP
0x7bc POP
0x7bd POP
0x7be POP
0x7bf POP
0x7c0 POP
0x7c1 SWAP2
0x7c2 SWAP1
0x7c3 POP
0x7c4 POP
0x7c5 PUSH2 0xeb6
0x7c8 JUMP
0x7c9 JUMPDEST
0x7ca STOP
0x7cb JUMPDEST
0x7cc CALLVALUE
0x7cd ISZERO
0x7ce PUSH2 0x5a6
0x7d1 JUMPI
---
0x74d: V487 = 0x0
0x750: REVERT 0x0 0x0
0x751: JUMPDEST 
0x752: V488 = 0x599
0x755: V489 = 0x4
0x759: V490 = CALLDATALOAD 0x4
0x75a: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x76f: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x771: V493 = 0x20
0x773: V494 = ADD 0x20 0x4
0x778: V495 = CALLDATALOAD 0x24
0x77a: V496 = 0x20
0x77c: V497 = ADD 0x20 0x24
0x781: V498 = CALLDATALOAD 0x44
0x783: V499 = 0x20
0x785: V500 = ADD 0x20 0x44
0x788: V501 = ADD 0x4 V498
0x78a: V502 = CALLDATALOAD V501
0x78c: V503 = 0x20
0x78e: V504 = ADD 0x20 V501
0x792: V505 = 0x1f
0x794: V506 = ADD 0x1f V502
0x795: V507 = 0x20
0x799: V508 = DIV V506 0x20
0x79a: V509 = MUL V508 0x20
0x79b: V510 = 0x20
0x79d: V511 = ADD 0x20 V509
0x79e: V512 = 0x40
0x7a0: V513 = M[0x40]
0x7a3: V514 = ADD V513 V511
0x7a4: V515 = 0x40
0x7a6: M[0x40] = V514
0x7ae: M[V513] = V502
0x7af: V516 = 0x20
0x7b1: V517 = ADD 0x20 V513
0x7b7: CALLDATACOPY V517 V504 V502
0x7b9: V518 = ADD V517 V502
0x7c5: V519 = 0xeb6
0x7c8: THROW 
0x7c9: JUMPDEST 
0x7ca: STOP 
0x7cb: JUMPDEST 
0x7cc: V520 = CALLVALUE
0x7cd: V521 = ISZERO V520
0x7ce: V522 = 0x5a6
0x7d1: THROWI V521
---
Entry stack: []
Stack pops: 0
Stack additions: [V513, V495, V492, 0x599]
Exit stack: []

================================

Block 0x7d2
[0x7d2:0x83d]
---
Predecessors: [0x74d]
Successors: [0x83e]
---
0x7d2 PUSH1 0x0
0x7d4 DUP1
0x7d5 REVERT
0x7d6 JUMPDEST
0x7d7 PUSH2 0x5f1
0x7da PUSH1 0x4
0x7dc DUP1
0x7dd DUP1
0x7de CALLDATALOAD
0x7df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f4 AND
0x7f5 SWAP1
0x7f6 PUSH1 0x20
0x7f8 ADD
0x7f9 SWAP1
0x7fa SWAP2
0x7fb SWAP1
0x7fc DUP1
0x7fd CALLDATALOAD
0x7fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x813 AND
0x814 SWAP1
0x815 PUSH1 0x20
0x817 ADD
0x818 SWAP1
0x819 SWAP2
0x81a SWAP1
0x81b POP
0x81c POP
0x81d PUSH2 0x102a
0x820 JUMP
0x821 JUMPDEST
0x822 PUSH1 0x40
0x824 MLOAD
0x825 DUP1
0x826 DUP3
0x827 DUP2
0x828 MSTORE
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP2
0x82d POP
0x82e POP
0x82f PUSH1 0x40
0x831 MLOAD
0x832 DUP1
0x833 SWAP2
0x834 SUB
0x835 SWAP1
0x836 RETURN
0x837 JUMPDEST
0x838 CALLVALUE
0x839 ISZERO
0x83a PUSH2 0x612
0x83d JUMPI
---
0x7d2: V523 = 0x0
0x7d5: REVERT 0x0 0x0
0x7d6: JUMPDEST 
0x7d7: V524 = 0x5f1
0x7da: V525 = 0x4
0x7de: V526 = CALLDATALOAD 0x4
0x7df: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f4: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x7f6: V529 = 0x20
0x7f8: V530 = ADD 0x20 0x4
0x7fd: V531 = CALLDATALOAD 0x24
0x7fe: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x813: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x815: V534 = 0x20
0x817: V535 = ADD 0x20 0x24
0x81d: V536 = 0x102a
0x820: THROW 
0x821: JUMPDEST 
0x822: V537 = 0x40
0x824: V538 = M[0x40]
0x828: M[V538] = S0
0x829: V539 = 0x20
0x82b: V540 = ADD 0x20 V538
0x82f: V541 = 0x40
0x831: V542 = M[0x40]
0x834: V543 = SUB V540 V542
0x836: RETURN V542 V543
0x837: JUMPDEST 
0x838: V544 = CALLVALUE
0x839: V545 = ISZERO V544
0x83a: V546 = 0x612
0x83d: THROWI V545
---
Entry stack: []
Stack pops: 0
Stack additions: [V533, V528, 0x5f1]
Exit stack: []

================================

Block 0x83e
[0x83e:0x8bf]
---
Predecessors: [0x7d2]
Successors: [0x8c0]
---
0x83e PUSH1 0x0
0x840 DUP1
0x841 REVERT
0x842 JUMPDEST
0x843 PUSH2 0x63e
0x846 PUSH1 0x4
0x848 DUP1
0x849 DUP1
0x84a CALLDATALOAD
0x84b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x860 AND
0x861 SWAP1
0x862 PUSH1 0x20
0x864 ADD
0x865 SWAP1
0x866 SWAP2
0x867 SWAP1
0x868 POP
0x869 POP
0x86a PUSH2 0x10b2
0x86d JUMP
0x86e JUMPDEST
0x86f STOP
0x870 JUMPDEST
0x871 PUSH1 0x2
0x873 DUP1
0x874 SLOAD
0x875 PUSH1 0x1
0x877 DUP2
0x878 PUSH1 0x1
0x87a AND
0x87b ISZERO
0x87c PUSH2 0x100
0x87f MUL
0x880 SUB
0x881 AND
0x882 PUSH1 0x2
0x884 SWAP1
0x885 DIV
0x886 DUP1
0x887 PUSH1 0x1f
0x889 ADD
0x88a PUSH1 0x20
0x88c DUP1
0x88d SWAP2
0x88e DIV
0x88f MUL
0x890 PUSH1 0x20
0x892 ADD
0x893 PUSH1 0x40
0x895 MLOAD
0x896 SWAP1
0x897 DUP2
0x898 ADD
0x899 PUSH1 0x40
0x89b MSTORE
0x89c DUP1
0x89d SWAP3
0x89e SWAP2
0x89f SWAP1
0x8a0 DUP2
0x8a1 DUP2
0x8a2 MSTORE
0x8a3 PUSH1 0x20
0x8a5 ADD
0x8a6 DUP3
0x8a7 DUP1
0x8a8 SLOAD
0x8a9 PUSH1 0x1
0x8ab DUP2
0x8ac PUSH1 0x1
0x8ae AND
0x8af ISZERO
0x8b0 PUSH2 0x100
0x8b3 MUL
0x8b4 SUB
0x8b5 AND
0x8b6 PUSH1 0x2
0x8b8 SWAP1
0x8b9 DIV
0x8ba DUP1
0x8bb ISZERO
0x8bc PUSH2 0x6d6
0x8bf JUMPI
---
0x83e: V547 = 0x0
0x841: REVERT 0x0 0x0
0x842: JUMPDEST 
0x843: V548 = 0x63e
0x846: V549 = 0x4
0x84a: V550 = CALLDATALOAD 0x4
0x84b: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x860: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x862: V553 = 0x20
0x864: V554 = ADD 0x20 0x4
0x86a: V555 = 0x10b2
0x86d: THROW 
0x86e: JUMPDEST 
0x86f: STOP 
0x870: JUMPDEST 
0x871: V556 = 0x2
0x874: V557 = S[0x2]
0x875: V558 = 0x1
0x878: V559 = 0x1
0x87a: V560 = AND 0x1 V557
0x87b: V561 = ISZERO V560
0x87c: V562 = 0x100
0x87f: V563 = MUL 0x100 V561
0x880: V564 = SUB V563 0x1
0x881: V565 = AND V564 V557
0x882: V566 = 0x2
0x885: V567 = DIV V565 0x2
0x887: V568 = 0x1f
0x889: V569 = ADD 0x1f V567
0x88a: V570 = 0x20
0x88e: V571 = DIV V569 0x20
0x88f: V572 = MUL V571 0x20
0x890: V573 = 0x20
0x892: V574 = ADD 0x20 V572
0x893: V575 = 0x40
0x895: V576 = M[0x40]
0x898: V577 = ADD V576 V574
0x899: V578 = 0x40
0x89b: M[0x40] = V577
0x8a2: M[V576] = V567
0x8a3: V579 = 0x20
0x8a5: V580 = ADD 0x20 V576
0x8a8: V581 = S[0x2]
0x8a9: V582 = 0x1
0x8ac: V583 = 0x1
0x8ae: V584 = AND 0x1 V581
0x8af: V585 = ISZERO V584
0x8b0: V586 = 0x100
0x8b3: V587 = MUL 0x100 V585
0x8b4: V588 = SUB V587 0x1
0x8b5: V589 = AND V588 V581
0x8b6: V590 = 0x2
0x8b9: V591 = DIV V589 0x2
0x8bb: V592 = ISZERO V591
0x8bc: V593 = 0x6d6
0x8bf: THROWI V592
---
Entry stack: []
Stack pops: 0
Stack additions: [V552, 0x63e, V591, 0x2, V580, V567, 0x2, V576]
Exit stack: []

================================

Block 0x8c0
[0x8c0:0x8c7]
---
Predecessors: [0x83e]
Successors: [0x8c8]
---
0x8c0 DUP1
0x8c1 PUSH1 0x1f
0x8c3 LT
0x8c4 PUSH2 0x6ab
0x8c7 JUMPI
---
0x8c1: V594 = 0x1f
0x8c3: V595 = LT 0x1f V591
0x8c4: V596 = 0x6ab
0x8c7: THROWI V595
---
Entry stack: [V576, 0x2, V567, V580, 0x2, V591]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V576, 0x2, V567, V580, 0x2, V591]

================================

Block 0x8c8
[0x8c8:0x8e8]
---
Predecessors: [0x8c0]
Successors: [0x8e9]
---
0x8c8 PUSH2 0x100
0x8cb DUP1
0x8cc DUP4
0x8cd SLOAD
0x8ce DIV
0x8cf MUL
0x8d0 DUP4
0x8d1 MSTORE
0x8d2 SWAP2
0x8d3 PUSH1 0x20
0x8d5 ADD
0x8d6 SWAP2
0x8d7 PUSH2 0x6d6
0x8da JUMP
0x8db JUMPDEST
0x8dc DUP3
0x8dd ADD
0x8de SWAP2
0x8df SWAP1
0x8e0 PUSH1 0x0
0x8e2 MSTORE
0x8e3 PUSH1 0x20
0x8e5 PUSH1 0x0
0x8e7 SHA3
0x8e8 SWAP1
---
0x8c8: V597 = 0x100
0x8cd: V598 = S[0x2]
0x8ce: V599 = DIV V598 0x100
0x8cf: V600 = MUL V599 0x100
0x8d1: M[V580] = V600
0x8d3: V601 = 0x20
0x8d5: V602 = ADD 0x20 V580
0x8d7: V603 = 0x6d6
0x8da: THROW 
0x8db: JUMPDEST 
0x8dd: V604 = ADD S2 S0
0x8e0: V605 = 0x0
0x8e2: M[0x0] = S1
0x8e3: V606 = 0x20
0x8e5: V607 = 0x0
0x8e7: V608 = SHA3 0x0 0x20
---
Entry stack: [V576, 0x2, V567, V580, 0x2, V591]
Stack pops: 3
Stack additions: [S2, V608, V604]
Exit stack: []

================================

Block 0x8e9
[0x8e9:0x8fc]
---
Predecessors: [0x8c8]
Successors: [0x8fd]
---
0x8e9 JUMPDEST
0x8ea DUP2
0x8eb SLOAD
0x8ec DUP2
0x8ed MSTORE
0x8ee SWAP1
0x8ef PUSH1 0x1
0x8f1 ADD
0x8f2 SWAP1
0x8f3 PUSH1 0x20
0x8f5 ADD
0x8f6 DUP1
0x8f7 DUP4
0x8f8 GT
0x8f9 PUSH2 0x6b9
0x8fc JUMPI
---
0x8e9: JUMPDEST 
0x8eb: V609 = S[V608]
0x8ed: M[S0] = V609
0x8ef: V610 = 0x1
0x8f1: V611 = ADD 0x1 V608
0x8f3: V612 = 0x20
0x8f5: V613 = ADD 0x20 S0
0x8f8: V614 = GT V604 V613
0x8f9: V615 = 0x6b9
0x8fc: THROWI V614
---
Entry stack: [V604, V608, S0]
Stack pops: 3
Stack additions: [S2, V611, V613]
Exit stack: [V604, V611, V613]

================================

Block 0x8fd
[0x8fd:0x905]
---
Predecessors: [0x8e9]
Successors: [0x906]
---
0x8fd DUP3
0x8fe SWAP1
0x8ff SUB
0x900 PUSH1 0x1f
0x902 AND
0x903 DUP3
0x904 ADD
0x905 SWAP2
---
0x8ff: V616 = SUB V613 V604
0x900: V617 = 0x1f
0x902: V618 = AND 0x1f V616
0x904: V619 = ADD V604 V618
---
Entry stack: [V604, V611, V613]
Stack pops: 3
Stack additions: [V619, S1, S2]
Exit stack: [V619, V611, V604]

================================

Block 0x906
[0x906:0x9fa]
---
Predecessors: [0x8fd]
Successors: [0x9fb]
---
0x906 JUMPDEST
0x907 POP
0x908 POP
0x909 POP
0x90a POP
0x90b POP
0x90c DUP2
0x90d JUMP
0x90e JUMPDEST
0x90f PUSH1 0x0
0x911 DUP2
0x912 PUSH1 0x9
0x914 PUSH1 0x0
0x916 CALLER
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x942 AND
0x943 DUP2
0x944 MSTORE
0x945 PUSH1 0x20
0x947 ADD
0x948 SWAP1
0x949 DUP2
0x94a MSTORE
0x94b PUSH1 0x20
0x94d ADD
0x94e PUSH1 0x0
0x950 SHA3
0x951 PUSH1 0x0
0x953 DUP6
0x954 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x969 AND
0x96a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97f AND
0x980 DUP2
0x981 MSTORE
0x982 PUSH1 0x20
0x984 ADD
0x985 SWAP1
0x986 DUP2
0x987 MSTORE
0x988 PUSH1 0x20
0x98a ADD
0x98b PUSH1 0x0
0x98d SHA3
0x98e DUP2
0x98f SWAP1
0x990 SSTORE
0x991 POP
0x992 DUP3
0x993 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a8 AND
0x9a9 CALLER
0x9aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bf AND
0x9c0 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9e1 DUP5
0x9e2 PUSH1 0x40
0x9e4 MLOAD
0x9e5 DUP1
0x9e6 DUP3
0x9e7 DUP2
0x9e8 MSTORE
0x9e9 PUSH1 0x20
0x9eb ADD
0x9ec SWAP2
0x9ed POP
0x9ee POP
0x9ef PUSH1 0x40
0x9f1 MLOAD
0x9f2 DUP1
0x9f3 SWAP2
0x9f4 SUB
0x9f5 SWAP1
0x9f6 LOG3
0x9f7 PUSH1 0x1
0x9f9 SWAP1
0x9fa POP
---
0x906: JUMPDEST 
0x90d: JUMP S6
0x90e: JUMPDEST 
0x90f: V620 = 0x0
0x912: V621 = 0x9
0x914: V622 = 0x0
0x916: V623 = CALLER
0x917: V624 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x92d: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x942: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x944: M[0x0] = V627
0x945: V628 = 0x20
0x947: V629 = ADD 0x20 0x0
0x94a: M[0x20] = 0x9
0x94b: V630 = 0x20
0x94d: V631 = ADD 0x20 0x20
0x94e: V632 = 0x0
0x950: V633 = SHA3 0x0 0x40
0x951: V634 = 0x0
0x954: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0x969: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x96a: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0x97f: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0x981: M[0x0] = V638
0x982: V639 = 0x20
0x984: V640 = ADD 0x20 0x0
0x987: M[0x20] = V633
0x988: V641 = 0x20
0x98a: V642 = ADD 0x20 0x20
0x98b: V643 = 0x0
0x98d: V644 = SHA3 0x0 0x40
0x990: S[V644] = S0
0x993: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a8: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x9a9: V647 = CALLER
0x9aa: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0x9c0: V650 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9e2: V651 = 0x40
0x9e4: V652 = M[0x40]
0x9e8: M[V652] = S0
0x9e9: V653 = 0x20
0x9eb: V654 = ADD 0x20 V652
0x9ef: V655 = 0x40
0x9f1: V656 = M[0x40]
0x9f4: V657 = SUB V654 V656
0x9f6: LOG V656 V657 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V649 V646
0x9f7: V658 = 0x1
---
Entry stack: [V619, V611, V604]
Stack pops: 12
Stack additions: [0x1, S0, S1]
Exit stack: []

================================

Block 0x9fb
[0x9fb:0xc94]
---
Predecessors: [0x906]
Successors: [0xc95]
---
0x9fb JUMPDEST
0x9fc SWAP3
0x9fd SWAP2
0x9fe POP
0x9ff POP
0xa00 JUMP
0xa01 JUMPDEST
0xa02 PUSH1 0x7
0xa04 SLOAD
0xa05 DUP2
0xa06 JUMP
0xa07 JUMPDEST
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b PUSH1 0x9
0xa0d PUSH1 0x0
0xa0f DUP7
0xa10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa25 AND
0xa26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3b AND
0xa3c DUP2
0xa3d MSTORE
0xa3e PUSH1 0x20
0xa40 ADD
0xa41 SWAP1
0xa42 DUP2
0xa43 MSTORE
0xa44 PUSH1 0x20
0xa46 ADD
0xa47 PUSH1 0x0
0xa49 SHA3
0xa4a PUSH1 0x0
0xa4c CALLER
0xa4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa62 AND
0xa63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa78 AND
0xa79 DUP2
0xa7a MSTORE
0xa7b PUSH1 0x20
0xa7d ADD
0xa7e SWAP1
0xa7f DUP2
0xa80 MSTORE
0xa81 PUSH1 0x20
0xa83 ADD
0xa84 PUSH1 0x0
0xa86 SHA3
0xa87 SLOAD
0xa88 SWAP1
0xa89 POP
0xa8a PUSH2 0x8a2
0xa8d PUSH1 0x8
0xa8f PUSH1 0x0
0xa91 DUP7
0xa92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa7 AND
0xaa8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabd AND
0xabe DUP2
0xabf MSTORE
0xac0 PUSH1 0x20
0xac2 ADD
0xac3 SWAP1
0xac4 DUP2
0xac5 MSTORE
0xac6 PUSH1 0x20
0xac8 ADD
0xac9 PUSH1 0x0
0xacb SHA3
0xacc SLOAD
0xacd DUP5
0xace PUSH2 0x1186
0xad1 JUMP
0xad2 JUMPDEST
0xad3 PUSH1 0x8
0xad5 PUSH1 0x0
0xad7 DUP7
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed AND
0xaee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb03 AND
0xb04 DUP2
0xb05 MSTORE
0xb06 PUSH1 0x20
0xb08 ADD
0xb09 SWAP1
0xb0a DUP2
0xb0b MSTORE
0xb0c PUSH1 0x20
0xb0e ADD
0xb0f PUSH1 0x0
0xb11 SHA3
0xb12 DUP2
0xb13 SWAP1
0xb14 SSTORE
0xb15 POP
0xb16 PUSH2 0x92e
0xb19 PUSH1 0x8
0xb1b PUSH1 0x0
0xb1d DUP8
0xb1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb33 AND
0xb34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb49 AND
0xb4a DUP2
0xb4b MSTORE
0xb4c PUSH1 0x20
0xb4e ADD
0xb4f SWAP1
0xb50 DUP2
0xb51 MSTORE
0xb52 PUSH1 0x20
0xb54 ADD
0xb55 PUSH1 0x0
0xb57 SHA3
0xb58 SLOAD
0xb59 DUP5
0xb5a PUSH2 0x11a5
0xb5d JUMP
0xb5e JUMPDEST
0xb5f PUSH1 0x8
0xb61 PUSH1 0x0
0xb63 DUP8
0xb64 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb79 AND
0xb7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8f AND
0xb90 DUP2
0xb91 MSTORE
0xb92 PUSH1 0x20
0xb94 ADD
0xb95 SWAP1
0xb96 DUP2
0xb97 MSTORE
0xb98 PUSH1 0x20
0xb9a ADD
0xb9b PUSH1 0x0
0xb9d SHA3
0xb9e DUP2
0xb9f SWAP1
0xba0 SSTORE
0xba1 POP
0xba2 PUSH2 0x97b
0xba5 DUP2
0xba6 DUP5
0xba7 PUSH2 0x11a5
0xbaa JUMP
0xbab JUMPDEST
0xbac PUSH1 0x9
0xbae PUSH1 0x0
0xbb0 DUP8
0xbb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc6 AND
0xbc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdc AND
0xbdd DUP2
0xbde MSTORE
0xbdf PUSH1 0x20
0xbe1 ADD
0xbe2 SWAP1
0xbe3 DUP2
0xbe4 MSTORE
0xbe5 PUSH1 0x20
0xbe7 ADD
0xbe8 PUSH1 0x0
0xbea SHA3
0xbeb PUSH1 0x0
0xbed CALLER
0xbee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc03 AND
0xc04 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc19 AND
0xc1a DUP2
0xc1b MSTORE
0xc1c PUSH1 0x20
0xc1e ADD
0xc1f SWAP1
0xc20 DUP2
0xc21 MSTORE
0xc22 PUSH1 0x20
0xc24 ADD
0xc25 PUSH1 0x0
0xc27 SHA3
0xc28 DUP2
0xc29 SWAP1
0xc2a SSTORE
0xc2b POP
0xc2c DUP4
0xc2d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc42 AND
0xc43 DUP6
0xc44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc59 AND
0xc5a PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc7b DUP6
0xc7c PUSH1 0x40
0xc7e MLOAD
0xc7f DUP1
0xc80 DUP3
0xc81 DUP2
0xc82 MSTORE
0xc83 PUSH1 0x20
0xc85 ADD
0xc86 SWAP2
0xc87 POP
0xc88 POP
0xc89 PUSH1 0x40
0xc8b MLOAD
0xc8c DUP1
0xc8d SWAP2
0xc8e SUB
0xc8f SWAP1
0xc90 LOG3
0xc91 PUSH1 0x1
0xc93 SWAP2
0xc94 POP
---
0x9fb: JUMPDEST 
0xa00: JUMP S3
0xa01: JUMPDEST 
0xa02: V659 = 0x7
0xa04: V660 = S[0x7]
0xa06: JUMP S0
0xa07: JUMPDEST 
0xa08: V661 = 0x0
0xa0b: V662 = 0x9
0xa0d: V663 = 0x0
0xa10: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xa25: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa26: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3b: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0xa3d: M[0x0] = V667
0xa3e: V668 = 0x20
0xa40: V669 = ADD 0x20 0x0
0xa43: M[0x20] = 0x9
0xa44: V670 = 0x20
0xa46: V671 = ADD 0x20 0x20
0xa47: V672 = 0x0
0xa49: V673 = SHA3 0x0 0x40
0xa4a: V674 = 0x0
0xa4c: V675 = CALLER
0xa4d: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0xa62: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0xa63: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa78: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xa7a: M[0x0] = V679
0xa7b: V680 = 0x20
0xa7d: V681 = ADD 0x20 0x0
0xa80: M[0x20] = V673
0xa81: V682 = 0x20
0xa83: V683 = ADD 0x20 0x20
0xa84: V684 = 0x0
0xa86: V685 = SHA3 0x0 0x40
0xa87: V686 = S[V685]
0xa8a: V687 = 0x8a2
0xa8d: V688 = 0x8
0xa8f: V689 = 0x0
0xa92: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa7: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xaa8: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xabd: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0xabf: M[0x0] = V693
0xac0: V694 = 0x20
0xac2: V695 = ADD 0x20 0x0
0xac5: M[0x20] = 0x8
0xac6: V696 = 0x20
0xac8: V697 = ADD 0x20 0x20
0xac9: V698 = 0x0
0xacb: V699 = SHA3 0x0 0x40
0xacc: V700 = S[V699]
0xace: V701 = 0x1186
0xad1: THROW 
0xad2: JUMPDEST 
0xad3: V702 = 0x8
0xad5: V703 = 0x0
0xad8: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xaee: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xb03: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0xb05: M[0x0] = V707
0xb06: V708 = 0x20
0xb08: V709 = ADD 0x20 0x0
0xb0b: M[0x20] = 0x8
0xb0c: V710 = 0x20
0xb0e: V711 = ADD 0x20 0x20
0xb0f: V712 = 0x0
0xb11: V713 = SHA3 0x0 0x40
0xb14: S[V713] = S0
0xb16: V714 = 0x92e
0xb19: V715 = 0x8
0xb1b: V716 = 0x0
0xb1e: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xb33: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xb34: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xb49: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0xb4b: M[0x0] = V720
0xb4c: V721 = 0x20
0xb4e: V722 = ADD 0x20 0x0
0xb51: M[0x20] = 0x8
0xb52: V723 = 0x20
0xb54: V724 = ADD 0x20 0x20
0xb55: V725 = 0x0
0xb57: V726 = SHA3 0x0 0x40
0xb58: V727 = S[V726]
0xb5a: V728 = 0x11a5
0xb5d: THROW 
0xb5e: JUMPDEST 
0xb5f: V729 = 0x8
0xb61: V730 = 0x0
0xb64: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0xb79: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xb7a: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8f: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0xb91: M[0x0] = V734
0xb92: V735 = 0x20
0xb94: V736 = ADD 0x20 0x0
0xb97: M[0x20] = 0x8
0xb98: V737 = 0x20
0xb9a: V738 = ADD 0x20 0x20
0xb9b: V739 = 0x0
0xb9d: V740 = SHA3 0x0 0x40
0xba0: S[V740] = S0
0xba2: V741 = 0x97b
0xba7: V742 = 0x11a5
0xbaa: THROW 
0xbab: JUMPDEST 
0xbac: V743 = 0x9
0xbae: V744 = 0x0
0xbb1: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc6: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xbc7: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdc: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xbde: M[0x0] = V748
0xbdf: V749 = 0x20
0xbe1: V750 = ADD 0x20 0x0
0xbe4: M[0x20] = 0x9
0xbe5: V751 = 0x20
0xbe7: V752 = ADD 0x20 0x20
0xbe8: V753 = 0x0
0xbea: V754 = SHA3 0x0 0x40
0xbeb: V755 = 0x0
0xbed: V756 = CALLER
0xbee: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xc03: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xc04: V759 = 0xffffffffffffffffffffffffffffffffffffffff
0xc19: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0xc1b: M[0x0] = V760
0xc1c: V761 = 0x20
0xc1e: V762 = ADD 0x20 0x0
0xc21: M[0x20] = V754
0xc22: V763 = 0x20
0xc24: V764 = ADD 0x20 0x20
0xc25: V765 = 0x0
0xc27: V766 = SHA3 0x0 0x40
0xc2a: S[V766] = S0
0xc2d: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xc42: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc44: V769 = 0xffffffffffffffffffffffffffffffffffffffff
0xc59: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xc5a: V771 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc7c: V772 = 0x40
0xc7e: V773 = M[0x40]
0xc82: M[V773] = S3
0xc83: V774 = 0x20
0xc85: V775 = ADD 0x20 V773
0xc89: V776 = 0x40
0xc8b: V777 = M[0x40]
0xc8e: V778 = SUB V775 V777
0xc90: LOG V777 V778 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V770 V768
0xc91: V779 = 0x1
---
Entry stack: [S2, S1, 0x1]
Stack pops: 40
Stack additions: [S1, 0x1, S3, S4, S5]
Exit stack: []

================================

Block 0xc95
[0xc95:0xdaa]
---
Predecessors: [0x9fb]
Successors: [0xdab]
---
0xc95 JUMPDEST
0xc96 POP
0xc97 SWAP4
0xc98 SWAP3
0xc99 POP
0xc9a POP
0xc9b POP
0xc9c JUMP
0xc9d JUMPDEST
0xc9e PUSH1 0x4
0xca0 PUSH1 0x0
0xca2 SWAP1
0xca3 SLOAD
0xca4 SWAP1
0xca5 PUSH2 0x100
0xca8 EXP
0xca9 SWAP1
0xcaa DIV
0xcab PUSH1 0xff
0xcad AND
0xcae DUP2
0xcaf JUMP
0xcb0 JUMPDEST
0xcb1 PUSH1 0x6
0xcb3 SLOAD
0xcb4 DUP2
0xcb5 JUMP
0xcb6 JUMPDEST
0xcb7 PUSH1 0x0
0xcb9 PUSH2 0xad1
0xcbc PUSH1 0x8
0xcbe PUSH1 0x0
0xcc0 CALLER
0xcc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd6 AND
0xcd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcec AND
0xced DUP2
0xcee MSTORE
0xcef PUSH1 0x20
0xcf1 ADD
0xcf2 SWAP1
0xcf3 DUP2
0xcf4 MSTORE
0xcf5 PUSH1 0x20
0xcf7 ADD
0xcf8 PUSH1 0x0
0xcfa SHA3
0xcfb SLOAD
0xcfc DUP4
0xcfd PUSH2 0x11a5
0xd00 JUMP
0xd01 JUMPDEST
0xd02 PUSH1 0x8
0xd04 PUSH1 0x0
0xd06 CALLER
0xd07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1c AND
0xd1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd32 AND
0xd33 DUP2
0xd34 MSTORE
0xd35 PUSH1 0x20
0xd37 ADD
0xd38 SWAP1
0xd39 DUP2
0xd3a MSTORE
0xd3b PUSH1 0x20
0xd3d ADD
0xd3e PUSH1 0x0
0xd40 SHA3
0xd41 DUP2
0xd42 SWAP1
0xd43 SSTORE
0xd44 POP
0xd45 PUSH2 0xb20
0xd48 PUSH1 0x7
0xd4a SLOAD
0xd4b DUP4
0xd4c PUSH2 0x11a5
0xd4f JUMP
0xd50 JUMPDEST
0xd51 PUSH1 0x7
0xd53 DUP2
0xd54 SWAP1
0xd55 SSTORE
0xd56 POP
0xd57 PUSH1 0x0
0xd59 CALLER
0xd5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6f AND
0xd70 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd91 DUP5
0xd92 PUSH1 0x40
0xd94 MLOAD
0xd95 DUP1
0xd96 DUP3
0xd97 DUP2
0xd98 MSTORE
0xd99 PUSH1 0x20
0xd9b ADD
0xd9c SWAP2
0xd9d POP
0xd9e POP
0xd9f PUSH1 0x40
0xda1 MLOAD
0xda2 DUP1
0xda3 SWAP2
0xda4 SUB
0xda5 SWAP1
0xda6 LOG3
0xda7 PUSH1 0x1
0xda9 SWAP1
0xdaa POP
---
0xc95: JUMPDEST 
0xc9c: JUMP S5
0xc9d: JUMPDEST 
0xc9e: V780 = 0x4
0xca0: V781 = 0x0
0xca3: V782 = S[0x4]
0xca5: V783 = 0x100
0xca8: V784 = EXP 0x100 0x0
0xcaa: V785 = DIV V782 0x1
0xcab: V786 = 0xff
0xcad: V787 = AND 0xff V785
0xcaf: JUMP S0
0xcb0: JUMPDEST 
0xcb1: V788 = 0x6
0xcb3: V789 = S[0x6]
0xcb5: JUMP S0
0xcb6: JUMPDEST 
0xcb7: V790 = 0x0
0xcb9: V791 = 0xad1
0xcbc: V792 = 0x8
0xcbe: V793 = 0x0
0xcc0: V794 = CALLER
0xcc1: V795 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd6: V796 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0xcd7: V797 = 0xffffffffffffffffffffffffffffffffffffffff
0xcec: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V796
0xcee: M[0x0] = V798
0xcef: V799 = 0x20
0xcf1: V800 = ADD 0x20 0x0
0xcf4: M[0x20] = 0x8
0xcf5: V801 = 0x20
0xcf7: V802 = ADD 0x20 0x20
0xcf8: V803 = 0x0
0xcfa: V804 = SHA3 0x0 0x40
0xcfb: V805 = S[V804]
0xcfd: V806 = 0x11a5
0xd00: THROW 
0xd01: JUMPDEST 
0xd02: V807 = 0x8
0xd04: V808 = 0x0
0xd06: V809 = CALLER
0xd07: V810 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1c: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V809
0xd1d: V812 = 0xffffffffffffffffffffffffffffffffffffffff
0xd32: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V811
0xd34: M[0x0] = V813
0xd35: V814 = 0x20
0xd37: V815 = ADD 0x20 0x0
0xd3a: M[0x20] = 0x8
0xd3b: V816 = 0x20
0xd3d: V817 = ADD 0x20 0x20
0xd3e: V818 = 0x0
0xd40: V819 = SHA3 0x0 0x40
0xd43: S[V819] = S0
0xd45: V820 = 0xb20
0xd48: V821 = 0x7
0xd4a: V822 = S[0x7]
0xd4c: V823 = 0x11a5
0xd4f: THROW 
0xd50: JUMPDEST 
0xd51: V824 = 0x7
0xd55: S[0x7] = S0
0xd57: V825 = 0x0
0xd59: V826 = CALLER
0xd5a: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6f: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0xd70: V829 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd92: V830 = 0x40
0xd94: V831 = M[0x40]
0xd98: M[V831] = S2
0xd99: V832 = 0x20
0xd9b: V833 = ADD 0x20 V831
0xd9f: V834 = 0x40
0xda1: V835 = M[0x40]
0xda4: V836 = SUB V833 V835
0xda6: LOG V835 V836 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V828 0x0
0xda7: V837 = 0x1
---
Entry stack: [S4, S3, S2, 0x1, S0]
Stack pops: 137
Stack additions: [0x1, S2]
Exit stack: []

================================

Block 0xdab
[0xdab:0xdff]
---
Predecessors: [0xc95]
Successors: [0xe00]
---
0xdab JUMPDEST
0xdac SWAP2
0xdad SWAP1
0xdae POP
0xdaf JUMP
0xdb0 JUMPDEST
0xdb1 PUSH1 0x5
0xdb3 DUP1
0xdb4 SLOAD
0xdb5 PUSH1 0x1
0xdb7 DUP2
0xdb8 PUSH1 0x1
0xdba AND
0xdbb ISZERO
0xdbc PUSH2 0x100
0xdbf MUL
0xdc0 SUB
0xdc1 AND
0xdc2 PUSH1 0x2
0xdc4 SWAP1
0xdc5 DIV
0xdc6 DUP1
0xdc7 PUSH1 0x1f
0xdc9 ADD
0xdca PUSH1 0x20
0xdcc DUP1
0xdcd SWAP2
0xdce DIV
0xdcf MUL
0xdd0 PUSH1 0x20
0xdd2 ADD
0xdd3 PUSH1 0x40
0xdd5 MLOAD
0xdd6 SWAP1
0xdd7 DUP2
0xdd8 ADD
0xdd9 PUSH1 0x40
0xddb MSTORE
0xddc DUP1
0xddd SWAP3
0xdde SWAP2
0xddf SWAP1
0xde0 DUP2
0xde1 DUP2
0xde2 MSTORE
0xde3 PUSH1 0x20
0xde5 ADD
0xde6 DUP3
0xde7 DUP1
0xde8 SLOAD
0xde9 PUSH1 0x1
0xdeb DUP2
0xdec PUSH1 0x1
0xdee AND
0xdef ISZERO
0xdf0 PUSH2 0x100
0xdf3 MUL
0xdf4 SUB
0xdf5 AND
0xdf6 PUSH1 0x2
0xdf8 SWAP1
0xdf9 DIV
0xdfa DUP1
0xdfb ISZERO
0xdfc PUSH2 0xc16
0xdff JUMPI
---
0xdab: JUMPDEST 
0xdaf: JUMP S2
0xdb0: JUMPDEST 
0xdb1: V838 = 0x5
0xdb4: V839 = S[0x5]
0xdb5: V840 = 0x1
0xdb8: V841 = 0x1
0xdba: V842 = AND 0x1 V839
0xdbb: V843 = ISZERO V842
0xdbc: V844 = 0x100
0xdbf: V845 = MUL 0x100 V843
0xdc0: V846 = SUB V845 0x1
0xdc1: V847 = AND V846 V839
0xdc2: V848 = 0x2
0xdc5: V849 = DIV V847 0x2
0xdc7: V850 = 0x1f
0xdc9: V851 = ADD 0x1f V849
0xdca: V852 = 0x20
0xdce: V853 = DIV V851 0x20
0xdcf: V854 = MUL V853 0x20
0xdd0: V855 = 0x20
0xdd2: V856 = ADD 0x20 V854
0xdd3: V857 = 0x40
0xdd5: V858 = M[0x40]
0xdd8: V859 = ADD V858 V856
0xdd9: V860 = 0x40
0xddb: M[0x40] = V859
0xde2: M[V858] = V849
0xde3: V861 = 0x20
0xde5: V862 = ADD 0x20 V858
0xde8: V863 = S[0x5]
0xde9: V864 = 0x1
0xdec: V865 = 0x1
0xdee: V866 = AND 0x1 V863
0xdef: V867 = ISZERO V866
0xdf0: V868 = 0x100
0xdf3: V869 = MUL 0x100 V867
0xdf4: V870 = SUB V869 0x1
0xdf5: V871 = AND V870 V863
0xdf6: V872 = 0x2
0xdf9: V873 = DIV V871 0x2
0xdfb: V874 = ISZERO V873
0xdfc: V875 = 0xc16
0xdff: THROWI V874
---
Entry stack: [S1, 0x1]
Stack pops: 5
Stack additions: [V873, 0x5, V862, V849, 0x5, V858]
Exit stack: []

================================

Block 0xe00
[0xe00:0xe07]
---
Predecessors: [0xdab]
Successors: [0xe08]
---
0xe00 DUP1
0xe01 PUSH1 0x1f
0xe03 LT
0xe04 PUSH2 0xbeb
0xe07 JUMPI
---
0xe01: V876 = 0x1f
0xe03: V877 = LT 0x1f V873
0xe04: V878 = 0xbeb
0xe07: THROWI V877
---
Entry stack: [V858, 0x5, V849, V862, 0x5, V873]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V858, 0x5, V849, V862, 0x5, V873]

================================

Block 0xe08
[0xe08:0xe28]
---
Predecessors: [0xe00]
Successors: [0xe29]
---
0xe08 PUSH2 0x100
0xe0b DUP1
0xe0c DUP4
0xe0d SLOAD
0xe0e DIV
0xe0f MUL
0xe10 DUP4
0xe11 MSTORE
0xe12 SWAP2
0xe13 PUSH1 0x20
0xe15 ADD
0xe16 SWAP2
0xe17 PUSH2 0xc16
0xe1a JUMP
0xe1b JUMPDEST
0xe1c DUP3
0xe1d ADD
0xe1e SWAP2
0xe1f SWAP1
0xe20 PUSH1 0x0
0xe22 MSTORE
0xe23 PUSH1 0x20
0xe25 PUSH1 0x0
0xe27 SHA3
0xe28 SWAP1
---
0xe08: V879 = 0x100
0xe0d: V880 = S[0x5]
0xe0e: V881 = DIV V880 0x100
0xe0f: V882 = MUL V881 0x100
0xe11: M[V862] = V882
0xe13: V883 = 0x20
0xe15: V884 = ADD 0x20 V862
0xe17: V885 = 0xc16
0xe1a: THROW 
0xe1b: JUMPDEST 
0xe1d: V886 = ADD S2 S0
0xe20: V887 = 0x0
0xe22: M[0x0] = S1
0xe23: V888 = 0x20
0xe25: V889 = 0x0
0xe27: V890 = SHA3 0x0 0x20
---
Entry stack: [V858, 0x5, V849, V862, 0x5, V873]
Stack pops: 3
Stack additions: [S2, V890, V886]
Exit stack: []

================================

Block 0xe29
[0xe29:0xe3c]
---
Predecessors: [0xe08]
Successors: [0xe3d]
---
0xe29 JUMPDEST
0xe2a DUP2
0xe2b SLOAD
0xe2c DUP2
0xe2d MSTORE
0xe2e SWAP1
0xe2f PUSH1 0x1
0xe31 ADD
0xe32 SWAP1
0xe33 PUSH1 0x20
0xe35 ADD
0xe36 DUP1
0xe37 DUP4
0xe38 GT
0xe39 PUSH2 0xbf9
0xe3c JUMPI
---
0xe29: JUMPDEST 
0xe2b: V891 = S[V890]
0xe2d: M[S0] = V891
0xe2f: V892 = 0x1
0xe31: V893 = ADD 0x1 V890
0xe33: V894 = 0x20
0xe35: V895 = ADD 0x20 S0
0xe38: V896 = GT V886 V895
0xe39: V897 = 0xbf9
0xe3c: THROWI V896
---
Entry stack: [V886, V890, S0]
Stack pops: 3
Stack additions: [S2, V893, V895]
Exit stack: [V886, V893, V895]

================================

Block 0xe3d
[0xe3d:0xe45]
---
Predecessors: [0xe29]
Successors: [0xe46]
---
0xe3d DUP3
0xe3e SWAP1
0xe3f SUB
0xe40 PUSH1 0x1f
0xe42 AND
0xe43 DUP3
0xe44 ADD
0xe45 SWAP2
---
0xe3f: V898 = SUB V895 V886
0xe40: V899 = 0x1f
0xe42: V900 = AND 0x1f V898
0xe44: V901 = ADD V886 V900
---
Entry stack: [V886, V893, V895]
Stack pops: 3
Stack additions: [V901, S1, S2]
Exit stack: [V901, V893, V886]

================================

Block 0xe46
[0xe46:0xe92]
---
Predecessors: [0xe3d]
Successors: [0xe93]
---
0xe46 JUMPDEST
0xe47 POP
0xe48 POP
0xe49 POP
0xe4a POP
0xe4b POP
0xe4c DUP2
0xe4d JUMP
0xe4e JUMPDEST
0xe4f PUSH1 0x0
0xe51 PUSH1 0x8
0xe53 PUSH1 0x0
0xe55 DUP4
0xe56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6b AND
0xe6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe81 AND
0xe82 DUP2
0xe83 MSTORE
0xe84 PUSH1 0x20
0xe86 ADD
0xe87 SWAP1
0xe88 DUP2
0xe89 MSTORE
0xe8a PUSH1 0x20
0xe8c ADD
0xe8d PUSH1 0x0
0xe8f SHA3
0xe90 SLOAD
0xe91 SWAP1
0xe92 POP
---
0xe46: JUMPDEST 
0xe4d: JUMP S6
0xe4e: JUMPDEST 
0xe4f: V902 = 0x0
0xe51: V903 = 0x8
0xe53: V904 = 0x0
0xe56: V905 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6b: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe6c: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0xe81: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xe83: M[0x0] = V908
0xe84: V909 = 0x20
0xe86: V910 = ADD 0x20 0x0
0xe89: M[0x20] = 0x8
0xe8a: V911 = 0x20
0xe8c: V912 = ADD 0x20 0x20
0xe8d: V913 = 0x0
0xe8f: V914 = SHA3 0x0 0x40
0xe90: V915 = S[V914]
---
Entry stack: [V901, V893, V886]
Stack pops: 12
Stack additions: [V915, S0]
Exit stack: []

================================

Block 0xe93
[0xe93:0xf0d]
---
Predecessors: [0xe46]
Successors: [0xf0e]
---
0xe93 JUMPDEST
0xe94 SWAP2
0xe95 SWAP1
0xe96 POP
0xe97 JUMP
0xe98 JUMPDEST
0xe99 PUSH1 0x1
0xe9b PUSH1 0x0
0xe9d SWAP1
0xe9e SLOAD
0xe9f SWAP1
0xea0 PUSH2 0x100
0xea3 EXP
0xea4 SWAP1
0xea5 DIV
0xea6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xebb AND
0xebc DUP2
0xebd JUMP
0xebe JUMPDEST
0xebf PUSH1 0x3
0xec1 DUP1
0xec2 SLOAD
0xec3 PUSH1 0x1
0xec5 DUP2
0xec6 PUSH1 0x1
0xec8 AND
0xec9 ISZERO
0xeca PUSH2 0x100
0xecd MUL
0xece SUB
0xecf AND
0xed0 PUSH1 0x2
0xed2 SWAP1
0xed3 DIV
0xed4 DUP1
0xed5 PUSH1 0x1f
0xed7 ADD
0xed8 PUSH1 0x20
0xeda DUP1
0xedb SWAP2
0xedc DIV
0xedd MUL
0xede PUSH1 0x20
0xee0 ADD
0xee1 PUSH1 0x40
0xee3 MLOAD
0xee4 SWAP1
0xee5 DUP2
0xee6 ADD
0xee7 PUSH1 0x40
0xee9 MSTORE
0xeea DUP1
0xeeb SWAP3
0xeec SWAP2
0xeed SWAP1
0xeee DUP2
0xeef DUP2
0xef0 MSTORE
0xef1 PUSH1 0x20
0xef3 ADD
0xef4 DUP3
0xef5 DUP1
0xef6 SLOAD
0xef7 PUSH1 0x1
0xef9 DUP2
0xefa PUSH1 0x1
0xefc AND
0xefd ISZERO
0xefe PUSH2 0x100
0xf01 MUL
0xf02 SUB
0xf03 AND
0xf04 PUSH1 0x2
0xf06 SWAP1
0xf07 DIV
0xf08 DUP1
0xf09 ISZERO
0xf0a PUSH2 0xd24
0xf0d JUMPI
---
0xe93: JUMPDEST 
0xe97: JUMP S2
0xe98: JUMPDEST 
0xe99: V916 = 0x1
0xe9b: V917 = 0x0
0xe9e: V918 = S[0x1]
0xea0: V919 = 0x100
0xea3: V920 = EXP 0x100 0x0
0xea5: V921 = DIV V918 0x1
0xea6: V922 = 0xffffffffffffffffffffffffffffffffffffffff
0xebb: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V921
0xebd: JUMP S0
0xebe: JUMPDEST 
0xebf: V924 = 0x3
0xec2: V925 = S[0x3]
0xec3: V926 = 0x1
0xec6: V927 = 0x1
0xec8: V928 = AND 0x1 V925
0xec9: V929 = ISZERO V928
0xeca: V930 = 0x100
0xecd: V931 = MUL 0x100 V929
0xece: V932 = SUB V931 0x1
0xecf: V933 = AND V932 V925
0xed0: V934 = 0x2
0xed3: V935 = DIV V933 0x2
0xed5: V936 = 0x1f
0xed7: V937 = ADD 0x1f V935
0xed8: V938 = 0x20
0xedc: V939 = DIV V937 0x20
0xedd: V940 = MUL V939 0x20
0xede: V941 = 0x20
0xee0: V942 = ADD 0x20 V940
0xee1: V943 = 0x40
0xee3: V944 = M[0x40]
0xee6: V945 = ADD V944 V942
0xee7: V946 = 0x40
0xee9: M[0x40] = V945
0xef0: M[V944] = V935
0xef1: V947 = 0x20
0xef3: V948 = ADD 0x20 V944
0xef6: V949 = S[0x3]
0xef7: V950 = 0x1
0xefa: V951 = 0x1
0xefc: V952 = AND 0x1 V949
0xefd: V953 = ISZERO V952
0xefe: V954 = 0x100
0xf01: V955 = MUL 0x100 V953
0xf02: V956 = SUB V955 0x1
0xf03: V957 = AND V956 V949
0xf04: V958 = 0x2
0xf07: V959 = DIV V957 0x2
0xf09: V960 = ISZERO V959
0xf0a: V961 = 0xd24
0xf0d: THROWI V960
---
Entry stack: [S1, V915]
Stack pops: 8
Stack additions: [V959, 0x3, V948, V935, 0x3, V944]
Exit stack: []

================================

Block 0xf0e
[0xf0e:0xf15]
---
Predecessors: [0xe93]
Successors: [0xf16]
---
0xf0e DUP1
0xf0f PUSH1 0x1f
0xf11 LT
0xf12 PUSH2 0xcf9
0xf15 JUMPI
---
0xf0f: V962 = 0x1f
0xf11: V963 = LT 0x1f V959
0xf12: V964 = 0xcf9
0xf15: THROWI V963
---
Entry stack: [V944, 0x3, V935, V948, 0x3, V959]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V944, 0x3, V935, V948, 0x3, V959]

================================

Block 0xf16
[0xf16:0xf36]
---
Predecessors: [0xf0e]
Successors: [0xf37]
---
0xf16 PUSH2 0x100
0xf19 DUP1
0xf1a DUP4
0xf1b SLOAD
0xf1c DIV
0xf1d MUL
0xf1e DUP4
0xf1f MSTORE
0xf20 SWAP2
0xf21 PUSH1 0x20
0xf23 ADD
0xf24 SWAP2
0xf25 PUSH2 0xd24
0xf28 JUMP
0xf29 JUMPDEST
0xf2a DUP3
0xf2b ADD
0xf2c SWAP2
0xf2d SWAP1
0xf2e PUSH1 0x0
0xf30 MSTORE
0xf31 PUSH1 0x20
0xf33 PUSH1 0x0
0xf35 SHA3
0xf36 SWAP1
---
0xf16: V965 = 0x100
0xf1b: V966 = S[0x3]
0xf1c: V967 = DIV V966 0x100
0xf1d: V968 = MUL V967 0x100
0xf1f: M[V948] = V968
0xf21: V969 = 0x20
0xf23: V970 = ADD 0x20 V948
0xf25: V971 = 0xd24
0xf28: THROW 
0xf29: JUMPDEST 
0xf2b: V972 = ADD S2 S0
0xf2e: V973 = 0x0
0xf30: M[0x0] = S1
0xf31: V974 = 0x20
0xf33: V975 = 0x0
0xf35: V976 = SHA3 0x0 0x20
---
Entry stack: [V944, 0x3, V935, V948, 0x3, V959]
Stack pops: 3
Stack additions: [S2, V976, V972]
Exit stack: []

================================

Block 0xf37
[0xf37:0xf4a]
---
Predecessors: [0xf16]
Successors: [0xf4b]
---
0xf37 JUMPDEST
0xf38 DUP2
0xf39 SLOAD
0xf3a DUP2
0xf3b MSTORE
0xf3c SWAP1
0xf3d PUSH1 0x1
0xf3f ADD
0xf40 SWAP1
0xf41 PUSH1 0x20
0xf43 ADD
0xf44 DUP1
0xf45 DUP4
0xf46 GT
0xf47 PUSH2 0xd07
0xf4a JUMPI
---
0xf37: JUMPDEST 
0xf39: V977 = S[V976]
0xf3b: M[S0] = V977
0xf3d: V978 = 0x1
0xf3f: V979 = ADD 0x1 V976
0xf41: V980 = 0x20
0xf43: V981 = ADD 0x20 S0
0xf46: V982 = GT V972 V981
0xf47: V983 = 0xd07
0xf4a: THROWI V982
---
Entry stack: [V972, V976, S0]
Stack pops: 3
Stack additions: [S2, V979, V981]
Exit stack: [V972, V979, V981]

================================

Block 0xf4b
[0xf4b:0xf53]
---
Predecessors: [0xf37]
Successors: [0xf54]
---
0xf4b DUP3
0xf4c SWAP1
0xf4d SUB
0xf4e PUSH1 0x1f
0xf50 AND
0xf51 DUP3
0xf52 ADD
0xf53 SWAP2
---
0xf4d: V984 = SUB V981 V972
0xf4e: V985 = 0x1f
0xf50: V986 = AND 0x1f V984
0xf52: V987 = ADD V972 V986
---
Entry stack: [V972, V979, V981]
Stack pops: 3
Stack additions: [V987, S1, S2]
Exit stack: [V987, V979, V972]

================================

Block 0xf54
[0xf54:0x10df]
---
Predecessors: [0xf4b]
Successors: [0x10e0]
---
0xf54 JUMPDEST
0xf55 POP
0xf56 POP
0xf57 POP
0xf58 POP
0xf59 POP
0xf5a DUP2
0xf5b JUMP
0xf5c JUMPDEST
0xf5d PUSH1 0x0
0xf5f PUSH2 0xd77
0xf62 PUSH1 0x8
0xf64 PUSH1 0x0
0xf66 CALLER
0xf67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7c AND
0xf7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf92 AND
0xf93 DUP2
0xf94 MSTORE
0xf95 PUSH1 0x20
0xf97 ADD
0xf98 SWAP1
0xf99 DUP2
0xf9a MSTORE
0xf9b PUSH1 0x20
0xf9d ADD
0xf9e PUSH1 0x0
0xfa0 SHA3
0xfa1 SLOAD
0xfa2 DUP4
0xfa3 PUSH2 0x11a5
0xfa6 JUMP
0xfa7 JUMPDEST
0xfa8 PUSH1 0x8
0xfaa PUSH1 0x0
0xfac CALLER
0xfad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc2 AND
0xfc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd8 AND
0xfd9 DUP2
0xfda MSTORE
0xfdb PUSH1 0x20
0xfdd ADD
0xfde SWAP1
0xfdf DUP2
0xfe0 MSTORE
0xfe1 PUSH1 0x20
0xfe3 ADD
0xfe4 PUSH1 0x0
0xfe6 SHA3
0xfe7 DUP2
0xfe8 SWAP1
0xfe9 SSTORE
0xfea POP
0xfeb PUSH2 0xe03
0xfee PUSH1 0x8
0xff0 PUSH1 0x0
0xff2 DUP6
0xff3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1008 AND
0x1009 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101e AND
0x101f DUP2
0x1020 MSTORE
0x1021 PUSH1 0x20
0x1023 ADD
0x1024 SWAP1
0x1025 DUP2
0x1026 MSTORE
0x1027 PUSH1 0x20
0x1029 ADD
0x102a PUSH1 0x0
0x102c SHA3
0x102d SLOAD
0x102e DUP4
0x102f PUSH2 0x1186
0x1032 JUMP
0x1033 JUMPDEST
0x1034 PUSH1 0x8
0x1036 PUSH1 0x0
0x1038 DUP6
0x1039 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104e AND
0x104f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1064 AND
0x1065 DUP2
0x1066 MSTORE
0x1067 PUSH1 0x20
0x1069 ADD
0x106a SWAP1
0x106b DUP2
0x106c MSTORE
0x106d PUSH1 0x20
0x106f ADD
0x1070 PUSH1 0x0
0x1072 SHA3
0x1073 DUP2
0x1074 SWAP1
0x1075 SSTORE
0x1076 POP
0x1077 DUP3
0x1078 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108d AND
0x108e CALLER
0x108f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a4 AND
0x10a5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x10c6 DUP5
0x10c7 PUSH1 0x40
0x10c9 MLOAD
0x10ca DUP1
0x10cb DUP3
0x10cc DUP2
0x10cd MSTORE
0x10ce PUSH1 0x20
0x10d0 ADD
0x10d1 SWAP2
0x10d2 POP
0x10d3 POP
0x10d4 PUSH1 0x40
0x10d6 MLOAD
0x10d7 DUP1
0x10d8 SWAP2
0x10d9 SUB
0x10da SWAP1
0x10db LOG3
0x10dc PUSH1 0x1
0x10de SWAP1
0x10df POP
---
0xf54: JUMPDEST 
0xf5b: JUMP S6
0xf5c: JUMPDEST 
0xf5d: V988 = 0x0
0xf5f: V989 = 0xd77
0xf62: V990 = 0x8
0xf64: V991 = 0x0
0xf66: V992 = CALLER
0xf67: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7c: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0xf7d: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0xf92: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0xf94: M[0x0] = V996
0xf95: V997 = 0x20
0xf97: V998 = ADD 0x20 0x0
0xf9a: M[0x20] = 0x8
0xf9b: V999 = 0x20
0xf9d: V1000 = ADD 0x20 0x20
0xf9e: V1001 = 0x0
0xfa0: V1002 = SHA3 0x0 0x40
0xfa1: V1003 = S[V1002]
0xfa3: V1004 = 0x11a5
0xfa6: THROW 
0xfa7: JUMPDEST 
0xfa8: V1005 = 0x8
0xfaa: V1006 = 0x0
0xfac: V1007 = CALLER
0xfad: V1008 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc2: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1007
0xfc3: V1010 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd8: V1011 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
0xfda: M[0x0] = V1011
0xfdb: V1012 = 0x20
0xfdd: V1013 = ADD 0x20 0x0
0xfe0: M[0x20] = 0x8
0xfe1: V1014 = 0x20
0xfe3: V1015 = ADD 0x20 0x20
0xfe4: V1016 = 0x0
0xfe6: V1017 = SHA3 0x0 0x40
0xfe9: S[V1017] = S0
0xfeb: V1018 = 0xe03
0xfee: V1019 = 0x8
0xff0: V1020 = 0x0
0xff3: V1021 = 0xffffffffffffffffffffffffffffffffffffffff
0x1008: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1009: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0x101e: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1022
0x1020: M[0x0] = V1024
0x1021: V1025 = 0x20
0x1023: V1026 = ADD 0x20 0x0
0x1026: M[0x20] = 0x8
0x1027: V1027 = 0x20
0x1029: V1028 = ADD 0x20 0x20
0x102a: V1029 = 0x0
0x102c: V1030 = SHA3 0x0 0x40
0x102d: V1031 = S[V1030]
0x102f: V1032 = 0x1186
0x1032: THROW 
0x1033: JUMPDEST 
0x1034: V1033 = 0x8
0x1036: V1034 = 0x0
0x1039: V1035 = 0xffffffffffffffffffffffffffffffffffffffff
0x104e: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x104f: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0x1064: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1036
0x1066: M[0x0] = V1038
0x1067: V1039 = 0x20
0x1069: V1040 = ADD 0x20 0x0
0x106c: M[0x20] = 0x8
0x106d: V1041 = 0x20
0x106f: V1042 = ADD 0x20 0x20
0x1070: V1043 = 0x0
0x1072: V1044 = SHA3 0x0 0x40
0x1075: S[V1044] = S0
0x1078: V1045 = 0xffffffffffffffffffffffffffffffffffffffff
0x108d: V1046 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x108e: V1047 = CALLER
0x108f: V1048 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a4: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0x10a5: V1050 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x10c7: V1051 = 0x40
0x10c9: V1052 = M[0x40]
0x10cd: M[V1052] = S2
0x10ce: V1053 = 0x20
0x10d0: V1054 = ADD 0x20 V1052
0x10d4: V1055 = 0x40
0x10d6: V1056 = M[0x40]
0x10d9: V1057 = SUB V1054 V1056
0x10db: LOG V1056 V1057 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1049 V1046
0x10dc: V1058 = 0x1
---
Entry stack: [V987, V979, V972]
Stack pops: 32
Stack additions: [0x1, S2, S3]
Exit stack: []

================================

Block 0x10e0
[0x10e0:0x10f4]
---
Predecessors: [0xf54]
Successors: [0x6de]
---
0x10e0 JUMPDEST
0x10e1 SWAP3
0x10e2 SWAP2
0x10e3 POP
0x10e4 POP
0x10e5 JUMP
0x10e6 JUMPDEST
0x10e7 PUSH1 0x0
0x10e9 DUP4
0x10ea SWAP1
0x10eb POP
0x10ec PUSH2 0xec5
0x10ef DUP5
0x10f0 DUP5
0x10f1 PUSH2 0x6de
0x10f4 JUMP
---
0x10e0: JUMPDEST 
0x10e5: JUMP S3
0x10e6: JUMPDEST 
0x10e7: V1059 = 0x0
0x10ec: V1060 = 0xec5
0x10f1: V1061 = 0x6de
0x10f4: JUMP 0x6de
---
Entry stack: [S2, S1, 0x1]
Stack pops: 7
Stack additions: [S1, S2, 0xec5, S2, S0, S1, S2]
Exit stack: []

================================

Block 0x10f5
[0x10f5:0x10fa]
---
Predecessors: []
Successors: [0x10fb]
---
0x10f5 JUMPDEST
0x10f6 ISZERO
0x10f7 PUSH2 0x1023
0x10fa JUMPI
---
0x10f5: JUMPDEST 
0x10f6: V1062 = ISZERO S0
0x10f7: V1063 = 0x1023
0x10fa: THROWI V1062
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x10fb
[0x10fb:0x11d3]
---
Predecessors: [0x10f5]
Successors: [0x11d4]
---
0x10fb DUP1
0x10fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1111 AND
0x1112 PUSH4 0x8f4ffcb1
0x1117 CALLER
0x1118 DUP6
0x1119 ADDRESS
0x111a DUP7
0x111b PUSH1 0x40
0x111d MLOAD
0x111e DUP6
0x111f PUSH4 0xffffffff
0x1124 AND
0x1125 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1143 MUL
0x1144 DUP2
0x1145 MSTORE
0x1146 PUSH1 0x4
0x1148 ADD
0x1149 DUP1
0x114a DUP6
0x114b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1160 AND
0x1161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1176 AND
0x1177 DUP2
0x1178 MSTORE
0x1179 PUSH1 0x20
0x117b ADD
0x117c DUP5
0x117d DUP2
0x117e MSTORE
0x117f PUSH1 0x20
0x1181 ADD
0x1182 DUP4
0x1183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1198 AND
0x1199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ae AND
0x11af DUP2
0x11b0 MSTORE
0x11b1 PUSH1 0x20
0x11b3 ADD
0x11b4 DUP1
0x11b5 PUSH1 0x20
0x11b7 ADD
0x11b8 DUP3
0x11b9 DUP2
0x11ba SUB
0x11bb DUP3
0x11bc MSTORE
0x11bd DUP4
0x11be DUP2
0x11bf DUP2
0x11c0 MLOAD
0x11c1 DUP2
0x11c2 MSTORE
0x11c3 PUSH1 0x20
0x11c5 ADD
0x11c6 SWAP2
0x11c7 POP
0x11c8 DUP1
0x11c9 MLOAD
0x11ca SWAP1
0x11cb PUSH1 0x20
0x11cd ADD
0x11ce SWAP1
0x11cf DUP1
0x11d0 DUP4
0x11d1 DUP4
0x11d2 PUSH1 0x0
---
0x10fc: V1064 = 0xffffffffffffffffffffffffffffffffffffffff
0x1111: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1112: V1066 = 0x8f4ffcb1
0x1117: V1067 = CALLER
0x1119: V1068 = ADDRESS
0x111b: V1069 = 0x40
0x111d: V1070 = M[0x40]
0x111f: V1071 = 0xffffffff
0x1124: V1072 = AND 0xffffffff 0x8f4ffcb1
0x1125: V1073 = 0x100000000000000000000000000000000000000000000000000000000
0x1143: V1074 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8f4ffcb1
0x1145: M[V1070] = 0x8f4ffcb100000000000000000000000000000000000000000000000000000000
0x1146: V1075 = 0x4
0x1148: V1076 = ADD 0x4 V1070
0x114b: V1077 = 0xffffffffffffffffffffffffffffffffffffffff
0x1160: V1078 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0x1161: V1079 = 0xffffffffffffffffffffffffffffffffffffffff
0x1176: V1080 = AND 0xffffffffffffffffffffffffffffffffffffffff V1078
0x1178: M[V1076] = V1080
0x1179: V1081 = 0x20
0x117b: V1082 = ADD 0x20 V1076
0x117e: M[V1082] = S2
0x117f: V1083 = 0x20
0x1181: V1084 = ADD 0x20 V1082
0x1183: V1085 = 0xffffffffffffffffffffffffffffffffffffffff
0x1198: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff V1068
0x1199: V1087 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ae: V1088 = AND 0xffffffffffffffffffffffffffffffffffffffff V1086
0x11b0: M[V1084] = V1088
0x11b1: V1089 = 0x20
0x11b3: V1090 = ADD 0x20 V1084
0x11b5: V1091 = 0x20
0x11b7: V1092 = ADD 0x20 V1090
0x11ba: V1093 = SUB V1092 V1076
0x11bc: M[V1090] = V1093
0x11c0: V1094 = M[S1]
0x11c2: M[V1092] = V1094
0x11c3: V1095 = 0x20
0x11c5: V1096 = ADD 0x20 V1092
0x11c9: V1097 = M[S1]
0x11cb: V1098 = 0x20
0x11cd: V1099 = ADD 0x20 S1
0x11d2: V1100 = 0x0
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0, V1065, 0x8f4ffcb1, V1067, S2, V1068, S1, V1076, V1090, V1096, V1099, V1097, V1097, V1096, V1099, 0x0]
Exit stack: [S2, S1, S0, V1065, 0x8f4ffcb1, V1067, S2, V1068, S1, V1076, V1090, V1096, V1099, V1097, V1097, V1096, V1099, 0x0]

================================

Block 0x11d4
[0x11d4:0x11dc]
---
Predecessors: [0x10fb]
Successors: [0x11dd]
---
0x11d4 JUMPDEST
0x11d5 DUP4
0x11d6 DUP2
0x11d7 LT
0x11d8 ISZERO
0x11d9 PUSH2 0xfc0
0x11dc JUMPI
---
0x11d4: JUMPDEST 
0x11d7: V1101 = LT 0x0 V1097
0x11d8: V1102 = ISZERO V1101
0x11d9: V1103 = 0xfc0
0x11dc: THROWI V1102
---
Entry stack: [S17, S16, S15, V1065, 0x8f4ffcb1, V1067, S11, V1068, S9, V1076, V1090, V1096, V1099, V1097, V1097, V1096, V1099, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S17, S16, S15, V1065, 0x8f4ffcb1, V1067, S11, V1068, S9, V1076, V1090, V1096, V1099, V1097, V1097, V1096, V1099, 0x0]

================================

Block 0x11dd
[0x11dd:0x11e4]
---
Predecessors: [0x11d4]
Successors: [0x11e5]
---
0x11dd DUP1
0x11de DUP3
0x11df ADD
0x11e0 MLOAD
0x11e1 DUP2
0x11e2 DUP5
0x11e3 ADD
0x11e4 MSTORE
---
0x11df: V1104 = ADD V1099 0x0
0x11e0: V1105 = M[V1104]
0x11e3: V1106 = ADD V1096 0x0
0x11e4: M[V1106] = V1105
---
Entry stack: [S17, S16, S15, V1065, 0x8f4ffcb1, V1067, S11, V1068, S9, V1076, V1090, V1096, V1099, V1097, V1097, V1096, V1099, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S17, S16, S15, V1065, 0x8f4ffcb1, V1067, S11, V1068, S9, V1076, V1090, V1096, V1099, V1097, V1097, V1096, V1099, 0x0]

================================

Block 0x11e5
[0x11e5:0x1203]
---
Predecessors: [0x11dd]
Successors: [0x1204]
---
0x11e5 JUMPDEST
0x11e6 PUSH1 0x20
0x11e8 DUP2
0x11e9 ADD
0x11ea SWAP1
0x11eb POP
0x11ec PUSH2 0xfa4
0x11ef JUMP
0x11f0 JUMPDEST
0x11f1 POP
0x11f2 POP
0x11f3 POP
0x11f4 POP
0x11f5 SWAP1
0x11f6 POP
0x11f7 SWAP1
0x11f8 DUP2
0x11f9 ADD
0x11fa SWAP1
0x11fb PUSH1 0x1f
0x11fd AND
0x11fe DUP1
0x11ff ISZERO
0x1200 PUSH2 0xfed
0x1203 JUMPI
---
0x11e5: JUMPDEST 
0x11e6: V1107 = 0x20
0x11e9: V1108 = ADD 0x0 0x20
0x11ec: V1109 = 0xfa4
0x11ef: THROW 
0x11f0: JUMPDEST 
0x11f9: V1110 = ADD S4 S6
0x11fb: V1111 = 0x1f
0x11fd: V1112 = AND 0x1f S4
0x11ff: V1113 = ISZERO V1112
0x1200: V1114 = 0xfed
0x1203: THROWI V1113
---
Entry stack: [S17, S16, S15, V1065, 0x8f4ffcb1, V1067, S11, V1068, S9, V1076, V1090, V1096, V1099, V1097, V1097, V1096, V1099, 0x0]
Stack pops: 1
Stack additions: [V1112, V1110]
Exit stack: []

================================

Block 0x1204
[0x1204:0x121c]
---
Predecessors: [0x11e5]
Successors: [0x121d]
---
0x1204 DUP1
0x1205 DUP3
0x1206 SUB
0x1207 DUP1
0x1208 MLOAD
0x1209 PUSH1 0x1
0x120b DUP4
0x120c PUSH1 0x20
0x120e SUB
0x120f PUSH2 0x100
0x1212 EXP
0x1213 SUB
0x1214 NOT
0x1215 AND
0x1216 DUP2
0x1217 MSTORE
0x1218 PUSH1 0x20
0x121a ADD
0x121b SWAP2
0x121c POP
---
0x1206: V1115 = SUB V1110 V1112
0x1208: V1116 = M[V1115]
0x1209: V1117 = 0x1
0x120c: V1118 = 0x20
0x120e: V1119 = SUB 0x20 V1112
0x120f: V1120 = 0x100
0x1212: V1121 = EXP 0x100 V1119
0x1213: V1122 = SUB V1121 0x1
0x1214: V1123 = NOT V1122
0x1215: V1124 = AND V1123 V1116
0x1217: M[V1115] = V1124
0x1218: V1125 = 0x20
0x121a: V1126 = ADD 0x20 V1115
---
Entry stack: [V1110, V1112]
Stack pops: 2
Stack additions: [V1126, S0]
Exit stack: [V1126, V1112]

================================

Block 0x121d
[0x121d:0x1239]
---
Predecessors: [0x1204]
Successors: [0x123a]
---
0x121d JUMPDEST
0x121e POP
0x121f SWAP6
0x1220 POP
0x1221 POP
0x1222 POP
0x1223 POP
0x1224 POP
0x1225 POP
0x1226 PUSH1 0x0
0x1228 PUSH1 0x40
0x122a MLOAD
0x122b DUP1
0x122c DUP4
0x122d SUB
0x122e DUP2
0x122f PUSH1 0x0
0x1231 DUP8
0x1232 DUP1
0x1233 EXTCODESIZE
0x1234 ISZERO
0x1235 ISZERO
0x1236 PUSH2 0x100e
0x1239 JUMPI
---
0x121d: JUMPDEST 
0x1226: V1127 = 0x0
0x1228: V1128 = 0x40
0x122a: V1129 = M[0x40]
0x122d: V1130 = SUB V1126 V1129
0x122f: V1131 = 0x0
0x1233: V1132 = EXTCODESIZE S9
0x1234: V1133 = ISZERO V1132
0x1235: V1134 = ISZERO V1133
0x1236: V1135 = 0x100e
0x1239: THROWI V1134
---
Entry stack: [V1126, V1112]
Stack pops: 10
Stack additions: [S9, S8, S1, 0x0, V1129, V1130, V1129, 0x0, S9]
Exit stack: [S7, S6, V1126, 0x0, V1129, V1130, V1129, 0x0, S7]

================================

Block 0x123a
[0x123a:0x124a]
---
Predecessors: [0x121d]
Successors: [0x124b]
---
0x123a PUSH1 0x0
0x123c DUP1
0x123d REVERT
0x123e JUMPDEST
0x123f PUSH2 0x2c6
0x1242 GAS
0x1243 SUB
0x1244 CALL
0x1245 ISZERO
0x1246 ISZERO
0x1247 PUSH2 0x101f
0x124a JUMPI
---
0x123a: V1136 = 0x0
0x123d: REVERT 0x0 0x0
0x123e: JUMPDEST 
0x123f: V1137 = 0x2c6
0x1242: V1138 = GAS
0x1243: V1139 = SUB V1138 0x2c6
0x1244: V1140 = CALL V1139 S0 S1 S2 S3 S4 S5
0x1245: V1141 = ISZERO V1140
0x1246: V1142 = ISZERO V1141
0x1247: V1143 = 0x101f
0x124a: THROWI V1142
---
Entry stack: [S8, S7, V1126, 0x0, V1129, V1130, V1129, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x124b
[0x124b:0x1252]
---
Predecessors: [0x123a]
Successors: [0x1253]
---
0x124b PUSH1 0x0
0x124d DUP1
0x124e REVERT
0x124f JUMPDEST
0x1250 POP
0x1251 POP
0x1252 POP
---
0x124b: V1144 = 0x0
0x124e: REVERT 0x0 0x0
0x124f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1253
[0x1253:0x1253]
---
Predecessors: [0x124b]
Successors: [0x1254]
---
0x1253 JUMPDEST
---
0x1253: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1254
[0x1254:0x12db]
---
Predecessors: [0x1253]
Successors: [0x12dc]
---
0x1254 JUMPDEST
0x1255 POP
0x1256 POP
0x1257 POP
0x1258 POP
0x1259 JUMP
0x125a JUMPDEST
0x125b PUSH1 0x0
0x125d PUSH1 0x9
0x125f PUSH1 0x0
0x1261 DUP5
0x1262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1277 AND
0x1278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128d AND
0x128e DUP2
0x128f MSTORE
0x1290 PUSH1 0x20
0x1292 ADD
0x1293 SWAP1
0x1294 DUP2
0x1295 MSTORE
0x1296 PUSH1 0x20
0x1298 ADD
0x1299 PUSH1 0x0
0x129b SHA3
0x129c PUSH1 0x0
0x129e DUP4
0x129f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b4 AND
0x12b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ca AND
0x12cb DUP2
0x12cc MSTORE
0x12cd PUSH1 0x20
0x12cf ADD
0x12d0 SWAP1
0x12d1 DUP2
0x12d2 MSTORE
0x12d3 PUSH1 0x20
0x12d5 ADD
0x12d6 PUSH1 0x0
0x12d8 SHA3
0x12d9 SLOAD
0x12da SWAP1
0x12db POP
---
0x1254: JUMPDEST 
0x1259: JUMP S4
0x125a: JUMPDEST 
0x125b: V1145 = 0x0
0x125d: V1146 = 0x9
0x125f: V1147 = 0x0
0x1262: V1148 = 0xffffffffffffffffffffffffffffffffffffffff
0x1277: V1149 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1278: V1150 = 0xffffffffffffffffffffffffffffffffffffffff
0x128d: V1151 = AND 0xffffffffffffffffffffffffffffffffffffffff V1149
0x128f: M[0x0] = V1151
0x1290: V1152 = 0x20
0x1292: V1153 = ADD 0x20 0x0
0x1295: M[0x20] = 0x9
0x1296: V1154 = 0x20
0x1298: V1155 = ADD 0x20 0x20
0x1299: V1156 = 0x0
0x129b: V1157 = SHA3 0x0 0x40
0x129c: V1158 = 0x0
0x129f: V1159 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b4: V1160 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12b5: V1161 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ca: V1162 = AND 0xffffffffffffffffffffffffffffffffffffffff V1160
0x12cc: M[0x0] = V1162
0x12cd: V1163 = 0x20
0x12cf: V1164 = ADD 0x20 0x0
0x12d2: M[0x20] = V1157
0x12d3: V1165 = 0x20
0x12d5: V1166 = ADD 0x20 0x20
0x12d6: V1167 = 0x0
0x12d8: V1168 = SHA3 0x0 0x40
0x12d9: V1169 = S[V1168]
---
Entry stack: []
Stack pops: 10
Stack additions: [V1169, S0, S1]
Exit stack: []

================================

Block 0x12dc
[0x12dc:0x1338]
---
Predecessors: [0x1254]
Successors: [0x1339]
---
0x12dc JUMPDEST
0x12dd SWAP3
0x12de SWAP2
0x12df POP
0x12e0 POP
0x12e1 JUMP
0x12e2 JUMPDEST
0x12e3 PUSH1 0x1
0x12e5 PUSH1 0x0
0x12e7 SWAP1
0x12e8 SLOAD
0x12e9 SWAP1
0x12ea PUSH2 0x100
0x12ed EXP
0x12ee SWAP1
0x12ef DIV
0x12f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1305 AND
0x1306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131b AND
0x131c CALLER
0x131d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1332 AND
0x1333 EQ
0x1334 ISZERO
0x1335 PUSH2 0x1182
0x1338 JUMPI
---
0x12dc: JUMPDEST 
0x12e1: JUMP S3
0x12e2: JUMPDEST 
0x12e3: V1170 = 0x1
0x12e5: V1171 = 0x0
0x12e8: V1172 = S[0x1]
0x12ea: V1173 = 0x100
0x12ed: V1174 = EXP 0x100 0x0
0x12ef: V1175 = DIV V1172 0x1
0x12f0: V1176 = 0xffffffffffffffffffffffffffffffffffffffff
0x1305: V1177 = AND 0xffffffffffffffffffffffffffffffffffffffff V1175
0x1306: V1178 = 0xffffffffffffffffffffffffffffffffffffffff
0x131b: V1179 = AND 0xffffffffffffffffffffffffffffffffffffffff V1177
0x131c: V1180 = CALLER
0x131d: V1181 = 0xffffffffffffffffffffffffffffffffffffffff
0x1332: V1182 = AND 0xffffffffffffffffffffffffffffffffffffffff V1180
0x1333: V1183 = EQ V1182 V1179
0x1334: V1184 = ISZERO V1183
0x1335: V1185 = 0x1182
0x1338: THROWI V1184
---
Entry stack: [S2, S1, V1169]
Stack pops: 7
Stack additions: []
Exit stack: []

================================

Block 0x1339
[0x1339:0x136e]
---
Predecessors: [0x12dc]
Successors: [0x136f]
---
0x1339 PUSH1 0x0
0x133b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1350 AND
0x1351 DUP2
0x1352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1367 AND
0x1368 EQ
0x1369 ISZERO
0x136a ISZERO
0x136b PUSH2 0x1180
0x136e JUMPI
---
0x1339: V1186 = 0x0
0x133b: V1187 = 0xffffffffffffffffffffffffffffffffffffffff
0x1350: V1188 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1352: V1189 = 0xffffffffffffffffffffffffffffffffffffffff
0x1367: V1190 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1368: V1191 = EQ V1190 0x0
0x1369: V1192 = ISZERO V1191
0x136a: V1193 = ISZERO V1192
0x136b: V1194 = 0x1180
0x136e: THROWI V1193
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x136f
[0x136f:0x13af]
---
Predecessors: [0x1339]
Successors: [0x13b0]
---
0x136f DUP1
0x1370 PUSH1 0x1
0x1372 PUSH1 0x0
0x1374 PUSH2 0x100
0x1377 EXP
0x1378 DUP2
0x1379 SLOAD
0x137a DUP2
0x137b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1390 MUL
0x1391 NOT
0x1392 AND
0x1393 SWAP1
0x1394 DUP4
0x1395 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13aa AND
0x13ab MUL
0x13ac OR
0x13ad SWAP1
0x13ae SSTORE
0x13af POP
---
0x1370: V1195 = 0x1
0x1372: V1196 = 0x0
0x1374: V1197 = 0x100
0x1377: V1198 = EXP 0x100 0x0
0x1379: V1199 = S[0x1]
0x137b: V1200 = 0xffffffffffffffffffffffffffffffffffffffff
0x1390: V1201 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1391: V1202 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1392: V1203 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1199
0x1395: V1204 = 0xffffffffffffffffffffffffffffffffffffffff
0x13aa: V1205 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x13ab: V1206 = MUL V1205 0x1
0x13ac: V1207 = OR V1206 V1203
0x13ae: S[0x1] = V1207
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x13b0
[0x13b0:0x13b0]
---
Predecessors: [0x136f]
Successors: [0x13b1]
---
0x13b0 JUMPDEST
---
0x13b0: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x13b1
[0x13b1:0x13b1]
---
Predecessors: [0x13b0]
Successors: [0x13b2]
---
0x13b1 JUMPDEST
---
0x13b1: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x13b2
[0x13b2:0x13b2]
---
Predecessors: [0x13b1]
Successors: [0x13b3]
---
0x13b2 JUMPDEST
---
0x13b2: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x13b3
[0x13b3:0x13c8]
---
Predecessors: [0x13b2]
Successors: [0x13c9]
---
0x13b3 JUMPDEST
0x13b4 POP
0x13b5 JUMP
0x13b6 JUMPDEST
0x13b7 PUSH1 0x0
0x13b9 DUP1
0x13ba DUP3
0x13bb DUP5
0x13bc ADD
0x13bd SWAP1
0x13be POP
0x13bf DUP4
0x13c0 DUP2
0x13c1 LT
0x13c2 ISZERO
0x13c3 ISZERO
0x13c4 ISZERO
0x13c5 PUSH2 0x119a
0x13c8 JUMPI
---
0x13b3: JUMPDEST 
0x13b5: JUMP S1
0x13b6: JUMPDEST 
0x13b7: V1208 = 0x0
0x13bc: V1209 = ADD S1 S0
0x13c1: V1210 = LT V1209 S1
0x13c2: V1211 = ISZERO V1210
0x13c3: V1212 = ISZERO V1211
0x13c4: V1213 = ISZERO V1212
0x13c5: V1214 = 0x119a
0x13c8: THROWI V1213
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [V1209, 0x0, S0, S1]
Exit stack: []

================================

Block 0x13c9
[0x13c9:0x13cd]
---
Predecessors: [0x13b3]
Successors: [0x13ce]
---
0x13c9 INVALID
0x13ca JUMPDEST
0x13cb DUP1
0x13cc SWAP2
0x13cd POP
---
0x13c9: INVALID 
0x13ca: JUMPDEST 
---
Entry stack: [S3, S2, 0x0, V1209]
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0x13ce
[0x13ce:0x13e1]
---
Predecessors: [0x13c9]
Successors: [0x13e2]
---
0x13ce JUMPDEST
0x13cf POP
0x13d0 SWAP3
0x13d1 SWAP2
0x13d2 POP
0x13d3 POP
0x13d4 JUMP
0x13d5 JUMPDEST
0x13d6 PUSH1 0x0
0x13d8 DUP3
0x13d9 DUP3
0x13da GT
0x13db ISZERO
0x13dc ISZERO
0x13dd ISZERO
0x13de PUSH2 0x11b3
0x13e1 JUMPI
---
0x13ce: JUMPDEST 
0x13d4: JUMP S4
0x13d5: JUMPDEST 
0x13d6: V1215 = 0x0
0x13da: V1216 = GT S0 S1
0x13db: V1217 = ISZERO V1216
0x13dc: V1218 = ISZERO V1217
0x13dd: V1219 = ISZERO V1218
0x13de: V1220 = 0x11b3
0x13e1: THROWI V1219
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0x13e2
[0x13e2:0x13e8]
---
Predecessors: [0x13ce]
Successors: [0x13e9]
---
0x13e2 INVALID
0x13e3 JUMPDEST
0x13e4 DUP2
0x13e5 DUP4
0x13e6 SUB
0x13e7 SWAP1
0x13e8 POP
---
0x13e2: INVALID 
0x13e3: JUMPDEST 
0x13e6: V1221 = SUB S2 S1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1221, S1, S2]
Exit stack: []

================================

Block 0x13e9
[0x13e9:0x141a]
---
Predecessors: [0x13e2]
Successors: []
---
0x13e9 JUMPDEST
0x13ea SWAP3
0x13eb SWAP2
0x13ec POP
0x13ed POP
0x13ee JUMP
0x13ef STOP
0x13f0 LOG1
0x13f1 PUSH6 0x627a7a723058
0x13f8 SHA3
0x13f9 CALLCODE
0x13fa SWAP16
0x13fb MISSING 0xbc
0x13fc MISSING 0xd9
0x13fd PUSH5 0x78876ac928
0x1403 EXP
0x1404 MISSING 0xd0
0x1405 MISSING 0xcb
0x1406 EXTCODECOPY
0x1407 EXTCODEHASH
0x1408 MISSING 0x5d
0x1409 CALLDATASIZE
0x140a EQ
0x140b MISSING 0x49
0x140c LOG1
0x140d PUSH12 0x5d57b5c455a9bfe0ccee5900
0x141a MISSING 0x29
---
0x13e9: JUMPDEST 
0x13ee: JUMP S3
0x13ef: STOP 
0x13f0: LOG S0 S1 S2
0x13f1: V1222 = 0x627a7a723058
0x13f8: V1223 = SHA3 0x627a7a723058 S3
0x13f9: V1224 = CALLCODE V1223 S4 S5 S6 S7 S8 S9
0x13fb: MISSING 0xbc
0x13fc: MISSING 0xd9
0x13fd: V1225 = 0x78876ac928
0x1403: V1226 = EXP 0x78876ac928 S0
0x1404: MISSING 0xd0
0x1405: MISSING 0xcb
0x1406: EXTCODECOPY S0 S1 S2 S3
0x1407: V1227 = EXTCODEHASH S4
0x1408: MISSING 0x5d
0x1409: V1228 = CALLDATASIZE
0x140a: V1229 = EQ V1228 S0
0x140b: MISSING 0x49
0x140c: LOG S0 S1 S2
0x140d: V1230 = 0x5d57b5c455a9bfe0ccee5900
0x141a: MISSING 0x29
---
Entry stack: [S2, S1, V1221]
Stack pops: 389
Stack additions: [0x5d57b5c455a9bfe0ccee5900]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x49
Exit block: 0x5c
Body: 0x49, 0x50, 0x54, 0x5c, 0xd7

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0x9e
Exit block: 0xd5
Body: 0x9e, 0xa5, 0xa9, 0xd5, 0xfc, 0x152, 0x188, 0x1c8, 0x1c9, 0x1ca, 0x1cb

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

