Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x3f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH1 0x3f
0xb JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3f
0xb: JUMPI 0x3f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc
[0xc:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x44]
---
0xc PUSH1 0x0
0xe CALLDATALOAD
0xf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d SWAP1
0x2e DIV
0x2f PUSH4 0xffffffff
0x34 AND
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH1 0x44
0x3e JUMPI
---
0xc: V6 = 0x0
0xe: V7 = CALLDATALOAD 0x0
0xf: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0xffffffff
0x34: V11 = AND 0xffffffff V9
0x36: V12 = 0x8da5cb5b
0x3b: V13 = EQ 0x8da5cb5b V11
0x3c: V14 = 0x44
0x3e: JUMPI 0x44 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x43]
---
Predecessors: [0x0, 0xc]
Successors: []
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 DUP1
0x43 REVERT
---
0x3f: JUMPDEST 
0x40: V15 = 0x0
0x43: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44
[0x44:0x49]
---
Predecessors: [0xc]
Successors: [0x4a, 0x4e]
---
0x44 JUMPDEST
0x45 CALLVALUE
0x46 ISZERO
0x47 PUSH1 0x4e
0x49 JUMPI
---
0x44: JUMPDEST 
0x45: V16 = CALLVALUE
0x46: V17 = ISZERO V16
0x47: V18 = 0x4e
0x49: JUMPI 0x4e V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x44]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V19 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x53]
---
Predecessors: [0x44]
Successors: [0x96]
---
0x4e JUMPDEST
0x4f PUSH1 0x54
0x51 PUSH1 0x96
0x53 JUMP
---
0x4e: JUMPDEST 
0x4f: V20 = 0x54
0x51: V21 = 0x96
0x53: JUMP 0x96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x54]
Exit stack: [V11, 0x54]

================================

Block 0x54
[0x54:0x95]
---
Predecessors: [0x96]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH1 0x40
0x57 MLOAD
0x58 DUP1
0x59 DUP3
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 DUP2
0x87 MSTORE
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP2
0x8c POP
0x8d POP
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 SWAP2
0x93 SUB
0x94 SWAP1
0x95 RETURN
---
0x54: JUMPDEST 
0x55: V22 = 0x40
0x57: V23 = M[0x40]
0x5a: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x70: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x87: M[V23] = V27
0x88: V28 = 0x20
0x8a: V29 = ADD 0x20 V23
0x8e: V30 = 0x40
0x90: V31 = M[0x40]
0x93: V32 = SUB V29 V31
0x95: RETURN V31 V32
---
Entry stack: [V11, 0x54, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x54]

================================

Block 0x96
[0x96:0xba]
---
Predecessors: [0x4e]
Successors: [0x54]
---
0x96 JUMPDEST
0x97 PUSH1 0x0
0x99 DUP1
0x9a SWAP1
0x9b SLOAD
0x9c SWAP1
0x9d PUSH2 0x100
0xa0 EXP
0xa1 SWAP1
0xa2 DIV
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 DUP2
0xba JUMP
---
0x96: JUMPDEST 
0x97: V33 = 0x0
0x9b: V34 = S[0x0]
0x9d: V35 = 0x100
0xa0: V36 = EXP 0x100 0x0
0xa2: V37 = DIV V34 0x1
0xa3: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xba: JUMP 0x54
---
Entry stack: [V11, 0x54]
Stack pops: 1
Stack additions: [S0, V39]
Exit stack: [V11, 0x54, V39]

================================

Block 0xbb
[0xbb:0x15c]
---
Predecessors: []
Successors: [0x15d]
---
0xbb STOP
0xbc LOG1
0xbd PUSH6 0x627a7a723058
0xc4 SHA3
0xc5 MISSING 0x5f
0xc6 MISSING 0xd0
0xc7 MISSING 0xd5
0xc8 PUSH5 0xf9102d6a77
0xce SWAP9
0xcf AND
0xd0 PUSH1 0xa9
0xd2 MISSING 0xaf
0xd3 PUSH16 0x916e408949ff0fb5fb9bd36783a74ca9
0xe4 RETURNDATASIZE
0xe5 STOP
0xe6 MISSING 0x29
0xe7 PUSH1 0x60
0xe9 PUSH1 0x40
0xeb MSTORE
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
0xf0 STOP
0xf1 LOG1
0xf2 PUSH6 0x627a7a723058
0xf9 SHA3
0xfa SSTORE
0xfb MISSING 0xcc
0xfc MISSING 0x48
0xfd MISSING 0xc5
0xfe MISSING 0xcb
0xff MISSING 0xee
0x100 MISSING 0xd6
0x101 MISSING 0xc4
0x102 MISSING 0xe9
0x103 CALLDATALOAD
0x104 MISSING 0xe8
0x105 GASLIMIT
0x106 MISSING 0x21
0x107 MISSING 0x47
0x108 SLT
0x109 MISSING 0xd0
0x10a MISSING 0xc2
0x10b MISSING 0xce
0x10c MISSING 0xfb
0x10d DUP13
0x10e LOG4
0x10f MISSING 0xcc
0x110 ORIGIN
0x111 PUSH29 0xdf6a4f2ab48c6ff8002960606040526004361061008e576000357c0100
0x12f STOP
0x130 STOP
0x131 STOP
0x132 STOP
0x133 STOP
0x134 STOP
0x135 STOP
0x136 STOP
0x137 STOP
0x138 STOP
0x139 STOP
0x13a STOP
0x13b STOP
0x13c STOP
0x13d STOP
0x13e STOP
0x13f STOP
0x140 STOP
0x141 STOP
0x142 STOP
0x143 STOP
0x144 STOP
0x145 STOP
0x146 STOP
0x147 STOP
0x148 STOP
0x149 STOP
0x14a SWAP1
0x14b DIV
0x14c PUSH4 0xffffffff
0x151 AND
0x152 DUP1
0x153 PUSH4 0xd7f7eff
0x158 EQ
0x159 PUSH2 0x99
0x15c JUMPI
---
0xbb: STOP 
0xbc: LOG S0 S1 S2
0xbd: V40 = 0x627a7a723058
0xc4: V41 = SHA3 0x627a7a723058 S3
0xc5: MISSING 0x5f
0xc6: MISSING 0xd0
0xc7: MISSING 0xd5
0xc8: V42 = 0xf9102d6a77
0xcf: V43 = AND S8 S0
0xd0: V44 = 0xa9
0xd2: MISSING 0xaf
0xd3: V45 = 0x916e408949ff0fb5fb9bd36783a74ca9
0xe4: V46 = RETURNDATASIZE
0xe5: STOP 
0xe6: MISSING 0x29
0xe7: V47 = 0x60
0xe9: V48 = 0x40
0xeb: M[0x40] = 0x60
0xec: V49 = 0x0
0xef: REVERT 0x0 0x0
0xf0: STOP 
0xf1: LOG S0 S1 S2
0xf2: V50 = 0x627a7a723058
0xf9: V51 = SHA3 0x627a7a723058 S3
0xfa: S[V51] = S4
0xfb: MISSING 0xcc
0xfc: MISSING 0x48
0xfd: MISSING 0xc5
0xfe: MISSING 0xcb
0xff: MISSING 0xee
0x100: MISSING 0xd6
0x101: MISSING 0xc4
0x102: MISSING 0xe9
0x103: V52 = CALLDATALOAD S0
0x104: MISSING 0xe8
0x105: V53 = GASLIMIT
0x106: MISSING 0x21
0x107: MISSING 0x47
0x108: V54 = SLT S0 S1
0x109: MISSING 0xd0
0x10a: MISSING 0xc2
0x10b: MISSING 0xce
0x10c: MISSING 0xfb
0x10e: LOG S12 S0 S1 S2 S3 S4
0x10f: MISSING 0xcc
0x110: V55 = ORIGIN
0x111: V56 = 0xdf6a4f2ab48c6ff8002960606040526004361061008e576000357c0100
0x12f: STOP 
0x130: STOP 
0x131: STOP 
0x132: STOP 
0x133: STOP 
0x134: STOP 
0x135: STOP 
0x136: STOP 
0x137: STOP 
0x138: STOP 
0x139: STOP 
0x13a: STOP 
0x13b: STOP 
0x13c: STOP 
0x13d: STOP 
0x13e: STOP 
0x13f: STOP 
0x140: STOP 
0x141: STOP 
0x142: STOP 
0x143: STOP 
0x144: STOP 
0x145: STOP 
0x146: STOP 
0x147: STOP 
0x148: STOP 
0x149: STOP 
0x14b: V57 = DIV S1 S0
0x14c: V58 = 0xffffffff
0x151: V59 = AND 0xffffffff V57
0x153: V60 = 0xd7f7eff
0x158: V61 = EQ 0xd7f7eff V59
0x159: V62 = 0x99
0x15c: THROWI V61
---
Entry stack: []
Stack pops: 0
Stack additions: [V41, 0xa9, V43, S1, S2, S3, S4, S5, S6, S7, 0xf9102d6a77, V46, 0x916e408949ff0fb5fb9bd36783a74ca9, V52, V53, V54, S5, S6, S7, S8, S9, S10, S11, S12, 0xdf6a4f2ab48c6ff8002960606040526004361061008e576000357c0100, V55, V59]
Exit stack: []

================================

Block 0x15d
[0x15d:0x167]
---
Predecessors: [0xbb]
Successors: [0x168]
---
0x15d DUP1
0x15e PUSH4 0x2c4e722e
0x163 EQ
0x164 PUSH2 0xa3
0x167 JUMPI
---
0x15e: V63 = 0x2c4e722e
0x163: V64 = EQ 0x2c4e722e V59
0x164: V65 = 0xa3
0x167: THROWI V64
---
Entry stack: [V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V59]

================================

Block 0x168
[0x168:0x172]
---
Predecessors: [0x15d]
Successors: [0x173]
---
0x168 DUP1
0x169 PUSH4 0x4042b66f
0x16e EQ
0x16f PUSH2 0xcc
0x172 JUMPI
---
0x169: V66 = 0x4042b66f
0x16e: V67 = EQ 0x4042b66f V59
0x16f: V68 = 0xcc
0x172: THROWI V67
---
Entry stack: [V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V59]

================================

Block 0x173
[0x173:0x17d]
---
Predecessors: [0x168]
Successors: [0x17e]
---
0x173 DUP1
0x174 PUSH4 0x521eb273
0x179 EQ
0x17a PUSH2 0xf5
0x17d JUMPI
---
0x174: V69 = 0x521eb273
0x179: V70 = EQ 0x521eb273 V59
0x17a: V71 = 0xf5
0x17d: THROWI V70
---
Entry stack: [V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V59]

================================

Block 0x17e
[0x17e:0x188]
---
Predecessors: [0x173]
Successors: [0x189]
---
0x17e DUP1
0x17f PUSH4 0x8da5cb5b
0x184 EQ
0x185 PUSH2 0x14a
0x188 JUMPI
---
0x17f: V72 = 0x8da5cb5b
0x184: V73 = EQ 0x8da5cb5b V59
0x185: V74 = 0x14a
0x188: THROWI V73
---
Entry stack: [V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V59]

================================

Block 0x189
[0x189:0x193]
---
Predecessors: [0x17e]
Successors: [0x194]
---
0x189 DUP1
0x18a PUSH4 0xc6786e5a
0x18f EQ
0x190 PUSH2 0x19f
0x193 JUMPI
---
0x18a: V75 = 0xc6786e5a
0x18f: V76 = EQ 0xc6786e5a V59
0x190: V77 = 0x19f
0x193: THROWI V76
---
Entry stack: [V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V59]

================================

Block 0x194
[0x194:0x19e]
---
Predecessors: [0x189]
Successors: [0x19f]
---
0x194 DUP1
0x195 PUSH4 0xec8ac4d8
0x19a EQ
0x19b PUSH2 0x1f9
0x19e JUMPI
---
0x195: V78 = 0xec8ac4d8
0x19a: V79 = EQ 0xec8ac4d8 V59
0x19b: V80 = 0x1f9
0x19e: THROWI V79
---
Entry stack: [V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V59]

================================

Block 0x19f
[0x19f:0x1a9]
---
Predecessors: [0x194]
Successors: [0x1aa]
---
0x19f DUP1
0x1a0 PUSH4 0xfc0c546a
0x1a5 EQ
0x1a6 PUSH2 0x227
0x1a9 JUMPI
---
0x1a0: V81 = 0xfc0c546a
0x1a5: V82 = EQ 0xfc0c546a V59
0x1a6: V83 = 0x227
0x1a9: THROWI V82
---
Entry stack: [V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V59]

================================

Block 0x1aa
[0x1aa:0x1c5]
---
Predecessors: [0x19f, 0x26d]
Successors: [0x1c6]
---
0x1aa JUMPDEST
0x1ab PUSH2 0x97
0x1ae CALLER
0x1af PUSH2 0x27c
0x1b2 JUMP
0x1b3 JUMPDEST
0x1b4 STOP
0x1b5 JUMPDEST
0x1b6 PUSH2 0xa1
0x1b9 PUSH2 0x34a
0x1bc JUMP
0x1bd JUMPDEST
0x1be STOP
0x1bf JUMPDEST
0x1c0 CALLVALUE
0x1c1 ISZERO
0x1c2 PUSH2 0xae
0x1c5 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V84 = 0x97
0x1ae: V85 = CALLER
0x1af: V86 = 0x27c
0x1b2: THROW 
0x1b3: JUMPDEST 
0x1b4: STOP 
0x1b5: JUMPDEST 
0x1b6: V87 = 0xa1
0x1b9: V88 = 0x34a
0x1bc: THROW 
0x1bd: JUMPDEST 
0x1be: STOP 
0x1bf: JUMPDEST 
0x1c0: V89 = CALLVALUE
0x1c1: V90 = ISZERO V89
0x1c2: V91 = 0xae
0x1c5: THROWI V90
---
Entry stack: [V59]
Stack pops: 0
Stack additions: [0x97, V85, 0xa1]
Exit stack: []

================================

Block 0x1c6
[0x1c6:0x1ee]
---
Predecessors: [0x1aa]
Successors: [0x1ef]
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
0x1ca JUMPDEST
0x1cb PUSH2 0xb6
0x1ce PUSH2 0x34c
0x1d1 JUMP
0x1d2 JUMPDEST
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 DUP3
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP2
0x1de POP
0x1df POP
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 DUP1
0x1e4 SWAP2
0x1e5 SUB
0x1e6 SWAP1
0x1e7 RETURN
0x1e8 JUMPDEST
0x1e9 CALLVALUE
0x1ea ISZERO
0x1eb PUSH2 0xd7
0x1ee JUMPI
---
0x1c6: V92 = 0x0
0x1c9: REVERT 0x0 0x0
0x1ca: JUMPDEST 
0x1cb: V93 = 0xb6
0x1ce: V94 = 0x34c
0x1d1: THROW 
0x1d2: JUMPDEST 
0x1d3: V95 = 0x40
0x1d5: V96 = M[0x40]
0x1d9: M[V96] = S0
0x1da: V97 = 0x20
0x1dc: V98 = ADD 0x20 V96
0x1e0: V99 = 0x40
0x1e2: V100 = M[0x40]
0x1e5: V101 = SUB V98 V100
0x1e7: RETURN V100 V101
0x1e8: JUMPDEST 
0x1e9: V102 = CALLVALUE
0x1ea: V103 = ISZERO V102
0x1eb: V104 = 0xd7
0x1ee: THROWI V103
---
Entry stack: []
Stack pops: 0
Stack additions: [0xb6]
Exit stack: []

================================

Block 0x1ef
[0x1ef:0x217]
---
Predecessors: [0x1c6]
Successors: [0x218]
---
0x1ef PUSH1 0x0
0x1f1 DUP1
0x1f2 REVERT
0x1f3 JUMPDEST
0x1f4 PUSH2 0xdf
0x1f7 PUSH2 0x352
0x1fa JUMP
0x1fb JUMPDEST
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 DUP3
0x201 DUP2
0x202 MSTORE
0x203 PUSH1 0x20
0x205 ADD
0x206 SWAP2
0x207 POP
0x208 POP
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d SWAP2
0x20e SUB
0x20f SWAP1
0x210 RETURN
0x211 JUMPDEST
0x212 CALLVALUE
0x213 ISZERO
0x214 PUSH2 0x100
0x217 JUMPI
---
0x1ef: V105 = 0x0
0x1f2: REVERT 0x0 0x0
0x1f3: JUMPDEST 
0x1f4: V106 = 0xdf
0x1f7: V107 = 0x352
0x1fa: THROW 
0x1fb: JUMPDEST 
0x1fc: V108 = 0x40
0x1fe: V109 = M[0x40]
0x202: M[V109] = S0
0x203: V110 = 0x20
0x205: V111 = ADD 0x20 V109
0x209: V112 = 0x40
0x20b: V113 = M[0x40]
0x20e: V114 = SUB V111 V113
0x210: RETURN V113 V114
0x211: JUMPDEST 
0x212: V115 = CALLVALUE
0x213: V116 = ISZERO V115
0x214: V117 = 0x100
0x217: THROWI V116
---
Entry stack: []
Stack pops: 0
Stack additions: [0xdf]
Exit stack: []

================================

Block 0x218
[0x218:0x26c]
---
Predecessors: [0x1ef]
Successors: [0x26d]
---
0x218 PUSH1 0x0
0x21a DUP1
0x21b REVERT
0x21c JUMPDEST
0x21d PUSH2 0x108
0x220 PUSH2 0x358
0x223 JUMP
0x224 JUMPDEST
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP1
0x229 DUP3
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 AND
0x256 DUP2
0x257 MSTORE
0x258 PUSH1 0x20
0x25a ADD
0x25b SWAP2
0x25c POP
0x25d POP
0x25e PUSH1 0x40
0x260 MLOAD
0x261 DUP1
0x262 SWAP2
0x263 SUB
0x264 SWAP1
0x265 RETURN
0x266 JUMPDEST
0x267 CALLVALUE
0x268 ISZERO
0x269 PUSH2 0x155
0x26c JUMPI
---
0x218: V118 = 0x0
0x21b: REVERT 0x0 0x0
0x21c: JUMPDEST 
0x21d: V119 = 0x108
0x220: V120 = 0x358
0x223: THROW 
0x224: JUMPDEST 
0x225: V121 = 0x40
0x227: V122 = M[0x40]
0x22a: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x240: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x257: M[V122] = V126
0x258: V127 = 0x20
0x25a: V128 = ADD 0x20 V122
0x25e: V129 = 0x40
0x260: V130 = M[0x40]
0x263: V131 = SUB V128 V130
0x265: RETURN V130 V131
0x266: JUMPDEST 
0x267: V132 = CALLVALUE
0x268: V133 = ISZERO V132
0x269: V134 = 0x155
0x26c: THROWI V133
---
Entry stack: []
Stack pops: 0
Stack additions: [0x108]
Exit stack: []

================================

Block 0x26d
[0x26d:0x2c1]
---
Predecessors: [0x218]
Successors: [0x1aa, 0x2c2]
---
0x26d PUSH1 0x0
0x26f DUP1
0x270 REVERT
0x271 JUMPDEST
0x272 PUSH2 0x15d
0x275 PUSH2 0x37e
0x278 JUMP
0x279 JUMPDEST
0x27a PUSH1 0x40
0x27c MLOAD
0x27d DUP1
0x27e DUP3
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2aa AND
0x2ab DUP2
0x2ac MSTORE
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP2
0x2b1 POP
0x2b2 POP
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 SWAP2
0x2b8 SUB
0x2b9 SWAP1
0x2ba RETURN
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd ISZERO
0x2be PUSH2 0x1aa
0x2c1 JUMPI
---
0x26d: V135 = 0x0
0x270: REVERT 0x0 0x0
0x271: JUMPDEST 
0x272: V136 = 0x15d
0x275: V137 = 0x37e
0x278: THROW 
0x279: JUMPDEST 
0x27a: V138 = 0x40
0x27c: V139 = M[0x40]
0x27f: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x295: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x2ac: M[V139] = V143
0x2ad: V144 = 0x20
0x2af: V145 = ADD 0x20 V139
0x2b3: V146 = 0x40
0x2b5: V147 = M[0x40]
0x2b8: V148 = SUB V145 V147
0x2ba: RETURN V147 V148
0x2bb: JUMPDEST 
0x2bc: V149 = CALLVALUE
0x2bd: V150 = ISZERO V149
0x2be: V151 = 0x1aa
0x2c1: JUMPI 0x1aa V150
---
Entry stack: []
Stack pops: 0
Stack additions: [0x15d]
Exit stack: []

================================

Block 0x2c2
[0x2c2:0x349]
---
Predecessors: [0x26d]
Successors: [0x34a]
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
0x2c6 JUMPDEST
0x2c7 PUSH2 0x1f7
0x2ca PUSH1 0x4
0x2cc DUP1
0x2cd DUP1
0x2ce CALLDATALOAD
0x2cf SWAP1
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 SWAP1
0x2d4 DUP3
0x2d5 ADD
0x2d6 DUP1
0x2d7 CALLDATALOAD
0x2d8 SWAP1
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc SWAP1
0x2dd DUP1
0x2de DUP1
0x2df PUSH1 0x20
0x2e1 MUL
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 DUP2
0x2ea ADD
0x2eb PUSH1 0x40
0x2ed MSTORE
0x2ee DUP1
0x2ef SWAP4
0x2f0 SWAP3
0x2f1 SWAP2
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 DUP2
0x2f5 MSTORE
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 DUP4
0x2fa DUP4
0x2fb PUSH1 0x20
0x2fd MUL
0x2fe DUP1
0x2ff DUP3
0x300 DUP5
0x301 CALLDATACOPY
0x302 DUP3
0x303 ADD
0x304 SWAP2
0x305 POP
0x306 POP
0x307 POP
0x308 POP
0x309 POP
0x30a POP
0x30b SWAP2
0x30c SWAP1
0x30d POP
0x30e POP
0x30f PUSH2 0x3a3
0x312 JUMP
0x313 JUMPDEST
0x314 STOP
0x315 JUMPDEST
0x316 PUSH2 0x225
0x319 PUSH1 0x4
0x31b DUP1
0x31c DUP1
0x31d CALLDATALOAD
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 AND
0x334 SWAP1
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP1
0x339 SWAP2
0x33a SWAP1
0x33b POP
0x33c POP
0x33d PUSH2 0x27c
0x340 JUMP
0x341 JUMPDEST
0x342 STOP
0x343 JUMPDEST
0x344 CALLVALUE
0x345 ISZERO
0x346 PUSH2 0x232
0x349 JUMPI
---
0x2c2: V152 = 0x0
0x2c5: REVERT 0x0 0x0
0x2c6: JUMPDEST 
0x2c7: V153 = 0x1f7
0x2ca: V154 = 0x4
0x2ce: V155 = CALLDATALOAD 0x4
0x2d0: V156 = 0x20
0x2d2: V157 = ADD 0x20 0x4
0x2d5: V158 = ADD 0x4 V155
0x2d7: V159 = CALLDATALOAD V158
0x2d9: V160 = 0x20
0x2db: V161 = ADD 0x20 V158
0x2df: V162 = 0x20
0x2e1: V163 = MUL 0x20 V159
0x2e2: V164 = 0x20
0x2e4: V165 = ADD 0x20 V163
0x2e5: V166 = 0x40
0x2e7: V167 = M[0x40]
0x2ea: V168 = ADD V167 V165
0x2eb: V169 = 0x40
0x2ed: M[0x40] = V168
0x2f5: M[V167] = V159
0x2f6: V170 = 0x20
0x2f8: V171 = ADD 0x20 V167
0x2fb: V172 = 0x20
0x2fd: V173 = MUL 0x20 V159
0x301: CALLDATACOPY V171 V161 V173
0x303: V174 = ADD V171 V173
0x30f: V175 = 0x3a3
0x312: THROW 
0x313: JUMPDEST 
0x314: STOP 
0x315: JUMPDEST 
0x316: V176 = 0x225
0x319: V177 = 0x4
0x31d: V178 = CALLDATALOAD 0x4
0x31e: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x335: V181 = 0x20
0x337: V182 = ADD 0x20 0x4
0x33d: V183 = 0x27c
0x340: THROW 
0x341: JUMPDEST 
0x342: STOP 
0x343: JUMPDEST 
0x344: V184 = CALLVALUE
0x345: V185 = ISZERO V184
0x346: V186 = 0x232
0x349: THROWI V185
---
Entry stack: []
Stack pops: 0
Stack additions: [V167, 0x1f7, V180, 0x225]
Exit stack: []

================================

Block 0x34a
[0x34a:0x51a]
---
Predecessors: [0x2c2]
Successors: [0x51b]
---
0x34a PUSH1 0x0
0x34c DUP1
0x34d REVERT
0x34e JUMPDEST
0x34f PUSH2 0x23a
0x352 PUSH2 0x61a
0x355 JUMP
0x356 JUMPDEST
0x357 PUSH1 0x40
0x359 MLOAD
0x35a DUP1
0x35b DUP3
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 AND
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP2
0x38e POP
0x38f POP
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 SWAP2
0x395 SUB
0x396 SWAP1
0x397 RETURN
0x398 JUMPDEST
0x399 PUSH1 0x0
0x39b DUP1
0x39c CALLVALUE
0x39d SWAP2
0x39e POP
0x39f PUSH2 0x28c
0x3a2 DUP4
0x3a3 DUP4
0x3a4 PUSH2 0x640
0x3a7 JUMP
0x3a8 JUMPDEST
0x3a9 PUSH2 0x295
0x3ac DUP3
0x3ad PUSH2 0x690
0x3b0 JUMP
0x3b1 JUMPDEST
0x3b2 SWAP1
0x3b3 POP
0x3b4 PUSH2 0x2ac
0x3b7 DUP3
0x3b8 PUSH1 0x4
0x3ba SLOAD
0x3bb PUSH2 0x6ae
0x3be SWAP1
0x3bf SWAP2
0x3c0 SWAP1
0x3c1 PUSH4 0xffffffff
0x3c6 AND
0x3c7 JUMP
0x3c8 JUMPDEST
0x3c9 PUSH1 0x4
0x3cb DUP2
0x3cc SWAP1
0x3cd SSTORE
0x3ce POP
0x3cf PUSH2 0x2bc
0x3d2 DUP4
0x3d3 DUP3
0x3d4 PUSH2 0x6cc
0x3d7 JUMP
0x3d8 JUMPDEST
0x3d9 DUP3
0x3da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ef AND
0x3f0 CALLER
0x3f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x406 AND
0x407 PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x428 DUP5
0x429 DUP5
0x42a PUSH1 0x40
0x42c MLOAD
0x42d DUP1
0x42e DUP4
0x42f DUP2
0x430 MSTORE
0x431 PUSH1 0x20
0x433 ADD
0x434 DUP3
0x435 DUP2
0x436 MSTORE
0x437 PUSH1 0x20
0x439 ADD
0x43a SWAP3
0x43b POP
0x43c POP
0x43d POP
0x43e PUSH1 0x40
0x440 MLOAD
0x441 DUP1
0x442 SWAP2
0x443 SUB
0x444 SWAP1
0x445 LOG3
0x446 PUSH2 0x333
0x449 DUP4
0x44a DUP4
0x44b PUSH2 0x6da
0x44e JUMP
0x44f JUMPDEST
0x450 PUSH2 0x33b
0x453 PUSH2 0x6de
0x456 JUMP
0x457 JUMPDEST
0x458 PUSH2 0x345
0x45b DUP4
0x45c DUP4
0x45d PUSH2 0x742
0x460 JUMP
0x461 JUMPDEST
0x462 POP
0x463 POP
0x464 POP
0x465 JUMP
0x466 JUMPDEST
0x467 JUMP
0x468 JUMPDEST
0x469 PUSH1 0x3
0x46b SLOAD
0x46c DUP2
0x46d JUMP
0x46e JUMPDEST
0x46f PUSH1 0x4
0x471 SLOAD
0x472 DUP2
0x473 JUMP
0x474 JUMPDEST
0x475 PUSH1 0x2
0x477 PUSH1 0x0
0x479 SWAP1
0x47a SLOAD
0x47b SWAP1
0x47c PUSH2 0x100
0x47f EXP
0x480 SWAP1
0x481 DIV
0x482 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x497 AND
0x498 DUP2
0x499 JUMP
0x49a JUMPDEST
0x49b PUSH1 0x0
0x49d DUP1
0x49e SWAP1
0x49f SLOAD
0x4a0 SWAP1
0x4a1 PUSH2 0x100
0x4a4 EXP
0x4a5 SWAP1
0x4a6 DIV
0x4a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bc AND
0x4bd DUP2
0x4be JUMP
0x4bf JUMPDEST
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 PUSH1 0x0
0x4c5 DUP1
0x4c6 PUSH1 0x0
0x4c8 SWAP1
0x4c9 SLOAD
0x4ca SWAP1
0x4cb PUSH2 0x100
0x4ce EXP
0x4cf SWAP1
0x4d0 DIV
0x4d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e6 AND
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd CALLER
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 EQ
0x515 ISZERO
0x516 ISZERO
0x517 PUSH2 0x403
0x51a JUMPI
---
0x34a: V187 = 0x0
0x34d: REVERT 0x0 0x0
0x34e: JUMPDEST 
0x34f: V188 = 0x23a
0x352: V189 = 0x61a
0x355: THROW 
0x356: JUMPDEST 
0x357: V190 = 0x40
0x359: V191 = M[0x40]
0x35c: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x372: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x389: M[V191] = V195
0x38a: V196 = 0x20
0x38c: V197 = ADD 0x20 V191
0x390: V198 = 0x40
0x392: V199 = M[0x40]
0x395: V200 = SUB V197 V199
0x397: RETURN V199 V200
0x398: JUMPDEST 
0x399: V201 = 0x0
0x39c: V202 = CALLVALUE
0x39f: V203 = 0x28c
0x3a4: V204 = 0x640
0x3a7: THROW 
0x3a8: JUMPDEST 
0x3a9: V205 = 0x295
0x3ad: V206 = 0x690
0x3b0: THROW 
0x3b1: JUMPDEST 
0x3b4: V207 = 0x2ac
0x3b8: V208 = 0x4
0x3ba: V209 = S[0x4]
0x3bb: V210 = 0x6ae
0x3c1: V211 = 0xffffffff
0x3c6: V212 = AND 0xffffffff 0x6ae
0x3c7: THROW 
0x3c8: JUMPDEST 
0x3c9: V213 = 0x4
0x3cd: S[0x4] = S0
0x3cf: V214 = 0x2bc
0x3d4: V215 = 0x6cc
0x3d7: THROW 
0x3d8: JUMPDEST 
0x3da: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x3f0: V218 = CALLER
0x3f1: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x406: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x407: V221 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x42a: V222 = 0x40
0x42c: V223 = M[0x40]
0x430: M[V223] = S1
0x431: V224 = 0x20
0x433: V225 = ADD 0x20 V223
0x436: M[V225] = S0
0x437: V226 = 0x20
0x439: V227 = ADD 0x20 V225
0x43e: V228 = 0x40
0x440: V229 = M[0x40]
0x443: V230 = SUB V227 V229
0x445: LOG V229 V230 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V220 V217
0x446: V231 = 0x333
0x44b: V232 = 0x6da
0x44e: THROW 
0x44f: JUMPDEST 
0x450: V233 = 0x33b
0x453: V234 = 0x6de
0x456: THROW 
0x457: JUMPDEST 
0x458: V235 = 0x345
0x45d: V236 = 0x742
0x460: THROW 
0x461: JUMPDEST 
0x465: JUMP S3
0x466: JUMPDEST 
0x467: JUMP S0
0x468: JUMPDEST 
0x469: V237 = 0x3
0x46b: V238 = S[0x3]
0x46d: JUMP S0
0x46e: JUMPDEST 
0x46f: V239 = 0x4
0x471: V240 = S[0x4]
0x473: JUMP S0
0x474: JUMPDEST 
0x475: V241 = 0x2
0x477: V242 = 0x0
0x47a: V243 = S[0x2]
0x47c: V244 = 0x100
0x47f: V245 = EXP 0x100 0x0
0x481: V246 = DIV V243 0x1
0x482: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x497: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x499: JUMP S0
0x49a: JUMPDEST 
0x49b: V249 = 0x0
0x49f: V250 = S[0x0]
0x4a1: V251 = 0x100
0x4a4: V252 = EXP 0x100 0x0
0x4a6: V253 = DIV V250 0x1
0x4a7: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bc: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x4be: JUMP S0
0x4bf: JUMPDEST 
0x4c0: V256 = 0x0
0x4c3: V257 = 0x0
0x4c6: V258 = 0x0
0x4c9: V259 = S[0x0]
0x4cb: V260 = 0x100
0x4ce: V261 = EXP 0x100 0x0
0x4d0: V262 = DIV V259 0x1
0x4d1: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e6: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x4e7: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x4fd: V267 = CALLER
0x4fe: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x514: V270 = EQ V269 V266
0x515: V271 = ISZERO V270
0x516: V272 = ISZERO V271
0x517: V273 = 0x403
0x51a: THROWI V272
---
Entry stack: []
Stack pops: 0
Stack additions: [0x23a, V202, S0, 0x28c, 0x0, V202, S0, S1, 0x295, S0, S1, S2, V209, 0x2ac, S0, S2, S1, S3, 0x2bc, S1, S2, S3, S1, S2, 0x333, S0, S1, S2, 0x33b, S1, S2, 0x345, S0, S1, S2, V238, S0, V240, S0, V248, S0, V255, S0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x51b
[0x51b:0x523]
---
Predecessors: [0x34a]
Successors: [0x524]
---
0x51b PUSH1 0x0
0x51d DUP1
0x51e REVERT
0x51f JUMPDEST
0x520 PUSH1 0x0
0x522 SWAP3
0x523 POP
---
0x51b: V274 = 0x0
0x51e: REVERT 0x0 0x0
0x51f: JUMPDEST 
0x520: V275 = 0x0
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, 0x0]
Exit stack: []

================================

Block 0x524
[0x524:0x52d]
---
Predecessors: [0x51b]
Successors: [0x52e]
---
0x524 JUMPDEST
0x525 DUP4
0x526 MLOAD
0x527 DUP4
0x528 LT
0x529 ISZERO
0x52a PUSH2 0x5e0
0x52d JUMPI
---
0x524: JUMPDEST 
0x526: V276 = M[S3]
0x528: V277 = LT 0x0 V276
0x529: V278 = ISZERO V277
0x52a: V279 = 0x5e0
0x52d: THROWI V278
---
Entry stack: [0x0, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S0, 0x0, S1, S0]

================================

Block 0x52e
[0x52e:0x539]
---
Predecessors: [0x524]
Successors: [0x53a]
---
0x52e DUP4
0x52f DUP4
0x530 DUP2
0x531 MLOAD
0x532 DUP2
0x533 LT
0x534 ISZERO
0x535 ISZERO
0x536 PUSH2 0x41f
0x539 JUMPI
---
0x531: V280 = M[S3]
0x533: V281 = LT 0x0 V280
0x534: V282 = ISZERO V281
0x535: V283 = ISZERO V282
0x536: V284 = 0x41f
0x539: THROWI V283
---
Entry stack: [S3, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S2]
Exit stack: [S3, 0x0, S1, S0, S3, 0x0]

================================

Block 0x53a
[0x53a:0x5e5]
---
Predecessors: [0x52e]
Successors: [0x5e6]
---
0x53a INVALID
0x53b JUMPDEST
0x53c SWAP1
0x53d PUSH1 0x20
0x53f ADD
0x540 SWAP1
0x541 PUSH1 0x20
0x543 MUL
0x544 ADD
0x545 MLOAD
0x546 SWAP2
0x547 POP
0x548 DUP2
0x549 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55e AND
0x55f PUSH4 0x70a08231
0x564 ADDRESS
0x565 PUSH1 0x0
0x567 PUSH1 0x40
0x569 MLOAD
0x56a PUSH1 0x20
0x56c ADD
0x56d MSTORE
0x56e PUSH1 0x40
0x570 MLOAD
0x571 DUP3
0x572 PUSH4 0xffffffff
0x577 AND
0x578 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x596 MUL
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x4
0x59b ADD
0x59c DUP1
0x59d DUP3
0x59e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b3 AND
0x5b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c9 AND
0x5ca DUP2
0x5cb MSTORE
0x5cc PUSH1 0x20
0x5ce ADD
0x5cf SWAP2
0x5d0 POP
0x5d1 POP
0x5d2 PUSH1 0x20
0x5d4 PUSH1 0x40
0x5d6 MLOAD
0x5d7 DUP1
0x5d8 DUP4
0x5d9 SUB
0x5da DUP2
0x5db PUSH1 0x0
0x5dd DUP8
0x5de DUP1
0x5df EXTCODESIZE
0x5e0 ISZERO
0x5e1 ISZERO
0x5e2 PUSH2 0x4ce
0x5e5 JUMPI
---
0x53a: INVALID 
0x53b: JUMPDEST 
0x53d: V285 = 0x20
0x53f: V286 = ADD 0x20 S1
0x541: V287 = 0x20
0x543: V288 = MUL 0x20 S0
0x544: V289 = ADD V288 V286
0x545: V290 = M[V289]
0x549: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x55e: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x55f: V293 = 0x70a08231
0x564: V294 = ADDRESS
0x565: V295 = 0x0
0x567: V296 = 0x40
0x569: V297 = M[0x40]
0x56a: V298 = 0x20
0x56c: V299 = ADD 0x20 V297
0x56d: M[V299] = 0x0
0x56e: V300 = 0x40
0x570: V301 = M[0x40]
0x572: V302 = 0xffffffff
0x577: V303 = AND 0xffffffff 0x70a08231
0x578: V304 = 0x100000000000000000000000000000000000000000000000000000000
0x596: V305 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x598: M[V301] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x599: V306 = 0x4
0x59b: V307 = ADD 0x4 V301
0x59e: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b3: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x5b4: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x5cb: M[V307] = V311
0x5cc: V312 = 0x20
0x5ce: V313 = ADD 0x20 V307
0x5d2: V314 = 0x20
0x5d4: V315 = 0x40
0x5d6: V316 = M[0x40]
0x5d9: V317 = SUB V313 V316
0x5db: V318 = 0x0
0x5df: V319 = EXTCODESIZE V292
0x5e0: V320 = ISZERO V319
0x5e1: V321 = ISZERO V320
0x5e2: V322 = 0x4ce
0x5e5: THROWI V321
---
Entry stack: [S5, 0x0, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [V292, 0x0, V316, V317, V316, 0x20, V313, 0x70a08231, V292, S2, V290]
Exit stack: []

================================

Block 0x5e6
[0x5e6:0x5f6]
---
Predecessors: [0x53a]
Successors: [0x5f7]
---
0x5e6 PUSH1 0x0
0x5e8 DUP1
0x5e9 REVERT
0x5ea JUMPDEST
0x5eb PUSH2 0x2c6
0x5ee GAS
0x5ef SUB
0x5f0 CALL
0x5f1 ISZERO
0x5f2 ISZERO
0x5f3 PUSH2 0x4df
0x5f6 JUMPI
---
0x5e6: V323 = 0x0
0x5e9: REVERT 0x0 0x0
0x5ea: JUMPDEST 
0x5eb: V324 = 0x2c6
0x5ee: V325 = GAS
0x5ef: V326 = SUB V325 0x2c6
0x5f0: V327 = CALL V326 S0 S1 S2 S3 S4 S5
0x5f1: V328 = ISZERO V327
0x5f2: V329 = ISZERO V328
0x5f3: V330 = 0x4df
0x5f6: THROWI V329
---
Entry stack: [V290, S9, V292, 0x70a08231, V313, 0x20, V316, V317, V316, 0x0, V292]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5f7
[0x5f7:0x6ce]
---
Predecessors: [0x5e6]
Successors: [0x6cf]
---
0x5f7 PUSH1 0x0
0x5f9 DUP1
0x5fa REVERT
0x5fb JUMPDEST
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff PUSH1 0x40
0x601 MLOAD
0x602 DUP1
0x603 MLOAD
0x604 SWAP1
0x605 POP
0x606 SWAP1
0x607 POP
0x608 DUP2
0x609 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61e AND
0x61f PUSH4 0xa9059cbb
0x624 PUSH1 0x0
0x626 DUP1
0x627 SWAP1
0x628 SLOAD
0x629 SWAP1
0x62a PUSH2 0x100
0x62d EXP
0x62e SWAP1
0x62f DIV
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 DUP4
0x647 PUSH1 0x0
0x649 PUSH1 0x40
0x64b MLOAD
0x64c PUSH1 0x20
0x64e ADD
0x64f MSTORE
0x650 PUSH1 0x40
0x652 MLOAD
0x653 DUP4
0x654 PUSH4 0xffffffff
0x659 AND
0x65a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x678 MUL
0x679 DUP2
0x67a MSTORE
0x67b PUSH1 0x4
0x67d ADD
0x67e DUP1
0x67f DUP4
0x680 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x695 AND
0x696 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ab AND
0x6ac DUP2
0x6ad MSTORE
0x6ae PUSH1 0x20
0x6b0 ADD
0x6b1 DUP3
0x6b2 DUP2
0x6b3 MSTORE
0x6b4 PUSH1 0x20
0x6b6 ADD
0x6b7 SWAP3
0x6b8 POP
0x6b9 POP
0x6ba POP
0x6bb PUSH1 0x20
0x6bd PUSH1 0x40
0x6bf MLOAD
0x6c0 DUP1
0x6c1 DUP4
0x6c2 SUB
0x6c3 DUP2
0x6c4 PUSH1 0x0
0x6c6 DUP8
0x6c7 DUP1
0x6c8 EXTCODESIZE
0x6c9 ISZERO
0x6ca ISZERO
0x6cb PUSH2 0x5b7
0x6ce JUMPI
---
0x5f7: V331 = 0x0
0x5fa: REVERT 0x0 0x0
0x5fb: JUMPDEST 
0x5ff: V332 = 0x40
0x601: V333 = M[0x40]
0x603: V334 = M[V333]
0x609: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x61e: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x61f: V337 = 0xa9059cbb
0x624: V338 = 0x0
0x628: V339 = S[0x0]
0x62a: V340 = 0x100
0x62d: V341 = EXP 0x100 0x0
0x62f: V342 = DIV V339 0x1
0x630: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x647: V345 = 0x0
0x649: V346 = 0x40
0x64b: V347 = M[0x40]
0x64c: V348 = 0x20
0x64e: V349 = ADD 0x20 V347
0x64f: M[V349] = 0x0
0x650: V350 = 0x40
0x652: V351 = M[0x40]
0x654: V352 = 0xffffffff
0x659: V353 = AND 0xffffffff 0xa9059cbb
0x65a: V354 = 0x100000000000000000000000000000000000000000000000000000000
0x678: V355 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x67a: M[V351] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x67b: V356 = 0x4
0x67d: V357 = ADD 0x4 V351
0x680: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x695: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x696: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ab: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x6ad: M[V357] = V361
0x6ae: V362 = 0x20
0x6b0: V363 = ADD 0x20 V357
0x6b3: M[V363] = V334
0x6b4: V364 = 0x20
0x6b6: V365 = ADD 0x20 V363
0x6bb: V366 = 0x20
0x6bd: V367 = 0x40
0x6bf: V368 = M[0x40]
0x6c2: V369 = SUB V365 V368
0x6c4: V370 = 0x0
0x6c8: V371 = EXTCODESIZE V336
0x6c9: V372 = ISZERO V371
0x6ca: V373 = ISZERO V372
0x6cb: V374 = 0x5b7
0x6ce: THROWI V373
---
Entry stack: []
Stack pops: 0
Stack additions: [V336, 0x0, V368, V369, V368, 0x20, V365, 0xa9059cbb, V336, V334, S4]
Exit stack: []

================================

Block 0x6cf
[0x6cf:0x6df]
---
Predecessors: [0x5f7]
Successors: [0x6e0]
---
0x6cf PUSH1 0x0
0x6d1 DUP1
0x6d2 REVERT
0x6d3 JUMPDEST
0x6d4 PUSH2 0x2c6
0x6d7 GAS
0x6d8 SUB
0x6d9 CALL
0x6da ISZERO
0x6db ISZERO
0x6dc PUSH2 0x5c8
0x6df JUMPI
---
0x6cf: V375 = 0x0
0x6d2: REVERT 0x0 0x0
0x6d3: JUMPDEST 
0x6d4: V376 = 0x2c6
0x6d7: V377 = GAS
0x6d8: V378 = SUB V377 0x2c6
0x6d9: V379 = CALL V378 S0 S1 S2 S3 S4 S5
0x6da: V380 = ISZERO V379
0x6db: V381 = ISZERO V380
0x6dc: V382 = 0x5c8
0x6df: THROWI V381
---
Entry stack: [S10, V334, V336, 0xa9059cbb, V365, 0x20, V368, V369, V368, 0x0, V336]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6e0
[0x6e0:0x793]
---
Predecessors: [0x6cf]
Successors: [0x794]
---
0x6e0 PUSH1 0x0
0x6e2 DUP1
0x6e3 REVERT
0x6e4 JUMPDEST
0x6e5 POP
0x6e6 POP
0x6e7 POP
0x6e8 PUSH1 0x40
0x6ea MLOAD
0x6eb DUP1
0x6ec MLOAD
0x6ed SWAP1
0x6ee POP
0x6ef POP
0x6f0 DUP3
0x6f1 DUP1
0x6f2 PUSH1 0x1
0x6f4 ADD
0x6f5 SWAP4
0x6f6 POP
0x6f7 POP
0x6f8 PUSH2 0x408
0x6fb JUMP
0x6fc JUMPDEST
0x6fd PUSH1 0x0
0x6ff DUP1
0x700 SWAP1
0x701 SLOAD
0x702 SWAP1
0x703 PUSH2 0x100
0x706 EXP
0x707 SWAP1
0x708 DIV
0x709 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71e AND
0x71f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x734 AND
0x735 SELFDESTRUCT
0x736 JUMPDEST
0x737 PUSH1 0x1
0x739 PUSH1 0x0
0x73b SWAP1
0x73c SLOAD
0x73d SWAP1
0x73e PUSH2 0x100
0x741 EXP
0x742 SWAP1
0x743 DIV
0x744 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x759 AND
0x75a DUP2
0x75b JUMP
0x75c JUMPDEST
0x75d PUSH1 0x0
0x75f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x774 AND
0x775 DUP3
0x776 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78b AND
0x78c EQ
0x78d ISZERO
0x78e ISZERO
0x78f ISZERO
0x790 PUSH2 0x67c
0x793 JUMPI
---
0x6e0: V383 = 0x0
0x6e3: REVERT 0x0 0x0
0x6e4: JUMPDEST 
0x6e8: V384 = 0x40
0x6ea: V385 = M[0x40]
0x6ec: V386 = M[V385]
0x6f2: V387 = 0x1
0x6f4: V388 = ADD 0x1 S5
0x6f8: V389 = 0x408
0x6fb: THROW 
0x6fc: JUMPDEST 
0x6fd: V390 = 0x0
0x701: V391 = S[0x0]
0x703: V392 = 0x100
0x706: V393 = EXP 0x100 0x0
0x708: V394 = DIV V391 0x1
0x709: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x71e: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x71f: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x734: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x735: SELFDESTRUCT V398
0x736: JUMPDEST 
0x737: V399 = 0x1
0x739: V400 = 0x0
0x73c: V401 = S[0x1]
0x73e: V402 = 0x100
0x741: V403 = EXP 0x100 0x0
0x743: V404 = DIV V401 0x1
0x744: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x759: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x75b: JUMP S0
0x75c: JUMPDEST 
0x75d: V407 = 0x0
0x75f: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x774: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x776: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x78b: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x78c: V412 = EQ V411 0x0
0x78d: V413 = ISZERO V412
0x78e: V414 = ISZERO V413
0x78f: V415 = ISZERO V414
0x790: V416 = 0x67c
0x793: THROWI V415
---
Entry stack: []
Stack pops: 0
Stack additions: [S3, S4, V388, V406, S0, S0, S1]
Exit stack: []

================================

Block 0x794
[0x794:0x7a3]
---
Predecessors: [0x6e0]
Successors: [0x7a4]
---
0x794 PUSH1 0x0
0x796 DUP1
0x797 REVERT
0x798 JUMPDEST
0x799 PUSH1 0x0
0x79b DUP2
0x79c EQ
0x79d ISZERO
0x79e ISZERO
0x79f ISZERO
0x7a0 PUSH2 0x68c
0x7a3 JUMPI
---
0x794: V417 = 0x0
0x797: REVERT 0x0 0x0
0x798: JUMPDEST 
0x799: V418 = 0x0
0x79c: V419 = EQ S0 0x0
0x79d: V420 = ISZERO V419
0x79e: V421 = ISZERO V420
0x79f: V422 = ISZERO V421
0x7a0: V423 = 0x68c
0x7a3: THROWI V422
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x7a4
[0x7a4:0x7dc]
---
Predecessors: [0x794]
Successors: [0x7dd]
---
0x7a4 PUSH1 0x0
0x7a6 DUP1
0x7a7 REVERT
0x7a8 JUMPDEST
0x7a9 POP
0x7aa POP
0x7ab JUMP
0x7ac JUMPDEST
0x7ad PUSH1 0x0
0x7af PUSH2 0x6a7
0x7b2 PUSH1 0x3
0x7b4 SLOAD
0x7b5 DUP4
0x7b6 PUSH2 0x746
0x7b9 SWAP1
0x7ba SWAP2
0x7bb SWAP1
0x7bc PUSH4 0xffffffff
0x7c1 AND
0x7c2 JUMP
0x7c3 JUMPDEST
0x7c4 SWAP1
0x7c5 POP
0x7c6 SWAP2
0x7c7 SWAP1
0x7c8 POP
0x7c9 JUMP
0x7ca JUMPDEST
0x7cb PUSH1 0x0
0x7cd DUP1
0x7ce DUP3
0x7cf DUP5
0x7d0 ADD
0x7d1 SWAP1
0x7d2 POP
0x7d3 DUP4
0x7d4 DUP2
0x7d5 LT
0x7d6 ISZERO
0x7d7 ISZERO
0x7d8 ISZERO
0x7d9 PUSH2 0x6c2
0x7dc JUMPI
---
0x7a4: V424 = 0x0
0x7a7: REVERT 0x0 0x0
0x7a8: JUMPDEST 
0x7ab: JUMP S2
0x7ac: JUMPDEST 
0x7ad: V425 = 0x0
0x7af: V426 = 0x6a7
0x7b2: V427 = 0x3
0x7b4: V428 = S[0x3]
0x7b6: V429 = 0x746
0x7bc: V430 = 0xffffffff
0x7c1: V431 = AND 0xffffffff 0x746
0x7c2: THROW 
0x7c3: JUMPDEST 
0x7c9: JUMP S3
0x7ca: JUMPDEST 
0x7cb: V432 = 0x0
0x7d0: V433 = ADD S1 S0
0x7d5: V434 = LT V433 S1
0x7d6: V435 = ISZERO V434
0x7d7: V436 = ISZERO V435
0x7d8: V437 = ISZERO V436
0x7d9: V438 = 0x6c2
0x7dc: THROWI V437
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V428, S0, 0x6a7, 0x0, S0, S0, V433, 0x0, S0, S1]
Exit stack: []

================================

Block 0x7dd
[0x7dd:0x857]
---
Predecessors: [0x7a4]
Successors: [0x858]
---
0x7dd INVALID
0x7de JUMPDEST
0x7df DUP1
0x7e0 SWAP2
0x7e1 POP
0x7e2 POP
0x7e3 SWAP3
0x7e4 SWAP2
0x7e5 POP
0x7e6 POP
0x7e7 JUMP
0x7e8 JUMPDEST
0x7e9 PUSH2 0x6d6
0x7ec DUP3
0x7ed DUP3
0x7ee PUSH2 0x781
0x7f1 JUMP
0x7f2 JUMPDEST
0x7f3 POP
0x7f4 POP
0x7f5 JUMP
0x7f6 JUMPDEST
0x7f7 POP
0x7f8 POP
0x7f9 JUMP
0x7fa JUMPDEST
0x7fb PUSH1 0x2
0x7fd PUSH1 0x0
0x7ff SWAP1
0x800 SLOAD
0x801 SWAP1
0x802 PUSH2 0x100
0x805 EXP
0x806 SWAP1
0x807 DIV
0x808 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81d AND
0x81e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x833 AND
0x834 PUSH2 0x8fc
0x837 CALLVALUE
0x838 SWAP1
0x839 DUP2
0x83a ISZERO
0x83b MUL
0x83c SWAP1
0x83d PUSH1 0x40
0x83f MLOAD
0x840 PUSH1 0x0
0x842 PUSH1 0x40
0x844 MLOAD
0x845 DUP1
0x846 DUP4
0x847 SUB
0x848 DUP2
0x849 DUP6
0x84a DUP9
0x84b DUP9
0x84c CALL
0x84d SWAP4
0x84e POP
0x84f POP
0x850 POP
0x851 POP
0x852 ISZERO
0x853 ISZERO
0x854 PUSH2 0x740
0x857 JUMPI
---
0x7dd: INVALID 
0x7de: JUMPDEST 
0x7e7: JUMP S4
0x7e8: JUMPDEST 
0x7e9: V439 = 0x6d6
0x7ee: V440 = 0x781
0x7f1: THROW 
0x7f2: JUMPDEST 
0x7f5: JUMP S2
0x7f6: JUMPDEST 
0x7f9: JUMP S2
0x7fa: JUMPDEST 
0x7fb: V441 = 0x2
0x7fd: V442 = 0x0
0x800: V443 = S[0x2]
0x802: V444 = 0x100
0x805: V445 = EXP 0x100 0x0
0x807: V446 = DIV V443 0x1
0x808: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x81d: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x81e: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x833: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x834: V451 = 0x8fc
0x837: V452 = CALLVALUE
0x83a: V453 = ISZERO V452
0x83b: V454 = MUL V453 0x8fc
0x83d: V455 = 0x40
0x83f: V456 = M[0x40]
0x840: V457 = 0x0
0x842: V458 = 0x40
0x844: V459 = M[0x40]
0x847: V460 = SUB V456 V459
0x84c: V461 = CALL V454 V450 V452 V459 V460 V459 0x0
0x852: V462 = ISZERO V461
0x853: V463 = ISZERO V462
0x854: V464 = 0x740
0x857: THROWI V463
---
Entry stack: [S3, S2, 0x0, V433]
Stack pops: 0
Stack additions: [S0, S0, S1, 0x6d6, S0, S1]
Exit stack: []

================================

Block 0x858
[0x858:0x86e]
---
Predecessors: [0x7dd]
Successors: [0x86f]
---
0x858 PUSH1 0x0
0x85a DUP1
0x85b REVERT
0x85c JUMPDEST
0x85d JUMP
0x85e JUMPDEST
0x85f POP
0x860 POP
0x861 JUMP
0x862 JUMPDEST
0x863 PUSH1 0x0
0x865 DUP1
0x866 PUSH1 0x0
0x868 DUP5
0x869 EQ
0x86a ISZERO
0x86b PUSH2 0x75b
0x86e JUMPI
---
0x858: V465 = 0x0
0x85b: REVERT 0x0 0x0
0x85c: JUMPDEST 
0x85d: JUMP S0
0x85e: JUMPDEST 
0x861: JUMP S2
0x862: JUMPDEST 
0x863: V466 = 0x0
0x866: V467 = 0x0
0x869: V468 = EQ S1 0x0
0x86a: V469 = ISZERO V468
0x86b: V470 = 0x75b
0x86e: THROWI V469
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x86f
[0x86f:0x886]
---
Predecessors: [0x858]
Successors: [0x887]
---
0x86f PUSH1 0x0
0x871 SWAP2
0x872 POP
0x873 PUSH2 0x77a
0x876 JUMP
0x877 JUMPDEST
0x878 DUP3
0x879 DUP5
0x87a MUL
0x87b SWAP1
0x87c POP
0x87d DUP3
0x87e DUP5
0x87f DUP3
0x880 DUP2
0x881 ISZERO
0x882 ISZERO
0x883 PUSH2 0x76c
0x886 JUMPI
---
0x86f: V471 = 0x0
0x873: V472 = 0x77a
0x876: THROW 
0x877: JUMPDEST 
0x87a: V473 = MUL S3 S2
0x881: V474 = ISZERO S3
0x882: V475 = ISZERO V474
0x883: V476 = 0x76c
0x886: THROWI V475
---
Entry stack: [S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V473, S3, S2, V473, S1, S2, S3]
Exit stack: []

================================

Block 0x887
[0x887:0x890]
---
Predecessors: [0x86f]
Successors: [0x891]
---
0x887 INVALID
0x888 JUMPDEST
0x889 DIV
0x88a EQ
0x88b ISZERO
0x88c ISZERO
0x88d PUSH2 0x776
0x890 JUMPI
---
0x887: INVALID 
0x888: JUMPDEST 
0x889: V477 = DIV S0 S1
0x88a: V478 = EQ V477 S2
0x88b: V479 = ISZERO V478
0x88c: V480 = ISZERO V479
0x88d: V481 = 0x776
0x890: THROWI V480
---
Entry stack: [S6, S5, S4, V473, S2, S1, V473]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x891
[0x891:0x895]
---
Predecessors: [0x887]
Successors: [0x896]
---
0x891 INVALID
0x892 JUMPDEST
0x893 DUP1
0x894 SWAP2
0x895 POP
---
0x891: INVALID 
0x892: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0x896
[0x896:0x965]
---
Predecessors: [0x891]
Successors: [0x966]
---
0x896 JUMPDEST
0x897 POP
0x898 SWAP3
0x899 SWAP2
0x89a POP
0x89b POP
0x89c JUMP
0x89d JUMPDEST
0x89e PUSH1 0x1
0x8a0 PUSH1 0x0
0x8a2 SWAP1
0x8a3 SLOAD
0x8a4 SWAP1
0x8a5 PUSH2 0x100
0x8a8 EXP
0x8a9 SWAP1
0x8aa DIV
0x8ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c0 AND
0x8c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d6 AND
0x8d7 PUSH4 0xa9059cbb
0x8dc DUP4
0x8dd DUP4
0x8de PUSH1 0x0
0x8e0 PUSH1 0x40
0x8e2 MLOAD
0x8e3 PUSH1 0x20
0x8e5 ADD
0x8e6 MSTORE
0x8e7 PUSH1 0x40
0x8e9 MLOAD
0x8ea DUP4
0x8eb PUSH4 0xffffffff
0x8f0 AND
0x8f1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x90f MUL
0x910 DUP2
0x911 MSTORE
0x912 PUSH1 0x4
0x914 ADD
0x915 DUP1
0x916 DUP4
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x942 AND
0x943 DUP2
0x944 MSTORE
0x945 PUSH1 0x20
0x947 ADD
0x948 DUP3
0x949 DUP2
0x94a MSTORE
0x94b PUSH1 0x20
0x94d ADD
0x94e SWAP3
0x94f POP
0x950 POP
0x951 POP
0x952 PUSH1 0x20
0x954 PUSH1 0x40
0x956 MLOAD
0x957 DUP1
0x958 DUP4
0x959 SUB
0x95a DUP2
0x95b PUSH1 0x0
0x95d DUP8
0x95e DUP1
0x95f EXTCODESIZE
0x960 ISZERO
0x961 ISZERO
0x962 PUSH2 0x84e
0x965 JUMPI
---
0x896: JUMPDEST 
0x89c: JUMP S4
0x89d: JUMPDEST 
0x89e: V482 = 0x1
0x8a0: V483 = 0x0
0x8a3: V484 = S[0x1]
0x8a5: V485 = 0x100
0x8a8: V486 = EXP 0x100 0x0
0x8aa: V487 = DIV V484 0x1
0x8ab: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c0: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x8c1: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d6: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x8d7: V492 = 0xa9059cbb
0x8de: V493 = 0x0
0x8e0: V494 = 0x40
0x8e2: V495 = M[0x40]
0x8e3: V496 = 0x20
0x8e5: V497 = ADD 0x20 V495
0x8e6: M[V497] = 0x0
0x8e7: V498 = 0x40
0x8e9: V499 = M[0x40]
0x8eb: V500 = 0xffffffff
0x8f0: V501 = AND 0xffffffff 0xa9059cbb
0x8f1: V502 = 0x100000000000000000000000000000000000000000000000000000000
0x90f: V503 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x911: M[V499] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x912: V504 = 0x4
0x914: V505 = ADD 0x4 V499
0x917: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x92d: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x942: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x944: M[V505] = V509
0x945: V510 = 0x20
0x947: V511 = ADD 0x20 V505
0x94a: M[V511] = S0
0x94b: V512 = 0x20
0x94d: V513 = ADD 0x20 V511
0x952: V514 = 0x20
0x954: V515 = 0x40
0x956: V516 = M[0x40]
0x959: V517 = SUB V513 V516
0x95b: V518 = 0x0
0x95f: V519 = EXTCODESIZE V491
0x960: V520 = ISZERO V519
0x961: V521 = ISZERO V520
0x962: V522 = 0x84e
0x965: THROWI V521
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [V491, 0x0, V516, V517, V516, 0x20, V513, 0xa9059cbb, V491, S0, S1]
Exit stack: []

================================

Block 0x966
[0x966:0x976]
---
Predecessors: [0x896]
Successors: [0x977]
---
0x966 PUSH1 0x0
0x968 DUP1
0x969 REVERT
0x96a JUMPDEST
0x96b PUSH2 0x2c6
0x96e GAS
0x96f SUB
0x970 CALL
0x971 ISZERO
0x972 ISZERO
0x973 PUSH2 0x85f
0x976 JUMPI
---
0x966: V523 = 0x0
0x969: REVERT 0x0 0x0
0x96a: JUMPDEST 
0x96b: V524 = 0x2c6
0x96e: V525 = GAS
0x96f: V526 = SUB V525 0x2c6
0x970: V527 = CALL V526 S0 S1 S2 S3 S4 S5
0x971: V528 = ISZERO V527
0x972: V529 = ISZERO V528
0x973: V530 = 0x85f
0x976: THROWI V529
---
Entry stack: [S10, S9, V491, 0xa9059cbb, V513, 0x20, V516, V517, V516, 0x0, V491]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x977
[0x977:0x9bc]
---
Predecessors: [0x966]
Successors: []
---
0x977 PUSH1 0x0
0x979 DUP1
0x97a REVERT
0x97b JUMPDEST
0x97c POP
0x97d POP
0x97e POP
0x97f PUSH1 0x40
0x981 MLOAD
0x982 DUP1
0x983 MLOAD
0x984 SWAP1
0x985 POP
0x986 POP
0x987 POP
0x988 POP
0x989 JUMP
0x98a STOP
0x98b LOG1
0x98c PUSH6 0x627a7a723058
0x993 SHA3
0x994 MISSING 0xf6
0x995 LOG0
0x996 MSIZE
0x997 ISZERO
0x998 MISSING 0xe5
0x999 PUSH10 0x5e279f97792e8f4de143
0x9a4 SWAP3
0x9a5 EXP
0x9a6 PUSH7 0xc0b887a0dcff75
0x9ae MISSING 0xa9
0x9af PUSH13 0x3137467a0029
---
0x977: V531 = 0x0
0x97a: REVERT 0x0 0x0
0x97b: JUMPDEST 
0x97f: V532 = 0x40
0x981: V533 = M[0x40]
0x983: V534 = M[V533]
0x989: JUMP S5
0x98a: STOP 
0x98b: LOG S0 S1 S2
0x98c: V535 = 0x627a7a723058
0x993: V536 = SHA3 0x627a7a723058 S3
0x994: MISSING 0xf6
0x995: LOG S0 S1
0x996: V537 = MSIZE
0x997: V538 = ISZERO V537
0x998: MISSING 0xe5
0x999: V539 = 0x5e279f97792e8f4de143
0x9a5: V540 = EXP S2 S0
0x9a6: V541 = 0xc0b887a0dcff75
0x9ae: MISSING 0xa9
0x9af: V542 = 0x3137467a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V536, V538, 0xc0b887a0dcff75, V540, S1, 0x5e279f97792e8f4de143, 0x3137467a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x44
Exit block: 0x54
Body: 0x44, 0x4a, 0x4e, 0x54, 0x96

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x3f
Body: 0x3f

