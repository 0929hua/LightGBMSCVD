Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xce]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xce
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xce
0xa: JUMPI 0xce V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xd3]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xd3
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xd3
0x3e: JUMPI 0xd3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x161]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x161
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x161
0x49: JUMPI 0x161 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1bb]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x1bb
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x1bb
0x54: JUMPI 0x1bb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1e4]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1e4
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1e4
0x5f: JUMPI 0x1e4 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x25d]
---
0x60 DUP1
0x61 PUSH4 0x2b68b9c6
0x66 EQ
0x67 PUSH2 0x25d
0x6a JUMPI
---
0x61: V23 = 0x2b68b9c6
0x66: V24 = EQ 0x2b68b9c6 V10
0x67: V25 = 0x25d
0x6a: JUMPI 0x25d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x272]
---
0x6b DUP1
0x6c PUSH4 0x313ce567
0x71 EQ
0x72 PUSH2 0x272
0x75 JUMPI
---
0x6c: V26 = 0x313ce567
0x71: V27 = EQ 0x313ce567 V10
0x72: V28 = 0x272
0x75: JUMPI 0x272 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2a1]
---
0x76 DUP1
0x77 PUSH4 0x40c10f19
0x7c EQ
0x7d PUSH2 0x2a1
0x80 JUMPI
---
0x77: V29 = 0x40c10f19
0x7c: V30 = EQ 0x40c10f19 V10
0x7d: V31 = 0x2a1
0x80: JUMPI 0x2a1 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x2e3]
---
0x81 DUP1
0x82 PUSH4 0x70a08231
0x87 EQ
0x88 PUSH2 0x2e3
0x8b JUMPI
---
0x82: V32 = 0x70a08231
0x87: V33 = EQ 0x70a08231 V10
0x88: V34 = 0x2e3
0x8b: JUMPI 0x2e3 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x330]
---
0x8c DUP1
0x8d PUSH4 0x8da5cb5b
0x92 EQ
0x93 PUSH2 0x330
0x96 JUMPI
---
0x8d: V35 = 0x8da5cb5b
0x92: V36 = EQ 0x8da5cb5b V10
0x93: V37 = 0x330
0x96: JUMPI 0x330 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x385]
---
0x97 DUP1
0x98 PUSH4 0x95d89b41
0x9d EQ
0x9e PUSH2 0x385
0xa1 JUMPI
---
0x98: V38 = 0x95d89b41
0x9d: V39 = EQ 0x95d89b41 V10
0x9e: V40 = 0x385
0xa1: JUMPI 0x385 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x413]
---
0xa2 DUP1
0xa3 PUSH4 0xa6f9dae1
0xa8 EQ
0xa9 PUSH2 0x413
0xac JUMPI
---
0xa3: V41 = 0xa6f9dae1
0xa8: V42 = EQ 0xa6f9dae1 V10
0xa9: V43 = 0x413
0xac: JUMPI 0x413 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x44c]
---
0xad DUP1
0xae PUSH4 0xa9059cbb
0xb3 EQ
0xb4 PUSH2 0x44c
0xb7 JUMPI
---
0xae: V44 = 0xa9059cbb
0xb3: V45 = EQ 0xa9059cbb V10
0xb4: V46 = 0x44c
0xb7: JUMPI 0x44c V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x4a6]
---
0xb8 DUP1
0xb9 PUSH4 0xbe45fd62
0xbe EQ
0xbf PUSH2 0x4a6
0xc2 JUMPI
---
0xb9: V47 = 0xbe45fd62
0xbe: V48 = EQ 0xbe45fd62 V10
0xbf: V49 = 0x4a6
0xc2: JUMPI 0x4a6 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce, 0x52b]
---
0xc3 DUP1
0xc4 PUSH4 0xdd62ed3e
0xc9 EQ
0xca PUSH2 0x52b
0xcd JUMPI
---
0xc4: V50 = 0xdd62ed3e
0xc9: V51 = EQ 0xdd62ed3e V10
0xca: V52 = 0x52b
0xcd: JUMPI 0x52b V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd2]
---
Predecessors: [0x0, 0xc3]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xce: JUMPDEST 
0xcf: V53 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0xb]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V54 = CALLVALUE
0xd5: V55 = ISZERO V54
0xd6: V56 = 0xde
0xd9: JUMPI 0xde V55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V57 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd3]
Successors: [0x597]
---
0xde JUMPDEST
0xdf PUSH2 0xe6
0xe2 PUSH2 0x597
0xe5 JUMP
---
0xde: JUMPDEST 
0xdf: V58 = 0xe6
0xe2: V59 = 0x597
0xe5: JUMP 0x597
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V10, 0xe6]

================================

Block 0xe6
[0xe6:0x10a]
---
Predecessors: [0x597]
Successors: [0x10b]
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb DUP1
0xec PUSH1 0x20
0xee ADD
0xef DUP3
0xf0 DUP2
0xf1 SUB
0xf2 DUP3
0xf3 MSTORE
0xf4 DUP4
0xf5 DUP2
0xf6 DUP2
0xf7 MLOAD
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP2
0xfe POP
0xff DUP1
0x100 MLOAD
0x101 SWAP1
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP1
0x106 DUP1
0x107 DUP4
0x108 DUP4
0x109 PUSH1 0x0
---
0xe6: JUMPDEST 
0xe7: V60 = 0x40
0xe9: V61 = M[0x40]
0xec: V62 = 0x20
0xee: V63 = ADD 0x20 V61
0xf1: V64 = SUB V63 V61
0xf3: M[V61] = V64
0xf7: V65 = M[V391]
0xf9: M[V63] = V65
0xfa: V66 = 0x20
0xfc: V67 = ADD 0x20 V63
0x100: V68 = M[V391]
0x102: V69 = 0x20
0x104: V70 = ADD 0x20 V391
0x109: V71 = 0x0
---
Entry stack: [V10, 0xe6, V391]
Stack pops: 1
Stack additions: [S0, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]
Exit stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]

================================

Block 0x10b
[0x10b:0x113]
---
Predecessors: [0xe6, 0x114]
Successors: [0x114, 0x126]
---
0x10b JUMPDEST
0x10c DUP4
0x10d DUP2
0x10e LT
0x10f ISZERO
0x110 PUSH2 0x126
0x113 JUMPI
---
0x10b: JUMPDEST 
0x10e: V72 = LT S0 V68
0x10f: V73 = ISZERO V72
0x110: V74 = 0x126
0x113: JUMPI 0x126 V73
---
Entry stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]

================================

Block 0x114
[0x114:0x125]
---
Predecessors: [0x10b]
Successors: [0x10b]
---
0x114 DUP1
0x115 DUP3
0x116 ADD
0x117 MLOAD
0x118 DUP2
0x119 DUP5
0x11a ADD
0x11b MSTORE
0x11c PUSH1 0x20
0x11e DUP2
0x11f ADD
0x120 SWAP1
0x121 POP
0x122 PUSH2 0x10b
0x125 JUMP
---
0x116: V75 = ADD V70 S0
0x117: V76 = M[V75]
0x11a: V77 = ADD V67 S0
0x11b: M[V77] = V76
0x11c: V78 = 0x20
0x11f: V79 = ADD S0 0x20
0x122: V80 = 0x10b
0x125: JUMP 0x10b
---
Entry stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 3
Stack additions: [S2, S1, V79]
Exit stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, V79]

================================

Block 0x126
[0x126:0x139]
---
Predecessors: [0x10b]
Successors: [0x13a, 0x153]
---
0x126 JUMPDEST
0x127 POP
0x128 POP
0x129 POP
0x12a POP
0x12b SWAP1
0x12c POP
0x12d SWAP1
0x12e DUP2
0x12f ADD
0x130 SWAP1
0x131 PUSH1 0x1f
0x133 AND
0x134 DUP1
0x135 ISZERO
0x136 PUSH2 0x153
0x139 JUMPI
---
0x126: JUMPDEST 
0x12f: V81 = ADD V68 V67
0x131: V82 = 0x1f
0x133: V83 = AND 0x1f V68
0x135: V84 = ISZERO V83
0x136: V85 = 0x153
0x139: JUMPI 0x153 V84
---
Entry stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 7
Stack additions: [V81, V83]
Exit stack: [V10, 0xe6, V391, V61, V61, V81, V83]

================================

Block 0x13a
[0x13a:0x152]
---
Predecessors: [0x126]
Successors: [0x153]
---
0x13a DUP1
0x13b DUP3
0x13c SUB
0x13d DUP1
0x13e MLOAD
0x13f PUSH1 0x1
0x141 DUP4
0x142 PUSH1 0x20
0x144 SUB
0x145 PUSH2 0x100
0x148 EXP
0x149 SUB
0x14a NOT
0x14b AND
0x14c DUP2
0x14d MSTORE
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP2
0x152 POP
---
0x13c: V86 = SUB V81 V83
0x13e: V87 = M[V86]
0x13f: V88 = 0x1
0x142: V89 = 0x20
0x144: V90 = SUB 0x20 V83
0x145: V91 = 0x100
0x148: V92 = EXP 0x100 V90
0x149: V93 = SUB V92 0x1
0x14a: V94 = NOT V93
0x14b: V95 = AND V94 V87
0x14d: M[V86] = V95
0x14e: V96 = 0x20
0x150: V97 = ADD 0x20 V86
---
Entry stack: [V10, 0xe6, V391, V61, V61, V81, V83]
Stack pops: 2
Stack additions: [V97, S0]
Exit stack: [V10, 0xe6, V391, V61, V61, V97, V83]

================================

Block 0x153
[0x153:0x160]
---
Predecessors: [0x126, 0x13a]
Successors: []
---
0x153 JUMPDEST
0x154 POP
0x155 SWAP3
0x156 POP
0x157 POP
0x158 POP
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 RETURN
---
0x153: JUMPDEST 
0x159: V98 = 0x40
0x15b: V99 = M[0x40]
0x15e: V100 = SUB S1 V99
0x160: RETURN V99 V100
---
Entry stack: [V10, 0xe6, V391, V61, V61, S1, V83]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xe6]

================================

Block 0x161
[0x161:0x167]
---
Predecessors: [0x3f]
Successors: [0x168, 0x16c]
---
0x161 JUMPDEST
0x162 CALLVALUE
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x161: JUMPDEST 
0x162: V101 = CALLVALUE
0x163: V102 = ISZERO V101
0x164: V103 = 0x16c
0x167: JUMPI 0x16c V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x161]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V104 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16c
[0x16c:0x1a0]
---
Predecessors: [0x161]
Successors: [0x5d0]
---
0x16c JUMPDEST
0x16d PUSH2 0x1a1
0x170 PUSH1 0x4
0x172 DUP1
0x173 DUP1
0x174 CALLDATALOAD
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b SWAP1
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP1
0x190 SWAP2
0x191 SWAP1
0x192 DUP1
0x193 CALLDATALOAD
0x194 SWAP1
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 SWAP2
0x19a SWAP1
0x19b POP
0x19c POP
0x19d PUSH2 0x5d0
0x1a0 JUMP
---
0x16c: JUMPDEST 
0x16d: V105 = 0x1a1
0x170: V106 = 0x4
0x174: V107 = CALLDATALOAD 0x4
0x175: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x18c: V110 = 0x20
0x18e: V111 = ADD 0x20 0x4
0x193: V112 = CALLDATALOAD 0x24
0x195: V113 = 0x20
0x197: V114 = ADD 0x20 0x24
0x19d: V115 = 0x5d0
0x1a0: JUMP 0x5d0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a1, V109, V112]
Exit stack: [V10, 0x1a1, V109, V112]

================================

Block 0x1a1
[0x1a1:0x1ba]
---
Predecessors: [0x5d0]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 DUP3
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 ISZERO
0x1aa ISZERO
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP2
0x1b1 POP
0x1b2 POP
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 SWAP2
0x1b8 SUB
0x1b9 SWAP1
0x1ba RETURN
---
0x1a1: JUMPDEST 
0x1a2: V116 = 0x40
0x1a4: V117 = M[0x40]
0x1a7: V118 = ISZERO 0x1
0x1a8: V119 = ISZERO 0x0
0x1a9: V120 = ISZERO 0x1
0x1aa: V121 = ISZERO 0x0
0x1ac: M[V117] = 0x1
0x1ad: V122 = 0x20
0x1af: V123 = ADD 0x20 V117
0x1b3: V124 = 0x40
0x1b5: V125 = M[0x40]
0x1b8: V126 = SUB V123 V125
0x1ba: RETURN V125 V126
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x4a]
Successors: [0x1c2, 0x1c6]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V127 = CALLVALUE
0x1bd: V128 = ISZERO V127
0x1be: V129 = 0x1c6
0x1c1: JUMPI 0x1c6 V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V130 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x1bb]
Successors: [0x6c2]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x1ce
0x1ca PUSH2 0x6c2
0x1cd JUMP
---
0x1c6: JUMPDEST 
0x1c7: V131 = 0x1ce
0x1ca: V132 = 0x6c2
0x1cd: JUMP 0x6c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ce]
Exit stack: [V10, 0x1ce]

================================

Block 0x1ce
[0x1ce:0x1e3]
---
Predecessors: [0x6c2]
Successors: []
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP3
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP2
0x1da POP
0x1db POP
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1ce: JUMPDEST 
0x1cf: V133 = 0x40
0x1d1: V134 = M[0x40]
0x1d5: M[V134] = V438
0x1d6: V135 = 0x20
0x1d8: V136 = ADD 0x20 V134
0x1dc: V137 = 0x40
0x1de: V138 = M[0x40]
0x1e1: V139 = SUB V136 V138
0x1e3: RETURN V138 V139
---
Entry stack: [V10, 0x1ce, V438]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1ce]

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x55]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V140 = CALLVALUE
0x1e6: V141 = ISZERO V140
0x1e7: V142 = 0x1ef
0x1ea: JUMPI 0x1ef V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V143 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x242]
---
Predecessors: [0x1e4]
Successors: [0x6c8]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x243
0x1f3 PUSH1 0x4
0x1f5 DUP1
0x1f6 DUP1
0x1f7 CALLDATALOAD
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e SWAP1
0x20f PUSH1 0x20
0x211 ADD
0x212 SWAP1
0x213 SWAP2
0x214 SWAP1
0x215 DUP1
0x216 CALLDATALOAD
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d SWAP1
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP1
0x232 SWAP2
0x233 SWAP1
0x234 DUP1
0x235 CALLDATALOAD
0x236 SWAP1
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b SWAP2
0x23c SWAP1
0x23d POP
0x23e POP
0x23f PUSH2 0x6c8
0x242 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V144 = 0x243
0x1f3: V145 = 0x4
0x1f7: V146 = CALLDATALOAD 0x4
0x1f8: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x20f: V149 = 0x20
0x211: V150 = ADD 0x20 0x4
0x216: V151 = CALLDATALOAD 0x24
0x217: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x22e: V154 = 0x20
0x230: V155 = ADD 0x20 0x24
0x235: V156 = CALLDATALOAD 0x44
0x237: V157 = 0x20
0x239: V158 = ADD 0x20 0x44
0x23f: V159 = 0x6c8
0x242: JUMP 0x6c8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243, V148, V153, V156]
Exit stack: [V10, 0x243, V148, V153, V156]

================================

Block 0x243
[0x243:0x25c]
---
Predecessors: [0x8ad]
Successors: []
---
0x243 JUMPDEST
0x244 PUSH1 0x40
0x246 MLOAD
0x247 DUP1
0x248 DUP3
0x249 ISZERO
0x24a ISZERO
0x24b ISZERO
0x24c ISZERO
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP2
0x253 POP
0x254 POP
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 SWAP2
0x25a SUB
0x25b SWAP1
0x25c RETURN
---
0x243: JUMPDEST 
0x244: V160 = 0x40
0x246: V161 = M[0x40]
0x249: V162 = ISZERO 0x1
0x24a: V163 = ISZERO 0x0
0x24b: V164 = ISZERO 0x1
0x24c: V165 = ISZERO 0x0
0x24e: M[V161] = 0x1
0x24f: V166 = 0x20
0x251: V167 = ADD 0x20 V161
0x255: V168 = 0x40
0x257: V169 = M[0x40]
0x25a: V170 = SUB V167 V169
0x25c: RETURN V169 V170
---
Entry stack: [V10, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x25d
[0x25d:0x263]
---
Predecessors: [0x60]
Successors: [0x264, 0x268]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25d: JUMPDEST 
0x25e: V171 = CALLVALUE
0x25f: V172 = ISZERO V171
0x260: V173 = 0x268
0x263: JUMPI 0x268 V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25d]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V174 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x25d]
Successors: [0x960]
---
0x268 JUMPDEST
0x269 PUSH2 0x270
0x26c PUSH2 0x960
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V175 = 0x270
0x26c: V176 = 0x960
0x26f: JUMP 0x960
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V10, 0x270]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: []
Successors: []
---
0x270 JUMPDEST
0x271 STOP
---
0x270: JUMPDEST 
0x271: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x6b]
Successors: [0x279, 0x27d]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V177 = CALLVALUE
0x274: V178 = ISZERO V177
0x275: V179 = 0x27d
0x278: JUMPI 0x27d V178
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V180 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x272]
Successors: [0x9f7]
---
0x27d JUMPDEST
0x27e PUSH2 0x285
0x281 PUSH2 0x9f7
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V181 = 0x285
0x281: V182 = 0x9f7
0x284: JUMP 0x9f7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x285]
Exit stack: [V10, 0x285]

================================

Block 0x285
[0x285:0x2a0]
---
Predecessors: [0x9f7]
Successors: []
---
0x285 JUMPDEST
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a DUP3
0x28b PUSH1 0xff
0x28d AND
0x28e PUSH1 0xff
0x290 AND
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP2
0x297 POP
0x298 POP
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d SWAP2
0x29e SUB
0x29f SWAP1
0x2a0 RETURN
---
0x285: JUMPDEST 
0x286: V183 = 0x40
0x288: V184 = M[0x40]
0x28b: V185 = 0xff
0x28d: V186 = AND 0xff 0x12
0x28e: V187 = 0xff
0x290: V188 = AND 0xff 0x12
0x292: M[V184] = 0x12
0x293: V189 = 0x20
0x295: V190 = ADD 0x20 V184
0x299: V191 = 0x40
0x29b: V192 = M[0x40]
0x29e: V193 = SUB V190 V192
0x2a0: RETURN V192 V193
---
Entry stack: [V10, 0x285, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x285]

================================

Block 0x2a1
[0x2a1:0x2a7]
---
Predecessors: [0x76]
Successors: [0x2a8, 0x2ac]
---
0x2a1 JUMPDEST
0x2a2 CALLVALUE
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V194 = CALLVALUE
0x2a3: V195 = ISZERO V194
0x2a4: V196 = 0x2ac
0x2a7: JUMPI 0x2ac V195
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a1]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V197 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ac
[0x2ac:0x2e0]
---
Predecessors: [0x2a1]
Successors: [0x9fc]
---
0x2ac JUMPDEST
0x2ad PUSH2 0x2e1
0x2b0 PUSH1 0x4
0x2b2 DUP1
0x2b3 DUP1
0x2b4 CALLDATALOAD
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb SWAP1
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf SWAP1
0x2d0 SWAP2
0x2d1 SWAP1
0x2d2 DUP1
0x2d3 CALLDATALOAD
0x2d4 SWAP1
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP1
0x2d9 SWAP2
0x2da SWAP1
0x2db POP
0x2dc POP
0x2dd PUSH2 0x9fc
0x2e0 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V198 = 0x2e1
0x2b0: V199 = 0x4
0x2b4: V200 = CALLDATALOAD 0x4
0x2b5: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x2cc: V203 = 0x20
0x2ce: V204 = ADD 0x20 0x4
0x2d3: V205 = CALLDATALOAD 0x24
0x2d5: V206 = 0x20
0x2d7: V207 = ADD 0x20 0x24
0x2dd: V208 = 0x9fc
0x2e0: JUMP 0x9fc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e1, V202, V205]
Exit stack: [V10, 0x2e1, V202, V205]

================================

Block 0x2e1
[0x2e1:0x2e2]
---
Predecessors: [0xab3]
Successors: []
---
0x2e1 JUMPDEST
0x2e2 STOP
---
0x2e1: JUMPDEST 
0x2e2: STOP 
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0x2e3
[0x2e3:0x2e9]
---
Predecessors: [0x81]
Successors: [0x2ea, 0x2ee]
---
0x2e3 JUMPDEST
0x2e4 CALLVALUE
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V209 = CALLVALUE
0x2e5: V210 = ISZERO V209
0x2e6: V211 = 0x2ee
0x2e9: JUMPI 0x2ee V210
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2e3]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V212 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ee
[0x2ee:0x319]
---
Predecessors: [0x2e3]
Successors: [0xafa]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x31a
0x2f2 PUSH1 0x4
0x2f4 DUP1
0x2f5 DUP1
0x2f6 CALLDATALOAD
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d SWAP1
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 SWAP2
0x313 SWAP1
0x314 POP
0x315 POP
0x316 PUSH2 0xafa
0x319 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V213 = 0x31a
0x2f2: V214 = 0x4
0x2f6: V215 = CALLDATALOAD 0x4
0x2f7: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x30e: V218 = 0x20
0x310: V219 = ADD 0x20 0x4
0x316: V220 = 0xafa
0x319: JUMP 0xafa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31a, V217]
Exit stack: [V10, 0x31a, V217]

================================

Block 0x31a
[0x31a:0x32f]
---
Predecessors: [0xafa]
Successors: []
---
0x31a JUMPDEST
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f DUP3
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP2
0x326 POP
0x327 POP
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c SWAP2
0x32d SUB
0x32e SWAP1
0x32f RETURN
---
0x31a: JUMPDEST 
0x31b: V221 = 0x40
0x31d: V222 = M[0x40]
0x321: M[V222] = V652
0x322: V223 = 0x20
0x324: V224 = ADD 0x20 V222
0x328: V225 = 0x40
0x32a: V226 = M[0x40]
0x32d: V227 = SUB V224 V226
0x32f: RETURN V226 V227
---
Entry stack: [V10, V652]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x330
[0x330:0x336]
---
Predecessors: [0x8c]
Successors: [0x337, 0x33b]
---
0x330 JUMPDEST
0x331 CALLVALUE
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x330: JUMPDEST 
0x331: V228 = CALLVALUE
0x332: V229 = ISZERO V228
0x333: V230 = 0x33b
0x336: JUMPI 0x33b V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x330]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V231 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x330]
Successors: [0xb43]
---
0x33b JUMPDEST
0x33c PUSH2 0x343
0x33f PUSH2 0xb43
0x342 JUMP
---
0x33b: JUMPDEST 
0x33c: V232 = 0x343
0x33f: V233 = 0xb43
0x342: JUMP 0xb43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x343]
Exit stack: [V10, 0x343]

================================

Block 0x343
[0x343:0x384]
---
Predecessors: [0xb43]
Successors: []
---
0x343 JUMPDEST
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP3
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x20
0x379 ADD
0x37a SWAP2
0x37b POP
0x37c POP
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 RETURN
---
0x343: JUMPDEST 
0x344: V234 = 0x40
0x346: V235 = M[0x40]
0x349: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x35f: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x376: M[V235] = V239
0x377: V240 = 0x20
0x379: V241 = ADD 0x20 V235
0x37d: V242 = 0x40
0x37f: V243 = M[0x40]
0x382: V244 = SUB V241 V243
0x384: RETURN V243 V244
---
Entry stack: [V10, 0x343, V660]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x343]

================================

Block 0x385
[0x385:0x38b]
---
Predecessors: [0x97]
Successors: [0x38c, 0x390]
---
0x385 JUMPDEST
0x386 CALLVALUE
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x385: JUMPDEST 
0x386: V245 = CALLVALUE
0x387: V246 = ISZERO V245
0x388: V247 = 0x390
0x38b: JUMPI 0x390 V246
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x385]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V248 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x390
[0x390:0x397]
---
Predecessors: [0x385]
Successors: [0xb69]
---
0x390 JUMPDEST
0x391 PUSH2 0x398
0x394 PUSH2 0xb69
0x397 JUMP
---
0x390: JUMPDEST 
0x391: V249 = 0x398
0x394: V250 = 0xb69
0x397: JUMP 0xb69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x398]
Exit stack: [V10, 0x398]

================================

Block 0x398
[0x398:0x3bc]
---
Predecessors: [0xb69]
Successors: [0x3bd]
---
0x398 JUMPDEST
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP1
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 DUP3
0x3a2 DUP2
0x3a3 SUB
0x3a4 DUP3
0x3a5 MSTORE
0x3a6 DUP4
0x3a7 DUP2
0x3a8 DUP2
0x3a9 MLOAD
0x3aa DUP2
0x3ab MSTORE
0x3ac PUSH1 0x20
0x3ae ADD
0x3af SWAP2
0x3b0 POP
0x3b1 DUP1
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP1
0x3b8 DUP1
0x3b9 DUP4
0x3ba DUP4
0x3bb PUSH1 0x0
---
0x398: JUMPDEST 
0x399: V251 = 0x40
0x39b: V252 = M[0x40]
0x39e: V253 = 0x20
0x3a0: V254 = ADD 0x20 V252
0x3a3: V255 = SUB V254 V252
0x3a5: M[V252] = V255
0x3a9: V256 = M[V662]
0x3ab: M[V254] = V256
0x3ac: V257 = 0x20
0x3ae: V258 = ADD 0x20 V254
0x3b2: V259 = M[V662]
0x3b4: V260 = 0x20
0x3b6: V261 = ADD 0x20 V662
0x3bb: V262 = 0x0
---
Entry stack: [V10, 0x398, V662]
Stack pops: 1
Stack additions: [S0, V252, V252, V258, V261, V259, V259, V258, V261, 0x0]
Exit stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, 0x0]

================================

Block 0x3bd
[0x3bd:0x3c5]
---
Predecessors: [0x398, 0x3c6]
Successors: [0x3c6, 0x3d8]
---
0x3bd JUMPDEST
0x3be DUP4
0x3bf DUP2
0x3c0 LT
0x3c1 ISZERO
0x3c2 PUSH2 0x3d8
0x3c5 JUMPI
---
0x3bd: JUMPDEST 
0x3c0: V263 = LT S0 V259
0x3c1: V264 = ISZERO V263
0x3c2: V265 = 0x3d8
0x3c5: JUMPI 0x3d8 V264
---
Entry stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]

================================

Block 0x3c6
[0x3c6:0x3d7]
---
Predecessors: [0x3bd]
Successors: [0x3bd]
---
0x3c6 DUP1
0x3c7 DUP3
0x3c8 ADD
0x3c9 MLOAD
0x3ca DUP2
0x3cb DUP5
0x3cc ADD
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 DUP2
0x3d1 ADD
0x3d2 SWAP1
0x3d3 POP
0x3d4 PUSH2 0x3bd
0x3d7 JUMP
---
0x3c8: V266 = ADD V261 S0
0x3c9: V267 = M[V266]
0x3cc: V268 = ADD V258 S0
0x3cd: M[V268] = V267
0x3ce: V269 = 0x20
0x3d1: V270 = ADD S0 0x20
0x3d4: V271 = 0x3bd
0x3d7: JUMP 0x3bd
---
Entry stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]
Stack pops: 3
Stack additions: [S2, S1, V270]
Exit stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, V270]

================================

Block 0x3d8
[0x3d8:0x3eb]
---
Predecessors: [0x3bd]
Successors: [0x3ec, 0x405]
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da POP
0x3db POP
0x3dc POP
0x3dd SWAP1
0x3de POP
0x3df SWAP1
0x3e0 DUP2
0x3e1 ADD
0x3e2 SWAP1
0x3e3 PUSH1 0x1f
0x3e5 AND
0x3e6 DUP1
0x3e7 ISZERO
0x3e8 PUSH2 0x405
0x3eb JUMPI
---
0x3d8: JUMPDEST 
0x3e1: V272 = ADD V259 V258
0x3e3: V273 = 0x1f
0x3e5: V274 = AND 0x1f V259
0x3e7: V275 = ISZERO V274
0x3e8: V276 = 0x405
0x3eb: JUMPI 0x405 V275
---
Entry stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]
Stack pops: 7
Stack additions: [V272, V274]
Exit stack: [V10, 0x398, V662, V252, V252, V272, V274]

================================

Block 0x3ec
[0x3ec:0x404]
---
Predecessors: [0x3d8]
Successors: [0x405]
---
0x3ec DUP1
0x3ed DUP3
0x3ee SUB
0x3ef DUP1
0x3f0 MLOAD
0x3f1 PUSH1 0x1
0x3f3 DUP4
0x3f4 PUSH1 0x20
0x3f6 SUB
0x3f7 PUSH2 0x100
0x3fa EXP
0x3fb SUB
0x3fc NOT
0x3fd AND
0x3fe DUP2
0x3ff MSTORE
0x400 PUSH1 0x20
0x402 ADD
0x403 SWAP2
0x404 POP
---
0x3ee: V277 = SUB V272 V274
0x3f0: V278 = M[V277]
0x3f1: V279 = 0x1
0x3f4: V280 = 0x20
0x3f6: V281 = SUB 0x20 V274
0x3f7: V282 = 0x100
0x3fa: V283 = EXP 0x100 V281
0x3fb: V284 = SUB V283 0x1
0x3fc: V285 = NOT V284
0x3fd: V286 = AND V285 V278
0x3ff: M[V277] = V286
0x400: V287 = 0x20
0x402: V288 = ADD 0x20 V277
---
Entry stack: [V10, 0x398, V662, V252, V252, V272, V274]
Stack pops: 2
Stack additions: [V288, S0]
Exit stack: [V10, 0x398, V662, V252, V252, V288, V274]

================================

Block 0x405
[0x405:0x412]
---
Predecessors: [0x3d8, 0x3ec]
Successors: []
---
0x405 JUMPDEST
0x406 POP
0x407 SWAP3
0x408 POP
0x409 POP
0x40a POP
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f SWAP2
0x410 SUB
0x411 SWAP1
0x412 RETURN
---
0x405: JUMPDEST 
0x40b: V289 = 0x40
0x40d: V290 = M[0x40]
0x410: V291 = SUB S1 V290
0x412: RETURN V290 V291
---
Entry stack: [V10, 0x398, V662, V252, V252, S1, V274]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x398]

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0xa2]
Successors: [0x41a, 0x41e]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V292 = CALLVALUE
0x415: V293 = ISZERO V292
0x416: V294 = 0x41e
0x419: JUMPI 0x41e V293
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x413]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V295 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41e
[0x41e:0x449]
---
Predecessors: [0x413]
Successors: [0xba2]
---
0x41e JUMPDEST
0x41f PUSH2 0x44a
0x422 PUSH1 0x4
0x424 DUP1
0x425 DUP1
0x426 CALLDATALOAD
0x427 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43c AND
0x43d SWAP1
0x43e PUSH1 0x20
0x440 ADD
0x441 SWAP1
0x442 SWAP2
0x443 SWAP1
0x444 POP
0x445 POP
0x446 PUSH2 0xba2
0x449 JUMP
---
0x41e: JUMPDEST 
0x41f: V296 = 0x44a
0x422: V297 = 0x4
0x426: V298 = CALLDATALOAD 0x4
0x427: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x43e: V301 = 0x20
0x440: V302 = ADD 0x20 0x4
0x446: V303 = 0xba2
0x449: JUMP 0xba2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x44a, V300]
Exit stack: [V10, 0x44a, V300]

================================

Block 0x44a
[0x44a:0x44b]
---
Predecessors: [0xbfe]
Successors: []
---
0x44a JUMPDEST
0x44b STOP
---
0x44a: JUMPDEST 
0x44b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44c
[0x44c:0x452]
---
Predecessors: [0xad]
Successors: [0x453, 0x457]
---
0x44c JUMPDEST
0x44d CALLVALUE
0x44e ISZERO
0x44f PUSH2 0x457
0x452 JUMPI
---
0x44c: JUMPDEST 
0x44d: V304 = CALLVALUE
0x44e: V305 = ISZERO V304
0x44f: V306 = 0x457
0x452: JUMPI 0x457 V305
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x453
[0x453:0x456]
---
Predecessors: [0x44c]
Successors: []
---
0x453 PUSH1 0x0
0x455 DUP1
0x456 REVERT
---
0x453: V307 = 0x0
0x456: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x457
[0x457:0x48b]
---
Predecessors: [0x44c]
Successors: [0xc42]
---
0x457 JUMPDEST
0x458 PUSH2 0x48c
0x45b PUSH1 0x4
0x45d DUP1
0x45e DUP1
0x45f CALLDATALOAD
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 AND
0x476 SWAP1
0x477 PUSH1 0x20
0x479 ADD
0x47a SWAP1
0x47b SWAP2
0x47c SWAP1
0x47d DUP1
0x47e CALLDATALOAD
0x47f SWAP1
0x480 PUSH1 0x20
0x482 ADD
0x483 SWAP1
0x484 SWAP2
0x485 SWAP1
0x486 POP
0x487 POP
0x488 PUSH2 0xc42
0x48b JUMP
---
0x457: JUMPDEST 
0x458: V308 = 0x48c
0x45b: V309 = 0x4
0x45f: V310 = CALLDATALOAD 0x4
0x460: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x477: V313 = 0x20
0x479: V314 = ADD 0x20 0x4
0x47e: V315 = CALLDATALOAD 0x24
0x480: V316 = 0x20
0x482: V317 = ADD 0x20 0x24
0x488: V318 = 0xc42
0x48b: JUMP 0xc42
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x48c, V312, V315]
Exit stack: [V10, 0x48c, V312, V315]

================================

Block 0x48c
[0x48c:0x4a5]
---
Predecessors: [0xea3]
Successors: []
---
0x48c JUMPDEST
0x48d PUSH1 0x40
0x48f MLOAD
0x490 DUP1
0x491 DUP3
0x492 ISZERO
0x493 ISZERO
0x494 ISZERO
0x495 ISZERO
0x496 DUP2
0x497 MSTORE
0x498 PUSH1 0x20
0x49a ADD
0x49b SWAP2
0x49c POP
0x49d POP
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 DUP1
0x4a2 SWAP2
0x4a3 SUB
0x4a4 SWAP1
0x4a5 RETURN
---
0x48c: JUMPDEST 
0x48d: V319 = 0x40
0x48f: V320 = M[0x40]
0x492: V321 = ISZERO 0x1
0x493: V322 = ISZERO 0x0
0x494: V323 = ISZERO 0x1
0x495: V324 = ISZERO 0x0
0x497: M[V320] = 0x1
0x498: V325 = 0x20
0x49a: V326 = ADD 0x20 V320
0x49e: V327 = 0x40
0x4a0: V328 = M[0x40]
0x4a3: V329 = SUB V326 V328
0x4a5: RETURN V328 V329
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a6
[0x4a6:0x4ac]
---
Predecessors: [0xb8]
Successors: [0x4ad, 0x4b1]
---
0x4a6 JUMPDEST
0x4a7 CALLVALUE
0x4a8 ISZERO
0x4a9 PUSH2 0x4b1
0x4ac JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V330 = CALLVALUE
0x4a8: V331 = ISZERO V330
0x4a9: V332 = 0x4b1
0x4ac: JUMPI 0x4b1 V331
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ad
[0x4ad:0x4b0]
---
Predecessors: [0x4a6]
Successors: []
---
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 REVERT
---
0x4ad: V333 = 0x0
0x4b0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b1
[0x4b1:0x528]
---
Predecessors: [0x4a6]
Successors: [0xf15]
---
0x4b1 JUMPDEST
0x4b2 PUSH2 0x529
0x4b5 PUSH1 0x4
0x4b7 DUP1
0x4b8 DUP1
0x4b9 CALLDATALOAD
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf AND
0x4d0 SWAP1
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP1
0x4d5 SWAP2
0x4d6 SWAP1
0x4d7 DUP1
0x4d8 CALLDATALOAD
0x4d9 SWAP1
0x4da PUSH1 0x20
0x4dc ADD
0x4dd SWAP1
0x4de SWAP2
0x4df SWAP1
0x4e0 DUP1
0x4e1 CALLDATALOAD
0x4e2 SWAP1
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 SWAP1
0x4e7 DUP3
0x4e8 ADD
0x4e9 DUP1
0x4ea CALLDATALOAD
0x4eb SWAP1
0x4ec PUSH1 0x20
0x4ee ADD
0x4ef SWAP1
0x4f0 DUP1
0x4f1 DUP1
0x4f2 PUSH1 0x1f
0x4f4 ADD
0x4f5 PUSH1 0x20
0x4f7 DUP1
0x4f8 SWAP2
0x4f9 DIV
0x4fa MUL
0x4fb PUSH1 0x20
0x4fd ADD
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 SWAP1
0x502 DUP2
0x503 ADD
0x504 PUSH1 0x40
0x506 MSTORE
0x507 DUP1
0x508 SWAP4
0x509 SWAP3
0x50a SWAP2
0x50b SWAP1
0x50c DUP2
0x50d DUP2
0x50e MSTORE
0x50f PUSH1 0x20
0x511 ADD
0x512 DUP4
0x513 DUP4
0x514 DUP1
0x515 DUP3
0x516 DUP5
0x517 CALLDATACOPY
0x518 DUP3
0x519 ADD
0x51a SWAP2
0x51b POP
0x51c POP
0x51d POP
0x51e POP
0x51f POP
0x520 POP
0x521 SWAP2
0x522 SWAP1
0x523 POP
0x524 POP
0x525 PUSH2 0xf15
0x528 JUMP
---
0x4b1: JUMPDEST 
0x4b2: V334 = 0x529
0x4b5: V335 = 0x4
0x4b9: V336 = CALLDATALOAD 0x4
0x4ba: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x4d1: V339 = 0x20
0x4d3: V340 = ADD 0x20 0x4
0x4d8: V341 = CALLDATALOAD 0x24
0x4da: V342 = 0x20
0x4dc: V343 = ADD 0x20 0x24
0x4e1: V344 = CALLDATALOAD 0x44
0x4e3: V345 = 0x20
0x4e5: V346 = ADD 0x20 0x44
0x4e8: V347 = ADD 0x4 V344
0x4ea: V348 = CALLDATALOAD V347
0x4ec: V349 = 0x20
0x4ee: V350 = ADD 0x20 V347
0x4f2: V351 = 0x1f
0x4f4: V352 = ADD 0x1f V348
0x4f5: V353 = 0x20
0x4f9: V354 = DIV V352 0x20
0x4fa: V355 = MUL V354 0x20
0x4fb: V356 = 0x20
0x4fd: V357 = ADD 0x20 V355
0x4fe: V358 = 0x40
0x500: V359 = M[0x40]
0x503: V360 = ADD V359 V357
0x504: V361 = 0x40
0x506: M[0x40] = V360
0x50e: M[V359] = V348
0x50f: V362 = 0x20
0x511: V363 = ADD 0x20 V359
0x517: CALLDATACOPY V363 V350 V348
0x519: V364 = ADD V363 V348
0x525: V365 = 0xf15
0x528: JUMP 0xf15
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x529, V338, V341, V359]
Exit stack: [V10, 0x529, V338, V341, V359]

================================

Block 0x529
[0x529:0x52a]
---
Predecessors: [0x1230]
Successors: []
---
0x529 JUMPDEST
0x52a STOP
---
0x529: JUMPDEST 
0x52a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x52b
[0x52b:0x531]
---
Predecessors: [0xc3]
Successors: [0x532, 0x536]
---
0x52b JUMPDEST
0x52c CALLVALUE
0x52d ISZERO
0x52e PUSH2 0x536
0x531 JUMPI
---
0x52b: JUMPDEST 
0x52c: V366 = CALLVALUE
0x52d: V367 = ISZERO V366
0x52e: V368 = 0x536
0x531: JUMPI 0x536 V367
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x532
[0x532:0x535]
---
Predecessors: [0x52b]
Successors: []
---
0x532 PUSH1 0x0
0x534 DUP1
0x535 REVERT
---
0x532: V369 = 0x0
0x535: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x536
[0x536:0x580]
---
Predecessors: [0x52b]
Successors: [0x1245]
---
0x536 JUMPDEST
0x537 PUSH2 0x581
0x53a PUSH1 0x4
0x53c DUP1
0x53d DUP1
0x53e CALLDATALOAD
0x53f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x554 AND
0x555 SWAP1
0x556 PUSH1 0x20
0x558 ADD
0x559 SWAP1
0x55a SWAP2
0x55b SWAP1
0x55c DUP1
0x55d CALLDATALOAD
0x55e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x573 AND
0x574 SWAP1
0x575 PUSH1 0x20
0x577 ADD
0x578 SWAP1
0x579 SWAP2
0x57a SWAP1
0x57b POP
0x57c POP
0x57d PUSH2 0x1245
0x580 JUMP
---
0x536: JUMPDEST 
0x537: V370 = 0x581
0x53a: V371 = 0x4
0x53e: V372 = CALLDATALOAD 0x4
0x53f: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x554: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x556: V375 = 0x20
0x558: V376 = ADD 0x20 0x4
0x55d: V377 = CALLDATALOAD 0x24
0x55e: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x573: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x575: V380 = 0x20
0x577: V381 = ADD 0x20 0x24
0x57d: V382 = 0x1245
0x580: JUMP 0x1245
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x581, V374, V379]
Exit stack: [V10, 0x581, V374, V379]

================================

Block 0x581
[0x581:0x596]
---
Predecessors: [0x1245]
Successors: []
---
0x581 JUMPDEST
0x582 PUSH1 0x40
0x584 MLOAD
0x585 DUP1
0x586 DUP3
0x587 DUP2
0x588 MSTORE
0x589 PUSH1 0x20
0x58b ADD
0x58c SWAP2
0x58d POP
0x58e POP
0x58f PUSH1 0x40
0x591 MLOAD
0x592 DUP1
0x593 SWAP2
0x594 SUB
0x595 SWAP1
0x596 RETURN
---
0x581: JUMPDEST 
0x582: V383 = 0x40
0x584: V384 = M[0x40]
0x588: M[V384] = V1066
0x589: V385 = 0x20
0x58b: V386 = ADD 0x20 V384
0x58f: V387 = 0x40
0x591: V388 = M[0x40]
0x594: V389 = SUB V386 V388
0x596: RETURN V388 V389
---
Entry stack: [V10, V1066]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x597
[0x597:0x5cf]
---
Predecessors: [0xde]
Successors: [0xe6]
---
0x597 JUMPDEST
0x598 PUSH1 0x40
0x59a DUP1
0x59b MLOAD
0x59c SWAP1
0x59d DUP2
0x59e ADD
0x59f PUSH1 0x40
0x5a1 MSTORE
0x5a2 DUP1
0x5a3 PUSH1 0xd
0x5a5 DUP2
0x5a6 MSTORE
0x5a7 PUSH1 0x20
0x5a9 ADD
0x5aa PUSH32 0x313078416d696e20546f6b656e00000000000000000000000000000000000000
0x5cb DUP2
0x5cc MSTORE
0x5cd POP
0x5ce DUP2
0x5cf JUMP
---
0x597: JUMPDEST 
0x598: V390 = 0x40
0x59b: V391 = M[0x40]
0x59e: V392 = ADD V391 0x40
0x59f: V393 = 0x40
0x5a1: M[0x40] = V392
0x5a3: V394 = 0xd
0x5a6: M[V391] = 0xd
0x5a7: V395 = 0x20
0x5a9: V396 = ADD 0x20 V391
0x5aa: V397 = 0x313078416d696e20546f6b656e00000000000000000000000000000000000000
0x5cc: M[V396] = 0x313078416d696e20546f6b656e00000000000000000000000000000000000000
0x5cf: JUMP 0xe6
---
Entry stack: [V10, 0xe6]
Stack pops: 1
Stack additions: [S0, V391]
Exit stack: [V10, 0xe6, V391]

================================

Block 0x5d0
[0x5d0:0x6c1]
---
Predecessors: [0x16c]
Successors: [0x1a1]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x0
0x5d3 DUP2
0x5d4 PUSH1 0x4
0x5d6 PUSH1 0x0
0x5d8 CALLER
0x5d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ee AND
0x5ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x604 AND
0x605 DUP2
0x606 MSTORE
0x607 PUSH1 0x20
0x609 ADD
0x60a SWAP1
0x60b DUP2
0x60c MSTORE
0x60d PUSH1 0x20
0x60f ADD
0x610 PUSH1 0x0
0x612 SHA3
0x613 PUSH1 0x0
0x615 DUP6
0x616 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62b AND
0x62c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x641 AND
0x642 DUP2
0x643 MSTORE
0x644 PUSH1 0x20
0x646 ADD
0x647 SWAP1
0x648 DUP2
0x649 MSTORE
0x64a PUSH1 0x20
0x64c ADD
0x64d PUSH1 0x0
0x64f SHA3
0x650 DUP2
0x651 SWAP1
0x652 SSTORE
0x653 POP
0x654 DUP3
0x655 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66a AND
0x66b CALLER
0x66c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x681 AND
0x682 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6a3 DUP5
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 DUP1
0x6a8 DUP3
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x20
0x6ad ADD
0x6ae SWAP2
0x6af POP
0x6b0 POP
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 DUP1
0x6b5 SWAP2
0x6b6 SUB
0x6b7 SWAP1
0x6b8 LOG3
0x6b9 PUSH1 0x1
0x6bb SWAP1
0x6bc POP
0x6bd SWAP3
0x6be SWAP2
0x6bf POP
0x6c0 POP
0x6c1 JUMP
---
0x5d0: JUMPDEST 
0x5d1: V398 = 0x0
0x5d4: V399 = 0x4
0x5d6: V400 = 0x0
0x5d8: V401 = CALLER
0x5d9: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x5ef: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x604: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x606: M[0x0] = V405
0x607: V406 = 0x20
0x609: V407 = ADD 0x20 0x0
0x60c: M[0x20] = 0x4
0x60d: V408 = 0x20
0x60f: V409 = ADD 0x20 0x20
0x610: V410 = 0x0
0x612: V411 = SHA3 0x0 0x40
0x613: V412 = 0x0
0x616: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x62b: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x62c: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x641: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x643: M[0x0] = V416
0x644: V417 = 0x20
0x646: V418 = ADD 0x20 0x0
0x649: M[0x20] = V411
0x64a: V419 = 0x20
0x64c: V420 = ADD 0x20 0x20
0x64d: V421 = 0x0
0x64f: V422 = SHA3 0x0 0x40
0x652: S[V422] = V112
0x655: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x66a: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x66b: V425 = CALLER
0x66c: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x681: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x682: V428 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6a4: V429 = 0x40
0x6a6: V430 = M[0x40]
0x6aa: M[V430] = V112
0x6ab: V431 = 0x20
0x6ad: V432 = ADD 0x20 V430
0x6b1: V433 = 0x40
0x6b3: V434 = M[0x40]
0x6b6: V435 = SUB V432 V434
0x6b8: LOG V434 V435 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V427 V424
0x6b9: V436 = 0x1
0x6c1: JUMP 0x1a1
---
Entry stack: [V10, 0x1a1, V109, V112]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x6c2
[0x6c2:0x6c7]
---
Predecessors: [0x1c6]
Successors: [0x1ce]
---
0x6c2 JUMPDEST
0x6c3 PUSH1 0x2
0x6c5 SLOAD
0x6c6 DUP2
0x6c7 JUMP
---
0x6c2: JUMPDEST 
0x6c3: V437 = 0x2
0x6c5: V438 = S[0x2]
0x6c7: JUMP 0x1ce
---
Entry stack: [V10, 0x1ce]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V10, 0x1ce, V438]

================================

Block 0x6c8
[0x6c8:0x712]
---
Predecessors: [0x1ef]
Successors: [0x12cc]
---
0x6c8 JUMPDEST
0x6c9 PUSH1 0x0
0x6cb PUSH2 0x713
0x6ce PUSH1 0x3
0x6d0 PUSH1 0x0
0x6d2 DUP7
0x6d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e8 AND
0x6e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fe AND
0x6ff DUP2
0x700 MSTORE
0x701 PUSH1 0x20
0x703 ADD
0x704 SWAP1
0x705 DUP2
0x706 MSTORE
0x707 PUSH1 0x20
0x709 ADD
0x70a PUSH1 0x0
0x70c SHA3
0x70d SLOAD
0x70e DUP4
0x70f PUSH2 0x12cc
0x712 JUMP
---
0x6c8: JUMPDEST 
0x6c9: V439 = 0x0
0x6cb: V440 = 0x713
0x6ce: V441 = 0x3
0x6d0: V442 = 0x0
0x6d3: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e8: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x6e9: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fe: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x700: M[0x0] = V446
0x701: V447 = 0x20
0x703: V448 = ADD 0x20 0x0
0x706: M[0x20] = 0x3
0x707: V449 = 0x20
0x709: V450 = ADD 0x20 0x20
0x70a: V451 = 0x0
0x70c: V452 = SHA3 0x0 0x40
0x70d: V453 = S[V452]
0x70f: V454 = 0x12cc
0x712: JUMP 0x12cc
---
Entry stack: [V10, 0x243, V148, V153, V156]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x713, V453, S0]
Exit stack: [V10, 0x243, V148, V153, V156, 0x0, 0x713, V453, V156]

================================

Block 0x713
[0x713:0x7db]
---
Predecessors: [0x12da]
Successors: [0x12cc]
---
0x713 JUMPDEST
0x714 PUSH1 0x3
0x716 PUSH1 0x0
0x718 DUP7
0x719 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72e AND
0x72f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x744 AND
0x745 DUP2
0x746 MSTORE
0x747 PUSH1 0x20
0x749 ADD
0x74a SWAP1
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x20
0x74f ADD
0x750 PUSH1 0x0
0x752 SHA3
0x753 DUP2
0x754 SWAP1
0x755 SSTORE
0x756 POP
0x757 PUSH2 0x7dc
0x75a PUSH1 0x4
0x75c PUSH1 0x0
0x75e DUP7
0x75f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x774 AND
0x775 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78a AND
0x78b DUP2
0x78c MSTORE
0x78d PUSH1 0x20
0x78f ADD
0x790 SWAP1
0x791 DUP2
0x792 MSTORE
0x793 PUSH1 0x20
0x795 ADD
0x796 PUSH1 0x0
0x798 SHA3
0x799 PUSH1 0x0
0x79b CALLER
0x79c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b1 AND
0x7b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c7 AND
0x7c8 DUP2
0x7c9 MSTORE
0x7ca PUSH1 0x20
0x7cc ADD
0x7cd SWAP1
0x7ce DUP2
0x7cf MSTORE
0x7d0 PUSH1 0x20
0x7d2 ADD
0x7d3 PUSH1 0x0
0x7d5 SHA3
0x7d6 SLOAD
0x7d7 DUP4
0x7d8 PUSH2 0x12cc
0x7db JUMP
---
0x713: JUMPDEST 
0x714: V455 = 0x3
0x716: V456 = 0x0
0x719: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x72e: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x72f: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x744: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x746: M[0x0] = V460
0x747: V461 = 0x20
0x749: V462 = ADD 0x20 0x0
0x74c: M[0x20] = 0x3
0x74d: V463 = 0x20
0x74f: V464 = ADD 0x20 0x20
0x750: V465 = 0x0
0x752: V466 = SHA3 0x0 0x40
0x755: S[V466] = V1073
0x757: V467 = 0x7dc
0x75a: V468 = 0x4
0x75c: V469 = 0x0
0x75f: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x774: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x775: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x78c: M[0x0] = V473
0x78d: V474 = 0x20
0x78f: V475 = ADD 0x20 0x0
0x792: M[0x20] = 0x4
0x793: V476 = 0x20
0x795: V477 = ADD 0x20 0x20
0x796: V478 = 0x0
0x798: V479 = SHA3 0x0 0x40
0x799: V480 = 0x0
0x79b: V481 = CALLER
0x79c: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b1: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x7b2: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c7: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x7c9: M[0x0] = V485
0x7ca: V486 = 0x20
0x7cc: V487 = ADD 0x20 0x0
0x7cf: M[0x20] = V479
0x7d0: V488 = 0x20
0x7d2: V489 = ADD 0x20 0x20
0x7d3: V490 = 0x0
0x7d5: V491 = SHA3 0x0 0x40
0x7d6: V492 = S[V491]
0x7d8: V493 = 0x12cc
0x7db: JUMP 0x12cc
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1073]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x7dc, V492, S2]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0x7dc, V492, S2]

================================

Block 0x7dc
[0x7dc:0x8a7]
---
Predecessors: [0x12da]
Successors: [0x12e5]
---
0x7dc JUMPDEST
0x7dd PUSH1 0x4
0x7df PUSH1 0x0
0x7e1 DUP7
0x7e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f7 AND
0x7f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80d AND
0x80e DUP2
0x80f MSTORE
0x810 PUSH1 0x20
0x812 ADD
0x813 SWAP1
0x814 DUP2
0x815 MSTORE
0x816 PUSH1 0x20
0x818 ADD
0x819 PUSH1 0x0
0x81b SHA3
0x81c PUSH1 0x0
0x81e CALLER
0x81f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x834 AND
0x835 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84a AND
0x84b DUP2
0x84c MSTORE
0x84d PUSH1 0x20
0x84f ADD
0x850 SWAP1
0x851 DUP2
0x852 MSTORE
0x853 PUSH1 0x20
0x855 ADD
0x856 PUSH1 0x0
0x858 SHA3
0x859 DUP2
0x85a SWAP1
0x85b SSTORE
0x85c POP
0x85d PUSH2 0x8ad
0x860 PUSH1 0x3
0x862 PUSH1 0x0
0x864 DUP6
0x865 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87a AND
0x87b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x890 AND
0x891 DUP2
0x892 MSTORE
0x893 PUSH1 0x20
0x895 ADD
0x896 SWAP1
0x897 DUP2
0x898 MSTORE
0x899 PUSH1 0x20
0x89b ADD
0x89c PUSH1 0x0
0x89e SHA3
0x89f SLOAD
0x8a0 PUSH2 0x8a8
0x8a3 DUP5
0x8a4 PUSH2 0x12e5
0x8a7 JUMP
---
0x7dc: JUMPDEST 
0x7dd: V494 = 0x4
0x7df: V495 = 0x0
0x7e2: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f7: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x7f8: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x80d: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x80f: M[0x0] = V499
0x810: V500 = 0x20
0x812: V501 = ADD 0x20 0x0
0x815: M[0x20] = 0x4
0x816: V502 = 0x20
0x818: V503 = ADD 0x20 0x20
0x819: V504 = 0x0
0x81b: V505 = SHA3 0x0 0x40
0x81c: V506 = 0x0
0x81e: V507 = CALLER
0x81f: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x834: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x835: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x84a: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x84c: M[0x0] = V511
0x84d: V512 = 0x20
0x84f: V513 = ADD 0x20 0x0
0x852: M[0x20] = V505
0x853: V514 = 0x20
0x855: V515 = ADD 0x20 0x20
0x856: V516 = 0x0
0x858: V517 = SHA3 0x0 0x40
0x85b: S[V517] = V1073
0x85d: V518 = 0x8ad
0x860: V519 = 0x3
0x862: V520 = 0x0
0x865: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x87b: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x890: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x892: M[0x0] = V524
0x893: V525 = 0x20
0x895: V526 = ADD 0x20 0x0
0x898: M[0x20] = 0x3
0x899: V527 = 0x20
0x89b: V528 = ADD 0x20 0x20
0x89c: V529 = 0x0
0x89e: V530 = SHA3 0x0 0x40
0x89f: V531 = S[V530]
0x8a0: V532 = 0x8a8
0x8a4: V533 = 0x12e5
0x8a7: JUMP 0x12e5
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1073]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x8ad, V531, 0x8a8, S2]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0x8ad, V531, 0x8a8, S2]

================================

Block 0x8a8
[0x8a8:0x8ac]
---
Predecessors: [0x1339]
Successors: [0x133f]
---
0x8a8 JUMPDEST
0x8a9 PUSH2 0x133f
0x8ac JUMP
---
0x8a8: JUMPDEST 
0x8a9: V534 = 0x133f
0x8ac: JUMP 0x133f
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0xff9}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0xff9}, S1, S0]

================================

Block 0x8ad
[0x8ad:0x95f]
---
Predecessors: [0x1353]
Successors: [0x243]
---
0x8ad JUMPDEST
0x8ae PUSH1 0x3
0x8b0 PUSH1 0x0
0x8b2 DUP6
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 AND
0x8c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8de AND
0x8df DUP2
0x8e0 MSTORE
0x8e1 PUSH1 0x20
0x8e3 ADD
0x8e4 SWAP1
0x8e5 DUP2
0x8e6 MSTORE
0x8e7 PUSH1 0x20
0x8e9 ADD
0x8ea PUSH1 0x0
0x8ec SHA3
0x8ed DUP2
0x8ee SWAP1
0x8ef SSTORE
0x8f0 POP
0x8f1 DUP3
0x8f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x907 AND
0x908 DUP5
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e AND
0x91f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x940 DUP5
0x941 PUSH1 0x40
0x943 MLOAD
0x944 DUP1
0x945 DUP3
0x946 DUP2
0x947 MSTORE
0x948 PUSH1 0x20
0x94a ADD
0x94b SWAP2
0x94c POP
0x94d POP
0x94e PUSH1 0x40
0x950 MLOAD
0x951 DUP1
0x952 SWAP2
0x953 SUB
0x954 SWAP1
0x955 LOG3
0x956 PUSH1 0x1
0x958 SWAP1
0x959 POP
0x95a SWAP4
0x95b SWAP3
0x95c POP
0x95d POP
0x95e POP
0x95f JUMP
---
0x8ad: JUMPDEST 
0x8ae: V535 = 0x3
0x8b0: V536 = 0x0
0x8b3: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8c9: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x8de: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x8e0: M[0x0] = V540
0x8e1: V541 = 0x20
0x8e3: V542 = ADD 0x20 0x0
0x8e6: M[0x20] = 0x3
0x8e7: V543 = 0x20
0x8e9: V544 = ADD 0x20 0x20
0x8ea: V545 = 0x0
0x8ec: V546 = SHA3 0x0 0x40
0x8ef: S[V546] = S0
0x8f2: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x907: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x909: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x91f: V551 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x941: V552 = 0x40
0x943: V553 = M[0x40]
0x947: M[V553] = S2
0x948: V554 = 0x20
0x94a: V555 = ADD 0x20 V553
0x94e: V556 = 0x40
0x950: V557 = M[0x40]
0x953: V558 = SUB V555 V557
0x955: LOG V557 V558 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V550 V548
0x956: V559 = 0x1
0x95f: JUMP S5
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V10, S7, S6, 0x1]

================================

Block 0x960
[0x960:0x9b7]
---
Predecessors: [0x268]
Successors: [0x9b8, 0x9bc]
---
0x960 JUMPDEST
0x961 PUSH1 0x1
0x963 PUSH1 0x0
0x965 SWAP1
0x966 SLOAD
0x967 SWAP1
0x968 PUSH2 0x100
0x96b EXP
0x96c SWAP1
0x96d DIV
0x96e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x983 AND
0x984 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x999 AND
0x99a CALLER
0x99b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b0 AND
0x9b1 EQ
0x9b2 ISZERO
0x9b3 ISZERO
0x9b4 PUSH2 0x9bc
0x9b7 JUMPI
---
0x960: JUMPDEST 
0x961: V560 = 0x1
0x963: V561 = 0x0
0x966: V562 = S[0x1]
0x968: V563 = 0x100
0x96b: V564 = EXP 0x100 0x0
0x96d: V565 = DIV V562 0x1
0x96e: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x983: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x984: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x999: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x99a: V570 = CALLER
0x99b: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b0: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x9b1: V573 = EQ V572 V569
0x9b2: V574 = ISZERO V573
0x9b3: V575 = ISZERO V574
0x9b4: V576 = 0x9bc
0x9b7: JUMPI 0x9bc V575
---
Entry stack: [V10, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x270]

================================

Block 0x9b8
[0x9b8:0x9bb]
---
Predecessors: [0x960]
Successors: []
---
0x9b8 PUSH1 0x0
0x9ba DUP1
0x9bb REVERT
---
0x9b8: V577 = 0x0
0x9bb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x270]

================================

Block 0x9bc
[0x9bc:0x9f6]
---
Predecessors: [0x960]
Successors: []
---
0x9bc JUMPDEST
0x9bd PUSH1 0x1
0x9bf PUSH1 0x0
0x9c1 SWAP1
0x9c2 SLOAD
0x9c3 SWAP1
0x9c4 PUSH2 0x100
0x9c7 EXP
0x9c8 SWAP1
0x9c9 DIV
0x9ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9df AND
0x9e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f5 AND
0x9f6 SELFDESTRUCT
---
0x9bc: JUMPDEST 
0x9bd: V578 = 0x1
0x9bf: V579 = 0x0
0x9c2: V580 = S[0x1]
0x9c4: V581 = 0x100
0x9c7: V582 = EXP 0x100 0x0
0x9c9: V583 = DIV V580 0x1
0x9ca: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x9df: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x9e0: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f5: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x9f6: SELFDESTRUCT V587
---
Entry stack: [V10, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x270]

================================

Block 0x9f7
[0x9f7:0x9fb]
---
Predecessors: [0x27d]
Successors: [0x285]
---
0x9f7 JUMPDEST
0x9f8 PUSH1 0x12
0x9fa DUP2
0x9fb JUMP
---
0x9f7: JUMPDEST 
0x9f8: V588 = 0x12
0x9fb: JUMP 0x285
---
Entry stack: [V10, 0x285]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x285, 0x12]

================================

Block 0x9fc
[0x9fc:0xa53]
---
Predecessors: [0x2ac]
Successors: [0xa54, 0xa58]
---
0x9fc JUMPDEST
0x9fd PUSH1 0x1
0x9ff PUSH1 0x0
0xa01 SWAP1
0xa02 SLOAD
0xa03 SWAP1
0xa04 PUSH2 0x100
0xa07 EXP
0xa08 SWAP1
0xa09 DIV
0xa0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1f AND
0xa20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa35 AND
0xa36 CALLER
0xa37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4c AND
0xa4d EQ
0xa4e ISZERO
0xa4f ISZERO
0xa50 PUSH2 0xa58
0xa53 JUMPI
---
0x9fc: JUMPDEST 
0x9fd: V589 = 0x1
0x9ff: V590 = 0x0
0xa02: V591 = S[0x1]
0xa04: V592 = 0x100
0xa07: V593 = EXP 0x100 0x0
0xa09: V594 = DIV V591 0x1
0xa0a: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0xa20: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0xa35: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0xa36: V599 = CALLER
0xa37: V600 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4c: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0xa4d: V602 = EQ V601 V598
0xa4e: V603 = ISZERO V602
0xa4f: V604 = ISZERO V603
0xa50: V605 = 0xa58
0xa53: JUMPI 0xa58 V604
---
Entry stack: [V10, 0x2e1, V202, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2e1, V202, V205]

================================

Block 0xa54
[0xa54:0xa57]
---
Predecessors: [0x9fc]
Successors: []
---
0xa54 PUSH1 0x0
0xa56 DUP1
0xa57 REVERT
---
0xa54: V606 = 0x0
0xa57: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2e1, V202, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2e1, V202, V205]

================================

Block 0xa58
[0xa58:0xa63]
---
Predecessors: [0x9fc]
Successors: [0x133f]
---
0xa58 JUMPDEST
0xa59 PUSH2 0xa64
0xa5c PUSH1 0x2
0xa5e SLOAD
0xa5f DUP3
0xa60 PUSH2 0x133f
0xa63 JUMP
---
0xa58: JUMPDEST 
0xa59: V607 = 0xa64
0xa5c: V608 = 0x2
0xa5e: V609 = S[0x2]
0xa60: V610 = 0x133f
0xa63: JUMP 0x133f
---
Entry stack: [V10, 0x2e1, V202, V205]
Stack pops: 1
Stack additions: [S0, 0xa64, V609, S0]
Exit stack: [V10, 0x2e1, V202, V205, 0xa64, V609, V205]

================================

Block 0xa64
[0xa64:0xab2]
---
Predecessors: [0x1353]
Successors: [0x133f]
---
0xa64 JUMPDEST
0xa65 PUSH1 0x2
0xa67 DUP2
0xa68 SWAP1
0xa69 SSTORE
0xa6a POP
0xa6b PUSH2 0xab3
0xa6e PUSH1 0x3
0xa70 PUSH1 0x0
0xa72 DUP5
0xa73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa88 AND
0xa89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9e AND
0xa9f DUP2
0xaa0 MSTORE
0xaa1 PUSH1 0x20
0xaa3 ADD
0xaa4 SWAP1
0xaa5 DUP2
0xaa6 MSTORE
0xaa7 PUSH1 0x20
0xaa9 ADD
0xaaa PUSH1 0x0
0xaac SHA3
0xaad SLOAD
0xaae DUP3
0xaaf PUSH2 0x133f
0xab2 JUMP
---
0xa64: JUMPDEST 
0xa65: V611 = 0x2
0xa69: S[0x2] = V1103
0xa6b: V612 = 0xab3
0xa6e: V613 = 0x3
0xa70: V614 = 0x0
0xa73: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xa88: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa89: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9e: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0xaa0: M[0x0] = V618
0xaa1: V619 = 0x20
0xaa3: V620 = ADD 0x20 0x0
0xaa6: M[0x20] = 0x3
0xaa7: V621 = 0x20
0xaa9: V622 = ADD 0x20 0x20
0xaaa: V623 = 0x0
0xaac: V624 = SHA3 0x0 0x40
0xaad: V625 = S[V624]
0xaaf: V626 = 0x133f
0xab2: JUMP 0x133f
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, V1103]
Stack pops: 3
Stack additions: [S2, S1, 0xab3, V625, S1]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, 0xab3, V625, S1]

================================

Block 0xab3
[0xab3:0xaf9]
---
Predecessors: [0x1353]
Successors: [0x2e1]
---
0xab3 JUMPDEST
0xab4 PUSH1 0x3
0xab6 PUSH1 0x0
0xab8 DUP5
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae4 AND
0xae5 DUP2
0xae6 MSTORE
0xae7 PUSH1 0x20
0xae9 ADD
0xaea SWAP1
0xaeb DUP2
0xaec MSTORE
0xaed PUSH1 0x20
0xaef ADD
0xaf0 PUSH1 0x0
0xaf2 SHA3
0xaf3 DUP2
0xaf4 SWAP1
0xaf5 SSTORE
0xaf6 POP
0xaf7 POP
0xaf8 POP
0xaf9 JUMP
---
0xab3: JUMPDEST 
0xab4: V627 = 0x3
0xab6: V628 = 0x0
0xab9: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xacf: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xae4: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0xae6: M[0x0] = V632
0xae7: V633 = 0x20
0xae9: V634 = ADD 0x20 0x0
0xaec: M[0x20] = 0x3
0xaed: V635 = 0x20
0xaef: V636 = ADD 0x20 0x20
0xaf0: V637 = 0x0
0xaf2: V638 = SHA3 0x0 0x40
0xaf5: S[V638] = V1103
0xaf9: JUMP S3
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, V1103]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4]

================================

Block 0xafa
[0xafa:0xb42]
---
Predecessors: [0x2ee]
Successors: [0x31a]
---
0xafa JUMPDEST
0xafb PUSH1 0x0
0xafd PUSH1 0x3
0xaff PUSH1 0x0
0xb01 DUP4
0xb02 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb17 AND
0xb18 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2d AND
0xb2e DUP2
0xb2f MSTORE
0xb30 PUSH1 0x20
0xb32 ADD
0xb33 SWAP1
0xb34 DUP2
0xb35 MSTORE
0xb36 PUSH1 0x20
0xb38 ADD
0xb39 PUSH1 0x0
0xb3b SHA3
0xb3c SLOAD
0xb3d SWAP1
0xb3e POP
0xb3f SWAP2
0xb40 SWAP1
0xb41 POP
0xb42 JUMP
---
0xafa: JUMPDEST 
0xafb: V639 = 0x0
0xafd: V640 = 0x3
0xaff: V641 = 0x0
0xb02: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0xb17: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0xb18: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2d: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0xb2f: M[0x0] = V645
0xb30: V646 = 0x20
0xb32: V647 = ADD 0x20 0x0
0xb35: M[0x20] = 0x3
0xb36: V648 = 0x20
0xb38: V649 = ADD 0x20 0x20
0xb39: V650 = 0x0
0xb3b: V651 = SHA3 0x0 0x40
0xb3c: V652 = S[V651]
0xb42: JUMP 0x31a
---
Entry stack: [V10, 0x31a, V217]
Stack pops: 2
Stack additions: [V652]
Exit stack: [V10, V652]

================================

Block 0xb43
[0xb43:0xb68]
---
Predecessors: [0x33b]
Successors: [0x343]
---
0xb43 JUMPDEST
0xb44 PUSH1 0x1
0xb46 PUSH1 0x0
0xb48 SWAP1
0xb49 SLOAD
0xb4a SWAP1
0xb4b PUSH2 0x100
0xb4e EXP
0xb4f SWAP1
0xb50 DIV
0xb51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb66 AND
0xb67 DUP2
0xb68 JUMP
---
0xb43: JUMPDEST 
0xb44: V653 = 0x1
0xb46: V654 = 0x0
0xb49: V655 = S[0x1]
0xb4b: V656 = 0x100
0xb4e: V657 = EXP 0x100 0x0
0xb50: V658 = DIV V655 0x1
0xb51: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0xb66: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0xb68: JUMP 0x343
---
Entry stack: [V10, 0x343]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V10, 0x343, V660]

================================

Block 0xb69
[0xb69:0xba1]
---
Predecessors: [0x390]
Successors: [0x398]
---
0xb69 JUMPDEST
0xb6a PUSH1 0x40
0xb6c DUP1
0xb6d MLOAD
0xb6e SWAP1
0xb6f DUP2
0xb70 ADD
0xb71 PUSH1 0x40
0xb73 MSTORE
0xb74 DUP1
0xb75 PUSH1 0x7
0xb77 DUP2
0xb78 MSTORE
0xb79 PUSH1 0x20
0xb7b ADD
0xb7c PUSH32 0x313078414d494e00000000000000000000000000000000000000000000000000
0xb9d DUP2
0xb9e MSTORE
0xb9f POP
0xba0 DUP2
0xba1 JUMP
---
0xb69: JUMPDEST 
0xb6a: V661 = 0x40
0xb6d: V662 = M[0x40]
0xb70: V663 = ADD V662 0x40
0xb71: V664 = 0x40
0xb73: M[0x40] = V663
0xb75: V665 = 0x7
0xb78: M[V662] = 0x7
0xb79: V666 = 0x20
0xb7b: V667 = ADD 0x20 V662
0xb7c: V668 = 0x313078414d494e00000000000000000000000000000000000000000000000000
0xb9e: M[V667] = 0x313078414d494e00000000000000000000000000000000000000000000000000
0xba1: JUMP 0x398
---
Entry stack: [V10, 0x398]
Stack pops: 1
Stack additions: [S0, V662]
Exit stack: [V10, 0x398, V662]

================================

Block 0xba2
[0xba2:0xbf9]
---
Predecessors: [0x41e]
Successors: [0xbfa, 0xbfe]
---
0xba2 JUMPDEST
0xba3 PUSH1 0x1
0xba5 PUSH1 0x0
0xba7 SWAP1
0xba8 SLOAD
0xba9 SWAP1
0xbaa PUSH2 0x100
0xbad EXP
0xbae SWAP1
0xbaf DIV
0xbb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc5 AND
0xbc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdb AND
0xbdc CALLER
0xbdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf2 AND
0xbf3 EQ
0xbf4 ISZERO
0xbf5 ISZERO
0xbf6 PUSH2 0xbfe
0xbf9 JUMPI
---
0xba2: JUMPDEST 
0xba3: V669 = 0x1
0xba5: V670 = 0x0
0xba8: V671 = S[0x1]
0xbaa: V672 = 0x100
0xbad: V673 = EXP 0x100 0x0
0xbaf: V674 = DIV V671 0x1
0xbb0: V675 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc5: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0xbc6: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdb: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0xbdc: V679 = CALLER
0xbdd: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf2: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xbf3: V682 = EQ V681 V678
0xbf4: V683 = ISZERO V682
0xbf5: V684 = ISZERO V683
0xbf6: V685 = 0xbfe
0xbf9: JUMPI 0xbfe V684
---
Entry stack: [V10, 0x44a, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44a, V300]

================================

Block 0xbfa
[0xbfa:0xbfd]
---
Predecessors: [0xba2]
Successors: []
---
0xbfa PUSH1 0x0
0xbfc DUP1
0xbfd REVERT
---
0xbfa: V686 = 0x0
0xbfd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x44a, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44a, V300]

================================

Block 0xbfe
[0xbfe:0xc41]
---
Predecessors: [0xba2]
Successors: [0x44a]
---
0xbfe JUMPDEST
0xbff DUP1
0xc00 PUSH1 0x1
0xc02 PUSH1 0x0
0xc04 PUSH2 0x100
0xc07 EXP
0xc08 DUP2
0xc09 SLOAD
0xc0a DUP2
0xc0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc20 MUL
0xc21 NOT
0xc22 AND
0xc23 SWAP1
0xc24 DUP4
0xc25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3a AND
0xc3b MUL
0xc3c OR
0xc3d SWAP1
0xc3e SSTORE
0xc3f POP
0xc40 POP
0xc41 JUMP
---
0xbfe: JUMPDEST 
0xc00: V687 = 0x1
0xc02: V688 = 0x0
0xc04: V689 = 0x100
0xc07: V690 = EXP 0x100 0x0
0xc09: V691 = S[0x1]
0xc0b: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xc20: V693 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc21: V694 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc22: V695 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V691
0xc25: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3a: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0xc3b: V698 = MUL V697 0x1
0xc3c: V699 = OR V698 V695
0xc3e: S[0x1] = V699
0xc41: JUMP 0x44a
---
Entry stack: [V10, 0x44a, V300]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xc42
[0xc42:0xc4c]
---
Predecessors: [0x457]
Successors: [0x13ab]
---
0xc42 JUMPDEST
0xc43 PUSH1 0x0
0xc45 DUP1
0xc46 PUSH2 0xc4d
0xc49 PUSH2 0x13ab
0xc4c JUMP
---
0xc42: JUMPDEST 
0xc43: V700 = 0x0
0xc46: V701 = 0xc4d
0xc49: V702 = 0x13ab
0xc4c: JUMP 0x13ab
---
Entry stack: [V10, 0x48c, V312, V315]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xc4d]
Exit stack: [V10, 0x48c, V312, V315, 0x0, 0x0, 0xc4d]

================================

Block 0xc4d
[0xc4d:0xc9b]
---
Predecessors: [0x13ab]
Successors: [0x12cc]
---
0xc4d JUMPDEST
0xc4e PUSH1 0x0
0xc50 DUP6
0xc51 EXTCODESIZE
0xc52 SWAP3
0xc53 POP
0xc54 PUSH2 0xc9c
0xc57 PUSH1 0x3
0xc59 PUSH1 0x0
0xc5b CALLER
0xc5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc71 AND
0xc72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc87 AND
0xc88 DUP2
0xc89 MSTORE
0xc8a PUSH1 0x20
0xc8c ADD
0xc8d SWAP1
0xc8e DUP2
0xc8f MSTORE
0xc90 PUSH1 0x20
0xc92 ADD
0xc93 PUSH1 0x0
0xc95 SHA3
0xc96 SLOAD
0xc97 DUP7
0xc98 PUSH2 0x12cc
0xc9b JUMP
---
0xc4d: JUMPDEST 
0xc4e: V703 = 0x0
0xc51: V704 = EXTCODESIZE V312
0xc54: V705 = 0xc9c
0xc57: V706 = 0x3
0xc59: V707 = 0x0
0xc5b: V708 = CALLER
0xc5c: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xc71: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xc72: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0xc87: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0xc89: M[0x0] = V712
0xc8a: V713 = 0x20
0xc8c: V714 = ADD 0x20 0x0
0xc8f: M[0x20] = 0x3
0xc90: V715 = 0x20
0xc92: V716 = ADD 0x20 0x20
0xc93: V717 = 0x0
0xc95: V718 = SHA3 0x0 0x40
0xc96: V719 = S[V718]
0xc98: V720 = 0x12cc
0xc9b: JUMP 0x12cc
---
Entry stack: [V10, 0x48c, V312, V315, 0x0, 0x0, V1129]
Stack pops: 5
Stack additions: [S4, S3, S2, V704, S0, 0x0, 0xc9c, V719, S3]
Exit stack: [V10, 0x48c, V312, V315, 0x0, V704, V1129, 0x0, 0xc9c, V719, V315]

================================

Block 0xc9c
[0xc9c:0xd2a]
---
Predecessors: [0x12da]
Successors: [0x12e5]
---
0xc9c JUMPDEST
0xc9d PUSH1 0x3
0xc9f PUSH1 0x0
0xca1 CALLER
0xca2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb7 AND
0xcb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccd AND
0xcce DUP2
0xccf MSTORE
0xcd0 PUSH1 0x20
0xcd2 ADD
0xcd3 SWAP1
0xcd4 DUP2
0xcd5 MSTORE
0xcd6 PUSH1 0x20
0xcd8 ADD
0xcd9 PUSH1 0x0
0xcdb SHA3
0xcdc DUP2
0xcdd SWAP1
0xcde SSTORE
0xcdf POP
0xce0 PUSH2 0xd30
0xce3 PUSH1 0x3
0xce5 PUSH1 0x0
0xce7 DUP9
0xce8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfd AND
0xcfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd13 AND
0xd14 DUP2
0xd15 MSTORE
0xd16 PUSH1 0x20
0xd18 ADD
0xd19 SWAP1
0xd1a DUP2
0xd1b MSTORE
0xd1c PUSH1 0x20
0xd1e ADD
0xd1f PUSH1 0x0
0xd21 SHA3
0xd22 SLOAD
0xd23 PUSH2 0xd2b
0xd26 DUP8
0xd27 PUSH2 0x12e5
0xd2a JUMP
---
0xc9c: JUMPDEST 
0xc9d: V721 = 0x3
0xc9f: V722 = 0x0
0xca1: V723 = CALLER
0xca2: V724 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb7: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V723
0xcb8: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xccd: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0xccf: M[0x0] = V727
0xcd0: V728 = 0x20
0xcd2: V729 = ADD 0x20 0x0
0xcd5: M[0x20] = 0x3
0xcd6: V730 = 0x20
0xcd8: V731 = ADD 0x20 0x20
0xcd9: V732 = 0x0
0xcdb: V733 = SHA3 0x0 0x40
0xcde: S[V733] = V1073
0xce0: V734 = 0xd30
0xce3: V735 = 0x3
0xce5: V736 = 0x0
0xce8: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xcfe: V739 = 0xffffffffffffffffffffffffffffffffffffffff
0xd13: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xd15: M[0x0] = V740
0xd16: V741 = 0x20
0xd18: V742 = ADD 0x20 0x0
0xd1b: M[0x20] = 0x3
0xd1c: V743 = 0x20
0xd1e: V744 = ADD 0x20 0x20
0xd1f: V745 = 0x0
0xd21: V746 = SHA3 0x0 0x40
0xd22: V747 = S[V746]
0xd23: V748 = 0xd2b
0xd27: V749 = 0x12e5
0xd2a: JUMP 0x12e5
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1073]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0xd30, V747, 0xd2b, S5]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0xd30, V747, 0xd2b, S5]

================================

Block 0xd2b
[0xd2b:0xd2f]
---
Predecessors: [0x1339]
Successors: [0x133f]
---
0xd2b JUMPDEST
0xd2c PUSH2 0x133f
0xd2f JUMP
---
0xd2b: JUMPDEST 
0xd2c: V750 = 0x133f
0xd2f: JUMP 0x133f
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0xff9}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0xff9}, S1, S0]

================================

Block 0xd30
[0xd30:0xd7c]
---
Predecessors: [0x1353]
Successors: [0xd7d, 0xea3]
---
0xd30 JUMPDEST
0xd31 PUSH1 0x3
0xd33 PUSH1 0x0
0xd35 DUP9
0xd36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4b AND
0xd4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd61 AND
0xd62 DUP2
0xd63 MSTORE
0xd64 PUSH1 0x20
0xd66 ADD
0xd67 SWAP1
0xd68 DUP2
0xd69 MSTORE
0xd6a PUSH1 0x20
0xd6c ADD
0xd6d PUSH1 0x0
0xd6f SHA3
0xd70 DUP2
0xd71 SWAP1
0xd72 SSTORE
0xd73 POP
0xd74 PUSH1 0x0
0xd76 DUP4
0xd77 GT
0xd78 ISZERO
0xd79 PUSH2 0xea3
0xd7c JUMPI
---
0xd30: JUMPDEST 
0xd31: V751 = 0x3
0xd33: V752 = 0x0
0xd36: V753 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4b: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xd4c: V755 = 0xffffffffffffffffffffffffffffffffffffffff
0xd61: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0xd63: M[0x0] = V756
0xd64: V757 = 0x20
0xd66: V758 = ADD 0x20 0x0
0xd69: M[0x20] = 0x3
0xd6a: V759 = 0x20
0xd6c: V760 = ADD 0x20 0x20
0xd6d: V761 = 0x0
0xd6f: V762 = SHA3 0x0 0x40
0xd72: S[V762] = V1103
0xd74: V763 = 0x0
0xd77: V764 = GT S3 0x0
0xd78: V765 = ISZERO V764
0xd79: V766 = 0xea3
0xd7c: JUMPI 0xea3 V765
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, V1103]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xd7d
[0xd7d:0xe25]
---
Predecessors: [0xd30]
Successors: [0xe26]
---
0xd7d DUP6
0xd7e SWAP1
0xd7f POP
0xd80 DUP1
0xd81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd96 AND
0xd97 PUSH4 0xc0ee0b8a
0xd9c CALLER
0xd9d DUP8
0xd9e DUP6
0xd9f PUSH1 0x40
0xda1 MLOAD
0xda2 DUP5
0xda3 PUSH4 0xffffffff
0xda8 AND
0xda9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdc7 MUL
0xdc8 DUP2
0xdc9 MSTORE
0xdca PUSH1 0x4
0xdcc ADD
0xdcd DUP1
0xdce DUP5
0xdcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde4 AND
0xde5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfa AND
0xdfb DUP2
0xdfc MSTORE
0xdfd PUSH1 0x20
0xdff ADD
0xe00 DUP4
0xe01 DUP2
0xe02 MSTORE
0xe03 PUSH1 0x20
0xe05 ADD
0xe06 DUP1
0xe07 PUSH1 0x20
0xe09 ADD
0xe0a DUP3
0xe0b DUP2
0xe0c SUB
0xe0d DUP3
0xe0e MSTORE
0xe0f DUP4
0xe10 DUP2
0xe11 DUP2
0xe12 MLOAD
0xe13 DUP2
0xe14 MSTORE
0xe15 PUSH1 0x20
0xe17 ADD
0xe18 SWAP2
0xe19 POP
0xe1a DUP1
0xe1b MLOAD
0xe1c SWAP1
0xe1d PUSH1 0x20
0xe1f ADD
0xe20 SWAP1
0xe21 DUP1
0xe22 DUP4
0xe23 DUP4
0xe24 PUSH1 0x0
---
0xd81: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xd96: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xd97: V769 = 0xc0ee0b8a
0xd9c: V770 = CALLER
0xd9f: V771 = 0x40
0xda1: V772 = M[0x40]
0xda3: V773 = 0xffffffff
0xda8: V774 = AND 0xffffffff 0xc0ee0b8a
0xda9: V775 = 0x100000000000000000000000000000000000000000000000000000000
0xdc7: V776 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0xdc9: M[V772] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0xdca: V777 = 0x4
0xdcc: V778 = ADD 0x4 V772
0xdcf: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xde4: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xde5: V781 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfa: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xdfc: M[V778] = V782
0xdfd: V783 = 0x20
0xdff: V784 = ADD 0x20 V778
0xe02: M[V784] = S4
0xe03: V785 = 0x20
0xe05: V786 = ADD 0x20 V784
0xe07: V787 = 0x20
0xe09: V788 = ADD 0x20 V786
0xe0c: V789 = SUB V788 V778
0xe0e: M[V786] = V789
0xe12: V790 = M[S1]
0xe14: M[V788] = V790
0xe15: V791 = 0x20
0xe17: V792 = ADD 0x20 V788
0xe1b: V793 = M[S1]
0xe1d: V794 = 0x20
0xe1f: V795 = ADD 0x20 S1
0xe24: V796 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, V768, 0xc0ee0b8a, V770, S4, S1, V778, V786, V792, V795, V793, V793, V792, V795, 0x0]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, S5, V768, 0xc0ee0b8a, V770, S4, S1, V778, V786, V792, V795, V793, V793, V792, V795, 0x0]

================================

Block 0xe26
[0xe26:0xe2e]
---
Predecessors: [0xd7d, 0xe2f]
Successors: [0xe2f, 0xe41]
---
0xe26 JUMPDEST
0xe27 DUP4
0xe28 DUP2
0xe29 LT
0xe2a ISZERO
0xe2b PUSH2 0xe41
0xe2e JUMPI
---
0xe26: JUMPDEST 
0xe29: V797 = LT S0 V793
0xe2a: V798 = ISZERO V797
0xe2b: V799 = 0xe41
0xe2e: JUMPI 0xe41 V798
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]

================================

Block 0xe2f
[0xe2f:0xe40]
---
Predecessors: [0xe26]
Successors: [0xe26]
---
0xe2f DUP1
0xe30 DUP3
0xe31 ADD
0xe32 MLOAD
0xe33 DUP2
0xe34 DUP5
0xe35 ADD
0xe36 MSTORE
0xe37 PUSH1 0x20
0xe39 DUP2
0xe3a ADD
0xe3b SWAP1
0xe3c POP
0xe3d PUSH2 0xe26
0xe40 JUMP
---
0xe31: V800 = ADD V795 S0
0xe32: V801 = M[V800]
0xe35: V802 = ADD V792 S0
0xe36: M[V802] = V801
0xe37: V803 = 0x20
0xe3a: V804 = ADD S0 0x20
0xe3d: V805 = 0xe26
0xe40: JUMP 0xe26
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]
Stack pops: 3
Stack additions: [S2, S1, V804]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, V804]

================================

Block 0xe41
[0xe41:0xe54]
---
Predecessors: [0xe26]
Successors: [0xe55, 0xe6e]
---
0xe41 JUMPDEST
0xe42 POP
0xe43 POP
0xe44 POP
0xe45 POP
0xe46 SWAP1
0xe47 POP
0xe48 SWAP1
0xe49 DUP2
0xe4a ADD
0xe4b SWAP1
0xe4c PUSH1 0x1f
0xe4e AND
0xe4f DUP1
0xe50 ISZERO
0xe51 PUSH2 0xe6e
0xe54 JUMPI
---
0xe41: JUMPDEST 
0xe4a: V806 = ADD V793 V792
0xe4c: V807 = 0x1f
0xe4e: V808 = AND 0x1f V793
0xe50: V809 = ISZERO V808
0xe51: V810 = 0xe6e
0xe54: JUMPI 0xe6e V809
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]
Stack pops: 7
Stack additions: [V806, V808]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V806, V808]

================================

Block 0xe55
[0xe55:0xe6d]
---
Predecessors: [0xe41]
Successors: [0xe6e]
---
0xe55 DUP1
0xe56 DUP3
0xe57 SUB
0xe58 DUP1
0xe59 MLOAD
0xe5a PUSH1 0x1
0xe5c DUP4
0xe5d PUSH1 0x20
0xe5f SUB
0xe60 PUSH2 0x100
0xe63 EXP
0xe64 SUB
0xe65 NOT
0xe66 AND
0xe67 DUP2
0xe68 MSTORE
0xe69 PUSH1 0x20
0xe6b ADD
0xe6c SWAP2
0xe6d POP
---
0xe57: V811 = SUB V806 V808
0xe59: V812 = M[V811]
0xe5a: V813 = 0x1
0xe5d: V814 = 0x20
0xe5f: V815 = SUB 0x20 V808
0xe60: V816 = 0x100
0xe63: V817 = EXP 0x100 V815
0xe64: V818 = SUB V817 0x1
0xe65: V819 = NOT V818
0xe66: V820 = AND V819 V812
0xe68: M[V811] = V820
0xe69: V821 = 0x20
0xe6b: V822 = ADD 0x20 V811
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, V770, S5, S4, V778, V786, V806, V808]
Stack pops: 2
Stack additions: [V822, S0]
Exit stack: [V10, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, V770, S5, S4, V778, V786, V822, V808]

================================

Block 0xe6e
[0xe6e:0xe89]
---
Predecessors: [0xe41, 0xe55]
Successors: [0xe8a, 0xe8e]
---
0xe6e JUMPDEST
0xe6f POP
0xe70 SWAP5
0xe71 POP
0xe72 POP
0xe73 POP
0xe74 POP
0xe75 POP
0xe76 PUSH1 0x0
0xe78 PUSH1 0x40
0xe7a MLOAD
0xe7b DUP1
0xe7c DUP4
0xe7d SUB
0xe7e DUP2
0xe7f PUSH1 0x0
0xe81 DUP8
0xe82 DUP1
0xe83 EXTCODESIZE
0xe84 ISZERO
0xe85 ISZERO
0xe86 PUSH2 0xe8e
0xe89 JUMPI
---
0xe6e: JUMPDEST 
0xe76: V823 = 0x0
0xe78: V824 = 0x40
0xe7a: V825 = M[0x40]
0xe7d: V826 = SUB S1 V825
0xe7f: V827 = 0x0
0xe83: V828 = EXTCODESIZE V768
0xe84: V829 = ISZERO V828
0xe85: V830 = ISZERO V829
0xe86: V831 = 0xe8e
0xe89: JUMPI 0xe8e V830
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, V770, S5, S4, V778, V786, S1, V808]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V825, V826, V825, 0x0, S8]
Exit stack: [V10, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S1, 0x0, V825, V826, V825, 0x0, V768]

================================

Block 0xe8a
[0xe8a:0xe8d]
---
Predecessors: [0xe6e]
Successors: []
---
0xe8a PUSH1 0x0
0xe8c DUP1
0xe8d REVERT
---
0xe8a: V832 = 0x0
0xe8d: REVERT 0x0 0x0
---
Entry stack: [S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6, 0x0, V825, V826, V825, 0x0, V768]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6, 0x0, V825, V826, V825, 0x0, V768]

================================

Block 0xe8e
[0xe8e:0xe9a]
---
Predecessors: [0xe6e]
Successors: [0xe9b, 0xe9f]
---
0xe8e JUMPDEST
0xe8f PUSH2 0x2c6
0xe92 GAS
0xe93 SUB
0xe94 CALL
0xe95 ISZERO
0xe96 ISZERO
0xe97 PUSH2 0xe9f
0xe9a JUMPI
---
0xe8e: JUMPDEST 
0xe8f: V833 = 0x2c6
0xe92: V834 = GAS
0xe93: V835 = SUB V834 0x2c6
0xe94: V836 = CALL V835 V768 0x0 V825 V826 V825 0x0
0xe95: V837 = ISZERO V836
0xe96: V838 = ISZERO V837
0xe97: V839 = 0xe9f
0xe9a: JUMPI 0xe9f V838
---
Entry stack: [S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6, 0x0, V825, V826, V825, 0x0, V768]
Stack pops: 6
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6]

================================

Block 0xe9b
[0xe9b:0xe9e]
---
Predecessors: [0xe8e]
Successors: []
---
0xe9b PUSH1 0x0
0xe9d DUP1
0xe9e REVERT
---
0xe9b: V840 = 0x0
0xe9e: REVERT 0x0 0x0
---
Entry stack: [S8, S7, S6, S5, S4, S3, V768, 0xc0ee0b8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S8, S7, S6, S5, S4, S3, V768, 0xc0ee0b8a, S0]

================================

Block 0xe9f
[0xe9f:0xea2]
---
Predecessors: [0xe8e]
Successors: [0xea3]
---
0xe9f JUMPDEST
0xea0 POP
0xea1 POP
0xea2 POP
---
0xe9f: JUMPDEST 
---
Entry stack: [S8, S7, S6, S5, S4, S3, V768, 0xc0ee0b8a, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S8, S7, S6, S5, S4, S3]

================================

Block 0xea3
[0xea3:0xf14]
---
Predecessors: [0xd30, 0xe9f]
Successors: [0x48c]
---
0xea3 JUMPDEST
0xea4 DUP6
0xea5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeba AND
0xebb CALLER
0xebc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed1 AND
0xed2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xef3 DUP8
0xef4 PUSH1 0x40
0xef6 MLOAD
0xef7 DUP1
0xef8 DUP3
0xef9 DUP2
0xefa MSTORE
0xefb PUSH1 0x20
0xefd ADD
0xefe SWAP2
0xeff POP
0xf00 POP
0xf01 PUSH1 0x40
0xf03 MLOAD
0xf04 DUP1
0xf05 SWAP2
0xf06 SUB
0xf07 SWAP1
0xf08 LOG3
0xf09 PUSH1 0x1
0xf0b SWAP4
0xf0c POP
0xf0d POP
0xf0e POP
0xf0f POP
0xf10 SWAP3
0xf11 SWAP2
0xf12 POP
0xf13 POP
0xf14 JUMP
---
0xea3: JUMPDEST 
0xea5: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xeba: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xebb: V843 = CALLER
0xebc: V844 = 0xffffffffffffffffffffffffffffffffffffffff
0xed1: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0xed2: V846 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xef4: V847 = 0x40
0xef6: V848 = M[0x40]
0xefa: M[V848] = S4
0xefb: V849 = 0x20
0xefd: V850 = ADD 0x20 V848
0xf01: V851 = 0x40
0xf03: V852 = M[0x40]
0xf06: V853 = SUB V850 V852
0xf08: LOG V852 V853 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V845 V842
0xf09: V854 = 0x1
0xf14: JUMP S6
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0xf15
[0xf15:0xf64]
---
Predecessors: [0x4b1]
Successors: [0x12cc]
---
0xf15 JUMPDEST
0xf16 PUSH1 0x0
0xf18 DUP1
0xf19 DUP5
0xf1a EXTCODESIZE
0xf1b SWAP2
0xf1c POP
0xf1d PUSH2 0xf65
0xf20 PUSH1 0x3
0xf22 PUSH1 0x0
0xf24 CALLER
0xf25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3a AND
0xf3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf50 AND
0xf51 DUP2
0xf52 MSTORE
0xf53 PUSH1 0x20
0xf55 ADD
0xf56 SWAP1
0xf57 DUP2
0xf58 MSTORE
0xf59 PUSH1 0x20
0xf5b ADD
0xf5c PUSH1 0x0
0xf5e SHA3
0xf5f SLOAD
0xf60 DUP6
0xf61 PUSH2 0x12cc
0xf64 JUMP
---
0xf15: JUMPDEST 
0xf16: V855 = 0x0
0xf1a: V856 = EXTCODESIZE V338
0xf1d: V857 = 0xf65
0xf20: V858 = 0x3
0xf22: V859 = 0x0
0xf24: V860 = CALLER
0xf25: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3a: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V860
0xf3b: V863 = 0xffffffffffffffffffffffffffffffffffffffff
0xf50: V864 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0xf52: M[0x0] = V864
0xf53: V865 = 0x20
0xf55: V866 = ADD 0x20 0x0
0xf58: M[0x20] = 0x3
0xf59: V867 = 0x20
0xf5b: V868 = ADD 0x20 0x20
0xf5c: V869 = 0x0
0xf5e: V870 = SHA3 0x0 0x40
0xf5f: V871 = S[V870]
0xf61: V872 = 0x12cc
0xf64: JUMP 0x12cc
---
Entry stack: [V10, 0x529, V338, V341, V359]
Stack pops: 3
Stack additions: [S2, S1, S0, V856, 0x0, 0xf65, V871, S1]
Exit stack: [V10, 0x529, V338, V341, V359, V856, 0x0, 0xf65, V871, V341]

================================

Block 0xf65
[0xf65:0xff3]
---
Predecessors: [0x12da]
Successors: [0x12e5]
---
0xf65 JUMPDEST
0xf66 PUSH1 0x3
0xf68 PUSH1 0x0
0xf6a CALLER
0xf6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf80 AND
0xf81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf96 AND
0xf97 DUP2
0xf98 MSTORE
0xf99 PUSH1 0x20
0xf9b ADD
0xf9c SWAP1
0xf9d DUP2
0xf9e MSTORE
0xf9f PUSH1 0x20
0xfa1 ADD
0xfa2 PUSH1 0x0
0xfa4 SHA3
0xfa5 DUP2
0xfa6 SWAP1
0xfa7 SSTORE
0xfa8 POP
0xfa9 PUSH2 0xff9
0xfac PUSH1 0x3
0xfae PUSH1 0x0
0xfb0 DUP8
0xfb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc6 AND
0xfc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfdc AND
0xfdd DUP2
0xfde MSTORE
0xfdf PUSH1 0x20
0xfe1 ADD
0xfe2 SWAP1
0xfe3 DUP2
0xfe4 MSTORE
0xfe5 PUSH1 0x20
0xfe7 ADD
0xfe8 PUSH1 0x0
0xfea SHA3
0xfeb SLOAD
0xfec PUSH2 0xff4
0xfef DUP7
0xff0 PUSH2 0x12e5
0xff3 JUMP
---
0xf65: JUMPDEST 
0xf66: V873 = 0x3
0xf68: V874 = 0x0
0xf6a: V875 = CALLER
0xf6b: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xf80: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0xf81: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0xf96: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0xf98: M[0x0] = V879
0xf99: V880 = 0x20
0xf9b: V881 = ADD 0x20 0x0
0xf9e: M[0x20] = 0x3
0xf9f: V882 = 0x20
0xfa1: V883 = ADD 0x20 0x20
0xfa2: V884 = 0x0
0xfa4: V885 = SHA3 0x0 0x40
0xfa7: S[V885] = V1073
0xfa9: V886 = 0xff9
0xfac: V887 = 0x3
0xfae: V888 = 0x0
0xfb1: V889 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc6: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xfc7: V891 = 0xffffffffffffffffffffffffffffffffffffffff
0xfdc: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V890
0xfde: M[0x0] = V892
0xfdf: V893 = 0x20
0xfe1: V894 = ADD 0x20 0x0
0xfe4: M[0x20] = 0x3
0xfe5: V895 = 0x20
0xfe7: V896 = ADD 0x20 0x20
0xfe8: V897 = 0x0
0xfea: V898 = SHA3 0x0 0x40
0xfeb: V899 = S[V898]
0xfec: V900 = 0xff4
0xff0: V901 = 0x12e5
0xff3: JUMP 0x12e5
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1073]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0xff9, V899, 0xff4, S4]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0xff9, V899, 0xff4, S4]

================================

Block 0xff4
[0xff4:0xff8]
---
Predecessors: [0x1339]
Successors: [0x133f]
---
0xff4 JUMPDEST
0xff5 PUSH2 0x133f
0xff8 JUMP
---
0xff4: JUMPDEST 
0xff5: V902 = 0x133f
0xff8: JUMP 0x133f
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0xff9}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0xff9}, S1, S0]

================================

Block 0xff9
[0xff9:0x1045]
---
Predecessors: [0x1353]
Successors: [0x1046, 0x116c]
---
0xff9 JUMPDEST
0xffa PUSH1 0x3
0xffc PUSH1 0x0
0xffe DUP8
0xfff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1014 AND
0x1015 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102a AND
0x102b DUP2
0x102c MSTORE
0x102d PUSH1 0x20
0x102f ADD
0x1030 SWAP1
0x1031 DUP2
0x1032 MSTORE
0x1033 PUSH1 0x20
0x1035 ADD
0x1036 PUSH1 0x0
0x1038 SHA3
0x1039 DUP2
0x103a SWAP1
0x103b SSTORE
0x103c POP
0x103d PUSH1 0x0
0x103f DUP3
0x1040 GT
0x1041 ISZERO
0x1042 PUSH2 0x116c
0x1045 JUMPI
---
0xff9: JUMPDEST 
0xffa: V903 = 0x3
0xffc: V904 = 0x0
0xfff: V905 = 0xffffffffffffffffffffffffffffffffffffffff
0x1014: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1015: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0x102a: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0x102c: M[0x0] = V908
0x102d: V909 = 0x20
0x102f: V910 = ADD 0x20 0x0
0x1032: M[0x20] = 0x3
0x1033: V911 = 0x20
0x1035: V912 = ADD 0x20 0x20
0x1036: V913 = 0x0
0x1038: V914 = SHA3 0x0 0x40
0x103b: S[V914] = S0
0x103d: V915 = 0x0
0x1040: V916 = GT S2 0x0
0x1041: V917 = ISZERO V916
0x1042: V918 = 0x116c
0x1045: JUMPI 0x116c V917
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1046
[0x1046:0x10ee]
---
Predecessors: [0xff9]
Successors: [0x10ef]
---
0x1046 DUP5
0x1047 SWAP1
0x1048 POP
0x1049 DUP1
0x104a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105f AND
0x1060 PUSH4 0xc0ee0b8a
0x1065 CALLER
0x1066 DUP7
0x1067 DUP7
0x1068 PUSH1 0x40
0x106a MLOAD
0x106b DUP5
0x106c PUSH4 0xffffffff
0x1071 AND
0x1072 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1090 MUL
0x1091 DUP2
0x1092 MSTORE
0x1093 PUSH1 0x4
0x1095 ADD
0x1096 DUP1
0x1097 DUP5
0x1098 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ad AND
0x10ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c3 AND
0x10c4 DUP2
0x10c5 MSTORE
0x10c6 PUSH1 0x20
0x10c8 ADD
0x10c9 DUP4
0x10ca DUP2
0x10cb MSTORE
0x10cc PUSH1 0x20
0x10ce ADD
0x10cf DUP1
0x10d0 PUSH1 0x20
0x10d2 ADD
0x10d3 DUP3
0x10d4 DUP2
0x10d5 SUB
0x10d6 DUP3
0x10d7 MSTORE
0x10d8 DUP4
0x10d9 DUP2
0x10da DUP2
0x10db MLOAD
0x10dc DUP2
0x10dd MSTORE
0x10de PUSH1 0x20
0x10e0 ADD
0x10e1 SWAP2
0x10e2 POP
0x10e3 DUP1
0x10e4 MLOAD
0x10e5 SWAP1
0x10e6 PUSH1 0x20
0x10e8 ADD
0x10e9 SWAP1
0x10ea DUP1
0x10eb DUP4
0x10ec DUP4
0x10ed PUSH1 0x0
---
0x104a: V919 = 0xffffffffffffffffffffffffffffffffffffffff
0x105f: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1060: V921 = 0xc0ee0b8a
0x1065: V922 = CALLER
0x1068: V923 = 0x40
0x106a: V924 = M[0x40]
0x106c: V925 = 0xffffffff
0x1071: V926 = AND 0xffffffff 0xc0ee0b8a
0x1072: V927 = 0x100000000000000000000000000000000000000000000000000000000
0x1090: V928 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0x1092: M[V924] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x1093: V929 = 0x4
0x1095: V930 = ADD 0x4 V924
0x1098: V931 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ad: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0x10ae: V933 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c3: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V932
0x10c5: M[V930] = V934
0x10c6: V935 = 0x20
0x10c8: V936 = ADD 0x20 V930
0x10cb: M[V936] = S3
0x10cc: V937 = 0x20
0x10ce: V938 = ADD 0x20 V936
0x10d0: V939 = 0x20
0x10d2: V940 = ADD 0x20 V938
0x10d5: V941 = SUB V940 V930
0x10d7: M[V938] = V941
0x10db: V942 = M[S2]
0x10dd: M[V940] = V942
0x10de: V943 = 0x20
0x10e0: V944 = ADD 0x20 V940
0x10e4: V945 = M[S2]
0x10e6: V946 = 0x20
0x10e8: V947 = ADD 0x20 S2
0x10ed: V948 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V920, 0xc0ee0b8a, V922, S3, S2, V930, V938, V944, V947, V945, V945, V944, V947, 0x0]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, S4, V920, 0xc0ee0b8a, V922, S3, S2, V930, V938, V944, V947, V945, V945, V944, V947, 0x0]

================================

Block 0x10ef
[0x10ef:0x10f7]
---
Predecessors: [0x1046, 0x10f8]
Successors: [0x10f8, 0x110a]
---
0x10ef JUMPDEST
0x10f0 DUP4
0x10f1 DUP2
0x10f2 LT
0x10f3 ISZERO
0x10f4 PUSH2 0x110a
0x10f7 JUMPI
---
0x10ef: JUMPDEST 
0x10f2: V949 = LT S0 V945
0x10f3: V950 = ISZERO V949
0x10f4: V951 = 0x110a
0x10f7: JUMPI 0x110a V950
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V920, 0xc0ee0b8a, V922, S10, S9, V930, V938, V944, V947, V945, V945, V944, V947, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V920, 0xc0ee0b8a, V922, S10, S9, V930, V938, V944, V947, V945, V945, V944, V947, S0]

================================

Block 0x10f8
[0x10f8:0x1109]
---
Predecessors: [0x10ef]
Successors: [0x10ef]
---
0x10f8 DUP1
0x10f9 DUP3
0x10fa ADD
0x10fb MLOAD
0x10fc DUP2
0x10fd DUP5
0x10fe ADD
0x10ff MSTORE
0x1100 PUSH1 0x20
0x1102 DUP2
0x1103 ADD
0x1104 SWAP1
0x1105 POP
0x1106 PUSH2 0x10ef
0x1109 JUMP
---
0x10fa: V952 = ADD V947 S0
0x10fb: V953 = M[V952]
0x10fe: V954 = ADD V944 S0
0x10ff: M[V954] = V953
0x1100: V955 = 0x20
0x1103: V956 = ADD S0 0x20
0x1106: V957 = 0x10ef
0x1109: JUMP 0x10ef
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V920, 0xc0ee0b8a, V922, S10, S9, V930, V938, V944, V947, V945, V945, V944, V947, S0]
Stack pops: 3
Stack additions: [S2, S1, V956]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V920, 0xc0ee0b8a, V922, S10, S9, V930, V938, V944, V947, V945, V945, V944, V947, V956]

================================

Block 0x110a
[0x110a:0x111d]
---
Predecessors: [0x10ef]
Successors: [0x111e, 0x1137]
---
0x110a JUMPDEST
0x110b POP
0x110c POP
0x110d POP
0x110e POP
0x110f SWAP1
0x1110 POP
0x1111 SWAP1
0x1112 DUP2
0x1113 ADD
0x1114 SWAP1
0x1115 PUSH1 0x1f
0x1117 AND
0x1118 DUP1
0x1119 ISZERO
0x111a PUSH2 0x1137
0x111d JUMPI
---
0x110a: JUMPDEST 
0x1113: V958 = ADD V945 V944
0x1115: V959 = 0x1f
0x1117: V960 = AND 0x1f V945
0x1119: V961 = ISZERO V960
0x111a: V962 = 0x1137
0x111d: JUMPI 0x1137 V961
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V920, 0xc0ee0b8a, V922, S10, S9, V930, V938, V944, V947, V945, V945, V944, V947, S0]
Stack pops: 7
Stack additions: [V958, V960]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V920, 0xc0ee0b8a, V922, S10, S9, V930, V938, V958, V960]

================================

Block 0x111e
[0x111e:0x1136]
---
Predecessors: [0x110a]
Successors: [0x1137]
---
0x111e DUP1
0x111f DUP3
0x1120 SUB
0x1121 DUP1
0x1122 MLOAD
0x1123 PUSH1 0x1
0x1125 DUP4
0x1126 PUSH1 0x20
0x1128 SUB
0x1129 PUSH2 0x100
0x112c EXP
0x112d SUB
0x112e NOT
0x112f AND
0x1130 DUP2
0x1131 MSTORE
0x1132 PUSH1 0x20
0x1134 ADD
0x1135 SWAP2
0x1136 POP
---
0x1120: V963 = SUB V958 V960
0x1122: V964 = M[V963]
0x1123: V965 = 0x1
0x1126: V966 = 0x20
0x1128: V967 = SUB 0x20 V960
0x1129: V968 = 0x100
0x112c: V969 = EXP 0x100 V967
0x112d: V970 = SUB V969 0x1
0x112e: V971 = NOT V970
0x112f: V972 = AND V971 V964
0x1131: M[V963] = V972
0x1132: V973 = 0x20
0x1134: V974 = ADD 0x20 V963
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, V922, S5, S4, V930, V938, V958, V960]
Stack pops: 2
Stack additions: [V974, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, V922, S5, S4, V930, V938, V974, V960]

================================

Block 0x1137
[0x1137:0x1152]
---
Predecessors: [0x110a, 0x111e]
Successors: [0x1153, 0x1157]
---
0x1137 JUMPDEST
0x1138 POP
0x1139 SWAP5
0x113a POP
0x113b POP
0x113c POP
0x113d POP
0x113e POP
0x113f PUSH1 0x0
0x1141 PUSH1 0x40
0x1143 MLOAD
0x1144 DUP1
0x1145 DUP4
0x1146 SUB
0x1147 DUP2
0x1148 PUSH1 0x0
0x114a DUP8
0x114b DUP1
0x114c EXTCODESIZE
0x114d ISZERO
0x114e ISZERO
0x114f PUSH2 0x1157
0x1152 JUMPI
---
0x1137: JUMPDEST 
0x113f: V975 = 0x0
0x1141: V976 = 0x40
0x1143: V977 = M[0x40]
0x1146: V978 = SUB S1 V977
0x1148: V979 = 0x0
0x114c: V980 = EXTCODESIZE V920
0x114d: V981 = ISZERO V980
0x114e: V982 = ISZERO V981
0x114f: V983 = 0x1157
0x1152: JUMPI 0x1157 V982
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, V922, S5, S4, V930, V938, S1, V960]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V977, V978, V977, 0x0, S8]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, S1, 0x0, V977, V978, V977, 0x0, V920]

================================

Block 0x1153
[0x1153:0x1156]
---
Predecessors: [0x1137]
Successors: []
---
0x1153 PUSH1 0x0
0x1155 DUP1
0x1156 REVERT
---
0x1153: V984 = 0x0
0x1156: REVERT 0x0 0x0
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, S6, 0x0, V977, V978, V977, 0x0, V920]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, S6, 0x0, V977, V978, V977, 0x0, V920]

================================

Block 0x1157
[0x1157:0x1163]
---
Predecessors: [0x1137]
Successors: [0x1164, 0x1168]
---
0x1157 JUMPDEST
0x1158 PUSH2 0x2c6
0x115b GAS
0x115c SUB
0x115d CALL
0x115e ISZERO
0x115f ISZERO
0x1160 PUSH2 0x1168
0x1163 JUMPI
---
0x1157: JUMPDEST 
0x1158: V985 = 0x2c6
0x115b: V986 = GAS
0x115c: V987 = SUB V986 0x2c6
0x115d: V988 = CALL V987 V920 0x0 V977 V978 V977 0x0
0x115e: V989 = ISZERO V988
0x115f: V990 = ISZERO V989
0x1160: V991 = 0x1168
0x1163: JUMPI 0x1168 V990
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, S6, 0x0, V977, V978, V977, 0x0, V920]
Stack pops: 6
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V920, 0xc0ee0b8a, S6]

================================

Block 0x1164
[0x1164:0x1167]
---
Predecessors: [0x1157]
Successors: []
---
0x1164 PUSH1 0x0
0x1166 DUP1
0x1167 REVERT
---
0x1164: V992 = 0x0
0x1167: REVERT 0x0 0x0
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V920, 0xc0ee0b8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, V920, 0xc0ee0b8a, S0]

================================

Block 0x1168
[0x1168:0x116b]
---
Predecessors: [0x1157]
Successors: [0x116c]
---
0x1168 JUMPDEST
0x1169 POP
0x116a POP
0x116b POP
---
0x1168: JUMPDEST 
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V920, 0xc0ee0b8a, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x116c
[0x116c:0x11e7]
---
Predecessors: [0xff9, 0x1168]
Successors: [0x11e8]
---
0x116c JUMPDEST
0x116d DUP5
0x116e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1183 AND
0x1184 CALLER
0x1185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119a AND
0x119b PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x11bc DUP7
0x11bd DUP7
0x11be PUSH1 0x40
0x11c0 MLOAD
0x11c1 DUP1
0x11c2 DUP4
0x11c3 DUP2
0x11c4 MSTORE
0x11c5 PUSH1 0x20
0x11c7 ADD
0x11c8 DUP1
0x11c9 PUSH1 0x20
0x11cb ADD
0x11cc DUP3
0x11cd DUP2
0x11ce SUB
0x11cf DUP3
0x11d0 MSTORE
0x11d1 DUP4
0x11d2 DUP2
0x11d3 DUP2
0x11d4 MLOAD
0x11d5 DUP2
0x11d6 MSTORE
0x11d7 PUSH1 0x20
0x11d9 ADD
0x11da SWAP2
0x11db POP
0x11dc DUP1
0x11dd MLOAD
0x11de SWAP1
0x11df PUSH1 0x20
0x11e1 ADD
0x11e2 SWAP1
0x11e3 DUP1
0x11e4 DUP4
0x11e5 DUP4
0x11e6 PUSH1 0x0
---
0x116c: JUMPDEST 
0x116e: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0x1183: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1184: V995 = CALLER
0x1185: V996 = 0xffffffffffffffffffffffffffffffffffffffff
0x119a: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0x119b: V998 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x11be: V999 = 0x40
0x11c0: V1000 = M[0x40]
0x11c4: M[V1000] = S3
0x11c5: V1001 = 0x20
0x11c7: V1002 = ADD 0x20 V1000
0x11c9: V1003 = 0x20
0x11cb: V1004 = ADD 0x20 V1002
0x11ce: V1005 = SUB V1004 V1000
0x11d0: M[V1002] = V1005
0x11d4: V1006 = M[S2]
0x11d6: M[V1004] = V1006
0x11d7: V1007 = 0x20
0x11d9: V1008 = ADD 0x20 V1004
0x11dd: V1009 = M[S2]
0x11df: V1010 = 0x20
0x11e1: V1011 = ADD 0x20 S2
0x11e6: V1012 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V994, V997, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S3, S2, V1000, V1002, V1008, V1011, V1009, V1009, V1008, V1011, 0x0]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, S0, V994, V997, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S3, S2, V1000, V1002, V1008, V1011, V1009, V1009, V1008, V1011, 0x0]

================================

Block 0x11e8
[0x11e8:0x11f0]
---
Predecessors: [0x116c, 0x11f1]
Successors: [0x11f1, 0x1203]
---
0x11e8 JUMPDEST
0x11e9 DUP4
0x11ea DUP2
0x11eb LT
0x11ec ISZERO
0x11ed PUSH2 0x1203
0x11f0 JUMPI
---
0x11e8: JUMPDEST 
0x11eb: V1013 = LT S0 S3
0x11ec: V1014 = ISZERO V1013
0x11ed: V1015 = 0x1203
0x11f0: JUMPI 0x1203 V1014
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x11f1
[0x11f1:0x1202]
---
Predecessors: [0x11e8]
Successors: [0x11e8]
---
0x11f1 DUP1
0x11f2 DUP3
0x11f3 ADD
0x11f4 MLOAD
0x11f5 DUP2
0x11f6 DUP5
0x11f7 ADD
0x11f8 MSTORE
0x11f9 PUSH1 0x20
0x11fb DUP2
0x11fc ADD
0x11fd SWAP1
0x11fe POP
0x11ff PUSH2 0x11e8
0x1202 JUMP
---
0x11f3: V1016 = ADD S1 S0
0x11f4: V1017 = M[V1016]
0x11f7: V1018 = ADD S2 S0
0x11f8: M[V1018] = V1017
0x11f9: V1019 = 0x20
0x11fc: V1020 = ADD S0 0x20
0x11ff: V1021 = 0x11e8
0x1202: JUMP 0x11e8
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V1020]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1020]

================================

Block 0x1203
[0x1203:0x1216]
---
Predecessors: [0x11e8]
Successors: [0x1217, 0x1230]
---
0x1203 JUMPDEST
0x1204 POP
0x1205 POP
0x1206 POP
0x1207 POP
0x1208 SWAP1
0x1209 POP
0x120a SWAP1
0x120b DUP2
0x120c ADD
0x120d SWAP1
0x120e PUSH1 0x1f
0x1210 AND
0x1211 DUP1
0x1212 ISZERO
0x1213 PUSH2 0x1230
0x1216 JUMPI
---
0x1203: JUMPDEST 
0x120c: V1022 = ADD S4 S6
0x120e: V1023 = 0x1f
0x1210: V1024 = AND 0x1f S4
0x1212: V1025 = ISZERO V1024
0x1213: V1026 = 0x1230
0x1216: JUMPI 0x1230 V1025
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V1022, V1024]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, V1022, V1024]

================================

Block 0x1217
[0x1217:0x122f]
---
Predecessors: [0x1203]
Successors: [0x1230]
---
0x1217 DUP1
0x1218 DUP3
0x1219 SUB
0x121a DUP1
0x121b MLOAD
0x121c PUSH1 0x1
0x121e DUP4
0x121f PUSH1 0x20
0x1221 SUB
0x1222 PUSH2 0x100
0x1225 EXP
0x1226 SUB
0x1227 NOT
0x1228 AND
0x1229 DUP2
0x122a MSTORE
0x122b PUSH1 0x20
0x122d ADD
0x122e SWAP2
0x122f POP
---
0x1219: V1027 = SUB V1022 V1024
0x121b: V1028 = M[V1027]
0x121c: V1029 = 0x1
0x121f: V1030 = 0x20
0x1221: V1031 = SUB 0x20 V1024
0x1222: V1032 = 0x100
0x1225: V1033 = EXP 0x100 V1031
0x1226: V1034 = SUB V1033 0x1
0x1227: V1035 = NOT V1034
0x1228: V1036 = AND V1035 V1028
0x122a: M[V1027] = V1036
0x122b: V1037 = 0x20
0x122d: V1038 = ADD 0x20 V1027
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, S3, S2, V1022, V1024]
Stack pops: 2
Stack additions: [V1038, S0]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, S3, S2, V1038, V1024]

================================

Block 0x1230
[0x1230:0x1244]
---
Predecessors: [0x1203, 0x1217]
Successors: [0x529]
---
0x1230 JUMPDEST
0x1231 POP
0x1232 SWAP4
0x1233 POP
0x1234 POP
0x1235 POP
0x1236 POP
0x1237 PUSH1 0x40
0x1239 MLOAD
0x123a DUP1
0x123b SWAP2
0x123c SUB
0x123d SWAP1
0x123e LOG3
0x123f POP
0x1240 POP
0x1241 POP
0x1242 POP
0x1243 POP
0x1244 JUMP
---
0x1230: JUMPDEST 
0x1237: V1039 = 0x40
0x1239: V1040 = M[0x40]
0x123c: V1041 = SUB S1 V1040
0x123e: LOG V1040 V1041 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 S7 S8
0x1244: JUMP S14
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, S3, S2, S1, V1024]
Stack pops: 15
Stack additions: []
Exit stack: [V10]

================================

Block 0x1245
[0x1245:0x12cb]
---
Predecessors: [0x536]
Successors: [0x581]
---
0x1245 JUMPDEST
0x1246 PUSH1 0x0
0x1248 PUSH1 0x4
0x124a PUSH1 0x0
0x124c DUP5
0x124d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1262 AND
0x1263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1278 AND
0x1279 DUP2
0x127a MSTORE
0x127b PUSH1 0x20
0x127d ADD
0x127e SWAP1
0x127f DUP2
0x1280 MSTORE
0x1281 PUSH1 0x20
0x1283 ADD
0x1284 PUSH1 0x0
0x1286 SHA3
0x1287 PUSH1 0x0
0x1289 DUP4
0x128a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129f AND
0x12a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b5 AND
0x12b6 DUP2
0x12b7 MSTORE
0x12b8 PUSH1 0x20
0x12ba ADD
0x12bb SWAP1
0x12bc DUP2
0x12bd MSTORE
0x12be PUSH1 0x20
0x12c0 ADD
0x12c1 PUSH1 0x0
0x12c3 SHA3
0x12c4 SLOAD
0x12c5 SWAP1
0x12c6 POP
0x12c7 SWAP3
0x12c8 SWAP2
0x12c9 POP
0x12ca POP
0x12cb JUMP
---
0x1245: JUMPDEST 
0x1246: V1042 = 0x0
0x1248: V1043 = 0x4
0x124a: V1044 = 0x0
0x124d: V1045 = 0xffffffffffffffffffffffffffffffffffffffff
0x1262: V1046 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x1263: V1047 = 0xffffffffffffffffffffffffffffffffffffffff
0x1278: V1048 = AND 0xffffffffffffffffffffffffffffffffffffffff V1046
0x127a: M[0x0] = V1048
0x127b: V1049 = 0x20
0x127d: V1050 = ADD 0x20 0x0
0x1280: M[0x20] = 0x4
0x1281: V1051 = 0x20
0x1283: V1052 = ADD 0x20 0x20
0x1284: V1053 = 0x0
0x1286: V1054 = SHA3 0x0 0x40
0x1287: V1055 = 0x0
0x128a: V1056 = 0xffffffffffffffffffffffffffffffffffffffff
0x129f: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x12a0: V1058 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b5: V1059 = AND 0xffffffffffffffffffffffffffffffffffffffff V1057
0x12b7: M[0x0] = V1059
0x12b8: V1060 = 0x20
0x12ba: V1061 = ADD 0x20 0x0
0x12bd: M[0x20] = V1054
0x12be: V1062 = 0x20
0x12c0: V1063 = ADD 0x20 0x20
0x12c1: V1064 = 0x0
0x12c3: V1065 = SHA3 0x0 0x40
0x12c4: V1066 = S[V1065]
0x12cb: JUMP 0x581
---
Entry stack: [V10, 0x581, V374, V379]
Stack pops: 3
Stack additions: [V1066]
Exit stack: [V10, V1066]

================================

Block 0x12cc
[0x12cc:0x12d8]
---
Predecessors: [0x6c8, 0x713, 0xc4d, 0xf15]
Successors: [0x12d9, 0x12da]
---
0x12cc JUMPDEST
0x12cd PUSH1 0x0
0x12cf DUP3
0x12d0 DUP3
0x12d1 GT
0x12d2 ISZERO
0x12d3 ISZERO
0x12d4 ISZERO
0x12d5 PUSH2 0x12da
0x12d8 JUMPI
---
0x12cc: JUMPDEST 
0x12cd: V1067 = 0x0
0x12d1: V1068 = GT S0 S1
0x12d2: V1069 = ISZERO V1068
0x12d3: V1070 = ISZERO V1069
0x12d4: V1071 = ISZERO V1070
0x12d5: V1072 = 0x12da
0x12d8: JUMPI 0x12da V1071
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x713, 0x7dc, 0xc9c, 0xf65}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x713, 0x7dc, 0xc9c, 0xf65}, S1, S0, 0x0]

================================

Block 0x12d9
[0x12d9:0x12d9]
---
Predecessors: [0x12cc]
Successors: []
---
0x12d9 INVALID
---
0x12d9: INVALID 
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x713, 0x7dc, 0xc9c, 0xf65}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x713, 0x7dc, 0xc9c, 0xf65}, S2, S1, 0x0]

================================

Block 0x12da
[0x12da:0x12e4]
---
Predecessors: [0x12cc]
Successors: [0x713, 0x7dc, 0xc9c, 0xf65]
---
0x12da JUMPDEST
0x12db DUP2
0x12dc DUP4
0x12dd SUB
0x12de SWAP1
0x12df POP
0x12e0 SWAP3
0x12e1 SWAP2
0x12e2 POP
0x12e3 POP
0x12e4 JUMP
---
0x12da: JUMPDEST 
0x12dd: V1073 = SUB S2 S1
0x12e4: JUMP {0x713, 0x7dc, 0xc9c, 0xf65}
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x713, 0x7dc, 0xc9c, 0xf65}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1073]
Exit stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, V1073]

================================

Block 0x12e5
[0x12e5:0x12fa]
---
Predecessors: [0x7dc, 0xc9c, 0xf65]
Successors: [0x12fb, 0x12fc]
---
0x12e5 JUMPDEST
0x12e6 PUSH1 0x0
0x12e8 DUP1
0x12e9 PUSH1 0x64
0x12eb PUSH1 0x1
0x12ed NUMBER
0x12ee SUB
0x12ef BLOCKHASH
0x12f0 PUSH1 0x1
0x12f2 SWAP1
0x12f3 DIV
0x12f4 DUP2
0x12f5 ISZERO
0x12f6 ISZERO
0x12f7 PUSH2 0x12fc
0x12fa JUMPI
---
0x12e5: JUMPDEST 
0x12e6: V1074 = 0x0
0x12e9: V1075 = 0x64
0x12eb: V1076 = 0x1
0x12ed: V1077 = NUMBER
0x12ee: V1078 = SUB V1077 0x1
0x12ef: V1079 = BLOCKHASH V1078
0x12f0: V1080 = 0x1
0x12f3: V1081 = DIV V1079 0x1
0x12f5: V1082 = ISZERO 0x64
0x12f6: V1083 = ISZERO 0x0
0x12f7: V1084 = 0x12fc
0x12fa: JUMPI 0x12fc 0x1
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x8ad, 0xd30, 0xff9}, S2, {0x8a8, 0xd2b, 0xff4}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x64, V1081]
Exit stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x8ad, 0xd30, 0xff9}, S2, {0x8a8, 0xd2b, 0xff4}, S0, 0x0, 0x0, 0x64, V1081]

================================

Block 0x12fb
[0x12fb:0x12fb]
---
Predecessors: [0x12e5]
Successors: []
---
0x12fb INVALID
---
0x12fb: INVALID 
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0xff9}, S6, {0x8a8, 0xd2b, 0xff4}, S4, 0x0, 0x0, 0x64, V1081]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0xff9}, S6, {0x8a8, 0xd2b, 0xff4}, S4, 0x0, 0x0, 0x64, V1081]

================================

Block 0x12fc
[0x12fc:0x1308]
---
Predecessors: [0x12e5]
Successors: [0x1309, 0x131a]
---
0x12fc JUMPDEST
0x12fd MOD
0x12fe SWAP1
0x12ff POP
0x1300 PUSH1 0x28
0x1302 DUP2
0x1303 LT
0x1304 ISZERO
0x1305 PUSH2 0x131a
0x1308 JUMPI
---
0x12fc: JUMPDEST 
0x12fd: V1085 = MOD V1081 0x64
0x1300: V1086 = 0x28
0x1303: V1087 = LT V1085 0x28
0x1304: V1088 = ISZERO V1087
0x1305: V1089 = 0x131a
0x1308: JUMPI 0x131a V1088
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0xff9}, S6, {0x8a8, 0xd2b, 0xff4}, S4, 0x0, 0x0, 0x64, V1081]
Stack pops: 3
Stack additions: [V1085]
Exit stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0xff9}, S6, {0x8a8, 0xd2b, 0xff4}, S4, 0x0, V1085]

================================

Block 0x1309
[0x1309:0x1312]
---
Predecessors: [0x12fc]
Successors: [0x135d]
---
0x1309 PUSH2 0x1313
0x130c DUP4
0x130d PUSH1 0xa
0x130f PUSH2 0x135d
0x1312 JUMP
---
0x1309: V1090 = 0x1313
0x130d: V1091 = 0xa
0x130f: V1092 = 0x135d
0x1312: JUMP 0x135d
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, 0x0, V1085]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1313, S2, 0xa]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, 0x0, V1085, 0x1313, S2, 0xa]

================================

Block 0x1313
[0x1313:0x1319]
---
Predecessors: [0x136b]
Successors: [0x1339]
---
0x1313 JUMPDEST
0x1314 SWAP2
0x1315 POP
0x1316 PUSH2 0x1339
0x1319 JUMP
---
0x1313: JUMPDEST 
0x1316: V1093 = 0x1339
0x1319: JUMP 0x1339
---
Entry stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0xff9}, S5, {0x8a8, 0xd2b, 0xff4}, S3, 0x0, S1, V1113]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0xff9}, S5, {0x8a8, 0xd2b, 0xff4}, S3, V1113, S1]

================================

Block 0x131a
[0x131a:0x1323]
---
Predecessors: [0x12fc]
Successors: [0x1324, 0x1335]
---
0x131a JUMPDEST
0x131b PUSH1 0x50
0x131d DUP2
0x131e LT
0x131f ISZERO
0x1320 PUSH2 0x1335
0x1323 JUMPI
---
0x131a: JUMPDEST 
0x131b: V1094 = 0x50
0x131e: V1095 = LT V1085 0x50
0x131f: V1096 = ISZERO V1095
0x1320: V1097 = 0x1335
0x1323: JUMPI 0x1335 V1096
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, 0x0, V1085]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, 0x0, V1085]

================================

Block 0x1324
[0x1324:0x132d]
---
Predecessors: [0x131a]
Successors: [0x1378]
---
0x1324 PUSH2 0x132e
0x1327 DUP4
0x1328 PUSH1 0xa
0x132a PUSH2 0x1378
0x132d JUMP
---
0x1324: V1098 = 0x132e
0x1328: V1099 = 0xa
0x132a: V1100 = 0x1378
0x132d: JUMP 0x1378
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, 0x0, V1085]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x132e, S2, 0xa]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, 0x0, V1085, 0x132e, S2, 0xa]

================================

Block 0x132e
[0x132e:0x1334]
---
Predecessors: [0x13a1]
Successors: [0x1339]
---
0x132e JUMPDEST
0x132f SWAP2
0x1330 POP
0x1331 PUSH2 0x1339
0x1334 JUMP
---
0x132e: JUMPDEST 
0x1331: V1101 = 0x1339
0x1334: JUMP 0x1339
---
Entry stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0xff9}, S5, {0x8a8, 0xd2b, 0xff4}, S3, 0x0, S1, V1115]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0xff9}, S5, {0x8a8, 0xd2b, 0xff4}, S3, V1115, S1]

================================

Block 0x1335
[0x1335:0x1338]
---
Predecessors: [0x131a]
Successors: [0x1339]
---
0x1335 JUMPDEST
0x1336 DUP3
0x1337 SWAP2
0x1338 POP
---
0x1335: JUMPDEST 
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, 0x0, V1085]
Stack pops: 3
Stack additions: [S2, S2, S0]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, S2, V1085]

================================

Block 0x1339
[0x1339:0x133e]
---
Predecessors: [0x1313, 0x132e, 0x1335]
Successors: [0x8a8, 0xd2b, 0xff4]
---
0x1339 JUMPDEST
0x133a POP
0x133b SWAP2
0x133c SWAP1
0x133d POP
0x133e JUMP
---
0x1339: JUMPDEST 
0x133e: JUMP {0x8a8, 0xd2b, 0xff4}
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, {0x8a8, 0xd2b, 0xff4}, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0xff9}, S4, S1]

================================

Block 0x133f
[0x133f:0x1351]
---
Predecessors: [0x8a8, 0xa58, 0xa64, 0xd2b, 0xff4]
Successors: [0x1352, 0x1353]
---
0x133f JUMPDEST
0x1340 PUSH1 0x0
0x1342 DUP1
0x1343 DUP3
0x1344 DUP5
0x1345 ADD
0x1346 SWAP1
0x1347 POP
0x1348 DUP4
0x1349 DUP2
0x134a LT
0x134b ISZERO
0x134c ISZERO
0x134d ISZERO
0x134e PUSH2 0x1353
0x1351 JUMPI
---
0x133f: JUMPDEST 
0x1340: V1102 = 0x0
0x1345: V1103 = ADD S1 S0
0x134a: V1104 = LT V1103 S1
0x134b: V1105 = ISZERO V1104
0x134c: V1106 = ISZERO V1105
0x134d: V1107 = ISZERO V1106
0x134e: V1108 = 0x1353
0x1351: JUMPI 0x1353 V1107
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, {0x8ad, 0xa64, 0xab3, 0xd30, 0xff9}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1103]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, {0x8ad, 0xa64, 0xab3, 0xd30, 0xff9}, S1, S0, 0x0, V1103]

================================

Block 0x1352
[0x1352:0x1352]
---
Predecessors: [0x133f]
Successors: []
---
0x1352 INVALID
---
0x1352: INVALID 
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, {0x8ad, 0xa64, 0xab3, 0xd30, 0xff9}, S3, S2, 0x0, V1103]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, {0x8ad, 0xa64, 0xab3, 0xd30, 0xff9}, S3, S2, 0x0, V1103]

================================

Block 0x1353
[0x1353:0x135c]
---
Predecessors: [0x133f]
Successors: [0x8ad, 0xa64, 0xab3, 0xd30, 0xff9]
---
0x1353 JUMPDEST
0x1354 DUP1
0x1355 SWAP2
0x1356 POP
0x1357 POP
0x1358 SWAP3
0x1359 SWAP2
0x135a POP
0x135b POP
0x135c JUMP
---
0x1353: JUMPDEST 
0x135c: JUMP {0x8ad, 0xa64, 0xab3, 0xd30, 0xff9}
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, {0x8ad, 0xa64, 0xab3, 0xd30, 0xff9}, S3, S2, 0x0, V1103]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, V1103]

================================

Block 0x135d
[0x135d:0x1369]
---
Predecessors: [0x1309]
Successors: [0x136a, 0x136b]
---
0x135d JUMPDEST
0x135e PUSH1 0x0
0x1360 DUP1
0x1361 DUP3
0x1362 DUP5
0x1363 DUP2
0x1364 ISZERO
0x1365 ISZERO
0x1366 PUSH2 0x136b
0x1369 JUMPI
---
0x135d: JUMPDEST 
0x135e: V1109 = 0x0
0x1364: V1110 = ISZERO 0xa
0x1365: V1111 = ISZERO 0x0
0x1366: V1112 = 0x136b
0x1369: JUMPI 0x136b 0x1
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0xff9}, S7, {0x8a8, 0xd2b, 0xff4}, S5, 0x0, S3, 0x1313, S1, 0xa]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0xff9}, S7, {0x8a8, 0xd2b, 0xff4}, S5, 0x0, S3, 0x1313, S1, 0xa, 0x0, 0x0, 0xa, S1]

================================

Block 0x136a
[0x136a:0x136a]
---
Predecessors: [0x135d]
Successors: []
---
0x136a INVALID
---
0x136a: INVALID 
---
Entry stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0xff9}, S11, {0x8a8, 0xd2b, 0xff4}, S9, 0x0, S7, 0x1313, S5, 0xa, 0x0, 0x0, 0xa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0xff9}, S11, {0x8a8, 0xd2b, 0xff4}, S9, 0x0, S7, 0x1313, S5, 0xa, 0x0, 0x0, 0xa, S0]

================================

Block 0x136b
[0x136b:0x1377]
---
Predecessors: [0x135d]
Successors: [0x1313]
---
0x136b JUMPDEST
0x136c DIV
0x136d SWAP1
0x136e POP
0x136f DUP1
0x1370 SWAP2
0x1371 POP
0x1372 POP
0x1373 SWAP3
0x1374 SWAP2
0x1375 POP
0x1376 POP
0x1377 JUMP
---
0x136b: JUMPDEST 
0x136c: V1113 = DIV S0 0xa
0x1377: JUMP 0x1313
---
Entry stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0xff9}, S11, {0x8a8, 0xd2b, 0xff4}, S9, 0x0, S7, 0x1313, S5, 0xa, 0x0, 0x0, 0xa, S0]
Stack pops: 7
Stack additions: [V1113]
Exit stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0xff9}, S11, {0x8a8, 0xd2b, 0xff4}, S9, 0x0, S7, V1113]

================================

Block 0x1378
[0x1378:0x1389]
---
Predecessors: [0x1324]
Successors: [0x138a, 0x1399]
---
0x1378 JUMPDEST
0x1379 PUSH1 0x0
0x137b DUP1
0x137c DUP3
0x137d DUP5
0x137e MUL
0x137f SWAP1
0x1380 POP
0x1381 PUSH1 0x0
0x1383 DUP5
0x1384 EQ
0x1385 DUP1
0x1386 PUSH2 0x1399
0x1389 JUMPI
---
0x1378: JUMPDEST 
0x1379: V1114 = 0x0
0x137e: V1115 = MUL S1 0xa
0x1381: V1116 = 0x0
0x1384: V1117 = EQ S1 0x0
0x1386: V1118 = 0x1399
0x1389: JUMPI 0x1399 V1117
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0xff9}, S7, {0x8a8, 0xd2b, 0xff4}, S5, 0x0, V1085, 0x132e, S1, 0xa]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1115, V1117]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0xff9}, S7, {0x8a8, 0xd2b, 0xff4}, S5, 0x0, V1085, 0x132e, S1, 0xa, 0x0, V1115, V1117]

================================

Block 0x138a
[0x138a:0x1394]
---
Predecessors: [0x1378]
Successors: [0x1395, 0x1396]
---
0x138a POP
0x138b DUP3
0x138c DUP5
0x138d DUP3
0x138e DUP2
0x138f ISZERO
0x1390 ISZERO
0x1391 PUSH2 0x1396
0x1394 JUMPI
---
0x138f: V1119 = ISZERO S4
0x1390: V1120 = ISZERO V1119
0x1391: V1121 = 0x1396
0x1394: JUMPI 0x1396 V1120
---
Entry stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0xff9}, S10, {0x8a8, 0xd2b, 0xff4}, S8, 0x0, V1085, 0x132e, S4, 0xa, 0x0, V1115, V1117]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0xff9}, S10, {0x8a8, 0xd2b, 0xff4}, S8, 0x0, V1085, 0x132e, S4, 0xa, 0x0, V1115, 0xa, S4, V1115]

================================

Block 0x1395
[0x1395:0x1395]
---
Predecessors: [0x138a]
Successors: []
---
0x1395 INVALID
---
0x1395: INVALID 
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0xff9}, S12, {0x8a8, 0xd2b, 0xff4}, S10, 0x0, V1085, 0x132e, S6, 0xa, 0x0, V1115, 0xa, S1, V1115]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0xff9}, S12, {0x8a8, 0xd2b, 0xff4}, S10, 0x0, V1085, 0x132e, S6, 0xa, 0x0, V1115, 0xa, S1, V1115]

================================

Block 0x1396
[0x1396:0x1398]
---
Predecessors: [0x138a]
Successors: [0x1399]
---
0x1396 JUMPDEST
0x1397 DIV
0x1398 EQ
---
0x1396: JUMPDEST 
0x1397: V1122 = DIV V1115 S1
0x1398: V1123 = EQ V1122 0xa
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0xff9}, S12, {0x8a8, 0xd2b, 0xff4}, S10, 0x0, V1085, 0x132e, S6, 0xa, 0x0, V1115, 0xa, S1, V1115]
Stack pops: 3
Stack additions: [V1123]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0xff9}, S12, {0x8a8, 0xd2b, 0xff4}, S10, 0x0, V1085, 0x132e, S6, 0xa, 0x0, V1115, V1123]

================================

Block 0x1399
[0x1399:0x139f]
---
Predecessors: [0x1378, 0x1396]
Successors: [0x13a0, 0x13a1]
---
0x1399 JUMPDEST
0x139a ISZERO
0x139b ISZERO
0x139c PUSH2 0x13a1
0x139f JUMPI
---
0x1399: JUMPDEST 
0x139a: V1124 = ISZERO S0
0x139b: V1125 = ISZERO V1124
0x139c: V1126 = 0x13a1
0x139f: JUMPI 0x13a1 V1125
---
Entry stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0xff9}, S10, {0x8a8, 0xd2b, 0xff4}, S8, 0x0, V1085, 0x132e, S4, 0xa, 0x0, V1115, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0xff9}, S10, {0x8a8, 0xd2b, 0xff4}, S8, 0x0, V1085, 0x132e, S4, 0xa, 0x0, V1115]

================================

Block 0x13a0
[0x13a0:0x13a0]
---
Predecessors: [0x1399]
Successors: []
---
0x13a0 INVALID
---
0x13a0: INVALID 
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0xff9}, S9, {0x8a8, 0xd2b, 0xff4}, S7, 0x0, S5, 0x132e, S3, 0xa, 0x0, V1115]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0xff9}, S9, {0x8a8, 0xd2b, 0xff4}, S7, 0x0, S5, 0x132e, S3, 0xa, 0x0, V1115]

================================

Block 0x13a1
[0x13a1:0x13aa]
---
Predecessors: [0x1399]
Successors: [0x132e]
---
0x13a1 JUMPDEST
0x13a2 DUP1
0x13a3 SWAP2
0x13a4 POP
0x13a5 POP
0x13a6 SWAP3
0x13a7 SWAP2
0x13a8 POP
0x13a9 POP
0x13aa JUMP
---
0x13a1: JUMPDEST 
0x13aa: JUMP 0x132e
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0xff9}, S9, {0x8a8, 0xd2b, 0xff4}, S7, 0x0, S5, 0x132e, S3, 0xa, 0x0, V1115]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0xff9}, S9, {0x8a8, 0xd2b, 0xff4}, S7, 0x0, S5, V1115]

================================

Block 0x13ab
[0x13ab:0x13be]
---
Predecessors: [0xc42]
Successors: [0xc4d]
---
0x13ab JUMPDEST
0x13ac PUSH1 0x20
0x13ae PUSH1 0x40
0x13b0 MLOAD
0x13b1 SWAP1
0x13b2 DUP2
0x13b3 ADD
0x13b4 PUSH1 0x40
0x13b6 MSTORE
0x13b7 DUP1
0x13b8 PUSH1 0x0
0x13ba DUP2
0x13bb MSTORE
0x13bc POP
0x13bd SWAP1
0x13be JUMP
---
0x13ab: JUMPDEST 
0x13ac: V1127 = 0x20
0x13ae: V1128 = 0x40
0x13b0: V1129 = M[0x40]
0x13b3: V1130 = ADD V1129 0x20
0x13b4: V1131 = 0x40
0x13b6: M[0x40] = V1130
0x13b8: V1132 = 0x0
0x13bb: M[V1129] = 0x0
0x13be: JUMP 0xc4d
---
Entry stack: [V10, 0x48c, V312, V315, 0x0, 0x0, 0xc4d]
Stack pops: 1
Stack additions: [V1129]
Exit stack: [V10, 0x48c, V312, V315, 0x0, 0x0, V1129]

================================

Block 0x13bf
[0x13bf:0x13ea]
---
Predecessors: []
Successors: []
---
0x13bf STOP
0x13c0 LOG1
0x13c1 PUSH6 0x627a7a723058
0x13c8 SHA3
0x13c9 SWAP8
0x13ca DUP16
0x13cb MISSING 0xd4
0x13cc COINBASE
0x13cd LT
0x13ce SWAP4
0x13cf SWAP16
0x13d0 MISSING 0xdc
0x13d1 PUSH25 0x3743f931a6b63774d9a49a4996496cdf3fef9152fc7c8b0029
---
0x13bf: STOP 
0x13c0: LOG S0 S1 S2
0x13c1: V1133 = 0x627a7a723058
0x13c8: V1134 = SHA3 0x627a7a723058 S3
0x13cb: MISSING 0xd4
0x13cc: V1135 = COINBASE
0x13cd: V1136 = LT V1135 S0
0x13d0: MISSING 0xdc
0x13d1: V1137 = 0x3743f931a6b63774d9a49a4996496cdf3fef9152fc7c8b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, S11, S4, S5, S6, S7, S8, S9, S10, V1134, S12, S13, S14, S15, S16, S17, S18, S16, S1, S2, S3, V1136, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S4, 0x3743f931a6b63774d9a49a4996496cdf3fef9152fc7c8b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xd3
Exit block: 0x153
Body: 0xd3, 0xda, 0xde, 0xe6, 0x10b, 0x114, 0x126, 0x13a, 0x153, 0x597

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x161
Exit block: 0x1a1
Body: 0x161, 0x168, 0x16c, 0x1a1, 0x5d0

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1bb
Exit block: 0x1ce
Body: 0x1bb, 0x1c2, 0x1c6, 0x1ce, 0x6c2

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1e4
Exit block: 0x48c
Body: 0x1e4, 0x1eb, 0x1ef, 0x48c, 0x6c8, 0x713

Function 4:
Public function signature: 0x2b68b9c6
Entry block: 0x25d
Exit block: 0x9bc
Body: 0x25d, 0x264, 0x268, 0x960, 0x9b8, 0x9bc

Function 5:
Public function signature: 0x313ce567
Entry block: 0x272
Exit block: 0x285
Body: 0x272, 0x279, 0x27d, 0x285, 0x9f7

Function 6:
Public function signature: 0x40c10f19
Entry block: 0x2a1
Exit block: 0xe9b
Body: 0x243, 0x2a1, 0x2a8, 0x2ac, 0x2e1, 0x48c, 0x529, 0x8ad, 0x9fc, 0xa54, 0xa58, 0xa64, 0xab3, 0xd30, 0xd7d, 0xe26, 0xe2f, 0xe41, 0xe55, 0xe6e, 0xe8a, 0xe8e, 0xe9b, 0xe9f, 0xea3, 0xff9, 0x1046, 0x10ef, 0x10f8, 0x110a, 0x111e, 0x1137, 0x1153, 0x1157, 0x1164, 0x1168, 0x116c, 0x11e8, 0x11f1, 0x1203, 0x1217, 0x1230, 0x133f, 0x1352, 0x1353

Function 7:
Public function signature: 0x70a08231
Entry block: 0x2e3
Exit block: 0x31a
Body: 0x2e3, 0x2ea, 0x2ee, 0x31a, 0xafa

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x330
Exit block: 0x343
Body: 0x330, 0x337, 0x33b, 0x343, 0xb43

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x385
Exit block: 0x405
Body: 0x385, 0x38c, 0x390, 0x398, 0x3bd, 0x3c6, 0x3d8, 0x3ec, 0x405, 0xb69

Function 10:
Public function signature: 0xa6f9dae1
Entry block: 0x413
Exit block: 0x44a
Body: 0x413, 0x41a, 0x41e, 0x44a, 0xba2, 0xbfa, 0xbfe

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x44c
Exit block: 0x48c
Body: 0x44c, 0x453, 0x457, 0x48c, 0xc42, 0xc4d, 0xc9c, 0x13ab

Function 12:
Public function signature: 0xbe45fd62
Entry block: 0x4a6
Exit block: 0x48c
Body: 0x48c, 0x4a6, 0x4ad, 0x4b1, 0xf15, 0xf65

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x52b
Exit block: 0x581
Body: 0x52b, 0x532, 0x536, 0x581, 0x1245

Function 14:
Public fallback function
Entry block: 0xce
Exit block: 0xce
Body: 0xce

Function 15:
Private function
Entry block: 0x12e5
Exit block: 0x1339
Body: 0x12e5, 0x12fc, 0x1309, 0x1313, 0x131a, 0x1324, 0x132e, 0x1335, 0x1339, 0x135d, 0x136b, 0x1378, 0x138a, 0x1396, 0x1399, 0x13a1

Function 16:
Private function
Entry block: 0x12cc
Exit block: 0x12da
Body: 0x12cc, 0x12da

