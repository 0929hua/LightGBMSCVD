Block 0x0
[0x0:0x8]
---
Predecessors: []
Successors: []
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 REVERT
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x8: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9
[0x9:0x41]
---
Predecessors: []
Successors: [0x42]
Has unresolved jump.
---
0x9 STOP
0xa LOG1
0xb PUSH6 0x627a7a723058
0x12 SHA3
0x13 MISSING 0xee
0x14 MISSING 0xb2
0x15 EXTCODEHASH
0x16 MISSING 0xcf
0x17 XOR
0x18 PUSH12 0xfbccea62e56cc18d50b5c2aa
0x25 DELEGATECALL
0x26 MISSING 0xed
0x27 SWAP1
0x28 MISSING 0xba
0x29 PUSH21 0x62580713058ddece2e002960606040526004361061
0x3f STOP
0x40 LOG4
0x41 JUMPI
---
0x9: STOP 
0xa: LOG S0 S1 S2
0xb: V3 = 0x627a7a723058
0x12: V4 = SHA3 0x627a7a723058 S3
0x13: MISSING 0xee
0x14: MISSING 0xb2
0x15: V5 = EXTCODEHASH S0
0x16: MISSING 0xcf
0x17: V6 = XOR S0 S1
0x18: V7 = 0xfbccea62e56cc18d50b5c2aa
0x25: V8 = DELEGATECALL 0xfbccea62e56cc18d50b5c2aa V6 S2 S3 S4 S5
0x26: MISSING 0xed
0x28: MISSING 0xba
0x29: V9 = 0x62580713058ddece2e002960606040526004361061
0x3f: STOP 
0x40: LOG S0 S1 S2 S3 S4 S5
0x41: JUMPI S6 S7
---
Entry stack: []
Stack pops: 0
Stack additions: [V4, V5, V8, S1, S0, 0x62580713058ddece2e002960606040526004361061]
Exit stack: []

================================

Block 0x42
[0x42:0x75]
---
Predecessors: [0x9]
Successors: [0x76]
---
0x42 PUSH1 0x0
0x44 CALLDATALOAD
0x45 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x63 SWAP1
0x64 DIV
0x65 PUSH4 0xffffffff
0x6a AND
0x6b DUP1
0x6c PUSH4 0x6fdde03
0x71 EQ
0x72 PUSH2 0xa9
0x75 JUMPI
---
0x42: V10 = 0x0
0x44: V11 = CALLDATALOAD 0x0
0x45: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x64: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x65: V14 = 0xffffffff
0x6a: V15 = AND 0xffffffff V13
0x6c: V16 = 0x6fdde03
0x71: V17 = EQ 0x6fdde03 V15
0x72: V18 = 0xa9
0x75: THROWI V17
---
Entry stack: []
Stack pops: 0
Stack additions: [V15]
Exit stack: [V15]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x42]
Successors: [0x81]
---
0x76 DUP1
0x77 PUSH4 0x95ea7b3
0x7c EQ
0x7d PUSH2 0x137
0x80 JUMPI
---
0x77: V19 = 0x95ea7b3
0x7c: V20 = EQ 0x95ea7b3 V15
0x7d: V21 = 0x137
0x80: THROWI V20
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c]
---
0x81 DUP1
0x82 PUSH4 0x18160ddd
0x87 EQ
0x88 PUSH2 0x191
0x8b JUMPI
---
0x82: V22 = 0x18160ddd
0x87: V23 = EQ 0x18160ddd V15
0x88: V24 = 0x191
0x8b: THROWI V23
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97]
---
0x8c DUP1
0x8d PUSH4 0x23b872dd
0x92 EQ
0x93 PUSH2 0x1ba
0x96 JUMPI
---
0x8d: V25 = 0x23b872dd
0x92: V26 = EQ 0x23b872dd V15
0x93: V27 = 0x1ba
0x96: THROWI V26
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2]
---
0x97 DUP1
0x98 PUSH4 0x313ce567
0x9d EQ
0x9e PUSH2 0x233
0xa1 JUMPI
---
0x98: V28 = 0x313ce567
0x9d: V29 = EQ 0x313ce567 V15
0x9e: V30 = 0x233
0xa1: THROWI V29
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad]
---
0xa2 DUP1
0xa3 PUSH4 0x3eaaf86b
0xa8 EQ
0xa9 PUSH2 0x262
0xac JUMPI
---
0xa3: V31 = 0x3eaaf86b
0xa8: V32 = EQ 0x3eaaf86b V15
0xa9: V33 = 0x262
0xac: THROWI V32
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8]
---
0xad DUP1
0xae PUSH4 0x70a08231
0xb3 EQ
0xb4 PUSH2 0x28b
0xb7 JUMPI
---
0xae: V34 = 0x70a08231
0xb3: V35 = EQ 0x70a08231 V15
0xb4: V36 = 0x28b
0xb7: THROWI V35
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3]
---
0xb8 DUP1
0xb9 PUSH4 0x95d89b41
0xbe EQ
0xbf PUSH2 0x2d8
0xc2 JUMPI
---
0xb9: V37 = 0x95d89b41
0xbe: V38 = EQ 0x95d89b41 V15
0xbf: V39 = 0x2d8
0xc2: THROWI V38
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce]
---
0xc3 DUP1
0xc4 PUSH4 0xa9059cbb
0xc9 EQ
0xca PUSH2 0x366
0xcd JUMPI
---
0xc4: V40 = 0xa9059cbb
0xc9: V41 = EQ 0xa9059cbb V15
0xca: V42 = 0x366
0xcd: THROWI V41
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0xd9]
---
0xce DUP1
0xcf PUSH4 0xdd62ed3e
0xd4 EQ
0xd5 PUSH2 0x3c0
0xd8 JUMPI
---
0xcf: V43 = 0xdd62ed3e
0xd4: V44 = EQ 0xdd62ed3e V15
0xd5: V45 = 0x3c0
0xd8: THROWI V44
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0xd9
[0xd9:0xe4]
---
Predecessors: [0xce]
Successors: [0xe5]
---
0xd9 JUMPDEST
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
0xde JUMPDEST
0xdf CALLVALUE
0xe0 ISZERO
0xe1 PUSH2 0xb4
0xe4 JUMPI
---
0xd9: JUMPDEST 
0xda: V46 = 0x0
0xdd: REVERT 0x0 0x0
0xde: JUMPDEST 
0xdf: V47 = CALLVALUE
0xe0: V48 = ISZERO V47
0xe1: V49 = 0xb4
0xe4: THROWI V48
---
Entry stack: [V15]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe5
[0xe5:0x115]
---
Predecessors: [0xd9]
Successors: [0x116]
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
0xe9 JUMPDEST
0xea PUSH2 0xbc
0xed PUSH2 0x42c
0xf0 JUMP
0xf1 JUMPDEST
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 DUP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa DUP3
0xfb DUP2
0xfc SUB
0xfd DUP3
0xfe MSTORE
0xff DUP4
0x100 DUP2
0x101 DUP2
0x102 MLOAD
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP2
0x109 POP
0x10a DUP1
0x10b MLOAD
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 DUP1
0x112 DUP4
0x113 DUP4
0x114 PUSH1 0x0
---
0xe5: V50 = 0x0
0xe8: REVERT 0x0 0x0
0xe9: JUMPDEST 
0xea: V51 = 0xbc
0xed: V52 = 0x42c
0xf0: THROW 
0xf1: JUMPDEST 
0xf2: V53 = 0x40
0xf4: V54 = M[0x40]
0xf7: V55 = 0x20
0xf9: V56 = ADD 0x20 V54
0xfc: V57 = SUB V56 V54
0xfe: M[V54] = V57
0x102: V58 = M[S0]
0x104: M[V56] = V58
0x105: V59 = 0x20
0x107: V60 = ADD 0x20 V56
0x10b: V61 = M[S0]
0x10d: V62 = 0x20
0x10f: V63 = ADD 0x20 S0
0x114: V64 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbc, 0x0, V63, V60, V61, V61, V63, V60, V54, V54, S0]
Exit stack: []

================================

Block 0x116
[0x116:0x11e]
---
Predecessors: [0xe5]
Successors: [0x11f]
---
0x116 JUMPDEST
0x117 DUP4
0x118 DUP2
0x119 LT
0x11a ISZERO
0x11b PUSH2 0xfc
0x11e JUMPI
---
0x116: JUMPDEST 
0x119: V65 = LT 0x0 V61
0x11a: V66 = ISZERO V65
0x11b: V67 = 0xfc
0x11e: THROWI V66
---
Entry stack: [S9, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]

================================

Block 0x11f
[0x11f:0x144]
---
Predecessors: [0x116]
Successors: [0x145]
---
0x11f DUP1
0x120 DUP3
0x121 ADD
0x122 MLOAD
0x123 DUP2
0x124 DUP5
0x125 ADD
0x126 MSTORE
0x127 PUSH1 0x20
0x129 DUP2
0x12a ADD
0x12b SWAP1
0x12c POP
0x12d PUSH2 0xe1
0x130 JUMP
0x131 JUMPDEST
0x132 POP
0x133 POP
0x134 POP
0x135 POP
0x136 SWAP1
0x137 POP
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b SWAP1
0x13c PUSH1 0x1f
0x13e AND
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x129
0x144 JUMPI
---
0x121: V68 = ADD V63 0x0
0x122: V69 = M[V68]
0x125: V70 = ADD V60 0x0
0x126: M[V70] = V69
0x127: V71 = 0x20
0x12a: V72 = ADD 0x0 0x20
0x12d: V73 = 0xe1
0x130: THROW 
0x131: JUMPDEST 
0x13a: V74 = ADD S4 S6
0x13c: V75 = 0x1f
0x13e: V76 = AND 0x1f S4
0x140: V77 = ISZERO V76
0x141: V78 = 0x129
0x144: THROWI V77
---
Entry stack: [S9, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]
Stack pops: 3
Stack additions: [V76, V74]
Exit stack: []

================================

Block 0x145
[0x145:0x15d]
---
Predecessors: [0x11f]
Successors: [0x15e]
---
0x145 DUP1
0x146 DUP3
0x147 SUB
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x1
0x14c DUP4
0x14d PUSH1 0x20
0x14f SUB
0x150 PUSH2 0x100
0x153 EXP
0x154 SUB
0x155 NOT
0x156 AND
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c SWAP2
0x15d POP
---
0x147: V79 = SUB V74 V76
0x149: V80 = M[V79]
0x14a: V81 = 0x1
0x14d: V82 = 0x20
0x14f: V83 = SUB 0x20 V76
0x150: V84 = 0x100
0x153: V85 = EXP 0x100 V83
0x154: V86 = SUB V85 0x1
0x155: V87 = NOT V86
0x156: V88 = AND V87 V80
0x158: M[V79] = V88
0x159: V89 = 0x20
0x15b: V90 = ADD 0x20 V79
---
Entry stack: [V74, V76]
Stack pops: 2
Stack additions: [V90, S0]
Exit stack: [V90, V76]

================================

Block 0x15e
[0x15e:0x172]
---
Predecessors: [0x145]
Successors: [0x173]
---
0x15e JUMPDEST
0x15f POP
0x160 SWAP3
0x161 POP
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x142
0x172 JUMPI
---
0x15e: JUMPDEST 
0x164: V91 = 0x40
0x166: V92 = M[0x40]
0x169: V93 = SUB V90 V92
0x16b: RETURN V92 V93
0x16c: JUMPDEST 
0x16d: V94 = CALLVALUE
0x16e: V95 = ISZERO V94
0x16f: V96 = 0x142
0x172: THROWI V95
---
Entry stack: [V90, V76]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x173
[0x173:0x1cc]
---
Predecessors: [0x15e]
Successors: [0x1cd]
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
0x177 JUMPDEST
0x178 PUSH2 0x177
0x17b PUSH1 0x4
0x17d DUP1
0x17e DUP1
0x17f CALLDATALOAD
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 SWAP1
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP1
0x19b SWAP2
0x19c SWAP1
0x19d DUP1
0x19e CALLDATALOAD
0x19f SWAP1
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP1
0x1a4 SWAP2
0x1a5 SWAP1
0x1a6 POP
0x1a7 POP
0x1a8 PUSH2 0x465
0x1ab JUMP
0x1ac JUMPDEST
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 DUP3
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP2
0x1bc POP
0x1bd POP
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 RETURN
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x19c
0x1cc JUMPI
---
0x173: V97 = 0x0
0x176: REVERT 0x0 0x0
0x177: JUMPDEST 
0x178: V98 = 0x177
0x17b: V99 = 0x4
0x17f: V100 = CALLDATALOAD 0x4
0x180: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x197: V103 = 0x20
0x199: V104 = ADD 0x20 0x4
0x19e: V105 = CALLDATALOAD 0x24
0x1a0: V106 = 0x20
0x1a2: V107 = ADD 0x20 0x24
0x1a8: V108 = 0x465
0x1ab: THROW 
0x1ac: JUMPDEST 
0x1ad: V109 = 0x40
0x1af: V110 = M[0x40]
0x1b2: V111 = ISZERO S0
0x1b3: V112 = ISZERO V111
0x1b4: V113 = ISZERO V112
0x1b5: V114 = ISZERO V113
0x1b7: M[V110] = V114
0x1b8: V115 = 0x20
0x1ba: V116 = ADD 0x20 V110
0x1be: V117 = 0x40
0x1c0: V118 = M[0x40]
0x1c3: V119 = SUB V116 V118
0x1c5: RETURN V118 V119
0x1c6: JUMPDEST 
0x1c7: V120 = CALLVALUE
0x1c8: V121 = ISZERO V120
0x1c9: V122 = 0x19c
0x1cc: THROWI V121
---
Entry stack: []
Stack pops: 0
Stack additions: [V105, V102, 0x177]
Exit stack: []

================================

Block 0x1cd
[0x1cd:0x1f5]
---
Predecessors: [0x173]
Successors: [0x1f6]
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
0x1d1 JUMPDEST
0x1d2 PUSH2 0x1a4
0x1d5 PUSH2 0x557
0x1d8 JUMP
0x1d9 JUMPDEST
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd DUP1
0x1de DUP3
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 SWAP2
0x1e5 POP
0x1e6 POP
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb SWAP2
0x1ec SUB
0x1ed SWAP1
0x1ee RETURN
0x1ef JUMPDEST
0x1f0 CALLVALUE
0x1f1 ISZERO
0x1f2 PUSH2 0x1c5
0x1f5 JUMPI
---
0x1cd: V123 = 0x0
0x1d0: REVERT 0x0 0x0
0x1d1: JUMPDEST 
0x1d2: V124 = 0x1a4
0x1d5: V125 = 0x557
0x1d8: THROW 
0x1d9: JUMPDEST 
0x1da: V126 = 0x40
0x1dc: V127 = M[0x40]
0x1e0: M[V127] = S0
0x1e1: V128 = 0x20
0x1e3: V129 = ADD 0x20 V127
0x1e7: V130 = 0x40
0x1e9: V131 = M[0x40]
0x1ec: V132 = SUB V129 V131
0x1ee: RETURN V131 V132
0x1ef: JUMPDEST 
0x1f0: V133 = CALLVALUE
0x1f1: V134 = ISZERO V133
0x1f2: V135 = 0x1c5
0x1f5: THROWI V134
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a4]
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x26e]
---
Predecessors: [0x1cd]
Successors: [0x26f]
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
0x1fa JUMPDEST
0x1fb PUSH2 0x219
0x1fe PUSH1 0x4
0x200 DUP1
0x201 DUP1
0x202 CALLDATALOAD
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 AND
0x219 SWAP1
0x21a PUSH1 0x20
0x21c ADD
0x21d SWAP1
0x21e SWAP2
0x21f SWAP1
0x220 DUP1
0x221 CALLDATALOAD
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 SWAP1
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP1
0x23d SWAP2
0x23e SWAP1
0x23f DUP1
0x240 CALLDATALOAD
0x241 SWAP1
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP1
0x246 SWAP2
0x247 SWAP1
0x248 POP
0x249 POP
0x24a PUSH2 0x55f
0x24d JUMP
0x24e JUMPDEST
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 DUP3
0x254 ISZERO
0x255 ISZERO
0x256 ISZERO
0x257 ISZERO
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d SWAP2
0x25e POP
0x25f POP
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP1
0x264 SWAP2
0x265 SUB
0x266 SWAP1
0x267 RETURN
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x23e
0x26e JUMPI
---
0x1f6: V136 = 0x0
0x1f9: REVERT 0x0 0x0
0x1fa: JUMPDEST 
0x1fb: V137 = 0x219
0x1fe: V138 = 0x4
0x202: V139 = CALLDATALOAD 0x4
0x203: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x21a: V142 = 0x20
0x21c: V143 = ADD 0x20 0x4
0x221: V144 = CALLDATALOAD 0x24
0x222: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x239: V147 = 0x20
0x23b: V148 = ADD 0x20 0x24
0x240: V149 = CALLDATALOAD 0x44
0x242: V150 = 0x20
0x244: V151 = ADD 0x20 0x44
0x24a: V152 = 0x55f
0x24d: THROW 
0x24e: JUMPDEST 
0x24f: V153 = 0x40
0x251: V154 = M[0x40]
0x254: V155 = ISZERO S0
0x255: V156 = ISZERO V155
0x256: V157 = ISZERO V156
0x257: V158 = ISZERO V157
0x259: M[V154] = V158
0x25a: V159 = 0x20
0x25c: V160 = ADD 0x20 V154
0x260: V161 = 0x40
0x262: V162 = M[0x40]
0x265: V163 = SUB V160 V162
0x267: RETURN V162 V163
0x268: JUMPDEST 
0x269: V164 = CALLVALUE
0x26a: V165 = ISZERO V164
0x26b: V166 = 0x23e
0x26e: THROWI V165
---
Entry stack: []
Stack pops: 0
Stack additions: [V149, V146, V141, 0x219]
Exit stack: []

================================

Block 0x26f
[0x26f:0x29d]
---
Predecessors: [0x1f6]
Successors: [0x29e]
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
0x273 JUMPDEST
0x274 PUSH2 0x246
0x277 PUSH2 0x7d4
0x27a JUMP
0x27b JUMPDEST
0x27c PUSH1 0x40
0x27e MLOAD
0x27f DUP1
0x280 DUP3
0x281 PUSH1 0xff
0x283 AND
0x284 PUSH1 0xff
0x286 AND
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x20
0x28b ADD
0x28c SWAP2
0x28d POP
0x28e POP
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 SWAP2
0x294 SUB
0x295 SWAP1
0x296 RETURN
0x297 JUMPDEST
0x298 CALLVALUE
0x299 ISZERO
0x29a PUSH2 0x26d
0x29d JUMPI
---
0x26f: V167 = 0x0
0x272: REVERT 0x0 0x0
0x273: JUMPDEST 
0x274: V168 = 0x246
0x277: V169 = 0x7d4
0x27a: THROW 
0x27b: JUMPDEST 
0x27c: V170 = 0x40
0x27e: V171 = M[0x40]
0x281: V172 = 0xff
0x283: V173 = AND 0xff S0
0x284: V174 = 0xff
0x286: V175 = AND 0xff V173
0x288: M[V171] = V175
0x289: V176 = 0x20
0x28b: V177 = ADD 0x20 V171
0x28f: V178 = 0x40
0x291: V179 = M[0x40]
0x294: V180 = SUB V177 V179
0x296: RETURN V179 V180
0x297: JUMPDEST 
0x298: V181 = CALLVALUE
0x299: V182 = ISZERO V181
0x29a: V183 = 0x26d
0x29d: THROWI V182
---
Entry stack: []
Stack pops: 0
Stack additions: [0x246]
Exit stack: []

================================

Block 0x29e
[0x29e:0x2c6]
---
Predecessors: [0x26f]
Successors: [0x2c7]
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
0x2a2 JUMPDEST
0x2a3 PUSH2 0x275
0x2a6 PUSH2 0x7d9
0x2a9 JUMP
0x2aa JUMPDEST
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af DUP3
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 SWAP2
0x2b6 POP
0x2b7 POP
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc SWAP2
0x2bd SUB
0x2be SWAP1
0x2bf RETURN
0x2c0 JUMPDEST
0x2c1 CALLVALUE
0x2c2 ISZERO
0x2c3 PUSH2 0x296
0x2c6 JUMPI
---
0x29e: V184 = 0x0
0x2a1: REVERT 0x0 0x0
0x2a2: JUMPDEST 
0x2a3: V185 = 0x275
0x2a6: V186 = 0x7d9
0x2a9: THROW 
0x2aa: JUMPDEST 
0x2ab: V187 = 0x40
0x2ad: V188 = M[0x40]
0x2b1: M[V188] = S0
0x2b2: V189 = 0x20
0x2b4: V190 = ADD 0x20 V188
0x2b8: V191 = 0x40
0x2ba: V192 = M[0x40]
0x2bd: V193 = SUB V190 V192
0x2bf: RETURN V192 V193
0x2c0: JUMPDEST 
0x2c1: V194 = CALLVALUE
0x2c2: V195 = ISZERO V194
0x2c3: V196 = 0x296
0x2c6: THROWI V195
---
Entry stack: []
Stack pops: 0
Stack additions: [0x275]
Exit stack: []

================================

Block 0x2c7
[0x2c7:0x313]
---
Predecessors: [0x29e]
Successors: [0x314]
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
0x2cb JUMPDEST
0x2cc PUSH2 0x2c2
0x2cf PUSH1 0x4
0x2d1 DUP1
0x2d2 DUP1
0x2d3 CALLDATALOAD
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 AND
0x2ea SWAP1
0x2eb PUSH1 0x20
0x2ed ADD
0x2ee SWAP1
0x2ef SWAP2
0x2f0 SWAP1
0x2f1 POP
0x2f2 POP
0x2f3 PUSH2 0x7e8
0x2f6 JUMP
0x2f7 JUMPDEST
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb DUP1
0x2fc DUP3
0x2fd DUP2
0x2fe MSTORE
0x2ff PUSH1 0x20
0x301 ADD
0x302 SWAP2
0x303 POP
0x304 POP
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 SWAP2
0x30a SUB
0x30b SWAP1
0x30c RETURN
0x30d JUMPDEST
0x30e CALLVALUE
0x30f ISZERO
0x310 PUSH2 0x2e3
0x313 JUMPI
---
0x2c7: V197 = 0x0
0x2ca: REVERT 0x0 0x0
0x2cb: JUMPDEST 
0x2cc: V198 = 0x2c2
0x2cf: V199 = 0x4
0x2d3: V200 = CALLDATALOAD 0x4
0x2d4: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x2eb: V203 = 0x20
0x2ed: V204 = ADD 0x20 0x4
0x2f3: V205 = 0x7e8
0x2f6: THROW 
0x2f7: JUMPDEST 
0x2f8: V206 = 0x40
0x2fa: V207 = M[0x40]
0x2fe: M[V207] = S0
0x2ff: V208 = 0x20
0x301: V209 = ADD 0x20 V207
0x305: V210 = 0x40
0x307: V211 = M[0x40]
0x30a: V212 = SUB V209 V211
0x30c: RETURN V211 V212
0x30d: JUMPDEST 
0x30e: V213 = CALLVALUE
0x30f: V214 = ISZERO V213
0x310: V215 = 0x2e3
0x313: THROWI V214
---
Entry stack: []
Stack pops: 0
Stack additions: [V202, 0x2c2]
Exit stack: []

================================

Block 0x314
[0x314:0x344]
---
Predecessors: [0x2c7]
Successors: [0x345]
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
0x318 JUMPDEST
0x319 PUSH2 0x2eb
0x31c PUSH2 0x830
0x31f JUMP
0x320 JUMPDEST
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP1
0x326 PUSH1 0x20
0x328 ADD
0x329 DUP3
0x32a DUP2
0x32b SUB
0x32c DUP3
0x32d MSTORE
0x32e DUP4
0x32f DUP2
0x330 DUP2
0x331 MLOAD
0x332 DUP2
0x333 MSTORE
0x334 PUSH1 0x20
0x336 ADD
0x337 SWAP2
0x338 POP
0x339 DUP1
0x33a MLOAD
0x33b SWAP1
0x33c PUSH1 0x20
0x33e ADD
0x33f SWAP1
0x340 DUP1
0x341 DUP4
0x342 DUP4
0x343 PUSH1 0x0
---
0x314: V216 = 0x0
0x317: REVERT 0x0 0x0
0x318: JUMPDEST 
0x319: V217 = 0x2eb
0x31c: V218 = 0x830
0x31f: THROW 
0x320: JUMPDEST 
0x321: V219 = 0x40
0x323: V220 = M[0x40]
0x326: V221 = 0x20
0x328: V222 = ADD 0x20 V220
0x32b: V223 = SUB V222 V220
0x32d: M[V220] = V223
0x331: V224 = M[S0]
0x333: M[V222] = V224
0x334: V225 = 0x20
0x336: V226 = ADD 0x20 V222
0x33a: V227 = M[S0]
0x33c: V228 = 0x20
0x33e: V229 = ADD 0x20 S0
0x343: V230 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2eb, 0x0, V229, V226, V227, V227, V229, V226, V220, V220, S0]
Exit stack: []

================================

Block 0x345
[0x345:0x34d]
---
Predecessors: [0x314]
Successors: [0x34e]
---
0x345 JUMPDEST
0x346 DUP4
0x347 DUP2
0x348 LT
0x349 ISZERO
0x34a PUSH2 0x32b
0x34d JUMPI
---
0x345: JUMPDEST 
0x348: V231 = LT 0x0 V227
0x349: V232 = ISZERO V231
0x34a: V233 = 0x32b
0x34d: THROWI V232
---
Entry stack: [S9, V220, V220, V226, V229, V227, V227, V226, V229, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V220, V220, V226, V229, V227, V227, V226, V229, 0x0]

================================

Block 0x34e
[0x34e:0x373]
---
Predecessors: [0x345]
Successors: [0x374]
---
0x34e DUP1
0x34f DUP3
0x350 ADD
0x351 MLOAD
0x352 DUP2
0x353 DUP5
0x354 ADD
0x355 MSTORE
0x356 PUSH1 0x20
0x358 DUP2
0x359 ADD
0x35a SWAP1
0x35b POP
0x35c PUSH2 0x310
0x35f JUMP
0x360 JUMPDEST
0x361 POP
0x362 POP
0x363 POP
0x364 POP
0x365 SWAP1
0x366 POP
0x367 SWAP1
0x368 DUP2
0x369 ADD
0x36a SWAP1
0x36b PUSH1 0x1f
0x36d AND
0x36e DUP1
0x36f ISZERO
0x370 PUSH2 0x358
0x373 JUMPI
---
0x350: V234 = ADD V229 0x0
0x351: V235 = M[V234]
0x354: V236 = ADD V226 0x0
0x355: M[V236] = V235
0x356: V237 = 0x20
0x359: V238 = ADD 0x0 0x20
0x35c: V239 = 0x310
0x35f: THROW 
0x360: JUMPDEST 
0x369: V240 = ADD S4 S6
0x36b: V241 = 0x1f
0x36d: V242 = AND 0x1f S4
0x36f: V243 = ISZERO V242
0x370: V244 = 0x358
0x373: THROWI V243
---
Entry stack: [S9, V220, V220, V226, V229, V227, V227, V226, V229, 0x0]
Stack pops: 3
Stack additions: [V242, V240]
Exit stack: []

================================

Block 0x374
[0x374:0x38c]
---
Predecessors: [0x34e]
Successors: [0x38d]
---
0x374 DUP1
0x375 DUP3
0x376 SUB
0x377 DUP1
0x378 MLOAD
0x379 PUSH1 0x1
0x37b DUP4
0x37c PUSH1 0x20
0x37e SUB
0x37f PUSH2 0x100
0x382 EXP
0x383 SUB
0x384 NOT
0x385 AND
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x20
0x38a ADD
0x38b SWAP2
0x38c POP
---
0x376: V245 = SUB V240 V242
0x378: V246 = M[V245]
0x379: V247 = 0x1
0x37c: V248 = 0x20
0x37e: V249 = SUB 0x20 V242
0x37f: V250 = 0x100
0x382: V251 = EXP 0x100 V249
0x383: V252 = SUB V251 0x1
0x384: V253 = NOT V252
0x385: V254 = AND V253 V246
0x387: M[V245] = V254
0x388: V255 = 0x20
0x38a: V256 = ADD 0x20 V245
---
Entry stack: [V240, V242]
Stack pops: 2
Stack additions: [V256, S0]
Exit stack: [V256, V242]

================================

Block 0x38d
[0x38d:0x3a1]
---
Predecessors: [0x374]
Successors: [0x3a2]
---
0x38d JUMPDEST
0x38e POP
0x38f SWAP3
0x390 POP
0x391 POP
0x392 POP
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a RETURN
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x371
0x3a1 JUMPI
---
0x38d: JUMPDEST 
0x393: V257 = 0x40
0x395: V258 = M[0x40]
0x398: V259 = SUB V256 V258
0x39a: RETURN V258 V259
0x39b: JUMPDEST 
0x39c: V260 = CALLVALUE
0x39d: V261 = ISZERO V260
0x39e: V262 = 0x371
0x3a1: THROWI V261
---
Entry stack: [V256, V242]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x3a2
[0x3a2:0x3fb]
---
Predecessors: [0x38d]
Successors: [0x3fc]
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
0x3a6 JUMPDEST
0x3a7 PUSH2 0x3a6
0x3aa PUSH1 0x4
0x3ac DUP1
0x3ad DUP1
0x3ae CALLDATALOAD
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 SWAP1
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP1
0x3ca SWAP2
0x3cb SWAP1
0x3cc DUP1
0x3cd CALLDATALOAD
0x3ce SWAP1
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 SWAP1
0x3d3 SWAP2
0x3d4 SWAP1
0x3d5 POP
0x3d6 POP
0x3d7 PUSH2 0x869
0x3da JUMP
0x3db JUMPDEST
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df DUP1
0x3e0 DUP3
0x3e1 ISZERO
0x3e2 ISZERO
0x3e3 ISZERO
0x3e4 ISZERO
0x3e5 DUP2
0x3e6 MSTORE
0x3e7 PUSH1 0x20
0x3e9 ADD
0x3ea SWAP2
0x3eb POP
0x3ec POP
0x3ed PUSH1 0x40
0x3ef MLOAD
0x3f0 DUP1
0x3f1 SWAP2
0x3f2 SUB
0x3f3 SWAP1
0x3f4 RETURN
0x3f5 JUMPDEST
0x3f6 CALLVALUE
0x3f7 ISZERO
0x3f8 PUSH2 0x3cb
0x3fb JUMPI
---
0x3a2: V263 = 0x0
0x3a5: REVERT 0x0 0x0
0x3a6: JUMPDEST 
0x3a7: V264 = 0x3a6
0x3aa: V265 = 0x4
0x3ae: V266 = CALLDATALOAD 0x4
0x3af: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x3c6: V269 = 0x20
0x3c8: V270 = ADD 0x20 0x4
0x3cd: V271 = CALLDATALOAD 0x24
0x3cf: V272 = 0x20
0x3d1: V273 = ADD 0x20 0x24
0x3d7: V274 = 0x869
0x3da: THROW 
0x3db: JUMPDEST 
0x3dc: V275 = 0x40
0x3de: V276 = M[0x40]
0x3e1: V277 = ISZERO S0
0x3e2: V278 = ISZERO V277
0x3e3: V279 = ISZERO V278
0x3e4: V280 = ISZERO V279
0x3e6: M[V276] = V280
0x3e7: V281 = 0x20
0x3e9: V282 = ADD 0x20 V276
0x3ed: V283 = 0x40
0x3ef: V284 = M[0x40]
0x3f2: V285 = SUB V282 V284
0x3f4: RETURN V284 V285
0x3f5: JUMPDEST 
0x3f6: V286 = CALLVALUE
0x3f7: V287 = ISZERO V286
0x3f8: V288 = 0x3cb
0x3fb: THROWI V287
---
Entry stack: []
Stack pops: 0
Stack additions: [V271, V268, 0x3a6]
Exit stack: []

================================

Block 0x3fc
[0x3fc:0x61c]
---
Predecessors: [0x3a2]
Successors: [0x61d]
---
0x3fc PUSH1 0x0
0x3fe DUP1
0x3ff REVERT
0x400 JUMPDEST
0x401 PUSH2 0x416
0x404 PUSH1 0x4
0x406 DUP1
0x407 DUP1
0x408 CALLDATALOAD
0x409 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41e AND
0x41f SWAP1
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP1
0x424 SWAP2
0x425 SWAP1
0x426 DUP1
0x427 CALLDATALOAD
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e SWAP1
0x43f PUSH1 0x20
0x441 ADD
0x442 SWAP1
0x443 SWAP2
0x444 SWAP1
0x445 POP
0x446 POP
0x447 PUSH2 0x9cb
0x44a JUMP
0x44b JUMPDEST
0x44c PUSH1 0x40
0x44e MLOAD
0x44f DUP1
0x450 DUP3
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x20
0x455 ADD
0x456 SWAP2
0x457 POP
0x458 POP
0x459 PUSH1 0x40
0x45b MLOAD
0x45c DUP1
0x45d SWAP2
0x45e SUB
0x45f SWAP1
0x460 RETURN
0x461 JUMPDEST
0x462 PUSH1 0x40
0x464 DUP1
0x465 MLOAD
0x466 SWAP1
0x467 DUP2
0x468 ADD
0x469 PUSH1 0x40
0x46b MSTORE
0x46c DUP1
0x46d PUSH1 0x8
0x46f DUP2
0x470 MSTORE
0x471 PUSH1 0x20
0x473 ADD
0x474 PUSH32 0x594f4c4f43415348000000000000000000000000000000000000000000000000
0x495 DUP2
0x496 MSTORE
0x497 POP
0x498 DUP2
0x499 JUMP
0x49a JUMPDEST
0x49b PUSH1 0x0
0x49d DUP2
0x49e PUSH1 0x1
0x4a0 PUSH1 0x0
0x4a2 CALLER
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 AND
0x4b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ce AND
0x4cf DUP2
0x4d0 MSTORE
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP1
0x4d5 DUP2
0x4d6 MSTORE
0x4d7 PUSH1 0x20
0x4d9 ADD
0x4da PUSH1 0x0
0x4dc SHA3
0x4dd PUSH1 0x0
0x4df DUP6
0x4e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f5 AND
0x4f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50b AND
0x50c DUP2
0x50d MSTORE
0x50e PUSH1 0x20
0x510 ADD
0x511 SWAP1
0x512 DUP2
0x513 MSTORE
0x514 PUSH1 0x20
0x516 ADD
0x517 PUSH1 0x0
0x519 SHA3
0x51a DUP2
0x51b SWAP1
0x51c SSTORE
0x51d POP
0x51e DUP3
0x51f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x534 AND
0x535 CALLER
0x536 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54b AND
0x54c PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x56d DUP5
0x56e PUSH1 0x40
0x570 MLOAD
0x571 DUP1
0x572 DUP3
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x20
0x577 ADD
0x578 SWAP2
0x579 POP
0x57a POP
0x57b PUSH1 0x40
0x57d MLOAD
0x57e DUP1
0x57f SWAP2
0x580 SUB
0x581 SWAP1
0x582 LOG3
0x583 PUSH1 0x1
0x585 SWAP1
0x586 POP
0x587 SWAP3
0x588 SWAP2
0x589 POP
0x58a POP
0x58b JUMP
0x58c JUMPDEST
0x58d PUSH1 0x0
0x58f DUP1
0x590 SWAP1
0x591 POP
0x592 SWAP1
0x593 JUMP
0x594 JUMPDEST
0x595 PUSH1 0x0
0x597 DUP2
0x598 PUSH1 0x1
0x59a PUSH1 0x0
0x59c DUP7
0x59d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b2 AND
0x5b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c8 AND
0x5c9 DUP2
0x5ca MSTORE
0x5cb PUSH1 0x20
0x5cd ADD
0x5ce SWAP1
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 PUSH1 0x0
0x5d6 SHA3
0x5d7 PUSH1 0x0
0x5d9 CALLER
0x5da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ef AND
0x5f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x605 AND
0x606 DUP2
0x607 MSTORE
0x608 PUSH1 0x20
0x60a ADD
0x60b SWAP1
0x60c DUP2
0x60d MSTORE
0x60e PUSH1 0x20
0x610 ADD
0x611 PUSH1 0x0
0x613 SHA3
0x614 SLOAD
0x615 LT
0x616 ISZERO
0x617 DUP1
0x618 ISZERO
0x619 PUSH2 0x62b
0x61c JUMPI
---
0x3fc: V289 = 0x0
0x3ff: REVERT 0x0 0x0
0x400: JUMPDEST 
0x401: V290 = 0x416
0x404: V291 = 0x4
0x408: V292 = CALLDATALOAD 0x4
0x409: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x41e: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x420: V295 = 0x20
0x422: V296 = ADD 0x20 0x4
0x427: V297 = CALLDATALOAD 0x24
0x428: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x43f: V300 = 0x20
0x441: V301 = ADD 0x20 0x24
0x447: V302 = 0x9cb
0x44a: THROW 
0x44b: JUMPDEST 
0x44c: V303 = 0x40
0x44e: V304 = M[0x40]
0x452: M[V304] = S0
0x453: V305 = 0x20
0x455: V306 = ADD 0x20 V304
0x459: V307 = 0x40
0x45b: V308 = M[0x40]
0x45e: V309 = SUB V306 V308
0x460: RETURN V308 V309
0x461: JUMPDEST 
0x462: V310 = 0x40
0x465: V311 = M[0x40]
0x468: V312 = ADD V311 0x40
0x469: V313 = 0x40
0x46b: M[0x40] = V312
0x46d: V314 = 0x8
0x470: M[V311] = 0x8
0x471: V315 = 0x20
0x473: V316 = ADD 0x20 V311
0x474: V317 = 0x594f4c4f43415348000000000000000000000000000000000000000000000000
0x496: M[V316] = 0x594f4c4f43415348000000000000000000000000000000000000000000000000
0x499: JUMP S0
0x49a: JUMPDEST 
0x49b: V318 = 0x0
0x49e: V319 = 0x1
0x4a0: V320 = 0x0
0x4a2: V321 = CALLER
0x4a3: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x4b9: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ce: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x4d0: M[0x0] = V325
0x4d1: V326 = 0x20
0x4d3: V327 = ADD 0x20 0x0
0x4d6: M[0x20] = 0x1
0x4d7: V328 = 0x20
0x4d9: V329 = ADD 0x20 0x20
0x4da: V330 = 0x0
0x4dc: V331 = SHA3 0x0 0x40
0x4dd: V332 = 0x0
0x4e0: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f5: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x4f6: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x50d: M[0x0] = V336
0x50e: V337 = 0x20
0x510: V338 = ADD 0x20 0x0
0x513: M[0x20] = V331
0x514: V339 = 0x20
0x516: V340 = ADD 0x20 0x20
0x517: V341 = 0x0
0x519: V342 = SHA3 0x0 0x40
0x51c: S[V342] = S0
0x51f: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x534: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x535: V345 = CALLER
0x536: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x54c: V348 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x56e: V349 = 0x40
0x570: V350 = M[0x40]
0x574: M[V350] = S0
0x575: V351 = 0x20
0x577: V352 = ADD 0x20 V350
0x57b: V353 = 0x40
0x57d: V354 = M[0x40]
0x580: V355 = SUB V352 V354
0x582: LOG V354 V355 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V347 V344
0x583: V356 = 0x1
0x58b: JUMP S2
0x58c: JUMPDEST 
0x58d: V357 = 0x0
0x593: JUMP S0
0x594: JUMPDEST 
0x595: V358 = 0x0
0x598: V359 = 0x1
0x59a: V360 = 0x0
0x59d: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b2: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x5b3: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x5ca: M[0x0] = V364
0x5cb: V365 = 0x20
0x5cd: V366 = ADD 0x20 0x0
0x5d0: M[0x20] = 0x1
0x5d1: V367 = 0x20
0x5d3: V368 = ADD 0x20 0x20
0x5d4: V369 = 0x0
0x5d6: V370 = SHA3 0x0 0x40
0x5d7: V371 = 0x0
0x5d9: V372 = CALLER
0x5da: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x5f0: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x605: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x607: M[0x0] = V376
0x608: V377 = 0x20
0x60a: V378 = ADD 0x20 0x0
0x60d: M[0x20] = V370
0x60e: V379 = 0x20
0x610: V380 = ADD 0x20 0x20
0x611: V381 = 0x0
0x613: V382 = SHA3 0x0 0x40
0x614: V383 = S[V382]
0x615: V384 = LT V383 S0
0x616: V385 = ISZERO V384
0x618: V386 = ISZERO V385
0x619: V387 = 0x62b
0x61c: THROWI V386
---
Entry stack: []
Stack pops: 0
Stack additions: [V299, V294, 0x416, V311, S0, 0x1, 0x0, V385, 0x0, S0, S1, S2]
Exit stack: []

================================

Block 0x61d
[0x61d:0x65f]
---
Predecessors: [0x3fc]
Successors: [0x660]
---
0x61d POP
0x61e DUP2
0x61f PUSH1 0x0
0x621 DUP1
0x622 DUP7
0x623 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x638 AND
0x639 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64e AND
0x64f DUP2
0x650 MSTORE
0x651 PUSH1 0x20
0x653 ADD
0x654 SWAP1
0x655 DUP2
0x656 MSTORE
0x657 PUSH1 0x20
0x659 ADD
0x65a PUSH1 0x0
0x65c SHA3
0x65d SLOAD
0x65e LT
0x65f ISZERO
---
0x61f: V388 = 0x0
0x623: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x638: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x639: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x650: M[0x0] = V392
0x651: V393 = 0x20
0x653: V394 = ADD 0x20 0x0
0x656: M[0x20] = 0x0
0x657: V395 = 0x20
0x659: V396 = ADD 0x20 0x20
0x65a: V397 = 0x0
0x65c: V398 = SHA3 0x0 0x40
0x65d: V399 = S[V398]
0x65e: V400 = LT V399 S2
0x65f: V401 = ISZERO V400
---
Entry stack: [S4, S3, S2, 0x0, V385]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V401]
Exit stack: [S4, S3, S2, 0x0, V401]

================================

Block 0x660
[0x660:0x666]
---
Predecessors: [0x61d]
Successors: [0x667]
---
0x660 JUMPDEST
0x661 DUP1
0x662 ISZERO
0x663 PUSH2 0x637
0x666 JUMPI
---
0x660: JUMPDEST 
0x662: V402 = ISZERO V401
0x663: V403 = 0x637
0x666: THROWI V402
---
Entry stack: [S4, S3, S2, 0x0, V401]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, 0x0, V401]

================================

Block 0x667
[0x667:0x66b]
---
Predecessors: [0x660]
Successors: [0x66c]
---
0x667 POP
0x668 PUSH1 0x0
0x66a DUP3
0x66b GT
---
0x668: V404 = 0x0
0x66b: V405 = GT S2 0x0
---
Entry stack: [S4, S3, S2, 0x0, V401]
Stack pops: 3
Stack additions: [S2, S1, V405]
Exit stack: [S4, S3, S2, 0x0, V405]

================================

Block 0x66c
[0x66c:0x672]
---
Predecessors: [0x667]
Successors: [0x673]
---
0x66c JUMPDEST
0x66d ISZERO
0x66e ISZERO
0x66f PUSH2 0x642
0x672 JUMPI
---
0x66c: JUMPDEST 
0x66d: V406 = ISZERO V405
0x66e: V407 = ISZERO V406
0x66f: V408 = 0x642
0x672: THROWI V407
---
Entry stack: [S4, S3, S2, 0x0, V405]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, 0x0]

================================

Block 0x673
[0x673:0x8e8]
---
Predecessors: [0x66c]
Successors: [0x8e9]
---
0x673 PUSH1 0x0
0x675 DUP1
0x676 REVERT
0x677 JUMPDEST
0x678 DUP2
0x679 PUSH1 0x0
0x67b DUP1
0x67c DUP7
0x67d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x692 AND
0x693 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a8 AND
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x20
0x6ad ADD
0x6ae SWAP1
0x6af DUP2
0x6b0 MSTORE
0x6b1 PUSH1 0x20
0x6b3 ADD
0x6b4 PUSH1 0x0
0x6b6 SHA3
0x6b7 PUSH1 0x0
0x6b9 DUP3
0x6ba DUP3
0x6bb SLOAD
0x6bc SUB
0x6bd SWAP3
0x6be POP
0x6bf POP
0x6c0 DUP2
0x6c1 SWAP1
0x6c2 SSTORE
0x6c3 POP
0x6c4 DUP2
0x6c5 PUSH1 0x0
0x6c7 DUP1
0x6c8 DUP6
0x6c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6de AND
0x6df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f4 AND
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 ADD
0x6fa SWAP1
0x6fb DUP2
0x6fc MSTORE
0x6fd PUSH1 0x20
0x6ff ADD
0x700 PUSH1 0x0
0x702 SHA3
0x703 PUSH1 0x0
0x705 DUP3
0x706 DUP3
0x707 SLOAD
0x708 ADD
0x709 SWAP3
0x70a POP
0x70b POP
0x70c DUP2
0x70d SWAP1
0x70e SSTORE
0x70f POP
0x710 DUP2
0x711 PUSH1 0x1
0x713 PUSH1 0x0
0x715 DUP7
0x716 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72b AND
0x72c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x741 AND
0x742 DUP2
0x743 MSTORE
0x744 PUSH1 0x20
0x746 ADD
0x747 SWAP1
0x748 DUP2
0x749 MSTORE
0x74a PUSH1 0x20
0x74c ADD
0x74d PUSH1 0x0
0x74f SHA3
0x750 PUSH1 0x0
0x752 CALLER
0x753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x768 AND
0x769 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77e AND
0x77f DUP2
0x780 MSTORE
0x781 PUSH1 0x20
0x783 ADD
0x784 SWAP1
0x785 DUP2
0x786 MSTORE
0x787 PUSH1 0x20
0x789 ADD
0x78a PUSH1 0x0
0x78c SHA3
0x78d PUSH1 0x0
0x78f DUP3
0x790 DUP3
0x791 SLOAD
0x792 SUB
0x793 SWAP3
0x794 POP
0x795 POP
0x796 DUP2
0x797 SWAP1
0x798 SSTORE
0x799 POP
0x79a DUP3
0x79b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b0 AND
0x7b1 DUP5
0x7b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c7 AND
0x7c8 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7e9 DUP5
0x7ea PUSH1 0x40
0x7ec MLOAD
0x7ed DUP1
0x7ee DUP3
0x7ef DUP2
0x7f0 MSTORE
0x7f1 PUSH1 0x20
0x7f3 ADD
0x7f4 SWAP2
0x7f5 POP
0x7f6 POP
0x7f7 PUSH1 0x40
0x7f9 MLOAD
0x7fa DUP1
0x7fb SWAP2
0x7fc SUB
0x7fd SWAP1
0x7fe LOG3
0x7ff PUSH1 0x1
0x801 SWAP1
0x802 POP
0x803 SWAP4
0x804 SWAP3
0x805 POP
0x806 POP
0x807 POP
0x808 JUMP
0x809 JUMPDEST
0x80a PUSH1 0x12
0x80c DUP2
0x80d JUMP
0x80e JUMPDEST
0x80f PUSH11 0x244dd562c8f172e8e00000
0x81b DUP2
0x81c JUMP
0x81d JUMPDEST
0x81e PUSH1 0x0
0x820 DUP1
0x821 PUSH1 0x0
0x823 DUP4
0x824 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x839 AND
0x83a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84f AND
0x850 DUP2
0x851 MSTORE
0x852 PUSH1 0x20
0x854 ADD
0x855 SWAP1
0x856 DUP2
0x857 MSTORE
0x858 PUSH1 0x20
0x85a ADD
0x85b PUSH1 0x0
0x85d SHA3
0x85e SLOAD
0x85f SWAP1
0x860 POP
0x861 SWAP2
0x862 SWAP1
0x863 POP
0x864 JUMP
0x865 JUMPDEST
0x866 PUSH1 0x40
0x868 DUP1
0x869 MLOAD
0x86a SWAP1
0x86b DUP2
0x86c ADD
0x86d PUSH1 0x40
0x86f MSTORE
0x870 DUP1
0x871 PUSH1 0x3
0x873 DUP2
0x874 MSTORE
0x875 PUSH1 0x20
0x877 ADD
0x878 PUSH32 0x594c430000000000000000000000000000000000000000000000000000000000
0x899 DUP2
0x89a MSTORE
0x89b POP
0x89c DUP2
0x89d JUMP
0x89e JUMPDEST
0x89f PUSH1 0x0
0x8a1 DUP2
0x8a2 PUSH1 0x0
0x8a4 DUP1
0x8a5 CALLER
0x8a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bb AND
0x8bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d1 AND
0x8d2 DUP2
0x8d3 MSTORE
0x8d4 PUSH1 0x20
0x8d6 ADD
0x8d7 SWAP1
0x8d8 DUP2
0x8d9 MSTORE
0x8da PUSH1 0x20
0x8dc ADD
0x8dd PUSH1 0x0
0x8df SHA3
0x8e0 SLOAD
0x8e1 LT
0x8e2 ISZERO
0x8e3 DUP1
0x8e4 ISZERO
0x8e5 PUSH2 0x8b9
0x8e8 JUMPI
---
0x673: V409 = 0x0
0x676: REVERT 0x0 0x0
0x677: JUMPDEST 
0x679: V410 = 0x0
0x67d: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x692: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x693: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x6aa: M[0x0] = V414
0x6ab: V415 = 0x20
0x6ad: V416 = ADD 0x20 0x0
0x6b0: M[0x20] = 0x0
0x6b1: V417 = 0x20
0x6b3: V418 = ADD 0x20 0x20
0x6b4: V419 = 0x0
0x6b6: V420 = SHA3 0x0 0x40
0x6b7: V421 = 0x0
0x6bb: V422 = S[V420]
0x6bc: V423 = SUB V422 S1
0x6c2: S[V420] = V423
0x6c5: V424 = 0x0
0x6c9: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6df: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x6f6: M[0x0] = V428
0x6f7: V429 = 0x20
0x6f9: V430 = ADD 0x20 0x0
0x6fc: M[0x20] = 0x0
0x6fd: V431 = 0x20
0x6ff: V432 = ADD 0x20 0x20
0x700: V433 = 0x0
0x702: V434 = SHA3 0x0 0x40
0x703: V435 = 0x0
0x707: V436 = S[V434]
0x708: V437 = ADD V436 S1
0x70e: S[V434] = V437
0x711: V438 = 0x1
0x713: V439 = 0x0
0x716: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x72b: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x72c: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x741: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x743: M[0x0] = V443
0x744: V444 = 0x20
0x746: V445 = ADD 0x20 0x0
0x749: M[0x20] = 0x1
0x74a: V446 = 0x20
0x74c: V447 = ADD 0x20 0x20
0x74d: V448 = 0x0
0x74f: V449 = SHA3 0x0 0x40
0x750: V450 = 0x0
0x752: V451 = CALLER
0x753: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x768: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x769: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x77e: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x780: M[0x0] = V455
0x781: V456 = 0x20
0x783: V457 = ADD 0x20 0x0
0x786: M[0x20] = V449
0x787: V458 = 0x20
0x789: V459 = ADD 0x20 0x20
0x78a: V460 = 0x0
0x78c: V461 = SHA3 0x0 0x40
0x78d: V462 = 0x0
0x791: V463 = S[V461]
0x792: V464 = SUB V463 S1
0x798: S[V461] = V464
0x79b: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b0: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x7b2: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c7: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7c8: V469 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7ea: V470 = 0x40
0x7ec: V471 = M[0x40]
0x7f0: M[V471] = S1
0x7f1: V472 = 0x20
0x7f3: V473 = ADD 0x20 V471
0x7f7: V474 = 0x40
0x7f9: V475 = M[0x40]
0x7fc: V476 = SUB V473 V475
0x7fe: LOG V475 V476 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V468 V466
0x7ff: V477 = 0x1
0x808: JUMP S4
0x809: JUMPDEST 
0x80a: V478 = 0x12
0x80d: JUMP S0
0x80e: JUMPDEST 
0x80f: V479 = 0x244dd562c8f172e8e00000
0x81c: JUMP S0
0x81d: JUMPDEST 
0x81e: V480 = 0x0
0x821: V481 = 0x0
0x824: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x839: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x83a: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x84f: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x851: M[0x0] = V485
0x852: V486 = 0x20
0x854: V487 = ADD 0x20 0x0
0x857: M[0x20] = 0x0
0x858: V488 = 0x20
0x85a: V489 = ADD 0x20 0x20
0x85b: V490 = 0x0
0x85d: V491 = SHA3 0x0 0x40
0x85e: V492 = S[V491]
0x864: JUMP S1
0x865: JUMPDEST 
0x866: V493 = 0x40
0x869: V494 = M[0x40]
0x86c: V495 = ADD V494 0x40
0x86d: V496 = 0x40
0x86f: M[0x40] = V495
0x871: V497 = 0x3
0x874: M[V494] = 0x3
0x875: V498 = 0x20
0x877: V499 = ADD 0x20 V494
0x878: V500 = 0x594c430000000000000000000000000000000000000000000000000000000000
0x89a: M[V499] = 0x594c430000000000000000000000000000000000000000000000000000000000
0x89d: JUMP S0
0x89e: JUMPDEST 
0x89f: V501 = 0x0
0x8a2: V502 = 0x0
0x8a5: V503 = CALLER
0x8a6: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x8bc: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d1: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x8d3: M[0x0] = V507
0x8d4: V508 = 0x20
0x8d6: V509 = ADD 0x20 0x0
0x8d9: M[0x20] = 0x0
0x8da: V510 = 0x20
0x8dc: V511 = ADD 0x20 0x20
0x8dd: V512 = 0x0
0x8df: V513 = SHA3 0x0 0x40
0x8e0: V514 = S[V513]
0x8e1: V515 = LT V514 S0
0x8e2: V516 = ISZERO V515
0x8e4: V517 = ISZERO V516
0x8e5: V518 = 0x8b9
0x8e8: THROWI V517
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x1, 0x12, S0, 0x244dd562c8f172e8e00000, S0, V492, V494, S0, V516, 0x0, S0]
Exit stack: []

================================

Block 0x8e9
[0x8e9:0x8ed]
---
Predecessors: [0x673]
Successors: [0x8ee]
---
0x8e9 POP
0x8ea PUSH1 0x0
0x8ec DUP3
0x8ed GT
---
0x8ea: V519 = 0x0
0x8ed: V520 = GT S2 0x0
---
Entry stack: [S2, 0x0, V516]
Stack pops: 3
Stack additions: [S2, S1, V520]
Exit stack: [S2, 0x0, V520]

================================

Block 0x8ee
[0x8ee:0x8f4]
---
Predecessors: [0x8e9]
Successors: [0x8f5]
---
0x8ee JUMPDEST
0x8ef ISZERO
0x8f0 ISZERO
0x8f1 PUSH2 0x8c4
0x8f4 JUMPI
---
0x8ee: JUMPDEST 
0x8ef: V521 = ISZERO V520
0x8f0: V522 = ISZERO V521
0x8f1: V523 = 0x8c4
0x8f4: THROWI V522
---
Entry stack: [S2, 0x0, V520]
Stack pops: 1
Stack additions: []
Exit stack: [S2, 0x0]

================================

Block 0x8f5
[0x8f5:0xac3]
---
Predecessors: [0x8ee]
Successors: []
---
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 REVERT
0x8f9 JUMPDEST
0x8fa DUP2
0x8fb PUSH1 0x0
0x8fd DUP1
0x8fe CALLER
0x8ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x914 AND
0x915 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92a AND
0x92b DUP2
0x92c MSTORE
0x92d PUSH1 0x20
0x92f ADD
0x930 SWAP1
0x931 DUP2
0x932 MSTORE
0x933 PUSH1 0x20
0x935 ADD
0x936 PUSH1 0x0
0x938 SHA3
0x939 PUSH1 0x0
0x93b DUP3
0x93c DUP3
0x93d SLOAD
0x93e SUB
0x93f SWAP3
0x940 POP
0x941 POP
0x942 DUP2
0x943 SWAP1
0x944 SSTORE
0x945 POP
0x946 DUP2
0x947 PUSH1 0x0
0x949 DUP1
0x94a DUP6
0x94b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x960 AND
0x961 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x976 AND
0x977 DUP2
0x978 MSTORE
0x979 PUSH1 0x20
0x97b ADD
0x97c SWAP1
0x97d DUP2
0x97e MSTORE
0x97f PUSH1 0x20
0x981 ADD
0x982 PUSH1 0x0
0x984 SHA3
0x985 PUSH1 0x0
0x987 DUP3
0x988 DUP3
0x989 SLOAD
0x98a ADD
0x98b SWAP3
0x98c POP
0x98d POP
0x98e DUP2
0x98f SWAP1
0x990 SSTORE
0x991 POP
0x992 DUP3
0x993 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a8 AND
0x9a9 CALLER
0x9aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bf AND
0x9c0 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9e1 DUP5
0x9e2 PUSH1 0x40
0x9e4 MLOAD
0x9e5 DUP1
0x9e6 DUP3
0x9e7 DUP2
0x9e8 MSTORE
0x9e9 PUSH1 0x20
0x9eb ADD
0x9ec SWAP2
0x9ed POP
0x9ee POP
0x9ef PUSH1 0x40
0x9f1 MLOAD
0x9f2 DUP1
0x9f3 SWAP2
0x9f4 SUB
0x9f5 SWAP1
0x9f6 LOG3
0x9f7 PUSH1 0x1
0x9f9 SWAP1
0x9fa POP
0x9fb SWAP3
0x9fc SWAP2
0x9fd POP
0x9fe POP
0x9ff JUMP
0xa00 JUMPDEST
0xa01 PUSH1 0x0
0xa03 PUSH1 0x1
0xa05 PUSH1 0x0
0xa07 DUP5
0xa08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1d AND
0xa1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa33 AND
0xa34 DUP2
0xa35 MSTORE
0xa36 PUSH1 0x20
0xa38 ADD
0xa39 SWAP1
0xa3a DUP2
0xa3b MSTORE
0xa3c PUSH1 0x20
0xa3e ADD
0xa3f PUSH1 0x0
0xa41 SHA3
0xa42 PUSH1 0x0
0xa44 DUP4
0xa45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5a AND
0xa5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa70 AND
0xa71 DUP2
0xa72 MSTORE
0xa73 PUSH1 0x20
0xa75 ADD
0xa76 SWAP1
0xa77 DUP2
0xa78 MSTORE
0xa79 PUSH1 0x20
0xa7b ADD
0xa7c PUSH1 0x0
0xa7e SHA3
0xa7f SLOAD
0xa80 SWAP1
0xa81 POP
0xa82 SWAP3
0xa83 SWAP2
0xa84 POP
0xa85 POP
0xa86 JUMP
0xa87 STOP
0xa88 LOG1
0xa89 PUSH6 0x627a7a723058
0xa90 SHA3
0xa91 SWAP13
0xa92 MISSING 0x49
0xa93 PUSH9 0xbc20aae5cdfae53c31
0xa9d DUP16
0xa9e SWAP3
0xa9f XOR
0xaa0 SWAP8
0xaa1 SWAP6
0xaa2 MISSING 0xad
0xaa3 AND
0xaa4 CALLCODE
0xaa5 SWAP9
0xaa6 PUSH29 0x5ebe873ed0bf10d092160029
---
0x8f5: V524 = 0x0
0x8f8: REVERT 0x0 0x0
0x8f9: JUMPDEST 
0x8fb: V525 = 0x0
0x8fe: V526 = CALLER
0x8ff: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0x914: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x915: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x92a: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x92c: M[0x0] = V530
0x92d: V531 = 0x20
0x92f: V532 = ADD 0x20 0x0
0x932: M[0x20] = 0x0
0x933: V533 = 0x20
0x935: V534 = ADD 0x20 0x20
0x936: V535 = 0x0
0x938: V536 = SHA3 0x0 0x40
0x939: V537 = 0x0
0x93d: V538 = S[V536]
0x93e: V539 = SUB V538 S1
0x944: S[V536] = V539
0x947: V540 = 0x0
0x94b: V541 = 0xffffffffffffffffffffffffffffffffffffffff
0x960: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x961: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0x976: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x978: M[0x0] = V544
0x979: V545 = 0x20
0x97b: V546 = ADD 0x20 0x0
0x97e: M[0x20] = 0x0
0x97f: V547 = 0x20
0x981: V548 = ADD 0x20 0x20
0x982: V549 = 0x0
0x984: V550 = SHA3 0x0 0x40
0x985: V551 = 0x0
0x989: V552 = S[V550]
0x98a: V553 = ADD V552 S1
0x990: S[V550] = V553
0x993: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a8: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9a9: V556 = CALLER
0x9aa: V557 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V556
0x9c0: V559 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9e2: V560 = 0x40
0x9e4: V561 = M[0x40]
0x9e8: M[V561] = S1
0x9e9: V562 = 0x20
0x9eb: V563 = ADD 0x20 V561
0x9ef: V564 = 0x40
0x9f1: V565 = M[0x40]
0x9f4: V566 = SUB V563 V565
0x9f6: LOG V565 V566 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V558 V555
0x9f7: V567 = 0x1
0x9ff: JUMP S3
0xa00: JUMPDEST 
0xa01: V568 = 0x0
0xa03: V569 = 0x1
0xa05: V570 = 0x0
0xa08: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1d: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa1e: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0xa33: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0xa35: M[0x0] = V574
0xa36: V575 = 0x20
0xa38: V576 = ADD 0x20 0x0
0xa3b: M[0x20] = 0x1
0xa3c: V577 = 0x20
0xa3e: V578 = ADD 0x20 0x20
0xa3f: V579 = 0x0
0xa41: V580 = SHA3 0x0 0x40
0xa42: V581 = 0x0
0xa45: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5a: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa5b: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0xa70: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0xa72: M[0x0] = V585
0xa73: V586 = 0x20
0xa75: V587 = ADD 0x20 0x0
0xa78: M[0x20] = V580
0xa79: V588 = 0x20
0xa7b: V589 = ADD 0x20 0x20
0xa7c: V590 = 0x0
0xa7e: V591 = SHA3 0x0 0x40
0xa7f: V592 = S[V591]
0xa86: JUMP S2
0xa87: STOP 
0xa88: LOG S0 S1 S2
0xa89: V593 = 0x627a7a723058
0xa90: V594 = SHA3 0x627a7a723058 S3
0xa92: MISSING 0x49
0xa93: V595 = 0xbc20aae5cdfae53c31
0xa9f: V596 = XOR S1 0xbc20aae5cdfae53c31
0xaa2: MISSING 0xad
0xaa3: V597 = AND S0 S1
0xaa4: V598 = CALLCODE V597 S2 S3 S4 S5 S6 S7
0xaa6: V599 = 0x5ebe873ed0bf10d092160029
---
Entry stack: [S1, 0x0]
Stack pops: 0
Stack additions: [0x1, V592, S16, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V594, S5, S0, S14, S2, S3, S4, S7, S6, V596, S8, S9, S10, S11, S12, S13, S14, 0x5ebe873ed0bf10d092160029, S16, S8, S9, S10, S11, S12, S13, S14, S15, V598]
Exit stack: []

================================

Function 0:
Public function signature: 0xdd62ed3e
Entry block: 0xd9
Exit block: 0x8f5
Body: 0xd9, 0xe5, 0x116, 0x11f, 0x145, 0x15e, 0x173, 0x1cd, 0x1f6, 0x26f, 0x29e, 0x2c7, 0x314, 0x345, 0x34e, 0x374, 0x38d, 0x3a2, 0x3fc, 0x61d, 0x660, 0x667, 0x66c, 0x673, 0x8e9, 0x8ee, 0x8f5

Function 1:
Public fallback function
Entry block: 0xd9
Exit block: 0xd9
Body: 0xd9

