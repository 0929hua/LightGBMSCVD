Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xdb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xdb
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xdb
0xc: JUMPI 0xdb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xe0]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xe0
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xe0
0x40: JUMPI 0xe0 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x16e]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x16e
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x16e
0x4b: JUMPI 0x16e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1c8]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x1c8
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x1c8
0x56: JUMPI 0x1c8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1f1]
---
0x57 DUP1
0x58 PUSH4 0x23b872dd
0x5d EQ
0x5e PUSH2 0x1f1
0x61 JUMPI
---
0x58: V21 = 0x23b872dd
0x5d: V22 = EQ 0x23b872dd V11
0x5e: V23 = 0x1f1
0x61: JUMPI 0x1f1 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x26a]
---
0x62 DUP1
0x63 PUSH4 0x313ce567
0x68 EQ
0x69 PUSH2 0x26a
0x6c JUMPI
---
0x63: V24 = 0x313ce567
0x68: V25 = EQ 0x313ce567 V11
0x69: V26 = 0x26a
0x6c: JUMPI 0x26a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x299]
---
0x6d DUP1
0x6e PUSH4 0x4d2301cc
0x73 EQ
0x74 PUSH2 0x299
0x77 JUMPI
---
0x6e: V27 = 0x4d2301cc
0x73: V28 = EQ 0x4d2301cc V11
0x74: V29 = 0x299
0x77: JUMPI 0x299 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2e6]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x2e6
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x2e6
0x82: JUMPI 0x2e6 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x333]
---
0x83 DUP1
0x84 PUSH4 0x95d89b41
0x89 EQ
0x8a PUSH2 0x333
0x8d JUMPI
---
0x84: V33 = 0x95d89b41
0x89: V34 = EQ 0x95d89b41 V11
0x8a: V35 = 0x333
0x8d: JUMPI 0x333 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x3c1]
---
0x8e DUP1
0x8f PUSH4 0x9b1cbccc
0x94 EQ
0x95 PUSH2 0x3c1
0x98 JUMPI
---
0x8f: V36 = 0x9b1cbccc
0x94: V37 = EQ 0x9b1cbccc V11
0x95: V38 = 0x3c1
0x98: JUMPI 0x3c1 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x3ee]
---
0x99 DUP1
0x9a PUSH4 0xa9059cbb
0x9f EQ
0xa0 PUSH2 0x3ee
0xa3 JUMPI
---
0x9a: V39 = 0xa9059cbb
0x9f: V40 = EQ 0xa9059cbb V11
0xa0: V41 = 0x3ee
0xa3: JUMPI 0x3ee V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x448]
---
0xa4 DUP1
0xa5 PUSH4 0xbfe1292a
0xaa EQ
0xab PUSH2 0x448
0xae JUMPI
---
0xa5: V42 = 0xbfe1292a
0xaa: V43 = EQ 0xbfe1292a V11
0xab: V44 = 0x448
0xae: JUMPI 0x448 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x4b4]
---
0xaf DUP1
0xb0 PUSH4 0xc108d542
0xb5 EQ
0xb6 PUSH2 0x4b4
0xb9 JUMPI
---
0xb0: V45 = 0xc108d542
0xb5: V46 = EQ 0xc108d542 V11
0xb6: V47 = 0x4b4
0xb9: JUMPI 0x4b4 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x4e1]
---
0xba DUP1
0xbb PUSH4 0xdd62ed3e
0xc0 EQ
0xc1 PUSH2 0x4e1
0xc4 JUMPI
---
0xbb: V48 = 0xdd62ed3e
0xc0: V49 = EQ 0xdd62ed3e V11
0xc1: V50 = 0x4e1
0xc4: JUMPI 0x4e1 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x54d]
---
0xc5 DUP1
0xc6 PUSH4 0xe58fc54c
0xcb EQ
0xcc PUSH2 0x54d
0xcf JUMPI
---
0xc6: V51 = 0xe58fc54c
0xcb: V52 = EQ 0xe58fc54c V11
0xcc: V53 = 0x54d
0xcf: JUMPI 0x54d V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0xc5]
Successors: [0xdb, 0x59e]
---
0xd0 DUP1
0xd1 PUSH4 0xf2fde38b
0xd6 EQ
0xd7 PUSH2 0x59e
0xda JUMPI
---
0xd1: V54 = 0xf2fde38b
0xd6: V55 = EQ 0xf2fde38b V11
0xd7: V56 = 0x59e
0xda: JUMPI 0x59e V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xdf]
---
Predecessors: [0x0, 0xd0]
Successors: []
---
0xdb JUMPDEST
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdb: JUMPDEST 
0xdc: V57 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0xd]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V58 = CALLVALUE
0xe2: V59 = ISZERO V58
0xe3: V60 = 0xeb
0xe6: JUMPI 0xeb V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V61 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe0]
Successors: [0x5d7]
---
0xeb JUMPDEST
0xec PUSH2 0xf3
0xef PUSH2 0x5d7
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V62 = 0xf3
0xef: V63 = 0x5d7
0xf2: JUMP 0x5d7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V11, 0xf3]

================================

Block 0xf3
[0xf3:0x117]
---
Predecessors: [0x5df, 0xb46]
Successors: [0x118]
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP1
0xf9 PUSH1 0x20
0xfb ADD
0xfc DUP3
0xfd DUP2
0xfe SUB
0xff DUP3
0x100 MSTORE
0x101 DUP4
0x102 DUP2
0x103 DUP2
0x104 MLOAD
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP2
0x10b POP
0x10c DUP1
0x10d MLOAD
0x10e SWAP1
0x10f PUSH1 0x20
0x111 ADD
0x112 SWAP1
0x113 DUP1
0x114 DUP4
0x115 DUP4
0x116 PUSH1 0x0
---
0xf3: JUMPDEST 
0xf4: V64 = 0x40
0xf6: V65 = M[0x40]
0xf9: V66 = 0x20
0xfb: V67 = ADD 0x20 V65
0xfe: V68 = SUB V67 V65
0x100: M[V65] = V68
0x104: V69 = M[S0]
0x106: M[V67] = V69
0x107: V70 = 0x20
0x109: V71 = ADD 0x20 V67
0x10d: V72 = M[S0]
0x10f: V73 = 0x20
0x111: V74 = ADD 0x20 S0
0x116: V75 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]
Exit stack: [V11, S0, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0xf3, 0x121]
Successors: [0x121, 0x133]
---
0x118 JUMPDEST
0x119 DUP4
0x11a DUP2
0x11b LT
0x11c ISZERO
0x11d PUSH2 0x133
0x120 JUMPI
---
0x118: JUMPDEST 
0x11b: V76 = LT S0 V72
0x11c: V77 = ISZERO V76
0x11d: V78 = 0x133
0x120: JUMPI 0x133 V77
---
Entry stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]

================================

Block 0x121
[0x121:0x132]
---
Predecessors: [0x118]
Successors: [0x118]
---
0x121 DUP1
0x122 DUP3
0x123 ADD
0x124 MLOAD
0x125 DUP2
0x126 DUP5
0x127 ADD
0x128 MSTORE
0x129 PUSH1 0x20
0x12b DUP2
0x12c ADD
0x12d SWAP1
0x12e POP
0x12f PUSH2 0x118
0x132 JUMP
---
0x123: V79 = ADD V74 S0
0x124: V80 = M[V79]
0x127: V81 = ADD V71 S0
0x128: M[V81] = V80
0x129: V82 = 0x20
0x12c: V83 = ADD S0 0x20
0x12f: V84 = 0x118
0x132: JUMP 0x118
---
Entry stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 3
Stack additions: [S2, S1, V83]
Exit stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, V83]

================================

Block 0x133
[0x133:0x146]
---
Predecessors: [0x118]
Successors: [0x147, 0x160]
---
0x133 JUMPDEST
0x134 POP
0x135 POP
0x136 POP
0x137 POP
0x138 SWAP1
0x139 POP
0x13a SWAP1
0x13b DUP2
0x13c ADD
0x13d SWAP1
0x13e PUSH1 0x1f
0x140 AND
0x141 DUP1
0x142 ISZERO
0x143 PUSH2 0x160
0x146 JUMPI
---
0x133: JUMPDEST 
0x13c: V85 = ADD V72 V71
0x13e: V86 = 0x1f
0x140: V87 = AND 0x1f V72
0x142: V88 = ISZERO V87
0x143: V89 = 0x160
0x146: JUMPI 0x160 V88
---
Entry stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 7
Stack additions: [V85, V87]
Exit stack: [V11, S9, V65, V65, V85, V87]

================================

Block 0x147
[0x147:0x15f]
---
Predecessors: [0x133]
Successors: [0x160]
---
0x147 DUP1
0x148 DUP3
0x149 SUB
0x14a DUP1
0x14b MLOAD
0x14c PUSH1 0x1
0x14e DUP4
0x14f PUSH1 0x20
0x151 SUB
0x152 PUSH2 0x100
0x155 EXP
0x156 SUB
0x157 NOT
0x158 AND
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP2
0x15f POP
---
0x149: V90 = SUB V85 V87
0x14b: V91 = M[V90]
0x14c: V92 = 0x1
0x14f: V93 = 0x20
0x151: V94 = SUB 0x20 V87
0x152: V95 = 0x100
0x155: V96 = EXP 0x100 V94
0x156: V97 = SUB V96 0x1
0x157: V98 = NOT V97
0x158: V99 = AND V98 V91
0x15a: M[V90] = V99
0x15b: V100 = 0x20
0x15d: V101 = ADD 0x20 V90
---
Entry stack: [V11, S4, V65, V65, V85, V87]
Stack pops: 2
Stack additions: [V101, S0]
Exit stack: [V11, S4, V65, V65, V101, V87]

================================

Block 0x160
[0x160:0x16d]
---
Predecessors: [0x133, 0x147]
Successors: []
---
0x160 JUMPDEST
0x161 POP
0x162 SWAP3
0x163 POP
0x164 POP
0x165 POP
0x166 PUSH1 0x40
0x168 MLOAD
0x169 DUP1
0x16a SWAP2
0x16b SUB
0x16c SWAP1
0x16d RETURN
---
0x160: JUMPDEST 
0x166: V102 = 0x40
0x168: V103 = M[0x40]
0x16b: V104 = SUB S1 V103
0x16d: RETURN V103 V104
---
Entry stack: [V11, S4, V65, V65, S1, V87]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x16e
[0x16e:0x174]
---
Predecessors: [0x41]
Successors: [0x175, 0x179]
---
0x16e JUMPDEST
0x16f CALLVALUE
0x170 ISZERO
0x171 PUSH2 0x179
0x174 JUMPI
---
0x16e: JUMPDEST 
0x16f: V105 = CALLVALUE
0x170: V106 = ISZERO V105
0x171: V107 = 0x179
0x174: JUMPI 0x179 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x175
[0x175:0x178]
---
Predecessors: [0x16e]
Successors: []
---
0x175 PUSH1 0x0
0x177 DUP1
0x178 REVERT
---
0x175: V108 = 0x0
0x178: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x179
[0x179:0x1ad]
---
Predecessors: [0x16e]
Successors: [0x61a]
---
0x179 JUMPDEST
0x17a PUSH2 0x1ae
0x17d PUSH1 0x4
0x17f DUP1
0x180 DUP1
0x181 CALLDATALOAD
0x182 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x197 AND
0x198 SWAP1
0x199 PUSH1 0x20
0x19b ADD
0x19c SWAP1
0x19d SWAP2
0x19e SWAP1
0x19f DUP1
0x1a0 CALLDATALOAD
0x1a1 SWAP1
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 SWAP1
0x1a6 SWAP2
0x1a7 SWAP1
0x1a8 POP
0x1a9 POP
0x1aa PUSH2 0x61a
0x1ad JUMP
---
0x179: JUMPDEST 
0x17a: V109 = 0x1ae
0x17d: V110 = 0x4
0x181: V111 = CALLDATALOAD 0x4
0x182: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x197: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x199: V114 = 0x20
0x19b: V115 = ADD 0x20 0x4
0x1a0: V116 = CALLDATALOAD 0x24
0x1a2: V117 = 0x20
0x1a4: V118 = ADD 0x20 0x24
0x1aa: V119 = 0x61a
0x1ad: JUMP 0x61a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ae, V113, V116]
Exit stack: [V11, 0x1ae, V113, V116]

================================

Block 0x1ae
[0x1ae:0x1c7]
---
Predecessors: [0x7a2]
Successors: []
---
0x1ae JUMPDEST
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 DUP3
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 ISZERO
0x1b7 ISZERO
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP2
0x1be POP
0x1bf POP
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 DUP1
0x1c4 SWAP2
0x1c5 SUB
0x1c6 SWAP1
0x1c7 RETURN
---
0x1ae: JUMPDEST 
0x1af: V120 = 0x40
0x1b1: V121 = M[0x40]
0x1b4: V122 = ISZERO {0x0, 0x1}
0x1b5: V123 = ISZERO V122
0x1b6: V124 = ISZERO V123
0x1b7: V125 = ISZERO V124
0x1b9: M[V121] = V125
0x1ba: V126 = 0x20
0x1bc: V127 = ADD 0x20 V121
0x1c0: V128 = 0x40
0x1c2: V129 = M[0x40]
0x1c5: V130 = SUB V127 V129
0x1c7: RETURN V129 V130
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c8
[0x1c8:0x1ce]
---
Predecessors: [0x4c]
Successors: [0x1cf, 0x1d3]
---
0x1c8 JUMPDEST
0x1c9 CALLVALUE
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V131 = CALLVALUE
0x1ca: V132 = ISZERO V131
0x1cb: V133 = 0x1d3
0x1ce: JUMPI 0x1d3 V132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c8]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V134 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d3
[0x1d3:0x1da]
---
Predecessors: [0x1c8]
Successors: [0x7a8]
---
0x1d3 JUMPDEST
0x1d4 PUSH2 0x1db
0x1d7 PUSH2 0x7a8
0x1da JUMP
---
0x1d3: JUMPDEST 
0x1d4: V135 = 0x1db
0x1d7: V136 = 0x7a8
0x1da: JUMP 0x7a8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1db]
Exit stack: [V11, 0x1db]

================================

Block 0x1db
[0x1db:0x1f0]
---
Predecessors: [0x7a8]
Successors: []
---
0x1db JUMPDEST
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 DUP3
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP2
0x1e7 POP
0x1e8 POP
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec DUP1
0x1ed SWAP2
0x1ee SUB
0x1ef SWAP1
0x1f0 RETURN
---
0x1db: JUMPDEST 
0x1dc: V137 = 0x40
0x1de: V138 = M[0x40]
0x1e2: M[V138] = V515
0x1e3: V139 = 0x20
0x1e5: V140 = ADD 0x20 V138
0x1e9: V141 = 0x40
0x1eb: V142 = M[0x40]
0x1ee: V143 = SUB V140 V142
0x1f0: RETURN V142 V143
---
Entry stack: [V11, 0x1db, V515]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1db]

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x57]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V144 = CALLVALUE
0x1f3: V145 = ISZERO V144
0x1f4: V146 = 0x1fc
0x1f7: JUMPI 0x1fc V145
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V147 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fc
[0x1fc:0x24f]
---
Predecessors: [0x1f1]
Successors: [0x7ae]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x250
0x200 PUSH1 0x4
0x202 DUP1
0x203 DUP1
0x204 CALLDATALOAD
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b SWAP1
0x21c PUSH1 0x20
0x21e ADD
0x21f SWAP1
0x220 SWAP2
0x221 SWAP1
0x222 DUP1
0x223 CALLDATALOAD
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a SWAP1
0x23b PUSH1 0x20
0x23d ADD
0x23e SWAP1
0x23f SWAP2
0x240 SWAP1
0x241 DUP1
0x242 CALLDATALOAD
0x243 SWAP1
0x244 PUSH1 0x20
0x246 ADD
0x247 SWAP1
0x248 SWAP2
0x249 SWAP1
0x24a POP
0x24b POP
0x24c PUSH2 0x7ae
0x24f JUMP
---
0x1fc: JUMPDEST 
0x1fd: V148 = 0x250
0x200: V149 = 0x4
0x204: V150 = CALLDATALOAD 0x4
0x205: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x21c: V153 = 0x20
0x21e: V154 = ADD 0x20 0x4
0x223: V155 = CALLDATALOAD 0x24
0x224: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x23b: V158 = 0x20
0x23d: V159 = ADD 0x20 0x24
0x242: V160 = CALLDATALOAD 0x44
0x244: V161 = 0x20
0x246: V162 = ADD 0x20 0x44
0x24c: V163 = 0x7ae
0x24f: JUMP 0x7ae
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x250, V152, V157, V160]
Exit stack: [V11, 0x250, V152, V157, V160]

================================

Block 0x250
[0x250:0x269]
---
Predecessors: [0xac3]
Successors: []
---
0x250 JUMPDEST
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 DUP3
0x256 ISZERO
0x257 ISZERO
0x258 ISZERO
0x259 ISZERO
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x20
0x25e ADD
0x25f SWAP2
0x260 POP
0x261 POP
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 SWAP2
0x267 SUB
0x268 SWAP1
0x269 RETURN
---
0x250: JUMPDEST 
0x251: V164 = 0x40
0x253: V165 = M[0x40]
0x256: V166 = ISZERO {0x0, 0x1}
0x257: V167 = ISZERO V166
0x258: V168 = ISZERO V167
0x259: V169 = ISZERO V168
0x25b: M[V165] = V169
0x25c: V170 = 0x20
0x25e: V171 = ADD 0x20 V165
0x262: V172 = 0x40
0x264: V173 = M[0x40]
0x267: V174 = SUB V171 V173
0x269: RETURN V173 V174
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x62]
Successors: [0x271, 0x275]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V175 = CALLVALUE
0x26c: V176 = ISZERO V175
0x26d: V177 = 0x275
0x270: JUMPI 0x275 V176
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x26a]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V178 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0x26a]
Successors: [0xacb]
---
0x275 JUMPDEST
0x276 PUSH2 0x27d
0x279 PUSH2 0xacb
0x27c JUMP
---
0x275: JUMPDEST 
0x276: V179 = 0x27d
0x279: V180 = 0xacb
0x27c: JUMP 0xacb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x27d]
Exit stack: [V11, 0x27d]

================================

Block 0x27d
[0x27d:0x298]
---
Predecessors: [0xacb]
Successors: []
---
0x27d JUMPDEST
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP3
0x283 PUSH1 0xff
0x285 AND
0x286 PUSH1 0xff
0x288 AND
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e SWAP2
0x28f POP
0x290 POP
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 SWAP2
0x296 SUB
0x297 SWAP1
0x298 RETURN
---
0x27d: JUMPDEST 
0x27e: V181 = 0x40
0x280: V182 = M[0x40]
0x283: V183 = 0xff
0x285: V184 = AND 0xff 0x8
0x286: V185 = 0xff
0x288: V186 = AND 0xff 0x8
0x28a: M[V182] = 0x8
0x28b: V187 = 0x20
0x28d: V188 = ADD 0x20 V182
0x291: V189 = 0x40
0x293: V190 = M[0x40]
0x296: V191 = SUB V188 V190
0x298: RETURN V190 V191
---
Entry stack: [V11, 0x8]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0x6d]
Successors: [0x2a0, 0x2a4]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V192 = CALLVALUE
0x29b: V193 = ISZERO V192
0x29c: V194 = 0x2a4
0x29f: JUMPI 0x2a4 V193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V195 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a4
[0x2a4:0x2cf]
---
Predecessors: [0x299]
Successors: [0xad4]
---
0x2a4 JUMPDEST
0x2a5 PUSH2 0x2d0
0x2a8 PUSH1 0x4
0x2aa DUP1
0x2ab DUP1
0x2ac CALLDATALOAD
0x2ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c2 AND
0x2c3 SWAP1
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP1
0x2c8 SWAP2
0x2c9 SWAP1
0x2ca POP
0x2cb POP
0x2cc PUSH2 0xad4
0x2cf JUMP
---
0x2a4: JUMPDEST 
0x2a5: V196 = 0x2d0
0x2a8: V197 = 0x4
0x2ac: V198 = CALLDATALOAD 0x4
0x2ad: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x2c4: V201 = 0x20
0x2c6: V202 = ADD 0x20 0x4
0x2cc: V203 = 0xad4
0x2cf: JUMP 0xad4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d0, V200]
Exit stack: [V11, 0x2d0, V200]

================================

Block 0x2d0
[0x2d0:0x2e5]
---
Predecessors: [0xad4]
Successors: []
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP1
0x2d5 DUP3
0x2d6 DUP2
0x2d7 MSTORE
0x2d8 PUSH1 0x20
0x2da ADD
0x2db SWAP2
0x2dc POP
0x2dd POP
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 DUP1
0x2e2 SWAP2
0x2e3 SUB
0x2e4 SWAP1
0x2e5 RETURN
---
0x2d0: JUMPDEST 
0x2d1: V204 = 0x40
0x2d3: V205 = M[0x40]
0x2d7: M[V205] = V684
0x2d8: V206 = 0x20
0x2da: V207 = ADD 0x20 V205
0x2de: V208 = 0x40
0x2e0: V209 = M[0x40]
0x2e3: V210 = SUB V207 V209
0x2e5: RETURN V209 V210
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S2, S1, V684]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, S2, S1]

================================

Block 0x2e6
[0x2e6:0x2ec]
---
Predecessors: [0x78]
Successors: [0x2ed, 0x2f1]
---
0x2e6 JUMPDEST
0x2e7 CALLVALUE
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V211 = CALLVALUE
0x2e8: V212 = ISZERO V211
0x2e9: V213 = 0x2f1
0x2ec: JUMPI 0x2f1 V212
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V214 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f1
[0x2f1:0x31c]
---
Predecessors: [0x2e6]
Successors: [0xaf5]
---
0x2f1 JUMPDEST
0x2f2 PUSH2 0x31d
0x2f5 PUSH1 0x4
0x2f7 DUP1
0x2f8 DUP1
0x2f9 CALLDATALOAD
0x2fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30f AND
0x310 SWAP1
0x311 PUSH1 0x20
0x313 ADD
0x314 SWAP1
0x315 SWAP2
0x316 SWAP1
0x317 POP
0x318 POP
0x319 PUSH2 0xaf5
0x31c JUMP
---
0x2f1: JUMPDEST 
0x2f2: V215 = 0x31d
0x2f5: V216 = 0x4
0x2f9: V217 = CALLDATALOAD 0x4
0x2fa: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x311: V220 = 0x20
0x313: V221 = ADD 0x20 0x4
0x319: V222 = 0xaf5
0x31c: JUMP 0xaf5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x31d, V219]
Exit stack: [V11, 0x31d, V219]

================================

Block 0x31d
[0x31d:0x332]
---
Predecessors: [0xaf5]
Successors: []
---
0x31d JUMPDEST
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 DUP3
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x20
0x327 ADD
0x328 SWAP2
0x329 POP
0x32a POP
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f SWAP2
0x330 SUB
0x331 SWAP1
0x332 RETURN
---
0x31d: JUMPDEST 
0x31e: V223 = 0x40
0x320: V224 = M[0x40]
0x324: M[V224] = V698
0x325: V225 = 0x20
0x327: V226 = ADD 0x20 V224
0x32b: V227 = 0x40
0x32d: V228 = M[0x40]
0x330: V229 = SUB V226 V228
0x332: RETURN V228 V229
---
Entry stack: [V11, V698]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x333
[0x333:0x339]
---
Predecessors: [0x83]
Successors: [0x33a, 0x33e]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x333: JUMPDEST 
0x334: V230 = CALLVALUE
0x335: V231 = ISZERO V230
0x336: V232 = 0x33e
0x339: JUMPI 0x33e V231
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x333]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V233 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x33e
[0x33e:0x345]
---
Predecessors: [0x333]
Successors: [0xb3e]
---
0x33e JUMPDEST
0x33f PUSH2 0x346
0x342 PUSH2 0xb3e
0x345 JUMP
---
0x33e: JUMPDEST 
0x33f: V234 = 0x346
0x342: V235 = 0xb3e
0x345: JUMP 0xb3e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x346]
Exit stack: [V11, 0x346]

================================

Block 0x346
[0x346:0x36a]
---
Predecessors: [0x5df, 0xb46]
Successors: [0x36b]
---
0x346 JUMPDEST
0x347 PUSH1 0x40
0x349 MLOAD
0x34a DUP1
0x34b DUP1
0x34c PUSH1 0x20
0x34e ADD
0x34f DUP3
0x350 DUP2
0x351 SUB
0x352 DUP3
0x353 MSTORE
0x354 DUP4
0x355 DUP2
0x356 DUP2
0x357 MLOAD
0x358 DUP2
0x359 MSTORE
0x35a PUSH1 0x20
0x35c ADD
0x35d SWAP2
0x35e POP
0x35f DUP1
0x360 MLOAD
0x361 SWAP1
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP1
0x366 DUP1
0x367 DUP4
0x368 DUP4
0x369 PUSH1 0x0
---
0x346: JUMPDEST 
0x347: V236 = 0x40
0x349: V237 = M[0x40]
0x34c: V238 = 0x20
0x34e: V239 = ADD 0x20 V237
0x351: V240 = SUB V239 V237
0x353: M[V237] = V240
0x357: V241 = M[S0]
0x359: M[V239] = V241
0x35a: V242 = 0x20
0x35c: V243 = ADD 0x20 V239
0x360: V244 = M[S0]
0x362: V245 = 0x20
0x364: V246 = ADD 0x20 S0
0x369: V247 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V237, V237, V243, V246, V244, V244, V243, V246, 0x0]
Exit stack: [V11, S0, V237, V237, V243, V246, V244, V244, V243, V246, 0x0]

================================

Block 0x36b
[0x36b:0x373]
---
Predecessors: [0x346, 0x374]
Successors: [0x374, 0x386]
---
0x36b JUMPDEST
0x36c DUP4
0x36d DUP2
0x36e LT
0x36f ISZERO
0x370 PUSH2 0x386
0x373 JUMPI
---
0x36b: JUMPDEST 
0x36e: V248 = LT S0 V244
0x36f: V249 = ISZERO V248
0x370: V250 = 0x386
0x373: JUMPI 0x386 V249
---
Entry stack: [V11, S9, V237, V237, V243, V246, V244, V244, V243, V246, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V237, V237, V243, V246, V244, V244, V243, V246, S0]

================================

Block 0x374
[0x374:0x385]
---
Predecessors: [0x36b]
Successors: [0x36b]
---
0x374 DUP1
0x375 DUP3
0x376 ADD
0x377 MLOAD
0x378 DUP2
0x379 DUP5
0x37a ADD
0x37b MSTORE
0x37c PUSH1 0x20
0x37e DUP2
0x37f ADD
0x380 SWAP1
0x381 POP
0x382 PUSH2 0x36b
0x385 JUMP
---
0x376: V251 = ADD V246 S0
0x377: V252 = M[V251]
0x37a: V253 = ADD V243 S0
0x37b: M[V253] = V252
0x37c: V254 = 0x20
0x37f: V255 = ADD S0 0x20
0x382: V256 = 0x36b
0x385: JUMP 0x36b
---
Entry stack: [V11, S9, V237, V237, V243, V246, V244, V244, V243, V246, S0]
Stack pops: 3
Stack additions: [S2, S1, V255]
Exit stack: [V11, S9, V237, V237, V243, V246, V244, V244, V243, V246, V255]

================================

Block 0x386
[0x386:0x399]
---
Predecessors: [0x36b]
Successors: [0x39a, 0x3b3]
---
0x386 JUMPDEST
0x387 POP
0x388 POP
0x389 POP
0x38a POP
0x38b SWAP1
0x38c POP
0x38d SWAP1
0x38e DUP2
0x38f ADD
0x390 SWAP1
0x391 PUSH1 0x1f
0x393 AND
0x394 DUP1
0x395 ISZERO
0x396 PUSH2 0x3b3
0x399 JUMPI
---
0x386: JUMPDEST 
0x38f: V257 = ADD V244 V243
0x391: V258 = 0x1f
0x393: V259 = AND 0x1f V244
0x395: V260 = ISZERO V259
0x396: V261 = 0x3b3
0x399: JUMPI 0x3b3 V260
---
Entry stack: [V11, S9, V237, V237, V243, V246, V244, V244, V243, V246, S0]
Stack pops: 7
Stack additions: [V257, V259]
Exit stack: [V11, S9, V237, V237, V257, V259]

================================

Block 0x39a
[0x39a:0x3b2]
---
Predecessors: [0x386]
Successors: [0x3b3]
---
0x39a DUP1
0x39b DUP3
0x39c SUB
0x39d DUP1
0x39e MLOAD
0x39f PUSH1 0x1
0x3a1 DUP4
0x3a2 PUSH1 0x20
0x3a4 SUB
0x3a5 PUSH2 0x100
0x3a8 EXP
0x3a9 SUB
0x3aa NOT
0x3ab AND
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 SWAP2
0x3b2 POP
---
0x39c: V262 = SUB V257 V259
0x39e: V263 = M[V262]
0x39f: V264 = 0x1
0x3a2: V265 = 0x20
0x3a4: V266 = SUB 0x20 V259
0x3a5: V267 = 0x100
0x3a8: V268 = EXP 0x100 V266
0x3a9: V269 = SUB V268 0x1
0x3aa: V270 = NOT V269
0x3ab: V271 = AND V270 V263
0x3ad: M[V262] = V271
0x3ae: V272 = 0x20
0x3b0: V273 = ADD 0x20 V262
---
Entry stack: [V11, S4, V237, V237, V257, V259]
Stack pops: 2
Stack additions: [V273, S0]
Exit stack: [V11, S4, V237, V237, V273, V259]

================================

Block 0x3b3
[0x3b3:0x3c0]
---
Predecessors: [0x386, 0x39a]
Successors: []
---
0x3b3 JUMPDEST
0x3b4 POP
0x3b5 SWAP3
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc DUP1
0x3bd SWAP2
0x3be SUB
0x3bf SWAP1
0x3c0 RETURN
---
0x3b3: JUMPDEST 
0x3b9: V274 = 0x40
0x3bb: V275 = M[0x40]
0x3be: V276 = SUB S1 V275
0x3c0: RETURN V275 V276
---
Entry stack: [V11, S4, V237, V237, S1, V259]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c1
[0x3c1:0x3c7]
---
Predecessors: [0x8e]
Successors: [0x3c8, 0x3cc]
---
0x3c1 JUMPDEST
0x3c2 CALLVALUE
0x3c3 ISZERO
0x3c4 PUSH2 0x3cc
0x3c7 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V277 = CALLVALUE
0x3c3: V278 = ISZERO V277
0x3c4: V279 = 0x3cc
0x3c7: JUMPI 0x3cc V278
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c8
[0x3c8:0x3cb]
---
Predecessors: [0x3c1]
Successors: []
---
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb REVERT
---
0x3c8: V280 = 0x0
0x3cb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cc
[0x3cc:0x3d3]
---
Predecessors: [0x3c1]
Successors: [0xb81]
---
0x3cc JUMPDEST
0x3cd PUSH2 0x3d4
0x3d0 PUSH2 0xb81
0x3d3 JUMP
---
0x3cc: JUMPDEST 
0x3cd: V281 = 0x3d4
0x3d0: V282 = 0xb81
0x3d3: JUMP 0xb81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3d4]
Exit stack: [V11, 0x3d4]

================================

Block 0x3d4
[0x3d4:0x3ed]
---
Predecessors: [0xbdf]
Successors: []
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP1
0x3d9 DUP3
0x3da ISZERO
0x3db ISZERO
0x3dc ISZERO
0x3dd ISZERO
0x3de DUP2
0x3df MSTORE
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 SWAP2
0x3e4 POP
0x3e5 POP
0x3e6 PUSH1 0x40
0x3e8 MLOAD
0x3e9 DUP1
0x3ea SWAP2
0x3eb SUB
0x3ec SWAP1
0x3ed RETURN
---
0x3d4: JUMPDEST 
0x3d5: V283 = 0x40
0x3d7: V284 = M[0x40]
0x3da: V285 = ISZERO 0x1
0x3db: V286 = ISZERO 0x0
0x3dc: V287 = ISZERO 0x1
0x3dd: V288 = ISZERO 0x0
0x3df: M[V284] = 0x1
0x3e0: V289 = 0x20
0x3e2: V290 = ADD 0x20 V284
0x3e6: V291 = 0x40
0x3e8: V292 = M[0x40]
0x3eb: V293 = SUB V290 V292
0x3ed: RETURN V292 V293
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ee
[0x3ee:0x3f4]
---
Predecessors: [0x99]
Successors: [0x3f5, 0x3f9]
---
0x3ee JUMPDEST
0x3ef CALLVALUE
0x3f0 ISZERO
0x3f1 PUSH2 0x3f9
0x3f4 JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V294 = CALLVALUE
0x3f0: V295 = ISZERO V294
0x3f1: V296 = 0x3f9
0x3f4: JUMPI 0x3f9 V295
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f5
[0x3f5:0x3f8]
---
Predecessors: [0x3ee]
Successors: []
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 REVERT
---
0x3f5: V297 = 0x0
0x3f8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f9
[0x3f9:0x42d]
---
Predecessors: [0x3ee]
Successors: [0xc2d]
---
0x3f9 JUMPDEST
0x3fa PUSH2 0x42e
0x3fd PUSH1 0x4
0x3ff DUP1
0x400 DUP1
0x401 CALLDATALOAD
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 AND
0x418 SWAP1
0x419 PUSH1 0x20
0x41b ADD
0x41c SWAP1
0x41d SWAP2
0x41e SWAP1
0x41f DUP1
0x420 CALLDATALOAD
0x421 SWAP1
0x422 PUSH1 0x20
0x424 ADD
0x425 SWAP1
0x426 SWAP2
0x427 SWAP1
0x428 POP
0x429 POP
0x42a PUSH2 0xc2d
0x42d JUMP
---
0x3f9: JUMPDEST 
0x3fa: V298 = 0x42e
0x3fd: V299 = 0x4
0x401: V300 = CALLDATALOAD 0x4
0x402: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x419: V303 = 0x20
0x41b: V304 = ADD 0x20 0x4
0x420: V305 = CALLDATALOAD 0x24
0x422: V306 = 0x20
0x424: V307 = ADD 0x20 0x24
0x42a: V308 = 0xc2d
0x42d: JUMP 0xc2d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x42e, V302, V305]
Exit stack: [V11, 0x42e, V302, V305]

================================

Block 0x42e
[0x42e:0x447]
---
Predecessors: [0xe30]
Successors: []
---
0x42e JUMPDEST
0x42f PUSH1 0x40
0x431 MLOAD
0x432 DUP1
0x433 DUP3
0x434 ISZERO
0x435 ISZERO
0x436 ISZERO
0x437 ISZERO
0x438 DUP2
0x439 MSTORE
0x43a PUSH1 0x20
0x43c ADD
0x43d SWAP2
0x43e POP
0x43f POP
0x440 PUSH1 0x40
0x442 MLOAD
0x443 DUP1
0x444 SWAP2
0x445 SUB
0x446 SWAP1
0x447 RETURN
---
0x42e: JUMPDEST 
0x42f: V309 = 0x40
0x431: V310 = M[0x40]
0x434: V311 = ISZERO {0x0, 0x1}
0x435: V312 = ISZERO V311
0x436: V313 = ISZERO V312
0x437: V314 = ISZERO V313
0x439: M[V310] = V314
0x43a: V315 = 0x20
0x43c: V316 = ADD 0x20 V310
0x440: V317 = 0x40
0x442: V318 = M[0x40]
0x445: V319 = SUB V316 V318
0x447: RETURN V318 V319
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x448
[0x448:0x44e]
---
Predecessors: [0xa4]
Successors: [0x44f, 0x453]
---
0x448 JUMPDEST
0x449 CALLVALUE
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x448: JUMPDEST 
0x449: V320 = CALLVALUE
0x44a: V321 = ISZERO V320
0x44b: V322 = 0x453
0x44e: JUMPI 0x453 V321
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x448]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V323 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x453
[0x453:0x4b1]
---
Predecessors: [0x448]
Successors: [0xe37]
---
0x453 JUMPDEST
0x454 PUSH2 0x4b2
0x457 PUSH1 0x4
0x459 DUP1
0x45a DUP1
0x45b CALLDATALOAD
0x45c SWAP1
0x45d PUSH1 0x20
0x45f ADD
0x460 SWAP1
0x461 DUP3
0x462 ADD
0x463 DUP1
0x464 CALLDATALOAD
0x465 SWAP1
0x466 PUSH1 0x20
0x468 ADD
0x469 SWAP1
0x46a DUP1
0x46b DUP1
0x46c PUSH1 0x20
0x46e MUL
0x46f PUSH1 0x20
0x471 ADD
0x472 PUSH1 0x40
0x474 MLOAD
0x475 SWAP1
0x476 DUP2
0x477 ADD
0x478 PUSH1 0x40
0x47a MSTORE
0x47b DUP1
0x47c SWAP4
0x47d SWAP3
0x47e SWAP2
0x47f SWAP1
0x480 DUP2
0x481 DUP2
0x482 MSTORE
0x483 PUSH1 0x20
0x485 ADD
0x486 DUP4
0x487 DUP4
0x488 PUSH1 0x20
0x48a MUL
0x48b DUP1
0x48c DUP3
0x48d DUP5
0x48e CALLDATACOPY
0x48f DUP3
0x490 ADD
0x491 SWAP2
0x492 POP
0x493 POP
0x494 POP
0x495 POP
0x496 POP
0x497 POP
0x498 SWAP2
0x499 SWAP1
0x49a DUP1
0x49b CALLDATALOAD
0x49c SWAP1
0x49d PUSH1 0x20
0x49f ADD
0x4a0 SWAP1
0x4a1 SWAP2
0x4a2 SWAP1
0x4a3 DUP1
0x4a4 CALLDATALOAD
0x4a5 SWAP1
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 SWAP1
0x4aa SWAP2
0x4ab SWAP1
0x4ac POP
0x4ad POP
0x4ae PUSH2 0xe37
0x4b1 JUMP
---
0x453: JUMPDEST 
0x454: V324 = 0x4b2
0x457: V325 = 0x4
0x45b: V326 = CALLDATALOAD 0x4
0x45d: V327 = 0x20
0x45f: V328 = ADD 0x20 0x4
0x462: V329 = ADD 0x4 V326
0x464: V330 = CALLDATALOAD V329
0x466: V331 = 0x20
0x468: V332 = ADD 0x20 V329
0x46c: V333 = 0x20
0x46e: V334 = MUL 0x20 V330
0x46f: V335 = 0x20
0x471: V336 = ADD 0x20 V334
0x472: V337 = 0x40
0x474: V338 = M[0x40]
0x477: V339 = ADD V338 V336
0x478: V340 = 0x40
0x47a: M[0x40] = V339
0x482: M[V338] = V330
0x483: V341 = 0x20
0x485: V342 = ADD 0x20 V338
0x488: V343 = 0x20
0x48a: V344 = MUL 0x20 V330
0x48e: CALLDATACOPY V342 V332 V344
0x490: V345 = ADD V342 V344
0x49b: V346 = CALLDATALOAD 0x24
0x49d: V347 = 0x20
0x49f: V348 = ADD 0x20 0x24
0x4a4: V349 = CALLDATALOAD 0x44
0x4a6: V350 = 0x20
0x4a8: V351 = ADD 0x20 0x44
0x4ae: V352 = 0xe37
0x4b1: JUMP 0xe37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4b2, V338, V346, V349]
Exit stack: [V11, 0x4b2, V338, V346, V349]

================================

Block 0x4b2
[0x4b2:0x4b3]
---
Predecessors: [0x106a]
Successors: []
---
0x4b2 JUMPDEST
0x4b3 STOP
---
0x4b2: JUMPDEST 
0x4b3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b4
[0x4b4:0x4ba]
---
Predecessors: [0xaf]
Successors: [0x4bb, 0x4bf]
---
0x4b4 JUMPDEST
0x4b5 CALLVALUE
0x4b6 ISZERO
0x4b7 PUSH2 0x4bf
0x4ba JUMPI
---
0x4b4: JUMPDEST 
0x4b5: V353 = CALLVALUE
0x4b6: V354 = ISZERO V353
0x4b7: V355 = 0x4bf
0x4ba: JUMPI 0x4bf V354
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4bb
[0x4bb:0x4be]
---
Predecessors: [0x4b4]
Successors: []
---
0x4bb PUSH1 0x0
0x4bd DUP1
0x4be REVERT
---
0x4bb: V356 = 0x0
0x4be: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4bf
[0x4bf:0x4c6]
---
Predecessors: [0x4b4]
Successors: [0x1070]
---
0x4bf JUMPDEST
0x4c0 PUSH2 0x4c7
0x4c3 PUSH2 0x1070
0x4c6 JUMP
---
0x4bf: JUMPDEST 
0x4c0: V357 = 0x4c7
0x4c3: V358 = 0x1070
0x4c6: JUMP 0x1070
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4c7]
Exit stack: [V11, 0x4c7]

================================

Block 0x4c7
[0x4c7:0x4e0]
---
Predecessors: [0x1070]
Successors: []
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x40
0x4ca MLOAD
0x4cb DUP1
0x4cc DUP3
0x4cd ISZERO
0x4ce ISZERO
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 SWAP2
0x4d7 POP
0x4d8 POP
0x4d9 PUSH1 0x40
0x4db MLOAD
0x4dc DUP1
0x4dd SWAP2
0x4de SUB
0x4df SWAP1
0x4e0 RETURN
---
0x4c7: JUMPDEST 
0x4c8: V359 = 0x40
0x4ca: V360 = M[0x40]
0x4cd: V361 = ISZERO V1003
0x4ce: V362 = ISZERO V361
0x4cf: V363 = ISZERO V362
0x4d0: V364 = ISZERO V363
0x4d2: M[V360] = V364
0x4d3: V365 = 0x20
0x4d5: V366 = ADD 0x20 V360
0x4d9: V367 = 0x40
0x4db: V368 = M[0x40]
0x4de: V369 = SUB V366 V368
0x4e0: RETURN V368 V369
---
Entry stack: [V11, 0x4c7, V1003]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4c7]

================================

Block 0x4e1
[0x4e1:0x4e7]
---
Predecessors: [0xba]
Successors: [0x4e8, 0x4ec]
---
0x4e1 JUMPDEST
0x4e2 CALLVALUE
0x4e3 ISZERO
0x4e4 PUSH2 0x4ec
0x4e7 JUMPI
---
0x4e1: JUMPDEST 
0x4e2: V370 = CALLVALUE
0x4e3: V371 = ISZERO V370
0x4e4: V372 = 0x4ec
0x4e7: JUMPI 0x4ec V371
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x4e1]
Successors: []
---
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb REVERT
---
0x4e8: V373 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ec
[0x4ec:0x536]
---
Predecessors: [0x4e1]
Successors: [0x1083]
---
0x4ec JUMPDEST
0x4ed PUSH2 0x537
0x4f0 PUSH1 0x4
0x4f2 DUP1
0x4f3 DUP1
0x4f4 CALLDATALOAD
0x4f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50a AND
0x50b SWAP1
0x50c PUSH1 0x20
0x50e ADD
0x50f SWAP1
0x510 SWAP2
0x511 SWAP1
0x512 DUP1
0x513 CALLDATALOAD
0x514 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x529 AND
0x52a SWAP1
0x52b PUSH1 0x20
0x52d ADD
0x52e SWAP1
0x52f SWAP2
0x530 SWAP1
0x531 POP
0x532 POP
0x533 PUSH2 0x1083
0x536 JUMP
---
0x4ec: JUMPDEST 
0x4ed: V374 = 0x537
0x4f0: V375 = 0x4
0x4f4: V376 = CALLDATALOAD 0x4
0x4f5: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x50c: V379 = 0x20
0x50e: V380 = ADD 0x20 0x4
0x513: V381 = CALLDATALOAD 0x24
0x514: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x529: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x52b: V384 = 0x20
0x52d: V385 = ADD 0x20 0x24
0x533: V386 = 0x1083
0x536: JUMP 0x1083
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x537, V378, V383]
Exit stack: [V11, 0x537, V378, V383]

================================

Block 0x537
[0x537:0x54c]
---
Predecessors: [0x1083]
Successors: []
---
0x537 JUMPDEST
0x538 PUSH1 0x40
0x53a MLOAD
0x53b DUP1
0x53c DUP3
0x53d DUP2
0x53e MSTORE
0x53f PUSH1 0x20
0x541 ADD
0x542 SWAP2
0x543 POP
0x544 POP
0x545 PUSH1 0x40
0x547 MLOAD
0x548 DUP1
0x549 SWAP2
0x54a SUB
0x54b SWAP1
0x54c RETURN
---
0x537: JUMPDEST 
0x538: V387 = 0x40
0x53a: V388 = M[0x40]
0x53e: M[V388] = V1028
0x53f: V389 = 0x20
0x541: V390 = ADD 0x20 V388
0x545: V391 = 0x40
0x547: V392 = M[0x40]
0x54a: V393 = SUB V390 V392
0x54c: RETURN V392 V393
---
Entry stack: [V11, V1028]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x54d
[0x54d:0x553]
---
Predecessors: [0xc5]
Successors: [0x554, 0x558]
---
0x54d JUMPDEST
0x54e CALLVALUE
0x54f ISZERO
0x550 PUSH2 0x558
0x553 JUMPI
---
0x54d: JUMPDEST 
0x54e: V394 = CALLVALUE
0x54f: V395 = ISZERO V394
0x550: V396 = 0x558
0x553: JUMPI 0x558 V395
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x554
[0x554:0x557]
---
Predecessors: [0x54d]
Successors: []
---
0x554 PUSH1 0x0
0x556 DUP1
0x557 REVERT
---
0x554: V397 = 0x0
0x557: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x558
[0x558:0x583]
---
Predecessors: [0x54d]
Successors: [0x110a]
---
0x558 JUMPDEST
0x559 PUSH2 0x584
0x55c PUSH1 0x4
0x55e DUP1
0x55f DUP1
0x560 CALLDATALOAD
0x561 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x576 AND
0x577 SWAP1
0x578 PUSH1 0x20
0x57a ADD
0x57b SWAP1
0x57c SWAP2
0x57d SWAP1
0x57e POP
0x57f POP
0x580 PUSH2 0x110a
0x583 JUMP
---
0x558: JUMPDEST 
0x559: V398 = 0x584
0x55c: V399 = 0x4
0x560: V400 = CALLDATALOAD 0x4
0x561: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x576: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x578: V403 = 0x20
0x57a: V404 = ADD 0x20 0x4
0x580: V405 = 0x110a
0x583: JUMP 0x110a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x584, V402]
Exit stack: [V11, 0x584, V402]

================================

Block 0x584
[0x584:0x59d]
---
Predecessors: [0x130c]
Successors: []
---
0x584 JUMPDEST
0x585 PUSH1 0x40
0x587 MLOAD
0x588 DUP1
0x589 DUP3
0x58a ISZERO
0x58b ISZERO
0x58c ISZERO
0x58d ISZERO
0x58e DUP2
0x58f MSTORE
0x590 PUSH1 0x20
0x592 ADD
0x593 SWAP2
0x594 POP
0x595 POP
0x596 PUSH1 0x40
0x598 MLOAD
0x599 DUP1
0x59a SWAP2
0x59b SUB
0x59c SWAP1
0x59d RETURN
---
0x584: JUMPDEST 
0x585: V406 = 0x40
0x587: V407 = M[0x40]
0x58a: V408 = ISZERO V1145
0x58b: V409 = ISZERO V408
0x58c: V410 = ISZERO V409
0x58d: V411 = ISZERO V410
0x58f: M[V407] = V411
0x590: V412 = 0x20
0x592: V413 = ADD 0x20 V407
0x596: V414 = 0x40
0x598: V415 = M[0x40]
0x59b: V416 = SUB V413 V415
0x59d: RETURN V415 V416
---
Entry stack: [V11, V1145]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x59e
[0x59e:0x5a4]
---
Predecessors: [0xd0]
Successors: [0x5a5, 0x5a9]
---
0x59e JUMPDEST
0x59f CALLVALUE
0x5a0 ISZERO
0x5a1 PUSH2 0x5a9
0x5a4 JUMPI
---
0x59e: JUMPDEST 
0x59f: V417 = CALLVALUE
0x5a0: V418 = ISZERO V417
0x5a1: V419 = 0x5a9
0x5a4: JUMPI 0x5a9 V418
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a5
[0x5a5:0x5a8]
---
Predecessors: [0x59e]
Successors: []
---
0x5a5 PUSH1 0x0
0x5a7 DUP1
0x5a8 REVERT
---
0x5a5: V420 = 0x0
0x5a8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a9
[0x5a9:0x5d4]
---
Predecessors: [0x59e]
Successors: [0x131f]
---
0x5a9 JUMPDEST
0x5aa PUSH2 0x5d5
0x5ad PUSH1 0x4
0x5af DUP1
0x5b0 DUP1
0x5b1 CALLDATALOAD
0x5b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c7 AND
0x5c8 SWAP1
0x5c9 PUSH1 0x20
0x5cb ADD
0x5cc SWAP1
0x5cd SWAP2
0x5ce SWAP1
0x5cf POP
0x5d0 POP
0x5d1 PUSH2 0x131f
0x5d4 JUMP
---
0x5a9: JUMPDEST 
0x5aa: V421 = 0x5d5
0x5ad: V422 = 0x4
0x5b1: V423 = CALLDATALOAD 0x4
0x5b2: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x5c9: V426 = 0x20
0x5cb: V427 = ADD 0x20 0x4
0x5d1: V428 = 0x131f
0x5d4: JUMP 0x131f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5d5, V425]
Exit stack: [V11, 0x5d5, V425]

================================

Block 0x5d5
[0x5d5:0x5d6]
---
Predecessors: [0x137b]
Successors: []
---
0x5d5 JUMPDEST
0x5d6 STOP
---
0x5d5: JUMPDEST 
0x5d6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5d7
[0x5d7:0x5de]
---
Predecessors: [0xeb]
Successors: [0x13bf]
---
0x5d7 JUMPDEST
0x5d8 PUSH2 0x5df
0x5db PUSH2 0x13bf
0x5de JUMP
---
0x5d7: JUMPDEST 
0x5d8: V429 = 0x5df
0x5db: V430 = 0x13bf
0x5de: JUMP 0x13bf
---
Entry stack: [V11, 0xf3]
Stack pops: 0
Stack additions: [0x5df]
Exit stack: [V11, 0xf3, 0x5df]

================================

Block 0x5df
[0x5df:0x619]
---
Predecessors: [0x13bf]
Successors: [0xf3, 0x346]
---
0x5df JUMPDEST
0x5e0 PUSH1 0x40
0x5e2 DUP1
0x5e3 MLOAD
0x5e4 SWAP1
0x5e5 DUP2
0x5e6 ADD
0x5e7 PUSH1 0x40
0x5e9 MSTORE
0x5ea DUP1
0x5eb PUSH1 0x9
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 PUSH32 0x4c656e646572426f740000000000000000000000000000000000000000000000
0x613 DUP2
0x614 MSTORE
0x615 POP
0x616 SWAP1
0x617 POP
0x618 SWAP1
0x619 JUMP
---
0x5df: JUMPDEST 
0x5e0: V431 = 0x40
0x5e3: V432 = M[0x40]
0x5e6: V433 = ADD V432 0x40
0x5e7: V434 = 0x40
0x5e9: M[0x40] = V433
0x5eb: V435 = 0x9
0x5ee: M[V432] = 0x9
0x5ef: V436 = 0x20
0x5f1: V437 = ADD 0x20 V432
0x5f2: V438 = 0x4c656e646572426f740000000000000000000000000000000000000000000000
0x614: M[V437] = 0x4c656e646572426f740000000000000000000000000000000000000000000000
0x619: JUMP {0xf3, 0x346}
---
Entry stack: [V11, {0xf3, 0x346}, V1179]
Stack pops: 2
Stack additions: [V432]
Exit stack: [V11, V432]

================================

Block 0x61a
[0x61a:0x626]
---
Predecessors: [0x179]
Successors: [0x627, 0x6a9]
---
0x61a JUMPDEST
0x61b PUSH1 0x0
0x61d DUP1
0x61e DUP3
0x61f EQ
0x620 ISZERO
0x621 DUP1
0x622 ISZERO
0x623 PUSH2 0x6a9
0x626 JUMPI
---
0x61a: JUMPDEST 
0x61b: V439 = 0x0
0x61f: V440 = EQ V116 0x0
0x620: V441 = ISZERO V440
0x622: V442 = ISZERO V441
0x623: V443 = 0x6a9
0x626: JUMPI 0x6a9 V442
---
Entry stack: [V11, 0x1ae, V113, V116]
Stack pops: 1
Stack additions: [S0, 0x0, V441]
Exit stack: [V11, 0x1ae, V113, V116, 0x0, V441]

================================

Block 0x627
[0x627:0x6a8]
---
Predecessors: [0x61a]
Successors: [0x6a9]
---
0x627 POP
0x628 PUSH1 0x0
0x62a PUSH1 0x3
0x62c PUSH1 0x0
0x62e CALLER
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65a AND
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f ADD
0x660 SWAP1
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x20
0x665 ADD
0x666 PUSH1 0x0
0x668 SHA3
0x669 PUSH1 0x0
0x66b DUP6
0x66c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x681 AND
0x682 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x697 AND
0x698 DUP2
0x699 MSTORE
0x69a PUSH1 0x20
0x69c ADD
0x69d SWAP1
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 PUSH1 0x0
0x6a5 SHA3
0x6a6 SLOAD
0x6a7 EQ
0x6a8 ISZERO
---
0x628: V444 = 0x0
0x62a: V445 = 0x3
0x62c: V446 = 0x0
0x62e: V447 = CALLER
0x62f: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x645: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x65c: M[0x0] = V451
0x65d: V452 = 0x20
0x65f: V453 = ADD 0x20 0x0
0x662: M[0x20] = 0x3
0x663: V454 = 0x20
0x665: V455 = ADD 0x20 0x20
0x666: V456 = 0x0
0x668: V457 = SHA3 0x0 0x40
0x669: V458 = 0x0
0x66c: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x681: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x682: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x697: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x699: M[0x0] = V462
0x69a: V463 = 0x20
0x69c: V464 = ADD 0x20 0x0
0x69f: M[0x20] = V457
0x6a0: V465 = 0x20
0x6a2: V466 = ADD 0x20 0x20
0x6a3: V467 = 0x0
0x6a5: V468 = SHA3 0x0 0x40
0x6a6: V469 = S[V468]
0x6a7: V470 = EQ V469 0x0
0x6a8: V471 = ISZERO V470
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0, V441]
Stack pops: 4
Stack additions: [S3, S2, S1, V471]
Exit stack: [V11, 0x1ae, V113, V116, 0x0, V471]

================================

Block 0x6a9
[0x6a9:0x6ae]
---
Predecessors: [0x61a, 0x627]
Successors: [0x6af, 0x6b7]
---
0x6a9 JUMPDEST
0x6aa ISZERO
0x6ab PUSH2 0x6b7
0x6ae JUMPI
---
0x6a9: JUMPDEST 
0x6aa: V472 = ISZERO S0
0x6ab: V473 = 0x6b7
0x6ae: JUMPI 0x6b7 V472
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1ae, V113, V116, 0x0]

================================

Block 0x6af
[0x6af:0x6b6]
---
Predecessors: [0x6a9]
Successors: [0x7a2]
---
0x6af PUSH1 0x0
0x6b1 SWAP1
0x6b2 POP
0x6b3 PUSH2 0x7a2
0x6b6 JUMP
---
0x6af: V474 = 0x0
0x6b3: V475 = 0x7a2
0x6b6: JUMP 0x7a2
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1ae, V113, V116, 0x0]

================================

Block 0x6b7
[0x6b7:0x7a1]
---
Predecessors: [0x6a9]
Successors: [0x7a2]
---
0x6b7 JUMPDEST
0x6b8 DUP2
0x6b9 PUSH1 0x3
0x6bb PUSH1 0x0
0x6bd CALLER
0x6be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d3 AND
0x6d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e9 AND
0x6ea DUP2
0x6eb MSTORE
0x6ec PUSH1 0x20
0x6ee ADD
0x6ef SWAP1
0x6f0 DUP2
0x6f1 MSTORE
0x6f2 PUSH1 0x20
0x6f4 ADD
0x6f5 PUSH1 0x0
0x6f7 SHA3
0x6f8 PUSH1 0x0
0x6fa DUP6
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 AND
0x711 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x726 AND
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c SWAP1
0x72d DUP2
0x72e MSTORE
0x72f PUSH1 0x20
0x731 ADD
0x732 PUSH1 0x0
0x734 SHA3
0x735 DUP2
0x736 SWAP1
0x737 SSTORE
0x738 POP
0x739 DUP3
0x73a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 CALLER
0x751 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x766 AND
0x767 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x788 DUP5
0x789 PUSH1 0x40
0x78b MLOAD
0x78c DUP1
0x78d DUP3
0x78e DUP2
0x78f MSTORE
0x790 PUSH1 0x20
0x792 ADD
0x793 SWAP2
0x794 POP
0x795 POP
0x796 PUSH1 0x40
0x798 MLOAD
0x799 DUP1
0x79a SWAP2
0x79b SUB
0x79c SWAP1
0x79d LOG3
0x79e PUSH1 0x1
0x7a0 SWAP1
0x7a1 POP
---
0x6b7: JUMPDEST 
0x6b9: V476 = 0x3
0x6bb: V477 = 0x0
0x6bd: V478 = CALLER
0x6be: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x6d4: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x6eb: M[0x0] = V482
0x6ec: V483 = 0x20
0x6ee: V484 = ADD 0x20 0x0
0x6f1: M[0x20] = 0x3
0x6f2: V485 = 0x20
0x6f4: V486 = ADD 0x20 0x20
0x6f5: V487 = 0x0
0x6f7: V488 = SHA3 0x0 0x40
0x6f8: V489 = 0x0
0x6fb: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x711: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x726: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x728: M[0x0] = V493
0x729: V494 = 0x20
0x72b: V495 = ADD 0x20 0x0
0x72e: M[0x20] = V488
0x72f: V496 = 0x20
0x731: V497 = ADD 0x20 0x20
0x732: V498 = 0x0
0x734: V499 = SHA3 0x0 0x40
0x737: S[V499] = V116
0x73a: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x750: V502 = CALLER
0x751: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x766: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x767: V505 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x789: V506 = 0x40
0x78b: V507 = M[0x40]
0x78f: M[V507] = V116
0x790: V508 = 0x20
0x792: V509 = ADD 0x20 V507
0x796: V510 = 0x40
0x798: V511 = M[0x40]
0x79b: V512 = SUB V509 V511
0x79d: LOG V511 V512 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V504 V501
0x79e: V513 = 0x1
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V11, 0x1ae, V113, V116, 0x1]

================================

Block 0x7a2
[0x7a2:0x7a7]
---
Predecessors: [0x6af, 0x6b7]
Successors: [0x1ae]
---
0x7a2 JUMPDEST
0x7a3 SWAP3
0x7a4 SWAP2
0x7a5 POP
0x7a6 POP
0x7a7 JUMP
---
0x7a2: JUMPDEST 
0x7a7: JUMP 0x1ae
---
Entry stack: [V11, 0x1ae, V113, V116, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x7a8
[0x7a8:0x7ad]
---
Predecessors: [0x1d3]
Successors: [0x1db]
---
0x7a8 JUMPDEST
0x7a9 PUSH1 0x4
0x7ab SLOAD
0x7ac DUP2
0x7ad JUMP
---
0x7a8: JUMPDEST 
0x7a9: V514 = 0x4
0x7ab: V515 = S[0x4]
0x7ad: JUMP 0x1db
---
Entry stack: [V11, 0x1db]
Stack pops: 1
Stack additions: [S0, V515]
Exit stack: [V11, 0x1db, V515]

================================

Block 0x7ae
[0x7ae:0x7c3]
---
Predecessors: [0x1fc]
Successors: [0x7c4, 0x7c5]
---
0x7ae JUMPDEST
0x7af PUSH1 0x0
0x7b1 PUSH1 0x60
0x7b3 PUSH1 0x4
0x7b5 DUP2
0x7b6 ADD
0x7b7 PUSH1 0x0
0x7b9 CALLDATASIZE
0x7ba SWAP1
0x7bb POP
0x7bc LT
0x7bd ISZERO
0x7be ISZERO
0x7bf ISZERO
0x7c0 PUSH2 0x7c5
0x7c3 JUMPI
---
0x7ae: JUMPDEST 
0x7af: V516 = 0x0
0x7b1: V517 = 0x60
0x7b3: V518 = 0x4
0x7b6: V519 = ADD 0x60 0x4
0x7b7: V520 = 0x0
0x7b9: V521 = CALLDATASIZE
0x7bc: V522 = LT V521 0x64
0x7bd: V523 = ISZERO V522
0x7be: V524 = ISZERO V523
0x7bf: V525 = ISZERO V524
0x7c0: V526 = 0x7c5
0x7c3: JUMPI 0x7c5 V525
---
Entry stack: [V11, 0x250, V152, V157, V160]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0x7c4
[0x7c4:0x7c4]
---
Predecessors: [0x7ae]
Successors: []
---
0x7c4 INVALID
---
0x7c4: INVALID 
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0x7c5
[0x7c5:0x80e]
---
Predecessors: [0x7ae]
Successors: [0x80f, 0x890]
---
0x7c5 JUMPDEST
0x7c6 DUP3
0x7c7 PUSH1 0x2
0x7c9 PUSH1 0x0
0x7cb DUP8
0x7cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e1 AND
0x7e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f7 AND
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc ADD
0x7fd SWAP1
0x7fe DUP2
0x7ff MSTORE
0x800 PUSH1 0x20
0x802 ADD
0x803 PUSH1 0x0
0x805 SHA3
0x806 SLOAD
0x807 LT
0x808 ISZERO
0x809 DUP1
0x80a ISZERO
0x80b PUSH2 0x890
0x80e JUMPI
---
0x7c5: JUMPDEST 
0x7c7: V527 = 0x2
0x7c9: V528 = 0x0
0x7cc: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x7e2: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f7: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x7f9: M[0x0] = V532
0x7fa: V533 = 0x20
0x7fc: V534 = ADD 0x20 0x0
0x7ff: M[0x20] = 0x2
0x800: V535 = 0x20
0x802: V536 = ADD 0x20 0x20
0x803: V537 = 0x0
0x805: V538 = SHA3 0x0 0x40
0x806: V539 = S[V538]
0x807: V540 = LT V539 V160
0x808: V541 = ISZERO V540
0x80a: V542 = ISZERO V541
0x80b: V543 = 0x890
0x80e: JUMPI 0x890 V542
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V541]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V541]

================================

Block 0x80f
[0x80f:0x88f]
---
Predecessors: [0x7c5]
Successors: [0x890]
---
0x80f POP
0x810 DUP3
0x811 PUSH1 0x3
0x813 PUSH1 0x0
0x815 DUP8
0x816 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82b AND
0x82c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x841 AND
0x842 DUP2
0x843 MSTORE
0x844 PUSH1 0x20
0x846 ADD
0x847 SWAP1
0x848 DUP2
0x849 MSTORE
0x84a PUSH1 0x20
0x84c ADD
0x84d PUSH1 0x0
0x84f SHA3
0x850 PUSH1 0x0
0x852 CALLER
0x853 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x868 AND
0x869 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87e AND
0x87f DUP2
0x880 MSTORE
0x881 PUSH1 0x20
0x883 ADD
0x884 SWAP1
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x20
0x889 ADD
0x88a PUSH1 0x0
0x88c SHA3
0x88d SLOAD
0x88e LT
0x88f ISZERO
---
0x811: V544 = 0x3
0x813: V545 = 0x0
0x816: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x82b: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x82c: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x841: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x843: M[0x0] = V549
0x844: V550 = 0x20
0x846: V551 = ADD 0x20 0x0
0x849: M[0x20] = 0x3
0x84a: V552 = 0x20
0x84c: V553 = ADD 0x20 0x20
0x84d: V554 = 0x0
0x84f: V555 = SHA3 0x0 0x40
0x850: V556 = 0x0
0x852: V557 = CALLER
0x853: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x868: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x869: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x87e: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x880: M[0x0] = V561
0x881: V562 = 0x20
0x883: V563 = ADD 0x20 0x0
0x886: M[0x20] = V555
0x887: V564 = 0x20
0x889: V565 = ADD 0x20 0x20
0x88a: V566 = 0x0
0x88c: V567 = SHA3 0x0 0x40
0x88d: V568 = S[V567]
0x88e: V569 = LT V568 V160
0x88f: V570 = ISZERO V569
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V541]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V570]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V570]

================================

Block 0x890
[0x890:0x896]
---
Predecessors: [0x7c5, 0x80f]
Successors: [0x897, 0x89c]
---
0x890 JUMPDEST
0x891 DUP1
0x892 ISZERO
0x893 PUSH2 0x89c
0x896 JUMPI
---
0x890: JUMPDEST 
0x892: V571 = ISZERO S0
0x893: V572 = 0x89c
0x896: JUMPI 0x89c V571
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]

================================

Block 0x897
[0x897:0x89b]
---
Predecessors: [0x890]
Successors: [0x89c]
---
0x897 POP
0x898 PUSH1 0x0
0x89a DUP4
0x89b GT
---
0x898: V573 = 0x0
0x89b: V574 = GT V160 0x0
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V574]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V574]

================================

Block 0x89c
[0x89c:0x8a2]
---
Predecessors: [0x890, 0x897]
Successors: [0x8a3, 0x927]
---
0x89c JUMPDEST
0x89d DUP1
0x89e ISZERO
0x89f PUSH2 0x927
0x8a2 JUMPI
---
0x89c: JUMPDEST 
0x89e: V575 = ISZERO S0
0x89f: V576 = 0x927
0x8a2: JUMPI 0x927 V575
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]

================================

Block 0x8a3
[0x8a3:0x926]
---
Predecessors: [0x89c]
Successors: [0x927]
---
0x8a3 POP
0x8a4 PUSH1 0x2
0x8a6 PUSH1 0x0
0x8a8 DUP6
0x8a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8be AND
0x8bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d4 AND
0x8d5 DUP2
0x8d6 MSTORE
0x8d7 PUSH1 0x20
0x8d9 ADD
0x8da SWAP1
0x8db DUP2
0x8dc MSTORE
0x8dd PUSH1 0x20
0x8df ADD
0x8e0 PUSH1 0x0
0x8e2 SHA3
0x8e3 SLOAD
0x8e4 DUP4
0x8e5 PUSH1 0x2
0x8e7 PUSH1 0x0
0x8e9 DUP8
0x8ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ff AND
0x900 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x915 AND
0x916 DUP2
0x917 MSTORE
0x918 PUSH1 0x20
0x91a ADD
0x91b SWAP1
0x91c DUP2
0x91d MSTORE
0x91e PUSH1 0x20
0x920 ADD
0x921 PUSH1 0x0
0x923 SHA3
0x924 SLOAD
0x925 ADD
0x926 GT
---
0x8a4: V577 = 0x2
0x8a6: V578 = 0x0
0x8a9: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0x8be: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x8bf: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d4: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x8d6: M[0x0] = V582
0x8d7: V583 = 0x20
0x8d9: V584 = ADD 0x20 0x0
0x8dc: M[0x20] = 0x2
0x8dd: V585 = 0x20
0x8df: V586 = ADD 0x20 0x20
0x8e0: V587 = 0x0
0x8e2: V588 = SHA3 0x0 0x40
0x8e3: V589 = S[V588]
0x8e5: V590 = 0x2
0x8e7: V591 = 0x0
0x8ea: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ff: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x900: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0x915: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x917: M[0x0] = V595
0x918: V596 = 0x20
0x91a: V597 = ADD 0x20 0x0
0x91d: M[0x20] = 0x2
0x91e: V598 = 0x20
0x920: V599 = ADD 0x20 0x20
0x921: V600 = 0x0
0x923: V601 = SHA3 0x0 0x40
0x924: V602 = S[V601]
0x925: V603 = ADD V602 V160
0x926: V604 = GT V603 V589
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V604]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V604]

================================

Block 0x927
[0x927:0x92c]
---
Predecessors: [0x89c, 0x8a3]
Successors: [0x92d, 0xabe]
---
0x927 JUMPDEST
0x928 ISZERO
0x929 PUSH2 0xabe
0x92c JUMPI
---
0x927: JUMPDEST 
0x928: V605 = ISZERO S0
0x929: V606 = 0xabe
0x92c: JUMPI 0xabe V605
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0x92d
[0x92d:0xabd]
---
Predecessors: [0x927]
Successors: [0xac3]
---
0x92d DUP3
0x92e PUSH1 0x2
0x930 PUSH1 0x0
0x932 DUP8
0x933 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x948 AND
0x949 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95e AND
0x95f DUP2
0x960 MSTORE
0x961 PUSH1 0x20
0x963 ADD
0x964 SWAP1
0x965 DUP2
0x966 MSTORE
0x967 PUSH1 0x20
0x969 ADD
0x96a PUSH1 0x0
0x96c SHA3
0x96d PUSH1 0x0
0x96f DUP3
0x970 DUP3
0x971 SLOAD
0x972 SUB
0x973 SWAP3
0x974 POP
0x975 POP
0x976 DUP2
0x977 SWAP1
0x978 SSTORE
0x979 POP
0x97a DUP3
0x97b PUSH1 0x3
0x97d PUSH1 0x0
0x97f DUP8
0x980 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x995 AND
0x996 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ab AND
0x9ac DUP2
0x9ad MSTORE
0x9ae PUSH1 0x20
0x9b0 ADD
0x9b1 SWAP1
0x9b2 DUP2
0x9b3 MSTORE
0x9b4 PUSH1 0x20
0x9b6 ADD
0x9b7 PUSH1 0x0
0x9b9 SHA3
0x9ba PUSH1 0x0
0x9bc CALLER
0x9bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d2 AND
0x9d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e8 AND
0x9e9 DUP2
0x9ea MSTORE
0x9eb PUSH1 0x20
0x9ed ADD
0x9ee SWAP1
0x9ef DUP2
0x9f0 MSTORE
0x9f1 PUSH1 0x20
0x9f3 ADD
0x9f4 PUSH1 0x0
0x9f6 SHA3
0x9f7 PUSH1 0x0
0x9f9 DUP3
0x9fa DUP3
0x9fb SLOAD
0x9fc SUB
0x9fd SWAP3
0x9fe POP
0x9ff POP
0xa00 DUP2
0xa01 SWAP1
0xa02 SSTORE
0xa03 POP
0xa04 DUP3
0xa05 PUSH1 0x2
0xa07 PUSH1 0x0
0xa09 DUP7
0xa0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1f AND
0xa20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa35 AND
0xa36 DUP2
0xa37 MSTORE
0xa38 PUSH1 0x20
0xa3a ADD
0xa3b SWAP1
0xa3c DUP2
0xa3d MSTORE
0xa3e PUSH1 0x20
0xa40 ADD
0xa41 PUSH1 0x0
0xa43 SHA3
0xa44 PUSH1 0x0
0xa46 DUP3
0xa47 DUP3
0xa48 SLOAD
0xa49 ADD
0xa4a SWAP3
0xa4b POP
0xa4c POP
0xa4d DUP2
0xa4e SWAP1
0xa4f SSTORE
0xa50 POP
0xa51 DUP4
0xa52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa67 AND
0xa68 DUP6
0xa69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7e AND
0xa7f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaa0 DUP6
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 DUP1
0xaa5 DUP3
0xaa6 DUP2
0xaa7 MSTORE
0xaa8 PUSH1 0x20
0xaaa ADD
0xaab SWAP2
0xaac POP
0xaad POP
0xaae PUSH1 0x40
0xab0 MLOAD
0xab1 DUP1
0xab2 SWAP2
0xab3 SUB
0xab4 SWAP1
0xab5 LOG3
0xab6 PUSH1 0x1
0xab8 SWAP2
0xab9 POP
0xaba PUSH2 0xac3
0xabd JUMP
---
0x92e: V607 = 0x2
0x930: V608 = 0x0
0x933: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0x948: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x949: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x95e: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x960: M[0x0] = V612
0x961: V613 = 0x20
0x963: V614 = ADD 0x20 0x0
0x966: M[0x20] = 0x2
0x967: V615 = 0x20
0x969: V616 = ADD 0x20 0x20
0x96a: V617 = 0x0
0x96c: V618 = SHA3 0x0 0x40
0x96d: V619 = 0x0
0x971: V620 = S[V618]
0x972: V621 = SUB V620 V160
0x978: S[V618] = V621
0x97b: V622 = 0x3
0x97d: V623 = 0x0
0x980: V624 = 0xffffffffffffffffffffffffffffffffffffffff
0x995: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x996: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ab: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x9ad: M[0x0] = V627
0x9ae: V628 = 0x20
0x9b0: V629 = ADD 0x20 0x0
0x9b3: M[0x20] = 0x3
0x9b4: V630 = 0x20
0x9b6: V631 = ADD 0x20 0x20
0x9b7: V632 = 0x0
0x9b9: V633 = SHA3 0x0 0x40
0x9ba: V634 = 0x0
0x9bc: V635 = CALLER
0x9bd: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x9d3: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e8: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x9ea: M[0x0] = V639
0x9eb: V640 = 0x20
0x9ed: V641 = ADD 0x20 0x0
0x9f0: M[0x20] = V633
0x9f1: V642 = 0x20
0x9f3: V643 = ADD 0x20 0x20
0x9f4: V644 = 0x0
0x9f6: V645 = SHA3 0x0 0x40
0x9f7: V646 = 0x0
0x9fb: V647 = S[V645]
0x9fc: V648 = SUB V647 V160
0xa02: S[V645] = V648
0xa05: V649 = 0x2
0xa07: V650 = 0x0
0xa0a: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0xa20: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xa35: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0xa37: M[0x0] = V654
0xa38: V655 = 0x20
0xa3a: V656 = ADD 0x20 0x0
0xa3d: M[0x20] = 0x2
0xa3e: V657 = 0x20
0xa40: V658 = ADD 0x20 0x20
0xa41: V659 = 0x0
0xa43: V660 = SHA3 0x0 0x40
0xa44: V661 = 0x0
0xa48: V662 = S[V660]
0xa49: V663 = ADD V662 V160
0xa4f: S[V660] = V663
0xa52: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xa67: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0xa69: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7e: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0xa7f: V668 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaa1: V669 = 0x40
0xaa3: V670 = M[0x40]
0xaa7: M[V670] = V160
0xaa8: V671 = 0x20
0xaaa: V672 = ADD 0x20 V670
0xaae: V673 = 0x40
0xab0: V674 = M[0x40]
0xab3: V675 = SUB V672 V674
0xab5: LOG V674 V675 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V667 V665
0xab6: V676 = 0x1
0xaba: V677 = 0xac3
0xabd: JUMP 0xac3
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, 0x1, S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x1, 0x60]

================================

Block 0xabe
[0xabe:0xac2]
---
Predecessors: [0x927]
Successors: [0xac3]
---
0xabe JUMPDEST
0xabf PUSH1 0x0
0xac1 SWAP2
0xac2 POP
---
0xabe: JUMPDEST 
0xabf: V678 = 0x0
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0xac3
[0xac3:0xaca]
---
Predecessors: [0x92d, 0xabe]
Successors: [0x250]
---
0xac3 JUMPDEST
0xac4 POP
0xac5 SWAP4
0xac6 SWAP3
0xac7 POP
0xac8 POP
0xac9 POP
0xaca JUMP
---
0xac3: JUMPDEST 
0xaca: JUMP 0x250
---
Entry stack: [V11, 0x250, V152, V157, V160, {0x0, 0x1}, 0x60]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xacb
[0xacb:0xad3]
---
Predecessors: [0x275]
Successors: [0x27d]
---
0xacb JUMPDEST
0xacc PUSH1 0x0
0xace PUSH1 0x8
0xad0 SWAP1
0xad1 POP
0xad2 SWAP1
0xad3 JUMP
---
0xacb: JUMPDEST 
0xacc: V679 = 0x0
0xace: V680 = 0x8
0xad3: JUMP 0x27d
---
Entry stack: [V11, 0x27d]
Stack pops: 1
Stack additions: [0x8]
Exit stack: [V11, 0x8]

================================

Block 0xad4
[0xad4:0xaf4]
---
Predecessors: [0x2a4, 0xed1]
Successors: [0x2d0, 0xee0]
---
0xad4 JUMPDEST
0xad5 PUSH1 0x0
0xad7 DUP2
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed AND
0xaee BALANCE
0xaef SWAP1
0xaf0 POP
0xaf1 SWAP2
0xaf2 SWAP1
0xaf3 POP
0xaf4 JUMP
---
0xad4: JUMPDEST 
0xad5: V681 = 0x0
0xad8: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xaee: V684 = BALANCE V683
0xaf4: JUMP {0x2d0, 0xee0}
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S3, S2, {0x2d0, 0xee0}, S0]
Stack pops: 2
Stack additions: [V684]
Exit stack: [V11, 0x4b2, V338, V346, V349, S3, S2, V684]

================================

Block 0xaf5
[0xaf5:0xb3d]
---
Predecessors: [0x2f1]
Successors: [0x31d]
---
0xaf5 JUMPDEST
0xaf6 PUSH1 0x0
0xaf8 PUSH1 0x2
0xafa PUSH1 0x0
0xafc DUP4
0xafd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb12 AND
0xb13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb28 AND
0xb29 DUP2
0xb2a MSTORE
0xb2b PUSH1 0x20
0xb2d ADD
0xb2e SWAP1
0xb2f DUP2
0xb30 MSTORE
0xb31 PUSH1 0x20
0xb33 ADD
0xb34 PUSH1 0x0
0xb36 SHA3
0xb37 SLOAD
0xb38 SWAP1
0xb39 POP
0xb3a SWAP2
0xb3b SWAP1
0xb3c POP
0xb3d JUMP
---
0xaf5: JUMPDEST 
0xaf6: V685 = 0x0
0xaf8: V686 = 0x2
0xafa: V687 = 0x0
0xafd: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xb12: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0xb13: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0xb28: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0xb2a: M[0x0] = V691
0xb2b: V692 = 0x20
0xb2d: V693 = ADD 0x20 0x0
0xb30: M[0x20] = 0x2
0xb31: V694 = 0x20
0xb33: V695 = ADD 0x20 0x20
0xb34: V696 = 0x0
0xb36: V697 = SHA3 0x0 0x40
0xb37: V698 = S[V697]
0xb3d: JUMP 0x31d
---
Entry stack: [V11, 0x31d, V219]
Stack pops: 2
Stack additions: [V698]
Exit stack: [V11, V698]

================================

Block 0xb3e
[0xb3e:0xb45]
---
Predecessors: [0x33e]
Successors: [0x13bf]
---
0xb3e JUMPDEST
0xb3f PUSH2 0xb46
0xb42 PUSH2 0x13bf
0xb45 JUMP
---
0xb3e: JUMPDEST 
0xb3f: V699 = 0xb46
0xb42: V700 = 0x13bf
0xb45: JUMP 0x13bf
---
Entry stack: [V11, 0x346]
Stack pops: 0
Stack additions: [0xb46]
Exit stack: [V11, 0x346, 0xb46]

================================

Block 0xb46
[0xb46:0xb80]
---
Predecessors: [0x13bf]
Successors: [0xf3, 0x346]
---
0xb46 JUMPDEST
0xb47 PUSH1 0x40
0xb49 DUP1
0xb4a MLOAD
0xb4b SWAP1
0xb4c DUP2
0xb4d ADD
0xb4e PUSH1 0x40
0xb50 MSTORE
0xb51 DUP1
0xb52 PUSH1 0x5
0xb54 DUP2
0xb55 MSTORE
0xb56 PUSH1 0x20
0xb58 ADD
0xb59 PUSH32 0x4368697073000000000000000000000000000000000000000000000000000000
0xb7a DUP2
0xb7b MSTORE
0xb7c POP
0xb7d SWAP1
0xb7e POP
0xb7f SWAP1
0xb80 JUMP
---
0xb46: JUMPDEST 
0xb47: V701 = 0x40
0xb4a: V702 = M[0x40]
0xb4d: V703 = ADD V702 0x40
0xb4e: V704 = 0x40
0xb50: M[0x40] = V703
0xb52: V705 = 0x5
0xb55: M[V702] = 0x5
0xb56: V706 = 0x20
0xb58: V707 = ADD 0x20 V702
0xb59: V708 = 0x4368697073000000000000000000000000000000000000000000000000000000
0xb7b: M[V707] = 0x4368697073000000000000000000000000000000000000000000000000000000
0xb80: JUMP {0xf3, 0x346}
---
Entry stack: [V11, {0xf3, 0x346}, V1179]
Stack pops: 2
Stack additions: [V702]
Exit stack: [V11, V702]

================================

Block 0xb81
[0xb81:0xbda]
---
Predecessors: [0x3cc]
Successors: [0xbdb, 0xbdf]
---
0xb81 JUMPDEST
0xb82 PUSH1 0x0
0xb84 PUSH1 0x1
0xb86 PUSH1 0x0
0xb88 SWAP1
0xb89 SLOAD
0xb8a SWAP1
0xb8b PUSH2 0x100
0xb8e EXP
0xb8f SWAP1
0xb90 DIV
0xb91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba6 AND
0xba7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbc AND
0xbbd CALLER
0xbbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd3 AND
0xbd4 EQ
0xbd5 ISZERO
0xbd6 ISZERO
0xbd7 PUSH2 0xbdf
0xbda JUMPI
---
0xb81: JUMPDEST 
0xb82: V709 = 0x0
0xb84: V710 = 0x1
0xb86: V711 = 0x0
0xb89: V712 = S[0x1]
0xb8b: V713 = 0x100
0xb8e: V714 = EXP 0x100 0x0
0xb90: V715 = DIV V712 0x1
0xb91: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0xba6: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0xba7: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbc: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0xbbd: V720 = CALLER
0xbbe: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd3: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0xbd4: V723 = EQ V722 V719
0xbd5: V724 = ISZERO V723
0xbd6: V725 = ISZERO V724
0xbd7: V726 = 0xbdf
0xbda: JUMPI 0xbdf V725
---
Entry stack: [V11, 0x3d4]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x3d4, 0x0]

================================

Block 0xbdb
[0xbdb:0xbde]
---
Predecessors: [0xb81]
Successors: []
---
0xbdb PUSH1 0x0
0xbdd DUP1
0xbde REVERT
---
0xbdb: V727 = 0x0
0xbde: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3d4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3d4, 0x0]

================================

Block 0xbdf
[0xbdf:0xc2c]
---
Predecessors: [0xb81]
Successors: [0x3d4]
---
0xbdf JUMPDEST
0xbe0 PUSH1 0x1
0xbe2 PUSH1 0x5
0xbe4 PUSH1 0x0
0xbe6 PUSH2 0x100
0xbe9 EXP
0xbea DUP2
0xbeb SLOAD
0xbec DUP2
0xbed PUSH1 0xff
0xbef MUL
0xbf0 NOT
0xbf1 AND
0xbf2 SWAP1
0xbf3 DUP4
0xbf4 ISZERO
0xbf5 ISZERO
0xbf6 MUL
0xbf7 OR
0xbf8 SWAP1
0xbf9 SSTORE
0xbfa POP
0xbfb PUSH32 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xc1c PUSH1 0x40
0xc1e MLOAD
0xc1f PUSH1 0x40
0xc21 MLOAD
0xc22 DUP1
0xc23 SWAP2
0xc24 SUB
0xc25 SWAP1
0xc26 LOG1
0xc27 PUSH1 0x1
0xc29 SWAP1
0xc2a POP
0xc2b SWAP1
0xc2c JUMP
---
0xbdf: JUMPDEST 
0xbe0: V728 = 0x1
0xbe2: V729 = 0x5
0xbe4: V730 = 0x0
0xbe6: V731 = 0x100
0xbe9: V732 = EXP 0x100 0x0
0xbeb: V733 = S[0x5]
0xbed: V734 = 0xff
0xbef: V735 = MUL 0xff 0x1
0xbf0: V736 = NOT 0xff
0xbf1: V737 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V733
0xbf4: V738 = ISZERO 0x1
0xbf5: V739 = ISZERO 0x0
0xbf6: V740 = MUL 0x1 0x1
0xbf7: V741 = OR 0x1 V737
0xbf9: S[0x5] = V741
0xbfb: V742 = 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xc1c: V743 = 0x40
0xc1e: V744 = M[0x40]
0xc1f: V745 = 0x40
0xc21: V746 = M[0x40]
0xc24: V747 = SUB V744 V746
0xc26: LOG V746 V747 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xc27: V748 = 0x1
0xc2c: JUMP 0x3d4
---
Entry stack: [V11, 0x3d4, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xc2d
[0xc2d:0xc42]
---
Predecessors: [0x3f9]
Successors: [0xc43, 0xc44]
---
0xc2d JUMPDEST
0xc2e PUSH1 0x0
0xc30 PUSH1 0x40
0xc32 PUSH1 0x4
0xc34 DUP2
0xc35 ADD
0xc36 PUSH1 0x0
0xc38 CALLDATASIZE
0xc39 SWAP1
0xc3a POP
0xc3b LT
0xc3c ISZERO
0xc3d ISZERO
0xc3e ISZERO
0xc3f PUSH2 0xc44
0xc42 JUMPI
---
0xc2d: JUMPDEST 
0xc2e: V749 = 0x0
0xc30: V750 = 0x40
0xc32: V751 = 0x4
0xc35: V752 = ADD 0x40 0x4
0xc36: V753 = 0x0
0xc38: V754 = CALLDATASIZE
0xc3b: V755 = LT V754 0x44
0xc3c: V756 = ISZERO V755
0xc3d: V757 = ISZERO V756
0xc3e: V758 = ISZERO V757
0xc3f: V759 = 0xc44
0xc42: JUMPI 0xc44 V758
---
Entry stack: [V11, 0x42e, V302, V305]
Stack pops: 0
Stack additions: [0x0, 0x40]
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40]

================================

Block 0xc43
[0xc43:0xc43]
---
Predecessors: [0xc2d]
Successors: []
---
0xc43 INVALID
---
0xc43: INVALID 
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40]

================================

Block 0xc44
[0xc44:0xc8d]
---
Predecessors: [0xc2d]
Successors: [0xc8e, 0xc93]
---
0xc44 JUMPDEST
0xc45 DUP3
0xc46 PUSH1 0x2
0xc48 PUSH1 0x0
0xc4a CALLER
0xc4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc60 AND
0xc61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc76 AND
0xc77 DUP2
0xc78 MSTORE
0xc79 PUSH1 0x20
0xc7b ADD
0xc7c SWAP1
0xc7d DUP2
0xc7e MSTORE
0xc7f PUSH1 0x20
0xc81 ADD
0xc82 PUSH1 0x0
0xc84 SHA3
0xc85 SLOAD
0xc86 LT
0xc87 ISZERO
0xc88 DUP1
0xc89 ISZERO
0xc8a PUSH2 0xc93
0xc8d JUMPI
---
0xc44: JUMPDEST 
0xc46: V760 = 0x2
0xc48: V761 = 0x0
0xc4a: V762 = CALLER
0xc4b: V763 = 0xffffffffffffffffffffffffffffffffffffffff
0xc60: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0xc61: V765 = 0xffffffffffffffffffffffffffffffffffffffff
0xc76: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V764
0xc78: M[0x0] = V766
0xc79: V767 = 0x20
0xc7b: V768 = ADD 0x20 0x0
0xc7e: M[0x20] = 0x2
0xc7f: V769 = 0x20
0xc81: V770 = ADD 0x20 0x20
0xc82: V771 = 0x0
0xc84: V772 = SHA3 0x0 0x40
0xc85: V773 = S[V772]
0xc86: V774 = LT V773 V305
0xc87: V775 = ISZERO V774
0xc89: V776 = ISZERO V775
0xc8a: V777 = 0xc93
0xc8d: JUMPI 0xc93 V776
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0, V775]
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40, V775]

================================

Block 0xc8e
[0xc8e:0xc92]
---
Predecessors: [0xc44]
Successors: [0xc93]
---
0xc8e POP
0xc8f PUSH1 0x0
0xc91 DUP4
0xc92 GT
---
0xc8f: V778 = 0x0
0xc92: V779 = GT V305 0x0
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40, V775]
Stack pops: 4
Stack additions: [S3, S2, S1, V779]
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40, V779]

================================

Block 0xc93
[0xc93:0xc99]
---
Predecessors: [0xc44, 0xc8e]
Successors: [0xc9a, 0xd1e]
---
0xc93 JUMPDEST
0xc94 DUP1
0xc95 ISZERO
0xc96 PUSH2 0xd1e
0xc99 JUMPI
---
0xc93: JUMPDEST 
0xc95: V780 = ISZERO S0
0xc96: V781 = 0xd1e
0xc99: JUMPI 0xd1e V780
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40, S0]

================================

Block 0xc9a
[0xc9a:0xd1d]
---
Predecessors: [0xc93]
Successors: [0xd1e]
---
0xc9a POP
0xc9b PUSH1 0x2
0xc9d PUSH1 0x0
0xc9f DUP6
0xca0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb5 AND
0xcb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccb AND
0xccc DUP2
0xccd MSTORE
0xcce PUSH1 0x20
0xcd0 ADD
0xcd1 SWAP1
0xcd2 DUP2
0xcd3 MSTORE
0xcd4 PUSH1 0x20
0xcd6 ADD
0xcd7 PUSH1 0x0
0xcd9 SHA3
0xcda SLOAD
0xcdb DUP4
0xcdc PUSH1 0x2
0xcde PUSH1 0x0
0xce0 DUP8
0xce1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf6 AND
0xcf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0c AND
0xd0d DUP2
0xd0e MSTORE
0xd0f PUSH1 0x20
0xd11 ADD
0xd12 SWAP1
0xd13 DUP2
0xd14 MSTORE
0xd15 PUSH1 0x20
0xd17 ADD
0xd18 PUSH1 0x0
0xd1a SHA3
0xd1b SLOAD
0xd1c ADD
0xd1d GT
---
0xc9b: V782 = 0x2
0xc9d: V783 = 0x0
0xca0: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb5: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xcb6: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xccb: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0xccd: M[0x0] = V787
0xcce: V788 = 0x20
0xcd0: V789 = ADD 0x20 0x0
0xcd3: M[0x20] = 0x2
0xcd4: V790 = 0x20
0xcd6: V791 = ADD 0x20 0x20
0xcd7: V792 = 0x0
0xcd9: V793 = SHA3 0x0 0x40
0xcda: V794 = S[V793]
0xcdc: V795 = 0x2
0xcde: V796 = 0x0
0xce1: V797 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf6: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xcf7: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0c: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0xd0e: M[0x0] = V800
0xd0f: V801 = 0x20
0xd11: V802 = ADD 0x20 0x0
0xd14: M[0x20] = 0x2
0xd15: V803 = 0x20
0xd17: V804 = ADD 0x20 0x20
0xd18: V805 = 0x0
0xd1a: V806 = SHA3 0x0 0x40
0xd1b: V807 = S[V806]
0xd1c: V808 = ADD V807 V305
0xd1d: V809 = GT V808 V794
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V809]
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40, V809]

================================

Block 0xd1e
[0xd1e:0xd23]
---
Predecessors: [0xc93, 0xc9a]
Successors: [0xd24, 0xe2b]
---
0xd1e JUMPDEST
0xd1f ISZERO
0xd20 PUSH2 0xe2b
0xd23 JUMPI
---
0xd1e: JUMPDEST 
0xd1f: V810 = ISZERO S0
0xd20: V811 = 0xe2b
0xd23: JUMPI 0xe2b V810
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40]

================================

Block 0xd24
[0xd24:0xe2a]
---
Predecessors: [0xd1e]
Successors: [0xe30]
---
0xd24 DUP3
0xd25 PUSH1 0x2
0xd27 PUSH1 0x0
0xd29 CALLER
0xd2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3f AND
0xd40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd55 AND
0xd56 DUP2
0xd57 MSTORE
0xd58 PUSH1 0x20
0xd5a ADD
0xd5b SWAP1
0xd5c DUP2
0xd5d MSTORE
0xd5e PUSH1 0x20
0xd60 ADD
0xd61 PUSH1 0x0
0xd63 SHA3
0xd64 PUSH1 0x0
0xd66 DUP3
0xd67 DUP3
0xd68 SLOAD
0xd69 SUB
0xd6a SWAP3
0xd6b POP
0xd6c POP
0xd6d DUP2
0xd6e SWAP1
0xd6f SSTORE
0xd70 POP
0xd71 DUP3
0xd72 PUSH1 0x2
0xd74 PUSH1 0x0
0xd76 DUP7
0xd77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8c AND
0xd8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda2 AND
0xda3 DUP2
0xda4 MSTORE
0xda5 PUSH1 0x20
0xda7 ADD
0xda8 SWAP1
0xda9 DUP2
0xdaa MSTORE
0xdab PUSH1 0x20
0xdad ADD
0xdae PUSH1 0x0
0xdb0 SHA3
0xdb1 PUSH1 0x0
0xdb3 DUP3
0xdb4 DUP3
0xdb5 SLOAD
0xdb6 ADD
0xdb7 SWAP3
0xdb8 POP
0xdb9 POP
0xdba DUP2
0xdbb SWAP1
0xdbc SSTORE
0xdbd POP
0xdbe DUP4
0xdbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd4 AND
0xdd5 CALLER
0xdd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdeb AND
0xdec PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xe0d DUP6
0xe0e PUSH1 0x40
0xe10 MLOAD
0xe11 DUP1
0xe12 DUP3
0xe13 DUP2
0xe14 MSTORE
0xe15 PUSH1 0x20
0xe17 ADD
0xe18 SWAP2
0xe19 POP
0xe1a POP
0xe1b PUSH1 0x40
0xe1d MLOAD
0xe1e DUP1
0xe1f SWAP2
0xe20 SUB
0xe21 SWAP1
0xe22 LOG3
0xe23 PUSH1 0x1
0xe25 SWAP2
0xe26 POP
0xe27 PUSH2 0xe30
0xe2a JUMP
---
0xd25: V812 = 0x2
0xd27: V813 = 0x0
0xd29: V814 = CALLER
0xd2a: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3f: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0xd40: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xd55: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xd57: M[0x0] = V818
0xd58: V819 = 0x20
0xd5a: V820 = ADD 0x20 0x0
0xd5d: M[0x20] = 0x2
0xd5e: V821 = 0x20
0xd60: V822 = ADD 0x20 0x20
0xd61: V823 = 0x0
0xd63: V824 = SHA3 0x0 0x40
0xd64: V825 = 0x0
0xd68: V826 = S[V824]
0xd69: V827 = SUB V826 V305
0xd6f: S[V824] = V827
0xd72: V828 = 0x2
0xd74: V829 = 0x0
0xd77: V830 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8c: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xd8d: V832 = 0xffffffffffffffffffffffffffffffffffffffff
0xda2: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V831
0xda4: M[0x0] = V833
0xda5: V834 = 0x20
0xda7: V835 = ADD 0x20 0x0
0xdaa: M[0x20] = 0x2
0xdab: V836 = 0x20
0xdad: V837 = ADD 0x20 0x20
0xdae: V838 = 0x0
0xdb0: V839 = SHA3 0x0 0x40
0xdb1: V840 = 0x0
0xdb5: V841 = S[V839]
0xdb6: V842 = ADD V841 V305
0xdbc: S[V839] = V842
0xdbf: V843 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd4: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xdd5: V845 = CALLER
0xdd6: V846 = 0xffffffffffffffffffffffffffffffffffffffff
0xdeb: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0xdec: V848 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xe0e: V849 = 0x40
0xe10: V850 = M[0x40]
0xe14: M[V850] = V305
0xe15: V851 = 0x20
0xe17: V852 = ADD 0x20 V850
0xe1b: V853 = 0x40
0xe1d: V854 = M[0x40]
0xe20: V855 = SUB V852 V854
0xe22: LOG V854 V855 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V847 V844
0xe23: V856 = 0x1
0xe27: V857 = 0xe30
0xe2a: JUMP 0xe30
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40]
Stack pops: 4
Stack additions: [S3, S2, 0x1, S0]
Exit stack: [V11, 0x42e, V302, V305, 0x1, 0x40]

================================

Block 0xe2b
[0xe2b:0xe2f]
---
Predecessors: [0xd1e]
Successors: [0xe30]
---
0xe2b JUMPDEST
0xe2c PUSH1 0x0
0xe2e SWAP2
0xe2f POP
---
0xe2b: JUMPDEST 
0xe2c: V858 = 0x0
---
Entry stack: [V11, 0x42e, V302, V305, 0x0, 0x40]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x42e, V302, V305, 0x0, 0x40]

================================

Block 0xe30
[0xe30:0xe36]
---
Predecessors: [0xd24, 0xe2b]
Successors: [0x42e]
---
0xe30 JUMPDEST
0xe31 POP
0xe32 SWAP3
0xe33 SWAP2
0xe34 POP
0xe35 POP
0xe36 JUMP
---
0xe30: JUMPDEST 
0xe36: JUMP 0x42e
---
Entry stack: [V11, 0x42e, V302, V305, {0x0, 0x1}, 0x40]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xe37
[0xe37:0xe90]
---
Predecessors: [0x453]
Successors: [0xe91, 0xe95]
---
0xe37 JUMPDEST
0xe38 PUSH1 0x0
0xe3a PUSH1 0x1
0xe3c PUSH1 0x0
0xe3e SWAP1
0xe3f SLOAD
0xe40 SWAP1
0xe41 PUSH2 0x100
0xe44 EXP
0xe45 SWAP1
0xe46 DIV
0xe47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5c AND
0xe5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe72 AND
0xe73 CALLER
0xe74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe89 AND
0xe8a EQ
0xe8b ISZERO
0xe8c ISZERO
0xe8d PUSH2 0xe95
0xe90 JUMPI
---
0xe37: JUMPDEST 
0xe38: V859 = 0x0
0xe3a: V860 = 0x1
0xe3c: V861 = 0x0
0xe3f: V862 = S[0x1]
0xe41: V863 = 0x100
0xe44: V864 = EXP 0x100 0x0
0xe46: V865 = DIV V862 0x1
0xe47: V866 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5c: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0xe5d: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0xe72: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V867
0xe73: V870 = CALLER
0xe74: V871 = 0xffffffffffffffffffffffffffffffffffffffff
0xe89: V872 = AND 0xffffffffffffffffffffffffffffffffffffffff V870
0xe8a: V873 = EQ V872 V869
0xe8b: V874 = ISZERO V873
0xe8c: V875 = ISZERO V874
0xe8d: V876 = 0xe95
0xe90: JUMPI 0xe95 V875
---
Entry stack: [V11, 0x4b2, V338, V346, V349]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x4b2, V338, V346, V349, 0x0]

================================

Block 0xe91
[0xe91:0xe94]
---
Predecessors: [0xe37]
Successors: []
---
0xe91 PUSH1 0x0
0xe93 DUP1
0xe94 REVERT
---
0xe91: V877 = 0x0
0xe94: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b2, V338, V346, V349, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, 0x0]

================================

Block 0xe95
[0xe95:0xeac]
---
Predecessors: [0xe37]
Successors: [0xead, 0xeb1]
---
0xe95 JUMPDEST
0xe96 PUSH1 0x5
0xe98 PUSH1 0x0
0xe9a SWAP1
0xe9b SLOAD
0xe9c SWAP1
0xe9d PUSH2 0x100
0xea0 EXP
0xea1 SWAP1
0xea2 DIV
0xea3 PUSH1 0xff
0xea5 AND
0xea6 ISZERO
0xea7 ISZERO
0xea8 ISZERO
0xea9 PUSH2 0xeb1
0xeac JUMPI
---
0xe95: JUMPDEST 
0xe96: V878 = 0x5
0xe98: V879 = 0x0
0xe9b: V880 = S[0x5]
0xe9d: V881 = 0x100
0xea0: V882 = EXP 0x100 0x0
0xea2: V883 = DIV V880 0x1
0xea3: V884 = 0xff
0xea5: V885 = AND 0xff V883
0xea6: V886 = ISZERO V885
0xea7: V887 = ISZERO V886
0xea8: V888 = ISZERO V887
0xea9: V889 = 0xeb1
0xeac: JUMPI 0xeb1 V888
---
Entry stack: [V11, 0x4b2, V338, V346, V349, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, 0x0]

================================

Block 0xead
[0xead:0xeb0]
---
Predecessors: [0xe95]
Successors: []
---
0xead PUSH1 0x0
0xeaf DUP1
0xeb0 REVERT
---
0xead: V890 = 0x0
0xeb0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b2, V338, V346, V349, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, 0x0]

================================

Block 0xeb1
[0xeb1:0xeb5]
---
Predecessors: [0xe95]
Successors: [0xeb6]
---
0xeb1 JUMPDEST
0xeb2 PUSH1 0x0
0xeb4 SWAP1
0xeb5 POP
---
0xeb1: JUMPDEST 
0xeb2: V891 = 0x0
---
Entry stack: [V11, 0x4b2, V338, V346, V349, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x4b2, V338, V346, V349, 0x0]

================================

Block 0xeb6
[0xeb6:0xebf]
---
Predecessors: [0xeb1, 0x105d]
Successors: [0xec0, 0x106a]
---
0xeb6 JUMPDEST
0xeb7 DUP4
0xeb8 MLOAD
0xeb9 DUP2
0xeba LT
0xebb ISZERO
0xebc PUSH2 0x106a
0xebf JUMPI
---
0xeb6: JUMPDEST 
0xeb8: V892 = M[V338]
0xeba: V893 = LT S0 V892
0xebb: V894 = ISZERO V893
0xebc: V895 = 0x106a
0xebf: JUMPI 0x106a V894
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x4b2, V338, V346, V349, S0]

================================

Block 0xec0
[0xec0:0xecf]
---
Predecessors: [0xeb6]
Successors: [0xed0, 0xed1]
---
0xec0 DUP2
0xec1 PUSH2 0xee0
0xec4 DUP6
0xec5 DUP4
0xec6 DUP2
0xec7 MLOAD
0xec8 DUP2
0xec9 LT
0xeca ISZERO
0xecb ISZERO
0xecc PUSH2 0xed1
0xecf JUMPI
---
0xec1: V896 = 0xee0
0xec7: V897 = M[V338]
0xec9: V898 = LT S0 V897
0xeca: V899 = ISZERO V898
0xecb: V900 = ISZERO V899
0xecc: V901 = 0xed1
0xecf: JUMPI 0xed1 V900
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, 0xee0, S3, S0]
Exit stack: [V11, 0x4b2, V338, V346, V349, S0, V349, 0xee0, V338, S0]

================================

Block 0xed0
[0xed0:0xed0]
---
Predecessors: [0xec0]
Successors: []
---
0xed0 INVALID
---
0xed0: INVALID 
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S4, V349, 0xee0, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, S4, V349, 0xee0, V338, S0]

================================

Block 0xed1
[0xed1:0xedf]
---
Predecessors: [0xec0]
Successors: [0xad4]
---
0xed1 JUMPDEST
0xed2 SWAP1
0xed3 PUSH1 0x20
0xed5 ADD
0xed6 SWAP1
0xed7 PUSH1 0x20
0xed9 MUL
0xeda ADD
0xedb MLOAD
0xedc PUSH2 0xad4
0xedf JUMP
---
0xed1: JUMPDEST 
0xed3: V902 = 0x20
0xed5: V903 = ADD 0x20 V338
0xed7: V904 = 0x20
0xed9: V905 = MUL 0x20 S0
0xeda: V906 = ADD V905 V903
0xedb: V907 = M[V906]
0xedc: V908 = 0xad4
0xedf: JUMP 0xad4
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S4, V349, 0xee0, V338, S0]
Stack pops: 2
Stack additions: [V907]
Exit stack: [V11, 0x4b2, V338, V346, V349, S4, V349, 0xee0, V907]

================================

Block 0xee0
[0xee0:0xee6]
---
Predecessors: [0xad4]
Successors: [0xee7, 0xeeb]
---
0xee0 JUMPDEST
0xee1 LT
0xee2 ISZERO
0xee3 PUSH2 0xeeb
0xee6 JUMPI
---
0xee0: JUMPDEST 
0xee1: V909 = LT V684 S1
0xee2: V910 = ISZERO V909
0xee3: V911 = 0xeeb
0xee6: JUMPI 0xeeb V910
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S2, S1, V684]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, S2]

================================

Block 0xee7
[0xee7:0xeea]
---
Predecessors: [0xee0]
Successors: [0x105d]
---
0xee7 PUSH2 0x105d
0xeea JUMP
---
0xee7: V912 = 0x105d
0xeea: JUMP 0x105d
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, S0]

================================

Block 0xeeb
[0xeeb:0xf6b]
---
Predecessors: [0xee0]
Successors: [0xf6c, 0xf6d]
---
0xeeb JUMPDEST
0xeec DUP3
0xeed PUSH1 0x2
0xeef PUSH1 0x0
0xef1 PUSH1 0x1
0xef3 PUSH1 0x0
0xef5 SWAP1
0xef6 SLOAD
0xef7 SWAP1
0xef8 PUSH2 0x100
0xefb EXP
0xefc SWAP1
0xefd DIV
0xefe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf13 AND
0xf14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf29 AND
0xf2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3f AND
0xf40 DUP2
0xf41 MSTORE
0xf42 PUSH1 0x20
0xf44 ADD
0xf45 SWAP1
0xf46 DUP2
0xf47 MSTORE
0xf48 PUSH1 0x20
0xf4a ADD
0xf4b PUSH1 0x0
0xf4d SHA3
0xf4e PUSH1 0x0
0xf50 DUP3
0xf51 DUP3
0xf52 SLOAD
0xf53 SUB
0xf54 SWAP3
0xf55 POP
0xf56 POP
0xf57 DUP2
0xf58 SWAP1
0xf59 SSTORE
0xf5a POP
0xf5b DUP3
0xf5c PUSH1 0x2
0xf5e PUSH1 0x0
0xf60 DUP7
0xf61 DUP5
0xf62 DUP2
0xf63 MLOAD
0xf64 DUP2
0xf65 LT
0xf66 ISZERO
0xf67 ISZERO
0xf68 PUSH2 0xf6d
0xf6b JUMPI
---
0xeeb: JUMPDEST 
0xeed: V913 = 0x2
0xeef: V914 = 0x0
0xef1: V915 = 0x1
0xef3: V916 = 0x0
0xef6: V917 = S[0x1]
0xef8: V918 = 0x100
0xefb: V919 = EXP 0x100 0x0
0xefd: V920 = DIV V917 0x1
0xefe: V921 = 0xffffffffffffffffffffffffffffffffffffffff
0xf13: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V920
0xf14: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0xf29: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xf2a: V925 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3f: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V924
0xf41: M[0x0] = V926
0xf42: V927 = 0x20
0xf44: V928 = ADD 0x20 0x0
0xf47: M[0x20] = 0x2
0xf48: V929 = 0x20
0xf4a: V930 = ADD 0x20 0x20
0xf4b: V931 = 0x0
0xf4d: V932 = SHA3 0x0 0x40
0xf4e: V933 = 0x0
0xf52: V934 = S[V932]
0xf53: V935 = SUB V934 V346
0xf59: S[V932] = V935
0xf5c: V936 = 0x2
0xf5e: V937 = 0x0
0xf63: V938 = M[V338]
0xf65: V939 = LT S0 V938
0xf66: V940 = ISZERO V939
0xf67: V941 = ISZERO V940
0xf68: V942 = 0xf6d
0xf6b: JUMPI 0xf6d V941
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, 0x2, 0x0, S3, S0]
Exit stack: [V11, 0x4b2, V338, V346, V349, S0, V346, 0x2, 0x0, V338, S0]

================================

Block 0xf6c
[0xf6c:0xf6c]
---
Predecessors: [0xeeb]
Successors: []
---
0xf6c INVALID
---
0xf6c: INVALID 
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S5, V346, 0x2, 0x0, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, S5, V346, 0x2, 0x0, V338, S0]

================================

Block 0xf6d
[0xf6d:0xfca]
---
Predecessors: [0xeeb]
Successors: [0xfcb, 0xfcc]
---
0xf6d JUMPDEST
0xf6e SWAP1
0xf6f PUSH1 0x20
0xf71 ADD
0xf72 SWAP1
0xf73 PUSH1 0x20
0xf75 MUL
0xf76 ADD
0xf77 MLOAD
0xf78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8d AND
0xf8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa3 AND
0xfa4 DUP2
0xfa5 MSTORE
0xfa6 PUSH1 0x20
0xfa8 ADD
0xfa9 SWAP1
0xfaa DUP2
0xfab MSTORE
0xfac PUSH1 0x20
0xfae ADD
0xfaf PUSH1 0x0
0xfb1 SHA3
0xfb2 PUSH1 0x0
0xfb4 DUP3
0xfb5 DUP3
0xfb6 SLOAD
0xfb7 ADD
0xfb8 SWAP3
0xfb9 POP
0xfba POP
0xfbb DUP2
0xfbc SWAP1
0xfbd SSTORE
0xfbe POP
0xfbf DUP4
0xfc0 DUP2
0xfc1 DUP2
0xfc2 MLOAD
0xfc3 DUP2
0xfc4 LT
0xfc5 ISZERO
0xfc6 ISZERO
0xfc7 PUSH2 0xfcc
0xfca JUMPI
---
0xf6d: JUMPDEST 
0xf6f: V943 = 0x20
0xf71: V944 = ADD 0x20 V338
0xf73: V945 = 0x20
0xf75: V946 = MUL 0x20 S0
0xf76: V947 = ADD V946 V944
0xf77: V948 = M[V947]
0xf78: V949 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8d: V950 = AND 0xffffffffffffffffffffffffffffffffffffffff V948
0xf8e: V951 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa3: V952 = AND 0xffffffffffffffffffffffffffffffffffffffff V950
0xfa5: M[0x0] = V952
0xfa6: V953 = 0x20
0xfa8: V954 = ADD 0x20 0x0
0xfab: M[0x20] = 0x2
0xfac: V955 = 0x20
0xfae: V956 = ADD 0x20 0x20
0xfaf: V957 = 0x0
0xfb1: V958 = SHA3 0x0 0x40
0xfb2: V959 = 0x0
0xfb6: V960 = S[V958]
0xfb7: V961 = ADD V960 V346
0xfbd: S[V958] = V961
0xfc2: V962 = M[V338]
0xfc4: V963 = LT S5 V962
0xfc5: V964 = ISZERO V963
0xfc6: V965 = ISZERO V964
0xfc7: V966 = 0xfcc
0xfca: JUMPI 0xfcc V965
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S5, V346, 0x2, 0x0, V338, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S8, S5]
Exit stack: [V11, 0x4b2, V338, V346, V349, S5, V338, S5]

================================

Block 0xfcb
[0xfcb:0xfcb]
---
Predecessors: [0xf6d]
Successors: []
---
0xfcb INVALID
---
0xfcb: INVALID 
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S2, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b2, V338, V346, V349, S2, V338, S0]

================================

Block 0xfcc
[0xfcc:0x105c]
---
Predecessors: [0xf6d]
Successors: [0x105d]
---
0xfcc JUMPDEST
0xfcd SWAP1
0xfce PUSH1 0x20
0xfd0 ADD
0xfd1 SWAP1
0xfd2 PUSH1 0x20
0xfd4 MUL
0xfd5 ADD
0xfd6 MLOAD
0xfd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfec AND
0xfed PUSH1 0x1
0xfef PUSH1 0x0
0xff1 SWAP1
0xff2 SLOAD
0xff3 SWAP1
0xff4 PUSH2 0x100
0xff7 EXP
0xff8 SWAP1
0xff9 DIV
0xffa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100f AND
0x1010 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1025 AND
0x1026 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1047 DUP6
0x1048 PUSH1 0x40
0x104a MLOAD
0x104b DUP1
0x104c DUP3
0x104d DUP2
0x104e MSTORE
0x104f PUSH1 0x20
0x1051 ADD
0x1052 SWAP2
0x1053 POP
0x1054 POP
0x1055 PUSH1 0x40
0x1057 MLOAD
0x1058 DUP1
0x1059 SWAP2
0x105a SUB
0x105b SWAP1
0x105c LOG3
---
0xfcc: JUMPDEST 
0xfce: V967 = 0x20
0xfd0: V968 = ADD 0x20 V338
0xfd2: V969 = 0x20
0xfd4: V970 = MUL 0x20 S0
0xfd5: V971 = ADD V970 V968
0xfd6: V972 = M[V971]
0xfd7: V973 = 0xffffffffffffffffffffffffffffffffffffffff
0xfec: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V972
0xfed: V975 = 0x1
0xfef: V976 = 0x0
0xff2: V977 = S[0x1]
0xff4: V978 = 0x100
0xff7: V979 = EXP 0x100 0x0
0xff9: V980 = DIV V977 0x1
0xffa: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0x100f: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V980
0x1010: V983 = 0xffffffffffffffffffffffffffffffffffffffff
0x1025: V984 = AND 0xffffffffffffffffffffffffffffffffffffffff V982
0x1026: V985 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1048: V986 = 0x40
0x104a: V987 = M[0x40]
0x104e: M[V987] = V346
0x104f: V988 = 0x20
0x1051: V989 = ADD 0x20 V987
0x1055: V990 = 0x40
0x1057: V991 = M[0x40]
0x105a: V992 = SUB V989 V991
0x105c: LOG V991 V992 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V984 V974
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S2, V338, S0]
Stack pops: 5
Stack additions: [S4, S3, S2]
Exit stack: [V11, 0x4b2, V338, V346, V349, S2]

================================

Block 0x105d
[0x105d:0x1069]
---
Predecessors: [0xee7, 0xfcc]
Successors: [0xeb6]
---
0x105d JUMPDEST
0x105e DUP1
0x105f DUP1
0x1060 PUSH1 0x1
0x1062 ADD
0x1063 SWAP2
0x1064 POP
0x1065 POP
0x1066 PUSH2 0xeb6
0x1069 JUMP
---
0x105d: JUMPDEST 
0x1060: V993 = 0x1
0x1062: V994 = ADD 0x1 S0
0x1066: V995 = 0xeb6
0x1069: JUMP 0xeb6
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S0]
Stack pops: 1
Stack additions: [V994]
Exit stack: [V11, 0x4b2, V338, V346, V349, V994]

================================

Block 0x106a
[0x106a:0x106f]
---
Predecessors: [0xeb6]
Successors: [0x4b2]
---
0x106a JUMPDEST
0x106b POP
0x106c POP
0x106d POP
0x106e POP
0x106f JUMP
---
0x106a: JUMPDEST 
0x106f: JUMP 0x4b2
---
Entry stack: [V11, 0x4b2, V338, V346, V349, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x1070
[0x1070:0x1082]
---
Predecessors: [0x4bf]
Successors: [0x4c7]
---
0x1070 JUMPDEST
0x1071 PUSH1 0x5
0x1073 PUSH1 0x0
0x1075 SWAP1
0x1076 SLOAD
0x1077 SWAP1
0x1078 PUSH2 0x100
0x107b EXP
0x107c SWAP1
0x107d DIV
0x107e PUSH1 0xff
0x1080 AND
0x1081 DUP2
0x1082 JUMP
---
0x1070: JUMPDEST 
0x1071: V996 = 0x5
0x1073: V997 = 0x0
0x1076: V998 = S[0x5]
0x1078: V999 = 0x100
0x107b: V1000 = EXP 0x100 0x0
0x107d: V1001 = DIV V998 0x1
0x107e: V1002 = 0xff
0x1080: V1003 = AND 0xff V1001
0x1082: JUMP 0x4c7
---
Entry stack: [V11, 0x4c7]
Stack pops: 1
Stack additions: [S0, V1003]
Exit stack: [V11, 0x4c7, V1003]

================================

Block 0x1083
[0x1083:0x1109]
---
Predecessors: [0x4ec]
Successors: [0x537]
---
0x1083 JUMPDEST
0x1084 PUSH1 0x0
0x1086 PUSH1 0x3
0x1088 PUSH1 0x0
0x108a DUP5
0x108b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a0 AND
0x10a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b6 AND
0x10b7 DUP2
0x10b8 MSTORE
0x10b9 PUSH1 0x20
0x10bb ADD
0x10bc SWAP1
0x10bd DUP2
0x10be MSTORE
0x10bf PUSH1 0x20
0x10c1 ADD
0x10c2 PUSH1 0x0
0x10c4 SHA3
0x10c5 PUSH1 0x0
0x10c7 DUP4
0x10c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10dd AND
0x10de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f3 AND
0x10f4 DUP2
0x10f5 MSTORE
0x10f6 PUSH1 0x20
0x10f8 ADD
0x10f9 SWAP1
0x10fa DUP2
0x10fb MSTORE
0x10fc PUSH1 0x20
0x10fe ADD
0x10ff PUSH1 0x0
0x1101 SHA3
0x1102 SLOAD
0x1103 SWAP1
0x1104 POP
0x1105 SWAP3
0x1106 SWAP2
0x1107 POP
0x1108 POP
0x1109 JUMP
---
0x1083: JUMPDEST 
0x1084: V1004 = 0x0
0x1086: V1005 = 0x3
0x1088: V1006 = 0x0
0x108b: V1007 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a0: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x10a1: V1009 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b6: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0x10b8: M[0x0] = V1010
0x10b9: V1011 = 0x20
0x10bb: V1012 = ADD 0x20 0x0
0x10be: M[0x20] = 0x3
0x10bf: V1013 = 0x20
0x10c1: V1014 = ADD 0x20 0x20
0x10c2: V1015 = 0x0
0x10c4: V1016 = SHA3 0x0 0x40
0x10c5: V1017 = 0x0
0x10c8: V1018 = 0xffffffffffffffffffffffffffffffffffffffff
0x10dd: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x10de: V1020 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f3: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1019
0x10f5: M[0x0] = V1021
0x10f6: V1022 = 0x20
0x10f8: V1023 = ADD 0x20 0x0
0x10fb: M[0x20] = V1016
0x10fc: V1024 = 0x20
0x10fe: V1025 = ADD 0x20 0x20
0x10ff: V1026 = 0x0
0x1101: V1027 = SHA3 0x0 0x40
0x1102: V1028 = S[V1027]
0x1109: JUMP 0x537
---
Entry stack: [V11, 0x537, V378, V383]
Stack pops: 3
Stack additions: [V1028]
Exit stack: [V11, V1028]

================================

Block 0x110a
[0x110a:0x1166]
---
Predecessors: [0x558]
Successors: [0x1167, 0x116b]
---
0x110a JUMPDEST
0x110b PUSH1 0x0
0x110d DUP1
0x110e PUSH1 0x0
0x1110 PUSH1 0x1
0x1112 PUSH1 0x0
0x1114 SWAP1
0x1115 SLOAD
0x1116 SWAP1
0x1117 PUSH2 0x100
0x111a EXP
0x111b SWAP1
0x111c DIV
0x111d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1132 AND
0x1133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1148 AND
0x1149 CALLER
0x114a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115f AND
0x1160 EQ
0x1161 ISZERO
0x1162 ISZERO
0x1163 PUSH2 0x116b
0x1166 JUMPI
---
0x110a: JUMPDEST 
0x110b: V1029 = 0x0
0x110e: V1030 = 0x0
0x1110: V1031 = 0x1
0x1112: V1032 = 0x0
0x1115: V1033 = S[0x1]
0x1117: V1034 = 0x100
0x111a: V1035 = EXP 0x100 0x0
0x111c: V1036 = DIV V1033 0x1
0x111d: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0x1132: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1036
0x1133: V1039 = 0xffffffffffffffffffffffffffffffffffffffff
0x1148: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1038
0x1149: V1041 = CALLER
0x114a: V1042 = 0xffffffffffffffffffffffffffffffffffffffff
0x115f: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff V1041
0x1160: V1044 = EQ V1043 V1040
0x1161: V1045 = ISZERO V1044
0x1162: V1046 = ISZERO V1045
0x1163: V1047 = 0x116b
0x1166: JUMPI 0x116b V1046
---
Entry stack: [V11, 0x584, V402]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]

================================

Block 0x1167
[0x1167:0x116a]
---
Predecessors: [0x110a]
Successors: []
---
0x1167 PUSH1 0x0
0x1169 DUP1
0x116a REVERT
---
0x1167: V1048 = 0x0
0x116a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]

================================

Block 0x116b
[0x116b:0x120c]
---
Predecessors: [0x110a]
Successors: [0x120d, 0x1211]
---
0x116b JUMPDEST
0x116c DUP4
0x116d SWAP2
0x116e POP
0x116f DUP2
0x1170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1185 AND
0x1186 PUSH4 0x70a08231
0x118b ADDRESS
0x118c PUSH1 0x0
0x118e PUSH1 0x40
0x1190 MLOAD
0x1191 PUSH1 0x20
0x1193 ADD
0x1194 MSTORE
0x1195 PUSH1 0x40
0x1197 MLOAD
0x1198 DUP3
0x1199 PUSH4 0xffffffff
0x119e AND
0x119f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11bd MUL
0x11be DUP2
0x11bf MSTORE
0x11c0 PUSH1 0x4
0x11c2 ADD
0x11c3 DUP1
0x11c4 DUP3
0x11c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11da AND
0x11db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f0 AND
0x11f1 DUP2
0x11f2 MSTORE
0x11f3 PUSH1 0x20
0x11f5 ADD
0x11f6 SWAP2
0x11f7 POP
0x11f8 POP
0x11f9 PUSH1 0x20
0x11fb PUSH1 0x40
0x11fd MLOAD
0x11fe DUP1
0x11ff DUP4
0x1200 SUB
0x1201 DUP2
0x1202 PUSH1 0x0
0x1204 DUP8
0x1205 DUP1
0x1206 EXTCODESIZE
0x1207 ISZERO
0x1208 ISZERO
0x1209 PUSH2 0x1211
0x120c JUMPI
---
0x116b: JUMPDEST 
0x1170: V1049 = 0xffffffffffffffffffffffffffffffffffffffff
0x1185: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x1186: V1051 = 0x70a08231
0x118b: V1052 = ADDRESS
0x118c: V1053 = 0x0
0x118e: V1054 = 0x40
0x1190: V1055 = M[0x40]
0x1191: V1056 = 0x20
0x1193: V1057 = ADD 0x20 V1055
0x1194: M[V1057] = 0x0
0x1195: V1058 = 0x40
0x1197: V1059 = M[0x40]
0x1199: V1060 = 0xffffffff
0x119e: V1061 = AND 0xffffffff 0x70a08231
0x119f: V1062 = 0x100000000000000000000000000000000000000000000000000000000
0x11bd: V1063 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x11bf: M[V1059] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x11c0: V1064 = 0x4
0x11c2: V1065 = ADD 0x4 V1059
0x11c5: V1066 = 0xffffffffffffffffffffffffffffffffffffffff
0x11da: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V1052
0x11db: V1068 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f0: V1069 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0x11f2: M[V1065] = V1069
0x11f3: V1070 = 0x20
0x11f5: V1071 = ADD 0x20 V1065
0x11f9: V1072 = 0x20
0x11fb: V1073 = 0x40
0x11fd: V1074 = M[0x40]
0x1200: V1075 = SUB V1071 V1074
0x1202: V1076 = 0x0
0x1206: V1077 = EXTCODESIZE V1050
0x1207: V1078 = ISZERO V1077
0x1208: V1079 = ISZERO V1078
0x1209: V1080 = 0x1211
0x120c: JUMPI 0x1211 V1079
---
Entry stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]

================================

Block 0x120d
[0x120d:0x1210]
---
Predecessors: [0x116b]
Successors: []
---
0x120d PUSH1 0x0
0x120f DUP1
0x1210 REVERT
---
0x120d: V1081 = 0x0
0x1210: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]

================================

Block 0x1211
[0x1211:0x121d]
---
Predecessors: [0x116b]
Successors: [0x121e, 0x1222]
---
0x1211 JUMPDEST
0x1212 PUSH2 0x2c6
0x1215 GAS
0x1216 SUB
0x1217 CALL
0x1218 ISZERO
0x1219 ISZERO
0x121a PUSH2 0x1222
0x121d JUMPI
---
0x1211: JUMPDEST 
0x1212: V1082 = 0x2c6
0x1215: V1083 = GAS
0x1216: V1084 = SUB V1083 0x2c6
0x1217: V1085 = CALL V1084 V1050 0x0 V1074 V1075 V1074 0x20
0x1218: V1086 = ISZERO V1085
0x1219: V1087 = ISZERO V1086
0x121a: V1088 = 0x1222
0x121d: JUMPI 0x1222 V1087
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]

================================

Block 0x121e
[0x121e:0x1221]
---
Predecessors: [0x1211]
Successors: []
---
0x121e PUSH1 0x0
0x1220 DUP1
0x1221 REVERT
---
0x121e: V1089 = 0x0
0x1221: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]

================================

Block 0x1222
[0x1222:0x12f6]
---
Predecessors: [0x1211]
Successors: [0x12f7, 0x12fb]
---
0x1222 JUMPDEST
0x1223 POP
0x1224 POP
0x1225 POP
0x1226 PUSH1 0x40
0x1228 MLOAD
0x1229 DUP1
0x122a MLOAD
0x122b SWAP1
0x122c POP
0x122d SWAP1
0x122e POP
0x122f DUP2
0x1230 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1245 AND
0x1246 PUSH4 0xa9059cbb
0x124b PUSH1 0x1
0x124d PUSH1 0x0
0x124f SWAP1
0x1250 SLOAD
0x1251 SWAP1
0x1252 PUSH2 0x100
0x1255 EXP
0x1256 SWAP1
0x1257 DIV
0x1258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126d AND
0x126e DUP4
0x126f PUSH1 0x0
0x1271 PUSH1 0x40
0x1273 MLOAD
0x1274 PUSH1 0x20
0x1276 ADD
0x1277 MSTORE
0x1278 PUSH1 0x40
0x127a MLOAD
0x127b DUP4
0x127c PUSH4 0xffffffff
0x1281 AND
0x1282 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12a0 MUL
0x12a1 DUP2
0x12a2 MSTORE
0x12a3 PUSH1 0x4
0x12a5 ADD
0x12a6 DUP1
0x12a7 DUP4
0x12a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12bd AND
0x12be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d3 AND
0x12d4 DUP2
0x12d5 MSTORE
0x12d6 PUSH1 0x20
0x12d8 ADD
0x12d9 DUP3
0x12da DUP2
0x12db MSTORE
0x12dc PUSH1 0x20
0x12de ADD
0x12df SWAP3
0x12e0 POP
0x12e1 POP
0x12e2 POP
0x12e3 PUSH1 0x20
0x12e5 PUSH1 0x40
0x12e7 MLOAD
0x12e8 DUP1
0x12e9 DUP4
0x12ea SUB
0x12eb DUP2
0x12ec PUSH1 0x0
0x12ee DUP8
0x12ef DUP1
0x12f0 EXTCODESIZE
0x12f1 ISZERO
0x12f2 ISZERO
0x12f3 PUSH2 0x12fb
0x12f6 JUMPI
---
0x1222: JUMPDEST 
0x1226: V1090 = 0x40
0x1228: V1091 = M[0x40]
0x122a: V1092 = M[V1091]
0x1230: V1093 = 0xffffffffffffffffffffffffffffffffffffffff
0x1245: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x1246: V1095 = 0xa9059cbb
0x124b: V1096 = 0x1
0x124d: V1097 = 0x0
0x1250: V1098 = S[0x1]
0x1252: V1099 = 0x100
0x1255: V1100 = EXP 0x100 0x0
0x1257: V1101 = DIV V1098 0x1
0x1258: V1102 = 0xffffffffffffffffffffffffffffffffffffffff
0x126d: V1103 = AND 0xffffffffffffffffffffffffffffffffffffffff V1101
0x126f: V1104 = 0x0
0x1271: V1105 = 0x40
0x1273: V1106 = M[0x40]
0x1274: V1107 = 0x20
0x1276: V1108 = ADD 0x20 V1106
0x1277: M[V1108] = 0x0
0x1278: V1109 = 0x40
0x127a: V1110 = M[0x40]
0x127c: V1111 = 0xffffffff
0x1281: V1112 = AND 0xffffffff 0xa9059cbb
0x1282: V1113 = 0x100000000000000000000000000000000000000000000000000000000
0x12a0: V1114 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x12a2: M[V1110] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x12a3: V1115 = 0x4
0x12a5: V1116 = ADD 0x4 V1110
0x12a8: V1117 = 0xffffffffffffffffffffffffffffffffffffffff
0x12bd: V1118 = AND 0xffffffffffffffffffffffffffffffffffffffff V1103
0x12be: V1119 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d3: V1120 = AND 0xffffffffffffffffffffffffffffffffffffffff V1118
0x12d5: M[V1116] = V1120
0x12d6: V1121 = 0x20
0x12d8: V1122 = ADD 0x20 V1116
0x12db: M[V1122] = V1092
0x12dc: V1123 = 0x20
0x12de: V1124 = ADD 0x20 V1122
0x12e3: V1125 = 0x20
0x12e5: V1126 = 0x40
0x12e7: V1127 = M[0x40]
0x12ea: V1128 = SUB V1124 V1127
0x12ec: V1129 = 0x0
0x12f0: V1130 = EXTCODESIZE V1094
0x12f1: V1131 = ISZERO V1130
0x12f2: V1132 = ISZERO V1131
0x12f3: V1133 = 0x12fb
0x12f6: JUMPI 0x12fb V1132
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]
Stack pops: 5
Stack additions: [S4, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]

================================

Block 0x12f7
[0x12f7:0x12fa]
---
Predecessors: [0x1222]
Successors: []
---
0x12f7 PUSH1 0x0
0x12f9 DUP1
0x12fa REVERT
---
0x12f7: V1134 = 0x0
0x12fa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]

================================

Block 0x12fb
[0x12fb:0x1307]
---
Predecessors: [0x1222]
Successors: [0x1308, 0x130c]
---
0x12fb JUMPDEST
0x12fc PUSH2 0x2c6
0x12ff GAS
0x1300 SUB
0x1301 CALL
0x1302 ISZERO
0x1303 ISZERO
0x1304 PUSH2 0x130c
0x1307 JUMPI
---
0x12fb: JUMPDEST 
0x12fc: V1135 = 0x2c6
0x12ff: V1136 = GAS
0x1300: V1137 = SUB V1136 0x2c6
0x1301: V1138 = CALL V1137 V1094 0x0 V1127 V1128 V1127 0x20
0x1302: V1139 = ISZERO V1138
0x1303: V1140 = ISZERO V1139
0x1304: V1141 = 0x130c
0x1307: JUMPI 0x130c V1140
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]

================================

Block 0x1308
[0x1308:0x130b]
---
Predecessors: [0x12fb]
Successors: []
---
0x1308 PUSH1 0x0
0x130a DUP1
0x130b REVERT
---
0x1308: V1142 = 0x0
0x130b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]

================================

Block 0x130c
[0x130c:0x131e]
---
Predecessors: [0x12fb]
Successors: [0x584]
---
0x130c JUMPDEST
0x130d POP
0x130e POP
0x130f POP
0x1310 PUSH1 0x40
0x1312 MLOAD
0x1313 DUP1
0x1314 MLOAD
0x1315 SWAP1
0x1316 POP
0x1317 SWAP3
0x1318 POP
0x1319 POP
0x131a POP
0x131b SWAP2
0x131c SWAP1
0x131d POP
0x131e JUMP
---
0x130c: JUMPDEST 
0x1310: V1143 = 0x40
0x1312: V1144 = M[0x40]
0x1314: V1145 = M[V1144]
0x131e: JUMP 0x584
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]
Stack pops: 8
Stack additions: [V1145]
Exit stack: [V11, V1145]

================================

Block 0x131f
[0x131f:0x1376]
---
Predecessors: [0x5a9]
Successors: [0x1377, 0x137b]
---
0x131f JUMPDEST
0x1320 PUSH1 0x1
0x1322 PUSH1 0x0
0x1324 SWAP1
0x1325 SLOAD
0x1326 SWAP1
0x1327 PUSH2 0x100
0x132a EXP
0x132b SWAP1
0x132c DIV
0x132d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1342 AND
0x1343 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1358 AND
0x1359 CALLER
0x135a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136f AND
0x1370 EQ
0x1371 ISZERO
0x1372 ISZERO
0x1373 PUSH2 0x137b
0x1376 JUMPI
---
0x131f: JUMPDEST 
0x1320: V1146 = 0x1
0x1322: V1147 = 0x0
0x1325: V1148 = S[0x1]
0x1327: V1149 = 0x100
0x132a: V1150 = EXP 0x100 0x0
0x132c: V1151 = DIV V1148 0x1
0x132d: V1152 = 0xffffffffffffffffffffffffffffffffffffffff
0x1342: V1153 = AND 0xffffffffffffffffffffffffffffffffffffffff V1151
0x1343: V1154 = 0xffffffffffffffffffffffffffffffffffffffff
0x1358: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff V1153
0x1359: V1156 = CALLER
0x135a: V1157 = 0xffffffffffffffffffffffffffffffffffffffff
0x136f: V1158 = AND 0xffffffffffffffffffffffffffffffffffffffff V1156
0x1370: V1159 = EQ V1158 V1155
0x1371: V1160 = ISZERO V1159
0x1372: V1161 = ISZERO V1160
0x1373: V1162 = 0x137b
0x1376: JUMPI 0x137b V1161
---
Entry stack: [V11, 0x5d5, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5d5, V425]

================================

Block 0x1377
[0x1377:0x137a]
---
Predecessors: [0x131f]
Successors: []
---
0x1377 PUSH1 0x0
0x1379 DUP1
0x137a REVERT
---
0x1377: V1163 = 0x0
0x137a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5d5, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5d5, V425]

================================

Block 0x137b
[0x137b:0x13be]
---
Predecessors: [0x131f]
Successors: [0x5d5]
---
0x137b JUMPDEST
0x137c DUP1
0x137d PUSH1 0x1
0x137f PUSH1 0x0
0x1381 PUSH2 0x100
0x1384 EXP
0x1385 DUP2
0x1386 SLOAD
0x1387 DUP2
0x1388 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139d MUL
0x139e NOT
0x139f AND
0x13a0 SWAP1
0x13a1 DUP4
0x13a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b7 AND
0x13b8 MUL
0x13b9 OR
0x13ba SWAP1
0x13bb SSTORE
0x13bc POP
0x13bd POP
0x13be JUMP
---
0x137b: JUMPDEST 
0x137d: V1164 = 0x1
0x137f: V1165 = 0x0
0x1381: V1166 = 0x100
0x1384: V1167 = EXP 0x100 0x0
0x1386: V1168 = S[0x1]
0x1388: V1169 = 0xffffffffffffffffffffffffffffffffffffffff
0x139d: V1170 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x139e: V1171 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x139f: V1172 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1168
0x13a2: V1173 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b7: V1174 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x13b8: V1175 = MUL V1174 0x1
0x13b9: V1176 = OR V1175 V1172
0x13bb: S[0x1] = V1176
0x13be: JUMP 0x5d5
---
Entry stack: [V11, 0x5d5, V425]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x13bf
[0x13bf:0x13d2]
---
Predecessors: [0x5d7, 0xb3e]
Successors: [0x5df, 0xb46]
---
0x13bf JUMPDEST
0x13c0 PUSH1 0x20
0x13c2 PUSH1 0x40
0x13c4 MLOAD
0x13c5 SWAP1
0x13c6 DUP2
0x13c7 ADD
0x13c8 PUSH1 0x40
0x13ca MSTORE
0x13cb DUP1
0x13cc PUSH1 0x0
0x13ce DUP2
0x13cf MSTORE
0x13d0 POP
0x13d1 SWAP1
0x13d2 JUMP
---
0x13bf: JUMPDEST 
0x13c0: V1177 = 0x20
0x13c2: V1178 = 0x40
0x13c4: V1179 = M[0x40]
0x13c7: V1180 = ADD V1179 0x20
0x13c8: V1181 = 0x40
0x13ca: M[0x40] = V1180
0x13cc: V1182 = 0x0
0x13cf: M[V1179] = 0x0
0x13d2: JUMP {0x5df, 0xb46}
---
Entry stack: [V11, {0xf3, 0x346}, {0x5df, 0xb46}]
Stack pops: 1
Stack additions: [V1179]
Exit stack: [V11, {0xf3, 0x346}, V1179]

================================

Block 0x13d3
[0x13d3:0x13f7]
---
Predecessors: []
Successors: [0x13f8]
---
0x13d3 STOP
0x13d4 LOG1
0x13d5 PUSH6 0x627a7a723058
0x13dc SHA3
0x13dd SMOD
0x13de MISSING 0xbf
0x13df MISSING 0xd2
0x13e0 MISSING 0xd8
0x13e1 MISSING 0x24
0x13e2 MISSING 0xba
0x13e3 MISSING 0xd2
0x13e4 DUP11
0x13e5 MISSING 0xb9
0x13e6 XOR
0x13e7 POP
0x13e8 MISSING 0xb6
0x13e9 LOG2
0x13ea DIFFICULTY
0x13eb MISSING 0xc5
0x13ec MSTORE8
0x13ed COINBASE
0x13ee MISSING 0xe
0x13ef CODECOPY
0x13f0 DUP5
0x13f1 MISSING 0x4b
0x13f2 XOR
0x13f3 DUP6
0x13f4 ADDMOD
0x13f5 CREATE2
0x13f6 MISSING 0xbd
0x13f7 MLOAD
---
0x13d3: STOP 
0x13d4: LOG S0 S1 S2
0x13d5: V1183 = 0x627a7a723058
0x13dc: V1184 = SHA3 0x627a7a723058 S3
0x13dd: V1185 = SMOD V1184 S4
0x13de: MISSING 0xbf
0x13df: MISSING 0xd2
0x13e0: MISSING 0xd8
0x13e1: MISSING 0x24
0x13e2: MISSING 0xba
0x13e3: MISSING 0xd2
0x13e5: MISSING 0xb9
0x13e6: V1186 = XOR S0 S1
0x13e8: MISSING 0xb6
0x13e9: LOG S0 S1 S2 S3
0x13ea: V1187 = DIFFICULTY
0x13eb: MISSING 0xc5
0x13ec: M8[S0] = S1
0x13ed: V1188 = COINBASE
0x13ee: MISSING 0xe
0x13ef: CODECOPY S0 S1 S2
0x13f1: MISSING 0x4b
0x13f2: V1189 = XOR S0 S1
0x13f4: V1190 = ADDMOD S6 V1189 S2
0x13f5: V1191 = CREATE2 V1190 S3 S4 S5
0x13f6: MISSING 0xbd
0x13f7: V1192 = M[S0]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1185, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V1187, V1188, S7, S3, S4, S5, S6, S7, V1191, S6, V1192]
Exit stack: []

================================

Block 0x13f8
[0x13f8:0x13fe]
---
Predecessors: [0x13d3]
Successors: []
---
0x13f8 JUMPDEST
0x13f9 BLOCKHASH
0x13fa DUP8
0x13fb MSIZE
0x13fc TIMESTAMP
0x13fd STOP
0x13fe MISSING 0x29
---
0x13f8: JUMPDEST 
0x13f9: V1193 = BLOCKHASH V1192
0x13fb: V1194 = MSIZE
0x13fc: V1195 = TIMESTAMP
0x13fd: STOP 
0x13fe: MISSING 0x29
---
Entry stack: [V1192]
Stack pops: 8
Stack additions: [S7, S6, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xe0
Exit block: 0x3b3
Body: 0xe0, 0xe7, 0xeb, 0xf3, 0x118, 0x121, 0x133, 0x147, 0x160, 0x346, 0x36b, 0x374, 0x386, 0x39a, 0x3b3, 0x5d7, 0x5df

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x16e
Exit block: 0x1ae
Body: 0x16e, 0x175, 0x179, 0x1ae, 0x61a, 0x627, 0x6a9, 0x6af, 0x6b7, 0x7a2

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1c8
Exit block: 0x1db
Body: 0x1c8, 0x1cf, 0x1d3, 0x1db, 0x7a8

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1f1
Exit block: 0x250
Body: 0x1f1, 0x1f8, 0x1fc, 0x250, 0x7ae, 0x7c4, 0x7c5, 0x80f, 0x890, 0x897, 0x89c, 0x8a3, 0x927, 0x92d, 0xabe, 0xac3

Function 4:
Public function signature: 0x313ce567
Entry block: 0x26a
Exit block: 0x27d
Body: 0x26a, 0x271, 0x275, 0x27d, 0xacb

Function 5:
Public function signature: 0x4d2301cc
Entry block: 0x299
Exit block: 0x4b2
Body: 0x299, 0x2a0, 0x2a4, 0x2d0, 0x4b2, 0xad4, 0xeb6, 0xec0, 0xed0, 0xed1, 0xee0, 0xee7, 0xeeb, 0xf6c, 0xf6d, 0xfcb, 0xfcc, 0x105d, 0x106a

Function 6:
Public function signature: 0x70a08231
Entry block: 0x2e6
Exit block: 0x31d
Body: 0x2e6, 0x2ed, 0x2f1, 0x31d, 0xaf5

Function 7:
Public function signature: 0x95d89b41
Entry block: 0x333
Exit block: 0x160
Body: 0xf3, 0x118, 0x121, 0x133, 0x147, 0x160, 0x333, 0x33a, 0x33e, 0x346, 0x36b, 0x374, 0x386, 0x39a, 0x3b3, 0xb3e, 0xb46

Function 8:
Public function signature: 0x9b1cbccc
Entry block: 0x3c1
Exit block: 0x3d4
Body: 0x3c1, 0x3c8, 0x3cc, 0x3d4, 0xb81, 0xbdb, 0xbdf

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x3ee
Exit block: 0x42e
Body: 0x3ee, 0x3f5, 0x3f9, 0x42e, 0xc2d, 0xc43, 0xc44, 0xc8e, 0xc93, 0xc9a, 0xd1e, 0xd24, 0xe2b, 0xe30

Function 10:
Public function signature: 0xbfe1292a
Entry block: 0x448
Exit block: 0xfcb
Body: 0x2d0, 0x448, 0x44f, 0x453, 0x4b2, 0xad4, 0xe37, 0xe91, 0xe95, 0xead, 0xeb1, 0xeb6, 0xec0, 0xed0, 0xed1, 0xee0, 0xee7, 0xeeb, 0xf6c, 0xf6d, 0xfcb, 0xfcc, 0x105d, 0x106a

Function 11:
Public function signature: 0xc108d542
Entry block: 0x4b4
Exit block: 0x4c7
Body: 0x4b4, 0x4bb, 0x4bf, 0x4c7, 0x1070

Function 12:
Public function signature: 0xdd62ed3e
Entry block: 0x4e1
Exit block: 0x537
Body: 0x4e1, 0x4e8, 0x4ec, 0x537, 0x1083

Function 13:
Public function signature: 0xe58fc54c
Entry block: 0x54d
Exit block: 0x584
Body: 0x54d, 0x554, 0x558, 0x584, 0x110a, 0x1167, 0x116b, 0x120d, 0x1211, 0x121e, 0x1222, 0x12f7, 0x12fb, 0x1308, 0x130c

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x59e
Exit block: 0x5d5
Body: 0x59e, 0x5a5, 0x5a9, 0x5d5, 0x131f, 0x1377, 0x137b

Function 15:
Public fallback function
Entry block: 0xdb
Exit block: 0xdb
Body: 0xdb

