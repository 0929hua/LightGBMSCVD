Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2c39da94
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2c39da94
0x3c: V13 = EQ 0x2c39da94 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xff]
---
0x41 DUP1
0x42 PUSH4 0x78a72e0d
0x47 EQ
0x48 PUSH2 0xff
0x4b JUMPI
---
0x42: V15 = 0x78a72e0d
0x47: V16 = EQ 0x78a72e0d V11
0x48: V17 = 0xff
0x4b: JUMPI 0xff V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x163]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x163
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x163
0x56: JUMPI 0x163 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1b8]
---
0x57 DUP1
0x58 PUSH4 0xeabf4240
0x5d EQ
0x5e PUSH2 0x1b8
0x61 JUMPI
---
0x58: V21 = 0xeabf4240
0x5d: V22 = EQ 0xeabf4240 V11
0x5e: V23 = 0x1b8
0x61: JUMPI 0x1b8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0xfc]
---
Predecessors: [0x67]
Successors: [0x20d]
---
0x72 JUMPDEST
0x73 PUSH2 0xfd
0x76 PUSH1 0x4
0x78 DUP1
0x79 DUP1
0x7a CALLDATALOAD
0x7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90 AND
0x91 SWAP1
0x92 PUSH1 0x20
0x94 ADD
0x95 SWAP1
0x96 SWAP2
0x97 SWAP1
0x98 DUP1
0x99 CALLDATALOAD
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 SWAP2
0xb6 SWAP1
0xb7 DUP1
0xb8 CALLDATALOAD
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe DUP3
0xbf ADD
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 SWAP1
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP1
0xc7 DUP1
0xc8 DUP1
0xc9 PUSH1 0x20
0xcb MUL
0xcc PUSH1 0x20
0xce ADD
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 SWAP1
0xd3 DUP2
0xd4 ADD
0xd5 PUSH1 0x40
0xd7 MSTORE
0xd8 DUP1
0xd9 SWAP4
0xda SWAP3
0xdb SWAP2
0xdc SWAP1
0xdd DUP2
0xde DUP2
0xdf MSTORE
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 DUP4
0xe4 DUP4
0xe5 PUSH1 0x20
0xe7 MUL
0xe8 DUP1
0xe9 DUP3
0xea DUP5
0xeb CALLDATACOPY
0xec DUP3
0xed ADD
0xee SWAP2
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 SWAP2
0xf6 SWAP1
0xf7 POP
0xf8 POP
0xf9 PUSH2 0x20d
0xfc JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0xfd
0x76: V30 = 0x4
0x7a: V31 = CALLDATALOAD 0x4
0x7b: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x90: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x92: V34 = 0x20
0x94: V35 = ADD 0x20 0x4
0x99: V36 = CALLDATALOAD 0x24
0x9a: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb1: V39 = 0x20
0xb3: V40 = ADD 0x20 0x24
0xb8: V41 = CALLDATALOAD 0x44
0xba: V42 = 0x20
0xbc: V43 = ADD 0x20 0x44
0xbf: V44 = ADD 0x4 V41
0xc1: V45 = CALLDATALOAD V44
0xc3: V46 = 0x20
0xc5: V47 = ADD 0x20 V44
0xc9: V48 = 0x20
0xcb: V49 = MUL 0x20 V45
0xcc: V50 = 0x20
0xce: V51 = ADD 0x20 V49
0xcf: V52 = 0x40
0xd1: V53 = M[0x40]
0xd4: V54 = ADD V53 V51
0xd5: V55 = 0x40
0xd7: M[0x40] = V54
0xdf: M[V53] = V45
0xe0: V56 = 0x20
0xe2: V57 = ADD 0x20 V53
0xe5: V58 = 0x20
0xe7: V59 = MUL 0x20 V45
0xeb: CALLDATACOPY V57 V47 V59
0xed: V60 = ADD V57 V59
0xf9: V61 = 0x20d
0xfc: JUMP 0x20d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfd, V33, V38, V53]
Exit stack: [V11, 0xfd, V33, V38, V53]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: [0x3c0]
Successors: []
---
0xfd JUMPDEST
0xfe STOP
---
0xfd: JUMPDEST 
0xfe: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x41]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V62 = CALLVALUE
0x101: V63 = ISZERO V62
0x102: V64 = 0x10a
0x105: JUMPI 0x10a V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V65 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10a
[0x10a:0x14c]
---
Predecessors: [0xff]
Successors: [0x3cb]
---
0x10a JUMPDEST
0x10b PUSH2 0x14d
0x10e PUSH1 0x4
0x110 DUP1
0x111 DUP1
0x112 CALLDATALOAD
0x113 PUSH12 0xffffffffffffffffffffffff
0x120 AND
0x121 SWAP1
0x122 PUSH1 0x20
0x124 ADD
0x125 SWAP1
0x126 SWAP2
0x127 SWAP1
0x128 DUP1
0x129 CALLDATALOAD
0x12a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f AND
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 SWAP2
0x146 SWAP1
0x147 POP
0x148 POP
0x149 PUSH2 0x3cb
0x14c JUMP
---
0x10a: JUMPDEST 
0x10b: V66 = 0x14d
0x10e: V67 = 0x4
0x112: V68 = CALLDATALOAD 0x4
0x113: V69 = 0xffffffffffffffffffffffff
0x120: V70 = AND 0xffffffffffffffffffffffff V68
0x122: V71 = 0x20
0x124: V72 = ADD 0x20 0x4
0x129: V73 = CALLDATALOAD 0x24
0x12a: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x141: V76 = 0x20
0x143: V77 = ADD 0x20 0x24
0x149: V78 = 0x3cb
0x14c: JUMP 0x3cb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14d, V70, V75]
Exit stack: [V11, 0x14d, V70, V75]

================================

Block 0x14d
[0x14d:0x162]
---
Predecessors: [0x3cb]
Successors: []
---
0x14d JUMPDEST
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 DUP3
0x153 DUP2
0x154 MSTORE
0x155 PUSH1 0x20
0x157 ADD
0x158 SWAP2
0x159 POP
0x15a POP
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f SWAP2
0x160 SUB
0x161 SWAP1
0x162 RETURN
---
0x14d: JUMPDEST 
0x14e: V79 = 0x40
0x150: V80 = M[0x40]
0x154: M[V80] = V224
0x155: V81 = 0x20
0x157: V82 = ADD 0x20 V80
0x15b: V83 = 0x40
0x15d: V84 = M[0x40]
0x160: V85 = SUB V82 V84
0x162: RETURN V84 V85
---
Entry stack: [V11, V224]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x169]
---
Predecessors: [0x4c]
Successors: [0x16a, 0x16e]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x163: JUMPDEST 
0x164: V86 = CALLVALUE
0x165: V87 = ISZERO V86
0x166: V88 = 0x16e
0x169: JUMPI 0x16e V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x163]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V89 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16e
[0x16e:0x175]
---
Predecessors: [0x163]
Successors: [0x411]
---
0x16e JUMPDEST
0x16f PUSH2 0x176
0x172 PUSH2 0x411
0x175 JUMP
---
0x16e: JUMPDEST 
0x16f: V90 = 0x176
0x172: V91 = 0x411
0x175: JUMP 0x411
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x176]
Exit stack: [V11, 0x176]

================================

Block 0x176
[0x176:0x1b7]
---
Predecessors: [0x411]
Successors: []
---
0x176 JUMPDEST
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b DUP3
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad SWAP2
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x176: JUMPDEST 
0x177: V92 = 0x40
0x179: V93 = M[0x40]
0x17c: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x192: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1a9: M[V93] = V97
0x1aa: V98 = 0x20
0x1ac: V99 = ADD 0x20 V93
0x1b0: V100 = 0x40
0x1b2: V101 = M[0x40]
0x1b5: V102 = SUB V99 V101
0x1b7: RETURN V101 V102
---
Entry stack: [V11, 0x176, V232]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x176]

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x57]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V103 = CALLVALUE
0x1ba: V104 = ISZERO V103
0x1bb: V105 = 0x1c3
0x1be: JUMPI 0x1c3 V104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V106 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c3
[0x1c3:0x1ca]
---
Predecessors: [0x1b8]
Successors: [0x437]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x1cb
0x1c7 PUSH2 0x437
0x1ca JUMP
---
0x1c3: JUMPDEST 
0x1c4: V107 = 0x1cb
0x1c7: V108 = 0x437
0x1ca: JUMP 0x437
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1cb]
Exit stack: [V11, 0x1cb]

================================

Block 0x1cb
[0x1cb:0x20c]
---
Predecessors: [0x437]
Successors: []
---
0x1cb JUMPDEST
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP1
0x1d0 DUP3
0x1d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e6 AND
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP2
0x203 POP
0x204 POP
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 SWAP2
0x20a SUB
0x20b SWAP1
0x20c RETURN
---
0x1cb: JUMPDEST 
0x1cc: V109 = 0x40
0x1ce: V110 = M[0x40]
0x1d1: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x1e7: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1fe: M[V110] = V114
0x1ff: V115 = 0x20
0x201: V116 = ADD 0x20 V110
0x205: V117 = 0x40
0x207: V118 = M[0x40]
0x20a: V119 = SUB V116 V118
0x20c: RETURN V118 V119
---
Entry stack: [V11, 0x1cb, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1cb]

================================

Block 0x20d
[0x20d:0x26d]
---
Predecessors: [0x72]
Successors: [0x26e, 0x272]
---
0x20d JUMPDEST
0x20e PUSH1 0x0
0x210 DUP1
0x211 PUSH1 0x0
0x213 DUP1
0x214 PUSH1 0x0
0x216 DUP1
0x217 PUSH1 0x1
0x219 PUSH1 0x0
0x21b SWAP1
0x21c SLOAD
0x21d SWAP1
0x21e PUSH2 0x100
0x221 EXP
0x222 SWAP1
0x223 DIV
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 CALLER
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 EQ
0x268 ISZERO
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x20d: JUMPDEST 
0x20e: V120 = 0x0
0x211: V121 = 0x0
0x214: V122 = 0x0
0x217: V123 = 0x1
0x219: V124 = 0x0
0x21c: V125 = S[0x1]
0x21e: V126 = 0x100
0x221: V127 = EXP 0x100 0x0
0x223: V128 = DIV V125 0x1
0x224: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x23a: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x250: V133 = CALLER
0x251: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x267: V136 = EQ V135 V132
0x268: V137 = ISZERO V136
0x269: V138 = ISZERO V137
0x26a: V139 = 0x272
0x26d: JUMPI 0x272 V138
---
Entry stack: [V11, 0xfd, V33, V38, V53]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xfd, V33, V38, V53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x20d]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V140 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfd, V33, V38, V53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V33, V38, V53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x272
[0x272:0x29e]
---
Predecessors: [0x20d]
Successors: [0x29f]
---
0x272 JUMPDEST
0x273 PUSH1 0x0
0x275 DUP1
0x276 SWAP1
0x277 SLOAD
0x278 SWAP1
0x279 PUSH2 0x100
0x27c EXP
0x27d SWAP1
0x27e DIV
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 SWAP6
0x296 POP
0x297 DUP7
0x298 MLOAD
0x299 SWAP5
0x29a POP
0x29b PUSH1 0x0
0x29d SWAP4
0x29e POP
---
0x272: JUMPDEST 
0x273: V141 = 0x0
0x277: V142 = S[0x0]
0x279: V143 = 0x100
0x27c: V144 = EXP 0x100 0x0
0x27e: V145 = DIV V142 0x1
0x27f: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x298: V148 = M[V53]
0x29b: V149 = 0x0
---
Entry stack: [V11, 0xfd, V33, V38, V53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, V147, V148, 0x0, S2, S1, S0]
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x29f
[0x29f:0x2a7]
---
Predecessors: [0x272, 0x3b0]
Successors: [0x2a8, 0x3c0]
---
0x29f JUMPDEST
0x2a0 DUP5
0x2a1 DUP5
0x2a2 LT
0x2a3 ISZERO
0x2a4 PUSH2 0x3c0
0x2a7 JUMPI
---
0x29f: JUMPDEST 
0x2a2: V150 = LT S3 V148
0x2a3: V151 = ISZERO V150
0x2a4: V152 = 0x3c0
0x2a7: JUMPI 0x3c0 V151
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, S3, S2, S1, S0]

================================

Block 0x2a8
[0x2a8:0x2b3]
---
Predecessors: [0x29f]
Successors: [0x2b4, 0x2b5]
---
0x2a8 DUP7
0x2a9 DUP5
0x2aa DUP2
0x2ab MLOAD
0x2ac DUP2
0x2ad LT
0x2ae ISZERO
0x2af ISZERO
0x2b0 PUSH2 0x2b5
0x2b3 JUMPI
---
0x2ab: V153 = M[V53]
0x2ad: V154 = LT S3 V153
0x2ae: V155 = ISZERO V154
0x2af: V156 = ISZERO V155
0x2b0: V157 = 0x2b5
0x2b3: JUMPI 0x2b5 V156
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, S3]
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, S3, S2, S1, S0, V53, S3]

================================

Block 0x2b4
[0x2b4:0x2b4]
---
Predecessors: [0x2a8]
Successors: []
---
0x2b4 INVALID
---
0x2b4: INVALID 
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S5, S4, S3, S2, V53, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, S5, S4, S3, S2, V53, S0]

================================

Block 0x2b5
[0x2b5:0x39a]
---
Predecessors: [0x2a8]
Successors: [0x39b, 0x39f]
---
0x2b5 JUMPDEST
0x2b6 SWAP1
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba SWAP1
0x2bb PUSH1 0x20
0x2bd MUL
0x2be ADD
0x2bf MLOAD
0x2c0 SWAP3
0x2c1 POP
0x2c2 DUP8
0x2c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d8 AND
0x2d9 PUSH1 0xa0
0x2db DUP5
0x2dc SWAP1
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SWAP1
0x2e1 DIV
0x2e2 MUL
0x2e3 SWAP2
0x2e4 POP
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa DUP4
0x2fb AND
0x2fc SWAP1
0x2fd POP
0x2fe DUP6
0x2ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x314 AND
0x315 PUSH4 0x40c10f19
0x31a DUP3
0x31b DUP5
0x31c PUSH1 0x40
0x31e MLOAD
0x31f DUP4
0x320 PUSH4 0xffffffff
0x325 AND
0x326 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x344 MUL
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x4
0x349 ADD
0x34a DUP1
0x34b DUP4
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 AND
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x20
0x37c ADD
0x37d DUP3
0x37e DUP2
0x37f MSTORE
0x380 PUSH1 0x20
0x382 ADD
0x383 SWAP3
0x384 POP
0x385 POP
0x386 POP
0x387 PUSH1 0x0
0x389 PUSH1 0x40
0x38b MLOAD
0x38c DUP1
0x38d DUP4
0x38e SUB
0x38f DUP2
0x390 PUSH1 0x0
0x392 DUP8
0x393 DUP1
0x394 EXTCODESIZE
0x395 ISZERO
0x396 ISZERO
0x397 PUSH2 0x39f
0x39a JUMPI
---
0x2b5: JUMPDEST 
0x2b7: V158 = 0x20
0x2b9: V159 = ADD 0x20 V53
0x2bb: V160 = 0x20
0x2bd: V161 = MUL 0x20 S0
0x2be: V162 = ADD V161 V159
0x2bf: V163 = M[V162]
0x2c3: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x2d9: V166 = 0xa0
0x2dd: V167 = 0x2
0x2df: V168 = EXP 0x2 0xa0
0x2e1: V169 = DIV V163 0x10000000000000000000000000000000000000000
0x2e2: V170 = MUL V169 V165
0x2e5: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V172 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x314: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x315: V175 = 0x40c10f19
0x31c: V176 = 0x40
0x31e: V177 = M[0x40]
0x320: V178 = 0xffffffff
0x325: V179 = AND 0xffffffff 0x40c10f19
0x326: V180 = 0x100000000000000000000000000000000000000000000000000000000
0x344: V181 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x40c10f19
0x346: M[V177] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x347: V182 = 0x4
0x349: V183 = ADD 0x4 V177
0x34c: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x362: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x379: M[V183] = V187
0x37a: V188 = 0x20
0x37c: V189 = ADD 0x20 V183
0x37f: M[V189] = V170
0x380: V190 = 0x20
0x382: V191 = ADD 0x20 V189
0x387: V192 = 0x0
0x389: V193 = 0x40
0x38b: V194 = M[0x40]
0x38e: V195 = SUB V191 V194
0x390: V196 = 0x0
0x394: V197 = EXTCODESIZE V174
0x395: V198 = ISZERO V197
0x396: V199 = ISZERO V198
0x397: V200 = 0x39f
0x39a: JUMPI 0x39f V199
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S5, S4, S3, S2, V53, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, V163, V170, V172, V174, 0x40c10f19, V191, 0x0, V194, V195, V194, 0x0, V174]
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, S5, V163, V170, V172, V174, 0x40c10f19, V191, 0x0, V194, V195, V194, 0x0, V174]

================================

Block 0x39b
[0x39b:0x39e]
---
Predecessors: [0x2b5]
Successors: []
---
0x39b PUSH1 0x0
0x39d DUP1
0x39e REVERT
---
0x39b: V201 = 0x0
0x39e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S12, V163, V170, V172, V174, 0x40c10f19, V191, 0x0, V194, V195, V194, 0x0, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, S12, V163, V170, V172, V174, 0x40c10f19, V191, 0x0, V194, V195, V194, 0x0, V174]

================================

Block 0x39f
[0x39f:0x3ab]
---
Predecessors: [0x2b5]
Successors: [0x3ac, 0x3b0]
---
0x39f JUMPDEST
0x3a0 PUSH2 0x2c6
0x3a3 GAS
0x3a4 SUB
0x3a5 CALL
0x3a6 ISZERO
0x3a7 ISZERO
0x3a8 PUSH2 0x3b0
0x3ab JUMPI
---
0x39f: JUMPDEST 
0x3a0: V202 = 0x2c6
0x3a3: V203 = GAS
0x3a4: V204 = SUB V203 0x2c6
0x3a5: V205 = CALL V204 V174 0x0 V194 V195 V194 0x0
0x3a6: V206 = ISZERO V205
0x3a7: V207 = ISZERO V206
0x3a8: V208 = 0x3b0
0x3ab: JUMPI 0x3b0 V207
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S12, V163, V170, V172, V174, 0x40c10f19, V191, 0x0, V194, V195, V194, 0x0, V174]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, S12, V163, V170, V172, V174, 0x40c10f19, V191]

================================

Block 0x3ac
[0x3ac:0x3af]
---
Predecessors: [0x39f]
Successors: []
---
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af REVERT
---
0x3ac: V209 = 0x0
0x3af: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S6, V163, V170, V172, V174, 0x40c10f19, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, S6, V163, V170, V172, V174, 0x40c10f19, V191]

================================

Block 0x3b0
[0x3b0:0x3bf]
---
Predecessors: [0x39f]
Successors: [0x29f]
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 POP
0x3b3 POP
0x3b4 DUP4
0x3b5 DUP1
0x3b6 PUSH1 0x1
0x3b8 ADD
0x3b9 SWAP5
0x3ba POP
0x3bb POP
0x3bc PUSH2 0x29f
0x3bf JUMP
---
0x3b0: JUMPDEST 
0x3b6: V210 = 0x1
0x3b8: V211 = ADD 0x1 S6
0x3bc: V212 = 0x29f
0x3bf: JUMP 0x29f
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S6, V163, V170, V172, V174, 0x40c10f19, V191]
Stack pops: 7
Stack additions: [V211, S5, S4, S3]
Exit stack: [V11, 0xfd, V33, V38, V53, V147, V148, V211, V163, V170, V172]

================================

Block 0x3c0
[0x3c0:0x3ca]
---
Predecessors: [0x29f]
Successors: [0xfd]
---
0x3c0 JUMPDEST
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 POP
0x3c9 POP
0x3ca JUMP
---
0x3c0: JUMPDEST 
0x3ca: JUMP 0xfd
---
Entry stack: [V11, 0xfd, V33, V38, V53, V147, V148, S3, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cb
[0x3cb:0x410]
---
Predecessors: [0x10a]
Successors: [0x14d]
---
0x3cb JUMPDEST
0x3cc PUSH1 0x0
0x3ce DUP2
0x3cf PUSH1 0xa0
0x3d1 DUP5
0x3d2 PUSH12 0xffffffffffffffffffffffff
0x3df AND
0x3e0 SWAP1
0x3e1 PUSH1 0x2
0x3e3 EXP
0x3e4 MUL
0x3e5 PUSH12 0xffffffffffffffffffffffff
0x3f2 AND
0x3f3 OR
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a SWAP1
0x40b POP
0x40c SWAP3
0x40d SWAP2
0x40e POP
0x40f POP
0x410 JUMP
---
0x3cb: JUMPDEST 
0x3cc: V213 = 0x0
0x3cf: V214 = 0xa0
0x3d2: V215 = 0xffffffffffffffffffffffff
0x3df: V216 = AND 0xffffffffffffffffffffffff V70
0x3e1: V217 = 0x2
0x3e3: V218 = EXP 0x2 0xa0
0x3e4: V219 = MUL 0x10000000000000000000000000000000000000000 V216
0x3e5: V220 = 0xffffffffffffffffffffffff
0x3f2: V221 = AND 0xffffffffffffffffffffffff V219
0x3f3: V222 = OR V221 V75
0x3f4: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x410: JUMP 0x14d
---
Entry stack: [V11, 0x14d, V70, V75]
Stack pops: 3
Stack additions: [V224]
Exit stack: [V11, V224]

================================

Block 0x411
[0x411:0x436]
---
Predecessors: [0x16e]
Successors: [0x176]
---
0x411 JUMPDEST
0x412 PUSH1 0x1
0x414 PUSH1 0x0
0x416 SWAP1
0x417 SLOAD
0x418 SWAP1
0x419 PUSH2 0x100
0x41c EXP
0x41d SWAP1
0x41e DIV
0x41f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x434 AND
0x435 DUP2
0x436 JUMP
---
0x411: JUMPDEST 
0x412: V225 = 0x1
0x414: V226 = 0x0
0x417: V227 = S[0x1]
0x419: V228 = 0x100
0x41c: V229 = EXP 0x100 0x0
0x41e: V230 = DIV V227 0x1
0x41f: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x434: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x436: JUMP 0x176
---
Entry stack: [V11, 0x176]
Stack pops: 1
Stack additions: [S0, V232]
Exit stack: [V11, 0x176, V232]

================================

Block 0x437
[0x437:0x45b]
---
Predecessors: [0x1c3]
Successors: [0x1cb]
---
0x437 JUMPDEST
0x438 PUSH1 0x0
0x43a DUP1
0x43b SWAP1
0x43c SLOAD
0x43d SWAP1
0x43e PUSH2 0x100
0x441 EXP
0x442 SWAP1
0x443 DIV
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a DUP2
0x45b JUMP
---
0x437: JUMPDEST 
0x438: V233 = 0x0
0x43c: V234 = S[0x0]
0x43e: V235 = 0x100
0x441: V236 = EXP 0x100 0x0
0x443: V237 = DIV V234 0x1
0x444: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x45b: JUMP 0x1cb
---
Entry stack: [V11, 0x1cb]
Stack pops: 1
Stack additions: [S0, V239]
Exit stack: [V11, 0x1cb, V239]

================================

Block 0x45c
[0x45c:0x487]
---
Predecessors: []
Successors: []
---
0x45c STOP
0x45d LOG1
0x45e PUSH6 0x627a7a723058
0x465 SHA3
0x466 MISSING 0xc0
0x467 MISSING 0xba
0x468 MISSING 0x4f
0x469 CREATE2
0x46a CREATE2
0x46b PUSH2 0x294a
0x46e DUP8
0x46f DUP1
0x470 CREATE2
0x471 SIGNEXTEND
0x472 ADDMOD
0x473 DUP10
0x474 MISSING 0xbb
0x475 PUSH11 0x59b348c4759554c5a69cd
0x481 MISSING 0x4b
0x482 SGT
0x483 DUP16
0x484 CALLVALUE
0x485 CALLCODE
0x486 STOP
0x487 MISSING 0x29
---
0x45c: STOP 
0x45d: LOG S0 S1 S2
0x45e: V240 = 0x627a7a723058
0x465: V241 = SHA3 0x627a7a723058 S3
0x466: MISSING 0xc0
0x467: MISSING 0xba
0x468: MISSING 0x4f
0x469: V242 = CREATE2 S0 S1 S2 S3
0x46a: V243 = CREATE2 V242 S4 S5 S6
0x46b: V244 = 0x294a
0x470: V245 = CREATE2 S12 S12 0x294a V243
0x471: V246 = SIGNEXTEND V245 S7
0x472: V247 = ADDMOD V246 S8 S9
0x474: MISSING 0xbb
0x475: V248 = 0x59b348c4759554c5a69cd
0x481: MISSING 0x4b
0x482: V249 = SGT S0 S1
0x484: V250 = CALLVALUE
0x485: V251 = CALLCODE V250 S16 V249 S2 S3 S4 S5
0x486: STOP 
0x487: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V241, S18, V247, S10, S11, S12, S13, S14, S15, S16, S17, S18, 0x59b348c4759554c5a69cd, V251, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c39da94
Entry block: 0x67
Exit block: 0x3ac
Body: 0x67, 0x6e, 0x72, 0xfd, 0x20d, 0x26e, 0x272, 0x29f, 0x2a8, 0x2b4, 0x2b5, 0x39b, 0x39f, 0x3ac, 0x3b0, 0x3c0

Function 1:
Public function signature: 0x78a72e0d
Entry block: 0xff
Exit block: 0x14d
Body: 0xff, 0x106, 0x10a, 0x14d, 0x3cb

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x163
Exit block: 0x176
Body: 0x163, 0x16a, 0x16e, 0x176, 0x411

Function 3:
Public function signature: 0xeabf4240
Entry block: 0x1b8
Exit block: 0x1cb
Body: 0x1b8, 0x1bf, 0x1c3, 0x1cb, 0x437

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

