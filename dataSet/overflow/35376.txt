Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x79ba5097
0x34 EQ
0x35 PUSH2 0x5f
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x79ba5097
0x34: V9 = EQ 0x79ba5097 V7
0x35: V10 = 0x5f
0x38: JUMPI 0x5f V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x74]
---
0x39 DUP1
0x3a PUSH4 0x8da5cb5b
0x3f EQ
0x40 PUSH2 0x74
0x43 JUMPI
---
0x3a: V11 = 0x8da5cb5b
0x3f: V12 = EQ 0x8da5cb5b V7
0x40: V13 = 0x74
0x43: JUMPI 0x74 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xc9]
---
0x44 DUP1
0x45 PUSH4 0xd4ee1d90
0x4a EQ
0x4b PUSH2 0xc9
0x4e JUMPI
---
0x45: V14 = 0xd4ee1d90
0x4a: V15 = EQ 0xd4ee1d90 V7
0x4b: V16 = 0xc9
0x4e: JUMPI 0xc9 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x11e]
---
0x4f DUP1
0x50 PUSH4 0xf2fde38b
0x55 EQ
0x56 PUSH2 0x11e
0x59 JUMPI
---
0x50: V17 = 0xf2fde38b
0x55: V18 = EQ 0xf2fde38b V7
0x56: V19 = 0x11e
0x59: JUMPI 0x11e V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5e]
---
Predecessors: [0x4f]
Successors: []
---
0x5a JUMPDEST
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5a: JUMPDEST 
0x5b: V20 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x65]
---
Predecessors: [0x0]
Successors: [0x66, 0x6a]
---
0x5f JUMPDEST
0x60 CALLVALUE
0x61 ISZERO
0x62 PUSH2 0x6a
0x65 JUMPI
---
0x5f: JUMPDEST 
0x60: V21 = CALLVALUE
0x61: V22 = ISZERO V21
0x62: V23 = 0x6a
0x65: JUMPI 0x6a V22
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x66
[0x66:0x69]
---
Predecessors: [0x5f]
Successors: []
---
0x66 PUSH1 0x0
0x68 DUP1
0x69 REVERT
---
0x66: V24 = 0x0
0x69: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6a
[0x6a:0x71]
---
Predecessors: [0x5f]
Successors: [0x157]
---
0x6a JUMPDEST
0x6b PUSH2 0x72
0x6e PUSH2 0x157
0x71 JUMP
---
0x6a: JUMPDEST 
0x6b: V25 = 0x72
0x6e: V26 = 0x157
0x71: JUMP 0x157
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x72]
Exit stack: [V7, 0x72]

================================

Block 0x72
[0x72:0x73]
---
Predecessors: [0x332]
Successors: []
---
0x72 JUMPDEST
0x73 STOP
---
0x72: JUMPDEST 
0x73: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x74
[0x74:0x7a]
---
Predecessors: [0x39]
Successors: [0x7b, 0x7f]
---
0x74 JUMPDEST
0x75 CALLVALUE
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x74: JUMPDEST 
0x75: V27 = CALLVALUE
0x76: V28 = ISZERO V27
0x77: V29 = 0x7f
0x7a: JUMPI 0x7f V28
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x74]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V30 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x7f
[0x7f:0x86]
---
Predecessors: [0x74]
Successors: [0x334]
---
0x7f JUMPDEST
0x80 PUSH2 0x87
0x83 PUSH2 0x334
0x86 JUMP
---
0x7f: JUMPDEST 
0x80: V31 = 0x87
0x83: V32 = 0x334
0x86: JUMP 0x334
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V7, 0x87]

================================

Block 0x87
[0x87:0xc8]
---
Predecessors: [0x334]
Successors: []
---
0x87 JUMPDEST
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c DUP3
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP2
0xbf POP
0xc0 POP
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 SWAP2
0xc6 SUB
0xc7 SWAP1
0xc8 RETURN
---
0x87: JUMPDEST 
0x88: V33 = 0x40
0x8a: V34 = M[0x40]
0x8d: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0xa3: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xba: M[V34] = V38
0xbb: V39 = 0x20
0xbd: V40 = ADD 0x20 V34
0xc1: V41 = 0x40
0xc3: V42 = M[0x40]
0xc6: V43 = SUB V40 V42
0xc8: RETURN V42 V43
---
Entry stack: [V7, 0x87, V164]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x87]

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0x44]
Successors: [0xd0, 0xd4]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc9: JUMPDEST 
0xca: V44 = CALLVALUE
0xcb: V45 = ISZERO V44
0xcc: V46 = 0xd4
0xcf: JUMPI 0xd4 V45
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V47 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0xc9]
Successors: [0x359]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xdc
0xd8 PUSH2 0x359
0xdb JUMP
---
0xd4: JUMPDEST 
0xd5: V48 = 0xdc
0xd8: V49 = 0x359
0xdb: JUMP 0x359
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V7, 0xdc]

================================

Block 0xdc
[0xdc:0x11d]
---
Predecessors: [0x359]
Successors: []
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 DUP3
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e DUP2
0x10f MSTORE
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP2
0x114 POP
0x115 POP
0x116 PUSH1 0x40
0x118 MLOAD
0x119 DUP1
0x11a SWAP2
0x11b SUB
0x11c SWAP1
0x11d RETURN
---
0xdc: JUMPDEST 
0xdd: V50 = 0x40
0xdf: V51 = M[0x40]
0xe2: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0xf8: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x10f: M[V51] = V55
0x110: V56 = 0x20
0x112: V57 = ADD 0x20 V51
0x116: V58 = 0x40
0x118: V59 = M[0x40]
0x11b: V60 = SUB V57 V59
0x11d: RETURN V59 V60
---
Entry stack: [V7, 0xdc, V172]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xdc]

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x4f]
Successors: [0x125, 0x129]
---
0x11e JUMPDEST
0x11f CALLVALUE
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x11e: JUMPDEST 
0x11f: V61 = CALLVALUE
0x120: V62 = ISZERO V61
0x121: V63 = 0x129
0x124: JUMPI 0x129 V62
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x11e]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V64 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x129
[0x129:0x154]
---
Predecessors: [0x11e]
Successors: [0x37f]
---
0x129 JUMPDEST
0x12a PUSH2 0x155
0x12d PUSH1 0x4
0x12f DUP1
0x130 DUP1
0x131 CALLDATALOAD
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 SWAP1
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP1
0x14d SWAP2
0x14e SWAP1
0x14f POP
0x150 POP
0x151 PUSH2 0x37f
0x154 JUMP
---
0x129: JUMPDEST 
0x12a: V65 = 0x155
0x12d: V66 = 0x4
0x131: V67 = CALLDATALOAD 0x4
0x132: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x149: V70 = 0x20
0x14b: V71 = ADD 0x20 0x4
0x151: V72 = 0x37f
0x154: JUMP 0x37f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x155, V69]
Exit stack: [V7, 0x155, V69]

================================

Block 0x155
[0x155:0x156]
---
Predecessors: [0x476, 0x5e1]
Successors: []
---
0x155 JUMPDEST
0x156 STOP
---
0x155: JUMPDEST 
0x156: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x157
[0x157:0x1ae]
---
Predecessors: [0x6a]
Successors: [0x1af, 0x1b3]
---
0x157 JUMPDEST
0x158 PUSH1 0x1
0x15a PUSH1 0x0
0x15c SWAP1
0x15d SLOAD
0x15e SWAP1
0x15f PUSH2 0x100
0x162 EXP
0x163 SWAP1
0x164 DIV
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 CALLER
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 EQ
0x1a9 ISZERO
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x157: JUMPDEST 
0x158: V73 = 0x1
0x15a: V74 = 0x0
0x15d: V75 = S[0x1]
0x15f: V76 = 0x100
0x162: V77 = EXP 0x100 0x0
0x164: V78 = DIV V75 0x1
0x165: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x17b: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x191: V83 = CALLER
0x192: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a8: V86 = EQ V85 V82
0x1a9: V87 = ISZERO V86
0x1aa: V88 = ISZERO V87
0x1ab: V89 = 0x1b3
0x1ae: JUMPI 0x1b3 V88
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x157]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V90 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x1b3
[0x1b3:0x331]
---
Predecessors: [0x157]
Successors: [0x332]
---
0x1b3 JUMPDEST
0x1b4 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 SWAP1
0x1d9 SLOAD
0x1da SWAP1
0x1db PUSH2 0x100
0x1de EXP
0x1df SWAP1
0x1e0 DIV
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 PUSH1 0x1
0x1f9 PUSH1 0x0
0x1fb SWAP1
0x1fc SLOAD
0x1fd SWAP1
0x1fe PUSH2 0x100
0x201 EXP
0x202 SWAP1
0x203 DIV
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 AND
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP1
0x21e DUP4
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 DUP3
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d DUP2
0x27e MSTORE
0x27f PUSH1 0x20
0x281 ADD
0x282 SWAP3
0x283 POP
0x284 POP
0x285 POP
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a SWAP2
0x28b SUB
0x28c SWAP1
0x28d LOG1
0x28e PUSH1 0x1
0x290 PUSH1 0x0
0x292 SWAP1
0x293 SLOAD
0x294 SWAP1
0x295 PUSH2 0x100
0x298 EXP
0x299 SWAP1
0x29a DIV
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 PUSH2 0x100
0x2b7 EXP
0x2b8 DUP2
0x2b9 SLOAD
0x2ba DUP2
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 MUL
0x2d1 NOT
0x2d2 AND
0x2d3 SWAP1
0x2d4 DUP4
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb MUL
0x2ec OR
0x2ed SWAP1
0x2ee SSTORE
0x2ef POP
0x2f0 PUSH1 0x0
0x2f2 PUSH1 0x1
0x2f4 PUSH1 0x0
0x2f6 PUSH2 0x100
0x2f9 EXP
0x2fa DUP2
0x2fb SLOAD
0x2fc DUP2
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 MUL
0x313 NOT
0x314 AND
0x315 SWAP1
0x316 DUP4
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d MUL
0x32e OR
0x32f SWAP1
0x330 SSTORE
0x331 POP
---
0x1b3: JUMPDEST 
0x1b4: V91 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x1d5: V92 = 0x0
0x1d9: V93 = S[0x0]
0x1db: V94 = 0x100
0x1de: V95 = EXP 0x100 0x0
0x1e0: V96 = DIV V93 0x1
0x1e1: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1f7: V99 = 0x1
0x1f9: V100 = 0x0
0x1fc: V101 = S[0x1]
0x1fe: V102 = 0x100
0x201: V103 = EXP 0x100 0x0
0x203: V104 = DIV V101 0x1
0x204: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x219: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x21a: V107 = 0x40
0x21c: V108 = M[0x40]
0x21f: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x235: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x24c: M[V108] = V112
0x24d: V113 = 0x20
0x24f: V114 = ADD 0x20 V108
0x251: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x267: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x27e: M[V114] = V118
0x27f: V119 = 0x20
0x281: V120 = ADD 0x20 V114
0x286: V121 = 0x40
0x288: V122 = M[0x40]
0x28b: V123 = SUB V120 V122
0x28d: LOG V122 V123 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x28e: V124 = 0x1
0x290: V125 = 0x0
0x293: V126 = S[0x1]
0x295: V127 = 0x100
0x298: V128 = EXP 0x100 0x0
0x29a: V129 = DIV V126 0x1
0x29b: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x2b1: V132 = 0x0
0x2b4: V133 = 0x100
0x2b7: V134 = EXP 0x100 0x0
0x2b9: V135 = S[0x0]
0x2bb: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V137 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2d1: V138 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V139 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V135
0x2d5: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x2eb: V142 = MUL V141 0x1
0x2ec: V143 = OR V142 V139
0x2ee: S[0x0] = V143
0x2f0: V144 = 0x0
0x2f2: V145 = 0x1
0x2f4: V146 = 0x0
0x2f6: V147 = 0x100
0x2f9: V148 = EXP 0x100 0x0
0x2fb: V149 = S[0x1]
0x2fd: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V151 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x313: V152 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x314: V153 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V149
0x317: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x32d: V156 = MUL 0x0 0x1
0x32e: V157 = OR 0x0 V153
0x330: S[0x1] = V157
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x332
[0x332:0x333]
---
Predecessors: [0x1b3]
Successors: [0x72]
---
0x332 JUMPDEST
0x333 JUMP
---
0x332: JUMPDEST 
0x333: JUMP 0x72
---
Entry stack: [V7, 0x72]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x334
[0x334:0x358]
---
Predecessors: [0x7f]
Successors: [0x87]
---
0x334 JUMPDEST
0x335 PUSH1 0x0
0x337 DUP1
0x338 SWAP1
0x339 SLOAD
0x33a SWAP1
0x33b PUSH2 0x100
0x33e EXP
0x33f SWAP1
0x340 DIV
0x341 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x356 AND
0x357 DUP2
0x358 JUMP
---
0x334: JUMPDEST 
0x335: V158 = 0x0
0x339: V159 = S[0x0]
0x33b: V160 = 0x100
0x33e: V161 = EXP 0x100 0x0
0x340: V162 = DIV V159 0x1
0x341: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x356: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x358: JUMP 0x87
---
Entry stack: [V7, 0x87]
Stack pops: 1
Stack additions: [S0, V164]
Exit stack: [V7, 0x87, V164]

================================

Block 0x359
[0x359:0x37e]
---
Predecessors: [0xd4]
Successors: [0xdc]
---
0x359 JUMPDEST
0x35a PUSH1 0x1
0x35c PUSH1 0x0
0x35e SWAP1
0x35f SLOAD
0x360 SWAP1
0x361 PUSH2 0x100
0x364 EXP
0x365 SWAP1
0x366 DIV
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d DUP2
0x37e JUMP
---
0x359: JUMPDEST 
0x35a: V165 = 0x1
0x35c: V166 = 0x0
0x35f: V167 = S[0x1]
0x361: V168 = 0x100
0x364: V169 = EXP 0x100 0x0
0x366: V170 = DIV V167 0x1
0x367: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x37e: JUMP 0xdc
---
Entry stack: [V7, 0xdc]
Stack pops: 1
Stack additions: [S0, V172]
Exit stack: [V7, 0xdc, V172]

================================

Block 0x37f
[0x37f:0x3d5]
---
Predecessors: [0x129]
Successors: [0x3d6, 0x3d7]
---
0x37f JUMPDEST
0x380 PUSH1 0x0
0x382 DUP1
0x383 SWAP1
0x384 SLOAD
0x385 SWAP1
0x386 PUSH2 0x100
0x389 EXP
0x38a SWAP1
0x38b DIV
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 CALLER
0x3b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ce AND
0x3cf EQ
0x3d0 ISZERO
0x3d1 ISZERO
0x3d2 PUSH2 0x3d7
0x3d5 JUMPI
---
0x37f: JUMPDEST 
0x380: V173 = 0x0
0x384: V174 = S[0x0]
0x386: V175 = 0x100
0x389: V176 = EXP 0x100 0x0
0x38b: V177 = DIV V174 0x1
0x38c: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x3a2: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x3b8: V182 = CALLER
0x3b9: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ce: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x3cf: V185 = EQ V184 V181
0x3d0: V186 = ISZERO V185
0x3d1: V187 = ISZERO V186
0x3d2: V188 = 0x3d7
0x3d5: JUMPI 0x3d7 V187
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x3d6
[0x3d6:0x3d6]
---
Predecessors: [0x37f]
Successors: []
---
0x3d6 INVALID
---
0x3d6: INVALID 
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x3d7
[0x3d7:0x42e]
---
Predecessors: [0x37f]
Successors: [0x42f, 0x433]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db SWAP1
0x3dc SLOAD
0x3dd SWAP1
0x3de PUSH2 0x100
0x3e1 EXP
0x3e2 SWAP1
0x3e3 DIV
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 DUP2
0x411 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x426 AND
0x427 EQ
0x428 ISZERO
0x429 ISZERO
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V189 = 0x0
0x3dc: V190 = S[0x0]
0x3de: V191 = 0x100
0x3e1: V192 = EXP 0x100 0x0
0x3e3: V193 = DIV V190 0x1
0x3e4: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x3fa: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x411: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x426: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x427: V200 = EQ V199 V197
0x428: V201 = ISZERO V200
0x429: V202 = ISZERO V201
0x42a: V203 = ISZERO V202
0x42b: V204 = 0x433
0x42e: JUMPI 0x433 V203
---
Entry stack: [V7, 0x155, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x155, V69]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x3d7]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V205 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x433
[0x433:0x474]
---
Predecessors: [0x3d7]
Successors: [0x475]
---
0x433 JUMPDEST
0x434 DUP1
0x435 PUSH1 0x1
0x437 PUSH1 0x0
0x439 PUSH2 0x100
0x43c EXP
0x43d DUP2
0x43e SLOAD
0x43f DUP2
0x440 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x455 MUL
0x456 NOT
0x457 AND
0x458 SWAP1
0x459 DUP4
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 MUL
0x471 OR
0x472 SWAP1
0x473 SSTORE
0x474 POP
---
0x433: JUMPDEST 
0x435: V206 = 0x1
0x437: V207 = 0x0
0x439: V208 = 0x100
0x43c: V209 = EXP 0x100 0x0
0x43e: V210 = S[0x1]
0x440: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x455: V212 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x456: V213 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x457: V214 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V210
0x45a: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x470: V217 = MUL V216 0x1
0x471: V218 = OR V217 V214
0x473: S[0x1] = V218
---
Entry stack: [V7, 0x155, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x155, V69]

================================

Block 0x475
[0x475:0x475]
---
Predecessors: [0x433]
Successors: [0x476]
---
0x475 JUMPDEST
---
0x475: JUMPDEST 
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x476
[0x476:0x478]
---
Predecessors: [0x475]
Successors: [0x155]
---
0x476 JUMPDEST
0x477 POP
0x478 JUMP
---
0x476: JUMPDEST 
0x478: JUMP 0x155
---
Entry stack: [V7, 0x155, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x479
[0x479:0x4af]
---
Predecessors: []
Successors: [0x4b0]
Has unresolved jump.
---
0x479 STOP
0x47a LOG1
0x47b PUSH6 0x627a7a723058
0x482 SHA3
0x483 MISSING 0xb1
0x484 MISSING 0x28
0x485 PUSH13 0x1e0898a4356e341426ef26eb6d
0x493 PUSH26 0x8e32bbb4c69d3532a56e64ea9ebe350029606060405236156100
0x4ae MISSING 0xce
0x4af JUMPI
---
0x479: STOP 
0x47a: LOG S0 S1 S2
0x47b: V219 = 0x627a7a723058
0x482: V220 = SHA3 0x627a7a723058 S3
0x483: MISSING 0xb1
0x484: MISSING 0x28
0x485: V221 = 0x1e0898a4356e341426ef26eb6d
0x493: V222 = 0x8e32bbb4c69d3532a56e64ea9ebe350029606060405236156100
0x4ae: MISSING 0xce
0x4af: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V220, 0x8e32bbb4c69d3532a56e64ea9ebe350029606060405236156100, 0x1e0898a4356e341426ef26eb6d]
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4e3]
---
Predecessors: [0x479]
Successors: [0x4e4]
---
0x4b0 PUSH1 0x0
0x4b2 CALLDATALOAD
0x4b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4d1 SWAP1
0x4d2 DIV
0x4d3 PUSH4 0xffffffff
0x4d8 AND
0x4d9 DUP1
0x4da PUSH4 0x21b8092e
0x4df EQ
0x4e0 PUSH2 0xd3
0x4e3 JUMPI
---
0x4b0: V223 = 0x0
0x4b2: V224 = CALLDATALOAD 0x0
0x4b3: V225 = 0x100000000000000000000000000000000000000000000000000000000
0x4d2: V226 = DIV V224 0x100000000000000000000000000000000000000000000000000000000
0x4d3: V227 = 0xffffffff
0x4d8: V228 = AND 0xffffffff V226
0x4da: V229 = 0x21b8092e
0x4df: V230 = EQ 0x21b8092e V228
0x4e0: V231 = 0xd3
0x4e3: THROWI V230
---
Entry stack: []
Stack pops: 0
Stack additions: [V228]
Exit stack: [V228]

================================

Block 0x4e4
[0x4e4:0x4ee]
---
Predecessors: [0x4b0]
Successors: [0x4ef]
---
0x4e4 DUP1
0x4e5 PUSH4 0x228cb733
0x4ea EQ
0x4eb PUSH2 0x10c
0x4ee JUMPI
---
0x4e5: V232 = 0x228cb733
0x4ea: V233 = EQ 0x228cb733 V228
0x4eb: V234 = 0x10c
0x4ee: THROWI V233
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x4ef
[0x4ef:0x4f9]
---
Predecessors: [0x4e4]
Successors: [0x4fa]
---
0x4ef DUP1
0x4f0 PUSH4 0x79ba5097
0x4f5 EQ
0x4f6 PUSH2 0x135
0x4f9 JUMPI
---
0x4f0: V235 = 0x79ba5097
0x4f5: V236 = EQ 0x79ba5097 V228
0x4f6: V237 = 0x135
0x4f9: THROWI V236
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x4fa
[0x4fa:0x504]
---
Predecessors: [0x4ef]
Successors: [0x505]
---
0x4fa DUP1
0x4fb PUSH4 0x82b2e257
0x500 EQ
0x501 PUSH2 0x14a
0x504 JUMPI
---
0x4fb: V238 = 0x82b2e257
0x500: V239 = EQ 0x82b2e257 V228
0x501: V240 = 0x14a
0x504: THROWI V239
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x505
[0x505:0x50f]
---
Predecessors: [0x4fa]
Successors: [0x510]
---
0x505 DUP1
0x506 PUSH4 0x8da5cb5b
0x50b EQ
0x50c PUSH2 0x173
0x50f JUMPI
---
0x506: V241 = 0x8da5cb5b
0x50b: V242 = EQ 0x8da5cb5b V228
0x50c: V243 = 0x173
0x50f: THROWI V242
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x510
[0x510:0x51a]
---
Predecessors: [0x505]
Successors: [0x51b]
---
0x510 DUP1
0x511 PUSH4 0x9d76ea58
0x516 EQ
0x517 PUSH2 0x1c8
0x51a JUMPI
---
0x511: V244 = 0x9d76ea58
0x516: V245 = EQ 0x9d76ea58 V228
0x517: V246 = 0x1c8
0x51a: THROWI V245
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x51b
[0x51b:0x525]
---
Predecessors: [0x510]
Successors: [0x526]
---
0x51b DUP1
0x51c PUSH4 0xa0929cda
0x521 EQ
0x522 PUSH2 0x21d
0x525 JUMPI
---
0x51c: V247 = 0xa0929cda
0x521: V248 = EQ 0xa0929cda V228
0x522: V249 = 0x21d
0x525: THROWI V248
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x526
[0x526:0x530]
---
Predecessors: [0x51b]
Successors: [0x531]
---
0x526 DUP1
0x527 PUSH4 0xb88a802f
0x52c EQ
0x52d PUSH2 0x27e
0x530 JUMPI
---
0x527: V250 = 0xb88a802f
0x52c: V251 = EQ 0xb88a802f V228
0x52d: V252 = 0x27e
0x530: THROWI V251
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x531
[0x531:0x53b]
---
Predecessors: [0x526]
Successors: [0x53c]
---
0x531 DUP1
0x532 PUSH4 0xd4ee1d90
0x537 EQ
0x538 PUSH2 0x293
0x53b JUMPI
---
0x532: V253 = 0xd4ee1d90
0x537: V254 = EQ 0xd4ee1d90 V228
0x538: V255 = 0x293
0x53b: THROWI V254
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x53c
[0x53c:0x546]
---
Predecessors: [0x531]
Successors: [0x547]
---
0x53c DUP1
0x53d PUSH4 0xd98f6088
0x542 EQ
0x543 PUSH2 0x2e8
0x546 JUMPI
---
0x53d: V256 = 0xd98f6088
0x542: V257 = EQ 0xd98f6088 V228
0x543: V258 = 0x2e8
0x546: THROWI V257
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x547
[0x547:0x551]
---
Predecessors: [0x53c]
Successors: [0x552]
---
0x547 DUP1
0x548 PUSH4 0xf2bcd022
0x54d EQ
0x54e PUSH2 0x311
0x551 JUMPI
---
0x548: V259 = 0xf2bcd022
0x54d: V260 = EQ 0xf2bcd022 V228
0x54e: V261 = 0x311
0x551: THROWI V260
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x552
[0x552:0x55c]
---
Predecessors: [0x547]
Successors: [0x55d]
---
0x552 DUP1
0x553 PUSH4 0xf2fde38b
0x558 EQ
0x559 PUSH2 0x366
0x55c JUMPI
---
0x553: V262 = 0xf2fde38b
0x558: V263 = EQ 0xf2fde38b V228
0x559: V264 = 0x366
0x55c: THROWI V263
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x55d
[0x55d:0x567]
---
Predecessors: [0x552]
Successors: [0x568]
---
0x55d DUP1
0x55e PUSH4 0xf4d218f9
0x563 EQ
0x564 PUSH2 0x39f
0x567 JUMPI
---
0x55e: V265 = 0xf4d218f9
0x563: V266 = EQ 0xf4d218f9 V228
0x564: V267 = 0x39f
0x567: THROWI V266
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x568
[0x568:0x572]
---
Predecessors: [0x55d]
Successors: [0x573]
---
0x568 DUP1
0x569 PUSH4 0xfa67ae5a
0x56e EQ
0x56f PUSH2 0x3c8
0x572 JUMPI
---
0x569: V268 = 0xfa67ae5a
0x56e: V269 = EQ 0xfa67ae5a V228
0x56f: V270 = 0x3c8
0x572: THROWI V269
---
Entry stack: [V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V228]

================================

Block 0x573
[0x573:0x57e]
---
Predecessors: [0x568]
Successors: [0x57f]
---
0x573 JUMPDEST
0x574 PUSH1 0x0
0x576 DUP1
0x577 REVERT
0x578 JUMPDEST
0x579 CALLVALUE
0x57a ISZERO
0x57b PUSH2 0xde
0x57e JUMPI
---
0x573: JUMPDEST 
0x574: V271 = 0x0
0x577: REVERT 0x0 0x0
0x578: JUMPDEST 
0x579: V272 = CALLVALUE
0x57a: V273 = ISZERO V272
0x57b: V274 = 0xde
0x57e: THROWI V273
---
Entry stack: [V228]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x57f
[0x57f:0x5b7]
---
Predecessors: [0x573]
Successors: [0x5b8]
---
0x57f PUSH1 0x0
0x581 DUP1
0x582 REVERT
0x583 JUMPDEST
0x584 PUSH2 0x10a
0x587 PUSH1 0x4
0x589 DUP1
0x58a DUP1
0x58b CALLDATALOAD
0x58c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a1 AND
0x5a2 SWAP1
0x5a3 PUSH1 0x20
0x5a5 ADD
0x5a6 SWAP1
0x5a7 SWAP2
0x5a8 SWAP1
0x5a9 POP
0x5aa POP
0x5ab PUSH2 0x3eb
0x5ae JUMP
0x5af JUMPDEST
0x5b0 STOP
0x5b1 JUMPDEST
0x5b2 CALLVALUE
0x5b3 ISZERO
0x5b4 PUSH2 0x117
0x5b7 JUMPI
---
0x57f: V275 = 0x0
0x582: REVERT 0x0 0x0
0x583: JUMPDEST 
0x584: V276 = 0x10a
0x587: V277 = 0x4
0x58b: V278 = CALLDATALOAD 0x4
0x58c: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x5a3: V281 = 0x20
0x5a5: V282 = ADD 0x20 0x4
0x5ab: V283 = 0x3eb
0x5ae: THROW 
0x5af: JUMPDEST 
0x5b0: STOP 
0x5b1: JUMPDEST 
0x5b2: V284 = CALLVALUE
0x5b3: V285 = ISZERO V284
0x5b4: V286 = 0x117
0x5b7: THROWI V285
---
Entry stack: []
Stack pops: 0
Stack additions: [V280, 0x10a]
Exit stack: []

================================

Block 0x5b8
[0x5b8:0x5e0]
---
Predecessors: [0x57f]
Successors: [0x5e1]
---
0x5b8 PUSH1 0x0
0x5ba DUP1
0x5bb REVERT
0x5bc JUMPDEST
0x5bd PUSH2 0x11f
0x5c0 PUSH2 0x489
0x5c3 JUMP
0x5c4 JUMPDEST
0x5c5 PUSH1 0x40
0x5c7 MLOAD
0x5c8 DUP1
0x5c9 DUP3
0x5ca DUP2
0x5cb MSTORE
0x5cc PUSH1 0x20
0x5ce ADD
0x5cf SWAP2
0x5d0 POP
0x5d1 POP
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 DUP1
0x5d6 SWAP2
0x5d7 SUB
0x5d8 SWAP1
0x5d9 RETURN
0x5da JUMPDEST
0x5db CALLVALUE
0x5dc ISZERO
0x5dd PUSH2 0x140
0x5e0 JUMPI
---
0x5b8: V287 = 0x0
0x5bb: REVERT 0x0 0x0
0x5bc: JUMPDEST 
0x5bd: V288 = 0x11f
0x5c0: V289 = 0x489
0x5c3: THROW 
0x5c4: JUMPDEST 
0x5c5: V290 = 0x40
0x5c7: V291 = M[0x40]
0x5cb: M[V291] = S0
0x5cc: V292 = 0x20
0x5ce: V293 = ADD 0x20 V291
0x5d2: V294 = 0x40
0x5d4: V295 = M[0x40]
0x5d7: V296 = SUB V293 V295
0x5d9: RETURN V295 V296
0x5da: JUMPDEST 
0x5db: V297 = CALLVALUE
0x5dc: V298 = ISZERO V297
0x5dd: V299 = 0x140
0x5e0: THROWI V298
---
Entry stack: []
Stack pops: 0
Stack additions: [0x11f]
Exit stack: []

================================

Block 0x5e1
[0x5e1:0x5f5]
---
Predecessors: [0x5b8]
Successors: [0x155, 0x5f6]
---
0x5e1 PUSH1 0x0
0x5e3 DUP1
0x5e4 REVERT
0x5e5 JUMPDEST
0x5e6 PUSH2 0x148
0x5e9 PUSH2 0x48f
0x5ec JUMP
0x5ed JUMPDEST
0x5ee STOP
0x5ef JUMPDEST
0x5f0 CALLVALUE
0x5f1 ISZERO
0x5f2 PUSH2 0x155
0x5f5 JUMPI
---
0x5e1: V300 = 0x0
0x5e4: REVERT 0x0 0x0
0x5e5: JUMPDEST 
0x5e6: V301 = 0x148
0x5e9: V302 = 0x48f
0x5ec: THROW 
0x5ed: JUMPDEST 
0x5ee: STOP 
0x5ef: JUMPDEST 
0x5f0: V303 = CALLVALUE
0x5f1: V304 = ISZERO V303
0x5f2: V305 = 0x155
0x5f5: JUMPI 0x155 V304
---
Entry stack: []
Stack pops: 0
Stack additions: [0x148]
Exit stack: []

================================

Block 0x5f6
[0x5f6:0x61e]
---
Predecessors: [0x5e1]
Successors: [0x61f]
---
0x5f6 PUSH1 0x0
0x5f8 DUP1
0x5f9 REVERT
0x5fa JUMPDEST
0x5fb PUSH2 0x15d
0x5fe PUSH2 0x66c
0x601 JUMP
0x602 JUMPDEST
0x603 PUSH1 0x40
0x605 MLOAD
0x606 DUP1
0x607 DUP3
0x608 DUP2
0x609 MSTORE
0x60a PUSH1 0x20
0x60c ADD
0x60d SWAP2
0x60e POP
0x60f POP
0x610 PUSH1 0x40
0x612 MLOAD
0x613 DUP1
0x614 SWAP2
0x615 SUB
0x616 SWAP1
0x617 RETURN
0x618 JUMPDEST
0x619 CALLVALUE
0x61a ISZERO
0x61b PUSH2 0x17e
0x61e JUMPI
---
0x5f6: V306 = 0x0
0x5f9: REVERT 0x0 0x0
0x5fa: JUMPDEST 
0x5fb: V307 = 0x15d
0x5fe: V308 = 0x66c
0x601: THROW 
0x602: JUMPDEST 
0x603: V309 = 0x40
0x605: V310 = M[0x40]
0x609: M[V310] = S0
0x60a: V311 = 0x20
0x60c: V312 = ADD 0x20 V310
0x610: V313 = 0x40
0x612: V314 = M[0x40]
0x615: V315 = SUB V312 V314
0x617: RETURN V314 V315
0x618: JUMPDEST 
0x619: V316 = CALLVALUE
0x61a: V317 = ISZERO V316
0x61b: V318 = 0x17e
0x61e: THROWI V317
---
Entry stack: []
Stack pops: 0
Stack additions: [0x15d]
Exit stack: []

================================

Block 0x61f
[0x61f:0x673]
---
Predecessors: [0x5f6]
Successors: [0x674]
---
0x61f PUSH1 0x0
0x621 DUP1
0x622 REVERT
0x623 JUMPDEST
0x624 PUSH2 0x186
0x627 PUSH2 0x754
0x62a JUMP
0x62b JUMPDEST
0x62c PUSH1 0x40
0x62e MLOAD
0x62f DUP1
0x630 DUP3
0x631 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x646 AND
0x647 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65c AND
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 ADD
0x662 SWAP2
0x663 POP
0x664 POP
0x665 PUSH1 0x40
0x667 MLOAD
0x668 DUP1
0x669 SWAP2
0x66a SUB
0x66b SWAP1
0x66c RETURN
0x66d JUMPDEST
0x66e CALLVALUE
0x66f ISZERO
0x670 PUSH2 0x1d3
0x673 JUMPI
---
0x61f: V319 = 0x0
0x622: REVERT 0x0 0x0
0x623: JUMPDEST 
0x624: V320 = 0x186
0x627: V321 = 0x754
0x62a: THROW 
0x62b: JUMPDEST 
0x62c: V322 = 0x40
0x62e: V323 = M[0x40]
0x631: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x646: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x647: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x65e: M[V323] = V327
0x65f: V328 = 0x20
0x661: V329 = ADD 0x20 V323
0x665: V330 = 0x40
0x667: V331 = M[0x40]
0x66a: V332 = SUB V329 V331
0x66c: RETURN V331 V332
0x66d: JUMPDEST 
0x66e: V333 = CALLVALUE
0x66f: V334 = ISZERO V333
0x670: V335 = 0x1d3
0x673: THROWI V334
---
Entry stack: []
Stack pops: 0
Stack additions: [0x186]
Exit stack: []

================================

Block 0x674
[0x674:0x6c8]
---
Predecessors: [0x61f]
Successors: [0x6c9]
---
0x674 PUSH1 0x0
0x676 DUP1
0x677 REVERT
0x678 JUMPDEST
0x679 PUSH2 0x1db
0x67c PUSH2 0x779
0x67f JUMP
0x680 JUMPDEST
0x681 PUSH1 0x40
0x683 MLOAD
0x684 DUP1
0x685 DUP3
0x686 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69b AND
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 DUP2
0x6b3 MSTORE
0x6b4 PUSH1 0x20
0x6b6 ADD
0x6b7 SWAP2
0x6b8 POP
0x6b9 POP
0x6ba PUSH1 0x40
0x6bc MLOAD
0x6bd DUP1
0x6be SWAP2
0x6bf SUB
0x6c0 SWAP1
0x6c1 RETURN
0x6c2 JUMPDEST
0x6c3 CALLVALUE
0x6c4 ISZERO
0x6c5 PUSH2 0x228
0x6c8 JUMPI
---
0x674: V336 = 0x0
0x677: REVERT 0x0 0x0
0x678: JUMPDEST 
0x679: V337 = 0x1db
0x67c: V338 = 0x779
0x67f: THROW 
0x680: JUMPDEST 
0x681: V339 = 0x40
0x683: V340 = M[0x40]
0x686: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x69c: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x6b3: M[V340] = V344
0x6b4: V345 = 0x20
0x6b6: V346 = ADD 0x20 V340
0x6ba: V347 = 0x40
0x6bc: V348 = M[0x40]
0x6bf: V349 = SUB V346 V348
0x6c1: RETURN V348 V349
0x6c2: JUMPDEST 
0x6c3: V350 = CALLVALUE
0x6c4: V351 = ISZERO V350
0x6c5: V352 = 0x228
0x6c8: THROWI V351
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1db]
Exit stack: []

================================

Block 0x6c9
[0x6c9:0x729]
---
Predecessors: [0x674]
Successors: [0x72a]
---
0x6c9 PUSH1 0x0
0x6cb DUP1
0x6cc REVERT
0x6cd JUMPDEST
0x6ce PUSH2 0x27c
0x6d1 PUSH1 0x4
0x6d3 DUP1
0x6d4 DUP1
0x6d5 CALLDATALOAD
0x6d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6eb AND
0x6ec SWAP1
0x6ed PUSH1 0x20
0x6ef ADD
0x6f0 SWAP1
0x6f1 SWAP2
0x6f2 SWAP1
0x6f3 DUP1
0x6f4 CALLDATALOAD
0x6f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70a AND
0x70b SWAP1
0x70c PUSH1 0x20
0x70e ADD
0x70f SWAP1
0x710 SWAP2
0x711 SWAP1
0x712 DUP1
0x713 CALLDATALOAD
0x714 SWAP1
0x715 PUSH1 0x20
0x717 ADD
0x718 SWAP1
0x719 SWAP2
0x71a SWAP1
0x71b POP
0x71c POP
0x71d PUSH2 0x79f
0x720 JUMP
0x721 JUMPDEST
0x722 STOP
0x723 JUMPDEST
0x724 CALLVALUE
0x725 ISZERO
0x726 PUSH2 0x289
0x729 JUMPI
---
0x6c9: V353 = 0x0
0x6cc: REVERT 0x0 0x0
0x6cd: JUMPDEST 
0x6ce: V354 = 0x27c
0x6d1: V355 = 0x4
0x6d5: V356 = CALLDATALOAD 0x4
0x6d6: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x6ed: V359 = 0x20
0x6ef: V360 = ADD 0x20 0x4
0x6f4: V361 = CALLDATALOAD 0x24
0x6f5: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x70a: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x70c: V364 = 0x20
0x70e: V365 = ADD 0x20 0x24
0x713: V366 = CALLDATALOAD 0x44
0x715: V367 = 0x20
0x717: V368 = ADD 0x20 0x44
0x71d: V369 = 0x79f
0x720: THROW 
0x721: JUMPDEST 
0x722: STOP 
0x723: JUMPDEST 
0x724: V370 = CALLVALUE
0x725: V371 = ISZERO V370
0x726: V372 = 0x289
0x729: THROWI V371
---
Entry stack: []
Stack pops: 0
Stack additions: [V366, V363, V358, 0x27c]
Exit stack: []

================================

Block 0x72a
[0x72a:0x73e]
---
Predecessors: [0x6c9]
Successors: [0x73f]
---
0x72a PUSH1 0x0
0x72c DUP1
0x72d REVERT
0x72e JUMPDEST
0x72f PUSH2 0x291
0x732 PUSH2 0x922
0x735 JUMP
0x736 JUMPDEST
0x737 STOP
0x738 JUMPDEST
0x739 CALLVALUE
0x73a ISZERO
0x73b PUSH2 0x29e
0x73e JUMPI
---
0x72a: V373 = 0x0
0x72d: REVERT 0x0 0x0
0x72e: JUMPDEST 
0x72f: V374 = 0x291
0x732: V375 = 0x922
0x735: THROW 
0x736: JUMPDEST 
0x737: STOP 
0x738: JUMPDEST 
0x739: V376 = CALLVALUE
0x73a: V377 = ISZERO V376
0x73b: V378 = 0x29e
0x73e: THROWI V377
---
Entry stack: []
Stack pops: 0
Stack additions: [0x291]
Exit stack: []

================================

Block 0x73f
[0x73f:0x793]
---
Predecessors: [0x72a]
Successors: [0x794]
---
0x73f PUSH1 0x0
0x741 DUP1
0x742 REVERT
0x743 JUMPDEST
0x744 PUSH2 0x2a6
0x747 PUSH2 0xd1e
0x74a JUMP
0x74b JUMPDEST
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP1
0x750 DUP3
0x751 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x766 AND
0x767 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77c AND
0x77d DUP2
0x77e MSTORE
0x77f PUSH1 0x20
0x781 ADD
0x782 SWAP2
0x783 POP
0x784 POP
0x785 PUSH1 0x40
0x787 MLOAD
0x788 DUP1
0x789 SWAP2
0x78a SUB
0x78b SWAP1
0x78c RETURN
0x78d JUMPDEST
0x78e CALLVALUE
0x78f ISZERO
0x790 PUSH2 0x2f3
0x793 JUMPI
---
0x73f: V379 = 0x0
0x742: REVERT 0x0 0x0
0x743: JUMPDEST 
0x744: V380 = 0x2a6
0x747: V381 = 0xd1e
0x74a: THROW 
0x74b: JUMPDEST 
0x74c: V382 = 0x40
0x74e: V383 = M[0x40]
0x751: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x766: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x767: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x77c: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x77e: M[V383] = V387
0x77f: V388 = 0x20
0x781: V389 = ADD 0x20 V383
0x785: V390 = 0x40
0x787: V391 = M[0x40]
0x78a: V392 = SUB V389 V391
0x78c: RETURN V391 V392
0x78d: JUMPDEST 
0x78e: V393 = CALLVALUE
0x78f: V394 = ISZERO V393
0x790: V395 = 0x2f3
0x793: THROWI V394
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2a6]
Exit stack: []

================================

Block 0x794
[0x794:0x7bc]
---
Predecessors: [0x73f]
Successors: [0x7bd]
---
0x794 PUSH1 0x0
0x796 DUP1
0x797 REVERT
0x798 JUMPDEST
0x799 PUSH2 0x2fb
0x79c PUSH2 0xd44
0x79f JUMP
0x7a0 JUMPDEST
0x7a1 PUSH1 0x40
0x7a3 MLOAD
0x7a4 DUP1
0x7a5 DUP3
0x7a6 DUP2
0x7a7 MSTORE
0x7a8 PUSH1 0x20
0x7aa ADD
0x7ab SWAP2
0x7ac POP
0x7ad POP
0x7ae PUSH1 0x40
0x7b0 MLOAD
0x7b1 DUP1
0x7b2 SWAP2
0x7b3 SUB
0x7b4 SWAP1
0x7b5 RETURN
0x7b6 JUMPDEST
0x7b7 CALLVALUE
0x7b8 ISZERO
0x7b9 PUSH2 0x31c
0x7bc JUMPI
---
0x794: V396 = 0x0
0x797: REVERT 0x0 0x0
0x798: JUMPDEST 
0x799: V397 = 0x2fb
0x79c: V398 = 0xd44
0x79f: THROW 
0x7a0: JUMPDEST 
0x7a1: V399 = 0x40
0x7a3: V400 = M[0x40]
0x7a7: M[V400] = S0
0x7a8: V401 = 0x20
0x7aa: V402 = ADD 0x20 V400
0x7ae: V403 = 0x40
0x7b0: V404 = M[0x40]
0x7b3: V405 = SUB V402 V404
0x7b5: RETURN V404 V405
0x7b6: JUMPDEST 
0x7b7: V406 = CALLVALUE
0x7b8: V407 = ISZERO V406
0x7b9: V408 = 0x31c
0x7bc: THROWI V407
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: []

================================

Block 0x7bd
[0x7bd:0x811]
---
Predecessors: [0x794]
Successors: [0x812]
---
0x7bd PUSH1 0x0
0x7bf DUP1
0x7c0 REVERT
0x7c1 JUMPDEST
0x7c2 PUSH2 0x324
0x7c5 PUSH2 0xd4a
0x7c8 JUMP
0x7c9 JUMPDEST
0x7ca PUSH1 0x40
0x7cc MLOAD
0x7cd DUP1
0x7ce DUP3
0x7cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e4 AND
0x7e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fa AND
0x7fb DUP2
0x7fc MSTORE
0x7fd PUSH1 0x20
0x7ff ADD
0x800 SWAP2
0x801 POP
0x802 POP
0x803 PUSH1 0x40
0x805 MLOAD
0x806 DUP1
0x807 SWAP2
0x808 SUB
0x809 SWAP1
0x80a RETURN
0x80b JUMPDEST
0x80c CALLVALUE
0x80d ISZERO
0x80e PUSH2 0x371
0x811 JUMPI
---
0x7bd: V409 = 0x0
0x7c0: REVERT 0x0 0x0
0x7c1: JUMPDEST 
0x7c2: V410 = 0x324
0x7c5: V411 = 0xd4a
0x7c8: THROW 
0x7c9: JUMPDEST 
0x7ca: V412 = 0x40
0x7cc: V413 = M[0x40]
0x7cf: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e4: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7e5: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fa: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x7fc: M[V413] = V417
0x7fd: V418 = 0x20
0x7ff: V419 = ADD 0x20 V413
0x803: V420 = 0x40
0x805: V421 = M[0x40]
0x808: V422 = SUB V419 V421
0x80a: RETURN V421 V422
0x80b: JUMPDEST 
0x80c: V423 = CALLVALUE
0x80d: V424 = ISZERO V423
0x80e: V425 = 0x371
0x811: THROWI V424
---
Entry stack: []
Stack pops: 0
Stack additions: [0x324]
Exit stack: []

================================

Block 0x812
[0x812:0x84a]
---
Predecessors: [0x7bd]
Successors: [0x84b]
---
0x812 PUSH1 0x0
0x814 DUP1
0x815 REVERT
0x816 JUMPDEST
0x817 PUSH2 0x39d
0x81a PUSH1 0x4
0x81c DUP1
0x81d DUP1
0x81e CALLDATALOAD
0x81f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x834 AND
0x835 SWAP1
0x836 PUSH1 0x20
0x838 ADD
0x839 SWAP1
0x83a SWAP2
0x83b SWAP1
0x83c POP
0x83d POP
0x83e PUSH2 0xd70
0x841 JUMP
0x842 JUMPDEST
0x843 STOP
0x844 JUMPDEST
0x845 CALLVALUE
0x846 ISZERO
0x847 PUSH2 0x3aa
0x84a JUMPI
---
0x812: V426 = 0x0
0x815: REVERT 0x0 0x0
0x816: JUMPDEST 
0x817: V427 = 0x39d
0x81a: V428 = 0x4
0x81e: V429 = CALLDATALOAD 0x4
0x81f: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x834: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x836: V432 = 0x20
0x838: V433 = ADD 0x20 0x4
0x83e: V434 = 0xd70
0x841: THROW 
0x842: JUMPDEST 
0x843: STOP 
0x844: JUMPDEST 
0x845: V435 = CALLVALUE
0x846: V436 = ISZERO V435
0x847: V437 = 0x3aa
0x84a: THROWI V436
---
Entry stack: []
Stack pops: 0
Stack additions: [V431, 0x39d]
Exit stack: []

================================

Block 0x84b
[0x84b:0x873]
---
Predecessors: [0x812]
Successors: [0x874]
---
0x84b PUSH1 0x0
0x84d DUP1
0x84e REVERT
0x84f JUMPDEST
0x850 PUSH2 0x3b2
0x853 PUSH2 0xe6a
0x856 JUMP
0x857 JUMPDEST
0x858 PUSH1 0x40
0x85a MLOAD
0x85b DUP1
0x85c DUP3
0x85d DUP2
0x85e MSTORE
0x85f PUSH1 0x20
0x861 ADD
0x862 SWAP2
0x863 POP
0x864 POP
0x865 PUSH1 0x40
0x867 MLOAD
0x868 DUP1
0x869 SWAP2
0x86a SUB
0x86b SWAP1
0x86c RETURN
0x86d JUMPDEST
0x86e CALLVALUE
0x86f ISZERO
0x870 PUSH2 0x3d3
0x873 JUMPI
---
0x84b: V438 = 0x0
0x84e: REVERT 0x0 0x0
0x84f: JUMPDEST 
0x850: V439 = 0x3b2
0x853: V440 = 0xe6a
0x856: THROW 
0x857: JUMPDEST 
0x858: V441 = 0x40
0x85a: V442 = M[0x40]
0x85e: M[V442] = S0
0x85f: V443 = 0x20
0x861: V444 = ADD 0x20 V442
0x865: V445 = 0x40
0x867: V446 = M[0x40]
0x86a: V447 = SUB V444 V446
0x86c: RETURN V446 V447
0x86d: JUMPDEST 
0x86e: V448 = CALLVALUE
0x86f: V449 = ISZERO V448
0x870: V450 = 0x3d3
0x873: THROWI V449
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3b2]
Exit stack: []

================================

Block 0x874
[0x874:0x8e6]
---
Predecessors: [0x84b]
Successors: [0x8e7]
---
0x874 PUSH1 0x0
0x876 DUP1
0x877 REVERT
0x878 JUMPDEST
0x879 PUSH2 0x3e9
0x87c PUSH1 0x4
0x87e DUP1
0x87f DUP1
0x880 CALLDATALOAD
0x881 SWAP1
0x882 PUSH1 0x20
0x884 ADD
0x885 SWAP1
0x886 SWAP2
0x887 SWAP1
0x888 POP
0x889 POP
0x88a PUSH2 0xe70
0x88d JUMP
0x88e JUMPDEST
0x88f STOP
0x890 JUMPDEST
0x891 PUSH1 0x0
0x893 DUP1
0x894 SWAP1
0x895 SLOAD
0x896 SWAP1
0x897 PUSH2 0x100
0x89a EXP
0x89b SWAP1
0x89c DIV
0x89d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b2 AND
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 AND
0x8c9 CALLER
0x8ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8df AND
0x8e0 EQ
0x8e1 ISZERO
0x8e2 ISZERO
0x8e3 PUSH2 0x443
0x8e6 JUMPI
---
0x874: V451 = 0x0
0x877: REVERT 0x0 0x0
0x878: JUMPDEST 
0x879: V452 = 0x3e9
0x87c: V453 = 0x4
0x880: V454 = CALLDATALOAD 0x4
0x882: V455 = 0x20
0x884: V456 = ADD 0x20 0x4
0x88a: V457 = 0xe70
0x88d: THROW 
0x88e: JUMPDEST 
0x88f: STOP 
0x890: JUMPDEST 
0x891: V458 = 0x0
0x895: V459 = S[0x0]
0x897: V460 = 0x100
0x89a: V461 = EXP 0x100 0x0
0x89c: V462 = DIV V459 0x1
0x89d: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x8b3: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x8c9: V467 = CALLER
0x8ca: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x8df: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x8e0: V470 = EQ V469 V466
0x8e1: V471 = ISZERO V470
0x8e2: V472 = ISZERO V471
0x8e3: V473 = 0x443
0x8e6: THROWI V472
---
Entry stack: []
Stack pops: 0
Stack additions: [V454, 0x3e9]
Exit stack: []

================================

Block 0x8e7
[0x8e7:0x929]
---
Predecessors: [0x874]
Successors: [0x92a]
---
0x8e7 INVALID
0x8e8 JUMPDEST
0x8e9 DUP1
0x8ea PUSH1 0x2
0x8ec PUSH1 0x0
0x8ee PUSH2 0x100
0x8f1 EXP
0x8f2 DUP2
0x8f3 SLOAD
0x8f4 DUP2
0x8f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90a MUL
0x90b NOT
0x90c AND
0x90d SWAP1
0x90e DUP4
0x90f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x924 AND
0x925 MUL
0x926 OR
0x927 SWAP1
0x928 SSTORE
0x929 POP
---
0x8e7: INVALID 
0x8e8: JUMPDEST 
0x8ea: V474 = 0x2
0x8ec: V475 = 0x0
0x8ee: V476 = 0x100
0x8f1: V477 = EXP 0x100 0x0
0x8f3: V478 = S[0x2]
0x8f5: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x90a: V480 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x90b: V481 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x90c: V482 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V478
0x90f: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x924: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x925: V485 = MUL V484 0x1
0x926: V486 = OR V485 V482
0x928: S[0x2] = V486
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x92a
[0x92a:0x92a]
---
Predecessors: [0x8e7]
Successors: [0x92b]
---
0x92a JUMPDEST
---
0x92a: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x92b
[0x92b:0x98b]
---
Predecessors: [0x92a]
Successors: [0x98c]
---
0x92b JUMPDEST
0x92c POP
0x92d JUMP
0x92e JUMPDEST
0x92f PUSH1 0x6
0x931 SLOAD
0x932 DUP2
0x933 JUMP
0x934 JUMPDEST
0x935 PUSH1 0x1
0x937 PUSH1 0x0
0x939 SWAP1
0x93a SLOAD
0x93b SWAP1
0x93c PUSH2 0x100
0x93f EXP
0x940 SWAP1
0x941 DIV
0x942 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x957 AND
0x958 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96d AND
0x96e CALLER
0x96f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x984 AND
0x985 EQ
0x986 ISZERO
0x987 ISZERO
0x988 PUSH2 0x4eb
0x98b JUMPI
---
0x92b: JUMPDEST 
0x92d: JUMP S1
0x92e: JUMPDEST 
0x92f: V487 = 0x6
0x931: V488 = S[0x6]
0x933: JUMP S0
0x934: JUMPDEST 
0x935: V489 = 0x1
0x937: V490 = 0x0
0x93a: V491 = S[0x1]
0x93c: V492 = 0x100
0x93f: V493 = EXP 0x100 0x0
0x941: V494 = DIV V491 0x1
0x942: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x957: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x958: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x96d: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x96e: V499 = CALLER
0x96f: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x984: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x985: V502 = EQ V501 V498
0x986: V503 = ISZERO V502
0x987: V504 = ISZERO V503
0x988: V505 = 0x4eb
0x98b: THROWI V504
---
Entry stack: [S0]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x98c
[0x98c:0xb0e]
---
Predecessors: [0x92b]
Successors: [0xb0f]
---
0x98c PUSH1 0x0
0x98e DUP1
0x98f REVERT
0x990 JUMPDEST
0x991 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x9b2 PUSH1 0x0
0x9b4 DUP1
0x9b5 SWAP1
0x9b6 SLOAD
0x9b7 SWAP1
0x9b8 PUSH2 0x100
0x9bb EXP
0x9bc SWAP1
0x9bd DIV
0x9be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d3 AND
0x9d4 PUSH1 0x1
0x9d6 PUSH1 0x0
0x9d8 SWAP1
0x9d9 SLOAD
0x9da SWAP1
0x9db PUSH2 0x100
0x9de EXP
0x9df SWAP1
0x9e0 DIV
0x9e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f6 AND
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa DUP1
0x9fb DUP4
0x9fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa11 AND
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 AND
0xa28 DUP2
0xa29 MSTORE
0xa2a PUSH1 0x20
0xa2c ADD
0xa2d DUP3
0xa2e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa43 AND
0xa44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa59 AND
0xa5a DUP2
0xa5b MSTORE
0xa5c PUSH1 0x20
0xa5e ADD
0xa5f SWAP3
0xa60 POP
0xa61 POP
0xa62 POP
0xa63 PUSH1 0x40
0xa65 MLOAD
0xa66 DUP1
0xa67 SWAP2
0xa68 SUB
0xa69 SWAP1
0xa6a LOG1
0xa6b PUSH1 0x1
0xa6d PUSH1 0x0
0xa6f SWAP1
0xa70 SLOAD
0xa71 SWAP1
0xa72 PUSH2 0x100
0xa75 EXP
0xa76 SWAP1
0xa77 DIV
0xa78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8d AND
0xa8e PUSH1 0x0
0xa90 DUP1
0xa91 PUSH2 0x100
0xa94 EXP
0xa95 DUP2
0xa96 SLOAD
0xa97 DUP2
0xa98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaad MUL
0xaae NOT
0xaaf AND
0xab0 SWAP1
0xab1 DUP4
0xab2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac7 AND
0xac8 MUL
0xac9 OR
0xaca SWAP1
0xacb SSTORE
0xacc POP
0xacd PUSH1 0x0
0xacf PUSH1 0x1
0xad1 PUSH1 0x0
0xad3 PUSH2 0x100
0xad6 EXP
0xad7 DUP2
0xad8 SLOAD
0xad9 DUP2
0xada PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaef MUL
0xaf0 NOT
0xaf1 AND
0xaf2 SWAP1
0xaf3 DUP4
0xaf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb09 AND
0xb0a MUL
0xb0b OR
0xb0c SWAP1
0xb0d SSTORE
0xb0e POP
---
0x98c: V506 = 0x0
0x98f: REVERT 0x0 0x0
0x990: JUMPDEST 
0x991: V507 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x9b2: V508 = 0x0
0x9b6: V509 = S[0x0]
0x9b8: V510 = 0x100
0x9bb: V511 = EXP 0x100 0x0
0x9bd: V512 = DIV V509 0x1
0x9be: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d3: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V512
0x9d4: V515 = 0x1
0x9d6: V516 = 0x0
0x9d9: V517 = S[0x1]
0x9db: V518 = 0x100
0x9de: V519 = EXP 0x100 0x0
0x9e0: V520 = DIV V517 0x1
0x9e1: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f6: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x9f7: V523 = 0x40
0x9f9: V524 = M[0x40]
0x9fc: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0xa11: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0xa12: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0xa29: M[V524] = V528
0xa2a: V529 = 0x20
0xa2c: V530 = ADD 0x20 V524
0xa2e: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0xa43: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0xa44: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0xa59: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0xa5b: M[V530] = V534
0xa5c: V535 = 0x20
0xa5e: V536 = ADD 0x20 V530
0xa63: V537 = 0x40
0xa65: V538 = M[0x40]
0xa68: V539 = SUB V536 V538
0xa6a: LOG V538 V539 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0xa6b: V540 = 0x1
0xa6d: V541 = 0x0
0xa70: V542 = S[0x1]
0xa72: V543 = 0x100
0xa75: V544 = EXP 0x100 0x0
0xa77: V545 = DIV V542 0x1
0xa78: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8d: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0xa8e: V548 = 0x0
0xa91: V549 = 0x100
0xa94: V550 = EXP 0x100 0x0
0xa96: V551 = S[0x0]
0xa98: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0xaad: V553 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xaae: V554 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaaf: V555 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V551
0xab2: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0xac7: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0xac8: V558 = MUL V557 0x1
0xac9: V559 = OR V558 V555
0xacb: S[0x0] = V559
0xacd: V560 = 0x0
0xacf: V561 = 0x1
0xad1: V562 = 0x0
0xad3: V563 = 0x100
0xad6: V564 = EXP 0x100 0x0
0xad8: V565 = S[0x1]
0xada: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0xaef: V567 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xaf0: V568 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaf1: V569 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V565
0xaf4: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0xb09: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xb0a: V572 = MUL 0x0 0x1
0xb0b: V573 = OR 0x0 V569
0xb0d: S[0x1] = V573
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0f
[0xb0f:0xbd3]
---
Predecessors: [0x98c]
Successors: [0xbd4]
---
0xb0f JUMPDEST
0xb10 JUMP
0xb11 JUMPDEST
0xb12 PUSH1 0x0
0xb14 PUSH1 0x3
0xb16 PUSH1 0x0
0xb18 SWAP1
0xb19 SLOAD
0xb1a SWAP1
0xb1b PUSH2 0x100
0xb1e EXP
0xb1f SWAP1
0xb20 DIV
0xb21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb36 AND
0xb37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4c AND
0xb4d PUSH4 0x70a08231
0xb52 ADDRESS
0xb53 PUSH1 0x0
0xb55 PUSH1 0x40
0xb57 MLOAD
0xb58 PUSH1 0x20
0xb5a ADD
0xb5b MSTORE
0xb5c PUSH1 0x40
0xb5e MLOAD
0xb5f DUP3
0xb60 PUSH4 0xffffffff
0xb65 AND
0xb66 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb84 MUL
0xb85 DUP2
0xb86 MSTORE
0xb87 PUSH1 0x4
0xb89 ADD
0xb8a DUP1
0xb8b DUP3
0xb8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba1 AND
0xba2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb7 AND
0xbb8 DUP2
0xbb9 MSTORE
0xbba PUSH1 0x20
0xbbc ADD
0xbbd SWAP2
0xbbe POP
0xbbf POP
0xbc0 PUSH1 0x20
0xbc2 PUSH1 0x40
0xbc4 MLOAD
0xbc5 DUP1
0xbc6 DUP4
0xbc7 SUB
0xbc8 DUP2
0xbc9 PUSH1 0x0
0xbcb DUP8
0xbcc DUP1
0xbcd EXTCODESIZE
0xbce ISZERO
0xbcf ISZERO
0xbd0 PUSH2 0x733
0xbd3 JUMPI
---
0xb0f: JUMPDEST 
0xb10: JUMP S0
0xb11: JUMPDEST 
0xb12: V574 = 0x0
0xb14: V575 = 0x3
0xb16: V576 = 0x0
0xb19: V577 = S[0x3]
0xb1b: V578 = 0x100
0xb1e: V579 = EXP 0x100 0x0
0xb20: V580 = DIV V577 0x1
0xb21: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0xb36: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0xb37: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4c: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0xb4d: V585 = 0x70a08231
0xb52: V586 = ADDRESS
0xb53: V587 = 0x0
0xb55: V588 = 0x40
0xb57: V589 = M[0x40]
0xb58: V590 = 0x20
0xb5a: V591 = ADD 0x20 V589
0xb5b: M[V591] = 0x0
0xb5c: V592 = 0x40
0xb5e: V593 = M[0x40]
0xb60: V594 = 0xffffffff
0xb65: V595 = AND 0xffffffff 0x70a08231
0xb66: V596 = 0x100000000000000000000000000000000000000000000000000000000
0xb84: V597 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xb86: M[V593] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb87: V598 = 0x4
0xb89: V599 = ADD 0x4 V593
0xb8c: V600 = 0xffffffffffffffffffffffffffffffffffffffff
0xba1: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0xba2: V602 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb7: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0xbb9: M[V599] = V603
0xbba: V604 = 0x20
0xbbc: V605 = ADD 0x20 V599
0xbc0: V606 = 0x20
0xbc2: V607 = 0x40
0xbc4: V608 = M[0x40]
0xbc7: V609 = SUB V605 V608
0xbc9: V610 = 0x0
0xbcd: V611 = EXTCODESIZE V584
0xbce: V612 = ISZERO V611
0xbcf: V613 = ISZERO V612
0xbd0: V614 = 0x733
0xbd3: THROWI V613
---
Entry stack: []
Stack pops: 2
Stack additions: [V584, 0x0, V608, V609, V608, 0x20, V605, 0x70a08231, V584, 0x0]
Exit stack: []

================================

Block 0xbd4
[0xbd4:0xbe4]
---
Predecessors: [0xb0f]
Successors: [0xbe5]
---
0xbd4 PUSH1 0x0
0xbd6 DUP1
0xbd7 REVERT
0xbd8 JUMPDEST
0xbd9 PUSH2 0x2c6
0xbdc GAS
0xbdd SUB
0xbde CALL
0xbdf ISZERO
0xbe0 ISZERO
0xbe1 PUSH2 0x744
0xbe4 JUMPI
---
0xbd4: V615 = 0x0
0xbd7: REVERT 0x0 0x0
0xbd8: JUMPDEST 
0xbd9: V616 = 0x2c6
0xbdc: V617 = GAS
0xbdd: V618 = SUB V617 0x2c6
0xbde: V619 = CALL V618 S0 S1 S2 S3 S4 S5
0xbdf: V620 = ISZERO V619
0xbe0: V621 = ISZERO V620
0xbe1: V622 = 0x744
0xbe4: THROWI V621
---
Entry stack: [0x0, V584, 0x70a08231, V605, 0x20, V608, V609, V608, 0x0, V584]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbe5
[0xbe5:0xbf5]
---
Predecessors: [0xbd4]
Successors: [0xbf6]
---
0xbe5 PUSH1 0x0
0xbe7 DUP1
0xbe8 REVERT
0xbe9 JUMPDEST
0xbea POP
0xbeb POP
0xbec POP
0xbed PUSH1 0x40
0xbef MLOAD
0xbf0 DUP1
0xbf1 MLOAD
0xbf2 SWAP1
0xbf3 POP
0xbf4 SWAP1
0xbf5 POP
---
0xbe5: V623 = 0x0
0xbe8: REVERT 0x0 0x0
0xbe9: JUMPDEST 
0xbed: V624 = 0x40
0xbef: V625 = M[0x40]
0xbf1: V626 = M[V625]
---
Entry stack: []
Stack pops: 0
Stack additions: [V626]
Exit stack: []

================================

Block 0xbf6
[0xbf6:0xc9a]
---
Predecessors: [0xbe5]
Successors: [0xc9b]
---
0xbf6 JUMPDEST
0xbf7 SWAP1
0xbf8 JUMP
0xbf9 JUMPDEST
0xbfa PUSH1 0x0
0xbfc DUP1
0xbfd SWAP1
0xbfe SLOAD
0xbff SWAP1
0xc00 PUSH2 0x100
0xc03 EXP
0xc04 SWAP1
0xc05 DIV
0xc06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1b AND
0xc1c DUP2
0xc1d JUMP
0xc1e JUMPDEST
0xc1f PUSH1 0x3
0xc21 PUSH1 0x0
0xc23 SWAP1
0xc24 SLOAD
0xc25 SWAP1
0xc26 PUSH2 0x100
0xc29 EXP
0xc2a SWAP1
0xc2b DIV
0xc2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc41 AND
0xc42 DUP2
0xc43 JUMP
0xc44 JUMPDEST
0xc45 PUSH1 0x0
0xc47 DUP1
0xc48 SWAP1
0xc49 SLOAD
0xc4a SWAP1
0xc4b PUSH2 0x100
0xc4e EXP
0xc4f SWAP1
0xc50 DIV
0xc51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc66 AND
0xc67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7c AND
0xc7d CALLER
0xc7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc93 AND
0xc94 EQ
0xc95 ISZERO
0xc96 ISZERO
0xc97 PUSH2 0x7f7
0xc9a JUMPI
---
0xbf6: JUMPDEST 
0xbf8: JUMP S1
0xbf9: JUMPDEST 
0xbfa: V627 = 0x0
0xbfe: V628 = S[0x0]
0xc00: V629 = 0x100
0xc03: V630 = EXP 0x100 0x0
0xc05: V631 = DIV V628 0x1
0xc06: V632 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1b: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0xc1d: JUMP S0
0xc1e: JUMPDEST 
0xc1f: V634 = 0x3
0xc21: V635 = 0x0
0xc24: V636 = S[0x3]
0xc26: V637 = 0x100
0xc29: V638 = EXP 0x100 0x0
0xc2b: V639 = DIV V636 0x1
0xc2c: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0xc41: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0xc43: JUMP S0
0xc44: JUMPDEST 
0xc45: V642 = 0x0
0xc49: V643 = S[0x0]
0xc4b: V644 = 0x100
0xc4e: V645 = EXP 0x100 0x0
0xc50: V646 = DIV V643 0x1
0xc51: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0xc66: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0xc67: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0xc7d: V651 = CALLER
0xc7e: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xc93: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0xc94: V654 = EQ V653 V650
0xc95: V655 = ISZERO V654
0xc96: V656 = ISZERO V655
0xc97: V657 = 0x7f7
0xc9a: THROWI V656
---
Entry stack: [V626]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xc9b
[0xc9b:0xcf4]
---
Predecessors: [0xbf6]
Successors: [0xcf5]
---
0xc9b INVALID
0xc9c JUMPDEST
0xc9d PUSH1 0x3
0xc9f PUSH1 0x0
0xca1 SWAP1
0xca2 SLOAD
0xca3 SWAP1
0xca4 PUSH2 0x100
0xca7 EXP
0xca8 SWAP1
0xca9 DIV
0xcaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbf AND
0xcc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd5 AND
0xcd6 DUP4
0xcd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcec AND
0xced EQ
0xcee ISZERO
0xcef ISZERO
0xcf0 ISZERO
0xcf1 PUSH2 0x854
0xcf4 JUMPI
---
0xc9b: INVALID 
0xc9c: JUMPDEST 
0xc9d: V658 = 0x3
0xc9f: V659 = 0x0
0xca2: V660 = S[0x3]
0xca4: V661 = 0x100
0xca7: V662 = EXP 0x100 0x0
0xca9: V663 = DIV V660 0x1
0xcaa: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbf: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0xcc0: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd5: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0xcd7: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xcec: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xced: V670 = EQ V669 V667
0xcee: V671 = ISZERO V670
0xcef: V672 = ISZERO V671
0xcf0: V673 = ISZERO V672
0xcf1: V674 = 0x854
0xcf4: THROWI V673
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xcf5
[0xcf5:0xd9f]
---
Predecessors: [0xc9b]
Successors: [0xda0]
---
0xcf5 PUSH1 0x0
0xcf7 DUP1
0xcf8 REVERT
0xcf9 JUMPDEST
0xcfa DUP3
0xcfb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd10 AND
0xd11 PUSH4 0xa9059cbb
0xd16 DUP4
0xd17 DUP4
0xd18 PUSH1 0x0
0xd1a PUSH1 0x40
0xd1c MLOAD
0xd1d PUSH1 0x20
0xd1f ADD
0xd20 MSTORE
0xd21 PUSH1 0x40
0xd23 MLOAD
0xd24 DUP4
0xd25 PUSH4 0xffffffff
0xd2a AND
0xd2b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd49 MUL
0xd4a DUP2
0xd4b MSTORE
0xd4c PUSH1 0x4
0xd4e ADD
0xd4f DUP1
0xd50 DUP4
0xd51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd66 AND
0xd67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7c AND
0xd7d DUP2
0xd7e MSTORE
0xd7f PUSH1 0x20
0xd81 ADD
0xd82 DUP3
0xd83 DUP2
0xd84 MSTORE
0xd85 PUSH1 0x20
0xd87 ADD
0xd88 SWAP3
0xd89 POP
0xd8a POP
0xd8b POP
0xd8c PUSH1 0x20
0xd8e PUSH1 0x40
0xd90 MLOAD
0xd91 DUP1
0xd92 DUP4
0xd93 SUB
0xd94 DUP2
0xd95 PUSH1 0x0
0xd97 DUP8
0xd98 DUP1
0xd99 EXTCODESIZE
0xd9a ISZERO
0xd9b ISZERO
0xd9c PUSH2 0x8ff
0xd9f JUMPI
---
0xcf5: V675 = 0x0
0xcf8: REVERT 0x0 0x0
0xcf9: JUMPDEST 
0xcfb: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0xd10: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd11: V678 = 0xa9059cbb
0xd18: V679 = 0x0
0xd1a: V680 = 0x40
0xd1c: V681 = M[0x40]
0xd1d: V682 = 0x20
0xd1f: V683 = ADD 0x20 V681
0xd20: M[V683] = 0x0
0xd21: V684 = 0x40
0xd23: V685 = M[0x40]
0xd25: V686 = 0xffffffff
0xd2a: V687 = AND 0xffffffff 0xa9059cbb
0xd2b: V688 = 0x100000000000000000000000000000000000000000000000000000000
0xd49: V689 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xd4b: M[V685] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd4c: V690 = 0x4
0xd4e: V691 = ADD 0x4 V685
0xd51: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xd66: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xd67: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7c: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0xd7e: M[V691] = V695
0xd7f: V696 = 0x20
0xd81: V697 = ADD 0x20 V691
0xd84: M[V697] = S0
0xd85: V698 = 0x20
0xd87: V699 = ADD 0x20 V697
0xd8c: V700 = 0x20
0xd8e: V701 = 0x40
0xd90: V702 = M[0x40]
0xd93: V703 = SUB V699 V702
0xd95: V704 = 0x0
0xd99: V705 = EXTCODESIZE V677
0xd9a: V706 = ISZERO V705
0xd9b: V707 = ISZERO V706
0xd9c: V708 = 0x8ff
0xd9f: THROWI V707
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V677, 0x0, V702, V703, V702, 0x20, V699, 0xa9059cbb, V677, S0, S1, S2]
Exit stack: []

================================

Block 0xda0
[0xda0:0xdb0]
---
Predecessors: [0xcf5]
Successors: [0xdb1]
---
0xda0 PUSH1 0x0
0xda2 DUP1
0xda3 REVERT
0xda4 JUMPDEST
0xda5 PUSH2 0x2c6
0xda8 GAS
0xda9 SUB
0xdaa CALL
0xdab ISZERO
0xdac ISZERO
0xdad PUSH2 0x910
0xdb0 JUMPI
---
0xda0: V709 = 0x0
0xda3: REVERT 0x0 0x0
0xda4: JUMPDEST 
0xda5: V710 = 0x2c6
0xda8: V711 = GAS
0xda9: V712 = SUB V711 0x2c6
0xdaa: V713 = CALL V712 S0 S1 S2 S3 S4 S5
0xdab: V714 = ISZERO V713
0xdac: V715 = ISZERO V714
0xdad: V716 = 0x910
0xdb0: THROWI V715
---
Entry stack: [S11, S10, S9, V677, 0xa9059cbb, V699, 0x20, V702, V703, V702, 0x0, V677]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdb1
[0xdb1:0xdc0]
---
Predecessors: [0xda0]
Successors: [0xdc1]
---
0xdb1 PUSH1 0x0
0xdb3 DUP1
0xdb4 REVERT
0xdb5 JUMPDEST
0xdb6 POP
0xdb7 POP
0xdb8 POP
0xdb9 PUSH1 0x40
0xdbb MLOAD
0xdbc DUP1
0xdbd MLOAD
0xdbe SWAP1
0xdbf POP
0xdc0 POP
---
0xdb1: V717 = 0x0
0xdb4: REVERT 0x0 0x0
0xdb5: JUMPDEST 
0xdb9: V718 = 0x40
0xdbb: V719 = M[0x40]
0xdbd: V720 = M[V719]
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdc1
[0xdc1:0xdc1]
---
Predecessors: [0xdb1]
Successors: [0xdc2]
---
0xdc1 JUMPDEST
---
0xdc1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdc2
[0xdc2:0xe1f]
---
Predecessors: [0xdc1]
Successors: [0xe20]
---
0xdc2 JUMPDEST
0xdc3 POP
0xdc4 POP
0xdc5 POP
0xdc6 JUMP
0xdc7 JUMPDEST
0xdc8 PUSH1 0x0
0xdca DUP1
0xdcb PUSH1 0x0
0xdcd SWAP1
0xdce SLOAD
0xdcf SWAP1
0xdd0 PUSH2 0x100
0xdd3 EXP
0xdd4 SWAP1
0xdd5 DIV
0xdd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdeb AND
0xdec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe01 AND
0xe02 CALLER
0xe03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe18 AND
0xe19 EQ
0xe1a ISZERO
0xe1b ISZERO
0xe1c PUSH2 0x97c
0xe1f JUMPI
---
0xdc2: JUMPDEST 
0xdc6: JUMP S3
0xdc7: JUMPDEST 
0xdc8: V721 = 0x0
0xdcb: V722 = 0x0
0xdce: V723 = S[0x0]
0xdd0: V724 = 0x100
0xdd3: V725 = EXP 0x100 0x0
0xdd5: V726 = DIV V723 0x1
0xdd6: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0xdeb: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0xdec: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xe01: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0xe02: V731 = CALLER
0xe03: V732 = 0xffffffffffffffffffffffffffffffffffffffff
0xe18: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0xe19: V734 = EQ V733 V730
0xe1a: V735 = ISZERO V734
0xe1b: V736 = ISZERO V735
0xe1c: V737 = 0x97c
0xe1f: THROWI V736
---
Entry stack: []
Stack pops: 8
Stack additions: [0x0]
Exit stack: []

================================

Block 0xe20
[0xe20:0xe31]
---
Predecessors: [0xdc2]
Successors: [0xe32]
---
0xe20 INVALID
0xe21 JUMPDEST
0xe22 PUSH1 0x5
0xe24 SLOAD
0xe25 PUSH1 0x4
0xe27 SLOAD
0xe28 ADD
0xe29 NUMBER
0xe2a LT
0xe2b ISZERO
0xe2c ISZERO
0xe2d ISZERO
0xe2e PUSH2 0x991
0xe31 JUMPI
---
0xe20: INVALID 
0xe21: JUMPDEST 
0xe22: V738 = 0x5
0xe24: V739 = S[0x5]
0xe25: V740 = 0x4
0xe27: V741 = S[0x4]
0xe28: V742 = ADD V741 V739
0xe29: V743 = NUMBER
0xe2a: V744 = LT V743 V742
0xe2b: V745 = ISZERO V744
0xe2c: V746 = ISZERO V745
0xe2d: V747 = ISZERO V746
0xe2e: V748 = 0x991
0xe31: THROWI V747
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe32
[0xe32:0xef9]
---
Predecessors: [0xe20]
Successors: [0xefa]
---
0xe32 PUSH1 0x0
0xe34 DUP1
0xe35 REVERT
0xe36 JUMPDEST
0xe37 PUSH1 0x6
0xe39 SLOAD
0xe3a PUSH1 0x3
0xe3c PUSH1 0x0
0xe3e SWAP1
0xe3f SLOAD
0xe40 SWAP1
0xe41 PUSH2 0x100
0xe44 EXP
0xe45 SWAP1
0xe46 DIV
0xe47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5c AND
0xe5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe72 AND
0xe73 PUSH4 0x70a08231
0xe78 ADDRESS
0xe79 PUSH1 0x0
0xe7b PUSH1 0x40
0xe7d MLOAD
0xe7e PUSH1 0x20
0xe80 ADD
0xe81 MSTORE
0xe82 PUSH1 0x40
0xe84 MLOAD
0xe85 DUP3
0xe86 PUSH4 0xffffffff
0xe8b AND
0xe8c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xeaa MUL
0xeab DUP2
0xeac MSTORE
0xead PUSH1 0x4
0xeaf ADD
0xeb0 DUP1
0xeb1 DUP3
0xeb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec7 AND
0xec8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedd AND
0xede DUP2
0xedf MSTORE
0xee0 PUSH1 0x20
0xee2 ADD
0xee3 SWAP2
0xee4 POP
0xee5 POP
0xee6 PUSH1 0x20
0xee8 PUSH1 0x40
0xeea MLOAD
0xeeb DUP1
0xeec DUP4
0xeed SUB
0xeee DUP2
0xeef PUSH1 0x0
0xef1 DUP8
0xef2 DUP1
0xef3 EXTCODESIZE
0xef4 ISZERO
0xef5 ISZERO
0xef6 PUSH2 0xa59
0xef9 JUMPI
---
0xe32: V749 = 0x0
0xe35: REVERT 0x0 0x0
0xe36: JUMPDEST 
0xe37: V750 = 0x6
0xe39: V751 = S[0x6]
0xe3a: V752 = 0x3
0xe3c: V753 = 0x0
0xe3f: V754 = S[0x3]
0xe41: V755 = 0x100
0xe44: V756 = EXP 0x100 0x0
0xe46: V757 = DIV V754 0x1
0xe47: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5c: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xe5d: V760 = 0xffffffffffffffffffffffffffffffffffffffff
0xe72: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V759
0xe73: V762 = 0x70a08231
0xe78: V763 = ADDRESS
0xe79: V764 = 0x0
0xe7b: V765 = 0x40
0xe7d: V766 = M[0x40]
0xe7e: V767 = 0x20
0xe80: V768 = ADD 0x20 V766
0xe81: M[V768] = 0x0
0xe82: V769 = 0x40
0xe84: V770 = M[0x40]
0xe86: V771 = 0xffffffff
0xe8b: V772 = AND 0xffffffff 0x70a08231
0xe8c: V773 = 0x100000000000000000000000000000000000000000000000000000000
0xeaa: V774 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xeac: M[V770] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xead: V775 = 0x4
0xeaf: V776 = ADD 0x4 V770
0xeb2: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xec7: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0xec8: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xedd: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0xedf: M[V776] = V780
0xee0: V781 = 0x20
0xee2: V782 = ADD 0x20 V776
0xee6: V783 = 0x20
0xee8: V784 = 0x40
0xeea: V785 = M[0x40]
0xeed: V786 = SUB V782 V785
0xeef: V787 = 0x0
0xef3: V788 = EXTCODESIZE V761
0xef4: V789 = ISZERO V788
0xef5: V790 = ISZERO V789
0xef6: V791 = 0xa59
0xef9: THROWI V790
---
Entry stack: []
Stack pops: 0
Stack additions: [V761, 0x0, V785, V786, V785, 0x20, V782, 0x70a08231, V761, V751]
Exit stack: []

================================

Block 0xefa
[0xefa:0xf0a]
---
Predecessors: [0xe32]
Successors: [0xf0b]
---
0xefa PUSH1 0x0
0xefc DUP1
0xefd REVERT
0xefe JUMPDEST
0xeff PUSH2 0x2c6
0xf02 GAS
0xf03 SUB
0xf04 CALL
0xf05 ISZERO
0xf06 ISZERO
0xf07 PUSH2 0xa6a
0xf0a JUMPI
---
0xefa: V792 = 0x0
0xefd: REVERT 0x0 0x0
0xefe: JUMPDEST 
0xeff: V793 = 0x2c6
0xf02: V794 = GAS
0xf03: V795 = SUB V794 0x2c6
0xf04: V796 = CALL V795 S0 S1 S2 S3 S4 S5
0xf05: V797 = ISZERO V796
0xf06: V798 = ISZERO V797
0xf07: V799 = 0xa6a
0xf0a: THROWI V798
---
Entry stack: [V751, V761, 0x70a08231, V782, 0x20, V785, V786, V785, 0x0, V761]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf0b
[0xf0b:0xf1f]
---
Predecessors: [0xefa]
Successors: [0xf20]
---
0xf0b PUSH1 0x0
0xf0d DUP1
0xf0e REVERT
0xf0f JUMPDEST
0xf10 POP
0xf11 POP
0xf12 POP
0xf13 PUSH1 0x40
0xf15 MLOAD
0xf16 DUP1
0xf17 MLOAD
0xf18 SWAP1
0xf19 POP
0xf1a GT
0xf1b ISZERO
0xf1c PUSH2 0xa84
0xf1f JUMPI
---
0xf0b: V800 = 0x0
0xf0e: REVERT 0x0 0x0
0xf0f: JUMPDEST 
0xf13: V801 = 0x40
0xf15: V802 = M[0x40]
0xf17: V803 = M[V802]
0xf1a: V804 = GT V803 S3
0xf1b: V805 = ISZERO V804
0xf1c: V806 = 0xa84
0xf1f: THROWI V805
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf20
[0xf20:0xfe9]
---
Predecessors: [0xf0b]
Successors: [0xfea]
---
0xf20 PUSH1 0x6
0xf22 SLOAD
0xf23 SWAP1
0xf24 POP
0xf25 PUSH2 0xb67
0xf28 JUMP
0xf29 JUMPDEST
0xf2a PUSH1 0x3
0xf2c PUSH1 0x0
0xf2e SWAP1
0xf2f SLOAD
0xf30 SWAP1
0xf31 PUSH2 0x100
0xf34 EXP
0xf35 SWAP1
0xf36 DIV
0xf37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4c AND
0xf4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf62 AND
0xf63 PUSH4 0x70a08231
0xf68 ADDRESS
0xf69 PUSH1 0x0
0xf6b PUSH1 0x40
0xf6d MLOAD
0xf6e PUSH1 0x20
0xf70 ADD
0xf71 MSTORE
0xf72 PUSH1 0x40
0xf74 MLOAD
0xf75 DUP3
0xf76 PUSH4 0xffffffff
0xf7b AND
0xf7c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf9a MUL
0xf9b DUP2
0xf9c MSTORE
0xf9d PUSH1 0x4
0xf9f ADD
0xfa0 DUP1
0xfa1 DUP3
0xfa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb7 AND
0xfb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcd AND
0xfce DUP2
0xfcf MSTORE
0xfd0 PUSH1 0x20
0xfd2 ADD
0xfd3 SWAP2
0xfd4 POP
0xfd5 POP
0xfd6 PUSH1 0x20
0xfd8 PUSH1 0x40
0xfda MLOAD
0xfdb DUP1
0xfdc DUP4
0xfdd SUB
0xfde DUP2
0xfdf PUSH1 0x0
0xfe1 DUP8
0xfe2 DUP1
0xfe3 EXTCODESIZE
0xfe4 ISZERO
0xfe5 ISZERO
0xfe6 PUSH2 0xb49
0xfe9 JUMPI
---
0xf20: V807 = 0x6
0xf22: V808 = S[0x6]
0xf25: V809 = 0xb67
0xf28: THROW 
0xf29: JUMPDEST 
0xf2a: V810 = 0x3
0xf2c: V811 = 0x0
0xf2f: V812 = S[0x3]
0xf31: V813 = 0x100
0xf34: V814 = EXP 0x100 0x0
0xf36: V815 = DIV V812 0x1
0xf37: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4c: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V815
0xf4d: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0xf62: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0xf63: V820 = 0x70a08231
0xf68: V821 = ADDRESS
0xf69: V822 = 0x0
0xf6b: V823 = 0x40
0xf6d: V824 = M[0x40]
0xf6e: V825 = 0x20
0xf70: V826 = ADD 0x20 V824
0xf71: M[V826] = 0x0
0xf72: V827 = 0x40
0xf74: V828 = M[0x40]
0xf76: V829 = 0xffffffff
0xf7b: V830 = AND 0xffffffff 0x70a08231
0xf7c: V831 = 0x100000000000000000000000000000000000000000000000000000000
0xf9a: V832 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xf9c: M[V828] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf9d: V833 = 0x4
0xf9f: V834 = ADD 0x4 V828
0xfa2: V835 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb7: V836 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0xfb8: V837 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcd: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V836
0xfcf: M[V834] = V838
0xfd0: V839 = 0x20
0xfd2: V840 = ADD 0x20 V834
0xfd6: V841 = 0x20
0xfd8: V842 = 0x40
0xfda: V843 = M[0x40]
0xfdd: V844 = SUB V840 V843
0xfdf: V845 = 0x0
0xfe3: V846 = EXTCODESIZE V819
0xfe4: V847 = ISZERO V846
0xfe5: V848 = ISZERO V847
0xfe6: V849 = 0xb49
0xfe9: THROWI V848
---
Entry stack: []
Stack pops: 1
Stack additions: [V819, 0x0, V843, V844, V843, 0x20, V840, 0x70a08231, V819]
Exit stack: []

================================

Block 0xfea
[0xfea:0xffa]
---
Predecessors: [0xf20]
Successors: [0xffb]
---
0xfea PUSH1 0x0
0xfec DUP1
0xfed REVERT
0xfee JUMPDEST
0xfef PUSH2 0x2c6
0xff2 GAS
0xff3 SUB
0xff4 CALL
0xff5 ISZERO
0xff6 ISZERO
0xff7 PUSH2 0xb5a
0xffa JUMPI
---
0xfea: V850 = 0x0
0xfed: REVERT 0x0 0x0
0xfee: JUMPDEST 
0xfef: V851 = 0x2c6
0xff2: V852 = GAS
0xff3: V853 = SUB V852 0x2c6
0xff4: V854 = CALL V853 S0 S1 S2 S3 S4 S5
0xff5: V855 = ISZERO V854
0xff6: V856 = ISZERO V855
0xff7: V857 = 0xb5a
0xffa: THROWI V856
---
Entry stack: [V819, 0x70a08231, V840, 0x20, V843, V844, V843, 0x0, V819]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xffb
[0xffb:0x100b]
---
Predecessors: [0xfea]
Successors: [0x100c]
---
0xffb PUSH1 0x0
0xffd DUP1
0xffe REVERT
0xfff JUMPDEST
0x1000 POP
0x1001 POP
0x1002 POP
0x1003 PUSH1 0x40
0x1005 MLOAD
0x1006 DUP1
0x1007 MLOAD
0x1008 SWAP1
0x1009 POP
0x100a SWAP1
0x100b POP
---
0xffb: V858 = 0x0
0xffe: REVERT 0x0 0x0
0xfff: JUMPDEST 
0x1003: V859 = 0x40
0x1005: V860 = M[0x40]
0x1007: V861 = M[V860]
---
Entry stack: []
Stack pops: 0
Stack additions: [V861]
Exit stack: []

================================

Block 0x100c
[0x100c:0x10f6]
---
Predecessors: [0xffb]
Successors: [0x10f7]
---
0x100c JUMPDEST
0x100d PUSH1 0x3
0x100f PUSH1 0x0
0x1011 SWAP1
0x1012 SLOAD
0x1013 SWAP1
0x1014 PUSH2 0x100
0x1017 EXP
0x1018 SWAP1
0x1019 DIV
0x101a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102f AND
0x1030 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1045 AND
0x1046 PUSH4 0xa9059cbb
0x104b PUSH1 0x2
0x104d PUSH1 0x0
0x104f SWAP1
0x1050 SLOAD
0x1051 SWAP1
0x1052 PUSH2 0x100
0x1055 EXP
0x1056 SWAP1
0x1057 DIV
0x1058 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106d AND
0x106e DUP4
0x106f PUSH1 0x0
0x1071 PUSH1 0x40
0x1073 MLOAD
0x1074 PUSH1 0x20
0x1076 ADD
0x1077 MSTORE
0x1078 PUSH1 0x40
0x107a MLOAD
0x107b DUP4
0x107c PUSH4 0xffffffff
0x1081 AND
0x1082 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10a0 MUL
0x10a1 DUP2
0x10a2 MSTORE
0x10a3 PUSH1 0x4
0x10a5 ADD
0x10a6 DUP1
0x10a7 DUP4
0x10a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10bd AND
0x10be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d3 AND
0x10d4 DUP2
0x10d5 MSTORE
0x10d6 PUSH1 0x20
0x10d8 ADD
0x10d9 DUP3
0x10da DUP2
0x10db MSTORE
0x10dc PUSH1 0x20
0x10de ADD
0x10df SWAP3
0x10e0 POP
0x10e1 POP
0x10e2 POP
0x10e3 PUSH1 0x20
0x10e5 PUSH1 0x40
0x10e7 MLOAD
0x10e8 DUP1
0x10e9 DUP4
0x10ea SUB
0x10eb DUP2
0x10ec PUSH1 0x0
0x10ee DUP8
0x10ef DUP1
0x10f0 EXTCODESIZE
0x10f1 ISZERO
0x10f2 ISZERO
0x10f3 PUSH2 0xc56
0x10f6 JUMPI
---
0x100c: JUMPDEST 
0x100d: V862 = 0x3
0x100f: V863 = 0x0
0x1012: V864 = S[0x3]
0x1014: V865 = 0x100
0x1017: V866 = EXP 0x100 0x0
0x1019: V867 = DIV V864 0x1
0x101a: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0x102f: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V867
0x1030: V870 = 0xffffffffffffffffffffffffffffffffffffffff
0x1045: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0x1046: V872 = 0xa9059cbb
0x104b: V873 = 0x2
0x104d: V874 = 0x0
0x1050: V875 = S[0x2]
0x1052: V876 = 0x100
0x1055: V877 = EXP 0x100 0x0
0x1057: V878 = DIV V875 0x1
0x1058: V879 = 0xffffffffffffffffffffffffffffffffffffffff
0x106d: V880 = AND 0xffffffffffffffffffffffffffffffffffffffff V878
0x106f: V881 = 0x0
0x1071: V882 = 0x40
0x1073: V883 = M[0x40]
0x1074: V884 = 0x20
0x1076: V885 = ADD 0x20 V883
0x1077: M[V885] = 0x0
0x1078: V886 = 0x40
0x107a: V887 = M[0x40]
0x107c: V888 = 0xffffffff
0x1081: V889 = AND 0xffffffff 0xa9059cbb
0x1082: V890 = 0x100000000000000000000000000000000000000000000000000000000
0x10a0: V891 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x10a2: M[V887] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x10a3: V892 = 0x4
0x10a5: V893 = ADD 0x4 V887
0x10a8: V894 = 0xffffffffffffffffffffffffffffffffffffffff
0x10bd: V895 = AND 0xffffffffffffffffffffffffffffffffffffffff V880
0x10be: V896 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d3: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0x10d5: M[V893] = V897
0x10d6: V898 = 0x20
0x10d8: V899 = ADD 0x20 V893
0x10db: M[V899] = V861
0x10dc: V900 = 0x20
0x10de: V901 = ADD 0x20 V899
0x10e3: V902 = 0x20
0x10e5: V903 = 0x40
0x10e7: V904 = M[0x40]
0x10ea: V905 = SUB V901 V904
0x10ec: V906 = 0x0
0x10f0: V907 = EXTCODESIZE V871
0x10f1: V908 = ISZERO V907
0x10f2: V909 = ISZERO V908
0x10f3: V910 = 0xc56
0x10f6: THROWI V909
---
Entry stack: [V861]
Stack pops: 1
Stack additions: [S0, V871, 0xa9059cbb, V901, 0x20, V904, V905, V904, 0x0, V871]
Exit stack: [V861, V871, 0xa9059cbb, V901, 0x20, V904, V905, V904, 0x0, V871]

================================

Block 0x10f7
[0x10f7:0x1107]
---
Predecessors: [0x100c]
Successors: [0x1108]
---
0x10f7 PUSH1 0x0
0x10f9 DUP1
0x10fa REVERT
0x10fb JUMPDEST
0x10fc PUSH2 0x2c6
0x10ff GAS
0x1100 SUB
0x1101 CALL
0x1102 ISZERO
0x1103 ISZERO
0x1104 PUSH2 0xc67
0x1107 JUMPI
---
0x10f7: V911 = 0x0
0x10fa: REVERT 0x0 0x0
0x10fb: JUMPDEST 
0x10fc: V912 = 0x2c6
0x10ff: V913 = GAS
0x1100: V914 = SUB V913 0x2c6
0x1101: V915 = CALL V914 S0 S1 S2 S3 S4 S5
0x1102: V916 = ISZERO V915
0x1103: V917 = ISZERO V916
0x1104: V918 = 0xc67
0x1107: THROWI V917
---
Entry stack: [V861, V871, 0xa9059cbb, V901, 0x20, V904, V905, V904, 0x0, V871]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1108
[0x1108:0x11be]
---
Predecessors: [0x10f7]
Successors: [0x11bf]
---
0x1108 PUSH1 0x0
0x110a DUP1
0x110b REVERT
0x110c JUMPDEST
0x110d POP
0x110e POP
0x110f POP
0x1110 PUSH1 0x40
0x1112 MLOAD
0x1113 DUP1
0x1114 MLOAD
0x1115 SWAP1
0x1116 POP
0x1117 POP
0x1118 PUSH1 0x5
0x111a SLOAD
0x111b PUSH1 0x4
0x111d PUSH1 0x0
0x111f DUP3
0x1120 DUP3
0x1121 SLOAD
0x1122 ADD
0x1123 SWAP3
0x1124 POP
0x1125 POP
0x1126 DUP2
0x1127 SWAP1
0x1128 SSTORE
0x1129 POP
0x112a PUSH32 0x1db38da2cfe44b50604674302d346eee06a6b387fd6a5d192c31e221fb067606
0x114b DUP2
0x114c NUMBER
0x114d PUSH1 0x2
0x114f PUSH1 0x0
0x1151 SWAP1
0x1152 SLOAD
0x1153 SWAP1
0x1154 PUSH2 0x100
0x1157 EXP
0x1158 SWAP1
0x1159 DIV
0x115a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116f AND
0x1170 PUSH1 0x40
0x1172 MLOAD
0x1173 DUP1
0x1174 DUP5
0x1175 DUP2
0x1176 MSTORE
0x1177 PUSH1 0x20
0x1179 ADD
0x117a DUP4
0x117b DUP2
0x117c MSTORE
0x117d PUSH1 0x20
0x117f ADD
0x1180 DUP3
0x1181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1196 AND
0x1197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ac AND
0x11ad DUP2
0x11ae MSTORE
0x11af PUSH1 0x20
0x11b1 ADD
0x11b2 SWAP4
0x11b3 POP
0x11b4 POP
0x11b5 POP
0x11b6 POP
0x11b7 PUSH1 0x40
0x11b9 MLOAD
0x11ba DUP1
0x11bb SWAP2
0x11bc SUB
0x11bd SWAP1
0x11be LOG1
---
0x1108: V919 = 0x0
0x110b: REVERT 0x0 0x0
0x110c: JUMPDEST 
0x1110: V920 = 0x40
0x1112: V921 = M[0x40]
0x1114: V922 = M[V921]
0x1118: V923 = 0x5
0x111a: V924 = S[0x5]
0x111b: V925 = 0x4
0x111d: V926 = 0x0
0x1121: V927 = S[0x4]
0x1122: V928 = ADD V927 V924
0x1128: S[0x4] = V928
0x112a: V929 = 0x1db38da2cfe44b50604674302d346eee06a6b387fd6a5d192c31e221fb067606
0x114c: V930 = NUMBER
0x114d: V931 = 0x2
0x114f: V932 = 0x0
0x1152: V933 = S[0x2]
0x1154: V934 = 0x100
0x1157: V935 = EXP 0x100 0x0
0x1159: V936 = DIV V933 0x1
0x115a: V937 = 0xffffffffffffffffffffffffffffffffffffffff
0x116f: V938 = AND 0xffffffffffffffffffffffffffffffffffffffff V936
0x1170: V939 = 0x40
0x1172: V940 = M[0x40]
0x1176: M[V940] = S3
0x1177: V941 = 0x20
0x1179: V942 = ADD 0x20 V940
0x117c: M[V942] = V930
0x117d: V943 = 0x20
0x117f: V944 = ADD 0x20 V942
0x1181: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0x1196: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V938
0x1197: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ac: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0x11ae: M[V944] = V948
0x11af: V949 = 0x20
0x11b1: V950 = ADD 0x20 V944
0x11b7: V951 = 0x40
0x11b9: V952 = M[0x40]
0x11bc: V953 = SUB V950 V952
0x11be: LOG V952 V953 0x1db38da2cfe44b50604674302d346eee06a6b387fd6a5d192c31e221fb067606
---
Entry stack: []
Stack pops: 0
Stack additions: [S3]
Exit stack: []

================================

Block 0x11bf
[0x11bf:0x11bf]
---
Predecessors: [0x1108]
Successors: [0x11c0]
---
0x11bf JUMPDEST
---
0x11bf: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x11c0
[0x11c0:0x126b]
---
Predecessors: [0x11bf]
Successors: [0x126c]
---
0x11c0 JUMPDEST
0x11c1 POP
0x11c2 JUMP
0x11c3 JUMPDEST
0x11c4 PUSH1 0x1
0x11c6 PUSH1 0x0
0x11c8 SWAP1
0x11c9 SLOAD
0x11ca SWAP1
0x11cb PUSH2 0x100
0x11ce EXP
0x11cf SWAP1
0x11d0 DIV
0x11d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e6 AND
0x11e7 DUP2
0x11e8 JUMP
0x11e9 JUMPDEST
0x11ea PUSH1 0x5
0x11ec SLOAD
0x11ed DUP2
0x11ee JUMP
0x11ef JUMPDEST
0x11f0 PUSH1 0x2
0x11f2 PUSH1 0x0
0x11f4 SWAP1
0x11f5 SLOAD
0x11f6 SWAP1
0x11f7 PUSH2 0x100
0x11fa EXP
0x11fb SWAP1
0x11fc DIV
0x11fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1212 AND
0x1213 DUP2
0x1214 JUMP
0x1215 JUMPDEST
0x1216 PUSH1 0x0
0x1218 DUP1
0x1219 SWAP1
0x121a SLOAD
0x121b SWAP1
0x121c PUSH2 0x100
0x121f EXP
0x1220 SWAP1
0x1221 DIV
0x1222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1237 AND
0x1238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124d AND
0x124e CALLER
0x124f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1264 AND
0x1265 EQ
0x1266 ISZERO
0x1267 ISZERO
0x1268 PUSH2 0xdc8
0x126b JUMPI
---
0x11c0: JUMPDEST 
0x11c2: JUMP S1
0x11c3: JUMPDEST 
0x11c4: V954 = 0x1
0x11c6: V955 = 0x0
0x11c9: V956 = S[0x1]
0x11cb: V957 = 0x100
0x11ce: V958 = EXP 0x100 0x0
0x11d0: V959 = DIV V956 0x1
0x11d1: V960 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e6: V961 = AND 0xffffffffffffffffffffffffffffffffffffffff V959
0x11e8: JUMP S0
0x11e9: JUMPDEST 
0x11ea: V962 = 0x5
0x11ec: V963 = S[0x5]
0x11ee: JUMP S0
0x11ef: JUMPDEST 
0x11f0: V964 = 0x2
0x11f2: V965 = 0x0
0x11f5: V966 = S[0x2]
0x11f7: V967 = 0x100
0x11fa: V968 = EXP 0x100 0x0
0x11fc: V969 = DIV V966 0x1
0x11fd: V970 = 0xffffffffffffffffffffffffffffffffffffffff
0x1212: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V969
0x1214: JUMP S0
0x1215: JUMPDEST 
0x1216: V972 = 0x0
0x121a: V973 = S[0x0]
0x121c: V974 = 0x100
0x121f: V975 = EXP 0x100 0x0
0x1221: V976 = DIV V973 0x1
0x1222: V977 = 0xffffffffffffffffffffffffffffffffffffffff
0x1237: V978 = AND 0xffffffffffffffffffffffffffffffffffffffff V976
0x1238: V979 = 0xffffffffffffffffffffffffffffffffffffffff
0x124d: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V978
0x124e: V981 = CALLER
0x124f: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0x1264: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0x1265: V984 = EQ V983 V980
0x1266: V985 = ISZERO V984
0x1267: V986 = ISZERO V985
0x1268: V987 = 0xdc8
0x126b: THROWI V986
---
Entry stack: [S0]
Stack pops: 18
Stack additions: []
Exit stack: []

================================

Block 0x126c
[0x126c:0x12c4]
---
Predecessors: [0x11c0]
Successors: [0x12c5]
---
0x126c INVALID
0x126d JUMPDEST
0x126e PUSH1 0x0
0x1270 DUP1
0x1271 SWAP1
0x1272 SLOAD
0x1273 SWAP1
0x1274 PUSH2 0x100
0x1277 EXP
0x1278 SWAP1
0x1279 DIV
0x127a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128f AND
0x1290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a5 AND
0x12a6 DUP2
0x12a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12bc AND
0x12bd EQ
0x12be ISZERO
0x12bf ISZERO
0x12c0 ISZERO
0x12c1 PUSH2 0xe24
0x12c4 JUMPI
---
0x126c: INVALID 
0x126d: JUMPDEST 
0x126e: V988 = 0x0
0x1272: V989 = S[0x0]
0x1274: V990 = 0x100
0x1277: V991 = EXP 0x100 0x0
0x1279: V992 = DIV V989 0x1
0x127a: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0x128f: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0x1290: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a5: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0x12a7: V997 = 0xffffffffffffffffffffffffffffffffffffffff
0x12bc: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12bd: V999 = EQ V998 V996
0x12be: V1000 = ISZERO V999
0x12bf: V1001 = ISZERO V1000
0x12c0: V1002 = ISZERO V1001
0x12c1: V1003 = 0xe24
0x12c4: THROWI V1002
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x12c5
[0x12c5:0x130a]
---
Predecessors: [0x126c]
Successors: [0x130b]
---
0x12c5 PUSH1 0x0
0x12c7 DUP1
0x12c8 REVERT
0x12c9 JUMPDEST
0x12ca DUP1
0x12cb PUSH1 0x1
0x12cd PUSH1 0x0
0x12cf PUSH2 0x100
0x12d2 EXP
0x12d3 DUP2
0x12d4 SLOAD
0x12d5 DUP2
0x12d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12eb MUL
0x12ec NOT
0x12ed AND
0x12ee SWAP1
0x12ef DUP4
0x12f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1305 AND
0x1306 MUL
0x1307 OR
0x1308 SWAP1
0x1309 SSTORE
0x130a POP
---
0x12c5: V1004 = 0x0
0x12c8: REVERT 0x0 0x0
0x12c9: JUMPDEST 
0x12cb: V1005 = 0x1
0x12cd: V1006 = 0x0
0x12cf: V1007 = 0x100
0x12d2: V1008 = EXP 0x100 0x0
0x12d4: V1009 = S[0x1]
0x12d6: V1010 = 0xffffffffffffffffffffffffffffffffffffffff
0x12eb: V1011 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x12ec: V1012 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x12ed: V1013 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1009
0x12f0: V1014 = 0xffffffffffffffffffffffffffffffffffffffff
0x1305: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1306: V1016 = MUL V1015 0x1
0x1307: V1017 = OR V1016 V1013
0x1309: S[0x1] = V1017
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x130b
[0x130b:0x130b]
---
Predecessors: [0x12c5]
Successors: [0x130c]
---
0x130b JUMPDEST
---
0x130b: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x130c
[0x130c:0x136b]
---
Predecessors: [0x130b]
Successors: [0x136c]
---
0x130c JUMPDEST
0x130d POP
0x130e JUMP
0x130f JUMPDEST
0x1310 PUSH1 0x4
0x1312 SLOAD
0x1313 DUP2
0x1314 JUMP
0x1315 JUMPDEST
0x1316 PUSH1 0x0
0x1318 DUP1
0x1319 SWAP1
0x131a SLOAD
0x131b SWAP1
0x131c PUSH2 0x100
0x131f EXP
0x1320 SWAP1
0x1321 DIV
0x1322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1337 AND
0x1338 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134d AND
0x134e CALLER
0x134f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1364 AND
0x1365 EQ
0x1366 ISZERO
0x1367 ISZERO
0x1368 PUSH2 0xec8
0x136b JUMPI
---
0x130c: JUMPDEST 
0x130e: JUMP S1
0x130f: JUMPDEST 
0x1310: V1018 = 0x4
0x1312: V1019 = S[0x4]
0x1314: JUMP S0
0x1315: JUMPDEST 
0x1316: V1020 = 0x0
0x131a: V1021 = S[0x0]
0x131c: V1022 = 0x100
0x131f: V1023 = EXP 0x100 0x0
0x1321: V1024 = DIV V1021 0x1
0x1322: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0x1337: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0x1338: V1027 = 0xffffffffffffffffffffffffffffffffffffffff
0x134d: V1028 = AND 0xffffffffffffffffffffffffffffffffffffffff V1026
0x134e: V1029 = CALLER
0x134f: V1030 = 0xffffffffffffffffffffffffffffffffffffffff
0x1364: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V1029
0x1365: V1032 = EQ V1031 V1028
0x1366: V1033 = ISZERO V1032
0x1367: V1034 = ISZERO V1033
0x1368: V1035 = 0xec8
0x136b: THROWI V1034
---
Entry stack: [S0]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x136c
[0x136c:0x1374]
---
Predecessors: [0x130c]
Successors: [0x1375]
---
0x136c INVALID
0x136d JUMPDEST
0x136e DUP1
0x136f PUSH1 0x5
0x1371 DUP2
0x1372 SWAP1
0x1373 SSTORE
0x1374 POP
---
0x136c: INVALID 
0x136d: JUMPDEST 
0x136f: V1036 = 0x5
0x1373: S[0x5] = S0
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1375
[0x1375:0x1375]
---
Predecessors: [0x136c]
Successors: [0x1376]
---
0x1375 JUMPDEST
---
0x1375: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x1376
[0x1376:0x13bd]
---
Predecessors: [0x1375]
Successors: []
---
0x1376 JUMPDEST
0x1377 POP
0x1378 JUMP
0x1379 STOP
0x137a LOG1
0x137b PUSH6 0x627a7a723058
0x1382 SHA3
0x1383 MISSING 0xb7
0x1384 PUSH22 0x7af46b9fb5cd1de2291a4ba3aafcc1e1688fbd90e1ba
0x139b GAS
0x139c STOP
0x139d PUSH32 0x7d4717cb1a0029
---
0x1376: JUMPDEST 
0x1378: JUMP S1
0x1379: STOP 
0x137a: LOG S0 S1 S2
0x137b: V1037 = 0x627a7a723058
0x1382: V1038 = SHA3 0x627a7a723058 S3
0x1383: MISSING 0xb7
0x1384: V1039 = 0x7af46b9fb5cd1de2291a4ba3aafcc1e1688fbd90e1ba
0x139b: V1040 = GAS
0x139c: STOP 
0x139d: V1041 = 0x7d4717cb1a0029
---
Entry stack: [S0]
Stack pops: 28
Stack additions: [0x7d4717cb1a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x79ba5097
Entry block: 0x5f
Exit block: 0x72
Body: 0x5f, 0x66, 0x6a, 0x72, 0x157, 0x1af, 0x1b3, 0x332

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x74
Exit block: 0x87
Body: 0x74, 0x7b, 0x7f, 0x87, 0x334

Function 2:
Public function signature: 0xd4ee1d90
Entry block: 0xc9
Exit block: 0xdc
Body: 0xc9, 0xd0, 0xd4, 0xdc, 0x359

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x11e
Exit block: 0x155
Body: 0x11e, 0x125, 0x129, 0x155, 0x37f, 0x3d6, 0x3d7, 0x42f, 0x433, 0x475, 0x476

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

