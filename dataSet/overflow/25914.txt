Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x79ba5097
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x79ba5097
0x3c: V13 = EQ 0x79ba5097 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7c]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x7c
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x7c
0x4b: JUMPI 0x7c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd1]
---
0x4c DUP1
0x4d PUSH4 0xd4ee1d90
0x52 EQ
0x53 PUSH2 0xd1
0x56 JUMPI
---
0x4d: V18 = 0xd4ee1d90
0x52: V19 = EQ 0xd4ee1d90 V11
0x53: V20 = 0xd1
0x56: JUMPI 0xd1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x126]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x126
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x126
0x61: JUMPI 0x126 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x67]
Successors: [0x15f]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x15f
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0x7a
0x76: V30 = 0x15f
0x79: JUMP 0x15f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x1bb]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x82]
---
Predecessors: [0x41]
Successors: [0x83, 0x87]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x7c: JUMPDEST 
0x7d: V31 = CALLVALUE
0x7e: V32 = ISZERO V31
0x7f: V33 = 0x87
0x82: JUMPI 0x87 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x7c]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V34 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x7c]
Successors: [0x2fe]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x2fe
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V35 = 0x8f
0x8b: V36 = 0x2fe
0x8e: JUMP 0x2fe
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0xd0]
---
Predecessors: [0x2fe]
Successors: []
---
0x8f JUMPDEST
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 DUP3
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0 AND
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 POP
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd SWAP2
0xce SUB
0xcf SWAP1
0xd0 RETURN
---
0x8f: JUMPDEST 
0x90: V37 = 0x40
0x92: V38 = M[0x40]
0x95: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0xab: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc2: M[V38] = V42
0xc3: V43 = 0x20
0xc5: V44 = ADD 0x20 V38
0xc9: V45 = 0x40
0xcb: V46 = M[0x40]
0xce: V47 = SUB V44 V46
0xd0: RETURN V46 V47
---
Entry stack: [S2, S1, V160]
Stack pops: 1
Stack additions: []
Exit stack: [S2, S1]

================================

Block 0xd1
[0xd1:0xd7]
---
Predecessors: [0x4c]
Successors: [0xd8, 0xdc]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd1: JUMPDEST 
0xd2: V48 = CALLVALUE
0xd3: V49 = ISZERO V48
0xd4: V50 = 0xdc
0xd7: JUMPI 0xdc V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd1]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V51 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xd1]
Successors: [0x323]
---
0xdc JUMPDEST
0xdd PUSH2 0xe4
0xe0 PUSH2 0x323
0xe3 JUMP
---
0xdc: JUMPDEST 
0xdd: V52 = 0xe4
0xe0: V53 = 0x323
0xe3: JUMP 0x323
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe4]
Exit stack: [V11, 0xe4]

================================

Block 0xe4
[0xe4:0x125]
---
Predecessors: [0x323]
Successors: []
---
0xe4 JUMPDEST
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP3
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
0x11d POP
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP1
0x122 SWAP2
0x123 SUB
0x124 SWAP1
0x125 RETURN
---
0xe4: JUMPDEST 
0xe5: V54 = 0x40
0xe7: V55 = M[0x40]
0xea: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x100: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x117: M[V55] = V59
0x118: V60 = 0x20
0x11a: V61 = ADD 0x20 V55
0x11e: V62 = 0x40
0x120: V63 = M[0x40]
0x123: V64 = SUB V61 V63
0x125: RETURN V63 V64
---
Entry stack: [V11, 0xe4, V168]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe4]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x57]
Successors: [0x12d, 0x131]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V65 = CALLVALUE
0x128: V66 = ISZERO V65
0x129: V67 = 0x131
0x12c: JUMPI 0x131 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x126]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V68 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x131
[0x131:0x15c]
---
Predecessors: [0x126]
Successors: [0x349]
---
0x131 JUMPDEST
0x132 PUSH2 0x15d
0x135 PUSH1 0x4
0x137 DUP1
0x138 DUP1
0x139 CALLDATALOAD
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 SWAP1
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP1
0x155 SWAP2
0x156 SWAP1
0x157 POP
0x158 POP
0x159 PUSH2 0x349
0x15c JUMP
---
0x131: JUMPDEST 
0x132: V69 = 0x15d
0x135: V70 = 0x4
0x139: V71 = CALLDATALOAD 0x4
0x13a: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x151: V74 = 0x20
0x153: V75 = ADD 0x20 0x4
0x159: V76 = 0x349
0x15c: JUMP 0x349
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15d, V73]
Exit stack: [V11, 0x15d, V73]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0x3a4]
Successors: []
---
0x15d JUMPDEST
0x15e STOP
---
0x15d: JUMPDEST 
0x15e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x1b6]
---
Predecessors: [0x72]
Successors: [0x1b7, 0x1bb]
---
0x15f JUMPDEST
0x160 PUSH1 0x1
0x162 PUSH1 0x0
0x164 SWAP1
0x165 SLOAD
0x166 SWAP1
0x167 PUSH2 0x100
0x16a EXP
0x16b SWAP1
0x16c DIV
0x16d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182 AND
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 CALLER
0x19a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1af AND
0x1b0 EQ
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x15f: JUMPDEST 
0x160: V77 = 0x1
0x162: V78 = 0x0
0x165: V79 = S[0x1]
0x167: V80 = 0x100
0x16a: V81 = EXP 0x100 0x0
0x16c: V82 = DIV V79 0x1
0x16d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x182: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x183: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x199: V87 = CALLER
0x19a: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1b0: V90 = EQ V89 V86
0x1b1: V91 = ISZERO V90
0x1b2: V92 = ISZERO V91
0x1b3: V93 = 0x1bb
0x1b6: JUMPI 0x1bb V92
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x15f]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V94 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1bb
[0x1bb:0x2fd]
---
Predecessors: [0x15f]
Successors: [0x7a]
---
0x1bb JUMPDEST
0x1bc PUSH1 0x1
0x1be PUSH1 0x0
0x1c0 SWAP1
0x1c1 SLOAD
0x1c2 SWAP1
0x1c3 PUSH2 0x100
0x1c6 EXP
0x1c7 SWAP1
0x1c8 DIV
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 SWAP1
0x1f9 SLOAD
0x1fa SWAP1
0x1fb PUSH2 0x100
0x1fe EXP
0x1ff SWAP1
0x200 DIV
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x24e PUSH1 0x40
0x250 MLOAD
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 SWAP2
0x256 SUB
0x257 SWAP1
0x258 LOG3
0x259 PUSH1 0x1
0x25b PUSH1 0x0
0x25d SWAP1
0x25e SLOAD
0x25f SWAP1
0x260 PUSH2 0x100
0x263 EXP
0x264 SWAP1
0x265 DIV
0x266 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27b AND
0x27c PUSH1 0x0
0x27e DUP1
0x27f PUSH2 0x100
0x282 EXP
0x283 DUP2
0x284 SLOAD
0x285 DUP2
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b MUL
0x29c NOT
0x29d AND
0x29e SWAP1
0x29f DUP4
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 MUL
0x2b7 OR
0x2b8 SWAP1
0x2b9 SSTORE
0x2ba POP
0x2bb PUSH1 0x0
0x2bd PUSH1 0x1
0x2bf PUSH1 0x0
0x2c1 PUSH2 0x100
0x2c4 EXP
0x2c5 DUP2
0x2c6 SLOAD
0x2c7 DUP2
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd MUL
0x2de NOT
0x2df AND
0x2e0 SWAP1
0x2e1 DUP4
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 MUL
0x2f9 OR
0x2fa SWAP1
0x2fb SSTORE
0x2fc POP
0x2fd JUMP
---
0x1bb: JUMPDEST 
0x1bc: V95 = 0x1
0x1be: V96 = 0x0
0x1c1: V97 = S[0x1]
0x1c3: V98 = 0x100
0x1c6: V99 = EXP 0x100 0x0
0x1c8: V100 = DIV V97 0x1
0x1c9: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1df: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1f5: V105 = 0x0
0x1f9: V106 = S[0x0]
0x1fb: V107 = 0x100
0x1fe: V108 = EXP 0x100 0x0
0x200: V109 = DIV V106 0x1
0x201: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x217: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x22d: V114 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x24e: V115 = 0x40
0x250: V116 = M[0x40]
0x251: V117 = 0x40
0x253: V118 = M[0x40]
0x256: V119 = SUB V116 V118
0x258: LOG V118 V119 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V113 V104
0x259: V120 = 0x1
0x25b: V121 = 0x0
0x25e: V122 = S[0x1]
0x260: V123 = 0x100
0x263: V124 = EXP 0x100 0x0
0x265: V125 = DIV V122 0x1
0x266: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x27c: V128 = 0x0
0x27f: V129 = 0x100
0x282: V130 = EXP 0x100 0x0
0x284: V131 = S[0x0]
0x286: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V133 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x29c: V134 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V135 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V131
0x2a0: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x2b6: V138 = MUL V137 0x1
0x2b7: V139 = OR V138 V135
0x2b9: S[0x0] = V139
0x2bb: V140 = 0x0
0x2bd: V141 = 0x1
0x2bf: V142 = 0x0
0x2c1: V143 = 0x100
0x2c4: V144 = EXP 0x100 0x0
0x2c6: V145 = S[0x1]
0x2c8: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V147 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2de: V148 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V149 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V145
0x2e2: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x2f8: V152 = MUL 0x0 0x1
0x2f9: V153 = OR 0x0 V149
0x2fb: S[0x1] = V153
0x2fd: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fe
[0x2fe:0x322]
---
Predecessors: [0x87, 0x4cc]
Successors: [0x8f]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x0
0x301 DUP1
0x302 SWAP1
0x303 SLOAD
0x304 SWAP1
0x305 PUSH2 0x100
0x308 EXP
0x309 SWAP1
0x30a DIV
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 DUP2
0x322 JUMP
---
0x2fe: JUMPDEST 
0x2ff: V154 = 0x0
0x303: V155 = S[0x0]
0x305: V156 = 0x100
0x308: V157 = EXP 0x100 0x0
0x30a: V158 = DIV V155 0x1
0x30b: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x322: JUMP S0
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: [S0, V160]
Exit stack: [S1, S0, V160]

================================

Block 0x323
[0x323:0x348]
---
Predecessors: [0xdc]
Successors: [0xe4]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
0x326 PUSH1 0x0
0x328 SWAP1
0x329 SLOAD
0x32a SWAP1
0x32b PUSH2 0x100
0x32e EXP
0x32f SWAP1
0x330 DIV
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 DUP2
0x348 JUMP
---
0x323: JUMPDEST 
0x324: V161 = 0x1
0x326: V162 = 0x0
0x329: V163 = S[0x1]
0x32b: V164 = 0x100
0x32e: V165 = EXP 0x100 0x0
0x330: V166 = DIV V163 0x1
0x331: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x348: JUMP 0xe4
---
Entry stack: [V11, 0xe4]
Stack pops: 1
Stack additions: [S0, V168]
Exit stack: [V11, 0xe4, V168]

================================

Block 0x349
[0x349:0x39f]
---
Predecessors: [0x131]
Successors: [0x3a0, 0x3a4]
---
0x349 JUMPDEST
0x34a PUSH1 0x0
0x34c DUP1
0x34d SWAP1
0x34e SLOAD
0x34f SWAP1
0x350 PUSH2 0x100
0x353 EXP
0x354 SWAP1
0x355 DIV
0x356 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36b AND
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 CALLER
0x383 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x398 AND
0x399 EQ
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x349: JUMPDEST 
0x34a: V169 = 0x0
0x34e: V170 = S[0x0]
0x350: V171 = 0x100
0x353: V172 = EXP 0x100 0x0
0x355: V173 = DIV V170 0x1
0x356: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x36c: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x382: V178 = CALLER
0x383: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x398: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x399: V181 = EQ V180 V177
0x39a: V182 = ISZERO V181
0x39b: V183 = ISZERO V182
0x39c: V184 = 0x3a4
0x39f: JUMPI 0x3a4 V183
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d, V73]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x349]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V185 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d, V73]

================================

Block 0x3a4
[0x3a4:0x3e7]
---
Predecessors: [0x349]
Successors: [0x15d]
---
0x3a4 JUMPDEST
0x3a5 DUP1
0x3a6 PUSH1 0x1
0x3a8 PUSH1 0x0
0x3aa PUSH2 0x100
0x3ad EXP
0x3ae DUP2
0x3af SLOAD
0x3b0 DUP2
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 MUL
0x3c7 NOT
0x3c8 AND
0x3c9 SWAP1
0x3ca DUP4
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 MUL
0x3e2 OR
0x3e3 SWAP1
0x3e4 SSTORE
0x3e5 POP
0x3e6 POP
0x3e7 JUMP
---
0x3a4: JUMPDEST 
0x3a6: V186 = 0x1
0x3a8: V187 = 0x0
0x3aa: V188 = 0x100
0x3ad: V189 = EXP 0x100 0x0
0x3af: V190 = S[0x1]
0x3b1: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V192 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3c7: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V190
0x3cb: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x3e1: V197 = MUL V196 0x1
0x3e2: V198 = OR V197 V194
0x3e4: S[0x1] = V198
0x3e7: JUMP 0x15d
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e8
[0x3e8:0x455]
---
Predecessors: []
Successors: [0x456]
---
0x3e8 STOP
0x3e9 LOG1
0x3ea PUSH6 0x627a7a723058
0x3f1 SHA3
0x3f2 MISSING 0xe1
0x3f3 CODESIZE
0x3f4 MISSING 0xfb
0x3f5 MULMOD
0x3f6 MISSING 0xae
0x3f7 EXTCODEHASH
0x3f8 MISSING 0xbe
0x3f9 MUL
0x3fa MISSING 0xca
0x3fb MISSING 0xb6
0x3fc DUP10
0x3fd PUSH4 0x5592fc1d
0x402 SELFDESTRUCT
0x403 MISSING 0xe2
0x404 MISSING 0x29
0x405 PUSH26 0x1416bcec97be098f42a4842700296060604052600080fd00a165
0x420 PUSH3 0x7a7a72
0x424 ADDRESS
0x425 PC
0x426 SHA3
0x427 MISSING 0xe7
0x428 MISSING 0xa8
0x429 MISSING 0xb9
0x42a POP
0x42b XOR
0x42c MISSING 0x4e
0x42d MISSING 0xbf
0x42e MISSING 0xb4
0x42f ORIGIN
0x430 MISSING 0xae
0x431 MISSING 0x4c
0x432 MISSING 0xde
0x433 EQ
0x434 GASLIMIT
0x435 MISSING 0xf8
0x436 MISSING 0x25
0x437 ADDMOD
0x438 PUSH25 0xee4902c8943c20b400bd7246e3290029606060405260043610
0x452 PUSH2 0xd0
0x455 JUMPI
---
0x3e8: STOP 
0x3e9: LOG S0 S1 S2
0x3ea: V199 = 0x627a7a723058
0x3f1: V200 = SHA3 0x627a7a723058 S3
0x3f2: MISSING 0xe1
0x3f3: V201 = CODESIZE
0x3f4: MISSING 0xfb
0x3f5: V202 = MULMOD S0 S1 S2
0x3f6: MISSING 0xae
0x3f7: V203 = EXTCODEHASH S0
0x3f8: MISSING 0xbe
0x3f9: V204 = MUL S0 S1
0x3fa: MISSING 0xca
0x3fb: MISSING 0xb6
0x3fd: V205 = 0x5592fc1d
0x402: SELFDESTRUCT 0x5592fc1d
0x403: MISSING 0xe2
0x404: MISSING 0x29
0x405: V206 = 0x1416bcec97be098f42a4842700296060604052600080fd00a165
0x420: V207 = 0x7a7a72
0x424: V208 = ADDRESS
0x425: V209 = PC
0x426: V210 = SHA3 V209 V208
0x427: MISSING 0xe7
0x428: MISSING 0xa8
0x429: MISSING 0xb9
0x42b: V211 = XOR S1 S2
0x42c: MISSING 0x4e
0x42d: MISSING 0xbf
0x42e: MISSING 0xb4
0x42f: V212 = ORIGIN
0x430: MISSING 0xae
0x431: MISSING 0x4c
0x432: MISSING 0xde
0x433: V213 = EQ S0 S1
0x434: V214 = GASLIMIT
0x435: MISSING 0xf8
0x436: MISSING 0x25
0x437: V215 = ADDMOD S0 S1 S2
0x438: V216 = 0xee4902c8943c20b400bd7246e3290029606060405260043610
0x452: V217 = 0xd0
0x455: THROWI 0xee4902c8943c20b400bd7246e3290029606060405260043610
---
Entry stack: []
Stack pops: 0
Stack additions: [V200, V201, V202, V203, V204, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V210, 0x7a7a72, 0x1416bcec97be098f42a4842700296060604052600080fd00a165, V211, V212, V214, V213, V215]
Exit stack: []

================================

Block 0x456
[0x456:0x489]
---
Predecessors: [0x3e8]
Successors: [0x48a]
---
0x456 PUSH1 0x0
0x458 CALLDATALOAD
0x459 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x477 SWAP1
0x478 DIV
0x479 PUSH4 0xffffffff
0x47e AND
0x47f DUP1
0x480 PUSH4 0x6fdde03
0x485 EQ
0x486 PUSH2 0xd5
0x489 JUMPI
---
0x456: V218 = 0x0
0x458: V219 = CALLDATALOAD 0x0
0x459: V220 = 0x100000000000000000000000000000000000000000000000000000000
0x478: V221 = DIV V219 0x100000000000000000000000000000000000000000000000000000000
0x479: V222 = 0xffffffff
0x47e: V223 = AND 0xffffffff V221
0x480: V224 = 0x6fdde03
0x485: V225 = EQ 0x6fdde03 V223
0x486: V226 = 0xd5
0x489: THROWI V225
---
Entry stack: [V215]
Stack pops: 0
Stack additions: [V223]
Exit stack: [V215, V223]

================================

Block 0x48a
[0x48a:0x494]
---
Predecessors: [0x456]
Successors: [0x495]
---
0x48a DUP1
0x48b PUSH4 0x95ea7b3
0x490 EQ
0x491 PUSH2 0x163
0x494 JUMPI
---
0x48b: V227 = 0x95ea7b3
0x490: V228 = EQ 0x95ea7b3 V223
0x491: V229 = 0x163
0x494: THROWI V228
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x495
[0x495:0x49f]
---
Predecessors: [0x48a]
Successors: [0x4a0]
---
0x495 DUP1
0x496 PUSH4 0x18160ddd
0x49b EQ
0x49c PUSH2 0x1bd
0x49f JUMPI
---
0x496: V230 = 0x18160ddd
0x49b: V231 = EQ 0x18160ddd V223
0x49c: V232 = 0x1bd
0x49f: THROWI V231
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4a0
[0x4a0:0x4aa]
---
Predecessors: [0x495]
Successors: [0x4ab]
---
0x4a0 DUP1
0x4a1 PUSH4 0x23b872dd
0x4a6 EQ
0x4a7 PUSH2 0x1e6
0x4aa JUMPI
---
0x4a1: V233 = 0x23b872dd
0x4a6: V234 = EQ 0x23b872dd V223
0x4a7: V235 = 0x1e6
0x4aa: THROWI V234
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4ab
[0x4ab:0x4b5]
---
Predecessors: [0x4a0]
Successors: [0x4b6]
---
0x4ab DUP1
0x4ac PUSH4 0x313ce567
0x4b1 EQ
0x4b2 PUSH2 0x25f
0x4b5 JUMPI
---
0x4ac: V236 = 0x313ce567
0x4b1: V237 = EQ 0x313ce567 V223
0x4b2: V238 = 0x25f
0x4b5: THROWI V237
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4b6
[0x4b6:0x4c0]
---
Predecessors: [0x4ab]
Successors: [0x4c1]
---
0x4b6 DUP1
0x4b7 PUSH4 0x3eaaf86b
0x4bc EQ
0x4bd PUSH2 0x288
0x4c0 JUMPI
---
0x4b7: V239 = 0x3eaaf86b
0x4bc: V240 = EQ 0x3eaaf86b V223
0x4bd: V241 = 0x288
0x4c0: THROWI V240
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4c1
[0x4c1:0x4cb]
---
Predecessors: [0x4b6]
Successors: [0x4cc]
---
0x4c1 DUP1
0x4c2 PUSH4 0x70a08231
0x4c7 EQ
0x4c8 PUSH2 0x2b1
0x4cb JUMPI
---
0x4c2: V242 = 0x70a08231
0x4c7: V243 = EQ 0x70a08231 V223
0x4c8: V244 = 0x2b1
0x4cb: THROWI V243
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4cc
[0x4cc:0x4d6]
---
Predecessors: [0x4c1]
Successors: [0x2fe, 0x4d7]
---
0x4cc DUP1
0x4cd PUSH4 0x79ba5097
0x4d2 EQ
0x4d3 PUSH2 0x2fe
0x4d6 JUMPI
---
0x4cd: V245 = 0x79ba5097
0x4d2: V246 = EQ 0x79ba5097 V223
0x4d3: V247 = 0x2fe
0x4d6: JUMPI 0x2fe V246
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4d7
[0x4d7:0x4e1]
---
Predecessors: [0x4cc]
Successors: [0x4e2]
---
0x4d7 DUP1
0x4d8 PUSH4 0x8da5cb5b
0x4dd EQ
0x4de PUSH2 0x313
0x4e1 JUMPI
---
0x4d8: V248 = 0x8da5cb5b
0x4dd: V249 = EQ 0x8da5cb5b V223
0x4de: V250 = 0x313
0x4e1: THROWI V249
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4e2
[0x4e2:0x4ec]
---
Predecessors: [0x4d7]
Successors: [0x4ed]
---
0x4e2 DUP1
0x4e3 PUSH4 0x95d89b41
0x4e8 EQ
0x4e9 PUSH2 0x368
0x4ec JUMPI
---
0x4e3: V251 = 0x95d89b41
0x4e8: V252 = EQ 0x95d89b41 V223
0x4e9: V253 = 0x368
0x4ec: THROWI V252
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4ed
[0x4ed:0x4f7]
---
Predecessors: [0x4e2]
Successors: [0x4f8]
---
0x4ed DUP1
0x4ee PUSH4 0xa9059cbb
0x4f3 EQ
0x4f4 PUSH2 0x3f6
0x4f7 JUMPI
---
0x4ee: V254 = 0xa9059cbb
0x4f3: V255 = EQ 0xa9059cbb V223
0x4f4: V256 = 0x3f6
0x4f7: THROWI V255
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x4f8
[0x4f8:0x502]
---
Predecessors: [0x4ed]
Successors: [0x503]
---
0x4f8 DUP1
0x4f9 PUSH4 0xd4ee1d90
0x4fe EQ
0x4ff PUSH2 0x450
0x502 JUMPI
---
0x4f9: V257 = 0xd4ee1d90
0x4fe: V258 = EQ 0xd4ee1d90 V223
0x4ff: V259 = 0x450
0x502: THROWI V258
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x503
[0x503:0x50d]
---
Predecessors: [0x4f8]
Successors: [0x50e]
---
0x503 DUP1
0x504 PUSH4 0xdd62ed3e
0x509 EQ
0x50a PUSH2 0x4a5
0x50d JUMPI
---
0x504: V260 = 0xdd62ed3e
0x509: V261 = EQ 0xdd62ed3e V223
0x50a: V262 = 0x4a5
0x50d: THROWI V261
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x50e
[0x50e:0x518]
---
Predecessors: [0x503]
Successors: [0x519]
---
0x50e DUP1
0x50f PUSH4 0xf2fde38b
0x514 EQ
0x515 PUSH2 0x511
0x518 JUMPI
---
0x50f: V263 = 0xf2fde38b
0x514: V264 = EQ 0xf2fde38b V223
0x515: V265 = 0x511
0x518: THROWI V264
---
Entry stack: [V215, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V215, V223]

================================

Block 0x519
[0x519:0x524]
---
Predecessors: [0x50e]
Successors: [0x525]
---
0x519 JUMPDEST
0x51a PUSH1 0x0
0x51c DUP1
0x51d REVERT
0x51e JUMPDEST
0x51f CALLVALUE
0x520 ISZERO
0x521 PUSH2 0xe0
0x524 JUMPI
---
0x519: JUMPDEST 
0x51a: V266 = 0x0
0x51d: REVERT 0x0 0x0
0x51e: JUMPDEST 
0x51f: V267 = CALLVALUE
0x520: V268 = ISZERO V267
0x521: V269 = 0xe0
0x524: THROWI V268
---
Entry stack: [V215, V223]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x525
[0x525:0x555]
---
Predecessors: [0x519]
Successors: [0x556]
---
0x525 PUSH1 0x0
0x527 DUP1
0x528 REVERT
0x529 JUMPDEST
0x52a PUSH2 0xe8
0x52d PUSH2 0x54a
0x530 JUMP
0x531 JUMPDEST
0x532 PUSH1 0x40
0x534 MLOAD
0x535 DUP1
0x536 DUP1
0x537 PUSH1 0x20
0x539 ADD
0x53a DUP3
0x53b DUP2
0x53c SUB
0x53d DUP3
0x53e MSTORE
0x53f DUP4
0x540 DUP2
0x541 DUP2
0x542 MLOAD
0x543 DUP2
0x544 MSTORE
0x545 PUSH1 0x20
0x547 ADD
0x548 SWAP2
0x549 POP
0x54a DUP1
0x54b MLOAD
0x54c SWAP1
0x54d PUSH1 0x20
0x54f ADD
0x550 SWAP1
0x551 DUP1
0x552 DUP4
0x553 DUP4
0x554 PUSH1 0x0
---
0x525: V270 = 0x0
0x528: REVERT 0x0 0x0
0x529: JUMPDEST 
0x52a: V271 = 0xe8
0x52d: V272 = 0x54a
0x530: THROW 
0x531: JUMPDEST 
0x532: V273 = 0x40
0x534: V274 = M[0x40]
0x537: V275 = 0x20
0x539: V276 = ADD 0x20 V274
0x53c: V277 = SUB V276 V274
0x53e: M[V274] = V277
0x542: V278 = M[S0]
0x544: M[V276] = V278
0x545: V279 = 0x20
0x547: V280 = ADD 0x20 V276
0x54b: V281 = M[S0]
0x54d: V282 = 0x20
0x54f: V283 = ADD 0x20 S0
0x554: V284 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe8, 0x0, V283, V280, V281, V281, V283, V280, V274, V274, S0]
Exit stack: []

================================

Block 0x556
[0x556:0x55e]
---
Predecessors: [0x525]
Successors: [0x55f]
---
0x556 JUMPDEST
0x557 DUP4
0x558 DUP2
0x559 LT
0x55a ISZERO
0x55b PUSH2 0x128
0x55e JUMPI
---
0x556: JUMPDEST 
0x559: V285 = LT 0x0 V281
0x55a: V286 = ISZERO V285
0x55b: V287 = 0x128
0x55e: THROWI V286
---
Entry stack: [S9, V274, V274, V280, V283, V281, V281, V280, V283, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V274, V274, V280, V283, V281, V281, V280, V283, 0x0]

================================

Block 0x55f
[0x55f:0x584]
---
Predecessors: [0x556]
Successors: [0x585]
---
0x55f DUP1
0x560 DUP3
0x561 ADD
0x562 MLOAD
0x563 DUP2
0x564 DUP5
0x565 ADD
0x566 MSTORE
0x567 PUSH1 0x20
0x569 DUP2
0x56a ADD
0x56b SWAP1
0x56c POP
0x56d PUSH2 0x10d
0x570 JUMP
0x571 JUMPDEST
0x572 POP
0x573 POP
0x574 POP
0x575 POP
0x576 SWAP1
0x577 POP
0x578 SWAP1
0x579 DUP2
0x57a ADD
0x57b SWAP1
0x57c PUSH1 0x1f
0x57e AND
0x57f DUP1
0x580 ISZERO
0x581 PUSH2 0x155
0x584 JUMPI
---
0x561: V288 = ADD V283 0x0
0x562: V289 = M[V288]
0x565: V290 = ADD V280 0x0
0x566: M[V290] = V289
0x567: V291 = 0x20
0x56a: V292 = ADD 0x0 0x20
0x56d: V293 = 0x10d
0x570: THROW 
0x571: JUMPDEST 
0x57a: V294 = ADD S4 S6
0x57c: V295 = 0x1f
0x57e: V296 = AND 0x1f S4
0x580: V297 = ISZERO V296
0x581: V298 = 0x155
0x584: THROWI V297
---
Entry stack: [S9, V274, V274, V280, V283, V281, V281, V280, V283, 0x0]
Stack pops: 3
Stack additions: [V296, V294]
Exit stack: []

================================

Block 0x585
[0x585:0x59d]
---
Predecessors: [0x55f]
Successors: [0x59e]
---
0x585 DUP1
0x586 DUP3
0x587 SUB
0x588 DUP1
0x589 MLOAD
0x58a PUSH1 0x1
0x58c DUP4
0x58d PUSH1 0x20
0x58f SUB
0x590 PUSH2 0x100
0x593 EXP
0x594 SUB
0x595 NOT
0x596 AND
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP2
0x59d POP
---
0x587: V299 = SUB V294 V296
0x589: V300 = M[V299]
0x58a: V301 = 0x1
0x58d: V302 = 0x20
0x58f: V303 = SUB 0x20 V296
0x590: V304 = 0x100
0x593: V305 = EXP 0x100 V303
0x594: V306 = SUB V305 0x1
0x595: V307 = NOT V306
0x596: V308 = AND V307 V300
0x598: M[V299] = V308
0x599: V309 = 0x20
0x59b: V310 = ADD 0x20 V299
---
Entry stack: [V294, V296]
Stack pops: 2
Stack additions: [V310, S0]
Exit stack: [V310, V296]

================================

Block 0x59e
[0x59e:0x5b2]
---
Predecessors: [0x585]
Successors: [0x5b3]
---
0x59e JUMPDEST
0x59f POP
0x5a0 SWAP3
0x5a1 POP
0x5a2 POP
0x5a3 POP
0x5a4 PUSH1 0x40
0x5a6 MLOAD
0x5a7 DUP1
0x5a8 SWAP2
0x5a9 SUB
0x5aa SWAP1
0x5ab RETURN
0x5ac JUMPDEST
0x5ad CALLVALUE
0x5ae ISZERO
0x5af PUSH2 0x16e
0x5b2 JUMPI
---
0x59e: JUMPDEST 
0x5a4: V311 = 0x40
0x5a6: V312 = M[0x40]
0x5a9: V313 = SUB V310 V312
0x5ab: RETURN V312 V313
0x5ac: JUMPDEST 
0x5ad: V314 = CALLVALUE
0x5ae: V315 = ISZERO V314
0x5af: V316 = 0x16e
0x5b2: THROWI V315
---
Entry stack: [V310, V296]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x5b3
[0x5b3:0x60c]
---
Predecessors: [0x59e]
Successors: [0x60d]
---
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 REVERT
0x5b7 JUMPDEST
0x5b8 PUSH2 0x1a3
0x5bb PUSH1 0x4
0x5bd DUP1
0x5be DUP1
0x5bf CALLDATALOAD
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 SWAP1
0x5d7 PUSH1 0x20
0x5d9 ADD
0x5da SWAP1
0x5db SWAP2
0x5dc SWAP1
0x5dd DUP1
0x5de CALLDATALOAD
0x5df SWAP1
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 SWAP1
0x5e4 SWAP2
0x5e5 SWAP1
0x5e6 POP
0x5e7 POP
0x5e8 PUSH2 0x583
0x5eb JUMP
0x5ec JUMPDEST
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP1
0x5f1 DUP3
0x5f2 ISZERO
0x5f3 ISZERO
0x5f4 ISZERO
0x5f5 ISZERO
0x5f6 DUP2
0x5f7 MSTORE
0x5f8 PUSH1 0x20
0x5fa ADD
0x5fb SWAP2
0x5fc POP
0x5fd POP
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 DUP1
0x602 SWAP2
0x603 SUB
0x604 SWAP1
0x605 RETURN
0x606 JUMPDEST
0x607 CALLVALUE
0x608 ISZERO
0x609 PUSH2 0x1c8
0x60c JUMPI
---
0x5b3: V317 = 0x0
0x5b6: REVERT 0x0 0x0
0x5b7: JUMPDEST 
0x5b8: V318 = 0x1a3
0x5bb: V319 = 0x4
0x5bf: V320 = CALLDATALOAD 0x4
0x5c0: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x5d7: V323 = 0x20
0x5d9: V324 = ADD 0x20 0x4
0x5de: V325 = CALLDATALOAD 0x24
0x5e0: V326 = 0x20
0x5e2: V327 = ADD 0x20 0x24
0x5e8: V328 = 0x583
0x5eb: THROW 
0x5ec: JUMPDEST 
0x5ed: V329 = 0x40
0x5ef: V330 = M[0x40]
0x5f2: V331 = ISZERO S0
0x5f3: V332 = ISZERO V331
0x5f4: V333 = ISZERO V332
0x5f5: V334 = ISZERO V333
0x5f7: M[V330] = V334
0x5f8: V335 = 0x20
0x5fa: V336 = ADD 0x20 V330
0x5fe: V337 = 0x40
0x600: V338 = M[0x40]
0x603: V339 = SUB V336 V338
0x605: RETURN V338 V339
0x606: JUMPDEST 
0x607: V340 = CALLVALUE
0x608: V341 = ISZERO V340
0x609: V342 = 0x1c8
0x60c: THROWI V341
---
Entry stack: []
Stack pops: 0
Stack additions: [V325, V322, 0x1a3]
Exit stack: []

================================

Block 0x60d
[0x60d:0x635]
---
Predecessors: [0x5b3]
Successors: [0x636]
---
0x60d PUSH1 0x0
0x60f DUP1
0x610 REVERT
0x611 JUMPDEST
0x612 PUSH2 0x1d0
0x615 PUSH2 0x675
0x618 JUMP
0x619 JUMPDEST
0x61a PUSH1 0x40
0x61c MLOAD
0x61d DUP1
0x61e DUP3
0x61f DUP2
0x620 MSTORE
0x621 PUSH1 0x20
0x623 ADD
0x624 SWAP2
0x625 POP
0x626 POP
0x627 PUSH1 0x40
0x629 MLOAD
0x62a DUP1
0x62b SWAP2
0x62c SUB
0x62d SWAP1
0x62e RETURN
0x62f JUMPDEST
0x630 CALLVALUE
0x631 ISZERO
0x632 PUSH2 0x1f1
0x635 JUMPI
---
0x60d: V343 = 0x0
0x610: REVERT 0x0 0x0
0x611: JUMPDEST 
0x612: V344 = 0x1d0
0x615: V345 = 0x675
0x618: THROW 
0x619: JUMPDEST 
0x61a: V346 = 0x40
0x61c: V347 = M[0x40]
0x620: M[V347] = S0
0x621: V348 = 0x20
0x623: V349 = ADD 0x20 V347
0x627: V350 = 0x40
0x629: V351 = M[0x40]
0x62c: V352 = SUB V349 V351
0x62e: RETURN V351 V352
0x62f: JUMPDEST 
0x630: V353 = CALLVALUE
0x631: V354 = ISZERO V353
0x632: V355 = 0x1f1
0x635: THROWI V354
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1d0]
Exit stack: []

================================

Block 0x636
[0x636:0x6ae]
---
Predecessors: [0x60d]
Successors: [0x6af]
---
0x636 PUSH1 0x0
0x638 DUP1
0x639 REVERT
0x63a JUMPDEST
0x63b PUSH2 0x245
0x63e PUSH1 0x4
0x640 DUP1
0x641 DUP1
0x642 CALLDATALOAD
0x643 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x658 AND
0x659 SWAP1
0x65a PUSH1 0x20
0x65c ADD
0x65d SWAP1
0x65e SWAP2
0x65f SWAP1
0x660 DUP1
0x661 CALLDATALOAD
0x662 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x677 AND
0x678 SWAP1
0x679 PUSH1 0x20
0x67b ADD
0x67c SWAP1
0x67d SWAP2
0x67e SWAP1
0x67f DUP1
0x680 CALLDATALOAD
0x681 SWAP1
0x682 PUSH1 0x20
0x684 ADD
0x685 SWAP1
0x686 SWAP2
0x687 SWAP1
0x688 POP
0x689 POP
0x68a PUSH2 0x6c0
0x68d JUMP
0x68e JUMPDEST
0x68f PUSH1 0x40
0x691 MLOAD
0x692 DUP1
0x693 DUP3
0x694 ISZERO
0x695 ISZERO
0x696 ISZERO
0x697 ISZERO
0x698 DUP2
0x699 MSTORE
0x69a PUSH1 0x20
0x69c ADD
0x69d SWAP2
0x69e POP
0x69f POP
0x6a0 PUSH1 0x40
0x6a2 MLOAD
0x6a3 DUP1
0x6a4 SWAP2
0x6a5 SUB
0x6a6 SWAP1
0x6a7 RETURN
0x6a8 JUMPDEST
0x6a9 CALLVALUE
0x6aa ISZERO
0x6ab PUSH2 0x26a
0x6ae JUMPI
---
0x636: V356 = 0x0
0x639: REVERT 0x0 0x0
0x63a: JUMPDEST 
0x63b: V357 = 0x245
0x63e: V358 = 0x4
0x642: V359 = CALLDATALOAD 0x4
0x643: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x658: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x65a: V362 = 0x20
0x65c: V363 = ADD 0x20 0x4
0x661: V364 = CALLDATALOAD 0x24
0x662: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x677: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x679: V367 = 0x20
0x67b: V368 = ADD 0x20 0x24
0x680: V369 = CALLDATALOAD 0x44
0x682: V370 = 0x20
0x684: V371 = ADD 0x20 0x44
0x68a: V372 = 0x6c0
0x68d: THROW 
0x68e: JUMPDEST 
0x68f: V373 = 0x40
0x691: V374 = M[0x40]
0x694: V375 = ISZERO S0
0x695: V376 = ISZERO V375
0x696: V377 = ISZERO V376
0x697: V378 = ISZERO V377
0x699: M[V374] = V378
0x69a: V379 = 0x20
0x69c: V380 = ADD 0x20 V374
0x6a0: V381 = 0x40
0x6a2: V382 = M[0x40]
0x6a5: V383 = SUB V380 V382
0x6a7: RETURN V382 V383
0x6a8: JUMPDEST 
0x6a9: V384 = CALLVALUE
0x6aa: V385 = ISZERO V384
0x6ab: V386 = 0x26a
0x6ae: THROWI V385
---
Entry stack: []
Stack pops: 0
Stack additions: [V369, V366, V361, 0x245]
Exit stack: []

================================

Block 0x6af
[0x6af:0x6d7]
---
Predecessors: [0x636]
Successors: [0x6d8]
---
0x6af PUSH1 0x0
0x6b1 DUP1
0x6b2 REVERT
0x6b3 JUMPDEST
0x6b4 PUSH2 0x272
0x6b7 PUSH2 0x96b
0x6ba JUMP
0x6bb JUMPDEST
0x6bc PUSH1 0x40
0x6be MLOAD
0x6bf DUP1
0x6c0 DUP3
0x6c1 DUP2
0x6c2 MSTORE
0x6c3 PUSH1 0x20
0x6c5 ADD
0x6c6 SWAP2
0x6c7 POP
0x6c8 POP
0x6c9 PUSH1 0x40
0x6cb MLOAD
0x6cc DUP1
0x6cd SWAP2
0x6ce SUB
0x6cf SWAP1
0x6d0 RETURN
0x6d1 JUMPDEST
0x6d2 CALLVALUE
0x6d3 ISZERO
0x6d4 PUSH2 0x293
0x6d7 JUMPI
---
0x6af: V387 = 0x0
0x6b2: REVERT 0x0 0x0
0x6b3: JUMPDEST 
0x6b4: V388 = 0x272
0x6b7: V389 = 0x96b
0x6ba: THROW 
0x6bb: JUMPDEST 
0x6bc: V390 = 0x40
0x6be: V391 = M[0x40]
0x6c2: M[V391] = S0
0x6c3: V392 = 0x20
0x6c5: V393 = ADD 0x20 V391
0x6c9: V394 = 0x40
0x6cb: V395 = M[0x40]
0x6ce: V396 = SUB V393 V395
0x6d0: RETURN V395 V396
0x6d1: JUMPDEST 
0x6d2: V397 = CALLVALUE
0x6d3: V398 = ISZERO V397
0x6d4: V399 = 0x293
0x6d7: THROWI V398
---
Entry stack: []
Stack pops: 0
Stack additions: [0x272]
Exit stack: []

================================

Block 0x6d8
[0x6d8:0x700]
---
Predecessors: [0x6af]
Successors: [0x701]
---
0x6d8 PUSH1 0x0
0x6da DUP1
0x6db REVERT
0x6dc JUMPDEST
0x6dd PUSH2 0x29b
0x6e0 PUSH2 0x970
0x6e3 JUMP
0x6e4 JUMPDEST
0x6e5 PUSH1 0x40
0x6e7 MLOAD
0x6e8 DUP1
0x6e9 DUP3
0x6ea DUP2
0x6eb MSTORE
0x6ec PUSH1 0x20
0x6ee ADD
0x6ef SWAP2
0x6f0 POP
0x6f1 POP
0x6f2 PUSH1 0x40
0x6f4 MLOAD
0x6f5 DUP1
0x6f6 SWAP2
0x6f7 SUB
0x6f8 SWAP1
0x6f9 RETURN
0x6fa JUMPDEST
0x6fb CALLVALUE
0x6fc ISZERO
0x6fd PUSH2 0x2bc
0x700 JUMPI
---
0x6d8: V400 = 0x0
0x6db: REVERT 0x0 0x0
0x6dc: JUMPDEST 
0x6dd: V401 = 0x29b
0x6e0: V402 = 0x970
0x6e3: THROW 
0x6e4: JUMPDEST 
0x6e5: V403 = 0x40
0x6e7: V404 = M[0x40]
0x6eb: M[V404] = S0
0x6ec: V405 = 0x20
0x6ee: V406 = ADD 0x20 V404
0x6f2: V407 = 0x40
0x6f4: V408 = M[0x40]
0x6f7: V409 = SUB V406 V408
0x6f9: RETURN V408 V409
0x6fa: JUMPDEST 
0x6fb: V410 = CALLVALUE
0x6fc: V411 = ISZERO V410
0x6fd: V412 = 0x2bc
0x700: THROWI V411
---
Entry stack: []
Stack pops: 0
Stack additions: [0x29b]
Exit stack: []

================================

Block 0x701
[0x701:0x74d]
---
Predecessors: [0x6d8]
Successors: [0x74e]
---
0x701 PUSH1 0x0
0x703 DUP1
0x704 REVERT
0x705 JUMPDEST
0x706 PUSH2 0x2e8
0x709 PUSH1 0x4
0x70b DUP1
0x70c DUP1
0x70d CALLDATALOAD
0x70e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x723 AND
0x724 SWAP1
0x725 PUSH1 0x20
0x727 ADD
0x728 SWAP1
0x729 SWAP2
0x72a SWAP1
0x72b POP
0x72c POP
0x72d PUSH2 0x976
0x730 JUMP
0x731 JUMPDEST
0x732 PUSH1 0x40
0x734 MLOAD
0x735 DUP1
0x736 DUP3
0x737 DUP2
0x738 MSTORE
0x739 PUSH1 0x20
0x73b ADD
0x73c SWAP2
0x73d POP
0x73e POP
0x73f PUSH1 0x40
0x741 MLOAD
0x742 DUP1
0x743 SWAP2
0x744 SUB
0x745 SWAP1
0x746 RETURN
0x747 JUMPDEST
0x748 CALLVALUE
0x749 ISZERO
0x74a PUSH2 0x309
0x74d JUMPI
---
0x701: V413 = 0x0
0x704: REVERT 0x0 0x0
0x705: JUMPDEST 
0x706: V414 = 0x2e8
0x709: V415 = 0x4
0x70d: V416 = CALLDATALOAD 0x4
0x70e: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x723: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x725: V419 = 0x20
0x727: V420 = ADD 0x20 0x4
0x72d: V421 = 0x976
0x730: THROW 
0x731: JUMPDEST 
0x732: V422 = 0x40
0x734: V423 = M[0x40]
0x738: M[V423] = S0
0x739: V424 = 0x20
0x73b: V425 = ADD 0x20 V423
0x73f: V426 = 0x40
0x741: V427 = M[0x40]
0x744: V428 = SUB V425 V427
0x746: RETURN V427 V428
0x747: JUMPDEST 
0x748: V429 = CALLVALUE
0x749: V430 = ISZERO V429
0x74a: V431 = 0x309
0x74d: THROWI V430
---
Entry stack: []
Stack pops: 0
Stack additions: [V418, 0x2e8]
Exit stack: []

================================

Block 0x74e
[0x74e:0x762]
---
Predecessors: [0x701]
Successors: [0x763]
---
0x74e PUSH1 0x0
0x750 DUP1
0x751 REVERT
0x752 JUMPDEST
0x753 PUSH2 0x311
0x756 PUSH2 0x9bf
0x759 JUMP
0x75a JUMPDEST
0x75b STOP
0x75c JUMPDEST
0x75d CALLVALUE
0x75e ISZERO
0x75f PUSH2 0x31e
0x762 JUMPI
---
0x74e: V432 = 0x0
0x751: REVERT 0x0 0x0
0x752: JUMPDEST 
0x753: V433 = 0x311
0x756: V434 = 0x9bf
0x759: THROW 
0x75a: JUMPDEST 
0x75b: STOP 
0x75c: JUMPDEST 
0x75d: V435 = CALLVALUE
0x75e: V436 = ISZERO V435
0x75f: V437 = 0x31e
0x762: THROWI V436
---
Entry stack: []
Stack pops: 0
Stack additions: [0x311]
Exit stack: []

================================

Block 0x763
[0x763:0x7b7]
---
Predecessors: [0x74e]
Successors: [0x7b8]
---
0x763 PUSH1 0x0
0x765 DUP1
0x766 REVERT
0x767 JUMPDEST
0x768 PUSH2 0x326
0x76b PUSH2 0xb5e
0x76e JUMP
0x76f JUMPDEST
0x770 PUSH1 0x40
0x772 MLOAD
0x773 DUP1
0x774 DUP3
0x775 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78a AND
0x78b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a0 AND
0x7a1 DUP2
0x7a2 MSTORE
0x7a3 PUSH1 0x20
0x7a5 ADD
0x7a6 SWAP2
0x7a7 POP
0x7a8 POP
0x7a9 PUSH1 0x40
0x7ab MLOAD
0x7ac DUP1
0x7ad SWAP2
0x7ae SUB
0x7af SWAP1
0x7b0 RETURN
0x7b1 JUMPDEST
0x7b2 CALLVALUE
0x7b3 ISZERO
0x7b4 PUSH2 0x373
0x7b7 JUMPI
---
0x763: V438 = 0x0
0x766: REVERT 0x0 0x0
0x767: JUMPDEST 
0x768: V439 = 0x326
0x76b: V440 = 0xb5e
0x76e: THROW 
0x76f: JUMPDEST 
0x770: V441 = 0x40
0x772: V442 = M[0x40]
0x775: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x78b: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a0: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x7a2: M[V442] = V446
0x7a3: V447 = 0x20
0x7a5: V448 = ADD 0x20 V442
0x7a9: V449 = 0x40
0x7ab: V450 = M[0x40]
0x7ae: V451 = SUB V448 V450
0x7b0: RETURN V450 V451
0x7b1: JUMPDEST 
0x7b2: V452 = CALLVALUE
0x7b3: V453 = ISZERO V452
0x7b4: V454 = 0x373
0x7b7: THROWI V453
---
Entry stack: []
Stack pops: 0
Stack additions: [0x326]
Exit stack: []

================================

Block 0x7b8
[0x7b8:0x7e8]
---
Predecessors: [0x763]
Successors: [0x7e9]
---
0x7b8 PUSH1 0x0
0x7ba DUP1
0x7bb REVERT
0x7bc JUMPDEST
0x7bd PUSH2 0x37b
0x7c0 PUSH2 0xb83
0x7c3 JUMP
0x7c4 JUMPDEST
0x7c5 PUSH1 0x40
0x7c7 MLOAD
0x7c8 DUP1
0x7c9 DUP1
0x7ca PUSH1 0x20
0x7cc ADD
0x7cd DUP3
0x7ce DUP2
0x7cf SUB
0x7d0 DUP3
0x7d1 MSTORE
0x7d2 DUP4
0x7d3 DUP2
0x7d4 DUP2
0x7d5 MLOAD
0x7d6 DUP2
0x7d7 MSTORE
0x7d8 PUSH1 0x20
0x7da ADD
0x7db SWAP2
0x7dc POP
0x7dd DUP1
0x7de MLOAD
0x7df SWAP1
0x7e0 PUSH1 0x20
0x7e2 ADD
0x7e3 SWAP1
0x7e4 DUP1
0x7e5 DUP4
0x7e6 DUP4
0x7e7 PUSH1 0x0
---
0x7b8: V455 = 0x0
0x7bb: REVERT 0x0 0x0
0x7bc: JUMPDEST 
0x7bd: V456 = 0x37b
0x7c0: V457 = 0xb83
0x7c3: THROW 
0x7c4: JUMPDEST 
0x7c5: V458 = 0x40
0x7c7: V459 = M[0x40]
0x7ca: V460 = 0x20
0x7cc: V461 = ADD 0x20 V459
0x7cf: V462 = SUB V461 V459
0x7d1: M[V459] = V462
0x7d5: V463 = M[S0]
0x7d7: M[V461] = V463
0x7d8: V464 = 0x20
0x7da: V465 = ADD 0x20 V461
0x7de: V466 = M[S0]
0x7e0: V467 = 0x20
0x7e2: V468 = ADD 0x20 S0
0x7e7: V469 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x37b, 0x0, V468, V465, V466, V466, V468, V465, V459, V459, S0]
Exit stack: []

================================

Block 0x7e9
[0x7e9:0x7f1]
---
Predecessors: [0x7b8]
Successors: [0x7f2]
---
0x7e9 JUMPDEST
0x7ea DUP4
0x7eb DUP2
0x7ec LT
0x7ed ISZERO
0x7ee PUSH2 0x3bb
0x7f1 JUMPI
---
0x7e9: JUMPDEST 
0x7ec: V470 = LT 0x0 V466
0x7ed: V471 = ISZERO V470
0x7ee: V472 = 0x3bb
0x7f1: THROWI V471
---
Entry stack: [S9, V459, V459, V465, V468, V466, V466, V465, V468, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V459, V459, V465, V468, V466, V466, V465, V468, 0x0]

================================

Block 0x7f2
[0x7f2:0x817]
---
Predecessors: [0x7e9]
Successors: [0x818]
---
0x7f2 DUP1
0x7f3 DUP3
0x7f4 ADD
0x7f5 MLOAD
0x7f6 DUP2
0x7f7 DUP5
0x7f8 ADD
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc DUP2
0x7fd ADD
0x7fe SWAP1
0x7ff POP
0x800 PUSH2 0x3a0
0x803 JUMP
0x804 JUMPDEST
0x805 POP
0x806 POP
0x807 POP
0x808 POP
0x809 SWAP1
0x80a POP
0x80b SWAP1
0x80c DUP2
0x80d ADD
0x80e SWAP1
0x80f PUSH1 0x1f
0x811 AND
0x812 DUP1
0x813 ISZERO
0x814 PUSH2 0x3e8
0x817 JUMPI
---
0x7f4: V473 = ADD V468 0x0
0x7f5: V474 = M[V473]
0x7f8: V475 = ADD V465 0x0
0x7f9: M[V475] = V474
0x7fa: V476 = 0x20
0x7fd: V477 = ADD 0x0 0x20
0x800: V478 = 0x3a0
0x803: THROW 
0x804: JUMPDEST 
0x80d: V479 = ADD S4 S6
0x80f: V480 = 0x1f
0x811: V481 = AND 0x1f S4
0x813: V482 = ISZERO V481
0x814: V483 = 0x3e8
0x817: THROWI V482
---
Entry stack: [S9, V459, V459, V465, V468, V466, V466, V465, V468, 0x0]
Stack pops: 3
Stack additions: [V481, V479]
Exit stack: []

================================

Block 0x818
[0x818:0x830]
---
Predecessors: [0x7f2]
Successors: [0x831]
---
0x818 DUP1
0x819 DUP3
0x81a SUB
0x81b DUP1
0x81c MLOAD
0x81d PUSH1 0x1
0x81f DUP4
0x820 PUSH1 0x20
0x822 SUB
0x823 PUSH2 0x100
0x826 EXP
0x827 SUB
0x828 NOT
0x829 AND
0x82a DUP2
0x82b MSTORE
0x82c PUSH1 0x20
0x82e ADD
0x82f SWAP2
0x830 POP
---
0x81a: V484 = SUB V479 V481
0x81c: V485 = M[V484]
0x81d: V486 = 0x1
0x820: V487 = 0x20
0x822: V488 = SUB 0x20 V481
0x823: V489 = 0x100
0x826: V490 = EXP 0x100 V488
0x827: V491 = SUB V490 0x1
0x828: V492 = NOT V491
0x829: V493 = AND V492 V485
0x82b: M[V484] = V493
0x82c: V494 = 0x20
0x82e: V495 = ADD 0x20 V484
---
Entry stack: [V479, V481]
Stack pops: 2
Stack additions: [V495, S0]
Exit stack: [V495, V481]

================================

Block 0x831
[0x831:0x845]
---
Predecessors: [0x818]
Successors: [0x846]
---
0x831 JUMPDEST
0x832 POP
0x833 SWAP3
0x834 POP
0x835 POP
0x836 POP
0x837 PUSH1 0x40
0x839 MLOAD
0x83a DUP1
0x83b SWAP2
0x83c SUB
0x83d SWAP1
0x83e RETURN
0x83f JUMPDEST
0x840 CALLVALUE
0x841 ISZERO
0x842 PUSH2 0x401
0x845 JUMPI
---
0x831: JUMPDEST 
0x837: V496 = 0x40
0x839: V497 = M[0x40]
0x83c: V498 = SUB V495 V497
0x83e: RETURN V497 V498
0x83f: JUMPDEST 
0x840: V499 = CALLVALUE
0x841: V500 = ISZERO V499
0x842: V501 = 0x401
0x845: THROWI V500
---
Entry stack: [V495, V481]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x846
[0x846:0x89f]
---
Predecessors: [0x831]
Successors: [0x8a0]
---
0x846 PUSH1 0x0
0x848 DUP1
0x849 REVERT
0x84a JUMPDEST
0x84b PUSH2 0x436
0x84e PUSH1 0x4
0x850 DUP1
0x851 DUP1
0x852 CALLDATALOAD
0x853 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x868 AND
0x869 SWAP1
0x86a PUSH1 0x20
0x86c ADD
0x86d SWAP1
0x86e SWAP2
0x86f SWAP1
0x870 DUP1
0x871 CALLDATALOAD
0x872 SWAP1
0x873 PUSH1 0x20
0x875 ADD
0x876 SWAP1
0x877 SWAP2
0x878 SWAP1
0x879 POP
0x87a POP
0x87b PUSH2 0xbbc
0x87e JUMP
0x87f JUMPDEST
0x880 PUSH1 0x40
0x882 MLOAD
0x883 DUP1
0x884 DUP3
0x885 ISZERO
0x886 ISZERO
0x887 ISZERO
0x888 ISZERO
0x889 DUP2
0x88a MSTORE
0x88b PUSH1 0x20
0x88d ADD
0x88e SWAP2
0x88f POP
0x890 POP
0x891 PUSH1 0x40
0x893 MLOAD
0x894 DUP1
0x895 SWAP2
0x896 SUB
0x897 SWAP1
0x898 RETURN
0x899 JUMPDEST
0x89a CALLVALUE
0x89b ISZERO
0x89c PUSH2 0x45b
0x89f JUMPI
---
0x846: V502 = 0x0
0x849: REVERT 0x0 0x0
0x84a: JUMPDEST 
0x84b: V503 = 0x436
0x84e: V504 = 0x4
0x852: V505 = CALLDATALOAD 0x4
0x853: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x868: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x86a: V508 = 0x20
0x86c: V509 = ADD 0x20 0x4
0x871: V510 = CALLDATALOAD 0x24
0x873: V511 = 0x20
0x875: V512 = ADD 0x20 0x24
0x87b: V513 = 0xbbc
0x87e: THROW 
0x87f: JUMPDEST 
0x880: V514 = 0x40
0x882: V515 = M[0x40]
0x885: V516 = ISZERO S0
0x886: V517 = ISZERO V516
0x887: V518 = ISZERO V517
0x888: V519 = ISZERO V518
0x88a: M[V515] = V519
0x88b: V520 = 0x20
0x88d: V521 = ADD 0x20 V515
0x891: V522 = 0x40
0x893: V523 = M[0x40]
0x896: V524 = SUB V521 V523
0x898: RETURN V523 V524
0x899: JUMPDEST 
0x89a: V525 = CALLVALUE
0x89b: V526 = ISZERO V525
0x89c: V527 = 0x45b
0x89f: THROWI V526
---
Entry stack: []
Stack pops: 0
Stack additions: [V510, V507, 0x436]
Exit stack: []

================================

Block 0x8a0
[0x8a0:0x8f4]
---
Predecessors: [0x846]
Successors: [0x8f5]
---
0x8a0 PUSH1 0x0
0x8a2 DUP1
0x8a3 REVERT
0x8a4 JUMPDEST
0x8a5 PUSH2 0x463
0x8a8 PUSH2 0xd57
0x8ab JUMP
0x8ac JUMPDEST
0x8ad PUSH1 0x40
0x8af MLOAD
0x8b0 DUP1
0x8b1 DUP3
0x8b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c7 AND
0x8c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8dd AND
0x8de DUP2
0x8df MSTORE
0x8e0 PUSH1 0x20
0x8e2 ADD
0x8e3 SWAP2
0x8e4 POP
0x8e5 POP
0x8e6 PUSH1 0x40
0x8e8 MLOAD
0x8e9 DUP1
0x8ea SWAP2
0x8eb SUB
0x8ec SWAP1
0x8ed RETURN
0x8ee JUMPDEST
0x8ef CALLVALUE
0x8f0 ISZERO
0x8f1 PUSH2 0x4b0
0x8f4 JUMPI
---
0x8a0: V528 = 0x0
0x8a3: REVERT 0x0 0x0
0x8a4: JUMPDEST 
0x8a5: V529 = 0x463
0x8a8: V530 = 0xd57
0x8ab: THROW 
0x8ac: JUMPDEST 
0x8ad: V531 = 0x40
0x8af: V532 = M[0x40]
0x8b2: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c7: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8c8: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x8dd: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x8df: M[V532] = V536
0x8e0: V537 = 0x20
0x8e2: V538 = ADD 0x20 V532
0x8e6: V539 = 0x40
0x8e8: V540 = M[0x40]
0x8eb: V541 = SUB V538 V540
0x8ed: RETURN V540 V541
0x8ee: JUMPDEST 
0x8ef: V542 = CALLVALUE
0x8f0: V543 = ISZERO V542
0x8f1: V544 = 0x4b0
0x8f4: THROWI V543
---
Entry stack: []
Stack pops: 0
Stack additions: [0x463]
Exit stack: []

================================

Block 0x8f5
[0x8f5:0x960]
---
Predecessors: [0x8a0]
Successors: [0x961]
---
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 REVERT
0x8f9 JUMPDEST
0x8fa PUSH2 0x4fb
0x8fd PUSH1 0x4
0x8ff DUP1
0x900 DUP1
0x901 CALLDATALOAD
0x902 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x917 AND
0x918 SWAP1
0x919 PUSH1 0x20
0x91b ADD
0x91c SWAP1
0x91d SWAP2
0x91e SWAP1
0x91f DUP1
0x920 CALLDATALOAD
0x921 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x936 AND
0x937 SWAP1
0x938 PUSH1 0x20
0x93a ADD
0x93b SWAP1
0x93c SWAP2
0x93d SWAP1
0x93e POP
0x93f POP
0x940 PUSH2 0xd7d
0x943 JUMP
0x944 JUMPDEST
0x945 PUSH1 0x40
0x947 MLOAD
0x948 DUP1
0x949 DUP3
0x94a DUP2
0x94b MSTORE
0x94c PUSH1 0x20
0x94e ADD
0x94f SWAP2
0x950 POP
0x951 POP
0x952 PUSH1 0x40
0x954 MLOAD
0x955 DUP1
0x956 SWAP2
0x957 SUB
0x958 SWAP1
0x959 RETURN
0x95a JUMPDEST
0x95b CALLVALUE
0x95c ISZERO
0x95d PUSH2 0x51c
0x960 JUMPI
---
0x8f5: V545 = 0x0
0x8f8: REVERT 0x0 0x0
0x8f9: JUMPDEST 
0x8fa: V546 = 0x4fb
0x8fd: V547 = 0x4
0x901: V548 = CALLDATALOAD 0x4
0x902: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x917: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x919: V551 = 0x20
0x91b: V552 = ADD 0x20 0x4
0x920: V553 = CALLDATALOAD 0x24
0x921: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x936: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x938: V556 = 0x20
0x93a: V557 = ADD 0x20 0x24
0x940: V558 = 0xd7d
0x943: THROW 
0x944: JUMPDEST 
0x945: V559 = 0x40
0x947: V560 = M[0x40]
0x94b: M[V560] = S0
0x94c: V561 = 0x20
0x94e: V562 = ADD 0x20 V560
0x952: V563 = 0x40
0x954: V564 = M[0x40]
0x957: V565 = SUB V562 V564
0x959: RETURN V564 V565
0x95a: JUMPDEST 
0x95b: V566 = CALLVALUE
0x95c: V567 = ISZERO V566
0x95d: V568 = 0x51c
0x960: THROWI V567
---
Entry stack: []
Stack pops: 0
Stack additions: [V555, V550, 0x4fb]
Exit stack: []

================================

Block 0x961
[0x961:0xe5f]
---
Predecessors: [0x8f5]
Successors: [0xe60]
---
0x961 PUSH1 0x0
0x963 DUP1
0x964 REVERT
0x965 JUMPDEST
0x966 PUSH2 0x548
0x969 PUSH1 0x4
0x96b DUP1
0x96c DUP1
0x96d CALLDATALOAD
0x96e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x983 AND
0x984 SWAP1
0x985 PUSH1 0x20
0x987 ADD
0x988 SWAP1
0x989 SWAP2
0x98a SWAP1
0x98b POP
0x98c POP
0x98d PUSH2 0xe04
0x990 JUMP
0x991 JUMPDEST
0x992 STOP
0x993 JUMPDEST
0x994 PUSH1 0x40
0x996 DUP1
0x997 MLOAD
0x998 SWAP1
0x999 DUP2
0x99a ADD
0x99b PUSH1 0x40
0x99d MSTORE
0x99e DUP1
0x99f PUSH1 0x19
0x9a1 DUP2
0x9a2 MSTORE
0x9a3 PUSH1 0x20
0x9a5 ADD
0x9a6 PUSH32 0x57696c6c20596f75204265204d792056616c656e74696e653f00000000000000
0x9c7 DUP2
0x9c8 MSTORE
0x9c9 POP
0x9ca DUP2
0x9cb JUMP
0x9cc JUMPDEST
0x9cd PUSH1 0x0
0x9cf DUP2
0x9d0 PUSH1 0x4
0x9d2 PUSH1 0x0
0x9d4 CALLER
0x9d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ea AND
0x9eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa00 AND
0xa01 DUP2
0xa02 MSTORE
0xa03 PUSH1 0x20
0xa05 ADD
0xa06 SWAP1
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b ADD
0xa0c PUSH1 0x0
0xa0e SHA3
0xa0f PUSH1 0x0
0xa11 DUP6
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 AND
0xa28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3d AND
0xa3e DUP2
0xa3f MSTORE
0xa40 PUSH1 0x20
0xa42 ADD
0xa43 SWAP1
0xa44 DUP2
0xa45 MSTORE
0xa46 PUSH1 0x20
0xa48 ADD
0xa49 PUSH1 0x0
0xa4b SHA3
0xa4c DUP2
0xa4d SWAP1
0xa4e SSTORE
0xa4f POP
0xa50 DUP3
0xa51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa66 AND
0xa67 CALLER
0xa68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7d AND
0xa7e PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xa9f DUP5
0xaa0 PUSH1 0x40
0xaa2 MLOAD
0xaa3 DUP1
0xaa4 DUP3
0xaa5 DUP2
0xaa6 MSTORE
0xaa7 PUSH1 0x20
0xaa9 ADD
0xaaa SWAP2
0xaab POP
0xaac POP
0xaad PUSH1 0x40
0xaaf MLOAD
0xab0 DUP1
0xab1 SWAP2
0xab2 SUB
0xab3 SWAP1
0xab4 LOG3
0xab5 PUSH1 0x1
0xab7 SWAP1
0xab8 POP
0xab9 SWAP3
0xaba SWAP2
0xabb POP
0xabc POP
0xabd JUMP
0xabe JUMPDEST
0xabf PUSH1 0x0
0xac1 PUSH1 0x3
0xac3 PUSH1 0x0
0xac5 DUP1
0xac6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xadb AND
0xadc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf1 AND
0xaf2 DUP2
0xaf3 MSTORE
0xaf4 PUSH1 0x20
0xaf6 ADD
0xaf7 SWAP1
0xaf8 DUP2
0xaf9 MSTORE
0xafa PUSH1 0x20
0xafc ADD
0xafd PUSH1 0x0
0xaff SHA3
0xb00 SLOAD
0xb01 PUSH1 0x2
0xb03 SLOAD
0xb04 SUB
0xb05 SWAP1
0xb06 POP
0xb07 SWAP1
0xb08 JUMP
0xb09 JUMPDEST
0xb0a PUSH1 0x0
0xb0c PUSH2 0x714
0xb0f DUP3
0xb10 PUSH1 0x3
0xb12 PUSH1 0x0
0xb14 DUP8
0xb15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2a AND
0xb2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb40 AND
0xb41 DUP2
0xb42 MSTORE
0xb43 PUSH1 0x20
0xb45 ADD
0xb46 SWAP1
0xb47 DUP2
0xb48 MSTORE
0xb49 PUSH1 0x20
0xb4b ADD
0xb4c PUSH1 0x0
0xb4e SHA3
0xb4f SLOAD
0xb50 PUSH2 0xea3
0xb53 SWAP1
0xb54 SWAP2
0xb55 SWAP1
0xb56 PUSH4 0xffffffff
0xb5b AND
0xb5c JUMP
0xb5d JUMPDEST
0xb5e PUSH1 0x3
0xb60 PUSH1 0x0
0xb62 DUP7
0xb63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb78 AND
0xb79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8e AND
0xb8f DUP2
0xb90 MSTORE
0xb91 PUSH1 0x20
0xb93 ADD
0xb94 SWAP1
0xb95 DUP2
0xb96 MSTORE
0xb97 PUSH1 0x20
0xb99 ADD
0xb9a PUSH1 0x0
0xb9c SHA3
0xb9d DUP2
0xb9e SWAP1
0xb9f SSTORE
0xba0 POP
0xba1 PUSH2 0x7e6
0xba4 DUP3
0xba5 PUSH1 0x4
0xba7 PUSH1 0x0
0xba9 DUP8
0xbaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbf AND
0xbc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd5 AND
0xbd6 DUP2
0xbd7 MSTORE
0xbd8 PUSH1 0x20
0xbda ADD
0xbdb SWAP1
0xbdc DUP2
0xbdd MSTORE
0xbde PUSH1 0x20
0xbe0 ADD
0xbe1 PUSH1 0x0
0xbe3 SHA3
0xbe4 PUSH1 0x0
0xbe6 CALLER
0xbe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfc AND
0xbfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc12 AND
0xc13 DUP2
0xc14 MSTORE
0xc15 PUSH1 0x20
0xc17 ADD
0xc18 SWAP1
0xc19 DUP2
0xc1a MSTORE
0xc1b PUSH1 0x20
0xc1d ADD
0xc1e PUSH1 0x0
0xc20 SHA3
0xc21 SLOAD
0xc22 PUSH2 0xea3
0xc25 SWAP1
0xc26 SWAP2
0xc27 SWAP1
0xc28 PUSH4 0xffffffff
0xc2d AND
0xc2e JUMP
0xc2f JUMPDEST
0xc30 PUSH1 0x4
0xc32 PUSH1 0x0
0xc34 DUP7
0xc35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4a AND
0xc4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc60 AND
0xc61 DUP2
0xc62 MSTORE
0xc63 PUSH1 0x20
0xc65 ADD
0xc66 SWAP1
0xc67 DUP2
0xc68 MSTORE
0xc69 PUSH1 0x20
0xc6b ADD
0xc6c PUSH1 0x0
0xc6e SHA3
0xc6f PUSH1 0x0
0xc71 CALLER
0xc72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc87 AND
0xc88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9d AND
0xc9e DUP2
0xc9f MSTORE
0xca0 PUSH1 0x20
0xca2 ADD
0xca3 SWAP1
0xca4 DUP2
0xca5 MSTORE
0xca6 PUSH1 0x20
0xca8 ADD
0xca9 PUSH1 0x0
0xcab SHA3
0xcac DUP2
0xcad SWAP1
0xcae SSTORE
0xcaf POP
0xcb0 PUSH2 0x8b8
0xcb3 DUP3
0xcb4 PUSH1 0x3
0xcb6 PUSH1 0x0
0xcb8 DUP7
0xcb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcce AND
0xccf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce4 AND
0xce5 DUP2
0xce6 MSTORE
0xce7 PUSH1 0x20
0xce9 ADD
0xcea SWAP1
0xceb DUP2
0xcec MSTORE
0xced PUSH1 0x20
0xcef ADD
0xcf0 PUSH1 0x0
0xcf2 SHA3
0xcf3 SLOAD
0xcf4 PUSH2 0xebf
0xcf7 SWAP1
0xcf8 SWAP2
0xcf9 SWAP1
0xcfa PUSH4 0xffffffff
0xcff AND
0xd00 JUMP
0xd01 JUMPDEST
0xd02 PUSH1 0x3
0xd04 PUSH1 0x0
0xd06 DUP6
0xd07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1c AND
0xd1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd32 AND
0xd33 DUP2
0xd34 MSTORE
0xd35 PUSH1 0x20
0xd37 ADD
0xd38 SWAP1
0xd39 DUP2
0xd3a MSTORE
0xd3b PUSH1 0x20
0xd3d ADD
0xd3e PUSH1 0x0
0xd40 SHA3
0xd41 DUP2
0xd42 SWAP1
0xd43 SSTORE
0xd44 POP
0xd45 DUP3
0xd46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5b AND
0xd5c DUP5
0xd5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd72 AND
0xd73 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd94 DUP5
0xd95 PUSH1 0x40
0xd97 MLOAD
0xd98 DUP1
0xd99 DUP3
0xd9a DUP2
0xd9b MSTORE
0xd9c PUSH1 0x20
0xd9e ADD
0xd9f SWAP2
0xda0 POP
0xda1 POP
0xda2 PUSH1 0x40
0xda4 MLOAD
0xda5 DUP1
0xda6 SWAP2
0xda7 SUB
0xda8 SWAP1
0xda9 LOG3
0xdaa PUSH1 0x1
0xdac SWAP1
0xdad POP
0xdae SWAP4
0xdaf SWAP3
0xdb0 POP
0xdb1 POP
0xdb2 POP
0xdb3 JUMP
0xdb4 JUMPDEST
0xdb5 PUSH1 0x12
0xdb7 DUP2
0xdb8 JUMP
0xdb9 JUMPDEST
0xdba PUSH1 0x2
0xdbc SLOAD
0xdbd DUP2
0xdbe JUMP
0xdbf JUMPDEST
0xdc0 PUSH1 0x0
0xdc2 PUSH1 0x3
0xdc4 PUSH1 0x0
0xdc6 DUP4
0xdc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xddc AND
0xddd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf2 AND
0xdf3 DUP2
0xdf4 MSTORE
0xdf5 PUSH1 0x20
0xdf7 ADD
0xdf8 SWAP1
0xdf9 DUP2
0xdfa MSTORE
0xdfb PUSH1 0x20
0xdfd ADD
0xdfe PUSH1 0x0
0xe00 SHA3
0xe01 SLOAD
0xe02 SWAP1
0xe03 POP
0xe04 SWAP2
0xe05 SWAP1
0xe06 POP
0xe07 JUMP
0xe08 JUMPDEST
0xe09 PUSH1 0x1
0xe0b PUSH1 0x0
0xe0d SWAP1
0xe0e SLOAD
0xe0f SWAP1
0xe10 PUSH2 0x100
0xe13 EXP
0xe14 SWAP1
0xe15 DIV
0xe16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2b AND
0xe2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe41 AND
0xe42 CALLER
0xe43 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe58 AND
0xe59 EQ
0xe5a ISZERO
0xe5b ISZERO
0xe5c PUSH2 0xa1b
0xe5f JUMPI
---
0x961: V569 = 0x0
0x964: REVERT 0x0 0x0
0x965: JUMPDEST 
0x966: V570 = 0x548
0x969: V571 = 0x4
0x96d: V572 = CALLDATALOAD 0x4
0x96e: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0x983: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x985: V575 = 0x20
0x987: V576 = ADD 0x20 0x4
0x98d: V577 = 0xe04
0x990: THROW 
0x991: JUMPDEST 
0x992: STOP 
0x993: JUMPDEST 
0x994: V578 = 0x40
0x997: V579 = M[0x40]
0x99a: V580 = ADD V579 0x40
0x99b: V581 = 0x40
0x99d: M[0x40] = V580
0x99f: V582 = 0x19
0x9a2: M[V579] = 0x19
0x9a3: V583 = 0x20
0x9a5: V584 = ADD 0x20 V579
0x9a6: V585 = 0x57696c6c20596f75204265204d792056616c656e74696e653f00000000000000
0x9c8: M[V584] = 0x57696c6c20596f75204265204d792056616c656e74696e653f00000000000000
0x9cb: JUMP S0
0x9cc: JUMPDEST 
0x9cd: V586 = 0x0
0x9d0: V587 = 0x4
0x9d2: V588 = 0x0
0x9d4: V589 = CALLER
0x9d5: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ea: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x9eb: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0xa02: M[0x0] = V593
0xa03: V594 = 0x20
0xa05: V595 = ADD 0x20 0x0
0xa08: M[0x20] = 0x4
0xa09: V596 = 0x20
0xa0b: V597 = ADD 0x20 0x20
0xa0c: V598 = 0x0
0xa0e: V599 = SHA3 0x0 0x40
0xa0f: V600 = 0x0
0xa12: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa28: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xa3f: M[0x0] = V604
0xa40: V605 = 0x20
0xa42: V606 = ADD 0x20 0x0
0xa45: M[0x20] = V599
0xa46: V607 = 0x20
0xa48: V608 = ADD 0x20 0x20
0xa49: V609 = 0x0
0xa4b: V610 = SHA3 0x0 0x40
0xa4e: S[V610] = S0
0xa51: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0xa66: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa67: V613 = CALLER
0xa68: V614 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7d: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0xa7e: V616 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xaa0: V617 = 0x40
0xaa2: V618 = M[0x40]
0xaa6: M[V618] = S0
0xaa7: V619 = 0x20
0xaa9: V620 = ADD 0x20 V618
0xaad: V621 = 0x40
0xaaf: V622 = M[0x40]
0xab2: V623 = SUB V620 V622
0xab4: LOG V622 V623 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V615 V612
0xab5: V624 = 0x1
0xabd: JUMP S2
0xabe: JUMPDEST 
0xabf: V625 = 0x0
0xac1: V626 = 0x3
0xac3: V627 = 0x0
0xac6: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xadb: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xadc: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf1: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xaf3: M[0x0] = 0x0
0xaf4: V632 = 0x20
0xaf6: V633 = ADD 0x20 0x0
0xaf9: M[0x20] = 0x3
0xafa: V634 = 0x20
0xafc: V635 = ADD 0x20 0x20
0xafd: V636 = 0x0
0xaff: V637 = SHA3 0x0 0x40
0xb00: V638 = S[V637]
0xb01: V639 = 0x2
0xb03: V640 = S[0x2]
0xb04: V641 = SUB V640 V638
0xb08: JUMP S0
0xb09: JUMPDEST 
0xb0a: V642 = 0x0
0xb0c: V643 = 0x714
0xb10: V644 = 0x3
0xb12: V645 = 0x0
0xb15: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2a: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xb2b: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0xb40: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0xb42: M[0x0] = V649
0xb43: V650 = 0x20
0xb45: V651 = ADD 0x20 0x0
0xb48: M[0x20] = 0x3
0xb49: V652 = 0x20
0xb4b: V653 = ADD 0x20 0x20
0xb4c: V654 = 0x0
0xb4e: V655 = SHA3 0x0 0x40
0xb4f: V656 = S[V655]
0xb50: V657 = 0xea3
0xb56: V658 = 0xffffffff
0xb5b: V659 = AND 0xffffffff 0xea3
0xb5c: THROW 
0xb5d: JUMPDEST 
0xb5e: V660 = 0x3
0xb60: V661 = 0x0
0xb63: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xb78: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xb79: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8e: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0xb90: M[0x0] = V665
0xb91: V666 = 0x20
0xb93: V667 = ADD 0x20 0x0
0xb96: M[0x20] = 0x3
0xb97: V668 = 0x20
0xb99: V669 = ADD 0x20 0x20
0xb9a: V670 = 0x0
0xb9c: V671 = SHA3 0x0 0x40
0xb9f: S[V671] = S0
0xba1: V672 = 0x7e6
0xba5: V673 = 0x4
0xba7: V674 = 0x0
0xbaa: V675 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbf: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xbc0: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd5: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0xbd7: M[0x0] = V678
0xbd8: V679 = 0x20
0xbda: V680 = ADD 0x20 0x0
0xbdd: M[0x20] = 0x4
0xbde: V681 = 0x20
0xbe0: V682 = ADD 0x20 0x20
0xbe1: V683 = 0x0
0xbe3: V684 = SHA3 0x0 0x40
0xbe4: V685 = 0x0
0xbe6: V686 = CALLER
0xbe7: V687 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfc: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0xbfd: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0xc12: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0xc14: M[0x0] = V690
0xc15: V691 = 0x20
0xc17: V692 = ADD 0x20 0x0
0xc1a: M[0x20] = V684
0xc1b: V693 = 0x20
0xc1d: V694 = ADD 0x20 0x20
0xc1e: V695 = 0x0
0xc20: V696 = SHA3 0x0 0x40
0xc21: V697 = S[V696]
0xc22: V698 = 0xea3
0xc28: V699 = 0xffffffff
0xc2d: V700 = AND 0xffffffff 0xea3
0xc2e: THROW 
0xc2f: JUMPDEST 
0xc30: V701 = 0x4
0xc32: V702 = 0x0
0xc35: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4a: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc4b: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xc60: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xc62: M[0x0] = V706
0xc63: V707 = 0x20
0xc65: V708 = ADD 0x20 0x0
0xc68: M[0x20] = 0x4
0xc69: V709 = 0x20
0xc6b: V710 = ADD 0x20 0x20
0xc6c: V711 = 0x0
0xc6e: V712 = SHA3 0x0 0x40
0xc6f: V713 = 0x0
0xc71: V714 = CALLER
0xc72: V715 = 0xffffffffffffffffffffffffffffffffffffffff
0xc87: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0xc88: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9d: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0xc9f: M[0x0] = V718
0xca0: V719 = 0x20
0xca2: V720 = ADD 0x20 0x0
0xca5: M[0x20] = V712
0xca6: V721 = 0x20
0xca8: V722 = ADD 0x20 0x20
0xca9: V723 = 0x0
0xcab: V724 = SHA3 0x0 0x40
0xcae: S[V724] = S0
0xcb0: V725 = 0x8b8
0xcb4: V726 = 0x3
0xcb6: V727 = 0x0
0xcb9: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xcce: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xccf: V730 = 0xffffffffffffffffffffffffffffffffffffffff
0xce4: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0xce6: M[0x0] = V731
0xce7: V732 = 0x20
0xce9: V733 = ADD 0x20 0x0
0xcec: M[0x20] = 0x3
0xced: V734 = 0x20
0xcef: V735 = ADD 0x20 0x20
0xcf0: V736 = 0x0
0xcf2: V737 = SHA3 0x0 0x40
0xcf3: V738 = S[V737]
0xcf4: V739 = 0xebf
0xcfa: V740 = 0xffffffff
0xcff: V741 = AND 0xffffffff 0xebf
0xd00: THROW 
0xd01: JUMPDEST 
0xd02: V742 = 0x3
0xd04: V743 = 0x0
0xd07: V744 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1c: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd1d: V746 = 0xffffffffffffffffffffffffffffffffffffffff
0xd32: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff V745
0xd34: M[0x0] = V747
0xd35: V748 = 0x20
0xd37: V749 = ADD 0x20 0x0
0xd3a: M[0x20] = 0x3
0xd3b: V750 = 0x20
0xd3d: V751 = ADD 0x20 0x20
0xd3e: V752 = 0x0
0xd40: V753 = SHA3 0x0 0x40
0xd43: S[V753] = S0
0xd46: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5b: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd5d: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xd72: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xd73: V758 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd95: V759 = 0x40
0xd97: V760 = M[0x40]
0xd9b: M[V760] = S2
0xd9c: V761 = 0x20
0xd9e: V762 = ADD 0x20 V760
0xda2: V763 = 0x40
0xda4: V764 = M[0x40]
0xda7: V765 = SUB V762 V764
0xda9: LOG V764 V765 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V757 V755
0xdaa: V766 = 0x1
0xdb3: JUMP S5
0xdb4: JUMPDEST 
0xdb5: V767 = 0x12
0xdb8: JUMP S0
0xdb9: JUMPDEST 
0xdba: V768 = 0x2
0xdbc: V769 = S[0x2]
0xdbe: JUMP S0
0xdbf: JUMPDEST 
0xdc0: V770 = 0x0
0xdc2: V771 = 0x3
0xdc4: V772 = 0x0
0xdc7: V773 = 0xffffffffffffffffffffffffffffffffffffffff
0xddc: V774 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xddd: V775 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf2: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff V774
0xdf4: M[0x0] = V776
0xdf5: V777 = 0x20
0xdf7: V778 = ADD 0x20 0x0
0xdfa: M[0x20] = 0x3
0xdfb: V779 = 0x20
0xdfd: V780 = ADD 0x20 0x20
0xdfe: V781 = 0x0
0xe00: V782 = SHA3 0x0 0x40
0xe01: V783 = S[V782]
0xe07: JUMP S1
0xe08: JUMPDEST 
0xe09: V784 = 0x1
0xe0b: V785 = 0x0
0xe0e: V786 = S[0x1]
0xe10: V787 = 0x100
0xe13: V788 = EXP 0x100 0x0
0xe15: V789 = DIV V786 0x1
0xe16: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2b: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V789
0xe2c: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xe41: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0xe42: V794 = CALLER
0xe43: V795 = 0xffffffffffffffffffffffffffffffffffffffff
0xe58: V796 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0xe59: V797 = EQ V796 V793
0xe5a: V798 = ISZERO V797
0xe5b: V799 = ISZERO V798
0xe5c: V800 = 0xa1b
0xe5f: THROWI V799
---
Entry stack: []
Stack pops: 0
Stack additions: [V574, 0x548, V579, S0, 0x1, V641, S0, V656, 0x714, 0x0, S0, S1, S2, S2, V697, 0x7e6, S1, S2, S3, S4, S2, V738, 0x8b8, S1, S2, S3, S4, 0x1, 0x12, S0, V769, S0, V783]
Exit stack: []

================================

Block 0xe60
[0xe60:0x12a3]
---
Predecessors: [0x961]
Successors: [0x12a4]
---
0xe60 PUSH1 0x0
0xe62 DUP1
0xe63 REVERT
0xe64 JUMPDEST
0xe65 PUSH1 0x1
0xe67 PUSH1 0x0
0xe69 SWAP1
0xe6a SLOAD
0xe6b SWAP1
0xe6c PUSH2 0x100
0xe6f EXP
0xe70 SWAP1
0xe71 DIV
0xe72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe87 AND
0xe88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9d AND
0xe9e PUSH1 0x0
0xea0 DUP1
0xea1 SWAP1
0xea2 SLOAD
0xea3 SWAP1
0xea4 PUSH2 0x100
0xea7 EXP
0xea8 SWAP1
0xea9 DIV
0xeaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xebf AND
0xec0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed5 AND
0xed6 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xef7 PUSH1 0x40
0xef9 MLOAD
0xefa PUSH1 0x40
0xefc MLOAD
0xefd DUP1
0xefe SWAP2
0xeff SUB
0xf00 SWAP1
0xf01 LOG3
0xf02 PUSH1 0x1
0xf04 PUSH1 0x0
0xf06 SWAP1
0xf07 SLOAD
0xf08 SWAP1
0xf09 PUSH2 0x100
0xf0c EXP
0xf0d SWAP1
0xf0e DIV
0xf0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf24 AND
0xf25 PUSH1 0x0
0xf27 DUP1
0xf28 PUSH2 0x100
0xf2b EXP
0xf2c DUP2
0xf2d SLOAD
0xf2e DUP2
0xf2f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf44 MUL
0xf45 NOT
0xf46 AND
0xf47 SWAP1
0xf48 DUP4
0xf49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5e AND
0xf5f MUL
0xf60 OR
0xf61 SWAP1
0xf62 SSTORE
0xf63 POP
0xf64 PUSH1 0x0
0xf66 PUSH1 0x1
0xf68 PUSH1 0x0
0xf6a PUSH2 0x100
0xf6d EXP
0xf6e DUP2
0xf6f SLOAD
0xf70 DUP2
0xf71 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf86 MUL
0xf87 NOT
0xf88 AND
0xf89 SWAP1
0xf8a DUP4
0xf8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa0 AND
0xfa1 MUL
0xfa2 OR
0xfa3 SWAP1
0xfa4 SSTORE
0xfa5 POP
0xfa6 JUMP
0xfa7 JUMPDEST
0xfa8 PUSH1 0x0
0xfaa DUP1
0xfab SWAP1
0xfac SLOAD
0xfad SWAP1
0xfae PUSH2 0x100
0xfb1 EXP
0xfb2 SWAP1
0xfb3 DIV
0xfb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc9 AND
0xfca DUP2
0xfcb JUMP
0xfcc JUMPDEST
0xfcd PUSH1 0x40
0xfcf DUP1
0xfd0 MLOAD
0xfd1 SWAP1
0xfd2 DUP2
0xfd3 ADD
0xfd4 PUSH1 0x40
0xfd6 MSTORE
0xfd7 DUP1
0xfd8 PUSH1 0x3
0xfda DUP2
0xfdb MSTORE
0xfdc PUSH1 0x20
0xfde ADD
0xfdf PUSH32 0x56414c0000000000000000000000000000000000000000000000000000000000
0x1000 DUP2
0x1001 MSTORE
0x1002 POP
0x1003 DUP2
0x1004 JUMP
0x1005 JUMPDEST
0x1006 PUSH1 0x0
0x1008 PUSH2 0xc10
0x100b DUP3
0x100c PUSH1 0x3
0x100e PUSH1 0x0
0x1010 CALLER
0x1011 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1026 AND
0x1027 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103c AND
0x103d DUP2
0x103e MSTORE
0x103f PUSH1 0x20
0x1041 ADD
0x1042 SWAP1
0x1043 DUP2
0x1044 MSTORE
0x1045 PUSH1 0x20
0x1047 ADD
0x1048 PUSH1 0x0
0x104a SHA3
0x104b SLOAD
0x104c PUSH2 0xea3
0x104f SWAP1
0x1050 SWAP2
0x1051 SWAP1
0x1052 PUSH4 0xffffffff
0x1057 AND
0x1058 JUMP
0x1059 JUMPDEST
0x105a PUSH1 0x3
0x105c PUSH1 0x0
0x105e CALLER
0x105f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1074 AND
0x1075 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108a AND
0x108b DUP2
0x108c MSTORE
0x108d PUSH1 0x20
0x108f ADD
0x1090 SWAP1
0x1091 DUP2
0x1092 MSTORE
0x1093 PUSH1 0x20
0x1095 ADD
0x1096 PUSH1 0x0
0x1098 SHA3
0x1099 DUP2
0x109a SWAP1
0x109b SSTORE
0x109c POP
0x109d PUSH2 0xca5
0x10a0 DUP3
0x10a1 PUSH1 0x3
0x10a3 PUSH1 0x0
0x10a5 DUP7
0x10a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10bb AND
0x10bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d1 AND
0x10d2 DUP2
0x10d3 MSTORE
0x10d4 PUSH1 0x20
0x10d6 ADD
0x10d7 SWAP1
0x10d8 DUP2
0x10d9 MSTORE
0x10da PUSH1 0x20
0x10dc ADD
0x10dd PUSH1 0x0
0x10df SHA3
0x10e0 SLOAD
0x10e1 PUSH2 0xebf
0x10e4 SWAP1
0x10e5 SWAP2
0x10e6 SWAP1
0x10e7 PUSH4 0xffffffff
0x10ec AND
0x10ed JUMP
0x10ee JUMPDEST
0x10ef PUSH1 0x3
0x10f1 PUSH1 0x0
0x10f3 DUP6
0x10f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1109 AND
0x110a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111f AND
0x1120 DUP2
0x1121 MSTORE
0x1122 PUSH1 0x20
0x1124 ADD
0x1125 SWAP1
0x1126 DUP2
0x1127 MSTORE
0x1128 PUSH1 0x20
0x112a ADD
0x112b PUSH1 0x0
0x112d SHA3
0x112e DUP2
0x112f SWAP1
0x1130 SSTORE
0x1131 POP
0x1132 DUP3
0x1133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1148 AND
0x1149 CALLER
0x114a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115f AND
0x1160 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1181 DUP5
0x1182 PUSH1 0x40
0x1184 MLOAD
0x1185 DUP1
0x1186 DUP3
0x1187 DUP2
0x1188 MSTORE
0x1189 PUSH1 0x20
0x118b ADD
0x118c SWAP2
0x118d POP
0x118e POP
0x118f PUSH1 0x40
0x1191 MLOAD
0x1192 DUP1
0x1193 SWAP2
0x1194 SUB
0x1195 SWAP1
0x1196 LOG3
0x1197 PUSH1 0x1
0x1199 SWAP1
0x119a POP
0x119b SWAP3
0x119c SWAP2
0x119d POP
0x119e POP
0x119f JUMP
0x11a0 JUMPDEST
0x11a1 PUSH1 0x1
0x11a3 PUSH1 0x0
0x11a5 SWAP1
0x11a6 SLOAD
0x11a7 SWAP1
0x11a8 PUSH2 0x100
0x11ab EXP
0x11ac SWAP1
0x11ad DIV
0x11ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11c3 AND
0x11c4 DUP2
0x11c5 JUMP
0x11c6 JUMPDEST
0x11c7 PUSH1 0x0
0x11c9 PUSH1 0x4
0x11cb PUSH1 0x0
0x11cd DUP5
0x11ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e3 AND
0x11e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f9 AND
0x11fa DUP2
0x11fb MSTORE
0x11fc PUSH1 0x20
0x11fe ADD
0x11ff SWAP1
0x1200 DUP2
0x1201 MSTORE
0x1202 PUSH1 0x20
0x1204 ADD
0x1205 PUSH1 0x0
0x1207 SHA3
0x1208 PUSH1 0x0
0x120a DUP4
0x120b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1220 AND
0x1221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1236 AND
0x1237 DUP2
0x1238 MSTORE
0x1239 PUSH1 0x20
0x123b ADD
0x123c SWAP1
0x123d DUP2
0x123e MSTORE
0x123f PUSH1 0x20
0x1241 ADD
0x1242 PUSH1 0x0
0x1244 SHA3
0x1245 SLOAD
0x1246 SWAP1
0x1247 POP
0x1248 SWAP3
0x1249 SWAP2
0x124a POP
0x124b POP
0x124c JUMP
0x124d JUMPDEST
0x124e PUSH1 0x0
0x1250 DUP1
0x1251 SWAP1
0x1252 SLOAD
0x1253 SWAP1
0x1254 PUSH2 0x100
0x1257 EXP
0x1258 SWAP1
0x1259 DIV
0x125a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126f AND
0x1270 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1285 AND
0x1286 CALLER
0x1287 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129c AND
0x129d EQ
0x129e ISZERO
0x129f ISZERO
0x12a0 PUSH2 0xe5f
0x12a3 JUMPI
---
0xe60: V801 = 0x0
0xe63: REVERT 0x0 0x0
0xe64: JUMPDEST 
0xe65: V802 = 0x1
0xe67: V803 = 0x0
0xe6a: V804 = S[0x1]
0xe6c: V805 = 0x100
0xe6f: V806 = EXP 0x100 0x0
0xe71: V807 = DIV V804 0x1
0xe72: V808 = 0xffffffffffffffffffffffffffffffffffffffff
0xe87: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0xe88: V810 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9d: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V809
0xe9e: V812 = 0x0
0xea2: V813 = S[0x0]
0xea4: V814 = 0x100
0xea7: V815 = EXP 0x100 0x0
0xea9: V816 = DIV V813 0x1
0xeaa: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xebf: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xec0: V819 = 0xffffffffffffffffffffffffffffffffffffffff
0xed5: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0xed6: V821 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xef7: V822 = 0x40
0xef9: V823 = M[0x40]
0xefa: V824 = 0x40
0xefc: V825 = M[0x40]
0xeff: V826 = SUB V823 V825
0xf01: LOG V825 V826 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V820 V811
0xf02: V827 = 0x1
0xf04: V828 = 0x0
0xf07: V829 = S[0x1]
0xf09: V830 = 0x100
0xf0c: V831 = EXP 0x100 0x0
0xf0e: V832 = DIV V829 0x1
0xf0f: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xf24: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xf25: V835 = 0x0
0xf28: V836 = 0x100
0xf2b: V837 = EXP 0x100 0x0
0xf2d: V838 = S[0x0]
0xf2f: V839 = 0xffffffffffffffffffffffffffffffffffffffff
0xf44: V840 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf45: V841 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf46: V842 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V838
0xf49: V843 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5e: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V834
0xf5f: V845 = MUL V844 0x1
0xf60: V846 = OR V845 V842
0xf62: S[0x0] = V846
0xf64: V847 = 0x0
0xf66: V848 = 0x1
0xf68: V849 = 0x0
0xf6a: V850 = 0x100
0xf6d: V851 = EXP 0x100 0x0
0xf6f: V852 = S[0x1]
0xf71: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xf86: V854 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf87: V855 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf88: V856 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V852
0xf8b: V857 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa0: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xfa1: V859 = MUL 0x0 0x1
0xfa2: V860 = OR 0x0 V856
0xfa4: S[0x1] = V860
0xfa6: JUMP S0
0xfa7: JUMPDEST 
0xfa8: V861 = 0x0
0xfac: V862 = S[0x0]
0xfae: V863 = 0x100
0xfb1: V864 = EXP 0x100 0x0
0xfb3: V865 = DIV V862 0x1
0xfb4: V866 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc9: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0xfcb: JUMP S0
0xfcc: JUMPDEST 
0xfcd: V868 = 0x40
0xfd0: V869 = M[0x40]
0xfd3: V870 = ADD V869 0x40
0xfd4: V871 = 0x40
0xfd6: M[0x40] = V870
0xfd8: V872 = 0x3
0xfdb: M[V869] = 0x3
0xfdc: V873 = 0x20
0xfde: V874 = ADD 0x20 V869
0xfdf: V875 = 0x56414c0000000000000000000000000000000000000000000000000000000000
0x1001: M[V874] = 0x56414c0000000000000000000000000000000000000000000000000000000000
0x1004: JUMP S0
0x1005: JUMPDEST 
0x1006: V876 = 0x0
0x1008: V877 = 0xc10
0x100c: V878 = 0x3
0x100e: V879 = 0x0
0x1010: V880 = CALLER
0x1011: V881 = 0xffffffffffffffffffffffffffffffffffffffff
0x1026: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff V880
0x1027: V883 = 0xffffffffffffffffffffffffffffffffffffffff
0x103c: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V882
0x103e: M[0x0] = V884
0x103f: V885 = 0x20
0x1041: V886 = ADD 0x20 0x0
0x1044: M[0x20] = 0x3
0x1045: V887 = 0x20
0x1047: V888 = ADD 0x20 0x20
0x1048: V889 = 0x0
0x104a: V890 = SHA3 0x0 0x40
0x104b: V891 = S[V890]
0x104c: V892 = 0xea3
0x1052: V893 = 0xffffffff
0x1057: V894 = AND 0xffffffff 0xea3
0x1058: THROW 
0x1059: JUMPDEST 
0x105a: V895 = 0x3
0x105c: V896 = 0x0
0x105e: V897 = CALLER
0x105f: V898 = 0xffffffffffffffffffffffffffffffffffffffff
0x1074: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V897
0x1075: V900 = 0xffffffffffffffffffffffffffffffffffffffff
0x108a: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V899
0x108c: M[0x0] = V901
0x108d: V902 = 0x20
0x108f: V903 = ADD 0x20 0x0
0x1092: M[0x20] = 0x3
0x1093: V904 = 0x20
0x1095: V905 = ADD 0x20 0x20
0x1096: V906 = 0x0
0x1098: V907 = SHA3 0x0 0x40
0x109b: S[V907] = S0
0x109d: V908 = 0xca5
0x10a1: V909 = 0x3
0x10a3: V910 = 0x0
0x10a6: V911 = 0xffffffffffffffffffffffffffffffffffffffff
0x10bb: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x10bc: V913 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d1: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0x10d3: M[0x0] = V914
0x10d4: V915 = 0x20
0x10d6: V916 = ADD 0x20 0x0
0x10d9: M[0x20] = 0x3
0x10da: V917 = 0x20
0x10dc: V918 = ADD 0x20 0x20
0x10dd: V919 = 0x0
0x10df: V920 = SHA3 0x0 0x40
0x10e0: V921 = S[V920]
0x10e1: V922 = 0xebf
0x10e7: V923 = 0xffffffff
0x10ec: V924 = AND 0xffffffff 0xebf
0x10ed: THROW 
0x10ee: JUMPDEST 
0x10ef: V925 = 0x3
0x10f1: V926 = 0x0
0x10f4: V927 = 0xffffffffffffffffffffffffffffffffffffffff
0x1109: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x110a: V929 = 0xffffffffffffffffffffffffffffffffffffffff
0x111f: V930 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0x1121: M[0x0] = V930
0x1122: V931 = 0x20
0x1124: V932 = ADD 0x20 0x0
0x1127: M[0x20] = 0x3
0x1128: V933 = 0x20
0x112a: V934 = ADD 0x20 0x20
0x112b: V935 = 0x0
0x112d: V936 = SHA3 0x0 0x40
0x1130: S[V936] = S0
0x1133: V937 = 0xffffffffffffffffffffffffffffffffffffffff
0x1148: V938 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1149: V939 = CALLER
0x114a: V940 = 0xffffffffffffffffffffffffffffffffffffffff
0x115f: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff V939
0x1160: V942 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1182: V943 = 0x40
0x1184: V944 = M[0x40]
0x1188: M[V944] = S2
0x1189: V945 = 0x20
0x118b: V946 = ADD 0x20 V944
0x118f: V947 = 0x40
0x1191: V948 = M[0x40]
0x1194: V949 = SUB V946 V948
0x1196: LOG V948 V949 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V941 V938
0x1197: V950 = 0x1
0x119f: JUMP S4
0x11a0: JUMPDEST 
0x11a1: V951 = 0x1
0x11a3: V952 = 0x0
0x11a6: V953 = S[0x1]
0x11a8: V954 = 0x100
0x11ab: V955 = EXP 0x100 0x0
0x11ad: V956 = DIV V953 0x1
0x11ae: V957 = 0xffffffffffffffffffffffffffffffffffffffff
0x11c3: V958 = AND 0xffffffffffffffffffffffffffffffffffffffff V956
0x11c5: JUMP S0
0x11c6: JUMPDEST 
0x11c7: V959 = 0x0
0x11c9: V960 = 0x4
0x11cb: V961 = 0x0
0x11ce: V962 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e3: V963 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x11e4: V964 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f9: V965 = AND 0xffffffffffffffffffffffffffffffffffffffff V963
0x11fb: M[0x0] = V965
0x11fc: V966 = 0x20
0x11fe: V967 = ADD 0x20 0x0
0x1201: M[0x20] = 0x4
0x1202: V968 = 0x20
0x1204: V969 = ADD 0x20 0x20
0x1205: V970 = 0x0
0x1207: V971 = SHA3 0x0 0x40
0x1208: V972 = 0x0
0x120b: V973 = 0xffffffffffffffffffffffffffffffffffffffff
0x1220: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1221: V975 = 0xffffffffffffffffffffffffffffffffffffffff
0x1236: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff V974
0x1238: M[0x0] = V976
0x1239: V977 = 0x20
0x123b: V978 = ADD 0x20 0x0
0x123e: M[0x20] = V971
0x123f: V979 = 0x20
0x1241: V980 = ADD 0x20 0x20
0x1242: V981 = 0x0
0x1244: V982 = SHA3 0x0 0x40
0x1245: V983 = S[V982]
0x124c: JUMP S2
0x124d: JUMPDEST 
0x124e: V984 = 0x0
0x1252: V985 = S[0x0]
0x1254: V986 = 0x100
0x1257: V987 = EXP 0x100 0x0
0x1259: V988 = DIV V985 0x1
0x125a: V989 = 0xffffffffffffffffffffffffffffffffffffffff
0x126f: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0x1270: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0x1285: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0x1286: V993 = CALLER
0x1287: V994 = 0xffffffffffffffffffffffffffffffffffffffff
0x129c: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0x129d: V996 = EQ V995 V992
0x129e: V997 = ISZERO V996
0x129f: V998 = ISZERO V997
0x12a0: V999 = 0xe5f
0x12a3: THROWI V998
---
Entry stack: []
Stack pops: 0
Stack additions: [V867, S0, V869, S0, S0, V891, 0xc10, 0x0, S0, S2, V921, 0xca5, S1, S2, S3, 0x1, V958, S0, V983]
Exit stack: []

================================

Block 0x12a4
[0x12a4:0x12f8]
---
Predecessors: [0xe60]
Successors: [0x12f9]
---
0x12a4 PUSH1 0x0
0x12a6 DUP1
0x12a7 REVERT
0x12a8 JUMPDEST
0x12a9 DUP1
0x12aa PUSH1 0x1
0x12ac PUSH1 0x0
0x12ae PUSH2 0x100
0x12b1 EXP
0x12b2 DUP2
0x12b3 SLOAD
0x12b4 DUP2
0x12b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ca MUL
0x12cb NOT
0x12cc AND
0x12cd SWAP1
0x12ce DUP4
0x12cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e4 AND
0x12e5 MUL
0x12e6 OR
0x12e7 SWAP1
0x12e8 SSTORE
0x12e9 POP
0x12ea POP
0x12eb JUMP
0x12ec JUMPDEST
0x12ed PUSH1 0x0
0x12ef DUP3
0x12f0 DUP3
0x12f1 GT
0x12f2 ISZERO
0x12f3 ISZERO
0x12f4 ISZERO
0x12f5 PUSH2 0xeb4
0x12f8 JUMPI
---
0x12a4: V1000 = 0x0
0x12a7: REVERT 0x0 0x0
0x12a8: JUMPDEST 
0x12aa: V1001 = 0x1
0x12ac: V1002 = 0x0
0x12ae: V1003 = 0x100
0x12b1: V1004 = EXP 0x100 0x0
0x12b3: V1005 = S[0x1]
0x12b5: V1006 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ca: V1007 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x12cb: V1008 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x12cc: V1009 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1005
0x12cf: V1010 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e4: V1011 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12e5: V1012 = MUL V1011 0x1
0x12e6: V1013 = OR V1012 V1009
0x12e8: S[0x1] = V1013
0x12eb: JUMP S1
0x12ec: JUMPDEST 
0x12ed: V1014 = 0x0
0x12f1: V1015 = GT S0 S1
0x12f2: V1016 = ISZERO V1015
0x12f3: V1017 = ISZERO V1016
0x12f4: V1018 = ISZERO V1017
0x12f5: V1019 = 0xeb4
0x12f8: THROWI V1018
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0x12f9
[0x12f9:0x1319]
---
Predecessors: [0x12a4]
Successors: [0x131a]
---
0x12f9 PUSH1 0x0
0x12fb DUP1
0x12fc REVERT
0x12fd JUMPDEST
0x12fe DUP2
0x12ff DUP4
0x1300 SUB
0x1301 SWAP1
0x1302 POP
0x1303 SWAP3
0x1304 SWAP2
0x1305 POP
0x1306 POP
0x1307 JUMP
0x1308 JUMPDEST
0x1309 PUSH1 0x0
0x130b DUP2
0x130c DUP4
0x130d ADD
0x130e SWAP1
0x130f POP
0x1310 DUP3
0x1311 DUP2
0x1312 LT
0x1313 ISZERO
0x1314 ISZERO
0x1315 ISZERO
0x1316 PUSH2 0xed5
0x1319 JUMPI
---
0x12f9: V1020 = 0x0
0x12fc: REVERT 0x0 0x0
0x12fd: JUMPDEST 
0x1300: V1021 = SUB S2 S1
0x1307: JUMP S3
0x1308: JUMPDEST 
0x1309: V1022 = 0x0
0x130d: V1023 = ADD S1 S0
0x1312: V1024 = LT V1023 S1
0x1313: V1025 = ISZERO V1024
0x1314: V1026 = ISZERO V1025
0x1315: V1027 = ISZERO V1026
0x1316: V1028 = 0xed5
0x1319: THROWI V1027
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1021, V1023, S0, S1]
Exit stack: []

================================

Block 0x131a
[0x131a:0x1353]
---
Predecessors: [0x12f9]
Successors: []
---
0x131a PUSH1 0x0
0x131c DUP1
0x131d REVERT
0x131e JUMPDEST
0x131f SWAP3
0x1320 SWAP2
0x1321 POP
0x1322 POP
0x1323 JUMP
0x1324 STOP
0x1325 LOG1
0x1326 PUSH6 0x627a7a723058
0x132d SHA3
0x132e MISSING 0x49
0x132f JUMPDEST
0x1330 MISSING 0xf9
0x1331 MISSING 0xf8
0x1332 ADDRESS
0x1333 CALL
0x1334 MISSING 0x5d
0x1335 MISSING 0xbb
0x1336 OR
0x1337 MISSING 0xda
0x1338 MISSING 0xea
0x1339 PUSH4 0xa5ce7806
0x133e MISSING 0xc
0x133f MISSING 0xe8
0x1340 SGT
0x1341 MISSING 0xcd
0x1342 SWAP1
0x1343 BALANCE
0x1344 SSTORE
0x1345 PUSH14 0x5be110f6f54d8f5c0029
---
0x131a: V1029 = 0x0
0x131d: REVERT 0x0 0x0
0x131e: JUMPDEST 
0x1323: JUMP S3
0x1324: STOP 
0x1325: LOG S0 S1 S2
0x1326: V1030 = 0x627a7a723058
0x132d: V1031 = SHA3 0x627a7a723058 S3
0x132e: MISSING 0x49
0x132f: JUMPDEST 
0x1330: MISSING 0xf9
0x1331: MISSING 0xf8
0x1332: V1032 = ADDRESS
0x1333: V1033 = CALL V1032 S0 S1 S2 S3 S4 S5
0x1334: MISSING 0x5d
0x1335: MISSING 0xbb
0x1336: V1034 = OR S0 S1
0x1337: MISSING 0xda
0x1338: MISSING 0xea
0x1339: V1035 = 0xa5ce7806
0x133e: MISSING 0xc
0x133f: MISSING 0xe8
0x1340: V1036 = SGT S0 S1
0x1341: MISSING 0xcd
0x1343: V1037 = BALANCE S1
0x1344: S[V1037] = S0
0x1345: V1038 = 0x5be110f6f54d8f5c0029
---
Entry stack: [S2, S1, V1023]
Stack pops: 0
Stack additions: [S0, V1031, V1033, V1034, 0xa5ce7806, V1036, 0x5be110f6f54d8f5c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x79ba5097
Entry block: 0x67
Exit block: 0x7a
Body: 0x67, 0x6e, 0x72, 0x7a, 0x15f, 0x1b7, 0x1bb

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x7c
Exit block: 0x8f
Body: 0x7c, 0x83, 0x87, 0x8f, 0x2fe

Function 2:
Public function signature: 0xd4ee1d90
Entry block: 0xd1
Exit block: 0xe4
Body: 0xd1, 0xd8, 0xdc, 0xe4, 0x323

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x126
Exit block: 0x15d
Body: 0x126, 0x12d, 0x131, 0x15d, 0x349, 0x3a0, 0x3a4

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

