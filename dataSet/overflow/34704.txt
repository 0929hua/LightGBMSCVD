Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x6a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x6fdde03
0x34 EQ
0x35 PUSH2 0x6a
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x6fdde03
0x34: V9 = EQ 0x6fdde03 V7
0x35: V10 = 0x6a
0x38: JUMPI 0x6a V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xf9]
---
0x39 DUP1
0x3a PUSH4 0x313ce567
0x3f EQ
0x40 PUSH2 0xf9
0x43 JUMPI
---
0x3a: V11 = 0x313ce567
0x3f: V12 = EQ 0x313ce567 V7
0x40: V13 = 0xf9
0x43: JUMPI 0xf9 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x128]
---
0x44 DUP1
0x45 PUSH4 0x8da5cb5b
0x4a EQ
0x4b PUSH2 0x128
0x4e JUMPI
---
0x45: V14 = 0x8da5cb5b
0x4a: V15 = EQ 0x8da5cb5b V7
0x4b: V16 = 0x128
0x4e: JUMPI 0x128 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x17d]
---
0x4f DUP1
0x50 PUSH4 0x95d89b41
0x55 EQ
0x56 PUSH2 0x17d
0x59 JUMPI
---
0x50: V17 = 0x95d89b41
0x55: V18 = EQ 0x95d89b41 V7
0x56: V19 = 0x17d
0x59: JUMPI 0x17d V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x20c]
---
0x5a DUP1
0x5b PUSH4 0xa9059cbb
0x60 EQ
0x61 PUSH2 0x20c
0x64 JUMPI
---
0x5b: V20 = 0xa9059cbb
0x60: V21 = EQ 0xa9059cbb V7
0x61: V22 = 0x20c
0x64: JUMPI 0x20c V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x65
[0x65:0x69]
---
Predecessors: [0x5a]
Successors: []
---
0x65 JUMPDEST
0x66 PUSH1 0x0
0x68 DUP1
0x69 REVERT
---
0x65: JUMPDEST 
0x66: V23 = 0x0
0x69: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6a
[0x6a:0x70]
---
Predecessors: [0x0]
Successors: [0x71, 0x75]
---
0x6a JUMPDEST
0x6b CALLVALUE
0x6c ISZERO
0x6d PUSH2 0x75
0x70 JUMPI
---
0x6a: JUMPDEST 
0x6b: V24 = CALLVALUE
0x6c: V25 = ISZERO V24
0x6d: V26 = 0x75
0x70: JUMPI 0x75 V25
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x71
[0x71:0x74]
---
Predecessors: [0x6a]
Successors: []
---
0x71 PUSH1 0x0
0x73 DUP1
0x74 REVERT
---
0x71: V27 = 0x0
0x74: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x75
[0x75:0x7c]
---
Predecessors: [0x6a]
Successors: [0x266]
---
0x75 JUMPDEST
0x76 PUSH2 0x7d
0x79 PUSH2 0x266
0x7c JUMP
---
0x75: JUMPDEST 
0x76: V28 = 0x7d
0x79: V29 = 0x266
0x7c: JUMP 0x266
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V7, 0x7d]

================================

Block 0x7d
[0x7d:0xa1]
---
Predecessors: [0x266]
Successors: [0xa2]
---
0x7d JUMPDEST
0x7e PUSH1 0x40
0x80 MLOAD
0x81 DUP1
0x82 DUP1
0x83 PUSH1 0x20
0x85 ADD
0x86 DUP3
0x87 DUP2
0x88 SUB
0x89 DUP3
0x8a MSTORE
0x8b DUP4
0x8c DUP2
0x8d DUP2
0x8e MLOAD
0x8f DUP2
0x90 MSTORE
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP2
0x95 POP
0x96 DUP1
0x97 MLOAD
0x98 SWAP1
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d DUP1
0x9e DUP4
0x9f DUP4
0xa0 PUSH1 0x0
---
0x7d: JUMPDEST 
0x7e: V30 = 0x40
0x80: V31 = M[0x40]
0x83: V32 = 0x20
0x85: V33 = ADD 0x20 V31
0x88: V34 = SUB V33 V31
0x8a: M[V31] = V34
0x8e: V35 = M[V179]
0x90: M[V33] = V35
0x91: V36 = 0x20
0x93: V37 = ADD 0x20 V33
0x97: V38 = M[V179]
0x99: V39 = 0x20
0x9b: V40 = ADD 0x20 V179
0xa0: V41 = 0x0
---
Entry stack: [V7, 0x7d, V179]
Stack pops: 1
Stack additions: [S0, V31, V31, V37, V40, V38, V38, V37, V40, 0x0]
Exit stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, 0x0]

================================

Block 0xa2
[0xa2:0xaa]
---
Predecessors: [0x7d, 0xb3]
Successors: [0xab, 0xbe]
---
0xa2 JUMPDEST
0xa3 DUP4
0xa4 DUP2
0xa5 LT
0xa6 ISZERO
0xa7 PUSH2 0xbe
0xaa JUMPI
---
0xa2: JUMPDEST 
0xa5: V42 = LT S0 V38
0xa6: V43 = ISZERO V42
0xa7: V44 = 0xbe
0xaa: JUMPI 0xbe V43
---
Entry stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, S0]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0xa2]
Successors: [0xb3]
---
0xab DUP1
0xac DUP3
0xad ADD
0xae MLOAD
0xaf DUP2
0xb0 DUP5
0xb1 ADD
0xb2 MSTORE
---
0xad: V45 = ADD V40 S0
0xae: V46 = M[V45]
0xb1: V47 = ADD V37 S0
0xb2: M[V47] = V46
---
Entry stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, S0]

================================

Block 0xb3
[0xb3:0xbd]
---
Predecessors: [0xab]
Successors: [0xa2]
---
0xb3 JUMPDEST
0xb4 PUSH1 0x20
0xb6 DUP2
0xb7 ADD
0xb8 SWAP1
0xb9 POP
0xba PUSH2 0xa2
0xbd JUMP
---
0xb3: JUMPDEST 
0xb4: V48 = 0x20
0xb7: V49 = ADD S0 0x20
0xba: V50 = 0xa2
0xbd: JUMP 0xa2
---
Entry stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, S0]
Stack pops: 1
Stack additions: [V49]
Exit stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, V49]

================================

Block 0xbe
[0xbe:0xd1]
---
Predecessors: [0xa2]
Successors: [0xd2, 0xeb]
---
0xbe JUMPDEST
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 SWAP1
0xc4 POP
0xc5 SWAP1
0xc6 DUP2
0xc7 ADD
0xc8 SWAP1
0xc9 PUSH1 0x1f
0xcb AND
0xcc DUP1
0xcd ISZERO
0xce PUSH2 0xeb
0xd1 JUMPI
---
0xbe: JUMPDEST 
0xc7: V51 = ADD V38 V37
0xc9: V52 = 0x1f
0xcb: V53 = AND 0x1f V38
0xcd: V54 = ISZERO V53
0xce: V55 = 0xeb
0xd1: JUMPI 0xeb V54
---
Entry stack: [V7, 0x7d, V179, V31, V31, V37, V40, V38, V38, V37, V40, S0]
Stack pops: 7
Stack additions: [V51, V53]
Exit stack: [V7, 0x7d, V179, V31, V31, V51, V53]

================================

Block 0xd2
[0xd2:0xea]
---
Predecessors: [0xbe]
Successors: [0xeb]
---
0xd2 DUP1
0xd3 DUP3
0xd4 SUB
0xd5 DUP1
0xd6 MLOAD
0xd7 PUSH1 0x1
0xd9 DUP4
0xda PUSH1 0x20
0xdc SUB
0xdd PUSH2 0x100
0xe0 EXP
0xe1 SUB
0xe2 NOT
0xe3 AND
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP2
0xea POP
---
0xd4: V56 = SUB V51 V53
0xd6: V57 = M[V56]
0xd7: V58 = 0x1
0xda: V59 = 0x20
0xdc: V60 = SUB 0x20 V53
0xdd: V61 = 0x100
0xe0: V62 = EXP 0x100 V60
0xe1: V63 = SUB V62 0x1
0xe2: V64 = NOT V63
0xe3: V65 = AND V64 V57
0xe5: M[V56] = V65
0xe6: V66 = 0x20
0xe8: V67 = ADD 0x20 V56
---
Entry stack: [V7, 0x7d, V179, V31, V31, V51, V53]
Stack pops: 2
Stack additions: [V67, S0]
Exit stack: [V7, 0x7d, V179, V31, V31, V67, V53]

================================

Block 0xeb
[0xeb:0xf8]
---
Predecessors: [0xbe, 0xd2]
Successors: []
---
0xeb JUMPDEST
0xec POP
0xed SWAP3
0xee POP
0xef POP
0xf0 POP
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 DUP1
0xf5 SWAP2
0xf6 SUB
0xf7 SWAP1
0xf8 RETURN
---
0xeb: JUMPDEST 
0xf1: V68 = 0x40
0xf3: V69 = M[0x40]
0xf6: V70 = SUB S1 V69
0xf8: RETURN V69 V70
---
Entry stack: [V7, 0x7d, V179, V31, V31, S1, V53]
Stack pops: 5
Stack additions: []
Exit stack: [V7, 0x7d]

================================

Block 0xf9
[0xf9:0xff]
---
Predecessors: [0x39]
Successors: [0x100, 0x104]
---
0xf9 JUMPDEST
0xfa CALLVALUE
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf9: JUMPDEST 
0xfa: V71 = CALLVALUE
0xfb: V72 = ISZERO V71
0xfc: V73 = 0x104
0xff: JUMPI 0x104 V72
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf9]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V74 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0xf9]
Successors: [0x29f]
---
0x104 JUMPDEST
0x105 PUSH2 0x10c
0x108 PUSH2 0x29f
0x10b JUMP
---
0x104: JUMPDEST 
0x105: V75 = 0x10c
0x108: V76 = 0x29f
0x10b: JUMP 0x29f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V7, 0x10c]

================================

Block 0x10c
[0x10c:0x127]
---
Predecessors: [0x29f]
Successors: []
---
0x10c JUMPDEST
0x10d PUSH1 0x40
0x10f MLOAD
0x110 DUP1
0x111 DUP3
0x112 PUSH1 0xff
0x114 AND
0x115 PUSH1 0xff
0x117 AND
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP2
0x11e POP
0x11f POP
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP1
0x124 SWAP2
0x125 SUB
0x126 SWAP1
0x127 RETURN
---
0x10c: JUMPDEST 
0x10d: V77 = 0x40
0x10f: V78 = M[0x40]
0x112: V79 = 0xff
0x114: V80 = AND 0xff 0x1
0x115: V81 = 0xff
0x117: V82 = AND 0xff 0x1
0x119: M[V78] = 0x1
0x11a: V83 = 0x20
0x11c: V84 = ADD 0x20 V78
0x120: V85 = 0x40
0x122: V86 = M[0x40]
0x125: V87 = SUB V84 V86
0x127: RETURN V86 V87
---
Entry stack: [V7, 0x10c, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x10c]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x44]
Successors: [0x12f, 0x133]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V88 = CALLVALUE
0x12a: V89 = ISZERO V88
0x12b: V90 = 0x133
0x12e: JUMPI 0x133 V89
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x128]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V91 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x133
[0x133:0x13a]
---
Predecessors: [0x128]
Successors: [0x2a4]
---
0x133 JUMPDEST
0x134 PUSH2 0x13b
0x137 PUSH2 0x2a4
0x13a JUMP
---
0x133: JUMPDEST 
0x134: V92 = 0x13b
0x137: V93 = 0x2a4
0x13a: JUMP 0x2a4
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x13b]
Exit stack: [V7, 0x13b]

================================

Block 0x13b
[0x13b:0x17c]
---
Predecessors: [0x2a4]
Successors: []
---
0x13b JUMPDEST
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 DUP3
0x141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x156 AND
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 SWAP2
0x173 POP
0x174 POP
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 SWAP2
0x17a SUB
0x17b SWAP1
0x17c RETURN
---
0x13b: JUMPDEST 
0x13c: V94 = 0x40
0x13e: V95 = M[0x40]
0x141: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x156: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x157: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x16e: M[V95] = V99
0x16f: V100 = 0x20
0x171: V101 = ADD 0x20 V95
0x175: V102 = 0x40
0x177: V103 = M[0x40]
0x17a: V104 = SUB V101 V103
0x17c: RETURN V103 V104
---
Entry stack: [V7, 0x13b, V193]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x13b]

================================

Block 0x17d
[0x17d:0x183]
---
Predecessors: [0x4f]
Successors: [0x184, 0x188]
---
0x17d JUMPDEST
0x17e CALLVALUE
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17d: JUMPDEST 
0x17e: V105 = CALLVALUE
0x17f: V106 = ISZERO V105
0x180: V107 = 0x188
0x183: JUMPI 0x188 V106
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17d]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V108 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0x17d]
Successors: [0x2c9]
---
0x188 JUMPDEST
0x189 PUSH2 0x190
0x18c PUSH2 0x2c9
0x18f JUMP
---
0x188: JUMPDEST 
0x189: V109 = 0x190
0x18c: V110 = 0x2c9
0x18f: JUMP 0x2c9
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V7, 0x190]

================================

Block 0x190
[0x190:0x1b4]
---
Predecessors: [0x2c9]
Successors: [0x1b5]
---
0x190 JUMPDEST
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP1
0x196 PUSH1 0x20
0x198 ADD
0x199 DUP3
0x19a DUP2
0x19b SUB
0x19c DUP3
0x19d MSTORE
0x19e DUP4
0x19f DUP2
0x1a0 DUP2
0x1a1 MLOAD
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP2
0x1a8 POP
0x1a9 DUP1
0x1aa MLOAD
0x1ab SWAP1
0x1ac PUSH1 0x20
0x1ae ADD
0x1af SWAP1
0x1b0 DUP1
0x1b1 DUP4
0x1b2 DUP4
0x1b3 PUSH1 0x0
---
0x190: JUMPDEST 
0x191: V111 = 0x40
0x193: V112 = M[0x40]
0x196: V113 = 0x20
0x198: V114 = ADD 0x20 V112
0x19b: V115 = SUB V114 V112
0x19d: M[V112] = V115
0x1a1: V116 = M[V195]
0x1a3: M[V114] = V116
0x1a4: V117 = 0x20
0x1a6: V118 = ADD 0x20 V114
0x1aa: V119 = M[V195]
0x1ac: V120 = 0x20
0x1ae: V121 = ADD 0x20 V195
0x1b3: V122 = 0x0
---
Entry stack: [V7, 0x190, V195]
Stack pops: 1
Stack additions: [S0, V112, V112, V118, V121, V119, V119, V118, V121, 0x0]
Exit stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, 0x0]

================================

Block 0x1b5
[0x1b5:0x1bd]
---
Predecessors: [0x190, 0x1c6]
Successors: [0x1be, 0x1d1]
---
0x1b5 JUMPDEST
0x1b6 DUP4
0x1b7 DUP2
0x1b8 LT
0x1b9 ISZERO
0x1ba PUSH2 0x1d1
0x1bd JUMPI
---
0x1b5: JUMPDEST 
0x1b8: V123 = LT S0 V119
0x1b9: V124 = ISZERO V123
0x1ba: V125 = 0x1d1
0x1bd: JUMPI 0x1d1 V124
---
Entry stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, S0]

================================

Block 0x1be
[0x1be:0x1c5]
---
Predecessors: [0x1b5]
Successors: [0x1c6]
---
0x1be DUP1
0x1bf DUP3
0x1c0 ADD
0x1c1 MLOAD
0x1c2 DUP2
0x1c3 DUP5
0x1c4 ADD
0x1c5 MSTORE
---
0x1c0: V126 = ADD V121 S0
0x1c1: V127 = M[V126]
0x1c4: V128 = ADD V118 S0
0x1c5: M[V128] = V127
---
Entry stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, S0]

================================

Block 0x1c6
[0x1c6:0x1d0]
---
Predecessors: [0x1be]
Successors: [0x1b5]
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x20
0x1c9 DUP2
0x1ca ADD
0x1cb SWAP1
0x1cc POP
0x1cd PUSH2 0x1b5
0x1d0 JUMP
---
0x1c6: JUMPDEST 
0x1c7: V129 = 0x20
0x1ca: V130 = ADD S0 0x20
0x1cd: V131 = 0x1b5
0x1d0: JUMP 0x1b5
---
Entry stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, S0]
Stack pops: 1
Stack additions: [V130]
Exit stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, V130]

================================

Block 0x1d1
[0x1d1:0x1e4]
---
Predecessors: [0x1b5]
Successors: [0x1e5, 0x1fe]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 SWAP1
0x1d7 POP
0x1d8 SWAP1
0x1d9 DUP2
0x1da ADD
0x1db SWAP1
0x1dc PUSH1 0x1f
0x1de AND
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1fe
0x1e4 JUMPI
---
0x1d1: JUMPDEST 
0x1da: V132 = ADD V119 V118
0x1dc: V133 = 0x1f
0x1de: V134 = AND 0x1f V119
0x1e0: V135 = ISZERO V134
0x1e1: V136 = 0x1fe
0x1e4: JUMPI 0x1fe V135
---
Entry stack: [V7, 0x190, V195, V112, V112, V118, V121, V119, V119, V118, V121, S0]
Stack pops: 7
Stack additions: [V132, V134]
Exit stack: [V7, 0x190, V195, V112, V112, V132, V134]

================================

Block 0x1e5
[0x1e5:0x1fd]
---
Predecessors: [0x1d1]
Successors: [0x1fe]
---
0x1e5 DUP1
0x1e6 DUP3
0x1e7 SUB
0x1e8 DUP1
0x1e9 MLOAD
0x1ea PUSH1 0x1
0x1ec DUP4
0x1ed PUSH1 0x20
0x1ef SUB
0x1f0 PUSH2 0x100
0x1f3 EXP
0x1f4 SUB
0x1f5 NOT
0x1f6 AND
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP2
0x1fd POP
---
0x1e7: V137 = SUB V132 V134
0x1e9: V138 = M[V137]
0x1ea: V139 = 0x1
0x1ed: V140 = 0x20
0x1ef: V141 = SUB 0x20 V134
0x1f0: V142 = 0x100
0x1f3: V143 = EXP 0x100 V141
0x1f4: V144 = SUB V143 0x1
0x1f5: V145 = NOT V144
0x1f6: V146 = AND V145 V138
0x1f8: M[V137] = V146
0x1f9: V147 = 0x20
0x1fb: V148 = ADD 0x20 V137
---
Entry stack: [V7, 0x190, V195, V112, V112, V132, V134]
Stack pops: 2
Stack additions: [V148, S0]
Exit stack: [V7, 0x190, V195, V112, V112, V148, V134]

================================

Block 0x1fe
[0x1fe:0x20b]
---
Predecessors: [0x1d1, 0x1e5]
Successors: []
---
0x1fe JUMPDEST
0x1ff POP
0x200 SWAP3
0x201 POP
0x202 POP
0x203 POP
0x204 PUSH1 0x40
0x206 MLOAD
0x207 DUP1
0x208 SWAP2
0x209 SUB
0x20a SWAP1
0x20b RETURN
---
0x1fe: JUMPDEST 
0x204: V149 = 0x40
0x206: V150 = M[0x40]
0x209: V151 = SUB S1 V150
0x20b: RETURN V150 V151
---
Entry stack: [V7, 0x190, V195, V112, V112, S1, V134]
Stack pops: 5
Stack additions: []
Exit stack: [V7, 0x190]

================================

Block 0x20c
[0x20c:0x212]
---
Predecessors: [0x5a]
Successors: [0x213, 0x217]
---
0x20c JUMPDEST
0x20d CALLVALUE
0x20e ISZERO
0x20f PUSH2 0x217
0x212 JUMPI
---
0x20c: JUMPDEST 
0x20d: V152 = CALLVALUE
0x20e: V153 = ISZERO V152
0x20f: V154 = 0x217
0x212: JUMPI 0x217 V153
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x213
[0x213:0x216]
---
Predecessors: [0x20c]
Successors: []
---
0x213 PUSH1 0x0
0x215 DUP1
0x216 REVERT
---
0x213: V155 = 0x0
0x216: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x217
[0x217:0x24b]
---
Predecessors: [0x20c]
Successors: [0x302]
---
0x217 JUMPDEST
0x218 PUSH2 0x24c
0x21b PUSH1 0x4
0x21d DUP1
0x21e DUP1
0x21f CALLDATALOAD
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 SWAP1
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b SWAP2
0x23c SWAP1
0x23d DUP1
0x23e CALLDATALOAD
0x23f SWAP1
0x240 PUSH1 0x20
0x242 ADD
0x243 SWAP1
0x244 SWAP2
0x245 SWAP1
0x246 POP
0x247 POP
0x248 PUSH2 0x302
0x24b JUMP
---
0x217: JUMPDEST 
0x218: V156 = 0x24c
0x21b: V157 = 0x4
0x21f: V158 = CALLDATALOAD 0x4
0x220: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x237: V161 = 0x20
0x239: V162 = ADD 0x20 0x4
0x23e: V163 = CALLDATALOAD 0x24
0x240: V164 = 0x20
0x242: V165 = ADD 0x20 0x24
0x248: V166 = 0x302
0x24b: JUMP 0x302
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x24c, V160, V163]
Exit stack: [V7, 0x24c, V160, V163]

================================

Block 0x24c
[0x24c:0x265]
---
Predecessors: [0x46a]
Successors: []
---
0x24c JUMPDEST
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP1
0x251 DUP3
0x252 ISZERO
0x253 ISZERO
0x254 ISZERO
0x255 ISZERO
0x256 DUP2
0x257 MSTORE
0x258 PUSH1 0x20
0x25a ADD
0x25b SWAP2
0x25c POP
0x25d POP
0x25e PUSH1 0x40
0x260 MLOAD
0x261 DUP1
0x262 SWAP2
0x263 SUB
0x264 SWAP1
0x265 RETURN
---
0x24c: JUMPDEST 
0x24d: V167 = 0x40
0x24f: V168 = M[0x40]
0x252: V169 = ISZERO {0x0, 0x1}
0x253: V170 = ISZERO V169
0x254: V171 = ISZERO V170
0x255: V172 = ISZERO V171
0x257: M[V168] = V172
0x258: V173 = 0x20
0x25a: V174 = ADD 0x20 V168
0x25e: V175 = 0x40
0x260: V176 = M[0x40]
0x263: V177 = SUB V174 V176
0x265: RETURN V176 V177
---
Entry stack: [V7, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x266
[0x266:0x29e]
---
Predecessors: [0x75]
Successors: [0x7d]
---
0x266 JUMPDEST
0x267 PUSH1 0x40
0x269 DUP1
0x26a MLOAD
0x26b SWAP1
0x26c DUP2
0x26d ADD
0x26e PUSH1 0x40
0x270 MSTORE
0x271 DUP1
0x272 PUSH1 0x7
0x274 DUP2
0x275 MSTORE
0x276 PUSH1 0x20
0x278 ADD
0x279 PUSH32 0x5341554241455200000000000000000000000000000000000000000000000000
0x29a DUP2
0x29b MSTORE
0x29c POP
0x29d DUP2
0x29e JUMP
---
0x266: JUMPDEST 
0x267: V178 = 0x40
0x26a: V179 = M[0x40]
0x26d: V180 = ADD V179 0x40
0x26e: V181 = 0x40
0x270: M[0x40] = V180
0x272: V182 = 0x7
0x275: M[V179] = 0x7
0x276: V183 = 0x20
0x278: V184 = ADD 0x20 V179
0x279: V185 = 0x5341554241455200000000000000000000000000000000000000000000000000
0x29b: M[V184] = 0x5341554241455200000000000000000000000000000000000000000000000000
0x29e: JUMP 0x7d
---
Entry stack: [V7, 0x7d]
Stack pops: 1
Stack additions: [S0, V179]
Exit stack: [V7, 0x7d, V179]

================================

Block 0x29f
[0x29f:0x2a3]
---
Predecessors: [0x104]
Successors: [0x10c]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x1
0x2a2 DUP2
0x2a3 JUMP
---
0x29f: JUMPDEST 
0x2a0: V186 = 0x1
0x2a3: JUMP 0x10c
---
Entry stack: [V7, 0x10c]
Stack pops: 1
Stack additions: [S0, 0x1]
Exit stack: [V7, 0x10c, 0x1]

================================

Block 0x2a4
[0x2a4:0x2c8]
---
Predecessors: [0x133]
Successors: [0x13b]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 SWAP1
0x2a9 SLOAD
0x2aa SWAP1
0x2ab PUSH2 0x100
0x2ae EXP
0x2af SWAP1
0x2b0 DIV
0x2b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c6 AND
0x2c7 DUP2
0x2c8 JUMP
---
0x2a4: JUMPDEST 
0x2a5: V187 = 0x0
0x2a9: V188 = S[0x0]
0x2ab: V189 = 0x100
0x2ae: V190 = EXP 0x100 0x0
0x2b0: V191 = DIV V188 0x1
0x2b1: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x2c8: JUMP 0x13b
---
Entry stack: [V7, 0x13b]
Stack pops: 1
Stack additions: [S0, V193]
Exit stack: [V7, 0x13b, V193]

================================

Block 0x2c9
[0x2c9:0x301]
---
Predecessors: [0x188]
Successors: [0x190]
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x40
0x2cc DUP1
0x2cd MLOAD
0x2ce SWAP1
0x2cf DUP2
0x2d0 ADD
0x2d1 PUSH1 0x40
0x2d3 MSTORE
0x2d4 DUP1
0x2d5 PUSH1 0x7
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc PUSH32 0x5341554241455200000000000000000000000000000000000000000000000000
0x2fd DUP2
0x2fe MSTORE
0x2ff POP
0x300 DUP2
0x301 JUMP
---
0x2c9: JUMPDEST 
0x2ca: V194 = 0x40
0x2cd: V195 = M[0x40]
0x2d0: V196 = ADD V195 0x40
0x2d1: V197 = 0x40
0x2d3: M[0x40] = V196
0x2d5: V198 = 0x7
0x2d8: M[V195] = 0x7
0x2d9: V199 = 0x20
0x2db: V200 = ADD 0x20 V195
0x2dc: V201 = 0x5341554241455200000000000000000000000000000000000000000000000000
0x2fe: M[V200] = 0x5341554241455200000000000000000000000000000000000000000000000000
0x301: JUMP 0x190
---
Entry stack: [V7, 0x190]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V7, 0x190, V195]

================================

Block 0x302
[0x302:0x34d]
---
Predecessors: [0x217]
Successors: [0x34e, 0x353]
---
0x302 JUMPDEST
0x303 PUSH1 0x0
0x305 DUP2
0x306 PUSH1 0x2
0x308 PUSH1 0x0
0x30a CALLER
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 DUP2
0x338 MSTORE
0x339 PUSH1 0x20
0x33b ADD
0x33c SWAP1
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 PUSH1 0x0
0x344 SHA3
0x345 SLOAD
0x346 LT
0x347 ISZERO
0x348 DUP1
0x349 ISZERO
0x34a PUSH2 0x353
0x34d JUMPI
---
0x302: JUMPDEST 
0x303: V202 = 0x0
0x306: V203 = 0x2
0x308: V204 = 0x0
0x30a: V205 = CALLER
0x30b: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x321: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x338: M[0x0] = V209
0x339: V210 = 0x20
0x33b: V211 = ADD 0x20 0x0
0x33e: M[0x20] = 0x2
0x33f: V212 = 0x20
0x341: V213 = ADD 0x20 0x20
0x342: V214 = 0x0
0x344: V215 = SHA3 0x0 0x40
0x345: V216 = S[V215]
0x346: V217 = LT V216 V163
0x347: V218 = ISZERO V217
0x349: V219 = ISZERO V218
0x34a: V220 = 0x353
0x34d: JUMPI 0x353 V219
---
Entry stack: [V7, 0x24c, V160, V163]
Stack pops: 1
Stack additions: [S0, 0x0, V218]
Exit stack: [V7, 0x24c, V160, V163, 0x0, V218]

================================

Block 0x34e
[0x34e:0x352]
---
Predecessors: [0x302]
Successors: [0x353]
---
0x34e POP
0x34f PUSH1 0x0
0x351 DUP3
0x352 GT
---
0x34f: V221 = 0x0
0x352: V222 = GT V163 0x0
---
Entry stack: [V7, 0x24c, V160, V163, 0x0, V218]
Stack pops: 3
Stack additions: [S2, S1, V222]
Exit stack: [V7, 0x24c, V160, V163, 0x0, V222]

================================

Block 0x353
[0x353:0x358]
---
Predecessors: [0x302, 0x34e]
Successors: [0x359, 0x460]
---
0x353 JUMPDEST
0x354 ISZERO
0x355 PUSH2 0x460
0x358 JUMPI
---
0x353: JUMPDEST 
0x354: V223 = ISZERO S0
0x355: V224 = 0x460
0x358: JUMPI 0x460 V223
---
Entry stack: [V7, 0x24c, V160, V163, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x24c, V160, V163, 0x0]

================================

Block 0x359
[0x359:0x45f]
---
Predecessors: [0x353]
Successors: [0x46a]
---
0x359 DUP2
0x35a PUSH1 0x2
0x35c PUSH1 0x0
0x35e CALLER
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38a AND
0x38b DUP2
0x38c MSTORE
0x38d PUSH1 0x20
0x38f ADD
0x390 SWAP1
0x391 DUP2
0x392 MSTORE
0x393 PUSH1 0x20
0x395 ADD
0x396 PUSH1 0x0
0x398 SHA3
0x399 PUSH1 0x0
0x39b DUP3
0x39c DUP3
0x39d SLOAD
0x39e SUB
0x39f SWAP3
0x3a0 POP
0x3a1 POP
0x3a2 DUP2
0x3a3 SWAP1
0x3a4 SSTORE
0x3a5 POP
0x3a6 DUP2
0x3a7 PUSH1 0x2
0x3a9 PUSH1 0x0
0x3ab DUP6
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d7 AND
0x3d8 DUP2
0x3d9 MSTORE
0x3da PUSH1 0x20
0x3dc ADD
0x3dd SWAP1
0x3de DUP2
0x3df MSTORE
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 PUSH1 0x0
0x3e5 SHA3
0x3e6 PUSH1 0x0
0x3e8 DUP3
0x3e9 DUP3
0x3ea SLOAD
0x3eb ADD
0x3ec SWAP3
0x3ed POP
0x3ee POP
0x3ef DUP2
0x3f0 SWAP1
0x3f1 SSTORE
0x3f2 POP
0x3f3 DUP3
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a CALLER
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x442 DUP5
0x443 PUSH1 0x40
0x445 MLOAD
0x446 DUP1
0x447 DUP3
0x448 DUP2
0x449 MSTORE
0x44a PUSH1 0x20
0x44c ADD
0x44d SWAP2
0x44e POP
0x44f POP
0x450 PUSH1 0x40
0x452 MLOAD
0x453 DUP1
0x454 SWAP2
0x455 SUB
0x456 SWAP1
0x457 LOG3
0x458 PUSH1 0x1
0x45a SWAP1
0x45b POP
0x45c PUSH2 0x46a
0x45f JUMP
---
0x35a: V225 = 0x2
0x35c: V226 = 0x0
0x35e: V227 = CALLER
0x35f: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x375: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x38c: M[0x0] = V231
0x38d: V232 = 0x20
0x38f: V233 = ADD 0x20 0x0
0x392: M[0x20] = 0x2
0x393: V234 = 0x20
0x395: V235 = ADD 0x20 0x20
0x396: V236 = 0x0
0x398: V237 = SHA3 0x0 0x40
0x399: V238 = 0x0
0x39d: V239 = S[V237]
0x39e: V240 = SUB V239 V163
0x3a4: S[V237] = V240
0x3a7: V241 = 0x2
0x3a9: V242 = 0x0
0x3ac: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x3c2: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3d9: M[0x0] = V246
0x3da: V247 = 0x20
0x3dc: V248 = ADD 0x20 0x0
0x3df: M[0x20] = 0x2
0x3e0: V249 = 0x20
0x3e2: V250 = ADD 0x20 0x20
0x3e3: V251 = 0x0
0x3e5: V252 = SHA3 0x0 0x40
0x3e6: V253 = 0x0
0x3ea: V254 = S[V252]
0x3eb: V255 = ADD V254 V163
0x3f1: S[V252] = V255
0x3f4: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x40a: V258 = CALLER
0x40b: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x421: V261 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x443: V262 = 0x40
0x445: V263 = M[0x40]
0x449: M[V263] = V163
0x44a: V264 = 0x20
0x44c: V265 = ADD 0x20 V263
0x450: V266 = 0x40
0x452: V267 = M[0x40]
0x455: V268 = SUB V265 V267
0x457: LOG V267 V268 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V260 V257
0x458: V269 = 0x1
0x45c: V270 = 0x46a
0x45f: JUMP 0x46a
---
Entry stack: [V7, 0x24c, V160, V163, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V7, 0x24c, V160, V163, 0x1]

================================

Block 0x460
[0x460:0x468]
---
Predecessors: [0x353]
Successors: [0x46a]
---
0x460 JUMPDEST
0x461 PUSH1 0x0
0x463 SWAP1
0x464 POP
0x465 PUSH2 0x46a
0x468 JUMP
---
0x460: JUMPDEST 
0x461: V271 = 0x0
0x465: V272 = 0x46a
0x468: JUMP 0x46a
---
Entry stack: [V7, 0x24c, V160, V163, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V7, 0x24c, V160, V163, 0x0]

================================

Block 0x469
[0x469:0x469]
---
Predecessors: []
Successors: [0x46a]
---
0x469 JUMPDEST
---
0x469: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x46a
[0x46a:0x46f]
---
Predecessors: [0x359, 0x460, 0x469]
Successors: [0x24c]
---
0x46a JUMPDEST
0x46b SWAP3
0x46c SWAP2
0x46d POP
0x46e POP
0x46f JUMP
---
0x46a: JUMPDEST 
0x46f: JUMP 0x24c
---
Entry stack: [V7, 0x24c, V160, V163, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V7, {0x0, 0x1}]

================================

Block 0x470
[0x470:0x49b]
---
Predecessors: []
Successors: []
---
0x470 STOP
0x471 LOG1
0x472 PUSH6 0x627a7a723058
0x479 SHA3
0x47a MISSING 0x22
0x47b MISSING 0x2d
0x47c DUP13
0x47d MISSING 0x48
0x47e SLOAD
0x47f PUSH28 0x53812ccc9ee26c969237358e4143a201d6b52a8dae85d36590be0029
---
0x470: STOP 
0x471: LOG S0 S1 S2
0x472: V273 = 0x627a7a723058
0x479: V274 = SHA3 0x627a7a723058 S3
0x47a: MISSING 0x22
0x47b: MISSING 0x2d
0x47d: MISSING 0x48
0x47e: V275 = S[S0]
0x47f: V276 = 0x53812ccc9ee26c969237358e4143a201d6b52a8dae85d36590be0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V274, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, 0x53812ccc9ee26c969237358e4143a201d6b52a8dae85d36590be0029, V275]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x6a
Exit block: 0xeb
Body: 0x6a, 0x71, 0x75, 0x7d, 0xa2, 0xab, 0xb3, 0xbe, 0xd2, 0xeb, 0x266

Function 1:
Public function signature: 0x313ce567
Entry block: 0xf9
Exit block: 0x10c
Body: 0xf9, 0x100, 0x104, 0x10c, 0x29f

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x128
Exit block: 0x13b
Body: 0x128, 0x12f, 0x133, 0x13b, 0x2a4

Function 3:
Public function signature: 0x95d89b41
Entry block: 0x17d
Exit block: 0x1fe
Body: 0x17d, 0x184, 0x188, 0x190, 0x1b5, 0x1be, 0x1c6, 0x1d1, 0x1e5, 0x1fe, 0x2c9

Function 4:
Public function signature: 0xa9059cbb
Entry block: 0x20c
Exit block: 0x24c
Body: 0x20c, 0x213, 0x217, 0x24c, 0x302, 0x34e, 0x353, 0x359, 0x460, 0x46a

Function 5:
Public fallback function
Entry block: 0x65
Exit block: 0x65
Body: 0x65

