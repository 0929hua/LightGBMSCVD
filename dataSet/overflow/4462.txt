Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0xa645ff5f
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0xa645ff5f
0x47: V16 = EQ 0xa645ff5f V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0x165]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0x165
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0x165
0x65: JUMP 0x165
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0xa7]
---
Predecessors: [0x165]
Successors: []
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 MLOAD
0x6a DUP1
0x6b DUP3
0x6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81 AND
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 DUP2
0x99 MSTORE
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP2
0x9e POP
0x9f POP
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 SWAP2
0xa5 SUB
0xa6 SWAP1
0xa7 RETURN
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x69: V26 = M[0x40]
0x6c: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x81: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x82: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x99: M[V26] = V30
0x9a: V31 = 0x20
0x9c: V32 = ADD 0x20 V26
0xa0: V33 = 0x40
0xa2: V34 = M[0x40]
0xa5: V35 = SUB V32 V34
0xa7: RETURN V34 V35
---
Entry stack: [V11, 0x66, V99]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x41]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V36 = CALLVALUE
0xab: V37 = ISZERO V36
0xac: V38 = 0xb4
0xaf: JUMPI 0xb4 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V39 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0xb4
[0xb4:0x14e]
---
Predecessors: [0xa8]
Successors: [0x18a]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0x14f
0xb9 PUSH1 0x4
0xbb DUP1
0xbc CALLDATASIZE
0xbd SUB
0xbe DUP2
0xbf ADD
0xc0 SWAP1
0xc1 DUP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 SWAP1
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP1
0xc9 DUP3
0xca ADD
0xcb DUP1
0xcc CALLDATALOAD
0xcd SWAP1
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP1
0xd2 DUP1
0xd3 DUP1
0xd4 PUSH1 0x20
0xd6 MUL
0xd7 PUSH1 0x20
0xd9 ADD
0xda PUSH1 0x40
0xdc MLOAD
0xdd SWAP1
0xde DUP2
0xdf ADD
0xe0 PUSH1 0x40
0xe2 MSTORE
0xe3 DUP1
0xe4 SWAP4
0xe5 SWAP3
0xe6 SWAP2
0xe7 SWAP1
0xe8 DUP2
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x20
0xed ADD
0xee DUP4
0xef DUP4
0xf0 PUSH1 0x20
0xf2 MUL
0xf3 DUP1
0xf4 DUP3
0xf5 DUP5
0xf6 CALLDATACOPY
0xf7 DUP3
0xf8 ADD
0xf9 SWAP2
0xfa POP
0xfb POP
0xfc POP
0xfd POP
0xfe POP
0xff POP
0x100 SWAP2
0x101 SWAP3
0x102 SWAP2
0x103 SWAP3
0x104 SWAP1
0x105 DUP1
0x106 CALLDATALOAD
0x107 SWAP1
0x108 PUSH1 0x20
0x10a ADD
0x10b SWAP1
0x10c DUP3
0x10d ADD
0x10e DUP1
0x10f CALLDATALOAD
0x110 SWAP1
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP1
0x115 DUP1
0x116 DUP1
0x117 PUSH1 0x20
0x119 MUL
0x11a PUSH1 0x20
0x11c ADD
0x11d PUSH1 0x40
0x11f MLOAD
0x120 SWAP1
0x121 DUP2
0x122 ADD
0x123 PUSH1 0x40
0x125 MSTORE
0x126 DUP1
0x127 SWAP4
0x128 SWAP3
0x129 SWAP2
0x12a SWAP1
0x12b DUP2
0x12c DUP2
0x12d MSTORE
0x12e PUSH1 0x20
0x130 ADD
0x131 DUP4
0x132 DUP4
0x133 PUSH1 0x20
0x135 MUL
0x136 DUP1
0x137 DUP3
0x138 DUP5
0x139 CALLDATACOPY
0x13a DUP3
0x13b ADD
0x13c SWAP2
0x13d POP
0x13e POP
0x13f POP
0x140 POP
0x141 POP
0x142 POP
0x143 SWAP2
0x144 SWAP3
0x145 SWAP2
0x146 SWAP3
0x147 SWAP1
0x148 POP
0x149 POP
0x14a POP
0x14b PUSH2 0x18a
0x14e JUMP
---
0xb4: JUMPDEST 
0xb6: V40 = 0x14f
0xb9: V41 = 0x4
0xbc: V42 = CALLDATASIZE
0xbd: V43 = SUB V42 0x4
0xbf: V44 = ADD 0x4 V43
0xc3: V45 = CALLDATALOAD 0x4
0xc5: V46 = 0x20
0xc7: V47 = ADD 0x20 0x4
0xca: V48 = ADD 0x4 V45
0xcc: V49 = CALLDATALOAD V48
0xce: V50 = 0x20
0xd0: V51 = ADD 0x20 V48
0xd4: V52 = 0x20
0xd6: V53 = MUL 0x20 V49
0xd7: V54 = 0x20
0xd9: V55 = ADD 0x20 V53
0xda: V56 = 0x40
0xdc: V57 = M[0x40]
0xdf: V58 = ADD V57 V55
0xe0: V59 = 0x40
0xe2: M[0x40] = V58
0xea: M[V57] = V49
0xeb: V60 = 0x20
0xed: V61 = ADD 0x20 V57
0xf0: V62 = 0x20
0xf2: V63 = MUL 0x20 V49
0xf6: CALLDATACOPY V61 V51 V63
0xf8: V64 = ADD V61 V63
0x106: V65 = CALLDATALOAD 0x24
0x108: V66 = 0x20
0x10a: V67 = ADD 0x20 0x24
0x10d: V68 = ADD 0x4 V65
0x10f: V69 = CALLDATALOAD V68
0x111: V70 = 0x20
0x113: V71 = ADD 0x20 V68
0x117: V72 = 0x20
0x119: V73 = MUL 0x20 V69
0x11a: V74 = 0x20
0x11c: V75 = ADD 0x20 V73
0x11d: V76 = 0x40
0x11f: V77 = M[0x40]
0x122: V78 = ADD V77 V75
0x123: V79 = 0x40
0x125: M[0x40] = V78
0x12d: M[V77] = V69
0x12e: V80 = 0x20
0x130: V81 = ADD 0x20 V77
0x133: V82 = 0x20
0x135: V83 = MUL 0x20 V69
0x139: CALLDATACOPY V81 V71 V83
0x13b: V84 = ADD V81 V83
0x14b: V85 = 0x18a
0x14e: JUMP 0x18a
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x14f, V57, V77]
Exit stack: [V11, 0x14f, V57, V77]

================================

Block 0x14f
[0x14f:0x164]
---
Predecessors: [0x330]
Successors: []
---
0x14f JUMPDEST
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 DUP3
0x155 DUP2
0x156 MSTORE
0x157 PUSH1 0x20
0x159 ADD
0x15a SWAP2
0x15b POP
0x15c POP
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 SWAP2
0x162 SUB
0x163 SWAP1
0x164 RETURN
---
0x14f: JUMPDEST 
0x150: V86 = 0x40
0x152: V87 = M[0x40]
0x156: M[V87] = S0
0x157: V88 = 0x20
0x159: V89 = ADD 0x20 V87
0x15d: V90 = 0x40
0x15f: V91 = M[0x40]
0x162: V92 = SUB V89 V91
0x164: RETURN V91 V92
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x165
[0x165:0x189]
---
Predecessors: [0x5d]
Successors: [0x66]
---
0x165 JUMPDEST
0x166 PUSH1 0x0
0x168 DUP1
0x169 SWAP1
0x16a SLOAD
0x16b SWAP1
0x16c PUSH2 0x100
0x16f EXP
0x170 SWAP1
0x171 DIV
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 DUP2
0x189 JUMP
---
0x165: JUMPDEST 
0x166: V93 = 0x0
0x16a: V94 = S[0x0]
0x16c: V95 = 0x100
0x16f: V96 = EXP 0x100 0x0
0x171: V97 = DIV V94 0x1
0x172: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x189: JUMP 0x66
---
Entry stack: [V11, 0x66]
Stack pops: 1
Stack additions: [S0, V99]
Exit stack: [V11, 0x66, V99]

================================

Block 0x18a
[0x18a:0x1e3]
---
Predecessors: [0xb4]
Successors: [0x1e4, 0x1e8]
---
0x18a JUMPDEST
0x18b PUSH1 0x0
0x18d DUP1
0x18e PUSH1 0x0
0x190 DUP1
0x191 SWAP1
0x192 SLOAD
0x193 SWAP1
0x194 PUSH2 0x100
0x197 EXP
0x198 SWAP1
0x199 DIV
0x19a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1af AND
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 CALLER
0x1c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1dc AND
0x1dd EQ
0x1de ISZERO
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x18a: JUMPDEST 
0x18b: V100 = 0x0
0x18e: V101 = 0x0
0x192: V102 = S[0x0]
0x194: V103 = 0x100
0x197: V104 = EXP 0x100 0x0
0x199: V105 = DIV V102 0x1
0x19a: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1b0: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1c6: V110 = CALLER
0x1c7: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1dd: V113 = EQ V112 V109
0x1de: V114 = ISZERO V113
0x1df: V115 = ISZERO V114
0x1e0: V116 = 0x1e8
0x1e3: JUMPI 0x1e8 V115
---
Entry stack: [V11, 0x14f, V57, V77]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x14f, V57, V77, 0x0, 0x0]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x18a]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V117 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V57, V77, 0x0, 0x0]

================================

Block 0x1e8
[0x1e8:0x1ec]
---
Predecessors: [0x18a]
Successors: [0x1ed]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb SWAP1
0x1ec POP
---
0x1e8: JUMPDEST 
0x1e9: V118 = 0x0
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x14f, V57, V77, 0x0, 0x0]

================================

Block 0x1ed
[0x1ed:0x1f6]
---
Predecessors: [0x1e8, 0x313]
Successors: [0x1f7, 0x330]
---
0x1ed JUMPDEST
0x1ee DUP4
0x1ef MLOAD
0x1f0 DUP2
0x1f1 LT
0x1f2 ISZERO
0x1f3 PUSH2 0x330
0x1f6 JUMPI
---
0x1ed: JUMPDEST 
0x1ef: V119 = M[V57]
0x1f1: V120 = LT S0 V119
0x1f2: V121 = ISZERO V120
0x1f3: V122 = 0x330
0x1f6: JUMPI 0x330 V121
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x14f, V57, V77, 0x0, S0]

================================

Block 0x1f7
[0x1f7:0x240]
---
Predecessors: [0x1ed]
Successors: [0x241, 0x242]
---
0x1f7 PUSH1 0x1
0x1f9 PUSH1 0x0
0x1fb SWAP1
0x1fc SLOAD
0x1fd SWAP1
0x1fe PUSH2 0x100
0x201 EXP
0x202 SWAP1
0x203 DIV
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 AND
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f AND
0x230 PUSH4 0xa9059cbb
0x235 DUP6
0x236 DUP4
0x237 DUP2
0x238 MLOAD
0x239 DUP2
0x23a LT
0x23b ISZERO
0x23c ISZERO
0x23d PUSH2 0x242
0x240 JUMPI
---
0x1f7: V123 = 0x1
0x1f9: V124 = 0x0
0x1fc: V125 = S[0x1]
0x1fe: V126 = 0x100
0x201: V127 = EXP 0x100 0x0
0x203: V128 = DIV V125 0x1
0x204: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x219: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x21a: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x230: V133 = 0xa9059cbb
0x238: V134 = M[V57]
0x23a: V135 = LT S0 V134
0x23b: V136 = ISZERO V135
0x23c: V137 = ISZERO V136
0x23d: V138 = 0x242
0x240: JUMPI 0x242 V137
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V132, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x14f, V57, V77, 0x0, S0, V132, 0xa9059cbb, V57, S0]

================================

Block 0x241
[0x241:0x241]
---
Predecessors: [0x1f7]
Successors: []
---
0x241 INVALID
---
0x241: INVALID 
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S4, V132, 0xa9059cbb, V57, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V57, V77, 0x0, S4, V132, 0xa9059cbb, V57, S0]

================================

Block 0x242
[0x242:0x258]
---
Predecessors: [0x1f7]
Successors: [0x259, 0x25a]
---
0x242 JUMPDEST
0x243 SWAP1
0x244 PUSH1 0x20
0x246 ADD
0x247 SWAP1
0x248 PUSH1 0x20
0x24a MUL
0x24b ADD
0x24c MLOAD
0x24d DUP6
0x24e DUP5
0x24f DUP2
0x250 MLOAD
0x251 DUP2
0x252 LT
0x253 ISZERO
0x254 ISZERO
0x255 PUSH2 0x25a
0x258 JUMPI
---
0x242: JUMPDEST 
0x244: V139 = 0x20
0x246: V140 = ADD 0x20 V57
0x248: V141 = 0x20
0x24a: V142 = MUL 0x20 S0
0x24b: V143 = ADD V142 V140
0x24c: V144 = M[V143]
0x250: V145 = M[V77]
0x252: V146 = LT S4 V145
0x253: V147 = ISZERO V146
0x254: V148 = ISZERO V147
0x255: V149 = 0x25a
0x258: JUMPI 0x25a V148
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S4, V132, 0xa9059cbb, V57, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V144, S6, S4]
Exit stack: [V11, 0x14f, V57, V77, 0x0, S4, V132, 0xa9059cbb, V144, V77, S4]

================================

Block 0x259
[0x259:0x259]
---
Predecessors: [0x242]
Successors: []
---
0x259 INVALID
---
0x259: INVALID 
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S5, V132, 0xa9059cbb, V144, V77, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V57, V77, 0x0, S5, V132, 0xa9059cbb, V144, V77, S0]

================================

Block 0x25a
[0x25a:0x2e4]
---
Predecessors: [0x242]
Successors: [0x2e5, 0x2e9]
---
0x25a JUMPDEST
0x25b SWAP1
0x25c PUSH1 0x20
0x25e ADD
0x25f SWAP1
0x260 PUSH1 0x20
0x262 MUL
0x263 ADD
0x264 MLOAD
0x265 PUSH1 0x40
0x267 MLOAD
0x268 DUP4
0x269 PUSH4 0xffffffff
0x26e AND
0x26f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28d MUL
0x28e DUP2
0x28f MSTORE
0x290 PUSH1 0x4
0x292 ADD
0x293 DUP1
0x294 DUP4
0x295 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2aa AND
0x2ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c0 AND
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 DUP3
0x2c7 DUP2
0x2c8 MSTORE
0x2c9 PUSH1 0x20
0x2cb ADD
0x2cc SWAP3
0x2cd POP
0x2ce POP
0x2cf POP
0x2d0 PUSH1 0x20
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 DUP1
0x2d6 DUP4
0x2d7 SUB
0x2d8 DUP2
0x2d9 PUSH1 0x0
0x2db DUP8
0x2dc DUP1
0x2dd EXTCODESIZE
0x2de ISZERO
0x2df DUP1
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x25a: JUMPDEST 
0x25c: V150 = 0x20
0x25e: V151 = ADD 0x20 V77
0x260: V152 = 0x20
0x262: V153 = MUL 0x20 S0
0x263: V154 = ADD V153 V151
0x264: V155 = M[V154]
0x265: V156 = 0x40
0x267: V157 = M[0x40]
0x269: V158 = 0xffffffff
0x26e: V159 = AND 0xffffffff 0xa9059cbb
0x26f: V160 = 0x100000000000000000000000000000000000000000000000000000000
0x28d: V161 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x28f: M[V157] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x290: V162 = 0x4
0x292: V163 = ADD 0x4 V157
0x295: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x2ab: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c0: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2c2: M[V163] = V167
0x2c3: V168 = 0x20
0x2c5: V169 = ADD 0x20 V163
0x2c8: M[V169] = V155
0x2c9: V170 = 0x20
0x2cb: V171 = ADD 0x20 V169
0x2d0: V172 = 0x20
0x2d2: V173 = 0x40
0x2d4: V174 = M[0x40]
0x2d7: V175 = SUB V171 V174
0x2d9: V176 = 0x0
0x2dd: V177 = EXTCODESIZE V132
0x2de: V178 = ISZERO V177
0x2e0: V179 = ISZERO V178
0x2e1: V180 = 0x2e9
0x2e4: JUMPI 0x2e9 V179
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S5, V132, 0xa9059cbb, V144, V77, S0]
Stack pops: 5
Stack additions: [S4, S3, V171, 0x20, V174, V175, V174, 0x0, S4, V178]
Exit stack: [V11, 0x14f, V57, V77, 0x0, S5, V132, 0xa9059cbb, V171, 0x20, V174, V175, V174, 0x0, V132, V178]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x25a]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V181 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S10, V132, 0xa9059cbb, V171, 0x20, V174, V175, V174, 0x0, V132, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V57, V77, 0x0, S10, V132, 0xa9059cbb, V171, 0x20, V174, V175, V174, 0x0, V132, V178]

================================

Block 0x2e9
[0x2e9:0x2f3]
---
Predecessors: [0x25a]
Successors: [0x2f4, 0x2fd]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb GAS
0x2ec CALL
0x2ed ISZERO
0x2ee DUP1
0x2ef ISZERO
0x2f0 PUSH2 0x2fd
0x2f3 JUMPI
---
0x2e9: JUMPDEST 
0x2eb: V182 = GAS
0x2ec: V183 = CALL V182 V132 0x0 V174 V175 V174 0x20
0x2ed: V184 = ISZERO V183
0x2ef: V185 = ISZERO V184
0x2f0: V186 = 0x2fd
0x2f3: JUMPI 0x2fd V185
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S10, V132, 0xa9059cbb, V171, 0x20, V174, V175, V174, 0x0, V132, V178]
Stack pops: 7
Stack additions: [V184]
Exit stack: [V11, 0x14f, V57, V77, 0x0, S10, V132, 0xa9059cbb, V171, V184]

================================

Block 0x2f4
[0x2f4:0x2fc]
---
Predecessors: [0x2e9]
Successors: []
---
0x2f4 RETURNDATASIZE
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 RETURNDATACOPY
0x2f9 RETURNDATASIZE
0x2fa PUSH1 0x0
0x2fc REVERT
---
0x2f4: V187 = RETURNDATASIZE
0x2f5: V188 = 0x0
0x2f8: RETURNDATACOPY 0x0 0x0 V187
0x2f9: V189 = RETURNDATASIZE
0x2fa: V190 = 0x0
0x2fc: REVERT 0x0 V189
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S4, V132, 0xa9059cbb, V171, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V57, V77, 0x0, S4, V132, 0xa9059cbb, V171, V184]

================================

Block 0x2fd
[0x2fd:0x30e]
---
Predecessors: [0x2e9]
Successors: [0x30f, 0x313]
---
0x2fd JUMPDEST
0x2fe POP
0x2ff POP
0x300 POP
0x301 POP
0x302 PUSH1 0x40
0x304 MLOAD
0x305 RETURNDATASIZE
0x306 PUSH1 0x20
0x308 DUP2
0x309 LT
0x30a ISZERO
0x30b PUSH2 0x313
0x30e JUMPI
---
0x2fd: JUMPDEST 
0x302: V191 = 0x40
0x304: V192 = M[0x40]
0x305: V193 = RETURNDATASIZE
0x306: V194 = 0x20
0x309: V195 = LT V193 0x20
0x30a: V196 = ISZERO V195
0x30b: V197 = 0x313
0x30e: JUMPI 0x313 V196
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S4, V132, 0xa9059cbb, V171, V184]
Stack pops: 4
Stack additions: [V192, V193]
Exit stack: [V11, 0x14f, V57, V77, 0x0, S4, V192, V193]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x2fd]
Successors: []
---
0x30f PUSH1 0x0
0x311 DUP1
0x312 REVERT
---
0x30f: V198 = 0x0
0x312: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S2, V192, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V57, V77, 0x0, S2, V192, V193]

================================

Block 0x313
[0x313:0x32f]
---
Predecessors: [0x2fd]
Successors: [0x1ed]
---
0x313 JUMPDEST
0x314 DUP2
0x315 ADD
0x316 SWAP1
0x317 DUP1
0x318 DUP1
0x319 MLOAD
0x31a SWAP1
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP1
0x31f SWAP3
0x320 SWAP2
0x321 SWAP1
0x322 POP
0x323 POP
0x324 POP
0x325 POP
0x326 PUSH1 0x1
0x328 DUP2
0x329 ADD
0x32a SWAP1
0x32b POP
0x32c PUSH2 0x1ed
0x32f JUMP
---
0x313: JUMPDEST 
0x315: V199 = ADD V192 V193
0x319: V200 = M[V192]
0x31b: V201 = 0x20
0x31d: V202 = ADD 0x20 V192
0x326: V203 = 0x1
0x329: V204 = ADD S2 0x1
0x32c: V205 = 0x1ed
0x32f: JUMP 0x1ed
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S2, V192, V193]
Stack pops: 3
Stack additions: [V204]
Exit stack: [V11, 0x14f, V57, V77, 0x0, V204]

================================

Block 0x330
[0x330:0x339]
---
Predecessors: [0x1ed]
Successors: [0x14f]
---
0x330 JUMPDEST
0x331 DUP1
0x332 SWAP2
0x333 POP
0x334 POP
0x335 SWAP3
0x336 SWAP2
0x337 POP
0x338 POP
0x339 JUMP
---
0x330: JUMPDEST 
0x339: JUMP 0x14f
---
Entry stack: [V11, 0x14f, V57, V77, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x33a
[0x33a:0x365]
---
Predecessors: []
Successors: []
---
0x33a STOP
0x33b LOG1
0x33c PUSH6 0x627a7a723058
0x343 SHA3
0x344 SGT
0x345 DUP5
0x346 DUP16
0x347 SSTORE
0x348 BLOCKHASH
0x349 MISSING 0xbb
0x34a DUP16
0x34b DUP4
0x34c MISSING 0xb7
0x34d LOG4
0x34e MISSING 0xee
0x34f DUP15
0x350 MISSING 0xec
0x351 SMOD
0x352 SELFDESTRUCT
0x353 PUSH1 0x74
0x355 MISSING 0x1f
0x356 MISSING 0xc
0x357 MISSING 0x2b
0x358 BLOCKHASH
0x359 MISSING 0xc0
0x35a DELEGATECALL
0x35b SWAP8
0x35c SWAP9
0x35d MISSING 0xe7
0x35e MISSING 0xca
0x35f MISSING 0xb9
0x360 MISSING 0xf8
0x361 EXP
0x362 MISSING 0xbc
0x363 MISSING 0xb9
0x364 STOP
0x365 MISSING 0x29
---
0x33a: STOP 
0x33b: LOG S0 S1 S2
0x33c: V206 = 0x627a7a723058
0x343: V207 = SHA3 0x627a7a723058 S3
0x344: V208 = SGT V207 S4
0x347: S[S18] = S8
0x348: V209 = BLOCKHASH V208
0x349: MISSING 0xbb
0x34c: MISSING 0xb7
0x34d: LOG S0 S1 S2 S3 S4 S5
0x34e: MISSING 0xee
0x350: MISSING 0xec
0x351: V210 = SMOD S0 S1
0x352: SELFDESTRUCT V210
0x353: V211 = 0x74
0x355: MISSING 0x1f
0x356: MISSING 0xc
0x357: MISSING 0x2b
0x358: V212 = BLOCKHASH S0
0x359: MISSING 0xc0
0x35a: V213 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x35d: MISSING 0xe7
0x35e: MISSING 0xca
0x35f: MISSING 0xb9
0x360: MISSING 0xf8
0x361: V214 = EXP S0 S1
0x362: MISSING 0xbc
0x363: MISSING 0xb9
0x364: STOP 
0x365: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V209, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S2, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0x74, V212, S14, S6, S7, S8, S9, S10, S11, S12, V213, S13, V214]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0x165

Function 1:
Public function signature: 0xa645ff5f
Entry block: 0xa8
Exit block: 0x30f
Body: 0xa8, 0xb0, 0xb4, 0x14f, 0x18a, 0x1e4, 0x1e8, 0x1ed, 0x1f7, 0x241, 0x242, 0x259, 0x25a, 0x2e5, 0x2e9, 0x2f4, 0x2fd, 0x30f, 0x313, 0x330

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

