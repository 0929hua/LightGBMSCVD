Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x25245b26
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x25245b26
0x3c: V13 = EQ 0x25245b26 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xeb]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0xeb
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0xeb
0x4b: JUMPI 0xeb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x100]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x100
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x100
0x56: JUMPI 0x100 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xe8]
---
Predecessors: [0xd]
Successors: [0x155]
---
0x5c JUMPDEST
0x5d PUSH2 0xe9
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x20
0x68 ADD
0x69 SWAP1
0x6a DUP3
0x6b ADD
0x6c DUP1
0x6d CALLDATALOAD
0x6e SWAP1
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP1
0x73 DUP1
0x74 DUP1
0x75 PUSH1 0x20
0x77 MUL
0x78 PUSH1 0x20
0x7a ADD
0x7b PUSH1 0x40
0x7d MLOAD
0x7e SWAP1
0x7f DUP2
0x80 ADD
0x81 PUSH1 0x40
0x83 MSTORE
0x84 DUP1
0x85 SWAP4
0x86 SWAP3
0x87 SWAP2
0x88 SWAP1
0x89 DUP2
0x8a DUP2
0x8b MSTORE
0x8c PUSH1 0x20
0x8e ADD
0x8f DUP4
0x90 DUP4
0x91 PUSH1 0x20
0x93 MUL
0x94 DUP1
0x95 DUP3
0x96 DUP5
0x97 CALLDATACOPY
0x98 DUP3
0x99 ADD
0x9a SWAP2
0x9b POP
0x9c POP
0x9d POP
0x9e POP
0x9f POP
0xa0 POP
0xa1 SWAP2
0xa2 SWAP1
0xa3 DUP1
0xa4 CALLDATALOAD
0xa5 SWAP1
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 SWAP1
0xaa DUP3
0xab ADD
0xac DUP1
0xad CALLDATALOAD
0xae SWAP1
0xaf PUSH1 0x20
0xb1 ADD
0xb2 SWAP1
0xb3 DUP1
0xb4 DUP1
0xb5 PUSH1 0x20
0xb7 MUL
0xb8 PUSH1 0x20
0xba ADD
0xbb PUSH1 0x40
0xbd MLOAD
0xbe SWAP1
0xbf DUP2
0xc0 ADD
0xc1 PUSH1 0x40
0xc3 MSTORE
0xc4 DUP1
0xc5 SWAP4
0xc6 SWAP3
0xc7 SWAP2
0xc8 SWAP1
0xc9 DUP2
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf DUP4
0xd0 DUP4
0xd1 PUSH1 0x20
0xd3 MUL
0xd4 DUP1
0xd5 DUP3
0xd6 DUP5
0xd7 CALLDATACOPY
0xd8 DUP3
0xd9 ADD
0xda SWAP2
0xdb POP
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 POP
0xe1 SWAP2
0xe2 SWAP1
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x155
0xe8 JUMP
---
0x5c: JUMPDEST 
0x5d: V22 = 0xe9
0x60: V23 = 0x4
0x64: V24 = CALLDATALOAD 0x4
0x66: V25 = 0x20
0x68: V26 = ADD 0x20 0x4
0x6b: V27 = ADD 0x4 V24
0x6d: V28 = CALLDATALOAD V27
0x6f: V29 = 0x20
0x71: V30 = ADD 0x20 V27
0x75: V31 = 0x20
0x77: V32 = MUL 0x20 V28
0x78: V33 = 0x20
0x7a: V34 = ADD 0x20 V32
0x7b: V35 = 0x40
0x7d: V36 = M[0x40]
0x80: V37 = ADD V36 V34
0x81: V38 = 0x40
0x83: M[0x40] = V37
0x8b: M[V36] = V28
0x8c: V39 = 0x20
0x8e: V40 = ADD 0x20 V36
0x91: V41 = 0x20
0x93: V42 = MUL 0x20 V28
0x97: CALLDATACOPY V40 V30 V42
0x99: V43 = ADD V40 V42
0xa4: V44 = CALLDATALOAD 0x24
0xa6: V45 = 0x20
0xa8: V46 = ADD 0x20 0x24
0xab: V47 = ADD 0x4 V44
0xad: V48 = CALLDATALOAD V47
0xaf: V49 = 0x20
0xb1: V50 = ADD 0x20 V47
0xb5: V51 = 0x20
0xb7: V52 = MUL 0x20 V48
0xb8: V53 = 0x20
0xba: V54 = ADD 0x20 V52
0xbb: V55 = 0x40
0xbd: V56 = M[0x40]
0xc0: V57 = ADD V56 V54
0xc1: V58 = 0x40
0xc3: M[0x40] = V57
0xcb: M[V56] = V48
0xcc: V59 = 0x20
0xce: V60 = ADD 0x20 V56
0xd1: V61 = 0x20
0xd3: V62 = MUL 0x20 V48
0xd7: CALLDATACOPY V60 V50 V62
0xd9: V63 = ADD V60 V62
0xe5: V64 = 0x155
0xe8: JUMP 0x155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe9, V36, V56]
Exit stack: [V11, 0xe9, V36, V56]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x288]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x41]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V65 = CALLVALUE
0xed: V66 = ISZERO V65
0xee: V67 = 0xf6
0xf1: JUMPI 0xf6 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V68 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xeb]
Successors: [0x28d]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xfe
0xfa PUSH2 0x28d
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V69 = 0xfe
0xfa: V70 = 0x28d
0xfd: JUMP 0x28d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V11, 0xfe]

================================

Block 0xfe
[0xfe:0xff]
---
Predecessors: []
Successors: []
---
0xfe JUMPDEST
0xff STOP
---
0xfe: JUMPDEST 
0xff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x4c]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V71 = CALLVALUE
0x102: V72 = ISZERO V71
0x103: V73 = 0x10b
0x106: JUMPI 0x10b V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V74 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x322]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x322
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V75 = 0x113
0x10f: V76 = 0x322
0x112: JUMP 0x322
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x113
[0x113:0x154]
---
Predecessors: [0x322]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 DUP3
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP2
0x14b POP
0x14c POP
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 SWAP2
0x152 SUB
0x153 SWAP1
0x154 RETURN
---
0x113: JUMPDEST 
0x114: V77 = 0x40
0x116: V78 = M[0x40]
0x119: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x12f: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x146: M[V78] = V82
0x147: V83 = 0x20
0x149: V84 = ADD 0x20 V78
0x14d: V85 = 0x40
0x14f: V86 = M[0x40]
0x152: V87 = SUB V84 V86
0x154: RETURN V86 V87
---
Entry stack: [V11, 0x113, V212]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113]

================================

Block 0x155
[0x155:0x1ad]
---
Predecessors: [0x5c]
Successors: [0x1ae, 0x1b2]
---
0x155 JUMPDEST
0x156 PUSH1 0x0
0x158 CALLER
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f PUSH1 0x0
0x171 DUP1
0x172 SWAP1
0x173 SLOAD
0x174 SWAP1
0x175 PUSH2 0x100
0x178 EXP
0x179 SWAP1
0x17a DIV
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6 AND
0x1a7 EQ
0x1a8 ISZERO
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x155: JUMPDEST 
0x156: V88 = 0x0
0x158: V89 = CALLER
0x159: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x16f: V92 = 0x0
0x173: V93 = S[0x0]
0x175: V94 = 0x100
0x178: V95 = EXP 0x100 0x0
0x17a: V96 = DIV V93 0x1
0x17b: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x191: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1a7: V101 = EQ V100 V91
0x1a8: V102 = ISZERO V101
0x1a9: V103 = ISZERO V102
0x1aa: V104 = 0x1b2
0x1ad: JUMPI 0x1b2 V103
---
Entry stack: [V11, 0xe9, V36, V56]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xe9, V36, V56, 0x0]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x155]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V105 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V36, V56, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, 0x0]

================================

Block 0x1b2
[0x1b2:0x1bd]
---
Predecessors: [0x155]
Successors: [0x1be, 0x1c2]
---
0x1b2 JUMPDEST
0x1b3 DUP2
0x1b4 MLOAD
0x1b5 DUP4
0x1b6 MLOAD
0x1b7 EQ
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b2: JUMPDEST 
0x1b4: V106 = M[V56]
0x1b6: V107 = M[V36]
0x1b7: V108 = EQ V107 V106
0x1b8: V109 = ISZERO V108
0x1b9: V110 = ISZERO V109
0x1ba: V111 = 0x1c2
0x1bd: JUMPI 0x1c2 V110
---
Entry stack: [V11, 0xe9, V36, V56, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe9, V36, V56, 0x0]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b2]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V112 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V36, V56, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, 0x0]

================================

Block 0x1c2
[0x1c2:0x1c6]
---
Predecessors: [0x1b2]
Successors: [0x1c7]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x0
0x1c5 SWAP1
0x1c6 POP
---
0x1c2: JUMPDEST 
0x1c3: V113 = 0x0
---
Entry stack: [V11, 0xe9, V36, V56, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xe9, V36, V56, 0x0]

================================

Block 0x1c7
[0x1c7:0x1d0]
---
Predecessors: [0x1c2, 0x27b]
Successors: [0x1d1, 0x288]
---
0x1c7 JUMPDEST
0x1c8 DUP3
0x1c9 MLOAD
0x1ca DUP2
0x1cb LT
0x1cc ISZERO
0x1cd PUSH2 0x288
0x1d0 JUMPI
---
0x1c7: JUMPDEST 
0x1c9: V114 = M[V36]
0x1cb: V115 = LT S0 V114
0x1cc: V116 = ISZERO V115
0x1cd: V117 = 0x288
0x1d0: JUMPI 0x288 V116
---
Entry stack: [V11, 0xe9, V36, V56, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe9, V36, V56, S0]

================================

Block 0x1d1
[0x1d1:0x1dc]
---
Predecessors: [0x1c7]
Successors: [0x1dd, 0x1de]
---
0x1d1 DUP2
0x1d2 DUP2
0x1d3 DUP2
0x1d4 MLOAD
0x1d5 DUP2
0x1d6 LT
0x1d7 ISZERO
0x1d8 ISZERO
0x1d9 PUSH2 0x1de
0x1dc JUMPI
---
0x1d4: V118 = M[V56]
0x1d6: V119 = LT S0 V118
0x1d7: V120 = ISZERO V119
0x1d8: V121 = ISZERO V120
0x1d9: V122 = 0x1de
0x1dc: JUMPI 0x1de V121
---
Entry stack: [V11, 0xe9, V36, V56, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V11, 0xe9, V36, V56, S0, V56, S0]

================================

Block 0x1dd
[0x1dd:0x1dd]
---
Predecessors: [0x1d1]
Successors: []
---
0x1dd INVALID
---
0x1dd: INVALID 
---
Entry stack: [V11, 0xe9, V36, V56, S2, V56, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, S2, V56, S0]

================================

Block 0x1de
[0x1de:0x208]
---
Predecessors: [0x1d1]
Successors: [0x209, 0x20d]
---
0x1de JUMPDEST
0x1df SWAP1
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 SWAP1
0x1e4 PUSH1 0x20
0x1e6 MUL
0x1e7 ADD
0x1e8 MLOAD
0x1e9 ADDRESS
0x1ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ff AND
0x200 BALANCE
0x201 LT
0x202 ISZERO
0x203 ISZERO
0x204 ISZERO
0x205 PUSH2 0x20d
0x208 JUMPI
---
0x1de: JUMPDEST 
0x1e0: V123 = 0x20
0x1e2: V124 = ADD 0x20 V56
0x1e4: V125 = 0x20
0x1e6: V126 = MUL 0x20 S0
0x1e7: V127 = ADD V126 V124
0x1e8: V128 = M[V127]
0x1e9: V129 = ADDRESS
0x1ea: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x200: V132 = BALANCE V131
0x201: V133 = LT V132 V128
0x202: V134 = ISZERO V133
0x203: V135 = ISZERO V134
0x204: V136 = ISZERO V135
0x205: V137 = 0x20d
0x208: JUMPI 0x20d V136
---
Entry stack: [V11, 0xe9, V36, V56, S2, V56, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, S2]

================================

Block 0x209
[0x209:0x20c]
---
Predecessors: [0x1de]
Successors: []
---
0x209 PUSH1 0x0
0x20b DUP1
0x20c REVERT
---
0x209: V138 = 0x0
0x20c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V36, V56, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, S0]

================================

Block 0x20d
[0x20d:0x219]
---
Predecessors: [0x1de]
Successors: [0x21a, 0x21b]
---
0x20d JUMPDEST
0x20e DUP3
0x20f DUP2
0x210 DUP2
0x211 MLOAD
0x212 DUP2
0x213 LT
0x214 ISZERO
0x215 ISZERO
0x216 PUSH2 0x21b
0x219 JUMPI
---
0x20d: JUMPDEST 
0x211: V139 = M[V36]
0x213: V140 = LT S0 V139
0x214: V141 = ISZERO V140
0x215: V142 = ISZERO V141
0x216: V143 = 0x21b
0x219: JUMPI 0x21b V142
---
Entry stack: [V11, 0xe9, V36, V56, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S0]
Exit stack: [V11, 0xe9, V36, V56, S0, V36, S0]

================================

Block 0x21a
[0x21a:0x21a]
---
Predecessors: [0x20d]
Successors: []
---
0x21a INVALID
---
0x21a: INVALID 
---
Entry stack: [V11, 0xe9, V36, V56, S2, V36, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, S2, V36, S0]

================================

Block 0x21b
[0x21b:0x24a]
---
Predecessors: [0x20d]
Successors: [0x24b, 0x24c]
---
0x21b JUMPDEST
0x21c SWAP1
0x21d PUSH1 0x20
0x21f ADD
0x220 SWAP1
0x221 PUSH1 0x20
0x223 MUL
0x224 ADD
0x225 MLOAD
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c PUSH2 0x8fc
0x23f DUP4
0x240 DUP4
0x241 DUP2
0x242 MLOAD
0x243 DUP2
0x244 LT
0x245 ISZERO
0x246 ISZERO
0x247 PUSH2 0x24c
0x24a JUMPI
---
0x21b: JUMPDEST 
0x21d: V144 = 0x20
0x21f: V145 = ADD 0x20 V36
0x221: V146 = 0x20
0x223: V147 = MUL 0x20 S0
0x224: V148 = ADD V147 V145
0x225: V149 = M[V148]
0x226: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x23c: V152 = 0x8fc
0x242: V153 = M[V56]
0x244: V154 = LT S2 V153
0x245: V155 = ISZERO V154
0x246: V156 = ISZERO V155
0x247: V157 = 0x24c
0x24a: JUMPI 0x24c V156
---
Entry stack: [V11, 0xe9, V36, V56, S2, V36, S0]
Stack pops: 4
Stack additions: [S3, S2, V151, 0x8fc, S3, S2]
Exit stack: [V11, 0xe9, V36, V56, S2, V151, 0x8fc, V56, S2]

================================

Block 0x24b
[0x24b:0x24b]
---
Predecessors: [0x21b]
Successors: []
---
0x24b INVALID
---
0x24b: INVALID 
---
Entry stack: [V11, 0xe9, V36, V56, S4, V151, 0x8fc, V56, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, S4, V151, 0x8fc, V56, S0]

================================

Block 0x24c
[0x24c:0x276]
---
Predecessors: [0x21b]
Successors: [0x277, 0x27b]
---
0x24c JUMPDEST
0x24d SWAP1
0x24e PUSH1 0x20
0x250 ADD
0x251 SWAP1
0x252 PUSH1 0x20
0x254 MUL
0x255 ADD
0x256 MLOAD
0x257 SWAP1
0x258 DUP2
0x259 ISZERO
0x25a MUL
0x25b SWAP1
0x25c PUSH1 0x40
0x25e MLOAD
0x25f PUSH1 0x0
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 DUP4
0x266 SUB
0x267 DUP2
0x268 DUP6
0x269 DUP9
0x26a DUP9
0x26b CALL
0x26c SWAP4
0x26d POP
0x26e POP
0x26f POP
0x270 POP
0x271 ISZERO
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x24c: JUMPDEST 
0x24e: V158 = 0x20
0x250: V159 = ADD 0x20 V56
0x252: V160 = 0x20
0x254: V161 = MUL 0x20 S0
0x255: V162 = ADD V161 V159
0x256: V163 = M[V162]
0x259: V164 = ISZERO V163
0x25a: V165 = MUL V164 0x8fc
0x25c: V166 = 0x40
0x25e: V167 = M[0x40]
0x25f: V168 = 0x0
0x261: V169 = 0x40
0x263: V170 = M[0x40]
0x266: V171 = SUB V167 V170
0x26b: V172 = CALL V165 V151 V163 V170 V171 V170 0x0
0x271: V173 = ISZERO V172
0x272: V174 = ISZERO V173
0x273: V175 = 0x27b
0x276: JUMPI 0x27b V174
---
Entry stack: [V11, 0xe9, V36, V56, S4, V151, 0x8fc, V56, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, S4]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x24c]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V176 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V36, V56, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V36, V56, S0]

================================

Block 0x27b
[0x27b:0x287]
---
Predecessors: [0x24c]
Successors: [0x1c7]
---
0x27b JUMPDEST
0x27c DUP1
0x27d DUP1
0x27e PUSH1 0x1
0x280 ADD
0x281 SWAP2
0x282 POP
0x283 POP
0x284 PUSH2 0x1c7
0x287 JUMP
---
0x27b: JUMPDEST 
0x27e: V177 = 0x1
0x280: V178 = ADD 0x1 S0
0x284: V179 = 0x1c7
0x287: JUMP 0x1c7
---
Entry stack: [V11, 0xe9, V36, V56, S0]
Stack pops: 1
Stack additions: [V178]
Exit stack: [V11, 0xe9, V36, V56, V178]

================================

Block 0x288
[0x288:0x28c]
---
Predecessors: [0x1c7]
Successors: [0xe9]
---
0x288 JUMPDEST
0x289 POP
0x28a POP
0x28b POP
0x28c JUMP
---
0x288: JUMPDEST 
0x28c: JUMP 0xe9
---
Entry stack: [V11, 0xe9, V36, V56, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x28d
[0x28d:0x2e3]
---
Predecessors: [0xf6]
Successors: [0x2e4, 0x2e8]
---
0x28d JUMPDEST
0x28e CALLER
0x28f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a4 AND
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 SWAP1
0x2a9 SLOAD
0x2aa SWAP1
0x2ab PUSH2 0x100
0x2ae EXP
0x2af SWAP1
0x2b0 DIV
0x2b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c6 AND
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd EQ
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x28d: JUMPDEST 
0x28e: V180 = CALLER
0x28f: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x2a5: V183 = 0x0
0x2a9: V184 = S[0x0]
0x2ab: V185 = 0x100
0x2ae: V186 = EXP 0x100 0x0
0x2b0: V187 = DIV V184 0x1
0x2b1: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x2c7: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x2dd: V192 = EQ V191 V182
0x2de: V193 = ISZERO V192
0x2df: V194 = ISZERO V193
0x2e0: V195 = 0x2e8
0x2e3: JUMPI 0x2e8 V194
---
Entry stack: [V11, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x28d]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V196 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe]

================================

Block 0x2e8
[0x2e8:0x321]
---
Predecessors: [0x28d]
Successors: []
---
0x2e8 JUMPDEST
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec SWAP1
0x2ed SLOAD
0x2ee SWAP1
0x2ef PUSH2 0x100
0x2f2 EXP
0x2f3 SWAP1
0x2f4 DIV
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 SELFDESTRUCT
---
0x2e8: JUMPDEST 
0x2e9: V197 = 0x0
0x2ed: V198 = S[0x0]
0x2ef: V199 = 0x100
0x2f2: V200 = EXP 0x100 0x0
0x2f4: V201 = DIV V198 0x1
0x2f5: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x30b: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x321: SELFDESTRUCT V205
---
Entry stack: [V11, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfe]

================================

Block 0x322
[0x322:0x346]
---
Predecessors: [0x10b]
Successors: [0x113]
---
0x322 JUMPDEST
0x323 PUSH1 0x0
0x325 DUP1
0x326 SWAP1
0x327 SLOAD
0x328 SWAP1
0x329 PUSH2 0x100
0x32c EXP
0x32d SWAP1
0x32e DIV
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 DUP2
0x346 JUMP
---
0x322: JUMPDEST 
0x323: V206 = 0x0
0x327: V207 = S[0x0]
0x329: V208 = 0x100
0x32c: V209 = EXP 0x100 0x0
0x32e: V210 = DIV V207 0x1
0x32f: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x346: JUMP 0x113
---
Entry stack: [V11, 0x113]
Stack pops: 1
Stack additions: [S0, V212]
Exit stack: [V11, 0x113, V212]

================================

Block 0x347
[0x347:0x372]
---
Predecessors: []
Successors: []
---
0x347 STOP
0x348 LOG1
0x349 PUSH6 0x627a7a723058
0x350 SHA3
0x351 CODECOPY
0x352 MISSING 0xf7
0x353 MOD
0x354 PUSH4 0xf0435282
0x359 DUP1
0x35a MISSING 0x4c
0x35b ADD
0x35c MISSING 0xea
0x35d SWAP7
0x35e MISSING 0xe
0x35f XOR
0x360 PUSH6 0x982490bff302
0x367 SWAP14
0x368 MUL
0x369 SMOD
0x36a SSTORE
0x36b OR
0x36c MISSING 0x21
0x36d MISSING 0xd3
0x36e REVERT
0x36f CODESIZE
0x370 MISSING 0xe
0x371 STOP
0x372 MISSING 0x29
---
0x347: STOP 
0x348: LOG S0 S1 S2
0x349: V213 = 0x627a7a723058
0x350: V214 = SHA3 0x627a7a723058 S3
0x351: CODECOPY V214 S4 S5
0x352: MISSING 0xf7
0x353: V215 = MOD S0 S1
0x354: V216 = 0xf0435282
0x35a: MISSING 0x4c
0x35b: V217 = ADD S0 S1
0x35c: MISSING 0xea
0x35e: MISSING 0xe
0x35f: V218 = XOR S0 S1
0x360: V219 = 0x982490bff302
0x368: V220 = MUL S14 V218
0x369: V221 = SMOD V220 S2
0x36a: S[V221] = S3
0x36b: V222 = OR S4 S5
0x36c: MISSING 0x21
0x36d: MISSING 0xd3
0x36e: REVERT S0 S1
0x36f: V223 = CODESIZE
0x370: MISSING 0xe
0x371: STOP 
0x372: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf0435282, 0xf0435282, V215, V217, S7, S1, S2, S3, S4, S5, S6, S0, V222, S6, S7, S8, S9, S10, S11, S12, S13, 0x982490bff302, V223]
Exit stack: []

================================

Function 0:
Public function signature: 0x25245b26
Entry block: 0x5c
Exit block: 0x277
Body: 0x5c, 0xe9, 0x155, 0x1ae, 0x1b2, 0x1be, 0x1c2, 0x1c7, 0x1d1, 0x1dd, 0x1de, 0x209, 0x20d, 0x21a, 0x21b, 0x24b, 0x24c, 0x277, 0x27b, 0x288

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xeb
Exit block: 0x2e8
Body: 0xeb, 0xf2, 0xf6, 0x28d, 0x2e4, 0x2e8

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x100
Exit block: 0x113
Body: 0x100, 0x107, 0x10b, 0x113, 0x322

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

