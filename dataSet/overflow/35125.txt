Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb8
0xa: JUMPI 0xb8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xc4]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x205c2878
0x3a EQ
0x3b PUSH2 0xc4
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x205c2878
0x3a: V12 = EQ 0x205c2878 V10
0x3b: V13 = 0xc4
0x3e: JUMPI 0xc4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x106]
---
0x3f DUP1
0x40 PUSH4 0x223c217b
0x45 EQ
0x46 PUSH2 0x106
0x49 JUMPI
---
0x40: V14 = 0x223c217b
0x45: V15 = EQ 0x223c217b V10
0x46: V16 = 0x106
0x49: JUMPI 0x106 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x15c]
---
0x4a DUP1
0x4b PUSH4 0x2e1a7d4d
0x50 EQ
0x51 PUSH2 0x15c
0x54 JUMPI
---
0x4b: V17 = 0x2e1a7d4d
0x50: V18 = EQ 0x2e1a7d4d V10
0x51: V19 = 0x15c
0x54: JUMPI 0x15c V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x174]
---
0x55 DUP1
0x56 PUSH4 0x3e326048
0x5b EQ
0x5c PUSH2 0x174
0x5f JUMPI
---
0x56: V20 = 0x3e326048
0x5b: V21 = EQ 0x3e326048 V10
0x5c: V22 = 0x174
0x5f: JUMPI 0x174 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x17e]
---
0x60 DUP1
0x61 PUSH4 0x3ee2d7c2
0x66 EQ
0x67 PUSH2 0x17e
0x6a JUMPI
---
0x61: V23 = 0x3ee2d7c2
0x66: V24 = EQ 0x3ee2d7c2 V10
0x67: V25 = 0x17e
0x6a: JUMPI 0x17e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x1cb]
---
0x6b DUP1
0x6c PUSH4 0x89476069
0x71 EQ
0x72 PUSH2 0x1cb
0x75 JUMPI
---
0x6c: V26 = 0x89476069
0x71: V27 = EQ 0x89476069 V10
0x72: V28 = 0x1cb
0x75: JUMPI 0x1cb V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x1f9]
---
0x76 DUP1
0x77 PUSH4 0x8cf49cad
0x7c EQ
0x7d PUSH2 0x1f9
0x80 JUMPI
---
0x77: V29 = 0x8cf49cad
0x7c: V30 = EQ 0x8cf49cad V10
0x7d: V31 = 0x1f9
0x80: JUMPI 0x1f9 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x222]
---
0x81 DUP1
0x82 PUSH4 0xc635a9f2
0x87 EQ
0x88 PUSH2 0x222
0x8b JUMPI
---
0x82: V32 = 0xc635a9f2
0x87: V33 = EQ 0xc635a9f2 V10
0x88: V34 = 0x222
0x8b: JUMPI 0x222 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x24b]
---
0x8c DUP1
0x8d PUSH4 0xc67bdb19
0x92 EQ
0x93 PUSH2 0x24b
0x96 JUMPI
---
0x8d: V35 = 0xc67bdb19
0x92: V36 = EQ 0xc67bdb19 V10
0x93: V37 = 0x24b
0x96: JUMPI 0x24b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x26e]
---
0x97 DUP1
0x98 PUSH4 0xd0e30db0
0x9d EQ
0x9e PUSH2 0x26e
0xa1 JUMPI
---
0x98: V38 = 0xd0e30db0
0x9d: V39 = EQ 0xd0e30db0 V10
0x9e: V40 = 0x26e
0xa1: JUMPI 0x26e V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x278]
---
0xa2 DUP1
0xa3 PUSH4 0xf2fde38b
0xa8 EQ
0xa9 PUSH2 0x278
0xac JUMPI
---
0xa3: V41 = 0xf2fde38b
0xa8: V42 = EQ 0xf2fde38b V10
0xa9: V43 = 0x278
0xac: JUMPI 0x278 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x2b1]
---
0xad DUP1
0xae PUSH4 0xf83d08ba
0xb3 EQ
0xb4 PUSH2 0x2b1
0xb7 JUMPI
---
0xae: V44 = 0xf83d08ba
0xb3: V45 = EQ 0xf83d08ba V10
0xb4: V46 = 0x2b1
0xb7: JUMPI 0x2b1 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xb8]
---
Predecessors: [0x0, 0xad]
Successors: [0xb9]
---
0xb8 JUMPDEST
---
0xb8: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0xb8]
Successors: [0x2c6]
---
0xb9 JUMPDEST
0xba PUSH2 0xc1
0xbd PUSH2 0x2c6
0xc0 JUMP
---
0xb9: JUMPDEST 
0xba: V47 = 0xc1
0xbd: V48 = 0x2c6
0xc0: JUMP 0x2c6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V10, 0xc1]

================================

Block 0xc1
[0xc1:0xc1]
---
Predecessors: [0x37d]
Successors: [0xc2]
---
0xc1 JUMPDEST
---
0xc1: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0xc1]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0xb]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V49 = CALLVALUE
0xc6: V50 = ISZERO V49
0xc7: V51 = 0xcf
0xca: JUMPI 0xcf V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V52 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0x103]
---
Predecessors: [0xc4]
Successors: [0x37f]
---
0xcf JUMPDEST
0xd0 PUSH2 0x104
0xd3 PUSH1 0x4
0xd5 DUP1
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee SWAP1
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP1
0xf3 SWAP2
0xf4 SWAP1
0xf5 DUP1
0xf6 CALLDATALOAD
0xf7 SWAP1
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP1
0xfc SWAP2
0xfd SWAP1
0xfe POP
0xff POP
0x100 PUSH2 0x37f
0x103 JUMP
---
0xcf: JUMPDEST 
0xd0: V53 = 0x104
0xd3: V54 = 0x4
0xd7: V55 = CALLDATALOAD 0x4
0xd8: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xef: V58 = 0x20
0xf1: V59 = ADD 0x20 0x4
0xf6: V60 = CALLDATALOAD 0x24
0xf8: V61 = 0x20
0xfa: V62 = ADD 0x20 0x24
0x100: V63 = 0x37f
0x103: JUMP 0x37f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x104, V57, V60]
Exit stack: [V10, 0x104, V57, V60]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x4cd]
Successors: []
---
0x104 JUMPDEST
0x105 STOP
---
0x104: JUMPDEST 
0x105: STOP 
---
Entry stack: [V10, 0x172, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x172, S0]

================================

Block 0x106
[0x106:0x159]
---
Predecessors: [0x3f]
Successors: [0x4d2]
---
0x106 JUMPDEST
0x107 PUSH2 0x15a
0x10a PUSH1 0x4
0x10c DUP1
0x10d DUP1
0x10e CALLDATALOAD
0x10f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124 AND
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a SWAP2
0x12b SWAP1
0x12c DUP1
0x12d CALLDATALOAD
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 SWAP1
0x145 PUSH1 0x20
0x147 ADD
0x148 SWAP1
0x149 SWAP2
0x14a SWAP1
0x14b DUP1
0x14c CALLDATALOAD
0x14d SWAP1
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP1
0x152 SWAP2
0x153 SWAP1
0x154 POP
0x155 POP
0x156 PUSH2 0x4d2
0x159 JUMP
---
0x106: JUMPDEST 
0x107: V64 = 0x15a
0x10a: V65 = 0x4
0x10e: V66 = CALLDATALOAD 0x4
0x10f: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x126: V69 = 0x20
0x128: V70 = ADD 0x20 0x4
0x12d: V71 = CALLDATALOAD 0x24
0x12e: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x145: V74 = 0x20
0x147: V75 = ADD 0x20 0x24
0x14c: V76 = CALLDATALOAD 0x44
0x14e: V77 = 0x20
0x150: V78 = ADD 0x20 0x44
0x156: V79 = 0x4d2
0x159: JUMP 0x4d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x15a, V68, V73, V76]
Exit stack: [V10, 0x15a, V68, V73, V76]

================================

Block 0x15a
[0x15a:0x15b]
---
Predecessors: [0x6b8]
Successors: []
---
0x15a JUMPDEST
0x15b STOP
---
0x15a: JUMPDEST 
0x15b: STOP 
---
Entry stack: [V10, 0x1f7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S0]

================================

Block 0x15c
[0x15c:0x171]
---
Predecessors: [0x4a]
Successors: [0x6be]
---
0x15c JUMPDEST
0x15d PUSH2 0x172
0x160 PUSH1 0x4
0x162 DUP1
0x163 DUP1
0x164 CALLDATALOAD
0x165 SWAP1
0x166 PUSH1 0x20
0x168 ADD
0x169 SWAP1
0x16a SWAP2
0x16b SWAP1
0x16c POP
0x16d POP
0x16e PUSH2 0x6be
0x171 JUMP
---
0x15c: JUMPDEST 
0x15d: V80 = 0x172
0x160: V81 = 0x4
0x164: V82 = CALLDATALOAD 0x4
0x166: V83 = 0x20
0x168: V84 = ADD 0x20 0x4
0x16e: V85 = 0x6be
0x171: JUMP 0x6be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x172, V82]
Exit stack: [V10, 0x172, V82]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: [0x6c9]
Successors: []
---
0x172 JUMPDEST
0x173 STOP
---
0x172: JUMPDEST 
0x173: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0x55]
Successors: [0x6cc]
---
0x174 JUMPDEST
0x175 PUSH2 0x17c
0x178 PUSH2 0x6cc
0x17b JUMP
---
0x174: JUMPDEST 
0x175: V86 = 0x17c
0x178: V87 = 0x6cc
0x17b: JUMP 0x6cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17c]
Exit stack: [V10, 0x17c]

================================

Block 0x17c
[0x17c:0x17d]
---
Predecessors: [0x73c]
Successors: []
---
0x17c JUMPDEST
0x17d STOP
---
0x17c: JUMPDEST 
0x17d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0x60]
Successors: [0x185, 0x189]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x17e: JUMPDEST 
0x17f: V88 = CALLVALUE
0x180: V89 = ISZERO V88
0x181: V90 = 0x189
0x184: JUMPI 0x189 V89
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x17e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V91 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x189
[0x189:0x1b4]
---
Predecessors: [0x17e]
Successors: [0x73e]
---
0x189 JUMPDEST
0x18a PUSH2 0x1b5
0x18d PUSH1 0x4
0x18f DUP1
0x190 DUP1
0x191 CALLDATALOAD
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 SWAP1
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP1
0x1ad SWAP2
0x1ae SWAP1
0x1af POP
0x1b0 POP
0x1b1 PUSH2 0x73e
0x1b4 JUMP
---
0x189: JUMPDEST 
0x18a: V92 = 0x1b5
0x18d: V93 = 0x4
0x191: V94 = CALLDATALOAD 0x4
0x192: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1a9: V97 = 0x20
0x1ab: V98 = ADD 0x20 0x4
0x1b1: V99 = 0x73e
0x1b4: JUMP 0x73e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b5, V96]
Exit stack: [V10, 0x1b5, V96]

================================

Block 0x1b5
[0x1b5:0x1ca]
---
Predecessors: [0x73e]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 DUP1
0x1ba DUP3
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP2
0x1c1 POP
0x1c2 POP
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1b5: JUMPDEST 
0x1b6: V100 = 0x40
0x1b8: V101 = M[0x40]
0x1bc: M[V101] = V423
0x1bd: V102 = 0x20
0x1bf: V103 = ADD 0x20 V101
0x1c3: V104 = 0x40
0x1c5: V105 = M[0x40]
0x1c8: V106 = SUB V103 V105
0x1ca: RETURN V105 V106
---
Entry stack: [V10, 0x1b5, V423]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b5]

================================

Block 0x1cb
[0x1cb:0x1f6]
---
Predecessors: [0x6b]
Successors: [0x756]
---
0x1cb JUMPDEST
0x1cc PUSH2 0x1f7
0x1cf PUSH1 0x4
0x1d1 DUP1
0x1d2 DUP1
0x1d3 CALLDATALOAD
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea SWAP1
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee SWAP1
0x1ef SWAP2
0x1f0 SWAP1
0x1f1 POP
0x1f2 POP
0x1f3 PUSH2 0x756
0x1f6 JUMP
---
0x1cb: JUMPDEST 
0x1cc: V107 = 0x1f7
0x1cf: V108 = 0x4
0x1d3: V109 = CALLDATALOAD 0x4
0x1d4: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1eb: V112 = 0x20
0x1ed: V113 = ADD 0x20 0x4
0x1f3: V114 = 0x756
0x1f6: JUMP 0x756
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f7, V111]
Exit stack: [V10, 0x1f7, V111]

================================

Block 0x1f7
[0x1f7:0x1f8]
---
Predecessors: [0x876]
Successors: []
---
0x1f7 JUMPDEST
0x1f8 STOP
---
0x1f7: JUMPDEST 
0x1f8: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f9
[0x1f9:0x1ff]
---
Predecessors: [0x76]
Successors: [0x200, 0x204]
---
0x1f9 JUMPDEST
0x1fa CALLVALUE
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V115 = CALLVALUE
0x1fb: V116 = ISZERO V115
0x1fc: V117 = 0x204
0x1ff: JUMPI 0x204 V116
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1f9]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V118 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x204
[0x204:0x20b]
---
Predecessors: [0x1f9]
Successors: [0x879]
---
0x204 JUMPDEST
0x205 PUSH2 0x20c
0x208 PUSH2 0x879
0x20b JUMP
---
0x204: JUMPDEST 
0x205: V119 = 0x20c
0x208: V120 = 0x879
0x20b: JUMP 0x879
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20c]
Exit stack: [V10, 0x20c]

================================

Block 0x20c
[0x20c:0x221]
---
Predecessors: [0x881]
Successors: []
---
0x20c JUMPDEST
0x20d PUSH1 0x40
0x20f MLOAD
0x210 DUP1
0x211 DUP3
0x212 DUP2
0x213 MSTORE
0x214 PUSH1 0x20
0x216 ADD
0x217 SWAP2
0x218 POP
0x219 POP
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP1
0x21e SWAP2
0x21f SUB
0x220 SWAP1
0x221 RETURN
---
0x20c: JUMPDEST 
0x20d: V121 = 0x40
0x20f: V122 = M[0x40]
0x213: M[V122] = V488
0x214: V123 = 0x20
0x216: V124 = ADD 0x20 V122
0x21a: V125 = 0x40
0x21c: V126 = M[0x40]
0x21f: V127 = SUB V124 V126
0x221: RETURN V126 V127
---
Entry stack: [V10, V488]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x222
[0x222:0x228]
---
Predecessors: [0x81]
Successors: [0x229, 0x22d]
---
0x222 JUMPDEST
0x223 CALLVALUE
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x222: JUMPDEST 
0x223: V128 = CALLVALUE
0x224: V129 = ISZERO V128
0x225: V130 = 0x22d
0x228: JUMPI 0x22d V129
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x222]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V131 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22d
[0x22d:0x234]
---
Predecessors: [0x222]
Successors: [0x884]
---
0x22d JUMPDEST
0x22e PUSH2 0x235
0x231 PUSH2 0x884
0x234 JUMP
---
0x22d: JUMPDEST 
0x22e: V132 = 0x235
0x231: V133 = 0x884
0x234: JUMP 0x884
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V10, 0x235]

================================

Block 0x235
[0x235:0x24a]
---
Predecessors: [0x88c]
Successors: []
---
0x235 JUMPDEST
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a DUP3
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP2
0x241 POP
0x242 POP
0x243 PUSH1 0x40
0x245 MLOAD
0x246 DUP1
0x247 SWAP2
0x248 SUB
0x249 SWAP1
0x24a RETURN
---
0x235: JUMPDEST 
0x236: V134 = 0x40
0x238: V135 = M[0x40]
0x23c: M[V135] = S0
0x23d: V136 = 0x20
0x23f: V137 = ADD 0x20 V135
0x243: V138 = 0x40
0x245: V139 = M[0x40]
0x248: V140 = SUB V137 V139
0x24a: RETURN V139 V140
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x24b
[0x24b:0x251]
---
Predecessors: [0x8c]
Successors: [0x252, 0x256]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x24b: JUMPDEST 
0x24c: V141 = CALLVALUE
0x24d: V142 = ISZERO V141
0x24e: V143 = 0x256
0x251: JUMPI 0x256 V142
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x24b]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V144 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x256
[0x256:0x26b]
---
Predecessors: [0x24b]
Successors: [0x88f]
---
0x256 JUMPDEST
0x257 PUSH2 0x26c
0x25a PUSH1 0x4
0x25c DUP1
0x25d DUP1
0x25e CALLDATALOAD
0x25f SWAP1
0x260 PUSH1 0x20
0x262 ADD
0x263 SWAP1
0x264 SWAP2
0x265 SWAP1
0x266 POP
0x267 POP
0x268 PUSH2 0x88f
0x26b JUMP
---
0x256: JUMPDEST 
0x257: V145 = 0x26c
0x25a: V146 = 0x4
0x25e: V147 = CALLDATALOAD 0x4
0x260: V148 = 0x20
0x262: V149 = ADD 0x20 0x4
0x268: V150 = 0x88f
0x26b: JUMP 0x88f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x26c, V147]
Exit stack: [V10, 0x26c, V147]

================================

Block 0x26c
[0x26c:0x26d]
---
Predecessors: [0x897]
Successors: []
---
0x26c JUMPDEST
0x26d STOP
---
0x26c: JUMPDEST 
0x26d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26e
[0x26e:0x275]
---
Predecessors: [0x97]
Successors: [0x2c6]
---
0x26e JUMPDEST
0x26f PUSH2 0x276
0x272 PUSH2 0x2c6
0x275 JUMP
---
0x26e: JUMPDEST 
0x26f: V151 = 0x276
0x272: V152 = 0x2c6
0x275: JUMP 0x2c6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x276]
Exit stack: [V10, 0x276]

================================

Block 0x276
[0x276:0x277]
---
Predecessors: [0x37d]
Successors: []
---
0x276 JUMPDEST
0x277 STOP
---
0x276: JUMPDEST 
0x277: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0xa2]
Successors: [0x27f, 0x283]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V153 = CALLVALUE
0x27a: V154 = ISZERO V153
0x27b: V155 = 0x283
0x27e: JUMPI 0x283 V154
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x278]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V156 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x283
[0x283:0x2ae]
---
Predecessors: [0x278]
Successors: [0x89a]
---
0x283 JUMPDEST
0x284 PUSH2 0x2af
0x287 PUSH1 0x4
0x289 DUP1
0x28a DUP1
0x28b CALLDATALOAD
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 AND
0x2a2 SWAP1
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP1
0x2a7 SWAP2
0x2a8 SWAP1
0x2a9 POP
0x2aa POP
0x2ab PUSH2 0x89a
0x2ae JUMP
---
0x283: JUMPDEST 
0x284: V157 = 0x2af
0x287: V158 = 0x4
0x28b: V159 = CALLDATALOAD 0x4
0x28c: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2a3: V162 = 0x20
0x2a5: V163 = ADD 0x20 0x4
0x2ab: V164 = 0x89a
0x2ae: JUMP 0x89a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2af, V161]
Exit stack: [V10, 0x2af, V161]

================================

Block 0x2af
[0x2af:0x2b0]
---
Predecessors: [0x9ad]
Successors: []
---
0x2af JUMPDEST
0x2b0 STOP
---
0x2af: JUMPDEST 
0x2b0: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b1
[0x2b1:0x2b7]
---
Predecessors: [0xad]
Successors: [0x2b8, 0x2bc]
---
0x2b1 JUMPDEST
0x2b2 CALLVALUE
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V165 = CALLVALUE
0x2b3: V166 = ISZERO V165
0x2b4: V167 = 0x2bc
0x2b7: JUMPI 0x2bc V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2b1]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V168 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bc
[0x2bc:0x2c3]
---
Predecessors: [0x2b1]
Successors: [0x9b0]
---
0x2bc JUMPDEST
0x2bd PUSH2 0x2c4
0x2c0 PUSH2 0x9b0
0x2c3 JUMP
---
0x2bc: JUMPDEST 
0x2bd: V169 = 0x2c4
0x2c0: V170 = 0x9b0
0x2c3: JUMP 0x9b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c4]
Exit stack: [V10, 0x2c4]

================================

Block 0x2c4
[0x2c4:0x2c5]
---
Predecessors: [0x9cc]
Successors: []
---
0x2c4 JUMPDEST
0x2c5 STOP
---
0x2c4: JUMPDEST 
0x2c5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c6
[0x2c6:0x2cf]
---
Predecessors: [0xb9, 0x26e, 0x6e3]
Successors: [0x2d0, 0x37c]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x0
0x2c9 CALLVALUE
0x2ca GT
0x2cb ISZERO
0x2cc PUSH2 0x37c
0x2cf JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V171 = 0x0
0x2c9: V172 = CALLVALUE
0x2ca: V173 = GT V172 0x0
0x2cb: V174 = ISZERO V173
0x2cc: V175 = 0x37c
0x2cf: JUMPI 0x37c V174
---
Entry stack: [V10, S1, {0xc1, 0x276, 0x739}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc1, 0x276, 0x739}]

================================

Block 0x2d0
[0x2d0:0x2d6]
---
Predecessors: [0x2c6]
Successors: [0x884]
---
0x2d0 PUSH2 0x2d7
0x2d3 PUSH2 0x884
0x2d6 JUMP
---
0x2d0: V176 = 0x2d7
0x2d3: V177 = 0x884
0x2d6: JUMP 0x884
---
Entry stack: [V10, S1, {0xc1, 0x276, 0x739}]
Stack pops: 0
Stack additions: [0x2d7]
Exit stack: [V10, S1, {0xc1, 0x276, 0x739}, 0x2d7]

================================

Block 0x2d7
[0x2d7:0x2df]
---
Predecessors: [0x88c]
Successors: [0x2e0, 0x32d]
---
0x2d7 JUMPDEST
0x2d8 CALLVALUE
0x2d9 LT
0x2da ISZERO
0x2db ISZERO
0x2dc PUSH2 0x32d
0x2df JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V178 = CALLVALUE
0x2d9: V179 = LT V178 V491
0x2da: V180 = ISZERO V179
0x2db: V181 = ISZERO V180
0x2dc: V182 = 0x32d
0x2df: JUMPI 0x32d V181
---
Entry stack: [V10, S2, S1, V491]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x2e0
[0x2e0:0x32c]
---
Predecessors: [0x2d7]
Successors: [0x32d]
---
0x2e0 CALLVALUE
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0x0
0x2e5 CALLER
0x2e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fb AND
0x2fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x311 AND
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x20
0x316 ADD
0x317 SWAP1
0x318 DUP2
0x319 MSTORE
0x31a PUSH1 0x20
0x31c ADD
0x31d PUSH1 0x0
0x31f SHA3
0x320 PUSH1 0x0
0x322 DUP3
0x323 DUP3
0x324 SLOAD
0x325 ADD
0x326 SWAP3
0x327 POP
0x328 POP
0x329 DUP2
0x32a SWAP1
0x32b SSTORE
0x32c POP
---
0x2e0: V183 = CALLVALUE
0x2e1: V184 = 0x1
0x2e3: V185 = 0x0
0x2e5: V186 = CALLER
0x2e6: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2fc: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x311: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x313: M[0x0] = V190
0x314: V191 = 0x20
0x316: V192 = ADD 0x20 0x0
0x319: M[0x20] = 0x1
0x31a: V193 = 0x20
0x31c: V194 = ADD 0x20 0x20
0x31d: V195 = 0x0
0x31f: V196 = SHA3 0x0 0x40
0x320: V197 = 0x0
0x324: V198 = S[V196]
0x325: V199 = ADD V198 V183
0x32b: S[V196] = V199
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x32d
[0x32d:0x37b]
---
Predecessors: [0x2d7, 0x2e0]
Successors: [0x37c]
---
0x32d JUMPDEST
0x32e CALLER
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x366 CALLVALUE
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b DUP3
0x36c DUP2
0x36d MSTORE
0x36e PUSH1 0x20
0x370 ADD
0x371 SWAP2
0x372 POP
0x373 POP
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 SWAP2
0x379 SUB
0x37a SWAP1
0x37b LOG2
---
0x32d: JUMPDEST 
0x32e: V200 = CALLER
0x32f: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x345: V203 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x366: V204 = CALLVALUE
0x367: V205 = 0x40
0x369: V206 = M[0x40]
0x36d: M[V206] = V204
0x36e: V207 = 0x20
0x370: V208 = ADD 0x20 V206
0x374: V209 = 0x40
0x376: V210 = M[0x40]
0x379: V211 = SUB V208 V210
0x37b: LOG V210 V211 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V202
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x37c
[0x37c:0x37c]
---
Predecessors: [0x2c6, 0x32d]
Successors: [0x37d]
---
0x37c JUMPDEST
---
0x37c: JUMPDEST 
---
Entry stack: [V10, S1, {0xc1, 0x276, 0x739}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0xc1, 0x276, 0x739}]

================================

Block 0x37d
[0x37d:0x37e]
---
Predecessors: [0x37c]
Successors: [0xc1, 0x276, 0x739]
---
0x37d JUMPDEST
0x37e JUMP
---
0x37d: JUMPDEST 
0x37e: JUMP {0xc1, 0x276, 0x739}
---
Entry stack: [V10, S1, {0xc1, 0x276, 0x739}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x37f
[0x37f:0x3d6]
---
Predecessors: [0xcf, 0x6be]
Successors: [0x3d7, 0x4cc]
---
0x37f JUMPDEST
0x380 PUSH1 0x0
0x382 DUP1
0x383 PUSH1 0x0
0x385 SWAP1
0x386 SLOAD
0x387 SWAP1
0x388 PUSH2 0x100
0x38b EXP
0x38c SWAP1
0x38d DIV
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 AND
0x3a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b9 AND
0x3ba CALLER
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 AND
0x3d1 EQ
0x3d2 ISZERO
0x3d3 PUSH2 0x4cc
0x3d6 JUMPI
---
0x37f: JUMPDEST 
0x380: V212 = 0x0
0x383: V213 = 0x0
0x386: V214 = S[0x0]
0x388: V215 = 0x100
0x38b: V216 = EXP 0x100 0x0
0x38d: V217 = DIV V214 0x1
0x38e: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x3a4: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b9: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3ba: V222 = CALLER
0x3bb: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3d1: V225 = EQ V224 V221
0x3d2: V226 = ISZERO V225
0x3d3: V227 = 0x4cc
0x3d6: JUMPI 0x4cc V226
---
Entry stack: [V10, 0x172, S3, {0x104, 0x6c8}, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x172, S3, {0x104, 0x6c8}, S1, S0, 0x0]

================================

Block 0x3d7
[0x3d7:0x3dd]
---
Predecessors: [0x37f]
Successors: [0x9ce]
---
0x3d7 PUSH2 0x3de
0x3da PUSH2 0x9ce
0x3dd JUMP
---
0x3d7: V228 = 0x3de
0x3da: V229 = 0x9ce
0x3dd: JUMP 0x9ce
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x3de]
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, 0x0, 0x3de]

================================

Block 0x3de
[0x3de:0x3e3]
---
Predecessors: [0x9e6]
Successors: [0x3e4, 0x4ca]
---
0x3de JUMPDEST
0x3df ISZERO
0x3e0 PUSH2 0x4ca
0x3e3 JUMPI
---
0x3de: JUMPDEST 
0x3df: V230 = ISZERO S0
0x3e0: V231 = 0x4ca
0x3e3: JUMPI 0x4ca V230
---
Entry stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, 0x0]

================================

Block 0x3e4
[0x3e4:0x42f]
---
Predecessors: [0x3de]
Successors: [0x430, 0x435]
---
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0x0
0x3e8 CALLER
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x414 AND
0x415 DUP2
0x416 MSTORE
0x417 PUSH1 0x20
0x419 ADD
0x41a SWAP1
0x41b DUP2
0x41c MSTORE
0x41d PUSH1 0x20
0x41f ADD
0x420 PUSH1 0x0
0x422 SHA3
0x423 SLOAD
0x424 SWAP1
0x425 POP
0x426 PUSH1 0x0
0x428 DUP2
0x429 GT
0x42a DUP1
0x42b ISZERO
0x42c PUSH2 0x435
0x42f JUMPI
---
0x3e4: V232 = 0x1
0x3e6: V233 = 0x0
0x3e8: V234 = CALLER
0x3e9: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x3ff: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x414: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x416: M[0x0] = V238
0x417: V239 = 0x20
0x419: V240 = ADD 0x20 0x0
0x41c: M[0x20] = 0x1
0x41d: V241 = 0x20
0x41f: V242 = ADD 0x20 0x20
0x420: V243 = 0x0
0x422: V244 = SHA3 0x0 0x40
0x423: V245 = S[V244]
0x426: V246 = 0x0
0x429: V247 = GT V245 0x0
0x42b: V248 = ISZERO V247
0x42c: V249 = 0x435
0x42f: JUMPI 0x435 V248
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, 0x0]
Stack pops: 1
Stack additions: [V245, V247]
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245, V247]

================================

Block 0x430
[0x430:0x434]
---
Predecessors: [0x3e4]
Successors: [0x435]
---
0x430 POP
0x431 DUP1
0x432 DUP3
0x433 GT
0x434 ISZERO
---
0x433: V250 = GT S2 V245
0x434: V251 = ISZERO V250
---
Entry stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, V245, V247]
Stack pops: 3
Stack additions: [S2, S1, V251]
Exit stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, V245, V251]

================================

Block 0x435
[0x435:0x43a]
---
Predecessors: [0x3e4, 0x430]
Successors: [0x43b, 0x4c9]
---
0x435 JUMPDEST
0x436 ISZERO
0x437 PUSH2 0x4c9
0x43a JUMPI
---
0x435: JUMPDEST 
0x436: V252 = ISZERO S0
0x437: V253 = 0x4c9
0x43a: JUMPI 0x4c9 V252
---
Entry stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, V245, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, V245]

================================

Block 0x43b
[0x43b:0x475]
---
Predecessors: [0x435]
Successors: [0x476, 0x47a]
---
0x43b DUP3
0x43c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x451 AND
0x452 PUSH2 0x8fc
0x455 DUP4
0x456 SWAP1
0x457 DUP2
0x458 ISZERO
0x459 MUL
0x45a SWAP1
0x45b PUSH1 0x40
0x45d MLOAD
0x45e PUSH1 0x0
0x460 PUSH1 0x40
0x462 MLOAD
0x463 DUP1
0x464 DUP4
0x465 SUB
0x466 DUP2
0x467 DUP6
0x468 DUP9
0x469 DUP9
0x46a CALL
0x46b SWAP4
0x46c POP
0x46d POP
0x46e POP
0x46f POP
0x470 ISZERO
0x471 ISZERO
0x472 PUSH2 0x47a
0x475 JUMPI
---
0x43c: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x451: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x452: V256 = 0x8fc
0x458: V257 = ISZERO S1
0x459: V258 = MUL V257 0x8fc
0x45b: V259 = 0x40
0x45d: V260 = M[0x40]
0x45e: V261 = 0x0
0x460: V262 = 0x40
0x462: V263 = M[0x40]
0x465: V264 = SUB V260 V263
0x46a: V265 = CALL V258 V255 S1 V263 V264 V263 0x0
0x470: V266 = ISZERO V265
0x471: V267 = ISZERO V266
0x472: V268 = 0x47a
0x475: JUMPI 0x47a V267
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]

================================

Block 0x476
[0x476:0x479]
---
Predecessors: [0x43b]
Successors: []
---
0x476 PUSH1 0x0
0x478 DUP1
0x479 REVERT
---
0x476: V269 = 0x0
0x479: REVERT 0x0 0x0
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]

================================

Block 0x47a
[0x47a:0x4c8]
---
Predecessors: [0x43b]
Successors: [0x4c9]
---
0x47a JUMPDEST
0x47b DUP3
0x47c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x491 AND
0x492 PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x4b3 DUP4
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 DUP1
0x4b8 DUP3
0x4b9 DUP2
0x4ba MSTORE
0x4bb PUSH1 0x20
0x4bd ADD
0x4be SWAP2
0x4bf POP
0x4c0 POP
0x4c1 PUSH1 0x40
0x4c3 MLOAD
0x4c4 DUP1
0x4c5 SWAP2
0x4c6 SUB
0x4c7 SWAP1
0x4c8 LOG2
---
0x47a: JUMPDEST 
0x47c: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x491: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x492: V272 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x4b4: V273 = 0x40
0x4b6: V274 = M[0x40]
0x4ba: M[V274] = S1
0x4bb: V275 = 0x20
0x4bd: V276 = ADD 0x20 V274
0x4c1: V277 = 0x40
0x4c3: V278 = M[0x40]
0x4c6: V279 = SUB V276 V278
0x4c8: LOG V278 V279 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V271
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]

================================

Block 0x4c9
[0x4c9:0x4c9]
---
Predecessors: [0x435, 0x47a]
Successors: [0x4ca]
---
0x4c9 JUMPDEST
---
0x4c9: JUMPDEST 
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, V245]

================================

Block 0x4ca
[0x4ca:0x4ca]
---
Predecessors: [0x3de, 0x4c9]
Successors: [0x4cb]
---
0x4ca JUMPDEST
---
0x4ca: JUMPDEST 
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, S0]

================================

Block 0x4cb
[0x4cb:0x4cb]
---
Predecessors: [0x4ca]
Successors: [0x4cc]
---
0x4cb JUMPDEST
---
0x4cb: JUMPDEST 
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, S0]

================================

Block 0x4cc
[0x4cc:0x4cc]
---
Predecessors: [0x37f, 0x4cb]
Successors: [0x4cd]
---
0x4cc JUMPDEST
---
0x4cc: JUMPDEST 
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, S0]

================================

Block 0x4cd
[0x4cd:0x4d1]
---
Predecessors: [0x4cc]
Successors: [0x104, 0x6c8]
---
0x4cd JUMPDEST
0x4ce POP
0x4cf POP
0x4d0 POP
0x4d1 JUMP
---
0x4cd: JUMPDEST 
0x4d1: JUMP {0x104, 0x6c8}
---
Entry stack: [V10, 0x172, S4, {0x104, 0x6c8}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x172, S4]

================================

Block 0x4d2
[0x4d2:0x529]
---
Predecessors: [0x106, 0x864]
Successors: [0x52a, 0x6b7]
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 PUSH1 0x0
0x4d8 SWAP1
0x4d9 SLOAD
0x4da SWAP1
0x4db PUSH2 0x100
0x4de EXP
0x4df SWAP1
0x4e0 DIV
0x4e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f6 AND
0x4f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50c AND
0x50d CALLER
0x50e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x523 AND
0x524 EQ
0x525 ISZERO
0x526 PUSH2 0x6b7
0x529 JUMPI
---
0x4d2: JUMPDEST 
0x4d3: V280 = 0x0
0x4d6: V281 = 0x0
0x4d9: V282 = S[0x0]
0x4db: V283 = 0x100
0x4de: V284 = EXP 0x100 0x0
0x4e0: V285 = DIV V282 0x1
0x4e1: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f6: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x4f7: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x50d: V290 = CALLER
0x50e: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x523: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x524: V293 = EQ V292 V289
0x525: V294 = ISZERO V293
0x526: V295 = 0x6b7
0x529: JUMPI 0x6b7 V294
---
Entry stack: [V10, 0x1f7, S4, {0x15a, 0x873}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1f7, S4, {0x15a, 0x873}, S2, S1, S0, 0x0]

================================

Block 0x52a
[0x52a:0x5c7]
---
Predecessors: [0x4d2]
Successors: [0x5c8, 0x5cc]
---
0x52a DUP4
0x52b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x540 AND
0x541 PUSH4 0x70a08231
0x546 ADDRESS
0x547 PUSH1 0x0
0x549 PUSH1 0x40
0x54b MLOAD
0x54c PUSH1 0x20
0x54e ADD
0x54f MSTORE
0x550 PUSH1 0x40
0x552 MLOAD
0x553 DUP3
0x554 PUSH4 0xffffffff
0x559 AND
0x55a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x578 MUL
0x579 DUP2
0x57a MSTORE
0x57b PUSH1 0x4
0x57d ADD
0x57e DUP1
0x57f DUP3
0x580 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x595 AND
0x596 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ab AND
0x5ac DUP2
0x5ad MSTORE
0x5ae PUSH1 0x20
0x5b0 ADD
0x5b1 SWAP2
0x5b2 POP
0x5b3 POP
0x5b4 PUSH1 0x20
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 DUP1
0x5ba DUP4
0x5bb SUB
0x5bc DUP2
0x5bd PUSH1 0x0
0x5bf DUP8
0x5c0 DUP1
0x5c1 EXTCODESIZE
0x5c2 ISZERO
0x5c3 ISZERO
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x52b: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x540: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x541: V298 = 0x70a08231
0x546: V299 = ADDRESS
0x547: V300 = 0x0
0x549: V301 = 0x40
0x54b: V302 = M[0x40]
0x54c: V303 = 0x20
0x54e: V304 = ADD 0x20 V302
0x54f: M[V304] = 0x0
0x550: V305 = 0x40
0x552: V306 = M[0x40]
0x554: V307 = 0xffffffff
0x559: V308 = AND 0xffffffff 0x70a08231
0x55a: V309 = 0x100000000000000000000000000000000000000000000000000000000
0x578: V310 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x57a: M[V306] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x57b: V311 = 0x4
0x57d: V312 = ADD 0x4 V306
0x580: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x595: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x596: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ab: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x5ad: M[V312] = V316
0x5ae: V317 = 0x20
0x5b0: V318 = ADD 0x20 V312
0x5b4: V319 = 0x20
0x5b6: V320 = 0x40
0x5b8: V321 = M[0x40]
0x5bb: V322 = SUB V318 V321
0x5bd: V323 = 0x0
0x5c1: V324 = EXTCODESIZE V297
0x5c2: V325 = ISZERO V324
0x5c3: V326 = ISZERO V325
0x5c4: V327 = 0x5cc
0x5c7: JUMPI 0x5cc V326
---
Entry stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V297, 0x70a08231, V318, 0x20, V321, V322, V321, 0x0, V297]
Exit stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, 0x0, V297, 0x70a08231, V318, 0x20, V321, V322, V321, 0x0, V297]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x52a]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V328 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, 0x0, V297, 0x70a08231, V318, 0x20, V321, V322, V321, 0x0, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, 0x0, V297, 0x70a08231, V318, 0x20, V321, V322, V321, 0x0, V297]

================================

Block 0x5cc
[0x5cc:0x5d8]
---
Predecessors: [0x52a]
Successors: [0x5d9, 0x5dd]
---
0x5cc JUMPDEST
0x5cd PUSH2 0x2c6
0x5d0 GAS
0x5d1 SUB
0x5d2 CALL
0x5d3 ISZERO
0x5d4 ISZERO
0x5d5 PUSH2 0x5dd
0x5d8 JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V329 = 0x2c6
0x5d0: V330 = GAS
0x5d1: V331 = SUB V330 0x2c6
0x5d2: V332 = CALL V331 V297 0x0 V321 V322 V321 0x20
0x5d3: V333 = ISZERO V332
0x5d4: V334 = ISZERO V333
0x5d5: V335 = 0x5dd
0x5d8: JUMPI 0x5dd V334
---
Entry stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, 0x0, V297, 0x70a08231, V318, 0x20, V321, V322, V321, 0x0, V297]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, 0x0, V297, 0x70a08231, V318]

================================

Block 0x5d9
[0x5d9:0x5dc]
---
Predecessors: [0x5cc]
Successors: []
---
0x5d9 PUSH1 0x0
0x5db DUP1
0x5dc REVERT
---
0x5d9: V336 = 0x0
0x5dc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, 0x0, V297, 0x70a08231, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, 0x0, V297, 0x70a08231, V318]

================================

Block 0x5dd
[0x5dd:0x5f3]
---
Predecessors: [0x5cc]
Successors: [0x5f4, 0x5f9]
---
0x5dd JUMPDEST
0x5de POP
0x5df POP
0x5e0 POP
0x5e1 PUSH1 0x40
0x5e3 MLOAD
0x5e4 DUP1
0x5e5 MLOAD
0x5e6 SWAP1
0x5e7 POP
0x5e8 SWAP1
0x5e9 POP
0x5ea DUP2
0x5eb DUP2
0x5ec LT
0x5ed ISZERO
0x5ee DUP1
0x5ef ISZERO
0x5f0 PUSH2 0x5f9
0x5f3 JUMPI
---
0x5dd: JUMPDEST 
0x5e1: V337 = 0x40
0x5e3: V338 = M[0x40]
0x5e5: V339 = M[V338]
0x5ec: V340 = LT V339 S4
0x5ed: V341 = ISZERO V340
0x5ef: V342 = ISZERO V341
0x5f0: V343 = 0x5f9
0x5f3: JUMPI 0x5f9 V342
---
Entry stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, 0x0, V297, 0x70a08231, V318]
Stack pops: 5
Stack additions: [S4, V339, V341]
Exit stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, V339, V341]

================================

Block 0x5f4
[0x5f4:0x5f8]
---
Predecessors: [0x5dd]
Successors: [0x5f9]
---
0x5f4 POP
0x5f5 PUSH1 0x0
0x5f7 DUP3
0x5f8 GT
---
0x5f5: V344 = 0x0
0x5f8: V345 = GT S2 0x0
---
Entry stack: [V10, 0x1f7, S6, {0x15a, 0x873}, S4, S3, S2, V339, V341]
Stack pops: 3
Stack additions: [S2, S1, V345]
Exit stack: [V10, 0x1f7, S6, {0x15a, 0x873}, S4, S3, S2, V339, V345]

================================

Block 0x5f9
[0x5f9:0x5fe]
---
Predecessors: [0x5dd, 0x5f4]
Successors: [0x5ff, 0x6b5]
---
0x5f9 JUMPDEST
0x5fa ISZERO
0x5fb PUSH2 0x6b5
0x5fe JUMPI
---
0x5f9: JUMPDEST 
0x5fa: V346 = ISZERO S0
0x5fb: V347 = 0x6b5
0x5fe: JUMPI 0x6b5 V346
---
Entry stack: [V10, 0x1f7, S6, {0x15a, 0x873}, S4, S3, S2, V339, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1f7, S6, {0x15a, 0x873}, S4, S3, S2, V339]

================================

Block 0x5ff
[0x5ff:0x69b]
---
Predecessors: [0x5f9]
Successors: [0x69c, 0x6a0]
---
0x5ff DUP4
0x600 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x615 AND
0x616 PUSH4 0xa9059cbb
0x61b DUP5
0x61c DUP5
0x61d PUSH1 0x40
0x61f MLOAD
0x620 DUP4
0x621 PUSH4 0xffffffff
0x626 AND
0x627 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x645 MUL
0x646 DUP2
0x647 MSTORE
0x648 PUSH1 0x4
0x64a ADD
0x64b DUP1
0x64c DUP4
0x64d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x662 AND
0x663 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x678 AND
0x679 DUP2
0x67a MSTORE
0x67b PUSH1 0x20
0x67d ADD
0x67e DUP3
0x67f DUP2
0x680 MSTORE
0x681 PUSH1 0x20
0x683 ADD
0x684 SWAP3
0x685 POP
0x686 POP
0x687 POP
0x688 PUSH1 0x0
0x68a PUSH1 0x40
0x68c MLOAD
0x68d DUP1
0x68e DUP4
0x68f SUB
0x690 DUP2
0x691 PUSH1 0x0
0x693 DUP8
0x694 DUP1
0x695 EXTCODESIZE
0x696 ISZERO
0x697 ISZERO
0x698 PUSH2 0x6a0
0x69b JUMPI
---
0x600: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x615: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x616: V350 = 0xa9059cbb
0x61d: V351 = 0x40
0x61f: V352 = M[0x40]
0x621: V353 = 0xffffffff
0x626: V354 = AND 0xffffffff 0xa9059cbb
0x627: V355 = 0x100000000000000000000000000000000000000000000000000000000
0x645: V356 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x647: M[V352] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x648: V357 = 0x4
0x64a: V358 = ADD 0x4 V352
0x64d: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x662: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x663: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x678: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x67a: M[V358] = V362
0x67b: V363 = 0x20
0x67d: V364 = ADD 0x20 V358
0x680: M[V364] = S1
0x681: V365 = 0x20
0x683: V366 = ADD 0x20 V364
0x688: V367 = 0x0
0x68a: V368 = 0x40
0x68c: V369 = M[0x40]
0x68f: V370 = SUB V366 V369
0x691: V371 = 0x0
0x695: V372 = EXTCODESIZE V349
0x696: V373 = ISZERO V372
0x697: V374 = ISZERO V373
0x698: V375 = 0x6a0
0x69b: JUMPI 0x6a0 V374
---
Entry stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, V339]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V349, 0xa9059cbb, V366, 0x0, V369, V370, V369, 0x0, V349]
Exit stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, V339, V349, 0xa9059cbb, V366, 0x0, V369, V370, V369, 0x0, V349]

================================

Block 0x69c
[0x69c:0x69f]
---
Predecessors: [0x5ff]
Successors: []
---
0x69c PUSH1 0x0
0x69e DUP1
0x69f REVERT
---
0x69c: V376 = 0x0
0x69f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, V339, V349, 0xa9059cbb, V366, 0x0, V369, V370, V369, 0x0, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, V339, V349, 0xa9059cbb, V366, 0x0, V369, V370, V369, 0x0, V349]

================================

Block 0x6a0
[0x6a0:0x6ac]
---
Predecessors: [0x5ff]
Successors: [0x6ad, 0x6b1]
---
0x6a0 JUMPDEST
0x6a1 PUSH2 0x2c6
0x6a4 GAS
0x6a5 SUB
0x6a6 CALL
0x6a7 ISZERO
0x6a8 ISZERO
0x6a9 PUSH2 0x6b1
0x6ac JUMPI
---
0x6a0: JUMPDEST 
0x6a1: V377 = 0x2c6
0x6a4: V378 = GAS
0x6a5: V379 = SUB V378 0x2c6
0x6a6: V380 = CALL V379 V349 0x0 V369 V370 V369 0x0
0x6a7: V381 = ISZERO V380
0x6a8: V382 = ISZERO V381
0x6a9: V383 = 0x6b1
0x6ac: JUMPI 0x6b1 V382
---
Entry stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, V339, V349, 0xa9059cbb, V366, 0x0, V369, V370, V369, 0x0, V349]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1f7, S14, {0x15a, 0x873}, S12, S11, S10, V339, V349, 0xa9059cbb, V366]

================================

Block 0x6ad
[0x6ad:0x6b0]
---
Predecessors: [0x6a0]
Successors: []
---
0x6ad PUSH1 0x0
0x6af DUP1
0x6b0 REVERT
---
0x6ad: V384 = 0x0
0x6b0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, V339, V349, 0xa9059cbb, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, V339, V349, 0xa9059cbb, V366]

================================

Block 0x6b1
[0x6b1:0x6b4]
---
Predecessors: [0x6a0]
Successors: [0x6b5]
---
0x6b1 JUMPDEST
0x6b2 POP
0x6b3 POP
0x6b4 POP
---
0x6b1: JUMPDEST 
---
Entry stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, V339, V349, 0xa9059cbb, V366]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1f7, S8, {0x15a, 0x873}, S6, S5, S4, V339]

================================

Block 0x6b5
[0x6b5:0x6b5]
---
Predecessors: [0x5f9, 0x6b1]
Successors: [0x6b6]
---
0x6b5 JUMPDEST
---
0x6b5: JUMPDEST 
---
Entry stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, V339]

================================

Block 0x6b6
[0x6b6:0x6b6]
---
Predecessors: [0x6b5]
Successors: [0x6b7]
---
0x6b6 JUMPDEST
---
0x6b6: JUMPDEST 
---
Entry stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, V339]

================================

Block 0x6b7
[0x6b7:0x6b7]
---
Predecessors: [0x4d2, 0x6b6]
Successors: [0x6b8]
---
0x6b7 JUMPDEST
---
0x6b7: JUMPDEST 
---
Entry stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, S0]

================================

Block 0x6b8
[0x6b8:0x6bd]
---
Predecessors: [0x6b7]
Successors: [0x15a, 0x873]
---
0x6b8 JUMPDEST
0x6b9 POP
0x6ba POP
0x6bb POP
0x6bc POP
0x6bd JUMP
---
0x6b8: JUMPDEST 
0x6bd: JUMP {0x15a, 0x873}
---
Entry stack: [V10, 0x1f7, S5, {0x15a, 0x873}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x1f7, S5]

================================

Block 0x6be
[0x6be:0x6c7]
---
Predecessors: [0x15c]
Successors: [0x37f]
---
0x6be JUMPDEST
0x6bf PUSH2 0x6c8
0x6c2 CALLER
0x6c3 DUP3
0x6c4 PUSH2 0x37f
0x6c7 JUMP
---
0x6be: JUMPDEST 
0x6bf: V385 = 0x6c8
0x6c2: V386 = CALLER
0x6c4: V387 = 0x37f
0x6c7: JUMP 0x37f
---
Entry stack: [V10, 0x172, V82]
Stack pops: 1
Stack additions: [S0, 0x6c8, V386, S0]
Exit stack: [V10, 0x172, V82, 0x6c8, V386, V82]

================================

Block 0x6c8
[0x6c8:0x6c8]
---
Predecessors: [0x4cd]
Successors: [0x6c9]
---
0x6c8 JUMPDEST
---
0x6c8: JUMPDEST 
---
Entry stack: [V10, 0x172, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x172, S0]

================================

Block 0x6c9
[0x6c9:0x6cb]
---
Predecessors: [0x6c8]
Successors: [0x172]
---
0x6c9 JUMPDEST
0x6ca POP
0x6cb JUMP
---
0x6c9: JUMPDEST 
0x6cb: JUMP 0x172
---
Entry stack: [V10, 0x172, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x6cc
[0x6cc:0x6e2]
---
Predecessors: [0x174]
Successors: [0x6e3, 0x73b]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x3
0x6cf PUSH1 0x0
0x6d1 SWAP1
0x6d2 SLOAD
0x6d3 SWAP1
0x6d4 PUSH2 0x100
0x6d7 EXP
0x6d8 SWAP1
0x6d9 DIV
0x6da PUSH1 0xff
0x6dc AND
0x6dd ISZERO
0x6de ISZERO
0x6df PUSH2 0x73b
0x6e2 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V388 = 0x3
0x6cf: V389 = 0x0
0x6d2: V390 = S[0x3]
0x6d4: V391 = 0x100
0x6d7: V392 = EXP 0x100 0x0
0x6d9: V393 = DIV V390 0x1
0x6da: V394 = 0xff
0x6dc: V395 = AND 0xff V393
0x6dd: V396 = ISZERO V395
0x6de: V397 = ISZERO V396
0x6df: V398 = 0x73b
0x6e2: JUMPI 0x73b V397
---
Entry stack: [V10, 0x17c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x17c]

================================

Block 0x6e3
[0x6e3:0x738]
---
Predecessors: [0x6cc]
Successors: [0x2c6]
---
0x6e3 CALLER
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 PUSH2 0x100
0x6ea EXP
0x6eb DUP2
0x6ec SLOAD
0x6ed DUP2
0x6ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x703 MUL
0x704 NOT
0x705 AND
0x706 SWAP1
0x707 DUP4
0x708 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71d AND
0x71e MUL
0x71f OR
0x720 SWAP1
0x721 SSTORE
0x722 POP
0x723 PUSH8 0x3782dace9d90000
0x72c PUSH1 0x2
0x72e DUP2
0x72f SWAP1
0x730 SSTORE
0x731 POP
0x732 PUSH2 0x739
0x735 PUSH2 0x2c6
0x738 JUMP
---
0x6e3: V399 = CALLER
0x6e4: V400 = 0x0
0x6e7: V401 = 0x100
0x6ea: V402 = EXP 0x100 0x0
0x6ec: V403 = S[0x0]
0x6ee: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x703: V405 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x704: V406 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x705: V407 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V403
0x708: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x71d: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x71e: V410 = MUL V409 0x1
0x71f: V411 = OR V410 V407
0x721: S[0x0] = V411
0x723: V412 = 0x3782dace9d90000
0x72c: V413 = 0x2
0x730: S[0x2] = 0x3782dace9d90000
0x732: V414 = 0x739
0x735: V415 = 0x2c6
0x738: JUMP 0x2c6
---
Entry stack: [V10, 0x17c]
Stack pops: 0
Stack additions: [0x739]
Exit stack: [V10, 0x17c, 0x739]

================================

Block 0x739
[0x739:0x739]
---
Predecessors: [0x37d]
Successors: [0x73a]
---
0x739 JUMPDEST
---
0x739: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x73a
[0x73a:0x73a]
---
Predecessors: [0x739]
Successors: [0x73b]
---
0x73a JUMPDEST
---
0x73a: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x73b
[0x73b:0x73b]
---
Predecessors: [0x6cc, 0x73a]
Successors: [0x73c]
---
0x73b JUMPDEST
---
0x73b: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x73c
[0x73c:0x73d]
---
Predecessors: [0x73b]
Successors: [0x17c]
---
0x73c JUMPDEST
0x73d JUMP
---
0x73c: JUMPDEST 
0x73d: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x73e
[0x73e:0x755]
---
Predecessors: [0x189]
Successors: [0x1b5]
---
0x73e JUMPDEST
0x73f PUSH1 0x1
0x741 PUSH1 0x20
0x743 MSTORE
0x744 DUP1
0x745 PUSH1 0x0
0x747 MSTORE
0x748 PUSH1 0x40
0x74a PUSH1 0x0
0x74c SHA3
0x74d PUSH1 0x0
0x74f SWAP2
0x750 POP
0x751 SWAP1
0x752 POP
0x753 SLOAD
0x754 DUP2
0x755 JUMP
---
0x73e: JUMPDEST 
0x73f: V416 = 0x1
0x741: V417 = 0x20
0x743: M[0x20] = 0x1
0x745: V418 = 0x0
0x747: M[0x0] = V96
0x748: V419 = 0x40
0x74a: V420 = 0x0
0x74c: V421 = SHA3 0x0 0x40
0x74d: V422 = 0x0
0x753: V423 = S[V421]
0x755: JUMP 0x1b5
---
Entry stack: [V10, 0x1b5, V96]
Stack pops: 2
Stack additions: [S1, V423]
Exit stack: [V10, 0x1b5, V423]

================================

Block 0x756
[0x756:0x7ab]
---
Predecessors: [0x1cb]
Successors: [0x7ac, 0x875]
---
0x756 JUMPDEST
0x757 PUSH1 0x0
0x759 DUP1
0x75a SWAP1
0x75b SLOAD
0x75c SWAP1
0x75d PUSH2 0x100
0x760 EXP
0x761 SWAP1
0x762 DIV
0x763 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x778 AND
0x779 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78e AND
0x78f CALLER
0x790 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a5 AND
0x7a6 EQ
0x7a7 ISZERO
0x7a8 PUSH2 0x875
0x7ab JUMPI
---
0x756: JUMPDEST 
0x757: V424 = 0x0
0x75b: V425 = S[0x0]
0x75d: V426 = 0x100
0x760: V427 = EXP 0x100 0x0
0x762: V428 = DIV V425 0x1
0x763: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x778: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x779: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x78f: V433 = CALLER
0x790: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a5: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x7a6: V436 = EQ V435 V432
0x7a7: V437 = ISZERO V436
0x7a8: V438 = 0x875
0x7ab: JUMPI 0x875 V437
---
Entry stack: [V10, 0x1f7, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, V111]

================================

Block 0x7ac
[0x7ac:0x84e]
---
Predecessors: [0x756]
Successors: [0x84f, 0x853]
---
0x7ac PUSH2 0x873
0x7af DUP2
0x7b0 CALLER
0x7b1 DUP4
0x7b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c7 AND
0x7c8 PUSH4 0x70a08231
0x7cd ADDRESS
0x7ce PUSH1 0x0
0x7d0 PUSH1 0x40
0x7d2 MLOAD
0x7d3 PUSH1 0x20
0x7d5 ADD
0x7d6 MSTORE
0x7d7 PUSH1 0x40
0x7d9 MLOAD
0x7da DUP3
0x7db PUSH4 0xffffffff
0x7e0 AND
0x7e1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7ff MUL
0x800 DUP2
0x801 MSTORE
0x802 PUSH1 0x4
0x804 ADD
0x805 DUP1
0x806 DUP3
0x807 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81c AND
0x81d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x832 AND
0x833 DUP2
0x834 MSTORE
0x835 PUSH1 0x20
0x837 ADD
0x838 SWAP2
0x839 POP
0x83a POP
0x83b PUSH1 0x20
0x83d PUSH1 0x40
0x83f MLOAD
0x840 DUP1
0x841 DUP4
0x842 SUB
0x843 DUP2
0x844 PUSH1 0x0
0x846 DUP8
0x847 DUP1
0x848 EXTCODESIZE
0x849 ISZERO
0x84a ISZERO
0x84b PUSH2 0x853
0x84e JUMPI
---
0x7ac: V439 = 0x873
0x7b0: V440 = CALLER
0x7b2: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c7: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x7c8: V443 = 0x70a08231
0x7cd: V444 = ADDRESS
0x7ce: V445 = 0x0
0x7d0: V446 = 0x40
0x7d2: V447 = M[0x40]
0x7d3: V448 = 0x20
0x7d5: V449 = ADD 0x20 V447
0x7d6: M[V449] = 0x0
0x7d7: V450 = 0x40
0x7d9: V451 = M[0x40]
0x7db: V452 = 0xffffffff
0x7e0: V453 = AND 0xffffffff 0x70a08231
0x7e1: V454 = 0x100000000000000000000000000000000000000000000000000000000
0x7ff: V455 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x801: M[V451] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x802: V456 = 0x4
0x804: V457 = ADD 0x4 V451
0x807: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x81c: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x81d: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x832: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x834: M[V457] = V461
0x835: V462 = 0x20
0x837: V463 = ADD 0x20 V457
0x83b: V464 = 0x20
0x83d: V465 = 0x40
0x83f: V466 = M[0x40]
0x842: V467 = SUB V463 V466
0x844: V468 = 0x0
0x848: V469 = EXTCODESIZE V442
0x849: V470 = ISZERO V469
0x84a: V471 = ISZERO V470
0x84b: V472 = 0x853
0x84e: JUMPI 0x853 V471
---
Entry stack: [V10, 0x1f7, V111]
Stack pops: 1
Stack additions: [S0, 0x873, S0, V440, V442, 0x70a08231, V463, 0x20, V466, V467, V466, 0x0, V442]
Exit stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463, 0x20, V466, V467, V466, 0x0, V442]

================================

Block 0x84f
[0x84f:0x852]
---
Predecessors: [0x7ac]
Successors: []
---
0x84f PUSH1 0x0
0x851 DUP1
0x852 REVERT
---
0x84f: V473 = 0x0
0x852: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463, 0x20, V466, V467, V466, 0x0, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463, 0x20, V466, V467, V466, 0x0, V442]

================================

Block 0x853
[0x853:0x85f]
---
Predecessors: [0x7ac]
Successors: [0x860, 0x864]
---
0x853 JUMPDEST
0x854 PUSH2 0x2c6
0x857 GAS
0x858 SUB
0x859 CALL
0x85a ISZERO
0x85b ISZERO
0x85c PUSH2 0x864
0x85f JUMPI
---
0x853: JUMPDEST 
0x854: V474 = 0x2c6
0x857: V475 = GAS
0x858: V476 = SUB V475 0x2c6
0x859: V477 = CALL V476 V442 0x0 V466 V467 V466 0x20
0x85a: V478 = ISZERO V477
0x85b: V479 = ISZERO V478
0x85c: V480 = 0x864
0x85f: JUMPI 0x864 V479
---
Entry stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463, 0x20, V466, V467, V466, 0x0, V442]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463]

================================

Block 0x860
[0x860:0x863]
---
Predecessors: [0x853]
Successors: []
---
0x860 PUSH1 0x0
0x862 DUP1
0x863 REVERT
---
0x860: V481 = 0x0
0x863: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463]

================================

Block 0x864
[0x864:0x872]
---
Predecessors: [0x853]
Successors: [0x4d2]
---
0x864 JUMPDEST
0x865 POP
0x866 POP
0x867 POP
0x868 PUSH1 0x40
0x86a MLOAD
0x86b DUP1
0x86c MLOAD
0x86d SWAP1
0x86e POP
0x86f PUSH2 0x4d2
0x872 JUMP
---
0x864: JUMPDEST 
0x868: V482 = 0x40
0x86a: V483 = M[0x40]
0x86c: V484 = M[V483]
0x86f: V485 = 0x4d2
0x872: JUMP 0x4d2
---
Entry stack: [V10, 0x1f7, V111, 0x873, V111, V440, V442, 0x70a08231, V463]
Stack pops: 3
Stack additions: [V484]
Exit stack: [V10, 0x1f7, V111, 0x873, V111, V440, V484]

================================

Block 0x873
[0x873:0x873]
---
Predecessors: [0x6b8]
Successors: [0x874]
---
0x873 JUMPDEST
---
0x873: JUMPDEST 
---
Entry stack: [V10, 0x1f7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S0]

================================

Block 0x874
[0x874:0x874]
---
Predecessors: [0x873]
Successors: [0x875]
---
0x874 JUMPDEST
---
0x874: JUMPDEST 
---
Entry stack: [V10, 0x1f7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S0]

================================

Block 0x875
[0x875:0x875]
---
Predecessors: [0x756, 0x874]
Successors: [0x876]
---
0x875 JUMPDEST
---
0x875: JUMPDEST 
---
Entry stack: [V10, 0x1f7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f7, S0]

================================

Block 0x876
[0x876:0x878]
---
Predecessors: [0x875]
Successors: [0x1f7]
---
0x876 JUMPDEST
0x877 POP
0x878 JUMP
---
0x876: JUMPDEST 
0x878: JUMP 0x1f7
---
Entry stack: [V10, 0x1f7, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x879
[0x879:0x880]
---
Predecessors: [0x204]
Successors: [0x881]
---
0x879 JUMPDEST
0x87a PUSH1 0x0
0x87c PUSH1 0x4
0x87e SLOAD
0x87f SWAP1
0x880 POP
---
0x879: JUMPDEST 
0x87a: V486 = 0x0
0x87c: V487 = 0x4
0x87e: V488 = S[0x4]
---
Entry stack: [V10, 0x20c]
Stack pops: 0
Stack additions: [V488]
Exit stack: [V10, 0x20c, V488]

================================

Block 0x881
[0x881:0x883]
---
Predecessors: [0x879]
Successors: [0x20c]
---
0x881 JUMPDEST
0x882 SWAP1
0x883 JUMP
---
0x881: JUMPDEST 
0x883: JUMP 0x20c
---
Entry stack: [V10, 0x20c, V488]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V488]

================================

Block 0x884
[0x884:0x88b]
---
Predecessors: [0x22d, 0x2d0]
Successors: [0x88c]
---
0x884 JUMPDEST
0x885 PUSH1 0x0
0x887 PUSH1 0x2
0x889 SLOAD
0x88a SWAP1
0x88b POP
---
0x884: JUMPDEST 
0x885: V489 = 0x0
0x887: V490 = 0x2
0x889: V491 = S[0x2]
---
Entry stack: [V10, S2, S1, {0x235, 0x2d7}]
Stack pops: 0
Stack additions: [V491]
Exit stack: [V10, S2, S1, {0x235, 0x2d7}, V491]

================================

Block 0x88c
[0x88c:0x88e]
---
Predecessors: [0x884]
Successors: [0x235, 0x2d7]
---
0x88c JUMPDEST
0x88d SWAP1
0x88e JUMP
---
0x88c: JUMPDEST 
0x88e: JUMP {0x235, 0x2d7}
---
Entry stack: [V10, S3, S2, {0x235, 0x2d7}, V491]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S3, S2, V491]

================================

Block 0x88f
[0x88f:0x896]
---
Predecessors: [0x256]
Successors: [0x897]
---
0x88f JUMPDEST
0x890 DUP1
0x891 PUSH1 0x4
0x893 DUP2
0x894 SWAP1
0x895 SSTORE
0x896 POP
---
0x88f: JUMPDEST 
0x891: V492 = 0x4
0x895: S[0x4] = V147
---
Entry stack: [V10, 0x26c, V147]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x26c, V147]

================================

Block 0x897
[0x897:0x899]
---
Predecessors: [0x88f]
Successors: [0x26c]
---
0x897 JUMPDEST
0x898 POP
0x899 JUMP
---
0x897: JUMPDEST 
0x899: JUMP 0x26c
---
Entry stack: [V10, 0x26c, V147]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x89a
[0x89a:0x8ef]
---
Predecessors: [0x283]
Successors: [0x8f0, 0x9ac]
---
0x89a JUMPDEST
0x89b PUSH1 0x0
0x89d DUP1
0x89e SWAP1
0x89f SLOAD
0x8a0 SWAP1
0x8a1 PUSH2 0x100
0x8a4 EXP
0x8a5 SWAP1
0x8a6 DIV
0x8a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bc AND
0x8bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d2 AND
0x8d3 CALLER
0x8d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e9 AND
0x8ea EQ
0x8eb ISZERO
0x8ec PUSH2 0x9ac
0x8ef JUMPI
---
0x89a: JUMPDEST 
0x89b: V493 = 0x0
0x89f: V494 = S[0x0]
0x8a1: V495 = 0x100
0x8a4: V496 = EXP 0x100 0x0
0x8a6: V497 = DIV V494 0x1
0x8a7: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bc: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x8bd: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d2: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x8d3: V502 = CALLER
0x8d4: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x8ea: V505 = EQ V504 V501
0x8eb: V506 = ISZERO V505
0x8ec: V507 = 0x9ac
0x8ef: JUMPI 0x9ac V506
---
Entry stack: [V10, 0x2af, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2af, V161]

================================

Block 0x8f0
[0x8f0:0x9aa]
---
Predecessors: [0x89a]
Successors: [0x9ab]
---
0x8f0 DUP1
0x8f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x906 AND
0x907 PUSH1 0x0
0x909 DUP1
0x90a SWAP1
0x90b SLOAD
0x90c SWAP1
0x90d PUSH2 0x100
0x910 EXP
0x911 SWAP1
0x912 DIV
0x913 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x928 AND
0x929 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93e AND
0x93f PUSH32 0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c
0x960 PUSH1 0x40
0x962 MLOAD
0x963 PUSH1 0x40
0x965 MLOAD
0x966 DUP1
0x967 SWAP2
0x968 SUB
0x969 SWAP1
0x96a LOG3
0x96b DUP1
0x96c PUSH1 0x0
0x96e DUP1
0x96f PUSH2 0x100
0x972 EXP
0x973 DUP2
0x974 SLOAD
0x975 DUP2
0x976 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98b MUL
0x98c NOT
0x98d AND
0x98e SWAP1
0x98f DUP4
0x990 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a5 AND
0x9a6 MUL
0x9a7 OR
0x9a8 SWAP1
0x9a9 SSTORE
0x9aa POP
---
0x8f1: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x906: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x907: V510 = 0x0
0x90b: V511 = S[0x0]
0x90d: V512 = 0x100
0x910: V513 = EXP 0x100 0x0
0x912: V514 = DIV V511 0x1
0x913: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x928: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x929: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x93e: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x93f: V519 = 0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c
0x960: V520 = 0x40
0x962: V521 = M[0x40]
0x963: V522 = 0x40
0x965: V523 = M[0x40]
0x968: V524 = SUB V521 V523
0x96a: LOG V523 V524 0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c V518 V509
0x96c: V525 = 0x0
0x96f: V526 = 0x100
0x972: V527 = EXP 0x100 0x0
0x974: V528 = S[0x0]
0x976: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x98b: V530 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x98c: V531 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x98d: V532 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V528
0x990: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a5: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x9a6: V535 = MUL V534 0x1
0x9a7: V536 = OR V535 V532
0x9a9: S[0x0] = V536
---
Entry stack: [V10, 0x2af, V161]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2af, V161]

================================

Block 0x9ab
[0x9ab:0x9ab]
---
Predecessors: [0x8f0]
Successors: [0x9ac]
---
0x9ab JUMPDEST
---
0x9ab: JUMPDEST 
---
Entry stack: [V10, 0x2af, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2af, V161]

================================

Block 0x9ac
[0x9ac:0x9ac]
---
Predecessors: [0x89a, 0x9ab]
Successors: [0x9ad]
---
0x9ac JUMPDEST
---
0x9ac: JUMPDEST 
---
Entry stack: [V10, 0x2af, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2af, V161]

================================

Block 0x9ad
[0x9ad:0x9af]
---
Predecessors: [0x9ac]
Successors: [0x2af]
---
0x9ad JUMPDEST
0x9ae POP
0x9af JUMP
---
0x9ad: JUMPDEST 
0x9af: JUMP 0x2af
---
Entry stack: [V10, 0x2af, V161]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x9b0
[0x9b0:0x9cb]
---
Predecessors: [0x2bc]
Successors: [0x9cc]
---
0x9b0 JUMPDEST
0x9b1 PUSH1 0x1
0x9b3 PUSH1 0x3
0x9b5 PUSH1 0x0
0x9b7 PUSH2 0x100
0x9ba EXP
0x9bb DUP2
0x9bc SLOAD
0x9bd DUP2
0x9be PUSH1 0xff
0x9c0 MUL
0x9c1 NOT
0x9c2 AND
0x9c3 SWAP1
0x9c4 DUP4
0x9c5 ISZERO
0x9c6 ISZERO
0x9c7 MUL
0x9c8 OR
0x9c9 SWAP1
0x9ca SSTORE
0x9cb POP
---
0x9b0: JUMPDEST 
0x9b1: V537 = 0x1
0x9b3: V538 = 0x3
0x9b5: V539 = 0x0
0x9b7: V540 = 0x100
0x9ba: V541 = EXP 0x100 0x0
0x9bc: V542 = S[0x3]
0x9be: V543 = 0xff
0x9c0: V544 = MUL 0xff 0x1
0x9c1: V545 = NOT 0xff
0x9c2: V546 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V542
0x9c5: V547 = ISZERO 0x1
0x9c6: V548 = ISZERO 0x0
0x9c7: V549 = MUL 0x1 0x1
0x9c8: V550 = OR 0x1 V546
0x9ca: S[0x3] = V550
---
Entry stack: [V10, 0x2c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2c4]

================================

Block 0x9cc
[0x9cc:0x9cd]
---
Predecessors: [0x9b0]
Successors: [0x2c4]
---
0x9cc JUMPDEST
0x9cd JUMP
---
0x9cc: JUMPDEST 
0x9cd: JUMP 0x2c4
---
Entry stack: [V10, 0x2c4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x9ce
[0x9ce:0x9db]
---
Predecessors: [0x3d7]
Successors: [0x9dc, 0x9e3]
---
0x9ce JUMPDEST
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 PUSH1 0x4
0x9d4 SLOAD
0x9d5 GT
0x9d6 DUP1
0x9d7 ISZERO
0x9d8 PUSH2 0x9e3
0x9db JUMPI
---
0x9ce: JUMPDEST 
0x9cf: V551 = 0x0
0x9d2: V552 = 0x4
0x9d4: V553 = S[0x4]
0x9d5: V554 = GT V553 0x0
0x9d7: V555 = ISZERO V554
0x9d8: V556 = 0x9e3
0x9db: JUMPI 0x9e3 V555
---
Entry stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, 0x0, 0x3de]
Stack pops: 0
Stack additions: [0x0, V554]
Exit stack: [V10, 0x172, S5, {0x104, 0x6c8}, S3, S2, 0x0, 0x3de, 0x0, V554]

================================

Block 0x9dc
[0x9dc:0x9e2]
---
Predecessors: [0x9ce]
Successors: [0x9e3]
---
0x9dc POP
0x9dd TIMESTAMP
0x9de PUSH1 0x4
0x9e0 SLOAD
0x9e1 GT
0x9e2 ISZERO
---
0x9dd: V557 = TIMESTAMP
0x9de: V558 = 0x4
0x9e0: V559 = S[0x4]
0x9e1: V560 = GT V559 V557
0x9e2: V561 = ISZERO V560
---
Entry stack: [V10, 0x172, S7, {0x104, 0x6c8}, S5, S4, 0x0, 0x3de, 0x0, V554]
Stack pops: 1
Stack additions: [V561]
Exit stack: [V10, 0x172, S7, {0x104, 0x6c8}, S5, S4, 0x0, 0x3de, 0x0, V561]

================================

Block 0x9e3
[0x9e3:0x9e5]
---
Predecessors: [0x9ce, 0x9dc]
Successors: [0x9e6]
---
0x9e3 JUMPDEST
0x9e4 SWAP1
0x9e5 POP
---
0x9e3: JUMPDEST 
---
Entry stack: [V10, 0x172, S7, {0x104, 0x6c8}, S5, S4, 0x0, 0x3de, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x172, S7, {0x104, 0x6c8}, S5, S4, 0x0, 0x3de, S0]

================================

Block 0x9e6
[0x9e6:0x9e8]
---
Predecessors: [0x9e3]
Successors: [0x3de]
---
0x9e6 JUMPDEST
0x9e7 SWAP1
0x9e8 JUMP
---
0x9e6: JUMPDEST 
0x9e8: JUMP 0x3de
---
Entry stack: [V10, 0x172, S6, {0x104, 0x6c8}, S4, S3, 0x0, 0x3de, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x172, S6, {0x104, 0x6c8}, S4, S3, 0x0, S0]

================================

Block 0x9e9
[0x9e9:0xa22]
---
Predecessors: []
Successors: []
---
0x9e9 STOP
0x9ea LOG1
0x9eb PUSH6 0x627a7a723058
0x9f2 SHA3
0x9f3 DUP8
0x9f4 MISSING 0xe3
0x9f5 MISSING 0xe5
0x9f6 MISSING 0x4a
0x9f7 PUSH13 0x3b34db626c100272ac99ce1ef2
0xa05 GASPRICE
0xa06 LOG3
0xa07 MISSING 0x4b
0xa08 PUSH26 0x9b7a7d7d942c74b1f8a50029
---
0x9e9: STOP 
0x9ea: LOG S0 S1 S2
0x9eb: V562 = 0x627a7a723058
0x9f2: V563 = SHA3 0x627a7a723058 S3
0x9f4: MISSING 0xe3
0x9f5: MISSING 0xe5
0x9f6: MISSING 0x4a
0x9f7: V564 = 0x3b34db626c100272ac99ce1ef2
0xa05: V565 = GASPRICE
0xa06: LOG V565 0x3b34db626c100272ac99ce1ef2 S0 S1 S2
0xa07: MISSING 0x4b
0xa08: V566 = 0x9b7a7d7d942c74b1f8a50029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, V563, S4, S5, S6, S7, S8, S9, S10, 0x9b7a7d7d942c74b1f8a50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x205c2878
Entry block: 0xc4
Exit block: 0xcb
Body: 0xc4, 0xcb, 0xcf, 0x104

Function 1:
Public function signature: 0x223c217b
Entry block: 0x106
Exit block: 0x1f7
Body: 0x106, 0x15a, 0x1f7, 0x4d2, 0x52a, 0x5c8, 0x5cc, 0x5d9, 0x5dd, 0x5f4, 0x5f9, 0x5ff, 0x69c, 0x6a0, 0x6ad, 0x6b1, 0x6b5, 0x6b6, 0x6b7, 0x6b8, 0x873, 0x874, 0x875, 0x876

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x15c
Exit block: 0x172
Body: 0x15c, 0x172, 0x6be, 0x6c8, 0x6c9

Function 3:
Public function signature: 0x3e326048
Entry block: 0x174
Exit block: 0x17c
Body: 0x174, 0x17c, 0x6cc, 0x6e3, 0x739, 0x73a, 0x73b, 0x73c

Function 4:
Public function signature: 0x3ee2d7c2
Entry block: 0x17e
Exit block: 0x1b5
Body: 0x17e, 0x185, 0x189, 0x1b5, 0x73e

Function 5:
Public function signature: 0x89476069
Entry block: 0x1cb
Exit block: 0x6ad
Body: 0x15a, 0x1cb, 0x1f7, 0x4d2, 0x52a, 0x5c8, 0x5cc, 0x5d9, 0x5dd, 0x5f4, 0x5f9, 0x5ff, 0x69c, 0x6a0, 0x6ad, 0x6b1, 0x6b5, 0x6b6, 0x6b7, 0x6b8, 0x756, 0x7ac, 0x84f, 0x853, 0x860, 0x864, 0x873, 0x874, 0x875, 0x876

Function 6:
Public function signature: 0x8cf49cad
Entry block: 0x1f9
Exit block: 0x20c
Body: 0x1f9, 0x200, 0x204, 0x20c, 0x879, 0x881

Function 7:
Public function signature: 0xc635a9f2
Entry block: 0x222
Exit block: 0x229
Body: 0x222, 0x229, 0x22d, 0x235

Function 8:
Public function signature: 0xc67bdb19
Entry block: 0x24b
Exit block: 0x26c
Body: 0x24b, 0x252, 0x256, 0x26c, 0x88f, 0x897

Function 9:
Public function signature: 0xd0e30db0
Entry block: 0x26e
Exit block: 0x276
Body: 0x26e, 0x276

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x278
Exit block: 0x2af
Body: 0x278, 0x27f, 0x283, 0x2af, 0x89a, 0x8f0, 0x9ab, 0x9ac, 0x9ad

Function 11:
Public function signature: 0xf83d08ba
Entry block: 0x2b1
Exit block: 0x2c4
Body: 0x2b1, 0x2b8, 0x2bc, 0x2c4, 0x9b0, 0x9cc

Function 12:
Public fallback function
Entry block: 0xb8
Exit block: 0xc2
Body: 0xb8, 0xb9, 0xc1, 0xc2

Function 13:
Private function
Entry block: 0x37f
Exit block: 0x4cd
Body: 0x37f, 0x3d7, 0x3de, 0x3e4, 0x430, 0x435, 0x43b, 0x47a, 0x4c9, 0x4ca, 0x4cb, 0x4cc, 0x4cd, 0x9ce, 0x9dc, 0x9e3, 0x9e6

Function 14:
Private function
Entry block: 0x2c6
Exit block: 0x37d
Body: 0x2c6, 0x2d0, 0x2d7, 0x2e0, 0x32d, 0x37c, 0x37d

Function 15:
Private function
Entry block: 0x884
Exit block: 0x88c
Body: 0x884, 0x88c

