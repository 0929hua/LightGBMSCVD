Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6ef53e0
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6ef53e0
0x3c: V13 = EQ 0x6ef53e0 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcf]
---
0x41 DUP1
0x42 PUSH4 0x1998aeef
0x47 EQ
0x48 PUSH2 0xcf
0x4b JUMPI
---
0x42: V15 = 0x1998aeef
0x47: V16 = EQ 0x1998aeef V11
0x48: V17 = 0xcf
0x4b: JUMPI 0xcf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd9]
---
0x4c DUP1
0x4d PUSH4 0x3197cbb6
0x52 EQ
0x53 PUSH2 0xd9
0x56 JUMPI
---
0x4d: V18 = 0x3197cbb6
0x52: V19 = EQ 0x3197cbb6 V11
0x53: V20 = 0xd9
0x56: JUMPI 0xd9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x102]
---
0x57 DUP1
0x58 PUSH4 0x67a884e5
0x5d EQ
0x5e PUSH2 0x102
0x61 JUMPI
---
0x58: V21 = 0x67a884e5
0x5d: V22 = EQ 0x67a884e5 V11
0x5e: V23 = 0x102
0x61: JUMPI 0x102 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x157]
---
0x62 DUP1
0x63 PUSH4 0x8941db65
0x68 EQ
0x69 PUSH2 0x157
0x6c JUMPI
---
0x63: V24 = 0x8941db65
0x68: V25 = EQ 0x8941db65 V11
0x69: V26 = 0x157
0x6c: JUMPI 0x157 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x180]
---
0x6d DUP1
0x6e PUSH4 0x8da5cb5b
0x73 EQ
0x74 PUSH2 0x180
0x77 JUMPI
---
0x6e: V27 = 0x8da5cb5b
0x73: V28 = EQ 0x8da5cb5b V11
0x74: V29 = 0x180
0x77: JUMPI 0x180 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x1d5]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x1d5
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x1d5
0x8c: JUMP 0x1d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0xce]
---
Predecessors: [0x1d5]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP3
0x93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8 AND
0xa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe AND
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0x8d: JUMPDEST 
0x8e: V36 = 0x40
0x90: V37 = M[0x40]
0x93: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0xa9: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc0: M[V37] = V41
0xc1: V42 = 0x20
0xc3: V43 = ADD 0x20 V37
0xc7: V44 = 0x40
0xc9: V45 = M[0x40]
0xcc: V46 = SUB V43 V45
0xce: RETURN V45 V46
---
Entry stack: [V11, 0x8d, V116]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0xcf
[0xcf:0xd6]
---
Predecessors: [0x41]
Successors: [0x1fb]
---
0xcf JUMPDEST
0xd0 PUSH2 0xd7
0xd3 PUSH2 0x1fb
0xd6 JUMP
---
0xcf: JUMPDEST 
0xd0: V47 = 0xd7
0xd3: V48 = 0x1fb
0xd6: JUMP 0x1fb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd7]
Exit stack: [V11, 0xd7]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: [0x60f]
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0x4c]
Successors: [0xe0, 0xe4]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V49 = CALLVALUE
0xdb: V50 = ISZERO V49
0xdc: V51 = 0xe4
0xdf: JUMPI 0xe4 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V52 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xeb]
---
Predecessors: [0xd9]
Successors: [0x611]
---
0xe4 JUMPDEST
0xe5 PUSH2 0xec
0xe8 PUSH2 0x611
0xeb JUMP
---
0xe4: JUMPDEST 
0xe5: V53 = 0xec
0xe8: V54 = 0x611
0xeb: JUMP 0x611
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xec]
Exit stack: [V11, 0xec]

================================

Block 0xec
[0xec:0x101]
---
Predecessors: [0x611]
Successors: []
---
0xec JUMPDEST
0xed PUSH1 0x40
0xef MLOAD
0xf0 DUP1
0xf1 DUP3
0xf2 DUP2
0xf3 MSTORE
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP2
0xf8 POP
0xf9 POP
0xfa PUSH1 0x40
0xfc MLOAD
0xfd DUP1
0xfe SWAP2
0xff SUB
0x100 SWAP1
0x101 RETURN
---
0xec: JUMPDEST 
0xed: V55 = 0x40
0xef: V56 = M[0x40]
0xf3: M[V56] = V375
0xf4: V57 = 0x20
0xf6: V58 = ADD 0x20 V56
0xfa: V59 = 0x40
0xfc: V60 = M[0x40]
0xff: V61 = SUB V58 V60
0x101: RETURN V60 V61
---
Entry stack: [V11, 0xec, V375]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xec]

================================

Block 0x102
[0x102:0x108]
---
Predecessors: [0x57]
Successors: [0x109, 0x10d]
---
0x102 JUMPDEST
0x103 CALLVALUE
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x102: JUMPDEST 
0x103: V62 = CALLVALUE
0x104: V63 = ISZERO V62
0x105: V64 = 0x10d
0x108: JUMPI 0x10d V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x102]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V65 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x114]
---
Predecessors: [0x102]
Successors: [0x617]
---
0x10d JUMPDEST
0x10e PUSH2 0x115
0x111 PUSH2 0x617
0x114 JUMP
---
0x10d: JUMPDEST 
0x10e: V66 = 0x115
0x111: V67 = 0x617
0x114: JUMP 0x617
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x115
[0x115:0x156]
---
Predecessors: [0x617]
Successors: []
---
0x115 JUMPDEST
0x116 PUSH1 0x40
0x118 MLOAD
0x119 DUP1
0x11a DUP3
0x11b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130 AND
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP2
0x14d POP
0x14e POP
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 SWAP2
0x154 SUB
0x155 SWAP1
0x156 RETURN
---
0x115: JUMPDEST 
0x116: V68 = 0x40
0x118: V69 = M[0x40]
0x11b: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x130: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x131: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x148: M[V69] = V73
0x149: V74 = 0x20
0x14b: V75 = ADD 0x20 V69
0x14f: V76 = 0x40
0x151: V77 = M[0x40]
0x154: V78 = SUB V75 V77
0x156: RETURN V77 V78
---
Entry stack: [V11, 0x115, V383]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x157
[0x157:0x15d]
---
Predecessors: [0x62]
Successors: [0x15e, 0x162]
---
0x157 JUMPDEST
0x158 CALLVALUE
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x157: JUMPDEST 
0x158: V79 = CALLVALUE
0x159: V80 = ISZERO V79
0x15a: V81 = 0x162
0x15d: JUMPI 0x162 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x157]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V82 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x157]
Successors: [0x63d]
---
0x162 JUMPDEST
0x163 PUSH2 0x16a
0x166 PUSH2 0x63d
0x169 JUMP
---
0x162: JUMPDEST 
0x163: V83 = 0x16a
0x166: V84 = 0x63d
0x169: JUMP 0x63d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16a]
Exit stack: [V11, 0x16a]

================================

Block 0x16a
[0x16a:0x17f]
---
Predecessors: [0x63d]
Successors: []
---
0x16a JUMPDEST
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f DUP3
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x20
0x174 ADD
0x175 SWAP2
0x176 POP
0x177 POP
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c SWAP2
0x17d SUB
0x17e SWAP1
0x17f RETURN
---
0x16a: JUMPDEST 
0x16b: V85 = 0x40
0x16d: V86 = M[0x40]
0x171: M[V86] = V385
0x172: V87 = 0x20
0x174: V88 = ADD 0x20 V86
0x178: V89 = 0x40
0x17a: V90 = M[0x40]
0x17d: V91 = SUB V88 V90
0x17f: RETURN V90 V91
---
Entry stack: [V11, 0x16a, V385]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x16a]

================================

Block 0x180
[0x180:0x186]
---
Predecessors: [0x6d]
Successors: [0x187, 0x18b]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x180: JUMPDEST 
0x181: V92 = CALLVALUE
0x182: V93 = ISZERO V92
0x183: V94 = 0x18b
0x186: JUMPI 0x18b V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x180]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V95 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x180]
Successors: [0x643]
---
0x18b JUMPDEST
0x18c PUSH2 0x193
0x18f PUSH2 0x643
0x192 JUMP
---
0x18b: JUMPDEST 
0x18c: V96 = 0x193
0x18f: V97 = 0x643
0x192: JUMP 0x643
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x193]
Exit stack: [V11, 0x193]

================================

Block 0x193
[0x193:0x1d4]
---
Predecessors: [0x643]
Successors: []
---
0x193 JUMPDEST
0x194 PUSH1 0x40
0x196 MLOAD
0x197 DUP1
0x198 DUP3
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c4 AND
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP2
0x1cb POP
0x1cc POP
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 DUP1
0x1d1 SWAP2
0x1d2 SUB
0x1d3 SWAP1
0x1d4 RETURN
---
0x193: JUMPDEST 
0x194: V98 = 0x40
0x196: V99 = M[0x40]
0x199: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x1af: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1c6: M[V99] = V103
0x1c7: V104 = 0x20
0x1c9: V105 = ADD 0x20 V99
0x1cd: V106 = 0x40
0x1cf: V107 = M[0x40]
0x1d2: V108 = SUB V105 V107
0x1d4: RETURN V107 V108
---
Entry stack: [V11, 0x193, V392]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x193]

================================

Block 0x1d5
[0x1d5:0x1fa]
---
Predecessors: [0x85]
Successors: [0x8d]
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x2
0x1d8 PUSH1 0x0
0x1da SWAP1
0x1db SLOAD
0x1dc SWAP1
0x1dd PUSH2 0x100
0x1e0 EXP
0x1e1 SWAP1
0x1e2 DIV
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 DUP2
0x1fa JUMP
---
0x1d5: JUMPDEST 
0x1d6: V109 = 0x2
0x1d8: V110 = 0x0
0x1db: V111 = S[0x2]
0x1dd: V112 = 0x100
0x1e0: V113 = EXP 0x100 0x0
0x1e2: V114 = DIV V111 0x1
0x1e3: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1fa: JUMP 0x8d
---
Entry stack: [V11, 0x8d]
Stack pops: 1
Stack additions: [S0, V116]
Exit stack: [V11, 0x8d, V116]

================================

Block 0x1fb
[0x1fb:0x20b]
---
Predecessors: [0xcf]
Successors: [0x20c, 0x210]
---
0x1fb JUMPDEST
0x1fc PUSH7 0x11c37937e08000
0x204 CALLVALUE
0x205 EQ
0x206 ISZERO
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V117 = 0x11c37937e08000
0x204: V118 = CALLVALUE
0x205: V119 = EQ V118 0x11c37937e08000
0x206: V120 = ISZERO V119
0x207: V121 = ISZERO V120
0x208: V122 = 0x210
0x20b: JUMPI 0x210 V121
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x1fb]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V123 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x210
[0x210:0x21b]
---
Predecessors: [0x1fb]
Successors: [0x21c, 0x227]
---
0x210 JUMPDEST
0x211 PUSH1 0x0
0x213 PUSH1 0x3
0x215 SLOAD
0x216 EQ
0x217 ISZERO
0x218 PUSH2 0x227
0x21b JUMPI
---
0x210: JUMPDEST 
0x211: V124 = 0x0
0x213: V125 = 0x3
0x215: V126 = S[0x3]
0x216: V127 = EQ V126 0x0
0x217: V128 = ISZERO V127
0x218: V129 = 0x227
0x21b: JUMPI 0x227 V128
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x21c
[0x21c:0x226]
---
Predecessors: [0x210]
Successors: [0x227]
---
0x21c PUSH1 0x4
0x21e SLOAD
0x21f TIMESTAMP
0x220 ADD
0x221 PUSH1 0x3
0x223 DUP2
0x224 SWAP1
0x225 SSTORE
0x226 POP
---
0x21c: V130 = 0x4
0x21e: V131 = S[0x4]
0x21f: V132 = TIMESTAMP
0x220: V133 = ADD V132 V131
0x221: V134 = 0x3
0x225: S[0x3] = V133
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x227
[0x227:0x234]
---
Predecessors: [0x210, 0x21c]
Successors: [0x235, 0x23b]
---
0x227 JUMPDEST
0x228 PUSH1 0x0
0x22a PUSH1 0x3
0x22c SLOAD
0x22d EQ
0x22e ISZERO
0x22f DUP1
0x230 ISZERO
0x231 PUSH2 0x23b
0x234 JUMPI
---
0x227: JUMPDEST 
0x228: V135 = 0x0
0x22a: V136 = 0x3
0x22c: V137 = S[0x3]
0x22d: V138 = EQ V137 0x0
0x22e: V139 = ISZERO V138
0x230: V140 = ISZERO V139
0x231: V141 = 0x23b
0x234: JUMPI 0x23b V140
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: [V139]
Exit stack: [V11, 0xd7, V139]

================================

Block 0x235
[0x235:0x23a]
---
Predecessors: [0x227]
Successors: [0x23b]
---
0x235 POP
0x236 TIMESTAMP
0x237 PUSH1 0x3
0x239 SLOAD
0x23a GT
---
0x236: V142 = TIMESTAMP
0x237: V143 = 0x3
0x239: V144 = S[0x3]
0x23a: V145 = GT V144 V142
---
Entry stack: [V11, 0xd7, V139]
Stack pops: 1
Stack additions: [V145]
Exit stack: [V11, 0xd7, V145]

================================

Block 0x23b
[0x23b:0x240]
---
Predecessors: [0x227, 0x235]
Successors: [0x241, 0x356]
---
0x23b JUMPDEST
0x23c ISZERO
0x23d PUSH2 0x356
0x240 JUMPI
---
0x23b: JUMPDEST 
0x23c: V146 = ISZERO S0
0x23d: V147 = 0x356
0x240: JUMPI 0x356 V146
---
Entry stack: [V11, 0xd7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x241
[0x241:0x355]
---
Predecessors: [0x23b]
Successors: [0x356]
---
0x241 PUSH1 0xa
0x243 PUSH1 0x4
0x245 PUSH1 0x0
0x247 DUP3
0x248 DUP3
0x249 SLOAD
0x24a SUB
0x24b SWAP3
0x24c POP
0x24d POP
0x24e DUP2
0x24f SWAP1
0x250 SSTORE
0x251 POP
0x252 PUSH1 0x4
0x254 SLOAD
0x255 TIMESTAMP
0x256 ADD
0x257 PUSH1 0x3
0x259 DUP2
0x25a SWAP1
0x25b SSTORE
0x25c POP
0x25d CALLER
0x25e PUSH1 0x1
0x260 PUSH1 0x0
0x262 PUSH2 0x100
0x265 EXP
0x266 DUP2
0x267 SLOAD
0x268 DUP2
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e MUL
0x27f NOT
0x280 AND
0x281 SWAP1
0x282 DUP4
0x283 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x298 AND
0x299 MUL
0x29a OR
0x29b SWAP1
0x29c SSTORE
0x29d POP
0x29e PUSH32 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305
0x2bf PUSH1 0x1
0x2c1 PUSH1 0x0
0x2c3 SWAP1
0x2c4 SLOAD
0x2c5 SWAP1
0x2c6 PUSH2 0x100
0x2c9 EXP
0x2ca SWAP1
0x2cb DIV
0x2cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e1 AND
0x2e2 PUSH1 0x3
0x2e4 SLOAD
0x2e5 PUSH1 0x4
0x2e7 SLOAD
0x2e8 ADDRESS
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff BALANCE
0x300 PUSH1 0x40
0x302 MLOAD
0x303 DUP1
0x304 DUP6
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a AND
0x31b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x330 AND
0x331 DUP2
0x332 MSTORE
0x333 PUSH1 0x20
0x335 ADD
0x336 DUP5
0x337 DUP2
0x338 MSTORE
0x339 PUSH1 0x20
0x33b ADD
0x33c DUP4
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 DUP3
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP5
0x349 POP
0x34a POP
0x34b POP
0x34c POP
0x34d POP
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP1
0x352 SWAP2
0x353 SUB
0x354 SWAP1
0x355 LOG1
---
0x241: V148 = 0xa
0x243: V149 = 0x4
0x245: V150 = 0x0
0x249: V151 = S[0x4]
0x24a: V152 = SUB V151 0xa
0x250: S[0x4] = V152
0x252: V153 = 0x4
0x254: V154 = S[0x4]
0x255: V155 = TIMESTAMP
0x256: V156 = ADD V155 V154
0x257: V157 = 0x3
0x25b: S[0x3] = V156
0x25d: V158 = CALLER
0x25e: V159 = 0x1
0x260: V160 = 0x0
0x262: V161 = 0x100
0x265: V162 = EXP 0x100 0x0
0x267: V163 = S[0x1]
0x269: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V165 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x27f: V166 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x280: V167 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V163
0x283: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x298: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x299: V170 = MUL V169 0x1
0x29a: V171 = OR V170 V167
0x29c: S[0x1] = V171
0x29e: V172 = 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305
0x2bf: V173 = 0x1
0x2c1: V174 = 0x0
0x2c4: V175 = S[0x1]
0x2c6: V176 = 0x100
0x2c9: V177 = EXP 0x100 0x0
0x2cb: V178 = DIV V175 0x1
0x2cc: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e1: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2e2: V181 = 0x3
0x2e4: V182 = S[0x3]
0x2e5: V183 = 0x4
0x2e7: V184 = S[0x4]
0x2e8: V185 = ADDRESS
0x2e9: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x2ff: V188 = BALANCE V187
0x300: V189 = 0x40
0x302: V190 = M[0x40]
0x305: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x31b: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x330: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x332: M[V190] = V194
0x333: V195 = 0x20
0x335: V196 = ADD 0x20 V190
0x338: M[V196] = V182
0x339: V197 = 0x20
0x33b: V198 = ADD 0x20 V196
0x33e: M[V198] = V184
0x33f: V199 = 0x20
0x341: V200 = ADD 0x20 V198
0x344: M[V200] = V188
0x345: V201 = 0x20
0x347: V202 = ADD 0x20 V200
0x34e: V203 = 0x40
0x350: V204 = M[0x40]
0x353: V205 = SUB V202 V204
0x355: LOG V204 V205 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x356
[0x356:0x361]
---
Predecessors: [0x23b, 0x241]
Successors: [0x362, 0x369]
---
0x356 JUMPDEST
0x357 PUSH1 0x0
0x359 PUSH1 0x4
0x35b SLOAD
0x35c EQ
0x35d DUP1
0x35e PUSH2 0x369
0x361 JUMPI
---
0x356: JUMPDEST 
0x357: V206 = 0x0
0x359: V207 = 0x4
0x35b: V208 = S[0x4]
0x35c: V209 = EQ V208 0x0
0x35e: V210 = 0x369
0x361: JUMPI 0x369 V209
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V11, 0xd7, V209]

================================

Block 0x362
[0x362:0x368]
---
Predecessors: [0x356]
Successors: [0x369]
---
0x362 POP
0x363 TIMESTAMP
0x364 PUSH1 0x3
0x366 SLOAD
0x367 GT
0x368 ISZERO
---
0x363: V211 = TIMESTAMP
0x364: V212 = 0x3
0x366: V213 = S[0x3]
0x367: V214 = GT V213 V211
0x368: V215 = ISZERO V214
---
Entry stack: [V11, 0xd7, V209]
Stack pops: 1
Stack additions: [V215]
Exit stack: [V11, 0xd7, V215]

================================

Block 0x369
[0x369:0x36e]
---
Predecessors: [0x356, 0x362]
Successors: [0x36f, 0x60f]
---
0x369 JUMPDEST
0x36a ISZERO
0x36b PUSH2 0x60f
0x36e JUMPI
---
0x369: JUMPDEST 
0x36a: V216 = ISZERO S0
0x36b: V217 = 0x60f
0x36e: JUMPI 0x60f V216
---
Entry stack: [V11, 0xd7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x36f
[0x36f:0x49b]
---
Predecessors: [0x369]
Successors: [0x49c, 0x49d]
---
0x36f PUSH1 0x1
0x371 PUSH1 0x0
0x373 SWAP1
0x374 SLOAD
0x375 SWAP1
0x376 PUSH2 0x100
0x379 EXP
0x37a SWAP1
0x37b DIV
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 PUSH1 0x2
0x394 PUSH1 0x0
0x396 PUSH2 0x100
0x399 EXP
0x39a DUP2
0x39b SLOAD
0x39c DUP2
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 MUL
0x3b3 NOT
0x3b4 AND
0x3b5 SWAP1
0x3b6 DUP4
0x3b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cc AND
0x3cd MUL
0x3ce OR
0x3cf SWAP1
0x3d0 SSTORE
0x3d1 POP
0x3d2 PUSH2 0x1c20
0x3d5 PUSH1 0x4
0x3d7 DUP2
0x3d8 SWAP1
0x3d9 SSTORE
0x3da POP
0x3db PUSH1 0x4
0x3dd SLOAD
0x3de TIMESTAMP
0x3df ADD
0x3e0 PUSH1 0x3
0x3e2 DUP2
0x3e3 SWAP1
0x3e4 SSTORE
0x3e5 POP
0x3e6 CALLER
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0x0
0x3eb PUSH2 0x100
0x3ee EXP
0x3ef DUP2
0x3f0 SLOAD
0x3f1 DUP2
0x3f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x407 MUL
0x408 NOT
0x409 AND
0x40a SWAP1
0x40b DUP4
0x40c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x421 AND
0x422 MUL
0x423 OR
0x424 SWAP1
0x425 SSTORE
0x426 POP
0x427 PUSH32 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305
0x448 PUSH1 0x1
0x44a PUSH1 0x0
0x44c SWAP1
0x44d SLOAD
0x44e SWAP1
0x44f PUSH2 0x100
0x452 EXP
0x453 SWAP1
0x454 DIV
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b PUSH1 0x3
0x46d SLOAD
0x46e PUSH1 0x4
0x470 SLOAD
0x471 PUSH7 0x11c37937e08000
0x479 PUSH1 0x11
0x47b PUSH1 0x14
0x47d ADDRESS
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 BALANCE
0x495 DUP2
0x496 ISZERO
0x497 ISZERO
0x498 PUSH2 0x49d
0x49b JUMPI
---
0x36f: V218 = 0x1
0x371: V219 = 0x0
0x374: V220 = S[0x1]
0x376: V221 = 0x100
0x379: V222 = EXP 0x100 0x0
0x37b: V223 = DIV V220 0x1
0x37c: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x392: V226 = 0x2
0x394: V227 = 0x0
0x396: V228 = 0x100
0x399: V229 = EXP 0x100 0x0
0x39b: V230 = S[0x2]
0x39d: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V232 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3b3: V233 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V234 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V230
0x3b7: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cc: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3cd: V237 = MUL V236 0x1
0x3ce: V238 = OR V237 V234
0x3d0: S[0x2] = V238
0x3d2: V239 = 0x1c20
0x3d5: V240 = 0x4
0x3d9: S[0x4] = 0x1c20
0x3db: V241 = 0x4
0x3dd: V242 = S[0x4]
0x3de: V243 = TIMESTAMP
0x3df: V244 = ADD V243 V242
0x3e0: V245 = 0x3
0x3e4: S[0x3] = V244
0x3e6: V246 = CALLER
0x3e7: V247 = 0x1
0x3e9: V248 = 0x0
0x3eb: V249 = 0x100
0x3ee: V250 = EXP 0x100 0x0
0x3f0: V251 = S[0x1]
0x3f2: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x407: V253 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x408: V254 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x409: V255 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V251
0x40c: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x421: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x422: V258 = MUL V257 0x1
0x423: V259 = OR V258 V255
0x425: S[0x1] = V259
0x427: V260 = 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305
0x448: V261 = 0x1
0x44a: V262 = 0x0
0x44d: V263 = S[0x1]
0x44f: V264 = 0x100
0x452: V265 = EXP 0x100 0x0
0x454: V266 = DIV V263 0x1
0x455: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x46b: V269 = 0x3
0x46d: V270 = S[0x3]
0x46e: V271 = 0x4
0x470: V272 = S[0x4]
0x471: V273 = 0x11c37937e08000
0x479: V274 = 0x11
0x47b: V275 = 0x14
0x47d: V276 = ADDRESS
0x47e: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x494: V279 = BALANCE V278
0x496: V280 = ISZERO 0x14
0x497: V281 = ISZERO 0x0
0x498: V282 = 0x49d
0x49b: JUMPI 0x49d 0x1
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: [0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305, V268, V270, V272, 0x11c37937e08000, 0x11, 0x14, V279]
Exit stack: [V11, 0xd7, 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305, V268, V270, V272, 0x11c37937e08000, 0x11, 0x14, V279]

================================

Block 0x49c
[0x49c:0x49c]
---
Predecessors: [0x36f]
Successors: []
---
0x49c INVALID
---
0x49c: INVALID 
---
Entry stack: [V11, 0xd7, 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305, V268, V270, V272, 0x11c37937e08000, 0x11, 0x14, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7, 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305, V268, V270, V272, 0x11c37937e08000, 0x11, 0x14, V279]

================================

Block 0x49d
[0x49d:0x554]
---
Predecessors: [0x36f]
Successors: [0x555, 0x556]
---
0x49d JUMPDEST
0x49e DIV
0x49f MUL
0x4a0 ADD
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 DUP1
0x4a5 DUP6
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d1 AND
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 DUP5
0x4d8 DUP2
0x4d9 MSTORE
0x4da PUSH1 0x20
0x4dc ADD
0x4dd DUP4
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 DUP3
0x4e4 DUP2
0x4e5 MSTORE
0x4e6 PUSH1 0x20
0x4e8 ADD
0x4e9 SWAP5
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee POP
0x4ef PUSH1 0x40
0x4f1 MLOAD
0x4f2 DUP1
0x4f3 SWAP2
0x4f4 SUB
0x4f5 SWAP1
0x4f6 LOG1
0x4f7 PUSH1 0x0
0x4f9 DUP1
0x4fa SWAP1
0x4fb SLOAD
0x4fc SWAP1
0x4fd PUSH2 0x100
0x500 EXP
0x501 SWAP1
0x502 DIV
0x503 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x518 AND
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f PUSH2 0x8fc
0x532 PUSH1 0x1
0x534 PUSH1 0x14
0x536 ADDRESS
0x537 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54c AND
0x54d BALANCE
0x54e DUP2
0x54f ISZERO
0x550 ISZERO
0x551 PUSH2 0x556
0x554 JUMPI
---
0x49d: JUMPDEST 
0x49e: V283 = DIV V279 0x14
0x49f: V284 = MUL V283 0x11
0x4a0: V285 = ADD V284 0x11c37937e08000
0x4a1: V286 = 0x40
0x4a3: V287 = M[0x40]
0x4a6: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x4bc: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x4d3: M[V287] = V291
0x4d4: V292 = 0x20
0x4d6: V293 = ADD 0x20 V287
0x4d9: M[V293] = V270
0x4da: V294 = 0x20
0x4dc: V295 = ADD 0x20 V293
0x4df: M[V295] = V272
0x4e0: V296 = 0x20
0x4e2: V297 = ADD 0x20 V295
0x4e5: M[V297] = V285
0x4e6: V298 = 0x20
0x4e8: V299 = ADD 0x20 V297
0x4ef: V300 = 0x40
0x4f1: V301 = M[0x40]
0x4f4: V302 = SUB V299 V301
0x4f6: LOG V301 V302 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305
0x4f7: V303 = 0x0
0x4fb: V304 = S[0x0]
0x4fd: V305 = 0x100
0x500: V306 = EXP 0x100 0x0
0x502: V307 = DIV V304 0x1
0x503: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x518: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x519: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x52f: V312 = 0x8fc
0x532: V313 = 0x1
0x534: V314 = 0x14
0x536: V315 = ADDRESS
0x537: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x54d: V318 = BALANCE V317
0x54f: V319 = ISZERO 0x14
0x550: V320 = ISZERO 0x0
0x551: V321 = 0x556
0x554: JUMPI 0x556 0x1
---
Entry stack: [V11, 0xd7, 0x4dcc013473324698bfbe263facec4ea4b1bc43624236542deabec62c2122b305, V268, V270, V272, 0x11c37937e08000, 0x11, 0x14, V279]
Stack pops: 8
Stack additions: [V311, 0x8fc, 0x1, 0x14, V318]
Exit stack: [V11, 0xd7, V311, 0x8fc, 0x1, 0x14, V318]

================================

Block 0x555
[0x555:0x555]
---
Predecessors: [0x49d]
Successors: []
---
0x555 INVALID
---
0x555: INVALID 
---
Entry stack: [V11, 0xd7, V311, 0x8fc, 0x1, 0x14, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7, V311, 0x8fc, 0x1, 0x14, V318]

================================

Block 0x556
[0x556:0x578]
---
Predecessors: [0x49d]
Successors: [0x579, 0x57d]
---
0x556 JUMPDEST
0x557 DIV
0x558 MUL
0x559 SWAP1
0x55a DUP2
0x55b ISZERO
0x55c MUL
0x55d SWAP1
0x55e PUSH1 0x40
0x560 MLOAD
0x561 PUSH1 0x0
0x563 PUSH1 0x40
0x565 MLOAD
0x566 DUP1
0x567 DUP4
0x568 SUB
0x569 DUP2
0x56a DUP6
0x56b DUP9
0x56c DUP9
0x56d CALL
0x56e SWAP4
0x56f POP
0x570 POP
0x571 POP
0x572 POP
0x573 ISZERO
0x574 ISZERO
0x575 PUSH2 0x57d
0x578 JUMPI
---
0x556: JUMPDEST 
0x557: V322 = DIV V318 0x14
0x558: V323 = MUL V322 0x1
0x55b: V324 = ISZERO V323
0x55c: V325 = MUL V324 0x8fc
0x55e: V326 = 0x40
0x560: V327 = M[0x40]
0x561: V328 = 0x0
0x563: V329 = 0x40
0x565: V330 = M[0x40]
0x568: V331 = SUB V327 V330
0x56d: V332 = CALL V325 V311 V323 V330 V331 V330 0x0
0x573: V333 = ISZERO V332
0x574: V334 = ISZERO V333
0x575: V335 = 0x57d
0x578: JUMPI 0x57d V334
---
Entry stack: [V11, 0xd7, V311, 0x8fc, 0x1, 0x14, V318]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x579
[0x579:0x57c]
---
Predecessors: [0x556]
Successors: []
---
0x579 PUSH1 0x0
0x57b DUP1
0x57c REVERT
---
0x579: V336 = 0x0
0x57c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x57d
[0x57d:0x5e5]
---
Predecessors: [0x556]
Successors: [0x5e6, 0x5e7]
---
0x57d JUMPDEST
0x57e PUSH1 0x2
0x580 PUSH1 0x0
0x582 SWAP1
0x583 SLOAD
0x584 SWAP1
0x585 PUSH2 0x100
0x588 EXP
0x589 SWAP1
0x58a DIV
0x58b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a0 AND
0x5a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b6 AND
0x5b7 PUSH2 0x8fc
0x5ba PUSH1 0x8
0x5bc PUSH1 0xa
0x5be PUSH7 0x11c37937e08000
0x5c6 ADDRESS
0x5c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dc AND
0x5dd BALANCE
0x5de SUB
0x5df DUP2
0x5e0 ISZERO
0x5e1 ISZERO
0x5e2 PUSH2 0x5e7
0x5e5 JUMPI
---
0x57d: JUMPDEST 
0x57e: V337 = 0x2
0x580: V338 = 0x0
0x583: V339 = S[0x2]
0x585: V340 = 0x100
0x588: V341 = EXP 0x100 0x0
0x58a: V342 = DIV V339 0x1
0x58b: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a0: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x5a1: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b6: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x5b7: V347 = 0x8fc
0x5ba: V348 = 0x8
0x5bc: V349 = 0xa
0x5be: V350 = 0x11c37937e08000
0x5c6: V351 = ADDRESS
0x5c7: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dc: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x5dd: V354 = BALANCE V353
0x5de: V355 = SUB V354 0x11c37937e08000
0x5e0: V356 = ISZERO 0xa
0x5e1: V357 = ISZERO 0x0
0x5e2: V358 = 0x5e7
0x5e5: JUMPI 0x5e7 0x1
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: [V346, 0x8fc, 0x8, 0xa, V355]
Exit stack: [V11, 0xd7, V346, 0x8fc, 0x8, 0xa, V355]

================================

Block 0x5e6
[0x5e6:0x5e6]
---
Predecessors: [0x57d]
Successors: []
---
0x5e6 INVALID
---
0x5e6: INVALID 
---
Entry stack: [V11, 0xd7, V346, 0x8fc, 0x8, 0xa, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7, V346, 0x8fc, 0x8, 0xa, V355]

================================

Block 0x5e7
[0x5e7:0x609]
---
Predecessors: [0x57d]
Successors: [0x60a, 0x60e]
---
0x5e7 JUMPDEST
0x5e8 DIV
0x5e9 MUL
0x5ea SWAP1
0x5eb DUP2
0x5ec ISZERO
0x5ed MUL
0x5ee SWAP1
0x5ef PUSH1 0x40
0x5f1 MLOAD
0x5f2 PUSH1 0x0
0x5f4 PUSH1 0x40
0x5f6 MLOAD
0x5f7 DUP1
0x5f8 DUP4
0x5f9 SUB
0x5fa DUP2
0x5fb DUP6
0x5fc DUP9
0x5fd DUP9
0x5fe CALL
0x5ff SWAP4
0x600 POP
0x601 POP
0x602 POP
0x603 POP
0x604 ISZERO
0x605 ISZERO
0x606 PUSH2 0x60e
0x609 JUMPI
---
0x5e7: JUMPDEST 
0x5e8: V359 = DIV V355 0xa
0x5e9: V360 = MUL V359 0x8
0x5ec: V361 = ISZERO V360
0x5ed: V362 = MUL V361 0x8fc
0x5ef: V363 = 0x40
0x5f1: V364 = M[0x40]
0x5f2: V365 = 0x0
0x5f4: V366 = 0x40
0x5f6: V367 = M[0x40]
0x5f9: V368 = SUB V364 V367
0x5fe: V369 = CALL V362 V346 V360 V367 V368 V367 0x0
0x604: V370 = ISZERO V369
0x605: V371 = ISZERO V370
0x606: V372 = 0x60e
0x609: JUMPI 0x60e V371
---
Entry stack: [V11, 0xd7, V346, 0x8fc, 0x8, 0xa, V355]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x60a
[0x60a:0x60d]
---
Predecessors: [0x5e7]
Successors: []
---
0x60a PUSH1 0x0
0x60c DUP1
0x60d REVERT
---
0x60a: V373 = 0x0
0x60d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x60e
[0x60e:0x60e]
---
Predecessors: [0x5e7]
Successors: [0x60f]
---
0x60e JUMPDEST
---
0x60e: JUMPDEST 
---
Entry stack: [V11, 0xd7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0x60f
[0x60f:0x610]
---
Predecessors: [0x369, 0x60e]
Successors: [0xd7]
---
0x60f JUMPDEST
0x610 JUMP
---
0x60f: JUMPDEST 
0x610: JUMP 0xd7
---
Entry stack: [V11, 0xd7]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x611
[0x611:0x616]
---
Predecessors: [0xe4]
Successors: [0xec]
---
0x611 JUMPDEST
0x612 PUSH1 0x3
0x614 SLOAD
0x615 DUP2
0x616 JUMP
---
0x611: JUMPDEST 
0x612: V374 = 0x3
0x614: V375 = S[0x3]
0x616: JUMP 0xec
---
Entry stack: [V11, 0xec]
Stack pops: 1
Stack additions: [S0, V375]
Exit stack: [V11, 0xec, V375]

================================

Block 0x617
[0x617:0x63c]
---
Predecessors: [0x10d]
Successors: [0x115]
---
0x617 JUMPDEST
0x618 PUSH1 0x1
0x61a PUSH1 0x0
0x61c SWAP1
0x61d SLOAD
0x61e SWAP1
0x61f PUSH2 0x100
0x622 EXP
0x623 SWAP1
0x624 DIV
0x625 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63a AND
0x63b DUP2
0x63c JUMP
---
0x617: JUMPDEST 
0x618: V376 = 0x1
0x61a: V377 = 0x0
0x61d: V378 = S[0x1]
0x61f: V379 = 0x100
0x622: V380 = EXP 0x100 0x0
0x624: V381 = DIV V378 0x1
0x625: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x63a: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x63c: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, V383]
Exit stack: [V11, 0x115, V383]

================================

Block 0x63d
[0x63d:0x642]
---
Predecessors: [0x162]
Successors: [0x16a]
---
0x63d JUMPDEST
0x63e PUSH1 0x4
0x640 SLOAD
0x641 DUP2
0x642 JUMP
---
0x63d: JUMPDEST 
0x63e: V384 = 0x4
0x640: V385 = S[0x4]
0x642: JUMP 0x16a
---
Entry stack: [V11, 0x16a]
Stack pops: 1
Stack additions: [S0, V385]
Exit stack: [V11, 0x16a, V385]

================================

Block 0x643
[0x643:0x667]
---
Predecessors: [0x18b]
Successors: [0x193]
---
0x643 JUMPDEST
0x644 PUSH1 0x0
0x646 DUP1
0x647 SWAP1
0x648 SLOAD
0x649 SWAP1
0x64a PUSH2 0x100
0x64d EXP
0x64e SWAP1
0x64f DIV
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 DUP2
0x667 JUMP
---
0x643: JUMPDEST 
0x644: V386 = 0x0
0x648: V387 = S[0x0]
0x64a: V388 = 0x100
0x64d: V389 = EXP 0x100 0x0
0x64f: V390 = DIV V387 0x1
0x650: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x667: JUMP 0x193
---
Entry stack: [V11, 0x193]
Stack pops: 1
Stack additions: [S0, V392]
Exit stack: [V11, 0x193, V392]

================================

Block 0x668
[0x668:0x693]
---
Predecessors: []
Successors: []
---
0x668 STOP
0x669 LOG1
0x66a PUSH6 0x627a7a723058
0x671 SHA3
0x672 RETURN
0x673 CALLDATASIZE
0x674 MISSING 0xa6
0x675 MISSING 0xbd
0x676 MISSING 0xe7
0x677 MISSING 0xb0
0x678 MISSING 0xa9
0x679 LOG3
0x67a MISSING 0xcb
0x67b SWAP6
0x67c RETURNDATASIZE
0x67d MISSING 0xbd
0x67e MISSING 0xa7
0x67f GT
0x680 MISSING 0xbd
0x681 MISSING 0xa5
0x682 MISSING 0xb1
0x683 MISSING 0x5c
0x684 SWAP9
0x685 MISSING 0x4c
0x686 MISSING 0x4d
0x687 MISSING 0xc7
0x688 LOG1
0x689 MISSING 0xdf
0x68a EQ
0x68b MISSING 0x49
0x68c SIGNEXTEND
0x68d SHA3
0x68e STATICCALL
0x68f MISSING 0xa5
0x690 DUP6
0x691 MISSING 0xc0
0x692 STOP
0x693 MISSING 0x29
---
0x668: STOP 
0x669: LOG S0 S1 S2
0x66a: V393 = 0x627a7a723058
0x671: V394 = SHA3 0x627a7a723058 S3
0x672: RETURN V394 S4
0x673: V395 = CALLDATASIZE
0x674: MISSING 0xa6
0x675: MISSING 0xbd
0x676: MISSING 0xe7
0x677: MISSING 0xb0
0x678: MISSING 0xa9
0x679: LOG S0 S1 S2 S3 S4
0x67a: MISSING 0xcb
0x67c: V396 = RETURNDATASIZE
0x67d: MISSING 0xbd
0x67e: MISSING 0xa7
0x67f: V397 = GT S0 S1
0x680: MISSING 0xbd
0x681: MISSING 0xa5
0x682: MISSING 0xb1
0x683: MISSING 0x5c
0x685: MISSING 0x4c
0x686: MISSING 0x4d
0x687: MISSING 0xc7
0x688: LOG S0 S1 S2
0x689: MISSING 0xdf
0x68a: V398 = EQ S0 S1
0x68b: MISSING 0x49
0x68c: V399 = SIGNEXTEND S0 S1
0x68d: V400 = SHA3 V399 S2
0x68e: V401 = STATICCALL V400 S3 S4 S5 S6 S7
0x68f: MISSING 0xa5
0x691: MISSING 0xc0
0x692: STOP 
0x693: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V395, V396, S6, S1, S2, S3, S4, S5, S0, V397, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V398, V401, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x6ef53e0
Entry block: 0x7a
Exit block: 0x8d
Body: 0x7a, 0x81, 0x85, 0x8d, 0x1d5

Function 1:
Public function signature: 0x1998aeef
Entry block: 0xcf
Exit block: 0x60a
Body: 0xcf, 0xd7, 0x1fb, 0x20c, 0x210, 0x21c, 0x227, 0x235, 0x23b, 0x241, 0x356, 0x362, 0x369, 0x36f, 0x49c, 0x49d, 0x555, 0x556, 0x579, 0x57d, 0x5e6, 0x5e7, 0x60a, 0x60e, 0x60f

Function 2:
Public function signature: 0x3197cbb6
Entry block: 0xd9
Exit block: 0xec
Body: 0xd9, 0xe0, 0xe4, 0xec, 0x611

Function 3:
Public function signature: 0x67a884e5
Entry block: 0x102
Exit block: 0x115
Body: 0x102, 0x109, 0x10d, 0x115, 0x617

Function 4:
Public function signature: 0x8941db65
Entry block: 0x157
Exit block: 0x16a
Body: 0x157, 0x15e, 0x162, 0x16a, 0x63d

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x180
Exit block: 0x193
Body: 0x180, 0x187, 0x18b, 0x193, 0x643

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

