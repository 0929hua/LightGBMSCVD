Block 0x0
[0x0:0x1f]
---
Predecessors: []
Successors: []
---
0x0 PUSH20 0x0
0x15 ADDRESS
0x16 EQ
0x17 PUSH1 0x80
0x19 PUSH1 0x40
0x1b MSTORE
0x1c PUSH1 0x0
0x1e DUP1
0x1f REVERT
---
0x0: V0 = 0x0
0x15: V1 = ADDRESS
0x16: V2 = EQ V1 0x0
0x17: V3 = 0x80
0x19: V4 = 0x40
0x1b: M[0x40] = 0x80
0x1c: V5 = 0x0
0x1f: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0x20
[0x20:0x58]
---
Predecessors: []
Successors: [0x59]
---
0x20 STOP
0x21 LOG1
0x22 PUSH6 0x627a7a723058
0x29 SHA3
0x2a LOG4
0x2b MISSING 0xde
0x2c PUSH29 0x974f679f0169f745c29a97061a6120ecf4224aa7ea302e282c7db57ad6
0x4a STOP
0x4b MISSING 0x29
0x4c PUSH1 0x80
0x4e PUSH1 0x40
0x50 MSTORE
0x51 PUSH1 0x4
0x53 CALLDATASIZE
0x54 LT
0x55 PUSH2 0xd0
0x58 JUMPI
---
0x20: STOP 
0x21: LOG S0 S1 S2
0x22: V6 = 0x627a7a723058
0x29: V7 = SHA3 0x627a7a723058 S3
0x2a: LOG V7 S4 S5 S6 S7 S8
0x2b: MISSING 0xde
0x2c: V8 = 0x974f679f0169f745c29a97061a6120ecf4224aa7ea302e282c7db57ad6
0x4a: STOP 
0x4b: MISSING 0x29
0x4c: V9 = 0x80
0x4e: V10 = 0x40
0x50: M[0x40] = 0x80
0x51: V11 = 0x4
0x53: V12 = CALLDATASIZE
0x54: V13 = LT V12 0x4
0x55: V14 = 0xd0
0x58: THROWI V13
---
Entry stack: []
Stack pops: 0
Stack additions: [0x974f679f0169f745c29a97061a6120ecf4224aa7ea302e282c7db57ad6]
Exit stack: []

================================

Block 0x59
[0x59:0x8c]
---
Predecessors: [0x20]
Successors: [0x8d]
---
0x59 PUSH1 0x0
0x5b CALLDATALOAD
0x5c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a SWAP1
0x7b DIV
0x7c PUSH4 0xffffffff
0x81 AND
0x82 DUP1
0x83 PUSH4 0x6fdde03
0x88 EQ
0x89 PUSH2 0xda
0x8c JUMPI
---
0x59: V15 = 0x0
0x5b: V16 = CALLDATALOAD 0x0
0x5c: V17 = 0x100000000000000000000000000000000000000000000000000000000
0x7b: V18 = DIV V16 0x100000000000000000000000000000000000000000000000000000000
0x7c: V19 = 0xffffffff
0x81: V20 = AND 0xffffffff V18
0x83: V21 = 0x6fdde03
0x88: V22 = EQ 0x6fdde03 V20
0x89: V23 = 0xda
0x8c: THROWI V22
---
Entry stack: []
Stack pops: 0
Stack additions: [V20]
Exit stack: [V20]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x59]
Successors: [0x98]
---
0x8d DUP1
0x8e PUSH4 0x95ea7b3
0x93 EQ
0x94 PUSH2 0x16a
0x97 JUMPI
---
0x8e: V24 = 0x95ea7b3
0x93: V25 = EQ 0x95ea7b3 V20
0x94: V26 = 0x16a
0x97: THROWI V25
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3]
---
0x98 DUP1
0x99 PUSH4 0x18160ddd
0x9e EQ
0x9f PUSH2 0x1cf
0xa2 JUMPI
---
0x99: V27 = 0x18160ddd
0x9e: V28 = EQ 0x18160ddd V20
0x9f: V29 = 0x1cf
0xa2: THROWI V28
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae]
---
0xa3 DUP1
0xa4 PUSH4 0x23b872dd
0xa9 EQ
0xaa PUSH2 0x1fa
0xad JUMPI
---
0xa4: V30 = 0x23b872dd
0xa9: V31 = EQ 0x23b872dd V20
0xaa: V32 = 0x1fa
0xad: THROWI V31
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9]
---
0xae DUP1
0xaf PUSH4 0x27e235e3
0xb4 EQ
0xb5 PUSH2 0x27f
0xb8 JUMPI
---
0xaf: V33 = 0x27e235e3
0xb4: V34 = EQ 0x27e235e3 V20
0xb5: V35 = 0x27f
0xb8: THROWI V34
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4]
---
0xb9 DUP1
0xba PUSH4 0x313ce567
0xbf EQ
0xc0 PUSH2 0x2d6
0xc3 JUMPI
---
0xba: V36 = 0x313ce567
0xbf: V37 = EQ 0x313ce567 V20
0xc0: V38 = 0x2d6
0xc3: THROWI V37
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf]
---
0xc4 DUP1
0xc5 PUSH4 0x33f37304
0xca EQ
0xcb PUSH2 0x307
0xce JUMPI
---
0xc5: V39 = 0x33f37304
0xca: V40 = EQ 0x33f37304 V20
0xcb: V41 = 0x307
0xce: THROWI V40
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda]
---
0xcf DUP1
0xd0 PUSH4 0x3eaaf86b
0xd5 EQ
0xd6 PUSH2 0x311
0xd9 JUMPI
---
0xd0: V42 = 0x3eaaf86b
0xd5: V43 = EQ 0x3eaaf86b V20
0xd6: V44 = 0x311
0xd9: THROWI V43
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5]
---
0xda DUP1
0xdb PUSH4 0x5c658165
0xe0 EQ
0xe1 PUSH2 0x33c
0xe4 JUMPI
---
0xdb: V45 = 0x5c658165
0xe0: V46 = EQ 0x5c658165 V20
0xe1: V47 = 0x33c
0xe4: THROWI V46
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0]
---
0xe5 DUP1
0xe6 PUSH4 0x70a08231
0xeb EQ
0xec PUSH2 0x3b3
0xef JUMPI
---
0xe6: V48 = 0x70a08231
0xeb: V49 = EQ 0x70a08231 V20
0xec: V50 = 0x3b3
0xef: THROWI V49
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb]
---
0xf0 DUP1
0xf1 PUSH4 0x8da5cb5b
0xf6 EQ
0xf7 PUSH2 0x40a
0xfa JUMPI
---
0xf1: V51 = 0x8da5cb5b
0xf6: V52 = EQ 0x8da5cb5b V20
0xf7: V53 = 0x40a
0xfa: THROWI V52
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf0]
Successors: [0x106]
---
0xfb DUP1
0xfc PUSH4 0x95d89b41
0x101 EQ
0x102 PUSH2 0x461
0x105 JUMPI
---
0xfc: V54 = 0x95d89b41
0x101: V55 = EQ 0x95d89b41 V20
0x102: V56 = 0x461
0x105: THROWI V55
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfb]
Successors: [0x111]
---
0x106 DUP1
0x107 PUSH4 0xa9059cbb
0x10c EQ
0x10d PUSH2 0x4f1
0x110 JUMPI
---
0x107: V57 = 0xa9059cbb
0x10c: V58 = EQ 0xa9059cbb V20
0x10d: V59 = 0x4f1
0x110: THROWI V58
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x111
[0x111:0x11b]
---
Predecessors: [0x106]
Successors: [0x11c]
---
0x111 DUP1
0x112 PUSH4 0xdd62ed3e
0x117 EQ
0x118 PUSH2 0x556
0x11b JUMPI
---
0x112: V60 = 0xdd62ed3e
0x117: V61 = EQ 0xdd62ed3e V20
0x118: V62 = 0x556
0x11b: THROWI V61
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x11c
[0x11c:0x12d]
---
Predecessors: [0x111]
Successors: [0x12e]
---
0x11c JUMPDEST
0x11d PUSH2 0xd8
0x120 PUSH2 0x5cd
0x123 JUMP
0x124 JUMPDEST
0x125 STOP
0x126 JUMPDEST
0x127 CALLVALUE
0x128 DUP1
0x129 ISZERO
0x12a PUSH2 0xe6
0x12d JUMPI
---
0x11c: JUMPDEST 
0x11d: V63 = 0xd8
0x120: V64 = 0x5cd
0x123: THROW 
0x124: JUMPDEST 
0x125: STOP 
0x126: JUMPDEST 
0x127: V65 = CALLVALUE
0x129: V66 = ISZERO V65
0x12a: V67 = 0xe6
0x12d: THROWI V66
---
Entry stack: [V20]
Stack pops: 0
Stack additions: [0xd8, V65]
Exit stack: []

================================

Block 0x12e
[0x12e:0x15f]
---
Predecessors: [0x11c]
Successors: [0x160]
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
0x132 JUMPDEST
0x133 POP
0x134 PUSH2 0xef
0x137 PUSH2 0x7b2
0x13a JUMP
0x13b JUMPDEST
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 DUP1
0x141 PUSH1 0x20
0x143 ADD
0x144 DUP3
0x145 DUP2
0x146 SUB
0x147 DUP3
0x148 MSTORE
0x149 DUP4
0x14a DUP2
0x14b DUP2
0x14c MLOAD
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP2
0x153 POP
0x154 DUP1
0x155 MLOAD
0x156 SWAP1
0x157 PUSH1 0x20
0x159 ADD
0x15a SWAP1
0x15b DUP1
0x15c DUP4
0x15d DUP4
0x15e PUSH1 0x0
---
0x12e: V68 = 0x0
0x131: REVERT 0x0 0x0
0x132: JUMPDEST 
0x134: V69 = 0xef
0x137: V70 = 0x7b2
0x13a: THROW 
0x13b: JUMPDEST 
0x13c: V71 = 0x40
0x13e: V72 = M[0x40]
0x141: V73 = 0x20
0x143: V74 = ADD 0x20 V72
0x146: V75 = SUB V74 V72
0x148: M[V72] = V75
0x14c: V76 = M[S0]
0x14e: M[V74] = V76
0x14f: V77 = 0x20
0x151: V78 = ADD 0x20 V74
0x155: V79 = M[S0]
0x157: V80 = 0x20
0x159: V81 = ADD 0x20 S0
0x15e: V82 = 0x0
---
Entry stack: [V65]
Stack pops: 0
Stack additions: [0xef, 0x0, V81, V78, V79, V79, V81, V78, V72, V72, S0]
Exit stack: []

================================

Block 0x160
[0x160:0x168]
---
Predecessors: [0x12e]
Successors: [0x169]
---
0x160 JUMPDEST
0x161 DUP4
0x162 DUP2
0x163 LT
0x164 ISZERO
0x165 PUSH2 0x12f
0x168 JUMPI
---
0x160: JUMPDEST 
0x163: V83 = LT 0x0 V79
0x164: V84 = ISZERO V83
0x165: V85 = 0x12f
0x168: THROWI V84
---
Entry stack: [S9, V72, V72, V78, V81, V79, V79, V78, V81, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V72, V72, V78, V81, V79, V79, V78, V81, 0x0]

================================

Block 0x169
[0x169:0x18e]
---
Predecessors: [0x160]
Successors: [0x18f]
---
0x169 DUP1
0x16a DUP3
0x16b ADD
0x16c MLOAD
0x16d DUP2
0x16e DUP5
0x16f ADD
0x170 MSTORE
0x171 PUSH1 0x20
0x173 DUP2
0x174 ADD
0x175 SWAP1
0x176 POP
0x177 PUSH2 0x114
0x17a JUMP
0x17b JUMPDEST
0x17c POP
0x17d POP
0x17e POP
0x17f POP
0x180 SWAP1
0x181 POP
0x182 SWAP1
0x183 DUP2
0x184 ADD
0x185 SWAP1
0x186 PUSH1 0x1f
0x188 AND
0x189 DUP1
0x18a ISZERO
0x18b PUSH2 0x15c
0x18e JUMPI
---
0x16b: V86 = ADD V81 0x0
0x16c: V87 = M[V86]
0x16f: V88 = ADD V78 0x0
0x170: M[V88] = V87
0x171: V89 = 0x20
0x174: V90 = ADD 0x0 0x20
0x177: V91 = 0x114
0x17a: THROW 
0x17b: JUMPDEST 
0x184: V92 = ADD S4 S6
0x186: V93 = 0x1f
0x188: V94 = AND 0x1f S4
0x18a: V95 = ISZERO V94
0x18b: V96 = 0x15c
0x18e: THROWI V95
---
Entry stack: [S9, V72, V72, V78, V81, V79, V79, V78, V81, 0x0]
Stack pops: 3
Stack additions: [V94, V92]
Exit stack: []

================================

Block 0x18f
[0x18f:0x1a7]
---
Predecessors: [0x169]
Successors: [0x1a8]
---
0x18f DUP1
0x190 DUP3
0x191 SUB
0x192 DUP1
0x193 MLOAD
0x194 PUSH1 0x1
0x196 DUP4
0x197 PUSH1 0x20
0x199 SUB
0x19a PUSH2 0x100
0x19d EXP
0x19e SUB
0x19f NOT
0x1a0 AND
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP2
0x1a7 POP
---
0x191: V97 = SUB V92 V94
0x193: V98 = M[V97]
0x194: V99 = 0x1
0x197: V100 = 0x20
0x199: V101 = SUB 0x20 V94
0x19a: V102 = 0x100
0x19d: V103 = EXP 0x100 V101
0x19e: V104 = SUB V103 0x1
0x19f: V105 = NOT V104
0x1a0: V106 = AND V105 V98
0x1a2: M[V97] = V106
0x1a3: V107 = 0x20
0x1a5: V108 = ADD 0x20 V97
---
Entry stack: [V92, V94]
Stack pops: 2
Stack additions: [V108, S0]
Exit stack: [V108, V94]

================================

Block 0x1a8
[0x1a8:0x1bd]
---
Predecessors: [0x18f]
Successors: [0x1be]
---
0x1a8 JUMPDEST
0x1a9 POP
0x1aa SWAP3
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 SWAP2
0x1b3 SUB
0x1b4 SWAP1
0x1b5 RETURN
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x176
0x1bd JUMPI
---
0x1a8: JUMPDEST 
0x1ae: V109 = 0x40
0x1b0: V110 = M[0x40]
0x1b3: V111 = SUB V108 V110
0x1b5: RETURN V110 V111
0x1b6: JUMPDEST 
0x1b7: V112 = CALLVALUE
0x1b9: V113 = ISZERO V112
0x1ba: V114 = 0x176
0x1bd: THROWI V113
---
Entry stack: [V108, V94]
Stack pops: 10
Stack additions: [V112]
Exit stack: []

================================

Block 0x1be
[0x1be:0x222]
---
Predecessors: [0x1a8]
Successors: [0x223]
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 PUSH2 0x1b5
0x1c7 PUSH1 0x4
0x1c9 DUP1
0x1ca CALLDATASIZE
0x1cb SUB
0x1cc DUP2
0x1cd ADD
0x1ce SWAP1
0x1cf DUP1
0x1d0 DUP1
0x1d1 CALLDATALOAD
0x1d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e7 AND
0x1e8 SWAP1
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec SWAP1
0x1ed SWAP3
0x1ee SWAP2
0x1ef SWAP1
0x1f0 DUP1
0x1f1 CALLDATALOAD
0x1f2 SWAP1
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 SWAP1
0x1f7 SWAP3
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa POP
0x1fb POP
0x1fc POP
0x1fd PUSH2 0x7eb
0x200 JUMP
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP1
0x206 DUP3
0x207 ISZERO
0x208 ISZERO
0x209 ISZERO
0x20a ISZERO
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x20
0x20f ADD
0x210 SWAP2
0x211 POP
0x212 POP
0x213 PUSH1 0x40
0x215 MLOAD
0x216 DUP1
0x217 SWAP2
0x218 SUB
0x219 SWAP1
0x21a RETURN
0x21b JUMPDEST
0x21c CALLVALUE
0x21d DUP1
0x21e ISZERO
0x21f PUSH2 0x1db
0x222 JUMPI
---
0x1be: V115 = 0x0
0x1c1: REVERT 0x0 0x0
0x1c2: JUMPDEST 
0x1c4: V116 = 0x1b5
0x1c7: V117 = 0x4
0x1ca: V118 = CALLDATASIZE
0x1cb: V119 = SUB V118 0x4
0x1cd: V120 = ADD 0x4 V119
0x1d1: V121 = CALLDATALOAD 0x4
0x1d2: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1e9: V124 = 0x20
0x1eb: V125 = ADD 0x20 0x4
0x1f1: V126 = CALLDATALOAD 0x24
0x1f3: V127 = 0x20
0x1f5: V128 = ADD 0x20 0x24
0x1fd: V129 = 0x7eb
0x200: THROW 
0x201: JUMPDEST 
0x202: V130 = 0x40
0x204: V131 = M[0x40]
0x207: V132 = ISZERO S0
0x208: V133 = ISZERO V132
0x209: V134 = ISZERO V133
0x20a: V135 = ISZERO V134
0x20c: M[V131] = V135
0x20d: V136 = 0x20
0x20f: V137 = ADD 0x20 V131
0x213: V138 = 0x40
0x215: V139 = M[0x40]
0x218: V140 = SUB V137 V139
0x21a: RETURN V139 V140
0x21b: JUMPDEST 
0x21c: V141 = CALLVALUE
0x21e: V142 = ISZERO V141
0x21f: V143 = 0x1db
0x222: THROWI V142
---
Entry stack: [V112]
Stack pops: 0
Stack additions: [V126, V123, 0x1b5, V141]
Exit stack: []

================================

Block 0x223
[0x223:0x24d]
---
Predecessors: [0x1be]
Successors: [0x24e]
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
0x227 JUMPDEST
0x228 POP
0x229 PUSH2 0x1e4
0x22c PUSH2 0x92f
0x22f JUMP
0x230 JUMPDEST
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP1
0x235 DUP3
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b SWAP2
0x23c POP
0x23d POP
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 SWAP2
0x243 SUB
0x244 SWAP1
0x245 RETURN
0x246 JUMPDEST
0x247 CALLVALUE
0x248 DUP1
0x249 ISZERO
0x24a PUSH2 0x206
0x24d JUMPI
---
0x223: V144 = 0x0
0x226: REVERT 0x0 0x0
0x227: JUMPDEST 
0x229: V145 = 0x1e4
0x22c: V146 = 0x92f
0x22f: THROW 
0x230: JUMPDEST 
0x231: V147 = 0x40
0x233: V148 = M[0x40]
0x237: M[V148] = S0
0x238: V149 = 0x20
0x23a: V150 = ADD 0x20 V148
0x23e: V151 = 0x40
0x240: V152 = M[0x40]
0x243: V153 = SUB V150 V152
0x245: RETURN V152 V153
0x246: JUMPDEST 
0x247: V154 = CALLVALUE
0x249: V155 = ISZERO V154
0x24a: V156 = 0x206
0x24d: THROWI V155
---
Entry stack: [V141]
Stack pops: 0
Stack additions: [0x1e4, V154]
Exit stack: []

================================

Block 0x24e
[0x24e:0x2d2]
---
Predecessors: [0x223]
Successors: [0x2d3]
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
0x252 JUMPDEST
0x253 POP
0x254 PUSH2 0x265
0x257 PUSH1 0x4
0x259 DUP1
0x25a CALLDATASIZE
0x25b SUB
0x25c DUP2
0x25d ADD
0x25e SWAP1
0x25f DUP1
0x260 DUP1
0x261 CALLDATALOAD
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 SWAP1
0x279 PUSH1 0x20
0x27b ADD
0x27c SWAP1
0x27d SWAP3
0x27e SWAP2
0x27f SWAP1
0x280 DUP1
0x281 CALLDATALOAD
0x282 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x297 AND
0x298 SWAP1
0x299 PUSH1 0x20
0x29b ADD
0x29c SWAP1
0x29d SWAP3
0x29e SWAP2
0x29f SWAP1
0x2a0 DUP1
0x2a1 CALLDATALOAD
0x2a2 SWAP1
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP1
0x2a7 SWAP3
0x2a8 SWAP2
0x2a9 SWAP1
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH2 0x942
0x2b0 JUMP
0x2b1 JUMPDEST
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 DUP3
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 ISZERO
0x2ba ISZERO
0x2bb DUP2
0x2bc MSTORE
0x2bd PUSH1 0x20
0x2bf ADD
0x2c0 SWAP2
0x2c1 POP
0x2c2 POP
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 SWAP2
0x2c8 SUB
0x2c9 SWAP1
0x2ca RETURN
0x2cb JUMPDEST
0x2cc CALLVALUE
0x2cd DUP1
0x2ce ISZERO
0x2cf PUSH2 0x28b
0x2d2 JUMPI
---
0x24e: V157 = 0x0
0x251: REVERT 0x0 0x0
0x252: JUMPDEST 
0x254: V158 = 0x265
0x257: V159 = 0x4
0x25a: V160 = CALLDATASIZE
0x25b: V161 = SUB V160 0x4
0x25d: V162 = ADD 0x4 V161
0x261: V163 = CALLDATALOAD 0x4
0x262: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x279: V166 = 0x20
0x27b: V167 = ADD 0x20 0x4
0x281: V168 = CALLDATALOAD 0x24
0x282: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x297: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x299: V171 = 0x20
0x29b: V172 = ADD 0x20 0x24
0x2a1: V173 = CALLDATALOAD 0x44
0x2a3: V174 = 0x20
0x2a5: V175 = ADD 0x20 0x44
0x2ad: V176 = 0x942
0x2b0: THROW 
0x2b1: JUMPDEST 
0x2b2: V177 = 0x40
0x2b4: V178 = M[0x40]
0x2b7: V179 = ISZERO S0
0x2b8: V180 = ISZERO V179
0x2b9: V181 = ISZERO V180
0x2ba: V182 = ISZERO V181
0x2bc: M[V178] = V182
0x2bd: V183 = 0x20
0x2bf: V184 = ADD 0x20 V178
0x2c3: V185 = 0x40
0x2c5: V186 = M[0x40]
0x2c8: V187 = SUB V184 V186
0x2ca: RETURN V186 V187
0x2cb: JUMPDEST 
0x2cc: V188 = CALLVALUE
0x2ce: V189 = ISZERO V188
0x2cf: V190 = 0x28b
0x2d2: THROWI V189
---
Entry stack: [V154]
Stack pops: 0
Stack additions: [V173, V170, V165, 0x265, V188]
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x329]
---
Predecessors: [0x24e]
Successors: [0x32a]
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
0x2d7 JUMPDEST
0x2d8 POP
0x2d9 PUSH2 0x2c0
0x2dc PUSH1 0x4
0x2de DUP1
0x2df CALLDATASIZE
0x2e0 SUB
0x2e1 DUP2
0x2e2 ADD
0x2e3 SWAP1
0x2e4 DUP1
0x2e5 DUP1
0x2e6 CALLDATALOAD
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd SWAP1
0x2fe PUSH1 0x20
0x300 ADD
0x301 SWAP1
0x302 SWAP3
0x303 SWAP2
0x304 SWAP1
0x305 POP
0x306 POP
0x307 POP
0x308 PUSH2 0xd5e
0x30b JUMP
0x30c JUMPDEST
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 DUP3
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x20
0x316 ADD
0x317 SWAP2
0x318 POP
0x319 POP
0x31a PUSH1 0x40
0x31c MLOAD
0x31d DUP1
0x31e SWAP2
0x31f SUB
0x320 SWAP1
0x321 RETURN
0x322 JUMPDEST
0x323 CALLVALUE
0x324 DUP1
0x325 ISZERO
0x326 PUSH2 0x2e2
0x329 JUMPI
---
0x2d3: V191 = 0x0
0x2d6: REVERT 0x0 0x0
0x2d7: JUMPDEST 
0x2d9: V192 = 0x2c0
0x2dc: V193 = 0x4
0x2df: V194 = CALLDATASIZE
0x2e0: V195 = SUB V194 0x4
0x2e2: V196 = ADD 0x4 V195
0x2e6: V197 = CALLDATALOAD 0x4
0x2e7: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x2fe: V200 = 0x20
0x300: V201 = ADD 0x20 0x4
0x308: V202 = 0xd5e
0x30b: THROW 
0x30c: JUMPDEST 
0x30d: V203 = 0x40
0x30f: V204 = M[0x40]
0x313: M[V204] = S0
0x314: V205 = 0x20
0x316: V206 = ADD 0x20 V204
0x31a: V207 = 0x40
0x31c: V208 = M[0x40]
0x31f: V209 = SUB V206 V208
0x321: RETURN V208 V209
0x322: JUMPDEST 
0x323: V210 = CALLVALUE
0x325: V211 = ISZERO V210
0x326: V212 = 0x2e2
0x329: THROWI V211
---
Entry stack: [V188]
Stack pops: 0
Stack additions: [V199, 0x2c0, V210]
Exit stack: []

================================

Block 0x32a
[0x32a:0x364]
---
Predecessors: [0x2d3]
Successors: [0x365]
---
0x32a PUSH1 0x0
0x32c DUP1
0x32d REVERT
0x32e JUMPDEST
0x32f POP
0x330 PUSH2 0x2eb
0x333 PUSH2 0xd76
0x336 JUMP
0x337 JUMPDEST
0x338 PUSH1 0x40
0x33a MLOAD
0x33b DUP1
0x33c DUP3
0x33d PUSH1 0xff
0x33f AND
0x340 PUSH1 0xff
0x342 AND
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP2
0x349 POP
0x34a POP
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 RETURN
0x353 JUMPDEST
0x354 PUSH2 0x30f
0x357 PUSH2 0x5cd
0x35a JUMP
0x35b JUMPDEST
0x35c STOP
0x35d JUMPDEST
0x35e CALLVALUE
0x35f DUP1
0x360 ISZERO
0x361 PUSH2 0x31d
0x364 JUMPI
---
0x32a: V213 = 0x0
0x32d: REVERT 0x0 0x0
0x32e: JUMPDEST 
0x330: V214 = 0x2eb
0x333: V215 = 0xd76
0x336: THROW 
0x337: JUMPDEST 
0x338: V216 = 0x40
0x33a: V217 = M[0x40]
0x33d: V218 = 0xff
0x33f: V219 = AND 0xff S0
0x340: V220 = 0xff
0x342: V221 = AND 0xff V219
0x344: M[V217] = V221
0x345: V222 = 0x20
0x347: V223 = ADD 0x20 V217
0x34b: V224 = 0x40
0x34d: V225 = M[0x40]
0x350: V226 = SUB V223 V225
0x352: RETURN V225 V226
0x353: JUMPDEST 
0x354: V227 = 0x30f
0x357: V228 = 0x5cd
0x35a: THROW 
0x35b: JUMPDEST 
0x35c: STOP 
0x35d: JUMPDEST 
0x35e: V229 = CALLVALUE
0x360: V230 = ISZERO V229
0x361: V231 = 0x31d
0x364: THROWI V230
---
Entry stack: [V210]
Stack pops: 0
Stack additions: [0x2eb, 0x30f, V229]
Exit stack: []

================================

Block 0x365
[0x365:0x38f]
---
Predecessors: [0x32a]
Successors: [0x390]
---
0x365 PUSH1 0x0
0x367 DUP1
0x368 REVERT
0x369 JUMPDEST
0x36a POP
0x36b PUSH2 0x326
0x36e PUSH2 0xd7b
0x371 JUMP
0x372 JUMPDEST
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 DUP3
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x20
0x37c ADD
0x37d SWAP2
0x37e POP
0x37f POP
0x380 PUSH1 0x40
0x382 MLOAD
0x383 DUP1
0x384 SWAP2
0x385 SUB
0x386 SWAP1
0x387 RETURN
0x388 JUMPDEST
0x389 CALLVALUE
0x38a DUP1
0x38b ISZERO
0x38c PUSH2 0x348
0x38f JUMPI
---
0x365: V232 = 0x0
0x368: REVERT 0x0 0x0
0x369: JUMPDEST 
0x36b: V233 = 0x326
0x36e: V234 = 0xd7b
0x371: THROW 
0x372: JUMPDEST 
0x373: V235 = 0x40
0x375: V236 = M[0x40]
0x379: M[V236] = S0
0x37a: V237 = 0x20
0x37c: V238 = ADD 0x20 V236
0x380: V239 = 0x40
0x382: V240 = M[0x40]
0x385: V241 = SUB V238 V240
0x387: RETURN V240 V241
0x388: JUMPDEST 
0x389: V242 = CALLVALUE
0x38b: V243 = ISZERO V242
0x38c: V244 = 0x348
0x38f: THROWI V243
---
Entry stack: [V229]
Stack pops: 0
Stack additions: [0x326, V242]
Exit stack: []

================================

Block 0x390
[0x390:0x406]
---
Predecessors: [0x365]
Successors: [0x407]
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
0x394 JUMPDEST
0x395 POP
0x396 PUSH2 0x39d
0x399 PUSH1 0x4
0x39b DUP1
0x39c CALLDATASIZE
0x39d SUB
0x39e DUP2
0x39f ADD
0x3a0 SWAP1
0x3a1 DUP1
0x3a2 DUP1
0x3a3 CALLDATALOAD
0x3a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b9 AND
0x3ba SWAP1
0x3bb PUSH1 0x20
0x3bd ADD
0x3be SWAP1
0x3bf SWAP3
0x3c0 SWAP2
0x3c1 SWAP1
0x3c2 DUP1
0x3c3 CALLDATALOAD
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da SWAP1
0x3db PUSH1 0x20
0x3dd ADD
0x3de SWAP1
0x3df SWAP3
0x3e0 SWAP2
0x3e1 SWAP1
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 PUSH2 0xd8a
0x3e8 JUMP
0x3e9 JUMPDEST
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP1
0x3ee DUP3
0x3ef DUP2
0x3f0 MSTORE
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 SWAP2
0x3f5 POP
0x3f6 POP
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa DUP1
0x3fb SWAP2
0x3fc SUB
0x3fd SWAP1
0x3fe RETURN
0x3ff JUMPDEST
0x400 CALLVALUE
0x401 DUP1
0x402 ISZERO
0x403 PUSH2 0x3bf
0x406 JUMPI
---
0x390: V245 = 0x0
0x393: REVERT 0x0 0x0
0x394: JUMPDEST 
0x396: V246 = 0x39d
0x399: V247 = 0x4
0x39c: V248 = CALLDATASIZE
0x39d: V249 = SUB V248 0x4
0x39f: V250 = ADD 0x4 V249
0x3a3: V251 = CALLDATALOAD 0x4
0x3a4: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b9: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x3bb: V254 = 0x20
0x3bd: V255 = ADD 0x20 0x4
0x3c3: V256 = CALLDATALOAD 0x24
0x3c4: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x3db: V259 = 0x20
0x3dd: V260 = ADD 0x20 0x24
0x3e5: V261 = 0xd8a
0x3e8: THROW 
0x3e9: JUMPDEST 
0x3ea: V262 = 0x40
0x3ec: V263 = M[0x40]
0x3f0: M[V263] = S0
0x3f1: V264 = 0x20
0x3f3: V265 = ADD 0x20 V263
0x3f7: V266 = 0x40
0x3f9: V267 = M[0x40]
0x3fc: V268 = SUB V265 V267
0x3fe: RETURN V267 V268
0x3ff: JUMPDEST 
0x400: V269 = CALLVALUE
0x402: V270 = ISZERO V269
0x403: V271 = 0x3bf
0x406: THROWI V270
---
Entry stack: [V242]
Stack pops: 0
Stack additions: [V258, V253, 0x39d, V269]
Exit stack: []

================================

Block 0x407
[0x407:0x45d]
---
Predecessors: [0x390]
Successors: [0x45e]
---
0x407 PUSH1 0x0
0x409 DUP1
0x40a REVERT
0x40b JUMPDEST
0x40c POP
0x40d PUSH2 0x3f4
0x410 PUSH1 0x4
0x412 DUP1
0x413 CALLDATASIZE
0x414 SUB
0x415 DUP2
0x416 ADD
0x417 SWAP1
0x418 DUP1
0x419 DUP1
0x41a CALLDATALOAD
0x41b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x430 AND
0x431 SWAP1
0x432 PUSH1 0x20
0x434 ADD
0x435 SWAP1
0x436 SWAP3
0x437 SWAP2
0x438 SWAP1
0x439 POP
0x43a POP
0x43b POP
0x43c PUSH2 0xdaf
0x43f JUMP
0x440 JUMPDEST
0x441 PUSH1 0x40
0x443 MLOAD
0x444 DUP1
0x445 DUP3
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b SWAP2
0x44c POP
0x44d POP
0x44e PUSH1 0x40
0x450 MLOAD
0x451 DUP1
0x452 SWAP2
0x453 SUB
0x454 SWAP1
0x455 RETURN
0x456 JUMPDEST
0x457 CALLVALUE
0x458 DUP1
0x459 ISZERO
0x45a PUSH2 0x416
0x45d JUMPI
---
0x407: V272 = 0x0
0x40a: REVERT 0x0 0x0
0x40b: JUMPDEST 
0x40d: V273 = 0x3f4
0x410: V274 = 0x4
0x413: V275 = CALLDATASIZE
0x414: V276 = SUB V275 0x4
0x416: V277 = ADD 0x4 V276
0x41a: V278 = CALLDATALOAD 0x4
0x41b: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x430: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x432: V281 = 0x20
0x434: V282 = ADD 0x20 0x4
0x43c: V283 = 0xdaf
0x43f: THROW 
0x440: JUMPDEST 
0x441: V284 = 0x40
0x443: V285 = M[0x40]
0x447: M[V285] = S0
0x448: V286 = 0x20
0x44a: V287 = ADD 0x20 V285
0x44e: V288 = 0x40
0x450: V289 = M[0x40]
0x453: V290 = SUB V287 V289
0x455: RETURN V289 V290
0x456: JUMPDEST 
0x457: V291 = CALLVALUE
0x459: V292 = ISZERO V291
0x45a: V293 = 0x416
0x45d: THROWI V292
---
Entry stack: [V269]
Stack pops: 0
Stack additions: [V280, 0x3f4, V291]
Exit stack: []

================================

Block 0x45e
[0x45e:0x4b4]
---
Predecessors: [0x407]
Successors: [0x4b5]
---
0x45e PUSH1 0x0
0x460 DUP1
0x461 REVERT
0x462 JUMPDEST
0x463 POP
0x464 PUSH2 0x41f
0x467 PUSH2 0xdf8
0x46a JUMP
0x46b JUMPDEST
0x46c PUSH1 0x40
0x46e MLOAD
0x46f DUP1
0x470 DUP3
0x471 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x486 AND
0x487 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49c AND
0x49d DUP2
0x49e MSTORE
0x49f PUSH1 0x20
0x4a1 ADD
0x4a2 SWAP2
0x4a3 POP
0x4a4 POP
0x4a5 PUSH1 0x40
0x4a7 MLOAD
0x4a8 DUP1
0x4a9 SWAP2
0x4aa SUB
0x4ab SWAP1
0x4ac RETURN
0x4ad JUMPDEST
0x4ae CALLVALUE
0x4af DUP1
0x4b0 ISZERO
0x4b1 PUSH2 0x46d
0x4b4 JUMPI
---
0x45e: V294 = 0x0
0x461: REVERT 0x0 0x0
0x462: JUMPDEST 
0x464: V295 = 0x41f
0x467: V296 = 0xdf8
0x46a: THROW 
0x46b: JUMPDEST 
0x46c: V297 = 0x40
0x46e: V298 = M[0x40]
0x471: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x486: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x487: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x49e: M[V298] = V302
0x49f: V303 = 0x20
0x4a1: V304 = ADD 0x20 V298
0x4a5: V305 = 0x40
0x4a7: V306 = M[0x40]
0x4aa: V307 = SUB V304 V306
0x4ac: RETURN V306 V307
0x4ad: JUMPDEST 
0x4ae: V308 = CALLVALUE
0x4b0: V309 = ISZERO V308
0x4b1: V310 = 0x46d
0x4b4: THROWI V309
---
Entry stack: [V291]
Stack pops: 0
Stack additions: [0x41f, V308]
Exit stack: []

================================

Block 0x4b5
[0x4b5:0x4e6]
---
Predecessors: [0x45e]
Successors: [0x4e7]
---
0x4b5 PUSH1 0x0
0x4b7 DUP1
0x4b8 REVERT
0x4b9 JUMPDEST
0x4ba POP
0x4bb PUSH2 0x476
0x4be PUSH2 0xe1d
0x4c1 JUMP
0x4c2 JUMPDEST
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 DUP1
0x4c7 DUP1
0x4c8 PUSH1 0x20
0x4ca ADD
0x4cb DUP3
0x4cc DUP2
0x4cd SUB
0x4ce DUP3
0x4cf MSTORE
0x4d0 DUP4
0x4d1 DUP2
0x4d2 DUP2
0x4d3 MLOAD
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 SWAP2
0x4da POP
0x4db DUP1
0x4dc MLOAD
0x4dd SWAP1
0x4de PUSH1 0x20
0x4e0 ADD
0x4e1 SWAP1
0x4e2 DUP1
0x4e3 DUP4
0x4e4 DUP4
0x4e5 PUSH1 0x0
---
0x4b5: V311 = 0x0
0x4b8: REVERT 0x0 0x0
0x4b9: JUMPDEST 
0x4bb: V312 = 0x476
0x4be: V313 = 0xe1d
0x4c1: THROW 
0x4c2: JUMPDEST 
0x4c3: V314 = 0x40
0x4c5: V315 = M[0x40]
0x4c8: V316 = 0x20
0x4ca: V317 = ADD 0x20 V315
0x4cd: V318 = SUB V317 V315
0x4cf: M[V315] = V318
0x4d3: V319 = M[S0]
0x4d5: M[V317] = V319
0x4d6: V320 = 0x20
0x4d8: V321 = ADD 0x20 V317
0x4dc: V322 = M[S0]
0x4de: V323 = 0x20
0x4e0: V324 = ADD 0x20 S0
0x4e5: V325 = 0x0
---
Entry stack: [V308]
Stack pops: 0
Stack additions: [0x476, 0x0, V324, V321, V322, V322, V324, V321, V315, V315, S0]
Exit stack: []

================================

Block 0x4e7
[0x4e7:0x4ef]
---
Predecessors: [0x4b5]
Successors: [0x4f0]
---
0x4e7 JUMPDEST
0x4e8 DUP4
0x4e9 DUP2
0x4ea LT
0x4eb ISZERO
0x4ec PUSH2 0x4b6
0x4ef JUMPI
---
0x4e7: JUMPDEST 
0x4ea: V326 = LT 0x0 V322
0x4eb: V327 = ISZERO V326
0x4ec: V328 = 0x4b6
0x4ef: THROWI V327
---
Entry stack: [S9, V315, V315, V321, V324, V322, V322, V321, V324, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V315, V315, V321, V324, V322, V322, V321, V324, 0x0]

================================

Block 0x4f0
[0x4f0:0x515]
---
Predecessors: [0x4e7]
Successors: [0x516]
---
0x4f0 DUP1
0x4f1 DUP3
0x4f2 ADD
0x4f3 MLOAD
0x4f4 DUP2
0x4f5 DUP5
0x4f6 ADD
0x4f7 MSTORE
0x4f8 PUSH1 0x20
0x4fa DUP2
0x4fb ADD
0x4fc SWAP1
0x4fd POP
0x4fe PUSH2 0x49b
0x501 JUMP
0x502 JUMPDEST
0x503 POP
0x504 POP
0x505 POP
0x506 POP
0x507 SWAP1
0x508 POP
0x509 SWAP1
0x50a DUP2
0x50b ADD
0x50c SWAP1
0x50d PUSH1 0x1f
0x50f AND
0x510 DUP1
0x511 ISZERO
0x512 PUSH2 0x4e3
0x515 JUMPI
---
0x4f2: V329 = ADD V324 0x0
0x4f3: V330 = M[V329]
0x4f6: V331 = ADD V321 0x0
0x4f7: M[V331] = V330
0x4f8: V332 = 0x20
0x4fb: V333 = ADD 0x0 0x20
0x4fe: V334 = 0x49b
0x501: THROW 
0x502: JUMPDEST 
0x50b: V335 = ADD S4 S6
0x50d: V336 = 0x1f
0x50f: V337 = AND 0x1f S4
0x511: V338 = ISZERO V337
0x512: V339 = 0x4e3
0x515: THROWI V338
---
Entry stack: [S9, V315, V315, V321, V324, V322, V322, V321, V324, 0x0]
Stack pops: 3
Stack additions: [V337, V335]
Exit stack: []

================================

Block 0x516
[0x516:0x52e]
---
Predecessors: [0x4f0]
Successors: [0x52f]
---
0x516 DUP1
0x517 DUP3
0x518 SUB
0x519 DUP1
0x51a MLOAD
0x51b PUSH1 0x1
0x51d DUP4
0x51e PUSH1 0x20
0x520 SUB
0x521 PUSH2 0x100
0x524 EXP
0x525 SUB
0x526 NOT
0x527 AND
0x528 DUP2
0x529 MSTORE
0x52a PUSH1 0x20
0x52c ADD
0x52d SWAP2
0x52e POP
---
0x518: V340 = SUB V335 V337
0x51a: V341 = M[V340]
0x51b: V342 = 0x1
0x51e: V343 = 0x20
0x520: V344 = SUB 0x20 V337
0x521: V345 = 0x100
0x524: V346 = EXP 0x100 V344
0x525: V347 = SUB V346 0x1
0x526: V348 = NOT V347
0x527: V349 = AND V348 V341
0x529: M[V340] = V349
0x52a: V350 = 0x20
0x52c: V351 = ADD 0x20 V340
---
Entry stack: [V335, V337]
Stack pops: 2
Stack additions: [V351, S0]
Exit stack: [V351, V337]

================================

Block 0x52f
[0x52f:0x544]
---
Predecessors: [0x516]
Successors: [0x545]
---
0x52f JUMPDEST
0x530 POP
0x531 SWAP3
0x532 POP
0x533 POP
0x534 POP
0x535 PUSH1 0x40
0x537 MLOAD
0x538 DUP1
0x539 SWAP2
0x53a SUB
0x53b SWAP1
0x53c RETURN
0x53d JUMPDEST
0x53e CALLVALUE
0x53f DUP1
0x540 ISZERO
0x541 PUSH2 0x4fd
0x544 JUMPI
---
0x52f: JUMPDEST 
0x535: V352 = 0x40
0x537: V353 = M[0x40]
0x53a: V354 = SUB V351 V353
0x53c: RETURN V353 V354
0x53d: JUMPDEST 
0x53e: V355 = CALLVALUE
0x540: V356 = ISZERO V355
0x541: V357 = 0x4fd
0x544: THROWI V356
---
Entry stack: [V351, V337]
Stack pops: 10
Stack additions: [V355]
Exit stack: []

================================

Block 0x545
[0x545:0x5a9]
---
Predecessors: [0x52f]
Successors: [0x5aa]
---
0x545 PUSH1 0x0
0x547 DUP1
0x548 REVERT
0x549 JUMPDEST
0x54a POP
0x54b PUSH2 0x53c
0x54e PUSH1 0x4
0x550 DUP1
0x551 CALLDATASIZE
0x552 SUB
0x553 DUP2
0x554 ADD
0x555 SWAP1
0x556 DUP1
0x557 DUP1
0x558 CALLDATALOAD
0x559 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56e AND
0x56f SWAP1
0x570 PUSH1 0x20
0x572 ADD
0x573 SWAP1
0x574 SWAP3
0x575 SWAP2
0x576 SWAP1
0x577 DUP1
0x578 CALLDATALOAD
0x579 SWAP1
0x57a PUSH1 0x20
0x57c ADD
0x57d SWAP1
0x57e SWAP3
0x57f SWAP2
0x580 SWAP1
0x581 POP
0x582 POP
0x583 POP
0x584 PUSH2 0xe56
0x587 JUMP
0x588 JUMPDEST
0x589 PUSH1 0x40
0x58b MLOAD
0x58c DUP1
0x58d DUP3
0x58e ISZERO
0x58f ISZERO
0x590 ISZERO
0x591 ISZERO
0x592 DUP2
0x593 MSTORE
0x594 PUSH1 0x20
0x596 ADD
0x597 SWAP2
0x598 POP
0x599 POP
0x59a PUSH1 0x40
0x59c MLOAD
0x59d DUP1
0x59e SWAP2
0x59f SUB
0x5a0 SWAP1
0x5a1 RETURN
0x5a2 JUMPDEST
0x5a3 CALLVALUE
0x5a4 DUP1
0x5a5 ISZERO
0x5a6 PUSH2 0x562
0x5a9 JUMPI
---
0x545: V358 = 0x0
0x548: REVERT 0x0 0x0
0x549: JUMPDEST 
0x54b: V359 = 0x53c
0x54e: V360 = 0x4
0x551: V361 = CALLDATASIZE
0x552: V362 = SUB V361 0x4
0x554: V363 = ADD 0x4 V362
0x558: V364 = CALLDATALOAD 0x4
0x559: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x56e: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x570: V367 = 0x20
0x572: V368 = ADD 0x20 0x4
0x578: V369 = CALLDATALOAD 0x24
0x57a: V370 = 0x20
0x57c: V371 = ADD 0x20 0x24
0x584: V372 = 0xe56
0x587: THROW 
0x588: JUMPDEST 
0x589: V373 = 0x40
0x58b: V374 = M[0x40]
0x58e: V375 = ISZERO S0
0x58f: V376 = ISZERO V375
0x590: V377 = ISZERO V376
0x591: V378 = ISZERO V377
0x593: M[V374] = V378
0x594: V379 = 0x20
0x596: V380 = ADD 0x20 V374
0x59a: V381 = 0x40
0x59c: V382 = M[0x40]
0x59f: V383 = SUB V380 V382
0x5a1: RETURN V382 V383
0x5a2: JUMPDEST 
0x5a3: V384 = CALLVALUE
0x5a5: V385 = ISZERO V384
0x5a6: V386 = 0x562
0x5a9: THROWI V385
---
Entry stack: [V355]
Stack pops: 0
Stack additions: [V369, V366, 0x53c, V384]
Exit stack: []

================================

Block 0x5aa
[0x5aa:0x623]
---
Predecessors: [0x545]
Successors: [0x624]
---
0x5aa PUSH1 0x0
0x5ac DUP1
0x5ad REVERT
0x5ae JUMPDEST
0x5af POP
0x5b0 PUSH2 0x5b7
0x5b3 PUSH1 0x4
0x5b5 DUP1
0x5b6 CALLDATASIZE
0x5b7 SUB
0x5b8 DUP2
0x5b9 ADD
0x5ba SWAP1
0x5bb DUP1
0x5bc DUP1
0x5bd CALLDATALOAD
0x5be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d3 AND
0x5d4 SWAP1
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 SWAP1
0x5d9 SWAP3
0x5da SWAP2
0x5db SWAP1
0x5dc DUP1
0x5dd CALLDATALOAD
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 AND
0x5f4 SWAP1
0x5f5 PUSH1 0x20
0x5f7 ADD
0x5f8 SWAP1
0x5f9 SWAP3
0x5fa SWAP2
0x5fb SWAP1
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff PUSH2 0x10da
0x602 JUMP
0x603 JUMPDEST
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP1
0x608 DUP3
0x609 DUP2
0x60a MSTORE
0x60b PUSH1 0x20
0x60d ADD
0x60e SWAP2
0x60f POP
0x610 POP
0x611 PUSH1 0x40
0x613 MLOAD
0x614 DUP1
0x615 SWAP2
0x616 SUB
0x617 SWAP1
0x618 RETURN
0x619 JUMPDEST
0x61a PUSH1 0x0
0x61c CALLVALUE
0x61d GT
0x61e ISZERO
0x61f ISZERO
0x620 PUSH2 0x5dc
0x623 JUMPI
---
0x5aa: V387 = 0x0
0x5ad: REVERT 0x0 0x0
0x5ae: JUMPDEST 
0x5b0: V388 = 0x5b7
0x5b3: V389 = 0x4
0x5b6: V390 = CALLDATASIZE
0x5b7: V391 = SUB V390 0x4
0x5b9: V392 = ADD 0x4 V391
0x5bd: V393 = CALLDATALOAD 0x4
0x5be: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x5d5: V396 = 0x20
0x5d7: V397 = ADD 0x20 0x4
0x5dd: V398 = CALLDATALOAD 0x24
0x5de: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x5f5: V401 = 0x20
0x5f7: V402 = ADD 0x20 0x24
0x5ff: V403 = 0x10da
0x602: THROW 
0x603: JUMPDEST 
0x604: V404 = 0x40
0x606: V405 = M[0x40]
0x60a: M[V405] = S0
0x60b: V406 = 0x20
0x60d: V407 = ADD 0x20 V405
0x611: V408 = 0x40
0x613: V409 = M[0x40]
0x616: V410 = SUB V407 V409
0x618: RETURN V409 V410
0x619: JUMPDEST 
0x61a: V411 = 0x0
0x61c: V412 = CALLVALUE
0x61d: V413 = GT V412 0x0
0x61e: V414 = ISZERO V413
0x61f: V415 = ISZERO V414
0x620: V416 = 0x5dc
0x623: THROWI V415
---
Entry stack: [V384]
Stack pops: 0
Stack additions: [V400, V395, 0x5b7]
Exit stack: []

================================

Block 0x624
[0x624:0x7f1]
---
Predecessors: [0x5aa]
Successors: [0x7f2]
---
0x624 PUSH1 0x0
0x626 DUP1
0x627 REVERT
0x628 JUMPDEST
0x629 PUSH2 0x62e
0x62c CALLVALUE
0x62d PUSH1 0x1
0x62f PUSH1 0x0
0x631 CALLER
0x632 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x647 AND
0x648 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65d AND
0x65e DUP2
0x65f MSTORE
0x660 PUSH1 0x20
0x662 ADD
0x663 SWAP1
0x664 DUP2
0x665 MSTORE
0x666 PUSH1 0x20
0x668 ADD
0x669 PUSH1 0x0
0x66b SHA3
0x66c SLOAD
0x66d PUSH2 0x1161
0x670 SWAP1
0x671 SWAP2
0x672 SWAP1
0x673 PUSH4 0xffffffff
0x678 AND
0x679 JUMP
0x67a JUMPDEST
0x67b PUSH1 0x1
0x67d PUSH1 0x0
0x67f CALLER
0x680 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x695 AND
0x696 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ab AND
0x6ac DUP2
0x6ad MSTORE
0x6ae PUSH1 0x20
0x6b0 ADD
0x6b1 SWAP1
0x6b2 DUP2
0x6b3 MSTORE
0x6b4 PUSH1 0x20
0x6b6 ADD
0x6b7 PUSH1 0x0
0x6b9 SHA3
0x6ba DUP2
0x6bb SWAP1
0x6bc SSTORE
0x6bd POP
0x6be PUSH2 0x6e4
0x6c1 CALLVALUE
0x6c2 PUSH1 0x1
0x6c4 PUSH1 0x0
0x6c6 DUP1
0x6c7 PUSH1 0x0
0x6c9 SWAP1
0x6ca SLOAD
0x6cb SWAP1
0x6cc PUSH2 0x100
0x6cf EXP
0x6d0 SWAP1
0x6d1 DIV
0x6d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e7 AND
0x6e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fd AND
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 DUP2
0x715 MSTORE
0x716 PUSH1 0x20
0x718 ADD
0x719 SWAP1
0x71a DUP2
0x71b MSTORE
0x71c PUSH1 0x20
0x71e ADD
0x71f PUSH1 0x0
0x721 SHA3
0x722 SLOAD
0x723 PUSH2 0x117f
0x726 SWAP1
0x727 SWAP2
0x728 SWAP1
0x729 PUSH4 0xffffffff
0x72e AND
0x72f JUMP
0x730 JUMPDEST
0x731 PUSH1 0x1
0x733 PUSH1 0x0
0x735 DUP1
0x736 PUSH1 0x0
0x738 SWAP1
0x739 SLOAD
0x73a SWAP1
0x73b PUSH2 0x100
0x73e EXP
0x73f SWAP1
0x740 DIV
0x741 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x756 AND
0x757 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76c AND
0x76d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x782 AND
0x783 DUP2
0x784 MSTORE
0x785 PUSH1 0x20
0x787 ADD
0x788 SWAP1
0x789 DUP2
0x78a MSTORE
0x78b PUSH1 0x20
0x78d ADD
0x78e PUSH1 0x0
0x790 SHA3
0x791 DUP2
0x792 SWAP1
0x793 SSTORE
0x794 POP
0x795 PUSH1 0x0
0x797 DUP1
0x798 SWAP1
0x799 SLOAD
0x79a SWAP1
0x79b PUSH2 0x100
0x79e EXP
0x79f SWAP1
0x7a0 DIV
0x7a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b6 AND
0x7b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cc AND
0x7cd PUSH2 0x8fc
0x7d0 CALLVALUE
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 ISZERO
0x7d4 MUL
0x7d5 SWAP1
0x7d6 PUSH1 0x40
0x7d8 MLOAD
0x7d9 PUSH1 0x0
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de DUP1
0x7df DUP4
0x7e0 SUB
0x7e1 DUP2
0x7e2 DUP6
0x7e3 DUP9
0x7e4 DUP9
0x7e5 CALL
0x7e6 SWAP4
0x7e7 POP
0x7e8 POP
0x7e9 POP
0x7ea POP
0x7eb ISZERO
0x7ec DUP1
0x7ed ISZERO
0x7ee PUSH2 0x7af
0x7f1 JUMPI
---
0x624: V417 = 0x0
0x627: REVERT 0x0 0x0
0x628: JUMPDEST 
0x629: V418 = 0x62e
0x62c: V419 = CALLVALUE
0x62d: V420 = 0x1
0x62f: V421 = 0x0
0x631: V422 = CALLER
0x632: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x647: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x648: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x65d: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x65f: M[0x0] = V426
0x660: V427 = 0x20
0x662: V428 = ADD 0x20 0x0
0x665: M[0x20] = 0x1
0x666: V429 = 0x20
0x668: V430 = ADD 0x20 0x20
0x669: V431 = 0x0
0x66b: V432 = SHA3 0x0 0x40
0x66c: V433 = S[V432]
0x66d: V434 = 0x1161
0x673: V435 = 0xffffffff
0x678: V436 = AND 0xffffffff 0x1161
0x679: THROW 
0x67a: JUMPDEST 
0x67b: V437 = 0x1
0x67d: V438 = 0x0
0x67f: V439 = CALLER
0x680: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x695: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x696: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ab: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x6ad: M[0x0] = V443
0x6ae: V444 = 0x20
0x6b0: V445 = ADD 0x20 0x0
0x6b3: M[0x20] = 0x1
0x6b4: V446 = 0x20
0x6b6: V447 = ADD 0x20 0x20
0x6b7: V448 = 0x0
0x6b9: V449 = SHA3 0x0 0x40
0x6bc: S[V449] = S0
0x6be: V450 = 0x6e4
0x6c1: V451 = CALLVALUE
0x6c2: V452 = 0x1
0x6c4: V453 = 0x0
0x6c7: V454 = 0x0
0x6ca: V455 = S[0x0]
0x6cc: V456 = 0x100
0x6cf: V457 = EXP 0x100 0x0
0x6d1: V458 = DIV V455 0x1
0x6d2: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e7: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x6e8: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x6fe: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x715: M[0x0] = V464
0x716: V465 = 0x20
0x718: V466 = ADD 0x20 0x0
0x71b: M[0x20] = 0x1
0x71c: V467 = 0x20
0x71e: V468 = ADD 0x20 0x20
0x71f: V469 = 0x0
0x721: V470 = SHA3 0x0 0x40
0x722: V471 = S[V470]
0x723: V472 = 0x117f
0x729: V473 = 0xffffffff
0x72e: V474 = AND 0xffffffff 0x117f
0x72f: THROW 
0x730: JUMPDEST 
0x731: V475 = 0x1
0x733: V476 = 0x0
0x736: V477 = 0x0
0x739: V478 = S[0x0]
0x73b: V479 = 0x100
0x73e: V480 = EXP 0x100 0x0
0x740: V481 = DIV V478 0x1
0x741: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x756: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x757: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x76c: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x76d: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x782: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x784: M[0x0] = V487
0x785: V488 = 0x20
0x787: V489 = ADD 0x20 0x0
0x78a: M[0x20] = 0x1
0x78b: V490 = 0x20
0x78d: V491 = ADD 0x20 0x20
0x78e: V492 = 0x0
0x790: V493 = SHA3 0x0 0x40
0x793: S[V493] = S0
0x795: V494 = 0x0
0x799: V495 = S[0x0]
0x79b: V496 = 0x100
0x79e: V497 = EXP 0x100 0x0
0x7a0: V498 = DIV V495 0x1
0x7a1: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x7b7: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x7cd: V503 = 0x8fc
0x7d0: V504 = CALLVALUE
0x7d3: V505 = ISZERO V504
0x7d4: V506 = MUL V505 0x8fc
0x7d6: V507 = 0x40
0x7d8: V508 = M[0x40]
0x7d9: V509 = 0x0
0x7db: V510 = 0x40
0x7dd: V511 = M[0x40]
0x7e0: V512 = SUB V508 V511
0x7e5: V513 = CALL V506 V502 V504 V511 V512 V511 0x0
0x7eb: V514 = ISZERO V513
0x7ed: V515 = ISZERO V514
0x7ee: V516 = 0x7af
0x7f1: THROWI V515
---
Entry stack: []
Stack pops: 0
Stack additions: [V419, V433, 0x62e, V451, V471, 0x6e4, V514]
Exit stack: []

================================

Block 0x7f2
[0x7f2:0x881]
---
Predecessors: [0x624]
Successors: [0x882]
---
0x7f2 RETURNDATASIZE
0x7f3 PUSH1 0x0
0x7f5 DUP1
0x7f6 RETURNDATACOPY
0x7f7 RETURNDATASIZE
0x7f8 PUSH1 0x0
0x7fa REVERT
0x7fb JUMPDEST
0x7fc POP
0x7fd JUMP
0x7fe JUMPDEST
0x7ff PUSH1 0x40
0x801 DUP1
0x802 MLOAD
0x803 SWAP1
0x804 DUP2
0x805 ADD
0x806 PUSH1 0x40
0x808 MSTORE
0x809 DUP1
0x80a PUSH1 0xd
0x80c DUP2
0x80d MSTORE
0x80e PUSH1 0x20
0x810 ADD
0x811 PUSH32 0x547261646541647320436f696e00000000000000000000000000000000000000
0x832 DUP2
0x833 MSTORE
0x834 POP
0x835 DUP2
0x836 JUMP
0x837 JUMPDEST
0x838 PUSH1 0x0
0x83a DUP2
0x83b PUSH1 0x1
0x83d PUSH1 0x0
0x83f CALLER
0x840 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x855 AND
0x856 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86b AND
0x86c DUP2
0x86d MSTORE
0x86e PUSH1 0x20
0x870 ADD
0x871 SWAP1
0x872 DUP2
0x873 MSTORE
0x874 PUSH1 0x20
0x876 ADD
0x877 PUSH1 0x0
0x879 SHA3
0x87a SLOAD
0x87b LT
0x87c ISZERO
0x87d ISZERO
0x87e PUSH2 0x924
0x881 JUMPI
---
0x7f2: V517 = RETURNDATASIZE
0x7f3: V518 = 0x0
0x7f6: RETURNDATACOPY 0x0 0x0 V517
0x7f7: V519 = RETURNDATASIZE
0x7f8: V520 = 0x0
0x7fa: REVERT 0x0 V519
0x7fb: JUMPDEST 
0x7fd: JUMP S1
0x7fe: JUMPDEST 
0x7ff: V521 = 0x40
0x802: V522 = M[0x40]
0x805: V523 = ADD V522 0x40
0x806: V524 = 0x40
0x808: M[0x40] = V523
0x80a: V525 = 0xd
0x80d: M[V522] = 0xd
0x80e: V526 = 0x20
0x810: V527 = ADD 0x20 V522
0x811: V528 = 0x547261646541647320436f696e00000000000000000000000000000000000000
0x833: M[V527] = 0x547261646541647320436f696e00000000000000000000000000000000000000
0x836: JUMP S0
0x837: JUMPDEST 
0x838: V529 = 0x0
0x83b: V530 = 0x1
0x83d: V531 = 0x0
0x83f: V532 = CALLER
0x840: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x855: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x856: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x86b: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x86d: M[0x0] = V536
0x86e: V537 = 0x20
0x870: V538 = ADD 0x20 0x0
0x873: M[0x20] = 0x1
0x874: V539 = 0x20
0x876: V540 = ADD 0x20 0x20
0x877: V541 = 0x0
0x879: V542 = SHA3 0x0 0x40
0x87a: V543 = S[V542]
0x87b: V544 = LT V543 S0
0x87c: V545 = ISZERO V544
0x87d: V546 = ISZERO V545
0x87e: V547 = 0x924
0x881: THROWI V546
---
Entry stack: [V514]
Stack pops: 0
Stack additions: [V522, S0, 0x0, S0]
Exit stack: []

================================

Block 0x882
[0x882:0x974]
---
Predecessors: [0x7f2]
Successors: [0x975]
---
0x882 DUP2
0x883 PUSH1 0x2
0x885 PUSH1 0x0
0x887 CALLER
0x888 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89d AND
0x89e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b3 AND
0x8b4 DUP2
0x8b5 MSTORE
0x8b6 PUSH1 0x20
0x8b8 ADD
0x8b9 SWAP1
0x8ba DUP2
0x8bb MSTORE
0x8bc PUSH1 0x20
0x8be ADD
0x8bf PUSH1 0x0
0x8c1 SHA3
0x8c2 PUSH1 0x0
0x8c4 DUP6
0x8c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8da AND
0x8db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f0 AND
0x8f1 DUP2
0x8f2 MSTORE
0x8f3 PUSH1 0x20
0x8f5 ADD
0x8f6 SWAP1
0x8f7 DUP2
0x8f8 MSTORE
0x8f9 PUSH1 0x20
0x8fb ADD
0x8fc PUSH1 0x0
0x8fe SHA3
0x8ff DUP2
0x900 SWAP1
0x901 SSTORE
0x902 POP
0x903 DUP3
0x904 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x919 AND
0x91a CALLER
0x91b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x930 AND
0x931 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x952 DUP5
0x953 PUSH1 0x40
0x955 MLOAD
0x956 DUP1
0x957 DUP3
0x958 DUP2
0x959 MSTORE
0x95a PUSH1 0x20
0x95c ADD
0x95d SWAP2
0x95e POP
0x95f POP
0x960 PUSH1 0x40
0x962 MLOAD
0x963 DUP1
0x964 SWAP2
0x965 SUB
0x966 SWAP1
0x967 LOG3
0x968 PUSH1 0x1
0x96a SWAP1
0x96b POP
0x96c PUSH2 0x929
0x96f JUMP
0x970 JUMPDEST
0x971 PUSH1 0x0
0x973 SWAP1
0x974 POP
---
0x883: V548 = 0x2
0x885: V549 = 0x0
0x887: V550 = CALLER
0x888: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x89d: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x89e: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b3: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x8b5: M[0x0] = V554
0x8b6: V555 = 0x20
0x8b8: V556 = ADD 0x20 0x0
0x8bb: M[0x20] = 0x2
0x8bc: V557 = 0x20
0x8be: V558 = ADD 0x20 0x20
0x8bf: V559 = 0x0
0x8c1: V560 = SHA3 0x0 0x40
0x8c2: V561 = 0x0
0x8c5: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x8da: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x8db: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f0: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x8f2: M[0x0] = V565
0x8f3: V566 = 0x20
0x8f5: V567 = ADD 0x20 0x0
0x8f8: M[0x20] = V560
0x8f9: V568 = 0x20
0x8fb: V569 = ADD 0x20 0x20
0x8fc: V570 = 0x0
0x8fe: V571 = SHA3 0x0 0x40
0x901: S[V571] = S1
0x904: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x919: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x91a: V574 = CALLER
0x91b: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0x930: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x931: V577 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x953: V578 = 0x40
0x955: V579 = M[0x40]
0x959: M[V579] = S1
0x95a: V580 = 0x20
0x95c: V581 = ADD 0x20 V579
0x960: V582 = 0x40
0x962: V583 = M[0x40]
0x965: V584 = SUB V581 V583
0x967: LOG V583 V584 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V576 V573
0x968: V585 = 0x1
0x96c: V586 = 0x929
0x96f: THROW 
0x970: JUMPDEST 
0x971: V587 = 0x0
---
Entry stack: [S1, 0x0]
Stack pops: 3
Stack additions: [0x0]
Exit stack: []

================================

Block 0x975
[0x975:0x9d9]
---
Predecessors: [0x882]
Successors: [0x9da]
---
0x975 JUMPDEST
0x976 SWAP3
0x977 SWAP2
0x978 POP
0x979 POP
0x97a JUMP
0x97b JUMPDEST
0x97c PUSH1 0x0
0x97e PUSH11 0x52b7d2dcc80cd2e4000000
0x98a SWAP1
0x98b POP
0x98c SWAP1
0x98d JUMP
0x98e JUMPDEST
0x98f PUSH1 0x0
0x991 DUP2
0x992 PUSH1 0x1
0x994 PUSH1 0x0
0x996 DUP7
0x997 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ac AND
0x9ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c2 AND
0x9c3 DUP2
0x9c4 MSTORE
0x9c5 PUSH1 0x20
0x9c7 ADD
0x9c8 SWAP1
0x9c9 DUP2
0x9ca MSTORE
0x9cb PUSH1 0x20
0x9cd ADD
0x9ce PUSH1 0x0
0x9d0 SHA3
0x9d1 SLOAD
0x9d2 LT
0x9d3 ISZERO
0x9d4 DUP1
0x9d5 ISZERO
0x9d6 PUSH2 0xa0f
0x9d9 JUMPI
---
0x975: JUMPDEST 
0x97a: JUMP S3
0x97b: JUMPDEST 
0x97c: V588 = 0x0
0x97e: V589 = 0x52b7d2dcc80cd2e4000000
0x98d: JUMP S0
0x98e: JUMPDEST 
0x98f: V590 = 0x0
0x992: V591 = 0x1
0x994: V592 = 0x0
0x997: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ac: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9ad: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c2: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x9c4: M[0x0] = V596
0x9c5: V597 = 0x20
0x9c7: V598 = ADD 0x20 0x0
0x9ca: M[0x20] = 0x1
0x9cb: V599 = 0x20
0x9cd: V600 = ADD 0x20 0x20
0x9ce: V601 = 0x0
0x9d0: V602 = SHA3 0x0 0x40
0x9d1: V603 = S[V602]
0x9d2: V604 = LT V603 S0
0x9d3: V605 = ISZERO V604
0x9d5: V606 = ISZERO V605
0x9d6: V607 = 0xa0f
0x9d9: THROWI V606
---
Entry stack: [0x0]
Stack pops: 13
Stack additions: [V605, 0x0, S0, S1, S2]
Exit stack: []

================================

Block 0x9da
[0x9da:0xa5a]
---
Predecessors: [0x975]
Successors: [0xa5b]
---
0x9da POP
0x9db DUP2
0x9dc PUSH1 0x2
0x9de PUSH1 0x0
0x9e0 DUP7
0x9e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f6 AND
0x9f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0c AND
0xa0d DUP2
0xa0e MSTORE
0xa0f PUSH1 0x20
0xa11 ADD
0xa12 SWAP1
0xa13 DUP2
0xa14 MSTORE
0xa15 PUSH1 0x20
0xa17 ADD
0xa18 PUSH1 0x0
0xa1a SHA3
0xa1b PUSH1 0x0
0xa1d CALLER
0xa1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa33 AND
0xa34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa49 AND
0xa4a DUP2
0xa4b MSTORE
0xa4c PUSH1 0x20
0xa4e ADD
0xa4f SWAP1
0xa50 DUP2
0xa51 MSTORE
0xa52 PUSH1 0x20
0xa54 ADD
0xa55 PUSH1 0x0
0xa57 SHA3
0xa58 SLOAD
0xa59 LT
0xa5a ISZERO
---
0x9dc: V608 = 0x2
0x9de: V609 = 0x0
0x9e1: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f6: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x9f7: V612 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0c: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0xa0e: M[0x0] = V613
0xa0f: V614 = 0x20
0xa11: V615 = ADD 0x20 0x0
0xa14: M[0x20] = 0x2
0xa15: V616 = 0x20
0xa17: V617 = ADD 0x20 0x20
0xa18: V618 = 0x0
0xa1a: V619 = SHA3 0x0 0x40
0xa1b: V620 = 0x0
0xa1d: V621 = CALLER
0xa1e: V622 = 0xffffffffffffffffffffffffffffffffffffffff
0xa33: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0xa34: V624 = 0xffffffffffffffffffffffffffffffffffffffff
0xa49: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0xa4b: M[0x0] = V625
0xa4c: V626 = 0x20
0xa4e: V627 = ADD 0x20 0x0
0xa51: M[0x20] = V619
0xa52: V628 = 0x20
0xa54: V629 = ADD 0x20 0x20
0xa55: V630 = 0x0
0xa57: V631 = SHA3 0x0 0x40
0xa58: V632 = S[V631]
0xa59: V633 = LT V632 S2
0xa5a: V634 = ISZERO V633
---
Entry stack: [S4, S3, S2, 0x0, V605]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V634]
Exit stack: [S4, S3, S2, 0x0, V634]

================================

Block 0xa5b
[0xa5b:0xa61]
---
Predecessors: [0x9da]
Successors: [0xa62]
---
0xa5b JUMPDEST
0xa5c DUP1
0xa5d ISZERO
0xa5e PUSH2 0xa1b
0xa61 JUMPI
---
0xa5b: JUMPDEST 
0xa5d: V635 = ISZERO V634
0xa5e: V636 = 0xa1b
0xa61: THROWI V635
---
Entry stack: [S4, S3, S2, 0x0, V634]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, 0x0, V634]

================================

Block 0xa62
[0xa62:0xa66]
---
Predecessors: [0xa5b]
Successors: [0xa67]
---
0xa62 POP
0xa63 PUSH1 0x0
0xa65 DUP3
0xa66 GT
---
0xa63: V637 = 0x0
0xa66: V638 = GT S2 0x0
---
Entry stack: [S4, S3, S2, 0x0, V634]
Stack pops: 3
Stack additions: [S2, S1, V638]
Exit stack: [S4, S3, S2, 0x0, V638]

================================

Block 0xa67
[0xa67:0xa6d]
---
Predecessors: [0xa62]
Successors: [0xa6e]
---
0xa67 JUMPDEST
0xa68 DUP1
0xa69 ISZERO
0xa6a PUSH2 0xaa6
0xa6d JUMPI
---
0xa67: JUMPDEST 
0xa69: V639 = ISZERO V638
0xa6a: V640 = 0xaa6
0xa6d: THROWI V639
---
Entry stack: [S4, S3, S2, 0x0, V638]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, 0x0, V638]

================================

Block 0xa6e
[0xa6e:0xaf1]
---
Predecessors: [0xa67]
Successors: [0xaf2]
---
0xa6e POP
0xa6f PUSH1 0x1
0xa71 PUSH1 0x0
0xa73 DUP5
0xa74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa89 AND
0xa8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9f AND
0xaa0 DUP2
0xaa1 MSTORE
0xaa2 PUSH1 0x20
0xaa4 ADD
0xaa5 SWAP1
0xaa6 DUP2
0xaa7 MSTORE
0xaa8 PUSH1 0x20
0xaaa ADD
0xaab PUSH1 0x0
0xaad SHA3
0xaae SLOAD
0xaaf DUP3
0xab0 PUSH1 0x1
0xab2 PUSH1 0x0
0xab4 DUP7
0xab5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaca AND
0xacb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae0 AND
0xae1 DUP2
0xae2 MSTORE
0xae3 PUSH1 0x20
0xae5 ADD
0xae6 SWAP1
0xae7 DUP2
0xae8 MSTORE
0xae9 PUSH1 0x20
0xaeb ADD
0xaec PUSH1 0x0
0xaee SHA3
0xaef SLOAD
0xaf0 ADD
0xaf1 GT
---
0xa6f: V641 = 0x1
0xa71: V642 = 0x0
0xa74: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0xa89: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa8a: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9f: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0xaa1: M[0x0] = V646
0xaa2: V647 = 0x20
0xaa4: V648 = ADD 0x20 0x0
0xaa7: M[0x20] = 0x1
0xaa8: V649 = 0x20
0xaaa: V650 = ADD 0x20 0x20
0xaab: V651 = 0x0
0xaad: V652 = SHA3 0x0 0x40
0xaae: V653 = S[V652]
0xab0: V654 = 0x1
0xab2: V655 = 0x0
0xab5: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xaca: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xacb: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0xae0: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0xae2: M[0x0] = V659
0xae3: V660 = 0x20
0xae5: V661 = ADD 0x20 0x0
0xae8: M[0x20] = 0x1
0xae9: V662 = 0x20
0xaeb: V663 = ADD 0x20 0x20
0xaec: V664 = 0x0
0xaee: V665 = SHA3 0x0 0x40
0xaef: V666 = S[V665]
0xaf0: V667 = ADD V666 S2
0xaf1: V668 = GT V667 V653
---
Entry stack: [S4, S3, S2, 0x0, V638]
Stack pops: 4
Stack additions: [S3, S2, S1, V668]
Exit stack: [S4, S3, S2, 0x0, V668]

================================

Block 0xaf2
[0xaf2:0xaf7]
---
Predecessors: [0xa6e]
Successors: [0xaf8]
---
0xaf2 JUMPDEST
0xaf3 ISZERO
0xaf4 PUSH2 0xd52
0xaf7 JUMPI
---
0xaf2: JUMPDEST 
0xaf3: V669 = ISZERO V668
0xaf4: V670 = 0xd52
0xaf7: THROWI V669
---
Entry stack: [S4, S3, S2, 0x0, V668]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, 0x0]

================================

Block 0xaf8
[0xaf8:0xda2]
---
Predecessors: [0xaf2]
Successors: [0xda3]
---
0xaf8 PUSH2 0xafd
0xafb DUP3
0xafc PUSH1 0x1
0xafe PUSH1 0x0
0xb00 DUP8
0xb01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb16 AND
0xb17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2c AND
0xb2d DUP2
0xb2e MSTORE
0xb2f PUSH1 0x20
0xb31 ADD
0xb32 SWAP1
0xb33 DUP2
0xb34 MSTORE
0xb35 PUSH1 0x20
0xb37 ADD
0xb38 PUSH1 0x0
0xb3a SHA3
0xb3b SLOAD
0xb3c PUSH2 0x117f
0xb3f SWAP1
0xb40 SWAP2
0xb41 SWAP1
0xb42 PUSH4 0xffffffff
0xb47 AND
0xb48 JUMP
0xb49 JUMPDEST
0xb4a PUSH1 0x1
0xb4c PUSH1 0x0
0xb4e DUP7
0xb4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb64 AND
0xb65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7a AND
0xb7b DUP2
0xb7c MSTORE
0xb7d PUSH1 0x20
0xb7f ADD
0xb80 SWAP1
0xb81 DUP2
0xb82 MSTORE
0xb83 PUSH1 0x20
0xb85 ADD
0xb86 PUSH1 0x0
0xb88 SHA3
0xb89 DUP2
0xb8a SWAP1
0xb8b SSTORE
0xb8c POP
0xb8d PUSH2 0xbcf
0xb90 DUP3
0xb91 PUSH1 0x2
0xb93 PUSH1 0x0
0xb95 DUP8
0xb96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbab AND
0xbac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc1 AND
0xbc2 DUP2
0xbc3 MSTORE
0xbc4 PUSH1 0x20
0xbc6 ADD
0xbc7 SWAP1
0xbc8 DUP2
0xbc9 MSTORE
0xbca PUSH1 0x20
0xbcc ADD
0xbcd PUSH1 0x0
0xbcf SHA3
0xbd0 PUSH1 0x0
0xbd2 CALLER
0xbd3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe8 AND
0xbe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfe AND
0xbff DUP2
0xc00 MSTORE
0xc01 PUSH1 0x20
0xc03 ADD
0xc04 SWAP1
0xc05 DUP2
0xc06 MSTORE
0xc07 PUSH1 0x20
0xc09 ADD
0xc0a PUSH1 0x0
0xc0c SHA3
0xc0d SLOAD
0xc0e PUSH2 0x117f
0xc11 SWAP1
0xc12 SWAP2
0xc13 SWAP1
0xc14 PUSH4 0xffffffff
0xc19 AND
0xc1a JUMP
0xc1b JUMPDEST
0xc1c PUSH1 0x2
0xc1e PUSH1 0x0
0xc20 DUP7
0xc21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc36 AND
0xc37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4c AND
0xc4d DUP2
0xc4e MSTORE
0xc4f PUSH1 0x20
0xc51 ADD
0xc52 SWAP1
0xc53 DUP2
0xc54 MSTORE
0xc55 PUSH1 0x20
0xc57 ADD
0xc58 PUSH1 0x0
0xc5a SHA3
0xc5b PUSH1 0x0
0xc5d CALLER
0xc5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc73 AND
0xc74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc89 AND
0xc8a DUP2
0xc8b MSTORE
0xc8c PUSH1 0x20
0xc8e ADD
0xc8f SWAP1
0xc90 DUP2
0xc91 MSTORE
0xc92 PUSH1 0x20
0xc94 ADD
0xc95 PUSH1 0x0
0xc97 SHA3
0xc98 DUP2
0xc99 SWAP1
0xc9a SSTORE
0xc9b POP
0xc9c PUSH2 0xca1
0xc9f DUP3
0xca0 PUSH1 0x1
0xca2 PUSH1 0x0
0xca4 DUP7
0xca5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcba AND
0xcbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd0 AND
0xcd1 DUP2
0xcd2 MSTORE
0xcd3 PUSH1 0x20
0xcd5 ADD
0xcd6 SWAP1
0xcd7 DUP2
0xcd8 MSTORE
0xcd9 PUSH1 0x20
0xcdb ADD
0xcdc PUSH1 0x0
0xcde SHA3
0xcdf SLOAD
0xce0 PUSH2 0x1161
0xce3 SWAP1
0xce4 SWAP2
0xce5 SWAP1
0xce6 PUSH4 0xffffffff
0xceb AND
0xcec JUMP
0xced JUMPDEST
0xcee PUSH1 0x1
0xcf0 PUSH1 0x0
0xcf2 DUP6
0xcf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd08 AND
0xd09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1e AND
0xd1f DUP2
0xd20 MSTORE
0xd21 PUSH1 0x20
0xd23 ADD
0xd24 SWAP1
0xd25 DUP2
0xd26 MSTORE
0xd27 PUSH1 0x20
0xd29 ADD
0xd2a PUSH1 0x0
0xd2c SHA3
0xd2d DUP2
0xd2e SWAP1
0xd2f SSTORE
0xd30 POP
0xd31 DUP3
0xd32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd47 AND
0xd48 DUP5
0xd49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5e AND
0xd5f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd80 DUP5
0xd81 PUSH1 0x40
0xd83 MLOAD
0xd84 DUP1
0xd85 DUP3
0xd86 DUP2
0xd87 MSTORE
0xd88 PUSH1 0x20
0xd8a ADD
0xd8b SWAP2
0xd8c POP
0xd8d POP
0xd8e PUSH1 0x40
0xd90 MLOAD
0xd91 DUP1
0xd92 SWAP2
0xd93 SUB
0xd94 SWAP1
0xd95 LOG3
0xd96 PUSH1 0x1
0xd98 SWAP1
0xd99 POP
0xd9a PUSH2 0xd57
0xd9d JUMP
0xd9e JUMPDEST
0xd9f PUSH1 0x0
0xda1 SWAP1
0xda2 POP
---
0xaf8: V671 = 0xafd
0xafc: V672 = 0x1
0xafe: V673 = 0x0
0xb01: V674 = 0xffffffffffffffffffffffffffffffffffffffff
0xb16: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb17: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2c: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0xb2e: M[0x0] = V677
0xb2f: V678 = 0x20
0xb31: V679 = ADD 0x20 0x0
0xb34: M[0x20] = 0x1
0xb35: V680 = 0x20
0xb37: V681 = ADD 0x20 0x20
0xb38: V682 = 0x0
0xb3a: V683 = SHA3 0x0 0x40
0xb3b: V684 = S[V683]
0xb3c: V685 = 0x117f
0xb42: V686 = 0xffffffff
0xb47: V687 = AND 0xffffffff 0x117f
0xb48: THROW 
0xb49: JUMPDEST 
0xb4a: V688 = 0x1
0xb4c: V689 = 0x0
0xb4f: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0xb64: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xb65: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7a: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0xb7c: M[0x0] = V693
0xb7d: V694 = 0x20
0xb7f: V695 = ADD 0x20 0x0
0xb82: M[0x20] = 0x1
0xb83: V696 = 0x20
0xb85: V697 = ADD 0x20 0x20
0xb86: V698 = 0x0
0xb88: V699 = SHA3 0x0 0x40
0xb8b: S[V699] = S0
0xb8d: V700 = 0xbcf
0xb91: V701 = 0x2
0xb93: V702 = 0x0
0xb96: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xbab: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xbac: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc1: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xbc3: M[0x0] = V706
0xbc4: V707 = 0x20
0xbc6: V708 = ADD 0x20 0x0
0xbc9: M[0x20] = 0x2
0xbca: V709 = 0x20
0xbcc: V710 = ADD 0x20 0x20
0xbcd: V711 = 0x0
0xbcf: V712 = SHA3 0x0 0x40
0xbd0: V713 = 0x0
0xbd2: V714 = CALLER
0xbd3: V715 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe8: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0xbe9: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfe: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0xc00: M[0x0] = V718
0xc01: V719 = 0x20
0xc03: V720 = ADD 0x20 0x0
0xc06: M[0x20] = V712
0xc07: V721 = 0x20
0xc09: V722 = ADD 0x20 0x20
0xc0a: V723 = 0x0
0xc0c: V724 = SHA3 0x0 0x40
0xc0d: V725 = S[V724]
0xc0e: V726 = 0x117f
0xc14: V727 = 0xffffffff
0xc19: V728 = AND 0xffffffff 0x117f
0xc1a: THROW 
0xc1b: JUMPDEST 
0xc1c: V729 = 0x2
0xc1e: V730 = 0x0
0xc21: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0xc36: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc37: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4c: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0xc4e: M[0x0] = V734
0xc4f: V735 = 0x20
0xc51: V736 = ADD 0x20 0x0
0xc54: M[0x20] = 0x2
0xc55: V737 = 0x20
0xc57: V738 = ADD 0x20 0x20
0xc58: V739 = 0x0
0xc5a: V740 = SHA3 0x0 0x40
0xc5b: V741 = 0x0
0xc5d: V742 = CALLER
0xc5e: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0xc73: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0xc74: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xc89: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0xc8b: M[0x0] = V746
0xc8c: V747 = 0x20
0xc8e: V748 = ADD 0x20 0x0
0xc91: M[0x20] = V740
0xc92: V749 = 0x20
0xc94: V750 = ADD 0x20 0x20
0xc95: V751 = 0x0
0xc97: V752 = SHA3 0x0 0x40
0xc9a: S[V752] = S0
0xc9c: V753 = 0xca1
0xca0: V754 = 0x1
0xca2: V755 = 0x0
0xca5: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xcba: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xcbb: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd0: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xcd2: M[0x0] = V759
0xcd3: V760 = 0x20
0xcd5: V761 = ADD 0x20 0x0
0xcd8: M[0x20] = 0x1
0xcd9: V762 = 0x20
0xcdb: V763 = ADD 0x20 0x20
0xcdc: V764 = 0x0
0xcde: V765 = SHA3 0x0 0x40
0xcdf: V766 = S[V765]
0xce0: V767 = 0x1161
0xce6: V768 = 0xffffffff
0xceb: V769 = AND 0xffffffff 0x1161
0xcec: THROW 
0xced: JUMPDEST 
0xcee: V770 = 0x1
0xcf0: V771 = 0x0
0xcf3: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0xd08: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd09: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1e: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0xd20: M[0x0] = V775
0xd21: V776 = 0x20
0xd23: V777 = ADD 0x20 0x0
0xd26: M[0x20] = 0x1
0xd27: V778 = 0x20
0xd29: V779 = ADD 0x20 0x20
0xd2a: V780 = 0x0
0xd2c: V781 = SHA3 0x0 0x40
0xd2f: S[V781] = S0
0xd32: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xd47: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd49: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5e: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xd5f: V786 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd81: V787 = 0x40
0xd83: V788 = M[0x40]
0xd87: M[V788] = S2
0xd88: V789 = 0x20
0xd8a: V790 = ADD 0x20 V788
0xd8e: V791 = 0x40
0xd90: V792 = M[0x40]
0xd93: V793 = SUB V790 V792
0xd95: LOG V792 V793 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V785 V783
0xd96: V794 = 0x1
0xd9a: V795 = 0xd57
0xd9d: THROW 
0xd9e: JUMPDEST 
0xd9f: V796 = 0x0
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S2, V725, 0xbcf, S2, V766, 0xca1, 0x0]
Exit stack: []

================================

Block 0xda3
[0xda3:0xeed]
---
Predecessors: [0xaf8]
Successors: [0xeee]
---
0xda3 JUMPDEST
0xda4 SWAP4
0xda5 SWAP3
0xda6 POP
0xda7 POP
0xda8 POP
0xda9 JUMP
0xdaa JUMPDEST
0xdab PUSH1 0x1
0xdad PUSH1 0x20
0xdaf MSTORE
0xdb0 DUP1
0xdb1 PUSH1 0x0
0xdb3 MSTORE
0xdb4 PUSH1 0x40
0xdb6 PUSH1 0x0
0xdb8 SHA3
0xdb9 PUSH1 0x0
0xdbb SWAP2
0xdbc POP
0xdbd SWAP1
0xdbe POP
0xdbf SLOAD
0xdc0 DUP2
0xdc1 JUMP
0xdc2 JUMPDEST
0xdc3 PUSH1 0x12
0xdc5 DUP2
0xdc6 JUMP
0xdc7 JUMPDEST
0xdc8 PUSH11 0x52b7d2dcc80cd2e4000000
0xdd4 DUP2
0xdd5 JUMP
0xdd6 JUMPDEST
0xdd7 PUSH1 0x2
0xdd9 PUSH1 0x20
0xddb MSTORE
0xddc DUP2
0xddd PUSH1 0x0
0xddf MSTORE
0xde0 PUSH1 0x40
0xde2 PUSH1 0x0
0xde4 SHA3
0xde5 PUSH1 0x20
0xde7 MSTORE
0xde8 DUP1
0xde9 PUSH1 0x0
0xdeb MSTORE
0xdec PUSH1 0x40
0xdee PUSH1 0x0
0xdf0 SHA3
0xdf1 PUSH1 0x0
0xdf3 SWAP2
0xdf4 POP
0xdf5 SWAP2
0xdf6 POP
0xdf7 POP
0xdf8 SLOAD
0xdf9 DUP2
0xdfa JUMP
0xdfb JUMPDEST
0xdfc PUSH1 0x0
0xdfe PUSH1 0x1
0xe00 PUSH1 0x0
0xe02 DUP4
0xe03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe18 AND
0xe19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2e AND
0xe2f DUP2
0xe30 MSTORE
0xe31 PUSH1 0x20
0xe33 ADD
0xe34 SWAP1
0xe35 DUP2
0xe36 MSTORE
0xe37 PUSH1 0x20
0xe39 ADD
0xe3a PUSH1 0x0
0xe3c SHA3
0xe3d SLOAD
0xe3e SWAP1
0xe3f POP
0xe40 SWAP2
0xe41 SWAP1
0xe42 POP
0xe43 JUMP
0xe44 JUMPDEST
0xe45 PUSH1 0x0
0xe47 DUP1
0xe48 SWAP1
0xe49 SLOAD
0xe4a SWAP1
0xe4b PUSH2 0x100
0xe4e EXP
0xe4f SWAP1
0xe50 DIV
0xe51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe66 AND
0xe67 DUP2
0xe68 JUMP
0xe69 JUMPDEST
0xe6a PUSH1 0x40
0xe6c DUP1
0xe6d MLOAD
0xe6e SWAP1
0xe6f DUP2
0xe70 ADD
0xe71 PUSH1 0x40
0xe73 MSTORE
0xe74 DUP1
0xe75 PUSH1 0x3
0xe77 DUP2
0xe78 MSTORE
0xe79 PUSH1 0x20
0xe7b ADD
0xe7c PUSH32 0x5452440000000000000000000000000000000000000000000000000000000000
0xe9d DUP2
0xe9e MSTORE
0xe9f POP
0xea0 DUP2
0xea1 JUMP
0xea2 JUMPDEST
0xea3 PUSH1 0x0
0xea5 DUP2
0xea6 PUSH1 0x1
0xea8 PUSH1 0x0
0xeaa CALLER
0xeab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec0 AND
0xec1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed6 AND
0xed7 DUP2
0xed8 MSTORE
0xed9 PUSH1 0x20
0xedb ADD
0xedc SWAP1
0xedd DUP2
0xede MSTORE
0xedf PUSH1 0x20
0xee1 ADD
0xee2 PUSH1 0x0
0xee4 SHA3
0xee5 SLOAD
0xee6 LT
0xee7 ISZERO
0xee8 DUP1
0xee9 ISZERO
0xeea PUSH2 0xea7
0xeed JUMPI
---
0xda3: JUMPDEST 
0xda9: JUMP S4
0xdaa: JUMPDEST 
0xdab: V797 = 0x1
0xdad: V798 = 0x20
0xdaf: M[0x20] = 0x1
0xdb1: V799 = 0x0
0xdb3: M[0x0] = S0
0xdb4: V800 = 0x40
0xdb6: V801 = 0x0
0xdb8: V802 = SHA3 0x0 0x40
0xdb9: V803 = 0x0
0xdbf: V804 = S[V802]
0xdc1: JUMP S1
0xdc2: JUMPDEST 
0xdc3: V805 = 0x12
0xdc6: JUMP S0
0xdc7: JUMPDEST 
0xdc8: V806 = 0x52b7d2dcc80cd2e4000000
0xdd5: JUMP S0
0xdd6: JUMPDEST 
0xdd7: V807 = 0x2
0xdd9: V808 = 0x20
0xddb: M[0x20] = 0x2
0xddd: V809 = 0x0
0xddf: M[0x0] = S1
0xde0: V810 = 0x40
0xde2: V811 = 0x0
0xde4: V812 = SHA3 0x0 0x40
0xde5: V813 = 0x20
0xde7: M[0x20] = V812
0xde9: V814 = 0x0
0xdeb: M[0x0] = S0
0xdec: V815 = 0x40
0xdee: V816 = 0x0
0xdf0: V817 = SHA3 0x0 0x40
0xdf1: V818 = 0x0
0xdf8: V819 = S[V817]
0xdfa: JUMP S2
0xdfb: JUMPDEST 
0xdfc: V820 = 0x0
0xdfe: V821 = 0x1
0xe00: V822 = 0x0
0xe03: V823 = 0xffffffffffffffffffffffffffffffffffffffff
0xe18: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe19: V825 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2e: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V824
0xe30: M[0x0] = V826
0xe31: V827 = 0x20
0xe33: V828 = ADD 0x20 0x0
0xe36: M[0x20] = 0x1
0xe37: V829 = 0x20
0xe39: V830 = ADD 0x20 0x20
0xe3a: V831 = 0x0
0xe3c: V832 = SHA3 0x0 0x40
0xe3d: V833 = S[V832]
0xe43: JUMP S1
0xe44: JUMPDEST 
0xe45: V834 = 0x0
0xe49: V835 = S[0x0]
0xe4b: V836 = 0x100
0xe4e: V837 = EXP 0x100 0x0
0xe50: V838 = DIV V835 0x1
0xe51: V839 = 0xffffffffffffffffffffffffffffffffffffffff
0xe66: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0xe68: JUMP S0
0xe69: JUMPDEST 
0xe6a: V841 = 0x40
0xe6d: V842 = M[0x40]
0xe70: V843 = ADD V842 0x40
0xe71: V844 = 0x40
0xe73: M[0x40] = V843
0xe75: V845 = 0x3
0xe78: M[V842] = 0x3
0xe79: V846 = 0x20
0xe7b: V847 = ADD 0x20 V842
0xe7c: V848 = 0x5452440000000000000000000000000000000000000000000000000000000000
0xe9e: M[V847] = 0x5452440000000000000000000000000000000000000000000000000000000000
0xea1: JUMP S0
0xea2: JUMPDEST 
0xea3: V849 = 0x0
0xea6: V850 = 0x1
0xea8: V851 = 0x0
0xeaa: V852 = CALLER
0xeab: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xec0: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0xec1: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xed6: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0xed8: M[0x0] = V856
0xed9: V857 = 0x20
0xedb: V858 = ADD 0x20 0x0
0xede: M[0x20] = 0x1
0xedf: V859 = 0x20
0xee1: V860 = ADD 0x20 0x20
0xee2: V861 = 0x0
0xee4: V862 = SHA3 0x0 0x40
0xee5: V863 = S[V862]
0xee6: V864 = LT V863 S0
0xee7: V865 = ISZERO V864
0xee9: V866 = ISZERO V865
0xeea: V867 = 0xea7
0xeed: THROWI V866
---
Entry stack: [0x0]
Stack pops: 902
Stack additions: [V865, 0x0, S0]
Exit stack: []

================================

Block 0xeee
[0xeee:0xef2]
---
Predecessors: [0xda3]
Successors: [0xef3]
---
0xeee POP
0xeef PUSH1 0x0
0xef1 DUP3
0xef2 GT
---
0xeef: V868 = 0x0
0xef2: V869 = GT S2 0x0
---
Entry stack: [S2, 0x0, V865]
Stack pops: 3
Stack additions: [S2, S1, V869]
Exit stack: [S2, 0x0, V869]

================================

Block 0xef3
[0xef3:0xef9]
---
Predecessors: [0xeee]
Successors: [0xefa]
---
0xef3 JUMPDEST
0xef4 DUP1
0xef5 ISZERO
0xef6 PUSH2 0xf32
0xef9 JUMPI
---
0xef3: JUMPDEST 
0xef5: V870 = ISZERO V869
0xef6: V871 = 0xf32
0xef9: THROWI V870
---
Entry stack: [S2, 0x0, V869]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S2, 0x0, V869]

================================

Block 0xefa
[0xefa:0xf7d]
---
Predecessors: [0xef3]
Successors: [0xf7e]
---
0xefa POP
0xefb PUSH1 0x1
0xefd PUSH1 0x0
0xeff DUP5
0xf00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf15 AND
0xf16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2b AND
0xf2c DUP2
0xf2d MSTORE
0xf2e PUSH1 0x20
0xf30 ADD
0xf31 SWAP1
0xf32 DUP2
0xf33 MSTORE
0xf34 PUSH1 0x20
0xf36 ADD
0xf37 PUSH1 0x0
0xf39 SHA3
0xf3a SLOAD
0xf3b DUP3
0xf3c PUSH1 0x1
0xf3e PUSH1 0x0
0xf40 DUP7
0xf41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf56 AND
0xf57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6c AND
0xf6d DUP2
0xf6e MSTORE
0xf6f PUSH1 0x20
0xf71 ADD
0xf72 SWAP1
0xf73 DUP2
0xf74 MSTORE
0xf75 PUSH1 0x20
0xf77 ADD
0xf78 PUSH1 0x0
0xf7a SHA3
0xf7b SLOAD
0xf7c ADD
0xf7d GT
---
0xefb: V872 = 0x1
0xefd: V873 = 0x0
0xf00: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xf15: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf16: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2b: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0xf2d: M[0x0] = V877
0xf2e: V878 = 0x20
0xf30: V879 = ADD 0x20 0x0
0xf33: M[0x20] = 0x1
0xf34: V880 = 0x20
0xf36: V881 = ADD 0x20 0x20
0xf37: V882 = 0x0
0xf39: V883 = SHA3 0x0 0x40
0xf3a: V884 = S[V883]
0xf3c: V885 = 0x1
0xf3e: V886 = 0x0
0xf41: V887 = 0xffffffffffffffffffffffffffffffffffffffff
0xf56: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf57: V889 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6c: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V888
0xf6e: M[0x0] = V890
0xf6f: V891 = 0x20
0xf71: V892 = ADD 0x20 0x0
0xf74: M[0x20] = 0x1
0xf75: V893 = 0x20
0xf77: V894 = ADD 0x20 0x20
0xf78: V895 = 0x0
0xf7a: V896 = SHA3 0x0 0x40
0xf7b: V897 = S[V896]
0xf7c: V898 = ADD V897 S2
0xf7d: V899 = GT V898 V884
---
Entry stack: [S2, 0x0, V869]
Stack pops: 4
Stack additions: [S3, S2, S1, V899]
Exit stack: [S0, S2, 0x0, V899]

================================

Block 0xf7e
[0xf7e:0xf83]
---
Predecessors: [0xefa]
Successors: [0xf84]
---
0xf7e JUMPDEST
0xf7f ISZERO
0xf80 PUSH2 0x10cf
0xf83 JUMPI
---
0xf7e: JUMPDEST 
0xf7f: V900 = ISZERO V899
0xf80: V901 = 0x10cf
0xf83: THROWI V900
---
Entry stack: [S3, S2, 0x0, V899]
Stack pops: 1
Stack additions: []
Exit stack: [S3, S2, 0x0]

================================

Block 0xf84
[0xf84:0x111f]
---
Predecessors: [0xf7e]
Successors: [0x1120]
---
0xf84 PUSH2 0xf89
0xf87 DUP3
0xf88 PUSH1 0x1
0xf8a PUSH1 0x0
0xf8c CALLER
0xf8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa2 AND
0xfa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb8 AND
0xfb9 DUP2
0xfba MSTORE
0xfbb PUSH1 0x20
0xfbd ADD
0xfbe SWAP1
0xfbf DUP2
0xfc0 MSTORE
0xfc1 PUSH1 0x20
0xfc3 ADD
0xfc4 PUSH1 0x0
0xfc6 SHA3
0xfc7 SLOAD
0xfc8 PUSH2 0x117f
0xfcb SWAP1
0xfcc SWAP2
0xfcd SWAP1
0xfce PUSH4 0xffffffff
0xfd3 AND
0xfd4 JUMP
0xfd5 JUMPDEST
0xfd6 PUSH1 0x1
0xfd8 PUSH1 0x0
0xfda CALLER
0xfdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff0 AND
0xff1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1006 AND
0x1007 DUP2
0x1008 MSTORE
0x1009 PUSH1 0x20
0x100b ADD
0x100c SWAP1
0x100d DUP2
0x100e MSTORE
0x100f PUSH1 0x20
0x1011 ADD
0x1012 PUSH1 0x0
0x1014 SHA3
0x1015 DUP2
0x1016 SWAP1
0x1017 SSTORE
0x1018 POP
0x1019 PUSH2 0x101e
0x101c DUP3
0x101d PUSH1 0x1
0x101f PUSH1 0x0
0x1021 DUP7
0x1022 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1037 AND
0x1038 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104d AND
0x104e DUP2
0x104f MSTORE
0x1050 PUSH1 0x20
0x1052 ADD
0x1053 SWAP1
0x1054 DUP2
0x1055 MSTORE
0x1056 PUSH1 0x20
0x1058 ADD
0x1059 PUSH1 0x0
0x105b SHA3
0x105c SLOAD
0x105d PUSH2 0x1161
0x1060 SWAP1
0x1061 SWAP2
0x1062 SWAP1
0x1063 PUSH4 0xffffffff
0x1068 AND
0x1069 JUMP
0x106a JUMPDEST
0x106b PUSH1 0x1
0x106d PUSH1 0x0
0x106f DUP6
0x1070 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1085 AND
0x1086 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109b AND
0x109c DUP2
0x109d MSTORE
0x109e PUSH1 0x20
0x10a0 ADD
0x10a1 SWAP1
0x10a2 DUP2
0x10a3 MSTORE
0x10a4 PUSH1 0x20
0x10a6 ADD
0x10a7 PUSH1 0x0
0x10a9 SHA3
0x10aa DUP2
0x10ab SWAP1
0x10ac SSTORE
0x10ad POP
0x10ae DUP3
0x10af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c4 AND
0x10c5 CALLER
0x10c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10db AND
0x10dc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x10fd DUP5
0x10fe PUSH1 0x40
0x1100 MLOAD
0x1101 DUP1
0x1102 DUP3
0x1103 DUP2
0x1104 MSTORE
0x1105 PUSH1 0x20
0x1107 ADD
0x1108 SWAP2
0x1109 POP
0x110a POP
0x110b PUSH1 0x40
0x110d MLOAD
0x110e DUP1
0x110f SWAP2
0x1110 SUB
0x1111 SWAP1
0x1112 LOG3
0x1113 PUSH1 0x1
0x1115 SWAP1
0x1116 POP
0x1117 PUSH2 0x10d4
0x111a JUMP
0x111b JUMPDEST
0x111c PUSH1 0x0
0x111e SWAP1
0x111f POP
---
0xf84: V902 = 0xf89
0xf88: V903 = 0x1
0xf8a: V904 = 0x0
0xf8c: V905 = CALLER
0xf8d: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa2: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0xfa3: V908 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb8: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V907
0xfba: M[0x0] = V909
0xfbb: V910 = 0x20
0xfbd: V911 = ADD 0x20 0x0
0xfc0: M[0x20] = 0x1
0xfc1: V912 = 0x20
0xfc3: V913 = ADD 0x20 0x20
0xfc4: V914 = 0x0
0xfc6: V915 = SHA3 0x0 0x40
0xfc7: V916 = S[V915]
0xfc8: V917 = 0x117f
0xfce: V918 = 0xffffffff
0xfd3: V919 = AND 0xffffffff 0x117f
0xfd4: THROW 
0xfd5: JUMPDEST 
0xfd6: V920 = 0x1
0xfd8: V921 = 0x0
0xfda: V922 = CALLER
0xfdb: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0xff0: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xff1: V925 = 0xffffffffffffffffffffffffffffffffffffffff
0x1006: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V924
0x1008: M[0x0] = V926
0x1009: V927 = 0x20
0x100b: V928 = ADD 0x20 0x0
0x100e: M[0x20] = 0x1
0x100f: V929 = 0x20
0x1011: V930 = ADD 0x20 0x20
0x1012: V931 = 0x0
0x1014: V932 = SHA3 0x0 0x40
0x1017: S[V932] = S0
0x1019: V933 = 0x101e
0x101d: V934 = 0x1
0x101f: V935 = 0x0
0x1022: V936 = 0xffffffffffffffffffffffffffffffffffffffff
0x1037: V937 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1038: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0x104d: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0x104f: M[0x0] = V939
0x1050: V940 = 0x20
0x1052: V941 = ADD 0x20 0x0
0x1055: M[0x20] = 0x1
0x1056: V942 = 0x20
0x1058: V943 = ADD 0x20 0x20
0x1059: V944 = 0x0
0x105b: V945 = SHA3 0x0 0x40
0x105c: V946 = S[V945]
0x105d: V947 = 0x1161
0x1063: V948 = 0xffffffff
0x1068: V949 = AND 0xffffffff 0x1161
0x1069: THROW 
0x106a: JUMPDEST 
0x106b: V950 = 0x1
0x106d: V951 = 0x0
0x1070: V952 = 0xffffffffffffffffffffffffffffffffffffffff
0x1085: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1086: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0x109b: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0x109d: M[0x0] = V955
0x109e: V956 = 0x20
0x10a0: V957 = ADD 0x20 0x0
0x10a3: M[0x20] = 0x1
0x10a4: V958 = 0x20
0x10a6: V959 = ADD 0x20 0x20
0x10a7: V960 = 0x0
0x10a9: V961 = SHA3 0x0 0x40
0x10ac: S[V961] = S0
0x10af: V962 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c4: V963 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x10c5: V964 = CALLER
0x10c6: V965 = 0xffffffffffffffffffffffffffffffffffffffff
0x10db: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V964
0x10dc: V967 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x10fe: V968 = 0x40
0x1100: V969 = M[0x40]
0x1104: M[V969] = S2
0x1105: V970 = 0x20
0x1107: V971 = ADD 0x20 V969
0x110b: V972 = 0x40
0x110d: V973 = M[0x40]
0x1110: V974 = SUB V971 V973
0x1112: LOG V973 V974 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V966 V963
0x1113: V975 = 0x1
0x1117: V976 = 0x10d4
0x111a: THROW 
0x111b: JUMPDEST 
0x111c: V977 = 0x0
---
Entry stack: [S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xf89, S2, V946, 0x101e, S1, 0x1, 0x0]
Exit stack: []

================================

Block 0x1120
[0x1120:0x11bf]
---
Predecessors: [0xf84]
Successors: [0x11c0]
---
0x1120 JUMPDEST
0x1121 SWAP3
0x1122 SWAP2
0x1123 POP
0x1124 POP
0x1125 JUMP
0x1126 JUMPDEST
0x1127 PUSH1 0x0
0x1129 PUSH1 0x2
0x112b PUSH1 0x0
0x112d DUP5
0x112e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1143 AND
0x1144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1159 AND
0x115a DUP2
0x115b MSTORE
0x115c PUSH1 0x20
0x115e ADD
0x115f SWAP1
0x1160 DUP2
0x1161 MSTORE
0x1162 PUSH1 0x20
0x1164 ADD
0x1165 PUSH1 0x0
0x1167 SHA3
0x1168 PUSH1 0x0
0x116a DUP4
0x116b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1180 AND
0x1181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1196 AND
0x1197 DUP2
0x1198 MSTORE
0x1199 PUSH1 0x20
0x119b ADD
0x119c SWAP1
0x119d DUP2
0x119e MSTORE
0x119f PUSH1 0x20
0x11a1 ADD
0x11a2 PUSH1 0x0
0x11a4 SHA3
0x11a5 SLOAD
0x11a6 SWAP1
0x11a7 POP
0x11a8 SWAP3
0x11a9 SWAP2
0x11aa POP
0x11ab POP
0x11ac JUMP
0x11ad JUMPDEST
0x11ae PUSH1 0x0
0x11b0 DUP1
0x11b1 DUP3
0x11b2 DUP5
0x11b3 ADD
0x11b4 SWAP1
0x11b5 POP
0x11b6 DUP4
0x11b7 DUP2
0x11b8 LT
0x11b9 ISZERO
0x11ba ISZERO
0x11bb ISZERO
0x11bc PUSH2 0x1175
0x11bf JUMPI
---
0x1120: JUMPDEST 
0x1125: JUMP S3
0x1126: JUMPDEST 
0x1127: V978 = 0x0
0x1129: V979 = 0x2
0x112b: V980 = 0x0
0x112e: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0x1143: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1144: V983 = 0xffffffffffffffffffffffffffffffffffffffff
0x1159: V984 = AND 0xffffffffffffffffffffffffffffffffffffffff V982
0x115b: M[0x0] = V984
0x115c: V985 = 0x20
0x115e: V986 = ADD 0x20 0x0
0x1161: M[0x20] = 0x2
0x1162: V987 = 0x20
0x1164: V988 = ADD 0x20 0x20
0x1165: V989 = 0x0
0x1167: V990 = SHA3 0x0 0x40
0x1168: V991 = 0x0
0x116b: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0x1180: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1181: V994 = 0xffffffffffffffffffffffffffffffffffffffff
0x1196: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0x1198: M[0x0] = V995
0x1199: V996 = 0x20
0x119b: V997 = ADD 0x20 0x0
0x119e: M[0x20] = V990
0x119f: V998 = 0x20
0x11a1: V999 = ADD 0x20 0x20
0x11a2: V1000 = 0x0
0x11a4: V1001 = SHA3 0x0 0x40
0x11a5: V1002 = S[V1001]
0x11ac: JUMP S2
0x11ad: JUMPDEST 
0x11ae: V1003 = 0x0
0x11b3: V1004 = ADD S1 S0
0x11b8: V1005 = LT V1004 S1
0x11b9: V1006 = ISZERO V1005
0x11ba: V1007 = ISZERO V1006
0x11bb: V1008 = ISZERO V1007
0x11bc: V1009 = 0x1175
0x11bf: THROWI V1008
---
Entry stack: [0x0]
Stack pops: 13
Stack additions: [V1004, 0x0, S0, S1]
Exit stack: []

================================

Block 0x11c0
[0x11c0:0x11d7]
---
Predecessors: [0x1120]
Successors: [0x11d8]
---
0x11c0 INVALID
0x11c1 JUMPDEST
0x11c2 DUP1
0x11c3 SWAP2
0x11c4 POP
0x11c5 POP
0x11c6 SWAP3
0x11c7 SWAP2
0x11c8 POP
0x11c9 POP
0x11ca JUMP
0x11cb JUMPDEST
0x11cc PUSH1 0x0
0x11ce DUP3
0x11cf DUP3
0x11d0 GT
0x11d1 ISZERO
0x11d2 ISZERO
0x11d3 ISZERO
0x11d4 PUSH2 0x118d
0x11d7 JUMPI
---
0x11c0: INVALID 
0x11c1: JUMPDEST 
0x11ca: JUMP S4
0x11cb: JUMPDEST 
0x11cc: V1010 = 0x0
0x11d0: V1011 = GT S0 S1
0x11d1: V1012 = ISZERO V1011
0x11d2: V1013 = ISZERO V1012
0x11d3: V1014 = ISZERO V1013
0x11d4: V1015 = 0x118d
0x11d7: THROWI V1014
---
Entry stack: [S3, S2, 0x0, V1004]
Stack pops: 0
Stack additions: [S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x11d8
[0x11d8:0x120f]
---
Predecessors: [0x11c0]
Successors: []
---
0x11d8 INVALID
0x11d9 JUMPDEST
0x11da DUP2
0x11db DUP4
0x11dc SUB
0x11dd SWAP1
0x11de POP
0x11df SWAP3
0x11e0 SWAP2
0x11e1 POP
0x11e2 POP
0x11e3 JUMP
0x11e4 STOP
0x11e5 LOG1
0x11e6 PUSH6 0x627a7a723058
0x11ed SHA3
0x11ee MISSING 0xc4
0x11ef DIFFICULTY
0x11f0 SWAP10
0x11f1 PUSH21 0x56ad06bf09aa49001723f246f19a79f018f64e3aa
0x1207 MISSING 0xb7
0x1208 MISSING 0x2d
0x1209 MISSING 0xc8
0x120a MISSING 0x2e
0x120b RETURNDATACOPY
0x120c STOP
0x120d AND
0x120e STOP
0x120f MISSING 0x29
---
0x11d8: INVALID 
0x11d9: JUMPDEST 
0x11dc: V1016 = SUB S2 S1
0x11e3: JUMP S3
0x11e4: STOP 
0x11e5: LOG S0 S1 S2
0x11e6: V1017 = 0x627a7a723058
0x11ed: V1018 = SHA3 0x627a7a723058 S3
0x11ee: MISSING 0xc4
0x11ef: V1019 = DIFFICULTY
0x11f1: V1020 = 0x56ad06bf09aa49001723f246f19a79f018f64e3aa
0x1207: MISSING 0xb7
0x1208: MISSING 0x2d
0x1209: MISSING 0xc8
0x120a: MISSING 0x2e
0x120b: RETURNDATACOPY S0 S1 S2
0x120c: STOP 
0x120d: V1021 = AND S0 S1
0x120e: STOP 
0x120f: MISSING 0x29
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1016, V1018, 0x56ad06bf09aa49001723f246f19a79f018f64e3aa, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, V1019, V1021]
Exit stack: []

================================

Function 0:
Public function signature: 0xdd62ed3e
Entry block: 0x11c
Exit block: 0x11d8
Body: 0x11c, 0x12e, 0x160, 0x169, 0x18f, 0x1a8, 0x1be, 0x223, 0x24e, 0x2d3, 0x32a, 0x365, 0x390, 0x407, 0x45e, 0x4b5, 0x4e7, 0x4f0, 0x516, 0x52f, 0x545, 0x5aa, 0x624, 0x7f2, 0x882, 0x975, 0x9da, 0xa5b, 0xa62, 0xa67, 0xa6e, 0xaf2, 0xaf8, 0xda3, 0xeee, 0xef3, 0xefa, 0xf7e, 0xf84, 0x1120, 0x11c0, 0x11d8

Function 1:
Public fallback function
Entry block: 0x11c
Exit block: 0x11c
Body: 0x11c

