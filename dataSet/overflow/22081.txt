Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6b
0xa: JUMPI 0x6b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x2f2]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x28bf794d
0x3a EQ
0x3b PUSH2 0x2f2
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x28bf794d
0x3a: V12 = EQ 0x28bf794d V10
0x3b: V13 = 0x2f2
0x3e: JUMPI 0x2f2 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x315]
---
0x3f DUP1
0x40 PUSH4 0x6e66f6e9
0x45 EQ
0x46 PUSH2 0x315
0x49 JUMPI
---
0x40: V14 = 0x6e66f6e9
0x45: V15 = EQ 0x6e66f6e9 V10
0x46: V16 = 0x315
0x49: JUMPI 0x315 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x36a]
---
0x4a DUP1
0x4b PUSH4 0x70a08231
0x50 EQ
0x51 PUSH2 0x36a
0x54 JUMPI
---
0x4b: V17 = 0x70a08231
0x50: V18 = EQ 0x70a08231 V10
0x51: V19 = 0x36a
0x54: JUMPI 0x36a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x3b7]
---
0x55 DUP1
0x56 PUSH4 0x8ad30473
0x5b EQ
0x5c PUSH2 0x3b7
0x5f JUMPI
---
0x56: V20 = 0x8ad30473
0x5b: V21 = EQ 0x8ad30473 V10
0x5c: V22 = 0x3b7
0x5f: JUMPI 0x3b7 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x3dc]
---
0x60 DUP1
0x61 PUSH4 0xa035b1fe
0x66 EQ
0x67 PUSH2 0x3dc
0x6a JUMPI
---
0x61: V23 = 0xa035b1fe
0x66: V24 = EQ 0xa035b1fe V10
0x67: V25 = 0x3dc
0x6a: JUMPI 0x3dc V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x6b]
---
Predecessors: [0x0, 0x60]
Successors: [0x6c]
---
0x6b JUMPDEST
---
0x6b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x85]
---
Predecessors: [0x6b]
Successors: [0x86, 0x8a]
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f PUSH1 0x3
0x71 PUSH1 0x0
0x73 SWAP1
0x74 SLOAD
0x75 SWAP1
0x76 PUSH2 0x100
0x79 EXP
0x7a SWAP1
0x7b DIV
0x7c PUSH1 0xff
0x7e AND
0x7f ISZERO
0x80 ISZERO
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x6c: JUMPDEST 
0x6d: V26 = 0x0
0x6f: V27 = 0x3
0x71: V28 = 0x0
0x74: V29 = S[0x3]
0x76: V30 = 0x100
0x79: V31 = EXP 0x100 0x0
0x7b: V32 = DIV V29 0x1
0x7c: V33 = 0xff
0x7e: V34 = AND 0xff V32
0x7f: V35 = ISZERO V34
0x80: V36 = ISZERO V35
0x81: V37 = ISZERO V36
0x82: V38 = 0x8a
0x85: JUMPI 0x8a V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x6c]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V39 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0x8a
[0x8a:0x19d]
---
Predecessors: [0x6c]
Successors: [0x19e, 0x1a2]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c SWAP1
0x8d POP
0x8e DUP1
0x8f PUSH1 0x2
0x91 PUSH1 0x0
0x93 CALLER
0x94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9 AND
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf AND
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP1
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb PUSH1 0x0
0xcd SHA3
0xce PUSH1 0x0
0xd0 DUP3
0xd1 DUP3
0xd2 SLOAD
0xd3 ADD
0xd4 SWAP3
0xd5 POP
0xd6 POP
0xd7 DUP2
0xd8 SWAP1
0xd9 SSTORE
0xda POP
0xdb PUSH1 0x1
0xdd PUSH1 0x0
0xdf SWAP1
0xe0 SLOAD
0xe1 SWAP1
0xe2 PUSH2 0x100
0xe5 EXP
0xe6 SWAP1
0xe7 DIV
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 PUSH4 0xa9059cbb
0x119 CALLER
0x11a PUSH1 0x0
0x11c SLOAD
0x11d DUP5
0x11e MUL
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP4
0x123 PUSH4 0xffffffff
0x128 AND
0x129 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x147 MUL
0x148 DUP2
0x149 MSTORE
0x14a PUSH1 0x4
0x14c ADD
0x14d DUP1
0x14e DUP4
0x14f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164 AND
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b DUP2
0x17c MSTORE
0x17d PUSH1 0x20
0x17f ADD
0x180 DUP3
0x181 DUP2
0x182 MSTORE
0x183 PUSH1 0x20
0x185 ADD
0x186 SWAP3
0x187 POP
0x188 POP
0x189 POP
0x18a PUSH1 0x0
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP1
0x190 DUP4
0x191 SUB
0x192 DUP2
0x193 PUSH1 0x0
0x195 DUP8
0x196 DUP1
0x197 EXTCODESIZE
0x198 ISZERO
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x8a: JUMPDEST 
0x8b: V40 = CALLVALUE
0x8f: V41 = 0x2
0x91: V42 = 0x0
0x93: V43 = CALLER
0x94: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xaa: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xc1: M[0x0] = V47
0xc2: V48 = 0x20
0xc4: V49 = ADD 0x20 0x0
0xc7: M[0x20] = 0x2
0xc8: V50 = 0x20
0xca: V51 = ADD 0x20 0x20
0xcb: V52 = 0x0
0xcd: V53 = SHA3 0x0 0x40
0xce: V54 = 0x0
0xd2: V55 = S[V53]
0xd3: V56 = ADD V55 V40
0xd9: S[V53] = V56
0xdb: V57 = 0x1
0xdd: V58 = 0x0
0xe0: V59 = S[0x1]
0xe2: V60 = 0x100
0xe5: V61 = EXP 0x100 0x0
0xe7: V62 = DIV V59 0x1
0xe8: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xfe: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x114: V67 = 0xa9059cbb
0x119: V68 = CALLER
0x11a: V69 = 0x0
0x11c: V70 = S[0x0]
0x11e: V71 = MUL V40 V70
0x11f: V72 = 0x40
0x121: V73 = M[0x40]
0x123: V74 = 0xffffffff
0x128: V75 = AND 0xffffffff 0xa9059cbb
0x129: V76 = 0x100000000000000000000000000000000000000000000000000000000
0x147: V77 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x149: M[V73] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x14a: V78 = 0x4
0x14c: V79 = ADD 0x4 V73
0x14f: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x164: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x165: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x17c: M[V79] = V83
0x17d: V84 = 0x20
0x17f: V85 = ADD 0x20 V79
0x182: M[V85] = V71
0x183: V86 = 0x20
0x185: V87 = ADD 0x20 V85
0x18a: V88 = 0x0
0x18c: V89 = 0x40
0x18e: V90 = M[0x40]
0x191: V91 = SUB V87 V90
0x193: V92 = 0x0
0x197: V93 = EXTCODESIZE V66
0x198: V94 = ISZERO V93
0x199: V95 = ISZERO V94
0x19a: V96 = 0x1a2
0x19d: JUMPI 0x1a2 V95
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V40, V66, 0xa9059cbb, V87, 0x0, V90, V91, V90, 0x0, V66]
Exit stack: [V10, V40, V66, 0xa9059cbb, V87, 0x0, V90, V91, V90, 0x0, V66]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x8a]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V97 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V10, V40, V66, 0xa9059cbb, V87, 0x0, V90, V91, V90, 0x0, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40, V66, 0xa9059cbb, V87, 0x0, V90, V91, V90, 0x0, V66]

================================

Block 0x1a2
[0x1a2:0x1ae]
---
Predecessors: [0x8a]
Successors: [0x1af, 0x1b3]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x2c6
0x1a6 GAS
0x1a7 SUB
0x1a8 CALL
0x1a9 ISZERO
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V98 = 0x2c6
0x1a6: V99 = GAS
0x1a7: V100 = SUB V99 0x2c6
0x1a8: V101 = CALL V100 V66 0x0 V90 V91 V90 0x0
0x1a9: V102 = ISZERO V101
0x1aa: V103 = ISZERO V102
0x1ab: V104 = 0x1b3
0x1ae: JUMPI 0x1b3 V103
---
Entry stack: [V10, V40, V66, 0xa9059cbb, V87, 0x0, V90, V91, V90, 0x0, V66]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V40, V66, 0xa9059cbb, V87]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a2]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V105 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V10, V40, V66, 0xa9059cbb, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40, V66, 0xa9059cbb, V87]

================================

Block 0x1b3
[0x1b3:0x266]
---
Predecessors: [0x1a2]
Successors: [0x267, 0x268]
---
0x1b3 JUMPDEST
0x1b4 POP
0x1b5 POP
0x1b6 POP
0x1b7 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d8 CALLER
0x1d9 DUP3
0x1da PUSH1 0x1
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 DUP5
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d DUP2
0x20e MSTORE
0x20f PUSH1 0x20
0x211 ADD
0x212 DUP4
0x213 DUP2
0x214 MSTORE
0x215 PUSH1 0x20
0x217 ADD
0x218 DUP3
0x219 ISZERO
0x21a ISZERO
0x21b ISZERO
0x21c ISZERO
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP4
0x223 POP
0x224 POP
0x225 POP
0x226 POP
0x227 PUSH1 0x40
0x229 MLOAD
0x22a DUP1
0x22b SWAP2
0x22c SUB
0x22d SWAP1
0x22e LOG1
0x22f PUSH20 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x244 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x259 AND
0x25a PUSH2 0x8fc
0x25d PUSH1 0x2
0x25f CALLVALUE
0x260 DUP2
0x261 ISZERO
0x262 ISZERO
0x263 PUSH2 0x268
0x266 JUMPI
---
0x1b3: JUMPDEST 
0x1b7: V106 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d8: V107 = CALLER
0x1da: V108 = 0x1
0x1dc: V109 = 0x40
0x1de: V110 = M[0x40]
0x1e1: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1f7: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x20e: M[V110] = V114
0x20f: V115 = 0x20
0x211: V116 = ADD 0x20 V110
0x214: M[V116] = V40
0x215: V117 = 0x20
0x217: V118 = ADD 0x20 V116
0x219: V119 = ISZERO 0x1
0x21a: V120 = ISZERO 0x0
0x21b: V121 = ISZERO 0x1
0x21c: V122 = ISZERO 0x0
0x21e: M[V118] = 0x1
0x21f: V123 = 0x20
0x221: V124 = ADD 0x20 V118
0x227: V125 = 0x40
0x229: V126 = M[0x40]
0x22c: V127 = SUB V124 V126
0x22e: LOG V126 V127 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22f: V128 = 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x244: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x259: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x25a: V131 = 0x8fc
0x25d: V132 = 0x2
0x25f: V133 = CALLVALUE
0x261: V134 = ISZERO 0x2
0x262: V135 = ISZERO 0x0
0x263: V136 = 0x268
0x266: JUMPI 0x268 0x1
---
Entry stack: [V10, V40, V66, 0xa9059cbb, V87]
Stack pops: 4
Stack additions: [S3, 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160, 0x8fc, 0x2, V133]
Exit stack: [V10, V40, 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160, 0x8fc, 0x2, V133]

================================

Block 0x267
[0x267:0x267]
---
Predecessors: [0x1b3]
Successors: []
---
0x267 INVALID
---
0x267: INVALID 
---
Entry stack: [V10, V40, 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160, 0x8fc, 0x2, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40, 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160, 0x8fc, 0x2, V133]

================================

Block 0x268
[0x268:0x289]
---
Predecessors: [0x1b3]
Successors: [0x28a, 0x28e]
---
0x268 JUMPDEST
0x269 DIV
0x26a SWAP1
0x26b DUP2
0x26c ISZERO
0x26d MUL
0x26e SWAP1
0x26f PUSH1 0x40
0x271 MLOAD
0x272 PUSH1 0x0
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 DUP4
0x279 SUB
0x27a DUP2
0x27b DUP6
0x27c DUP9
0x27d DUP9
0x27e CALL
0x27f SWAP4
0x280 POP
0x281 POP
0x282 POP
0x283 POP
0x284 ISZERO
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x268: JUMPDEST 
0x269: V137 = DIV V133 0x2
0x26c: V138 = ISZERO V137
0x26d: V139 = MUL V138 0x8fc
0x26f: V140 = 0x40
0x271: V141 = M[0x40]
0x272: V142 = 0x0
0x274: V143 = 0x40
0x276: V144 = M[0x40]
0x279: V145 = SUB V141 V144
0x27e: V146 = CALL V139 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160 V137 V144 V145 V144 0x0
0x284: V147 = ISZERO V146
0x285: V148 = ISZERO V147
0x286: V149 = 0x28e
0x289: JUMPI 0x28e V148
---
Entry stack: [V10, V40, 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160, 0x8fc, 0x2, V133]
Stack pops: 4
Stack additions: []
Exit stack: [V10, V40]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x268]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V150 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V10, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40]

================================

Block 0x28e
[0x28e:0x2c6]
---
Predecessors: [0x268]
Successors: [0x2c7, 0x2c8]
---
0x28e JUMPDEST
0x28f PUSH20 0xbc8d8ee58f123fb532ba26045d3865e27a34325b
0x2a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b9 AND
0x2ba PUSH2 0x8fc
0x2bd PUSH1 0x2
0x2bf CALLVALUE
0x2c0 DUP2
0x2c1 ISZERO
0x2c2 ISZERO
0x2c3 PUSH2 0x2c8
0x2c6 JUMPI
---
0x28e: JUMPDEST 
0x28f: V151 = 0xbc8d8ee58f123fb532ba26045d3865e27a34325b
0x2a4: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xbc8d8ee58f123fb532ba26045d3865e27a34325b
0x2ba: V154 = 0x8fc
0x2bd: V155 = 0x2
0x2bf: V156 = CALLVALUE
0x2c1: V157 = ISZERO 0x2
0x2c2: V158 = ISZERO 0x0
0x2c3: V159 = 0x2c8
0x2c6: JUMPI 0x2c8 0x1
---
Entry stack: [V10, V40]
Stack pops: 0
Stack additions: [0xbc8d8ee58f123fb532ba26045d3865e27a34325b, 0x8fc, 0x2, V156]
Exit stack: [V10, V40, 0xbc8d8ee58f123fb532ba26045d3865e27a34325b, 0x8fc, 0x2, V156]

================================

Block 0x2c7
[0x2c7:0x2c7]
---
Predecessors: [0x28e]
Successors: []
---
0x2c7 INVALID
---
0x2c7: INVALID 
---
Entry stack: [V10, V40, 0xbc8d8ee58f123fb532ba26045d3865e27a34325b, 0x8fc, 0x2, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40, 0xbc8d8ee58f123fb532ba26045d3865e27a34325b, 0x8fc, 0x2, V156]

================================

Block 0x2c8
[0x2c8:0x2e9]
---
Predecessors: [0x28e]
Successors: [0x2ea, 0x2ee]
---
0x2c8 JUMPDEST
0x2c9 DIV
0x2ca SWAP1
0x2cb DUP2
0x2cc ISZERO
0x2cd MUL
0x2ce SWAP1
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 PUSH1 0x0
0x2d4 PUSH1 0x40
0x2d6 MLOAD
0x2d7 DUP1
0x2d8 DUP4
0x2d9 SUB
0x2da DUP2
0x2db DUP6
0x2dc DUP9
0x2dd DUP9
0x2de CALL
0x2df SWAP4
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 ISZERO
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V160 = DIV V156 0x2
0x2cc: V161 = ISZERO V160
0x2cd: V162 = MUL V161 0x8fc
0x2cf: V163 = 0x40
0x2d1: V164 = M[0x40]
0x2d2: V165 = 0x0
0x2d4: V166 = 0x40
0x2d6: V167 = M[0x40]
0x2d9: V168 = SUB V164 V167
0x2de: V169 = CALL V162 0xbc8d8ee58f123fb532ba26045d3865e27a34325b V160 V167 V168 V167 0x0
0x2e4: V170 = ISZERO V169
0x2e5: V171 = ISZERO V170
0x2e6: V172 = 0x2ee
0x2e9: JUMPI 0x2ee V171
---
Entry stack: [V10, V40, 0xbc8d8ee58f123fb532ba26045d3865e27a34325b, 0x8fc, 0x2, V156]
Stack pops: 4
Stack additions: []
Exit stack: [V10, V40]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2c8]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V173 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V10, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40]

================================

Block 0x2ee
[0x2ee:0x2ee]
---
Predecessors: [0x2c8]
Successors: [0x2ef]
---
0x2ee JUMPDEST
---
0x2ee: JUMPDEST 
---
Entry stack: [V10, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V40]

================================

Block 0x2ef
[0x2ef:0x2f1]
---
Predecessors: [0x2ee]
Successors: []
---
0x2ef JUMPDEST
0x2f0 POP
0x2f1 STOP
---
0x2ef: JUMPDEST 
0x2f1: STOP 
---
Entry stack: [V10, V40]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f2
[0x2f2:0x2f8]
---
Predecessors: [0xb]
Successors: [0x2f9, 0x2fd]
---
0x2f2 JUMPDEST
0x2f3 CALLVALUE
0x2f4 ISZERO
0x2f5 PUSH2 0x2fd
0x2f8 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V174 = CALLVALUE
0x2f4: V175 = ISZERO V174
0x2f5: V176 = 0x2fd
0x2f8: JUMPI 0x2fd V175
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x2f2]
Successors: []
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
---
0x2f9: V177 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fd
[0x2fd:0x312]
---
Predecessors: [0x2f2]
Successors: [0x405]
---
0x2fd JUMPDEST
0x2fe PUSH2 0x313
0x301 PUSH1 0x4
0x303 DUP1
0x304 DUP1
0x305 CALLDATALOAD
0x306 SWAP1
0x307 PUSH1 0x20
0x309 ADD
0x30a SWAP1
0x30b SWAP2
0x30c SWAP1
0x30d POP
0x30e POP
0x30f PUSH2 0x405
0x312 JUMP
---
0x2fd: JUMPDEST 
0x2fe: V178 = 0x313
0x301: V179 = 0x4
0x305: V180 = CALLDATALOAD 0x4
0x307: V181 = 0x20
0x309: V182 = ADD 0x20 0x4
0x30f: V183 = 0x405
0x312: JUMP 0x405
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x313, V180]
Exit stack: [V10, 0x313, V180]

================================

Block 0x313
[0x313:0x314]
---
Predecessors: [0x45b]
Successors: []
---
0x313 JUMPDEST
0x314 STOP
---
0x313: JUMPDEST 
0x314: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x315
[0x315:0x31b]
---
Predecessors: [0x3f]
Successors: [0x31c, 0x320]
---
0x315 JUMPDEST
0x316 CALLVALUE
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x315: JUMPDEST 
0x316: V184 = CALLVALUE
0x317: V185 = ISZERO V184
0x318: V186 = 0x320
0x31b: JUMPI 0x320 V185
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x315]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V187 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x320
[0x320:0x327]
---
Predecessors: [0x315]
Successors: [0x45e]
---
0x320 JUMPDEST
0x321 PUSH2 0x328
0x324 PUSH2 0x45e
0x327 JUMP
---
0x320: JUMPDEST 
0x321: V188 = 0x328
0x324: V189 = 0x45e
0x327: JUMP 0x45e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x328]
Exit stack: [V10, 0x328]

================================

Block 0x328
[0x328:0x369]
---
Predecessors: [0x45e]
Successors: []
---
0x328 JUMPDEST
0x329 PUSH1 0x40
0x32b MLOAD
0x32c DUP1
0x32d DUP3
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x359 AND
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x20
0x35e ADD
0x35f SWAP2
0x360 POP
0x361 POP
0x362 PUSH1 0x40
0x364 MLOAD
0x365 DUP1
0x366 SWAP2
0x367 SUB
0x368 SWAP1
0x369 RETURN
---
0x328: JUMPDEST 
0x329: V190 = 0x40
0x32b: V191 = M[0x40]
0x32e: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x344: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x359: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x35b: M[V191] = V195
0x35c: V196 = 0x20
0x35e: V197 = ADD 0x20 V191
0x362: V198 = 0x40
0x364: V199 = M[0x40]
0x367: V200 = SUB V197 V199
0x369: RETURN V199 V200
---
Entry stack: [V10, 0x328, V264]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x328]

================================

Block 0x36a
[0x36a:0x370]
---
Predecessors: [0x4a]
Successors: [0x371, 0x375]
---
0x36a JUMPDEST
0x36b CALLVALUE
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x36a: JUMPDEST 
0x36b: V201 = CALLVALUE
0x36c: V202 = ISZERO V201
0x36d: V203 = 0x375
0x370: JUMPI 0x375 V202
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x36a]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V204 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x375
[0x375:0x3a0]
---
Predecessors: [0x36a]
Successors: [0x484]
---
0x375 JUMPDEST
0x376 PUSH2 0x3a1
0x379 PUSH1 0x4
0x37b DUP1
0x37c DUP1
0x37d CALLDATALOAD
0x37e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x393 AND
0x394 SWAP1
0x395 PUSH1 0x20
0x397 ADD
0x398 SWAP1
0x399 SWAP2
0x39a SWAP1
0x39b POP
0x39c POP
0x39d PUSH2 0x484
0x3a0 JUMP
---
0x375: JUMPDEST 
0x376: V205 = 0x3a1
0x379: V206 = 0x4
0x37d: V207 = CALLDATALOAD 0x4
0x37e: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x393: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x395: V210 = 0x20
0x397: V211 = ADD 0x20 0x4
0x39d: V212 = 0x484
0x3a0: JUMP 0x484
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3a1, V209]
Exit stack: [V10, 0x3a1, V209]

================================

Block 0x3a1
[0x3a1:0x3b6]
---
Predecessors: [0x484]
Successors: []
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 DUP1
0x3a6 DUP3
0x3a7 DUP2
0x3a8 MSTORE
0x3a9 PUSH1 0x20
0x3ab ADD
0x3ac SWAP2
0x3ad POP
0x3ae POP
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 SWAP2
0x3b4 SUB
0x3b5 SWAP1
0x3b6 RETURN
---
0x3a1: JUMPDEST 
0x3a2: V213 = 0x40
0x3a4: V214 = M[0x40]
0x3a8: M[V214] = V272
0x3a9: V215 = 0x20
0x3ab: V216 = ADD 0x20 V214
0x3af: V217 = 0x40
0x3b1: V218 = M[0x40]
0x3b4: V219 = SUB V216 V218
0x3b6: RETURN V218 V219
---
Entry stack: [V10, 0x3a1, V272]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3a1]

================================

Block 0x3b7
[0x3b7:0x3bd]
---
Predecessors: [0x55]
Successors: [0x3be, 0x3c2]
---
0x3b7 JUMPDEST
0x3b8 CALLVALUE
0x3b9 ISZERO
0x3ba PUSH2 0x3c2
0x3bd JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V220 = CALLVALUE
0x3b9: V221 = ISZERO V220
0x3ba: V222 = 0x3c2
0x3bd: JUMPI 0x3c2 V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x3b7]
Successors: []
---
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 REVERT
---
0x3be: V223 = 0x0
0x3c1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c2
[0x3c2:0x3d9]
---
Predecessors: [0x3b7]
Successors: [0x49c]
---
0x3c2 JUMPDEST
0x3c3 PUSH2 0x3da
0x3c6 PUSH1 0x4
0x3c8 DUP1
0x3c9 DUP1
0x3ca CALLDATALOAD
0x3cb ISZERO
0x3cc ISZERO
0x3cd SWAP1
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP1
0x3d2 SWAP2
0x3d3 SWAP1
0x3d4 POP
0x3d5 POP
0x3d6 PUSH2 0x49c
0x3d9 JUMP
---
0x3c2: JUMPDEST 
0x3c3: V224 = 0x3da
0x3c6: V225 = 0x4
0x3ca: V226 = CALLDATALOAD 0x4
0x3cb: V227 = ISZERO V226
0x3cc: V228 = ISZERO V227
0x3ce: V229 = 0x20
0x3d0: V230 = ADD 0x20 0x4
0x3d6: V231 = 0x49c
0x3d9: JUMP 0x49c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3da, V228]
Exit stack: [V10, 0x3da, V228]

================================

Block 0x3da
[0x3da:0x3db]
---
Predecessors: [0x505]
Successors: []
---
0x3da JUMPDEST
0x3db STOP
---
0x3da: JUMPDEST 
0x3db: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3dc
[0x3dc:0x3e2]
---
Predecessors: [0x60]
Successors: [0x3e3, 0x3e7]
---
0x3dc JUMPDEST
0x3dd CALLVALUE
0x3de ISZERO
0x3df PUSH2 0x3e7
0x3e2 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V232 = CALLVALUE
0x3de: V233 = ISZERO V232
0x3df: V234 = 0x3e7
0x3e2: JUMPI 0x3e7 V233
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e3
[0x3e3:0x3e6]
---
Predecessors: [0x3dc]
Successors: []
---
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 REVERT
---
0x3e3: V235 = 0x0
0x3e6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e7
[0x3e7:0x3ee]
---
Predecessors: [0x3dc]
Successors: [0x508]
---
0x3e7 JUMPDEST
0x3e8 PUSH2 0x3ef
0x3eb PUSH2 0x508
0x3ee JUMP
---
0x3e7: JUMPDEST 
0x3e8: V236 = 0x3ef
0x3eb: V237 = 0x508
0x3ee: JUMP 0x508
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ef]
Exit stack: [V10, 0x3ef]

================================

Block 0x3ef
[0x3ef:0x404]
---
Predecessors: [0x508]
Successors: []
---
0x3ef JUMPDEST
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 DUP3
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x20
0x3f9 ADD
0x3fa SWAP2
0x3fb POP
0x3fc POP
0x3fd PUSH1 0x40
0x3ff MLOAD
0x400 DUP1
0x401 SWAP2
0x402 SUB
0x403 SWAP1
0x404 RETURN
---
0x3ef: JUMPDEST 
0x3f0: V238 = 0x40
0x3f2: V239 = M[0x40]
0x3f6: M[V239] = V298
0x3f7: V240 = 0x20
0x3f9: V241 = ADD 0x20 V239
0x3fd: V242 = 0x40
0x3ff: V243 = M[0x40]
0x402: V244 = SUB V241 V243
0x404: RETURN V243 V244
---
Entry stack: [V10, 0x3ef, V298]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3ef]

================================

Block 0x405
[0x405:0x44e]
---
Predecessors: [0x2fd]
Successors: [0x44f, 0x453]
---
0x405 JUMPDEST
0x406 PUSH20 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x41b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x430 AND
0x431 CALLER
0x432 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x447 AND
0x448 EQ
0x449 ISZERO
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x405: JUMPDEST 
0x406: V245 = 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x41b: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x430: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x431: V248 = CALLER
0x432: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x447: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x448: V251 = EQ V250 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x449: V252 = ISZERO V251
0x44a: V253 = ISZERO V252
0x44b: V254 = 0x453
0x44e: JUMPI 0x453 V253
---
Entry stack: [V10, 0x313, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x313, V180]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x405]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V255 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V10, 0x313, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x313, V180]

================================

Block 0x453
[0x453:0x45a]
---
Predecessors: [0x405]
Successors: [0x45b]
---
0x453 JUMPDEST
0x454 DUP1
0x455 PUSH1 0x0
0x457 DUP2
0x458 SWAP1
0x459 SSTORE
0x45a POP
---
0x453: JUMPDEST 
0x455: V256 = 0x0
0x459: S[0x0] = V180
---
Entry stack: [V10, 0x313, V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x313, V180]

================================

Block 0x45b
[0x45b:0x45d]
---
Predecessors: [0x453]
Successors: [0x313]
---
0x45b JUMPDEST
0x45c POP
0x45d JUMP
---
0x45b: JUMPDEST 
0x45d: JUMP 0x313
---
Entry stack: [V10, 0x313, V180]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x45e
[0x45e:0x483]
---
Predecessors: [0x320]
Successors: [0x328]
---
0x45e JUMPDEST
0x45f PUSH1 0x1
0x461 PUSH1 0x0
0x463 SWAP1
0x464 SLOAD
0x465 SWAP1
0x466 PUSH2 0x100
0x469 EXP
0x46a SWAP1
0x46b DIV
0x46c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x481 AND
0x482 DUP2
0x483 JUMP
---
0x45e: JUMPDEST 
0x45f: V257 = 0x1
0x461: V258 = 0x0
0x464: V259 = S[0x1]
0x466: V260 = 0x100
0x469: V261 = EXP 0x100 0x0
0x46b: V262 = DIV V259 0x1
0x46c: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x481: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x483: JUMP 0x328
---
Entry stack: [V10, 0x328]
Stack pops: 1
Stack additions: [S0, V264]
Exit stack: [V10, 0x328, V264]

================================

Block 0x484
[0x484:0x49b]
---
Predecessors: [0x375]
Successors: [0x3a1]
---
0x484 JUMPDEST
0x485 PUSH1 0x2
0x487 PUSH1 0x20
0x489 MSTORE
0x48a DUP1
0x48b PUSH1 0x0
0x48d MSTORE
0x48e PUSH1 0x40
0x490 PUSH1 0x0
0x492 SHA3
0x493 PUSH1 0x0
0x495 SWAP2
0x496 POP
0x497 SWAP1
0x498 POP
0x499 SLOAD
0x49a DUP2
0x49b JUMP
---
0x484: JUMPDEST 
0x485: V265 = 0x2
0x487: V266 = 0x20
0x489: M[0x20] = 0x2
0x48b: V267 = 0x0
0x48d: M[0x0] = V209
0x48e: V268 = 0x40
0x490: V269 = 0x0
0x492: V270 = SHA3 0x0 0x40
0x493: V271 = 0x0
0x499: V272 = S[V270]
0x49b: JUMP 0x3a1
---
Entry stack: [V10, 0x3a1, V209]
Stack pops: 2
Stack additions: [S1, V272]
Exit stack: [V10, 0x3a1, V272]

================================

Block 0x49c
[0x49c:0x4e5]
---
Predecessors: [0x3c2]
Successors: [0x4e6, 0x4ea]
---
0x49c JUMPDEST
0x49d PUSH20 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 CALLER
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df EQ
0x4e0 ISZERO
0x4e1 ISZERO
0x4e2 PUSH2 0x4ea
0x4e5 JUMPI
---
0x49c: JUMPDEST 
0x49d: V273 = 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x4b2: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x4c8: V276 = CALLER
0x4c9: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x4df: V279 = EQ V278 0xb993cbf2e0a57d7423c8b3b74a4e9f29c2989160
0x4e0: V280 = ISZERO V279
0x4e1: V281 = ISZERO V280
0x4e2: V282 = 0x4ea
0x4e5: JUMPI 0x4ea V281
---
Entry stack: [V10, 0x3da, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3da, V228]

================================

Block 0x4e6
[0x4e6:0x4e9]
---
Predecessors: [0x49c]
Successors: []
---
0x4e6 PUSH1 0x0
0x4e8 DUP1
0x4e9 REVERT
---
0x4e6: V283 = 0x0
0x4e9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3da, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3da, V228]

================================

Block 0x4ea
[0x4ea:0x504]
---
Predecessors: [0x49c]
Successors: [0x505]
---
0x4ea JUMPDEST
0x4eb DUP1
0x4ec PUSH1 0x3
0x4ee PUSH1 0x0
0x4f0 PUSH2 0x100
0x4f3 EXP
0x4f4 DUP2
0x4f5 SLOAD
0x4f6 DUP2
0x4f7 PUSH1 0xff
0x4f9 MUL
0x4fa NOT
0x4fb AND
0x4fc SWAP1
0x4fd DUP4
0x4fe ISZERO
0x4ff ISZERO
0x500 MUL
0x501 OR
0x502 SWAP1
0x503 SSTORE
0x504 POP
---
0x4ea: JUMPDEST 
0x4ec: V284 = 0x3
0x4ee: V285 = 0x0
0x4f0: V286 = 0x100
0x4f3: V287 = EXP 0x100 0x0
0x4f5: V288 = S[0x3]
0x4f7: V289 = 0xff
0x4f9: V290 = MUL 0xff 0x1
0x4fa: V291 = NOT 0xff
0x4fb: V292 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V288
0x4fe: V293 = ISZERO V228
0x4ff: V294 = ISZERO V293
0x500: V295 = MUL V294 0x1
0x501: V296 = OR V295 V292
0x503: S[0x3] = V296
---
Entry stack: [V10, 0x3da, V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3da, V228]

================================

Block 0x505
[0x505:0x507]
---
Predecessors: [0x4ea]
Successors: [0x3da]
---
0x505 JUMPDEST
0x506 POP
0x507 JUMP
---
0x505: JUMPDEST 
0x507: JUMP 0x3da
---
Entry stack: [V10, 0x3da, V228]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x508
[0x508:0x50d]
---
Predecessors: [0x3e7]
Successors: [0x3ef]
---
0x508 JUMPDEST
0x509 PUSH1 0x0
0x50b SLOAD
0x50c DUP2
0x50d JUMP
---
0x508: JUMPDEST 
0x509: V297 = 0x0
0x50b: V298 = S[0x0]
0x50d: JUMP 0x3ef
---
Entry stack: [V10, 0x3ef]
Stack pops: 1
Stack additions: [S0, V298]
Exit stack: [V10, 0x3ef, V298]

================================

Block 0x50e
[0x50e:0x542]
---
Predecessors: []
Successors: []
---
0x50e STOP
0x50f LOG1
0x510 PUSH6 0x627a7a723058
0x517 SHA3
0x518 MISSING 0xb1
0x519 SGT
0x51a SWAP4
0x51b MISSING 0xbc
0x51c MISSING 0xc1
0x51d SDIV
0x51e RETURNDATACOPY
0x51f MISSING 0xed
0x520 MISSING 0xa6
0x521 DUP4
0x522 MISSING 0xc2
0x523 MISSING 0xea
0x524 SGT
0x525 MISSING 0x2a
0x526 GASPRICE
0x527 MISSING 0xca
0x528 MISSING 0xc8
0x529 MISSING 0xbe
0x52a PUSH24 0x57a8dc6caacd5736aeb289516f0029
---
0x50e: STOP 
0x50f: LOG S0 S1 S2
0x510: V299 = 0x627a7a723058
0x517: V300 = SHA3 0x627a7a723058 S3
0x518: MISSING 0xb1
0x519: V301 = SGT S0 S1
0x51b: MISSING 0xbc
0x51c: MISSING 0xc1
0x51d: V302 = SDIV S0 S1
0x51e: RETURNDATACOPY V302 S2 S3
0x51f: MISSING 0xed
0x520: MISSING 0xa6
0x522: MISSING 0xc2
0x523: MISSING 0xea
0x524: V303 = SGT S0 S1
0x525: MISSING 0x2a
0x526: V304 = GASPRICE
0x527: MISSING 0xca
0x528: MISSING 0xc8
0x529: MISSING 0xbe
0x52a: V305 = 0x57a8dc6caacd5736aeb289516f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V300, S5, S2, S3, S4, V301, S3, S0, S1, S2, S3, V303, V304, 0x57a8dc6caacd5736aeb289516f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x28bf794d
Entry block: 0x2f2
Exit block: 0x313
Body: 0x2f2, 0x2f9, 0x2fd, 0x313, 0x405, 0x44f, 0x453, 0x45b

Function 1:
Public function signature: 0x6e66f6e9
Entry block: 0x315
Exit block: 0x328
Body: 0x315, 0x31c, 0x320, 0x328, 0x45e

Function 2:
Public function signature: 0x70a08231
Entry block: 0x36a
Exit block: 0x3a1
Body: 0x36a, 0x371, 0x375, 0x3a1, 0x484

Function 3:
Public function signature: 0x8ad30473
Entry block: 0x3b7
Exit block: 0x3da
Body: 0x3b7, 0x3be, 0x3c2, 0x3da, 0x49c, 0x4e6, 0x4ea, 0x505

Function 4:
Public function signature: 0xa035b1fe
Entry block: 0x3dc
Exit block: 0x3ef
Body: 0x3dc, 0x3e3, 0x3e7, 0x3ef, 0x508

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x2ef
Body: 0x6b, 0x6c, 0x86, 0x8a, 0x19e, 0x1a2, 0x1af, 0x1b3, 0x267, 0x268, 0x28a, 0x28e, 0x2c7, 0x2c8, 0x2ea, 0x2ee, 0x2ef

