Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa2
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa2
0xa: JUMPI 0xa2 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x6bf]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xd6103a1
0x3a EQ
0x3b PUSH2 0x6bf
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xd6103a1
0x3a: V12 = EQ 0xd6103a1 V10
0x3b: V13 = 0x6bf
0x3e: JUMPI 0x6bf V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x6d4]
---
0x3f DUP1
0x40 PUSH4 0x27ebcf0e
0x45 EQ
0x46 PUSH2 0x6d4
0x49 JUMPI
---
0x40: V14 = 0x27ebcf0e
0x45: V15 = EQ 0x27ebcf0e V10
0x46: V16 = 0x6d4
0x49: JUMPI 0x6d4 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x729]
---
0x4a DUP1
0x4b PUSH4 0x519ee19e
0x50 EQ
0x51 PUSH2 0x729
0x54 JUMPI
---
0x4b: V17 = 0x519ee19e
0x50: V18 = EQ 0x519ee19e V10
0x51: V19 = 0x729
0x54: JUMPI 0x729 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x752]
---
0x55 DUP1
0x56 PUSH4 0x7fa8c158
0x5b EQ
0x5c PUSH2 0x752
0x5f JUMPI
---
0x56: V20 = 0x7fa8c158
0x5b: V21 = EQ 0x7fa8c158 V10
0x5c: V22 = 0x752
0x5f: JUMPI 0x752 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x77b]
---
0x60 DUP1
0x61 PUSH4 0x8da5cb5b
0x66 EQ
0x67 PUSH2 0x77b
0x6a JUMPI
---
0x61: V23 = 0x8da5cb5b
0x66: V24 = EQ 0x8da5cb5b V10
0x67: V25 = 0x77b
0x6a: JUMPI 0x77b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x7d0]
---
0x6b DUP1
0x6c PUSH4 0x96c5406d
0x71 EQ
0x72 PUSH2 0x7d0
0x75 JUMPI
---
0x6c: V26 = 0x96c5406d
0x71: V27 = EQ 0x96c5406d V10
0x72: V28 = 0x7d0
0x75: JUMPI 0x7d0 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x7f9]
---
0x76 DUP1
0x77 PUSH4 0xa035b1fe
0x7c EQ
0x7d PUSH2 0x7f9
0x80 JUMPI
---
0x77: V29 = 0xa035b1fe
0x7c: V30 = EQ 0xa035b1fe V10
0x7d: V31 = 0x7f9
0x80: JUMPI 0x7f9 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x822]
---
0x81 DUP1
0x82 PUSH4 0xb44eccc9
0x87 EQ
0x88 PUSH2 0x822
0x8b JUMPI
---
0x82: V32 = 0xb44eccc9
0x87: V33 = EQ 0xb44eccc9 V10
0x88: V34 = 0x822
0x8b: JUMPI 0x822 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x84b]
---
0x8c DUP1
0x8d PUSH4 0xc8e569a8
0x92 EQ
0x93 PUSH2 0x84b
0x96 JUMPI
---
0x8d: V35 = 0xc8e569a8
0x92: V36 = EQ 0xc8e569a8 V10
0x93: V37 = 0x84b
0x96: JUMPI 0x84b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x874]
---
0x97 DUP1
0x98 PUSH4 0xccb07cef
0x9d EQ
0x9e PUSH2 0x874
0xa1 JUMPI
---
0x98: V38 = 0xccb07cef
0x9d: V39 = EQ 0xccb07cef V10
0x9e: V40 = 0x874
0xa1: JUMPI 0x874 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x0, 0x97]
Successors: [0xa6]
---
0xa2 JUMPDEST
0xa3 PUSH2 0x6bd
---
0xa2: JUMPDEST 
0xa3: V41 = 0x6bd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6bd]
Exit stack: [V10, 0x6bd]

================================

Block 0xa6
[0xa6:0x16a]
---
Predecessors: [0xa2]
Successors: [0x16b, 0x16f]
---
0xa6 JUMPDEST
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa PUSH1 0x0
0xac DUP1
0xad PUSH1 0x0
0xaf SWAP1
0xb0 SLOAD
0xb1 SWAP1
0xb2 PUSH2 0x100
0xb5 EXP
0xb6 SWAP1
0xb7 DIV
0xb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd AND
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 PUSH4 0x70a08231
0xe9 ADDRESS
0xea PUSH1 0x0
0xec PUSH1 0x40
0xee MLOAD
0xef PUSH1 0x20
0xf1 ADD
0xf2 MSTORE
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP3
0xf7 PUSH4 0xffffffff
0xfc AND
0xfd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11b MUL
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x4
0x120 ADD
0x121 DUP1
0x122 DUP3
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP2
0x155 POP
0x156 POP
0x157 PUSH1 0x20
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d DUP4
0x15e SUB
0x15f DUP2
0x160 PUSH1 0x0
0x162 DUP8
0x163 DUP1
0x164 EXTCODESIZE
0x165 ISZERO
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0xa6: JUMPDEST 
0xa7: V42 = 0x0
0xaa: V43 = 0x0
0xad: V44 = 0x0
0xb0: V45 = S[0x0]
0xb2: V46 = 0x100
0xb5: V47 = EXP 0x100 0x0
0xb7: V48 = DIV V45 0x1
0xb8: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xce: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xe4: V53 = 0x70a08231
0xe9: V54 = ADDRESS
0xea: V55 = 0x0
0xec: V56 = 0x40
0xee: V57 = M[0x40]
0xef: V58 = 0x20
0xf1: V59 = ADD 0x20 V57
0xf2: M[V59] = 0x0
0xf3: V60 = 0x40
0xf5: V61 = M[0x40]
0xf7: V62 = 0xffffffff
0xfc: V63 = AND 0xffffffff 0x70a08231
0xfd: V64 = 0x100000000000000000000000000000000000000000000000000000000
0x11b: V65 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x11d: M[V61] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x11e: V66 = 0x4
0x120: V67 = ADD 0x4 V61
0x123: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x139: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x150: M[V67] = V71
0x151: V72 = 0x20
0x153: V73 = ADD 0x20 V67
0x157: V74 = 0x20
0x159: V75 = 0x40
0x15b: V76 = M[0x40]
0x15e: V77 = SUB V73 V76
0x160: V78 = 0x0
0x164: V79 = EXTCODESIZE V52
0x165: V80 = ISZERO V79
0x166: V81 = ISZERO V80
0x167: V82 = 0x16f
0x16a: JUMPI 0x16f V81
---
Entry stack: [V10, 0x6bd]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0xa6]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V83 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]

================================

Block 0x16f
[0x16f:0x17b]
---
Predecessors: [0xa6]
Successors: [0x17c, 0x180]
---
0x16f JUMPDEST
0x170 PUSH2 0x2c6
0x173 GAS
0x174 SUB
0x175 CALL
0x176 ISZERO
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x16f: JUMPDEST 
0x170: V84 = 0x2c6
0x173: V85 = GAS
0x174: V86 = SUB V85 0x2c6
0x175: V87 = CALL V86 V52 0x0 V76 V77 V76 0x20
0x176: V88 = ISZERO V87
0x177: V89 = ISZERO V88
0x178: V90 = 0x180
0x17b: JUMPI 0x180 V89
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x16f]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V91 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]

================================

Block 0x180
[0x180:0x19d]
---
Predecessors: [0x16f]
Successors: [0x19e, 0x1fd]
---
0x180 JUMPDEST
0x181 POP
0x182 POP
0x183 POP
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 MLOAD
0x189 SWAP1
0x18a POP
0x18b PUSH1 0x7
0x18d DUP2
0x18e SWAP1
0x18f SSTORE
0x190 POP
0x191 PUSH1 0x1
0x193 PUSH1 0x3
0x195 SLOAD
0x196 ADD
0x197 TIMESTAMP
0x198 GT
0x199 ISZERO
0x19a PUSH2 0x1fd
0x19d JUMPI
---
0x180: JUMPDEST 
0x184: V92 = 0x40
0x186: V93 = M[0x40]
0x188: V94 = M[V93]
0x18b: V95 = 0x7
0x18f: S[0x7] = V94
0x191: V96 = 0x1
0x193: V97 = 0x3
0x195: V98 = S[0x3]
0x196: V99 = ADD V98 0x1
0x197: V100 = TIMESTAMP
0x198: V101 = GT V100 V99
0x199: V102 = ISZERO V101
0x19a: V103 = 0x1fd
0x19d: JUMPI 0x1fd V102
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x19e
[0x19e:0x1d8]
---
Predecessors: [0x180]
Successors: [0x1d9, 0x1dd]
---
0x19e CALLER
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH2 0x8fc
0x1b8 CALLVALUE
0x1b9 SWAP1
0x1ba DUP2
0x1bb ISZERO
0x1bc MUL
0x1bd SWAP1
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 PUSH1 0x0
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 DUP4
0x1c8 SUB
0x1c9 DUP2
0x1ca DUP6
0x1cb DUP9
0x1cc DUP9
0x1cd CALL
0x1ce SWAP4
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 ISZERO
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x19e: V104 = CALLER
0x19f: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1b5: V107 = 0x8fc
0x1b8: V108 = CALLVALUE
0x1bb: V109 = ISZERO V108
0x1bc: V110 = MUL V109 0x8fc
0x1be: V111 = 0x40
0x1c0: V112 = M[0x40]
0x1c1: V113 = 0x0
0x1c3: V114 = 0x40
0x1c5: V115 = M[0x40]
0x1c8: V116 = SUB V112 V115
0x1cd: V117 = CALL V110 V106 V108 V115 V116 V115 0x0
0x1d3: V118 = ISZERO V117
0x1d4: V119 = ISZERO V118
0x1d5: V120 = 0x1dd
0x1d8: JUMPI 0x1dd V119
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x19e]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V121 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x1dd
[0x1dd:0x1fc]
---
Predecessors: [0x19e]
Successors: [0x634]
---
0x1dd JUMPDEST
0x1de PUSH1 0x1
0x1e0 PUSH1 0x8
0x1e2 PUSH1 0x0
0x1e4 PUSH2 0x100
0x1e7 EXP
0x1e8 DUP2
0x1e9 SLOAD
0x1ea DUP2
0x1eb PUSH1 0xff
0x1ed MUL
0x1ee NOT
0x1ef AND
0x1f0 SWAP1
0x1f1 DUP4
0x1f2 ISZERO
0x1f3 ISZERO
0x1f4 MUL
0x1f5 OR
0x1f6 SWAP1
0x1f7 SSTORE
0x1f8 POP
0x1f9 PUSH2 0x634
0x1fc JUMP
---
0x1dd: JUMPDEST 
0x1de: V122 = 0x1
0x1e0: V123 = 0x8
0x1e2: V124 = 0x0
0x1e4: V125 = 0x100
0x1e7: V126 = EXP 0x100 0x0
0x1e9: V127 = S[0x8]
0x1eb: V128 = 0xff
0x1ed: V129 = MUL 0xff 0x1
0x1ee: V130 = NOT 0xff
0x1ef: V131 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V127
0x1f2: V132 = ISZERO 0x1
0x1f3: V133 = ISZERO 0x0
0x1f4: V134 = MUL 0x1 0x1
0x1f5: V135 = OR 0x1 V131
0x1f7: S[0x8] = V135
0x1f9: V136 = 0x634
0x1fc: JUMP 0x634
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x1fd
[0x1fd:0x212]
---
Predecessors: [0x180]
Successors: [0x213, 0x257]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x8
0x200 PUSH1 0x0
0x202 SWAP1
0x203 SLOAD
0x204 SWAP1
0x205 PUSH2 0x100
0x208 EXP
0x209 SWAP1
0x20a DIV
0x20b PUSH1 0xff
0x20d AND
0x20e ISZERO
0x20f PUSH2 0x257
0x212 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V137 = 0x8
0x200: V138 = 0x0
0x203: V139 = S[0x8]
0x205: V140 = 0x100
0x208: V141 = EXP 0x100 0x0
0x20a: V142 = DIV V139 0x1
0x20b: V143 = 0xff
0x20d: V144 = AND 0xff V142
0x20e: V145 = ISZERO V144
0x20f: V146 = 0x257
0x212: JUMPI 0x257 V145
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x213
[0x213:0x24d]
---
Predecessors: [0x1fd]
Successors: [0x24e, 0x252]
---
0x213 CALLER
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a PUSH2 0x8fc
0x22d CALLVALUE
0x22e SWAP1
0x22f DUP2
0x230 ISZERO
0x231 MUL
0x232 SWAP1
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x0
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d SUB
0x23e DUP2
0x23f DUP6
0x240 DUP9
0x241 DUP9
0x242 CALL
0x243 SWAP4
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 ISZERO
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x213: V147 = CALLER
0x214: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x22a: V150 = 0x8fc
0x22d: V151 = CALLVALUE
0x230: V152 = ISZERO V151
0x231: V153 = MUL V152 0x8fc
0x233: V154 = 0x40
0x235: V155 = M[0x40]
0x236: V156 = 0x0
0x238: V157 = 0x40
0x23a: V158 = M[0x40]
0x23d: V159 = SUB V155 V158
0x242: V160 = CALL V153 V149 V151 V158 V159 V158 0x0
0x248: V161 = ISZERO V160
0x249: V162 = ISZERO V161
0x24a: V163 = 0x252
0x24d: JUMPI 0x252 V162
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x213]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V164 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x252
[0x252:0x256]
---
Predecessors: [0x213]
Successors: [0x633]
---
0x252 JUMPDEST
0x253 PUSH2 0x633
0x256 JUMP
---
0x252: JUMPDEST 
0x253: V165 = 0x633
0x256: JUMP 0x633
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0]

================================

Block 0x257
[0x257:0x265]
---
Predecessors: [0x1fd]
Successors: [0x266, 0x267]
---
0x257 JUMPDEST
0x258 PUSH1 0x5
0x25a SLOAD
0x25b PUSH1 0x4
0x25d SLOAD
0x25e CALLVALUE
0x25f DUP2
0x260 ISZERO
0x261 ISZERO
0x262 PUSH2 0x267
0x265 JUMPI
---
0x257: JUMPDEST 
0x258: V166 = 0x5
0x25a: V167 = S[0x5]
0x25b: V168 = 0x4
0x25d: V169 = S[0x4]
0x25e: V170 = CALLVALUE
0x260: V171 = ISZERO V169
0x261: V172 = ISZERO V171
0x262: V173 = 0x267
0x265: JUMPI 0x267 V172
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V167, V169, V170]
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V167, V169, V170]

================================

Block 0x266
[0x266:0x266]
---
Predecessors: [0x257]
Successors: []
---
0x266 INVALID
---
0x266: INVALID 
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V167, V169, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V167, V169, V170]

================================

Block 0x267
[0x267:0x275]
---
Predecessors: [0x257]
Successors: [0x276, 0x27a]
---
0x267 JUMPDEST
0x268 DIV
0x269 MUL
0x26a SWAP3
0x26b POP
0x26c PUSH1 0x0
0x26e DUP4
0x26f GT
0x270 ISZERO
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x267: JUMPDEST 
0x268: V174 = DIV V170 V169
0x269: V175 = MUL V174 V167
0x26c: V176 = 0x0
0x26f: V177 = GT V175 0x0
0x270: V178 = ISZERO V177
0x271: V179 = ISZERO V178
0x272: V180 = 0x27a
0x275: JUMPI 0x27a V179
---
Entry stack: [V10, 0x6bd, 0x0, 0x0, 0x0, V167, V169, V170]
Stack pops: 6
Stack additions: [V175, S4, S3]
Exit stack: [V10, 0x6bd, V175, 0x0, 0x0]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x267]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V181 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, 0x0, 0x0]

================================

Block 0x27a
[0x27a:0x289]
---
Predecessors: [0x267]
Successors: [0x28a, 0x28b]
---
0x27a JUMPDEST
0x27b PUSH1 0x5
0x27d SLOAD
0x27e PUSH1 0x4
0x280 SLOAD
0x281 DUP5
0x282 MUL
0x283 DUP2
0x284 ISZERO
0x285 ISZERO
0x286 PUSH2 0x28b
0x289 JUMPI
---
0x27a: JUMPDEST 
0x27b: V182 = 0x5
0x27d: V183 = S[0x5]
0x27e: V184 = 0x4
0x280: V185 = S[0x4]
0x282: V186 = MUL V175 V185
0x284: V187 = ISZERO V183
0x285: V188 = ISZERO V187
0x286: V189 = 0x28b
0x289: JUMPI 0x28b V188
---
Entry stack: [V10, 0x6bd, V175, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V183, V186]
Exit stack: [V10, 0x6bd, V175, 0x0, 0x0, V183, V186]

================================

Block 0x28a
[0x28a:0x28a]
---
Predecessors: [0x27a]
Successors: []
---
0x28a INVALID
---
0x28a: INVALID 
---
Entry stack: [V10, 0x6bd, V175, 0x0, 0x0, V183, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, 0x0, 0x0, V183, V186]

================================

Block 0x28b
[0x28b:0x299]
---
Predecessors: [0x27a]
Successors: [0x29a, 0x469]
---
0x28b JUMPDEST
0x28c DIV
0x28d SWAP2
0x28e POP
0x28f DUP3
0x290 PUSH1 0x7
0x292 SLOAD
0x293 LT
0x294 ISZERO
0x295 ISZERO
0x296 PUSH2 0x469
0x299 JUMPI
---
0x28b: JUMPDEST 
0x28c: V190 = DIV V186 V183
0x290: V191 = 0x7
0x292: V192 = S[0x7]
0x293: V193 = LT V192 V175
0x294: V194 = ISZERO V193
0x295: V195 = ISZERO V194
0x296: V196 = 0x469
0x299: JUMPI 0x469 V195
---
Entry stack: [V10, 0x6bd, V175, 0x0, 0x0, V183, V186]
Stack pops: 5
Stack additions: [S4, V190, S2]
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x29a
[0x29a:0x2f6]
---
Predecessors: [0x28b]
Successors: [0x2f7, 0x2fb]
---
0x29a PUSH1 0x8
0x29c PUSH1 0x1
0x29e SWAP1
0x29f SLOAD
0x2a0 SWAP1
0x2a1 PUSH2 0x100
0x2a4 EXP
0x2a5 SWAP1
0x2a6 DIV
0x2a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bc AND
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 PUSH2 0x8fc
0x2d6 DUP4
0x2d7 SWAP1
0x2d8 DUP2
0x2d9 ISZERO
0x2da MUL
0x2db SWAP1
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df PUSH1 0x0
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP1
0x2e5 DUP4
0x2e6 SUB
0x2e7 DUP2
0x2e8 DUP6
0x2e9 DUP9
0x2ea DUP9
0x2eb CALL
0x2ec SWAP4
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 ISZERO
0x2f2 ISZERO
0x2f3 PUSH2 0x2fb
0x2f6 JUMPI
---
0x29a: V197 = 0x8
0x29c: V198 = 0x1
0x29f: V199 = S[0x8]
0x2a1: V200 = 0x100
0x2a4: V201 = EXP 0x100 0x1
0x2a6: V202 = DIV V199 0x100
0x2a7: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bc: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x2bd: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x2d3: V207 = 0x8fc
0x2d9: V208 = ISZERO V190
0x2da: V209 = MUL V208 0x8fc
0x2dc: V210 = 0x40
0x2de: V211 = M[0x40]
0x2df: V212 = 0x0
0x2e1: V213 = 0x40
0x2e3: V214 = M[0x40]
0x2e6: V215 = SUB V211 V214
0x2eb: V216 = CALL V209 V206 V190 V214 V215 V214 0x0
0x2f1: V217 = ISZERO V216
0x2f2: V218 = ISZERO V217
0x2f3: V219 = 0x2fb
0x2f6: JUMPI 0x2fb V218
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x2f7
[0x2f7:0x2fa]
---
Predecessors: [0x29a]
Successors: []
---
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa REVERT
---
0x2f7: V220 = 0x0
0x2fa: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x2fb
[0x2fb:0x303]
---
Predecessors: [0x29a]
Successors: [0x304, 0x346]
---
0x2fb JUMPDEST
0x2fc DUP2
0x2fd CALLVALUE
0x2fe GT
0x2ff ISZERO
0x300 PUSH2 0x346
0x303 JUMPI
---
0x2fb: JUMPDEST 
0x2fd: V221 = CALLVALUE
0x2fe: V222 = GT V221 V190
0x2ff: V223 = ISZERO V222
0x300: V224 = 0x346
0x303: JUMPI 0x346 V223
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x304
[0x304:0x340]
---
Predecessors: [0x2fb]
Successors: [0x341, 0x345]
---
0x304 CALLER
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a AND
0x31b PUSH2 0x8fc
0x31e DUP4
0x31f CALLVALUE
0x320 SUB
0x321 SWAP1
0x322 DUP2
0x323 ISZERO
0x324 MUL
0x325 SWAP1
0x326 PUSH1 0x40
0x328 MLOAD
0x329 PUSH1 0x0
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f DUP4
0x330 SUB
0x331 DUP2
0x332 DUP6
0x333 DUP9
0x334 DUP9
0x335 CALL
0x336 SWAP4
0x337 POP
0x338 POP
0x339 POP
0x33a POP
0x33b ISZERO
0x33c ISZERO
0x33d PUSH2 0x345
0x340 JUMPI
---
0x304: V225 = CALLER
0x305: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x31b: V228 = 0x8fc
0x31f: V229 = CALLVALUE
0x320: V230 = SUB V229 V190
0x323: V231 = ISZERO V230
0x324: V232 = MUL V231 0x8fc
0x326: V233 = 0x40
0x328: V234 = M[0x40]
0x329: V235 = 0x0
0x32b: V236 = 0x40
0x32d: V237 = M[0x40]
0x330: V238 = SUB V234 V237
0x335: V239 = CALL V232 V227 V230 V237 V238 V237 0x0
0x33b: V240 = ISZERO V239
0x33c: V241 = ISZERO V240
0x33d: V242 = 0x345
0x340: JUMPI 0x345 V241
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x304]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V243 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x345
[0x345:0x345]
---
Predecessors: [0x304]
Successors: [0x346]
---
0x345 JUMPDEST
---
0x345: JUMPDEST 
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x346
[0x346:0x404]
---
Predecessors: [0x2fb, 0x345]
Successors: [0x405, 0x409]
---
0x346 JUMPDEST
0x347 PUSH1 0x0
0x349 DUP1
0x34a SWAP1
0x34b SLOAD
0x34c SWAP1
0x34d PUSH2 0x100
0x350 EXP
0x351 SWAP1
0x352 DIV
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f PUSH4 0xa9059cbb
0x384 CALLER
0x385 DUP6
0x386 PUSH1 0x40
0x388 MLOAD
0x389 DUP4
0x38a PUSH4 0xffffffff
0x38f AND
0x390 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3ae MUL
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x4
0x3b3 ADD
0x3b4 DUP1
0x3b5 DUP4
0x3b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cb AND
0x3cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e1 AND
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 PUSH1 0x20
0x3e6 ADD
0x3e7 DUP3
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP3
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 PUSH1 0x0
0x3f3 PUSH1 0x40
0x3f5 MLOAD
0x3f6 DUP1
0x3f7 DUP4
0x3f8 SUB
0x3f9 DUP2
0x3fa PUSH1 0x0
0x3fc DUP8
0x3fd DUP1
0x3fe EXTCODESIZE
0x3ff ISZERO
0x400 ISZERO
0x401 PUSH2 0x409
0x404 JUMPI
---
0x346: JUMPDEST 
0x347: V244 = 0x0
0x34b: V245 = S[0x0]
0x34d: V246 = 0x100
0x350: V247 = EXP 0x100 0x0
0x352: V248 = DIV V245 0x1
0x353: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x369: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x37f: V253 = 0xa9059cbb
0x384: V254 = CALLER
0x386: V255 = 0x40
0x388: V256 = M[0x40]
0x38a: V257 = 0xffffffff
0x38f: V258 = AND 0xffffffff 0xa9059cbb
0x390: V259 = 0x100000000000000000000000000000000000000000000000000000000
0x3ae: V260 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3b0: M[V256] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b1: V261 = 0x4
0x3b3: V262 = ADD 0x4 V256
0x3b6: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x3cc: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x3e3: M[V262] = V266
0x3e4: V267 = 0x20
0x3e6: V268 = ADD 0x20 V262
0x3e9: M[V268] = V175
0x3ea: V269 = 0x20
0x3ec: V270 = ADD 0x20 V268
0x3f1: V271 = 0x0
0x3f3: V272 = 0x40
0x3f5: V273 = M[0x40]
0x3f8: V274 = SUB V270 V273
0x3fa: V275 = 0x0
0x3fe: V276 = EXTCODESIZE V252
0x3ff: V277 = ISZERO V276
0x400: V278 = ISZERO V277
0x401: V279 = 0x409
0x404: JUMPI 0x409 V278
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V252, 0xa9059cbb, V270, 0x0, V273, V274, V273, 0x0, V252]
Exit stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270, 0x0, V273, V274, V273, 0x0, V252]

================================

Block 0x405
[0x405:0x408]
---
Predecessors: [0x346]
Successors: []
---
0x405 PUSH1 0x0
0x407 DUP1
0x408 REVERT
---
0x405: V280 = 0x0
0x408: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270, 0x0, V273, V274, V273, 0x0, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270, 0x0, V273, V274, V273, 0x0, V252]

================================

Block 0x409
[0x409:0x415]
---
Predecessors: [0x346]
Successors: [0x416, 0x41a]
---
0x409 JUMPDEST
0x40a PUSH2 0x2c6
0x40d GAS
0x40e SUB
0x40f CALL
0x410 ISZERO
0x411 ISZERO
0x412 PUSH2 0x41a
0x415 JUMPI
---
0x409: JUMPDEST 
0x40a: V281 = 0x2c6
0x40d: V282 = GAS
0x40e: V283 = SUB V282 0x2c6
0x40f: V284 = CALL V283 V252 0x0 V273 V274 V273 0x0
0x410: V285 = ISZERO V284
0x411: V286 = ISZERO V285
0x412: V287 = 0x41a
0x415: JUMPI 0x41a V286
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270, 0x0, V273, V274, V273, 0x0, V252]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x409]
Successors: []
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 REVERT
---
0x416: V288 = 0x0
0x419: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270]

================================

Block 0x41a
[0x41a:0x448]
---
Predecessors: [0x409]
Successors: [0x449, 0x464]
---
0x41a JUMPDEST
0x41b POP
0x41c POP
0x41d POP
0x41e DUP3
0x41f PUSH1 0x6
0x421 PUSH1 0x0
0x423 DUP3
0x424 DUP3
0x425 SLOAD
0x426 ADD
0x427 SWAP3
0x428 POP
0x429 POP
0x42a DUP2
0x42b SWAP1
0x42c SSTORE
0x42d POP
0x42e DUP3
0x42f PUSH1 0x7
0x431 PUSH1 0x0
0x433 DUP3
0x434 DUP3
0x435 SLOAD
0x436 SUB
0x437 SWAP3
0x438 POP
0x439 POP
0x43a DUP2
0x43b SWAP1
0x43c SSTORE
0x43d POP
0x43e PUSH1 0x0
0x440 PUSH1 0x7
0x442 SLOAD
0x443 EQ
0x444 ISZERO
0x445 PUSH2 0x464
0x448 JUMPI
---
0x41a: JUMPDEST 
0x41f: V289 = 0x6
0x421: V290 = 0x0
0x425: V291 = S[0x6]
0x426: V292 = ADD V291 V175
0x42c: S[0x6] = V292
0x42f: V293 = 0x7
0x431: V294 = 0x0
0x435: V295 = S[0x7]
0x436: V296 = SUB V295 V175
0x43c: S[0x7] = V296
0x43e: V297 = 0x0
0x440: V298 = 0x7
0x442: V299 = S[0x7]
0x443: V300 = EQ V299 0x0
0x444: V301 = ISZERO V300
0x445: V302 = 0x464
0x448: JUMPI 0x464 V301
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0, V252, 0xa9059cbb, V270]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x449
[0x449:0x463]
---
Predecessors: [0x41a]
Successors: [0x464]
---
0x449 PUSH1 0x1
0x44b PUSH1 0x8
0x44d PUSH1 0x0
0x44f PUSH2 0x100
0x452 EXP
0x453 DUP2
0x454 SLOAD
0x455 DUP2
0x456 PUSH1 0xff
0x458 MUL
0x459 NOT
0x45a AND
0x45b SWAP1
0x45c DUP4
0x45d ISZERO
0x45e ISZERO
0x45f MUL
0x460 OR
0x461 SWAP1
0x462 SSTORE
0x463 POP
---
0x449: V303 = 0x1
0x44b: V304 = 0x8
0x44d: V305 = 0x0
0x44f: V306 = 0x100
0x452: V307 = EXP 0x100 0x0
0x454: V308 = S[0x8]
0x456: V309 = 0xff
0x458: V310 = MUL 0xff 0x1
0x459: V311 = NOT 0xff
0x45a: V312 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V308
0x45d: V313 = ISZERO 0x1
0x45e: V314 = ISZERO 0x0
0x45f: V315 = MUL 0x1 0x1
0x460: V316 = OR 0x1 V312
0x462: S[0x8] = V316
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x464
[0x464:0x468]
---
Predecessors: [0x41a, 0x449]
Successors: [0x632]
---
0x464 JUMPDEST
0x465 PUSH2 0x632
0x468 JUMP
---
0x464: JUMPDEST 
0x465: V317 = 0x632
0x468: JUMP 0x632
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0]

================================

Block 0x469
[0x469:0x47a]
---
Predecessors: [0x28b]
Successors: [0x47b, 0x47c]
---
0x469 JUMPDEST
0x46a PUSH1 0x5
0x46c SLOAD
0x46d PUSH1 0x4
0x46f SLOAD
0x470 PUSH1 0x7
0x472 SLOAD
0x473 MUL
0x474 DUP2
0x475 ISZERO
0x476 ISZERO
0x477 PUSH2 0x47c
0x47a JUMPI
---
0x469: JUMPDEST 
0x46a: V318 = 0x5
0x46c: V319 = S[0x5]
0x46d: V320 = 0x4
0x46f: V321 = S[0x4]
0x470: V322 = 0x7
0x472: V323 = S[0x7]
0x473: V324 = MUL V323 V321
0x475: V325 = ISZERO V319
0x476: V326 = ISZERO V325
0x477: V327 = 0x47c
0x47a: JUMPI 0x47c V326
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0]
Stack pops: 0
Stack additions: [V319, V324]
Exit stack: [V10, 0x6bd, V175, V190, 0x0, V319, V324]

================================

Block 0x47b
[0x47b:0x47b]
---
Predecessors: [0x469]
Successors: []
---
0x47b INVALID
---
0x47b: INVALID 
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0, V319, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, 0x0, V319, V324]

================================

Block 0x47c
[0x47c:0x4dc]
---
Predecessors: [0x469]
Successors: [0x4dd, 0x4e1]
---
0x47c JUMPDEST
0x47d DIV
0x47e SWAP1
0x47f POP
0x480 PUSH1 0x8
0x482 PUSH1 0x1
0x484 SWAP1
0x485 SLOAD
0x486 SWAP1
0x487 PUSH2 0x100
0x48a EXP
0x48b SWAP1
0x48c DIV
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 AND
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 AND
0x4b9 PUSH2 0x8fc
0x4bc DUP3
0x4bd SWAP1
0x4be DUP2
0x4bf ISZERO
0x4c0 MUL
0x4c1 SWAP1
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 PUSH1 0x0
0x4c7 PUSH1 0x40
0x4c9 MLOAD
0x4ca DUP1
0x4cb DUP4
0x4cc SUB
0x4cd DUP2
0x4ce DUP6
0x4cf DUP9
0x4d0 DUP9
0x4d1 CALL
0x4d2 SWAP4
0x4d3 POP
0x4d4 POP
0x4d5 POP
0x4d6 POP
0x4d7 ISZERO
0x4d8 ISZERO
0x4d9 PUSH2 0x4e1
0x4dc JUMPI
---
0x47c: JUMPDEST 
0x47d: V328 = DIV V324 V319
0x480: V329 = 0x8
0x482: V330 = 0x1
0x485: V331 = S[0x8]
0x487: V332 = 0x100
0x48a: V333 = EXP 0x100 0x1
0x48c: V334 = DIV V331 0x100
0x48d: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x4a3: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x4b9: V339 = 0x8fc
0x4bf: V340 = ISZERO V328
0x4c0: V341 = MUL V340 0x8fc
0x4c2: V342 = 0x40
0x4c4: V343 = M[0x40]
0x4c5: V344 = 0x0
0x4c7: V345 = 0x40
0x4c9: V346 = M[0x40]
0x4cc: V347 = SUB V343 V346
0x4d1: V348 = CALL V341 V338 V328 V346 V347 V346 0x0
0x4d7: V349 = ISZERO V348
0x4d8: V350 = ISZERO V349
0x4d9: V351 = 0x4e1
0x4dc: JUMPI 0x4e1 V350
---
Entry stack: [V10, 0x6bd, V175, V190, 0x0, V319, V324]
Stack pops: 3
Stack additions: [V328]
Exit stack: [V10, 0x6bd, V175, V190, V328]

================================

Block 0x4dd
[0x4dd:0x4e0]
---
Predecessors: [0x47c]
Successors: []
---
0x4dd PUSH1 0x0
0x4df DUP1
0x4e0 REVERT
---
0x4dd: V352 = 0x0
0x4e0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, V328]

================================

Block 0x4e1
[0x4e1:0x5a1]
---
Predecessors: [0x47c]
Successors: [0x5a2, 0x5a6]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x0
0x4e4 DUP1
0x4e5 SWAP1
0x4e6 SLOAD
0x4e7 SWAP1
0x4e8 PUSH2 0x100
0x4eb EXP
0x4ec SWAP1
0x4ed DIV
0x4ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x503 AND
0x504 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x519 AND
0x51a PUSH4 0xa9059cbb
0x51f CALLER
0x520 PUSH1 0x7
0x522 SLOAD
0x523 PUSH1 0x40
0x525 MLOAD
0x526 DUP4
0x527 PUSH4 0xffffffff
0x52c AND
0x52d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x54b MUL
0x54c DUP2
0x54d MSTORE
0x54e PUSH1 0x4
0x550 ADD
0x551 DUP1
0x552 DUP4
0x553 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x568 AND
0x569 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57e AND
0x57f DUP2
0x580 MSTORE
0x581 PUSH1 0x20
0x583 ADD
0x584 DUP3
0x585 DUP2
0x586 MSTORE
0x587 PUSH1 0x20
0x589 ADD
0x58a SWAP3
0x58b POP
0x58c POP
0x58d POP
0x58e PUSH1 0x0
0x590 PUSH1 0x40
0x592 MLOAD
0x593 DUP1
0x594 DUP4
0x595 SUB
0x596 DUP2
0x597 PUSH1 0x0
0x599 DUP8
0x59a DUP1
0x59b EXTCODESIZE
0x59c ISZERO
0x59d ISZERO
0x59e PUSH2 0x5a6
0x5a1 JUMPI
---
0x4e1: JUMPDEST 
0x4e2: V353 = 0x0
0x4e6: V354 = S[0x0]
0x4e8: V355 = 0x100
0x4eb: V356 = EXP 0x100 0x0
0x4ed: V357 = DIV V354 0x1
0x4ee: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x503: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x504: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x519: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x51a: V362 = 0xa9059cbb
0x51f: V363 = CALLER
0x520: V364 = 0x7
0x522: V365 = S[0x7]
0x523: V366 = 0x40
0x525: V367 = M[0x40]
0x527: V368 = 0xffffffff
0x52c: V369 = AND 0xffffffff 0xa9059cbb
0x52d: V370 = 0x100000000000000000000000000000000000000000000000000000000
0x54b: V371 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x54d: M[V367] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x54e: V372 = 0x4
0x550: V373 = ADD 0x4 V367
0x553: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x568: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x569: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x580: M[V373] = V377
0x581: V378 = 0x20
0x583: V379 = ADD 0x20 V373
0x586: M[V379] = V365
0x587: V380 = 0x20
0x589: V381 = ADD 0x20 V379
0x58e: V382 = 0x0
0x590: V383 = 0x40
0x592: V384 = M[0x40]
0x595: V385 = SUB V381 V384
0x597: V386 = 0x0
0x59b: V387 = EXTCODESIZE V361
0x59c: V388 = ISZERO V387
0x59d: V389 = ISZERO V388
0x59e: V390 = 0x5a6
0x5a1: JUMPI 0x5a6 V389
---
Entry stack: [V10, 0x6bd, V175, V190, V328]
Stack pops: 0
Stack additions: [V361, 0xa9059cbb, V381, 0x0, V384, V385, V384, 0x0, V361]
Exit stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381, 0x0, V384, V385, V384, 0x0, V361]

================================

Block 0x5a2
[0x5a2:0x5a5]
---
Predecessors: [0x4e1]
Successors: []
---
0x5a2 PUSH1 0x0
0x5a4 DUP1
0x5a5 REVERT
---
0x5a2: V391 = 0x0
0x5a5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381, 0x0, V384, V385, V384, 0x0, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381, 0x0, V384, V385, V384, 0x0, V361]

================================

Block 0x5a6
[0x5a6:0x5b2]
---
Predecessors: [0x4e1]
Successors: [0x5b3, 0x5b7]
---
0x5a6 JUMPDEST
0x5a7 PUSH2 0x2c6
0x5aa GAS
0x5ab SUB
0x5ac CALL
0x5ad ISZERO
0x5ae ISZERO
0x5af PUSH2 0x5b7
0x5b2 JUMPI
---
0x5a6: JUMPDEST 
0x5a7: V392 = 0x2c6
0x5aa: V393 = GAS
0x5ab: V394 = SUB V393 0x2c6
0x5ac: V395 = CALL V394 V361 0x0 V384 V385 V384 0x0
0x5ad: V396 = ISZERO V395
0x5ae: V397 = ISZERO V396
0x5af: V398 = 0x5b7
0x5b2: JUMPI 0x5b7 V397
---
Entry stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381, 0x0, V384, V385, V384, 0x0, V361]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381]

================================

Block 0x5b3
[0x5b3:0x5b6]
---
Predecessors: [0x5a6]
Successors: []
---
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 REVERT
---
0x5b3: V399 = 0x0
0x5b6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381]

================================

Block 0x5b7
[0x5b7:0x5f7]
---
Predecessors: [0x5a6]
Successors: [0x5f8, 0x5fc]
---
0x5b7 JUMPDEST
0x5b8 POP
0x5b9 POP
0x5ba POP
0x5bb CALLER
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 PUSH2 0x8fc
0x5d5 DUP3
0x5d6 CALLVALUE
0x5d7 SUB
0x5d8 SWAP1
0x5d9 DUP2
0x5da ISZERO
0x5db MUL
0x5dc SWAP1
0x5dd PUSH1 0x40
0x5df MLOAD
0x5e0 PUSH1 0x0
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 DUP1
0x5e6 DUP4
0x5e7 SUB
0x5e8 DUP2
0x5e9 DUP6
0x5ea DUP9
0x5eb DUP9
0x5ec CALL
0x5ed SWAP4
0x5ee POP
0x5ef POP
0x5f0 POP
0x5f1 POP
0x5f2 ISZERO
0x5f3 ISZERO
0x5f4 PUSH2 0x5fc
0x5f7 JUMPI
---
0x5b7: JUMPDEST 
0x5bb: V400 = CALLER
0x5bc: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x5d2: V403 = 0x8fc
0x5d6: V404 = CALLVALUE
0x5d7: V405 = SUB V404 V328
0x5da: V406 = ISZERO V405
0x5db: V407 = MUL V406 0x8fc
0x5dd: V408 = 0x40
0x5df: V409 = M[0x40]
0x5e0: V410 = 0x0
0x5e2: V411 = 0x40
0x5e4: V412 = M[0x40]
0x5e7: V413 = SUB V409 V412
0x5ec: V414 = CALL V407 V402 V405 V412 V413 V412 0x0
0x5f2: V415 = ISZERO V414
0x5f3: V416 = ISZERO V415
0x5f4: V417 = 0x5fc
0x5f7: JUMPI 0x5fc V416
---
Entry stack: [V10, 0x6bd, V175, V190, V328, V361, 0xa9059cbb, V381]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x6bd, V175, V190, V328]

================================

Block 0x5f8
[0x5f8:0x5fb]
---
Predecessors: [0x5b7]
Successors: []
---
0x5f8 PUSH1 0x0
0x5fa DUP1
0x5fb REVERT
---
0x5f8: V418 = 0x0
0x5fb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6bd, V175, V190, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, V328]

================================

Block 0x5fc
[0x5fc:0x631]
---
Predecessors: [0x5b7]
Successors: [0x632]
---
0x5fc JUMPDEST
0x5fd PUSH1 0x7
0x5ff SLOAD
0x600 PUSH1 0x6
0x602 PUSH1 0x0
0x604 DUP3
0x605 DUP3
0x606 SLOAD
0x607 ADD
0x608 SWAP3
0x609 POP
0x60a POP
0x60b DUP2
0x60c SWAP1
0x60d SSTORE
0x60e POP
0x60f PUSH1 0x0
0x611 PUSH1 0x7
0x613 DUP2
0x614 SWAP1
0x615 SSTORE
0x616 POP
0x617 PUSH1 0x1
0x619 PUSH1 0x8
0x61b PUSH1 0x0
0x61d PUSH2 0x100
0x620 EXP
0x621 DUP2
0x622 SLOAD
0x623 DUP2
0x624 PUSH1 0xff
0x626 MUL
0x627 NOT
0x628 AND
0x629 SWAP1
0x62a DUP4
0x62b ISZERO
0x62c ISZERO
0x62d MUL
0x62e OR
0x62f SWAP1
0x630 SSTORE
0x631 POP
---
0x5fc: JUMPDEST 
0x5fd: V419 = 0x7
0x5ff: V420 = S[0x7]
0x600: V421 = 0x6
0x602: V422 = 0x0
0x606: V423 = S[0x6]
0x607: V424 = ADD V423 V420
0x60d: S[0x6] = V424
0x60f: V425 = 0x0
0x611: V426 = 0x7
0x615: S[0x7] = 0x0
0x617: V427 = 0x1
0x619: V428 = 0x8
0x61b: V429 = 0x0
0x61d: V430 = 0x100
0x620: V431 = EXP 0x100 0x0
0x622: V432 = S[0x8]
0x624: V433 = 0xff
0x626: V434 = MUL 0xff 0x1
0x627: V435 = NOT 0xff
0x628: V436 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V432
0x62b: V437 = ISZERO 0x1
0x62c: V438 = ISZERO 0x0
0x62d: V439 = MUL 0x1 0x1
0x62e: V440 = OR 0x1 V436
0x630: S[0x8] = V440
---
Entry stack: [V10, 0x6bd, V175, V190, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, V328]

================================

Block 0x632
[0x632:0x632]
---
Predecessors: [0x464, 0x5fc]
Successors: [0x633]
---
0x632 JUMPDEST
---
0x632: JUMPDEST 
---
Entry stack: [V10, 0x6bd, V175, V190, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, V175, V190, S0]

================================

Block 0x633
[0x633:0x633]
---
Predecessors: [0x252, 0x632]
Successors: [0x634]
---
0x633 JUMPDEST
---
0x633: JUMPDEST 
---
Entry stack: [V10, 0x6bd, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, S2, S1, S0]

================================

Block 0x634
[0x634:0x6b7]
---
Predecessors: [0x1dd, 0x633]
Successors: [0x6b8]
---
0x634 JUMPDEST
0x635 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x656 PUSH1 0x7
0x658 SLOAD
0x659 PUSH1 0x40
0x65b MLOAD
0x65c DUP1
0x65d DUP3
0x65e DUP2
0x65f MSTORE
0x660 PUSH1 0x20
0x662 ADD
0x663 SWAP2
0x664 POP
0x665 POP
0x666 PUSH1 0x40
0x668 MLOAD
0x669 DUP1
0x66a SWAP2
0x66b SUB
0x66c SWAP1
0x66d LOG1
0x66e PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x68f PUSH1 0x8
0x691 PUSH1 0x0
0x693 SWAP1
0x694 SLOAD
0x695 SWAP1
0x696 PUSH2 0x100
0x699 EXP
0x69a SWAP1
0x69b DIV
0x69c PUSH1 0xff
0x69e AND
0x69f PUSH1 0x40
0x6a1 MLOAD
0x6a2 DUP1
0x6a3 DUP3
0x6a4 ISZERO
0x6a5 ISZERO
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 DUP2
0x6a9 MSTORE
0x6aa PUSH1 0x20
0x6ac ADD
0x6ad SWAP2
0x6ae POP
0x6af POP
0x6b0 PUSH1 0x40
0x6b2 MLOAD
0x6b3 DUP1
0x6b4 SWAP2
0x6b5 SUB
0x6b6 SWAP1
0x6b7 LOG1
---
0x634: JUMPDEST 
0x635: V441 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x656: V442 = 0x7
0x658: V443 = S[0x7]
0x659: V444 = 0x40
0x65b: V445 = M[0x40]
0x65f: M[V445] = V443
0x660: V446 = 0x20
0x662: V447 = ADD 0x20 V445
0x666: V448 = 0x40
0x668: V449 = M[0x40]
0x66b: V450 = SUB V447 V449
0x66d: LOG V449 V450 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x66e: V451 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x68f: V452 = 0x8
0x691: V453 = 0x0
0x694: V454 = S[0x8]
0x696: V455 = 0x100
0x699: V456 = EXP 0x100 0x0
0x69b: V457 = DIV V454 0x1
0x69c: V458 = 0xff
0x69e: V459 = AND 0xff V457
0x69f: V460 = 0x40
0x6a1: V461 = M[0x40]
0x6a4: V462 = ISZERO V459
0x6a5: V463 = ISZERO V462
0x6a6: V464 = ISZERO V463
0x6a7: V465 = ISZERO V464
0x6a9: M[V461] = V465
0x6aa: V466 = 0x20
0x6ac: V467 = ADD 0x20 V461
0x6b0: V468 = 0x40
0x6b2: V469 = M[0x40]
0x6b5: V470 = SUB V467 V469
0x6b7: LOG V469 V470 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V10, 0x6bd, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6bd, S2, S1, S0]

================================

Block 0x6b8
[0x6b8:0x6bc]
---
Predecessors: [0x634]
Successors: [0x6bd]
---
0x6b8 JUMPDEST
0x6b9 POP
0x6ba POP
0x6bb POP
0x6bc JUMP
---
0x6b8: JUMPDEST 
0x6bc: JUMP 0x6bd
---
Entry stack: [V10, 0x6bd, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x6bd
[0x6bd:0x6be]
---
Predecessors: [0x6b8]
Successors: []
---
0x6bd JUMPDEST
0x6be STOP
---
0x6bd: JUMPDEST 
0x6be: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6bf
[0x6bf:0x6c5]
---
Predecessors: [0xb]
Successors: [0x6c6, 0x6ca]
---
0x6bf JUMPDEST
0x6c0 CALLVALUE
0x6c1 ISZERO
0x6c2 PUSH2 0x6ca
0x6c5 JUMPI
---
0x6bf: JUMPDEST 
0x6c0: V471 = CALLVALUE
0x6c1: V472 = ISZERO V471
0x6c2: V473 = 0x6ca
0x6c5: JUMPI 0x6ca V472
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6c6
[0x6c6:0x6c9]
---
Predecessors: [0x6bf]
Successors: []
---
0x6c6 PUSH1 0x0
0x6c8 DUP1
0x6c9 REVERT
---
0x6c6: V474 = 0x0
0x6c9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6ca
[0x6ca:0x6d1]
---
Predecessors: [0x6bf]
Successors: [0x8a1]
---
0x6ca JUMPDEST
0x6cb PUSH2 0x6d2
0x6ce PUSH2 0x8a1
0x6d1 JUMP
---
0x6ca: JUMPDEST 
0x6cb: V475 = 0x6d2
0x6ce: V476 = 0x8a1
0x6d1: JUMP 0x8a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6d2]
Exit stack: [V10, 0x6d2]

================================

Block 0x6d2
[0x6d2:0x6d3]
---
Predecessors: [0xb13]
Successors: []
---
0x6d2 JUMPDEST
0x6d3 STOP
---
0x6d2: JUMPDEST 
0x6d3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d4
[0x6d4:0x6da]
---
Predecessors: [0x3f]
Successors: [0x6db, 0x6df]
---
0x6d4 JUMPDEST
0x6d5 CALLVALUE
0x6d6 ISZERO
0x6d7 PUSH2 0x6df
0x6da JUMPI
---
0x6d4: JUMPDEST 
0x6d5: V477 = CALLVALUE
0x6d6: V478 = ISZERO V477
0x6d7: V479 = 0x6df
0x6da: JUMPI 0x6df V478
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6db
[0x6db:0x6de]
---
Predecessors: [0x6d4]
Successors: []
---
0x6db PUSH1 0x0
0x6dd DUP1
0x6de REVERT
---
0x6db: V480 = 0x0
0x6de: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6df
[0x6df:0x6e6]
---
Predecessors: [0x6d4]
Successors: [0xb15]
---
0x6df JUMPDEST
0x6e0 PUSH2 0x6e7
0x6e3 PUSH2 0xb15
0x6e6 JUMP
---
0x6df: JUMPDEST 
0x6e0: V481 = 0x6e7
0x6e3: V482 = 0xb15
0x6e6: JUMP 0xb15
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6e7]
Exit stack: [V10, 0x6e7]

================================

Block 0x6e7
[0x6e7:0x728]
---
Predecessors: [0xb15]
Successors: []
---
0x6e7 JUMPDEST
0x6e8 PUSH1 0x40
0x6ea MLOAD
0x6eb DUP1
0x6ec DUP3
0x6ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x702 AND
0x703 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x718 AND
0x719 DUP2
0x71a MSTORE
0x71b PUSH1 0x20
0x71d ADD
0x71e SWAP2
0x71f POP
0x720 POP
0x721 PUSH1 0x40
0x723 MLOAD
0x724 DUP1
0x725 SWAP2
0x726 SUB
0x727 SWAP1
0x728 RETURN
---
0x6e7: JUMPDEST 
0x6e8: V483 = 0x40
0x6ea: V484 = M[0x40]
0x6ed: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x702: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V761
0x703: V487 = 0xffffffffffffffffffffffffffffffffffffffff
0x718: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x71a: M[V484] = V488
0x71b: V489 = 0x20
0x71d: V490 = ADD 0x20 V484
0x721: V491 = 0x40
0x723: V492 = M[0x40]
0x726: V493 = SUB V490 V492
0x728: RETURN V492 V493
---
Entry stack: [V10, 0x6e7, V761]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x6e7]

================================

Block 0x729
[0x729:0x72f]
---
Predecessors: [0x4a]
Successors: [0x730, 0x734]
---
0x729 JUMPDEST
0x72a CALLVALUE
0x72b ISZERO
0x72c PUSH2 0x734
0x72f JUMPI
---
0x729: JUMPDEST 
0x72a: V494 = CALLVALUE
0x72b: V495 = ISZERO V494
0x72c: V496 = 0x734
0x72f: JUMPI 0x734 V495
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x730
[0x730:0x733]
---
Predecessors: [0x729]
Successors: []
---
0x730 PUSH1 0x0
0x732 DUP1
0x733 REVERT
---
0x730: V497 = 0x0
0x733: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x734
[0x734:0x73b]
---
Predecessors: [0x729]
Successors: [0xb3a]
---
0x734 JUMPDEST
0x735 PUSH2 0x73c
0x738 PUSH2 0xb3a
0x73b JUMP
---
0x734: JUMPDEST 
0x735: V498 = 0x73c
0x738: V499 = 0xb3a
0x73b: JUMP 0xb3a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x73c]
Exit stack: [V10, 0x73c]

================================

Block 0x73c
[0x73c:0x751]
---
Predecessors: [0xb3a]
Successors: []
---
0x73c JUMPDEST
0x73d PUSH1 0x40
0x73f MLOAD
0x740 DUP1
0x741 DUP3
0x742 DUP2
0x743 MSTORE
0x744 PUSH1 0x20
0x746 ADD
0x747 SWAP2
0x748 POP
0x749 POP
0x74a PUSH1 0x40
0x74c MLOAD
0x74d DUP1
0x74e SWAP2
0x74f SUB
0x750 SWAP1
0x751 RETURN
---
0x73c: JUMPDEST 
0x73d: V500 = 0x40
0x73f: V501 = M[0x40]
0x743: M[V501] = V763
0x744: V502 = 0x20
0x746: V503 = ADD 0x20 V501
0x74a: V504 = 0x40
0x74c: V505 = M[0x40]
0x74f: V506 = SUB V503 V505
0x751: RETURN V505 V506
---
Entry stack: [V10, 0x73c, V763]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x73c]

================================

Block 0x752
[0x752:0x758]
---
Predecessors: [0x55]
Successors: [0x759, 0x75d]
---
0x752 JUMPDEST
0x753 CALLVALUE
0x754 ISZERO
0x755 PUSH2 0x75d
0x758 JUMPI
---
0x752: JUMPDEST 
0x753: V507 = CALLVALUE
0x754: V508 = ISZERO V507
0x755: V509 = 0x75d
0x758: JUMPI 0x75d V508
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x759
[0x759:0x75c]
---
Predecessors: [0x752]
Successors: []
---
0x759 PUSH1 0x0
0x75b DUP1
0x75c REVERT
---
0x759: V510 = 0x0
0x75c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x75d
[0x75d:0x764]
---
Predecessors: [0x752]
Successors: [0xb40]
---
0x75d JUMPDEST
0x75e PUSH2 0x765
0x761 PUSH2 0xb40
0x764 JUMP
---
0x75d: JUMPDEST 
0x75e: V511 = 0x765
0x761: V512 = 0xb40
0x764: JUMP 0xb40
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x765]
Exit stack: [V10, 0x765]

================================

Block 0x765
[0x765:0x77a]
---
Predecessors: [0xb40]
Successors: []
---
0x765 JUMPDEST
0x766 PUSH1 0x40
0x768 MLOAD
0x769 DUP1
0x76a DUP3
0x76b DUP2
0x76c MSTORE
0x76d PUSH1 0x20
0x76f ADD
0x770 SWAP2
0x771 POP
0x772 POP
0x773 PUSH1 0x40
0x775 MLOAD
0x776 DUP1
0x777 SWAP2
0x778 SUB
0x779 SWAP1
0x77a RETURN
---
0x765: JUMPDEST 
0x766: V513 = 0x40
0x768: V514 = M[0x40]
0x76c: M[V514] = V765
0x76d: V515 = 0x20
0x76f: V516 = ADD 0x20 V514
0x773: V517 = 0x40
0x775: V518 = M[0x40]
0x778: V519 = SUB V516 V518
0x77a: RETURN V518 V519
---
Entry stack: [V10, 0x765, V765]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x765]

================================

Block 0x77b
[0x77b:0x781]
---
Predecessors: [0x60]
Successors: [0x782, 0x786]
---
0x77b JUMPDEST
0x77c CALLVALUE
0x77d ISZERO
0x77e PUSH2 0x786
0x781 JUMPI
---
0x77b: JUMPDEST 
0x77c: V520 = CALLVALUE
0x77d: V521 = ISZERO V520
0x77e: V522 = 0x786
0x781: JUMPI 0x786 V521
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x782
[0x782:0x785]
---
Predecessors: [0x77b]
Successors: []
---
0x782 PUSH1 0x0
0x784 DUP1
0x785 REVERT
---
0x782: V523 = 0x0
0x785: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x786
[0x786:0x78d]
---
Predecessors: [0x77b]
Successors: [0xb46]
---
0x786 JUMPDEST
0x787 PUSH2 0x78e
0x78a PUSH2 0xb46
0x78d JUMP
---
0x786: JUMPDEST 
0x787: V524 = 0x78e
0x78a: V525 = 0xb46
0x78d: JUMP 0xb46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e]
Exit stack: [V10, 0x78e]

================================

Block 0x78e
[0x78e:0x7cf]
---
Predecessors: [0xb46]
Successors: []
---
0x78e JUMPDEST
0x78f PUSH1 0x40
0x791 MLOAD
0x792 DUP1
0x793 DUP3
0x794 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a9 AND
0x7aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bf AND
0x7c0 DUP2
0x7c1 MSTORE
0x7c2 PUSH1 0x20
0x7c4 ADD
0x7c5 SWAP2
0x7c6 POP
0x7c7 POP
0x7c8 PUSH1 0x40
0x7ca MLOAD
0x7cb DUP1
0x7cc SWAP2
0x7cd SUB
0x7ce SWAP1
0x7cf RETURN
---
0x78e: JUMPDEST 
0x78f: V526 = 0x40
0x791: V527 = M[0x40]
0x794: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a9: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0x7aa: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bf: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x7c1: M[V527] = V531
0x7c2: V532 = 0x20
0x7c4: V533 = ADD 0x20 V527
0x7c8: V534 = 0x40
0x7ca: V535 = M[0x40]
0x7cd: V536 = SUB V533 V535
0x7cf: RETURN V535 V536
---
Entry stack: [V10, 0x78e, V773]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x78e]

================================

Block 0x7d0
[0x7d0:0x7d6]
---
Predecessors: [0x6b]
Successors: [0x7d7, 0x7db]
---
0x7d0 JUMPDEST
0x7d1 CALLVALUE
0x7d2 ISZERO
0x7d3 PUSH2 0x7db
0x7d6 JUMPI
---
0x7d0: JUMPDEST 
0x7d1: V537 = CALLVALUE
0x7d2: V538 = ISZERO V537
0x7d3: V539 = 0x7db
0x7d6: JUMPI 0x7db V538
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7d7
[0x7d7:0x7da]
---
Predecessors: [0x7d0]
Successors: []
---
0x7d7 PUSH1 0x0
0x7d9 DUP1
0x7da REVERT
---
0x7d7: V540 = 0x0
0x7da: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7db
[0x7db:0x7e2]
---
Predecessors: [0x7d0]
Successors: [0xb6c]
---
0x7db JUMPDEST
0x7dc PUSH2 0x7e3
0x7df PUSH2 0xb6c
0x7e2 JUMP
---
0x7db: JUMPDEST 
0x7dc: V541 = 0x7e3
0x7df: V542 = 0xb6c
0x7e2: JUMP 0xb6c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7e3]
Exit stack: [V10, 0x7e3]

================================

Block 0x7e3
[0x7e3:0x7f8]
---
Predecessors: [0xb6c]
Successors: []
---
0x7e3 JUMPDEST
0x7e4 PUSH1 0x40
0x7e6 MLOAD
0x7e7 DUP1
0x7e8 DUP3
0x7e9 DUP2
0x7ea MSTORE
0x7eb PUSH1 0x20
0x7ed ADD
0x7ee SWAP2
0x7ef POP
0x7f0 POP
0x7f1 PUSH1 0x40
0x7f3 MLOAD
0x7f4 DUP1
0x7f5 SWAP2
0x7f6 SUB
0x7f7 SWAP1
0x7f8 RETURN
---
0x7e3: JUMPDEST 
0x7e4: V543 = 0x40
0x7e6: V544 = M[0x40]
0x7ea: M[V544] = V775
0x7eb: V545 = 0x20
0x7ed: V546 = ADD 0x20 V544
0x7f1: V547 = 0x40
0x7f3: V548 = M[0x40]
0x7f6: V549 = SUB V546 V548
0x7f8: RETURN V548 V549
---
Entry stack: [V10, 0x7e3, V775]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7e3]

================================

Block 0x7f9
[0x7f9:0x7ff]
---
Predecessors: [0x76]
Successors: [0x800, 0x804]
---
0x7f9 JUMPDEST
0x7fa CALLVALUE
0x7fb ISZERO
0x7fc PUSH2 0x804
0x7ff JUMPI
---
0x7f9: JUMPDEST 
0x7fa: V550 = CALLVALUE
0x7fb: V551 = ISZERO V550
0x7fc: V552 = 0x804
0x7ff: JUMPI 0x804 V551
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x800
[0x800:0x803]
---
Predecessors: [0x7f9]
Successors: []
---
0x800 PUSH1 0x0
0x802 DUP1
0x803 REVERT
---
0x800: V553 = 0x0
0x803: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x804
[0x804:0x80b]
---
Predecessors: [0x7f9]
Successors: [0xb72]
---
0x804 JUMPDEST
0x805 PUSH2 0x80c
0x808 PUSH2 0xb72
0x80b JUMP
---
0x804: JUMPDEST 
0x805: V554 = 0x80c
0x808: V555 = 0xb72
0x80b: JUMP 0xb72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x80c]
Exit stack: [V10, 0x80c]

================================

Block 0x80c
[0x80c:0x821]
---
Predecessors: [0xb72]
Successors: []
---
0x80c JUMPDEST
0x80d PUSH1 0x40
0x80f MLOAD
0x810 DUP1
0x811 DUP3
0x812 DUP2
0x813 MSTORE
0x814 PUSH1 0x20
0x816 ADD
0x817 SWAP2
0x818 POP
0x819 POP
0x81a PUSH1 0x40
0x81c MLOAD
0x81d DUP1
0x81e SWAP2
0x81f SUB
0x820 SWAP1
0x821 RETURN
---
0x80c: JUMPDEST 
0x80d: V556 = 0x40
0x80f: V557 = M[0x40]
0x813: M[V557] = V777
0x814: V558 = 0x20
0x816: V559 = ADD 0x20 V557
0x81a: V560 = 0x40
0x81c: V561 = M[0x40]
0x81f: V562 = SUB V559 V561
0x821: RETURN V561 V562
---
Entry stack: [V10, 0x80c, V777]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x80c]

================================

Block 0x822
[0x822:0x828]
---
Predecessors: [0x81]
Successors: [0x829, 0x82d]
---
0x822 JUMPDEST
0x823 CALLVALUE
0x824 ISZERO
0x825 PUSH2 0x82d
0x828 JUMPI
---
0x822: JUMPDEST 
0x823: V563 = CALLVALUE
0x824: V564 = ISZERO V563
0x825: V565 = 0x82d
0x828: JUMPI 0x82d V564
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x829
[0x829:0x82c]
---
Predecessors: [0x822]
Successors: []
---
0x829 PUSH1 0x0
0x82b DUP1
0x82c REVERT
---
0x829: V566 = 0x0
0x82c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x82d
[0x82d:0x834]
---
Predecessors: [0x822]
Successors: [0xb78]
---
0x82d JUMPDEST
0x82e PUSH2 0x835
0x831 PUSH2 0xb78
0x834 JUMP
---
0x82d: JUMPDEST 
0x82e: V567 = 0x835
0x831: V568 = 0xb78
0x834: JUMP 0xb78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x835]
Exit stack: [V10, 0x835]

================================

Block 0x835
[0x835:0x84a]
---
Predecessors: [0xb78]
Successors: []
---
0x835 JUMPDEST
0x836 PUSH1 0x40
0x838 MLOAD
0x839 DUP1
0x83a DUP3
0x83b DUP2
0x83c MSTORE
0x83d PUSH1 0x20
0x83f ADD
0x840 SWAP2
0x841 POP
0x842 POP
0x843 PUSH1 0x40
0x845 MLOAD
0x846 DUP1
0x847 SWAP2
0x848 SUB
0x849 SWAP1
0x84a RETURN
---
0x835: JUMPDEST 
0x836: V569 = 0x40
0x838: V570 = M[0x40]
0x83c: M[V570] = V779
0x83d: V571 = 0x20
0x83f: V572 = ADD 0x20 V570
0x843: V573 = 0x40
0x845: V574 = M[0x40]
0x848: V575 = SUB V572 V574
0x84a: RETURN V574 V575
---
Entry stack: [V10, 0x835, V779]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x835]

================================

Block 0x84b
[0x84b:0x851]
---
Predecessors: [0x8c]
Successors: [0x852, 0x856]
---
0x84b JUMPDEST
0x84c CALLVALUE
0x84d ISZERO
0x84e PUSH2 0x856
0x851 JUMPI
---
0x84b: JUMPDEST 
0x84c: V576 = CALLVALUE
0x84d: V577 = ISZERO V576
0x84e: V578 = 0x856
0x851: JUMPI 0x856 V577
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x852
[0x852:0x855]
---
Predecessors: [0x84b]
Successors: []
---
0x852 PUSH1 0x0
0x854 DUP1
0x855 REVERT
---
0x852: V579 = 0x0
0x855: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x856
[0x856:0x85d]
---
Predecessors: [0x84b]
Successors: [0xb7e]
---
0x856 JUMPDEST
0x857 PUSH2 0x85e
0x85a PUSH2 0xb7e
0x85d JUMP
---
0x856: JUMPDEST 
0x857: V580 = 0x85e
0x85a: V581 = 0xb7e
0x85d: JUMP 0xb7e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x85e]
Exit stack: [V10, 0x85e]

================================

Block 0x85e
[0x85e:0x873]
---
Predecessors: [0xb7e]
Successors: []
---
0x85e JUMPDEST
0x85f PUSH1 0x40
0x861 MLOAD
0x862 DUP1
0x863 DUP3
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x20
0x868 ADD
0x869 SWAP2
0x86a POP
0x86b POP
0x86c PUSH1 0x40
0x86e MLOAD
0x86f DUP1
0x870 SWAP2
0x871 SUB
0x872 SWAP1
0x873 RETURN
---
0x85e: JUMPDEST 
0x85f: V582 = 0x40
0x861: V583 = M[0x40]
0x865: M[V583] = V781
0x866: V584 = 0x20
0x868: V585 = ADD 0x20 V583
0x86c: V586 = 0x40
0x86e: V587 = M[0x40]
0x871: V588 = SUB V585 V587
0x873: RETURN V587 V588
---
Entry stack: [V10, 0x85e, V781]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x85e]

================================

Block 0x874
[0x874:0x87a]
---
Predecessors: [0x97]
Successors: [0x87b, 0x87f]
---
0x874 JUMPDEST
0x875 CALLVALUE
0x876 ISZERO
0x877 PUSH2 0x87f
0x87a JUMPI
---
0x874: JUMPDEST 
0x875: V589 = CALLVALUE
0x876: V590 = ISZERO V589
0x877: V591 = 0x87f
0x87a: JUMPI 0x87f V590
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x87b
[0x87b:0x87e]
---
Predecessors: [0x874]
Successors: []
---
0x87b PUSH1 0x0
0x87d DUP1
0x87e REVERT
---
0x87b: V592 = 0x0
0x87e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x87f
[0x87f:0x886]
---
Predecessors: [0x874]
Successors: [0xb84]
---
0x87f JUMPDEST
0x880 PUSH2 0x887
0x883 PUSH2 0xb84
0x886 JUMP
---
0x87f: JUMPDEST 
0x880: V593 = 0x887
0x883: V594 = 0xb84
0x886: JUMP 0xb84
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x887]
Exit stack: [V10, 0x887]

================================

Block 0x887
[0x887:0x8a0]
---
Predecessors: [0xb84]
Successors: []
---
0x887 JUMPDEST
0x888 PUSH1 0x40
0x88a MLOAD
0x88b DUP1
0x88c DUP3
0x88d ISZERO
0x88e ISZERO
0x88f ISZERO
0x890 ISZERO
0x891 DUP2
0x892 MSTORE
0x893 PUSH1 0x20
0x895 ADD
0x896 SWAP2
0x897 POP
0x898 POP
0x899 PUSH1 0x40
0x89b MLOAD
0x89c DUP1
0x89d SWAP2
0x89e SUB
0x89f SWAP1
0x8a0 RETURN
---
0x887: JUMPDEST 
0x888: V595 = 0x40
0x88a: V596 = M[0x40]
0x88d: V597 = ISZERO V789
0x88e: V598 = ISZERO V597
0x88f: V599 = ISZERO V598
0x890: V600 = ISZERO V599
0x892: M[V596] = V600
0x893: V601 = 0x20
0x895: V602 = ADD 0x20 V596
0x899: V603 = 0x40
0x89b: V604 = M[0x40]
0x89e: V605 = SUB V602 V604
0x8a0: RETURN V604 V605
---
Entry stack: [V10, 0x887, V789]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x887]

================================

Block 0x8a1
[0x8a1:0x8b7]
---
Predecessors: [0x6ca]
Successors: [0x8b8, 0x8bc]
---
0x8a1 JUMPDEST
0x8a2 PUSH1 0x8
0x8a4 PUSH1 0x0
0x8a6 SWAP1
0x8a7 SLOAD
0x8a8 SWAP1
0x8a9 PUSH2 0x100
0x8ac EXP
0x8ad SWAP1
0x8ae DIV
0x8af PUSH1 0xff
0x8b1 AND
0x8b2 ISZERO
0x8b3 ISZERO
0x8b4 PUSH2 0x8bc
0x8b7 JUMPI
---
0x8a1: JUMPDEST 
0x8a2: V606 = 0x8
0x8a4: V607 = 0x0
0x8a7: V608 = S[0x8]
0x8a9: V609 = 0x100
0x8ac: V610 = EXP 0x100 0x0
0x8ae: V611 = DIV V608 0x1
0x8af: V612 = 0xff
0x8b1: V613 = AND 0xff V611
0x8b2: V614 = ISZERO V613
0x8b3: V615 = ISZERO V614
0x8b4: V616 = 0x8bc
0x8b7: JUMPI 0x8bc V615
---
Entry stack: [V10, 0x6d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2]

================================

Block 0x8b8
[0x8b8:0x8bb]
---
Predecessors: [0x8a1]
Successors: []
---
0x8b8 PUSH1 0x0
0x8ba DUP1
0x8bb REVERT
---
0x8b8: V617 = 0x0
0x8bb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2]

================================

Block 0x8bc
[0x8bc:0x913]
---
Predecessors: [0x8a1]
Successors: [0x914, 0x918]
---
0x8bc JUMPDEST
0x8bd PUSH1 0x8
0x8bf PUSH1 0x1
0x8c1 SWAP1
0x8c2 SLOAD
0x8c3 SWAP1
0x8c4 PUSH2 0x100
0x8c7 EXP
0x8c8 SWAP1
0x8c9 DIV
0x8ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8df AND
0x8e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f5 AND
0x8f6 CALLER
0x8f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90c AND
0x90d EQ
0x90e ISZERO
0x90f ISZERO
0x910 PUSH2 0x918
0x913 JUMPI
---
0x8bc: JUMPDEST 
0x8bd: V618 = 0x8
0x8bf: V619 = 0x1
0x8c2: V620 = S[0x8]
0x8c4: V621 = 0x100
0x8c7: V622 = EXP 0x100 0x1
0x8c9: V623 = DIV V620 0x100
0x8ca: V624 = 0xffffffffffffffffffffffffffffffffffffffff
0x8df: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x8e0: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f5: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x8f6: V628 = CALLER
0x8f7: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0x90c: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x90d: V631 = EQ V630 V627
0x90e: V632 = ISZERO V631
0x90f: V633 = ISZERO V632
0x910: V634 = 0x918
0x913: JUMPI 0x918 V633
---
Entry stack: [V10, 0x6d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2]

================================

Block 0x914
[0x914:0x917]
---
Predecessors: [0x8bc]
Successors: []
---
0x914 PUSH1 0x0
0x916 DUP1
0x917 REVERT
---
0x914: V635 = 0x0
0x917: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6d2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2]

================================

Block 0x918
[0x918:0xa37]
---
Predecessors: [0x8bc]
Successors: [0xa38, 0xa3c]
---
0x918 JUMPDEST
0x919 PUSH1 0x0
0x91b DUP1
0x91c SWAP1
0x91d SLOAD
0x91e SWAP1
0x91f PUSH2 0x100
0x922 EXP
0x923 SWAP1
0x924 DIV
0x925 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93a AND
0x93b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x950 AND
0x951 PUSH4 0xa9059cbb
0x956 PUSH1 0x8
0x958 PUSH1 0x1
0x95a SWAP1
0x95b SLOAD
0x95c SWAP1
0x95d PUSH2 0x100
0x960 EXP
0x961 SWAP1
0x962 DIV
0x963 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x978 AND
0x979 PUSH1 0x0
0x97b DUP1
0x97c SWAP1
0x97d SLOAD
0x97e SWAP1
0x97f PUSH2 0x100
0x982 EXP
0x983 SWAP1
0x984 DIV
0x985 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99a AND
0x99b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b0 AND
0x9b1 PUSH4 0x70a08231
0x9b6 ADDRESS
0x9b7 PUSH1 0x0
0x9b9 PUSH1 0x40
0x9bb MLOAD
0x9bc PUSH1 0x20
0x9be ADD
0x9bf MSTORE
0x9c0 PUSH1 0x40
0x9c2 MLOAD
0x9c3 DUP3
0x9c4 PUSH4 0xffffffff
0x9c9 AND
0x9ca PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9e8 MUL
0x9e9 DUP2
0x9ea MSTORE
0x9eb PUSH1 0x4
0x9ed ADD
0x9ee DUP1
0x9ef DUP3
0x9f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa05 AND
0xa06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1b AND
0xa1c DUP2
0xa1d MSTORE
0xa1e PUSH1 0x20
0xa20 ADD
0xa21 SWAP2
0xa22 POP
0xa23 POP
0xa24 PUSH1 0x20
0xa26 PUSH1 0x40
0xa28 MLOAD
0xa29 DUP1
0xa2a DUP4
0xa2b SUB
0xa2c DUP2
0xa2d PUSH1 0x0
0xa2f DUP8
0xa30 DUP1
0xa31 EXTCODESIZE
0xa32 ISZERO
0xa33 ISZERO
0xa34 PUSH2 0xa3c
0xa37 JUMPI
---
0x918: JUMPDEST 
0x919: V636 = 0x0
0x91d: V637 = S[0x0]
0x91f: V638 = 0x100
0x922: V639 = EXP 0x100 0x0
0x924: V640 = DIV V637 0x1
0x925: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0x93a: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x93b: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0x950: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x951: V645 = 0xa9059cbb
0x956: V646 = 0x8
0x958: V647 = 0x1
0x95b: V648 = S[0x8]
0x95d: V649 = 0x100
0x960: V650 = EXP 0x100 0x1
0x962: V651 = DIV V648 0x100
0x963: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0x978: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x979: V654 = 0x0
0x97d: V655 = S[0x0]
0x97f: V656 = 0x100
0x982: V657 = EXP 0x100 0x0
0x984: V658 = DIV V655 0x1
0x985: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0x99a: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x99b: V661 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b0: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x9b1: V663 = 0x70a08231
0x9b6: V664 = ADDRESS
0x9b7: V665 = 0x0
0x9b9: V666 = 0x40
0x9bb: V667 = M[0x40]
0x9bc: V668 = 0x20
0x9be: V669 = ADD 0x20 V667
0x9bf: M[V669] = 0x0
0x9c0: V670 = 0x40
0x9c2: V671 = M[0x40]
0x9c4: V672 = 0xffffffff
0x9c9: V673 = AND 0xffffffff 0x70a08231
0x9ca: V674 = 0x100000000000000000000000000000000000000000000000000000000
0x9e8: V675 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x9ea: M[V671] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9eb: V676 = 0x4
0x9ed: V677 = ADD 0x4 V671
0x9f0: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa05: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xa06: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xa1d: M[V677] = V681
0xa1e: V682 = 0x20
0xa20: V683 = ADD 0x20 V677
0xa24: V684 = 0x20
0xa26: V685 = 0x40
0xa28: V686 = M[0x40]
0xa2b: V687 = SUB V683 V686
0xa2d: V688 = 0x0
0xa31: V689 = EXTCODESIZE V662
0xa32: V690 = ISZERO V689
0xa33: V691 = ISZERO V690
0xa34: V692 = 0xa3c
0xa37: JUMPI 0xa3c V691
---
Entry stack: [V10, 0x6d2]
Stack pops: 0
Stack additions: [V644, 0xa9059cbb, V653, V662, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V662]
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V662]

================================

Block 0xa38
[0xa38:0xa3b]
---
Predecessors: [0x918]
Successors: []
---
0xa38 PUSH1 0x0
0xa3a DUP1
0xa3b REVERT
---
0xa38: V693 = 0x0
0xa3b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V662]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V662]

================================

Block 0xa3c
[0xa3c:0xa48]
---
Predecessors: [0x918]
Successors: [0xa49, 0xa4d]
---
0xa3c JUMPDEST
0xa3d PUSH2 0x2c6
0xa40 GAS
0xa41 SUB
0xa42 CALL
0xa43 ISZERO
0xa44 ISZERO
0xa45 PUSH2 0xa4d
0xa48 JUMPI
---
0xa3c: JUMPDEST 
0xa3d: V694 = 0x2c6
0xa40: V695 = GAS
0xa41: V696 = SUB V695 0x2c6
0xa42: V697 = CALL V696 V662 0x0 V686 V687 V686 0x20
0xa43: V698 = ISZERO V697
0xa44: V699 = ISZERO V698
0xa45: V700 = 0xa4d
0xa48: JUMPI 0xa4d V699
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683, 0x20, V686, V687, V686, 0x0, V662]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683]

================================

Block 0xa49
[0xa49:0xa4c]
---
Predecessors: [0xa3c]
Successors: []
---
0xa49 PUSH1 0x0
0xa4b DUP1
0xa4c REVERT
---
0xa49: V701 = 0x0
0xa4c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683]

================================

Block 0xa4d
[0xa4d:0xad6]
---
Predecessors: [0xa3c]
Successors: [0xad7, 0xadb]
---
0xa4d JUMPDEST
0xa4e POP
0xa4f POP
0xa50 POP
0xa51 PUSH1 0x40
0xa53 MLOAD
0xa54 DUP1
0xa55 MLOAD
0xa56 SWAP1
0xa57 POP
0xa58 PUSH1 0x40
0xa5a MLOAD
0xa5b DUP4
0xa5c PUSH4 0xffffffff
0xa61 AND
0xa62 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa80 MUL
0xa81 DUP2
0xa82 MSTORE
0xa83 PUSH1 0x4
0xa85 ADD
0xa86 DUP1
0xa87 DUP4
0xa88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9d AND
0xa9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab3 AND
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x20
0xab8 ADD
0xab9 DUP3
0xaba DUP2
0xabb MSTORE
0xabc PUSH1 0x20
0xabe ADD
0xabf SWAP3
0xac0 POP
0xac1 POP
0xac2 POP
0xac3 PUSH1 0x0
0xac5 PUSH1 0x40
0xac7 MLOAD
0xac8 DUP1
0xac9 DUP4
0xaca SUB
0xacb DUP2
0xacc PUSH1 0x0
0xace DUP8
0xacf DUP1
0xad0 EXTCODESIZE
0xad1 ISZERO
0xad2 ISZERO
0xad3 PUSH2 0xadb
0xad6 JUMPI
---
0xa4d: JUMPDEST 
0xa51: V702 = 0x40
0xa53: V703 = M[0x40]
0xa55: V704 = M[V703]
0xa58: V705 = 0x40
0xa5a: V706 = M[0x40]
0xa5c: V707 = 0xffffffff
0xa61: V708 = AND 0xffffffff 0xa9059cbb
0xa62: V709 = 0x100000000000000000000000000000000000000000000000000000000
0xa80: V710 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xa82: M[V706] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa83: V711 = 0x4
0xa85: V712 = ADD 0x4 V706
0xa88: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9d: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xa9e: V715 = 0xffffffffffffffffffffffffffffffffffffffff
0xab3: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0xab5: M[V712] = V716
0xab6: V717 = 0x20
0xab8: V718 = ADD 0x20 V712
0xabb: M[V718] = V704
0xabc: V719 = 0x20
0xabe: V720 = ADD 0x20 V718
0xac3: V721 = 0x0
0xac5: V722 = 0x40
0xac7: V723 = M[0x40]
0xaca: V724 = SUB V720 V723
0xacc: V725 = 0x0
0xad0: V726 = EXTCODESIZE V644
0xad1: V727 = ISZERO V726
0xad2: V728 = ISZERO V727
0xad3: V729 = 0xadb
0xad6: JUMPI 0xadb V728
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V653, V662, 0x70a08231, V683]
Stack pops: 6
Stack additions: [S5, S4, V720, 0x0, V723, V724, V723, 0x0, S5]
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V720, 0x0, V723, V724, V723, 0x0, V644]

================================

Block 0xad7
[0xad7:0xada]
---
Predecessors: [0xa4d]
Successors: []
---
0xad7 PUSH1 0x0
0xad9 DUP1
0xada REVERT
---
0xad7: V730 = 0x0
0xada: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V720, 0x0, V723, V724, V723, 0x0, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V720, 0x0, V723, V724, V723, 0x0, V644]

================================

Block 0xadb
[0xadb:0xae7]
---
Predecessors: [0xa4d]
Successors: [0xae8, 0xaec]
---
0xadb JUMPDEST
0xadc PUSH2 0x2c6
0xadf GAS
0xae0 SUB
0xae1 CALL
0xae2 ISZERO
0xae3 ISZERO
0xae4 PUSH2 0xaec
0xae7 JUMPI
---
0xadb: JUMPDEST 
0xadc: V731 = 0x2c6
0xadf: V732 = GAS
0xae0: V733 = SUB V732 0x2c6
0xae1: V734 = CALL V733 V644 0x0 V723 V724 V723 0x0
0xae2: V735 = ISZERO V734
0xae3: V736 = ISZERO V735
0xae4: V737 = 0xaec
0xae7: JUMPI 0xaec V736
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V720, 0x0, V723, V724, V723, 0x0, V644]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V720]

================================

Block 0xae8
[0xae8:0xaeb]
---
Predecessors: [0xadb]
Successors: []
---
0xae8 PUSH1 0x0
0xaea DUP1
0xaeb REVERT
---
0xae8: V738 = 0x0
0xaeb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V720]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6d2, V644, 0xa9059cbb, V720]

================================

Block 0xaec
[0xaec:0xb12]
---
Predecessors: [0xadb]
Successors: [0xb13]
---
0xaec JUMPDEST
0xaed POP
0xaee POP
0xaef POP
0xaf0 PUSH1 0x0
0xaf2 PUSH1 0x7
0xaf4 DUP2
0xaf5 SWAP1
0xaf6 SSTORE
0xaf7 POP
0xaf8 PUSH1 0x1
0xafa PUSH1 0x8
0xafc PUSH1 0x0
0xafe PUSH2 0x100
0xb01 EXP
0xb02 DUP2
0xb03 SLOAD
0xb04 DUP2
0xb05 PUSH1 0xff
0xb07 MUL
0xb08 NOT
0xb09 AND
0xb0a SWAP1
0xb0b DUP4
0xb0c ISZERO
0xb0d ISZERO
0xb0e MUL
0xb0f OR
0xb10 SWAP1
0xb11 SSTORE
0xb12 POP
---
0xaec: JUMPDEST 
0xaf0: V739 = 0x0
0xaf2: V740 = 0x7
0xaf6: S[0x7] = 0x0
0xaf8: V741 = 0x1
0xafa: V742 = 0x8
0xafc: V743 = 0x0
0xafe: V744 = 0x100
0xb01: V745 = EXP 0x100 0x0
0xb03: V746 = S[0x8]
0xb05: V747 = 0xff
0xb07: V748 = MUL 0xff 0x1
0xb08: V749 = NOT 0xff
0xb09: V750 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V746
0xb0c: V751 = ISZERO 0x1
0xb0d: V752 = ISZERO 0x0
0xb0e: V753 = MUL 0x1 0x1
0xb0f: V754 = OR 0x1 V750
0xb11: S[0x8] = V754
---
Entry stack: [V10, 0x6d2, V644, 0xa9059cbb, V720]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x6d2]

================================

Block 0xb13
[0xb13:0xb14]
---
Predecessors: [0xaec]
Successors: [0x6d2]
---
0xb13 JUMPDEST
0xb14 JUMP
---
0xb13: JUMPDEST 
0xb14: JUMP 0x6d2
---
Entry stack: [V10, 0x6d2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xb15
[0xb15:0xb39]
---
Predecessors: [0x6df]
Successors: [0x6e7]
---
0xb15 JUMPDEST
0xb16 PUSH1 0x0
0xb18 DUP1
0xb19 SWAP1
0xb1a SLOAD
0xb1b SWAP1
0xb1c PUSH2 0x100
0xb1f EXP
0xb20 SWAP1
0xb21 DIV
0xb22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb37 AND
0xb38 DUP2
0xb39 JUMP
---
0xb15: JUMPDEST 
0xb16: V755 = 0x0
0xb1a: V756 = S[0x0]
0xb1c: V757 = 0x100
0xb1f: V758 = EXP 0x100 0x0
0xb21: V759 = DIV V756 0x1
0xb22: V760 = 0xffffffffffffffffffffffffffffffffffffffff
0xb37: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V759
0xb39: JUMP 0x6e7
---
Entry stack: [V10, 0x6e7]
Stack pops: 1
Stack additions: [S0, V761]
Exit stack: [V10, 0x6e7, V761]

================================

Block 0xb3a
[0xb3a:0xb3f]
---
Predecessors: [0x734]
Successors: [0x73c]
---
0xb3a JUMPDEST
0xb3b PUSH1 0x6
0xb3d SLOAD
0xb3e DUP2
0xb3f JUMP
---
0xb3a: JUMPDEST 
0xb3b: V762 = 0x6
0xb3d: V763 = S[0x6]
0xb3f: JUMP 0x73c
---
Entry stack: [V10, 0x73c]
Stack pops: 1
Stack additions: [S0, V763]
Exit stack: [V10, 0x73c, V763]

================================

Block 0xb40
[0xb40:0xb45]
---
Predecessors: [0x75d]
Successors: [0x765]
---
0xb40 JUMPDEST
0xb41 PUSH1 0x1
0xb43 SLOAD
0xb44 DUP2
0xb45 JUMP
---
0xb40: JUMPDEST 
0xb41: V764 = 0x1
0xb43: V765 = S[0x1]
0xb45: JUMP 0x765
---
Entry stack: [V10, 0x765]
Stack pops: 1
Stack additions: [S0, V765]
Exit stack: [V10, 0x765, V765]

================================

Block 0xb46
[0xb46:0xb6b]
---
Predecessors: [0x786]
Successors: [0x78e]
---
0xb46 JUMPDEST
0xb47 PUSH1 0x8
0xb49 PUSH1 0x1
0xb4b SWAP1
0xb4c SLOAD
0xb4d SWAP1
0xb4e PUSH2 0x100
0xb51 EXP
0xb52 SWAP1
0xb53 DIV
0xb54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb69 AND
0xb6a DUP2
0xb6b JUMP
---
0xb46: JUMPDEST 
0xb47: V766 = 0x8
0xb49: V767 = 0x1
0xb4c: V768 = S[0x8]
0xb4e: V769 = 0x100
0xb51: V770 = EXP 0x100 0x1
0xb53: V771 = DIV V768 0x100
0xb54: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0xb69: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0xb6b: JUMP 0x78e
---
Entry stack: [V10, 0x78e]
Stack pops: 1
Stack additions: [S0, V773]
Exit stack: [V10, 0x78e, V773]

================================

Block 0xb6c
[0xb6c:0xb71]
---
Predecessors: [0x7db]
Successors: [0x7e3]
---
0xb6c JUMPDEST
0xb6d PUSH1 0x7
0xb6f SLOAD
0xb70 DUP2
0xb71 JUMP
---
0xb6c: JUMPDEST 
0xb6d: V774 = 0x7
0xb6f: V775 = S[0x7]
0xb71: JUMP 0x7e3
---
Entry stack: [V10, 0x7e3]
Stack pops: 1
Stack additions: [S0, V775]
Exit stack: [V10, 0x7e3, V775]

================================

Block 0xb72
[0xb72:0xb77]
---
Predecessors: [0x804]
Successors: [0x80c]
---
0xb72 JUMPDEST
0xb73 PUSH1 0x4
0xb75 SLOAD
0xb76 DUP2
0xb77 JUMP
---
0xb72: JUMPDEST 
0xb73: V776 = 0x4
0xb75: V777 = S[0x4]
0xb77: JUMP 0x80c
---
Entry stack: [V10, 0x80c]
Stack pops: 1
Stack additions: [S0, V777]
Exit stack: [V10, 0x80c, V777]

================================

Block 0xb78
[0xb78:0xb7d]
---
Predecessors: [0x82d]
Successors: [0x835]
---
0xb78 JUMPDEST
0xb79 PUSH1 0x2
0xb7b SLOAD
0xb7c DUP2
0xb7d JUMP
---
0xb78: JUMPDEST 
0xb79: V778 = 0x2
0xb7b: V779 = S[0x2]
0xb7d: JUMP 0x835
---
Entry stack: [V10, 0x835]
Stack pops: 1
Stack additions: [S0, V779]
Exit stack: [V10, 0x835, V779]

================================

Block 0xb7e
[0xb7e:0xb83]
---
Predecessors: [0x856]
Successors: [0x85e]
---
0xb7e JUMPDEST
0xb7f PUSH1 0x3
0xb81 SLOAD
0xb82 DUP2
0xb83 JUMP
---
0xb7e: JUMPDEST 
0xb7f: V780 = 0x3
0xb81: V781 = S[0x3]
0xb83: JUMP 0x85e
---
Entry stack: [V10, 0x85e]
Stack pops: 1
Stack additions: [S0, V781]
Exit stack: [V10, 0x85e, V781]

================================

Block 0xb84
[0xb84:0xb96]
---
Predecessors: [0x87f]
Successors: [0x887]
---
0xb84 JUMPDEST
0xb85 PUSH1 0x8
0xb87 PUSH1 0x0
0xb89 SWAP1
0xb8a SLOAD
0xb8b SWAP1
0xb8c PUSH2 0x100
0xb8f EXP
0xb90 SWAP1
0xb91 DIV
0xb92 PUSH1 0xff
0xb94 AND
0xb95 DUP2
0xb96 JUMP
---
0xb84: JUMPDEST 
0xb85: V782 = 0x8
0xb87: V783 = 0x0
0xb8a: V784 = S[0x8]
0xb8c: V785 = 0x100
0xb8f: V786 = EXP 0x100 0x0
0xb91: V787 = DIV V784 0x1
0xb92: V788 = 0xff
0xb94: V789 = AND 0xff V787
0xb96: JUMP 0x887
---
Entry stack: [V10, 0x887]
Stack pops: 1
Stack additions: [S0, V789]
Exit stack: [V10, 0x887, V789]

================================

Block 0xb97
[0xb97:0xbc2]
---
Predecessors: []
Successors: []
---
0xb97 STOP
0xb98 LOG1
0xb99 PUSH6 0x627a7a723058
0xba0 SHA3
0xba1 PUSH2 0x6666
0xba4 MISSING 0xed
0xba5 MISSING 0x24
0xba6 MISSING 0xf
0xba7 MISSING 0xb0
0xba8 MISSING 0xdd
0xba9 MISSING 0xa9
0xbaa SWAP12
0xbab MISSING 0xbf
0xbac PUSH15 0x1dafae853417956055c0065c1550d9
0xbbc MISSING 0xd6
0xbbd CALLCODE
0xbbe SELFDESTRUCT
0xbbf MISSING 0xd3
0xbc0 MISSING 0xee
0xbc1 STOP
0xbc2 MISSING 0x29
---
0xb97: STOP 
0xb98: LOG S0 S1 S2
0xb99: V790 = 0x627a7a723058
0xba0: V791 = SHA3 0x627a7a723058 S3
0xba1: V792 = 0x6666
0xba4: MISSING 0xed
0xba5: MISSING 0x24
0xba6: MISSING 0xf
0xba7: MISSING 0xb0
0xba8: MISSING 0xdd
0xba9: MISSING 0xa9
0xbab: MISSING 0xbf
0xbac: V793 = 0x1dafae853417956055c0065c1550d9
0xbbc: MISSING 0xd6
0xbbd: V794 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xbbe: SELFDESTRUCT V794
0xbbf: MISSING 0xd3
0xbc0: MISSING 0xee
0xbc1: STOP 
0xbc2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6666, V791, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0x1dafae853417956055c0065c1550d9]
Exit stack: []

================================

Function 0:
Public function signature: 0xd6103a1
Entry block: 0x6bf
Exit block: 0x6d2
Body: 0x6bf, 0x6c6, 0x6ca, 0x6d2, 0x8a1, 0x8b8, 0x8bc, 0x914, 0x918, 0xa38, 0xa3c, 0xa49, 0xa4d, 0xad7, 0xadb, 0xae8, 0xaec, 0xb13

Function 1:
Public function signature: 0x27ebcf0e
Entry block: 0x6d4
Exit block: 0x6e7
Body: 0x6d4, 0x6db, 0x6df, 0x6e7, 0xb15

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x729
Exit block: 0x73c
Body: 0x729, 0x730, 0x734, 0x73c, 0xb3a

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x752
Exit block: 0x765
Body: 0x752, 0x759, 0x75d, 0x765, 0xb40

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x77b
Exit block: 0x78e
Body: 0x77b, 0x782, 0x786, 0x78e, 0xb46

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x7d0
Exit block: 0x7e3
Body: 0x7d0, 0x7d7, 0x7db, 0x7e3, 0xb6c

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x7f9
Exit block: 0x80c
Body: 0x7f9, 0x800, 0x804, 0x80c, 0xb72

Function 7:
Public function signature: 0xb44eccc9
Entry block: 0x822
Exit block: 0x835
Body: 0x822, 0x829, 0x82d, 0x835, 0xb78

Function 8:
Public function signature: 0xc8e569a8
Entry block: 0x84b
Exit block: 0x85e
Body: 0x84b, 0x852, 0x856, 0x85e, 0xb7e

Function 9:
Public function signature: 0xccb07cef
Entry block: 0x874
Exit block: 0x887
Body: 0x874, 0x87b, 0x87f, 0x887, 0xb84

Function 10:
Public fallback function
Entry block: 0xa2
Exit block: 0x5f8
Body: 0xa2, 0xa6, 0x16b, 0x16f, 0x17c, 0x180, 0x19e, 0x1d9, 0x1dd, 0x1fd, 0x213, 0x24e, 0x252, 0x257, 0x266, 0x267, 0x276, 0x27a, 0x28a, 0x28b, 0x29a, 0x2f7, 0x2fb, 0x304, 0x341, 0x345, 0x346, 0x405, 0x409, 0x416, 0x41a, 0x449, 0x464, 0x469, 0x47b, 0x47c, 0x4dd, 0x4e1, 0x5a2, 0x5a6, 0x5b3, 0x5b7, 0x5f8, 0x5fc, 0x632, 0x633, 0x634, 0x6b8, 0x6bd

