Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x2f2]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1cb3b20
0x3a EQ
0x3b PUSH2 0x2f2
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1cb3b20
0x3a: V12 = EQ 0x1cb3b20 V10
0x3b: V13 = 0x2f2
0x3e: JUMPI 0x2f2 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x307]
---
0x3f DUP1
0x40 PUSH4 0x29dcb0cf
0x45 EQ
0x46 PUSH2 0x307
0x49 JUMPI
---
0x40: V14 = 0x29dcb0cf
0x45: V15 = EQ 0x29dcb0cf V10
0x46: V16 = 0x307
0x49: JUMPI 0x307 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x330]
---
0x4a DUP1
0x4b PUSH4 0x38af3eed
0x50 EQ
0x51 PUSH2 0x330
0x54 JUMPI
---
0x4b: V17 = 0x38af3eed
0x50: V18 = EQ 0x38af3eed V10
0x51: V19 = 0x330
0x54: JUMPI 0x330 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x385]
---
0x55 DUP1
0x56 PUSH4 0x6e66f6e9
0x5b EQ
0x5c PUSH2 0x385
0x5f JUMPI
---
0x56: V20 = 0x6e66f6e9
0x5b: V21 = EQ 0x6e66f6e9 V10
0x5c: V22 = 0x385
0x5f: JUMPI 0x385 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x3da]
---
0x60 DUP1
0x61 PUSH4 0x70a08231
0x66 EQ
0x67 PUSH2 0x3da
0x6a JUMPI
---
0x61: V23 = 0x70a08231
0x66: V24 = EQ 0x70a08231 V10
0x67: V25 = 0x3da
0x6a: JUMPI 0x3da V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x427]
---
0x6b DUP1
0x6c PUSH4 0x7a3a0e84
0x71 EQ
0x72 PUSH2 0x427
0x75 JUMPI
---
0x6c: V26 = 0x7a3a0e84
0x71: V27 = EQ 0x7a3a0e84 V10
0x72: V28 = 0x427
0x75: JUMPI 0x427 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x450]
---
0x76 DUP1
0x77 PUSH4 0x7b3e5e7b
0x7c EQ
0x7d PUSH2 0x450
0x80 JUMPI
---
0x77: V29 = 0x7b3e5e7b
0x7c: V30 = EQ 0x7b3e5e7b V10
0x7d: V31 = 0x450
0x80: JUMPI 0x450 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x479]
---
0x81 DUP1
0x82 PUSH4 0xa035b1fe
0x87 EQ
0x88 PUSH2 0x479
0x8b JUMPI
---
0x82: V32 = 0xa035b1fe
0x87: V33 = EQ 0xa035b1fe V10
0x88: V34 = 0x479
0x8b: JUMPI 0x479 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x4a2]
---
0x8c DUP1
0x8d PUSH4 0xfd6b7ef8
0x92 EQ
0x93 PUSH2 0x4a2
0x96 JUMPI
---
0x8d: V35 = 0xfd6b7ef8
0x92: V36 = EQ 0xfd6b7ef8 V10
0x93: V37 = 0x4a2
0x96: JUMPI 0x4a2 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x97]
---
Predecessors: [0x0, 0x8c]
Successors: [0x98]
---
0x97 JUMPDEST
---
0x97: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x98
[0x98:0xb2]
---
Predecessors: [0x97]
Successors: [0xb3, 0xb7]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c PUSH1 0x8
0x9e PUSH1 0x1
0xa0 SWAP1
0xa1 SLOAD
0xa2 SWAP1
0xa3 PUSH2 0x100
0xa6 EXP
0xa7 SWAP1
0xa8 DIV
0xa9 PUSH1 0xff
0xab AND
0xac ISZERO
0xad ISZERO
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0x98: JUMPDEST 
0x99: V38 = 0x0
0x9c: V39 = 0x8
0x9e: V40 = 0x1
0xa1: V41 = S[0x8]
0xa3: V42 = 0x100
0xa6: V43 = EXP 0x100 0x1
0xa8: V44 = DIV V41 0x100
0xa9: V45 = 0xff
0xab: V46 = AND 0xff V44
0xac: V47 = ISZERO V46
0xad: V48 = ISZERO V47
0xae: V49 = ISZERO V48
0xaf: V50 = 0xb7
0xb2: JUMPI 0xb7 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0x98]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V51 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xb7
[0xb7:0x110]
---
Predecessors: [0x98]
Successors: [0x111, 0x118]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 SWAP2
0xba POP
0xbb CALLER
0xbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1 AND
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 SWAP1
0xd6 SLOAD
0xd7 SWAP1
0xd8 PUSH2 0x100
0xdb EXP
0xdc SWAP1
0xdd DIV
0xde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3 AND
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a EQ
0x10b DUP1
0x10c ISZERO
0x10d PUSH2 0x118
0x110 JUMPI
---
0xb7: JUMPDEST 
0xb8: V52 = CALLVALUE
0xbb: V53 = CALLER
0xbc: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xd2: V56 = 0x0
0xd6: V57 = S[0x0]
0xd8: V58 = 0x100
0xdb: V59 = EXP 0x100 0x0
0xdd: V60 = DIV V57 0x1
0xde: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xf4: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x10a: V65 = EQ V64 V55
0x10c: V66 = ISZERO V65
0x10d: V67 = 0x118
0x110: JUMPI 0x118 V66
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 2
Stack additions: [V52, S0, V65]
Exit stack: [V10, V52, 0x0, V65]

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0xb7]
Successors: [0x118]
---
0x111 POP
0x112 PUSH1 0x0
0x114 PUSH1 0x3
0x116 SLOAD
0x117 GT
---
0x112: V68 = 0x0
0x114: V69 = 0x3
0x116: V70 = S[0x3]
0x117: V71 = GT V70 0x0
---
Entry stack: [V10, V52, 0x0, V65]
Stack pops: 1
Stack additions: [V71]
Exit stack: [V10, V52, 0x0, V71]

================================

Block 0x118
[0x118:0x11d]
---
Predecessors: [0xb7, 0x111]
Successors: [0x11e, 0x186]
---
0x118 JUMPDEST
0x119 ISZERO
0x11a PUSH2 0x186
0x11d JUMPI
---
0x118: JUMPDEST 
0x119: V72 = ISZERO S0
0x11a: V73 = 0x186
0x11d: JUMPI 0x186 V72
---
Entry stack: [V10, V52, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, V52, 0x0]

================================

Block 0x11e
[0x11e:0x185]
---
Predecessors: [0x118]
Successors: [0x2ed]
---
0x11e PUSH1 0x3
0x120 SLOAD
0x121 SWAP1
0x122 POP
0x123 PUSH1 0x0
0x125 PUSH1 0x3
0x127 DUP2
0x128 SWAP1
0x129 SSTORE
0x12a POP
0x12b PUSH1 0x0
0x12d DUP1
0x12e SWAP1
0x12f SLOAD
0x130 SWAP1
0x131 PUSH2 0x100
0x134 EXP
0x135 SWAP1
0x136 DIV
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x162 AND
0x163 PUSH2 0x8fc
0x166 DUP3
0x167 SWAP1
0x168 DUP2
0x169 ISZERO
0x16a MUL
0x16b SWAP1
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x0
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 DUP4
0x176 SUB
0x177 DUP2
0x178 DUP6
0x179 DUP9
0x17a DUP9
0x17b CALL
0x17c SWAP4
0x17d POP
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 PUSH2 0x2ed
0x185 JUMP
---
0x11e: V74 = 0x3
0x120: V75 = S[0x3]
0x123: V76 = 0x0
0x125: V77 = 0x3
0x129: S[0x3] = 0x0
0x12b: V78 = 0x0
0x12f: V79 = S[0x0]
0x131: V80 = 0x100
0x134: V81 = EXP 0x100 0x0
0x136: V82 = DIV V79 0x1
0x137: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x14d: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x162: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x163: V87 = 0x8fc
0x169: V88 = ISZERO V75
0x16a: V89 = MUL V88 0x8fc
0x16c: V90 = 0x40
0x16e: V91 = M[0x40]
0x16f: V92 = 0x0
0x171: V93 = 0x40
0x173: V94 = M[0x40]
0x176: V95 = SUB V91 V94
0x17b: V96 = CALL V89 V86 V75 V94 V95 V94 0x0
0x182: V97 = 0x2ed
0x185: JUMP 0x2ed
---
Entry stack: [V10, V52, 0x0]
Stack pops: 1
Stack additions: [V75]
Exit stack: [V10, V52, V75]

================================

Block 0x186
[0x186:0x18f]
---
Predecessors: [0x118]
Successors: [0x190, 0x2ec]
---
0x186 JUMPDEST
0x187 PUSH1 0x0
0x189 DUP3
0x18a GT
0x18b ISZERO
0x18c PUSH2 0x2ec
0x18f JUMPI
---
0x186: JUMPDEST 
0x187: V98 = 0x0
0x18a: V99 = GT V52 0x0
0x18b: V100 = ISZERO V99
0x18c: V101 = 0x2ec
0x18f: JUMPI 0x2ec V100
---
Entry stack: [V10, V52, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, V52, 0x0]

================================

Block 0x190
[0x190:0x24f]
---
Predecessors: [0x186]
Successors: [0x250, 0x251]
---
0x190 DUP2
0x191 PUSH1 0x7
0x193 PUSH1 0x0
0x195 CALLER
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd PUSH1 0x0
0x1cf SHA3
0x1d0 PUSH1 0x0
0x1d2 DUP3
0x1d3 DUP3
0x1d4 SLOAD
0x1d5 ADD
0x1d6 SWAP3
0x1d7 POP
0x1d8 POP
0x1d9 DUP2
0x1da SWAP1
0x1db SSTORE
0x1dc POP
0x1dd DUP2
0x1de PUSH1 0x2
0x1e0 PUSH1 0x0
0x1e2 DUP3
0x1e3 DUP3
0x1e4 SLOAD
0x1e5 ADD
0x1e6 SWAP3
0x1e7 POP
0x1e8 POP
0x1e9 DUP2
0x1ea SWAP1
0x1eb SSTORE
0x1ec POP
0x1ed DUP2
0x1ee PUSH1 0x3
0x1f0 PUSH1 0x0
0x1f2 DUP3
0x1f3 DUP3
0x1f4 SLOAD
0x1f5 ADD
0x1f6 SWAP3
0x1f7 POP
0x1f8 POP
0x1f9 DUP2
0x1fa SWAP1
0x1fb SSTORE
0x1fc POP
0x1fd PUSH1 0x6
0x1ff PUSH1 0x0
0x201 SWAP1
0x202 SLOAD
0x203 SWAP1
0x204 PUSH2 0x100
0x207 EXP
0x208 SWAP1
0x209 DIV
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f AND
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 PUSH4 0xa9059cbb
0x23b CALLER
0x23c PUSH8 0xde0b6b3a7640000
0x245 PUSH1 0x5
0x247 SLOAD
0x248 DUP7
0x249 DUP2
0x24a ISZERO
0x24b ISZERO
0x24c PUSH2 0x251
0x24f JUMPI
---
0x191: V102 = 0x7
0x193: V103 = 0x0
0x195: V104 = CALLER
0x196: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1ac: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1c3: M[0x0] = V108
0x1c4: V109 = 0x20
0x1c6: V110 = ADD 0x20 0x0
0x1c9: M[0x20] = 0x7
0x1ca: V111 = 0x20
0x1cc: V112 = ADD 0x20 0x20
0x1cd: V113 = 0x0
0x1cf: V114 = SHA3 0x0 0x40
0x1d0: V115 = 0x0
0x1d4: V116 = S[V114]
0x1d5: V117 = ADD V116 V52
0x1db: S[V114] = V117
0x1de: V118 = 0x2
0x1e0: V119 = 0x0
0x1e4: V120 = S[0x2]
0x1e5: V121 = ADD V120 V52
0x1eb: S[0x2] = V121
0x1ee: V122 = 0x3
0x1f0: V123 = 0x0
0x1f4: V124 = S[0x3]
0x1f5: V125 = ADD V124 V52
0x1fb: S[0x3] = V125
0x1fd: V126 = 0x6
0x1ff: V127 = 0x0
0x202: V128 = S[0x6]
0x204: V129 = 0x100
0x207: V130 = EXP 0x100 0x0
0x209: V131 = DIV V128 0x1
0x20a: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x220: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x236: V136 = 0xa9059cbb
0x23b: V137 = CALLER
0x23c: V138 = 0xde0b6b3a7640000
0x245: V139 = 0x5
0x247: V140 = S[0x5]
0x24a: V141 = ISZERO V140
0x24b: V142 = ISZERO V141
0x24c: V143 = 0x251
0x24f: JUMPI 0x251 V142
---
Entry stack: [V10, V52, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V135, 0xa9059cbb, V137, 0xde0b6b3a7640000, V140, S1]
Exit stack: [V10, V52, 0x0, V135, 0xa9059cbb, V137, 0xde0b6b3a7640000, V140, V52]

================================

Block 0x250
[0x250:0x250]
---
Predecessors: [0x190]
Successors: []
---
0x250 INVALID
---
0x250: INVALID 
---
Entry stack: [V10, V52, 0x0, V135, 0xa9059cbb, V137, 0xde0b6b3a7640000, V140, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, 0x0, V135, 0xa9059cbb, V137, 0xde0b6b3a7640000, V140, V52]

================================

Block 0x251
[0x251:0x2d2]
---
Predecessors: [0x190]
Successors: [0x2d3, 0x2d7]
---
0x251 JUMPDEST
0x252 DIV
0x253 MUL
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP4
0x258 PUSH4 0xffffffff
0x25d AND
0x25e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x27c MUL
0x27d DUP2
0x27e MSTORE
0x27f PUSH1 0x4
0x281 ADD
0x282 DUP1
0x283 DUP4
0x284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x299 AND
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 DUP3
0x2b6 DUP2
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb SWAP3
0x2bc POP
0x2bd POP
0x2be POP
0x2bf PUSH1 0x0
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 DUP4
0x2c6 SUB
0x2c7 DUP2
0x2c8 PUSH1 0x0
0x2ca DUP8
0x2cb DUP1
0x2cc EXTCODESIZE
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x251: JUMPDEST 
0x252: V144 = DIV V52 V140
0x253: V145 = MUL V144 0xde0b6b3a7640000
0x254: V146 = 0x40
0x256: V147 = M[0x40]
0x258: V148 = 0xffffffff
0x25d: V149 = AND 0xffffffff 0xa9059cbb
0x25e: V150 = 0x100000000000000000000000000000000000000000000000000000000
0x27c: V151 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x27e: M[V147] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x27f: V152 = 0x4
0x281: V153 = ADD 0x4 V147
0x284: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x299: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x29a: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2b1: M[V153] = V157
0x2b2: V158 = 0x20
0x2b4: V159 = ADD 0x20 V153
0x2b7: M[V159] = V145
0x2b8: V160 = 0x20
0x2ba: V161 = ADD 0x20 V159
0x2bf: V162 = 0x0
0x2c1: V163 = 0x40
0x2c3: V164 = M[0x40]
0x2c6: V165 = SUB V161 V164
0x2c8: V166 = 0x0
0x2cc: V167 = EXTCODESIZE V135
0x2cd: V168 = ISZERO V167
0x2ce: V169 = ISZERO V168
0x2cf: V170 = 0x2d7
0x2d2: JUMPI 0x2d7 V169
---
Entry stack: [V10, V52, 0x0, V135, 0xa9059cbb, V137, 0xde0b6b3a7640000, V140, V52]
Stack pops: 6
Stack additions: [S5, S4, V161, 0x0, V164, V165, V164, 0x0, S5]
Exit stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161, 0x0, V164, V165, V164, 0x0, V135]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x251]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V171 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161, 0x0, V164, V165, V164, 0x0, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161, 0x0, V164, V165, V164, 0x0, V135]

================================

Block 0x2d7
[0x2d7:0x2e3]
---
Predecessors: [0x251]
Successors: [0x2e4, 0x2e8]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x2c6
0x2db GAS
0x2dc SUB
0x2dd CALL
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V172 = 0x2c6
0x2db: V173 = GAS
0x2dc: V174 = SUB V173 0x2c6
0x2dd: V175 = CALL V174 V135 0x0 V164 V165 V164 0x0
0x2de: V176 = ISZERO V175
0x2df: V177 = ISZERO V176
0x2e0: V178 = 0x2e8
0x2e3: JUMPI 0x2e8 V177
---
Entry stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161, 0x0, V164, V165, V164, 0x0, V135]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x2d7]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V179 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2d7]
Successors: [0x2ec]
---
0x2e8 JUMPDEST
0x2e9 POP
0x2ea POP
0x2eb POP
---
0x2e8: JUMPDEST 
---
Entry stack: [V10, V52, 0x0, V135, 0xa9059cbb, V161]
Stack pops: 3
Stack additions: []
Exit stack: [V10, V52, 0x0]

================================

Block 0x2ec
[0x2ec:0x2ec]
---
Predecessors: [0x186, 0x2e8]
Successors: [0x2ed]
---
0x2ec JUMPDEST
---
0x2ec: JUMPDEST 
---
Entry stack: [V10, V52, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, 0x0]

================================

Block 0x2ed
[0x2ed:0x2ed]
---
Predecessors: [0x11e, 0x2ec]
Successors: [0x2ee]
---
0x2ed JUMPDEST
---
0x2ed: JUMPDEST 
---
Entry stack: [V10, V52, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, S0]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2ed]
Successors: []
---
0x2ee JUMPDEST
0x2ef POP
0x2f0 POP
0x2f1 STOP
---
0x2ee: JUMPDEST 
0x2f1: STOP 
---
Entry stack: [V10, V52, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f2
[0x2f2:0x2f8]
---
Predecessors: [0xb]
Successors: [0x2f9, 0x2fd]
---
0x2f2 JUMPDEST
0x2f3 CALLVALUE
0x2f4 ISZERO
0x2f5 PUSH2 0x2fd
0x2f8 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V180 = CALLVALUE
0x2f4: V181 = ISZERO V180
0x2f5: V182 = 0x2fd
0x2f8: JUMPI 0x2fd V181
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x2f2]
Successors: []
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
---
0x2f9: V183 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fd
[0x2fd:0x304]
---
Predecessors: [0x2f2]
Successors: [0x4b7]
---
0x2fd JUMPDEST
0x2fe PUSH2 0x305
0x301 PUSH2 0x4b7
0x304 JUMP
---
0x2fd: JUMPDEST 
0x2fe: V184 = 0x305
0x301: V185 = 0x4b7
0x304: JUMP 0x4b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x305]
Exit stack: [V10, 0x305]

================================

Block 0x305
[0x305:0x306]
---
Predecessors: [0x597]
Successors: []
---
0x305 JUMPDEST
0x306 STOP
---
0x305: JUMPDEST 
0x306: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x307
[0x307:0x30d]
---
Predecessors: [0x3f]
Successors: [0x30e, 0x312]
---
0x307 JUMPDEST
0x308 CALLVALUE
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x307: JUMPDEST 
0x308: V186 = CALLVALUE
0x309: V187 = ISZERO V186
0x30a: V188 = 0x312
0x30d: JUMPI 0x312 V187
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x307]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V189 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x312
[0x312:0x319]
---
Predecessors: [0x307]
Successors: [0x599]
---
0x312 JUMPDEST
0x313 PUSH2 0x31a
0x316 PUSH2 0x599
0x319 JUMP
---
0x312: JUMPDEST 
0x313: V190 = 0x31a
0x316: V191 = 0x599
0x319: JUMP 0x599
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31a]
Exit stack: [V10, 0x31a]

================================

Block 0x31a
[0x31a:0x32f]
---
Predecessors: [0x599]
Successors: []
---
0x31a JUMPDEST
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f DUP3
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP2
0x326 POP
0x327 POP
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c SWAP2
0x32d SUB
0x32e SWAP1
0x32f RETURN
---
0x31a: JUMPDEST 
0x31b: V192 = 0x40
0x31d: V193 = M[0x40]
0x321: M[V193] = V364
0x322: V194 = 0x20
0x324: V195 = ADD 0x20 V193
0x328: V196 = 0x40
0x32a: V197 = M[0x40]
0x32d: V198 = SUB V195 V197
0x32f: RETURN V197 V198
---
Entry stack: [V10, 0x31a, V364]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x31a]

================================

Block 0x330
[0x330:0x336]
---
Predecessors: [0x4a]
Successors: [0x337, 0x33b]
---
0x330 JUMPDEST
0x331 CALLVALUE
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x330: JUMPDEST 
0x331: V199 = CALLVALUE
0x332: V200 = ISZERO V199
0x333: V201 = 0x33b
0x336: JUMPI 0x33b V200
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x330]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V202 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x330]
Successors: [0x59f]
---
0x33b JUMPDEST
0x33c PUSH2 0x343
0x33f PUSH2 0x59f
0x342 JUMP
---
0x33b: JUMPDEST 
0x33c: V203 = 0x343
0x33f: V204 = 0x59f
0x342: JUMP 0x59f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x343]
Exit stack: [V10, 0x343]

================================

Block 0x343
[0x343:0x384]
---
Predecessors: [0x59f]
Successors: []
---
0x343 JUMPDEST
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP3
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x20
0x379 ADD
0x37a SWAP2
0x37b POP
0x37c POP
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 RETURN
---
0x343: JUMPDEST 
0x344: V205 = 0x40
0x346: V206 = M[0x40]
0x349: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x35f: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x376: M[V206] = V210
0x377: V211 = 0x20
0x379: V212 = ADD 0x20 V206
0x37d: V213 = 0x40
0x37f: V214 = M[0x40]
0x382: V215 = SUB V212 V214
0x384: RETURN V214 V215
---
Entry stack: [V10, 0x343, V371]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x343]

================================

Block 0x385
[0x385:0x38b]
---
Predecessors: [0x55]
Successors: [0x38c, 0x390]
---
0x385 JUMPDEST
0x386 CALLVALUE
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x385: JUMPDEST 
0x386: V216 = CALLVALUE
0x387: V217 = ISZERO V216
0x388: V218 = 0x390
0x38b: JUMPI 0x390 V217
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x385]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V219 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x390
[0x390:0x397]
---
Predecessors: [0x385]
Successors: [0x5c4]
---
0x390 JUMPDEST
0x391 PUSH2 0x398
0x394 PUSH2 0x5c4
0x397 JUMP
---
0x390: JUMPDEST 
0x391: V220 = 0x398
0x394: V221 = 0x5c4
0x397: JUMP 0x5c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x398]
Exit stack: [V10, 0x398]

================================

Block 0x398
[0x398:0x3d9]
---
Predecessors: [0x5c4]
Successors: []
---
0x398 JUMPDEST
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP3
0x39e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b3 AND
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf SWAP2
0x3d0 POP
0x3d1 POP
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 SWAP2
0x3d7 SUB
0x3d8 SWAP1
0x3d9 RETURN
---
0x398: JUMPDEST 
0x399: V222 = 0x40
0x39b: V223 = M[0x40]
0x39e: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b3: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x3b4: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3cb: M[V223] = V227
0x3cc: V228 = 0x20
0x3ce: V229 = ADD 0x20 V223
0x3d2: V230 = 0x40
0x3d4: V231 = M[0x40]
0x3d7: V232 = SUB V229 V231
0x3d9: RETURN V231 V232
---
Entry stack: [V10, 0x398, V379]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x398]

================================

Block 0x3da
[0x3da:0x3e0]
---
Predecessors: [0x60]
Successors: [0x3e1, 0x3e5]
---
0x3da JUMPDEST
0x3db CALLVALUE
0x3dc ISZERO
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3da: JUMPDEST 
0x3db: V233 = CALLVALUE
0x3dc: V234 = ISZERO V233
0x3dd: V235 = 0x3e5
0x3e0: JUMPI 0x3e5 V234
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3da]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V236 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e5
[0x3e5:0x410]
---
Predecessors: [0x3da]
Successors: [0x5ea]
---
0x3e5 JUMPDEST
0x3e6 PUSH2 0x411
0x3e9 PUSH1 0x4
0x3eb DUP1
0x3ec DUP1
0x3ed CALLDATALOAD
0x3ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x403 AND
0x404 SWAP1
0x405 PUSH1 0x20
0x407 ADD
0x408 SWAP1
0x409 SWAP2
0x40a SWAP1
0x40b POP
0x40c POP
0x40d PUSH2 0x5ea
0x410 JUMP
---
0x3e5: JUMPDEST 
0x3e6: V237 = 0x411
0x3e9: V238 = 0x4
0x3ed: V239 = CALLDATALOAD 0x4
0x3ee: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x403: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x405: V242 = 0x20
0x407: V243 = ADD 0x20 0x4
0x40d: V244 = 0x5ea
0x410: JUMP 0x5ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x411, V241]
Exit stack: [V10, 0x411, V241]

================================

Block 0x411
[0x411:0x426]
---
Predecessors: [0x5ea]
Successors: []
---
0x411 JUMPDEST
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 DUP3
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x20
0x41b ADD
0x41c SWAP2
0x41d POP
0x41e POP
0x41f PUSH1 0x40
0x421 MLOAD
0x422 DUP1
0x423 SWAP2
0x424 SUB
0x425 SWAP1
0x426 RETURN
---
0x411: JUMPDEST 
0x412: V245 = 0x40
0x414: V246 = M[0x40]
0x418: M[V246] = V387
0x419: V247 = 0x20
0x41b: V248 = ADD 0x20 V246
0x41f: V249 = 0x40
0x421: V250 = M[0x40]
0x424: V251 = SUB V248 V250
0x426: RETURN V250 V251
---
Entry stack: [V10, 0x411, V387]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x411]

================================

Block 0x427
[0x427:0x42d]
---
Predecessors: [0x6b]
Successors: [0x42e, 0x432]
---
0x427 JUMPDEST
0x428 CALLVALUE
0x429 ISZERO
0x42a PUSH2 0x432
0x42d JUMPI
---
0x427: JUMPDEST 
0x428: V252 = CALLVALUE
0x429: V253 = ISZERO V252
0x42a: V254 = 0x432
0x42d: JUMPI 0x432 V253
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42e
[0x42e:0x431]
---
Predecessors: [0x427]
Successors: []
---
0x42e PUSH1 0x0
0x430 DUP1
0x431 REVERT
---
0x42e: V255 = 0x0
0x431: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x432
[0x432:0x439]
---
Predecessors: [0x427]
Successors: [0x602]
---
0x432 JUMPDEST
0x433 PUSH2 0x43a
0x436 PUSH2 0x602
0x439 JUMP
---
0x432: JUMPDEST 
0x433: V256 = 0x43a
0x436: V257 = 0x602
0x439: JUMP 0x602
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x43a]
Exit stack: [V10, 0x43a]

================================

Block 0x43a
[0x43a:0x44f]
---
Predecessors: [0x602]
Successors: []
---
0x43a JUMPDEST
0x43b PUSH1 0x40
0x43d MLOAD
0x43e DUP1
0x43f DUP3
0x440 DUP2
0x441 MSTORE
0x442 PUSH1 0x20
0x444 ADD
0x445 SWAP2
0x446 POP
0x447 POP
0x448 PUSH1 0x40
0x44a MLOAD
0x44b DUP1
0x44c SWAP2
0x44d SUB
0x44e SWAP1
0x44f RETURN
---
0x43a: JUMPDEST 
0x43b: V258 = 0x40
0x43d: V259 = M[0x40]
0x441: M[V259] = V389
0x442: V260 = 0x20
0x444: V261 = ADD 0x20 V259
0x448: V262 = 0x40
0x44a: V263 = M[0x40]
0x44d: V264 = SUB V261 V263
0x44f: RETURN V263 V264
---
Entry stack: [V10, 0x43a, V389]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x43a]

================================

Block 0x450
[0x450:0x456]
---
Predecessors: [0x76]
Successors: [0x457, 0x45b]
---
0x450 JUMPDEST
0x451 CALLVALUE
0x452 ISZERO
0x453 PUSH2 0x45b
0x456 JUMPI
---
0x450: JUMPDEST 
0x451: V265 = CALLVALUE
0x452: V266 = ISZERO V265
0x453: V267 = 0x45b
0x456: JUMPI 0x45b V266
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x457
[0x457:0x45a]
---
Predecessors: [0x450]
Successors: []
---
0x457 PUSH1 0x0
0x459 DUP1
0x45a REVERT
---
0x457: V268 = 0x0
0x45a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45b
[0x45b:0x462]
---
Predecessors: [0x450]
Successors: [0x608]
---
0x45b JUMPDEST
0x45c PUSH2 0x463
0x45f PUSH2 0x608
0x462 JUMP
---
0x45b: JUMPDEST 
0x45c: V269 = 0x463
0x45f: V270 = 0x608
0x462: JUMP 0x608
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x463]
Exit stack: [V10, 0x463]

================================

Block 0x463
[0x463:0x478]
---
Predecessors: [0x608]
Successors: []
---
0x463 JUMPDEST
0x464 PUSH1 0x40
0x466 MLOAD
0x467 DUP1
0x468 DUP3
0x469 DUP2
0x46a MSTORE
0x46b PUSH1 0x20
0x46d ADD
0x46e SWAP2
0x46f POP
0x470 POP
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 SWAP2
0x476 SUB
0x477 SWAP1
0x478 RETURN
---
0x463: JUMPDEST 
0x464: V271 = 0x40
0x466: V272 = M[0x40]
0x46a: M[V272] = V391
0x46b: V273 = 0x20
0x46d: V274 = ADD 0x20 V272
0x471: V275 = 0x40
0x473: V276 = M[0x40]
0x476: V277 = SUB V274 V276
0x478: RETURN V276 V277
---
Entry stack: [V10, 0x463, V391]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x463]

================================

Block 0x479
[0x479:0x47f]
---
Predecessors: [0x81]
Successors: [0x480, 0x484]
---
0x479 JUMPDEST
0x47a CALLVALUE
0x47b ISZERO
0x47c PUSH2 0x484
0x47f JUMPI
---
0x479: JUMPDEST 
0x47a: V278 = CALLVALUE
0x47b: V279 = ISZERO V278
0x47c: V280 = 0x484
0x47f: JUMPI 0x484 V279
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x480
[0x480:0x483]
---
Predecessors: [0x479]
Successors: []
---
0x480 PUSH1 0x0
0x482 DUP1
0x483 REVERT
---
0x480: V281 = 0x0
0x483: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x484
[0x484:0x48b]
---
Predecessors: [0x479]
Successors: [0x60e]
---
0x484 JUMPDEST
0x485 PUSH2 0x48c
0x488 PUSH2 0x60e
0x48b JUMP
---
0x484: JUMPDEST 
0x485: V282 = 0x48c
0x488: V283 = 0x60e
0x48b: JUMP 0x60e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x48c]
Exit stack: [V10, 0x48c]

================================

Block 0x48c
[0x48c:0x4a1]
---
Predecessors: [0x60e]
Successors: []
---
0x48c JUMPDEST
0x48d PUSH1 0x40
0x48f MLOAD
0x490 DUP1
0x491 DUP3
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x20
0x496 ADD
0x497 SWAP2
0x498 POP
0x499 POP
0x49a PUSH1 0x40
0x49c MLOAD
0x49d DUP1
0x49e SWAP2
0x49f SUB
0x4a0 SWAP1
0x4a1 RETURN
---
0x48c: JUMPDEST 
0x48d: V284 = 0x40
0x48f: V285 = M[0x40]
0x493: M[V285] = V393
0x494: V286 = 0x20
0x496: V287 = ADD 0x20 V285
0x49a: V288 = 0x40
0x49c: V289 = M[0x40]
0x49f: V290 = SUB V287 V289
0x4a1: RETURN V289 V290
---
Entry stack: [V10, 0x48c, V393]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x48c]

================================

Block 0x4a2
[0x4a2:0x4a8]
---
Predecessors: [0x8c]
Successors: [0x4a9, 0x4ad]
---
0x4a2 JUMPDEST
0x4a3 CALLVALUE
0x4a4 ISZERO
0x4a5 PUSH2 0x4ad
0x4a8 JUMPI
---
0x4a2: JUMPDEST 
0x4a3: V291 = CALLVALUE
0x4a4: V292 = ISZERO V291
0x4a5: V293 = 0x4ad
0x4a8: JUMPI 0x4ad V292
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a9
[0x4a9:0x4ac]
---
Predecessors: [0x4a2]
Successors: []
---
0x4a9 PUSH1 0x0
0x4ab DUP1
0x4ac REVERT
---
0x4a9: V294 = 0x0
0x4ac: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ad
[0x4ad:0x4b4]
---
Predecessors: [0x4a2]
Successors: [0x614]
---
0x4ad JUMPDEST
0x4ae PUSH2 0x4b5
0x4b1 PUSH2 0x614
0x4b4 JUMP
---
0x4ad: JUMPDEST 
0x4ae: V295 = 0x4b5
0x4b1: V296 = 0x614
0x4b4: JUMP 0x614
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4b5]
Exit stack: [V10, 0x4b5]

================================

Block 0x4b5
[0x4b5:0x4b6]
---
Predecessors: [0x622]
Successors: []
---
0x4b5 JUMPDEST
0x4b6 STOP
---
0x4b5: JUMPDEST 
0x4b6: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b7
[0x4b7:0x4c2]
---
Predecessors: [0x2fd]
Successors: [0x4c3, 0x596]
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x4
0x4ba SLOAD
0x4bb TIMESTAMP
0x4bc LT
0x4bd ISZERO
0x4be ISZERO
0x4bf PUSH2 0x596
0x4c2 JUMPI
---
0x4b7: JUMPDEST 
0x4b8: V297 = 0x4
0x4ba: V298 = S[0x4]
0x4bb: V299 = TIMESTAMP
0x4bc: V300 = LT V299 V298
0x4bd: V301 = ISZERO V300
0x4be: V302 = ISZERO V301
0x4bf: V303 = 0x596
0x4c2: JUMPI 0x596 V302
---
Entry stack: [V10, 0x305]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x305]

================================

Block 0x4c3
[0x4c3:0x4cf]
---
Predecessors: [0x4b7]
Successors: [0x4d0, 0x579]
---
0x4c3 PUSH1 0x1
0x4c5 SLOAD
0x4c6 PUSH1 0x2
0x4c8 SLOAD
0x4c9 LT
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x579
0x4cf JUMPI
---
0x4c3: V304 = 0x1
0x4c5: V305 = S[0x1]
0x4c6: V306 = 0x2
0x4c8: V307 = S[0x2]
0x4c9: V308 = LT V307 V305
0x4ca: V309 = ISZERO V308
0x4cb: V310 = ISZERO V309
0x4cc: V311 = 0x579
0x4cf: JUMPI 0x579 V310
---
Entry stack: [V10, 0x305]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x305]

================================

Block 0x4d0
[0x4d0:0x578]
---
Predecessors: [0x4c3]
Successors: [0x579]
---
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0x8
0x4d4 PUSH1 0x0
0x4d6 PUSH2 0x100
0x4d9 EXP
0x4da DUP2
0x4db SLOAD
0x4dc DUP2
0x4dd PUSH1 0xff
0x4df MUL
0x4e0 NOT
0x4e1 AND
0x4e2 SWAP1
0x4e3 DUP4
0x4e4 ISZERO
0x4e5 ISZERO
0x4e6 MUL
0x4e7 OR
0x4e8 SWAP1
0x4e9 SSTORE
0x4ea POP
0x4eb PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x50c PUSH1 0x0
0x50e DUP1
0x50f SWAP1
0x510 SLOAD
0x511 SWAP1
0x512 PUSH2 0x100
0x515 EXP
0x516 SWAP1
0x517 DIV
0x518 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52d AND
0x52e PUSH1 0x2
0x530 SLOAD
0x531 PUSH1 0x40
0x533 MLOAD
0x534 DUP1
0x535 DUP4
0x536 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54b AND
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 DUP2
0x563 MSTORE
0x564 PUSH1 0x20
0x566 ADD
0x567 DUP3
0x568 DUP2
0x569 MSTORE
0x56a PUSH1 0x20
0x56c ADD
0x56d SWAP3
0x56e POP
0x56f POP
0x570 POP
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 SWAP2
0x576 SUB
0x577 SWAP1
0x578 LOG1
---
0x4d0: V312 = 0x1
0x4d2: V313 = 0x8
0x4d4: V314 = 0x0
0x4d6: V315 = 0x100
0x4d9: V316 = EXP 0x100 0x0
0x4db: V317 = S[0x8]
0x4dd: V318 = 0xff
0x4df: V319 = MUL 0xff 0x1
0x4e0: V320 = NOT 0xff
0x4e1: V321 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V317
0x4e4: V322 = ISZERO 0x1
0x4e5: V323 = ISZERO 0x0
0x4e6: V324 = MUL 0x1 0x1
0x4e7: V325 = OR 0x1 V321
0x4e9: S[0x8] = V325
0x4eb: V326 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x50c: V327 = 0x0
0x510: V328 = S[0x0]
0x512: V329 = 0x100
0x515: V330 = EXP 0x100 0x0
0x517: V331 = DIV V328 0x1
0x518: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x52d: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x52e: V334 = 0x2
0x530: V335 = S[0x2]
0x531: V336 = 0x40
0x533: V337 = M[0x40]
0x536: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x54c: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x563: M[V337] = V341
0x564: V342 = 0x20
0x566: V343 = ADD 0x20 V337
0x569: M[V343] = V335
0x56a: V344 = 0x20
0x56c: V345 = ADD 0x20 V343
0x571: V346 = 0x40
0x573: V347 = M[0x40]
0x576: V348 = SUB V345 V347
0x578: LOG V347 V348 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x305]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x305]

================================

Block 0x579
[0x579:0x594]
---
Predecessors: [0x4c3, 0x4d0]
Successors: [0x595]
---
0x579 JUMPDEST
0x57a PUSH1 0x1
0x57c PUSH1 0x8
0x57e PUSH1 0x1
0x580 PUSH2 0x100
0x583 EXP
0x584 DUP2
0x585 SLOAD
0x586 DUP2
0x587 PUSH1 0xff
0x589 MUL
0x58a NOT
0x58b AND
0x58c SWAP1
0x58d DUP4
0x58e ISZERO
0x58f ISZERO
0x590 MUL
0x591 OR
0x592 SWAP1
0x593 SSTORE
0x594 POP
---
0x579: JUMPDEST 
0x57a: V349 = 0x1
0x57c: V350 = 0x8
0x57e: V351 = 0x1
0x580: V352 = 0x100
0x583: V353 = EXP 0x100 0x1
0x585: V354 = S[0x8]
0x587: V355 = 0xff
0x589: V356 = MUL 0xff 0x100
0x58a: V357 = NOT 0xff00
0x58b: V358 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V354
0x58e: V359 = ISZERO 0x1
0x58f: V360 = ISZERO 0x0
0x590: V361 = MUL 0x1 0x100
0x591: V362 = OR 0x100 V358
0x593: S[0x8] = V362
---
Entry stack: [V10, 0x305]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x305]

================================

Block 0x595
[0x595:0x595]
---
Predecessors: [0x579]
Successors: [0x596]
---
0x595 JUMPDEST
---
0x595: JUMPDEST 
---
Entry stack: [V10, 0x305]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x305]

================================

Block 0x596
[0x596:0x596]
---
Predecessors: [0x4b7, 0x595]
Successors: [0x597]
---
0x596 JUMPDEST
---
0x596: JUMPDEST 
---
Entry stack: [V10, 0x305]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x305]

================================

Block 0x597
[0x597:0x598]
---
Predecessors: [0x596]
Successors: [0x305]
---
0x597 JUMPDEST
0x598 JUMP
---
0x597: JUMPDEST 
0x598: JUMP 0x305
---
Entry stack: [V10, 0x305]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x599
[0x599:0x59e]
---
Predecessors: [0x312]
Successors: [0x31a]
---
0x599 JUMPDEST
0x59a PUSH1 0x4
0x59c SLOAD
0x59d DUP2
0x59e JUMP
---
0x599: JUMPDEST 
0x59a: V363 = 0x4
0x59c: V364 = S[0x4]
0x59e: JUMP 0x31a
---
Entry stack: [V10, 0x31a]
Stack pops: 1
Stack additions: [S0, V364]
Exit stack: [V10, 0x31a, V364]

================================

Block 0x59f
[0x59f:0x5c3]
---
Predecessors: [0x33b]
Successors: [0x343]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x0
0x5a2 DUP1
0x5a3 SWAP1
0x5a4 SLOAD
0x5a5 SWAP1
0x5a6 PUSH2 0x100
0x5a9 EXP
0x5aa SWAP1
0x5ab DIV
0x5ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c1 AND
0x5c2 DUP2
0x5c3 JUMP
---
0x59f: JUMPDEST 
0x5a0: V365 = 0x0
0x5a4: V366 = S[0x0]
0x5a6: V367 = 0x100
0x5a9: V368 = EXP 0x100 0x0
0x5ab: V369 = DIV V366 0x1
0x5ac: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c1: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x5c3: JUMP 0x343
---
Entry stack: [V10, 0x343]
Stack pops: 1
Stack additions: [S0, V371]
Exit stack: [V10, 0x343, V371]

================================

Block 0x5c4
[0x5c4:0x5e9]
---
Predecessors: [0x390]
Successors: [0x398]
---
0x5c4 JUMPDEST
0x5c5 PUSH1 0x6
0x5c7 PUSH1 0x0
0x5c9 SWAP1
0x5ca SLOAD
0x5cb SWAP1
0x5cc PUSH2 0x100
0x5cf EXP
0x5d0 SWAP1
0x5d1 DIV
0x5d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e7 AND
0x5e8 DUP2
0x5e9 JUMP
---
0x5c4: JUMPDEST 
0x5c5: V372 = 0x6
0x5c7: V373 = 0x0
0x5ca: V374 = S[0x6]
0x5cc: V375 = 0x100
0x5cf: V376 = EXP 0x100 0x0
0x5d1: V377 = DIV V374 0x1
0x5d2: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x5e9: JUMP 0x398
---
Entry stack: [V10, 0x398]
Stack pops: 1
Stack additions: [S0, V379]
Exit stack: [V10, 0x398, V379]

================================

Block 0x5ea
[0x5ea:0x601]
---
Predecessors: [0x3e5]
Successors: [0x411]
---
0x5ea JUMPDEST
0x5eb PUSH1 0x7
0x5ed PUSH1 0x20
0x5ef MSTORE
0x5f0 DUP1
0x5f1 PUSH1 0x0
0x5f3 MSTORE
0x5f4 PUSH1 0x40
0x5f6 PUSH1 0x0
0x5f8 SHA3
0x5f9 PUSH1 0x0
0x5fb SWAP2
0x5fc POP
0x5fd SWAP1
0x5fe POP
0x5ff SLOAD
0x600 DUP2
0x601 JUMP
---
0x5ea: JUMPDEST 
0x5eb: V380 = 0x7
0x5ed: V381 = 0x20
0x5ef: M[0x20] = 0x7
0x5f1: V382 = 0x0
0x5f3: M[0x0] = V241
0x5f4: V383 = 0x40
0x5f6: V384 = 0x0
0x5f8: V385 = SHA3 0x0 0x40
0x5f9: V386 = 0x0
0x5ff: V387 = S[V385]
0x601: JUMP 0x411
---
Entry stack: [V10, 0x411, V241]
Stack pops: 2
Stack additions: [S1, V387]
Exit stack: [V10, 0x411, V387]

================================

Block 0x602
[0x602:0x607]
---
Predecessors: [0x432]
Successors: [0x43a]
---
0x602 JUMPDEST
0x603 PUSH1 0x1
0x605 SLOAD
0x606 DUP2
0x607 JUMP
---
0x602: JUMPDEST 
0x603: V388 = 0x1
0x605: V389 = S[0x1]
0x607: JUMP 0x43a
---
Entry stack: [V10, 0x43a]
Stack pops: 1
Stack additions: [S0, V389]
Exit stack: [V10, 0x43a, V389]

================================

Block 0x608
[0x608:0x60d]
---
Predecessors: [0x45b]
Successors: [0x463]
---
0x608 JUMPDEST
0x609 PUSH1 0x2
0x60b SLOAD
0x60c DUP2
0x60d JUMP
---
0x608: JUMPDEST 
0x609: V390 = 0x2
0x60b: V391 = S[0x2]
0x60d: JUMP 0x463
---
Entry stack: [V10, 0x463]
Stack pops: 1
Stack additions: [S0, V391]
Exit stack: [V10, 0x463, V391]

================================

Block 0x60e
[0x60e:0x613]
---
Predecessors: [0x484]
Successors: [0x48c]
---
0x60e JUMPDEST
0x60f PUSH1 0x5
0x611 SLOAD
0x612 DUP2
0x613 JUMP
---
0x60e: JUMPDEST 
0x60f: V392 = 0x5
0x611: V393 = S[0x5]
0x613: JUMP 0x48c
---
Entry stack: [V10, 0x48c]
Stack pops: 1
Stack additions: [S0, V393]
Exit stack: [V10, 0x48c, V393]

================================

Block 0x614
[0x614:0x61f]
---
Predecessors: [0x4ad]
Successors: [0x620, 0x621]
---
0x614 JUMPDEST
0x615 PUSH1 0x4
0x617 SLOAD
0x618 TIMESTAMP
0x619 LT
0x61a ISZERO
0x61b ISZERO
0x61c PUSH2 0x621
0x61f JUMPI
---
0x614: JUMPDEST 
0x615: V394 = 0x4
0x617: V395 = S[0x4]
0x618: V396 = TIMESTAMP
0x619: V397 = LT V396 V395
0x61a: V398 = ISZERO V397
0x61b: V399 = ISZERO V398
0x61c: V400 = 0x621
0x61f: JUMPI 0x621 V399
---
Entry stack: [V10, 0x4b5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4b5]

================================

Block 0x620
[0x620:0x620]
---
Predecessors: [0x614]
Successors: [0x621]
---
0x620 JUMPDEST
---
0x620: JUMPDEST 
---
Entry stack: [V10, 0x4b5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4b5]

================================

Block 0x621
[0x621:0x621]
---
Predecessors: [0x614, 0x620]
Successors: [0x622]
---
0x621 JUMPDEST
---
0x621: JUMPDEST 
---
Entry stack: [V10, 0x4b5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4b5]

================================

Block 0x622
[0x622:0x623]
---
Predecessors: [0x621]
Successors: [0x4b5]
---
0x622 JUMPDEST
0x623 JUMP
---
0x622: JUMPDEST 
0x623: JUMP 0x4b5
---
Entry stack: [V10, 0x4b5]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x624
[0x624:0x64f]
---
Predecessors: []
Successors: []
---
0x624 STOP
0x625 LOG1
0x626 PUSH6 0x627a7a723058
0x62d SHA3
0x62e PUSH23 0xf982565cda4b81e447420f081b92ab8df478e114281cfd
0x646 MISSING 0x2a
0x647 MISSING 0xb1
0x648 MISSING 0xc5
0x649 DUP16
0x64a MLOAD
0x64b MLOAD
0x64c MISSING 0x24
0x64d SWAP16
0x64e STOP
0x64f MISSING 0x29
---
0x624: STOP 
0x625: LOG S0 S1 S2
0x626: V401 = 0x627a7a723058
0x62d: V402 = SHA3 0x627a7a723058 S3
0x62e: V403 = 0xf982565cda4b81e447420f081b92ab8df478e114281cfd
0x646: MISSING 0x2a
0x647: MISSING 0xb1
0x648: MISSING 0xc5
0x64a: V404 = M[S15]
0x64b: V405 = M[V404]
0x64c: MISSING 0x24
0x64e: STOP 
0x64f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf982565cda4b81e447420f081b92ab8df478e114281cfd, V402, V405, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x2f2
Exit block: 0x305
Body: 0x2f2, 0x2f9, 0x2fd, 0x305, 0x4b7, 0x4c3, 0x4d0, 0x579, 0x595, 0x596, 0x597

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x307
Exit block: 0x31a
Body: 0x307, 0x30e, 0x312, 0x31a, 0x599

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x330
Exit block: 0x343
Body: 0x330, 0x337, 0x33b, 0x343, 0x59f

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x385
Exit block: 0x398
Body: 0x385, 0x38c, 0x390, 0x398, 0x5c4

Function 4:
Public function signature: 0x70a08231
Entry block: 0x3da
Exit block: 0x411
Body: 0x3da, 0x3e1, 0x3e5, 0x411, 0x5ea

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x427
Exit block: 0x43a
Body: 0x427, 0x42e, 0x432, 0x43a, 0x602

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x450
Exit block: 0x463
Body: 0x450, 0x457, 0x45b, 0x463, 0x608

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x479
Exit block: 0x48c
Body: 0x479, 0x480, 0x484, 0x48c, 0x60e

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x4a2
Exit block: 0x4b5
Body: 0x4a2, 0x4a9, 0x4ad, 0x4b5, 0x614, 0x620, 0x621, 0x622

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x2e4
Body: 0x97, 0x98, 0xb3, 0xb7, 0x111, 0x118, 0x11e, 0x186, 0x190, 0x250, 0x251, 0x2d3, 0x2d7, 0x2e4, 0x2e8, 0x2ec, 0x2ed, 0x2ee

