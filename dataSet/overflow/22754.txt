Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd2]
---
0x41 DUP1
0x42 PUSH4 0x93e84cd9
0x47 EQ
0x48 PUSH2 0xd2
0x4b JUMPI
---
0x42: V15 = 0x93e84cd9
0x47: V16 = EQ 0x93e84cd9 V11
0x48: V17 = 0xd2
0x4b: JUMPI 0xd2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xdc]
---
0x4c DUP1
0x4d PUSH4 0xa2e800ad
0x52 EQ
0x53 PUSH2 0xdc
0x56 JUMPI
---
0x4d: V18 = 0xa2e800ad
0x52: V19 = EQ 0xa2e800ad V11
0x53: V20 = 0xdc
0x56: JUMPI 0xdc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x105]
---
0x57 DUP1
0x58 PUSH4 0xa2fb1175
0x5d EQ
0x5e PUSH2 0x105
0x61 JUMPI
---
0x58: V21 = 0xa2fb1175
0x5d: V22 = EQ 0xa2fb1175 V11
0x5e: V23 = 0x105
0x61: JUMPI 0x105 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x168]
---
0x62 DUP1
0x63 PUSH4 0xda9d83ea
0x68 EQ
0x69 PUSH2 0x168
0x6c JUMPI
---
0x63: V24 = 0xda9d83ea
0x68: V25 = EQ 0xda9d83ea V11
0x69: V26 = 0x168
0x6c: JUMPI 0x168 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1cb]
---
0x6d DUP1
0x6e PUSH4 0xdc0b3564
0x73 EQ
0x74 PUSH2 0x1cb
0x77 JUMPI
---
0x6e: V27 = 0xdc0b3564
0x73: V28 = EQ 0xdc0b3564 V11
0x74: V29 = 0x1cb
0x77: JUMPI 0x1cb V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x7d]
Successors: [0x1f4]
---
0x88 JUMPDEST
0x89 PUSH2 0x90
0x8c PUSH2 0x1f4
0x8f JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0x90
0x8c: V36 = 0x1f4
0x8f: JUMP 0x1f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90]
Exit stack: [V11, 0x90]

================================

Block 0x90
[0x90:0xd1]
---
Predecessors: [0x1f4]
Successors: []
---
0x90 JUMPDEST
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP3
0x96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab AND
0xac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1 AND
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP2
0xc8 POP
0xc9 POP
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce SWAP2
0xcf SUB
0xd0 SWAP1
0xd1 RETURN
---
0x90: JUMPDEST 
0x91: V37 = 0x40
0x93: V38 = M[0x40]
0x96: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xab: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0xac: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc3: M[V38] = V42
0xc4: V43 = 0x20
0xc6: V44 = ADD 0x20 V38
0xca: V45 = 0x40
0xcc: V46 = M[0x40]
0xcf: V47 = SUB V44 V46
0xd1: RETURN V46 V47
---
Entry stack: [V11, 0x90, V124]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0x41]
Successors: [0x219]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xda
0xd6 PUSH2 0x219
0xd9 JUMP
---
0xd2: JUMPDEST 
0xd3: V48 = 0xda
0xd6: V49 = 0x219
0xd9: JUMP 0x219
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V11, 0xda]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: [0x58c, 0x640]
Successors: []
---
0xda JUMPDEST
0xdb STOP
---
0xda: JUMPDEST 
0xdb: STOP 
---
Entry stack: [V11, 0xda, S3, {0x2, 0x3}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S3, {0x2, 0x3}, S1, S0]

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0x4c]
Successors: [0xe3, 0xe7]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe7
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V50 = CALLVALUE
0xde: V51 = ISZERO V50
0xdf: V52 = 0xe7
0xe2: JUMPI 0xe7 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe3: V53 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdc]
Successors: [0x58f]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xef
0xeb PUSH2 0x58f
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V54 = 0xef
0xeb: V55 = 0x58f
0xee: JUMP 0x58f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x104]
---
Predecessors: [0x58f]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 DUP3
0xf5 DUP2
0xf6 MSTORE
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP2
0xfb POP
0xfc POP
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 SWAP2
0x102 SUB
0x103 SWAP1
0x104 RETURN
---
0xef: JUMPDEST 
0xf0: V56 = 0x40
0xf2: V57 = M[0x40]
0xf6: M[V57] = V348
0xf7: V58 = 0x20
0xf9: V59 = ADD 0x20 V57
0xfd: V60 = 0x40
0xff: V61 = M[0x40]
0x102: V62 = SUB V59 V61
0x104: RETURN V61 V62
---
Entry stack: [V11, 0xef, V348]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xef]

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0x57]
Successors: [0x10c, 0x110]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V63 = CALLVALUE
0x107: V64 = ISZERO V63
0x108: V65 = 0x110
0x10b: JUMPI 0x110 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x105]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V66 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x110
[0x110:0x125]
---
Predecessors: [0x105]
Successors: [0x595]
---
0x110 JUMPDEST
0x111 PUSH2 0x126
0x114 PUSH1 0x4
0x116 DUP1
0x117 DUP1
0x118 CALLDATALOAD
0x119 SWAP1
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e SWAP2
0x11f SWAP1
0x120 POP
0x121 POP
0x122 PUSH2 0x595
0x125 JUMP
---
0x110: JUMPDEST 
0x111: V67 = 0x126
0x114: V68 = 0x4
0x118: V69 = CALLDATALOAD 0x4
0x11a: V70 = 0x20
0x11c: V71 = ADD 0x20 0x4
0x122: V72 = 0x595
0x125: JUMP 0x595
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x126, V69]
Exit stack: [V11, 0x126, V69]

================================

Block 0x126
[0x126:0x167]
---
Predecessors: [0x5a4]
Successors: []
---
0x126 JUMPDEST
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b DUP3
0x12c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x141 AND
0x142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x157 AND
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d SWAP2
0x15e POP
0x15f POP
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 SWAP2
0x165 SUB
0x166 SWAP1
0x167 RETURN
---
0x126: JUMPDEST 
0x127: V73 = 0x40
0x129: V74 = M[0x40]
0x12c: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x141: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x142: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x157: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x159: M[V74] = V78
0x15a: V79 = 0x20
0x15c: V80 = ADD 0x20 V74
0x160: V81 = 0x40
0x162: V82 = M[0x40]
0x165: V83 = SUB V80 V82
0x167: RETURN V82 V83
---
Entry stack: [V11, 0x126, V366]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x62]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V84 = CALLVALUE
0x16a: V85 = ISZERO V84
0x16b: V86 = 0x173
0x16e: JUMPI 0x173 V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V87 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x173
[0x173:0x188]
---
Predecessors: [0x168]
Successors: [0x5d4]
---
0x173 JUMPDEST
0x174 PUSH2 0x189
0x177 PUSH1 0x4
0x179 DUP1
0x17a DUP1
0x17b CALLDATALOAD
0x17c SWAP1
0x17d PUSH1 0x20
0x17f ADD
0x180 SWAP1
0x181 SWAP2
0x182 SWAP1
0x183 POP
0x184 POP
0x185 PUSH2 0x5d4
0x188 JUMP
---
0x173: JUMPDEST 
0x174: V88 = 0x189
0x177: V89 = 0x4
0x17b: V90 = CALLDATALOAD 0x4
0x17d: V91 = 0x20
0x17f: V92 = ADD 0x20 0x4
0x185: V93 = 0x5d4
0x188: JUMP 0x5d4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x189, V90]
Exit stack: [V11, 0x189, V90]

================================

Block 0x189
[0x189:0x1ca]
---
Predecessors: [0x5e3]
Successors: []
---
0x189 JUMPDEST
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e DUP3
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP2
0x1c1 POP
0x1c2 POP
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x189: JUMPDEST 
0x18a: V94 = 0x40
0x18c: V95 = M[0x40]
0x18f: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x1a5: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1bc: M[V95] = V99
0x1bd: V100 = 0x20
0x1bf: V101 = ADD 0x20 V95
0x1c3: V102 = 0x40
0x1c5: V103 = M[0x40]
0x1c8: V104 = SUB V101 V103
0x1ca: RETURN V103 V104
---
Entry stack: [V11, 0x189, V384]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x189]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x6d]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V105 = CALLVALUE
0x1cd: V106 = ISZERO V105
0x1ce: V107 = 0x1d6
0x1d1: JUMPI 0x1d6 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V108 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x613]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x1de
0x1da PUSH2 0x613
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V109 = 0x1de
0x1da: V110 = 0x613
0x1dd: JUMP 0x613
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V11, 0x1de]

================================

Block 0x1de
[0x1de:0x1f3]
---
Predecessors: [0x613]
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 DUP3
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP2
0x1ea POP
0x1eb POP
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef DUP1
0x1f0 SWAP2
0x1f1 SUB
0x1f2 SWAP1
0x1f3 RETURN
---
0x1de: JUMPDEST 
0x1df: V111 = 0x40
0x1e1: V112 = M[0x40]
0x1e5: M[V112] = V386
0x1e6: V113 = 0x20
0x1e8: V114 = ADD 0x20 V112
0x1ec: V115 = 0x40
0x1ee: V116 = M[0x40]
0x1f1: V117 = SUB V114 V116
0x1f3: RETURN V116 V117
---
Entry stack: [V11, 0x1de, V386]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1de]

================================

Block 0x1f4
[0x1f4:0x218]
---
Predecessors: [0x88]
Successors: [0x90]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 SWAP1
0x1f9 SLOAD
0x1fa SWAP1
0x1fb PUSH2 0x100
0x1fe EXP
0x1ff SWAP1
0x200 DIV
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 DUP2
0x218 JUMP
---
0x1f4: JUMPDEST 
0x1f5: V118 = 0x0
0x1f9: V119 = S[0x0]
0x1fb: V120 = 0x100
0x1fe: V121 = EXP 0x100 0x0
0x200: V122 = DIV V119 0x1
0x201: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x218: JUMP 0x90
---
Entry stack: [V11, 0x90]
Stack pops: 1
Stack additions: [S0, V124]
Exit stack: [V11, 0x90, V124]

================================

Block 0x219
[0x219:0x226]
---
Predecessors: [0xd2]
Successors: [0x227, 0x22b]
---
0x219 JUMPDEST
0x21a PUSH1 0x0
0x21c PUSH1 0x4
0x21e SLOAD
0x21f CALLVALUE
0x220 EQ
0x221 ISZERO
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x219: JUMPDEST 
0x21a: V125 = 0x0
0x21c: V126 = 0x4
0x21e: V127 = S[0x4]
0x21f: V128 = CALLVALUE
0x220: V129 = EQ V128 V127
0x221: V130 = ISZERO V129
0x222: V131 = ISZERO V130
0x223: V132 = 0x22b
0x226: JUMPI 0x22b V131
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xda, 0x0]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x219]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V133 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, 0x0]

================================

Block 0x22b
[0x22b:0x23e]
---
Predecessors: [0x219]
Successors: [0x619]
---
0x22b JUMPDEST
0x22c PUSH1 0x2
0x22e DUP1
0x22f SLOAD
0x230 DUP1
0x231 PUSH1 0x1
0x233 ADD
0x234 DUP3
0x235 DUP2
0x236 PUSH2 0x23f
0x239 SWAP2
0x23a SWAP1
0x23b PUSH2 0x619
0x23e JUMP
---
0x22b: JUMPDEST 
0x22c: V134 = 0x2
0x22f: V135 = S[0x2]
0x231: V136 = 0x1
0x233: V137 = ADD 0x1 V135
0x236: V138 = 0x23f
0x23b: V139 = 0x619
0x23e: JUMP 0x619
---
Entry stack: [V11, 0xda, 0x0]
Stack pops: 0
Stack additions: [0x2, V135, V137, 0x23f, 0x2, V137]
Exit stack: [V11, 0xda, 0x0, 0x2, V135, V137, 0x23f, 0x2, V137]

================================

Block 0x23f
[0x23f:0x30c]
---
Predecessors: [0x58c, 0x640]
Successors: [0x30d, 0x58c]
---
0x23f JUMPDEST
0x240 SWAP2
0x241 PUSH1 0x0
0x243 MSTORE
0x244 PUSH1 0x20
0x246 PUSH1 0x0
0x248 SHA3
0x249 SWAP1
0x24a ADD
0x24b PUSH1 0x0
0x24d CALLER
0x24e SWAP1
0x24f SWAP2
0x250 SWAP1
0x251 SWAP2
0x252 PUSH2 0x100
0x255 EXP
0x256 DUP2
0x257 SLOAD
0x258 DUP2
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e MUL
0x26f NOT
0x270 AND
0x271 SWAP1
0x272 DUP4
0x273 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x288 AND
0x289 MUL
0x28a OR
0x28b SWAP1
0x28c SSTORE
0x28d POP
0x28e POP
0x28f PUSH1 0x1
0x291 DUP1
0x292 PUSH1 0x0
0x294 DUP3
0x295 DUP3
0x296 SLOAD
0x297 ADD
0x298 SWAP3
0x299 POP
0x29a POP
0x29b DUP2
0x29c SWAP1
0x29d SSTORE
0x29e POP
0x29f PUSH32 0x193ea1ce759b228e90949deb51c9928e29c42b8435835dd0e255a3eae316864d
0x2c0 CALLER
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 DUP3
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f1 AND
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x20
0x2f6 ADD
0x2f7 SWAP2
0x2f8 POP
0x2f9 POP
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd DUP1
0x2fe SWAP2
0x2ff SUB
0x300 SWAP1
0x301 LOG1
0x302 PUSH1 0x9
0x304 PUSH1 0x1
0x306 SLOAD
0x307 GT
0x308 ISZERO
0x309 PUSH2 0x58c
0x30c JUMPI
---
0x23f: JUMPDEST 
0x241: V140 = 0x0
0x243: M[0x0] = {0x2, 0x3}
0x244: V141 = 0x20
0x246: V142 = 0x0
0x248: V143 = SHA3 0x0 0x20
0x24a: V144 = ADD S1 V143
0x24b: V145 = 0x0
0x24d: V146 = CALLER
0x252: V147 = 0x100
0x255: V148 = EXP 0x100 0x0
0x257: V149 = S[V144]
0x259: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V151 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x26f: V152 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x270: V153 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V149
0x273: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x288: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x289: V156 = MUL V155 0x1
0x28a: V157 = OR V156 V153
0x28c: S[V144] = V157
0x28f: V158 = 0x1
0x292: V159 = 0x0
0x296: V160 = S[0x1]
0x297: V161 = ADD V160 0x1
0x29d: S[0x1] = V161
0x29f: V162 = 0x193ea1ce759b228e90949deb51c9928e29c42b8435835dd0e255a3eae316864d
0x2c0: V163 = CALLER
0x2c1: V164 = 0x40
0x2c3: V165 = M[0x40]
0x2c6: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2dc: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f1: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2f3: M[V165] = V169
0x2f4: V170 = 0x20
0x2f6: V171 = ADD 0x20 V165
0x2fa: V172 = 0x40
0x2fc: V173 = M[0x40]
0x2ff: V174 = SUB V171 V173
0x301: LOG V173 V174 0x193ea1ce759b228e90949deb51c9928e29c42b8435835dd0e255a3eae316864d
0x302: V175 = 0x9
0x304: V176 = 0x1
0x306: V177 = S[0x1]
0x307: V178 = GT V177 0x9
0x308: V179 = ISZERO V178
0x309: V180 = 0x58c
0x30c: JUMPI 0x58c V179
---
Entry stack: [V11, 0xda, S3, {0x2, 0x3}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xda, S3]

================================

Block 0x30d
[0x30d:0x320]
---
Predecessors: [0x23f]
Successors: [0x321, 0x322]
---
0x30d PUSH1 0x1
0x30f PUSH1 0xa
0x311 PUSH1 0x1
0x313 NUMBER
0x314 SUB
0x315 BLOCKHASH
0x316 PUSH1 0x1
0x318 SWAP1
0x319 DIV
0x31a DUP2
0x31b ISZERO
0x31c ISZERO
0x31d PUSH2 0x322
0x320 JUMPI
---
0x30d: V181 = 0x1
0x30f: V182 = 0xa
0x311: V183 = 0x1
0x313: V184 = NUMBER
0x314: V185 = SUB V184 0x1
0x315: V186 = BLOCKHASH V185
0x316: V187 = 0x1
0x319: V188 = DIV V186 0x1
0x31b: V189 = ISZERO 0xa
0x31c: V190 = ISZERO 0x0
0x31d: V191 = 0x322
0x320: JUMPI 0x322 0x1
---
Entry stack: [V11, 0xda, S0]
Stack pops: 0
Stack additions: [0x1, 0xa, V188]
Exit stack: [V11, 0xda, S0, 0x1, 0xa, V188]

================================

Block 0x321
[0x321:0x321]
---
Predecessors: [0x30d]
Successors: []
---
0x321 INVALID
---
0x321: INVALID 
---
Entry stack: [V11, 0xda, S3, 0x1, 0xa, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S3, 0x1, 0xa, V188]

================================

Block 0x322
[0x322:0x339]
---
Predecessors: [0x30d]
Successors: [0x619]
---
0x322 JUMPDEST
0x323 MOD
0x324 ADD
0x325 SWAP1
0x326 POP
0x327 PUSH1 0x3
0x329 DUP1
0x32a SLOAD
0x32b DUP1
0x32c PUSH1 0x1
0x32e ADD
0x32f DUP3
0x330 DUP2
0x331 PUSH2 0x33a
0x334 SWAP2
0x335 SWAP1
0x336 PUSH2 0x619
0x339 JUMP
---
0x322: JUMPDEST 
0x323: V192 = MOD V188 0xa
0x324: V193 = ADD V192 0x1
0x327: V194 = 0x3
0x32a: V195 = S[0x3]
0x32c: V196 = 0x1
0x32e: V197 = ADD 0x1 V195
0x331: V198 = 0x33a
0x336: V199 = 0x619
0x339: JUMP 0x619
---
Entry stack: [V11, 0xda, S3, 0x1, 0xa, V188]
Stack pops: 4
Stack additions: [V193, 0x3, V195, V197, 0x33a, 0x3, V197]
Exit stack: [V11, 0xda, V193, 0x3, V195, V197, 0x33a, 0x3, V197]

================================

Block 0x33a
[0x33a:0x354]
---
Predecessors: [0x58c, 0x640]
Successors: [0x355, 0x356]
---
0x33a JUMPDEST
0x33b SWAP2
0x33c PUSH1 0x0
0x33e MSTORE
0x33f PUSH1 0x20
0x341 PUSH1 0x0
0x343 SHA3
0x344 SWAP1
0x345 ADD
0x346 PUSH1 0x0
0x348 PUSH1 0x2
0x34a DUP5
0x34b DUP2
0x34c SLOAD
0x34d DUP2
0x34e LT
0x34f ISZERO
0x350 ISZERO
0x351 PUSH2 0x356
0x354 JUMPI
---
0x33a: JUMPDEST 
0x33c: V200 = 0x0
0x33e: M[0x0] = {0x2, 0x3}
0x33f: V201 = 0x20
0x341: V202 = 0x0
0x343: V203 = SHA3 0x0 0x20
0x345: V204 = ADD S1 V203
0x346: V205 = 0x0
0x348: V206 = 0x2
0x34c: V207 = S[0x2]
0x34e: V208 = LT S3 V207
0x34f: V209 = ISZERO V208
0x350: V210 = ISZERO V209
0x351: V211 = 0x356
0x354: JUMPI 0x356 V210
---
Entry stack: [V11, 0xda, S3, {0x2, 0x3}, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, V204, 0x0, 0x2, S3]
Exit stack: [V11, 0xda, S3, S0, V204, 0x0, 0x2, S3]

================================

Block 0x355
[0x355:0x355]
---
Predecessors: [0x33a]
Successors: []
---
0x355 INVALID
---
0x355: INVALID 
---
Entry stack: [V11, 0xda, S5, S4, V204, 0x0, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S5, S4, V204, 0x0, 0x2, S0]

================================

Block 0x356
[0x356:0x3d0]
---
Predecessors: [0x33a]
Successors: [0x3d1, 0x3d2]
---
0x356 JUMPDEST
0x357 SWAP1
0x358 PUSH1 0x0
0x35a MSTORE
0x35b PUSH1 0x20
0x35d PUSH1 0x0
0x35f SHA3
0x360 SWAP1
0x361 ADD
0x362 PUSH1 0x0
0x364 SWAP1
0x365 SLOAD
0x366 SWAP1
0x367 PUSH2 0x100
0x36a EXP
0x36b SWAP1
0x36c DIV
0x36d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x382 AND
0x383 SWAP1
0x384 SWAP2
0x385 SWAP1
0x386 SWAP2
0x387 PUSH2 0x100
0x38a EXP
0x38b DUP2
0x38c SLOAD
0x38d DUP2
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 MUL
0x3a4 NOT
0x3a5 AND
0x3a6 SWAP1
0x3a7 DUP4
0x3a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bd AND
0x3be MUL
0x3bf OR
0x3c0 SWAP1
0x3c1 SSTORE
0x3c2 POP
0x3c3 POP
0x3c4 PUSH1 0x2
0x3c6 DUP2
0x3c7 DUP2
0x3c8 SLOAD
0x3c9 DUP2
0x3ca LT
0x3cb ISZERO
0x3cc ISZERO
0x3cd PUSH2 0x3d2
0x3d0 JUMPI
---
0x356: JUMPDEST 
0x358: V212 = 0x0
0x35a: M[0x0] = 0x2
0x35b: V213 = 0x20
0x35d: V214 = 0x0
0x35f: V215 = SHA3 0x0 0x20
0x361: V216 = ADD S0 V215
0x362: V217 = 0x0
0x365: V218 = S[V216]
0x367: V219 = 0x100
0x36a: V220 = EXP 0x100 0x0
0x36c: V221 = DIV V218 0x1
0x36d: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x382: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x387: V224 = 0x100
0x38a: V225 = EXP 0x100 0x0
0x38c: V226 = S[V204]
0x38e: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V228 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3a4: V229 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V230 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V226
0x3a8: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x3be: V233 = MUL V232 0x1
0x3bf: V234 = OR V233 V230
0x3c1: S[V204] = V234
0x3c4: V235 = 0x2
0x3c8: V236 = S[0x2]
0x3ca: V237 = LT S5 V236
0x3cb: V238 = ISZERO V237
0x3cc: V239 = ISZERO V238
0x3cd: V240 = 0x3d2
0x3d0: JUMPI 0x3d2 V239
---
Entry stack: [V11, 0xda, S5, S4, V204, 0x0, 0x2, S0]
Stack pops: 6
Stack additions: [S5, 0x2, S5]
Exit stack: [V11, 0xda, S5, 0x2, S5]

================================

Block 0x3d1
[0x3d1:0x3d1]
---
Predecessors: [0x356]
Successors: []
---
0x3d1 INVALID
---
0x3d1: INVALID 
---
Entry stack: [V11, 0xda, S2, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S2, 0x2, S0]

================================

Block 0x3d2
[0x3d2:0x43d]
---
Predecessors: [0x356]
Successors: [0x43e, 0x442]
---
0x3d2 JUMPDEST
0x3d3 SWAP1
0x3d4 PUSH1 0x0
0x3d6 MSTORE
0x3d7 PUSH1 0x20
0x3d9 PUSH1 0x0
0x3db SHA3
0x3dc SWAP1
0x3dd ADD
0x3de PUSH1 0x0
0x3e0 SWAP1
0x3e1 SLOAD
0x3e2 SWAP1
0x3e3 PUSH2 0x100
0x3e6 EXP
0x3e7 SWAP1
0x3e8 DIV
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x414 AND
0x415 PUSH2 0x8fc
0x418 PUSH1 0x4
0x41a SLOAD
0x41b PUSH1 0x8
0x41d MUL
0x41e SWAP1
0x41f DUP2
0x420 ISZERO
0x421 MUL
0x422 SWAP1
0x423 PUSH1 0x40
0x425 MLOAD
0x426 PUSH1 0x0
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c DUP4
0x42d SUB
0x42e DUP2
0x42f DUP6
0x430 DUP9
0x431 DUP9
0x432 CALL
0x433 SWAP4
0x434 POP
0x435 POP
0x436 POP
0x437 POP
0x438 ISZERO
0x439 ISZERO
0x43a PUSH2 0x442
0x43d JUMPI
---
0x3d2: JUMPDEST 
0x3d4: V241 = 0x0
0x3d6: M[0x0] = 0x2
0x3d7: V242 = 0x20
0x3d9: V243 = 0x0
0x3db: V244 = SHA3 0x0 0x20
0x3dd: V245 = ADD S0 V244
0x3de: V246 = 0x0
0x3e1: V247 = S[V245]
0x3e3: V248 = 0x100
0x3e6: V249 = EXP 0x100 0x0
0x3e8: V250 = DIV V247 0x1
0x3e9: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x3ff: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x414: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x415: V255 = 0x8fc
0x418: V256 = 0x4
0x41a: V257 = S[0x4]
0x41b: V258 = 0x8
0x41d: V259 = MUL 0x8 V257
0x420: V260 = ISZERO V259
0x421: V261 = MUL V260 0x8fc
0x423: V262 = 0x40
0x425: V263 = M[0x40]
0x426: V264 = 0x0
0x428: V265 = 0x40
0x42a: V266 = M[0x40]
0x42d: V267 = SUB V263 V266
0x432: V268 = CALL V261 V254 V259 V266 V267 V266 0x0
0x438: V269 = ISZERO V268
0x439: V270 = ISZERO V269
0x43a: V271 = 0x442
0x43d: JUMPI 0x442 V270
---
Entry stack: [V11, 0xda, S2, 0x2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xda, S2]

================================

Block 0x43e
[0x43e:0x441]
---
Predecessors: [0x3d2]
Successors: []
---
0x43e PUSH1 0x0
0x440 DUP1
0x441 REVERT
---
0x43e: V272 = 0x0
0x441: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S0]

================================

Block 0x442
[0x442:0x470]
---
Predecessors: [0x3d2]
Successors: [0x471, 0x472]
---
0x442 JUMPDEST
0x443 PUSH32 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704
0x464 PUSH1 0x2
0x466 DUP3
0x467 DUP2
0x468 SLOAD
0x469 DUP2
0x46a LT
0x46b ISZERO
0x46c ISZERO
0x46d PUSH2 0x472
0x470 JUMPI
---
0x442: JUMPDEST 
0x443: V273 = 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704
0x464: V274 = 0x2
0x468: V275 = S[0x2]
0x46a: V276 = LT S0 V275
0x46b: V277 = ISZERO V276
0x46c: V278 = ISZERO V277
0x46d: V279 = 0x472
0x470: JUMPI 0x472 V278
---
Entry stack: [V11, 0xda, S0]
Stack pops: 1
Stack additions: [S0, 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704, 0x2, S0]
Exit stack: [V11, 0xda, S0, 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704, 0x2, S0]

================================

Block 0x471
[0x471:0x471]
---
Predecessors: [0x442]
Successors: []
---
0x471 INVALID
---
0x471: INVALID 
---
Entry stack: [V11, 0xda, S3, 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S3, 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704, 0x2, S0]

================================

Block 0x472
[0x472:0x55f]
---
Predecessors: [0x442]
Successors: [0x560, 0x564]
---
0x472 JUMPDEST
0x473 SWAP1
0x474 PUSH1 0x0
0x476 MSTORE
0x477 PUSH1 0x20
0x479 PUSH1 0x0
0x47b SHA3
0x47c SWAP1
0x47d ADD
0x47e PUSH1 0x0
0x480 SWAP1
0x481 SLOAD
0x482 SWAP1
0x483 PUSH2 0x100
0x486 EXP
0x487 SWAP1
0x488 DIV
0x489 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49e AND
0x49f PUSH1 0x4
0x4a1 SLOAD
0x4a2 PUSH1 0x8
0x4a4 MUL
0x4a5 PUSH1 0x40
0x4a7 MLOAD
0x4a8 DUP1
0x4a9 DUP4
0x4aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bf AND
0x4c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d5 AND
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x20
0x4da ADD
0x4db DUP3
0x4dc DUP2
0x4dd MSTORE
0x4de PUSH1 0x20
0x4e0 ADD
0x4e1 SWAP3
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 PUSH1 0x40
0x4e7 MLOAD
0x4e8 DUP1
0x4e9 SWAP2
0x4ea SUB
0x4eb SWAP1
0x4ec LOG1
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 SWAP1
0x4f1 SLOAD
0x4f2 SWAP1
0x4f3 PUSH2 0x100
0x4f6 EXP
0x4f7 SWAP1
0x4f8 DIV
0x4f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50e AND
0x50f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x524 AND
0x525 PUSH2 0x8fc
0x528 ADDRESS
0x529 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53e AND
0x53f BALANCE
0x540 SWAP1
0x541 DUP2
0x542 ISZERO
0x543 MUL
0x544 SWAP1
0x545 PUSH1 0x40
0x547 MLOAD
0x548 PUSH1 0x0
0x54a PUSH1 0x40
0x54c MLOAD
0x54d DUP1
0x54e DUP4
0x54f SUB
0x550 DUP2
0x551 DUP6
0x552 DUP9
0x553 DUP9
0x554 CALL
0x555 SWAP4
0x556 POP
0x557 POP
0x558 POP
0x559 POP
0x55a ISZERO
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x472: JUMPDEST 
0x474: V280 = 0x0
0x476: M[0x0] = 0x2
0x477: V281 = 0x20
0x479: V282 = 0x0
0x47b: V283 = SHA3 0x0 0x20
0x47d: V284 = ADD S0 V283
0x47e: V285 = 0x0
0x481: V286 = S[V284]
0x483: V287 = 0x100
0x486: V288 = EXP 0x100 0x0
0x488: V289 = DIV V286 0x1
0x489: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x49f: V292 = 0x4
0x4a1: V293 = S[0x4]
0x4a2: V294 = 0x8
0x4a4: V295 = MUL 0x8 V293
0x4a5: V296 = 0x40
0x4a7: V297 = M[0x40]
0x4aa: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x4c0: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x4d7: M[V297] = V301
0x4d8: V302 = 0x20
0x4da: V303 = ADD 0x20 V297
0x4dd: M[V303] = V295
0x4de: V304 = 0x20
0x4e0: V305 = ADD 0x20 V303
0x4e5: V306 = 0x40
0x4e7: V307 = M[0x40]
0x4ea: V308 = SUB V305 V307
0x4ec: LOG V307 V308 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704
0x4ed: V309 = 0x0
0x4f1: V310 = S[0x0]
0x4f3: V311 = 0x100
0x4f6: V312 = EXP 0x100 0x0
0x4f8: V313 = DIV V310 0x1
0x4f9: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x50f: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x524: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x525: V318 = 0x8fc
0x528: V319 = ADDRESS
0x529: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x53f: V322 = BALANCE V321
0x542: V323 = ISZERO V322
0x543: V324 = MUL V323 0x8fc
0x545: V325 = 0x40
0x547: V326 = M[0x40]
0x548: V327 = 0x0
0x54a: V328 = 0x40
0x54c: V329 = M[0x40]
0x54f: V330 = SUB V326 V329
0x554: V331 = CALL V324 V317 V322 V329 V330 V329 0x0
0x55a: V332 = ISZERO V331
0x55b: V333 = ISZERO V332
0x55c: V334 = 0x564
0x55f: JUMPI 0x564 V333
---
Entry stack: [V11, 0xda, S3, 0x92417cbc37ad7ac81b5fd54be3a0057181861f0909f08df35cd5b40d1756b704, 0x2, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xda, S3]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x472]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V335 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S0]

================================

Block 0x564
[0x564:0x58a]
---
Predecessors: [0x472]
Successors: [0x645]
---
0x564 JUMPDEST
0x565 PUSH1 0x1
0x567 PUSH1 0x5
0x569 PUSH1 0x0
0x56b DUP3
0x56c DUP3
0x56d SLOAD
0x56e ADD
0x56f SWAP3
0x570 POP
0x571 POP
0x572 DUP2
0x573 SWAP1
0x574 SSTORE
0x575 POP
0x576 PUSH1 0x0
0x578 PUSH1 0x1
0x57a DUP2
0x57b SWAP1
0x57c SSTORE
0x57d POP
0x57e PUSH1 0x2
0x580 PUSH1 0x0
0x582 PUSH2 0x58b
0x585 SWAP2
0x586 SWAP1
0x587 PUSH2 0x645
0x58a JUMP
---
0x564: JUMPDEST 
0x565: V336 = 0x1
0x567: V337 = 0x5
0x569: V338 = 0x0
0x56d: V339 = S[0x5]
0x56e: V340 = ADD V339 0x1
0x574: S[0x5] = V340
0x576: V341 = 0x0
0x578: V342 = 0x1
0x57c: S[0x1] = 0x0
0x57e: V343 = 0x2
0x580: V344 = 0x0
0x582: V345 = 0x58b
0x587: V346 = 0x645
0x58a: JUMP 0x645
---
Entry stack: [V11, 0xda, S0]
Stack pops: 0
Stack additions: [0x58b, 0x2, 0x0]
Exit stack: [V11, 0xda, S0, 0x58b, 0x2, 0x0]

================================

Block 0x58b
[0x58b:0x58b]
---
Predecessors: [0x663]
Successors: [0x58c]
---
0x58b JUMPDEST
---
0x58b: JUMPDEST 
---
Entry stack: [V11, 0xda, S5, {0x2, 0x3}, S3, S2, {0xda, 0x23f, 0x33a}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S5, {0x2, 0x3}, S3, S2, {0xda, 0x23f, 0x33a}, S0]

================================

Block 0x58c
[0x58c:0x58e]
---
Predecessors: [0x23f, 0x58b]
Successors: [0xda, 0x23f, 0x33a]
---
0x58c JUMPDEST
0x58d POP
0x58e JUMP
---
0x58c: JUMPDEST 
0x58e: JUMP {0xda, 0x23f, 0x33a}
---
Entry stack: [V11, 0xda, S5, {0x2, 0x3}, S3, S2, {0xda, 0x23f, 0x33a}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xda, S5, {0x2, 0x3}, S3, S2]

================================

Block 0x58f
[0x58f:0x594]
---
Predecessors: [0xe7]
Successors: [0xef]
---
0x58f JUMPDEST
0x590 PUSH1 0x5
0x592 SLOAD
0x593 DUP2
0x594 JUMP
---
0x58f: JUMPDEST 
0x590: V347 = 0x5
0x592: V348 = S[0x5]
0x594: JUMP 0xef
---
Entry stack: [V11, 0xef]
Stack pops: 1
Stack additions: [S0, V348]
Exit stack: [V11, 0xef, V348]

================================

Block 0x595
[0x595:0x5a2]
---
Predecessors: [0x110]
Successors: [0x5a3, 0x5a4]
---
0x595 JUMPDEST
0x596 PUSH1 0x3
0x598 DUP2
0x599 DUP2
0x59a SLOAD
0x59b DUP2
0x59c LT
0x59d ISZERO
0x59e ISZERO
0x59f PUSH2 0x5a4
0x5a2 JUMPI
---
0x595: JUMPDEST 
0x596: V349 = 0x3
0x59a: V350 = S[0x3]
0x59c: V351 = LT V69 V350
0x59d: V352 = ISZERO V351
0x59e: V353 = ISZERO V352
0x59f: V354 = 0x5a4
0x5a2: JUMPI 0x5a4 V353
---
Entry stack: [V11, 0x126, V69]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V11, 0x126, V69, 0x3, V69]

================================

Block 0x5a3
[0x5a3:0x5a3]
---
Predecessors: [0x595]
Successors: []
---
0x5a3 INVALID
---
0x5a3: INVALID 
---
Entry stack: [V11, 0x126, V69, 0x3, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126, V69, 0x3, V69]

================================

Block 0x5a4
[0x5a4:0x5d3]
---
Predecessors: [0x595]
Successors: [0x126]
---
0x5a4 JUMPDEST
0x5a5 SWAP1
0x5a6 PUSH1 0x0
0x5a8 MSTORE
0x5a9 PUSH1 0x20
0x5ab PUSH1 0x0
0x5ad SHA3
0x5ae SWAP1
0x5af ADD
0x5b0 PUSH1 0x0
0x5b2 SWAP2
0x5b3 POP
0x5b4 SLOAD
0x5b5 SWAP1
0x5b6 PUSH2 0x100
0x5b9 EXP
0x5ba SWAP1
0x5bb DIV
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 DUP2
0x5d3 JUMP
---
0x5a4: JUMPDEST 
0x5a6: V355 = 0x0
0x5a8: M[0x0] = 0x3
0x5a9: V356 = 0x20
0x5ab: V357 = 0x0
0x5ad: V358 = SHA3 0x0 0x20
0x5af: V359 = ADD V69 V358
0x5b0: V360 = 0x0
0x5b4: V361 = S[V359]
0x5b6: V362 = 0x100
0x5b9: V363 = EXP 0x100 0x0
0x5bb: V364 = DIV V361 0x1
0x5bc: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x5d3: JUMP 0x126
---
Entry stack: [V11, 0x126, V69, 0x3, V69]
Stack pops: 4
Stack additions: [S3, V366]
Exit stack: [V11, 0x126, V366]

================================

Block 0x5d4
[0x5d4:0x5e1]
---
Predecessors: [0x173]
Successors: [0x5e2, 0x5e3]
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x2
0x5d7 DUP2
0x5d8 DUP2
0x5d9 SLOAD
0x5da DUP2
0x5db LT
0x5dc ISZERO
0x5dd ISZERO
0x5de PUSH2 0x5e3
0x5e1 JUMPI
---
0x5d4: JUMPDEST 
0x5d5: V367 = 0x2
0x5d9: V368 = S[0x2]
0x5db: V369 = LT V90 V368
0x5dc: V370 = ISZERO V369
0x5dd: V371 = ISZERO V370
0x5de: V372 = 0x5e3
0x5e1: JUMPI 0x5e3 V371
---
Entry stack: [V11, 0x189, V90]
Stack pops: 1
Stack additions: [S0, 0x2, S0]
Exit stack: [V11, 0x189, V90, 0x2, V90]

================================

Block 0x5e2
[0x5e2:0x5e2]
---
Predecessors: [0x5d4]
Successors: []
---
0x5e2 INVALID
---
0x5e2: INVALID 
---
Entry stack: [V11, 0x189, V90, 0x2, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V90, 0x2, V90]

================================

Block 0x5e3
[0x5e3:0x612]
---
Predecessors: [0x5d4]
Successors: [0x189]
---
0x5e3 JUMPDEST
0x5e4 SWAP1
0x5e5 PUSH1 0x0
0x5e7 MSTORE
0x5e8 PUSH1 0x20
0x5ea PUSH1 0x0
0x5ec SHA3
0x5ed SWAP1
0x5ee ADD
0x5ef PUSH1 0x0
0x5f1 SWAP2
0x5f2 POP
0x5f3 SLOAD
0x5f4 SWAP1
0x5f5 PUSH2 0x100
0x5f8 EXP
0x5f9 SWAP1
0x5fa DIV
0x5fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x610 AND
0x611 DUP2
0x612 JUMP
---
0x5e3: JUMPDEST 
0x5e5: V373 = 0x0
0x5e7: M[0x0] = 0x2
0x5e8: V374 = 0x20
0x5ea: V375 = 0x0
0x5ec: V376 = SHA3 0x0 0x20
0x5ee: V377 = ADD V90 V376
0x5ef: V378 = 0x0
0x5f3: V379 = S[V377]
0x5f5: V380 = 0x100
0x5f8: V381 = EXP 0x100 0x0
0x5fa: V382 = DIV V379 0x1
0x5fb: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x610: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x612: JUMP 0x189
---
Entry stack: [V11, 0x189, V90, 0x2, V90]
Stack pops: 4
Stack additions: [S3, V384]
Exit stack: [V11, 0x189, V384]

================================

Block 0x613
[0x613:0x618]
---
Predecessors: [0x1d6]
Successors: [0x1de]
---
0x613 JUMPDEST
0x614 PUSH1 0x1
0x616 SLOAD
0x617 DUP2
0x618 JUMP
---
0x613: JUMPDEST 
0x614: V385 = 0x1
0x616: V386 = S[0x1]
0x618: JUMP 0x1de
---
Entry stack: [V11, 0x1de]
Stack pops: 1
Stack additions: [S0, V386]
Exit stack: [V11, 0x1de, V386]

================================

Block 0x619
[0x619:0x626]
---
Predecessors: [0x22b, 0x322]
Successors: [0x627, 0x640]
---
0x619 JUMPDEST
0x61a DUP2
0x61b SLOAD
0x61c DUP2
0x61d DUP4
0x61e SSTORE
0x61f DUP2
0x620 DUP2
0x621 ISZERO
0x622 GT
0x623 PUSH2 0x640
0x626 JUMPI
---
0x619: JUMPDEST 
0x61b: V387 = S[{0x2, 0x3}]
0x61e: S[{0x2, 0x3}] = S0
0x621: V388 = ISZERO V387
0x622: V389 = GT V388 S0
0x623: V390 = 0x640
0x626: JUMPI 0x640 V389
---
Entry stack: [V11, 0xda, S6, {0x2, 0x3}, S4, S3, {0x23f, 0x33a}, {0x2, 0x3}, S0]
Stack pops: 2
Stack additions: [S1, S0, V387]
Exit stack: [V11, 0xda, S6, {0x2, 0x3}, S4, S3, {0x23f, 0x33a}, {0x2, 0x3}, S0, V387]

================================

Block 0x627
[0x627:0x63e]
---
Predecessors: [0x619]
Successors: [0x666]
---
0x627 DUP2
0x628 DUP4
0x629 PUSH1 0x0
0x62b MSTORE
0x62c PUSH1 0x20
0x62e PUSH1 0x0
0x630 SHA3
0x631 SWAP2
0x632 DUP3
0x633 ADD
0x634 SWAP2
0x635 ADD
0x636 PUSH2 0x63f
0x639 SWAP2
0x63a SWAP1
0x63b PUSH2 0x666
0x63e JUMP
---
0x629: V391 = 0x0
0x62b: M[0x0] = {0x2, 0x3}
0x62c: V392 = 0x20
0x62e: V393 = 0x0
0x630: V394 = SHA3 0x0 0x20
0x633: V395 = ADD V394 V387
0x635: V396 = ADD V394 S1
0x636: V397 = 0x63f
0x63b: V398 = 0x666
0x63e: JUMP 0x666
---
Entry stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4, {0x23f, 0x33a}, {0x2, 0x3}, S1, V387]
Stack pops: 3
Stack additions: [S2, S1, 0x63f, V395, V396]
Exit stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4, {0x23f, 0x33a}, {0x2, 0x3}, S1, 0x63f, V395, V396]

================================

Block 0x63f
[0x63f:0x63f]
---
Predecessors: [0x688]
Successors: [0x640]
---
0x63f JUMPDEST
---
0x63f: JUMPDEST 
---
Entry stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4, {0xda, 0x23f, 0x33a}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4, {0xda, 0x23f, 0x33a}, S2, S1, S0]

================================

Block 0x640
[0x640:0x644]
---
Predecessors: [0x619, 0x63f]
Successors: [0xda, 0x23f, 0x33a]
---
0x640 JUMPDEST
0x641 POP
0x642 POP
0x643 POP
0x644 JUMP
---
0x640: JUMPDEST 
0x644: JUMP {0xda, 0x23f, 0x33a}
---
Entry stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4, {0xda, 0x23f, 0x33a}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4]

================================

Block 0x645
[0x645:0x662]
---
Predecessors: [0x564]
Successors: [0x666]
---
0x645 JUMPDEST
0x646 POP
0x647 DUP1
0x648 SLOAD
0x649 PUSH1 0x0
0x64b DUP3
0x64c SSTORE
0x64d SWAP1
0x64e PUSH1 0x0
0x650 MSTORE
0x651 PUSH1 0x20
0x653 PUSH1 0x0
0x655 SHA3
0x656 SWAP1
0x657 DUP2
0x658 ADD
0x659 SWAP1
0x65a PUSH2 0x663
0x65d SWAP2
0x65e SWAP1
0x65f PUSH2 0x666
0x662 JUMP
---
0x645: JUMPDEST 
0x648: V399 = S[0x2]
0x649: V400 = 0x0
0x64c: S[0x2] = 0x0
0x64e: V401 = 0x0
0x650: M[0x0] = 0x2
0x651: V402 = 0x20
0x653: V403 = 0x0
0x655: V404 = SHA3 0x0 0x20
0x658: V405 = ADD V404 V399
0x65a: V406 = 0x663
0x65f: V407 = 0x666
0x662: JUMP 0x666
---
Entry stack: [V11, 0xda, S3, 0x58b, 0x2, 0x0]
Stack pops: 2
Stack additions: [0x663, V405, V404]
Exit stack: [V11, 0xda, S3, 0x58b, 0x663, V405, V404]

================================

Block 0x663
[0x663:0x665]
---
Predecessors: [0x688]
Successors: [0x58b]
---
0x663 JUMPDEST
0x664 POP
0x665 JUMP
---
0x663: JUMPDEST 
0x665: JUMP S1
---
Entry stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4, {0xda, 0x23f, 0x33a}, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xda, S7, {0x2, 0x3}, S5, S4, {0xda, 0x23f, 0x33a}, S2]

================================

Block 0x666
[0x666:0x66b]
---
Predecessors: [0x627, 0x645]
Successors: [0x66c]
---
0x666 JUMPDEST
0x667 PUSH2 0x688
0x66a SWAP2
0x66b SWAP1
---
0x666: JUMPDEST 
0x667: V408 = 0x688
---
Entry stack: [V11, 0xda, S9, {0x2, 0x3}, S7, S6, {0xda, 0x23f, 0x33a}, S4, S3, {0x63f, 0x663}, S1, S0]
Stack pops: 2
Stack additions: [0x688, S1, S0]
Exit stack: [V11, 0xda, S9, {0x2, 0x3}, S7, S6, {0xda, 0x23f, 0x33a}, S4, S3, {0x63f, 0x663}, 0x688, S1, S0]

================================

Block 0x66c
[0x66c:0x674]
---
Predecessors: [0x666, 0x675]
Successors: [0x675, 0x684]
---
0x66c JUMPDEST
0x66d DUP1
0x66e DUP3
0x66f GT
0x670 ISZERO
0x671 PUSH2 0x684
0x674 JUMPI
---
0x66c: JUMPDEST 
0x66f: V409 = GT S1 S0
0x670: V410 = ISZERO V409
0x671: V411 = 0x684
0x674: JUMPI 0x684 V410
---
Entry stack: [V11, 0xda, S10, {0x2, 0x3}, S8, S7, {0xda, 0x23f, 0x33a}, S5, S4, {0x63f, 0x663}, 0x688, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xda, S10, {0x2, 0x3}, S8, S7, {0xda, 0x23f, 0x33a}, S5, S4, {0x63f, 0x663}, 0x688, S1, S0]

================================

Block 0x675
[0x675:0x683]
---
Predecessors: [0x66c]
Successors: [0x66c]
---
0x675 PUSH1 0x0
0x677 DUP2
0x678 PUSH1 0x0
0x67a SWAP1
0x67b SSTORE
0x67c POP
0x67d PUSH1 0x1
0x67f ADD
0x680 PUSH2 0x66c
0x683 JUMP
---
0x675: V412 = 0x0
0x678: V413 = 0x0
0x67b: S[S0] = 0x0
0x67d: V414 = 0x1
0x67f: V415 = ADD 0x1 S0
0x680: V416 = 0x66c
0x683: JUMP 0x66c
---
Entry stack: [V11, 0xda, S10, {0x2, 0x3}, S8, S7, {0xda, 0x23f, 0x33a}, S5, S4, {0x63f, 0x663}, 0x688, S1, S0]
Stack pops: 1
Stack additions: [V415]
Exit stack: [V11, 0xda, S10, {0x2, 0x3}, S8, S7, {0xda, 0x23f, 0x33a}, S5, S4, {0x63f, 0x663}, 0x688, S1, V415]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x66c]
Successors: [0x688]
---
0x684 JUMPDEST
0x685 POP
0x686 SWAP1
0x687 JUMP
---
0x684: JUMPDEST 
0x687: JUMP 0x688
---
Entry stack: [V11, 0xda, S10, {0x2, 0x3}, S8, S7, {0xda, 0x23f, 0x33a}, S5, S4, {0x63f, 0x663}, 0x688, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xda, S10, {0x2, 0x3}, S8, S7, {0xda, 0x23f, 0x33a}, S5, S4, {0x63f, 0x663}, S1]

================================

Block 0x688
[0x688:0x68a]
---
Predecessors: [0x684]
Successors: [0x63f, 0x663]
---
0x688 JUMPDEST
0x689 SWAP1
0x68a JUMP
---
0x688: JUMPDEST 
0x68a: JUMP {0x63f, 0x663}
---
Entry stack: [V11, 0xda, S8, {0x2, 0x3}, S6, S5, {0xda, 0x23f, 0x33a}, S3, S2, {0x63f, 0x663}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xda, S8, {0x2, 0x3}, S6, S5, {0xda, 0x23f, 0x33a}, S3, S2, S0]

================================

Block 0x68b
[0x68b:0x6c6]
---
Predecessors: []
Successors: []
---
0x68b STOP
0x68c LOG1
0x68d PUSH6 0x627a7a723058
0x694 SHA3
0x695 MISSING 0x22
0x696 MISSING 0xf7
0x697 POP
0x698 MISSING 0x48
0x699 PUSH12 0xf8bde7779fdb1ccc24d25b8e
0x6a6 MISSING 0x2e
0x6a7 MISSING 0xd0
0x6a8 PUSH30 0x4310051be89e3fdb997db600029
---
0x68b: STOP 
0x68c: LOG S0 S1 S2
0x68d: V417 = 0x627a7a723058
0x694: V418 = SHA3 0x627a7a723058 S3
0x695: MISSING 0x22
0x696: MISSING 0xf7
0x698: MISSING 0x48
0x699: V419 = 0xf8bde7779fdb1ccc24d25b8e
0x6a6: MISSING 0x2e
0x6a7: MISSING 0xd0
0x6a8: V420 = 0x4310051be89e3fdb997db600029
---
Entry stack: []
Stack pops: 0
Stack additions: [V418, 0xf8bde7779fdb1ccc24d25b8e, 0x4310051be89e3fdb997db600029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x7d
Exit block: 0x90
Body: 0x7d, 0x84, 0x88, 0x90, 0x1f4

Function 1:
Public function signature: 0x93e84cd9
Entry block: 0xd2
Exit block: 0x560
Body: 0xd2, 0xda, 0x219, 0x227, 0x22b, 0x23f, 0x30d, 0x321, 0x322, 0x33a, 0x355, 0x356, 0x3d1, 0x3d2, 0x43e, 0x442, 0x471, 0x472, 0x560, 0x564, 0x58b, 0x58c, 0x645, 0x663

Function 2:
Public function signature: 0xa2e800ad
Entry block: 0xdc
Exit block: 0xef
Body: 0xdc, 0xe3, 0xe7, 0xef, 0x58f

Function 3:
Public function signature: 0xa2fb1175
Entry block: 0x105
Exit block: 0x126
Body: 0x105, 0x10c, 0x110, 0x126, 0x595, 0x5a3, 0x5a4

Function 4:
Public function signature: 0xda9d83ea
Entry block: 0x168
Exit block: 0x189
Body: 0x168, 0x16f, 0x173, 0x189, 0x5d4, 0x5e2, 0x5e3

Function 5:
Public function signature: 0xdc0b3564
Entry block: 0x1cb
Exit block: 0x1de
Body: 0x1cb, 0x1d2, 0x1d6, 0x1de, 0x613

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

Function 7:
Private function
Entry block: 0x666
Exit block: 0x688
Body: 0x666, 0x66c, 0x675, 0x684, 0x688

Function 8:
Private function
Entry block: 0x619
Exit block: 0x640
Body: 0x619, 0x627, 0x63f, 0x640

