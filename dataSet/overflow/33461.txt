Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x766954b4
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x766954b4
0x3c: V13 = EQ 0x766954b4 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xe0]
---
0x41 DUP1
0x42 PUSH4 0x8f9087f5
0x47 EQ
0x48 PUSH2 0xe0
0x4b JUMPI
---
0x42: V15 = 0x8f9087f5
0x47: V16 = EQ 0x8f9087f5 V11
0x48: V17 = 0xe0
0x4b: JUMPI 0xe0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x159]
---
0x4c DUP1
0x4d PUSH4 0x9cb8a26a
0x52 EQ
0x53 PUSH2 0x159
0x56 JUMPI
---
0x4d: V18 = 0x9cb8a26a
0x52: V19 = EQ 0x9cb8a26a V11
0x53: V20 = 0x159
0x56: JUMPI 0x159 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5d]
---
Predecessors: [0x0, 0x4c]
Successors: [0x5e, 0x62]
---
0x57 JUMPDEST
0x58 CALLVALUE
0x59 ISZERO
0x5a PUSH2 0x62
0x5d JUMPI
---
0x57: JUMPDEST 
0x58: V21 = CALLVALUE
0x59: V22 = ISZERO V21
0x5a: V23 = 0x62
0x5d: JUMPI 0x62 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5e
[0x5e:0x61]
---
Predecessors: [0x57]
Successors: []
---
0x5e PUSH1 0x0
0x60 DUP1
0x61 REVERT
---
0x5e: V24 = 0x0
0x61: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V26 = CALLVALUE
0x69: V27 = ISZERO V26
0x6a: V28 = 0x72
0x6d: JUMPI 0x72 V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V29 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0xc1]
---
Predecessors: [0x67]
Successors: [0x16e]
---
0x72 JUMPDEST
0x73 PUSH2 0xc2
0x76 PUSH1 0x4
0x78 DUP1
0x79 DUP1
0x7a CALLDATALOAD
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 DUP3
0x81 ADD
0x82 DUP1
0x83 CALLDATALOAD
0x84 SWAP1
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP1
0x89 DUP1
0x8a DUP1
0x8b PUSH1 0x1f
0x8d ADD
0x8e PUSH1 0x20
0x90 DUP1
0x91 SWAP2
0x92 DIV
0x93 MUL
0x94 PUSH1 0x20
0x96 ADD
0x97 PUSH1 0x40
0x99 MLOAD
0x9a SWAP1
0x9b DUP2
0x9c ADD
0x9d PUSH1 0x40
0x9f MSTORE
0xa0 DUP1
0xa1 SWAP4
0xa2 SWAP3
0xa3 SWAP2
0xa4 SWAP1
0xa5 DUP2
0xa6 DUP2
0xa7 MSTORE
0xa8 PUSH1 0x20
0xaa ADD
0xab DUP4
0xac DUP4
0xad DUP1
0xae DUP3
0xaf DUP5
0xb0 CALLDATACOPY
0xb1 DUP3
0xb2 ADD
0xb3 SWAP2
0xb4 POP
0xb5 POP
0xb6 POP
0xb7 POP
0xb8 POP
0xb9 POP
0xba SWAP2
0xbb SWAP1
0xbc POP
0xbd POP
0xbe PUSH2 0x16e
0xc1 JUMP
---
0x72: JUMPDEST 
0x73: V30 = 0xc2
0x76: V31 = 0x4
0x7a: V32 = CALLDATALOAD 0x4
0x7c: V33 = 0x20
0x7e: V34 = ADD 0x20 0x4
0x81: V35 = ADD 0x4 V32
0x83: V36 = CALLDATALOAD V35
0x85: V37 = 0x20
0x87: V38 = ADD 0x20 V35
0x8b: V39 = 0x1f
0x8d: V40 = ADD 0x1f V36
0x8e: V41 = 0x20
0x92: V42 = DIV V40 0x20
0x93: V43 = MUL V42 0x20
0x94: V44 = 0x20
0x96: V45 = ADD 0x20 V43
0x97: V46 = 0x40
0x99: V47 = M[0x40]
0x9c: V48 = ADD V47 V45
0x9d: V49 = 0x40
0x9f: M[0x40] = V48
0xa7: M[V47] = V36
0xa8: V50 = 0x20
0xaa: V51 = ADD 0x20 V47
0xb0: CALLDATACOPY V51 V38 V36
0xb2: V52 = ADD V51 V36
0xbe: V53 = 0x16e
0xc1: JUMP 0x16e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc2, V47]
Exit stack: [V11, 0xc2, V47]

================================

Block 0xc2
[0xc2:0xdf]
---
Predecessors: [0x1a6]
Successors: []
---
0xc2 JUMPDEST
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 DUP1
0xc7 DUP3
0xc8 PUSH1 0x0
0xca NOT
0xcb AND
0xcc PUSH1 0x0
0xce NOT
0xcf AND
0xd0 DUP2
0xd1 MSTORE
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP2
0xd6 POP
0xd7 POP
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc SWAP2
0xdd SUB
0xde SWAP1
0xdf RETURN
---
0xc2: JUMPDEST 
0xc3: V54 = 0x40
0xc5: V55 = M[0x40]
0xc8: V56 = 0x0
0xca: V57 = NOT 0x0
0xcb: V58 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V149
0xcc: V59 = 0x0
0xce: V60 = NOT 0x0
0xcf: V61 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V58
0xd1: M[V55] = V61
0xd2: V62 = 0x20
0xd4: V63 = ADD 0x20 V55
0xd8: V64 = 0x40
0xda: V65 = M[0x40]
0xdd: V66 = SUB V63 V65
0xdf: RETURN V65 V66
---
Entry stack: [V11, V149]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x41]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V67 = CALLVALUE
0xe2: V68 = ISZERO V67
0xe3: V69 = 0xeb
0xe6: JUMPI 0xeb V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V70 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0x13a]
---
Predecessors: [0xe0]
Successors: [0x1da]
---
0xeb JUMPDEST
0xec PUSH2 0x13b
0xef PUSH1 0x4
0xf1 DUP1
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 SWAP1
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 DUP3
0xfa ADD
0xfb DUP1
0xfc CALLDATALOAD
0xfd SWAP1
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 DUP1
0x103 DUP1
0x104 PUSH1 0x1f
0x106 ADD
0x107 PUSH1 0x20
0x109 DUP1
0x10a SWAP2
0x10b DIV
0x10c MUL
0x10d PUSH1 0x20
0x10f ADD
0x110 PUSH1 0x40
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 ADD
0x116 PUSH1 0x40
0x118 MSTORE
0x119 DUP1
0x11a SWAP4
0x11b SWAP3
0x11c SWAP2
0x11d SWAP1
0x11e DUP2
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 DUP4
0x125 DUP4
0x126 DUP1
0x127 DUP3
0x128 DUP5
0x129 CALLDATACOPY
0x12a DUP3
0x12b ADD
0x12c SWAP2
0x12d POP
0x12e POP
0x12f POP
0x130 POP
0x131 POP
0x132 POP
0x133 SWAP2
0x134 SWAP1
0x135 POP
0x136 POP
0x137 PUSH2 0x1da
0x13a JUMP
---
0xeb: JUMPDEST 
0xec: V71 = 0x13b
0xef: V72 = 0x4
0xf3: V73 = CALLDATALOAD 0x4
0xf5: V74 = 0x20
0xf7: V75 = ADD 0x20 0x4
0xfa: V76 = ADD 0x4 V73
0xfc: V77 = CALLDATALOAD V76
0xfe: V78 = 0x20
0x100: V79 = ADD 0x20 V76
0x104: V80 = 0x1f
0x106: V81 = ADD 0x1f V77
0x107: V82 = 0x20
0x10b: V83 = DIV V81 0x20
0x10c: V84 = MUL V83 0x20
0x10d: V85 = 0x20
0x10f: V86 = ADD 0x20 V84
0x110: V87 = 0x40
0x112: V88 = M[0x40]
0x115: V89 = ADD V88 V86
0x116: V90 = 0x40
0x118: M[0x40] = V89
0x120: M[V88] = V77
0x121: V91 = 0x20
0x123: V92 = ADD 0x20 V88
0x129: CALLDATACOPY V92 V79 V77
0x12b: V93 = ADD V92 V77
0x137: V94 = 0x1da
0x13a: JUMP 0x1da
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13b, V88]
Exit stack: [V11, 0x13b, V88]

================================

Block 0x13b
[0x13b:0x158]
---
Predecessors: [0x212]
Successors: []
---
0x13b JUMPDEST
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 DUP3
0x141 PUSH1 0x0
0x143 NOT
0x144 AND
0x145 PUSH1 0x0
0x147 NOT
0x148 AND
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP2
0x14f POP
0x150 POP
0x151 PUSH1 0x40
0x153 MLOAD
0x154 DUP1
0x155 SWAP2
0x156 SUB
0x157 SWAP1
0x158 RETURN
---
0x13b: JUMPDEST 
0x13c: V95 = 0x40
0x13e: V96 = M[0x40]
0x141: V97 = 0x0
0x143: V98 = NOT 0x0
0x144: V99 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V185
0x145: V100 = 0x0
0x147: V101 = NOT 0x0
0x148: V102 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V99
0x14a: M[V96] = V102
0x14b: V103 = 0x20
0x14d: V104 = ADD 0x20 V96
0x151: V105 = 0x40
0x153: V106 = M[0x40]
0x156: V107 = SUB V104 V106
0x158: RETURN V106 V107
---
Entry stack: [V11, V185]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x159
[0x159:0x15f]
---
Predecessors: [0x4c]
Successors: [0x160, 0x164]
---
0x159 JUMPDEST
0x15a CALLVALUE
0x15b ISZERO
0x15c PUSH2 0x164
0x15f JUMPI
---
0x159: JUMPDEST 
0x15a: V108 = CALLVALUE
0x15b: V109 = ISZERO V108
0x15c: V110 = 0x164
0x15f: JUMPI 0x164 V109
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x160
[0x160:0x163]
---
Predecessors: [0x159]
Successors: []
---
0x160 PUSH1 0x0
0x162 DUP1
0x163 REVERT
---
0x160: V111 = 0x0
0x163: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x159]
Successors: [0x246]
---
0x164 JUMPDEST
0x165 PUSH2 0x16c
0x168 PUSH2 0x246
0x16b JUMP
---
0x164: JUMPDEST 
0x165: V112 = 0x16c
0x168: V113 = 0x246
0x16b: JUMP 0x246
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16c]
Exit stack: [V11, 0x16c]

================================

Block 0x16c
[0x16c:0x16d]
---
Predecessors: [0x2d5]
Successors: []
---
0x16c JUMPDEST
0x16d STOP
---
0x16c: JUMPDEST 
0x16d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16e
[0x16e:0x180]
---
Predecessors: [0x72]
Successors: [0x181]
---
0x16e JUMPDEST
0x16f PUSH1 0x0
0x171 DUP2
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 DUP3
0x177 DUP1
0x178 MLOAD
0x179 SWAP1
0x17a PUSH1 0x20
0x17c ADD
0x17d SWAP1
0x17e DUP1
0x17f DUP4
0x180 DUP4
---
0x16e: JUMPDEST 
0x16f: V114 = 0x0
0x172: V115 = 0x40
0x174: V116 = M[0x40]
0x178: V117 = M[V47]
0x17a: V118 = 0x20
0x17c: V119 = ADD 0x20 V47
---
Entry stack: [V11, 0xc2, V47]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V116, V116, V119, V117, V117, V116, V119]
Exit stack: [V11, 0xc2, V47, 0x0, V47, V116, V116, V119, V117, V117, V116, V119]

================================

Block 0x181
[0x181:0x18b]
---
Predecessors: [0x16e, 0x18c]
Successors: [0x18c, 0x1a6]
---
0x181 JUMPDEST
0x182 PUSH1 0x20
0x184 DUP4
0x185 LT
0x186 ISZERO
0x187 ISZERO
0x188 PUSH2 0x1a6
0x18b JUMPI
---
0x181: JUMPDEST 
0x182: V120 = 0x20
0x185: V121 = LT S2 0x20
0x186: V122 = ISZERO V121
0x187: V123 = ISZERO V122
0x188: V124 = 0x1a6
0x18b: JUMPI 0x1a6 V123
---
Entry stack: [V11, 0xc2, V47, 0x0, V47, V116, V116, V119, V117, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xc2, V47, 0x0, V47, V116, V116, V119, V117, S2, S1, S0]

================================

Block 0x18c
[0x18c:0x1a5]
---
Predecessors: [0x181]
Successors: [0x181]
---
0x18c DUP1
0x18d MLOAD
0x18e DUP3
0x18f MSTORE
0x190 PUSH1 0x20
0x192 DUP3
0x193 ADD
0x194 SWAP2
0x195 POP
0x196 PUSH1 0x20
0x198 DUP2
0x199 ADD
0x19a SWAP1
0x19b POP
0x19c PUSH1 0x20
0x19e DUP4
0x19f SUB
0x1a0 SWAP3
0x1a1 POP
0x1a2 PUSH2 0x181
0x1a5 JUMP
---
0x18d: V125 = M[S0]
0x18f: M[S1] = V125
0x190: V126 = 0x20
0x193: V127 = ADD S1 0x20
0x196: V128 = 0x20
0x199: V129 = ADD S0 0x20
0x19c: V130 = 0x20
0x19f: V131 = SUB S2 0x20
0x1a2: V132 = 0x181
0x1a5: JUMP 0x181
---
Entry stack: [V11, 0xc2, V47, 0x0, V47, V116, V116, V119, V117, S2, S1, S0]
Stack pops: 3
Stack additions: [V131, V127, V129]
Exit stack: [V11, 0xc2, V47, 0x0, V47, V116, V116, V119, V117, V131, V127, V129]

================================

Block 0x1a6
[0x1a6:0x1d9]
---
Predecessors: [0x181]
Successors: [0xc2]
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x1
0x1a9 DUP4
0x1aa PUSH1 0x20
0x1ac SUB
0x1ad PUSH2 0x100
0x1b0 EXP
0x1b1 SUB
0x1b2 DUP1
0x1b3 NOT
0x1b4 DUP3
0x1b5 MLOAD
0x1b6 AND
0x1b7 DUP2
0x1b8 DUP5
0x1b9 MLOAD
0x1ba AND
0x1bb DUP1
0x1bc DUP3
0x1bd OR
0x1be DUP6
0x1bf MSTORE
0x1c0 POP
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 SWAP1
0x1c7 POP
0x1c8 ADD
0x1c9 SWAP2
0x1ca POP
0x1cb POP
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP1
0x1d0 SWAP2
0x1d1 SUB
0x1d2 SWAP1
0x1d3 SHA3
0x1d4 SWAP1
0x1d5 POP
0x1d6 SWAP2
0x1d7 SWAP1
0x1d8 POP
0x1d9 JUMP
---
0x1a6: JUMPDEST 
0x1a7: V133 = 0x1
0x1aa: V134 = 0x20
0x1ac: V135 = SUB 0x20 S2
0x1ad: V136 = 0x100
0x1b0: V137 = EXP 0x100 V135
0x1b1: V138 = SUB V137 0x1
0x1b3: V139 = NOT V138
0x1b5: V140 = M[S0]
0x1b6: V141 = AND V140 V139
0x1b9: V142 = M[S1]
0x1ba: V143 = AND V142 V138
0x1bd: V144 = OR V141 V143
0x1bf: M[S1] = V144
0x1c8: V145 = ADD V117 V116
0x1cc: V146 = 0x40
0x1ce: V147 = M[0x40]
0x1d1: V148 = SUB V145 V147
0x1d3: V149 = SHA3 V147 V148
0x1d9: JUMP 0xc2
---
Entry stack: [V11, 0xc2, V47, 0x0, V47, V116, V116, V119, V117, S2, S1, S0]
Stack pops: 11
Stack additions: [V149]
Exit stack: [V11, V149]

================================

Block 0x1da
[0x1da:0x1ec]
---
Predecessors: [0xeb]
Successors: [0x1ed]
---
0x1da JUMPDEST
0x1db PUSH1 0x0
0x1dd DUP2
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 DUP3
0x1e3 DUP1
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP1
0x1ea DUP1
0x1eb DUP4
0x1ec DUP4
---
0x1da: JUMPDEST 
0x1db: V150 = 0x0
0x1de: V151 = 0x40
0x1e0: V152 = M[0x40]
0x1e4: V153 = M[V88]
0x1e6: V154 = 0x20
0x1e8: V155 = ADD 0x20 V88
---
Entry stack: [V11, 0x13b, V88]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V152, V152, V155, V153, V153, V152, V155]
Exit stack: [V11, 0x13b, V88, 0x0, V88, V152, V152, V155, V153, V153, V152, V155]

================================

Block 0x1ed
[0x1ed:0x1f7]
---
Predecessors: [0x1da, 0x1f8]
Successors: [0x1f8, 0x212]
---
0x1ed JUMPDEST
0x1ee PUSH1 0x20
0x1f0 DUP4
0x1f1 LT
0x1f2 ISZERO
0x1f3 ISZERO
0x1f4 PUSH2 0x212
0x1f7 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V156 = 0x20
0x1f1: V157 = LT S2 0x20
0x1f2: V158 = ISZERO V157
0x1f3: V159 = ISZERO V158
0x1f4: V160 = 0x212
0x1f7: JUMPI 0x212 V159
---
Entry stack: [V11, 0x13b, V88, 0x0, V88, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x13b, V88, 0x0, V88, V152, V152, V155, V153, S2, S1, S0]

================================

Block 0x1f8
[0x1f8:0x211]
---
Predecessors: [0x1ed]
Successors: [0x1ed]
---
0x1f8 DUP1
0x1f9 MLOAD
0x1fa DUP3
0x1fb MSTORE
0x1fc PUSH1 0x20
0x1fe DUP3
0x1ff ADD
0x200 SWAP2
0x201 POP
0x202 PUSH1 0x20
0x204 DUP2
0x205 ADD
0x206 SWAP1
0x207 POP
0x208 PUSH1 0x20
0x20a DUP4
0x20b SUB
0x20c SWAP3
0x20d POP
0x20e PUSH2 0x1ed
0x211 JUMP
---
0x1f9: V161 = M[S0]
0x1fb: M[S1] = V161
0x1fc: V162 = 0x20
0x1ff: V163 = ADD S1 0x20
0x202: V164 = 0x20
0x205: V165 = ADD S0 0x20
0x208: V166 = 0x20
0x20b: V167 = SUB S2 0x20
0x20e: V168 = 0x1ed
0x211: JUMP 0x1ed
---
Entry stack: [V11, 0x13b, V88, 0x0, V88, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 3
Stack additions: [V167, V163, V165]
Exit stack: [V11, 0x13b, V88, 0x0, V88, V152, V152, V155, V153, V167, V163, V165]

================================

Block 0x212
[0x212:0x245]
---
Predecessors: [0x1ed]
Successors: [0x13b]
---
0x212 JUMPDEST
0x213 PUSH1 0x1
0x215 DUP4
0x216 PUSH1 0x20
0x218 SUB
0x219 PUSH2 0x100
0x21c EXP
0x21d SUB
0x21e DUP1
0x21f NOT
0x220 DUP3
0x221 MLOAD
0x222 AND
0x223 DUP2
0x224 DUP5
0x225 MLOAD
0x226 AND
0x227 DUP1
0x228 DUP3
0x229 OR
0x22a DUP6
0x22b MSTORE
0x22c POP
0x22d POP
0x22e POP
0x22f POP
0x230 POP
0x231 POP
0x232 SWAP1
0x233 POP
0x234 ADD
0x235 SWAP2
0x236 POP
0x237 POP
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c SWAP2
0x23d SUB
0x23e SWAP1
0x23f SHA3
0x240 SWAP1
0x241 POP
0x242 SWAP2
0x243 SWAP1
0x244 POP
0x245 JUMP
---
0x212: JUMPDEST 
0x213: V169 = 0x1
0x216: V170 = 0x20
0x218: V171 = SUB 0x20 S2
0x219: V172 = 0x100
0x21c: V173 = EXP 0x100 V171
0x21d: V174 = SUB V173 0x1
0x21f: V175 = NOT V174
0x221: V176 = M[S0]
0x222: V177 = AND V176 V175
0x225: V178 = M[S1]
0x226: V179 = AND V178 V174
0x229: V180 = OR V177 V179
0x22b: M[S1] = V180
0x234: V181 = ADD V153 V152
0x238: V182 = 0x40
0x23a: V183 = M[0x40]
0x23d: V184 = SUB V181 V183
0x23f: V185 = SHA3 V183 V184
0x245: JUMP 0x13b
---
Entry stack: [V11, 0x13b, V88, 0x0, V88, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 11
Stack additions: [V185]
Exit stack: [V11, V185]

================================

Block 0x246
[0x246:0x29b]
---
Predecessors: [0x164]
Successors: [0x29c, 0x2d5]
---
0x246 JUMPDEST
0x247 PUSH1 0x0
0x249 DUP1
0x24a SWAP1
0x24b SLOAD
0x24c SWAP1
0x24d PUSH2 0x100
0x250 EXP
0x251 SWAP1
0x252 DIV
0x253 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x268 AND
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e AND
0x27f CALLER
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 EQ
0x297 ISZERO
0x298 PUSH2 0x2d5
0x29b JUMPI
---
0x246: JUMPDEST 
0x247: V186 = 0x0
0x24b: V187 = S[0x0]
0x24d: V188 = 0x100
0x250: V189 = EXP 0x100 0x0
0x252: V190 = DIV V187 0x1
0x253: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x268: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x269: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x27f: V195 = CALLER
0x280: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x296: V198 = EQ V197 V194
0x297: V199 = ISZERO V198
0x298: V200 = 0x2d5
0x29b: JUMPI 0x2d5 V199
---
Entry stack: [V11, 0x16c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16c]

================================

Block 0x29c
[0x29c:0x2d4]
---
Predecessors: [0x246]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f SWAP1
0x2a0 SLOAD
0x2a1 SWAP1
0x2a2 PUSH2 0x100
0x2a5 EXP
0x2a6 SWAP1
0x2a7 DIV
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 SELFDESTRUCT
---
0x29c: V201 = 0x0
0x2a0: V202 = S[0x0]
0x2a2: V203 = 0x100
0x2a5: V204 = EXP 0x100 0x0
0x2a7: V205 = DIV V202 0x1
0x2a8: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x2be: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x2d4: SELFDESTRUCT V209
---
Entry stack: [V11, 0x16c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16c]

================================

Block 0x2d5
[0x2d5:0x2d6]
---
Predecessors: [0x246]
Successors: [0x16c]
---
0x2d5 JUMPDEST
0x2d6 JUMP
---
0x2d5: JUMPDEST 
0x2d6: JUMP 0x16c
---
Entry stack: [V11, 0x16c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d7
[0x2d7:0x302]
---
Predecessors: []
Successors: []
---
0x2d7 STOP
0x2d8 LOG1
0x2d9 PUSH6 0x627a7a723058
0x2e0 SHA3
0x2e1 PUSH2 0x87be
0x2e4 STATICCALL
0x2e5 MISSING 0x2e
0x2e6 TIMESTAMP
0x2e7 SWAP5
0x2e8 MISSING 0xf
0x2e9 SMOD
0x2ea MISSING 0xe0
0x2eb MISSING 0x2e
0x2ec MISSING 0xaa
0x2ed MISSING 0x5c
0x2ee GASPRICE
0x2ef PUSH18 0x512229ec0cb2bb99667351a8436969916600
0x302 MISSING 0x29
---
0x2d7: STOP 
0x2d8: LOG S0 S1 S2
0x2d9: V210 = 0x627a7a723058
0x2e0: V211 = SHA3 0x627a7a723058 S3
0x2e1: V212 = 0x87be
0x2e4: V213 = STATICCALL 0x87be V211 S4 S5 S6 S7
0x2e5: MISSING 0x2e
0x2e6: V214 = TIMESTAMP
0x2e8: MISSING 0xf
0x2e9: V215 = SMOD S0 S1
0x2ea: MISSING 0xe0
0x2eb: MISSING 0x2e
0x2ec: MISSING 0xaa
0x2ed: MISSING 0x5c
0x2ee: V216 = GASPRICE
0x2ef: V217 = 0x512229ec0cb2bb99667351a8436969916600
0x302: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V213, S4, S0, S1, S2, S3, V214, V215, 0x512229ec0cb2bb99667351a8436969916600, V216]
Exit stack: []

================================

Function 0:
Public function signature: 0x766954b4
Entry block: 0x67
Exit block: 0xc2
Body: 0x67, 0x6e, 0x72, 0xc2, 0x16e, 0x181, 0x18c, 0x1a6

Function 1:
Public function signature: 0x8f9087f5
Entry block: 0xe0
Exit block: 0x13b
Body: 0xe0, 0xe7, 0xeb, 0x13b, 0x1da, 0x1ed, 0x1f8, 0x212

Function 2:
Public function signature: 0x9cb8a26a
Entry block: 0x159
Exit block: 0x16c
Body: 0x159, 0x160, 0x164, 0x16c, 0x246, 0x29c, 0x2d5

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x5e
Body: 0x57, 0x5e, 0x62

