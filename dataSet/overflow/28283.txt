Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xb61fa7c0
0x34 EQ
0x35 PUSH2 0x54
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xb61fa7c0
0x34: V9 = EQ 0xb61fa7c0 V7
0x35: V10 = 0x54
0x38: JUMPI 0x54 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xd6]
---
0x39 DUP1
0x3a PUSH4 0xbeabacc8
0x3f EQ
0x40 PUSH2 0xd6
0x43 JUMPI
---
0x3a: V11 = 0xbeabacc8
0x3f: V12 = EQ 0xbeabacc8 V7
0x40: V13 = 0xd6
0x43: JUMPI 0xd6 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x14f]
---
0x44 DUP1
0x45 PUSH4 0xc668dfd7
0x4a EQ
0x4b PUSH2 0x14f
0x4e JUMPI
---
0x45: V14 = 0xc668dfd7
0x4a: V15 = EQ 0xc668dfd7 V7
0x4b: V16 = 0x14f
0x4e: JUMPI 0x14f V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x53]
---
Predecessors: [0x44]
Successors: []
---
0x4f JUMPDEST
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x4f: JUMPDEST 
0x50: V17 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5a]
---
Predecessors: [0x0]
Successors: [0x5b, 0x5f]
---
0x54 JUMPDEST
0x55 CALLVALUE
0x56 ISZERO
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x54: JUMPDEST 
0x55: V18 = CALLVALUE
0x56: V19 = ISZERO V18
0x57: V20 = 0x5f
0x5a: JUMPI 0x5f V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x54]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V21 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0xd3]
---
Predecessors: [0x54]
Successors: [0x1d1]
---
0x5f JUMPDEST
0x60 PUSH2 0xd4
0x63 PUSH1 0x4
0x65 DUP1
0x66 DUP1
0x67 CALLDATALOAD
0x68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d AND
0x7e SWAP1
0x7f PUSH1 0x20
0x81 ADD
0x82 SWAP1
0x83 SWAP2
0x84 SWAP1
0x85 DUP1
0x86 CALLDATALOAD
0x87 SWAP1
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP1
0x8c DUP3
0x8d ADD
0x8e DUP1
0x8f CALLDATALOAD
0x90 SWAP1
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP1
0x95 DUP1
0x96 DUP1
0x97 PUSH1 0x20
0x99 MUL
0x9a PUSH1 0x20
0x9c ADD
0x9d PUSH1 0x40
0x9f MLOAD
0xa0 SWAP1
0xa1 DUP2
0xa2 ADD
0xa3 PUSH1 0x40
0xa5 MSTORE
0xa6 DUP1
0xa7 SWAP4
0xa8 SWAP3
0xa9 SWAP2
0xaa SWAP1
0xab DUP2
0xac DUP2
0xad MSTORE
0xae PUSH1 0x20
0xb0 ADD
0xb1 DUP4
0xb2 DUP4
0xb3 PUSH1 0x20
0xb5 MUL
0xb6 DUP1
0xb7 DUP3
0xb8 DUP5
0xb9 CALLDATACOPY
0xba DUP3
0xbb ADD
0xbc SWAP2
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 SWAP2
0xc4 SWAP1
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 SWAP1
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP1
0xcc SWAP2
0xcd SWAP1
0xce POP
0xcf POP
0xd0 PUSH2 0x1d1
0xd3 JUMP
---
0x5f: JUMPDEST 
0x60: V22 = 0xd4
0x63: V23 = 0x4
0x67: V24 = CALLDATALOAD 0x4
0x68: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x7f: V27 = 0x20
0x81: V28 = ADD 0x20 0x4
0x86: V29 = CALLDATALOAD 0x24
0x88: V30 = 0x20
0x8a: V31 = ADD 0x20 0x24
0x8d: V32 = ADD 0x4 V29
0x8f: V33 = CALLDATALOAD V32
0x91: V34 = 0x20
0x93: V35 = ADD 0x20 V32
0x97: V36 = 0x20
0x99: V37 = MUL 0x20 V33
0x9a: V38 = 0x20
0x9c: V39 = ADD 0x20 V37
0x9d: V40 = 0x40
0x9f: V41 = M[0x40]
0xa2: V42 = ADD V41 V39
0xa3: V43 = 0x40
0xa5: M[0x40] = V42
0xad: M[V41] = V33
0xae: V44 = 0x20
0xb0: V45 = ADD 0x20 V41
0xb3: V46 = 0x20
0xb5: V47 = MUL 0x20 V33
0xb9: CALLDATACOPY V45 V35 V47
0xbb: V48 = ADD V45 V47
0xc6: V49 = CALLDATALOAD 0x44
0xc8: V50 = 0x20
0xca: V51 = ADD 0x20 0x44
0xd0: V52 = 0x1d1
0xd3: JUMP 0x1d1
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xd4, V26, V41, V49]
Exit stack: [V7, 0xd4, V26, V41, V49]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: [0x2d0]
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x39]
Successors: [0xdd, 0xe1]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V53 = CALLVALUE
0xd8: V54 = ISZERO V53
0xd9: V55 = 0xe1
0xdc: JUMPI 0xe1 V54
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd6]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V56 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe1
[0xe1:0x134]
---
Predecessors: [0xd6]
Successors: [0x2d7]
---
0xe1 JUMPDEST
0xe2 PUSH2 0x135
0xe5 PUSH1 0x4
0xe7 DUP1
0xe8 DUP1
0xe9 CALLDATALOAD
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 SWAP1
0x101 PUSH1 0x20
0x103 ADD
0x104 SWAP1
0x105 SWAP2
0x106 SWAP1
0x107 DUP1
0x108 CALLDATALOAD
0x109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e AND
0x11f SWAP1
0x120 PUSH1 0x20
0x122 ADD
0x123 SWAP1
0x124 SWAP2
0x125 SWAP1
0x126 DUP1
0x127 CALLDATALOAD
0x128 SWAP1
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP1
0x12d SWAP2
0x12e SWAP1
0x12f POP
0x130 POP
0x131 PUSH2 0x2d7
0x134 JUMP
---
0xe1: JUMPDEST 
0xe2: V57 = 0x135
0xe5: V58 = 0x4
0xe9: V59 = CALLDATALOAD 0x4
0xea: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x101: V62 = 0x20
0x103: V63 = ADD 0x20 0x4
0x108: V64 = CALLDATALOAD 0x24
0x109: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x120: V67 = 0x20
0x122: V68 = ADD 0x20 0x24
0x127: V69 = CALLDATALOAD 0x44
0x129: V70 = 0x20
0x12b: V71 = ADD 0x20 0x44
0x131: V72 = 0x2d7
0x134: JUMP 0x2d7
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x135, V61, V66, V69]
Exit stack: [V7, 0x135, V61, V66, V69]

================================

Block 0x135
[0x135:0x14e]
---
Predecessors: [0x401]
Successors: []
---
0x135 JUMPDEST
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a DUP3
0x13b ISZERO
0x13c ISZERO
0x13d ISZERO
0x13e ISZERO
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP2
0x145 POP
0x146 POP
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP1
0x14b SWAP2
0x14c SUB
0x14d SWAP1
0x14e RETURN
---
0x135: JUMPDEST 
0x136: V73 = 0x40
0x138: V74 = M[0x40]
0x13b: V75 = ISZERO V246
0x13c: V76 = ISZERO V75
0x13d: V77 = ISZERO V76
0x13e: V78 = ISZERO V77
0x140: M[V74] = V78
0x141: V79 = 0x20
0x143: V80 = ADD 0x20 V74
0x147: V81 = 0x40
0x149: V82 = M[0x40]
0x14c: V83 = SUB V80 V82
0x14e: RETURN V82 V83
---
Entry stack: [V7, V246]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x14f
[0x14f:0x155]
---
Predecessors: [0x44]
Successors: [0x156, 0x15a]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14f: JUMPDEST 
0x150: V84 = CALLVALUE
0x151: V85 = ISZERO V84
0x152: V86 = 0x15a
0x155: JUMPI 0x15a V85
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14f]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V87 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x15a
[0x15a:0x1ce]
---
Predecessors: [0x14f]
Successors: [0x409]
---
0x15a JUMPDEST
0x15b PUSH2 0x1cf
0x15e PUSH1 0x4
0x160 DUP1
0x161 DUP1
0x162 CALLDATALOAD
0x163 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x178 AND
0x179 SWAP1
0x17a PUSH1 0x20
0x17c ADD
0x17d SWAP1
0x17e SWAP2
0x17f SWAP1
0x180 DUP1
0x181 CALLDATALOAD
0x182 SWAP1
0x183 PUSH1 0x20
0x185 ADD
0x186 SWAP1
0x187 DUP3
0x188 ADD
0x189 DUP1
0x18a CALLDATALOAD
0x18b SWAP1
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP1
0x190 DUP1
0x191 DUP1
0x192 PUSH1 0x20
0x194 MUL
0x195 PUSH1 0x20
0x197 ADD
0x198 PUSH1 0x40
0x19a MLOAD
0x19b SWAP1
0x19c DUP2
0x19d ADD
0x19e PUSH1 0x40
0x1a0 MSTORE
0x1a1 DUP1
0x1a2 SWAP4
0x1a3 SWAP3
0x1a4 SWAP2
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac DUP4
0x1ad DUP4
0x1ae PUSH1 0x20
0x1b0 MUL
0x1b1 DUP1
0x1b2 DUP3
0x1b3 DUP5
0x1b4 CALLDATACOPY
0x1b5 DUP3
0x1b6 ADD
0x1b7 SWAP2
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd POP
0x1be SWAP2
0x1bf SWAP1
0x1c0 DUP1
0x1c1 CALLDATALOAD
0x1c2 SWAP1
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 SWAP1
0x1c7 SWAP2
0x1c8 SWAP1
0x1c9 POP
0x1ca POP
0x1cb PUSH2 0x409
0x1ce JUMP
---
0x15a: JUMPDEST 
0x15b: V88 = 0x1cf
0x15e: V89 = 0x4
0x162: V90 = CALLDATALOAD 0x4
0x163: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x178: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x17a: V93 = 0x20
0x17c: V94 = ADD 0x20 0x4
0x181: V95 = CALLDATALOAD 0x24
0x183: V96 = 0x20
0x185: V97 = ADD 0x20 0x24
0x188: V98 = ADD 0x4 V95
0x18a: V99 = CALLDATALOAD V98
0x18c: V100 = 0x20
0x18e: V101 = ADD 0x20 V98
0x192: V102 = 0x20
0x194: V103 = MUL 0x20 V99
0x195: V104 = 0x20
0x197: V105 = ADD 0x20 V103
0x198: V106 = 0x40
0x19a: V107 = M[0x40]
0x19d: V108 = ADD V107 V105
0x19e: V109 = 0x40
0x1a0: M[0x40] = V108
0x1a8: M[V107] = V99
0x1a9: V110 = 0x20
0x1ab: V111 = ADD 0x20 V107
0x1ae: V112 = 0x20
0x1b0: V113 = MUL 0x20 V99
0x1b4: CALLDATACOPY V111 V101 V113
0x1b6: V114 = ADD V111 V113
0x1c1: V115 = CALLDATALOAD 0x44
0x1c3: V116 = 0x20
0x1c5: V117 = ADD 0x20 0x44
0x1cb: V118 = 0x409
0x1ce: JUMP 0x409
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1cf, V92, V107, V115]
Exit stack: [V7, 0x1cf, V92, V107, V115]

================================

Block 0x1cf
[0x1cf:0x1d0]
---
Predecessors: [0x53c]
Successors: []
---
0x1cf JUMPDEST
0x1d0 STOP
---
0x1cf: JUMPDEST 
0x1d0: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x1d1
[0x1d1:0x1db]
---
Predecessors: [0x5f]
Successors: [0x1dc]
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 DUP5
0x1d6 SWAP2
0x1d7 POP
0x1d8 PUSH1 0x0
0x1da SWAP1
0x1db POP
---
0x1d1: JUMPDEST 
0x1d2: V119 = 0x0
0x1d8: V120 = 0x0
---
Entry stack: [V7, 0xd4, V26, V41, V49]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x0]
Exit stack: [V7, 0xd4, V26, V41, V49, V26, 0x0]

================================

Block 0x1dc
[0x1dc:0x1e5]
---
Predecessors: [0x1d1, 0x2c4]
Successors: [0x1e6, 0x2cf]
---
0x1dc JUMPDEST
0x1dd DUP4
0x1de MLOAD
0x1df DUP2
0x1e0 LT
0x1e1 ISZERO
0x1e2 PUSH2 0x2cf
0x1e5 JUMPI
---
0x1dc: JUMPDEST 
0x1de: V121 = M[V41]
0x1e0: V122 = LT S0 V121
0x1e1: V123 = ISZERO V122
0x1e2: V124 = 0x2cf
0x1e5: JUMPI 0x2cf V123
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S0]

================================

Block 0x1e6
[0x1e6:0x20d]
---
Predecessors: [0x1dc]
Successors: [0x20e, 0x20f]
---
0x1e6 DUP2
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd PUSH4 0xa9059cbb
0x202 DUP6
0x203 DUP4
0x204 DUP2
0x205 MLOAD
0x206 DUP2
0x207 LT
0x208 ISZERO
0x209 ISZERO
0x20a PUSH2 0x20f
0x20d JUMPI
---
0x1e7: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x1fd: V127 = 0xa9059cbb
0x205: V128 = M[V41]
0x207: V129 = LT S0 V128
0x208: V130 = ISZERO V129
0x209: V131 = ISZERO V130
0x20a: V132 = 0x20f
0x20d: JUMPI 0x20f V131
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V126, 0xa9059cbb, S3, S0]
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S0, V126, 0xa9059cbb, V41, S0]

================================

Block 0x20e
[0x20e:0x20e]
---
Predecessors: [0x1e6]
Successors: []
---
0x20e INVALID
---
0x20e: INVALID 
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S4, V126, 0xa9059cbb, V41, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S4, V126, 0xa9059cbb, V41, S0]

================================

Block 0x20f
[0x20f:0x2a2]
---
Predecessors: [0x1e6]
Successors: [0x2a3, 0x2a7]
---
0x20f JUMPDEST
0x210 SWAP1
0x211 PUSH1 0x20
0x213 ADD
0x214 SWAP1
0x215 PUSH1 0x20
0x217 MUL
0x218 ADD
0x219 MLOAD
0x21a DUP6
0x21b PUSH1 0x0
0x21d PUSH1 0x40
0x21f MLOAD
0x220 PUSH1 0x20
0x222 ADD
0x223 MSTORE
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP4
0x228 PUSH4 0xffffffff
0x22d AND
0x22e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x24c MUL
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x4
0x251 ADD
0x252 DUP1
0x253 DUP4
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 DUP3
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a ADD
0x28b SWAP3
0x28c POP
0x28d POP
0x28e POP
0x28f PUSH1 0x20
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 DUP4
0x296 SUB
0x297 DUP2
0x298 PUSH1 0x0
0x29a DUP8
0x29b DUP1
0x29c EXTCODESIZE
0x29d ISZERO
0x29e ISZERO
0x29f PUSH2 0x2a7
0x2a2 JUMPI
---
0x20f: JUMPDEST 
0x211: V133 = 0x20
0x213: V134 = ADD 0x20 V41
0x215: V135 = 0x20
0x217: V136 = MUL 0x20 S0
0x218: V137 = ADD V136 V134
0x219: V138 = M[V137]
0x21b: V139 = 0x0
0x21d: V140 = 0x40
0x21f: V141 = M[0x40]
0x220: V142 = 0x20
0x222: V143 = ADD 0x20 V141
0x223: M[V143] = 0x0
0x224: V144 = 0x40
0x226: V145 = M[0x40]
0x228: V146 = 0xffffffff
0x22d: V147 = AND 0xffffffff 0xa9059cbb
0x22e: V148 = 0x100000000000000000000000000000000000000000000000000000000
0x24c: V149 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x24e: M[V145] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x24f: V150 = 0x4
0x251: V151 = ADD 0x4 V145
0x254: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x26a: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x281: M[V151] = V155
0x282: V156 = 0x20
0x284: V157 = ADD 0x20 V151
0x287: M[V157] = V49
0x288: V158 = 0x20
0x28a: V159 = ADD 0x20 V157
0x28f: V160 = 0x20
0x291: V161 = 0x40
0x293: V162 = M[0x40]
0x296: V163 = SUB V159 V162
0x298: V164 = 0x0
0x29c: V165 = EXTCODESIZE V126
0x29d: V166 = ISZERO V165
0x29e: V167 = ISZERO V166
0x29f: V168 = 0x2a7
0x2a2: JUMPI 0x2a7 V167
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S4, V126, 0xa9059cbb, V41, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V159, 0x20, V162, V163, V162, 0x0, S3]
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S4, V126, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V126]

================================

Block 0x2a3
[0x2a3:0x2a6]
---
Predecessors: [0x20f]
Successors: []
---
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 REVERT
---
0x2a3: V169 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S9, V126, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S9, V126, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V126]

================================

Block 0x2a7
[0x2a7:0x2b3]
---
Predecessors: [0x20f]
Successors: [0x2b4, 0x2b8]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0x2c6
0x2ab GAS
0x2ac SUB
0x2ad CALL
0x2ae ISZERO
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V170 = 0x2c6
0x2ab: V171 = GAS
0x2ac: V172 = SUB V171 0x2c6
0x2ad: V173 = CALL V172 V126 0x0 V162 V163 V162 0x20
0x2ae: V174 = ISZERO V173
0x2af: V175 = ISZERO V174
0x2b0: V176 = 0x2b8
0x2b3: JUMPI 0x2b8 V175
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S9, V126, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V126]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S9, V126, 0xa9059cbb, V159]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x2a7]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V177 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S3, V126, 0xa9059cbb, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S3, V126, 0xa9059cbb, V159]

================================

Block 0x2b8
[0x2b8:0x2c3]
---
Predecessors: [0x2a7]
Successors: [0x2c4]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf DUP1
0x2c0 MLOAD
0x2c1 SWAP1
0x2c2 POP
0x2c3 POP
---
0x2b8: JUMPDEST 
0x2bc: V178 = 0x40
0x2be: V179 = M[0x40]
0x2c0: V180 = M[V179]
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S3, V126, 0xa9059cbb, V159]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S3]

================================

Block 0x2c4
[0x2c4:0x2ce]
---
Predecessors: [0x2b8]
Successors: [0x1dc]
---
0x2c4 JUMPDEST
0x2c5 DUP1
0x2c6 PUSH1 0x1
0x2c8 ADD
0x2c9 SWAP1
0x2ca POP
0x2cb PUSH2 0x1dc
0x2ce JUMP
---
0x2c4: JUMPDEST 
0x2c6: V181 = 0x1
0x2c8: V182 = ADD 0x1 S0
0x2cb: V183 = 0x1dc
0x2ce: JUMP 0x1dc
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S0]
Stack pops: 1
Stack additions: [V182]
Exit stack: [V7, 0xd4, V26, V41, V49, V26, V182]

================================

Block 0x2cf
[0x2cf:0x2cf]
---
Predecessors: [0x1dc]
Successors: [0x2d0]
---
0x2cf JUMPDEST
---
0x2cf: JUMPDEST 
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd4, V26, V41, V49, V26, S0]

================================

Block 0x2d0
[0x2d0:0x2d6]
---
Predecessors: [0x2cf]
Successors: [0xd4]
---
0x2d0 JUMPDEST
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 JUMP
---
0x2d0: JUMPDEST 
0x2d6: JUMP 0xd4
---
Entry stack: [V7, 0xd4, V26, V41, V49, V26, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V7]

================================

Block 0x2d7
[0x2d7:0x330]
---
Predecessors: [0xe1]
Successors: [0x331, 0x335]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db PUSH1 0x0
0x2dd DUP1
0x2de SWAP1
0x2df SLOAD
0x2e0 SWAP1
0x2e1 PUSH2 0x100
0x2e4 EXP
0x2e5 SWAP1
0x2e6 DIV
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 AND
0x313 CALLER
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 AND
0x32a EQ
0x32b ISZERO
0x32c ISZERO
0x32d PUSH2 0x335
0x330 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V184 = 0x0
0x2db: V185 = 0x0
0x2df: V186 = S[0x0]
0x2e1: V187 = 0x100
0x2e4: V188 = EXP 0x100 0x0
0x2e6: V189 = DIV V186 0x1
0x2e7: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x2fd: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x313: V194 = CALLER
0x314: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x329: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x32a: V197 = EQ V196 V193
0x32b: V198 = ISZERO V197
0x32c: V199 = ISZERO V198
0x32d: V200 = 0x335
0x330: JUMPI 0x335 V199
---
Entry stack: [V7, 0x135, V61, V66, V69]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V7, 0x135, V61, V66, V69, 0x0, 0x0]

================================

Block 0x331
[0x331:0x334]
---
Predecessors: [0x2d7]
Successors: []
---
0x331 PUSH1 0x0
0x333 DUP1
0x334 REVERT
---
0x331: V201 = 0x0
0x334: REVERT 0x0 0x0
---
Entry stack: [V7, 0x135, V61, V66, V69, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x135, V61, V66, V69, 0x0, 0x0]

================================

Block 0x335
[0x335:0x3de]
---
Predecessors: [0x2d7]
Successors: [0x3df, 0x3e3]
---
0x335 JUMPDEST
0x336 DUP5
0x337 SWAP1
0x338 POP
0x339 DUP1
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 PUSH4 0xa9059cbb
0x355 DUP6
0x356 DUP6
0x357 PUSH1 0x0
0x359 PUSH1 0x40
0x35b MLOAD
0x35c PUSH1 0x20
0x35e ADD
0x35f MSTORE
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP4
0x364 PUSH4 0xffffffff
0x369 AND
0x36a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x388 MUL
0x389 DUP2
0x38a MSTORE
0x38b PUSH1 0x4
0x38d ADD
0x38e DUP1
0x38f DUP4
0x390 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a5 AND
0x3a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bb AND
0x3bc DUP2
0x3bd MSTORE
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 DUP3
0x3c2 DUP2
0x3c3 MSTORE
0x3c4 PUSH1 0x20
0x3c6 ADD
0x3c7 SWAP3
0x3c8 POP
0x3c9 POP
0x3ca POP
0x3cb PUSH1 0x20
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 DUP4
0x3d2 SUB
0x3d3 DUP2
0x3d4 PUSH1 0x0
0x3d6 DUP8
0x3d7 DUP1
0x3d8 EXTCODESIZE
0x3d9 ISZERO
0x3da ISZERO
0x3db PUSH2 0x3e3
0x3de JUMPI
---
0x335: JUMPDEST 
0x33a: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x350: V204 = 0xa9059cbb
0x357: V205 = 0x0
0x359: V206 = 0x40
0x35b: V207 = M[0x40]
0x35c: V208 = 0x20
0x35e: V209 = ADD 0x20 V207
0x35f: M[V209] = 0x0
0x360: V210 = 0x40
0x362: V211 = M[0x40]
0x364: V212 = 0xffffffff
0x369: V213 = AND 0xffffffff 0xa9059cbb
0x36a: V214 = 0x100000000000000000000000000000000000000000000000000000000
0x388: V215 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x38a: M[V211] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x38b: V216 = 0x4
0x38d: V217 = ADD 0x4 V211
0x390: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x3a6: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bb: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3bd: M[V217] = V221
0x3be: V222 = 0x20
0x3c0: V223 = ADD 0x20 V217
0x3c3: M[V223] = V69
0x3c4: V224 = 0x20
0x3c6: V225 = ADD 0x20 V223
0x3cb: V226 = 0x20
0x3cd: V227 = 0x40
0x3cf: V228 = M[0x40]
0x3d2: V229 = SUB V225 V228
0x3d4: V230 = 0x0
0x3d8: V231 = EXTCODESIZE V203
0x3d9: V232 = ISZERO V231
0x3da: V233 = ISZERO V232
0x3db: V234 = 0x3e3
0x3de: JUMPI 0x3e3 V233
---
Entry stack: [V7, 0x135, V61, V66, V69, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V203, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V203]
Exit stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V203]

================================

Block 0x3df
[0x3df:0x3e2]
---
Predecessors: [0x335]
Successors: []
---
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 REVERT
---
0x3df: V235 = 0x0
0x3e2: REVERT 0x0 0x0
---
Entry stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V203]

================================

Block 0x3e3
[0x3e3:0x3ef]
---
Predecessors: [0x335]
Successors: [0x3f0, 0x3f4]
---
0x3e3 JUMPDEST
0x3e4 PUSH2 0x2c6
0x3e7 GAS
0x3e8 SUB
0x3e9 CALL
0x3ea ISZERO
0x3eb ISZERO
0x3ec PUSH2 0x3f4
0x3ef JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V236 = 0x2c6
0x3e7: V237 = GAS
0x3e8: V238 = SUB V237 0x2c6
0x3e9: V239 = CALL V238 V203 0x0 V228 V229 V228 0x20
0x3ea: V240 = ISZERO V239
0x3eb: V241 = ISZERO V240
0x3ec: V242 = 0x3f4
0x3ef: JUMPI 0x3f4 V241
---
Entry stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V203]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225]

================================

Block 0x3f0
[0x3f0:0x3f3]
---
Predecessors: [0x3e3]
Successors: []
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
---
0x3f0: V243 = 0x0
0x3f3: REVERT 0x0 0x0
---
Entry stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225]

================================

Block 0x3f4
[0x3f4:0x400]
---
Predecessors: [0x3e3]
Successors: [0x401]
---
0x3f4 JUMPDEST
0x3f5 POP
0x3f6 POP
0x3f7 POP
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb DUP1
0x3fc MLOAD
0x3fd SWAP1
0x3fe POP
0x3ff SWAP2
0x400 POP
---
0x3f4: JUMPDEST 
0x3f8: V244 = 0x40
0x3fa: V245 = M[0x40]
0x3fc: V246 = M[V245]
---
Entry stack: [V7, 0x135, V61, V66, V69, 0x0, V61, V203, 0xa9059cbb, V225]
Stack pops: 5
Stack additions: [V246, S3]
Exit stack: [V7, 0x135, V61, V66, V69, V246, V61]

================================

Block 0x401
[0x401:0x408]
---
Predecessors: [0x3f4]
Successors: [0x135]
---
0x401 JUMPDEST
0x402 POP
0x403 SWAP4
0x404 SWAP3
0x405 POP
0x406 POP
0x407 POP
0x408 JUMP
---
0x401: JUMPDEST 
0x408: JUMP 0x135
---
Entry stack: [V7, 0x135, V61, V66, V69, V246, V61]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V7, V246]

================================

Block 0x409
[0x409:0x413]
---
Predecessors: [0x15a]
Successors: [0x414]
---
0x409 JUMPDEST
0x40a PUSH1 0x0
0x40c DUP1
0x40d DUP5
0x40e SWAP2
0x40f POP
0x410 PUSH1 0x0
0x412 SWAP1
0x413 POP
---
0x409: JUMPDEST 
0x40a: V247 = 0x0
0x410: V248 = 0x0
---
Entry stack: [V7, 0x1cf, V92, V107, V115]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x0]
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, 0x0]

================================

Block 0x414
[0x414:0x41d]
---
Predecessors: [0x409, 0x530]
Successors: [0x41e, 0x53b]
---
0x414 JUMPDEST
0x415 DUP4
0x416 MLOAD
0x417 DUP2
0x418 LT
0x419 ISZERO
0x41a PUSH2 0x53b
0x41d JUMPI
---
0x414: JUMPDEST 
0x416: V249 = M[V107]
0x418: V250 = LT S0 V249
0x419: V251 = ISZERO V250
0x41a: V252 = 0x53b
0x41d: JUMPI 0x53b V251
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S0]

================================

Block 0x41e
[0x41e:0x446]
---
Predecessors: [0x414]
Successors: [0x447, 0x448]
---
0x41e DUP2
0x41f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x434 AND
0x435 PUSH4 0x23b872dd
0x43a CALLER
0x43b DUP7
0x43c DUP5
0x43d DUP2
0x43e MLOAD
0x43f DUP2
0x440 LT
0x441 ISZERO
0x442 ISZERO
0x443 PUSH2 0x448
0x446 JUMPI
---
0x41f: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x434: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x435: V255 = 0x23b872dd
0x43a: V256 = CALLER
0x43e: V257 = M[V107]
0x440: V258 = LT S0 V257
0x441: V259 = ISZERO V258
0x442: V260 = ISZERO V259
0x443: V261 = 0x448
0x446: JUMPI 0x448 V260
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V254, 0x23b872dd, V256, S3, S0]
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S0, V254, 0x23b872dd, V256, V107, S0]

================================

Block 0x447
[0x447:0x447]
---
Predecessors: [0x41e]
Successors: []
---
0x447 INVALID
---
0x447: INVALID 
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S5, V254, 0x23b872dd, V256, V107, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S5, V254, 0x23b872dd, V256, V107, S0]

================================

Block 0x448
[0x448:0x50e]
---
Predecessors: [0x41e]
Successors: [0x50f, 0x513]
---
0x448 JUMPDEST
0x449 SWAP1
0x44a PUSH1 0x20
0x44c ADD
0x44d SWAP1
0x44e PUSH1 0x20
0x450 MUL
0x451 ADD
0x452 MLOAD
0x453 DUP7
0x454 PUSH1 0x0
0x456 PUSH1 0x40
0x458 MLOAD
0x459 PUSH1 0x20
0x45b ADD
0x45c MSTORE
0x45d PUSH1 0x40
0x45f MLOAD
0x460 DUP5
0x461 PUSH4 0xffffffff
0x466 AND
0x467 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x485 MUL
0x486 DUP2
0x487 MSTORE
0x488 PUSH1 0x4
0x48a ADD
0x48b DUP1
0x48c DUP5
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 AND
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 AND
0x4b9 DUP2
0x4ba MSTORE
0x4bb PUSH1 0x20
0x4bd ADD
0x4be DUP4
0x4bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d4 AND
0x4d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ea AND
0x4eb DUP2
0x4ec MSTORE
0x4ed PUSH1 0x20
0x4ef ADD
0x4f0 DUP3
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 PUSH1 0x20
0x4f5 ADD
0x4f6 SWAP4
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa POP
0x4fb PUSH1 0x20
0x4fd PUSH1 0x40
0x4ff MLOAD
0x500 DUP1
0x501 DUP4
0x502 SUB
0x503 DUP2
0x504 PUSH1 0x0
0x506 DUP8
0x507 DUP1
0x508 EXTCODESIZE
0x509 ISZERO
0x50a ISZERO
0x50b PUSH2 0x513
0x50e JUMPI
---
0x448: JUMPDEST 
0x44a: V262 = 0x20
0x44c: V263 = ADD 0x20 V107
0x44e: V264 = 0x20
0x450: V265 = MUL 0x20 S0
0x451: V266 = ADD V265 V263
0x452: V267 = M[V266]
0x454: V268 = 0x0
0x456: V269 = 0x40
0x458: V270 = M[0x40]
0x459: V271 = 0x20
0x45b: V272 = ADD 0x20 V270
0x45c: M[V272] = 0x0
0x45d: V273 = 0x40
0x45f: V274 = M[0x40]
0x461: V275 = 0xffffffff
0x466: V276 = AND 0xffffffff 0x23b872dd
0x467: V277 = 0x100000000000000000000000000000000000000000000000000000000
0x485: V278 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x487: M[V274] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x488: V279 = 0x4
0x48a: V280 = ADD 0x4 V274
0x48d: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x4a3: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x4ba: M[V280] = V284
0x4bb: V285 = 0x20
0x4bd: V286 = ADD 0x20 V280
0x4bf: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x4d5: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x4ec: M[V286] = V290
0x4ed: V291 = 0x20
0x4ef: V292 = ADD 0x20 V286
0x4f2: M[V292] = V115
0x4f3: V293 = 0x20
0x4f5: V294 = ADD 0x20 V292
0x4fb: V295 = 0x20
0x4fd: V296 = 0x40
0x4ff: V297 = M[0x40]
0x502: V298 = SUB V294 V297
0x504: V299 = 0x0
0x508: V300 = EXTCODESIZE V254
0x509: V301 = ISZERO V300
0x50a: V302 = ISZERO V301
0x50b: V303 = 0x513
0x50e: JUMPI 0x513 V302
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S5, V254, 0x23b872dd, V256, V107, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V294, 0x20, V297, V298, V297, 0x0, S4]
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S5, V254, 0x23b872dd, V294, 0x20, V297, V298, V297, 0x0, V254]

================================

Block 0x50f
[0x50f:0x512]
---
Predecessors: [0x448]
Successors: []
---
0x50f PUSH1 0x0
0x511 DUP1
0x512 REVERT
---
0x50f: V304 = 0x0
0x512: REVERT 0x0 0x0
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S9, V254, 0x23b872dd, V294, 0x20, V297, V298, V297, 0x0, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S9, V254, 0x23b872dd, V294, 0x20, V297, V298, V297, 0x0, V254]

================================

Block 0x513
[0x513:0x51f]
---
Predecessors: [0x448]
Successors: [0x520, 0x524]
---
0x513 JUMPDEST
0x514 PUSH2 0x2c6
0x517 GAS
0x518 SUB
0x519 CALL
0x51a ISZERO
0x51b ISZERO
0x51c PUSH2 0x524
0x51f JUMPI
---
0x513: JUMPDEST 
0x514: V305 = 0x2c6
0x517: V306 = GAS
0x518: V307 = SUB V306 0x2c6
0x519: V308 = CALL V307 V254 0x0 V297 V298 V297 0x20
0x51a: V309 = ISZERO V308
0x51b: V310 = ISZERO V309
0x51c: V311 = 0x524
0x51f: JUMPI 0x524 V310
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S9, V254, 0x23b872dd, V294, 0x20, V297, V298, V297, 0x0, V254]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S9, V254, 0x23b872dd, V294]

================================

Block 0x520
[0x520:0x523]
---
Predecessors: [0x513]
Successors: []
---
0x520 PUSH1 0x0
0x522 DUP1
0x523 REVERT
---
0x520: V312 = 0x0
0x523: REVERT 0x0 0x0
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S3, V254, 0x23b872dd, V294]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S3, V254, 0x23b872dd, V294]

================================

Block 0x524
[0x524:0x52f]
---
Predecessors: [0x513]
Successors: [0x530]
---
0x524 JUMPDEST
0x525 POP
0x526 POP
0x527 POP
0x528 PUSH1 0x40
0x52a MLOAD
0x52b DUP1
0x52c MLOAD
0x52d SWAP1
0x52e POP
0x52f POP
---
0x524: JUMPDEST 
0x528: V313 = 0x40
0x52a: V314 = M[0x40]
0x52c: V315 = M[V314]
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S3, V254, 0x23b872dd, V294]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S3]

================================

Block 0x530
[0x530:0x53a]
---
Predecessors: [0x524]
Successors: [0x414]
---
0x530 JUMPDEST
0x531 DUP1
0x532 PUSH1 0x1
0x534 ADD
0x535 SWAP1
0x536 POP
0x537 PUSH2 0x414
0x53a JUMP
---
0x530: JUMPDEST 
0x532: V316 = 0x1
0x534: V317 = ADD 0x1 S0
0x537: V318 = 0x414
0x53a: JUMP 0x414
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S0]
Stack pops: 1
Stack additions: [V317]
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, V317]

================================

Block 0x53b
[0x53b:0x53b]
---
Predecessors: [0x414]
Successors: [0x53c]
---
0x53b JUMPDEST
---
0x53b: JUMPDEST 
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1cf, V92, V107, V115, V92, S0]

================================

Block 0x53c
[0x53c:0x542]
---
Predecessors: [0x53b]
Successors: [0x1cf]
---
0x53c JUMPDEST
0x53d POP
0x53e POP
0x53f POP
0x540 POP
0x541 POP
0x542 JUMP
---
0x53c: JUMPDEST 
0x542: JUMP 0x1cf
---
Entry stack: [V7, 0x1cf, V92, V107, V115, V92, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V7]

================================

Block 0x543
[0x543:0x56e]
---
Predecessors: []
Successors: []
---
0x543 STOP
0x544 LOG1
0x545 PUSH6 0x627a7a723058
0x54c SHA3
0x54d DUP14
0x54e MISSING 0xc1
0x54f SWAP12
0x550 TIMESTAMP
0x551 MISSING 0xd3
0x552 LOG2
0x553 MISSING 0x2a
0x554 MISSING 0xce
0x555 INVALID
0x556 MISSING 0xeb
0x557 MISSING 0xe7
0x558 SWAP4
0x559 PUSH13 0x3fac429c8375acd281779a3d7
0x567 SWAP14
0x568 MSTORE
0x569 MISSING 0xd1
0x56a MISSING 0xeb
0x56b SGT
0x56c MISSING 0xb4
0x56d STOP
0x56e MISSING 0x29
---
0x543: STOP 
0x544: LOG S0 S1 S2
0x545: V319 = 0x627a7a723058
0x54c: V320 = SHA3 0x627a7a723058 S3
0x54e: MISSING 0xc1
0x550: V321 = TIMESTAMP
0x551: MISSING 0xd3
0x552: LOG S0 S1 S2 S3
0x553: MISSING 0x2a
0x554: MISSING 0xce
0x555: INVALID 
0x556: MISSING 0xeb
0x557: MISSING 0xe7
0x559: V322 = 0x3fac429c8375acd281779a3d7
0x568: M[S13] = S4
0x569: MISSING 0xd1
0x56a: MISSING 0xeb
0x56b: V323 = SGT S0 S1
0x56c: MISSING 0xb4
0x56d: STOP 
0x56e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S16, V320, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V321, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, S1, S2, S3, S0, S5, S6, S7, S8, S9, S10, S11, S12, 0x3fac429c8375acd281779a3d7, V323]
Exit stack: []

================================

Function 0:
Public function signature: 0xb61fa7c0
Entry block: 0x54
Exit block: 0x2b4
Body: 0x54, 0x5b, 0x5f, 0xd4, 0x1d1, 0x1dc, 0x1e6, 0x20e, 0x20f, 0x2a3, 0x2a7, 0x2b4, 0x2b8, 0x2c4, 0x2cf, 0x2d0

Function 1:
Public function signature: 0xbeabacc8
Entry block: 0xd6
Exit block: 0x135
Body: 0xd6, 0xdd, 0xe1, 0x135, 0x2d7, 0x331, 0x335, 0x3df, 0x3e3, 0x3f0, 0x3f4, 0x401

Function 2:
Public function signature: 0xc668dfd7
Entry block: 0x14f
Exit block: 0x520
Body: 0x14f, 0x156, 0x15a, 0x1cf, 0x409, 0x414, 0x41e, 0x447, 0x448, 0x50f, 0x513, 0x520, 0x524, 0x530, 0x53b, 0x53c

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

