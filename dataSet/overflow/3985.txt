Block 0x0
[0x0:0x1f]
---
Predecessors: []
Successors: []
---
0x0 PUSH20 0x0
0x15 ADDRESS
0x16 EQ
0x17 PUSH1 0x80
0x19 PUSH1 0x40
0x1b MSTORE
0x1c PUSH1 0x0
0x1e DUP1
0x1f REVERT
---
0x0: V0 = 0x0
0x15: V1 = ADDRESS
0x16: V2 = EQ V1 0x0
0x17: V3 = 0x80
0x19: V4 = 0x40
0x1b: M[0x40] = 0x80
0x1c: V5 = 0x0
0x1f: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0x20
[0x20:0x58]
---
Predecessors: []
Successors: [0x59]
Has unresolved jump.
---
0x20 STOP
0x21 LOG1
0x22 PUSH6 0x627a7a723058
0x29 SHA3
0x2a SWAP15
0x2b SSTORE
0x2c PUSH4 0x4ebb766
0x31 MISSING 0xf6
0x32 MISSING 0xd3
0x33 MISSING 0xba
0x34 PUSH4 0x567c3130
0x39 MISSING 0xf7
0x3a MISSING 0xbd
0x3b MISSING 0x2b
0x3c PUSH26 0x36ba88c0adbf889cbe21671a6200296080604052600436106100
0x57 MISSING 0x4c
0x58 JUMPI
---
0x20: STOP 
0x21: LOG S0 S1 S2
0x22: V6 = 0x627a7a723058
0x29: V7 = SHA3 0x627a7a723058 S3
0x2b: S[S18] = S4
0x2c: V8 = 0x4ebb766
0x31: MISSING 0xf6
0x32: MISSING 0xd3
0x33: MISSING 0xba
0x34: V9 = 0x567c3130
0x39: MISSING 0xf7
0x3a: MISSING 0xbd
0x3b: MISSING 0x2b
0x3c: V10 = 0x36ba88c0adbf889cbe21671a6200296080604052600436106100
0x57: MISSING 0x4c
0x58: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4ebb766, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V7, 0x567c3130, 0x36ba88c0adbf889cbe21671a6200296080604052600436106100]
Exit stack: []

================================

Block 0x59
[0x59:0x8c]
---
Predecessors: [0x20]
Successors: [0x8d]
---
0x59 PUSH1 0x0
0x5b CALLDATALOAD
0x5c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a SWAP1
0x7b DIV
0x7c PUSH4 0xffffffff
0x81 AND
0x82 DUP1
0x83 PUSH4 0x51b79495
0x88 EQ
0x89 PUSH2 0x51
0x8c JUMPI
---
0x59: V11 = 0x0
0x5b: V12 = CALLDATALOAD 0x0
0x5c: V13 = 0x100000000000000000000000000000000000000000000000000000000
0x7b: V14 = DIV V12 0x100000000000000000000000000000000000000000000000000000000
0x7c: V15 = 0xffffffff
0x81: V16 = AND 0xffffffff V14
0x83: V17 = 0x51b79495
0x88: V18 = EQ 0x51b79495 V16
0x89: V19 = 0x51
0x8c: THROWI V18
---
Entry stack: []
Stack pops: 0
Stack additions: [V16]
Exit stack: [V16]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x59]
Successors: [0x98]
---
0x8d DUP1
0x8e PUSH4 0x7ecebe00
0x93 EQ
0x94 PUSH2 0x13d
0x97 JUMPI
---
0x8e: V20 = 0x7ecebe00
0x93: V21 = EQ 0x7ecebe00 V16
0x94: V22 = 0x13d
0x97: THROWI V21
---
Entry stack: [V16]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V16]

================================

Block 0x98
[0x98:0x190]
---
Predecessors: [0x8d]
Successors: [0x191]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
0x9d JUMPDEST
0x9e PUSH2 0x13b
0xa1 PUSH1 0x4
0xa3 DUP1
0xa4 CALLDATASIZE
0xa5 SUB
0xa6 DUP2
0xa7 ADD
0xa8 SWAP1
0xa9 DUP1
0xaa DUP1
0xab CALLDATALOAD
0xac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1 AND
0xc2 SWAP1
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP1
0xc7 SWAP3
0xc8 SWAP2
0xc9 SWAP1
0xca DUP1
0xcb CALLDATALOAD
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 SWAP1
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 SWAP3
0xe8 SWAP2
0xe9 SWAP1
0xea DUP1
0xeb CALLDATALOAD
0xec SWAP1
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP1
0xf1 DUP3
0xf2 ADD
0xf3 DUP1
0xf4 CALLDATALOAD
0xf5 SWAP1
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa DUP1
0xfb DUP1
0xfc PUSH1 0x1f
0xfe ADD
0xff PUSH1 0x20
0x101 DUP1
0x102 SWAP2
0x103 DIV
0x104 MUL
0x105 PUSH1 0x20
0x107 ADD
0x108 PUSH1 0x40
0x10a MLOAD
0x10b SWAP1
0x10c DUP2
0x10d ADD
0x10e PUSH1 0x40
0x110 MSTORE
0x111 DUP1
0x112 SWAP4
0x113 SWAP3
0x114 SWAP2
0x115 SWAP1
0x116 DUP2
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c DUP4
0x11d DUP4
0x11e DUP1
0x11f DUP3
0x120 DUP5
0x121 CALLDATACOPY
0x122 DUP3
0x123 ADD
0x124 SWAP2
0x125 POP
0x126 POP
0x127 POP
0x128 POP
0x129 POP
0x12a POP
0x12b SWAP2
0x12c SWAP3
0x12d SWAP2
0x12e SWAP3
0x12f SWAP1
0x130 DUP1
0x131 CALLDATALOAD
0x132 SWAP1
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 SWAP3
0x138 SWAP2
0x139 SWAP1
0x13a DUP1
0x13b CALLDATALOAD
0x13c SWAP1
0x13d PUSH1 0x20
0x13f ADD
0x140 SWAP1
0x141 DUP3
0x142 ADD
0x143 DUP1
0x144 CALLDATALOAD
0x145 SWAP1
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a DUP1
0x14b DUP1
0x14c PUSH1 0x1f
0x14e ADD
0x14f PUSH1 0x20
0x151 DUP1
0x152 SWAP2
0x153 DIV
0x154 MUL
0x155 PUSH1 0x20
0x157 ADD
0x158 PUSH1 0x40
0x15a MLOAD
0x15b SWAP1
0x15c DUP2
0x15d ADD
0x15e PUSH1 0x40
0x160 MSTORE
0x161 DUP1
0x162 SWAP4
0x163 SWAP3
0x164 SWAP2
0x165 SWAP1
0x166 DUP2
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c DUP4
0x16d DUP4
0x16e DUP1
0x16f DUP3
0x170 DUP5
0x171 CALLDATACOPY
0x172 DUP3
0x173 ADD
0x174 SWAP2
0x175 POP
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a POP
0x17b SWAP2
0x17c SWAP3
0x17d SWAP2
0x17e SWAP3
0x17f SWAP1
0x180 POP
0x181 POP
0x182 POP
0x183 PUSH2 0x194
0x186 JUMP
0x187 JUMPDEST
0x188 STOP
0x189 JUMPDEST
0x18a CALLVALUE
0x18b DUP1
0x18c ISZERO
0x18d PUSH2 0x149
0x190 JUMPI
---
0x98: JUMPDEST 
0x99: V23 = 0x0
0x9c: REVERT 0x0 0x0
0x9d: JUMPDEST 
0x9e: V24 = 0x13b
0xa1: V25 = 0x4
0xa4: V26 = CALLDATASIZE
0xa5: V27 = SUB V26 0x4
0xa7: V28 = ADD 0x4 V27
0xab: V29 = CALLDATALOAD 0x4
0xac: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0xc3: V32 = 0x20
0xc5: V33 = ADD 0x20 0x4
0xcb: V34 = CALLDATALOAD 0x24
0xcc: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xe3: V37 = 0x20
0xe5: V38 = ADD 0x20 0x24
0xeb: V39 = CALLDATALOAD 0x44
0xed: V40 = 0x20
0xef: V41 = ADD 0x20 0x44
0xf2: V42 = ADD 0x4 V39
0xf4: V43 = CALLDATALOAD V42
0xf6: V44 = 0x20
0xf8: V45 = ADD 0x20 V42
0xfc: V46 = 0x1f
0xfe: V47 = ADD 0x1f V43
0xff: V48 = 0x20
0x103: V49 = DIV V47 0x20
0x104: V50 = MUL V49 0x20
0x105: V51 = 0x20
0x107: V52 = ADD 0x20 V50
0x108: V53 = 0x40
0x10a: V54 = M[0x40]
0x10d: V55 = ADD V54 V52
0x10e: V56 = 0x40
0x110: M[0x40] = V55
0x118: M[V54] = V43
0x119: V57 = 0x20
0x11b: V58 = ADD 0x20 V54
0x121: CALLDATACOPY V58 V45 V43
0x123: V59 = ADD V58 V43
0x131: V60 = CALLDATALOAD 0x64
0x133: V61 = 0x20
0x135: V62 = ADD 0x20 0x64
0x13b: V63 = CALLDATALOAD 0x84
0x13d: V64 = 0x20
0x13f: V65 = ADD 0x20 0x84
0x142: V66 = ADD 0x4 V63
0x144: V67 = CALLDATALOAD V66
0x146: V68 = 0x20
0x148: V69 = ADD 0x20 V66
0x14c: V70 = 0x1f
0x14e: V71 = ADD 0x1f V67
0x14f: V72 = 0x20
0x153: V73 = DIV V71 0x20
0x154: V74 = MUL V73 0x20
0x155: V75 = 0x20
0x157: V76 = ADD 0x20 V74
0x158: V77 = 0x40
0x15a: V78 = M[0x40]
0x15d: V79 = ADD V78 V76
0x15e: V80 = 0x40
0x160: M[0x40] = V79
0x168: M[V78] = V67
0x169: V81 = 0x20
0x16b: V82 = ADD 0x20 V78
0x171: CALLDATACOPY V82 V69 V67
0x173: V83 = ADD V82 V67
0x183: V84 = 0x194
0x186: THROW 
0x187: JUMPDEST 
0x188: STOP 
0x189: JUMPDEST 
0x18a: V85 = CALLVALUE
0x18c: V86 = ISZERO V85
0x18d: V87 = 0x149
0x190: THROWI V86
---
Entry stack: [V16]
Stack pops: 0
Stack additions: [V78, V60, V54, V36, V31, 0x13b, V85]
Exit stack: []

================================

Block 0x191
[0x191:0x219]
---
Predecessors: [0x98]
Successors: [0x21a]
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
0x195 JUMPDEST
0x196 POP
0x197 PUSH2 0x17e
0x19a PUSH1 0x4
0x19c DUP1
0x19d CALLDATASIZE
0x19e SUB
0x19f DUP2
0x1a0 ADD
0x1a1 SWAP1
0x1a2 DUP1
0x1a3 DUP1
0x1a4 CALLDATALOAD
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb SWAP1
0x1bc PUSH1 0x20
0x1be ADD
0x1bf SWAP1
0x1c0 SWAP3
0x1c1 SWAP2
0x1c2 SWAP1
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 PUSH2 0x529
0x1c9 JUMP
0x1ca JUMPDEST
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf DUP3
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 SWAP2
0x1d6 POP
0x1d7 POP
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db DUP1
0x1dc SWAP2
0x1dd SUB
0x1de SWAP1
0x1df RETURN
0x1e0 JUMPDEST
0x1e1 PUSH1 0x60
0x1e3 PUSH1 0x0
0x1e5 DUP6
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc ADDRESS
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 EQ
0x214 ISZERO
0x215 ISZERO
0x216 PUSH2 0x1d2
0x219 JUMPI
---
0x191: V88 = 0x0
0x194: REVERT 0x0 0x0
0x195: JUMPDEST 
0x197: V89 = 0x17e
0x19a: V90 = 0x4
0x19d: V91 = CALLDATASIZE
0x19e: V92 = SUB V91 0x4
0x1a0: V93 = ADD 0x4 V92
0x1a4: V94 = CALLDATALOAD 0x4
0x1a5: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1bc: V97 = 0x20
0x1be: V98 = ADD 0x20 0x4
0x1c6: V99 = 0x529
0x1c9: THROW 
0x1ca: JUMPDEST 
0x1cb: V100 = 0x40
0x1cd: V101 = M[0x40]
0x1d1: M[V101] = S0
0x1d2: V102 = 0x20
0x1d4: V103 = ADD 0x20 V101
0x1d8: V104 = 0x40
0x1da: V105 = M[0x40]
0x1dd: V106 = SUB V103 V105
0x1df: RETURN V105 V106
0x1e0: JUMPDEST 
0x1e1: V107 = 0x60
0x1e3: V108 = 0x0
0x1e6: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1fc: V111 = ADDRESS
0x1fd: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x213: V114 = EQ V113 V110
0x214: V115 = ISZERO V114
0x215: V116 = ISZERO V115
0x216: V117 = 0x1d2
0x219: THROWI V116
---
Entry stack: [V85]
Stack pops: 0
Stack additions: [V96, 0x17e, 0x0, 0x60, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x21a
[0x21a:0x2aa]
---
Predecessors: [0x191]
Successors: [0x2ab]
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
0x21e JUMPDEST
0x21f PUSH1 0x40
0x221 DUP1
0x222 MLOAD
0x223 SWAP1
0x224 DUP2
0x225 ADD
0x226 PUSH1 0x40
0x228 MSTORE
0x229 DUP1
0x22a PUSH1 0x1c
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x252 DUP2
0x253 MSTORE
0x254 POP
0x255 SWAP2
0x256 POP
0x257 DUP2
0x258 DUP7
0x259 DUP7
0x25a DUP7
0x25b PUSH1 0x40
0x25d MLOAD
0x25e DUP1
0x25f DUP5
0x260 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x275 AND
0x276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28b AND
0x28c PUSH13 0x1000000000000000000000000
0x29a MUL
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x14
0x29f ADD
0x2a0 DUP4
0x2a1 DUP1
0x2a2 MLOAD
0x2a3 SWAP1
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 SWAP1
0x2a8 DUP1
0x2a9 DUP4
0x2aa DUP4
---
0x21a: V118 = 0x0
0x21d: REVERT 0x0 0x0
0x21e: JUMPDEST 
0x21f: V119 = 0x40
0x222: V120 = M[0x40]
0x225: V121 = ADD V120 0x40
0x226: V122 = 0x40
0x228: M[0x40] = V121
0x22a: V123 = 0x1c
0x22d: M[V120] = 0x1c
0x22e: V124 = 0x20
0x230: V125 = ADD 0x20 V120
0x231: V126 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x253: M[V125] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x25b: V127 = 0x40
0x25d: V128 = M[0x40]
0x260: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x275: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x276: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x28c: V133 = 0x1000000000000000000000000
0x29a: V134 = MUL 0x1000000000000000000000000 V132
0x29c: M[V128] = V134
0x29d: V135 = 0x14
0x29f: V136 = ADD 0x14 V128
0x2a2: V137 = M[S4]
0x2a4: V138 = 0x20
0x2a6: V139 = ADD 0x20 S4
---
Entry stack: [S5, S4, S3, S2, 0x60, 0x0]
Stack pops: 0
Stack additions: [V139, V136, V137, V137, V139, V136, V128, S3, S4, S5, V120, S0, V120, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x2ab
[0x2ab:0x2b5]
---
Predecessors: [0x21a]
Successors: [0x2b6]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x20
0x2ae DUP4
0x2af LT
0x2b0 ISZERO
0x2b1 ISZERO
0x2b2 PUSH2 0x284
0x2b5 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V140 = 0x20
0x2af: V141 = LT V137 0x20
0x2b0: V142 = ISZERO V141
0x2b1: V143 = ISZERO V142
0x2b2: V144 = 0x284
0x2b5: THROWI V143
---
Entry stack: [S16, S15, S14, S13, V120, S11, V120, S9, S8, S7, V128, V136, V139, V137, V137, V136, V139]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S16, S15, S14, S13, V120, S11, V120, S9, S8, S7, V128, V136, V139, V137, V137, V136, V139]

================================

Block 0x2b6
[0x2b6:0x314]
---
Predecessors: [0x2ab]
Successors: [0x315]
---
0x2b6 DUP1
0x2b7 MLOAD
0x2b8 DUP3
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc DUP3
0x2bd ADD
0x2be SWAP2
0x2bf POP
0x2c0 PUSH1 0x20
0x2c2 DUP2
0x2c3 ADD
0x2c4 SWAP1
0x2c5 POP
0x2c6 PUSH1 0x20
0x2c8 DUP4
0x2c9 SUB
0x2ca SWAP3
0x2cb POP
0x2cc PUSH2 0x25f
0x2cf JUMP
0x2d0 JUMPDEST
0x2d1 PUSH1 0x1
0x2d3 DUP4
0x2d4 PUSH1 0x20
0x2d6 SUB
0x2d7 PUSH2 0x100
0x2da EXP
0x2db SUB
0x2dc DUP1
0x2dd NOT
0x2de DUP3
0x2df MLOAD
0x2e0 AND
0x2e1 DUP2
0x2e2 DUP5
0x2e3 MLOAD
0x2e4 AND
0x2e5 DUP1
0x2e6 DUP3
0x2e7 OR
0x2e8 DUP6
0x2e9 MSTORE
0x2ea POP
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 SWAP1
0x2f1 POP
0x2f2 ADD
0x2f3 DUP3
0x2f4 DUP2
0x2f5 MSTORE
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 SWAP4
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd POP
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 DUP1
0x302 SWAP2
0x303 SUB
0x304 SWAP1
0x305 SHA3
0x306 PUSH1 0x40
0x308 MLOAD
0x309 DUP1
0x30a DUP4
0x30b DUP1
0x30c MLOAD
0x30d SWAP1
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 DUP1
0x313 DUP4
0x314 DUP4
---
0x2b7: V145 = M[V139]
0x2b9: M[V136] = V145
0x2ba: V146 = 0x20
0x2bd: V147 = ADD V136 0x20
0x2c0: V148 = 0x20
0x2c3: V149 = ADD V139 0x20
0x2c6: V150 = 0x20
0x2c9: V151 = SUB V137 0x20
0x2cc: V152 = 0x25f
0x2cf: THROW 
0x2d0: JUMPDEST 
0x2d1: V153 = 0x1
0x2d4: V154 = 0x20
0x2d6: V155 = SUB 0x20 S2
0x2d7: V156 = 0x100
0x2da: V157 = EXP 0x100 V155
0x2db: V158 = SUB V157 0x1
0x2dd: V159 = NOT V158
0x2df: V160 = M[S0]
0x2e0: V161 = AND V160 V159
0x2e3: V162 = M[S1]
0x2e4: V163 = AND V162 V158
0x2e7: V164 = OR V161 V163
0x2e9: M[S1] = V164
0x2f2: V165 = ADD S3 S5
0x2f5: M[V165] = S7
0x2f6: V166 = 0x20
0x2f8: V167 = ADD 0x20 V165
0x2fe: V168 = 0x40
0x300: V169 = M[0x40]
0x303: V170 = SUB V167 V169
0x305: V171 = SHA3 V169 V170
0x306: V172 = 0x40
0x308: V173 = M[0x40]
0x30c: V174 = M[S10]
0x30e: V175 = 0x20
0x310: V176 = ADD 0x20 S10
---
Entry stack: [S16, S15, S14, S13, V120, S11, V120, S9, S8, S7, V128, V136, V139, V137, V137, V136, V139]
Stack pops: 3
Stack additions: [V176, V173, V174, V174, V176, V173, V173, V171, S10]
Exit stack: []

================================

Block 0x315
[0x315:0x31f]
---
Predecessors: [0x2b6]
Successors: [0x320]
---
0x315 JUMPDEST
0x316 PUSH1 0x20
0x318 DUP4
0x319 LT
0x31a ISZERO
0x31b ISZERO
0x31c PUSH2 0x2ee
0x31f JUMPI
---
0x315: JUMPDEST 
0x316: V177 = 0x20
0x319: V178 = LT V174 0x20
0x31a: V179 = ISZERO V178
0x31b: V180 = ISZERO V179
0x31c: V181 = 0x2ee
0x31f: THROWI V180
---
Entry stack: [S8, V171, V173, V173, V176, V174, V174, V173, V176]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V171, V173, V173, V176, V174, V174, V173, V176]

================================

Block 0x320
[0x320:0x417]
---
Predecessors: [0x315]
Successors: [0x418]
---
0x320 DUP1
0x321 MLOAD
0x322 DUP3
0x323 MSTORE
0x324 PUSH1 0x20
0x326 DUP3
0x327 ADD
0x328 SWAP2
0x329 POP
0x32a PUSH1 0x20
0x32c DUP2
0x32d ADD
0x32e SWAP1
0x32f POP
0x330 PUSH1 0x20
0x332 DUP4
0x333 SUB
0x334 SWAP3
0x335 POP
0x336 PUSH2 0x2c9
0x339 JUMP
0x33a JUMPDEST
0x33b PUSH1 0x1
0x33d DUP4
0x33e PUSH1 0x20
0x340 SUB
0x341 PUSH2 0x100
0x344 EXP
0x345 SUB
0x346 DUP1
0x347 NOT
0x348 DUP3
0x349 MLOAD
0x34a AND
0x34b DUP2
0x34c DUP5
0x34d MLOAD
0x34e AND
0x34f DUP1
0x350 DUP3
0x351 OR
0x352 DUP6
0x353 MSTORE
0x354 POP
0x355 POP
0x356 POP
0x357 POP
0x358 POP
0x359 POP
0x35a SWAP1
0x35b POP
0x35c ADD
0x35d DUP3
0x35e PUSH1 0x0
0x360 NOT
0x361 AND
0x362 PUSH1 0x0
0x364 NOT
0x365 AND
0x366 DUP2
0x367 MSTORE
0x368 PUSH1 0x20
0x36a ADD
0x36b SWAP3
0x36c POP
0x36d POP
0x36e POP
0x36f PUSH1 0x40
0x371 MLOAD
0x372 DUP1
0x373 SWAP2
0x374 SUB
0x375 SWAP1
0x376 SHA3
0x377 SWAP1
0x378 POP
0x379 PUSH2 0x336
0x37c DUP2
0x37d DUP5
0x37e PUSH2 0x541
0x381 JUMP
0x382 JUMPDEST
0x383 PUSH1 0x0
0x385 DUP1
0x386 PUSH2 0x100
0x389 EXP
0x38a DUP2
0x38b SLOAD
0x38c DUP2
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 MUL
0x3a3 NOT
0x3a4 AND
0x3a5 SWAP1
0x3a6 DUP4
0x3a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bc AND
0x3bd MUL
0x3be OR
0x3bf SWAP1
0x3c0 SSTORE
0x3c1 POP
0x3c2 DUP7
0x3c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d8 AND
0x3d9 PUSH1 0x0
0x3db DUP1
0x3dc SWAP1
0x3dd SLOAD
0x3de SWAP1
0x3df PUSH2 0x100
0x3e2 EXP
0x3e3 SWAP1
0x3e4 DIV
0x3e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fa AND
0x3fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x410 AND
0x411 EQ
0x412 ISZERO
0x413 ISZERO
0x414 PUSH2 0x3d0
0x417 JUMPI
---
0x321: V182 = M[V176]
0x323: M[V173] = V182
0x324: V183 = 0x20
0x327: V184 = ADD V173 0x20
0x32a: V185 = 0x20
0x32d: V186 = ADD V176 0x20
0x330: V187 = 0x20
0x333: V188 = SUB V174 0x20
0x336: V189 = 0x2c9
0x339: THROW 
0x33a: JUMPDEST 
0x33b: V190 = 0x1
0x33e: V191 = 0x20
0x340: V192 = SUB 0x20 S2
0x341: V193 = 0x100
0x344: V194 = EXP 0x100 V192
0x345: V195 = SUB V194 0x1
0x347: V196 = NOT V195
0x349: V197 = M[S0]
0x34a: V198 = AND V197 V196
0x34d: V199 = M[S1]
0x34e: V200 = AND V199 V195
0x351: V201 = OR V198 V200
0x353: M[S1] = V201
0x35c: V202 = ADD S3 S5
0x35e: V203 = 0x0
0x360: V204 = NOT 0x0
0x361: V205 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S7
0x362: V206 = 0x0
0x364: V207 = NOT 0x0
0x365: V208 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V205
0x367: M[V202] = V208
0x368: V209 = 0x20
0x36a: V210 = ADD 0x20 V202
0x36f: V211 = 0x40
0x371: V212 = M[0x40]
0x374: V213 = SUB V210 V212
0x376: V214 = SHA3 V212 V213
0x379: V215 = 0x336
0x37e: V216 = 0x541
0x381: THROW 
0x382: JUMPDEST 
0x383: V217 = 0x0
0x386: V218 = 0x100
0x389: V219 = EXP 0x100 0x0
0x38b: V220 = S[0x0]
0x38d: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V222 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3a3: V223 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V224 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V220
0x3a7: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3bd: V227 = MUL V226 0x1
0x3be: V228 = OR V227 V224
0x3c0: S[0x0] = V228
0x3c3: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x3d9: V231 = 0x0
0x3dd: V232 = S[0x0]
0x3df: V233 = 0x100
0x3e2: V234 = EXP 0x100 0x0
0x3e4: V235 = DIV V232 0x1
0x3e5: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fa: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x3fb: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x410: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x411: V240 = EQ V239 V230
0x412: V241 = ISZERO V240
0x413: V242 = ISZERO V241
0x414: V243 = 0x3d0
0x417: THROWI V242
---
Entry stack: [S8, V171, V173, V173, V176, V174, V174, V173, V176]
Stack pops: 3
Stack additions: [S11, V214, 0x336, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x418
[0x418:0x493]
---
Predecessors: [0x320]
Successors: [0x494]
---
0x418 PUSH1 0x0
0x41a DUP1
0x41b REVERT
0x41c JUMPDEST
0x41d DUP4
0x41e PUSH1 0x1
0x420 PUSH1 0x0
0x422 DUP1
0x423 PUSH1 0x0
0x425 SWAP1
0x426 SLOAD
0x427 SWAP1
0x428 PUSH2 0x100
0x42b EXP
0x42c SWAP1
0x42d DIV
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 DUP2
0x471 MSTORE
0x472 PUSH1 0x20
0x474 ADD
0x475 SWAP1
0x476 DUP2
0x477 MSTORE
0x478 PUSH1 0x20
0x47a ADD
0x47b PUSH1 0x0
0x47d SHA3
0x47e PUSH1 0x0
0x480 DUP2
0x481 SLOAD
0x482 DUP1
0x483 SWAP3
0x484 SWAP2
0x485 SWAP1
0x486 PUSH1 0x1
0x488 ADD
0x489 SWAP2
0x48a SWAP1
0x48b POP
0x48c SSTORE
0x48d EQ
0x48e ISZERO
0x48f ISZERO
0x490 PUSH2 0x44c
0x493 JUMPI
---
0x418: V244 = 0x0
0x41b: REVERT 0x0 0x0
0x41c: JUMPDEST 
0x41e: V245 = 0x1
0x420: V246 = 0x0
0x423: V247 = 0x0
0x426: V248 = S[0x0]
0x428: V249 = 0x100
0x42b: V250 = EXP 0x100 0x0
0x42d: V251 = DIV V248 0x1
0x42e: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x444: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x45a: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x471: M[0x0] = V257
0x472: V258 = 0x20
0x474: V259 = ADD 0x20 0x0
0x477: M[0x20] = 0x1
0x478: V260 = 0x20
0x47a: V261 = ADD 0x20 0x20
0x47b: V262 = 0x0
0x47d: V263 = SHA3 0x0 0x40
0x47e: V264 = 0x0
0x481: V265 = S[V263]
0x486: V266 = 0x1
0x488: V267 = ADD 0x1 V265
0x48c: S[V263] = V267
0x48d: V268 = EQ V265 S3
0x48e: V269 = ISZERO V268
0x48f: V270 = ISZERO V269
0x490: V271 = 0x44c
0x493: THROWI V270
---
Entry stack: [S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0x494
[0x494:0x4c2]
---
Predecessors: [0x418]
Successors: [0x4c3]
---
0x494 PUSH1 0x0
0x496 DUP1
0x497 REVERT
0x498 JUMPDEST
0x499 DUP6
0x49a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4af AND
0x4b0 CALLVALUE
0x4b1 DUP7
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 DUP1
0x4b6 DUP3
0x4b7 DUP1
0x4b8 MLOAD
0x4b9 SWAP1
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd SWAP1
0x4be DUP1
0x4bf DUP4
0x4c0 DUP4
0x4c1 PUSH1 0x0
---
0x494: V272 = 0x0
0x497: REVERT 0x0 0x0
0x498: JUMPDEST 
0x49a: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x4b0: V275 = CALLVALUE
0x4b2: V276 = 0x40
0x4b4: V277 = M[0x40]
0x4b8: V278 = M[S4]
0x4ba: V279 = 0x20
0x4bc: V280 = ADD 0x20 S4
0x4c1: V281 = 0x0
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, V280, V277, V278, V278, V280, V277, V277, S4, V275, V274, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x4c3
[0x4c3:0x4cb]
---
Predecessors: [0x494]
Successors: [0x4cc]
---
0x4c3 JUMPDEST
0x4c4 DUP4
0x4c5 DUP2
0x4c6 LT
0x4c7 ISZERO
0x4c8 PUSH2 0x492
0x4cb JUMPI
---
0x4c3: JUMPDEST 
0x4c6: V282 = LT 0x0 V278
0x4c7: V283 = ISZERO V282
0x4c8: V284 = 0x492
0x4cb: THROWI V283
---
Entry stack: [S16, S15, S14, S13, S12, S11, V274, V275, S8, V277, V277, V280, V278, V278, V277, V280, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S16, S15, S14, S13, S12, S11, V274, V275, S8, V277, V277, V280, V278, V278, V277, V280, 0x0]

================================

Block 0x4cc
[0x4cc:0x4f1]
---
Predecessors: [0x4c3]
Successors: [0x4f2]
---
0x4cc DUP1
0x4cd DUP3
0x4ce ADD
0x4cf MLOAD
0x4d0 DUP2
0x4d1 DUP5
0x4d2 ADD
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 DUP2
0x4d7 ADD
0x4d8 SWAP1
0x4d9 POP
0x4da PUSH2 0x477
0x4dd JUMP
0x4de JUMPDEST
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 POP
0x4e3 SWAP1
0x4e4 POP
0x4e5 SWAP1
0x4e6 DUP2
0x4e7 ADD
0x4e8 SWAP1
0x4e9 PUSH1 0x1f
0x4eb AND
0x4ec DUP1
0x4ed ISZERO
0x4ee PUSH2 0x4bf
0x4f1 JUMPI
---
0x4ce: V285 = ADD V280 0x0
0x4cf: V286 = M[V285]
0x4d2: V287 = ADD V277 0x0
0x4d3: M[V287] = V286
0x4d4: V288 = 0x20
0x4d7: V289 = ADD 0x0 0x20
0x4da: V290 = 0x477
0x4dd: THROW 
0x4de: JUMPDEST 
0x4e7: V291 = ADD S4 S6
0x4e9: V292 = 0x1f
0x4eb: V293 = AND 0x1f S4
0x4ed: V294 = ISZERO V293
0x4ee: V295 = 0x4bf
0x4f1: THROWI V294
---
Entry stack: [S16, S15, S14, S13, S12, S11, V274, V275, S8, V277, V277, V280, V278, V278, V277, V280, 0x0]
Stack pops: 3
Stack additions: [V293, V291]
Exit stack: []

================================

Block 0x4f2
[0x4f2:0x50a]
---
Predecessors: [0x4cc]
Successors: [0x50b]
---
0x4f2 DUP1
0x4f3 DUP3
0x4f4 SUB
0x4f5 DUP1
0x4f6 MLOAD
0x4f7 PUSH1 0x1
0x4f9 DUP4
0x4fa PUSH1 0x20
0x4fc SUB
0x4fd PUSH2 0x100
0x500 EXP
0x501 SUB
0x502 NOT
0x503 AND
0x504 DUP2
0x505 MSTORE
0x506 PUSH1 0x20
0x508 ADD
0x509 SWAP2
0x50a POP
---
0x4f4: V296 = SUB V291 V293
0x4f6: V297 = M[V296]
0x4f7: V298 = 0x1
0x4fa: V299 = 0x20
0x4fc: V300 = SUB 0x20 V293
0x4fd: V301 = 0x100
0x500: V302 = EXP 0x100 V300
0x501: V303 = SUB V302 0x1
0x502: V304 = NOT V303
0x503: V305 = AND V304 V297
0x505: M[V296] = V305
0x506: V306 = 0x20
0x508: V307 = ADD 0x20 V296
---
Entry stack: [V291, V293]
Stack pops: 2
Stack additions: [V307, S0]
Exit stack: [V307, V293]

================================

Block 0x50b
[0x50b:0x526]
---
Predecessors: [0x4f2]
Successors: [0x527]
---
0x50b JUMPDEST
0x50c POP
0x50d SWAP2
0x50e POP
0x50f POP
0x510 PUSH1 0x0
0x512 PUSH1 0x40
0x514 MLOAD
0x515 DUP1
0x516 DUP4
0x517 SUB
0x518 DUP2
0x519 DUP6
0x51a DUP8
0x51b GAS
0x51c CALL
0x51d SWAP3
0x51e POP
0x51f POP
0x520 POP
0x521 ISZERO
0x522 ISZERO
0x523 PUSH2 0x4df
0x526 JUMPI
---
0x50b: JUMPDEST 
0x510: V308 = 0x0
0x512: V309 = 0x40
0x514: V310 = M[0x40]
0x517: V311 = SUB V307 V310
0x51b: V312 = GAS
0x51c: V313 = CALL V312 S5 S4 V310 V311 V310 0x0
0x521: V314 = ISZERO V313
0x522: V315 = ISZERO V314
0x523: V316 = 0x4df
0x526: THROWI V315
---
Entry stack: [V307, V293]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x527
[0x527:0x59e]
---
Predecessors: [0x50b]
Successors: [0x59f]
---
0x527 PUSH1 0x0
0x529 DUP1
0x52a REVERT
0x52b JUMPDEST
0x52c PUSH1 0x0
0x52e DUP1
0x52f PUSH1 0x0
0x531 PUSH2 0x100
0x534 EXP
0x535 DUP2
0x536 SLOAD
0x537 DUP2
0x538 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54d MUL
0x54e NOT
0x54f AND
0x550 SWAP1
0x551 DUP4
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 AND
0x568 MUL
0x569 OR
0x56a SWAP1
0x56b SSTORE
0x56c POP
0x56d POP
0x56e POP
0x56f POP
0x570 POP
0x571 POP
0x572 POP
0x573 POP
0x574 JUMP
0x575 JUMPDEST
0x576 PUSH1 0x1
0x578 PUSH1 0x20
0x57a MSTORE
0x57b DUP1
0x57c PUSH1 0x0
0x57e MSTORE
0x57f PUSH1 0x40
0x581 PUSH1 0x0
0x583 SHA3
0x584 PUSH1 0x0
0x586 SWAP2
0x587 POP
0x588 SWAP1
0x589 POP
0x58a SLOAD
0x58b DUP2
0x58c JUMP
0x58d JUMPDEST
0x58e PUSH1 0x0
0x590 DUP1
0x591 PUSH1 0x0
0x593 DUP1
0x594 PUSH1 0x41
0x596 DUP6
0x597 MLOAD
0x598 EQ
0x599 ISZERO
0x59a ISZERO
0x59b PUSH2 0x55b
0x59e JUMPI
---
0x527: V317 = 0x0
0x52a: REVERT 0x0 0x0
0x52b: JUMPDEST 
0x52c: V318 = 0x0
0x52f: V319 = 0x0
0x531: V320 = 0x100
0x534: V321 = EXP 0x100 0x0
0x536: V322 = S[0x0]
0x538: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x54d: V324 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x54e: V325 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V326 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V322
0x552: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x568: V329 = MUL 0x0 0x1
0x569: V330 = OR 0x0 V326
0x56b: S[0x0] = V330
0x574: JUMP S7
0x575: JUMPDEST 
0x576: V331 = 0x1
0x578: V332 = 0x20
0x57a: M[0x20] = 0x1
0x57c: V333 = 0x0
0x57e: M[0x0] = S0
0x57f: V334 = 0x40
0x581: V335 = 0x0
0x583: V336 = SHA3 0x0 0x40
0x584: V337 = 0x0
0x58a: V338 = S[V336]
0x58c: JUMP S1
0x58d: JUMPDEST 
0x58e: V339 = 0x0
0x591: V340 = 0x0
0x594: V341 = 0x41
0x597: V342 = M[S0]
0x598: V343 = EQ V342 0x41
0x599: V344 = ISZERO V343
0x59a: V345 = ISZERO V344
0x59b: V346 = 0x55b
0x59e: THROWI V345
---
Entry stack: []
Stack pops: 0
Stack additions: [V338, S1, 0x0, 0x0, 0x0, 0x0, S0]
Exit stack: []

================================

Block 0x59f
[0x59f:0x5cb]
---
Predecessors: [0x527]
Successors: [0x5cc]
---
0x59f PUSH1 0x0
0x5a1 SWAP4
0x5a2 POP
0x5a3 PUSH2 0x630
0x5a6 JUMP
0x5a7 JUMPDEST
0x5a8 PUSH1 0x20
0x5aa DUP6
0x5ab ADD
0x5ac MLOAD
0x5ad SWAP3
0x5ae POP
0x5af PUSH1 0x40
0x5b1 DUP6
0x5b2 ADD
0x5b3 MLOAD
0x5b4 SWAP2
0x5b5 POP
0x5b6 PUSH1 0x60
0x5b8 DUP6
0x5b9 ADD
0x5ba MLOAD
0x5bb PUSH1 0x0
0x5bd BYTE
0x5be SWAP1
0x5bf POP
0x5c0 PUSH1 0x1b
0x5c2 DUP2
0x5c3 PUSH1 0xff
0x5c5 AND
0x5c6 LT
0x5c7 ISZERO
0x5c8 PUSH2 0x586
0x5cb JUMPI
---
0x59f: V347 = 0x0
0x5a3: V348 = 0x630
0x5a6: THROW 
0x5a7: JUMPDEST 
0x5a8: V349 = 0x20
0x5ab: V350 = ADD S4 0x20
0x5ac: V351 = M[V350]
0x5af: V352 = 0x40
0x5b2: V353 = ADD S4 0x40
0x5b3: V354 = M[V353]
0x5b6: V355 = 0x60
0x5b9: V356 = ADD S4 0x60
0x5ba: V357 = M[V356]
0x5bb: V358 = 0x0
0x5bd: V359 = BYTE 0x0 V357
0x5c0: V360 = 0x1b
0x5c3: V361 = 0xff
0x5c5: V362 = AND 0xff V359
0x5c6: V363 = LT V362 0x1b
0x5c7: V364 = ISZERO V363
0x5c8: V365 = 0x586
0x5cb: THROWI V364
---
Entry stack: [S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V359, V354, V351, S3, S4]
Exit stack: []

================================

Block 0x5cc
[0x5cc:0x5d1]
---
Predecessors: [0x59f]
Successors: [0x5d2]
---
0x5cc PUSH1 0x1b
0x5ce DUP2
0x5cf ADD
0x5d0 SWAP1
0x5d1 POP
---
0x5cc: V366 = 0x1b
0x5cf: V367 = ADD V359 0x1b
---
Entry stack: [S4, S3, V351, V354, V359]
Stack pops: 1
Stack additions: [V367]
Exit stack: [S4, S3, V351, V354, V367]

================================

Block 0x5d2
[0x5d2:0x5e0]
---
Predecessors: [0x5cc]
Successors: [0x5e1]
---
0x5d2 JUMPDEST
0x5d3 PUSH1 0x1b
0x5d5 DUP2
0x5d6 PUSH1 0xff
0x5d8 AND
0x5d9 EQ
0x5da ISZERO
0x5db DUP1
0x5dc ISZERO
0x5dd PUSH2 0x59e
0x5e0 JUMPI
---
0x5d2: JUMPDEST 
0x5d3: V368 = 0x1b
0x5d6: V369 = 0xff
0x5d8: V370 = AND 0xff V367
0x5d9: V371 = EQ V370 0x1b
0x5da: V372 = ISZERO V371
0x5dc: V373 = ISZERO V372
0x5dd: V374 = 0x59e
0x5e0: THROWI V373
---
Entry stack: [S4, S3, V351, V354, V367]
Stack pops: 1
Stack additions: [S0, V372]
Exit stack: [S4, S3, V351, V354, V367, V372]

================================

Block 0x5e1
[0x5e1:0x5e9]
---
Predecessors: [0x5d2]
Successors: [0x5ea]
---
0x5e1 POP
0x5e2 PUSH1 0x1c
0x5e4 DUP2
0x5e5 PUSH1 0xff
0x5e7 AND
0x5e8 EQ
0x5e9 ISZERO
---
0x5e2: V375 = 0x1c
0x5e5: V376 = 0xff
0x5e7: V377 = AND 0xff V367
0x5e8: V378 = EQ V377 0x1c
0x5e9: V379 = ISZERO V378
---
Entry stack: [S5, S4, V351, V354, V367, V372]
Stack pops: 2
Stack additions: [S1, V379]
Exit stack: [S5, S4, V351, V354, V367, V379]

================================

Block 0x5ea
[0x5ea:0x5ef]
---
Predecessors: [0x5e1]
Successors: [0x5f0]
---
0x5ea JUMPDEST
0x5eb ISZERO
0x5ec PUSH2 0x5ac
0x5ef JUMPI
---
0x5ea: JUMPDEST 
0x5eb: V380 = ISZERO V379
0x5ec: V381 = 0x5ac
0x5ef: THROWI V380
---
Entry stack: [S5, S4, V351, V354, V367, V379]
Stack pops: 1
Stack additions: []
Exit stack: [S5, S4, V351, V354, V367]

================================

Block 0x5f0
[0x5f0:0x665]
---
Predecessors: [0x5ea]
Successors: [0x666]
---
0x5f0 PUSH1 0x0
0x5f2 SWAP4
0x5f3 POP
0x5f4 PUSH2 0x630
0x5f7 JUMP
0x5f8 JUMPDEST
0x5f9 PUSH1 0x1
0x5fb DUP7
0x5fc DUP3
0x5fd DUP6
0x5fe DUP6
0x5ff PUSH1 0x40
0x601 MLOAD
0x602 PUSH1 0x0
0x604 DUP2
0x605 MSTORE
0x606 PUSH1 0x20
0x608 ADD
0x609 PUSH1 0x40
0x60b MSTORE
0x60c PUSH1 0x40
0x60e MLOAD
0x60f DUP1
0x610 DUP6
0x611 PUSH1 0x0
0x613 NOT
0x614 AND
0x615 PUSH1 0x0
0x617 NOT
0x618 AND
0x619 DUP2
0x61a MSTORE
0x61b PUSH1 0x20
0x61d ADD
0x61e DUP5
0x61f PUSH1 0xff
0x621 AND
0x622 PUSH1 0xff
0x624 AND
0x625 DUP2
0x626 MSTORE
0x627 PUSH1 0x20
0x629 ADD
0x62a DUP4
0x62b PUSH1 0x0
0x62d NOT
0x62e AND
0x62f PUSH1 0x0
0x631 NOT
0x632 AND
0x633 DUP2
0x634 MSTORE
0x635 PUSH1 0x20
0x637 ADD
0x638 DUP3
0x639 PUSH1 0x0
0x63b NOT
0x63c AND
0x63d PUSH1 0x0
0x63f NOT
0x640 AND
0x641 DUP2
0x642 MSTORE
0x643 PUSH1 0x20
0x645 ADD
0x646 SWAP5
0x647 POP
0x648 POP
0x649 POP
0x64a POP
0x64b POP
0x64c PUSH1 0x20
0x64e PUSH1 0x40
0x650 MLOAD
0x651 PUSH1 0x20
0x653 DUP2
0x654 SUB
0x655 SWAP1
0x656 DUP1
0x657 DUP5
0x658 SUB
0x659 SWAP1
0x65a PUSH1 0x0
0x65c DUP7
0x65d GAS
0x65e CALL
0x65f ISZERO
0x660 DUP1
0x661 ISZERO
0x662 PUSH2 0x623
0x665 JUMPI
---
0x5f0: V382 = 0x0
0x5f4: V383 = 0x630
0x5f7: THROW 
0x5f8: JUMPDEST 
0x5f9: V384 = 0x1
0x5ff: V385 = 0x40
0x601: V386 = M[0x40]
0x602: V387 = 0x0
0x605: M[V386] = 0x0
0x606: V388 = 0x20
0x608: V389 = ADD 0x20 V386
0x609: V390 = 0x40
0x60b: M[0x40] = V389
0x60c: V391 = 0x40
0x60e: V392 = M[0x40]
0x611: V393 = 0x0
0x613: V394 = NOT 0x0
0x614: V395 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S5
0x615: V396 = 0x0
0x617: V397 = NOT 0x0
0x618: V398 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V395
0x61a: M[V392] = V398
0x61b: V399 = 0x20
0x61d: V400 = ADD 0x20 V392
0x61f: V401 = 0xff
0x621: V402 = AND 0xff S0
0x622: V403 = 0xff
0x624: V404 = AND 0xff V402
0x626: M[V400] = V404
0x627: V405 = 0x20
0x629: V406 = ADD 0x20 V400
0x62b: V407 = 0x0
0x62d: V408 = NOT 0x0
0x62e: V409 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S2
0x62f: V410 = 0x0
0x631: V411 = NOT 0x0
0x632: V412 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V409
0x634: M[V406] = V412
0x635: V413 = 0x20
0x637: V414 = ADD 0x20 V406
0x639: V415 = 0x0
0x63b: V416 = NOT 0x0
0x63c: V417 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S1
0x63d: V418 = 0x0
0x63f: V419 = NOT 0x0
0x640: V420 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V417
0x642: M[V414] = V420
0x643: V421 = 0x20
0x645: V422 = ADD 0x20 V414
0x64c: V423 = 0x20
0x64e: V424 = 0x40
0x650: V425 = M[0x40]
0x651: V426 = 0x20
0x654: V427 = SUB V425 0x20
0x658: V428 = SUB V422 V425
0x65a: V429 = 0x0
0x65d: V430 = GAS
0x65e: V431 = CALL V430 0x1 0x0 V425 V428 V427 0x20
0x65f: V432 = ISZERO V431
0x661: V433 = ISZERO V432
0x662: V434 = 0x623
0x665: THROWI V433
---
Entry stack: [S4, S3, V351, V354, V367]
Stack pops: 4
Stack additions: [V432, V422, 0x1, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x666
[0x666:0x67b]
---
Predecessors: [0x5f0]
Successors: [0x67c]
---
0x666 RETURNDATASIZE
0x667 PUSH1 0x0
0x669 DUP1
0x66a RETURNDATACOPY
0x66b RETURNDATASIZE
0x66c PUSH1 0x0
0x66e REVERT
0x66f JUMPDEST
0x670 POP
0x671 POP
0x672 POP
0x673 PUSH1 0x20
0x675 PUSH1 0x40
0x677 MLOAD
0x678 SUB
0x679 MLOAD
0x67a SWAP4
0x67b POP
---
0x666: V435 = RETURNDATASIZE
0x667: V436 = 0x0
0x66a: RETURNDATACOPY 0x0 0x0 V435
0x66b: V437 = RETURNDATASIZE
0x66c: V438 = 0x0
0x66e: REVERT 0x0 V437
0x66f: JUMPDEST 
0x673: V439 = 0x20
0x675: V440 = 0x40
0x677: V441 = M[0x40]
0x678: V442 = SUB V441 0x20
0x679: V443 = M[V442]
---
Entry stack: [S8, S7, S6, S5, S4, S3, 0x1, V422, V432]
Stack pops: 0
Stack additions: [S3, S4, S5, V443]
Exit stack: []

================================

Block 0x67c
[0x67c:0x6b0]
---
Predecessors: [0x666]
Successors: []
---
0x67c JUMPDEST
0x67d POP
0x67e POP
0x67f POP
0x680 SWAP3
0x681 SWAP2
0x682 POP
0x683 POP
0x684 JUMP
0x685 STOP
0x686 LOG1
0x687 PUSH6 0x627a7a723058
0x68e SHA3
0x68f MISSING 0xed
0x690 SSTORE
0x691 MISSING 0xf7
0x692 PUSH15 0xb94009f9588f8e14171fe58946060d
0x6a2 PUSH14 0xc07d876caa10e6eb12a80ef40029
---
0x67c: JUMPDEST 
0x684: JUMP S6
0x685: STOP 
0x686: LOG S0 S1 S2
0x687: V444 = 0x627a7a723058
0x68e: V445 = SHA3 0x627a7a723058 S3
0x68f: MISSING 0xed
0x690: S[S0] = S1
0x691: MISSING 0xf7
0x692: V446 = 0xb94009f9588f8e14171fe58946060d
0x6a2: V447 = 0xc07d876caa10e6eb12a80ef40029
---
Entry stack: [V443, S2, S1, S0]
Stack pops: 102
Stack additions: [0xc07d876caa10e6eb12a80ef40029, 0xb94009f9588f8e14171fe58946060d]
Exit stack: []

================================

Function 0:
Public function signature: 0x7ecebe00
Entry block: 0x98
Exit block: 0x67c
Body: 0x98, 0x191, 0x21a, 0x2ab, 0x2b6, 0x315, 0x320, 0x418, 0x494, 0x4c3, 0x4cc, 0x4f2, 0x50b, 0x527, 0x59f, 0x5cc, 0x5d2, 0x5e1, 0x5ea, 0x5f0, 0x666, 0x67c

Function 1:
Public fallback function
Entry block: 0x98
Exit block: 0x98
Body: 0x98

