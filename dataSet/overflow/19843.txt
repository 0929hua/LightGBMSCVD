Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xdb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xdb
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xdb
0xc: JUMPI 0xdb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xdd]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x9d0b12e
0x3c EQ
0x3d PUSH2 0xdd
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x9d0b12e
0x3c: V13 = EQ 0x9d0b12e V11
0x3d: V14 = 0xdd
0x40: JUMPI 0xdd V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x12a]
---
0x41 DUP1
0x42 PUSH4 0x1bd983a4
0x47 EQ
0x48 PUSH2 0x12a
0x4b JUMPI
---
0x42: V15 = 0x1bd983a4
0x47: V16 = EQ 0x1bd983a4 V11
0x48: V17 = 0x12a
0x4b: JUMPI 0x12a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x156]
---
0x4c DUP1
0x4d PUSH4 0x50c28588
0x52 EQ
0x53 PUSH2 0x156
0x56 JUMPI
---
0x4d: V18 = 0x50c28588
0x52: V19 = EQ 0x50c28588 V11
0x53: V20 = 0x156
0x56: JUMPI 0x156 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1a3]
---
0x57 DUP1
0x58 PUSH4 0x57ea89b6
0x5d EQ
0x5e PUSH2 0x1a3
0x61 JUMPI
---
0x58: V21 = 0x57ea89b6
0x5d: V22 = EQ 0x57ea89b6 V11
0x5e: V23 = 0x1a3
0x61: JUMPI 0x1a3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1b8]
---
0x62 DUP1
0x63 PUSH4 0x5fbf79a2
0x68 EQ
0x69 PUSH2 0x1b8
0x6c JUMPI
---
0x63: V24 = 0x5fbf79a2
0x68: V25 = EQ 0x5fbf79a2 V11
0x69: V26 = 0x1b8
0x6c: JUMPI 0x1b8 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1dd]
---
0x6d DUP1
0x6e PUSH4 0x6ea405d3
0x73 EQ
0x74 PUSH2 0x1dd
0x77 JUMPI
---
0x6e: V27 = 0x6ea405d3
0x73: V28 = EQ 0x6ea405d3 V11
0x74: V29 = 0x1dd
0x77: JUMPI 0x1dd V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x20e]
---
0x78 DUP1
0x79 PUSH4 0x77f9c862
0x7e EQ
0x7f PUSH2 0x20e
0x82 JUMPI
---
0x79: V30 = 0x77f9c862
0x7e: V31 = EQ 0x77f9c862 V11
0x7f: V32 = 0x20e
0x82: JUMPI 0x20e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x262]
---
0x83 DUP1
0x84 PUSH4 0x852402ac
0x89 EQ
0x8a PUSH2 0x262
0x8d JUMPI
---
0x84: V33 = 0x852402ac
0x89: V34 = EQ 0x852402ac V11
0x8a: V35 = 0x262
0x8d: JUMPI 0x262 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x2af]
---
0x8e DUP1
0x8f PUSH4 0x93275889
0x94 EQ
0x95 PUSH2 0x2af
0x98 JUMPI
---
0x8f: V36 = 0x93275889
0x94: V37 = EQ 0x93275889 V11
0x95: V38 = 0x2af
0x98: JUMPI 0x2af V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x2d6]
---
0x99 DUP1
0x9a PUSH4 0xa03286cd
0x9f EQ
0xa0 PUSH2 0x2d6
0xa3 JUMPI
---
0x9a: V39 = 0xa03286cd
0x9f: V40 = EQ 0xa03286cd V11
0xa0: V41 = 0x2d6
0xa3: JUMPI 0x2d6 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x32c]
---
0xa4 DUP1
0xa5 PUSH4 0xa2f6e5fb
0xaa EQ
0xab PUSH2 0x32c
0xae JUMPI
---
0xa5: V42 = 0xa2f6e5fb
0xaa: V43 = EQ 0xa2f6e5fb V11
0xab: V44 = 0x32c
0xae: JUMPI 0x32c V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x379]
---
0xaf DUP1
0xb0 PUSH4 0xbb128575
0xb5 EQ
0xb6 PUSH2 0x379
0xb9 JUMPI
---
0xb0: V45 = 0xbb128575
0xb5: V46 = EQ 0xbb128575 V11
0xb6: V47 = 0x379
0xb9: JUMPI 0x379 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x3a6]
---
0xba DUP1
0xbb PUSH4 0xbea69bb9
0xc0 EQ
0xc1 PUSH2 0x3a6
0xc4 JUMPI
---
0xbb: V48 = 0xbea69bb9
0xc0: V49 = EQ 0xbea69bb9 V11
0xc1: V50 = 0x3a6
0xc4: JUMPI 0x3a6 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x3cf]
---
0xc5 DUP1
0xc6 PUSH4 0xcb9580e0
0xcb EQ
0xcc PUSH2 0x3cf
0xcf JUMPI
---
0xc6: V51 = 0xcb9580e0
0xcb: V52 = EQ 0xcb9580e0 V11
0xcc: V53 = 0x3cf
0xcf: JUMPI 0x3cf V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0xc5]
Successors: [0xdb, 0x3f8]
---
0xd0 DUP1
0xd1 PUSH4 0xe3d4187f
0xd6 EQ
0xd7 PUSH2 0x3f8
0xda JUMPI
---
0xd1: V54 = 0xe3d4187f
0xd6: V55 = EQ 0xe3d4187f V11
0xd7: V56 = 0x3f8
0xda: JUMPI 0x3f8 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: [0x0, 0xd0]
Successors: []
---
0xdb JUMPDEST
0xdc STOP
---
0xdb: JUMPDEST 
0xdc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe3]
---
Predecessors: [0xd]
Successors: [0xe4, 0xe8]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdd: JUMPDEST 
0xde: V57 = CALLVALUE
0xdf: V58 = ISZERO V57
0xe0: V59 = 0xe8
0xe3: JUMPI 0xe8 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdd]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V60 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0x113]
---
Predecessors: [0xdd]
Successors: [0x42f]
---
0xe8 JUMPDEST
0xe9 PUSH2 0x114
0xec PUSH1 0x4
0xee DUP1
0xef DUP1
0xf0 CALLDATALOAD
0xf1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106 AND
0x107 SWAP1
0x108 PUSH1 0x20
0x10a ADD
0x10b SWAP1
0x10c SWAP2
0x10d SWAP1
0x10e POP
0x10f POP
0x110 PUSH2 0x42f
0x113 JUMP
---
0xe8: JUMPDEST 
0xe9: V61 = 0x114
0xec: V62 = 0x4
0xf0: V63 = CALLDATALOAD 0x4
0xf1: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x106: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x108: V66 = 0x20
0x10a: V67 = ADD 0x20 0x4
0x110: V68 = 0x42f
0x113: JUMP 0x42f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x114, V65]
Exit stack: [V11, 0x114, V65]

================================

Block 0x114
[0x114:0x129]
---
Predecessors: [0x42f]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 DUP3
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP2
0x120 POP
0x121 POP
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 SWAP2
0x127 SUB
0x128 SWAP1
0x129 RETURN
---
0x114: JUMPDEST 
0x115: V69 = 0x40
0x117: V70 = M[0x40]
0x11b: M[V70] = V303
0x11c: V71 = 0x20
0x11e: V72 = ADD 0x20 V70
0x122: V73 = 0x40
0x124: V74 = M[0x40]
0x127: V75 = SUB V72 V74
0x129: RETURN V74 V75
---
Entry stack: [V11, V303]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x41]
Successors: [0x131, 0x135]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x12a: JUMPDEST 
0x12b: V76 = CALLVALUE
0x12c: V77 = ISZERO V76
0x12d: V78 = 0x135
0x130: JUMPI 0x135 V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x12a]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V79 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x135
[0x135:0x153]
---
Predecessors: [0x12a]
Successors: [0x478]
---
0x135 JUMPDEST
0x136 PUSH2 0x154
0x139 PUSH1 0x4
0x13b DUP1
0x13c DUP1
0x13d CALLDATALOAD
0x13e SWAP1
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 SWAP2
0x144 SWAP1
0x145 DUP1
0x146 CALLDATALOAD
0x147 SWAP1
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP1
0x14c SWAP2
0x14d SWAP1
0x14e POP
0x14f POP
0x150 PUSH2 0x478
0x153 JUMP
---
0x135: JUMPDEST 
0x136: V80 = 0x154
0x139: V81 = 0x4
0x13d: V82 = CALLDATALOAD 0x4
0x13f: V83 = 0x20
0x141: V84 = ADD 0x20 0x4
0x146: V85 = CALLDATALOAD 0x24
0x148: V86 = 0x20
0x14a: V87 = ADD 0x20 0x24
0x150: V88 = 0x478
0x153: JUMP 0x478
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x154, V82, V85]
Exit stack: [V11, 0x154, V82, V85]

================================

Block 0x154
[0x154:0x155]
---
Predecessors: [0x526]
Successors: []
---
0x154 JUMPDEST
0x155 STOP
---
0x154: JUMPDEST 
0x155: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x15c]
---
Predecessors: [0x4c]
Successors: [0x15d, 0x161]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x156: JUMPDEST 
0x157: V89 = CALLVALUE
0x158: V90 = ISZERO V89
0x159: V91 = 0x161
0x15c: JUMPI 0x161 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x156]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V92 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x18c]
---
Predecessors: [0x156]
Successors: [0x59e]
---
0x161 JUMPDEST
0x162 PUSH2 0x18d
0x165 PUSH1 0x4
0x167 DUP1
0x168 DUP1
0x169 CALLDATALOAD
0x16a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f AND
0x180 SWAP1
0x181 PUSH1 0x20
0x183 ADD
0x184 SWAP1
0x185 SWAP2
0x186 SWAP1
0x187 POP
0x188 POP
0x189 PUSH2 0x59e
0x18c JUMP
---
0x161: JUMPDEST 
0x162: V93 = 0x18d
0x165: V94 = 0x4
0x169: V95 = CALLDATALOAD 0x4
0x16a: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x181: V98 = 0x20
0x183: V99 = ADD 0x20 0x4
0x189: V100 = 0x59e
0x18c: JUMP 0x59e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x18d, V97]
Exit stack: [V11, 0x18d, V97]

================================

Block 0x18d
[0x18d:0x1a2]
---
Predecessors: [0x59e]
Successors: []
---
0x18d JUMPDEST
0x18e PUSH1 0x40
0x190 MLOAD
0x191 DUP1
0x192 DUP3
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP2
0x199 POP
0x19a POP
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f SWAP2
0x1a0 SUB
0x1a1 SWAP1
0x1a2 RETURN
---
0x18d: JUMPDEST 
0x18e: V101 = 0x40
0x190: V102 = M[0x40]
0x194: M[V102] = V368
0x195: V103 = 0x20
0x197: V104 = ADD 0x20 V102
0x19b: V105 = 0x40
0x19d: V106 = M[0x40]
0x1a0: V107 = SUB V104 V106
0x1a2: RETURN V106 V107
---
Entry stack: [V11, 0x18d, V368]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18d]

================================

Block 0x1a3
[0x1a3:0x1a9]
---
Predecessors: [0x57]
Successors: [0x1aa, 0x1ae]
---
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 ISZERO
0x1a6 PUSH2 0x1ae
0x1a9 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V108 = CALLVALUE
0x1a5: V109 = ISZERO V108
0x1a6: V110 = 0x1ae
0x1a9: JUMPI 0x1ae V109
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x1a3]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
---
0x1aa: V111 = 0x0
0x1ad: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ae
[0x1ae:0x1b5]
---
Predecessors: [0x1a3]
Successors: [0x5b6]
---
0x1ae JUMPDEST
0x1af PUSH2 0x1b6
0x1b2 PUSH2 0x5b6
0x1b5 JUMP
---
0x1ae: JUMPDEST 
0x1af: V112 = 0x1b6
0x1b2: V113 = 0x5b6
0x1b5: JUMP 0x5b6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1b6]
Exit stack: [V11, 0x1b6]

================================

Block 0x1b6
[0x1b6:0x1b7]
---
Predecessors: [0x5ff, 0xfdd, 0x1075, 0x10c6]
Successors: []
---
0x1b6 JUMPDEST
0x1b7 STOP
---
0x1b6: JUMPDEST 
0x1b7: STOP 
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x62]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V114 = CALLVALUE
0x1ba: V115 = ISZERO V114
0x1bb: V116 = 0x1c3
0x1be: JUMPI 0x1c3 V115
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V117 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c3
[0x1c3:0x1da]
---
Predecessors: [0x1b8]
Successors: [0x601]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x1db
0x1c7 PUSH1 0x4
0x1c9 DUP1
0x1ca DUP1
0x1cb CALLDATALOAD
0x1cc ISZERO
0x1cd ISZERO
0x1ce SWAP1
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 SWAP1
0x1d3 SWAP2
0x1d4 SWAP1
0x1d5 POP
0x1d6 POP
0x1d7 PUSH2 0x601
0x1da JUMP
---
0x1c3: JUMPDEST 
0x1c4: V118 = 0x1db
0x1c7: V119 = 0x4
0x1cb: V120 = CALLDATALOAD 0x4
0x1cc: V121 = ISZERO V120
0x1cd: V122 = ISZERO V121
0x1cf: V123 = 0x20
0x1d1: V124 = ADD 0x20 0x4
0x1d7: V125 = 0x601
0x1da: JUMP 0x601
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1db, V122]
Exit stack: [V11, 0x1db, V122]

================================

Block 0x1db
[0x1db:0x1dc]
---
Predecessors: [0x65d]
Successors: []
---
0x1db JUMPDEST
0x1dc STOP
---
0x1db: JUMPDEST 
0x1dc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dd
[0x1dd:0x1e3]
---
Predecessors: [0x6d]
Successors: [0x1e4, 0x1e8]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V126 = CALLVALUE
0x1df: V127 = ISZERO V126
0x1e0: V128 = 0x1e8
0x1e3: JUMPI 0x1e8 V127
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V129 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e8
[0x1e8:0x1ef]
---
Predecessors: [0x1dd]
Successors: [0x67a]
---
0x1e8 JUMPDEST
0x1e9 PUSH2 0x1f0
0x1ec PUSH2 0x67a
0x1ef JUMP
---
0x1e8: JUMPDEST 
0x1e9: V130 = 0x1f0
0x1ec: V131 = 0x67a
0x1ef: JUMP 0x67a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1f0]
Exit stack: [V11, 0x1f0]

================================

Block 0x1f0
[0x1f0:0x20d]
---
Predecessors: [0x67a]
Successors: []
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 DUP3
0x1f6 PUSH2 0xffff
0x1f9 AND
0x1fa PUSH2 0xffff
0x1fd AND
0x1fe DUP2
0x1ff MSTORE
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP2
0x204 POP
0x205 POP
0x206 PUSH1 0x40
0x208 MLOAD
0x209 DUP1
0x20a SWAP2
0x20b SUB
0x20c SWAP1
0x20d RETURN
---
0x1f0: JUMPDEST 
0x1f1: V132 = 0x40
0x1f3: V133 = M[0x40]
0x1f6: V134 = 0xffff
0x1f9: V135 = AND 0xffff V424
0x1fa: V136 = 0xffff
0x1fd: V137 = AND 0xffff V135
0x1ff: M[V133] = V137
0x200: V138 = 0x20
0x202: V139 = ADD 0x20 V133
0x206: V140 = 0x40
0x208: V141 = M[0x40]
0x20b: V142 = SUB V139 V141
0x20d: RETURN V141 V142
---
Entry stack: [V11, 0x1f0, V424]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1f0]

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x78]
Successors: [0x215, 0x219]
---
0x20e JUMPDEST
0x20f CALLVALUE
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x20e: JUMPDEST 
0x20f: V143 = CALLVALUE
0x210: V144 = ISZERO V143
0x211: V145 = 0x219
0x214: JUMPI 0x219 V144
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x20e]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V146 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x219
[0x219:0x244]
---
Predecessors: [0x20e]
Successors: [0x68e]
---
0x219 JUMPDEST
0x21a PUSH2 0x245
0x21d PUSH1 0x4
0x21f DUP1
0x220 DUP1
0x221 CALLDATALOAD
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 SWAP1
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP1
0x23d SWAP2
0x23e SWAP1
0x23f POP
0x240 POP
0x241 PUSH2 0x68e
0x244 JUMP
---
0x219: JUMPDEST 
0x21a: V147 = 0x245
0x21d: V148 = 0x4
0x221: V149 = CALLDATALOAD 0x4
0x222: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x239: V152 = 0x20
0x23b: V153 = ADD 0x20 0x4
0x241: V154 = 0x68e
0x244: JUMP 0x68e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x245, V151]
Exit stack: [V11, 0x245, V151]

================================

Block 0x245
[0x245:0x261]
---
Predecessors: [0x72d]
Successors: []
---
0x245 JUMPDEST
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a DUP4
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 DUP3
0x251 DUP2
0x252 MSTORE
0x253 PUSH1 0x20
0x255 ADD
0x256 SWAP3
0x257 POP
0x258 POP
0x259 POP
0x25a PUSH1 0x40
0x25c MLOAD
0x25d DUP1
0x25e SWAP2
0x25f SUB
0x260 SWAP1
0x261 RETURN
---
0x245: JUMPDEST 
0x246: V155 = 0x40
0x248: V156 = M[0x40]
0x24c: M[V156] = V445
0x24d: V157 = 0x20
0x24f: V158 = ADD 0x20 V156
0x252: M[V158] = V465
0x253: V159 = 0x20
0x255: V160 = ADD 0x20 V158
0x25a: V161 = 0x40
0x25c: V162 = M[0x40]
0x25f: V163 = SUB V160 V162
0x261: RETURN V162 V163
---
Entry stack: [V11, V445, V465]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x262
[0x262:0x268]
---
Predecessors: [0x83]
Successors: [0x269, 0x26d]
---
0x262 JUMPDEST
0x263 CALLVALUE
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x262: JUMPDEST 
0x263: V164 = CALLVALUE
0x264: V165 = ISZERO V164
0x265: V166 = 0x26d
0x268: JUMPI 0x26d V165
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x262]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V167 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26d
[0x26d:0x298]
---
Predecessors: [0x262]
Successors: [0x738]
---
0x26d JUMPDEST
0x26e PUSH2 0x299
0x271 PUSH1 0x4
0x273 DUP1
0x274 DUP1
0x275 CALLDATALOAD
0x276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28b AND
0x28c SWAP1
0x28d PUSH1 0x20
0x28f ADD
0x290 SWAP1
0x291 SWAP2
0x292 SWAP1
0x293 POP
0x294 POP
0x295 PUSH2 0x738
0x298 JUMP
---
0x26d: JUMPDEST 
0x26e: V168 = 0x299
0x271: V169 = 0x4
0x275: V170 = CALLDATALOAD 0x4
0x276: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x28d: V173 = 0x20
0x28f: V174 = ADD 0x20 0x4
0x295: V175 = 0x738
0x298: JUMP 0x738
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x299, V172]
Exit stack: [V11, 0x299, V172]

================================

Block 0x299
[0x299:0x2ae]
---
Predecessors: [0x738]
Successors: []
---
0x299 JUMPDEST
0x29a PUSH1 0x40
0x29c MLOAD
0x29d DUP1
0x29e DUP3
0x29f DUP2
0x2a0 MSTORE
0x2a1 PUSH1 0x20
0x2a3 ADD
0x2a4 SWAP2
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab SWAP2
0x2ac SUB
0x2ad SWAP1
0x2ae RETURN
---
0x299: JUMPDEST 
0x29a: V176 = 0x40
0x29c: V177 = M[0x40]
0x2a0: M[V177] = V473
0x2a1: V178 = 0x20
0x2a3: V179 = ADD 0x20 V177
0x2a7: V180 = 0x40
0x2a9: V181 = M[0x40]
0x2ac: V182 = SUB V179 V181
0x2ae: RETURN V181 V182
---
Entry stack: [V11, 0x299, V473]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x299]

================================

Block 0x2af
[0x2af:0x2b5]
---
Predecessors: [0x8e]
Successors: [0x2b6, 0x2ba]
---
0x2af JUMPDEST
0x2b0 CALLVALUE
0x2b1 ISZERO
0x2b2 PUSH2 0x2ba
0x2b5 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V183 = CALLVALUE
0x2b1: V184 = ISZERO V183
0x2b2: V185 = 0x2ba
0x2b5: JUMPI 0x2ba V184
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b6
[0x2b6:0x2b9]
---
Predecessors: [0x2af]
Successors: []
---
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 REVERT
---
0x2b6: V186 = 0x0
0x2b9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ba
[0x2ba:0x2d3]
---
Predecessors: [0x2af]
Successors: [0x750]
---
0x2ba JUMPDEST
0x2bb PUSH2 0x2d4
0x2be PUSH1 0x4
0x2c0 DUP1
0x2c1 DUP1
0x2c2 CALLDATALOAD
0x2c3 PUSH2 0xffff
0x2c6 AND
0x2c7 SWAP1
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb SWAP1
0x2cc SWAP2
0x2cd SWAP1
0x2ce POP
0x2cf POP
0x2d0 PUSH2 0x750
0x2d3 JUMP
---
0x2ba: JUMPDEST 
0x2bb: V187 = 0x2d4
0x2be: V188 = 0x4
0x2c2: V189 = CALLDATALOAD 0x4
0x2c3: V190 = 0xffff
0x2c6: V191 = AND 0xffff V189
0x2c8: V192 = 0x20
0x2ca: V193 = ADD 0x20 0x4
0x2d0: V194 = 0x750
0x2d3: JUMP 0x750
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d4, V191]
Exit stack: [V11, 0x2d4, V191]

================================

Block 0x2d4
[0x2d4:0x2d5]
---
Predecessors: [0x7c1]
Successors: []
---
0x2d4 JUMPDEST
0x2d5 STOP
---
0x2d4: JUMPDEST 
0x2d5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d6
[0x2d6:0x2dc]
---
Predecessors: [0x99]
Successors: [0x2dd, 0x2e1]
---
0x2d6 JUMPDEST
0x2d7 CALLVALUE
0x2d8 ISZERO
0x2d9 PUSH2 0x2e1
0x2dc JUMPI
---
0x2d6: JUMPDEST 
0x2d7: V195 = CALLVALUE
0x2d8: V196 = ISZERO V195
0x2d9: V197 = 0x2e1
0x2dc: JUMPI 0x2e1 V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2dd
[0x2dd:0x2e0]
---
Predecessors: [0x2d6]
Successors: []
---
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 REVERT
---
0x2dd: V198 = 0x0
0x2e0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e1
[0x2e1:0x315]
---
Predecessors: [0x2d6]
Successors: [0x7e1]
---
0x2e1 JUMPDEST
0x2e2 PUSH2 0x316
0x2e5 PUSH1 0x4
0x2e7 DUP1
0x2e8 DUP1
0x2e9 CALLDATALOAD
0x2ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ff AND
0x300 SWAP1
0x301 PUSH1 0x20
0x303 ADD
0x304 SWAP1
0x305 SWAP2
0x306 SWAP1
0x307 DUP1
0x308 CALLDATALOAD
0x309 SWAP1
0x30a PUSH1 0x20
0x30c ADD
0x30d SWAP1
0x30e SWAP2
0x30f SWAP1
0x310 POP
0x311 POP
0x312 PUSH2 0x7e1
0x315 JUMP
---
0x2e1: JUMPDEST 
0x2e2: V199 = 0x316
0x2e5: V200 = 0x4
0x2e9: V201 = CALLDATALOAD 0x4
0x2ea: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x301: V204 = 0x20
0x303: V205 = ADD 0x20 0x4
0x308: V206 = CALLDATALOAD 0x24
0x30a: V207 = 0x20
0x30c: V208 = ADD 0x20 0x24
0x312: V209 = 0x7e1
0x315: JUMP 0x7e1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x316, V203, V206]
Exit stack: [V11, 0x316, V203, V206]

================================

Block 0x316
[0x316:0x32b]
---
Predecessors: [0x7fc]
Successors: []
---
0x316 JUMPDEST
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b DUP3
0x31c DUP2
0x31d MSTORE
0x31e PUSH1 0x20
0x320 ADD
0x321 SWAP2
0x322 POP
0x323 POP
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 SWAP2
0x329 SUB
0x32a SWAP1
0x32b RETURN
---
0x316: JUMPDEST 
0x317: V210 = 0x40
0x319: V211 = M[0x40]
0x31d: M[V211] = V527
0x31e: V212 = 0x20
0x320: V213 = ADD 0x20 V211
0x324: V214 = 0x40
0x326: V215 = M[0x40]
0x329: V216 = SUB V213 V215
0x32b: RETURN V215 V216
---
Entry stack: [V11, 0x316, V527]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x316]

================================

Block 0x32c
[0x32c:0x332]
---
Predecessors: [0xa4]
Successors: [0x333, 0x337]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x32c: JUMPDEST 
0x32d: V217 = CALLVALUE
0x32e: V218 = ISZERO V217
0x32f: V219 = 0x337
0x332: JUMPI 0x337 V218
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x32c]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V220 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x337
[0x337:0x362]
---
Predecessors: [0x32c]
Successors: [0x808]
---
0x337 JUMPDEST
0x338 PUSH2 0x363
0x33b PUSH1 0x4
0x33d DUP1
0x33e DUP1
0x33f CALLDATALOAD
0x340 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x355 AND
0x356 SWAP1
0x357 PUSH1 0x20
0x359 ADD
0x35a SWAP1
0x35b SWAP2
0x35c SWAP1
0x35d POP
0x35e POP
0x35f PUSH2 0x808
0x362 JUMP
---
0x337: JUMPDEST 
0x338: V221 = 0x363
0x33b: V222 = 0x4
0x33f: V223 = CALLDATALOAD 0x4
0x340: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x355: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x357: V226 = 0x20
0x359: V227 = ADD 0x20 0x4
0x35f: V228 = 0x808
0x362: JUMP 0x808
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x363, V225]
Exit stack: [V11, 0x363, V225]

================================

Block 0x363
[0x363:0x378]
---
Predecessors: [0x86c, 0xfdd]
Successors: []
---
0x363 JUMPDEST
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP3
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x20
0x36d ADD
0x36e SWAP2
0x36f POP
0x370 POP
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 SWAP2
0x376 SUB
0x377 SWAP1
0x378 RETURN
---
0x363: JUMPDEST 
0x364: V229 = 0x40
0x366: V230 = M[0x40]
0x36a: M[V230] = S0
0x36b: V231 = 0x20
0x36d: V232 = ADD 0x20 V230
0x371: V233 = 0x40
0x373: V234 = M[0x40]
0x376: V235 = SUB V232 V234
0x378: RETURN V234 V235
---
Entry stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x379
[0x379:0x37f]
---
Predecessors: [0xaf]
Successors: [0x380, 0x384]
---
0x379 JUMPDEST
0x37a CALLVALUE
0x37b ISZERO
0x37c PUSH2 0x384
0x37f JUMPI
---
0x379: JUMPDEST 
0x37a: V236 = CALLVALUE
0x37b: V237 = ISZERO V236
0x37c: V238 = 0x384
0x37f: JUMPI 0x384 V237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x379]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V239 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x384
[0x384:0x38b]
---
Predecessors: [0x379]
Successors: [0x872]
---
0x384 JUMPDEST
0x385 PUSH2 0x38c
0x388 PUSH2 0x872
0x38b JUMP
---
0x384: JUMPDEST 
0x385: V240 = 0x38c
0x388: V241 = 0x872
0x38b: JUMP 0x872
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x38c]
Exit stack: [V11, 0x38c]

================================

Block 0x38c
[0x38c:0x3a5]
---
Predecessors: [0x872]
Successors: []
---
0x38c JUMPDEST
0x38d PUSH1 0x40
0x38f MLOAD
0x390 DUP1
0x391 DUP3
0x392 ISZERO
0x393 ISZERO
0x394 ISZERO
0x395 ISZERO
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x20
0x39a ADD
0x39b SWAP2
0x39c POP
0x39d POP
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 DUP1
0x3a2 SWAP2
0x3a3 SUB
0x3a4 SWAP1
0x3a5 RETURN
---
0x38c: JUMPDEST 
0x38d: V242 = 0x40
0x38f: V243 = M[0x40]
0x392: V244 = ISZERO V557
0x393: V245 = ISZERO V244
0x394: V246 = ISZERO V245
0x395: V247 = ISZERO V246
0x397: M[V243] = V247
0x398: V248 = 0x20
0x39a: V249 = ADD 0x20 V243
0x39e: V250 = 0x40
0x3a0: V251 = M[0x40]
0x3a3: V252 = SUB V249 V251
0x3a5: RETURN V251 V252
---
Entry stack: [V11, 0x38c, V557]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x38c]

================================

Block 0x3a6
[0x3a6:0x3ac]
---
Predecessors: [0xba]
Successors: [0x3ad, 0x3b1]
---
0x3a6 JUMPDEST
0x3a7 CALLVALUE
0x3a8 ISZERO
0x3a9 PUSH2 0x3b1
0x3ac JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V253 = CALLVALUE
0x3a8: V254 = ISZERO V253
0x3a9: V255 = 0x3b1
0x3ac: JUMPI 0x3b1 V254
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ad
[0x3ad:0x3b0]
---
Predecessors: [0x3a6]
Successors: []
---
0x3ad PUSH1 0x0
0x3af DUP1
0x3b0 REVERT
---
0x3ad: V256 = 0x0
0x3b0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b1
[0x3b1:0x3b8]
---
Predecessors: [0x3a6]
Successors: [0x885]
---
0x3b1 JUMPDEST
0x3b2 PUSH2 0x3b9
0x3b5 PUSH2 0x885
0x3b8 JUMP
---
0x3b1: JUMPDEST 
0x3b2: V257 = 0x3b9
0x3b5: V258 = 0x885
0x3b8: JUMP 0x885
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3b9]
Exit stack: [V11, 0x3b9]

================================

Block 0x3b9
[0x3b9:0x3ce]
---
Predecessors: [0x885]
Successors: []
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be DUP3
0x3bf DUP2
0x3c0 MSTORE
0x3c1 PUSH1 0x20
0x3c3 ADD
0x3c4 SWAP2
0x3c5 POP
0x3c6 POP
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca DUP1
0x3cb SWAP2
0x3cc SUB
0x3cd SWAP1
0x3ce RETURN
---
0x3b9: JUMPDEST 
0x3ba: V259 = 0x40
0x3bc: V260 = M[0x40]
0x3c0: M[V260] = V562
0x3c1: V261 = 0x20
0x3c3: V262 = ADD 0x20 V260
0x3c7: V263 = 0x40
0x3c9: V264 = M[0x40]
0x3cc: V265 = SUB V262 V264
0x3ce: RETURN V264 V265
---
Entry stack: [V11, V562]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cf
[0x3cf:0x3d5]
---
Predecessors: [0xc5]
Successors: [0x3d6, 0x3da]
---
0x3cf JUMPDEST
0x3d0 CALLVALUE
0x3d1 ISZERO
0x3d2 PUSH2 0x3da
0x3d5 JUMPI
---
0x3cf: JUMPDEST 
0x3d0: V266 = CALLVALUE
0x3d1: V267 = ISZERO V266
0x3d2: V268 = 0x3da
0x3d5: JUMPI 0x3da V267
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d6
[0x3d6:0x3d9]
---
Predecessors: [0x3cf]
Successors: []
---
0x3d6 PUSH1 0x0
0x3d8 DUP1
0x3d9 REVERT
---
0x3d6: V269 = 0x0
0x3d9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3da
[0x3da:0x3e1]
---
Predecessors: [0x3cf]
Successors: [0x8a4]
---
0x3da JUMPDEST
0x3db PUSH2 0x3e2
0x3de PUSH2 0x8a4
0x3e1 JUMP
---
0x3da: JUMPDEST 
0x3db: V270 = 0x3e2
0x3de: V271 = 0x8a4
0x3e1: JUMP 0x8a4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3e2]
Exit stack: [V11, 0x3e2]

================================

Block 0x3e2
[0x3e2:0x3f7]
---
Predecessors: [0x8a4]
Successors: []
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 DUP3
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP2
0x3ee POP
0x3ef POP
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 SWAP2
0x3f5 SUB
0x3f6 SWAP1
0x3f7 RETURN
---
0x3e2: JUMPDEST 
0x3e3: V272 = 0x40
0x3e5: V273 = M[0x40]
0x3e9: M[V273] = V564
0x3ea: V274 = 0x20
0x3ec: V275 = ADD 0x20 V273
0x3f0: V276 = 0x40
0x3f2: V277 = M[0x40]
0x3f5: V278 = SUB V275 V277
0x3f7: RETURN V277 V278
---
Entry stack: [V11, 0x3e2, V564]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3e2]

================================

Block 0x3f8
[0x3f8:0x42c]
---
Predecessors: [0xd0]
Successors: [0x8aa]
---
0x3f8 JUMPDEST
0x3f9 PUSH2 0x42d
0x3fc PUSH1 0x4
0x3fe DUP1
0x3ff DUP1
0x400 CALLDATALOAD
0x401 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x416 AND
0x417 SWAP1
0x418 PUSH1 0x20
0x41a ADD
0x41b SWAP1
0x41c SWAP2
0x41d SWAP1
0x41e DUP1
0x41f CALLDATALOAD
0x420 SWAP1
0x421 PUSH1 0x20
0x423 ADD
0x424 SWAP1
0x425 SWAP2
0x426 SWAP1
0x427 POP
0x428 POP
0x429 PUSH2 0x8aa
0x42c JUMP
---
0x3f8: JUMPDEST 
0x3f9: V279 = 0x42d
0x3fc: V280 = 0x4
0x400: V281 = CALLDATALOAD 0x4
0x401: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x416: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x418: V284 = 0x20
0x41a: V285 = ADD 0x20 0x4
0x41f: V286 = CALLDATALOAD 0x24
0x421: V287 = 0x20
0x423: V288 = ADD 0x20 0x24
0x429: V289 = 0x8aa
0x42c: JUMP 0x8aa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x42d, V283, V286]
Exit stack: [V11, 0x42d, V283, V286]

================================

Block 0x42d
[0x42d:0x42e]
---
Predecessors: [0x5ff, 0xea5, 0xfdd, 0x1075]
Successors: []
---
0x42d JUMPDEST
0x42e STOP
---
0x42d: JUMPDEST 
0x42e: STOP 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x42f
[0x42f:0x477]
---
Predecessors: [0xe8]
Successors: [0x114]
---
0x42f JUMPDEST
0x430 PUSH1 0x0
0x432 PUSH1 0x2
0x434 PUSH1 0x0
0x436 DUP4
0x437 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44c AND
0x44d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x462 AND
0x463 DUP2
0x464 MSTORE
0x465 PUSH1 0x20
0x467 ADD
0x468 SWAP1
0x469 DUP2
0x46a MSTORE
0x46b PUSH1 0x20
0x46d ADD
0x46e PUSH1 0x0
0x470 SHA3
0x471 SLOAD
0x472 SWAP1
0x473 POP
0x474 SWAP2
0x475 SWAP1
0x476 POP
0x477 JUMP
---
0x42f: JUMPDEST 
0x430: V290 = 0x0
0x432: V291 = 0x2
0x434: V292 = 0x0
0x437: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x44d: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x462: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x464: M[0x0] = V296
0x465: V297 = 0x20
0x467: V298 = ADD 0x20 0x0
0x46a: M[0x20] = 0x2
0x46b: V299 = 0x20
0x46d: V300 = ADD 0x20 0x20
0x46e: V301 = 0x0
0x470: V302 = SHA3 0x0 0x40
0x471: V303 = S[V302]
0x477: JUMP 0x114
---
Entry stack: [V11, 0x114, V65]
Stack pops: 2
Stack additions: [V303]
Exit stack: [V11, V303]

================================

Block 0x478
[0x478:0x4bf]
---
Predecessors: [0x135]
Successors: [0x4c0, 0x4c4]
---
0x478 JUMPDEST
0x479 PUSH1 0x2
0x47b PUSH1 0x0
0x47d CALLER
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a9 AND
0x4aa DUP2
0x4ab MSTORE
0x4ac PUSH1 0x20
0x4ae ADD
0x4af SWAP1
0x4b0 DUP2
0x4b1 MSTORE
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 PUSH1 0x0
0x4b7 SHA3
0x4b8 SLOAD
0x4b9 DUP3
0x4ba GT
0x4bb ISZERO
0x4bc PUSH2 0x4c4
0x4bf JUMPI
---
0x478: JUMPDEST 
0x479: V304 = 0x2
0x47b: V305 = 0x0
0x47d: V306 = CALLER
0x47e: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x494: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x4ab: M[0x0] = V310
0x4ac: V311 = 0x20
0x4ae: V312 = ADD 0x20 0x0
0x4b1: M[0x20] = 0x2
0x4b2: V313 = 0x20
0x4b4: V314 = ADD 0x20 0x20
0x4b5: V315 = 0x0
0x4b7: V316 = SHA3 0x0 0x40
0x4b8: V317 = S[V316]
0x4ba: V318 = GT V82 V317
0x4bb: V319 = ISZERO V318
0x4bc: V320 = 0x4c4
0x4bf: JUMPI 0x4c4 V319
---
Entry stack: [V11, 0x154, V82, V85]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x154, V82, V85]

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x478]
Successors: []
---
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 REVERT
---
0x4c0: V321 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x154, V82, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x154, V82, V85]

================================

Block 0x4c4
[0x4c4:0x525]
---
Predecessors: [0x478]
Successors: [0x10d1]
---
0x4c4 JUMPDEST
0x4c5 PUSH1 0x40
0x4c7 DUP1
0x4c8 MLOAD
0x4c9 SWAP1
0x4ca DUP2
0x4cb ADD
0x4cc PUSH1 0x40
0x4ce MSTORE
0x4cf DUP1
0x4d0 DUP4
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 DUP3
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 POP
0x4da PUSH1 0x4
0x4dc PUSH1 0x0
0x4de CALLER
0x4df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f4 AND
0x4f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50a AND
0x50b DUP2
0x50c MSTORE
0x50d PUSH1 0x20
0x50f ADD
0x510 SWAP1
0x511 DUP2
0x512 MSTORE
0x513 PUSH1 0x20
0x515 ADD
0x516 PUSH1 0x0
0x518 SHA3
0x519 SWAP1
0x51a PUSH1 0x2
0x51c PUSH2 0x526
0x51f SWAP3
0x520 SWAP2
0x521 SWAP1
0x522 PUSH2 0x10d1
0x525 JUMP
---
0x4c4: JUMPDEST 
0x4c5: V322 = 0x40
0x4c8: V323 = M[0x40]
0x4cb: V324 = ADD V323 0x40
0x4cc: V325 = 0x40
0x4ce: M[0x40] = V324
0x4d2: M[V323] = V82
0x4d3: V326 = 0x20
0x4d5: V327 = ADD 0x20 V323
0x4d8: M[V327] = V85
0x4da: V328 = 0x4
0x4dc: V329 = 0x0
0x4de: V330 = CALLER
0x4df: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x4f5: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x50c: M[0x0] = V334
0x50d: V335 = 0x20
0x50f: V336 = ADD 0x20 0x0
0x512: M[0x20] = 0x4
0x513: V337 = 0x20
0x515: V338 = ADD 0x20 0x20
0x516: V339 = 0x0
0x518: V340 = SHA3 0x0 0x40
0x51a: V341 = 0x2
0x51c: V342 = 0x526
0x522: V343 = 0x10d1
0x525: JUMP 0x10d1
---
Entry stack: [V11, 0x154, V82, V85]
Stack pops: 2
Stack additions: [S1, S0, 0x526, V340, V323, 0x2]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, V323, 0x2]

================================

Block 0x526
[0x526:0x59d]
---
Predecessors: [0x110d]
Successors: [0x154]
---
0x526 JUMPDEST
0x527 POP
0x528 PUSH32 0x9f2bccb32bc17f7191f8752950d8d036bb9c6c8a0e91e658052bf2b578ad61ff
0x549 CALLER
0x54a DUP4
0x54b DUP4
0x54c PUSH1 0x40
0x54e MLOAD
0x54f DUP1
0x550 DUP5
0x551 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x566 AND
0x567 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57c AND
0x57d DUP2
0x57e MSTORE
0x57f PUSH1 0x20
0x581 ADD
0x582 DUP4
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x20
0x587 ADD
0x588 DUP3
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x20
0x58d ADD
0x58e SWAP4
0x58f POP
0x590 POP
0x591 POP
0x592 POP
0x593 PUSH1 0x40
0x595 MLOAD
0x596 DUP1
0x597 SWAP2
0x598 SUB
0x599 SWAP1
0x59a LOG1
0x59b POP
0x59c POP
0x59d JUMP
---
0x526: JUMPDEST 
0x528: V344 = 0x9f2bccb32bc17f7191f8752950d8d036bb9c6c8a0e91e658052bf2b578ad61ff
0x549: V345 = CALLER
0x54c: V346 = 0x40
0x54e: V347 = M[0x40]
0x551: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x566: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x567: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x57e: M[V347] = V351
0x57f: V352 = 0x20
0x581: V353 = ADD 0x20 V347
0x584: M[V353] = V82
0x585: V354 = 0x20
0x587: V355 = ADD 0x20 V353
0x58a: M[V355] = V85
0x58b: V356 = 0x20
0x58d: V357 = ADD 0x20 V355
0x593: V358 = 0x40
0x595: V359 = M[0x40]
0x598: V360 = SUB V357 V359
0x59a: LOG V359 V360 0x9f2bccb32bc17f7191f8752950d8d036bb9c6c8a0e91e658052bf2b578ad61ff
0x59d: JUMP 0x154
---
Entry stack: [V11, 0x154, V82, V85, V340]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x59e
[0x59e:0x5b5]
---
Predecessors: [0x161]
Successors: [0x18d]
---
0x59e JUMPDEST
0x59f PUSH1 0x2
0x5a1 PUSH1 0x20
0x5a3 MSTORE
0x5a4 DUP1
0x5a5 PUSH1 0x0
0x5a7 MSTORE
0x5a8 PUSH1 0x40
0x5aa PUSH1 0x0
0x5ac SHA3
0x5ad PUSH1 0x0
0x5af SWAP2
0x5b0 POP
0x5b1 SWAP1
0x5b2 POP
0x5b3 SLOAD
0x5b4 DUP2
0x5b5 JUMP
---
0x59e: JUMPDEST 
0x59f: V361 = 0x2
0x5a1: V362 = 0x20
0x5a3: M[0x20] = 0x2
0x5a5: V363 = 0x0
0x5a7: M[0x0] = V97
0x5a8: V364 = 0x40
0x5aa: V365 = 0x0
0x5ac: V366 = SHA3 0x0 0x40
0x5ad: V367 = 0x0
0x5b3: V368 = S[V366]
0x5b5: JUMP 0x18d
---
Entry stack: [V11, 0x18d, V97]
Stack pops: 2
Stack additions: [S1, V368]
Exit stack: [V11, 0x18d, V368]

================================

Block 0x5b6
[0x5b6:0x5fe]
---
Predecessors: [0x1ae]
Successors: [0xeb1]
---
0x5b6 JUMPDEST
0x5b7 PUSH2 0x5ff
0x5ba CALLER
0x5bb PUSH1 0x2
0x5bd PUSH1 0x0
0x5bf CALLER
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5eb AND
0x5ec DUP2
0x5ed MSTORE
0x5ee PUSH1 0x20
0x5f0 ADD
0x5f1 SWAP1
0x5f2 DUP2
0x5f3 MSTORE
0x5f4 PUSH1 0x20
0x5f6 ADD
0x5f7 PUSH1 0x0
0x5f9 SHA3
0x5fa SLOAD
0x5fb PUSH2 0xeb1
0x5fe JUMP
---
0x5b6: JUMPDEST 
0x5b7: V369 = 0x5ff
0x5ba: V370 = CALLER
0x5bb: V371 = 0x2
0x5bd: V372 = 0x0
0x5bf: V373 = CALLER
0x5c0: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x5d6: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x5ed: M[0x0] = V377
0x5ee: V378 = 0x20
0x5f0: V379 = ADD 0x20 0x0
0x5f3: M[0x20] = 0x2
0x5f4: V380 = 0x20
0x5f6: V381 = ADD 0x20 0x20
0x5f7: V382 = 0x0
0x5f9: V383 = SHA3 0x0 0x40
0x5fa: V384 = S[V383]
0x5fb: V385 = 0xeb1
0x5fe: JUMP 0xeb1
---
Entry stack: [V11, 0x1b6]
Stack pops: 0
Stack additions: [0x5ff, V370, V384]
Exit stack: [V11, 0x1b6, 0x5ff, V370, V384]

================================

Block 0x5ff
[0x5ff:0x600]
---
Predecessors: [0x86c, 0xfdd]
Successors: [0x1b6, 0x42d]
---
0x5ff JUMPDEST
0x600 JUMP
---
0x5ff: JUMPDEST 
0x600: JUMP S0
---
Entry stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x601
[0x601:0x658]
---
Predecessors: [0x1c3]
Successors: [0x659, 0x65d]
---
0x601 JUMPDEST
0x602 PUSH1 0x1
0x604 PUSH1 0x2
0x606 SWAP1
0x607 SLOAD
0x608 SWAP1
0x609 PUSH2 0x100
0x60c EXP
0x60d SWAP1
0x60e DIV
0x60f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x624 AND
0x625 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63a AND
0x63b CALLER
0x63c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x651 AND
0x652 EQ
0x653 ISZERO
0x654 ISZERO
0x655 PUSH2 0x65d
0x658 JUMPI
---
0x601: JUMPDEST 
0x602: V386 = 0x1
0x604: V387 = 0x2
0x607: V388 = S[0x1]
0x609: V389 = 0x100
0x60c: V390 = EXP 0x100 0x2
0x60e: V391 = DIV V388 0x10000
0x60f: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x624: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x625: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x63a: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x63b: V396 = CALLER
0x63c: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x651: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x652: V399 = EQ V398 V395
0x653: V400 = ISZERO V399
0x654: V401 = ISZERO V400
0x655: V402 = 0x65d
0x658: JUMPI 0x65d V401
---
Entry stack: [V11, 0x1db, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1db, V122]

================================

Block 0x659
[0x659:0x65c]
---
Predecessors: [0x601]
Successors: []
---
0x659 PUSH1 0x0
0x65b DUP1
0x65c REVERT
---
0x659: V403 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1db, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1db, V122]

================================

Block 0x65d
[0x65d:0x679]
---
Predecessors: [0x601]
Successors: [0x1db]
---
0x65d JUMPDEST
0x65e DUP1
0x65f PUSH1 0x1
0x661 PUSH1 0x16
0x663 PUSH2 0x100
0x666 EXP
0x667 DUP2
0x668 SLOAD
0x669 DUP2
0x66a PUSH1 0xff
0x66c MUL
0x66d NOT
0x66e AND
0x66f SWAP1
0x670 DUP4
0x671 ISZERO
0x672 ISZERO
0x673 MUL
0x674 OR
0x675 SWAP1
0x676 SSTORE
0x677 POP
0x678 POP
0x679 JUMP
---
0x65d: JUMPDEST 
0x65f: V404 = 0x1
0x661: V405 = 0x16
0x663: V406 = 0x100
0x666: V407 = EXP 0x100 0x16
0x668: V408 = S[0x1]
0x66a: V409 = 0xff
0x66c: V410 = MUL 0xff 0x100000000000000000000000000000000000000000000
0x66d: V411 = NOT 0xff00000000000000000000000000000000000000000000
0x66e: V412 = AND 0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff V408
0x671: V413 = ISZERO V122
0x672: V414 = ISZERO V413
0x673: V415 = MUL V414 0x100000000000000000000000000000000000000000000
0x674: V416 = OR V415 V412
0x676: S[0x1] = V416
0x679: JUMP 0x1db
---
Entry stack: [V11, 0x1db, V122]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x67a
[0x67a:0x68d]
---
Predecessors: [0x1e8]
Successors: [0x1f0]
---
0x67a JUMPDEST
0x67b PUSH1 0x1
0x67d PUSH1 0x0
0x67f SWAP1
0x680 SLOAD
0x681 SWAP1
0x682 PUSH2 0x100
0x685 EXP
0x686 SWAP1
0x687 DIV
0x688 PUSH2 0xffff
0x68b AND
0x68c DUP2
0x68d JUMP
---
0x67a: JUMPDEST 
0x67b: V417 = 0x1
0x67d: V418 = 0x0
0x680: V419 = S[0x1]
0x682: V420 = 0x100
0x685: V421 = EXP 0x100 0x0
0x687: V422 = DIV V419 0x1
0x688: V423 = 0xffff
0x68b: V424 = AND 0xffff V422
0x68d: JUMP 0x1f0
---
Entry stack: [V11, 0x1f0]
Stack pops: 1
Stack additions: [S0, V424]
Exit stack: [V11, 0x1f0, V424]

================================

Block 0x68e
[0x68e:0x6dc]
---
Predecessors: [0x219]
Successors: [0x6dd, 0x6de]
---
0x68e JUMPDEST
0x68f PUSH1 0x0
0x691 DUP1
0x692 PUSH1 0x4
0x694 PUSH1 0x0
0x696 DUP5
0x697 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ac AND
0x6ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c2 AND
0x6c3 DUP2
0x6c4 MSTORE
0x6c5 PUSH1 0x20
0x6c7 ADD
0x6c8 SWAP1
0x6c9 DUP2
0x6ca MSTORE
0x6cb PUSH1 0x20
0x6cd ADD
0x6ce PUSH1 0x0
0x6d0 SHA3
0x6d1 PUSH1 0x0
0x6d3 PUSH1 0x2
0x6d5 DUP2
0x6d6 LT
0x6d7 ISZERO
0x6d8 ISZERO
0x6d9 PUSH2 0x6de
0x6dc JUMPI
---
0x68e: JUMPDEST 
0x68f: V425 = 0x0
0x692: V426 = 0x4
0x694: V427 = 0x0
0x697: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x6ad: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c2: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x6c4: M[0x0] = V431
0x6c5: V432 = 0x20
0x6c7: V433 = ADD 0x20 0x0
0x6ca: M[0x20] = 0x4
0x6cb: V434 = 0x20
0x6cd: V435 = ADD 0x20 0x20
0x6ce: V436 = 0x0
0x6d0: V437 = SHA3 0x0 0x40
0x6d1: V438 = 0x0
0x6d3: V439 = 0x2
0x6d6: V440 = LT 0x0 0x2
0x6d7: V441 = ISZERO 0x1
0x6d8: V442 = ISZERO 0x0
0x6d9: V443 = 0x6de
0x6dc: JUMPI 0x6de 0x1
---
Entry stack: [V11, 0x245, V151]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, V437, 0x0]
Exit stack: [V11, 0x245, V151, 0x0, 0x0, V437, 0x0]

================================

Block 0x6dd
[0x6dd:0x6dd]
---
Predecessors: [0x68e]
Successors: []
---
0x6dd INVALID
---
0x6dd: INVALID 
---
Entry stack: [V11, 0x245, V151, 0x0, 0x0, V437, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x245, V151, 0x0, 0x0, V437, 0x0]

================================

Block 0x6de
[0x6de:0x72b]
---
Predecessors: [0x68e]
Successors: [0x72c, 0x72d]
---
0x6de JUMPDEST
0x6df ADD
0x6e0 SLOAD
0x6e1 PUSH1 0x4
0x6e3 PUSH1 0x0
0x6e5 DUP6
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x711 AND
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x20
0x716 ADD
0x717 SWAP1
0x718 DUP2
0x719 MSTORE
0x71a PUSH1 0x20
0x71c ADD
0x71d PUSH1 0x0
0x71f SHA3
0x720 PUSH1 0x1
0x722 PUSH1 0x2
0x724 DUP2
0x725 LT
0x726 ISZERO
0x727 ISZERO
0x728 PUSH2 0x72d
0x72b JUMPI
---
0x6de: JUMPDEST 
0x6df: V444 = ADD 0x0 V437
0x6e0: V445 = S[V444]
0x6e1: V446 = 0x4
0x6e3: V447 = 0x0
0x6e6: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x6fc: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x711: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x713: M[0x0] = V451
0x714: V452 = 0x20
0x716: V453 = ADD 0x20 0x0
0x719: M[0x20] = 0x4
0x71a: V454 = 0x20
0x71c: V455 = ADD 0x20 0x20
0x71d: V456 = 0x0
0x71f: V457 = SHA3 0x0 0x40
0x720: V458 = 0x1
0x722: V459 = 0x2
0x725: V460 = LT 0x1 0x2
0x726: V461 = ISZERO 0x1
0x727: V462 = ISZERO 0x0
0x728: V463 = 0x72d
0x72b: JUMPI 0x72d 0x1
---
Entry stack: [V11, 0x245, V151, 0x0, 0x0, V437, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, V445, V457, 0x1]
Exit stack: [V11, 0x245, V151, 0x0, 0x0, V445, V457, 0x1]

================================

Block 0x72c
[0x72c:0x72c]
---
Predecessors: [0x6de]
Successors: []
---
0x72c INVALID
---
0x72c: INVALID 
---
Entry stack: [V11, 0x245, V151, 0x0, 0x0, V445, V457, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x245, V151, 0x0, 0x0, V445, V457, 0x1]

================================

Block 0x72d
[0x72d:0x737]
---
Predecessors: [0x6de]
Successors: [0x245]
---
0x72d JUMPDEST
0x72e ADD
0x72f SLOAD
0x730 SWAP2
0x731 POP
0x732 SWAP2
0x733 POP
0x734 SWAP2
0x735 POP
0x736 SWAP2
0x737 JUMP
---
0x72d: JUMPDEST 
0x72e: V464 = ADD 0x1 V457
0x72f: V465 = S[V464]
0x737: JUMP 0x245
---
Entry stack: [V11, 0x245, V151, 0x0, 0x0, V445, V457, 0x1]
Stack pops: 7
Stack additions: [S2, V465]
Exit stack: [V11, V445, V465]

================================

Block 0x738
[0x738:0x74f]
---
Predecessors: [0x26d]
Successors: [0x299]
---
0x738 JUMPDEST
0x739 PUSH1 0x3
0x73b PUSH1 0x20
0x73d MSTORE
0x73e DUP1
0x73f PUSH1 0x0
0x741 MSTORE
0x742 PUSH1 0x40
0x744 PUSH1 0x0
0x746 SHA3
0x747 PUSH1 0x0
0x749 SWAP2
0x74a POP
0x74b SWAP1
0x74c POP
0x74d SLOAD
0x74e DUP2
0x74f JUMP
---
0x738: JUMPDEST 
0x739: V466 = 0x3
0x73b: V467 = 0x20
0x73d: M[0x20] = 0x3
0x73f: V468 = 0x0
0x741: M[0x0] = V172
0x742: V469 = 0x40
0x744: V470 = 0x0
0x746: V471 = SHA3 0x0 0x40
0x747: V472 = 0x0
0x74d: V473 = S[V471]
0x74f: JUMP 0x299
---
Entry stack: [V11, 0x299, V172]
Stack pops: 2
Stack additions: [S1, V473]
Exit stack: [V11, 0x299, V473]

================================

Block 0x750
[0x750:0x760]
---
Predecessors: [0x2ba]
Successors: [0x761, 0x765]
---
0x750 JUMPDEST
0x751 PUSH2 0x9c4
0x754 DUP2
0x755 PUSH2 0xffff
0x758 AND
0x759 GT
0x75a ISZERO
0x75b ISZERO
0x75c ISZERO
0x75d PUSH2 0x765
0x760 JUMPI
---
0x750: JUMPDEST 
0x751: V474 = 0x9c4
0x755: V475 = 0xffff
0x758: V476 = AND 0xffff V191
0x759: V477 = GT V476 0x9c4
0x75a: V478 = ISZERO V477
0x75b: V479 = ISZERO V478
0x75c: V480 = ISZERO V479
0x75d: V481 = 0x765
0x760: JUMPI 0x765 V480
---
Entry stack: [V11, 0x2d4, V191]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x2d4, V191]

================================

Block 0x761
[0x761:0x764]
---
Predecessors: [0x750]
Successors: []
---
0x761 PUSH1 0x0
0x763 DUP1
0x764 REVERT
---
0x761: V482 = 0x0
0x764: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d4, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d4, V191]

================================

Block 0x765
[0x765:0x7bc]
---
Predecessors: [0x750]
Successors: [0x7bd, 0x7c1]
---
0x765 JUMPDEST
0x766 PUSH1 0x1
0x768 PUSH1 0x2
0x76a SWAP1
0x76b SLOAD
0x76c SWAP1
0x76d PUSH2 0x100
0x770 EXP
0x771 SWAP1
0x772 DIV
0x773 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x788 AND
0x789 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79e AND
0x79f CALLER
0x7a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b5 AND
0x7b6 EQ
0x7b7 ISZERO
0x7b8 ISZERO
0x7b9 PUSH2 0x7c1
0x7bc JUMPI
---
0x765: JUMPDEST 
0x766: V483 = 0x1
0x768: V484 = 0x2
0x76b: V485 = S[0x1]
0x76d: V486 = 0x100
0x770: V487 = EXP 0x100 0x2
0x772: V488 = DIV V485 0x10000
0x773: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x788: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x789: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x79e: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x79f: V493 = CALLER
0x7a0: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b5: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x7b6: V496 = EQ V495 V492
0x7b7: V497 = ISZERO V496
0x7b8: V498 = ISZERO V497
0x7b9: V499 = 0x7c1
0x7bc: JUMPI 0x7c1 V498
---
Entry stack: [V11, 0x2d4, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d4, V191]

================================

Block 0x7bd
[0x7bd:0x7c0]
---
Predecessors: [0x765]
Successors: []
---
0x7bd PUSH1 0x0
0x7bf DUP1
0x7c0 REVERT
---
0x7bd: V500 = 0x0
0x7c0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2d4, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2d4, V191]

================================

Block 0x7c1
[0x7c1:0x7e0]
---
Predecessors: [0x765]
Successors: [0x2d4]
---
0x7c1 JUMPDEST
0x7c2 DUP1
0x7c3 PUSH1 0x1
0x7c5 PUSH1 0x0
0x7c7 PUSH2 0x100
0x7ca EXP
0x7cb DUP2
0x7cc SLOAD
0x7cd DUP2
0x7ce PUSH2 0xffff
0x7d1 MUL
0x7d2 NOT
0x7d3 AND
0x7d4 SWAP1
0x7d5 DUP4
0x7d6 PUSH2 0xffff
0x7d9 AND
0x7da MUL
0x7db OR
0x7dc SWAP1
0x7dd SSTORE
0x7de POP
0x7df POP
0x7e0 JUMP
---
0x7c1: JUMPDEST 
0x7c3: V501 = 0x1
0x7c5: V502 = 0x0
0x7c7: V503 = 0x100
0x7ca: V504 = EXP 0x100 0x0
0x7cc: V505 = S[0x1]
0x7ce: V506 = 0xffff
0x7d1: V507 = MUL 0xffff 0x1
0x7d2: V508 = NOT 0xffff
0x7d3: V509 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V505
0x7d6: V510 = 0xffff
0x7d9: V511 = AND 0xffff V191
0x7da: V512 = MUL V511 0x1
0x7db: V513 = OR V512 V509
0x7dd: S[0x1] = V513
0x7e0: JUMP 0x2d4
---
Entry stack: [V11, 0x2d4, V191]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e1
[0x7e1:0x7fa]
---
Predecessors: [0x2e1]
Successors: [0x7fb, 0x7fc]
---
0x7e1 JUMPDEST
0x7e2 PUSH1 0x4
0x7e4 PUSH1 0x20
0x7e6 MSTORE
0x7e7 DUP2
0x7e8 PUSH1 0x0
0x7ea MSTORE
0x7eb PUSH1 0x40
0x7ed PUSH1 0x0
0x7ef SHA3
0x7f0 DUP2
0x7f1 PUSH1 0x2
0x7f3 DUP2
0x7f4 LT
0x7f5 ISZERO
0x7f6 ISZERO
0x7f7 PUSH2 0x7fc
0x7fa JUMPI
---
0x7e1: JUMPDEST 
0x7e2: V514 = 0x4
0x7e4: V515 = 0x20
0x7e6: M[0x20] = 0x4
0x7e8: V516 = 0x0
0x7ea: M[0x0] = V203
0x7eb: V517 = 0x40
0x7ed: V518 = 0x0
0x7ef: V519 = SHA3 0x0 0x40
0x7f1: V520 = 0x2
0x7f4: V521 = LT V206 0x2
0x7f5: V522 = ISZERO V521
0x7f6: V523 = ISZERO V522
0x7f7: V524 = 0x7fc
0x7fa: JUMPI 0x7fc V523
---
Entry stack: [V11, 0x316, V203, V206]
Stack pops: 2
Stack additions: [S1, S0, V519, S0]
Exit stack: [V11, 0x316, V203, V206, V519, V206]

================================

Block 0x7fb
[0x7fb:0x7fb]
---
Predecessors: [0x7e1]
Successors: []
---
0x7fb INVALID
---
0x7fb: INVALID 
---
Entry stack: [V11, 0x316, V203, V206, V519, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x316, V203, V206, V519, V206]

================================

Block 0x7fc
[0x7fc:0x807]
---
Predecessors: [0x7e1]
Successors: [0x316]
---
0x7fc JUMPDEST
0x7fd ADD
0x7fe PUSH1 0x0
0x800 SWAP2
0x801 POP
0x802 SWAP2
0x803 POP
0x804 POP
0x805 SLOAD
0x806 DUP2
0x807 JUMP
---
0x7fc: JUMPDEST 
0x7fd: V525 = ADD V206 V519
0x7fe: V526 = 0x0
0x805: V527 = S[V525]
0x807: JUMP 0x316
---
Entry stack: [V11, 0x316, V203, V206, V519, V206]
Stack pops: 5
Stack additions: [S4, V527]
Exit stack: [V11, 0x316, V527]

================================

Block 0x808
[0x808:0x856]
---
Predecessors: [0x337]
Successors: [0x857, 0x85f]
---
0x808 JUMPDEST
0x809 PUSH1 0x0
0x80b DUP1
0x80c PUSH1 0x2
0x80e PUSH1 0x0
0x810 DUP5
0x811 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x826 AND
0x827 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83c AND
0x83d DUP2
0x83e MSTORE
0x83f PUSH1 0x20
0x841 ADD
0x842 SWAP1
0x843 DUP2
0x844 MSTORE
0x845 PUSH1 0x20
0x847 ADD
0x848 PUSH1 0x0
0x84a SHA3
0x84b SLOAD
0x84c SWAP1
0x84d POP
0x84e PUSH1 0x0
0x850 DUP2
0x851 EQ
0x852 ISZERO
0x853 PUSH2 0x85f
0x856 JUMPI
---
0x808: JUMPDEST 
0x809: V528 = 0x0
0x80c: V529 = 0x2
0x80e: V530 = 0x0
0x811: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x826: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x827: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x83c: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x83e: M[0x0] = V534
0x83f: V535 = 0x20
0x841: V536 = ADD 0x20 0x0
0x844: M[0x20] = 0x2
0x845: V537 = 0x20
0x847: V538 = ADD 0x20 0x20
0x848: V539 = 0x0
0x84a: V540 = SHA3 0x0 0x40
0x84b: V541 = S[V540]
0x84e: V542 = 0x0
0x851: V543 = EQ V541 0x0
0x852: V544 = ISZERO V543
0x853: V545 = 0x85f
0x856: JUMPI 0x85f V544
---
Entry stack: [V11, 0x363, V225]
Stack pops: 1
Stack additions: [S0, 0x0, V541]
Exit stack: [V11, 0x363, V225, 0x0, V541]

================================

Block 0x857
[0x857:0x85e]
---
Predecessors: [0x808]
Successors: [0x86c]
---
0x857 PUSH1 0x0
0x859 SWAP2
0x85a POP
0x85b PUSH2 0x86c
0x85e JUMP
---
0x857: V546 = 0x0
0x85b: V547 = 0x86c
0x85e: JUMP 0x86c
---
Entry stack: [V11, 0x363, V225, 0x0, V541]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x363, V225, 0x0, V541]

================================

Block 0x85f
[0x85f:0x868]
---
Predecessors: [0x808]
Successors: [0xfe2]
---
0x85f JUMPDEST
0x860 PUSH2 0x869
0x863 DUP4
0x864 DUP3
0x865 PUSH2 0xfe2
0x868 JUMP
---
0x85f: JUMPDEST 
0x860: V548 = 0x869
0x865: V549 = 0xfe2
0x868: JUMP 0xfe2
---
Entry stack: [V11, 0x363, V225, 0x0, V541]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x869, S2, S0]
Exit stack: [V11, 0x363, V225, 0x0, V541, 0x869, V225, V541]

================================

Block 0x869
[0x869:0x86b]
---
Predecessors: [0x1075]
Successors: [0x86c]
---
0x869 JUMPDEST
0x86a SWAP2
0x86b POP
---
0x869: JUMPDEST 
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1]

================================

Block 0x86c
[0x86c:0x871]
---
Predecessors: [0x857, 0x869]
Successors: [0x363, 0x5ff, 0xdf8, 0xe94, 0xea4]
---
0x86c JUMPDEST
0x86d POP
0x86e SWAP2
0x86f SWAP1
0x870 POP
0x871 JUMP
---
0x86c: JUMPDEST 
0x871: JUMP S3
---
Entry stack: [V11, S13, V283, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V11, S13, V283, S11, S10, S9, S8, S7, S6, S5, S4, S1]

================================

Block 0x872
[0x872:0x884]
---
Predecessors: [0x384]
Successors: [0x38c]
---
0x872 JUMPDEST
0x873 PUSH1 0x1
0x875 PUSH1 0x16
0x877 SWAP1
0x878 SLOAD
0x879 SWAP1
0x87a PUSH2 0x100
0x87d EXP
0x87e SWAP1
0x87f DIV
0x880 PUSH1 0xff
0x882 AND
0x883 DUP2
0x884 JUMP
---
0x872: JUMPDEST 
0x873: V550 = 0x1
0x875: V551 = 0x16
0x878: V552 = S[0x1]
0x87a: V553 = 0x100
0x87d: V554 = EXP 0x100 0x16
0x87f: V555 = DIV V552 0x100000000000000000000000000000000000000000000
0x880: V556 = 0xff
0x882: V557 = AND 0xff V555
0x884: JUMP 0x38c
---
Entry stack: [V11, 0x38c]
Stack pops: 1
Stack additions: [S0, V557]
Exit stack: [V11, 0x38c, V557]

================================

Block 0x885
[0x885:0x8a3]
---
Predecessors: [0x3b1]
Successors: [0x3b9]
---
0x885 JUMPDEST
0x886 PUSH1 0x0
0x888 ADDRESS
0x889 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89e AND
0x89f BALANCE
0x8a0 SWAP1
0x8a1 POP
0x8a2 SWAP1
0x8a3 JUMP
---
0x885: JUMPDEST 
0x886: V558 = 0x0
0x888: V559 = ADDRESS
0x889: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x89e: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x89f: V562 = BALANCE V561
0x8a3: JUMP 0x3b9
---
Entry stack: [V11, 0x3b9]
Stack pops: 1
Stack additions: [V562]
Exit stack: [V11, V562]

================================

Block 0x8a4
[0x8a4:0x8a9]
---
Predecessors: [0x3da]
Successors: [0x3e2]
---
0x8a4 JUMPDEST
0x8a5 PUSH1 0x0
0x8a7 SLOAD
0x8a8 DUP2
0x8a9 JUMP
---
0x8a4: JUMPDEST 
0x8a5: V563 = 0x0
0x8a7: V564 = S[0x0]
0x8a9: JUMP 0x3e2
---
Entry stack: [V11, 0x3e2]
Stack pops: 1
Stack additions: [S0, V564]
Exit stack: [V11, 0x3e2, V564]

================================

Block 0x8aa
[0x8aa:0x8cd]
---
Predecessors: [0x3f8]
Successors: [0x8ce, 0x8d2]
---
0x8aa JUMPDEST
0x8ab PUSH1 0x0
0x8ad DUP1
0x8ae PUSH1 0x0
0x8b0 DUP1
0x8b1 PUSH1 0x0
0x8b3 DUP1
0x8b4 PUSH1 0x0
0x8b6 DUP1
0x8b7 PUSH1 0x1
0x8b9 PUSH1 0x16
0x8bb SWAP1
0x8bc SLOAD
0x8bd SWAP1
0x8be PUSH2 0x100
0x8c1 EXP
0x8c2 SWAP1
0x8c3 DIV
0x8c4 PUSH1 0xff
0x8c6 AND
0x8c7 ISZERO
0x8c8 ISZERO
0x8c9 ISZERO
0x8ca PUSH2 0x8d2
0x8cd JUMPI
---
0x8aa: JUMPDEST 
0x8ab: V565 = 0x0
0x8ae: V566 = 0x0
0x8b1: V567 = 0x0
0x8b4: V568 = 0x0
0x8b7: V569 = 0x1
0x8b9: V570 = 0x16
0x8bc: V571 = S[0x1]
0x8be: V572 = 0x100
0x8c1: V573 = EXP 0x100 0x16
0x8c3: V574 = DIV V571 0x100000000000000000000000000000000000000000000
0x8c4: V575 = 0xff
0x8c6: V576 = AND 0xff V574
0x8c7: V577 = ISZERO V576
0x8c8: V578 = ISZERO V577
0x8c9: V579 = ISZERO V578
0x8ca: V580 = 0x8d2
0x8cd: JUMPI 0x8d2 V579
---
Entry stack: [V11, 0x42d, V283, V286]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8ce
[0x8ce:0x8d1]
---
Predecessors: [0x8aa]
Successors: []
---
0x8ce PUSH1 0x0
0x8d0 DUP1
0x8d1 REVERT
---
0x8ce: V581 = 0x0
0x8d1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8d2
[0x8d2:0x908]
---
Predecessors: [0x8aa]
Successors: [0x909, 0x93a]
---
0x8d2 JUMPDEST
0x8d3 CALLER
0x8d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e9 AND
0x8ea DUP11
0x8eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x900 AND
0x901 EQ
0x902 ISZERO
0x903 DUP1
0x904 ISZERO
0x905 PUSH2 0x93a
0x908 JUMPI
---
0x8d2: JUMPDEST 
0x8d3: V582 = CALLER
0x8d4: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x8eb: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0x900: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x901: V587 = EQ V586 V584
0x902: V588 = ISZERO V587
0x904: V589 = ISZERO V588
0x905: V590 = 0x93a
0x908: JUMPI 0x93a V589
---
Entry stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V588]
Exit stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V588]

================================

Block 0x909
[0x909:0x939]
---
Predecessors: [0x8d2]
Successors: [0x93a]
---
0x909 POP
0x90a ORIGIN
0x90b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x920 AND
0x921 DUP11
0x922 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x937 AND
0x938 EQ
0x939 ISZERO
---
0x90a: V591 = ORIGIN
0x90b: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x920: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x922: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0x937: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x938: V596 = EQ V595 V593
0x939: V597 = ISZERO V596
---
Entry stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V588]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V597]
Exit stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V597]

================================

Block 0x93a
[0x93a:0x940]
---
Predecessors: [0x8d2, 0x909]
Successors: [0x941, 0x945]
---
0x93a JUMPDEST
0x93b ISZERO
0x93c ISZERO
0x93d PUSH2 0x945
0x940 JUMPI
---
0x93a: JUMPDEST 
0x93b: V598 = ISZERO S0
0x93c: V599 = ISZERO V598
0x93d: V600 = 0x945
0x940: JUMPI 0x945 V599
---
Entry stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x941
[0x941:0x944]
---
Predecessors: [0x93a]
Successors: []
---
0x941 PUSH1 0x0
0x943 DUP1
0x944 REVERT
---
0x941: V601 = 0x0
0x944: REVERT 0x0 0x0
---
Entry stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x945
[0x945:0x993]
---
Predecessors: [0x93a]
Successors: [0x994, 0x995]
---
0x945 JUMPDEST
0x946 PUSH1 0x4
0x948 PUSH1 0x0
0x94a DUP12
0x94b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x960 AND
0x961 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x976 AND
0x977 DUP2
0x978 MSTORE
0x979 PUSH1 0x20
0x97b ADD
0x97c SWAP1
0x97d DUP2
0x97e MSTORE
0x97f PUSH1 0x20
0x981 ADD
0x982 PUSH1 0x0
0x984 SHA3
0x985 SWAP8
0x986 POP
0x987 DUP8
0x988 PUSH1 0x0
0x98a PUSH1 0x2
0x98c DUP2
0x98d LT
0x98e ISZERO
0x98f ISZERO
0x990 PUSH2 0x995
0x993 JUMPI
---
0x945: JUMPDEST 
0x946: V602 = 0x4
0x948: V603 = 0x0
0x94b: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0x960: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x961: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0x976: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x978: M[0x0] = V607
0x979: V608 = 0x20
0x97b: V609 = ADD 0x20 0x0
0x97e: M[0x20] = 0x4
0x97f: V610 = 0x20
0x981: V611 = ADD 0x20 0x20
0x982: V612 = 0x0
0x984: V613 = SHA3 0x0 0x40
0x988: V614 = 0x0
0x98a: V615 = 0x2
0x98d: V616 = LT 0x0 0x2
0x98e: V617 = ISZERO 0x1
0x98f: V618 = ISZERO 0x0
0x990: V619 = 0x995
0x993: JUMPI 0x995 0x1
---
Entry stack: [V11, 0x42d, V283, V286, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 10
Stack additions: [S9, S8, V613, S6, S5, S4, S3, S2, S1, S0, V613, 0x0]
Exit stack: [V11, 0x42d, V283, V286, V613, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x0]

================================

Block 0x994
[0x994:0x994]
---
Predecessors: [0x945]
Successors: []
---
0x994 INVALID
---
0x994: INVALID 
---
Entry stack: [V11, 0x42d, V283, V286, V613, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x42d, V283, V286, V613, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x0]

================================

Block 0x995
[0x995:0x9a6]
---
Predecessors: [0x945]
Successors: [0x9a7, 0x9a8]
---
0x995 JUMPDEST
0x996 ADD
0x997 SLOAD
0x998 SWAP7
0x999 POP
0x99a DUP8
0x99b PUSH1 0x1
0x99d PUSH1 0x2
0x99f DUP2
0x9a0 LT
0x9a1 ISZERO
0x9a2 ISZERO
0x9a3 PUSH2 0x9a8
0x9a6 JUMPI
---
0x995: JUMPDEST 
0x996: V620 = ADD 0x0 V613
0x997: V621 = S[V620]
0x99b: V622 = 0x1
0x99d: V623 = 0x2
0x9a0: V624 = LT 0x1 0x2
0x9a1: V625 = ISZERO 0x1
0x9a2: V626 = ISZERO 0x0
0x9a3: V627 = 0x9a8
0x9a6: JUMPI 0x9a8 0x1
---
Entry stack: [V11, 0x42d, V283, V286, V613, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x0]
Stack pops: 10
Stack additions: [S9, V621, S7, S6, S5, S4, S3, S2, S9, 0x1]
Exit stack: [V11, 0x42d, V283, V286, V613, V621, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x1]

================================

Block 0x9a7
[0x9a7:0x9a7]
---
Predecessors: [0x995]
Successors: []
---
0x9a7 INVALID
---
0x9a7: INVALID 
---
Entry stack: [V11, 0x42d, V283, V286, V613, V621, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x42d, V283, V286, V613, V621, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x1]

================================

Block 0x9a8
[0x9a8:0x9b6]
---
Predecessors: [0x995]
Successors: [0x9b7, 0x9bb]
---
0x9a8 JUMPDEST
0x9a9 ADD
0x9aa SLOAD
0x9ab SWAP6
0x9ac POP
0x9ad DUP9
0x9ae DUP7
0x9af GT
0x9b0 ISZERO
0x9b1 ISZERO
0x9b2 ISZERO
0x9b3 PUSH2 0x9bb
0x9b6 JUMPI
---
0x9a8: JUMPDEST 
0x9a9: V628 = ADD 0x1 V613
0x9aa: V629 = S[V628]
0x9af: V630 = GT V629 V286
0x9b0: V631 = ISZERO V630
0x9b1: V632 = ISZERO V631
0x9b2: V633 = ISZERO V632
0x9b3: V634 = 0x9bb
0x9b6: JUMPI 0x9bb V633
---
Entry stack: [V11, 0x42d, V283, V286, V613, V621, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V613, 0x1]
Stack pops: 11
Stack additions: [S10, S9, S8, V629, S6, S5, S4, S3, S2]
Exit stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9b7
[0x9b7:0x9ba]
---
Predecessors: [0x9a8]
Successors: []
---
0x9b7 PUSH1 0x0
0x9b9 DUP1
0x9ba REVERT
---
0x9b7: V635 = 0x0
0x9ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9bb
[0x9bb:0x9c8]
---
Predecessors: [0x9a8]
Successors: [0x9c9, 0x9cd]
---
0x9bb JUMPDEST
0x9bc PUSH1 0x0
0x9be SWAP5
0x9bf POP
0x9c0 PUSH1 0x0
0x9c2 DUP8
0x9c3 EQ
0x9c4 ISZERO
0x9c5 PUSH2 0x9cd
0x9c8 JUMPI
---
0x9bb: JUMPDEST 
0x9bc: V636 = 0x0
0x9c0: V637 = 0x0
0x9c3: V638 = EQ V621 0x0
0x9c4: V639 = ISZERO V638
0x9c5: V640 = 0x9cd
0x9c8: JUMPI 0x9cd V639
---
Entry stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, 0x0, S3, S2, S1, S0]
Exit stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9c9
[0x9c9:0x9cc]
---
Predecessors: [0x9bb]
Successors: []
---
0x9c9 PUSH1 0x0
0x9cb DUP1
0x9cc REVERT
---
0x9c9: V641 = 0x0
0x9cc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9cd
[0x9cd:0x9d6]
---
Predecessors: [0x9bb]
Successors: [0x107d]
---
0x9cd JUMPDEST
0x9ce PUSH2 0x9d7
0x9d1 DUP8
0x9d2 DUP8
0x9d3 PUSH2 0x107d
0x9d6 JUMP
---
0x9cd: JUMPDEST 
0x9ce: V642 = 0x9d7
0x9d3: V643 = 0x107d
0x9d6: JUMP 0x107d
---
Entry stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x9d7, S6, S5]
Exit stack: [V11, 0x42d, V283, V286, V613, V621, V629, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9d7, V621, V629]

================================

Block 0x9d7
[0x9d7:0x9e4]
---
Predecessors: [0x10b1]
Successors: [0x9e5, 0x9ed]
---
0x9d7 JUMPDEST
0x9d8 SWAP4
0x9d9 POP
0x9da CALLVALUE
0x9db SWAP3
0x9dc POP
0x9dd DUP4
0x9de DUP4
0x9df GT
0x9e0 ISZERO
0x9e1 PUSH2 0x9ed
0x9e4 JUMPI
---
0x9d7: JUMPDEST 
0x9da: V644 = CALLVALUE
0x9df: V645 = GT V644 S0
0x9e0: V646 = ISZERO V645
0x9e1: V647 = 0x9ed
0x9e4: JUMPI 0x9ed V646
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0, V644, S2, S1]
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0, V644, S2, S1]

================================

Block 0x9e5
[0x9e5:0x9ec]
---
Predecessors: [0x9d7]
Successors: [0x9ed]
---
0x9e5 DUP4
0x9e6 DUP4
0x9e7 SUB
0x9e8 SWAP5
0x9e9 POP
0x9ea DUP4
0x9eb SWAP3
0x9ec POP
---
0x9e7: V648 = SUB V644 S3
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V644, S1, S0]
Stack pops: 5
Stack additions: [V648, S3, S3, S1, S0]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V648, S3, S3, S1, S0]

================================

Block 0x9ed
[0x9ed:0x9f6]
---
Predecessors: [0x9d7, 0x9e5]
Successors: [0x9f7, 0x9f8]
---
0x9ed JUMPDEST
0x9ee DUP6
0x9ef DUP4
0x9f0 DUP2
0x9f1 ISZERO
0x9f2 ISZERO
0x9f3 PUSH2 0x9f8
0x9f6 JUMPI
---
0x9ed: JUMPDEST 
0x9f1: V649 = ISZERO S5
0x9f2: V650 = ISZERO V649
0x9f3: V651 = 0x9f8
0x9f6: JUMPI 0x9f8 V650
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, S2]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S5, S2]

================================

Block 0x9f7
[0x9f7:0x9f7]
---
Predecessors: [0x9ed]
Successors: []
---
0x9f7 INVALID
---
0x9f7: INVALID 
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9f8
[0x9f8:0xa04]
---
Predecessors: [0x9ed]
Successors: [0xa05, 0xa09]
---
0x9f8 JUMPDEST
0x9f9 DIV
0x9fa SWAP2
0x9fb POP
0x9fc PUSH1 0x0
0x9fe DUP3
0x9ff EQ
0xa00 ISZERO
0xa01 PUSH2 0xa09
0xa04 JUMPI
---
0x9f8: JUMPDEST 
0x9f9: V652 = DIV S0 S1
0x9fc: V653 = 0x0
0x9ff: V654 = EQ V652 0x0
0xa00: V655 = ISZERO V654
0xa01: V656 = 0xa09
0xa04: JUMPI 0xa09 V655
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V652, S2]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V652, S2]

================================

Block 0xa05
[0xa05:0xa08]
---
Predecessors: [0x9f8]
Successors: []
---
0xa05 PUSH1 0x0
0xa07 DUP1
0xa08 REVERT
---
0xa05: V657 = 0x0
0xa08: REVERT 0x0 0x0
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V652, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V652, S0]

================================

Block 0xa09
[0xa09:0xa16]
---
Predecessors: [0x9f8]
Successors: [0x107d]
---
0xa09 JUMPDEST
0xa0a PUSH2 0xa1c
0xa0d DUP4
0xa0e PUSH2 0xa17
0xa11 DUP5
0xa12 DUP10
0xa13 PUSH2 0x107d
0xa16 JUMP
---
0xa09: JUMPDEST 
0xa0a: V658 = 0xa1c
0xa0e: V659 = 0xa17
0xa13: V660 = 0x107d
0xa16: JUMP 0x107d
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V652, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xa1c, S2, 0xa17, S1, S5]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa1c, S2, 0xa17, S1, S5]

================================

Block 0xa17
[0xa17:0xa1b]
---
Predecessors: [0x10b1]
Successors: [0x10b8]
---
0xa17 JUMPDEST
0xa18 PUSH2 0x10b8
0xa1b JUMP
---
0xa17: JUMPDEST 
0xa18: V661 = 0x10b8
0xa1b: JUMP 0x10b8
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa1c
[0xa1c:0xa31]
---
Predecessors: [0x10c6]
Successors: [0x107d]
---
0xa1c JUMPDEST
0xa1d DUP6
0xa1e ADD
0xa1f SWAP5
0xa20 POP
0xa21 PUSH2 0xa3c
0xa24 DUP4
0xa25 PUSH2 0xa37
0xa28 DUP6
0xa29 PUSH2 0xa32
0xa2c DUP7
0xa2d DUP12
0xa2e PUSH2 0x107d
0xa31 JUMP
---
0xa1c: JUMPDEST 
0xa1e: V662 = ADD S5 V1039
0xa21: V663 = 0xa3c
0xa25: V664 = 0xa37
0xa29: V665 = 0xa32
0xa2e: V666 = 0x107d
0xa31: JUMP 0x107d
---
Entry stack: [V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1039]
Stack pops: 7
Stack additions: [S6, V662, S4, S3, S2, S1, 0xa3c, S3, 0xa37, S3, 0xa32, S2, S6]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, V662, S4, S3, S2, S1, 0xa3c, S3, 0xa37, S3, 0xa32, S2, S6]

================================

Block 0xa32
[0xa32:0xa36]
---
Predecessors: [0x10b1]
Successors: [0x10b8]
---
0xa32 JUMPDEST
0xa33 PUSH2 0x10b8
0xa36 JUMP
---
0xa32: JUMPDEST 
0xa33: V667 = 0x10b8
0xa36: JUMP 0x10b8
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa37
[0xa37:0xa3b]
---
Predecessors: [0x10c6]
Successors: [0x10b8]
---
0xa37 JUMPDEST
0xa38 PUSH2 0x10b8
0xa3b JUMP
---
0xa37: JUMPDEST 
0xa38: V668 = 0x10b8
0xa3b: JUMP 0x10b8
---
Entry stack: [V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1039]
Stack pops: 0
Stack additions: []
Exit stack: [V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1039]

================================

Block 0xa3c
[0xa3c:0xa5e]
---
Predecessors: [0xea5, 0xfdd, 0x1075, 0x10c6]
Successors: [0x107d]
---
0xa3c JUMPDEST
0xa3d SWAP3
0xa3e POP
0xa3f PUSH2 0x2710
0xa42 PUSH2 0xa5f
0xa45 PUSH1 0x1
0xa47 PUSH1 0x0
0xa49 SWAP1
0xa4a SLOAD
0xa4b SWAP1
0xa4c PUSH2 0x100
0xa4f EXP
0xa50 SWAP1
0xa51 DIV
0xa52 PUSH2 0xffff
0xa55 AND
0xa56 PUSH2 0xffff
0xa59 AND
0xa5a DUP6
0xa5b PUSH2 0x107d
0xa5e JUMP
---
0xa3c: JUMPDEST 
0xa3f: V669 = 0x2710
0xa42: V670 = 0xa5f
0xa45: V671 = 0x1
0xa47: V672 = 0x0
0xa4a: V673 = S[0x1]
0xa4c: V674 = 0x100
0xa4f: V675 = EXP 0x100 0x0
0xa51: V676 = DIV V673 0x1
0xa52: V677 = 0xffff
0xa55: V678 = AND 0xffff V676
0xa56: V679 = 0xffff
0xa59: V680 = AND 0xffff V678
0xa5b: V681 = 0x107d
0xa5e: JUMP 0x107d
---
Entry stack: [V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1, 0x2710, 0xa5f, V680, S0]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S0, S2, S1, 0x2710, 0xa5f, V680, S0]

================================

Block 0xa5f
[0xa5f:0xa66]
---
Predecessors: [0x10b1]
Successors: [0xa67, 0xa68]
---
0xa5f JUMPDEST
0xa60 DUP2
0xa61 ISZERO
0xa62 ISZERO
0xa63 PUSH2 0xa68
0xa66 JUMPI
---
0xa5f: JUMPDEST 
0xa61: V682 = ISZERO S1
0xa62: V683 = ISZERO V682
0xa63: V684 = 0xa68
0xa66: JUMPI 0xa68 V683
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa67
[0xa67:0xa67]
---
Predecessors: [0xa5f]
Successors: []
---
0xa67 INVALID
---
0xa67: INVALID 
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa68
[0xa68:0xb3c]
---
Predecessors: [0xa5f]
Successors: [0xb3d, 0xb3e]
---
0xa68 JUMPDEST
0xa69 DIV
0xa6a SWAP1
0xa6b POP
0xa6c DUP2
0xa6d PUSH1 0x2
0xa6f PUSH1 0x0
0xa71 DUP13
0xa72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa87 AND
0xa88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9d AND
0xa9e DUP2
0xa9f MSTORE
0xaa0 PUSH1 0x20
0xaa2 ADD
0xaa3 SWAP1
0xaa4 DUP2
0xaa5 MSTORE
0xaa6 PUSH1 0x20
0xaa8 ADD
0xaa9 PUSH1 0x0
0xaab SHA3
0xaac SLOAD
0xaad SUB
0xaae PUSH1 0x2
0xab0 PUSH1 0x0
0xab2 DUP13
0xab3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac8 AND
0xac9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xade AND
0xadf DUP2
0xae0 MSTORE
0xae1 PUSH1 0x20
0xae3 ADD
0xae4 SWAP1
0xae5 DUP2
0xae6 MSTORE
0xae7 PUSH1 0x20
0xae9 ADD
0xaea PUSH1 0x0
0xaec SHA3
0xaed DUP2
0xaee SWAP1
0xaef SSTORE
0xaf0 POP
0xaf1 DUP2
0xaf2 PUSH1 0x4
0xaf4 PUSH1 0x0
0xaf6 DUP13
0xaf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0c AND
0xb0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb22 AND
0xb23 DUP2
0xb24 MSTORE
0xb25 PUSH1 0x20
0xb27 ADD
0xb28 SWAP1
0xb29 DUP2
0xb2a MSTORE
0xb2b PUSH1 0x20
0xb2d ADD
0xb2e PUSH1 0x0
0xb30 SHA3
0xb31 PUSH1 0x0
0xb33 PUSH1 0x2
0xb35 DUP2
0xb36 LT
0xb37 ISZERO
0xb38 ISZERO
0xb39 PUSH2 0xb3e
0xb3c JUMPI
---
0xa68: JUMPDEST 
0xa69: V685 = DIV S0 S1
0xa6d: V686 = 0x2
0xa6f: V687 = 0x0
0xa72: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xa87: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xa88: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9d: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0xa9f: M[0x0] = V691
0xaa0: V692 = 0x20
0xaa2: V693 = ADD 0x20 0x0
0xaa5: M[0x20] = 0x2
0xaa6: V694 = 0x20
0xaa8: V695 = ADD 0x20 0x20
0xaa9: V696 = 0x0
0xaab: V697 = SHA3 0x0 0x40
0xaac: V698 = S[V697]
0xaad: V699 = SUB V698 S3
0xaae: V700 = 0x2
0xab0: V701 = 0x0
0xab3: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xac8: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xac9: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xade: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xae0: M[0x0] = V705
0xae1: V706 = 0x20
0xae3: V707 = ADD 0x20 0x0
0xae6: M[0x20] = 0x2
0xae7: V708 = 0x20
0xae9: V709 = ADD 0x20 0x20
0xaea: V710 = 0x0
0xaec: V711 = SHA3 0x0 0x40
0xaef: S[V711] = V699
0xaf2: V712 = 0x4
0xaf4: V713 = 0x0
0xaf7: V714 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0c: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xb0d: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0xb22: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0xb24: M[0x0] = V717
0xb25: V718 = 0x20
0xb27: V719 = ADD 0x20 0x0
0xb2a: M[0x20] = 0x4
0xb2b: V720 = 0x20
0xb2d: V721 = ADD 0x20 0x20
0xb2e: V722 = 0x0
0xb30: V723 = SHA3 0x0 0x40
0xb31: V724 = 0x0
0xb33: V725 = 0x2
0xb36: V726 = LT 0x0 0x2
0xb37: V727 = ISZERO 0x1
0xb38: V728 = ISZERO 0x0
0xb39: V729 = 0xb3e
0xb3c: JUMPI 0xb3e 0x1
---
Entry stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V685, S3, V723, 0x0]
Exit stack: [V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V685, S3, V723, 0x0]

================================

Block 0xb3d
[0xb3d:0xb3d]
---
Predecessors: [0xa68]
Successors: []
---
0xb3d INVALID
---
0xb3d: INVALID 
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685, S2, V723, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685, S2, V723, 0x0]

================================

Block 0xb3e
[0xb3e:0xb8c]
---
Predecessors: [0xa68]
Successors: [0xb8d, 0xb8e]
---
0xb3e JUMPDEST
0xb3f ADD
0xb40 SLOAD
0xb41 SUB
0xb42 PUSH1 0x4
0xb44 PUSH1 0x0
0xb46 DUP13
0xb47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5c AND
0xb5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb72 AND
0xb73 DUP2
0xb74 MSTORE
0xb75 PUSH1 0x20
0xb77 ADD
0xb78 SWAP1
0xb79 DUP2
0xb7a MSTORE
0xb7b PUSH1 0x20
0xb7d ADD
0xb7e PUSH1 0x0
0xb80 SHA3
0xb81 PUSH1 0x0
0xb83 PUSH1 0x2
0xb85 DUP2
0xb86 LT
0xb87 ISZERO
0xb88 ISZERO
0xb89 PUSH2 0xb8e
0xb8c JUMPI
---
0xb3e: JUMPDEST 
0xb3f: V730 = ADD 0x0 V723
0xb40: V731 = S[V730]
0xb41: V732 = SUB V731 S2
0xb42: V733 = 0x4
0xb44: V734 = 0x0
0xb47: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5c: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0xb5d: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xb72: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0xb74: M[0x0] = V738
0xb75: V739 = 0x20
0xb77: V740 = ADD 0x20 0x0
0xb7a: M[0x20] = 0x4
0xb7b: V741 = 0x20
0xb7d: V742 = ADD 0x20 0x20
0xb7e: V743 = 0x0
0xb80: V744 = SHA3 0x0 0x40
0xb81: V745 = 0x0
0xb83: V746 = 0x2
0xb86: V747 = LT 0x0 0x2
0xb87: V748 = ISZERO 0x1
0xb88: V749 = ISZERO 0x0
0xb89: V750 = 0xb8e
0xb8c: JUMPI 0xb8e 0x1
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685, S2, V723, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V732, V744, 0x0]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685, V732, V744, 0x0]

================================

Block 0xb8d
[0xb8d:0xb8d]
---
Predecessors: [0xb3e]
Successors: []
---
0xb8d INVALID
---
0xb8d: INVALID 
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685, V732, V744, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685, V732, V744, 0x0]

================================

Block 0xb8e
[0xb8e:0xd1c]
---
Predecessors: [0xb3e]
Successors: [0xd1d, 0xd21]
---
0xb8e JUMPDEST
0xb8f ADD
0xb90 DUP2
0xb91 SWAP1
0xb92 SSTORE
0xb93 POP
0xb94 DUP2
0xb95 PUSH1 0x2
0xb97 PUSH1 0x0
0xb99 CALLER
0xb9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbaf AND
0xbb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc5 AND
0xbc6 DUP2
0xbc7 MSTORE
0xbc8 PUSH1 0x20
0xbca ADD
0xbcb SWAP1
0xbcc DUP2
0xbcd MSTORE
0xbce PUSH1 0x20
0xbd0 ADD
0xbd1 PUSH1 0x0
0xbd3 SHA3
0xbd4 SLOAD
0xbd5 ADD
0xbd6 PUSH1 0x2
0xbd8 PUSH1 0x0
0xbda CALLER
0xbdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf0 AND
0xbf1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc06 AND
0xc07 DUP2
0xc08 MSTORE
0xc09 PUSH1 0x20
0xc0b ADD
0xc0c SWAP1
0xc0d DUP2
0xc0e MSTORE
0xc0f PUSH1 0x20
0xc11 ADD
0xc12 PUSH1 0x0
0xc14 SHA3
0xc15 DUP2
0xc16 SWAP1
0xc17 SSTORE
0xc18 POP
0xc19 PUSH32 0x16dd16959a056953a63cf14bf427881e762e54f03d86b864efea8238dd3b822f
0xc3a CALLER
0xc3b DUP12
0xc3c DUP9
0xc3d DUP6
0xc3e PUSH1 0x40
0xc40 MLOAD
0xc41 DUP1
0xc42 DUP6
0xc43 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc58 AND
0xc59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6e AND
0xc6f DUP2
0xc70 MSTORE
0xc71 PUSH1 0x20
0xc73 ADD
0xc74 DUP5
0xc75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8a AND
0xc8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca0 AND
0xca1 DUP2
0xca2 MSTORE
0xca3 PUSH1 0x20
0xca5 ADD
0xca6 DUP4
0xca7 DUP2
0xca8 MSTORE
0xca9 PUSH1 0x20
0xcab ADD
0xcac DUP3
0xcad DUP2
0xcae MSTORE
0xcaf PUSH1 0x20
0xcb1 ADD
0xcb2 SWAP5
0xcb3 POP
0xcb4 POP
0xcb5 POP
0xcb6 POP
0xcb7 POP
0xcb8 PUSH1 0x40
0xcba MLOAD
0xcbb DUP1
0xcbc SWAP2
0xcbd SUB
0xcbe SWAP1
0xcbf LOG1
0xcc0 PUSH1 0x1
0xcc2 PUSH1 0x2
0xcc4 SWAP1
0xcc5 SLOAD
0xcc6 SWAP1
0xcc7 PUSH2 0x100
0xcca EXP
0xccb SWAP1
0xccc DIV
0xccd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce2 AND
0xce3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf8 AND
0xcf9 PUSH2 0x8fc
0xcfc DUP3
0xcfd SWAP1
0xcfe DUP2
0xcff ISZERO
0xd00 MUL
0xd01 SWAP1
0xd02 PUSH1 0x40
0xd04 MLOAD
0xd05 PUSH1 0x0
0xd07 PUSH1 0x40
0xd09 MLOAD
0xd0a DUP1
0xd0b DUP4
0xd0c SUB
0xd0d DUP2
0xd0e DUP6
0xd0f DUP9
0xd10 DUP9
0xd11 CALL
0xd12 SWAP4
0xd13 POP
0xd14 POP
0xd15 POP
0xd16 POP
0xd17 ISZERO
0xd18 ISZERO
0xd19 PUSH2 0xd21
0xd1c JUMPI
---
0xb8e: JUMPDEST 
0xb8f: V751 = ADD 0x0 V744
0xb92: S[V751] = V732
0xb95: V752 = 0x2
0xb97: V753 = 0x0
0xb99: V754 = CALLER
0xb9a: V755 = 0xffffffffffffffffffffffffffffffffffffffff
0xbaf: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0xbb0: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc5: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xbc7: M[0x0] = V758
0xbc8: V759 = 0x20
0xbca: V760 = ADD 0x20 0x0
0xbcd: M[0x20] = 0x2
0xbce: V761 = 0x20
0xbd0: V762 = ADD 0x20 0x20
0xbd1: V763 = 0x0
0xbd3: V764 = SHA3 0x0 0x40
0xbd4: V765 = S[V764]
0xbd5: V766 = ADD V765 S4
0xbd6: V767 = 0x2
0xbd8: V768 = 0x0
0xbda: V769 = CALLER
0xbdb: V770 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf0: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0xbf1: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0xc06: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0xc08: M[0x0] = V773
0xc09: V774 = 0x20
0xc0b: V775 = ADD 0x20 0x0
0xc0e: M[0x20] = 0x2
0xc0f: V776 = 0x20
0xc11: V777 = ADD 0x20 0x20
0xc12: V778 = 0x0
0xc14: V779 = SHA3 0x0 0x40
0xc17: S[V779] = V766
0xc19: V780 = 0x16dd16959a056953a63cf14bf427881e762e54f03d86b864efea8238dd3b822f
0xc3a: V781 = CALLER
0xc3e: V782 = 0x40
0xc40: V783 = M[0x40]
0xc43: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xc58: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0xc59: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6e: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0xc70: M[V783] = V787
0xc71: V788 = 0x20
0xc73: V789 = ADD 0x20 V783
0xc75: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8a: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0xc8b: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xca0: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0xca2: M[V789] = V793
0xca3: V794 = 0x20
0xca5: V795 = ADD 0x20 V789
0xca8: M[V795] = S8
0xca9: V796 = 0x20
0xcab: V797 = ADD 0x20 V795
0xcae: M[V797] = S4
0xcaf: V798 = 0x20
0xcb1: V799 = ADD 0x20 V797
0xcb8: V800 = 0x40
0xcba: V801 = M[0x40]
0xcbd: V802 = SUB V799 V801
0xcbf: LOG V801 V802 0x16dd16959a056953a63cf14bf427881e762e54f03d86b864efea8238dd3b822f
0xcc0: V803 = 0x1
0xcc2: V804 = 0x2
0xcc5: V805 = S[0x1]
0xcc7: V806 = 0x100
0xcca: V807 = EXP 0x100 0x2
0xccc: V808 = DIV V805 0x10000
0xccd: V809 = 0xffffffffffffffffffffffffffffffffffffffff
0xce2: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V808
0xce3: V811 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf8: V812 = AND 0xffffffffffffffffffffffffffffffffffffffff V810
0xcf9: V813 = 0x8fc
0xcff: V814 = ISZERO V685
0xd00: V815 = MUL V814 0x8fc
0xd02: V816 = 0x40
0xd04: V817 = M[0x40]
0xd05: V818 = 0x0
0xd07: V819 = 0x40
0xd09: V820 = M[0x40]
0xd0c: V821 = SUB V817 V820
0xd11: V822 = CALL V815 V812 V685 V820 V821 V820 0x0
0xd17: V823 = ISZERO V822
0xd18: V824 = ISZERO V823
0xd19: V825 = 0xd21
0xd1c: JUMPI 0xd21 V824
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685, V732, V744, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V685]

================================

Block 0xd1d
[0xd1d:0xd20]
---
Predecessors: [0xb8e]
Successors: []
---
0xd1d PUSH1 0x0
0xd1f DUP1
0xd20 REVERT
---
0xd1d: V826 = 0x0
0xd20: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]

================================

Block 0xd21
[0xd21:0xd5e]
---
Predecessors: [0xb8e]
Successors: [0xd5f, 0xd63]
---
0xd21 JUMPDEST
0xd22 DUP10
0xd23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd38 AND
0xd39 PUSH2 0x8fc
0xd3c DUP3
0xd3d DUP6
0xd3e SUB
0xd3f SWAP1
0xd40 DUP2
0xd41 ISZERO
0xd42 MUL
0xd43 SWAP1
0xd44 PUSH1 0x40
0xd46 MLOAD
0xd47 PUSH1 0x0
0xd49 PUSH1 0x40
0xd4b MLOAD
0xd4c DUP1
0xd4d DUP4
0xd4e SUB
0xd4f DUP2
0xd50 DUP6
0xd51 DUP9
0xd52 DUP9
0xd53 CALL
0xd54 SWAP4
0xd55 POP
0xd56 POP
0xd57 POP
0xd58 POP
0xd59 ISZERO
0xd5a ISZERO
0xd5b PUSH2 0xd63
0xd5e JUMPI
---
0xd21: JUMPDEST 
0xd23: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xd38: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xd39: V829 = 0x8fc
0xd3e: V830 = SUB S2 V685
0xd41: V831 = ISZERO V830
0xd42: V832 = MUL V831 0x8fc
0xd44: V833 = 0x40
0xd46: V834 = M[0x40]
0xd47: V835 = 0x0
0xd49: V836 = 0x40
0xd4b: V837 = M[0x40]
0xd4e: V838 = SUB V834 V837
0xd53: V839 = CALL V832 V828 V830 V837 V838 V837 0x0
0xd59: V840 = ISZERO V839
0xd5a: V841 = ISZERO V840
0xd5b: V842 = 0xd63
0xd5e: JUMPI 0xd63 V841
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]

================================

Block 0xd5f
[0xd5f:0xd62]
---
Predecessors: [0xd21]
Successors: []
---
0xd5f PUSH1 0x0
0xd61 DUP1
0xd62 REVERT
---
0xd5f: V843 = 0x0
0xd62: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]

================================

Block 0xd63
[0xd63:0xd6c]
---
Predecessors: [0xd21]
Successors: [0xd6d, 0xdad]
---
0xd63 JUMPDEST
0xd64 PUSH1 0x0
0xd66 DUP6
0xd67 GT
0xd68 ISZERO
0xd69 PUSH2 0xdad
0xd6c JUMPI
---
0xd63: JUMPDEST 
0xd64: V844 = 0x0
0xd67: V845 = GT S4 0x0
0xd68: V846 = ISZERO V845
0xd69: V847 = 0xdad
0xd6c: JUMPI 0xdad V846
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]

================================

Block 0xd6d
[0xd6d:0xda7]
---
Predecessors: [0xd63]
Successors: [0xda8, 0xdac]
---
0xd6d CALLER
0xd6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd83 AND
0xd84 PUSH2 0x8fc
0xd87 DUP7
0xd88 SWAP1
0xd89 DUP2
0xd8a ISZERO
0xd8b MUL
0xd8c SWAP1
0xd8d PUSH1 0x40
0xd8f MLOAD
0xd90 PUSH1 0x0
0xd92 PUSH1 0x40
0xd94 MLOAD
0xd95 DUP1
0xd96 DUP4
0xd97 SUB
0xd98 DUP2
0xd99 DUP6
0xd9a DUP9
0xd9b DUP9
0xd9c CALL
0xd9d SWAP4
0xd9e POP
0xd9f POP
0xda0 POP
0xda1 POP
0xda2 ISZERO
0xda3 ISZERO
0xda4 PUSH2 0xdac
0xda7 JUMPI
---
0xd6d: V848 = CALLER
0xd6e: V849 = 0xffffffffffffffffffffffffffffffffffffffff
0xd83: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0xd84: V851 = 0x8fc
0xd8a: V852 = ISZERO S4
0xd8b: V853 = MUL V852 0x8fc
0xd8d: V854 = 0x40
0xd8f: V855 = M[0x40]
0xd90: V856 = 0x0
0xd92: V857 = 0x40
0xd94: V858 = M[0x40]
0xd97: V859 = SUB V855 V858
0xd9c: V860 = CALL V853 V850 S4 V858 V859 V858 0x0
0xda2: V861 = ISZERO V860
0xda3: V862 = ISZERO V861
0xda4: V863 = 0xdac
0xda7: JUMPI 0xdac V862
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]

================================

Block 0xda8
[0xda8:0xdab]
---
Predecessors: [0xd6d]
Successors: []
---
0xda8 PUSH1 0x0
0xdaa DUP1
0xdab REVERT
---
0xda8: V864 = 0x0
0xdab: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]

================================

Block 0xdac
[0xdac:0xdac]
---
Predecessors: [0xd6d]
Successors: [0xdad]
---
0xdac JUMPDEST
---
0xdac: JUMPDEST 
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]

================================

Block 0xdad
[0xdad:0xdf7]
---
Predecessors: [0xd63, 0xdac]
Successors: [0xeb1]
---
0xdad JUMPDEST
0xdae PUSH2 0xdf8
0xdb1 DUP11
0xdb2 DUP4
0xdb3 PUSH1 0x2
0xdb5 PUSH1 0x0
0xdb7 DUP15
0xdb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcd AND
0xdce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde3 AND
0xde4 DUP2
0xde5 MSTORE
0xde6 PUSH1 0x20
0xde8 ADD
0xde9 SWAP1
0xdea DUP2
0xdeb MSTORE
0xdec PUSH1 0x20
0xdee ADD
0xdef PUSH1 0x0
0xdf1 SHA3
0xdf2 SLOAD
0xdf3 ADD
0xdf4 PUSH2 0xeb1
0xdf7 JUMP
---
0xdad: JUMPDEST 
0xdae: V865 = 0xdf8
0xdb3: V866 = 0x2
0xdb5: V867 = 0x0
0xdb8: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcd: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xdce: V870 = 0xffffffffffffffffffffffffffffffffffffffff
0xde3: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0xde5: M[0x0] = V871
0xde6: V872 = 0x20
0xde8: V873 = ADD 0x20 0x0
0xdeb: M[0x20] = 0x2
0xdec: V874 = 0x20
0xdee: V875 = ADD 0x20 0x20
0xdef: V876 = 0x0
0xdf1: V877 = SHA3 0x0 0x40
0xdf2: V878 = S[V877]
0xdf3: V879 = ADD V878 S1
0xdf4: V880 = 0xeb1
0xdf7: JUMP 0xeb1
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xdf8, S9, V879]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V685, 0xdf8, S9, V879]

================================

Block 0xdf8
[0xdf8:0xe42]
---
Predecessors: [0x86c, 0xfdd]
Successors: [0x10b8]
---
0xdf8 JUMPDEST
0xdf9 PUSH1 0x0
0xdfb PUSH2 0xe43
0xdfe PUSH1 0x2
0xe00 PUSH1 0x0
0xe02 CALLER
0xe03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe18 AND
0xe19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2e AND
0xe2f DUP2
0xe30 MSTORE
0xe31 PUSH1 0x20
0xe33 ADD
0xe34 SWAP1
0xe35 DUP2
0xe36 MSTORE
0xe37 PUSH1 0x20
0xe39 ADD
0xe3a PUSH1 0x0
0xe3c SHA3
0xe3d SLOAD
0xe3e DUP5
0xe3f PUSH2 0x10b8
0xe42 JUMP
---
0xdf8: JUMPDEST 
0xdf9: V881 = 0x0
0xdfb: V882 = 0xe43
0xdfe: V883 = 0x2
0xe00: V884 = 0x0
0xe02: V885 = CALLER
0xe03: V886 = 0xffffffffffffffffffffffffffffffffffffffff
0xe18: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0xe19: V888 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2e: V889 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xe30: M[0x0] = V889
0xe31: V890 = 0x20
0xe33: V891 = ADD 0x20 0x0
0xe36: M[0x20] = 0x2
0xe37: V892 = 0x20
0xe39: V893 = ADD 0x20 0x20
0xe3a: V894 = 0x0
0xe3c: V895 = SHA3 0x0 0x40
0xe3d: V896 = S[V895]
0xe3f: V897 = 0x10b8
0xe42: JUMP 0x10b8
---
Entry stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xe43, V896, S1]
Exit stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0xe43, V896, S1]

================================

Block 0xe43
[0xe43:0xe49]
---
Predecessors: [0x10c6]
Successors: [0xe4a, 0xe99]
---
0xe43 JUMPDEST
0xe44 GT
0xe45 ISZERO
0xe46 PUSH2 0xe99
0xe49 JUMPI
---
0xe43: JUMPDEST 
0xe44: V898 = GT V1039 S1
0xe45: V899 = ISZERO V898
0xe46: V900 = 0xe99
0xe49: JUMPI 0xe99 V899
---
Entry stack: [V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1039]
Stack pops: 2
Stack additions: []
Exit stack: [V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xe4a
[0xe4a:0xe93]
---
Predecessors: [0xe43]
Successors: [0xeb1]
---
0xe4a PUSH2 0xe94
0xe4d CALLER
0xe4e DUP4
0xe4f PUSH1 0x2
0xe51 PUSH1 0x0
0xe53 CALLER
0xe54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe69 AND
0xe6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7f AND
0xe80 DUP2
0xe81 MSTORE
0xe82 PUSH1 0x20
0xe84 ADD
0xe85 SWAP1
0xe86 DUP2
0xe87 MSTORE
0xe88 PUSH1 0x20
0xe8a ADD
0xe8b PUSH1 0x0
0xe8d SHA3
0xe8e SLOAD
0xe8f SUB
0xe90 PUSH2 0xeb1
0xe93 JUMP
---
0xe4a: V901 = 0xe94
0xe4d: V902 = CALLER
0xe4f: V903 = 0x2
0xe51: V904 = 0x0
0xe53: V905 = CALLER
0xe54: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0xe69: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0xe6a: V908 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7f: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V907
0xe81: M[0x0] = V909
0xe82: V910 = 0x20
0xe84: V911 = ADD 0x20 0x0
0xe87: M[0x20] = 0x2
0xe88: V912 = 0x20
0xe8a: V913 = ADD 0x20 0x20
0xe8b: V914 = 0x0
0xe8d: V915 = SHA3 0x0 0x40
0xe8e: V916 = S[V915]
0xe8f: V917 = SUB V916 S1
0xe90: V918 = 0xeb1
0xe93: JUMP 0xeb1
---
Entry stack: [V283, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xe94, V902, V917]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xe94, V902, V917]

================================

Block 0xe94
[0xe94:0xe98]
---
Predecessors: [0x86c, 0xfdd]
Successors: [0xea5]
---
0xe94 JUMPDEST
0xe95 PUSH2 0xea5
0xe98 JUMP
---
0xe94: JUMPDEST 
0xe95: V919 = 0xea5
0xe98: JUMP 0xea5
---
Entry stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe99
[0xe99:0xea3]
---
Predecessors: [0xe43]
Successors: [0xeb1]
---
0xe99 JUMPDEST
0xe9a PUSH2 0xea4
0xe9d CALLER
0xe9e PUSH1 0x0
0xea0 PUSH2 0xeb1
0xea3 JUMP
---
0xe99: JUMPDEST 
0xe9a: V920 = 0xea4
0xe9d: V921 = CALLER
0xe9e: V922 = 0x0
0xea0: V923 = 0xeb1
0xea3: JUMP 0xeb1
---
Entry stack: [V283, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xea4, V921, 0x0]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xea4, V921, 0x0]

================================

Block 0xea4
[0xea4:0xea4]
---
Predecessors: [0x86c, 0xfdd]
Successors: [0xea5]
---
0xea4 JUMPDEST
---
0xea4: JUMPDEST 
---
Entry stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xea5
[0xea5:0xeb0]
---
Predecessors: [0xe94, 0xea4]
Successors: [0x42d, 0xa3c]
---
0xea5 JUMPDEST
0xea6 POP
0xea7 POP
0xea8 POP
0xea9 POP
0xeaa POP
0xeab POP
0xeac POP
0xead POP
0xeae POP
0xeaf POP
0xeb0 JUMP
---
0xea5: JUMPDEST 
0xeb0: JUMP S10
---
Entry stack: [V11, S15, V283, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: []
Exit stack: [V11, S15, V283, S13, S12, S11]

================================

Block 0xeb1
[0xeb1:0xebc]
---
Predecessors: [0x5b6, 0xdad, 0xe4a, 0xe99]
Successors: [0xfe2]
---
0xeb1 JUMPDEST
0xeb2 PUSH1 0x0
0xeb4 PUSH2 0xebd
0xeb7 DUP4
0xeb8 DUP4
0xeb9 PUSH2 0xfe2
0xebc JUMP
---
0xeb1: JUMPDEST 
0xeb2: V924 = 0x0
0xeb4: V925 = 0xebd
0xeb9: V926 = 0xfe2
0xebc: JUMP 0xfe2
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x5ff, 0xdf8, 0xe94, 0xea4}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xebd, S1, S0]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x5ff, 0xdf8, 0xe94, 0xea4}, S1, S0, 0x0, 0xebd, S1, S0]

================================

Block 0xebd
[0xebd:0xeee]
---
Predecessors: [0x1075]
Successors: [0x10b8]
---
0xebd JUMPDEST
0xebe SWAP1
0xebf POP
0xec0 DUP1
0xec1 PUSH1 0x0
0xec3 SLOAD
0xec4 ADD
0xec5 PUSH1 0x0
0xec7 DUP2
0xec8 SWAP1
0xec9 SSTORE
0xeca POP
0xecb PUSH2 0xeef
0xece ADDRESS
0xecf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee4 AND
0xee5 BALANCE
0xee6 PUSH1 0x0
0xee8 SLOAD
0xee9 ADD
0xeea DUP3
0xeeb PUSH2 0x10b8
0xeee JUMP
---
0xebd: JUMPDEST 
0xec1: V927 = 0x0
0xec3: V928 = S[0x0]
0xec4: V929 = ADD V928 S0
0xec5: V930 = 0x0
0xec9: S[0x0] = V929
0xecb: V931 = 0xeef
0xece: V932 = ADDRESS
0xecf: V933 = 0xffffffffffffffffffffffffffffffffffffffff
0xee4: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V932
0xee5: V935 = BALANCE V934
0xee6: V936 = 0x0
0xee8: V937 = S[0x0]
0xee9: V938 = ADD V937 V935
0xeeb: V939 = 0x10b8
0xeee: JUMP 0x10b8
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, 0xeef, V938, S0]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, 0xeef, V938, S0]

================================

Block 0xeef
[0xeef:0xfd8]
---
Predecessors: [0x10c6]
Successors: [0xfd9, 0xfdd]
---
0xeef JUMPDEST
0xef0 PUSH1 0x3
0xef2 PUSH1 0x0
0xef4 DUP6
0xef5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0a AND
0xf0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf20 AND
0xf21 DUP2
0xf22 MSTORE
0xf23 PUSH1 0x20
0xf25 ADD
0xf26 SWAP1
0xf27 DUP2
0xf28 MSTORE
0xf29 PUSH1 0x20
0xf2b ADD
0xf2c PUSH1 0x0
0xf2e SHA3
0xf2f DUP2
0xf30 SWAP1
0xf31 SSTORE
0xf32 POP
0xf33 PUSH32 0x3b5511cfaf31abd24b70d4a55b2790df9745bf42ca00326fcf90a6f5df7303d6
0xf54 DUP4
0xf55 DUP3
0xf56 PUSH1 0x40
0xf58 MLOAD
0xf59 DUP1
0xf5a DUP4
0xf5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf70 AND
0xf71 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf86 AND
0xf87 DUP2
0xf88 MSTORE
0xf89 PUSH1 0x20
0xf8b ADD
0xf8c DUP3
0xf8d DUP2
0xf8e MSTORE
0xf8f PUSH1 0x20
0xf91 ADD
0xf92 SWAP3
0xf93 POP
0xf94 POP
0xf95 POP
0xf96 PUSH1 0x40
0xf98 MLOAD
0xf99 DUP1
0xf9a SWAP2
0xf9b SUB
0xf9c SWAP1
0xf9d LOG1
0xf9e DUP3
0xf9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb4 AND
0xfb5 PUSH2 0x8fc
0xfb8 DUP3
0xfb9 SWAP1
0xfba DUP2
0xfbb ISZERO
0xfbc MUL
0xfbd SWAP1
0xfbe PUSH1 0x40
0xfc0 MLOAD
0xfc1 PUSH1 0x0
0xfc3 PUSH1 0x40
0xfc5 MLOAD
0xfc6 DUP1
0xfc7 DUP4
0xfc8 SUB
0xfc9 DUP2
0xfca DUP6
0xfcb DUP9
0xfcc DUP9
0xfcd CALL
0xfce SWAP4
0xfcf POP
0xfd0 POP
0xfd1 POP
0xfd2 POP
0xfd3 ISZERO
0xfd4 ISZERO
0xfd5 PUSH2 0xfdd
0xfd8 JUMPI
---
0xeef: JUMPDEST 
0xef0: V940 = 0x3
0xef2: V941 = 0x0
0xef5: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0a: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf0b: V944 = 0xffffffffffffffffffffffffffffffffffffffff
0xf20: V945 = AND 0xffffffffffffffffffffffffffffffffffffffff V943
0xf22: M[0x0] = V945
0xf23: V946 = 0x20
0xf25: V947 = ADD 0x20 0x0
0xf28: M[0x20] = 0x3
0xf29: V948 = 0x20
0xf2b: V949 = ADD 0x20 0x20
0xf2c: V950 = 0x0
0xf2e: V951 = SHA3 0x0 0x40
0xf31: S[V951] = V1039
0xf33: V952 = 0x3b5511cfaf31abd24b70d4a55b2790df9745bf42ca00326fcf90a6f5df7303d6
0xf56: V953 = 0x40
0xf58: V954 = M[0x40]
0xf5b: V955 = 0xffffffffffffffffffffffffffffffffffffffff
0xf70: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf71: V957 = 0xffffffffffffffffffffffffffffffffffffffff
0xf86: V958 = AND 0xffffffffffffffffffffffffffffffffffffffff V956
0xf88: M[V954] = V958
0xf89: V959 = 0x20
0xf8b: V960 = ADD 0x20 V954
0xf8e: M[V960] = S1
0xf8f: V961 = 0x20
0xf91: V962 = ADD 0x20 V960
0xf96: V963 = 0x40
0xf98: V964 = M[0x40]
0xf9b: V965 = SUB V962 V964
0xf9d: LOG V964 V965 0x3b5511cfaf31abd24b70d4a55b2790df9745bf42ca00326fcf90a6f5df7303d6
0xf9f: V966 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb4: V967 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xfb5: V968 = 0x8fc
0xfbb: V969 = ISZERO S1
0xfbc: V970 = MUL V969 0x8fc
0xfbe: V971 = 0x40
0xfc0: V972 = M[0x40]
0xfc1: V973 = 0x0
0xfc3: V974 = 0x40
0xfc5: V975 = M[0x40]
0xfc8: V976 = SUB V972 V975
0xfcd: V977 = CALL V970 V967 S1 V975 V976 V975 0x0
0xfd3: V978 = ISZERO V977
0xfd4: V979 = ISZERO V978
0xfd5: V980 = 0xfdd
0xfd8: JUMPI 0xfdd V979
---
Entry stack: [V11, S20, V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1039]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V11, S20, V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xfd9
[0xfd9:0xfdc]
---
Predecessors: [0xeef]
Successors: []
---
0xfd9 PUSH1 0x0
0xfdb DUP1
0xfdc REVERT
---
0xfd9: V981 = 0x0
0xfdc: REVERT 0x0 0x0
---
Entry stack: [V11, S19, V283, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, V283, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfdd
[0xfdd:0xfe1]
---
Predecessors: [0xeef]
Successors: [0x1b6, 0x363, 0x42d, 0x5ff, 0xa3c, 0xdf8, 0xe94, 0xea4]
---
0xfdd JUMPDEST
0xfde POP
0xfdf POP
0xfe0 POP
0xfe1 JUMP
---
0xfdd: JUMPDEST 
0xfe1: JUMP S3
---
Entry stack: [V11, S19, V283, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S19, V283, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0xfe2
[0xfe2:0xfef]
---
Predecessors: [0x85f, 0xeb1]
Successors: [0xff0, 0xff8]
---
0xfe2 JUMPDEST
0xfe3 PUSH1 0x0
0xfe5 DUP1
0xfe6 PUSH1 0x0
0xfe8 DUP1
0xfe9 DUP5
0xfea EQ
0xfeb ISZERO
0xfec PUSH2 0xff8
0xfef JUMPI
---
0xfe2: JUMPDEST 
0xfe3: V982 = 0x0
0xfe6: V983 = 0x0
0xfea: V984 = EQ S0 0x0
0xfeb: V985 = ISZERO V984
0xfec: V986 = 0xff8
0xfef: JUMPI 0xff8 V985
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x363, 0x5ff, 0xdf8, 0xe94, 0xea4}, S5, S4, S3, {0x869, 0xebd}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x363, 0x5ff, 0xdf8, 0xe94, 0xea4}, S5, S4, S3, {0x869, 0xebd}, S1, S0, 0x0, 0x0, 0x0]

================================

Block 0xff0
[0xff0:0xff7]
---
Predecessors: [0xfe2]
Successors: [0x1075]
---
0xff0 PUSH1 0x0
0xff2 SWAP3
0xff3 POP
0xff4 PUSH2 0x1075
0xff7 JUMP
---
0xff0: V987 = 0x0
0xff4: V988 = 0x1075
0xff7: JUMP 0x1075
---
Entry stack: [V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x363, 0x5ff, 0xdf8, 0xe94, 0xea4}, S8, S7, S6, {0x869, 0xebd}, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x363, 0x5ff, 0xdf8, 0xe94, 0xea4}, S8, S7, S6, {0x869, 0xebd}, S4, S3, 0x0, 0x0, 0x0]

================================

Block 0xff8
[0xff8:0x105e]
---
Predecessors: [0xfe2]
Successors: [0x10b8]
---
0xff8 JUMPDEST
0xff9 PUSH1 0x0
0xffb SLOAD
0xffc ADDRESS
0xffd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1012 AND
0x1013 BALANCE
0x1014 ADD
0x1015 SWAP2
0x1016 POP
0x1017 PUSH2 0x105f
0x101a DUP3
0x101b PUSH1 0x3
0x101d PUSH1 0x0
0x101f DUP9
0x1020 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1035 AND
0x1036 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104b AND
0x104c DUP2
0x104d MSTORE
0x104e PUSH1 0x20
0x1050 ADD
0x1051 SWAP1
0x1052 DUP2
0x1053 MSTORE
0x1054 PUSH1 0x20
0x1056 ADD
0x1057 PUSH1 0x0
0x1059 SHA3
0x105a SLOAD
0x105b PUSH2 0x10b8
0x105e JUMP
---
0xff8: JUMPDEST 
0xff9: V989 = 0x0
0xffb: V990 = S[0x0]
0xffc: V991 = ADDRESS
0xffd: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0x1012: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0x1013: V994 = BALANCE V993
0x1014: V995 = ADD V994 V990
0x1017: V996 = 0x105f
0x101b: V997 = 0x3
0x101d: V998 = 0x0
0x1020: V999 = 0xffffffffffffffffffffffffffffffffffffffff
0x1035: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1036: V1001 = 0xffffffffffffffffffffffffffffffffffffffff
0x104b: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff V1000
0x104d: M[0x0] = V1002
0x104e: V1003 = 0x20
0x1050: V1004 = ADD 0x20 0x0
0x1053: M[0x20] = 0x3
0x1054: V1005 = 0x20
0x1056: V1006 = ADD 0x20 0x20
0x1057: V1007 = 0x0
0x1059: V1008 = SHA3 0x0 0x40
0x105a: V1009 = S[V1008]
0x105b: V1010 = 0x10b8
0x105e: JUMP 0x10b8
---
Entry stack: [V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x363, 0x5ff, 0xdf8, 0xe94, 0xea4}, S8, S7, S6, {0x869, 0xebd}, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, V995, S0, 0x105f, V995, V1009]
Exit stack: [V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x363, 0x5ff, 0xdf8, 0xe94, 0xea4}, S8, S7, S6, {0x869, 0xebd}, S4, S3, 0x0, V995, 0x0, 0x105f, V995, V1009]

================================

Block 0x105f
[0x105f:0x106f]
---
Predecessors: [0x10c6]
Successors: [0x1070, 0x1071]
---
0x105f JUMPDEST
0x1060 SWAP1
0x1061 POP
0x1062 PUSH3 0x989680
0x1066 DUP5
0x1067 DUP3
0x1068 MUL
0x1069 DUP2
0x106a ISZERO
0x106b ISZERO
0x106c PUSH2 0x1071
0x106f JUMPI
---
0x105f: JUMPDEST 
0x1062: V1011 = 0x989680
0x1068: V1012 = MUL V1039 S4
0x106a: V1013 = ISZERO 0x989680
0x106b: V1014 = ISZERO 0x0
0x106c: V1015 = 0x1071
0x106f: JUMPI 0x1071 0x1
---
Entry stack: [V11, S20, V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1039]
Stack pops: 5
Stack additions: [S4, S3, S2, S0, 0x989680, V1012]
Exit stack: [V11, S20, V283, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1039, 0x989680, V1012]

================================

Block 0x1070
[0x1070:0x1070]
---
Predecessors: [0x105f]
Successors: []
---
0x1070 INVALID
---
0x1070: INVALID 
---
Entry stack: [V11, S21, V283, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1039, 0x989680, V1012]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S21, V283, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1039, 0x989680, V1012]

================================

Block 0x1071
[0x1071:0x1074]
---
Predecessors: [0x105f]
Successors: [0x1075]
---
0x1071 JUMPDEST
0x1072 DIV
0x1073 SWAP3
0x1074 POP
---
0x1071: JUMPDEST 
0x1072: V1016 = DIV V1012 0x989680
---
Entry stack: [V11, S21, V283, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1039, 0x989680, V1012]
Stack pops: 5
Stack additions: [V1016, S3, S2]
Exit stack: [V11, S21, V283, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1016, S3, V1039]

================================

Block 0x1075
[0x1075:0x107c]
---
Predecessors: [0xff0, 0x1071]
Successors: [0x1b6, 0x42d, 0x869, 0xa3c, 0xebd]
---
0x1075 JUMPDEST
0x1076 POP
0x1077 POP
0x1078 SWAP3
0x1079 SWAP2
0x107a POP
0x107b POP
0x107c JUMP
---
0x1075: JUMPDEST 
0x107c: JUMP S5
---
Entry stack: [V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S2]

================================

Block 0x107d
[0x107d:0x1089]
---
Predecessors: [0x9cd, 0xa09, 0xa1c, 0xa3c]
Successors: [0x108a, 0x1092]
---
0x107d JUMPDEST
0x107e PUSH1 0x0
0x1080 DUP1
0x1081 PUSH1 0x0
0x1083 DUP5
0x1084 EQ
0x1085 ISZERO
0x1086 PUSH2 0x1092
0x1089 JUMPI
---
0x107d: JUMPDEST 
0x107e: V1017 = 0x0
0x1081: V1018 = 0x0
0x1084: V1019 = EQ S1 0x0
0x1085: V1020 = ISZERO V1019
0x1086: V1021 = 0x1092
0x1089: JUMPI 0x1092 V1020
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x9d7, 0xa17, 0xa32, 0xa5f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x9d7, 0xa17, 0xa32, 0xa5f}, S1, S0, 0x0, 0x0]

================================

Block 0x108a
[0x108a:0x1091]
---
Predecessors: [0x107d]
Successors: [0x10b1]
---
0x108a PUSH1 0x0
0x108c SWAP2
0x108d POP
0x108e PUSH2 0x10b1
0x1091 JUMP
---
0x108a: V1022 = 0x0
0x108e: V1023 = 0x10b1
0x1091: JUMP 0x10b1
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, 0x0, 0x0]

================================

Block 0x1092
[0x1092:0x10a1]
---
Predecessors: [0x107d]
Successors: [0x10a2, 0x10a3]
---
0x1092 JUMPDEST
0x1093 DUP3
0x1094 DUP5
0x1095 MUL
0x1096 SWAP1
0x1097 POP
0x1098 DUP3
0x1099 DUP5
0x109a DUP3
0x109b DUP2
0x109c ISZERO
0x109d ISZERO
0x109e PUSH2 0x10a3
0x10a1 JUMPI
---
0x1092: JUMPDEST 
0x1095: V1024 = MUL S3 S2
0x109c: V1025 = ISZERO S3
0x109d: V1026 = ISZERO V1025
0x109e: V1027 = 0x10a3
0x10a1: JUMPI 0x10a3 V1026
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1024, S2, S3, V1024]
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, 0x0, V1024, S2, S3, V1024]

================================

Block 0x10a2
[0x10a2:0x10a2]
---
Predecessors: [0x1092]
Successors: []
---
0x10a2 INVALID
---
0x10a2: INVALID 
---
Entry stack: [V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9d7, 0xa17, 0xa32, 0xa5f}, S6, S5, 0x0, V1024, S2, S1, V1024]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9d7, 0xa17, 0xa32, 0xa5f}, S6, S5, 0x0, V1024, S2, S1, V1024]

================================

Block 0x10a3
[0x10a3:0x10ab]
---
Predecessors: [0x1092]
Successors: [0x10ac, 0x10ad]
---
0x10a3 JUMPDEST
0x10a4 DIV
0x10a5 EQ
0x10a6 ISZERO
0x10a7 ISZERO
0x10a8 PUSH2 0x10ad
0x10ab JUMPI
---
0x10a3: JUMPDEST 
0x10a4: V1028 = DIV V1024 S1
0x10a5: V1029 = EQ V1028 S2
0x10a6: V1030 = ISZERO V1029
0x10a7: V1031 = ISZERO V1030
0x10a8: V1032 = 0x10ad
0x10ab: JUMPI 0x10ad V1031
---
Entry stack: [V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9d7, 0xa17, 0xa32, 0xa5f}, S6, S5, 0x0, V1024, S2, S1, V1024]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9d7, 0xa17, 0xa32, 0xa5f}, S6, S5, 0x0, V1024]

================================

Block 0x10ac
[0x10ac:0x10ac]
---
Predecessors: [0x10a3]
Successors: []
---
0x10ac INVALID
---
0x10ac: INVALID 
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, 0x0, S0]

================================

Block 0x10ad
[0x10ad:0x10b0]
---
Predecessors: [0x10a3]
Successors: [0x10b1]
---
0x10ad JUMPDEST
0x10ae DUP1
0x10af SWAP2
0x10b0 POP
---
0x10ad: JUMPDEST 
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, S0, S0]

================================

Block 0x10b1
[0x10b1:0x10b7]
---
Predecessors: [0x108a, 0x10ad]
Successors: [0x9d7, 0xa17, 0xa32, 0xa5f]
---
0x10b1 JUMPDEST
0x10b2 POP
0x10b3 SWAP3
0x10b4 SWAP2
0x10b5 POP
0x10b6 POP
0x10b7 JUMP
---
0x10b1: JUMPDEST 
0x10b7: JUMP {0x9d7, 0xa17, 0xa32, 0xa5f}
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9d7, 0xa17, 0xa32, 0xa5f}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x10b8
[0x10b8:0x10c4]
---
Predecessors: [0xa17, 0xa32, 0xa37, 0xdf8, 0xebd, 0xff8]
Successors: [0x10c5, 0x10c6]
---
0x10b8 JUMPDEST
0x10b9 PUSH1 0x0
0x10bb DUP3
0x10bc DUP3
0x10bd GT
0x10be ISZERO
0x10bf ISZERO
0x10c0 ISZERO
0x10c1 PUSH2 0x10c6
0x10c4 JUMPI
---
0x10b8: JUMPDEST 
0x10b9: V1033 = 0x0
0x10bd: V1034 = GT S0 S1
0x10be: V1035 = ISZERO V1034
0x10bf: V1036 = ISZERO V1035
0x10c0: V1037 = ISZERO V1036
0x10c1: V1038 = 0x10c6
0x10c4: JUMPI 0x10c6 V1037
---
Entry stack: [V11, S22, V283, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S22, V283, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x10c5
[0x10c5:0x10c5]
---
Predecessors: [0x10b8]
Successors: []
---
0x10c5 INVALID
---
0x10c5: INVALID 
---
Entry stack: [V11, S23, V283, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S23, V283, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x10c6
[0x10c6:0x10d0]
---
Predecessors: [0x10b8]
Successors: [0x1b6, 0xa1c, 0xa37, 0xa3c, 0xe43, 0xeef, 0x105f]
---
0x10c6 JUMPDEST
0x10c7 DUP2
0x10c8 DUP4
0x10c9 SUB
0x10ca SWAP1
0x10cb POP
0x10cc SWAP3
0x10cd SWAP2
0x10ce POP
0x10cf POP
0x10d0 JUMP
---
0x10c6: JUMPDEST 
0x10c9: V1039 = SUB S2 S1
0x10d0: JUMP S3
---
Entry stack: [V11, S23, V283, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1039]
Exit stack: [V11, S23, V283, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1039]

================================

Block 0x10d1
[0x10d1:0x10dd]
---
Predecessors: [0x4c4]
Successors: [0x10de, 0x1100]
---
0x10d1 JUMPDEST
0x10d2 DUP3
0x10d3 PUSH1 0x2
0x10d5 DUP2
0x10d6 ADD
0x10d7 SWAP3
0x10d8 DUP3
0x10d9 ISZERO
0x10da PUSH2 0x1100
0x10dd JUMPI
---
0x10d1: JUMPDEST 
0x10d3: V1040 = 0x2
0x10d6: V1041 = ADD V340 0x2
0x10d9: V1042 = ISZERO 0x2
0x10da: V1043 = 0x1100
0x10dd: JUMPI 0x1100 0x0
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, V323, 0x2]
Stack pops: 3
Stack additions: [S2, V1041, S0, S2, S1]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, 0x2, V340, V323]

================================

Block 0x10de
[0x10de:0x10e3]
---
Predecessors: [0x10d1]
Successors: [0x10e4]
---
0x10de SWAP2
0x10df PUSH1 0x20
0x10e1 MUL
0x10e2 DUP3
0x10e3 ADD
---
0x10df: V1044 = 0x20
0x10e1: V1045 = MUL 0x20 0x2
0x10e3: V1046 = ADD V323 0x40
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, 0x2, V340, V323]
Stack pops: 3
Stack additions: [S0, S1, V1046]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, V323, V340, V1046]

================================

Block 0x10e4
[0x10e4:0x10ec]
---
Predecessors: [0x10de, 0x10ed]
Successors: [0x10ed, 0x10ff]
---
0x10e4 JUMPDEST
0x10e5 DUP3
0x10e6 DUP2
0x10e7 GT
0x10e8 ISZERO
0x10e9 PUSH2 0x10ff
0x10ec JUMPI
---
0x10e4: JUMPDEST 
0x10e7: V1047 = GT V1046 S2
0x10e8: V1048 = ISZERO V1047
0x10e9: V1049 = 0x10ff
0x10ec: JUMPI 0x10ff V1048
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, S2, S1, V1046]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, S2, S1, V1046]

================================

Block 0x10ed
[0x10ed:0x10fe]
---
Predecessors: [0x10e4]
Successors: [0x10e4]
---
0x10ed DUP3
0x10ee MLOAD
0x10ef DUP3
0x10f0 SSTORE
0x10f1 SWAP2
0x10f2 PUSH1 0x20
0x10f4 ADD
0x10f5 SWAP2
0x10f6 SWAP1
0x10f7 PUSH1 0x1
0x10f9 ADD
0x10fa SWAP1
0x10fb PUSH2 0x10e4
0x10fe JUMP
---
0x10ee: V1050 = M[S2]
0x10f0: S[S1] = V1050
0x10f2: V1051 = 0x20
0x10f4: V1052 = ADD 0x20 S2
0x10f7: V1053 = 0x1
0x10f9: V1054 = ADD 0x1 S1
0x10fb: V1055 = 0x10e4
0x10fe: JUMP 0x10e4
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, S2, S1, V1046]
Stack pops: 3
Stack additions: [V1052, V1054, S0]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, V1052, V1054, V1046]

================================

Block 0x10ff
[0x10ff:0x10ff]
---
Predecessors: [0x10e4]
Successors: [0x1100]
---
0x10ff JUMPDEST
---
0x10ff: JUMPDEST 
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, S2, S1, V1046]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, S2, S1, V1046]

================================

Block 0x1100
[0x1100:0x110c]
---
Predecessors: [0x10d1, 0x10ff]
Successors: [0x1111]
---
0x1100 JUMPDEST
0x1101 POP
0x1102 SWAP1
0x1103 POP
0x1104 PUSH2 0x110d
0x1107 SWAP2
0x1108 SWAP1
0x1109 PUSH2 0x1111
0x110c JUMP
---
0x1100: JUMPDEST 
0x1104: V1056 = 0x110d
0x1109: V1057 = 0x1111
0x110c: JUMP 0x1111
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, V1041, S2, S1, S0]
Stack pops: 4
Stack additions: [0x110d, S3, S1]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, V1041, S1]

================================

Block 0x110d
[0x110d:0x1110]
---
Predecessors: [0x1133]
Successors: [0x526]
---
0x110d JUMPDEST
0x110e POP
0x110f SWAP1
0x1110 JUMP
---
0x110d: JUMPDEST 
0x1110: JUMP 0x526
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, V1041]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x154, V82, V85, V340]

================================

Block 0x1111
[0x1111:0x1116]
---
Predecessors: [0x1100]
Successors: [0x1117]
---
0x1111 JUMPDEST
0x1112 PUSH2 0x1133
0x1115 SWAP2
0x1116 SWAP1
---
0x1111: JUMPDEST 
0x1112: V1058 = 0x1133
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, V1041, S0]
Stack pops: 2
Stack additions: [0x1133, S1, S0]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, 0x1133, V1041, S0]

================================

Block 0x1117
[0x1117:0x111f]
---
Predecessors: [0x1111, 0x1120]
Successors: [0x1120, 0x112f]
---
0x1117 JUMPDEST
0x1118 DUP1
0x1119 DUP3
0x111a GT
0x111b ISZERO
0x111c PUSH2 0x112f
0x111f JUMPI
---
0x1117: JUMPDEST 
0x111a: V1059 = GT V1041 S0
0x111b: V1060 = ISZERO V1059
0x111c: V1061 = 0x112f
0x111f: JUMPI 0x112f V1060
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, 0x1133, V1041, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, 0x1133, V1041, S0]

================================

Block 0x1120
[0x1120:0x112e]
---
Predecessors: [0x1117]
Successors: [0x1117]
---
0x1120 PUSH1 0x0
0x1122 DUP2
0x1123 PUSH1 0x0
0x1125 SWAP1
0x1126 SSTORE
0x1127 POP
0x1128 PUSH1 0x1
0x112a ADD
0x112b PUSH2 0x1117
0x112e JUMP
---
0x1120: V1062 = 0x0
0x1123: V1063 = 0x0
0x1126: S[S0] = 0x0
0x1128: V1064 = 0x1
0x112a: V1065 = ADD 0x1 S0
0x112b: V1066 = 0x1117
0x112e: JUMP 0x1117
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, 0x1133, V1041, S0]
Stack pops: 1
Stack additions: [V1065]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, 0x1133, V1041, V1065]

================================

Block 0x112f
[0x112f:0x1132]
---
Predecessors: [0x1117]
Successors: [0x1133]
---
0x112f JUMPDEST
0x1130 POP
0x1131 SWAP1
0x1132 JUMP
---
0x112f: JUMPDEST 
0x1132: JUMP 0x1133
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, 0x1133, V1041, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, V1041]

================================

Block 0x1133
[0x1133:0x1135]
---
Predecessors: [0x112f]
Successors: [0x110d]
---
0x1133 JUMPDEST
0x1134 SWAP1
0x1135 JUMP
---
0x1133: JUMPDEST 
0x1135: JUMP 0x110d
---
Entry stack: [V11, 0x154, V82, V85, 0x526, V340, 0x110d, V1041]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x154, V82, V85, 0x526, V340, V1041]

================================

Block 0x1136
[0x1136:0x1161]
---
Predecessors: []
Successors: []
---
0x1136 STOP
0x1137 LOG1
0x1138 PUSH6 0x627a7a723058
0x113f SHA3
0x1140 DIFFICULTY
0x1141 MISSING 0xdc
0x1142 SLT
0x1143 EXTCODECOPY
0x1144 PUSH29 0xc4541466e5bc183483a71e09aa6c3de956124d9de90e3d00b96a4d0029
---
0x1136: STOP 
0x1137: LOG S0 S1 S2
0x1138: V1067 = 0x627a7a723058
0x113f: V1068 = SHA3 0x627a7a723058 S3
0x1140: V1069 = DIFFICULTY
0x1141: MISSING 0xdc
0x1142: V1070 = SLT S0 S1
0x1143: EXTCODECOPY V1070 S2 S3 S4
0x1144: V1071 = 0xc4541466e5bc183483a71e09aa6c3de956124d9de90e3d00b96a4d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1069, V1068, 0xc4541466e5bc183483a71e09aa6c3de956124d9de90e3d00b96a4d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x9d0b12e
Entry block: 0xdd
Exit block: 0x114
Body: 0xdd, 0xe4, 0xe8, 0x114, 0x42f

Function 1:
Public function signature: 0x1bd983a4
Entry block: 0x12a
Exit block: 0x154
Body: 0x12a, 0x131, 0x135, 0x154, 0x478, 0x4c0, 0x4c4, 0x526, 0x10d1, 0x10de, 0x10e4, 0x10ed, 0x10ff, 0x1100, 0x110d, 0x1111, 0x1117, 0x1120, 0x112f, 0x1133

Function 2:
Public function signature: 0x50c28588
Entry block: 0x156
Exit block: 0x18d
Body: 0x156, 0x15d, 0x161, 0x18d, 0x59e

Function 3:
Public function signature: 0x57ea89b6
Entry block: 0x1a3
Exit block: 0x42d
Body: 0x1a3, 0x1aa, 0x1ae, 0x1b6, 0x42d, 0x5b6, 0x5ff

Function 4:
Public function signature: 0x5fbf79a2
Entry block: 0x1b8
Exit block: 0x1db
Body: 0x1b8, 0x1bf, 0x1c3, 0x1db, 0x601, 0x659, 0x65d

Function 5:
Public function signature: 0x6ea405d3
Entry block: 0x1dd
Exit block: 0x1f0
Body: 0x1dd, 0x1e4, 0x1e8, 0x1f0, 0x67a

Function 6:
Public function signature: 0x77f9c862
Entry block: 0x20e
Exit block: 0x245
Body: 0x20e, 0x215, 0x219, 0x245, 0x68e, 0x6dd, 0x6de, 0x72c, 0x72d

Function 7:
Public function signature: 0x852402ac
Entry block: 0x262
Exit block: 0x299
Body: 0x262, 0x269, 0x26d, 0x299, 0x738

Function 8:
Public function signature: 0x93275889
Entry block: 0x2af
Exit block: 0x2d4
Body: 0x2af, 0x2b6, 0x2ba, 0x2d4, 0x750, 0x761, 0x765, 0x7bd, 0x7c1

Function 9:
Public function signature: 0xa03286cd
Entry block: 0x2d6
Exit block: 0x316
Body: 0x2d6, 0x2dd, 0x2e1, 0x316, 0x7e1, 0x7fb, 0x7fc

Function 10:
Public function signature: 0xa2f6e5fb
Entry block: 0x32c
Exit block: 0x1b6
Body: 0x1b6, 0x32c, 0x333, 0x337, 0x808, 0x857, 0x85f, 0x869

Function 11:
Public function signature: 0xbb128575
Entry block: 0x379
Exit block: 0x38c
Body: 0x379, 0x380, 0x384, 0x38c, 0x872

Function 12:
Public function signature: 0xbea69bb9
Entry block: 0x3a6
Exit block: 0x3b9
Body: 0x3a6, 0x3ad, 0x3b1, 0x3b9, 0x885

Function 13:
Public function signature: 0xcb9580e0
Entry block: 0x3cf
Exit block: 0x3e2
Body: 0x3cf, 0x3d6, 0x3da, 0x3e2, 0x8a4

Function 14:
Public function signature: 0xe3d4187f
Entry block: 0x3f8
Exit block: 0x1b6
Body: 0x1b6, 0x3f8, 0x8aa, 0x8ce, 0x8d2, 0x909, 0x93a, 0x941, 0x945, 0x994, 0x995, 0x9a7, 0x9a8, 0x9b7, 0x9bb, 0x9c9, 0x9cd, 0x9d7, 0x9e5, 0x9ed, 0x9f7, 0x9f8, 0xa05, 0xa09, 0xa17

Function 15:
Public fallback function
Entry block: 0xdb
Exit block: 0xdb
Body: 0xdb

Function 16:
Private function
Entry block: 0xeb1
Exit block: 0xfdd
Body: 0x869, 0x86c, 0xa1c, 0xa32, 0xa37, 0xa3c, 0xa3c, 0xa3c, 0xa3c, 0xa5f, 0xa68, 0xb3e, 0xb8e, 0xd21, 0xd63, 0xd6d, 0xdac, 0xdad, 0xdad, 0xdf8, 0xe43, 0xe4a, 0xe94, 0xe99, 0xea4, 0xea5, 0xeb1, 0xebd, 0xeef, 0xfdd, 0x105f, 0x1071, 0x1075, 0x10b8, 0x10c6

Function 17:
Private function
Entry block: 0x107d
Exit block: 0x10b1
Body: 0x107d, 0x108a, 0x1092, 0x10a3, 0x10ad, 0x10b1

Function 18:
Private function
Entry block: 0xfe2
Exit block: 0x1075
Body: 0xa1c, 0xa32, 0xa37, 0xa3c, 0xa3c, 0xa3c, 0xa3c, 0xa5f, 0xa68, 0xb3e, 0xb8e, 0xd21, 0xd63, 0xd6d, 0xdac, 0xdad, 0xdad, 0xdf8, 0xe43, 0xe4a, 0xe94, 0xe99, 0xea4, 0xea5, 0xeef, 0xfdd, 0xfe2, 0xff0, 0xff8, 0x105f, 0x1071, 0x1075, 0x10b8, 0x10c6

