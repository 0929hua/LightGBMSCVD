Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x9cb8a26a
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x9cb8a26a
0x3c: V13 = EQ 0x9cb8a26a V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x71]
---
0x41 DUP1
0x42 PUSH4 0xb411ee94
0x47 EQ
0x48 PUSH2 0x71
0x4b JUMPI
---
0x42: V15 = 0xb411ee94
0x47: V16 = EQ 0xb411ee94 V11
0x48: V17 = 0x71
0x4b: JUMPI 0x71 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x52]
---
Predecessors: [0x0, 0x41]
Successors: [0x53, 0x57]
---
0x4c JUMPDEST
0x4d CALLVALUE
0x4e ISZERO
0x4f PUSH2 0x57
0x52 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = CALLVALUE
0x4e: V19 = ISZERO V18
0x4f: V20 = 0x57
0x52: JUMPI 0x57 V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x4c]
Successors: []
---
0x53 PUSH1 0x0
0x55 DUP1
0x56 REVERT
---
0x53: V21 = 0x0
0x56: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V23 = CALLVALUE
0x5e: V24 = ISZERO V23
0x5f: V25 = 0x67
0x62: JUMPI 0x67 V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V26 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0xea]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0xea
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V27 = 0x6f
0x6b: V28 = 0xea
0x6e: JUMP 0xea
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0x70]
---
Predecessors: [0x179]
Successors: []
---
0x6f JUMPDEST
0x70 STOP
---
0x6f: JUMPDEST 
0x70: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x77]
---
Predecessors: [0x41]
Successors: [0x78, 0x7c]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 ISZERO
0x74 PUSH2 0x7c
0x77 JUMPI
---
0x71: JUMPDEST 
0x72: V29 = CALLVALUE
0x73: V30 = ISZERO V29
0x74: V31 = 0x7c
0x77: JUMPI 0x7c V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7b]
---
Predecessors: [0x71]
Successors: []
---
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x78: V32 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0xcb]
---
Predecessors: [0x71]
Successors: [0x17b]
---
0x7c JUMPDEST
0x7d PUSH2 0xcc
0x80 PUSH1 0x4
0x82 DUP1
0x83 DUP1
0x84 CALLDATALOAD
0x85 SWAP1
0x86 PUSH1 0x20
0x88 ADD
0x89 SWAP1
0x8a DUP3
0x8b ADD
0x8c DUP1
0x8d CALLDATALOAD
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 DUP1
0x94 DUP1
0x95 PUSH1 0x1f
0x97 ADD
0x98 PUSH1 0x20
0x9a DUP1
0x9b SWAP2
0x9c DIV
0x9d MUL
0x9e PUSH1 0x20
0xa0 ADD
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 SWAP1
0xa5 DUP2
0xa6 ADD
0xa7 PUSH1 0x40
0xa9 MSTORE
0xaa DUP1
0xab SWAP4
0xac SWAP3
0xad SWAP2
0xae SWAP1
0xaf DUP2
0xb0 DUP2
0xb1 MSTORE
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 DUP4
0xb6 DUP4
0xb7 DUP1
0xb8 DUP3
0xb9 DUP5
0xba CALLDATACOPY
0xbb DUP3
0xbc ADD
0xbd SWAP2
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 SWAP2
0xc5 SWAP1
0xc6 POP
0xc7 POP
0xc8 PUSH2 0x17b
0xcb JUMP
---
0x7c: JUMPDEST 
0x7d: V33 = 0xcc
0x80: V34 = 0x4
0x84: V35 = CALLDATALOAD 0x4
0x86: V36 = 0x20
0x88: V37 = ADD 0x20 0x4
0x8b: V38 = ADD 0x4 V35
0x8d: V39 = CALLDATALOAD V38
0x8f: V40 = 0x20
0x91: V41 = ADD 0x20 V38
0x95: V42 = 0x1f
0x97: V43 = ADD 0x1f V39
0x98: V44 = 0x20
0x9c: V45 = DIV V43 0x20
0x9d: V46 = MUL V45 0x20
0x9e: V47 = 0x20
0xa0: V48 = ADD 0x20 V46
0xa1: V49 = 0x40
0xa3: V50 = M[0x40]
0xa6: V51 = ADD V50 V48
0xa7: V52 = 0x40
0xa9: M[0x40] = V51
0xb1: M[V50] = V39
0xb2: V53 = 0x20
0xb4: V54 = ADD 0x20 V50
0xba: CALLDATACOPY V54 V41 V39
0xbc: V55 = ADD V54 V39
0xc8: V56 = 0x17b
0xcb: JUMP 0x17b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcc, V50]
Exit stack: [V11, 0xcc, V50]

================================

Block 0xcc
[0xcc:0xe9]
---
Predecessors: [0x1b3]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 DUP3
0xd2 PUSH1 0x0
0xd4 NOT
0xd5 AND
0xd6 PUSH1 0x0
0xd8 NOT
0xd9 AND
0xda DUP2
0xdb MSTORE
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP2
0xe0 POP
0xe1 POP
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 SWAP2
0xe7 SUB
0xe8 SWAP1
0xe9 RETURN
---
0xcc: JUMPDEST 
0xcd: V57 = 0x40
0xcf: V58 = M[0x40]
0xd2: V59 = 0x0
0xd4: V60 = NOT 0x0
0xd5: V61 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V129
0xd6: V62 = 0x0
0xd8: V63 = NOT 0x0
0xd9: V64 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V61
0xdb: M[V58] = V64
0xdc: V65 = 0x20
0xde: V66 = ADD 0x20 V58
0xe2: V67 = 0x40
0xe4: V68 = M[0x40]
0xe7: V69 = SUB V66 V68
0xe9: RETURN V68 V69
---
Entry stack: [V11, V129]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xea
[0xea:0x13f]
---
Predecessors: [0x67]
Successors: [0x140, 0x179]
---
0xea JUMPDEST
0xeb PUSH1 0x0
0xed DUP1
0xee SWAP1
0xef SLOAD
0xf0 SWAP1
0xf1 PUSH2 0x100
0xf4 EXP
0xf5 SWAP1
0xf6 DIV
0xf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c AND
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 CALLER
0x124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139 AND
0x13a EQ
0x13b ISZERO
0x13c PUSH2 0x179
0x13f JUMPI
---
0xea: JUMPDEST 
0xeb: V70 = 0x0
0xef: V71 = S[0x0]
0xf1: V72 = 0x100
0xf4: V73 = EXP 0x100 0x0
0xf6: V74 = DIV V71 0x1
0xf7: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x10d: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x123: V79 = CALLER
0x124: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x139: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x13a: V82 = EQ V81 V78
0x13b: V83 = ISZERO V82
0x13c: V84 = 0x179
0x13f: JUMPI 0x179 V83
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x140
[0x140:0x178]
---
Predecessors: [0xea]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 SWAP1
0x144 SLOAD
0x145 SWAP1
0x146 PUSH2 0x100
0x149 EXP
0x14a SWAP1
0x14b DIV
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 AND
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 SELFDESTRUCT
---
0x140: V85 = 0x0
0x144: V86 = S[0x0]
0x146: V87 = 0x100
0x149: V88 = EXP 0x100 0x0
0x14b: V89 = DIV V86 0x1
0x14c: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x161: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x162: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x178: SELFDESTRUCT V93
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: [0xea]
Successors: [0x6f]
---
0x179 JUMPDEST
0x17a JUMP
---
0x179: JUMPDEST 
0x17a: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x17b
[0x17b:0x18d]
---
Predecessors: [0x7c]
Successors: [0x18e]
---
0x17b JUMPDEST
0x17c PUSH1 0x0
0x17e DUP2
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 DUP3
0x184 DUP1
0x185 MLOAD
0x186 SWAP1
0x187 PUSH1 0x20
0x189 ADD
0x18a SWAP1
0x18b DUP1
0x18c DUP4
0x18d DUP4
---
0x17b: JUMPDEST 
0x17c: V94 = 0x0
0x17f: V95 = 0x40
0x181: V96 = M[0x40]
0x185: V97 = M[V50]
0x187: V98 = 0x20
0x189: V99 = ADD 0x20 V50
---
Entry stack: [V11, 0xcc, V50]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V96, V96, V99, V97, V97, V96, V99]
Exit stack: [V11, 0xcc, V50, 0x0, V50, V96, V96, V99, V97, V97, V96, V99]

================================

Block 0x18e
[0x18e:0x198]
---
Predecessors: [0x17b, 0x199]
Successors: [0x199, 0x1b3]
---
0x18e JUMPDEST
0x18f PUSH1 0x20
0x191 DUP4
0x192 LT
0x193 ISZERO
0x194 ISZERO
0x195 PUSH2 0x1b3
0x198 JUMPI
---
0x18e: JUMPDEST 
0x18f: V100 = 0x20
0x192: V101 = LT S2 0x20
0x193: V102 = ISZERO V101
0x194: V103 = ISZERO V102
0x195: V104 = 0x1b3
0x198: JUMPI 0x1b3 V103
---
Entry stack: [V11, 0xcc, V50, 0x0, V50, V96, V96, V99, V97, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xcc, V50, 0x0, V50, V96, V96, V99, V97, S2, S1, S0]

================================

Block 0x199
[0x199:0x1b2]
---
Predecessors: [0x18e]
Successors: [0x18e]
---
0x199 DUP1
0x19a MLOAD
0x19b DUP3
0x19c MSTORE
0x19d PUSH1 0x20
0x19f DUP3
0x1a0 ADD
0x1a1 SWAP2
0x1a2 POP
0x1a3 PUSH1 0x20
0x1a5 DUP2
0x1a6 ADD
0x1a7 SWAP1
0x1a8 POP
0x1a9 PUSH1 0x20
0x1ab DUP4
0x1ac SUB
0x1ad SWAP3
0x1ae POP
0x1af PUSH2 0x18e
0x1b2 JUMP
---
0x19a: V105 = M[S0]
0x19c: M[S1] = V105
0x19d: V106 = 0x20
0x1a0: V107 = ADD S1 0x20
0x1a3: V108 = 0x20
0x1a6: V109 = ADD S0 0x20
0x1a9: V110 = 0x20
0x1ac: V111 = SUB S2 0x20
0x1af: V112 = 0x18e
0x1b2: JUMP 0x18e
---
Entry stack: [V11, 0xcc, V50, 0x0, V50, V96, V96, V99, V97, S2, S1, S0]
Stack pops: 3
Stack additions: [V111, V107, V109]
Exit stack: [V11, 0xcc, V50, 0x0, V50, V96, V96, V99, V97, V111, V107, V109]

================================

Block 0x1b3
[0x1b3:0x1e6]
---
Predecessors: [0x18e]
Successors: [0xcc]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x1
0x1b6 DUP4
0x1b7 PUSH1 0x20
0x1b9 SUB
0x1ba PUSH2 0x100
0x1bd EXP
0x1be SUB
0x1bf DUP1
0x1c0 NOT
0x1c1 DUP3
0x1c2 MLOAD
0x1c3 AND
0x1c4 DUP2
0x1c5 DUP5
0x1c6 MLOAD
0x1c7 AND
0x1c8 DUP1
0x1c9 DUP3
0x1ca OR
0x1cb DUP6
0x1cc MSTORE
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 SWAP1
0x1d4 POP
0x1d5 ADD
0x1d6 SWAP2
0x1d7 POP
0x1d8 POP
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd SWAP2
0x1de SUB
0x1df SWAP1
0x1e0 SHA3
0x1e1 SWAP1
0x1e2 POP
0x1e3 SWAP2
0x1e4 SWAP1
0x1e5 POP
0x1e6 JUMP
---
0x1b3: JUMPDEST 
0x1b4: V113 = 0x1
0x1b7: V114 = 0x20
0x1b9: V115 = SUB 0x20 S2
0x1ba: V116 = 0x100
0x1bd: V117 = EXP 0x100 V115
0x1be: V118 = SUB V117 0x1
0x1c0: V119 = NOT V118
0x1c2: V120 = M[S0]
0x1c3: V121 = AND V120 V119
0x1c6: V122 = M[S1]
0x1c7: V123 = AND V122 V118
0x1ca: V124 = OR V121 V123
0x1cc: M[S1] = V124
0x1d5: V125 = ADD V97 V96
0x1d9: V126 = 0x40
0x1db: V127 = M[0x40]
0x1de: V128 = SUB V125 V127
0x1e0: V129 = SHA3 V127 V128
0x1e6: JUMP 0xcc
---
Entry stack: [V11, 0xcc, V50, 0x0, V50, V96, V96, V99, V97, S2, S1, S0]
Stack pops: 11
Stack additions: [V129]
Exit stack: [V11, V129]

================================

Block 0x1e7
[0x1e7:0x212]
---
Predecessors: []
Successors: []
---
0x1e7 STOP
0x1e8 LOG1
0x1e9 PUSH6 0x627a7a723058
0x1f0 SHA3
0x1f1 MISSING 0x2e
0x1f2 RETURNDATASIZE
0x1f3 SWAP6
0x1f4 MISSING 0xc3
0x1f5 DUP1
0x1f6 MISSING 0xd8
0x1f7 MISSING 0xe4
0x1f8 PUSH17 0x89b68b6cfc9d998f90f4431a520a7d58a2
0x20a SELFDESTRUCT
0x20b MISSING 0xd4
0x20c MISSING 0x4a
0x20d DUP6
0x20e EXTCODEHASH
0x20f MISSING 0xd7
0x210 MISSING 0xde
0x211 STOP
0x212 MISSING 0x29
---
0x1e7: STOP 
0x1e8: LOG S0 S1 S2
0x1e9: V130 = 0x627a7a723058
0x1f0: V131 = SHA3 0x627a7a723058 S3
0x1f1: MISSING 0x2e
0x1f2: V132 = RETURNDATASIZE
0x1f4: MISSING 0xc3
0x1f6: MISSING 0xd8
0x1f7: MISSING 0xe4
0x1f8: V133 = 0x89b68b6cfc9d998f90f4431a520a7d58a2
0x20a: SELFDESTRUCT 0x89b68b6cfc9d998f90f4431a520a7d58a2
0x20b: MISSING 0xd4
0x20c: MISSING 0x4a
0x20e: V134 = EXTCODEHASH S5
0x20f: MISSING 0xd7
0x210: MISSING 0xde
0x211: STOP 
0x212: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V131, S5, S0, S1, S2, S3, S4, V132, S0, S0, V134, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x9cb8a26a
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0xea, 0x140, 0x179

Function 1:
Public function signature: 0xb411ee94
Entry block: 0x71
Exit block: 0xcc
Body: 0x71, 0x78, 0x7c, 0xcc, 0x17b, 0x18e, 0x199, 0x1b3

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x53
Body: 0x4c, 0x53, 0x57

