Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa2
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa2
0xa: JUMPI 0xa2 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x70f]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xd6103a1
0x3a EQ
0x3b PUSH2 0x70f
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xd6103a1
0x3a: V12 = EQ 0xd6103a1 V10
0x3b: V13 = 0x70f
0x3e: JUMPI 0x70f V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x724]
---
0x3f DUP1
0x40 PUSH4 0x27ebcf0e
0x45 EQ
0x46 PUSH2 0x724
0x49 JUMPI
---
0x40: V14 = 0x27ebcf0e
0x45: V15 = EQ 0x27ebcf0e V10
0x46: V16 = 0x724
0x49: JUMPI 0x724 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x779]
---
0x4a DUP1
0x4b PUSH4 0x519ee19e
0x50 EQ
0x51 PUSH2 0x779
0x54 JUMPI
---
0x4b: V17 = 0x519ee19e
0x50: V18 = EQ 0x519ee19e V10
0x51: V19 = 0x779
0x54: JUMPI 0x779 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x7a2]
---
0x55 DUP1
0x56 PUSH4 0x7fa8c158
0x5b EQ
0x5c PUSH2 0x7a2
0x5f JUMPI
---
0x56: V20 = 0x7fa8c158
0x5b: V21 = EQ 0x7fa8c158 V10
0x5c: V22 = 0x7a2
0x5f: JUMPI 0x7a2 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x7cb]
---
0x60 DUP1
0x61 PUSH4 0x8da5cb5b
0x66 EQ
0x67 PUSH2 0x7cb
0x6a JUMPI
---
0x61: V23 = 0x8da5cb5b
0x66: V24 = EQ 0x8da5cb5b V10
0x67: V25 = 0x7cb
0x6a: JUMPI 0x7cb V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x820]
---
0x6b DUP1
0x6c PUSH4 0x96c5406d
0x71 EQ
0x72 PUSH2 0x820
0x75 JUMPI
---
0x6c: V26 = 0x96c5406d
0x71: V27 = EQ 0x96c5406d V10
0x72: V28 = 0x820
0x75: JUMPI 0x820 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x849]
---
0x76 DUP1
0x77 PUSH4 0xa035b1fe
0x7c EQ
0x7d PUSH2 0x849
0x80 JUMPI
---
0x77: V29 = 0xa035b1fe
0x7c: V30 = EQ 0xa035b1fe V10
0x7d: V31 = 0x849
0x80: JUMPI 0x849 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x872]
---
0x81 DUP1
0x82 PUSH4 0xb44eccc9
0x87 EQ
0x88 PUSH2 0x872
0x8b JUMPI
---
0x82: V32 = 0xb44eccc9
0x87: V33 = EQ 0xb44eccc9 V10
0x88: V34 = 0x872
0x8b: JUMPI 0x872 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x89b]
---
0x8c DUP1
0x8d PUSH4 0xc8e569a8
0x92 EQ
0x93 PUSH2 0x89b
0x96 JUMPI
---
0x8d: V35 = 0xc8e569a8
0x92: V36 = EQ 0xc8e569a8 V10
0x93: V37 = 0x89b
0x96: JUMPI 0x89b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x8c4]
---
0x97 DUP1
0x98 PUSH4 0xccb07cef
0x9d EQ
0x9e PUSH2 0x8c4
0xa1 JUMPI
---
0x98: V38 = 0xccb07cef
0x9d: V39 = EQ 0xccb07cef V10
0x9e: V40 = 0x8c4
0xa1: JUMPI 0x8c4 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x0, 0x97]
Successors: [0xa6]
---
0xa2 JUMPDEST
0xa3 PUSH2 0x70d
---
0xa2: JUMPDEST 
0xa3: V41 = 0x70d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x70d]
Exit stack: [V10, 0x70d]

================================

Block 0xa6
[0xa6:0x16a]
---
Predecessors: [0xa2]
Successors: [0x16b, 0x16f]
---
0xa6 JUMPDEST
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa PUSH1 0x0
0xac DUP1
0xad PUSH1 0x0
0xaf SWAP1
0xb0 SLOAD
0xb1 SWAP1
0xb2 PUSH2 0x100
0xb5 EXP
0xb6 SWAP1
0xb7 DIV
0xb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd AND
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 PUSH4 0x70a08231
0xe9 ADDRESS
0xea PUSH1 0x0
0xec PUSH1 0x40
0xee MLOAD
0xef PUSH1 0x20
0xf1 ADD
0xf2 MSTORE
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP3
0xf7 PUSH4 0xffffffff
0xfc AND
0xfd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11b MUL
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x4
0x120 ADD
0x121 DUP1
0x122 DUP3
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP2
0x155 POP
0x156 POP
0x157 PUSH1 0x20
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d DUP4
0x15e SUB
0x15f DUP2
0x160 PUSH1 0x0
0x162 DUP8
0x163 DUP1
0x164 EXTCODESIZE
0x165 ISZERO
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0xa6: JUMPDEST 
0xa7: V42 = 0x0
0xaa: V43 = 0x0
0xad: V44 = 0x0
0xb0: V45 = S[0x0]
0xb2: V46 = 0x100
0xb5: V47 = EXP 0x100 0x0
0xb7: V48 = DIV V45 0x1
0xb8: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xce: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xe4: V53 = 0x70a08231
0xe9: V54 = ADDRESS
0xea: V55 = 0x0
0xec: V56 = 0x40
0xee: V57 = M[0x40]
0xef: V58 = 0x20
0xf1: V59 = ADD 0x20 V57
0xf2: M[V59] = 0x0
0xf3: V60 = 0x40
0xf5: V61 = M[0x40]
0xf7: V62 = 0xffffffff
0xfc: V63 = AND 0xffffffff 0x70a08231
0xfd: V64 = 0x100000000000000000000000000000000000000000000000000000000
0x11b: V65 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x11d: M[V61] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x11e: V66 = 0x4
0x120: V67 = ADD 0x4 V61
0x123: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x139: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x150: M[V67] = V71
0x151: V72 = 0x20
0x153: V73 = ADD 0x20 V67
0x157: V74 = 0x20
0x159: V75 = 0x40
0x15b: V76 = M[0x40]
0x15e: V77 = SUB V73 V76
0x160: V78 = 0x0
0x164: V79 = EXTCODESIZE V52
0x165: V80 = ISZERO V79
0x166: V81 = ISZERO V80
0x167: V82 = 0x16f
0x16a: JUMPI 0x16f V81
---
Entry stack: [V10, 0x70d]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0xa6]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V83 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]

================================

Block 0x16f
[0x16f:0x17b]
---
Predecessors: [0xa6]
Successors: [0x17c, 0x180]
---
0x16f JUMPDEST
0x170 PUSH2 0x2c6
0x173 GAS
0x174 SUB
0x175 CALL
0x176 ISZERO
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x16f: JUMPDEST 
0x170: V84 = 0x2c6
0x173: V85 = GAS
0x174: V86 = SUB V85 0x2c6
0x175: V87 = CALL V86 V52 0x0 V76 V77 V76 0x20
0x176: V88 = ISZERO V87
0x177: V89 = ISZERO V88
0x178: V90 = 0x180
0x17b: JUMPI 0x180 V89
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73, 0x20, V76, V77, V76, 0x0, V52]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x16f]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V91 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]

================================

Block 0x180
[0x180:0x19a]
---
Predecessors: [0x16f]
Successors: [0x19b, 0x1df]
---
0x180 JUMPDEST
0x181 POP
0x182 POP
0x183 POP
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 MLOAD
0x189 SWAP1
0x18a POP
0x18b PUSH1 0x7
0x18d DUP2
0x18e SWAP1
0x18f SSTORE
0x190 POP
0x191 PUSH1 0x1
0x193 SLOAD
0x194 TIMESTAMP
0x195 LT
0x196 ISZERO
0x197 PUSH2 0x1df
0x19a JUMPI
---
0x180: JUMPDEST 
0x184: V92 = 0x40
0x186: V93 = M[0x40]
0x188: V94 = M[V93]
0x18b: V95 = 0x7
0x18f: S[0x7] = V94
0x191: V96 = 0x1
0x193: V97 = S[0x1]
0x194: V98 = TIMESTAMP
0x195: V99 = LT V98 V97
0x196: V100 = ISZERO V99
0x197: V101 = 0x1df
0x19a: JUMPI 0x1df V100
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0, V52, 0x70a08231, V73]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x19b
[0x19b:0x1d5]
---
Predecessors: [0x180]
Successors: [0x1d6, 0x1da]
---
0x19b CALLER
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 PUSH2 0x8fc
0x1b5 CALLVALUE
0x1b6 SWAP1
0x1b7 DUP2
0x1b8 ISZERO
0x1b9 MUL
0x1ba SWAP1
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be PUSH1 0x0
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 DUP1
0x1c4 DUP4
0x1c5 SUB
0x1c6 DUP2
0x1c7 DUP6
0x1c8 DUP9
0x1c9 DUP9
0x1ca CALL
0x1cb SWAP4
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 ISZERO
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x19b: V102 = CALLER
0x19c: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1b2: V105 = 0x8fc
0x1b5: V106 = CALLVALUE
0x1b8: V107 = ISZERO V106
0x1b9: V108 = MUL V107 0x8fc
0x1bb: V109 = 0x40
0x1bd: V110 = M[0x40]
0x1be: V111 = 0x0
0x1c0: V112 = 0x40
0x1c2: V113 = M[0x40]
0x1c5: V114 = SUB V110 V113
0x1ca: V115 = CALL V108 V104 V106 V113 V114 V113 0x0
0x1d0: V116 = ISZERO V115
0x1d1: V117 = ISZERO V116
0x1d2: V118 = 0x1da
0x1d5: JUMPI 0x1da V117
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x19b]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V119 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x1da
[0x1da:0x1de]
---
Predecessors: [0x19b]
Successors: [0x684]
---
0x1da JUMPDEST
0x1db PUSH2 0x684
0x1de JUMP
---
0x1da: JUMPDEST 
0x1db: V120 = 0x684
0x1de: JUMP 0x684
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x1df
[0x1df:0x1ec]
---
Predecessors: [0x180]
Successors: [0x1ed, 0x24c]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0x3
0x1e4 SLOAD
0x1e5 ADD
0x1e6 TIMESTAMP
0x1e7 GT
0x1e8 ISZERO
0x1e9 PUSH2 0x24c
0x1ec JUMPI
---
0x1df: JUMPDEST 
0x1e0: V121 = 0x1
0x1e2: V122 = 0x3
0x1e4: V123 = S[0x3]
0x1e5: V124 = ADD V123 0x1
0x1e6: V125 = TIMESTAMP
0x1e7: V126 = GT V125 V124
0x1e8: V127 = ISZERO V126
0x1e9: V128 = 0x24c
0x1ec: JUMPI 0x24c V127
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x1ed
[0x1ed:0x227]
---
Predecessors: [0x1df]
Successors: [0x228, 0x22c]
---
0x1ed CALLER
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 PUSH2 0x8fc
0x207 CALLVALUE
0x208 SWAP1
0x209 DUP2
0x20a ISZERO
0x20b MUL
0x20c SWAP1
0x20d PUSH1 0x40
0x20f MLOAD
0x210 PUSH1 0x0
0x212 PUSH1 0x40
0x214 MLOAD
0x215 DUP1
0x216 DUP4
0x217 SUB
0x218 DUP2
0x219 DUP6
0x21a DUP9
0x21b DUP9
0x21c CALL
0x21d SWAP4
0x21e POP
0x21f POP
0x220 POP
0x221 POP
0x222 ISZERO
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x1ed: V129 = CALLER
0x1ee: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x204: V132 = 0x8fc
0x207: V133 = CALLVALUE
0x20a: V134 = ISZERO V133
0x20b: V135 = MUL V134 0x8fc
0x20d: V136 = 0x40
0x20f: V137 = M[0x40]
0x210: V138 = 0x0
0x212: V139 = 0x40
0x214: V140 = M[0x40]
0x217: V141 = SUB V137 V140
0x21c: V142 = CALL V135 V131 V133 V140 V141 V140 0x0
0x222: V143 = ISZERO V142
0x223: V144 = ISZERO V143
0x224: V145 = 0x22c
0x227: JUMPI 0x22c V144
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x1ed]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V146 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x22c
[0x22c:0x24b]
---
Predecessors: [0x1ed]
Successors: [0x683]
---
0x22c JUMPDEST
0x22d PUSH1 0x1
0x22f PUSH1 0x8
0x231 PUSH1 0x0
0x233 PUSH2 0x100
0x236 EXP
0x237 DUP2
0x238 SLOAD
0x239 DUP2
0x23a PUSH1 0xff
0x23c MUL
0x23d NOT
0x23e AND
0x23f SWAP1
0x240 DUP4
0x241 ISZERO
0x242 ISZERO
0x243 MUL
0x244 OR
0x245 SWAP1
0x246 SSTORE
0x247 POP
0x248 PUSH2 0x683
0x24b JUMP
---
0x22c: JUMPDEST 
0x22d: V147 = 0x1
0x22f: V148 = 0x8
0x231: V149 = 0x0
0x233: V150 = 0x100
0x236: V151 = EXP 0x100 0x0
0x238: V152 = S[0x8]
0x23a: V153 = 0xff
0x23c: V154 = MUL 0xff 0x1
0x23d: V155 = NOT 0xff
0x23e: V156 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V152
0x241: V157 = ISZERO 0x1
0x242: V158 = ISZERO 0x0
0x243: V159 = MUL 0x1 0x1
0x244: V160 = OR 0x1 V156
0x246: S[0x8] = V160
0x248: V161 = 0x683
0x24b: JUMP 0x683
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x24c
[0x24c:0x261]
---
Predecessors: [0x1df]
Successors: [0x262, 0x2a6]
---
0x24c JUMPDEST
0x24d PUSH1 0x8
0x24f PUSH1 0x0
0x251 SWAP1
0x252 SLOAD
0x253 SWAP1
0x254 PUSH2 0x100
0x257 EXP
0x258 SWAP1
0x259 DIV
0x25a PUSH1 0xff
0x25c AND
0x25d ISZERO
0x25e PUSH2 0x2a6
0x261 JUMPI
---
0x24c: JUMPDEST 
0x24d: V162 = 0x8
0x24f: V163 = 0x0
0x252: V164 = S[0x8]
0x254: V165 = 0x100
0x257: V166 = EXP 0x100 0x0
0x259: V167 = DIV V164 0x1
0x25a: V168 = 0xff
0x25c: V169 = AND 0xff V167
0x25d: V170 = ISZERO V169
0x25e: V171 = 0x2a6
0x261: JUMPI 0x2a6 V170
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x262
[0x262:0x29c]
---
Predecessors: [0x24c]
Successors: [0x29d, 0x2a1]
---
0x262 CALLER
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 PUSH2 0x8fc
0x27c CALLVALUE
0x27d SWAP1
0x27e DUP2
0x27f ISZERO
0x280 MUL
0x281 SWAP1
0x282 PUSH1 0x40
0x284 MLOAD
0x285 PUSH1 0x0
0x287 PUSH1 0x40
0x289 MLOAD
0x28a DUP1
0x28b DUP4
0x28c SUB
0x28d DUP2
0x28e DUP6
0x28f DUP9
0x290 DUP9
0x291 CALL
0x292 SWAP4
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 ISZERO
0x298 ISZERO
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x262: V172 = CALLER
0x263: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x279: V175 = 0x8fc
0x27c: V176 = CALLVALUE
0x27f: V177 = ISZERO V176
0x280: V178 = MUL V177 0x8fc
0x282: V179 = 0x40
0x284: V180 = M[0x40]
0x285: V181 = 0x0
0x287: V182 = 0x40
0x289: V183 = M[0x40]
0x28c: V184 = SUB V180 V183
0x291: V185 = CALL V178 V174 V176 V183 V184 V183 0x0
0x297: V186 = ISZERO V185
0x298: V187 = ISZERO V186
0x299: V188 = 0x2a1
0x29c: JUMPI 0x2a1 V187
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x262]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V189 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x2a1
[0x2a1:0x2a5]
---
Predecessors: [0x262]
Successors: [0x682]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x682
0x2a5 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V190 = 0x682
0x2a5: JUMP 0x682
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0]

================================

Block 0x2a6
[0x2a6:0x2b4]
---
Predecessors: [0x24c]
Successors: [0x2b5, 0x2b6]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x5
0x2a9 SLOAD
0x2aa PUSH1 0x4
0x2ac SLOAD
0x2ad CALLVALUE
0x2ae DUP2
0x2af ISZERO
0x2b0 ISZERO
0x2b1 PUSH2 0x2b6
0x2b4 JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V191 = 0x5
0x2a9: V192 = S[0x5]
0x2aa: V193 = 0x4
0x2ac: V194 = S[0x4]
0x2ad: V195 = CALLVALUE
0x2af: V196 = ISZERO V194
0x2b0: V197 = ISZERO V196
0x2b1: V198 = 0x2b6
0x2b4: JUMPI 0x2b6 V197
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V192, V194, V195]
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0, V192, V194, V195]

================================

Block 0x2b5
[0x2b5:0x2b5]
---
Predecessors: [0x2a6]
Successors: []
---
0x2b5 INVALID
---
0x2b5: INVALID 
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0, V192, V194, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, 0x0, 0x0, 0x0, V192, V194, V195]

================================

Block 0x2b6
[0x2b6:0x2c4]
---
Predecessors: [0x2a6]
Successors: [0x2c5, 0x2c9]
---
0x2b6 JUMPDEST
0x2b7 DIV
0x2b8 MUL
0x2b9 SWAP3
0x2ba POP
0x2bb PUSH1 0x0
0x2bd DUP4
0x2be GT
0x2bf ISZERO
0x2c0 ISZERO
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V199 = DIV V195 V194
0x2b8: V200 = MUL V199 V192
0x2bb: V201 = 0x0
0x2be: V202 = GT V200 0x0
0x2bf: V203 = ISZERO V202
0x2c0: V204 = ISZERO V203
0x2c1: V205 = 0x2c9
0x2c4: JUMPI 0x2c9 V204
---
Entry stack: [V10, 0x70d, 0x0, 0x0, 0x0, V192, V194, V195]
Stack pops: 6
Stack additions: [V200, S4, S3]
Exit stack: [V10, 0x70d, V200, 0x0, 0x0]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2b6]
Successors: []
---
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 REVERT
---
0x2c5: V206 = 0x0
0x2c8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, 0x0, 0x0]

================================

Block 0x2c9
[0x2c9:0x2d8]
---
Predecessors: [0x2b6]
Successors: [0x2d9, 0x2da]
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x5
0x2cc SLOAD
0x2cd PUSH1 0x4
0x2cf SLOAD
0x2d0 DUP5
0x2d1 MUL
0x2d2 DUP2
0x2d3 ISZERO
0x2d4 ISZERO
0x2d5 PUSH2 0x2da
0x2d8 JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V207 = 0x5
0x2cc: V208 = S[0x5]
0x2cd: V209 = 0x4
0x2cf: V210 = S[0x4]
0x2d1: V211 = MUL V200 V210
0x2d3: V212 = ISZERO V208
0x2d4: V213 = ISZERO V212
0x2d5: V214 = 0x2da
0x2d8: JUMPI 0x2da V213
---
Entry stack: [V10, 0x70d, V200, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V208, V211]
Exit stack: [V10, 0x70d, V200, 0x0, 0x0, V208, V211]

================================

Block 0x2d9
[0x2d9:0x2d9]
---
Predecessors: [0x2c9]
Successors: []
---
0x2d9 INVALID
---
0x2d9: INVALID 
---
Entry stack: [V10, 0x70d, V200, 0x0, 0x0, V208, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, 0x0, 0x0, V208, V211]

================================

Block 0x2da
[0x2da:0x2e8]
---
Predecessors: [0x2c9]
Successors: [0x2e9, 0x4b8]
---
0x2da JUMPDEST
0x2db DIV
0x2dc SWAP2
0x2dd POP
0x2de DUP3
0x2df PUSH1 0x7
0x2e1 SLOAD
0x2e2 LT
0x2e3 ISZERO
0x2e4 ISZERO
0x2e5 PUSH2 0x4b8
0x2e8 JUMPI
---
0x2da: JUMPDEST 
0x2db: V215 = DIV V211 V208
0x2df: V216 = 0x7
0x2e1: V217 = S[0x7]
0x2e2: V218 = LT V217 V200
0x2e3: V219 = ISZERO V218
0x2e4: V220 = ISZERO V219
0x2e5: V221 = 0x4b8
0x2e8: JUMPI 0x4b8 V220
---
Entry stack: [V10, 0x70d, V200, 0x0, 0x0, V208, V211]
Stack pops: 5
Stack additions: [S4, V215, S2]
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x2e9
[0x2e9:0x345]
---
Predecessors: [0x2da]
Successors: [0x346, 0x34a]
---
0x2e9 PUSH1 0x8
0x2eb PUSH1 0x1
0x2ed SWAP1
0x2ee SLOAD
0x2ef SWAP1
0x2f0 PUSH2 0x100
0x2f3 EXP
0x2f4 SWAP1
0x2f5 DIV
0x2f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30b AND
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 PUSH2 0x8fc
0x325 DUP4
0x326 SWAP1
0x327 DUP2
0x328 ISZERO
0x329 MUL
0x32a SWAP1
0x32b PUSH1 0x40
0x32d MLOAD
0x32e PUSH1 0x0
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP1
0x334 DUP4
0x335 SUB
0x336 DUP2
0x337 DUP6
0x338 DUP9
0x339 DUP9
0x33a CALL
0x33b SWAP4
0x33c POP
0x33d POP
0x33e POP
0x33f POP
0x340 ISZERO
0x341 ISZERO
0x342 PUSH2 0x34a
0x345 JUMPI
---
0x2e9: V222 = 0x8
0x2eb: V223 = 0x1
0x2ee: V224 = S[0x8]
0x2f0: V225 = 0x100
0x2f3: V226 = EXP 0x100 0x1
0x2f5: V227 = DIV V224 0x100
0x2f6: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x30c: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x322: V232 = 0x8fc
0x328: V233 = ISZERO V215
0x329: V234 = MUL V233 0x8fc
0x32b: V235 = 0x40
0x32d: V236 = M[0x40]
0x32e: V237 = 0x0
0x330: V238 = 0x40
0x332: V239 = M[0x40]
0x335: V240 = SUB V236 V239
0x33a: V241 = CALL V234 V231 V215 V239 V240 V239 0x0
0x340: V242 = ISZERO V241
0x341: V243 = ISZERO V242
0x342: V244 = 0x34a
0x345: JUMPI 0x34a V243
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x346
[0x346:0x349]
---
Predecessors: [0x2e9]
Successors: []
---
0x346 PUSH1 0x0
0x348 DUP1
0x349 REVERT
---
0x346: V245 = 0x0
0x349: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x34a
[0x34a:0x352]
---
Predecessors: [0x2e9]
Successors: [0x353, 0x395]
---
0x34a JUMPDEST
0x34b DUP2
0x34c CALLVALUE
0x34d GT
0x34e ISZERO
0x34f PUSH2 0x395
0x352 JUMPI
---
0x34a: JUMPDEST 
0x34c: V246 = CALLVALUE
0x34d: V247 = GT V246 V215
0x34e: V248 = ISZERO V247
0x34f: V249 = 0x395
0x352: JUMPI 0x395 V248
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x353
[0x353:0x38f]
---
Predecessors: [0x34a]
Successors: [0x390, 0x394]
---
0x353 CALLER
0x354 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x369 AND
0x36a PUSH2 0x8fc
0x36d DUP4
0x36e CALLVALUE
0x36f SUB
0x370 SWAP1
0x371 DUP2
0x372 ISZERO
0x373 MUL
0x374 SWAP1
0x375 PUSH1 0x40
0x377 MLOAD
0x378 PUSH1 0x0
0x37a PUSH1 0x40
0x37c MLOAD
0x37d DUP1
0x37e DUP4
0x37f SUB
0x380 DUP2
0x381 DUP6
0x382 DUP9
0x383 DUP9
0x384 CALL
0x385 SWAP4
0x386 POP
0x387 POP
0x388 POP
0x389 POP
0x38a ISZERO
0x38b ISZERO
0x38c PUSH2 0x394
0x38f JUMPI
---
0x353: V250 = CALLER
0x354: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x369: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x36a: V253 = 0x8fc
0x36e: V254 = CALLVALUE
0x36f: V255 = SUB V254 V215
0x372: V256 = ISZERO V255
0x373: V257 = MUL V256 0x8fc
0x375: V258 = 0x40
0x377: V259 = M[0x40]
0x378: V260 = 0x0
0x37a: V261 = 0x40
0x37c: V262 = M[0x40]
0x37f: V263 = SUB V259 V262
0x384: V264 = CALL V257 V252 V255 V262 V263 V262 0x0
0x38a: V265 = ISZERO V264
0x38b: V266 = ISZERO V265
0x38c: V267 = 0x394
0x38f: JUMPI 0x394 V266
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x390
[0x390:0x393]
---
Predecessors: [0x353]
Successors: []
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
---
0x390: V268 = 0x0
0x393: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x394
[0x394:0x394]
---
Predecessors: [0x353]
Successors: [0x395]
---
0x394 JUMPDEST
---
0x394: JUMPDEST 
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x395
[0x395:0x453]
---
Predecessors: [0x34a, 0x394]
Successors: [0x454, 0x458]
---
0x395 JUMPDEST
0x396 PUSH1 0x0
0x398 DUP1
0x399 SWAP1
0x39a SLOAD
0x39b SWAP1
0x39c PUSH2 0x100
0x39f EXP
0x3a0 SWAP1
0x3a1 DIV
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce PUSH4 0xa9059cbb
0x3d3 CALLER
0x3d4 DUP6
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP4
0x3d9 PUSH4 0xffffffff
0x3de AND
0x3df PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3fd MUL
0x3fe DUP2
0x3ff MSTORE
0x400 PUSH1 0x4
0x402 ADD
0x403 DUP1
0x404 DUP4
0x405 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41a AND
0x41b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x430 AND
0x431 DUP2
0x432 MSTORE
0x433 PUSH1 0x20
0x435 ADD
0x436 DUP3
0x437 DUP2
0x438 MSTORE
0x439 PUSH1 0x20
0x43b ADD
0x43c SWAP3
0x43d POP
0x43e POP
0x43f POP
0x440 PUSH1 0x0
0x442 PUSH1 0x40
0x444 MLOAD
0x445 DUP1
0x446 DUP4
0x447 SUB
0x448 DUP2
0x449 PUSH1 0x0
0x44b DUP8
0x44c DUP1
0x44d EXTCODESIZE
0x44e ISZERO
0x44f ISZERO
0x450 PUSH2 0x458
0x453 JUMPI
---
0x395: JUMPDEST 
0x396: V269 = 0x0
0x39a: V270 = S[0x0]
0x39c: V271 = 0x100
0x39f: V272 = EXP 0x100 0x0
0x3a1: V273 = DIV V270 0x1
0x3a2: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x3b8: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x3ce: V278 = 0xa9059cbb
0x3d3: V279 = CALLER
0x3d5: V280 = 0x40
0x3d7: V281 = M[0x40]
0x3d9: V282 = 0xffffffff
0x3de: V283 = AND 0xffffffff 0xa9059cbb
0x3df: V284 = 0x100000000000000000000000000000000000000000000000000000000
0x3fd: V285 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3ff: M[V281] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x400: V286 = 0x4
0x402: V287 = ADD 0x4 V281
0x405: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x41a: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x41b: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x430: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x432: M[V287] = V291
0x433: V292 = 0x20
0x435: V293 = ADD 0x20 V287
0x438: M[V293] = V200
0x439: V294 = 0x20
0x43b: V295 = ADD 0x20 V293
0x440: V296 = 0x0
0x442: V297 = 0x40
0x444: V298 = M[0x40]
0x447: V299 = SUB V295 V298
0x449: V300 = 0x0
0x44d: V301 = EXTCODESIZE V277
0x44e: V302 = ISZERO V301
0x44f: V303 = ISZERO V302
0x450: V304 = 0x458
0x453: JUMPI 0x458 V303
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V277, 0xa9059cbb, V295, 0x0, V298, V299, V298, 0x0, V277]
Exit stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295, 0x0, V298, V299, V298, 0x0, V277]

================================

Block 0x454
[0x454:0x457]
---
Predecessors: [0x395]
Successors: []
---
0x454 PUSH1 0x0
0x456 DUP1
0x457 REVERT
---
0x454: V305 = 0x0
0x457: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295, 0x0, V298, V299, V298, 0x0, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295, 0x0, V298, V299, V298, 0x0, V277]

================================

Block 0x458
[0x458:0x464]
---
Predecessors: [0x395]
Successors: [0x465, 0x469]
---
0x458 JUMPDEST
0x459 PUSH2 0x2c6
0x45c GAS
0x45d SUB
0x45e CALL
0x45f ISZERO
0x460 ISZERO
0x461 PUSH2 0x469
0x464 JUMPI
---
0x458: JUMPDEST 
0x459: V306 = 0x2c6
0x45c: V307 = GAS
0x45d: V308 = SUB V307 0x2c6
0x45e: V309 = CALL V308 V277 0x0 V298 V299 V298 0x0
0x45f: V310 = ISZERO V309
0x460: V311 = ISZERO V310
0x461: V312 = 0x469
0x464: JUMPI 0x469 V311
---
Entry stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295, 0x0, V298, V299, V298, 0x0, V277]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295]

================================

Block 0x465
[0x465:0x468]
---
Predecessors: [0x458]
Successors: []
---
0x465 PUSH1 0x0
0x467 DUP1
0x468 REVERT
---
0x465: V313 = 0x0
0x468: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295]

================================

Block 0x469
[0x469:0x497]
---
Predecessors: [0x458]
Successors: [0x498, 0x4b3]
---
0x469 JUMPDEST
0x46a POP
0x46b POP
0x46c POP
0x46d DUP3
0x46e PUSH1 0x6
0x470 PUSH1 0x0
0x472 DUP3
0x473 DUP3
0x474 SLOAD
0x475 ADD
0x476 SWAP3
0x477 POP
0x478 POP
0x479 DUP2
0x47a SWAP1
0x47b SSTORE
0x47c POP
0x47d DUP3
0x47e PUSH1 0x7
0x480 PUSH1 0x0
0x482 DUP3
0x483 DUP3
0x484 SLOAD
0x485 SUB
0x486 SWAP3
0x487 POP
0x488 POP
0x489 DUP2
0x48a SWAP1
0x48b SSTORE
0x48c POP
0x48d PUSH1 0x0
0x48f PUSH1 0x7
0x491 SLOAD
0x492 EQ
0x493 ISZERO
0x494 PUSH2 0x4b3
0x497 JUMPI
---
0x469: JUMPDEST 
0x46e: V314 = 0x6
0x470: V315 = 0x0
0x474: V316 = S[0x6]
0x475: V317 = ADD V316 V200
0x47b: S[0x6] = V317
0x47e: V318 = 0x7
0x480: V319 = 0x0
0x484: V320 = S[0x7]
0x485: V321 = SUB V320 V200
0x48b: S[0x7] = V321
0x48d: V322 = 0x0
0x48f: V323 = 0x7
0x491: V324 = S[0x7]
0x492: V325 = EQ V324 0x0
0x493: V326 = ISZERO V325
0x494: V327 = 0x4b3
0x497: JUMPI 0x4b3 V326
---
Entry stack: [V10, 0x70d, V200, V215, 0x0, V277, 0xa9059cbb, V295]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x498
[0x498:0x4b2]
---
Predecessors: [0x469]
Successors: [0x4b3]
---
0x498 PUSH1 0x1
0x49a PUSH1 0x8
0x49c PUSH1 0x0
0x49e PUSH2 0x100
0x4a1 EXP
0x4a2 DUP2
0x4a3 SLOAD
0x4a4 DUP2
0x4a5 PUSH1 0xff
0x4a7 MUL
0x4a8 NOT
0x4a9 AND
0x4aa SWAP1
0x4ab DUP4
0x4ac ISZERO
0x4ad ISZERO
0x4ae MUL
0x4af OR
0x4b0 SWAP1
0x4b1 SSTORE
0x4b2 POP
---
0x498: V328 = 0x1
0x49a: V329 = 0x8
0x49c: V330 = 0x0
0x49e: V331 = 0x100
0x4a1: V332 = EXP 0x100 0x0
0x4a3: V333 = S[0x8]
0x4a5: V334 = 0xff
0x4a7: V335 = MUL 0xff 0x1
0x4a8: V336 = NOT 0xff
0x4a9: V337 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V333
0x4ac: V338 = ISZERO 0x1
0x4ad: V339 = ISZERO 0x0
0x4ae: V340 = MUL 0x1 0x1
0x4af: V341 = OR 0x1 V337
0x4b1: S[0x8] = V341
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x4b3
[0x4b3:0x4b7]
---
Predecessors: [0x469, 0x498]
Successors: [0x681]
---
0x4b3 JUMPDEST
0x4b4 PUSH2 0x681
0x4b7 JUMP
---
0x4b3: JUMPDEST 
0x4b4: V342 = 0x681
0x4b7: JUMP 0x681
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0]

================================

Block 0x4b8
[0x4b8:0x4c9]
---
Predecessors: [0x2da]
Successors: [0x4ca, 0x4cb]
---
0x4b8 JUMPDEST
0x4b9 PUSH1 0x5
0x4bb SLOAD
0x4bc PUSH1 0x4
0x4be SLOAD
0x4bf PUSH1 0x7
0x4c1 SLOAD
0x4c2 MUL
0x4c3 DUP2
0x4c4 ISZERO
0x4c5 ISZERO
0x4c6 PUSH2 0x4cb
0x4c9 JUMPI
---
0x4b8: JUMPDEST 
0x4b9: V343 = 0x5
0x4bb: V344 = S[0x5]
0x4bc: V345 = 0x4
0x4be: V346 = S[0x4]
0x4bf: V347 = 0x7
0x4c1: V348 = S[0x7]
0x4c2: V349 = MUL V348 V346
0x4c4: V350 = ISZERO V344
0x4c5: V351 = ISZERO V350
0x4c6: V352 = 0x4cb
0x4c9: JUMPI 0x4cb V351
---
Entry stack: [V10, 0x70d, V200, V215, 0x0]
Stack pops: 0
Stack additions: [V344, V349]
Exit stack: [V10, 0x70d, V200, V215, 0x0, V344, V349]

================================

Block 0x4ca
[0x4ca:0x4ca]
---
Predecessors: [0x4b8]
Successors: []
---
0x4ca INVALID
---
0x4ca: INVALID 
---
Entry stack: [V10, 0x70d, V200, V215, 0x0, V344, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, 0x0, V344, V349]

================================

Block 0x4cb
[0x4cb:0x52b]
---
Predecessors: [0x4b8]
Successors: [0x52c, 0x530]
---
0x4cb JUMPDEST
0x4cc DIV
0x4cd SWAP1
0x4ce POP
0x4cf PUSH1 0x8
0x4d1 PUSH1 0x1
0x4d3 SWAP1
0x4d4 SLOAD
0x4d5 SWAP1
0x4d6 PUSH2 0x100
0x4d9 EXP
0x4da SWAP1
0x4db DIV
0x4dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f1 AND
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 AND
0x508 PUSH2 0x8fc
0x50b DUP3
0x50c SWAP1
0x50d DUP2
0x50e ISZERO
0x50f MUL
0x510 SWAP1
0x511 PUSH1 0x40
0x513 MLOAD
0x514 PUSH1 0x0
0x516 PUSH1 0x40
0x518 MLOAD
0x519 DUP1
0x51a DUP4
0x51b SUB
0x51c DUP2
0x51d DUP6
0x51e DUP9
0x51f DUP9
0x520 CALL
0x521 SWAP4
0x522 POP
0x523 POP
0x524 POP
0x525 POP
0x526 ISZERO
0x527 ISZERO
0x528 PUSH2 0x530
0x52b JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V353 = DIV V349 V344
0x4cf: V354 = 0x8
0x4d1: V355 = 0x1
0x4d4: V356 = S[0x8]
0x4d6: V357 = 0x100
0x4d9: V358 = EXP 0x100 0x1
0x4db: V359 = DIV V356 0x100
0x4dc: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x4f2: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x508: V364 = 0x8fc
0x50e: V365 = ISZERO V353
0x50f: V366 = MUL V365 0x8fc
0x511: V367 = 0x40
0x513: V368 = M[0x40]
0x514: V369 = 0x0
0x516: V370 = 0x40
0x518: V371 = M[0x40]
0x51b: V372 = SUB V368 V371
0x520: V373 = CALL V366 V363 V353 V371 V372 V371 0x0
0x526: V374 = ISZERO V373
0x527: V375 = ISZERO V374
0x528: V376 = 0x530
0x52b: JUMPI 0x530 V375
---
Entry stack: [V10, 0x70d, V200, V215, 0x0, V344, V349]
Stack pops: 3
Stack additions: [V353]
Exit stack: [V10, 0x70d, V200, V215, V353]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x4cb]
Successors: []
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f REVERT
---
0x52c: V377 = 0x0
0x52f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, V353]

================================

Block 0x530
[0x530:0x5f0]
---
Predecessors: [0x4cb]
Successors: [0x5f1, 0x5f5]
---
0x530 JUMPDEST
0x531 PUSH1 0x0
0x533 DUP1
0x534 SWAP1
0x535 SLOAD
0x536 SWAP1
0x537 PUSH2 0x100
0x53a EXP
0x53b SWAP1
0x53c DIV
0x53d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x552 AND
0x553 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x568 AND
0x569 PUSH4 0xa9059cbb
0x56e CALLER
0x56f PUSH1 0x7
0x571 SLOAD
0x572 PUSH1 0x40
0x574 MLOAD
0x575 DUP4
0x576 PUSH4 0xffffffff
0x57b AND
0x57c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x59a MUL
0x59b DUP2
0x59c MSTORE
0x59d PUSH1 0x4
0x59f ADD
0x5a0 DUP1
0x5a1 DUP4
0x5a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b7 AND
0x5b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cd AND
0x5ce DUP2
0x5cf MSTORE
0x5d0 PUSH1 0x20
0x5d2 ADD
0x5d3 DUP3
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x20
0x5d8 ADD
0x5d9 SWAP3
0x5da POP
0x5db POP
0x5dc POP
0x5dd PUSH1 0x0
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 DUP1
0x5e3 DUP4
0x5e4 SUB
0x5e5 DUP2
0x5e6 PUSH1 0x0
0x5e8 DUP8
0x5e9 DUP1
0x5ea EXTCODESIZE
0x5eb ISZERO
0x5ec ISZERO
0x5ed PUSH2 0x5f5
0x5f0 JUMPI
---
0x530: JUMPDEST 
0x531: V378 = 0x0
0x535: V379 = S[0x0]
0x537: V380 = 0x100
0x53a: V381 = EXP 0x100 0x0
0x53c: V382 = DIV V379 0x1
0x53d: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x552: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x553: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x568: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x569: V387 = 0xa9059cbb
0x56e: V388 = CALLER
0x56f: V389 = 0x7
0x571: V390 = S[0x7]
0x572: V391 = 0x40
0x574: V392 = M[0x40]
0x576: V393 = 0xffffffff
0x57b: V394 = AND 0xffffffff 0xa9059cbb
0x57c: V395 = 0x100000000000000000000000000000000000000000000000000000000
0x59a: V396 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x59c: M[V392] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x59d: V397 = 0x4
0x59f: V398 = ADD 0x4 V392
0x5a2: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x5b8: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x5cf: M[V398] = V402
0x5d0: V403 = 0x20
0x5d2: V404 = ADD 0x20 V398
0x5d5: M[V404] = V390
0x5d6: V405 = 0x20
0x5d8: V406 = ADD 0x20 V404
0x5dd: V407 = 0x0
0x5df: V408 = 0x40
0x5e1: V409 = M[0x40]
0x5e4: V410 = SUB V406 V409
0x5e6: V411 = 0x0
0x5ea: V412 = EXTCODESIZE V386
0x5eb: V413 = ISZERO V412
0x5ec: V414 = ISZERO V413
0x5ed: V415 = 0x5f5
0x5f0: JUMPI 0x5f5 V414
---
Entry stack: [V10, 0x70d, V200, V215, V353]
Stack pops: 0
Stack additions: [V386, 0xa9059cbb, V406, 0x0, V409, V410, V409, 0x0, V386]
Exit stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406, 0x0, V409, V410, V409, 0x0, V386]

================================

Block 0x5f1
[0x5f1:0x5f4]
---
Predecessors: [0x530]
Successors: []
---
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 REVERT
---
0x5f1: V416 = 0x0
0x5f4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406, 0x0, V409, V410, V409, 0x0, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406, 0x0, V409, V410, V409, 0x0, V386]

================================

Block 0x5f5
[0x5f5:0x601]
---
Predecessors: [0x530]
Successors: [0x602, 0x606]
---
0x5f5 JUMPDEST
0x5f6 PUSH2 0x2c6
0x5f9 GAS
0x5fa SUB
0x5fb CALL
0x5fc ISZERO
0x5fd ISZERO
0x5fe PUSH2 0x606
0x601 JUMPI
---
0x5f5: JUMPDEST 
0x5f6: V417 = 0x2c6
0x5f9: V418 = GAS
0x5fa: V419 = SUB V418 0x2c6
0x5fb: V420 = CALL V419 V386 0x0 V409 V410 V409 0x0
0x5fc: V421 = ISZERO V420
0x5fd: V422 = ISZERO V421
0x5fe: V423 = 0x606
0x601: JUMPI 0x606 V422
---
Entry stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406, 0x0, V409, V410, V409, 0x0, V386]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406]

================================

Block 0x602
[0x602:0x605]
---
Predecessors: [0x5f5]
Successors: []
---
0x602 PUSH1 0x0
0x604 DUP1
0x605 REVERT
---
0x602: V424 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406]

================================

Block 0x606
[0x606:0x646]
---
Predecessors: [0x5f5]
Successors: [0x647, 0x64b]
---
0x606 JUMPDEST
0x607 POP
0x608 POP
0x609 POP
0x60a CALLER
0x60b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x620 AND
0x621 PUSH2 0x8fc
0x624 DUP3
0x625 CALLVALUE
0x626 SUB
0x627 SWAP1
0x628 DUP2
0x629 ISZERO
0x62a MUL
0x62b SWAP1
0x62c PUSH1 0x40
0x62e MLOAD
0x62f PUSH1 0x0
0x631 PUSH1 0x40
0x633 MLOAD
0x634 DUP1
0x635 DUP4
0x636 SUB
0x637 DUP2
0x638 DUP6
0x639 DUP9
0x63a DUP9
0x63b CALL
0x63c SWAP4
0x63d POP
0x63e POP
0x63f POP
0x640 POP
0x641 ISZERO
0x642 ISZERO
0x643 PUSH2 0x64b
0x646 JUMPI
---
0x606: JUMPDEST 
0x60a: V425 = CALLER
0x60b: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x620: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x621: V428 = 0x8fc
0x625: V429 = CALLVALUE
0x626: V430 = SUB V429 V353
0x629: V431 = ISZERO V430
0x62a: V432 = MUL V431 0x8fc
0x62c: V433 = 0x40
0x62e: V434 = M[0x40]
0x62f: V435 = 0x0
0x631: V436 = 0x40
0x633: V437 = M[0x40]
0x636: V438 = SUB V434 V437
0x63b: V439 = CALL V432 V427 V430 V437 V438 V437 0x0
0x641: V440 = ISZERO V439
0x642: V441 = ISZERO V440
0x643: V442 = 0x64b
0x646: JUMPI 0x64b V441
---
Entry stack: [V10, 0x70d, V200, V215, V353, V386, 0xa9059cbb, V406]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x70d, V200, V215, V353]

================================

Block 0x647
[0x647:0x64a]
---
Predecessors: [0x606]
Successors: []
---
0x647 PUSH1 0x0
0x649 DUP1
0x64a REVERT
---
0x647: V443 = 0x0
0x64a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x70d, V200, V215, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, V353]

================================

Block 0x64b
[0x64b:0x680]
---
Predecessors: [0x606]
Successors: [0x681]
---
0x64b JUMPDEST
0x64c PUSH1 0x7
0x64e SLOAD
0x64f PUSH1 0x6
0x651 PUSH1 0x0
0x653 DUP3
0x654 DUP3
0x655 SLOAD
0x656 ADD
0x657 SWAP3
0x658 POP
0x659 POP
0x65a DUP2
0x65b SWAP1
0x65c SSTORE
0x65d POP
0x65e PUSH1 0x0
0x660 PUSH1 0x7
0x662 DUP2
0x663 SWAP1
0x664 SSTORE
0x665 POP
0x666 PUSH1 0x1
0x668 PUSH1 0x8
0x66a PUSH1 0x0
0x66c PUSH2 0x100
0x66f EXP
0x670 DUP2
0x671 SLOAD
0x672 DUP2
0x673 PUSH1 0xff
0x675 MUL
0x676 NOT
0x677 AND
0x678 SWAP1
0x679 DUP4
0x67a ISZERO
0x67b ISZERO
0x67c MUL
0x67d OR
0x67e SWAP1
0x67f SSTORE
0x680 POP
---
0x64b: JUMPDEST 
0x64c: V444 = 0x7
0x64e: V445 = S[0x7]
0x64f: V446 = 0x6
0x651: V447 = 0x0
0x655: V448 = S[0x6]
0x656: V449 = ADD V448 V445
0x65c: S[0x6] = V449
0x65e: V450 = 0x0
0x660: V451 = 0x7
0x664: S[0x7] = 0x0
0x666: V452 = 0x1
0x668: V453 = 0x8
0x66a: V454 = 0x0
0x66c: V455 = 0x100
0x66f: V456 = EXP 0x100 0x0
0x671: V457 = S[0x8]
0x673: V458 = 0xff
0x675: V459 = MUL 0xff 0x1
0x676: V460 = NOT 0xff
0x677: V461 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V457
0x67a: V462 = ISZERO 0x1
0x67b: V463 = ISZERO 0x0
0x67c: V464 = MUL 0x1 0x1
0x67d: V465 = OR 0x1 V461
0x67f: S[0x8] = V465
---
Entry stack: [V10, 0x70d, V200, V215, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, V353]

================================

Block 0x681
[0x681:0x681]
---
Predecessors: [0x4b3, 0x64b]
Successors: [0x682]
---
0x681 JUMPDEST
---
0x681: JUMPDEST 
---
Entry stack: [V10, 0x70d, V200, V215, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, V200, V215, S0]

================================

Block 0x682
[0x682:0x682]
---
Predecessors: [0x2a1, 0x681]
Successors: [0x683]
---
0x682 JUMPDEST
---
0x682: JUMPDEST 
---
Entry stack: [V10, 0x70d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, S2, S1, S0]

================================

Block 0x683
[0x683:0x683]
---
Predecessors: [0x22c, 0x682]
Successors: [0x684]
---
0x683 JUMPDEST
---
0x683: JUMPDEST 
---
Entry stack: [V10, 0x70d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, S2, S1, S0]

================================

Block 0x684
[0x684:0x707]
---
Predecessors: [0x1da, 0x683]
Successors: [0x708]
---
0x684 JUMPDEST
0x685 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6a6 PUSH1 0x7
0x6a8 SLOAD
0x6a9 PUSH1 0x40
0x6ab MLOAD
0x6ac DUP1
0x6ad DUP3
0x6ae DUP2
0x6af MSTORE
0x6b0 PUSH1 0x20
0x6b2 ADD
0x6b3 SWAP2
0x6b4 POP
0x6b5 POP
0x6b6 PUSH1 0x40
0x6b8 MLOAD
0x6b9 DUP1
0x6ba SWAP2
0x6bb SUB
0x6bc SWAP1
0x6bd LOG1
0x6be PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6df PUSH1 0x8
0x6e1 PUSH1 0x0
0x6e3 SWAP1
0x6e4 SLOAD
0x6e5 SWAP1
0x6e6 PUSH2 0x100
0x6e9 EXP
0x6ea SWAP1
0x6eb DIV
0x6ec PUSH1 0xff
0x6ee AND
0x6ef PUSH1 0x40
0x6f1 MLOAD
0x6f2 DUP1
0x6f3 DUP3
0x6f4 ISZERO
0x6f5 ISZERO
0x6f6 ISZERO
0x6f7 ISZERO
0x6f8 DUP2
0x6f9 MSTORE
0x6fa PUSH1 0x20
0x6fc ADD
0x6fd SWAP2
0x6fe POP
0x6ff POP
0x700 PUSH1 0x40
0x702 MLOAD
0x703 DUP1
0x704 SWAP2
0x705 SUB
0x706 SWAP1
0x707 LOG1
---
0x684: JUMPDEST 
0x685: V466 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6a6: V467 = 0x7
0x6a8: V468 = S[0x7]
0x6a9: V469 = 0x40
0x6ab: V470 = M[0x40]
0x6af: M[V470] = V468
0x6b0: V471 = 0x20
0x6b2: V472 = ADD 0x20 V470
0x6b6: V473 = 0x40
0x6b8: V474 = M[0x40]
0x6bb: V475 = SUB V472 V474
0x6bd: LOG V474 V475 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6be: V476 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6df: V477 = 0x8
0x6e1: V478 = 0x0
0x6e4: V479 = S[0x8]
0x6e6: V480 = 0x100
0x6e9: V481 = EXP 0x100 0x0
0x6eb: V482 = DIV V479 0x1
0x6ec: V483 = 0xff
0x6ee: V484 = AND 0xff V482
0x6ef: V485 = 0x40
0x6f1: V486 = M[0x40]
0x6f4: V487 = ISZERO V484
0x6f5: V488 = ISZERO V487
0x6f6: V489 = ISZERO V488
0x6f7: V490 = ISZERO V489
0x6f9: M[V486] = V490
0x6fa: V491 = 0x20
0x6fc: V492 = ADD 0x20 V486
0x700: V493 = 0x40
0x702: V494 = M[0x40]
0x705: V495 = SUB V492 V494
0x707: LOG V494 V495 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V10, 0x70d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70d, S2, S1, S0]

================================

Block 0x708
[0x708:0x70c]
---
Predecessors: [0x684]
Successors: [0x70d]
---
0x708 JUMPDEST
0x709 POP
0x70a POP
0x70b POP
0x70c JUMP
---
0x708: JUMPDEST 
0x70c: JUMP 0x70d
---
Entry stack: [V10, 0x70d, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x70d
[0x70d:0x70e]
---
Predecessors: [0x708]
Successors: []
---
0x70d JUMPDEST
0x70e STOP
---
0x70d: JUMPDEST 
0x70e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x70f
[0x70f:0x715]
---
Predecessors: [0xb]
Successors: [0x716, 0x71a]
---
0x70f JUMPDEST
0x710 CALLVALUE
0x711 ISZERO
0x712 PUSH2 0x71a
0x715 JUMPI
---
0x70f: JUMPDEST 
0x710: V496 = CALLVALUE
0x711: V497 = ISZERO V496
0x712: V498 = 0x71a
0x715: JUMPI 0x71a V497
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x716
[0x716:0x719]
---
Predecessors: [0x70f]
Successors: []
---
0x716 PUSH1 0x0
0x718 DUP1
0x719 REVERT
---
0x716: V499 = 0x0
0x719: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x71a
[0x71a:0x721]
---
Predecessors: [0x70f]
Successors: [0x8f1]
---
0x71a JUMPDEST
0x71b PUSH2 0x722
0x71e PUSH2 0x8f1
0x721 JUMP
---
0x71a: JUMPDEST 
0x71b: V500 = 0x722
0x71e: V501 = 0x8f1
0x721: JUMP 0x8f1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V10, 0x722]

================================

Block 0x722
[0x722:0x723]
---
Predecessors: [0xb48]
Successors: []
---
0x722 JUMPDEST
0x723 STOP
---
0x722: JUMPDEST 
0x723: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x724
[0x724:0x72a]
---
Predecessors: [0x3f]
Successors: [0x72b, 0x72f]
---
0x724 JUMPDEST
0x725 CALLVALUE
0x726 ISZERO
0x727 PUSH2 0x72f
0x72a JUMPI
---
0x724: JUMPDEST 
0x725: V502 = CALLVALUE
0x726: V503 = ISZERO V502
0x727: V504 = 0x72f
0x72a: JUMPI 0x72f V503
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x72b
[0x72b:0x72e]
---
Predecessors: [0x724]
Successors: []
---
0x72b PUSH1 0x0
0x72d DUP1
0x72e REVERT
---
0x72b: V505 = 0x0
0x72e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x72f
[0x72f:0x736]
---
Predecessors: [0x724]
Successors: [0xb4a]
---
0x72f JUMPDEST
0x730 PUSH2 0x737
0x733 PUSH2 0xb4a
0x736 JUMP
---
0x72f: JUMPDEST 
0x730: V506 = 0x737
0x733: V507 = 0xb4a
0x736: JUMP 0xb4a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x737]
Exit stack: [V10, 0x737]

================================

Block 0x737
[0x737:0x778]
---
Predecessors: [0xb4a]
Successors: []
---
0x737 JUMPDEST
0x738 PUSH1 0x40
0x73a MLOAD
0x73b DUP1
0x73c DUP3
0x73d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x752 AND
0x753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x768 AND
0x769 DUP2
0x76a MSTORE
0x76b PUSH1 0x20
0x76d ADD
0x76e SWAP2
0x76f POP
0x770 POP
0x771 PUSH1 0x40
0x773 MLOAD
0x774 DUP1
0x775 SWAP2
0x776 SUB
0x777 SWAP1
0x778 RETURN
---
0x737: JUMPDEST 
0x738: V508 = 0x40
0x73a: V509 = M[0x40]
0x73d: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x752: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x753: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x768: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x76a: M[V509] = V513
0x76b: V514 = 0x20
0x76d: V515 = ADD 0x20 V509
0x771: V516 = 0x40
0x773: V517 = M[0x40]
0x776: V518 = SUB V515 V517
0x778: RETURN V517 V518
---
Entry stack: [V10, 0x737, V772]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x737]

================================

Block 0x779
[0x779:0x77f]
---
Predecessors: [0x4a]
Successors: [0x780, 0x784]
---
0x779 JUMPDEST
0x77a CALLVALUE
0x77b ISZERO
0x77c PUSH2 0x784
0x77f JUMPI
---
0x779: JUMPDEST 
0x77a: V519 = CALLVALUE
0x77b: V520 = ISZERO V519
0x77c: V521 = 0x784
0x77f: JUMPI 0x784 V520
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x780
[0x780:0x783]
---
Predecessors: [0x779]
Successors: []
---
0x780 PUSH1 0x0
0x782 DUP1
0x783 REVERT
---
0x780: V522 = 0x0
0x783: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x784
[0x784:0x78b]
---
Predecessors: [0x779]
Successors: [0xb6f]
---
0x784 JUMPDEST
0x785 PUSH2 0x78c
0x788 PUSH2 0xb6f
0x78b JUMP
---
0x784: JUMPDEST 
0x785: V523 = 0x78c
0x788: V524 = 0xb6f
0x78b: JUMP 0xb6f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78c]
Exit stack: [V10, 0x78c]

================================

Block 0x78c
[0x78c:0x7a1]
---
Predecessors: [0xb6f]
Successors: []
---
0x78c JUMPDEST
0x78d PUSH1 0x40
0x78f MLOAD
0x790 DUP1
0x791 DUP3
0x792 DUP2
0x793 MSTORE
0x794 PUSH1 0x20
0x796 ADD
0x797 SWAP2
0x798 POP
0x799 POP
0x79a PUSH1 0x40
0x79c MLOAD
0x79d DUP1
0x79e SWAP2
0x79f SUB
0x7a0 SWAP1
0x7a1 RETURN
---
0x78c: JUMPDEST 
0x78d: V525 = 0x40
0x78f: V526 = M[0x40]
0x793: M[V526] = V774
0x794: V527 = 0x20
0x796: V528 = ADD 0x20 V526
0x79a: V529 = 0x40
0x79c: V530 = M[0x40]
0x79f: V531 = SUB V528 V530
0x7a1: RETURN V530 V531
---
Entry stack: [V10, 0x78c, V774]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x78c]

================================

Block 0x7a2
[0x7a2:0x7a8]
---
Predecessors: [0x55]
Successors: [0x7a9, 0x7ad]
---
0x7a2 JUMPDEST
0x7a3 CALLVALUE
0x7a4 ISZERO
0x7a5 PUSH2 0x7ad
0x7a8 JUMPI
---
0x7a2: JUMPDEST 
0x7a3: V532 = CALLVALUE
0x7a4: V533 = ISZERO V532
0x7a5: V534 = 0x7ad
0x7a8: JUMPI 0x7ad V533
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7a9
[0x7a9:0x7ac]
---
Predecessors: [0x7a2]
Successors: []
---
0x7a9 PUSH1 0x0
0x7ab DUP1
0x7ac REVERT
---
0x7a9: V535 = 0x0
0x7ac: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7ad
[0x7ad:0x7b4]
---
Predecessors: [0x7a2]
Successors: [0xb75]
---
0x7ad JUMPDEST
0x7ae PUSH2 0x7b5
0x7b1 PUSH2 0xb75
0x7b4 JUMP
---
0x7ad: JUMPDEST 
0x7ae: V536 = 0x7b5
0x7b1: V537 = 0xb75
0x7b4: JUMP 0xb75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7b5]
Exit stack: [V10, 0x7b5]

================================

Block 0x7b5
[0x7b5:0x7ca]
---
Predecessors: [0xb75]
Successors: []
---
0x7b5 JUMPDEST
0x7b6 PUSH1 0x40
0x7b8 MLOAD
0x7b9 DUP1
0x7ba DUP3
0x7bb DUP2
0x7bc MSTORE
0x7bd PUSH1 0x20
0x7bf ADD
0x7c0 SWAP2
0x7c1 POP
0x7c2 POP
0x7c3 PUSH1 0x40
0x7c5 MLOAD
0x7c6 DUP1
0x7c7 SWAP2
0x7c8 SUB
0x7c9 SWAP1
0x7ca RETURN
---
0x7b5: JUMPDEST 
0x7b6: V538 = 0x40
0x7b8: V539 = M[0x40]
0x7bc: M[V539] = V776
0x7bd: V540 = 0x20
0x7bf: V541 = ADD 0x20 V539
0x7c3: V542 = 0x40
0x7c5: V543 = M[0x40]
0x7c8: V544 = SUB V541 V543
0x7ca: RETURN V543 V544
---
Entry stack: [V10, 0x7b5, V776]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7b5]

================================

Block 0x7cb
[0x7cb:0x7d1]
---
Predecessors: [0x60]
Successors: [0x7d2, 0x7d6]
---
0x7cb JUMPDEST
0x7cc CALLVALUE
0x7cd ISZERO
0x7ce PUSH2 0x7d6
0x7d1 JUMPI
---
0x7cb: JUMPDEST 
0x7cc: V545 = CALLVALUE
0x7cd: V546 = ISZERO V545
0x7ce: V547 = 0x7d6
0x7d1: JUMPI 0x7d6 V546
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7d2
[0x7d2:0x7d5]
---
Predecessors: [0x7cb]
Successors: []
---
0x7d2 PUSH1 0x0
0x7d4 DUP1
0x7d5 REVERT
---
0x7d2: V548 = 0x0
0x7d5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7d6
[0x7d6:0x7dd]
---
Predecessors: [0x7cb]
Successors: [0xb7b]
---
0x7d6 JUMPDEST
0x7d7 PUSH2 0x7de
0x7da PUSH2 0xb7b
0x7dd JUMP
---
0x7d6: JUMPDEST 
0x7d7: V549 = 0x7de
0x7da: V550 = 0xb7b
0x7dd: JUMP 0xb7b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7de]
Exit stack: [V10, 0x7de]

================================

Block 0x7de
[0x7de:0x81f]
---
Predecessors: [0xb7b]
Successors: []
---
0x7de JUMPDEST
0x7df PUSH1 0x40
0x7e1 MLOAD
0x7e2 DUP1
0x7e3 DUP3
0x7e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f9 AND
0x7fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80f AND
0x810 DUP2
0x811 MSTORE
0x812 PUSH1 0x20
0x814 ADD
0x815 SWAP2
0x816 POP
0x817 POP
0x818 PUSH1 0x40
0x81a MLOAD
0x81b DUP1
0x81c SWAP2
0x81d SUB
0x81e SWAP1
0x81f RETURN
---
0x7de: JUMPDEST 
0x7df: V551 = 0x40
0x7e1: V552 = M[0x40]
0x7e4: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f9: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0x7fa: V555 = 0xffffffffffffffffffffffffffffffffffffffff
0x80f: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x811: M[V552] = V556
0x812: V557 = 0x20
0x814: V558 = ADD 0x20 V552
0x818: V559 = 0x40
0x81a: V560 = M[0x40]
0x81d: V561 = SUB V558 V560
0x81f: RETURN V560 V561
---
Entry stack: [V10, 0x7de, V784]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7de]

================================

Block 0x820
[0x820:0x826]
---
Predecessors: [0x6b]
Successors: [0x827, 0x82b]
---
0x820 JUMPDEST
0x821 CALLVALUE
0x822 ISZERO
0x823 PUSH2 0x82b
0x826 JUMPI
---
0x820: JUMPDEST 
0x821: V562 = CALLVALUE
0x822: V563 = ISZERO V562
0x823: V564 = 0x82b
0x826: JUMPI 0x82b V563
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x827
[0x827:0x82a]
---
Predecessors: [0x820]
Successors: []
---
0x827 PUSH1 0x0
0x829 DUP1
0x82a REVERT
---
0x827: V565 = 0x0
0x82a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x82b
[0x82b:0x832]
---
Predecessors: [0x820]
Successors: [0xba1]
---
0x82b JUMPDEST
0x82c PUSH2 0x833
0x82f PUSH2 0xba1
0x832 JUMP
---
0x82b: JUMPDEST 
0x82c: V566 = 0x833
0x82f: V567 = 0xba1
0x832: JUMP 0xba1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x833]
Exit stack: [V10, 0x833]

================================

Block 0x833
[0x833:0x848]
---
Predecessors: [0xba1]
Successors: []
---
0x833 JUMPDEST
0x834 PUSH1 0x40
0x836 MLOAD
0x837 DUP1
0x838 DUP3
0x839 DUP2
0x83a MSTORE
0x83b PUSH1 0x20
0x83d ADD
0x83e SWAP2
0x83f POP
0x840 POP
0x841 PUSH1 0x40
0x843 MLOAD
0x844 DUP1
0x845 SWAP2
0x846 SUB
0x847 SWAP1
0x848 RETURN
---
0x833: JUMPDEST 
0x834: V568 = 0x40
0x836: V569 = M[0x40]
0x83a: M[V569] = V786
0x83b: V570 = 0x20
0x83d: V571 = ADD 0x20 V569
0x841: V572 = 0x40
0x843: V573 = M[0x40]
0x846: V574 = SUB V571 V573
0x848: RETURN V573 V574
---
Entry stack: [V10, 0x833, V786]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x833]

================================

Block 0x849
[0x849:0x84f]
---
Predecessors: [0x76]
Successors: [0x850, 0x854]
---
0x849 JUMPDEST
0x84a CALLVALUE
0x84b ISZERO
0x84c PUSH2 0x854
0x84f JUMPI
---
0x849: JUMPDEST 
0x84a: V575 = CALLVALUE
0x84b: V576 = ISZERO V575
0x84c: V577 = 0x854
0x84f: JUMPI 0x854 V576
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x850
[0x850:0x853]
---
Predecessors: [0x849]
Successors: []
---
0x850 PUSH1 0x0
0x852 DUP1
0x853 REVERT
---
0x850: V578 = 0x0
0x853: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x854
[0x854:0x85b]
---
Predecessors: [0x849]
Successors: [0xba7]
---
0x854 JUMPDEST
0x855 PUSH2 0x85c
0x858 PUSH2 0xba7
0x85b JUMP
---
0x854: JUMPDEST 
0x855: V579 = 0x85c
0x858: V580 = 0xba7
0x85b: JUMP 0xba7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x85c]
Exit stack: [V10, 0x85c]

================================

Block 0x85c
[0x85c:0x871]
---
Predecessors: [0xba7]
Successors: []
---
0x85c JUMPDEST
0x85d PUSH1 0x40
0x85f MLOAD
0x860 DUP1
0x861 DUP3
0x862 DUP2
0x863 MSTORE
0x864 PUSH1 0x20
0x866 ADD
0x867 SWAP2
0x868 POP
0x869 POP
0x86a PUSH1 0x40
0x86c MLOAD
0x86d DUP1
0x86e SWAP2
0x86f SUB
0x870 SWAP1
0x871 RETURN
---
0x85c: JUMPDEST 
0x85d: V581 = 0x40
0x85f: V582 = M[0x40]
0x863: M[V582] = V788
0x864: V583 = 0x20
0x866: V584 = ADD 0x20 V582
0x86a: V585 = 0x40
0x86c: V586 = M[0x40]
0x86f: V587 = SUB V584 V586
0x871: RETURN V586 V587
---
Entry stack: [V10, 0x85c, V788]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x85c]

================================

Block 0x872
[0x872:0x878]
---
Predecessors: [0x81]
Successors: [0x879, 0x87d]
---
0x872 JUMPDEST
0x873 CALLVALUE
0x874 ISZERO
0x875 PUSH2 0x87d
0x878 JUMPI
---
0x872: JUMPDEST 
0x873: V588 = CALLVALUE
0x874: V589 = ISZERO V588
0x875: V590 = 0x87d
0x878: JUMPI 0x87d V589
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x879
[0x879:0x87c]
---
Predecessors: [0x872]
Successors: []
---
0x879 PUSH1 0x0
0x87b DUP1
0x87c REVERT
---
0x879: V591 = 0x0
0x87c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x87d
[0x87d:0x884]
---
Predecessors: [0x872]
Successors: [0xbad]
---
0x87d JUMPDEST
0x87e PUSH2 0x885
0x881 PUSH2 0xbad
0x884 JUMP
---
0x87d: JUMPDEST 
0x87e: V592 = 0x885
0x881: V593 = 0xbad
0x884: JUMP 0xbad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x885]
Exit stack: [V10, 0x885]

================================

Block 0x885
[0x885:0x89a]
---
Predecessors: [0xbad]
Successors: []
---
0x885 JUMPDEST
0x886 PUSH1 0x40
0x888 MLOAD
0x889 DUP1
0x88a DUP3
0x88b DUP2
0x88c MSTORE
0x88d PUSH1 0x20
0x88f ADD
0x890 SWAP2
0x891 POP
0x892 POP
0x893 PUSH1 0x40
0x895 MLOAD
0x896 DUP1
0x897 SWAP2
0x898 SUB
0x899 SWAP1
0x89a RETURN
---
0x885: JUMPDEST 
0x886: V594 = 0x40
0x888: V595 = M[0x40]
0x88c: M[V595] = V790
0x88d: V596 = 0x20
0x88f: V597 = ADD 0x20 V595
0x893: V598 = 0x40
0x895: V599 = M[0x40]
0x898: V600 = SUB V597 V599
0x89a: RETURN V599 V600
---
Entry stack: [V10, 0x885, V790]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x885]

================================

Block 0x89b
[0x89b:0x8a1]
---
Predecessors: [0x8c]
Successors: [0x8a2, 0x8a6]
---
0x89b JUMPDEST
0x89c CALLVALUE
0x89d ISZERO
0x89e PUSH2 0x8a6
0x8a1 JUMPI
---
0x89b: JUMPDEST 
0x89c: V601 = CALLVALUE
0x89d: V602 = ISZERO V601
0x89e: V603 = 0x8a6
0x8a1: JUMPI 0x8a6 V602
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8a2
[0x8a2:0x8a5]
---
Predecessors: [0x89b]
Successors: []
---
0x8a2 PUSH1 0x0
0x8a4 DUP1
0x8a5 REVERT
---
0x8a2: V604 = 0x0
0x8a5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8a6
[0x8a6:0x8ad]
---
Predecessors: [0x89b]
Successors: [0xbb3]
---
0x8a6 JUMPDEST
0x8a7 PUSH2 0x8ae
0x8aa PUSH2 0xbb3
0x8ad JUMP
---
0x8a6: JUMPDEST 
0x8a7: V605 = 0x8ae
0x8aa: V606 = 0xbb3
0x8ad: JUMP 0xbb3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8ae]
Exit stack: [V10, 0x8ae]

================================

Block 0x8ae
[0x8ae:0x8c3]
---
Predecessors: [0xbb3]
Successors: []
---
0x8ae JUMPDEST
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 DUP1
0x8b3 DUP3
0x8b4 DUP2
0x8b5 MSTORE
0x8b6 PUSH1 0x20
0x8b8 ADD
0x8b9 SWAP2
0x8ba POP
0x8bb POP
0x8bc PUSH1 0x40
0x8be MLOAD
0x8bf DUP1
0x8c0 SWAP2
0x8c1 SUB
0x8c2 SWAP1
0x8c3 RETURN
---
0x8ae: JUMPDEST 
0x8af: V607 = 0x40
0x8b1: V608 = M[0x40]
0x8b5: M[V608] = V792
0x8b6: V609 = 0x20
0x8b8: V610 = ADD 0x20 V608
0x8bc: V611 = 0x40
0x8be: V612 = M[0x40]
0x8c1: V613 = SUB V610 V612
0x8c3: RETURN V612 V613
---
Entry stack: [V10, 0x8ae, V792]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x8ae]

================================

Block 0x8c4
[0x8c4:0x8ca]
---
Predecessors: [0x97]
Successors: [0x8cb, 0x8cf]
---
0x8c4 JUMPDEST
0x8c5 CALLVALUE
0x8c6 ISZERO
0x8c7 PUSH2 0x8cf
0x8ca JUMPI
---
0x8c4: JUMPDEST 
0x8c5: V614 = CALLVALUE
0x8c6: V615 = ISZERO V614
0x8c7: V616 = 0x8cf
0x8ca: JUMPI 0x8cf V615
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8cb
[0x8cb:0x8ce]
---
Predecessors: [0x8c4]
Successors: []
---
0x8cb PUSH1 0x0
0x8cd DUP1
0x8ce REVERT
---
0x8cb: V617 = 0x0
0x8ce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8cf
[0x8cf:0x8d6]
---
Predecessors: [0x8c4]
Successors: [0xbb9]
---
0x8cf JUMPDEST
0x8d0 PUSH2 0x8d7
0x8d3 PUSH2 0xbb9
0x8d6 JUMP
---
0x8cf: JUMPDEST 
0x8d0: V618 = 0x8d7
0x8d3: V619 = 0xbb9
0x8d6: JUMP 0xbb9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8d7]
Exit stack: [V10, 0x8d7]

================================

Block 0x8d7
[0x8d7:0x8f0]
---
Predecessors: [0xbb9]
Successors: []
---
0x8d7 JUMPDEST
0x8d8 PUSH1 0x40
0x8da MLOAD
0x8db DUP1
0x8dc DUP3
0x8dd ISZERO
0x8de ISZERO
0x8df ISZERO
0x8e0 ISZERO
0x8e1 DUP2
0x8e2 MSTORE
0x8e3 PUSH1 0x20
0x8e5 ADD
0x8e6 SWAP2
0x8e7 POP
0x8e8 POP
0x8e9 PUSH1 0x40
0x8eb MLOAD
0x8ec DUP1
0x8ed SWAP2
0x8ee SUB
0x8ef SWAP1
0x8f0 RETURN
---
0x8d7: JUMPDEST 
0x8d8: V620 = 0x40
0x8da: V621 = M[0x40]
0x8dd: V622 = ISZERO V800
0x8de: V623 = ISZERO V622
0x8df: V624 = ISZERO V623
0x8e0: V625 = ISZERO V624
0x8e2: M[V621] = V625
0x8e3: V626 = 0x20
0x8e5: V627 = ADD 0x20 V621
0x8e9: V628 = 0x40
0x8eb: V629 = M[0x40]
0x8ee: V630 = SUB V627 V629
0x8f0: RETURN V629 V630
---
Entry stack: [V10, 0x8d7, V800]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x8d7]

================================

Block 0x8f1
[0x8f1:0x907]
---
Predecessors: [0x71a]
Successors: [0x908, 0x90c]
---
0x8f1 JUMPDEST
0x8f2 PUSH1 0x8
0x8f4 PUSH1 0x0
0x8f6 SWAP1
0x8f7 SLOAD
0x8f8 SWAP1
0x8f9 PUSH2 0x100
0x8fc EXP
0x8fd SWAP1
0x8fe DIV
0x8ff PUSH1 0xff
0x901 AND
0x902 ISZERO
0x903 ISZERO
0x904 PUSH2 0x90c
0x907 JUMPI
---
0x8f1: JUMPDEST 
0x8f2: V631 = 0x8
0x8f4: V632 = 0x0
0x8f7: V633 = S[0x8]
0x8f9: V634 = 0x100
0x8fc: V635 = EXP 0x100 0x0
0x8fe: V636 = DIV V633 0x1
0x8ff: V637 = 0xff
0x901: V638 = AND 0xff V636
0x902: V639 = ISZERO V638
0x903: V640 = ISZERO V639
0x904: V641 = 0x90c
0x907: JUMPI 0x90c V640
---
Entry stack: [V10, 0x722]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722]

================================

Block 0x908
[0x908:0x90b]
---
Predecessors: [0x8f1]
Successors: []
---
0x908 PUSH1 0x0
0x90a DUP1
0x90b REVERT
---
0x908: V642 = 0x0
0x90b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x722]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722]

================================

Block 0x90c
[0x90c:0x963]
---
Predecessors: [0x8f1]
Successors: [0x964, 0x968]
---
0x90c JUMPDEST
0x90d PUSH1 0x8
0x90f PUSH1 0x1
0x911 SWAP1
0x912 SLOAD
0x913 SWAP1
0x914 PUSH2 0x100
0x917 EXP
0x918 SWAP1
0x919 DIV
0x91a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92f AND
0x930 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x945 AND
0x946 CALLER
0x947 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95c AND
0x95d EQ
0x95e ISZERO
0x95f ISZERO
0x960 PUSH2 0x968
0x963 JUMPI
---
0x90c: JUMPDEST 
0x90d: V643 = 0x8
0x90f: V644 = 0x1
0x912: V645 = S[0x8]
0x914: V646 = 0x100
0x917: V647 = EXP 0x100 0x1
0x919: V648 = DIV V645 0x100
0x91a: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0x92f: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0x930: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0x945: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x946: V653 = CALLER
0x947: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0x95c: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x95d: V656 = EQ V655 V652
0x95e: V657 = ISZERO V656
0x95f: V658 = ISZERO V657
0x960: V659 = 0x968
0x963: JUMPI 0x968 V658
---
Entry stack: [V10, 0x722]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722]

================================

Block 0x964
[0x964:0x967]
---
Predecessors: [0x90c]
Successors: []
---
0x964 PUSH1 0x0
0x966 DUP1
0x967 REVERT
---
0x964: V660 = 0x0
0x967: REVERT 0x0 0x0
---
Entry stack: [V10, 0x722]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722]

================================

Block 0x968
[0x968:0xa87]
---
Predecessors: [0x90c]
Successors: [0xa88, 0xa8c]
---
0x968 JUMPDEST
0x969 PUSH1 0x0
0x96b DUP1
0x96c SWAP1
0x96d SLOAD
0x96e SWAP1
0x96f PUSH2 0x100
0x972 EXP
0x973 SWAP1
0x974 DIV
0x975 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98a AND
0x98b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a0 AND
0x9a1 PUSH4 0xa9059cbb
0x9a6 PUSH1 0x8
0x9a8 PUSH1 0x1
0x9aa SWAP1
0x9ab SLOAD
0x9ac SWAP1
0x9ad PUSH2 0x100
0x9b0 EXP
0x9b1 SWAP1
0x9b2 DIV
0x9b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c8 AND
0x9c9 PUSH1 0x0
0x9cb DUP1
0x9cc SWAP1
0x9cd SLOAD
0x9ce SWAP1
0x9cf PUSH2 0x100
0x9d2 EXP
0x9d3 SWAP1
0x9d4 DIV
0x9d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ea AND
0x9eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa00 AND
0xa01 PUSH4 0x70a08231
0xa06 ADDRESS
0xa07 PUSH1 0x0
0xa09 PUSH1 0x40
0xa0b MLOAD
0xa0c PUSH1 0x20
0xa0e ADD
0xa0f MSTORE
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP3
0xa14 PUSH4 0xffffffff
0xa19 AND
0xa1a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa38 MUL
0xa39 DUP2
0xa3a MSTORE
0xa3b PUSH1 0x4
0xa3d ADD
0xa3e DUP1
0xa3f DUP3
0xa40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa55 AND
0xa56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6b AND
0xa6c DUP2
0xa6d MSTORE
0xa6e PUSH1 0x20
0xa70 ADD
0xa71 SWAP2
0xa72 POP
0xa73 POP
0xa74 PUSH1 0x20
0xa76 PUSH1 0x40
0xa78 MLOAD
0xa79 DUP1
0xa7a DUP4
0xa7b SUB
0xa7c DUP2
0xa7d PUSH1 0x0
0xa7f DUP8
0xa80 DUP1
0xa81 EXTCODESIZE
0xa82 ISZERO
0xa83 ISZERO
0xa84 PUSH2 0xa8c
0xa87 JUMPI
---
0x968: JUMPDEST 
0x969: V661 = 0x0
0x96d: V662 = S[0x0]
0x96f: V663 = 0x100
0x972: V664 = EXP 0x100 0x0
0x974: V665 = DIV V662 0x1
0x975: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0x98a: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x98b: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a0: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0x9a1: V670 = 0xa9059cbb
0x9a6: V671 = 0x8
0x9a8: V672 = 0x1
0x9ab: V673 = S[0x8]
0x9ad: V674 = 0x100
0x9b0: V675 = EXP 0x100 0x1
0x9b2: V676 = DIV V673 0x100
0x9b3: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c8: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0x9c9: V679 = 0x0
0x9cd: V680 = S[0x0]
0x9cf: V681 = 0x100
0x9d2: V682 = EXP 0x100 0x0
0x9d4: V683 = DIV V680 0x1
0x9d5: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ea: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0x9eb: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0xa01: V688 = 0x70a08231
0xa06: V689 = ADDRESS
0xa07: V690 = 0x0
0xa09: V691 = 0x40
0xa0b: V692 = M[0x40]
0xa0c: V693 = 0x20
0xa0e: V694 = ADD 0x20 V692
0xa0f: M[V694] = 0x0
0xa10: V695 = 0x40
0xa12: V696 = M[0x40]
0xa14: V697 = 0xffffffff
0xa19: V698 = AND 0xffffffff 0x70a08231
0xa1a: V699 = 0x100000000000000000000000000000000000000000000000000000000
0xa38: V700 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xa3a: M[V696] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa3b: V701 = 0x4
0xa3d: V702 = ADD 0x4 V696
0xa40: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xa55: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0xa56: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6b: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xa6d: M[V702] = V706
0xa6e: V707 = 0x20
0xa70: V708 = ADD 0x20 V702
0xa74: V709 = 0x20
0xa76: V710 = 0x40
0xa78: V711 = M[0x40]
0xa7b: V712 = SUB V708 V711
0xa7d: V713 = 0x0
0xa81: V714 = EXTCODESIZE V687
0xa82: V715 = ISZERO V714
0xa83: V716 = ISZERO V715
0xa84: V717 = 0xa8c
0xa87: JUMPI 0xa8c V716
---
Entry stack: [V10, 0x722]
Stack pops: 0
Stack additions: [V669, 0xa9059cbb, V678, V687, 0x70a08231, V708, 0x20, V711, V712, V711, 0x0, V687]
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708, 0x20, V711, V712, V711, 0x0, V687]

================================

Block 0xa88
[0xa88:0xa8b]
---
Predecessors: [0x968]
Successors: []
---
0xa88 PUSH1 0x0
0xa8a DUP1
0xa8b REVERT
---
0xa88: V718 = 0x0
0xa8b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708, 0x20, V711, V712, V711, 0x0, V687]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708, 0x20, V711, V712, V711, 0x0, V687]

================================

Block 0xa8c
[0xa8c:0xa98]
---
Predecessors: [0x968]
Successors: [0xa99, 0xa9d]
---
0xa8c JUMPDEST
0xa8d PUSH2 0x2c6
0xa90 GAS
0xa91 SUB
0xa92 CALL
0xa93 ISZERO
0xa94 ISZERO
0xa95 PUSH2 0xa9d
0xa98 JUMPI
---
0xa8c: JUMPDEST 
0xa8d: V719 = 0x2c6
0xa90: V720 = GAS
0xa91: V721 = SUB V720 0x2c6
0xa92: V722 = CALL V721 V687 0x0 V711 V712 V711 0x20
0xa93: V723 = ISZERO V722
0xa94: V724 = ISZERO V723
0xa95: V725 = 0xa9d
0xa98: JUMPI 0xa9d V724
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708, 0x20, V711, V712, V711, 0x0, V687]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708]

================================

Block 0xa99
[0xa99:0xa9c]
---
Predecessors: [0xa8c]
Successors: []
---
0xa99 PUSH1 0x0
0xa9b DUP1
0xa9c REVERT
---
0xa99: V726 = 0x0
0xa9c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708]

================================

Block 0xa9d
[0xa9d:0xb26]
---
Predecessors: [0xa8c]
Successors: [0xb27, 0xb2b]
---
0xa9d JUMPDEST
0xa9e POP
0xa9f POP
0xaa0 POP
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 DUP1
0xaa5 MLOAD
0xaa6 SWAP1
0xaa7 POP
0xaa8 PUSH1 0x40
0xaaa MLOAD
0xaab DUP4
0xaac PUSH4 0xffffffff
0xab1 AND
0xab2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xad0 MUL
0xad1 DUP2
0xad2 MSTORE
0xad3 PUSH1 0x4
0xad5 ADD
0xad6 DUP1
0xad7 DUP4
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed AND
0xaee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb03 AND
0xb04 DUP2
0xb05 MSTORE
0xb06 PUSH1 0x20
0xb08 ADD
0xb09 DUP3
0xb0a DUP2
0xb0b MSTORE
0xb0c PUSH1 0x20
0xb0e ADD
0xb0f SWAP3
0xb10 POP
0xb11 POP
0xb12 POP
0xb13 PUSH1 0x0
0xb15 PUSH1 0x40
0xb17 MLOAD
0xb18 DUP1
0xb19 DUP4
0xb1a SUB
0xb1b DUP2
0xb1c PUSH1 0x0
0xb1e DUP8
0xb1f DUP1
0xb20 EXTCODESIZE
0xb21 ISZERO
0xb22 ISZERO
0xb23 PUSH2 0xb2b
0xb26 JUMPI
---
0xa9d: JUMPDEST 
0xaa1: V727 = 0x40
0xaa3: V728 = M[0x40]
0xaa5: V729 = M[V728]
0xaa8: V730 = 0x40
0xaaa: V731 = M[0x40]
0xaac: V732 = 0xffffffff
0xab1: V733 = AND 0xffffffff 0xa9059cbb
0xab2: V734 = 0x100000000000000000000000000000000000000000000000000000000
0xad0: V735 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xad2: M[V731] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xad3: V736 = 0x4
0xad5: V737 = ADD 0x4 V731
0xad8: V738 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0xaee: V740 = 0xffffffffffffffffffffffffffffffffffffffff
0xb03: V741 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0xb05: M[V737] = V741
0xb06: V742 = 0x20
0xb08: V743 = ADD 0x20 V737
0xb0b: M[V743] = V729
0xb0c: V744 = 0x20
0xb0e: V745 = ADD 0x20 V743
0xb13: V746 = 0x0
0xb15: V747 = 0x40
0xb17: V748 = M[0x40]
0xb1a: V749 = SUB V745 V748
0xb1c: V750 = 0x0
0xb20: V751 = EXTCODESIZE V669
0xb21: V752 = ISZERO V751
0xb22: V753 = ISZERO V752
0xb23: V754 = 0xb2b
0xb26: JUMPI 0xb2b V753
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V678, V687, 0x70a08231, V708]
Stack pops: 6
Stack additions: [S5, S4, V745, 0x0, V748, V749, V748, 0x0, S5]
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V745, 0x0, V748, V749, V748, 0x0, V669]

================================

Block 0xb27
[0xb27:0xb2a]
---
Predecessors: [0xa9d]
Successors: []
---
0xb27 PUSH1 0x0
0xb29 DUP1
0xb2a REVERT
---
0xb27: V755 = 0x0
0xb2a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V745, 0x0, V748, V749, V748, 0x0, V669]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V745, 0x0, V748, V749, V748, 0x0, V669]

================================

Block 0xb2b
[0xb2b:0xb37]
---
Predecessors: [0xa9d]
Successors: [0xb38, 0xb3c]
---
0xb2b JUMPDEST
0xb2c PUSH2 0x2c6
0xb2f GAS
0xb30 SUB
0xb31 CALL
0xb32 ISZERO
0xb33 ISZERO
0xb34 PUSH2 0xb3c
0xb37 JUMPI
---
0xb2b: JUMPDEST 
0xb2c: V756 = 0x2c6
0xb2f: V757 = GAS
0xb30: V758 = SUB V757 0x2c6
0xb31: V759 = CALL V758 V669 0x0 V748 V749 V748 0x0
0xb32: V760 = ISZERO V759
0xb33: V761 = ISZERO V760
0xb34: V762 = 0xb3c
0xb37: JUMPI 0xb3c V761
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V745, 0x0, V748, V749, V748, 0x0, V669]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V745]

================================

Block 0xb38
[0xb38:0xb3b]
---
Predecessors: [0xb2b]
Successors: []
---
0xb38 PUSH1 0x0
0xb3a DUP1
0xb3b REVERT
---
0xb38: V763 = 0x0
0xb3b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V745]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x722, V669, 0xa9059cbb, V745]

================================

Block 0xb3c
[0xb3c:0xb47]
---
Predecessors: [0xb2b]
Successors: [0xb48]
---
0xb3c JUMPDEST
0xb3d POP
0xb3e POP
0xb3f POP
0xb40 PUSH1 0x0
0xb42 PUSH1 0x7
0xb44 DUP2
0xb45 SWAP1
0xb46 SSTORE
0xb47 POP
---
0xb3c: JUMPDEST 
0xb40: V764 = 0x0
0xb42: V765 = 0x7
0xb46: S[0x7] = 0x0
---
Entry stack: [V10, 0x722, V669, 0xa9059cbb, V745]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x722]

================================

Block 0xb48
[0xb48:0xb49]
---
Predecessors: [0xb3c]
Successors: [0x722]
---
0xb48 JUMPDEST
0xb49 JUMP
---
0xb48: JUMPDEST 
0xb49: JUMP 0x722
---
Entry stack: [V10, 0x722]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xb4a
[0xb4a:0xb6e]
---
Predecessors: [0x72f]
Successors: [0x737]
---
0xb4a JUMPDEST
0xb4b PUSH1 0x0
0xb4d DUP1
0xb4e SWAP1
0xb4f SLOAD
0xb50 SWAP1
0xb51 PUSH2 0x100
0xb54 EXP
0xb55 SWAP1
0xb56 DIV
0xb57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6c AND
0xb6d DUP2
0xb6e JUMP
---
0xb4a: JUMPDEST 
0xb4b: V766 = 0x0
0xb4f: V767 = S[0x0]
0xb51: V768 = 0x100
0xb54: V769 = EXP 0x100 0x0
0xb56: V770 = DIV V767 0x1
0xb57: V771 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6c: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xb6e: JUMP 0x737
---
Entry stack: [V10, 0x737]
Stack pops: 1
Stack additions: [S0, V772]
Exit stack: [V10, 0x737, V772]

================================

Block 0xb6f
[0xb6f:0xb74]
---
Predecessors: [0x784]
Successors: [0x78c]
---
0xb6f JUMPDEST
0xb70 PUSH1 0x6
0xb72 SLOAD
0xb73 DUP2
0xb74 JUMP
---
0xb6f: JUMPDEST 
0xb70: V773 = 0x6
0xb72: V774 = S[0x6]
0xb74: JUMP 0x78c
---
Entry stack: [V10, 0x78c]
Stack pops: 1
Stack additions: [S0, V774]
Exit stack: [V10, 0x78c, V774]

================================

Block 0xb75
[0xb75:0xb7a]
---
Predecessors: [0x7ad]
Successors: [0x7b5]
---
0xb75 JUMPDEST
0xb76 PUSH1 0x1
0xb78 SLOAD
0xb79 DUP2
0xb7a JUMP
---
0xb75: JUMPDEST 
0xb76: V775 = 0x1
0xb78: V776 = S[0x1]
0xb7a: JUMP 0x7b5
---
Entry stack: [V10, 0x7b5]
Stack pops: 1
Stack additions: [S0, V776]
Exit stack: [V10, 0x7b5, V776]

================================

Block 0xb7b
[0xb7b:0xba0]
---
Predecessors: [0x7d6]
Successors: [0x7de]
---
0xb7b JUMPDEST
0xb7c PUSH1 0x8
0xb7e PUSH1 0x1
0xb80 SWAP1
0xb81 SLOAD
0xb82 SWAP1
0xb83 PUSH2 0x100
0xb86 EXP
0xb87 SWAP1
0xb88 DIV
0xb89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9e AND
0xb9f DUP2
0xba0 JUMP
---
0xb7b: JUMPDEST 
0xb7c: V777 = 0x8
0xb7e: V778 = 0x1
0xb81: V779 = S[0x8]
0xb83: V780 = 0x100
0xb86: V781 = EXP 0x100 0x1
0xb88: V782 = DIV V779 0x100
0xb89: V783 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9e: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0xba0: JUMP 0x7de
---
Entry stack: [V10, 0x7de]
Stack pops: 1
Stack additions: [S0, V784]
Exit stack: [V10, 0x7de, V784]

================================

Block 0xba1
[0xba1:0xba6]
---
Predecessors: [0x82b]
Successors: [0x833]
---
0xba1 JUMPDEST
0xba2 PUSH1 0x7
0xba4 SLOAD
0xba5 DUP2
0xba6 JUMP
---
0xba1: JUMPDEST 
0xba2: V785 = 0x7
0xba4: V786 = S[0x7]
0xba6: JUMP 0x833
---
Entry stack: [V10, 0x833]
Stack pops: 1
Stack additions: [S0, V786]
Exit stack: [V10, 0x833, V786]

================================

Block 0xba7
[0xba7:0xbac]
---
Predecessors: [0x854]
Successors: [0x85c]
---
0xba7 JUMPDEST
0xba8 PUSH1 0x4
0xbaa SLOAD
0xbab DUP2
0xbac JUMP
---
0xba7: JUMPDEST 
0xba8: V787 = 0x4
0xbaa: V788 = S[0x4]
0xbac: JUMP 0x85c
---
Entry stack: [V10, 0x85c]
Stack pops: 1
Stack additions: [S0, V788]
Exit stack: [V10, 0x85c, V788]

================================

Block 0xbad
[0xbad:0xbb2]
---
Predecessors: [0x87d]
Successors: [0x885]
---
0xbad JUMPDEST
0xbae PUSH1 0x2
0xbb0 SLOAD
0xbb1 DUP2
0xbb2 JUMP
---
0xbad: JUMPDEST 
0xbae: V789 = 0x2
0xbb0: V790 = S[0x2]
0xbb2: JUMP 0x885
---
Entry stack: [V10, 0x885]
Stack pops: 1
Stack additions: [S0, V790]
Exit stack: [V10, 0x885, V790]

================================

Block 0xbb3
[0xbb3:0xbb8]
---
Predecessors: [0x8a6]
Successors: [0x8ae]
---
0xbb3 JUMPDEST
0xbb4 PUSH1 0x3
0xbb6 SLOAD
0xbb7 DUP2
0xbb8 JUMP
---
0xbb3: JUMPDEST 
0xbb4: V791 = 0x3
0xbb6: V792 = S[0x3]
0xbb8: JUMP 0x8ae
---
Entry stack: [V10, 0x8ae]
Stack pops: 1
Stack additions: [S0, V792]
Exit stack: [V10, 0x8ae, V792]

================================

Block 0xbb9
[0xbb9:0xbcb]
---
Predecessors: [0x8cf]
Successors: [0x8d7]
---
0xbb9 JUMPDEST
0xbba PUSH1 0x8
0xbbc PUSH1 0x0
0xbbe SWAP1
0xbbf SLOAD
0xbc0 SWAP1
0xbc1 PUSH2 0x100
0xbc4 EXP
0xbc5 SWAP1
0xbc6 DIV
0xbc7 PUSH1 0xff
0xbc9 AND
0xbca DUP2
0xbcb JUMP
---
0xbb9: JUMPDEST 
0xbba: V793 = 0x8
0xbbc: V794 = 0x0
0xbbf: V795 = S[0x8]
0xbc1: V796 = 0x100
0xbc4: V797 = EXP 0x100 0x0
0xbc6: V798 = DIV V795 0x1
0xbc7: V799 = 0xff
0xbc9: V800 = AND 0xff V798
0xbcb: JUMP 0x8d7
---
Entry stack: [V10, 0x8d7]
Stack pops: 1
Stack additions: [S0, V800]
Exit stack: [V10, 0x8d7, V800]

================================

Block 0xbcc
[0xbcc:0xbf9]
---
Predecessors: []
Successors: []
---
0xbcc STOP
0xbcd LOG1
0xbce PUSH6 0x627a7a723058
0xbd5 SHA3
0xbd6 CALLER
0xbd7 DELEGATECALL
0xbd8 MISSING 0x26
0xbd9 SWAP11
0xbda PUSH5 0xc4294d3a4c
0xbe0 MISSING 0xea
0xbe1 MISSING 0xc4
0xbe2 SWAP8
0xbe3 MISSING 0x4e
0xbe4 TIMESTAMP
0xbe5 PUSH20 0xf4459063d03ada5d6e51d6f5b0bd09340029
---
0xbcc: STOP 
0xbcd: LOG S0 S1 S2
0xbce: V801 = 0x627a7a723058
0xbd5: V802 = SHA3 0x627a7a723058 S3
0xbd6: V803 = CALLER
0xbd7: V804 = DELEGATECALL V803 V802 S4 S5 S6 S7
0xbd8: MISSING 0x26
0xbda: V805 = 0xc4294d3a4c
0xbe0: MISSING 0xea
0xbe1: MISSING 0xc4
0xbe3: MISSING 0x4e
0xbe4: V806 = TIMESTAMP
0xbe5: V807 = 0xf4459063d03ada5d6e51d6f5b0bd09340029
---
Entry stack: []
Stack pops: 0
Stack additions: [V804, 0xc4294d3a4c, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, S8, S1, S2, S3, S4, S5, S6, S7, S0, 0xf4459063d03ada5d6e51d6f5b0bd09340029, V806]
Exit stack: []

================================

Function 0:
Public function signature: 0xd6103a1
Entry block: 0x70f
Exit block: 0x722
Body: 0x70f, 0x716, 0x71a, 0x722, 0x8f1, 0x908, 0x90c, 0x964, 0x968, 0xa88, 0xa8c, 0xa99, 0xa9d, 0xb27, 0xb2b, 0xb38, 0xb3c, 0xb48

Function 1:
Public function signature: 0x27ebcf0e
Entry block: 0x724
Exit block: 0x737
Body: 0x724, 0x72b, 0x72f, 0x737, 0xb4a

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x779
Exit block: 0x78c
Body: 0x779, 0x780, 0x784, 0x78c, 0xb6f

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x7a2
Exit block: 0x7b5
Body: 0x7a2, 0x7a9, 0x7ad, 0x7b5, 0xb75

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x7cb
Exit block: 0x7de
Body: 0x7cb, 0x7d2, 0x7d6, 0x7de, 0xb7b

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x820
Exit block: 0x833
Body: 0x820, 0x827, 0x82b, 0x833, 0xba1

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x849
Exit block: 0x85c
Body: 0x849, 0x850, 0x854, 0x85c, 0xba7

Function 7:
Public function signature: 0xb44eccc9
Entry block: 0x872
Exit block: 0x885
Body: 0x872, 0x879, 0x87d, 0x885, 0xbad

Function 8:
Public function signature: 0xc8e569a8
Entry block: 0x89b
Exit block: 0x8ae
Body: 0x89b, 0x8a2, 0x8a6, 0x8ae, 0xbb3

Function 9:
Public function signature: 0xccb07cef
Entry block: 0x8c4
Exit block: 0x8d7
Body: 0x8c4, 0x8cb, 0x8cf, 0x8d7, 0xbb9

Function 10:
Public fallback function
Entry block: 0xa2
Exit block: 0x647
Body: 0xa2, 0xa6, 0x16b, 0x16f, 0x17c, 0x180, 0x19b, 0x1d6, 0x1da, 0x1df, 0x1ed, 0x228, 0x22c, 0x24c, 0x262, 0x29d, 0x2a1, 0x2a6, 0x2b5, 0x2b6, 0x2c5, 0x2c9, 0x2d9, 0x2da, 0x2e9, 0x346, 0x34a, 0x353, 0x390, 0x394, 0x395, 0x454, 0x458, 0x465, 0x469, 0x498, 0x4b3, 0x4b8, 0x4ca, 0x4cb, 0x52c, 0x530, 0x5f1, 0x5f5, 0x602, 0x606, 0x647, 0x64b, 0x681, 0x682, 0x683, 0x684, 0x708, 0x70d

