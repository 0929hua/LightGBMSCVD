Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x3bc5de30
0x34 EQ
0x35 PUSH2 0x49
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x3bc5de30
0x34: V9 = EQ 0x3bc5de30 V7
0x35: V10 = 0x49
0x38: JUMPI 0x49 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xd8]
---
0x39 DUP1
0x3a PUSH4 0x47064d6a
0x3f EQ
0x40 PUSH2 0xd8
0x43 JUMPI
---
0x3a: V11 = 0x47064d6a
0x3f: V12 = EQ 0x47064d6a V7
0x40: V13 = 0xd8
0x43: JUMPI 0xd8 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x48]
---
Predecessors: [0x39]
Successors: []
---
0x44 JUMPDEST
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x44: JUMPDEST 
0x45: V14 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0x4f]
---
Predecessors: [0x0]
Successors: [0x50, 0x54]
---
0x49 JUMPDEST
0x4a CALLVALUE
0x4b ISZERO
0x4c PUSH2 0x54
0x4f JUMPI
---
0x49: JUMPDEST 
0x4a: V15 = CALLVALUE
0x4b: V16 = ISZERO V15
0x4c: V17 = 0x54
0x4f: JUMPI 0x54 V16
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x50
[0x50:0x53]
---
Predecessors: [0x49]
Successors: []
---
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x50: V18 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5b]
---
Predecessors: [0x49]
Successors: [0x135]
---
0x54 JUMPDEST
0x55 PUSH2 0x5c
0x58 PUSH2 0x135
0x5b JUMP
---
0x54: JUMPDEST 
0x55: V19 = 0x5c
0x58: V20 = 0x135
0x5b: JUMP 0x135
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x5c]
Exit stack: [V7, 0x5c]

================================

Block 0x5c
[0x5c:0x80]
---
Predecessors: [0x1db]
Successors: [0x81]
---
0x5c JUMPDEST
0x5d PUSH1 0x40
0x5f MLOAD
0x60 DUP1
0x61 DUP1
0x62 PUSH1 0x20
0x64 ADD
0x65 DUP3
0x66 DUP2
0x67 SUB
0x68 DUP3
0x69 MSTORE
0x6a DUP4
0x6b DUP2
0x6c DUP2
0x6d MLOAD
0x6e DUP2
0x6f MSTORE
0x70 PUSH1 0x20
0x72 ADD
0x73 SWAP2
0x74 POP
0x75 DUP1
0x76 MLOAD
0x77 SWAP1
0x78 PUSH1 0x20
0x7a ADD
0x7b SWAP1
0x7c DUP1
0x7d DUP4
0x7e DUP4
0x7f PUSH1 0x0
---
0x5c: JUMPDEST 
0x5d: V21 = 0x40
0x5f: V22 = M[0x40]
0x62: V23 = 0x20
0x64: V24 = ADD 0x20 V22
0x67: V25 = SUB V24 V22
0x69: M[V22] = V25
0x6d: V26 = M[V112]
0x6f: M[V24] = V26
0x70: V27 = 0x20
0x72: V28 = ADD 0x20 V24
0x76: V29 = M[V112]
0x78: V30 = 0x20
0x7a: V31 = ADD 0x20 V112
0x7f: V32 = 0x0
---
Entry stack: [V7, V112]
Stack pops: 1
Stack additions: [S0, V22, V22, V28, V31, V29, V29, V28, V31, 0x0]
Exit stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, 0x0]

================================

Block 0x81
[0x81:0x89]
---
Predecessors: [0x5c, 0x92]
Successors: [0x8a, 0x9d]
---
0x81 JUMPDEST
0x82 DUP4
0x83 DUP2
0x84 LT
0x85 ISZERO
0x86 PUSH2 0x9d
0x89 JUMPI
---
0x81: JUMPDEST 
0x84: V33 = LT S0 V29
0x85: V34 = ISZERO V33
0x86: V35 = 0x9d
0x89: JUMPI 0x9d V34
---
Entry stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, S0]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x81]
Successors: [0x92]
---
0x8a DUP1
0x8b DUP3
0x8c ADD
0x8d MLOAD
0x8e DUP2
0x8f DUP5
0x90 ADD
0x91 MSTORE
---
0x8c: V36 = ADD V31 S0
0x8d: V37 = M[V36]
0x90: V38 = ADD V28 S0
0x91: M[V38] = V37
---
Entry stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, S0]

================================

Block 0x92
[0x92:0x9c]
---
Predecessors: [0x8a]
Successors: [0x81]
---
0x92 JUMPDEST
0x93 PUSH1 0x20
0x95 DUP2
0x96 ADD
0x97 SWAP1
0x98 POP
0x99 PUSH2 0x81
0x9c JUMP
---
0x92: JUMPDEST 
0x93: V39 = 0x20
0x96: V40 = ADD S0 0x20
0x99: V41 = 0x81
0x9c: JUMP 0x81
---
Entry stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, S0]
Stack pops: 1
Stack additions: [V40]
Exit stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, V40]

================================

Block 0x9d
[0x9d:0xb0]
---
Predecessors: [0x81]
Successors: [0xb1, 0xca]
---
0x9d JUMPDEST
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 SWAP1
0xa3 POP
0xa4 SWAP1
0xa5 DUP2
0xa6 ADD
0xa7 SWAP1
0xa8 PUSH1 0x1f
0xaa AND
0xab DUP1
0xac ISZERO
0xad PUSH2 0xca
0xb0 JUMPI
---
0x9d: JUMPDEST 
0xa6: V42 = ADD V29 V28
0xa8: V43 = 0x1f
0xaa: V44 = AND 0x1f V29
0xac: V45 = ISZERO V44
0xad: V46 = 0xca
0xb0: JUMPI 0xca V45
---
Entry stack: [V7, V112, V22, V22, V28, V31, V29, V29, V28, V31, S0]
Stack pops: 7
Stack additions: [V42, V44]
Exit stack: [V7, V112, V22, V22, V42, V44]

================================

Block 0xb1
[0xb1:0xc9]
---
Predecessors: [0x9d]
Successors: [0xca]
---
0xb1 DUP1
0xb2 DUP3
0xb3 SUB
0xb4 DUP1
0xb5 MLOAD
0xb6 PUSH1 0x1
0xb8 DUP4
0xb9 PUSH1 0x20
0xbb SUB
0xbc PUSH2 0x100
0xbf EXP
0xc0 SUB
0xc1 NOT
0xc2 AND
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP2
0xc9 POP
---
0xb3: V47 = SUB V42 V44
0xb5: V48 = M[V47]
0xb6: V49 = 0x1
0xb9: V50 = 0x20
0xbb: V51 = SUB 0x20 V44
0xbc: V52 = 0x100
0xbf: V53 = EXP 0x100 V51
0xc0: V54 = SUB V53 0x1
0xc1: V55 = NOT V54
0xc2: V56 = AND V55 V48
0xc4: M[V47] = V56
0xc5: V57 = 0x20
0xc7: V58 = ADD 0x20 V47
---
Entry stack: [V7, V112, V22, V22, V42, V44]
Stack pops: 2
Stack additions: [V58, S0]
Exit stack: [V7, V112, V22, V22, V58, V44]

================================

Block 0xca
[0xca:0xd7]
---
Predecessors: [0x9d, 0xb1]
Successors: []
---
0xca JUMPDEST
0xcb POP
0xcc SWAP3
0xcd POP
0xce POP
0xcf POP
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 SWAP2
0xd5 SUB
0xd6 SWAP1
0xd7 RETURN
---
0xca: JUMPDEST 
0xd0: V59 = 0x40
0xd2: V60 = M[0x40]
0xd5: V61 = SUB S1 V60
0xd7: RETURN V60 V61
---
Entry stack: [V7, V112, V22, V22, S1, V44]
Stack pops: 5
Stack additions: []
Exit stack: [V7]

================================

Block 0xd8
[0xd8:0xde]
---
Predecessors: [0x39]
Successors: [0xdf, 0xe3]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda ISZERO
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd8: JUMPDEST 
0xd9: V62 = CALLVALUE
0xda: V63 = ISZERO V62
0xdb: V64 = 0xe3
0xde: JUMPI 0xe3 V63
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd8]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V65 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe3
[0xe3:0x132]
---
Predecessors: [0xd8]
Successors: [0x1de]
---
0xe3 JUMPDEST
0xe4 PUSH2 0x133
0xe7 PUSH1 0x4
0xe9 DUP1
0xea DUP1
0xeb CALLDATALOAD
0xec SWAP1
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP1
0xf1 DUP3
0xf2 ADD
0xf3 DUP1
0xf4 CALLDATALOAD
0xf5 SWAP1
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa DUP1
0xfb DUP1
0xfc PUSH1 0x1f
0xfe ADD
0xff PUSH1 0x20
0x101 DUP1
0x102 SWAP2
0x103 DIV
0x104 MUL
0x105 PUSH1 0x20
0x107 ADD
0x108 PUSH1 0x40
0x10a MLOAD
0x10b SWAP1
0x10c DUP2
0x10d ADD
0x10e PUSH1 0x40
0x110 MSTORE
0x111 DUP1
0x112 SWAP4
0x113 SWAP3
0x114 SWAP2
0x115 SWAP1
0x116 DUP2
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c DUP4
0x11d DUP4
0x11e DUP1
0x11f DUP3
0x120 DUP5
0x121 CALLDATACOPY
0x122 DUP3
0x123 ADD
0x124 SWAP2
0x125 POP
0x126 POP
0x127 POP
0x128 POP
0x129 POP
0x12a POP
0x12b SWAP2
0x12c SWAP1
0x12d POP
0x12e POP
0x12f PUSH2 0x1de
0x132 JUMP
---
0xe3: JUMPDEST 
0xe4: V66 = 0x133
0xe7: V67 = 0x4
0xeb: V68 = CALLDATALOAD 0x4
0xed: V69 = 0x20
0xef: V70 = ADD 0x20 0x4
0xf2: V71 = ADD 0x4 V68
0xf4: V72 = CALLDATALOAD V71
0xf6: V73 = 0x20
0xf8: V74 = ADD 0x20 V71
0xfc: V75 = 0x1f
0xfe: V76 = ADD 0x1f V72
0xff: V77 = 0x20
0x103: V78 = DIV V76 0x20
0x104: V79 = MUL V78 0x20
0x105: V80 = 0x20
0x107: V81 = ADD 0x20 V79
0x108: V82 = 0x40
0x10a: V83 = M[0x40]
0x10d: V84 = ADD V83 V81
0x10e: V85 = 0x40
0x110: M[0x40] = V84
0x118: M[V83] = V72
0x119: V86 = 0x20
0x11b: V87 = ADD 0x20 V83
0x121: CALLDATACOPY V87 V74 V72
0x123: V88 = ADD V87 V72
0x12f: V89 = 0x1de
0x132: JUMP 0x1de
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x133, V83]
Exit stack: [V7, 0x133, V83]

================================

Block 0x133
[0x133:0x134]
---
Predecessors: [0x1f6]
Successors: []
---
0x133 JUMPDEST
0x134 STOP
---
0x133: JUMPDEST 
0x134: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x54]
Successors: [0x1f9]
---
0x135 JUMPDEST
0x136 PUSH2 0x13d
0x139 PUSH2 0x1f9
0x13c JUMP
---
0x135: JUMPDEST 
0x136: V90 = 0x13d
0x139: V91 = 0x1f9
0x13c: JUMP 0x1f9
---
Entry stack: [V7, 0x5c]
Stack pops: 0
Stack additions: [0x13d]
Exit stack: [V7, 0x5c, 0x13d]

================================

Block 0x13d
[0x13d:0x18c]
---
Predecessors: [0x1f9]
Successors: [0x18d, 0x1d3]
---
0x13d JUMPDEST
0x13e PUSH1 0x0
0x140 DUP1
0x141 SLOAD
0x142 PUSH1 0x1
0x144 DUP2
0x145 PUSH1 0x1
0x147 AND
0x148 ISZERO
0x149 PUSH2 0x100
0x14c MUL
0x14d SUB
0x14e AND
0x14f PUSH1 0x2
0x151 SWAP1
0x152 DIV
0x153 DUP1
0x154 PUSH1 0x1f
0x156 ADD
0x157 PUSH1 0x20
0x159 DUP1
0x15a SWAP2
0x15b DIV
0x15c MUL
0x15d PUSH1 0x20
0x15f ADD
0x160 PUSH1 0x40
0x162 MLOAD
0x163 SWAP1
0x164 DUP2
0x165 ADD
0x166 PUSH1 0x40
0x168 MSTORE
0x169 DUP1
0x16a SWAP3
0x16b SWAP2
0x16c SWAP1
0x16d DUP2
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x20
0x172 ADD
0x173 DUP3
0x174 DUP1
0x175 SLOAD
0x176 PUSH1 0x1
0x178 DUP2
0x179 PUSH1 0x1
0x17b AND
0x17c ISZERO
0x17d PUSH2 0x100
0x180 MUL
0x181 SUB
0x182 AND
0x183 PUSH1 0x2
0x185 SWAP1
0x186 DIV
0x187 DUP1
0x188 ISZERO
0x189 PUSH2 0x1d3
0x18c JUMPI
---
0x13d: JUMPDEST 
0x13e: V92 = 0x0
0x141: V93 = S[0x0]
0x142: V94 = 0x1
0x145: V95 = 0x1
0x147: V96 = AND 0x1 V93
0x148: V97 = ISZERO V96
0x149: V98 = 0x100
0x14c: V99 = MUL 0x100 V97
0x14d: V100 = SUB V99 0x1
0x14e: V101 = AND V100 V93
0x14f: V102 = 0x2
0x152: V103 = DIV V101 0x2
0x154: V104 = 0x1f
0x156: V105 = ADD 0x1f V103
0x157: V106 = 0x20
0x15b: V107 = DIV V105 0x20
0x15c: V108 = MUL V107 0x20
0x15d: V109 = 0x20
0x15f: V110 = ADD 0x20 V108
0x160: V111 = 0x40
0x162: V112 = M[0x40]
0x165: V113 = ADD V112 V110
0x166: V114 = 0x40
0x168: M[0x40] = V113
0x16f: M[V112] = V103
0x170: V115 = 0x20
0x172: V116 = ADD 0x20 V112
0x175: V117 = S[0x0]
0x176: V118 = 0x1
0x179: V119 = 0x1
0x17b: V120 = AND 0x1 V117
0x17c: V121 = ISZERO V120
0x17d: V122 = 0x100
0x180: V123 = MUL 0x100 V121
0x181: V124 = SUB V123 0x1
0x182: V125 = AND V124 V117
0x183: V126 = 0x2
0x186: V127 = DIV V125 0x2
0x188: V128 = ISZERO V127
0x189: V129 = 0x1d3
0x18c: JUMPI 0x1d3 V128
---
Entry stack: [V7, 0x5c, V164]
Stack pops: 0
Stack additions: [V112, 0x0, V103, V116, 0x0, V127]
Exit stack: [V7, 0x5c, V164, V112, 0x0, V103, V116, 0x0, V127]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x13d]
Successors: [0x195, 0x1a8]
---
0x18d DUP1
0x18e PUSH1 0x1f
0x190 LT
0x191 PUSH2 0x1a8
0x194 JUMPI
---
0x18e: V130 = 0x1f
0x190: V131 = LT 0x1f V127
0x191: V132 = 0x1a8
0x194: JUMPI 0x1a8 V131
---
Entry stack: [V7, 0x5c, V164, V112, 0x0, V103, V116, 0x0, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x5c, V164, V112, 0x0, V103, V116, 0x0, V127]

================================

Block 0x195
[0x195:0x1a7]
---
Predecessors: [0x18d]
Successors: [0x1d3]
---
0x195 PUSH2 0x100
0x198 DUP1
0x199 DUP4
0x19a SLOAD
0x19b DIV
0x19c MUL
0x19d DUP4
0x19e MSTORE
0x19f SWAP2
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP2
0x1a4 PUSH2 0x1d3
0x1a7 JUMP
---
0x195: V133 = 0x100
0x19a: V134 = S[0x0]
0x19b: V135 = DIV V134 0x100
0x19c: V136 = MUL V135 0x100
0x19e: M[V116] = V136
0x1a0: V137 = 0x20
0x1a2: V138 = ADD 0x20 V116
0x1a4: V139 = 0x1d3
0x1a7: JUMP 0x1d3
---
Entry stack: [V7, 0x5c, V164, V112, 0x0, V103, V116, 0x0, V127]
Stack pops: 3
Stack additions: [V138, S1, S0]
Exit stack: [V7, 0x5c, V164, V112, 0x0, V103, V138, 0x0, V127]

================================

Block 0x1a8
[0x1a8:0x1b5]
---
Predecessors: [0x18d]
Successors: [0x1b6]
---
0x1a8 JUMPDEST
0x1a9 DUP3
0x1aa ADD
0x1ab SWAP2
0x1ac SWAP1
0x1ad PUSH1 0x0
0x1af MSTORE
0x1b0 PUSH1 0x20
0x1b2 PUSH1 0x0
0x1b4 SHA3
0x1b5 SWAP1
---
0x1a8: JUMPDEST 
0x1aa: V140 = ADD V116 V127
0x1ad: V141 = 0x0
0x1af: M[0x0] = 0x0
0x1b0: V142 = 0x20
0x1b2: V143 = 0x0
0x1b4: V144 = SHA3 0x0 0x20
---
Entry stack: [V7, 0x5c, V164, V112, 0x0, V103, V116, 0x0, V127]
Stack pops: 3
Stack additions: [V140, V144, S2]
Exit stack: [V7, 0x5c, V164, V112, 0x0, V103, V140, V144, V116]

================================

Block 0x1b6
[0x1b6:0x1c9]
---
Predecessors: [0x1a8, 0x1b6]
Successors: [0x1b6, 0x1ca]
---
0x1b6 JUMPDEST
0x1b7 DUP2
0x1b8 SLOAD
0x1b9 DUP2
0x1ba MSTORE
0x1bb SWAP1
0x1bc PUSH1 0x1
0x1be ADD
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 DUP1
0x1c4 DUP4
0x1c5 GT
0x1c6 PUSH2 0x1b6
0x1c9 JUMPI
---
0x1b6: JUMPDEST 
0x1b8: V145 = S[S1]
0x1ba: M[S0] = V145
0x1bc: V146 = 0x1
0x1be: V147 = ADD 0x1 S1
0x1c0: V148 = 0x20
0x1c2: V149 = ADD 0x20 S0
0x1c5: V150 = GT V140 V149
0x1c6: V151 = 0x1b6
0x1c9: JUMPI 0x1b6 V150
---
Entry stack: [V7, 0x5c, V164, V112, 0x0, V103, V140, S1, S0]
Stack pops: 3
Stack additions: [S2, V147, V149]
Exit stack: [V7, 0x5c, V164, V112, 0x0, V103, V140, V147, V149]

================================

Block 0x1ca
[0x1ca:0x1d2]
---
Predecessors: [0x1b6]
Successors: [0x1d3]
---
0x1ca DUP3
0x1cb SWAP1
0x1cc SUB
0x1cd PUSH1 0x1f
0x1cf AND
0x1d0 DUP3
0x1d1 ADD
0x1d2 SWAP2
---
0x1cc: V152 = SUB V149 V140
0x1cd: V153 = 0x1f
0x1cf: V154 = AND 0x1f V152
0x1d1: V155 = ADD V140 V154
---
Entry stack: [V7, 0x5c, V164, V112, 0x0, V103, V140, V147, V149]
Stack pops: 3
Stack additions: [V155, S1, S2]
Exit stack: [V7, 0x5c, V164, V112, 0x0, V103, V155, V147, V140]

================================

Block 0x1d3
[0x1d3:0x1da]
---
Predecessors: [0x13d, 0x195, 0x1ca]
Successors: [0x1db]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 SWAP1
0x1da POP
---
0x1d3: JUMPDEST 
---
Entry stack: [V7, 0x5c, V164, V112, 0x0, V103, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V7, 0x5c, V112]

================================

Block 0x1db
[0x1db:0x1dd]
---
Predecessors: [0x1d3]
Successors: [0x5c]
---
0x1db JUMPDEST
0x1dc SWAP1
0x1dd JUMP
---
0x1db: JUMPDEST 
0x1dd: JUMP 0x5c
---
Entry stack: [V7, 0x5c, V112]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V112]

================================

Block 0x1de
[0x1de:0x1f3]
---
Predecessors: [0xe3]
Successors: [0x20d]
---
0x1de JUMPDEST
0x1df DUP1
0x1e0 PUSH1 0x0
0x1e2 SWAP1
0x1e3 DUP1
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP1
0x1ea PUSH2 0x1f4
0x1ed SWAP3
0x1ee SWAP2
0x1ef SWAP1
0x1f0 PUSH2 0x20d
0x1f3 JUMP
---
0x1de: JUMPDEST 
0x1e0: V156 = 0x0
0x1e4: V157 = M[V83]
0x1e6: V158 = 0x20
0x1e8: V159 = ADD 0x20 V83
0x1ea: V160 = 0x1f4
0x1f0: V161 = 0x20d
0x1f3: JUMP 0x20d
---
Entry stack: [V7, 0x133, V83]
Stack pops: 1
Stack additions: [S0, 0x1f4, 0x0, V159, V157]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V159, V157]

================================

Block 0x1f4
[0x1f4:0x1f5]
---
Predecessors: [0x289]
Successors: [0x1f6]
---
0x1f4 JUMPDEST
0x1f5 POP
---
0x1f4: JUMPDEST 
---
Entry stack: [V7, 0x133, V83, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x133, V83]

================================

Block 0x1f6
[0x1f6:0x1f8]
---
Predecessors: [0x1f4]
Successors: [0x133]
---
0x1f6 JUMPDEST
0x1f7 POP
0x1f8 JUMP
---
0x1f6: JUMPDEST 
0x1f8: JUMP 0x133
---
Entry stack: [V7, 0x133, V83]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x1f9
[0x1f9:0x20c]
---
Predecessors: [0x135]
Successors: [0x13d]
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x20
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff SWAP1
0x200 DUP2
0x201 ADD
0x202 PUSH1 0x40
0x204 MSTORE
0x205 DUP1
0x206 PUSH1 0x0
0x208 DUP2
0x209 MSTORE
0x20a POP
0x20b SWAP1
0x20c JUMP
---
0x1f9: JUMPDEST 
0x1fa: V162 = 0x20
0x1fc: V163 = 0x40
0x1fe: V164 = M[0x40]
0x201: V165 = ADD V164 0x20
0x202: V166 = 0x40
0x204: M[0x40] = V165
0x206: V167 = 0x0
0x209: M[V164] = 0x0
0x20c: JUMP 0x13d
---
Entry stack: [V7, 0x5c, 0x13d]
Stack pops: 1
Stack additions: [V164]
Exit stack: [V7, 0x5c, V164]

================================

Block 0x20d
[0x20d:0x23d]
---
Predecessors: [0x1de]
Successors: [0x23e, 0x24e]
---
0x20d JUMPDEST
0x20e DUP3
0x20f DUP1
0x210 SLOAD
0x211 PUSH1 0x1
0x213 DUP2
0x214 PUSH1 0x1
0x216 AND
0x217 ISZERO
0x218 PUSH2 0x100
0x21b MUL
0x21c SUB
0x21d AND
0x21e PUSH1 0x2
0x220 SWAP1
0x221 DIV
0x222 SWAP1
0x223 PUSH1 0x0
0x225 MSTORE
0x226 PUSH1 0x20
0x228 PUSH1 0x0
0x22a SHA3
0x22b SWAP1
0x22c PUSH1 0x1f
0x22e ADD
0x22f PUSH1 0x20
0x231 SWAP1
0x232 DIV
0x233 DUP2
0x234 ADD
0x235 SWAP3
0x236 DUP3
0x237 PUSH1 0x1f
0x239 LT
0x23a PUSH2 0x24e
0x23d JUMPI
---
0x20d: JUMPDEST 
0x210: V168 = S[0x0]
0x211: V169 = 0x1
0x214: V170 = 0x1
0x216: V171 = AND 0x1 V168
0x217: V172 = ISZERO V171
0x218: V173 = 0x100
0x21b: V174 = MUL 0x100 V172
0x21c: V175 = SUB V174 0x1
0x21d: V176 = AND V175 V168
0x21e: V177 = 0x2
0x221: V178 = DIV V176 0x2
0x223: V179 = 0x0
0x225: M[0x0] = 0x0
0x226: V180 = 0x20
0x228: V181 = 0x0
0x22a: V182 = SHA3 0x0 0x20
0x22c: V183 = 0x1f
0x22e: V184 = ADD 0x1f V178
0x22f: V185 = 0x20
0x232: V186 = DIV V184 0x20
0x234: V187 = ADD V182 V186
0x237: V188 = 0x1f
0x239: V189 = LT 0x1f V157
0x23a: V190 = 0x24e
0x23d: JUMPI 0x24e V189
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V159, V157]
Stack pops: 3
Stack additions: [S2, V187, S0, V182, S1]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V157, V182, V159]

================================

Block 0x23e
[0x23e:0x24d]
---
Predecessors: [0x20d]
Successors: [0x27c]
---
0x23e DUP1
0x23f MLOAD
0x240 PUSH1 0xff
0x242 NOT
0x243 AND
0x244 DUP4
0x245 DUP1
0x246 ADD
0x247 OR
0x248 DUP6
0x249 SSTORE
0x24a PUSH2 0x27c
0x24d JUMP
---
0x23f: V191 = M[V159]
0x240: V192 = 0xff
0x242: V193 = NOT 0xff
0x243: V194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V191
0x246: V195 = ADD V157 V157
0x247: V196 = OR V195 V194
0x249: S[0x0] = V196
0x24a: V197 = 0x27c
0x24d: JUMP 0x27c
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V157, V182, V159]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V157, V182, V159]

================================

Block 0x24e
[0x24e:0x25c]
---
Predecessors: [0x20d]
Successors: [0x25d, 0x27c]
---
0x24e JUMPDEST
0x24f DUP3
0x250 DUP1
0x251 ADD
0x252 PUSH1 0x1
0x254 ADD
0x255 DUP6
0x256 SSTORE
0x257 DUP3
0x258 ISZERO
0x259 PUSH2 0x27c
0x25c JUMPI
---
0x24e: JUMPDEST 
0x251: V198 = ADD V157 V157
0x252: V199 = 0x1
0x254: V200 = ADD 0x1 V198
0x256: S[0x0] = V200
0x258: V201 = ISZERO V157
0x259: V202 = 0x27c
0x25c: JUMPI 0x27c V201
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V157, V182, V159]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V157, V182, V159]

================================

Block 0x25d
[0x25d:0x25f]
---
Predecessors: [0x24e]
Successors: [0x260]
---
0x25d SWAP2
0x25e DUP3
0x25f ADD
---
0x25f: V203 = ADD V159 V157
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V157, V182, V159]
Stack pops: 3
Stack additions: [S0, S1, V203]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V159, V182, V203]

================================

Block 0x260
[0x260:0x268]
---
Predecessors: [0x25d, 0x269]
Successors: [0x269, 0x27b]
---
0x260 JUMPDEST
0x261 DUP3
0x262 DUP2
0x263 GT
0x264 ISZERO
0x265 PUSH2 0x27b
0x268 JUMPI
---
0x260: JUMPDEST 
0x263: V204 = GT V203 S2
0x264: V205 = ISZERO V204
0x265: V206 = 0x27b
0x268: JUMPI 0x27b V205
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, S2, S1, V203]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, S2, S1, V203]

================================

Block 0x269
[0x269:0x27a]
---
Predecessors: [0x260]
Successors: [0x260]
---
0x269 DUP3
0x26a MLOAD
0x26b DUP3
0x26c SSTORE
0x26d SWAP2
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP2
0x272 SWAP1
0x273 PUSH1 0x1
0x275 ADD
0x276 SWAP1
0x277 PUSH2 0x260
0x27a JUMP
---
0x26a: V207 = M[S2]
0x26c: S[S1] = V207
0x26e: V208 = 0x20
0x270: V209 = ADD 0x20 S2
0x273: V210 = 0x1
0x275: V211 = ADD 0x1 S1
0x277: V212 = 0x260
0x27a: JUMP 0x260
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, S2, S1, V203]
Stack pops: 3
Stack additions: [V209, V211, S0]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, V209, V211, V203]

================================

Block 0x27b
[0x27b:0x27b]
---
Predecessors: [0x260]
Successors: [0x27c]
---
0x27b JUMPDEST
---
0x27b: JUMPDEST 
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, S2, S1, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, S2, S1, V203]

================================

Block 0x27c
[0x27c:0x288]
---
Predecessors: [0x23e, 0x24e, 0x27b]
Successors: [0x28d]
---
0x27c JUMPDEST
0x27d POP
0x27e SWAP1
0x27f POP
0x280 PUSH2 0x289
0x283 SWAP2
0x284 SWAP1
0x285 PUSH2 0x28d
0x288 JUMP
---
0x27c: JUMPDEST 
0x280: V213 = 0x289
0x285: V214 = 0x28d
0x288: JUMP 0x28d
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187, S2, S1, S0]
Stack pops: 4
Stack additions: [0x289, S3, S1]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, V187, S1]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x2af]
Successors: [0x1f4]
---
0x289 JUMPDEST
0x28a POP
0x28b SWAP1
0x28c JUMP
---
0x289: JUMPDEST 
0x28c: JUMP 0x1f4
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, V187]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x133, V83, 0x0]

================================

Block 0x28d
[0x28d:0x292]
---
Predecessors: [0x27c]
Successors: [0x293]
---
0x28d JUMPDEST
0x28e PUSH2 0x2af
0x291 SWAP2
0x292 SWAP1
---
0x28d: JUMPDEST 
0x28e: V215 = 0x2af
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, V187, S0]
Stack pops: 2
Stack additions: [0x2af, S1, S0]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, 0x2af, V187, S0]

================================

Block 0x293
[0x293:0x29b]
---
Predecessors: [0x28d, 0x29c]
Successors: [0x29c, 0x2ab]
---
0x293 JUMPDEST
0x294 DUP1
0x295 DUP3
0x296 GT
0x297 ISZERO
0x298 PUSH2 0x2ab
0x29b JUMPI
---
0x293: JUMPDEST 
0x296: V216 = GT V187 S0
0x297: V217 = ISZERO V216
0x298: V218 = 0x2ab
0x29b: JUMPI 0x2ab V217
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, 0x2af, V187, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, 0x2af, V187, S0]

================================

Block 0x29c
[0x29c:0x2aa]
---
Predecessors: [0x293]
Successors: [0x293]
---
0x29c PUSH1 0x0
0x29e DUP2
0x29f PUSH1 0x0
0x2a1 SWAP1
0x2a2 SSTORE
0x2a3 POP
0x2a4 PUSH1 0x1
0x2a6 ADD
0x2a7 PUSH2 0x293
0x2aa JUMP
---
0x29c: V219 = 0x0
0x29f: V220 = 0x0
0x2a2: S[S0] = 0x0
0x2a4: V221 = 0x1
0x2a6: V222 = ADD 0x1 S0
0x2a7: V223 = 0x293
0x2aa: JUMP 0x293
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, 0x2af, V187, S0]
Stack pops: 1
Stack additions: [V222]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, 0x2af, V187, V222]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x293]
Successors: [0x2af]
---
0x2ab JUMPDEST
0x2ac POP
0x2ad SWAP1
0x2ae JUMP
---
0x2ab: JUMPDEST 
0x2ae: JUMP 0x2af
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, 0x2af, V187, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, V187]

================================

Block 0x2af
[0x2af:0x2b1]
---
Predecessors: [0x2ab]
Successors: [0x289]
---
0x2af JUMPDEST
0x2b0 SWAP1
0x2b1 JUMP
---
0x2af: JUMPDEST 
0x2b1: JUMP 0x289
---
Entry stack: [V7, 0x133, V83, 0x1f4, 0x0, 0x289, V187]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x133, V83, 0x1f4, 0x0, V187]

================================

Block 0x2b2
[0x2b2:0x2e3]
---
Predecessors: []
Successors: []
---
0x2b2 STOP
0x2b3 LOG1
0x2b4 PUSH6 0x627a7a723058
0x2bb SHA3
0x2bc RETURNDATASIZE
0x2bd DELEGATECALL
0x2be DIV
0x2bf INVALID
0x2c0 MISSING 0xfc
0x2c1 OR
0x2c2 MISSING 0xd0
0x2c3 DUP3
0x2c4 MISSING 0xb3
0x2c5 MISSING 0xe9
0x2c6 DUP1
0x2c7 MISSING 0xdb
0x2c8 PUSH3 0xedcb30
0x2cc DUP16
0x2cd GASLIMIT
0x2ce MISSING 0xdf
0x2cf SWAP5
0x2d0 MISSING 0xbf
0x2d1 PUSH18 0x8ce2065ef2ecb8a4f86c0029
---
0x2b2: STOP 
0x2b3: LOG S0 S1 S2
0x2b4: V224 = 0x627a7a723058
0x2bb: V225 = SHA3 0x627a7a723058 S3
0x2bc: V226 = RETURNDATASIZE
0x2bd: V227 = DELEGATECALL V226 V225 S4 S5 S6 S7
0x2be: V228 = DIV V227 S8
0x2bf: INVALID 
0x2c0: MISSING 0xfc
0x2c1: V229 = OR S0 S1
0x2c2: MISSING 0xd0
0x2c4: MISSING 0xb3
0x2c5: MISSING 0xe9
0x2c7: MISSING 0xdb
0x2c8: V230 = 0xedcb30
0x2cd: V231 = GASLIMIT
0x2ce: MISSING 0xdf
0x2d0: MISSING 0xbf
0x2d1: V232 = 0x8ce2065ef2ecb8a4f86c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V228, V229, S2, S0, S1, S2, S0, S0, V231, S14, 0xedcb30, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S5, S1, S2, S3, S4, S0, 0x8ce2065ef2ecb8a4f86c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3bc5de30
Entry block: 0x49
Exit block: 0xca
Body: 0x49, 0x50, 0x54, 0x5c, 0x81, 0x8a, 0x92, 0x9d, 0xb1, 0xca, 0x135, 0x13d, 0x18d, 0x195, 0x1a8, 0x1b6, 0x1ca, 0x1d3, 0x1db, 0x1f9

Function 1:
Public function signature: 0x47064d6a
Entry block: 0xd8
Exit block: 0x133
Body: 0xd8, 0xdf, 0xe3, 0x133, 0x1de, 0x1f4, 0x1f6, 0x20d, 0x23e, 0x24e, 0x25d, 0x260, 0x269, 0x27b, 0x27c, 0x289, 0x28d, 0x293, 0x29c, 0x2ab, 0x2af

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

