Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4fb2e45d
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4fb2e45d
0x3c: V13 = EQ 0x4fb2e45d V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x94]
---
0x41 DUP1
0x42 PUSH4 0xbe6d055a
0x47 EQ
0x48 PUSH2 0x94
0x4b JUMPI
---
0x42: V15 = 0xbe6d055a
0x47: V16 = EQ 0xbe6d055a V11
0x48: V17 = 0x94
0x4b: JUMPI 0x94 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x91]
---
Predecessors: [0x51]
Successors: [0x110]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x92
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP3
0x89 SWAP2
0x8a SWAP1
0x8b POP
0x8c POP
0x8d POP
0x8e PUSH2 0x110
0x91 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x92
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6d: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x84: V31 = 0x20
0x86: V32 = ADD 0x20 0x4
0x8e: V33 = 0x110
0x91: JUMP 0x110
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x92, V30]
Exit stack: [V11, 0x92, V30]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: [0x1a6]
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x10d]
---
Predecessors: [0x41]
Successors: [0x1a9]
---
0x94 JUMPDEST
0x95 PUSH2 0x10e
0x98 PUSH1 0x4
0x9a DUP1
0x9b CALLDATASIZE
0x9c SUB
0x9d DUP2
0x9e ADD
0x9f SWAP1
0xa0 DUP1
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe SWAP3
0xbf SWAP2
0xc0 SWAP1
0xc1 DUP1
0xc2 CALLDATALOAD
0xc3 SWAP1
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 DUP3
0xc9 ADD
0xca DUP1
0xcb CALLDATALOAD
0xcc SWAP1
0xcd PUSH1 0x20
0xcf ADD
0xd0 SWAP1
0xd1 DUP1
0xd2 DUP1
0xd3 PUSH1 0x1f
0xd5 ADD
0xd6 PUSH1 0x20
0xd8 DUP1
0xd9 SWAP2
0xda DIV
0xdb MUL
0xdc PUSH1 0x20
0xde ADD
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 SWAP1
0xe3 DUP2
0xe4 ADD
0xe5 PUSH1 0x40
0xe7 MSTORE
0xe8 DUP1
0xe9 SWAP4
0xea SWAP3
0xeb SWAP2
0xec SWAP1
0xed DUP2
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 DUP4
0xf4 DUP4
0xf5 DUP1
0xf6 DUP3
0xf7 DUP5
0xf8 CALLDATACOPY
0xf9 DUP3
0xfa ADD
0xfb SWAP2
0xfc POP
0xfd POP
0xfe POP
0xff POP
0x100 POP
0x101 POP
0x102 SWAP2
0x103 SWAP3
0x104 SWAP2
0x105 SWAP3
0x106 SWAP1
0x107 POP
0x108 POP
0x109 POP
0x10a PUSH2 0x1a9
0x10d JUMP
---
0x94: JUMPDEST 
0x95: V34 = 0x10e
0x98: V35 = 0x4
0x9b: V36 = CALLDATASIZE
0x9c: V37 = SUB V36 0x4
0x9e: V38 = ADD 0x4 V37
0xa2: V39 = CALLDATALOAD 0x4
0xa3: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xba: V42 = 0x20
0xbc: V43 = ADD 0x20 0x4
0xc2: V44 = CALLDATALOAD 0x24
0xc4: V45 = 0x20
0xc6: V46 = ADD 0x20 0x24
0xc9: V47 = ADD 0x4 V44
0xcb: V48 = CALLDATALOAD V47
0xcd: V49 = 0x20
0xcf: V50 = ADD 0x20 V47
0xd3: V51 = 0x1f
0xd5: V52 = ADD 0x1f V48
0xd6: V53 = 0x20
0xda: V54 = DIV V52 0x20
0xdb: V55 = MUL V54 0x20
0xdc: V56 = 0x20
0xde: V57 = ADD 0x20 V55
0xdf: V58 = 0x40
0xe1: V59 = M[0x40]
0xe4: V60 = ADD V59 V57
0xe5: V61 = 0x40
0xe7: M[0x40] = V60
0xef: M[V59] = V48
0xf0: V62 = 0x20
0xf2: V63 = ADD 0x20 V59
0xf8: CALLDATACOPY V63 V50 V48
0xfa: V64 = ADD V63 V48
0x10a: V65 = 0x1a9
0x10d: JUMP 0x1a9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10e, V41, V59]
Exit stack: [V11, 0x10e, V41, V59]

================================

Block 0x10e
[0x10e:0x10f]
---
Predecessors: [0x21c]
Successors: []
---
0x10e JUMPDEST
0x10f STOP
---
0x10e: JUMPDEST 
0x10f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x110
[0x110:0x165]
---
Predecessors: [0x5d]
Successors: [0x166, 0x1a6]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 DUP1
0x114 SWAP1
0x115 SLOAD
0x116 SWAP1
0x117 PUSH2 0x100
0x11a EXP
0x11b SWAP1
0x11c DIV
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 CALLER
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 EQ
0x161 ISZERO
0x162 PUSH2 0x1a6
0x165 JUMPI
---
0x110: JUMPDEST 
0x111: V66 = 0x0
0x115: V67 = S[0x0]
0x117: V68 = 0x100
0x11a: V69 = EXP 0x100 0x0
0x11c: V70 = DIV V67 0x1
0x11d: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x133: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x149: V75 = CALLER
0x14a: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x160: V78 = EQ V77 V74
0x161: V79 = ISZERO V78
0x162: V80 = 0x1a6
0x165: JUMPI 0x1a6 V79
---
Entry stack: [V11, 0x92, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92, V30]

================================

Block 0x166
[0x166:0x1a5]
---
Predecessors: [0x110]
Successors: [0x1a6]
---
0x166 DUP1
0x167 PUSH1 0x0
0x169 DUP1
0x16a PUSH2 0x100
0x16d EXP
0x16e DUP2
0x16f SLOAD
0x170 DUP2
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 MUL
0x187 NOT
0x188 AND
0x189 SWAP1
0x18a DUP4
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 MUL
0x1a2 OR
0x1a3 SWAP1
0x1a4 SSTORE
0x1a5 POP
---
0x167: V81 = 0x0
0x16a: V82 = 0x100
0x16d: V83 = EXP 0x100 0x0
0x16f: V84 = S[0x0]
0x171: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V86 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x187: V87 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x188: V88 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V84
0x18b: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x1a1: V91 = MUL V90 0x1
0x1a2: V92 = OR V91 V88
0x1a4: S[0x0] = V92
---
Entry stack: [V11, 0x92, V30]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x92, V30]

================================

Block 0x1a6
[0x1a6:0x1a8]
---
Predecessors: [0x110, 0x166]
Successors: [0x92]
---
0x1a6 JUMPDEST
0x1a7 POP
0x1a8 JUMP
---
0x1a6: JUMPDEST 
0x1a8: JUMP 0x92
---
Entry stack: [V11, 0x92, V30]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a9
[0x1a9:0x1d3]
---
Predecessors: [0x94]
Successors: [0x1d4]
---
0x1a9 JUMPDEST
0x1aa DUP2
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 CALLVALUE
0x1c2 DUP3
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 DUP3
0x1c8 DUP1
0x1c9 MLOAD
0x1ca SWAP1
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP1
0x1cf DUP1
0x1d0 DUP4
0x1d1 DUP4
0x1d2 PUSH1 0x0
---
0x1a9: JUMPDEST 
0x1ab: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x1c1: V95 = CALLVALUE
0x1c3: V96 = 0x40
0x1c5: V97 = M[0x40]
0x1c9: V98 = M[V59]
0x1cb: V99 = 0x20
0x1cd: V100 = ADD 0x20 V59
0x1d2: V101 = 0x0
---
Entry stack: [V11, 0x10e, V41, V59]
Stack pops: 2
Stack additions: [S1, S0, V94, V95, S0, V97, V97, V100, V98, V98, V97, V100, 0x0]
Exit stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V97, V100, V98, V98, V97, V100, 0x0]

================================

Block 0x1d4
[0x1d4:0x1dc]
---
Predecessors: [0x1a9, 0x1dd]
Successors: [0x1dd, 0x1ef]
---
0x1d4 JUMPDEST
0x1d5 DUP4
0x1d6 DUP2
0x1d7 LT
0x1d8 ISZERO
0x1d9 PUSH2 0x1ef
0x1dc JUMPI
---
0x1d4: JUMPDEST 
0x1d7: V102 = LT S0 V98
0x1d8: V103 = ISZERO V102
0x1d9: V104 = 0x1ef
0x1dc: JUMPI 0x1ef V103
---
Entry stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V97, V100, V98, V98, V97, V100, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V97, V100, V98, V98, V97, V100, S0]

================================

Block 0x1dd
[0x1dd:0x1ee]
---
Predecessors: [0x1d4]
Successors: [0x1d4]
---
0x1dd DUP1
0x1de DUP3
0x1df ADD
0x1e0 MLOAD
0x1e1 DUP2
0x1e2 DUP5
0x1e3 ADD
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 DUP2
0x1e8 ADD
0x1e9 SWAP1
0x1ea POP
0x1eb PUSH2 0x1d4
0x1ee JUMP
---
0x1df: V105 = ADD V100 S0
0x1e0: V106 = M[V105]
0x1e3: V107 = ADD V97 S0
0x1e4: M[V107] = V106
0x1e5: V108 = 0x20
0x1e8: V109 = ADD S0 0x20
0x1eb: V110 = 0x1d4
0x1ee: JUMP 0x1d4
---
Entry stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V97, V100, V98, V98, V97, V100, S0]
Stack pops: 3
Stack additions: [S2, S1, V109]
Exit stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V97, V100, V98, V98, V97, V100, V109]

================================

Block 0x1ef
[0x1ef:0x202]
---
Predecessors: [0x1d4]
Successors: [0x203, 0x21c]
---
0x1ef JUMPDEST
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 SWAP1
0x1f5 POP
0x1f6 SWAP1
0x1f7 DUP2
0x1f8 ADD
0x1f9 SWAP1
0x1fa PUSH1 0x1f
0x1fc AND
0x1fd DUP1
0x1fe ISZERO
0x1ff PUSH2 0x21c
0x202 JUMPI
---
0x1ef: JUMPDEST 
0x1f8: V111 = ADD V98 V97
0x1fa: V112 = 0x1f
0x1fc: V113 = AND 0x1f V98
0x1fe: V114 = ISZERO V113
0x1ff: V115 = 0x21c
0x202: JUMPI 0x21c V114
---
Entry stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V97, V100, V98, V98, V97, V100, S0]
Stack pops: 7
Stack additions: [V111, V113]
Exit stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V111, V113]

================================

Block 0x203
[0x203:0x21b]
---
Predecessors: [0x1ef]
Successors: [0x21c]
---
0x203 DUP1
0x204 DUP3
0x205 SUB
0x206 DUP1
0x207 MLOAD
0x208 PUSH1 0x1
0x20a DUP4
0x20b PUSH1 0x20
0x20d SUB
0x20e PUSH2 0x100
0x211 EXP
0x212 SUB
0x213 NOT
0x214 AND
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP2
0x21b POP
---
0x205: V116 = SUB V111 V113
0x207: V117 = M[V116]
0x208: V118 = 0x1
0x20b: V119 = 0x20
0x20d: V120 = SUB 0x20 V113
0x20e: V121 = 0x100
0x211: V122 = EXP 0x100 V120
0x212: V123 = SUB V122 0x1
0x213: V124 = NOT V123
0x214: V125 = AND V124 V117
0x216: M[V116] = V125
0x217: V126 = 0x20
0x219: V127 = ADD 0x20 V116
---
Entry stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V111, V113]
Stack pops: 2
Stack additions: [V127, S0]
Exit stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, V127, V113]

================================

Block 0x21c
[0x21c:0x235]
---
Predecessors: [0x1ef, 0x203]
Successors: [0x10e]
---
0x21c JUMPDEST
0x21d POP
0x21e SWAP2
0x21f POP
0x220 POP
0x221 PUSH1 0x0
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 DUP4
0x228 SUB
0x229 DUP2
0x22a DUP6
0x22b DUP8
0x22c GAS
0x22d CALL
0x22e SWAP3
0x22f POP
0x230 POP
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 JUMP
---
0x21c: JUMPDEST 
0x221: V128 = 0x0
0x223: V129 = 0x40
0x225: V130 = M[0x40]
0x228: V131 = SUB S1 V130
0x22c: V132 = GAS
0x22d: V133 = CALL V132 V94 V95 V130 V131 V130 0x0
0x235: JUMP 0x10e
---
Entry stack: [V11, 0x10e, V41, V59, V94, V95, V59, V97, S1, V113]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x236
[0x236:0x26e]
---
Predecessors: []
Successors: [0x26f]
Has unresolved jump.
---
0x236 STOP
0x237 LOG1
0x238 PUSH6 0x627a7a723058
0x23f SHA3
0x240 MISSING 0x1e
0x241 MISSING 0x4f
0x242 SWAP14
0x243 MUL
0x244 CALLVALUE
0x245 REVERT
0x246 MOD
0x247 BLOCKHASH
0x248 BLOCKHASH
0x249 MISSING 0xa5
0x24a MISSING 0xd9
0x24b MISSING 0xfc
0x24c PUSH32 0xdfdad2fe677ee3e21f104640b4770879ba0d6f00296080604052600436106100
0x26d DUP4
0x26e JUMPI
---
0x236: STOP 
0x237: LOG S0 S1 S2
0x238: V134 = 0x627a7a723058
0x23f: V135 = SHA3 0x627a7a723058 S3
0x240: MISSING 0x1e
0x241: MISSING 0x4f
0x243: V136 = MUL S14 S1
0x244: V137 = CALLVALUE
0x245: REVERT V137 V136
0x246: V138 = MOD S0 S1
0x247: V139 = BLOCKHASH V138
0x248: V140 = BLOCKHASH V139
0x249: MISSING 0xa5
0x24a: MISSING 0xd9
0x24b: MISSING 0xfc
0x24c: V141 = 0xdfdad2fe677ee3e21f104640b4770879ba0d6f00296080604052600436106100
0x26e: JUMPI S2 0xdfdad2fe677ee3e21f104640b4770879ba0d6f00296080604052600436106100
---
Entry stack: []
Stack pops: 0
Stack additions: [V135, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V140, S0, S1, S2]
Exit stack: []

================================

Block 0x26f
[0x26f:0x2a2]
---
Predecessors: [0x236]
Successors: [0x2a3]
---
0x26f PUSH1 0x0
0x271 CALLDATALOAD
0x272 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x290 SWAP1
0x291 DIV
0x292 PUSH4 0xffffffff
0x297 AND
0x298 DUP1
0x299 PUSH4 0x2d2c44f2
0x29e EQ
0x29f PUSH2 0x85
0x2a2 JUMPI
---
0x26f: V142 = 0x0
0x271: V143 = CALLDATALOAD 0x0
0x272: V144 = 0x100000000000000000000000000000000000000000000000000000000
0x291: V145 = DIV V143 0x100000000000000000000000000000000000000000000000000000000
0x292: V146 = 0xffffffff
0x297: V147 = AND 0xffffffff V145
0x299: V148 = 0x2d2c44f2
0x29e: V149 = EQ 0x2d2c44f2 V147
0x29f: V150 = 0x85
0x2a2: THROWI V149
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V147]
Exit stack: [S2, S1, S0, V147]

================================

Block 0x2a3
[0x2a3:0x2ad]
---
Predecessors: [0x26f]
Successors: [0x2ae]
---
0x2a3 DUP1
0x2a4 PUSH4 0x2e1a7d4d
0x2a9 EQ
0x2aa PUSH2 0x8f
0x2ad JUMPI
---
0x2a4: V151 = 0x2e1a7d4d
0x2a9: V152 = EQ 0x2e1a7d4d V147
0x2aa: V153 = 0x8f
0x2ad: THROWI V152
---
Entry stack: [S3, S2, S1, V147]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V147]

================================

Block 0x2ae
[0x2ae:0x2b8]
---
Predecessors: [0x2a3]
Successors: [0x2b9]
---
0x2ae DUP1
0x2af PUSH4 0x3ee2d7c2
0x2b4 EQ
0x2b5 PUSH2 0xbc
0x2b8 JUMPI
---
0x2af: V154 = 0x3ee2d7c2
0x2b4: V155 = EQ 0x3ee2d7c2 V147
0x2b5: V156 = 0xbc
0x2b8: THROWI V155
---
Entry stack: [S3, S2, S1, V147]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V147]

================================

Block 0x2b9
[0x2b9:0x2c3]
---
Predecessors: [0x2ae]
Successors: [0x2c4]
---
0x2b9 DUP1
0x2ba PUSH4 0x4fb2e45d
0x2bf EQ
0x2c0 PUSH2 0x113
0x2c3 JUMPI
---
0x2ba: V157 = 0x4fb2e45d
0x2bf: V158 = EQ 0x4fb2e45d V147
0x2c0: V159 = 0x113
0x2c3: THROWI V158
---
Entry stack: [S3, S2, S1, V147]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V147]

================================

Block 0x2c4
[0x2c4:0x2ce]
---
Predecessors: [0x2b9]
Successors: [0x2cf]
---
0x2c4 DUP1
0x2c5 PUSH4 0xb4a99a4e
0x2ca EQ
0x2cb PUSH2 0x156
0x2ce JUMPI
---
0x2c5: V160 = 0xb4a99a4e
0x2ca: V161 = EQ 0xb4a99a4e V147
0x2cb: V162 = 0x156
0x2ce: THROWI V161
---
Entry stack: [S3, S2, S1, V147]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V147]

================================

Block 0x2cf
[0x2cf:0x2d9]
---
Predecessors: [0x2c4]
Successors: [0x2da]
---
0x2cf DUP1
0x2d0 PUSH4 0xbe6d055a
0x2d5 EQ
0x2d6 PUSH2 0x1ad
0x2d9 JUMPI
---
0x2d0: V163 = 0xbe6d055a
0x2d5: V164 = EQ 0xbe6d055a V147
0x2d6: V165 = 0x1ad
0x2d9: THROWI V164
---
Entry stack: [S3, S2, S1, V147]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V147]

================================

Block 0x2da
[0x2da:0x2e4]
---
Predecessors: [0x2cf]
Successors: [0x2e5]
---
0x2da DUP1
0x2db PUSH4 0xd0e30db0
0x2e0 EQ
0x2e1 PUSH2 0x229
0x2e4 JUMPI
---
0x2db: V166 = 0xd0e30db0
0x2e0: V167 = EQ 0xd0e30db0 V147
0x2e1: V168 = 0x229
0x2e4: THROWI V167
---
Entry stack: [S3, S2, S1, V147]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V147]

================================

Block 0x2e5
[0x2e5:0x2f8]
---
Predecessors: [0x2da]
Successors: [0x2f9]
---
0x2e5 JUMPDEST
0x2e6 STOP
0x2e7 JUMPDEST
0x2e8 PUSH2 0x8d
0x2eb PUSH2 0x233
0x2ee JUMP
0x2ef JUMPDEST
0x2f0 STOP
0x2f1 JUMPDEST
0x2f2 CALLVALUE
0x2f3 DUP1
0x2f4 ISZERO
0x2f5 PUSH2 0x9b
0x2f8 JUMPI
---
0x2e5: JUMPDEST 
0x2e6: STOP 
0x2e7: JUMPDEST 
0x2e8: V169 = 0x8d
0x2eb: V170 = 0x233
0x2ee: THROW 
0x2ef: JUMPDEST 
0x2f0: STOP 
0x2f1: JUMPDEST 
0x2f2: V171 = CALLVALUE
0x2f4: V172 = ISZERO V171
0x2f5: V173 = 0x9b
0x2f8: THROWI V172
---
Entry stack: [S3, S2, S1, V147]
Stack pops: 0
Stack additions: [0x8d, V171]
Exit stack: []

================================

Block 0x2f9
[0x2f9:0x325]
---
Predecessors: [0x2e5]
Successors: [0x326]
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
0x2fd JUMPDEST
0x2fe POP
0x2ff PUSH2 0xba
0x302 PUSH1 0x4
0x304 DUP1
0x305 CALLDATASIZE
0x306 SUB
0x307 DUP2
0x308 ADD
0x309 SWAP1
0x30a DUP1
0x30b DUP1
0x30c CALLDATALOAD
0x30d SWAP1
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 SWAP3
0x313 SWAP2
0x314 SWAP1
0x315 POP
0x316 POP
0x317 POP
0x318 PUSH2 0x2b3
0x31b JUMP
0x31c JUMPDEST
0x31d STOP
0x31e JUMPDEST
0x31f CALLVALUE
0x320 DUP1
0x321 ISZERO
0x322 PUSH2 0xc8
0x325 JUMPI
---
0x2f9: V174 = 0x0
0x2fc: REVERT 0x0 0x0
0x2fd: JUMPDEST 
0x2ff: V175 = 0xba
0x302: V176 = 0x4
0x305: V177 = CALLDATASIZE
0x306: V178 = SUB V177 0x4
0x308: V179 = ADD 0x4 V178
0x30c: V180 = CALLDATALOAD 0x4
0x30e: V181 = 0x20
0x310: V182 = ADD 0x20 0x4
0x318: V183 = 0x2b3
0x31b: THROW 
0x31c: JUMPDEST 
0x31d: STOP 
0x31e: JUMPDEST 
0x31f: V184 = CALLVALUE
0x321: V185 = ISZERO V184
0x322: V186 = 0xc8
0x325: THROWI V185
---
Entry stack: [V171]
Stack pops: 0
Stack additions: [V180, 0xba, V184]
Exit stack: []

================================

Block 0x326
[0x326:0x37c]
---
Predecessors: [0x2f9]
Successors: [0x37d]
---
0x326 PUSH1 0x0
0x328 DUP1
0x329 REVERT
0x32a JUMPDEST
0x32b POP
0x32c PUSH2 0xfd
0x32f PUSH1 0x4
0x331 DUP1
0x332 CALLDATASIZE
0x333 SUB
0x334 DUP2
0x335 ADD
0x336 SWAP1
0x337 DUP1
0x338 DUP1
0x339 CALLDATALOAD
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 SWAP1
0x351 PUSH1 0x20
0x353 ADD
0x354 SWAP1
0x355 SWAP3
0x356 SWAP2
0x357 SWAP1
0x358 POP
0x359 POP
0x35a POP
0x35b PUSH2 0x3a8
0x35e JUMP
0x35f JUMPDEST
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 DUP3
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x20
0x369 ADD
0x36a SWAP2
0x36b POP
0x36c POP
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 SWAP2
0x372 SUB
0x373 SWAP1
0x374 RETURN
0x375 JUMPDEST
0x376 CALLVALUE
0x377 DUP1
0x378 ISZERO
0x379 PUSH2 0x11f
0x37c JUMPI
---
0x326: V187 = 0x0
0x329: REVERT 0x0 0x0
0x32a: JUMPDEST 
0x32c: V188 = 0xfd
0x32f: V189 = 0x4
0x332: V190 = CALLDATASIZE
0x333: V191 = SUB V190 0x4
0x335: V192 = ADD 0x4 V191
0x339: V193 = CALLDATALOAD 0x4
0x33a: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x351: V196 = 0x20
0x353: V197 = ADD 0x20 0x4
0x35b: V198 = 0x3a8
0x35e: THROW 
0x35f: JUMPDEST 
0x360: V199 = 0x40
0x362: V200 = M[0x40]
0x366: M[V200] = S0
0x367: V201 = 0x20
0x369: V202 = ADD 0x20 V200
0x36d: V203 = 0x40
0x36f: V204 = M[0x40]
0x372: V205 = SUB V202 V204
0x374: RETURN V204 V205
0x375: JUMPDEST 
0x376: V206 = CALLVALUE
0x378: V207 = ISZERO V206
0x379: V208 = 0x11f
0x37c: THROWI V207
---
Entry stack: [V184]
Stack pops: 0
Stack additions: [V195, 0xfd, V206]
Exit stack: []

================================

Block 0x37d
[0x37d:0x3bf]
---
Predecessors: [0x326]
Successors: [0x3c0]
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
0x381 JUMPDEST
0x382 POP
0x383 PUSH2 0x154
0x386 PUSH1 0x4
0x388 DUP1
0x389 CALLDATASIZE
0x38a SUB
0x38b DUP2
0x38c ADD
0x38d SWAP1
0x38e DUP1
0x38f DUP1
0x390 CALLDATALOAD
0x391 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a6 AND
0x3a7 SWAP1
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab SWAP1
0x3ac SWAP3
0x3ad SWAP2
0x3ae SWAP1
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 PUSH2 0x3c0
0x3b5 JUMP
0x3b6 JUMPDEST
0x3b7 STOP
0x3b8 JUMPDEST
0x3b9 CALLVALUE
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x162
0x3bf JUMPI
---
0x37d: V209 = 0x0
0x380: REVERT 0x0 0x0
0x381: JUMPDEST 
0x383: V210 = 0x154
0x386: V211 = 0x4
0x389: V212 = CALLDATASIZE
0x38a: V213 = SUB V212 0x4
0x38c: V214 = ADD 0x4 V213
0x390: V215 = CALLDATALOAD 0x4
0x391: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3a8: V218 = 0x20
0x3aa: V219 = ADD 0x20 0x4
0x3b2: V220 = 0x3c0
0x3b5: THROW 
0x3b6: JUMPDEST 
0x3b7: STOP 
0x3b8: JUMPDEST 
0x3b9: V221 = CALLVALUE
0x3bb: V222 = ISZERO V221
0x3bc: V223 = 0x162
0x3bf: THROWI V222
---
Entry stack: [V206]
Stack pops: 0
Stack additions: [V217, 0x154, V221]
Exit stack: []

================================

Block 0x3c0
[0x3c0:0x4c9]
---
Predecessors: [0x37d]
Successors: [0x4ca]
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
0x3c4 JUMPDEST
0x3c5 POP
0x3c6 PUSH2 0x16b
0x3c9 PUSH2 0x459
0x3cc JUMP
0x3cd JUMPDEST
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP1
0x3d2 DUP3
0x3d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e8 AND
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP2
0x405 POP
0x406 POP
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b SWAP2
0x40c SUB
0x40d SWAP1
0x40e RETURN
0x40f JUMPDEST
0x410 PUSH2 0x227
0x413 PUSH1 0x4
0x415 DUP1
0x416 CALLDATASIZE
0x417 SUB
0x418 DUP2
0x419 ADD
0x41a SWAP1
0x41b DUP1
0x41c DUP1
0x41d CALLDATALOAD
0x41e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x433 AND
0x434 SWAP1
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP1
0x439 SWAP3
0x43a SWAP2
0x43b SWAP1
0x43c DUP1
0x43d CALLDATALOAD
0x43e SWAP1
0x43f PUSH1 0x20
0x441 ADD
0x442 SWAP1
0x443 DUP3
0x444 ADD
0x445 DUP1
0x446 CALLDATALOAD
0x447 SWAP1
0x448 PUSH1 0x20
0x44a ADD
0x44b SWAP1
0x44c DUP1
0x44d DUP1
0x44e PUSH1 0x1f
0x450 ADD
0x451 PUSH1 0x20
0x453 DUP1
0x454 SWAP2
0x455 DIV
0x456 MUL
0x457 PUSH1 0x20
0x459 ADD
0x45a PUSH1 0x40
0x45c MLOAD
0x45d SWAP1
0x45e DUP2
0x45f ADD
0x460 PUSH1 0x40
0x462 MSTORE
0x463 DUP1
0x464 SWAP4
0x465 SWAP3
0x466 SWAP2
0x467 SWAP1
0x468 DUP2
0x469 DUP2
0x46a MSTORE
0x46b PUSH1 0x20
0x46d ADD
0x46e DUP4
0x46f DUP4
0x470 DUP1
0x471 DUP3
0x472 DUP5
0x473 CALLDATACOPY
0x474 DUP3
0x475 ADD
0x476 SWAP2
0x477 POP
0x478 POP
0x479 POP
0x47a POP
0x47b POP
0x47c POP
0x47d SWAP2
0x47e SWAP3
0x47f SWAP2
0x480 SWAP3
0x481 SWAP1
0x482 POP
0x483 POP
0x484 POP
0x485 PUSH2 0x47f
0x488 JUMP
0x489 JUMPDEST
0x48a STOP
0x48b JUMPDEST
0x48c PUSH2 0x231
0x48f PUSH2 0x50c
0x492 JUMP
0x493 JUMPDEST
0x494 STOP
0x495 JUMPDEST
0x496 ORIGIN
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad CALLER
0x4ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c3 AND
0x4c4 EQ
0x4c5 ISZERO
0x4c6 PUSH2 0x2b1
0x4c9 JUMPI
---
0x3c0: V224 = 0x0
0x3c3: REVERT 0x0 0x0
0x3c4: JUMPDEST 
0x3c6: V225 = 0x16b
0x3c9: V226 = 0x459
0x3cc: THROW 
0x3cd: JUMPDEST 
0x3ce: V227 = 0x40
0x3d0: V228 = M[0x40]
0x3d3: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3e9: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x400: M[V228] = V232
0x401: V233 = 0x20
0x403: V234 = ADD 0x20 V228
0x407: V235 = 0x40
0x409: V236 = M[0x40]
0x40c: V237 = SUB V234 V236
0x40e: RETURN V236 V237
0x40f: JUMPDEST 
0x410: V238 = 0x227
0x413: V239 = 0x4
0x416: V240 = CALLDATASIZE
0x417: V241 = SUB V240 0x4
0x419: V242 = ADD 0x4 V241
0x41d: V243 = CALLDATALOAD 0x4
0x41e: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x433: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x435: V246 = 0x20
0x437: V247 = ADD 0x20 0x4
0x43d: V248 = CALLDATALOAD 0x24
0x43f: V249 = 0x20
0x441: V250 = ADD 0x20 0x24
0x444: V251 = ADD 0x4 V248
0x446: V252 = CALLDATALOAD V251
0x448: V253 = 0x20
0x44a: V254 = ADD 0x20 V251
0x44e: V255 = 0x1f
0x450: V256 = ADD 0x1f V252
0x451: V257 = 0x20
0x455: V258 = DIV V256 0x20
0x456: V259 = MUL V258 0x20
0x457: V260 = 0x20
0x459: V261 = ADD 0x20 V259
0x45a: V262 = 0x40
0x45c: V263 = M[0x40]
0x45f: V264 = ADD V263 V261
0x460: V265 = 0x40
0x462: M[0x40] = V264
0x46a: M[V263] = V252
0x46b: V266 = 0x20
0x46d: V267 = ADD 0x20 V263
0x473: CALLDATACOPY V267 V254 V252
0x475: V268 = ADD V267 V252
0x485: V269 = 0x47f
0x488: THROW 
0x489: JUMPDEST 
0x48a: STOP 
0x48b: JUMPDEST 
0x48c: V270 = 0x231
0x48f: V271 = 0x50c
0x492: THROW 
0x493: JUMPDEST 
0x494: STOP 
0x495: JUMPDEST 
0x496: V272 = ORIGIN
0x497: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x4ad: V275 = CALLER
0x4ae: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4c4: V278 = EQ V277 V274
0x4c5: V279 = ISZERO V278
0x4c6: V280 = 0x2b1
0x4c9: THROWI V279
---
Entry stack: [V221]
Stack pops: 0
Stack additions: [0x16b, V263, V245, 0x227, 0x231]
Exit stack: []

================================

Block 0x4ca
[0x4ca:0x512]
---
Predecessors: [0x3c0]
Successors: [0x513]
---
0x4ca CALLER
0x4cb PUSH1 0x1
0x4cd PUSH1 0x0
0x4cf PUSH2 0x100
0x4d2 EXP
0x4d3 DUP2
0x4d4 SLOAD
0x4d5 DUP2
0x4d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4eb MUL
0x4ec NOT
0x4ed AND
0x4ee SWAP1
0x4ef DUP4
0x4f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x505 AND
0x506 MUL
0x507 OR
0x508 SWAP1
0x509 SSTORE
0x50a POP
0x50b PUSH2 0x2b0
0x50e PUSH2 0x50c
0x511 JUMP
0x512 JUMPDEST
---
0x4ca: V281 = CALLER
0x4cb: V282 = 0x1
0x4cd: V283 = 0x0
0x4cf: V284 = 0x100
0x4d2: V285 = EXP 0x100 0x0
0x4d4: V286 = S[0x1]
0x4d6: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x4eb: V288 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4ec: V289 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ed: V290 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V286
0x4f0: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x505: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x506: V293 = MUL V292 0x1
0x507: V294 = OR V293 V290
0x509: S[0x1] = V294
0x50b: V295 = 0x2b0
0x50e: V296 = 0x50c
0x511: THROW 
0x512: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2b0]
Exit stack: []

================================

Block 0x513
[0x513:0x56a]
---
Predecessors: [0x4ca]
Successors: [0x56b]
---
0x513 JUMPDEST
0x514 JUMP
0x515 JUMPDEST
0x516 PUSH1 0x0
0x518 DUP1
0x519 SWAP1
0x51a SLOAD
0x51b SWAP1
0x51c PUSH2 0x100
0x51f EXP
0x520 SWAP1
0x521 DIV
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54d AND
0x54e CALLER
0x54f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x564 AND
0x565 EQ
0x566 ISZERO
0x567 PUSH2 0x3a5
0x56a JUMPI
---
0x513: JUMPDEST 
0x514: JUMP S0
0x515: JUMPDEST 
0x516: V297 = 0x0
0x51a: V298 = S[0x0]
0x51c: V299 = 0x100
0x51f: V300 = EXP 0x100 0x0
0x521: V301 = DIV V298 0x1
0x522: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x538: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x54d: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x54e: V306 = CALLER
0x54f: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x564: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x565: V309 = EQ V308 V305
0x566: V310 = ISZERO V309
0x567: V311 = 0x3a5
0x56a: THROWI V310
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x56b
[0x56b:0x574]
---
Predecessors: [0x513]
Successors: [0x575]
---
0x56b PUSH1 0x0
0x56d DUP2
0x56e GT
0x56f DUP1
0x570 ISZERO
0x571 PUSH2 0x357
0x574 JUMPI
---
0x56b: V312 = 0x0
0x56e: V313 = GT S0 0x0
0x570: V314 = ISZERO V313
0x571: V315 = 0x357
0x574: THROWI V314
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V313]
Exit stack: [S0, V313]

================================

Block 0x575
[0x575:0x5b8]
---
Predecessors: [0x56b]
Successors: [0x5b9]
---
0x575 POP
0x576 DUP1
0x577 PUSH1 0x2
0x579 PUSH1 0x0
0x57b CALLER
0x57c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x591 AND
0x592 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a7 AND
0x5a8 DUP2
0x5a9 MSTORE
0x5aa PUSH1 0x20
0x5ac ADD
0x5ad SWAP1
0x5ae DUP2
0x5af MSTORE
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 PUSH1 0x0
0x5b5 SHA3
0x5b6 SLOAD
0x5b7 LT
0x5b8 ISZERO
---
0x577: V316 = 0x2
0x579: V317 = 0x0
0x57b: V318 = CALLER
0x57c: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x591: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x592: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a7: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x5a9: M[0x0] = V322
0x5aa: V323 = 0x20
0x5ac: V324 = ADD 0x20 0x0
0x5af: M[0x20] = 0x2
0x5b0: V325 = 0x20
0x5b2: V326 = ADD 0x20 0x20
0x5b3: V327 = 0x0
0x5b5: V328 = SHA3 0x0 0x40
0x5b6: V329 = S[V328]
0x5b7: V330 = LT V329 S1
0x5b8: V331 = ISZERO V330
---
Entry stack: [S1, V313]
Stack pops: 2
Stack additions: [S1, V331]
Exit stack: [S1, V331]

================================

Block 0x5b9
[0x5b9:0x5be]
---
Predecessors: [0x575]
Successors: [0x5bf]
---
0x5b9 JUMPDEST
0x5ba ISZERO
0x5bb PUSH2 0x3a4
0x5be JUMPI
---
0x5b9: JUMPDEST 
0x5ba: V332 = ISZERO V331
0x5bb: V333 = 0x3a4
0x5be: THROWI V332
---
Entry stack: [S1, V331]
Stack pops: 1
Stack additions: []
Exit stack: [S1]

================================

Block 0x5bf
[0x5bf:0x5fa]
---
Predecessors: [0x5b9]
Successors: [0x5fb]
---
0x5bf CALLER
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 PUSH2 0x8fc
0x5d9 DUP3
0x5da SWAP1
0x5db DUP2
0x5dc ISZERO
0x5dd MUL
0x5de SWAP1
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 PUSH1 0x0
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 DUP1
0x5e8 DUP4
0x5e9 SUB
0x5ea DUP2
0x5eb DUP6
0x5ec DUP9
0x5ed DUP9
0x5ee CALL
0x5ef SWAP4
0x5f0 POP
0x5f1 POP
0x5f2 POP
0x5f3 POP
0x5f4 ISZERO
0x5f5 DUP1
0x5f6 ISZERO
0x5f7 PUSH2 0x3a2
0x5fa JUMPI
---
0x5bf: V334 = CALLER
0x5c0: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x5d6: V337 = 0x8fc
0x5dc: V338 = ISZERO S0
0x5dd: V339 = MUL V338 0x8fc
0x5df: V340 = 0x40
0x5e1: V341 = M[0x40]
0x5e2: V342 = 0x0
0x5e4: V343 = 0x40
0x5e6: V344 = M[0x40]
0x5e9: V345 = SUB V341 V344
0x5ee: V346 = CALL V339 V336 S0 V344 V345 V344 0x0
0x5f4: V347 = ISZERO V346
0x5f6: V348 = ISZERO V347
0x5f7: V349 = 0x3a2
0x5fa: THROWI V348
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0, V347]
Exit stack: [S0, V347]

================================

Block 0x5fb
[0x5fb:0x605]
---
Predecessors: [0x5bf]
Successors: [0x606]
---
0x5fb RETURNDATASIZE
0x5fc PUSH1 0x0
0x5fe DUP1
0x5ff RETURNDATACOPY
0x600 RETURNDATASIZE
0x601 PUSH1 0x0
0x603 REVERT
0x604 JUMPDEST
0x605 POP
---
0x5fb: V350 = RETURNDATASIZE
0x5fc: V351 = 0x0
0x5ff: RETURNDATACOPY 0x0 0x0 V350
0x600: V352 = RETURNDATASIZE
0x601: V353 = 0x0
0x603: REVERT 0x0 V352
0x604: JUMPDEST 
---
Entry stack: [S1, V347]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x606
[0x606:0x606]
---
Predecessors: [0x5fb]
Successors: [0x607]
---
0x606 JUMPDEST
---
0x606: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x607
[0x607:0x677]
---
Predecessors: [0x606]
Successors: [0x678]
---
0x607 JUMPDEST
0x608 POP
0x609 JUMP
0x60a JUMPDEST
0x60b PUSH1 0x2
0x60d PUSH1 0x20
0x60f MSTORE
0x610 DUP1
0x611 PUSH1 0x0
0x613 MSTORE
0x614 PUSH1 0x40
0x616 PUSH1 0x0
0x618 SHA3
0x619 PUSH1 0x0
0x61b SWAP2
0x61c POP
0x61d SWAP1
0x61e POP
0x61f SLOAD
0x620 DUP2
0x621 JUMP
0x622 JUMPDEST
0x623 PUSH1 0x0
0x625 DUP1
0x626 SWAP1
0x627 SLOAD
0x628 SWAP1
0x629 PUSH2 0x100
0x62c EXP
0x62d SWAP1
0x62e DIV
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65a AND
0x65b CALLER
0x65c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x671 AND
0x672 EQ
0x673 ISZERO
0x674 PUSH2 0x456
0x677 JUMPI
---
0x607: JUMPDEST 
0x609: JUMP S1
0x60a: JUMPDEST 
0x60b: V354 = 0x2
0x60d: V355 = 0x20
0x60f: M[0x20] = 0x2
0x611: V356 = 0x0
0x613: M[0x0] = S0
0x614: V357 = 0x40
0x616: V358 = 0x0
0x618: V359 = SHA3 0x0 0x40
0x619: V360 = 0x0
0x61f: V361 = S[V359]
0x621: JUMP S1
0x622: JUMPDEST 
0x623: V362 = 0x0
0x627: V363 = S[0x0]
0x629: V364 = 0x100
0x62c: V365 = EXP 0x100 0x0
0x62e: V366 = DIV V363 0x1
0x62f: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x645: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x65b: V371 = CALLER
0x65c: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x671: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x672: V374 = EQ V373 V370
0x673: V375 = ISZERO V374
0x674: V376 = 0x456
0x677: THROWI V375
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x678
[0x678:0x6b7]
---
Predecessors: [0x607]
Successors: [0x6b8]
---
0x678 DUP1
0x679 PUSH1 0x0
0x67b DUP1
0x67c PUSH2 0x100
0x67f EXP
0x680 DUP2
0x681 SLOAD
0x682 DUP2
0x683 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x698 MUL
0x699 NOT
0x69a AND
0x69b SWAP1
0x69c DUP4
0x69d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b2 AND
0x6b3 MUL
0x6b4 OR
0x6b5 SWAP1
0x6b6 SSTORE
0x6b7 POP
---
0x679: V377 = 0x0
0x67c: V378 = 0x100
0x67f: V379 = EXP 0x100 0x0
0x681: V380 = S[0x0]
0x683: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x698: V382 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x699: V383 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V384 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V380
0x69d: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b2: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6b3: V387 = MUL V386 0x1
0x6b4: V388 = OR V387 V384
0x6b6: S[0x0] = V388
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x6b8
[0x6b8:0x70b]
---
Predecessors: [0x678]
Successors: [0x70c]
---
0x6b8 JUMPDEST
0x6b9 POP
0x6ba JUMP
0x6bb JUMPDEST
0x6bc PUSH1 0x1
0x6be PUSH1 0x0
0x6c0 SWAP1
0x6c1 SLOAD
0x6c2 SWAP1
0x6c3 PUSH2 0x100
0x6c6 EXP
0x6c7 SWAP1
0x6c8 DIV
0x6c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6de AND
0x6df DUP2
0x6e0 JUMP
0x6e1 JUMPDEST
0x6e2 DUP2
0x6e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f8 AND
0x6f9 CALLVALUE
0x6fa DUP3
0x6fb PUSH1 0x40
0x6fd MLOAD
0x6fe DUP1
0x6ff DUP3
0x700 DUP1
0x701 MLOAD
0x702 SWAP1
0x703 PUSH1 0x20
0x705 ADD
0x706 SWAP1
0x707 DUP1
0x708 DUP4
0x709 DUP4
0x70a PUSH1 0x0
---
0x6b8: JUMPDEST 
0x6ba: JUMP S1
0x6bb: JUMPDEST 
0x6bc: V389 = 0x1
0x6be: V390 = 0x0
0x6c1: V391 = S[0x1]
0x6c3: V392 = 0x100
0x6c6: V393 = EXP 0x100 0x0
0x6c8: V394 = DIV V391 0x1
0x6c9: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x6e0: JUMP S0
0x6e1: JUMPDEST 
0x6e3: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f8: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6f9: V399 = CALLVALUE
0x6fb: V400 = 0x40
0x6fd: V401 = M[0x40]
0x701: V402 = M[S0]
0x703: V403 = 0x20
0x705: V404 = ADD 0x20 S0
0x70a: V405 = 0x0
---
Entry stack: [S0]
Stack pops: 6
Stack additions: [0x0, V404, V401, V402, V402, V404, V401, V401, S0, V399, V398, S0, S1]
Exit stack: []

================================

Block 0x70c
[0x70c:0x714]
---
Predecessors: [0x6b8]
Successors: [0x715]
---
0x70c JUMPDEST
0x70d DUP4
0x70e DUP2
0x70f LT
0x710 ISZERO
0x711 PUSH2 0x4c5
0x714 JUMPI
---
0x70c: JUMPDEST 
0x70f: V406 = LT 0x0 V402
0x710: V407 = ISZERO V406
0x711: V408 = 0x4c5
0x714: THROWI V407
---
Entry stack: [S12, S11, V398, V399, S8, V401, V401, V404, V402, V402, V401, V404, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S12, S11, V398, V399, S8, V401, V401, V404, V402, V402, V401, V404, 0x0]

================================

Block 0x715
[0x715:0x73a]
---
Predecessors: [0x70c]
Successors: [0x73b]
---
0x715 DUP1
0x716 DUP3
0x717 ADD
0x718 MLOAD
0x719 DUP2
0x71a DUP5
0x71b ADD
0x71c MSTORE
0x71d PUSH1 0x20
0x71f DUP2
0x720 ADD
0x721 SWAP1
0x722 POP
0x723 PUSH2 0x4aa
0x726 JUMP
0x727 JUMPDEST
0x728 POP
0x729 POP
0x72a POP
0x72b POP
0x72c SWAP1
0x72d POP
0x72e SWAP1
0x72f DUP2
0x730 ADD
0x731 SWAP1
0x732 PUSH1 0x1f
0x734 AND
0x735 DUP1
0x736 ISZERO
0x737 PUSH2 0x4f2
0x73a JUMPI
---
0x717: V409 = ADD V404 0x0
0x718: V410 = M[V409]
0x71b: V411 = ADD V401 0x0
0x71c: M[V411] = V410
0x71d: V412 = 0x20
0x720: V413 = ADD 0x0 0x20
0x723: V414 = 0x4aa
0x726: THROW 
0x727: JUMPDEST 
0x730: V415 = ADD S4 S6
0x732: V416 = 0x1f
0x734: V417 = AND 0x1f S4
0x736: V418 = ISZERO V417
0x737: V419 = 0x4f2
0x73a: THROWI V418
---
Entry stack: [S12, S11, V398, V399, S8, V401, V401, V404, V402, V402, V401, V404, 0x0]
Stack pops: 3
Stack additions: [V417, V415]
Exit stack: []

================================

Block 0x73b
[0x73b:0x753]
---
Predecessors: [0x715]
Successors: [0x754]
---
0x73b DUP1
0x73c DUP3
0x73d SUB
0x73e DUP1
0x73f MLOAD
0x740 PUSH1 0x1
0x742 DUP4
0x743 PUSH1 0x20
0x745 SUB
0x746 PUSH2 0x100
0x749 EXP
0x74a SUB
0x74b NOT
0x74c AND
0x74d DUP2
0x74e MSTORE
0x74f PUSH1 0x20
0x751 ADD
0x752 SWAP2
0x753 POP
---
0x73d: V420 = SUB V415 V417
0x73f: V421 = M[V420]
0x740: V422 = 0x1
0x743: V423 = 0x20
0x745: V424 = SUB 0x20 V417
0x746: V425 = 0x100
0x749: V426 = EXP 0x100 V424
0x74a: V427 = SUB V426 0x1
0x74b: V428 = NOT V427
0x74c: V429 = AND V428 V421
0x74e: M[V420] = V429
0x74f: V430 = 0x20
0x751: V431 = ADD 0x20 V420
---
Entry stack: [V415, V417]
Stack pops: 2
Stack additions: [V431, S0]
Exit stack: [V431, V417]

================================

Block 0x754
[0x754:0x77e]
---
Predecessors: [0x73b]
Successors: [0x77f]
---
0x754 JUMPDEST
0x755 POP
0x756 SWAP2
0x757 POP
0x758 POP
0x759 PUSH1 0x0
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP1
0x75f DUP4
0x760 SUB
0x761 DUP2
0x762 DUP6
0x763 DUP8
0x764 GAS
0x765 CALL
0x766 SWAP3
0x767 POP
0x768 POP
0x769 POP
0x76a POP
0x76b POP
0x76c POP
0x76d JUMP
0x76e JUMPDEST
0x76f PUSH8 0x3782dace9d90000
0x778 CALLVALUE
0x779 GT
0x77a ISZERO
0x77b PUSH2 0x56a
0x77e JUMPI
---
0x754: JUMPDEST 
0x759: V432 = 0x0
0x75b: V433 = 0x40
0x75d: V434 = M[0x40]
0x760: V435 = SUB V431 V434
0x764: V436 = GAS
0x765: V437 = CALL V436 S5 S4 V434 V435 V434 0x0
0x76d: JUMP S8
0x76e: JUMPDEST 
0x76f: V438 = 0x3782dace9d90000
0x778: V439 = CALLVALUE
0x779: V440 = GT V439 0x3782dace9d90000
0x77a: V441 = ISZERO V440
0x77b: V442 = 0x56a
0x77e: THROWI V441
---
Entry stack: [V431, V417]
Stack pops: 18
Stack additions: []
Exit stack: []

================================

Block 0x77f
[0x77f:0x7cb]
---
Predecessors: [0x754]
Successors: [0x7cc]
---
0x77f CALLVALUE
0x780 PUSH1 0x2
0x782 PUSH1 0x0
0x784 CALLER
0x785 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79a AND
0x79b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b0 AND
0x7b1 DUP2
0x7b2 MSTORE
0x7b3 PUSH1 0x20
0x7b5 ADD
0x7b6 SWAP1
0x7b7 DUP2
0x7b8 MSTORE
0x7b9 PUSH1 0x20
0x7bb ADD
0x7bc PUSH1 0x0
0x7be SHA3
0x7bf PUSH1 0x0
0x7c1 DUP3
0x7c2 DUP3
0x7c3 SLOAD
0x7c4 ADD
0x7c5 SWAP3
0x7c6 POP
0x7c7 POP
0x7c8 DUP2
0x7c9 SWAP1
0x7ca SSTORE
0x7cb POP
---
0x77f: V443 = CALLVALUE
0x780: V444 = 0x2
0x782: V445 = 0x0
0x784: V446 = CALLER
0x785: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x79a: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x79b: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b0: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x7b2: M[0x0] = V450
0x7b3: V451 = 0x20
0x7b5: V452 = ADD 0x20 0x0
0x7b8: M[0x20] = 0x2
0x7b9: V453 = 0x20
0x7bb: V454 = ADD 0x20 0x20
0x7bc: V455 = 0x0
0x7be: V456 = SHA3 0x0 0x40
0x7bf: V457 = 0x0
0x7c3: V458 = S[V456]
0x7c4: V459 = ADD V458 V443
0x7ca: S[V456] = V459
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7cc
[0x7cc:0x7f9]
---
Predecessors: [0x77f]
Successors: []
---
0x7cc JUMPDEST
0x7cd JUMP
0x7ce STOP
0x7cf LOG1
0x7d0 PUSH6 0x627a7a723058
0x7d7 SHA3
0x7d8 LOG3
0x7d9 CREATE2
0x7da MISSING 0xd9
0x7db MISSING 0xd8
0x7dc MISSING 0xed
0x7dd MISSING 0xb6
0x7de MISSING 0xf9
0x7df MISSING 0xa5
0x7e0 LOG2
0x7e1 SGT
0x7e2 CREATE
0x7e3 MISSING 0xcf
0x7e4 MOD
0x7e5 EXP
0x7e6 RETURNDATASIZE
0x7e7 PUSH13 0xa94f31da760b20be9f2f1ed3d2
0x7f5 MISSING 0xed
0x7f6 MISSING 0xdc
0x7f7 PUSH1 0x0
0x7f9 MISSING 0x29
---
0x7cc: JUMPDEST 
0x7cd: JUMP S0
0x7ce: STOP 
0x7cf: LOG S0 S1 S2
0x7d0: V460 = 0x627a7a723058
0x7d7: V461 = SHA3 0x627a7a723058 S3
0x7d8: LOG V461 S4 S5 S6 S7
0x7d9: V462 = CREATE2 S8 S9 S10 S11
0x7da: MISSING 0xd9
0x7db: MISSING 0xd8
0x7dc: MISSING 0xed
0x7dd: MISSING 0xb6
0x7de: MISSING 0xf9
0x7df: MISSING 0xa5
0x7e0: LOG S0 S1 S2 S3
0x7e1: V463 = SGT S4 S5
0x7e2: V464 = CREATE V463 S6 S7
0x7e3: MISSING 0xcf
0x7e4: V465 = MOD S0 S1
0x7e5: V466 = EXP V465 S2
0x7e6: V467 = RETURNDATASIZE
0x7e7: V468 = 0xa94f31da760b20be9f2f1ed3d2
0x7f5: MISSING 0xed
0x7f6: MISSING 0xdc
0x7f7: V469 = 0x0
0x7f9: MISSING 0x29
---
Entry stack: []
Stack pops: 1782
Stack additions: [0x0]
Exit stack: []

================================

Function 0:
Public function signature: 0x4fb2e45d
Entry block: 0x51
Exit block: 0x92
Body: 0x51, 0x59, 0x5d, 0x92, 0x110, 0x166, 0x1a6

Function 1:
Public function signature: 0xbe6d055a
Entry block: 0x94
Exit block: 0x10e
Body: 0x94, 0x10e, 0x1a9, 0x1d4, 0x1dd, 0x1ef, 0x203, 0x21c

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

