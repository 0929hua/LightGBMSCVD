Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x99]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x99
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x99
0xc: JUMPI 0x99 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xb6]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2183e390
0x3c EQ
0x3d PUSH2 0xb6
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2183e390
0x3c: V13 = EQ 0x2183e390 V11
0x3d: V14 = 0xb6
0x40: JUMPI 0xb6 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xef]
---
0x41 DUP1
0x42 PUSH4 0x4102bf5c
0x47 EQ
0x48 PUSH2 0xef
0x4b JUMPI
---
0x42: V15 = 0x4102bf5c
0x47: V16 = EQ 0x4102bf5c V11
0x48: V17 = 0xef
0x4b: JUMPI 0xef V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x15b]
---
0x4c DUP1
0x4d PUSH4 0x4981b3ca
0x52 EQ
0x53 PUSH2 0x15b
0x56 JUMPI
---
0x4d: V18 = 0x4981b3ca
0x52: V19 = EQ 0x4981b3ca V11
0x53: V20 = 0x15b
0x56: JUMPI 0x15b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1d0]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x1d0
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x1d0
0x61: JUMPI 0x1d0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x225]
---
0x62 DUP1
0x63 PUSH4 0x9675bb9c
0x68 EQ
0x69 PUSH2 0x225
0x6c JUMPI
---
0x63: V24 = 0x9675bb9c
0x68: V25 = EQ 0x9675bb9c V11
0x69: V26 = 0x225
0x6c: JUMPI 0x225 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x27a]
---
0x6d DUP1
0x6e PUSH4 0x9e281a98
0x73 EQ
0x74 PUSH2 0x27a
0x77 JUMPI
---
0x6e: V27 = 0x9e281a98
0x73: V28 = EQ 0x9e281a98 V11
0x74: V29 = 0x27a
0x77: JUMPI 0x27a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2d4]
---
0x78 DUP1
0x79 PUSH4 0xbdd5be2f
0x7e EQ
0x7f PUSH2 0x2d4
0x82 JUMPI
---
0x79: V30 = 0xbdd5be2f
0x7e: V31 = EQ 0xbdd5be2f V11
0x7f: V32 = 0x2d4
0x82: JUMPI 0x2d4 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x33e]
---
0x83 DUP1
0x84 PUSH4 0xf14210a6
0x89 EQ
0x8a PUSH2 0x33e
0x8d JUMPI
---
0x84: V33 = 0xf14210a6
0x89: V34 = EQ 0xf14210a6 V11
0x8a: V35 = 0x33e
0x8d: JUMPI 0x33e V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x379]
---
0x8e DUP1
0x8f PUSH4 0xf2fde38b
0x94 EQ
0x95 PUSH2 0x379
0x98 JUMPI
---
0x8f: V36 = 0xf2fde38b
0x94: V37 = EQ 0xf2fde38b V11
0x95: V38 = 0x379
0x98: JUMPI 0x379 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xad]
---
Predecessors: [0x0, 0x8e]
Successors: [0xae, 0xb2]
---
0x99 JUMPDEST
0x9a PUSH1 0x0
0x9c DUP1
0x9d CALLER
0x9e SWAP1
0x9f POP
0xa0 DUP1
0xa1 EXTCODESIZE
0xa2 SWAP2
0xa3 POP
0xa4 PUSH1 0x0
0xa6 DUP3
0xa7 GT
0xa8 ISZERO
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0x99: JUMPDEST 
0x9a: V39 = 0x0
0x9d: V40 = CALLER
0xa1: V41 = EXTCODESIZE V40
0xa4: V42 = 0x0
0xa7: V43 = GT V41 0x0
0xa8: V44 = ISZERO V43
0xa9: V45 = ISZERO V44
0xaa: V46 = 0xb2
0xad: JUMPI 0xb2 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41, V40]
Exit stack: [V11, V41, V40]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0x99]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V47 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V11, V41, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41, V40]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0x99]
Successors: []
---
0xb2 JUMPDEST
0xb3 POP
0xb4 POP
0xb5 STOP
---
0xb2: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V11, V41, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0xd]
Successors: [0xbd, 0xc1]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V48 = CALLVALUE
0xb8: V49 = ISZERO V48
0xb9: V50 = 0xc1
0xbc: JUMPI 0xc1 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb6]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V51 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc1
[0xc1:0xec]
---
Predecessors: [0xb6]
Successors: [0x3b2]
---
0xc1 JUMPDEST
0xc2 PUSH2 0xed
0xc5 PUSH1 0x4
0xc7 DUP1
0xc8 DUP1
0xc9 CALLDATALOAD
0xca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf AND
0xe0 SWAP1
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 SWAP1
0xe5 SWAP2
0xe6 SWAP1
0xe7 POP
0xe8 POP
0xe9 PUSH2 0x3b2
0xec JUMP
---
0xc1: JUMPDEST 
0xc2: V52 = 0xed
0xc5: V53 = 0x4
0xc9: V54 = CALLDATALOAD 0x4
0xca: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xe1: V57 = 0x20
0xe3: V58 = ADD 0x20 0x4
0xe9: V59 = 0x3b2
0xec: JUMP 0x3b2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xed, V56]
Exit stack: [V11, 0xed, V56]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0x449]
Successors: []
---
0xed JUMPDEST
0xee STOP
---
0xed: JUMPDEST 
0xee: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x41]
Successors: [0xf6, 0xfa]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V60 = CALLVALUE
0xf1: V61 = ISZERO V60
0xf2: V62 = 0xfa
0xf5: JUMPI 0xfa V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xef]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V63 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfa
[0xfa:0x144]
---
Predecessors: [0xef]
Successors: [0x48d]
---
0xfa JUMPDEST
0xfb PUSH2 0x145
0xfe PUSH1 0x4
0x100 DUP1
0x101 DUP1
0x102 PUSH2 0x100
0x105 ADD
0x106 SWAP1
0x107 SWAP2
0x108 SWAP1
0x109 DUP1
0x10a PUSH1 0xc0
0x10c ADD
0x10d SWAP1
0x10e SWAP2
0x10f SWAP1
0x110 DUP1
0x111 CALLDATALOAD
0x112 SWAP1
0x113 PUSH1 0x20
0x115 ADD
0x116 SWAP1
0x117 SWAP2
0x118 SWAP1
0x119 DUP1
0x11a CALLDATALOAD
0x11b PUSH1 0xff
0x11d AND
0x11e SWAP1
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP1
0x123 SWAP2
0x124 SWAP1
0x125 DUP1
0x126 CALLDATALOAD
0x127 PUSH1 0x0
0x129 NOT
0x12a AND
0x12b SWAP1
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 SWAP2
0x131 SWAP1
0x132 DUP1
0x133 CALLDATALOAD
0x134 PUSH1 0x0
0x136 NOT
0x137 AND
0x138 SWAP1
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP1
0x13d SWAP2
0x13e SWAP1
0x13f POP
0x140 POP
0x141 PUSH2 0x48d
0x144 JUMP
---
0xfa: JUMPDEST 
0xfb: V64 = 0x145
0xfe: V65 = 0x4
0x102: V66 = 0x100
0x105: V67 = ADD 0x100 0x4
0x10a: V68 = 0xc0
0x10c: V69 = ADD 0xc0 0x104
0x111: V70 = CALLDATALOAD 0x1c4
0x113: V71 = 0x20
0x115: V72 = ADD 0x20 0x1c4
0x11a: V73 = CALLDATALOAD 0x1e4
0x11b: V74 = 0xff
0x11d: V75 = AND 0xff V73
0x11f: V76 = 0x20
0x121: V77 = ADD 0x20 0x1e4
0x126: V78 = CALLDATALOAD 0x204
0x127: V79 = 0x0
0x129: V80 = NOT 0x0
0x12a: V81 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V78
0x12c: V82 = 0x20
0x12e: V83 = ADD 0x20 0x204
0x133: V84 = CALLDATALOAD 0x224
0x134: V85 = 0x0
0x136: V86 = NOT 0x0
0x137: V87 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V84
0x139: V88 = 0x20
0x13b: V89 = ADD 0x20 0x224
0x141: V90 = 0x48d
0x144: JUMP 0x48d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x145, 0x4, 0x104, V70, V75, V81, V87]
Exit stack: [V11, 0x145, 0x4, 0x104, V70, V75, V81, V87]

================================

Block 0x145
[0x145:0x15a]
---
Predecessors: [0x49e]
Successors: []
---
0x145 JUMPDEST
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a DUP3
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 SWAP2
0x151 POP
0x152 POP
0x153 PUSH1 0x40
0x155 MLOAD
0x156 DUP1
0x157 SWAP2
0x158 SUB
0x159 SWAP1
0x15a RETURN
---
0x145: JUMPDEST 
0x146: V91 = 0x40
0x148: V92 = M[0x40]
0x14c: M[V92] = V320
0x14d: V93 = 0x20
0x14f: V94 = ADD 0x20 V92
0x153: V95 = 0x40
0x155: V96 = M[0x40]
0x158: V97 = SUB V94 V96
0x15a: RETURN V96 V97
---
Entry stack: [V11, V320]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x15b
[0x15b:0x161]
---
Predecessors: [0x4c]
Successors: [0x162, 0x166]
---
0x15b JUMPDEST
0x15c CALLVALUE
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15b: JUMPDEST 
0x15c: V98 = CALLVALUE
0x15d: V99 = ISZERO V98
0x15e: V100 = 0x166
0x161: JUMPI 0x166 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15b]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V101 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x166
[0x166:0x1b9]
---
Predecessors: [0x15b]
Successors: [0x4af]
---
0x166 JUMPDEST
0x167 PUSH2 0x1ba
0x16a PUSH1 0x4
0x16c DUP1
0x16d DUP1
0x16e PUSH2 0x100
0x171 ADD
0x172 SWAP1
0x173 SWAP2
0x174 SWAP1
0x175 DUP1
0x176 PUSH1 0xc0
0x178 ADD
0x179 SWAP1
0x17a SWAP2
0x17b SWAP1
0x17c DUP1
0x17d CALLDATALOAD
0x17e SWAP1
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP1
0x183 SWAP2
0x184 SWAP1
0x185 DUP1
0x186 CALLDATALOAD
0x187 SWAP1
0x188 PUSH1 0x20
0x18a ADD
0x18b SWAP1
0x18c SWAP2
0x18d SWAP1
0x18e DUP1
0x18f CALLDATALOAD
0x190 PUSH1 0xff
0x192 AND
0x193 SWAP1
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP1
0x198 SWAP2
0x199 SWAP1
0x19a DUP1
0x19b CALLDATALOAD
0x19c PUSH1 0x0
0x19e NOT
0x19f AND
0x1a0 SWAP1
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 SWAP1
0x1a5 SWAP2
0x1a6 SWAP1
0x1a7 DUP1
0x1a8 CALLDATALOAD
0x1a9 PUSH1 0x0
0x1ab NOT
0x1ac AND
0x1ad SWAP1
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 SWAP1
0x1b4 POP
0x1b5 POP
0x1b6 PUSH2 0x4af
0x1b9 JUMP
---
0x166: JUMPDEST 
0x167: V102 = 0x1ba
0x16a: V103 = 0x4
0x16e: V104 = 0x100
0x171: V105 = ADD 0x100 0x4
0x176: V106 = 0xc0
0x178: V107 = ADD 0xc0 0x104
0x17d: V108 = CALLDATALOAD 0x1c4
0x17f: V109 = 0x20
0x181: V110 = ADD 0x20 0x1c4
0x186: V111 = CALLDATALOAD 0x1e4
0x188: V112 = 0x20
0x18a: V113 = ADD 0x20 0x1e4
0x18f: V114 = CALLDATALOAD 0x204
0x190: V115 = 0xff
0x192: V116 = AND 0xff V114
0x194: V117 = 0x20
0x196: V118 = ADD 0x20 0x204
0x19b: V119 = CALLDATALOAD 0x224
0x19c: V120 = 0x0
0x19e: V121 = NOT 0x0
0x19f: V122 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V119
0x1a1: V123 = 0x20
0x1a3: V124 = ADD 0x20 0x224
0x1a8: V125 = CALLDATALOAD 0x244
0x1a9: V126 = 0x0
0x1ab: V127 = NOT 0x0
0x1ac: V128 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V125
0x1ae: V129 = 0x20
0x1b0: V130 = ADD 0x20 0x244
0x1b6: V131 = 0x4af
0x1b9: JUMP 0x4af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128]

================================

Block 0x1ba
[0x1ba:0x1cf]
---
Predecessors: [0x5cb]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be DUP1
0x1bf DUP3
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 SWAP2
0x1c6 POP
0x1c7 POP
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc SWAP2
0x1cd SUB
0x1ce SWAP1
0x1cf RETURN
---
0x1ba: JUMPDEST 
0x1bb: V132 = 0x40
0x1bd: V133 = M[0x40]
0x1c1: M[V133] = S0
0x1c2: V134 = 0x20
0x1c4: V135 = ADD 0x20 V133
0x1c8: V136 = 0x40
0x1ca: V137 = M[0x40]
0x1cd: V138 = SUB V135 V137
0x1cf: RETURN V137 V138
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1d0
[0x1d0:0x1d6]
---
Predecessors: [0x57]
Successors: [0x1d7, 0x1db]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V139 = CALLVALUE
0x1d2: V140 = ISZERO V139
0x1d3: V141 = 0x1db
0x1d6: JUMPI 0x1db V140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V142 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x1d0]
Successors: [0x5d6]
---
0x1db JUMPDEST
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x5d6
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V143 = 0x1e3
0x1df: V144 = 0x5d6
0x1e2: JUMP 0x5d6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V11, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x224]
---
Predecessors: [0x5d6]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 DUP3
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 AND
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP2
0x21b POP
0x21c POP
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x1e3: JUMPDEST 
0x1e4: V145 = 0x40
0x1e6: V146 = M[0x40]
0x1e9: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x1ff: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x216: M[V146] = V150
0x217: V151 = 0x20
0x219: V152 = ADD 0x20 V146
0x21d: V153 = 0x40
0x21f: V154 = M[0x40]
0x222: V155 = SUB V152 V154
0x224: RETURN V154 V155
---
Entry stack: [V11, 0x1e3, V398]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1e3]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x62]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V156 = CALLVALUE
0x227: V157 = ISZERO V156
0x228: V158 = 0x230
0x22b: JUMPI 0x230 V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V159 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x225]
Successors: [0x5fb]
---
0x230 JUMPDEST
0x231 PUSH2 0x238
0x234 PUSH2 0x5fb
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V160 = 0x238
0x234: V161 = 0x5fb
0x237: JUMP 0x5fb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V11, 0x238]

================================

Block 0x238
[0x238:0x279]
---
Predecessors: [0x5fb]
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x40
0x23b MLOAD
0x23c DUP1
0x23d DUP3
0x23e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x253 AND
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a DUP2
0x26b MSTORE
0x26c PUSH1 0x20
0x26e ADD
0x26f SWAP2
0x270 POP
0x271 POP
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP1
0x276 SWAP2
0x277 SUB
0x278 SWAP1
0x279 RETURN
---
0x238: JUMPDEST 
0x239: V162 = 0x40
0x23b: V163 = M[0x40]
0x23e: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x253: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x254: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x26b: M[V163] = V167
0x26c: V168 = 0x20
0x26e: V169 = ADD 0x20 V163
0x272: V170 = 0x40
0x274: V171 = M[0x40]
0x277: V172 = SUB V169 V171
0x279: RETURN V171 V172
---
Entry stack: [V11, 0x238, V406]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x238]

================================

Block 0x27a
[0x27a:0x280]
---
Predecessors: [0x6d]
Successors: [0x281, 0x285]
---
0x27a JUMPDEST
0x27b CALLVALUE
0x27c ISZERO
0x27d PUSH2 0x285
0x280 JUMPI
---
0x27a: JUMPDEST 
0x27b: V173 = CALLVALUE
0x27c: V174 = ISZERO V173
0x27d: V175 = 0x285
0x280: JUMPI 0x285 V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x27a]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V176 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x285
[0x285:0x2b9]
---
Predecessors: [0x27a]
Successors: [0x621]
---
0x285 JUMPDEST
0x286 PUSH2 0x2ba
0x289 PUSH1 0x4
0x28b DUP1
0x28c DUP1
0x28d CALLDATALOAD
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 SWAP1
0x2a5 PUSH1 0x20
0x2a7 ADD
0x2a8 SWAP1
0x2a9 SWAP2
0x2aa SWAP1
0x2ab DUP1
0x2ac CALLDATALOAD
0x2ad SWAP1
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP1
0x2b2 SWAP2
0x2b3 SWAP1
0x2b4 POP
0x2b5 POP
0x2b6 PUSH2 0x621
0x2b9 JUMP
---
0x285: JUMPDEST 
0x286: V177 = 0x2ba
0x289: V178 = 0x4
0x28d: V179 = CALLDATALOAD 0x4
0x28e: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2a5: V182 = 0x20
0x2a7: V183 = ADD 0x20 0x4
0x2ac: V184 = CALLDATALOAD 0x24
0x2ae: V185 = 0x20
0x2b0: V186 = ADD 0x20 0x24
0x2b6: V187 = 0x621
0x2b9: JUMP 0x621
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2ba, V181, V184]
Exit stack: [V11, 0x2ba, V181, V184]

================================

Block 0x2ba
[0x2ba:0x2d3]
---
Predecessors: [0x74e]
Successors: []
---
0x2ba JUMPDEST
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be DUP1
0x2bf DUP3
0x2c0 ISZERO
0x2c1 ISZERO
0x2c2 ISZERO
0x2c3 ISZERO
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP2
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 SWAP2
0x2d1 SUB
0x2d2 SWAP1
0x2d3 RETURN
---
0x2ba: JUMPDEST 
0x2bb: V188 = 0x40
0x2bd: V189 = M[0x40]
0x2c0: V190 = ISZERO V469
0x2c1: V191 = ISZERO V190
0x2c2: V192 = ISZERO V191
0x2c3: V193 = ISZERO V192
0x2c5: M[V189] = V193
0x2c6: V194 = 0x20
0x2c8: V195 = ADD 0x20 V189
0x2cc: V196 = 0x40
0x2ce: V197 = M[0x40]
0x2d1: V198 = SUB V195 V197
0x2d3: RETURN V197 V198
---
Entry stack: [V11, V469]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d4
[0x2d4:0x327]
---
Predecessors: [0x78]
Successors: [0x760]
---
0x2d4 JUMPDEST
0x2d5 PUSH2 0x328
0x2d8 PUSH1 0x4
0x2da DUP1
0x2db DUP1
0x2dc PUSH2 0x100
0x2df ADD
0x2e0 SWAP1
0x2e1 SWAP2
0x2e2 SWAP1
0x2e3 DUP1
0x2e4 PUSH1 0xc0
0x2e6 ADD
0x2e7 SWAP1
0x2e8 SWAP2
0x2e9 SWAP1
0x2ea DUP1
0x2eb CALLDATALOAD
0x2ec SWAP1
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 SWAP1
0x2f1 SWAP2
0x2f2 SWAP1
0x2f3 DUP1
0x2f4 CALLDATALOAD
0x2f5 SWAP1
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 SWAP1
0x2fa SWAP2
0x2fb SWAP1
0x2fc DUP1
0x2fd CALLDATALOAD
0x2fe PUSH1 0xff
0x300 AND
0x301 SWAP1
0x302 PUSH1 0x20
0x304 ADD
0x305 SWAP1
0x306 SWAP2
0x307 SWAP1
0x308 DUP1
0x309 CALLDATALOAD
0x30a PUSH1 0x0
0x30c NOT
0x30d AND
0x30e SWAP1
0x30f PUSH1 0x20
0x311 ADD
0x312 SWAP1
0x313 SWAP2
0x314 SWAP1
0x315 DUP1
0x316 CALLDATALOAD
0x317 PUSH1 0x0
0x319 NOT
0x31a AND
0x31b SWAP1
0x31c PUSH1 0x20
0x31e ADD
0x31f SWAP1
0x320 SWAP2
0x321 SWAP1
0x322 POP
0x323 POP
0x324 PUSH2 0x760
0x327 JUMP
---
0x2d4: JUMPDEST 
0x2d5: V199 = 0x328
0x2d8: V200 = 0x4
0x2dc: V201 = 0x100
0x2df: V202 = ADD 0x100 0x4
0x2e4: V203 = 0xc0
0x2e6: V204 = ADD 0xc0 0x104
0x2eb: V205 = CALLDATALOAD 0x1c4
0x2ed: V206 = 0x20
0x2ef: V207 = ADD 0x20 0x1c4
0x2f4: V208 = CALLDATALOAD 0x1e4
0x2f6: V209 = 0x20
0x2f8: V210 = ADD 0x20 0x1e4
0x2fd: V211 = CALLDATALOAD 0x204
0x2fe: V212 = 0xff
0x300: V213 = AND 0xff V211
0x302: V214 = 0x20
0x304: V215 = ADD 0x20 0x204
0x309: V216 = CALLDATALOAD 0x224
0x30a: V217 = 0x0
0x30c: V218 = NOT 0x0
0x30d: V219 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V216
0x30f: V220 = 0x20
0x311: V221 = ADD 0x20 0x224
0x316: V222 = CALLDATALOAD 0x244
0x317: V223 = 0x0
0x319: V224 = NOT 0x0
0x31a: V225 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V222
0x31c: V226 = 0x20
0x31e: V227 = ADD 0x20 0x244
0x324: V228 = 0x760
0x327: JUMP 0x760
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x328, 0x4, 0x104, V205, V208, V213, V219, V225]
Exit stack: [V11, 0x328, 0x4, 0x104, V205, V208, V213, V219, V225]

================================

Block 0x328
[0x328:0x33d]
---
Predecessors: [0x825]
Successors: []
---
0x328 JUMPDEST
0x329 PUSH1 0x40
0x32b MLOAD
0x32c DUP1
0x32d DUP3
0x32e DUP2
0x32f MSTORE
0x330 PUSH1 0x20
0x332 ADD
0x333 SWAP2
0x334 POP
0x335 POP
0x336 PUSH1 0x40
0x338 MLOAD
0x339 DUP1
0x33a SWAP2
0x33b SUB
0x33c SWAP1
0x33d RETURN
---
0x328: JUMPDEST 
0x329: V229 = 0x40
0x32b: V230 = M[0x40]
0x32f: M[V230] = S0
0x330: V231 = 0x20
0x332: V232 = ADD 0x20 V230
0x336: V233 = 0x40
0x338: V234 = M[0x40]
0x33b: V235 = SUB V232 V234
0x33d: RETURN V234 V235
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x33e
[0x33e:0x344]
---
Predecessors: [0x83]
Successors: [0x345, 0x349]
---
0x33e JUMPDEST
0x33f CALLVALUE
0x340 ISZERO
0x341 PUSH2 0x349
0x344 JUMPI
---
0x33e: JUMPDEST 
0x33f: V236 = CALLVALUE
0x340: V237 = ISZERO V236
0x341: V238 = 0x349
0x344: JUMPI 0x349 V237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x345
[0x345:0x348]
---
Predecessors: [0x33e]
Successors: []
---
0x345 PUSH1 0x0
0x347 DUP1
0x348 REVERT
---
0x345: V239 = 0x0
0x348: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x349
[0x349:0x35e]
---
Predecessors: [0x33e]
Successors: [0x831]
---
0x349 JUMPDEST
0x34a PUSH2 0x35f
0x34d PUSH1 0x4
0x34f DUP1
0x350 DUP1
0x351 CALLDATALOAD
0x352 SWAP1
0x353 PUSH1 0x20
0x355 ADD
0x356 SWAP1
0x357 SWAP2
0x358 SWAP1
0x359 POP
0x35a POP
0x35b PUSH2 0x831
0x35e JUMP
---
0x349: JUMPDEST 
0x34a: V240 = 0x35f
0x34d: V241 = 0x4
0x351: V242 = CALLDATALOAD 0x4
0x353: V243 = 0x20
0x355: V244 = ADD 0x20 0x4
0x35b: V245 = 0x831
0x35e: JUMP 0x831
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x35f, V242]
Exit stack: [V11, 0x35f, V242]

================================

Block 0x35f
[0x35f:0x378]
---
Predecessors: [0x8ef]
Successors: []
---
0x35f JUMPDEST
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 DUP3
0x365 ISZERO
0x366 ISZERO
0x367 ISZERO
0x368 ISZERO
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x20
0x36d ADD
0x36e SWAP2
0x36f POP
0x370 POP
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 SWAP2
0x376 SUB
0x377 SWAP1
0x378 RETURN
---
0x35f: JUMPDEST 
0x360: V246 = 0x40
0x362: V247 = M[0x40]
0x365: V248 = ISZERO 0x0
0x366: V249 = ISZERO 0x1
0x367: V250 = ISZERO 0x0
0x368: V251 = ISZERO 0x1
0x36a: M[V247] = 0x0
0x36b: V252 = 0x20
0x36d: V253 = ADD 0x20 V247
0x371: V254 = 0x40
0x373: V255 = M[0x40]
0x376: V256 = SUB V253 V255
0x378: RETURN V255 V256
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x379
[0x379:0x37f]
---
Predecessors: [0x8e]
Successors: [0x380, 0x384]
---
0x379 JUMPDEST
0x37a CALLVALUE
0x37b ISZERO
0x37c PUSH2 0x384
0x37f JUMPI
---
0x379: JUMPDEST 
0x37a: V257 = CALLVALUE
0x37b: V258 = ISZERO V257
0x37c: V259 = 0x384
0x37f: JUMPI 0x384 V258
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x379]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V260 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x384
[0x384:0x3af]
---
Predecessors: [0x379]
Successors: [0x8f4]
---
0x384 JUMPDEST
0x385 PUSH2 0x3b0
0x388 PUSH1 0x4
0x38a DUP1
0x38b DUP1
0x38c CALLDATALOAD
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 SWAP1
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP1
0x3a8 SWAP2
0x3a9 SWAP1
0x3aa POP
0x3ab POP
0x3ac PUSH2 0x8f4
0x3af JUMP
---
0x384: JUMPDEST 
0x385: V261 = 0x3b0
0x388: V262 = 0x4
0x38c: V263 = CALLDATALOAD 0x4
0x38d: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x3a4: V266 = 0x20
0x3a6: V267 = ADD 0x20 0x4
0x3ac: V268 = 0x8f4
0x3af: JUMP 0x8f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3b0, V265]
Exit stack: [V11, 0x3b0, V265]

================================

Block 0x3b0
[0x3b0:0x3b1]
---
Predecessors: [0x98b]
Successors: []
---
0x3b0 JUMPDEST
0x3b1 STOP
---
0x3b0: JUMPDEST 
0x3b1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b2
[0x3b2:0x408]
---
Predecessors: [0xc1]
Successors: [0x409, 0x40d]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 SWAP1
0x3b7 SLOAD
0x3b8 SWAP1
0x3b9 PUSH2 0x100
0x3bc EXP
0x3bd SWAP1
0x3be DIV
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 AND
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb CALLER
0x3ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x401 AND
0x402 EQ
0x403 ISZERO
0x404 ISZERO
0x405 PUSH2 0x40d
0x408 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V269 = 0x0
0x3b7: V270 = S[0x0]
0x3b9: V271 = 0x100
0x3bc: V272 = EXP 0x100 0x0
0x3be: V273 = DIV V270 0x1
0x3bf: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x3d5: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x3eb: V278 = CALLER
0x3ec: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x401: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x402: V281 = EQ V280 V277
0x403: V282 = ISZERO V281
0x404: V283 = ISZERO V282
0x405: V284 = 0x40d
0x408: JUMPI 0x40d V283
---
Entry stack: [V11, 0xed, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V56]

================================

Block 0x409
[0x409:0x40c]
---
Predecessors: [0x3b2]
Successors: []
---
0x409 PUSH1 0x0
0x40b DUP1
0x40c REVERT
---
0x409: V285 = 0x0
0x40c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V56]

================================

Block 0x40d
[0x40d:0x444]
---
Predecessors: [0x3b2]
Successors: [0x445, 0x449]
---
0x40d JUMPDEST
0x40e PUSH1 0x0
0x410 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x425 AND
0x426 DUP2
0x427 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43c AND
0x43d EQ
0x43e ISZERO
0x43f ISZERO
0x440 ISZERO
0x441 PUSH2 0x449
0x444 JUMPI
---
0x40d: JUMPDEST 
0x40e: V286 = 0x0
0x410: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x425: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x427: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x43d: V291 = EQ V290 0x0
0x43e: V292 = ISZERO V291
0x43f: V293 = ISZERO V292
0x440: V294 = ISZERO V293
0x441: V295 = 0x449
0x444: JUMPI 0x449 V294
---
Entry stack: [V11, 0xed, V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xed, V56]

================================

Block 0x445
[0x445:0x448]
---
Predecessors: [0x40d]
Successors: []
---
0x445 PUSH1 0x0
0x447 DUP1
0x448 REVERT
---
0x445: V296 = 0x0
0x448: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V56]

================================

Block 0x449
[0x449:0x48c]
---
Predecessors: [0x40d]
Successors: [0xed]
---
0x449 JUMPDEST
0x44a DUP1
0x44b PUSH1 0x1
0x44d PUSH1 0x0
0x44f PUSH2 0x100
0x452 EXP
0x453 DUP2
0x454 SLOAD
0x455 DUP2
0x456 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46b MUL
0x46c NOT
0x46d AND
0x46e SWAP1
0x46f DUP4
0x470 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x485 AND
0x486 MUL
0x487 OR
0x488 SWAP1
0x489 SSTORE
0x48a POP
0x48b POP
0x48c JUMP
---
0x449: JUMPDEST 
0x44b: V297 = 0x1
0x44d: V298 = 0x0
0x44f: V299 = 0x100
0x452: V300 = EXP 0x100 0x0
0x454: V301 = S[0x1]
0x456: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V303 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x46c: V304 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x46d: V305 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V301
0x470: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x485: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x486: V308 = MUL V307 0x1
0x487: V309 = OR V308 V305
0x489: S[0x1] = V309
0x48c: JUMP 0xed
---
Entry stack: [V11, 0xed, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x48d
[0x48d:0x49c]
---
Predecessors: [0xfa]
Successors: [0x49d, 0x49e]
---
0x48d JUMPDEST
0x48e PUSH1 0x0
0x490 DUP6
0x491 PUSH1 0x0
0x493 PUSH1 0x6
0x495 DUP2
0x496 LT
0x497 ISZERO
0x498 ISZERO
0x499 PUSH2 0x49e
0x49c JUMPI
---
0x48d: JUMPDEST 
0x48e: V310 = 0x0
0x491: V311 = 0x0
0x493: V312 = 0x6
0x496: V313 = LT 0x0 0x6
0x497: V314 = ISZERO 0x1
0x498: V315 = ISZERO 0x0
0x499: V316 = 0x49e
0x49c: JUMPI 0x49e 0x1
---
Entry stack: [V11, 0x145, 0x4, 0x104, V70, V75, V81, V87]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, S4, 0x0]
Exit stack: [V11, 0x145, 0x4, 0x104, V70, V75, V81, V87, 0x0, 0x104, 0x0]

================================

Block 0x49d
[0x49d:0x49d]
---
Predecessors: [0x48d]
Successors: []
---
0x49d INVALID
---
0x49d: INVALID 
---
Entry stack: [V11, 0x145, 0x4, 0x104, V70, V75, V81, V87, 0x0, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, 0x4, 0x104, V70, V75, V81, V87, 0x0, 0x104, 0x0]

================================

Block 0x49e
[0x49e:0x4ae]
---
Predecessors: [0x48d]
Successors: [0x145]
---
0x49e JUMPDEST
0x49f PUSH1 0x20
0x4a1 MUL
0x4a2 ADD
0x4a3 CALLDATALOAD
0x4a4 SWAP1
0x4a5 POP
0x4a6 SWAP7
0x4a7 SWAP6
0x4a8 POP
0x4a9 POP
0x4aa POP
0x4ab POP
0x4ac POP
0x4ad POP
0x4ae JUMP
---
0x49e: JUMPDEST 
0x49f: V317 = 0x20
0x4a1: V318 = MUL 0x20 0x0
0x4a2: V319 = ADD 0x0 0x104
0x4a3: V320 = CALLDATALOAD 0x104
0x4ae: JUMP 0x145
---
Entry stack: [V11, 0x145, 0x4, 0x104, V70, V75, V81, V87, 0x0, 0x104, 0x0]
Stack pops: 10
Stack additions: [V320]
Exit stack: [V11, V320]

================================

Block 0x4af
[0x4af:0x508]
---
Predecessors: [0x166]
Successors: [0x509, 0x50d]
---
0x4af JUMPDEST
0x4b0 PUSH1 0x0
0x4b2 PUSH1 0x1
0x4b4 PUSH1 0x0
0x4b6 SWAP1
0x4b7 SLOAD
0x4b8 SWAP1
0x4b9 PUSH2 0x100
0x4bc EXP
0x4bd SWAP1
0x4be DIV
0x4bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d4 AND
0x4d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ea AND
0x4eb CALLER
0x4ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x501 AND
0x502 EQ
0x503 ISZERO
0x504 ISZERO
0x505 PUSH2 0x50d
0x508 JUMPI
---
0x4af: JUMPDEST 
0x4b0: V321 = 0x0
0x4b2: V322 = 0x1
0x4b4: V323 = 0x0
0x4b7: V324 = S[0x1]
0x4b9: V325 = 0x100
0x4bc: V326 = EXP 0x100 0x0
0x4be: V327 = DIV V324 0x1
0x4bf: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x4d5: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x4eb: V332 = CALLER
0x4ec: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x501: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x502: V335 = EQ V334 V331
0x503: V336 = ISZERO V335
0x504: V337 = ISZERO V336
0x505: V338 = 0x50d
0x508: JUMPI 0x50d V337
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x4af]
Successors: []
---
0x509 PUSH1 0x0
0x50b DUP1
0x50c REVERT
---
0x509: V339 = 0x0
0x50c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0]

================================

Block 0x50d
[0x50d:0x51d]
---
Predecessors: [0x4af]
Successors: [0x51e, 0x51f]
---
0x50d JUMPDEST
0x50e PUSH2 0x569
0x511 DUP9
0x512 PUSH1 0x0
0x514 PUSH1 0x8
0x516 DUP2
0x517 LT
0x518 ISZERO
0x519 ISZERO
0x51a PUSH2 0x51f
0x51d JUMPI
---
0x50d: JUMPDEST 
0x50e: V340 = 0x569
0x512: V341 = 0x0
0x514: V342 = 0x8
0x517: V343 = LT 0x0 0x8
0x518: V344 = ISZERO 0x1
0x519: V345 = ISZERO 0x0
0x51a: V346 = 0x51f
0x51d: JUMPI 0x51f 0x1
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x569, S7, 0x0]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, 0x4, 0x0]

================================

Block 0x51e
[0x51e:0x51e]
---
Predecessors: [0x50d]
Successors: []
---
0x51e INVALID
---
0x51e: INVALID 
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, 0x4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, 0x4, 0x0]

================================

Block 0x51f
[0x51f:0x547]
---
Predecessors: [0x50d]
Successors: [0x548, 0x549]
---
0x51f JUMPDEST
0x520 PUSH1 0x20
0x522 MUL
0x523 ADD
0x524 CALLDATALOAD
0x525 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53a AND
0x53b DUP10
0x53c PUSH1 0x1
0x53e PUSH1 0x8
0x540 DUP2
0x541 LT
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x549
0x547 JUMPI
---
0x51f: JUMPDEST 
0x520: V347 = 0x20
0x522: V348 = MUL 0x20 0x0
0x523: V349 = ADD 0x0 0x4
0x524: V350 = CALLDATALOAD 0x4
0x525: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x53c: V353 = 0x1
0x53e: V354 = 0x8
0x541: V355 = LT 0x1 0x8
0x542: V356 = ISZERO 0x1
0x543: V357 = ISZERO 0x0
0x544: V358 = 0x549
0x547: JUMPI 0x549 0x1
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, 0x4, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V352, S10, 0x1]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, 0x4, 0x1]

================================

Block 0x548
[0x548:0x548]
---
Predecessors: [0x51f]
Successors: []
---
0x548 INVALID
---
0x548: INVALID 
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, 0x4, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, 0x4, 0x1]

================================

Block 0x549
[0x549:0x568]
---
Predecessors: [0x51f]
Successors: [0xa49]
---
0x549 JUMPDEST
0x54a PUSH1 0x20
0x54c MUL
0x54d ADD
0x54e CALLDATALOAD
0x54f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x564 AND
0x565 PUSH2 0xa49
0x568 JUMP
---
0x549: JUMPDEST 
0x54a: V359 = 0x20
0x54c: V360 = MUL 0x20 0x1
0x54d: V361 = ADD 0x20 0x4
0x54e: V362 = CALLDATALOAD 0x24
0x54f: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x564: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x565: V365 = 0xa49
0x568: JUMP 0xa49
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, 0x4, 0x1]
Stack pops: 2
Stack additions: [V364]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]

================================

Block 0x569
[0x569:0x5bc]
---
Predecessors: [0xc1b]
Successors: [0xc1f]
---
0x569 JUMPDEST
0x56a PUSH2 0x5bd
0x56d DUP9
0x56e PUSH1 0x8
0x570 DUP1
0x571 PUSH1 0x20
0x573 MUL
0x574 PUSH1 0x40
0x576 MLOAD
0x577 SWAP1
0x578 DUP2
0x579 ADD
0x57a PUSH1 0x40
0x57c MSTORE
0x57d DUP1
0x57e SWAP3
0x57f SWAP2
0x580 SWAP1
0x581 DUP3
0x582 PUSH1 0x8
0x584 PUSH1 0x20
0x586 MUL
0x587 DUP1
0x588 DUP3
0x589 DUP5
0x58a CALLDATACOPY
0x58b DUP3
0x58c ADD
0x58d SWAP2
0x58e POP
0x58f POP
0x590 POP
0x591 POP
0x592 POP
0x593 DUP9
0x594 PUSH1 0x6
0x596 DUP1
0x597 PUSH1 0x20
0x599 MUL
0x59a PUSH1 0x40
0x59c MLOAD
0x59d SWAP1
0x59e DUP2
0x59f ADD
0x5a0 PUSH1 0x40
0x5a2 MSTORE
0x5a3 DUP1
0x5a4 SWAP3
0x5a5 SWAP2
0x5a6 SWAP1
0x5a7 DUP3
0x5a8 PUSH1 0x6
0x5aa PUSH1 0x20
0x5ac MUL
0x5ad DUP1
0x5ae DUP3
0x5af DUP5
0x5b0 CALLDATACOPY
0x5b1 DUP3
0x5b2 ADD
0x5b3 SWAP2
0x5b4 POP
0x5b5 POP
0x5b6 POP
0x5b7 POP
0x5b8 POP
0x5b9 PUSH2 0xc1f
0x5bc JUMP
---
0x569: JUMPDEST 
0x56a: V366 = 0x5bd
0x56e: V367 = 0x8
0x571: V368 = 0x20
0x573: V369 = MUL 0x20 0x8
0x574: V370 = 0x40
0x576: V371 = M[0x40]
0x579: V372 = ADD V371 0x100
0x57a: V373 = 0x40
0x57c: M[0x40] = V372
0x582: V374 = 0x8
0x584: V375 = 0x20
0x586: V376 = MUL 0x20 0x8
0x58a: CALLDATACOPY V371 0x4 0x100
0x58c: V377 = ADD V371 0x100
0x594: V378 = 0x6
0x597: V379 = 0x20
0x599: V380 = MUL 0x20 0x6
0x59a: V381 = 0x40
0x59c: V382 = M[0x40]
0x59f: V383 = ADD V382 0xc0
0x5a0: V384 = 0x40
0x5a2: M[0x40] = V383
0x5a8: V385 = 0x6
0x5aa: V386 = 0x20
0x5ac: V387 = MUL 0x20 0x6
0x5b0: CALLDATACOPY V382 0x104 0xc0
0x5b2: V388 = ADD V382 0xc0
0x5b9: V389 = 0xc1f
0x5bc: JUMP 0xc1f
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x5bd, V371, V382]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x5bd, V371, V382]

================================

Block 0x5bd
[0x5bd:0x5ca]
---
Predecessors: [0xe75]
Successors: [0xe8c]
---
0x5bd JUMPDEST
0x5be POP
0x5bf DUP1
0x5c0 SWAP2
0x5c1 POP
0x5c2 POP
0x5c3 PUSH2 0x5cb
0x5c6 DUP2
0x5c7 PUSH2 0xe8c
0x5ca JUMP
---
0x5bd: JUMPDEST 
0x5c3: V390 = 0x5cb
0x5c7: V391 = 0xe8c
0x5ca: JUMP 0xe8c
---
Entry stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, 0x0, V896, S0]
Stack pops: 3
Stack additions: [S1, 0x5cb, S1]
Exit stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, V896, 0x5cb, V896]

================================

Block 0x5cb
[0x5cb:0x5d5]
---
Predecessors: [0xecc]
Successors: [0x1ba]
---
0x5cb JUMPDEST
0x5cc SWAP8
0x5cd SWAP7
0x5ce POP
0x5cf POP
0x5d0 POP
0x5d1 POP
0x5d2 POP
0x5d3 POP
0x5d4 POP
0x5d5 JUMP
---
0x5cb: JUMPDEST 
0x5d5: JUMP {0x4, 0x1ba}
---
Entry stack: [V11, S9, {0x4, 0x1ba}, {0x4, 0x104}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S0]
Exit stack: [V11, S9, S0]

================================

Block 0x5d6
[0x5d6:0x5fa]
---
Predecessors: [0x1db]
Successors: [0x1e3]
---
0x5d6 JUMPDEST
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da SWAP1
0x5db SLOAD
0x5dc SWAP1
0x5dd PUSH2 0x100
0x5e0 EXP
0x5e1 SWAP1
0x5e2 DIV
0x5e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f8 AND
0x5f9 DUP2
0x5fa JUMP
---
0x5d6: JUMPDEST 
0x5d7: V392 = 0x0
0x5db: V393 = S[0x0]
0x5dd: V394 = 0x100
0x5e0: V395 = EXP 0x100 0x0
0x5e2: V396 = DIV V393 0x1
0x5e3: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f8: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x5fa: JUMP 0x1e3
---
Entry stack: [V11, 0x1e3]
Stack pops: 1
Stack additions: [S0, V398]
Exit stack: [V11, 0x1e3, V398]

================================

Block 0x5fb
[0x5fb:0x620]
---
Predecessors: [0x230]
Successors: [0x238]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x1
0x5fe PUSH1 0x0
0x600 SWAP1
0x601 SLOAD
0x602 SWAP1
0x603 PUSH2 0x100
0x606 EXP
0x607 SWAP1
0x608 DIV
0x609 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61e AND
0x61f DUP2
0x620 JUMP
---
0x5fb: JUMPDEST 
0x5fc: V399 = 0x1
0x5fe: V400 = 0x0
0x601: V401 = S[0x1]
0x603: V402 = 0x100
0x606: V403 = EXP 0x100 0x0
0x608: V404 = DIV V401 0x1
0x609: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x61e: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x620: JUMP 0x238
---
Entry stack: [V11, 0x238]
Stack pops: 1
Stack additions: [S0, V406]
Exit stack: [V11, 0x238, V406]

================================

Block 0x621
[0x621:0x679]
---
Predecessors: [0x285]
Successors: [0x67a, 0x67e]
---
0x621 JUMPDEST
0x622 PUSH1 0x0
0x624 DUP1
0x625 PUSH1 0x0
0x627 SWAP1
0x628 SLOAD
0x629 SWAP1
0x62a PUSH2 0x100
0x62d EXP
0x62e SWAP1
0x62f DIV
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65b AND
0x65c CALLER
0x65d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x672 AND
0x673 EQ
0x674 ISZERO
0x675 ISZERO
0x676 PUSH2 0x67e
0x679 JUMPI
---
0x621: JUMPDEST 
0x622: V407 = 0x0
0x625: V408 = 0x0
0x628: V409 = S[0x0]
0x62a: V410 = 0x100
0x62d: V411 = EXP 0x100 0x0
0x62f: V412 = DIV V409 0x1
0x630: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x646: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x65b: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x65c: V417 = CALLER
0x65d: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x672: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x673: V420 = EQ V419 V416
0x674: V421 = ISZERO V420
0x675: V422 = ISZERO V421
0x676: V423 = 0x67e
0x679: JUMPI 0x67e V422
---
Entry stack: [V11, 0x2ba, V181, V184]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x2ba, V181, V184, 0x0]

================================

Block 0x67a
[0x67a:0x67d]
---
Predecessors: [0x621]
Successors: []
---
0x67a PUSH1 0x0
0x67c DUP1
0x67d REVERT
---
0x67a: V424 = 0x0
0x67d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2ba, V181, V184, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2ba, V181, V184, 0x0]

================================

Block 0x67e
[0x67e:0x73c]
---
Predecessors: [0x621]
Successors: [0x73d, 0x741]
---
0x67e JUMPDEST
0x67f DUP3
0x680 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x695 AND
0x696 PUSH4 0xa9059cbb
0x69b PUSH1 0x0
0x69d DUP1
0x69e SWAP1
0x69f SLOAD
0x6a0 SWAP1
0x6a1 PUSH2 0x100
0x6a4 EXP
0x6a5 SWAP1
0x6a6 DIV
0x6a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bc AND
0x6bd DUP5
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 DUP4
0x6c2 PUSH4 0xffffffff
0x6c7 AND
0x6c8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6e6 MUL
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 PUSH1 0x4
0x6eb ADD
0x6ec DUP1
0x6ed DUP4
0x6ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x703 AND
0x704 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x719 AND
0x71a DUP2
0x71b MSTORE
0x71c PUSH1 0x20
0x71e ADD
0x71f DUP3
0x720 DUP2
0x721 MSTORE
0x722 PUSH1 0x20
0x724 ADD
0x725 SWAP3
0x726 POP
0x727 POP
0x728 POP
0x729 PUSH1 0x20
0x72b PUSH1 0x40
0x72d MLOAD
0x72e DUP1
0x72f DUP4
0x730 SUB
0x731 DUP2
0x732 PUSH1 0x0
0x734 DUP8
0x735 DUP1
0x736 EXTCODESIZE
0x737 ISZERO
0x738 ISZERO
0x739 PUSH2 0x741
0x73c JUMPI
---
0x67e: JUMPDEST 
0x680: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x695: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x696: V427 = 0xa9059cbb
0x69b: V428 = 0x0
0x69f: V429 = S[0x0]
0x6a1: V430 = 0x100
0x6a4: V431 = EXP 0x100 0x0
0x6a6: V432 = DIV V429 0x1
0x6a7: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x6be: V435 = 0x40
0x6c0: V436 = M[0x40]
0x6c2: V437 = 0xffffffff
0x6c7: V438 = AND 0xffffffff 0xa9059cbb
0x6c8: V439 = 0x100000000000000000000000000000000000000000000000000000000
0x6e6: V440 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6e8: M[V436] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6e9: V441 = 0x4
0x6eb: V442 = ADD 0x4 V436
0x6ee: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x703: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x704: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x719: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x71b: M[V442] = V446
0x71c: V447 = 0x20
0x71e: V448 = ADD 0x20 V442
0x721: M[V448] = V184
0x722: V449 = 0x20
0x724: V450 = ADD 0x20 V448
0x729: V451 = 0x20
0x72b: V452 = 0x40
0x72d: V453 = M[0x40]
0x730: V454 = SUB V450 V453
0x732: V455 = 0x0
0x736: V456 = EXTCODESIZE V426
0x737: V457 = ISZERO V456
0x738: V458 = ISZERO V457
0x739: V459 = 0x741
0x73c: JUMPI 0x741 V458
---
Entry stack: [V11, 0x2ba, V181, V184, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V426, 0xa9059cbb, V450, 0x20, V453, V454, V453, 0x0, V426]
Exit stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450, 0x20, V453, V454, V453, 0x0, V426]

================================

Block 0x73d
[0x73d:0x740]
---
Predecessors: [0x67e]
Successors: []
---
0x73d PUSH1 0x0
0x73f DUP1
0x740 REVERT
---
0x73d: V460 = 0x0
0x740: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450, 0x20, V453, V454, V453, 0x0, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450, 0x20, V453, V454, V453, 0x0, V426]

================================

Block 0x741
[0x741:0x749]
---
Predecessors: [0x67e]
Successors: [0x74a, 0x74e]
---
0x741 JUMPDEST
0x742 GAS
0x743 CALL
0x744 ISZERO
0x745 ISZERO
0x746 PUSH2 0x74e
0x749 JUMPI
---
0x741: JUMPDEST 
0x742: V461 = GAS
0x743: V462 = CALL V461 V426 0x0 V453 V454 V453 0x20
0x744: V463 = ISZERO V462
0x745: V464 = ISZERO V463
0x746: V465 = 0x74e
0x749: JUMPI 0x74e V464
---
Entry stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450, 0x20, V453, V454, V453, 0x0, V426]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450]

================================

Block 0x74a
[0x74a:0x74d]
---
Predecessors: [0x741]
Successors: []
---
0x74a PUSH1 0x0
0x74c DUP1
0x74d REVERT
---
0x74a: V466 = 0x0
0x74d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450]

================================

Block 0x74e
[0x74e:0x75f]
---
Predecessors: [0x741]
Successors: [0x2ba]
---
0x74e JUMPDEST
0x74f POP
0x750 POP
0x751 POP
0x752 PUSH1 0x40
0x754 MLOAD
0x755 DUP1
0x756 MLOAD
0x757 SWAP1
0x758 POP
0x759 SWAP1
0x75a POP
0x75b SWAP3
0x75c SWAP2
0x75d POP
0x75e POP
0x75f JUMP
---
0x74e: JUMPDEST 
0x752: V467 = 0x40
0x754: V468 = M[0x40]
0x756: V469 = M[V468]
0x75f: JUMP 0x2ba
---
Entry stack: [V11, 0x2ba, V181, V184, 0x0, V426, 0xa9059cbb, V450]
Stack pops: 7
Stack additions: [V469]
Exit stack: [V11, V469]

================================

Block 0x760
[0x760:0x7ba]
---
Predecessors: [0x2d4]
Successors: [0x7bb, 0x7bf]
---
0x760 JUMPDEST
0x761 PUSH1 0x0
0x763 DUP1
0x764 PUSH1 0x1
0x766 PUSH1 0x0
0x768 SWAP1
0x769 SLOAD
0x76a SWAP1
0x76b PUSH2 0x100
0x76e EXP
0x76f SWAP1
0x770 DIV
0x771 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x786 AND
0x787 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79c AND
0x79d CALLER
0x79e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b3 AND
0x7b4 EQ
0x7b5 ISZERO
0x7b6 ISZERO
0x7b7 PUSH2 0x7bf
0x7ba JUMPI
---
0x760: JUMPDEST 
0x761: V470 = 0x0
0x764: V471 = 0x1
0x766: V472 = 0x0
0x769: V473 = S[0x1]
0x76b: V474 = 0x100
0x76e: V475 = EXP 0x100 0x0
0x770: V476 = DIV V473 0x1
0x771: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x786: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x787: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x79d: V481 = CALLER
0x79e: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b3: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x7b4: V484 = EQ V483 V480
0x7b5: V485 = ISZERO V484
0x7b6: V486 = ISZERO V485
0x7b7: V487 = 0x7bf
0x7ba: JUMPI 0x7bf V486
---
Entry stack: [V11, 0x328, 0x4, 0x104, V205, V208, V213, V219, V225]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x328, 0x4, 0x104, V205, V208, V213, V219, V225, 0x0, 0x0]

================================

Block 0x7bb
[0x7bb:0x7be]
---
Predecessors: [0x760]
Successors: []
---
0x7bb PUSH1 0x0
0x7bd DUP1
0x7be REVERT
---
0x7bb: V488 = 0x0
0x7be: REVERT 0x0 0x0
---
Entry stack: [V11, 0x328, 0x4, 0x104, V205, V208, V213, V219, V225, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x328, 0x4, 0x104, V205, V208, V213, V219, V225, 0x0, 0x0]

================================

Block 0x7bf
[0x7bf:0x812]
---
Predecessors: [0x760]
Successors: [0xc1f]
---
0x7bf JUMPDEST
0x7c0 PUSH2 0x813
0x7c3 DUP10
0x7c4 PUSH1 0x8
0x7c6 DUP1
0x7c7 PUSH1 0x20
0x7c9 MUL
0x7ca PUSH1 0x40
0x7cc MLOAD
0x7cd SWAP1
0x7ce DUP2
0x7cf ADD
0x7d0 PUSH1 0x40
0x7d2 MSTORE
0x7d3 DUP1
0x7d4 SWAP3
0x7d5 SWAP2
0x7d6 SWAP1
0x7d7 DUP3
0x7d8 PUSH1 0x8
0x7da PUSH1 0x20
0x7dc MUL
0x7dd DUP1
0x7de DUP3
0x7df DUP5
0x7e0 CALLDATACOPY
0x7e1 DUP3
0x7e2 ADD
0x7e3 SWAP2
0x7e4 POP
0x7e5 POP
0x7e6 POP
0x7e7 POP
0x7e8 POP
0x7e9 DUP10
0x7ea PUSH1 0x6
0x7ec DUP1
0x7ed PUSH1 0x20
0x7ef MUL
0x7f0 PUSH1 0x40
0x7f2 MLOAD
0x7f3 SWAP1
0x7f4 DUP2
0x7f5 ADD
0x7f6 PUSH1 0x40
0x7f8 MSTORE
0x7f9 DUP1
0x7fa SWAP3
0x7fb SWAP2
0x7fc SWAP1
0x7fd DUP3
0x7fe PUSH1 0x6
0x800 PUSH1 0x20
0x802 MUL
0x803 DUP1
0x804 DUP3
0x805 DUP5
0x806 CALLDATACOPY
0x807 DUP3
0x808 ADD
0x809 SWAP2
0x80a POP
0x80b POP
0x80c POP
0x80d POP
0x80e POP
0x80f PUSH2 0xc1f
0x812 JUMP
---
0x7bf: JUMPDEST 
0x7c0: V489 = 0x813
0x7c4: V490 = 0x8
0x7c7: V491 = 0x20
0x7c9: V492 = MUL 0x20 0x8
0x7ca: V493 = 0x40
0x7cc: V494 = M[0x40]
0x7cf: V495 = ADD V494 0x100
0x7d0: V496 = 0x40
0x7d2: M[0x40] = V495
0x7d8: V497 = 0x8
0x7da: V498 = 0x20
0x7dc: V499 = MUL 0x20 0x8
0x7e0: CALLDATACOPY V494 0x4 0x100
0x7e2: V500 = ADD V494 0x100
0x7ea: V501 = 0x6
0x7ed: V502 = 0x20
0x7ef: V503 = MUL 0x20 0x6
0x7f0: V504 = 0x40
0x7f2: V505 = M[0x40]
0x7f5: V506 = ADD V505 0xc0
0x7f6: V507 = 0x40
0x7f8: M[0x40] = V506
0x7fe: V508 = 0x6
0x800: V509 = 0x20
0x802: V510 = MUL 0x20 0x6
0x806: CALLDATACOPY V505 0x104 0xc0
0x808: V511 = ADD V505 0xc0
0x80f: V512 = 0xc1f
0x812: JUMP 0xc1f
---
Entry stack: [V11, 0x328, 0x4, 0x104, V205, V208, V213, V219, V225, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x813, V494, V505]
Exit stack: [V11, 0x328, 0x4, 0x104, V205, V208, V213, V219, V225, 0x0, 0x0, 0x813, V494, V505]

================================

Block 0x813
[0x813:0x824]
---
Predecessors: [0xe75]
Successors: [0xecf]
---
0x813 JUMPDEST
0x814 DUP1
0x815 SWAP3
0x816 POP
0x817 DUP2
0x818 SWAP4
0x819 POP
0x81a POP
0x81b POP
0x81c PUSH2 0x825
0x81f DUP2
0x820 DUP4
0x821 PUSH2 0xecf
0x824 JUMP
---
0x813: JUMPDEST 
0x81c: V513 = 0x825
0x821: V514 = 0xecf
0x824: JUMP 0xecf
---
Entry stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, 0x0, V896, S0]
Stack pops: 4
Stack additions: [S1, S0, 0x825, S0, S1]
Exit stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, V896, S0, 0x825, S0, V896]

================================

Block 0x825
[0x825:0x830]
---
Predecessors: [0xf93]
Successors: [0x328]
---
0x825 JUMPDEST
0x826 POP
0x827 SWAP8
0x828 SWAP7
0x829 POP
0x82a POP
0x82b POP
0x82c POP
0x82d POP
0x82e POP
0x82f POP
0x830 JUMP
---
0x825: JUMPDEST 
0x830: JUMP S9
---
Entry stack: [V11, S9, {0x4, 0x1ba}, {0x4, 0x104}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S1]
Exit stack: [V11, S1]

================================

Block 0x831
[0x831:0x889]
---
Predecessors: [0x349]
Successors: [0x88a, 0x88e]
---
0x831 JUMPDEST
0x832 PUSH1 0x0
0x834 DUP1
0x835 PUSH1 0x0
0x837 SWAP1
0x838 SLOAD
0x839 SWAP1
0x83a PUSH2 0x100
0x83d EXP
0x83e SWAP1
0x83f DIV
0x840 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x855 AND
0x856 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86b AND
0x86c CALLER
0x86d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x882 AND
0x883 EQ
0x884 ISZERO
0x885 ISZERO
0x886 PUSH2 0x88e
0x889 JUMPI
---
0x831: JUMPDEST 
0x832: V515 = 0x0
0x835: V516 = 0x0
0x838: V517 = S[0x0]
0x83a: V518 = 0x100
0x83d: V519 = EXP 0x100 0x0
0x83f: V520 = DIV V517 0x1
0x840: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x855: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x856: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x86b: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x86c: V525 = CALLER
0x86d: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x882: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x883: V528 = EQ V527 V524
0x884: V529 = ISZERO V528
0x885: V530 = ISZERO V529
0x886: V531 = 0x88e
0x889: JUMPI 0x88e V530
---
Entry stack: [V11, 0x35f, V242]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x35f, V242, 0x0]

================================

Block 0x88a
[0x88a:0x88d]
---
Predecessors: [0x831]
Successors: []
---
0x88a PUSH1 0x0
0x88c DUP1
0x88d REVERT
---
0x88a: V532 = 0x0
0x88d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x35f, V242, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x35f, V242, 0x0]

================================

Block 0x88e
[0x88e:0x8ea]
---
Predecessors: [0x831]
Successors: [0x8eb, 0x8ef]
---
0x88e JUMPDEST
0x88f PUSH1 0x0
0x891 DUP1
0x892 SWAP1
0x893 SLOAD
0x894 SWAP1
0x895 PUSH2 0x100
0x898 EXP
0x899 SWAP1
0x89a DIV
0x89b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b0 AND
0x8b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c6 AND
0x8c7 PUSH2 0x8fc
0x8ca DUP4
0x8cb SWAP1
0x8cc DUP2
0x8cd ISZERO
0x8ce MUL
0x8cf SWAP1
0x8d0 PUSH1 0x40
0x8d2 MLOAD
0x8d3 PUSH1 0x0
0x8d5 PUSH1 0x40
0x8d7 MLOAD
0x8d8 DUP1
0x8d9 DUP4
0x8da SUB
0x8db DUP2
0x8dc DUP6
0x8dd DUP9
0x8de DUP9
0x8df CALL
0x8e0 SWAP4
0x8e1 POP
0x8e2 POP
0x8e3 POP
0x8e4 POP
0x8e5 ISZERO
0x8e6 ISZERO
0x8e7 PUSH2 0x8ef
0x8ea JUMPI
---
0x88e: JUMPDEST 
0x88f: V533 = 0x0
0x893: V534 = S[0x0]
0x895: V535 = 0x100
0x898: V536 = EXP 0x100 0x0
0x89a: V537 = DIV V534 0x1
0x89b: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b0: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x8b1: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c6: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x8c7: V542 = 0x8fc
0x8cd: V543 = ISZERO V242
0x8ce: V544 = MUL V543 0x8fc
0x8d0: V545 = 0x40
0x8d2: V546 = M[0x40]
0x8d3: V547 = 0x0
0x8d5: V548 = 0x40
0x8d7: V549 = M[0x40]
0x8da: V550 = SUB V546 V549
0x8df: V551 = CALL V544 V541 V242 V549 V550 V549 0x0
0x8e5: V552 = ISZERO V551
0x8e6: V553 = ISZERO V552
0x8e7: V554 = 0x8ef
0x8ea: JUMPI 0x8ef V553
---
Entry stack: [V11, 0x35f, V242, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x35f, V242, 0x0]

================================

Block 0x8eb
[0x8eb:0x8ee]
---
Predecessors: [0x88e]
Successors: []
---
0x8eb PUSH1 0x0
0x8ed DUP1
0x8ee REVERT
---
0x8eb: V555 = 0x0
0x8ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x35f, V242, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x35f, V242, 0x0]

================================

Block 0x8ef
[0x8ef:0x8f3]
---
Predecessors: [0x88e]
Successors: [0x35f]
---
0x8ef JUMPDEST
0x8f0 SWAP2
0x8f1 SWAP1
0x8f2 POP
0x8f3 JUMP
---
0x8ef: JUMPDEST 
0x8f3: JUMP 0x35f
---
Entry stack: [V11, 0x35f, V242, 0x0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, 0x0]

================================

Block 0x8f4
[0x8f4:0x94a]
---
Predecessors: [0x384]
Successors: [0x94b, 0x94f]
---
0x8f4 JUMPDEST
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 SWAP1
0x8f9 SLOAD
0x8fa SWAP1
0x8fb PUSH2 0x100
0x8fe EXP
0x8ff SWAP1
0x900 DIV
0x901 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x916 AND
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d CALLER
0x92e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x943 AND
0x944 EQ
0x945 ISZERO
0x946 ISZERO
0x947 PUSH2 0x94f
0x94a JUMPI
---
0x8f4: JUMPDEST 
0x8f5: V556 = 0x0
0x8f9: V557 = S[0x0]
0x8fb: V558 = 0x100
0x8fe: V559 = EXP 0x100 0x0
0x900: V560 = DIV V557 0x1
0x901: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x916: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x917: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x92d: V565 = CALLER
0x92e: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x943: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x944: V568 = EQ V567 V564
0x945: V569 = ISZERO V568
0x946: V570 = ISZERO V569
0x947: V571 = 0x94f
0x94a: JUMPI 0x94f V570
---
Entry stack: [V11, 0x3b0, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b0, V265]

================================

Block 0x94b
[0x94b:0x94e]
---
Predecessors: [0x8f4]
Successors: []
---
0x94b PUSH1 0x0
0x94d DUP1
0x94e REVERT
---
0x94b: V572 = 0x0
0x94e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3b0, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b0, V265]

================================

Block 0x94f
[0x94f:0x986]
---
Predecessors: [0x8f4]
Successors: [0x987, 0x98b]
---
0x94f JUMPDEST
0x950 PUSH1 0x0
0x952 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x967 AND
0x968 DUP2
0x969 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97e AND
0x97f EQ
0x980 ISZERO
0x981 ISZERO
0x982 ISZERO
0x983 PUSH2 0x98b
0x986 JUMPI
---
0x94f: JUMPDEST 
0x950: V573 = 0x0
0x952: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x967: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x969: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0x97e: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x97f: V578 = EQ V577 0x0
0x980: V579 = ISZERO V578
0x981: V580 = ISZERO V579
0x982: V581 = ISZERO V580
0x983: V582 = 0x98b
0x986: JUMPI 0x98b V581
---
Entry stack: [V11, 0x3b0, V265]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x3b0, V265]

================================

Block 0x987
[0x987:0x98a]
---
Predecessors: [0x94f]
Successors: []
---
0x987 PUSH1 0x0
0x989 DUP1
0x98a REVERT
---
0x987: V583 = 0x0
0x98a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3b0, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b0, V265]

================================

Block 0x98b
[0x98b:0xa48]
---
Predecessors: [0x94f]
Successors: [0x3b0]
---
0x98b JUMPDEST
0x98c DUP1
0x98d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a2 AND
0x9a3 PUSH1 0x0
0x9a5 DUP1
0x9a6 SWAP1
0x9a7 SLOAD
0x9a8 SWAP1
0x9a9 PUSH2 0x100
0x9ac EXP
0x9ad SWAP1
0x9ae DIV
0x9af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c4 AND
0x9c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9da AND
0x9db PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9fc PUSH1 0x40
0x9fe MLOAD
0x9ff PUSH1 0x40
0xa01 MLOAD
0xa02 DUP1
0xa03 SWAP2
0xa04 SUB
0xa05 SWAP1
0xa06 LOG3
0xa07 DUP1
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b PUSH2 0x100
0xa0e EXP
0xa0f DUP2
0xa10 SLOAD
0xa11 DUP2
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 MUL
0xa28 NOT
0xa29 AND
0xa2a SWAP1
0xa2b DUP4
0xa2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa41 AND
0xa42 MUL
0xa43 OR
0xa44 SWAP1
0xa45 SSTORE
0xa46 POP
0xa47 POP
0xa48 JUMP
---
0x98b: JUMPDEST 
0x98d: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a2: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x9a3: V586 = 0x0
0x9a7: V587 = S[0x0]
0x9a9: V588 = 0x100
0x9ac: V589 = EXP 0x100 0x0
0x9ae: V590 = DIV V587 0x1
0x9af: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c4: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x9c5: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x9da: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x9db: V595 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9fc: V596 = 0x40
0x9fe: V597 = M[0x40]
0x9ff: V598 = 0x40
0xa01: V599 = M[0x40]
0xa04: V600 = SUB V597 V599
0xa06: LOG V599 V600 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V594 V585
0xa08: V601 = 0x0
0xa0b: V602 = 0x100
0xa0e: V603 = EXP 0x100 0x0
0xa10: V604 = S[0x0]
0xa12: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V606 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa28: V607 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa29: V608 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V604
0xa2c: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0xa41: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0xa42: V611 = MUL V610 0x1
0xa43: V612 = OR V611 V608
0xa45: S[0x0] = V612
0xa48: JUMP 0x3b0
---
Entry stack: [V11, 0x3b0, V265]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa49
[0xa49:0xb14]
---
Predecessors: [0x549]
Successors: [0xb15, 0xb19]
---
0xa49 JUMPDEST
0xa4a PUSH1 0x0
0xa4c DUP2
0xa4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa62 AND
0xa63 PUSH4 0xdd62ed3e
0xa68 ADDRESS
0xa69 DUP6
0xa6a PUSH1 0x40
0xa6c MLOAD
0xa6d DUP4
0xa6e PUSH4 0xffffffff
0xa73 AND
0xa74 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa92 MUL
0xa93 DUP2
0xa94 MSTORE
0xa95 PUSH1 0x4
0xa97 ADD
0xa98 DUP1
0xa99 DUP4
0xa9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaaf AND
0xab0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac5 AND
0xac6 DUP2
0xac7 MSTORE
0xac8 PUSH1 0x20
0xaca ADD
0xacb DUP3
0xacc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae1 AND
0xae2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf7 AND
0xaf8 DUP2
0xaf9 MSTORE
0xafa PUSH1 0x20
0xafc ADD
0xafd SWAP3
0xafe POP
0xaff POP
0xb00 POP
0xb01 PUSH1 0x20
0xb03 PUSH1 0x40
0xb05 MLOAD
0xb06 DUP1
0xb07 DUP4
0xb08 SUB
0xb09 DUP2
0xb0a PUSH1 0x0
0xb0c DUP8
0xb0d DUP1
0xb0e EXTCODESIZE
0xb0f ISZERO
0xb10 ISZERO
0xb11 PUSH2 0xb19
0xb14 JUMPI
---
0xa49: JUMPDEST 
0xa4a: V613 = 0x0
0xa4d: V614 = 0xffffffffffffffffffffffffffffffffffffffff
0xa62: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0xa63: V616 = 0xdd62ed3e
0xa68: V617 = ADDRESS
0xa6a: V618 = 0x40
0xa6c: V619 = M[0x40]
0xa6e: V620 = 0xffffffff
0xa73: V621 = AND 0xffffffff 0xdd62ed3e
0xa74: V622 = 0x100000000000000000000000000000000000000000000000000000000
0xa92: V623 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdd62ed3e
0xa94: M[V619] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0xa95: V624 = 0x4
0xa97: V625 = ADD 0x4 V619
0xa9a: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xaaf: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0xab0: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xac5: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0xac7: M[V625] = V629
0xac8: V630 = 0x20
0xaca: V631 = ADD 0x20 V625
0xacc: V632 = 0xffffffffffffffffffffffffffffffffffffffff
0xae1: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0xae2: V634 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf7: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0xaf9: M[V631] = V635
0xafa: V636 = 0x20
0xafc: V637 = ADD 0x20 V631
0xb01: V638 = 0x20
0xb03: V639 = 0x40
0xb05: V640 = M[0x40]
0xb08: V641 = SUB V637 V640
0xb0a: V642 = 0x0
0xb0e: V643 = EXTCODESIZE V615
0xb0f: V644 = ISZERO V643
0xb10: V645 = ISZERO V644
0xb11: V646 = 0xb19
0xb14: JUMPI 0xb19 V645
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V615, 0xdd62ed3e, V637, 0x20, V640, V641, V640, 0x0, V615]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637, 0x20, V640, V641, V640, 0x0, V615]

================================

Block 0xb15
[0xb15:0xb18]
---
Predecessors: [0xa49]
Successors: []
---
0xb15 PUSH1 0x0
0xb17 DUP1
0xb18 REVERT
---
0xb15: V647 = 0x0
0xb18: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637, 0x20, V640, V641, V640, 0x0, V615]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637, 0x20, V640, V641, V640, 0x0, V615]

================================

Block 0xb19
[0xb19:0xb21]
---
Predecessors: [0xa49]
Successors: [0xb22, 0xb26]
---
0xb19 JUMPDEST
0xb1a GAS
0xb1b CALL
0xb1c ISZERO
0xb1d ISZERO
0xb1e PUSH2 0xb26
0xb21 JUMPI
---
0xb19: JUMPDEST 
0xb1a: V648 = GAS
0xb1b: V649 = CALL V648 V615 0x0 V640 V641 V640 0x20
0xb1c: V650 = ISZERO V649
0xb1d: V651 = ISZERO V650
0xb1e: V652 = 0xb26
0xb21: JUMPI 0xb26 V651
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637, 0x20, V640, V641, V640, 0x0, V615]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637]

================================

Block 0xb22
[0xb22:0xb25]
---
Predecessors: [0xb19]
Successors: []
---
0xb22 PUSH1 0x0
0xb24 DUP1
0xb25 REVERT
---
0xb22: V653 = 0x0
0xb25: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637]

================================

Block 0xb26
[0xb26:0xb36]
---
Predecessors: [0xb19]
Successors: [0xb37, 0xc1b]
---
0xb26 JUMPDEST
0xb27 POP
0xb28 POP
0xb29 POP
0xb2a PUSH1 0x40
0xb2c MLOAD
0xb2d DUP1
0xb2e MLOAD
0xb2f SWAP1
0xb30 POP
0xb31 EQ
0xb32 ISZERO
0xb33 PUSH2 0xc1b
0xb36 JUMPI
---
0xb26: JUMPDEST 
0xb2a: V654 = 0x40
0xb2c: V655 = M[0x40]
0xb2e: V656 = M[V655]
0xb31: V657 = EQ V656 0x0
0xb32: V658 = ISZERO V657
0xb33: V659 = 0xc1b
0xb36: JUMPI 0xc1b V658
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, 0x0, V615, 0xdd62ed3e, V637]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]

================================

Block 0xb37
[0xb37:0xbf3]
---
Predecessors: [0xb26]
Successors: [0xbf4, 0xbf8]
---
0xb37 DUP1
0xb38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4d AND
0xb4e PUSH4 0x95ea7b3
0xb53 DUP4
0xb54 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb75 PUSH1 0x40
0xb77 MLOAD
0xb78 DUP4
0xb79 PUSH4 0xffffffff
0xb7e AND
0xb7f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb9d MUL
0xb9e DUP2
0xb9f MSTORE
0xba0 PUSH1 0x4
0xba2 ADD
0xba3 DUP1
0xba4 DUP4
0xba5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbba AND
0xbbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd0 AND
0xbd1 DUP2
0xbd2 MSTORE
0xbd3 PUSH1 0x20
0xbd5 ADD
0xbd6 DUP3
0xbd7 DUP2
0xbd8 MSTORE
0xbd9 PUSH1 0x20
0xbdb ADD
0xbdc SWAP3
0xbdd POP
0xbde POP
0xbdf POP
0xbe0 PUSH1 0x20
0xbe2 PUSH1 0x40
0xbe4 MLOAD
0xbe5 DUP1
0xbe6 DUP4
0xbe7 SUB
0xbe8 DUP2
0xbe9 PUSH1 0x0
0xbeb DUP8
0xbec DUP1
0xbed EXTCODESIZE
0xbee ISZERO
0xbef ISZERO
0xbf0 PUSH2 0xbf8
0xbf3 JUMPI
---
0xb38: V660 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4d: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0xb4e: V662 = 0x95ea7b3
0xb54: V663 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb75: V664 = 0x40
0xb77: V665 = M[0x40]
0xb79: V666 = 0xffffffff
0xb7e: V667 = AND 0xffffffff 0x95ea7b3
0xb7f: V668 = 0x100000000000000000000000000000000000000000000000000000000
0xb9d: V669 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0xb9f: M[V665] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0xba0: V670 = 0x4
0xba2: V671 = ADD 0x4 V665
0xba5: V672 = 0xffffffffffffffffffffffffffffffffffffffff
0xbba: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0xbbb: V674 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd0: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0xbd2: M[V671] = V675
0xbd3: V676 = 0x20
0xbd5: V677 = ADD 0x20 V671
0xbd8: M[V677] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xbd9: V678 = 0x20
0xbdb: V679 = ADD 0x20 V677
0xbe0: V680 = 0x20
0xbe2: V681 = 0x40
0xbe4: V682 = M[0x40]
0xbe7: V683 = SUB V679 V682
0xbe9: V684 = 0x0
0xbed: V685 = EXTCODESIZE V661
0xbee: V686 = ISZERO V685
0xbef: V687 = ISZERO V686
0xbf0: V688 = 0xbf8
0xbf3: JUMPI 0xbf8 V687
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]
Stack pops: 2
Stack additions: [S1, S0, V661, 0x95ea7b3, V679, 0x20, V682, V683, V682, 0x0, V661]
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679, 0x20, V682, V683, V682, 0x0, V661]

================================

Block 0xbf4
[0xbf4:0xbf7]
---
Predecessors: [0xb37]
Successors: []
---
0xbf4 PUSH1 0x0
0xbf6 DUP1
0xbf7 REVERT
---
0xbf4: V689 = 0x0
0xbf7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679, 0x20, V682, V683, V682, 0x0, V661]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679, 0x20, V682, V683, V682, 0x0, V661]

================================

Block 0xbf8
[0xbf8:0xc00]
---
Predecessors: [0xb37]
Successors: [0xc01, 0xc05]
---
0xbf8 JUMPDEST
0xbf9 GAS
0xbfa CALL
0xbfb ISZERO
0xbfc ISZERO
0xbfd PUSH2 0xc05
0xc00 JUMPI
---
0xbf8: JUMPDEST 
0xbf9: V690 = GAS
0xbfa: V691 = CALL V690 V661 0x0 V682 V683 V682 0x20
0xbfb: V692 = ISZERO V691
0xbfc: V693 = ISZERO V692
0xbfd: V694 = 0xc05
0xc00: JUMPI 0xc05 V693
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679, 0x20, V682, V683, V682, 0x0, V661]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679]

================================

Block 0xc01
[0xc01:0xc04]
---
Predecessors: [0xbf8]
Successors: []
---
0xc01 PUSH1 0x0
0xc03 DUP1
0xc04 REVERT
---
0xc01: V695 = 0x0
0xc04: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679]

================================

Block 0xc05
[0xc05:0xc15]
---
Predecessors: [0xbf8]
Successors: [0xc16, 0xc1a]
---
0xc05 JUMPDEST
0xc06 POP
0xc07 POP
0xc08 POP
0xc09 PUSH1 0x40
0xc0b MLOAD
0xc0c DUP1
0xc0d MLOAD
0xc0e SWAP1
0xc0f POP
0xc10 ISZERO
0xc11 ISZERO
0xc12 PUSH2 0xc1a
0xc15 JUMPI
---
0xc05: JUMPDEST 
0xc09: V696 = 0x40
0xc0b: V697 = M[0x40]
0xc0d: V698 = M[V697]
0xc10: V699 = ISZERO V698
0xc11: V700 = ISZERO V699
0xc12: V701 = 0xc1a
0xc15: JUMPI 0xc1a V700
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364, V661, 0x95ea7b3, V679]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]

================================

Block 0xc16
[0xc16:0xc19]
---
Predecessors: [0xc05]
Successors: []
---
0xc16 PUSH1 0x0
0xc18 DUP1
0xc19 REVERT
---
0xc16: V702 = 0x0
0xc19: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]

================================

Block 0xc1a
[0xc1a:0xc1a]
---
Predecessors: [0xc05]
Successors: [0xc1b]
---
0xc1a JUMPDEST
---
0xc1a: JUMPDEST 
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]

================================

Block 0xc1b
[0xc1b:0xc1e]
---
Predecessors: [0xb26, 0xc1a]
Successors: [0x569]
---
0xc1b JUMPDEST
0xc1c POP
0xc1d POP
0xc1e JUMP
---
0xc1b: JUMPDEST 
0xc1e: JUMP 0x569
---
Entry stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0, 0x569, V352, V364]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x1ba, 0x4, 0x104, V108, V111, V116, V122, V128, 0x0]

================================

Block 0xc1f
[0xc1f:0xc2b]
---
Predecessors: [0x569, 0x7bf]
Successors: [0xf97]
---
0xc1f JUMPDEST
0xc20 PUSH1 0x0
0xc22 DUP1
0xc23 PUSH1 0x0
0xc25 PUSH2 0xc2c
0xc28 PUSH2 0xf97
0xc2b JUMP
---
0xc1f: JUMPDEST 
0xc20: V703 = 0x0
0xc23: V704 = 0x0
0xc25: V705 = 0xc2c
0xc28: V706 = 0xf97
0xc2b: JUMP 0xf97
---
Entry stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, S4, 0x0, {0x5bd, 0x813}, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0xc2c]
Exit stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, S4, 0x0, {0x5bd, 0x813}, S1, S0, 0x0, 0x0, 0x0, 0xc2c]

================================

Block 0xc2c
[0xc2c:0xc32]
---
Predecessors: [0xf97]
Successors: [0xc33]
---
0xc2c JUMPDEST
0xc2d PUSH1 0x0
0xc2f PUSH1 0x1
0xc31 SWAP3
0xc32 POP
---
0xc2c: JUMPDEST 
0xc2d: V707 = 0x0
0xc2f: V708 = 0x1
---
Entry stack: [V11, S16, {0x4, 0x1ba}, {0x4, 0x104}, S13, S12, S11, S10, S9, S8, 0x0, {0x5bd, 0x813}, S5, S4, 0x0, 0x0, 0x0, V959]
Stack pops: 2
Stack additions: [0x1, S0, 0x0]
Exit stack: [V11, S16, {0x4, 0x1ba}, {0x4, 0x104}, S13, S12, S11, S10, S9, S8, 0x0, {0x5bd, 0x813}, S5, S4, 0x0, 0x0, 0x1, V959, 0x0]

================================

Block 0xc33
[0xc33:0xc3c]
---
Predecessors: [0xc2c, 0xcc8]
Successors: [0xc3d, 0xcd5]
---
0xc33 JUMPDEST
0xc34 PUSH1 0x8
0xc36 DUP4
0xc37 LT
0xc38 ISZERO
0xc39 PUSH2 0xcd5
0xc3c JUMPI
---
0xc33: JUMPDEST 
0xc34: V709 = 0x8
0xc37: V710 = LT S2 0x8
0xc38: V711 = ISZERO V710
0xc39: V712 = 0xcd5
0xc3c: JUMPI 0xcd5 V711
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]

================================

Block 0xc3d
[0xc3d:0xc4a]
---
Predecessors: [0xc33]
Successors: [0xc4b, 0xc4c]
---
0xc3d PUSH1 0x0
0xc3f DUP8
0xc40 DUP5
0xc41 PUSH1 0x8
0xc43 DUP2
0xc44 LT
0xc45 ISZERO
0xc46 ISZERO
0xc47 PUSH2 0xc4c
0xc4a JUMPI
---
0xc3d: V713 = 0x0
0xc41: V714 = 0x8
0xc44: V715 = LT S2 0x8
0xc45: V716 = ISZERO V715
0xc46: V717 = ISZERO V716
0xc47: V718 = 0xc4c
0xc4a: JUMPI 0xc4c V717
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, S6, S2]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0, 0x0, S6, S2]

================================

Block 0xc4b
[0xc4b:0xc4b]
---
Predecessors: [0xc3d]
Successors: []
---
0xc4b INVALID
---
0xc4b: INVALID 
---
Entry stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, 0x0, S5, V959, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, 0x0, S5, V959, 0x0, 0x0, S1, S0]

================================

Block 0xc4c
[0xc4c:0xc6d]
---
Predecessors: [0xc3d]
Successors: [0xc6e, 0xca2]
---
0xc4c JUMPDEST
0xc4d PUSH1 0x20
0xc4f MUL
0xc50 ADD
0xc51 MLOAD
0xc52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc67 AND
0xc68 EQ
0xc69 ISZERO
0xc6a PUSH2 0xca2
0xc6d JUMPI
---
0xc4c: JUMPDEST 
0xc4d: V719 = 0x20
0xc4f: V720 = MUL 0x20 S0
0xc50: V721 = ADD V720 S1
0xc51: V722 = M[V721]
0xc52: V723 = 0xffffffffffffffffffffffffffffffffffffffff
0xc67: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0xc68: V725 = EQ V724 0x0
0xc69: V726 = ISZERO V725
0xc6a: V727 = 0xca2
0xc6d: JUMPI 0xca2 V726
---
Entry stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, 0x0, S5, V959, 0x0, 0x0, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, 0x0, S5, V959, 0x0]

================================

Block 0xc6e
[0xc6e:0xc77]
---
Predecessors: [0xc4c]
Successors: [0xc78, 0xc7c]
---
0xc6e PUSH1 0x1
0xc70 DUP4
0xc71 GT
0xc72 ISZERO
0xc73 ISZERO
0xc74 PUSH2 0xc7c
0xc77 JUMPI
---
0xc6e: V728 = 0x1
0xc71: V729 = GT S2 0x1
0xc72: V730 = ISZERO V729
0xc73: V731 = ISZERO V730
0xc74: V732 = 0xc7c
0xc77: JUMPI 0xc7c V731
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]

================================

Block 0xc78
[0xc78:0xc7b]
---
Predecessors: [0xc6e]
Successors: []
---
0xc78 PUSH1 0x0
0xc7a DUP1
0xc7b REVERT
---
0xc78: V733 = 0x0
0xc7b: REVERT 0x0 0x0
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]

================================

Block 0xc7c
[0xc7c:0xc8b]
---
Predecessors: [0xc6e]
Successors: [0xc8c, 0xc8d]
---
0xc7c JUMPDEST
0xc7d DUP7
0xc7e PUSH1 0x1
0xc80 DUP5
0xc81 SUB
0xc82 PUSH1 0x8
0xc84 DUP2
0xc85 LT
0xc86 ISZERO
0xc87 ISZERO
0xc88 PUSH2 0xc8d
0xc8b JUMPI
---
0xc7c: JUMPDEST 
0xc7e: V734 = 0x1
0xc81: V735 = SUB S2 0x1
0xc82: V736 = 0x8
0xc85: V737 = LT V735 0x8
0xc86: V738 = ISZERO V737
0xc87: V739 = ISZERO V738
0xc88: V740 = 0xc8d
0xc8b: JUMPI 0xc8d V739
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, V735]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0, S6, V735]

================================

Block 0xc8c
[0xc8c:0xc8c]
---
Predecessors: [0xc7c]
Successors: []
---
0xc8c INVALID
---
0xc8c: INVALID 
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, 0x0, S4, V959, 0x0, S1, V735]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, 0x0, S4, V959, 0x0, S1, V735]

================================

Block 0xc8d
[0xc8d:0xca1]
---
Predecessors: [0xc7c]
Successors: [0xcd5]
---
0xc8d JUMPDEST
0xc8e PUSH1 0x20
0xc90 MUL
0xc91 ADD
0xc92 MLOAD
0xc93 SWAP4
0xc94 POP
0xc95 DUP3
0xc96 DUP1
0xc97 PUSH1 0x1
0xc99 SWAP1
0xc9a SUB
0xc9b SWAP4
0xc9c POP
0xc9d POP
0xc9e PUSH2 0xcd5
0xca1 JUMP
---
0xc8d: JUMPDEST 
0xc8e: V741 = 0x20
0xc90: V742 = MUL 0x20 V735
0xc91: V743 = ADD V742 S1
0xc92: V744 = M[V743]
0xc97: V745 = 0x1
0xc9a: V746 = SUB S4 0x1
0xc9e: V747 = 0xcd5
0xca1: JUMP 0xcd5
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, 0x0, S4, V959, 0x0, S1, V735]
Stack pops: 6
Stack additions: [V744, V746, S3, S2]
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, V744, V746, V959, 0x0]

================================

Block 0xca2
[0xca2:0xcae]
---
Predecessors: [0xc4c]
Successors: [0xcaf, 0xcc8]
---
0xca2 JUMPDEST
0xca3 PUSH1 0x1
0xca5 PUSH1 0x8
0xca7 SUB
0xca8 DUP4
0xca9 EQ
0xcaa ISZERO
0xcab PUSH2 0xcc8
0xcae JUMPI
---
0xca2: JUMPDEST 
0xca3: V748 = 0x1
0xca5: V749 = 0x8
0xca7: V750 = SUB 0x8 0x1
0xca9: V751 = EQ S2 0x7
0xcaa: V752 = ISZERO V751
0xcab: V753 = 0xcc8
0xcae: JUMPI 0xcc8 V752
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]

================================

Block 0xcaf
[0xcaf:0xcba]
---
Predecessors: [0xca2]
Successors: [0xcbb, 0xcbc]
---
0xcaf DUP7
0xcb0 DUP4
0xcb1 PUSH1 0x8
0xcb3 DUP2
0xcb4 LT
0xcb5 ISZERO
0xcb6 ISZERO
0xcb7 PUSH2 0xcbc
0xcba JUMPI
---
0xcb1: V754 = 0x8
0xcb4: V755 = LT S2 0x8
0xcb5: V756 = ISZERO V755
0xcb6: V757 = ISZERO V756
0xcb7: V758 = 0xcbc
0xcba: JUMPI 0xcbc V757
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, S2]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0, S6, S2]

================================

Block 0xcbb
[0xcbb:0xcbb]
---
Predecessors: [0xcaf]
Successors: []
---
0xcbb INVALID
---
0xcbb: INVALID 
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, 0x0, S4, V959, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, 0x0, S4, V959, 0x0, S1, S0]

================================

Block 0xcbc
[0xcbc:0xcc7]
---
Predecessors: [0xcaf]
Successors: [0xcd5]
---
0xcbc JUMPDEST
0xcbd PUSH1 0x20
0xcbf MUL
0xcc0 ADD
0xcc1 MLOAD
0xcc2 SWAP4
0xcc3 POP
0xcc4 PUSH2 0xcd5
0xcc7 JUMP
---
0xcbc: JUMPDEST 
0xcbd: V759 = 0x20
0xcbf: V760 = MUL 0x20 S0
0xcc0: V761 = ADD V760 S1
0xcc1: V762 = M[V761]
0xcc4: V763 = 0xcd5
0xcc7: JUMP 0xcd5
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, 0x0, S4, V959, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V762, S4, S3, S2]
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, V762, S4, V959, 0x0]

================================

Block 0xcc8
[0xcc8:0xcd4]
---
Predecessors: [0xca2]
Successors: [0xc33]
---
0xcc8 JUMPDEST
0xcc9 DUP3
0xcca DUP1
0xccb PUSH1 0x1
0xccd ADD
0xcce SWAP4
0xccf POP
0xcd0 POP
0xcd1 PUSH2 0xc33
0xcd4 JUMP
---
0xcc8: JUMPDEST 
0xccb: V764 = 0x1
0xccd: V765 = ADD 0x1 S2
0xcd1: V766 = 0xc33
0xcd4: JUMP 0xc33
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, S2, V959, 0x0]
Stack pops: 3
Stack additions: [V765, S1, S0]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, 0x0, V765, V959, 0x0]

================================

Block 0xcd5
[0xcd5:0xce0]
---
Predecessors: [0xc33, 0xc8d, 0xcbc]
Successors: [0xce1, 0xce3]
---
0xcd5 JUMPDEST
0xcd6 DUP3
0xcd7 PUSH1 0x40
0xcd9 MLOAD
0xcda DUP1
0xcdb MSIZE
0xcdc LT
0xcdd PUSH2 0xce3
0xce0 JUMPI
---
0xcd5: JUMPDEST 
0xcd7: V767 = 0x40
0xcd9: V768 = M[0x40]
0xcdb: V769 = MSIZE
0xcdc: V770 = LT V769 V768
0xcdd: V771 = 0xce3
0xce0: JUMPI 0xce3 V770
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, V959, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, V768]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, V959, 0x0, S2, V768]

================================

Block 0xce1
[0xce1:0xce2]
---
Predecessors: [0xcd5]
Successors: [0xce3]
---
0xce1 POP
0xce2 MSIZE
---
0xce2: V772 = MSIZE
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, V959, 0x0, S1, V768]
Stack pops: 1
Stack additions: [V772]
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, V959, 0x0, S1, V772]

================================

Block 0xce3
[0xce3:0xcfa]
---
Predecessors: [0xcd5, 0xce1]
Successors: [0xcfb]
---
0xce3 JUMPDEST
0xce4 SWAP1
0xce5 DUP1
0xce6 DUP3
0xce7 MSTORE
0xce8 DUP1
0xce9 PUSH1 0x20
0xceb MUL
0xcec PUSH1 0x20
0xcee ADD
0xcef DUP3
0xcf0 ADD
0xcf1 PUSH1 0x40
0xcf3 MSTORE
0xcf4 POP
0xcf5 SWAP2
0xcf6 POP
0xcf7 PUSH1 0x0
0xcf9 SWAP1
0xcfa POP
---
0xce3: JUMPDEST 
0xce7: M[S0] = S1
0xce9: V773 = 0x20
0xceb: V774 = MUL 0x20 S1
0xcec: V775 = 0x20
0xcee: V776 = ADD 0x20 V774
0xcf0: V777 = ADD S0 V776
0xcf1: V778 = 0x40
0xcf3: M[0x40] = V777
0xcf7: V779 = 0x0
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, V959, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S0, 0x0]
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S0, 0x0]

================================

Block 0xcfb
[0xcfb:0xd03]
---
Predecessors: [0xce3, 0xd27]
Successors: [0xd04, 0xd70]
---
0xcfb JUMPDEST
0xcfc DUP3
0xcfd DUP2
0xcfe LT
0xcff ISZERO
0xd00 PUSH2 0xd70
0xd03 JUMPI
---
0xcfb: JUMPDEST 
0xcfe: V780 = LT S0 S2
0xcff: V781 = ISZERO V780
0xd00: V782 = 0xd70
0xd03: JUMPI 0xd70 V781
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, S1, S0]

================================

Block 0xd04
[0xd04:0xd12]
---
Predecessors: [0xcfb]
Successors: [0xd13, 0xd14]
---
0xd04 DUP7
0xd05 PUSH1 0x1
0xd07 DUP3
0xd08 ADD
0xd09 PUSH1 0x8
0xd0b DUP2
0xd0c LT
0xd0d ISZERO
0xd0e ISZERO
0xd0f PUSH2 0xd14
0xd12 JUMPI
---
0xd05: V783 = 0x1
0xd08: V784 = ADD S0 0x1
0xd09: V785 = 0x8
0xd0c: V786 = LT V784 0x8
0xd0d: V787 = ISZERO V786
0xd0e: V788 = ISZERO V787
0xd0f: V789 = 0xd14
0xd12: JUMPI 0xd14 V788
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, V784]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, S1, S0, S6, V784]

================================

Block 0xd13
[0xd13:0xd13]
---
Predecessors: [0xd04]
Successors: []
---
0xd13 INVALID
---
0xd13: INVALID 
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, S1, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, S1, V784]

================================

Block 0xd14
[0xd14:0xd25]
---
Predecessors: [0xd04]
Successors: [0xd26, 0xd27]
---
0xd14 JUMPDEST
0xd15 PUSH1 0x20
0xd17 MUL
0xd18 ADD
0xd19 MLOAD
0xd1a DUP3
0xd1b DUP3
0xd1c DUP2
0xd1d MLOAD
0xd1e DUP2
0xd1f LT
0xd20 ISZERO
0xd21 ISZERO
0xd22 PUSH2 0xd27
0xd25 JUMPI
---
0xd14: JUMPDEST 
0xd15: V790 = 0x20
0xd17: V791 = MUL 0x20 V784
0xd18: V792 = ADD V791 S1
0xd19: V793 = M[V792]
0xd1d: V794 = M[S3]
0xd1f: V795 = LT S2 V794
0xd20: V796 = ISZERO V795
0xd21: V797 = ISZERO V796
0xd22: V798 = 0xd27
0xd25: JUMPI 0xd27 V797
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, S1, V784]
Stack pops: 4
Stack additions: [S3, S2, V793, S3, S2]
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, V793, S3, S2]

================================

Block 0xd26
[0xd26:0xd26]
---
Predecessors: [0xd14]
Successors: []
---
0xd26 INVALID
---
0xd26: INVALID 
---
Entry stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, S6, S5, S4, S3, V793, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, S6, S5, S4, S3, V793, S1, S0]

================================

Block 0xd27
[0xd27:0xd6f]
---
Predecessors: [0xd14]
Successors: [0xcfb]
---
0xd27 JUMPDEST
0xd28 SWAP1
0xd29 PUSH1 0x20
0xd2b ADD
0xd2c SWAP1
0xd2d PUSH1 0x20
0xd2f MUL
0xd30 ADD
0xd31 SWAP1
0xd32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd47 AND
0xd48 SWAP1
0xd49 DUP2
0xd4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5f AND
0xd60 DUP2
0xd61 MSTORE
0xd62 POP
0xd63 POP
0xd64 DUP1
0xd65 DUP1
0xd66 PUSH1 0x1
0xd68 ADD
0xd69 SWAP2
0xd6a POP
0xd6b POP
0xd6c PUSH2 0xcfb
0xd6f JUMP
---
0xd27: JUMPDEST 
0xd29: V799 = 0x20
0xd2b: V800 = ADD 0x20 S1
0xd2d: V801 = 0x20
0xd2f: V802 = MUL 0x20 S0
0xd30: V803 = ADD V802 V800
0xd32: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xd47: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0xd4a: V806 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5f: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0xd61: M[V803] = V807
0xd66: V808 = 0x1
0xd68: V809 = ADD 0x1 S3
0xd6c: V810 = 0xcfb
0xd6f: JUMP 0xcfb
---
Entry stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, S6, S5, S4, S3, V793, S1, S0]
Stack pops: 4
Stack additions: [V809]
Exit stack: [V11, S20, {0x4, 0x1ba}, {0x4, 0x104}, S17, S16, S15, S14, S13, S12, 0x0, {0x5bd, 0x813}, S9, S8, 0x0, S6, S5, S4, V809]

================================

Block 0xd70
[0xd70:0xd7d]
---
Predecessors: [0xcfb]
Successors: [0xd7e, 0xd7f]
---
0xd70 JUMPDEST
0xd71 DUP7
0xd72 PUSH1 0x0
0xd74 PUSH1 0x8
0xd76 DUP2
0xd77 LT
0xd78 ISZERO
0xd79 ISZERO
0xd7a PUSH2 0xd7f
0xd7d JUMPI
---
0xd70: JUMPDEST 
0xd72: V811 = 0x0
0xd74: V812 = 0x8
0xd77: V813 = LT 0x0 0x8
0xd78: V814 = ISZERO 0x1
0xd79: V815 = ISZERO 0x0
0xd7a: V816 = 0xd7f
0xd7d: JUMPI 0xd7f 0x1
---
Entry stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, 0x0]
Exit stack: [V11, S17, {0x4, 0x1ba}, {0x4, 0x104}, S14, S13, S12, S11, S10, S9, 0x0, {0x5bd, 0x813}, S6, S5, 0x0, S3, S2, S1, S0, S6, 0x0]

================================

Block 0xd7e
[0xd7e:0xd7e]
---
Predecessors: [0xd70]
Successors: []
---
0xd7e INVALID
---
0xd7e: INVALID 
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xd7f
[0xd7f:0xdae]
---
Predecessors: [0xd70]
Successors: [0xdaf, 0xdb0]
---
0xd7f JUMPDEST
0xd80 PUSH1 0x20
0xd82 MUL
0xd83 ADD
0xd84 MLOAD
0xd85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9a AND
0xd9b PUSH4 0xf0843ba9
0xda0 CALLVALUE
0xda1 DUP5
0xda2 DUP10
0xda3 PUSH1 0x0
0xda5 PUSH1 0x6
0xda7 DUP2
0xda8 LT
0xda9 ISZERO
0xdaa ISZERO
0xdab PUSH2 0xdb0
0xdae JUMPI
---
0xd7f: JUMPDEST 
0xd80: V817 = 0x20
0xd82: V818 = MUL 0x20 0x0
0xd83: V819 = ADD 0x0 S1
0xd84: V820 = M[V819]
0xd85: V821 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9a: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0xd9b: V823 = 0xf0843ba9
0xda0: V824 = CALLVALUE
0xda3: V825 = 0x0
0xda5: V826 = 0x6
0xda8: V827 = LT 0x0 0x6
0xda9: V828 = ISZERO 0x1
0xdaa: V829 = ISZERO 0x0
0xdab: V830 = 0xdb0
0xdae: JUMPI 0xdb0 0x1
---
Entry stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, S1, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V822, 0xf0843ba9, V824, S3, S7, 0x0]
Exit stack: [V11, S19, {0x4, 0x1ba}, {0x4, 0x104}, S16, S15, S14, S13, S12, S11, 0x0, {0x5bd, 0x813}, S8, S7, 0x0, S5, S4, S3, S2, V822, 0xf0843ba9, V824, S3, S7, 0x0]

================================

Block 0xdaf
[0xdaf:0xdaf]
---
Predecessors: [0xd7f]
Successors: []
---
0xdaf INVALID
---
0xdaf: INVALID 
---
Entry stack: [V11, S23, {0x4, 0x1ba}, {0x4, 0x104}, S20, S19, S18, S17, S16, S15, 0x0, {0x5bd, 0x813}, S12, S11, 0x0, S9, S8, S7, S6, V822, 0xf0843ba9, V824, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S23, {0x4, 0x1ba}, {0x4, 0x104}, S20, S19, S18, S17, S16, S15, 0x0, {0x5bd, 0x813}, S12, S11, 0x0, S9, S8, S7, S6, V822, 0xf0843ba9, V824, S2, S1, 0x0]

================================

Block 0xdb0
[0xdb0:0xdc2]
---
Predecessors: [0xd7f]
Successors: [0xdc3, 0xdc4]
---
0xdb0 JUMPDEST
0xdb1 PUSH1 0x20
0xdb3 MUL
0xdb4 ADD
0xdb5 MLOAD
0xdb6 DUP11
0xdb7 PUSH1 0x1
0xdb9 PUSH1 0x6
0xdbb DUP2
0xdbc LT
0xdbd ISZERO
0xdbe ISZERO
0xdbf PUSH2 0xdc4
0xdc2 JUMPI
---
0xdb0: JUMPDEST 
0xdb1: V831 = 0x20
0xdb3: V832 = MUL 0x20 0x0
0xdb4: V833 = ADD 0x0 S1
0xdb5: V834 = M[V833]
0xdb7: V835 = 0x1
0xdb9: V836 = 0x6
0xdbc: V837 = LT 0x1 0x6
0xdbd: V838 = ISZERO 0x1
0xdbe: V839 = ISZERO 0x0
0xdbf: V840 = 0xdc4
0xdc2: JUMPI 0xdc4 0x1
---
Entry stack: [V11, S23, {0x4, 0x1ba}, {0x4, 0x104}, S20, S19, S18, S17, S16, S15, 0x0, {0x5bd, 0x813}, S12, S11, 0x0, S9, S8, S7, S6, V822, 0xf0843ba9, V824, S2, S1, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V834, S11, 0x1]
Exit stack: [V11, S23, {0x4, 0x1ba}, {0x4, 0x104}, S20, S19, S18, S17, S16, S15, 0x0, {0x5bd, 0x813}, S12, S11, 0x0, S9, S8, S7, S6, V822, 0xf0843ba9, V824, S2, V834, S11, 0x1]

================================

Block 0xdc3
[0xdc3:0xdc3]
---
Predecessors: [0xdb0]
Successors: []
---
0xdc3 INVALID
---
0xdc3: INVALID 
---
Entry stack: [V11, S24, {0x4, 0x1ba}, {0x4, 0x104}, S21, S20, S19, S18, S17, S16, 0x0, {0x5bd, 0x813}, S13, S12, 0x0, S10, S9, S8, S7, V822, 0xf0843ba9, V824, S3, V834, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S24, {0x4, 0x1ba}, {0x4, 0x104}, S21, S20, S19, S18, S17, S16, 0x0, {0x5bd, 0x813}, S13, S12, 0x0, S10, S9, S8, S7, V822, 0xf0843ba9, V824, S3, V834, S1, 0x1]

================================

Block 0xdc4
[0xdc4:0xe27]
---
Predecessors: [0xdb0]
Successors: [0xe28]
---
0xdc4 JUMPDEST
0xdc5 PUSH1 0x20
0xdc7 MUL
0xdc8 ADD
0xdc9 MLOAD
0xdca PUSH1 0x40
0xdcc MLOAD
0xdcd DUP6
0xdce PUSH4 0xffffffff
0xdd3 AND
0xdd4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdf2 MUL
0xdf3 DUP2
0xdf4 MSTORE
0xdf5 PUSH1 0x4
0xdf7 ADD
0xdf8 DUP1
0xdf9 DUP1
0xdfa PUSH1 0x20
0xdfc ADD
0xdfd DUP5
0xdfe DUP2
0xdff MSTORE
0xe00 PUSH1 0x20
0xe02 ADD
0xe03 DUP4
0xe04 DUP2
0xe05 MSTORE
0xe06 PUSH1 0x20
0xe08 ADD
0xe09 DUP3
0xe0a DUP2
0xe0b SUB
0xe0c DUP3
0xe0d MSTORE
0xe0e DUP6
0xe0f DUP2
0xe10 DUP2
0xe11 MLOAD
0xe12 DUP2
0xe13 MSTORE
0xe14 PUSH1 0x20
0xe16 ADD
0xe17 SWAP2
0xe18 POP
0xe19 DUP1
0xe1a MLOAD
0xe1b SWAP1
0xe1c PUSH1 0x20
0xe1e ADD
0xe1f SWAP1
0xe20 PUSH1 0x20
0xe22 MUL
0xe23 DUP1
0xe24 DUP4
0xe25 DUP4
0xe26 PUSH1 0x0
---
0xdc4: JUMPDEST 
0xdc5: V841 = 0x20
0xdc7: V842 = MUL 0x20 0x1
0xdc8: V843 = ADD 0x20 S1
0xdc9: V844 = M[V843]
0xdca: V845 = 0x40
0xdcc: V846 = M[0x40]
0xdce: V847 = 0xffffffff
0xdd3: V848 = AND 0xffffffff 0xf0843ba9
0xdd4: V849 = 0x100000000000000000000000000000000000000000000000000000000
0xdf2: V850 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf0843ba9
0xdf4: M[V846] = 0xf0843ba900000000000000000000000000000000000000000000000000000000
0xdf5: V851 = 0x4
0xdf7: V852 = ADD 0x4 V846
0xdfa: V853 = 0x20
0xdfc: V854 = ADD 0x20 V852
0xdff: M[V854] = V834
0xe00: V855 = 0x20
0xe02: V856 = ADD 0x20 V854
0xe05: M[V856] = V844
0xe06: V857 = 0x20
0xe08: V858 = ADD 0x20 V856
0xe0b: V859 = SUB V858 V852
0xe0d: M[V852] = V859
0xe11: V860 = M[S3]
0xe13: M[V858] = V860
0xe14: V861 = 0x20
0xe16: V862 = ADD 0x20 V858
0xe1a: V863 = M[S3]
0xe1c: V864 = 0x20
0xe1e: V865 = ADD 0x20 S3
0xe20: V866 = 0x20
0xe22: V867 = MUL 0x20 V863
0xe26: V868 = 0x0
---
Entry stack: [V11, S24, {0x4, 0x1ba}, {0x4, 0x104}, S21, S20, S19, S18, S17, S16, 0x0, {0x5bd, 0x813}, S13, S12, 0x0, S10, S9, S8, S7, V822, 0xf0843ba9, V824, S3, V834, S1, 0x1]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V844, V852, V852, V862, V865, V867, V867, V862, V865, 0x0]
Exit stack: [V11, S24, {0x4, 0x1ba}, {0x4, 0x104}, S21, S20, S19, S18, S17, S16, 0x0, {0x5bd, 0x813}, S13, S12, 0x0, S10, S9, S8, S7, V822, 0xf0843ba9, V824, S3, V834, V844, V852, V852, V862, V865, V867, V867, V862, V865, 0x0]

================================

Block 0xe28
[0xe28:0xe30]
---
Predecessors: [0xdc4, 0xe31]
Successors: [0xe31, 0xe43]
---
0xe28 JUMPDEST
0xe29 DUP4
0xe2a DUP2
0xe2b LT
0xe2c ISZERO
0xe2d PUSH2 0xe43
0xe30 JUMPI
---
0xe28: JUMPDEST 
0xe2b: V869 = LT S0 V867
0xe2c: V870 = ISZERO V869
0xe2d: V871 = 0xe43
0xe30: JUMPI 0xe43 V870
---
Entry stack: [V11, S32, {0x4, 0x1ba}, {0x4, 0x104}, S29, S28, S27, S26, S25, S24, 0x0, {0x5bd, 0x813}, S21, S20, 0x0, S18, S17, S16, S15, V822, 0xf0843ba9, V824, S11, V834, V844, V852, V852, V862, V865, V867, V867, V862, V865, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S32, {0x4, 0x1ba}, {0x4, 0x104}, S29, S28, S27, S26, S25, S24, 0x0, {0x5bd, 0x813}, S21, S20, 0x0, S18, S17, S16, S15, V822, 0xf0843ba9, V824, S11, V834, V844, V852, V852, V862, V865, V867, V867, V862, V865, S0]

================================

Block 0xe31
[0xe31:0xe42]
---
Predecessors: [0xe28]
Successors: [0xe28]
---
0xe31 DUP1
0xe32 DUP3
0xe33 ADD
0xe34 MLOAD
0xe35 DUP2
0xe36 DUP5
0xe37 ADD
0xe38 MSTORE
0xe39 PUSH1 0x20
0xe3b DUP2
0xe3c ADD
0xe3d SWAP1
0xe3e POP
0xe3f PUSH2 0xe28
0xe42 JUMP
---
0xe33: V872 = ADD V865 S0
0xe34: V873 = M[V872]
0xe37: V874 = ADD V862 S0
0xe38: M[V874] = V873
0xe39: V875 = 0x20
0xe3c: V876 = ADD S0 0x20
0xe3f: V877 = 0xe28
0xe42: JUMP 0xe28
---
Entry stack: [V11, S32, {0x4, 0x1ba}, {0x4, 0x104}, S29, S28, S27, S26, S25, S24, 0x0, {0x5bd, 0x813}, S21, S20, 0x0, S18, S17, S16, S15, V822, 0xf0843ba9, V824, S11, V834, V844, V852, V852, V862, V865, V867, V867, V862, V865, S0]
Stack pops: 3
Stack additions: [S2, S1, V876]
Exit stack: [V11, S32, {0x4, 0x1ba}, {0x4, 0x104}, S29, S28, S27, S26, S25, S24, 0x0, {0x5bd, 0x813}, S21, S20, 0x0, S18, S17, S16, S15, V822, 0xf0843ba9, V824, S11, V834, V844, V852, V852, V862, V865, V867, V867, V862, V865, V876]

================================

Block 0xe43
[0xe43:0xe63]
---
Predecessors: [0xe28]
Successors: [0xe64, 0xe68]
---
0xe43 JUMPDEST
0xe44 POP
0xe45 POP
0xe46 POP
0xe47 POP
0xe48 SWAP1
0xe49 POP
0xe4a ADD
0xe4b SWAP5
0xe4c POP
0xe4d POP
0xe4e POP
0xe4f POP
0xe50 POP
0xe51 PUSH1 0x20
0xe53 PUSH1 0x40
0xe55 MLOAD
0xe56 DUP1
0xe57 DUP4
0xe58 SUB
0xe59 DUP2
0xe5a DUP6
0xe5b DUP9
0xe5c DUP1
0xe5d EXTCODESIZE
0xe5e ISZERO
0xe5f ISZERO
0xe60 PUSH2 0xe68
0xe63 JUMPI
---
0xe43: JUMPDEST 
0xe4a: V878 = ADD V867 V862
0xe51: V879 = 0x20
0xe53: V880 = 0x40
0xe55: V881 = M[0x40]
0xe58: V882 = SUB V878 V881
0xe5d: V883 = EXTCODESIZE V822
0xe5e: V884 = ISZERO V883
0xe5f: V885 = ISZERO V884
0xe60: V886 = 0xe68
0xe63: JUMPI 0xe68 V885
---
Entry stack: [V11, S32, {0x4, 0x1ba}, {0x4, 0x104}, S29, S28, S27, S26, S25, S24, 0x0, {0x5bd, 0x813}, S21, S20, 0x0, S18, S17, S16, S15, V822, 0xf0843ba9, V824, S11, V834, V844, V852, V852, V862, V865, V867, V867, V862, V865, S0]
Stack pops: 15
Stack additions: [S14, S13, S12, V878, 0x20, V881, V882, V881, S12, S14]
Exit stack: [V11, S32, {0x4, 0x1ba}, {0x4, 0x104}, S29, S28, S27, S26, S25, S24, 0x0, {0x5bd, 0x813}, S21, S20, 0x0, S18, S17, S16, S15, V822, 0xf0843ba9, V824, V878, 0x20, V881, V882, V881, V824, V822]

================================

Block 0xe64
[0xe64:0xe67]
---
Predecessors: [0xe43]
Successors: []
---
0xe64 PUSH1 0x0
0xe66 DUP1
0xe67 REVERT
---
0xe64: V887 = 0x0
0xe67: REVERT 0x0 0x0
---
Entry stack: [V11, S27, {0x4, 0x1ba}, {0x4, 0x104}, S24, S23, S22, S21, S20, S19, 0x0, {0x5bd, 0x813}, S16, S15, 0x0, S13, S12, S11, S10, V822, 0xf0843ba9, V824, V878, 0x20, V881, V882, V881, V824, V822]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S27, {0x4, 0x1ba}, {0x4, 0x104}, S24, S23, S22, S21, S20, S19, 0x0, {0x5bd, 0x813}, S16, S15, 0x0, S13, S12, S11, S10, V822, 0xf0843ba9, V824, V878, 0x20, V881, V882, V881, V824, V822]

================================

Block 0xe68
[0xe68:0xe70]
---
Predecessors: [0xe43]
Successors: [0xe71, 0xe75]
---
0xe68 JUMPDEST
0xe69 GAS
0xe6a CALL
0xe6b ISZERO
0xe6c ISZERO
0xe6d PUSH2 0xe75
0xe70 JUMPI
---
0xe68: JUMPDEST 
0xe69: V888 = GAS
0xe6a: V889 = CALL V888 V822 V824 V881 V882 V881 0x20
0xe6b: V890 = ISZERO V889
0xe6c: V891 = ISZERO V890
0xe6d: V892 = 0xe75
0xe70: JUMPI 0xe75 V891
---
Entry stack: [V11, S27, {0x4, 0x1ba}, {0x4, 0x104}, S24, S23, S22, S21, S20, S19, 0x0, {0x5bd, 0x813}, S16, S15, 0x0, S13, S12, S11, S10, V822, 0xf0843ba9, V824, V878, 0x20, V881, V882, V881, V824, V822]
Stack pops: 6
Stack additions: []
Exit stack: [V11, S27, {0x4, 0x1ba}, {0x4, 0x104}, S24, S23, S22, S21, S20, S19, 0x0, {0x5bd, 0x813}, S16, S15, 0x0, S13, S12, S11, S10, V822, 0xf0843ba9, V824, V878]

================================

Block 0xe71
[0xe71:0xe74]
---
Predecessors: [0xe68]
Successors: []
---
0xe71 PUSH1 0x0
0xe73 DUP1
0xe74 REVERT
---
0xe71: V893 = 0x0
0xe74: REVERT 0x0 0x0
---
Entry stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, S13, 0x0, {0x5bd, 0x813}, S10, S9, 0x0, S7, S6, S5, S4, V822, 0xf0843ba9, V824, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, S13, 0x0, {0x5bd, 0x813}, S10, S9, 0x0, S7, S6, S5, S4, V822, 0xf0843ba9, V824, S0]

================================

Block 0xe75
[0xe75:0xe8b]
---
Predecessors: [0xe68]
Successors: [0x5bd, 0x813]
---
0xe75 JUMPDEST
0xe76 POP
0xe77 POP
0xe78 POP
0xe79 POP
0xe7a PUSH1 0x40
0xe7c MLOAD
0xe7d DUP1
0xe7e MLOAD
0xe7f SWAP1
0xe80 POP
0xe81 SWAP5
0xe82 POP
0xe83 POP
0xe84 POP
0xe85 POP
0xe86 SWAP3
0xe87 POP
0xe88 SWAP3
0xe89 SWAP1
0xe8a POP
0xe8b JUMP
---
0xe75: JUMPDEST 
0xe7a: V894 = 0x40
0xe7c: V895 = M[0x40]
0xe7e: V896 = M[V895]
0xe8b: JUMP {0x5bd, 0x813}
---
Entry stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, S13, 0x0, {0x5bd, 0x813}, S10, S9, 0x0, S7, S6, S5, S4, V822, 0xf0843ba9, V824, S0]
Stack pops: 12
Stack additions: [V896, S7]
Exit stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, S13, 0x0, V896, S7]

================================

Block 0xe8c
[0xe8c:0xec7]
---
Predecessors: [0x5bd]
Successors: [0xec8, 0xecc]
---
0xe8c JUMPDEST
0xe8d CALLER
0xe8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea3 AND
0xea4 PUSH2 0x8fc
0xea7 DUP3
0xea8 SWAP1
0xea9 DUP2
0xeaa ISZERO
0xeab MUL
0xeac SWAP1
0xead PUSH1 0x40
0xeaf MLOAD
0xeb0 PUSH1 0x0
0xeb2 PUSH1 0x40
0xeb4 MLOAD
0xeb5 DUP1
0xeb6 DUP4
0xeb7 SUB
0xeb8 DUP2
0xeb9 DUP6
0xeba DUP9
0xebb DUP9
0xebc CALL
0xebd SWAP4
0xebe POP
0xebf POP
0xec0 POP
0xec1 POP
0xec2 ISZERO
0xec3 ISZERO
0xec4 PUSH2 0xecc
0xec7 JUMPI
---
0xe8c: JUMPDEST 
0xe8d: V897 = CALLER
0xe8e: V898 = 0xffffffffffffffffffffffffffffffffffffffff
0xea3: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V897
0xea4: V900 = 0x8fc
0xeaa: V901 = ISZERO S0
0xeab: V902 = MUL V901 0x8fc
0xead: V903 = 0x40
0xeaf: V904 = M[0x40]
0xeb0: V905 = 0x0
0xeb2: V906 = 0x40
0xeb4: V907 = M[0x40]
0xeb7: V908 = SUB V904 V907
0xebc: V909 = CALL V902 V899 S0 V907 V908 V907 0x0
0xec2: V910 = ISZERO V909
0xec3: V911 = ISZERO V910
0xec4: V912 = 0xecc
0xec7: JUMPI 0xecc V911
---
Entry stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, S2, 0x5cb, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, S2, 0x5cb, S0]

================================

Block 0xec8
[0xec8:0xecb]
---
Predecessors: [0xe8c]
Successors: []
---
0xec8 PUSH1 0x0
0xeca DUP1
0xecb REVERT
---
0xec8: V913 = 0x0
0xecb: REVERT 0x0 0x0
---
Entry stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, S2, 0x5cb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, S2, 0x5cb, S0]

================================

Block 0xecc
[0xecc:0xece]
---
Predecessors: [0xe8c]
Successors: [0x5cb]
---
0xecc JUMPDEST
0xecd POP
0xece JUMP
---
0xecc: JUMPDEST 
0xece: JUMP 0x5cb
---
Entry stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, S2, 0x5cb, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S11, {0x4, 0x1ba}, {0x4, 0x104}, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xecf
[0xecf:0xf6c]
---
Predecessors: [0x813]
Successors: [0xf6d, 0xf71]
---
0xecf JUMPDEST
0xed0 DUP2
0xed1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee6 AND
0xee7 PUSH4 0xa9059cbb
0xeec CALLER
0xeed DUP4
0xeee PUSH1 0x40
0xef0 MLOAD
0xef1 DUP4
0xef2 PUSH4 0xffffffff
0xef7 AND
0xef8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf16 MUL
0xf17 DUP2
0xf18 MSTORE
0xf19 PUSH1 0x4
0xf1b ADD
0xf1c DUP1
0xf1d DUP4
0xf1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf33 AND
0xf34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf49 AND
0xf4a DUP2
0xf4b MSTORE
0xf4c PUSH1 0x20
0xf4e ADD
0xf4f DUP3
0xf50 DUP2
0xf51 MSTORE
0xf52 PUSH1 0x20
0xf54 ADD
0xf55 SWAP3
0xf56 POP
0xf57 POP
0xf58 POP
0xf59 PUSH1 0x20
0xf5b PUSH1 0x40
0xf5d MLOAD
0xf5e DUP1
0xf5f DUP4
0xf60 SUB
0xf61 DUP2
0xf62 PUSH1 0x0
0xf64 DUP8
0xf65 DUP1
0xf66 EXTCODESIZE
0xf67 ISZERO
0xf68 ISZERO
0xf69 PUSH2 0xf71
0xf6c JUMPI
---
0xecf: JUMPDEST 
0xed1: V914 = 0xffffffffffffffffffffffffffffffffffffffff
0xee6: V915 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xee7: V916 = 0xa9059cbb
0xeec: V917 = CALLER
0xeee: V918 = 0x40
0xef0: V919 = M[0x40]
0xef2: V920 = 0xffffffff
0xef7: V921 = AND 0xffffffff 0xa9059cbb
0xef8: V922 = 0x100000000000000000000000000000000000000000000000000000000
0xf16: V923 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xf18: M[V919] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf19: V924 = 0x4
0xf1b: V925 = ADD 0x4 V919
0xf1e: V926 = 0xffffffffffffffffffffffffffffffffffffffff
0xf33: V927 = AND 0xffffffffffffffffffffffffffffffffffffffff V917
0xf34: V928 = 0xffffffffffffffffffffffffffffffffffffffff
0xf49: V929 = AND 0xffffffffffffffffffffffffffffffffffffffff V927
0xf4b: M[V925] = V929
0xf4c: V930 = 0x20
0xf4e: V931 = ADD 0x20 V925
0xf51: M[V931] = V896
0xf52: V932 = 0x20
0xf54: V933 = ADD 0x20 V931
0xf59: V934 = 0x20
0xf5b: V935 = 0x40
0xf5d: V936 = M[0x40]
0xf60: V937 = SUB V933 V936
0xf62: V938 = 0x0
0xf66: V939 = EXTCODESIZE V915
0xf67: V940 = ISZERO V939
0xf68: V941 = ISZERO V940
0xf69: V942 = 0xf71
0xf6c: JUMPI 0xf71 V941
---
Entry stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, V896, S3, 0x825, S1, V896]
Stack pops: 2
Stack additions: [S1, S0, V915, 0xa9059cbb, V933, 0x20, V936, V937, V936, 0x0, V915]
Exit stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, V896, S3, 0x825, S1, V896, V915, 0xa9059cbb, V933, 0x20, V936, V937, V936, 0x0, V915]

================================

Block 0xf6d
[0xf6d:0xf70]
---
Predecessors: [0xecf]
Successors: []
---
0xf6d PUSH1 0x0
0xf6f DUP1
0xf70 REVERT
---
0xf6d: V943 = 0x0
0xf70: REVERT 0x0 0x0
---
Entry stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, V896, S12, 0x825, S10, V896, V915, 0xa9059cbb, V933, 0x20, V936, V937, V936, 0x0, V915]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, V896, S12, 0x825, S10, V896, V915, 0xa9059cbb, V933, 0x20, V936, V937, V936, 0x0, V915]

================================

Block 0xf71
[0xf71:0xf79]
---
Predecessors: [0xecf]
Successors: [0xf7a, 0xf7e]
---
0xf71 JUMPDEST
0xf72 GAS
0xf73 CALL
0xf74 ISZERO
0xf75 ISZERO
0xf76 PUSH2 0xf7e
0xf79 JUMPI
---
0xf71: JUMPDEST 
0xf72: V944 = GAS
0xf73: V945 = CALL V944 V915 0x0 V936 V937 V936 0x20
0xf74: V946 = ISZERO V945
0xf75: V947 = ISZERO V946
0xf76: V948 = 0xf7e
0xf79: JUMPI 0xf7e V947
---
Entry stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, V896, S12, 0x825, S10, V896, V915, 0xa9059cbb, V933, 0x20, V936, V937, V936, 0x0, V915]
Stack pops: 6
Stack additions: []
Exit stack: [V11, S21, {0x4, 0x1ba}, {0x4, 0x104}, S18, S17, S16, S15, S14, V896, S12, 0x825, S10, V896, V915, 0xa9059cbb, V933]

================================

Block 0xf7a
[0xf7a:0xf7d]
---
Predecessors: [0xf71]
Successors: []
---
0xf7a PUSH1 0x0
0xf7c DUP1
0xf7d REVERT
---
0xf7a: V949 = 0x0
0xf7d: REVERT 0x0 0x0
---
Entry stack: [V11, S15, {0x4, 0x1ba}, {0x4, 0x104}, S12, S11, S10, S9, S8, V896, S6, 0x825, S4, V896, V915, 0xa9059cbb, V933]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, {0x4, 0x1ba}, {0x4, 0x104}, S12, S11, S10, S9, S8, V896, S6, 0x825, S4, V896, V915, 0xa9059cbb, V933]

================================

Block 0xf7e
[0xf7e:0xf8e]
---
Predecessors: [0xf71]
Successors: [0xf8f, 0xf93]
---
0xf7e JUMPDEST
0xf7f POP
0xf80 POP
0xf81 POP
0xf82 PUSH1 0x40
0xf84 MLOAD
0xf85 DUP1
0xf86 MLOAD
0xf87 SWAP1
0xf88 POP
0xf89 ISZERO
0xf8a ISZERO
0xf8b PUSH2 0xf93
0xf8e JUMPI
---
0xf7e: JUMPDEST 
0xf82: V950 = 0x40
0xf84: V951 = M[0x40]
0xf86: V952 = M[V951]
0xf89: V953 = ISZERO V952
0xf8a: V954 = ISZERO V953
0xf8b: V955 = 0xf93
0xf8e: JUMPI 0xf93 V954
---
Entry stack: [V11, S15, {0x4, 0x1ba}, {0x4, 0x104}, S12, S11, S10, S9, S8, V896, S6, 0x825, S4, V896, V915, 0xa9059cbb, V933]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S15, {0x4, 0x1ba}, {0x4, 0x104}, S12, S11, S10, S9, S8, V896, S6, 0x825, S4, V896]

================================

Block 0xf8f
[0xf8f:0xf92]
---
Predecessors: [0xf7e]
Successors: []
---
0xf8f PUSH1 0x0
0xf91 DUP1
0xf92 REVERT
---
0xf8f: V956 = 0x0
0xf92: REVERT 0x0 0x0
---
Entry stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, V896, S3, 0x825, S1, V896]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, V896, S3, 0x825, S1, V896]

================================

Block 0xf93
[0xf93:0xf96]
---
Predecessors: [0xf7e]
Successors: [0x825]
---
0xf93 JUMPDEST
0xf94 POP
0xf95 POP
0xf96 JUMP
---
0xf93: JUMPDEST 
0xf96: JUMP 0x825
---
Entry stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, V896, S3, 0x825, S1, V896]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S12, {0x4, 0x1ba}, {0x4, 0x104}, S9, S8, S7, S6, S5, V896, S3]

================================

Block 0xf97
[0xf97:0xfaa]
---
Predecessors: [0xc1f]
Successors: [0xc2c]
---
0xf97 JUMPDEST
0xf98 PUSH1 0x20
0xf9a PUSH1 0x40
0xf9c MLOAD
0xf9d SWAP1
0xf9e DUP2
0xf9f ADD
0xfa0 PUSH1 0x40
0xfa2 MSTORE
0xfa3 DUP1
0xfa4 PUSH1 0x0
0xfa6 DUP2
0xfa7 MSTORE
0xfa8 POP
0xfa9 SWAP1
0xfaa JUMP
---
0xf97: JUMPDEST 
0xf98: V957 = 0x20
0xf9a: V958 = 0x40
0xf9c: V959 = M[0x40]
0xf9f: V960 = ADD V959 0x20
0xfa0: V961 = 0x40
0xfa2: M[0x40] = V960
0xfa4: V962 = 0x0
0xfa7: M[V959] = 0x0
0xfaa: JUMP 0xc2c
---
Entry stack: [V11, S16, {0x4, 0x1ba}, {0x4, 0x104}, S13, S12, S11, S10, S9, S8, 0x0, {0x5bd, 0x813}, S5, S4, 0x0, 0x0, 0x0, 0xc2c]
Stack pops: 1
Stack additions: [V959]
Exit stack: [V11, S16, {0x4, 0x1ba}, {0x4, 0x104}, S13, S12, S11, S10, S9, S8, 0x0, {0x5bd, 0x813}, S5, S4, 0x0, 0x0, 0x0, V959]

================================

Block 0xfab
[0xfab:0xfe3]
---
Predecessors: []
Successors: [0xfe4]
---
0xfab STOP
0xfac LOG1
0xfad PUSH6 0x627a7a723058
0xfb4 SHA3
0xfb5 PUSH6 0x2a14d0e4cbab
0xfbc MISSING 0xce
0xfbd MISSING 0xd4
0xfbe RETURN
0xfbf GASLIMIT
0xfc0 MISSING 0xb0
0xfc1 MISSING 0xc0
0xfc2 PUSH8 0x363bc7aa835314ac
0xfcb MISSING 0xa7
0xfcc MISSING 0x5d
0xfcd CALLDATACOPY
0xfce MISSING 0x24
0xfcf MISSING 0x28
0xfd0 MISSING 0xce
0xfd1 MISSING 0xdb
0xfd2 MISSING 0xbf
0xfd3 DUP8
0xfd4 MISSING 0xe1
0xfd5 STOP
0xfd6 MISSING 0x29
0xfd7 PUSH1 0x60
0xfd9 PUSH1 0x40
0xfdb MSTORE
0xfdc PUSH1 0x4
0xfde CALLDATASIZE
0xfdf LT
0xfe0 PUSH2 0x4c
0xfe3 JUMPI
---
0xfab: STOP 
0xfac: LOG S0 S1 S2
0xfad: V963 = 0x627a7a723058
0xfb4: V964 = SHA3 0x627a7a723058 S3
0xfb5: V965 = 0x2a14d0e4cbab
0xfbc: MISSING 0xce
0xfbd: MISSING 0xd4
0xfbe: RETURN S0 S1
0xfbf: V966 = GASLIMIT
0xfc0: MISSING 0xb0
0xfc1: MISSING 0xc0
0xfc2: V967 = 0x363bc7aa835314ac
0xfcb: MISSING 0xa7
0xfcc: MISSING 0x5d
0xfcd: CALLDATACOPY S0 S1 S2
0xfce: MISSING 0x24
0xfcf: MISSING 0x28
0xfd0: MISSING 0xce
0xfd1: MISSING 0xdb
0xfd2: MISSING 0xbf
0xfd4: MISSING 0xe1
0xfd5: STOP 
0xfd6: MISSING 0x29
0xfd7: V968 = 0x60
0xfd9: V969 = 0x40
0xfdb: M[0x40] = 0x60
0xfdc: V970 = 0x4
0xfde: V971 = CALLDATASIZE
0xfdf: V972 = LT V971 0x4
0xfe0: V973 = 0x4c
0xfe3: THROWI V972
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2a14d0e4cbab, V964, V966, 0x363bc7aa835314ac, S7, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0xfe4
[0xfe4:0x1017]
---
Predecessors: [0xfab]
Successors: [0x1018]
---
0xfe4 PUSH1 0x0
0xfe6 CALLDATALOAD
0xfe7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1005 SWAP1
0x1006 DIV
0x1007 PUSH4 0xffffffff
0x100c AND
0x100d DUP1
0x100e PUSH4 0x8da5cb5b
0x1013 EQ
0x1014 PUSH2 0x51
0x1017 JUMPI
---
0xfe4: V974 = 0x0
0xfe6: V975 = CALLDATALOAD 0x0
0xfe7: V976 = 0x100000000000000000000000000000000000000000000000000000000
0x1006: V977 = DIV V975 0x100000000000000000000000000000000000000000000000000000000
0x1007: V978 = 0xffffffff
0x100c: V979 = AND 0xffffffff V977
0x100e: V980 = 0x8da5cb5b
0x1013: V981 = EQ 0x8da5cb5b V979
0x1014: V982 = 0x51
0x1017: THROWI V981
---
Entry stack: []
Stack pops: 0
Stack additions: [V979]
Exit stack: [V979]

================================

Block 0x1018
[0x1018:0x1022]
---
Predecessors: [0xfe4]
Successors: [0x1023]
---
0x1018 DUP1
0x1019 PUSH4 0xf2fde38b
0x101e EQ
0x101f PUSH2 0xa6
0x1022 JUMPI
---
0x1019: V983 = 0xf2fde38b
0x101e: V984 = EQ 0xf2fde38b V979
0x101f: V985 = 0xa6
0x1022: THROWI V984
---
Entry stack: [V979]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V979]

================================

Block 0x1023
[0x1023:0x102e]
---
Predecessors: [0x1018]
Successors: [0x102f]
---
0x1023 JUMPDEST
0x1024 PUSH1 0x0
0x1026 DUP1
0x1027 REVERT
0x1028 JUMPDEST
0x1029 CALLVALUE
0x102a ISZERO
0x102b PUSH2 0x5c
0x102e JUMPI
---
0x1023: JUMPDEST 
0x1024: V986 = 0x0
0x1027: REVERT 0x0 0x0
0x1028: JUMPDEST 
0x1029: V987 = CALLVALUE
0x102a: V988 = ISZERO V987
0x102b: V989 = 0x5c
0x102e: THROWI V988
---
Entry stack: [V979]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x102f
[0x102f:0x1083]
---
Predecessors: [0x1023]
Successors: [0x1084]
---
0x102f PUSH1 0x0
0x1031 DUP1
0x1032 REVERT
0x1033 JUMPDEST
0x1034 PUSH2 0x64
0x1037 PUSH2 0xdf
0x103a JUMP
0x103b JUMPDEST
0x103c PUSH1 0x40
0x103e MLOAD
0x103f DUP1
0x1040 DUP3
0x1041 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1056 AND
0x1057 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106c AND
0x106d DUP2
0x106e MSTORE
0x106f PUSH1 0x20
0x1071 ADD
0x1072 SWAP2
0x1073 POP
0x1074 POP
0x1075 PUSH1 0x40
0x1077 MLOAD
0x1078 DUP1
0x1079 SWAP2
0x107a SUB
0x107b SWAP1
0x107c RETURN
0x107d JUMPDEST
0x107e CALLVALUE
0x107f ISZERO
0x1080 PUSH2 0xb1
0x1083 JUMPI
---
0x102f: V990 = 0x0
0x1032: REVERT 0x0 0x0
0x1033: JUMPDEST 
0x1034: V991 = 0x64
0x1037: V992 = 0xdf
0x103a: THROW 
0x103b: JUMPDEST 
0x103c: V993 = 0x40
0x103e: V994 = M[0x40]
0x1041: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x1056: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1057: V997 = 0xffffffffffffffffffffffffffffffffffffffff
0x106c: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff V996
0x106e: M[V994] = V998
0x106f: V999 = 0x20
0x1071: V1000 = ADD 0x20 V994
0x1075: V1001 = 0x40
0x1077: V1002 = M[0x40]
0x107a: V1003 = SUB V1000 V1002
0x107c: RETURN V1002 V1003
0x107d: JUMPDEST 
0x107e: V1004 = CALLVALUE
0x107f: V1005 = ISZERO V1004
0x1080: V1006 = 0xb1
0x1083: THROWI V1005
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x1084
[0x1084:0x1131]
---
Predecessors: [0x102f]
Successors: [0x1132]
---
0x1084 PUSH1 0x0
0x1086 DUP1
0x1087 REVERT
0x1088 JUMPDEST
0x1089 PUSH2 0xdd
0x108c PUSH1 0x4
0x108e DUP1
0x108f DUP1
0x1090 CALLDATALOAD
0x1091 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a6 AND
0x10a7 SWAP1
0x10a8 PUSH1 0x20
0x10aa ADD
0x10ab SWAP1
0x10ac SWAP2
0x10ad SWAP1
0x10ae POP
0x10af POP
0x10b0 PUSH2 0x104
0x10b3 JUMP
0x10b4 JUMPDEST
0x10b5 STOP
0x10b6 JUMPDEST
0x10b7 PUSH1 0x0
0x10b9 DUP1
0x10ba SWAP1
0x10bb SLOAD
0x10bc SWAP1
0x10bd PUSH2 0x100
0x10c0 EXP
0x10c1 SWAP1
0x10c2 DIV
0x10c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d8 AND
0x10d9 DUP2
0x10da JUMP
0x10db JUMPDEST
0x10dc PUSH1 0x0
0x10de DUP1
0x10df SWAP1
0x10e0 SLOAD
0x10e1 SWAP1
0x10e2 PUSH2 0x100
0x10e5 EXP
0x10e6 SWAP1
0x10e7 DIV
0x10e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10fd AND
0x10fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1113 AND
0x1114 CALLER
0x1115 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112a AND
0x112b EQ
0x112c ISZERO
0x112d ISZERO
0x112e PUSH2 0x15f
0x1131 JUMPI
---
0x1084: V1007 = 0x0
0x1087: REVERT 0x0 0x0
0x1088: JUMPDEST 
0x1089: V1008 = 0xdd
0x108c: V1009 = 0x4
0x1090: V1010 = CALLDATALOAD 0x4
0x1091: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a6: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff V1010
0x10a8: V1013 = 0x20
0x10aa: V1014 = ADD 0x20 0x4
0x10b0: V1015 = 0x104
0x10b3: THROW 
0x10b4: JUMPDEST 
0x10b5: STOP 
0x10b6: JUMPDEST 
0x10b7: V1016 = 0x0
0x10bb: V1017 = S[0x0]
0x10bd: V1018 = 0x100
0x10c0: V1019 = EXP 0x100 0x0
0x10c2: V1020 = DIV V1017 0x1
0x10c3: V1021 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d8: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffff V1020
0x10da: JUMP S0
0x10db: JUMPDEST 
0x10dc: V1023 = 0x0
0x10e0: V1024 = S[0x0]
0x10e2: V1025 = 0x100
0x10e5: V1026 = EXP 0x100 0x0
0x10e7: V1027 = DIV V1024 0x1
0x10e8: V1028 = 0xffffffffffffffffffffffffffffffffffffffff
0x10fd: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1027
0x10fe: V1030 = 0xffffffffffffffffffffffffffffffffffffffff
0x1113: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V1029
0x1114: V1032 = CALLER
0x1115: V1033 = 0xffffffffffffffffffffffffffffffffffffffff
0x112a: V1034 = AND 0xffffffffffffffffffffffffffffffffffffffff V1032
0x112b: V1035 = EQ V1034 V1031
0x112c: V1036 = ISZERO V1035
0x112d: V1037 = ISZERO V1036
0x112e: V1038 = 0x15f
0x1131: THROWI V1037
---
Entry stack: []
Stack pops: 0
Stack additions: [V1012, 0xdd, V1022, S0]
Exit stack: []

================================

Block 0x1132
[0x1132:0x116d]
---
Predecessors: [0x1084]
Successors: [0x116e]
---
0x1132 PUSH1 0x0
0x1134 DUP1
0x1135 REVERT
0x1136 JUMPDEST
0x1137 PUSH1 0x0
0x1139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114e AND
0x114f DUP2
0x1150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1165 AND
0x1166 EQ
0x1167 ISZERO
0x1168 ISZERO
0x1169 ISZERO
0x116a PUSH2 0x19b
0x116d JUMPI
---
0x1132: V1039 = 0x0
0x1135: REVERT 0x0 0x0
0x1136: JUMPDEST 
0x1137: V1040 = 0x0
0x1139: V1041 = 0xffffffffffffffffffffffffffffffffffffffff
0x114e: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1150: V1043 = 0xffffffffffffffffffffffffffffffffffffffff
0x1165: V1044 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1166: V1045 = EQ V1044 0x0
0x1167: V1046 = ISZERO V1045
0x1168: V1047 = ISZERO V1046
0x1169: V1048 = ISZERO V1047
0x116a: V1049 = 0x19b
0x116d: THROWI V1048
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x116e
[0x116e:0x1263]
---
Predecessors: [0x1132]
Successors: []
---
0x116e PUSH1 0x0
0x1170 DUP1
0x1171 REVERT
0x1172 JUMPDEST
0x1173 DUP1
0x1174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1189 AND
0x118a PUSH1 0x0
0x118c DUP1
0x118d SWAP1
0x118e SLOAD
0x118f SWAP1
0x1190 PUSH2 0x100
0x1193 EXP
0x1194 SWAP1
0x1195 DIV
0x1196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ab AND
0x11ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11c1 AND
0x11c2 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x11e3 PUSH1 0x40
0x11e5 MLOAD
0x11e6 PUSH1 0x40
0x11e8 MLOAD
0x11e9 DUP1
0x11ea SWAP2
0x11eb SUB
0x11ec SWAP1
0x11ed LOG3
0x11ee DUP1
0x11ef PUSH1 0x0
0x11f1 DUP1
0x11f2 PUSH2 0x100
0x11f5 EXP
0x11f6 DUP2
0x11f7 SLOAD
0x11f8 DUP2
0x11f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120e MUL
0x120f NOT
0x1210 AND
0x1211 SWAP1
0x1212 DUP4
0x1213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1228 AND
0x1229 MUL
0x122a OR
0x122b SWAP1
0x122c SSTORE
0x122d POP
0x122e POP
0x122f JUMP
0x1230 STOP
0x1231 LOG1
0x1232 PUSH6 0x627a7a723058
0x1239 SHA3
0x123a LOG1
0x123b MISSING 0xb4
0x123c SWAP7
0x123d MISSING 0xbb
0x123e SHA3
0x123f DUP9
0x1240 MISSING 0xc6
0x1241 PUSH2 0xcc65
0x1244 PUSH31 0x99e94d9441044e11d6b86340075d3356b95cfec13b0029
---
0x116e: V1050 = 0x0
0x1171: REVERT 0x0 0x0
0x1172: JUMPDEST 
0x1174: V1051 = 0xffffffffffffffffffffffffffffffffffffffff
0x1189: V1052 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x118a: V1053 = 0x0
0x118e: V1054 = S[0x0]
0x1190: V1055 = 0x100
0x1193: V1056 = EXP 0x100 0x0
0x1195: V1057 = DIV V1054 0x1
0x1196: V1058 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ab: V1059 = AND 0xffffffffffffffffffffffffffffffffffffffff V1057
0x11ac: V1060 = 0xffffffffffffffffffffffffffffffffffffffff
0x11c1: V1061 = AND 0xffffffffffffffffffffffffffffffffffffffff V1059
0x11c2: V1062 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x11e3: V1063 = 0x40
0x11e5: V1064 = M[0x40]
0x11e6: V1065 = 0x40
0x11e8: V1066 = M[0x40]
0x11eb: V1067 = SUB V1064 V1066
0x11ed: LOG V1066 V1067 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1061 V1052
0x11ef: V1068 = 0x0
0x11f2: V1069 = 0x100
0x11f5: V1070 = EXP 0x100 0x0
0x11f7: V1071 = S[0x0]
0x11f9: V1072 = 0xffffffffffffffffffffffffffffffffffffffff
0x120e: V1073 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x120f: V1074 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1210: V1075 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1071
0x1213: V1076 = 0xffffffffffffffffffffffffffffffffffffffff
0x1228: V1077 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1229: V1078 = MUL V1077 0x1
0x122a: V1079 = OR V1078 V1075
0x122c: S[0x0] = V1079
0x122f: JUMP S1
0x1230: STOP 
0x1231: LOG S0 S1 S2
0x1232: V1080 = 0x627a7a723058
0x1239: V1081 = SHA3 0x627a7a723058 S3
0x123a: LOG V1081 S4 S5
0x123b: MISSING 0xb4
0x123d: MISSING 0xbb
0x123e: V1082 = SHA3 S0 S1
0x1240: MISSING 0xc6
0x1241: V1083 = 0xcc65
0x1244: V1084 = 0x99e94d9441044e11d6b86340075d3356b95cfec13b0029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S7, S1, S2, S3, S4, S5, S6, S0, S9, V1082, S2, S3, S4, S5, S6, S7, S8, S9, 0x99e94d9441044e11d6b86340075d3356b95cfec13b0029, 0xcc65]
Exit stack: []

================================

Function 0:
Public function signature: 0x2183e390
Entry block: 0xb6
Exit block: 0xed
Body: 0xb6, 0xbd, 0xc1, 0xed, 0x3b2, 0x409, 0x40d, 0x445, 0x449

Function 1:
Public function signature: 0x4102bf5c
Entry block: 0xef
Exit block: 0x145
Body: 0xef, 0xf6, 0xfa, 0x145, 0x48d, 0x49d, 0x49e

Function 2:
Public function signature: 0x4981b3ca
Entry block: 0x15b
Exit block: 0x1ba
Body: 0x15b, 0x162, 0x166, 0x1ba, 0x4af, 0x509, 0x50d, 0x51e, 0x51f, 0x548, 0x549, 0x569, 0x5bd, 0x5cb, 0xa49, 0xb15, 0xb19, 0xb22, 0xb26, 0xb37, 0xbf4, 0xbf8, 0xc01, 0xc05, 0xc16, 0xc1a, 0xc1b, 0xe8c, 0xec8, 0xecc

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1d0
Exit block: 0x1e3
Body: 0x1d0, 0x1d7, 0x1db, 0x1e3, 0x5d6

Function 4:
Public function signature: 0x9675bb9c
Entry block: 0x225
Exit block: 0x238
Body: 0x225, 0x22c, 0x230, 0x238, 0x5fb

Function 5:
Public function signature: 0x9e281a98
Entry block: 0x27a
Exit block: 0x2ba
Body: 0x27a, 0x281, 0x285, 0x2ba, 0x621, 0x67a, 0x67e, 0x73d, 0x741, 0x74a, 0x74e

Function 6:
Public function signature: 0xbdd5be2f
Entry block: 0x2d4
Exit block: 0x328
Body: 0x2d4, 0x328, 0x760, 0x7bb, 0x7bf, 0x813, 0x825, 0xecf, 0xf6d, 0xf71, 0xf7a, 0xf7e, 0xf8f, 0xf93

Function 7:
Public function signature: 0xf14210a6
Entry block: 0x33e
Exit block: 0x35f
Body: 0x33e, 0x345, 0x349, 0x35f, 0x831, 0x88a, 0x88e, 0x8eb, 0x8ef

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x379
Exit block: 0x3b0
Body: 0x379, 0x380, 0x384, 0x3b0, 0x8f4, 0x94b, 0x94f, 0x987, 0x98b

Function 9:
Public fallback function
Entry block: 0x99
Exit block: 0xb2
Body: 0x99, 0xae, 0xb2

Function 10:
Private function
Entry block: 0xc1f
Exit block: 0xe75
Body: 0xc1f, 0xc2c, 0xc33, 0xc3d, 0xc4c, 0xc6e, 0xc7c, 0xc8d, 0xca2, 0xcaf, 0xcbc, 0xcc8, 0xcd5, 0xce1, 0xce3, 0xcfb, 0xd04, 0xd14, 0xd27, 0xd70, 0xd7f, 0xdb0, 0xdc4, 0xe28, 0xe31, 0xe43, 0xe68, 0xe75, 0xf97

