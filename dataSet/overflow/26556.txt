Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xd7]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x37354a68
0x3c EQ
0x3d PUSH2 0xd7
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x37354a68
0x3c: V13 = EQ 0x37354a68 V11
0x3d: V14 = 0xd7
0x40: JUMPI 0xd7 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x124]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0x124
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0x124
0x4b: JUMPI 0x124 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x139]
---
0x4c DUP1
0x4d PUSH4 0x80ca7aec
0x52 EQ
0x53 PUSH2 0x139
0x56 JUMPI
---
0x4d: V18 = 0x80ca7aec
0x52: V19 = EQ 0x80ca7aec V11
0x53: V20 = 0x139
0x56: JUMPI 0x139 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x14e]
---
0x57 DUP1
0x58 PUSH4 0xd11711a2
0x5d EQ
0x5e PUSH2 0x14e
0x61 JUMPI
---
0x58: V21 = 0xd11711a2
0x5d: V22 = EQ 0xd11711a2 V11
0x5e: V23 = 0x14e
0x61: JUMPI 0x14e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x74]
---
Predecessors: [0x0, 0x57]
Successors: [0x75, 0xc7]
---
0x62 JUMPDEST
0x63 PUSH8 0x16345785d8a0000
0x6c CALLVALUE
0x6d LT
0x6e ISZERO
0x6f DUP1
0x70 ISZERO
0x71 PUSH2 0xc7
0x74 JUMPI
---
0x62: JUMPDEST 
0x63: V24 = 0x16345785d8a0000
0x6c: V25 = CALLVALUE
0x6d: V26 = LT V25 0x16345785d8a0000
0x6e: V27 = ISZERO V26
0x70: V28 = ISZERO V27
0x71: V29 = 0xc7
0x74: JUMPI 0xc7 V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x75
[0x75:0xc6]
---
Predecessors: [0x62]
Successors: [0xc7]
---
0x75 POP
0x76 PUSH1 0x0
0x78 DUP1
0x79 SWAP1
0x7a SLOAD
0x7b SWAP1
0x7c PUSH2 0x100
0x7f EXP
0x80 SWAP1
0x81 DIV
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad AND
0xae CALLER
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 EQ
0xc6 ISZERO
---
0x76: V30 = 0x0
0x7a: V31 = S[0x0]
0x7c: V32 = 0x100
0x7f: V33 = EXP 0x100 0x0
0x81: V34 = DIV V31 0x1
0x82: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x98: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xad: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xae: V39 = CALLER
0xaf: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc5: V42 = EQ V41 V38
0xc6: V43 = ISZERO V42
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xc7
[0xc7:0xcc]
---
Predecessors: [0x62, 0x75]
Successors: [0xcd, 0xd5]
---
0xc7 JUMPDEST
0xc8 ISZERO
0xc9 PUSH2 0xd5
0xcc JUMPI
---
0xc7: JUMPDEST 
0xc8: V44 = ISZERO S0
0xc9: V45 = 0xd5
0xcc: JUMPI 0xd5 V44
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0xc7]
Successors: [0x158]
---
0xcd PUSH2 0xd4
0xd0 PUSH2 0x158
0xd3 JUMP
---
0xcd: V46 = 0xd4
0xd0: V47 = 0x158
0xd3: JUMP 0x158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V11, 0xd4]

================================

Block 0xd4
[0xd4:0xd4]
---
Predecessors: [0x309, 0x516]
Successors: [0xd5]
---
0xd4 JUMPDEST
---
0xd4: JUMPDEST 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: [0xc7, 0xd4]
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0xd]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V48 = CALLVALUE
0xd9: V49 = ISZERO V48
0xda: V50 = 0xe2
0xdd: JUMPI 0xe2 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V51 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0x10d]
---
Predecessors: [0xd7]
Successors: [0x30c]
---
0xe2 JUMPDEST
0xe3 PUSH2 0x10e
0xe6 PUSH1 0x4
0xe8 DUP1
0xe9 DUP1
0xea CALLDATALOAD
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 SWAP1
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP1
0x106 SWAP2
0x107 SWAP1
0x108 POP
0x109 POP
0x10a PUSH2 0x30c
0x10d JUMP
---
0xe2: JUMPDEST 
0xe3: V52 = 0x10e
0xe6: V53 = 0x4
0xea: V54 = CALLDATALOAD 0x4
0xeb: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x102: V57 = 0x20
0x104: V58 = ADD 0x20 0x4
0x10a: V59 = 0x30c
0x10d: JUMP 0x30c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10e, V56]
Exit stack: [V11, 0x10e, V56]

================================

Block 0x10e
[0x10e:0x123]
---
Predecessors: [0x3a3]
Successors: []
---
0x10e JUMPDEST
0x10f PUSH1 0x40
0x111 MLOAD
0x112 DUP1
0x113 DUP3
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0x10e: JUMPDEST 
0x10f: V60 = 0x40
0x111: V61 = M[0x40]
0x115: M[V61] = V240
0x116: V62 = 0x20
0x118: V63 = ADD 0x20 V61
0x11c: V64 = 0x40
0x11e: V65 = M[0x40]
0x121: V66 = SUB V63 V65
0x123: RETURN V65 V66
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S1, V240]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0, S1]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x41]
Successors: [0x12b, 0x12f]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V67 = CALLVALUE
0x126: V68 = ISZERO V67
0x127: V69 = 0x12f
0x12a: JUMPI 0x12f V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x124]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V70 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x124]
Successors: [0x3ab]
---
0x12f JUMPDEST
0x130 PUSH2 0x137
0x133 PUSH2 0x3ab
0x136 JUMP
---
0x12f: JUMPDEST 
0x130: V71 = 0x137
0x133: V72 = 0x3ab
0x136: JUMP 0x3ab
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V11, 0x137]

================================

Block 0x137
[0x137:0x138]
---
Predecessors: []
Successors: []
---
0x137 JUMPDEST
0x138 STOP
---
0x137: JUMPDEST 
0x138: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x4c]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V73 = CALLVALUE
0x13b: V74 = ISZERO V73
0x13c: V75 = 0x144
0x13f: JUMPI 0x144 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V76 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x139]
Successors: [0x41f]
---
0x144 JUMPDEST
0x145 PUSH2 0x14c
0x148 PUSH2 0x41f
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V77 = 0x14c
0x148: V78 = 0x41f
0x14b: JUMP 0x41f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V11, 0x14c]

================================

Block 0x14c
[0x14c:0x14d]
---
Predecessors: [0x309, 0x516]
Successors: []
---
0x14c JUMPDEST
0x14d STOP
---
0x14c: JUMPDEST 
0x14d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x57]
Successors: [0x158]
---
0x14e JUMPDEST
0x14f PUSH2 0x156
0x152 PUSH2 0x158
0x155 JUMP
---
0x14e: JUMPDEST 
0x14f: V79 = 0x156
0x152: V80 = 0x158
0x155: JUMP 0x158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V11, 0x156]

================================

Block 0x156
[0x156:0x157]
---
Predecessors: [0x309, 0x516]
Successors: []
---
0x156 JUMPDEST
0x157 STOP
---
0x156: JUMPDEST 
0x157: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x16a]
---
Predecessors: [0xcd, 0x14e]
Successors: [0x16b, 0x16f]
---
0x158 JUMPDEST
0x159 PUSH1 0x0
0x15b PUSH8 0x16345785d8a0000
0x164 CALLVALUE
0x165 LT
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x158: JUMPDEST 
0x159: V81 = 0x0
0x15b: V82 = 0x16345785d8a0000
0x164: V83 = CALLVALUE
0x165: V84 = LT V83 0x16345785d8a0000
0x166: V85 = ISZERO V84
0x167: V86 = 0x16f
0x16a: JUMPI 0x16f V85
---
Entry stack: [V11, {0xd4, 0x156}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x158]
Successors: [0x309]
---
0x16b PUSH2 0x309
0x16e JUMP
---
0x16b: V87 = 0x309
0x16e: JUMP 0x309
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x16f
[0x16f:0x1c9]
---
Predecessors: [0x158]
Successors: [0x1ca, 0x1ce]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 ISZERO
0x173 ISZERO
0x174 PUSH1 0x4
0x176 PUSH1 0x0
0x178 CALLER
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP1
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 PUSH1 0x0
0x1b2 SHA3
0x1b3 PUSH1 0x0
0x1b5 SWAP1
0x1b6 SLOAD
0x1b7 SWAP1
0x1b8 PUSH2 0x100
0x1bb EXP
0x1bc SWAP1
0x1bd DIV
0x1be PUSH1 0xff
0x1c0 AND
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 EQ
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x16f: JUMPDEST 
0x170: V88 = 0x0
0x172: V89 = ISZERO 0x0
0x173: V90 = ISZERO 0x1
0x174: V91 = 0x4
0x176: V92 = 0x0
0x178: V93 = CALLER
0x179: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x18f: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1a6: M[0x0] = V97
0x1a7: V98 = 0x20
0x1a9: V99 = ADD 0x20 0x0
0x1ac: M[0x20] = 0x4
0x1ad: V100 = 0x20
0x1af: V101 = ADD 0x20 0x20
0x1b0: V102 = 0x0
0x1b2: V103 = SHA3 0x0 0x40
0x1b3: V104 = 0x0
0x1b6: V105 = S[V103]
0x1b8: V106 = 0x100
0x1bb: V107 = EXP 0x100 0x0
0x1bd: V108 = DIV V105 0x1
0x1be: V109 = 0xff
0x1c0: V110 = AND 0xff V108
0x1c1: V111 = ISZERO V110
0x1c2: V112 = ISZERO V111
0x1c3: V113 = EQ V112 0x0
0x1c4: V114 = ISZERO V113
0x1c5: V115 = ISZERO V114
0x1c6: V116 = 0x1ce
0x1c9: JUMPI 0x1ce V115
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x16f]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V117 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x1ce
[0x1ce:0x1d9]
---
Predecessors: [0x16f]
Successors: [0x30c]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x3
0x1d1 SLOAD
0x1d2 PUSH2 0x1da
0x1d5 CALLER
0x1d6 PUSH2 0x30c
0x1d9 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V118 = 0x3
0x1d1: V119 = S[0x3]
0x1d2: V120 = 0x1da
0x1d5: V121 = CALLER
0x1d6: V122 = 0x30c
0x1d9: JUMP 0x30c
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: [V119, 0x1da, V121]
Exit stack: [V11, {0xd4, 0x156}, 0x0, V119, 0x1da, V121]

================================

Block 0x1da
[0x1da:0x1e0]
---
Predecessors: [0x3a3]
Successors: [0x1e1, 0x2b9]
---
0x1da JUMPDEST
0x1db EQ
0x1dc ISZERO
0x1dd PUSH2 0x2b9
0x1e0 JUMPI
---
0x1da: JUMPDEST 
0x1db: V123 = EQ V240 S1
0x1dc: V124 = ISZERO V123
0x1dd: V125 = 0x2b9
0x1e0: JUMPI 0x2b9 V124
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S1, V240]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x1e1
[0x1e1:0x25d]
---
Predecessors: [0x1da]
Successors: [0x25e, 0x278]
---
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0x4
0x1e5 PUSH1 0x0
0x1e7 CALLER
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP1
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e ADD
0x21f PUSH1 0x0
0x221 SHA3
0x222 PUSH1 0x0
0x224 PUSH2 0x100
0x227 EXP
0x228 DUP2
0x229 SLOAD
0x22a DUP2
0x22b PUSH1 0xff
0x22d MUL
0x22e NOT
0x22f AND
0x230 SWAP1
0x231 DUP4
0x232 ISZERO
0x233 ISZERO
0x234 MUL
0x235 OR
0x236 SWAP1
0x237 SSTORE
0x238 POP
0x239 PUSH1 0x7
0x23b CALLVALUE
0x23c MUL
0x23d SWAP1
0x23e POP
0x23f ADDRESS
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 AND
0x256 BALANCE
0x257 DUP2
0x258 GT
0x259 ISZERO
0x25a PUSH2 0x278
0x25d JUMPI
---
0x1e1: V126 = 0x1
0x1e3: V127 = 0x4
0x1e5: V128 = 0x0
0x1e7: V129 = CALLER
0x1e8: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x1fe: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x215: M[0x0] = V133
0x216: V134 = 0x20
0x218: V135 = ADD 0x20 0x0
0x21b: M[0x20] = 0x4
0x21c: V136 = 0x20
0x21e: V137 = ADD 0x20 0x20
0x21f: V138 = 0x0
0x221: V139 = SHA3 0x0 0x40
0x222: V140 = 0x0
0x224: V141 = 0x100
0x227: V142 = EXP 0x100 0x0
0x229: V143 = S[V139]
0x22b: V144 = 0xff
0x22d: V145 = MUL 0xff 0x1
0x22e: V146 = NOT 0xff
0x22f: V147 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V143
0x232: V148 = ISZERO 0x1
0x233: V149 = ISZERO 0x0
0x234: V150 = MUL 0x1 0x1
0x235: V151 = OR 0x1 V147
0x237: S[V139] = V151
0x239: V152 = 0x7
0x23b: V153 = CALLVALUE
0x23c: V154 = MUL V153 0x7
0x23f: V155 = ADDRESS
0x240: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x256: V158 = BALANCE V157
0x258: V159 = GT V154 V158
0x259: V160 = ISZERO V159
0x25a: V161 = 0x278
0x25d: JUMPI 0x278 V160
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 1
Stack additions: [V154]
Exit stack: [V11, {0xd4, 0x156}, V154]

================================

Block 0x25e
[0x25e:0x277]
---
Predecessors: [0x1e1]
Successors: [0x278]
---
0x25e ADDRESS
0x25f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x274 AND
0x275 BALANCE
0x276 SWAP1
0x277 POP
---
0x25e: V162 = ADDRESS
0x25f: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x274: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x275: V165 = BALANCE V164
---
Entry stack: [V11, {0xd4, 0x156}, V154]
Stack pops: 1
Stack additions: [V165]
Exit stack: [V11, {0xd4, 0x156}, V165]

================================

Block 0x278
[0x278:0x2b3]
---
Predecessors: [0x1e1, 0x25e]
Successors: [0x2b4, 0x2b8]
---
0x278 JUMPDEST
0x279 CALLER
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 PUSH2 0x8fc
0x293 DUP3
0x294 SWAP1
0x295 DUP2
0x296 ISZERO
0x297 MUL
0x298 SWAP1
0x299 PUSH1 0x40
0x29b MLOAD
0x29c PUSH1 0x0
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 DUP4
0x2a3 SUB
0x2a4 DUP2
0x2a5 DUP6
0x2a6 DUP9
0x2a7 DUP9
0x2a8 CALL
0x2a9 SWAP4
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae ISZERO
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x278: JUMPDEST 
0x279: V166 = CALLER
0x27a: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x290: V169 = 0x8fc
0x296: V170 = ISZERO S0
0x297: V171 = MUL V170 0x8fc
0x299: V172 = 0x40
0x29b: V173 = M[0x40]
0x29c: V174 = 0x0
0x29e: V175 = 0x40
0x2a0: V176 = M[0x40]
0x2a3: V177 = SUB V173 V176
0x2a8: V178 = CALL V171 V168 S0 V176 V177 V176 0x0
0x2ae: V179 = ISZERO V178
0x2af: V180 = ISZERO V179
0x2b0: V181 = 0x2b8
0x2b3: JUMPI 0x2b8 V180
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x278]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V182 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2b8
[0x2b8:0x2b8]
---
Predecessors: [0x278]
Successors: [0x2b9]
---
0x2b8 JUMPDEST
---
0x2b8: JUMPDEST 
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2b9
[0x2b9:0x2c7]
---
Predecessors: [0x1da, 0x2b8]
Successors: [0x2c8, 0x308]
---
0x2b9 JUMPDEST
0x2ba PUSH2 0x3e8
0x2bd PUSH1 0x2
0x2bf SLOAD
0x2c0 NUMBER
0x2c1 SUB
0x2c2 GT
0x2c3 ISZERO
0x2c4 PUSH2 0x308
0x2c7 JUMPI
---
0x2b9: JUMPDEST 
0x2ba: V183 = 0x3e8
0x2bd: V184 = 0x2
0x2bf: V185 = S[0x2]
0x2c0: V186 = NUMBER
0x2c1: V187 = SUB V186 V185
0x2c2: V188 = GT V187 0x3e8
0x2c3: V189 = ISZERO V188
0x2c4: V190 = 0x308
0x2c7: JUMPI 0x308 V189
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2c8
[0x2c8:0x306]
---
Predecessors: [0x2b9]
Successors: [0x519]
---
0x2c8 PUSH2 0x307
0x2cb PUSH1 0x80
0x2cd PUSH1 0x40
0x2cf MLOAD
0x2d0 SWAP1
0x2d1 DUP2
0x2d2 ADD
0x2d3 PUSH1 0x40
0x2d5 MSTORE
0x2d6 DUP1
0x2d7 COINBASE
0x2d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ed AND
0x2ee DUP2
0x2ef MSTORE
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 DIFFICULTY
0x2f4 DUP2
0x2f5 MSTORE
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 GASLIMIT
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff TIMESTAMP
0x300 DUP2
0x301 MSTORE
0x302 POP
0x303 PUSH2 0x519
0x306 JUMP
---
0x2c8: V191 = 0x307
0x2cb: V192 = 0x80
0x2cd: V193 = 0x40
0x2cf: V194 = M[0x40]
0x2d2: V195 = ADD V194 0x80
0x2d3: V196 = 0x40
0x2d5: M[0x40] = V195
0x2d7: V197 = COINBASE
0x2d8: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x2ef: M[V194] = V199
0x2f0: V200 = 0x20
0x2f2: V201 = ADD 0x20 V194
0x2f3: V202 = DIFFICULTY
0x2f5: M[V201] = V202
0x2f6: V203 = 0x20
0x2f8: V204 = ADD 0x20 V201
0x2f9: V205 = GASLIMIT
0x2fb: M[V204] = V205
0x2fc: V206 = 0x20
0x2fe: V207 = ADD 0x20 V204
0x2ff: V208 = TIMESTAMP
0x301: M[V207] = V208
0x303: V209 = 0x519
0x306: JUMP 0x519
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: [0x307, V194]
Exit stack: [V11, {0xd4, 0x156}, S0, 0x307, V194]

================================

Block 0x307
[0x307:0x307]
---
Predecessors: [0x519]
Successors: [0x308]
---
0x307 JUMPDEST
---
0x307: JUMPDEST 
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x14c, 0x156}, S0]

================================

Block 0x308
[0x308:0x308]
---
Predecessors: [0x2b9, 0x307]
Successors: [0x309]
---
0x308 JUMPDEST
---
0x308: JUMPDEST 
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x14c, 0x156}, S0]

================================

Block 0x309
[0x309:0x30b]
---
Predecessors: [0x16b, 0x308]
Successors: [0xd4, 0x14c, 0x156]
---
0x309 JUMPDEST
0x30a POP
0x30b JUMP
---
0x309: JUMPDEST 
0x30b: JUMP {0xd4, 0x14c, 0x156}
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x30c
[0x30c:0x352]
---
Predecessors: [0xe2, 0x1ce]
Successors: [0x353, 0x354]
---
0x30c JUMPDEST
0x30d PUSH1 0x0
0x30f PUSH1 0x8
0x311 DUP3
0x312 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x327 AND
0x328 PUSH1 0x1
0x32a SLOAD
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f DUP4
0x330 DUP2
0x331 MSTORE
0x332 PUSH1 0x20
0x334 ADD
0x335 DUP3
0x336 DUP2
0x337 MSTORE
0x338 PUSH1 0x20
0x33a ADD
0x33b SWAP3
0x33c POP
0x33d POP
0x33e POP
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP1
0x343 SWAP2
0x344 SUB
0x345 SWAP1
0x346 SHA3
0x347 PUSH1 0x0
0x349 PUSH1 0x20
0x34b DUP2
0x34c LT
0x34d ISZERO
0x34e ISZERO
0x34f PUSH2 0x354
0x352 JUMPI
---
0x30c: JUMPDEST 
0x30d: V210 = 0x0
0x30f: V211 = 0x8
0x312: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x327: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x328: V214 = 0x1
0x32a: V215 = S[0x1]
0x32b: V216 = 0x40
0x32d: V217 = M[0x40]
0x331: M[V217] = V213
0x332: V218 = 0x20
0x334: V219 = ADD 0x20 V217
0x337: M[V219] = V215
0x338: V220 = 0x20
0x33a: V221 = ADD 0x20 V219
0x33f: V222 = 0x40
0x341: V223 = M[0x40]
0x344: V224 = SUB V221 V223
0x346: V225 = SHA3 V223 V224
0x347: V226 = 0x0
0x349: V227 = 0x20
0x34c: V228 = LT 0x0 0x20
0x34d: V229 = ISZERO 0x1
0x34e: V230 = ISZERO 0x0
0x34f: V231 = 0x354
0x352: JUMPI 0x354 0x1
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S2, {0x10e, 0x1da}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x8, V225, 0x0]
Exit stack: [V11, {0xd4, 0x156}, 0x0, S2, {0x10e, 0x1da}, S0, 0x0, 0x8, V225, 0x0]

================================

Block 0x353
[0x353:0x353]
---
Predecessors: [0x30c]
Successors: []
---
0x353 INVALID
---
0x353: INVALID 
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x8, V225, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x8, V225, 0x0]

================================

Block 0x354
[0x354:0x3a1]
---
Predecessors: [0x30c]
Successors: [0x3a2, 0x3a3]
---
0x354 JUMPDEST
0x355 BYTE
0x356 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x377 MUL
0x378 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x399 SWAP1
0x39a DIV
0x39b DUP2
0x39c ISZERO
0x39d ISZERO
0x39e PUSH2 0x3a3
0x3a1 JUMPI
---
0x354: JUMPDEST 
0x355: V232 = BYTE 0x0 V225
0x356: V233 = 0x100000000000000000000000000000000000000000000000000000000000000
0x377: V234 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V232
0x378: V235 = 0x100000000000000000000000000000000000000000000000000000000000000
0x39a: V236 = DIV V234 0x100000000000000000000000000000000000000000000000000000000000000
0x39c: V237 = ISZERO 0x8
0x39d: V238 = ISZERO 0x0
0x39e: V239 = 0x3a3
0x3a1: JUMPI 0x3a3 0x1
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x8, V225, 0x0]
Stack pops: 3
Stack additions: [S2, V236]
Exit stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x8, V236]

================================

Block 0x3a2
[0x3a2:0x3a2]
---
Predecessors: [0x354]
Successors: []
---
0x3a2 INVALID
---
0x3a2: INVALID 
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S5, {0x10e, 0x1da}, S3, 0x0, 0x8, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0, S5, {0x10e, 0x1da}, S3, 0x0, 0x8, V236]

================================

Block 0x3a3
[0x3a3:0x3aa]
---
Predecessors: [0x354]
Successors: [0x10e, 0x1da]
---
0x3a3 JUMPDEST
0x3a4 MOD
0x3a5 SWAP1
0x3a6 POP
0x3a7 SWAP2
0x3a8 SWAP1
0x3a9 POP
0x3aa JUMP
---
0x3a3: JUMPDEST 
0x3a4: V240 = MOD V236 0x8
0x3aa: JUMP {0x10e, 0x1da}
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S5, {0x10e, 0x1da}, S3, 0x0, 0x8, V236]
Stack pops: 5
Stack additions: [V240]
Exit stack: [V11, {0xd4, 0x156}, 0x0, S5, V240]

================================

Block 0x3ab
[0x3ab:0x401]
---
Predecessors: [0x12f]
Successors: [0x402, 0x406]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af SWAP1
0x3b0 SLOAD
0x3b1 SWAP1
0x3b2 PUSH2 0x100
0x3b5 EXP
0x3b6 SWAP1
0x3b7 DIV
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 AND
0x3e4 CALLER
0x3e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fa AND
0x3fb EQ
0x3fc ISZERO
0x3fd ISZERO
0x3fe PUSH2 0x406
0x401 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V241 = 0x0
0x3b0: V242 = S[0x0]
0x3b2: V243 = 0x100
0x3b5: V244 = EXP 0x100 0x0
0x3b7: V245 = DIV V242 0x1
0x3b8: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x3ce: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x3e4: V250 = CALLER
0x3e5: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fa: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x3fb: V253 = EQ V252 V249
0x3fc: V254 = ISZERO V253
0x3fd: V255 = ISZERO V254
0x3fe: V256 = 0x406
0x401: JUMPI 0x406 V255
---
Entry stack: [V11, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137]

================================

Block 0x402
[0x402:0x405]
---
Predecessors: [0x3ab]
Successors: []
---
0x402 PUSH1 0x0
0x404 DUP1
0x405 REVERT
---
0x402: V257 = 0x0
0x405: REVERT 0x0 0x0
---
Entry stack: [V11, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137]

================================

Block 0x406
[0x406:0x41e]
---
Predecessors: [0x3ab]
Successors: []
---
0x406 JUMPDEST
0x407 CALLER
0x408 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41d AND
0x41e SELFDESTRUCT
---
0x406: JUMPDEST 
0x407: V258 = CALLER
0x408: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x41d: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x41e: SELFDESTRUCT V260
---
Entry stack: [V11, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137]

================================

Block 0x41f
[0x41f:0x477]
---
Predecessors: [0x144]
Successors: [0x478, 0x47c]
---
0x41f JUMPDEST
0x420 PUSH1 0x0
0x422 DUP1
0x423 PUSH1 0x0
0x425 SWAP1
0x426 SLOAD
0x427 SWAP1
0x428 PUSH2 0x100
0x42b EXP
0x42c SWAP1
0x42d DIV
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a CALLER
0x45b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x470 AND
0x471 EQ
0x472 ISZERO
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x41f: JUMPDEST 
0x420: V261 = 0x0
0x423: V262 = 0x0
0x426: V263 = S[0x0]
0x428: V264 = 0x100
0x42b: V265 = EXP 0x100 0x0
0x42d: V266 = DIV V263 0x1
0x42e: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x444: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x45a: V271 = CALLER
0x45b: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x470: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x471: V274 = EQ V273 V270
0x472: V275 = ISZERO V274
0x473: V276 = ISZERO V275
0x474: V277 = 0x47c
0x477: JUMPI 0x47c V276
---
Entry stack: [V11, 0x14c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x14c, 0x0]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x41f]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V278 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, 0x0]

================================

Block 0x47c
[0x47c:0x515]
---
Predecessors: [0x41f]
Successors: [0x519]
---
0x47c JUMPDEST
0x47d CALLER
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 DUP2
0x495 PUSH1 0x0
0x497 ADD
0x498 DUP2
0x499 SWAP1
0x49a SSTORE
0x49b POP
0x49c PUSH1 0x1
0x49e NUMBER
0x49f SUB
0x4a0 BLOCKHASH
0x4a1 PUSH1 0x1
0x4a3 SWAP1
0x4a4 DIV
0x4a5 DUP2
0x4a6 PUSH1 0x1
0x4a8 ADD
0x4a9 DUP2
0x4aa SWAP1
0x4ab SSTORE
0x4ac POP
0x4ad COINBASE
0x4ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c3 AND
0x4c4 DIFFICULTY
0x4c5 MUL
0x4c6 DUP2
0x4c7 PUSH1 0x2
0x4c9 ADD
0x4ca DUP2
0x4cb SWAP1
0x4cc SSTORE
0x4cd POP
0x4ce PUSH1 0x7
0x4d0 GASPRICE
0x4d1 MUL
0x4d2 DUP2
0x4d3 PUSH1 0x3
0x4d5 ADD
0x4d6 DUP2
0x4d7 SWAP1
0x4d8 SSTORE
0x4d9 POP
0x4da PUSH2 0x516
0x4dd DUP2
0x4de PUSH1 0x80
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 SWAP1
0x4e4 DUP2
0x4e5 ADD
0x4e6 PUSH1 0x40
0x4e8 MSTORE
0x4e9 SWAP1
0x4ea DUP2
0x4eb PUSH1 0x0
0x4ed DUP3
0x4ee ADD
0x4ef SLOAD
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 PUSH1 0x20
0x4f4 ADD
0x4f5 PUSH1 0x1
0x4f7 DUP3
0x4f8 ADD
0x4f9 SLOAD
0x4fa DUP2
0x4fb MSTORE
0x4fc PUSH1 0x20
0x4fe ADD
0x4ff PUSH1 0x2
0x501 DUP3
0x502 ADD
0x503 SLOAD
0x504 DUP2
0x505 MSTORE
0x506 PUSH1 0x20
0x508 ADD
0x509 PUSH1 0x3
0x50b DUP3
0x50c ADD
0x50d SLOAD
0x50e DUP2
0x50f MSTORE
0x510 POP
0x511 POP
0x512 PUSH2 0x519
0x515 JUMP
---
0x47c: JUMPDEST 
0x47d: V279 = CALLER
0x47e: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x495: V282 = 0x0
0x497: V283 = ADD 0x0 0x0
0x49a: S[0x0] = V281
0x49c: V284 = 0x1
0x49e: V285 = NUMBER
0x49f: V286 = SUB V285 0x1
0x4a0: V287 = BLOCKHASH V286
0x4a1: V288 = 0x1
0x4a4: V289 = DIV V287 0x1
0x4a6: V290 = 0x1
0x4a8: V291 = ADD 0x1 0x0
0x4ab: S[0x1] = V289
0x4ad: V292 = COINBASE
0x4ae: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x4c4: V295 = DIFFICULTY
0x4c5: V296 = MUL V295 V294
0x4c7: V297 = 0x2
0x4c9: V298 = ADD 0x2 0x0
0x4cc: S[0x2] = V296
0x4ce: V299 = 0x7
0x4d0: V300 = GASPRICE
0x4d1: V301 = MUL V300 0x7
0x4d3: V302 = 0x3
0x4d5: V303 = ADD 0x3 0x0
0x4d8: S[0x3] = V301
0x4da: V304 = 0x516
0x4de: V305 = 0x80
0x4e0: V306 = 0x40
0x4e2: V307 = M[0x40]
0x4e5: V308 = ADD V307 0x80
0x4e6: V309 = 0x40
0x4e8: M[0x40] = V308
0x4eb: V310 = 0x0
0x4ee: V311 = ADD 0x0 0x0
0x4ef: V312 = S[0x0]
0x4f1: M[V307] = V312
0x4f2: V313 = 0x20
0x4f4: V314 = ADD 0x20 V307
0x4f5: V315 = 0x1
0x4f8: V316 = ADD 0x0 0x1
0x4f9: V317 = S[0x1]
0x4fb: M[V314] = V317
0x4fc: V318 = 0x20
0x4fe: V319 = ADD 0x20 V314
0x4ff: V320 = 0x2
0x502: V321 = ADD 0x0 0x2
0x503: V322 = S[0x2]
0x505: M[V319] = V322
0x506: V323 = 0x20
0x508: V324 = ADD 0x20 V319
0x509: V325 = 0x3
0x50c: V326 = ADD 0x0 0x3
0x50d: V327 = S[0x3]
0x50f: M[V324] = V327
0x512: V328 = 0x519
0x515: JUMP 0x519
---
Entry stack: [V11, 0x14c, 0x0]
Stack pops: 1
Stack additions: [S0, 0x516, V307]
Exit stack: [V11, 0x14c, 0x0, 0x516, V307]

================================

Block 0x516
[0x516:0x518]
---
Predecessors: [0x519]
Successors: [0xd4, 0x14c, 0x156]
---
0x516 JUMPDEST
0x517 POP
0x518 JUMP
---
0x516: JUMPDEST 
0x518: JUMP {0xd4, 0x14c, 0x156}
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x519
[0x519:0x56a]
---
Predecessors: [0x2c8, 0x47c]
Successors: [0x307, 0x516]
---
0x519 JUMPDEST
0x51a DUP1
0x51b PUSH1 0x0
0x51d ADD
0x51e MLOAD
0x51f DUP2
0x520 PUSH1 0x20
0x522 ADD
0x523 MLOAD
0x524 DUP3
0x525 PUSH1 0x40
0x527 ADD
0x528 MLOAD
0x529 DUP4
0x52a PUSH1 0x60
0x52c ADD
0x52d MLOAD
0x52e PUSH1 0x40
0x530 MLOAD
0x531 DUP1
0x532 DUP6
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x20
0x537 ADD
0x538 DUP5
0x539 DUP2
0x53a MSTORE
0x53b PUSH1 0x20
0x53d ADD
0x53e DUP4
0x53f DUP2
0x540 MSTORE
0x541 PUSH1 0x20
0x543 ADD
0x544 DUP3
0x545 DUP2
0x546 MSTORE
0x547 PUSH1 0x20
0x549 ADD
0x54a SWAP5
0x54b POP
0x54c POP
0x54d POP
0x54e POP
0x54f POP
0x550 PUSH1 0x40
0x552 MLOAD
0x553 DUP1
0x554 SWAP2
0x555 SUB
0x556 SWAP1
0x557 SHA3
0x558 PUSH1 0x1
0x55a SWAP1
0x55b DIV
0x55c PUSH1 0x1
0x55e DUP2
0x55f SWAP1
0x560 SSTORE
0x561 POP
0x562 NUMBER
0x563 PUSH1 0x2
0x565 DUP2
0x566 SWAP1
0x567 SSTORE
0x568 POP
0x569 POP
0x56a JUMP
---
0x519: JUMPDEST 
0x51b: V329 = 0x0
0x51d: V330 = ADD 0x0 S0
0x51e: V331 = M[V330]
0x520: V332 = 0x20
0x522: V333 = ADD 0x20 S0
0x523: V334 = M[V333]
0x525: V335 = 0x40
0x527: V336 = ADD 0x40 S0
0x528: V337 = M[V336]
0x52a: V338 = 0x60
0x52c: V339 = ADD 0x60 S0
0x52d: V340 = M[V339]
0x52e: V341 = 0x40
0x530: V342 = M[0x40]
0x534: M[V342] = V331
0x535: V343 = 0x20
0x537: V344 = ADD 0x20 V342
0x53a: M[V344] = V334
0x53b: V345 = 0x20
0x53d: V346 = ADD 0x20 V344
0x540: M[V346] = V337
0x541: V347 = 0x20
0x543: V348 = ADD 0x20 V346
0x546: M[V348] = V340
0x547: V349 = 0x20
0x549: V350 = ADD 0x20 V348
0x550: V351 = 0x40
0x552: V352 = M[0x40]
0x555: V353 = SUB V350 V352
0x557: V354 = SHA3 V352 V353
0x558: V355 = 0x1
0x55b: V356 = DIV V354 0x1
0x55c: V357 = 0x1
0x560: S[0x1] = V356
0x562: V358 = NUMBER
0x563: V359 = 0x2
0x567: S[0x2] = V358
0x56a: JUMP {0x307, 0x516}
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S2, {0x307, 0x516}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0xd4, 0x14c, 0x156}, S2]

================================

Block 0x56b
[0x56b:0x596]
---
Predecessors: []
Successors: []
---
0x56b STOP
0x56c LOG1
0x56d PUSH6 0x627a7a723058
0x574 SHA3
0x575 SWAP1
0x576 SHL
0x577 MISSING 0x48
0x578 LT
0x579 MISSING 0xd7
0x57a DIFFICULTY
0x57b SWAP7
0x57c MISSING 0xc7
0x57d PUSH5 0xeacbf6c8f2
0x583 MISSING 0xc
0x584 MISSING 0xaa
0x585 RETURN
0x586 SLOAD
0x587 SWAP9
0x588 MISSING 0xd5
0x589 SUB
0x58a ISZERO
0x58b ADD
0x58c MISSING 0xf8
0x58d MISSING 0xb9
0x58e XOR
0x58f MISSING 0xf9
0x590 SWAP1
0x591 DUP5
0x592 MISSING 0xa7
0x593 MISSING 0xcf
0x594 SWAP9
0x595 STOP
0x596 MISSING 0x29
---
0x56b: STOP 
0x56c: LOG S0 S1 S2
0x56d: V360 = 0x627a7a723058
0x574: V361 = SHA3 0x627a7a723058 S3
0x576: V362 = SHL S4 V361
0x577: MISSING 0x48
0x578: V363 = LT S0 S1
0x579: MISSING 0xd7
0x57a: V364 = DIFFICULTY
0x57c: MISSING 0xc7
0x57d: V365 = 0xeacbf6c8f2
0x583: MISSING 0xc
0x584: MISSING 0xaa
0x585: RETURN S0 S1
0x586: V366 = S[S0]
0x588: MISSING 0xd5
0x589: V367 = SUB S0 S1
0x58a: V368 = ISZERO V367
0x58b: V369 = ADD V368 S2
0x58c: MISSING 0xf8
0x58d: MISSING 0xb9
0x58e: V370 = XOR S0 S1
0x58f: MISSING 0xf9
0x592: MISSING 0xa7
0x593: MISSING 0xcf
0x595: STOP 
0x596: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V362, V363, S6, S0, S1, S2, S3, S4, S5, V364, 0xeacbf6c8f2, S9, S1, S2, S3, S4, S5, S6, S7, S8, V366, V369, V370, S4, S1, S0, S2, S3, S4, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x37354a68
Entry block: 0xd7
Exit block: 0xde
Body: 0xd7, 0xde, 0xe2, 0x10e

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x124
Exit block: 0x402
Body: 0x124, 0x12b, 0x12f, 0x3ab, 0x402, 0x406

Function 2:
Public function signature: 0x80ca7aec
Entry block: 0x139
Exit block: 0xd5
Body: 0xd4, 0xd5, 0x139, 0x140, 0x144, 0x14c, 0x156, 0x41f, 0x478, 0x47c, 0x516

Function 3:
Public function signature: 0xd11711a2
Entry block: 0x14e
Exit block: 0x156
Body: 0x14e, 0x156

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0xd5
Body: 0x62, 0x75, 0xc7, 0xcd, 0xd4, 0xd5

Function 5:
Private function
Entry block: 0x158
Exit block: 0x516
Body: 0x158, 0x16b, 0x16f, 0x1ce, 0x1da, 0x1e1, 0x25e, 0x278, 0x2b8, 0x2b9, 0x2c8, 0x307, 0x308, 0x309

Function 6:
Private function
Entry block: 0x30c
Exit block: 0x3a3
Body: 0x30c, 0x354, 0x3a3

