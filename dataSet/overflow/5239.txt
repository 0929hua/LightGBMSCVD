Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x3f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH1 0x3f
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3f
0xb: JUMPI 0x3f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc
[0xc:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x44]
---
0xc PUSH1 0x0
0xe CALLDATALOAD
0xf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d SWAP1
0x2e DIV
0x2f PUSH4 0xffffffff
0x34 AND
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH1 0x44
0x3e JUMPI
---
0xc: V6 = 0x0
0xe: V7 = CALLDATALOAD 0x0
0xf: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0xffffffff
0x34: V11 = AND 0xffffffff V9
0x36: V12 = 0x8da5cb5b
0x3b: V13 = EQ 0x8da5cb5b V11
0x3c: V14 = 0x44
0x3e: JUMPI 0x44 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x43]
---
Predecessors: [0x0, 0xc]
Successors: []
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 DUP1
0x43 REVERT
---
0x3f: JUMPDEST 
0x40: V15 = 0x0
0x43: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44
[0x44:0x4a]
---
Predecessors: [0xc]
Successors: [0x4b, 0x4f]
---
0x44 JUMPDEST
0x45 CALLVALUE
0x46 DUP1
0x47 ISZERO
0x48 PUSH1 0x4f
0x4a JUMPI
---
0x44: JUMPDEST 
0x45: V16 = CALLVALUE
0x47: V17 = ISZERO V16
0x48: V18 = 0x4f
0x4a: JUMPI 0x4f V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V16]
Exit stack: [V11, V16]

================================

Block 0x4b
[0x4b:0x4e]
---
Predecessors: [0x44]
Successors: []
---
0x4b PUSH1 0x0
0x4d DUP1
0x4e REVERT
---
0x4b: V19 = 0x0
0x4e: REVERT 0x0 0x0
---
Entry stack: [V11, V16]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V16]

================================

Block 0x4f
[0x4f:0x55]
---
Predecessors: [0x44]
Successors: [0x98]
---
0x4f JUMPDEST
0x50 POP
0x51 PUSH1 0x56
0x53 PUSH1 0x98
0x55 JUMP
---
0x4f: JUMPDEST 
0x51: V20 = 0x56
0x53: V21 = 0x98
0x55: JUMP 0x98
---
Entry stack: [V11, V16]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x56
[0x56:0x97]
---
Predecessors: [0x98]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x40
0x59 MLOAD
0x5a DUP1
0x5b DUP3
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 DUP2
0x89 MSTORE
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP2
0x8e POP
0x8f POP
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 RETURN
---
0x56: JUMPDEST 
0x57: V22 = 0x40
0x59: V23 = M[0x40]
0x5c: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x72: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x89: M[V23] = V27
0x8a: V28 = 0x20
0x8c: V29 = ADD 0x20 V23
0x90: V30 = 0x40
0x92: V31 = M[0x40]
0x95: V32 = SUB V29 V31
0x97: RETURN V31 V32
---
Entry stack: [V11, 0x56, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x98
[0x98:0xbc]
---
Predecessors: [0x4f]
Successors: [0x56]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c SWAP1
0x9d SLOAD
0x9e SWAP1
0x9f PUSH2 0x100
0xa2 EXP
0xa3 SWAP1
0xa4 DIV
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba AND
0xbb DUP2
0xbc JUMP
---
0x98: JUMPDEST 
0x99: V33 = 0x0
0x9d: V34 = S[0x0]
0x9f: V35 = 0x100
0xa2: V36 = EXP 0x100 0x0
0xa4: V37 = DIV V34 0x1
0xa5: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbc: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: [S0, V39]
Exit stack: [V11, 0x56, V39]

================================

Block 0xbd
[0xbd:0xf5]
---
Predecessors: []
Successors: [0xf6]
---
0xbd STOP
0xbe LOG1
0xbf PUSH6 0x627a7a723058
0xc6 SHA3
0xc7 MISSING 0xc7
0xc8 MISSING 0xef
0xc9 MISSING 0xa6
0xca MISSING 0x49
0xcb MISSING 0x28
0xcc MISSING 0xb3
0xcd MISSING 0xeb
0xce SHA3
0xcf CREATE2
0xd0 MISSING 0xdf
0xd1 MISSING 0xb9
0xd2 MLOAD
0xd3 GASLIMIT
0xd4 PUSH20 0x484dcae94a72d00569d644238d8f0f3b32ed0029
0xe9 PUSH1 0x80
0xeb PUSH1 0x40
0xed MSTORE
0xee PUSH1 0x4
0xf0 CALLDATASIZE
0xf1 LT
0xf2 PUSH2 0x6d
0xf5 JUMPI
---
0xbd: STOP 
0xbe: LOG S0 S1 S2
0xbf: V40 = 0x627a7a723058
0xc6: V41 = SHA3 0x627a7a723058 S3
0xc7: MISSING 0xc7
0xc8: MISSING 0xef
0xc9: MISSING 0xa6
0xca: MISSING 0x49
0xcb: MISSING 0x28
0xcc: MISSING 0xb3
0xcd: MISSING 0xeb
0xce: V42 = SHA3 S0 S1
0xcf: V43 = CREATE2 V42 S2 S3 S4
0xd0: MISSING 0xdf
0xd1: MISSING 0xb9
0xd2: V44 = M[S0]
0xd3: V45 = GASLIMIT
0xd4: V46 = 0x484dcae94a72d00569d644238d8f0f3b32ed0029
0xe9: V47 = 0x80
0xeb: V48 = 0x40
0xed: M[0x40] = 0x80
0xee: V49 = 0x4
0xf0: V50 = CALLDATASIZE
0xf1: V51 = LT V50 0x4
0xf2: V52 = 0x6d
0xf5: THROWI V51
---
Entry stack: []
Stack pops: 0
Stack additions: [V41, V43, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V45, V44]
Exit stack: []

================================

Block 0xf6
[0xf6:0x129]
---
Predecessors: [0xbd]
Successors: [0x12a]
---
0xf6 PUSH1 0x0
0xf8 CALLDATALOAD
0xf9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x117 SWAP1
0x118 DIV
0x119 PUSH4 0xffffffff
0x11e AND
0x11f DUP1
0x120 PUSH4 0x2e1dc4b8
0x125 EQ
0x126 PUSH2 0x72
0x129 JUMPI
---
0xf6: V53 = 0x0
0xf8: V54 = CALLDATALOAD 0x0
0xf9: V55 = 0x100000000000000000000000000000000000000000000000000000000
0x118: V56 = DIV V54 0x100000000000000000000000000000000000000000000000000000000
0x119: V57 = 0xffffffff
0x11e: V58 = AND 0xffffffff V56
0x120: V59 = 0x2e1dc4b8
0x125: V60 = EQ 0x2e1dc4b8 V58
0x126: V61 = 0x72
0x129: THROWI V60
---
Entry stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]

================================

Block 0x12a
[0x12a:0x134]
---
Predecessors: [0xf6]
Successors: [0x135]
---
0x12a DUP1
0x12b PUSH4 0x659de63b
0x130 EQ
0x131 PUSH2 0xb5
0x134 JUMPI
---
0x12b: V62 = 0x659de63b
0x130: V63 = EQ 0x659de63b V58
0x131: V64 = 0xb5
0x134: THROWI V63
---
Entry stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]

================================

Block 0x135
[0x135:0x13f]
---
Predecessors: [0x12a]
Successors: [0x140]
---
0x135 DUP1
0x136 PUSH4 0x6e66f6e9
0x13b EQ
0x13c PUSH2 0x15e
0x13f JUMPI
---
0x136: V65 = 0x6e66f6e9
0x13b: V66 = EQ 0x6e66f6e9 V58
0x13c: V67 = 0x15e
0x13f: THROWI V66
---
Entry stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]

================================

Block 0x140
[0x140:0x14a]
---
Predecessors: [0x135]
Successors: [0x14b]
---
0x140 DUP1
0x141 PUSH4 0x8da5cb5b
0x146 EQ
0x147 PUSH2 0x1b5
0x14a JUMPI
---
0x141: V68 = 0x8da5cb5b
0x146: V69 = EQ 0x8da5cb5b V58
0x147: V70 = 0x1b5
0x14a: THROWI V69
---
Entry stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]

================================

Block 0x14b
[0x14b:0x155]
---
Predecessors: [0x140]
Successors: [0x156]
---
0x14b DUP1
0x14c PUSH4 0x9e281a98
0x151 EQ
0x152 PUSH2 0x20c
0x155 JUMPI
---
0x14c: V71 = 0x9e281a98
0x151: V72 = EQ 0x9e281a98 V58
0x152: V73 = 0x20c
0x155: THROWI V72
---
Entry stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]

================================

Block 0x156
[0x156:0x162]
---
Predecessors: [0x14b]
Successors: [0x163]
---
0x156 JUMPDEST
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
0x15b JUMPDEST
0x15c CALLVALUE
0x15d DUP1
0x15e ISZERO
0x15f PUSH2 0x7e
0x162 JUMPI
---
0x156: JUMPDEST 
0x157: V74 = 0x0
0x15a: REVERT 0x0 0x0
0x15b: JUMPDEST 
0x15c: V75 = CALLVALUE
0x15e: V76 = ISZERO V75
0x15f: V77 = 0x7e
0x162: THROWI V76
---
Entry stack: [V44, V45, 0x484dcae94a72d00569d644238d8f0f3b32ed0029, V58]
Stack pops: 0
Stack additions: [V75]
Exit stack: []

================================

Block 0x163
[0x163:0x1a5]
---
Predecessors: [0x156]
Successors: [0x1a6]
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
0x167 JUMPDEST
0x168 POP
0x169 PUSH2 0xb3
0x16c PUSH1 0x4
0x16e DUP1
0x16f CALLDATASIZE
0x170 SUB
0x171 DUP2
0x172 ADD
0x173 SWAP1
0x174 DUP1
0x175 DUP1
0x176 CALLDATALOAD
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d SWAP1
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP1
0x192 SWAP3
0x193 SWAP2
0x194 SWAP1
0x195 POP
0x196 POP
0x197 POP
0x198 PUSH2 0x259
0x19b JUMP
0x19c JUMPDEST
0x19d STOP
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 DUP1
0x1a1 ISZERO
0x1a2 PUSH2 0xc1
0x1a5 JUMPI
---
0x163: V78 = 0x0
0x166: REVERT 0x0 0x0
0x167: JUMPDEST 
0x169: V79 = 0xb3
0x16c: V80 = 0x4
0x16f: V81 = CALLDATASIZE
0x170: V82 = SUB V81 0x4
0x172: V83 = ADD 0x4 V82
0x176: V84 = CALLDATALOAD 0x4
0x177: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x18e: V87 = 0x20
0x190: V88 = ADD 0x20 0x4
0x198: V89 = 0x259
0x19b: THROW 
0x19c: JUMPDEST 
0x19d: STOP 
0x19e: JUMPDEST 
0x19f: V90 = CALLVALUE
0x1a1: V91 = ISZERO V90
0x1a2: V92 = 0xc1
0x1a5: THROWI V91
---
Entry stack: [V75]
Stack pops: 0
Stack additions: [V86, 0xb3, V90]
Exit stack: []

================================

Block 0x1a6
[0x1a6:0x24e]
---
Predecessors: [0x163]
Successors: [0x24f]
---
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 REVERT
0x1aa JUMPDEST
0x1ab POP
0x1ac PUSH2 0x15c
0x1af PUSH1 0x4
0x1b1 DUP1
0x1b2 CALLDATASIZE
0x1b3 SUB
0x1b4 DUP2
0x1b5 ADD
0x1b6 SWAP1
0x1b7 DUP1
0x1b8 DUP1
0x1b9 CALLDATALOAD
0x1ba SWAP1
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP1
0x1bf DUP3
0x1c0 ADD
0x1c1 DUP1
0x1c2 CALLDATALOAD
0x1c3 SWAP1
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 DUP1
0x1c9 DUP1
0x1ca PUSH1 0x20
0x1cc MUL
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 SWAP1
0x1d4 DUP2
0x1d5 ADD
0x1d6 PUSH1 0x40
0x1d8 MSTORE
0x1d9 DUP1
0x1da SWAP4
0x1db SWAP3
0x1dc SWAP2
0x1dd SWAP1
0x1de DUP2
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 DUP4
0x1e5 DUP4
0x1e6 PUSH1 0x20
0x1e8 MUL
0x1e9 DUP1
0x1ea DUP3
0x1eb DUP5
0x1ec CALLDATACOPY
0x1ed DUP3
0x1ee ADD
0x1ef SWAP2
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 SWAP2
0x1f7 SWAP3
0x1f8 SWAP2
0x1f9 SWAP3
0x1fa SWAP1
0x1fb DUP1
0x1fc CALLDATALOAD
0x1fd SWAP1
0x1fe PUSH1 0x20
0x200 ADD
0x201 SWAP1
0x202 DUP3
0x203 ADD
0x204 DUP1
0x205 CALLDATALOAD
0x206 SWAP1
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b DUP1
0x20c DUP1
0x20d PUSH1 0x20
0x20f MUL
0x210 PUSH1 0x20
0x212 ADD
0x213 PUSH1 0x40
0x215 MLOAD
0x216 SWAP1
0x217 DUP2
0x218 ADD
0x219 PUSH1 0x40
0x21b MSTORE
0x21c DUP1
0x21d SWAP4
0x21e SWAP3
0x21f SWAP2
0x220 SWAP1
0x221 DUP2
0x222 DUP2
0x223 MSTORE
0x224 PUSH1 0x20
0x226 ADD
0x227 DUP4
0x228 DUP4
0x229 PUSH1 0x20
0x22b MUL
0x22c DUP1
0x22d DUP3
0x22e DUP5
0x22f CALLDATACOPY
0x230 DUP3
0x231 ADD
0x232 SWAP2
0x233 POP
0x234 POP
0x235 POP
0x236 POP
0x237 POP
0x238 POP
0x239 SWAP2
0x23a SWAP3
0x23b SWAP2
0x23c SWAP3
0x23d SWAP1
0x23e POP
0x23f POP
0x240 POP
0x241 PUSH2 0x2f8
0x244 JUMP
0x245 JUMPDEST
0x246 STOP
0x247 JUMPDEST
0x248 CALLVALUE
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x16a
0x24e JUMPI
---
0x1a6: V93 = 0x0
0x1a9: REVERT 0x0 0x0
0x1aa: JUMPDEST 
0x1ac: V94 = 0x15c
0x1af: V95 = 0x4
0x1b2: V96 = CALLDATASIZE
0x1b3: V97 = SUB V96 0x4
0x1b5: V98 = ADD 0x4 V97
0x1b9: V99 = CALLDATALOAD 0x4
0x1bb: V100 = 0x20
0x1bd: V101 = ADD 0x20 0x4
0x1c0: V102 = ADD 0x4 V99
0x1c2: V103 = CALLDATALOAD V102
0x1c4: V104 = 0x20
0x1c6: V105 = ADD 0x20 V102
0x1ca: V106 = 0x20
0x1cc: V107 = MUL 0x20 V103
0x1cd: V108 = 0x20
0x1cf: V109 = ADD 0x20 V107
0x1d0: V110 = 0x40
0x1d2: V111 = M[0x40]
0x1d5: V112 = ADD V111 V109
0x1d6: V113 = 0x40
0x1d8: M[0x40] = V112
0x1e0: M[V111] = V103
0x1e1: V114 = 0x20
0x1e3: V115 = ADD 0x20 V111
0x1e6: V116 = 0x20
0x1e8: V117 = MUL 0x20 V103
0x1ec: CALLDATACOPY V115 V105 V117
0x1ee: V118 = ADD V115 V117
0x1fc: V119 = CALLDATALOAD 0x24
0x1fe: V120 = 0x20
0x200: V121 = ADD 0x20 0x24
0x203: V122 = ADD 0x4 V119
0x205: V123 = CALLDATALOAD V122
0x207: V124 = 0x20
0x209: V125 = ADD 0x20 V122
0x20d: V126 = 0x20
0x20f: V127 = MUL 0x20 V123
0x210: V128 = 0x20
0x212: V129 = ADD 0x20 V127
0x213: V130 = 0x40
0x215: V131 = M[0x40]
0x218: V132 = ADD V131 V129
0x219: V133 = 0x40
0x21b: M[0x40] = V132
0x223: M[V131] = V123
0x224: V134 = 0x20
0x226: V135 = ADD 0x20 V131
0x229: V136 = 0x20
0x22b: V137 = MUL 0x20 V123
0x22f: CALLDATACOPY V135 V125 V137
0x231: V138 = ADD V135 V137
0x241: V139 = 0x2f8
0x244: THROW 
0x245: JUMPDEST 
0x246: STOP 
0x247: JUMPDEST 
0x248: V140 = CALLVALUE
0x24a: V141 = ISZERO V140
0x24b: V142 = 0x16a
0x24e: THROWI V141
---
Entry stack: [V90]
Stack pops: 0
Stack additions: [V131, V111, 0x15c, V140]
Exit stack: []

================================

Block 0x24f
[0x24f:0x2a5]
---
Predecessors: [0x1a6]
Successors: [0x2a6]
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
0x253 JUMPDEST
0x254 POP
0x255 PUSH2 0x173
0x258 PUSH2 0x4a5
0x25b JUMP
0x25c JUMPDEST
0x25d PUSH1 0x40
0x25f MLOAD
0x260 DUP1
0x261 DUP3
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e DUP2
0x28f MSTORE
0x290 PUSH1 0x20
0x292 ADD
0x293 SWAP2
0x294 POP
0x295 POP
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a SWAP2
0x29b SUB
0x29c SWAP1
0x29d RETURN
0x29e JUMPDEST
0x29f CALLVALUE
0x2a0 DUP1
0x2a1 ISZERO
0x2a2 PUSH2 0x1c1
0x2a5 JUMPI
---
0x24f: V143 = 0x0
0x252: REVERT 0x0 0x0
0x253: JUMPDEST 
0x255: V144 = 0x173
0x258: V145 = 0x4a5
0x25b: THROW 
0x25c: JUMPDEST 
0x25d: V146 = 0x40
0x25f: V147 = M[0x40]
0x262: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x278: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x28f: M[V147] = V151
0x290: V152 = 0x20
0x292: V153 = ADD 0x20 V147
0x296: V154 = 0x40
0x298: V155 = M[0x40]
0x29b: V156 = SUB V153 V155
0x29d: RETURN V155 V156
0x29e: JUMPDEST 
0x29f: V157 = CALLVALUE
0x2a1: V158 = ISZERO V157
0x2a2: V159 = 0x1c1
0x2a5: THROWI V158
---
Entry stack: [V140]
Stack pops: 0
Stack additions: [0x173, V157]
Exit stack: []

================================

Block 0x2a6
[0x2a6:0x2fc]
---
Predecessors: [0x24f]
Successors: [0x2fd]
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
0x2aa JUMPDEST
0x2ab POP
0x2ac PUSH2 0x1ca
0x2af PUSH2 0x4cb
0x2b2 JUMP
0x2b3 JUMPDEST
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 DUP1
0x2b8 DUP3
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea SWAP2
0x2eb POP
0x2ec POP
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 SWAP2
0x2f2 SUB
0x2f3 SWAP1
0x2f4 RETURN
0x2f5 JUMPDEST
0x2f6 CALLVALUE
0x2f7 DUP1
0x2f8 ISZERO
0x2f9 PUSH2 0x218
0x2fc JUMPI
---
0x2a6: V160 = 0x0
0x2a9: REVERT 0x0 0x0
0x2aa: JUMPDEST 
0x2ac: V161 = 0x1ca
0x2af: V162 = 0x4cb
0x2b2: THROW 
0x2b3: JUMPDEST 
0x2b4: V163 = 0x40
0x2b6: V164 = M[0x40]
0x2b9: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2cf: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2e6: M[V164] = V168
0x2e7: V169 = 0x20
0x2e9: V170 = ADD 0x20 V164
0x2ed: V171 = 0x40
0x2ef: V172 = M[0x40]
0x2f2: V173 = SUB V170 V172
0x2f4: RETURN V172 V173
0x2f5: JUMPDEST 
0x2f6: V174 = CALLVALUE
0x2f8: V175 = ISZERO V174
0x2f9: V176 = 0x218
0x2fc: THROWI V175
---
Entry stack: [V157]
Stack pops: 0
Stack additions: [0x1ca, V174]
Exit stack: []

================================

Block 0x2fd
[0x2fd:0x398]
---
Predecessors: [0x2a6]
Successors: [0x399]
---
0x2fd PUSH1 0x0
0x2ff DUP1
0x300 REVERT
0x301 JUMPDEST
0x302 POP
0x303 PUSH2 0x257
0x306 PUSH1 0x4
0x308 DUP1
0x309 CALLDATASIZE
0x30a SUB
0x30b DUP2
0x30c ADD
0x30d SWAP1
0x30e DUP1
0x30f DUP1
0x310 CALLDATALOAD
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 SWAP1
0x328 PUSH1 0x20
0x32a ADD
0x32b SWAP1
0x32c SWAP3
0x32d SWAP2
0x32e SWAP1
0x32f DUP1
0x330 CALLDATALOAD
0x331 SWAP1
0x332 PUSH1 0x20
0x334 ADD
0x335 SWAP1
0x336 SWAP3
0x337 SWAP2
0x338 SWAP1
0x339 POP
0x33a POP
0x33b POP
0x33c PUSH2 0x4f0
0x33f JUMP
0x340 JUMPDEST
0x341 STOP
0x342 JUMPDEST
0x343 PUSH1 0x0
0x345 DUP1
0x346 SWAP1
0x347 SLOAD
0x348 SWAP1
0x349 PUSH2 0x100
0x34c EXP
0x34d SWAP1
0x34e DIV
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b CALLER
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 EQ
0x393 ISZERO
0x394 ISZERO
0x395 PUSH2 0x2b4
0x398 JUMPI
---
0x2fd: V177 = 0x0
0x300: REVERT 0x0 0x0
0x301: JUMPDEST 
0x303: V178 = 0x257
0x306: V179 = 0x4
0x309: V180 = CALLDATASIZE
0x30a: V181 = SUB V180 0x4
0x30c: V182 = ADD 0x4 V181
0x310: V183 = CALLDATALOAD 0x4
0x311: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x328: V186 = 0x20
0x32a: V187 = ADD 0x20 0x4
0x330: V188 = CALLDATALOAD 0x24
0x332: V189 = 0x20
0x334: V190 = ADD 0x20 0x24
0x33c: V191 = 0x4f0
0x33f: THROW 
0x340: JUMPDEST 
0x341: STOP 
0x342: JUMPDEST 
0x343: V192 = 0x0
0x347: V193 = S[0x0]
0x349: V194 = 0x100
0x34c: V195 = EXP 0x100 0x0
0x34e: V196 = DIV V193 0x1
0x34f: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x365: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x37b: V201 = CALLER
0x37c: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x392: V204 = EQ V203 V200
0x393: V205 = ISZERO V204
0x394: V206 = ISZERO V205
0x395: V207 = 0x2b4
0x398: THROWI V206
---
Entry stack: [V174]
Stack pops: 0
Stack additions: [V188, V185, 0x257]
Exit stack: []

================================

Block 0x399
[0x399:0x43d]
---
Predecessors: [0x2fd]
Successors: [0x43e]
---
0x399 PUSH1 0x0
0x39b DUP1
0x39c REVERT
0x39d JUMPDEST
0x39e DUP1
0x39f PUSH1 0x1
0x3a1 PUSH1 0x0
0x3a3 PUSH2 0x100
0x3a6 EXP
0x3a7 DUP2
0x3a8 SLOAD
0x3a9 DUP2
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf MUL
0x3c0 NOT
0x3c1 AND
0x3c2 SWAP1
0x3c3 DUP4
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da MUL
0x3db OR
0x3dc SWAP1
0x3dd SSTORE
0x3de POP
0x3df POP
0x3e0 JUMP
0x3e1 JUMPDEST
0x3e2 PUSH1 0x0
0x3e4 DUP1
0x3e5 PUSH1 0x0
0x3e7 DUP1
0x3e8 PUSH1 0x0
0x3ea DUP1
0x3eb SWAP1
0x3ec SLOAD
0x3ed SWAP1
0x3ee PUSH2 0x100
0x3f1 EXP
0x3f2 SWAP1
0x3f3 DIV
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41f AND
0x420 CALLER
0x421 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x436 AND
0x437 EQ
0x438 ISZERO
0x439 ISZERO
0x43a PUSH2 0x359
0x43d JUMPI
---
0x399: V208 = 0x0
0x39c: REVERT 0x0 0x0
0x39d: JUMPDEST 
0x39f: V209 = 0x1
0x3a1: V210 = 0x0
0x3a3: V211 = 0x100
0x3a6: V212 = EXP 0x100 0x0
0x3a8: V213 = S[0x1]
0x3aa: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V215 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3c0: V216 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V217 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V213
0x3c4: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3da: V220 = MUL V219 0x1
0x3db: V221 = OR V220 V217
0x3dd: S[0x1] = V221
0x3e0: JUMP S1
0x3e1: JUMPDEST 
0x3e2: V222 = 0x0
0x3e5: V223 = 0x0
0x3e8: V224 = 0x0
0x3ec: V225 = S[0x0]
0x3ee: V226 = 0x100
0x3f1: V227 = EXP 0x100 0x0
0x3f3: V228 = DIV V225 0x1
0x3f4: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x40a: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x420: V233 = CALLER
0x421: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x436: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x437: V236 = EQ V235 V232
0x438: V237 = ISZERO V236
0x439: V238 = ISZERO V237
0x43a: V239 = 0x359
0x43d: THROWI V238
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x43e
[0x43e:0x453]
---
Predecessors: [0x399]
Successors: [0x454]
---
0x43e PUSH1 0x0
0x440 DUP1
0x441 REVERT
0x442 JUMPDEST
0x443 DUP6
0x444 MLOAD
0x445 SWAP4
0x446 POP
0x447 DUP5
0x448 MLOAD
0x449 SWAP3
0x44a POP
0x44b DUP3
0x44c DUP5
0x44d EQ
0x44e ISZERO
0x44f ISZERO
0x450 PUSH2 0x36f
0x453 JUMPI
---
0x43e: V240 = 0x0
0x441: REVERT 0x0 0x0
0x442: JUMPDEST 
0x444: V241 = M[S5]
0x448: V242 = M[S4]
0x44d: V243 = EQ V241 V242
0x44e: V244 = ISZERO V243
0x44f: V245 = ISZERO V244
0x450: V246 = 0x36f
0x453: THROWI V245
---
Entry stack: [0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, V242, V241, S4, S5]
Exit stack: []

================================

Block 0x454
[0x454:0x45c]
---
Predecessors: [0x43e]
Successors: [0x45d]
---
0x454 PUSH1 0x0
0x456 DUP1
0x457 REVERT
0x458 JUMPDEST
0x459 PUSH1 0x0
0x45b SWAP2
0x45c POP
---
0x454: V247 = 0x0
0x457: REVERT 0x0 0x0
0x458: JUMPDEST 
0x459: V248 = 0x0
---
Entry stack: [S5, S4, V241, V242, S1, S0]
Stack pops: 0
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0x45d
[0x45d:0x465]
---
Predecessors: [0x454]
Successors: [0x466]
---
0x45d JUMPDEST
0x45e DUP4
0x45f DUP3
0x460 LT
0x461 ISZERO
0x462 PUSH2 0x49d
0x465 JUMPI
---
0x45d: JUMPDEST 
0x460: V249 = LT 0x0 S3
0x461: V250 = ISZERO V249
0x462: V251 = 0x49d
0x465: THROWI V250
---
Entry stack: [0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S1, S0, 0x0, S0]

================================

Block 0x466
[0x466:0x476]
---
Predecessors: [0x45d]
Successors: [0x477]
---
0x466 PUSH1 0x12
0x468 PUSH1 0xa
0x46a EXP
0x46b DUP6
0x46c DUP4
0x46d DUP2
0x46e MLOAD
0x46f DUP2
0x470 LT
0x471 ISZERO
0x472 ISZERO
0x473 PUSH2 0x38f
0x476 JUMPI
---
0x466: V252 = 0x12
0x468: V253 = 0xa
0x46a: V254 = EXP 0xa 0x12
0x46e: V255 = M[S4]
0x470: V256 = LT 0x0 V255
0x471: V257 = ISZERO V256
0x472: V258 = ISZERO V257
0x473: V259 = 0x38f
0x476: THROWI V258
---
Entry stack: [S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xde0b6b3a7640000, S4, S1]
Exit stack: [S0, S3, S2, 0x0, S0, 0xde0b6b3a7640000, S0, 0x0]

================================

Block 0x477
[0x477:0x477]
---
Predecessors: [0x466]
Successors: []
---
0x477 INVALID
---
0x477: INVALID 
---
Entry stack: [S7, S6, S5, 0x0, S3, 0xde0b6b3a7640000, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S7, S6, S5, 0x0, S3, 0xde0b6b3a7640000, S1, 0x0]

================================

Block 0x478
[0x478:0x4cf]
---
Predecessors: [0x4d0]
Successors: [0x4d0]
---
0x478 JUMPDEST
0x479 SWAP1
0x47a PUSH1 0x20
0x47c ADD
0x47d SWAP1
0x47e PUSH1 0x20
0x480 MUL
0x481 ADD
0x482 MLOAD
0x483 MUL
0x484 SWAP1
0x485 POP
0x486 PUSH1 0x1
0x488 PUSH1 0x0
0x48a SWAP1
0x48b SLOAD
0x48c SWAP1
0x48d PUSH2 0x100
0x490 EXP
0x491 SWAP1
0x492 DIV
0x493 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a8 AND
0x4a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4be AND
0x4bf PUSH4 0xa9059cbb
0x4c4 DUP8
0x4c5 DUP5
0x4c6 DUP2
0x4c7 MLOAD
0x4c8 DUP2
0x4c9 LT
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x3e8
0x4cf JUMPI
---
0x478: JUMPDEST 
0x47a: V260 = 0x20
0x47c: V261 = ADD 0x20 S1
0x47e: V262 = 0x20
0x480: V263 = MUL 0x20 V311
0x481: V264 = ADD V263 V261
0x482: V265 = M[V264]
0x483: V266 = MUL V265 0x0
0x486: V267 = 0x1
0x488: V268 = 0x0
0x48b: V269 = S[0x1]
0x48d: V270 = 0x100
0x490: V271 = EXP 0x100 0x0
0x492: V272 = DIV V269 0x1
0x493: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a8: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x4a9: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x4bf: V277 = 0xa9059cbb
0x4c7: V278 = M[S8]
0x4c9: V279 = LT V308 V278
0x4ca: V280 = ISZERO V279
0x4cb: V281 = ISZERO V280
0x4cc: V282 = 0x3e8
0x4cf: THROWI V281
---
Entry stack: [S10, S9, S8, V304, 0x0, V307, V308, V307, 0x0, S1, V311]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V266, V276, 0xa9059cbb, S8, S4]
Exit stack: [S10, S9, S8, V304, 0x0, V307, V308, V266, V276, 0xa9059cbb, S8, V308]

================================

Block 0x4d0
[0x4d0:0x55c]
---
Predecessors: [0x478]
Successors: [0x478, 0x55d]
---
0x4d0 INVALID
0x4d1 JUMPDEST
0x4d2 SWAP1
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 SWAP1
0x4d7 PUSH1 0x20
0x4d9 MUL
0x4da ADD
0x4db MLOAD
0x4dc DUP4
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 DUP4
0x4e1 PUSH4 0xffffffff
0x4e6 AND
0x4e7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x505 MUL
0x506 DUP2
0x507 MSTORE
0x508 PUSH1 0x4
0x50a ADD
0x50b DUP1
0x50c DUP4
0x50d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x522 AND
0x523 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x538 AND
0x539 DUP2
0x53a MSTORE
0x53b PUSH1 0x20
0x53d ADD
0x53e DUP3
0x53f DUP2
0x540 MSTORE
0x541 PUSH1 0x20
0x543 ADD
0x544 SWAP3
0x545 POP
0x546 POP
0x547 POP
0x548 PUSH1 0x0
0x54a PUSH1 0x40
0x54c MLOAD
0x54d DUP1
0x54e DUP4
0x54f SUB
0x550 DUP2
0x551 PUSH1 0x0
0x553 DUP8
0x554 DUP1
0x555 EXTCODESIZE
0x556 ISZERO
0x557 DUP1
0x558 ISZERO
0x559 PUSH2 0x478
0x55c JUMPI
---
0x4d0: INVALID 
0x4d1: JUMPDEST 
0x4d3: V283 = 0x20
0x4d5: V284 = ADD 0x20 S1
0x4d7: V285 = 0x20
0x4d9: V286 = MUL 0x20 S0
0x4da: V287 = ADD V286 V284
0x4db: V288 = M[V287]
0x4dd: V289 = 0x40
0x4df: V290 = M[0x40]
0x4e1: V291 = 0xffffffff
0x4e6: V292 = AND 0xffffffff S2
0x4e7: V293 = 0x100000000000000000000000000000000000000000000000000000000
0x505: V294 = MUL 0x100000000000000000000000000000000000000000000000000000000 V292
0x507: M[V290] = V294
0x508: V295 = 0x4
0x50a: V296 = ADD 0x4 V290
0x50d: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x522: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x523: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x538: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x53a: M[V296] = V300
0x53b: V301 = 0x20
0x53d: V302 = ADD 0x20 V296
0x540: M[V302] = S4
0x541: V303 = 0x20
0x543: V304 = ADD 0x20 V302
0x548: V305 = 0x0
0x54a: V306 = 0x40
0x54c: V307 = M[0x40]
0x54f: V308 = SUB V304 V307
0x551: V309 = 0x0
0x555: V310 = EXTCODESIZE S3
0x556: V311 = ISZERO V310
0x558: V312 = ISZERO V311
0x559: V313 = 0x478
0x55c: JUMPI 0x478 V312
---
Entry stack: [S11, S10, S9, V304, 0x0, V307, V308, V266, V276, 0xa9059cbb, S1, V308]
Stack pops: 0
Stack additions: [V311, S3, 0x0, V307, V308, V307, 0x0, V304, S2, S3, S4]
Exit stack: []

================================

Block 0x55d
[0x55d:0x56b]
---
Predecessors: [0x4d0]
Successors: [0x56c]
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
0x561 JUMPDEST
0x562 POP
0x563 GAS
0x564 CALL
0x565 ISZERO
0x566 DUP1
0x567 ISZERO
0x568 PUSH2 0x48c
0x56b JUMPI
---
0x55d: V314 = 0x0
0x560: REVERT 0x0 0x0
0x561: JUMPDEST 
0x563: V315 = GAS
0x564: V316 = CALL V315 S1 S2 S3 S4 S5 S6
0x565: V317 = ISZERO V316
0x567: V318 = ISZERO V317
0x568: V319 = 0x48c
0x56b: THROWI V318
---
Entry stack: [S10, S9, S8, V304, 0x0, V307, V308, V307, 0x0, S1, V311]
Stack pops: 0
Stack additions: [V317]
Exit stack: []

================================

Block 0x56c
[0x56c:0x631]
---
Predecessors: [0x55d]
Successors: [0x632]
---
0x56c RETURNDATASIZE
0x56d PUSH1 0x0
0x56f DUP1
0x570 RETURNDATACOPY
0x571 RETURNDATASIZE
0x572 PUSH1 0x0
0x574 REVERT
0x575 JUMPDEST
0x576 POP
0x577 POP
0x578 POP
0x579 POP
0x57a DUP2
0x57b DUP1
0x57c PUSH1 0x1
0x57e ADD
0x57f SWAP3
0x580 POP
0x581 POP
0x582 PUSH2 0x374
0x585 JUMP
0x586 JUMPDEST
0x587 POP
0x588 POP
0x589 POP
0x58a POP
0x58b POP
0x58c POP
0x58d JUMP
0x58e JUMPDEST
0x58f PUSH1 0x1
0x591 PUSH1 0x0
0x593 SWAP1
0x594 SLOAD
0x595 SWAP1
0x596 PUSH2 0x100
0x599 EXP
0x59a SWAP1
0x59b DIV
0x59c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b1 AND
0x5b2 DUP2
0x5b3 JUMP
0x5b4 JUMPDEST
0x5b5 PUSH1 0x0
0x5b7 DUP1
0x5b8 SWAP1
0x5b9 SLOAD
0x5ba SWAP1
0x5bb PUSH2 0x100
0x5be EXP
0x5bf SWAP1
0x5c0 DIV
0x5c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d6 AND
0x5d7 DUP2
0x5d8 JUMP
0x5d9 JUMPDEST
0x5da PUSH1 0x0
0x5dc DUP1
0x5dd PUSH1 0x0
0x5df SWAP1
0x5e0 SLOAD
0x5e1 SWAP1
0x5e2 PUSH2 0x100
0x5e5 EXP
0x5e6 SWAP1
0x5e7 DIV
0x5e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fd AND
0x5fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x613 AND
0x614 CALLER
0x615 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62a AND
0x62b EQ
0x62c ISZERO
0x62d ISZERO
0x62e PUSH2 0x54d
0x631 JUMPI
---
0x56c: V320 = RETURNDATASIZE
0x56d: V321 = 0x0
0x570: RETURNDATACOPY 0x0 0x0 V320
0x571: V322 = RETURNDATASIZE
0x572: V323 = 0x0
0x574: REVERT 0x0 V322
0x575: JUMPDEST 
0x57c: V324 = 0x1
0x57e: V325 = ADD 0x1 S5
0x582: V326 = 0x374
0x585: THROW 
0x586: JUMPDEST 
0x58d: JUMP S6
0x58e: JUMPDEST 
0x58f: V327 = 0x1
0x591: V328 = 0x0
0x594: V329 = S[0x1]
0x596: V330 = 0x100
0x599: V331 = EXP 0x100 0x0
0x59b: V332 = DIV V329 0x1
0x59c: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b1: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x5b3: JUMP S0
0x5b4: JUMPDEST 
0x5b5: V335 = 0x0
0x5b9: V336 = S[0x0]
0x5bb: V337 = 0x100
0x5be: V338 = EXP 0x100 0x0
0x5c0: V339 = DIV V336 0x1
0x5c1: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d6: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x5d8: JUMP S0
0x5d9: JUMPDEST 
0x5da: V342 = 0x0
0x5dd: V343 = 0x0
0x5e0: V344 = S[0x0]
0x5e2: V345 = 0x100
0x5e5: V346 = EXP 0x100 0x0
0x5e7: V347 = DIV V344 0x1
0x5e8: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x5fe: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x613: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x614: V352 = CALLER
0x615: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x62b: V355 = EQ V354 V351
0x62c: V356 = ISZERO V355
0x62d: V357 = ISZERO V356
0x62e: V358 = 0x54d
0x631: THROWI V357
---
Entry stack: [V317]
Stack pops: 0
Stack additions: [S4, V325, V334, S0, V341, S0, 0x0]
Exit stack: []

================================

Block 0x632
[0x632:0x6ff]
---
Predecessors: [0x56c]
Successors: [0x700]
---
0x632 PUSH1 0x0
0x634 DUP1
0x635 REVERT
0x636 JUMPDEST
0x637 PUSH1 0x12
0x639 PUSH1 0xa
0x63b EXP
0x63c DUP3
0x63d MUL
0x63e SWAP1
0x63f POP
0x640 PUSH1 0x1
0x642 PUSH1 0x0
0x644 SWAP1
0x645 SLOAD
0x646 SWAP1
0x647 PUSH2 0x100
0x64a EXP
0x64b SWAP1
0x64c DIV
0x64d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x662 AND
0x663 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x678 AND
0x679 PUSH4 0xa9059cbb
0x67e DUP5
0x67f DUP4
0x680 PUSH1 0x40
0x682 MLOAD
0x683 DUP4
0x684 PUSH4 0xffffffff
0x689 AND
0x68a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6a8 MUL
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x4
0x6ad ADD
0x6ae DUP1
0x6af DUP4
0x6b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c5 AND
0x6c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6db AND
0x6dc DUP2
0x6dd MSTORE
0x6de PUSH1 0x20
0x6e0 ADD
0x6e1 DUP3
0x6e2 DUP2
0x6e3 MSTORE
0x6e4 PUSH1 0x20
0x6e6 ADD
0x6e7 SWAP3
0x6e8 POP
0x6e9 POP
0x6ea POP
0x6eb PUSH1 0x0
0x6ed PUSH1 0x40
0x6ef MLOAD
0x6f0 DUP1
0x6f1 DUP4
0x6f2 SUB
0x6f3 DUP2
0x6f4 PUSH1 0x0
0x6f6 DUP8
0x6f7 DUP1
0x6f8 EXTCODESIZE
0x6f9 ISZERO
0x6fa DUP1
0x6fb ISZERO
0x6fc PUSH2 0x61b
0x6ff JUMPI
---
0x632: V359 = 0x0
0x635: REVERT 0x0 0x0
0x636: JUMPDEST 
0x637: V360 = 0x12
0x639: V361 = 0xa
0x63b: V362 = EXP 0xa 0x12
0x63d: V363 = MUL S1 0xde0b6b3a7640000
0x640: V364 = 0x1
0x642: V365 = 0x0
0x645: V366 = S[0x1]
0x647: V367 = 0x100
0x64a: V368 = EXP 0x100 0x0
0x64c: V369 = DIV V366 0x1
0x64d: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x662: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x663: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x678: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x679: V374 = 0xa9059cbb
0x680: V375 = 0x40
0x682: V376 = M[0x40]
0x684: V377 = 0xffffffff
0x689: V378 = AND 0xffffffff 0xa9059cbb
0x68a: V379 = 0x100000000000000000000000000000000000000000000000000000000
0x6a8: V380 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6aa: M[V376] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6ab: V381 = 0x4
0x6ad: V382 = ADD 0x4 V376
0x6b0: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c5: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6c6: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x6dd: M[V382] = V386
0x6de: V387 = 0x20
0x6e0: V388 = ADD 0x20 V382
0x6e3: M[V388] = V363
0x6e4: V389 = 0x20
0x6e6: V390 = ADD 0x20 V388
0x6eb: V391 = 0x0
0x6ed: V392 = 0x40
0x6ef: V393 = M[0x40]
0x6f2: V394 = SUB V390 V393
0x6f4: V395 = 0x0
0x6f8: V396 = EXTCODESIZE V373
0x6f9: V397 = ISZERO V396
0x6fb: V398 = ISZERO V397
0x6fc: V399 = 0x61b
0x6ff: THROWI V398
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V397, V373, 0x0, V393, V394, V393, 0x0, V390, 0xa9059cbb, V373, V363, S1, S2]
Exit stack: []

================================

Block 0x700
[0x700:0x70e]
---
Predecessors: [0x632]
Successors: [0x70f]
---
0x700 PUSH1 0x0
0x702 DUP1
0x703 REVERT
0x704 JUMPDEST
0x705 POP
0x706 GAS
0x707 CALL
0x708 ISZERO
0x709 DUP1
0x70a ISZERO
0x70b PUSH2 0x62f
0x70e JUMPI
---
0x700: V400 = 0x0
0x703: REVERT 0x0 0x0
0x704: JUMPDEST 
0x706: V401 = GAS
0x707: V402 = CALL V401 S1 S2 S3 S4 S5 S6
0x708: V403 = ISZERO V402
0x70a: V404 = ISZERO V403
0x70b: V405 = 0x62f
0x70e: THROWI V404
---
Entry stack: [S12, S11, V363, V373, 0xa9059cbb, V390, 0x0, V393, V394, V393, 0x0, V373, V397]
Stack pops: 0
Stack additions: [V403]
Exit stack: []

================================

Block 0x70f
[0x70f:0x74c]
---
Predecessors: [0x700]
Successors: []
---
0x70f RETURNDATASIZE
0x710 PUSH1 0x0
0x712 DUP1
0x713 RETURNDATACOPY
0x714 RETURNDATASIZE
0x715 PUSH1 0x0
0x717 REVERT
0x718 JUMPDEST
0x719 POP
0x71a POP
0x71b POP
0x71c POP
0x71d POP
0x71e POP
0x71f POP
0x720 JUMP
0x721 STOP
0x722 LOG1
0x723 PUSH6 0x627a7a723058
0x72a SHA3
0x72b MISSING 0xc5
0x72c LOG2
0x72d MISSING 0xb9
0x72e CALLDATASIZE
0x72f MISSING 0x2d
0x730 NOT
0x731 DIFFICULTY
0x732 DUP9
0x733 MISSING 0xec
0x734 PUSH20 0xfcf49e868c6cb4d3d1c61b7d017025557b0f4d2
0x749 SHR
0x74a LT
0x74b STOP
0x74c MISSING 0x29
---
0x70f: V406 = RETURNDATASIZE
0x710: V407 = 0x0
0x713: RETURNDATACOPY 0x0 0x0 V406
0x714: V408 = RETURNDATASIZE
0x715: V409 = 0x0
0x717: REVERT 0x0 V408
0x718: JUMPDEST 
0x720: JUMP S7
0x721: STOP 
0x722: LOG S0 S1 S2
0x723: V410 = 0x627a7a723058
0x72a: V411 = SHA3 0x627a7a723058 S3
0x72b: MISSING 0xc5
0x72c: LOG S0 S1 S2 S3
0x72d: MISSING 0xb9
0x72e: V412 = CALLDATASIZE
0x72f: MISSING 0x2d
0x730: V413 = NOT S0
0x731: V414 = DIFFICULTY
0x733: MISSING 0xec
0x734: V415 = 0xfcf49e868c6cb4d3d1c61b7d017025557b0f4d2
0x749: V416 = SHR 0xfcf49e868c6cb4d3d1c61b7d017025557b0f4d2 S0
0x74a: V417 = LT V416 S1
0x74b: STOP 
0x74c: MISSING 0x29
---
Entry stack: [V403]
Stack pops: 0
Stack additions: [V411, V412, S7, V414, V413, S1, S2, S3, S4, S5, S6, S7, V417]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x44
Exit block: 0x56
Body: 0x44, 0x4b, 0x4f, 0x56, 0x98

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x3f
Body: 0x3f

