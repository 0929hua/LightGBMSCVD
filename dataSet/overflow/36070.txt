Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xad]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xad
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xad
0xa: JUMPI 0xad V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xb2]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xb2
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xb2
0x3e: JUMPI 0xb2 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x140]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x140
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x140
0x49: JUMPI 0x140 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x19a]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x19a
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x19a
0x54: JUMPI 0x19a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1c3]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1c3
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1c3
0x5f: JUMPI 0x1c3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x23c]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x23c
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x23c
0x6a: JUMPI 0x23c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x26b]
---
0x6b DUP1
0x6c PUSH4 0x70a08231
0x71 EQ
0x72 PUSH2 0x26b
0x75 JUMPI
---
0x6c: V26 = 0x70a08231
0x71: V27 = EQ 0x70a08231 V10
0x72: V28 = 0x26b
0x75: JUMPI 0x26b V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2b8]
---
0x76 DUP1
0x77 PUSH4 0x8da5cb5b
0x7c EQ
0x7d PUSH2 0x2b8
0x80 JUMPI
---
0x77: V29 = 0x8da5cb5b
0x7c: V30 = EQ 0x8da5cb5b V10
0x7d: V31 = 0x2b8
0x80: JUMPI 0x2b8 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x30d]
---
0x81 DUP1
0x82 PUSH4 0x95d89b41
0x87 EQ
0x88 PUSH2 0x30d
0x8b JUMPI
---
0x82: V32 = 0x95d89b41
0x87: V33 = EQ 0x95d89b41 V10
0x88: V34 = 0x30d
0x8b: JUMPI 0x30d V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x39b]
---
0x8c DUP1
0x8d PUSH4 0xa9059cbb
0x92 EQ
0x93 PUSH2 0x39b
0x96 JUMPI
---
0x8d: V35 = 0xa9059cbb
0x92: V36 = EQ 0xa9059cbb V10
0x93: V37 = 0x39b
0x96: JUMPI 0x39b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x3f5]
---
0x97 DUP1
0x98 PUSH4 0xcd40a48d
0x9d EQ
0x9e PUSH2 0x3f5
0xa1 JUMPI
---
0x98: V38 = 0xcd40a48d
0x9d: V39 = EQ 0xcd40a48d V10
0x9e: V40 = 0x3f5
0xa1: JUMPI 0x3f5 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x42e]
---
0xa2 DUP1
0xa3 PUSH4 0xdd62ed3e
0xa8 EQ
0xa9 PUSH2 0x42e
0xac JUMPI
---
0xa3: V41 = 0xdd62ed3e
0xa8: V42 = EQ 0xdd62ed3e V10
0xa9: V43 = 0x42e
0xac: JUMPI 0x42e V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb1]
---
Predecessors: [0x0, 0xa2]
Successors: []
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xad: JUMPDEST 
0xae: V44 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0xb]
Successors: [0xb9, 0xbd]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V45 = CALLVALUE
0xb4: V46 = ISZERO V45
0xb5: V47 = 0xbd
0xb8: JUMPI 0xbd V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V48 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0xb2]
Successors: [0x49a]
---
0xbd JUMPDEST
0xbe PUSH2 0xc5
0xc1 PUSH2 0x49a
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V49 = 0xc5
0xc1: V50 = 0x49a
0xc4: JUMP 0x49a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V10, 0xc5]

================================

Block 0xc5
[0xc5:0xe9]
---
Predecessors: [0x49a]
Successors: [0xea]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca DUP1
0xcb PUSH1 0x20
0xcd ADD
0xce DUP3
0xcf DUP2
0xd0 SUB
0xd1 DUP3
0xd2 MSTORE
0xd3 DUP4
0xd4 DUP2
0xd5 DUP2
0xd6 MLOAD
0xd7 DUP2
0xd8 MSTORE
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP2
0xdd POP
0xde DUP1
0xdf MLOAD
0xe0 SWAP1
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 SWAP1
0xe5 DUP1
0xe6 DUP4
0xe7 DUP4
0xe8 PUSH1 0x0
---
0xc5: JUMPDEST 
0xc6: V51 = 0x40
0xc8: V52 = M[0x40]
0xcb: V53 = 0x20
0xcd: V54 = ADD 0x20 V52
0xd0: V55 = SUB V54 V52
0xd2: M[V52] = V55
0xd6: V56 = M[V325]
0xd8: M[V54] = V56
0xd9: V57 = 0x20
0xdb: V58 = ADD 0x20 V54
0xdf: V59 = M[V325]
0xe1: V60 = 0x20
0xe3: V61 = ADD 0x20 V325
0xe8: V62 = 0x0
---
Entry stack: [V10, 0xc5, V325]
Stack pops: 1
Stack additions: [S0, V52, V52, V58, V61, V59, V59, V58, V61, 0x0]
Exit stack: [V10, 0xc5, V325, V52, V52, V58, V61, V59, V59, V58, V61, 0x0]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xc5, 0xf3]
Successors: [0xf3, 0x105]
---
0xea JUMPDEST
0xeb DUP4
0xec DUP2
0xed LT
0xee ISZERO
0xef PUSH2 0x105
0xf2 JUMPI
---
0xea: JUMPDEST 
0xed: V63 = LT S0 V59
0xee: V64 = ISZERO V63
0xef: V65 = 0x105
0xf2: JUMPI 0x105 V64
---
Entry stack: [V10, 0xc5, V325, V52, V52, V58, V61, V59, V59, V58, V61, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xc5, V325, V52, V52, V58, V61, V59, V59, V58, V61, S0]

================================

Block 0xf3
[0xf3:0x104]
---
Predecessors: [0xea]
Successors: [0xea]
---
0xf3 DUP1
0xf4 DUP3
0xf5 ADD
0xf6 MLOAD
0xf7 DUP2
0xf8 DUP5
0xf9 ADD
0xfa MSTORE
0xfb PUSH1 0x20
0xfd DUP2
0xfe ADD
0xff SWAP1
0x100 POP
0x101 PUSH2 0xea
0x104 JUMP
---
0xf5: V66 = ADD V61 S0
0xf6: V67 = M[V66]
0xf9: V68 = ADD V58 S0
0xfa: M[V68] = V67
0xfb: V69 = 0x20
0xfe: V70 = ADD S0 0x20
0x101: V71 = 0xea
0x104: JUMP 0xea
---
Entry stack: [V10, 0xc5, V325, V52, V52, V58, V61, V59, V59, V58, V61, S0]
Stack pops: 3
Stack additions: [S2, S1, V70]
Exit stack: [V10, 0xc5, V325, V52, V52, V58, V61, V59, V59, V58, V61, V70]

================================

Block 0x105
[0x105:0x118]
---
Predecessors: [0xea]
Successors: [0x119, 0x132]
---
0x105 JUMPDEST
0x106 POP
0x107 POP
0x108 POP
0x109 POP
0x10a SWAP1
0x10b POP
0x10c SWAP1
0x10d DUP2
0x10e ADD
0x10f SWAP1
0x110 PUSH1 0x1f
0x112 AND
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x132
0x118 JUMPI
---
0x105: JUMPDEST 
0x10e: V72 = ADD V59 V58
0x110: V73 = 0x1f
0x112: V74 = AND 0x1f V59
0x114: V75 = ISZERO V74
0x115: V76 = 0x132
0x118: JUMPI 0x132 V75
---
Entry stack: [V10, 0xc5, V325, V52, V52, V58, V61, V59, V59, V58, V61, S0]
Stack pops: 7
Stack additions: [V72, V74]
Exit stack: [V10, 0xc5, V325, V52, V52, V72, V74]

================================

Block 0x119
[0x119:0x131]
---
Predecessors: [0x105]
Successors: [0x132]
---
0x119 DUP1
0x11a DUP3
0x11b SUB
0x11c DUP1
0x11d MLOAD
0x11e PUSH1 0x1
0x120 DUP4
0x121 PUSH1 0x20
0x123 SUB
0x124 PUSH2 0x100
0x127 EXP
0x128 SUB
0x129 NOT
0x12a AND
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP2
0x131 POP
---
0x11b: V77 = SUB V72 V74
0x11d: V78 = M[V77]
0x11e: V79 = 0x1
0x121: V80 = 0x20
0x123: V81 = SUB 0x20 V74
0x124: V82 = 0x100
0x127: V83 = EXP 0x100 V81
0x128: V84 = SUB V83 0x1
0x129: V85 = NOT V84
0x12a: V86 = AND V85 V78
0x12c: M[V77] = V86
0x12d: V87 = 0x20
0x12f: V88 = ADD 0x20 V77
---
Entry stack: [V10, 0xc5, V325, V52, V52, V72, V74]
Stack pops: 2
Stack additions: [V88, S0]
Exit stack: [V10, 0xc5, V325, V52, V52, V88, V74]

================================

Block 0x132
[0x132:0x13f]
---
Predecessors: [0x105, 0x119]
Successors: []
---
0x132 JUMPDEST
0x133 POP
0x134 SWAP3
0x135 POP
0x136 POP
0x137 POP
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c SWAP2
0x13d SUB
0x13e SWAP1
0x13f RETURN
---
0x132: JUMPDEST 
0x138: V89 = 0x40
0x13a: V90 = M[0x40]
0x13d: V91 = SUB S1 V90
0x13f: RETURN V90 V91
---
Entry stack: [V10, 0xc5, V325, V52, V52, S1, V74]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0x140
[0x140:0x146]
---
Predecessors: [0x3f]
Successors: [0x147, 0x14b]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 ISZERO
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x140: JUMPDEST 
0x141: V92 = CALLVALUE
0x142: V93 = ISZERO V92
0x143: V94 = 0x14b
0x146: JUMPI 0x14b V93
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x140]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V95 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14b
[0x14b:0x17f]
---
Predecessors: [0x140]
Successors: [0x4d3]
---
0x14b JUMPDEST
0x14c PUSH2 0x180
0x14f PUSH1 0x4
0x151 DUP1
0x152 DUP1
0x153 CALLDATALOAD
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a SWAP1
0x16b PUSH1 0x20
0x16d ADD
0x16e SWAP1
0x16f SWAP2
0x170 SWAP1
0x171 DUP1
0x172 CALLDATALOAD
0x173 SWAP1
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP1
0x178 SWAP2
0x179 SWAP1
0x17a POP
0x17b POP
0x17c PUSH2 0x4d3
0x17f JUMP
---
0x14b: JUMPDEST 
0x14c: V96 = 0x180
0x14f: V97 = 0x4
0x153: V98 = CALLDATALOAD 0x4
0x154: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x16b: V101 = 0x20
0x16d: V102 = ADD 0x20 0x4
0x172: V103 = CALLDATALOAD 0x24
0x174: V104 = 0x20
0x176: V105 = ADD 0x20 0x24
0x17c: V106 = 0x4d3
0x17f: JUMP 0x4d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x180, V100, V103]
Exit stack: [V10, 0x180, V100, V103]

================================

Block 0x180
[0x180:0x199]
---
Predecessors: [0x4d3]
Successors: []
---
0x180 JUMPDEST
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 DUP3
0x186 ISZERO
0x187 ISZERO
0x188 ISZERO
0x189 ISZERO
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP2
0x190 POP
0x191 POP
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 SWAP2
0x197 SUB
0x198 SWAP1
0x199 RETURN
---
0x180: JUMPDEST 
0x181: V107 = 0x40
0x183: V108 = M[0x40]
0x186: V109 = ISZERO 0x1
0x187: V110 = ISZERO 0x0
0x188: V111 = ISZERO 0x1
0x189: V112 = ISZERO 0x0
0x18b: M[V108] = 0x1
0x18c: V113 = 0x20
0x18e: V114 = ADD 0x20 V108
0x192: V115 = 0x40
0x194: V116 = M[0x40]
0x197: V117 = SUB V114 V116
0x199: RETURN V116 V117
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x4a]
Successors: [0x1a1, 0x1a5]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a5
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V118 = CALLVALUE
0x19c: V119 = ISZERO V118
0x19d: V120 = 0x1a5
0x1a0: JUMPI 0x1a5 V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 REVERT
---
0x1a1: V121 = 0x0
0x1a4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x19a]
Successors: [0x5c5]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x1ad
0x1a9 PUSH2 0x5c5
0x1ac JUMP
---
0x1a5: JUMPDEST 
0x1a6: V122 = 0x1ad
0x1a9: V123 = 0x5c5
0x1ac: JUMP 0x5c5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ad]
Exit stack: [V10, 0x1ad]

================================

Block 0x1ad
[0x1ad:0x1c2]
---
Predecessors: [0x5c5]
Successors: []
---
0x1ad JUMPDEST
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 DUP3
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP2
0x1b9 POP
0x1ba POP
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be DUP1
0x1bf SWAP2
0x1c0 SUB
0x1c1 SWAP1
0x1c2 RETURN
---
0x1ad: JUMPDEST 
0x1ae: V124 = 0x40
0x1b0: V125 = M[0x40]
0x1b4: M[V125] = V372
0x1b5: V126 = 0x20
0x1b7: V127 = ADD 0x20 V125
0x1bb: V128 = 0x40
0x1bd: V129 = M[0x40]
0x1c0: V130 = SUB V127 V129
0x1c2: RETURN V129 V130
---
Entry stack: [V10, V372]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c3
[0x1c3:0x1c9]
---
Predecessors: [0x55]
Successors: [0x1ca, 0x1ce]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V131 = CALLVALUE
0x1c5: V132 = ISZERO V131
0x1c6: V133 = 0x1ce
0x1c9: JUMPI 0x1ce V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x1c3]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V134 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ce
[0x1ce:0x221]
---
Predecessors: [0x1c3]
Successors: [0x5ce]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x222
0x1d2 PUSH1 0x4
0x1d4 DUP1
0x1d5 DUP1
0x1d6 CALLDATALOAD
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed SWAP1
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP1
0x1f2 SWAP2
0x1f3 SWAP1
0x1f4 DUP1
0x1f5 CALLDATALOAD
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c SWAP1
0x20d PUSH1 0x20
0x20f ADD
0x210 SWAP1
0x211 SWAP2
0x212 SWAP1
0x213 DUP1
0x214 CALLDATALOAD
0x215 SWAP1
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP1
0x21a SWAP2
0x21b SWAP1
0x21c POP
0x21d POP
0x21e PUSH2 0x5ce
0x221 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V135 = 0x222
0x1d2: V136 = 0x4
0x1d6: V137 = CALLDATALOAD 0x4
0x1d7: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x1ee: V140 = 0x20
0x1f0: V141 = ADD 0x20 0x4
0x1f5: V142 = CALLDATALOAD 0x24
0x1f6: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x20d: V145 = 0x20
0x20f: V146 = ADD 0x20 0x24
0x214: V147 = CALLDATALOAD 0x44
0x216: V148 = 0x20
0x218: V149 = ADD 0x20 0x44
0x21e: V150 = 0x5ce
0x221: JUMP 0x5ce
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x222, V139, V144, V147]
Exit stack: [V10, 0x222, V139, V144, V147]

================================

Block 0x222
[0x222:0x23b]
---
Predecessors: [0x8ce]
Successors: []
---
0x222 JUMPDEST
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 DUP3
0x228 ISZERO
0x229 ISZERO
0x22a ISZERO
0x22b ISZERO
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP2
0x232 POP
0x233 POP
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 SWAP2
0x239 SUB
0x23a SWAP1
0x23b RETURN
---
0x222: JUMPDEST 
0x223: V151 = 0x40
0x225: V152 = M[0x40]
0x228: V153 = ISZERO {0x0, 0x1}
0x229: V154 = ISZERO V153
0x22a: V155 = ISZERO V154
0x22b: V156 = ISZERO V155
0x22d: M[V152] = V156
0x22e: V157 = 0x20
0x230: V158 = ADD 0x20 V152
0x234: V159 = 0x40
0x236: V160 = M[0x40]
0x239: V161 = SUB V158 V160
0x23b: RETURN V160 V161
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x60]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V162 = CALLVALUE
0x23e: V163 = ISZERO V162
0x23f: V164 = 0x247
0x242: JUMPI 0x247 V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V165 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x23c]
Successors: [0x8d5]
---
0x247 JUMPDEST
0x248 PUSH2 0x24f
0x24b PUSH2 0x8d5
0x24e JUMP
---
0x247: JUMPDEST 
0x248: V166 = 0x24f
0x24b: V167 = 0x8d5
0x24e: JUMP 0x8d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x24f]
Exit stack: [V10, 0x24f]

================================

Block 0x24f
[0x24f:0x26a]
---
Predecessors: [0x8d5]
Successors: []
---
0x24f JUMPDEST
0x250 PUSH1 0x40
0x252 MLOAD
0x253 DUP1
0x254 DUP3
0x255 PUSH1 0xff
0x257 AND
0x258 PUSH1 0xff
0x25a AND
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP2
0x261 POP
0x262 POP
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 SWAP2
0x268 SUB
0x269 SWAP1
0x26a RETURN
---
0x24f: JUMPDEST 
0x250: V168 = 0x40
0x252: V169 = M[0x40]
0x255: V170 = 0xff
0x257: V171 = AND 0xff 0x12
0x258: V172 = 0xff
0x25a: V173 = AND 0xff 0x12
0x25c: M[V169] = 0x12
0x25d: V174 = 0x20
0x25f: V175 = ADD 0x20 V169
0x263: V176 = 0x40
0x265: V177 = M[0x40]
0x268: V178 = SUB V175 V177
0x26a: RETURN V177 V178
---
Entry stack: [V10, 0x24f, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x24f]

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x6b]
Successors: [0x272, 0x276]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V179 = CALLVALUE
0x26d: V180 = ISZERO V179
0x26e: V181 = 0x276
0x271: JUMPI 0x276 V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26b]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V182 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x276
[0x276:0x2a1]
---
Predecessors: [0x26b]
Successors: [0x8da]
---
0x276 JUMPDEST
0x277 PUSH2 0x2a2
0x27a PUSH1 0x4
0x27c DUP1
0x27d DUP1
0x27e CALLDATALOAD
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 SWAP1
0x296 PUSH1 0x20
0x298 ADD
0x299 SWAP1
0x29a SWAP2
0x29b SWAP1
0x29c POP
0x29d POP
0x29e PUSH2 0x8da
0x2a1 JUMP
---
0x276: JUMPDEST 
0x277: V183 = 0x2a2
0x27a: V184 = 0x4
0x27e: V185 = CALLDATALOAD 0x4
0x27f: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x296: V188 = 0x20
0x298: V189 = ADD 0x20 0x4
0x29e: V190 = 0x8da
0x2a1: JUMP 0x8da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a2, V187]
Exit stack: [V10, 0x2a2, V187]

================================

Block 0x2a2
[0x2a2:0x2b7]
---
Predecessors: [0x8da]
Successors: []
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP1
0x2a7 DUP3
0x2a8 DUP2
0x2a9 MSTORE
0x2aa PUSH1 0x20
0x2ac ADD
0x2ad SWAP2
0x2ae POP
0x2af POP
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 DUP1
0x2b4 SWAP2
0x2b5 SUB
0x2b6 SWAP1
0x2b7 RETURN
---
0x2a2: JUMPDEST 
0x2a3: V191 = 0x40
0x2a5: V192 = M[0x40]
0x2a9: M[V192] = V540
0x2aa: V193 = 0x20
0x2ac: V194 = ADD 0x20 V192
0x2b0: V195 = 0x40
0x2b2: V196 = M[0x40]
0x2b5: V197 = SUB V194 V196
0x2b7: RETURN V196 V197
---
Entry stack: [V10, V540]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b8
[0x2b8:0x2be]
---
Predecessors: [0x76]
Successors: [0x2bf, 0x2c3]
---
0x2b8 JUMPDEST
0x2b9 CALLVALUE
0x2ba ISZERO
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V198 = CALLVALUE
0x2ba: V199 = ISZERO V198
0x2bb: V200 = 0x2c3
0x2be: JUMPI 0x2c3 V199
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2b8]
Successors: []
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
---
0x2bf: V201 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c3
[0x2c3:0x2ca]
---
Predecessors: [0x2b8]
Successors: [0x923]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0x2cb
0x2c7 PUSH2 0x923
0x2ca JUMP
---
0x2c3: JUMPDEST 
0x2c4: V202 = 0x2cb
0x2c7: V203 = 0x923
0x2ca: JUMP 0x923
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2cb]
Exit stack: [V10, 0x2cb]

================================

Block 0x2cb
[0x2cb:0x30c]
---
Predecessors: [0x923]
Successors: []
---
0x2cb JUMPDEST
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 DUP3
0x2d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e6 AND
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd DUP2
0x2fe MSTORE
0x2ff PUSH1 0x20
0x301 ADD
0x302 SWAP2
0x303 POP
0x304 POP
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 SWAP2
0x30a SUB
0x30b SWAP1
0x30c RETURN
---
0x2cb: JUMPDEST 
0x2cc: V204 = 0x40
0x2ce: V205 = M[0x40]
0x2d1: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x2e7: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x2fe: M[V205] = V209
0x2ff: V210 = 0x20
0x301: V211 = ADD 0x20 V205
0x305: V212 = 0x40
0x307: V213 = M[0x40]
0x30a: V214 = SUB V211 V213
0x30c: RETURN V213 V214
---
Entry stack: [V10, 0x2cb, V548]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2cb]

================================

Block 0x30d
[0x30d:0x313]
---
Predecessors: [0x81]
Successors: [0x314, 0x318]
---
0x30d JUMPDEST
0x30e CALLVALUE
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x30d: JUMPDEST 
0x30e: V215 = CALLVALUE
0x30f: V216 = ISZERO V215
0x310: V217 = 0x318
0x313: JUMPI 0x318 V216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x30d]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V218 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x318
[0x318:0x31f]
---
Predecessors: [0x30d]
Successors: [0x949]
---
0x318 JUMPDEST
0x319 PUSH2 0x320
0x31c PUSH2 0x949
0x31f JUMP
---
0x318: JUMPDEST 
0x319: V219 = 0x320
0x31c: V220 = 0x949
0x31f: JUMP 0x949
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x320]
Exit stack: [V10, 0x320]

================================

Block 0x320
[0x320:0x344]
---
Predecessors: [0x949]
Successors: [0x345]
---
0x320 JUMPDEST
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP1
0x326 PUSH1 0x20
0x328 ADD
0x329 DUP3
0x32a DUP2
0x32b SUB
0x32c DUP3
0x32d MSTORE
0x32e DUP4
0x32f DUP2
0x330 DUP2
0x331 MLOAD
0x332 DUP2
0x333 MSTORE
0x334 PUSH1 0x20
0x336 ADD
0x337 SWAP2
0x338 POP
0x339 DUP1
0x33a MLOAD
0x33b SWAP1
0x33c PUSH1 0x20
0x33e ADD
0x33f SWAP1
0x340 DUP1
0x341 DUP4
0x342 DUP4
0x343 PUSH1 0x0
---
0x320: JUMPDEST 
0x321: V221 = 0x40
0x323: V222 = M[0x40]
0x326: V223 = 0x20
0x328: V224 = ADD 0x20 V222
0x32b: V225 = SUB V224 V222
0x32d: M[V222] = V225
0x331: V226 = M[V550]
0x333: M[V224] = V226
0x334: V227 = 0x20
0x336: V228 = ADD 0x20 V224
0x33a: V229 = M[V550]
0x33c: V230 = 0x20
0x33e: V231 = ADD 0x20 V550
0x343: V232 = 0x0
---
Entry stack: [V10, 0x320, V550]
Stack pops: 1
Stack additions: [S0, V222, V222, V228, V231, V229, V229, V228, V231, 0x0]
Exit stack: [V10, 0x320, V550, V222, V222, V228, V231, V229, V229, V228, V231, 0x0]

================================

Block 0x345
[0x345:0x34d]
---
Predecessors: [0x320, 0x34e]
Successors: [0x34e, 0x360]
---
0x345 JUMPDEST
0x346 DUP4
0x347 DUP2
0x348 LT
0x349 ISZERO
0x34a PUSH2 0x360
0x34d JUMPI
---
0x345: JUMPDEST 
0x348: V233 = LT S0 V229
0x349: V234 = ISZERO V233
0x34a: V235 = 0x360
0x34d: JUMPI 0x360 V234
---
Entry stack: [V10, 0x320, V550, V222, V222, V228, V231, V229, V229, V228, V231, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x320, V550, V222, V222, V228, V231, V229, V229, V228, V231, S0]

================================

Block 0x34e
[0x34e:0x35f]
---
Predecessors: [0x345]
Successors: [0x345]
---
0x34e DUP1
0x34f DUP3
0x350 ADD
0x351 MLOAD
0x352 DUP2
0x353 DUP5
0x354 ADD
0x355 MSTORE
0x356 PUSH1 0x20
0x358 DUP2
0x359 ADD
0x35a SWAP1
0x35b POP
0x35c PUSH2 0x345
0x35f JUMP
---
0x350: V236 = ADD V231 S0
0x351: V237 = M[V236]
0x354: V238 = ADD V228 S0
0x355: M[V238] = V237
0x356: V239 = 0x20
0x359: V240 = ADD S0 0x20
0x35c: V241 = 0x345
0x35f: JUMP 0x345
---
Entry stack: [V10, 0x320, V550, V222, V222, V228, V231, V229, V229, V228, V231, S0]
Stack pops: 3
Stack additions: [S2, S1, V240]
Exit stack: [V10, 0x320, V550, V222, V222, V228, V231, V229, V229, V228, V231, V240]

================================

Block 0x360
[0x360:0x373]
---
Predecessors: [0x345]
Successors: [0x374, 0x38d]
---
0x360 JUMPDEST
0x361 POP
0x362 POP
0x363 POP
0x364 POP
0x365 SWAP1
0x366 POP
0x367 SWAP1
0x368 DUP2
0x369 ADD
0x36a SWAP1
0x36b PUSH1 0x1f
0x36d AND
0x36e DUP1
0x36f ISZERO
0x370 PUSH2 0x38d
0x373 JUMPI
---
0x360: JUMPDEST 
0x369: V242 = ADD V229 V228
0x36b: V243 = 0x1f
0x36d: V244 = AND 0x1f V229
0x36f: V245 = ISZERO V244
0x370: V246 = 0x38d
0x373: JUMPI 0x38d V245
---
Entry stack: [V10, 0x320, V550, V222, V222, V228, V231, V229, V229, V228, V231, S0]
Stack pops: 7
Stack additions: [V242, V244]
Exit stack: [V10, 0x320, V550, V222, V222, V242, V244]

================================

Block 0x374
[0x374:0x38c]
---
Predecessors: [0x360]
Successors: [0x38d]
---
0x374 DUP1
0x375 DUP3
0x376 SUB
0x377 DUP1
0x378 MLOAD
0x379 PUSH1 0x1
0x37b DUP4
0x37c PUSH1 0x20
0x37e SUB
0x37f PUSH2 0x100
0x382 EXP
0x383 SUB
0x384 NOT
0x385 AND
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x20
0x38a ADD
0x38b SWAP2
0x38c POP
---
0x376: V247 = SUB V242 V244
0x378: V248 = M[V247]
0x379: V249 = 0x1
0x37c: V250 = 0x20
0x37e: V251 = SUB 0x20 V244
0x37f: V252 = 0x100
0x382: V253 = EXP 0x100 V251
0x383: V254 = SUB V253 0x1
0x384: V255 = NOT V254
0x385: V256 = AND V255 V248
0x387: M[V247] = V256
0x388: V257 = 0x20
0x38a: V258 = ADD 0x20 V247
---
Entry stack: [V10, 0x320, V550, V222, V222, V242, V244]
Stack pops: 2
Stack additions: [V258, S0]
Exit stack: [V10, 0x320, V550, V222, V222, V258, V244]

================================

Block 0x38d
[0x38d:0x39a]
---
Predecessors: [0x360, 0x374]
Successors: []
---
0x38d JUMPDEST
0x38e POP
0x38f SWAP3
0x390 POP
0x391 POP
0x392 POP
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a RETURN
---
0x38d: JUMPDEST 
0x393: V259 = 0x40
0x395: V260 = M[0x40]
0x398: V261 = SUB S1 V260
0x39a: RETURN V260 V261
---
Entry stack: [V10, 0x320, V550, V222, V222, S1, V244]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x320]

================================

Block 0x39b
[0x39b:0x3a1]
---
Predecessors: [0x8c]
Successors: [0x3a2, 0x3a6]
---
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V262 = CALLVALUE
0x39d: V263 = ISZERO V262
0x39e: V264 = 0x3a6
0x3a1: JUMPI 0x3a6 V263
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39b]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V265 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a6
[0x3a6:0x3da]
---
Predecessors: [0x39b]
Successors: [0x982]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x3db
0x3aa PUSH1 0x4
0x3ac DUP1
0x3ad DUP1
0x3ae CALLDATALOAD
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 SWAP1
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP1
0x3ca SWAP2
0x3cb SWAP1
0x3cc DUP1
0x3cd CALLDATALOAD
0x3ce SWAP1
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 SWAP1
0x3d3 SWAP2
0x3d4 SWAP1
0x3d5 POP
0x3d6 POP
0x3d7 PUSH2 0x982
0x3da JUMP
---
0x3a6: JUMPDEST 
0x3a7: V266 = 0x3db
0x3aa: V267 = 0x4
0x3ae: V268 = CALLDATALOAD 0x4
0x3af: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x3c6: V271 = 0x20
0x3c8: V272 = ADD 0x20 0x4
0x3cd: V273 = CALLDATALOAD 0x24
0x3cf: V274 = 0x20
0x3d1: V275 = ADD 0x20 0x24
0x3d7: V276 = 0x982
0x3da: JUMP 0x982
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3db, V270, V273]
Exit stack: [V10, 0x3db, V270, V273]

================================

Block 0x3db
[0x3db:0x3f4]
---
Predecessors: [0xb70]
Successors: []
---
0x3db JUMPDEST
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df DUP1
0x3e0 DUP3
0x3e1 ISZERO
0x3e2 ISZERO
0x3e3 ISZERO
0x3e4 ISZERO
0x3e5 DUP2
0x3e6 MSTORE
0x3e7 PUSH1 0x20
0x3e9 ADD
0x3ea SWAP2
0x3eb POP
0x3ec POP
0x3ed PUSH1 0x40
0x3ef MLOAD
0x3f0 DUP1
0x3f1 SWAP2
0x3f2 SUB
0x3f3 SWAP1
0x3f4 RETURN
---
0x3db: JUMPDEST 
0x3dc: V277 = 0x40
0x3de: V278 = M[0x40]
0x3e1: V279 = ISZERO {0x0, 0x1}
0x3e2: V280 = ISZERO V279
0x3e3: V281 = ISZERO V280
0x3e4: V282 = ISZERO V281
0x3e6: M[V278] = V282
0x3e7: V283 = 0x20
0x3e9: V284 = ADD 0x20 V278
0x3ed: V285 = 0x40
0x3ef: V286 = M[0x40]
0x3f2: V287 = SUB V284 V286
0x3f4: RETURN V286 V287
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f5
[0x3f5:0x3fb]
---
Predecessors: [0x97]
Successors: [0x3fc, 0x400]
---
0x3f5 JUMPDEST
0x3f6 CALLVALUE
0x3f7 ISZERO
0x3f8 PUSH2 0x400
0x3fb JUMPI
---
0x3f5: JUMPDEST 
0x3f6: V288 = CALLVALUE
0x3f7: V289 = ISZERO V288
0x3f8: V290 = 0x400
0x3fb: JUMPI 0x400 V289
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fc
[0x3fc:0x3ff]
---
Predecessors: [0x3f5]
Successors: []
---
0x3fc PUSH1 0x0
0x3fe DUP1
0x3ff REVERT
---
0x3fc: V291 = 0x0
0x3ff: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x400
[0x400:0x42b]
---
Predecessors: [0x3f5]
Successors: [0xb76]
---
0x400 JUMPDEST
0x401 PUSH2 0x42c
0x404 PUSH1 0x4
0x406 DUP1
0x407 DUP1
0x408 CALLDATALOAD
0x409 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41e AND
0x41f SWAP1
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP1
0x424 SWAP2
0x425 SWAP1
0x426 POP
0x427 POP
0x428 PUSH2 0xb76
0x42b JUMP
---
0x400: JUMPDEST 
0x401: V292 = 0x42c
0x404: V293 = 0x4
0x408: V294 = CALLDATALOAD 0x4
0x409: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x41e: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x420: V297 = 0x20
0x422: V298 = ADD 0x20 0x4
0x428: V299 = 0xb76
0x42b: JUMP 0xb76
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x42c, V296]
Exit stack: [V10, 0x42c, V296]

================================

Block 0x42c
[0x42c:0x42d]
---
Predecessors: [0xbd2]
Successors: []
---
0x42c JUMPDEST
0x42d STOP
---
0x42c: JUMPDEST 
0x42d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42e
[0x42e:0x434]
---
Predecessors: [0xa2]
Successors: [0x435, 0x439]
---
0x42e JUMPDEST
0x42f CALLVALUE
0x430 ISZERO
0x431 PUSH2 0x439
0x434 JUMPI
---
0x42e: JUMPDEST 
0x42f: V300 = CALLVALUE
0x430: V301 = ISZERO V300
0x431: V302 = 0x439
0x434: JUMPI 0x439 V301
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x435
[0x435:0x438]
---
Predecessors: [0x42e]
Successors: []
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
---
0x435: V303 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x439
[0x439:0x483]
---
Predecessors: [0x42e]
Successors: [0xc83]
---
0x439 JUMPDEST
0x43a PUSH2 0x484
0x43d PUSH1 0x4
0x43f DUP1
0x440 DUP1
0x441 CALLDATALOAD
0x442 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x457 AND
0x458 SWAP1
0x459 PUSH1 0x20
0x45b ADD
0x45c SWAP1
0x45d SWAP2
0x45e SWAP1
0x45f DUP1
0x460 CALLDATALOAD
0x461 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x476 AND
0x477 SWAP1
0x478 PUSH1 0x20
0x47a ADD
0x47b SWAP1
0x47c SWAP2
0x47d SWAP1
0x47e POP
0x47f POP
0x480 PUSH2 0xc83
0x483 JUMP
---
0x439: JUMPDEST 
0x43a: V304 = 0x484
0x43d: V305 = 0x4
0x441: V306 = CALLDATALOAD 0x4
0x442: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x457: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x459: V309 = 0x20
0x45b: V310 = ADD 0x20 0x4
0x460: V311 = CALLDATALOAD 0x24
0x461: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x476: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x478: V314 = 0x20
0x47a: V315 = ADD 0x20 0x24
0x480: V316 = 0xc83
0x483: JUMP 0xc83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x484, V308, V313]
Exit stack: [V10, 0x484, V308, V313]

================================

Block 0x484
[0x484:0x499]
---
Predecessors: [0xc83]
Successors: []
---
0x484 JUMPDEST
0x485 PUSH1 0x40
0x487 MLOAD
0x488 DUP1
0x489 DUP3
0x48a DUP2
0x48b MSTORE
0x48c PUSH1 0x20
0x48e ADD
0x48f SWAP2
0x490 POP
0x491 POP
0x492 PUSH1 0x40
0x494 MLOAD
0x495 DUP1
0x496 SWAP2
0x497 SUB
0x498 SWAP1
0x499 RETURN
---
0x484: JUMPDEST 
0x485: V317 = 0x40
0x487: V318 = M[0x40]
0x48b: M[V318] = V732
0x48c: V319 = 0x20
0x48e: V320 = ADD 0x20 V318
0x492: V321 = 0x40
0x494: V322 = M[0x40]
0x497: V323 = SUB V320 V322
0x499: RETURN V322 V323
---
Entry stack: [V10, V732]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x49a
[0x49a:0x4d2]
---
Predecessors: [0xbd]
Successors: [0xc5]
---
0x49a JUMPDEST
0x49b PUSH1 0x40
0x49d DUP1
0x49e MLOAD
0x49f SWAP1
0x4a0 DUP2
0x4a1 ADD
0x4a2 PUSH1 0x40
0x4a4 MSTORE
0x4a5 DUP1
0x4a6 PUSH1 0xc
0x4a8 DUP2
0x4a9 MSTORE
0x4aa PUSH1 0x20
0x4ac ADD
0x4ad PUSH32 0x4261696c657920546f6b656e0000000000000000000000000000000000000000
0x4ce DUP2
0x4cf MSTORE
0x4d0 POP
0x4d1 DUP2
0x4d2 JUMP
---
0x49a: JUMPDEST 
0x49b: V324 = 0x40
0x49e: V325 = M[0x40]
0x4a1: V326 = ADD V325 0x40
0x4a2: V327 = 0x40
0x4a4: M[0x40] = V326
0x4a6: V328 = 0xc
0x4a9: M[V325] = 0xc
0x4aa: V329 = 0x20
0x4ac: V330 = ADD 0x20 V325
0x4ad: V331 = 0x4261696c657920546f6b656e0000000000000000000000000000000000000000
0x4cf: M[V330] = 0x4261696c657920546f6b656e0000000000000000000000000000000000000000
0x4d2: JUMP 0xc5
---
Entry stack: [V10, 0xc5]
Stack pops: 1
Stack additions: [S0, V325]
Exit stack: [V10, 0xc5, V325]

================================

Block 0x4d3
[0x4d3:0x5c4]
---
Predecessors: [0x14b]
Successors: [0x180]
---
0x4d3 JUMPDEST
0x4d4 PUSH1 0x0
0x4d6 DUP2
0x4d7 PUSH1 0x3
0x4d9 PUSH1 0x0
0x4db CALLER
0x4dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f1 AND
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 AND
0x508 DUP2
0x509 MSTORE
0x50a PUSH1 0x20
0x50c ADD
0x50d SWAP1
0x50e DUP2
0x50f MSTORE
0x510 PUSH1 0x20
0x512 ADD
0x513 PUSH1 0x0
0x515 SHA3
0x516 PUSH1 0x0
0x518 DUP6
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x544 AND
0x545 DUP2
0x546 MSTORE
0x547 PUSH1 0x20
0x549 ADD
0x54a SWAP1
0x54b DUP2
0x54c MSTORE
0x54d PUSH1 0x20
0x54f ADD
0x550 PUSH1 0x0
0x552 SHA3
0x553 DUP2
0x554 SWAP1
0x555 SSTORE
0x556 POP
0x557 DUP3
0x558 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56d AND
0x56e CALLER
0x56f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x584 AND
0x585 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5a6 DUP5
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa DUP1
0x5ab DUP3
0x5ac DUP2
0x5ad MSTORE
0x5ae PUSH1 0x20
0x5b0 ADD
0x5b1 SWAP2
0x5b2 POP
0x5b3 POP
0x5b4 PUSH1 0x40
0x5b6 MLOAD
0x5b7 DUP1
0x5b8 SWAP2
0x5b9 SUB
0x5ba SWAP1
0x5bb LOG3
0x5bc PUSH1 0x1
0x5be SWAP1
0x5bf POP
0x5c0 SWAP3
0x5c1 SWAP2
0x5c2 POP
0x5c3 POP
0x5c4 JUMP
---
0x4d3: JUMPDEST 
0x4d4: V332 = 0x0
0x4d7: V333 = 0x3
0x4d9: V334 = 0x0
0x4db: V335 = CALLER
0x4dc: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x4f2: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x509: M[0x0] = V339
0x50a: V340 = 0x20
0x50c: V341 = ADD 0x20 0x0
0x50f: M[0x20] = 0x3
0x510: V342 = 0x20
0x512: V343 = ADD 0x20 0x20
0x513: V344 = 0x0
0x515: V345 = SHA3 0x0 0x40
0x516: V346 = 0x0
0x519: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x52f: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x544: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x546: M[0x0] = V350
0x547: V351 = 0x20
0x549: V352 = ADD 0x20 0x0
0x54c: M[0x20] = V345
0x54d: V353 = 0x20
0x54f: V354 = ADD 0x20 0x20
0x550: V355 = 0x0
0x552: V356 = SHA3 0x0 0x40
0x555: S[V356] = V103
0x558: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x56e: V359 = CALLER
0x56f: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x584: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x585: V362 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5a7: V363 = 0x40
0x5a9: V364 = M[0x40]
0x5ad: M[V364] = V103
0x5ae: V365 = 0x20
0x5b0: V366 = ADD 0x20 V364
0x5b4: V367 = 0x40
0x5b6: V368 = M[0x40]
0x5b9: V369 = SUB V366 V368
0x5bb: LOG V368 V369 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V361 V358
0x5bc: V370 = 0x1
0x5c4: JUMP 0x180
---
Entry stack: [V10, 0x180, V100, V103]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x5c5
[0x5c5:0x5cd]
---
Predecessors: [0x1a5]
Successors: [0x1ad]
---
0x5c5 JUMPDEST
0x5c6 PUSH1 0x0
0x5c8 DUP1
0x5c9 SLOAD
0x5ca SWAP1
0x5cb POP
0x5cc SWAP1
0x5cd JUMP
---
0x5c5: JUMPDEST 
0x5c6: V371 = 0x0
0x5c9: V372 = S[0x0]
0x5cd: JUMP 0x1ad
---
Entry stack: [V10, 0x1ad]
Stack pops: 1
Stack additions: [V372]
Exit stack: [V10, V372]

================================

Block 0x5ce
[0x5ce:0x619]
---
Predecessors: [0x1ce]
Successors: [0x61a, 0x69b]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x0
0x5d1 DUP2
0x5d2 PUSH1 0x2
0x5d4 PUSH1 0x0
0x5d6 DUP7
0x5d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ec AND
0x5ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x602 AND
0x603 DUP2
0x604 MSTORE
0x605 PUSH1 0x20
0x607 ADD
0x608 SWAP1
0x609 DUP2
0x60a MSTORE
0x60b PUSH1 0x20
0x60d ADD
0x60e PUSH1 0x0
0x610 SHA3
0x611 SLOAD
0x612 LT
0x613 ISZERO
0x614 DUP1
0x615 ISZERO
0x616 PUSH2 0x69b
0x619 JUMPI
---
0x5ce: JUMPDEST 
0x5cf: V373 = 0x0
0x5d2: V374 = 0x2
0x5d4: V375 = 0x0
0x5d7: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x5ed: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x602: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x604: M[0x0] = V379
0x605: V380 = 0x20
0x607: V381 = ADD 0x20 0x0
0x60a: M[0x20] = 0x2
0x60b: V382 = 0x20
0x60d: V383 = ADD 0x20 0x20
0x60e: V384 = 0x0
0x610: V385 = SHA3 0x0 0x40
0x611: V386 = S[V385]
0x612: V387 = LT V386 V147
0x613: V388 = ISZERO V387
0x615: V389 = ISZERO V388
0x616: V390 = 0x69b
0x619: JUMPI 0x69b V389
---
Entry stack: [V10, 0x222, V139, V144, V147]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V388]
Exit stack: [V10, 0x222, V139, V144, V147, 0x0, V388]

================================

Block 0x61a
[0x61a:0x69a]
---
Predecessors: [0x5ce]
Successors: [0x69b]
---
0x61a POP
0x61b DUP2
0x61c PUSH1 0x3
0x61e PUSH1 0x0
0x620 DUP7
0x621 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x636 AND
0x637 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64c AND
0x64d DUP2
0x64e MSTORE
0x64f PUSH1 0x20
0x651 ADD
0x652 SWAP1
0x653 DUP2
0x654 MSTORE
0x655 PUSH1 0x20
0x657 ADD
0x658 PUSH1 0x0
0x65a SHA3
0x65b PUSH1 0x0
0x65d CALLER
0x65e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x673 AND
0x674 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x689 AND
0x68a DUP2
0x68b MSTORE
0x68c PUSH1 0x20
0x68e ADD
0x68f SWAP1
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x20
0x694 ADD
0x695 PUSH1 0x0
0x697 SHA3
0x698 SLOAD
0x699 LT
0x69a ISZERO
---
0x61c: V391 = 0x3
0x61e: V392 = 0x0
0x621: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x636: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x637: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x64c: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x64e: M[0x0] = V396
0x64f: V397 = 0x20
0x651: V398 = ADD 0x20 0x0
0x654: M[0x20] = 0x3
0x655: V399 = 0x20
0x657: V400 = ADD 0x20 0x20
0x658: V401 = 0x0
0x65a: V402 = SHA3 0x0 0x40
0x65b: V403 = 0x0
0x65d: V404 = CALLER
0x65e: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x673: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x674: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x689: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x68b: M[0x0] = V408
0x68c: V409 = 0x20
0x68e: V410 = ADD 0x20 0x0
0x691: M[0x20] = V402
0x692: V411 = 0x20
0x694: V412 = ADD 0x20 0x20
0x695: V413 = 0x0
0x697: V414 = SHA3 0x0 0x40
0x698: V415 = S[V414]
0x699: V416 = LT V415 V147
0x69a: V417 = ISZERO V416
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0, V388]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V417]
Exit stack: [V10, 0x222, V139, V144, V147, 0x0, V417]

================================

Block 0x69b
[0x69b:0x6a1]
---
Predecessors: [0x5ce, 0x61a]
Successors: [0x6a2, 0x6a7]
---
0x69b JUMPDEST
0x69c DUP1
0x69d ISZERO
0x69e PUSH2 0x6a7
0x6a1 JUMPI
---
0x69b: JUMPDEST 
0x69d: V418 = ISZERO S0
0x69e: V419 = 0x6a7
0x6a1: JUMPI 0x6a7 V418
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x222, V139, V144, V147, 0x0, S0]

================================

Block 0x6a2
[0x6a2:0x6a6]
---
Predecessors: [0x69b]
Successors: [0x6a7]
---
0x6a2 POP
0x6a3 PUSH1 0x0
0x6a5 DUP3
0x6a6 GT
---
0x6a3: V420 = 0x0
0x6a6: V421 = GT V147 0x0
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V421]
Exit stack: [V10, 0x222, V139, V144, V147, 0x0, V421]

================================

Block 0x6a7
[0x6a7:0x6ad]
---
Predecessors: [0x69b, 0x6a2]
Successors: [0x6ae, 0x732]
---
0x6a7 JUMPDEST
0x6a8 DUP1
0x6a9 ISZERO
0x6aa PUSH2 0x732
0x6ad JUMPI
---
0x6a7: JUMPDEST 
0x6a9: V422 = ISZERO S0
0x6aa: V423 = 0x732
0x6ad: JUMPI 0x732 V422
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x222, V139, V144, V147, 0x0, S0]

================================

Block 0x6ae
[0x6ae:0x731]
---
Predecessors: [0x6a7]
Successors: [0x732]
---
0x6ae POP
0x6af PUSH1 0x2
0x6b1 PUSH1 0x0
0x6b3 DUP5
0x6b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c9 AND
0x6ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6df AND
0x6e0 DUP2
0x6e1 MSTORE
0x6e2 PUSH1 0x20
0x6e4 ADD
0x6e5 SWAP1
0x6e6 DUP2
0x6e7 MSTORE
0x6e8 PUSH1 0x20
0x6ea ADD
0x6eb PUSH1 0x0
0x6ed SHA3
0x6ee SLOAD
0x6ef DUP3
0x6f0 PUSH1 0x2
0x6f2 PUSH1 0x0
0x6f4 DUP7
0x6f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70a AND
0x70b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x720 AND
0x721 DUP2
0x722 MSTORE
0x723 PUSH1 0x20
0x725 ADD
0x726 SWAP1
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c PUSH1 0x0
0x72e SHA3
0x72f SLOAD
0x730 ADD
0x731 GT
---
0x6af: V424 = 0x2
0x6b1: V425 = 0x0
0x6b4: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x6ca: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x6e1: M[0x0] = V429
0x6e2: V430 = 0x20
0x6e4: V431 = ADD 0x20 0x0
0x6e7: M[0x20] = 0x2
0x6e8: V432 = 0x20
0x6ea: V433 = ADD 0x20 0x20
0x6eb: V434 = 0x0
0x6ed: V435 = SHA3 0x0 0x40
0x6ee: V436 = S[V435]
0x6f0: V437 = 0x2
0x6f2: V438 = 0x0
0x6f5: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x70a: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x70b: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x720: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x722: M[0x0] = V442
0x723: V443 = 0x20
0x725: V444 = ADD 0x20 0x0
0x728: M[0x20] = 0x2
0x729: V445 = 0x20
0x72b: V446 = ADD 0x20 0x20
0x72c: V447 = 0x0
0x72e: V448 = SHA3 0x0 0x40
0x72f: V449 = S[V448]
0x730: V450 = ADD V449 V147
0x731: V451 = GT V450 V436
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V451]
Exit stack: [V10, 0x222, V139, V144, V147, 0x0, V451]

================================

Block 0x732
[0x732:0x737]
---
Predecessors: [0x6a7, 0x6ae]
Successors: [0x738, 0x8c9]
---
0x732 JUMPDEST
0x733 ISZERO
0x734 PUSH2 0x8c9
0x737 JUMPI
---
0x732: JUMPDEST 
0x733: V452 = ISZERO S0
0x734: V453 = 0x8c9
0x737: JUMPI 0x8c9 V452
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x222, V139, V144, V147, 0x0]

================================

Block 0x738
[0x738:0x8c8]
---
Predecessors: [0x732]
Successors: [0x8ce]
---
0x738 DUP2
0x739 PUSH1 0x2
0x73b PUSH1 0x0
0x73d DUP7
0x73e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x753 AND
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a DUP2
0x76b MSTORE
0x76c PUSH1 0x20
0x76e ADD
0x76f SWAP1
0x770 DUP2
0x771 MSTORE
0x772 PUSH1 0x20
0x774 ADD
0x775 PUSH1 0x0
0x777 SHA3
0x778 PUSH1 0x0
0x77a DUP3
0x77b DUP3
0x77c SLOAD
0x77d SUB
0x77e SWAP3
0x77f POP
0x780 POP
0x781 DUP2
0x782 SWAP1
0x783 SSTORE
0x784 POP
0x785 DUP2
0x786 PUSH1 0x3
0x788 PUSH1 0x0
0x78a DUP7
0x78b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a0 AND
0x7a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b6 AND
0x7b7 DUP2
0x7b8 MSTORE
0x7b9 PUSH1 0x20
0x7bb ADD
0x7bc SWAP1
0x7bd DUP2
0x7be MSTORE
0x7bf PUSH1 0x20
0x7c1 ADD
0x7c2 PUSH1 0x0
0x7c4 SHA3
0x7c5 PUSH1 0x0
0x7c7 CALLER
0x7c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dd AND
0x7de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f3 AND
0x7f4 DUP2
0x7f5 MSTORE
0x7f6 PUSH1 0x20
0x7f8 ADD
0x7f9 SWAP1
0x7fa DUP2
0x7fb MSTORE
0x7fc PUSH1 0x20
0x7fe ADD
0x7ff PUSH1 0x0
0x801 SHA3
0x802 PUSH1 0x0
0x804 DUP3
0x805 DUP3
0x806 SLOAD
0x807 SUB
0x808 SWAP3
0x809 POP
0x80a POP
0x80b DUP2
0x80c SWAP1
0x80d SSTORE
0x80e POP
0x80f DUP2
0x810 PUSH1 0x2
0x812 PUSH1 0x0
0x814 DUP6
0x815 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82a AND
0x82b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x840 AND
0x841 DUP2
0x842 MSTORE
0x843 PUSH1 0x20
0x845 ADD
0x846 SWAP1
0x847 DUP2
0x848 MSTORE
0x849 PUSH1 0x20
0x84b ADD
0x84c PUSH1 0x0
0x84e SHA3
0x84f PUSH1 0x0
0x851 DUP3
0x852 DUP3
0x853 SLOAD
0x854 ADD
0x855 SWAP3
0x856 POP
0x857 POP
0x858 DUP2
0x859 SWAP1
0x85a SSTORE
0x85b POP
0x85c DUP3
0x85d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x872 AND
0x873 DUP5
0x874 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x889 AND
0x88a PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8ab DUP5
0x8ac PUSH1 0x40
0x8ae MLOAD
0x8af DUP1
0x8b0 DUP3
0x8b1 DUP2
0x8b2 MSTORE
0x8b3 PUSH1 0x20
0x8b5 ADD
0x8b6 SWAP2
0x8b7 POP
0x8b8 POP
0x8b9 PUSH1 0x40
0x8bb MLOAD
0x8bc DUP1
0x8bd SWAP2
0x8be SUB
0x8bf SWAP1
0x8c0 LOG3
0x8c1 PUSH1 0x1
0x8c3 SWAP1
0x8c4 POP
0x8c5 PUSH2 0x8ce
0x8c8 JUMP
---
0x739: V454 = 0x2
0x73b: V455 = 0x0
0x73e: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x753: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x754: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x76b: M[0x0] = V459
0x76c: V460 = 0x20
0x76e: V461 = ADD 0x20 0x0
0x771: M[0x20] = 0x2
0x772: V462 = 0x20
0x774: V463 = ADD 0x20 0x20
0x775: V464 = 0x0
0x777: V465 = SHA3 0x0 0x40
0x778: V466 = 0x0
0x77c: V467 = S[V465]
0x77d: V468 = SUB V467 V147
0x783: S[V465] = V468
0x786: V469 = 0x3
0x788: V470 = 0x0
0x78b: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a0: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x7a1: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x7b8: M[0x0] = V474
0x7b9: V475 = 0x20
0x7bb: V476 = ADD 0x20 0x0
0x7be: M[0x20] = 0x3
0x7bf: V477 = 0x20
0x7c1: V478 = ADD 0x20 0x20
0x7c2: V479 = 0x0
0x7c4: V480 = SHA3 0x0 0x40
0x7c5: V481 = 0x0
0x7c7: V482 = CALLER
0x7c8: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dd: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x7de: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f3: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x7f5: M[0x0] = V486
0x7f6: V487 = 0x20
0x7f8: V488 = ADD 0x20 0x0
0x7fb: M[0x20] = V480
0x7fc: V489 = 0x20
0x7fe: V490 = ADD 0x20 0x20
0x7ff: V491 = 0x0
0x801: V492 = SHA3 0x0 0x40
0x802: V493 = 0x0
0x806: V494 = S[V492]
0x807: V495 = SUB V494 V147
0x80d: S[V492] = V495
0x810: V496 = 0x2
0x812: V497 = 0x0
0x815: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x82a: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x82b: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x840: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x842: M[0x0] = V501
0x843: V502 = 0x20
0x845: V503 = ADD 0x20 0x0
0x848: M[0x20] = 0x2
0x849: V504 = 0x20
0x84b: V505 = ADD 0x20 0x20
0x84c: V506 = 0x0
0x84e: V507 = SHA3 0x0 0x40
0x84f: V508 = 0x0
0x853: V509 = S[V507]
0x854: V510 = ADD V509 V147
0x85a: S[V507] = V510
0x85d: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x872: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x874: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x889: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x88a: V515 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8ac: V516 = 0x40
0x8ae: V517 = M[0x40]
0x8b2: M[V517] = V147
0x8b3: V518 = 0x20
0x8b5: V519 = ADD 0x20 V517
0x8b9: V520 = 0x40
0x8bb: V521 = M[0x40]
0x8be: V522 = SUB V519 V521
0x8c0: LOG V521 V522 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V514 V512
0x8c1: V523 = 0x1
0x8c5: V524 = 0x8ce
0x8c8: JUMP 0x8ce
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x222, V139, V144, V147, 0x1]

================================

Block 0x8c9
[0x8c9:0x8cd]
---
Predecessors: [0x732]
Successors: [0x8ce]
---
0x8c9 JUMPDEST
0x8ca PUSH1 0x0
0x8cc SWAP1
0x8cd POP
---
0x8c9: JUMPDEST 
0x8ca: V525 = 0x0
---
Entry stack: [V10, 0x222, V139, V144, V147, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x222, V139, V144, V147, 0x0]

================================

Block 0x8ce
[0x8ce:0x8d4]
---
Predecessors: [0x738, 0x8c9]
Successors: [0x222]
---
0x8ce JUMPDEST
0x8cf SWAP4
0x8d0 SWAP3
0x8d1 POP
0x8d2 POP
0x8d3 POP
0x8d4 JUMP
---
0x8ce: JUMPDEST 
0x8d4: JUMP 0x222
---
Entry stack: [V10, 0x222, V139, V144, V147, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x8d5
[0x8d5:0x8d9]
---
Predecessors: [0x247]
Successors: [0x24f]
---
0x8d5 JUMPDEST
0x8d6 PUSH1 0x12
0x8d8 DUP2
0x8d9 JUMP
---
0x8d5: JUMPDEST 
0x8d6: V526 = 0x12
0x8d9: JUMP 0x24f
---
Entry stack: [V10, 0x24f]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x24f, 0x12]

================================

Block 0x8da
[0x8da:0x922]
---
Predecessors: [0x276]
Successors: [0x2a2]
---
0x8da JUMPDEST
0x8db PUSH1 0x0
0x8dd PUSH1 0x2
0x8df PUSH1 0x0
0x8e1 DUP4
0x8e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f7 AND
0x8f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90d AND
0x90e DUP2
0x90f MSTORE
0x910 PUSH1 0x20
0x912 ADD
0x913 SWAP1
0x914 DUP2
0x915 MSTORE
0x916 PUSH1 0x20
0x918 ADD
0x919 PUSH1 0x0
0x91b SHA3
0x91c SLOAD
0x91d SWAP1
0x91e POP
0x91f SWAP2
0x920 SWAP1
0x921 POP
0x922 JUMP
---
0x8da: JUMPDEST 
0x8db: V527 = 0x0
0x8dd: V528 = 0x2
0x8df: V529 = 0x0
0x8e2: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f7: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x8f8: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x90f: M[0x0] = V533
0x910: V534 = 0x20
0x912: V535 = ADD 0x20 0x0
0x915: M[0x20] = 0x2
0x916: V536 = 0x20
0x918: V537 = ADD 0x20 0x20
0x919: V538 = 0x0
0x91b: V539 = SHA3 0x0 0x40
0x91c: V540 = S[V539]
0x922: JUMP 0x2a2
---
Entry stack: [V10, 0x2a2, V187]
Stack pops: 2
Stack additions: [V540]
Exit stack: [V10, V540]

================================

Block 0x923
[0x923:0x948]
---
Predecessors: [0x2c3]
Successors: [0x2cb]
---
0x923 JUMPDEST
0x924 PUSH1 0x1
0x926 PUSH1 0x0
0x928 SWAP1
0x929 SLOAD
0x92a SWAP1
0x92b PUSH2 0x100
0x92e EXP
0x92f SWAP1
0x930 DIV
0x931 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x946 AND
0x947 DUP2
0x948 JUMP
---
0x923: JUMPDEST 
0x924: V541 = 0x1
0x926: V542 = 0x0
0x929: V543 = S[0x1]
0x92b: V544 = 0x100
0x92e: V545 = EXP 0x100 0x0
0x930: V546 = DIV V543 0x1
0x931: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x946: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x948: JUMP 0x2cb
---
Entry stack: [V10, 0x2cb]
Stack pops: 1
Stack additions: [S0, V548]
Exit stack: [V10, 0x2cb, V548]

================================

Block 0x949
[0x949:0x981]
---
Predecessors: [0x318]
Successors: [0x320]
---
0x949 JUMPDEST
0x94a PUSH1 0x40
0x94c DUP1
0x94d MLOAD
0x94e SWAP1
0x94f DUP2
0x950 ADD
0x951 PUSH1 0x40
0x953 MSTORE
0x954 DUP1
0x955 PUSH1 0x3
0x957 DUP2
0x958 MSTORE
0x959 PUSH1 0x20
0x95b ADD
0x95c PUSH32 0x4241590000000000000000000000000000000000000000000000000000000000
0x97d DUP2
0x97e MSTORE
0x97f POP
0x980 DUP2
0x981 JUMP
---
0x949: JUMPDEST 
0x94a: V549 = 0x40
0x94d: V550 = M[0x40]
0x950: V551 = ADD V550 0x40
0x951: V552 = 0x40
0x953: M[0x40] = V551
0x955: V553 = 0x3
0x958: M[V550] = 0x3
0x959: V554 = 0x20
0x95b: V555 = ADD 0x20 V550
0x95c: V556 = 0x4241590000000000000000000000000000000000000000000000000000000000
0x97e: M[V555] = 0x4241590000000000000000000000000000000000000000000000000000000000
0x981: JUMP 0x320
---
Entry stack: [V10, 0x320]
Stack pops: 1
Stack additions: [S0, V550]
Exit stack: [V10, 0x320, V550]

================================

Block 0x982
[0x982:0x9cd]
---
Predecessors: [0x3a6]
Successors: [0x9ce, 0x9d3]
---
0x982 JUMPDEST
0x983 PUSH1 0x0
0x985 DUP2
0x986 PUSH1 0x2
0x988 PUSH1 0x0
0x98a CALLER
0x98b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a0 AND
0x9a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b6 AND
0x9b7 DUP2
0x9b8 MSTORE
0x9b9 PUSH1 0x20
0x9bb ADD
0x9bc SWAP1
0x9bd DUP2
0x9be MSTORE
0x9bf PUSH1 0x20
0x9c1 ADD
0x9c2 PUSH1 0x0
0x9c4 SHA3
0x9c5 SLOAD
0x9c6 LT
0x9c7 ISZERO
0x9c8 DUP1
0x9c9 ISZERO
0x9ca PUSH2 0x9d3
0x9cd JUMPI
---
0x982: JUMPDEST 
0x983: V557 = 0x0
0x986: V558 = 0x2
0x988: V559 = 0x0
0x98a: V560 = CALLER
0x98b: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a0: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x9a1: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b6: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x9b8: M[0x0] = V564
0x9b9: V565 = 0x20
0x9bb: V566 = ADD 0x20 0x0
0x9be: M[0x20] = 0x2
0x9bf: V567 = 0x20
0x9c1: V568 = ADD 0x20 0x20
0x9c2: V569 = 0x0
0x9c4: V570 = SHA3 0x0 0x40
0x9c5: V571 = S[V570]
0x9c6: V572 = LT V571 V273
0x9c7: V573 = ISZERO V572
0x9c9: V574 = ISZERO V573
0x9ca: V575 = 0x9d3
0x9cd: JUMPI 0x9d3 V574
---
Entry stack: [V10, 0x3db, V270, V273]
Stack pops: 1
Stack additions: [S0, 0x0, V573]
Exit stack: [V10, 0x3db, V270, V273, 0x0, V573]

================================

Block 0x9ce
[0x9ce:0x9d2]
---
Predecessors: [0x982]
Successors: [0x9d3]
---
0x9ce POP
0x9cf PUSH1 0x0
0x9d1 DUP3
0x9d2 GT
---
0x9cf: V576 = 0x0
0x9d2: V577 = GT V273 0x0
---
Entry stack: [V10, 0x3db, V270, V273, 0x0, V573]
Stack pops: 3
Stack additions: [S2, S1, V577]
Exit stack: [V10, 0x3db, V270, V273, 0x0, V577]

================================

Block 0x9d3
[0x9d3:0x9d9]
---
Predecessors: [0x982, 0x9ce]
Successors: [0x9da, 0xa5e]
---
0x9d3 JUMPDEST
0x9d4 DUP1
0x9d5 ISZERO
0x9d6 PUSH2 0xa5e
0x9d9 JUMPI
---
0x9d3: JUMPDEST 
0x9d5: V578 = ISZERO S0
0x9d6: V579 = 0xa5e
0x9d9: JUMPI 0xa5e V578
---
Entry stack: [V10, 0x3db, V270, V273, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3db, V270, V273, 0x0, S0]

================================

Block 0x9da
[0x9da:0xa5d]
---
Predecessors: [0x9d3]
Successors: [0xa5e]
---
0x9da POP
0x9db PUSH1 0x2
0x9dd PUSH1 0x0
0x9df DUP5
0x9e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f5 AND
0x9f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0b AND
0xa0c DUP2
0xa0d MSTORE
0xa0e PUSH1 0x20
0xa10 ADD
0xa11 SWAP1
0xa12 DUP2
0xa13 MSTORE
0xa14 PUSH1 0x20
0xa16 ADD
0xa17 PUSH1 0x0
0xa19 SHA3
0xa1a SLOAD
0xa1b DUP3
0xa1c PUSH1 0x2
0xa1e PUSH1 0x0
0xa20 DUP7
0xa21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa36 AND
0xa37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4c AND
0xa4d DUP2
0xa4e MSTORE
0xa4f PUSH1 0x20
0xa51 ADD
0xa52 SWAP1
0xa53 DUP2
0xa54 MSTORE
0xa55 PUSH1 0x20
0xa57 ADD
0xa58 PUSH1 0x0
0xa5a SHA3
0xa5b SLOAD
0xa5c ADD
0xa5d GT
---
0x9db: V580 = 0x2
0x9dd: V581 = 0x0
0x9e0: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f5: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x9f6: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0b: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0xa0d: M[0x0] = V585
0xa0e: V586 = 0x20
0xa10: V587 = ADD 0x20 0x0
0xa13: M[0x20] = 0x2
0xa14: V588 = 0x20
0xa16: V589 = ADD 0x20 0x20
0xa17: V590 = 0x0
0xa19: V591 = SHA3 0x0 0x40
0xa1a: V592 = S[V591]
0xa1c: V593 = 0x2
0xa1e: V594 = 0x0
0xa21: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0xa36: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0xa37: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4c: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0xa4e: M[0x0] = V598
0xa4f: V599 = 0x20
0xa51: V600 = ADD 0x20 0x0
0xa54: M[0x20] = 0x2
0xa55: V601 = 0x20
0xa57: V602 = ADD 0x20 0x20
0xa58: V603 = 0x0
0xa5a: V604 = SHA3 0x0 0x40
0xa5b: V605 = S[V604]
0xa5c: V606 = ADD V605 V273
0xa5d: V607 = GT V606 V592
---
Entry stack: [V10, 0x3db, V270, V273, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V607]
Exit stack: [V10, 0x3db, V270, V273, 0x0, V607]

================================

Block 0xa5e
[0xa5e:0xa63]
---
Predecessors: [0x9d3, 0x9da]
Successors: [0xa64, 0xb6b]
---
0xa5e JUMPDEST
0xa5f ISZERO
0xa60 PUSH2 0xb6b
0xa63 JUMPI
---
0xa5e: JUMPDEST 
0xa5f: V608 = ISZERO S0
0xa60: V609 = 0xb6b
0xa63: JUMPI 0xb6b V608
---
Entry stack: [V10, 0x3db, V270, V273, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3db, V270, V273, 0x0]

================================

Block 0xa64
[0xa64:0xb6a]
---
Predecessors: [0xa5e]
Successors: [0xb70]
---
0xa64 DUP2
0xa65 PUSH1 0x2
0xa67 PUSH1 0x0
0xa69 CALLER
0xa6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7f AND
0xa80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa95 AND
0xa96 DUP2
0xa97 MSTORE
0xa98 PUSH1 0x20
0xa9a ADD
0xa9b SWAP1
0xa9c DUP2
0xa9d MSTORE
0xa9e PUSH1 0x20
0xaa0 ADD
0xaa1 PUSH1 0x0
0xaa3 SHA3
0xaa4 PUSH1 0x0
0xaa6 DUP3
0xaa7 DUP3
0xaa8 SLOAD
0xaa9 SUB
0xaaa SWAP3
0xaab POP
0xaac POP
0xaad DUP2
0xaae SWAP1
0xaaf SSTORE
0xab0 POP
0xab1 DUP2
0xab2 PUSH1 0x2
0xab4 PUSH1 0x0
0xab6 DUP6
0xab7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacc AND
0xacd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae2 AND
0xae3 DUP2
0xae4 MSTORE
0xae5 PUSH1 0x20
0xae7 ADD
0xae8 SWAP1
0xae9 DUP2
0xaea MSTORE
0xaeb PUSH1 0x20
0xaed ADD
0xaee PUSH1 0x0
0xaf0 SHA3
0xaf1 PUSH1 0x0
0xaf3 DUP3
0xaf4 DUP3
0xaf5 SLOAD
0xaf6 ADD
0xaf7 SWAP3
0xaf8 POP
0xaf9 POP
0xafa DUP2
0xafb SWAP1
0xafc SSTORE
0xafd POP
0xafe DUP3
0xaff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb14 AND
0xb15 CALLER
0xb16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2b AND
0xb2c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb4d DUP5
0xb4e PUSH1 0x40
0xb50 MLOAD
0xb51 DUP1
0xb52 DUP3
0xb53 DUP2
0xb54 MSTORE
0xb55 PUSH1 0x20
0xb57 ADD
0xb58 SWAP2
0xb59 POP
0xb5a POP
0xb5b PUSH1 0x40
0xb5d MLOAD
0xb5e DUP1
0xb5f SWAP2
0xb60 SUB
0xb61 SWAP1
0xb62 LOG3
0xb63 PUSH1 0x1
0xb65 SWAP1
0xb66 POP
0xb67 PUSH2 0xb70
0xb6a JUMP
---
0xa65: V610 = 0x2
0xa67: V611 = 0x0
0xa69: V612 = CALLER
0xa6a: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7f: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xa80: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xa95: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0xa97: M[0x0] = V616
0xa98: V617 = 0x20
0xa9a: V618 = ADD 0x20 0x0
0xa9d: M[0x20] = 0x2
0xa9e: V619 = 0x20
0xaa0: V620 = ADD 0x20 0x20
0xaa1: V621 = 0x0
0xaa3: V622 = SHA3 0x0 0x40
0xaa4: V623 = 0x0
0xaa8: V624 = S[V622]
0xaa9: V625 = SUB V624 V273
0xaaf: S[V622] = V625
0xab2: V626 = 0x2
0xab4: V627 = 0x0
0xab7: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0xacd: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xae2: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0xae4: M[0x0] = V631
0xae5: V632 = 0x20
0xae7: V633 = ADD 0x20 0x0
0xaea: M[0x20] = 0x2
0xaeb: V634 = 0x20
0xaed: V635 = ADD 0x20 0x20
0xaee: V636 = 0x0
0xaf0: V637 = SHA3 0x0 0x40
0xaf1: V638 = 0x0
0xaf5: V639 = S[V637]
0xaf6: V640 = ADD V639 V273
0xafc: S[V637] = V640
0xaff: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0xb14: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0xb15: V643 = CALLER
0xb16: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2b: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0xb2c: V646 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb4e: V647 = 0x40
0xb50: V648 = M[0x40]
0xb54: M[V648] = V273
0xb55: V649 = 0x20
0xb57: V650 = ADD 0x20 V648
0xb5b: V651 = 0x40
0xb5d: V652 = M[0x40]
0xb60: V653 = SUB V650 V652
0xb62: LOG V652 V653 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V645 V642
0xb63: V654 = 0x1
0xb67: V655 = 0xb70
0xb6a: JUMP 0xb70
---
Entry stack: [V10, 0x3db, V270, V273, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x3db, V270, V273, 0x1]

================================

Block 0xb6b
[0xb6b:0xb6f]
---
Predecessors: [0xa5e]
Successors: [0xb70]
---
0xb6b JUMPDEST
0xb6c PUSH1 0x0
0xb6e SWAP1
0xb6f POP
---
0xb6b: JUMPDEST 
0xb6c: V656 = 0x0
---
Entry stack: [V10, 0x3db, V270, V273, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x3db, V270, V273, 0x0]

================================

Block 0xb70
[0xb70:0xb75]
---
Predecessors: [0xa64, 0xb6b]
Successors: [0x3db]
---
0xb70 JUMPDEST
0xb71 SWAP3
0xb72 SWAP2
0xb73 POP
0xb74 POP
0xb75 JUMP
---
0xb70: JUMPDEST 
0xb75: JUMP 0x3db
---
Entry stack: [V10, 0x3db, V270, V273, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xb76
[0xb76:0xbcd]
---
Predecessors: [0x400]
Successors: [0xbce, 0xbd2]
---
0xb76 JUMPDEST
0xb77 PUSH1 0x1
0xb79 PUSH1 0x0
0xb7b SWAP1
0xb7c SLOAD
0xb7d SWAP1
0xb7e PUSH2 0x100
0xb81 EXP
0xb82 SWAP1
0xb83 DIV
0xb84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb99 AND
0xb9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbaf AND
0xbb0 CALLER
0xbb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc6 AND
0xbc7 EQ
0xbc8 ISZERO
0xbc9 ISZERO
0xbca PUSH2 0xbd2
0xbcd JUMPI
---
0xb76: JUMPDEST 
0xb77: V657 = 0x1
0xb79: V658 = 0x0
0xb7c: V659 = S[0x1]
0xb7e: V660 = 0x100
0xb81: V661 = EXP 0x100 0x0
0xb83: V662 = DIV V659 0x1
0xb84: V663 = 0xffffffffffffffffffffffffffffffffffffffff
0xb99: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0xb9a: V665 = 0xffffffffffffffffffffffffffffffffffffffff
0xbaf: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xbb0: V667 = CALLER
0xbb1: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc6: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0xbc7: V670 = EQ V669 V666
0xbc8: V671 = ISZERO V670
0xbc9: V672 = ISZERO V671
0xbca: V673 = 0xbd2
0xbcd: JUMPI 0xbd2 V672
---
Entry stack: [V10, 0x42c, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x42c, V296]

================================

Block 0xbce
[0xbce:0xbd1]
---
Predecessors: [0xb76]
Successors: []
---
0xbce PUSH1 0x0
0xbd0 DUP1
0xbd1 REVERT
---
0xbce: V674 = 0x0
0xbd1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x42c, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x42c, V296]

================================

Block 0xbd2
[0xbd2:0xc82]
---
Predecessors: [0xb76]
Successors: [0x42c]
---
0xbd2 JUMPDEST
0xbd3 PUSH10 0xd3c21bcecceda1000000
0xbde PUSH1 0x2
0xbe0 PUSH1 0x0
0xbe2 CALLER
0xbe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf8 AND
0xbf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0e AND
0xc0f DUP2
0xc10 MSTORE
0xc11 PUSH1 0x20
0xc13 ADD
0xc14 SWAP1
0xc15 DUP2
0xc16 MSTORE
0xc17 PUSH1 0x20
0xc19 ADD
0xc1a PUSH1 0x0
0xc1c SHA3
0xc1d PUSH1 0x0
0xc1f DUP3
0xc20 DUP3
0xc21 SLOAD
0xc22 SUB
0xc23 SWAP3
0xc24 POP
0xc25 POP
0xc26 DUP2
0xc27 SWAP1
0xc28 SSTORE
0xc29 POP
0xc2a PUSH10 0xd3c21bcecceda1000000
0xc35 PUSH1 0x2
0xc37 PUSH1 0x0
0xc39 DUP4
0xc3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4f AND
0xc50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc65 AND
0xc66 DUP2
0xc67 MSTORE
0xc68 PUSH1 0x20
0xc6a ADD
0xc6b SWAP1
0xc6c DUP2
0xc6d MSTORE
0xc6e PUSH1 0x20
0xc70 ADD
0xc71 PUSH1 0x0
0xc73 SHA3
0xc74 PUSH1 0x0
0xc76 DUP3
0xc77 DUP3
0xc78 SLOAD
0xc79 ADD
0xc7a SWAP3
0xc7b POP
0xc7c POP
0xc7d DUP2
0xc7e SWAP1
0xc7f SSTORE
0xc80 POP
0xc81 POP
0xc82 JUMP
---
0xbd2: JUMPDEST 
0xbd3: V675 = 0xd3c21bcecceda1000000
0xbde: V676 = 0x2
0xbe0: V677 = 0x0
0xbe2: V678 = CALLER
0xbe3: V679 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf8: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0xbf9: V681 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0e: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0xc10: M[0x0] = V682
0xc11: V683 = 0x20
0xc13: V684 = ADD 0x20 0x0
0xc16: M[0x20] = 0x2
0xc17: V685 = 0x20
0xc19: V686 = ADD 0x20 0x20
0xc1a: V687 = 0x0
0xc1c: V688 = SHA3 0x0 0x40
0xc1d: V689 = 0x0
0xc21: V690 = S[V688]
0xc22: V691 = SUB V690 0xd3c21bcecceda1000000
0xc28: S[V688] = V691
0xc2a: V692 = 0xd3c21bcecceda1000000
0xc35: V693 = 0x2
0xc37: V694 = 0x0
0xc3a: V695 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4f: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0xc50: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xc65: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xc67: M[0x0] = V698
0xc68: V699 = 0x20
0xc6a: V700 = ADD 0x20 0x0
0xc6d: M[0x20] = 0x2
0xc6e: V701 = 0x20
0xc70: V702 = ADD 0x20 0x20
0xc71: V703 = 0x0
0xc73: V704 = SHA3 0x0 0x40
0xc74: V705 = 0x0
0xc78: V706 = S[V704]
0xc79: V707 = ADD V706 0xd3c21bcecceda1000000
0xc7f: S[V704] = V707
0xc82: JUMP 0x42c
---
Entry stack: [V10, 0x42c, V296]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xc83
[0xc83:0xd09]
---
Predecessors: [0x439]
Successors: [0x484]
---
0xc83 JUMPDEST
0xc84 PUSH1 0x0
0xc86 PUSH1 0x3
0xc88 PUSH1 0x0
0xc8a DUP5
0xc8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca0 AND
0xca1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb6 AND
0xcb7 DUP2
0xcb8 MSTORE
0xcb9 PUSH1 0x20
0xcbb ADD
0xcbc SWAP1
0xcbd DUP2
0xcbe MSTORE
0xcbf PUSH1 0x20
0xcc1 ADD
0xcc2 PUSH1 0x0
0xcc4 SHA3
0xcc5 PUSH1 0x0
0xcc7 DUP4
0xcc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcdd AND
0xcde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf3 AND
0xcf4 DUP2
0xcf5 MSTORE
0xcf6 PUSH1 0x20
0xcf8 ADD
0xcf9 SWAP1
0xcfa DUP2
0xcfb MSTORE
0xcfc PUSH1 0x20
0xcfe ADD
0xcff PUSH1 0x0
0xd01 SHA3
0xd02 SLOAD
0xd03 SWAP1
0xd04 POP
0xd05 SWAP3
0xd06 SWAP2
0xd07 POP
0xd08 POP
0xd09 JUMP
---
0xc83: JUMPDEST 
0xc84: V708 = 0x0
0xc86: V709 = 0x3
0xc88: V710 = 0x0
0xc8b: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0xca0: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0xca1: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb6: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0xcb8: M[0x0] = V714
0xcb9: V715 = 0x20
0xcbb: V716 = ADD 0x20 0x0
0xcbe: M[0x20] = 0x3
0xcbf: V717 = 0x20
0xcc1: V718 = ADD 0x20 0x20
0xcc2: V719 = 0x0
0xcc4: V720 = SHA3 0x0 0x40
0xcc5: V721 = 0x0
0xcc8: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xcdd: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0xcde: V724 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf3: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V723
0xcf5: M[0x0] = V725
0xcf6: V726 = 0x20
0xcf8: V727 = ADD 0x20 0x0
0xcfb: M[0x20] = V720
0xcfc: V728 = 0x20
0xcfe: V729 = ADD 0x20 0x20
0xcff: V730 = 0x0
0xd01: V731 = SHA3 0x0 0x40
0xd02: V732 = S[V731]
0xd09: JUMP 0x484
---
Entry stack: [V10, 0x484, V308, V313]
Stack pops: 3
Stack additions: [V732]
Exit stack: [V10, V732]

================================

Block 0xd0a
[0xd0a:0xd49]
---
Predecessors: []
Successors: []
---
0xd0a STOP
0xd0b LOG1
0xd0c PUSH6 0x627a7a723058
0xd13 SHA3
0xd14 MSIZE
0xd15 STATICCALL
0xd16 DIV
0xd17 GT
0xd18 MISSING 0x5e
0xd19 BALANCE
0xd1a MISSING 0x25
0xd1b PUSH15 0x545f06719db21663b1be056651176
0xd2b PUSH2 0x56e0
0xd2e EXTCODEHASH
0xd2f MISSING 0xe5
0xd30 ADDMOD
0xd31 MISSING 0x27
0xd32 PUSH23 0xc80029
---
0xd0a: STOP 
0xd0b: LOG S0 S1 S2
0xd0c: V733 = 0x627a7a723058
0xd13: V734 = SHA3 0x627a7a723058 S3
0xd14: V735 = MSIZE
0xd15: V736 = STATICCALL V735 V734 S4 S5 S6 S7
0xd16: V737 = DIV V736 S8
0xd17: V738 = GT V737 S9
0xd18: MISSING 0x5e
0xd19: V739 = BALANCE S0
0xd1a: MISSING 0x25
0xd1b: V740 = 0x545f06719db21663b1be056651176
0xd2b: V741 = 0x56e0
0xd2e: V742 = EXTCODEHASH 0x56e0
0xd2f: MISSING 0xe5
0xd30: V743 = ADDMOD S0 S1 S2
0xd31: MISSING 0x27
0xd32: V744 = 0xc80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V738, V739, V742, 0x545f06719db21663b1be056651176, V743, 0xc80029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xb2
Exit block: 0x132
Body: 0xb2, 0xb9, 0xbd, 0xc5, 0xea, 0xf3, 0x105, 0x119, 0x132, 0x49a

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x140
Exit block: 0x180
Body: 0x140, 0x147, 0x14b, 0x180, 0x4d3

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x19a
Exit block: 0x1ad
Body: 0x19a, 0x1a1, 0x1a5, 0x1ad, 0x5c5

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1c3
Exit block: 0x222
Body: 0x1c3, 0x1ca, 0x1ce, 0x222, 0x5ce, 0x61a, 0x69b, 0x6a2, 0x6a7, 0x6ae, 0x732, 0x738, 0x8c9, 0x8ce

Function 4:
Public function signature: 0x313ce567
Entry block: 0x23c
Exit block: 0x24f
Body: 0x23c, 0x243, 0x247, 0x24f, 0x8d5

Function 5:
Public function signature: 0x70a08231
Entry block: 0x26b
Exit block: 0x2a2
Body: 0x26b, 0x272, 0x276, 0x2a2, 0x8da

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x2b8
Exit block: 0x2cb
Body: 0x2b8, 0x2bf, 0x2c3, 0x2cb, 0x923

Function 7:
Public function signature: 0x95d89b41
Entry block: 0x30d
Exit block: 0x38d
Body: 0x30d, 0x314, 0x318, 0x320, 0x345, 0x34e, 0x360, 0x374, 0x38d, 0x949

Function 8:
Public function signature: 0xa9059cbb
Entry block: 0x39b
Exit block: 0x3db
Body: 0x39b, 0x3a2, 0x3a6, 0x3db, 0x982, 0x9ce, 0x9d3, 0x9da, 0xa5e, 0xa64, 0xb6b, 0xb70

Function 9:
Public function signature: 0xcd40a48d
Entry block: 0x3f5
Exit block: 0x42c
Body: 0x3f5, 0x3fc, 0x400, 0x42c, 0xb76, 0xbce, 0xbd2

Function 10:
Public function signature: 0xdd62ed3e
Entry block: 0x42e
Exit block: 0x484
Body: 0x42e, 0x435, 0x439, 0x484, 0xc83

Function 11:
Public fallback function
Entry block: 0xad
Exit block: 0xad
Body: 0xad

