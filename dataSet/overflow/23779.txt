Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x29d368e3
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x29d368e3
0x3c: V13 = EQ 0x29d368e3 V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0x3a4b66f1
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0x3a4b66f1
0x47: V16 = EQ 0x3a4b66f1 V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xcf]
---
0x4c DUP1
0x4d PUSH4 0x3ccfd60b
0x52 EQ
0x53 PUSH2 0xcf
0x56 JUMPI
---
0x4d: V18 = 0x3ccfd60b
0x52: V19 = EQ 0x3ccfd60b V11
0x53: V20 = 0xcf
0x56: JUMPI 0xcf V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe4]
---
0x57 DUP1
0x58 PUSH4 0x4f25d6dd
0x5d EQ
0x5e PUSH2 0xe4
0x61 JUMPI
---
0x58: V21 = 0x4f25d6dd
0x5d: V22 = EQ 0x4f25d6dd V11
0x5e: V23 = 0xe4
0x61: JUMPI 0xe4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x10d]
---
0x62 DUP1
0x63 PUSH4 0xa801fd63
0x68 EQ
0x69 PUSH2 0x10d
0x6c JUMPI
---
0x63: V24 = 0xa801fd63
0x68: V25 = EQ 0xa801fd63 V11
0x69: V26 = 0x10d
0x6c: JUMPI 0x10d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x117]
---
0x6d DUP1
0x6e PUSH4 0xac4c8bf3
0x73 EQ
0x74 PUSH2 0x117
0x77 JUMPI
---
0x6e: V27 = 0xac4c8bf3
0x73: V28 = EQ 0xac4c8bf3 V11
0x74: V29 = 0x117
0x77: JUMPI 0x117 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x7d]
Successors: [0x16c]
---
0x88 JUMPDEST
0x89 PUSH2 0x90
0x8c PUSH2 0x16c
0x8f JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0x90
0x8c: V36 = 0x16c
0x8f: JUMP 0x16c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90]
Exit stack: [V11, 0x90]

================================

Block 0x90
[0x90:0xa5]
---
Predecessors: [0x16c]
Successors: []
---
0x90 JUMPDEST
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP3
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 RETURN
---
0x90: JUMPDEST 
0x91: V37 = 0x40
0x93: V38 = M[0x40]
0x97: M[V38] = V96
0x98: V39 = 0x20
0x9a: V40 = ADD 0x20 V38
0x9e: V41 = 0x40
0xa0: V42 = M[0x40]
0xa3: V43 = SUB V40 V42
0xa5: RETURN V42 V43
---
Entry stack: [V11, 0x90, V96]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V44 = CALLVALUE
0xa8: V45 = ISZERO V44
0xa9: V46 = 0xb1
0xac: JUMPI 0xb1 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V47 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0xa6]
Successors: [0x172]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xb9
0xb5 PUSH2 0x172
0xb8 JUMP
---
0xb1: JUMPDEST 
0xb2: V48 = 0xb9
0xb5: V49 = 0x172
0xb8: JUMP 0x172
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xb9
[0xb9:0xce]
---
Predecessors: [0x172]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x40
0xbc MLOAD
0xbd DUP1
0xbe DUP3
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0xb9: JUMPDEST 
0xba: V50 = 0x40
0xbc: V51 = M[0x40]
0xc0: M[V51] = V98
0xc1: V52 = 0x20
0xc3: V53 = ADD 0x20 V51
0xc7: V54 = 0x40
0xc9: V55 = M[0x40]
0xcc: V56 = SUB V53 V55
0xce: RETURN V55 V56
---
Entry stack: [V11, 0xb9, V98]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x4c]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V57 = CALLVALUE
0xd1: V58 = ISZERO V57
0xd2: V59 = 0xda
0xd5: JUMPI 0xda V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V60 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x178]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x178
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V61 = 0xe2
0xde: V62 = 0x178
0xe1: JUMP 0x178
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: [0x390]
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xea]
---
Predecessors: [0x57]
Successors: [0xeb, 0xef]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe4: JUMPDEST 
0xe5: V63 = CALLVALUE
0xe6: V64 = ISZERO V63
0xe7: V65 = 0xef
0xea: JUMPI 0xef V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe4]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V66 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf6]
---
Predecessors: [0xe4]
Successors: [0x395]
---
0xef JUMPDEST
0xf0 PUSH2 0xf7
0xf3 PUSH2 0x395
0xf6 JUMP
---
0xef: JUMPDEST 
0xf0: V67 = 0xf7
0xf3: V68 = 0x395
0xf6: JUMP 0x395
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V11, 0xf7]

================================

Block 0xf7
[0xf7:0x10c]
---
Predecessors: [0x395]
Successors: []
---
0xf7 JUMPDEST
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc DUP3
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP2
0x103 POP
0x104 POP
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 SWAP2
0x10a SUB
0x10b SWAP1
0x10c RETURN
---
0xf7: JUMPDEST 
0xf8: V69 = 0x40
0xfa: V70 = M[0x40]
0xfe: M[V70] = V222
0xff: V71 = 0x20
0x101: V72 = ADD 0x20 V70
0x105: V73 = 0x40
0x107: V74 = M[0x40]
0x10a: V75 = SUB V72 V74
0x10c: RETURN V74 V75
---
Entry stack: [V11, 0xf7, V222]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf7]

================================

Block 0x10d
[0x10d:0x114]
---
Predecessors: [0x62]
Successors: [0x39b]
---
0x10d JUMPDEST
0x10e PUSH2 0x115
0x111 PUSH2 0x39b
0x114 JUMP
---
0x10d: JUMPDEST 
0x10e: V76 = 0x115
0x111: V77 = 0x39b
0x114: JUMP 0x39b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x115
[0x115:0x116]
---
Predecessors: [0x3bb]
Successors: []
---
0x115 JUMPDEST
0x116 STOP
---
0x115: JUMPDEST 
0x116: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x6d]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V78 = CALLVALUE
0x119: V79 = ISZERO V78
0x11a: V80 = 0x122
0x11d: JUMPI 0x122 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V81 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x117]
Successors: [0x420]
---
0x122 JUMPDEST
0x123 PUSH2 0x12a
0x126 PUSH2 0x420
0x129 JUMP
---
0x122: JUMPDEST 
0x123: V82 = 0x12a
0x126: V83 = 0x420
0x129: JUMP 0x420
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V11, 0x12a]

================================

Block 0x12a
[0x12a:0x16b]
---
Predecessors: [0x420]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP3
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP2
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x12a: JUMPDEST 
0x12b: V84 = 0x40
0x12d: V85 = M[0x40]
0x130: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x146: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x15d: M[V85] = V89
0x15e: V90 = 0x20
0x160: V91 = ADD 0x20 V85
0x164: V92 = 0x40
0x166: V93 = M[0x40]
0x169: V94 = SUB V91 V93
0x16b: RETURN V93 V94
---
Entry stack: [V11, 0x12a, V271]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x12a]

================================

Block 0x16c
[0x16c:0x171]
---
Predecessors: [0x88]
Successors: [0x90]
---
0x16c JUMPDEST
0x16d PUSH1 0x0
0x16f SLOAD
0x170 DUP2
0x171 JUMP
---
0x16c: JUMPDEST 
0x16d: V95 = 0x0
0x16f: V96 = S[0x0]
0x171: JUMP 0x90
---
Entry stack: [V11, 0x90]
Stack pops: 1
Stack additions: [S0, V96]
Exit stack: [V11, 0x90, V96]

================================

Block 0x172
[0x172:0x177]
---
Predecessors: [0xb1]
Successors: [0xb9]
---
0x172 JUMPDEST
0x173 PUSH1 0x4
0x175 SLOAD
0x176 DUP2
0x177 JUMP
---
0x172: JUMPDEST 
0x173: V97 = 0x4
0x175: V98 = S[0x4]
0x177: JUMP 0xb9
---
Entry stack: [V11, 0xb9]
Stack pops: 1
Stack additions: [S0, V98]
Exit stack: [V11, 0xb9, V98]

================================

Block 0x178
[0x178:0x1d4]
---
Predecessors: [0xda]
Successors: [0x1d5, 0x1db]
---
0x178 JUMPDEST
0x179 PUSH1 0x0
0x17b DUP1
0x17c PUSH1 0x0
0x17e PUSH1 0x3
0x180 PUSH1 0x0
0x182 SWAP1
0x183 SLOAD
0x184 SWAP1
0x185 PUSH2 0x100
0x188 EXP
0x189 SWAP1
0x18a DIV
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 CALLER
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce EQ
0x1cf DUP1
0x1d0 ISZERO
0x1d1 PUSH2 0x1db
0x1d4 JUMPI
---
0x178: JUMPDEST 
0x179: V99 = 0x0
0x17c: V100 = 0x0
0x17e: V101 = 0x3
0x180: V102 = 0x0
0x183: V103 = S[0x3]
0x185: V104 = 0x100
0x188: V105 = EXP 0x100 0x0
0x18a: V106 = DIV V103 0x1
0x18b: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1a1: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1b7: V111 = CALLER
0x1b8: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1ce: V114 = EQ V113 V110
0x1d0: V115 = ISZERO V114
0x1d1: V116 = 0x1db
0x1d4: JUMPI 0x1db V115
---
Entry stack: [V11, 0xe2]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V114]
Exit stack: [V11, 0xe2, 0x0, 0x0, 0x0, V114]

================================

Block 0x1d5
[0x1d5:0x1da]
---
Predecessors: [0x178]
Successors: [0x1db]
---
0x1d5 POP
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 SLOAD
0x1da GT
---
0x1d6: V117 = 0x0
0x1d9: V118 = S[0x0]
0x1da: V119 = GT V118 0x0
---
Entry stack: [V11, 0xe2, 0x0, 0x0, 0x0, V114]
Stack pops: 1
Stack additions: [V119]
Exit stack: [V11, 0xe2, 0x0, 0x0, 0x0, V119]

================================

Block 0x1db
[0x1db:0x1e1]
---
Predecessors: [0x178, 0x1d5]
Successors: [0x1e2, 0x1e8]
---
0x1db JUMPDEST
0x1dc DUP1
0x1dd ISZERO
0x1de PUSH2 0x1e8
0x1e1 JUMPI
---
0x1db: JUMPDEST 
0x1dd: V120 = ISZERO S0
0x1de: V121 = 0x1e8
0x1e1: JUMPI 0x1e8 V120
---
Entry stack: [V11, 0xe2, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe2, 0x0, 0x0, 0x0, S0]

================================

Block 0x1e2
[0x1e2:0x1e7]
---
Predecessors: [0x1db]
Successors: [0x1e8]
---
0x1e2 POP
0x1e3 PUSH1 0x2
0x1e5 SLOAD
0x1e6 NUMBER
0x1e7 GT
---
0x1e3: V122 = 0x2
0x1e5: V123 = S[0x2]
0x1e6: V124 = NUMBER
0x1e7: V125 = GT V124 V123
---
Entry stack: [V11, 0xe2, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V125]
Exit stack: [V11, 0xe2, 0x0, 0x0, 0x0, V125]

================================

Block 0x1e8
[0x1e8:0x1ed]
---
Predecessors: [0x1db, 0x1e2]
Successors: [0x1ee, 0x390]
---
0x1e8 JUMPDEST
0x1e9 ISZERO
0x1ea PUSH2 0x390
0x1ed JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V126 = ISZERO S0
0x1ea: V127 = 0x390
0x1ed: JUMPI 0x390 V126
---
Entry stack: [V11, 0xe2, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2, 0x0, 0x0, 0x0]

================================

Block 0x1ee
[0x1ee:0x1fc]
---
Predecessors: [0x1e8]
Successors: [0x1fd, 0x1fe]
---
0x1ee PUSH1 0x64
0x1f0 PUSH1 0x5f
0x1f2 PUSH1 0x4
0x1f4 SLOAD
0x1f5 MUL
0x1f6 DUP2
0x1f7 ISZERO
0x1f8 ISZERO
0x1f9 PUSH2 0x1fe
0x1fc JUMPI
---
0x1ee: V128 = 0x64
0x1f0: V129 = 0x5f
0x1f2: V130 = 0x4
0x1f4: V131 = S[0x4]
0x1f5: V132 = MUL V131 0x5f
0x1f7: V133 = ISZERO 0x64
0x1f8: V134 = ISZERO 0x0
0x1f9: V135 = 0x1fe
0x1fc: JUMPI 0x1fe 0x1
---
Entry stack: [V11, 0xe2, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x64, V132]
Exit stack: [V11, 0xe2, 0x0, 0x0, 0x0, 0x64, V132]

================================

Block 0x1fd
[0x1fd:0x1fd]
---
Predecessors: [0x1ee]
Successors: []
---
0x1fd INVALID
---
0x1fd: INVALID 
---
Entry stack: [V11, 0xe2, 0x0, 0x0, 0x0, 0x64, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, 0x0, 0x0, 0x0, 0x64, V132]

================================

Block 0x1fe
[0x1fe:0x34a]
---
Predecessors: [0x1ee]
Successors: [0x34b, 0x34f]
---
0x1fe JUMPDEST
0x1ff DIV
0x200 SWAP3
0x201 POP
0x202 DUP3
0x203 ADDRESS
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 AND
0x21a BALANCE
0x21b SUB
0x21c SWAP2
0x21d POP
0x21e PUSH1 0x1
0x220 PUSH1 0x0
0x222 SWAP1
0x223 SLOAD
0x224 SWAP1
0x225 PUSH2 0x100
0x228 EXP
0x229 SWAP1
0x22a DIV
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 SWAP1
0x242 POP
0x243 PUSH1 0x3
0x245 PUSH1 0x0
0x247 SWAP1
0x248 SLOAD
0x249 SWAP1
0x24a PUSH2 0x100
0x24d EXP
0x24e SWAP1
0x24f DIV
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 AND
0x266 PUSH1 0x1
0x268 PUSH1 0x0
0x26a PUSH2 0x100
0x26d EXP
0x26e DUP2
0x26f SLOAD
0x270 DUP2
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 MUL
0x287 NOT
0x288 AND
0x289 SWAP1
0x28a DUP4
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 MUL
0x2a2 OR
0x2a3 SWAP1
0x2a4 SSTORE
0x2a5 POP
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 DUP2
0x2aa SWAP1
0x2ab SSTORE
0x2ac POP
0x2ad PUSH1 0x0
0x2af PUSH1 0x4
0x2b1 DUP2
0x2b2 SWAP1
0x2b3 SSTORE
0x2b4 POP
0x2b5 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2d6 PUSH1 0x2
0x2d8 DUP2
0x2d9 SWAP1
0x2da SSTORE
0x2db POP
0x2dc PUSH1 0x5
0x2de PUSH1 0x0
0x2e0 DUP2
0x2e1 SLOAD
0x2e2 DUP1
0x2e3 SWAP3
0x2e4 SWAP2
0x2e5 SWAP1
0x2e6 PUSH1 0x1
0x2e8 ADD
0x2e9 SWAP2
0x2ea SWAP1
0x2eb POP
0x2ec SSTORE
0x2ed POP
0x2ee PUSH1 0x3
0x2f0 PUSH1 0x0
0x2f2 SWAP1
0x2f3 SLOAD
0x2f4 SWAP1
0x2f5 PUSH2 0x100
0x2f8 EXP
0x2f9 SWAP1
0x2fa DIV
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH2 0x8fc
0x32a DUP4
0x32b SWAP1
0x32c DUP2
0x32d ISZERO
0x32e MUL
0x32f SWAP1
0x330 PUSH1 0x40
0x332 MLOAD
0x333 PUSH1 0x0
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 DUP4
0x33a SUB
0x33b DUP2
0x33c DUP6
0x33d DUP9
0x33e DUP9
0x33f CALL
0x340 SWAP4
0x341 POP
0x342 POP
0x343 POP
0x344 POP
0x345 ISZERO
0x346 ISZERO
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V136 = DIV V132 0x64
0x203: V137 = ADDRESS
0x204: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x219: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x21a: V140 = BALANCE V139
0x21b: V141 = SUB V140 V136
0x21e: V142 = 0x1
0x220: V143 = 0x0
0x223: V144 = S[0x1]
0x225: V145 = 0x100
0x228: V146 = EXP 0x100 0x0
0x22a: V147 = DIV V144 0x1
0x22b: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x243: V150 = 0x3
0x245: V151 = 0x0
0x248: V152 = S[0x3]
0x24a: V153 = 0x100
0x24d: V154 = EXP 0x100 0x0
0x24f: V155 = DIV V152 0x1
0x250: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x266: V158 = 0x1
0x268: V159 = 0x0
0x26a: V160 = 0x100
0x26d: V161 = EXP 0x100 0x0
0x26f: V162 = S[0x1]
0x271: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V164 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x287: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x288: V166 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V162
0x28b: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2a1: V169 = MUL V168 0x1
0x2a2: V170 = OR V169 V166
0x2a4: S[0x1] = V170
0x2a6: V171 = 0x0
0x2ab: S[0x0] = 0x0
0x2ad: V172 = 0x0
0x2af: V173 = 0x4
0x2b3: S[0x4] = 0x0
0x2b5: V174 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2d6: V175 = 0x2
0x2da: S[0x2] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2dc: V176 = 0x5
0x2de: V177 = 0x0
0x2e1: V178 = S[0x5]
0x2e6: V179 = 0x1
0x2e8: V180 = ADD 0x1 V178
0x2ec: S[0x5] = V180
0x2ee: V181 = 0x3
0x2f0: V182 = 0x0
0x2f3: V183 = S[0x3]
0x2f5: V184 = 0x100
0x2f8: V185 = EXP 0x100 0x0
0x2fa: V186 = DIV V183 0x1
0x2fb: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x311: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x327: V191 = 0x8fc
0x32d: V192 = ISZERO V141
0x32e: V193 = MUL V192 0x8fc
0x330: V194 = 0x40
0x332: V195 = M[0x40]
0x333: V196 = 0x0
0x335: V197 = 0x40
0x337: V198 = M[0x40]
0x33a: V199 = SUB V195 V198
0x33f: V200 = CALL V193 V190 V141 V198 V199 V198 0x0
0x345: V201 = ISZERO V200
0x346: V202 = ISZERO V201
0x347: V203 = 0x34f
0x34a: JUMPI 0x34f V202
---
Entry stack: [V11, 0xe2, 0x0, 0x0, 0x0, 0x64, V132]
Stack pops: 5
Stack additions: [V136, V141, V149]
Exit stack: [V11, 0xe2, V136, V141, V149]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x1fe]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V204 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V136, V141, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V136, V141, V149]

================================

Block 0x34f
[0x34f:0x38a]
---
Predecessors: [0x1fe]
Successors: [0x38b, 0x38f]
---
0x34f JUMPDEST
0x350 DUP1
0x351 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x366 AND
0x367 PUSH2 0x8fc
0x36a DUP5
0x36b SWAP1
0x36c DUP2
0x36d ISZERO
0x36e MUL
0x36f SWAP1
0x370 PUSH1 0x40
0x372 MLOAD
0x373 PUSH1 0x0
0x375 PUSH1 0x40
0x377 MLOAD
0x378 DUP1
0x379 DUP4
0x37a SUB
0x37b DUP2
0x37c DUP6
0x37d DUP9
0x37e DUP9
0x37f CALL
0x380 SWAP4
0x381 POP
0x382 POP
0x383 POP
0x384 POP
0x385 ISZERO
0x386 ISZERO
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x34f: JUMPDEST 
0x351: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x366: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x367: V207 = 0x8fc
0x36d: V208 = ISZERO V136
0x36e: V209 = MUL V208 0x8fc
0x370: V210 = 0x40
0x372: V211 = M[0x40]
0x373: V212 = 0x0
0x375: V213 = 0x40
0x377: V214 = M[0x40]
0x37a: V215 = SUB V211 V214
0x37f: V216 = CALL V209 V206 V136 V214 V215 V214 0x0
0x385: V217 = ISZERO V216
0x386: V218 = ISZERO V217
0x387: V219 = 0x38f
0x38a: JUMPI 0x38f V218
---
Entry stack: [V11, 0xe2, V136, V141, V149]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe2, V136, V141, V149]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x34f]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V220 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V136, V141, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V136, V141, V149]

================================

Block 0x38f
[0x38f:0x38f]
---
Predecessors: [0x34f]
Successors: [0x390]
---
0x38f JUMPDEST
---
0x38f: JUMPDEST 
---
Entry stack: [V11, 0xe2, V136, V141, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V136, V141, V149]

================================

Block 0x390
[0x390:0x394]
---
Predecessors: [0x1e8, 0x38f]
Successors: [0xe2]
---
0x390 JUMPDEST
0x391 POP
0x392 POP
0x393 POP
0x394 JUMP
---
0x390: JUMPDEST 
0x394: JUMP 0xe2
---
Entry stack: [V11, 0xe2, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x395
[0x395:0x39a]
---
Predecessors: [0xef]
Successors: [0xf7]
---
0x395 JUMPDEST
0x396 PUSH1 0x2
0x398 SLOAD
0x399 DUP2
0x39a JUMP
---
0x395: JUMPDEST 
0x396: V221 = 0x2
0x398: V222 = S[0x2]
0x39a: JUMP 0xf7
---
Entry stack: [V11, 0xf7]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V11, 0xf7, V222]

================================

Block 0x39b
[0x39b:0x3a6]
---
Predecessors: [0x10d]
Successors: [0x3a7, 0x3ab]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e SLOAD
0x39f CALLVALUE
0x3a0 GT
0x3a1 ISZERO
0x3a2 ISZERO
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x39b: JUMPDEST 
0x39c: V223 = 0x0
0x39e: V224 = S[0x0]
0x39f: V225 = CALLVALUE
0x3a0: V226 = GT V225 V224
0x3a1: V227 = ISZERO V226
0x3a2: V228 = ISZERO V227
0x3a3: V229 = 0x3ab
0x3a6: JUMPI 0x3ab V228
---
Entry stack: [V11, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x39b]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V230 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x3ab
[0x3ab:0x3b6]
---
Predecessors: [0x39b]
Successors: [0x3b7, 0x3bb]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x2
0x3ae SLOAD
0x3af NUMBER
0x3b0 LT
0x3b1 ISZERO
0x3b2 ISZERO
0x3b3 PUSH2 0x3bb
0x3b6 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V231 = 0x2
0x3ae: V232 = S[0x2]
0x3af: V233 = NUMBER
0x3b0: V234 = LT V233 V232
0x3b1: V235 = ISZERO V234
0x3b2: V236 = ISZERO V235
0x3b3: V237 = 0x3bb
0x3b6: JUMPI 0x3bb V236
---
Entry stack: [V11, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x3b7
[0x3b7:0x3ba]
---
Predecessors: [0x3ab]
Successors: []
---
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba REVERT
---
0x3b7: V238 = 0x0
0x3ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x3bb
[0x3bb:0x41f]
---
Predecessors: [0x3ab]
Successors: [0x115]
---
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd PUSH1 0x0
0x3bf DUP2
0x3c0 SWAP1
0x3c1 SSTORE
0x3c2 POP
0x3c3 CALLVALUE
0x3c4 PUSH1 0x4
0x3c6 PUSH1 0x0
0x3c8 DUP3
0x3c9 DUP3
0x3ca SLOAD
0x3cb ADD
0x3cc SWAP3
0x3cd POP
0x3ce POP
0x3cf DUP2
0x3d0 SWAP1
0x3d1 SSTORE
0x3d2 POP
0x3d3 CALLER
0x3d4 PUSH1 0x1
0x3d6 PUSH1 0x0
0x3d8 PUSH2 0x100
0x3db EXP
0x3dc DUP2
0x3dd SLOAD
0x3de DUP2
0x3df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f4 MUL
0x3f5 NOT
0x3f6 AND
0x3f7 SWAP1
0x3f8 DUP4
0x3f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40e AND
0x40f MUL
0x410 OR
0x411 SWAP1
0x412 SSTORE
0x413 POP
0x414 PUSH2 0x9d80
0x417 NUMBER
0x418 ADD
0x419 PUSH1 0x2
0x41b DUP2
0x41c SWAP1
0x41d SSTORE
0x41e POP
0x41f JUMP
---
0x3bb: JUMPDEST 
0x3bc: V239 = CALLVALUE
0x3bd: V240 = 0x0
0x3c1: S[0x0] = V239
0x3c3: V241 = CALLVALUE
0x3c4: V242 = 0x4
0x3c6: V243 = 0x0
0x3ca: V244 = S[0x4]
0x3cb: V245 = ADD V244 V241
0x3d1: S[0x4] = V245
0x3d3: V246 = CALLER
0x3d4: V247 = 0x1
0x3d6: V248 = 0x0
0x3d8: V249 = 0x100
0x3db: V250 = EXP 0x100 0x0
0x3dd: V251 = S[0x1]
0x3df: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f4: V253 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3f5: V254 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V255 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V251
0x3f9: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x40f: V258 = MUL V257 0x1
0x410: V259 = OR V258 V255
0x412: S[0x1] = V259
0x414: V260 = 0x9d80
0x417: V261 = NUMBER
0x418: V262 = ADD V261 0x9d80
0x419: V263 = 0x2
0x41d: S[0x2] = V262
0x41f: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x420
[0x420:0x445]
---
Predecessors: [0x122]
Successors: [0x12a]
---
0x420 JUMPDEST
0x421 PUSH1 0x1
0x423 PUSH1 0x0
0x425 SWAP1
0x426 SLOAD
0x427 SWAP1
0x428 PUSH2 0x100
0x42b EXP
0x42c SWAP1
0x42d DIV
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 DUP2
0x445 JUMP
---
0x420: JUMPDEST 
0x421: V264 = 0x1
0x423: V265 = 0x0
0x426: V266 = S[0x1]
0x428: V267 = 0x100
0x42b: V268 = EXP 0x100 0x0
0x42d: V269 = DIV V266 0x1
0x42e: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x445: JUMP 0x12a
---
Entry stack: [V11, 0x12a]
Stack pops: 1
Stack additions: [S0, V271]
Exit stack: [V11, 0x12a, V271]

================================

Block 0x446
[0x446:0x471]
---
Predecessors: []
Successors: []
---
0x446 STOP
0x447 LOG1
0x448 PUSH6 0x627a7a723058
0x44f SHA3
0x450 PUSH5 0xa22b48c564
0x456 CALLVALUE
0x457 MISSING 0x46
0x458 MISSING 0x21
0x459 EXTCODECOPY
0x45a MISSING 0xdd
0x45b MISSING 0xc5
0x45c MISSING 0xdc
0x45d SHR
0x45e MISSING 0x21
0x45f MISSING 0xc0
0x460 ADD
0x461 GASPRICE
0x462 MISSING 0xbe
0x463 MISSING 0xaf
0x464 JUMPDEST
0x465 SWAP1
0x466 SWAP15
0x467 XOR
0x468 MISSING 0xef
0x469 SWAP11
0x46a MISSING 0xbe
0x46b MISSING 0xbe
0x46c SWAP11
0x46d MISSING 0x2c
0x46e SHL
0x46f EXP
0x470 STOP
0x471 MISSING 0x29
---
0x446: STOP 
0x447: LOG S0 S1 S2
0x448: V272 = 0x627a7a723058
0x44f: V273 = SHA3 0x627a7a723058 S3
0x450: V274 = 0xa22b48c564
0x456: V275 = CALLVALUE
0x457: MISSING 0x46
0x458: MISSING 0x21
0x459: EXTCODECOPY S0 S1 S2 S3
0x45a: MISSING 0xdd
0x45b: MISSING 0xc5
0x45c: MISSING 0xdc
0x45d: V276 = SHR S0 S1
0x45e: MISSING 0x21
0x45f: MISSING 0xc0
0x460: V277 = ADD S0 S1
0x461: V278 = GASPRICE
0x462: MISSING 0xbe
0x463: MISSING 0xaf
0x464: JUMPDEST 
0x467: V279 = XOR S15 S0
0x468: MISSING 0xef
0x46a: MISSING 0xbe
0x46b: MISSING 0xbe
0x46d: MISSING 0x2c
0x46e: V280 = SHL S0 S1
0x46f: V281 = EXP V280 S2
0x470: STOP 
0x471: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V275, 0xa22b48c564, V273, V276, V278, V277, V279, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S1, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V281]
Exit stack: []

================================

Function 0:
Public function signature: 0x29d368e3
Entry block: 0x7d
Exit block: 0x90
Body: 0x7d, 0x84, 0x88, 0x90, 0x16c

Function 1:
Public function signature: 0x3a4b66f1
Entry block: 0xa6
Exit block: 0xb9
Body: 0xa6, 0xad, 0xb1, 0xb9, 0x172

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xcf
Exit block: 0x38b
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x178, 0x1d5, 0x1db, 0x1e2, 0x1e8, 0x1ee, 0x1fd, 0x1fe, 0x34b, 0x34f, 0x38b, 0x38f, 0x390

Function 3:
Public function signature: 0x4f25d6dd
Entry block: 0xe4
Exit block: 0xf7
Body: 0xe4, 0xeb, 0xef, 0xf7, 0x395

Function 4:
Public function signature: 0xa801fd63
Entry block: 0x10d
Exit block: 0x115
Body: 0x10d, 0x115, 0x39b, 0x3a7, 0x3ab, 0x3b7, 0x3bb

Function 5:
Public function signature: 0xac4c8bf3
Entry block: 0x117
Exit block: 0x12a
Body: 0x117, 0x11e, 0x122, 0x12a, 0x420

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

