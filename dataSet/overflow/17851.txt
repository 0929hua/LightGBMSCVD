Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4b86c225
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4b86c225
0x3c: V13 = EQ 0x4b86c225 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xe5]
---
0x41 DUP1
0x42 PUSH4 0x6198e339
0x47 EQ
0x48 PUSH2 0xe5
0x4b JUMPI
---
0x42: V15 = 0x6198e339
0x47: V16 = EQ 0x6198e339 V11
0x48: V17 = 0xe5
0x4b: JUMPI 0xe5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x108]
---
0x4c DUP1
0x4d PUSH4 0xec034bed
0x52 EQ
0x53 PUSH2 0x108
0x56 JUMPI
---
0x4d: V18 = 0xec034bed
0x52: V19 = EQ 0xec034bed V11
0x53: V20 = 0x108
0x56: JUMPI 0x108 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x15d]
---
0x57 DUP1
0x58 PUSH4 0xf4dadc61
0x5d EQ
0x5e PUSH2 0x15d
0x61 JUMPI
---
0x58: V21 = 0xf4dadc61
0x5d: V22 = EQ 0xf4dadc61 V11
0x5e: V23 = 0x15d
0x61: JUMPI 0x15d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0xce]
---
Predecessors: [0x67]
Successors: [0x201]
---
0x72 JUMPDEST
0x73 PUSH2 0xcf
0x76 PUSH1 0x4
0x78 DUP1
0x79 DUP1
0x7a CALLDATALOAD
0x7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90 AND
0x91 SWAP1
0x92 PUSH1 0x20
0x94 ADD
0x95 SWAP1
0x96 SWAP2
0x97 SWAP1
0x98 DUP1
0x99 CALLDATALOAD
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 SWAP2
0xb6 SWAP1
0xb7 DUP1
0xb8 CALLDATALOAD
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe SWAP2
0xbf SWAP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 SWAP1
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP1
0xc7 SWAP2
0xc8 SWAP1
0xc9 POP
0xca POP
0xcb PUSH2 0x201
0xce JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0xcf
0x76: V30 = 0x4
0x7a: V31 = CALLDATALOAD 0x4
0x7b: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x90: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x92: V34 = 0x20
0x94: V35 = ADD 0x20 0x4
0x99: V36 = CALLDATALOAD 0x24
0x9a: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb1: V39 = 0x20
0xb3: V40 = ADD 0x20 0x24
0xb8: V41 = CALLDATALOAD 0x44
0xba: V42 = 0x20
0xbc: V43 = ADD 0x20 0x44
0xc1: V44 = CALLDATALOAD 0x64
0xc3: V45 = 0x20
0xc5: V46 = ADD 0x20 0x64
0xcb: V47 = 0x201
0xce: JUMP 0x201
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf, V33, V38, V41, V44]
Exit stack: [V11, 0xcf, V33, V38, V41, V44]

================================

Block 0xcf
[0xcf:0xe4]
---
Predecessors: [0x447]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 DUP3
0xd5 DUP2
0xd6 MSTORE
0xd7 PUSH1 0x20
0xd9 ADD
0xda SWAP2
0xdb POP
0xdc POP
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 SWAP2
0xe2 SUB
0xe3 SWAP1
0xe4 RETURN
---
0xcf: JUMPDEST 
0xd0: V48 = 0x40
0xd2: V49 = M[0x40]
0xd6: M[V49] = V122
0xd7: V50 = 0x20
0xd9: V51 = ADD 0x20 V49
0xdd: V52 = 0x40
0xdf: V53 = M[0x40]
0xe2: V54 = SUB V51 V53
0xe4: RETURN V53 V54
---
Entry stack: [V11, V122]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xeb]
---
Predecessors: [0x41]
Successors: [0xec, 0xf0]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe5: JUMPDEST 
0xe6: V55 = CALLVALUE
0xe7: V56 = ISZERO V55
0xe8: V57 = 0xf0
0xeb: JUMPI 0xf0 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe5]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V58 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0x105]
---
Predecessors: [0xe5]
Successors: [0x454]
---
0xf0 JUMPDEST
0xf1 PUSH2 0x106
0xf4 PUSH1 0x4
0xf6 DUP1
0xf7 DUP1
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe SWAP2
0xff SWAP1
0x100 POP
0x101 POP
0x102 PUSH2 0x454
0x105 JUMP
---
0xf0: JUMPDEST 
0xf1: V59 = 0x106
0xf4: V60 = 0x4
0xf8: V61 = CALLDATALOAD 0x4
0xfa: V62 = 0x20
0xfc: V63 = ADD 0x20 0x4
0x102: V64 = 0x454
0x105: JUMP 0x454
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x106, V61]
Exit stack: [V11, 0x106, V61]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: [0x6e1]
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x4c]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V65 = CALLVALUE
0x10a: V66 = ISZERO V65
0x10b: V67 = 0x113
0x10e: JUMPI 0x113 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V68 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x108]
Successors: [0x6e5]
---
0x113 JUMPDEST
0x114 PUSH2 0x11b
0x117 PUSH2 0x6e5
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V69 = 0x11b
0x117: V70 = 0x6e5
0x11a: JUMP 0x6e5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x11b
[0x11b:0x15c]
---
Predecessors: [0x6e5]
Successors: []
---
0x11b JUMPDEST
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 DUP3
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP2
0x153 POP
0x154 POP
0x155 PUSH1 0x40
0x157 MLOAD
0x158 DUP1
0x159 SWAP2
0x15a SUB
0x15b SWAP1
0x15c RETURN
---
0x11b: JUMPDEST 
0x11c: V71 = 0x40
0x11e: V72 = M[0x40]
0x121: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x137: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x14e: M[V72] = V76
0x14f: V77 = 0x20
0x151: V78 = ADD 0x20 V72
0x155: V79 = 0x40
0x157: V80 = M[0x40]
0x15a: V81 = SUB V78 V80
0x15c: RETURN V80 V81
---
Entry stack: [V11, 0x11b, V412]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x11b]

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x57]
Successors: [0x164, 0x168]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V82 = CALLVALUE
0x15f: V83 = ISZERO V82
0x160: V84 = 0x168
0x163: JUMPI 0x168 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x15d]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V85 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x168
[0x168:0x17d]
---
Predecessors: [0x15d]
Successors: [0x70a]
---
0x168 JUMPDEST
0x169 PUSH2 0x17e
0x16c PUSH1 0x4
0x16e DUP1
0x16f DUP1
0x170 CALLDATALOAD
0x171 SWAP1
0x172 PUSH1 0x20
0x174 ADD
0x175 SWAP1
0x176 SWAP2
0x177 SWAP1
0x178 POP
0x179 POP
0x17a PUSH2 0x70a
0x17d JUMP
---
0x168: JUMPDEST 
0x169: V86 = 0x17e
0x16c: V87 = 0x4
0x170: V88 = CALLDATALOAD 0x4
0x172: V89 = 0x20
0x174: V90 = ADD 0x20 0x4
0x17a: V91 = 0x70a
0x17d: JUMP 0x70a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17e, V88]
Exit stack: [V11, 0x17e, V88]

================================

Block 0x17e
[0x17e:0x200]
---
Predecessors: [0x70a]
Successors: []
---
0x17e JUMPDEST
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 DUP6
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1af AND
0x1b0 DUP2
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 DUP5
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb AND
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 DUP4
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed DUP3
0x1ee DUP2
0x1ef MSTORE
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP5
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd SWAP2
0x1fe SUB
0x1ff SWAP1
0x200 RETURN
---
0x17e: JUMPDEST 
0x17f: V92 = 0x40
0x181: V93 = M[0x40]
0x184: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x19a: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1b1: M[V93] = V97
0x1b2: V98 = 0x20
0x1b4: V99 = ADD 0x20 V93
0x1b6: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x1cc: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1e3: M[V99] = V103
0x1e4: V104 = 0x20
0x1e6: V105 = ADD 0x20 V99
0x1e9: M[V105] = V440
0x1ea: V106 = 0x20
0x1ec: V107 = ADD 0x20 V105
0x1ef: M[V107] = V443
0x1f0: V108 = 0x20
0x1f2: V109 = ADD 0x20 V107
0x1f9: V110 = 0x40
0x1fb: V111 = M[0x40]
0x1fe: V112 = SUB V109 V111
0x200: RETURN V111 V112
---
Entry stack: [V11, 0x17e, V428, V437, V440, V443]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x17e]

================================

Block 0x201
[0x201:0x20f]
---
Predecessors: [0x72]
Successors: [0x210, 0x214]
---
0x201 JUMPDEST
0x202 PUSH1 0x0
0x204 DUP1
0x205 PUSH1 0x0
0x207 DUP1
0x208 DUP6
0x209 GT
0x20a ISZERO
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x201: JUMPDEST 
0x202: V113 = 0x0
0x205: V114 = 0x0
0x209: V115 = GT V41 0x0
0x20a: V116 = ISZERO V115
0x20b: V117 = ISZERO V116
0x20c: V118 = 0x214
0x20f: JUMPI 0x214 V117
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, 0x0, 0x0]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x201]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V119 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, 0x0, 0x0]

================================

Block 0x214
[0x214:0x41c]
---
Predecessors: [0x201]
Successors: [0x41d, 0x421]
---
0x214 JUMPDEST
0x215 PUSH1 0x1
0x217 PUSH1 0x0
0x219 DUP2
0x21a SLOAD
0x21b DUP1
0x21c SWAP3
0x21d SWAP2
0x21e SWAP1
0x21f PUSH1 0x1
0x221 ADD
0x222 SWAP2
0x223 SWAP1
0x224 POP
0x225 SSTORE
0x226 SWAP2
0x227 POP
0x228 PUSH1 0x2
0x22a PUSH1 0x0
0x22c DUP4
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x20
0x231 ADD
0x232 SWAP1
0x233 DUP2
0x234 MSTORE
0x235 PUSH1 0x20
0x237 ADD
0x238 PUSH1 0x0
0x23a SHA3
0x23b SWAP1
0x23c POP
0x23d DUP7
0x23e DUP2
0x23f PUSH1 0x0
0x241 ADD
0x242 PUSH1 0x0
0x244 PUSH2 0x100
0x247 EXP
0x248 DUP2
0x249 SLOAD
0x24a DUP2
0x24b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x260 MUL
0x261 NOT
0x262 AND
0x263 SWAP1
0x264 DUP4
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b MUL
0x27c OR
0x27d SWAP1
0x27e SSTORE
0x27f POP
0x280 DUP6
0x281 DUP2
0x282 PUSH1 0x1
0x284 ADD
0x285 PUSH1 0x0
0x287 PUSH2 0x100
0x28a EXP
0x28b DUP2
0x28c SLOAD
0x28d DUP2
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 MUL
0x2a4 NOT
0x2a5 AND
0x2a6 SWAP1
0x2a7 DUP4
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be MUL
0x2bf OR
0x2c0 SWAP1
0x2c1 SSTORE
0x2c2 POP
0x2c3 DUP5
0x2c4 DUP2
0x2c5 PUSH1 0x2
0x2c7 ADD
0x2c8 DUP2
0x2c9 SWAP1
0x2ca SSTORE
0x2cb POP
0x2cc DUP4
0x2cd DUP2
0x2ce PUSH1 0x3
0x2d0 ADD
0x2d1 DUP2
0x2d2 SWAP1
0x2d3 SSTORE
0x2d4 POP
0x2d5 DUP6
0x2d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2eb AND
0x2ec DUP8
0x2ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x302 AND
0x303 DUP4
0x304 PUSH32 0xbf35d96b29ba4a2628464e8ad987a688a035b265aac3ba73c6bf79ccd8b98634
0x325 DUP9
0x326 DUP9
0x327 PUSH1 0x40
0x329 MLOAD
0x32a DUP1
0x32b DUP4
0x32c DUP2
0x32d MSTORE
0x32e PUSH1 0x20
0x330 ADD
0x331 DUP3
0x332 DUP2
0x333 MSTORE
0x334 PUSH1 0x20
0x336 ADD
0x337 SWAP3
0x338 POP
0x339 POP
0x33a POP
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP1
0x33f SWAP2
0x340 SUB
0x341 SWAP1
0x342 LOG4
0x343 DUP7
0x344 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x359 AND
0x35a PUSH4 0x23b872dd
0x35f CALLER
0x360 ADDRESS
0x361 DUP9
0x362 PUSH1 0x0
0x364 PUSH1 0x40
0x366 MLOAD
0x367 PUSH1 0x20
0x369 ADD
0x36a MSTORE
0x36b PUSH1 0x40
0x36d MLOAD
0x36e DUP5
0x36f PUSH4 0xffffffff
0x374 AND
0x375 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x393 MUL
0x394 DUP2
0x395 MSTORE
0x396 PUSH1 0x4
0x398 ADD
0x399 DUP1
0x39a DUP5
0x39b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b0 AND
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 DUP2
0x3c8 MSTORE
0x3c9 PUSH1 0x20
0x3cb ADD
0x3cc DUP4
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe DUP3
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP4
0x405 POP
0x406 POP
0x407 POP
0x408 POP
0x409 PUSH1 0x20
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f DUP4
0x410 SUB
0x411 DUP2
0x412 PUSH1 0x0
0x414 DUP8
0x415 DUP1
0x416 EXTCODESIZE
0x417 ISZERO
0x418 ISZERO
0x419 PUSH2 0x421
0x41c JUMPI
---
0x214: JUMPDEST 
0x215: V120 = 0x1
0x217: V121 = 0x0
0x21a: V122 = S[0x1]
0x21f: V123 = 0x1
0x221: V124 = ADD 0x1 V122
0x225: S[0x1] = V124
0x228: V125 = 0x2
0x22a: V126 = 0x0
0x22e: M[0x0] = V122
0x22f: V127 = 0x20
0x231: V128 = ADD 0x20 0x0
0x234: M[0x20] = 0x2
0x235: V129 = 0x20
0x237: V130 = ADD 0x20 0x20
0x238: V131 = 0x0
0x23a: V132 = SHA3 0x0 0x40
0x23f: V133 = 0x0
0x241: V134 = ADD 0x0 V132
0x242: V135 = 0x0
0x244: V136 = 0x100
0x247: V137 = EXP 0x100 0x0
0x249: V138 = S[V134]
0x24b: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x260: V140 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x261: V141 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x262: V142 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V138
0x265: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x27b: V145 = MUL V144 0x1
0x27c: V146 = OR V145 V142
0x27e: S[V134] = V146
0x282: V147 = 0x1
0x284: V148 = ADD 0x1 V132
0x285: V149 = 0x0
0x287: V150 = 0x100
0x28a: V151 = EXP 0x100 0x0
0x28c: V152 = S[V148]
0x28e: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V154 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2a4: V155 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V156 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V152
0x2a8: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x2be: V159 = MUL V158 0x1
0x2bf: V160 = OR V159 V156
0x2c1: S[V148] = V160
0x2c5: V161 = 0x2
0x2c7: V162 = ADD 0x2 V132
0x2ca: S[V162] = V41
0x2ce: V163 = 0x3
0x2d0: V164 = ADD 0x3 V132
0x2d3: S[V164] = V44
0x2d6: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x2ed: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x302: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x304: V169 = 0xbf35d96b29ba4a2628464e8ad987a688a035b265aac3ba73c6bf79ccd8b98634
0x327: V170 = 0x40
0x329: V171 = M[0x40]
0x32d: M[V171] = V41
0x32e: V172 = 0x20
0x330: V173 = ADD 0x20 V171
0x333: M[V173] = V44
0x334: V174 = 0x20
0x336: V175 = ADD 0x20 V173
0x33b: V176 = 0x40
0x33d: V177 = M[0x40]
0x340: V178 = SUB V175 V177
0x342: LOG V177 V178 0xbf35d96b29ba4a2628464e8ad987a688a035b265aac3ba73c6bf79ccd8b98634 V122 V168 V166
0x344: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x359: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x35a: V181 = 0x23b872dd
0x35f: V182 = CALLER
0x360: V183 = ADDRESS
0x362: V184 = 0x0
0x364: V185 = 0x40
0x366: V186 = M[0x40]
0x367: V187 = 0x20
0x369: V188 = ADD 0x20 V186
0x36a: M[V188] = 0x0
0x36b: V189 = 0x40
0x36d: V190 = M[0x40]
0x36f: V191 = 0xffffffff
0x374: V192 = AND 0xffffffff 0x23b872dd
0x375: V193 = 0x100000000000000000000000000000000000000000000000000000000
0x393: V194 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x395: M[V190] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x396: V195 = 0x4
0x398: V196 = ADD 0x4 V190
0x39b: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b0: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x3b1: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x3c8: M[V196] = V200
0x3c9: V201 = 0x20
0x3cb: V202 = ADD 0x20 V196
0x3cd: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x3e3: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3fa: M[V202] = V206
0x3fb: V207 = 0x20
0x3fd: V208 = ADD 0x20 V202
0x400: M[V208] = V41
0x401: V209 = 0x20
0x403: V210 = ADD 0x20 V208
0x409: V211 = 0x20
0x40b: V212 = 0x40
0x40d: V213 = M[0x40]
0x410: V214 = SUB V210 V213
0x412: V215 = 0x0
0x416: V216 = EXTCODESIZE V180
0x417: V217 = ISZERO V216
0x418: V218 = ISZERO V217
0x419: V219 = 0x421
0x41c: JUMPI 0x421 V218
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V122, V132, V180, 0x23b872dd, V210, 0x20, V213, V214, V213, 0x0, V180]
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210, 0x20, V213, V214, V213, 0x0, V180]

================================

Block 0x41d
[0x41d:0x420]
---
Predecessors: [0x214]
Successors: []
---
0x41d PUSH1 0x0
0x41f DUP1
0x420 REVERT
---
0x41d: V220 = 0x0
0x420: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210, 0x20, V213, V214, V213, 0x0, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210, 0x20, V213, V214, V213, 0x0, V180]

================================

Block 0x421
[0x421:0x42d]
---
Predecessors: [0x214]
Successors: [0x42e, 0x432]
---
0x421 JUMPDEST
0x422 PUSH2 0x2c6
0x425 GAS
0x426 SUB
0x427 CALL
0x428 ISZERO
0x429 ISZERO
0x42a PUSH2 0x432
0x42d JUMPI
---
0x421: JUMPDEST 
0x422: V221 = 0x2c6
0x425: V222 = GAS
0x426: V223 = SUB V222 0x2c6
0x427: V224 = CALL V223 V180 0x0 V213 V214 V213 0x20
0x428: V225 = ISZERO V224
0x429: V226 = ISZERO V225
0x42a: V227 = 0x432
0x42d: JUMPI 0x432 V226
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210, 0x20, V213, V214, V213, 0x0, V180]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210]

================================

Block 0x42e
[0x42e:0x431]
---
Predecessors: [0x421]
Successors: []
---
0x42e PUSH1 0x0
0x430 DUP1
0x431 REVERT
---
0x42e: V228 = 0x0
0x431: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210]

================================

Block 0x432
[0x432:0x442]
---
Predecessors: [0x421]
Successors: [0x443, 0x447]
---
0x432 JUMPDEST
0x433 POP
0x434 POP
0x435 POP
0x436 PUSH1 0x40
0x438 MLOAD
0x439 DUP1
0x43a MLOAD
0x43b SWAP1
0x43c POP
0x43d ISZERO
0x43e ISZERO
0x43f PUSH2 0x447
0x442 JUMPI
---
0x432: JUMPDEST 
0x436: V229 = 0x40
0x438: V230 = M[0x40]
0x43a: V231 = M[V230]
0x43d: V232 = ISZERO V231
0x43e: V233 = ISZERO V232
0x43f: V234 = 0x447
0x442: JUMPI 0x447 V233
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132, V180, 0x23b872dd, V210]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132]

================================

Block 0x443
[0x443:0x446]
---
Predecessors: [0x432]
Successors: []
---
0x443 PUSH1 0x0
0x445 DUP1
0x446 REVERT
---
0x443: V235 = 0x0
0x446: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132]

================================

Block 0x447
[0x447:0x453]
---
Predecessors: [0x432]
Successors: [0xcf]
---
0x447 JUMPDEST
0x448 DUP2
0x449 SWAP3
0x44a POP
0x44b POP
0x44c POP
0x44d SWAP5
0x44e SWAP4
0x44f POP
0x450 POP
0x451 POP
0x452 POP
0x453 JUMP
---
0x447: JUMPDEST 
0x453: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V33, V38, V41, V44, 0x0, V122, V132]
Stack pops: 8
Stack additions: [S1]
Exit stack: [V11, V122]

================================

Block 0x454
[0x454:0x45b]
---
Predecessors: [0xf0]
Successors: [0x77a]
---
0x454 JUMPDEST
0x455 PUSH2 0x45c
0x458 PUSH2 0x77a
0x45b JUMP
---
0x454: JUMPDEST 
0x455: V236 = 0x45c
0x458: V237 = 0x77a
0x45b: JUMP 0x77a
---
Entry stack: [V11, 0x106, V61]
Stack pops: 0
Stack additions: [0x45c]
Exit stack: [V11, 0x106, V61, 0x45c]

================================

Block 0x45c
[0x45c:0x5bf]
---
Predecessors: [0x77a]
Successors: [0x5c0, 0x5c4]
---
0x45c JUMPDEST
0x45d PUSH1 0x2
0x45f PUSH1 0x0
0x461 DUP4
0x462 DUP2
0x463 MSTORE
0x464 PUSH1 0x20
0x466 ADD
0x467 SWAP1
0x468 DUP2
0x469 MSTORE
0x46a PUSH1 0x20
0x46c ADD
0x46d PUSH1 0x0
0x46f SHA3
0x470 PUSH1 0x80
0x472 PUSH1 0x40
0x474 MLOAD
0x475 SWAP1
0x476 DUP2
0x477 ADD
0x478 PUSH1 0x40
0x47a MSTORE
0x47b SWAP1
0x47c DUP2
0x47d PUSH1 0x0
0x47f DUP3
0x480 ADD
0x481 PUSH1 0x0
0x483 SWAP1
0x484 SLOAD
0x485 SWAP1
0x486 PUSH2 0x100
0x489 EXP
0x48a SWAP1
0x48b DIV
0x48c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a1 AND
0x4a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b7 AND
0x4b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cd AND
0x4ce DUP2
0x4cf MSTORE
0x4d0 PUSH1 0x20
0x4d2 ADD
0x4d3 PUSH1 0x1
0x4d5 DUP3
0x4d6 ADD
0x4d7 PUSH1 0x0
0x4d9 SWAP1
0x4da SLOAD
0x4db SWAP1
0x4dc PUSH2 0x100
0x4df EXP
0x4e0 SWAP1
0x4e1 DIV
0x4e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f7 AND
0x4f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50d AND
0x50e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x523 AND
0x524 DUP2
0x525 MSTORE
0x526 PUSH1 0x20
0x528 ADD
0x529 PUSH1 0x2
0x52b DUP3
0x52c ADD
0x52d SLOAD
0x52e DUP2
0x52f MSTORE
0x530 PUSH1 0x20
0x532 ADD
0x533 PUSH1 0x3
0x535 DUP3
0x536 ADD
0x537 SLOAD
0x538 DUP2
0x539 MSTORE
0x53a POP
0x53b POP
0x53c SWAP1
0x53d POP
0x53e PUSH1 0x2
0x540 PUSH1 0x0
0x542 DUP4
0x543 DUP2
0x544 MSTORE
0x545 PUSH1 0x20
0x547 ADD
0x548 SWAP1
0x549 DUP2
0x54a MSTORE
0x54b PUSH1 0x20
0x54d ADD
0x54e PUSH1 0x0
0x550 SHA3
0x551 PUSH1 0x0
0x553 DUP1
0x554 DUP3
0x555 ADD
0x556 PUSH1 0x0
0x558 PUSH2 0x100
0x55b EXP
0x55c DUP2
0x55d SLOAD
0x55e SWAP1
0x55f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x574 MUL
0x575 NOT
0x576 AND
0x577 SWAP1
0x578 SSTORE
0x579 PUSH1 0x1
0x57b DUP3
0x57c ADD
0x57d PUSH1 0x0
0x57f PUSH2 0x100
0x582 EXP
0x583 DUP2
0x584 SLOAD
0x585 SWAP1
0x586 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59b MUL
0x59c NOT
0x59d AND
0x59e SWAP1
0x59f SSTORE
0x5a0 PUSH1 0x2
0x5a2 DUP3
0x5a3 ADD
0x5a4 PUSH1 0x0
0x5a6 SWAP1
0x5a7 SSTORE
0x5a8 PUSH1 0x3
0x5aa DUP3
0x5ab ADD
0x5ac PUSH1 0x0
0x5ae SWAP1
0x5af SSTORE
0x5b0 POP
0x5b1 POP
0x5b2 PUSH1 0x0
0x5b4 DUP2
0x5b5 PUSH1 0x40
0x5b7 ADD
0x5b8 MLOAD
0x5b9 GT
0x5ba ISZERO
0x5bb ISZERO
0x5bc PUSH2 0x5c4
0x5bf JUMPI
---
0x45c: JUMPDEST 
0x45d: V238 = 0x2
0x45f: V239 = 0x0
0x463: M[0x0] = V61
0x464: V240 = 0x20
0x466: V241 = ADD 0x20 0x0
0x469: M[0x20] = 0x2
0x46a: V242 = 0x20
0x46c: V243 = ADD 0x20 0x20
0x46d: V244 = 0x0
0x46f: V245 = SHA3 0x0 0x40
0x470: V246 = 0x80
0x472: V247 = 0x40
0x474: V248 = M[0x40]
0x477: V249 = ADD V248 0x80
0x478: V250 = 0x40
0x47a: M[0x40] = V249
0x47d: V251 = 0x0
0x480: V252 = ADD V245 0x0
0x481: V253 = 0x0
0x484: V254 = S[V252]
0x486: V255 = 0x100
0x489: V256 = EXP 0x100 0x0
0x48b: V257 = DIV V254 0x1
0x48c: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x4a2: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b7: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x4b8: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x4cf: M[V248] = V263
0x4d0: V264 = 0x20
0x4d2: V265 = ADD 0x20 V248
0x4d3: V266 = 0x1
0x4d6: V267 = ADD V245 0x1
0x4d7: V268 = 0x0
0x4da: V269 = S[V267]
0x4dc: V270 = 0x100
0x4df: V271 = EXP 0x100 0x0
0x4e1: V272 = DIV V269 0x1
0x4e2: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f7: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x4f8: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x50d: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x50e: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x523: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x525: M[V265] = V278
0x526: V279 = 0x20
0x528: V280 = ADD 0x20 V265
0x529: V281 = 0x2
0x52c: V282 = ADD V245 0x2
0x52d: V283 = S[V282]
0x52f: M[V280] = V283
0x530: V284 = 0x20
0x532: V285 = ADD 0x20 V280
0x533: V286 = 0x3
0x536: V287 = ADD V245 0x3
0x537: V288 = S[V287]
0x539: M[V285] = V288
0x53e: V289 = 0x2
0x540: V290 = 0x0
0x544: M[0x0] = V61
0x545: V291 = 0x20
0x547: V292 = ADD 0x20 0x0
0x54a: M[0x20] = 0x2
0x54b: V293 = 0x20
0x54d: V294 = ADD 0x20 0x20
0x54e: V295 = 0x0
0x550: V296 = SHA3 0x0 0x40
0x551: V297 = 0x0
0x555: V298 = ADD V296 0x0
0x556: V299 = 0x0
0x558: V300 = 0x100
0x55b: V301 = EXP 0x100 0x0
0x55d: V302 = S[V298]
0x55f: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x574: V304 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x575: V305 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x576: V306 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V302
0x578: S[V298] = V306
0x579: V307 = 0x1
0x57c: V308 = ADD V296 0x1
0x57d: V309 = 0x0
0x57f: V310 = 0x100
0x582: V311 = EXP 0x100 0x0
0x584: V312 = S[V308]
0x586: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x59b: V314 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x59c: V315 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x59d: V316 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V312
0x59f: S[V308] = V316
0x5a0: V317 = 0x2
0x5a3: V318 = ADD V296 0x2
0x5a4: V319 = 0x0
0x5a7: S[V318] = 0x0
0x5a8: V320 = 0x3
0x5ab: V321 = ADD V296 0x3
0x5ac: V322 = 0x0
0x5af: S[V321] = 0x0
0x5b2: V323 = 0x0
0x5b5: V324 = 0x40
0x5b7: V325 = ADD 0x40 V248
0x5b8: V326 = M[V325]
0x5b9: V327 = GT V326 0x0
0x5ba: V328 = ISZERO V327
0x5bb: V329 = ISZERO V328
0x5bc: V330 = 0x5c4
0x5bf: JUMPI 0x5c4 V329
---
Entry stack: [V11, 0x106, V61, V446]
Stack pops: 2
Stack additions: [S1, V248]
Exit stack: [V11, 0x106, V61, V248]

================================

Block 0x5c0
[0x5c0:0x5c3]
---
Predecessors: [0x45c]
Successors: []
---
0x5c0 PUSH1 0x0
0x5c2 DUP1
0x5c3 REVERT
---
0x5c0: V331 = 0x0
0x5c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106, V61, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V61, V248]

================================

Block 0x5c4
[0x5c4:0x5d2]
---
Predecessors: [0x45c]
Successors: [0x5d3, 0x5d7]
---
0x5c4 JUMPDEST
0x5c5 TIMESTAMP
0x5c6 DUP2
0x5c7 PUSH1 0x60
0x5c9 ADD
0x5ca MLOAD
0x5cb GT
0x5cc ISZERO
0x5cd ISZERO
0x5ce ISZERO
0x5cf PUSH2 0x5d7
0x5d2 JUMPI
---
0x5c4: JUMPDEST 
0x5c5: V332 = TIMESTAMP
0x5c7: V333 = 0x60
0x5c9: V334 = ADD 0x60 V248
0x5ca: V335 = M[V334]
0x5cb: V336 = GT V335 V332
0x5cc: V337 = ISZERO V336
0x5cd: V338 = ISZERO V337
0x5ce: V339 = ISZERO V338
0x5cf: V340 = 0x5d7
0x5d2: JUMPI 0x5d7 V339
---
Entry stack: [V11, 0x106, V61, V248]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x106, V61, V248]

================================

Block 0x5d3
[0x5d3:0x5d6]
---
Predecessors: [0x5c4]
Successors: []
---
0x5d3 PUSH1 0x0
0x5d5 DUP1
0x5d6 REVERT
---
0x5d3: V341 = 0x0
0x5d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106, V61, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V61, V248]

================================

Block 0x5d7
[0x5d7:0x6b6]
---
Predecessors: [0x5c4]
Successors: [0x6b7, 0x6bb]
---
0x5d7 JUMPDEST
0x5d8 DUP2
0x5d9 PUSH32 0x832a253ad4e9e88f705006a24d9957b8aa1de307a0f9d0a6ad5fd0b0ac810505
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 SWAP2
0x602 SUB
0x603 SWAP1
0x604 LOG2
0x605 DUP1
0x606 PUSH1 0x0
0x608 ADD
0x609 MLOAD
0x60a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61f AND
0x620 PUSH4 0xa9059cbb
0x625 DUP3
0x626 PUSH1 0x20
0x628 ADD
0x629 MLOAD
0x62a DUP4
0x62b PUSH1 0x40
0x62d ADD
0x62e MLOAD
0x62f PUSH1 0x0
0x631 PUSH1 0x40
0x633 MLOAD
0x634 PUSH1 0x20
0x636 ADD
0x637 MSTORE
0x638 PUSH1 0x40
0x63a MLOAD
0x63b DUP4
0x63c PUSH4 0xffffffff
0x641 AND
0x642 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x660 MUL
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x4
0x665 ADD
0x666 DUP1
0x667 DUP4
0x668 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67d AND
0x67e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x693 AND
0x694 DUP2
0x695 MSTORE
0x696 PUSH1 0x20
0x698 ADD
0x699 DUP3
0x69a DUP2
0x69b MSTORE
0x69c PUSH1 0x20
0x69e ADD
0x69f SWAP3
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 PUSH1 0x20
0x6a5 PUSH1 0x40
0x6a7 MLOAD
0x6a8 DUP1
0x6a9 DUP4
0x6aa SUB
0x6ab DUP2
0x6ac PUSH1 0x0
0x6ae DUP8
0x6af DUP1
0x6b0 EXTCODESIZE
0x6b1 ISZERO
0x6b2 ISZERO
0x6b3 PUSH2 0x6bb
0x6b6 JUMPI
---
0x5d7: JUMPDEST 
0x5d9: V342 = 0x832a253ad4e9e88f705006a24d9957b8aa1de307a0f9d0a6ad5fd0b0ac810505
0x5fa: V343 = 0x40
0x5fc: V344 = M[0x40]
0x5fd: V345 = 0x40
0x5ff: V346 = M[0x40]
0x602: V347 = SUB V344 V346
0x604: LOG V346 V347 0x832a253ad4e9e88f705006a24d9957b8aa1de307a0f9d0a6ad5fd0b0ac810505 V61
0x606: V348 = 0x0
0x608: V349 = ADD 0x0 V248
0x609: V350 = M[V349]
0x60a: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x61f: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x620: V353 = 0xa9059cbb
0x626: V354 = 0x20
0x628: V355 = ADD 0x20 V248
0x629: V356 = M[V355]
0x62b: V357 = 0x40
0x62d: V358 = ADD 0x40 V248
0x62e: V359 = M[V358]
0x62f: V360 = 0x0
0x631: V361 = 0x40
0x633: V362 = M[0x40]
0x634: V363 = 0x20
0x636: V364 = ADD 0x20 V362
0x637: M[V364] = 0x0
0x638: V365 = 0x40
0x63a: V366 = M[0x40]
0x63c: V367 = 0xffffffff
0x641: V368 = AND 0xffffffff 0xa9059cbb
0x642: V369 = 0x100000000000000000000000000000000000000000000000000000000
0x660: V370 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x662: M[V366] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x663: V371 = 0x4
0x665: V372 = ADD 0x4 V366
0x668: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x67d: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x67e: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x693: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x695: M[V372] = V376
0x696: V377 = 0x20
0x698: V378 = ADD 0x20 V372
0x69b: M[V378] = V359
0x69c: V379 = 0x20
0x69e: V380 = ADD 0x20 V378
0x6a3: V381 = 0x20
0x6a5: V382 = 0x40
0x6a7: V383 = M[0x40]
0x6aa: V384 = SUB V380 V383
0x6ac: V385 = 0x0
0x6b0: V386 = EXTCODESIZE V352
0x6b1: V387 = ISZERO V386
0x6b2: V388 = ISZERO V387
0x6b3: V389 = 0x6bb
0x6b6: JUMPI 0x6bb V388
---
Entry stack: [V11, 0x106, V61, V248]
Stack pops: 2
Stack additions: [S1, S0, V352, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V352]
Exit stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V352]

================================

Block 0x6b7
[0x6b7:0x6ba]
---
Predecessors: [0x5d7]
Successors: []
---
0x6b7 PUSH1 0x0
0x6b9 DUP1
0x6ba REVERT
---
0x6b7: V390 = 0x0
0x6ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V352]

================================

Block 0x6bb
[0x6bb:0x6c7]
---
Predecessors: [0x5d7]
Successors: [0x6c8, 0x6cc]
---
0x6bb JUMPDEST
0x6bc PUSH2 0x2c6
0x6bf GAS
0x6c0 SUB
0x6c1 CALL
0x6c2 ISZERO
0x6c3 ISZERO
0x6c4 PUSH2 0x6cc
0x6c7 JUMPI
---
0x6bb: JUMPDEST 
0x6bc: V391 = 0x2c6
0x6bf: V392 = GAS
0x6c0: V393 = SUB V392 0x2c6
0x6c1: V394 = CALL V393 V352 0x0 V383 V384 V383 0x20
0x6c2: V395 = ISZERO V394
0x6c3: V396 = ISZERO V395
0x6c4: V397 = 0x6cc
0x6c7: JUMPI 0x6cc V396
---
Entry stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V352]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380]

================================

Block 0x6c8
[0x6c8:0x6cb]
---
Predecessors: [0x6bb]
Successors: []
---
0x6c8 PUSH1 0x0
0x6ca DUP1
0x6cb REVERT
---
0x6c8: V398 = 0x0
0x6cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380]

================================

Block 0x6cc
[0x6cc:0x6dc]
---
Predecessors: [0x6bb]
Successors: [0x6dd, 0x6e1]
---
0x6cc JUMPDEST
0x6cd POP
0x6ce POP
0x6cf POP
0x6d0 PUSH1 0x40
0x6d2 MLOAD
0x6d3 DUP1
0x6d4 MLOAD
0x6d5 SWAP1
0x6d6 POP
0x6d7 ISZERO
0x6d8 ISZERO
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x6cc: JUMPDEST 
0x6d0: V399 = 0x40
0x6d2: V400 = M[0x40]
0x6d4: V401 = M[V400]
0x6d7: V402 = ISZERO V401
0x6d8: V403 = ISZERO V402
0x6d9: V404 = 0x6e1
0x6dc: JUMPI 0x6e1 V403
---
Entry stack: [V11, 0x106, V61, V248, V352, 0xa9059cbb, V380]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x106, V61, V248]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x6cc]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V405 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106, V61, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106, V61, V248]

================================

Block 0x6e1
[0x6e1:0x6e4]
---
Predecessors: [0x6cc]
Successors: [0x106]
---
0x6e1 JUMPDEST
0x6e2 POP
0x6e3 POP
0x6e4 JUMP
---
0x6e1: JUMPDEST 
0x6e4: JUMP 0x106
---
Entry stack: [V11, 0x106, V61, V248]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e5
[0x6e5:0x709]
---
Predecessors: [0x113]
Successors: [0x11b]
---
0x6e5 JUMPDEST
0x6e6 PUSH1 0x0
0x6e8 DUP1
0x6e9 SWAP1
0x6ea SLOAD
0x6eb SWAP1
0x6ec PUSH2 0x100
0x6ef EXP
0x6f0 SWAP1
0x6f1 DIV
0x6f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x707 AND
0x708 DUP2
0x709 JUMP
---
0x6e5: JUMPDEST 
0x6e6: V406 = 0x0
0x6ea: V407 = S[0x0]
0x6ec: V408 = 0x100
0x6ef: V409 = EXP 0x100 0x0
0x6f1: V410 = DIV V407 0x1
0x6f2: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x707: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x709: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: [S0, V412]
Exit stack: [V11, 0x11b, V412]

================================

Block 0x70a
[0x70a:0x779]
---
Predecessors: [0x168]
Successors: [0x17e]
---
0x70a JUMPDEST
0x70b PUSH1 0x2
0x70d PUSH1 0x20
0x70f MSTORE
0x710 DUP1
0x711 PUSH1 0x0
0x713 MSTORE
0x714 PUSH1 0x40
0x716 PUSH1 0x0
0x718 SHA3
0x719 PUSH1 0x0
0x71b SWAP2
0x71c POP
0x71d SWAP1
0x71e POP
0x71f DUP1
0x720 PUSH1 0x0
0x722 ADD
0x723 PUSH1 0x0
0x725 SWAP1
0x726 SLOAD
0x727 SWAP1
0x728 PUSH2 0x100
0x72b EXP
0x72c SWAP1
0x72d DIV
0x72e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x743 AND
0x744 SWAP1
0x745 DUP1
0x746 PUSH1 0x1
0x748 ADD
0x749 PUSH1 0x0
0x74b SWAP1
0x74c SLOAD
0x74d SWAP1
0x74e PUSH2 0x100
0x751 EXP
0x752 SWAP1
0x753 DIV
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a SWAP1
0x76b DUP1
0x76c PUSH1 0x2
0x76e ADD
0x76f SLOAD
0x770 SWAP1
0x771 DUP1
0x772 PUSH1 0x3
0x774 ADD
0x775 SLOAD
0x776 SWAP1
0x777 POP
0x778 DUP5
0x779 JUMP
---
0x70a: JUMPDEST 
0x70b: V413 = 0x2
0x70d: V414 = 0x20
0x70f: M[0x20] = 0x2
0x711: V415 = 0x0
0x713: M[0x0] = V88
0x714: V416 = 0x40
0x716: V417 = 0x0
0x718: V418 = SHA3 0x0 0x40
0x719: V419 = 0x0
0x720: V420 = 0x0
0x722: V421 = ADD 0x0 V418
0x723: V422 = 0x0
0x726: V423 = S[V421]
0x728: V424 = 0x100
0x72b: V425 = EXP 0x100 0x0
0x72d: V426 = DIV V423 0x1
0x72e: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x743: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x746: V429 = 0x1
0x748: V430 = ADD 0x1 V418
0x749: V431 = 0x0
0x74c: V432 = S[V430]
0x74e: V433 = 0x100
0x751: V434 = EXP 0x100 0x0
0x753: V435 = DIV V432 0x1
0x754: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x76c: V438 = 0x2
0x76e: V439 = ADD 0x2 V418
0x76f: V440 = S[V439]
0x772: V441 = 0x3
0x774: V442 = ADD 0x3 V418
0x775: V443 = S[V442]
0x779: JUMP 0x17e
---
Entry stack: [V11, 0x17e, V88]
Stack pops: 2
Stack additions: [S1, V428, V437, V440, V443]
Exit stack: [V11, 0x17e, V428, V437, V440, V443]

================================

Block 0x77a
[0x77a:0x7ce]
---
Predecessors: [0x454]
Successors: [0x45c]
---
0x77a JUMPDEST
0x77b PUSH1 0x80
0x77d PUSH1 0x40
0x77f MLOAD
0x780 SWAP1
0x781 DUP2
0x782 ADD
0x783 PUSH1 0x40
0x785 MSTORE
0x786 DUP1
0x787 PUSH1 0x0
0x789 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79e AND
0x79f DUP2
0x7a0 MSTORE
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 PUSH1 0x0
0x7a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bb AND
0x7bc DUP2
0x7bd MSTORE
0x7be PUSH1 0x20
0x7c0 ADD
0x7c1 PUSH1 0x0
0x7c3 DUP2
0x7c4 MSTORE
0x7c5 PUSH1 0x20
0x7c7 ADD
0x7c8 PUSH1 0x0
0x7ca DUP2
0x7cb MSTORE
0x7cc POP
0x7cd SWAP1
0x7ce JUMP
---
0x77a: JUMPDEST 
0x77b: V444 = 0x80
0x77d: V445 = 0x40
0x77f: V446 = M[0x40]
0x782: V447 = ADD V446 0x80
0x783: V448 = 0x40
0x785: M[0x40] = V447
0x787: V449 = 0x0
0x789: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x79e: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7a0: M[V446] = 0x0
0x7a1: V452 = 0x20
0x7a3: V453 = ADD 0x20 V446
0x7a4: V454 = 0x0
0x7a6: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bb: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7bd: M[V453] = 0x0
0x7be: V457 = 0x20
0x7c0: V458 = ADD 0x20 V453
0x7c1: V459 = 0x0
0x7c4: M[V458] = 0x0
0x7c5: V460 = 0x20
0x7c7: V461 = ADD 0x20 V458
0x7c8: V462 = 0x0
0x7cb: M[V461] = 0x0
0x7ce: JUMP 0x45c
---
Entry stack: [V11, 0x106, V61, 0x45c]
Stack pops: 1
Stack additions: [V446]
Exit stack: [V11, 0x106, V61, V446]

================================

Block 0x7cf
[0x7cf:0x805]
---
Predecessors: []
Successors: []
---
0x7cf STOP
0x7d0 LOG1
0x7d1 PUSH6 0x627a7a723058
0x7d8 SHA3
0x7d9 SIGNEXTEND
0x7da PUSH22 0xb1d1a69664b34f697080e4fda182935f106f48876049
0x7f1 PUSH20 0x93be7544cabb1a0029
---
0x7cf: STOP 
0x7d0: LOG S0 S1 S2
0x7d1: V463 = 0x627a7a723058
0x7d8: V464 = SHA3 0x627a7a723058 S3
0x7d9: V465 = SIGNEXTEND V464 S4
0x7da: V466 = 0xb1d1a69664b34f697080e4fda182935f106f48876049
0x7f1: V467 = 0x93be7544cabb1a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x93be7544cabb1a0029, 0xb1d1a69664b34f697080e4fda182935f106f48876049, V465]
Exit stack: []

================================

Function 0:
Public function signature: 0x4b86c225
Entry block: 0x67
Exit block: 0xcf
Body: 0x67, 0x6e, 0x72, 0xcf, 0x201, 0x210, 0x214, 0x41d, 0x421, 0x42e, 0x432, 0x443, 0x447

Function 1:
Public function signature: 0x6198e339
Entry block: 0xe5
Exit block: 0x106
Body: 0xe5, 0xec, 0xf0, 0x106, 0x454, 0x45c, 0x5c0, 0x5c4, 0x5d3, 0x5d7, 0x6b7, 0x6bb, 0x6c8, 0x6cc, 0x6dd, 0x6e1, 0x77a

Function 2:
Public function signature: 0xec034bed
Entry block: 0x108
Exit block: 0x11b
Body: 0x108, 0x10f, 0x113, 0x11b, 0x6e5

Function 3:
Public function signature: 0xf4dadc61
Entry block: 0x15d
Exit block: 0x17e
Body: 0x15d, 0x164, 0x168, 0x17e, 0x70a

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

