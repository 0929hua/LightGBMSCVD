Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x3c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xb4a99a4e
0x34 EQ
0x35 PUSH1 0x3c
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xb4a99a4e
0x34: V9 = EQ 0xb4a99a4e V7
0x35: V10 = 0x3c
0x37: JUMPI 0x3c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x3b]
---
Predecessors: [0x0]
Successors: []
---
0x38 PUSH1 0x0
0x3a DUP1
0x3b REVERT
---
0x38: V11 = 0x0
0x3b: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3c
[0x3c:0x41]
---
Predecessors: [0x0]
Successors: [0x42, 0x46]
---
0x3c JUMPDEST
0x3d CALLVALUE
0x3e ISZERO
0x3f PUSH1 0x46
0x41 JUMPI
---
0x3c: JUMPDEST 
0x3d: V12 = CALLVALUE
0x3e: V13 = ISZERO V12
0x3f: V14 = 0x46
0x41: JUMPI 0x46 V13
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x42
[0x42:0x45]
---
Predecessors: [0x3c]
Successors: []
---
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x46
[0x46:0x4b]
---
Predecessors: [0x3c]
Successors: [0x8e]
---
0x46 JUMPDEST
0x47 PUSH1 0x4c
0x49 PUSH1 0x8e
0x4b JUMP
---
0x46: JUMPDEST 
0x47: V16 = 0x4c
0x49: V17 = 0x8e
0x4b: JUMP 0x8e
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x4c]
Exit stack: [V7, 0x4c]

================================

Block 0x4c
[0x4c:0x8d]
---
Predecessors: [0x8e]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x40
0x4f MLOAD
0x50 DUP1
0x51 DUP3
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d AND
0x7e DUP2
0x7f MSTORE
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP2
0x84 POP
0x85 POP
0x86 PUSH1 0x40
0x88 MLOAD
0x89 DUP1
0x8a SWAP2
0x8b SUB
0x8c SWAP1
0x8d RETURN
---
0x4c: JUMPDEST 
0x4d: V18 = 0x40
0x4f: V19 = M[0x40]
0x52: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x68: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x7f: M[V19] = V23
0x80: V24 = 0x20
0x82: V25 = ADD 0x20 V19
0x86: V26 = 0x40
0x88: V27 = M[0x40]
0x8b: V28 = SUB V25 V27
0x8d: RETURN V27 V28
---
Entry stack: [V7, 0x4c, V35]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x4c]

================================

Block 0x8e
[0x8e:0xb2]
---
Predecessors: [0x46]
Successors: [0x4c]
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 SWAP1
0x93 SLOAD
0x94 SWAP1
0x95 PUSH2 0x100
0x98 EXP
0x99 SWAP1
0x9a DIV
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 DUP2
0xb2 JUMP
---
0x8e: JUMPDEST 
0x8f: V29 = 0x0
0x93: V30 = S[0x0]
0x95: V31 = 0x100
0x98: V32 = EXP 0x100 0x0
0x9a: V33 = DIV V30 0x1
0x9b: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xb2: JUMP 0x4c
---
Entry stack: [V7, 0x4c]
Stack pops: 1
Stack additions: [S0, V35]
Exit stack: [V7, 0x4c, V35]

================================

Block 0xb3
[0xb3:0x11d]
---
Predecessors: []
Successors: [0x11e]
---
0xb3 STOP
0xb4 LOG1
0xb5 PUSH6 0x627a7a723058
0xbc SHA3
0xbd DUP15
0xbe MISSING 0x2d
0xbf MISSING 0x24
0xc0 ADDMOD
0xc1 MISSING 0x22
0xc2 MISSING 0xa8
0xc3 SWAP12
0xc4 MISSING 0xef
0xc5 MISSING 0xab
0xc6 MISSING 0x4d
0xc7 MISSING 0xee
0xc8 MISSING 0x2e
0xc9 MISSING 0xc7
0xca MISSING 0xd6
0xcb MISSING 0x1f
0xcc MISSING 0xc0
0xcd GASLIMIT
0xce NOT
0xcf MISSING 0x28
0xd0 MISSING 0xa5
0xd1 MISSING 0xe6
0xd2 SWAP12
0xd3 MISSING 0xed
0xd4 PUSH31 0xb6b365d45bec9269002960606040523615610076576000357c010000000000
0xf4 STOP
0xf5 STOP
0xf6 STOP
0xf7 STOP
0xf8 STOP
0xf9 STOP
0xfa STOP
0xfb STOP
0xfc STOP
0xfd STOP
0xfe STOP
0xff STOP
0x100 STOP
0x101 STOP
0x102 STOP
0x103 STOP
0x104 STOP
0x105 STOP
0x106 STOP
0x107 STOP
0x108 STOP
0x109 STOP
0x10a STOP
0x10b SWAP1
0x10c DIV
0x10d PUSH4 0xffffffff
0x112 AND
0x113 DUP1
0x114 PUSH4 0x2e1a7d4d
0x119 EQ
0x11a PUSH2 0x78
0x11d JUMPI
---
0xb3: STOP 
0xb4: LOG S0 S1 S2
0xb5: V36 = 0x627a7a723058
0xbc: V37 = SHA3 0x627a7a723058 S3
0xbe: MISSING 0x2d
0xbf: MISSING 0x24
0xc0: V38 = ADDMOD S0 S1 S2
0xc1: MISSING 0x22
0xc2: MISSING 0xa8
0xc4: MISSING 0xef
0xc5: MISSING 0xab
0xc6: MISSING 0x4d
0xc7: MISSING 0xee
0xc8: MISSING 0x2e
0xc9: MISSING 0xc7
0xca: MISSING 0xd6
0xcb: MISSING 0x1f
0xcc: MISSING 0xc0
0xcd: V39 = GASLIMIT
0xce: V40 = NOT V39
0xcf: MISSING 0x28
0xd0: MISSING 0xa5
0xd1: MISSING 0xe6
0xd3: MISSING 0xed
0xd4: V41 = 0xb6b365d45bec9269002960606040523615610076576000357c010000000000
0xf4: STOP 
0xf5: STOP 
0xf6: STOP 
0xf7: STOP 
0xf8: STOP 
0xf9: STOP 
0xfa: STOP 
0xfb: STOP 
0xfc: STOP 
0xfd: STOP 
0xfe: STOP 
0xff: STOP 
0x100: STOP 
0x101: STOP 
0x102: STOP 
0x103: STOP 
0x104: STOP 
0x105: STOP 
0x106: STOP 
0x107: STOP 
0x108: STOP 
0x109: STOP 
0x10a: STOP 
0x10c: V42 = DIV S1 S0
0x10d: V43 = 0xffffffff
0x112: V44 = AND 0xffffffff V42
0x114: V45 = 0x2e1a7d4d
0x119: V46 = EQ 0x2e1a7d4d V44
0x11a: V47 = 0x78
0x11d: THROWI V46
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, V37, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V38, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V40, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0xb6b365d45bec9269002960606040523615610076576000357c010000000000, V44]
Exit stack: []

================================

Block 0x11e
[0x11e:0x128]
---
Predecessors: [0xb3]
Successors: [0x129]
---
0x11e DUP1
0x11f PUSH4 0x41c0e1b5
0x124 EQ
0x125 PUSH2 0x9b
0x128 JUMPI
---
0x11f: V48 = 0x41c0e1b5
0x124: V49 = EQ 0x41c0e1b5 V44
0x125: V50 = 0x9b
0x128: THROWI V49
---
Entry stack: [V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44]

================================

Block 0x129
[0x129:0x133]
---
Predecessors: [0x11e]
Successors: [0x134]
---
0x129 DUP1
0x12a PUSH4 0x6b5e3ca4
0x12f EQ
0x130 PUSH2 0xb0
0x133 JUMPI
---
0x12a: V51 = 0x6b5e3ca4
0x12f: V52 = EQ 0x6b5e3ca4 V44
0x130: V53 = 0xb0
0x133: THROWI V52
---
Entry stack: [V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44]

================================

Block 0x134
[0x134:0x13e]
---
Predecessors: [0x129]
Successors: [0x13f]
---
0x134 DUP1
0x135 PUSH4 0xb4a99a4e
0x13a EQ
0x13b PUSH2 0xc5
0x13e JUMPI
---
0x135: V54 = 0xb4a99a4e
0x13a: V55 = EQ 0xb4a99a4e V44
0x13b: V56 = 0xc5
0x13e: THROWI V55
---
Entry stack: [V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44]

================================

Block 0x13f
[0x13f:0x149]
---
Predecessors: [0x134]
Successors: [0x14a]
---
0x13f DUP1
0x140 PUSH4 0xd0e30db0
0x145 EQ
0x146 PUSH2 0x11a
0x149 JUMPI
---
0x140: V57 = 0xd0e30db0
0x145: V58 = EQ 0xd0e30db0 V44
0x146: V59 = 0x11a
0x149: THROWI V58
---
Entry stack: [V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44]

================================

Block 0x14a
[0x14a:0x154]
---
Predecessors: [0x13f]
Successors: [0x155]
---
0x14a DUP1
0x14b PUSH4 0xfc7e286d
0x150 EQ
0x151 PUSH2 0x124
0x154 JUMPI
---
0x14b: V60 = 0xfc7e286d
0x150: V61 = EQ 0xfc7e286d V44
0x151: V62 = 0x124
0x154: THROWI V61
---
Entry stack: [V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44]

================================

Block 0x155
[0x155:0x15d]
---
Predecessors: [0x14a]
Successors: [0x15e]
---
0x155 JUMPDEST
0x156 STOP
0x157 JUMPDEST
0x158 CALLVALUE
0x159 ISZERO
0x15a PUSH2 0x83
0x15d JUMPI
---
0x155: JUMPDEST 
0x156: STOP 
0x157: JUMPDEST 
0x158: V63 = CALLVALUE
0x159: V64 = ISZERO V63
0x15a: V65 = 0x83
0x15d: THROWI V64
---
Entry stack: [V44]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15e
[0x15e:0x180]
---
Predecessors: [0x155]
Successors: [0x181]
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
0x162 JUMPDEST
0x163 PUSH2 0x99
0x166 PUSH1 0x4
0x168 DUP1
0x169 DUP1
0x16a CALLDATALOAD
0x16b SWAP1
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP1
0x170 SWAP2
0x171 SWAP1
0x172 POP
0x173 POP
0x174 PUSH2 0x171
0x177 JUMP
0x178 JUMPDEST
0x179 STOP
0x17a JUMPDEST
0x17b CALLVALUE
0x17c ISZERO
0x17d PUSH2 0xa6
0x180 JUMPI
---
0x15e: V66 = 0x0
0x161: REVERT 0x0 0x0
0x162: JUMPDEST 
0x163: V67 = 0x99
0x166: V68 = 0x4
0x16a: V69 = CALLDATALOAD 0x4
0x16c: V70 = 0x20
0x16e: V71 = ADD 0x20 0x4
0x174: V72 = 0x171
0x177: THROW 
0x178: JUMPDEST 
0x179: STOP 
0x17a: JUMPDEST 
0x17b: V73 = CALLVALUE
0x17c: V74 = ISZERO V73
0x17d: V75 = 0xa6
0x180: THROWI V74
---
Entry stack: []
Stack pops: 0
Stack additions: [V69, 0x99]
Exit stack: []

================================

Block 0x181
[0x181:0x195]
---
Predecessors: [0x15e]
Successors: [0x196]
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
0x185 JUMPDEST
0x186 PUSH2 0xae
0x189 PUSH2 0x2a8
0x18c JUMP
0x18d JUMPDEST
0x18e STOP
0x18f JUMPDEST
0x190 CALLVALUE
0x191 ISZERO
0x192 PUSH2 0xbb
0x195 JUMPI
---
0x181: V76 = 0x0
0x184: REVERT 0x0 0x0
0x185: JUMPDEST 
0x186: V77 = 0xae
0x189: V78 = 0x2a8
0x18c: THROW 
0x18d: JUMPDEST 
0x18e: STOP 
0x18f: JUMPDEST 
0x190: V79 = CALLVALUE
0x191: V80 = ISZERO V79
0x192: V81 = 0xbb
0x195: THROWI V80
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae]
Exit stack: []

================================

Block 0x196
[0x196:0x1aa]
---
Predecessors: [0x181]
Successors: [0x1ab]
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
0x19a JUMPDEST
0x19b PUSH2 0xc3
0x19e PUSH2 0x33e
0x1a1 JUMP
0x1a2 JUMPDEST
0x1a3 STOP
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0xd0
0x1aa JUMPI
---
0x196: V82 = 0x0
0x199: REVERT 0x0 0x0
0x19a: JUMPDEST 
0x19b: V83 = 0xc3
0x19e: V84 = 0x33e
0x1a1: THROW 
0x1a2: JUMPDEST 
0x1a3: STOP 
0x1a4: JUMPDEST 
0x1a5: V85 = CALLVALUE
0x1a6: V86 = ISZERO V85
0x1a7: V87 = 0xd0
0x1aa: THROWI V86
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc3]
Exit stack: []

================================

Block 0x1ab
[0x1ab:0x209]
---
Predecessors: [0x196]
Successors: [0x20a]
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
0x1af JUMPDEST
0x1b0 PUSH2 0xd8
0x1b3 PUSH2 0x381
0x1b6 JUMP
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb DUP1
0x1bc DUP3
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e8 AND
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee SWAP2
0x1ef POP
0x1f0 POP
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 SWAP2
0x1f6 SUB
0x1f7 SWAP1
0x1f8 RETURN
0x1f9 JUMPDEST
0x1fa PUSH2 0x122
0x1fd PUSH2 0x3a7
0x200 JUMP
0x201 JUMPDEST
0x202 STOP
0x203 JUMPDEST
0x204 CALLVALUE
0x205 ISZERO
0x206 PUSH2 0x12f
0x209 JUMPI
---
0x1ab: V88 = 0x0
0x1ae: REVERT 0x0 0x0
0x1af: JUMPDEST 
0x1b0: V89 = 0xd8
0x1b3: V90 = 0x381
0x1b6: THROW 
0x1b7: JUMPDEST 
0x1b8: V91 = 0x40
0x1ba: V92 = M[0x40]
0x1bd: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1d3: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1ea: M[V92] = V96
0x1eb: V97 = 0x20
0x1ed: V98 = ADD 0x20 V92
0x1f1: V99 = 0x40
0x1f3: V100 = M[0x40]
0x1f6: V101 = SUB V98 V100
0x1f8: RETURN V100 V101
0x1f9: JUMPDEST 
0x1fa: V102 = 0x122
0x1fd: V103 = 0x3a7
0x200: THROW 
0x201: JUMPDEST 
0x202: STOP 
0x203: JUMPDEST 
0x204: V104 = CALLVALUE
0x205: V105 = ISZERO V104
0x206: V106 = 0x12f
0x209: THROWI V105
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd8, 0x122]
Exit stack: []

================================

Block 0x20a
[0x20a:0x2a7]
---
Predecessors: [0x1ab]
Successors: [0x2a8]
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
0x20e JUMPDEST
0x20f PUSH2 0x15b
0x212 PUSH1 0x4
0x214 DUP1
0x215 DUP1
0x216 CALLDATALOAD
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d SWAP1
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP1
0x232 SWAP2
0x233 SWAP1
0x234 POP
0x235 POP
0x236 PUSH2 0x412
0x239 JUMP
0x23a JUMPDEST
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f DUP3
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP2
0x246 POP
0x247 POP
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP1
0x24c SWAP2
0x24d SUB
0x24e SWAP1
0x24f RETURN
0x250 JUMPDEST
0x251 PUSH1 0x0
0x253 DUP1
0x254 PUSH1 0x0
0x256 SWAP1
0x257 SLOAD
0x258 SWAP1
0x259 PUSH2 0x100
0x25c EXP
0x25d SWAP1
0x25e DIV
0x25f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x274 AND
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b CALLER
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 AND
0x2a2 EQ
0x2a3 ISZERO
0x2a4 PUSH2 0x2a4
0x2a7 JUMPI
---
0x20a: V107 = 0x0
0x20d: REVERT 0x0 0x0
0x20e: JUMPDEST 
0x20f: V108 = 0x15b
0x212: V109 = 0x4
0x216: V110 = CALLDATALOAD 0x4
0x217: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x22e: V113 = 0x20
0x230: V114 = ADD 0x20 0x4
0x236: V115 = 0x412
0x239: THROW 
0x23a: JUMPDEST 
0x23b: V116 = 0x40
0x23d: V117 = M[0x40]
0x241: M[V117] = S0
0x242: V118 = 0x20
0x244: V119 = ADD 0x20 V117
0x248: V120 = 0x40
0x24a: V121 = M[0x40]
0x24d: V122 = SUB V119 V121
0x24f: RETURN V121 V122
0x250: JUMPDEST 
0x251: V123 = 0x0
0x254: V124 = 0x0
0x257: V125 = S[0x0]
0x259: V126 = 0x100
0x25c: V127 = EXP 0x100 0x0
0x25e: V128 = DIV V125 0x1
0x25f: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x274: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x275: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x28b: V133 = CALLER
0x28c: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x2a2: V136 = EQ V135 V132
0x2a3: V137 = ISZERO V136
0x2a4: V138 = 0x2a4
0x2a7: THROWI V137
---
Entry stack: []
Stack pops: 0
Stack additions: [V112, 0x15b, 0x0]
Exit stack: []

================================

Block 0x2a8
[0x2a8:0x340]
---
Predecessors: [0x20a]
Successors: [0x341]
---
0x2a8 PUSH1 0x2
0x2aa PUSH1 0x0
0x2ac CALLER
0x2ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c2 AND
0x2c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d8 AND
0x2d9 DUP2
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd ADD
0x2de SWAP1
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 PUSH1 0x0
0x2e6 SHA3
0x2e7 SLOAD
0x2e8 SWAP1
0x2e9 POP
0x2ea CALLVALUE
0x2eb PUSH1 0x2
0x2ed PUSH1 0x0
0x2ef CALLER
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c DUP2
0x31d MSTORE
0x31e PUSH1 0x20
0x320 ADD
0x321 SWAP1
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 ADD
0x327 PUSH1 0x0
0x329 SHA3
0x32a PUSH1 0x0
0x32c DUP3
0x32d DUP3
0x32e SLOAD
0x32f SUB
0x330 SWAP3
0x331 POP
0x332 POP
0x333 DUP2
0x334 SWAP1
0x335 SSTORE
0x336 POP
0x337 DUP1
0x338 DUP3
0x339 GT
0x33a ISZERO
0x33b DUP1
0x33c ISZERO
0x33d PUSH2 0x267
0x340 JUMPI
---
0x2a8: V139 = 0x2
0x2aa: V140 = 0x0
0x2ac: V141 = CALLER
0x2ad: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x2c3: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2da: M[0x0] = V145
0x2db: V146 = 0x20
0x2dd: V147 = ADD 0x20 0x0
0x2e0: M[0x20] = 0x2
0x2e1: V148 = 0x20
0x2e3: V149 = ADD 0x20 0x20
0x2e4: V150 = 0x0
0x2e6: V151 = SHA3 0x0 0x40
0x2e7: V152 = S[V151]
0x2ea: V153 = CALLVALUE
0x2eb: V154 = 0x2
0x2ed: V155 = 0x0
0x2ef: V156 = CALLER
0x2f0: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x306: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x31d: M[0x0] = V160
0x31e: V161 = 0x20
0x320: V162 = ADD 0x20 0x0
0x323: M[0x20] = 0x2
0x324: V163 = 0x20
0x326: V164 = ADD 0x20 0x20
0x327: V165 = 0x0
0x329: V166 = SHA3 0x0 0x40
0x32a: V167 = 0x0
0x32e: V168 = S[V166]
0x32f: V169 = SUB V168 V153
0x335: S[V166] = V169
0x339: V170 = GT S1 V152
0x33a: V171 = ISZERO V170
0x33c: V172 = ISZERO V171
0x33d: V173 = 0x267
0x340: THROWI V172
---
Entry stack: [0x0]
Stack pops: 2
Stack additions: [S1, V152, V171]
Exit stack: [S0, V152, V171]

================================

Block 0x341
[0x341:0x345]
---
Predecessors: [0x2a8]
Successors: [0x346]
---
0x341 POP
0x342 PUSH1 0x0
0x344 DUP2
0x345 GT
---
0x342: V174 = 0x0
0x345: V175 = GT V152 0x0
---
Entry stack: [S2, V152, V171]
Stack pops: 2
Stack additions: [S1, V175]
Exit stack: [S2, V152, V175]

================================

Block 0x346
[0x346:0x34b]
---
Predecessors: [0x341]
Successors: [0x34c]
---
0x346 JUMPDEST
0x347 ISZERO
0x348 PUSH2 0x2a3
0x34b JUMPI
---
0x346: JUMPDEST 
0x347: V176 = ISZERO V175
0x348: V177 = 0x2a3
0x34b: THROWI V176
---
Entry stack: [S2, V152, V175]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V152]

================================

Block 0x34c
[0x34c:0x381]
---
Predecessors: [0x346]
Successors: [0x382]
---
0x34c CALLER
0x34d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x362 AND
0x363 PUSH2 0x8fc
0x366 DUP4
0x367 SWAP1
0x368 DUP2
0x369 ISZERO
0x36a MUL
0x36b SWAP1
0x36c PUSH1 0x40
0x36e MLOAD
0x36f PUSH1 0x0
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 DUP4
0x376 SUB
0x377 DUP2
0x378 DUP6
0x379 DUP9
0x37a DUP9
0x37b CALL
0x37c SWAP4
0x37d POP
0x37e POP
0x37f POP
0x380 POP
0x381 POP
---
0x34c: V178 = CALLER
0x34d: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x362: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x363: V181 = 0x8fc
0x369: V182 = ISZERO S1
0x36a: V183 = MUL V182 0x8fc
0x36c: V184 = 0x40
0x36e: V185 = M[0x40]
0x36f: V186 = 0x0
0x371: V187 = 0x40
0x373: V188 = M[0x40]
0x376: V189 = SUB V185 V188
0x37b: V190 = CALL V183 V180 S1 V188 V189 V188 0x0
---
Entry stack: [S1, V152]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, V152]

================================

Block 0x382
[0x382:0x382]
---
Predecessors: [0x34c]
Successors: [0x383]
---
0x382 JUMPDEST
---
0x382: JUMPDEST 
---
Entry stack: [S1, V152]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V152]

================================

Block 0x383
[0x383:0x3dc]
---
Predecessors: [0x382]
Successors: [0x3dd]
---
0x383 JUMPDEST
0x384 POP
0x385 POP
0x386 JUMP
0x387 JUMPDEST
0x388 PUSH1 0x0
0x38a DUP1
0x38b SWAP1
0x38c SLOAD
0x38d SWAP1
0x38e PUSH2 0x100
0x391 EXP
0x392 SWAP1
0x393 DIV
0x394 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a9 AND
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf AND
0x3c0 CALLER
0x3c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d6 AND
0x3d7 EQ
0x3d8 ISZERO
0x3d9 PUSH2 0x33c
0x3dc JUMPI
---
0x383: JUMPDEST 
0x386: JUMP S2
0x387: JUMPDEST 
0x388: V191 = 0x0
0x38c: V192 = S[0x0]
0x38e: V193 = 0x100
0x391: V194 = EXP 0x100 0x0
0x393: V195 = DIV V192 0x1
0x394: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a9: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x3aa: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x3c0: V200 = CALLER
0x3c1: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x3d7: V203 = EQ V202 V199
0x3d8: V204 = ISZERO V203
0x3d9: V205 = 0x33c
0x3dc: THROWI V204
---
Entry stack: [S1, V152]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x3dd
[0x3dd:0x3fd]
---
Predecessors: [0x383]
Successors: [0x3fe]
---
0x3dd PUSH1 0x0
0x3df ADDRESS
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 BALANCE
0x3f7 EQ
0x3f8 ISZERO
0x3f9 ISZERO
0x3fa PUSH2 0x323
0x3fd JUMPI
---
0x3dd: V206 = 0x0
0x3df: V207 = ADDRESS
0x3e0: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3f6: V210 = BALANCE V209
0x3f7: V211 = EQ V210 0x0
0x3f8: V212 = ISZERO V211
0x3f9: V213 = ISZERO V212
0x3fa: V214 = 0x323
0x3fd: THROWI V213
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fe
[0x3fe:0x497]
---
Predecessors: [0x3dd]
Successors: [0x498]
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
0x402 JUMPDEST
0x403 CALLER
0x404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x419 AND
0x41a SELFDESTRUCT
0x41b JUMPDEST
0x41c JUMP
0x41d JUMPDEST
0x41e CALLER
0x41f PUSH1 0x1
0x421 PUSH1 0x0
0x423 PUSH2 0x100
0x426 EXP
0x427 DUP2
0x428 SLOAD
0x429 DUP2
0x42a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43f MUL
0x440 NOT
0x441 AND
0x442 SWAP1
0x443 DUP4
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a MUL
0x45b OR
0x45c SWAP1
0x45d SSTORE
0x45e POP
0x45f JUMP
0x460 JUMPDEST
0x461 PUSH1 0x1
0x463 PUSH1 0x0
0x465 SWAP1
0x466 SLOAD
0x467 SWAP1
0x468 PUSH2 0x100
0x46b EXP
0x46c SWAP1
0x46d DIV
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 DUP2
0x485 JUMP
0x486 JUMPDEST
0x487 PUSH8 0xde0b6b3a7640000
0x490 CALLVALUE
0x491 LT
0x492 ISZERO
0x493 ISZERO
0x494 PUSH2 0x40a
0x497 JUMPI
---
0x3fe: V215 = 0x0
0x401: REVERT 0x0 0x0
0x402: JUMPDEST 
0x403: V216 = CALLER
0x404: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x419: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x41a: SELFDESTRUCT V218
0x41b: JUMPDEST 
0x41c: JUMP S0
0x41d: JUMPDEST 
0x41e: V219 = CALLER
0x41f: V220 = 0x1
0x421: V221 = 0x0
0x423: V222 = 0x100
0x426: V223 = EXP 0x100 0x0
0x428: V224 = S[0x1]
0x42a: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V226 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x440: V227 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x441: V228 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V224
0x444: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x45a: V231 = MUL V230 0x1
0x45b: V232 = OR V231 V228
0x45d: S[0x1] = V232
0x45f: JUMP S0
0x460: JUMPDEST 
0x461: V233 = 0x1
0x463: V234 = 0x0
0x466: V235 = S[0x1]
0x468: V236 = 0x100
0x46b: V237 = EXP 0x100 0x0
0x46d: V238 = DIV V235 0x1
0x46e: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x485: JUMP S0
0x486: JUMPDEST 
0x487: V241 = 0xde0b6b3a7640000
0x490: V242 = CALLVALUE
0x491: V243 = LT V242 0xde0b6b3a7640000
0x492: V244 = ISZERO V243
0x493: V245 = ISZERO V244
0x494: V246 = 0x40a
0x497: THROWI V245
---
Entry stack: []
Stack pops: 0
Stack additions: [V240, S0]
Exit stack: []

================================

Block 0x498
[0x498:0x4ee]
---
Predecessors: [0x3fe]
Successors: [0x4ef]
---
0x498 CALLVALUE
0x499 PUSH1 0x2
0x49b PUSH1 0x0
0x49d CALLER
0x49e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b3 AND
0x4b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c9 AND
0x4ca DUP2
0x4cb MSTORE
0x4cc PUSH1 0x20
0x4ce ADD
0x4cf SWAP1
0x4d0 DUP2
0x4d1 MSTORE
0x4d2 PUSH1 0x20
0x4d4 ADD
0x4d5 PUSH1 0x0
0x4d7 SHA3
0x4d8 PUSH1 0x0
0x4da DUP3
0x4db DUP3
0x4dc SLOAD
0x4dd ADD
0x4de SWAP3
0x4df POP
0x4e0 POP
0x4e1 DUP2
0x4e2 SWAP1
0x4e3 SSTORE
0x4e4 POP
0x4e5 PUSH2 0x40f
0x4e8 JUMP
0x4e9 JUMPDEST
0x4ea PUSH2 0x410
0x4ed JUMP
0x4ee JUMPDEST
---
0x498: V247 = CALLVALUE
0x499: V248 = 0x2
0x49b: V249 = 0x0
0x49d: V250 = CALLER
0x49e: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b3: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x4b4: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x4cb: M[0x0] = V254
0x4cc: V255 = 0x20
0x4ce: V256 = ADD 0x20 0x0
0x4d1: M[0x20] = 0x2
0x4d2: V257 = 0x20
0x4d4: V258 = ADD 0x20 0x20
0x4d5: V259 = 0x0
0x4d7: V260 = SHA3 0x0 0x40
0x4d8: V261 = 0x0
0x4dc: V262 = S[V260]
0x4dd: V263 = ADD V262 V247
0x4e3: S[V260] = V263
0x4e5: V264 = 0x40f
0x4e8: THROW 
0x4e9: JUMPDEST 
0x4ea: V265 = 0x410
0x4ed: THROW 
0x4ee: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4ef
[0x4ef:0x535]
---
Predecessors: [0x498]
Successors: []
---
0x4ef JUMPDEST
0x4f0 JUMP
0x4f1 JUMPDEST
0x4f2 PUSH1 0x2
0x4f4 PUSH1 0x20
0x4f6 MSTORE
0x4f7 DUP1
0x4f8 PUSH1 0x0
0x4fa MSTORE
0x4fb PUSH1 0x40
0x4fd PUSH1 0x0
0x4ff SHA3
0x500 PUSH1 0x0
0x502 SWAP2
0x503 POP
0x504 SWAP1
0x505 POP
0x506 SLOAD
0x507 DUP2
0x508 JUMP
0x509 STOP
0x50a LOG1
0x50b PUSH6 0x627a7a723058
0x512 SHA3
0x513 MISSING 0xb0
0x514 MISSING 0xca
0x515 DUP14
0x516 MISSING 0xbf
0x517 MISSING 0xdd
0x518 MISSING 0xc5
0x519 MISSING 0xb3
0x51a MISSING 0xec
0x51b LOG4
0x51c PUSH25 0xc291e0b134c34fc7c600144c98d06c720ad3062c80b70029
---
0x4ef: JUMPDEST 
0x4f0: JUMP S0
0x4f1: JUMPDEST 
0x4f2: V266 = 0x2
0x4f4: V267 = 0x20
0x4f6: M[0x20] = 0x2
0x4f8: V268 = 0x0
0x4fa: M[0x0] = S0
0x4fb: V269 = 0x40
0x4fd: V270 = 0x0
0x4ff: V271 = SHA3 0x0 0x40
0x500: V272 = 0x0
0x506: V273 = S[V271]
0x508: JUMP S1
0x509: STOP 
0x50a: LOG S0 S1 S2
0x50b: V274 = 0x627a7a723058
0x512: V275 = SHA3 0x627a7a723058 S3
0x513: MISSING 0xb0
0x514: MISSING 0xca
0x516: MISSING 0xbf
0x517: MISSING 0xdd
0x518: MISSING 0xc5
0x519: MISSING 0xb3
0x51a: MISSING 0xec
0x51b: LOG S0 S1 S2 S3 S4 S5
0x51c: V276 = 0xc291e0b134c34fc7c600144c98d06c720ad3062c80b70029
---
Entry stack: []
Stack pops: 216
Stack additions: [0xc291e0b134c34fc7c600144c98d06c720ad3062c80b70029]
Exit stack: []

================================

Function 0:
Public function signature: 0xb4a99a4e
Entry block: 0x3c
Exit block: 0x4c
Body: 0x3c, 0x42, 0x46, 0x4c, 0x8e

Function 1:
Public fallback function
Entry block: 0x38
Exit block: 0x38
Body: 0x38

