Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x715018a6
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x715018a6
0x3c: V13 = EQ 0x715018a6 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x73]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x73
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x73
0x4b: JUMPI 0x73 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xca]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0xca
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0xca
0x56: JUMPI 0xca V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x10d]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x10d
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x10d
0x70: JUMP 0x10d
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: [0x168]
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0x41, 0x423]
Successors: [0x7b, 0x7f]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x73: JUMPDEST 
0x74: V28 = CALLVALUE
0x76: V29 = ISZERO V28
0x77: V30 = 0x7f
0x7a: JUMPI 0x7f V29
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V28]
Exit stack: [S0, V28]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x73]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V31 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [S1, V28]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V28]

================================

Block 0x7f
[0x7f:0x87]
---
Predecessors: [0x73]
Successors: [0x20f]
---
0x7f JUMPDEST
0x80 POP
0x81 PUSH2 0x88
0x84 PUSH2 0x20f
0x87 JUMP
---
0x7f: JUMPDEST 
0x81: V32 = 0x88
0x84: V33 = 0x20f
0x87: JUMP 0x20f
---
Entry stack: [S1, V28]
Stack pops: 1
Stack additions: [0x88]
Exit stack: [S1, 0x88]

================================

Block 0x88
[0x88:0xc9]
---
Predecessors: [0x20f]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d DUP3
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0x88: JUMPDEST 
0x89: V34 = 0x40
0x8b: V35 = M[0x40]
0x8e: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0xa4: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbb: M[V35] = V39
0xbc: V40 = 0x20
0xbe: V41 = ADD 0x20 V35
0xc2: V42 = 0x40
0xc4: V43 = M[0x40]
0xc7: V44 = SUB V41 V43
0xc9: RETURN V43 V44
---
Entry stack: [V207, 0x88, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V207, 0x88]

================================

Block 0xca
[0xca:0xd1]
---
Predecessors: [0x4c]
Successors: [0xd2, 0xd6]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc DUP1
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xca: JUMPDEST 
0xcb: V45 = CALLVALUE
0xcd: V46 = ISZERO V45
0xce: V47 = 0xd6
0xd1: JUMPI 0xd6 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xca]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V48 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xd6
[0xd6:0x10a]
---
Predecessors: [0xca]
Successors: [0x234]
---
0xd6 JUMPDEST
0xd7 POP
0xd8 PUSH2 0x10b
0xdb PUSH1 0x4
0xdd DUP1
0xde CALLDATASIZE
0xdf SUB
0xe0 DUP2
0xe1 ADD
0xe2 SWAP1
0xe3 DUP1
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 SWAP3
0x102 SWAP2
0x103 SWAP1
0x104 POP
0x105 POP
0x106 POP
0x107 PUSH2 0x234
0x10a JUMP
---
0xd6: JUMPDEST 
0xd8: V49 = 0x10b
0xdb: V50 = 0x4
0xde: V51 = CALLDATASIZE
0xdf: V52 = SUB V51 0x4
0xe1: V53 = ADD 0x4 V52
0xe5: V54 = CALLDATALOAD 0x4
0xe6: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xfd: V57 = 0x20
0xff: V58 = ADD 0x20 0x4
0x107: V59 = 0x234
0x10a: JUMP 0x234
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0x10b, V56]
Exit stack: [V11, 0x10b, V56]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x298]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x163]
---
Predecessors: [0x68]
Successors: [0x164, 0x168]
---
0x10d JUMPDEST
0x10e PUSH1 0x0
0x110 DUP1
0x111 SWAP1
0x112 SLOAD
0x113 SWAP1
0x114 PUSH2 0x100
0x117 EXP
0x118 SWAP1
0x119 DIV
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 CALLER
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d EQ
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x10d: JUMPDEST 
0x10e: V60 = 0x0
0x112: V61 = S[0x0]
0x114: V62 = 0x100
0x117: V63 = EXP 0x100 0x0
0x119: V64 = DIV V61 0x1
0x11a: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x130: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x146: V69 = CALLER
0x147: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x15d: V72 = EQ V71 V68
0x15e: V73 = ISZERO V72
0x15f: V74 = ISZERO V73
0x160: V75 = 0x168
0x163: JUMPI 0x168 V74
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x10d]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V76 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x168
[0x168:0x20e]
---
Predecessors: [0x10d]
Successors: [0x71]
---
0x168 JUMPDEST
0x169 PUSH1 0x0
0x16b DUP1
0x16c SWAP1
0x16d SLOAD
0x16e SWAP1
0x16f PUSH2 0x100
0x172 EXP
0x173 SWAP1
0x174 DIV
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc LOG2
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 PUSH1 0x0
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 DUP2
0x1d7 SLOAD
0x1d8 DUP2
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee MUL
0x1ef NOT
0x1f0 AND
0x1f1 SWAP1
0x1f2 DUP4
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 MUL
0x20a OR
0x20b SWAP1
0x20c SSTORE
0x20d POP
0x20e JUMP
---
0x168: JUMPDEST 
0x169: V77 = 0x0
0x16d: V78 = S[0x0]
0x16f: V79 = 0x100
0x172: V80 = EXP 0x100 0x0
0x174: V81 = DIV V78 0x1
0x175: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x18b: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a1: V86 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2: V87 = 0x40
0x1c4: V88 = M[0x40]
0x1c5: V89 = 0x40
0x1c7: V90 = M[0x40]
0x1ca: V91 = SUB V88 V90
0x1cc: LOG V90 V91 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V85
0x1cd: V92 = 0x0
0x1d0: V93 = 0x0
0x1d2: V94 = 0x100
0x1d5: V95 = EXP 0x100 0x0
0x1d7: V96 = S[0x0]
0x1d9: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V98 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1ef: V99 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V100 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V96
0x1f3: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x209: V103 = MUL 0x0 0x1
0x20a: V104 = OR 0x0 V100
0x20c: S[0x0] = V104
0x20e: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x233]
---
Predecessors: [0x7f]
Successors: [0x88]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 SWAP1
0x214 SLOAD
0x215 SWAP1
0x216 PUSH2 0x100
0x219 EXP
0x21a SWAP1
0x21b DIV
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 DUP2
0x233 JUMP
---
0x20f: JUMPDEST 
0x210: V105 = 0x0
0x214: V106 = S[0x0]
0x216: V107 = 0x100
0x219: V108 = EXP 0x100 0x0
0x21b: V109 = DIV V106 0x1
0x21c: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x233: JUMP 0x88
---
Entry stack: [S1, 0x88]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [S1, 0x88, V111]

================================

Block 0x234
[0x234:0x28a]
---
Predecessors: [0xd6]
Successors: [0x28b, 0x28f]
---
0x234 JUMPDEST
0x235 PUSH1 0x0
0x237 DUP1
0x238 SWAP1
0x239 SLOAD
0x23a SWAP1
0x23b PUSH2 0x100
0x23e EXP
0x23f SWAP1
0x240 DIV
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d CALLER
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 EQ
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x234: JUMPDEST 
0x235: V112 = 0x0
0x239: V113 = S[0x0]
0x23b: V114 = 0x100
0x23e: V115 = EXP 0x100 0x0
0x240: V116 = DIV V113 0x1
0x241: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x257: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x26d: V121 = CALLER
0x26e: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x284: V124 = EQ V123 V120
0x285: V125 = ISZERO V124
0x286: V126 = ISZERO V125
0x287: V127 = 0x28f
0x28a: JUMPI 0x28f V126
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x234]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V128 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28f
[0x28f:0x297]
---
Predecessors: [0x234]
Successors: [0x29b]
---
0x28f JUMPDEST
0x290 PUSH2 0x298
0x293 DUP2
0x294 PUSH2 0x29b
0x297 JUMP
---
0x28f: JUMPDEST 
0x290: V129 = 0x298
0x294: V130 = 0x29b
0x297: JUMP 0x29b
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 1
Stack additions: [S0, 0x298, S0]
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x298
[0x298:0x29a]
---
Predecessors: [0x2d7]
Successors: [0x10b]
---
0x298 JUMPDEST
0x299 POP
0x29a JUMP
---
0x298: JUMPDEST 
0x29a: JUMP 0x10b
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x29b
[0x29b:0x2d2]
---
Predecessors: [0x28f]
Successors: [0x2d3, 0x2d7]
---
0x29b JUMPDEST
0x29c PUSH1 0x0
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 DUP2
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb EQ
0x2cc ISZERO
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x29b: JUMPDEST 
0x29c: V131 = 0x0
0x29e: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x2b5: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2cb: V136 = EQ V135 0x0
0x2cc: V137 = ISZERO V136
0x2cd: V138 = ISZERO V137
0x2ce: V139 = ISZERO V138
0x2cf: V140 = 0x2d7
0x2d2: JUMPI 0x2d7 V139
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x29b]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V141 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x2d7
[0x2d7:0x394]
---
Predecessors: [0x29b]
Successors: [0x298]
---
0x2d7 JUMPDEST
0x2d8 DUP1
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 SWAP1
0x2f3 SLOAD
0x2f4 SWAP1
0x2f5 PUSH2 0x100
0x2f8 EXP
0x2f9 SWAP1
0x2fa DIV
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x348 PUSH1 0x40
0x34a MLOAD
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 LOG3
0x353 DUP1
0x354 PUSH1 0x0
0x356 DUP1
0x357 PUSH2 0x100
0x35a EXP
0x35b DUP2
0x35c SLOAD
0x35d DUP2
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 MUL
0x374 NOT
0x375 AND
0x376 SWAP1
0x377 DUP4
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d AND
0x38e MUL
0x38f OR
0x390 SWAP1
0x391 SSTORE
0x392 POP
0x393 POP
0x394 JUMP
---
0x2d7: JUMPDEST 
0x2d9: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2ef: V144 = 0x0
0x2f3: V145 = S[0x0]
0x2f5: V146 = 0x100
0x2f8: V147 = EXP 0x100 0x0
0x2fa: V148 = DIV V145 0x1
0x2fb: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x311: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x327: V153 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x348: V154 = 0x40
0x34a: V155 = M[0x40]
0x34b: V156 = 0x40
0x34d: V157 = M[0x40]
0x350: V158 = SUB V155 V157
0x352: LOG V157 V158 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V152 V143
0x354: V159 = 0x0
0x357: V160 = 0x100
0x35a: V161 = EXP 0x100 0x0
0x35c: V162 = S[0x0]
0x35e: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V164 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x374: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x375: V166 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V162
0x378: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x38e: V169 = MUL V168 0x1
0x38f: V170 = OR V169 V166
0x391: S[0x0] = V170
0x394: JUMP 0x298
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x395
[0x395:0x3cd]
---
Predecessors: []
Successors: [0x3ce]
---
0x395 STOP
0x396 LOG1
0x397 PUSH6 0x627a7a723058
0x39e SHA3
0x39f PC
0x3a0 PUSH7 0x632d8ff58de5fd
0x3a8 MISSING 0x2a
0x3a9 MISSING 0xa6
0x3aa MISSING 0xe9
0x3ab DUP9
0x3ac CALL
0x3ad MISSING 0x24
0x3ae MISSING 0x47
0x3af RETURNDATASIZE
0x3b0 MISSING 0x2e
0x3b1 MISSING 0xd4
0x3b2 MISSING 0x4e
0x3b3 SWAP12
0x3b4 OR
0x3b5 LOG0
0x3b6 CODESIZE
0x3b7 MISSING 0x2c
0x3b8 CALLDATACOPY
0x3b9 TIMESTAMP
0x3ba MISSING 0xcb
0x3bb SDIV
0x3bc PUSH2 0x6ceb
0x3bf STOP
0x3c0 MISSING 0x29
0x3c1 PUSH1 0x80
0x3c3 PUSH1 0x40
0x3c5 MSTORE
0x3c6 PUSH1 0x4
0x3c8 CALLDATASIZE
0x3c9 LT
0x3ca PUSH2 0x62
0x3cd JUMPI
---
0x395: STOP 
0x396: LOG S0 S1 S2
0x397: V171 = 0x627a7a723058
0x39e: V172 = SHA3 0x627a7a723058 S3
0x39f: V173 = PC
0x3a0: V174 = 0x632d8ff58de5fd
0x3a8: MISSING 0x2a
0x3a9: MISSING 0xa6
0x3aa: MISSING 0xe9
0x3ac: V175 = CALL S8 S0 S1 S2 S3 S4 S5
0x3ad: MISSING 0x24
0x3ae: MISSING 0x47
0x3af: V176 = RETURNDATASIZE
0x3b0: MISSING 0x2e
0x3b1: MISSING 0xd4
0x3b2: MISSING 0x4e
0x3b4: V177 = OR S12 S1
0x3b5: LOG V177 S2
0x3b6: V178 = CODESIZE
0x3b7: MISSING 0x2c
0x3b8: CALLDATACOPY S0 S1 S2
0x3b9: V179 = TIMESTAMP
0x3ba: MISSING 0xcb
0x3bb: V180 = SDIV S0 S1
0x3bc: V181 = 0x6ceb
0x3bf: STOP 
0x3c0: MISSING 0x29
0x3c1: V182 = 0x80
0x3c3: V183 = 0x40
0x3c5: M[0x40] = 0x80
0x3c6: V184 = 0x4
0x3c8: V185 = CALLDATASIZE
0x3c9: V186 = LT V185 0x4
0x3ca: V187 = 0x62
0x3cd: THROWI V186
---
Entry stack: []
Stack pops: 0
Stack additions: [0x632d8ff58de5fd, V173, V172, V175, S6, S7, S8, V176, V178, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V179, 0x6ceb, V180]
Exit stack: []

================================

Block 0x3ce
[0x3ce:0x401]
---
Predecessors: [0x395]
Successors: [0x402]
---
0x3ce PUSH1 0x0
0x3d0 CALLDATALOAD
0x3d1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3ef SWAP1
0x3f0 DIV
0x3f1 PUSH4 0xffffffff
0x3f6 AND
0x3f7 DUP1
0x3f8 PUSH4 0x715018a6
0x3fd EQ
0x3fe PUSH2 0x67
0x401 JUMPI
---
0x3ce: V188 = 0x0
0x3d0: V189 = CALLDATALOAD 0x0
0x3d1: V190 = 0x100000000000000000000000000000000000000000000000000000000
0x3f0: V191 = DIV V189 0x100000000000000000000000000000000000000000000000000000000
0x3f1: V192 = 0xffffffff
0x3f6: V193 = AND 0xffffffff V191
0x3f8: V194 = 0x715018a6
0x3fd: V195 = EQ 0x715018a6 V193
0x3fe: V196 = 0x67
0x401: THROWI V195
---
Entry stack: []
Stack pops: 0
Stack additions: [V193]
Exit stack: [V193]

================================

Block 0x402
[0x402:0x40c]
---
Predecessors: [0x3ce]
Successors: [0x40d]
---
0x402 DUP1
0x403 PUSH4 0x8da5cb5b
0x408 EQ
0x409 PUSH2 0x7e
0x40c JUMPI
---
0x403: V197 = 0x8da5cb5b
0x408: V198 = EQ 0x8da5cb5b V193
0x409: V199 = 0x7e
0x40c: THROWI V198
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x40d
[0x40d:0x417]
---
Predecessors: [0x402]
Successors: [0x418]
---
0x40d DUP1
0x40e PUSH4 0xd8267fef
0x413 EQ
0x414 PUSH2 0xd5
0x417 JUMPI
---
0x40e: V200 = 0xd8267fef
0x413: V201 = EQ 0xd8267fef V193
0x414: V202 = 0xd5
0x417: THROWI V201
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x418
[0x418:0x422]
---
Predecessors: [0x40d]
Successors: [0x423]
---
0x418 DUP1
0x419 PUSH4 0xf2fde38b
0x41e EQ
0x41f PUSH2 0x189
0x422 JUMPI
---
0x419: V203 = 0xf2fde38b
0x41e: V204 = EQ 0xf2fde38b V193
0x41f: V205 = 0x189
0x422: THROWI V204
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x423
[0x423:0x42f]
---
Predecessors: [0x418]
Successors: [0x73, 0x430]
---
0x423 JUMPDEST
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
0x428 JUMPDEST
0x429 CALLVALUE
0x42a DUP1
0x42b ISZERO
0x42c PUSH2 0x73
0x42f JUMPI
---
0x423: JUMPDEST 
0x424: V206 = 0x0
0x427: REVERT 0x0 0x0
0x428: JUMPDEST 
0x429: V207 = CALLVALUE
0x42b: V208 = ISZERO V207
0x42c: V209 = 0x73
0x42f: JUMPI 0x73 V208
---
Entry stack: [V193]
Stack pops: 0
Stack additions: [V207]
Exit stack: []

================================

Block 0x430
[0x430:0x446]
---
Predecessors: [0x423]
Successors: [0x447]
---
0x430 PUSH1 0x0
0x432 DUP1
0x433 REVERT
0x434 JUMPDEST
0x435 POP
0x436 PUSH2 0x7c
0x439 PUSH2 0x1cc
0x43c JUMP
0x43d JUMPDEST
0x43e STOP
0x43f JUMPDEST
0x440 CALLVALUE
0x441 DUP1
0x442 ISZERO
0x443 PUSH2 0x8a
0x446 JUMPI
---
0x430: V210 = 0x0
0x433: REVERT 0x0 0x0
0x434: JUMPDEST 
0x436: V211 = 0x7c
0x439: V212 = 0x1cc
0x43c: THROW 
0x43d: JUMPDEST 
0x43e: STOP 
0x43f: JUMPDEST 
0x440: V213 = CALLVALUE
0x442: V214 = ISZERO V213
0x443: V215 = 0x8a
0x446: THROWI V214
---
Entry stack: [V207]
Stack pops: 0
Stack additions: [0x7c, V213]
Exit stack: []

================================

Block 0x447
[0x447:0x551]
---
Predecessors: [0x430]
Successors: [0x552]
---
0x447 PUSH1 0x0
0x449 DUP1
0x44a REVERT
0x44b JUMPDEST
0x44c POP
0x44d PUSH2 0x93
0x450 PUSH2 0x2ce
0x453 JUMP
0x454 JUMPDEST
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 DUP3
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x485 AND
0x486 DUP2
0x487 MSTORE
0x488 PUSH1 0x20
0x48a ADD
0x48b SWAP2
0x48c POP
0x48d POP
0x48e PUSH1 0x40
0x490 MLOAD
0x491 DUP1
0x492 SWAP2
0x493 SUB
0x494 SWAP1
0x495 RETURN
0x496 JUMPDEST
0x497 PUSH2 0x16f
0x49a PUSH1 0x4
0x49c DUP1
0x49d CALLDATASIZE
0x49e SUB
0x49f DUP2
0x4a0 ADD
0x4a1 SWAP1
0x4a2 DUP1
0x4a3 DUP1
0x4a4 CALLDATALOAD
0x4a5 SWAP1
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 SWAP1
0x4aa DUP3
0x4ab ADD
0x4ac DUP1
0x4ad CALLDATALOAD
0x4ae SWAP1
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 SWAP1
0x4b3 DUP1
0x4b4 DUP1
0x4b5 PUSH1 0x20
0x4b7 MUL
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be SWAP1
0x4bf DUP2
0x4c0 ADD
0x4c1 PUSH1 0x40
0x4c3 MSTORE
0x4c4 DUP1
0x4c5 SWAP4
0x4c6 SWAP3
0x4c7 SWAP2
0x4c8 SWAP1
0x4c9 DUP2
0x4ca DUP2
0x4cb MSTORE
0x4cc PUSH1 0x20
0x4ce ADD
0x4cf DUP4
0x4d0 DUP4
0x4d1 PUSH1 0x20
0x4d3 MUL
0x4d4 DUP1
0x4d5 DUP3
0x4d6 DUP5
0x4d7 CALLDATACOPY
0x4d8 DUP3
0x4d9 ADD
0x4da SWAP2
0x4db POP
0x4dc POP
0x4dd POP
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 SWAP2
0x4e2 SWAP3
0x4e3 SWAP2
0x4e4 SWAP3
0x4e5 SWAP1
0x4e6 DUP1
0x4e7 CALLDATALOAD
0x4e8 SWAP1
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec SWAP1
0x4ed DUP3
0x4ee ADD
0x4ef DUP1
0x4f0 CALLDATALOAD
0x4f1 SWAP1
0x4f2 PUSH1 0x20
0x4f4 ADD
0x4f5 SWAP1
0x4f6 DUP1
0x4f7 DUP1
0x4f8 PUSH1 0x20
0x4fa MUL
0x4fb PUSH1 0x20
0x4fd ADD
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 SWAP1
0x502 DUP2
0x503 ADD
0x504 PUSH1 0x40
0x506 MSTORE
0x507 DUP1
0x508 SWAP4
0x509 SWAP3
0x50a SWAP2
0x50b SWAP1
0x50c DUP2
0x50d DUP2
0x50e MSTORE
0x50f PUSH1 0x20
0x511 ADD
0x512 DUP4
0x513 DUP4
0x514 PUSH1 0x20
0x516 MUL
0x517 DUP1
0x518 DUP3
0x519 DUP5
0x51a CALLDATACOPY
0x51b DUP3
0x51c ADD
0x51d SWAP2
0x51e POP
0x51f POP
0x520 POP
0x521 POP
0x522 POP
0x523 POP
0x524 SWAP2
0x525 SWAP3
0x526 SWAP2
0x527 SWAP3
0x528 SWAP1
0x529 POP
0x52a POP
0x52b POP
0x52c PUSH2 0x2f3
0x52f JUMP
0x530 JUMPDEST
0x531 PUSH1 0x40
0x533 MLOAD
0x534 DUP1
0x535 DUP3
0x536 ISZERO
0x537 ISZERO
0x538 ISZERO
0x539 ISZERO
0x53a DUP2
0x53b MSTORE
0x53c PUSH1 0x20
0x53e ADD
0x53f SWAP2
0x540 POP
0x541 POP
0x542 PUSH1 0x40
0x544 MLOAD
0x545 DUP1
0x546 SWAP2
0x547 SUB
0x548 SWAP1
0x549 RETURN
0x54a JUMPDEST
0x54b CALLVALUE
0x54c DUP1
0x54d ISZERO
0x54e PUSH2 0x195
0x551 JUMPI
---
0x447: V216 = 0x0
0x44a: REVERT 0x0 0x0
0x44b: JUMPDEST 
0x44d: V217 = 0x93
0x450: V218 = 0x2ce
0x453: THROW 
0x454: JUMPDEST 
0x455: V219 = 0x40
0x457: V220 = M[0x40]
0x45a: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x470: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x485: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x487: M[V220] = V224
0x488: V225 = 0x20
0x48a: V226 = ADD 0x20 V220
0x48e: V227 = 0x40
0x490: V228 = M[0x40]
0x493: V229 = SUB V226 V228
0x495: RETURN V228 V229
0x496: JUMPDEST 
0x497: V230 = 0x16f
0x49a: V231 = 0x4
0x49d: V232 = CALLDATASIZE
0x49e: V233 = SUB V232 0x4
0x4a0: V234 = ADD 0x4 V233
0x4a4: V235 = CALLDATALOAD 0x4
0x4a6: V236 = 0x20
0x4a8: V237 = ADD 0x20 0x4
0x4ab: V238 = ADD 0x4 V235
0x4ad: V239 = CALLDATALOAD V238
0x4af: V240 = 0x20
0x4b1: V241 = ADD 0x20 V238
0x4b5: V242 = 0x20
0x4b7: V243 = MUL 0x20 V239
0x4b8: V244 = 0x20
0x4ba: V245 = ADD 0x20 V243
0x4bb: V246 = 0x40
0x4bd: V247 = M[0x40]
0x4c0: V248 = ADD V247 V245
0x4c1: V249 = 0x40
0x4c3: M[0x40] = V248
0x4cb: M[V247] = V239
0x4cc: V250 = 0x20
0x4ce: V251 = ADD 0x20 V247
0x4d1: V252 = 0x20
0x4d3: V253 = MUL 0x20 V239
0x4d7: CALLDATACOPY V251 V241 V253
0x4d9: V254 = ADD V251 V253
0x4e7: V255 = CALLDATALOAD 0x24
0x4e9: V256 = 0x20
0x4eb: V257 = ADD 0x20 0x24
0x4ee: V258 = ADD 0x4 V255
0x4f0: V259 = CALLDATALOAD V258
0x4f2: V260 = 0x20
0x4f4: V261 = ADD 0x20 V258
0x4f8: V262 = 0x20
0x4fa: V263 = MUL 0x20 V259
0x4fb: V264 = 0x20
0x4fd: V265 = ADD 0x20 V263
0x4fe: V266 = 0x40
0x500: V267 = M[0x40]
0x503: V268 = ADD V267 V265
0x504: V269 = 0x40
0x506: M[0x40] = V268
0x50e: M[V267] = V259
0x50f: V270 = 0x20
0x511: V271 = ADD 0x20 V267
0x514: V272 = 0x20
0x516: V273 = MUL 0x20 V259
0x51a: CALLDATACOPY V271 V261 V273
0x51c: V274 = ADD V271 V273
0x52c: V275 = 0x2f3
0x52f: THROW 
0x530: JUMPDEST 
0x531: V276 = 0x40
0x533: V277 = M[0x40]
0x536: V278 = ISZERO S0
0x537: V279 = ISZERO V278
0x538: V280 = ISZERO V279
0x539: V281 = ISZERO V280
0x53b: M[V277] = V281
0x53c: V282 = 0x20
0x53e: V283 = ADD 0x20 V277
0x542: V284 = 0x40
0x544: V285 = M[0x40]
0x547: V286 = SUB V283 V285
0x549: RETURN V285 V286
0x54a: JUMPDEST 
0x54b: V287 = CALLVALUE
0x54d: V288 = ISZERO V287
0x54e: V289 = 0x195
0x551: THROWI V288
---
Entry stack: [V213]
Stack pops: 0
Stack additions: [0x93, V267, V247, 0x16f, V287]
Exit stack: []

================================

Block 0x552
[0x552:0x5e3]
---
Predecessors: [0x447]
Successors: [0x5e4]
---
0x552 PUSH1 0x0
0x554 DUP1
0x555 REVERT
0x556 JUMPDEST
0x557 POP
0x558 PUSH2 0x1ca
0x55b PUSH1 0x4
0x55d DUP1
0x55e CALLDATASIZE
0x55f SUB
0x560 DUP2
0x561 ADD
0x562 SWAP1
0x563 DUP1
0x564 DUP1
0x565 CALLDATALOAD
0x566 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57b AND
0x57c SWAP1
0x57d PUSH1 0x20
0x57f ADD
0x580 SWAP1
0x581 SWAP3
0x582 SWAP2
0x583 SWAP1
0x584 POP
0x585 POP
0x586 POP
0x587 PUSH2 0x404
0x58a JUMP
0x58b JUMPDEST
0x58c STOP
0x58d JUMPDEST
0x58e PUSH1 0x0
0x590 DUP1
0x591 SWAP1
0x592 SLOAD
0x593 SWAP1
0x594 PUSH2 0x100
0x597 EXP
0x598 SWAP1
0x599 DIV
0x59a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5af AND
0x5b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c5 AND
0x5c6 CALLER
0x5c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dc AND
0x5dd EQ
0x5de ISZERO
0x5df ISZERO
0x5e0 PUSH2 0x227
0x5e3 JUMPI
---
0x552: V290 = 0x0
0x555: REVERT 0x0 0x0
0x556: JUMPDEST 
0x558: V291 = 0x1ca
0x55b: V292 = 0x4
0x55e: V293 = CALLDATASIZE
0x55f: V294 = SUB V293 0x4
0x561: V295 = ADD 0x4 V294
0x565: V296 = CALLDATALOAD 0x4
0x566: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x57b: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x57d: V299 = 0x20
0x57f: V300 = ADD 0x20 0x4
0x587: V301 = 0x404
0x58a: THROW 
0x58b: JUMPDEST 
0x58c: STOP 
0x58d: JUMPDEST 
0x58e: V302 = 0x0
0x592: V303 = S[0x0]
0x594: V304 = 0x100
0x597: V305 = EXP 0x100 0x0
0x599: V306 = DIV V303 0x1
0x59a: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x5af: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x5b0: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x5c6: V311 = CALLER
0x5c7: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dc: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x5dd: V314 = EQ V313 V310
0x5de: V315 = ISZERO V314
0x5df: V316 = ISZERO V315
0x5e0: V317 = 0x227
0x5e3: THROWI V316
---
Entry stack: [V287]
Stack pops: 0
Stack additions: [V298, 0x1ca]
Exit stack: []

================================

Block 0x5e4
[0x5e4:0x70f]
---
Predecessors: [0x552]
Successors: [0x710]
---
0x5e4 PUSH1 0x0
0x5e6 DUP1
0x5e7 REVERT
0x5e8 JUMPDEST
0x5e9 PUSH1 0x0
0x5eb DUP1
0x5ec SWAP1
0x5ed SLOAD
0x5ee SWAP1
0x5ef PUSH2 0x100
0x5f2 EXP
0x5f3 SWAP1
0x5f4 DIV
0x5f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60a AND
0x60b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x620 AND
0x621 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x642 PUSH1 0x40
0x644 MLOAD
0x645 PUSH1 0x40
0x647 MLOAD
0x648 DUP1
0x649 SWAP2
0x64a SUB
0x64b SWAP1
0x64c LOG2
0x64d PUSH1 0x0
0x64f DUP1
0x650 PUSH1 0x0
0x652 PUSH2 0x100
0x655 EXP
0x656 DUP2
0x657 SLOAD
0x658 DUP2
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e MUL
0x66f NOT
0x670 AND
0x671 SWAP1
0x672 DUP4
0x673 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x688 AND
0x689 MUL
0x68a OR
0x68b SWAP1
0x68c SSTORE
0x68d POP
0x68e JUMP
0x68f JUMPDEST
0x690 PUSH1 0x0
0x692 DUP1
0x693 SWAP1
0x694 SLOAD
0x695 SWAP1
0x696 PUSH2 0x100
0x699 EXP
0x69a SWAP1
0x69b DIV
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 DUP2
0x6b3 JUMP
0x6b4 JUMPDEST
0x6b5 PUSH1 0x0
0x6b7 DUP1
0x6b8 PUSH1 0x0
0x6ba DUP1
0x6bb PUSH1 0x0
0x6bd SWAP1
0x6be SLOAD
0x6bf SWAP1
0x6c0 PUSH2 0x100
0x6c3 EXP
0x6c4 SWAP1
0x6c5 DIV
0x6c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6db AND
0x6dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f1 AND
0x6f2 CALLER
0x6f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x708 AND
0x709 EQ
0x70a ISZERO
0x70b ISZERO
0x70c PUSH2 0x353
0x70f JUMPI
---
0x5e4: V318 = 0x0
0x5e7: REVERT 0x0 0x0
0x5e8: JUMPDEST 
0x5e9: V319 = 0x0
0x5ed: V320 = S[0x0]
0x5ef: V321 = 0x100
0x5f2: V322 = EXP 0x100 0x0
0x5f4: V323 = DIV V320 0x1
0x5f5: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x60a: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x60b: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x620: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x621: V328 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x642: V329 = 0x40
0x644: V330 = M[0x40]
0x645: V331 = 0x40
0x647: V332 = M[0x40]
0x64a: V333 = SUB V330 V332
0x64c: LOG V332 V333 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V327
0x64d: V334 = 0x0
0x650: V335 = 0x0
0x652: V336 = 0x100
0x655: V337 = EXP 0x100 0x0
0x657: V338 = S[0x0]
0x659: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V340 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x66f: V341 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x670: V342 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V338
0x673: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x688: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x689: V345 = MUL 0x0 0x1
0x68a: V346 = OR 0x0 V342
0x68c: S[0x0] = V346
0x68e: JUMP S0
0x68f: JUMPDEST 
0x690: V347 = 0x0
0x694: V348 = S[0x0]
0x696: V349 = 0x100
0x699: V350 = EXP 0x100 0x0
0x69b: V351 = DIV V348 0x1
0x69c: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x6b3: JUMP S0
0x6b4: JUMPDEST 
0x6b5: V354 = 0x0
0x6b8: V355 = 0x0
0x6bb: V356 = 0x0
0x6be: V357 = S[0x0]
0x6c0: V358 = 0x100
0x6c3: V359 = EXP 0x100 0x0
0x6c5: V360 = DIV V357 0x1
0x6c6: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x6dc: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f1: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x6f2: V365 = CALLER
0x6f3: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x708: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x709: V368 = EQ V367 V364
0x70a: V369 = ISZERO V368
0x70b: V370 = ISZERO V369
0x70c: V371 = 0x353
0x70f: THROWI V370
---
Entry stack: []
Stack pops: 0
Stack additions: [V353, S0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x710
[0x710:0x718]
---
Predecessors: [0x5e4]
Successors: [0x719]
---
0x710 PUSH1 0x0
0x712 DUP1
0x713 REVERT
0x714 JUMPDEST
0x715 PUSH1 0x0
0x717 SWAP2
0x718 POP
---
0x710: V372 = 0x0
0x713: REVERT 0x0 0x0
0x714: JUMPDEST 
0x715: V373 = 0x0
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0x719
[0x719:0x725]
---
Predecessors: [0x710]
Successors: [0x726]
---
0x719 JUMPDEST
0x71a DUP5
0x71b MLOAD
0x71c DUP3
0x71d PUSH1 0xff
0x71f AND
0x720 LT
0x721 ISZERO
0x722 PUSH2 0x3f8
0x725 JUMPI
---
0x719: JUMPDEST 
0x71b: V374 = M[S4]
0x71d: V375 = 0xff
0x71f: V376 = AND 0xff 0x0
0x720: V377 = LT 0x0 V374
0x721: V378 = ISZERO V377
0x722: V379 = 0x3f8
0x725: THROWI V378
---
Entry stack: [0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S2, S1, S0, 0x0, S0]

================================

Block 0x726
[0x726:0x73c]
---
Predecessors: [0x719]
Successors: [0x73d]
---
0x726 PUSH7 0x38d7ea4c68000
0x72e DUP5
0x72f DUP4
0x730 PUSH1 0xff
0x732 AND
0x733 DUP2
0x734 MLOAD
0x735 DUP2
0x736 LT
0x737 ISZERO
0x738 ISZERO
0x739 PUSH2 0x37d
0x73c JUMPI
---
0x726: V380 = 0x38d7ea4c68000
0x730: V381 = 0xff
0x732: V382 = AND 0xff 0x0
0x734: V383 = M[S3]
0x736: V384 = LT 0x0 V383
0x737: V385 = ISZERO V384
0x738: V386 = ISZERO V385
0x739: V387 = 0x37d
0x73c: THROWI V386
---
Entry stack: [S4, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x38d7ea4c68000, S3, 0x0]
Exit stack: [S4, S3, S2, 0x0, S0, 0x38d7ea4c68000, S3, 0x0]

================================

Block 0x73d
[0x73d:0x75a]
---
Predecessors: [0x726]
Successors: [0x75b]
---
0x73d INVALID
0x73e JUMPDEST
0x73f SWAP1
0x740 PUSH1 0x20
0x742 ADD
0x743 SWAP1
0x744 PUSH1 0x20
0x746 MUL
0x747 ADD
0x748 MLOAD
0x749 MUL
0x74a SWAP1
0x74b POP
0x74c DUP5
0x74d DUP3
0x74e PUSH1 0xff
0x750 AND
0x751 DUP2
0x752 MLOAD
0x753 DUP2
0x754 LT
0x755 ISZERO
0x756 ISZERO
0x757 PUSH2 0x39b
0x75a JUMPI
---
0x73d: INVALID 
0x73e: JUMPDEST 
0x740: V388 = 0x20
0x742: V389 = ADD 0x20 S1
0x744: V390 = 0x20
0x746: V391 = MUL 0x20 S0
0x747: V392 = ADD V391 V389
0x748: V393 = M[V392]
0x749: V394 = MUL V393 S2
0x74e: V395 = 0xff
0x750: V396 = AND 0xff S4
0x752: V397 = M[S7]
0x754: V398 = LT V396 V397
0x755: V399 = ISZERO V398
0x756: V400 = ISZERO V399
0x757: V401 = 0x39b
0x75a: THROWI V400
---
Entry stack: [S7, S6, S5, 0x0, S3, 0x38d7ea4c68000, S1, 0x0]
Stack pops: 0
Stack additions: [V396, S7, V394, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x75b
[0x75b:0x7a1]
---
Predecessors: [0x73d]
Successors: [0x7a2]
---
0x75b INVALID
0x75c JUMPDEST
0x75d SWAP1
0x75e PUSH1 0x20
0x760 ADD
0x761 SWAP1
0x762 PUSH1 0x20
0x764 MUL
0x765 ADD
0x766 MLOAD
0x767 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77c AND
0x77d PUSH2 0x8fc
0x780 DUP3
0x781 SWAP1
0x782 DUP2
0x783 ISZERO
0x784 MUL
0x785 SWAP1
0x786 PUSH1 0x40
0x788 MLOAD
0x789 PUSH1 0x0
0x78b PUSH1 0x40
0x78d MLOAD
0x78e DUP1
0x78f DUP4
0x790 SUB
0x791 DUP2
0x792 DUP6
0x793 DUP9
0x794 DUP9
0x795 CALL
0x796 SWAP4
0x797 POP
0x798 POP
0x799 POP
0x79a POP
0x79b ISZERO
0x79c DUP1
0x79d ISZERO
0x79e PUSH2 0x3ea
0x7a1 JUMPI
---
0x75b: INVALID 
0x75c: JUMPDEST 
0x75e: V402 = 0x20
0x760: V403 = ADD 0x20 S1
0x762: V404 = 0x20
0x764: V405 = MUL 0x20 S0
0x765: V406 = ADD V405 V403
0x766: V407 = M[V406]
0x767: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x77c: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x77d: V410 = 0x8fc
0x783: V411 = ISZERO S2
0x784: V412 = MUL V411 0x8fc
0x786: V413 = 0x40
0x788: V414 = M[0x40]
0x789: V415 = 0x0
0x78b: V416 = 0x40
0x78d: V417 = M[0x40]
0x790: V418 = SUB V414 V417
0x795: V419 = CALL V412 V409 S2 V417 V418 V417 0x0
0x79b: V420 = ISZERO V419
0x79d: V421 = ISZERO V420
0x79e: V422 = 0x3ea
0x7a1: THROWI V421
---
Entry stack: [S6, S5, S4, S3, V394, S1, V396]
Stack pops: 0
Stack additions: [V420, S2]
Exit stack: []

================================

Block 0x7a2
[0x7a2:0x81b]
---
Predecessors: [0x75b]
Successors: [0x81c]
---
0x7a2 RETURNDATASIZE
0x7a3 PUSH1 0x0
0x7a5 DUP1
0x7a6 RETURNDATACOPY
0x7a7 RETURNDATASIZE
0x7a8 PUSH1 0x0
0x7aa REVERT
0x7ab JUMPDEST
0x7ac POP
0x7ad DUP2
0x7ae DUP1
0x7af PUSH1 0x1
0x7b1 ADD
0x7b2 SWAP3
0x7b3 POP
0x7b4 POP
0x7b5 PUSH2 0x358
0x7b8 JUMP
0x7b9 JUMPDEST
0x7ba PUSH1 0x1
0x7bc SWAP3
0x7bd POP
0x7be POP
0x7bf POP
0x7c0 SWAP3
0x7c1 SWAP2
0x7c2 POP
0x7c3 POP
0x7c4 JUMP
0x7c5 JUMPDEST
0x7c6 PUSH1 0x0
0x7c8 DUP1
0x7c9 SWAP1
0x7ca SLOAD
0x7cb SWAP1
0x7cc PUSH2 0x100
0x7cf EXP
0x7d0 SWAP1
0x7d1 DIV
0x7d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e7 AND
0x7e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fd AND
0x7fe CALLER
0x7ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x814 AND
0x815 EQ
0x816 ISZERO
0x817 ISZERO
0x818 PUSH2 0x45f
0x81b JUMPI
---
0x7a2: V423 = RETURNDATASIZE
0x7a3: V424 = 0x0
0x7a6: RETURNDATACOPY 0x0 0x0 V423
0x7a7: V425 = RETURNDATASIZE
0x7a8: V426 = 0x0
0x7aa: REVERT 0x0 V425
0x7ab: JUMPDEST 
0x7af: V427 = 0x1
0x7b1: V428 = ADD 0x1 S2
0x7b5: V429 = 0x358
0x7b8: THROW 
0x7b9: JUMPDEST 
0x7ba: V430 = 0x1
0x7c4: JUMP S5
0x7c5: JUMPDEST 
0x7c6: V431 = 0x0
0x7ca: V432 = S[0x0]
0x7cc: V433 = 0x100
0x7cf: V434 = EXP 0x100 0x0
0x7d1: V435 = DIV V432 0x1
0x7d2: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e7: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x7e8: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fd: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x7fe: V440 = CALLER
0x7ff: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x814: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x815: V443 = EQ V442 V439
0x816: V444 = ISZERO V443
0x817: V445 = ISZERO V444
0x818: V446 = 0x45f
0x81b: THROWI V445
---
Entry stack: [S1, V420]
Stack pops: 0
Stack additions: [S1, V428, 0x1]
Exit stack: []

================================

Block 0x81c
[0x81c:0x863]
---
Predecessors: [0x7a2]
Successors: [0x864]
---
0x81c PUSH1 0x0
0x81e DUP1
0x81f REVERT
0x820 JUMPDEST
0x821 PUSH2 0x468
0x824 DUP2
0x825 PUSH2 0x46b
0x828 JUMP
0x829 JUMPDEST
0x82a POP
0x82b JUMP
0x82c JUMPDEST
0x82d PUSH1 0x0
0x82f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x844 AND
0x845 DUP2
0x846 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85b AND
0x85c EQ
0x85d ISZERO
0x85e ISZERO
0x85f ISZERO
0x860 PUSH2 0x4a7
0x863 JUMPI
---
0x81c: V447 = 0x0
0x81f: REVERT 0x0 0x0
0x820: JUMPDEST 
0x821: V448 = 0x468
0x825: V449 = 0x46b
0x828: THROW 
0x829: JUMPDEST 
0x82b: JUMP S1
0x82c: JUMPDEST 
0x82d: V450 = 0x0
0x82f: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x844: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x846: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x85b: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x85c: V455 = EQ V454 0x0
0x85d: V456 = ISZERO V455
0x85e: V457 = ISZERO V456
0x85f: V458 = ISZERO V457
0x860: V459 = 0x4a7
0x863: THROWI V458
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, 0x468, S0, S0]
Exit stack: []

================================

Block 0x864
[0x864:0x961]
---
Predecessors: [0x81c]
Successors: []
---
0x864 PUSH1 0x0
0x866 DUP1
0x867 REVERT
0x868 JUMPDEST
0x869 DUP1
0x86a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87f AND
0x880 PUSH1 0x0
0x882 DUP1
0x883 SWAP1
0x884 SLOAD
0x885 SWAP1
0x886 PUSH2 0x100
0x889 EXP
0x88a SWAP1
0x88b DIV
0x88c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a1 AND
0x8a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b7 AND
0x8b8 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x8d9 PUSH1 0x40
0x8db MLOAD
0x8dc PUSH1 0x40
0x8de MLOAD
0x8df DUP1
0x8e0 SWAP2
0x8e1 SUB
0x8e2 SWAP1
0x8e3 LOG3
0x8e4 DUP1
0x8e5 PUSH1 0x0
0x8e7 DUP1
0x8e8 PUSH2 0x100
0x8eb EXP
0x8ec DUP2
0x8ed SLOAD
0x8ee DUP2
0x8ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x904 MUL
0x905 NOT
0x906 AND
0x907 SWAP1
0x908 DUP4
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e AND
0x91f MUL
0x920 OR
0x921 SWAP1
0x922 SSTORE
0x923 POP
0x924 POP
0x925 JUMP
0x926 STOP
0x927 LOG1
0x928 PUSH6 0x627a7a723058
0x92f SHA3
0x930 MISSING 0xe6
0x931 SWAP1
0x932 EXTCODECOPY
0x933 SMOD
0x934 MISSING 0x46
0x935 MISSING 0xb2
0x936 BLOCKHASH
0x937 DUP4
0x938 MISSING 0xcb
0x939 EXTCODECOPY
0x93a EXP
0x93b SWAP8
0x93c SGT
0x93d SWAP1
0x93e CALLDATACOPY
0x93f MISSING 0x22
0x940 SWAP11
0x941 MISSING 0xc
0x942 SWAP14
0x943 NOT
0x944 PUSH29 0x158bdb7a56ec56847b477e0029
---
0x864: V460 = 0x0
0x867: REVERT 0x0 0x0
0x868: JUMPDEST 
0x86a: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x87f: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x880: V463 = 0x0
0x884: V464 = S[0x0]
0x886: V465 = 0x100
0x889: V466 = EXP 0x100 0x0
0x88b: V467 = DIV V464 0x1
0x88c: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a1: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x8a2: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x8b8: V472 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x8d9: V473 = 0x40
0x8db: V474 = M[0x40]
0x8dc: V475 = 0x40
0x8de: V476 = M[0x40]
0x8e1: V477 = SUB V474 V476
0x8e3: LOG V476 V477 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V471 V462
0x8e5: V478 = 0x0
0x8e8: V479 = 0x100
0x8eb: V480 = EXP 0x100 0x0
0x8ed: V481 = S[0x0]
0x8ef: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x904: V483 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x905: V484 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x906: V485 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V481
0x909: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x91f: V488 = MUL V487 0x1
0x920: V489 = OR V488 V485
0x922: S[0x0] = V489
0x925: JUMP S1
0x926: STOP 
0x927: LOG S0 S1 S2
0x928: V490 = 0x627a7a723058
0x92f: V491 = SHA3 0x627a7a723058 S3
0x930: MISSING 0xe6
0x932: EXTCODECOPY S1 S0 S2 S3
0x933: V492 = SMOD S4 S5
0x934: MISSING 0x46
0x935: MISSING 0xb2
0x936: V493 = BLOCKHASH S0
0x938: MISSING 0xcb
0x939: EXTCODECOPY S0 S1 S2 S3
0x93a: V494 = EXP S4 S5
0x93c: V495 = SGT S13 S6
0x93e: CALLDATACOPY S7 V495 S8
0x93f: MISSING 0x22
0x941: MISSING 0xc
0x943: V496 = NOT S14
0x944: V497 = 0x158bdb7a56ec56847b477e0029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V491, V492, S3, V493, S1, S2, S3, S9, S10, S11, S12, V494, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0x158bdb7a56ec56847b477e0029, V496, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x715018a6
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x10d, 0x164, 0x168

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x73
Exit block: 0x88
Body: 0x73, 0x7b, 0x7f, 0x88, 0x20f

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0xca
Exit block: 0x10b
Body: 0xca, 0xd2, 0xd6, 0x10b, 0x234, 0x28b, 0x28f, 0x298, 0x29b, 0x2d3, 0x2d7

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

