Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xba]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xba
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xba
0xc: JUMPI 0xba V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x348]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x348
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x348
0x40: JUMPI 0x348 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x3d6]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x3d6
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x3d6
0x4b: JUMPI 0x3d6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x430]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x430
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x430
0x56: JUMPI 0x430 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x459]
---
0x57 DUP1
0x58 PUSH4 0x1e89d545
0x5d EQ
0x5e PUSH2 0x459
0x61 JUMPI
---
0x58: V21 = 0x1e89d545
0x5d: V22 = EQ 0x1e89d545 V11
0x5e: V23 = 0x459
0x61: JUMPI 0x459 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x50b]
---
0x62 DUP1
0x63 PUSH4 0x23b872dd
0x68 EQ
0x69 PUSH2 0x50b
0x6c JUMPI
---
0x63: V24 = 0x23b872dd
0x68: V25 = EQ 0x23b872dd V11
0x69: V26 = 0x50b
0x6c: JUMPI 0x50b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x584]
---
0x6d DUP1
0x6e PUSH4 0x313ce567
0x73 EQ
0x74 PUSH2 0x584
0x77 JUMPI
---
0x6e: V27 = 0x313ce567
0x73: V28 = EQ 0x313ce567 V11
0x74: V29 = 0x584
0x77: JUMPI 0x584 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x5ad]
---
0x78 DUP1
0x79 PUSH4 0x68742da6
0x7e EQ
0x7f PUSH2 0x5ad
0x82 JUMPI
---
0x79: V30 = 0x68742da6
0x7e: V31 = EQ 0x68742da6 V11
0x7f: V32 = 0x5ad
0x82: JUMPI 0x5ad V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x5fe]
---
0x83 DUP1
0x84 PUSH4 0x70a08231
0x89 EQ
0x8a PUSH2 0x5fe
0x8d JUMPI
---
0x84: V33 = 0x70a08231
0x89: V34 = EQ 0x70a08231 V11
0x8a: V35 = 0x5fe
0x8d: JUMPI 0x5fe V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x64b]
---
0x8e DUP1
0x8f PUSH4 0x8213dafc
0x94 EQ
0x95 PUSH2 0x64b
0x98 JUMPI
---
0x8f: V36 = 0x8213dafc
0x94: V37 = EQ 0x8213dafc V11
0x95: V38 = 0x64b
0x98: JUMPI 0x64b V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x69a]
---
0x99 DUP1
0x9a PUSH4 0x95d89b41
0x9f EQ
0xa0 PUSH2 0x69a
0xa3 JUMPI
---
0x9a: V39 = 0x95d89b41
0x9f: V40 = EQ 0x95d89b41 V11
0xa0: V41 = 0x69a
0xa3: JUMPI 0x69a V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x728]
---
0xa4 DUP1
0xa5 PUSH4 0xa9059cbb
0xaa EQ
0xab PUSH2 0x728
0xae JUMPI
---
0xa5: V42 = 0xa9059cbb
0xaa: V43 = EQ 0xa9059cbb V11
0xab: V44 = 0x728
0xae: JUMPI 0x728 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x782]
---
0xaf DUP1
0xb0 PUSH4 0xdd62ed3e
0xb5 EQ
0xb6 PUSH2 0x782
0xb9 JUMPI
---
0xb0: V45 = 0xdd62ed3e
0xb5: V46 = EQ 0xdd62ed3e V11
0xb6: V47 = 0x782
0xb9: JUMPI 0x782 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xd0]
---
Predecessors: [0x0, 0xaf]
Successors: [0xd1, 0x138]
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd PUSH1 0x14
0xbf SWAP1
0xc0 SLOAD
0xc1 SWAP1
0xc2 PUSH2 0x100
0xc5 EXP
0xc6 SWAP1
0xc7 DIV
0xc8 PUSH1 0xff
0xca AND
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0x138
0xd0 JUMPI
---
0xba: JUMPDEST 
0xbb: V48 = 0x0
0xbd: V49 = 0x14
0xc0: V50 = S[0x0]
0xc2: V51 = 0x100
0xc5: V52 = EXP 0x100 0x14
0xc7: V53 = DIV V50 0x10000000000000000000000000000000000000000
0xc8: V54 = 0xff
0xca: V55 = AND 0xff V53
0xcc: V56 = ISZERO V55
0xcd: V57 = 0x138
0xd0: JUMPI 0x138 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xd1
[0xd1:0x137]
---
Predecessors: [0xba]
Successors: [0x138]
---
0xd1 POP
0xd2 PUSH1 0x1
0xd4 SLOAD
0xd5 PUSH1 0x4
0xd7 PUSH1 0x0
0xd9 DUP1
0xda PUSH1 0x0
0xdc SWAP1
0xdd SLOAD
0xde SWAP1
0xdf PUSH2 0x100
0xe2 EXP
0xe3 SWAP1
0xe4 DIV
0xe5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa AND
0xfb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110 AND
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 DUP2
0x128 MSTORE
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP1
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 PUSH1 0x0
0x134 SHA3
0x135 SLOAD
0x136 LT
0x137 ISZERO
---
0xd2: V58 = 0x1
0xd4: V59 = S[0x1]
0xd5: V60 = 0x4
0xd7: V61 = 0x0
0xda: V62 = 0x0
0xdd: V63 = S[0x0]
0xdf: V64 = 0x100
0xe2: V65 = EXP 0x100 0x0
0xe4: V66 = DIV V63 0x1
0xe5: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xfb: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x110: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x111: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x128: M[0x0] = V72
0x129: V73 = 0x20
0x12b: V74 = ADD 0x20 0x0
0x12e: M[0x20] = 0x4
0x12f: V75 = 0x20
0x131: V76 = ADD 0x20 0x20
0x132: V77 = 0x0
0x134: V78 = SHA3 0x0 0x40
0x135: V79 = S[V78]
0x136: V80 = LT V79 V59
0x137: V81 = ISZERO V80
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0xba, 0xd1]
Successors: [0x13f, 0x18e]
---
0x138 JUMPDEST
0x139 DUP1
0x13a ISZERO
0x13b PUSH2 0x18e
0x13e JUMPI
---
0x138: JUMPDEST 
0x13a: V82 = ISZERO S0
0x13b: V83 = 0x18e
0x13e: JUMPI 0x18e V82
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x13f
[0x13f:0x18d]
---
Predecessors: [0x138]
Successors: [0x18e]
---
0x13f POP
0x140 PUSH1 0x3
0x142 PUSH1 0x0
0x144 CALLER
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 DUP2
0x172 MSTORE
0x173 PUSH1 0x20
0x175 ADD
0x176 SWAP1
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x20
0x17b ADD
0x17c PUSH1 0x0
0x17e SHA3
0x17f PUSH1 0x0
0x181 SWAP1
0x182 SLOAD
0x183 SWAP1
0x184 PUSH2 0x100
0x187 EXP
0x188 SWAP1
0x189 DIV
0x18a PUSH1 0xff
0x18c AND
0x18d ISZERO
---
0x140: V84 = 0x3
0x142: V85 = 0x0
0x144: V86 = CALLER
0x145: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x15b: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x172: M[0x0] = V90
0x173: V91 = 0x20
0x175: V92 = ADD 0x20 0x0
0x178: M[0x20] = 0x3
0x179: V93 = 0x20
0x17b: V94 = ADD 0x20 0x20
0x17c: V95 = 0x0
0x17e: V96 = SHA3 0x0 0x40
0x17f: V97 = 0x0
0x182: V98 = S[V96]
0x184: V99 = 0x100
0x187: V100 = EXP 0x100 0x0
0x189: V101 = DIV V98 0x1
0x18a: V102 = 0xff
0x18c: V103 = AND 0xff V101
0x18d: V104 = ISZERO V103
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x138, 0x13f]
Successors: [0x195, 0x19c]
---
0x18e JUMPDEST
0x18f DUP1
0x190 ISZERO
0x191 PUSH2 0x19c
0x194 JUMPI
---
0x18e: JUMPDEST 
0x190: V105 = ISZERO S0
0x191: V106 = 0x19c
0x194: JUMPI 0x19c V105
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x195
[0x195:0x19b]
---
Predecessors: [0x18e]
Successors: [0x19c]
---
0x195 POP
0x196 PUSH1 0x2
0x198 SLOAD
0x199 GASPRICE
0x19a LT
0x19b ISZERO
---
0x196: V107 = 0x2
0x198: V108 = S[0x2]
0x199: V109 = GASPRICE
0x19a: V110 = LT V109 V108
0x19b: V111 = ISZERO V110
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [V111]
Exit stack: [V11, V111]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x18e, 0x195]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d ISZERO
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V112 = ISZERO S0
0x19e: V113 = ISZERO V112
0x19f: V114 = 0x1a7
0x1a2: JUMPI 0x1a7 V113
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V115 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a7
[0x1a7:0x347]
---
Predecessors: [0x19c]
Successors: []
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab PUSH1 0x4
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 PUSH1 0x0
0x1b2 SWAP1
0x1b3 SLOAD
0x1b4 SWAP1
0x1b5 PUSH2 0x100
0x1b8 EXP
0x1b9 SWAP1
0x1ba DIV
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e6 AND
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP1
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 PUSH1 0x0
0x20a SHA3
0x20b PUSH1 0x0
0x20d DUP3
0x20e DUP3
0x20f SLOAD
0x210 SUB
0x211 SWAP3
0x212 POP
0x213 POP
0x214 DUP2
0x215 SWAP1
0x216 SSTORE
0x217 POP
0x218 PUSH1 0x1
0x21a SLOAD
0x21b PUSH1 0x4
0x21d PUSH1 0x0
0x21f CALLER
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 SWAP1
0x252 DUP2
0x253 MSTORE
0x254 PUSH1 0x20
0x256 ADD
0x257 PUSH1 0x0
0x259 SHA3
0x25a PUSH1 0x0
0x25c DUP3
0x25d DUP3
0x25e SLOAD
0x25f ADD
0x260 SWAP3
0x261 POP
0x262 POP
0x263 DUP2
0x264 SWAP1
0x265 SSTORE
0x266 POP
0x267 CALLER
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d AND
0x27e PUSH1 0x0
0x280 DUP1
0x281 SWAP1
0x282 SLOAD
0x283 SWAP1
0x284 PUSH2 0x100
0x287 EXP
0x288 SWAP1
0x289 DIV
0x28a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29f AND
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2d7 PUSH1 0x1
0x2d9 SLOAD
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd DUP1
0x2de DUP3
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 SWAP2
0x2e5 POP
0x2e6 POP
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea DUP1
0x2eb SWAP2
0x2ec SUB
0x2ed SWAP1
0x2ee LOG3
0x2ef PUSH1 0x1
0x2f1 PUSH1 0x3
0x2f3 PUSH1 0x0
0x2f5 CALLER
0x2f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30b AND
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 ADD
0x327 SWAP1
0x328 DUP2
0x329 MSTORE
0x32a PUSH1 0x20
0x32c ADD
0x32d PUSH1 0x0
0x32f SHA3
0x330 PUSH1 0x0
0x332 PUSH2 0x100
0x335 EXP
0x336 DUP2
0x337 SLOAD
0x338 DUP2
0x339 PUSH1 0xff
0x33b MUL
0x33c NOT
0x33d AND
0x33e SWAP1
0x33f DUP4
0x340 ISZERO
0x341 ISZERO
0x342 MUL
0x343 OR
0x344 SWAP1
0x345 SSTORE
0x346 POP
0x347 STOP
---
0x1a7: JUMPDEST 
0x1a8: V116 = 0x1
0x1aa: V117 = S[0x1]
0x1ab: V118 = 0x4
0x1ad: V119 = 0x0
0x1b0: V120 = 0x0
0x1b3: V121 = S[0x0]
0x1b5: V122 = 0x100
0x1b8: V123 = EXP 0x100 0x0
0x1ba: V124 = DIV V121 0x1
0x1bb: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1d1: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1e7: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1fe: M[0x0] = V130
0x1ff: V131 = 0x20
0x201: V132 = ADD 0x20 0x0
0x204: M[0x20] = 0x4
0x205: V133 = 0x20
0x207: V134 = ADD 0x20 0x20
0x208: V135 = 0x0
0x20a: V136 = SHA3 0x0 0x40
0x20b: V137 = 0x0
0x20f: V138 = S[V136]
0x210: V139 = SUB V138 V117
0x216: S[V136] = V139
0x218: V140 = 0x1
0x21a: V141 = S[0x1]
0x21b: V142 = 0x4
0x21d: V143 = 0x0
0x21f: V144 = CALLER
0x220: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x236: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x24d: M[0x0] = V148
0x24e: V149 = 0x20
0x250: V150 = ADD 0x20 0x0
0x253: M[0x20] = 0x4
0x254: V151 = 0x20
0x256: V152 = ADD 0x20 0x20
0x257: V153 = 0x0
0x259: V154 = SHA3 0x0 0x40
0x25a: V155 = 0x0
0x25e: V156 = S[V154]
0x25f: V157 = ADD V156 V141
0x265: S[V154] = V157
0x267: V158 = CALLER
0x268: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x27e: V161 = 0x0
0x282: V162 = S[0x0]
0x284: V163 = 0x100
0x287: V164 = EXP 0x100 0x0
0x289: V165 = DIV V162 0x1
0x28a: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2a0: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2b6: V170 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2d7: V171 = 0x1
0x2d9: V172 = S[0x1]
0x2da: V173 = 0x40
0x2dc: V174 = M[0x40]
0x2e0: M[V174] = V172
0x2e1: V175 = 0x20
0x2e3: V176 = ADD 0x20 V174
0x2e7: V177 = 0x40
0x2e9: V178 = M[0x40]
0x2ec: V179 = SUB V176 V178
0x2ee: LOG V178 V179 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V169 V160
0x2ef: V180 = 0x1
0x2f1: V181 = 0x3
0x2f3: V182 = 0x0
0x2f5: V183 = CALLER
0x2f6: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x30c: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x323: M[0x0] = V187
0x324: V188 = 0x20
0x326: V189 = ADD 0x20 0x0
0x329: M[0x20] = 0x3
0x32a: V190 = 0x20
0x32c: V191 = ADD 0x20 0x20
0x32d: V192 = 0x0
0x32f: V193 = SHA3 0x0 0x40
0x330: V194 = 0x0
0x332: V195 = 0x100
0x335: V196 = EXP 0x100 0x0
0x337: V197 = S[V193]
0x339: V198 = 0xff
0x33b: V199 = MUL 0xff 0x1
0x33c: V200 = NOT 0xff
0x33d: V201 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V197
0x340: V202 = ISZERO 0x1
0x341: V203 = ISZERO 0x0
0x342: V204 = MUL 0x1 0x1
0x343: V205 = OR 0x1 V201
0x345: S[V193] = V205
0x347: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x348
[0x348:0x34e]
---
Predecessors: [0xd]
Successors: [0x34f, 0x353]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x348: JUMPDEST 
0x349: V206 = CALLVALUE
0x34a: V207 = ISZERO V206
0x34b: V208 = 0x353
0x34e: JUMPI 0x353 V207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x348]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V209 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x353
[0x353:0x35a]
---
Predecessors: [0x348]
Successors: [0x7ee]
---
0x353 JUMPDEST
0x354 PUSH2 0x35b
0x357 PUSH2 0x7ee
0x35a JUMP
---
0x353: JUMPDEST 
0x354: V210 = 0x35b
0x357: V211 = 0x7ee
0x35a: JUMP 0x7ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x35b]
Exit stack: [V11, 0x35b]

================================

Block 0x35b
[0x35b:0x37f]
---
Predecessors: [0x7ee]
Successors: [0x380]
---
0x35b JUMPDEST
0x35c PUSH1 0x40
0x35e MLOAD
0x35f DUP1
0x360 DUP1
0x361 PUSH1 0x20
0x363 ADD
0x364 DUP3
0x365 DUP2
0x366 SUB
0x367 DUP3
0x368 MSTORE
0x369 DUP4
0x36a DUP2
0x36b DUP2
0x36c MLOAD
0x36d DUP2
0x36e MSTORE
0x36f PUSH1 0x20
0x371 ADD
0x372 SWAP2
0x373 POP
0x374 DUP1
0x375 MLOAD
0x376 SWAP1
0x377 PUSH1 0x20
0x379 ADD
0x37a SWAP1
0x37b DUP1
0x37c DUP4
0x37d DUP4
0x37e PUSH1 0x0
---
0x35b: JUMPDEST 
0x35c: V212 = 0x40
0x35e: V213 = M[0x40]
0x361: V214 = 0x20
0x363: V215 = ADD 0x20 V213
0x366: V216 = SUB V215 V213
0x368: M[V213] = V216
0x36c: V217 = M[V563]
0x36e: M[V215] = V217
0x36f: V218 = 0x20
0x371: V219 = ADD 0x20 V215
0x375: V220 = M[V563]
0x377: V221 = 0x20
0x379: V222 = ADD 0x20 V563
0x37e: V223 = 0x0
---
Entry stack: [V11, 0x35b, V563]
Stack pops: 1
Stack additions: [S0, V213, V213, V219, V222, V220, V220, V219, V222, 0x0]
Exit stack: [V11, 0x35b, V563, V213, V213, V219, V222, V220, V220, V219, V222, 0x0]

================================

Block 0x380
[0x380:0x388]
---
Predecessors: [0x35b, 0x389]
Successors: [0x389, 0x39b]
---
0x380 JUMPDEST
0x381 DUP4
0x382 DUP2
0x383 LT
0x384 ISZERO
0x385 PUSH2 0x39b
0x388 JUMPI
---
0x380: JUMPDEST 
0x383: V224 = LT S0 V220
0x384: V225 = ISZERO V224
0x385: V226 = 0x39b
0x388: JUMPI 0x39b V225
---
Entry stack: [V11, 0x35b, V563, V213, V213, V219, V222, V220, V220, V219, V222, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x35b, V563, V213, V213, V219, V222, V220, V220, V219, V222, S0]

================================

Block 0x389
[0x389:0x39a]
---
Predecessors: [0x380]
Successors: [0x380]
---
0x389 DUP1
0x38a DUP3
0x38b ADD
0x38c MLOAD
0x38d DUP2
0x38e DUP5
0x38f ADD
0x390 MSTORE
0x391 PUSH1 0x20
0x393 DUP2
0x394 ADD
0x395 SWAP1
0x396 POP
0x397 PUSH2 0x380
0x39a JUMP
---
0x38b: V227 = ADD V222 S0
0x38c: V228 = M[V227]
0x38f: V229 = ADD V219 S0
0x390: M[V229] = V228
0x391: V230 = 0x20
0x394: V231 = ADD S0 0x20
0x397: V232 = 0x380
0x39a: JUMP 0x380
---
Entry stack: [V11, 0x35b, V563, V213, V213, V219, V222, V220, V220, V219, V222, S0]
Stack pops: 3
Stack additions: [S2, S1, V231]
Exit stack: [V11, 0x35b, V563, V213, V213, V219, V222, V220, V220, V219, V222, V231]

================================

Block 0x39b
[0x39b:0x3ae]
---
Predecessors: [0x380]
Successors: [0x3af, 0x3c8]
---
0x39b JUMPDEST
0x39c POP
0x39d POP
0x39e POP
0x39f POP
0x3a0 SWAP1
0x3a1 POP
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 ADD
0x3a5 SWAP1
0x3a6 PUSH1 0x1f
0x3a8 AND
0x3a9 DUP1
0x3aa ISZERO
0x3ab PUSH2 0x3c8
0x3ae JUMPI
---
0x39b: JUMPDEST 
0x3a4: V233 = ADD V220 V219
0x3a6: V234 = 0x1f
0x3a8: V235 = AND 0x1f V220
0x3aa: V236 = ISZERO V235
0x3ab: V237 = 0x3c8
0x3ae: JUMPI 0x3c8 V236
---
Entry stack: [V11, 0x35b, V563, V213, V213, V219, V222, V220, V220, V219, V222, S0]
Stack pops: 7
Stack additions: [V233, V235]
Exit stack: [V11, 0x35b, V563, V213, V213, V233, V235]

================================

Block 0x3af
[0x3af:0x3c7]
---
Predecessors: [0x39b]
Successors: [0x3c8]
---
0x3af DUP1
0x3b0 DUP3
0x3b1 SUB
0x3b2 DUP1
0x3b3 MLOAD
0x3b4 PUSH1 0x1
0x3b6 DUP4
0x3b7 PUSH1 0x20
0x3b9 SUB
0x3ba PUSH2 0x100
0x3bd EXP
0x3be SUB
0x3bf NOT
0x3c0 AND
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 SWAP2
0x3c7 POP
---
0x3b1: V238 = SUB V233 V235
0x3b3: V239 = M[V238]
0x3b4: V240 = 0x1
0x3b7: V241 = 0x20
0x3b9: V242 = SUB 0x20 V235
0x3ba: V243 = 0x100
0x3bd: V244 = EXP 0x100 V242
0x3be: V245 = SUB V244 0x1
0x3bf: V246 = NOT V245
0x3c0: V247 = AND V246 V239
0x3c2: M[V238] = V247
0x3c3: V248 = 0x20
0x3c5: V249 = ADD 0x20 V238
---
Entry stack: [V11, 0x35b, V563, V213, V213, V233, V235]
Stack pops: 2
Stack additions: [V249, S0]
Exit stack: [V11, 0x35b, V563, V213, V213, V249, V235]

================================

Block 0x3c8
[0x3c8:0x3d5]
---
Predecessors: [0x39b, 0x3af]
Successors: []
---
0x3c8 JUMPDEST
0x3c9 POP
0x3ca SWAP3
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP1
0x3d2 SWAP2
0x3d3 SUB
0x3d4 SWAP1
0x3d5 RETURN
---
0x3c8: JUMPDEST 
0x3ce: V250 = 0x40
0x3d0: V251 = M[0x40]
0x3d3: V252 = SUB S1 V251
0x3d5: RETURN V251 V252
---
Entry stack: [V11, 0x35b, V563, V213, V213, S1, V235]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x35b]

================================

Block 0x3d6
[0x3d6:0x3dc]
---
Predecessors: [0x41]
Successors: [0x3dd, 0x3e1]
---
0x3d6 JUMPDEST
0x3d7 CALLVALUE
0x3d8 ISZERO
0x3d9 PUSH2 0x3e1
0x3dc JUMPI
---
0x3d6: JUMPDEST 
0x3d7: V253 = CALLVALUE
0x3d8: V254 = ISZERO V253
0x3d9: V255 = 0x3e1
0x3dc: JUMPI 0x3e1 V254
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3dd
[0x3dd:0x3e0]
---
Predecessors: [0x3d6]
Successors: []
---
0x3dd PUSH1 0x0
0x3df DUP1
0x3e0 REVERT
---
0x3dd: V256 = 0x0
0x3e0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e1
[0x3e1:0x415]
---
Predecessors: [0x3d6]
Successors: [0x827]
---
0x3e1 JUMPDEST
0x3e2 PUSH2 0x416
0x3e5 PUSH1 0x4
0x3e7 DUP1
0x3e8 DUP1
0x3e9 CALLDATALOAD
0x3ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ff AND
0x400 SWAP1
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP1
0x405 SWAP2
0x406 SWAP1
0x407 DUP1
0x408 CALLDATALOAD
0x409 SWAP1
0x40a PUSH1 0x20
0x40c ADD
0x40d SWAP1
0x40e SWAP2
0x40f SWAP1
0x410 POP
0x411 POP
0x412 PUSH2 0x827
0x415 JUMP
---
0x3e1: JUMPDEST 
0x3e2: V257 = 0x416
0x3e5: V258 = 0x4
0x3e9: V259 = CALLDATALOAD 0x4
0x3ea: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x401: V262 = 0x20
0x403: V263 = ADD 0x20 0x4
0x408: V264 = CALLDATALOAD 0x24
0x40a: V265 = 0x20
0x40c: V266 = ADD 0x20 0x24
0x412: V267 = 0x827
0x415: JUMP 0x827
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x416, V261, V264]
Exit stack: [V11, 0x416, V261, V264]

================================

Block 0x416
[0x416:0x42f]
---
Predecessors: [0x827]
Successors: []
---
0x416 JUMPDEST
0x417 PUSH1 0x40
0x419 MLOAD
0x41a DUP1
0x41b DUP3
0x41c ISZERO
0x41d ISZERO
0x41e ISZERO
0x41f ISZERO
0x420 DUP2
0x421 MSTORE
0x422 PUSH1 0x20
0x424 ADD
0x425 SWAP2
0x426 POP
0x427 POP
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c SWAP2
0x42d SUB
0x42e SWAP1
0x42f RETURN
---
0x416: JUMPDEST 
0x417: V268 = 0x40
0x419: V269 = M[0x40]
0x41c: V270 = ISZERO 0x1
0x41d: V271 = ISZERO 0x0
0x41e: V272 = ISZERO 0x1
0x41f: V273 = ISZERO 0x0
0x421: M[V269] = 0x1
0x422: V274 = 0x20
0x424: V275 = ADD 0x20 V269
0x428: V276 = 0x40
0x42a: V277 = M[0x40]
0x42d: V278 = SUB V275 V277
0x42f: RETURN V277 V278
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x430
[0x430:0x436]
---
Predecessors: [0x4c]
Successors: [0x437, 0x43b]
---
0x430 JUMPDEST
0x431 CALLVALUE
0x432 ISZERO
0x433 PUSH2 0x43b
0x436 JUMPI
---
0x430: JUMPDEST 
0x431: V279 = CALLVALUE
0x432: V280 = ISZERO V279
0x433: V281 = 0x43b
0x436: JUMPI 0x43b V280
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x437
[0x437:0x43a]
---
Predecessors: [0x430]
Successors: []
---
0x437 PUSH1 0x0
0x439 DUP1
0x43a REVERT
---
0x437: V282 = 0x0
0x43a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x43b
[0x43b:0x442]
---
Predecessors: [0x430]
Successors: [0x919]
---
0x43b JUMPDEST
0x43c PUSH2 0x443
0x43f PUSH2 0x919
0x442 JUMP
---
0x43b: JUMPDEST 
0x43c: V283 = 0x443
0x43f: V284 = 0x919
0x442: JUMP 0x919
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x443]
Exit stack: [V11, 0x443]

================================

Block 0x443
[0x443:0x458]
---
Predecessors: [0x919]
Successors: []
---
0x443 JUMPDEST
0x444 PUSH1 0x40
0x446 MLOAD
0x447 DUP1
0x448 DUP3
0x449 DUP2
0x44a MSTORE
0x44b PUSH1 0x20
0x44d ADD
0x44e SWAP2
0x44f POP
0x450 POP
0x451 PUSH1 0x40
0x453 MLOAD
0x454 DUP1
0x455 SWAP2
0x456 SUB
0x457 SWAP1
0x458 RETURN
---
0x443: JUMPDEST 
0x444: V285 = 0x40
0x446: V286 = M[0x40]
0x44a: M[V286] = 0x84595161401484a000000
0x44b: V287 = 0x20
0x44d: V288 = ADD 0x20 V286
0x451: V289 = 0x40
0x453: V290 = M[0x40]
0x456: V291 = SUB V288 V290
0x458: RETURN V290 V291
---
Entry stack: [V11, 0x443, 0x84595161401484a000000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x443]

================================

Block 0x459
[0x459:0x45f]
---
Predecessors: [0x57]
Successors: [0x460, 0x464]
---
0x459 JUMPDEST
0x45a CALLVALUE
0x45b ISZERO
0x45c PUSH2 0x464
0x45f JUMPI
---
0x459: JUMPDEST 
0x45a: V292 = CALLVALUE
0x45b: V293 = ISZERO V292
0x45c: V294 = 0x464
0x45f: JUMPI 0x464 V293
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x460
[0x460:0x463]
---
Predecessors: [0x459]
Successors: []
---
0x460 PUSH1 0x0
0x462 DUP1
0x463 REVERT
---
0x460: V295 = 0x0
0x463: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x464
[0x464:0x4f0]
---
Predecessors: [0x459]
Successors: [0x926]
---
0x464 JUMPDEST
0x465 PUSH2 0x4f1
0x468 PUSH1 0x4
0x46a DUP1
0x46b DUP1
0x46c CALLDATALOAD
0x46d SWAP1
0x46e PUSH1 0x20
0x470 ADD
0x471 SWAP1
0x472 DUP3
0x473 ADD
0x474 DUP1
0x475 CALLDATALOAD
0x476 SWAP1
0x477 PUSH1 0x20
0x479 ADD
0x47a SWAP1
0x47b DUP1
0x47c DUP1
0x47d PUSH1 0x20
0x47f MUL
0x480 PUSH1 0x20
0x482 ADD
0x483 PUSH1 0x40
0x485 MLOAD
0x486 SWAP1
0x487 DUP2
0x488 ADD
0x489 PUSH1 0x40
0x48b MSTORE
0x48c DUP1
0x48d SWAP4
0x48e SWAP3
0x48f SWAP2
0x490 SWAP1
0x491 DUP2
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x20
0x496 ADD
0x497 DUP4
0x498 DUP4
0x499 PUSH1 0x20
0x49b MUL
0x49c DUP1
0x49d DUP3
0x49e DUP5
0x49f CALLDATACOPY
0x4a0 DUP3
0x4a1 ADD
0x4a2 SWAP2
0x4a3 POP
0x4a4 POP
0x4a5 POP
0x4a6 POP
0x4a7 POP
0x4a8 POP
0x4a9 SWAP2
0x4aa SWAP1
0x4ab DUP1
0x4ac CALLDATALOAD
0x4ad SWAP1
0x4ae PUSH1 0x20
0x4b0 ADD
0x4b1 SWAP1
0x4b2 DUP3
0x4b3 ADD
0x4b4 DUP1
0x4b5 CALLDATALOAD
0x4b6 SWAP1
0x4b7 PUSH1 0x20
0x4b9 ADD
0x4ba SWAP1
0x4bb DUP1
0x4bc DUP1
0x4bd PUSH1 0x20
0x4bf MUL
0x4c0 PUSH1 0x20
0x4c2 ADD
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 SWAP1
0x4c7 DUP2
0x4c8 ADD
0x4c9 PUSH1 0x40
0x4cb MSTORE
0x4cc DUP1
0x4cd SWAP4
0x4ce SWAP3
0x4cf SWAP2
0x4d0 SWAP1
0x4d1 DUP2
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 DUP4
0x4d8 DUP4
0x4d9 PUSH1 0x20
0x4db MUL
0x4dc DUP1
0x4dd DUP3
0x4de DUP5
0x4df CALLDATACOPY
0x4e0 DUP3
0x4e1 ADD
0x4e2 SWAP2
0x4e3 POP
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 SWAP2
0x4ea SWAP1
0x4eb POP
0x4ec POP
0x4ed PUSH2 0x926
0x4f0 JUMP
---
0x464: JUMPDEST 
0x465: V296 = 0x4f1
0x468: V297 = 0x4
0x46c: V298 = CALLDATALOAD 0x4
0x46e: V299 = 0x20
0x470: V300 = ADD 0x20 0x4
0x473: V301 = ADD 0x4 V298
0x475: V302 = CALLDATALOAD V301
0x477: V303 = 0x20
0x479: V304 = ADD 0x20 V301
0x47d: V305 = 0x20
0x47f: V306 = MUL 0x20 V302
0x480: V307 = 0x20
0x482: V308 = ADD 0x20 V306
0x483: V309 = 0x40
0x485: V310 = M[0x40]
0x488: V311 = ADD V310 V308
0x489: V312 = 0x40
0x48b: M[0x40] = V311
0x493: M[V310] = V302
0x494: V313 = 0x20
0x496: V314 = ADD 0x20 V310
0x499: V315 = 0x20
0x49b: V316 = MUL 0x20 V302
0x49f: CALLDATACOPY V314 V304 V316
0x4a1: V317 = ADD V314 V316
0x4ac: V318 = CALLDATALOAD 0x24
0x4ae: V319 = 0x20
0x4b0: V320 = ADD 0x20 0x24
0x4b3: V321 = ADD 0x4 V318
0x4b5: V322 = CALLDATALOAD V321
0x4b7: V323 = 0x20
0x4b9: V324 = ADD 0x20 V321
0x4bd: V325 = 0x20
0x4bf: V326 = MUL 0x20 V322
0x4c0: V327 = 0x20
0x4c2: V328 = ADD 0x20 V326
0x4c3: V329 = 0x40
0x4c5: V330 = M[0x40]
0x4c8: V331 = ADD V330 V328
0x4c9: V332 = 0x40
0x4cb: M[0x40] = V331
0x4d3: M[V330] = V322
0x4d4: V333 = 0x20
0x4d6: V334 = ADD 0x20 V330
0x4d9: V335 = 0x20
0x4db: V336 = MUL 0x20 V322
0x4df: CALLDATACOPY V334 V324 V336
0x4e1: V337 = ADD V334 V336
0x4ed: V338 = 0x926
0x4f0: JUMP 0x926
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4f1, V310, V330]
Exit stack: [V11, 0x4f1, V310, V330]

================================

Block 0x4f1
[0x4f1:0x50a]
---
Predecessors: [0xb72]
Successors: []
---
0x4f1 JUMPDEST
0x4f2 PUSH1 0x40
0x4f4 MLOAD
0x4f5 DUP1
0x4f6 DUP3
0x4f7 ISZERO
0x4f8 ISZERO
0x4f9 ISZERO
0x4fa ISZERO
0x4fb DUP2
0x4fc MSTORE
0x4fd PUSH1 0x20
0x4ff ADD
0x500 SWAP2
0x501 POP
0x502 POP
0x503 PUSH1 0x40
0x505 MLOAD
0x506 DUP1
0x507 SWAP2
0x508 SUB
0x509 SWAP1
0x50a RETURN
---
0x4f1: JUMPDEST 
0x4f2: V339 = 0x40
0x4f4: V340 = M[0x40]
0x4f7: V341 = ISZERO 0x1
0x4f8: V342 = ISZERO 0x0
0x4f9: V343 = ISZERO 0x1
0x4fa: V344 = ISZERO 0x0
0x4fc: M[V340] = 0x1
0x4fd: V345 = 0x20
0x4ff: V346 = ADD 0x20 V340
0x503: V347 = 0x40
0x505: V348 = M[0x40]
0x508: V349 = SUB V346 V348
0x50a: RETURN V348 V349
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x50b
[0x50b:0x511]
---
Predecessors: [0x62]
Successors: [0x512, 0x516]
---
0x50b JUMPDEST
0x50c CALLVALUE
0x50d ISZERO
0x50e PUSH2 0x516
0x511 JUMPI
---
0x50b: JUMPDEST 
0x50c: V350 = CALLVALUE
0x50d: V351 = ISZERO V350
0x50e: V352 = 0x516
0x511: JUMPI 0x516 V351
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x512
[0x512:0x515]
---
Predecessors: [0x50b]
Successors: []
---
0x512 PUSH1 0x0
0x514 DUP1
0x515 REVERT
---
0x512: V353 = 0x0
0x515: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x516
[0x516:0x569]
---
Predecessors: [0x50b]
Successors: [0xb7f]
---
0x516 JUMPDEST
0x517 PUSH2 0x56a
0x51a PUSH1 0x4
0x51c DUP1
0x51d DUP1
0x51e CALLDATALOAD
0x51f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x534 AND
0x535 SWAP1
0x536 PUSH1 0x20
0x538 ADD
0x539 SWAP1
0x53a SWAP2
0x53b SWAP1
0x53c DUP1
0x53d CALLDATALOAD
0x53e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x553 AND
0x554 SWAP1
0x555 PUSH1 0x20
0x557 ADD
0x558 SWAP1
0x559 SWAP2
0x55a SWAP1
0x55b DUP1
0x55c CALLDATALOAD
0x55d SWAP1
0x55e PUSH1 0x20
0x560 ADD
0x561 SWAP1
0x562 SWAP2
0x563 SWAP1
0x564 POP
0x565 POP
0x566 PUSH2 0xb7f
0x569 JUMP
---
0x516: JUMPDEST 
0x517: V354 = 0x56a
0x51a: V355 = 0x4
0x51e: V356 = CALLDATALOAD 0x4
0x51f: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x534: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x536: V359 = 0x20
0x538: V360 = ADD 0x20 0x4
0x53d: V361 = CALLDATALOAD 0x24
0x53e: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x553: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x555: V364 = 0x20
0x557: V365 = ADD 0x20 0x24
0x55c: V366 = CALLDATALOAD 0x44
0x55e: V367 = 0x20
0x560: V368 = ADD 0x20 0x44
0x566: V369 = 0xb7f
0x569: JUMP 0xb7f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56a, V358, V363, V366]
Exit stack: [V11, 0x56a, V358, V363, V366]

================================

Block 0x56a
[0x56a:0x583]
---
Predecessors: [0xc63]
Successors: []
---
0x56a JUMPDEST
0x56b PUSH1 0x40
0x56d MLOAD
0x56e DUP1
0x56f DUP3
0x570 ISZERO
0x571 ISZERO
0x572 ISZERO
0x573 ISZERO
0x574 DUP2
0x575 MSTORE
0x576 PUSH1 0x20
0x578 ADD
0x579 SWAP2
0x57a POP
0x57b POP
0x57c PUSH1 0x40
0x57e MLOAD
0x57f DUP1
0x580 SWAP2
0x581 SUB
0x582 SWAP1
0x583 RETURN
---
0x56a: JUMPDEST 
0x56b: V370 = 0x40
0x56d: V371 = M[0x40]
0x570: V372 = ISZERO 0x1
0x571: V373 = ISZERO 0x0
0x572: V374 = ISZERO 0x1
0x573: V375 = ISZERO 0x0
0x575: M[V371] = 0x1
0x576: V376 = 0x20
0x578: V377 = ADD 0x20 V371
0x57c: V378 = 0x40
0x57e: V379 = M[0x40]
0x581: V380 = SUB V377 V379
0x583: RETURN V379 V380
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x584
[0x584:0x58a]
---
Predecessors: [0x6d]
Successors: [0x58b, 0x58f]
---
0x584 JUMPDEST
0x585 CALLVALUE
0x586 ISZERO
0x587 PUSH2 0x58f
0x58a JUMPI
---
0x584: JUMPDEST 
0x585: V381 = CALLVALUE
0x586: V382 = ISZERO V381
0x587: V383 = 0x58f
0x58a: JUMPI 0x58f V382
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58b
[0x58b:0x58e]
---
Predecessors: [0x584]
Successors: []
---
0x58b PUSH1 0x0
0x58d DUP1
0x58e REVERT
---
0x58b: V384 = 0x0
0x58e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58f
[0x58f:0x596]
---
Predecessors: [0x584]
Successors: [0xdf7]
---
0x58f JUMPDEST
0x590 PUSH2 0x597
0x593 PUSH2 0xdf7
0x596 JUMP
---
0x58f: JUMPDEST 
0x590: V385 = 0x597
0x593: V386 = 0xdf7
0x596: JUMP 0xdf7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x597]
Exit stack: [V11, 0x597]

================================

Block 0x597
[0x597:0x5ac]
---
Predecessors: [0xdf7]
Successors: []
---
0x597 JUMPDEST
0x598 PUSH1 0x40
0x59a MLOAD
0x59b DUP1
0x59c DUP3
0x59d DUP2
0x59e MSTORE
0x59f PUSH1 0x20
0x5a1 ADD
0x5a2 SWAP2
0x5a3 POP
0x5a4 POP
0x5a5 PUSH1 0x40
0x5a7 MLOAD
0x5a8 DUP1
0x5a9 SWAP2
0x5aa SUB
0x5ab SWAP1
0x5ac RETURN
---
0x597: JUMPDEST 
0x598: V387 = 0x40
0x59a: V388 = M[0x40]
0x59e: M[V388] = 0x12
0x59f: V389 = 0x20
0x5a1: V390 = ADD 0x20 V388
0x5a5: V391 = 0x40
0x5a7: V392 = M[0x40]
0x5aa: V393 = SUB V390 V392
0x5ac: RETURN V392 V393
---
Entry stack: [V11, 0x597, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x597]

================================

Block 0x5ad
[0x5ad:0x5b3]
---
Predecessors: [0x78]
Successors: [0x5b4, 0x5b8]
---
0x5ad JUMPDEST
0x5ae CALLVALUE
0x5af ISZERO
0x5b0 PUSH2 0x5b8
0x5b3 JUMPI
---
0x5ad: JUMPDEST 
0x5ae: V394 = CALLVALUE
0x5af: V395 = ISZERO V394
0x5b0: V396 = 0x5b8
0x5b3: JUMPI 0x5b8 V395
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b4
[0x5b4:0x5b7]
---
Predecessors: [0x5ad]
Successors: []
---
0x5b4 PUSH1 0x0
0x5b6 DUP1
0x5b7 REVERT
---
0x5b4: V397 = 0x0
0x5b7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b8
[0x5b8:0x5e3]
---
Predecessors: [0x5ad]
Successors: [0xdfc]
---
0x5b8 JUMPDEST
0x5b9 PUSH2 0x5e4
0x5bc PUSH1 0x4
0x5be DUP1
0x5bf DUP1
0x5c0 CALLDATALOAD
0x5c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d6 AND
0x5d7 SWAP1
0x5d8 PUSH1 0x20
0x5da ADD
0x5db SWAP1
0x5dc SWAP2
0x5dd SWAP1
0x5de POP
0x5df POP
0x5e0 PUSH2 0xdfc
0x5e3 JUMP
---
0x5b8: JUMPDEST 
0x5b9: V398 = 0x5e4
0x5bc: V399 = 0x4
0x5c0: V400 = CALLDATALOAD 0x4
0x5c1: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d6: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x5d8: V403 = 0x20
0x5da: V404 = ADD 0x20 0x4
0x5e0: V405 = 0xdfc
0x5e3: JUMP 0xdfc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5e4, V402]
Exit stack: [V11, 0x5e4, V402]

================================

Block 0x5e4
[0x5e4:0x5fd]
---
Predecessors: [0x10b5]
Successors: []
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x40
0x5e7 MLOAD
0x5e8 DUP1
0x5e9 DUP3
0x5ea ISZERO
0x5eb ISZERO
0x5ec ISZERO
0x5ed ISZERO
0x5ee DUP2
0x5ef MSTORE
0x5f0 PUSH1 0x20
0x5f2 ADD
0x5f3 SWAP2
0x5f4 POP
0x5f5 POP
0x5f6 PUSH1 0x40
0x5f8 MLOAD
0x5f9 DUP1
0x5fa SWAP2
0x5fb SUB
0x5fc SWAP1
0x5fd RETURN
---
0x5e4: JUMPDEST 
0x5e5: V406 = 0x40
0x5e7: V407 = M[0x40]
0x5ea: V408 = ISZERO 0x1
0x5eb: V409 = ISZERO 0x0
0x5ec: V410 = ISZERO 0x1
0x5ed: V411 = ISZERO 0x0
0x5ef: M[V407] = 0x1
0x5f0: V412 = 0x20
0x5f2: V413 = ADD 0x20 V407
0x5f6: V414 = 0x40
0x5f8: V415 = M[0x40]
0x5fb: V416 = SUB V413 V415
0x5fd: RETURN V415 V416
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5fe
[0x5fe:0x604]
---
Predecessors: [0x83]
Successors: [0x605, 0x609]
---
0x5fe JUMPDEST
0x5ff CALLVALUE
0x600 ISZERO
0x601 PUSH2 0x609
0x604 JUMPI
---
0x5fe: JUMPDEST 
0x5ff: V417 = CALLVALUE
0x600: V418 = ISZERO V417
0x601: V419 = 0x609
0x604: JUMPI 0x609 V418
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x605
[0x605:0x608]
---
Predecessors: [0x5fe]
Successors: []
---
0x605 PUSH1 0x0
0x607 DUP1
0x608 REVERT
---
0x605: V420 = 0x0
0x608: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x609
[0x609:0x634]
---
Predecessors: [0x5fe]
Successors: [0x10bf]
---
0x609 JUMPDEST
0x60a PUSH2 0x635
0x60d PUSH1 0x4
0x60f DUP1
0x610 DUP1
0x611 CALLDATALOAD
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 SWAP1
0x629 PUSH1 0x20
0x62b ADD
0x62c SWAP1
0x62d SWAP2
0x62e SWAP1
0x62f POP
0x630 POP
0x631 PUSH2 0x10bf
0x634 JUMP
---
0x609: JUMPDEST 
0x60a: V421 = 0x635
0x60d: V422 = 0x4
0x611: V423 = CALLDATALOAD 0x4
0x612: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x629: V426 = 0x20
0x62b: V427 = ADD 0x20 0x4
0x631: V428 = 0x10bf
0x634: JUMP 0x10bf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x635, V425]
Exit stack: [V11, 0x635, V425]

================================

Block 0x635
[0x635:0x64a]
---
Predecessors: [0x10bf]
Successors: []
---
0x635 JUMPDEST
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP1
0x63a DUP3
0x63b DUP2
0x63c MSTORE
0x63d PUSH1 0x20
0x63f ADD
0x640 SWAP2
0x641 POP
0x642 POP
0x643 PUSH1 0x40
0x645 MLOAD
0x646 DUP1
0x647 SWAP2
0x648 SUB
0x649 SWAP1
0x64a RETURN
---
0x635: JUMPDEST 
0x636: V429 = 0x40
0x638: V430 = M[0x40]
0x63c: M[V430] = V1073
0x63d: V431 = 0x20
0x63f: V432 = ADD 0x20 V430
0x643: V433 = 0x40
0x645: V434 = M[0x40]
0x648: V435 = SUB V432 V434
0x64a: RETURN V434 V435
---
Entry stack: [V11, V1073]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x64b
[0x64b:0x651]
---
Predecessors: [0x8e]
Successors: [0x652, 0x656]
---
0x64b JUMPDEST
0x64c CALLVALUE
0x64d ISZERO
0x64e PUSH2 0x656
0x651 JUMPI
---
0x64b: JUMPDEST 
0x64c: V436 = CALLVALUE
0x64d: V437 = ISZERO V436
0x64e: V438 = 0x656
0x651: JUMPI 0x656 V437
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x652
[0x652:0x655]
---
Predecessors: [0x64b]
Successors: []
---
0x652 PUSH1 0x0
0x654 DUP1
0x655 REVERT
---
0x652: V439 = 0x0
0x655: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x656
[0x656:0x67f]
---
Predecessors: [0x64b]
Successors: [0x1108]
---
0x656 JUMPDEST
0x657 PUSH2 0x680
0x65a PUSH1 0x4
0x65c DUP1
0x65d DUP1
0x65e CALLDATALOAD
0x65f ISZERO
0x660 ISZERO
0x661 SWAP1
0x662 PUSH1 0x20
0x664 ADD
0x665 SWAP1
0x666 SWAP2
0x667 SWAP1
0x668 DUP1
0x669 CALLDATALOAD
0x66a SWAP1
0x66b PUSH1 0x20
0x66d ADD
0x66e SWAP1
0x66f SWAP2
0x670 SWAP1
0x671 DUP1
0x672 CALLDATALOAD
0x673 SWAP1
0x674 PUSH1 0x20
0x676 ADD
0x677 SWAP1
0x678 SWAP2
0x679 SWAP1
0x67a POP
0x67b POP
0x67c PUSH2 0x1108
0x67f JUMP
---
0x656: JUMPDEST 
0x657: V440 = 0x680
0x65a: V441 = 0x4
0x65e: V442 = CALLDATALOAD 0x4
0x65f: V443 = ISZERO V442
0x660: V444 = ISZERO V443
0x662: V445 = 0x20
0x664: V446 = ADD 0x20 0x4
0x669: V447 = CALLDATALOAD 0x24
0x66b: V448 = 0x20
0x66d: V449 = ADD 0x20 0x24
0x672: V450 = CALLDATALOAD 0x44
0x674: V451 = 0x20
0x676: V452 = ADD 0x20 0x44
0x67c: V453 = 0x1108
0x67f: JUMP 0x1108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x680, V444, V447, V450]
Exit stack: [V11, 0x680, V444, V447, V450]

================================

Block 0x680
[0x680:0x699]
---
Predecessors: [0x1165]
Successors: []
---
0x680 JUMPDEST
0x681 PUSH1 0x40
0x683 MLOAD
0x684 DUP1
0x685 DUP3
0x686 ISZERO
0x687 ISZERO
0x688 ISZERO
0x689 ISZERO
0x68a DUP2
0x68b MSTORE
0x68c PUSH1 0x20
0x68e ADD
0x68f SWAP2
0x690 POP
0x691 POP
0x692 PUSH1 0x40
0x694 MLOAD
0x695 DUP1
0x696 SWAP2
0x697 SUB
0x698 SWAP1
0x699 RETURN
---
0x680: JUMPDEST 
0x681: V454 = 0x40
0x683: V455 = M[0x40]
0x686: V456 = ISZERO 0x1
0x687: V457 = ISZERO 0x0
0x688: V458 = ISZERO 0x1
0x689: V459 = ISZERO 0x0
0x68b: M[V455] = 0x1
0x68c: V460 = 0x20
0x68e: V461 = ADD 0x20 V455
0x692: V462 = 0x40
0x694: V463 = M[0x40]
0x697: V464 = SUB V461 V463
0x699: RETURN V463 V464
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x69a
[0x69a:0x6a0]
---
Predecessors: [0x99]
Successors: [0x6a1, 0x6a5]
---
0x69a JUMPDEST
0x69b CALLVALUE
0x69c ISZERO
0x69d PUSH2 0x6a5
0x6a0 JUMPI
---
0x69a: JUMPDEST 
0x69b: V465 = CALLVALUE
0x69c: V466 = ISZERO V465
0x69d: V467 = 0x6a5
0x6a0: JUMPI 0x6a5 V466
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6a1
[0x6a1:0x6a4]
---
Predecessors: [0x69a]
Successors: []
---
0x6a1 PUSH1 0x0
0x6a3 DUP1
0x6a4 REVERT
---
0x6a1: V468 = 0x0
0x6a4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6a5
[0x6a5:0x6ac]
---
Predecessors: [0x69a]
Successors: [0x11a4]
---
0x6a5 JUMPDEST
0x6a6 PUSH2 0x6ad
0x6a9 PUSH2 0x11a4
0x6ac JUMP
---
0x6a5: JUMPDEST 
0x6a6: V469 = 0x6ad
0x6a9: V470 = 0x11a4
0x6ac: JUMP 0x11a4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6ad]
Exit stack: [V11, 0x6ad]

================================

Block 0x6ad
[0x6ad:0x6d1]
---
Predecessors: [0x11a4]
Successors: [0x6d2]
---
0x6ad JUMPDEST
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 DUP1
0x6b2 DUP1
0x6b3 PUSH1 0x20
0x6b5 ADD
0x6b6 DUP3
0x6b7 DUP2
0x6b8 SUB
0x6b9 DUP3
0x6ba MSTORE
0x6bb DUP4
0x6bc DUP2
0x6bd DUP2
0x6be MLOAD
0x6bf DUP2
0x6c0 MSTORE
0x6c1 PUSH1 0x20
0x6c3 ADD
0x6c4 SWAP2
0x6c5 POP
0x6c6 DUP1
0x6c7 MLOAD
0x6c8 SWAP1
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc SWAP1
0x6cd DUP1
0x6ce DUP4
0x6cf DUP4
0x6d0 PUSH1 0x0
---
0x6ad: JUMPDEST 
0x6ae: V471 = 0x40
0x6b0: V472 = M[0x40]
0x6b3: V473 = 0x20
0x6b5: V474 = ADD 0x20 V472
0x6b8: V475 = SUB V474 V472
0x6ba: M[V472] = V475
0x6be: V476 = M[V1115]
0x6c0: M[V474] = V476
0x6c1: V477 = 0x20
0x6c3: V478 = ADD 0x20 V474
0x6c7: V479 = M[V1115]
0x6c9: V480 = 0x20
0x6cb: V481 = ADD 0x20 V1115
0x6d0: V482 = 0x0
---
Entry stack: [V11, 0x6ad, V1115]
Stack pops: 1
Stack additions: [S0, V472, V472, V478, V481, V479, V479, V478, V481, 0x0]
Exit stack: [V11, 0x6ad, V1115, V472, V472, V478, V481, V479, V479, V478, V481, 0x0]

================================

Block 0x6d2
[0x6d2:0x6da]
---
Predecessors: [0x6ad, 0x6db]
Successors: [0x6db, 0x6ed]
---
0x6d2 JUMPDEST
0x6d3 DUP4
0x6d4 DUP2
0x6d5 LT
0x6d6 ISZERO
0x6d7 PUSH2 0x6ed
0x6da JUMPI
---
0x6d2: JUMPDEST 
0x6d5: V483 = LT S0 V479
0x6d6: V484 = ISZERO V483
0x6d7: V485 = 0x6ed
0x6da: JUMPI 0x6ed V484
---
Entry stack: [V11, 0x6ad, V1115, V472, V472, V478, V481, V479, V479, V478, V481, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x6ad, V1115, V472, V472, V478, V481, V479, V479, V478, V481, S0]

================================

Block 0x6db
[0x6db:0x6ec]
---
Predecessors: [0x6d2]
Successors: [0x6d2]
---
0x6db DUP1
0x6dc DUP3
0x6dd ADD
0x6de MLOAD
0x6df DUP2
0x6e0 DUP5
0x6e1 ADD
0x6e2 MSTORE
0x6e3 PUSH1 0x20
0x6e5 DUP2
0x6e6 ADD
0x6e7 SWAP1
0x6e8 POP
0x6e9 PUSH2 0x6d2
0x6ec JUMP
---
0x6dd: V486 = ADD V481 S0
0x6de: V487 = M[V486]
0x6e1: V488 = ADD V478 S0
0x6e2: M[V488] = V487
0x6e3: V489 = 0x20
0x6e6: V490 = ADD S0 0x20
0x6e9: V491 = 0x6d2
0x6ec: JUMP 0x6d2
---
Entry stack: [V11, 0x6ad, V1115, V472, V472, V478, V481, V479, V479, V478, V481, S0]
Stack pops: 3
Stack additions: [S2, S1, V490]
Exit stack: [V11, 0x6ad, V1115, V472, V472, V478, V481, V479, V479, V478, V481, V490]

================================

Block 0x6ed
[0x6ed:0x700]
---
Predecessors: [0x6d2]
Successors: [0x701, 0x71a]
---
0x6ed JUMPDEST
0x6ee POP
0x6ef POP
0x6f0 POP
0x6f1 POP
0x6f2 SWAP1
0x6f3 POP
0x6f4 SWAP1
0x6f5 DUP2
0x6f6 ADD
0x6f7 SWAP1
0x6f8 PUSH1 0x1f
0x6fa AND
0x6fb DUP1
0x6fc ISZERO
0x6fd PUSH2 0x71a
0x700 JUMPI
---
0x6ed: JUMPDEST 
0x6f6: V492 = ADD V479 V478
0x6f8: V493 = 0x1f
0x6fa: V494 = AND 0x1f V479
0x6fc: V495 = ISZERO V494
0x6fd: V496 = 0x71a
0x700: JUMPI 0x71a V495
---
Entry stack: [V11, 0x6ad, V1115, V472, V472, V478, V481, V479, V479, V478, V481, S0]
Stack pops: 7
Stack additions: [V492, V494]
Exit stack: [V11, 0x6ad, V1115, V472, V472, V492, V494]

================================

Block 0x701
[0x701:0x719]
---
Predecessors: [0x6ed]
Successors: [0x71a]
---
0x701 DUP1
0x702 DUP3
0x703 SUB
0x704 DUP1
0x705 MLOAD
0x706 PUSH1 0x1
0x708 DUP4
0x709 PUSH1 0x20
0x70b SUB
0x70c PUSH2 0x100
0x70f EXP
0x710 SUB
0x711 NOT
0x712 AND
0x713 DUP2
0x714 MSTORE
0x715 PUSH1 0x20
0x717 ADD
0x718 SWAP2
0x719 POP
---
0x703: V497 = SUB V492 V494
0x705: V498 = M[V497]
0x706: V499 = 0x1
0x709: V500 = 0x20
0x70b: V501 = SUB 0x20 V494
0x70c: V502 = 0x100
0x70f: V503 = EXP 0x100 V501
0x710: V504 = SUB V503 0x1
0x711: V505 = NOT V504
0x712: V506 = AND V505 V498
0x714: M[V497] = V506
0x715: V507 = 0x20
0x717: V508 = ADD 0x20 V497
---
Entry stack: [V11, 0x6ad, V1115, V472, V472, V492, V494]
Stack pops: 2
Stack additions: [V508, S0]
Exit stack: [V11, 0x6ad, V1115, V472, V472, V508, V494]

================================

Block 0x71a
[0x71a:0x727]
---
Predecessors: [0x6ed, 0x701]
Successors: []
---
0x71a JUMPDEST
0x71b POP
0x71c SWAP3
0x71d POP
0x71e POP
0x71f POP
0x720 PUSH1 0x40
0x722 MLOAD
0x723 DUP1
0x724 SWAP2
0x725 SUB
0x726 SWAP1
0x727 RETURN
---
0x71a: JUMPDEST 
0x720: V509 = 0x40
0x722: V510 = M[0x40]
0x725: V511 = SUB S1 V510
0x727: RETURN V510 V511
---
Entry stack: [V11, 0x6ad, V1115, V472, V472, S1, V494]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x6ad]

================================

Block 0x728
[0x728:0x72e]
---
Predecessors: [0xa4]
Successors: [0x72f, 0x733]
---
0x728 JUMPDEST
0x729 CALLVALUE
0x72a ISZERO
0x72b PUSH2 0x733
0x72e JUMPI
---
0x728: JUMPDEST 
0x729: V512 = CALLVALUE
0x72a: V513 = ISZERO V512
0x72b: V514 = 0x733
0x72e: JUMPI 0x733 V513
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72f
[0x72f:0x732]
---
Predecessors: [0x728]
Successors: []
---
0x72f PUSH1 0x0
0x731 DUP1
0x732 REVERT
---
0x72f: V515 = 0x0
0x732: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x733
[0x733:0x767]
---
Predecessors: [0x728]
Successors: [0x11dd]
---
0x733 JUMPDEST
0x734 PUSH2 0x768
0x737 PUSH1 0x4
0x739 DUP1
0x73a DUP1
0x73b CALLDATALOAD
0x73c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x751 AND
0x752 SWAP1
0x753 PUSH1 0x20
0x755 ADD
0x756 SWAP1
0x757 SWAP2
0x758 SWAP1
0x759 DUP1
0x75a CALLDATALOAD
0x75b SWAP1
0x75c PUSH1 0x20
0x75e ADD
0x75f SWAP1
0x760 SWAP2
0x761 SWAP1
0x762 POP
0x763 POP
0x764 PUSH2 0x11dd
0x767 JUMP
---
0x733: JUMPDEST 
0x734: V516 = 0x768
0x737: V517 = 0x4
0x73b: V518 = CALLDATALOAD 0x4
0x73c: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x751: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x753: V521 = 0x20
0x755: V522 = ADD 0x20 0x4
0x75a: V523 = CALLDATALOAD 0x24
0x75c: V524 = 0x20
0x75e: V525 = ADD 0x20 0x24
0x764: V526 = 0x11dd
0x767: JUMP 0x11dd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x768, V520, V523]
Exit stack: [V11, 0x768, V520, V523]

================================

Block 0x768
[0x768:0x781]
---
Predecessors: [0x1239]
Successors: []
---
0x768 JUMPDEST
0x769 PUSH1 0x40
0x76b MLOAD
0x76c DUP1
0x76d DUP3
0x76e ISZERO
0x76f ISZERO
0x770 ISZERO
0x771 ISZERO
0x772 DUP2
0x773 MSTORE
0x774 PUSH1 0x20
0x776 ADD
0x777 SWAP2
0x778 POP
0x779 POP
0x77a PUSH1 0x40
0x77c MLOAD
0x77d DUP1
0x77e SWAP2
0x77f SUB
0x780 SWAP1
0x781 RETURN
---
0x768: JUMPDEST 
0x769: V527 = 0x40
0x76b: V528 = M[0x40]
0x76e: V529 = ISZERO 0x1
0x76f: V530 = ISZERO 0x0
0x770: V531 = ISZERO 0x1
0x771: V532 = ISZERO 0x0
0x773: M[V528] = 0x1
0x774: V533 = 0x20
0x776: V534 = ADD 0x20 V528
0x77a: V535 = 0x40
0x77c: V536 = M[0x40]
0x77f: V537 = SUB V534 V536
0x781: RETURN V536 V537
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x782
[0x782:0x788]
---
Predecessors: [0xaf]
Successors: [0x789, 0x78d]
---
0x782 JUMPDEST
0x783 CALLVALUE
0x784 ISZERO
0x785 PUSH2 0x78d
0x788 JUMPI
---
0x782: JUMPDEST 
0x783: V538 = CALLVALUE
0x784: V539 = ISZERO V538
0x785: V540 = 0x78d
0x788: JUMPI 0x78d V539
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x789
[0x789:0x78c]
---
Predecessors: [0x782]
Successors: []
---
0x789 PUSH1 0x0
0x78b DUP1
0x78c REVERT
---
0x789: V541 = 0x0
0x78c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x78d
[0x78d:0x7d7]
---
Predecessors: [0x782]
Successors: [0x1342]
---
0x78d JUMPDEST
0x78e PUSH2 0x7d8
0x791 PUSH1 0x4
0x793 DUP1
0x794 DUP1
0x795 CALLDATALOAD
0x796 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ab AND
0x7ac SWAP1
0x7ad PUSH1 0x20
0x7af ADD
0x7b0 SWAP1
0x7b1 SWAP2
0x7b2 SWAP1
0x7b3 DUP1
0x7b4 CALLDATALOAD
0x7b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ca AND
0x7cb SWAP1
0x7cc PUSH1 0x20
0x7ce ADD
0x7cf SWAP1
0x7d0 SWAP2
0x7d1 SWAP1
0x7d2 POP
0x7d3 POP
0x7d4 PUSH2 0x1342
0x7d7 JUMP
---
0x78d: JUMPDEST 
0x78e: V542 = 0x7d8
0x791: V543 = 0x4
0x795: V544 = CALLDATALOAD 0x4
0x796: V545 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ab: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x7ad: V547 = 0x20
0x7af: V548 = ADD 0x20 0x4
0x7b4: V549 = CALLDATALOAD 0x24
0x7b5: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ca: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x7cc: V552 = 0x20
0x7ce: V553 = ADD 0x20 0x24
0x7d4: V554 = 0x1342
0x7d7: JUMP 0x1342
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7d8, V546, V551]
Exit stack: [V11, 0x7d8, V546, V551]

================================

Block 0x7d8
[0x7d8:0x7ed]
---
Predecessors: [0x1342]
Successors: []
---
0x7d8 JUMPDEST
0x7d9 PUSH1 0x40
0x7db MLOAD
0x7dc DUP1
0x7dd DUP3
0x7de DUP2
0x7df MSTORE
0x7e0 PUSH1 0x20
0x7e2 ADD
0x7e3 SWAP2
0x7e4 POP
0x7e5 POP
0x7e6 PUSH1 0x40
0x7e8 MLOAD
0x7e9 DUP1
0x7ea SWAP2
0x7eb SUB
0x7ec SWAP1
0x7ed RETURN
---
0x7d8: JUMPDEST 
0x7d9: V555 = 0x40
0x7db: V556 = M[0x40]
0x7df: M[V556] = V1216
0x7e0: V557 = 0x20
0x7e2: V558 = ADD 0x20 V556
0x7e6: V559 = 0x40
0x7e8: V560 = M[0x40]
0x7eb: V561 = SUB V558 V560
0x7ed: RETURN V560 V561
---
Entry stack: [V11, V1216]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x7ee
[0x7ee:0x826]
---
Predecessors: [0x353]
Successors: [0x35b]
---
0x7ee JUMPDEST
0x7ef PUSH1 0x40
0x7f1 DUP1
0x7f2 MLOAD
0x7f3 SWAP1
0x7f4 DUP2
0x7f5 ADD
0x7f6 PUSH1 0x40
0x7f8 MSTORE
0x7f9 DUP1
0x7fa PUSH1 0xb
0x7fc DUP2
0x7fd MSTORE
0x7fe PUSH1 0x20
0x800 ADD
0x801 PUSH32 0x526f636b657420436f696e000000000000000000000000000000000000000000
0x822 DUP2
0x823 MSTORE
0x824 POP
0x825 DUP2
0x826 JUMP
---
0x7ee: JUMPDEST 
0x7ef: V562 = 0x40
0x7f2: V563 = M[0x40]
0x7f5: V564 = ADD V563 0x40
0x7f6: V565 = 0x40
0x7f8: M[0x40] = V564
0x7fa: V566 = 0xb
0x7fd: M[V563] = 0xb
0x7fe: V567 = 0x20
0x800: V568 = ADD 0x20 V563
0x801: V569 = 0x526f636b657420436f696e000000000000000000000000000000000000000000
0x823: M[V568] = 0x526f636b657420436f696e000000000000000000000000000000000000000000
0x826: JUMP 0x35b
---
Entry stack: [V11, 0x35b]
Stack pops: 1
Stack additions: [S0, V563]
Exit stack: [V11, 0x35b, V563]

================================

Block 0x827
[0x827:0x918]
---
Predecessors: [0x3e1]
Successors: [0x416]
---
0x827 JUMPDEST
0x828 PUSH1 0x0
0x82a DUP2
0x82b PUSH1 0x5
0x82d PUSH1 0x0
0x82f CALLER
0x830 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x845 AND
0x846 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85b AND
0x85c DUP2
0x85d MSTORE
0x85e PUSH1 0x20
0x860 ADD
0x861 SWAP1
0x862 DUP2
0x863 MSTORE
0x864 PUSH1 0x20
0x866 ADD
0x867 PUSH1 0x0
0x869 SHA3
0x86a PUSH1 0x0
0x86c DUP6
0x86d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x882 AND
0x883 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x898 AND
0x899 DUP2
0x89a MSTORE
0x89b PUSH1 0x20
0x89d ADD
0x89e SWAP1
0x89f DUP2
0x8a0 MSTORE
0x8a1 PUSH1 0x20
0x8a3 ADD
0x8a4 PUSH1 0x0
0x8a6 SHA3
0x8a7 DUP2
0x8a8 SWAP1
0x8a9 SSTORE
0x8aa POP
0x8ab DUP3
0x8ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c1 AND
0x8c2 CALLER
0x8c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d8 AND
0x8d9 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x8fa DUP5
0x8fb PUSH1 0x40
0x8fd MLOAD
0x8fe DUP1
0x8ff DUP3
0x900 DUP2
0x901 MSTORE
0x902 PUSH1 0x20
0x904 ADD
0x905 SWAP2
0x906 POP
0x907 POP
0x908 PUSH1 0x40
0x90a MLOAD
0x90b DUP1
0x90c SWAP2
0x90d SUB
0x90e SWAP1
0x90f LOG3
0x910 PUSH1 0x1
0x912 SWAP1
0x913 POP
0x914 SWAP3
0x915 SWAP2
0x916 POP
0x917 POP
0x918 JUMP
---
0x827: JUMPDEST 
0x828: V570 = 0x0
0x82b: V571 = 0x5
0x82d: V572 = 0x0
0x82f: V573 = CALLER
0x830: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x845: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x846: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0x85b: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x85d: M[0x0] = V577
0x85e: V578 = 0x20
0x860: V579 = ADD 0x20 0x0
0x863: M[0x20] = 0x5
0x864: V580 = 0x20
0x866: V581 = ADD 0x20 0x20
0x867: V582 = 0x0
0x869: V583 = SHA3 0x0 0x40
0x86a: V584 = 0x0
0x86d: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0x882: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x883: V587 = 0xffffffffffffffffffffffffffffffffffffffff
0x898: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x89a: M[0x0] = V588
0x89b: V589 = 0x20
0x89d: V590 = ADD 0x20 0x0
0x8a0: M[0x20] = V583
0x8a1: V591 = 0x20
0x8a3: V592 = ADD 0x20 0x20
0x8a4: V593 = 0x0
0x8a6: V594 = SHA3 0x0 0x40
0x8a9: S[V594] = V264
0x8ac: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c1: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x8c2: V597 = CALLER
0x8c3: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d8: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x8d9: V600 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x8fb: V601 = 0x40
0x8fd: V602 = M[0x40]
0x901: M[V602] = V264
0x902: V603 = 0x20
0x904: V604 = ADD 0x20 V602
0x908: V605 = 0x40
0x90a: V606 = M[0x40]
0x90d: V607 = SUB V604 V606
0x90f: LOG V606 V607 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V599 V596
0x910: V608 = 0x1
0x918: JUMP 0x416
---
Entry stack: [V11, 0x416, V261, V264]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x919
[0x919:0x925]
---
Predecessors: [0x43b]
Successors: [0x443]
---
0x919 JUMPDEST
0x91a PUSH1 0x12
0x91c PUSH1 0xa
0x91e EXP
0x91f PUSH3 0x989680
0x923 MUL
0x924 DUP2
0x925 JUMP
---
0x919: JUMPDEST 
0x91a: V609 = 0x12
0x91c: V610 = 0xa
0x91e: V611 = EXP 0xa 0x12
0x91f: V612 = 0x989680
0x923: V613 = MUL 0x989680 0xde0b6b3a7640000
0x925: JUMP 0x443
---
Entry stack: [V11, 0x443]
Stack pops: 1
Stack additions: [S0, 0x84595161401484a000000]
Exit stack: [V11, 0x443, 0x84595161401484a000000]

================================

Block 0x926
[0x926:0x938]
---
Predecessors: [0x464]
Successors: [0x939, 0x93f]
---
0x926 JUMPDEST
0x927 PUSH1 0x0
0x929 DUP1
0x92a PUSH1 0x0
0x92c DUP1
0x92d PUSH1 0x64
0x92f DUP7
0x930 MLOAD
0x931 GT
0x932 ISZERO
0x933 DUP1
0x934 ISZERO
0x935 PUSH2 0x93f
0x938 JUMPI
---
0x926: JUMPDEST 
0x927: V614 = 0x0
0x92a: V615 = 0x0
0x92d: V616 = 0x64
0x930: V617 = M[V310]
0x931: V618 = GT V617 0x64
0x932: V619 = ISZERO V618
0x934: V620 = ISZERO V619
0x935: V621 = 0x93f
0x938: JUMPI 0x93f V620
---
Entry stack: [V11, 0x4f1, V310, V330]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0, V619]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0, V619]

================================

Block 0x939
[0x939:0x93e]
---
Predecessors: [0x926]
Successors: [0x93f]
---
0x939 POP
0x93a DUP5
0x93b MLOAD
0x93c DUP7
0x93d MLOAD
0x93e EQ
---
0x93b: V622 = M[V330]
0x93d: V623 = M[V310]
0x93e: V624 = EQ V623 V622
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0, V619]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V624]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0, V624]

================================

Block 0x93f
[0x93f:0x945]
---
Predecessors: [0x926, 0x939]
Successors: [0x946, 0x94a]
---
0x93f JUMPDEST
0x940 ISZERO
0x941 ISZERO
0x942 PUSH2 0x94a
0x945 JUMPI
---
0x93f: JUMPDEST 
0x940: V625 = ISZERO S0
0x941: V626 = ISZERO V625
0x942: V627 = 0x94a
0x945: JUMPI 0x94a V626
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x946
[0x946:0x949]
---
Predecessors: [0x93f]
Successors: []
---
0x946 PUSH1 0x0
0x948 DUP1
0x949 REVERT
---
0x946: V628 = 0x0
0x949: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x94a
[0x94a:0x94e]
---
Predecessors: [0x93f]
Successors: [0x94f]
---
0x94a JUMPDEST
0x94b PUSH1 0x0
0x94d SWAP2
0x94e POP
---
0x94a: JUMPDEST 
0x94b: V629 = 0x0
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x94f
[0x94f:0x958]
---
Predecessors: [0x94a, 0x966]
Successors: [0x959, 0x981]
---
0x94f JUMPDEST
0x950 DUP5
0x951 MLOAD
0x952 DUP3
0x953 LT
0x954 ISZERO
0x955 PUSH2 0x981
0x958 JUMPI
---
0x94f: JUMPDEST 
0x951: V630 = M[V330]
0x953: V631 = LT S1 V630
0x954: V632 = ISZERO V631
0x955: V633 = 0x981
0x958: JUMPI 0x981 V632
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]

================================

Block 0x959
[0x959:0x964]
---
Predecessors: [0x94f]
Successors: [0x965, 0x966]
---
0x959 DUP5
0x95a DUP3
0x95b DUP2
0x95c MLOAD
0x95d DUP2
0x95e LT
0x95f ISZERO
0x960 ISZERO
0x961 PUSH2 0x966
0x964 JUMPI
---
0x95c: V634 = M[V330]
0x95e: V635 = LT S1 V634
0x95f: V636 = ISZERO V635
0x960: V637 = ISZERO V636
0x961: V638 = 0x966
0x964: JUMPI 0x966 V637
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S1]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0, V330, S1]

================================

Block 0x965
[0x965:0x965]
---
Predecessors: [0x959]
Successors: []
---
0x965 INVALID
---
0x965: INVALID 
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, 0x0, V330, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, 0x0, V330, S0]

================================

Block 0x966
[0x966:0x980]
---
Predecessors: [0x959]
Successors: [0x94f]
---
0x966 JUMPDEST
0x967 SWAP1
0x968 PUSH1 0x20
0x96a ADD
0x96b SWAP1
0x96c PUSH1 0x20
0x96e MUL
0x96f ADD
0x970 MLOAD
0x971 DUP4
0x972 ADD
0x973 SWAP3
0x974 POP
0x975 DUP2
0x976 DUP1
0x977 PUSH1 0x1
0x979 ADD
0x97a SWAP3
0x97b POP
0x97c POP
0x97d PUSH2 0x94f
0x980 JUMP
---
0x966: JUMPDEST 
0x968: V639 = 0x20
0x96a: V640 = ADD 0x20 V330
0x96c: V641 = 0x20
0x96e: V642 = MUL 0x20 S0
0x96f: V643 = ADD V642 V640
0x970: V644 = M[V643]
0x972: V645 = ADD S4 V644
0x977: V646 = 0x1
0x979: V647 = ADD 0x1 S3
0x97d: V648 = 0x94f
0x980: JUMP 0x94f
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, 0x0, V330, S0]
Stack pops: 5
Stack additions: [V645, V647, S2]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, V645, V647, 0x0]

================================

Block 0x981
[0x981:0x98b]
---
Predecessors: [0x94f]
Successors: [0x98c, 0x9d0]
---
0x981 JUMPDEST
0x982 PUSH1 0x0
0x984 DUP4
0x985 GT
0x986 DUP1
0x987 ISZERO
0x988 PUSH2 0x9d0
0x98b JUMPI
---
0x981: JUMPDEST 
0x982: V649 = 0x0
0x985: V650 = GT S2 0x0
0x987: V651 = ISZERO V650
0x988: V652 = 0x9d0
0x98b: JUMPI 0x9d0 V651
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V650]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0, V650]

================================

Block 0x98c
[0x98c:0x9cf]
---
Predecessors: [0x981]
Successors: [0x9d0]
---
0x98c POP
0x98d DUP3
0x98e PUSH1 0x4
0x990 PUSH1 0x0
0x992 CALLER
0x993 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a8 AND
0x9a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9be AND
0x9bf DUP2
0x9c0 MSTORE
0x9c1 PUSH1 0x20
0x9c3 ADD
0x9c4 SWAP1
0x9c5 DUP2
0x9c6 MSTORE
0x9c7 PUSH1 0x20
0x9c9 ADD
0x9ca PUSH1 0x0
0x9cc SHA3
0x9cd SLOAD
0x9ce LT
0x9cf ISZERO
---
0x98e: V653 = 0x4
0x990: V654 = 0x0
0x992: V655 = CALLER
0x993: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a8: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x9a9: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0x9be: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x9c0: M[0x0] = V659
0x9c1: V660 = 0x20
0x9c3: V661 = ADD 0x20 0x0
0x9c6: M[0x20] = 0x4
0x9c7: V662 = 0x20
0x9c9: V663 = ADD 0x20 0x20
0x9ca: V664 = 0x0
0x9cc: V665 = SHA3 0x0 0x40
0x9cd: V666 = S[V665]
0x9ce: V667 = LT V666 S3
0x9cf: V668 = ISZERO V667
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S3, S2, 0x0, V650]
Stack pops: 4
Stack additions: [S3, S2, S1, V668]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S3, S2, 0x0, V668]

================================

Block 0x9d0
[0x9d0:0x9d6]
---
Predecessors: [0x981, 0x98c]
Successors: [0x9d7, 0x9db]
---
0x9d0 JUMPDEST
0x9d1 ISZERO
0x9d2 ISZERO
0x9d3 PUSH2 0x9db
0x9d6 JUMPI
---
0x9d0: JUMPDEST 
0x9d1: V669 = ISZERO S0
0x9d2: V670 = ISZERO V669
0x9d3: V671 = 0x9db
0x9d6: JUMPI 0x9db V670
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S3, S2, 0x0]

================================

Block 0x9d7
[0x9d7:0x9da]
---
Predecessors: [0x9d0]
Successors: []
---
0x9d7 PUSH1 0x0
0x9d9 DUP1
0x9da REVERT
---
0x9d7: V672 = 0x0
0x9da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]

================================

Block 0x9db
[0x9db:0xa2c]
---
Predecessors: [0x9d0]
Successors: [0xa2d]
---
0x9db JUMPDEST
0x9dc DUP3
0x9dd PUSH1 0x4
0x9df PUSH1 0x0
0x9e1 CALLER
0x9e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f7 AND
0x9f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0d AND
0xa0e DUP2
0xa0f MSTORE
0xa10 PUSH1 0x20
0xa12 ADD
0xa13 SWAP1
0xa14 DUP2
0xa15 MSTORE
0xa16 PUSH1 0x20
0xa18 ADD
0xa19 PUSH1 0x0
0xa1b SHA3
0xa1c PUSH1 0x0
0xa1e DUP3
0xa1f DUP3
0xa20 SLOAD
0xa21 SUB
0xa22 SWAP3
0xa23 POP
0xa24 POP
0xa25 DUP2
0xa26 SWAP1
0xa27 SSTORE
0xa28 POP
0xa29 PUSH1 0x0
0xa2b SWAP1
0xa2c POP
---
0x9db: JUMPDEST 
0x9dd: V673 = 0x4
0x9df: V674 = 0x0
0x9e1: V675 = CALLER
0x9e2: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f7: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0x9f8: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0d: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xa0f: M[0x0] = V679
0xa10: V680 = 0x20
0xa12: V681 = ADD 0x20 0x0
0xa15: M[0x20] = 0x4
0xa16: V682 = 0x20
0xa18: V683 = ADD 0x20 0x20
0xa19: V684 = 0x0
0xa1b: V685 = SHA3 0x0 0x40
0xa1c: V686 = 0x0
0xa20: V687 = S[V685]
0xa21: V688 = SUB V687 S2
0xa27: S[V685] = V688
0xa29: V689 = 0x0
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x0]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, 0x0]

================================

Block 0xa2d
[0xa2d:0xa36]
---
Predecessors: [0x9db, 0xb65]
Successors: [0xa37, 0xb72]
---
0xa2d JUMPDEST
0xa2e DUP6
0xa2f MLOAD
0xa30 DUP2
0xa31 LT
0xa32 ISZERO
0xa33 PUSH2 0xb72
0xa36 JUMPI
---
0xa2d: JUMPDEST 
0xa2f: V690 = M[V310]
0xa31: V691 = LT S0 V690
0xa32: V692 = ISZERO V691
0xa33: V693 = 0xb72
0xa36: JUMPI 0xb72 V692
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0]

================================

Block 0xa37
[0xa37:0xa44]
---
Predecessors: [0xa2d]
Successors: [0xa45, 0xa46]
---
0xa37 PUSH1 0x0
0xa39 DUP6
0xa3a DUP3
0xa3b DUP2
0xa3c MLOAD
0xa3d DUP2
0xa3e LT
0xa3f ISZERO
0xa40 ISZERO
0xa41 PUSH2 0xa46
0xa44 JUMPI
---
0xa37: V694 = 0x0
0xa3c: V695 = M[V330]
0xa3e: V696 = LT S0 V695
0xa3f: V697 = ISZERO V696
0xa40: V698 = ISZERO V697
0xa41: V699 = 0xa46
0xa44: JUMPI 0xa46 V698
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, S4, S0]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0, 0x0, V330, S0]

================================

Block 0xa45
[0xa45:0xa45]
---
Predecessors: [0xa37]
Successors: []
---
0xa45 INVALID
---
0xa45: INVALID 
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S5, S4, S3, 0x0, V330, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S5, S4, S3, 0x0, V330, S0]

================================

Block 0xa46
[0xa46:0xa56]
---
Predecessors: [0xa37]
Successors: [0xa57, 0xb65]
---
0xa46 JUMPDEST
0xa47 SWAP1
0xa48 PUSH1 0x20
0xa4a ADD
0xa4b SWAP1
0xa4c PUSH1 0x20
0xa4e MUL
0xa4f ADD
0xa50 MLOAD
0xa51 GT
0xa52 ISZERO
0xa53 PUSH2 0xb65
0xa56 JUMPI
---
0xa46: JUMPDEST 
0xa48: V700 = 0x20
0xa4a: V701 = ADD 0x20 V330
0xa4c: V702 = 0x20
0xa4e: V703 = MUL 0x20 S0
0xa4f: V704 = ADD V703 V701
0xa50: V705 = M[V704]
0xa51: V706 = GT V705 0x0
0xa52: V707 = ISZERO V706
0xa53: V708 = 0xb65
0xa56: JUMPI 0xb65 V707
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S5, S4, S3, 0x0, V330, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S5, S4, S3]

================================

Block 0xa57
[0xa57:0xa62]
---
Predecessors: [0xa46]
Successors: [0xa63, 0xa64]
---
0xa57 DUP5
0xa58 DUP2
0xa59 DUP2
0xa5a MLOAD
0xa5b DUP2
0xa5c LT
0xa5d ISZERO
0xa5e ISZERO
0xa5f PUSH2 0xa64
0xa62 JUMPI
---
0xa5a: V709 = M[V330]
0xa5c: V710 = LT S0 V709
0xa5d: V711 = ISZERO V710
0xa5e: V712 = ISZERO V711
0xa5f: V713 = 0xa64
0xa62: JUMPI 0xa64 V712
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S0]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0, V330, S0]

================================

Block 0xa63
[0xa63:0xa63]
---
Predecessors: [0xa57]
Successors: []
---
0xa63 INVALID
---
0xa63: INVALID 
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V330, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V330, S0]

================================

Block 0xa64
[0xa64:0xa7e]
---
Predecessors: [0xa57]
Successors: [0xa7f, 0xa80]
---
0xa64 JUMPDEST
0xa65 SWAP1
0xa66 PUSH1 0x20
0xa68 ADD
0xa69 SWAP1
0xa6a PUSH1 0x20
0xa6c MUL
0xa6d ADD
0xa6e MLOAD
0xa6f PUSH1 0x4
0xa71 PUSH1 0x0
0xa73 DUP9
0xa74 DUP5
0xa75 DUP2
0xa76 MLOAD
0xa77 DUP2
0xa78 LT
0xa79 ISZERO
0xa7a ISZERO
0xa7b PUSH2 0xa80
0xa7e JUMPI
---
0xa64: JUMPDEST 
0xa66: V714 = 0x20
0xa68: V715 = ADD 0x20 V330
0xa6a: V716 = 0x20
0xa6c: V717 = MUL 0x20 S0
0xa6d: V718 = ADD V717 V715
0xa6e: V719 = M[V718]
0xa6f: V720 = 0x4
0xa71: V721 = 0x0
0xa76: V722 = M[V310]
0xa78: V723 = LT S2 V722
0xa79: V724 = ISZERO V723
0xa7a: V725 = ISZERO V724
0xa7b: V726 = 0xa80
0xa7e: JUMPI 0xa80 V725
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V330, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V719, 0x4, 0x0, S7, S2]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V719, 0x4, 0x0, V310, S2]

================================

Block 0xa7f
[0xa7f:0xa7f]
---
Predecessors: [0xa64]
Successors: []
---
0xa7f INVALID
---
0xa7f: INVALID 
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5, V719, 0x4, 0x0, V310, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5, V719, 0x4, 0x0, V310, S0]

================================

Block 0xa80
[0xa80:0xadd]
---
Predecessors: [0xa64]
Successors: [0xade, 0xadf]
---
0xa80 JUMPDEST
0xa81 SWAP1
0xa82 PUSH1 0x20
0xa84 ADD
0xa85 SWAP1
0xa86 PUSH1 0x20
0xa88 MUL
0xa89 ADD
0xa8a MLOAD
0xa8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa0 AND
0xaa1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab6 AND
0xab7 DUP2
0xab8 MSTORE
0xab9 PUSH1 0x20
0xabb ADD
0xabc SWAP1
0xabd DUP2
0xabe MSTORE
0xabf PUSH1 0x20
0xac1 ADD
0xac2 PUSH1 0x0
0xac4 SHA3
0xac5 PUSH1 0x0
0xac7 DUP3
0xac8 DUP3
0xac9 SLOAD
0xaca ADD
0xacb SWAP3
0xacc POP
0xacd POP
0xace DUP2
0xacf SWAP1
0xad0 SSTORE
0xad1 POP
0xad2 DUP6
0xad3 DUP2
0xad4 DUP2
0xad5 MLOAD
0xad6 DUP2
0xad7 LT
0xad8 ISZERO
0xad9 ISZERO
0xada PUSH2 0xadf
0xadd JUMPI
---
0xa80: JUMPDEST 
0xa82: V727 = 0x20
0xa84: V728 = ADD 0x20 V310
0xa86: V729 = 0x20
0xa88: V730 = MUL 0x20 S0
0xa89: V731 = ADD V730 V728
0xa8a: V732 = M[V731]
0xa8b: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa0: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0xaa1: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xab6: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0xab8: M[0x0] = V736
0xab9: V737 = 0x20
0xabb: V738 = ADD 0x20 0x0
0xabe: M[0x20] = 0x4
0xabf: V739 = 0x20
0xac1: V740 = ADD 0x20 0x20
0xac2: V741 = 0x0
0xac4: V742 = SHA3 0x0 0x40
0xac5: V743 = 0x0
0xac9: V744 = S[V742]
0xaca: V745 = ADD V744 V719
0xad0: S[V742] = V745
0xad5: V746 = M[V310]
0xad7: V747 = LT S5 V746
0xad8: V748 = ISZERO V747
0xad9: V749 = ISZERO V748
0xada: V750 = 0xadf
0xadd: JUMPI 0xadf V749
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5, V719, 0x4, 0x0, V310, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S10, S5]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5, V310, S5]

================================

Block 0xade
[0xade:0xade]
---
Predecessors: [0xa80]
Successors: []
---
0xade INVALID
---
0xade: INVALID 
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V310, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V310, S0]

================================

Block 0xadf
[0xadf:0xb43]
---
Predecessors: [0xa80]
Successors: [0xb44, 0xb45]
---
0xadf JUMPDEST
0xae0 SWAP1
0xae1 PUSH1 0x20
0xae3 ADD
0xae4 SWAP1
0xae5 PUSH1 0x20
0xae7 MUL
0xae8 ADD
0xae9 MLOAD
0xaea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaff AND
0xb00 CALLER
0xb01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb16 AND
0xb17 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb38 DUP8
0xb39 DUP5
0xb3a DUP2
0xb3b MLOAD
0xb3c DUP2
0xb3d LT
0xb3e ISZERO
0xb3f ISZERO
0xb40 PUSH2 0xb45
0xb43 JUMPI
---
0xadf: JUMPDEST 
0xae1: V751 = 0x20
0xae3: V752 = ADD 0x20 V310
0xae5: V753 = 0x20
0xae7: V754 = MUL 0x20 S0
0xae8: V755 = ADD V754 V752
0xae9: V756 = M[V755]
0xaea: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xaff: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xb00: V759 = CALLER
0xb01: V760 = 0xffffffffffffffffffffffffffffffffffffffff
0xb16: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V759
0xb17: V762 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb3b: V763 = M[V330]
0xb3d: V764 = LT S2 V763
0xb3e: V765 = ISZERO V764
0xb3f: V766 = ISZERO V765
0xb40: V767 = 0xb45
0xb43: JUMPI 0xb45 V766
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V310, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V758, V761, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, S6, S2]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S4, S3, S2, V758, V761, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V330, S2]

================================

Block 0xb44
[0xb44:0xb44]
---
Predecessors: [0xadf]
Successors: []
---
0xb44 INVALID
---
0xb44: INVALID 
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5, V758, V761, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V330, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5, V758, V761, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V330, S0]

================================

Block 0xb45
[0xb45:0xb64]
---
Predecessors: [0xadf]
Successors: [0xb65]
---
0xb45 JUMPDEST
0xb46 SWAP1
0xb47 PUSH1 0x20
0xb49 ADD
0xb4a SWAP1
0xb4b PUSH1 0x20
0xb4d MUL
0xb4e ADD
0xb4f MLOAD
0xb50 PUSH1 0x40
0xb52 MLOAD
0xb53 DUP1
0xb54 DUP3
0xb55 DUP2
0xb56 MSTORE
0xb57 PUSH1 0x20
0xb59 ADD
0xb5a SWAP2
0xb5b POP
0xb5c POP
0xb5d PUSH1 0x40
0xb5f MLOAD
0xb60 DUP1
0xb61 SWAP2
0xb62 SUB
0xb63 SWAP1
0xb64 LOG3
---
0xb45: JUMPDEST 
0xb47: V768 = 0x20
0xb49: V769 = ADD 0x20 V330
0xb4b: V770 = 0x20
0xb4d: V771 = MUL 0x20 S0
0xb4e: V772 = ADD V771 V769
0xb4f: V773 = M[V772]
0xb50: V774 = 0x40
0xb52: V775 = M[0x40]
0xb56: M[V775] = V773
0xb57: V776 = 0x20
0xb59: V777 = ADD 0x20 V775
0xb5d: V778 = 0x40
0xb5f: V779 = M[0x40]
0xb62: V780 = SUB V777 V779
0xb64: LOG V779 V780 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V761 V758
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5, V758, V761, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V330, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S7, S6, S5]

================================

Block 0xb65
[0xb65:0xb71]
---
Predecessors: [0xa46, 0xb45]
Successors: [0xa2d]
---
0xb65 JUMPDEST
0xb66 DUP1
0xb67 DUP1
0xb68 PUSH1 0x1
0xb6a ADD
0xb6b SWAP2
0xb6c POP
0xb6d POP
0xb6e PUSH2 0xa2d
0xb71 JUMP
---
0xb65: JUMPDEST 
0xb68: V781 = 0x1
0xb6a: V782 = ADD 0x1 S0
0xb6e: V783 = 0xa2d
0xb71: JUMP 0xa2d
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [V782]
Exit stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, V782]

================================

Block 0xb72
[0xb72:0xb7e]
---
Predecessors: [0xa2d]
Successors: [0x4f1]
---
0xb72 JUMPDEST
0xb73 PUSH1 0x1
0xb75 SWAP4
0xb76 POP
0xb77 POP
0xb78 POP
0xb79 POP
0xb7a SWAP3
0xb7b SWAP2
0xb7c POP
0xb7d POP
0xb7e JUMP
---
0xb72: JUMPDEST 
0xb73: V784 = 0x1
0xb7e: JUMP 0x4f1
---
Entry stack: [V11, 0x4f1, V310, V330, 0x0, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xb7f
[0xb7f:0xbca]
---
Predecessors: [0x516]
Successors: [0xbcb, 0xc4c]
---
0xb7f JUMPDEST
0xb80 PUSH1 0x0
0xb82 DUP2
0xb83 PUSH1 0x4
0xb85 PUSH1 0x0
0xb87 DUP7
0xb88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9d AND
0xb9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb3 AND
0xbb4 DUP2
0xbb5 MSTORE
0xbb6 PUSH1 0x20
0xbb8 ADD
0xbb9 SWAP1
0xbba DUP2
0xbbb MSTORE
0xbbc PUSH1 0x20
0xbbe ADD
0xbbf PUSH1 0x0
0xbc1 SHA3
0xbc2 SLOAD
0xbc3 LT
0xbc4 ISZERO
0xbc5 DUP1
0xbc6 ISZERO
0xbc7 PUSH2 0xc4c
0xbca JUMPI
---
0xb7f: JUMPDEST 
0xb80: V785 = 0x0
0xb83: V786 = 0x4
0xb85: V787 = 0x0
0xb88: V788 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9d: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0xb9e: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb3: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V789
0xbb5: M[0x0] = V791
0xbb6: V792 = 0x20
0xbb8: V793 = ADD 0x20 0x0
0xbbb: M[0x20] = 0x4
0xbbc: V794 = 0x20
0xbbe: V795 = ADD 0x20 0x20
0xbbf: V796 = 0x0
0xbc1: V797 = SHA3 0x0 0x40
0xbc2: V798 = S[V797]
0xbc3: V799 = LT V798 V366
0xbc4: V800 = ISZERO V799
0xbc6: V801 = ISZERO V800
0xbc7: V802 = 0xc4c
0xbca: JUMPI 0xc4c V801
---
Entry stack: [V11, 0x56a, V358, V363, V366]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V800]
Exit stack: [V11, 0x56a, V358, V363, V366, 0x0, V800]

================================

Block 0xbcb
[0xbcb:0xc4b]
---
Predecessors: [0xb7f]
Successors: [0xc4c]
---
0xbcb POP
0xbcc DUP2
0xbcd PUSH1 0x5
0xbcf PUSH1 0x0
0xbd1 DUP7
0xbd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe7 AND
0xbe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfd AND
0xbfe DUP2
0xbff MSTORE
0xc00 PUSH1 0x20
0xc02 ADD
0xc03 SWAP1
0xc04 DUP2
0xc05 MSTORE
0xc06 PUSH1 0x20
0xc08 ADD
0xc09 PUSH1 0x0
0xc0b SHA3
0xc0c PUSH1 0x0
0xc0e CALLER
0xc0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc24 AND
0xc25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3a AND
0xc3b DUP2
0xc3c MSTORE
0xc3d PUSH1 0x20
0xc3f ADD
0xc40 SWAP1
0xc41 DUP2
0xc42 MSTORE
0xc43 PUSH1 0x20
0xc45 ADD
0xc46 PUSH1 0x0
0xc48 SHA3
0xc49 SLOAD
0xc4a LT
0xc4b ISZERO
---
0xbcd: V803 = 0x5
0xbcf: V804 = 0x0
0xbd2: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe7: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0xbe8: V807 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfd: V808 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0xbff: M[0x0] = V808
0xc00: V809 = 0x20
0xc02: V810 = ADD 0x20 0x0
0xc05: M[0x20] = 0x5
0xc06: V811 = 0x20
0xc08: V812 = ADD 0x20 0x20
0xc09: V813 = 0x0
0xc0b: V814 = SHA3 0x0 0x40
0xc0c: V815 = 0x0
0xc0e: V816 = CALLER
0xc0f: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xc24: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xc25: V819 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3a: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0xc3c: M[0x0] = V820
0xc3d: V821 = 0x20
0xc3f: V822 = ADD 0x20 0x0
0xc42: M[0x20] = V814
0xc43: V823 = 0x20
0xc45: V824 = ADD 0x20 0x20
0xc46: V825 = 0x0
0xc48: V826 = SHA3 0x0 0x40
0xc49: V827 = S[V826]
0xc4a: V828 = LT V827 V366
0xc4b: V829 = ISZERO V828
---
Entry stack: [V11, 0x56a, V358, V363, V366, 0x0, V800]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V829]
Exit stack: [V11, 0x56a, V358, V363, V366, 0x0, V829]

================================

Block 0xc4c
[0xc4c:0xc52]
---
Predecessors: [0xb7f, 0xbcb]
Successors: [0xc53, 0xc58]
---
0xc4c JUMPDEST
0xc4d DUP1
0xc4e ISZERO
0xc4f PUSH2 0xc58
0xc52 JUMPI
---
0xc4c: JUMPDEST 
0xc4e: V830 = ISZERO S0
0xc4f: V831 = 0xc58
0xc52: JUMPI 0xc58 V830
---
Entry stack: [V11, 0x56a, V358, V363, V366, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x56a, V358, V363, V366, 0x0, S0]

================================

Block 0xc53
[0xc53:0xc57]
---
Predecessors: [0xc4c]
Successors: [0xc58]
---
0xc53 POP
0xc54 PUSH1 0x0
0xc56 DUP3
0xc57 GT
---
0xc54: V832 = 0x0
0xc57: V833 = GT V366 0x0
---
Entry stack: [V11, 0x56a, V358, V363, V366, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V833]
Exit stack: [V11, 0x56a, V358, V363, V366, 0x0, V833]

================================

Block 0xc58
[0xc58:0xc5e]
---
Predecessors: [0xc4c, 0xc53]
Successors: [0xc5f, 0xc63]
---
0xc58 JUMPDEST
0xc59 ISZERO
0xc5a ISZERO
0xc5b PUSH2 0xc63
0xc5e JUMPI
---
0xc58: JUMPDEST 
0xc59: V834 = ISZERO S0
0xc5a: V835 = ISZERO V834
0xc5b: V836 = 0xc63
0xc5e: JUMPI 0xc63 V835
---
Entry stack: [V11, 0x56a, V358, V363, V366, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56a, V358, V363, V366, 0x0]

================================

Block 0xc5f
[0xc5f:0xc62]
---
Predecessors: [0xc58]
Successors: []
---
0xc5f PUSH1 0x0
0xc61 DUP1
0xc62 REVERT
---
0xc5f: V837 = 0x0
0xc62: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56a, V358, V363, V366, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56a, V358, V363, V366, 0x0]

================================

Block 0xc63
[0xc63:0xdf6]
---
Predecessors: [0xc58]
Successors: [0x56a]
---
0xc63 JUMPDEST
0xc64 DUP2
0xc65 PUSH1 0x4
0xc67 PUSH1 0x0
0xc69 DUP7
0xc6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7f AND
0xc80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc95 AND
0xc96 DUP2
0xc97 MSTORE
0xc98 PUSH1 0x20
0xc9a ADD
0xc9b SWAP1
0xc9c DUP2
0xc9d MSTORE
0xc9e PUSH1 0x20
0xca0 ADD
0xca1 PUSH1 0x0
0xca3 SHA3
0xca4 PUSH1 0x0
0xca6 DUP3
0xca7 DUP3
0xca8 SLOAD
0xca9 SUB
0xcaa SWAP3
0xcab POP
0xcac POP
0xcad DUP2
0xcae SWAP1
0xcaf SSTORE
0xcb0 POP
0xcb1 DUP2
0xcb2 PUSH1 0x5
0xcb4 PUSH1 0x0
0xcb6 DUP7
0xcb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccc AND
0xccd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce2 AND
0xce3 DUP2
0xce4 MSTORE
0xce5 PUSH1 0x20
0xce7 ADD
0xce8 SWAP1
0xce9 DUP2
0xcea MSTORE
0xceb PUSH1 0x20
0xced ADD
0xcee PUSH1 0x0
0xcf0 SHA3
0xcf1 PUSH1 0x0
0xcf3 CALLER
0xcf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd09 AND
0xd0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1f AND
0xd20 DUP2
0xd21 MSTORE
0xd22 PUSH1 0x20
0xd24 ADD
0xd25 SWAP1
0xd26 DUP2
0xd27 MSTORE
0xd28 PUSH1 0x20
0xd2a ADD
0xd2b PUSH1 0x0
0xd2d SHA3
0xd2e PUSH1 0x0
0xd30 DUP3
0xd31 DUP3
0xd32 SLOAD
0xd33 SUB
0xd34 SWAP3
0xd35 POP
0xd36 POP
0xd37 DUP2
0xd38 SWAP1
0xd39 SSTORE
0xd3a POP
0xd3b DUP2
0xd3c PUSH1 0x4
0xd3e PUSH1 0x0
0xd40 DUP6
0xd41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd56 AND
0xd57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6c AND
0xd6d DUP2
0xd6e MSTORE
0xd6f PUSH1 0x20
0xd71 ADD
0xd72 SWAP1
0xd73 DUP2
0xd74 MSTORE
0xd75 PUSH1 0x20
0xd77 ADD
0xd78 PUSH1 0x0
0xd7a SHA3
0xd7b PUSH1 0x0
0xd7d DUP3
0xd7e DUP3
0xd7f SLOAD
0xd80 ADD
0xd81 SWAP3
0xd82 POP
0xd83 POP
0xd84 DUP2
0xd85 SWAP1
0xd86 SSTORE
0xd87 POP
0xd88 DUP3
0xd89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9e AND
0xd9f DUP5
0xda0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb5 AND
0xdb6 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdd7 DUP5
0xdd8 PUSH1 0x40
0xdda MLOAD
0xddb DUP1
0xddc DUP3
0xddd DUP2
0xdde MSTORE
0xddf PUSH1 0x20
0xde1 ADD
0xde2 SWAP2
0xde3 POP
0xde4 POP
0xde5 PUSH1 0x40
0xde7 MLOAD
0xde8 DUP1
0xde9 SWAP2
0xdea SUB
0xdeb SWAP1
0xdec LOG3
0xded PUSH1 0x1
0xdef SWAP1
0xdf0 POP
0xdf1 SWAP4
0xdf2 SWAP3
0xdf3 POP
0xdf4 POP
0xdf5 POP
0xdf6 JUMP
---
0xc63: JUMPDEST 
0xc65: V838 = 0x4
0xc67: V839 = 0x0
0xc6a: V840 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7f: V841 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0xc80: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xc95: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff V841
0xc97: M[0x0] = V843
0xc98: V844 = 0x20
0xc9a: V845 = ADD 0x20 0x0
0xc9d: M[0x20] = 0x4
0xc9e: V846 = 0x20
0xca0: V847 = ADD 0x20 0x20
0xca1: V848 = 0x0
0xca3: V849 = SHA3 0x0 0x40
0xca4: V850 = 0x0
0xca8: V851 = S[V849]
0xca9: V852 = SUB V851 V366
0xcaf: S[V849] = V852
0xcb2: V853 = 0x5
0xcb4: V854 = 0x0
0xcb7: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xccc: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0xccd: V857 = 0xffffffffffffffffffffffffffffffffffffffff
0xce2: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff V856
0xce4: M[0x0] = V858
0xce5: V859 = 0x20
0xce7: V860 = ADD 0x20 0x0
0xcea: M[0x20] = 0x5
0xceb: V861 = 0x20
0xced: V862 = ADD 0x20 0x20
0xcee: V863 = 0x0
0xcf0: V864 = SHA3 0x0 0x40
0xcf1: V865 = 0x0
0xcf3: V866 = CALLER
0xcf4: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0xd09: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0xd0a: V869 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1f: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff V868
0xd21: M[0x0] = V870
0xd22: V871 = 0x20
0xd24: V872 = ADD 0x20 0x0
0xd27: M[0x20] = V864
0xd28: V873 = 0x20
0xd2a: V874 = ADD 0x20 0x20
0xd2b: V875 = 0x0
0xd2d: V876 = SHA3 0x0 0x40
0xd2e: V877 = 0x0
0xd32: V878 = S[V876]
0xd33: V879 = SUB V878 V366
0xd39: S[V876] = V879
0xd3c: V880 = 0x4
0xd3e: V881 = 0x0
0xd41: V882 = 0xffffffffffffffffffffffffffffffffffffffff
0xd56: V883 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0xd57: V884 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6c: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0xd6e: M[0x0] = V885
0xd6f: V886 = 0x20
0xd71: V887 = ADD 0x20 0x0
0xd74: M[0x20] = 0x4
0xd75: V888 = 0x20
0xd77: V889 = ADD 0x20 0x20
0xd78: V890 = 0x0
0xd7a: V891 = SHA3 0x0 0x40
0xd7b: V892 = 0x0
0xd7f: V893 = S[V891]
0xd80: V894 = ADD V893 V366
0xd86: S[V891] = V894
0xd89: V895 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9e: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0xda0: V897 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb5: V898 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0xdb6: V899 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdd8: V900 = 0x40
0xdda: V901 = M[0x40]
0xdde: M[V901] = V366
0xddf: V902 = 0x20
0xde1: V903 = ADD 0x20 V901
0xde5: V904 = 0x40
0xde7: V905 = M[0x40]
0xdea: V906 = SUB V903 V905
0xdec: LOG V905 V906 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V898 V896
0xded: V907 = 0x1
0xdf6: JUMP 0x56a
---
Entry stack: [V11, 0x56a, V358, V363, V366, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xdf7
[0xdf7:0xdfb]
---
Predecessors: [0x58f]
Successors: [0x597]
---
0xdf7 JUMPDEST
0xdf8 PUSH1 0x12
0xdfa DUP2
0xdfb JUMP
---
0xdf7: JUMPDEST 
0xdf8: V908 = 0x12
0xdfb: JUMP 0x597
---
Entry stack: [V11, 0x597]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V11, 0x597, 0x12]

================================

Block 0xdfc
[0xdfc:0xe55]
---
Predecessors: [0x5b8]
Successors: [0xe56, 0xe5a]
---
0xdfc JUMPDEST
0xdfd PUSH1 0x0
0xdff DUP1
0xe00 PUSH1 0x0
0xe02 DUP1
0xe03 SWAP1
0xe04 SLOAD
0xe05 SWAP1
0xe06 PUSH2 0x100
0xe09 EXP
0xe0a SWAP1
0xe0b DIV
0xe0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe21 AND
0xe22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe37 AND
0xe38 CALLER
0xe39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4e AND
0xe4f EQ
0xe50 ISZERO
0xe51 ISZERO
0xe52 PUSH2 0xe5a
0xe55 JUMPI
---
0xdfc: JUMPDEST 
0xdfd: V909 = 0x0
0xe00: V910 = 0x0
0xe04: V911 = S[0x0]
0xe06: V912 = 0x100
0xe09: V913 = EXP 0x100 0x0
0xe0b: V914 = DIV V911 0x1
0xe0c: V915 = 0xffffffffffffffffffffffffffffffffffffffff
0xe21: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0xe22: V917 = 0xffffffffffffffffffffffffffffffffffffffff
0xe37: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0xe38: V919 = CALLER
0xe39: V920 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4e: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V919
0xe4f: V922 = EQ V921 V918
0xe50: V923 = ISZERO V922
0xe51: V924 = ISZERO V923
0xe52: V925 = 0xe5a
0xe55: JUMPI 0xe5a V924
---
Entry stack: [V11, 0x5e4, V402]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x5e4, V402, 0x0, 0x0]

================================

Block 0xe56
[0xe56:0xe59]
---
Predecessors: [0xdfc]
Successors: []
---
0xe56 PUSH1 0x0
0xe58 DUP1
0xe59 REVERT
---
0xe56: V926 = 0x0
0xe59: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e4, V402, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, 0x0]

================================

Block 0xe5a
[0xe5a:0xe8f]
---
Predecessors: [0xdfc]
Successors: [0xe90, 0xf0c]
---
0xe5a JUMPDEST
0xe5b PUSH1 0x0
0xe5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe72 AND
0xe73 DUP4
0xe74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe89 AND
0xe8a EQ
0xe8b ISZERO
0xe8c PUSH2 0xf0c
0xe8f JUMPI
---
0xe5a: JUMPDEST 
0xe5b: V927 = 0x0
0xe5d: V928 = 0xffffffffffffffffffffffffffffffffffffffff
0xe72: V929 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xe74: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0xe89: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0xe8a: V932 = EQ V931 0x0
0xe8b: V933 = ISZERO V932
0xe8c: V934 = 0xf0c
0xe8f: JUMPI 0xf0c V933
---
Entry stack: [V11, 0x5e4, V402, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x5e4, V402, 0x0, 0x0]

================================

Block 0xe90
[0xe90:0xf02]
---
Predecessors: [0xe5a]
Successors: [0xf03, 0xf07]
---
0xe90 PUSH1 0x0
0xe92 DUP1
0xe93 SWAP1
0xe94 SLOAD
0xe95 SWAP1
0xe96 PUSH2 0x100
0xe99 EXP
0xe9a SWAP1
0xe9b DIV
0xe9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb1 AND
0xeb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec7 AND
0xec8 PUSH2 0x8fc
0xecb ADDRESS
0xecc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee1 AND
0xee2 BALANCE
0xee3 SWAP1
0xee4 DUP2
0xee5 ISZERO
0xee6 MUL
0xee7 SWAP1
0xee8 PUSH1 0x40
0xeea MLOAD
0xeeb PUSH1 0x0
0xeed PUSH1 0x40
0xeef MLOAD
0xef0 DUP1
0xef1 DUP4
0xef2 SUB
0xef3 DUP2
0xef4 DUP6
0xef5 DUP9
0xef6 DUP9
0xef7 CALL
0xef8 SWAP4
0xef9 POP
0xefa POP
0xefb POP
0xefc POP
0xefd ISZERO
0xefe ISZERO
0xeff PUSH2 0xf07
0xf02 JUMPI
---
0xe90: V935 = 0x0
0xe94: V936 = S[0x0]
0xe96: V937 = 0x100
0xe99: V938 = EXP 0x100 0x0
0xe9b: V939 = DIV V936 0x1
0xe9c: V940 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb1: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff V939
0xeb2: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0xec7: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0xec8: V944 = 0x8fc
0xecb: V945 = ADDRESS
0xecc: V946 = 0xffffffffffffffffffffffffffffffffffffffff
0xee1: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0xee2: V948 = BALANCE V947
0xee5: V949 = ISZERO V948
0xee6: V950 = MUL V949 0x8fc
0xee8: V951 = 0x40
0xeea: V952 = M[0x40]
0xeeb: V953 = 0x0
0xeed: V954 = 0x40
0xeef: V955 = M[0x40]
0xef2: V956 = SUB V952 V955
0xef7: V957 = CALL V950 V943 V948 V955 V956 V955 0x0
0xefd: V958 = ISZERO V957
0xefe: V959 = ISZERO V958
0xeff: V960 = 0xf07
0xf02: JUMPI 0xf07 V959
---
Entry stack: [V11, 0x5e4, V402, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, 0x0]

================================

Block 0xf03
[0xf03:0xf06]
---
Predecessors: [0xe90]
Successors: []
---
0xf03 PUSH1 0x0
0xf05 DUP1
0xf06 REVERT
---
0xf03: V961 = 0x0
0xf06: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e4, V402, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, 0x0]

================================

Block 0xf07
[0xf07:0xf0b]
---
Predecessors: [0xe90]
Successors: [0x10b5]
---
0xf07 JUMPDEST
0xf08 PUSH2 0x10b5
0xf0b JUMP
---
0xf07: JUMPDEST 
0xf08: V962 = 0x10b5
0xf0b: JUMP 0x10b5
---
Entry stack: [V11, 0x5e4, V402, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, 0x0]

================================

Block 0xf0c
[0xf0c:0xfeb]
---
Predecessors: [0xe5a]
Successors: [0xfec, 0xff0]
---
0xf0c JUMPDEST
0xf0d DUP3
0xf0e SWAP1
0xf0f POP
0xf10 DUP1
0xf11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf26 AND
0xf27 PUSH4 0xa9059cbb
0xf2c PUSH1 0x0
0xf2e DUP1
0xf2f SWAP1
0xf30 SLOAD
0xf31 SWAP1
0xf32 PUSH2 0x100
0xf35 EXP
0xf36 SWAP1
0xf37 DIV
0xf38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4d AND
0xf4e DUP4
0xf4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf64 AND
0xf65 PUSH4 0x70a08231
0xf6a ADDRESS
0xf6b PUSH1 0x0
0xf6d PUSH1 0x40
0xf6f MLOAD
0xf70 PUSH1 0x20
0xf72 ADD
0xf73 MSTORE
0xf74 PUSH1 0x40
0xf76 MLOAD
0xf77 DUP3
0xf78 PUSH4 0xffffffff
0xf7d AND
0xf7e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf9c MUL
0xf9d DUP2
0xf9e MSTORE
0xf9f PUSH1 0x4
0xfa1 ADD
0xfa2 DUP1
0xfa3 DUP3
0xfa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb9 AND
0xfba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcf AND
0xfd0 DUP2
0xfd1 MSTORE
0xfd2 PUSH1 0x20
0xfd4 ADD
0xfd5 SWAP2
0xfd6 POP
0xfd7 POP
0xfd8 PUSH1 0x20
0xfda PUSH1 0x40
0xfdc MLOAD
0xfdd DUP1
0xfde DUP4
0xfdf SUB
0xfe0 DUP2
0xfe1 PUSH1 0x0
0xfe3 DUP8
0xfe4 DUP1
0xfe5 EXTCODESIZE
0xfe6 ISZERO
0xfe7 ISZERO
0xfe8 PUSH2 0xff0
0xfeb JUMPI
---
0xf0c: JUMPDEST 
0xf11: V963 = 0xffffffffffffffffffffffffffffffffffffffff
0xf26: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0xf27: V965 = 0xa9059cbb
0xf2c: V966 = 0x0
0xf30: V967 = S[0x0]
0xf32: V968 = 0x100
0xf35: V969 = EXP 0x100 0x0
0xf37: V970 = DIV V967 0x1
0xf38: V971 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4d: V972 = AND 0xffffffffffffffffffffffffffffffffffffffff V970
0xf4f: V973 = 0xffffffffffffffffffffffffffffffffffffffff
0xf64: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0xf65: V975 = 0x70a08231
0xf6a: V976 = ADDRESS
0xf6b: V977 = 0x0
0xf6d: V978 = 0x40
0xf6f: V979 = M[0x40]
0xf70: V980 = 0x20
0xf72: V981 = ADD 0x20 V979
0xf73: M[V981] = 0x0
0xf74: V982 = 0x40
0xf76: V983 = M[0x40]
0xf78: V984 = 0xffffffff
0xf7d: V985 = AND 0xffffffff 0x70a08231
0xf7e: V986 = 0x100000000000000000000000000000000000000000000000000000000
0xf9c: V987 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xf9e: M[V983] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf9f: V988 = 0x4
0xfa1: V989 = ADD 0x4 V983
0xfa4: V990 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb9: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V976
0xfba: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcf: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0xfd1: M[V989] = V993
0xfd2: V994 = 0x20
0xfd4: V995 = ADD 0x20 V989
0xfd8: V996 = 0x20
0xfda: V997 = 0x40
0xfdc: V998 = M[0x40]
0xfdf: V999 = SUB V995 V998
0xfe1: V1000 = 0x0
0xfe5: V1001 = EXTCODESIZE V974
0xfe6: V1002 = ISZERO V1001
0xfe7: V1003 = ISZERO V1002
0xfe8: V1004 = 0xff0
0xfeb: JUMPI 0xff0 V1003
---
Entry stack: [V11, 0x5e4, V402, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995, 0x20, V998, V999, V998, 0x0, V974]
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995, 0x20, V998, V999, V998, 0x0, V974]

================================

Block 0xfec
[0xfec:0xfef]
---
Predecessors: [0xf0c]
Successors: []
---
0xfec PUSH1 0x0
0xfee DUP1
0xfef REVERT
---
0xfec: V1005 = 0x0
0xfef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995, 0x20, V998, V999, V998, 0x0, V974]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995, 0x20, V998, V999, V998, 0x0, V974]

================================

Block 0xff0
[0xff0:0xffc]
---
Predecessors: [0xf0c]
Successors: [0xffd, 0x1001]
---
0xff0 JUMPDEST
0xff1 PUSH2 0x2c6
0xff4 GAS
0xff5 SUB
0xff6 CALL
0xff7 ISZERO
0xff8 ISZERO
0xff9 PUSH2 0x1001
0xffc JUMPI
---
0xff0: JUMPDEST 
0xff1: V1006 = 0x2c6
0xff4: V1007 = GAS
0xff5: V1008 = SUB V1007 0x2c6
0xff6: V1009 = CALL V1008 V974 0x0 V998 V999 V998 0x20
0xff7: V1010 = ISZERO V1009
0xff8: V1011 = ISZERO V1010
0xff9: V1012 = 0x1001
0xffc: JUMPI 0x1001 V1011
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995, 0x20, V998, V999, V998, 0x0, V974]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995]

================================

Block 0xffd
[0xffd:0x1000]
---
Predecessors: [0xff0]
Successors: []
---
0xffd PUSH1 0x0
0xfff DUP1
0x1000 REVERT
---
0xffd: V1013 = 0x0
0x1000: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995]

================================

Block 0x1001
[0x1001:0x1093]
---
Predecessors: [0xff0]
Successors: [0x1094, 0x1098]
---
0x1001 JUMPDEST
0x1002 POP
0x1003 POP
0x1004 POP
0x1005 PUSH1 0x40
0x1007 MLOAD
0x1008 DUP1
0x1009 MLOAD
0x100a SWAP1
0x100b POP
0x100c PUSH1 0x0
0x100e PUSH1 0x40
0x1010 MLOAD
0x1011 PUSH1 0x20
0x1013 ADD
0x1014 MSTORE
0x1015 PUSH1 0x40
0x1017 MLOAD
0x1018 DUP4
0x1019 PUSH4 0xffffffff
0x101e AND
0x101f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x103d MUL
0x103e DUP2
0x103f MSTORE
0x1040 PUSH1 0x4
0x1042 ADD
0x1043 DUP1
0x1044 DUP4
0x1045 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105a AND
0x105b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1070 AND
0x1071 DUP2
0x1072 MSTORE
0x1073 PUSH1 0x20
0x1075 ADD
0x1076 DUP3
0x1077 DUP2
0x1078 MSTORE
0x1079 PUSH1 0x20
0x107b ADD
0x107c SWAP3
0x107d POP
0x107e POP
0x107f POP
0x1080 PUSH1 0x20
0x1082 PUSH1 0x40
0x1084 MLOAD
0x1085 DUP1
0x1086 DUP4
0x1087 SUB
0x1088 DUP2
0x1089 PUSH1 0x0
0x108b DUP8
0x108c DUP1
0x108d EXTCODESIZE
0x108e ISZERO
0x108f ISZERO
0x1090 PUSH2 0x1098
0x1093 JUMPI
---
0x1001: JUMPDEST 
0x1005: V1014 = 0x40
0x1007: V1015 = M[0x40]
0x1009: V1016 = M[V1015]
0x100c: V1017 = 0x0
0x100e: V1018 = 0x40
0x1010: V1019 = M[0x40]
0x1011: V1020 = 0x20
0x1013: V1021 = ADD 0x20 V1019
0x1014: M[V1021] = 0x0
0x1015: V1022 = 0x40
0x1017: V1023 = M[0x40]
0x1019: V1024 = 0xffffffff
0x101e: V1025 = AND 0xffffffff 0xa9059cbb
0x101f: V1026 = 0x100000000000000000000000000000000000000000000000000000000
0x103d: V1027 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x103f: M[V1023] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1040: V1028 = 0x4
0x1042: V1029 = ADD 0x4 V1023
0x1045: V1030 = 0xffffffffffffffffffffffffffffffffffffffff
0x105a: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V972
0x105b: V1032 = 0xffffffffffffffffffffffffffffffffffffffff
0x1070: V1033 = AND 0xffffffffffffffffffffffffffffffffffffffff V1031
0x1072: M[V1029] = V1033
0x1073: V1034 = 0x20
0x1075: V1035 = ADD 0x20 V1029
0x1078: M[V1035] = V1016
0x1079: V1036 = 0x20
0x107b: V1037 = ADD 0x20 V1035
0x1080: V1038 = 0x20
0x1082: V1039 = 0x40
0x1084: V1040 = M[0x40]
0x1087: V1041 = SUB V1037 V1040
0x1089: V1042 = 0x0
0x108d: V1043 = EXTCODESIZE V964
0x108e: V1044 = ISZERO V1043
0x108f: V1045 = ISZERO V1044
0x1090: V1046 = 0x1098
0x1093: JUMPI 0x1098 V1045
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V972, V974, 0x70a08231, V995]
Stack pops: 6
Stack additions: [S5, S4, V1037, 0x20, V1040, V1041, V1040, 0x0, S5]
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037, 0x20, V1040, V1041, V1040, 0x0, V964]

================================

Block 0x1094
[0x1094:0x1097]
---
Predecessors: [0x1001]
Successors: []
---
0x1094 PUSH1 0x0
0x1096 DUP1
0x1097 REVERT
---
0x1094: V1047 = 0x0
0x1097: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037, 0x20, V1040, V1041, V1040, 0x0, V964]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037, 0x20, V1040, V1041, V1040, 0x0, V964]

================================

Block 0x1098
[0x1098:0x10a4]
---
Predecessors: [0x1001]
Successors: [0x10a5, 0x10a9]
---
0x1098 JUMPDEST
0x1099 PUSH2 0x2c6
0x109c GAS
0x109d SUB
0x109e CALL
0x109f ISZERO
0x10a0 ISZERO
0x10a1 PUSH2 0x10a9
0x10a4 JUMPI
---
0x1098: JUMPDEST 
0x1099: V1048 = 0x2c6
0x109c: V1049 = GAS
0x109d: V1050 = SUB V1049 0x2c6
0x109e: V1051 = CALL V1050 V964 0x0 V1040 V1041 V1040 0x20
0x109f: V1052 = ISZERO V1051
0x10a0: V1053 = ISZERO V1052
0x10a1: V1054 = 0x10a9
0x10a4: JUMPI 0x10a9 V1053
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037, 0x20, V1040, V1041, V1040, 0x0, V964]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037]

================================

Block 0x10a5
[0x10a5:0x10a8]
---
Predecessors: [0x1098]
Successors: []
---
0x10a5 PUSH1 0x0
0x10a7 DUP1
0x10a8 REVERT
---
0x10a5: V1055 = 0x0
0x10a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037]

================================

Block 0x10a9
[0x10a9:0x10b4]
---
Predecessors: [0x1098]
Successors: [0x10b5]
---
0x10a9 JUMPDEST
0x10aa POP
0x10ab POP
0x10ac POP
0x10ad PUSH1 0x40
0x10af MLOAD
0x10b0 DUP1
0x10b1 MLOAD
0x10b2 SWAP1
0x10b3 POP
0x10b4 POP
---
0x10a9: JUMPDEST 
0x10ad: V1056 = 0x40
0x10af: V1057 = M[0x40]
0x10b1: V1058 = M[V1057]
---
Entry stack: [V11, 0x5e4, V402, 0x0, V402, V964, 0xa9059cbb, V1037]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x5e4, V402, 0x0, V402]

================================

Block 0x10b5
[0x10b5:0x10be]
---
Predecessors: [0xf07, 0x10a9]
Successors: [0x5e4]
---
0x10b5 JUMPDEST
0x10b6 PUSH1 0x1
0x10b8 SWAP2
0x10b9 POP
0x10ba POP
0x10bb SWAP2
0x10bc SWAP1
0x10bd POP
0x10be JUMP
---
0x10b5: JUMPDEST 
0x10b6: V1059 = 0x1
0x10be: JUMP 0x5e4
---
Entry stack: [V11, 0x5e4, V402, 0x0, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x10bf
[0x10bf:0x1107]
---
Predecessors: [0x609]
Successors: [0x635]
---
0x10bf JUMPDEST
0x10c0 PUSH1 0x0
0x10c2 PUSH1 0x4
0x10c4 PUSH1 0x0
0x10c6 DUP4
0x10c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10dc AND
0x10dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f2 AND
0x10f3 DUP2
0x10f4 MSTORE
0x10f5 PUSH1 0x20
0x10f7 ADD
0x10f8 SWAP1
0x10f9 DUP2
0x10fa MSTORE
0x10fb PUSH1 0x20
0x10fd ADD
0x10fe PUSH1 0x0
0x1100 SHA3
0x1101 SLOAD
0x1102 SWAP1
0x1103 POP
0x1104 SWAP2
0x1105 SWAP1
0x1106 POP
0x1107 JUMP
---
0x10bf: JUMPDEST 
0x10c0: V1060 = 0x0
0x10c2: V1061 = 0x4
0x10c4: V1062 = 0x0
0x10c7: V1063 = 0xffffffffffffffffffffffffffffffffffffffff
0x10dc: V1064 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x10dd: V1065 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f2: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffff V1064
0x10f4: M[0x0] = V1066
0x10f5: V1067 = 0x20
0x10f7: V1068 = ADD 0x20 0x0
0x10fa: M[0x20] = 0x4
0x10fb: V1069 = 0x20
0x10fd: V1070 = ADD 0x20 0x20
0x10fe: V1071 = 0x0
0x1100: V1072 = SHA3 0x0 0x40
0x1101: V1073 = S[V1072]
0x1107: JUMP 0x635
---
Entry stack: [V11, 0x635, V425]
Stack pops: 2
Stack additions: [V1073]
Exit stack: [V11, V1073]

================================

Block 0x1108
[0x1108:0x1160]
---
Predecessors: [0x656]
Successors: [0x1161, 0x1165]
---
0x1108 JUMPDEST
0x1109 PUSH1 0x0
0x110b DUP1
0x110c PUSH1 0x0
0x110e SWAP1
0x110f SLOAD
0x1110 SWAP1
0x1111 PUSH2 0x100
0x1114 EXP
0x1115 SWAP1
0x1116 DIV
0x1117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112c AND
0x112d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1142 AND
0x1143 CALLER
0x1144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1159 AND
0x115a EQ
0x115b ISZERO
0x115c ISZERO
0x115d PUSH2 0x1165
0x1160 JUMPI
---
0x1108: JUMPDEST 
0x1109: V1074 = 0x0
0x110c: V1075 = 0x0
0x110f: V1076 = S[0x0]
0x1111: V1077 = 0x100
0x1114: V1078 = EXP 0x100 0x0
0x1116: V1079 = DIV V1076 0x1
0x1117: V1080 = 0xffffffffffffffffffffffffffffffffffffffff
0x112c: V1081 = AND 0xffffffffffffffffffffffffffffffffffffffff V1079
0x112d: V1082 = 0xffffffffffffffffffffffffffffffffffffffff
0x1142: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1081
0x1143: V1084 = CALLER
0x1144: V1085 = 0xffffffffffffffffffffffffffffffffffffffff
0x1159: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff V1084
0x115a: V1087 = EQ V1086 V1083
0x115b: V1088 = ISZERO V1087
0x115c: V1089 = ISZERO V1088
0x115d: V1090 = 0x1165
0x1160: JUMPI 0x1165 V1089
---
Entry stack: [V11, 0x680, V444, V447, V450]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x680, V444, V447, V450, 0x0]

================================

Block 0x1161
[0x1161:0x1164]
---
Predecessors: [0x1108]
Successors: []
---
0x1161 PUSH1 0x0
0x1163 DUP1
0x1164 REVERT
---
0x1161: V1091 = 0x0
0x1164: REVERT 0x0 0x0
---
Entry stack: [V11, 0x680, V444, V447, V450, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x680, V444, V447, V450, 0x0]

================================

Block 0x1165
[0x1165:0x11a3]
---
Predecessors: [0x1108]
Successors: [0x680]
---
0x1165 JUMPDEST
0x1166 DUP4
0x1167 PUSH1 0x0
0x1169 PUSH1 0x14
0x116b PUSH2 0x100
0x116e EXP
0x116f DUP2
0x1170 SLOAD
0x1171 DUP2
0x1172 PUSH1 0xff
0x1174 MUL
0x1175 NOT
0x1176 AND
0x1177 SWAP1
0x1178 DUP4
0x1179 ISZERO
0x117a ISZERO
0x117b MUL
0x117c OR
0x117d SWAP1
0x117e SSTORE
0x117f POP
0x1180 PUSH1 0x12
0x1182 PUSH1 0xa
0x1184 EXP
0x1185 DUP4
0x1186 MUL
0x1187 PUSH1 0x1
0x1189 DUP2
0x118a SWAP1
0x118b SSTORE
0x118c POP
0x118d PUSH4 0x3b9aca00
0x1192 DUP3
0x1193 MUL
0x1194 PUSH1 0x2
0x1196 DUP2
0x1197 SWAP1
0x1198 SSTORE
0x1199 POP
0x119a PUSH1 0x1
0x119c SWAP1
0x119d POP
0x119e SWAP4
0x119f SWAP3
0x11a0 POP
0x11a1 POP
0x11a2 POP
0x11a3 JUMP
---
0x1165: JUMPDEST 
0x1167: V1092 = 0x0
0x1169: V1093 = 0x14
0x116b: V1094 = 0x100
0x116e: V1095 = EXP 0x100 0x14
0x1170: V1096 = S[0x0]
0x1172: V1097 = 0xff
0x1174: V1098 = MUL 0xff 0x10000000000000000000000000000000000000000
0x1175: V1099 = NOT 0xff0000000000000000000000000000000000000000
0x1176: V1100 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1096
0x1179: V1101 = ISZERO V444
0x117a: V1102 = ISZERO V1101
0x117b: V1103 = MUL V1102 0x10000000000000000000000000000000000000000
0x117c: V1104 = OR V1103 V1100
0x117e: S[0x0] = V1104
0x1180: V1105 = 0x12
0x1182: V1106 = 0xa
0x1184: V1107 = EXP 0xa 0x12
0x1186: V1108 = MUL V447 0xde0b6b3a7640000
0x1187: V1109 = 0x1
0x118b: S[0x1] = V1108
0x118d: V1110 = 0x3b9aca00
0x1193: V1111 = MUL V450 0x3b9aca00
0x1194: V1112 = 0x2
0x1198: S[0x2] = V1111
0x119a: V1113 = 0x1
0x11a3: JUMP 0x680
---
Entry stack: [V11, 0x680, V444, V447, V450, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x11a4
[0x11a4:0x11dc]
---
Predecessors: [0x6a5]
Successors: [0x6ad]
---
0x11a4 JUMPDEST
0x11a5 PUSH1 0x40
0x11a7 DUP1
0x11a8 MLOAD
0x11a9 SWAP1
0x11aa DUP2
0x11ab ADD
0x11ac PUSH1 0x40
0x11ae MSTORE
0x11af DUP1
0x11b0 PUSH1 0x3
0x11b2 DUP2
0x11b3 MSTORE
0x11b4 PUSH1 0x20
0x11b6 ADD
0x11b7 PUSH32 0x5852430000000000000000000000000000000000000000000000000000000000
0x11d8 DUP2
0x11d9 MSTORE
0x11da POP
0x11db DUP2
0x11dc JUMP
---
0x11a4: JUMPDEST 
0x11a5: V1114 = 0x40
0x11a8: V1115 = M[0x40]
0x11ab: V1116 = ADD V1115 0x40
0x11ac: V1117 = 0x40
0x11ae: M[0x40] = V1116
0x11b0: V1118 = 0x3
0x11b3: M[V1115] = 0x3
0x11b4: V1119 = 0x20
0x11b6: V1120 = ADD 0x20 V1115
0x11b7: V1121 = 0x5852430000000000000000000000000000000000000000000000000000000000
0x11d9: M[V1120] = 0x5852430000000000000000000000000000000000000000000000000000000000
0x11dc: JUMP 0x6ad
---
Entry stack: [V11, 0x6ad]
Stack pops: 1
Stack additions: [S0, V1115]
Exit stack: [V11, 0x6ad, V1115]

================================

Block 0x11dd
[0x11dd:0x1228]
---
Predecessors: [0x733]
Successors: [0x1229, 0x122e]
---
0x11dd JUMPDEST
0x11de PUSH1 0x0
0x11e0 DUP2
0x11e1 PUSH1 0x4
0x11e3 PUSH1 0x0
0x11e5 CALLER
0x11e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11fb AND
0x11fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1211 AND
0x1212 DUP2
0x1213 MSTORE
0x1214 PUSH1 0x20
0x1216 ADD
0x1217 SWAP1
0x1218 DUP2
0x1219 MSTORE
0x121a PUSH1 0x20
0x121c ADD
0x121d PUSH1 0x0
0x121f SHA3
0x1220 SLOAD
0x1221 LT
0x1222 ISZERO
0x1223 DUP1
0x1224 ISZERO
0x1225 PUSH2 0x122e
0x1228 JUMPI
---
0x11dd: JUMPDEST 
0x11de: V1122 = 0x0
0x11e1: V1123 = 0x4
0x11e3: V1124 = 0x0
0x11e5: V1125 = CALLER
0x11e6: V1126 = 0xffffffffffffffffffffffffffffffffffffffff
0x11fb: V1127 = AND 0xffffffffffffffffffffffffffffffffffffffff V1125
0x11fc: V1128 = 0xffffffffffffffffffffffffffffffffffffffff
0x1211: V1129 = AND 0xffffffffffffffffffffffffffffffffffffffff V1127
0x1213: M[0x0] = V1129
0x1214: V1130 = 0x20
0x1216: V1131 = ADD 0x20 0x0
0x1219: M[0x20] = 0x4
0x121a: V1132 = 0x20
0x121c: V1133 = ADD 0x20 0x20
0x121d: V1134 = 0x0
0x121f: V1135 = SHA3 0x0 0x40
0x1220: V1136 = S[V1135]
0x1221: V1137 = LT V1136 V523
0x1222: V1138 = ISZERO V1137
0x1224: V1139 = ISZERO V1138
0x1225: V1140 = 0x122e
0x1228: JUMPI 0x122e V1139
---
Entry stack: [V11, 0x768, V520, V523]
Stack pops: 1
Stack additions: [S0, 0x0, V1138]
Exit stack: [V11, 0x768, V520, V523, 0x0, V1138]

================================

Block 0x1229
[0x1229:0x122d]
---
Predecessors: [0x11dd]
Successors: [0x122e]
---
0x1229 POP
0x122a PUSH1 0x0
0x122c DUP3
0x122d GT
---
0x122a: V1141 = 0x0
0x122d: V1142 = GT V523 0x0
---
Entry stack: [V11, 0x768, V520, V523, 0x0, V1138]
Stack pops: 3
Stack additions: [S2, S1, V1142]
Exit stack: [V11, 0x768, V520, V523, 0x0, V1142]

================================

Block 0x122e
[0x122e:0x1234]
---
Predecessors: [0x11dd, 0x1229]
Successors: [0x1235, 0x1239]
---
0x122e JUMPDEST
0x122f ISZERO
0x1230 ISZERO
0x1231 PUSH2 0x1239
0x1234 JUMPI
---
0x122e: JUMPDEST 
0x122f: V1143 = ISZERO S0
0x1230: V1144 = ISZERO V1143
0x1231: V1145 = 0x1239
0x1234: JUMPI 0x1239 V1144
---
Entry stack: [V11, 0x768, V520, V523, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x768, V520, V523, 0x0]

================================

Block 0x1235
[0x1235:0x1238]
---
Predecessors: [0x122e]
Successors: []
---
0x1235 PUSH1 0x0
0x1237 DUP1
0x1238 REVERT
---
0x1235: V1146 = 0x0
0x1238: REVERT 0x0 0x0
---
Entry stack: [V11, 0x768, V520, V523, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x768, V520, V523, 0x0]

================================

Block 0x1239
[0x1239:0x1341]
---
Predecessors: [0x122e]
Successors: [0x768]
---
0x1239 JUMPDEST
0x123a DUP2
0x123b PUSH1 0x4
0x123d PUSH1 0x0
0x123f CALLER
0x1240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1255 AND
0x1256 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126b AND
0x126c DUP2
0x126d MSTORE
0x126e PUSH1 0x20
0x1270 ADD
0x1271 SWAP1
0x1272 DUP2
0x1273 MSTORE
0x1274 PUSH1 0x20
0x1276 ADD
0x1277 PUSH1 0x0
0x1279 SHA3
0x127a PUSH1 0x0
0x127c DUP3
0x127d DUP3
0x127e SLOAD
0x127f SUB
0x1280 SWAP3
0x1281 POP
0x1282 POP
0x1283 DUP2
0x1284 SWAP1
0x1285 SSTORE
0x1286 POP
0x1287 DUP2
0x1288 PUSH1 0x4
0x128a PUSH1 0x0
0x128c DUP6
0x128d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a2 AND
0x12a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b8 AND
0x12b9 DUP2
0x12ba MSTORE
0x12bb PUSH1 0x20
0x12bd ADD
0x12be SWAP1
0x12bf DUP2
0x12c0 MSTORE
0x12c1 PUSH1 0x20
0x12c3 ADD
0x12c4 PUSH1 0x0
0x12c6 SHA3
0x12c7 PUSH1 0x0
0x12c9 DUP3
0x12ca DUP3
0x12cb SLOAD
0x12cc ADD
0x12cd SWAP3
0x12ce POP
0x12cf POP
0x12d0 DUP2
0x12d1 SWAP1
0x12d2 SSTORE
0x12d3 POP
0x12d4 DUP3
0x12d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ea AND
0x12eb CALLER
0x12ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1301 AND
0x1302 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1323 DUP5
0x1324 PUSH1 0x40
0x1326 MLOAD
0x1327 DUP1
0x1328 DUP3
0x1329 DUP2
0x132a MSTORE
0x132b PUSH1 0x20
0x132d ADD
0x132e SWAP2
0x132f POP
0x1330 POP
0x1331 PUSH1 0x40
0x1333 MLOAD
0x1334 DUP1
0x1335 SWAP2
0x1336 SUB
0x1337 SWAP1
0x1338 LOG3
0x1339 PUSH1 0x1
0x133b SWAP1
0x133c POP
0x133d SWAP3
0x133e SWAP2
0x133f POP
0x1340 POP
0x1341 JUMP
---
0x1239: JUMPDEST 
0x123b: V1147 = 0x4
0x123d: V1148 = 0x0
0x123f: V1149 = CALLER
0x1240: V1150 = 0xffffffffffffffffffffffffffffffffffffffff
0x1255: V1151 = AND 0xffffffffffffffffffffffffffffffffffffffff V1149
0x1256: V1152 = 0xffffffffffffffffffffffffffffffffffffffff
0x126b: V1153 = AND 0xffffffffffffffffffffffffffffffffffffffff V1151
0x126d: M[0x0] = V1153
0x126e: V1154 = 0x20
0x1270: V1155 = ADD 0x20 0x0
0x1273: M[0x20] = 0x4
0x1274: V1156 = 0x20
0x1276: V1157 = ADD 0x20 0x20
0x1277: V1158 = 0x0
0x1279: V1159 = SHA3 0x0 0x40
0x127a: V1160 = 0x0
0x127e: V1161 = S[V1159]
0x127f: V1162 = SUB V1161 V523
0x1285: S[V1159] = V1162
0x1288: V1163 = 0x4
0x128a: V1164 = 0x0
0x128d: V1165 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a2: V1166 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x12a3: V1167 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b8: V1168 = AND 0xffffffffffffffffffffffffffffffffffffffff V1166
0x12ba: M[0x0] = V1168
0x12bb: V1169 = 0x20
0x12bd: V1170 = ADD 0x20 0x0
0x12c0: M[0x20] = 0x4
0x12c1: V1171 = 0x20
0x12c3: V1172 = ADD 0x20 0x20
0x12c4: V1173 = 0x0
0x12c6: V1174 = SHA3 0x0 0x40
0x12c7: V1175 = 0x0
0x12cb: V1176 = S[V1174]
0x12cc: V1177 = ADD V1176 V523
0x12d2: S[V1174] = V1177
0x12d5: V1178 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ea: V1179 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x12eb: V1180 = CALLER
0x12ec: V1181 = 0xffffffffffffffffffffffffffffffffffffffff
0x1301: V1182 = AND 0xffffffffffffffffffffffffffffffffffffffff V1180
0x1302: V1183 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1324: V1184 = 0x40
0x1326: V1185 = M[0x40]
0x132a: M[V1185] = V523
0x132b: V1186 = 0x20
0x132d: V1187 = ADD 0x20 V1185
0x1331: V1188 = 0x40
0x1333: V1189 = M[0x40]
0x1336: V1190 = SUB V1187 V1189
0x1338: LOG V1189 V1190 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1182 V1179
0x1339: V1191 = 0x1
0x1341: JUMP 0x768
---
Entry stack: [V11, 0x768, V520, V523, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x1342
[0x1342:0x13c8]
---
Predecessors: [0x78d]
Successors: [0x7d8]
---
0x1342 JUMPDEST
0x1343 PUSH1 0x0
0x1345 PUSH1 0x5
0x1347 PUSH1 0x0
0x1349 DUP5
0x134a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x135f AND
0x1360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1375 AND
0x1376 DUP2
0x1377 MSTORE
0x1378 PUSH1 0x20
0x137a ADD
0x137b SWAP1
0x137c DUP2
0x137d MSTORE
0x137e PUSH1 0x20
0x1380 ADD
0x1381 PUSH1 0x0
0x1383 SHA3
0x1384 PUSH1 0x0
0x1386 DUP4
0x1387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139c AND
0x139d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b2 AND
0x13b3 DUP2
0x13b4 MSTORE
0x13b5 PUSH1 0x20
0x13b7 ADD
0x13b8 SWAP1
0x13b9 DUP2
0x13ba MSTORE
0x13bb PUSH1 0x20
0x13bd ADD
0x13be PUSH1 0x0
0x13c0 SHA3
0x13c1 SLOAD
0x13c2 SWAP1
0x13c3 POP
0x13c4 SWAP3
0x13c5 SWAP2
0x13c6 POP
0x13c7 POP
0x13c8 JUMP
---
0x1342: JUMPDEST 
0x1343: V1192 = 0x0
0x1345: V1193 = 0x5
0x1347: V1194 = 0x0
0x134a: V1195 = 0xffffffffffffffffffffffffffffffffffffffff
0x135f: V1196 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x1360: V1197 = 0xffffffffffffffffffffffffffffffffffffffff
0x1375: V1198 = AND 0xffffffffffffffffffffffffffffffffffffffff V1196
0x1377: M[0x0] = V1198
0x1378: V1199 = 0x20
0x137a: V1200 = ADD 0x20 0x0
0x137d: M[0x20] = 0x5
0x137e: V1201 = 0x20
0x1380: V1202 = ADD 0x20 0x20
0x1381: V1203 = 0x0
0x1383: V1204 = SHA3 0x0 0x40
0x1384: V1205 = 0x0
0x1387: V1206 = 0xffffffffffffffffffffffffffffffffffffffff
0x139c: V1207 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x139d: V1208 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b2: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffff V1207
0x13b4: M[0x0] = V1209
0x13b5: V1210 = 0x20
0x13b7: V1211 = ADD 0x20 0x0
0x13ba: M[0x20] = V1204
0x13bb: V1212 = 0x20
0x13bd: V1213 = ADD 0x20 0x20
0x13be: V1214 = 0x0
0x13c0: V1215 = SHA3 0x0 0x40
0x13c1: V1216 = S[V1215]
0x13c8: JUMP 0x7d8
---
Entry stack: [V11, 0x7d8, V546, V551]
Stack pops: 3
Stack additions: [V1216]
Exit stack: [V11, V1216]

================================

Block 0x13c9
[0x13c9:0x13f4]
---
Predecessors: []
Successors: []
---
0x13c9 STOP
0x13ca LOG1
0x13cb PUSH6 0x627a7a723058
0x13d2 SHA3
0x13d3 PUSH28 0x58b94f4cface38d43f77b4f9d8878fd77dd18eda4b57fff8ba114296
0x13f0 DIFFICULTY
0x13f1 MISSING 0x22
0x13f2 MISSING 0xd6
0x13f3 STOP
0x13f4 MISSING 0x29
---
0x13c9: STOP 
0x13ca: LOG S0 S1 S2
0x13cb: V1217 = 0x627a7a723058
0x13d2: V1218 = SHA3 0x627a7a723058 S3
0x13d3: V1219 = 0x58b94f4cface38d43f77b4f9d8878fd77dd18eda4b57fff8ba114296
0x13f0: V1220 = DIFFICULTY
0x13f1: MISSING 0x22
0x13f2: MISSING 0xd6
0x13f3: STOP 
0x13f4: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1220, 0x58b94f4cface38d43f77b4f9d8878fd77dd18eda4b57fff8ba114296, V1218]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x348
Exit block: 0x3c8
Body: 0x348, 0x34f, 0x353, 0x35b, 0x380, 0x389, 0x39b, 0x3af, 0x3c8, 0x7ee

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x3d6
Exit block: 0x416
Body: 0x3d6, 0x3dd, 0x3e1, 0x416, 0x827

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x430
Exit block: 0x443
Body: 0x430, 0x437, 0x43b, 0x443, 0x919

Function 3:
Public function signature: 0x1e89d545
Entry block: 0x459
Exit block: 0xb44
Body: 0x459, 0x460, 0x464, 0x4f1, 0x926, 0x939, 0x93f, 0x946, 0x94a, 0x94f, 0x959, 0x965, 0x966, 0x981, 0x98c, 0x9d0, 0x9d7, 0x9db, 0xa2d, 0xa37, 0xa45, 0xa46, 0xa57, 0xa63, 0xa64, 0xa7f, 0xa80, 0xade, 0xadf, 0xb44, 0xb45, 0xb65, 0xb72

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x50b
Exit block: 0x56a
Body: 0x50b, 0x512, 0x516, 0x56a, 0xb7f, 0xbcb, 0xc4c, 0xc53, 0xc58, 0xc5f, 0xc63

Function 5:
Public function signature: 0x313ce567
Entry block: 0x584
Exit block: 0x597
Body: 0x584, 0x58b, 0x58f, 0x597, 0xdf7

Function 6:
Public function signature: 0x68742da6
Entry block: 0x5ad
Exit block: 0x10a5
Body: 0x5ad, 0x5b4, 0x5b8, 0x5e4, 0xdfc, 0xe56, 0xe5a, 0xe90, 0xf03, 0xf07, 0xf0c, 0xfec, 0xff0, 0xffd, 0x1001, 0x1094, 0x1098, 0x10a5, 0x10a9, 0x10b5

Function 7:
Public function signature: 0x70a08231
Entry block: 0x5fe
Exit block: 0x635
Body: 0x5fe, 0x605, 0x609, 0x635, 0x10bf

Function 8:
Public function signature: 0x8213dafc
Entry block: 0x64b
Exit block: 0x680
Body: 0x64b, 0x652, 0x656, 0x680, 0x1108, 0x1161, 0x1165

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x69a
Exit block: 0x71a
Body: 0x69a, 0x6a1, 0x6a5, 0x6ad, 0x6d2, 0x6db, 0x6ed, 0x701, 0x71a, 0x11a4

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x728
Exit block: 0x768
Body: 0x728, 0x72f, 0x733, 0x768, 0x11dd, 0x1229, 0x122e, 0x1235, 0x1239

Function 11:
Public function signature: 0xdd62ed3e
Entry block: 0x782
Exit block: 0x7d8
Body: 0x782, 0x789, 0x78d, 0x7d8, 0x1342

Function 12:
Public fallback function
Entry block: 0xba
Exit block: 0x1a3
Body: 0xba, 0xd1, 0x138, 0x13f, 0x18e, 0x195, 0x19c, 0x1a3, 0x1a7

