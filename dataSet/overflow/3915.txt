Block 0x0
[0x0:0x5]
---
Predecessors: []
Successors: []
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 STOP
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6
[0x6:0x3e]
---
Predecessors: []
Successors: [0x3f]
---
0x6 STOP
0x7 LOG1
0x8 PUSH6 0x627a7a723058
0xf SHA3
0x10 MISSING 0xd3
0x11 MISSING 0x25
0x12 MISSING 0xec
0x13 MISSING 0xa8
0x14 MSIZE
0x15 SWAP12
0x16 TIMESTAMP
0x17 MISSING 0xc0
0x18 SELFDESTRUCT
0x19 DUP2
0x1a SIGNEXTEND
0x1b MISSING 0x47
0x1c CALLCODE
0x1d MISSING 0x27
0x1e DUP12
0x1f MISSING 0x29
0x20 MISSING 0xb2
0x21 JUMP
0x22 SUB
0x23 DUP8
0x24 MSTORE
0x25 MISSING 0x2d
0x26 MISSING 0xe7
0x27 MSTORE8
0x28 CREATE2
0x29 SAR
0x2a MISSING 0x49
0x2b DUP13
0x2c MISSING 0xce
0x2d PUSH6 0x294600296080
0x34 PUSH1 0x40
0x36 MSTORE
0x37 PUSH1 0x4
0x39 CALLDATASIZE
0x3a LT
0x3b PUSH2 0x62
0x3e JUMPI
---
0x6: STOP 
0x7: LOG S0 S1 S2
0x8: V2 = 0x627a7a723058
0xf: V3 = SHA3 0x627a7a723058 S3
0x10: MISSING 0xd3
0x11: MISSING 0x25
0x12: MISSING 0xec
0x13: MISSING 0xa8
0x14: V4 = MSIZE
0x16: V5 = TIMESTAMP
0x17: MISSING 0xc0
0x18: SELFDESTRUCT S0
0x1a: V6 = SIGNEXTEND S1 S0
0x1b: MISSING 0x47
0x1c: V7 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x1d: MISSING 0x27
0x1f: MISSING 0x29
0x20: MISSING 0xb2
0x21: JUMP S0
0x22: V8 = SUB S0 S1
0x24: M[S8] = V8
0x25: MISSING 0x2d
0x26: MISSING 0xe7
0x27: M8[S0] = S1
0x28: V9 = CREATE2 S2 S3 S4 S5
0x29: V10 = SAR V9 S6
0x2a: MISSING 0x49
0x2c: MISSING 0xce
0x2d: V11 = 0x294600296080
0x34: V12 = 0x40
0x36: M[0x40] = 0x294600296080
0x37: V13 = 0x4
0x39: V14 = CALLDATASIZE
0x3a: V15 = LT V14 0x4
0x3b: V16 = 0x62
0x3e: THROWI V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V3, V5, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V4, V6, S1, V7, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S2, S3, S4, S5, S6, S7, S8, V10, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Block 0x3f
[0x3f:0x72]
---
Predecessors: [0x6]
Successors: [0x73]
---
0x3f PUSH1 0x0
0x41 CALLDATALOAD
0x42 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x60 SWAP1
0x61 DIV
0x62 PUSH4 0xffffffff
0x67 AND
0x68 DUP1
0x69 PUSH4 0x597e1fb5
0x6e EQ
0x6f PUSH2 0x64
0x72 JUMPI
---
0x3f: V17 = 0x0
0x41: V18 = CALLDATALOAD 0x0
0x42: V19 = 0x100000000000000000000000000000000000000000000000000000000
0x61: V20 = DIV V18 0x100000000000000000000000000000000000000000000000000000000
0x62: V21 = 0xffffffff
0x67: V22 = AND 0xffffffff V20
0x69: V23 = 0x597e1fb5
0x6e: V24 = EQ 0x597e1fb5 V22
0x6f: V25 = 0x64
0x72: THROWI V24
---
Entry stack: []
Stack pops: 0
Stack additions: [V22]
Exit stack: [V22]

================================

Block 0x73
[0x73:0x7d]
---
Predecessors: [0x3f]
Successors: [0x7e]
---
0x73 DUP1
0x74 PUSH4 0x8da5cb5b
0x79 EQ
0x7a PUSH2 0x93
0x7d JUMPI
---
0x74: V26 = 0x8da5cb5b
0x79: V27 = EQ 0x8da5cb5b V22
0x7a: V28 = 0x93
0x7d: THROWI V27
---
Entry stack: [V22]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V22]

================================

Block 0x7e
[0x7e:0x88]
---
Predecessors: [0x73]
Successors: [0x89]
---
0x7e DUP1
0x7f PUSH4 0x9890220b
0x84 EQ
0x85 PUSH2 0xea
0x88 JUMPI
---
0x7f: V29 = 0x9890220b
0x84: V30 = EQ 0x9890220b V22
0x85: V31 = 0xea
0x88: THROWI V30
---
Entry stack: [V22]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V22]

================================

Block 0x89
[0x89:0x93]
---
Predecessors: [0x7e]
Successors: [0x94]
---
0x89 DUP1
0x8a PUSH4 0x9e5faafc
0x8f EQ
0x90 PUSH2 0x101
0x93 JUMPI
---
0x8a: V32 = 0x9e5faafc
0x8f: V33 = EQ 0x9e5faafc V22
0x90: V34 = 0x101
0x93: THROWI V33
---
Entry stack: [V22]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V22]

================================

Block 0x94
[0x94:0x9d]
---
Predecessors: [0x89]
Successors: [0x9e]
---
0x94 JUMPDEST
0x95 STOP
0x96 JUMPDEST
0x97 CALLVALUE
0x98 DUP1
0x99 ISZERO
0x9a PUSH2 0x70
0x9d JUMPI
---
0x94: JUMPDEST 
0x95: STOP 
0x96: JUMPDEST 
0x97: V35 = CALLVALUE
0x99: V36 = ISZERO V35
0x9a: V37 = 0x70
0x9d: THROWI V36
---
Entry stack: [V22]
Stack pops: 0
Stack additions: [V35]
Exit stack: []

================================

Block 0x9e
[0x9e:0xcc]
---
Predecessors: [0x94]
Successors: [0xcd]
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
0xa2 JUMPDEST
0xa3 POP
0xa4 PUSH2 0x79
0xa7 PUSH2 0x118
0xaa JUMP
0xab JUMPDEST
0xac PUSH1 0x40
0xae MLOAD
0xaf DUP1
0xb0 DUP3
0xb1 ISZERO
0xb2 ISZERO
0xb3 ISZERO
0xb4 ISZERO
0xb5 DUP2
0xb6 MSTORE
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP2
0xbb POP
0xbc POP
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 SWAP2
0xc2 SUB
0xc3 SWAP1
0xc4 RETURN
0xc5 JUMPDEST
0xc6 CALLVALUE
0xc7 DUP1
0xc8 ISZERO
0xc9 PUSH2 0x9f
0xcc JUMPI
---
0x9e: V38 = 0x0
0xa1: REVERT 0x0 0x0
0xa2: JUMPDEST 
0xa4: V39 = 0x79
0xa7: V40 = 0x118
0xaa: THROW 
0xab: JUMPDEST 
0xac: V41 = 0x40
0xae: V42 = M[0x40]
0xb1: V43 = ISZERO S0
0xb2: V44 = ISZERO V43
0xb3: V45 = ISZERO V44
0xb4: V46 = ISZERO V45
0xb6: M[V42] = V46
0xb7: V47 = 0x20
0xb9: V48 = ADD 0x20 V42
0xbd: V49 = 0x40
0xbf: V50 = M[0x40]
0xc2: V51 = SUB V48 V50
0xc4: RETURN V50 V51
0xc5: JUMPDEST 
0xc6: V52 = CALLVALUE
0xc8: V53 = ISZERO V52
0xc9: V54 = 0x9f
0xcc: THROWI V53
---
Entry stack: [V35]
Stack pops: 0
Stack additions: [0x79, V52]
Exit stack: []

================================

Block 0xcd
[0xcd:0x123]
---
Predecessors: [0x9e]
Successors: [0x124]
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
0xd1 JUMPDEST
0xd2 POP
0xd3 PUSH2 0xa8
0xd6 PUSH2 0x12b
0xd9 JUMP
0xda JUMPDEST
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf DUP3
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP2
0x112 POP
0x113 POP
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 SWAP2
0x119 SUB
0x11a SWAP1
0x11b RETURN
0x11c JUMPDEST
0x11d CALLVALUE
0x11e DUP1
0x11f ISZERO
0x120 PUSH2 0xf6
0x123 JUMPI
---
0xcd: V55 = 0x0
0xd0: REVERT 0x0 0x0
0xd1: JUMPDEST 
0xd3: V56 = 0xa8
0xd6: V57 = 0x12b
0xd9: THROW 
0xda: JUMPDEST 
0xdb: V58 = 0x40
0xdd: V59 = M[0x40]
0xe0: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xf6: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x10d: M[V59] = V63
0x10e: V64 = 0x20
0x110: V65 = ADD 0x20 V59
0x114: V66 = 0x40
0x116: V67 = M[0x40]
0x119: V68 = SUB V65 V67
0x11b: RETURN V67 V68
0x11c: JUMPDEST 
0x11d: V69 = CALLVALUE
0x11f: V70 = ISZERO V69
0x120: V71 = 0xf6
0x123: THROWI V70
---
Entry stack: [V52]
Stack pops: 0
Stack additions: [0xa8, V69]
Exit stack: []

================================

Block 0x124
[0x124:0x13a]
---
Predecessors: [0xcd]
Successors: [0x13b]
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
0x128 JUMPDEST
0x129 POP
0x12a PUSH2 0xff
0x12d PUSH2 0x150
0x130 JUMP
0x131 JUMPDEST
0x132 STOP
0x133 JUMPDEST
0x134 CALLVALUE
0x135 DUP1
0x136 ISZERO
0x137 PUSH2 0x10d
0x13a JUMPI
---
0x124: V72 = 0x0
0x127: REVERT 0x0 0x0
0x128: JUMPDEST 
0x12a: V73 = 0xff
0x12d: V74 = 0x150
0x130: THROW 
0x131: JUMPDEST 
0x132: STOP 
0x133: JUMPDEST 
0x134: V75 = CALLVALUE
0x136: V76 = ISZERO V75
0x137: V77 = 0x10d
0x13a: THROWI V76
---
Entry stack: [V69]
Stack pops: 0
Stack additions: [0xff, V75]
Exit stack: []

================================

Block 0x13b
[0x13b:0x1d8]
---
Predecessors: [0x124]
Successors: [0x1d9]
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
0x13f JUMPDEST
0x140 POP
0x141 PUSH2 0x116
0x144 PUSH2 0x247
0x147 JUMP
0x148 JUMPDEST
0x149 STOP
0x14a JUMPDEST
0x14b PUSH1 0x0
0x14d PUSH1 0x14
0x14f SWAP1
0x150 SLOAD
0x151 SWAP1
0x152 PUSH2 0x100
0x155 EXP
0x156 SWAP1
0x157 DIV
0x158 PUSH1 0xff
0x15a AND
0x15b DUP2
0x15c JUMP
0x15d JUMPDEST
0x15e PUSH1 0x0
0x160 DUP1
0x161 SWAP1
0x162 SLOAD
0x163 SWAP1
0x164 PUSH2 0x100
0x167 EXP
0x168 SWAP1
0x169 DIV
0x16a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f AND
0x180 DUP2
0x181 JUMP
0x182 JUMPDEST
0x183 PUSH1 0x0
0x185 DUP1
0x186 SWAP1
0x187 SLOAD
0x188 SWAP1
0x189 PUSH2 0x100
0x18c EXP
0x18d SWAP1
0x18e DIV
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb CALLER
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 EQ
0x1d3 ISZERO
0x1d4 ISZERO
0x1d5 PUSH2 0x1ab
0x1d8 JUMPI
---
0x13b: V78 = 0x0
0x13e: REVERT 0x0 0x0
0x13f: JUMPDEST 
0x141: V79 = 0x116
0x144: V80 = 0x247
0x147: THROW 
0x148: JUMPDEST 
0x149: STOP 
0x14a: JUMPDEST 
0x14b: V81 = 0x0
0x14d: V82 = 0x14
0x150: V83 = S[0x0]
0x152: V84 = 0x100
0x155: V85 = EXP 0x100 0x14
0x157: V86 = DIV V83 0x10000000000000000000000000000000000000000
0x158: V87 = 0xff
0x15a: V88 = AND 0xff V86
0x15c: JUMP S0
0x15d: JUMPDEST 
0x15e: V89 = 0x0
0x162: V90 = S[0x0]
0x164: V91 = 0x100
0x167: V92 = EXP 0x100 0x0
0x169: V93 = DIV V90 0x1
0x16a: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x181: JUMP S0
0x182: JUMPDEST 
0x183: V96 = 0x0
0x187: V97 = S[0x0]
0x189: V98 = 0x100
0x18c: V99 = EXP 0x100 0x0
0x18e: V100 = DIV V97 0x1
0x18f: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1a5: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1bb: V105 = CALLER
0x1bc: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1d2: V108 = EQ V107 V104
0x1d3: V109 = ISZERO V108
0x1d4: V110 = ISZERO V109
0x1d5: V111 = 0x1ab
0x1d8: THROWI V110
---
Entry stack: [V75]
Stack pops: 0
Stack additions: [0x116, V88, S0, V95, S0]
Exit stack: []

================================

Block 0x1d9
[0x1d9:0x26c]
---
Predecessors: [0x13b]
Successors: [0x26d]
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
0x1dd JUMPDEST
0x1de PUSH1 0x1
0x1e0 PUSH1 0x0
0x1e2 PUSH1 0x14
0x1e4 PUSH2 0x100
0x1e7 EXP
0x1e8 DUP2
0x1e9 SLOAD
0x1ea DUP2
0x1eb PUSH1 0xff
0x1ed MUL
0x1ee NOT
0x1ef AND
0x1f0 SWAP1
0x1f1 DUP4
0x1f2 ISZERO
0x1f3 ISZERO
0x1f4 MUL
0x1f5 OR
0x1f6 SWAP1
0x1f7 SSTORE
0x1f8 POP
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc SWAP1
0x1fd SLOAD
0x1fe SWAP1
0x1ff PUSH2 0x100
0x202 EXP
0x203 SWAP1
0x204 DIV
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 PUSH2 0x8fc
0x234 ADDRESS
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b BALANCE
0x24c SWAP1
0x24d DUP2
0x24e ISZERO
0x24f MUL
0x250 SWAP1
0x251 PUSH1 0x40
0x253 MLOAD
0x254 PUSH1 0x0
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a DUP4
0x25b SUB
0x25c DUP2
0x25d DUP6
0x25e DUP9
0x25f DUP9
0x260 CALL
0x261 SWAP4
0x262 POP
0x263 POP
0x264 POP
0x265 POP
0x266 ISZERO
0x267 DUP1
0x268 ISZERO
0x269 PUSH2 0x244
0x26c JUMPI
---
0x1d9: V112 = 0x0
0x1dc: REVERT 0x0 0x0
0x1dd: JUMPDEST 
0x1de: V113 = 0x1
0x1e0: V114 = 0x0
0x1e2: V115 = 0x14
0x1e4: V116 = 0x100
0x1e7: V117 = EXP 0x100 0x14
0x1e9: V118 = S[0x0]
0x1eb: V119 = 0xff
0x1ed: V120 = MUL 0xff 0x10000000000000000000000000000000000000000
0x1ee: V121 = NOT 0xff0000000000000000000000000000000000000000
0x1ef: V122 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V118
0x1f2: V123 = ISZERO 0x1
0x1f3: V124 = ISZERO 0x0
0x1f4: V125 = MUL 0x1 0x10000000000000000000000000000000000000000
0x1f5: V126 = OR 0x10000000000000000000000000000000000000000 V122
0x1f7: S[0x0] = V126
0x1f9: V127 = 0x0
0x1fd: V128 = S[0x0]
0x1ff: V129 = 0x100
0x202: V130 = EXP 0x100 0x0
0x204: V131 = DIV V128 0x1
0x205: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x21b: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x231: V136 = 0x8fc
0x234: V137 = ADDRESS
0x235: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x24b: V140 = BALANCE V139
0x24e: V141 = ISZERO V140
0x24f: V142 = MUL V141 0x8fc
0x251: V143 = 0x40
0x253: V144 = M[0x40]
0x254: V145 = 0x0
0x256: V146 = 0x40
0x258: V147 = M[0x40]
0x25b: V148 = SUB V144 V147
0x260: V149 = CALL V142 V135 V140 V147 V148 V147 0x0
0x266: V150 = ISZERO V149
0x268: V151 = ISZERO V150
0x269: V152 = 0x244
0x26c: THROWI V151
---
Entry stack: []
Stack pops: 0
Stack additions: [V150]
Exit stack: []

================================

Block 0x26d
[0x26d:0x294]
---
Predecessors: [0x1d9]
Successors: [0x295]
---
0x26d RETURNDATASIZE
0x26e PUSH1 0x0
0x270 DUP1
0x271 RETURNDATACOPY
0x272 RETURNDATASIZE
0x273 PUSH1 0x0
0x275 REVERT
0x276 JUMPDEST
0x277 POP
0x278 JUMP
0x279 JUMPDEST
0x27a PUSH1 0x0
0x27c DUP1
0x27d PUSH1 0x0
0x27f DUP1
0x280 PUSH1 0x14
0x282 SWAP1
0x283 SLOAD
0x284 SWAP1
0x285 PUSH2 0x100
0x288 EXP
0x289 SWAP1
0x28a DIV
0x28b PUSH1 0xff
0x28d AND
0x28e ISZERO
0x28f ISZERO
0x290 ISZERO
0x291 PUSH2 0x267
0x294 JUMPI
---
0x26d: V153 = RETURNDATASIZE
0x26e: V154 = 0x0
0x271: RETURNDATACOPY 0x0 0x0 V153
0x272: V155 = RETURNDATASIZE
0x273: V156 = 0x0
0x275: REVERT 0x0 V155
0x276: JUMPDEST 
0x278: JUMP S1
0x279: JUMPDEST 
0x27a: V157 = 0x0
0x27d: V158 = 0x0
0x280: V159 = 0x14
0x283: V160 = S[0x0]
0x285: V161 = 0x100
0x288: V162 = EXP 0x100 0x14
0x28a: V163 = DIV V160 0x10000000000000000000000000000000000000000
0x28b: V164 = 0xff
0x28d: V165 = AND 0xff V163
0x28e: V166 = ISZERO V165
0x28f: V167 = ISZERO V166
0x290: V168 = ISZERO V167
0x291: V169 = 0x267
0x294: THROWI V168
---
Entry stack: [V150]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x295
[0x295:0x323]
---
Predecessors: [0x26d]
Successors: [0x324]
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
0x299 JUMPDEST
0x29a PUSH8 0x6f05b59d3b20000
0x2a3 PUSH1 0x1
0x2a5 PUSH1 0x0
0x2a7 SWAP1
0x2a8 SLOAD
0x2a9 SWAP1
0x2aa PUSH2 0x100
0x2ad EXP
0x2ae SWAP1
0x2af DIV
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc PUSH4 0xd87574e0
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP2
0x2e5 PUSH4 0xffffffff
0x2ea AND
0x2eb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x309 MUL
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x4
0x30e ADD
0x30f PUSH1 0x20
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 DUP4
0x316 SUB
0x317 DUP2
0x318 PUSH1 0x0
0x31a DUP8
0x31b DUP1
0x31c EXTCODESIZE
0x31d ISZERO
0x31e DUP1
0x31f ISZERO
0x320 PUSH2 0x2f6
0x323 JUMPI
---
0x295: V170 = 0x0
0x298: REVERT 0x0 0x0
0x299: JUMPDEST 
0x29a: V171 = 0x6f05b59d3b20000
0x2a3: V172 = 0x1
0x2a5: V173 = 0x0
0x2a8: V174 = S[0x1]
0x2aa: V175 = 0x100
0x2ad: V176 = EXP 0x100 0x0
0x2af: V177 = DIV V174 0x1
0x2b0: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x2c6: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2dc: V182 = 0xd87574e0
0x2e1: V183 = 0x40
0x2e3: V184 = M[0x40]
0x2e5: V185 = 0xffffffff
0x2ea: V186 = AND 0xffffffff 0xd87574e0
0x2eb: V187 = 0x100000000000000000000000000000000000000000000000000000000
0x309: V188 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x30b: M[V184] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x30c: V189 = 0x4
0x30e: V190 = ADD 0x4 V184
0x30f: V191 = 0x20
0x311: V192 = 0x40
0x313: V193 = M[0x40]
0x316: V194 = SUB V190 V193
0x318: V195 = 0x0
0x31c: V196 = EXTCODESIZE V181
0x31d: V197 = ISZERO V196
0x31f: V198 = ISZERO V197
0x320: V199 = 0x2f6
0x323: THROWI V198
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V197, V181, 0x0, V193, V194, V193, 0x20, V190, 0xd87574e0, V181, 0x6f05b59d3b20000]
Exit stack: []

================================

Block 0x324
[0x324:0x332]
---
Predecessors: [0x295]
Successors: [0x333]
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
0x328 JUMPDEST
0x329 POP
0x32a GAS
0x32b CALL
0x32c ISZERO
0x32d DUP1
0x32e ISZERO
0x32f PUSH2 0x30a
0x332 JUMPI
---
0x324: V200 = 0x0
0x327: REVERT 0x0 0x0
0x328: JUMPDEST 
0x32a: V201 = GAS
0x32b: V202 = CALL V201 S1 S2 S3 S4 S5 S6
0x32c: V203 = ISZERO V202
0x32e: V204 = ISZERO V203
0x32f: V205 = 0x30a
0x332: THROWI V204
---
Entry stack: [0x6f05b59d3b20000, V181, 0xd87574e0, V190, 0x20, V193, V194, V193, 0x0, V181, V197]
Stack pops: 0
Stack additions: [V203]
Exit stack: []

================================

Block 0x333
[0x333:0x34d]
---
Predecessors: [0x324]
Successors: [0x34e]
---
0x333 RETURNDATASIZE
0x334 PUSH1 0x0
0x336 DUP1
0x337 RETURNDATACOPY
0x338 RETURNDATASIZE
0x339 PUSH1 0x0
0x33b REVERT
0x33c JUMPDEST
0x33d POP
0x33e POP
0x33f POP
0x340 POP
0x341 PUSH1 0x40
0x343 MLOAD
0x344 RETURNDATASIZE
0x345 PUSH1 0x20
0x347 DUP2
0x348 LT
0x349 ISZERO
0x34a PUSH2 0x320
0x34d JUMPI
---
0x333: V206 = RETURNDATASIZE
0x334: V207 = 0x0
0x337: RETURNDATACOPY 0x0 0x0 V206
0x338: V208 = RETURNDATASIZE
0x339: V209 = 0x0
0x33b: REVERT 0x0 V208
0x33c: JUMPDEST 
0x341: V210 = 0x40
0x343: V211 = M[0x40]
0x344: V212 = RETURNDATASIZE
0x345: V213 = 0x20
0x348: V214 = LT V212 0x20
0x349: V215 = ISZERO V214
0x34a: V216 = 0x320
0x34d: THROWI V215
---
Entry stack: [V203]
Stack pops: 0
Stack additions: [V212, V211]
Exit stack: []

================================

Block 0x34e
[0x34e:0x36b]
---
Predecessors: [0x333]
Successors: [0x36c]
---
0x34e PUSH1 0x0
0x350 DUP1
0x351 REVERT
0x352 JUMPDEST
0x353 DUP2
0x354 ADD
0x355 SWAP1
0x356 DUP1
0x357 DUP1
0x358 MLOAD
0x359 SWAP1
0x35a PUSH1 0x20
0x35c ADD
0x35d SWAP1
0x35e SWAP3
0x35f SWAP2
0x360 SWAP1
0x361 POP
0x362 POP
0x363 POP
0x364 LT
0x365 ISZERO
0x366 ISZERO
0x367 ISZERO
0x368 PUSH2 0x33e
0x36b JUMPI
---
0x34e: V217 = 0x0
0x351: REVERT 0x0 0x0
0x352: JUMPDEST 
0x354: V218 = ADD S1 S0
0x358: V219 = M[S1]
0x35a: V220 = 0x20
0x35c: V221 = ADD 0x20 S1
0x364: V222 = LT V219 S2
0x365: V223 = ISZERO V222
0x366: V224 = ISZERO V223
0x367: V225 = ISZERO V224
0x368: V226 = 0x33e
0x36b: THROWI V225
---
Entry stack: [V211, V212]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36c
[0x36c:0x37e]
---
Predecessors: [0x34e]
Successors: [0x37f]
---
0x36c PUSH1 0x0
0x36e DUP1
0x36f REVERT
0x370 JUMPDEST
0x371 PUSH2 0x346
0x374 PUSH2 0x443
0x377 JUMP
0x378 JUMPDEST
0x379 ISZERO
0x37a ISZERO
0x37b PUSH2 0x351
0x37e JUMPI
---
0x36c: V227 = 0x0
0x36f: REVERT 0x0 0x0
0x370: JUMPDEST 
0x371: V228 = 0x346
0x374: V229 = 0x443
0x377: THROW 
0x378: JUMPDEST 
0x379: V230 = ISZERO S0
0x37a: V231 = ISZERO V230
0x37b: V232 = 0x351
0x37e: THROWI V231
---
Entry stack: []
Stack pops: 0
Stack additions: [0x346]
Exit stack: []

================================

Block 0x37f
[0x37f:0x3bf]
---
Predecessors: [0x36c]
Successors: [0x3c0]
---
0x37f PUSH1 0x0
0x381 DUP1
0x382 REVERT
0x383 JUMPDEST
0x384 ADDRESS
0x385 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39a AND
0x39b BALANCE
0x39c SWAP3
0x39d POP
0x39e PUSH8 0x16345785d8a0000
0x3a7 PUSH2 0x37c
0x3aa PUSH2 0x831
0x3ad JUMP
0x3ae JUMPDEST
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 SWAP2
0x3b4 SUB
0x3b5 SWAP1
0x3b6 DUP3
0x3b7 CREATE
0x3b8 DUP1
0x3b9 ISZERO
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x397
0x3bf JUMPI
---
0x37f: V233 = 0x0
0x382: REVERT 0x0 0x0
0x383: JUMPDEST 
0x384: V234 = ADDRESS
0x385: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x39a: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x39b: V237 = BALANCE V236
0x39e: V238 = 0x16345785d8a0000
0x3a7: V239 = 0x37c
0x3aa: V240 = 0x831
0x3ad: THROW 
0x3ae: JUMPDEST 
0x3af: V241 = 0x40
0x3b1: V242 = M[0x40]
0x3b4: V243 = SUB S0 V242
0x3b7: V244 = CREATE S1 V242 V243
0x3b9: V245 = ISZERO V244
0x3bb: V246 = ISZERO V245
0x3bc: V247 = 0x397
0x3bf: THROWI V246
---
Entry stack: []
Stack pops: 0
Stack additions: [0x37c, 0x16345785d8a0000, S0, S1, V237, V245, V244, S1]
Exit stack: []

================================

Block 0x3c0
[0x3c0:0x413]
---
Predecessors: [0x37f]
Successors: [0x414]
---
0x3c0 RETURNDATASIZE
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 RETURNDATACOPY
0x3c5 RETURNDATASIZE
0x3c6 PUSH1 0x0
0x3c8 REVERT
0x3c9 JUMPDEST
0x3ca POP
0x3cb SWAP1
0x3cc POP
0x3cd POP
0x3ce ADDRESS
0x3cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e4 AND
0x3e5 BALANCE
0x3e6 SWAP2
0x3e7 POP
0x3e8 DUP3
0x3e9 DUP3
0x3ea SUB
0x3eb SWAP1
0x3ec POP
0x3ed CALLER
0x3ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x403 AND
0x404 PUSH2 0x8fc
0x407 PUSH1 0x64
0x409 PUSH1 0x5f
0x40b DUP5
0x40c MUL
0x40d DUP2
0x40e ISZERO
0x40f ISZERO
0x410 PUSH2 0x3e3
0x413 JUMPI
---
0x3c0: V248 = RETURNDATASIZE
0x3c1: V249 = 0x0
0x3c4: RETURNDATACOPY 0x0 0x0 V248
0x3c5: V250 = RETURNDATASIZE
0x3c6: V251 = 0x0
0x3c8: REVERT 0x0 V250
0x3c9: JUMPDEST 
0x3ce: V252 = ADDRESS
0x3cf: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e4: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x3e5: V255 = BALANCE V254
0x3ea: V256 = SUB V255 S5
0x3ed: V257 = CALLER
0x3ee: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x403: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x404: V260 = 0x8fc
0x407: V261 = 0x64
0x409: V262 = 0x5f
0x40c: V263 = MUL V256 0x5f
0x40e: V264 = ISZERO 0x64
0x40f: V265 = ISZERO 0x0
0x410: V266 = 0x3e3
0x413: THROWI 0x1
---
Entry stack: [S2, V244, V245]
Stack pops: 0
Stack additions: [V263, 0x64, 0x8fc, V259, V256, V255, S5]
Exit stack: []

================================

Block 0x414
[0x414:0x437]
---
Predecessors: [0x3c0]
Successors: [0x438]
---
0x414 INVALID
0x415 JUMPDEST
0x416 DIV
0x417 SWAP1
0x418 DUP2
0x419 ISZERO
0x41a MUL
0x41b SWAP1
0x41c PUSH1 0x40
0x41e MLOAD
0x41f PUSH1 0x0
0x421 PUSH1 0x40
0x423 MLOAD
0x424 DUP1
0x425 DUP4
0x426 SUB
0x427 DUP2
0x428 DUP6
0x429 DUP9
0x42a DUP9
0x42b CALL
0x42c SWAP4
0x42d POP
0x42e POP
0x42f POP
0x430 POP
0x431 ISZERO
0x432 DUP1
0x433 ISZERO
0x434 PUSH2 0x40f
0x437 JUMPI
---
0x414: INVALID 
0x415: JUMPDEST 
0x416: V267 = DIV S0 S1
0x419: V268 = ISZERO V267
0x41a: V269 = MUL V268 S2
0x41c: V270 = 0x40
0x41e: V271 = M[0x40]
0x41f: V272 = 0x0
0x421: V273 = 0x40
0x423: V274 = M[0x40]
0x426: V275 = SUB V271 V274
0x42b: V276 = CALL V269 S3 V267 V274 V275 V274 0x0
0x431: V277 = ISZERO V276
0x433: V278 = ISZERO V277
0x434: V279 = 0x40f
0x437: THROWI V278
---
Entry stack: [S6, V255, V256, V259, 0x8fc, 0x64, V263]
Stack pops: 0
Stack additions: [V277]
Exit stack: []

================================

Block 0x438
[0x438:0x46b]
---
Predecessors: [0x414]
Successors: [0x46c]
---
0x438 RETURNDATASIZE
0x439 PUSH1 0x0
0x43b DUP1
0x43c RETURNDATACOPY
0x43d RETURNDATASIZE
0x43e PUSH1 0x0
0x440 REVERT
0x441 JUMPDEST
0x442 POP
0x443 PUSH8 0x16345785d8a0000
0x44c ADDRESS
0x44d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x462 AND
0x463 BALANCE
0x464 LT
0x465 ISZERO
0x466 ISZERO
0x467 ISZERO
0x468 PUSH2 0x43e
0x46b JUMPI
---
0x438: V280 = RETURNDATASIZE
0x439: V281 = 0x0
0x43c: RETURNDATACOPY 0x0 0x0 V280
0x43d: V282 = RETURNDATASIZE
0x43e: V283 = 0x0
0x440: REVERT 0x0 V282
0x441: JUMPDEST 
0x443: V284 = 0x16345785d8a0000
0x44c: V285 = ADDRESS
0x44d: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x462: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x463: V288 = BALANCE V287
0x464: V289 = LT V288 0x16345785d8a0000
0x465: V290 = ISZERO V289
0x466: V291 = ISZERO V290
0x467: V292 = ISZERO V291
0x468: V293 = 0x43e
0x46b: THROWI V292
---
Entry stack: [V277]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x46c
[0x46c:0x4ea]
---
Predecessors: [0x438]
Successors: [0x4eb]
---
0x46c PUSH1 0x0
0x46e DUP1
0x46f REVERT
0x470 JUMPDEST
0x471 POP
0x472 POP
0x473 POP
0x474 JUMP
0x475 JUMPDEST
0x476 PUSH1 0x0
0x478 DUP1
0x479 PUSH2 0x637
0x47c NUMBER
0x47d PUSH2 0x629
0x480 TIMESTAMP
0x481 CALLER
0x482 PUSH1 0x40
0x484 MLOAD
0x485 PUSH1 0x20
0x487 ADD
0x488 DUP1
0x489 DUP3
0x48a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49f AND
0x4a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b5 AND
0x4b6 PUSH13 0x1000000000000000000000000
0x4c4 MUL
0x4c5 DUP2
0x4c6 MSTORE
0x4c7 PUSH1 0x14
0x4c9 ADD
0x4ca SWAP2
0x4cb POP
0x4cc POP
0x4cd PUSH1 0x40
0x4cf MLOAD
0x4d0 PUSH1 0x20
0x4d2 DUP2
0x4d3 DUP4
0x4d4 SUB
0x4d5 SUB
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 SWAP1
0x4d9 PUSH1 0x40
0x4db MSTORE
0x4dc PUSH1 0x40
0x4de MLOAD
0x4df DUP1
0x4e0 DUP3
0x4e1 DUP1
0x4e2 MLOAD
0x4e3 SWAP1
0x4e4 PUSH1 0x20
0x4e6 ADD
0x4e7 SWAP1
0x4e8 DUP1
0x4e9 DUP4
0x4ea DUP4
---
0x46c: V294 = 0x0
0x46f: REVERT 0x0 0x0
0x470: JUMPDEST 
0x474: JUMP S3
0x475: JUMPDEST 
0x476: V295 = 0x0
0x479: V296 = 0x637
0x47c: V297 = NUMBER
0x47d: V298 = 0x629
0x480: V299 = TIMESTAMP
0x481: V300 = CALLER
0x482: V301 = 0x40
0x484: V302 = M[0x40]
0x485: V303 = 0x20
0x487: V304 = ADD 0x20 V302
0x48a: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x49f: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x4a0: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b5: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x4b6: V309 = 0x1000000000000000000000000
0x4c4: V310 = MUL 0x1000000000000000000000000 V308
0x4c6: M[V304] = V310
0x4c7: V311 = 0x14
0x4c9: V312 = ADD 0x14 V304
0x4cd: V313 = 0x40
0x4cf: V314 = M[0x40]
0x4d0: V315 = 0x20
0x4d4: V316 = SUB V312 V314
0x4d5: V317 = SUB V316 0x20
0x4d7: M[V314] = V317
0x4d9: V318 = 0x40
0x4db: M[0x40] = V312
0x4dc: V319 = 0x40
0x4de: V320 = M[0x40]
0x4e2: V321 = M[V314]
0x4e4: V322 = 0x20
0x4e6: V323 = ADD 0x20 V314
---
Entry stack: []
Stack pops: 0
Stack additions: [V323, V320, V321, V321, V323, V320, V320, V314, V299, 0x629, V297, 0x637, 0x0, 0x0]
Exit stack: []

================================

Block 0x4eb
[0x4eb:0x4f5]
---
Predecessors: [0x46c]
Successors: [0x4f6]
---
0x4eb JUMPDEST
0x4ec PUSH1 0x20
0x4ee DUP4
0x4ef LT
0x4f0 ISZERO
0x4f1 ISZERO
0x4f2 PUSH2 0x4de
0x4f5 JUMPI
---
0x4eb: JUMPDEST 
0x4ec: V324 = 0x20
0x4ef: V325 = LT V321 0x20
0x4f0: V326 = ISZERO V325
0x4f1: V327 = ISZERO V326
0x4f2: V328 = 0x4de
0x4f5: THROWI V327
---
Entry stack: [0x0, 0x0, 0x637, V297, 0x629, V299, V314, V320, V320, V323, V321, V321, V320, V323]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [0x0, 0x0, 0x637, V297, 0x629, V299, V314, V320, V320, V323, V321, V321, V320, V323]

================================

Block 0x4f6
[0x4f6:0x548]
---
Predecessors: [0x4eb]
Successors: [0x549]
---
0x4f6 DUP1
0x4f7 MLOAD
0x4f8 DUP3
0x4f9 MSTORE
0x4fa PUSH1 0x20
0x4fc DUP3
0x4fd ADD
0x4fe SWAP2
0x4ff POP
0x500 PUSH1 0x20
0x502 DUP2
0x503 ADD
0x504 SWAP1
0x505 POP
0x506 PUSH1 0x20
0x508 DUP4
0x509 SUB
0x50a SWAP3
0x50b POP
0x50c PUSH2 0x4b9
0x50f JUMP
0x510 JUMPDEST
0x511 PUSH1 0x1
0x513 DUP4
0x514 PUSH1 0x20
0x516 SUB
0x517 PUSH2 0x100
0x51a EXP
0x51b SUB
0x51c DUP1
0x51d NOT
0x51e DUP3
0x51f MLOAD
0x520 AND
0x521 DUP2
0x522 DUP5
0x523 MLOAD
0x524 AND
0x525 DUP1
0x526 DUP3
0x527 OR
0x528 DUP6
0x529 MSTORE
0x52a POP
0x52b POP
0x52c POP
0x52d POP
0x52e POP
0x52f POP
0x530 SWAP1
0x531 POP
0x532 ADD
0x533 SWAP2
0x534 POP
0x535 POP
0x536 PUSH1 0x40
0x538 MLOAD
0x539 DUP1
0x53a SWAP2
0x53b SUB
0x53c SWAP1
0x53d SHA3
0x53e PUSH1 0x1
0x540 SWAP1
0x541 DIV
0x542 DUP2
0x543 ISZERO
0x544 ISZERO
0x545 PUSH2 0x518
0x548 JUMPI
---
0x4f7: V329 = M[V323]
0x4f9: M[V320] = V329
0x4fa: V330 = 0x20
0x4fd: V331 = ADD V320 0x20
0x500: V332 = 0x20
0x503: V333 = ADD V323 0x20
0x506: V334 = 0x20
0x509: V335 = SUB V321 0x20
0x50c: V336 = 0x4b9
0x50f: THROW 
0x510: JUMPDEST 
0x511: V337 = 0x1
0x514: V338 = 0x20
0x516: V339 = SUB 0x20 S2
0x517: V340 = 0x100
0x51a: V341 = EXP 0x100 V339
0x51b: V342 = SUB V341 0x1
0x51d: V343 = NOT V342
0x51f: V344 = M[S0]
0x520: V345 = AND V344 V343
0x523: V346 = M[S1]
0x524: V347 = AND V346 V342
0x527: V348 = OR V345 V347
0x529: M[S1] = V348
0x532: V349 = ADD S3 S5
0x536: V350 = 0x40
0x538: V351 = M[0x40]
0x53b: V352 = SUB V349 V351
0x53d: V353 = SHA3 V351 V352
0x53e: V354 = 0x1
0x541: V355 = DIV V353 0x1
0x543: V356 = ISZERO S8
0x544: V357 = ISZERO V356
0x545: V358 = 0x518
0x548: THROWI V357
---
Entry stack: [0x0, 0x0, 0x637, V297, 0x629, V299, V314, V320, V320, V323, V321, V321, V320, V323]
Stack pops: 3
Stack additions: [V355, S8]
Exit stack: []

================================

Block 0x549
[0x549:0x5bd]
---
Predecessors: [0x4f6]
Successors: [0x5be]
---
0x549 INVALID
0x54a JUMPDEST
0x54b DIV
0x54c PUSH2 0x61b
0x54f GASLIMIT
0x550 PUSH2 0x60d
0x553 TIMESTAMP
0x554 COINBASE
0x555 PUSH1 0x40
0x557 MLOAD
0x558 PUSH1 0x20
0x55a ADD
0x55b DUP1
0x55c DUP3
0x55d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x572 AND
0x573 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x588 AND
0x589 PUSH13 0x1000000000000000000000000
0x597 MUL
0x598 DUP2
0x599 MSTORE
0x59a PUSH1 0x14
0x59c ADD
0x59d SWAP2
0x59e POP
0x59f POP
0x5a0 PUSH1 0x40
0x5a2 MLOAD
0x5a3 PUSH1 0x20
0x5a5 DUP2
0x5a6 DUP4
0x5a7 SUB
0x5a8 SUB
0x5a9 DUP2
0x5aa MSTORE
0x5ab SWAP1
0x5ac PUSH1 0x40
0x5ae MSTORE
0x5af PUSH1 0x40
0x5b1 MLOAD
0x5b2 DUP1
0x5b3 DUP3
0x5b4 DUP1
0x5b5 MLOAD
0x5b6 SWAP1
0x5b7 PUSH1 0x20
0x5b9 ADD
0x5ba SWAP1
0x5bb DUP1
0x5bc DUP4
0x5bd DUP4
---
0x549: INVALID 
0x54a: JUMPDEST 
0x54b: V359 = DIV S0 S1
0x54c: V360 = 0x61b
0x54f: V361 = GASLIMIT
0x550: V362 = 0x60d
0x553: V363 = TIMESTAMP
0x554: V364 = COINBASE
0x555: V365 = 0x40
0x557: V366 = M[0x40]
0x558: V367 = 0x20
0x55a: V368 = ADD 0x20 V366
0x55d: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x572: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x573: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x588: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x589: V373 = 0x1000000000000000000000000
0x597: V374 = MUL 0x1000000000000000000000000 V372
0x599: M[V368] = V374
0x59a: V375 = 0x14
0x59c: V376 = ADD 0x14 V368
0x5a0: V377 = 0x40
0x5a2: V378 = M[0x40]
0x5a3: V379 = 0x20
0x5a7: V380 = SUB V376 V378
0x5a8: V381 = SUB V380 0x20
0x5aa: M[V378] = V381
0x5ac: V382 = 0x40
0x5ae: M[0x40] = V376
0x5af: V383 = 0x40
0x5b1: V384 = M[0x40]
0x5b5: V385 = M[V378]
0x5b7: V386 = 0x20
0x5b9: V387 = ADD 0x20 V378
---
Entry stack: [S1, V355]
Stack pops: 0
Stack additions: [V387, V384, V385, V385, V387, V384, V384, V378, V363, 0x60d, V361, 0x61b, V359]
Exit stack: []

================================

Block 0x5be
[0x5be:0x5c8]
---
Predecessors: [0x549]
Successors: [0x5c9]
---
0x5be JUMPDEST
0x5bf PUSH1 0x20
0x5c1 DUP4
0x5c2 LT
0x5c3 ISZERO
0x5c4 ISZERO
0x5c5 PUSH2 0x5b1
0x5c8 JUMPI
---
0x5be: JUMPDEST 
0x5bf: V388 = 0x20
0x5c2: V389 = LT V385 0x20
0x5c3: V390 = ISZERO V389
0x5c4: V391 = ISZERO V390
0x5c5: V392 = 0x5b1
0x5c8: THROWI V391
---
Entry stack: [V359, 0x61b, V361, 0x60d, V363, V378, V384, V384, V387, V385, V385, V384, V387]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V359, 0x61b, V361, 0x60d, V363, V378, V384, V384, V387, V385, V385, V384, V387]

================================

Block 0x5c9
[0x5c9:0x61b]
---
Predecessors: [0x5be]
Successors: [0x61c]
---
0x5c9 DUP1
0x5ca MLOAD
0x5cb DUP3
0x5cc MSTORE
0x5cd PUSH1 0x20
0x5cf DUP3
0x5d0 ADD
0x5d1 SWAP2
0x5d2 POP
0x5d3 PUSH1 0x20
0x5d5 DUP2
0x5d6 ADD
0x5d7 SWAP1
0x5d8 POP
0x5d9 PUSH1 0x20
0x5db DUP4
0x5dc SUB
0x5dd SWAP3
0x5de POP
0x5df PUSH2 0x58c
0x5e2 JUMP
0x5e3 JUMPDEST
0x5e4 PUSH1 0x1
0x5e6 DUP4
0x5e7 PUSH1 0x20
0x5e9 SUB
0x5ea PUSH2 0x100
0x5ed EXP
0x5ee SUB
0x5ef DUP1
0x5f0 NOT
0x5f1 DUP3
0x5f2 MLOAD
0x5f3 AND
0x5f4 DUP2
0x5f5 DUP5
0x5f6 MLOAD
0x5f7 AND
0x5f8 DUP1
0x5f9 DUP3
0x5fa OR
0x5fb DUP6
0x5fc MSTORE
0x5fd POP
0x5fe POP
0x5ff POP
0x600 POP
0x601 POP
0x602 POP
0x603 SWAP1
0x604 POP
0x605 ADD
0x606 SWAP2
0x607 POP
0x608 POP
0x609 PUSH1 0x40
0x60b MLOAD
0x60c DUP1
0x60d SWAP2
0x60e SUB
0x60f SWAP1
0x610 SHA3
0x611 PUSH1 0x1
0x613 SWAP1
0x614 DIV
0x615 DUP2
0x616 ISZERO
0x617 ISZERO
0x618 PUSH2 0x5eb
0x61b JUMPI
---
0x5ca: V393 = M[V387]
0x5cc: M[V384] = V393
0x5cd: V394 = 0x20
0x5d0: V395 = ADD V384 0x20
0x5d3: V396 = 0x20
0x5d6: V397 = ADD V387 0x20
0x5d9: V398 = 0x20
0x5dc: V399 = SUB V385 0x20
0x5df: V400 = 0x58c
0x5e2: THROW 
0x5e3: JUMPDEST 
0x5e4: V401 = 0x1
0x5e7: V402 = 0x20
0x5e9: V403 = SUB 0x20 S2
0x5ea: V404 = 0x100
0x5ed: V405 = EXP 0x100 V403
0x5ee: V406 = SUB V405 0x1
0x5f0: V407 = NOT V406
0x5f2: V408 = M[S0]
0x5f3: V409 = AND V408 V407
0x5f6: V410 = M[S1]
0x5f7: V411 = AND V410 V406
0x5fa: V412 = OR V409 V411
0x5fc: M[S1] = V412
0x605: V413 = ADD S3 S5
0x609: V414 = 0x40
0x60b: V415 = M[0x40]
0x60e: V416 = SUB V413 V415
0x610: V417 = SHA3 V415 V416
0x611: V418 = 0x1
0x614: V419 = DIV V417 0x1
0x616: V420 = ISZERO S8
0x617: V421 = ISZERO V420
0x618: V422 = 0x5eb
0x61b: THROWI V421
---
Entry stack: [V359, 0x61b, V361, 0x60d, V363, V378, V384, V384, V387, V385, V385, V384, V387]
Stack pops: 3
Stack additions: [V419, S8]
Exit stack: []

================================

Block 0x61c
[0x61c:0x697]
---
Predecessors: [0x5c9]
Successors: [0x698]
---
0x61c INVALID
0x61d JUMPDEST
0x61e DIV
0x61f PUSH2 0x5ff
0x622 DIFFICULTY
0x623 TIMESTAMP
0x624 PUSH2 0x7a9
0x627 SWAP1
0x628 SWAP2
0x629 SWAP1
0x62a PUSH4 0xffffffff
0x62f AND
0x630 JUMP
0x631 JUMPDEST
0x632 PUSH2 0x7a9
0x635 SWAP1
0x636 SWAP2
0x637 SWAP1
0x638 PUSH4 0xffffffff
0x63d AND
0x63e JUMP
0x63f JUMPDEST
0x640 PUSH2 0x7a9
0x643 SWAP1
0x644 SWAP2
0x645 SWAP1
0x646 PUSH4 0xffffffff
0x64b AND
0x64c JUMP
0x64d JUMPDEST
0x64e PUSH2 0x7a9
0x651 SWAP1
0x652 SWAP2
0x653 SWAP1
0x654 PUSH4 0xffffffff
0x659 AND
0x65a JUMP
0x65b JUMPDEST
0x65c PUSH2 0x7a9
0x65f SWAP1
0x660 SWAP2
0x661 SWAP1
0x662 PUSH4 0xffffffff
0x667 AND
0x668 JUMP
0x669 JUMPDEST
0x66a PUSH1 0x40
0x66c MLOAD
0x66d PUSH1 0x20
0x66f ADD
0x670 DUP1
0x671 DUP3
0x672 DUP2
0x673 MSTORE
0x674 PUSH1 0x20
0x676 ADD
0x677 SWAP2
0x678 POP
0x679 POP
0x67a PUSH1 0x40
0x67c MLOAD
0x67d PUSH1 0x20
0x67f DUP2
0x680 DUP4
0x681 SUB
0x682 SUB
0x683 DUP2
0x684 MSTORE
0x685 SWAP1
0x686 PUSH1 0x40
0x688 MSTORE
0x689 PUSH1 0x40
0x68b MLOAD
0x68c DUP1
0x68d DUP3
0x68e DUP1
0x68f MLOAD
0x690 SWAP1
0x691 PUSH1 0x20
0x693 ADD
0x694 SWAP1
0x695 DUP1
0x696 DUP4
0x697 DUP4
---
0x61c: INVALID 
0x61d: JUMPDEST 
0x61e: V423 = DIV S0 S1
0x61f: V424 = 0x5ff
0x622: V425 = DIFFICULTY
0x623: V426 = TIMESTAMP
0x624: V427 = 0x7a9
0x62a: V428 = 0xffffffff
0x62f: V429 = AND 0xffffffff 0x7a9
0x630: THROW 
0x631: JUMPDEST 
0x632: V430 = 0x7a9
0x638: V431 = 0xffffffff
0x63d: V432 = AND 0xffffffff 0x7a9
0x63e: THROW 
0x63f: JUMPDEST 
0x640: V433 = 0x7a9
0x646: V434 = 0xffffffff
0x64b: V435 = AND 0xffffffff 0x7a9
0x64c: THROW 
0x64d: JUMPDEST 
0x64e: V436 = 0x7a9
0x654: V437 = 0xffffffff
0x659: V438 = AND 0xffffffff 0x7a9
0x65a: THROW 
0x65b: JUMPDEST 
0x65c: V439 = 0x7a9
0x662: V440 = 0xffffffff
0x667: V441 = AND 0xffffffff 0x7a9
0x668: THROW 
0x669: JUMPDEST 
0x66a: V442 = 0x40
0x66c: V443 = M[0x40]
0x66d: V444 = 0x20
0x66f: V445 = ADD 0x20 V443
0x673: M[V445] = S0
0x674: V446 = 0x20
0x676: V447 = ADD 0x20 V445
0x67a: V448 = 0x40
0x67c: V449 = M[0x40]
0x67d: V450 = 0x20
0x681: V451 = SUB V447 V449
0x682: V452 = SUB V451 0x20
0x684: M[V449] = V452
0x686: V453 = 0x40
0x688: M[0x40] = V447
0x689: V454 = 0x40
0x68b: V455 = M[0x40]
0x68f: V456 = M[V449]
0x691: V457 = 0x20
0x693: V458 = ADD 0x20 V449
---
Entry stack: [S1, V419]
Stack pops: 0
Stack additions: [V425, V426, 0x5ff, V423, S1, S0, S1, S0, S1, S0, S1, S0, V458, V455, V456, V456, V458, V455, V455, V449]
Exit stack: []

================================

Block 0x698
[0x698:0x6a2]
---
Predecessors: [0x61c]
Successors: [0x6a3]
---
0x698 JUMPDEST
0x699 PUSH1 0x20
0x69b DUP4
0x69c LT
0x69d ISZERO
0x69e ISZERO
0x69f PUSH2 0x68b
0x6a2 JUMPI
---
0x698: JUMPDEST 
0x699: V459 = 0x20
0x69c: V460 = LT V456 0x20
0x69d: V461 = ISZERO V460
0x69e: V462 = ISZERO V461
0x69f: V463 = 0x68b
0x6a2: THROWI V462
---
Entry stack: [V449, V455, V455, V458, V456, V456, V455, V458]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V449, V455, V455, V458, V456, V456, V455, V458]

================================

Block 0x6a3
[0x6a3:0x771]
---
Predecessors: [0x698]
Successors: [0x772]
---
0x6a3 DUP1
0x6a4 MLOAD
0x6a5 DUP3
0x6a6 MSTORE
0x6a7 PUSH1 0x20
0x6a9 DUP3
0x6aa ADD
0x6ab SWAP2
0x6ac POP
0x6ad PUSH1 0x20
0x6af DUP2
0x6b0 ADD
0x6b1 SWAP1
0x6b2 POP
0x6b3 PUSH1 0x20
0x6b5 DUP4
0x6b6 SUB
0x6b7 SWAP3
0x6b8 POP
0x6b9 PUSH2 0x666
0x6bc JUMP
0x6bd JUMPDEST
0x6be PUSH1 0x1
0x6c0 DUP4
0x6c1 PUSH1 0x20
0x6c3 SUB
0x6c4 PUSH2 0x100
0x6c7 EXP
0x6c8 SUB
0x6c9 DUP1
0x6ca NOT
0x6cb DUP3
0x6cc MLOAD
0x6cd AND
0x6ce DUP2
0x6cf DUP5
0x6d0 MLOAD
0x6d1 AND
0x6d2 DUP1
0x6d3 DUP3
0x6d4 OR
0x6d5 DUP6
0x6d6 MSTORE
0x6d7 POP
0x6d8 POP
0x6d9 POP
0x6da POP
0x6db POP
0x6dc POP
0x6dd SWAP1
0x6de POP
0x6df ADD
0x6e0 SWAP2
0x6e1 POP
0x6e2 POP
0x6e3 PUSH1 0x40
0x6e5 MLOAD
0x6e6 DUP1
0x6e7 SWAP2
0x6e8 SUB
0x6e9 SWAP1
0x6ea SHA3
0x6eb PUSH1 0x1
0x6ed SWAP1
0x6ee DIV
0x6ef SWAP1
0x6f0 POP
0x6f1 PUSH1 0x1
0x6f3 PUSH1 0x0
0x6f5 SWAP1
0x6f6 SLOAD
0x6f7 SWAP1
0x6f8 PUSH2 0x100
0x6fb EXP
0x6fc SWAP1
0x6fd DIV
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x729 AND
0x72a PUSH4 0x11a09ae7
0x72f PUSH1 0x40
0x731 MLOAD
0x732 DUP2
0x733 PUSH4 0xffffffff
0x738 AND
0x739 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x757 MUL
0x758 DUP2
0x759 MSTORE
0x75a PUSH1 0x4
0x75c ADD
0x75d PUSH1 0x20
0x75f PUSH1 0x40
0x761 MLOAD
0x762 DUP1
0x763 DUP4
0x764 SUB
0x765 DUP2
0x766 PUSH1 0x0
0x768 DUP8
0x769 DUP1
0x76a EXTCODESIZE
0x76b ISZERO
0x76c DUP1
0x76d ISZERO
0x76e PUSH2 0x744
0x771 JUMPI
---
0x6a4: V464 = M[V458]
0x6a6: M[V455] = V464
0x6a7: V465 = 0x20
0x6aa: V466 = ADD V455 0x20
0x6ad: V467 = 0x20
0x6b0: V468 = ADD V458 0x20
0x6b3: V469 = 0x20
0x6b6: V470 = SUB V456 0x20
0x6b9: V471 = 0x666
0x6bc: THROW 
0x6bd: JUMPDEST 
0x6be: V472 = 0x1
0x6c1: V473 = 0x20
0x6c3: V474 = SUB 0x20 S2
0x6c4: V475 = 0x100
0x6c7: V476 = EXP 0x100 V474
0x6c8: V477 = SUB V476 0x1
0x6ca: V478 = NOT V477
0x6cc: V479 = M[S0]
0x6cd: V480 = AND V479 V478
0x6d0: V481 = M[S1]
0x6d1: V482 = AND V481 V477
0x6d4: V483 = OR V480 V482
0x6d6: M[S1] = V483
0x6df: V484 = ADD S3 S5
0x6e3: V485 = 0x40
0x6e5: V486 = M[0x40]
0x6e8: V487 = SUB V484 V486
0x6ea: V488 = SHA3 V486 V487
0x6eb: V489 = 0x1
0x6ee: V490 = DIV V488 0x1
0x6f1: V491 = 0x1
0x6f3: V492 = 0x0
0x6f6: V493 = S[0x1]
0x6f8: V494 = 0x100
0x6fb: V495 = EXP 0x100 0x0
0x6fd: V496 = DIV V493 0x1
0x6fe: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x714: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x729: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x72a: V501 = 0x11a09ae7
0x72f: V502 = 0x40
0x731: V503 = M[0x40]
0x733: V504 = 0xffffffff
0x738: V505 = AND 0xffffffff 0x11a09ae7
0x739: V506 = 0x100000000000000000000000000000000000000000000000000000000
0x757: V507 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x759: M[V503] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x75a: V508 = 0x4
0x75c: V509 = ADD 0x4 V503
0x75d: V510 = 0x20
0x75f: V511 = 0x40
0x761: V512 = M[0x40]
0x764: V513 = SUB V509 V512
0x766: V514 = 0x0
0x76a: V515 = EXTCODESIZE V500
0x76b: V516 = ISZERO V515
0x76d: V517 = ISZERO V516
0x76e: V518 = 0x744
0x771: THROWI V517
---
Entry stack: [V449, V455, V455, V458, V456, V456, V455, V458]
Stack pops: 3
Stack additions: [V516, V500, 0x0, V512, V513, V512, 0x20, V509, 0x11a09ae7, V500, V490]
Exit stack: []

================================

Block 0x772
[0x772:0x780]
---
Predecessors: [0x6a3]
Successors: [0x781]
---
0x772 PUSH1 0x0
0x774 DUP1
0x775 REVERT
0x776 JUMPDEST
0x777 POP
0x778 GAS
0x779 CALL
0x77a ISZERO
0x77b DUP1
0x77c ISZERO
0x77d PUSH2 0x758
0x780 JUMPI
---
0x772: V519 = 0x0
0x775: REVERT 0x0 0x0
0x776: JUMPDEST 
0x778: V520 = GAS
0x779: V521 = CALL V520 S1 S2 S3 S4 S5 S6
0x77a: V522 = ISZERO V521
0x77c: V523 = ISZERO V522
0x77d: V524 = 0x758
0x780: THROWI V523
---
Entry stack: [V490, V500, 0x11a09ae7, V509, 0x20, V512, V513, V512, 0x0, V500, V516]
Stack pops: 0
Stack additions: [V522]
Exit stack: []

================================

Block 0x781
[0x781:0x79b]
---
Predecessors: [0x772]
Successors: [0x79c]
---
0x781 RETURNDATASIZE
0x782 PUSH1 0x0
0x784 DUP1
0x785 RETURNDATACOPY
0x786 RETURNDATASIZE
0x787 PUSH1 0x0
0x789 REVERT
0x78a JUMPDEST
0x78b POP
0x78c POP
0x78d POP
0x78e POP
0x78f PUSH1 0x40
0x791 MLOAD
0x792 RETURNDATASIZE
0x793 PUSH1 0x20
0x795 DUP2
0x796 LT
0x797 ISZERO
0x798 PUSH2 0x76e
0x79b JUMPI
---
0x781: V525 = RETURNDATASIZE
0x782: V526 = 0x0
0x785: RETURNDATACOPY 0x0 0x0 V525
0x786: V527 = RETURNDATASIZE
0x787: V528 = 0x0
0x789: REVERT 0x0 V527
0x78a: JUMPDEST 
0x78f: V529 = 0x40
0x791: V530 = M[0x40]
0x792: V531 = RETURNDATASIZE
0x793: V532 = 0x20
0x796: V533 = LT V531 0x20
0x797: V534 = ISZERO V533
0x798: V535 = 0x76e
0x79b: THROWI V534
---
Entry stack: [V522]
Stack pops: 0
Stack additions: [V531, V530]
Exit stack: []

================================

Block 0x79c
[0x79c:0x79f]
---
Predecessors: [0x781]
Successors: []
---
0x79c PUSH1 0x0
0x79e DUP1
0x79f REVERT
---
0x79c: V536 = 0x0
0x79f: REVERT 0x0 0x0
---
Entry stack: [V530, V531]
Stack pops: 0
Stack additions: []
Exit stack: [V530, V531]

================================

Block 0x7a0
[0x7a0:0x7bd]
---
Predecessors: [0x7be]
Successors: [0x7be]
---
0x7a0 JUMPDEST
0x7a1 DUP2
0x7a2 ADD
0x7a3 SWAP1
0x7a4 DUP1
0x7a5 DUP1
0x7a6 MLOAD
0x7a7 SWAP1
0x7a8 PUSH1 0x20
0x7aa ADD
0x7ab SWAP1
0x7ac SWAP3
0x7ad SWAP2
0x7ae SWAP1
0x7af POP
0x7b0 POP
0x7b1 POP
0x7b2 PUSH2 0x3e8
0x7b5 DUP1
0x7b6 DUP4
0x7b7 DUP2
0x7b8 ISZERO
0x7b9 ISZERO
0x7ba PUSH2 0x78d
0x7bd JUMPI
---
0x7a0: JUMPDEST 
0x7a2: V537 = ADD S1 S0
0x7a6: V538 = M[S1]
0x7a8: V539 = 0x20
0x7aa: V540 = ADD 0x20 S1
0x7b2: V541 = 0x3e8
0x7b8: V542 = ISZERO 0x3e8
0x7b9: V543 = ISZERO 0x0
0x7ba: V544 = 0x78d
0x7bd: THROWI 0x1
---
Entry stack: [S0]
Stack pops: 3
Stack additions: [S2, V538, 0x3e8, 0x3e8, S2]
Exit stack: [S1, V538, 0x3e8, 0x3e8, S1]

================================

Block 0x7be
[0x7be:0x7c9]
---
Predecessors: [0x7a0]
Successors: [0x7a0, 0x7ca]
---
0x7be INVALID
0x7bf JUMPDEST
0x7c0 DIV
0x7c1 MUL
0x7c2 DUP3
0x7c3 SUB
0x7c4 LT
0x7c5 ISZERO
0x7c6 PUSH2 0x7a0
0x7c9 JUMPI
---
0x7be: INVALID 
0x7bf: JUMPDEST 
0x7c0: V545 = DIV S0 S1
0x7c1: V546 = MUL V545 S2
0x7c3: V547 = SUB S4 V546
0x7c4: V548 = LT V547 S3
0x7c5: V549 = ISZERO V548
0x7c6: V550 = 0x7a0
0x7c9: JUMPI 0x7a0 V549
---
Entry stack: [S4, V538, 0x3e8, 0x3e8, S0]
Stack pops: 0
Stack additions: [S4]
Exit stack: []

================================

Block 0x7ca
[0x7ca:0x7d6]
---
Predecessors: [0x7be]
Successors: [0x7d7]
---
0x7ca PUSH1 0x1
0x7cc SWAP2
0x7cd POP
0x7ce PUSH2 0x7a5
0x7d1 JUMP
0x7d2 JUMPDEST
0x7d3 PUSH1 0x0
0x7d5 SWAP2
0x7d6 POP
---
0x7ca: V551 = 0x1
0x7ce: V552 = 0x7a5
0x7d1: THROW 
0x7d2: JUMPDEST 
0x7d3: V553 = 0x0
---
Entry stack: [S0]
Stack pops: 2
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0x7d7
[0x7d7:0x7ec]
---
Predecessors: [0x7ca]
Successors: [0x7ed]
---
0x7d7 JUMPDEST
0x7d8 POP
0x7d9 SWAP1
0x7da JUMP
0x7db JUMPDEST
0x7dc PUSH1 0x0
0x7de DUP2
0x7df DUP4
0x7e0 ADD
0x7e1 SWAP1
0x7e2 POP
0x7e3 DUP3
0x7e4 DUP2
0x7e5 LT
0x7e6 ISZERO
0x7e7 ISZERO
0x7e8 ISZERO
0x7e9 PUSH2 0x828
0x7ec JUMPI
---
0x7d7: JUMPDEST 
0x7da: JUMP S2
0x7db: JUMPDEST 
0x7dc: V554 = 0x0
0x7e0: V555 = ADD S1 S0
0x7e5: V556 = LT V555 S1
0x7e6: V557 = ISZERO V556
0x7e7: V558 = ISZERO V557
0x7e8: V559 = ISZERO V558
0x7e9: V560 = 0x828
0x7ec: THROWI V559
---
Entry stack: [0x0, S0]
Stack pops: 5
Stack additions: [V555, S0, S1]
Exit stack: []

================================

Block 0x7ed
[0x7ed:0x9a8]
---
Predecessors: [0x7d7]
Successors: [0x9a9]
---
0x7ed PUSH1 0x40
0x7ef MLOAD
0x7f0 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x811 DUP2
0x812 MSTORE
0x813 PUSH1 0x4
0x815 ADD
0x816 DUP1
0x817 DUP1
0x818 PUSH1 0x20
0x81a ADD
0x81b DUP3
0x81c DUP2
0x81d SUB
0x81e DUP3
0x81f MSTORE
0x820 PUSH1 0x13
0x822 DUP2
0x823 MSTORE
0x824 PUSH1 0x20
0x826 ADD
0x827 DUP1
0x828 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x849 DUP2
0x84a MSTORE
0x84b POP
0x84c PUSH1 0x20
0x84e ADD
0x84f SWAP2
0x850 POP
0x851 POP
0x852 PUSH1 0x40
0x854 MLOAD
0x855 DUP1
0x856 SWAP2
0x857 SUB
0x858 SWAP1
0x859 REVERT
0x85a JUMPDEST
0x85b DUP1
0x85c SWAP1
0x85d POP
0x85e SWAP3
0x85f SWAP2
0x860 POP
0x861 POP
0x862 JUMP
0x863 JUMPDEST
0x864 PUSH1 0x40
0x866 MLOAD
0x867 PUSH2 0x237
0x86a DUP1
0x86b PUSH2 0x842
0x86e DUP4
0x86f CODECOPY
0x870 ADD
0x871 SWAP1
0x872 JUMP
0x873 STOP
0x874 PUSH1 0x80
0x876 PUSH1 0x40
0x878 MSTORE
0x879 PUSH20 0xad3227eb47597b566ec138b3afd78cfea752de5
0x88e PUSH1 0x0
0x890 DUP1
0x891 PUSH2 0x100
0x894 EXP
0x895 DUP2
0x896 SLOAD
0x897 DUP2
0x898 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ad MUL
0x8ae NOT
0x8af AND
0x8b0 SWAP1
0x8b1 DUP4
0x8b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c7 AND
0x8c8 MUL
0x8c9 OR
0x8ca SWAP1
0x8cb SSTORE
0x8cc POP
0x8cd PUSH1 0x0
0x8cf DUP1
0x8d0 SWAP1
0x8d1 SLOAD
0x8d2 SWAP1
0x8d3 PUSH2 0x100
0x8d6 EXP
0x8d7 SWAP1
0x8d8 DIV
0x8d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ee AND
0x8ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x904 AND
0x905 PUSH4 0x98a0871d
0x90a PUSH8 0x16345785d8a0000
0x913 PUSH20 0xc6b453d5aa3e23ce169fd931b1301a03a3b573c5
0x928 PUSH1 0x2
0x92a PUSH1 0x40
0x92c MLOAD
0x92d DUP5
0x92e PUSH4 0xffffffff
0x933 AND
0x934 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x952 MUL
0x953 DUP2
0x954 MSTORE
0x955 PUSH1 0x4
0x957 ADD
0x958 DUP1
0x959 DUP4
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f AND
0x970 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x985 AND
0x986 DUP2
0x987 MSTORE
0x988 PUSH1 0x20
0x98a ADD
0x98b DUP3
0x98c DUP2
0x98d MSTORE
0x98e PUSH1 0x20
0x990 ADD
0x991 SWAP3
0x992 POP
0x993 POP
0x994 POP
0x995 PUSH1 0x0
0x997 PUSH1 0x40
0x999 MLOAD
0x99a DUP1
0x99b DUP4
0x99c SUB
0x99d DUP2
0x99e DUP6
0x99f DUP9
0x9a0 DUP1
0x9a1 EXTCODESIZE
0x9a2 ISZERO
0x9a3 DUP1
0x9a4 ISZERO
0x9a5 PUSH2 0x139
0x9a8 JUMPI
---
0x7ed: V561 = 0x40
0x7ef: V562 = M[0x40]
0x7f0: V563 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x812: M[V562] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x813: V564 = 0x4
0x815: V565 = ADD 0x4 V562
0x818: V566 = 0x20
0x81a: V567 = ADD 0x20 V565
0x81d: V568 = SUB V567 V565
0x81f: M[V565] = V568
0x820: V569 = 0x13
0x823: M[V567] = 0x13
0x824: V570 = 0x20
0x826: V571 = ADD 0x20 V567
0x828: V572 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x84a: M[V571] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x84c: V573 = 0x20
0x84e: V574 = ADD 0x20 V571
0x852: V575 = 0x40
0x854: V576 = M[0x40]
0x857: V577 = SUB V574 V576
0x859: REVERT V576 V577
0x85a: JUMPDEST 
0x862: JUMP S3
0x863: JUMPDEST 
0x864: V578 = 0x40
0x866: V579 = M[0x40]
0x867: V580 = 0x237
0x86b: V581 = 0x842
0x86f: CODECOPY V579 0x842 0x237
0x870: V582 = ADD 0x237 V579
0x872: JUMP S0
0x873: STOP 
0x874: V583 = 0x80
0x876: V584 = 0x40
0x878: M[0x40] = 0x80
0x879: V585 = 0xad3227eb47597b566ec138b3afd78cfea752de5
0x88e: V586 = 0x0
0x891: V587 = 0x100
0x894: V588 = EXP 0x100 0x0
0x896: V589 = S[0x0]
0x898: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ad: V591 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8ae: V592 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8af: V593 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V589
0x8b2: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c7: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xad3227eb47597b566ec138b3afd78cfea752de5
0x8c8: V596 = MUL 0xad3227eb47597b566ec138b3afd78cfea752de5 0x1
0x8c9: V597 = OR 0xad3227eb47597b566ec138b3afd78cfea752de5 V593
0x8cb: S[0x0] = V597
0x8cd: V598 = 0x0
0x8d1: V599 = S[0x0]
0x8d3: V600 = 0x100
0x8d6: V601 = EXP 0x100 0x0
0x8d8: V602 = DIV V599 0x1
0x8d9: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ee: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x8ef: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0x904: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x905: V607 = 0x98a0871d
0x90a: V608 = 0x16345785d8a0000
0x913: V609 = 0xc6b453d5aa3e23ce169fd931b1301a03a3b573c5
0x928: V610 = 0x2
0x92a: V611 = 0x40
0x92c: V612 = M[0x40]
0x92e: V613 = 0xffffffff
0x933: V614 = AND 0xffffffff 0x98a0871d
0x934: V615 = 0x100000000000000000000000000000000000000000000000000000000
0x952: V616 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x98a0871d
0x954: M[V612] = 0x98a0871d00000000000000000000000000000000000000000000000000000000
0x955: V617 = 0x4
0x957: V618 = ADD 0x4 V612
0x95a: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xc6b453d5aa3e23ce169fd931b1301a03a3b573c5
0x970: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x985: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xc6b453d5aa3e23ce169fd931b1301a03a3b573c5
0x987: M[V618] = 0xc6b453d5aa3e23ce169fd931b1301a03a3b573c5
0x988: V623 = 0x20
0x98a: V624 = ADD 0x20 V618
0x98d: M[V624] = 0x2
0x98e: V625 = 0x20
0x990: V626 = ADD 0x20 V624
0x995: V627 = 0x0
0x997: V628 = 0x40
0x999: V629 = M[0x40]
0x99c: V630 = SUB V626 V629
0x9a1: V631 = EXTCODESIZE V606
0x9a2: V632 = ISZERO V631
0x9a4: V633 = ISZERO V632
0x9a5: V634 = 0x139
0x9a8: THROWI V633
---
Entry stack: [S2, S1, V555]
Stack pops: 0
Stack additions: [S0, V582, V632, V606, 0x16345785d8a0000, V629, V630, V629, 0x0, V626, 0x16345785d8a0000, 0x98a0871d, V606]
Exit stack: []

================================

Block 0x9a9
[0x9a9:0x9b7]
---
Predecessors: [0x7ed]
Successors: [0x9b8]
---
0x9a9 PUSH1 0x0
0x9ab DUP1
0x9ac REVERT
0x9ad JUMPDEST
0x9ae POP
0x9af GAS
0x9b0 CALL
0x9b1 ISZERO
0x9b2 DUP1
0x9b3 ISZERO
0x9b4 PUSH2 0x14d
0x9b7 JUMPI
---
0x9a9: V635 = 0x0
0x9ac: REVERT 0x0 0x0
0x9ad: JUMPDEST 
0x9af: V636 = GAS
0x9b0: V637 = CALL V636 S1 S2 S3 S4 S5 S6
0x9b1: V638 = ISZERO V637
0x9b3: V639 = ISZERO V638
0x9b4: V640 = 0x14d
0x9b7: THROWI V639
---
Entry stack: [V606, 0x98a0871d, 0x16345785d8a0000, V626, 0x0, V629, V630, V629, 0x16345785d8a0000, V606, V632]
Stack pops: 0
Stack additions: [V638]
Exit stack: []

================================

Block 0x9b8
[0x9b8:0xa46]
---
Predecessors: [0x9a9]
Successors: [0xa47]
---
0x9b8 RETURNDATASIZE
0x9b9 PUSH1 0x0
0x9bb DUP1
0x9bc RETURNDATACOPY
0x9bd RETURNDATASIZE
0x9be PUSH1 0x0
0x9c0 REVERT
0x9c1 JUMPDEST
0x9c2 POP
0x9c3 POP
0x9c4 POP
0x9c5 POP
0x9c6 POP
0x9c7 PUSH1 0x0
0x9c9 DUP1
0x9ca SWAP1
0x9cb SLOAD
0x9cc SWAP1
0x9cd PUSH2 0x100
0x9d0 EXP
0x9d1 SWAP1
0x9d2 DIV
0x9d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e8 AND
0x9e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fe AND
0x9ff PUSH4 0x3ccfd60b
0xa04 PUSH1 0x40
0xa06 MLOAD
0xa07 DUP2
0xa08 PUSH4 0xffffffff
0xa0d AND
0xa0e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa2c MUL
0xa2d DUP2
0xa2e MSTORE
0xa2f PUSH1 0x4
0xa31 ADD
0xa32 PUSH1 0x0
0xa34 PUSH1 0x40
0xa36 MLOAD
0xa37 DUP1
0xa38 DUP4
0xa39 SUB
0xa3a DUP2
0xa3b PUSH1 0x0
0xa3d DUP8
0xa3e DUP1
0xa3f EXTCODESIZE
0xa40 ISZERO
0xa41 DUP1
0xa42 ISZERO
0xa43 PUSH2 0x1d7
0xa46 JUMPI
---
0x9b8: V641 = RETURNDATASIZE
0x9b9: V642 = 0x0
0x9bc: RETURNDATACOPY 0x0 0x0 V641
0x9bd: V643 = RETURNDATASIZE
0x9be: V644 = 0x0
0x9c0: REVERT 0x0 V643
0x9c1: JUMPDEST 
0x9c7: V645 = 0x0
0x9cb: V646 = S[0x0]
0x9cd: V647 = 0x100
0x9d0: V648 = EXP 0x100 0x0
0x9d2: V649 = DIV V646 0x1
0x9d3: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e8: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x9e9: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fe: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x9ff: V654 = 0x3ccfd60b
0xa04: V655 = 0x40
0xa06: V656 = M[0x40]
0xa08: V657 = 0xffffffff
0xa0d: V658 = AND 0xffffffff 0x3ccfd60b
0xa0e: V659 = 0x100000000000000000000000000000000000000000000000000000000
0xa2c: V660 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0xa2e: M[V656] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xa2f: V661 = 0x4
0xa31: V662 = ADD 0x4 V656
0xa32: V663 = 0x0
0xa34: V664 = 0x40
0xa36: V665 = M[0x40]
0xa39: V666 = SUB V662 V665
0xa3b: V667 = 0x0
0xa3f: V668 = EXTCODESIZE V653
0xa40: V669 = ISZERO V668
0xa42: V670 = ISZERO V669
0xa43: V671 = 0x1d7
0xa46: THROWI V670
---
Entry stack: [V638]
Stack pops: 0
Stack additions: [V669, V653, 0x0, V665, V666, V665, 0x0, V662, 0x3ccfd60b, V653]
Exit stack: []

================================

Block 0xa47
[0xa47:0xa55]
---
Predecessors: [0x9b8]
Successors: [0xa56]
---
0xa47 PUSH1 0x0
0xa49 DUP1
0xa4a REVERT
0xa4b JUMPDEST
0xa4c POP
0xa4d GAS
0xa4e CALL
0xa4f ISZERO
0xa50 DUP1
0xa51 ISZERO
0xa52 PUSH2 0x1eb
0xa55 JUMPI
---
0xa47: V672 = 0x0
0xa4a: REVERT 0x0 0x0
0xa4b: JUMPDEST 
0xa4d: V673 = GAS
0xa4e: V674 = CALL V673 S1 S2 S3 S4 S5 S6
0xa4f: V675 = ISZERO V674
0xa51: V676 = ISZERO V675
0xa52: V677 = 0x1eb
0xa55: THROWI V676
---
Entry stack: [V653, 0x3ccfd60b, V662, 0x0, V665, V666, V665, 0x0, V653, V669]
Stack pops: 0
Stack additions: [V675]
Exit stack: []

================================

Block 0xa56
[0xa56:0xa8c]
---
Predecessors: [0xa47]
Successors: [0xa8d]
---
0xa56 RETURNDATASIZE
0xa57 PUSH1 0x0
0xa59 DUP1
0xa5a RETURNDATACOPY
0xa5b RETURNDATASIZE
0xa5c PUSH1 0x0
0xa5e REVERT
0xa5f JUMPDEST
0xa60 POP
0xa61 POP
0xa62 POP
0xa63 POP
0xa64 PUSH8 0x16345785d8a0000
0xa6d ADDRESS
0xa6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa83 AND
0xa84 BALANCE
0xa85 LT
0xa86 ISZERO
0xa87 ISZERO
0xa88 ISZERO
0xa89 PUSH2 0x21d
0xa8c JUMPI
---
0xa56: V678 = RETURNDATASIZE
0xa57: V679 = 0x0
0xa5a: RETURNDATACOPY 0x0 0x0 V678
0xa5b: V680 = RETURNDATASIZE
0xa5c: V681 = 0x0
0xa5e: REVERT 0x0 V680
0xa5f: JUMPDEST 
0xa64: V682 = 0x16345785d8a0000
0xa6d: V683 = ADDRESS
0xa6e: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xa83: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0xa84: V686 = BALANCE V685
0xa85: V687 = LT V686 0x16345785d8a0000
0xa86: V688 = ISZERO V687
0xa87: V689 = ISZERO V688
0xa88: V690 = ISZERO V689
0xa89: V691 = 0x21d
0xa8c: THROWI V690
---
Entry stack: [V675]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa8d
[0xa8d:0xb2d]
---
Predecessors: [0xa56]
Successors: []
---
0xa8d PUSH1 0x0
0xa8f DUP1
0xa90 REVERT
0xa91 JUMPDEST
0xa92 CALLER
0xa93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa8 AND
0xaa9 SELFDESTRUCT
0xaaa STOP
0xaab LOG1
0xaac PUSH6 0x627a7a723058
0xab3 SHA3
0xab4 ISZERO
0xab5 MISSING 0x26
0xab6 LOG2
0xab7 PUSH21 0x7914624eead18bdb84819adffb5653408bfdaa4888
0xacd MISSING 0xe
0xace MSTORE
0xacf MISSING 0x2d
0xad0 MISSING 0xc7
0xad1 PUSH8 0x1bee002973000000
0xada STOP
0xadb STOP
0xadc STOP
0xadd STOP
0xade STOP
0xadf STOP
0xae0 STOP
0xae1 STOP
0xae2 STOP
0xae3 STOP
0xae4 STOP
0xae5 STOP
0xae6 STOP
0xae7 STOP
0xae8 STOP
0xae9 STOP
0xaea STOP
0xaeb ADDRESS
0xaec EQ
0xaed PUSH1 0x80
0xaef PUSH1 0x40
0xaf1 MSTORE
0xaf2 PUSH1 0x0
0xaf4 DUP1
0xaf5 REVERT
0xaf6 STOP
0xaf7 LOG1
0xaf8 PUSH6 0x627a7a723058
0xaff SHA3
0xb00 MISSING 0xb5
0xb01 BALANCE
0xb02 RETURNDATACOPY
0xb03 MISSING 0xe6
0xb04 SWAP13
0xb05 MISSING 0x22
0xb06 MISSING 0xf6
0xb07 MISSING 0xfc
0xb08 BYTE
0xb09 CALLVALUE
0xb0a BALANCE
0xb0b RETURN
0xb0c MISSING 0xc8
0xb0d ADD
0xb0e EXTCODEHASH
0xb0f MISSING 0xdd
0xb10 MISSING 0xc4
0xb11 JUMP
0xb12 OR
0xb13 MISSING 0xcc
0xb14 SWAP3
0xb15 SUB
0xb16 PUSH23 0xa1624275e01522df480029
---
0xa8d: V692 = 0x0
0xa90: REVERT 0x0 0x0
0xa91: JUMPDEST 
0xa92: V693 = CALLER
0xa93: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa8: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0xaa9: SELFDESTRUCT V695
0xaaa: STOP 
0xaab: LOG S0 S1 S2
0xaac: V696 = 0x627a7a723058
0xab3: V697 = SHA3 0x627a7a723058 S3
0xab4: V698 = ISZERO V697
0xab5: MISSING 0x26
0xab6: LOG S0 S1 S2 S3
0xab7: V699 = 0x7914624eead18bdb84819adffb5653408bfdaa4888
0xacd: MISSING 0xe
0xace: M[S0] = S1
0xacf: MISSING 0x2d
0xad0: MISSING 0xc7
0xad1: V700 = 0x1bee002973000000
0xada: STOP 
0xadb: STOP 
0xadc: STOP 
0xadd: STOP 
0xade: STOP 
0xadf: STOP 
0xae0: STOP 
0xae1: STOP 
0xae2: STOP 
0xae3: STOP 
0xae4: STOP 
0xae5: STOP 
0xae6: STOP 
0xae7: STOP 
0xae8: STOP 
0xae9: STOP 
0xaea: STOP 
0xaeb: V701 = ADDRESS
0xaec: V702 = EQ V701 S0
0xaed: V703 = 0x80
0xaef: V704 = 0x40
0xaf1: M[0x40] = 0x80
0xaf2: V705 = 0x0
0xaf5: REVERT 0x0 0x0
0xaf6: STOP 
0xaf7: LOG S0 S1 S2
0xaf8: V706 = 0x627a7a723058
0xaff: V707 = SHA3 0x627a7a723058 S3
0xb00: MISSING 0xb5
0xb01: V708 = BALANCE S0
0xb02: RETURNDATACOPY V708 S1 S2
0xb03: MISSING 0xe6
0xb05: MISSING 0x22
0xb06: MISSING 0xf6
0xb07: MISSING 0xfc
0xb08: V709 = BYTE S0 S1
0xb09: V710 = CALLVALUE
0xb0a: V711 = BALANCE V710
0xb0b: RETURN V711 V709
0xb0c: MISSING 0xc8
0xb0d: V712 = ADD S0 S1
0xb0e: V713 = EXTCODEHASH V712
0xb0f: MISSING 0xdd
0xb10: MISSING 0xc4
0xb11: JUMP S0
0xb12: V714 = OR S0 S1
0xb13: MISSING 0xcc
0xb15: V715 = SUB S3 S1
0xb16: V716 = 0xa1624275e01522df480029
---
Entry stack: []
Stack pops: 0
Stack additions: [V698, 0x7914624eead18bdb84819adffb5653408bfdaa4888, 0x1bee002973000000, V702, V707, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V713, V714, 0xa1624275e01522df480029, V715, S2, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x9e5faafc
Entry block: 0x94
Exit block: 0x79c
Body: 0x94, 0x9e, 0xcd, 0x124, 0x13b, 0x1d9, 0x26d, 0x295, 0x324, 0x333, 0x34e, 0x36c, 0x37f, 0x3c0, 0x414, 0x438, 0x46c, 0x4eb, 0x4f6, 0x549, 0x5be, 0x5c9, 0x61c, 0x698, 0x6a3, 0x772, 0x781, 0x79c

Function 1:
Public fallback function
Entry block: 0x94
Exit block: 0x94
Body: 0x94

