Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x77]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1d7315cc
0x3c EQ
0x3d PUSH2 0x77
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1d7315cc
0x3c: V13 = EQ 0x1d7315cc V11
0x3d: V14 = 0x77
0x40: JUMPI 0x77 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa0]
---
0x41 DUP1
0x42 PUSH4 0x57277b92
0x47 EQ
0x48 PUSH2 0xa0
0x4b JUMPI
---
0x42: V15 = 0x57277b92
0x47: V16 = EQ 0x57277b92 V11
0x48: V17 = 0xa0
0x4b: JUMPI 0xa0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xaa]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0xaa
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0xaa
0x56: JUMPI 0xaa V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xff]
---
0x57 DUP1
0x58 PUSH4 0x926aa0a8
0x5d EQ
0x5e PUSH2 0xff
0x61 JUMPI
---
0x58: V21 = 0x926aa0a8
0x5d: V22 = EQ 0x926aa0a8 V11
0x5e: V23 = 0xff
0x61: JUMPI 0xff V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x138]
---
0x62 DUP1
0x63 PUSH4 0xcb05b93e
0x68 EQ
0x69 PUSH2 0x138
0x6c JUMPI
---
0x63: V24 = 0xcb05b93e
0x68: V25 = EQ 0xcb05b93e V11
0x69: V26 = 0x138
0x6c: JUMPI 0x138 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x74]
---
Predecessors: [0x0, 0x62]
Successors: [0x14d]
---
0x6d JUMPDEST
0x6e PUSH2 0x75
0x71 PUSH2 0x14d
0x74 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x75
0x71: V28 = 0x14d
0x74: JUMP 0x14d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V11, 0x75]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x14d]
Successors: []
---
0x75 JUMPDEST
0x76 STOP
---
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x77
[0x77:0x7d]
---
Predecessors: [0xd]
Successors: [0x7e, 0x82]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x77: JUMPDEST 
0x78: V29 = CALLVALUE
0x79: V30 = ISZERO V29
0x7a: V31 = 0x82
0x7d: JUMPI 0x82 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x77]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V32 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0x77]
Successors: [0x15f]
---
0x82 JUMPDEST
0x83 PUSH2 0x8a
0x86 PUSH2 0x15f
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V33 = 0x8a
0x86: V34 = 0x15f
0x89: JUMP 0x15f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V11, 0x8a]

================================

Block 0x8a
[0x8a:0x9f]
---
Predecessors: [0x15f]
Successors: []
---
0x8a JUMPDEST
0x8b PUSH1 0x40
0x8d MLOAD
0x8e DUP1
0x8f DUP3
0x90 DUP2
0x91 MSTORE
0x92 PUSH1 0x20
0x94 ADD
0x95 SWAP2
0x96 POP
0x97 POP
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f RETURN
---
0x8a: JUMPDEST 
0x8b: V35 = 0x40
0x8d: V36 = M[0x40]
0x91: M[V36] = V85
0x92: V37 = 0x20
0x94: V38 = ADD 0x20 V36
0x98: V39 = 0x40
0x9a: V40 = M[0x40]
0x9d: V41 = SUB V38 V40
0x9f: RETURN V40 V41
---
Entry stack: [V11, 0x8a, V85]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8a]

================================

Block 0xa0
[0xa0:0xa7]
---
Predecessors: [0x41]
Successors: [0x14d]
---
0xa0 JUMPDEST
0xa1 PUSH2 0xa8
0xa4 PUSH2 0x14d
0xa7 JUMP
---
0xa0: JUMPDEST 
0xa1: V42 = 0xa8
0xa4: V43 = 0x14d
0xa7: JUMP 0x14d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x14d]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xb0]
---
Predecessors: [0x4c]
Successors: [0xb1, 0xb5]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xaa: JUMPDEST 
0xab: V44 = CALLVALUE
0xac: V45 = ISZERO V44
0xad: V46 = 0xb5
0xb0: JUMPI 0xb5 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xaa]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V47 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0xaa]
Successors: [0x165]
---
0xb5 JUMPDEST
0xb6 PUSH2 0xbd
0xb9 PUSH2 0x165
0xbc JUMP
---
0xb5: JUMPDEST 
0xb6: V48 = 0xbd
0xb9: V49 = 0x165
0xbc: JUMP 0x165
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0xbd
[0xbd:0xfe]
---
Predecessors: [0x165]
Successors: []
---
0xbd JUMPDEST
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 DUP1
0xc2 DUP3
0xc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8 AND
0xd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee AND
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP2
0xf5 POP
0xf6 POP
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa DUP1
0xfb SWAP2
0xfc SUB
0xfd SWAP1
0xfe RETURN
---
0xbd: JUMPDEST 
0xbe: V50 = 0x40
0xc0: V51 = M[0x40]
0xc3: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0xd9: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xee: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xf0: M[V51] = V55
0xf1: V56 = 0x20
0xf3: V57 = ADD 0x20 V51
0xf7: V58 = 0x40
0xf9: V59 = M[0x40]
0xfc: V60 = SUB V57 V59
0xfe: RETURN V59 V60
---
Entry stack: [V11, 0xbd, V92]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x57]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V61 = CALLVALUE
0x101: V62 = ISZERO V61
0x102: V63 = 0x10a
0x105: JUMPI 0x10a V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V64 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10a
[0x10a:0x135]
---
Predecessors: [0xff]
Successors: [0x18a]
---
0x10a JUMPDEST
0x10b PUSH2 0x136
0x10e PUSH1 0x4
0x110 DUP1
0x111 DUP1
0x112 CALLDATALOAD
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 SWAP1
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP1
0x12e SWAP2
0x12f SWAP1
0x130 POP
0x131 POP
0x132 PUSH2 0x18a
0x135 JUMP
---
0x10a: JUMPDEST 
0x10b: V65 = 0x136
0x10e: V66 = 0x4
0x112: V67 = CALLDATALOAD 0x4
0x113: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x12a: V70 = 0x20
0x12c: V71 = ADD 0x20 0x4
0x132: V72 = 0x18a
0x135: JUMP 0x18a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x136, V69]
Exit stack: [V11, 0x136, V69]

================================

Block 0x136
[0x136:0x137]
---
Predecessors: [0x244]
Successors: []
---
0x136 JUMPDEST
0x137 STOP
---
0x136: JUMPDEST 
0x137: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0x62]
Successors: [0x13f, 0x143]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x138: JUMPDEST 
0x139: V73 = CALLVALUE
0x13a: V74 = ISZERO V73
0x13b: V75 = 0x143
0x13e: JUMPI 0x143 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x138]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V76 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x138]
Successors: [0x247]
---
0x143 JUMPDEST
0x144 PUSH2 0x14b
0x147 PUSH2 0x247
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V77 = 0x14b
0x147: V78 = 0x247
0x14a: JUMP 0x247
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x14b
[0x14b:0x14c]
---
Predecessors: [0x322]
Successors: []
---
0x14b JUMPDEST
0x14c STOP
---
0x14b: JUMPDEST 
0x14c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14d
[0x14d:0x15e]
---
Predecessors: [0x6d, 0xa0]
Successors: [0x75, 0xa8]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f PUSH1 0x1
0x151 PUSH1 0x0
0x153 DUP3
0x154 DUP3
0x155 SLOAD
0x156 ADD
0x157 SWAP3
0x158 POP
0x159 POP
0x15a DUP2
0x15b SWAP1
0x15c SSTORE
0x15d POP
0x15e JUMP
---
0x14d: JUMPDEST 
0x14e: V79 = CALLVALUE
0x14f: V80 = 0x1
0x151: V81 = 0x0
0x155: V82 = S[0x1]
0x156: V83 = ADD V82 V79
0x15c: S[0x1] = V83
0x15e: JUMP {0x75, 0xa8}
---
Entry stack: [V11, {0x75, 0xa8}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x164]
---
Predecessors: [0x82]
Successors: [0x8a]
---
0x15f JUMPDEST
0x160 PUSH1 0x1
0x162 SLOAD
0x163 DUP2
0x164 JUMP
---
0x15f: JUMPDEST 
0x160: V84 = 0x1
0x162: V85 = S[0x1]
0x164: JUMP 0x8a
---
Entry stack: [V11, 0x8a]
Stack pops: 1
Stack additions: [S0, V85]
Exit stack: [V11, 0x8a, V85]

================================

Block 0x165
[0x165:0x189]
---
Predecessors: [0xb5]
Successors: [0xbd]
---
0x165 JUMPDEST
0x166 PUSH1 0x0
0x168 DUP1
0x169 SWAP1
0x16a SLOAD
0x16b SWAP1
0x16c PUSH2 0x100
0x16f EXP
0x170 SWAP1
0x171 DIV
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 DUP2
0x189 JUMP
---
0x165: JUMPDEST 
0x166: V86 = 0x0
0x16a: V87 = S[0x0]
0x16c: V88 = 0x100
0x16f: V89 = EXP 0x100 0x0
0x171: V90 = DIV V87 0x1
0x172: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x189: JUMP 0xbd
---
Entry stack: [V11, 0xbd]
Stack pops: 1
Stack additions: [S0, V92]
Exit stack: [V11, 0xbd, V92]

================================

Block 0x18a
[0x18a:0x1e0]
---
Predecessors: [0x10a]
Successors: [0x1e1, 0x1e5]
---
0x18a JUMPDEST
0x18b PUSH1 0x0
0x18d DUP1
0x18e SWAP1
0x18f SLOAD
0x190 SWAP1
0x191 PUSH2 0x100
0x194 EXP
0x195 SWAP1
0x196 DIV
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 CALLER
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da EQ
0x1db ISZERO
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x18a: JUMPDEST 
0x18b: V93 = 0x0
0x18f: V94 = S[0x0]
0x191: V95 = 0x100
0x194: V96 = EXP 0x100 0x0
0x196: V97 = DIV V94 0x1
0x197: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1ad: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1c3: V102 = CALLER
0x1c4: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1da: V105 = EQ V104 V101
0x1db: V106 = ISZERO V105
0x1dc: V107 = ISZERO V106
0x1dd: V108 = 0x1e5
0x1e0: JUMPI 0x1e5 V107
---
Entry stack: [V11, 0x136, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V69]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x18a]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V109 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V69]

================================

Block 0x1e5
[0x1e5:0x23f]
---
Predecessors: [0x18a]
Successors: [0x240, 0x244]
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x0
0x1e8 PUSH1 0x1
0x1ea DUP2
0x1eb SWAP1
0x1ec SSTORE
0x1ed POP
0x1ee DUP1
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 PUSH2 0x8fc
0x208 ADDRESS
0x209 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21e AND
0x21f BALANCE
0x220 SWAP1
0x221 DUP2
0x222 ISZERO
0x223 MUL
0x224 SWAP1
0x225 PUSH1 0x40
0x227 MLOAD
0x228 PUSH1 0x0
0x22a PUSH1 0x40
0x22c MLOAD
0x22d DUP1
0x22e DUP4
0x22f SUB
0x230 DUP2
0x231 DUP6
0x232 DUP9
0x233 DUP9
0x234 CALL
0x235 SWAP4
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V110 = 0x0
0x1e8: V111 = 0x1
0x1ec: S[0x1] = 0x0
0x1ef: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x205: V114 = 0x8fc
0x208: V115 = ADDRESS
0x209: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x21f: V118 = BALANCE V117
0x222: V119 = ISZERO V118
0x223: V120 = MUL V119 0x8fc
0x225: V121 = 0x40
0x227: V122 = M[0x40]
0x228: V123 = 0x0
0x22a: V124 = 0x40
0x22c: V125 = M[0x40]
0x22f: V126 = SUB V122 V125
0x234: V127 = CALL V120 V113 V118 V125 V126 V125 0x0
0x23a: V128 = ISZERO V127
0x23b: V129 = ISZERO V128
0x23c: V130 = 0x244
0x23f: JUMPI 0x244 V129
---
Entry stack: [V11, 0x136, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V69]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x1e5]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V131 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V69]

================================

Block 0x244
[0x244:0x246]
---
Predecessors: [0x1e5]
Successors: [0x136]
---
0x244 JUMPDEST
0x245 POP
0x246 JUMP
---
0x244: JUMPDEST 
0x246: JUMP 0x136
---
Entry stack: [V11, 0x136, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x247
[0x247:0x29d]
---
Predecessors: [0x143]
Successors: [0x29e, 0x2a2]
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a DUP1
0x24b SWAP1
0x24c SLOAD
0x24d SWAP1
0x24e PUSH2 0x100
0x251 EXP
0x252 SWAP1
0x253 DIV
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 CALLER
0x281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x296 AND
0x297 EQ
0x298 ISZERO
0x299 ISZERO
0x29a PUSH2 0x2a2
0x29d JUMPI
---
0x247: JUMPDEST 
0x248: V132 = 0x0
0x24c: V133 = S[0x0]
0x24e: V134 = 0x100
0x251: V135 = EXP 0x100 0x0
0x253: V136 = DIV V133 0x1
0x254: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x26a: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x280: V141 = CALLER
0x281: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x296: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x297: V144 = EQ V143 V140
0x298: V145 = ISZERO V144
0x299: V146 = ISZERO V145
0x29a: V147 = 0x2a2
0x29d: JUMPI 0x2a2 V146
---
Entry stack: [V11, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x247]
Successors: []
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
---
0x29e: V148 = 0x0
0x2a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x2a2
[0x2a2:0x31d]
---
Predecessors: [0x247]
Successors: [0x31e, 0x322]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x0
0x2a5 PUSH1 0x1
0x2a7 DUP2
0x2a8 SWAP1
0x2a9 SSTORE
0x2aa POP
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae SWAP1
0x2af SLOAD
0x2b0 SWAP1
0x2b1 PUSH2 0x100
0x2b4 EXP
0x2b5 SWAP1
0x2b6 DIV
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc AND
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 PUSH2 0x8fc
0x2e6 ADDRESS
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd BALANCE
0x2fe SWAP1
0x2ff DUP2
0x300 ISZERO
0x301 MUL
0x302 SWAP1
0x303 PUSH1 0x40
0x305 MLOAD
0x306 PUSH1 0x0
0x308 PUSH1 0x40
0x30a MLOAD
0x30b DUP1
0x30c DUP4
0x30d SUB
0x30e DUP2
0x30f DUP6
0x310 DUP9
0x311 DUP9
0x312 CALL
0x313 SWAP4
0x314 POP
0x315 POP
0x316 POP
0x317 POP
0x318 ISZERO
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V149 = 0x0
0x2a5: V150 = 0x1
0x2a9: S[0x1] = 0x0
0x2ab: V151 = 0x0
0x2af: V152 = S[0x0]
0x2b1: V153 = 0x100
0x2b4: V154 = EXP 0x100 0x0
0x2b6: V155 = DIV V152 0x1
0x2b7: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2cd: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2e3: V160 = 0x8fc
0x2e6: V161 = ADDRESS
0x2e7: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2fd: V164 = BALANCE V163
0x300: V165 = ISZERO V164
0x301: V166 = MUL V165 0x8fc
0x303: V167 = 0x40
0x305: V168 = M[0x40]
0x306: V169 = 0x0
0x308: V170 = 0x40
0x30a: V171 = M[0x40]
0x30d: V172 = SUB V168 V171
0x312: V173 = CALL V166 V159 V164 V171 V172 V171 0x0
0x318: V174 = ISZERO V173
0x319: V175 = ISZERO V174
0x31a: V176 = 0x322
0x31d: JUMPI 0x322 V175
---
Entry stack: [V11, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x2a2]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V177 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x322
[0x322:0x323]
---
Predecessors: [0x2a2]
Successors: [0x14b]
---
0x322 JUMPDEST
0x323 JUMP
---
0x322: JUMPDEST 
0x323: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x324
[0x324:0x358]
---
Predecessors: []
Successors: []
---
0x324 STOP
0x325 LOG1
0x326 PUSH6 0x627a7a723058
0x32d SHA3
0x32e PUSH11 0x827ad7d4f40e217e12e0a5
0x33a MULMOD
0x33b MSTORE
0x33c PUSH3 0x9cd27a
0x340 JUMP
0x341 MISSING 0xc3
0x342 MISSING 0xc
0x343 PUSH21 0xf169b5bc2ce097d4f3dd0029
---
0x324: STOP 
0x325: LOG S0 S1 S2
0x326: V178 = 0x627a7a723058
0x32d: V179 = SHA3 0x627a7a723058 S3
0x32e: V180 = 0x827ad7d4f40e217e12e0a5
0x33a: V181 = MULMOD 0x827ad7d4f40e217e12e0a5 V179 S4
0x33b: M[V181] = S5
0x33c: V182 = 0x9cd27a
0x340: THROW 
0x341: MISSING 0xc3
0x342: MISSING 0xc
0x343: V183 = 0xf169b5bc2ce097d4f3dd0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf169b5bc2ce097d4f3dd0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1d7315cc
Entry block: 0x77
Exit block: 0x8a
Body: 0x77, 0x7e, 0x82, 0x8a, 0x15f

Function 1:
Public function signature: 0x57277b92
Entry block: 0xa0
Exit block: 0xa8
Body: 0xa0, 0xa8

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xaa
Exit block: 0xbd
Body: 0xaa, 0xb1, 0xb5, 0xbd, 0x165

Function 3:
Public function signature: 0x926aa0a8
Entry block: 0xff
Exit block: 0x136
Body: 0xff, 0x106, 0x10a, 0x136, 0x18a, 0x1e1, 0x1e5, 0x240, 0x244

Function 4:
Public function signature: 0xcb05b93e
Entry block: 0x138
Exit block: 0x14b
Body: 0x138, 0x13f, 0x143, 0x14b, 0x247, 0x29e, 0x2a2, 0x31e, 0x322

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x75
Body: 0x6d, 0x75

