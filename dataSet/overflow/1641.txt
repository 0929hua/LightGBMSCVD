Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x715018a6
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x715018a6
0x3c: V13 = EQ 0x715018a6 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x73]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x73
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x73
0x4b: JUMPI 0x73 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xca]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0xca
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0xca
0x56: JUMPI 0xca V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x10d]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x10d
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x10d
0x70: JUMP 0x10d
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: [0x168]
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0x41]
Successors: [0x7b, 0x7f]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x73: JUMPDEST 
0x74: V28 = CALLVALUE
0x76: V29 = ISZERO V28
0x77: V30 = 0x7f
0x7a: JUMPI 0x7f V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x73]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V31 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7f
[0x7f:0x87]
---
Predecessors: [0x73]
Successors: [0x20f]
---
0x7f JUMPDEST
0x80 POP
0x81 PUSH2 0x88
0x84 PUSH2 0x20f
0x87 JUMP
---
0x7f: JUMPDEST 
0x81: V32 = 0x88
0x84: V33 = 0x20f
0x87: JUMP 0x20f
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x88]
Exit stack: [V11, 0x88]

================================

Block 0x88
[0x88:0xc9]
---
Predecessors: [0x20f]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d DUP3
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0x88: JUMPDEST 
0x89: V34 = 0x40
0x8b: V35 = M[0x40]
0x8e: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0xa4: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbb: M[V35] = V39
0xbc: V40 = 0x20
0xbe: V41 = ADD 0x20 V35
0xc2: V42 = 0x40
0xc4: V43 = M[0x40]
0xc7: V44 = SUB V41 V43
0xc9: RETURN V43 V44
---
Entry stack: [V11, 0x88, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x88]

================================

Block 0xca
[0xca:0xd1]
---
Predecessors: [0x4c]
Successors: [0xd2, 0xd6]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc DUP1
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xca: JUMPDEST 
0xcb: V45 = CALLVALUE
0xcd: V46 = ISZERO V45
0xce: V47 = 0xd6
0xd1: JUMPI 0xd6 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xca]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V48 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xd6
[0xd6:0x10a]
---
Predecessors: [0xca]
Successors: [0x234]
---
0xd6 JUMPDEST
0xd7 POP
0xd8 PUSH2 0x10b
0xdb PUSH1 0x4
0xdd DUP1
0xde CALLDATASIZE
0xdf SUB
0xe0 DUP2
0xe1 ADD
0xe2 SWAP1
0xe3 DUP1
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 SWAP3
0x102 SWAP2
0x103 SWAP1
0x104 POP
0x105 POP
0x106 POP
0x107 PUSH2 0x234
0x10a JUMP
---
0xd6: JUMPDEST 
0xd8: V49 = 0x10b
0xdb: V50 = 0x4
0xde: V51 = CALLDATASIZE
0xdf: V52 = SUB V51 0x4
0xe1: V53 = ADD 0x4 V52
0xe5: V54 = CALLDATALOAD 0x4
0xe6: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xfd: V57 = 0x20
0xff: V58 = ADD 0x20 0x4
0x107: V59 = 0x234
0x10a: JUMP 0x234
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0x10b, V56]
Exit stack: [V11, 0x10b, V56]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x298]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x163]
---
Predecessors: [0x68]
Successors: [0x164, 0x168]
---
0x10d JUMPDEST
0x10e PUSH1 0x0
0x110 DUP1
0x111 SWAP1
0x112 SLOAD
0x113 SWAP1
0x114 PUSH2 0x100
0x117 EXP
0x118 SWAP1
0x119 DIV
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 CALLER
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d EQ
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x10d: JUMPDEST 
0x10e: V60 = 0x0
0x112: V61 = S[0x0]
0x114: V62 = 0x100
0x117: V63 = EXP 0x100 0x0
0x119: V64 = DIV V61 0x1
0x11a: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x130: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x146: V69 = CALLER
0x147: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x15d: V72 = EQ V71 V68
0x15e: V73 = ISZERO V72
0x15f: V74 = ISZERO V73
0x160: V75 = 0x168
0x163: JUMPI 0x168 V74
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x10d]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V76 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x168
[0x168:0x20e]
---
Predecessors: [0x10d]
Successors: [0x71]
---
0x168 JUMPDEST
0x169 PUSH1 0x0
0x16b DUP1
0x16c SWAP1
0x16d SLOAD
0x16e SWAP1
0x16f PUSH2 0x100
0x172 EXP
0x173 SWAP1
0x174 DIV
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc LOG2
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 PUSH1 0x0
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 DUP2
0x1d7 SLOAD
0x1d8 DUP2
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee MUL
0x1ef NOT
0x1f0 AND
0x1f1 SWAP1
0x1f2 DUP4
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 MUL
0x20a OR
0x20b SWAP1
0x20c SSTORE
0x20d POP
0x20e JUMP
---
0x168: JUMPDEST 
0x169: V77 = 0x0
0x16d: V78 = S[0x0]
0x16f: V79 = 0x100
0x172: V80 = EXP 0x100 0x0
0x174: V81 = DIV V78 0x1
0x175: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x18b: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a1: V86 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2: V87 = 0x40
0x1c4: V88 = M[0x40]
0x1c5: V89 = 0x40
0x1c7: V90 = M[0x40]
0x1ca: V91 = SUB V88 V90
0x1cc: LOG V90 V91 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V85
0x1cd: V92 = 0x0
0x1d0: V93 = 0x0
0x1d2: V94 = 0x100
0x1d5: V95 = EXP 0x100 0x0
0x1d7: V96 = S[0x0]
0x1d9: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V98 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1ef: V99 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V100 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V96
0x1f3: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x209: V103 = MUL 0x0 0x1
0x20a: V104 = OR 0x0 V100
0x20c: S[0x0] = V104
0x20e: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x233]
---
Predecessors: [0x7f]
Successors: [0x88]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 SWAP1
0x214 SLOAD
0x215 SWAP1
0x216 PUSH2 0x100
0x219 EXP
0x21a SWAP1
0x21b DIV
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 DUP2
0x233 JUMP
---
0x20f: JUMPDEST 
0x210: V105 = 0x0
0x214: V106 = S[0x0]
0x216: V107 = 0x100
0x219: V108 = EXP 0x100 0x0
0x21b: V109 = DIV V106 0x1
0x21c: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x233: JUMP 0x88
---
Entry stack: [V11, 0x88]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [V11, 0x88, V111]

================================

Block 0x234
[0x234:0x28a]
---
Predecessors: [0xd6]
Successors: [0x28b, 0x28f]
---
0x234 JUMPDEST
0x235 PUSH1 0x0
0x237 DUP1
0x238 SWAP1
0x239 SLOAD
0x23a SWAP1
0x23b PUSH2 0x100
0x23e EXP
0x23f SWAP1
0x240 DIV
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d CALLER
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 EQ
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x234: JUMPDEST 
0x235: V112 = 0x0
0x239: V113 = S[0x0]
0x23b: V114 = 0x100
0x23e: V115 = EXP 0x100 0x0
0x240: V116 = DIV V113 0x1
0x241: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x257: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x26d: V121 = CALLER
0x26e: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x284: V124 = EQ V123 V120
0x285: V125 = ISZERO V124
0x286: V126 = ISZERO V125
0x287: V127 = 0x28f
0x28a: JUMPI 0x28f V126
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x234]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V128 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28f
[0x28f:0x297]
---
Predecessors: [0x234]
Successors: [0x29b]
---
0x28f JUMPDEST
0x290 PUSH2 0x298
0x293 DUP2
0x294 PUSH2 0x29b
0x297 JUMP
---
0x28f: JUMPDEST 
0x290: V129 = 0x298
0x294: V130 = 0x29b
0x297: JUMP 0x29b
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 1
Stack additions: [S0, 0x298, S0]
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x298
[0x298:0x29a]
---
Predecessors: [0x2d7]
Successors: [0x10b]
---
0x298 JUMPDEST
0x299 POP
0x29a JUMP
---
0x298: JUMPDEST 
0x29a: JUMP 0x10b
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x29b
[0x29b:0x2d2]
---
Predecessors: [0x28f]
Successors: [0x2d3, 0x2d7]
---
0x29b JUMPDEST
0x29c PUSH1 0x0
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 DUP2
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb EQ
0x2cc ISZERO
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x29b: JUMPDEST 
0x29c: V131 = 0x0
0x29e: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x2b5: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2cb: V136 = EQ V135 0x0
0x2cc: V137 = ISZERO V136
0x2cd: V138 = ISZERO V137
0x2ce: V139 = ISZERO V138
0x2cf: V140 = 0x2d7
0x2d2: JUMPI 0x2d7 V139
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x29b]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V141 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56, 0x298, V56]

================================

Block 0x2d7
[0x2d7:0x394]
---
Predecessors: [0x29b]
Successors: [0x298]
---
0x2d7 JUMPDEST
0x2d8 DUP1
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 SWAP1
0x2f3 SLOAD
0x2f4 SWAP1
0x2f5 PUSH2 0x100
0x2f8 EXP
0x2f9 SWAP1
0x2fa DIV
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x348 PUSH1 0x40
0x34a MLOAD
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 LOG3
0x353 DUP1
0x354 PUSH1 0x0
0x356 DUP1
0x357 PUSH2 0x100
0x35a EXP
0x35b DUP2
0x35c SLOAD
0x35d DUP2
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 MUL
0x374 NOT
0x375 AND
0x376 SWAP1
0x377 DUP4
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d AND
0x38e MUL
0x38f OR
0x390 SWAP1
0x391 SSTORE
0x392 POP
0x393 POP
0x394 JUMP
---
0x2d7: JUMPDEST 
0x2d9: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2ef: V144 = 0x0
0x2f3: V145 = S[0x0]
0x2f5: V146 = 0x100
0x2f8: V147 = EXP 0x100 0x0
0x2fa: V148 = DIV V145 0x1
0x2fb: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x311: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x327: V153 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x348: V154 = 0x40
0x34a: V155 = M[0x40]
0x34b: V156 = 0x40
0x34d: V157 = M[0x40]
0x350: V158 = SUB V155 V157
0x352: LOG V157 V158 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V152 V143
0x354: V159 = 0x0
0x357: V160 = 0x100
0x35a: V161 = EXP 0x100 0x0
0x35c: V162 = S[0x0]
0x35e: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V164 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x374: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x375: V166 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V162
0x378: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x38e: V169 = MUL V168 0x1
0x38f: V170 = OR V169 V166
0x391: S[0x0] = V170
0x394: JUMP 0x298
---
Entry stack: [V11, 0x10b, V56, 0x298, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x395
[0x395:0x401]
---
Predecessors: []
Successors: [0x402]
---
0x395 STOP
0x396 LOG1
0x397 PUSH6 0x627a7a723058
0x39e SHA3
0x39f MISSING 0xc
0x3a0 SMOD
0x3a1 MISSING 0xde
0x3a2 PUSH13 0x765605771e14312a8198c82f63
0x3b0 SWAP9
0x3b1 LOG1
0x3b2 CREATE2
0x3b3 MISSING 0xca
0x3b4 PUSH25 0xb7adc4d73fe6eb07b2b500296080604052600436106100a457
0x3ce PUSH1 0x0
0x3d0 CALLDATALOAD
0x3d1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3ef SWAP1
0x3f0 DIV
0x3f1 PUSH4 0xffffffff
0x3f6 AND
0x3f7 DUP1
0x3f8 PUSH4 0x56e4b68b
0x3fd EQ
0x3fe PUSH2 0xa9
0x401 JUMPI
---
0x395: STOP 
0x396: LOG S0 S1 S2
0x397: V171 = 0x627a7a723058
0x39e: V172 = SHA3 0x627a7a723058 S3
0x39f: MISSING 0xc
0x3a0: V173 = SMOD S0 S1
0x3a1: MISSING 0xde
0x3a2: V174 = 0x765605771e14312a8198c82f63
0x3b1: LOG S8 S0 S1
0x3b2: V175 = CREATE2 S2 S3 S4 S5
0x3b3: MISSING 0xca
0x3b4: V176 = 0xb7adc4d73fe6eb07b2b500296080604052600436106100a457
0x3ce: V177 = 0x0
0x3d0: V178 = CALLDATALOAD 0x0
0x3d1: V179 = 0x100000000000000000000000000000000000000000000000000000000
0x3f0: V180 = DIV V178 0x100000000000000000000000000000000000000000000000000000000
0x3f1: V181 = 0xffffffff
0x3f6: V182 = AND 0xffffffff V180
0x3f8: V183 = 0x56e4b68b
0x3fd: V184 = EQ 0x56e4b68b V182
0x3fe: V185 = 0xa9
0x401: THROWI V184
---
Entry stack: []
Stack pops: 0
Stack additions: [V172, V173, V175, S6, S7, 0x765605771e14312a8198c82f63, V182, 0xb7adc4d73fe6eb07b2b500296080604052600436106100a457]
Exit stack: []

================================

Block 0x402
[0x402:0x40c]
---
Predecessors: [0x395]
Successors: [0x40d]
---
0x402 DUP1
0x403 PUSH4 0x715018a6
0x408 EQ
0x409 PUSH2 0x100
0x40c JUMPI
---
0x403: V186 = 0x715018a6
0x408: V187 = EQ 0x715018a6 V182
0x409: V188 = 0x100
0x40c: THROWI V187
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x40d
[0x40d:0x417]
---
Predecessors: [0x402]
Successors: [0x418]
---
0x40d DUP1
0x40e PUSH4 0x8da5cb5b
0x413 EQ
0x414 PUSH2 0x117
0x417 JUMPI
---
0x40e: V189 = 0x8da5cb5b
0x413: V190 = EQ 0x8da5cb5b V182
0x414: V191 = 0x117
0x417: THROWI V190
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x418
[0x418:0x422]
---
Predecessors: [0x40d]
Successors: [0x423]
---
0x418 DUP1
0x419 PUSH4 0x9025e64c
0x41e EQ
0x41f PUSH2 0x16e
0x422 JUMPI
---
0x419: V192 = 0x9025e64c
0x41e: V193 = EQ 0x9025e64c V182
0x41f: V194 = 0x16e
0x422: THROWI V193
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x423
[0x423:0x42d]
---
Predecessors: [0x418]
Successors: [0x42e]
---
0x423 DUP1
0x424 PUSH4 0xd87a794f
0x429 EQ
0x42a PUSH2 0x199
0x42d JUMPI
---
0x424: V195 = 0xd87a794f
0x429: V196 = EQ 0xd87a794f V182
0x42a: V197 = 0x199
0x42d: THROWI V196
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x42e
[0x42e:0x438]
---
Predecessors: [0x423]
Successors: [0x439]
---
0x42e DUP1
0x42f PUSH4 0xdf8de3e7
0x434 EQ
0x435 PUSH2 0x1f0
0x438 JUMPI
---
0x42f: V198 = 0xdf8de3e7
0x434: V199 = EQ 0xdf8de3e7 V182
0x435: V200 = 0x1f0
0x438: THROWI V199
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x439
[0x439:0x443]
---
Predecessors: [0x42e]
Successors: [0x444]
---
0x439 DUP1
0x43a PUSH4 0xe29f99f0
0x43f EQ
0x440 PUSH2 0x233
0x443 JUMPI
---
0x43a: V201 = 0xe29f99f0
0x43f: V202 = EQ 0xe29f99f0 V182
0x440: V203 = 0x233
0x443: THROWI V202
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x444
[0x444:0x44e]
---
Predecessors: [0x439]
Successors: [0x44f]
---
0x444 DUP1
0x445 PUSH4 0xe4cdf3cc
0x44a EQ
0x44b PUSH2 0x28a
0x44e JUMPI
---
0x445: V204 = 0xe4cdf3cc
0x44a: V205 = EQ 0xe4cdf3cc V182
0x44b: V206 = 0x28a
0x44e: THROWI V205
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x44f
[0x44f:0x459]
---
Predecessors: [0x444]
Successors: [0x45a]
---
0x44f DUP1
0x450 PUSH4 0xee0c0346
0x455 EQ
0x456 PUSH2 0x2f8
0x459 JUMPI
---
0x450: V207 = 0xee0c0346
0x455: V208 = EQ 0xee0c0346 V182
0x456: V209 = 0x2f8
0x459: THROWI V208
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x45a
[0x45a:0x464]
---
Predecessors: [0x44f]
Successors: [0x465]
---
0x45a DUP1
0x45b PUSH4 0xf2fde38b
0x460 EQ
0x461 PUSH2 0x33b
0x464 JUMPI
---
0x45b: V210 = 0xf2fde38b
0x460: V211 = EQ 0xf2fde38b V182
0x461: V212 = 0x33b
0x464: THROWI V211
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]

================================

Block 0x465
[0x465:0x471]
---
Predecessors: [0x45a]
Successors: [0x472]
---
0x465 JUMPDEST
0x466 PUSH1 0x0
0x468 DUP1
0x469 REVERT
0x46a JUMPDEST
0x46b CALLVALUE
0x46c DUP1
0x46d ISZERO
0x46e PUSH2 0xb5
0x471 JUMPI
---
0x465: JUMPDEST 
0x466: V213 = 0x0
0x469: REVERT 0x0 0x0
0x46a: JUMPDEST 
0x46b: V214 = CALLVALUE
0x46d: V215 = ISZERO V214
0x46e: V216 = 0xb5
0x471: THROWI V215
---
Entry stack: [0xb7adc4d73fe6eb07b2b500296080604052600436106100a457, V182]
Stack pops: 0
Stack additions: [V214]
Exit stack: []

================================

Block 0x472
[0x472:0x4c8]
---
Predecessors: [0x465]
Successors: [0x4c9]
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
0x476 JUMPDEST
0x477 POP
0x478 PUSH2 0xbe
0x47b PUSH2 0x37e
0x47e JUMP
0x47f JUMPDEST
0x480 PUSH1 0x40
0x482 MLOAD
0x483 DUP1
0x484 DUP3
0x485 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49a AND
0x49b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b0 AND
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x20
0x4b5 ADD
0x4b6 SWAP2
0x4b7 POP
0x4b8 POP
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd SWAP2
0x4be SUB
0x4bf SWAP1
0x4c0 RETURN
0x4c1 JUMPDEST
0x4c2 CALLVALUE
0x4c3 DUP1
0x4c4 ISZERO
0x4c5 PUSH2 0x10c
0x4c8 JUMPI
---
0x472: V217 = 0x0
0x475: REVERT 0x0 0x0
0x476: JUMPDEST 
0x478: V218 = 0xbe
0x47b: V219 = 0x37e
0x47e: THROW 
0x47f: JUMPDEST 
0x480: V220 = 0x40
0x482: V221 = M[0x40]
0x485: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x49b: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x4b2: M[V221] = V225
0x4b3: V226 = 0x20
0x4b5: V227 = ADD 0x20 V221
0x4b9: V228 = 0x40
0x4bb: V229 = M[0x40]
0x4be: V230 = SUB V227 V229
0x4c0: RETURN V229 V230
0x4c1: JUMPDEST 
0x4c2: V231 = CALLVALUE
0x4c4: V232 = ISZERO V231
0x4c5: V233 = 0x10c
0x4c8: THROWI V232
---
Entry stack: [V214]
Stack pops: 0
Stack additions: [0xbe, V231]
Exit stack: []

================================

Block 0x4c9
[0x4c9:0x4df]
---
Predecessors: [0x472]
Successors: [0x4e0]
---
0x4c9 PUSH1 0x0
0x4cb DUP1
0x4cc REVERT
0x4cd JUMPDEST
0x4ce POP
0x4cf PUSH2 0x115
0x4d2 PUSH2 0x3a4
0x4d5 JUMP
0x4d6 JUMPDEST
0x4d7 STOP
0x4d8 JUMPDEST
0x4d9 CALLVALUE
0x4da DUP1
0x4db ISZERO
0x4dc PUSH2 0x123
0x4df JUMPI
---
0x4c9: V234 = 0x0
0x4cc: REVERT 0x0 0x0
0x4cd: JUMPDEST 
0x4cf: V235 = 0x115
0x4d2: V236 = 0x3a4
0x4d5: THROW 
0x4d6: JUMPDEST 
0x4d7: STOP 
0x4d8: JUMPDEST 
0x4d9: V237 = CALLVALUE
0x4db: V238 = ISZERO V237
0x4dc: V239 = 0x123
0x4df: THROWI V238
---
Entry stack: [V231]
Stack pops: 0
Stack additions: [0x115, V237]
Exit stack: []

================================

Block 0x4e0
[0x4e0:0x536]
---
Predecessors: [0x4c9]
Successors: [0x537]
---
0x4e0 PUSH1 0x0
0x4e2 DUP1
0x4e3 REVERT
0x4e4 JUMPDEST
0x4e5 POP
0x4e6 PUSH2 0x12c
0x4e9 PUSH2 0x4a6
0x4ec JUMP
0x4ed JUMPDEST
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 DUP1
0x4f2 DUP3
0x4f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x508 AND
0x509 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51e AND
0x51f DUP2
0x520 MSTORE
0x521 PUSH1 0x20
0x523 ADD
0x524 SWAP2
0x525 POP
0x526 POP
0x527 PUSH1 0x40
0x529 MLOAD
0x52a DUP1
0x52b SWAP2
0x52c SUB
0x52d SWAP1
0x52e RETURN
0x52f JUMPDEST
0x530 CALLVALUE
0x531 DUP1
0x532 ISZERO
0x533 PUSH2 0x17a
0x536 JUMPI
---
0x4e0: V240 = 0x0
0x4e3: REVERT 0x0 0x0
0x4e4: JUMPDEST 
0x4e6: V241 = 0x12c
0x4e9: V242 = 0x4a6
0x4ec: THROW 
0x4ed: JUMPDEST 
0x4ee: V243 = 0x40
0x4f0: V244 = M[0x40]
0x4f3: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x508: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x509: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x51e: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x520: M[V244] = V248
0x521: V249 = 0x20
0x523: V250 = ADD 0x20 V244
0x527: V251 = 0x40
0x529: V252 = M[0x40]
0x52c: V253 = SUB V250 V252
0x52e: RETURN V252 V253
0x52f: JUMPDEST 
0x530: V254 = CALLVALUE
0x532: V255 = ISZERO V254
0x533: V256 = 0x17a
0x536: THROWI V255
---
Entry stack: [V237]
Stack pops: 0
Stack additions: [0x12c, V254]
Exit stack: []

================================

Block 0x537
[0x537:0x561]
---
Predecessors: [0x4e0]
Successors: [0x562]
---
0x537 PUSH1 0x0
0x539 DUP1
0x53a REVERT
0x53b JUMPDEST
0x53c POP
0x53d PUSH2 0x183
0x540 PUSH2 0x4cb
0x543 JUMP
0x544 JUMPDEST
0x545 PUSH1 0x40
0x547 MLOAD
0x548 DUP1
0x549 DUP3
0x54a DUP2
0x54b MSTORE
0x54c PUSH1 0x20
0x54e ADD
0x54f SWAP2
0x550 POP
0x551 POP
0x552 PUSH1 0x40
0x554 MLOAD
0x555 DUP1
0x556 SWAP2
0x557 SUB
0x558 SWAP1
0x559 RETURN
0x55a JUMPDEST
0x55b CALLVALUE
0x55c DUP1
0x55d ISZERO
0x55e PUSH2 0x1a5
0x561 JUMPI
---
0x537: V257 = 0x0
0x53a: REVERT 0x0 0x0
0x53b: JUMPDEST 
0x53d: V258 = 0x183
0x540: V259 = 0x4cb
0x543: THROW 
0x544: JUMPDEST 
0x545: V260 = 0x40
0x547: V261 = M[0x40]
0x54b: M[V261] = S0
0x54c: V262 = 0x20
0x54e: V263 = ADD 0x20 V261
0x552: V264 = 0x40
0x554: V265 = M[0x40]
0x557: V266 = SUB V263 V265
0x559: RETURN V265 V266
0x55a: JUMPDEST 
0x55b: V267 = CALLVALUE
0x55d: V268 = ISZERO V267
0x55e: V269 = 0x1a5
0x561: THROWI V268
---
Entry stack: [V254]
Stack pops: 0
Stack additions: [0x183, V267]
Exit stack: []

================================

Block 0x562
[0x562:0x5b8]
---
Predecessors: [0x537]
Successors: [0x5b9]
---
0x562 PUSH1 0x0
0x564 DUP1
0x565 REVERT
0x566 JUMPDEST
0x567 POP
0x568 PUSH2 0x1da
0x56b PUSH1 0x4
0x56d DUP1
0x56e CALLDATASIZE
0x56f SUB
0x570 DUP2
0x571 ADD
0x572 SWAP1
0x573 DUP1
0x574 DUP1
0x575 CALLDATALOAD
0x576 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58b AND
0x58c SWAP1
0x58d PUSH1 0x20
0x58f ADD
0x590 SWAP1
0x591 SWAP3
0x592 SWAP2
0x593 SWAP1
0x594 POP
0x595 POP
0x596 POP
0x597 PUSH2 0x4d1
0x59a JUMP
0x59b JUMPDEST
0x59c PUSH1 0x40
0x59e MLOAD
0x59f DUP1
0x5a0 DUP3
0x5a1 DUP2
0x5a2 MSTORE
0x5a3 PUSH1 0x20
0x5a5 ADD
0x5a6 SWAP2
0x5a7 POP
0x5a8 POP
0x5a9 PUSH1 0x40
0x5ab MLOAD
0x5ac DUP1
0x5ad SWAP2
0x5ae SUB
0x5af SWAP1
0x5b0 RETURN
0x5b1 JUMPDEST
0x5b2 CALLVALUE
0x5b3 DUP1
0x5b4 ISZERO
0x5b5 PUSH2 0x1fc
0x5b8 JUMPI
---
0x562: V270 = 0x0
0x565: REVERT 0x0 0x0
0x566: JUMPDEST 
0x568: V271 = 0x1da
0x56b: V272 = 0x4
0x56e: V273 = CALLDATASIZE
0x56f: V274 = SUB V273 0x4
0x571: V275 = ADD 0x4 V274
0x575: V276 = CALLDATALOAD 0x4
0x576: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x58d: V279 = 0x20
0x58f: V280 = ADD 0x20 0x4
0x597: V281 = 0x4d1
0x59a: THROW 
0x59b: JUMPDEST 
0x59c: V282 = 0x40
0x59e: V283 = M[0x40]
0x5a2: M[V283] = S0
0x5a3: V284 = 0x20
0x5a5: V285 = ADD 0x20 V283
0x5a9: V286 = 0x40
0x5ab: V287 = M[0x40]
0x5ae: V288 = SUB V285 V287
0x5b0: RETURN V287 V288
0x5b1: JUMPDEST 
0x5b2: V289 = CALLVALUE
0x5b4: V290 = ISZERO V289
0x5b5: V291 = 0x1fc
0x5b8: THROWI V290
---
Entry stack: [V267]
Stack pops: 0
Stack additions: [V278, 0x1da, V289]
Exit stack: []

================================

Block 0x5b9
[0x5b9:0x5fb]
---
Predecessors: [0x562]
Successors: [0x5fc]
---
0x5b9 PUSH1 0x0
0x5bb DUP1
0x5bc REVERT
0x5bd JUMPDEST
0x5be POP
0x5bf PUSH2 0x231
0x5c2 PUSH1 0x4
0x5c4 DUP1
0x5c5 CALLDATASIZE
0x5c6 SUB
0x5c7 DUP2
0x5c8 ADD
0x5c9 SWAP1
0x5ca DUP1
0x5cb DUP1
0x5cc CALLDATALOAD
0x5cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e2 AND
0x5e3 SWAP1
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 SWAP1
0x5e8 SWAP3
0x5e9 SWAP2
0x5ea SWAP1
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee PUSH2 0x4e9
0x5f1 JUMP
0x5f2 JUMPDEST
0x5f3 STOP
0x5f4 JUMPDEST
0x5f5 CALLVALUE
0x5f6 DUP1
0x5f7 ISZERO
0x5f8 PUSH2 0x23f
0x5fb JUMPI
---
0x5b9: V292 = 0x0
0x5bc: REVERT 0x0 0x0
0x5bd: JUMPDEST 
0x5bf: V293 = 0x231
0x5c2: V294 = 0x4
0x5c5: V295 = CALLDATASIZE
0x5c6: V296 = SUB V295 0x4
0x5c8: V297 = ADD 0x4 V296
0x5cc: V298 = CALLDATALOAD 0x4
0x5cd: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x5e4: V301 = 0x20
0x5e6: V302 = ADD 0x20 0x4
0x5ee: V303 = 0x4e9
0x5f1: THROW 
0x5f2: JUMPDEST 
0x5f3: STOP 
0x5f4: JUMPDEST 
0x5f5: V304 = CALLVALUE
0x5f7: V305 = ISZERO V304
0x5f8: V306 = 0x23f
0x5fb: THROWI V305
---
Entry stack: [V289]
Stack pops: 0
Stack additions: [V300, 0x231, V304]
Exit stack: []

================================

Block 0x5fc
[0x5fc:0x652]
---
Predecessors: [0x5b9]
Successors: [0x653]
---
0x5fc PUSH1 0x0
0x5fe DUP1
0x5ff REVERT
0x600 JUMPDEST
0x601 POP
0x602 PUSH2 0x248
0x605 PUSH2 0x851
0x608 JUMP
0x609 JUMPDEST
0x60a PUSH1 0x40
0x60c MLOAD
0x60d DUP1
0x60e DUP3
0x60f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x624 AND
0x625 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63a AND
0x63b DUP2
0x63c MSTORE
0x63d PUSH1 0x20
0x63f ADD
0x640 SWAP2
0x641 POP
0x642 POP
0x643 PUSH1 0x40
0x645 MLOAD
0x646 DUP1
0x647 SWAP2
0x648 SUB
0x649 SWAP1
0x64a RETURN
0x64b JUMPDEST
0x64c CALLVALUE
0x64d DUP1
0x64e ISZERO
0x64f PUSH2 0x296
0x652 JUMPI
---
0x5fc: V307 = 0x0
0x5ff: REVERT 0x0 0x0
0x600: JUMPDEST 
0x602: V308 = 0x248
0x605: V309 = 0x851
0x608: THROW 
0x609: JUMPDEST 
0x60a: V310 = 0x40
0x60c: V311 = M[0x40]
0x60f: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x624: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x625: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x63a: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x63c: M[V311] = V315
0x63d: V316 = 0x20
0x63f: V317 = ADD 0x20 V311
0x643: V318 = 0x40
0x645: V319 = M[0x40]
0x648: V320 = SUB V317 V319
0x64a: RETURN V319 V320
0x64b: JUMPDEST 
0x64c: V321 = CALLVALUE
0x64e: V322 = ISZERO V321
0x64f: V323 = 0x296
0x652: THROWI V322
---
Entry stack: [V304]
Stack pops: 0
Stack additions: [0x248, V321]
Exit stack: []

================================

Block 0x653
[0x653:0x6c0]
---
Predecessors: [0x5fc]
Successors: [0x6c1]
---
0x653 PUSH1 0x0
0x655 DUP1
0x656 REVERT
0x657 JUMPDEST
0x658 POP
0x659 PUSH2 0x2f6
0x65c PUSH1 0x4
0x65e DUP1
0x65f CALLDATASIZE
0x660 SUB
0x661 DUP2
0x662 ADD
0x663 SWAP1
0x664 DUP1
0x665 DUP1
0x666 CALLDATALOAD
0x667 SWAP1
0x668 PUSH1 0x20
0x66a ADD
0x66b SWAP1
0x66c SWAP3
0x66d SWAP2
0x66e SWAP1
0x66f DUP1
0x670 CALLDATALOAD
0x671 SWAP1
0x672 PUSH1 0x20
0x674 ADD
0x675 SWAP1
0x676 SWAP3
0x677 SWAP2
0x678 SWAP1
0x679 DUP1
0x67a CALLDATALOAD
0x67b PUSH1 0x0
0x67d NOT
0x67e AND
0x67f SWAP1
0x680 PUSH1 0x20
0x682 ADD
0x683 SWAP1
0x684 SWAP3
0x685 SWAP2
0x686 SWAP1
0x687 DUP1
0x688 CALLDATALOAD
0x689 PUSH1 0xff
0x68b AND
0x68c SWAP1
0x68d PUSH1 0x20
0x68f ADD
0x690 SWAP1
0x691 SWAP3
0x692 SWAP2
0x693 SWAP1
0x694 DUP1
0x695 CALLDATALOAD
0x696 PUSH1 0x0
0x698 NOT
0x699 AND
0x69a SWAP1
0x69b PUSH1 0x20
0x69d ADD
0x69e SWAP1
0x69f SWAP3
0x6a0 SWAP2
0x6a1 SWAP1
0x6a2 DUP1
0x6a3 CALLDATALOAD
0x6a4 PUSH1 0x0
0x6a6 NOT
0x6a7 AND
0x6a8 SWAP1
0x6a9 PUSH1 0x20
0x6ab ADD
0x6ac SWAP1
0x6ad SWAP3
0x6ae SWAP2
0x6af SWAP1
0x6b0 POP
0x6b1 POP
0x6b2 POP
0x6b3 PUSH2 0x877
0x6b6 JUMP
0x6b7 JUMPDEST
0x6b8 STOP
0x6b9 JUMPDEST
0x6ba CALLVALUE
0x6bb DUP1
0x6bc ISZERO
0x6bd PUSH2 0x304
0x6c0 JUMPI
---
0x653: V324 = 0x0
0x656: REVERT 0x0 0x0
0x657: JUMPDEST 
0x659: V325 = 0x2f6
0x65c: V326 = 0x4
0x65f: V327 = CALLDATASIZE
0x660: V328 = SUB V327 0x4
0x662: V329 = ADD 0x4 V328
0x666: V330 = CALLDATALOAD 0x4
0x668: V331 = 0x20
0x66a: V332 = ADD 0x20 0x4
0x670: V333 = CALLDATALOAD 0x24
0x672: V334 = 0x20
0x674: V335 = ADD 0x20 0x24
0x67a: V336 = CALLDATALOAD 0x44
0x67b: V337 = 0x0
0x67d: V338 = NOT 0x0
0x67e: V339 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V336
0x680: V340 = 0x20
0x682: V341 = ADD 0x20 0x44
0x688: V342 = CALLDATALOAD 0x64
0x689: V343 = 0xff
0x68b: V344 = AND 0xff V342
0x68d: V345 = 0x20
0x68f: V346 = ADD 0x20 0x64
0x695: V347 = CALLDATALOAD 0x84
0x696: V348 = 0x0
0x698: V349 = NOT 0x0
0x699: V350 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V347
0x69b: V351 = 0x20
0x69d: V352 = ADD 0x20 0x84
0x6a3: V353 = CALLDATALOAD 0xa4
0x6a4: V354 = 0x0
0x6a6: V355 = NOT 0x0
0x6a7: V356 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V353
0x6a9: V357 = 0x20
0x6ab: V358 = ADD 0x20 0xa4
0x6b3: V359 = 0x877
0x6b6: THROW 
0x6b7: JUMPDEST 
0x6b8: STOP 
0x6b9: JUMPDEST 
0x6ba: V360 = CALLVALUE
0x6bc: V361 = ISZERO V360
0x6bd: V362 = 0x304
0x6c0: THROWI V361
---
Entry stack: [V321]
Stack pops: 0
Stack additions: [V356, V350, V344, V339, V333, V330, 0x2f6, V360]
Exit stack: []

================================

Block 0x6c1
[0x6c1:0x703]
---
Predecessors: [0x653]
Successors: [0x704]
---
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 REVERT
0x6c5 JUMPDEST
0x6c6 POP
0x6c7 PUSH2 0x339
0x6ca PUSH1 0x4
0x6cc DUP1
0x6cd CALLDATASIZE
0x6ce SUB
0x6cf DUP2
0x6d0 ADD
0x6d1 SWAP1
0x6d2 DUP1
0x6d3 DUP1
0x6d4 CALLDATALOAD
0x6d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ea AND
0x6eb SWAP1
0x6ec PUSH1 0x20
0x6ee ADD
0x6ef SWAP1
0x6f0 SWAP3
0x6f1 SWAP2
0x6f2 SWAP1
0x6f3 POP
0x6f4 POP
0x6f5 POP
0x6f6 PUSH2 0xbc8
0x6f9 JUMP
0x6fa JUMPDEST
0x6fb STOP
0x6fc JUMPDEST
0x6fd CALLVALUE
0x6fe DUP1
0x6ff ISZERO
0x700 PUSH2 0x347
0x703 JUMPI
---
0x6c1: V363 = 0x0
0x6c4: REVERT 0x0 0x0
0x6c5: JUMPDEST 
0x6c7: V364 = 0x339
0x6ca: V365 = 0x4
0x6cd: V366 = CALLDATASIZE
0x6ce: V367 = SUB V366 0x4
0x6d0: V368 = ADD 0x4 V367
0x6d4: V369 = CALLDATALOAD 0x4
0x6d5: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ea: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x6ec: V372 = 0x20
0x6ee: V373 = ADD 0x20 0x4
0x6f6: V374 = 0xbc8
0x6f9: THROW 
0x6fa: JUMPDEST 
0x6fb: STOP 
0x6fc: JUMPDEST 
0x6fd: V375 = CALLVALUE
0x6ff: V376 = ISZERO V375
0x700: V377 = 0x347
0x703: THROWI V376
---
Entry stack: [V360]
Stack pops: 0
Stack additions: [V371, 0x339, V375]
Exit stack: []

================================

Block 0x704
[0x704:0x7bb]
---
Predecessors: [0x6c1]
Successors: [0x7bc]
---
0x704 PUSH1 0x0
0x706 DUP1
0x707 REVERT
0x708 JUMPDEST
0x709 POP
0x70a PUSH2 0x37c
0x70d PUSH1 0x4
0x70f DUP1
0x710 CALLDATASIZE
0x711 SUB
0x712 DUP2
0x713 ADD
0x714 SWAP1
0x715 DUP1
0x716 DUP1
0x717 CALLDATALOAD
0x718 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72d AND
0x72e SWAP1
0x72f PUSH1 0x20
0x731 ADD
0x732 SWAP1
0x733 SWAP3
0x734 SWAP2
0x735 SWAP1
0x736 POP
0x737 POP
0x738 POP
0x739 PUSH2 0xc67
0x73c JUMP
0x73d JUMPDEST
0x73e STOP
0x73f JUMPDEST
0x740 PUSH1 0x2
0x742 PUSH1 0x0
0x744 SWAP1
0x745 SLOAD
0x746 SWAP1
0x747 PUSH2 0x100
0x74a EXP
0x74b SWAP1
0x74c DIV
0x74d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x762 AND
0x763 DUP2
0x764 JUMP
0x765 JUMPDEST
0x766 PUSH1 0x0
0x768 DUP1
0x769 SWAP1
0x76a SLOAD
0x76b SWAP1
0x76c PUSH2 0x100
0x76f EXP
0x770 SWAP1
0x771 DIV
0x772 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x787 AND
0x788 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79d AND
0x79e CALLER
0x79f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b4 AND
0x7b5 EQ
0x7b6 ISZERO
0x7b7 ISZERO
0x7b8 PUSH2 0x3ff
0x7bb JUMPI
---
0x704: V378 = 0x0
0x707: REVERT 0x0 0x0
0x708: JUMPDEST 
0x70a: V379 = 0x37c
0x70d: V380 = 0x4
0x710: V381 = CALLDATASIZE
0x711: V382 = SUB V381 0x4
0x713: V383 = ADD 0x4 V382
0x717: V384 = CALLDATALOAD 0x4
0x718: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x72f: V387 = 0x20
0x731: V388 = ADD 0x20 0x4
0x739: V389 = 0xc67
0x73c: THROW 
0x73d: JUMPDEST 
0x73e: STOP 
0x73f: JUMPDEST 
0x740: V390 = 0x2
0x742: V391 = 0x0
0x745: V392 = S[0x2]
0x747: V393 = 0x100
0x74a: V394 = EXP 0x100 0x0
0x74c: V395 = DIV V392 0x1
0x74d: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x762: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x764: JUMP S0
0x765: JUMPDEST 
0x766: V398 = 0x0
0x76a: V399 = S[0x0]
0x76c: V400 = 0x100
0x76f: V401 = EXP 0x100 0x0
0x771: V402 = DIV V399 0x1
0x772: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x787: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x788: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x79d: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x79e: V407 = CALLER
0x79f: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b4: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x7b5: V410 = EQ V409 V406
0x7b6: V411 = ISZERO V410
0x7b7: V412 = ISZERO V411
0x7b8: V413 = 0x3ff
0x7bb: THROWI V412
---
Entry stack: [V375]
Stack pops: 0
Stack additions: [V386, 0x37c, V397, S0]
Exit stack: []

================================

Block 0x7bc
[0x7bc:0x903]
---
Predecessors: [0x704]
Successors: [0x904]
---
0x7bc PUSH1 0x0
0x7be DUP1
0x7bf REVERT
0x7c0 JUMPDEST
0x7c1 PUSH1 0x0
0x7c3 DUP1
0x7c4 SWAP1
0x7c5 SLOAD
0x7c6 SWAP1
0x7c7 PUSH2 0x100
0x7ca EXP
0x7cb SWAP1
0x7cc DIV
0x7cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e2 AND
0x7e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f8 AND
0x7f9 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x81a PUSH1 0x40
0x81c MLOAD
0x81d PUSH1 0x40
0x81f MLOAD
0x820 DUP1
0x821 SWAP2
0x822 SUB
0x823 SWAP1
0x824 LOG2
0x825 PUSH1 0x0
0x827 DUP1
0x828 PUSH1 0x0
0x82a PUSH2 0x100
0x82d EXP
0x82e DUP2
0x82f SLOAD
0x830 DUP2
0x831 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x846 MUL
0x847 NOT
0x848 AND
0x849 SWAP1
0x84a DUP4
0x84b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x860 AND
0x861 MUL
0x862 OR
0x863 SWAP1
0x864 SSTORE
0x865 POP
0x866 JUMP
0x867 JUMPDEST
0x868 PUSH1 0x0
0x86a DUP1
0x86b SWAP1
0x86c SLOAD
0x86d SWAP1
0x86e PUSH2 0x100
0x871 EXP
0x872 SWAP1
0x873 DIV
0x874 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x889 AND
0x88a DUP2
0x88b JUMP
0x88c JUMPDEST
0x88d PUSH1 0x3
0x88f SLOAD
0x890 DUP2
0x891 JUMP
0x892 JUMPDEST
0x893 PUSH1 0x4
0x895 PUSH1 0x20
0x897 MSTORE
0x898 DUP1
0x899 PUSH1 0x0
0x89b MSTORE
0x89c PUSH1 0x40
0x89e PUSH1 0x0
0x8a0 SHA3
0x8a1 PUSH1 0x0
0x8a3 SWAP2
0x8a4 POP
0x8a5 SWAP1
0x8a6 POP
0x8a7 SLOAD
0x8a8 DUP2
0x8a9 JUMP
0x8aa JUMPDEST
0x8ab PUSH1 0x0
0x8ad DUP1
0x8ae PUSH1 0x0
0x8b0 DUP1
0x8b1 SWAP1
0x8b2 SLOAD
0x8b3 SWAP1
0x8b4 PUSH2 0x100
0x8b7 EXP
0x8b8 SWAP1
0x8b9 DIV
0x8ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cf AND
0x8d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e5 AND
0x8e6 CALLER
0x8e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fc AND
0x8fd EQ
0x8fe ISZERO
0x8ff ISZERO
0x900 PUSH2 0x547
0x903 JUMPI
---
0x7bc: V414 = 0x0
0x7bf: REVERT 0x0 0x0
0x7c0: JUMPDEST 
0x7c1: V415 = 0x0
0x7c5: V416 = S[0x0]
0x7c7: V417 = 0x100
0x7ca: V418 = EXP 0x100 0x0
0x7cc: V419 = DIV V416 0x1
0x7cd: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e2: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x7e3: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x7f9: V424 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x81a: V425 = 0x40
0x81c: V426 = M[0x40]
0x81d: V427 = 0x40
0x81f: V428 = M[0x40]
0x822: V429 = SUB V426 V428
0x824: LOG V428 V429 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V423
0x825: V430 = 0x0
0x828: V431 = 0x0
0x82a: V432 = 0x100
0x82d: V433 = EXP 0x100 0x0
0x82f: V434 = S[0x0]
0x831: V435 = 0xffffffffffffffffffffffffffffffffffffffff
0x846: V436 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x847: V437 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x848: V438 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V434
0x84b: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x860: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x861: V441 = MUL 0x0 0x1
0x862: V442 = OR 0x0 V438
0x864: S[0x0] = V442
0x866: JUMP S0
0x867: JUMPDEST 
0x868: V443 = 0x0
0x86c: V444 = S[0x0]
0x86e: V445 = 0x100
0x871: V446 = EXP 0x100 0x0
0x873: V447 = DIV V444 0x1
0x874: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x889: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x88b: JUMP S0
0x88c: JUMPDEST 
0x88d: V450 = 0x3
0x88f: V451 = S[0x3]
0x891: JUMP S0
0x892: JUMPDEST 
0x893: V452 = 0x4
0x895: V453 = 0x20
0x897: M[0x20] = 0x4
0x899: V454 = 0x0
0x89b: M[0x0] = S0
0x89c: V455 = 0x40
0x89e: V456 = 0x0
0x8a0: V457 = SHA3 0x0 0x40
0x8a1: V458 = 0x0
0x8a7: V459 = S[V457]
0x8a9: JUMP S1
0x8aa: JUMPDEST 
0x8ab: V460 = 0x0
0x8ae: V461 = 0x0
0x8b2: V462 = S[0x0]
0x8b4: V463 = 0x100
0x8b7: V464 = EXP 0x100 0x0
0x8b9: V465 = DIV V462 0x1
0x8ba: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cf: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x8d0: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e5: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x8e6: V470 = CALLER
0x8e7: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fc: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x8fd: V473 = EQ V472 V469
0x8fe: V474 = ISZERO V473
0x8ff: V475 = ISZERO V474
0x900: V476 = 0x547
0x903: THROWI V475
---
Entry stack: []
Stack pops: 0
Stack additions: [V449, S0, V451, S0, V459, S1, 0x0, 0x0]
Exit stack: []

================================

Block 0x904
[0x904:0x927]
---
Predecessors: [0x7bc]
Successors: [0x928]
---
0x904 PUSH1 0x0
0x906 DUP1
0x907 REVERT
0x908 JUMPDEST
0x909 PUSH1 0x0
0x90b DUP4
0x90c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x921 AND
0x922 EQ
0x923 ISZERO
0x924 PUSH2 0x5ea
0x927 JUMPI
---
0x904: V477 = 0x0
0x907: REVERT 0x0 0x0
0x908: JUMPDEST 
0x909: V478 = 0x0
0x90c: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x921: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x922: V481 = EQ V480 0x0
0x923: V482 = ISZERO V481
0x924: V483 = 0x5ea
0x927: THROWI V482
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x928
[0x928:0x99b]
---
Predecessors: [0x904]
Successors: [0x99c]
---
0x928 PUSH1 0x0
0x92a DUP1
0x92b SWAP1
0x92c SLOAD
0x92d SWAP1
0x92e PUSH2 0x100
0x931 EXP
0x932 SWAP1
0x933 DIV
0x934 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x949 AND
0x94a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95f AND
0x960 PUSH2 0x8fc
0x963 ADDRESS
0x964 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x979 AND
0x97a BALANCE
0x97b SWAP1
0x97c DUP2
0x97d ISZERO
0x97e MUL
0x97f SWAP1
0x980 PUSH1 0x40
0x982 MLOAD
0x983 PUSH1 0x0
0x985 PUSH1 0x40
0x987 MLOAD
0x988 DUP1
0x989 DUP4
0x98a SUB
0x98b DUP2
0x98c DUP6
0x98d DUP9
0x98e DUP9
0x98f CALL
0x990 SWAP4
0x991 POP
0x992 POP
0x993 POP
0x994 POP
0x995 ISZERO
0x996 DUP1
0x997 ISZERO
0x998 PUSH2 0x5e4
0x99b JUMPI
---
0x928: V484 = 0x0
0x92c: V485 = S[0x0]
0x92e: V486 = 0x100
0x931: V487 = EXP 0x100 0x0
0x933: V488 = DIV V485 0x1
0x934: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x949: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x94a: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x95f: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x960: V493 = 0x8fc
0x963: V494 = ADDRESS
0x964: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x979: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x97a: V497 = BALANCE V496
0x97d: V498 = ISZERO V497
0x97e: V499 = MUL V498 0x8fc
0x980: V500 = 0x40
0x982: V501 = M[0x40]
0x983: V502 = 0x0
0x985: V503 = 0x40
0x987: V504 = M[0x40]
0x98a: V505 = SUB V501 V504
0x98f: V506 = CALL V499 V492 V497 V504 V505 V504 0x0
0x995: V507 = ISZERO V506
0x997: V508 = ISZERO V507
0x998: V509 = 0x5e4
0x99b: THROWI V508
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V507]
Exit stack: [S2, S1, S0, V507]

================================

Block 0x99c
[0x99c:0xa44]
---
Predecessors: [0x928]
Successors: [0xa45]
---
0x99c RETURNDATASIZE
0x99d PUSH1 0x0
0x99f DUP1
0x9a0 RETURNDATACOPY
0x9a1 RETURNDATASIZE
0x9a2 PUSH1 0x0
0x9a4 REVERT
0x9a5 JUMPDEST
0x9a6 POP
0x9a7 PUSH2 0x84c
0x9aa JUMP
0x9ab JUMPDEST
0x9ac DUP3
0x9ad SWAP2
0x9ae POP
0x9af DUP2
0x9b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c5 AND
0x9c6 PUSH4 0x70a08231
0x9cb ADDRESS
0x9cc PUSH1 0x40
0x9ce MLOAD
0x9cf DUP3
0x9d0 PUSH4 0xffffffff
0x9d5 AND
0x9d6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9f4 MUL
0x9f5 DUP2
0x9f6 MSTORE
0x9f7 PUSH1 0x4
0x9f9 ADD
0x9fa DUP1
0x9fb DUP3
0x9fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa11 AND
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 AND
0xa28 DUP2
0xa29 MSTORE
0xa2a PUSH1 0x20
0xa2c ADD
0xa2d SWAP2
0xa2e POP
0xa2f POP
0xa30 PUSH1 0x20
0xa32 PUSH1 0x40
0xa34 MLOAD
0xa35 DUP1
0xa36 DUP4
0xa37 SUB
0xa38 DUP2
0xa39 PUSH1 0x0
0xa3b DUP8
0xa3c DUP1
0xa3d EXTCODESIZE
0xa3e ISZERO
0xa3f DUP1
0xa40 ISZERO
0xa41 PUSH2 0x688
0xa44 JUMPI
---
0x99c: V510 = RETURNDATASIZE
0x99d: V511 = 0x0
0x9a0: RETURNDATACOPY 0x0 0x0 V510
0x9a1: V512 = RETURNDATASIZE
0x9a2: V513 = 0x0
0x9a4: REVERT 0x0 V512
0x9a5: JUMPDEST 
0x9a7: V514 = 0x84c
0x9aa: THROW 
0x9ab: JUMPDEST 
0x9b0: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c5: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9c6: V517 = 0x70a08231
0x9cb: V518 = ADDRESS
0x9cc: V519 = 0x40
0x9ce: V520 = M[0x40]
0x9d0: V521 = 0xffffffff
0x9d5: V522 = AND 0xffffffff 0x70a08231
0x9d6: V523 = 0x100000000000000000000000000000000000000000000000000000000
0x9f4: V524 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x9f6: M[V520] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9f7: V525 = 0x4
0x9f9: V526 = ADD 0x4 V520
0x9fc: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0xa11: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0xa12: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0xa29: M[V526] = V530
0xa2a: V531 = 0x20
0xa2c: V532 = ADD 0x20 V526
0xa30: V533 = 0x20
0xa32: V534 = 0x40
0xa34: V535 = M[0x40]
0xa37: V536 = SUB V532 V535
0xa39: V537 = 0x0
0xa3d: V538 = EXTCODESIZE V516
0xa3e: V539 = ISZERO V538
0xa40: V540 = ISZERO V539
0xa41: V541 = 0x688
0xa44: THROWI V540
---
Entry stack: [S3, S2, S1, V507]
Stack pops: 0
Stack additions: [V539, V516, 0x0, V535, V536, V535, 0x20, V532, 0x70a08231, V516, S0, S2, S2]
Exit stack: []

================================

Block 0xa45
[0xa45:0xa53]
---
Predecessors: [0x99c]
Successors: [0xa54]
---
0xa45 PUSH1 0x0
0xa47 DUP1
0xa48 REVERT
0xa49 JUMPDEST
0xa4a POP
0xa4b GAS
0xa4c CALL
0xa4d ISZERO
0xa4e DUP1
0xa4f ISZERO
0xa50 PUSH2 0x69c
0xa53 JUMPI
---
0xa45: V542 = 0x0
0xa48: REVERT 0x0 0x0
0xa49: JUMPDEST 
0xa4b: V543 = GAS
0xa4c: V544 = CALL V543 S1 S2 S3 S4 S5 S6
0xa4d: V545 = ISZERO V544
0xa4f: V546 = ISZERO V545
0xa50: V547 = 0x69c
0xa53: THROWI V546
---
Entry stack: [S12, S11, S10, V516, 0x70a08231, V532, 0x20, V535, V536, V535, 0x0, V516, V539]
Stack pops: 0
Stack additions: [V545]
Exit stack: []

================================

Block 0xa54
[0xa54:0xa6e]
---
Predecessors: [0xa45]
Successors: [0xa6f]
---
0xa54 RETURNDATASIZE
0xa55 PUSH1 0x0
0xa57 DUP1
0xa58 RETURNDATACOPY
0xa59 RETURNDATASIZE
0xa5a PUSH1 0x0
0xa5c REVERT
0xa5d JUMPDEST
0xa5e POP
0xa5f POP
0xa60 POP
0xa61 POP
0xa62 PUSH1 0x40
0xa64 MLOAD
0xa65 RETURNDATASIZE
0xa66 PUSH1 0x20
0xa68 DUP2
0xa69 LT
0xa6a ISZERO
0xa6b PUSH2 0x6b2
0xa6e JUMPI
---
0xa54: V548 = RETURNDATASIZE
0xa55: V549 = 0x0
0xa58: RETURNDATACOPY 0x0 0x0 V548
0xa59: V550 = RETURNDATASIZE
0xa5a: V551 = 0x0
0xa5c: REVERT 0x0 V550
0xa5d: JUMPDEST 
0xa62: V552 = 0x40
0xa64: V553 = M[0x40]
0xa65: V554 = RETURNDATASIZE
0xa66: V555 = 0x20
0xa69: V556 = LT V554 0x20
0xa6a: V557 = ISZERO V556
0xa6b: V558 = 0x6b2
0xa6e: THROWI V557
---
Entry stack: [V545]
Stack pops: 0
Stack additions: [V554, V553]
Exit stack: []

================================

Block 0xa6f
[0xa6f:0xb45]
---
Predecessors: [0xa54]
Successors: [0xb46]
---
0xa6f PUSH1 0x0
0xa71 DUP1
0xa72 REVERT
0xa73 JUMPDEST
0xa74 DUP2
0xa75 ADD
0xa76 SWAP1
0xa77 DUP1
0xa78 DUP1
0xa79 MLOAD
0xa7a SWAP1
0xa7b PUSH1 0x20
0xa7d ADD
0xa7e SWAP1
0xa7f SWAP3
0xa80 SWAP2
0xa81 SWAP1
0xa82 POP
0xa83 POP
0xa84 POP
0xa85 SWAP1
0xa86 POP
0xa87 DUP2
0xa88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9d AND
0xa9e PUSH4 0xa9059cbb
0xaa3 PUSH1 0x0
0xaa5 DUP1
0xaa6 SWAP1
0xaa7 SLOAD
0xaa8 SWAP1
0xaa9 PUSH2 0x100
0xaac EXP
0xaad SWAP1
0xaae DIV
0xaaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac4 AND
0xac5 DUP4
0xac6 PUSH1 0x40
0xac8 MLOAD
0xac9 DUP4
0xaca PUSH4 0xffffffff
0xacf AND
0xad0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xaee MUL
0xaef DUP2
0xaf0 MSTORE
0xaf1 PUSH1 0x4
0xaf3 ADD
0xaf4 DUP1
0xaf5 DUP4
0xaf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0b AND
0xb0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb21 AND
0xb22 DUP2
0xb23 MSTORE
0xb24 PUSH1 0x20
0xb26 ADD
0xb27 DUP3
0xb28 DUP2
0xb29 MSTORE
0xb2a PUSH1 0x20
0xb2c ADD
0xb2d SWAP3
0xb2e POP
0xb2f POP
0xb30 POP
0xb31 PUSH1 0x20
0xb33 PUSH1 0x40
0xb35 MLOAD
0xb36 DUP1
0xb37 DUP4
0xb38 SUB
0xb39 DUP2
0xb3a PUSH1 0x0
0xb3c DUP8
0xb3d DUP1
0xb3e EXTCODESIZE
0xb3f ISZERO
0xb40 DUP1
0xb41 ISZERO
0xb42 PUSH2 0x789
0xb45 JUMPI
---
0xa6f: V559 = 0x0
0xa72: REVERT 0x0 0x0
0xa73: JUMPDEST 
0xa75: V560 = ADD S1 S0
0xa79: V561 = M[S1]
0xa7b: V562 = 0x20
0xa7d: V563 = ADD 0x20 S1
0xa88: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9d: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa9e: V566 = 0xa9059cbb
0xaa3: V567 = 0x0
0xaa7: V568 = S[0x0]
0xaa9: V569 = 0x100
0xaac: V570 = EXP 0x100 0x0
0xaae: V571 = DIV V568 0x1
0xaaf: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0xac4: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0xac6: V574 = 0x40
0xac8: V575 = M[0x40]
0xaca: V576 = 0xffffffff
0xacf: V577 = AND 0xffffffff 0xa9059cbb
0xad0: V578 = 0x100000000000000000000000000000000000000000000000000000000
0xaee: V579 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xaf0: M[V575] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xaf1: V580 = 0x4
0xaf3: V581 = ADD 0x4 V575
0xaf6: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0b: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0xb0c: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0xb21: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0xb23: M[V581] = V585
0xb24: V586 = 0x20
0xb26: V587 = ADD 0x20 V581
0xb29: M[V587] = V561
0xb2a: V588 = 0x20
0xb2c: V589 = ADD 0x20 V587
0xb31: V590 = 0x20
0xb33: V591 = 0x40
0xb35: V592 = M[0x40]
0xb38: V593 = SUB V589 V592
0xb3a: V594 = 0x0
0xb3e: V595 = EXTCODESIZE V565
0xb3f: V596 = ISZERO V595
0xb41: V597 = ISZERO V596
0xb42: V598 = 0x789
0xb45: THROWI V597
---
Entry stack: [V553, V554]
Stack pops: 0
Stack additions: [V596, V565, 0x0, V592, V593, V592, 0x20, V589, 0xa9059cbb, V565, V561, S3]
Exit stack: []

================================

Block 0xb46
[0xb46:0xb54]
---
Predecessors: [0xa6f]
Successors: [0xb55]
---
0xb46 PUSH1 0x0
0xb48 DUP1
0xb49 REVERT
0xb4a JUMPDEST
0xb4b POP
0xb4c GAS
0xb4d CALL
0xb4e ISZERO
0xb4f DUP1
0xb50 ISZERO
0xb51 PUSH2 0x79d
0xb54 JUMPI
---
0xb46: V599 = 0x0
0xb49: REVERT 0x0 0x0
0xb4a: JUMPDEST 
0xb4c: V600 = GAS
0xb4d: V601 = CALL V600 S1 S2 S3 S4 S5 S6
0xb4e: V602 = ISZERO V601
0xb50: V603 = ISZERO V602
0xb51: V604 = 0x79d
0xb54: THROWI V603
---
Entry stack: [S11, V561, V565, 0xa9059cbb, V589, 0x20, V592, V593, V592, 0x0, V565, V596]
Stack pops: 0
Stack additions: [V602]
Exit stack: []

================================

Block 0xb55
[0xb55:0xb6f]
---
Predecessors: [0xb46]
Successors: [0xb70]
---
0xb55 RETURNDATASIZE
0xb56 PUSH1 0x0
0xb58 DUP1
0xb59 RETURNDATACOPY
0xb5a RETURNDATASIZE
0xb5b PUSH1 0x0
0xb5d REVERT
0xb5e JUMPDEST
0xb5f POP
0xb60 POP
0xb61 POP
0xb62 POP
0xb63 PUSH1 0x40
0xb65 MLOAD
0xb66 RETURNDATASIZE
0xb67 PUSH1 0x20
0xb69 DUP2
0xb6a LT
0xb6b ISZERO
0xb6c PUSH2 0x7b3
0xb6f JUMPI
---
0xb55: V605 = RETURNDATASIZE
0xb56: V606 = 0x0
0xb59: RETURNDATACOPY 0x0 0x0 V605
0xb5a: V607 = RETURNDATASIZE
0xb5b: V608 = 0x0
0xb5d: REVERT 0x0 V607
0xb5e: JUMPDEST 
0xb63: V609 = 0x40
0xb65: V610 = M[0x40]
0xb66: V611 = RETURNDATASIZE
0xb67: V612 = 0x20
0xb6a: V613 = LT V611 0x20
0xb6b: V614 = ISZERO V613
0xb6c: V615 = 0x7b3
0xb6f: THROWI V614
---
Entry stack: [V602]
Stack pops: 0
Stack additions: [V611, V610]
Exit stack: []

================================

Block 0xb70
[0xb70:0xc0c]
---
Predecessors: [0xb55]
Successors: [0xc0d]
---
0xb70 PUSH1 0x0
0xb72 DUP1
0xb73 REVERT
0xb74 JUMPDEST
0xb75 DUP2
0xb76 ADD
0xb77 SWAP1
0xb78 DUP1
0xb79 DUP1
0xb7a MLOAD
0xb7b SWAP1
0xb7c PUSH1 0x20
0xb7e ADD
0xb7f SWAP1
0xb80 SWAP3
0xb81 SWAP2
0xb82 SWAP1
0xb83 POP
0xb84 POP
0xb85 POP
0xb86 POP
0xb87 PUSH1 0x0
0xb89 DUP1
0xb8a SWAP1
0xb8b SLOAD
0xb8c SWAP1
0xb8d PUSH2 0x100
0xb90 EXP
0xb91 SWAP1
0xb92 DIV
0xb93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba8 AND
0xba9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbe AND
0xbbf DUP4
0xbc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd5 AND
0xbd6 PUSH32 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c
0xbf7 DUP4
0xbf8 PUSH1 0x40
0xbfa MLOAD
0xbfb DUP1
0xbfc DUP3
0xbfd DUP2
0xbfe MSTORE
0xbff PUSH1 0x20
0xc01 ADD
0xc02 SWAP2
0xc03 POP
0xc04 POP
0xc05 PUSH1 0x40
0xc07 MLOAD
0xc08 DUP1
0xc09 SWAP2
0xc0a SUB
0xc0b SWAP1
0xc0c LOG3
---
0xb70: V616 = 0x0
0xb73: REVERT 0x0 0x0
0xb74: JUMPDEST 
0xb76: V617 = ADD S1 S0
0xb7a: V618 = M[S1]
0xb7c: V619 = 0x20
0xb7e: V620 = ADD 0x20 S1
0xb87: V621 = 0x0
0xb8b: V622 = S[0x0]
0xb8d: V623 = 0x100
0xb90: V624 = EXP 0x100 0x0
0xb92: V625 = DIV V622 0x1
0xb93: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xba8: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0xba9: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbe: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0xbc0: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd5: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xbd6: V632 = 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c
0xbf8: V633 = 0x40
0xbfa: V634 = M[0x40]
0xbfe: M[V634] = S2
0xbff: V635 = 0x20
0xc01: V636 = ADD 0x20 V634
0xc05: V637 = 0x40
0xc07: V638 = M[0x40]
0xc0a: V639 = SUB V636 V638
0xc0c: LOG V638 V639 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c V631 V629
---
Entry stack: [V610, V611]
Stack pops: 0
Stack additions: [S2, S3, S4]
Exit stack: []

================================

Block 0xc0d
[0xc0d:0xc86]
---
Predecessors: [0xb70]
Successors: [0xc87]
---
0xc0d JUMPDEST
0xc0e POP
0xc0f POP
0xc10 POP
0xc11 JUMP
0xc12 JUMPDEST
0xc13 PUSH1 0x1
0xc15 PUSH1 0x0
0xc17 SWAP1
0xc18 SLOAD
0xc19 SWAP1
0xc1a PUSH2 0x100
0xc1d EXP
0xc1e SWAP1
0xc1f DIV
0xc20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc35 AND
0xc36 DUP2
0xc37 JUMP
0xc38 JUMPDEST
0xc39 PUSH1 0x0
0xc3b DUP1
0xc3c CALLER
0xc3d SWAP2
0xc3e POP
0xc3f DUP8
0xc40 PUSH1 0x4
0xc42 PUSH1 0x0
0xc44 DUP5
0xc45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5a AND
0xc5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc70 AND
0xc71 DUP2
0xc72 MSTORE
0xc73 PUSH1 0x20
0xc75 ADD
0xc76 SWAP1
0xc77 DUP2
0xc78 MSTORE
0xc79 PUSH1 0x20
0xc7b ADD
0xc7c PUSH1 0x0
0xc7e SHA3
0xc7f SLOAD
0xc80 EQ
0xc81 ISZERO
0xc82 ISZERO
0xc83 PUSH2 0x8ca
0xc86 JUMPI
---
0xc0d: JUMPDEST 
0xc11: JUMP S3
0xc12: JUMPDEST 
0xc13: V640 = 0x1
0xc15: V641 = 0x0
0xc18: V642 = S[0x1]
0xc1a: V643 = 0x100
0xc1d: V644 = EXP 0x100 0x0
0xc1f: V645 = DIV V642 0x1
0xc20: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0xc35: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0xc37: JUMP S0
0xc38: JUMPDEST 
0xc39: V648 = 0x0
0xc3c: V649 = CALLER
0xc40: V650 = 0x4
0xc42: V651 = 0x0
0xc45: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5a: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0xc5b: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xc70: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xc72: M[0x0] = V655
0xc73: V656 = 0x20
0xc75: V657 = ADD 0x20 0x0
0xc78: M[0x20] = 0x4
0xc79: V658 = 0x20
0xc7b: V659 = ADD 0x20 0x20
0xc7c: V660 = 0x0
0xc7e: V661 = SHA3 0x0 0x40
0xc7f: V662 = S[V661]
0xc80: V663 = EQ V662 S5
0xc81: V664 = ISZERO V663
0xc82: V665 = ISZERO V664
0xc83: V666 = 0x8ca
0xc86: THROWI V665
---
Entry stack: [S2, S1, S0]
Stack pops: 14
Stack additions: [0x0, V649, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0xc87
[0xc87:0xced]
---
Predecessors: [0xc0d]
Successors: [0xcee]
---
0xc87 PUSH1 0x0
0xc89 DUP1
0xc8a REVERT
0xc8b JUMPDEST
0xc8c PUSH2 0x8d6
0xc8f DUP7
0xc90 DUP7
0xc91 DUP7
0xc92 DUP7
0xc93 PUSH2 0xcce
0xc96 JUMP
0xc97 JUMPDEST
0xc98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcad AND
0xcae PUSH1 0x2
0xcb0 PUSH1 0x0
0xcb2 SWAP1
0xcb3 SLOAD
0xcb4 SWAP1
0xcb5 PUSH2 0x100
0xcb8 EXP
0xcb9 SWAP1
0xcba DIV
0xcbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd0 AND
0xcd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce6 AND
0xce7 EQ
0xce8 ISZERO
0xce9 ISZERO
0xcea PUSH2 0x931
0xced JUMPI
---
0xc87: V667 = 0x0
0xc8a: REVERT 0x0 0x0
0xc8b: JUMPDEST 
0xc8c: V668 = 0x8d6
0xc93: V669 = 0xcce
0xc96: THROW 
0xc97: JUMPDEST 
0xc98: V670 = 0xffffffffffffffffffffffffffffffffffffffff
0xcad: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xcae: V672 = 0x2
0xcb0: V673 = 0x0
0xcb3: V674 = S[0x2]
0xcb5: V675 = 0x100
0xcb8: V676 = EXP 0x100 0x0
0xcba: V677 = DIV V674 0x1
0xcbb: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd0: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xcd1: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xce6: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xce7: V682 = EQ V681 V671
0xce8: V683 = ISZERO V682
0xce9: V684 = ISZERO V683
0xcea: V685 = 0x931
0xced: THROWI V684
---
Entry stack: [S7, S6, S5, S4, S3, S2, V649, 0x0]
Stack pops: 0
Stack additions: [S2, S3, S4, S5, 0x8d6, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0xcee
[0xcee:0xd7b]
---
Predecessors: [0xc87]
Successors: [0xd7c]
---
0xcee PUSH1 0x0
0xcf0 DUP1
0xcf1 REVERT
0xcf2 JUMPDEST
0xcf3 DUP6
0xcf4 PUSH1 0x0
0xcf6 NOT
0xcf7 AND
0xcf8 DUP3
0xcf9 DUP10
0xcfa DUP10
0xcfb PUSH1 0x3
0xcfd SLOAD
0xcfe PUSH1 0x40
0xd00 MLOAD
0xd01 PUSH1 0x20
0xd03 ADD
0xd04 DUP1
0xd05 DUP6
0xd06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1b AND
0xd1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd31 AND
0xd32 PUSH13 0x1000000000000000000000000
0xd40 MUL
0xd41 DUP2
0xd42 MSTORE
0xd43 PUSH1 0x14
0xd45 ADD
0xd46 DUP5
0xd47 DUP2
0xd48 MSTORE
0xd49 PUSH1 0x20
0xd4b ADD
0xd4c DUP4
0xd4d DUP2
0xd4e MSTORE
0xd4f PUSH1 0x20
0xd51 ADD
0xd52 DUP3
0xd53 DUP2
0xd54 MSTORE
0xd55 PUSH1 0x20
0xd57 ADD
0xd58 SWAP5
0xd59 POP
0xd5a POP
0xd5b POP
0xd5c POP
0xd5d POP
0xd5e PUSH1 0x40
0xd60 MLOAD
0xd61 PUSH1 0x20
0xd63 DUP2
0xd64 DUP4
0xd65 SUB
0xd66 SUB
0xd67 DUP2
0xd68 MSTORE
0xd69 SWAP1
0xd6a PUSH1 0x40
0xd6c MSTORE
0xd6d PUSH1 0x40
0xd6f MLOAD
0xd70 DUP1
0xd71 DUP3
0xd72 DUP1
0xd73 MLOAD
0xd74 SWAP1
0xd75 PUSH1 0x20
0xd77 ADD
0xd78 SWAP1
0xd79 DUP1
0xd7a DUP4
0xd7b DUP4
---
0xcee: V686 = 0x0
0xcf1: REVERT 0x0 0x0
0xcf2: JUMPDEST 
0xcf4: V687 = 0x0
0xcf6: V688 = NOT 0x0
0xcf7: V689 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S5
0xcfb: V690 = 0x3
0xcfd: V691 = S[0x3]
0xcfe: V692 = 0x40
0xd00: V693 = M[0x40]
0xd01: V694 = 0x20
0xd03: V695 = ADD 0x20 V693
0xd06: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1b: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xd1c: V698 = 0xffffffffffffffffffffffffffffffffffffffff
0xd31: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0xd32: V700 = 0x1000000000000000000000000
0xd40: V701 = MUL 0x1000000000000000000000000 V699
0xd42: M[V695] = V701
0xd43: V702 = 0x14
0xd45: V703 = ADD 0x14 V695
0xd48: M[V703] = S7
0xd49: V704 = 0x20
0xd4b: V705 = ADD 0x20 V703
0xd4e: M[V705] = S6
0xd4f: V706 = 0x20
0xd51: V707 = ADD 0x20 V705
0xd54: M[V707] = V691
0xd55: V708 = 0x20
0xd57: V709 = ADD 0x20 V707
0xd5e: V710 = 0x40
0xd60: V711 = M[0x40]
0xd61: V712 = 0x20
0xd65: V713 = SUB V709 V711
0xd66: V714 = SUB V713 0x20
0xd68: M[V711] = V714
0xd6a: V715 = 0x40
0xd6c: M[0x40] = V709
0xd6d: V716 = 0x40
0xd6f: V717 = M[0x40]
0xd73: V718 = M[V711]
0xd75: V719 = 0x20
0xd77: V720 = ADD 0x20 V711
---
Entry stack: []
Stack pops: 0
Stack additions: [V720, V717, V718, V718, V720, V717, V717, V711, V689, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0xd7c
[0xd7c:0xd86]
---
Predecessors: [0xcee]
Successors: [0xd87]
---
0xd7c JUMPDEST
0xd7d PUSH1 0x20
0xd7f DUP4
0xd80 LT
0xd81 ISZERO
0xd82 ISZERO
0xd83 PUSH2 0x9e0
0xd86 JUMPI
---
0xd7c: JUMPDEST 
0xd7d: V721 = 0x20
0xd80: V722 = LT V718 0x20
0xd81: V723 = ISZERO V722
0xd82: V724 = ISZERO V723
0xd83: V725 = 0x9e0
0xd86: THROWI V724
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, V689, V711, V717, V717, V720, V718, V718, V717, V720]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, V689, V711, V717, V717, V720, V718, V718, V717, V720]

================================

Block 0xd87
[0xd87:0xdd9]
---
Predecessors: [0xd7c]
Successors: [0xdda]
---
0xd87 DUP1
0xd88 MLOAD
0xd89 DUP3
0xd8a MSTORE
0xd8b PUSH1 0x20
0xd8d DUP3
0xd8e ADD
0xd8f SWAP2
0xd90 POP
0xd91 PUSH1 0x20
0xd93 DUP2
0xd94 ADD
0xd95 SWAP1
0xd96 POP
0xd97 PUSH1 0x20
0xd99 DUP4
0xd9a SUB
0xd9b SWAP3
0xd9c POP
0xd9d PUSH2 0x9bb
0xda0 JUMP
0xda1 JUMPDEST
0xda2 PUSH1 0x1
0xda4 DUP4
0xda5 PUSH1 0x20
0xda7 SUB
0xda8 PUSH2 0x100
0xdab EXP
0xdac SUB
0xdad DUP1
0xdae NOT
0xdaf DUP3
0xdb0 MLOAD
0xdb1 AND
0xdb2 DUP2
0xdb3 DUP5
0xdb4 MLOAD
0xdb5 AND
0xdb6 DUP1
0xdb7 DUP3
0xdb8 OR
0xdb9 DUP6
0xdba MSTORE
0xdbb POP
0xdbc POP
0xdbd POP
0xdbe POP
0xdbf POP
0xdc0 POP
0xdc1 SWAP1
0xdc2 POP
0xdc3 ADD
0xdc4 SWAP2
0xdc5 POP
0xdc6 POP
0xdc7 PUSH1 0x40
0xdc9 MLOAD
0xdca DUP1
0xdcb SWAP2
0xdcc SUB
0xdcd SWAP1
0xdce SHA3
0xdcf PUSH1 0x0
0xdd1 NOT
0xdd2 AND
0xdd3 EQ
0xdd4 ISZERO
0xdd5 ISZERO
0xdd6 PUSH2 0xa1d
0xdd9 JUMPI
---
0xd88: V726 = M[V720]
0xd8a: M[V717] = V726
0xd8b: V727 = 0x20
0xd8e: V728 = ADD V717 0x20
0xd91: V729 = 0x20
0xd94: V730 = ADD V720 0x20
0xd97: V731 = 0x20
0xd9a: V732 = SUB V718 0x20
0xd9d: V733 = 0x9bb
0xda0: THROW 
0xda1: JUMPDEST 
0xda2: V734 = 0x1
0xda5: V735 = 0x20
0xda7: V736 = SUB 0x20 S2
0xda8: V737 = 0x100
0xdab: V738 = EXP 0x100 V736
0xdac: V739 = SUB V738 0x1
0xdae: V740 = NOT V739
0xdb0: V741 = M[S0]
0xdb1: V742 = AND V741 V740
0xdb4: V743 = M[S1]
0xdb5: V744 = AND V743 V739
0xdb8: V745 = OR V742 V744
0xdba: M[S1] = V745
0xdc3: V746 = ADD S3 S5
0xdc7: V747 = 0x40
0xdc9: V748 = M[0x40]
0xdcc: V749 = SUB V746 V748
0xdce: V750 = SHA3 V748 V749
0xdcf: V751 = 0x0
0xdd1: V752 = NOT 0x0
0xdd2: V753 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V750
0xdd3: V754 = EQ V753 S8
0xdd4: V755 = ISZERO V754
0xdd5: V756 = ISZERO V755
0xdd6: V757 = 0xa1d
0xdd9: THROWI V756
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, V689, V711, V717, V717, V720, V718, V718, V717, V720]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xdda
[0xdda:0xea1]
---
Predecessors: [0xd87]
Successors: [0xea2]
---
0xdda PUSH1 0x0
0xddc DUP1
0xddd REVERT
0xdde JUMPDEST
0xddf PUSH1 0x1
0xde1 PUSH1 0x0
0xde3 SWAP1
0xde4 SLOAD
0xde5 SWAP1
0xde6 PUSH2 0x100
0xde9 EXP
0xdea SWAP1
0xdeb DIV
0xdec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe01 AND
0xe02 SWAP1
0xe03 POP
0xe04 DUP1
0xe05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1a AND
0xe1b PUSH4 0xa9059cbb
0xe20 DUP4
0xe21 DUP10
0xe22 PUSH1 0x40
0xe24 MLOAD
0xe25 DUP4
0xe26 PUSH4 0xffffffff
0xe2b AND
0xe2c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe4a MUL
0xe4b DUP2
0xe4c MSTORE
0xe4d PUSH1 0x4
0xe4f ADD
0xe50 DUP1
0xe51 DUP4
0xe52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe67 AND
0xe68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7d AND
0xe7e DUP2
0xe7f MSTORE
0xe80 PUSH1 0x20
0xe82 ADD
0xe83 DUP3
0xe84 DUP2
0xe85 MSTORE
0xe86 PUSH1 0x20
0xe88 ADD
0xe89 SWAP3
0xe8a POP
0xe8b POP
0xe8c POP
0xe8d PUSH1 0x20
0xe8f PUSH1 0x40
0xe91 MLOAD
0xe92 DUP1
0xe93 DUP4
0xe94 SUB
0xe95 DUP2
0xe96 PUSH1 0x0
0xe98 DUP8
0xe99 DUP1
0xe9a EXTCODESIZE
0xe9b ISZERO
0xe9c DUP1
0xe9d ISZERO
0xe9e PUSH2 0xae5
0xea1 JUMPI
---
0xdda: V758 = 0x0
0xddd: REVERT 0x0 0x0
0xdde: JUMPDEST 
0xddf: V759 = 0x1
0xde1: V760 = 0x0
0xde4: V761 = S[0x1]
0xde6: V762 = 0x100
0xde9: V763 = EXP 0x100 0x0
0xdeb: V764 = DIV V761 0x1
0xdec: V765 = 0xffffffffffffffffffffffffffffffffffffffff
0xe01: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V764
0xe05: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1a: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V766
0xe1b: V769 = 0xa9059cbb
0xe22: V770 = 0x40
0xe24: V771 = M[0x40]
0xe26: V772 = 0xffffffff
0xe2b: V773 = AND 0xffffffff 0xa9059cbb
0xe2c: V774 = 0x100000000000000000000000000000000000000000000000000000000
0xe4a: V775 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xe4c: M[V771] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xe4d: V776 = 0x4
0xe4f: V777 = ADD 0x4 V771
0xe52: V778 = 0xffffffffffffffffffffffffffffffffffffffff
0xe67: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xe68: V780 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7d: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V779
0xe7f: M[V777] = V781
0xe80: V782 = 0x20
0xe82: V783 = ADD 0x20 V777
0xe85: M[V783] = S6
0xe86: V784 = 0x20
0xe88: V785 = ADD 0x20 V783
0xe8d: V786 = 0x20
0xe8f: V787 = 0x40
0xe91: V788 = M[0x40]
0xe94: V789 = SUB V785 V788
0xe96: V790 = 0x0
0xe9a: V791 = EXTCODESIZE V768
0xe9b: V792 = ISZERO V791
0xe9d: V793 = ISZERO V792
0xe9e: V794 = 0xae5
0xea1: THROWI V793
---
Entry stack: []
Stack pops: 0
Stack additions: [V792, V768, 0x0, V788, V789, V788, 0x20, V785, 0xa9059cbb, V768, V766, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xea2
[0xea2:0xea5]
---
Predecessors: [0xdda]
Successors: []
---
0xea2 PUSH1 0x0
0xea4 DUP1
0xea5 REVERT
---
0xea2: V795 = 0x0
0xea5: REVERT 0x0 0x0
---
Entry stack: [S16, S15, S14, S13, S12, S11, V766, V768, 0xa9059cbb, V785, 0x20, V788, V789, V788, 0x0, V768, V792]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, V766, V768, 0xa9059cbb, V785, 0x20, V788, V789, V788, 0x0, V768, V792]

================================

Block 0xea6
[0xea6:0xeb0]
---
Predecessors: [0x107f]
Successors: [0xeb1]
---
0xea6 JUMPDEST
0xea7 POP
0xea8 GAS
0xea9 CALL
0xeaa ISZERO
0xeab DUP1
0xeac ISZERO
0xead PUSH2 0xaf9
0xeb0 JUMPI
---
0xea6: JUMPDEST 
0xea8: V796 = GAS
0xea9: V797 = CALL V796 0xccb S2 S3 S4 S5 S6
0xeaa: V798 = ISZERO V797
0xeac: V799 = ISZERO V798
0xead: V800 = 0xaf9
0xeb0: THROWI V799
---
Entry stack: [S2, 0xccb, S0]
Stack pops: 7
Stack additions: [V798]
Exit stack: [V798]

================================

Block 0xeb1
[0xeb1:0xecb]
---
Predecessors: [0xea6]
Successors: [0xecc]
---
0xeb1 RETURNDATASIZE
0xeb2 PUSH1 0x0
0xeb4 DUP1
0xeb5 RETURNDATACOPY
0xeb6 RETURNDATASIZE
0xeb7 PUSH1 0x0
0xeb9 REVERT
0xeba JUMPDEST
0xebb POP
0xebc POP
0xebd POP
0xebe POP
0xebf PUSH1 0x40
0xec1 MLOAD
0xec2 RETURNDATASIZE
0xec3 PUSH1 0x20
0xec5 DUP2
0xec6 LT
0xec7 ISZERO
0xec8 PUSH2 0xb0f
0xecb JUMPI
---
0xeb1: V801 = RETURNDATASIZE
0xeb2: V802 = 0x0
0xeb5: RETURNDATACOPY 0x0 0x0 V801
0xeb6: V803 = RETURNDATASIZE
0xeb7: V804 = 0x0
0xeb9: REVERT 0x0 V803
0xeba: JUMPDEST 
0xebf: V805 = 0x40
0xec1: V806 = M[0x40]
0xec2: V807 = RETURNDATASIZE
0xec3: V808 = 0x20
0xec6: V809 = LT V807 0x20
0xec7: V810 = ISZERO V809
0xec8: V811 = 0xb0f
0xecb: THROWI V810
---
Entry stack: [V798]
Stack pops: 0
Stack additions: [V807, V806]
Exit stack: []

================================

Block 0xecc
[0xecc:0xfdf]
---
Predecessors: [0xeb1]
Successors: [0xfe0]
---
0xecc PUSH1 0x0
0xece DUP1
0xecf REVERT
0xed0 JUMPDEST
0xed1 DUP2
0xed2 ADD
0xed3 SWAP1
0xed4 DUP1
0xed5 DUP1
0xed6 MLOAD
0xed7 SWAP1
0xed8 PUSH1 0x20
0xeda ADD
0xedb SWAP1
0xedc SWAP3
0xedd SWAP2
0xede SWAP1
0xedf POP
0xee0 POP
0xee1 POP
0xee2 POP
0xee3 PUSH1 0x1
0xee5 PUSH1 0x4
0xee7 PUSH1 0x0
0xee9 DUP5
0xeea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeff AND
0xf00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf15 AND
0xf16 DUP2
0xf17 MSTORE
0xf18 PUSH1 0x20
0xf1a ADD
0xf1b SWAP1
0xf1c DUP2
0xf1d MSTORE
0xf1e PUSH1 0x20
0xf20 ADD
0xf21 PUSH1 0x0
0xf23 SHA3
0xf24 PUSH1 0x0
0xf26 DUP3
0xf27 DUP3
0xf28 SLOAD
0xf29 ADD
0xf2a SWAP3
0xf2b POP
0xf2c POP
0xf2d DUP2
0xf2e SWAP1
0xf2f SSTORE
0xf30 POP
0xf31 DUP8
0xf32 DUP3
0xf33 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf48 AND
0xf49 PUSH32 0x947388a4a9d9f5a626e1867acb228f28168d398c4c1f411e50428581024f81b8
0xf6a DUP10
0xf6b PUSH1 0x40
0xf6d MLOAD
0xf6e DUP1
0xf6f DUP3
0xf70 DUP2
0xf71 MSTORE
0xf72 PUSH1 0x20
0xf74 ADD
0xf75 SWAP2
0xf76 POP
0xf77 POP
0xf78 PUSH1 0x40
0xf7a MLOAD
0xf7b DUP1
0xf7c SWAP2
0xf7d SUB
0xf7e SWAP1
0xf7f LOG3
0xf80 POP
0xf81 POP
0xf82 POP
0xf83 POP
0xf84 POP
0xf85 POP
0xf86 POP
0xf87 POP
0xf88 JUMP
0xf89 JUMPDEST
0xf8a PUSH1 0x0
0xf8c DUP1
0xf8d SWAP1
0xf8e SLOAD
0xf8f SWAP1
0xf90 PUSH2 0x100
0xf93 EXP
0xf94 SWAP1
0xf95 DIV
0xf96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfab AND
0xfac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc1 AND
0xfc2 CALLER
0xfc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd8 AND
0xfd9 EQ
0xfda ISZERO
0xfdb ISZERO
0xfdc PUSH2 0xc23
0xfdf JUMPI
---
0xecc: V812 = 0x0
0xecf: REVERT 0x0 0x0
0xed0: JUMPDEST 
0xed2: V813 = ADD S1 S0
0xed6: V814 = M[S1]
0xed8: V815 = 0x20
0xeda: V816 = ADD 0x20 S1
0xee3: V817 = 0x1
0xee5: V818 = 0x4
0xee7: V819 = 0x0
0xeea: V820 = 0xffffffffffffffffffffffffffffffffffffffff
0xeff: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf00: V822 = 0xffffffffffffffffffffffffffffffffffffffff
0xf15: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0xf17: M[0x0] = V823
0xf18: V824 = 0x20
0xf1a: V825 = ADD 0x20 0x0
0xf1d: M[0x20] = 0x4
0xf1e: V826 = 0x20
0xf20: V827 = ADD 0x20 0x20
0xf21: V828 = 0x0
0xf23: V829 = SHA3 0x0 0x40
0xf24: V830 = 0x0
0xf28: V831 = S[V829]
0xf29: V832 = ADD V831 0x1
0xf2f: S[V829] = V832
0xf33: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xf48: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf49: V835 = 0x947388a4a9d9f5a626e1867acb228f28168d398c4c1f411e50428581024f81b8
0xf6b: V836 = 0x40
0xf6d: V837 = M[0x40]
0xf71: M[V837] = S8
0xf72: V838 = 0x20
0xf74: V839 = ADD 0x20 V837
0xf78: V840 = 0x40
0xf7a: V841 = M[0x40]
0xf7d: V842 = SUB V839 V841
0xf7f: LOG V841 V842 0x947388a4a9d9f5a626e1867acb228f28168d398c4c1f411e50428581024f81b8 V834 S9
0xf88: JUMP S10
0xf89: JUMPDEST 
0xf8a: V843 = 0x0
0xf8e: V844 = S[0x0]
0xf90: V845 = 0x100
0xf93: V846 = EXP 0x100 0x0
0xf95: V847 = DIV V844 0x1
0xf96: V848 = 0xffffffffffffffffffffffffffffffffffffffff
0xfab: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0xfac: V850 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc1: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0xfc2: V852 = CALLER
0xfc3: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd8: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0xfd9: V855 = EQ V854 V851
0xfda: V856 = ISZERO V855
0xfdb: V857 = ISZERO V856
0xfdc: V858 = 0xc23
0xfdf: THROWI V857
---
Entry stack: [V806, V807]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfe0
[0xfe0:0x107e]
---
Predecessors: [0xecc]
Successors: [0x107f]
---
0xfe0 PUSH1 0x0
0xfe2 DUP1
0xfe3 REVERT
0xfe4 JUMPDEST
0xfe5 DUP1
0xfe6 PUSH1 0x2
0xfe8 PUSH1 0x0
0xfea PUSH2 0x100
0xfed EXP
0xfee DUP2
0xfef SLOAD
0xff0 DUP2
0xff1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1006 MUL
0x1007 NOT
0x1008 AND
0x1009 SWAP1
0x100a DUP4
0x100b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1020 AND
0x1021 MUL
0x1022 OR
0x1023 SWAP1
0x1024 SSTORE
0x1025 POP
0x1026 POP
0x1027 JUMP
0x1028 JUMPDEST
0x1029 PUSH1 0x0
0x102b DUP1
0x102c SWAP1
0x102d SLOAD
0x102e SWAP1
0x102f PUSH2 0x100
0x1032 EXP
0x1033 SWAP1
0x1034 DIV
0x1035 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104a AND
0x104b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1060 AND
0x1061 CALLER
0x1062 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1077 AND
0x1078 EQ
0x1079 ISZERO
0x107a ISZERO
0x107b PUSH2 0xcc2
0x107e JUMPI
---
0xfe0: V859 = 0x0
0xfe3: REVERT 0x0 0x0
0xfe4: JUMPDEST 
0xfe6: V860 = 0x2
0xfe8: V861 = 0x0
0xfea: V862 = 0x100
0xfed: V863 = EXP 0x100 0x0
0xfef: V864 = S[0x2]
0xff1: V865 = 0xffffffffffffffffffffffffffffffffffffffff
0x1006: V866 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1007: V867 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1008: V868 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V864
0x100b: V869 = 0xffffffffffffffffffffffffffffffffffffffff
0x1020: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1021: V871 = MUL V870 0x1
0x1022: V872 = OR V871 V868
0x1024: S[0x2] = V872
0x1027: JUMP S1
0x1028: JUMPDEST 
0x1029: V873 = 0x0
0x102d: V874 = S[0x0]
0x102f: V875 = 0x100
0x1032: V876 = EXP 0x100 0x0
0x1034: V877 = DIV V874 0x1
0x1035: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0x104a: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0x104b: V880 = 0xffffffffffffffffffffffffffffffffffffffff
0x1060: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V879
0x1061: V882 = CALLER
0x1062: V883 = 0xffffffffffffffffffffffffffffffffffffffff
0x1077: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V882
0x1078: V885 = EQ V884 V881
0x1079: V886 = ISZERO V885
0x107a: V887 = ISZERO V886
0x107b: V888 = 0xcc2
0x107e: THROWI V887
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x107f
[0x107f:0x108b]
---
Predecessors: [0xfe0]
Successors: [0xea6]
---
0x107f PUSH1 0x0
0x1081 DUP1
0x1082 REVERT
0x1083 JUMPDEST
0x1084 PUSH2 0xccb
0x1087 DUP2
0x1088 PUSH2 0xea6
0x108b JUMP
---
0x107f: V889 = 0x0
0x1082: REVERT 0x0 0x0
0x1083: JUMPDEST 
0x1084: V890 = 0xccb
0x1088: V891 = 0xea6
0x108b: JUMP 0xea6
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, 0xccb, S0]
Exit stack: []

================================

Block 0x108c
[0x108c:0x1109]
---
Predecessors: []
Successors: [0x110a]
---
0x108c JUMPDEST
0x108d POP
0x108e JUMP
0x108f JUMPDEST
0x1090 PUSH1 0x0
0x1092 PUSH1 0x60
0x1094 PUSH1 0x0
0x1096 DUP1
0x1097 PUSH1 0x60
0x1099 PUSH1 0x40
0x109b MLOAD
0x109c SWAP1
0x109d DUP2
0x109e ADD
0x109f PUSH1 0x40
0x10a1 MSTORE
0x10a2 DUP1
0x10a3 PUSH1 0x21
0x10a5 DUP2
0x10a6 MSTORE
0x10a7 PUSH1 0x20
0x10a9 ADD
0x10aa PUSH32 0x1945766f6c7574696f6e4c616e64205369676e6564204d6573736167653a0a33
0x10cb DUP2
0x10cc MSTORE
0x10cd PUSH1 0x20
0x10cf ADD
0x10d0 PUSH32 0x3200000000000000000000000000000000000000000000000000000000000000
0x10f1 DUP2
0x10f2 MSTORE
0x10f3 POP
0x10f4 SWAP3
0x10f5 POP
0x10f6 DUP3
0x10f7 DUP9
0x10f8 PUSH1 0x40
0x10fa MLOAD
0x10fb PUSH1 0x20
0x10fd ADD
0x10fe DUP1
0x10ff DUP4
0x1100 DUP1
0x1101 MLOAD
0x1102 SWAP1
0x1103 PUSH1 0x20
0x1105 ADD
0x1106 SWAP1
0x1107 DUP1
0x1108 DUP4
0x1109 DUP4
---
0x108c: JUMPDEST 
0x108e: JUMP S1
0x108f: JUMPDEST 
0x1090: V892 = 0x0
0x1092: V893 = 0x60
0x1094: V894 = 0x0
0x1097: V895 = 0x60
0x1099: V896 = 0x40
0x109b: V897 = M[0x40]
0x109e: V898 = ADD V897 0x60
0x109f: V899 = 0x40
0x10a1: M[0x40] = V898
0x10a3: V900 = 0x21
0x10a6: M[V897] = 0x21
0x10a7: V901 = 0x20
0x10a9: V902 = ADD 0x20 V897
0x10aa: V903 = 0x1945766f6c7574696f6e4c616e64205369676e6564204d6573736167653a0a33
0x10cc: M[V902] = 0x1945766f6c7574696f6e4c616e64205369676e6564204d6573736167653a0a33
0x10cd: V904 = 0x20
0x10cf: V905 = ADD 0x20 V902
0x10d0: V906 = 0x3200000000000000000000000000000000000000000000000000000000000000
0x10f2: M[V905] = 0x3200000000000000000000000000000000000000000000000000000000000000
0x10f8: V907 = 0x40
0x10fa: V908 = M[0x40]
0x10fb: V909 = 0x20
0x10fd: V910 = ADD 0x20 V908
0x1101: V911 = M[V897]
0x1103: V912 = 0x20
0x1105: V913 = ADD 0x20 V897
---
Entry stack: []
Stack pops: 4
Stack additions: [V913, V910, V911, V911, V913, V910, V910, S3, V897, 0x0, 0x0, V897, 0x0, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x110a
[0x110a:0x1114]
---
Predecessors: [0x108c]
Successors: [0x1115]
---
0x110a JUMPDEST
0x110b PUSH1 0x20
0x110d DUP4
0x110e LT
0x110f ISZERO
0x1110 ISZERO
0x1111 PUSH2 0xd6e
0x1114 JUMPI
---
0x110a: JUMPDEST 
0x110b: V914 = 0x20
0x110e: V915 = LT V911 0x20
0x110f: V916 = ISZERO V915
0x1110: V917 = ISZERO V916
0x1111: V918 = 0xd6e
0x1114: THROWI V917
---
Entry stack: [S16, S15, S14, S13, 0x0, V897, 0x0, 0x0, V897, S7, V910, V910, V913, V911, V911, V910, V913]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S16, S15, S14, S13, 0x0, V897, 0x0, 0x0, V897, S7, V910, V910, V913, V911, V911, V910, V913]

================================

Block 0x1115
[0x1115:0x1181]
---
Predecessors: [0x110a]
Successors: [0x1182]
---
0x1115 DUP1
0x1116 MLOAD
0x1117 DUP3
0x1118 MSTORE
0x1119 PUSH1 0x20
0x111b DUP3
0x111c ADD
0x111d SWAP2
0x111e POP
0x111f PUSH1 0x20
0x1121 DUP2
0x1122 ADD
0x1123 SWAP1
0x1124 POP
0x1125 PUSH1 0x20
0x1127 DUP4
0x1128 SUB
0x1129 SWAP3
0x112a POP
0x112b PUSH2 0xd49
0x112e JUMP
0x112f JUMPDEST
0x1130 PUSH1 0x1
0x1132 DUP4
0x1133 PUSH1 0x20
0x1135 SUB
0x1136 PUSH2 0x100
0x1139 EXP
0x113a SUB
0x113b DUP1
0x113c NOT
0x113d DUP3
0x113e MLOAD
0x113f AND
0x1140 DUP2
0x1141 DUP5
0x1142 MLOAD
0x1143 AND
0x1144 DUP1
0x1145 DUP3
0x1146 OR
0x1147 DUP6
0x1148 MSTORE
0x1149 POP
0x114a POP
0x114b POP
0x114c POP
0x114d POP
0x114e POP
0x114f SWAP1
0x1150 POP
0x1151 ADD
0x1152 DUP3
0x1153 PUSH1 0x0
0x1155 NOT
0x1156 AND
0x1157 PUSH1 0x0
0x1159 NOT
0x115a AND
0x115b DUP2
0x115c MSTORE
0x115d PUSH1 0x20
0x115f ADD
0x1160 SWAP3
0x1161 POP
0x1162 POP
0x1163 POP
0x1164 PUSH1 0x40
0x1166 MLOAD
0x1167 PUSH1 0x20
0x1169 DUP2
0x116a DUP4
0x116b SUB
0x116c SUB
0x116d DUP2
0x116e MSTORE
0x116f SWAP1
0x1170 PUSH1 0x40
0x1172 MSTORE
0x1173 PUSH1 0x40
0x1175 MLOAD
0x1176 DUP1
0x1177 DUP3
0x1178 DUP1
0x1179 MLOAD
0x117a SWAP1
0x117b PUSH1 0x20
0x117d ADD
0x117e SWAP1
0x117f DUP1
0x1180 DUP4
0x1181 DUP4
---
0x1116: V919 = M[V913]
0x1118: M[V910] = V919
0x1119: V920 = 0x20
0x111c: V921 = ADD V910 0x20
0x111f: V922 = 0x20
0x1122: V923 = ADD V913 0x20
0x1125: V924 = 0x20
0x1128: V925 = SUB V911 0x20
0x112b: V926 = 0xd49
0x112e: THROW 
0x112f: JUMPDEST 
0x1130: V927 = 0x1
0x1133: V928 = 0x20
0x1135: V929 = SUB 0x20 S2
0x1136: V930 = 0x100
0x1139: V931 = EXP 0x100 V929
0x113a: V932 = SUB V931 0x1
0x113c: V933 = NOT V932
0x113e: V934 = M[S0]
0x113f: V935 = AND V934 V933
0x1142: V936 = M[S1]
0x1143: V937 = AND V936 V932
0x1146: V938 = OR V935 V937
0x1148: M[S1] = V938
0x1151: V939 = ADD S3 S5
0x1153: V940 = 0x0
0x1155: V941 = NOT 0x0
0x1156: V942 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S7
0x1157: V943 = 0x0
0x1159: V944 = NOT 0x0
0x115a: V945 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V942
0x115c: M[V939] = V945
0x115d: V946 = 0x20
0x115f: V947 = ADD 0x20 V939
0x1164: V948 = 0x40
0x1166: V949 = M[0x40]
0x1167: V950 = 0x20
0x116b: V951 = SUB V947 V949
0x116c: V952 = SUB V951 0x20
0x116e: M[V949] = V952
0x1170: V953 = 0x40
0x1172: M[0x40] = V947
0x1173: V954 = 0x40
0x1175: V955 = M[0x40]
0x1179: V956 = M[V949]
0x117b: V957 = 0x20
0x117d: V958 = ADD 0x20 V949
---
Entry stack: [S16, S15, S14, S13, 0x0, V897, 0x0, 0x0, V897, S7, V910, V910, V913, V911, V911, V910, V913]
Stack pops: 3
Stack additions: [V958, V955, V956, V956, V958, V955, V955, V949]
Exit stack: []

================================

Block 0x1182
[0x1182:0x118c]
---
Predecessors: [0x1115]
Successors: [0x118d]
---
0x1182 JUMPDEST
0x1183 PUSH1 0x20
0x1185 DUP4
0x1186 LT
0x1187 ISZERO
0x1188 ISZERO
0x1189 PUSH2 0xde6
0x118c JUMPI
---
0x1182: JUMPDEST 
0x1183: V959 = 0x20
0x1186: V960 = LT V956 0x20
0x1187: V961 = ISZERO V960
0x1188: V962 = ISZERO V961
0x1189: V963 = 0xde6
0x118c: THROWI V962
---
Entry stack: [V949, V955, V955, V958, V956, V956, V955, V958]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V949, V955, V955, V958, V956, V956, V955, V958]

================================

Block 0x118d
[0x118d:0x1243]
---
Predecessors: [0x1182]
Successors: [0x1244]
---
0x118d DUP1
0x118e MLOAD
0x118f DUP3
0x1190 MSTORE
0x1191 PUSH1 0x20
0x1193 DUP3
0x1194 ADD
0x1195 SWAP2
0x1196 POP
0x1197 PUSH1 0x20
0x1199 DUP2
0x119a ADD
0x119b SWAP1
0x119c POP
0x119d PUSH1 0x20
0x119f DUP4
0x11a0 SUB
0x11a1 SWAP3
0x11a2 POP
0x11a3 PUSH2 0xdc1
0x11a6 JUMP
0x11a7 JUMPDEST
0x11a8 PUSH1 0x1
0x11aa DUP4
0x11ab PUSH1 0x20
0x11ad SUB
0x11ae PUSH2 0x100
0x11b1 EXP
0x11b2 SUB
0x11b3 DUP1
0x11b4 NOT
0x11b5 DUP3
0x11b6 MLOAD
0x11b7 AND
0x11b8 DUP2
0x11b9 DUP5
0x11ba MLOAD
0x11bb AND
0x11bc DUP1
0x11bd DUP3
0x11be OR
0x11bf DUP6
0x11c0 MSTORE
0x11c1 POP
0x11c2 POP
0x11c3 POP
0x11c4 POP
0x11c5 POP
0x11c6 POP
0x11c7 SWAP1
0x11c8 POP
0x11c9 ADD
0x11ca SWAP2
0x11cb POP
0x11cc POP
0x11cd PUSH1 0x40
0x11cf MLOAD
0x11d0 DUP1
0x11d1 SWAP2
0x11d2 SUB
0x11d3 SWAP1
0x11d4 SHA3
0x11d5 SWAP2
0x11d6 POP
0x11d7 PUSH1 0x1
0x11d9 DUP3
0x11da DUP9
0x11db DUP9
0x11dc DUP9
0x11dd PUSH1 0x40
0x11df MLOAD
0x11e0 PUSH1 0x0
0x11e2 DUP2
0x11e3 MSTORE
0x11e4 PUSH1 0x20
0x11e6 ADD
0x11e7 PUSH1 0x40
0x11e9 MSTORE
0x11ea PUSH1 0x40
0x11ec MLOAD
0x11ed DUP1
0x11ee DUP6
0x11ef PUSH1 0x0
0x11f1 NOT
0x11f2 AND
0x11f3 PUSH1 0x0
0x11f5 NOT
0x11f6 AND
0x11f7 DUP2
0x11f8 MSTORE
0x11f9 PUSH1 0x20
0x11fb ADD
0x11fc DUP5
0x11fd PUSH1 0xff
0x11ff AND
0x1200 PUSH1 0xff
0x1202 AND
0x1203 DUP2
0x1204 MSTORE
0x1205 PUSH1 0x20
0x1207 ADD
0x1208 DUP4
0x1209 PUSH1 0x0
0x120b NOT
0x120c AND
0x120d PUSH1 0x0
0x120f NOT
0x1210 AND
0x1211 DUP2
0x1212 MSTORE
0x1213 PUSH1 0x20
0x1215 ADD
0x1216 DUP3
0x1217 PUSH1 0x0
0x1219 NOT
0x121a AND
0x121b PUSH1 0x0
0x121d NOT
0x121e AND
0x121f DUP2
0x1220 MSTORE
0x1221 PUSH1 0x20
0x1223 ADD
0x1224 SWAP5
0x1225 POP
0x1226 POP
0x1227 POP
0x1228 POP
0x1229 POP
0x122a PUSH1 0x20
0x122c PUSH1 0x40
0x122e MLOAD
0x122f PUSH1 0x20
0x1231 DUP2
0x1232 SUB
0x1233 SWAP1
0x1234 DUP1
0x1235 DUP5
0x1236 SUB
0x1237 SWAP1
0x1238 PUSH1 0x0
0x123a DUP7
0x123b GAS
0x123c CALL
0x123d ISZERO
0x123e DUP1
0x123f ISZERO
0x1240 PUSH2 0xe8c
0x1243 JUMPI
---
0x118e: V964 = M[V958]
0x1190: M[V955] = V964
0x1191: V965 = 0x20
0x1194: V966 = ADD V955 0x20
0x1197: V967 = 0x20
0x119a: V968 = ADD V958 0x20
0x119d: V969 = 0x20
0x11a0: V970 = SUB V956 0x20
0x11a3: V971 = 0xdc1
0x11a6: THROW 
0x11a7: JUMPDEST 
0x11a8: V972 = 0x1
0x11ab: V973 = 0x20
0x11ad: V974 = SUB 0x20 S2
0x11ae: V975 = 0x100
0x11b1: V976 = EXP 0x100 V974
0x11b2: V977 = SUB V976 0x1
0x11b4: V978 = NOT V977
0x11b6: V979 = M[S0]
0x11b7: V980 = AND V979 V978
0x11ba: V981 = M[S1]
0x11bb: V982 = AND V981 V977
0x11be: V983 = OR V980 V982
0x11c0: M[S1] = V983
0x11c9: V984 = ADD S3 S5
0x11cd: V985 = 0x40
0x11cf: V986 = M[0x40]
0x11d2: V987 = SUB V984 V986
0x11d4: V988 = SHA3 V986 V987
0x11d7: V989 = 0x1
0x11dd: V990 = 0x40
0x11df: V991 = M[0x40]
0x11e0: V992 = 0x0
0x11e3: M[V991] = 0x0
0x11e4: V993 = 0x20
0x11e6: V994 = ADD 0x20 V991
0x11e7: V995 = 0x40
0x11e9: M[0x40] = V994
0x11ea: V996 = 0x40
0x11ec: V997 = M[0x40]
0x11ef: V998 = 0x0
0x11f1: V999 = NOT 0x0
0x11f2: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V988
0x11f3: V1001 = 0x0
0x11f5: V1002 = NOT 0x0
0x11f6: V1003 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1000
0x11f8: M[V997] = V1003
0x11f9: V1004 = 0x20
0x11fb: V1005 = ADD 0x20 V997
0x11fd: V1006 = 0xff
0x11ff: V1007 = AND 0xff S14
0x1200: V1008 = 0xff
0x1202: V1009 = AND 0xff V1007
0x1204: M[V1005] = V1009
0x1205: V1010 = 0x20
0x1207: V1011 = ADD 0x20 V1005
0x1209: V1012 = 0x0
0x120b: V1013 = NOT 0x0
0x120c: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S13
0x120d: V1015 = 0x0
0x120f: V1016 = NOT 0x0
0x1210: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1014
0x1212: M[V1011] = V1017
0x1213: V1018 = 0x20
0x1215: V1019 = ADD 0x20 V1011
0x1217: V1020 = 0x0
0x1219: V1021 = NOT 0x0
0x121a: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S12
0x121b: V1023 = 0x0
0x121d: V1024 = NOT 0x0
0x121e: V1025 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1022
0x1220: M[V1019] = V1025
0x1221: V1026 = 0x20
0x1223: V1027 = ADD 0x20 V1019
0x122a: V1028 = 0x20
0x122c: V1029 = 0x40
0x122e: V1030 = M[0x40]
0x122f: V1031 = 0x20
0x1232: V1032 = SUB V1030 0x20
0x1236: V1033 = SUB V1027 V1030
0x1238: V1034 = 0x0
0x123b: V1035 = GAS
0x123c: V1036 = CALL V1035 0x1 0x0 V1030 V1033 V1032 0x20
0x123d: V1037 = ISZERO V1036
0x123f: V1038 = ISZERO V1037
0x1240: V1039 = 0xe8c
0x1243: THROWI V1038
---
Entry stack: [V949, V955, V955, V958, V956, V956, V955, V958]
Stack pops: 3
Stack additions: [V1037, V1027, 0x1, S8, V988, S10, S11, S12, S13, S14]
Exit stack: []

================================

Block 0x1244
[0x1244:0x129e]
---
Predecessors: [0x118d]
Successors: [0x129f]
---
0x1244 RETURNDATASIZE
0x1245 PUSH1 0x0
0x1247 DUP1
0x1248 RETURNDATACOPY
0x1249 RETURNDATASIZE
0x124a PUSH1 0x0
0x124c REVERT
0x124d JUMPDEST
0x124e POP
0x124f POP
0x1250 POP
0x1251 PUSH1 0x20
0x1253 PUSH1 0x40
0x1255 MLOAD
0x1256 SUB
0x1257 MLOAD
0x1258 SWAP1
0x1259 POP
0x125a DUP1
0x125b SWAP4
0x125c POP
0x125d POP
0x125e POP
0x125f POP
0x1260 SWAP5
0x1261 SWAP4
0x1262 POP
0x1263 POP
0x1264 POP
0x1265 POP
0x1266 JUMP
0x1267 JUMPDEST
0x1268 PUSH1 0x0
0x126a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127f AND
0x1280 DUP2
0x1281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1296 AND
0x1297 EQ
0x1298 ISZERO
0x1299 ISZERO
0x129a ISZERO
0x129b PUSH2 0xee2
0x129e JUMPI
---
0x1244: V1040 = RETURNDATASIZE
0x1245: V1041 = 0x0
0x1248: RETURNDATACOPY 0x0 0x0 V1040
0x1249: V1042 = RETURNDATASIZE
0x124a: V1043 = 0x0
0x124c: REVERT 0x0 V1042
0x124d: JUMPDEST 
0x1251: V1044 = 0x20
0x1253: V1045 = 0x40
0x1255: V1046 = M[0x40]
0x1256: V1047 = SUB V1046 0x20
0x1257: V1048 = M[V1047]
0x1266: JUMP S11
0x1267: JUMPDEST 
0x1268: V1049 = 0x0
0x126a: V1050 = 0xffffffffffffffffffffffffffffffffffffffff
0x127f: V1051 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1281: V1052 = 0xffffffffffffffffffffffffffffffffffffffff
0x1296: V1053 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1297: V1054 = EQ V1053 0x0
0x1298: V1055 = ISZERO V1054
0x1299: V1056 = ISZERO V1055
0x129a: V1057 = ISZERO V1056
0x129b: V1058 = 0xee2
0x129e: THROWI V1057
---
Entry stack: [S9, S8, S7, S6, S5, V988, S3, 0x1, V1027, V1037]
Stack pops: 0
Stack additions: [V1048, S0]
Exit stack: []

================================

Block 0x129f
[0x129f:0x13aa]
---
Predecessors: [0x1244]
Successors: []
---
0x129f PUSH1 0x0
0x12a1 DUP1
0x12a2 REVERT
0x12a3 JUMPDEST
0x12a4 DUP1
0x12a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ba AND
0x12bb PUSH1 0x0
0x12bd DUP1
0x12be SWAP1
0x12bf SLOAD
0x12c0 SWAP1
0x12c1 PUSH2 0x100
0x12c4 EXP
0x12c5 SWAP1
0x12c6 DIV
0x12c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12dc AND
0x12dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f2 AND
0x12f3 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1314 PUSH1 0x40
0x1316 MLOAD
0x1317 PUSH1 0x40
0x1319 MLOAD
0x131a DUP1
0x131b SWAP2
0x131c SUB
0x131d SWAP1
0x131e LOG3
0x131f DUP1
0x1320 PUSH1 0x0
0x1322 DUP1
0x1323 PUSH2 0x100
0x1326 EXP
0x1327 DUP2
0x1328 SLOAD
0x1329 DUP2
0x132a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133f MUL
0x1340 NOT
0x1341 AND
0x1342 SWAP1
0x1343 DUP4
0x1344 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1359 AND
0x135a MUL
0x135b OR
0x135c SWAP1
0x135d SSTORE
0x135e POP
0x135f POP
0x1360 JUMP
0x1361 STOP
0x1362 LOG1
0x1363 PUSH6 0x627a7a723058
0x136a SHA3
0x136b CODECOPY
0x136c PUSH23 0x5082e3e64fcc9a5f2982a04fe68724e9abe720c410da35
0x1384 GT
0x1385 MISSING 0xe4
0x1386 MISSING 0x4e
0x1387 CALLDATACOPY
0x1388 MISSING 0x4f
0x1389 MISSING 0xbd
0x138a PUSH32 0x29
---
0x129f: V1059 = 0x0
0x12a2: REVERT 0x0 0x0
0x12a3: JUMPDEST 
0x12a5: V1060 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ba: V1061 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12bb: V1062 = 0x0
0x12bf: V1063 = S[0x0]
0x12c1: V1064 = 0x100
0x12c4: V1065 = EXP 0x100 0x0
0x12c6: V1066 = DIV V1063 0x1
0x12c7: V1067 = 0xffffffffffffffffffffffffffffffffffffffff
0x12dc: V1068 = AND 0xffffffffffffffffffffffffffffffffffffffff V1066
0x12dd: V1069 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f2: V1070 = AND 0xffffffffffffffffffffffffffffffffffffffff V1068
0x12f3: V1071 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1314: V1072 = 0x40
0x1316: V1073 = M[0x40]
0x1317: V1074 = 0x40
0x1319: V1075 = M[0x40]
0x131c: V1076 = SUB V1073 V1075
0x131e: LOG V1075 V1076 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1070 V1061
0x1320: V1077 = 0x0
0x1323: V1078 = 0x100
0x1326: V1079 = EXP 0x100 0x0
0x1328: V1080 = S[0x0]
0x132a: V1081 = 0xffffffffffffffffffffffffffffffffffffffff
0x133f: V1082 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1340: V1083 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1341: V1084 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1080
0x1344: V1085 = 0xffffffffffffffffffffffffffffffffffffffff
0x1359: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x135a: V1087 = MUL V1086 0x1
0x135b: V1088 = OR V1087 V1084
0x135d: S[0x0] = V1088
0x1360: JUMP S1
0x1361: STOP 
0x1362: LOG S0 S1 S2
0x1363: V1089 = 0x627a7a723058
0x136a: V1090 = SHA3 0x627a7a723058 S3
0x136b: CODECOPY V1090 S4 S5
0x136c: V1091 = 0x5082e3e64fcc9a5f2982a04fe68724e9abe720c410da35
0x1384: V1092 = GT 0x5082e3e64fcc9a5f2982a04fe68724e9abe720c410da35 S6
0x1385: MISSING 0xe4
0x1386: MISSING 0x4e
0x1387: CALLDATACOPY S0 S1 S2
0x1388: MISSING 0x4f
0x1389: MISSING 0xbd
0x138a: V1093 = 0x29
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V1092, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x715018a6
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x10d, 0x164, 0x168

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x73
Exit block: 0x88
Body: 0x73, 0x7b, 0x7f, 0x88, 0x20f

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0xca
Exit block: 0x10b
Body: 0xca, 0xd2, 0xd6, 0x10b, 0x234, 0x28b, 0x28f, 0x298, 0x29b, 0x2d3, 0x2d7

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

