Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x41c0e1b5
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x41c0e1b5
0x3c: V13 = EQ 0x41c0e1b5 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8f]
---
0x41 DUP1
0x42 PUSH4 0x5807630f
0x47 EQ
0x48 PUSH2 0x8f
0x4b JUMPI
---
0x42: V15 = 0x5807630f
0x47: V16 = EQ 0x5807630f V11
0x48: V17 = 0x8f
0x4b: JUMPI 0x8f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbc]
---
0x4c DUP1
0x4d PUSH4 0x658030b3
0x52 EQ
0x53 PUSH2 0xbc
0x56 JUMPI
---
0x4d: V18 = 0x658030b3
0x52: V19 = EQ 0x658030b3 V11
0x53: V20 = 0xbc
0x56: JUMPI 0xbc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x111]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x111
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x111
0x61: JUMPI 0x111 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x166]
---
0x62 DUP1
0x63 PUSH4 0xdf1d5de7
0x68 EQ
0x69 PUSH2 0x166
0x6c JUMPI
---
0x63: V24 = 0xdf1d5de7
0x68: V25 = EQ 0xdf1d5de7 V11
0x69: V26 = 0x166
0x6c: JUMPI 0x166 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x221]
---
0x6d DUP1
0x6e PUSH4 0xf2fde38b
0x73 EQ
0x74 PUSH2 0x221
0x77 JUMPI
---
0x6e: V27 = 0xf2fde38b
0x73: V28 = EQ 0xf2fde38b V11
0x74: V29 = 0x221
0x77: JUMPI 0x221 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x25a]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x25a
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x25a
0x8c: JUMP 0x25a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: []
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8f
[0x8f:0x95]
---
Predecessors: [0x41]
Successors: [0x96, 0x9a]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = CALLVALUE
0x91: V37 = ISZERO V36
0x92: V38 = 0x9a
0x95: JUMPI 0x9a V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8f]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V39 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0xa1]
---
Predecessors: [0x8f]
Successors: [0x2ef]
---
0x9a JUMPDEST
0x9b PUSH2 0xa2
0x9e PUSH2 0x2ef
0xa1 JUMP
---
0x9a: JUMPDEST 
0x9b: V40 = 0xa2
0x9e: V41 = 0x2ef
0xa1: JUMP 0x2ef
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa2]
Exit stack: [V11, 0xa2]

================================

Block 0xa2
[0xa2:0xbb]
---
Predecessors: [0x3c4]
Successors: []
---
0xa2 JUMPDEST
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 DUP1
0xa7 DUP3
0xa8 ISZERO
0xa9 ISZERO
0xaa ISZERO
0xab ISZERO
0xac DUP2
0xad MSTORE
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP2
0xb2 POP
0xb3 POP
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0xa2: JUMPDEST 
0xa3: V42 = 0x40
0xa5: V43 = M[0x40]
0xa8: V44 = ISZERO 0x0
0xa9: V45 = ISZERO 0x1
0xaa: V46 = ISZERO 0x0
0xab: V47 = ISZERO 0x1
0xad: M[V43] = 0x0
0xae: V48 = 0x20
0xb0: V49 = ADD 0x20 V43
0xb4: V50 = 0x40
0xb6: V51 = M[0x40]
0xb9: V52 = SUB V49 V51
0xbb: RETURN V51 V52
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x4c]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V53 = CALLVALUE
0xbe: V54 = ISZERO V53
0xbf: V55 = 0xc7
0xc2: JUMPI 0xc7 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V56 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xce]
---
Predecessors: [0xbc]
Successors: [0x3c7]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xcf
0xcb PUSH2 0x3c7
0xce JUMP
---
0xc7: JUMPDEST 
0xc8: V57 = 0xcf
0xcb: V58 = 0x3c7
0xce: JUMP 0x3c7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf]
Exit stack: [V11, 0xcf]

================================

Block 0xcf
[0xcf:0x110]
---
Predecessors: [0x3c7]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 DUP3
0xd5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea AND
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 DUP2
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP2
0x107 POP
0x108 POP
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d SWAP2
0x10e SUB
0x10f SWAP1
0x110 RETURN
---
0xcf: JUMPDEST 
0xd0: V59 = 0x40
0xd2: V60 = M[0x40]
0xd5: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0xea: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0xeb: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x102: M[V60] = V64
0x103: V65 = 0x20
0x105: V66 = ADD 0x20 V60
0x109: V67 = 0x40
0x10b: V68 = M[0x40]
0x10e: V69 = SUB V66 V68
0x110: RETURN V68 V69
---
Entry stack: [V11, 0xcf, V238]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf]

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0x57]
Successors: [0x118, 0x11c]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x111: JUMPDEST 
0x112: V70 = CALLVALUE
0x113: V71 = ISZERO V70
0x114: V72 = 0x11c
0x117: JUMPI 0x11c V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x111]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V73 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0x111]
Successors: [0x3ed]
---
0x11c JUMPDEST
0x11d PUSH2 0x124
0x120 PUSH2 0x3ed
0x123 JUMP
---
0x11c: JUMPDEST 
0x11d: V74 = 0x124
0x120: V75 = 0x3ed
0x123: JUMP 0x3ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V11, 0x124]

================================

Block 0x124
[0x124:0x165]
---
Predecessors: [0x3ed]
Successors: []
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 MLOAD
0x128 DUP1
0x129 DUP3
0x12a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f AND
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP2
0x15c POP
0x15d POP
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 SWAP2
0x163 SUB
0x164 SWAP1
0x165 RETURN
---
0x124: JUMPDEST 
0x125: V76 = 0x40
0x127: V77 = M[0x40]
0x12a: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x140: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x157: M[V77] = V81
0x158: V82 = 0x20
0x15a: V83 = ADD 0x20 V77
0x15e: V84 = 0x40
0x160: V85 = M[0x40]
0x163: V86 = SUB V83 V85
0x165: RETURN V85 V86
---
Entry stack: [V11, 0x124, V245]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x124]

================================

Block 0x166
[0x166:0x16c]
---
Predecessors: [0x62]
Successors: [0x16d, 0x171]
---
0x166 JUMPDEST
0x167 CALLVALUE
0x168 ISZERO
0x169 PUSH2 0x171
0x16c JUMPI
---
0x166: JUMPDEST 
0x167: V87 = CALLVALUE
0x168: V88 = ISZERO V87
0x169: V89 = 0x171
0x16c: JUMPI 0x171 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16d
[0x16d:0x170]
---
Predecessors: [0x166]
Successors: []
---
0x16d PUSH1 0x0
0x16f DUP1
0x170 REVERT
---
0x16d: V90 = 0x0
0x170: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x171
[0x171:0x206]
---
Predecessors: [0x166]
Successors: [0x412]
---
0x171 JUMPDEST
0x172 PUSH2 0x207
0x175 PUSH1 0x4
0x177 DUP1
0x178 DUP1
0x179 CALLDATALOAD
0x17a SWAP1
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP1
0x17f DUP3
0x180 ADD
0x181 DUP1
0x182 CALLDATALOAD
0x183 SWAP1
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP1
0x188 DUP1
0x189 DUP1
0x18a PUSH1 0x20
0x18c MUL
0x18d PUSH1 0x20
0x18f ADD
0x190 PUSH1 0x40
0x192 MLOAD
0x193 SWAP1
0x194 DUP2
0x195 ADD
0x196 PUSH1 0x40
0x198 MSTORE
0x199 DUP1
0x19a SWAP4
0x19b SWAP3
0x19c SWAP2
0x19d SWAP1
0x19e DUP2
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP4
0x1a5 DUP4
0x1a6 PUSH1 0x20
0x1a8 MUL
0x1a9 DUP1
0x1aa DUP3
0x1ab DUP5
0x1ac CALLDATACOPY
0x1ad DUP3
0x1ae ADD
0x1af SWAP2
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 POP
0x1b4 POP
0x1b5 POP
0x1b6 SWAP2
0x1b7 SWAP1
0x1b8 DUP1
0x1b9 CALLDATALOAD
0x1ba SWAP1
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP1
0x1bf DUP3
0x1c0 ADD
0x1c1 DUP1
0x1c2 CALLDATALOAD
0x1c3 SWAP1
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 DUP1
0x1c9 DUP1
0x1ca PUSH1 0x20
0x1cc MUL
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 SWAP1
0x1d4 DUP2
0x1d5 ADD
0x1d6 PUSH1 0x40
0x1d8 MSTORE
0x1d9 DUP1
0x1da SWAP4
0x1db SWAP3
0x1dc SWAP2
0x1dd SWAP1
0x1de DUP2
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 DUP4
0x1e5 DUP4
0x1e6 PUSH1 0x20
0x1e8 MUL
0x1e9 DUP1
0x1ea DUP3
0x1eb DUP5
0x1ec CALLDATACOPY
0x1ed DUP3
0x1ee ADD
0x1ef SWAP2
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 SWAP2
0x1f7 SWAP1
0x1f8 DUP1
0x1f9 CALLDATALOAD
0x1fa SWAP1
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe SWAP1
0x1ff SWAP2
0x200 SWAP1
0x201 POP
0x202 POP
0x203 PUSH2 0x412
0x206 JUMP
---
0x171: JUMPDEST 
0x172: V91 = 0x207
0x175: V92 = 0x4
0x179: V93 = CALLDATALOAD 0x4
0x17b: V94 = 0x20
0x17d: V95 = ADD 0x20 0x4
0x180: V96 = ADD 0x4 V93
0x182: V97 = CALLDATALOAD V96
0x184: V98 = 0x20
0x186: V99 = ADD 0x20 V96
0x18a: V100 = 0x20
0x18c: V101 = MUL 0x20 V97
0x18d: V102 = 0x20
0x18f: V103 = ADD 0x20 V101
0x190: V104 = 0x40
0x192: V105 = M[0x40]
0x195: V106 = ADD V105 V103
0x196: V107 = 0x40
0x198: M[0x40] = V106
0x1a0: M[V105] = V97
0x1a1: V108 = 0x20
0x1a3: V109 = ADD 0x20 V105
0x1a6: V110 = 0x20
0x1a8: V111 = MUL 0x20 V97
0x1ac: CALLDATACOPY V109 V99 V111
0x1ae: V112 = ADD V109 V111
0x1b9: V113 = CALLDATALOAD 0x24
0x1bb: V114 = 0x20
0x1bd: V115 = ADD 0x20 0x24
0x1c0: V116 = ADD 0x4 V113
0x1c2: V117 = CALLDATALOAD V116
0x1c4: V118 = 0x20
0x1c6: V119 = ADD 0x20 V116
0x1ca: V120 = 0x20
0x1cc: V121 = MUL 0x20 V117
0x1cd: V122 = 0x20
0x1cf: V123 = ADD 0x20 V121
0x1d0: V124 = 0x40
0x1d2: V125 = M[0x40]
0x1d5: V126 = ADD V125 V123
0x1d6: V127 = 0x40
0x1d8: M[0x40] = V126
0x1e0: M[V125] = V117
0x1e1: V128 = 0x20
0x1e3: V129 = ADD 0x20 V125
0x1e6: V130 = 0x20
0x1e8: V131 = MUL 0x20 V117
0x1ec: CALLDATACOPY V129 V119 V131
0x1ee: V132 = ADD V129 V131
0x1f9: V133 = CALLDATALOAD 0x44
0x1fb: V134 = 0x20
0x1fd: V135 = ADD 0x20 0x44
0x203: V136 = 0x412
0x206: JUMP 0x412
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x207, V105, V125, V133]
Exit stack: [V11, 0x207, V105, V125, V133]

================================

Block 0x207
[0x207:0x220]
---
Predecessors: [0x659]
Successors: []
---
0x207 JUMPDEST
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c DUP3
0x20d ISZERO
0x20e ISZERO
0x20f ISZERO
0x210 ISZERO
0x211 DUP2
0x212 MSTORE
0x213 PUSH1 0x20
0x215 ADD
0x216 SWAP2
0x217 POP
0x218 POP
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP1
0x21d SWAP2
0x21e SUB
0x21f SWAP1
0x220 RETURN
---
0x207: JUMPDEST 
0x208: V137 = 0x40
0x20a: V138 = M[0x40]
0x20d: V139 = ISZERO 0x0
0x20e: V140 = ISZERO 0x1
0x20f: V141 = ISZERO 0x0
0x210: V142 = ISZERO 0x1
0x212: M[V138] = 0x0
0x213: V143 = 0x20
0x215: V144 = ADD 0x20 V138
0x219: V145 = 0x40
0x21b: V146 = M[0x40]
0x21e: V147 = SUB V144 V146
0x220: RETURN V146 V147
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x221
[0x221:0x227]
---
Predecessors: [0x6d]
Successors: [0x228, 0x22c]
---
0x221 JUMPDEST
0x222 CALLVALUE
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x221: JUMPDEST 
0x222: V148 = CALLVALUE
0x223: V149 = ISZERO V148
0x224: V150 = 0x22c
0x227: JUMPI 0x22c V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x221]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V151 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22c
[0x22c:0x257]
---
Predecessors: [0x221]
Successors: [0x662]
---
0x22c JUMPDEST
0x22d PUSH2 0x258
0x230 PUSH1 0x4
0x232 DUP1
0x233 DUP1
0x234 CALLDATALOAD
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b SWAP1
0x24c PUSH1 0x20
0x24e ADD
0x24f SWAP1
0x250 SWAP2
0x251 SWAP1
0x252 POP
0x253 POP
0x254 PUSH2 0x662
0x257 JUMP
---
0x22c: JUMPDEST 
0x22d: V152 = 0x258
0x230: V153 = 0x4
0x234: V154 = CALLDATALOAD 0x4
0x235: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x24c: V157 = 0x20
0x24e: V158 = ADD 0x20 0x4
0x254: V159 = 0x662
0x257: JUMP 0x662
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x258, V156]
Exit stack: [V11, 0x258, V156]

================================

Block 0x258
[0x258:0x259]
---
Predecessors: [0x6f9]
Successors: []
---
0x258 JUMPDEST
0x259 STOP
---
0x258: JUMPDEST 
0x259: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x25a
[0x25a:0x2b0]
---
Predecessors: [0x85]
Successors: [0x2b1, 0x2b5]
---
0x25a JUMPDEST
0x25b PUSH1 0x0
0x25d DUP1
0x25e SWAP1
0x25f SLOAD
0x260 SWAP1
0x261 PUSH2 0x100
0x264 EXP
0x265 SWAP1
0x266 DIV
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 CALLER
0x294 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a9 AND
0x2aa EQ
0x2ab ISZERO
0x2ac ISZERO
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x25a: JUMPDEST 
0x25b: V160 = 0x0
0x25f: V161 = S[0x0]
0x261: V162 = 0x100
0x264: V163 = EXP 0x100 0x0
0x266: V164 = DIV V161 0x1
0x267: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x27d: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x293: V169 = CALLER
0x294: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2aa: V172 = EQ V171 V168
0x2ab: V173 = ISZERO V172
0x2ac: V174 = ISZERO V173
0x2ad: V175 = 0x2b5
0x2b0: JUMPI 0x2b5 V174
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x25a]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V176 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x2b5
[0x2b5:0x2ee]
---
Predecessors: [0x25a]
Successors: []
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 SWAP1
0x2ba SLOAD
0x2bb SWAP1
0x2bc PUSH2 0x100
0x2bf EXP
0x2c0 SWAP1
0x2c1 DIV
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 AND
0x2d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ed AND
0x2ee SELFDESTRUCT
---
0x2b5: JUMPDEST 
0x2b6: V177 = 0x0
0x2ba: V178 = S[0x0]
0x2bc: V179 = 0x100
0x2bf: V180 = EXP 0x100 0x0
0x2c1: V181 = DIV V178 0x1
0x2c2: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2d8: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x2ee: SELFDESTRUCT V185
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x2ef
[0x2ef:0x347]
---
Predecessors: [0x9a]
Successors: [0x348, 0x34c]
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 PUSH1 0x0
0x2f5 SWAP1
0x2f6 SLOAD
0x2f7 SWAP1
0x2f8 PUSH2 0x100
0x2fb EXP
0x2fc SWAP1
0x2fd DIV
0x2fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x313 AND
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 AND
0x32a CALLER
0x32b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x340 AND
0x341 EQ
0x342 ISZERO
0x343 ISZERO
0x344 PUSH2 0x34c
0x347 JUMPI
---
0x2ef: JUMPDEST 
0x2f0: V186 = 0x0
0x2f3: V187 = 0x0
0x2f6: V188 = S[0x0]
0x2f8: V189 = 0x100
0x2fb: V190 = EXP 0x100 0x0
0x2fd: V191 = DIV V188 0x1
0x2fe: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x313: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x314: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x329: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x32a: V196 = CALLER
0x32b: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x340: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x341: V199 = EQ V198 V195
0x342: V200 = ISZERO V199
0x343: V201 = ISZERO V200
0x344: V202 = 0x34c
0x347: JUMPI 0x34c V201
---
Entry stack: [V11, 0xa2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa2, 0x0]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x2ef]
Successors: []
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b REVERT
---
0x348: V203 = 0x0
0x34b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa2, 0x0]

================================

Block 0x34c
[0x34c:0x3bf]
---
Predecessors: [0x2ef]
Successors: [0x3c0, 0x3c4]
---
0x34c JUMPDEST
0x34d PUSH1 0x0
0x34f DUP1
0x350 SWAP1
0x351 SLOAD
0x352 SWAP1
0x353 PUSH2 0x100
0x356 EXP
0x357 SWAP1
0x358 DIV
0x359 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36e AND
0x36f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x384 AND
0x385 PUSH2 0x8fc
0x388 ADDRESS
0x389 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39e AND
0x39f BALANCE
0x3a0 SWAP1
0x3a1 DUP2
0x3a2 ISZERO
0x3a3 MUL
0x3a4 SWAP1
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 PUSH1 0x0
0x3aa PUSH1 0x40
0x3ac MLOAD
0x3ad DUP1
0x3ae DUP4
0x3af SUB
0x3b0 DUP2
0x3b1 DUP6
0x3b2 DUP9
0x3b3 DUP9
0x3b4 CALL
0x3b5 SWAP4
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba ISZERO
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x34c: JUMPDEST 
0x34d: V204 = 0x0
0x351: V205 = S[0x0]
0x353: V206 = 0x100
0x356: V207 = EXP 0x100 0x0
0x358: V208 = DIV V205 0x1
0x359: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x36f: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x384: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x385: V213 = 0x8fc
0x388: V214 = ADDRESS
0x389: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x39f: V217 = BALANCE V216
0x3a2: V218 = ISZERO V217
0x3a3: V219 = MUL V218 0x8fc
0x3a5: V220 = 0x40
0x3a7: V221 = M[0x40]
0x3a8: V222 = 0x0
0x3aa: V223 = 0x40
0x3ac: V224 = M[0x40]
0x3af: V225 = SUB V221 V224
0x3b4: V226 = CALL V219 V212 V217 V224 V225 V224 0x0
0x3ba: V227 = ISZERO V226
0x3bb: V228 = ISZERO V227
0x3bc: V229 = 0x3c4
0x3bf: JUMPI 0x3c4 V228
---
Entry stack: [V11, 0xa2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa2, 0x0]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x34c]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V230 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa2, 0x0]

================================

Block 0x3c4
[0x3c4:0x3c6]
---
Predecessors: [0x34c]
Successors: [0xa2]
---
0x3c4 JUMPDEST
0x3c5 SWAP1
0x3c6 JUMP
---
0x3c4: JUMPDEST 
0x3c6: JUMP 0xa2
---
Entry stack: [V11, 0xa2, 0x0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x0]

================================

Block 0x3c7
[0x3c7:0x3ec]
---
Predecessors: [0xc7]
Successors: [0xcf]
---
0x3c7 JUMPDEST
0x3c8 PUSH1 0x1
0x3ca PUSH1 0x0
0x3cc SWAP1
0x3cd SLOAD
0x3ce SWAP1
0x3cf PUSH2 0x100
0x3d2 EXP
0x3d3 SWAP1
0x3d4 DIV
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb DUP2
0x3ec JUMP
---
0x3c7: JUMPDEST 
0x3c8: V231 = 0x1
0x3ca: V232 = 0x0
0x3cd: V233 = S[0x1]
0x3cf: V234 = 0x100
0x3d2: V235 = EXP 0x100 0x0
0x3d4: V236 = DIV V233 0x1
0x3d5: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x3ec: JUMP 0xcf
---
Entry stack: [V11, 0xcf]
Stack pops: 1
Stack additions: [S0, V238]
Exit stack: [V11, 0xcf, V238]

================================

Block 0x3ed
[0x3ed:0x411]
---
Predecessors: [0x11c]
Successors: [0x124]
---
0x3ed JUMPDEST
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 SWAP1
0x3f2 SLOAD
0x3f3 SWAP1
0x3f4 PUSH2 0x100
0x3f7 EXP
0x3f8 SWAP1
0x3f9 DIV
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 DUP2
0x411 JUMP
---
0x3ed: JUMPDEST 
0x3ee: V239 = 0x0
0x3f2: V240 = S[0x0]
0x3f4: V241 = 0x100
0x3f7: V242 = EXP 0x100 0x0
0x3f9: V243 = DIV V240 0x1
0x3fa: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x411: JUMP 0x124
---
Entry stack: [V11, 0x124]
Stack pops: 1
Stack additions: [S0, V245]
Exit stack: [V11, 0x124, V245]

================================

Block 0x412
[0x412:0x46d]
---
Predecessors: [0x171]
Successors: [0x46e, 0x472]
---
0x412 JUMPDEST
0x413 PUSH1 0x0
0x415 DUP1
0x416 PUSH1 0x0
0x418 DUP1
0x419 PUSH1 0x0
0x41b SWAP1
0x41c SLOAD
0x41d SWAP1
0x41e PUSH2 0x100
0x421 EXP
0x422 SWAP1
0x423 DIV
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 CALLER
0x451 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x466 AND
0x467 EQ
0x468 ISZERO
0x469 ISZERO
0x46a PUSH2 0x472
0x46d JUMPI
---
0x412: JUMPDEST 
0x413: V246 = 0x0
0x416: V247 = 0x0
0x419: V248 = 0x0
0x41c: V249 = S[0x0]
0x41e: V250 = 0x100
0x421: V251 = EXP 0x100 0x0
0x423: V252 = DIV V249 0x1
0x424: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x43a: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x450: V257 = CALLER
0x451: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x466: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x467: V260 = EQ V259 V256
0x468: V261 = ISZERO V260
0x469: V262 = ISZERO V261
0x46a: V263 = 0x472
0x46d: JUMPI 0x472 V262
---
Entry stack: [V11, 0x207, V105, V125, V133]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, 0x0, 0x0]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x412]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V264 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, 0x0, 0x0]

================================

Block 0x472
[0x472:0x47a]
---
Predecessors: [0x412]
Successors: [0x47b]
---
0x472 JUMPDEST
0x473 DUP6
0x474 MLOAD
0x475 SWAP2
0x476 POP
0x477 PUSH1 0x0
0x479 SWAP1
0x47a POP
---
0x472: JUMPDEST 
0x474: V265 = M[V105]
0x477: V266 = 0x0
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V265, 0x0]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, 0x0]

================================

Block 0x47b
[0x47b:0x483]
---
Predecessors: [0x472, 0x64c]
Successors: [0x484, 0x659]
---
0x47b JUMPDEST
0x47c DUP2
0x47d DUP2
0x47e LT
0x47f ISZERO
0x480 PUSH2 0x659
0x483 JUMPI
---
0x47b: JUMPDEST 
0x47e: V267 = LT S0 V265
0x47f: V268 = ISZERO V267
0x480: V269 = 0x659
0x483: JUMPI 0x659 V268
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]

================================

Block 0x484
[0x484:0x4cd]
---
Predecessors: [0x47b]
Successors: [0x4ce, 0x4cf]
---
0x484 PUSH1 0x1
0x486 PUSH1 0x0
0x488 SWAP1
0x489 SLOAD
0x48a SWAP1
0x48b PUSH2 0x100
0x48e EXP
0x48f SWAP1
0x490 DIV
0x491 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a6 AND
0x4a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bc AND
0x4bd PUSH4 0xa9059cbb
0x4c2 DUP8
0x4c3 DUP4
0x4c4 DUP2
0x4c5 MLOAD
0x4c6 DUP2
0x4c7 LT
0x4c8 ISZERO
0x4c9 ISZERO
0x4ca PUSH2 0x4cf
0x4cd JUMPI
---
0x484: V270 = 0x1
0x486: V271 = 0x0
0x489: V272 = S[0x1]
0x48b: V273 = 0x100
0x48e: V274 = EXP 0x100 0x0
0x490: V275 = DIV V272 0x1
0x491: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4a7: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bc: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x4bd: V280 = 0xa9059cbb
0x4c5: V281 = M[V105]
0x4c7: V282 = LT S0 V281
0x4c8: V283 = ISZERO V282
0x4c9: V284 = ISZERO V283
0x4ca: V285 = 0x4cf
0x4cd: JUMPI 0x4cf V284
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V279, 0xa9059cbb, S5, S0]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0, V279, 0xa9059cbb, V105, S0]

================================

Block 0x4ce
[0x4ce:0x4ce]
---
Predecessors: [0x484]
Successors: []
---
0x4ce INVALID
---
0x4ce: INVALID 
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S4, V279, 0xa9059cbb, V105, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S4, V279, 0xa9059cbb, V105, S0]

================================

Block 0x4cf
[0x4cf:0x4e5]
---
Predecessors: [0x484]
Successors: [0x4e6, 0x4e7]
---
0x4cf JUMPDEST
0x4d0 SWAP1
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP1
0x4d5 PUSH1 0x20
0x4d7 MUL
0x4d8 ADD
0x4d9 MLOAD
0x4da DUP8
0x4db DUP5
0x4dc DUP2
0x4dd MLOAD
0x4de DUP2
0x4df LT
0x4e0 ISZERO
0x4e1 ISZERO
0x4e2 PUSH2 0x4e7
0x4e5 JUMPI
---
0x4cf: JUMPDEST 
0x4d1: V286 = 0x20
0x4d3: V287 = ADD 0x20 V105
0x4d5: V288 = 0x20
0x4d7: V289 = MUL 0x20 S0
0x4d8: V290 = ADD V289 V287
0x4d9: V291 = M[V290]
0x4dd: V292 = M[V125]
0x4df: V293 = LT S4 V292
0x4e0: V294 = ISZERO V293
0x4e1: V295 = ISZERO V294
0x4e2: V296 = 0x4e7
0x4e5: JUMPI 0x4e7 V295
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S4, V279, 0xa9059cbb, V105, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V291, S8, S4]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S4, V279, 0xa9059cbb, V291, V125, S4]

================================

Block 0x4e6
[0x4e6:0x4e6]
---
Predecessors: [0x4cf]
Successors: []
---
0x4e6 INVALID
---
0x4e6: INVALID 
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S5, V279, 0xa9059cbb, V291, V125, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S5, V279, 0xa9059cbb, V291, V125, S0]

================================

Block 0x4e7
[0x4e7:0x579]
---
Predecessors: [0x4cf]
Successors: [0x57a, 0x57e]
---
0x4e7 JUMPDEST
0x4e8 SWAP1
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec SWAP1
0x4ed PUSH1 0x20
0x4ef MUL
0x4f0 ADD
0x4f1 MLOAD
0x4f2 PUSH1 0x0
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 PUSH1 0x20
0x4f9 ADD
0x4fa MSTORE
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe DUP4
0x4ff PUSH4 0xffffffff
0x504 AND
0x505 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x523 MUL
0x524 DUP2
0x525 MSTORE
0x526 PUSH1 0x4
0x528 ADD
0x529 DUP1
0x52a DUP4
0x52b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x540 AND
0x541 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x556 AND
0x557 DUP2
0x558 MSTORE
0x559 PUSH1 0x20
0x55b ADD
0x55c DUP3
0x55d DUP2
0x55e MSTORE
0x55f PUSH1 0x20
0x561 ADD
0x562 SWAP3
0x563 POP
0x564 POP
0x565 POP
0x566 PUSH1 0x20
0x568 PUSH1 0x40
0x56a MLOAD
0x56b DUP1
0x56c DUP4
0x56d SUB
0x56e DUP2
0x56f PUSH1 0x0
0x571 DUP8
0x572 DUP1
0x573 EXTCODESIZE
0x574 ISZERO
0x575 ISZERO
0x576 PUSH2 0x57e
0x579 JUMPI
---
0x4e7: JUMPDEST 
0x4e9: V297 = 0x20
0x4eb: V298 = ADD 0x20 V125
0x4ed: V299 = 0x20
0x4ef: V300 = MUL 0x20 S0
0x4f0: V301 = ADD V300 V298
0x4f1: V302 = M[V301]
0x4f2: V303 = 0x0
0x4f4: V304 = 0x40
0x4f6: V305 = M[0x40]
0x4f7: V306 = 0x20
0x4f9: V307 = ADD 0x20 V305
0x4fa: M[V307] = 0x0
0x4fb: V308 = 0x40
0x4fd: V309 = M[0x40]
0x4ff: V310 = 0xffffffff
0x504: V311 = AND 0xffffffff 0xa9059cbb
0x505: V312 = 0x100000000000000000000000000000000000000000000000000000000
0x523: V313 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x525: M[V309] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x526: V314 = 0x4
0x528: V315 = ADD 0x4 V309
0x52b: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x540: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x541: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x556: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x558: M[V315] = V319
0x559: V320 = 0x20
0x55b: V321 = ADD 0x20 V315
0x55e: M[V321] = V302
0x55f: V322 = 0x20
0x561: V323 = ADD 0x20 V321
0x566: V324 = 0x20
0x568: V325 = 0x40
0x56a: V326 = M[0x40]
0x56d: V327 = SUB V323 V326
0x56f: V328 = 0x0
0x573: V329 = EXTCODESIZE V279
0x574: V330 = ISZERO V329
0x575: V331 = ISZERO V330
0x576: V332 = 0x57e
0x579: JUMPI 0x57e V331
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S5, V279, 0xa9059cbb, V291, V125, S0]
Stack pops: 5
Stack additions: [S4, S3, V323, 0x20, V326, V327, V326, 0x0, S4]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S5, V279, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V279]

================================

Block 0x57a
[0x57a:0x57d]
---
Predecessors: [0x4e7]
Successors: []
---
0x57a PUSH1 0x0
0x57c DUP1
0x57d REVERT
---
0x57a: V333 = 0x0
0x57d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S9, V279, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S9, V279, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V279]

================================

Block 0x57e
[0x57e:0x58a]
---
Predecessors: [0x4e7]
Successors: [0x58b, 0x58f]
---
0x57e JUMPDEST
0x57f PUSH2 0x2c6
0x582 GAS
0x583 SUB
0x584 CALL
0x585 ISZERO
0x586 ISZERO
0x587 PUSH2 0x58f
0x58a JUMPI
---
0x57e: JUMPDEST 
0x57f: V334 = 0x2c6
0x582: V335 = GAS
0x583: V336 = SUB V335 0x2c6
0x584: V337 = CALL V336 V279 0x0 V326 V327 V326 0x20
0x585: V338 = ISZERO V337
0x586: V339 = ISZERO V338
0x587: V340 = 0x58f
0x58a: JUMPI 0x58f V339
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S9, V279, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V279]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S9, V279, 0xa9059cbb, V323]

================================

Block 0x58b
[0x58b:0x58e]
---
Predecessors: [0x57e]
Successors: []
---
0x58b PUSH1 0x0
0x58d DUP1
0x58e REVERT
---
0x58b: V341 = 0x0
0x58e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, V279, 0xa9059cbb, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, V279, 0xa9059cbb, V323]

================================

Block 0x58f
[0x58f:0x5a8]
---
Predecessors: [0x57e]
Successors: [0x5a9, 0x5aa]
---
0x58f JUMPDEST
0x590 POP
0x591 POP
0x592 POP
0x593 PUSH1 0x40
0x595 MLOAD
0x596 DUP1
0x597 MLOAD
0x598 SWAP1
0x599 POP
0x59a POP
0x59b PUSH1 0x0
0x59d DUP7
0x59e DUP3
0x59f DUP2
0x5a0 MLOAD
0x5a1 DUP2
0x5a2 LT
0x5a3 ISZERO
0x5a4 ISZERO
0x5a5 PUSH2 0x5aa
0x5a8 JUMPI
---
0x58f: JUMPDEST 
0x593: V342 = 0x40
0x595: V343 = M[0x40]
0x597: V344 = M[V343]
0x59b: V345 = 0x0
0x5a0: V346 = M[V105]
0x5a2: V347 = LT S3 V346
0x5a3: V348 = ISZERO V347
0x5a4: V349 = ISZERO V348
0x5a5: V350 = 0x5aa
0x5a8: JUMPI 0x5aa V349
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, V279, 0xa9059cbb, V323]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, 0x0, S8, S3]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, 0x0, V105, S3]

================================

Block 0x5a9
[0x5a9:0x5a9]
---
Predecessors: [0x58f]
Successors: []
---
0x5a9 INVALID
---
0x5a9: INVALID 
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, 0x0, V105, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, 0x0, V105, S0]

================================

Block 0x5aa
[0x5aa:0x5d2]
---
Predecessors: [0x58f]
Successors: [0x5d3, 0x5ef]
---
0x5aa JUMPDEST
0x5ab SWAP1
0x5ac PUSH1 0x20
0x5ae ADD
0x5af SWAP1
0x5b0 PUSH1 0x20
0x5b2 MUL
0x5b3 ADD
0x5b4 MLOAD
0x5b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ca AND
0x5cb BALANCE
0x5cc EQ
0x5cd DUP1
0x5ce ISZERO
0x5cf PUSH2 0x5ef
0x5d2 JUMPI
---
0x5aa: JUMPDEST 
0x5ac: V351 = 0x20
0x5ae: V352 = ADD 0x20 V105
0x5b0: V353 = 0x20
0x5b2: V354 = MUL 0x20 S0
0x5b3: V355 = ADD V354 V352
0x5b4: V356 = M[V355]
0x5b5: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x5cb: V359 = BALANCE V358
0x5cc: V360 = EQ V359 0x0
0x5ce: V361 = ISZERO V360
0x5cf: V362 = 0x5ef
0x5d2: JUMPI 0x5ef V361
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, 0x0, V105, S0]
Stack pops: 3
Stack additions: [V360]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S3, V360]

================================

Block 0x5d3
[0x5d3:0x5ee]
---
Predecessors: [0x5aa]
Successors: [0x5ef]
---
0x5d3 POP
0x5d4 DUP4
0x5d5 ADDRESS
0x5d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5eb AND
0x5ec BALANCE
0x5ed LT
0x5ee ISZERO
---
0x5d5: V363 = ADDRESS
0x5d6: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x5ec: V366 = BALANCE V365
0x5ed: V367 = LT V366 V133
0x5ee: V368 = ISZERO V367
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S1, V360]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V368]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S1, V368]

================================

Block 0x5ef
[0x5ef:0x5f4]
---
Predecessors: [0x5aa, 0x5d3]
Successors: [0x5f5, 0x64c]
---
0x5ef JUMPDEST
0x5f0 ISZERO
0x5f1 PUSH2 0x64c
0x5f4 JUMPI
---
0x5ef: JUMPDEST 
0x5f0: V369 = ISZERO S0
0x5f1: V370 = 0x64c
0x5f4: JUMPI 0x64c V369
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S1]

================================

Block 0x5f5
[0x5f5:0x600]
---
Predecessors: [0x5ef]
Successors: [0x601, 0x602]
---
0x5f5 DUP6
0x5f6 DUP2
0x5f7 DUP2
0x5f8 MLOAD
0x5f9 DUP2
0x5fa LT
0x5fb ISZERO
0x5fc ISZERO
0x5fd PUSH2 0x602
0x600 JUMPI
---
0x5f8: V371 = M[V105]
0x5fa: V372 = LT S0 V371
0x5fb: V373 = ISZERO V372
0x5fc: V374 = ISZERO V373
0x5fd: V375 = 0x602
0x600: JUMPI 0x602 V374
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, S0]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0, V105, S0]

================================

Block 0x601
[0x601:0x601]
---
Predecessors: [0x5f5]
Successors: []
---
0x601 INVALID
---
0x601: INVALID 
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S2, V105, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S2, V105, S0]

================================

Block 0x602
[0x602:0x646]
---
Predecessors: [0x5f5]
Successors: [0x647, 0x64b]
---
0x602 JUMPDEST
0x603 SWAP1
0x604 PUSH1 0x20
0x606 ADD
0x607 SWAP1
0x608 PUSH1 0x20
0x60a MUL
0x60b ADD
0x60c MLOAD
0x60d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x622 AND
0x623 PUSH2 0x8fc
0x626 DUP6
0x627 SWAP1
0x628 DUP2
0x629 ISZERO
0x62a MUL
0x62b SWAP1
0x62c PUSH1 0x40
0x62e MLOAD
0x62f PUSH1 0x0
0x631 PUSH1 0x40
0x633 MLOAD
0x634 DUP1
0x635 DUP4
0x636 SUB
0x637 DUP2
0x638 DUP6
0x639 DUP9
0x63a DUP9
0x63b CALL
0x63c SWAP4
0x63d POP
0x63e POP
0x63f POP
0x640 POP
0x641 ISZERO
0x642 ISZERO
0x643 PUSH2 0x64b
0x646 JUMPI
---
0x602: JUMPDEST 
0x604: V376 = 0x20
0x606: V377 = ADD 0x20 V105
0x608: V378 = 0x20
0x60a: V379 = MUL 0x20 S0
0x60b: V380 = ADD V379 V377
0x60c: V381 = M[V380]
0x60d: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x622: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x623: V384 = 0x8fc
0x629: V385 = ISZERO V133
0x62a: V386 = MUL V385 0x8fc
0x62c: V387 = 0x40
0x62e: V388 = M[0x40]
0x62f: V389 = 0x0
0x631: V390 = 0x40
0x633: V391 = M[0x40]
0x636: V392 = SUB V388 V391
0x63b: V393 = CALL V386 V383 V133 V391 V392 V391 0x0
0x641: V394 = ISZERO V393
0x642: V395 = ISZERO V394
0x643: V396 = 0x64b
0x646: JUMPI 0x64b V395
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S2, V105, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S2]

================================

Block 0x647
[0x647:0x64a]
---
Predecessors: [0x602]
Successors: []
---
0x647 PUSH1 0x0
0x649 DUP1
0x64a REVERT
---
0x647: V397 = 0x0
0x64a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]

================================

Block 0x64b
[0x64b:0x64b]
---
Predecessors: [0x602]
Successors: [0x64c]
---
0x64b JUMPDEST
---
0x64b: JUMPDEST 
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]

================================

Block 0x64c
[0x64c:0x658]
---
Predecessors: [0x5ef, 0x64b]
Successors: [0x47b]
---
0x64c JUMPDEST
0x64d DUP1
0x64e DUP1
0x64f PUSH1 0x1
0x651 ADD
0x652 SWAP2
0x653 POP
0x654 POP
0x655 PUSH2 0x47b
0x658 JUMP
---
0x64c: JUMPDEST 
0x64f: V398 = 0x1
0x651: V399 = ADD 0x1 S0
0x655: V400 = 0x47b
0x658: JUMP 0x47b
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]
Stack pops: 1
Stack additions: [V399]
Exit stack: [V11, 0x207, V105, V125, V133, 0x0, V265, V399]

================================

Block 0x659
[0x659:0x661]
---
Predecessors: [0x47b]
Successors: [0x207]
---
0x659 JUMPDEST
0x65a POP
0x65b POP
0x65c SWAP4
0x65d SWAP3
0x65e POP
0x65f POP
0x660 POP
0x661 JUMP
---
0x659: JUMPDEST 
0x661: JUMP 0x207
---
Entry stack: [V11, 0x207, V105, V125, V133, 0x0, V265, S0]
Stack pops: 7
Stack additions: [S2]
Exit stack: [V11, 0x0]

================================

Block 0x662
[0x662:0x6b8]
---
Predecessors: [0x22c]
Successors: [0x6b9, 0x6bd]
---
0x662 JUMPDEST
0x663 PUSH1 0x0
0x665 DUP1
0x666 SWAP1
0x667 SLOAD
0x668 SWAP1
0x669 PUSH2 0x100
0x66c EXP
0x66d SWAP1
0x66e DIV
0x66f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x684 AND
0x685 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69a AND
0x69b CALLER
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 EQ
0x6b3 ISZERO
0x6b4 ISZERO
0x6b5 PUSH2 0x6bd
0x6b8 JUMPI
---
0x662: JUMPDEST 
0x663: V401 = 0x0
0x667: V402 = S[0x0]
0x669: V403 = 0x100
0x66c: V404 = EXP 0x100 0x0
0x66e: V405 = DIV V402 0x1
0x66f: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x684: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x685: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x69b: V410 = CALLER
0x69c: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x6b2: V413 = EQ V412 V409
0x6b3: V414 = ISZERO V413
0x6b4: V415 = ISZERO V414
0x6b5: V416 = 0x6bd
0x6b8: JUMPI 0x6bd V415
---
Entry stack: [V11, 0x258, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x258, V156]

================================

Block 0x6b9
[0x6b9:0x6bc]
---
Predecessors: [0x662]
Successors: []
---
0x6b9 PUSH1 0x0
0x6bb DUP1
0x6bc REVERT
---
0x6b9: V417 = 0x0
0x6bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x258, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x258, V156]

================================

Block 0x6bd
[0x6bd:0x6f4]
---
Predecessors: [0x662]
Successors: [0x6f5, 0x6f9]
---
0x6bd JUMPDEST
0x6be PUSH1 0x0
0x6c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d5 AND
0x6d6 DUP2
0x6d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ec AND
0x6ed EQ
0x6ee ISZERO
0x6ef ISZERO
0x6f0 ISZERO
0x6f1 PUSH2 0x6f9
0x6f4 JUMPI
---
0x6bd: JUMPDEST 
0x6be: V418 = 0x0
0x6c0: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d5: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6d7: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ec: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x6ed: V423 = EQ V422 0x0
0x6ee: V424 = ISZERO V423
0x6ef: V425 = ISZERO V424
0x6f0: V426 = ISZERO V425
0x6f1: V427 = 0x6f9
0x6f4: JUMPI 0x6f9 V426
---
Entry stack: [V11, 0x258, V156]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x258, V156]

================================

Block 0x6f5
[0x6f5:0x6f8]
---
Predecessors: [0x6bd]
Successors: []
---
0x6f5 PUSH1 0x0
0x6f7 DUP1
0x6f8 REVERT
---
0x6f5: V428 = 0x0
0x6f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x258, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x258, V156]

================================

Block 0x6f9
[0x6f9:0x7b6]
---
Predecessors: [0x6bd]
Successors: [0x258]
---
0x6f9 JUMPDEST
0x6fa DUP1
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 AND
0x711 PUSH1 0x0
0x713 DUP1
0x714 SWAP1
0x715 SLOAD
0x716 SWAP1
0x717 PUSH2 0x100
0x71a EXP
0x71b SWAP1
0x71c DIV
0x71d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x732 AND
0x733 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x748 AND
0x749 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x76a PUSH1 0x40
0x76c MLOAD
0x76d PUSH1 0x40
0x76f MLOAD
0x770 DUP1
0x771 SWAP2
0x772 SUB
0x773 SWAP1
0x774 LOG3
0x775 DUP1
0x776 PUSH1 0x0
0x778 DUP1
0x779 PUSH2 0x100
0x77c EXP
0x77d DUP2
0x77e SLOAD
0x77f DUP2
0x780 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x795 MUL
0x796 NOT
0x797 AND
0x798 SWAP1
0x799 DUP4
0x79a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7af AND
0x7b0 MUL
0x7b1 OR
0x7b2 SWAP1
0x7b3 SSTORE
0x7b4 POP
0x7b5 POP
0x7b6 JUMP
---
0x6f9: JUMPDEST 
0x6fb: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x711: V431 = 0x0
0x715: V432 = S[0x0]
0x717: V433 = 0x100
0x71a: V434 = EXP 0x100 0x0
0x71c: V435 = DIV V432 0x1
0x71d: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x732: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x733: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x748: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x749: V440 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x76a: V441 = 0x40
0x76c: V442 = M[0x40]
0x76d: V443 = 0x40
0x76f: V444 = M[0x40]
0x772: V445 = SUB V442 V444
0x774: LOG V444 V445 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V439 V430
0x776: V446 = 0x0
0x779: V447 = 0x100
0x77c: V448 = EXP 0x100 0x0
0x77e: V449 = S[0x0]
0x780: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x795: V451 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x796: V452 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x797: V453 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V449
0x79a: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x7af: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x7b0: V456 = MUL V455 0x1
0x7b1: V457 = OR V456 V453
0x7b3: S[0x0] = V457
0x7b6: JUMP 0x258
---
Entry stack: [V11, 0x258, V156]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x7b7
[0x7b7:0x7ef]
---
Predecessors: []
Successors: [0x7f0]
---
0x7b7 STOP
0x7b8 LOG1
0x7b9 PUSH6 0x627a7a723058
0x7c0 SHA3
0x7c1 PUSH6 0x8a0fc424ca5
0x7c8 MISSING 0xf6
0x7c9 GASPRICE
0x7ca MISSING 0x4a
0x7cb MISSING 0xe8
0x7cc CREATE
0x7cd SLOAD
0x7ce MISSING 0xca
0x7cf MISSING 0xf8
0x7d0 SWAP10
0x7d1 MISSING 0xc2
0x7d2 NUMBER
0x7d3 MISSING 0xd5
0x7d4 PUSH19 0x7d9fce8f12ab663c23d1c87200296060604052
0x7e8 PUSH1 0x4
0x7ea CALLDATASIZE
0x7eb LT
0x7ec PUSH2 0x4c
0x7ef JUMPI
---
0x7b7: STOP 
0x7b8: LOG S0 S1 S2
0x7b9: V458 = 0x627a7a723058
0x7c0: V459 = SHA3 0x627a7a723058 S3
0x7c1: V460 = 0x8a0fc424ca5
0x7c8: MISSING 0xf6
0x7c9: V461 = GASPRICE
0x7ca: MISSING 0x4a
0x7cb: MISSING 0xe8
0x7cc: V462 = CREATE S0 S1 S2
0x7cd: V463 = S[V462]
0x7ce: MISSING 0xca
0x7cf: MISSING 0xf8
0x7d1: MISSING 0xc2
0x7d2: V464 = NUMBER
0x7d3: MISSING 0xd5
0x7d4: V465 = 0x7d9fce8f12ab663c23d1c87200296060604052
0x7e8: V466 = 0x4
0x7ea: V467 = CALLDATASIZE
0x7eb: V468 = LT V467 0x4
0x7ec: V469 = 0x4c
0x7ef: THROWI V468
---
Entry stack: []
Stack pops: 0
Stack additions: [0x8a0fc424ca5, V459, V461, V463, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, V464, 0x7d9fce8f12ab663c23d1c87200296060604052]
Exit stack: []

================================

Block 0x7f0
[0x7f0:0x823]
---
Predecessors: [0x7b7]
Successors: [0x824]
---
0x7f0 PUSH1 0x0
0x7f2 CALLDATALOAD
0x7f3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x811 SWAP1
0x812 DIV
0x813 PUSH4 0xffffffff
0x818 AND
0x819 DUP1
0x81a PUSH4 0x8da5cb5b
0x81f EQ
0x820 PUSH2 0x51
0x823 JUMPI
---
0x7f0: V470 = 0x0
0x7f2: V471 = CALLDATALOAD 0x0
0x7f3: V472 = 0x100000000000000000000000000000000000000000000000000000000
0x812: V473 = DIV V471 0x100000000000000000000000000000000000000000000000000000000
0x813: V474 = 0xffffffff
0x818: V475 = AND 0xffffffff V473
0x81a: V476 = 0x8da5cb5b
0x81f: V477 = EQ 0x8da5cb5b V475
0x820: V478 = 0x51
0x823: THROWI V477
---
Entry stack: [0x7d9fce8f12ab663c23d1c87200296060604052]
Stack pops: 0
Stack additions: [V475]
Exit stack: [0x7d9fce8f12ab663c23d1c87200296060604052, V475]

================================

Block 0x824
[0x824:0x82e]
---
Predecessors: [0x7f0]
Successors: [0x82f]
---
0x824 DUP1
0x825 PUSH4 0xf2fde38b
0x82a EQ
0x82b PUSH2 0xa6
0x82e JUMPI
---
0x825: V479 = 0xf2fde38b
0x82a: V480 = EQ 0xf2fde38b V475
0x82b: V481 = 0xa6
0x82e: THROWI V480
---
Entry stack: [0x7d9fce8f12ab663c23d1c87200296060604052, V475]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x7d9fce8f12ab663c23d1c87200296060604052, V475]

================================

Block 0x82f
[0x82f:0x83a]
---
Predecessors: [0x824]
Successors: [0x83b]
---
0x82f JUMPDEST
0x830 PUSH1 0x0
0x832 DUP1
0x833 REVERT
0x834 JUMPDEST
0x835 CALLVALUE
0x836 ISZERO
0x837 PUSH2 0x5c
0x83a JUMPI
---
0x82f: JUMPDEST 
0x830: V482 = 0x0
0x833: REVERT 0x0 0x0
0x834: JUMPDEST 
0x835: V483 = CALLVALUE
0x836: V484 = ISZERO V483
0x837: V485 = 0x5c
0x83a: THROWI V484
---
Entry stack: [0x7d9fce8f12ab663c23d1c87200296060604052, V475]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x83b
[0x83b:0x88f]
---
Predecessors: [0x82f]
Successors: [0x890]
---
0x83b PUSH1 0x0
0x83d DUP1
0x83e REVERT
0x83f JUMPDEST
0x840 PUSH2 0x64
0x843 PUSH2 0xdf
0x846 JUMP
0x847 JUMPDEST
0x848 PUSH1 0x40
0x84a MLOAD
0x84b DUP1
0x84c DUP3
0x84d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x862 AND
0x863 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x878 AND
0x879 DUP2
0x87a MSTORE
0x87b PUSH1 0x20
0x87d ADD
0x87e SWAP2
0x87f POP
0x880 POP
0x881 PUSH1 0x40
0x883 MLOAD
0x884 DUP1
0x885 SWAP2
0x886 SUB
0x887 SWAP1
0x888 RETURN
0x889 JUMPDEST
0x88a CALLVALUE
0x88b ISZERO
0x88c PUSH2 0xb1
0x88f JUMPI
---
0x83b: V486 = 0x0
0x83e: REVERT 0x0 0x0
0x83f: JUMPDEST 
0x840: V487 = 0x64
0x843: V488 = 0xdf
0x846: THROW 
0x847: JUMPDEST 
0x848: V489 = 0x40
0x84a: V490 = M[0x40]
0x84d: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x862: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x863: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x878: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x87a: M[V490] = V494
0x87b: V495 = 0x20
0x87d: V496 = ADD 0x20 V490
0x881: V497 = 0x40
0x883: V498 = M[0x40]
0x886: V499 = SUB V496 V498
0x888: RETURN V498 V499
0x889: JUMPDEST 
0x88a: V500 = CALLVALUE
0x88b: V501 = ISZERO V500
0x88c: V502 = 0xb1
0x88f: THROWI V501
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x890
[0x890:0x93d]
---
Predecessors: [0x83b]
Successors: [0x93e]
---
0x890 PUSH1 0x0
0x892 DUP1
0x893 REVERT
0x894 JUMPDEST
0x895 PUSH2 0xdd
0x898 PUSH1 0x4
0x89a DUP1
0x89b DUP1
0x89c CALLDATALOAD
0x89d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b2 AND
0x8b3 SWAP1
0x8b4 PUSH1 0x20
0x8b6 ADD
0x8b7 SWAP1
0x8b8 SWAP2
0x8b9 SWAP1
0x8ba POP
0x8bb POP
0x8bc PUSH2 0x104
0x8bf JUMP
0x8c0 JUMPDEST
0x8c1 STOP
0x8c2 JUMPDEST
0x8c3 PUSH1 0x0
0x8c5 DUP1
0x8c6 SWAP1
0x8c7 SLOAD
0x8c8 SWAP1
0x8c9 PUSH2 0x100
0x8cc EXP
0x8cd SWAP1
0x8ce DIV
0x8cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e4 AND
0x8e5 DUP2
0x8e6 JUMP
0x8e7 JUMPDEST
0x8e8 PUSH1 0x0
0x8ea DUP1
0x8eb SWAP1
0x8ec SLOAD
0x8ed SWAP1
0x8ee PUSH2 0x100
0x8f1 EXP
0x8f2 SWAP1
0x8f3 DIV
0x8f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x909 AND
0x90a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91f AND
0x920 CALLER
0x921 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x936 AND
0x937 EQ
0x938 ISZERO
0x939 ISZERO
0x93a PUSH2 0x15f
0x93d JUMPI
---
0x890: V503 = 0x0
0x893: REVERT 0x0 0x0
0x894: JUMPDEST 
0x895: V504 = 0xdd
0x898: V505 = 0x4
0x89c: V506 = CALLDATALOAD 0x4
0x89d: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x8b4: V509 = 0x20
0x8b6: V510 = ADD 0x20 0x4
0x8bc: V511 = 0x104
0x8bf: THROW 
0x8c0: JUMPDEST 
0x8c1: STOP 
0x8c2: JUMPDEST 
0x8c3: V512 = 0x0
0x8c7: V513 = S[0x0]
0x8c9: V514 = 0x100
0x8cc: V515 = EXP 0x100 0x0
0x8ce: V516 = DIV V513 0x1
0x8cf: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x8e6: JUMP S0
0x8e7: JUMPDEST 
0x8e8: V519 = 0x0
0x8ec: V520 = S[0x0]
0x8ee: V521 = 0x100
0x8f1: V522 = EXP 0x100 0x0
0x8f3: V523 = DIV V520 0x1
0x8f4: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x909: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x90a: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x91f: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x920: V528 = CALLER
0x921: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x936: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x937: V531 = EQ V530 V527
0x938: V532 = ISZERO V531
0x939: V533 = ISZERO V532
0x93a: V534 = 0x15f
0x93d: THROWI V533
---
Entry stack: []
Stack pops: 0
Stack additions: [V508, 0xdd, V518, S0]
Exit stack: []

================================

Block 0x93e
[0x93e:0x979]
---
Predecessors: [0x890]
Successors: [0x97a]
---
0x93e PUSH1 0x0
0x940 DUP1
0x941 REVERT
0x942 JUMPDEST
0x943 PUSH1 0x0
0x945 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95a AND
0x95b DUP2
0x95c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x971 AND
0x972 EQ
0x973 ISZERO
0x974 ISZERO
0x975 ISZERO
0x976 PUSH2 0x19b
0x979 JUMPI
---
0x93e: V535 = 0x0
0x941: REVERT 0x0 0x0
0x942: JUMPDEST 
0x943: V536 = 0x0
0x945: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x95a: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x95c: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x971: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x972: V541 = EQ V540 0x0
0x973: V542 = ISZERO V541
0x974: V543 = ISZERO V542
0x975: V544 = ISZERO V543
0x976: V545 = 0x19b
0x979: THROWI V544
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x97a
[0x97a:0xa69]
---
Predecessors: [0x93e]
Successors: []
---
0x97a PUSH1 0x0
0x97c DUP1
0x97d REVERT
0x97e JUMPDEST
0x97f DUP1
0x980 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x995 AND
0x996 PUSH1 0x0
0x998 DUP1
0x999 SWAP1
0x99a SLOAD
0x99b SWAP1
0x99c PUSH2 0x100
0x99f EXP
0x9a0 SWAP1
0x9a1 DIV
0x9a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b7 AND
0x9b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9cd AND
0x9ce PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9ef PUSH1 0x40
0x9f1 MLOAD
0x9f2 PUSH1 0x40
0x9f4 MLOAD
0x9f5 DUP1
0x9f6 SWAP2
0x9f7 SUB
0x9f8 SWAP1
0x9f9 LOG3
0x9fa DUP1
0x9fb PUSH1 0x0
0x9fd DUP1
0x9fe PUSH2 0x100
0xa01 EXP
0xa02 DUP2
0xa03 SLOAD
0xa04 DUP2
0xa05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1a MUL
0xa1b NOT
0xa1c AND
0xa1d SWAP1
0xa1e DUP4
0xa1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa34 AND
0xa35 MUL
0xa36 OR
0xa37 SWAP1
0xa38 SSTORE
0xa39 POP
0xa3a POP
0xa3b JUMP
0xa3c STOP
0xa3d LOG1
0xa3e PUSH6 0x627a7a723058
0xa45 SHA3
0xa46 MISSING 0x28
0xa47 MISSING 0xed
0xa48 MISSING 0xfb
0xa49 MISSING 0xce
0xa4a DIFFICULTY
0xa4b PUSH30 0x76aa22cfffd8ada41865889d27b115d4fc30e62761be53e848b10029
---
0x97a: V546 = 0x0
0x97d: REVERT 0x0 0x0
0x97e: JUMPDEST 
0x980: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x995: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x996: V549 = 0x0
0x99a: V550 = S[0x0]
0x99c: V551 = 0x100
0x99f: V552 = EXP 0x100 0x0
0x9a1: V553 = DIV V550 0x1
0x9a2: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b7: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x9b8: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x9cd: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x9ce: V558 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9ef: V559 = 0x40
0x9f1: V560 = M[0x40]
0x9f2: V561 = 0x40
0x9f4: V562 = M[0x40]
0x9f7: V563 = SUB V560 V562
0x9f9: LOG V562 V563 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V557 V548
0x9fb: V564 = 0x0
0x9fe: V565 = 0x100
0xa01: V566 = EXP 0x100 0x0
0xa03: V567 = S[0x0]
0xa05: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1a: V569 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa1b: V570 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa1c: V571 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V567
0xa1f: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0xa34: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa35: V574 = MUL V573 0x1
0xa36: V575 = OR V574 V571
0xa38: S[0x0] = V575
0xa3b: JUMP S1
0xa3c: STOP 
0xa3d: LOG S0 S1 S2
0xa3e: V576 = 0x627a7a723058
0xa45: V577 = SHA3 0x627a7a723058 S3
0xa46: MISSING 0x28
0xa47: MISSING 0xed
0xa48: MISSING 0xfb
0xa49: MISSING 0xce
0xa4a: V578 = DIFFICULTY
0xa4b: V579 = 0x76aa22cfffd8ada41865889d27b115d4fc30e62761be53e848b10029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V577, 0x76aa22cfffd8ada41865889d27b115d4fc30e62761be53e848b10029, V578]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x7a
Exit block: 0x2b1
Body: 0x7a, 0x81, 0x85, 0x25a, 0x2b1, 0x2b5

Function 1:
Public function signature: 0x5807630f
Entry block: 0x8f
Exit block: 0xa2
Body: 0x8f, 0x96, 0x9a, 0xa2, 0x2ef, 0x348, 0x34c, 0x3c0, 0x3c4

Function 2:
Public function signature: 0x658030b3
Entry block: 0xbc
Exit block: 0xcf
Body: 0xbc, 0xc3, 0xc7, 0xcf, 0x3c7

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x111
Exit block: 0x124
Body: 0x111, 0x118, 0x11c, 0x124, 0x3ed

Function 4:
Public function signature: 0xdf1d5de7
Entry block: 0x166
Exit block: 0x647
Body: 0x166, 0x16d, 0x171, 0x207, 0x412, 0x46e, 0x472, 0x47b, 0x484, 0x4ce, 0x4cf, 0x4e6, 0x4e7, 0x57a, 0x57e, 0x58b, 0x58f, 0x5a9, 0x5aa, 0x5d3, 0x5ef, 0x5f5, 0x601, 0x602, 0x647, 0x64b, 0x64c, 0x659

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x221
Exit block: 0x258
Body: 0x221, 0x228, 0x22c, 0x258, 0x662, 0x6b9, 0x6bd, 0x6f5, 0x6f9

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

