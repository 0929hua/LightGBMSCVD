Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x67243482
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x67243482
0x3c: V13 = EQ 0x67243482 V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x12f]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x12f
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x12f
0x4b: JUMPI 0x12f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x186]
---
0x4c DUP1
0x4d PUSH4 0xea8ef515
0x52 EQ
0x53 PUSH2 0x186
0x56 JUMPI
---
0x4d: V18 = 0xea8ef515
0x52: V19 = EQ 0xea8ef515 V11
0x53: V20 = 0x186
0x56: JUMPI 0x186 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x20a]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x20a
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x20a
0x61: JUMPI 0x20a V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x24d]
---
0x62 DUP1
0x63 PUSH4 0xfc0c546a
0x68 EQ
0x69 PUSH2 0x24d
0x6c JUMPI
---
0x63: V24 = 0xfc0c546a
0x68: V25 = EQ 0xfc0c546a V11
0x69: V26 = 0x24d
0x6c: JUMPI 0x24d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0xd]
Successors: [0x7a, 0x7e]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 DUP1
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x72: JUMPDEST 
0x73: V28 = CALLVALUE
0x75: V29 = ISZERO V28
0x76: V30 = 0x7e
0x79: JUMPI 0x7e V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x72]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V31 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7e
[0x7e:0x118]
---
Predecessors: [0x72]
Successors: [0x2a4]
---
0x7e JUMPDEST
0x7f POP
0x80 PUSH2 0x119
0x83 PUSH1 0x4
0x85 DUP1
0x86 CALLDATASIZE
0x87 SUB
0x88 DUP2
0x89 ADD
0x8a SWAP1
0x8b DUP1
0x8c DUP1
0x8d CALLDATALOAD
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 DUP3
0x94 ADD
0x95 DUP1
0x96 CALLDATALOAD
0x97 SWAP1
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c DUP1
0x9d DUP1
0x9e PUSH1 0x20
0xa0 MUL
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 SWAP1
0xa8 DUP2
0xa9 ADD
0xaa PUSH1 0x40
0xac MSTORE
0xad DUP1
0xae SWAP4
0xaf SWAP3
0xb0 SWAP2
0xb1 SWAP1
0xb2 DUP2
0xb3 DUP2
0xb4 MSTORE
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 DUP4
0xb9 DUP4
0xba PUSH1 0x20
0xbc MUL
0xbd DUP1
0xbe DUP3
0xbf DUP5
0xc0 CALLDATACOPY
0xc1 DUP3
0xc2 ADD
0xc3 SWAP2
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca SWAP2
0xcb SWAP3
0xcc SWAP2
0xcd SWAP3
0xce SWAP1
0xcf DUP1
0xd0 CALLDATALOAD
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 DUP3
0xd7 ADD
0xd8 DUP1
0xd9 CALLDATALOAD
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf DUP1
0xe0 DUP1
0xe1 PUSH1 0x20
0xe3 MUL
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea SWAP1
0xeb DUP2
0xec ADD
0xed PUSH1 0x40
0xef MSTORE
0xf0 DUP1
0xf1 SWAP4
0xf2 SWAP3
0xf3 SWAP2
0xf4 SWAP1
0xf5 DUP2
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb DUP4
0xfc DUP4
0xfd PUSH1 0x20
0xff MUL
0x100 DUP1
0x101 DUP3
0x102 DUP5
0x103 CALLDATACOPY
0x104 DUP3
0x105 ADD
0x106 SWAP2
0x107 POP
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c POP
0x10d SWAP2
0x10e SWAP3
0x10f SWAP2
0x110 SWAP3
0x111 SWAP1
0x112 POP
0x113 POP
0x114 POP
0x115 PUSH2 0x2a4
0x118 JUMP
---
0x7e: JUMPDEST 
0x80: V32 = 0x119
0x83: V33 = 0x4
0x86: V34 = CALLDATASIZE
0x87: V35 = SUB V34 0x4
0x89: V36 = ADD 0x4 V35
0x8d: V37 = CALLDATALOAD 0x4
0x8f: V38 = 0x20
0x91: V39 = ADD 0x20 0x4
0x94: V40 = ADD 0x4 V37
0x96: V41 = CALLDATALOAD V40
0x98: V42 = 0x20
0x9a: V43 = ADD 0x20 V40
0x9e: V44 = 0x20
0xa0: V45 = MUL 0x20 V41
0xa1: V46 = 0x20
0xa3: V47 = ADD 0x20 V45
0xa4: V48 = 0x40
0xa6: V49 = M[0x40]
0xa9: V50 = ADD V49 V47
0xaa: V51 = 0x40
0xac: M[0x40] = V50
0xb4: M[V49] = V41
0xb5: V52 = 0x20
0xb7: V53 = ADD 0x20 V49
0xba: V54 = 0x20
0xbc: V55 = MUL 0x20 V41
0xc0: CALLDATACOPY V53 V43 V55
0xc2: V56 = ADD V53 V55
0xd0: V57 = CALLDATALOAD 0x24
0xd2: V58 = 0x20
0xd4: V59 = ADD 0x20 0x24
0xd7: V60 = ADD 0x4 V57
0xd9: V61 = CALLDATALOAD V60
0xdb: V62 = 0x20
0xdd: V63 = ADD 0x20 V60
0xe1: V64 = 0x20
0xe3: V65 = MUL 0x20 V61
0xe4: V66 = 0x20
0xe6: V67 = ADD 0x20 V65
0xe7: V68 = 0x40
0xe9: V69 = M[0x40]
0xec: V70 = ADD V69 V67
0xed: V71 = 0x40
0xef: M[0x40] = V70
0xf7: M[V69] = V61
0xf8: V72 = 0x20
0xfa: V73 = ADD 0x20 V69
0xfd: V74 = 0x20
0xff: V75 = MUL 0x20 V61
0x103: CALLDATACOPY V73 V63 V75
0x105: V76 = ADD V73 V75
0x115: V77 = 0x2a4
0x118: JUMP 0x2a4
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x119, V49, V69]
Exit stack: [V11, 0x119, V49, V69]

================================

Block 0x119
[0x119:0x12e]
---
Predecessors: [0x44a]
Successors: []
---
0x119 JUMPDEST
0x11a PUSH1 0x40
0x11c MLOAD
0x11d DUP1
0x11e DUP3
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 SWAP2
0x125 POP
0x126 POP
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b SWAP2
0x12c SUB
0x12d SWAP1
0x12e RETURN
---
0x119: JUMPDEST 
0x11a: V78 = 0x40
0x11c: V79 = M[0x40]
0x120: M[V79] = S0
0x121: V80 = 0x20
0x123: V81 = ADD 0x20 V79
0x127: V82 = 0x40
0x129: V83 = M[0x40]
0x12c: V84 = SUB V81 V83
0x12e: RETURN V83 V84
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x41]
Successors: [0x137, 0x13b]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 DUP1
0x132 ISZERO
0x133 PUSH2 0x13b
0x136 JUMPI
---
0x12f: JUMPDEST 
0x130: V85 = CALLVALUE
0x132: V86 = ISZERO V85
0x133: V87 = 0x13b
0x136: JUMPI 0x13b V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x137
[0x137:0x13a]
---
Predecessors: [0x12f]
Successors: []
---
0x137 PUSH1 0x0
0x139 DUP1
0x13a REVERT
---
0x137: V88 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x13b
[0x13b:0x143]
---
Predecessors: [0x12f]
Successors: [0x454]
---
0x13b JUMPDEST
0x13c POP
0x13d PUSH2 0x144
0x140 PUSH2 0x454
0x143 JUMP
---
0x13b: JUMPDEST 
0x13d: V89 = 0x144
0x140: V90 = 0x454
0x143: JUMP 0x454
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x144]
Exit stack: [V11, 0x144]

================================

Block 0x144
[0x144:0x185]
---
Predecessors: [0x454]
Successors: []
---
0x144 JUMPDEST
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 DUP3
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP2
0x17c POP
0x17d POP
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 SWAP2
0x183 SUB
0x184 SWAP1
0x185 RETURN
---
0x144: JUMPDEST 
0x145: V91 = 0x40
0x147: V92 = M[0x40]
0x14a: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x160: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x177: M[V92] = V96
0x178: V97 = 0x20
0x17a: V98 = ADD 0x20 V92
0x17e: V99 = 0x40
0x180: V100 = M[0x40]
0x183: V101 = SUB V98 V100
0x185: RETURN V100 V101
---
Entry stack: [V11, 0x144, V286]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x144]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x4c]
Successors: [0x18e, 0x192]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 DUP1
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x186: JUMPDEST 
0x187: V102 = CALLVALUE
0x189: V103 = ISZERO V102
0x18a: V104 = 0x192
0x18d: JUMPI 0x192 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x186]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V105 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x192
[0x192:0x1f3]
---
Predecessors: [0x186]
Successors: [0x479]
---
0x192 JUMPDEST
0x193 POP
0x194 PUSH2 0x1f4
0x197 PUSH1 0x4
0x199 DUP1
0x19a CALLDATASIZE
0x19b SUB
0x19c DUP2
0x19d ADD
0x19e SWAP1
0x19f DUP1
0x1a0 DUP1
0x1a1 CALLDATALOAD
0x1a2 SWAP1
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP1
0x1a7 DUP3
0x1a8 ADD
0x1a9 DUP1
0x1aa CALLDATALOAD
0x1ab SWAP1
0x1ac PUSH1 0x20
0x1ae ADD
0x1af SWAP1
0x1b0 DUP1
0x1b1 DUP1
0x1b2 PUSH1 0x20
0x1b4 MUL
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb SWAP1
0x1bc DUP2
0x1bd ADD
0x1be PUSH1 0x40
0x1c0 MSTORE
0x1c1 DUP1
0x1c2 SWAP4
0x1c3 SWAP3
0x1c4 SWAP2
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc DUP4
0x1cd DUP4
0x1ce PUSH1 0x20
0x1d0 MUL
0x1d1 DUP1
0x1d2 DUP3
0x1d3 DUP5
0x1d4 CALLDATACOPY
0x1d5 DUP3
0x1d6 ADD
0x1d7 SWAP2
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd POP
0x1de SWAP2
0x1df SWAP3
0x1e0 SWAP2
0x1e1 SWAP3
0x1e2 SWAP1
0x1e3 DUP1
0x1e4 CALLDATALOAD
0x1e5 SWAP1
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP1
0x1ea SWAP3
0x1eb SWAP2
0x1ec SWAP1
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 PUSH2 0x479
0x1f3 JUMP
---
0x192: JUMPDEST 
0x194: V106 = 0x1f4
0x197: V107 = 0x4
0x19a: V108 = CALLDATASIZE
0x19b: V109 = SUB V108 0x4
0x19d: V110 = ADD 0x4 V109
0x1a1: V111 = CALLDATALOAD 0x4
0x1a3: V112 = 0x20
0x1a5: V113 = ADD 0x20 0x4
0x1a8: V114 = ADD 0x4 V111
0x1aa: V115 = CALLDATALOAD V114
0x1ac: V116 = 0x20
0x1ae: V117 = ADD 0x20 V114
0x1b2: V118 = 0x20
0x1b4: V119 = MUL 0x20 V115
0x1b5: V120 = 0x20
0x1b7: V121 = ADD 0x20 V119
0x1b8: V122 = 0x40
0x1ba: V123 = M[0x40]
0x1bd: V124 = ADD V123 V121
0x1be: V125 = 0x40
0x1c0: M[0x40] = V124
0x1c8: M[V123] = V115
0x1c9: V126 = 0x20
0x1cb: V127 = ADD 0x20 V123
0x1ce: V128 = 0x20
0x1d0: V129 = MUL 0x20 V115
0x1d4: CALLDATACOPY V127 V117 V129
0x1d6: V130 = ADD V127 V129
0x1e4: V131 = CALLDATALOAD 0x24
0x1e6: V132 = 0x20
0x1e8: V133 = ADD 0x20 0x24
0x1f0: V134 = 0x479
0x1f3: JUMP 0x479
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x1f4, V123, V131]
Exit stack: [V11, 0x1f4, V123, V131]

================================

Block 0x1f4
[0x1f4:0x209]
---
Predecessors: [0x608]
Successors: []
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 DUP3
0x1fa DUP2
0x1fb MSTORE
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff SWAP2
0x200 POP
0x201 POP
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP1
0x206 SWAP2
0x207 SUB
0x208 SWAP1
0x209 RETURN
---
0x1f4: JUMPDEST 
0x1f5: V135 = 0x40
0x1f7: V136 = M[0x40]
0x1fb: M[V136] = S0
0x1fc: V137 = 0x20
0x1fe: V138 = ADD 0x20 V136
0x202: V139 = 0x40
0x204: V140 = M[0x40]
0x207: V141 = SUB V138 V140
0x209: RETURN V140 V141
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20a
[0x20a:0x211]
---
Predecessors: [0x57]
Successors: [0x212, 0x216]
---
0x20a JUMPDEST
0x20b CALLVALUE
0x20c DUP1
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x20a: JUMPDEST 
0x20b: V142 = CALLVALUE
0x20d: V143 = ISZERO V142
0x20e: V144 = 0x216
0x211: JUMPI 0x216 V143
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V142]
Exit stack: [V11, V142]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x20a]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V145 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V11, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V142]

================================

Block 0x216
[0x216:0x24a]
---
Predecessors: [0x20a]
Successors: [0x612]
---
0x216 JUMPDEST
0x217 POP
0x218 PUSH2 0x24b
0x21b PUSH1 0x4
0x21d DUP1
0x21e CALLDATASIZE
0x21f SUB
0x220 DUP2
0x221 ADD
0x222 SWAP1
0x223 DUP1
0x224 DUP1
0x225 CALLDATALOAD
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c SWAP1
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP1
0x241 SWAP3
0x242 SWAP2
0x243 SWAP1
0x244 POP
0x245 POP
0x246 POP
0x247 PUSH2 0x612
0x24a JUMP
---
0x216: JUMPDEST 
0x218: V146 = 0x24b
0x21b: V147 = 0x4
0x21e: V148 = CALLDATASIZE
0x21f: V149 = SUB V148 0x4
0x221: V150 = ADD 0x4 V149
0x225: V151 = CALLDATALOAD 0x4
0x226: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x23d: V154 = 0x20
0x23f: V155 = ADD 0x20 0x4
0x247: V156 = 0x612
0x24a: JUMP 0x612
---
Entry stack: [V11, V142]
Stack pops: 1
Stack additions: [0x24b, V153]
Exit stack: [V11, 0x24b, V153]

================================

Block 0x24b
[0x24b:0x24c]
---
Predecessors: [0x6a9]
Successors: []
---
0x24b JUMPDEST
0x24c STOP
---
0x24b: JUMPDEST 
0x24c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x24d
[0x24d:0x254]
---
Predecessors: [0x62]
Successors: [0x255, 0x259]
---
0x24d JUMPDEST
0x24e CALLVALUE
0x24f DUP1
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x24d: JUMPDEST 
0x24e: V157 = CALLVALUE
0x250: V158 = ISZERO V157
0x251: V159 = 0x259
0x254: JUMPI 0x259 V158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V157]
Exit stack: [V11, V157]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x24d]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V160 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V11, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V157]

================================

Block 0x259
[0x259:0x261]
---
Predecessors: [0x24d]
Successors: [0x767]
---
0x259 JUMPDEST
0x25a POP
0x25b PUSH2 0x262
0x25e PUSH2 0x767
0x261 JUMP
---
0x259: JUMPDEST 
0x25b: V161 = 0x262
0x25e: V162 = 0x767
0x261: JUMP 0x767
---
Entry stack: [V11, V157]
Stack pops: 1
Stack additions: [0x262]
Exit stack: [V11, 0x262]

================================

Block 0x262
[0x262:0x2a3]
---
Predecessors: [0x767]
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 DUP3
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d AND
0x27e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x293 AND
0x294 DUP2
0x295 MSTORE
0x296 PUSH1 0x20
0x298 ADD
0x299 SWAP2
0x29a POP
0x29b POP
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 SWAP2
0x2a1 SUB
0x2a2 SWAP1
0x2a3 RETURN
---
0x262: JUMPDEST 
0x263: V163 = 0x40
0x265: V164 = M[0x40]
0x268: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x27e: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x293: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x295: M[V164] = V168
0x296: V169 = 0x20
0x298: V170 = ADD 0x20 V164
0x29c: V171 = 0x40
0x29e: V172 = M[0x40]
0x2a1: V173 = SUB V170 V172
0x2a3: RETURN V172 V173
---
Entry stack: [V11, 0x262, V446]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x262]

================================

Block 0x2a4
[0x2a4:0x2fd]
---
Predecessors: [0x7e]
Successors: [0x2fe, 0x302]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab SWAP1
0x2ac SLOAD
0x2ad SWAP1
0x2ae PUSH2 0x100
0x2b1 EXP
0x2b2 SWAP1
0x2b3 DIV
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 CALLER
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 EQ
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V174 = 0x0
0x2a8: V175 = 0x0
0x2ac: V176 = S[0x0]
0x2ae: V177 = 0x100
0x2b1: V178 = EXP 0x100 0x0
0x2b3: V179 = DIV V176 0x1
0x2b4: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2ca: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2e0: V184 = CALLER
0x2e1: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2f7: V187 = EQ V186 V183
0x2f8: V188 = ISZERO V187
0x2f9: V189 = ISZERO V188
0x2fa: V190 = 0x302
0x2fd: JUMPI 0x302 V189
---
Entry stack: [V11, 0x119, V49, V69]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x119, V49, V69, 0x0, 0x0]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2a4]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V191 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V49, V69, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V49, V69, 0x0, 0x0]

================================

Block 0x302
[0x302:0x306]
---
Predecessors: [0x2a4]
Successors: [0x307]
---
0x302 JUMPDEST
0x303 PUSH1 0x0
0x305 SWAP1
0x306 POP
---
0x302: JUMPDEST 
0x303: V192 = 0x0
---
Entry stack: [V11, 0x119, V49, V69, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x119, V49, V69, 0x0, 0x0]

================================

Block 0x307
[0x307:0x310]
---
Predecessors: [0x302, 0x42d]
Successors: [0x311, 0x44a]
---
0x307 JUMPDEST
0x308 DUP4
0x309 MLOAD
0x30a DUP2
0x30b LT
0x30c ISZERO
0x30d PUSH2 0x44a
0x310 JUMPI
---
0x307: JUMPDEST 
0x309: V193 = M[V49]
0x30b: V194 = LT S0 V193
0x30c: V195 = ISZERO V194
0x30d: V196 = 0x44a
0x310: JUMPI 0x44a V195
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x119, V49, V69, 0x0, S0]

================================

Block 0x311
[0x311:0x35a]
---
Predecessors: [0x307]
Successors: [0x35b, 0x35c]
---
0x311 PUSH1 0x1
0x313 PUSH1 0x0
0x315 SWAP1
0x316 SLOAD
0x317 SWAP1
0x318 PUSH2 0x100
0x31b EXP
0x31c SWAP1
0x31d DIV
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 AND
0x334 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x349 AND
0x34a PUSH4 0xa9059cbb
0x34f DUP6
0x350 DUP4
0x351 DUP2
0x352 MLOAD
0x353 DUP2
0x354 LT
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35c
0x35a JUMPI
---
0x311: V197 = 0x1
0x313: V198 = 0x0
0x316: V199 = S[0x1]
0x318: V200 = 0x100
0x31b: V201 = EXP 0x100 0x0
0x31d: V202 = DIV V199 0x1
0x31e: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x334: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x349: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x34a: V207 = 0xa9059cbb
0x352: V208 = M[V49]
0x354: V209 = LT S0 V208
0x355: V210 = ISZERO V209
0x356: V211 = ISZERO V210
0x357: V212 = 0x35c
0x35a: JUMPI 0x35c V211
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V206, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x119, V49, V69, 0x0, S0, V206, 0xa9059cbb, V49, S0]

================================

Block 0x35b
[0x35b:0x35b]
---
Predecessors: [0x311]
Successors: []
---
0x35b INVALID
---
0x35b: INVALID 
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S4, V206, 0xa9059cbb, V49, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V49, V69, 0x0, S4, V206, 0xa9059cbb, V49, S0]

================================

Block 0x35c
[0x35c:0x372]
---
Predecessors: [0x311]
Successors: [0x373, 0x374]
---
0x35c JUMPDEST
0x35d SWAP1
0x35e PUSH1 0x20
0x360 ADD
0x361 SWAP1
0x362 PUSH1 0x20
0x364 MUL
0x365 ADD
0x366 MLOAD
0x367 DUP6
0x368 DUP5
0x369 DUP2
0x36a MLOAD
0x36b DUP2
0x36c LT
0x36d ISZERO
0x36e ISZERO
0x36f PUSH2 0x374
0x372 JUMPI
---
0x35c: JUMPDEST 
0x35e: V213 = 0x20
0x360: V214 = ADD 0x20 V49
0x362: V215 = 0x20
0x364: V216 = MUL 0x20 S0
0x365: V217 = ADD V216 V214
0x366: V218 = M[V217]
0x36a: V219 = M[V69]
0x36c: V220 = LT S4 V219
0x36d: V221 = ISZERO V220
0x36e: V222 = ISZERO V221
0x36f: V223 = 0x374
0x372: JUMPI 0x374 V222
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S4, V206, 0xa9059cbb, V49, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V218, S6, S4]
Exit stack: [V11, 0x119, V49, V69, 0x0, S4, V206, 0xa9059cbb, V218, V69, S4]

================================

Block 0x373
[0x373:0x373]
---
Predecessors: [0x35c]
Successors: []
---
0x373 INVALID
---
0x373: INVALID 
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S5, V206, 0xa9059cbb, V218, V69, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V49, V69, 0x0, S5, V206, 0xa9059cbb, V218, V69, S0]

================================

Block 0x374
[0x374:0x3fe]
---
Predecessors: [0x35c]
Successors: [0x3ff, 0x403]
---
0x374 JUMPDEST
0x375 SWAP1
0x376 PUSH1 0x20
0x378 ADD
0x379 SWAP1
0x37a PUSH1 0x20
0x37c MUL
0x37d ADD
0x37e MLOAD
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP4
0x383 PUSH4 0xffffffff
0x388 AND
0x389 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3a7 MUL
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x4
0x3ac ADD
0x3ad DUP1
0x3ae DUP4
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3da AND
0x3db DUP2
0x3dc MSTORE
0x3dd PUSH1 0x20
0x3df ADD
0x3e0 DUP3
0x3e1 DUP2
0x3e2 MSTORE
0x3e3 PUSH1 0x20
0x3e5 ADD
0x3e6 SWAP3
0x3e7 POP
0x3e8 POP
0x3e9 POP
0x3ea PUSH1 0x20
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef DUP1
0x3f0 DUP4
0x3f1 SUB
0x3f2 DUP2
0x3f3 PUSH1 0x0
0x3f5 DUP8
0x3f6 DUP1
0x3f7 EXTCODESIZE
0x3f8 ISZERO
0x3f9 DUP1
0x3fa ISZERO
0x3fb PUSH2 0x403
0x3fe JUMPI
---
0x374: JUMPDEST 
0x376: V224 = 0x20
0x378: V225 = ADD 0x20 V69
0x37a: V226 = 0x20
0x37c: V227 = MUL 0x20 S0
0x37d: V228 = ADD V227 V225
0x37e: V229 = M[V228]
0x37f: V230 = 0x40
0x381: V231 = M[0x40]
0x383: V232 = 0xffffffff
0x388: V233 = AND 0xffffffff 0xa9059cbb
0x389: V234 = 0x100000000000000000000000000000000000000000000000000000000
0x3a7: V235 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3a9: M[V231] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3aa: V236 = 0x4
0x3ac: V237 = ADD 0x4 V231
0x3af: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3c5: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x3da: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x3dc: M[V237] = V241
0x3dd: V242 = 0x20
0x3df: V243 = ADD 0x20 V237
0x3e2: M[V243] = V229
0x3e3: V244 = 0x20
0x3e5: V245 = ADD 0x20 V243
0x3ea: V246 = 0x20
0x3ec: V247 = 0x40
0x3ee: V248 = M[0x40]
0x3f1: V249 = SUB V245 V248
0x3f3: V250 = 0x0
0x3f7: V251 = EXTCODESIZE V206
0x3f8: V252 = ISZERO V251
0x3fa: V253 = ISZERO V252
0x3fb: V254 = 0x403
0x3fe: JUMPI 0x403 V253
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S5, V206, 0xa9059cbb, V218, V69, S0]
Stack pops: 5
Stack additions: [S4, S3, V245, 0x20, V248, V249, V248, 0x0, S4, V252]
Exit stack: [V11, 0x119, V49, V69, 0x0, S5, V206, 0xa9059cbb, V245, 0x20, V248, V249, V248, 0x0, V206, V252]

================================

Block 0x3ff
[0x3ff:0x402]
---
Predecessors: [0x374]
Successors: []
---
0x3ff PUSH1 0x0
0x401 DUP1
0x402 REVERT
---
0x3ff: V255 = 0x0
0x402: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S10, V206, 0xa9059cbb, V245, 0x20, V248, V249, V248, 0x0, V206, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V49, V69, 0x0, S10, V206, 0xa9059cbb, V245, 0x20, V248, V249, V248, 0x0, V206, V252]

================================

Block 0x403
[0x403:0x40d]
---
Predecessors: [0x374]
Successors: [0x40e, 0x417]
---
0x403 JUMPDEST
0x404 POP
0x405 GAS
0x406 CALL
0x407 ISZERO
0x408 DUP1
0x409 ISZERO
0x40a PUSH2 0x417
0x40d JUMPI
---
0x403: JUMPDEST 
0x405: V256 = GAS
0x406: V257 = CALL V256 V206 0x0 V248 V249 V248 0x20
0x407: V258 = ISZERO V257
0x409: V259 = ISZERO V258
0x40a: V260 = 0x417
0x40d: JUMPI 0x417 V259
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S10, V206, 0xa9059cbb, V245, 0x20, V248, V249, V248, 0x0, V206, V252]
Stack pops: 7
Stack additions: [V258]
Exit stack: [V11, 0x119, V49, V69, 0x0, S10, V206, 0xa9059cbb, V245, V258]

================================

Block 0x40e
[0x40e:0x416]
---
Predecessors: [0x403]
Successors: []
---
0x40e RETURNDATASIZE
0x40f PUSH1 0x0
0x411 DUP1
0x412 RETURNDATACOPY
0x413 RETURNDATASIZE
0x414 PUSH1 0x0
0x416 REVERT
---
0x40e: V261 = RETURNDATASIZE
0x40f: V262 = 0x0
0x412: RETURNDATACOPY 0x0 0x0 V261
0x413: V263 = RETURNDATASIZE
0x414: V264 = 0x0
0x416: REVERT 0x0 V263
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S4, V206, 0xa9059cbb, V245, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V49, V69, 0x0, S4, V206, 0xa9059cbb, V245, V258]

================================

Block 0x417
[0x417:0x428]
---
Predecessors: [0x403]
Successors: [0x429, 0x42d]
---
0x417 JUMPDEST
0x418 POP
0x419 POP
0x41a POP
0x41b POP
0x41c PUSH1 0x40
0x41e MLOAD
0x41f RETURNDATASIZE
0x420 PUSH1 0x20
0x422 DUP2
0x423 LT
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x417: JUMPDEST 
0x41c: V265 = 0x40
0x41e: V266 = M[0x40]
0x41f: V267 = RETURNDATASIZE
0x420: V268 = 0x20
0x423: V269 = LT V267 0x20
0x424: V270 = ISZERO V269
0x425: V271 = 0x42d
0x428: JUMPI 0x42d V270
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S4, V206, 0xa9059cbb, V245, V258]
Stack pops: 4
Stack additions: [V266, V267]
Exit stack: [V11, 0x119, V49, V69, 0x0, S4, V266, V267]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x417]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V272 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S2, V266, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V49, V69, 0x0, S2, V266, V267]

================================

Block 0x42d
[0x42d:0x449]
---
Predecessors: [0x417]
Successors: [0x307]
---
0x42d JUMPDEST
0x42e DUP2
0x42f ADD
0x430 SWAP1
0x431 DUP1
0x432 DUP1
0x433 MLOAD
0x434 SWAP1
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP1
0x439 SWAP3
0x43a SWAP2
0x43b SWAP1
0x43c POP
0x43d POP
0x43e POP
0x43f POP
0x440 PUSH1 0x1
0x442 DUP2
0x443 ADD
0x444 SWAP1
0x445 POP
0x446 PUSH2 0x307
0x449 JUMP
---
0x42d: JUMPDEST 
0x42f: V273 = ADD V266 V267
0x433: V274 = M[V266]
0x435: V275 = 0x20
0x437: V276 = ADD 0x20 V266
0x440: V277 = 0x1
0x443: V278 = ADD S2 0x1
0x446: V279 = 0x307
0x449: JUMP 0x307
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S2, V266, V267]
Stack pops: 3
Stack additions: [V278]
Exit stack: [V11, 0x119, V49, V69, 0x0, V278]

================================

Block 0x44a
[0x44a:0x453]
---
Predecessors: [0x307]
Successors: [0x119]
---
0x44a JUMPDEST
0x44b DUP1
0x44c SWAP2
0x44d POP
0x44e POP
0x44f SWAP3
0x450 SWAP2
0x451 POP
0x452 POP
0x453 JUMP
---
0x44a: JUMPDEST 
0x453: JUMP 0x119
---
Entry stack: [V11, 0x119, V49, V69, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x454
[0x454:0x478]
---
Predecessors: [0x13b]
Successors: [0x144]
---
0x454 JUMPDEST
0x455 PUSH1 0x0
0x457 DUP1
0x458 SWAP1
0x459 SLOAD
0x45a SWAP1
0x45b PUSH2 0x100
0x45e EXP
0x45f SWAP1
0x460 DIV
0x461 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x476 AND
0x477 DUP2
0x478 JUMP
---
0x454: JUMPDEST 
0x455: V280 = 0x0
0x459: V281 = S[0x0]
0x45b: V282 = 0x100
0x45e: V283 = EXP 0x100 0x0
0x460: V284 = DIV V281 0x1
0x461: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x476: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x478: JUMP 0x144
---
Entry stack: [V11, 0x144]
Stack pops: 1
Stack additions: [S0, V286]
Exit stack: [V11, 0x144, V286]

================================

Block 0x479
[0x479:0x4d2]
---
Predecessors: [0x192]
Successors: [0x4d3, 0x4d7]
---
0x479 JUMPDEST
0x47a PUSH1 0x0
0x47c DUP1
0x47d PUSH1 0x0
0x47f DUP1
0x480 SWAP1
0x481 SLOAD
0x482 SWAP1
0x483 PUSH2 0x100
0x486 EXP
0x487 SWAP1
0x488 DIV
0x489 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49e AND
0x49f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b4 AND
0x4b5 CALLER
0x4b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cb AND
0x4cc EQ
0x4cd ISZERO
0x4ce ISZERO
0x4cf PUSH2 0x4d7
0x4d2 JUMPI
---
0x479: JUMPDEST 
0x47a: V287 = 0x0
0x47d: V288 = 0x0
0x481: V289 = S[0x0]
0x483: V290 = 0x100
0x486: V291 = EXP 0x100 0x0
0x488: V292 = DIV V289 0x1
0x489: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x49f: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x4b5: V297 = CALLER
0x4b6: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cb: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x4cc: V300 = EQ V299 V296
0x4cd: V301 = ISZERO V300
0x4ce: V302 = ISZERO V301
0x4cf: V303 = 0x4d7
0x4d2: JUMPI 0x4d7 V302
---
Entry stack: [V11, 0x1f4, V123, V131]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, 0x0]

================================

Block 0x4d3
[0x4d3:0x4d6]
---
Predecessors: [0x479]
Successors: []
---
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 REVERT
---
0x4d3: V304 = 0x0
0x4d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V123, V131, 0x0, 0x0]

================================

Block 0x4d7
[0x4d7:0x4db]
---
Predecessors: [0x479]
Successors: [0x4dc]
---
0x4d7 JUMPDEST
0x4d8 PUSH1 0x0
0x4da SWAP1
0x4db POP
---
0x4d7: JUMPDEST 
0x4d8: V305 = 0x0
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, 0x0]

================================

Block 0x4dc
[0x4dc:0x4e5]
---
Predecessors: [0x4d7, 0x5eb]
Successors: [0x4e6, 0x608]
---
0x4dc JUMPDEST
0x4dd DUP4
0x4de MLOAD
0x4df DUP2
0x4e0 LT
0x4e1 ISZERO
0x4e2 PUSH2 0x608
0x4e5 JUMPI
---
0x4dc: JUMPDEST 
0x4de: V306 = M[V123]
0x4e0: V307 = LT S0 V306
0x4e1: V308 = ISZERO V307
0x4e2: V309 = 0x608
0x4e5: JUMPI 0x608 V308
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S0]

================================

Block 0x4e6
[0x4e6:0x52f]
---
Predecessors: [0x4dc]
Successors: [0x530, 0x531]
---
0x4e6 PUSH1 0x1
0x4e8 PUSH1 0x0
0x4ea SWAP1
0x4eb SLOAD
0x4ec SWAP1
0x4ed PUSH2 0x100
0x4f0 EXP
0x4f1 SWAP1
0x4f2 DIV
0x4f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x508 AND
0x509 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51e AND
0x51f PUSH4 0xa9059cbb
0x524 DUP6
0x525 DUP4
0x526 DUP2
0x527 MLOAD
0x528 DUP2
0x529 LT
0x52a ISZERO
0x52b ISZERO
0x52c PUSH2 0x531
0x52f JUMPI
---
0x4e6: V310 = 0x1
0x4e8: V311 = 0x0
0x4eb: V312 = S[0x1]
0x4ed: V313 = 0x100
0x4f0: V314 = EXP 0x100 0x0
0x4f2: V315 = DIV V312 0x1
0x4f3: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x508: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x509: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x51e: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x51f: V320 = 0xa9059cbb
0x527: V321 = M[V123]
0x529: V322 = LT S0 V321
0x52a: V323 = ISZERO V322
0x52b: V324 = ISZERO V323
0x52c: V325 = 0x531
0x52f: JUMPI 0x531 V324
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V319, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S0, V319, 0xa9059cbb, V123, S0]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x4e6]
Successors: []
---
0x530 INVALID
---
0x530: INVALID 
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S4, V319, 0xa9059cbb, V123, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S4, V319, 0xa9059cbb, V123, S0]

================================

Block 0x531
[0x531:0x5bc]
---
Predecessors: [0x4e6]
Successors: [0x5bd, 0x5c1]
---
0x531 JUMPDEST
0x532 SWAP1
0x533 PUSH1 0x20
0x535 ADD
0x536 SWAP1
0x537 PUSH1 0x20
0x539 MUL
0x53a ADD
0x53b MLOAD
0x53c DUP6
0x53d PUSH1 0x40
0x53f MLOAD
0x540 DUP4
0x541 PUSH4 0xffffffff
0x546 AND
0x547 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x565 MUL
0x566 DUP2
0x567 MSTORE
0x568 PUSH1 0x4
0x56a ADD
0x56b DUP1
0x56c DUP4
0x56d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x582 AND
0x583 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x598 AND
0x599 DUP2
0x59a MSTORE
0x59b PUSH1 0x20
0x59d ADD
0x59e DUP3
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x20
0x5a3 ADD
0x5a4 SWAP3
0x5a5 POP
0x5a6 POP
0x5a7 POP
0x5a8 PUSH1 0x20
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae DUP4
0x5af SUB
0x5b0 DUP2
0x5b1 PUSH1 0x0
0x5b3 DUP8
0x5b4 DUP1
0x5b5 EXTCODESIZE
0x5b6 ISZERO
0x5b7 DUP1
0x5b8 ISZERO
0x5b9 PUSH2 0x5c1
0x5bc JUMPI
---
0x531: JUMPDEST 
0x533: V326 = 0x20
0x535: V327 = ADD 0x20 V123
0x537: V328 = 0x20
0x539: V329 = MUL 0x20 S0
0x53a: V330 = ADD V329 V327
0x53b: V331 = M[V330]
0x53d: V332 = 0x40
0x53f: V333 = M[0x40]
0x541: V334 = 0xffffffff
0x546: V335 = AND 0xffffffff 0xa9059cbb
0x547: V336 = 0x100000000000000000000000000000000000000000000000000000000
0x565: V337 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x567: M[V333] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x568: V338 = 0x4
0x56a: V339 = ADD 0x4 V333
0x56d: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x582: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x583: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x598: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x59a: M[V339] = V343
0x59b: V344 = 0x20
0x59d: V345 = ADD 0x20 V339
0x5a0: M[V345] = V131
0x5a1: V346 = 0x20
0x5a3: V347 = ADD 0x20 V345
0x5a8: V348 = 0x20
0x5aa: V349 = 0x40
0x5ac: V350 = M[0x40]
0x5af: V351 = SUB V347 V350
0x5b1: V352 = 0x0
0x5b5: V353 = EXTCODESIZE V319
0x5b6: V354 = ISZERO V353
0x5b8: V355 = ISZERO V354
0x5b9: V356 = 0x5c1
0x5bc: JUMPI 0x5c1 V355
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S4, V319, 0xa9059cbb, V123, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V347, 0x20, V350, V351, V350, 0x0, S3, V354]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S4, V319, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V319, V354]

================================

Block 0x5bd
[0x5bd:0x5c0]
---
Predecessors: [0x531]
Successors: []
---
0x5bd PUSH1 0x0
0x5bf DUP1
0x5c0 REVERT
---
0x5bd: V357 = 0x0
0x5c0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S10, V319, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V319, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S10, V319, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V319, V354]

================================

Block 0x5c1
[0x5c1:0x5cb]
---
Predecessors: [0x531]
Successors: [0x5cc, 0x5d5]
---
0x5c1 JUMPDEST
0x5c2 POP
0x5c3 GAS
0x5c4 CALL
0x5c5 ISZERO
0x5c6 DUP1
0x5c7 ISZERO
0x5c8 PUSH2 0x5d5
0x5cb JUMPI
---
0x5c1: JUMPDEST 
0x5c3: V358 = GAS
0x5c4: V359 = CALL V358 V319 0x0 V350 V351 V350 0x20
0x5c5: V360 = ISZERO V359
0x5c7: V361 = ISZERO V360
0x5c8: V362 = 0x5d5
0x5cb: JUMPI 0x5d5 V361
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S10, V319, 0xa9059cbb, V347, 0x20, V350, V351, V350, 0x0, V319, V354]
Stack pops: 7
Stack additions: [V360]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S10, V319, 0xa9059cbb, V347, V360]

================================

Block 0x5cc
[0x5cc:0x5d4]
---
Predecessors: [0x5c1]
Successors: []
---
0x5cc RETURNDATASIZE
0x5cd PUSH1 0x0
0x5cf DUP1
0x5d0 RETURNDATACOPY
0x5d1 RETURNDATASIZE
0x5d2 PUSH1 0x0
0x5d4 REVERT
---
0x5cc: V363 = RETURNDATASIZE
0x5cd: V364 = 0x0
0x5d0: RETURNDATACOPY 0x0 0x0 V363
0x5d1: V365 = RETURNDATASIZE
0x5d2: V366 = 0x0
0x5d4: REVERT 0x0 V365
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S4, V319, 0xa9059cbb, V347, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S4, V319, 0xa9059cbb, V347, V360]

================================

Block 0x5d5
[0x5d5:0x5e6]
---
Predecessors: [0x5c1]
Successors: [0x5e7, 0x5eb]
---
0x5d5 JUMPDEST
0x5d6 POP
0x5d7 POP
0x5d8 POP
0x5d9 POP
0x5da PUSH1 0x40
0x5dc MLOAD
0x5dd RETURNDATASIZE
0x5de PUSH1 0x20
0x5e0 DUP2
0x5e1 LT
0x5e2 ISZERO
0x5e3 PUSH2 0x5eb
0x5e6 JUMPI
---
0x5d5: JUMPDEST 
0x5da: V367 = 0x40
0x5dc: V368 = M[0x40]
0x5dd: V369 = RETURNDATASIZE
0x5de: V370 = 0x20
0x5e1: V371 = LT V369 0x20
0x5e2: V372 = ISZERO V371
0x5e3: V373 = 0x5eb
0x5e6: JUMPI 0x5eb V372
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S4, V319, 0xa9059cbb, V347, V360]
Stack pops: 4
Stack additions: [V368, V369]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S4, V368, V369]

================================

Block 0x5e7
[0x5e7:0x5ea]
---
Predecessors: [0x5d5]
Successors: []
---
0x5e7 PUSH1 0x0
0x5e9 DUP1
0x5ea REVERT
---
0x5e7: V374 = 0x0
0x5ea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S2, V368, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V123, V131, 0x0, S2, V368, V369]

================================

Block 0x5eb
[0x5eb:0x607]
---
Predecessors: [0x5d5]
Successors: [0x4dc]
---
0x5eb JUMPDEST
0x5ec DUP2
0x5ed ADD
0x5ee SWAP1
0x5ef DUP1
0x5f0 DUP1
0x5f1 MLOAD
0x5f2 SWAP1
0x5f3 PUSH1 0x20
0x5f5 ADD
0x5f6 SWAP1
0x5f7 SWAP3
0x5f8 SWAP2
0x5f9 SWAP1
0x5fa POP
0x5fb POP
0x5fc POP
0x5fd POP
0x5fe PUSH1 0x1
0x600 DUP2
0x601 ADD
0x602 SWAP1
0x603 POP
0x604 PUSH2 0x4dc
0x607 JUMP
---
0x5eb: JUMPDEST 
0x5ed: V375 = ADD V368 V369
0x5f1: V376 = M[V368]
0x5f3: V377 = 0x20
0x5f5: V378 = ADD 0x20 V368
0x5fe: V379 = 0x1
0x601: V380 = ADD S2 0x1
0x604: V381 = 0x4dc
0x607: JUMP 0x4dc
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S2, V368, V369]
Stack pops: 3
Stack additions: [V380]
Exit stack: [V11, 0x1f4, V123, V131, 0x0, V380]

================================

Block 0x608
[0x608:0x611]
---
Predecessors: [0x4dc]
Successors: [0x1f4]
---
0x608 JUMPDEST
0x609 DUP1
0x60a SWAP2
0x60b POP
0x60c POP
0x60d SWAP3
0x60e SWAP2
0x60f POP
0x610 POP
0x611 JUMP
---
0x608: JUMPDEST 
0x611: JUMP 0x1f4
---
Entry stack: [V11, 0x1f4, V123, V131, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x612
[0x612:0x668]
---
Predecessors: [0x216]
Successors: [0x669, 0x66d]
---
0x612 JUMPDEST
0x613 PUSH1 0x0
0x615 DUP1
0x616 SWAP1
0x617 SLOAD
0x618 SWAP1
0x619 PUSH2 0x100
0x61c EXP
0x61d SWAP1
0x61e DIV
0x61f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x634 AND
0x635 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64a AND
0x64b CALLER
0x64c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x661 AND
0x662 EQ
0x663 ISZERO
0x664 ISZERO
0x665 PUSH2 0x66d
0x668 JUMPI
---
0x612: JUMPDEST 
0x613: V382 = 0x0
0x617: V383 = S[0x0]
0x619: V384 = 0x100
0x61c: V385 = EXP 0x100 0x0
0x61e: V386 = DIV V383 0x1
0x61f: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x634: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x635: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x64b: V391 = CALLER
0x64c: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x661: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x662: V394 = EQ V393 V390
0x663: V395 = ISZERO V394
0x664: V396 = ISZERO V395
0x665: V397 = 0x66d
0x668: JUMPI 0x66d V396
---
Entry stack: [V11, 0x24b, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24b, V153]

================================

Block 0x669
[0x669:0x66c]
---
Predecessors: [0x612]
Successors: []
---
0x669 PUSH1 0x0
0x66b DUP1
0x66c REVERT
---
0x669: V398 = 0x0
0x66c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x24b, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24b, V153]

================================

Block 0x66d
[0x66d:0x6a4]
---
Predecessors: [0x612]
Successors: [0x6a5, 0x6a9]
---
0x66d JUMPDEST
0x66e PUSH1 0x0
0x670 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x685 AND
0x686 DUP2
0x687 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69c AND
0x69d EQ
0x69e ISZERO
0x69f ISZERO
0x6a0 ISZERO
0x6a1 PUSH2 0x6a9
0x6a4 JUMPI
---
0x66d: JUMPDEST 
0x66e: V399 = 0x0
0x670: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x685: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x687: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x69c: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x69d: V404 = EQ V403 0x0
0x69e: V405 = ISZERO V404
0x69f: V406 = ISZERO V405
0x6a0: V407 = ISZERO V406
0x6a1: V408 = 0x6a9
0x6a4: JUMPI 0x6a9 V407
---
Entry stack: [V11, 0x24b, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x24b, V153]

================================

Block 0x6a5
[0x6a5:0x6a8]
---
Predecessors: [0x66d]
Successors: []
---
0x6a5 PUSH1 0x0
0x6a7 DUP1
0x6a8 REVERT
---
0x6a5: V409 = 0x0
0x6a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x24b, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24b, V153]

================================

Block 0x6a9
[0x6a9:0x766]
---
Predecessors: [0x66d]
Successors: [0x24b]
---
0x6a9 JUMPDEST
0x6aa DUP1
0x6ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c0 AND
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 SWAP1
0x6c5 SLOAD
0x6c6 SWAP1
0x6c7 PUSH2 0x100
0x6ca EXP
0x6cb SWAP1
0x6cc DIV
0x6cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e2 AND
0x6e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f8 AND
0x6f9 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x71a PUSH1 0x40
0x71c MLOAD
0x71d PUSH1 0x40
0x71f MLOAD
0x720 DUP1
0x721 SWAP2
0x722 SUB
0x723 SWAP1
0x724 LOG3
0x725 DUP1
0x726 PUSH1 0x0
0x728 DUP1
0x729 PUSH2 0x100
0x72c EXP
0x72d DUP2
0x72e SLOAD
0x72f DUP2
0x730 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x745 MUL
0x746 NOT
0x747 AND
0x748 SWAP1
0x749 DUP4
0x74a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75f AND
0x760 MUL
0x761 OR
0x762 SWAP1
0x763 SSTORE
0x764 POP
0x765 POP
0x766 JUMP
---
0x6a9: JUMPDEST 
0x6ab: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c0: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x6c1: V412 = 0x0
0x6c5: V413 = S[0x0]
0x6c7: V414 = 0x100
0x6ca: V415 = EXP 0x100 0x0
0x6cc: V416 = DIV V413 0x1
0x6cd: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e2: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x6e3: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f8: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x6f9: V421 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x71a: V422 = 0x40
0x71c: V423 = M[0x40]
0x71d: V424 = 0x40
0x71f: V425 = M[0x40]
0x722: V426 = SUB V423 V425
0x724: LOG V425 V426 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V420 V411
0x726: V427 = 0x0
0x729: V428 = 0x100
0x72c: V429 = EXP 0x100 0x0
0x72e: V430 = S[0x0]
0x730: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x745: V432 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x746: V433 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x747: V434 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V430
0x74a: V435 = 0xffffffffffffffffffffffffffffffffffffffff
0x75f: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x760: V437 = MUL V436 0x1
0x761: V438 = OR V437 V434
0x763: S[0x0] = V438
0x766: JUMP 0x24b
---
Entry stack: [V11, 0x24b, V153]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x767
[0x767:0x78c]
---
Predecessors: [0x259]
Successors: [0x262]
---
0x767 JUMPDEST
0x768 PUSH1 0x1
0x76a PUSH1 0x0
0x76c SWAP1
0x76d SLOAD
0x76e SWAP1
0x76f PUSH2 0x100
0x772 EXP
0x773 SWAP1
0x774 DIV
0x775 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78a AND
0x78b DUP2
0x78c JUMP
---
0x767: JUMPDEST 
0x768: V439 = 0x1
0x76a: V440 = 0x0
0x76d: V441 = S[0x1]
0x76f: V442 = 0x100
0x772: V443 = EXP 0x100 0x0
0x774: V444 = DIV V441 0x1
0x775: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x78c: JUMP 0x262
---
Entry stack: [V11, 0x262]
Stack pops: 1
Stack additions: [S0, V446]
Exit stack: [V11, 0x262, V446]

================================

Block 0x78d
[0x78d:0x7c5]
---
Predecessors: []
Successors: [0x7c6]
---
0x78d STOP
0x78e LOG1
0x78f PUSH6 0x627a7a723058
0x796 SHA3
0x797 INVALID
0x798 MISSING 0x5d
0x799 PUSH7 0xd3cf38099358c4
0x7a1 MISSING 0x2b
0x7a2 PUSH6 0xb23e145cca31
0x7a9 MISSING 0x4a
0x7aa PUSH3 0x1573f9
0x7ae PUSH9 0x2fad1a6137d2d0f00
0x7b8 MISSING 0x29
0x7b9 PUSH1 0x80
0x7bb PUSH1 0x40
0x7bd MSTORE
0x7be PUSH1 0x4
0x7c0 CALLDATASIZE
0x7c1 LT
0x7c2 PUSH2 0x4c
0x7c5 JUMPI
---
0x78d: STOP 
0x78e: LOG S0 S1 S2
0x78f: V447 = 0x627a7a723058
0x796: V448 = SHA3 0x627a7a723058 S3
0x797: INVALID 
0x798: MISSING 0x5d
0x799: V449 = 0xd3cf38099358c4
0x7a1: MISSING 0x2b
0x7a2: V450 = 0xb23e145cca31
0x7a9: MISSING 0x4a
0x7aa: V451 = 0x1573f9
0x7ae: V452 = 0x2fad1a6137d2d0f00
0x7b8: MISSING 0x29
0x7b9: V453 = 0x80
0x7bb: V454 = 0x40
0x7bd: M[0x40] = 0x80
0x7be: V455 = 0x4
0x7c0: V456 = CALLDATASIZE
0x7c1: V457 = LT V456 0x4
0x7c2: V458 = 0x4c
0x7c5: THROWI V457
---
Entry stack: []
Stack pops: 0
Stack additions: [V448, 0xd3cf38099358c4, 0xb23e145cca31, 0x2fad1a6137d2d0f00, 0x1573f9]
Exit stack: []

================================

Block 0x7c6
[0x7c6:0x7f9]
---
Predecessors: [0x78d]
Successors: [0x7fa]
---
0x7c6 PUSH1 0x0
0x7c8 CALLDATALOAD
0x7c9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7e7 SWAP1
0x7e8 DIV
0x7e9 PUSH4 0xffffffff
0x7ee AND
0x7ef DUP1
0x7f0 PUSH4 0x8da5cb5b
0x7f5 EQ
0x7f6 PUSH2 0x51
0x7f9 JUMPI
---
0x7c6: V459 = 0x0
0x7c8: V460 = CALLDATALOAD 0x0
0x7c9: V461 = 0x100000000000000000000000000000000000000000000000000000000
0x7e8: V462 = DIV V460 0x100000000000000000000000000000000000000000000000000000000
0x7e9: V463 = 0xffffffff
0x7ee: V464 = AND 0xffffffff V462
0x7f0: V465 = 0x8da5cb5b
0x7f5: V466 = EQ 0x8da5cb5b V464
0x7f6: V467 = 0x51
0x7f9: THROWI V466
---
Entry stack: []
Stack pops: 0
Stack additions: [V464]
Exit stack: [V464]

================================

Block 0x7fa
[0x7fa:0x804]
---
Predecessors: [0x7c6]
Successors: [0x805]
---
0x7fa DUP1
0x7fb PUSH4 0xf2fde38b
0x800 EQ
0x801 PUSH2 0xa8
0x804 JUMPI
---
0x7fb: V468 = 0xf2fde38b
0x800: V469 = EQ 0xf2fde38b V464
0x801: V470 = 0xa8
0x804: THROWI V469
---
Entry stack: [V464]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V464]

================================

Block 0x805
[0x805:0x811]
---
Predecessors: [0x7fa]
Successors: [0x812]
---
0x805 JUMPDEST
0x806 PUSH1 0x0
0x808 DUP1
0x809 REVERT
0x80a JUMPDEST
0x80b CALLVALUE
0x80c DUP1
0x80d ISZERO
0x80e PUSH2 0x5d
0x811 JUMPI
---
0x805: JUMPDEST 
0x806: V471 = 0x0
0x809: REVERT 0x0 0x0
0x80a: JUMPDEST 
0x80b: V472 = CALLVALUE
0x80d: V473 = ISZERO V472
0x80e: V474 = 0x5d
0x811: THROWI V473
---
Entry stack: [V464]
Stack pops: 0
Stack additions: [V472]
Exit stack: []

================================

Block 0x812
[0x812:0x868]
---
Predecessors: [0x805]
Successors: [0x869]
---
0x812 PUSH1 0x0
0x814 DUP1
0x815 REVERT
0x816 JUMPDEST
0x817 POP
0x818 PUSH2 0x66
0x81b PUSH2 0xeb
0x81e JUMP
0x81f JUMPDEST
0x820 PUSH1 0x40
0x822 MLOAD
0x823 DUP1
0x824 DUP3
0x825 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83a AND
0x83b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x850 AND
0x851 DUP2
0x852 MSTORE
0x853 PUSH1 0x20
0x855 ADD
0x856 SWAP2
0x857 POP
0x858 POP
0x859 PUSH1 0x40
0x85b MLOAD
0x85c DUP1
0x85d SWAP2
0x85e SUB
0x85f SWAP1
0x860 RETURN
0x861 JUMPDEST
0x862 CALLVALUE
0x863 DUP1
0x864 ISZERO
0x865 PUSH2 0xb4
0x868 JUMPI
---
0x812: V475 = 0x0
0x815: REVERT 0x0 0x0
0x816: JUMPDEST 
0x818: V476 = 0x66
0x81b: V477 = 0xeb
0x81e: THROW 
0x81f: JUMPDEST 
0x820: V478 = 0x40
0x822: V479 = M[0x40]
0x825: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x83a: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x83b: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x850: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x852: M[V479] = V483
0x853: V484 = 0x20
0x855: V485 = ADD 0x20 V479
0x859: V486 = 0x40
0x85b: V487 = M[0x40]
0x85e: V488 = SUB V485 V487
0x860: RETURN V487 V488
0x861: JUMPDEST 
0x862: V489 = CALLVALUE
0x864: V490 = ISZERO V489
0x865: V491 = 0xb4
0x868: THROWI V490
---
Entry stack: [V472]
Stack pops: 0
Stack additions: [0x66, V489]
Exit stack: []

================================

Block 0x869
[0x869:0x91f]
---
Predecessors: [0x812]
Successors: [0x920]
---
0x869 PUSH1 0x0
0x86b DUP1
0x86c REVERT
0x86d JUMPDEST
0x86e POP
0x86f PUSH2 0xe9
0x872 PUSH1 0x4
0x874 DUP1
0x875 CALLDATASIZE
0x876 SUB
0x877 DUP2
0x878 ADD
0x879 SWAP1
0x87a DUP1
0x87b DUP1
0x87c CALLDATALOAD
0x87d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x892 AND
0x893 SWAP1
0x894 PUSH1 0x20
0x896 ADD
0x897 SWAP1
0x898 SWAP3
0x899 SWAP2
0x89a SWAP1
0x89b POP
0x89c POP
0x89d POP
0x89e PUSH2 0x110
0x8a1 JUMP
0x8a2 JUMPDEST
0x8a3 STOP
0x8a4 JUMPDEST
0x8a5 PUSH1 0x0
0x8a7 DUP1
0x8a8 SWAP1
0x8a9 SLOAD
0x8aa SWAP1
0x8ab PUSH2 0x100
0x8ae EXP
0x8af SWAP1
0x8b0 DIV
0x8b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c6 AND
0x8c7 DUP2
0x8c8 JUMP
0x8c9 JUMPDEST
0x8ca PUSH1 0x0
0x8cc DUP1
0x8cd SWAP1
0x8ce SLOAD
0x8cf SWAP1
0x8d0 PUSH2 0x100
0x8d3 EXP
0x8d4 SWAP1
0x8d5 DIV
0x8d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8eb AND
0x8ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x901 AND
0x902 CALLER
0x903 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x918 AND
0x919 EQ
0x91a ISZERO
0x91b ISZERO
0x91c PUSH2 0x16b
0x91f JUMPI
---
0x869: V492 = 0x0
0x86c: REVERT 0x0 0x0
0x86d: JUMPDEST 
0x86f: V493 = 0xe9
0x872: V494 = 0x4
0x875: V495 = CALLDATASIZE
0x876: V496 = SUB V495 0x4
0x878: V497 = ADD 0x4 V496
0x87c: V498 = CALLDATALOAD 0x4
0x87d: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x892: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x894: V501 = 0x20
0x896: V502 = ADD 0x20 0x4
0x89e: V503 = 0x110
0x8a1: THROW 
0x8a2: JUMPDEST 
0x8a3: STOP 
0x8a4: JUMPDEST 
0x8a5: V504 = 0x0
0x8a9: V505 = S[0x0]
0x8ab: V506 = 0x100
0x8ae: V507 = EXP 0x100 0x0
0x8b0: V508 = DIV V505 0x1
0x8b1: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c6: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x8c8: JUMP S0
0x8c9: JUMPDEST 
0x8ca: V511 = 0x0
0x8ce: V512 = S[0x0]
0x8d0: V513 = 0x100
0x8d3: V514 = EXP 0x100 0x0
0x8d5: V515 = DIV V512 0x1
0x8d6: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x8ec: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x901: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x902: V520 = CALLER
0x903: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x918: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x919: V523 = EQ V522 V519
0x91a: V524 = ISZERO V523
0x91b: V525 = ISZERO V524
0x91c: V526 = 0x16b
0x91f: THROWI V525
---
Entry stack: [V489]
Stack pops: 0
Stack additions: [V500, 0xe9, V510, S0]
Exit stack: []

================================

Block 0x920
[0x920:0x95b]
---
Predecessors: [0x869]
Successors: [0x95c]
---
0x920 PUSH1 0x0
0x922 DUP1
0x923 REVERT
0x924 JUMPDEST
0x925 PUSH1 0x0
0x927 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93c AND
0x93d DUP2
0x93e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x953 AND
0x954 EQ
0x955 ISZERO
0x956 ISZERO
0x957 ISZERO
0x958 PUSH2 0x1a7
0x95b JUMPI
---
0x920: V527 = 0x0
0x923: REVERT 0x0 0x0
0x924: JUMPDEST 
0x925: V528 = 0x0
0x927: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x93c: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x93e: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x953: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x954: V533 = EQ V532 0x0
0x955: V534 = ISZERO V533
0x956: V535 = ISZERO V534
0x957: V536 = ISZERO V535
0x958: V537 = 0x1a7
0x95b: THROWI V536
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x95c
[0x95c:0xa52]
---
Predecessors: [0x920]
Successors: []
---
0x95c PUSH1 0x0
0x95e DUP1
0x95f REVERT
0x960 JUMPDEST
0x961 DUP1
0x962 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x977 AND
0x978 PUSH1 0x0
0x97a DUP1
0x97b SWAP1
0x97c SLOAD
0x97d SWAP1
0x97e PUSH2 0x100
0x981 EXP
0x982 SWAP1
0x983 DIV
0x984 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x999 AND
0x99a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9af AND
0x9b0 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9d1 PUSH1 0x40
0x9d3 MLOAD
0x9d4 PUSH1 0x40
0x9d6 MLOAD
0x9d7 DUP1
0x9d8 SWAP2
0x9d9 SUB
0x9da SWAP1
0x9db LOG3
0x9dc DUP1
0x9dd PUSH1 0x0
0x9df DUP1
0x9e0 PUSH2 0x100
0x9e3 EXP
0x9e4 DUP2
0x9e5 SLOAD
0x9e6 DUP2
0x9e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fc MUL
0x9fd NOT
0x9fe AND
0x9ff SWAP1
0xa00 DUP4
0xa01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa16 AND
0xa17 MUL
0xa18 OR
0xa19 SWAP1
0xa1a SSTORE
0xa1b POP
0xa1c POP
0xa1d JUMP
0xa1e STOP
0xa1f LOG1
0xa20 PUSH6 0x627a7a723058
0xa27 SHA3
0xa28 CALLDATASIZE
0xa29 SWAP1
0xa2a MISSING 0xca
0xa2b MISSING 0xf9
0xa2c CREATE
0xa2d MISSING 0xd2
0xa2e MISSING 0x5f
0xa2f MISSING 0xb6
0xa30 MISSING 0xac
0xa31 MISSING 0xa5
0xa32 CREATE
0xa33 DUP14
0xa34 SHA3
0xa35 MISSING 0xd0
0xa36 MISSING 0xa9
0xa37 SWAP14
0xa38 MISSING 0x1e
0xa39 SIGNEXTEND
0xa3a SHA3
0xa3b MISSING 0xa5
0xa3c MISSING 0xb4
0xa3d MISSING 0xbc
0xa3e SWAP5
0xa3f CREATE2
0xa40 MISSING 0xfb
0xa41 MISSING 0xb1
0xa42 DUP11
0xa43 PUSH15 0x613e2f3a0029
---
0x95c: V538 = 0x0
0x95f: REVERT 0x0 0x0
0x960: JUMPDEST 
0x962: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x977: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x978: V541 = 0x0
0x97c: V542 = S[0x0]
0x97e: V543 = 0x100
0x981: V544 = EXP 0x100 0x0
0x983: V545 = DIV V542 0x1
0x984: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x999: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x99a: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x9af: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x9b0: V550 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9d1: V551 = 0x40
0x9d3: V552 = M[0x40]
0x9d4: V553 = 0x40
0x9d6: V554 = M[0x40]
0x9d9: V555 = SUB V552 V554
0x9db: LOG V554 V555 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V549 V540
0x9dd: V556 = 0x0
0x9e0: V557 = 0x100
0x9e3: V558 = EXP 0x100 0x0
0x9e5: V559 = S[0x0]
0x9e7: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fc: V561 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9fd: V562 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9fe: V563 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V559
0xa01: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0xa16: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa17: V566 = MUL V565 0x1
0xa18: V567 = OR V566 V563
0xa1a: S[0x0] = V567
0xa1d: JUMP S1
0xa1e: STOP 
0xa1f: LOG S0 S1 S2
0xa20: V568 = 0x627a7a723058
0xa27: V569 = SHA3 0x627a7a723058 S3
0xa28: V570 = CALLDATASIZE
0xa2a: MISSING 0xca
0xa2b: MISSING 0xf9
0xa2c: V571 = CREATE S0 S1 S2
0xa2d: MISSING 0xd2
0xa2e: MISSING 0x5f
0xa2f: MISSING 0xb6
0xa30: MISSING 0xac
0xa31: MISSING 0xa5
0xa32: V572 = CREATE S0 S1 S2
0xa34: V573 = SHA3 S15 V572
0xa35: MISSING 0xd0
0xa36: MISSING 0xa9
0xa38: MISSING 0x1e
0xa39: V574 = SIGNEXTEND S0 S1
0xa3a: V575 = SHA3 V574 S2
0xa3b: MISSING 0xa5
0xa3c: MISSING 0xb4
0xa3d: MISSING 0xbc
0xa3f: V576 = CREATE2 S5 S1 S2 S3
0xa40: MISSING 0xfb
0xa41: MISSING 0xb1
0xa43: V577 = 0x613e2f3a0029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V569, V570, V571, V573, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V575, V576, S4, S0, 0x613e2f3a0029, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x67243482
Entry block: 0x72
Exit block: 0x429
Body: 0x72, 0x7a, 0x7e, 0x119, 0x2a4, 0x2fe, 0x302, 0x307, 0x311, 0x35b, 0x35c, 0x373, 0x374, 0x3ff, 0x403, 0x40e, 0x417, 0x429, 0x42d, 0x44a

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x12f
Exit block: 0x144
Body: 0x12f, 0x137, 0x13b, 0x144, 0x454

Function 2:
Public function signature: 0xea8ef515
Entry block: 0x186
Exit block: 0x5e7
Body: 0x186, 0x18e, 0x192, 0x1f4, 0x479, 0x4d3, 0x4d7, 0x4dc, 0x4e6, 0x530, 0x531, 0x5bd, 0x5c1, 0x5cc, 0x5d5, 0x5e7, 0x5eb, 0x608

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x20a
Exit block: 0x24b
Body: 0x20a, 0x212, 0x216, 0x24b, 0x612, 0x669, 0x66d, 0x6a5, 0x6a9

Function 4:
Public function signature: 0xfc0c546a
Entry block: 0x24d
Exit block: 0x262
Body: 0x24d, 0x255, 0x259, 0x262, 0x767

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

