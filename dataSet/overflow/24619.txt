Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xaa20e73
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xaa20e73
0x3c: V13 = EQ 0xaa20e73 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd3]
---
0x41 DUP1
0x42 PUSH4 0xe2868c54
0x47 EQ
0x48 PUSH2 0xd3
0x4b JUMPI
---
0x42: V15 = 0xe2868c54
0x47: V16 = EQ 0xe2868c54 V11
0x48: V17 = 0xd3
0x4b: JUMPI 0xd3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xd0]
---
Predecessors: [0x51]
Successors: [0x136]
---
0x5c JUMPDEST
0x5d PUSH2 0xd1
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 SWAP2
0x81 SWAP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 SWAP1
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP1
0x89 DUP3
0x8a ADD
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 DUP1
0x93 DUP1
0x94 PUSH1 0x20
0x96 MUL
0x97 PUSH1 0x20
0x99 ADD
0x9a PUSH1 0x40
0x9c MLOAD
0x9d SWAP1
0x9e DUP2
0x9f ADD
0xa0 PUSH1 0x40
0xa2 MSTORE
0xa3 DUP1
0xa4 SWAP4
0xa5 SWAP3
0xa6 SWAP2
0xa7 SWAP1
0xa8 DUP2
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae DUP4
0xaf DUP4
0xb0 PUSH1 0x20
0xb2 MUL
0xb3 DUP1
0xb4 DUP3
0xb5 DUP5
0xb6 CALLDATACOPY
0xb7 DUP3
0xb8 ADD
0xb9 SWAP2
0xba POP
0xbb POP
0xbc POP
0xbd POP
0xbe POP
0xbf POP
0xc0 SWAP2
0xc1 SWAP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 SWAP1
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP1
0xc9 SWAP2
0xca SWAP1
0xcb POP
0xcc POP
0xcd PUSH2 0x136
0xd0 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xd1
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x7c: V28 = 0x20
0x7e: V29 = ADD 0x20 0x4
0x83: V30 = CALLDATALOAD 0x24
0x85: V31 = 0x20
0x87: V32 = ADD 0x20 0x24
0x8a: V33 = ADD 0x4 V30
0x8c: V34 = CALLDATALOAD V33
0x8e: V35 = 0x20
0x90: V36 = ADD 0x20 V33
0x94: V37 = 0x20
0x96: V38 = MUL 0x20 V34
0x97: V39 = 0x20
0x99: V40 = ADD 0x20 V38
0x9a: V41 = 0x40
0x9c: V42 = M[0x40]
0x9f: V43 = ADD V42 V40
0xa0: V44 = 0x40
0xa2: M[0x40] = V43
0xaa: M[V42] = V34
0xab: V45 = 0x20
0xad: V46 = ADD 0x20 V42
0xb0: V47 = 0x20
0xb2: V48 = MUL 0x20 V34
0xb6: CALLDATACOPY V46 V36 V48
0xb8: V49 = ADD V46 V48
0xc3: V50 = CALLDATALOAD 0x44
0xc5: V51 = 0x20
0xc7: V52 = ADD 0x20 0x44
0xcd: V53 = 0x136
0xd0: JUMP 0x136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd1, V27, V42, V50]
Exit stack: [V11, 0xd1, V27, V42, V50]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: [0x229]
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0x41]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V54 = CALLVALUE
0xd5: V55 = ISZERO V54
0xd6: V56 = 0xde
0xd9: JUMPI 0xde V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V57 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xf3]
---
Predecessors: [0xd3]
Successors: [0x22f]
---
0xde JUMPDEST
0xdf PUSH2 0xf4
0xe2 PUSH1 0x4
0xe4 DUP1
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 SWAP1
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec SWAP2
0xed SWAP1
0xee POP
0xef POP
0xf0 PUSH2 0x22f
0xf3 JUMP
---
0xde: JUMPDEST 
0xdf: V58 = 0xf4
0xe2: V59 = 0x4
0xe6: V60 = CALLDATALOAD 0x4
0xe8: V61 = 0x20
0xea: V62 = ADD 0x20 0x4
0xf0: V63 = 0x22f
0xf3: JUMP 0x22f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf4, V60]
Exit stack: [V11, 0xf4, V60]

================================

Block 0xf4
[0xf4:0x135]
---
Predecessors: [0x23e]
Successors: []
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 DUP1
0xf9 DUP3
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125 AND
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP2
0x12c POP
0x12d POP
0x12e PUSH1 0x40
0x130 MLOAD
0x131 DUP1
0x132 SWAP2
0x133 SUB
0x134 SWAP1
0x135 RETURN
---
0xf4: JUMPDEST 
0xf5: V64 = 0x40
0xf7: V65 = M[0x40]
0xfa: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x110: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x125: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x127: M[V65] = V69
0x128: V70 = 0x20
0x12a: V71 = ADD 0x20 V65
0x12e: V72 = 0x40
0x130: V73 = M[0x40]
0x133: V74 = SUB V71 V73
0x135: RETURN V73 V74
---
Entry stack: [V11, 0xf4, V150]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x136
[0x136:0x13b]
---
Predecessors: [0x5c]
Successors: [0x13c]
---
0x136 JUMPDEST
0x137 PUSH1 0x0
0x139 DUP1
0x13a SWAP1
0x13b POP
---
0x136: JUMPDEST 
0x137: V75 = 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xd1, V27, V42, V50, 0x0]

================================

Block 0x13c
[0x13c:0x145]
---
Predecessors: [0x136, 0x219]
Successors: [0x146, 0x229]
---
0x13c JUMPDEST
0x13d DUP3
0x13e MLOAD
0x13f DUP2
0x140 LT
0x141 ISZERO
0x142 PUSH2 0x229
0x145 JUMPI
---
0x13c: JUMPDEST 
0x13e: V76 = M[V42]
0x140: V77 = LT S0 V76
0x141: V78 = ISZERO V77
0x142: V79 = 0x229
0x145: JUMPI 0x229 V78
---
Entry stack: [V11, 0xd1, V27, V42, V50, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xd1, V27, V42, V50, S0]

================================

Block 0x146
[0x146:0x16d]
---
Predecessors: [0x13c]
Successors: [0x16e, 0x16f]
---
0x146 DUP4
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d PUSH4 0xa9059cbb
0x162 DUP5
0x163 DUP4
0x164 DUP2
0x165 MLOAD
0x166 DUP2
0x167 LT
0x168 ISZERO
0x169 ISZERO
0x16a PUSH2 0x16f
0x16d JUMPI
---
0x147: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x15d: V82 = 0xa9059cbb
0x165: V83 = M[V42]
0x167: V84 = LT S0 V83
0x168: V85 = ISZERO V84
0x169: V86 = ISZERO V85
0x16a: V87 = 0x16f
0x16d: JUMPI 0x16f V86
---
Entry stack: [V11, 0xd1, V27, V42, V50, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V81, 0xa9059cbb, S2, S0]
Exit stack: [V11, 0xd1, V27, V42, V50, S0, V81, 0xa9059cbb, V42, S0]

================================

Block 0x16e
[0x16e:0x16e]
---
Predecessors: [0x146]
Successors: []
---
0x16e INVALID
---
0x16e: INVALID 
---
Entry stack: [V11, 0xd1, V27, V42, V50, S4, V81, 0xa9059cbb, V42, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S4, V81, 0xa9059cbb, V42, S0]

================================

Block 0x16f
[0x16f:0x203]
---
Predecessors: [0x146]
Successors: [0x204, 0x208]
---
0x16f JUMPDEST
0x170 SWAP1
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 PUSH1 0x20
0x177 MUL
0x178 ADD
0x179 MLOAD
0x17a PUSH8 0xde0b6b3a7640000
0x183 DUP6
0x184 MUL
0x185 PUSH1 0x40
0x187 MLOAD
0x188 DUP4
0x189 PUSH4 0xffffffff
0x18e AND
0x18f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1ad MUL
0x1ae DUP2
0x1af MSTORE
0x1b0 PUSH1 0x4
0x1b2 ADD
0x1b3 DUP1
0x1b4 DUP4
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 DUP3
0x1e7 DUP2
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec SWAP3
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 PUSH1 0x0
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 DUP4
0x1f7 SUB
0x1f8 DUP2
0x1f9 PUSH1 0x0
0x1fb DUP8
0x1fc DUP1
0x1fd EXTCODESIZE
0x1fe ISZERO
0x1ff ISZERO
0x200 PUSH2 0x208
0x203 JUMPI
---
0x16f: JUMPDEST 
0x171: V88 = 0x20
0x173: V89 = ADD 0x20 V42
0x175: V90 = 0x20
0x177: V91 = MUL 0x20 S0
0x178: V92 = ADD V91 V89
0x179: V93 = M[V92]
0x17a: V94 = 0xde0b6b3a7640000
0x184: V95 = MUL V50 0xde0b6b3a7640000
0x185: V96 = 0x40
0x187: V97 = M[0x40]
0x189: V98 = 0xffffffff
0x18e: V99 = AND 0xffffffff 0xa9059cbb
0x18f: V100 = 0x100000000000000000000000000000000000000000000000000000000
0x1ad: V101 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1af: M[V97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1b0: V102 = 0x4
0x1b2: V103 = ADD 0x4 V97
0x1b5: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1cb: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1e2: M[V103] = V107
0x1e3: V108 = 0x20
0x1e5: V109 = ADD 0x20 V103
0x1e8: M[V109] = V95
0x1e9: V110 = 0x20
0x1eb: V111 = ADD 0x20 V109
0x1f0: V112 = 0x0
0x1f2: V113 = 0x40
0x1f4: V114 = M[0x40]
0x1f7: V115 = SUB V111 V114
0x1f9: V116 = 0x0
0x1fd: V117 = EXTCODESIZE V81
0x1fe: V118 = ISZERO V117
0x1ff: V119 = ISZERO V118
0x200: V120 = 0x208
0x203: JUMPI 0x208 V119
---
Entry stack: [V11, 0xd1, V27, V42, V50, S4, V81, 0xa9059cbb, V42, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V111, 0x0, V114, V115, V114, 0x0, S3]
Exit stack: [V11, 0xd1, V27, V42, V50, S4, V81, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V81]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x16f]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V121 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50, S9, V81, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S9, V81, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V81]

================================

Block 0x208
[0x208:0x214]
---
Predecessors: [0x16f]
Successors: [0x215, 0x219]
---
0x208 JUMPDEST
0x209 PUSH2 0x2c6
0x20c GAS
0x20d SUB
0x20e CALL
0x20f ISZERO
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x208: JUMPDEST 
0x209: V122 = 0x2c6
0x20c: V123 = GAS
0x20d: V124 = SUB V123 0x2c6
0x20e: V125 = CALL V124 V81 0x0 V114 V115 V114 0x0
0x20f: V126 = ISZERO V125
0x210: V127 = ISZERO V126
0x211: V128 = 0x219
0x214: JUMPI 0x219 V127
---
Entry stack: [V11, 0xd1, V27, V42, V50, S9, V81, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V81]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S9, V81, 0xa9059cbb, V111]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x208]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V129 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50, S3, V81, 0xa9059cbb, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S3, V81, 0xa9059cbb, V111]

================================

Block 0x219
[0x219:0x228]
---
Predecessors: [0x208]
Successors: [0x13c]
---
0x219 JUMPDEST
0x21a POP
0x21b POP
0x21c POP
0x21d DUP1
0x21e DUP1
0x21f PUSH1 0x1
0x221 ADD
0x222 SWAP2
0x223 POP
0x224 POP
0x225 PUSH2 0x13c
0x228 JUMP
---
0x219: JUMPDEST 
0x21f: V130 = 0x1
0x221: V131 = ADD 0x1 S3
0x225: V132 = 0x13c
0x228: JUMP 0x13c
---
Entry stack: [V11, 0xd1, V27, V42, V50, S3, V81, 0xa9059cbb, V111]
Stack pops: 4
Stack additions: [V131]
Exit stack: [V11, 0xd1, V27, V42, V50, V131]

================================

Block 0x229
[0x229:0x22e]
---
Predecessors: [0x13c]
Successors: [0xd1]
---
0x229 JUMPDEST
0x22a POP
0x22b POP
0x22c POP
0x22d POP
0x22e JUMP
---
0x229: JUMPDEST 
0x22e: JUMP 0xd1
---
Entry stack: [V11, 0xd1, V27, V42, V50, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x22f
[0x22f:0x23c]
---
Predecessors: [0xde]
Successors: [0x23d, 0x23e]
---
0x22f JUMPDEST
0x230 PUSH1 0x0
0x232 DUP2
0x233 DUP2
0x234 SLOAD
0x235 DUP2
0x236 LT
0x237 ISZERO
0x238 ISZERO
0x239 PUSH2 0x23e
0x23c JUMPI
---
0x22f: JUMPDEST 
0x230: V133 = 0x0
0x234: V134 = S[0x0]
0x236: V135 = LT V60 V134
0x237: V136 = ISZERO V135
0x238: V137 = ISZERO V136
0x239: V138 = 0x23e
0x23c: JUMPI 0x23e V137
---
Entry stack: [V11, 0xf4, V60]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0xf4, V60, 0x0, V60]

================================

Block 0x23d
[0x23d:0x23d]
---
Predecessors: [0x22f]
Successors: []
---
0x23d INVALID
---
0x23d: INVALID 
---
Entry stack: [V11, 0xf4, V60, 0x0, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V60, 0x0, V60]

================================

Block 0x23e
[0x23e:0x26d]
---
Predecessors: [0x22f]
Successors: [0xf4]
---
0x23e JUMPDEST
0x23f SWAP1
0x240 PUSH1 0x0
0x242 MSTORE
0x243 PUSH1 0x20
0x245 PUSH1 0x0
0x247 SHA3
0x248 SWAP1
0x249 ADD
0x24a PUSH1 0x0
0x24c SWAP2
0x24d POP
0x24e SLOAD
0x24f SWAP1
0x250 PUSH2 0x100
0x253 EXP
0x254 SWAP1
0x255 DIV
0x256 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26b AND
0x26c DUP2
0x26d JUMP
---
0x23e: JUMPDEST 
0x240: V139 = 0x0
0x242: M[0x0] = 0x0
0x243: V140 = 0x20
0x245: V141 = 0x0
0x247: V142 = SHA3 0x0 0x20
0x249: V143 = ADD V60 V142
0x24a: V144 = 0x0
0x24e: V145 = S[V143]
0x250: V146 = 0x100
0x253: V147 = EXP 0x100 0x0
0x255: V148 = DIV V145 0x1
0x256: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x26d: JUMP 0xf4
---
Entry stack: [V11, 0xf4, V60, 0x0, V60]
Stack pops: 4
Stack additions: [S3, V150]
Exit stack: [V11, 0xf4, V150]

================================

Block 0x26e
[0x26e:0x29e]
---
Predecessors: []
Successors: []
---
0x26e STOP
0x26f LOG1
0x270 PUSH6 0x627a7a723058
0x277 SHA3
0x278 PUSH16 0x272b910c45acfdad9b9f93d9ae428087
0x289 PUSH21 0x749bd4bd2c997ae274a145788b460029
---
0x26e: STOP 
0x26f: LOG S0 S1 S2
0x270: V151 = 0x627a7a723058
0x277: V152 = SHA3 0x627a7a723058 S3
0x278: V153 = 0x272b910c45acfdad9b9f93d9ae428087
0x289: V154 = 0x749bd4bd2c997ae274a145788b460029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x749bd4bd2c997ae274a145788b460029, 0x272b910c45acfdad9b9f93d9ae428087, V152]
Exit stack: []

================================

Function 0:
Public function signature: 0xaa20e73
Entry block: 0x51
Exit block: 0x215
Body: 0x51, 0x58, 0x5c, 0xd1, 0x136, 0x13c, 0x146, 0x16e, 0x16f, 0x204, 0x208, 0x215, 0x219, 0x229

Function 1:
Public function signature: 0xe2868c54
Entry block: 0xd3
Exit block: 0xf4
Body: 0xd3, 0xda, 0xde, 0xf4, 0x22f, 0x23d, 0x23e

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

