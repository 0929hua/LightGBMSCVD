Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x3a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xb4a99a4e
0x34 EQ
0x35 PUSH1 0x3a
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xb4a99a4e
0x34: V9 = EQ 0xb4a99a4e V7
0x35: V10 = 0x3a
0x37: JUMPI 0x3a V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x39]
---
Predecessors: [0x0]
Successors: []
---
0x38 JUMPDEST
0x39 INVALID
---
0x38: JUMPDEST 
0x39: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x41]
---
0x3a JUMPDEST
0x3b CALLVALUE
0x3c ISZERO
0x3d PUSH1 0x41
0x3f JUMPI
---
0x3a: JUMPDEST 
0x3b: V11 = CALLVALUE
0x3c: V12 = ISZERO V11
0x3d: V13 = 0x41
0x3f: JUMPI 0x41 V12
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x40
[0x40:0x40]
---
Predecessors: [0x3a]
Successors: []
---
0x40 INVALID
---
0x40: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x41
[0x41:0x46]
---
Predecessors: [0x3a]
Successors: [0x89]
---
0x41 JUMPDEST
0x42 PUSH1 0x47
0x44 PUSH1 0x89
0x46 JUMP
---
0x41: JUMPDEST 
0x42: V14 = 0x47
0x44: V15 = 0x89
0x46: JUMP 0x89
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x47]
Exit stack: [V7, 0x47]

================================

Block 0x47
[0x47:0x88]
---
Predecessors: [0x89]
Successors: []
---
0x47 JUMPDEST
0x48 PUSH1 0x40
0x4a MLOAD
0x4b DUP1
0x4c DUP3
0x4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62 AND
0x63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78 AND
0x79 DUP2
0x7a MSTORE
0x7b PUSH1 0x20
0x7d ADD
0x7e SWAP2
0x7f POP
0x80 POP
0x81 PUSH1 0x40
0x83 MLOAD
0x84 DUP1
0x85 SWAP2
0x86 SUB
0x87 SWAP1
0x88 RETURN
---
0x47: JUMPDEST 
0x48: V16 = 0x40
0x4a: V17 = M[0x40]
0x4d: V18 = 0xffffffffffffffffffffffffffffffffffffffff
0x62: V19 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x63: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x78: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x7a: M[V17] = V21
0x7b: V22 = 0x20
0x7d: V23 = ADD 0x20 V17
0x81: V24 = 0x40
0x83: V25 = M[0x40]
0x86: V26 = SUB V23 V25
0x88: RETURN V25 V26
---
Entry stack: [V7, 0x47, V34]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x47]

================================

Block 0x89
[0x89:0xae]
---
Predecessors: [0x41]
Successors: [0x47]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c PUSH1 0x0
0x8e SWAP1
0x8f SLOAD
0x90 SWAP1
0x91 PUSH2 0x100
0x94 EXP
0x95 SWAP1
0x96 DIV
0x97 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac AND
0xad DUP2
0xae JUMP
---
0x89: JUMPDEST 
0x8a: V27 = 0x0
0x8c: V28 = 0x0
0x8f: V29 = S[0x0]
0x91: V30 = 0x100
0x94: V31 = EXP 0x100 0x0
0x96: V32 = DIV V29 0x1
0x97: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xac: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xae: JUMP 0x47
---
Entry stack: [V7, 0x47]
Stack pops: 1
Stack additions: [S0, V34]
Exit stack: [V7, 0x47, V34]

================================

Block 0xaf
[0xaf:0xe5]
---
Predecessors: []
Successors: [0xe6]
---
0xaf STOP
0xb0 LOG1
0xb1 PUSH6 0x627a7a723058
0xb8 SHA3
0xb9 PUSH13 0xf10e5a258d25346a1c7ec5fdcb
0xc7 POP
0xc8 MISSING 0xee
0xc9 ADD
0xca PUSH2 0xeaf2
0xcd DUP3
0xce MISSING 0xb7
0xcf MISSING 0xea
0xd0 SLOAD
0xd1 MISSING 0xdb
0xd2 MISSING 0x5e
0xd3 MISSING 0xaf
0xd4 GAS
0xd5 SHR
0xd6 MISSING 0xbd
0xd7 MISSING 0x4b
0xd8 AND
0xd9 STOP
0xda MISSING 0x29
0xdb PUSH1 0x60
0xdd PUSH1 0x40
0xdf MSTORE
0xe0 CALLDATASIZE
0xe1 ISZERO
0xe2 PUSH2 0x76
0xe5 JUMPI
---
0xaf: STOP 
0xb0: LOG S0 S1 S2
0xb1: V35 = 0x627a7a723058
0xb8: V36 = SHA3 0x627a7a723058 S3
0xb9: V37 = 0xf10e5a258d25346a1c7ec5fdcb
0xc8: MISSING 0xee
0xc9: V38 = ADD S0 S1
0xca: V39 = 0xeaf2
0xce: MISSING 0xb7
0xcf: MISSING 0xea
0xd0: V40 = S[S0]
0xd1: MISSING 0xdb
0xd2: MISSING 0x5e
0xd3: MISSING 0xaf
0xd4: V41 = GAS
0xd5: V42 = SHR V41 S0
0xd6: MISSING 0xbd
0xd7: MISSING 0x4b
0xd8: V43 = AND S0 S1
0xd9: STOP 
0xda: MISSING 0x29
0xdb: V44 = 0x60
0xdd: V45 = 0x40
0xdf: M[0x40] = 0x60
0xe0: V46 = CALLDATASIZE
0xe1: V47 = ISZERO V46
0xe2: V48 = 0x76
0xe5: THROWI V47
---
Entry stack: []
Stack pops: 0
Stack additions: [V36, S2, 0xeaf2, V38, S2, V40, V42, V43]
Exit stack: []

================================

Block 0xe6
[0xe6:0x119]
---
Predecessors: [0xaf]
Successors: [0x11a]
---
0xe6 PUSH1 0x0
0xe8 CALLDATALOAD
0xe9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x107 SWAP1
0x108 DIV
0x109 PUSH4 0xffffffff
0x10e AND
0x10f DUP1
0x110 PUSH4 0x2e1a7d4d
0x115 EQ
0x116 PUSH2 0x87
0x119 JUMPI
---
0xe6: V49 = 0x0
0xe8: V50 = CALLDATALOAD 0x0
0xe9: V51 = 0x100000000000000000000000000000000000000000000000000000000
0x108: V52 = DIV V50 0x100000000000000000000000000000000000000000000000000000000
0x109: V53 = 0xffffffff
0x10e: V54 = AND 0xffffffff V52
0x110: V55 = 0x2e1a7d4d
0x115: V56 = EQ 0x2e1a7d4d V54
0x116: V57 = 0x87
0x119: THROWI V56
---
Entry stack: []
Stack pops: 0
Stack additions: [V54]
Exit stack: [V54]

================================

Block 0x11a
[0x11a:0x124]
---
Predecessors: [0xe6]
Successors: [0x125]
---
0x11a DUP1
0x11b PUSH4 0x41c0e1b5
0x120 EQ
0x121 PUSH2 0xa7
0x124 JUMPI
---
0x11b: V58 = 0x41c0e1b5
0x120: V59 = EQ 0x41c0e1b5 V54
0x121: V60 = 0xa7
0x124: THROWI V59
---
Entry stack: [V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V54]

================================

Block 0x125
[0x125:0x12f]
---
Predecessors: [0x11a]
Successors: [0x130]
---
0x125 DUP1
0x126 PUSH4 0xb4a99a4e
0x12b EQ
0x12c PUSH2 0xb9
0x12f JUMPI
---
0x126: V61 = 0xb4a99a4e
0x12b: V62 = EQ 0xb4a99a4e V54
0x12c: V63 = 0xb9
0x12f: THROWI V62
---
Entry stack: [V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V54]

================================

Block 0x130
[0x130:0x13a]
---
Predecessors: [0x125]
Successors: [0x13b]
---
0x130 DUP1
0x131 PUSH4 0xd0e30db0
0x136 EQ
0x137 PUSH2 0x10b
0x13a JUMPI
---
0x131: V64 = 0xd0e30db0
0x136: V65 = EQ 0xd0e30db0 V54
0x137: V66 = 0x10b
0x13a: THROWI V65
---
Entry stack: [V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V54]

================================

Block 0x13b
[0x13b:0x145]
---
Predecessors: [0x130]
Successors: [0x146]
---
0x13b DUP1
0x13c PUSH4 0xe1c7392a
0x141 EQ
0x142 PUSH2 0x115
0x145 JUMPI
---
0x13c: V67 = 0xe1c7392a
0x141: V68 = EQ 0xe1c7392a V54
0x142: V69 = 0x115
0x145: THROWI V68
---
Entry stack: [V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V54]

================================

Block 0x146
[0x146:0x150]
---
Predecessors: [0x13b]
Successors: [0x151]
---
0x146 DUP1
0x147 PUSH4 0xfc7e286d
0x14c EQ
0x14d PUSH2 0x127
0x150 JUMPI
---
0x147: V70 = 0xfc7e286d
0x14c: V71 = EQ 0xfc7e286d V54
0x14d: V72 = 0x127
0x150: THROWI V71
---
Entry stack: [V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V54]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0x146]
Successors: [0x155]
---
0x151 JUMPDEST
0x152 PUSH2 0x85
---
0x151: JUMPDEST 
0x152: V73 = 0x85
---
Entry stack: [V54]
Stack pops: 0
Stack additions: [0x85]
Exit stack: [V54, 0x85]

================================

Block 0x155
[0x155:0x15d]
---
Predecessors: [0x151]
Successors: [0x15e]
---
0x155 JUMPDEST
0x156 PUSH2 0x82
0x159 PUSH2 0x171
0x15c JUMP
0x15d JUMPDEST
---
0x155: JUMPDEST 
0x156: V74 = 0x82
0x159: V75 = 0x171
0x15c: THROW 
0x15d: JUMPDEST 
---
Entry stack: [V54, 0x85]
Stack pops: 0
Stack additions: [0x82]
Exit stack: []

================================

Block 0x15e
[0x15e:0x168]
---
Predecessors: [0x155]
Successors: [0x169]
---
0x15e JUMPDEST
0x15f JUMP
0x160 JUMPDEST
0x161 STOP
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x8f
0x168 JUMPI
---
0x15e: JUMPDEST 
0x15f: JUMP S0
0x160: JUMPDEST 
0x161: STOP 
0x162: JUMPDEST 
0x163: V76 = CALLVALUE
0x164: V77 = ISZERO V76
0x165: V78 = 0x8f
0x168: THROWI V77
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x169
[0x169:0x188]
---
Predecessors: [0x15e]
Successors: [0x189]
---
0x169 INVALID
0x16a JUMPDEST
0x16b PUSH2 0xa5
0x16e PUSH1 0x4
0x170 DUP1
0x171 DUP1
0x172 CALLDATALOAD
0x173 SWAP1
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP1
0x178 SWAP2
0x179 SWAP1
0x17a POP
0x17b POP
0x17c PUSH2 0x1dc
0x17f JUMP
0x180 JUMPDEST
0x181 STOP
0x182 JUMPDEST
0x183 CALLVALUE
0x184 ISZERO
0x185 PUSH2 0xaf
0x188 JUMPI
---
0x169: INVALID 
0x16a: JUMPDEST 
0x16b: V79 = 0xa5
0x16e: V80 = 0x4
0x172: V81 = CALLDATALOAD 0x4
0x174: V82 = 0x20
0x176: V83 = ADD 0x20 0x4
0x17c: V84 = 0x1dc
0x17f: THROW 
0x180: JUMPDEST 
0x181: STOP 
0x182: JUMPDEST 
0x183: V85 = CALLVALUE
0x184: V86 = ISZERO V85
0x185: V87 = 0xaf
0x188: THROWI V86
---
Entry stack: []
Stack pops: 0
Stack additions: [V81, 0xa5]
Exit stack: []

================================

Block 0x189
[0x189:0x19a]
---
Predecessors: [0x169]
Successors: [0x19b]
---
0x189 INVALID
0x18a JUMPDEST
0x18b PUSH2 0xb7
0x18e PUSH2 0x2d2
0x191 JUMP
0x192 JUMPDEST
0x193 STOP
0x194 JUMPDEST
0x195 CALLVALUE
0x196 ISZERO
0x197 PUSH2 0xc1
0x19a JUMPI
---
0x189: INVALID 
0x18a: JUMPDEST 
0x18b: V88 = 0xb7
0x18e: V89 = 0x2d2
0x191: THROW 
0x192: JUMPDEST 
0x193: STOP 
0x194: JUMPDEST 
0x195: V90 = CALLVALUE
0x196: V91 = ISZERO V90
0x197: V92 = 0xc1
0x19a: THROWI V91
---
Entry stack: []
Stack pops: 0
Stack additions: [0xb7]
Exit stack: []

================================

Block 0x19b
[0x19b:0x1f6]
---
Predecessors: [0x189]
Successors: [0x1f7]
---
0x19b INVALID
0x19c JUMPDEST
0x19d PUSH2 0xc9
0x1a0 PUSH2 0x372
0x1a3 JUMP
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 DUP3
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d5 AND
0x1d6 DUP2
0x1d7 MSTORE
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP2
0x1dc POP
0x1dd POP
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 SWAP2
0x1e3 SUB
0x1e4 SWAP1
0x1e5 RETURN
0x1e6 JUMPDEST
0x1e7 PUSH2 0x113
0x1ea PUSH2 0x171
0x1ed JUMP
0x1ee JUMPDEST
0x1ef STOP
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 ISZERO
0x1f3 PUSH2 0x11d
0x1f6 JUMPI
---
0x19b: INVALID 
0x19c: JUMPDEST 
0x19d: V93 = 0xc9
0x1a0: V94 = 0x372
0x1a3: THROW 
0x1a4: JUMPDEST 
0x1a5: V95 = 0x40
0x1a7: V96 = M[0x40]
0x1aa: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1c0: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1d7: M[V96] = V100
0x1d8: V101 = 0x20
0x1da: V102 = ADD 0x20 V96
0x1de: V103 = 0x40
0x1e0: V104 = M[0x40]
0x1e3: V105 = SUB V102 V104
0x1e5: RETURN V104 V105
0x1e6: JUMPDEST 
0x1e7: V106 = 0x113
0x1ea: V107 = 0x171
0x1ed: THROW 
0x1ee: JUMPDEST 
0x1ef: STOP 
0x1f0: JUMPDEST 
0x1f1: V108 = CALLVALUE
0x1f2: V109 = ISZERO V108
0x1f3: V110 = 0x11d
0x1f6: THROWI V109
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc9, 0x113]
Exit stack: []

================================

Block 0x1f7
[0x1f7:0x208]
---
Predecessors: [0x19b]
Successors: [0x209]
---
0x1f7 INVALID
0x1f8 JUMPDEST
0x1f9 PUSH2 0x125
0x1fc PUSH2 0x398
0x1ff JUMP
0x200 JUMPDEST
0x201 STOP
0x202 JUMPDEST
0x203 CALLVALUE
0x204 ISZERO
0x205 PUSH2 0x12f
0x208 JUMPI
---
0x1f7: INVALID 
0x1f8: JUMPDEST 
0x1f9: V111 = 0x125
0x1fc: V112 = 0x398
0x1ff: THROW 
0x200: JUMPDEST 
0x201: STOP 
0x202: JUMPDEST 
0x203: V113 = CALLVALUE
0x204: V114 = ISZERO V113
0x205: V115 = 0x12f
0x208: THROWI V114
---
Entry stack: []
Stack pops: 0
Stack additions: [0x125]
Exit stack: []

================================

Block 0x209
[0x209:0x25d]
---
Predecessors: [0x1f7]
Successors: [0x25e]
---
0x209 INVALID
0x20a JUMPDEST
0x20b PUSH2 0x15b
0x20e PUSH1 0x4
0x210 DUP1
0x211 DUP1
0x212 CALLDATALOAD
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 SWAP1
0x22a PUSH1 0x20
0x22c ADD
0x22d SWAP1
0x22e SWAP2
0x22f SWAP1
0x230 POP
0x231 POP
0x232 PUSH2 0x3dc
0x235 JUMP
0x236 JUMPDEST
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b DUP3
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x20
0x240 ADD
0x241 SWAP2
0x242 POP
0x243 POP
0x244 PUSH1 0x40
0x246 MLOAD
0x247 DUP1
0x248 SWAP2
0x249 SUB
0x24a SWAP1
0x24b RETURN
0x24c JUMPDEST
0x24d PUSH8 0xde0b6b3a7640000
0x256 CALLVALUE
0x257 LT
0x258 ISZERO
0x259 ISZERO
0x25a PUSH2 0x1d4
0x25d JUMPI
---
0x209: INVALID 
0x20a: JUMPDEST 
0x20b: V116 = 0x15b
0x20e: V117 = 0x4
0x212: V118 = CALLDATALOAD 0x4
0x213: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x22a: V121 = 0x20
0x22c: V122 = ADD 0x20 0x4
0x232: V123 = 0x3dc
0x235: THROW 
0x236: JUMPDEST 
0x237: V124 = 0x40
0x239: V125 = M[0x40]
0x23d: M[V125] = S0
0x23e: V126 = 0x20
0x240: V127 = ADD 0x20 V125
0x244: V128 = 0x40
0x246: V129 = M[0x40]
0x249: V130 = SUB V127 V129
0x24b: RETURN V129 V130
0x24c: JUMPDEST 
0x24d: V131 = 0xde0b6b3a7640000
0x256: V132 = CALLVALUE
0x257: V133 = LT V132 0xde0b6b3a7640000
0x258: V134 = ISZERO V133
0x259: V135 = ISZERO V134
0x25a: V136 = 0x1d4
0x25d: THROWI V135
---
Entry stack: []
Stack pops: 0
Stack additions: [V120, 0x15b]
Exit stack: []

================================

Block 0x25e
[0x25e:0x2b4]
---
Predecessors: [0x209]
Successors: [0x2b5]
---
0x25e CALLVALUE
0x25f PUSH1 0x2
0x261 PUSH1 0x0
0x263 CALLER
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 AND
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x0
0x29d SHA3
0x29e PUSH1 0x0
0x2a0 DUP3
0x2a1 DUP3
0x2a2 SLOAD
0x2a3 ADD
0x2a4 SWAP3
0x2a5 POP
0x2a6 POP
0x2a7 DUP2
0x2a8 SWAP1
0x2a9 SSTORE
0x2aa POP
0x2ab PUSH2 0x1d9
0x2ae JUMP
0x2af JUMPDEST
0x2b0 PUSH2 0x1da
0x2b3 JUMP
0x2b4 JUMPDEST
---
0x25e: V137 = CALLVALUE
0x25f: V138 = 0x2
0x261: V139 = 0x0
0x263: V140 = CALLER
0x264: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x27a: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x291: M[0x0] = V144
0x292: V145 = 0x20
0x294: V146 = ADD 0x20 0x0
0x297: M[0x20] = 0x2
0x298: V147 = 0x20
0x29a: V148 = ADD 0x20 0x20
0x29b: V149 = 0x0
0x29d: V150 = SHA3 0x0 0x40
0x29e: V151 = 0x0
0x2a2: V152 = S[V150]
0x2a3: V153 = ADD V152 V137
0x2a9: S[V150] = V153
0x2ab: V154 = 0x1d9
0x2ae: THROW 
0x2af: JUMPDEST 
0x2b0: V155 = 0x1da
0x2b3: THROW 
0x2b4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b5
[0x2b5:0x310]
---
Predecessors: [0x25e]
Successors: [0x311]
---
0x2b5 JUMPDEST
0x2b6 JUMP
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba PUSH1 0x0
0x2bc PUSH1 0x0
0x2be SWAP1
0x2bf SLOAD
0x2c0 SWAP1
0x2c1 PUSH2 0x100
0x2c4 EXP
0x2c5 SWAP1
0x2c6 DIV
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f2 AND
0x2f3 CALLER
0x2f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x309 AND
0x30a EQ
0x30b ISZERO
0x30c ISZERO
0x30d PUSH2 0x23b
0x310 JUMPI
---
0x2b5: JUMPDEST 
0x2b6: JUMP S0
0x2b7: JUMPDEST 
0x2b8: V156 = 0x0
0x2ba: V157 = 0x0
0x2bc: V158 = 0x0
0x2bf: V159 = S[0x0]
0x2c1: V160 = 0x100
0x2c4: V161 = EXP 0x100 0x0
0x2c6: V162 = DIV V159 0x1
0x2c7: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x2dd: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f2: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2f3: V167 = CALLER
0x2f4: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x309: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x30a: V170 = EQ V169 V166
0x30b: V171 = ISZERO V170
0x30c: V172 = ISZERO V171
0x30d: V173 = 0x23b
0x310: THROWI V172
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0x311
[0x311:0x362]
---
Predecessors: [0x2b5]
Successors: [0x363]
---
0x311 PUSH1 0x0
0x313 PUSH1 0x0
0x315 REVERT
0x316 JUMPDEST
0x317 PUSH1 0x2
0x319 PUSH1 0x0
0x31b CALLER
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 AND
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x20
0x34c ADD
0x34d SWAP1
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x20
0x352 ADD
0x353 PUSH1 0x0
0x355 SHA3
0x356 SLOAD
0x357 SWAP1
0x358 POP
0x359 DUP1
0x35a DUP3
0x35b GT
0x35c ISZERO
0x35d DUP1
0x35e ISZERO
0x35f PUSH2 0x28d
0x362 JUMPI
---
0x311: V174 = 0x0
0x313: V175 = 0x0
0x315: REVERT 0x0 0x0
0x316: JUMPDEST 
0x317: V176 = 0x2
0x319: V177 = 0x0
0x31b: V178 = CALLER
0x31c: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x332: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x349: M[0x0] = V182
0x34a: V183 = 0x20
0x34c: V184 = ADD 0x20 0x0
0x34f: M[0x20] = 0x2
0x350: V185 = 0x20
0x352: V186 = ADD 0x20 0x20
0x353: V187 = 0x0
0x355: V188 = SHA3 0x0 0x40
0x356: V189 = S[V188]
0x35b: V190 = GT S1 V189
0x35c: V191 = ISZERO V190
0x35e: V192 = ISZERO V191
0x35f: V193 = 0x28d
0x362: THROWI V192
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V191, V189, S1]
Exit stack: []

================================

Block 0x363
[0x363:0x367]
---
Predecessors: [0x311]
Successors: [0x368]
---
0x363 POP
0x364 PUSH1 0x0
0x366 DUP2
0x367 GT
---
0x364: V194 = 0x0
0x367: V195 = GT V189 0x0
---
Entry stack: [S2, V189, V191]
Stack pops: 2
Stack additions: [S1, V195]
Exit stack: [S2, V189, V195]

================================

Block 0x368
[0x368:0x36d]
---
Predecessors: [0x363]
Successors: [0x36e]
---
0x368 JUMPDEST
0x369 ISZERO
0x36a PUSH2 0x2cc
0x36d JUMPI
---
0x368: JUMPDEST 
0x369: V196 = ISZERO V195
0x36a: V197 = 0x2cc
0x36d: THROWI V196
---
Entry stack: [S2, V189, V195]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V189]

================================

Block 0x36e
[0x36e:0x3a6]
---
Predecessors: [0x368]
Successors: [0x3a7]
---
0x36e CALLER
0x36f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x384 AND
0x385 PUSH2 0x8fc
0x388 DUP4
0x389 SWAP1
0x38a DUP2
0x38b ISZERO
0x38c MUL
0x38d SWAP1
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 SWAP1
0x393 POP
0x394 PUSH1 0x0
0x396 PUSH1 0x40
0x398 MLOAD
0x399 DUP1
0x39a DUP4
0x39b SUB
0x39c DUP2
0x39d DUP6
0x39e DUP9
0x39f DUP9
0x3a0 CALL
0x3a1 SWAP4
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 POP
0x3a6 POP
---
0x36e: V198 = CALLER
0x36f: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x384: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x385: V201 = 0x8fc
0x38b: V202 = ISZERO S1
0x38c: V203 = MUL V202 0x8fc
0x38e: V204 = 0x40
0x390: V205 = M[0x40]
0x394: V206 = 0x0
0x396: V207 = 0x40
0x398: V208 = M[0x40]
0x39b: V209 = SUB V205 V208
0x3a0: V210 = CALL V203 V200 S1 V208 V209 V208 0x0
---
Entry stack: [S1, V189]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, V189]

================================

Block 0x3a7
[0x3a7:0x3a7]
---
Predecessors: [0x36e]
Successors: [0x3a8]
---
0x3a7 JUMPDEST
---
0x3a7: JUMPDEST 
---
Entry stack: [S1, V189]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V189]

================================

Block 0x3a8
[0x3a8:0x3a8]
---
Predecessors: [0x3a7]
Successors: [0x3a9]
---
0x3a8 JUMPDEST
---
0x3a8: JUMPDEST 
---
Entry stack: [S1, V189]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V189]

================================

Block 0x3a9
[0x3a9:0x404]
---
Predecessors: [0x3a8]
Successors: [0x405]
---
0x3a9 JUMPDEST
0x3aa POP
0x3ab POP
0x3ac JUMP
0x3ad JUMPDEST
0x3ae PUSH1 0x0
0x3b0 PUSH1 0x0
0x3b2 SWAP1
0x3b3 SLOAD
0x3b4 SWAP1
0x3b5 PUSH2 0x100
0x3b8 EXP
0x3b9 SWAP1
0x3ba DIV
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 AND
0x3d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e6 AND
0x3e7 CALLER
0x3e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fd AND
0x3fe EQ
0x3ff ISZERO
0x400 ISZERO
0x401 PUSH2 0x32f
0x404 JUMPI
---
0x3a9: JUMPDEST 
0x3ac: JUMP S2
0x3ad: JUMPDEST 
0x3ae: V211 = 0x0
0x3b0: V212 = 0x0
0x3b3: V213 = S[0x0]
0x3b5: V214 = 0x100
0x3b8: V215 = EXP 0x100 0x0
0x3ba: V216 = DIV V213 0x1
0x3bb: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x3d1: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3e7: V221 = CALLER
0x3e8: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x3fe: V224 = EQ V223 V220
0x3ff: V225 = ISZERO V224
0x400: V226 = ISZERO V225
0x401: V227 = 0x32f
0x404: THROWI V226
---
Entry stack: [S1, V189]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x405
[0x405:0x42b]
---
Predecessors: [0x3a9]
Successors: [0x42c]
---
0x405 PUSH1 0x0
0x407 PUSH1 0x0
0x409 REVERT
0x40a JUMPDEST
0x40b PUSH1 0x0
0x40d ADDRESS
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 BALANCE
0x425 EQ
0x426 ISZERO
0x427 ISZERO
0x428 PUSH2 0x356
0x42b JUMPI
---
0x405: V228 = 0x0
0x407: V229 = 0x0
0x409: REVERT 0x0 0x0
0x40a: JUMPDEST 
0x40b: V230 = 0x0
0x40d: V231 = ADDRESS
0x40e: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x424: V234 = BALANCE V233
0x425: V235 = EQ V234 0x0
0x426: V236 = ISZERO V235
0x427: V237 = ISZERO V236
0x428: V238 = 0x356
0x42b: THROWI V237
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42c
[0x42c:0x44a]
---
Predecessors: [0x405]
Successors: [0x44b]
---
0x42c PUSH1 0x0
0x42e PUSH1 0x0
0x430 REVERT
0x431 JUMPDEST
0x432 CALLER
0x433 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x448 AND
0x449 SELFDESTRUCT
0x44a JUMPDEST
---
0x42c: V239 = 0x0
0x42e: V240 = 0x0
0x430: REVERT 0x0 0x0
0x431: JUMPDEST 
0x432: V241 = CALLER
0x433: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x448: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x449: SELFDESTRUCT V243
0x44a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x44b
[0x44b:0x4b4]
---
Predecessors: [0x42c]
Successors: [0x4b5]
---
0x44b JUMPDEST
0x44c JUMP
0x44d JUMPDEST
0x44e PUSH1 0x1
0x450 PUSH1 0x0
0x452 SWAP1
0x453 SLOAD
0x454 SWAP1
0x455 PUSH2 0x100
0x458 EXP
0x459 SWAP1
0x45a DIV
0x45b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x470 AND
0x471 DUP2
0x472 JUMP
0x473 JUMPDEST
0x474 CALLER
0x475 PUSH1 0x1
0x477 PUSH1 0x0
0x479 PUSH2 0x100
0x47c EXP
0x47d DUP2
0x47e SLOAD
0x47f DUP2
0x480 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x495 MUL
0x496 NOT
0x497 AND
0x498 SWAP1
0x499 DUP4
0x49a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4af AND
0x4b0 MUL
0x4b1 OR
0x4b2 SWAP1
0x4b3 SSTORE
0x4b4 POP
---
0x44b: JUMPDEST 
0x44c: JUMP S0
0x44d: JUMPDEST 
0x44e: V244 = 0x1
0x450: V245 = 0x0
0x453: V246 = S[0x1]
0x455: V247 = 0x100
0x458: V248 = EXP 0x100 0x0
0x45a: V249 = DIV V246 0x1
0x45b: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x470: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x472: JUMP S0
0x473: JUMPDEST 
0x474: V252 = CALLER
0x475: V253 = 0x1
0x477: V254 = 0x0
0x479: V255 = 0x100
0x47c: V256 = EXP 0x100 0x0
0x47e: V257 = S[0x1]
0x480: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x495: V259 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x496: V260 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x497: V261 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V257
0x49a: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x4b0: V264 = MUL V263 0x1
0x4b1: V265 = OR V264 V261
0x4b3: S[0x1] = V265
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x4b5
[0x4b5:0x4fa]
---
Predecessors: [0x44b]
Successors: []
---
0x4b5 JUMPDEST
0x4b6 JUMP
0x4b7 JUMPDEST
0x4b8 PUSH1 0x2
0x4ba PUSH1 0x20
0x4bc MSTORE
0x4bd DUP1
0x4be PUSH1 0x0
0x4c0 MSTORE
0x4c1 PUSH1 0x40
0x4c3 PUSH1 0x0
0x4c5 SHA3
0x4c6 PUSH1 0x0
0x4c8 SWAP2
0x4c9 POP
0x4ca SWAP1
0x4cb POP
0x4cc SLOAD
0x4cd DUP2
0x4ce JUMP
0x4cf STOP
0x4d0 LOG1
0x4d1 PUSH6 0x627a7a723058
0x4d8 SHA3
0x4d9 PUSH30 0x23afb0e75b30501933eb6277731c0ee6342b59b3d3a6c3830669ada105
0x4f8 MISSING 0xcb
0x4f9 STOP
0x4fa MISSING 0x29
---
0x4b5: JUMPDEST 
0x4b6: JUMP S0
0x4b7: JUMPDEST 
0x4b8: V266 = 0x2
0x4ba: V267 = 0x20
0x4bc: M[0x20] = 0x2
0x4be: V268 = 0x0
0x4c0: M[0x0] = S0
0x4c1: V269 = 0x40
0x4c3: V270 = 0x0
0x4c5: V271 = SHA3 0x0 0x40
0x4c6: V272 = 0x0
0x4cc: V273 = S[V271]
0x4ce: JUMP S1
0x4cf: STOP 
0x4d0: LOG S0 S1 S2
0x4d1: V274 = 0x627a7a723058
0x4d8: V275 = SHA3 0x627a7a723058 S3
0x4d9: V276 = 0x23afb0e75b30501933eb6277731c0ee6342b59b3d3a6c3830669ada105
0x4f8: MISSING 0xcb
0x4f9: STOP 
0x4fa: MISSING 0x29
---
Entry stack: []
Stack pops: 12
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xb4a99a4e
Entry block: 0x3a
Exit block: 0x47
Body: 0x3a, 0x40, 0x41, 0x47, 0x89

Function 1:
Public fallback function
Entry block: 0x38
Exit block: 0x38
Body: 0x38

