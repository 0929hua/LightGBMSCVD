Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x282]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x10309781
0x3a EQ
0x3b PUSH2 0x282
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x10309781
0x3a: V12 = EQ 0x10309781 V10
0x3b: V13 = 0x282
0x3e: JUMPI 0x282 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2ab]
---
0x3f DUP1
0x40 PUSH4 0x29dcb0cf
0x45 EQ
0x46 PUSH2 0x2ab
0x49 JUMPI
---
0x40: V14 = 0x29dcb0cf
0x45: V15 = EQ 0x29dcb0cf V10
0x46: V16 = 0x2ab
0x49: JUMPI 0x2ab V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x2d4]
---
0x4a DUP1
0x4b PUSH4 0x38af3eed
0x50 EQ
0x51 PUSH2 0x2d4
0x54 JUMPI
---
0x4b: V17 = 0x38af3eed
0x50: V18 = EQ 0x38af3eed V10
0x51: V19 = 0x2d4
0x54: JUMPI 0x2d4 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x329]
---
0x55 DUP1
0x56 PUSH4 0x70a08231
0x5b EQ
0x5c PUSH2 0x329
0x5f JUMPI
---
0x56: V20 = 0x70a08231
0x5b: V21 = EQ 0x70a08231 V10
0x5c: V22 = 0x329
0x5f: JUMPI 0x329 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x376]
---
0x60 DUP1
0x61 PUSH4 0x7b3e5e7b
0x66 EQ
0x67 PUSH2 0x376
0x6a JUMPI
---
0x61: V23 = 0x7b3e5e7b
0x66: V24 = EQ 0x7b3e5e7b V10
0x67: V25 = 0x376
0x6a: JUMPI 0x376 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x39f]
---
0x6b DUP1
0x6c PUSH4 0xbe9a6555
0x71 EQ
0x72 PUSH2 0x39f
0x75 JUMPI
---
0x6c: V26 = 0xbe9a6555
0x71: V27 = EQ 0xbe9a6555 V10
0x72: V28 = 0x39f
0x75: JUMPI 0x39f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x76]
---
Predecessors: [0x0, 0x6b]
Successors: [0x77]
---
0x76 JUMPDEST
---
0x76: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x85]
---
Predecessors: [0x76]
Successors: [0x86, 0x8d]
---
0x77 JUMPDEST
0x78 PUSH1 0x0
0x7a PUSH1 0x1
0x7c SLOAD
0x7d TIMESTAMP
0x7e LT
0x7f ISZERO
0x80 DUP1
0x81 ISZERO
0x82 PUSH2 0x8d
0x85 JUMPI
---
0x77: JUMPDEST 
0x78: V29 = 0x0
0x7a: V30 = 0x1
0x7c: V31 = S[0x1]
0x7d: V32 = TIMESTAMP
0x7e: V33 = LT V32 V31
0x7f: V34 = ISZERO V33
0x81: V35 = ISZERO V34
0x82: V36 = 0x8d
0x85: JUMPI 0x8d V35
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, V34]
Exit stack: [V10, 0x0, V34]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d]
---
0x86 POP
0x87 PUSH1 0x2
0x89 SLOAD
0x8a TIMESTAMP
0x8b GT
0x8c ISZERO
---
0x87: V37 = 0x2
0x89: V38 = S[0x2]
0x8a: V39 = TIMESTAMP
0x8b: V40 = GT V39 V38
0x8c: V41 = ISZERO V40
---
Entry stack: [V10, 0x0, V34]
Stack pops: 1
Stack additions: [V41]
Exit stack: [V10, 0x0, V41]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0x77, 0x86]
Successors: [0x94, 0xa4]
---
0x8d JUMPDEST
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0xa4
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8f: V42 = ISZERO S0
0x90: V43 = 0xa4
0x93: JUMPI 0xa4 V42
---
Entry stack: [V10, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x0, S0]

================================

Block 0x94
[0x94:0xa3]
---
Predecessors: [0x8d]
Successors: [0xa4]
---
0x94 POP
0x95 PUSH10 0x14542ba12a337c00000
0xa0 PUSH1 0x4
0xa2 SLOAD
0xa3 LT
---
0x95: V44 = 0x14542ba12a337c00000
0xa0: V45 = 0x4
0xa2: V46 = S[0x4]
0xa3: V47 = LT V46 0x14542ba12a337c00000
---
Entry stack: [V10, 0x0, S0]
Stack pops: 1
Stack additions: [V47]
Exit stack: [V10, 0x0, V47]

================================

Block 0xa4
[0xa4:0xaa]
---
Predecessors: [0x8d, 0x94]
Successors: [0xab, 0xaf]
---
0xa4 JUMPDEST
0xa5 ISZERO
0xa6 ISZERO
0xa7 PUSH2 0xaf
0xaa JUMPI
---
0xa4: JUMPDEST 
0xa5: V48 = ISZERO S0
0xa6: V49 = ISZERO V48
0xa7: V50 = 0xaf
0xaa: JUMPI 0xaf V49
---
Entry stack: [V10, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xab
[0xab:0xae]
---
Predecessors: [0xa4]
Successors: []
---
0xab PUSH1 0x0
0xad DUP1
0xae REVERT
---
0xab: V51 = 0x0
0xae: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xaf
[0xaf:0x1e3]
---
Predecessors: [0xa4]
Successors: [0x1e4, 0x27e]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 SWAP1
0xb2 POP
0xb3 DUP1
0xb4 PUSH1 0x5
0xb6 PUSH1 0x0
0xb8 CALLER
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce AND
0xcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4 AND
0xe5 DUP2
0xe6 MSTORE
0xe7 PUSH1 0x20
0xe9 ADD
0xea SWAP1
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 PUSH1 0x0
0xf2 SHA3
0xf3 PUSH1 0x0
0xf5 DUP3
0xf6 DUP3
0xf7 SLOAD
0xf8 ADD
0xf9 SWAP3
0xfa POP
0xfb POP
0xfc DUP2
0xfd SWAP1
0xfe SSTORE
0xff POP
0x100 DUP1
0x101 PUSH1 0x4
0x103 PUSH1 0x0
0x105 DUP3
0x106 DUP3
0x107 SLOAD
0x108 ADD
0x109 SWAP3
0x10a POP
0x10b POP
0x10c DUP2
0x10d SWAP1
0x10e SSTORE
0x10f POP
0x110 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x131 CALLER
0x132 DUP3
0x133 PUSH1 0x1
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP5
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b DUP4
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x20
0x170 ADD
0x171 DUP3
0x172 ISZERO
0x173 ISZERO
0x174 ISZERO
0x175 ISZERO
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP4
0x17c POP
0x17d POP
0x17e POP
0x17f POP
0x180 PUSH1 0x40
0x182 MLOAD
0x183 DUP1
0x184 SWAP2
0x185 SUB
0x186 SWAP1
0x187 LOG1
0x188 PUSH1 0x3
0x18a PUSH1 0x0
0x18c SWAP1
0x18d SLOAD
0x18e SWAP1
0x18f PUSH2 0x100
0x192 EXP
0x193 SWAP1
0x194 DIV
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH2 0x8fc
0x1c4 DUP3
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 ISZERO
0x1c8 MUL
0x1c9 SWAP1
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd PUSH1 0x0
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP4
0x1d4 SUB
0x1d5 DUP2
0x1d6 DUP6
0x1d7 DUP9
0x1d8 DUP9
0x1d9 CALL
0x1da SWAP4
0x1db POP
0x1dc POP
0x1dd POP
0x1de POP
0x1df ISZERO
0x1e0 PUSH2 0x27e
0x1e3 JUMPI
---
0xaf: JUMPDEST 
0xb0: V52 = CALLVALUE
0xb4: V53 = 0x5
0xb6: V54 = 0x0
0xb8: V55 = CALLER
0xb9: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xcf: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xe6: M[0x0] = V59
0xe7: V60 = 0x20
0xe9: V61 = ADD 0x20 0x0
0xec: M[0x20] = 0x5
0xed: V62 = 0x20
0xef: V63 = ADD 0x20 0x20
0xf0: V64 = 0x0
0xf2: V65 = SHA3 0x0 0x40
0xf3: V66 = 0x0
0xf7: V67 = S[V65]
0xf8: V68 = ADD V67 V52
0xfe: S[V65] = V68
0x101: V69 = 0x4
0x103: V70 = 0x0
0x107: V71 = S[0x4]
0x108: V72 = ADD V71 V52
0x10e: S[0x4] = V72
0x110: V73 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x131: V74 = CALLER
0x133: V75 = 0x1
0x135: V76 = 0x40
0x137: V77 = M[0x40]
0x13a: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x150: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x167: M[V77] = V81
0x168: V82 = 0x20
0x16a: V83 = ADD 0x20 V77
0x16d: M[V83] = V52
0x16e: V84 = 0x20
0x170: V85 = ADD 0x20 V83
0x172: V86 = ISZERO 0x1
0x173: V87 = ISZERO 0x0
0x174: V88 = ISZERO 0x1
0x175: V89 = ISZERO 0x0
0x177: M[V85] = 0x1
0x178: V90 = 0x20
0x17a: V91 = ADD 0x20 V85
0x180: V92 = 0x40
0x182: V93 = M[0x40]
0x185: V94 = SUB V91 V93
0x187: LOG V93 V94 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x188: V95 = 0x3
0x18a: V96 = 0x0
0x18d: V97 = S[0x3]
0x18f: V98 = 0x100
0x192: V99 = EXP 0x100 0x0
0x194: V100 = DIV V97 0x1
0x195: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1ab: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c1: V105 = 0x8fc
0x1c7: V106 = ISZERO V52
0x1c8: V107 = MUL V106 0x8fc
0x1ca: V108 = 0x40
0x1cc: V109 = M[0x40]
0x1cd: V110 = 0x0
0x1cf: V111 = 0x40
0x1d1: V112 = M[0x40]
0x1d4: V113 = SUB V109 V112
0x1d9: V114 = CALL V107 V104 V52 V112 V113 V112 0x0
0x1df: V115 = ISZERO V114
0x1e0: V116 = 0x27e
0x1e3: JUMPI 0x27e V115
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V52]
Exit stack: [V10, V52]

================================

Block 0x1e4
[0x1e4:0x27d]
---
Predecessors: [0xaf]
Successors: [0x27e]
---
0x1e4 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x205 PUSH1 0x3
0x207 PUSH1 0x0
0x209 SWAP1
0x20a SLOAD
0x20b SWAP1
0x20c PUSH2 0x100
0x20f EXP
0x210 SWAP1
0x211 DIV
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 AND
0x228 DUP3
0x229 PUSH1 0x0
0x22b PUSH1 0x40
0x22d MLOAD
0x22e DUP1
0x22f DUP5
0x230 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x245 AND
0x246 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25b AND
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 ADD
0x261 DUP4
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 DUP3
0x268 ISZERO
0x269 ISZERO
0x26a ISZERO
0x26b ISZERO
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP4
0x272 POP
0x273 POP
0x274 POP
0x275 POP
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a SWAP2
0x27b SUB
0x27c SWAP1
0x27d LOG1
---
0x1e4: V117 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x205: V118 = 0x3
0x207: V119 = 0x0
0x20a: V120 = S[0x3]
0x20c: V121 = 0x100
0x20f: V122 = EXP 0x100 0x0
0x211: V123 = DIV V120 0x1
0x212: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x229: V126 = 0x0
0x22b: V127 = 0x40
0x22d: V128 = M[0x40]
0x230: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x245: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x246: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x25d: M[V128] = V132
0x25e: V133 = 0x20
0x260: V134 = ADD 0x20 V128
0x263: M[V134] = V52
0x264: V135 = 0x20
0x266: V136 = ADD 0x20 V134
0x268: V137 = ISZERO 0x0
0x269: V138 = ISZERO 0x1
0x26a: V139 = ISZERO 0x0
0x26b: V140 = ISZERO 0x1
0x26d: M[V136] = 0x0
0x26e: V141 = 0x20
0x270: V142 = ADD 0x20 V136
0x276: V143 = 0x40
0x278: V144 = M[0x40]
0x27b: V145 = SUB V142 V144
0x27d: LOG V144 V145 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, V52]

================================

Block 0x27e
[0x27e:0x27e]
---
Predecessors: [0xaf, 0x1e4]
Successors: [0x27f]
---
0x27e JUMPDEST
---
0x27e: JUMPDEST 
---
Entry stack: [V10, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52]

================================

Block 0x27f
[0x27f:0x281]
---
Predecessors: [0x27e]
Successors: []
---
0x27f JUMPDEST
0x280 POP
0x281 STOP
---
0x27f: JUMPDEST 
0x281: STOP 
---
Entry stack: [V10, V52]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x288]
---
Predecessors: [0xb]
Successors: [0x289, 0x28d]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x282: JUMPDEST 
0x283: V146 = CALLVALUE
0x284: V147 = ISZERO V146
0x285: V148 = 0x28d
0x288: JUMPI 0x28d V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x282]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V149 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0x282]
Successors: [0x3c8]
---
0x28d JUMPDEST
0x28e PUSH2 0x295
0x291 PUSH2 0x3c8
0x294 JUMP
---
0x28d: JUMPDEST 
0x28e: V150 = 0x295
0x291: V151 = 0x3c8
0x294: JUMP 0x3c8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x295]
Exit stack: [V10, 0x295]

================================

Block 0x295
[0x295:0x2aa]
---
Predecessors: [0x3c8]
Successors: []
---
0x295 JUMPDEST
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a DUP3
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x20
0x29f ADD
0x2a0 SWAP2
0x2a1 POP
0x2a2 POP
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP1
0x2a7 SWAP2
0x2a8 SUB
0x2a9 SWAP1
0x2aa RETURN
---
0x295: JUMPDEST 
0x296: V152 = 0x40
0x298: V153 = M[0x40]
0x29c: M[V153] = V235
0x29d: V154 = 0x20
0x29f: V155 = ADD 0x20 V153
0x2a3: V156 = 0x40
0x2a5: V157 = M[0x40]
0x2a8: V158 = SUB V155 V157
0x2aa: RETURN V157 V158
---
Entry stack: [V10, 0x295, V235]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x295]

================================

Block 0x2ab
[0x2ab:0x2b1]
---
Predecessors: [0x3f]
Successors: [0x2b2, 0x2b6]
---
0x2ab JUMPDEST
0x2ac CALLVALUE
0x2ad ISZERO
0x2ae PUSH2 0x2b6
0x2b1 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V159 = CALLVALUE
0x2ad: V160 = ISZERO V159
0x2ae: V161 = 0x2b6
0x2b1: JUMPI 0x2b6 V160
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2b5]
---
Predecessors: [0x2ab]
Successors: []
---
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 REVERT
---
0x2b2: V162 = 0x0
0x2b5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b6
[0x2b6:0x2bd]
---
Predecessors: [0x2ab]
Successors: [0x3ce]
---
0x2b6 JUMPDEST
0x2b7 PUSH2 0x2be
0x2ba PUSH2 0x3ce
0x2bd JUMP
---
0x2b6: JUMPDEST 
0x2b7: V163 = 0x2be
0x2ba: V164 = 0x3ce
0x2bd: JUMP 0x3ce
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2be]
Exit stack: [V10, 0x2be]

================================

Block 0x2be
[0x2be:0x2d3]
---
Predecessors: [0x3ce]
Successors: []
---
0x2be JUMPDEST
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 DUP3
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP2
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 SWAP2
0x2d1 SUB
0x2d2 SWAP1
0x2d3 RETURN
---
0x2be: JUMPDEST 
0x2bf: V165 = 0x40
0x2c1: V166 = M[0x40]
0x2c5: M[V166] = V237
0x2c6: V167 = 0x20
0x2c8: V168 = ADD 0x20 V166
0x2cc: V169 = 0x40
0x2ce: V170 = M[0x40]
0x2d1: V171 = SUB V168 V170
0x2d3: RETURN V170 V171
---
Entry stack: [V10, 0x2be, V237]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2be]

================================

Block 0x2d4
[0x2d4:0x2da]
---
Predecessors: [0x4a]
Successors: [0x2db, 0x2df]
---
0x2d4 JUMPDEST
0x2d5 CALLVALUE
0x2d6 ISZERO
0x2d7 PUSH2 0x2df
0x2da JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V172 = CALLVALUE
0x2d6: V173 = ISZERO V172
0x2d7: V174 = 0x2df
0x2da: JUMPI 0x2df V173
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2db
[0x2db:0x2de]
---
Predecessors: [0x2d4]
Successors: []
---
0x2db PUSH1 0x0
0x2dd DUP1
0x2de REVERT
---
0x2db: V175 = 0x0
0x2de: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2df
[0x2df:0x2e6]
---
Predecessors: [0x2d4]
Successors: [0x3d4]
---
0x2df JUMPDEST
0x2e0 PUSH2 0x2e7
0x2e3 PUSH2 0x3d4
0x2e6 JUMP
---
0x2df: JUMPDEST 
0x2e0: V176 = 0x2e7
0x2e3: V177 = 0x3d4
0x2e6: JUMP 0x3d4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e7]
Exit stack: [V10, 0x2e7]

================================

Block 0x2e7
[0x2e7:0x328]
---
Predecessors: [0x3d4]
Successors: []
---
0x2e7 JUMPDEST
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP3
0x2ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x302 AND
0x303 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x318 AND
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP2
0x31f POP
0x320 POP
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 SWAP2
0x326 SUB
0x327 SWAP1
0x328 RETURN
---
0x2e7: JUMPDEST 
0x2e8: V178 = 0x40
0x2ea: V179 = M[0x40]
0x2ed: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x302: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x303: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x318: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x31a: M[V179] = V183
0x31b: V184 = 0x20
0x31d: V185 = ADD 0x20 V179
0x321: V186 = 0x40
0x323: V187 = M[0x40]
0x326: V188 = SUB V185 V187
0x328: RETURN V187 V188
---
Entry stack: [V10, 0x2e7, V245]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2e7]

================================

Block 0x329
[0x329:0x32f]
---
Predecessors: [0x55]
Successors: [0x330, 0x334]
---
0x329 JUMPDEST
0x32a CALLVALUE
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x329: JUMPDEST 
0x32a: V189 = CALLVALUE
0x32b: V190 = ISZERO V189
0x32c: V191 = 0x334
0x32f: JUMPI 0x334 V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x329]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V192 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x334
[0x334:0x35f]
---
Predecessors: [0x329]
Successors: [0x3fa]
---
0x334 JUMPDEST
0x335 PUSH2 0x360
0x338 PUSH1 0x4
0x33a DUP1
0x33b DUP1
0x33c CALLDATALOAD
0x33d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x352 AND
0x353 SWAP1
0x354 PUSH1 0x20
0x356 ADD
0x357 SWAP1
0x358 SWAP2
0x359 SWAP1
0x35a POP
0x35b POP
0x35c PUSH2 0x3fa
0x35f JUMP
---
0x334: JUMPDEST 
0x335: V193 = 0x360
0x338: V194 = 0x4
0x33c: V195 = CALLDATALOAD 0x4
0x33d: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x352: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x354: V198 = 0x20
0x356: V199 = ADD 0x20 0x4
0x35c: V200 = 0x3fa
0x35f: JUMP 0x3fa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V197]
Exit stack: [V10, 0x360, V197]

================================

Block 0x360
[0x360:0x375]
---
Predecessors: [0x3fa]
Successors: []
---
0x360 JUMPDEST
0x361 PUSH1 0x40
0x363 MLOAD
0x364 DUP1
0x365 DUP3
0x366 DUP2
0x367 MSTORE
0x368 PUSH1 0x20
0x36a ADD
0x36b SWAP2
0x36c POP
0x36d POP
0x36e PUSH1 0x40
0x370 MLOAD
0x371 DUP1
0x372 SWAP2
0x373 SUB
0x374 SWAP1
0x375 RETURN
---
0x360: JUMPDEST 
0x361: V201 = 0x40
0x363: V202 = M[0x40]
0x367: M[V202] = V253
0x368: V203 = 0x20
0x36a: V204 = ADD 0x20 V202
0x36e: V205 = 0x40
0x370: V206 = M[0x40]
0x373: V207 = SUB V204 V206
0x375: RETURN V206 V207
---
Entry stack: [V10, 0x360, V253]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x360]

================================

Block 0x376
[0x376:0x37c]
---
Predecessors: [0x60]
Successors: [0x37d, 0x381]
---
0x376 JUMPDEST
0x377 CALLVALUE
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x376: JUMPDEST 
0x377: V208 = CALLVALUE
0x378: V209 = ISZERO V208
0x379: V210 = 0x381
0x37c: JUMPI 0x381 V209
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x376]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V211 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x381
[0x381:0x388]
---
Predecessors: [0x376]
Successors: [0x412]
---
0x381 JUMPDEST
0x382 PUSH2 0x389
0x385 PUSH2 0x412
0x388 JUMP
---
0x381: JUMPDEST 
0x382: V212 = 0x389
0x385: V213 = 0x412
0x388: JUMP 0x412
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x389]
Exit stack: [V10, 0x389]

================================

Block 0x389
[0x389:0x39e]
---
Predecessors: [0x412]
Successors: []
---
0x389 JUMPDEST
0x38a PUSH1 0x40
0x38c MLOAD
0x38d DUP1
0x38e DUP3
0x38f DUP2
0x390 MSTORE
0x391 PUSH1 0x20
0x393 ADD
0x394 SWAP2
0x395 POP
0x396 POP
0x397 PUSH1 0x40
0x399 MLOAD
0x39a DUP1
0x39b SWAP2
0x39c SUB
0x39d SWAP1
0x39e RETURN
---
0x389: JUMPDEST 
0x38a: V214 = 0x40
0x38c: V215 = M[0x40]
0x390: M[V215] = V255
0x391: V216 = 0x20
0x393: V217 = ADD 0x20 V215
0x397: V218 = 0x40
0x399: V219 = M[0x40]
0x39c: V220 = SUB V217 V219
0x39e: RETURN V219 V220
---
Entry stack: [V10, 0x389, V255]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x389]

================================

Block 0x39f
[0x39f:0x3a5]
---
Predecessors: [0x6b]
Successors: [0x3a6, 0x3aa]
---
0x39f JUMPDEST
0x3a0 CALLVALUE
0x3a1 ISZERO
0x3a2 PUSH2 0x3aa
0x3a5 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V221 = CALLVALUE
0x3a1: V222 = ISZERO V221
0x3a2: V223 = 0x3aa
0x3a5: JUMPI 0x3aa V222
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a6
[0x3a6:0x3a9]
---
Predecessors: [0x39f]
Successors: []
---
0x3a6 PUSH1 0x0
0x3a8 DUP1
0x3a9 REVERT
---
0x3a6: V224 = 0x0
0x3a9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3aa
[0x3aa:0x3b1]
---
Predecessors: [0x39f]
Successors: [0x418]
---
0x3aa JUMPDEST
0x3ab PUSH2 0x3b2
0x3ae PUSH2 0x418
0x3b1 JUMP
---
0x3aa: JUMPDEST 
0x3ab: V225 = 0x3b2
0x3ae: V226 = 0x418
0x3b1: JUMP 0x418
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3b2]
Exit stack: [V10, 0x3b2]

================================

Block 0x3b2
[0x3b2:0x3c7]
---
Predecessors: [0x418]
Successors: []
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 DUP3
0x3b8 DUP2
0x3b9 MSTORE
0x3ba PUSH1 0x20
0x3bc ADD
0x3bd SWAP2
0x3be POP
0x3bf POP
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 DUP1
0x3c4 SWAP2
0x3c5 SUB
0x3c6 SWAP1
0x3c7 RETURN
---
0x3b2: JUMPDEST 
0x3b3: V227 = 0x40
0x3b5: V228 = M[0x40]
0x3b9: M[V228] = V257
0x3ba: V229 = 0x20
0x3bc: V230 = ADD 0x20 V228
0x3c0: V231 = 0x40
0x3c2: V232 = M[0x40]
0x3c5: V233 = SUB V230 V232
0x3c7: RETURN V232 V233
---
Entry stack: [V10, 0x3b2, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3b2]

================================

Block 0x3c8
[0x3c8:0x3cd]
---
Predecessors: [0x28d]
Successors: [0x295]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x0
0x3cb SLOAD
0x3cc DUP2
0x3cd JUMP
---
0x3c8: JUMPDEST 
0x3c9: V234 = 0x0
0x3cb: V235 = S[0x0]
0x3cd: JUMP 0x295
---
Entry stack: [V10, 0x295]
Stack pops: 1
Stack additions: [S0, V235]
Exit stack: [V10, 0x295, V235]

================================

Block 0x3ce
[0x3ce:0x3d3]
---
Predecessors: [0x2b6]
Successors: [0x2be]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x2
0x3d1 SLOAD
0x3d2 DUP2
0x3d3 JUMP
---
0x3ce: JUMPDEST 
0x3cf: V236 = 0x2
0x3d1: V237 = S[0x2]
0x3d3: JUMP 0x2be
---
Entry stack: [V10, 0x2be]
Stack pops: 1
Stack additions: [S0, V237]
Exit stack: [V10, 0x2be, V237]

================================

Block 0x3d4
[0x3d4:0x3f9]
---
Predecessors: [0x2df]
Successors: [0x2e7]
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x3
0x3d7 PUSH1 0x0
0x3d9 SWAP1
0x3da SLOAD
0x3db SWAP1
0x3dc PUSH2 0x100
0x3df EXP
0x3e0 SWAP1
0x3e1 DIV
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 AND
0x3f8 DUP2
0x3f9 JUMP
---
0x3d4: JUMPDEST 
0x3d5: V238 = 0x3
0x3d7: V239 = 0x0
0x3da: V240 = S[0x3]
0x3dc: V241 = 0x100
0x3df: V242 = EXP 0x100 0x0
0x3e1: V243 = DIV V240 0x1
0x3e2: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x3f9: JUMP 0x2e7
---
Entry stack: [V10, 0x2e7]
Stack pops: 1
Stack additions: [S0, V245]
Exit stack: [V10, 0x2e7, V245]

================================

Block 0x3fa
[0x3fa:0x411]
---
Predecessors: [0x334]
Successors: [0x360]
---
0x3fa JUMPDEST
0x3fb PUSH1 0x5
0x3fd PUSH1 0x20
0x3ff MSTORE
0x400 DUP1
0x401 PUSH1 0x0
0x403 MSTORE
0x404 PUSH1 0x40
0x406 PUSH1 0x0
0x408 SHA3
0x409 PUSH1 0x0
0x40b SWAP2
0x40c POP
0x40d SWAP1
0x40e POP
0x40f SLOAD
0x410 DUP2
0x411 JUMP
---
0x3fa: JUMPDEST 
0x3fb: V246 = 0x5
0x3fd: V247 = 0x20
0x3ff: M[0x20] = 0x5
0x401: V248 = 0x0
0x403: M[0x0] = V197
0x404: V249 = 0x40
0x406: V250 = 0x0
0x408: V251 = SHA3 0x0 0x40
0x409: V252 = 0x0
0x40f: V253 = S[V251]
0x411: JUMP 0x360
---
Entry stack: [V10, 0x360, V197]
Stack pops: 2
Stack additions: [S1, V253]
Exit stack: [V10, 0x360, V253]

================================

Block 0x412
[0x412:0x417]
---
Predecessors: [0x381]
Successors: [0x389]
---
0x412 JUMPDEST
0x413 PUSH1 0x4
0x415 SLOAD
0x416 DUP2
0x417 JUMP
---
0x412: JUMPDEST 
0x413: V254 = 0x4
0x415: V255 = S[0x4]
0x417: JUMP 0x389
---
Entry stack: [V10, 0x389]
Stack pops: 1
Stack additions: [S0, V255]
Exit stack: [V10, 0x389, V255]

================================

Block 0x418
[0x418:0x41d]
---
Predecessors: [0x3aa]
Successors: [0x3b2]
---
0x418 JUMPDEST
0x419 PUSH1 0x1
0x41b SLOAD
0x41c DUP2
0x41d JUMP
---
0x418: JUMPDEST 
0x419: V256 = 0x1
0x41b: V257 = S[0x1]
0x41d: JUMP 0x3b2
---
Entry stack: [V10, 0x3b2]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V10, 0x3b2, V257]

================================

Block 0x41e
[0x41e:0x449]
---
Predecessors: []
Successors: []
---
0x41e STOP
0x41f LOG1
0x420 PUSH6 0x627a7a723058
0x427 SHA3
0x428 MISSING 0xbc
0x429 MISSING 0xbc
0x42a MISSING 0xb9
0x42b PUSH26 0xd41e50a88bdb06b82a360db3f87822a220cd5288b37006d507bd
0x446 MISSING 0xec
0x447 MISSING 0x5e
0x448 STOP
0x449 MISSING 0x29
---
0x41e: STOP 
0x41f: LOG S0 S1 S2
0x420: V258 = 0x627a7a723058
0x427: V259 = SHA3 0x627a7a723058 S3
0x428: MISSING 0xbc
0x429: MISSING 0xbc
0x42a: MISSING 0xb9
0x42b: V260 = 0xd41e50a88bdb06b82a360db3f87822a220cd5288b37006d507bd
0x446: MISSING 0xec
0x447: MISSING 0x5e
0x448: STOP 
0x449: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V259, 0xd41e50a88bdb06b82a360db3f87822a220cd5288b37006d507bd]
Exit stack: []

================================

Function 0:
Public function signature: 0x10309781
Entry block: 0x282
Exit block: 0x295
Body: 0x282, 0x289, 0x28d, 0x295, 0x3c8

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2ab
Exit block: 0x2be
Body: 0x2ab, 0x2b2, 0x2b6, 0x2be, 0x3ce

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x2d4
Exit block: 0x2e7
Body: 0x2d4, 0x2db, 0x2df, 0x2e7, 0x3d4

Function 3:
Public function signature: 0x70a08231
Entry block: 0x329
Exit block: 0x360
Body: 0x329, 0x330, 0x334, 0x360, 0x3fa

Function 4:
Public function signature: 0x7b3e5e7b
Entry block: 0x376
Exit block: 0x389
Body: 0x376, 0x37d, 0x381, 0x389, 0x412

Function 5:
Public function signature: 0xbe9a6555
Entry block: 0x39f
Exit block: 0x3b2
Body: 0x39f, 0x3a6, 0x3aa, 0x3b2, 0x418

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x27f
Body: 0x76, 0x77, 0x86, 0x8d, 0x94, 0xa4, 0xab, 0xaf, 0x1e4, 0x27e, 0x27f

