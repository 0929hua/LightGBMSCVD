Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xaf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xaf
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xaf
0xc: JUMPI 0xaf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xb4]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xb4
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xb4
0x40: JUMPI 0xb4 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x142]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x142
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x142
0x4b: JUMPI 0x142 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x19c]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x19c
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x19c
0x56: JUMPI 0x19c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1c5]
---
0x57 DUP1
0x58 PUSH4 0x1a39d8ef
0x5d EQ
0x5e PUSH2 0x1c5
0x61 JUMPI
---
0x58: V21 = 0x1a39d8ef
0x5d: V22 = EQ 0x1a39d8ef V11
0x5e: V23 = 0x1c5
0x61: JUMPI 0x1c5 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1ee]
---
0x62 DUP1
0x63 PUSH4 0x23b872dd
0x68 EQ
0x69 PUSH2 0x1ee
0x6c JUMPI
---
0x63: V24 = 0x23b872dd
0x68: V25 = EQ 0x23b872dd V11
0x69: V26 = 0x1ee
0x6c: JUMPI 0x1ee V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x267]
---
0x6d DUP1
0x6e PUSH4 0x27e235e3
0x73 EQ
0x74 PUSH2 0x267
0x77 JUMPI
---
0x6e: V27 = 0x27e235e3
0x73: V28 = EQ 0x27e235e3 V11
0x74: V29 = 0x267
0x77: JUMPI 0x267 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2b4]
---
0x78 DUP1
0x79 PUSH4 0x313ce567
0x7e EQ
0x7f PUSH2 0x2b4
0x82 JUMPI
---
0x79: V30 = 0x313ce567
0x7e: V31 = EQ 0x313ce567 V11
0x7f: V32 = 0x2b4
0x82: JUMPI 0x2b4 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2e3]
---
0x83 DUP1
0x84 PUSH4 0x70a08231
0x89 EQ
0x8a PUSH2 0x2e3
0x8d JUMPI
---
0x84: V33 = 0x70a08231
0x89: V34 = EQ 0x70a08231 V11
0x8a: V35 = 0x2e3
0x8d: JUMPI 0x2e3 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x330]
---
0x8e DUP1
0x8f PUSH4 0x95d89b41
0x94 EQ
0x95 PUSH2 0x330
0x98 JUMPI
---
0x8f: V36 = 0x95d89b41
0x94: V37 = EQ 0x95d89b41 V11
0x95: V38 = 0x330
0x98: JUMPI 0x330 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x3be]
---
0x99 DUP1
0x9a PUSH4 0xa9059cbb
0x9f EQ
0xa0 PUSH2 0x3be
0xa3 JUMPI
---
0x9a: V39 = 0xa9059cbb
0x9f: V40 = EQ 0xa9059cbb V11
0xa0: V41 = 0x3be
0xa3: JUMPI 0x3be V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x418]
---
0xa4 DUP1
0xa5 PUSH4 0xdd62ed3e
0xaa EQ
0xab PUSH2 0x418
0xae JUMPI
---
0xa5: V42 = 0xdd62ed3e
0xaa: V43 = EQ 0xdd62ed3e V11
0xab: V44 = 0x418
0xae: JUMPI 0x418 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb3]
---
Predecessors: [0x0, 0xa4]
Successors: []
---
0xaf JUMPDEST
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xaf: JUMPDEST 
0xb0: V45 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xba]
---
Predecessors: [0xd]
Successors: [0xbb, 0xbf]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb4: JUMPDEST 
0xb5: V46 = CALLVALUE
0xb6: V47 = ISZERO V46
0xb7: V48 = 0xbf
0xba: JUMPI 0xbf V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb4]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V49 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0xc6]
---
Predecessors: [0xb4]
Successors: [0x484]
---
0xbf JUMPDEST
0xc0 PUSH2 0xc7
0xc3 PUSH2 0x484
0xc6 JUMP
---
0xbf: JUMPDEST 
0xc0: V50 = 0xc7
0xc3: V51 = 0x484
0xc6: JUMP 0x484
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V11, 0xc7]

================================

Block 0xc7
[0xc7:0xeb]
---
Predecessors: [0x484]
Successors: [0xec]
---
0xc7 JUMPDEST
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc DUP1
0xcd PUSH1 0x20
0xcf ADD
0xd0 DUP3
0xd1 DUP2
0xd2 SUB
0xd3 DUP3
0xd4 MSTORE
0xd5 DUP4
0xd6 DUP2
0xd7 DUP2
0xd8 MLOAD
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP2
0xdf POP
0xe0 DUP1
0xe1 MLOAD
0xe2 SWAP1
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 DUP1
0xe8 DUP4
0xe9 DUP4
0xea PUSH1 0x0
---
0xc7: JUMPDEST 
0xc8: V52 = 0x40
0xca: V53 = M[0x40]
0xcd: V54 = 0x20
0xcf: V55 = ADD 0x20 V53
0xd2: V56 = SUB V55 V53
0xd4: M[V53] = V56
0xd8: V57 = M[V329]
0xda: M[V55] = V57
0xdb: V58 = 0x20
0xdd: V59 = ADD 0x20 V55
0xe1: V60 = M[V329]
0xe3: V61 = 0x20
0xe5: V62 = ADD 0x20 V329
0xea: V63 = 0x0
---
Entry stack: [V11, 0xc7, V329]
Stack pops: 1
Stack additions: [S0, V53, V53, V59, V62, V60, V60, V59, V62, 0x0]
Exit stack: [V11, 0xc7, V329, V53, V53, V59, V62, V60, V60, V59, V62, 0x0]

================================

Block 0xec
[0xec:0xf4]
---
Predecessors: [0xc7, 0xf5]
Successors: [0xf5, 0x107]
---
0xec JUMPDEST
0xed DUP4
0xee DUP2
0xef LT
0xf0 ISZERO
0xf1 PUSH2 0x107
0xf4 JUMPI
---
0xec: JUMPDEST 
0xef: V64 = LT S0 V60
0xf0: V65 = ISZERO V64
0xf1: V66 = 0x107
0xf4: JUMPI 0x107 V65
---
Entry stack: [V11, 0xc7, V329, V53, V53, V59, V62, V60, V60, V59, V62, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xc7, V329, V53, V53, V59, V62, V60, V60, V59, V62, S0]

================================

Block 0xf5
[0xf5:0x106]
---
Predecessors: [0xec]
Successors: [0xec]
---
0xf5 DUP1
0xf6 DUP3
0xf7 ADD
0xf8 MLOAD
0xf9 DUP2
0xfa DUP5
0xfb ADD
0xfc MSTORE
0xfd PUSH1 0x20
0xff DUP2
0x100 ADD
0x101 SWAP1
0x102 POP
0x103 PUSH2 0xec
0x106 JUMP
---
0xf7: V67 = ADD V62 S0
0xf8: V68 = M[V67]
0xfb: V69 = ADD V59 S0
0xfc: M[V69] = V68
0xfd: V70 = 0x20
0x100: V71 = ADD S0 0x20
0x103: V72 = 0xec
0x106: JUMP 0xec
---
Entry stack: [V11, 0xc7, V329, V53, V53, V59, V62, V60, V60, V59, V62, S0]
Stack pops: 3
Stack additions: [S2, S1, V71]
Exit stack: [V11, 0xc7, V329, V53, V53, V59, V62, V60, V60, V59, V62, V71]

================================

Block 0x107
[0x107:0x11a]
---
Predecessors: [0xec]
Successors: [0x11b, 0x134]
---
0x107 JUMPDEST
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c SWAP1
0x10d POP
0x10e SWAP1
0x10f DUP2
0x110 ADD
0x111 SWAP1
0x112 PUSH1 0x1f
0x114 AND
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x134
0x11a JUMPI
---
0x107: JUMPDEST 
0x110: V73 = ADD V60 V59
0x112: V74 = 0x1f
0x114: V75 = AND 0x1f V60
0x116: V76 = ISZERO V75
0x117: V77 = 0x134
0x11a: JUMPI 0x134 V76
---
Entry stack: [V11, 0xc7, V329, V53, V53, V59, V62, V60, V60, V59, V62, S0]
Stack pops: 7
Stack additions: [V73, V75]
Exit stack: [V11, 0xc7, V329, V53, V53, V73, V75]

================================

Block 0x11b
[0x11b:0x133]
---
Predecessors: [0x107]
Successors: [0x134]
---
0x11b DUP1
0x11c DUP3
0x11d SUB
0x11e DUP1
0x11f MLOAD
0x120 PUSH1 0x1
0x122 DUP4
0x123 PUSH1 0x20
0x125 SUB
0x126 PUSH2 0x100
0x129 EXP
0x12a SUB
0x12b NOT
0x12c AND
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP2
0x133 POP
---
0x11d: V78 = SUB V73 V75
0x11f: V79 = M[V78]
0x120: V80 = 0x1
0x123: V81 = 0x20
0x125: V82 = SUB 0x20 V75
0x126: V83 = 0x100
0x129: V84 = EXP 0x100 V82
0x12a: V85 = SUB V84 0x1
0x12b: V86 = NOT V85
0x12c: V87 = AND V86 V79
0x12e: M[V78] = V87
0x12f: V88 = 0x20
0x131: V89 = ADD 0x20 V78
---
Entry stack: [V11, 0xc7, V329, V53, V53, V73, V75]
Stack pops: 2
Stack additions: [V89, S0]
Exit stack: [V11, 0xc7, V329, V53, V53, V89, V75]

================================

Block 0x134
[0x134:0x141]
---
Predecessors: [0x107, 0x11b]
Successors: []
---
0x134 JUMPDEST
0x135 POP
0x136 SWAP3
0x137 POP
0x138 POP
0x139 POP
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e SWAP2
0x13f SUB
0x140 SWAP1
0x141 RETURN
---
0x134: JUMPDEST 
0x13a: V90 = 0x40
0x13c: V91 = M[0x40]
0x13f: V92 = SUB S1 V91
0x141: RETURN V91 V92
---
Entry stack: [V11, 0xc7, V329, V53, V53, S1, V75]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x142
[0x142:0x148]
---
Predecessors: [0x41]
Successors: [0x149, 0x14d]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x142: JUMPDEST 
0x143: V93 = CALLVALUE
0x144: V94 = ISZERO V93
0x145: V95 = 0x14d
0x148: JUMPI 0x14d V94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x142]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V96 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14d
[0x14d:0x181]
---
Predecessors: [0x142]
Successors: [0x4bd]
---
0x14d JUMPDEST
0x14e PUSH2 0x182
0x151 PUSH1 0x4
0x153 DUP1
0x154 DUP1
0x155 CALLDATALOAD
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c SWAP1
0x16d PUSH1 0x20
0x16f ADD
0x170 SWAP1
0x171 SWAP2
0x172 SWAP1
0x173 DUP1
0x174 CALLDATALOAD
0x175 SWAP1
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP1
0x17a SWAP2
0x17b SWAP1
0x17c POP
0x17d POP
0x17e PUSH2 0x4bd
0x181 JUMP
---
0x14d: JUMPDEST 
0x14e: V97 = 0x182
0x151: V98 = 0x4
0x155: V99 = CALLDATALOAD 0x4
0x156: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x16d: V102 = 0x20
0x16f: V103 = ADD 0x20 0x4
0x174: V104 = CALLDATALOAD 0x24
0x176: V105 = 0x20
0x178: V106 = ADD 0x20 0x24
0x17e: V107 = 0x4bd
0x181: JUMP 0x4bd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x182, V101, V104]
Exit stack: [V11, 0x182, V101, V104]

================================

Block 0x182
[0x182:0x19b]
---
Predecessors: [0x4bd]
Successors: []
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 MLOAD
0x186 DUP1
0x187 DUP3
0x188 ISZERO
0x189 ISZERO
0x18a ISZERO
0x18b ISZERO
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP2
0x192 POP
0x193 POP
0x194 PUSH1 0x40
0x196 MLOAD
0x197 DUP1
0x198 SWAP2
0x199 SUB
0x19a SWAP1
0x19b RETURN
---
0x182: JUMPDEST 
0x183: V108 = 0x40
0x185: V109 = M[0x40]
0x188: V110 = ISZERO 0x1
0x189: V111 = ISZERO 0x0
0x18a: V112 = ISZERO 0x1
0x18b: V113 = ISZERO 0x0
0x18d: M[V109] = 0x1
0x18e: V114 = 0x20
0x190: V115 = ADD 0x20 V109
0x194: V116 = 0x40
0x196: V117 = M[0x40]
0x199: V118 = SUB V115 V117
0x19b: RETURN V117 V118
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x4c]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V119 = CALLVALUE
0x19e: V120 = ISZERO V119
0x19f: V121 = 0x1a7
0x1a2: JUMPI 0x1a7 V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V122 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a7
[0x1a7:0x1ae]
---
Predecessors: [0x19c]
Successors: [0x5af]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x1af
0x1ab PUSH2 0x5af
0x1ae JUMP
---
0x1a7: JUMPDEST 
0x1a8: V123 = 0x1af
0x1ab: V124 = 0x5af
0x1ae: JUMP 0x5af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1af]
Exit stack: [V11, 0x1af]

================================

Block 0x1af
[0x1af:0x1c4]
---
Predecessors: [0x5af]
Successors: []
---
0x1af JUMPDEST
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 DUP3
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba SWAP2
0x1bb POP
0x1bc POP
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 DUP1
0x1c1 SWAP2
0x1c2 SUB
0x1c3 SWAP1
0x1c4 RETURN
---
0x1af: JUMPDEST 
0x1b0: V125 = 0x40
0x1b2: V126 = M[0x40]
0x1b6: M[V126] = V377
0x1b7: V127 = 0x20
0x1b9: V128 = ADD 0x20 V126
0x1bd: V129 = 0x40
0x1bf: V130 = M[0x40]
0x1c2: V131 = SUB V128 V130
0x1c4: RETURN V130 V131
---
Entry stack: [V11, V377]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c5
[0x1c5:0x1cb]
---
Predecessors: [0x57]
Successors: [0x1cc, 0x1d0]
---
0x1c5 JUMPDEST
0x1c6 CALLVALUE
0x1c7 ISZERO
0x1c8 PUSH2 0x1d0
0x1cb JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V132 = CALLVALUE
0x1c7: V133 = ISZERO V132
0x1c8: V134 = 0x1d0
0x1cb: JUMPI 0x1d0 V133
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cc
[0x1cc:0x1cf]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cc PUSH1 0x0
0x1ce DUP1
0x1cf REVERT
---
0x1cc: V135 = 0x0
0x1cf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d0
[0x1d0:0x1d7]
---
Predecessors: [0x1c5]
Successors: [0x5b9]
---
0x1d0 JUMPDEST
0x1d1 PUSH2 0x1d8
0x1d4 PUSH2 0x5b9
0x1d7 JUMP
---
0x1d0: JUMPDEST 
0x1d1: V136 = 0x1d8
0x1d4: V137 = 0x5b9
0x1d7: JUMP 0x5b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d8]
Exit stack: [V11, 0x1d8]

================================

Block 0x1d8
[0x1d8:0x1ed]
---
Predecessors: [0x5b9]
Successors: []
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd DUP3
0x1de DUP2
0x1df MSTORE
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 SWAP2
0x1e4 POP
0x1e5 POP
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP1
0x1ea SWAP2
0x1eb SUB
0x1ec SWAP1
0x1ed RETURN
---
0x1d8: JUMPDEST 
0x1d9: V138 = 0x40
0x1db: V139 = M[0x40]
0x1df: M[V139] = V379
0x1e0: V140 = 0x20
0x1e2: V141 = ADD 0x20 V139
0x1e6: V142 = 0x40
0x1e8: V143 = M[0x40]
0x1eb: V144 = SUB V141 V143
0x1ed: RETURN V143 V144
---
Entry stack: [V11, 0x1d8, V379]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1d8]

================================

Block 0x1ee
[0x1ee:0x1f4]
---
Predecessors: [0x62]
Successors: [0x1f5, 0x1f9]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V145 = CALLVALUE
0x1f0: V146 = ISZERO V145
0x1f1: V147 = 0x1f9
0x1f4: JUMPI 0x1f9 V146
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V148 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f9
[0x1f9:0x24c]
---
Predecessors: [0x1ee]
Successors: [0x5bf]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x24d
0x1fd PUSH1 0x4
0x1ff DUP1
0x200 DUP1
0x201 CALLDATALOAD
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 SWAP1
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d SWAP2
0x21e SWAP1
0x21f DUP1
0x220 CALLDATALOAD
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 SWAP1
0x238 PUSH1 0x20
0x23a ADD
0x23b SWAP1
0x23c SWAP2
0x23d SWAP1
0x23e DUP1
0x23f CALLDATALOAD
0x240 SWAP1
0x241 PUSH1 0x20
0x243 ADD
0x244 SWAP1
0x245 SWAP2
0x246 SWAP1
0x247 POP
0x248 POP
0x249 PUSH2 0x5bf
0x24c JUMP
---
0x1f9: JUMPDEST 
0x1fa: V149 = 0x24d
0x1fd: V150 = 0x4
0x201: V151 = CALLDATALOAD 0x4
0x202: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x219: V154 = 0x20
0x21b: V155 = ADD 0x20 0x4
0x220: V156 = CALLDATALOAD 0x24
0x221: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x238: V159 = 0x20
0x23a: V160 = ADD 0x20 0x24
0x23f: V161 = CALLDATALOAD 0x44
0x241: V162 = 0x20
0x243: V163 = ADD 0x20 0x44
0x249: V164 = 0x5bf
0x24c: JUMP 0x5bf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x24d, V153, V158, V161]
Exit stack: [V11, 0x24d, V153, V158, V161]

================================

Block 0x24d
[0x24d:0x266]
---
Predecessors: [0x6e1]
Successors: []
---
0x24d JUMPDEST
0x24e PUSH1 0x40
0x250 MLOAD
0x251 DUP1
0x252 DUP3
0x253 ISZERO
0x254 ISZERO
0x255 ISZERO
0x256 ISZERO
0x257 DUP2
0x258 MSTORE
0x259 PUSH1 0x20
0x25b ADD
0x25c SWAP2
0x25d POP
0x25e POP
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 SWAP2
0x264 SUB
0x265 SWAP1
0x266 RETURN
---
0x24d: JUMPDEST 
0x24e: V165 = 0x40
0x250: V166 = M[0x40]
0x253: V167 = ISZERO 0x1
0x254: V168 = ISZERO 0x0
0x255: V169 = ISZERO 0x1
0x256: V170 = ISZERO 0x0
0x258: M[V166] = 0x1
0x259: V171 = 0x20
0x25b: V172 = ADD 0x20 V166
0x25f: V173 = 0x40
0x261: V174 = M[0x40]
0x264: V175 = SUB V172 V174
0x266: RETURN V174 V175
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x267
[0x267:0x26d]
---
Predecessors: [0x6d]
Successors: [0x26e, 0x272]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x267: JUMPDEST 
0x268: V176 = CALLVALUE
0x269: V177 = ISZERO V176
0x26a: V178 = 0x272
0x26d: JUMPI 0x272 V177
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x267]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V179 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x272
[0x272:0x29d]
---
Predecessors: [0x267]
Successors: [0x6ed]
---
0x272 JUMPDEST
0x273 PUSH2 0x29e
0x276 PUSH1 0x4
0x278 DUP1
0x279 DUP1
0x27a CALLDATALOAD
0x27b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x290 AND
0x291 SWAP1
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 SWAP2
0x297 SWAP1
0x298 POP
0x299 POP
0x29a PUSH2 0x6ed
0x29d JUMP
---
0x272: JUMPDEST 
0x273: V180 = 0x29e
0x276: V181 = 0x4
0x27a: V182 = CALLDATALOAD 0x4
0x27b: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x290: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x292: V185 = 0x20
0x294: V186 = ADD 0x20 0x4
0x29a: V187 = 0x6ed
0x29d: JUMP 0x6ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x29e, V184]
Exit stack: [V11, 0x29e, V184]

================================

Block 0x29e
[0x29e:0x2b3]
---
Predecessors: [0x6ed]
Successors: []
---
0x29e JUMPDEST
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 DUP3
0x2a4 DUP2
0x2a5 MSTORE
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 SWAP2
0x2aa POP
0x2ab POP
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af DUP1
0x2b0 SWAP2
0x2b1 SUB
0x2b2 SWAP1
0x2b3 RETURN
---
0x29e: JUMPDEST 
0x29f: V188 = 0x40
0x2a1: V189 = M[0x40]
0x2a5: M[V189] = V449
0x2a6: V190 = 0x20
0x2a8: V191 = ADD 0x20 V189
0x2ac: V192 = 0x40
0x2ae: V193 = M[0x40]
0x2b1: V194 = SUB V191 V193
0x2b3: RETURN V193 V194
---
Entry stack: [V11, 0x29e, V449]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x29e]

================================

Block 0x2b4
[0x2b4:0x2ba]
---
Predecessors: [0x78]
Successors: [0x2bb, 0x2bf]
---
0x2b4 JUMPDEST
0x2b5 CALLVALUE
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V195 = CALLVALUE
0x2b6: V196 = ISZERO V195
0x2b7: V197 = 0x2bf
0x2ba: JUMPI 0x2bf V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2b4]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V198 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bf
[0x2bf:0x2c6]
---
Predecessors: [0x2b4]
Successors: [0x705]
---
0x2bf JUMPDEST
0x2c0 PUSH2 0x2c7
0x2c3 PUSH2 0x705
0x2c6 JUMP
---
0x2bf: JUMPDEST 
0x2c0: V199 = 0x2c7
0x2c3: V200 = 0x705
0x2c6: JUMP 0x705
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2c7]
Exit stack: [V11, 0x2c7]

================================

Block 0x2c7
[0x2c7:0x2e2]
---
Predecessors: [0x705]
Successors: []
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc DUP3
0x2cd PUSH1 0xff
0x2cf AND
0x2d0 PUSH1 0xff
0x2d2 AND
0x2d3 DUP2
0x2d4 MSTORE
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP2
0x2d9 POP
0x2da POP
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de DUP1
0x2df SWAP2
0x2e0 SUB
0x2e1 SWAP1
0x2e2 RETURN
---
0x2c7: JUMPDEST 
0x2c8: V201 = 0x40
0x2ca: V202 = M[0x40]
0x2cd: V203 = 0xff
0x2cf: V204 = AND 0xff 0x12
0x2d0: V205 = 0xff
0x2d2: V206 = AND 0xff 0x12
0x2d4: M[V202] = 0x12
0x2d5: V207 = 0x20
0x2d7: V208 = ADD 0x20 V202
0x2db: V209 = 0x40
0x2dd: V210 = M[0x40]
0x2e0: V211 = SUB V208 V210
0x2e2: RETURN V210 V211
---
Entry stack: [V11, 0x2c7, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2c7]

================================

Block 0x2e3
[0x2e3:0x2e9]
---
Predecessors: [0x83]
Successors: [0x2ea, 0x2ee]
---
0x2e3 JUMPDEST
0x2e4 CALLVALUE
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V212 = CALLVALUE
0x2e5: V213 = ISZERO V212
0x2e6: V214 = 0x2ee
0x2e9: JUMPI 0x2ee V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2e3]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V215 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ee
[0x2ee:0x319]
---
Predecessors: [0x2e3]
Successors: [0x70a]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x31a
0x2f2 PUSH1 0x4
0x2f4 DUP1
0x2f5 DUP1
0x2f6 CALLDATALOAD
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d SWAP1
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 SWAP2
0x313 SWAP1
0x314 POP
0x315 POP
0x316 PUSH2 0x70a
0x319 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V216 = 0x31a
0x2f2: V217 = 0x4
0x2f6: V218 = CALLDATALOAD 0x4
0x2f7: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x30e: V221 = 0x20
0x310: V222 = ADD 0x20 0x4
0x316: V223 = 0x70a
0x319: JUMP 0x70a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x31a, V220]
Exit stack: [V11, 0x31a, V220]

================================

Block 0x31a
[0x31a:0x32f]
---
Predecessors: [0x70a]
Successors: []
---
0x31a JUMPDEST
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f DUP3
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP2
0x326 POP
0x327 POP
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c SWAP2
0x32d SUB
0x32e SWAP1
0x32f RETURN
---
0x31a: JUMPDEST 
0x31b: V224 = 0x40
0x31d: V225 = M[0x40]
0x321: M[V225] = V464
0x322: V226 = 0x20
0x324: V227 = ADD 0x20 V225
0x328: V228 = 0x40
0x32a: V229 = M[0x40]
0x32d: V230 = SUB V227 V229
0x32f: RETURN V229 V230
---
Entry stack: [V11, V464]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x330
[0x330:0x336]
---
Predecessors: [0x8e]
Successors: [0x337, 0x33b]
---
0x330 JUMPDEST
0x331 CALLVALUE
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x330: JUMPDEST 
0x331: V231 = CALLVALUE
0x332: V232 = ISZERO V231
0x333: V233 = 0x33b
0x336: JUMPI 0x33b V232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x330]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V234 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x330]
Successors: [0x753]
---
0x33b JUMPDEST
0x33c PUSH2 0x343
0x33f PUSH2 0x753
0x342 JUMP
---
0x33b: JUMPDEST 
0x33c: V235 = 0x343
0x33f: V236 = 0x753
0x342: JUMP 0x753
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x343]
Exit stack: [V11, 0x343]

================================

Block 0x343
[0x343:0x367]
---
Predecessors: [0x753]
Successors: [0x368]
---
0x343 JUMPDEST
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP1
0x349 PUSH1 0x20
0x34b ADD
0x34c DUP3
0x34d DUP2
0x34e SUB
0x34f DUP3
0x350 MSTORE
0x351 DUP4
0x352 DUP2
0x353 DUP2
0x354 MLOAD
0x355 DUP2
0x356 MSTORE
0x357 PUSH1 0x20
0x359 ADD
0x35a SWAP2
0x35b POP
0x35c DUP1
0x35d MLOAD
0x35e SWAP1
0x35f PUSH1 0x20
0x361 ADD
0x362 SWAP1
0x363 DUP1
0x364 DUP4
0x365 DUP4
0x366 PUSH1 0x0
---
0x343: JUMPDEST 
0x344: V237 = 0x40
0x346: V238 = M[0x40]
0x349: V239 = 0x20
0x34b: V240 = ADD 0x20 V238
0x34e: V241 = SUB V240 V238
0x350: M[V238] = V241
0x354: V242 = M[V466]
0x356: M[V240] = V242
0x357: V243 = 0x20
0x359: V244 = ADD 0x20 V240
0x35d: V245 = M[V466]
0x35f: V246 = 0x20
0x361: V247 = ADD 0x20 V466
0x366: V248 = 0x0
---
Entry stack: [V11, 0x343, V466]
Stack pops: 1
Stack additions: [S0, V238, V238, V244, V247, V245, V245, V244, V247, 0x0]
Exit stack: [V11, 0x343, V466, V238, V238, V244, V247, V245, V245, V244, V247, 0x0]

================================

Block 0x368
[0x368:0x370]
---
Predecessors: [0x343, 0x371]
Successors: [0x371, 0x383]
---
0x368 JUMPDEST
0x369 DUP4
0x36a DUP2
0x36b LT
0x36c ISZERO
0x36d PUSH2 0x383
0x370 JUMPI
---
0x368: JUMPDEST 
0x36b: V249 = LT S0 V245
0x36c: V250 = ISZERO V249
0x36d: V251 = 0x383
0x370: JUMPI 0x383 V250
---
Entry stack: [V11, 0x343, V466, V238, V238, V244, V247, V245, V245, V244, V247, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x343, V466, V238, V238, V244, V247, V245, V245, V244, V247, S0]

================================

Block 0x371
[0x371:0x382]
---
Predecessors: [0x368]
Successors: [0x368]
---
0x371 DUP1
0x372 DUP3
0x373 ADD
0x374 MLOAD
0x375 DUP2
0x376 DUP5
0x377 ADD
0x378 MSTORE
0x379 PUSH1 0x20
0x37b DUP2
0x37c ADD
0x37d SWAP1
0x37e POP
0x37f PUSH2 0x368
0x382 JUMP
---
0x373: V252 = ADD V247 S0
0x374: V253 = M[V252]
0x377: V254 = ADD V244 S0
0x378: M[V254] = V253
0x379: V255 = 0x20
0x37c: V256 = ADD S0 0x20
0x37f: V257 = 0x368
0x382: JUMP 0x368
---
Entry stack: [V11, 0x343, V466, V238, V238, V244, V247, V245, V245, V244, V247, S0]
Stack pops: 3
Stack additions: [S2, S1, V256]
Exit stack: [V11, 0x343, V466, V238, V238, V244, V247, V245, V245, V244, V247, V256]

================================

Block 0x383
[0x383:0x396]
---
Predecessors: [0x368]
Successors: [0x397, 0x3b0]
---
0x383 JUMPDEST
0x384 POP
0x385 POP
0x386 POP
0x387 POP
0x388 SWAP1
0x389 POP
0x38a SWAP1
0x38b DUP2
0x38c ADD
0x38d SWAP1
0x38e PUSH1 0x1f
0x390 AND
0x391 DUP1
0x392 ISZERO
0x393 PUSH2 0x3b0
0x396 JUMPI
---
0x383: JUMPDEST 
0x38c: V258 = ADD V245 V244
0x38e: V259 = 0x1f
0x390: V260 = AND 0x1f V245
0x392: V261 = ISZERO V260
0x393: V262 = 0x3b0
0x396: JUMPI 0x3b0 V261
---
Entry stack: [V11, 0x343, V466, V238, V238, V244, V247, V245, V245, V244, V247, S0]
Stack pops: 7
Stack additions: [V258, V260]
Exit stack: [V11, 0x343, V466, V238, V238, V258, V260]

================================

Block 0x397
[0x397:0x3af]
---
Predecessors: [0x383]
Successors: [0x3b0]
---
0x397 DUP1
0x398 DUP3
0x399 SUB
0x39a DUP1
0x39b MLOAD
0x39c PUSH1 0x1
0x39e DUP4
0x39f PUSH1 0x20
0x3a1 SUB
0x3a2 PUSH2 0x100
0x3a5 EXP
0x3a6 SUB
0x3a7 NOT
0x3a8 AND
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae SWAP2
0x3af POP
---
0x399: V263 = SUB V258 V260
0x39b: V264 = M[V263]
0x39c: V265 = 0x1
0x39f: V266 = 0x20
0x3a1: V267 = SUB 0x20 V260
0x3a2: V268 = 0x100
0x3a5: V269 = EXP 0x100 V267
0x3a6: V270 = SUB V269 0x1
0x3a7: V271 = NOT V270
0x3a8: V272 = AND V271 V264
0x3aa: M[V263] = V272
0x3ab: V273 = 0x20
0x3ad: V274 = ADD 0x20 V263
---
Entry stack: [V11, 0x343, V466, V238, V238, V258, V260]
Stack pops: 2
Stack additions: [V274, S0]
Exit stack: [V11, 0x343, V466, V238, V238, V274, V260]

================================

Block 0x3b0
[0x3b0:0x3bd]
---
Predecessors: [0x383, 0x397]
Successors: []
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 SWAP3
0x3b3 POP
0x3b4 POP
0x3b5 POP
0x3b6 PUSH1 0x40
0x3b8 MLOAD
0x3b9 DUP1
0x3ba SWAP2
0x3bb SUB
0x3bc SWAP1
0x3bd RETURN
---
0x3b0: JUMPDEST 
0x3b6: V275 = 0x40
0x3b8: V276 = M[0x40]
0x3bb: V277 = SUB S1 V276
0x3bd: RETURN V276 V277
---
Entry stack: [V11, 0x343, V466, V238, V238, S1, V260]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x343]

================================

Block 0x3be
[0x3be:0x3c4]
---
Predecessors: [0x99]
Successors: [0x3c5, 0x3c9]
---
0x3be JUMPDEST
0x3bf CALLVALUE
0x3c0 ISZERO
0x3c1 PUSH2 0x3c9
0x3c4 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V278 = CALLVALUE
0x3c0: V279 = ISZERO V278
0x3c1: V280 = 0x3c9
0x3c4: JUMPI 0x3c9 V279
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c5
[0x3c5:0x3c8]
---
Predecessors: [0x3be]
Successors: []
---
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 REVERT
---
0x3c5: V281 = 0x0
0x3c8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c9
[0x3c9:0x3fd]
---
Predecessors: [0x3be]
Successors: [0x78c]
---
0x3c9 JUMPDEST
0x3ca PUSH2 0x3fe
0x3cd PUSH1 0x4
0x3cf DUP1
0x3d0 DUP1
0x3d1 CALLDATALOAD
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 AND
0x3e8 SWAP1
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec SWAP1
0x3ed SWAP2
0x3ee SWAP1
0x3ef DUP1
0x3f0 CALLDATALOAD
0x3f1 SWAP1
0x3f2 PUSH1 0x20
0x3f4 ADD
0x3f5 SWAP1
0x3f6 SWAP2
0x3f7 SWAP1
0x3f8 POP
0x3f9 POP
0x3fa PUSH2 0x78c
0x3fd JUMP
---
0x3c9: JUMPDEST 
0x3ca: V282 = 0x3fe
0x3cd: V283 = 0x4
0x3d1: V284 = CALLDATALOAD 0x4
0x3d2: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x3e9: V287 = 0x20
0x3eb: V288 = ADD 0x20 0x4
0x3f0: V289 = CALLDATALOAD 0x24
0x3f2: V290 = 0x20
0x3f4: V291 = ADD 0x20 0x24
0x3fa: V292 = 0x78c
0x3fd: JUMP 0x78c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3fe, V286, V289]
Exit stack: [V11, 0x3fe, V286, V289]

================================

Block 0x3fe
[0x3fe:0x417]
---
Predecessors: [0x799]
Successors: []
---
0x3fe JUMPDEST
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 DUP3
0x404 ISZERO
0x405 ISZERO
0x406 ISZERO
0x407 ISZERO
0x408 DUP2
0x409 MSTORE
0x40a PUSH1 0x20
0x40c ADD
0x40d SWAP2
0x40e POP
0x40f POP
0x410 PUSH1 0x40
0x412 MLOAD
0x413 DUP1
0x414 SWAP2
0x415 SUB
0x416 SWAP1
0x417 RETURN
---
0x3fe: JUMPDEST 
0x3ff: V293 = 0x40
0x401: V294 = M[0x40]
0x404: V295 = ISZERO 0x1
0x405: V296 = ISZERO 0x0
0x406: V297 = ISZERO 0x1
0x407: V298 = ISZERO 0x0
0x409: M[V294] = 0x1
0x40a: V299 = 0x20
0x40c: V300 = ADD 0x20 V294
0x410: V301 = 0x40
0x412: V302 = M[0x40]
0x415: V303 = SUB V300 V302
0x417: RETURN V302 V303
---
Entry stack: [V11, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x418
[0x418:0x41e]
---
Predecessors: [0xa4]
Successors: [0x41f, 0x423]
---
0x418 JUMPDEST
0x419 CALLVALUE
0x41a ISZERO
0x41b PUSH2 0x423
0x41e JUMPI
---
0x418: JUMPDEST 
0x419: V304 = CALLVALUE
0x41a: V305 = ISZERO V304
0x41b: V306 = 0x423
0x41e: JUMPI 0x423 V305
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x41f
[0x41f:0x422]
---
Predecessors: [0x418]
Successors: []
---
0x41f PUSH1 0x0
0x421 DUP1
0x422 REVERT
---
0x41f: V307 = 0x0
0x422: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x423
[0x423:0x46d]
---
Predecessors: [0x418]
Successors: [0x7a1]
---
0x423 JUMPDEST
0x424 PUSH2 0x46e
0x427 PUSH1 0x4
0x429 DUP1
0x42a DUP1
0x42b CALLDATALOAD
0x42c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x441 AND
0x442 SWAP1
0x443 PUSH1 0x20
0x445 ADD
0x446 SWAP1
0x447 SWAP2
0x448 SWAP1
0x449 DUP1
0x44a CALLDATALOAD
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 SWAP1
0x462 PUSH1 0x20
0x464 ADD
0x465 SWAP1
0x466 SWAP2
0x467 SWAP1
0x468 POP
0x469 POP
0x46a PUSH2 0x7a1
0x46d JUMP
---
0x423: JUMPDEST 
0x424: V308 = 0x46e
0x427: V309 = 0x4
0x42b: V310 = CALLDATALOAD 0x4
0x42c: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x441: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x443: V313 = 0x20
0x445: V314 = ADD 0x20 0x4
0x44a: V315 = CALLDATALOAD 0x24
0x44b: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x462: V318 = 0x20
0x464: V319 = ADD 0x20 0x24
0x46a: V320 = 0x7a1
0x46d: JUMP 0x7a1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x46e, V312, V317]
Exit stack: [V11, 0x46e, V312, V317]

================================

Block 0x46e
[0x46e:0x483]
---
Predecessors: [0x7a1]
Successors: []
---
0x46e JUMPDEST
0x46f PUSH1 0x40
0x471 MLOAD
0x472 DUP1
0x473 DUP3
0x474 DUP2
0x475 MSTORE
0x476 PUSH1 0x20
0x478 ADD
0x479 SWAP2
0x47a POP
0x47b POP
0x47c PUSH1 0x40
0x47e MLOAD
0x47f DUP1
0x480 SWAP2
0x481 SUB
0x482 SWAP1
0x483 RETURN
---
0x46e: JUMPDEST 
0x46f: V321 = 0x40
0x471: V322 = M[0x40]
0x475: M[V322] = V501
0x476: V323 = 0x20
0x478: V324 = ADD 0x20 V322
0x47c: V325 = 0x40
0x47e: V326 = M[0x40]
0x481: V327 = SUB V324 V326
0x483: RETURN V326 V327
---
Entry stack: [V11, V501]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x484
[0x484:0x4bc]
---
Predecessors: [0xbf]
Successors: [0xc7]
---
0x484 JUMPDEST
0x485 PUSH1 0x40
0x487 DUP1
0x488 MLOAD
0x489 SWAP1
0x48a DUP2
0x48b ADD
0x48c PUSH1 0x40
0x48e MSTORE
0x48f DUP1
0x490 PUSH1 0x8
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x20
0x496 ADD
0x497 PUSH32 0x4d656d526f626f74000000000000000000000000000000000000000000000000
0x4b8 DUP2
0x4b9 MSTORE
0x4ba POP
0x4bb DUP2
0x4bc JUMP
---
0x484: JUMPDEST 
0x485: V328 = 0x40
0x488: V329 = M[0x40]
0x48b: V330 = ADD V329 0x40
0x48c: V331 = 0x40
0x48e: M[0x40] = V330
0x490: V332 = 0x8
0x493: M[V329] = 0x8
0x494: V333 = 0x20
0x496: V334 = ADD 0x20 V329
0x497: V335 = 0x4d656d526f626f74000000000000000000000000000000000000000000000000
0x4b9: M[V334] = 0x4d656d526f626f74000000000000000000000000000000000000000000000000
0x4bc: JUMP 0xc7
---
Entry stack: [V11, 0xc7]
Stack pops: 1
Stack additions: [S0, V329]
Exit stack: [V11, 0xc7, V329]

================================

Block 0x4bd
[0x4bd:0x5ae]
---
Predecessors: [0x14d]
Successors: [0x182]
---
0x4bd JUMPDEST
0x4be PUSH1 0x0
0x4c0 DUP2
0x4c1 PUSH1 0x3
0x4c3 PUSH1 0x0
0x4c5 CALLER
0x4c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4db AND
0x4dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f1 AND
0x4f2 DUP2
0x4f3 MSTORE
0x4f4 PUSH1 0x20
0x4f6 ADD
0x4f7 SWAP1
0x4f8 DUP2
0x4f9 MSTORE
0x4fa PUSH1 0x20
0x4fc ADD
0x4fd PUSH1 0x0
0x4ff SHA3
0x500 PUSH1 0x0
0x502 DUP6
0x503 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x518 AND
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f DUP2
0x530 MSTORE
0x531 PUSH1 0x20
0x533 ADD
0x534 SWAP1
0x535 DUP2
0x536 MSTORE
0x537 PUSH1 0x20
0x539 ADD
0x53a PUSH1 0x0
0x53c SHA3
0x53d DUP2
0x53e SWAP1
0x53f SSTORE
0x540 POP
0x541 DUP3
0x542 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x557 AND
0x558 CALLER
0x559 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56e AND
0x56f PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x590 DUP5
0x591 PUSH1 0x40
0x593 MLOAD
0x594 DUP1
0x595 DUP3
0x596 DUP2
0x597 MSTORE
0x598 PUSH1 0x20
0x59a ADD
0x59b SWAP2
0x59c POP
0x59d POP
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 DUP1
0x5a2 SWAP2
0x5a3 SUB
0x5a4 SWAP1
0x5a5 LOG3
0x5a6 PUSH1 0x1
0x5a8 SWAP1
0x5a9 POP
0x5aa SWAP3
0x5ab SWAP2
0x5ac POP
0x5ad POP
0x5ae JUMP
---
0x4bd: JUMPDEST 
0x4be: V336 = 0x0
0x4c1: V337 = 0x3
0x4c3: V338 = 0x0
0x4c5: V339 = CALLER
0x4c6: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x4db: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x4dc: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x4f3: M[0x0] = V343
0x4f4: V344 = 0x20
0x4f6: V345 = ADD 0x20 0x0
0x4f9: M[0x20] = 0x3
0x4fa: V346 = 0x20
0x4fc: V347 = ADD 0x20 0x20
0x4fd: V348 = 0x0
0x4ff: V349 = SHA3 0x0 0x40
0x500: V350 = 0x0
0x503: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x518: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x519: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x530: M[0x0] = V354
0x531: V355 = 0x20
0x533: V356 = ADD 0x20 0x0
0x536: M[0x20] = V349
0x537: V357 = 0x20
0x539: V358 = ADD 0x20 0x20
0x53a: V359 = 0x0
0x53c: V360 = SHA3 0x0 0x40
0x53f: S[V360] = V104
0x542: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x557: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x558: V363 = CALLER
0x559: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x56e: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x56f: V366 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x591: V367 = 0x40
0x593: V368 = M[0x40]
0x597: M[V368] = V104
0x598: V369 = 0x20
0x59a: V370 = ADD 0x20 V368
0x59e: V371 = 0x40
0x5a0: V372 = M[0x40]
0x5a3: V373 = SUB V370 V372
0x5a5: LOG V372 V373 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V365 V362
0x5a6: V374 = 0x1
0x5ae: JUMP 0x182
---
Entry stack: [V11, 0x182, V101, V104]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5af
[0x5af:0x5b8]
---
Predecessors: [0x1a7]
Successors: [0x1af]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x0
0x5b2 PUSH1 0x1
0x5b4 SLOAD
0x5b5 SWAP1
0x5b6 POP
0x5b7 SWAP1
0x5b8 JUMP
---
0x5af: JUMPDEST 
0x5b0: V375 = 0x0
0x5b2: V376 = 0x1
0x5b4: V377 = S[0x1]
0x5b8: JUMP 0x1af
---
Entry stack: [V11, 0x1af]
Stack pops: 1
Stack additions: [V377]
Exit stack: [V11, V377]

================================

Block 0x5b9
[0x5b9:0x5be]
---
Predecessors: [0x1d0]
Successors: [0x1d8]
---
0x5b9 JUMPDEST
0x5ba PUSH1 0x1
0x5bc SLOAD
0x5bd DUP2
0x5be JUMP
---
0x5b9: JUMPDEST 
0x5ba: V378 = 0x1
0x5bc: V379 = S[0x1]
0x5be: JUMP 0x1d8
---
Entry stack: [V11, 0x1d8]
Stack pops: 1
Stack additions: [S0, V379]
Exit stack: [V11, 0x1d8, V379]

================================

Block 0x5bf
[0x5bf:0x647]
---
Predecessors: [0x1f9]
Successors: [0x648, 0x64c]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x0
0x5c2 DUP2
0x5c3 PUSH1 0x3
0x5c5 PUSH1 0x0
0x5c7 DUP7
0x5c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dd AND
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 AND
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 PUSH1 0x20
0x5f8 ADD
0x5f9 SWAP1
0x5fa DUP2
0x5fb MSTORE
0x5fc PUSH1 0x20
0x5fe ADD
0x5ff PUSH1 0x0
0x601 SHA3
0x602 PUSH1 0x0
0x604 CALLER
0x605 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61a AND
0x61b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x630 AND
0x631 DUP2
0x632 MSTORE
0x633 PUSH1 0x20
0x635 ADD
0x636 SWAP1
0x637 DUP2
0x638 MSTORE
0x639 PUSH1 0x20
0x63b ADD
0x63c PUSH1 0x0
0x63e SHA3
0x63f SLOAD
0x640 LT
0x641 ISZERO
0x642 ISZERO
0x643 ISZERO
0x644 PUSH2 0x64c
0x647 JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V380 = 0x0
0x5c3: V381 = 0x3
0x5c5: V382 = 0x0
0x5c8: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x5de: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x5f5: M[0x0] = V386
0x5f6: V387 = 0x20
0x5f8: V388 = ADD 0x20 0x0
0x5fb: M[0x20] = 0x3
0x5fc: V389 = 0x20
0x5fe: V390 = ADD 0x20 0x20
0x5ff: V391 = 0x0
0x601: V392 = SHA3 0x0 0x40
0x602: V393 = 0x0
0x604: V394 = CALLER
0x605: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x61a: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x61b: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x630: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x632: M[0x0] = V398
0x633: V399 = 0x20
0x635: V400 = ADD 0x20 0x0
0x638: M[0x20] = V392
0x639: V401 = 0x20
0x63b: V402 = ADD 0x20 0x20
0x63c: V403 = 0x0
0x63e: V404 = SHA3 0x0 0x40
0x63f: V405 = S[V404]
0x640: V406 = LT V405 V161
0x641: V407 = ISZERO V406
0x642: V408 = ISZERO V407
0x643: V409 = ISZERO V408
0x644: V410 = 0x64c
0x647: JUMPI 0x64c V409
---
Entry stack: [V11, 0x24d, V153, V158, V161]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V11, 0x24d, V153, V158, V161, 0x0]

================================

Block 0x648
[0x648:0x64b]
---
Predecessors: [0x5bf]
Successors: []
---
0x648 PUSH1 0x0
0x64a DUP1
0x64b REVERT
---
0x648: V411 = 0x0
0x64b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x24d, V153, V158, V161, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24d, V153, V158, V161, 0x0]

================================

Block 0x64c
[0x64c:0x6e0]
---
Predecessors: [0x5bf]
Successors: [0x828]
---
0x64c JUMPDEST
0x64d DUP2
0x64e PUSH1 0x3
0x650 PUSH1 0x0
0x652 DUP7
0x653 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x668 AND
0x669 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67e AND
0x67f DUP2
0x680 MSTORE
0x681 PUSH1 0x20
0x683 ADD
0x684 SWAP1
0x685 DUP2
0x686 MSTORE
0x687 PUSH1 0x20
0x689 ADD
0x68a PUSH1 0x0
0x68c SHA3
0x68d PUSH1 0x0
0x68f CALLER
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc DUP2
0x6bd MSTORE
0x6be PUSH1 0x20
0x6c0 ADD
0x6c1 SWAP1
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x20
0x6c6 ADD
0x6c7 PUSH1 0x0
0x6c9 SHA3
0x6ca PUSH1 0x0
0x6cc DUP3
0x6cd DUP3
0x6ce SLOAD
0x6cf SUB
0x6d0 SWAP3
0x6d1 POP
0x6d2 POP
0x6d3 DUP2
0x6d4 SWAP1
0x6d5 SSTORE
0x6d6 POP
0x6d7 PUSH2 0x6e1
0x6da DUP5
0x6db DUP5
0x6dc DUP5
0x6dd PUSH2 0x828
0x6e0 JUMP
---
0x64c: JUMPDEST 
0x64e: V412 = 0x3
0x650: V413 = 0x0
0x653: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x668: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x669: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x680: M[0x0] = V417
0x681: V418 = 0x20
0x683: V419 = ADD 0x20 0x0
0x686: M[0x20] = 0x3
0x687: V420 = 0x20
0x689: V421 = ADD 0x20 0x20
0x68a: V422 = 0x0
0x68c: V423 = SHA3 0x0 0x40
0x68d: V424 = 0x0
0x68f: V425 = CALLER
0x690: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x6a6: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x6bd: M[0x0] = V429
0x6be: V430 = 0x20
0x6c0: V431 = ADD 0x20 0x0
0x6c3: M[0x20] = V423
0x6c4: V432 = 0x20
0x6c6: V433 = ADD 0x20 0x20
0x6c7: V434 = 0x0
0x6c9: V435 = SHA3 0x0 0x40
0x6ca: V436 = 0x0
0x6ce: V437 = S[V435]
0x6cf: V438 = SUB V437 V161
0x6d5: S[V435] = V438
0x6d7: V439 = 0x6e1
0x6dd: V440 = 0x828
0x6e0: JUMP 0x828
---
Entry stack: [V11, 0x24d, V153, V158, V161, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x6e1, S3, S2, S1]
Exit stack: [V11, 0x24d, V153, V158, V161, 0x0, 0x6e1, V153, V158, V161]

================================

Block 0x6e1
[0x6e1:0x6ec]
---
Predecessors: [0x878]
Successors: [0x24d]
---
0x6e1 JUMPDEST
0x6e2 POP
0x6e3 PUSH1 0x1
0x6e5 SWAP1
0x6e6 POP
0x6e7 SWAP4
0x6e8 SWAP3
0x6e9 POP
0x6ea POP
0x6eb POP
0x6ec JUMP
---
0x6e1: JUMPDEST 
0x6e3: V441 = 0x1
0x6ec: JUMP S5
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, 0x1]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x6ed
[0x6ed:0x704]
---
Predecessors: [0x272]
Successors: [0x29e]
---
0x6ed JUMPDEST
0x6ee PUSH1 0x2
0x6f0 PUSH1 0x20
0x6f2 MSTORE
0x6f3 DUP1
0x6f4 PUSH1 0x0
0x6f6 MSTORE
0x6f7 PUSH1 0x40
0x6f9 PUSH1 0x0
0x6fb SHA3
0x6fc PUSH1 0x0
0x6fe SWAP2
0x6ff POP
0x700 SWAP1
0x701 POP
0x702 SLOAD
0x703 DUP2
0x704 JUMP
---
0x6ed: JUMPDEST 
0x6ee: V442 = 0x2
0x6f0: V443 = 0x20
0x6f2: M[0x20] = 0x2
0x6f4: V444 = 0x0
0x6f6: M[0x0] = V184
0x6f7: V445 = 0x40
0x6f9: V446 = 0x0
0x6fb: V447 = SHA3 0x0 0x40
0x6fc: V448 = 0x0
0x702: V449 = S[V447]
0x704: JUMP 0x29e
---
Entry stack: [V11, 0x29e, V184]
Stack pops: 2
Stack additions: [S1, V449]
Exit stack: [V11, 0x29e, V449]

================================

Block 0x705
[0x705:0x709]
---
Predecessors: [0x2bf]
Successors: [0x2c7]
---
0x705 JUMPDEST
0x706 PUSH1 0x12
0x708 DUP2
0x709 JUMP
---
0x705: JUMPDEST 
0x706: V450 = 0x12
0x709: JUMP 0x2c7
---
Entry stack: [V11, 0x2c7]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V11, 0x2c7, 0x12]

================================

Block 0x70a
[0x70a:0x752]
---
Predecessors: [0x2ee]
Successors: [0x31a]
---
0x70a JUMPDEST
0x70b PUSH1 0x0
0x70d PUSH1 0x2
0x70f PUSH1 0x0
0x711 DUP4
0x712 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x727 AND
0x728 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73d AND
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 ADD
0x743 SWAP1
0x744 DUP2
0x745 MSTORE
0x746 PUSH1 0x20
0x748 ADD
0x749 PUSH1 0x0
0x74b SHA3
0x74c SLOAD
0x74d SWAP1
0x74e POP
0x74f SWAP2
0x750 SWAP1
0x751 POP
0x752 JUMP
---
0x70a: JUMPDEST 
0x70b: V451 = 0x0
0x70d: V452 = 0x2
0x70f: V453 = 0x0
0x712: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x727: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x728: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x73f: M[0x0] = V457
0x740: V458 = 0x20
0x742: V459 = ADD 0x20 0x0
0x745: M[0x20] = 0x2
0x746: V460 = 0x20
0x748: V461 = ADD 0x20 0x20
0x749: V462 = 0x0
0x74b: V463 = SHA3 0x0 0x40
0x74c: V464 = S[V463]
0x752: JUMP 0x31a
---
Entry stack: [V11, 0x31a, V220]
Stack pops: 2
Stack additions: [V464]
Exit stack: [V11, V464]

================================

Block 0x753
[0x753:0x78b]
---
Predecessors: [0x33b]
Successors: [0x343]
---
0x753 JUMPDEST
0x754 PUSH1 0x40
0x756 DUP1
0x757 MLOAD
0x758 SWAP1
0x759 DUP2
0x75a ADD
0x75b PUSH1 0x40
0x75d MSTORE
0x75e DUP1
0x75f PUSH1 0x5
0x761 DUP2
0x762 MSTORE
0x763 PUSH1 0x20
0x765 ADD
0x766 PUSH32 0x524f424f54000000000000000000000000000000000000000000000000000000
0x787 DUP2
0x788 MSTORE
0x789 POP
0x78a DUP2
0x78b JUMP
---
0x753: JUMPDEST 
0x754: V465 = 0x40
0x757: V466 = M[0x40]
0x75a: V467 = ADD V466 0x40
0x75b: V468 = 0x40
0x75d: M[0x40] = V467
0x75f: V469 = 0x5
0x762: M[V466] = 0x5
0x763: V470 = 0x20
0x765: V471 = ADD 0x20 V466
0x766: V472 = 0x524f424f54000000000000000000000000000000000000000000000000000000
0x788: M[V471] = 0x524f424f54000000000000000000000000000000000000000000000000000000
0x78b: JUMP 0x343
---
Entry stack: [V11, 0x343]
Stack pops: 1
Stack additions: [S0, V466]
Exit stack: [V11, 0x343, V466]

================================

Block 0x78c
[0x78c:0x798]
---
Predecessors: [0x3c9]
Successors: [0x828]
---
0x78c JUMPDEST
0x78d PUSH1 0x0
0x78f PUSH2 0x799
0x792 CALLER
0x793 DUP5
0x794 DUP5
0x795 PUSH2 0x828
0x798 JUMP
---
0x78c: JUMPDEST 
0x78d: V473 = 0x0
0x78f: V474 = 0x799
0x792: V475 = CALLER
0x795: V476 = 0x828
0x798: JUMP 0x828
---
Entry stack: [V11, 0x3fe, V286, V289]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x799, V475, S1, S0]
Exit stack: [V11, 0x3fe, V286, V289, 0x0, 0x799, V475, V286, V289]

================================

Block 0x799
[0x799:0x7a0]
---
Predecessors: [0x878]
Successors: [0x3fe]
---
0x799 JUMPDEST
0x79a SWAP1
0x79b POP
0x79c SWAP3
0x79d SWAP2
0x79e POP
0x79f POP
0x7a0 JUMP
---
0x799: JUMPDEST 
0x7a0: JUMP S4
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S5, 0x1]

================================

Block 0x7a1
[0x7a1:0x827]
---
Predecessors: [0x423]
Successors: [0x46e]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x0
0x7a4 PUSH1 0x3
0x7a6 PUSH1 0x0
0x7a8 DUP5
0x7a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7be AND
0x7bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d4 AND
0x7d5 DUP2
0x7d6 MSTORE
0x7d7 PUSH1 0x20
0x7d9 ADD
0x7da SWAP1
0x7db DUP2
0x7dc MSTORE
0x7dd PUSH1 0x20
0x7df ADD
0x7e0 PUSH1 0x0
0x7e2 SHA3
0x7e3 PUSH1 0x0
0x7e5 DUP4
0x7e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fb AND
0x7fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x811 AND
0x812 DUP2
0x813 MSTORE
0x814 PUSH1 0x20
0x816 ADD
0x817 SWAP1
0x818 DUP2
0x819 MSTORE
0x81a PUSH1 0x20
0x81c ADD
0x81d PUSH1 0x0
0x81f SHA3
0x820 SLOAD
0x821 SWAP1
0x822 POP
0x823 SWAP3
0x824 SWAP2
0x825 POP
0x826 POP
0x827 JUMP
---
0x7a1: JUMPDEST 
0x7a2: V477 = 0x0
0x7a4: V478 = 0x3
0x7a6: V479 = 0x0
0x7a9: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x7be: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x7bf: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d4: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x7d6: M[0x0] = V483
0x7d7: V484 = 0x20
0x7d9: V485 = ADD 0x20 0x0
0x7dc: M[0x20] = 0x3
0x7dd: V486 = 0x20
0x7df: V487 = ADD 0x20 0x20
0x7e0: V488 = 0x0
0x7e2: V489 = SHA3 0x0 0x40
0x7e3: V490 = 0x0
0x7e6: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fb: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x7fc: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x811: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x813: M[0x0] = V494
0x814: V495 = 0x20
0x816: V496 = ADD 0x20 0x0
0x819: M[0x20] = V489
0x81a: V497 = 0x20
0x81c: V498 = ADD 0x20 0x20
0x81d: V499 = 0x0
0x81f: V500 = SHA3 0x0 0x40
0x820: V501 = S[V500]
0x827: JUMP 0x46e
---
Entry stack: [V11, 0x46e, V312, V317]
Stack pops: 3
Stack additions: [V501]
Exit stack: [V11, V501]

================================

Block 0x828
[0x828:0x873]
---
Predecessors: [0x64c, 0x78c]
Successors: [0x874, 0x878]
---
0x828 JUMPDEST
0x829 PUSH1 0x0
0x82b PUSH1 0x2
0x82d PUSH1 0x0
0x82f DUP6
0x830 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x845 AND
0x846 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85b AND
0x85c DUP2
0x85d MSTORE
0x85e PUSH1 0x20
0x860 ADD
0x861 SWAP1
0x862 DUP2
0x863 MSTORE
0x864 PUSH1 0x20
0x866 ADD
0x867 PUSH1 0x0
0x869 SHA3
0x86a SLOAD
0x86b DUP3
0x86c GT
0x86d ISZERO
0x86e ISZERO
0x86f ISZERO
0x870 PUSH2 0x878
0x873 JUMPI
---
0x828: JUMPDEST 
0x829: V502 = 0x0
0x82b: V503 = 0x2
0x82d: V504 = 0x0
0x830: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x845: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x846: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x85b: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x85d: M[0x0] = V508
0x85e: V509 = 0x20
0x860: V510 = ADD 0x20 0x0
0x863: M[0x20] = 0x2
0x864: V511 = 0x20
0x866: V512 = ADD 0x20 0x20
0x867: V513 = 0x0
0x869: V514 = SHA3 0x0 0x40
0x86a: V515 = S[V514]
0x86c: V516 = GT S0 V515
0x86d: V517 = ISZERO V516
0x86e: V518 = ISZERO V517
0x86f: V519 = ISZERO V518
0x870: V520 = 0x878
0x873: JUMPI 0x878 V519
---
Entry stack: [V11, S8, S7, S6, S5, 0x0, {0x6e1, 0x799}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V11, S8, S7, S6, S5, 0x0, {0x6e1, 0x799}, S2, S1, S0, 0x0]

================================

Block 0x874
[0x874:0x877]
---
Predecessors: [0x828]
Successors: []
---
0x874 PUSH1 0x0
0x876 DUP1
0x877 REVERT
---
0x874: V521 = 0x0
0x877: REVERT 0x0 0x0
---
Entry stack: [V11, S9, S8, S7, S6, 0x0, {0x6e1, 0x799}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, 0x0, {0x6e1, 0x799}, S3, S2, S1, 0x0]

================================

Block 0x878
[0x878:0x981]
---
Predecessors: [0x828]
Successors: [0x6e1, 0x799]
---
0x878 JUMPDEST
0x879 DUP2
0x87a PUSH1 0x2
0x87c PUSH1 0x0
0x87e DUP7
0x87f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x894 AND
0x895 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8aa AND
0x8ab DUP2
0x8ac MSTORE
0x8ad PUSH1 0x20
0x8af ADD
0x8b0 SWAP1
0x8b1 DUP2
0x8b2 MSTORE
0x8b3 PUSH1 0x20
0x8b5 ADD
0x8b6 PUSH1 0x0
0x8b8 SHA3
0x8b9 PUSH1 0x0
0x8bb DUP3
0x8bc DUP3
0x8bd SLOAD
0x8be SUB
0x8bf SWAP3
0x8c0 POP
0x8c1 POP
0x8c2 DUP2
0x8c3 SWAP1
0x8c4 SSTORE
0x8c5 POP
0x8c6 DUP2
0x8c7 PUSH1 0x2
0x8c9 PUSH1 0x0
0x8cb DUP6
0x8cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e1 AND
0x8e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f7 AND
0x8f8 DUP2
0x8f9 MSTORE
0x8fa PUSH1 0x20
0x8fc ADD
0x8fd SWAP1
0x8fe DUP2
0x8ff MSTORE
0x900 PUSH1 0x20
0x902 ADD
0x903 PUSH1 0x0
0x905 SHA3
0x906 PUSH1 0x0
0x908 DUP3
0x909 DUP3
0x90a SLOAD
0x90b ADD
0x90c SWAP3
0x90d POP
0x90e POP
0x90f DUP2
0x910 SWAP1
0x911 SSTORE
0x912 POP
0x913 DUP3
0x914 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x929 AND
0x92a DUP5
0x92b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x940 AND
0x941 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x962 DUP5
0x963 PUSH1 0x40
0x965 MLOAD
0x966 DUP1
0x967 DUP3
0x968 DUP2
0x969 MSTORE
0x96a PUSH1 0x20
0x96c ADD
0x96d SWAP2
0x96e POP
0x96f POP
0x970 PUSH1 0x40
0x972 MLOAD
0x973 DUP1
0x974 SWAP2
0x975 SUB
0x976 SWAP1
0x977 LOG3
0x978 PUSH1 0x1
0x97a SWAP1
0x97b POP
0x97c SWAP4
0x97d SWAP3
0x97e POP
0x97f POP
0x980 POP
0x981 JUMP
---
0x878: JUMPDEST 
0x87a: V522 = 0x2
0x87c: V523 = 0x0
0x87f: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x894: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x895: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x8aa: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x8ac: M[0x0] = V527
0x8ad: V528 = 0x20
0x8af: V529 = ADD 0x20 0x0
0x8b2: M[0x20] = 0x2
0x8b3: V530 = 0x20
0x8b5: V531 = ADD 0x20 0x20
0x8b6: V532 = 0x0
0x8b8: V533 = SHA3 0x0 0x40
0x8b9: V534 = 0x0
0x8bd: V535 = S[V533]
0x8be: V536 = SUB V535 S1
0x8c4: S[V533] = V536
0x8c7: V537 = 0x2
0x8c9: V538 = 0x0
0x8cc: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e1: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x8e2: V541 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f7: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V540
0x8f9: M[0x0] = V542
0x8fa: V543 = 0x20
0x8fc: V544 = ADD 0x20 0x0
0x8ff: M[0x20] = 0x2
0x900: V545 = 0x20
0x902: V546 = ADD 0x20 0x20
0x903: V547 = 0x0
0x905: V548 = SHA3 0x0 0x40
0x906: V549 = 0x0
0x90a: V550 = S[V548]
0x90b: V551 = ADD V550 S1
0x911: S[V548] = V551
0x914: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x929: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x92b: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x940: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x941: V556 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x963: V557 = 0x40
0x965: V558 = M[0x40]
0x969: M[V558] = S1
0x96a: V559 = 0x20
0x96c: V560 = ADD 0x20 V558
0x970: V561 = 0x40
0x972: V562 = M[0x40]
0x975: V563 = SUB V560 V562
0x977: LOG V562 V563 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V555 V553
0x978: V564 = 0x1
0x981: JUMP {0x6e1, 0x799}
---
Entry stack: [V11, S9, S8, S7, S6, 0x0, {0x6e1, 0x799}, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, S9, S8, S7, S6, 0x0, 0x1]

================================

Block 0x982
[0x982:0x9ad]
---
Predecessors: []
Successors: []
---
0x982 STOP
0x983 LOG1
0x984 PUSH6 0x627a7a723058
0x98b SHA3
0x98c PUSH30 0xbfc9826717c78702b034b35d4c307b9c72e8775ba31c89d49b955272270b
0x9ab MISSING 0xc
0x9ac STOP
0x9ad MISSING 0x29
---
0x982: STOP 
0x983: LOG S0 S1 S2
0x984: V565 = 0x627a7a723058
0x98b: V566 = SHA3 0x627a7a723058 S3
0x98c: V567 = 0xbfc9826717c78702b034b35d4c307b9c72e8775ba31c89d49b955272270b
0x9ab: MISSING 0xc
0x9ac: STOP 
0x9ad: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbfc9826717c78702b034b35d4c307b9c72e8775ba31c89d49b955272270b, V566]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xb4
Exit block: 0x134
Body: 0xb4, 0xbb, 0xbf, 0xc7, 0xec, 0xf5, 0x107, 0x11b, 0x134, 0x484

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x142
Exit block: 0x182
Body: 0x142, 0x149, 0x14d, 0x182, 0x4bd

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x19c
Exit block: 0x1af
Body: 0x19c, 0x1a3, 0x1a7, 0x1af, 0x5af

Function 3:
Public function signature: 0x1a39d8ef
Entry block: 0x1c5
Exit block: 0x1d8
Body: 0x1c5, 0x1cc, 0x1d0, 0x1d8, 0x5b9

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x1ee
Exit block: 0x24d
Body: 0x1ee, 0x1f5, 0x1f9, 0x24d, 0x5bf, 0x648, 0x64c, 0x6e1

Function 5:
Public function signature: 0x27e235e3
Entry block: 0x267
Exit block: 0x29e
Body: 0x267, 0x26e, 0x272, 0x29e, 0x6ed

Function 6:
Public function signature: 0x313ce567
Entry block: 0x2b4
Exit block: 0x2c7
Body: 0x2b4, 0x2bb, 0x2bf, 0x2c7, 0x705

Function 7:
Public function signature: 0x70a08231
Entry block: 0x2e3
Exit block: 0x31a
Body: 0x2e3, 0x2ea, 0x2ee, 0x31a, 0x70a

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x330
Exit block: 0x3b0
Body: 0x330, 0x337, 0x33b, 0x343, 0x368, 0x371, 0x383, 0x397, 0x3b0, 0x753

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x3be
Exit block: 0x3fe
Body: 0x3be, 0x3c5, 0x3c9, 0x3fe, 0x78c, 0x799

Function 10:
Public function signature: 0xdd62ed3e
Entry block: 0x418
Exit block: 0x46e
Body: 0x418, 0x41f, 0x423, 0x46e, 0x7a1

Function 11:
Public fallback function
Entry block: 0xaf
Exit block: 0xaf
Body: 0xaf

Function 12:
Private function
Entry block: 0x828
Exit block: 0x878
Body: 0x828, 0x878

