Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x41c0e1b5
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x41c0e1b5
0x3c: V13 = EQ 0x41c0e1b5 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x66]
---
0x41 DUP1
0x42 PUSH4 0xa90ae887
0x47 EQ
0x48 PUSH2 0x66
0x4b JUMPI
---
0x42: V15 = 0xa90ae887
0x47: V16 = EQ 0xa90ae887 V11
0x48: V17 = 0x66
0x4b: JUMPI 0x66 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x51]
Successors: [0xd5]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0xd5
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x64
0x60: V24 = 0xd5
0x63: JUMP 0xd5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0x65]
---
Predecessors: []
Successors: []
---
0x64 JUMPDEST
0x65 STOP
---
0x64: JUMPDEST 
0x65: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66
[0x66:0x6c]
---
Predecessors: [0x41]
Successors: [0x6d, 0x71]
---
0x66 JUMPDEST
0x67 CALLVALUE
0x68 ISZERO
0x69 PUSH2 0x71
0x6c JUMPI
---
0x66: JUMPDEST 
0x67: V25 = CALLVALUE
0x68: V26 = ISZERO V25
0x69: V27 = 0x71
0x6c: JUMPI 0x71 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x70]
---
Predecessors: [0x66]
Successors: []
---
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6d: V28 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0xd2]
---
Predecessors: [0x66]
Successors: [0x149]
---
0x71 JUMPDEST
0x72 PUSH2 0xd3
0x75 PUSH1 0x4
0x77 DUP1
0x78 DUP1
0x79 CALLDATALOAD
0x7a SWAP1
0x7b PUSH1 0x20
0x7d ADD
0x7e SWAP1
0x7f SWAP2
0x80 SWAP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP2
0x89 SWAP1
0x8a DUP1
0x8b CALLDATALOAD
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 DUP3
0x92 ADD
0x93 DUP1
0x94 CALLDATALOAD
0x95 SWAP1
0x96 PUSH1 0x20
0x98 ADD
0x99 SWAP1
0x9a DUP1
0x9b DUP1
0x9c PUSH1 0x1f
0x9e ADD
0x9f PUSH1 0x20
0xa1 DUP1
0xa2 SWAP2
0xa3 DIV
0xa4 MUL
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 PUSH1 0x40
0xaa MLOAD
0xab SWAP1
0xac DUP2
0xad ADD
0xae PUSH1 0x40
0xb0 MSTORE
0xb1 DUP1
0xb2 SWAP4
0xb3 SWAP3
0xb4 SWAP2
0xb5 SWAP1
0xb6 DUP2
0xb7 DUP2
0xb8 MSTORE
0xb9 PUSH1 0x20
0xbb ADD
0xbc DUP4
0xbd DUP4
0xbe DUP1
0xbf DUP3
0xc0 DUP5
0xc1 CALLDATACOPY
0xc2 DUP3
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca POP
0xcb SWAP2
0xcc SWAP1
0xcd POP
0xce POP
0xcf PUSH2 0x149
0xd2 JUMP
---
0x71: JUMPDEST 
0x72: V29 = 0xd3
0x75: V30 = 0x4
0x79: V31 = CALLDATALOAD 0x4
0x7b: V32 = 0x20
0x7d: V33 = ADD 0x20 0x4
0x82: V34 = CALLDATALOAD 0x24
0x84: V35 = 0x20
0x86: V36 = ADD 0x20 0x24
0x8b: V37 = CALLDATALOAD 0x44
0x8d: V38 = 0x20
0x8f: V39 = ADD 0x20 0x44
0x92: V40 = ADD 0x4 V37
0x94: V41 = CALLDATALOAD V40
0x96: V42 = 0x20
0x98: V43 = ADD 0x20 V40
0x9c: V44 = 0x1f
0x9e: V45 = ADD 0x1f V41
0x9f: V46 = 0x20
0xa3: V47 = DIV V45 0x20
0xa4: V48 = MUL V47 0x20
0xa5: V49 = 0x20
0xa7: V50 = ADD 0x20 V48
0xa8: V51 = 0x40
0xaa: V52 = M[0x40]
0xad: V53 = ADD V52 V50
0xae: V54 = 0x40
0xb0: M[0x40] = V53
0xb8: M[V52] = V41
0xb9: V55 = 0x20
0xbb: V56 = ADD 0x20 V52
0xc1: CALLDATACOPY V56 V43 V41
0xc3: V57 = ADD V56 V41
0xcf: V58 = 0x149
0xd2: JUMP 0x149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd3, V31, V34, V52]
Exit stack: [V11, 0xd3, V31, V34, V52]

================================

Block 0xd3
[0xd3:0xd4]
---
Predecessors: [0x2f5]
Successors: []
---
0xd3 JUMPDEST
0xd4 STOP
---
0xd3: JUMPDEST 
0xd4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0x12b]
---
Predecessors: [0x5c]
Successors: [0x12c, 0x130]
---
0xd5 JUMPDEST
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 SWAP1
0xda SLOAD
0xdb SWAP1
0xdc PUSH2 0x100
0xdf EXP
0xe0 SWAP1
0xe1 DIV
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e CALLER
0x10f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124 AND
0x125 EQ
0x126 ISZERO
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0xd5: JUMPDEST 
0xd6: V59 = 0x0
0xda: V60 = S[0x0]
0xdc: V61 = 0x100
0xdf: V62 = EXP 0x100 0x0
0xe1: V63 = DIV V60 0x1
0xe2: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xf8: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x10e: V68 = CALLER
0x10f: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x125: V71 = EQ V70 V67
0x126: V72 = ISZERO V71
0x127: V73 = ISZERO V72
0x128: V74 = 0x130
0x12b: JUMPI 0x130 V73
---
Entry stack: [V11, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0xd5]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V75 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0x130
[0x130:0x148]
---
Predecessors: [0xd5]
Successors: []
---
0x130 JUMPDEST
0x131 CALLER
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 SELFDESTRUCT
---
0x130: JUMPDEST 
0x131: V76 = CALLER
0x132: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x148: SELFDESTRUCT V78
---
Entry stack: [V11, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0x149
[0x149:0x173]
---
Predecessors: [0x71]
Successors: [0x174, 0x178]
---
0x149 JUMPDEST
0x14a PUSH1 0x0
0x14c PUSH1 0x1
0x14e PUSH1 0x0
0x150 DUP5
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c PUSH1 0x0
0x15e SHA3
0x15f PUSH1 0x0
0x161 SWAP1
0x162 SLOAD
0x163 SWAP1
0x164 PUSH2 0x100
0x167 EXP
0x168 SWAP1
0x169 DIV
0x16a PUSH1 0xff
0x16c AND
0x16d ISZERO
0x16e ISZERO
0x16f ISZERO
0x170 PUSH2 0x178
0x173 JUMPI
---
0x149: JUMPDEST 
0x14a: V79 = 0x0
0x14c: V80 = 0x1
0x14e: V81 = 0x0
0x152: M[0x0] = V34
0x153: V82 = 0x20
0x155: V83 = ADD 0x20 0x0
0x158: M[0x20] = 0x1
0x159: V84 = 0x20
0x15b: V85 = ADD 0x20 0x20
0x15c: V86 = 0x0
0x15e: V87 = SHA3 0x0 0x40
0x15f: V88 = 0x0
0x162: V89 = S[V87]
0x164: V90 = 0x100
0x167: V91 = EXP 0x100 0x0
0x169: V92 = DIV V89 0x1
0x16a: V93 = 0xff
0x16c: V94 = AND 0xff V92
0x16d: V95 = ISZERO V94
0x16e: V96 = ISZERO V95
0x16f: V97 = ISZERO V96
0x170: V98 = 0x178
0x173: JUMPI 0x178 V97
---
Entry stack: [V11, 0xd3, V31, V34, V52]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0xd3, V31, V34, V52, 0x0]

================================

Block 0x174
[0x174:0x177]
---
Predecessors: [0x149]
Successors: []
---
0x174 PUSH1 0x0
0x176 DUP1
0x177 REVERT
---
0x174: V99 = 0x0
0x177: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd3, V31, V34, V52, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd3, V31, V34, V52, 0x0]

================================

Block 0x178
[0x178:0x24e]
---
Predecessors: [0x149]
Successors: [0x2fb]
---
0x178 JUMPDEST
0x179 PUSH1 0x1
0x17b DUP1
0x17c PUSH1 0x0
0x17e DUP6
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 SWAP1
0x185 DUP2
0x186 MSTORE
0x187 PUSH1 0x20
0x189 ADD
0x18a PUSH1 0x0
0x18c SHA3
0x18d PUSH1 0x0
0x18f PUSH2 0x100
0x192 EXP
0x193 DUP2
0x194 SLOAD
0x195 DUP2
0x196 PUSH1 0xff
0x198 MUL
0x199 NOT
0x19a AND
0x19b SWAP1
0x19c DUP4
0x19d ISZERO
0x19e ISZERO
0x19f MUL
0x1a0 OR
0x1a1 SWAP1
0x1a2 SSTORE
0x1a3 POP
0x1a4 PUSH2 0x24f
0x1a7 CALLER
0x1a8 DUP6
0x1a9 DUP6
0x1aa ADDRESS
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae DUP1
0x1af DUP6
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH13 0x1000000000000000000000000
0x1ea MUL
0x1eb DUP2
0x1ec MSTORE
0x1ed PUSH1 0x14
0x1ef ADD
0x1f0 DUP5
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 DUP4
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc DUP3
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 PUSH13 0x1000000000000000000000000
0x237 MUL
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x14
0x23c ADD
0x23d SWAP5
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 POP
0x243 PUSH1 0x40
0x245 MLOAD
0x246 DUP1
0x247 SWAP2
0x248 SUB
0x249 SWAP1
0x24a SHA3
0x24b PUSH2 0x2fb
0x24e JUMP
---
0x178: JUMPDEST 
0x179: V100 = 0x1
0x17c: V101 = 0x0
0x180: M[0x0] = V34
0x181: V102 = 0x20
0x183: V103 = ADD 0x20 0x0
0x186: M[0x20] = 0x1
0x187: V104 = 0x20
0x189: V105 = ADD 0x20 0x20
0x18a: V106 = 0x0
0x18c: V107 = SHA3 0x0 0x40
0x18d: V108 = 0x0
0x18f: V109 = 0x100
0x192: V110 = EXP 0x100 0x0
0x194: V111 = S[V107]
0x196: V112 = 0xff
0x198: V113 = MUL 0xff 0x1
0x199: V114 = NOT 0xff
0x19a: V115 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V111
0x19d: V116 = ISZERO 0x1
0x19e: V117 = ISZERO 0x0
0x19f: V118 = MUL 0x1 0x1
0x1a0: V119 = OR 0x1 V115
0x1a2: S[V107] = V119
0x1a4: V120 = 0x24f
0x1a7: V121 = CALLER
0x1aa: V122 = ADDRESS
0x1ab: V123 = 0x40
0x1ad: V124 = M[0x40]
0x1b0: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1c6: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1dc: V129 = 0x1000000000000000000000000
0x1ea: V130 = MUL 0x1000000000000000000000000 V128
0x1ec: M[V124] = V130
0x1ed: V131 = 0x14
0x1ef: V132 = ADD 0x14 V124
0x1f2: M[V132] = V31
0x1f3: V133 = 0x20
0x1f5: V134 = ADD 0x20 V132
0x1f8: M[V134] = V34
0x1f9: V135 = 0x20
0x1fb: V136 = ADD 0x20 V134
0x1fd: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x213: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x229: V141 = 0x1000000000000000000000000
0x237: V142 = MUL 0x1000000000000000000000000 V140
0x239: M[V136] = V142
0x23a: V143 = 0x14
0x23c: V144 = ADD 0x14 V136
0x243: V145 = 0x40
0x245: V146 = M[0x40]
0x248: V147 = SUB V144 V146
0x24a: V148 = SHA3 V146 V147
0x24b: V149 = 0x2fb
0x24e: JUMP 0x2fb
---
Entry stack: [V11, 0xd3, V31, V34, V52, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x24f, V148]
Exit stack: [V11, 0xd3, V31, V34, V52, 0x0, 0x24f, V148]

================================

Block 0x24f
[0x24f:0x292]
---
Predecessors: [0x2fb]
Successors: [0x34a]
---
0x24f JUMPDEST
0x250 SWAP1
0x251 POP
0x252 PUSH1 0x0
0x254 DUP1
0x255 SWAP1
0x256 SLOAD
0x257 SWAP1
0x258 PUSH2 0x100
0x25b EXP
0x25c SWAP1
0x25d DIV
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x289 AND
0x28a PUSH2 0x293
0x28d DUP3
0x28e DUP5
0x28f PUSH2 0x34a
0x292 JUMP
---
0x24f: JUMPDEST 
0x252: V150 = 0x0
0x256: V151 = S[0x0]
0x258: V152 = 0x100
0x25b: V153 = EXP 0x100 0x0
0x25d: V154 = DIV V151 0x1
0x25e: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x274: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x289: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x28a: V159 = 0x293
0x28f: V160 = 0x34a
0x292: JUMP 0x34a
---
Entry stack: [V11, 0xd3, V31, V34, V52, 0x0, V202]
Stack pops: 3
Stack additions: [S2, S0, V158, 0x293, S0, S2]
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52]

================================

Block 0x293
[0x293:0x2b0]
---
Predecessors: [0x3e3]
Successors: [0x2b1, 0x2b5]
---
0x293 JUMPDEST
0x294 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a9 AND
0x2aa EQ
0x2ab ISZERO
0x2ac ISZERO
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x293: JUMPDEST 
0x294: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x2aa: V163 = EQ V162 V158
0x2ab: V164 = ISZERO V163
0x2ac: V165 = ISZERO V164
0x2ad: V166 = 0x2b5
0x2b0: JUMPI 0x2b5 V165
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, V270]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xd3, V31, V34, V52, V202]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x293]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V167 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd3, V31, V34, V52, V202]

================================

Block 0x2b5
[0x2b5:0x2f0]
---
Predecessors: [0x293]
Successors: [0x2f1, 0x2f5]
---
0x2b5 JUMPDEST
0x2b6 CALLER
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc AND
0x2cd PUSH2 0x8fc
0x2d0 DUP6
0x2d1 SWAP1
0x2d2 DUP2
0x2d3 ISZERO
0x2d4 MUL
0x2d5 SWAP1
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 PUSH1 0x0
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de DUP1
0x2df DUP4
0x2e0 SUB
0x2e1 DUP2
0x2e2 DUP6
0x2e3 DUP9
0x2e4 DUP9
0x2e5 CALL
0x2e6 SWAP4
0x2e7 POP
0x2e8 POP
0x2e9 POP
0x2ea POP
0x2eb ISZERO
0x2ec ISZERO
0x2ed PUSH2 0x2f5
0x2f0 JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V168 = CALLER
0x2b7: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2cd: V171 = 0x8fc
0x2d3: V172 = ISZERO V31
0x2d4: V173 = MUL V172 0x8fc
0x2d6: V174 = 0x40
0x2d8: V175 = M[0x40]
0x2d9: V176 = 0x0
0x2db: V177 = 0x40
0x2dd: V178 = M[0x40]
0x2e0: V179 = SUB V175 V178
0x2e5: V180 = CALL V173 V170 V31 V178 V179 V178 0x0
0x2eb: V181 = ISZERO V180
0x2ec: V182 = ISZERO V181
0x2ed: V183 = 0x2f5
0x2f0: JUMPI 0x2f5 V182
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xd3, V31, V34, V52, V202]

================================

Block 0x2f1
[0x2f1:0x2f4]
---
Predecessors: [0x2b5]
Successors: []
---
0x2f1 PUSH1 0x0
0x2f3 DUP1
0x2f4 REVERT
---
0x2f1: V184 = 0x0
0x2f4: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd3, V31, V34, V52, V202]

================================

Block 0x2f5
[0x2f5:0x2fa]
---
Predecessors: [0x2b5]
Successors: [0xd3]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa JUMP
---
0x2f5: JUMPDEST 
0x2fa: JUMP 0xd3
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fb
[0x2fb:0x349]
---
Predecessors: [0x178]
Successors: [0x24f]
---
0x2fb JUMPDEST
0x2fc PUSH1 0x0
0x2fe DUP2
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 DUP1
0x304 PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x325 DUP2
0x326 MSTORE
0x327 POP
0x328 PUSH1 0x1c
0x32a ADD
0x32b DUP3
0x32c PUSH1 0x0
0x32e NOT
0x32f AND
0x330 PUSH1 0x0
0x332 NOT
0x333 AND
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP2
0x33a POP
0x33b POP
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP1
0x340 SWAP2
0x341 SUB
0x342 SWAP1
0x343 SHA3
0x344 SWAP1
0x345 POP
0x346 SWAP2
0x347 SWAP1
0x348 POP
0x349 JUMP
---
0x2fb: JUMPDEST 
0x2fc: V185 = 0x0
0x2ff: V186 = 0x40
0x301: V187 = M[0x40]
0x304: V188 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x326: M[V187] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x328: V189 = 0x1c
0x32a: V190 = ADD 0x1c V187
0x32c: V191 = 0x0
0x32e: V192 = NOT 0x0
0x32f: V193 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V148
0x330: V194 = 0x0
0x332: V195 = NOT 0x0
0x333: V196 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V193
0x335: M[V190] = V196
0x336: V197 = 0x20
0x338: V198 = ADD 0x20 V190
0x33c: V199 = 0x40
0x33e: V200 = M[0x40]
0x341: V201 = SUB V198 V200
0x343: V202 = SHA3 V200 V201
0x349: JUMP 0x24f
---
Entry stack: [V11, 0xd3, V31, V34, V52, 0x0, 0x24f, V148]
Stack pops: 2
Stack additions: [V202]
Exit stack: [V11, 0xd3, V31, V34, V52, 0x0, V202]

================================

Block 0x34a
[0x34a:0x358]
---
Predecessors: [0x24f]
Successors: [0x3f7]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d DUP1
0x34e PUSH1 0x0
0x350 DUP1
0x351 PUSH2 0x359
0x354 DUP6
0x355 PUSH2 0x3f7
0x358 JUMP
---
0x34a: JUMPDEST 
0x34b: V203 = 0x0
0x34e: V204 = 0x0
0x351: V205 = 0x359
0x355: V206 = 0x3f7
0x358: JUMP 0x3f7
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x359, S0]
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, 0x359, V52]

================================

Block 0x359
[0x359:0x3de]
---
Predecessors: [0x410]
Successors: [0x3df, 0x3e3]
---
0x359 JUMPDEST
0x35a DUP1
0x35b SWAP4
0x35c POP
0x35d DUP2
0x35e SWAP5
0x35f POP
0x360 DUP3
0x361 SWAP6
0x362 POP
0x363 POP
0x364 POP
0x365 POP
0x366 PUSH1 0x1
0x368 DUP7
0x369 DUP5
0x36a DUP5
0x36b DUP5
0x36c PUSH1 0x40
0x36e MLOAD
0x36f PUSH1 0x0
0x371 DUP2
0x372 MSTORE
0x373 PUSH1 0x20
0x375 ADD
0x376 PUSH1 0x40
0x378 MSTORE
0x379 PUSH1 0x0
0x37b PUSH1 0x40
0x37d MLOAD
0x37e PUSH1 0x20
0x380 ADD
0x381 MSTORE
0x382 PUSH1 0x40
0x384 MLOAD
0x385 DUP1
0x386 DUP6
0x387 PUSH1 0x0
0x389 NOT
0x38a AND
0x38b PUSH1 0x0
0x38d NOT
0x38e AND
0x38f DUP2
0x390 MSTORE
0x391 PUSH1 0x20
0x393 ADD
0x394 DUP5
0x395 PUSH1 0xff
0x397 AND
0x398 PUSH1 0xff
0x39a AND
0x39b DUP2
0x39c MSTORE
0x39d PUSH1 0x20
0x39f ADD
0x3a0 DUP4
0x3a1 PUSH1 0x0
0x3a3 NOT
0x3a4 AND
0x3a5 PUSH1 0x0
0x3a7 NOT
0x3a8 AND
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae DUP3
0x3af PUSH1 0x0
0x3b1 NOT
0x3b2 AND
0x3b3 PUSH1 0x0
0x3b5 NOT
0x3b6 AND
0x3b7 DUP2
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc SWAP5
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 POP
0x3c1 POP
0x3c2 PUSH1 0x20
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 PUSH1 0x20
0x3c9 DUP2
0x3ca SUB
0x3cb SWAP1
0x3cc DUP1
0x3cd DUP5
0x3ce SUB
0x3cf SWAP1
0x3d0 PUSH1 0x0
0x3d2 DUP7
0x3d3 PUSH2 0x646e
0x3d6 GAS
0x3d7 SUB
0x3d8 CALL
0x3d9 ISZERO
0x3da ISZERO
0x3db PUSH2 0x3e3
0x3de JUMPI
---
0x359: JUMPDEST 
0x366: V207 = 0x1
0x36c: V208 = 0x40
0x36e: V209 = M[0x40]
0x36f: V210 = 0x0
0x372: M[V209] = 0x0
0x373: V211 = 0x20
0x375: V212 = ADD 0x20 V209
0x376: V213 = 0x40
0x378: M[0x40] = V212
0x379: V214 = 0x0
0x37b: V215 = 0x40
0x37d: V216 = M[0x40]
0x37e: V217 = 0x20
0x380: V218 = ADD 0x20 V216
0x381: M[V218] = 0x0
0x382: V219 = 0x40
0x384: V220 = M[0x40]
0x387: V221 = 0x0
0x389: V222 = NOT 0x0
0x38a: V223 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V202
0x38b: V224 = 0x0
0x38d: V225 = NOT 0x0
0x38e: V226 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V223
0x390: M[V220] = V226
0x391: V227 = 0x20
0x393: V228 = ADD 0x20 V220
0x395: V229 = 0xff
0x397: V230 = AND 0xff V291
0x398: V231 = 0xff
0x39a: V232 = AND 0xff V230
0x39c: M[V228] = V232
0x39d: V233 = 0x20
0x39f: V234 = ADD 0x20 V228
0x3a1: V235 = 0x0
0x3a3: V236 = NOT 0x0
0x3a4: V237 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V283
0x3a5: V238 = 0x0
0x3a7: V239 = NOT 0x0
0x3a8: V240 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V237
0x3aa: M[V234] = V240
0x3ab: V241 = 0x20
0x3ad: V242 = ADD 0x20 V234
0x3af: V243 = 0x0
0x3b1: V244 = NOT 0x0
0x3b2: V245 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V286
0x3b3: V246 = 0x0
0x3b5: V247 = NOT 0x0
0x3b6: V248 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V245
0x3b8: M[V242] = V248
0x3b9: V249 = 0x20
0x3bb: V250 = ADD 0x20 V242
0x3c2: V251 = 0x20
0x3c4: V252 = 0x40
0x3c6: V253 = M[0x40]
0x3c7: V254 = 0x20
0x3ca: V255 = SUB V253 0x20
0x3ce: V256 = SUB V250 V253
0x3d0: V257 = 0x0
0x3d3: V258 = 0x646e
0x3d6: V259 = GAS
0x3d7: V260 = SUB V259 0x646e
0x3d8: V261 = CALL V260 0x1 0x0 V253 V256 V255 0x20
0x3d9: V262 = ISZERO V261
0x3da: V263 = ISZERO V262
0x3db: V264 = 0x3e3
0x3de: JUMPI 0x3e3 V263
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, V291, V283, V286]
Stack pops: 9
Stack additions: [S8, S7, S6, S2, S1, S0, 0x1, V250]
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, V291, V283, V286, 0x1, V250]

================================

Block 0x3df
[0x3df:0x3e2]
---
Predecessors: [0x359]
Successors: []
---
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 REVERT
---
0x3df: V265 = 0x0
0x3e2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, V291, V283, V286, 0x1, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, V291, V283, V286, 0x1, V250]

================================

Block 0x3e3
[0x3e3:0x3f6]
---
Predecessors: [0x359]
Successors: [0x293]
---
0x3e3 JUMPDEST
0x3e4 POP
0x3e5 POP
0x3e6 PUSH1 0x20
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb SUB
0x3ec MLOAD
0x3ed SWAP4
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 SWAP3
0x3f3 SWAP2
0x3f4 POP
0x3f5 POP
0x3f6 JUMP
---
0x3e3: JUMPDEST 
0x3e6: V266 = 0x20
0x3e8: V267 = 0x40
0x3ea: V268 = M[0x40]
0x3eb: V269 = SUB V268 0x20
0x3ec: V270 = M[V269]
0x3f6: JUMP 0x293
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, V291, V283, V286, 0x1, V250]
Stack pops: 9
Stack additions: [V270]
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, V270]

================================

Block 0x3f7
[0x3f7:0x40b]
---
Predecessors: [0x34a]
Successors: [0x40c, 0x410]
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x0
0x3fa DUP1
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe PUSH1 0x0
0x400 DUP1
0x401 PUSH1 0x41
0x403 DUP8
0x404 MLOAD
0x405 EQ
0x406 ISZERO
0x407 ISZERO
0x408 PUSH2 0x410
0x40b JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V271 = 0x0
0x3fb: V272 = 0x0
0x3fe: V273 = 0x0
0x401: V274 = 0x41
0x404: V275 = M[V52]
0x405: V276 = EQ V275 0x41
0x406: V277 = ISZERO V276
0x407: V278 = ISZERO V277
0x408: V279 = 0x410
0x40b: JUMPI 0x410 V278
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, 0x359, V52]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, 0x359, V52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x40c
[0x40c:0x40f]
---
Predecessors: [0x3f7]
Successors: []
---
0x40c PUSH1 0x0
0x40e DUP1
0x40f REVERT
---
0x40c: V280 = 0x0
0x40f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, 0x359, V52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, 0x359, V52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x410
[0x410:0x43a]
---
Predecessors: [0x3f7]
Successors: [0x359]
---
0x410 JUMPDEST
0x411 PUSH1 0x20
0x413 DUP8
0x414 ADD
0x415 MLOAD
0x416 SWAP3
0x417 POP
0x418 PUSH1 0x40
0x41a DUP8
0x41b ADD
0x41c MLOAD
0x41d SWAP2
0x41e POP
0x41f PUSH1 0x60
0x421 DUP8
0x422 ADD
0x423 MLOAD
0x424 PUSH1 0x0
0x426 BYTE
0x427 SWAP1
0x428 POP
0x429 DUP1
0x42a DUP4
0x42b DUP4
0x42c SWAP6
0x42d POP
0x42e SWAP6
0x42f POP
0x430 SWAP6
0x431 POP
0x432 POP
0x433 POP
0x434 POP
0x435 SWAP2
0x436 SWAP4
0x437 SWAP1
0x438 SWAP3
0x439 POP
0x43a JUMP
---
0x410: JUMPDEST 
0x411: V281 = 0x20
0x414: V282 = ADD V52 0x20
0x415: V283 = M[V282]
0x418: V284 = 0x40
0x41b: V285 = ADD V52 0x40
0x41c: V286 = M[V285]
0x41f: V287 = 0x60
0x422: V288 = ADD V52 0x60
0x423: V289 = M[V288]
0x424: V290 = 0x0
0x426: V291 = BYTE 0x0 V289
0x43a: JUMP 0x359
---
Entry stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, 0x359, V52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [V291, V283, V286]
Exit stack: [V11, 0xd3, V31, V34, V52, V202, V158, 0x293, V202, V52, 0x0, 0x0, 0x0, 0x0, V291, V283, V286]

================================

Block 0x43b
[0x43b:0x466]
---
Predecessors: []
Successors: []
---
0x43b STOP
0x43c LOG1
0x43d PUSH6 0x627a7a723058
0x444 SHA3
0x445 MISSING 0x4a
0x446 MISSING 0xc0
0x447 MISSING 0xb2
0x448 MISSING 0xba
0x449 MISSING 0xdb
0x44a MISSING 0x5d
0x44b PUSH5 0x34c723771a
0x451 PUSH9 0x6c2b53e62751981c8b
0x45b MISSING 0xcb
0x45c LOG0
0x45d ADD
0x45e MISSING 0xbd
0x45f MISSING 0xfc
0x460 MISSING 0xe1
0x461 MISSING 0xf7
0x462 CALLVALUE
0x463 SLOAD
0x464 MISSING 0xe0
0x465 STOP
0x466 MISSING 0x29
---
0x43b: STOP 
0x43c: LOG S0 S1 S2
0x43d: V292 = 0x627a7a723058
0x444: V293 = SHA3 0x627a7a723058 S3
0x445: MISSING 0x4a
0x446: MISSING 0xc0
0x447: MISSING 0xb2
0x448: MISSING 0xba
0x449: MISSING 0xdb
0x44a: MISSING 0x5d
0x44b: V294 = 0x34c723771a
0x451: V295 = 0x6c2b53e62751981c8b
0x45b: MISSING 0xcb
0x45c: LOG S0 S1
0x45d: V296 = ADD S2 S3
0x45e: MISSING 0xbd
0x45f: MISSING 0xfc
0x460: MISSING 0xe1
0x461: MISSING 0xf7
0x462: V297 = CALLVALUE
0x463: V298 = S[V297]
0x464: MISSING 0xe0
0x465: STOP 
0x466: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V293, 0x6c2b53e62751981c8b, 0x34c723771a, V296, V298]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x51
Exit block: 0x130
Body: 0x51, 0x58, 0x5c, 0xd5, 0x12c, 0x130

Function 1:
Public function signature: 0xa90ae887
Entry block: 0x66
Exit block: 0xd3
Body: 0x66, 0x6d, 0x71, 0xd3, 0x149, 0x174, 0x178, 0x24f, 0x293, 0x2b1, 0x2b5, 0x2f1, 0x2f5, 0x2fb, 0x34a, 0x359, 0x3df, 0x3e3, 0x3f7, 0x40c, 0x410

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

