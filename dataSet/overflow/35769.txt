Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xc3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xc3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xc3
0xa: JUMPI 0xc3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xc8]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xc8
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xc8
0x3e: JUMPI 0xc8 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x157]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x157
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x157
0x49: JUMPI 0x157 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1b1]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x1b1
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x1b1
0x54: JUMPI 0x1b1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1da]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1da
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1da
0x5f: JUMPI 0x1da V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x253]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x253
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x253
0x6a: JUMPI 0x253 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x282]
---
0x6b DUP1
0x6c PUSH4 0x4d2301cc
0x71 EQ
0x72 PUSH2 0x282
0x75 JUMPI
---
0x6c: V26 = 0x4d2301cc
0x71: V27 = EQ 0x4d2301cc V10
0x72: V28 = 0x282
0x75: JUMPI 0x282 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2cf]
---
0x76 DUP1
0x77 PUSH4 0x6379ed9d
0x7c EQ
0x7d PUSH2 0x2cf
0x80 JUMPI
---
0x77: V29 = 0x6379ed9d
0x7c: V30 = EQ 0x6379ed9d V10
0x7d: V31 = 0x2cf
0x80: JUMPI 0x2cf V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x33b]
---
0x81 DUP1
0x82 PUSH4 0x70a08231
0x87 EQ
0x88 PUSH2 0x33b
0x8b JUMPI
---
0x82: V32 = 0x70a08231
0x87: V33 = EQ 0x70a08231 V10
0x88: V34 = 0x33b
0x8b: JUMPI 0x33b V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x388]
---
0x8c DUP1
0x8d PUSH4 0x95d89b41
0x92 EQ
0x93 PUSH2 0x388
0x96 JUMPI
---
0x8d: V35 = 0x95d89b41
0x92: V36 = EQ 0x95d89b41 V10
0x93: V37 = 0x388
0x96: JUMPI 0x388 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x417]
---
0x97 DUP1
0x98 PUSH4 0xa9059cbb
0x9d EQ
0x9e PUSH2 0x417
0xa1 JUMPI
---
0x98: V38 = 0xa9059cbb
0x9d: V39 = EQ 0xa9059cbb V10
0x9e: V40 = 0x417
0xa1: JUMPI 0x417 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x471]
---
0xa2 DUP1
0xa3 PUSH4 0xdd62ed3e
0xa8 EQ
0xa9 PUSH2 0x471
0xac JUMPI
---
0xa3: V41 = 0xdd62ed3e
0xa8: V42 = EQ 0xdd62ed3e V10
0xa9: V43 = 0x471
0xac: JUMPI 0x471 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x4dd]
---
0xad DUP1
0xae PUSH4 0xe58fc54c
0xb3 EQ
0xb4 PUSH2 0x4dd
0xb7 JUMPI
---
0xae: V44 = 0xe58fc54c
0xb3: V45 = EQ 0xe58fc54c V10
0xb4: V46 = 0x4dd
0xb7: JUMPI 0x4dd V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x52e]
---
0xb8 DUP1
0xb9 PUSH4 0xf2fde38b
0xbe EQ
0xbf PUSH2 0x52e
0xc2 JUMPI
---
0xb9: V47 = 0xf2fde38b
0xbe: V48 = EQ 0xf2fde38b V10
0xbf: V49 = 0x52e
0xc2: JUMPI 0x52e V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xc7]
---
Predecessors: [0x0, 0xb8]
Successors: []
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc3: JUMPDEST 
0xc4: V50 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc8
[0xc8:0xce]
---
Predecessors: [0xb]
Successors: [0xcf, 0xd3]
---
0xc8 JUMPDEST
0xc9 CALLVALUE
0xca ISZERO
0xcb PUSH2 0xd3
0xce JUMPI
---
0xc8: JUMPDEST 
0xc9: V51 = CALLVALUE
0xca: V52 = ISZERO V51
0xcb: V53 = 0xd3
0xce: JUMPI 0xd3 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xc8]
Successors: []
---
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xcf: V54 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd3
[0xd3:0xda]
---
Predecessors: [0xc8]
Successors: [0x567]
---
0xd3 JUMPDEST
0xd4 PUSH2 0xdb
0xd7 PUSH2 0x567
0xda JUMP
---
0xd3: JUMPDEST 
0xd4: V55 = 0xdb
0xd7: V56 = 0x567
0xda: JUMP 0x567
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdb]
Exit stack: [V10, 0xdb]

================================

Block 0xdb
[0xdb:0xff]
---
Predecessors: [0x5a8, 0xd57]
Successors: [0x100]
---
0xdb JUMPDEST
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 DUP1
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 DUP3
0xe5 DUP2
0xe6 SUB
0xe7 DUP3
0xe8 MSTORE
0xe9 DUP4
0xea DUP2
0xeb DUP2
0xec MLOAD
0xed DUP2
0xee MSTORE
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP2
0xf3 POP
0xf4 DUP1
0xf5 MLOAD
0xf6 SWAP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP1
0xfb DUP1
0xfc DUP4
0xfd DUP4
0xfe PUSH1 0x0
---
0xdb: JUMPDEST 
0xdc: V57 = 0x40
0xde: V58 = M[0x40]
0xe1: V59 = 0x20
0xe3: V60 = ADD 0x20 V58
0xe6: V61 = SUB V60 V58
0xe8: M[V58] = V61
0xec: V62 = M[S0]
0xee: M[V60] = V62
0xef: V63 = 0x20
0xf1: V64 = ADD 0x20 V60
0xf5: V65 = M[S0]
0xf7: V66 = 0x20
0xf9: V67 = ADD 0x20 S0
0xfe: V68 = 0x0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V58, V58, V64, V67, V65, V65, V64, V67, 0x0]
Exit stack: [V10, S0, V58, V58, V64, V67, V65, V65, V64, V67, 0x0]

================================

Block 0x100
[0x100:0x108]
---
Predecessors: [0xdb, 0x111]
Successors: [0x109, 0x11c]
---
0x100 JUMPDEST
0x101 DUP4
0x102 DUP2
0x103 LT
0x104 ISZERO
0x105 PUSH2 0x11c
0x108 JUMPI
---
0x100: JUMPDEST 
0x103: V69 = LT S0 V65
0x104: V70 = ISZERO V69
0x105: V71 = 0x11c
0x108: JUMPI 0x11c V70
---
Entry stack: [V10, S9, V58, V58, V64, V67, V65, V65, V64, V67, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S9, V58, V58, V64, V67, V65, V65, V64, V67, S0]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0x100]
Successors: [0x111]
---
0x109 DUP1
0x10a DUP3
0x10b ADD
0x10c MLOAD
0x10d DUP2
0x10e DUP5
0x10f ADD
0x110 MSTORE
---
0x10b: V72 = ADD V67 S0
0x10c: V73 = M[V72]
0x10f: V74 = ADD V64 S0
0x110: M[V74] = V73
---
Entry stack: [V10, S9, V58, V58, V64, V67, V65, V65, V64, V67, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S9, V58, V58, V64, V67, V65, V65, V64, V67, S0]

================================

Block 0x111
[0x111:0x11b]
---
Predecessors: [0x109]
Successors: [0x100]
---
0x111 JUMPDEST
0x112 PUSH1 0x20
0x114 DUP2
0x115 ADD
0x116 SWAP1
0x117 POP
0x118 PUSH2 0x100
0x11b JUMP
---
0x111: JUMPDEST 
0x112: V75 = 0x20
0x115: V76 = ADD S0 0x20
0x118: V77 = 0x100
0x11b: JUMP 0x100
---
Entry stack: [V10, S9, V58, V58, V64, V67, V65, V65, V64, V67, S0]
Stack pops: 1
Stack additions: [V76]
Exit stack: [V10, S9, V58, V58, V64, V67, V65, V65, V64, V67, V76]

================================

Block 0x11c
[0x11c:0x12f]
---
Predecessors: [0x100]
Successors: [0x130, 0x149]
---
0x11c JUMPDEST
0x11d POP
0x11e POP
0x11f POP
0x120 POP
0x121 SWAP1
0x122 POP
0x123 SWAP1
0x124 DUP2
0x125 ADD
0x126 SWAP1
0x127 PUSH1 0x1f
0x129 AND
0x12a DUP1
0x12b ISZERO
0x12c PUSH2 0x149
0x12f JUMPI
---
0x11c: JUMPDEST 
0x125: V78 = ADD V65 V64
0x127: V79 = 0x1f
0x129: V80 = AND 0x1f V65
0x12b: V81 = ISZERO V80
0x12c: V82 = 0x149
0x12f: JUMPI 0x149 V81
---
Entry stack: [V10, S9, V58, V58, V64, V67, V65, V65, V64, V67, S0]
Stack pops: 7
Stack additions: [V78, V80]
Exit stack: [V10, S9, V58, V58, V78, V80]

================================

Block 0x130
[0x130:0x148]
---
Predecessors: [0x11c]
Successors: [0x149]
---
0x130 DUP1
0x131 DUP3
0x132 SUB
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x1
0x137 DUP4
0x138 PUSH1 0x20
0x13a SUB
0x13b PUSH2 0x100
0x13e EXP
0x13f SUB
0x140 NOT
0x141 AND
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP2
0x148 POP
---
0x132: V83 = SUB V78 V80
0x134: V84 = M[V83]
0x135: V85 = 0x1
0x138: V86 = 0x20
0x13a: V87 = SUB 0x20 V80
0x13b: V88 = 0x100
0x13e: V89 = EXP 0x100 V87
0x13f: V90 = SUB V89 0x1
0x140: V91 = NOT V90
0x141: V92 = AND V91 V84
0x143: M[V83] = V92
0x144: V93 = 0x20
0x146: V94 = ADD 0x20 V83
---
Entry stack: [V10, S4, V58, V58, V78, V80]
Stack pops: 2
Stack additions: [V94, S0]
Exit stack: [V10, S4, V58, V58, V94, V80]

================================

Block 0x149
[0x149:0x156]
---
Predecessors: [0x11c, 0x130]
Successors: []
---
0x149 JUMPDEST
0x14a POP
0x14b SWAP3
0x14c POP
0x14d POP
0x14e POP
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 SWAP2
0x154 SUB
0x155 SWAP1
0x156 RETURN
---
0x149: JUMPDEST 
0x14f: V95 = 0x40
0x151: V96 = M[0x40]
0x154: V97 = SUB S1 V96
0x156: RETURN V96 V97
---
Entry stack: [V10, S4, V58, V58, S1, V80]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x157
[0x157:0x15d]
---
Predecessors: [0x3f]
Successors: [0x15e, 0x162]
---
0x157 JUMPDEST
0x158 CALLVALUE
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x157: JUMPDEST 
0x158: V98 = CALLVALUE
0x159: V99 = ISZERO V98
0x15a: V100 = 0x162
0x15d: JUMPI 0x162 V99
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x157]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V101 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x162
[0x162:0x196]
---
Predecessors: [0x157]
Successors: [0x5ab]
---
0x162 JUMPDEST
0x163 PUSH2 0x197
0x166 PUSH1 0x4
0x168 DUP1
0x169 DUP1
0x16a CALLDATALOAD
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 SWAP1
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP1
0x186 SWAP2
0x187 SWAP1
0x188 DUP1
0x189 CALLDATALOAD
0x18a SWAP1
0x18b PUSH1 0x20
0x18d ADD
0x18e SWAP1
0x18f SWAP2
0x190 SWAP1
0x191 POP
0x192 POP
0x193 PUSH2 0x5ab
0x196 JUMP
---
0x162: JUMPDEST 
0x163: V102 = 0x197
0x166: V103 = 0x4
0x16a: V104 = CALLDATALOAD 0x4
0x16b: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x182: V107 = 0x20
0x184: V108 = ADD 0x20 0x4
0x189: V109 = CALLDATALOAD 0x24
0x18b: V110 = 0x20
0x18d: V111 = ADD 0x20 0x24
0x193: V112 = 0x5ab
0x196: JUMP 0x5ab
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x197, V106, V109]
Exit stack: [V10, 0x197, V106, V109]

================================

Block 0x197
[0x197:0x1b0]
---
Predecessors: [0x733]
Successors: []
---
0x197 JUMPDEST
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c DUP3
0x19d ISZERO
0x19e ISZERO
0x19f ISZERO
0x1a0 ISZERO
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP2
0x1a7 POP
0x1a8 POP
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad SWAP2
0x1ae SUB
0x1af SWAP1
0x1b0 RETURN
---
0x197: JUMPDEST 
0x198: V113 = 0x40
0x19a: V114 = M[0x40]
0x19d: V115 = ISZERO {0x0, 0x1}
0x19e: V116 = ISZERO V115
0x19f: V117 = ISZERO V116
0x1a0: V118 = ISZERO V117
0x1a2: M[V114] = V118
0x1a3: V119 = 0x20
0x1a5: V120 = ADD 0x20 V114
0x1a9: V121 = 0x40
0x1ab: V122 = M[0x40]
0x1ae: V123 = SUB V120 V122
0x1b0: RETURN V122 V123
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1b7]
---
Predecessors: [0x4a]
Successors: [0x1b8, 0x1bc]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V124 = CALLVALUE
0x1b3: V125 = ISZERO V124
0x1b4: V126 = 0x1bc
0x1b7: JUMPI 0x1bc V125
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V127 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x1b1]
Successors: [0x739]
---
0x1bc JUMPDEST
0x1bd PUSH2 0x1c4
0x1c0 PUSH2 0x739
0x1c3 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V128 = 0x1c4
0x1c0: V129 = 0x739
0x1c3: JUMP 0x739
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V10, 0x1c4]

================================

Block 0x1c4
[0x1c4:0x1d9]
---
Predecessors: [0x739]
Successors: []
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 DUP3
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP2
0x1d0 POP
0x1d1 POP
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 SWAP2
0x1d7 SUB
0x1d8 SWAP1
0x1d9 RETURN
---
0x1c4: JUMPDEST 
0x1c5: V130 = 0x40
0x1c7: V131 = M[0x40]
0x1cb: M[V131] = V474
0x1cc: V132 = 0x20
0x1ce: V133 = ADD 0x20 V131
0x1d2: V134 = 0x40
0x1d4: V135 = M[0x40]
0x1d7: V136 = SUB V133 V135
0x1d9: RETURN V135 V136
---
Entry stack: [V10, 0x1c4, V474]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x1da
[0x1da:0x1e0]
---
Predecessors: [0x55]
Successors: [0x1e1, 0x1e5]
---
0x1da JUMPDEST
0x1db CALLVALUE
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x1da: JUMPDEST 
0x1db: V137 = CALLVALUE
0x1dc: V138 = ISZERO V137
0x1dd: V139 = 0x1e5
0x1e0: JUMPI 0x1e5 V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x1da]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V140 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e5
[0x1e5:0x238]
---
Predecessors: [0x1da]
Successors: [0x73f]
---
0x1e5 JUMPDEST
0x1e6 PUSH2 0x239
0x1e9 PUSH1 0x4
0x1eb DUP1
0x1ec DUP1
0x1ed CALLDATALOAD
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 SWAP1
0x205 PUSH1 0x20
0x207 ADD
0x208 SWAP1
0x209 SWAP2
0x20a SWAP1
0x20b DUP1
0x20c CALLDATALOAD
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 AND
0x223 SWAP1
0x224 PUSH1 0x20
0x226 ADD
0x227 SWAP1
0x228 SWAP2
0x229 SWAP1
0x22a DUP1
0x22b CALLDATALOAD
0x22c SWAP1
0x22d PUSH1 0x20
0x22f ADD
0x230 SWAP1
0x231 SWAP2
0x232 SWAP1
0x233 POP
0x234 POP
0x235 PUSH2 0x73f
0x238 JUMP
---
0x1e5: JUMPDEST 
0x1e6: V141 = 0x239
0x1e9: V142 = 0x4
0x1ed: V143 = CALLDATALOAD 0x4
0x1ee: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x205: V146 = 0x20
0x207: V147 = ADD 0x20 0x4
0x20c: V148 = CALLDATALOAD 0x24
0x20d: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x224: V151 = 0x20
0x226: V152 = ADD 0x20 0x24
0x22b: V153 = CALLDATALOAD 0x44
0x22d: V154 = 0x20
0x22f: V155 = ADD 0x20 0x44
0x235: V156 = 0x73f
0x238: JUMP 0x73f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x239, V145, V150, V153]
Exit stack: [V10, 0x239, V145, V150, V153]

================================

Block 0x239
[0x239:0x252]
---
Predecessors: [0xa77]
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e DUP3
0x23f ISZERO
0x240 ISZERO
0x241 ISZERO
0x242 ISZERO
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x20
0x247 ADD
0x248 SWAP2
0x249 POP
0x24a POP
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f SWAP2
0x250 SUB
0x251 SWAP1
0x252 RETURN
---
0x239: JUMPDEST 
0x23a: V157 = 0x40
0x23c: V158 = M[0x40]
0x23f: V159 = ISZERO {0x0, 0x1}
0x240: V160 = ISZERO V159
0x241: V161 = ISZERO V160
0x242: V162 = ISZERO V161
0x244: M[V158] = V162
0x245: V163 = 0x20
0x247: V164 = ADD 0x20 V158
0x24b: V165 = 0x40
0x24d: V166 = M[0x40]
0x250: V167 = SUB V164 V166
0x252: RETURN V166 V167
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x253
[0x253:0x259]
---
Predecessors: [0x60]
Successors: [0x25a, 0x25e]
---
0x253 JUMPDEST
0x254 CALLVALUE
0x255 ISZERO
0x256 PUSH2 0x25e
0x259 JUMPI
---
0x253: JUMPDEST 
0x254: V168 = CALLVALUE
0x255: V169 = ISZERO V168
0x256: V170 = 0x25e
0x259: JUMPI 0x25e V169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x253]
Successors: []
---
0x25a PUSH1 0x0
0x25c DUP1
0x25d REVERT
---
0x25a: V171 = 0x0
0x25d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25e
[0x25e:0x265]
---
Predecessors: [0x253]
Successors: [0xa84]
---
0x25e JUMPDEST
0x25f PUSH2 0x266
0x262 PUSH2 0xa84
0x265 JUMP
---
0x25e: JUMPDEST 
0x25f: V172 = 0x266
0x262: V173 = 0xa84
0x265: JUMP 0xa84
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x266]
Exit stack: [V10, 0x266]

================================

Block 0x266
[0x266:0x281]
---
Predecessors: [0xa8b]
Successors: []
---
0x266 JUMPDEST
0x267 PUSH1 0x40
0x269 MLOAD
0x26a DUP1
0x26b DUP3
0x26c PUSH1 0xff
0x26e AND
0x26f PUSH1 0xff
0x271 AND
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 SWAP2
0x278 POP
0x279 POP
0x27a PUSH1 0x40
0x27c MLOAD
0x27d DUP1
0x27e SWAP2
0x27f SUB
0x280 SWAP1
0x281 RETURN
---
0x266: JUMPDEST 
0x267: V174 = 0x40
0x269: V175 = M[0x40]
0x26c: V176 = 0xff
0x26e: V177 = AND 0xff 0x8
0x26f: V178 = 0xff
0x271: V179 = AND 0xff 0x8
0x273: M[V175] = 0x8
0x274: V180 = 0x20
0x276: V181 = ADD 0x20 V175
0x27a: V182 = 0x40
0x27c: V183 = M[0x40]
0x27f: V184 = SUB V181 V183
0x281: RETURN V183 V184
---
Entry stack: [V10, 0x8]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x288]
---
Predecessors: [0x6b]
Successors: [0x289, 0x28d]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x282: JUMPDEST 
0x283: V185 = CALLVALUE
0x284: V186 = ISZERO V185
0x285: V187 = 0x28d
0x288: JUMPI 0x28d V186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x282]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V188 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28d
[0x28d:0x2b8]
---
Predecessors: [0x282]
Successors: [0xa8e]
---
0x28d JUMPDEST
0x28e PUSH2 0x2b9
0x291 PUSH1 0x4
0x293 DUP1
0x294 DUP1
0x295 CALLDATALOAD
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac SWAP1
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP1
0x2b1 SWAP2
0x2b2 SWAP1
0x2b3 POP
0x2b4 POP
0x2b5 PUSH2 0xa8e
0x2b8 JUMP
---
0x28d: JUMPDEST 
0x28e: V189 = 0x2b9
0x291: V190 = 0x4
0x295: V191 = CALLDATALOAD 0x4
0x296: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x2ad: V194 = 0x20
0x2af: V195 = ADD 0x20 0x4
0x2b5: V196 = 0xa8e
0x2b8: JUMP 0xa8e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b9, V193]
Exit stack: [V10, 0x2b9, V193]

================================

Block 0x2b9
[0x2b9:0x2ce]
---
Predecessors: [0xaab]
Successors: []
---
0x2b9 JUMPDEST
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be DUP3
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 SWAP2
0x2c5 POP
0x2c6 POP
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP1
0x2cb SWAP2
0x2cc SUB
0x2cd SWAP1
0x2ce RETURN
---
0x2b9: JUMPDEST 
0x2ba: V197 = 0x40
0x2bc: V198 = M[0x40]
0x2c0: M[V198] = S0
0x2c1: V199 = 0x20
0x2c3: V200 = ADD 0x20 V198
0x2c7: V201 = 0x40
0x2c9: V202 = M[0x40]
0x2cc: V203 = SUB V200 V202
0x2ce: RETURN V202 V203
---
Entry stack: [V10, 0x339, V222, V230, V233, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S2, S1]

================================

Block 0x2cf
[0x2cf:0x2d5]
---
Predecessors: [0x76]
Successors: [0x2d6, 0x2da]
---
0x2cf JUMPDEST
0x2d0 CALLVALUE
0x2d1 ISZERO
0x2d2 PUSH2 0x2da
0x2d5 JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V204 = CALLVALUE
0x2d1: V205 = ISZERO V204
0x2d2: V206 = 0x2da
0x2d5: JUMPI 0x2da V205
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d6
[0x2d6:0x2d9]
---
Predecessors: [0x2cf]
Successors: []
---
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 REVERT
---
0x2d6: V207 = 0x0
0x2d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2da
[0x2da:0x338]
---
Predecessors: [0x2cf]
Successors: [0xab0]
---
0x2da JUMPDEST
0x2db PUSH2 0x339
0x2de PUSH1 0x4
0x2e0 DUP1
0x2e1 DUP1
0x2e2 CALLDATALOAD
0x2e3 SWAP1
0x2e4 PUSH1 0x20
0x2e6 ADD
0x2e7 SWAP1
0x2e8 DUP3
0x2e9 ADD
0x2ea DUP1
0x2eb CALLDATALOAD
0x2ec SWAP1
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 SWAP1
0x2f1 DUP1
0x2f2 DUP1
0x2f3 PUSH1 0x20
0x2f5 MUL
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc SWAP1
0x2fd DUP2
0x2fe ADD
0x2ff PUSH1 0x40
0x301 MSTORE
0x302 DUP1
0x303 SWAP4
0x304 SWAP3
0x305 SWAP2
0x306 SWAP1
0x307 DUP2
0x308 DUP2
0x309 MSTORE
0x30a PUSH1 0x20
0x30c ADD
0x30d DUP4
0x30e DUP4
0x30f PUSH1 0x20
0x311 MUL
0x312 DUP1
0x313 DUP3
0x314 DUP5
0x315 CALLDATACOPY
0x316 DUP3
0x317 ADD
0x318 SWAP2
0x319 POP
0x31a POP
0x31b POP
0x31c POP
0x31d POP
0x31e POP
0x31f SWAP2
0x320 SWAP1
0x321 DUP1
0x322 CALLDATALOAD
0x323 SWAP1
0x324 PUSH1 0x20
0x326 ADD
0x327 SWAP1
0x328 SWAP2
0x329 SWAP1
0x32a DUP1
0x32b CALLDATALOAD
0x32c SWAP1
0x32d PUSH1 0x20
0x32f ADD
0x330 SWAP1
0x331 SWAP2
0x332 SWAP1
0x333 POP
0x334 POP
0x335 PUSH2 0xab0
0x338 JUMP
---
0x2da: JUMPDEST 
0x2db: V208 = 0x339
0x2de: V209 = 0x4
0x2e2: V210 = CALLDATALOAD 0x4
0x2e4: V211 = 0x20
0x2e6: V212 = ADD 0x20 0x4
0x2e9: V213 = ADD 0x4 V210
0x2eb: V214 = CALLDATALOAD V213
0x2ed: V215 = 0x20
0x2ef: V216 = ADD 0x20 V213
0x2f3: V217 = 0x20
0x2f5: V218 = MUL 0x20 V214
0x2f6: V219 = 0x20
0x2f8: V220 = ADD 0x20 V218
0x2f9: V221 = 0x40
0x2fb: V222 = M[0x40]
0x2fe: V223 = ADD V222 V220
0x2ff: V224 = 0x40
0x301: M[0x40] = V223
0x309: M[V222] = V214
0x30a: V225 = 0x20
0x30c: V226 = ADD 0x20 V222
0x30f: V227 = 0x20
0x311: V228 = MUL 0x20 V214
0x315: CALLDATACOPY V226 V216 V228
0x317: V229 = ADD V226 V228
0x322: V230 = CALLDATALOAD 0x24
0x324: V231 = 0x20
0x326: V232 = ADD 0x20 0x24
0x32b: V233 = CALLDATALOAD 0x44
0x32d: V234 = 0x20
0x32f: V235 = ADD 0x20 0x44
0x335: V236 = 0xab0
0x338: JUMP 0xab0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x339, V222, V230, V233]
Exit stack: [V10, 0x339, V222, V230, V233]

================================

Block 0x339
[0x339:0x33a]
---
Predecessors: [0xcc6]
Successors: []
---
0x339 JUMPDEST
0x33a STOP
---
0x339: JUMPDEST 
0x33a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33b
[0x33b:0x341]
---
Predecessors: [0x81]
Successors: [0x342, 0x346]
---
0x33b JUMPDEST
0x33c CALLVALUE
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x33b: JUMPDEST 
0x33c: V237 = CALLVALUE
0x33d: V238 = ISZERO V237
0x33e: V239 = 0x346
0x341: JUMPI 0x346 V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x33b]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V240 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x346
[0x346:0x371]
---
Predecessors: [0x33b]
Successors: [0xccc]
---
0x346 JUMPDEST
0x347 PUSH2 0x372
0x34a PUSH1 0x4
0x34c DUP1
0x34d DUP1
0x34e CALLDATALOAD
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 SWAP1
0x366 PUSH1 0x20
0x368 ADD
0x369 SWAP1
0x36a SWAP2
0x36b SWAP1
0x36c POP
0x36d POP
0x36e PUSH2 0xccc
0x371 JUMP
---
0x346: JUMPDEST 
0x347: V241 = 0x372
0x34a: V242 = 0x4
0x34e: V243 = CALLDATALOAD 0x4
0x34f: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x366: V246 = 0x20
0x368: V247 = ADD 0x20 0x4
0x36e: V248 = 0xccc
0x371: JUMP 0xccc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x372, V245]
Exit stack: [V10, 0x372, V245]

================================

Block 0x372
[0x372:0x387]
---
Predecessors: [0xd11]
Successors: []
---
0x372 JUMPDEST
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 DUP3
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x20
0x37c ADD
0x37d SWAP2
0x37e POP
0x37f POP
0x380 PUSH1 0x40
0x382 MLOAD
0x383 DUP1
0x384 SWAP2
0x385 SUB
0x386 SWAP1
0x387 RETURN
---
0x372: JUMPDEST 
0x373: V249 = 0x40
0x375: V250 = M[0x40]
0x379: M[V250] = V784
0x37a: V251 = 0x20
0x37c: V252 = ADD 0x20 V250
0x380: V253 = 0x40
0x382: V254 = M[0x40]
0x385: V255 = SUB V252 V254
0x387: RETURN V254 V255
---
Entry stack: [V10, V784]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0x8c]
Successors: [0x38f, 0x393]
---
0x388 JUMPDEST
0x389 CALLVALUE
0x38a ISZERO
0x38b PUSH2 0x393
0x38e JUMPI
---
0x388: JUMPDEST 
0x389: V256 = CALLVALUE
0x38a: V257 = ISZERO V256
0x38b: V258 = 0x393
0x38e: JUMPI 0x393 V257
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x388]
Successors: []
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
---
0x38f: V259 = 0x0
0x392: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x393
[0x393:0x39a]
---
Predecessors: [0x388]
Successors: [0xd16]
---
0x393 JUMPDEST
0x394 PUSH2 0x39b
0x397 PUSH2 0xd16
0x39a JUMP
---
0x393: JUMPDEST 
0x394: V260 = 0x39b
0x397: V261 = 0xd16
0x39a: JUMP 0xd16
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x39b]
Exit stack: [V10, 0x39b]

================================

Block 0x39b
[0x39b:0x3bf]
---
Predecessors: [0x5a8, 0xd57]
Successors: [0x3c0]
---
0x39b JUMPDEST
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 DUP1
0x3a1 PUSH1 0x20
0x3a3 ADD
0x3a4 DUP3
0x3a5 DUP2
0x3a6 SUB
0x3a7 DUP3
0x3a8 MSTORE
0x3a9 DUP4
0x3aa DUP2
0x3ab DUP2
0x3ac MLOAD
0x3ad DUP2
0x3ae MSTORE
0x3af PUSH1 0x20
0x3b1 ADD
0x3b2 SWAP2
0x3b3 POP
0x3b4 DUP1
0x3b5 MLOAD
0x3b6 SWAP1
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP1
0x3bb DUP1
0x3bc DUP4
0x3bd DUP4
0x3be PUSH1 0x0
---
0x39b: JUMPDEST 
0x39c: V262 = 0x40
0x39e: V263 = M[0x40]
0x3a1: V264 = 0x20
0x3a3: V265 = ADD 0x20 V263
0x3a6: V266 = SUB V265 V263
0x3a8: M[V263] = V266
0x3ac: V267 = M[S0]
0x3ae: M[V265] = V267
0x3af: V268 = 0x20
0x3b1: V269 = ADD 0x20 V265
0x3b5: V270 = M[S0]
0x3b7: V271 = 0x20
0x3b9: V272 = ADD 0x20 S0
0x3be: V273 = 0x0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V263, V263, V269, V272, V270, V270, V269, V272, 0x0]
Exit stack: [V10, S0, V263, V263, V269, V272, V270, V270, V269, V272, 0x0]

================================

Block 0x3c0
[0x3c0:0x3c8]
---
Predecessors: [0x39b, 0x3d1]
Successors: [0x3c9, 0x3dc]
---
0x3c0 JUMPDEST
0x3c1 DUP4
0x3c2 DUP2
0x3c3 LT
0x3c4 ISZERO
0x3c5 PUSH2 0x3dc
0x3c8 JUMPI
---
0x3c0: JUMPDEST 
0x3c3: V274 = LT S0 V270
0x3c4: V275 = ISZERO V274
0x3c5: V276 = 0x3dc
0x3c8: JUMPI 0x3dc V275
---
Entry stack: [V10, S9, V263, V263, V269, V272, V270, V270, V269, V272, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S9, V263, V263, V269, V272, V270, V270, V269, V272, S0]

================================

Block 0x3c9
[0x3c9:0x3d0]
---
Predecessors: [0x3c0]
Successors: [0x3d1]
---
0x3c9 DUP1
0x3ca DUP3
0x3cb ADD
0x3cc MLOAD
0x3cd DUP2
0x3ce DUP5
0x3cf ADD
0x3d0 MSTORE
---
0x3cb: V277 = ADD V272 S0
0x3cc: V278 = M[V277]
0x3cf: V279 = ADD V269 S0
0x3d0: M[V279] = V278
---
Entry stack: [V10, S9, V263, V263, V269, V272, V270, V270, V269, V272, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S9, V263, V263, V269, V272, V270, V270, V269, V272, S0]

================================

Block 0x3d1
[0x3d1:0x3db]
---
Predecessors: [0x3c9]
Successors: [0x3c0]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x20
0x3d4 DUP2
0x3d5 ADD
0x3d6 SWAP1
0x3d7 POP
0x3d8 PUSH2 0x3c0
0x3db JUMP
---
0x3d1: JUMPDEST 
0x3d2: V280 = 0x20
0x3d5: V281 = ADD S0 0x20
0x3d8: V282 = 0x3c0
0x3db: JUMP 0x3c0
---
Entry stack: [V10, S9, V263, V263, V269, V272, V270, V270, V269, V272, S0]
Stack pops: 1
Stack additions: [V281]
Exit stack: [V10, S9, V263, V263, V269, V272, V270, V270, V269, V272, V281]

================================

Block 0x3dc
[0x3dc:0x3ef]
---
Predecessors: [0x3c0]
Successors: [0x3f0, 0x409]
---
0x3dc JUMPDEST
0x3dd POP
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 SWAP1
0x3e2 POP
0x3e3 SWAP1
0x3e4 DUP2
0x3e5 ADD
0x3e6 SWAP1
0x3e7 PUSH1 0x1f
0x3e9 AND
0x3ea DUP1
0x3eb ISZERO
0x3ec PUSH2 0x409
0x3ef JUMPI
---
0x3dc: JUMPDEST 
0x3e5: V283 = ADD V270 V269
0x3e7: V284 = 0x1f
0x3e9: V285 = AND 0x1f V270
0x3eb: V286 = ISZERO V285
0x3ec: V287 = 0x409
0x3ef: JUMPI 0x409 V286
---
Entry stack: [V10, S9, V263, V263, V269, V272, V270, V270, V269, V272, S0]
Stack pops: 7
Stack additions: [V283, V285]
Exit stack: [V10, S9, V263, V263, V283, V285]

================================

Block 0x3f0
[0x3f0:0x408]
---
Predecessors: [0x3dc]
Successors: [0x409]
---
0x3f0 DUP1
0x3f1 DUP3
0x3f2 SUB
0x3f3 DUP1
0x3f4 MLOAD
0x3f5 PUSH1 0x1
0x3f7 DUP4
0x3f8 PUSH1 0x20
0x3fa SUB
0x3fb PUSH2 0x100
0x3fe EXP
0x3ff SUB
0x400 NOT
0x401 AND
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x20
0x406 ADD
0x407 SWAP2
0x408 POP
---
0x3f2: V288 = SUB V283 V285
0x3f4: V289 = M[V288]
0x3f5: V290 = 0x1
0x3f8: V291 = 0x20
0x3fa: V292 = SUB 0x20 V285
0x3fb: V293 = 0x100
0x3fe: V294 = EXP 0x100 V292
0x3ff: V295 = SUB V294 0x1
0x400: V296 = NOT V295
0x401: V297 = AND V296 V289
0x403: M[V288] = V297
0x404: V298 = 0x20
0x406: V299 = ADD 0x20 V288
---
Entry stack: [V10, S4, V263, V263, V283, V285]
Stack pops: 2
Stack additions: [V299, S0]
Exit stack: [V10, S4, V263, V263, V299, V285]

================================

Block 0x409
[0x409:0x416]
---
Predecessors: [0x3dc, 0x3f0]
Successors: []
---
0x409 JUMPDEST
0x40a POP
0x40b SWAP3
0x40c POP
0x40d POP
0x40e POP
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP1
0x413 SWAP2
0x414 SUB
0x415 SWAP1
0x416 RETURN
---
0x409: JUMPDEST 
0x40f: V300 = 0x40
0x411: V301 = M[0x40]
0x414: V302 = SUB S1 V301
0x416: RETURN V301 V302
---
Entry stack: [V10, S4, V263, V263, S1, V285]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x417
[0x417:0x41d]
---
Predecessors: [0x97]
Successors: [0x41e, 0x422]
---
0x417 JUMPDEST
0x418 CALLVALUE
0x419 ISZERO
0x41a PUSH2 0x422
0x41d JUMPI
---
0x417: JUMPDEST 
0x418: V303 = CALLVALUE
0x419: V304 = ISZERO V303
0x41a: V305 = 0x422
0x41d: JUMPI 0x422 V304
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41e
[0x41e:0x421]
---
Predecessors: [0x417]
Successors: []
---
0x41e PUSH1 0x0
0x420 DUP1
0x421 REVERT
---
0x41e: V306 = 0x0
0x421: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x422
[0x422:0x456]
---
Predecessors: [0x417]
Successors: [0xd5a]
---
0x422 JUMPDEST
0x423 PUSH2 0x457
0x426 PUSH1 0x4
0x428 DUP1
0x429 DUP1
0x42a CALLDATALOAD
0x42b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x440 AND
0x441 SWAP1
0x442 PUSH1 0x20
0x444 ADD
0x445 SWAP1
0x446 SWAP2
0x447 SWAP1
0x448 DUP1
0x449 CALLDATALOAD
0x44a SWAP1
0x44b PUSH1 0x20
0x44d ADD
0x44e SWAP1
0x44f SWAP2
0x450 SWAP1
0x451 POP
0x452 POP
0x453 PUSH2 0xd5a
0x456 JUMP
---
0x422: JUMPDEST 
0x423: V307 = 0x457
0x426: V308 = 0x4
0x42a: V309 = CALLDATALOAD 0x4
0x42b: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x440: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x442: V312 = 0x20
0x444: V313 = ADD 0x20 0x4
0x449: V314 = CALLDATALOAD 0x24
0x44b: V315 = 0x20
0x44d: V316 = ADD 0x20 0x24
0x453: V317 = 0xd5a
0x456: JUMP 0xd5a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x457, V311, V314]
Exit stack: [V10, 0x457, V311, V314]

================================

Block 0x457
[0x457:0x470]
---
Predecessors: [0xf77]
Successors: []
---
0x457 JUMPDEST
0x458 PUSH1 0x40
0x45a MLOAD
0x45b DUP1
0x45c DUP3
0x45d ISZERO
0x45e ISZERO
0x45f ISZERO
0x460 ISZERO
0x461 DUP2
0x462 MSTORE
0x463 PUSH1 0x20
0x465 ADD
0x466 SWAP2
0x467 POP
0x468 POP
0x469 PUSH1 0x40
0x46b MLOAD
0x46c DUP1
0x46d SWAP2
0x46e SUB
0x46f SWAP1
0x470 RETURN
---
0x457: JUMPDEST 
0x458: V318 = 0x40
0x45a: V319 = M[0x40]
0x45d: V320 = ISZERO {0x0, 0x1}
0x45e: V321 = ISZERO V320
0x45f: V322 = ISZERO V321
0x460: V323 = ISZERO V322
0x462: M[V319] = V323
0x463: V324 = 0x20
0x465: V325 = ADD 0x20 V319
0x469: V326 = 0x40
0x46b: V327 = M[0x40]
0x46e: V328 = SUB V325 V327
0x470: RETURN V327 V328
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x471
[0x471:0x477]
---
Predecessors: [0xa2]
Successors: [0x478, 0x47c]
---
0x471 JUMPDEST
0x472 CALLVALUE
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x471: JUMPDEST 
0x472: V329 = CALLVALUE
0x473: V330 = ISZERO V329
0x474: V331 = 0x47c
0x477: JUMPI 0x47c V330
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x471]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V332 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x47c
[0x47c:0x4c6]
---
Predecessors: [0x471]
Successors: [0xf81]
---
0x47c JUMPDEST
0x47d PUSH2 0x4c7
0x480 PUSH1 0x4
0x482 DUP1
0x483 DUP1
0x484 CALLDATALOAD
0x485 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49a AND
0x49b SWAP1
0x49c PUSH1 0x20
0x49e ADD
0x49f SWAP1
0x4a0 SWAP2
0x4a1 SWAP1
0x4a2 DUP1
0x4a3 CALLDATALOAD
0x4a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b9 AND
0x4ba SWAP1
0x4bb PUSH1 0x20
0x4bd ADD
0x4be SWAP1
0x4bf SWAP2
0x4c0 SWAP1
0x4c1 POP
0x4c2 POP
0x4c3 PUSH2 0xf81
0x4c6 JUMP
---
0x47c: JUMPDEST 
0x47d: V333 = 0x4c7
0x480: V334 = 0x4
0x484: V335 = CALLDATALOAD 0x4
0x485: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x49c: V338 = 0x20
0x49e: V339 = ADD 0x20 0x4
0x4a3: V340 = CALLDATALOAD 0x24
0x4a4: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x4bb: V343 = 0x20
0x4bd: V344 = ADD 0x20 0x24
0x4c3: V345 = 0xf81
0x4c6: JUMP 0xf81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4c7, V337, V342]
Exit stack: [V10, 0x4c7, V337, V342]

================================

Block 0x4c7
[0x4c7:0x4dc]
---
Predecessors: [0x1003]
Successors: []
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x40
0x4ca MLOAD
0x4cb DUP1
0x4cc DUP3
0x4cd DUP2
0x4ce MSTORE
0x4cf PUSH1 0x20
0x4d1 ADD
0x4d2 SWAP2
0x4d3 POP
0x4d4 POP
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 SWAP2
0x4da SUB
0x4db SWAP1
0x4dc RETURN
---
0x4c7: JUMPDEST 
0x4c8: V346 = 0x40
0x4ca: V347 = M[0x40]
0x4ce: M[V347] = V934
0x4cf: V348 = 0x20
0x4d1: V349 = ADD 0x20 V347
0x4d5: V350 = 0x40
0x4d7: V351 = M[0x40]
0x4da: V352 = SUB V349 V351
0x4dc: RETURN V351 V352
---
Entry stack: [V10, V934]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4dd
[0x4dd:0x4e3]
---
Predecessors: [0xad]
Successors: [0x4e4, 0x4e8]
---
0x4dd JUMPDEST
0x4de CALLVALUE
0x4df ISZERO
0x4e0 PUSH2 0x4e8
0x4e3 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V353 = CALLVALUE
0x4df: V354 = ISZERO V353
0x4e0: V355 = 0x4e8
0x4e3: JUMPI 0x4e8 V354
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e4
[0x4e4:0x4e7]
---
Predecessors: [0x4dd]
Successors: []
---
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 REVERT
---
0x4e4: V356 = 0x0
0x4e7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e8
[0x4e8:0x513]
---
Predecessors: [0x4dd]
Successors: [0x1009]
---
0x4e8 JUMPDEST
0x4e9 PUSH2 0x514
0x4ec PUSH1 0x4
0x4ee DUP1
0x4ef DUP1
0x4f0 CALLDATALOAD
0x4f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x506 AND
0x507 SWAP1
0x508 PUSH1 0x20
0x50a ADD
0x50b SWAP1
0x50c SWAP2
0x50d SWAP1
0x50e POP
0x50f POP
0x510 PUSH2 0x1009
0x513 JUMP
---
0x4e8: JUMPDEST 
0x4e9: V357 = 0x514
0x4ec: V358 = 0x4
0x4f0: V359 = CALLDATALOAD 0x4
0x4f1: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x506: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x508: V362 = 0x20
0x50a: V363 = ADD 0x20 0x4
0x510: V364 = 0x1009
0x513: JUMP 0x1009
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x514, V361]
Exit stack: [V10, 0x514, V361]

================================

Block 0x514
[0x514:0x52d]
---
Predecessors: [0x1216]
Successors: []
---
0x514 JUMPDEST
0x515 PUSH1 0x40
0x517 MLOAD
0x518 DUP1
0x519 DUP3
0x51a ISZERO
0x51b ISZERO
0x51c ISZERO
0x51d ISZERO
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x20
0x522 ADD
0x523 SWAP2
0x524 POP
0x525 POP
0x526 PUSH1 0x40
0x528 MLOAD
0x529 DUP1
0x52a SWAP2
0x52b SUB
0x52c SWAP1
0x52d RETURN
---
0x514: JUMPDEST 
0x515: V365 = 0x40
0x517: V366 = M[0x40]
0x51a: V367 = ISZERO V1049
0x51b: V368 = ISZERO V367
0x51c: V369 = ISZERO V368
0x51d: V370 = ISZERO V369
0x51f: M[V366] = V370
0x520: V371 = 0x20
0x522: V372 = ADD 0x20 V366
0x526: V373 = 0x40
0x528: V374 = M[0x40]
0x52b: V375 = SUB V372 V374
0x52d: RETURN V374 V375
---
Entry stack: [V10, V1049]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x52e
[0x52e:0x534]
---
Predecessors: [0xb8]
Successors: [0x535, 0x539]
---
0x52e JUMPDEST
0x52f CALLVALUE
0x530 ISZERO
0x531 PUSH2 0x539
0x534 JUMPI
---
0x52e: JUMPDEST 
0x52f: V376 = CALLVALUE
0x530: V377 = ISZERO V376
0x531: V378 = 0x539
0x534: JUMPI 0x539 V377
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x535
[0x535:0x538]
---
Predecessors: [0x52e]
Successors: []
---
0x535 PUSH1 0x0
0x537 DUP1
0x538 REVERT
---
0x535: V379 = 0x0
0x538: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x539
[0x539:0x564]
---
Predecessors: [0x52e]
Successors: [0x121d]
---
0x539 JUMPDEST
0x53a PUSH2 0x565
0x53d PUSH1 0x4
0x53f DUP1
0x540 DUP1
0x541 CALLDATALOAD
0x542 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x557 AND
0x558 SWAP1
0x559 PUSH1 0x20
0x55b ADD
0x55c SWAP1
0x55d SWAP2
0x55e SWAP1
0x55f POP
0x560 POP
0x561 PUSH2 0x121d
0x564 JUMP
---
0x539: JUMPDEST 
0x53a: V380 = 0x565
0x53d: V381 = 0x4
0x541: V382 = CALLDATALOAD 0x4
0x542: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x557: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x559: V385 = 0x20
0x55b: V386 = ADD 0x20 0x4
0x561: V387 = 0x121d
0x564: JUMP 0x121d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x565, V384]
Exit stack: [V10, 0x565, V384]

================================

Block 0x565
[0x565:0x566]
---
Predecessors: [0x12ba]
Successors: []
---
0x565 JUMPDEST
0x566 STOP
---
0x565: JUMPDEST 
0x566: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x567
[0x567:0x56e]
---
Predecessors: [0xd3]
Successors: [0x12bd]
---
0x567 JUMPDEST
0x568 PUSH2 0x56f
0x56b PUSH2 0x12bd
0x56e JUMP
---
0x567: JUMPDEST 
0x568: V388 = 0x56f
0x56b: V389 = 0x12bd
0x56e: JUMP 0x12bd
---
Entry stack: [V10, 0xdb]
Stack pops: 0
Stack additions: [0x56f]
Exit stack: [V10, 0xdb, 0x56f]

================================

Block 0x56f
[0x56f:0x5a7]
---
Predecessors: [0x12bd]
Successors: [0x5a8]
---
0x56f JUMPDEST
0x570 PUSH1 0x40
0x572 DUP1
0x573 MLOAD
0x574 SWAP1
0x575 DUP2
0x576 ADD
0x577 PUSH1 0x40
0x579 MSTORE
0x57a DUP1
0x57b PUSH1 0x9
0x57d DUP2
0x57e MSTORE
0x57f PUSH1 0x20
0x581 ADD
0x582 PUSH32 0x44696d6f6e436f696e0000000000000000000000000000000000000000000000
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 POP
0x5a6 SWAP1
0x5a7 POP
---
0x56f: JUMPDEST 
0x570: V390 = 0x40
0x573: V391 = M[0x40]
0x576: V392 = ADD V391 0x40
0x577: V393 = 0x40
0x579: M[0x40] = V392
0x57b: V394 = 0x9
0x57e: M[V391] = 0x9
0x57f: V395 = 0x20
0x581: V396 = ADD 0x20 V391
0x582: V397 = 0x44696d6f6e436f696e0000000000000000000000000000000000000000000000
0x5a4: M[V396] = 0x44696d6f6e436f696e0000000000000000000000000000000000000000000000
---
Entry stack: [V10, {0xdb, 0x39b}, V1081]
Stack pops: 1
Stack additions: [V391]
Exit stack: [V10, {0xdb, 0x39b}, V391]

================================

Block 0x5a8
[0x5a8:0x5aa]
---
Predecessors: [0x56f]
Successors: [0xdb, 0x39b]
---
0x5a8 JUMPDEST
0x5a9 SWAP1
0x5aa JUMP
---
0x5a8: JUMPDEST 
0x5aa: JUMP {0xdb, 0x39b}
---
Entry stack: [V10, {0xdb, 0x39b}, V391]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V391]

================================

Block 0x5ab
[0x5ab:0x5b7]
---
Predecessors: [0x162]
Successors: [0x5b8, 0x63a]
---
0x5ab JUMPDEST
0x5ac PUSH1 0x0
0x5ae DUP1
0x5af DUP3
0x5b0 EQ
0x5b1 ISZERO
0x5b2 DUP1
0x5b3 ISZERO
0x5b4 PUSH2 0x63a
0x5b7 JUMPI
---
0x5ab: JUMPDEST 
0x5ac: V398 = 0x0
0x5b0: V399 = EQ V109 0x0
0x5b1: V400 = ISZERO V399
0x5b3: V401 = ISZERO V400
0x5b4: V402 = 0x63a
0x5b7: JUMPI 0x63a V401
---
Entry stack: [V10, 0x197, V106, V109]
Stack pops: 1
Stack additions: [S0, 0x0, V400]
Exit stack: [V10, 0x197, V106, V109, 0x0, V400]

================================

Block 0x5b8
[0x5b8:0x639]
---
Predecessors: [0x5ab]
Successors: [0x63a]
---
0x5b8 POP
0x5b9 PUSH1 0x0
0x5bb PUSH1 0x2
0x5bd PUSH1 0x0
0x5bf CALLER
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5eb AND
0x5ec DUP2
0x5ed MSTORE
0x5ee PUSH1 0x20
0x5f0 ADD
0x5f1 SWAP1
0x5f2 DUP2
0x5f3 MSTORE
0x5f4 PUSH1 0x20
0x5f6 ADD
0x5f7 PUSH1 0x0
0x5f9 SHA3
0x5fa PUSH1 0x0
0x5fc DUP6
0x5fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x612 AND
0x613 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x628 AND
0x629 DUP2
0x62a MSTORE
0x62b PUSH1 0x20
0x62d ADD
0x62e SWAP1
0x62f DUP2
0x630 MSTORE
0x631 PUSH1 0x20
0x633 ADD
0x634 PUSH1 0x0
0x636 SHA3
0x637 SLOAD
0x638 EQ
0x639 ISZERO
---
0x5b9: V403 = 0x0
0x5bb: V404 = 0x2
0x5bd: V405 = 0x0
0x5bf: V406 = CALLER
0x5c0: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x5d6: V409 = 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x5ed: M[0x0] = V410
0x5ee: V411 = 0x20
0x5f0: V412 = ADD 0x20 0x0
0x5f3: M[0x20] = 0x2
0x5f4: V413 = 0x20
0x5f6: V414 = ADD 0x20 0x20
0x5f7: V415 = 0x0
0x5f9: V416 = SHA3 0x0 0x40
0x5fa: V417 = 0x0
0x5fd: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x612: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x613: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x628: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x62a: M[0x0] = V421
0x62b: V422 = 0x20
0x62d: V423 = ADD 0x20 0x0
0x630: M[0x20] = V416
0x631: V424 = 0x20
0x633: V425 = ADD 0x20 0x20
0x634: V426 = 0x0
0x636: V427 = SHA3 0x0 0x40
0x637: V428 = S[V427]
0x638: V429 = EQ V428 0x0
0x639: V430 = ISZERO V429
---
Entry stack: [V10, 0x197, V106, V109, 0x0, V400]
Stack pops: 4
Stack additions: [S3, S2, S1, V430]
Exit stack: [V10, 0x197, V106, V109, 0x0, V430]

================================

Block 0x63a
[0x63a:0x63f]
---
Predecessors: [0x5ab, 0x5b8]
Successors: [0x640, 0x648]
---
0x63a JUMPDEST
0x63b ISZERO
0x63c PUSH2 0x648
0x63f JUMPI
---
0x63a: JUMPDEST 
0x63b: V431 = ISZERO S0
0x63c: V432 = 0x648
0x63f: JUMPI 0x648 V431
---
Entry stack: [V10, 0x197, V106, V109, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x197, V106, V109, 0x0]

================================

Block 0x640
[0x640:0x647]
---
Predecessors: [0x63a]
Successors: [0x733]
---
0x640 PUSH1 0x0
0x642 SWAP1
0x643 POP
0x644 PUSH2 0x733
0x647 JUMP
---
0x640: V433 = 0x0
0x644: V434 = 0x733
0x647: JUMP 0x733
---
Entry stack: [V10, 0x197, V106, V109, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x197, V106, V109, 0x0]

================================

Block 0x648
[0x648:0x732]
---
Predecessors: [0x63a]
Successors: [0x733]
---
0x648 JUMPDEST
0x649 DUP2
0x64a PUSH1 0x2
0x64c PUSH1 0x0
0x64e CALLER
0x64f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x664 AND
0x665 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67a AND
0x67b DUP2
0x67c MSTORE
0x67d PUSH1 0x20
0x67f ADD
0x680 SWAP1
0x681 DUP2
0x682 MSTORE
0x683 PUSH1 0x20
0x685 ADD
0x686 PUSH1 0x0
0x688 SHA3
0x689 PUSH1 0x0
0x68b DUP6
0x68c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a1 AND
0x6a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b7 AND
0x6b8 DUP2
0x6b9 MSTORE
0x6ba PUSH1 0x20
0x6bc ADD
0x6bd SWAP1
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x20
0x6c2 ADD
0x6c3 PUSH1 0x0
0x6c5 SHA3
0x6c6 DUP2
0x6c7 SWAP1
0x6c8 SSTORE
0x6c9 POP
0x6ca DUP3
0x6cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e0 AND
0x6e1 CALLER
0x6e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f7 AND
0x6f8 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x719 DUP5
0x71a PUSH1 0x40
0x71c MLOAD
0x71d DUP1
0x71e DUP3
0x71f DUP2
0x720 MSTORE
0x721 PUSH1 0x20
0x723 ADD
0x724 SWAP2
0x725 POP
0x726 POP
0x727 PUSH1 0x40
0x729 MLOAD
0x72a DUP1
0x72b SWAP2
0x72c SUB
0x72d SWAP1
0x72e LOG3
0x72f PUSH1 0x1
0x731 SWAP1
0x732 POP
---
0x648: JUMPDEST 
0x64a: V435 = 0x2
0x64c: V436 = 0x0
0x64e: V437 = CALLER
0x64f: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x664: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x665: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x67c: M[0x0] = V441
0x67d: V442 = 0x20
0x67f: V443 = ADD 0x20 0x0
0x682: M[0x20] = 0x2
0x683: V444 = 0x20
0x685: V445 = ADD 0x20 0x20
0x686: V446 = 0x0
0x688: V447 = SHA3 0x0 0x40
0x689: V448 = 0x0
0x68c: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a1: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x6a2: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x6b9: M[0x0] = V452
0x6ba: V453 = 0x20
0x6bc: V454 = ADD 0x20 0x0
0x6bf: M[0x20] = V447
0x6c0: V455 = 0x20
0x6c2: V456 = ADD 0x20 0x20
0x6c3: V457 = 0x0
0x6c5: V458 = SHA3 0x0 0x40
0x6c8: S[V458] = V109
0x6cb: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x6e1: V461 = CALLER
0x6e2: V462 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x6f8: V464 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x71a: V465 = 0x40
0x71c: V466 = M[0x40]
0x720: M[V466] = V109
0x721: V467 = 0x20
0x723: V468 = ADD 0x20 V466
0x727: V469 = 0x40
0x729: V470 = M[0x40]
0x72c: V471 = SUB V468 V470
0x72e: LOG V470 V471 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V463 V460
0x72f: V472 = 0x1
---
Entry stack: [V10, 0x197, V106, V109, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x197, V106, V109, 0x1]

================================

Block 0x733
[0x733:0x738]
---
Predecessors: [0x640, 0x648]
Successors: [0x197]
---
0x733 JUMPDEST
0x734 SWAP3
0x735 SWAP2
0x736 POP
0x737 POP
0x738 JUMP
---
0x733: JUMPDEST 
0x738: JUMP 0x197
---
Entry stack: [V10, 0x197, V106, V109, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x739
[0x739:0x73e]
---
Predecessors: [0x1bc]
Successors: [0x1c4]
---
0x739 JUMPDEST
0x73a PUSH1 0x3
0x73c SLOAD
0x73d DUP2
0x73e JUMP
---
0x739: JUMPDEST 
0x73a: V473 = 0x3
0x73c: V474 = S[0x3]
0x73e: JUMP 0x1c4
---
Entry stack: [V10, 0x1c4]
Stack pops: 1
Stack additions: [S0, V474]
Exit stack: [V10, 0x1c4, V474]

================================

Block 0x73f
[0x73f:0x75b]
---
Predecessors: [0x1e5]
Successors: [0x75c, 0x75d]
---
0x73f JUMPDEST
0x740 PUSH1 0x0
0x742 DUP1
0x743 PUSH1 0x0
0x745 DUP1
0x746 PUSH1 0x0
0x748 DUP1
0x749 PUSH1 0x40
0x74b PUSH1 0x4
0x74d DUP2
0x74e ADD
0x74f PUSH1 0x0
0x751 CALLDATASIZE
0x752 SWAP1
0x753 POP
0x754 LT
0x755 ISZERO
0x756 ISZERO
0x757 ISZERO
0x758 PUSH2 0x75d
0x75b JUMPI
---
0x73f: JUMPDEST 
0x740: V475 = 0x0
0x743: V476 = 0x0
0x746: V477 = 0x0
0x749: V478 = 0x40
0x74b: V479 = 0x4
0x74e: V480 = ADD 0x40 0x4
0x74f: V481 = 0x0
0x751: V482 = CALLDATASIZE
0x754: V483 = LT V482 0x44
0x755: V484 = ISZERO V483
0x756: V485 = ISZERO V484
0x757: V486 = ISZERO V485
0x758: V487 = 0x75d
0x75b: JUMPI 0x75d V486
---
Entry stack: [V10, 0x239, V145, V150, V153]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x75c
[0x75c:0x75c]
---
Predecessors: [0x73f]
Successors: []
---
0x75c INVALID
---
0x75c: INVALID 
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x75d
[0x75d:0x766]
---
Predecessors: [0x73f]
Successors: [0x767, 0x76f]
---
0x75d JUMPDEST
0x75e PUSH1 0x0
0x760 DUP9
0x761 EQ
0x762 ISZERO
0x763 PUSH2 0x76f
0x766 JUMPI
---
0x75d: JUMPDEST 
0x75e: V488 = 0x0
0x761: V489 = EQ V153 0x0
0x762: V490 = ISZERO V489
0x763: V491 = 0x76f
0x766: JUMPI 0x76f V490
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x767
[0x767:0x76e]
---
Predecessors: [0x75d]
Successors: [0xa76]
---
0x767 PUSH1 0x0
0x769 SWAP7
0x76a POP
0x76b PUSH2 0xa76
0x76e JUMP
---
0x767: V492 = 0x0
0x76b: V493 = 0xa76
0x76e: JUMP 0xa76
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x76f
[0x76f:0x8c8]
---
Predecessors: [0x75d]
Successors: [0x8c9, 0x8cb]
---
0x76f JUMPDEST
0x770 PUSH1 0x1
0x772 PUSH1 0x0
0x774 DUP12
0x775 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78a AND
0x78b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a0 AND
0x7a1 DUP2
0x7a2 MSTORE
0x7a3 PUSH1 0x20
0x7a5 ADD
0x7a6 SWAP1
0x7a7 DUP2
0x7a8 MSTORE
0x7a9 PUSH1 0x20
0x7ab ADD
0x7ac PUSH1 0x0
0x7ae SHA3
0x7af SLOAD
0x7b0 SWAP6
0x7b1 POP
0x7b2 PUSH1 0x2
0x7b4 PUSH1 0x0
0x7b6 DUP12
0x7b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cc AND
0x7cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e2 AND
0x7e3 DUP2
0x7e4 MSTORE
0x7e5 PUSH1 0x20
0x7e7 ADD
0x7e8 SWAP1
0x7e9 DUP2
0x7ea MSTORE
0x7eb PUSH1 0x20
0x7ed ADD
0x7ee PUSH1 0x0
0x7f0 SHA3
0x7f1 PUSH1 0x0
0x7f3 CALLER
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 AND
0x80a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81f AND
0x820 DUP2
0x821 MSTORE
0x822 PUSH1 0x20
0x824 ADD
0x825 SWAP1
0x826 DUP2
0x827 MSTORE
0x828 PUSH1 0x20
0x82a ADD
0x82b PUSH1 0x0
0x82d SHA3
0x82e SLOAD
0x82f SWAP5
0x830 POP
0x831 DUP8
0x832 DUP7
0x833 GT
0x834 ISZERO
0x835 SWAP4
0x836 POP
0x837 DUP8
0x838 DUP6
0x839 GT
0x83a ISZERO
0x83b SWAP3
0x83c POP
0x83d PUSH1 0x1
0x83f PUSH1 0x0
0x841 DUP11
0x842 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x857 AND
0x858 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86d AND
0x86e DUP2
0x86f MSTORE
0x870 PUSH1 0x20
0x872 ADD
0x873 SWAP1
0x874 DUP2
0x875 MSTORE
0x876 PUSH1 0x20
0x878 ADD
0x879 PUSH1 0x0
0x87b SHA3
0x87c SLOAD
0x87d DUP9
0x87e PUSH1 0x1
0x880 PUSH1 0x0
0x882 DUP13
0x883 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x898 AND
0x899 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ae AND
0x8af DUP2
0x8b0 MSTORE
0x8b1 PUSH1 0x20
0x8b3 ADD
0x8b4 SWAP1
0x8b5 DUP2
0x8b6 MSTORE
0x8b7 PUSH1 0x20
0x8b9 ADD
0x8ba PUSH1 0x0
0x8bc SHA3
0x8bd SLOAD
0x8be ADD
0x8bf GT
0x8c0 SWAP2
0x8c1 POP
0x8c2 DUP4
0x8c3 DUP1
0x8c4 ISZERO
0x8c5 PUSH2 0x8cb
0x8c8 JUMPI
---
0x76f: JUMPDEST 
0x770: V494 = 0x1
0x772: V495 = 0x0
0x775: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x78b: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a0: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x7a2: M[0x0] = V499
0x7a3: V500 = 0x20
0x7a5: V501 = ADD 0x20 0x0
0x7a8: M[0x20] = 0x1
0x7a9: V502 = 0x20
0x7ab: V503 = ADD 0x20 0x20
0x7ac: V504 = 0x0
0x7ae: V505 = SHA3 0x0 0x40
0x7af: V506 = S[V505]
0x7b2: V507 = 0x2
0x7b4: V508 = 0x0
0x7b7: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x7cd: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e2: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x7e4: M[0x0] = V512
0x7e5: V513 = 0x20
0x7e7: V514 = ADD 0x20 0x0
0x7ea: M[0x20] = 0x2
0x7eb: V515 = 0x20
0x7ed: V516 = ADD 0x20 0x20
0x7ee: V517 = 0x0
0x7f0: V518 = SHA3 0x0 0x40
0x7f1: V519 = 0x0
0x7f3: V520 = CALLER
0x7f4: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x80a: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x81f: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x821: M[0x0] = V524
0x822: V525 = 0x20
0x824: V526 = ADD 0x20 0x0
0x827: M[0x20] = V518
0x828: V527 = 0x20
0x82a: V528 = ADD 0x20 0x20
0x82b: V529 = 0x0
0x82d: V530 = SHA3 0x0 0x40
0x82e: V531 = S[V530]
0x833: V532 = GT V506 V153
0x834: V533 = ISZERO V532
0x839: V534 = GT V531 V153
0x83a: V535 = ISZERO V534
0x83d: V536 = 0x1
0x83f: V537 = 0x0
0x842: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x857: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x858: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x86d: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x86f: M[0x0] = V541
0x870: V542 = 0x20
0x872: V543 = ADD 0x20 0x0
0x875: M[0x20] = 0x1
0x876: V544 = 0x20
0x878: V545 = ADD 0x20 0x20
0x879: V546 = 0x0
0x87b: V547 = SHA3 0x0 0x40
0x87c: V548 = S[V547]
0x87e: V549 = 0x1
0x880: V550 = 0x0
0x883: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x898: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x899: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ae: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x8b0: M[0x0] = V554
0x8b1: V555 = 0x20
0x8b3: V556 = ADD 0x20 0x0
0x8b6: M[0x20] = 0x1
0x8b7: V557 = 0x20
0x8b9: V558 = ADD 0x20 0x20
0x8ba: V559 = 0x0
0x8bc: V560 = SHA3 0x0 0x40
0x8bd: V561 = S[V560]
0x8be: V562 = ADD V561 V153
0x8bf: V563 = GT V562 V548
0x8c4: V564 = ISZERO V533
0x8c5: V565 = 0x8cb
0x8c8: JUMPI 0x8cb V564
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V506, V531, V533, V535, V563, S0, V533]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, V533]

================================

Block 0x8c9
[0x8c9:0x8ca]
---
Predecessors: [0x76f]
Successors: [0x8cb]
---
0x8c9 POP
0x8ca DUP3
---
0x8c9: NOP 
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, V533]
Stack pops: 4
Stack additions: [S3, S2, S1, S3]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, V535]

================================

Block 0x8cb
[0x8cb:0x8d1]
---
Predecessors: [0x76f, 0x8c9]
Successors: [0x8d2, 0x8d5]
---
0x8cb JUMPDEST
0x8cc DUP1
0x8cd ISZERO
0x8ce PUSH2 0x8d5
0x8d1 JUMPI
---
0x8cb: JUMPDEST 
0x8cd: V566 = ISZERO S0
0x8ce: V567 = 0x8d5
0x8d1: JUMPI 0x8d5 V566
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, S0]

================================

Block 0x8d2
[0x8d2:0x8d4]
---
Predecessors: [0x8cb]
Successors: [0x8d5]
---
0x8d2 POP
0x8d3 DUP2
0x8d4 ISZERO
---
0x8d4: V568 = ISZERO V563
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, S0]
Stack pops: 3
Stack additions: [S2, S1, V568]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, V568]

================================

Block 0x8d5
[0x8d5:0x8da]
---
Predecessors: [0x8cb, 0x8d2]
Successors: [0x8db, 0xa6c]
---
0x8d5 JUMPDEST
0x8d6 ISZERO
0x8d7 PUSH2 0xa6c
0x8da JUMPI
---
0x8d5: JUMPDEST 
0x8d6: V569 = ISZERO S0
0x8d7: V570 = 0xa6c
0x8da: JUMPI 0xa6c V569
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40]

================================

Block 0x8db
[0x8db:0xa6b]
---
Predecessors: [0x8d5]
Successors: [0xa76]
---
0x8db DUP8
0x8dc PUSH1 0x1
0x8de PUSH1 0x0
0x8e0 DUP12
0x8e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f6 AND
0x8f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90c AND
0x90d DUP2
0x90e MSTORE
0x90f PUSH1 0x20
0x911 ADD
0x912 SWAP1
0x913 DUP2
0x914 MSTORE
0x915 PUSH1 0x20
0x917 ADD
0x918 PUSH1 0x0
0x91a SHA3
0x91b PUSH1 0x0
0x91d DUP3
0x91e DUP3
0x91f SLOAD
0x920 ADD
0x921 SWAP3
0x922 POP
0x923 POP
0x924 DUP2
0x925 SWAP1
0x926 SSTORE
0x927 POP
0x928 DUP8
0x929 PUSH1 0x1
0x92b PUSH1 0x0
0x92d DUP13
0x92e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x943 AND
0x944 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x959 AND
0x95a DUP2
0x95b MSTORE
0x95c PUSH1 0x20
0x95e ADD
0x95f SWAP1
0x960 DUP2
0x961 MSTORE
0x962 PUSH1 0x20
0x964 ADD
0x965 PUSH1 0x0
0x967 SHA3
0x968 PUSH1 0x0
0x96a DUP3
0x96b DUP3
0x96c SLOAD
0x96d SUB
0x96e SWAP3
0x96f POP
0x970 POP
0x971 DUP2
0x972 SWAP1
0x973 SSTORE
0x974 POP
0x975 DUP8
0x976 PUSH1 0x2
0x978 PUSH1 0x0
0x97a DUP13
0x97b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x990 AND
0x991 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a6 AND
0x9a7 DUP2
0x9a8 MSTORE
0x9a9 PUSH1 0x20
0x9ab ADD
0x9ac SWAP1
0x9ad DUP2
0x9ae MSTORE
0x9af PUSH1 0x20
0x9b1 ADD
0x9b2 PUSH1 0x0
0x9b4 SHA3
0x9b5 PUSH1 0x0
0x9b7 CALLER
0x9b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9cd AND
0x9ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e3 AND
0x9e4 DUP2
0x9e5 MSTORE
0x9e6 PUSH1 0x20
0x9e8 ADD
0x9e9 SWAP1
0x9ea DUP2
0x9eb MSTORE
0x9ec PUSH1 0x20
0x9ee ADD
0x9ef PUSH1 0x0
0x9f1 SHA3
0x9f2 PUSH1 0x0
0x9f4 DUP3
0x9f5 DUP3
0x9f6 SLOAD
0x9f7 SUB
0x9f8 SWAP3
0x9f9 POP
0x9fa POP
0x9fb DUP2
0x9fc SWAP1
0x9fd SSTORE
0x9fe POP
0x9ff DUP9
0xa00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa15 AND
0xa16 DUP11
0xa17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2c AND
0xa2d PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa4e DUP11
0xa4f PUSH1 0x40
0xa51 MLOAD
0xa52 DUP1
0xa53 DUP3
0xa54 DUP2
0xa55 MSTORE
0xa56 PUSH1 0x20
0xa58 ADD
0xa59 SWAP2
0xa5a POP
0xa5b POP
0xa5c PUSH1 0x40
0xa5e MLOAD
0xa5f DUP1
0xa60 SWAP2
0xa61 SUB
0xa62 SWAP1
0xa63 LOG3
0xa64 PUSH1 0x1
0xa66 SWAP7
0xa67 POP
0xa68 PUSH2 0xa76
0xa6b JUMP
---
0x8dc: V571 = 0x1
0x8de: V572 = 0x0
0x8e1: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f6: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x8f7: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0x90c: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x90e: M[0x0] = V576
0x90f: V577 = 0x20
0x911: V578 = ADD 0x20 0x0
0x914: M[0x20] = 0x1
0x915: V579 = 0x20
0x917: V580 = ADD 0x20 0x20
0x918: V581 = 0x0
0x91a: V582 = SHA3 0x0 0x40
0x91b: V583 = 0x0
0x91f: V584 = S[V582]
0x920: V585 = ADD V584 V153
0x926: S[V582] = V585
0x929: V586 = 0x1
0x92b: V587 = 0x0
0x92e: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x943: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x944: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x959: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x95b: M[0x0] = V591
0x95c: V592 = 0x20
0x95e: V593 = ADD 0x20 0x0
0x961: M[0x20] = 0x1
0x962: V594 = 0x20
0x964: V595 = ADD 0x20 0x20
0x965: V596 = 0x0
0x967: V597 = SHA3 0x0 0x40
0x968: V598 = 0x0
0x96c: V599 = S[V597]
0x96d: V600 = SUB V599 V153
0x973: S[V597] = V600
0x976: V601 = 0x2
0x978: V602 = 0x0
0x97b: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0x990: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x991: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a6: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x9a8: M[0x0] = V606
0x9a9: V607 = 0x20
0x9ab: V608 = ADD 0x20 0x0
0x9ae: M[0x20] = 0x2
0x9af: V609 = 0x20
0x9b1: V610 = ADD 0x20 0x20
0x9b2: V611 = 0x0
0x9b4: V612 = SHA3 0x0 0x40
0x9b5: V613 = 0x0
0x9b7: V614 = CALLER
0x9b8: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0x9cd: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x9ce: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e3: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x9e5: M[0x0] = V618
0x9e6: V619 = 0x20
0x9e8: V620 = ADD 0x20 0x0
0x9eb: M[0x20] = V612
0x9ec: V621 = 0x20
0x9ee: V622 = ADD 0x20 0x20
0x9ef: V623 = 0x0
0x9f1: V624 = SHA3 0x0 0x40
0x9f2: V625 = 0x0
0x9f6: V626 = S[V624]
0x9f7: V627 = SUB V626 V153
0x9fd: S[V624] = V627
0xa00: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xa15: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0xa17: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2c: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0xa2d: V632 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa4f: V633 = 0x40
0xa51: V634 = M[0x40]
0xa55: M[V634] = V153
0xa56: V635 = 0x20
0xa58: V636 = ADD 0x20 V634
0xa5c: V637 = 0x40
0xa5e: V638 = M[0x40]
0xa61: V639 = SUB V636 V638
0xa63: LOG V638 V639 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V631 V629
0xa64: V640 = 0x1
0xa68: V641 = 0xa76
0xa6b: JUMP 0xa76
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40]
Stack pops: 10
Stack additions: [S9, S8, S7, 0x1, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x239, V145, V150, V153, 0x1, V506, V531, V533, V535, V563, 0x40]

================================

Block 0xa6c
[0xa6c:0xa74]
---
Predecessors: [0x8d5]
Successors: [0xa76]
---
0xa6c JUMPDEST
0xa6d PUSH1 0x0
0xa6f SWAP7
0xa70 POP
0xa71 PUSH2 0xa76
0xa74 JUMP
---
0xa6c: JUMPDEST 
0xa6d: V642 = 0x0
0xa71: V643 = 0xa76
0xa74: JUMP 0xa76
---
Entry stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x239, V145, V150, V153, 0x0, V506, V531, V533, V535, V563, 0x40]

================================

Block 0xa75
[0xa75:0xa75]
---
Predecessors: []
Successors: [0xa76]
---
0xa75 JUMPDEST
---
0xa75: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa76
[0xa76:0xa76]
---
Predecessors: [0x767, 0x8db, 0xa6c, 0xa75]
Successors: [0xa77]
---
0xa76 JUMPDEST
---
0xa76: JUMPDEST 
---
Entry stack: [V10, 0x239, V145, V150, V153, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x239, V145, V150, V153, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]

================================

Block 0xa77
[0xa77:0xa83]
---
Predecessors: [0xa76]
Successors: [0x239]
---
0xa77 JUMPDEST
0xa78 POP
0xa79 POP
0xa7a POP
0xa7b POP
0xa7c POP
0xa7d POP
0xa7e SWAP4
0xa7f SWAP3
0xa80 POP
0xa81 POP
0xa82 POP
0xa83 JUMP
---
0xa77: JUMPDEST 
0xa83: JUMP 0x239
---
Entry stack: [V10, 0x239, V145, V150, V153, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]
Stack pops: 11
Stack additions: [S6]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xa84
[0xa84:0xa8a]
---
Predecessors: [0x25e]
Successors: [0xa8b]
---
0xa84 JUMPDEST
0xa85 PUSH1 0x0
0xa87 PUSH1 0x8
0xa89 SWAP1
0xa8a POP
---
0xa84: JUMPDEST 
0xa85: V644 = 0x0
0xa87: V645 = 0x8
---
Entry stack: [V10, 0x266]
Stack pops: 0
Stack additions: [0x8]
Exit stack: [V10, 0x266, 0x8]

================================

Block 0xa8b
[0xa8b:0xa8d]
---
Predecessors: [0xa84]
Successors: [0x266]
---
0xa8b JUMPDEST
0xa8c SWAP1
0xa8d JUMP
---
0xa8b: JUMPDEST 
0xa8d: JUMP 0x266
---
Entry stack: [V10, 0x266, 0x8]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x8]

================================

Block 0xa8e
[0xa8e:0xaaa]
---
Predecessors: [0x28d, 0xb2d]
Successors: [0xaab]
---
0xa8e JUMPDEST
0xa8f PUSH1 0x0
0xa91 DUP2
0xa92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa7 AND
0xaa8 BALANCE
0xaa9 SWAP1
0xaaa POP
---
0xa8e: JUMPDEST 
0xa8f: V646 = 0x0
0xa92: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa7: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xaa8: V649 = BALANCE V648
---
Entry stack: [V10, 0x339, V222, V230, V233, S3, S2, {0x2b9, 0xb3c}, S0]
Stack pops: 1
Stack additions: [S0, V649]
Exit stack: [V10, 0x339, V222, V230, V233, S3, S2, {0x2b9, 0xb3c}, S0, V649]

================================

Block 0xaab
[0xaab:0xaaf]
---
Predecessors: [0xa8e]
Successors: [0x2b9, 0xb3c]
---
0xaab JUMPDEST
0xaac SWAP2
0xaad SWAP1
0xaae POP
0xaaf JUMP
---
0xaab: JUMPDEST 
0xaaf: JUMP {0x2b9, 0xb3c}
---
Entry stack: [V10, 0x339, V222, V230, V233, S4, S3, {0x2b9, 0xb3c}, S1, V649]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x339, V222, V230, V233, S4, S3, V649]

================================

Block 0xab0
[0xab0:0xb08]
---
Predecessors: [0x2da]
Successors: [0xb09, 0xb0d]
---
0xab0 JUMPDEST
0xab1 PUSH1 0x0
0xab3 DUP1
0xab4 PUSH1 0x0
0xab6 SWAP1
0xab7 SLOAD
0xab8 SWAP1
0xab9 PUSH2 0x100
0xabc EXP
0xabd SWAP1
0xabe DIV
0xabf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad4 AND
0xad5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaea AND
0xaeb CALLER
0xaec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb01 AND
0xb02 EQ
0xb03 ISZERO
0xb04 ISZERO
0xb05 PUSH2 0xb0d
0xb08 JUMPI
---
0xab0: JUMPDEST 
0xab1: V650 = 0x0
0xab4: V651 = 0x0
0xab7: V652 = S[0x0]
0xab9: V653 = 0x100
0xabc: V654 = EXP 0x100 0x0
0xabe: V655 = DIV V652 0x1
0xabf: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xad4: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0xad5: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0xaea: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0xaeb: V660 = CALLER
0xaec: V661 = 0xffffffffffffffffffffffffffffffffffffffff
0xb01: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0xb02: V663 = EQ V662 V659
0xb03: V664 = ISZERO V663
0xb04: V665 = ISZERO V664
0xb05: V666 = 0xb0d
0xb08: JUMPI 0xb0d V665
---
Entry stack: [V10, 0x339, V222, V230, V233]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x339, V222, V230, V233, 0x0]

================================

Block 0xb09
[0xb09:0xb0c]
---
Predecessors: [0xab0]
Successors: []
---
0xb09 PUSH1 0x0
0xb0b DUP1
0xb0c REVERT
---
0xb09: V667 = 0x0
0xb0c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x339, V222, V230, V233, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, 0x0]

================================

Block 0xb0d
[0xb0d:0xb11]
---
Predecessors: [0xab0]
Successors: [0xb12]
---
0xb0d JUMPDEST
0xb0e PUSH1 0x0
0xb10 SWAP1
0xb11 POP
---
0xb0d: JUMPDEST 
0xb0e: V668 = 0x0
---
Entry stack: [V10, 0x339, V222, V230, V233, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x339, V222, V230, V233, 0x0]

================================

Block 0xb12
[0xb12:0xb1b]
---
Predecessors: [0xb0d, 0xcb7]
Successors: [0xb1c, 0xcc4]
---
0xb12 JUMPDEST
0xb13 DUP4
0xb14 MLOAD
0xb15 DUP2
0xb16 LT
0xb17 ISZERO
0xb18 PUSH2 0xcc4
0xb1b JUMPI
---
0xb12: JUMPDEST 
0xb14: V669 = M[V222]
0xb16: V670 = LT S0 V669
0xb17: V671 = ISZERO V670
0xb18: V672 = 0xcc4
0xb1b: JUMPI 0xcc4 V671
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x339, V222, V230, V233, S0]

================================

Block 0xb1c
[0xb1c:0xb2b]
---
Predecessors: [0xb12]
Successors: [0xb2c, 0xb2d]
---
0xb1c DUP2
0xb1d PUSH2 0xb3c
0xb20 DUP6
0xb21 DUP4
0xb22 DUP2
0xb23 MLOAD
0xb24 DUP2
0xb25 LT
0xb26 ISZERO
0xb27 ISZERO
0xb28 PUSH2 0xb2d
0xb2b JUMPI
---
0xb1d: V673 = 0xb3c
0xb23: V674 = M[V222]
0xb25: V675 = LT S0 V674
0xb26: V676 = ISZERO V675
0xb27: V677 = ISZERO V676
0xb28: V678 = 0xb2d
0xb2b: JUMPI 0xb2d V677
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, 0xb3c, S3, S0]
Exit stack: [V10, 0x339, V222, V230, V233, S0, V233, 0xb3c, V222, S0]

================================

Block 0xb2c
[0xb2c:0xb2c]
---
Predecessors: [0xb1c]
Successors: []
---
0xb2c INVALID
---
0xb2c: INVALID 
---
Entry stack: [V10, 0x339, V222, V230, V233, S4, V233, 0xb3c, V222, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S4, V233, 0xb3c, V222, S0]

================================

Block 0xb2d
[0xb2d:0xb3b]
---
Predecessors: [0xb1c]
Successors: [0xa8e]
---
0xb2d JUMPDEST
0xb2e SWAP1
0xb2f PUSH1 0x20
0xb31 ADD
0xb32 SWAP1
0xb33 PUSH1 0x20
0xb35 MUL
0xb36 ADD
0xb37 MLOAD
0xb38 PUSH2 0xa8e
0xb3b JUMP
---
0xb2d: JUMPDEST 
0xb2f: V679 = 0x20
0xb31: V680 = ADD 0x20 V222
0xb33: V681 = 0x20
0xb35: V682 = MUL 0x20 S0
0xb36: V683 = ADD V682 V680
0xb37: V684 = M[V683]
0xb38: V685 = 0xa8e
0xb3b: JUMP 0xa8e
---
Entry stack: [V10, 0x339, V222, V230, V233, S4, V233, 0xb3c, V222, S0]
Stack pops: 2
Stack additions: [V684]
Exit stack: [V10, 0x339, V222, V230, V233, S4, V233, 0xb3c, V684]

================================

Block 0xb3c
[0xb3c:0xb42]
---
Predecessors: [0xaab]
Successors: [0xb43, 0xb47]
---
0xb3c JUMPDEST
0xb3d LT
0xb3e ISZERO
0xb3f PUSH2 0xb47
0xb42 JUMPI
---
0xb3c: JUMPDEST 
0xb3d: V686 = LT S0 S1
0xb3e: V687 = ISZERO V686
0xb3f: V688 = 0xb47
0xb42: JUMPI 0xb47 V687
---
Entry stack: [V10, 0x339, V222, V230, V233, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S2]

================================

Block 0xb43
[0xb43:0xb46]
---
Predecessors: [0xb3c]
Successors: [0xcb7]
---
0xb43 PUSH2 0xcb7
0xb46 JUMP
---
0xb43: V689 = 0xcb7
0xb46: JUMP 0xcb7
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S0]

================================

Block 0xb47
[0xb47:0xbc6]
---
Predecessors: [0xb3c]
Successors: [0xbc7, 0xbc8]
---
0xb47 JUMPDEST
0xb48 DUP3
0xb49 PUSH1 0x1
0xb4b PUSH1 0x0
0xb4d DUP1
0xb4e PUSH1 0x0
0xb50 SWAP1
0xb51 SLOAD
0xb52 SWAP1
0xb53 PUSH2 0x100
0xb56 EXP
0xb57 SWAP1
0xb58 DIV
0xb59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6e AND
0xb6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb84 AND
0xb85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9a AND
0xb9b DUP2
0xb9c MSTORE
0xb9d PUSH1 0x20
0xb9f ADD
0xba0 SWAP1
0xba1 DUP2
0xba2 MSTORE
0xba3 PUSH1 0x20
0xba5 ADD
0xba6 PUSH1 0x0
0xba8 SHA3
0xba9 PUSH1 0x0
0xbab DUP3
0xbac DUP3
0xbad SLOAD
0xbae SUB
0xbaf SWAP3
0xbb0 POP
0xbb1 POP
0xbb2 DUP2
0xbb3 SWAP1
0xbb4 SSTORE
0xbb5 POP
0xbb6 DUP3
0xbb7 PUSH1 0x1
0xbb9 PUSH1 0x0
0xbbb DUP7
0xbbc DUP5
0xbbd DUP2
0xbbe MLOAD
0xbbf DUP2
0xbc0 LT
0xbc1 ISZERO
0xbc2 ISZERO
0xbc3 PUSH2 0xbc8
0xbc6 JUMPI
---
0xb47: JUMPDEST 
0xb49: V690 = 0x1
0xb4b: V691 = 0x0
0xb4e: V692 = 0x0
0xb51: V693 = S[0x0]
0xb53: V694 = 0x100
0xb56: V695 = EXP 0x100 0x0
0xb58: V696 = DIV V693 0x1
0xb59: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6e: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xb6f: V699 = 0xffffffffffffffffffffffffffffffffffffffff
0xb84: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0xb85: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9a: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0xb9c: M[0x0] = V702
0xb9d: V703 = 0x20
0xb9f: V704 = ADD 0x20 0x0
0xba2: M[0x20] = 0x1
0xba3: V705 = 0x20
0xba5: V706 = ADD 0x20 0x20
0xba6: V707 = 0x0
0xba8: V708 = SHA3 0x0 0x40
0xba9: V709 = 0x0
0xbad: V710 = S[V708]
0xbae: V711 = SUB V710 V230
0xbb4: S[V708] = V711
0xbb7: V712 = 0x1
0xbb9: V713 = 0x0
0xbbe: V714 = M[V222]
0xbc0: V715 = LT S0 V714
0xbc1: V716 = ISZERO V715
0xbc2: V717 = ISZERO V716
0xbc3: V718 = 0xbc8
0xbc6: JUMPI 0xbc8 V717
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, 0x1, 0x0, S3, S0]
Exit stack: [V10, 0x339, V222, V230, V233, S0, V230, 0x1, 0x0, V222, S0]

================================

Block 0xbc7
[0xbc7:0xbc7]
---
Predecessors: [0xb47]
Successors: []
---
0xbc7 INVALID
---
0xbc7: INVALID 
---
Entry stack: [V10, 0x339, V222, V230, V233, S5, V230, 0x1, 0x0, V222, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S5, V230, 0x1, 0x0, V222, S0]

================================

Block 0xbc8
[0xbc8:0xc25]
---
Predecessors: [0xb47]
Successors: [0xc26, 0xc27]
---
0xbc8 JUMPDEST
0xbc9 SWAP1
0xbca PUSH1 0x20
0xbcc ADD
0xbcd SWAP1
0xbce PUSH1 0x20
0xbd0 MUL
0xbd1 ADD
0xbd2 MLOAD
0xbd3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe8 AND
0xbe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfe AND
0xbff DUP2
0xc00 MSTORE
0xc01 PUSH1 0x20
0xc03 ADD
0xc04 SWAP1
0xc05 DUP2
0xc06 MSTORE
0xc07 PUSH1 0x20
0xc09 ADD
0xc0a PUSH1 0x0
0xc0c SHA3
0xc0d PUSH1 0x0
0xc0f DUP3
0xc10 DUP3
0xc11 SLOAD
0xc12 ADD
0xc13 SWAP3
0xc14 POP
0xc15 POP
0xc16 DUP2
0xc17 SWAP1
0xc18 SSTORE
0xc19 POP
0xc1a DUP4
0xc1b DUP2
0xc1c DUP2
0xc1d MLOAD
0xc1e DUP2
0xc1f LT
0xc20 ISZERO
0xc21 ISZERO
0xc22 PUSH2 0xc27
0xc25 JUMPI
---
0xbc8: JUMPDEST 
0xbca: V719 = 0x20
0xbcc: V720 = ADD 0x20 V222
0xbce: V721 = 0x20
0xbd0: V722 = MUL 0x20 S0
0xbd1: V723 = ADD V722 V720
0xbd2: V724 = M[V723]
0xbd3: V725 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe8: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0xbe9: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfe: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0xc00: M[0x0] = V728
0xc01: V729 = 0x20
0xc03: V730 = ADD 0x20 0x0
0xc06: M[0x20] = 0x1
0xc07: V731 = 0x20
0xc09: V732 = ADD 0x20 0x20
0xc0a: V733 = 0x0
0xc0c: V734 = SHA3 0x0 0x40
0xc0d: V735 = 0x0
0xc11: V736 = S[V734]
0xc12: V737 = ADD V736 V230
0xc18: S[V734] = V737
0xc1d: V738 = M[V222]
0xc1f: V739 = LT S5 V738
0xc20: V740 = ISZERO V739
0xc21: V741 = ISZERO V740
0xc22: V742 = 0xc27
0xc25: JUMPI 0xc27 V741
---
Entry stack: [V10, 0x339, V222, V230, V233, S5, V230, 0x1, 0x0, V222, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S8, S5]
Exit stack: [V10, 0x339, V222, V230, V233, S5, V222, S5]

================================

Block 0xc26
[0xc26:0xc26]
---
Predecessors: [0xbc8]
Successors: []
---
0xc26 INVALID
---
0xc26: INVALID 
---
Entry stack: [V10, 0x339, V222, V230, V233, S2, V222, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S2, V222, S0]

================================

Block 0xc27
[0xc27:0xcb6]
---
Predecessors: [0xbc8]
Successors: [0xcb7]
---
0xc27 JUMPDEST
0xc28 SWAP1
0xc29 PUSH1 0x20
0xc2b ADD
0xc2c SWAP1
0xc2d PUSH1 0x20
0xc2f MUL
0xc30 ADD
0xc31 MLOAD
0xc32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc47 AND
0xc48 PUSH1 0x0
0xc4a DUP1
0xc4b SWAP1
0xc4c SLOAD
0xc4d SWAP1
0xc4e PUSH2 0x100
0xc51 EXP
0xc52 SWAP1
0xc53 DIV
0xc54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc69 AND
0xc6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7f AND
0xc80 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xca1 DUP6
0xca2 PUSH1 0x40
0xca4 MLOAD
0xca5 DUP1
0xca6 DUP3
0xca7 DUP2
0xca8 MSTORE
0xca9 PUSH1 0x20
0xcab ADD
0xcac SWAP2
0xcad POP
0xcae POP
0xcaf PUSH1 0x40
0xcb1 MLOAD
0xcb2 DUP1
0xcb3 SWAP2
0xcb4 SUB
0xcb5 SWAP1
0xcb6 LOG3
---
0xc27: JUMPDEST 
0xc29: V743 = 0x20
0xc2b: V744 = ADD 0x20 V222
0xc2d: V745 = 0x20
0xc2f: V746 = MUL 0x20 S0
0xc30: V747 = ADD V746 V744
0xc31: V748 = M[V747]
0xc32: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xc47: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0xc48: V751 = 0x0
0xc4c: V752 = S[0x0]
0xc4e: V753 = 0x100
0xc51: V754 = EXP 0x100 0x0
0xc53: V755 = DIV V752 0x1
0xc54: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xc69: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0xc6a: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7f: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xc80: V760 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xca2: V761 = 0x40
0xca4: V762 = M[0x40]
0xca8: M[V762] = V230
0xca9: V763 = 0x20
0xcab: V764 = ADD 0x20 V762
0xcaf: V765 = 0x40
0xcb1: V766 = M[0x40]
0xcb4: V767 = SUB V764 V766
0xcb6: LOG V766 V767 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V759 V750
---
Entry stack: [V10, 0x339, V222, V230, V233, S2, V222, S0]
Stack pops: 5
Stack additions: [S4, S3, S2]
Exit stack: [V10, 0x339, V222, V230, V233, S2]

================================

Block 0xcb7
[0xcb7:0xcc3]
---
Predecessors: [0xb43, 0xc27]
Successors: [0xb12]
---
0xcb7 JUMPDEST
0xcb8 DUP1
0xcb9 DUP1
0xcba PUSH1 0x1
0xcbc ADD
0xcbd SWAP2
0xcbe POP
0xcbf POP
0xcc0 PUSH2 0xb12
0xcc3 JUMP
---
0xcb7: JUMPDEST 
0xcba: V768 = 0x1
0xcbc: V769 = ADD 0x1 S0
0xcc0: V770 = 0xb12
0xcc3: JUMP 0xb12
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 1
Stack additions: [V769]
Exit stack: [V10, 0x339, V222, V230, V233, V769]

================================

Block 0xcc4
[0xcc4:0xcc4]
---
Predecessors: [0xb12]
Successors: [0xcc5]
---
0xcc4 JUMPDEST
---
0xcc4: JUMPDEST 
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S0]

================================

Block 0xcc5
[0xcc5:0xcc5]
---
Predecessors: [0xcc4]
Successors: [0xcc6]
---
0xcc5 JUMPDEST
---
0xcc5: JUMPDEST 
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x339, V222, V230, V233, S0]

================================

Block 0xcc6
[0xcc6:0xccb]
---
Predecessors: [0xcc5]
Successors: [0x339]
---
0xcc6 JUMPDEST
0xcc7 POP
0xcc8 POP
0xcc9 POP
0xcca POP
0xccb JUMP
---
0xcc6: JUMPDEST 
0xccb: JUMP 0x339
---
Entry stack: [V10, 0x339, V222, V230, V233, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0xccc
[0xccc:0xd10]
---
Predecessors: [0x346]
Successors: [0xd11]
---
0xccc JUMPDEST
0xccd PUSH1 0x0
0xccf PUSH1 0x1
0xcd1 PUSH1 0x0
0xcd3 DUP4
0xcd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce9 AND
0xcea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcff AND
0xd00 DUP2
0xd01 MSTORE
0xd02 PUSH1 0x20
0xd04 ADD
0xd05 SWAP1
0xd06 DUP2
0xd07 MSTORE
0xd08 PUSH1 0x20
0xd0a ADD
0xd0b PUSH1 0x0
0xd0d SHA3
0xd0e SLOAD
0xd0f SWAP1
0xd10 POP
---
0xccc: JUMPDEST 
0xccd: V771 = 0x0
0xccf: V772 = 0x1
0xcd1: V773 = 0x0
0xcd4: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0xce9: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0xcea: V776 = 0xffffffffffffffffffffffffffffffffffffffff
0xcff: V777 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0xd01: M[0x0] = V777
0xd02: V778 = 0x20
0xd04: V779 = ADD 0x20 0x0
0xd07: M[0x20] = 0x1
0xd08: V780 = 0x20
0xd0a: V781 = ADD 0x20 0x20
0xd0b: V782 = 0x0
0xd0d: V783 = SHA3 0x0 0x40
0xd0e: V784 = S[V783]
---
Entry stack: [V10, 0x372, V245]
Stack pops: 1
Stack additions: [S0, V784]
Exit stack: [V10, 0x372, V245, V784]

================================

Block 0xd11
[0xd11:0xd15]
---
Predecessors: [0xccc]
Successors: [0x372]
---
0xd11 JUMPDEST
0xd12 SWAP2
0xd13 SWAP1
0xd14 POP
0xd15 JUMP
---
0xd11: JUMPDEST 
0xd15: JUMP 0x372
---
Entry stack: [V10, 0x372, V245, V784]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V784]

================================

Block 0xd16
[0xd16:0xd1d]
---
Predecessors: [0x393]
Successors: [0x12bd]
---
0xd16 JUMPDEST
0xd17 PUSH2 0xd1e
0xd1a PUSH2 0x12bd
0xd1d JUMP
---
0xd16: JUMPDEST 
0xd17: V785 = 0xd1e
0xd1a: V786 = 0x12bd
0xd1d: JUMP 0x12bd
---
Entry stack: [V10, 0x39b]
Stack pops: 0
Stack additions: [0xd1e]
Exit stack: [V10, 0x39b, 0xd1e]

================================

Block 0xd1e
[0xd1e:0xd56]
---
Predecessors: [0x12bd]
Successors: [0xd57]
---
0xd1e JUMPDEST
0xd1f PUSH1 0x40
0xd21 DUP1
0xd22 MLOAD
0xd23 SWAP1
0xd24 DUP2
0xd25 ADD
0xd26 PUSH1 0x40
0xd28 MSTORE
0xd29 DUP1
0xd2a PUSH1 0x3
0xd2c DUP2
0xd2d MSTORE
0xd2e PUSH1 0x20
0xd30 ADD
0xd31 PUSH32 0x4655440000000000000000000000000000000000000000000000000000000000
0xd52 DUP2
0xd53 MSTORE
0xd54 POP
0xd55 SWAP1
0xd56 POP
---
0xd1e: JUMPDEST 
0xd1f: V787 = 0x40
0xd22: V788 = M[0x40]
0xd25: V789 = ADD V788 0x40
0xd26: V790 = 0x40
0xd28: M[0x40] = V789
0xd2a: V791 = 0x3
0xd2d: M[V788] = 0x3
0xd2e: V792 = 0x20
0xd30: V793 = ADD 0x20 V788
0xd31: V794 = 0x4655440000000000000000000000000000000000000000000000000000000000
0xd53: M[V793] = 0x4655440000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V10, {0xdb, 0x39b}, V1081]
Stack pops: 1
Stack additions: [V788]
Exit stack: [V10, {0xdb, 0x39b}, V788]

================================

Block 0xd57
[0xd57:0xd59]
---
Predecessors: [0xd1e]
Successors: [0xdb, 0x39b]
---
0xd57 JUMPDEST
0xd58 SWAP1
0xd59 JUMP
---
0xd57: JUMPDEST 
0xd59: JUMP {0xdb, 0x39b}
---
Entry stack: [V10, {0xdb, 0x39b}, V788]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V788]

================================

Block 0xd5a
[0xd5a:0xd73]
---
Predecessors: [0x422]
Successors: [0xd74, 0xd75]
---
0xd5a JUMPDEST
0xd5b PUSH1 0x0
0xd5d DUP1
0xd5e PUSH1 0x0
0xd60 DUP1
0xd61 PUSH1 0x40
0xd63 PUSH1 0x4
0xd65 DUP2
0xd66 ADD
0xd67 PUSH1 0x0
0xd69 CALLDATASIZE
0xd6a SWAP1
0xd6b POP
0xd6c LT
0xd6d ISZERO
0xd6e ISZERO
0xd6f ISZERO
0xd70 PUSH2 0xd75
0xd73 JUMPI
---
0xd5a: JUMPDEST 
0xd5b: V795 = 0x0
0xd5e: V796 = 0x0
0xd61: V797 = 0x40
0xd63: V798 = 0x4
0xd66: V799 = ADD 0x40 0x4
0xd67: V800 = 0x0
0xd69: V801 = CALLDATASIZE
0xd6c: V802 = LT V801 0x44
0xd6d: V803 = ISZERO V802
0xd6e: V804 = ISZERO V803
0xd6f: V805 = ISZERO V804
0xd70: V806 = 0xd75
0xd73: JUMPI 0xd75 V805
---
Entry stack: [V10, 0x457, V311, V314]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x40]
Exit stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0xd74
[0xd74:0xd74]
---
Predecessors: [0xd5a]
Successors: []
---
0xd74 INVALID
---
0xd74: INVALID 
---
Entry stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0xd75
[0xd75:0xd7e]
---
Predecessors: [0xd5a]
Successors: [0xd7f, 0xd87]
---
0xd75 JUMPDEST
0xd76 PUSH1 0x0
0xd78 DUP7
0xd79 EQ
0xd7a ISZERO
0xd7b PUSH2 0xd87
0xd7e JUMPI
---
0xd75: JUMPDEST 
0xd76: V807 = 0x0
0xd79: V808 = EQ V314 0x0
0xd7a: V809 = ISZERO V808
0xd7b: V810 = 0xd87
0xd7e: JUMPI 0xd87 V809
---
Entry stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0xd7f
[0xd7f:0xd86]
---
Predecessors: [0xd75]
Successors: [0xf76]
---
0xd7f PUSH1 0x0
0xd81 SWAP5
0xd82 POP
0xd83 PUSH2 0xf76
0xd86 JUMP
---
0xd7f: V811 = 0x0
0xd83: V812 = 0xf76
0xd86: JUMP 0xf76
---
Entry stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0]
Exit stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0xd87
[0xd87:0xe5b]
---
Predecessors: [0xd75]
Successors: [0xe5c, 0xe5f]
---
0xd87 JUMPDEST
0xd88 PUSH1 0x1
0xd8a PUSH1 0x0
0xd8c CALLER
0xd8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda2 AND
0xda3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb8 AND
0xdb9 DUP2
0xdba MSTORE
0xdbb PUSH1 0x20
0xdbd ADD
0xdbe SWAP1
0xdbf DUP2
0xdc0 MSTORE
0xdc1 PUSH1 0x20
0xdc3 ADD
0xdc4 PUSH1 0x0
0xdc6 SHA3
0xdc7 SLOAD
0xdc8 SWAP4
0xdc9 POP
0xdca DUP6
0xdcb DUP5
0xdcc LT
0xdcd ISZERO
0xdce SWAP3
0xdcf POP
0xdd0 PUSH1 0x1
0xdd2 PUSH1 0x0
0xdd4 DUP9
0xdd5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdea AND
0xdeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe00 AND
0xe01 DUP2
0xe02 MSTORE
0xe03 PUSH1 0x20
0xe05 ADD
0xe06 SWAP1
0xe07 DUP2
0xe08 MSTORE
0xe09 PUSH1 0x20
0xe0b ADD
0xe0c PUSH1 0x0
0xe0e SHA3
0xe0f SLOAD
0xe10 DUP7
0xe11 PUSH1 0x1
0xe13 PUSH1 0x0
0xe15 DUP11
0xe16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2b AND
0xe2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe41 AND
0xe42 DUP2
0xe43 MSTORE
0xe44 PUSH1 0x20
0xe46 ADD
0xe47 SWAP1
0xe48 DUP2
0xe49 MSTORE
0xe4a PUSH1 0x20
0xe4c ADD
0xe4d PUSH1 0x0
0xe4f SHA3
0xe50 SLOAD
0xe51 ADD
0xe52 LT
0xe53 SWAP2
0xe54 POP
0xe55 DUP3
0xe56 DUP1
0xe57 ISZERO
0xe58 PUSH2 0xe5f
0xe5b JUMPI
---
0xd87: JUMPDEST 
0xd88: V813 = 0x1
0xd8a: V814 = 0x0
0xd8c: V815 = CALLER
0xd8d: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0xda2: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V815
0xda3: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb8: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0xdba: M[0x0] = V819
0xdbb: V820 = 0x20
0xdbd: V821 = ADD 0x20 0x0
0xdc0: M[0x20] = 0x1
0xdc1: V822 = 0x20
0xdc3: V823 = ADD 0x20 0x20
0xdc4: V824 = 0x0
0xdc6: V825 = SHA3 0x0 0x40
0xdc7: V826 = S[V825]
0xdcc: V827 = LT V826 V314
0xdcd: V828 = ISZERO V827
0xdd0: V829 = 0x1
0xdd2: V830 = 0x0
0xdd5: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xdea: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0xdeb: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xe00: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xe02: M[0x0] = V834
0xe03: V835 = 0x20
0xe05: V836 = ADD 0x20 0x0
0xe08: M[0x20] = 0x1
0xe09: V837 = 0x20
0xe0b: V838 = ADD 0x20 0x20
0xe0c: V839 = 0x0
0xe0e: V840 = SHA3 0x0 0x40
0xe0f: V841 = S[V840]
0xe11: V842 = 0x1
0xe13: V843 = 0x0
0xe16: V844 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2b: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0xe2c: V846 = 0xffffffffffffffffffffffffffffffffffffffff
0xe41: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0xe43: M[0x0] = V847
0xe44: V848 = 0x20
0xe46: V849 = ADD 0x20 0x0
0xe49: M[0x20] = 0x1
0xe4a: V850 = 0x20
0xe4c: V851 = ADD 0x20 0x20
0xe4d: V852 = 0x0
0xe4f: V853 = SHA3 0x0 0x40
0xe50: V854 = S[V853]
0xe51: V855 = ADD V854 V314
0xe52: V856 = LT V855 V841
0xe57: V857 = ISZERO V828
0xe58: V858 = 0xe5f
0xe5b: JUMPI 0xe5f V857
---
Entry stack: [V10, 0x457, V311, V314, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 7
Stack additions: [S6, S5, S4, V826, V828, V856, S0, V828]
Exit stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40, V828]

================================

Block 0xe5c
[0xe5c:0xe5e]
---
Predecessors: [0xd87]
Successors: [0xe5f]
---
0xe5c POP
0xe5d DUP2
0xe5e ISZERO
---
0xe5e: V859 = ISZERO V856
---
Entry stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40, V828]
Stack pops: 3
Stack additions: [S2, S1, V859]
Exit stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40, V859]

================================

Block 0xe5f
[0xe5f:0xe64]
---
Predecessors: [0xd87, 0xe5c]
Successors: [0xe65, 0xf6c]
---
0xe5f JUMPDEST
0xe60 ISZERO
0xe61 PUSH2 0xf6c
0xe64 JUMPI
---
0xe5f: JUMPDEST 
0xe60: V860 = ISZERO S0
0xe61: V861 = 0xf6c
0xe64: JUMPI 0xf6c V860
---
Entry stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40]

================================

Block 0xe65
[0xe65:0xf6b]
---
Predecessors: [0xe5f]
Successors: [0xf76]
---
0xe65 DUP6
0xe66 PUSH1 0x1
0xe68 PUSH1 0x0
0xe6a CALLER
0xe6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe80 AND
0xe81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe96 AND
0xe97 DUP2
0xe98 MSTORE
0xe99 PUSH1 0x20
0xe9b ADD
0xe9c SWAP1
0xe9d DUP2
0xe9e MSTORE
0xe9f PUSH1 0x20
0xea1 ADD
0xea2 PUSH1 0x0
0xea4 SHA3
0xea5 PUSH1 0x0
0xea7 DUP3
0xea8 DUP3
0xea9 SLOAD
0xeaa SUB
0xeab SWAP3
0xeac POP
0xead POP
0xeae DUP2
0xeaf SWAP1
0xeb0 SSTORE
0xeb1 POP
0xeb2 DUP6
0xeb3 PUSH1 0x1
0xeb5 PUSH1 0x0
0xeb7 DUP10
0xeb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xecd AND
0xece PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee3 AND
0xee4 DUP2
0xee5 MSTORE
0xee6 PUSH1 0x20
0xee8 ADD
0xee9 SWAP1
0xeea DUP2
0xeeb MSTORE
0xeec PUSH1 0x20
0xeee ADD
0xeef PUSH1 0x0
0xef1 SHA3
0xef2 PUSH1 0x0
0xef4 DUP3
0xef5 DUP3
0xef6 SLOAD
0xef7 ADD
0xef8 SWAP3
0xef9 POP
0xefa POP
0xefb DUP2
0xefc SWAP1
0xefd SSTORE
0xefe POP
0xeff DUP7
0xf00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf15 AND
0xf16 CALLER
0xf17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2c AND
0xf2d PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf4e DUP9
0xf4f PUSH1 0x40
0xf51 MLOAD
0xf52 DUP1
0xf53 DUP3
0xf54 DUP2
0xf55 MSTORE
0xf56 PUSH1 0x20
0xf58 ADD
0xf59 SWAP2
0xf5a POP
0xf5b POP
0xf5c PUSH1 0x40
0xf5e MLOAD
0xf5f DUP1
0xf60 SWAP2
0xf61 SUB
0xf62 SWAP1
0xf63 LOG3
0xf64 PUSH1 0x1
0xf66 SWAP5
0xf67 POP
0xf68 PUSH2 0xf76
0xf6b JUMP
---
0xe66: V862 = 0x1
0xe68: V863 = 0x0
0xe6a: V864 = CALLER
0xe6b: V865 = 0xffffffffffffffffffffffffffffffffffffffff
0xe80: V866 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0xe81: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0xe96: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0xe98: M[0x0] = V868
0xe99: V869 = 0x20
0xe9b: V870 = ADD 0x20 0x0
0xe9e: M[0x20] = 0x1
0xe9f: V871 = 0x20
0xea1: V872 = ADD 0x20 0x20
0xea2: V873 = 0x0
0xea4: V874 = SHA3 0x0 0x40
0xea5: V875 = 0x0
0xea9: V876 = S[V874]
0xeaa: V877 = SUB V876 V314
0xeb0: S[V874] = V877
0xeb3: V878 = 0x1
0xeb5: V879 = 0x0
0xeb8: V880 = 0xffffffffffffffffffffffffffffffffffffffff
0xecd: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0xece: V882 = 0xffffffffffffffffffffffffffffffffffffffff
0xee3: V883 = AND 0xffffffffffffffffffffffffffffffffffffffff V881
0xee5: M[0x0] = V883
0xee6: V884 = 0x20
0xee8: V885 = ADD 0x20 0x0
0xeeb: M[0x20] = 0x1
0xeec: V886 = 0x20
0xeee: V887 = ADD 0x20 0x20
0xeef: V888 = 0x0
0xef1: V889 = SHA3 0x0 0x40
0xef2: V890 = 0x0
0xef6: V891 = S[V889]
0xef7: V892 = ADD V891 V314
0xefd: S[V889] = V892
0xf00: V893 = 0xffffffffffffffffffffffffffffffffffffffff
0xf15: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0xf16: V895 = CALLER
0xf17: V896 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2c: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0xf2d: V898 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf4f: V899 = 0x40
0xf51: V900 = M[0x40]
0xf55: M[V900] = V314
0xf56: V901 = 0x20
0xf58: V902 = ADD 0x20 V900
0xf5c: V903 = 0x40
0xf5e: V904 = M[0x40]
0xf61: V905 = SUB V902 V904
0xf63: LOG V904 V905 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V897 V894
0xf64: V906 = 0x1
0xf68: V907 = 0xf76
0xf6b: JUMP 0xf76
---
Entry stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40]
Stack pops: 7
Stack additions: [S6, S5, 0x1, S3, S2, S1, S0]
Exit stack: [V10, 0x457, V311, V314, 0x1, V826, V828, V856, 0x40]

================================

Block 0xf6c
[0xf6c:0xf74]
---
Predecessors: [0xe5f]
Successors: [0xf76]
---
0xf6c JUMPDEST
0xf6d PUSH1 0x0
0xf6f SWAP5
0xf70 POP
0xf71 PUSH2 0xf76
0xf74 JUMP
---
0xf6c: JUMPDEST 
0xf6d: V908 = 0x0
0xf71: V909 = 0xf76
0xf74: JUMP 0xf76
---
Entry stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0]
Exit stack: [V10, 0x457, V311, V314, 0x0, V826, V828, V856, 0x40]

================================

Block 0xf75
[0xf75:0xf75]
---
Predecessors: []
Successors: [0xf76]
---
0xf75 JUMPDEST
---
0xf75: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf76
[0xf76:0xf76]
---
Predecessors: [0xd7f, 0xe65, 0xf6c, 0xf75]
Successors: [0xf77]
---
0xf76 JUMPDEST
---
0xf76: JUMPDEST 
---
Entry stack: [V10, 0x457, V311, V314, {0x0, 0x1}, S3, S2, S1, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x457, V311, V314, {0x0, 0x1}, S3, S2, S1, 0x40]

================================

Block 0xf77
[0xf77:0xf80]
---
Predecessors: [0xf76]
Successors: [0x457]
---
0xf77 JUMPDEST
0xf78 POP
0xf79 POP
0xf7a POP
0xf7b POP
0xf7c SWAP3
0xf7d SWAP2
0xf7e POP
0xf7f POP
0xf80 JUMP
---
0xf77: JUMPDEST 
0xf80: JUMP 0x457
---
Entry stack: [V10, 0x457, V311, V314, {0x0, 0x1}, S3, S2, S1, 0x40]
Stack pops: 8
Stack additions: [S4]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xf81
[0xf81:0x1002]
---
Predecessors: [0x47c]
Successors: [0x1003]
---
0xf81 JUMPDEST
0xf82 PUSH1 0x0
0xf84 PUSH1 0x2
0xf86 PUSH1 0x0
0xf88 DUP5
0xf89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9e AND
0xf9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb4 AND
0xfb5 DUP2
0xfb6 MSTORE
0xfb7 PUSH1 0x20
0xfb9 ADD
0xfba SWAP1
0xfbb DUP2
0xfbc MSTORE
0xfbd PUSH1 0x20
0xfbf ADD
0xfc0 PUSH1 0x0
0xfc2 SHA3
0xfc3 PUSH1 0x0
0xfc5 DUP4
0xfc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfdb AND
0xfdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff1 AND
0xff2 DUP2
0xff3 MSTORE
0xff4 PUSH1 0x20
0xff6 ADD
0xff7 SWAP1
0xff8 DUP2
0xff9 MSTORE
0xffa PUSH1 0x20
0xffc ADD
0xffd PUSH1 0x0
0xfff SHA3
0x1000 SLOAD
0x1001 SWAP1
0x1002 POP
---
0xf81: JUMPDEST 
0xf82: V910 = 0x0
0xf84: V911 = 0x2
0xf86: V912 = 0x0
0xf89: V913 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9e: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0xf9f: V915 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb4: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0xfb6: M[0x0] = V916
0xfb7: V917 = 0x20
0xfb9: V918 = ADD 0x20 0x0
0xfbc: M[0x20] = 0x2
0xfbd: V919 = 0x20
0xfbf: V920 = ADD 0x20 0x20
0xfc0: V921 = 0x0
0xfc2: V922 = SHA3 0x0 0x40
0xfc3: V923 = 0x0
0xfc6: V924 = 0xffffffffffffffffffffffffffffffffffffffff
0xfdb: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0xfdc: V926 = 0xffffffffffffffffffffffffffffffffffffffff
0xff1: V927 = AND 0xffffffffffffffffffffffffffffffffffffffff V925
0xff3: M[0x0] = V927
0xff4: V928 = 0x20
0xff6: V929 = ADD 0x20 0x0
0xff9: M[0x20] = V922
0xffa: V930 = 0x20
0xffc: V931 = ADD 0x20 0x20
0xffd: V932 = 0x0
0xfff: V933 = SHA3 0x0 0x40
0x1000: V934 = S[V933]
---
Entry stack: [V10, 0x4c7, V337, V342]
Stack pops: 2
Stack additions: [S1, S0, V934]
Exit stack: [V10, 0x4c7, V337, V342, V934]

================================

Block 0x1003
[0x1003:0x1008]
---
Predecessors: [0xf81]
Successors: [0x4c7]
---
0x1003 JUMPDEST
0x1004 SWAP3
0x1005 SWAP2
0x1006 POP
0x1007 POP
0x1008 JUMP
---
0x1003: JUMPDEST 
0x1008: JUMP 0x4c7
---
Entry stack: [V10, 0x4c7, V337, V342, V934]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V934]

================================

Block 0x1009
[0x1009:0x1064]
---
Predecessors: [0x4e8]
Successors: [0x1065, 0x1069]
---
0x1009 JUMPDEST
0x100a PUSH1 0x0
0x100c DUP1
0x100d PUSH1 0x0
0x100f DUP1
0x1010 PUSH1 0x0
0x1012 SWAP1
0x1013 SLOAD
0x1014 SWAP1
0x1015 PUSH2 0x100
0x1018 EXP
0x1019 SWAP1
0x101a DIV
0x101b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1030 AND
0x1031 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1046 AND
0x1047 CALLER
0x1048 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105d AND
0x105e EQ
0x105f ISZERO
0x1060 ISZERO
0x1061 PUSH2 0x1069
0x1064 JUMPI
---
0x1009: JUMPDEST 
0x100a: V935 = 0x0
0x100d: V936 = 0x0
0x1010: V937 = 0x0
0x1013: V938 = S[0x0]
0x1015: V939 = 0x100
0x1018: V940 = EXP 0x100 0x0
0x101a: V941 = DIV V938 0x1
0x101b: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0x1030: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0x1031: V944 = 0xffffffffffffffffffffffffffffffffffffffff
0x1046: V945 = AND 0xffffffffffffffffffffffffffffffffffffffff V943
0x1047: V946 = CALLER
0x1048: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0x105d: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0x105e: V949 = EQ V948 V945
0x105f: V950 = ISZERO V949
0x1060: V951 = ISZERO V950
0x1061: V952 = 0x1069
0x1064: JUMPI 0x1069 V951
---
Entry stack: [V10, 0x514, V361]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x514, V361, 0x0, 0x0, 0x0]

================================

Block 0x1065
[0x1065:0x1068]
---
Predecessors: [0x1009]
Successors: []
---
0x1065 PUSH1 0x0
0x1067 DUP1
0x1068 REVERT
---
0x1065: V953 = 0x0
0x1068: REVERT 0x0 0x0
---
Entry stack: [V10, 0x514, V361, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x514, V361, 0x0, 0x0, 0x0]

================================

Block 0x1069
[0x1069:0x110a]
---
Predecessors: [0x1009]
Successors: [0x110b, 0x110f]
---
0x1069 JUMPDEST
0x106a DUP4
0x106b SWAP2
0x106c POP
0x106d DUP2
0x106e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1083 AND
0x1084 PUSH4 0x70a08231
0x1089 ADDRESS
0x108a PUSH1 0x0
0x108c PUSH1 0x40
0x108e MLOAD
0x108f PUSH1 0x20
0x1091 ADD
0x1092 MSTORE
0x1093 PUSH1 0x40
0x1095 MLOAD
0x1096 DUP3
0x1097 PUSH4 0xffffffff
0x109c AND
0x109d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10bb MUL
0x10bc DUP2
0x10bd MSTORE
0x10be PUSH1 0x4
0x10c0 ADD
0x10c1 DUP1
0x10c2 DUP3
0x10c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d8 AND
0x10d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ee AND
0x10ef DUP2
0x10f0 MSTORE
0x10f1 PUSH1 0x20
0x10f3 ADD
0x10f4 SWAP2
0x10f5 POP
0x10f6 POP
0x10f7 PUSH1 0x20
0x10f9 PUSH1 0x40
0x10fb MLOAD
0x10fc DUP1
0x10fd DUP4
0x10fe SUB
0x10ff DUP2
0x1100 PUSH1 0x0
0x1102 DUP8
0x1103 DUP1
0x1104 EXTCODESIZE
0x1105 ISZERO
0x1106 ISZERO
0x1107 PUSH2 0x110f
0x110a JUMPI
---
0x1069: JUMPDEST 
0x106e: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0x1083: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x1084: V956 = 0x70a08231
0x1089: V957 = ADDRESS
0x108a: V958 = 0x0
0x108c: V959 = 0x40
0x108e: V960 = M[0x40]
0x108f: V961 = 0x20
0x1091: V962 = ADD 0x20 V960
0x1092: M[V962] = 0x0
0x1093: V963 = 0x40
0x1095: V964 = M[0x40]
0x1097: V965 = 0xffffffff
0x109c: V966 = AND 0xffffffff 0x70a08231
0x109d: V967 = 0x100000000000000000000000000000000000000000000000000000000
0x10bb: V968 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x10bd: M[V964] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x10be: V969 = 0x4
0x10c0: V970 = ADD 0x4 V964
0x10c3: V971 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d8: V972 = AND 0xffffffffffffffffffffffffffffffffffffffff V957
0x10d9: V973 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ee: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V972
0x10f0: M[V970] = V974
0x10f1: V975 = 0x20
0x10f3: V976 = ADD 0x20 V970
0x10f7: V977 = 0x20
0x10f9: V978 = 0x40
0x10fb: V979 = M[0x40]
0x10fe: V980 = SUB V976 V979
0x1100: V981 = 0x0
0x1104: V982 = EXTCODESIZE V955
0x1105: V983 = ISZERO V982
0x1106: V984 = ISZERO V983
0x1107: V985 = 0x110f
0x110a: JUMPI 0x110f V984
---
Entry stack: [V10, 0x514, V361, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V955, 0x70a08231, V976, 0x20, V979, V980, V979, 0x0, V955]
Exit stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976, 0x20, V979, V980, V979, 0x0, V955]

================================

Block 0x110b
[0x110b:0x110e]
---
Predecessors: [0x1069]
Successors: []
---
0x110b PUSH1 0x0
0x110d DUP1
0x110e REVERT
---
0x110b: V986 = 0x0
0x110e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976, 0x20, V979, V980, V979, 0x0, V955]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976, 0x20, V979, V980, V979, 0x0, V955]

================================

Block 0x110f
[0x110f:0x111b]
---
Predecessors: [0x1069]
Successors: [0x111c, 0x1120]
---
0x110f JUMPDEST
0x1110 PUSH2 0x2c6
0x1113 GAS
0x1114 SUB
0x1115 CALL
0x1116 ISZERO
0x1117 ISZERO
0x1118 PUSH2 0x1120
0x111b JUMPI
---
0x110f: JUMPDEST 
0x1110: V987 = 0x2c6
0x1113: V988 = GAS
0x1114: V989 = SUB V988 0x2c6
0x1115: V990 = CALL V989 V955 0x0 V979 V980 V979 0x20
0x1116: V991 = ISZERO V990
0x1117: V992 = ISZERO V991
0x1118: V993 = 0x1120
0x111b: JUMPI 0x1120 V992
---
Entry stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976, 0x20, V979, V980, V979, 0x0, V955]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976]

================================

Block 0x111c
[0x111c:0x111f]
---
Predecessors: [0x110f]
Successors: []
---
0x111c PUSH1 0x0
0x111e DUP1
0x111f REVERT
---
0x111c: V994 = 0x0
0x111f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976]

================================

Block 0x1120
[0x1120:0x11f3]
---
Predecessors: [0x110f]
Successors: [0x11f4, 0x11f8]
---
0x1120 JUMPDEST
0x1121 POP
0x1122 POP
0x1123 POP
0x1124 PUSH1 0x40
0x1126 MLOAD
0x1127 DUP1
0x1128 MLOAD
0x1129 SWAP1
0x112a POP
0x112b SWAP1
0x112c POP
0x112d DUP2
0x112e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1143 AND
0x1144 PUSH4 0xa9059cbb
0x1149 PUSH1 0x0
0x114b DUP1
0x114c SWAP1
0x114d SLOAD
0x114e SWAP1
0x114f PUSH2 0x100
0x1152 EXP
0x1153 SWAP1
0x1154 DIV
0x1155 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116a AND
0x116b DUP4
0x116c PUSH1 0x0
0x116e PUSH1 0x40
0x1170 MLOAD
0x1171 PUSH1 0x20
0x1173 ADD
0x1174 MSTORE
0x1175 PUSH1 0x40
0x1177 MLOAD
0x1178 DUP4
0x1179 PUSH4 0xffffffff
0x117e AND
0x117f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x119d MUL
0x119e DUP2
0x119f MSTORE
0x11a0 PUSH1 0x4
0x11a2 ADD
0x11a3 DUP1
0x11a4 DUP4
0x11a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ba AND
0x11bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d0 AND
0x11d1 DUP2
0x11d2 MSTORE
0x11d3 PUSH1 0x20
0x11d5 ADD
0x11d6 DUP3
0x11d7 DUP2
0x11d8 MSTORE
0x11d9 PUSH1 0x20
0x11db ADD
0x11dc SWAP3
0x11dd POP
0x11de POP
0x11df POP
0x11e0 PUSH1 0x20
0x11e2 PUSH1 0x40
0x11e4 MLOAD
0x11e5 DUP1
0x11e6 DUP4
0x11e7 SUB
0x11e8 DUP2
0x11e9 PUSH1 0x0
0x11eb DUP8
0x11ec DUP1
0x11ed EXTCODESIZE
0x11ee ISZERO
0x11ef ISZERO
0x11f0 PUSH2 0x11f8
0x11f3 JUMPI
---
0x1120: JUMPDEST 
0x1124: V995 = 0x40
0x1126: V996 = M[0x40]
0x1128: V997 = M[V996]
0x112e: V998 = 0xffffffffffffffffffffffffffffffffffffffff
0x1143: V999 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x1144: V1000 = 0xa9059cbb
0x1149: V1001 = 0x0
0x114d: V1002 = S[0x0]
0x114f: V1003 = 0x100
0x1152: V1004 = EXP 0x100 0x0
0x1154: V1005 = DIV V1002 0x1
0x1155: V1006 = 0xffffffffffffffffffffffffffffffffffffffff
0x116a: V1007 = AND 0xffffffffffffffffffffffffffffffffffffffff V1005
0x116c: V1008 = 0x0
0x116e: V1009 = 0x40
0x1170: V1010 = M[0x40]
0x1171: V1011 = 0x20
0x1173: V1012 = ADD 0x20 V1010
0x1174: M[V1012] = 0x0
0x1175: V1013 = 0x40
0x1177: V1014 = M[0x40]
0x1179: V1015 = 0xffffffff
0x117e: V1016 = AND 0xffffffff 0xa9059cbb
0x117f: V1017 = 0x100000000000000000000000000000000000000000000000000000000
0x119d: V1018 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x119f: M[V1014] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x11a0: V1019 = 0x4
0x11a2: V1020 = ADD 0x4 V1014
0x11a5: V1021 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ba: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffff V1007
0x11bb: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d0: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1022
0x11d2: M[V1020] = V1024
0x11d3: V1025 = 0x20
0x11d5: V1026 = ADD 0x20 V1020
0x11d8: M[V1026] = V997
0x11d9: V1027 = 0x20
0x11db: V1028 = ADD 0x20 V1026
0x11e0: V1029 = 0x20
0x11e2: V1030 = 0x40
0x11e4: V1031 = M[0x40]
0x11e7: V1032 = SUB V1028 V1031
0x11e9: V1033 = 0x0
0x11ed: V1034 = EXTCODESIZE V999
0x11ee: V1035 = ISZERO V1034
0x11ef: V1036 = ISZERO V1035
0x11f0: V1037 = 0x11f8
0x11f3: JUMPI 0x11f8 V1036
---
Entry stack: [V10, 0x514, V361, 0x0, V361, 0x0, V955, 0x70a08231, V976]
Stack pops: 5
Stack additions: [S4, V997, V999, 0xa9059cbb, V1028, 0x20, V1031, V1032, V1031, 0x0, V999]
Exit stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028, 0x20, V1031, V1032, V1031, 0x0, V999]

================================

Block 0x11f4
[0x11f4:0x11f7]
---
Predecessors: [0x1120]
Successors: []
---
0x11f4 PUSH1 0x0
0x11f6 DUP1
0x11f7 REVERT
---
0x11f4: V1038 = 0x0
0x11f7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028, 0x20, V1031, V1032, V1031, 0x0, V999]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028, 0x20, V1031, V1032, V1031, 0x0, V999]

================================

Block 0x11f8
[0x11f8:0x1204]
---
Predecessors: [0x1120]
Successors: [0x1205, 0x1209]
---
0x11f8 JUMPDEST
0x11f9 PUSH2 0x2c6
0x11fc GAS
0x11fd SUB
0x11fe CALL
0x11ff ISZERO
0x1200 ISZERO
0x1201 PUSH2 0x1209
0x1204 JUMPI
---
0x11f8: JUMPDEST 
0x11f9: V1039 = 0x2c6
0x11fc: V1040 = GAS
0x11fd: V1041 = SUB V1040 0x2c6
0x11fe: V1042 = CALL V1041 V999 0x0 V1031 V1032 V1031 0x20
0x11ff: V1043 = ISZERO V1042
0x1200: V1044 = ISZERO V1043
0x1201: V1045 = 0x1209
0x1204: JUMPI 0x1209 V1044
---
Entry stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028, 0x20, V1031, V1032, V1031, 0x0, V999]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028]

================================

Block 0x1205
[0x1205:0x1208]
---
Predecessors: [0x11f8]
Successors: []
---
0x1205 PUSH1 0x0
0x1207 DUP1
0x1208 REVERT
---
0x1205: V1046 = 0x0
0x1208: REVERT 0x0 0x0
---
Entry stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028]

================================

Block 0x1209
[0x1209:0x1215]
---
Predecessors: [0x11f8]
Successors: [0x1216]
---
0x1209 JUMPDEST
0x120a POP
0x120b POP
0x120c POP
0x120d PUSH1 0x40
0x120f MLOAD
0x1210 DUP1
0x1211 MLOAD
0x1212 SWAP1
0x1213 POP
0x1214 SWAP3
0x1215 POP
---
0x1209: JUMPDEST 
0x120d: V1047 = 0x40
0x120f: V1048 = M[0x40]
0x1211: V1049 = M[V1048]
---
Entry stack: [V10, 0x514, V361, 0x0, V361, V997, V999, 0xa9059cbb, V1028]
Stack pops: 6
Stack additions: [V1049, S4, S3]
Exit stack: [V10, 0x514, V361, V1049, V361, V997]

================================

Block 0x1216
[0x1216:0x121c]
---
Predecessors: [0x1209]
Successors: [0x514]
---
0x1216 JUMPDEST
0x1217 POP
0x1218 POP
0x1219 SWAP2
0x121a SWAP1
0x121b POP
0x121c JUMP
---
0x1216: JUMPDEST 
0x121c: JUMP 0x514
---
Entry stack: [V10, 0x514, V361, V1049, V361, V997]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V1049]

================================

Block 0x121d
[0x121d:0x1273]
---
Predecessors: [0x539]
Successors: [0x1274, 0x1278]
---
0x121d JUMPDEST
0x121e PUSH1 0x0
0x1220 DUP1
0x1221 SWAP1
0x1222 SLOAD
0x1223 SWAP1
0x1224 PUSH2 0x100
0x1227 EXP
0x1228 SWAP1
0x1229 DIV
0x122a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123f AND
0x1240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1255 AND
0x1256 CALLER
0x1257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126c AND
0x126d EQ
0x126e ISZERO
0x126f ISZERO
0x1270 PUSH2 0x1278
0x1273 JUMPI
---
0x121d: JUMPDEST 
0x121e: V1050 = 0x0
0x1222: V1051 = S[0x0]
0x1224: V1052 = 0x100
0x1227: V1053 = EXP 0x100 0x0
0x1229: V1054 = DIV V1051 0x1
0x122a: V1055 = 0xffffffffffffffffffffffffffffffffffffffff
0x123f: V1056 = AND 0xffffffffffffffffffffffffffffffffffffffff V1054
0x1240: V1057 = 0xffffffffffffffffffffffffffffffffffffffff
0x1255: V1058 = AND 0xffffffffffffffffffffffffffffffffffffffff V1056
0x1256: V1059 = CALLER
0x1257: V1060 = 0xffffffffffffffffffffffffffffffffffffffff
0x126c: V1061 = AND 0xffffffffffffffffffffffffffffffffffffffff V1059
0x126d: V1062 = EQ V1061 V1058
0x126e: V1063 = ISZERO V1062
0x126f: V1064 = ISZERO V1063
0x1270: V1065 = 0x1278
0x1273: JUMPI 0x1278 V1064
---
Entry stack: [V10, 0x565, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x565, V384]

================================

Block 0x1274
[0x1274:0x1277]
---
Predecessors: [0x121d]
Successors: []
---
0x1274 PUSH1 0x0
0x1276 DUP1
0x1277 REVERT
---
0x1274: V1066 = 0x0
0x1277: REVERT 0x0 0x0
---
Entry stack: [V10, 0x565, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x565, V384]

================================

Block 0x1278
[0x1278:0x12b8]
---
Predecessors: [0x121d]
Successors: [0x12b9]
---
0x1278 JUMPDEST
0x1279 DUP1
0x127a PUSH1 0x0
0x127c DUP1
0x127d PUSH2 0x100
0x1280 EXP
0x1281 DUP2
0x1282 SLOAD
0x1283 DUP2
0x1284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1299 MUL
0x129a NOT
0x129b AND
0x129c SWAP1
0x129d DUP4
0x129e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b3 AND
0x12b4 MUL
0x12b5 OR
0x12b6 SWAP1
0x12b7 SSTORE
0x12b8 POP
---
0x1278: JUMPDEST 
0x127a: V1067 = 0x0
0x127d: V1068 = 0x100
0x1280: V1069 = EXP 0x100 0x0
0x1282: V1070 = S[0x0]
0x1284: V1071 = 0xffffffffffffffffffffffffffffffffffffffff
0x1299: V1072 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x129a: V1073 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x129b: V1074 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1070
0x129e: V1075 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b3: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x12b4: V1077 = MUL V1076 0x1
0x12b5: V1078 = OR V1077 V1074
0x12b7: S[0x0] = V1078
---
Entry stack: [V10, 0x565, V384]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x565, V384]

================================

Block 0x12b9
[0x12b9:0x12b9]
---
Predecessors: [0x1278]
Successors: [0x12ba]
---
0x12b9 JUMPDEST
---
0x12b9: JUMPDEST 
---
Entry stack: [V10, 0x565, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x565, V384]

================================

Block 0x12ba
[0x12ba:0x12bc]
---
Predecessors: [0x12b9]
Successors: [0x565]
---
0x12ba JUMPDEST
0x12bb POP
0x12bc JUMP
---
0x12ba: JUMPDEST 
0x12bc: JUMP 0x565
---
Entry stack: [V10, 0x565, V384]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x12bd
[0x12bd:0x12d0]
---
Predecessors: [0x567, 0xd16]
Successors: [0x56f, 0xd1e]
---
0x12bd JUMPDEST
0x12be PUSH1 0x20
0x12c0 PUSH1 0x40
0x12c2 MLOAD
0x12c3 SWAP1
0x12c4 DUP2
0x12c5 ADD
0x12c6 PUSH1 0x40
0x12c8 MSTORE
0x12c9 DUP1
0x12ca PUSH1 0x0
0x12cc DUP2
0x12cd MSTORE
0x12ce POP
0x12cf SWAP1
0x12d0 JUMP
---
0x12bd: JUMPDEST 
0x12be: V1079 = 0x20
0x12c0: V1080 = 0x40
0x12c2: V1081 = M[0x40]
0x12c5: V1082 = ADD V1081 0x20
0x12c6: V1083 = 0x40
0x12c8: M[0x40] = V1082
0x12ca: V1084 = 0x0
0x12cd: M[V1081] = 0x0
0x12d0: JUMP {0x56f, 0xd1e}
---
Entry stack: [V10, {0xdb, 0x39b}, {0x56f, 0xd1e}]
Stack pops: 1
Stack additions: [V1081]
Exit stack: [V10, {0xdb, 0x39b}, V1081]

================================

Block 0x12d1
[0x12d1:0x12fc]
---
Predecessors: []
Successors: []
---
0x12d1 STOP
0x12d2 LOG1
0x12d3 PUSH6 0x627a7a723058
0x12da SHA3
0x12db MISSING 0xbd
0x12dc PUSH27 0xf3e484abae7e2a750cff272f8d667a705ee3a8434aef64fcdfe26
0x12f8 MISSING 0xcb
0x12f9 EXTCODESIZE
0x12fa RETURNDATACOPY
0x12fb STOP
0x12fc MISSING 0x29
---
0x12d1: STOP 
0x12d2: LOG S0 S1 S2
0x12d3: V1085 = 0x627a7a723058
0x12da: V1086 = SHA3 0x627a7a723058 S3
0x12db: MISSING 0xbd
0x12dc: V1087 = 0xf3e484abae7e2a750cff272f8d667a705ee3a8434aef64fcdfe26
0x12f8: MISSING 0xcb
0x12f9: V1088 = EXTCODESIZE S0
0x12fa: RETURNDATACOPY V1088 S1 S2
0x12fb: STOP 
0x12fc: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1086, 0xf3e484abae7e2a750cff272f8d667a705ee3a8434aef64fcdfe26]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xc8
Exit block: 0x409
Body: 0xc8, 0xcf, 0xd3, 0xdb, 0x100, 0x109, 0x111, 0x11c, 0x130, 0x149, 0x39b, 0x3c0, 0x3c9, 0x3d1, 0x3dc, 0x3f0, 0x409, 0x567, 0x56f, 0x5a8

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x157
Exit block: 0x197
Body: 0x157, 0x15e, 0x162, 0x197, 0x5ab, 0x5b8, 0x63a, 0x640, 0x648, 0x733

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1b1
Exit block: 0x1c4
Body: 0x1b1, 0x1b8, 0x1bc, 0x1c4, 0x739

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1da
Exit block: 0x239
Body: 0x1da, 0x1e1, 0x1e5, 0x239, 0x73f, 0x75c, 0x75d, 0x767, 0x76f, 0x8c9, 0x8cb, 0x8d2, 0x8d5, 0x8db, 0xa6c, 0xa76, 0xa77

Function 4:
Public function signature: 0x313ce567
Entry block: 0x253
Exit block: 0x266
Body: 0x253, 0x25a, 0x25e, 0x266, 0xa84, 0xa8b

Function 5:
Public function signature: 0x4d2301cc
Entry block: 0x282
Exit block: 0x339
Body: 0x282, 0x289, 0x28d, 0x2b9, 0x339, 0xa8e, 0xaab, 0xb12, 0xb1c, 0xb2c, 0xb2d, 0xb3c, 0xb43, 0xb47, 0xbc7, 0xbc8, 0xc26, 0xc27, 0xcb7, 0xcc4, 0xcc5, 0xcc6

Function 6:
Public function signature: 0x6379ed9d
Entry block: 0x2cf
Exit block: 0xc26
Body: 0x2b9, 0x2cf, 0x2d6, 0x2da, 0x339, 0xa8e, 0xaab, 0xab0, 0xb09, 0xb0d, 0xb12, 0xb1c, 0xb2c, 0xb2d, 0xb3c, 0xb43, 0xb47, 0xbc7, 0xbc8, 0xc26, 0xc27, 0xcb7, 0xcc4, 0xcc5, 0xcc6

Function 7:
Public function signature: 0x70a08231
Entry block: 0x33b
Exit block: 0x372
Body: 0x33b, 0x342, 0x346, 0x372, 0xccc, 0xd11

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x388
Exit block: 0x409
Body: 0xdb, 0x100, 0x109, 0x111, 0x11c, 0x130, 0x149, 0x388, 0x38f, 0x393, 0x39b, 0x3c0, 0x3c9, 0x3d1, 0x3dc, 0x3f0, 0x409, 0xd16, 0xd1e, 0xd57

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x417
Exit block: 0x457
Body: 0x417, 0x41e, 0x422, 0x457, 0xd5a, 0xd74, 0xd75, 0xd7f, 0xd87, 0xe5c, 0xe5f, 0xe65, 0xf6c, 0xf76, 0xf77

Function 10:
Public function signature: 0xdd62ed3e
Entry block: 0x471
Exit block: 0x4c7
Body: 0x471, 0x478, 0x47c, 0x4c7, 0xf81, 0x1003

Function 11:
Public function signature: 0xe58fc54c
Entry block: 0x4dd
Exit block: 0x514
Body: 0x4dd, 0x4e4, 0x4e8, 0x514, 0x1009, 0x1065, 0x1069, 0x110b, 0x110f, 0x111c, 0x1120, 0x11f4, 0x11f8, 0x1205, 0x1209, 0x1216

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x52e
Exit block: 0x565
Body: 0x52e, 0x535, 0x539, 0x565, 0x121d, 0x1274, 0x1278, 0x12b9, 0x12ba

Function 13:
Public fallback function
Entry block: 0xc3
Exit block: 0xc3
Body: 0xc3

