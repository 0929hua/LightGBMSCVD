Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x3f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH1 0x3f
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3f
0xb: JUMPI 0x3f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc
[0xc:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x44]
---
0xc PUSH1 0x0
0xe CALLDATALOAD
0xf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d SWAP1
0x2e DIV
0x2f PUSH4 0xffffffff
0x34 AND
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH1 0x44
0x3e JUMPI
---
0xc: V6 = 0x0
0xe: V7 = CALLDATALOAD 0x0
0xf: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0xffffffff
0x34: V11 = AND 0xffffffff V9
0x36: V12 = 0x8da5cb5b
0x3b: V13 = EQ 0x8da5cb5b V11
0x3c: V14 = 0x44
0x3e: JUMPI 0x44 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x43]
---
Predecessors: [0x0, 0xc]
Successors: []
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 DUP1
0x43 REVERT
---
0x3f: JUMPDEST 
0x40: V15 = 0x0
0x43: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44
[0x44:0x4a]
---
Predecessors: [0xc]
Successors: [0x4b, 0x4f]
---
0x44 JUMPDEST
0x45 CALLVALUE
0x46 DUP1
0x47 ISZERO
0x48 PUSH1 0x4f
0x4a JUMPI
---
0x44: JUMPDEST 
0x45: V16 = CALLVALUE
0x47: V17 = ISZERO V16
0x48: V18 = 0x4f
0x4a: JUMPI 0x4f V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V16]
Exit stack: [V11, V16]

================================

Block 0x4b
[0x4b:0x4e]
---
Predecessors: [0x44]
Successors: []
---
0x4b PUSH1 0x0
0x4d DUP1
0x4e REVERT
---
0x4b: V19 = 0x0
0x4e: REVERT 0x0 0x0
---
Entry stack: [V11, V16]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V16]

================================

Block 0x4f
[0x4f:0x55]
---
Predecessors: [0x44]
Successors: [0x98]
---
0x4f JUMPDEST
0x50 POP
0x51 PUSH1 0x56
0x53 PUSH1 0x98
0x55 JUMP
---
0x4f: JUMPDEST 
0x51: V20 = 0x56
0x53: V21 = 0x98
0x55: JUMP 0x98
---
Entry stack: [V11, V16]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x56
[0x56:0x97]
---
Predecessors: [0x98]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x40
0x59 MLOAD
0x5a DUP1
0x5b DUP3
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 DUP2
0x89 MSTORE
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP2
0x8e POP
0x8f POP
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 RETURN
---
0x56: JUMPDEST 
0x57: V22 = 0x40
0x59: V23 = M[0x40]
0x5c: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x72: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x89: M[V23] = V27
0x8a: V28 = 0x20
0x8c: V29 = ADD 0x20 V23
0x90: V30 = 0x40
0x92: V31 = M[0x40]
0x95: V32 = SUB V29 V31
0x97: RETURN V31 V32
---
Entry stack: [V11, 0x56, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x98
[0x98:0xbc]
---
Predecessors: [0x4f, 0xbd]
Successors: [0x56]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c SWAP1
0x9d SLOAD
0x9e SWAP1
0x9f PUSH2 0x100
0xa2 EXP
0xa3 SWAP1
0xa4 DIV
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba AND
0xbb DUP2
0xbc JUMP
---
0x98: JUMPDEST 
0x99: V33 = 0x0
0x9d: V34 = S[0x0]
0x9f: V35 = 0x100
0xa2: V36 = EXP 0x100 0x0
0xa4: V37 = DIV V34 0x1
0xa5: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbc: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: [S0, V39]
Exit stack: [V11, 0x56, V39]

================================

Block 0xbd
[0xbd:0xf5]
---
Predecessors: []
Successors: [0x98, 0xf6]
---
0xbd STOP
0xbe LOG1
0xbf PUSH6 0x627a7a723058
0xc6 SHA3
0xc7 MISSING 0xa5
0xc8 SWAP3
0xc9 MISSING 0xb3
0xca EQ
0xcb NOT
0xcc MISSING 0xa9
0xcd RETURNDATACOPY
0xce MISSING 0xe2
0xcf MOD
0xd0 MISSING 0xe2
0xd1 MISSING 0xde
0xd2 PUSH20 0x98a9a79cdf14308ce53bedd0d687d788fb2c3a85
0xe7 STOP
0xe8 MISSING 0x29
0xe9 PUSH1 0x80
0xeb PUSH1 0x40
0xed MSTORE
0xee PUSH1 0x4
0xf0 CALLDATASIZE
0xf1 LT
0xf2 PUSH2 0x98
0xf5 JUMPI
---
0xbd: STOP 
0xbe: LOG S0 S1 S2
0xbf: V40 = 0x627a7a723058
0xc6: V41 = SHA3 0x627a7a723058 S3
0xc7: MISSING 0xa5
0xc9: MISSING 0xb3
0xca: V42 = EQ S0 S1
0xcb: V43 = NOT V42
0xcc: MISSING 0xa9
0xcd: RETURNDATACOPY S0 S1 S2
0xce: MISSING 0xe2
0xcf: V44 = MOD S0 S1
0xd0: MISSING 0xe2
0xd1: MISSING 0xde
0xd2: V45 = 0x98a9a79cdf14308ce53bedd0d687d788fb2c3a85
0xe7: STOP 
0xe8: MISSING 0x29
0xe9: V46 = 0x80
0xeb: V47 = 0x40
0xed: M[0x40] = 0x80
0xee: V48 = 0x4
0xf0: V49 = CALLDATASIZE
0xf1: V50 = LT V49 0x4
0xf2: V51 = 0x98
0xf5: JUMPI 0x98 V50
---
Entry stack: []
Stack pops: 0
Stack additions: [V41, S3, S1, S2, S0, V43, V44, 0x98a9a79cdf14308ce53bedd0d687d788fb2c3a85]
Exit stack: []

================================

Block 0xf6
[0xf6:0x128]
---
Predecessors: [0xbd]
Successors: [0x129]
---
0xf6 PUSH1 0x0
0xf8 CALLDATALOAD
0xf9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x117 SWAP1
0x118 DIV
0x119 PUSH4 0xffffffff
0x11e AND
0x11f DUP1
0x120 PUSH3 0x31a48e
0x124 EQ
0x125 PUSH2 0x15c
0x128 JUMPI
---
0xf6: V52 = 0x0
0xf8: V53 = CALLDATALOAD 0x0
0xf9: V54 = 0x100000000000000000000000000000000000000000000000000000000
0x118: V55 = DIV V53 0x100000000000000000000000000000000000000000000000000000000
0x119: V56 = 0xffffffff
0x11e: V57 = AND 0xffffffff V55
0x120: V58 = 0x31a48e
0x124: V59 = EQ 0x31a48e V57
0x125: V60 = 0x15c
0x128: THROWI V59
---
Entry stack: []
Stack pops: 0
Stack additions: [V57]
Exit stack: [V57]

================================

Block 0x129
[0x129:0x133]
---
Predecessors: [0xf6]
Successors: [0x134]
---
0x129 DUP1
0x12a PUSH4 0x2a11ced0
0x12f EQ
0x130 PUSH2 0x173
0x133 JUMPI
---
0x12a: V61 = 0x2a11ced0
0x12f: V62 = EQ 0x2a11ced0 V57
0x130: V63 = 0x173
0x133: THROWI V62
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x134
[0x134:0x13e]
---
Predecessors: [0x129]
Successors: [0x13f]
---
0x134 DUP1
0x135 PUSH4 0x33bbae93
0x13a EQ
0x13b PUSH2 0x1e0
0x13e JUMPI
---
0x135: V64 = 0x33bbae93
0x13a: V65 = EQ 0x33bbae93 V57
0x13b: V66 = 0x1e0
0x13e: THROWI V65
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x13f
[0x13f:0x149]
---
Predecessors: [0x134]
Successors: [0x14a]
---
0x13f DUP1
0x140 PUSH4 0x3ccfd60b
0x145 EQ
0x146 PUSH2 0x20b
0x149 JUMPI
---
0x140: V67 = 0x3ccfd60b
0x145: V68 = EQ 0x3ccfd60b V57
0x146: V69 = 0x20b
0x149: THROWI V68
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x14a
[0x14a:0x154]
---
Predecessors: [0x13f]
Successors: [0x155]
---
0x14a DUP1
0x14b PUSH4 0x4d9b3735
0x150 EQ
0x151 PUSH2 0x222
0x154 JUMPI
---
0x14b: V70 = 0x4d9b3735
0x150: V71 = EQ 0x4d9b3735 V57
0x151: V72 = 0x222
0x154: THROWI V71
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x155
[0x155:0x15f]
---
Predecessors: [0x14a]
Successors: [0x160]
---
0x155 DUP1
0x156 PUSH4 0x78e2df0e
0x15b EQ
0x15c PUSH2 0x24d
0x15f JUMPI
---
0x156: V73 = 0x78e2df0e
0x15b: V74 = EQ 0x78e2df0e V57
0x15c: V75 = 0x24d
0x15f: THROWI V74
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x160
[0x160:0x16a]
---
Predecessors: [0x155]
Successors: [0x16b]
---
0x160 DUP1
0x161 PUSH4 0x8da5cb5b
0x166 EQ
0x167 PUSH2 0x278
0x16a JUMPI
---
0x161: V76 = 0x8da5cb5b
0x166: V77 = EQ 0x8da5cb5b V57
0x167: V78 = 0x278
0x16a: THROWI V77
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x16b
[0x16b:0x175]
---
Predecessors: [0x160]
Successors: [0x176]
---
0x16b DUP1
0x16c PUSH4 0xcfe52bdd
0x171 EQ
0x172 PUSH2 0x2cf
0x175 JUMPI
---
0x16c: V79 = 0xcfe52bdd
0x171: V80 = EQ 0xcfe52bdd V57
0x172: V81 = 0x2cf
0x175: THROWI V80
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x176
[0x176:0x180]
---
Predecessors: [0x16b]
Successors: [0x181]
---
0x176 DUP1
0x177 PUSH4 0xfa6eb329
0x17c EQ
0x17d PUSH2 0x312
0x180 JUMPI
---
0x177: V82 = 0xfa6eb329
0x17c: V83 = EQ 0xfa6eb329 V57
0x17d: V84 = 0x312
0x180: THROWI V83
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x181
[0x181:0x18b]
---
Predecessors: [0x176]
Successors: [0x18c]
---
0x181 JUMPDEST
0x182 PUSH1 0x0
0x184 CALLVALUE
0x185 GT
0x186 ISZERO
0x187 ISZERO
0x188 PUSH2 0xa7
0x18b JUMPI
---
0x181: JUMPDEST 
0x182: V85 = 0x0
0x184: V86 = CALLVALUE
0x185: V87 = GT V86 0x0
0x186: V88 = ISZERO V87
0x187: V89 = ISZERO V88
0x188: V90 = 0xa7
0x18b: THROWI V89
---
Entry stack: [V57]
Stack pops: 0
Stack additions: []
Exit stack: [V57]

================================

Block 0x18c
[0x18c:0x24c]
---
Predecessors: [0x181]
Successors: [0x24d]
---
0x18c PUSH1 0x0
0x18e DUP1
0x18f REVERT
0x190 JUMPDEST
0x191 PUSH1 0x4
0x193 CALLER
0x194 SWAP1
0x195 DUP1
0x196 PUSH1 0x1
0x198 DUP2
0x199 SLOAD
0x19a ADD
0x19b DUP1
0x19c DUP3
0x19d SSTORE
0x19e DUP1
0x19f SWAP2
0x1a0 POP
0x1a1 POP
0x1a2 SWAP1
0x1a3 PUSH1 0x1
0x1a5 DUP3
0x1a6 SUB
0x1a7 SWAP1
0x1a8 PUSH1 0x0
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad PUSH1 0x0
0x1af SHA3
0x1b0 ADD
0x1b1 PUSH1 0x0
0x1b3 SWAP1
0x1b4 SWAP2
0x1b5 SWAP3
0x1b6 SWAP1
0x1b7 SWAP2
0x1b8 SWAP1
0x1b9 SWAP2
0x1ba PUSH2 0x100
0x1bd EXP
0x1be DUP2
0x1bf SLOAD
0x1c0 DUP2
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 MUL
0x1d7 NOT
0x1d8 AND
0x1d9 SWAP1
0x1da DUP4
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 MUL
0x1f2 OR
0x1f3 SWAP1
0x1f4 SSTORE
0x1f5 POP
0x1f6 POP
0x1f7 CALLVALUE
0x1f8 PUSH1 0x5
0x1fa PUSH1 0x0
0x1fc CALLER
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 DUP2
0x22a MSTORE
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 PUSH1 0x0
0x236 SHA3
0x237 PUSH1 0x0
0x239 DUP3
0x23a DUP3
0x23b SLOAD
0x23c ADD
0x23d SWAP3
0x23e POP
0x23f POP
0x240 DUP2
0x241 SWAP1
0x242 SSTORE
0x243 POP
0x244 STOP
0x245 JUMPDEST
0x246 CALLVALUE
0x247 DUP1
0x248 ISZERO
0x249 PUSH2 0x168
0x24c JUMPI
---
0x18c: V91 = 0x0
0x18f: REVERT 0x0 0x0
0x190: JUMPDEST 
0x191: V92 = 0x4
0x193: V93 = CALLER
0x196: V94 = 0x1
0x199: V95 = S[0x4]
0x19a: V96 = ADD V95 0x1
0x19d: S[0x4] = V96
0x1a3: V97 = 0x1
0x1a6: V98 = SUB V96 0x1
0x1a8: V99 = 0x0
0x1aa: M[0x0] = 0x4
0x1ab: V100 = 0x20
0x1ad: V101 = 0x0
0x1af: V102 = SHA3 0x0 0x20
0x1b0: V103 = ADD V102 V98
0x1b1: V104 = 0x0
0x1ba: V105 = 0x100
0x1bd: V106 = EXP 0x100 0x0
0x1bf: V107 = S[V103]
0x1c1: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V109 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1d7: V110 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V111 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V107
0x1db: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1f1: V114 = MUL V113 0x1
0x1f2: V115 = OR V114 V111
0x1f4: S[V103] = V115
0x1f7: V116 = CALLVALUE
0x1f8: V117 = 0x5
0x1fa: V118 = 0x0
0x1fc: V119 = CALLER
0x1fd: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x213: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x22a: M[0x0] = V123
0x22b: V124 = 0x20
0x22d: V125 = ADD 0x20 0x0
0x230: M[0x20] = 0x5
0x231: V126 = 0x20
0x233: V127 = ADD 0x20 0x20
0x234: V128 = 0x0
0x236: V129 = SHA3 0x0 0x40
0x237: V130 = 0x0
0x23b: V131 = S[V129]
0x23c: V132 = ADD V131 V116
0x242: S[V129] = V132
0x244: STOP 
0x245: JUMPDEST 
0x246: V133 = CALLVALUE
0x248: V134 = ISZERO V133
0x249: V135 = 0x168
0x24c: THROWI V134
---
Entry stack: [V57]
Stack pops: 0
Stack additions: [V133]
Exit stack: []

================================

Block 0x24d
[0x24d:0x263]
---
Predecessors: [0x18c]
Successors: [0x264]
---
0x24d PUSH1 0x0
0x24f DUP1
0x250 REVERT
0x251 JUMPDEST
0x252 POP
0x253 PUSH2 0x171
0x256 PUSH2 0x369
0x259 JUMP
0x25a JUMPDEST
0x25b STOP
0x25c JUMPDEST
0x25d CALLVALUE
0x25e DUP1
0x25f ISZERO
0x260 PUSH2 0x17f
0x263 JUMPI
---
0x24d: V136 = 0x0
0x250: REVERT 0x0 0x0
0x251: JUMPDEST 
0x253: V137 = 0x171
0x256: V138 = 0x369
0x259: THROW 
0x25a: JUMPDEST 
0x25b: STOP 
0x25c: JUMPDEST 
0x25d: V139 = CALLVALUE
0x25f: V140 = ISZERO V139
0x260: V141 = 0x17f
0x263: THROWI V140
---
Entry stack: [V133]
Stack pops: 0
Stack additions: [0x171, V139]
Exit stack: []

================================

Block 0x264
[0x264:0x2d0]
---
Predecessors: [0x24d]
Successors: [0x2d1]
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
0x268 JUMPDEST
0x269 POP
0x26a PUSH2 0x19e
0x26d PUSH1 0x4
0x26f DUP1
0x270 CALLDATASIZE
0x271 SUB
0x272 DUP2
0x273 ADD
0x274 SWAP1
0x275 DUP1
0x276 DUP1
0x277 CALLDATALOAD
0x278 SWAP1
0x279 PUSH1 0x20
0x27b ADD
0x27c SWAP1
0x27d SWAP3
0x27e SWAP2
0x27f SWAP1
0x280 POP
0x281 POP
0x282 POP
0x283 PUSH2 0x3c7
0x286 JUMP
0x287 JUMPDEST
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c DUP3
0x28d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a2 AND
0x2a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b8 AND
0x2b9 DUP2
0x2ba MSTORE
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP2
0x2bf POP
0x2c0 POP
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 SWAP2
0x2c6 SUB
0x2c7 SWAP1
0x2c8 RETURN
0x2c9 JUMPDEST
0x2ca CALLVALUE
0x2cb DUP1
0x2cc ISZERO
0x2cd PUSH2 0x1ec
0x2d0 JUMPI
---
0x264: V142 = 0x0
0x267: REVERT 0x0 0x0
0x268: JUMPDEST 
0x26a: V143 = 0x19e
0x26d: V144 = 0x4
0x270: V145 = CALLDATASIZE
0x271: V146 = SUB V145 0x4
0x273: V147 = ADD 0x4 V146
0x277: V148 = CALLDATALOAD 0x4
0x279: V149 = 0x20
0x27b: V150 = ADD 0x20 0x4
0x283: V151 = 0x3c7
0x286: THROW 
0x287: JUMPDEST 
0x288: V152 = 0x40
0x28a: V153 = M[0x40]
0x28d: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2a3: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2ba: M[V153] = V157
0x2bb: V158 = 0x20
0x2bd: V159 = ADD 0x20 V153
0x2c1: V160 = 0x40
0x2c3: V161 = M[0x40]
0x2c6: V162 = SUB V159 V161
0x2c8: RETURN V161 V162
0x2c9: JUMPDEST 
0x2ca: V163 = CALLVALUE
0x2cc: V164 = ISZERO V163
0x2cd: V165 = 0x1ec
0x2d0: THROWI V164
---
Entry stack: [V139]
Stack pops: 0
Stack additions: [V148, 0x19e, V163]
Exit stack: []

================================

Block 0x2d1
[0x2d1:0x2fb]
---
Predecessors: [0x264]
Successors: [0x2fc]
---
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 REVERT
0x2d5 JUMPDEST
0x2d6 POP
0x2d7 PUSH2 0x1f5
0x2da PUSH2 0x405
0x2dd JUMP
0x2de JUMPDEST
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 DUP3
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 SWAP2
0x2ea POP
0x2eb POP
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP1
0x2f0 SWAP2
0x2f1 SUB
0x2f2 SWAP1
0x2f3 RETURN
0x2f4 JUMPDEST
0x2f5 CALLVALUE
0x2f6 DUP1
0x2f7 ISZERO
0x2f8 PUSH2 0x217
0x2fb JUMPI
---
0x2d1: V166 = 0x0
0x2d4: REVERT 0x0 0x0
0x2d5: JUMPDEST 
0x2d7: V167 = 0x1f5
0x2da: V168 = 0x405
0x2dd: THROW 
0x2de: JUMPDEST 
0x2df: V169 = 0x40
0x2e1: V170 = M[0x40]
0x2e5: M[V170] = S0
0x2e6: V171 = 0x20
0x2e8: V172 = ADD 0x20 V170
0x2ec: V173 = 0x40
0x2ee: V174 = M[0x40]
0x2f1: V175 = SUB V172 V174
0x2f3: RETURN V174 V175
0x2f4: JUMPDEST 
0x2f5: V176 = CALLVALUE
0x2f7: V177 = ISZERO V176
0x2f8: V178 = 0x217
0x2fb: THROWI V177
---
Entry stack: [V163]
Stack pops: 0
Stack additions: [0x1f5, V176]
Exit stack: []

================================

Block 0x2fc
[0x2fc:0x312]
---
Predecessors: [0x2d1]
Successors: [0x313]
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
0x300 JUMPDEST
0x301 POP
0x302 PUSH2 0x220
0x305 PUSH2 0x40b
0x308 JUMP
0x309 JUMPDEST
0x30a STOP
0x30b JUMPDEST
0x30c CALLVALUE
0x30d DUP1
0x30e ISZERO
0x30f PUSH2 0x22e
0x312 JUMPI
---
0x2fc: V179 = 0x0
0x2ff: REVERT 0x0 0x0
0x300: JUMPDEST 
0x302: V180 = 0x220
0x305: V181 = 0x40b
0x308: THROW 
0x309: JUMPDEST 
0x30a: STOP 
0x30b: JUMPDEST 
0x30c: V182 = CALLVALUE
0x30e: V183 = ISZERO V182
0x30f: V184 = 0x22e
0x312: THROWI V183
---
Entry stack: [V176]
Stack pops: 0
Stack additions: [0x220, V182]
Exit stack: []

================================

Block 0x313
[0x313:0x31f]
---
Predecessors: [0x2fc]
Successors: [0x4ee]
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
0x317 JUMPDEST
0x318 POP
0x319 PUSH2 0x237
0x31c PUSH2 0x4ee
0x31f JUMP
---
0x313: V185 = 0x0
0x316: REVERT 0x0 0x0
0x317: JUMPDEST 
0x319: V186 = 0x237
0x31c: V187 = 0x4ee
0x31f: JUMP 0x4ee
---
Entry stack: [V182]
Stack pops: 0
Stack additions: [0x237]
Exit stack: []

================================

Block 0x320
[0x320:0x33d]
---
Predecessors: []
Successors: [0x33e]
---
0x320 JUMPDEST
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP3
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a ADD
0x32b SWAP2
0x32c POP
0x32d POP
0x32e PUSH1 0x40
0x330 MLOAD
0x331 DUP1
0x332 SWAP2
0x333 SUB
0x334 SWAP1
0x335 RETURN
0x336 JUMPDEST
0x337 CALLVALUE
0x338 DUP1
0x339 ISZERO
0x33a PUSH2 0x259
0x33d JUMPI
---
0x320: JUMPDEST 
0x321: V188 = 0x40
0x323: V189 = M[0x40]
0x327: M[V189] = S0
0x328: V190 = 0x20
0x32a: V191 = ADD 0x20 V189
0x32e: V192 = 0x40
0x330: V193 = M[0x40]
0x333: V194 = SUB V191 V193
0x335: RETURN V193 V194
0x336: JUMPDEST 
0x337: V195 = CALLVALUE
0x339: V196 = ISZERO V195
0x33a: V197 = 0x259
0x33d: THROWI V196
---
Entry stack: []
Stack pops: 2
Stack additions: [V195]
Exit stack: []

================================

Block 0x33e
[0x33e:0x368]
---
Predecessors: [0x320]
Successors: [0x369]
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
0x342 JUMPDEST
0x343 POP
0x344 PUSH2 0x262
0x347 PUSH2 0x50d
0x34a JUMP
0x34b JUMPDEST
0x34c PUSH1 0x40
0x34e MLOAD
0x34f DUP1
0x350 DUP3
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 SWAP2
0x357 POP
0x358 POP
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d SWAP2
0x35e SUB
0x35f SWAP1
0x360 RETURN
0x361 JUMPDEST
0x362 CALLVALUE
0x363 DUP1
0x364 ISZERO
0x365 PUSH2 0x284
0x368 JUMPI
---
0x33e: V198 = 0x0
0x341: REVERT 0x0 0x0
0x342: JUMPDEST 
0x344: V199 = 0x262
0x347: V200 = 0x50d
0x34a: THROW 
0x34b: JUMPDEST 
0x34c: V201 = 0x40
0x34e: V202 = M[0x40]
0x352: M[V202] = S0
0x353: V203 = 0x20
0x355: V204 = ADD 0x20 V202
0x359: V205 = 0x40
0x35b: V206 = M[0x40]
0x35e: V207 = SUB V204 V206
0x360: RETURN V206 V207
0x361: JUMPDEST 
0x362: V208 = CALLVALUE
0x364: V209 = ISZERO V208
0x365: V210 = 0x284
0x368: THROWI V209
---
Entry stack: [V195]
Stack pops: 0
Stack additions: [0x262, V208]
Exit stack: []

================================

Block 0x369
[0x369:0x3bf]
---
Predecessors: [0x33e]
Successors: [0x3c0]
---
0x369 PUSH1 0x0
0x36b DUP1
0x36c REVERT
0x36d JUMPDEST
0x36e POP
0x36f PUSH2 0x28d
0x372 PUSH2 0x513
0x375 JUMP
0x376 JUMPDEST
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b DUP3
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 AND
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad SWAP2
0x3ae POP
0x3af POP
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 SWAP2
0x3b5 SUB
0x3b6 SWAP1
0x3b7 RETURN
0x3b8 JUMPDEST
0x3b9 CALLVALUE
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x2db
0x3bf JUMPI
---
0x369: V211 = 0x0
0x36c: REVERT 0x0 0x0
0x36d: JUMPDEST 
0x36f: V212 = 0x28d
0x372: V213 = 0x513
0x375: THROW 
0x376: JUMPDEST 
0x377: V214 = 0x40
0x379: V215 = M[0x40]
0x37c: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x392: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x3a9: M[V215] = V219
0x3aa: V220 = 0x20
0x3ac: V221 = ADD 0x20 V215
0x3b0: V222 = 0x40
0x3b2: V223 = M[0x40]
0x3b5: V224 = SUB V221 V223
0x3b7: RETURN V223 V224
0x3b8: JUMPDEST 
0x3b9: V225 = CALLVALUE
0x3bb: V226 = ISZERO V225
0x3bc: V227 = 0x2db
0x3bf: THROWI V226
---
Entry stack: [V208]
Stack pops: 0
Stack additions: [0x28d, V225]
Exit stack: []

================================

Block 0x3c0
[0x3c0:0x402]
---
Predecessors: [0x369]
Successors: [0x403]
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
0x3c4 JUMPDEST
0x3c5 POP
0x3c6 PUSH2 0x310
0x3c9 PUSH1 0x4
0x3cb DUP1
0x3cc CALLDATASIZE
0x3cd SUB
0x3ce DUP2
0x3cf ADD
0x3d0 SWAP1
0x3d1 DUP1
0x3d2 DUP1
0x3d3 CALLDATALOAD
0x3d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e9 AND
0x3ea SWAP1
0x3eb PUSH1 0x20
0x3ed ADD
0x3ee SWAP1
0x3ef SWAP3
0x3f0 SWAP2
0x3f1 SWAP1
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 PUSH2 0x539
0x3f8 JUMP
0x3f9 JUMPDEST
0x3fa STOP
0x3fb JUMPDEST
0x3fc CALLVALUE
0x3fd DUP1
0x3fe ISZERO
0x3ff PUSH2 0x31e
0x402 JUMPI
---
0x3c0: V228 = 0x0
0x3c3: REVERT 0x0 0x0
0x3c4: JUMPDEST 
0x3c6: V229 = 0x310
0x3c9: V230 = 0x4
0x3cc: V231 = CALLDATASIZE
0x3cd: V232 = SUB V231 0x4
0x3cf: V233 = ADD 0x4 V232
0x3d3: V234 = CALLDATALOAD 0x4
0x3d4: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x3eb: V237 = 0x20
0x3ed: V238 = ADD 0x20 0x4
0x3f5: V239 = 0x539
0x3f8: THROW 
0x3f9: JUMPDEST 
0x3fa: STOP 
0x3fb: JUMPDEST 
0x3fc: V240 = CALLVALUE
0x3fe: V241 = ISZERO V240
0x3ff: V242 = 0x31e
0x402: THROWI V241
---
Entry stack: [V225]
Stack pops: 0
Stack additions: [V236, 0x310, V240]
Exit stack: []

================================

Block 0x403
[0x403:0x4bd]
---
Predecessors: [0x3c0]
Successors: [0x4be]
---
0x403 PUSH1 0x0
0x405 DUP1
0x406 REVERT
0x407 JUMPDEST
0x408 POP
0x409 PUSH2 0x353
0x40c PUSH1 0x4
0x40e DUP1
0x40f CALLDATASIZE
0x410 SUB
0x411 DUP2
0x412 ADD
0x413 SWAP1
0x414 DUP1
0x415 DUP1
0x416 CALLDATALOAD
0x417 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42c AND
0x42d SWAP1
0x42e PUSH1 0x20
0x430 ADD
0x431 SWAP1
0x432 SWAP3
0x433 SWAP2
0x434 SWAP1
0x435 POP
0x436 POP
0x437 POP
0x438 PUSH2 0x61d
0x43b JUMP
0x43c JUMPDEST
0x43d PUSH1 0x40
0x43f MLOAD
0x440 DUP1
0x441 DUP3
0x442 DUP2
0x443 MSTORE
0x444 PUSH1 0x20
0x446 ADD
0x447 SWAP2
0x448 POP
0x449 POP
0x44a PUSH1 0x40
0x44c MLOAD
0x44d DUP1
0x44e SWAP2
0x44f SUB
0x450 SWAP1
0x451 RETURN
0x452 JUMPDEST
0x453 CALLER
0x454 PUSH1 0x3
0x456 PUSH1 0x0
0x458 PUSH2 0x100
0x45b EXP
0x45c DUP2
0x45d SLOAD
0x45e DUP2
0x45f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x474 MUL
0x475 NOT
0x476 AND
0x477 SWAP1
0x478 DUP4
0x479 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48e AND
0x48f MUL
0x490 OR
0x491 SWAP1
0x492 SSTORE
0x493 POP
0x494 PUSH8 0xde0b6b3a7640000
0x49d PUSH1 0x1
0x49f DUP2
0x4a0 SWAP1
0x4a1 SSTORE
0x4a2 POP
0x4a3 PUSH3 0x278d00
0x4a7 TIMESTAMP
0x4a8 ADD
0x4a9 PUSH1 0x2
0x4ab DUP2
0x4ac SWAP1
0x4ad SSTORE
0x4ae POP
0x4af JUMP
0x4b0 JUMPDEST
0x4b1 PUSH1 0x4
0x4b3 DUP2
0x4b4 DUP2
0x4b5 SLOAD
0x4b6 DUP2
0x4b7 LT
0x4b8 ISZERO
0x4b9 ISZERO
0x4ba PUSH2 0x3d6
0x4bd JUMPI
---
0x403: V243 = 0x0
0x406: REVERT 0x0 0x0
0x407: JUMPDEST 
0x409: V244 = 0x353
0x40c: V245 = 0x4
0x40f: V246 = CALLDATASIZE
0x410: V247 = SUB V246 0x4
0x412: V248 = ADD 0x4 V247
0x416: V249 = CALLDATALOAD 0x4
0x417: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x42c: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x42e: V252 = 0x20
0x430: V253 = ADD 0x20 0x4
0x438: V254 = 0x61d
0x43b: THROW 
0x43c: JUMPDEST 
0x43d: V255 = 0x40
0x43f: V256 = M[0x40]
0x443: M[V256] = S0
0x444: V257 = 0x20
0x446: V258 = ADD 0x20 V256
0x44a: V259 = 0x40
0x44c: V260 = M[0x40]
0x44f: V261 = SUB V258 V260
0x451: RETURN V260 V261
0x452: JUMPDEST 
0x453: V262 = CALLER
0x454: V263 = 0x3
0x456: V264 = 0x0
0x458: V265 = 0x100
0x45b: V266 = EXP 0x100 0x0
0x45d: V267 = S[0x3]
0x45f: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x474: V269 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x475: V270 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x476: V271 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V267
0x479: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x48f: V274 = MUL V273 0x1
0x490: V275 = OR V274 V271
0x492: S[0x3] = V275
0x494: V276 = 0xde0b6b3a7640000
0x49d: V277 = 0x1
0x4a1: S[0x1] = 0xde0b6b3a7640000
0x4a3: V278 = 0x278d00
0x4a7: V279 = TIMESTAMP
0x4a8: V280 = ADD V279 0x278d00
0x4a9: V281 = 0x2
0x4ad: S[0x2] = V280
0x4af: JUMP S0
0x4b0: JUMPDEST 
0x4b1: V282 = 0x4
0x4b5: V283 = S[0x4]
0x4b7: V284 = LT S0 V283
0x4b8: V285 = ISZERO V284
0x4b9: V286 = ISZERO V285
0x4ba: V287 = 0x3d6
0x4bd: THROWI V286
---
Entry stack: [V240]
Stack pops: 0
Stack additions: [V251, 0x353, S0, 0x4, S0]
Exit stack: []

================================

Block 0x4be
[0x4be:0x4ed]
---
Predecessors: [0x403]
Successors: []
Has unresolved jump.
---
0x4be INVALID
0x4bf JUMPDEST
0x4c0 SWAP1
0x4c1 PUSH1 0x0
0x4c3 MSTORE
0x4c4 PUSH1 0x20
0x4c6 PUSH1 0x0
0x4c8 SHA3
0x4c9 ADD
0x4ca PUSH1 0x0
0x4cc SWAP2
0x4cd POP
0x4ce SLOAD
0x4cf SWAP1
0x4d0 PUSH2 0x100
0x4d3 EXP
0x4d4 SWAP1
0x4d5 DIV
0x4d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4eb AND
0x4ec DUP2
0x4ed JUMP
---
0x4be: INVALID 
0x4bf: JUMPDEST 
0x4c1: V288 = 0x0
0x4c3: M[0x0] = S1
0x4c4: V289 = 0x20
0x4c6: V290 = 0x0
0x4c8: V291 = SHA3 0x0 0x20
0x4c9: V292 = ADD V291 S0
0x4ca: V293 = 0x0
0x4ce: V294 = S[V292]
0x4d0: V295 = 0x100
0x4d3: V296 = EXP 0x100 0x0
0x4d5: V297 = DIV V294 0x1
0x4d6: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4eb: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x4ed: JUMP S3
---
Entry stack: [S2, 0x4, S0]
Stack pops: 0
Stack additions: [V299, S3]
Exit stack: []

================================

Block 0x4ee
[0x4ee:0x501]
---
Predecessors: [0x313]
Successors: [0x502]
---
0x4ee JUMPDEST
0x4ef PUSH1 0x2
0x4f1 SLOAD
0x4f2 DUP2
0x4f3 JUMP
0x4f4 JUMPDEST
0x4f5 PUSH1 0x0
0x4f7 PUSH1 0x2
0x4f9 SLOAD
0x4fa TIMESTAMP
0x4fb GT
0x4fc ISZERO
0x4fd ISZERO
0x4fe PUSH2 0x41d
0x501 JUMPI
---
0x4ee: JUMPDEST 
0x4ef: V300 = 0x2
0x4f1: V301 = S[0x2]
0x4f3: THROW 
0x4f4: JUMPDEST 
0x4f5: V302 = 0x0
0x4f7: V303 = 0x2
0x4f9: V304 = S[0x2]
0x4fa: V305 = TIMESTAMP
0x4fb: V306 = GT V305 V304
0x4fc: V307 = ISZERO V306
0x4fd: V308 = ISZERO V307
0x4fe: V309 = 0x41d
0x501: THROWI V308
---
Entry stack: [0x237]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0x502
[0x502:0x5c9]
---
Predecessors: [0x4ee]
Successors: [0x5ca]
---
0x502 PUSH1 0x0
0x504 DUP1
0x505 REVERT
0x506 JUMPDEST
0x507 PUSH1 0x5
0x509 PUSH1 0x0
0x50b CALLER
0x50c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x521 AND
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 DUP2
0x539 MSTORE
0x53a PUSH1 0x20
0x53c ADD
0x53d SWAP1
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x20
0x542 ADD
0x543 PUSH1 0x0
0x545 SHA3
0x546 SLOAD
0x547 SWAP1
0x548 POP
0x549 PUSH1 0x0
0x54b PUSH1 0x5
0x54d PUSH1 0x0
0x54f CALLER
0x550 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x565 AND
0x566 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57b AND
0x57c DUP2
0x57d MSTORE
0x57e PUSH1 0x20
0x580 ADD
0x581 SWAP1
0x582 DUP2
0x583 MSTORE
0x584 PUSH1 0x20
0x586 ADD
0x587 PUSH1 0x0
0x589 SHA3
0x58a DUP2
0x58b SWAP1
0x58c SSTORE
0x58d POP
0x58e CALLER
0x58f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a4 AND
0x5a5 PUSH2 0x8fc
0x5a8 DUP3
0x5a9 SWAP1
0x5aa DUP2
0x5ab ISZERO
0x5ac MUL
0x5ad SWAP1
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 PUSH1 0x0
0x5b3 PUSH1 0x40
0x5b5 MLOAD
0x5b6 DUP1
0x5b7 DUP4
0x5b8 SUB
0x5b9 DUP2
0x5ba DUP6
0x5bb DUP9
0x5bc DUP9
0x5bd CALL
0x5be SWAP4
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 POP
0x5c3 ISZERO
0x5c4 DUP1
0x5c5 ISZERO
0x5c6 PUSH2 0x4ea
0x5c9 JUMPI
---
0x502: V310 = 0x0
0x505: REVERT 0x0 0x0
0x506: JUMPDEST 
0x507: V311 = 0x5
0x509: V312 = 0x0
0x50b: V313 = CALLER
0x50c: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x521: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x522: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x539: M[0x0] = V317
0x53a: V318 = 0x20
0x53c: V319 = ADD 0x20 0x0
0x53f: M[0x20] = 0x5
0x540: V320 = 0x20
0x542: V321 = ADD 0x20 0x20
0x543: V322 = 0x0
0x545: V323 = SHA3 0x0 0x40
0x546: V324 = S[V323]
0x549: V325 = 0x0
0x54b: V326 = 0x5
0x54d: V327 = 0x0
0x54f: V328 = CALLER
0x550: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x565: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x566: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x57b: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x57d: M[0x0] = V332
0x57e: V333 = 0x20
0x580: V334 = ADD 0x20 0x0
0x583: M[0x20] = 0x5
0x584: V335 = 0x20
0x586: V336 = ADD 0x20 0x20
0x587: V337 = 0x0
0x589: V338 = SHA3 0x0 0x40
0x58c: S[V338] = 0x0
0x58e: V339 = CALLER
0x58f: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a4: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x5a5: V342 = 0x8fc
0x5ab: V343 = ISZERO V324
0x5ac: V344 = MUL V343 0x8fc
0x5ae: V345 = 0x40
0x5b0: V346 = M[0x40]
0x5b1: V347 = 0x0
0x5b3: V348 = 0x40
0x5b5: V349 = M[0x40]
0x5b8: V350 = SUB V346 V349
0x5bd: V351 = CALL V344 V341 V324 V349 V350 V349 0x0
0x5c3: V352 = ISZERO V351
0x5c5: V353 = ISZERO V352
0x5c6: V354 = 0x4ea
0x5c9: THROWI V353
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V352, V324]
Exit stack: []

================================

Block 0x5ca
[0x5ca:0x678]
---
Predecessors: [0x502]
Successors: [0x679]
---
0x5ca RETURNDATASIZE
0x5cb PUSH1 0x0
0x5cd DUP1
0x5ce RETURNDATACOPY
0x5cf RETURNDATASIZE
0x5d0 PUSH1 0x0
0x5d2 REVERT
0x5d3 JUMPDEST
0x5d4 POP
0x5d5 POP
0x5d6 JUMP
0x5d7 JUMPDEST
0x5d8 PUSH1 0x0
0x5da ADDRESS
0x5db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f0 AND
0x5f1 BALANCE
0x5f2 SWAP1
0x5f3 POP
0x5f4 SWAP1
0x5f5 JUMP
0x5f6 JUMPDEST
0x5f7 PUSH1 0x1
0x5f9 SLOAD
0x5fa DUP2
0x5fb JUMP
0x5fc JUMPDEST
0x5fd PUSH1 0x3
0x5ff PUSH1 0x0
0x601 SWAP1
0x602 SLOAD
0x603 SWAP1
0x604 PUSH2 0x100
0x607 EXP
0x608 SWAP1
0x609 DIV
0x60a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61f AND
0x620 DUP2
0x621 JUMP
0x622 JUMPDEST
0x623 PUSH1 0x0
0x625 DUP1
0x626 SWAP1
0x627 SLOAD
0x628 SWAP1
0x629 PUSH2 0x100
0x62c EXP
0x62d SWAP1
0x62e DIV
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65a AND
0x65b CALLER
0x65c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x671 AND
0x672 EQ
0x673 ISZERO
0x674 ISZERO
0x675 PUSH2 0x594
0x678 JUMPI
---
0x5ca: V355 = RETURNDATASIZE
0x5cb: V356 = 0x0
0x5ce: RETURNDATACOPY 0x0 0x0 V355
0x5cf: V357 = RETURNDATASIZE
0x5d0: V358 = 0x0
0x5d2: REVERT 0x0 V357
0x5d3: JUMPDEST 
0x5d6: JUMP S2
0x5d7: JUMPDEST 
0x5d8: V359 = 0x0
0x5da: V360 = ADDRESS
0x5db: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x5f1: V363 = BALANCE V362
0x5f5: JUMP S0
0x5f6: JUMPDEST 
0x5f7: V364 = 0x1
0x5f9: V365 = S[0x1]
0x5fb: JUMP S0
0x5fc: JUMPDEST 
0x5fd: V366 = 0x3
0x5ff: V367 = 0x0
0x602: V368 = S[0x3]
0x604: V369 = 0x100
0x607: V370 = EXP 0x100 0x0
0x609: V371 = DIV V368 0x1
0x60a: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x61f: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x621: JUMP S0
0x622: JUMPDEST 
0x623: V374 = 0x0
0x627: V375 = S[0x0]
0x629: V376 = 0x100
0x62c: V377 = EXP 0x100 0x0
0x62e: V378 = DIV V375 0x1
0x62f: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x645: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x65b: V383 = CALLER
0x65c: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x671: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x672: V386 = EQ V385 V382
0x673: V387 = ISZERO V386
0x674: V388 = ISZERO V387
0x675: V389 = 0x594
0x678: THROWI V388
---
Entry stack: [V324, V352]
Stack pops: 0
Stack additions: [V363, V365, S0, V373, S0]
Exit stack: []

================================

Block 0x679
[0x679:0x6a0]
---
Predecessors: [0x5ca]
Successors: [0x6a1]
---
0x679 PUSH1 0x0
0x67b DUP1
0x67c REVERT
0x67d JUMPDEST
0x67e PUSH1 0x1
0x680 SLOAD
0x681 ADDRESS
0x682 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x697 AND
0x698 BALANCE
0x699 LT
0x69a ISZERO
0x69b ISZERO
0x69c ISZERO
0x69d PUSH2 0x5bc
0x6a0 JUMPI
---
0x679: V390 = 0x0
0x67c: REVERT 0x0 0x0
0x67d: JUMPDEST 
0x67e: V391 = 0x1
0x680: V392 = S[0x1]
0x681: V393 = ADDRESS
0x682: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x697: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x698: V396 = BALANCE V395
0x699: V397 = LT V396 V392
0x69a: V398 = ISZERO V397
0x69b: V399 = ISZERO V398
0x69c: V400 = ISZERO V399
0x69d: V401 = 0x5bc
0x6a0: THROWI V400
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a1
[0x6a1:0x6f8]
---
Predecessors: [0x679]
Successors: [0x6f9]
---
0x6a1 PUSH1 0x0
0x6a3 DUP1
0x6a4 REVERT
0x6a5 JUMPDEST
0x6a6 DUP1
0x6a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bc AND
0x6bd PUSH2 0x8fc
0x6c0 ADDRESS
0x6c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d6 AND
0x6d7 BALANCE
0x6d8 SWAP1
0x6d9 DUP2
0x6da ISZERO
0x6db MUL
0x6dc SWAP1
0x6dd PUSH1 0x40
0x6df MLOAD
0x6e0 PUSH1 0x0
0x6e2 PUSH1 0x40
0x6e4 MLOAD
0x6e5 DUP1
0x6e6 DUP4
0x6e7 SUB
0x6e8 DUP2
0x6e9 DUP6
0x6ea DUP9
0x6eb DUP9
0x6ec CALL
0x6ed SWAP4
0x6ee POP
0x6ef POP
0x6f0 POP
0x6f1 POP
0x6f2 ISZERO
0x6f3 DUP1
0x6f4 ISZERO
0x6f5 PUSH2 0x619
0x6f8 JUMPI
---
0x6a1: V402 = 0x0
0x6a4: REVERT 0x0 0x0
0x6a5: JUMPDEST 
0x6a7: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6bd: V405 = 0x8fc
0x6c0: V406 = ADDRESS
0x6c1: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d6: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x6d7: V409 = BALANCE V408
0x6da: V410 = ISZERO V409
0x6db: V411 = MUL V410 0x8fc
0x6dd: V412 = 0x40
0x6df: V413 = M[0x40]
0x6e0: V414 = 0x0
0x6e2: V415 = 0x40
0x6e4: V416 = M[0x40]
0x6e7: V417 = SUB V413 V416
0x6ec: V418 = CALL V411 V404 V409 V416 V417 V416 0x0
0x6f2: V419 = ISZERO V418
0x6f4: V420 = ISZERO V419
0x6f5: V421 = 0x619
0x6f8: THROWI V420
---
Entry stack: []
Stack pops: 0
Stack additions: [V419, S0]
Exit stack: []

================================

Block 0x6f9
[0x6f9:0x751]
---
Predecessors: [0x6a1]
Successors: []
---
0x6f9 RETURNDATASIZE
0x6fa PUSH1 0x0
0x6fc DUP1
0x6fd RETURNDATACOPY
0x6fe RETURNDATASIZE
0x6ff PUSH1 0x0
0x701 REVERT
0x702 JUMPDEST
0x703 POP
0x704 POP
0x705 JUMP
0x706 JUMPDEST
0x707 PUSH1 0x5
0x709 PUSH1 0x20
0x70b MSTORE
0x70c DUP1
0x70d PUSH1 0x0
0x70f MSTORE
0x710 PUSH1 0x40
0x712 PUSH1 0x0
0x714 SHA3
0x715 PUSH1 0x0
0x717 SWAP2
0x718 POP
0x719 SWAP1
0x71a POP
0x71b SLOAD
0x71c DUP2
0x71d JUMP
0x71e STOP
0x71f LOG1
0x720 PUSH6 0x627a7a723058
0x727 SHA3
0x728 DIFFICULTY
0x729 CALLVALUE
0x72a SSTORE
0x72b MISSING 0x29
0x72c MISSING 0xb0
0x72d SIGNEXTEND
0x72e SWAP1
0x72f ADD
0x730 CALLVALUE
0x731 MSIZE
0x732 MISSING 0xe2
0x733 MISSING 0x4e
0x734 MISSING 0xe3
0x735 EQ
0x736 DELEGATECALL
0x737 PUSH26 0x89ee5e5147eb620c95e70f98e9b74db70029
---
0x6f9: V422 = RETURNDATASIZE
0x6fa: V423 = 0x0
0x6fd: RETURNDATACOPY 0x0 0x0 V422
0x6fe: V424 = RETURNDATASIZE
0x6ff: V425 = 0x0
0x701: REVERT 0x0 V424
0x702: JUMPDEST 
0x705: JUMP S2
0x706: JUMPDEST 
0x707: V426 = 0x5
0x709: V427 = 0x20
0x70b: M[0x20] = 0x5
0x70d: V428 = 0x0
0x70f: M[0x0] = S0
0x710: V429 = 0x40
0x712: V430 = 0x0
0x714: V431 = SHA3 0x0 0x40
0x715: V432 = 0x0
0x71b: V433 = S[V431]
0x71d: JUMP S1
0x71e: STOP 
0x71f: LOG S0 S1 S2
0x720: V434 = 0x627a7a723058
0x727: V435 = SHA3 0x627a7a723058 S3
0x728: V436 = DIFFICULTY
0x729: V437 = CALLVALUE
0x72a: S[V437] = V436
0x72b: MISSING 0x29
0x72c: MISSING 0xb0
0x72d: V438 = SIGNEXTEND S0 S1
0x72f: V439 = ADD S2 V438
0x730: V440 = CALLVALUE
0x731: V441 = MSIZE
0x732: MISSING 0xe2
0x733: MISSING 0x4e
0x734: MISSING 0xe3
0x735: V442 = EQ S0 S1
0x736: V443 = DELEGATECALL V442 S2 S3 S4 S5 S6
0x737: V444 = 0x89ee5e5147eb620c95e70f98e9b74db70029
---
Entry stack: [S1, V419]
Stack pops: 0
Stack additions: [V433, S1, V435, V441, V440, V439, 0x89ee5e5147eb620c95e70f98e9b74db70029, V443]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x44
Exit block: 0x56
Body: 0x44, 0x4b, 0x4f, 0x56, 0x98

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x3f
Body: 0x3f

