Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x18160ddd
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x18160ddd
0x3c: V13 = EQ 0x18160ddd V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x87]
---
0x41 DUP1
0x42 PUSH4 0x70a08231
0x47 EQ
0x48 PUSH2 0x87
0x4b JUMPI
---
0x42: V15 = 0x70a08231
0x47: V16 = EQ 0x70a08231 V11
0x48: V17 = 0x87
0x4b: JUMPI 0x87 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xde]
---
0x4c DUP1
0x4d PUSH4 0xa9059cbb
0x52 EQ
0x53 PUSH2 0xde
0x56 JUMPI
---
0x4d: V18 = 0xa9059cbb
0x52: V19 = EQ 0xa9059cbb V11
0x53: V20 = 0xde
0x56: JUMPI 0xde V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x143]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x143
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x143
0x70: JUMP 0x143
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x86]
---
Predecessors: [0x143]
Successors: []
---
0x71 JUMPDEST
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 DUP3
0x77 DUP2
0x78 MSTORE
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP2
0x7d POP
0x7e POP
0x7f PUSH1 0x40
0x81 MLOAD
0x82 DUP1
0x83 SWAP2
0x84 SUB
0x85 SWAP1
0x86 RETURN
---
0x71: JUMPDEST 
0x72: V28 = 0x40
0x74: V29 = M[0x40]
0x78: M[V29] = V88
0x79: V30 = 0x20
0x7b: V31 = ADD 0x20 V29
0x7f: V32 = 0x40
0x81: V33 = M[0x40]
0x84: V34 = SUB V31 V33
0x86: RETURN V33 V34
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x41]
Successors: [0x8f, 0x93]
---
0x87 JUMPDEST
0x88 CALLVALUE
0x89 DUP1
0x8a ISZERO
0x8b PUSH2 0x93
0x8e JUMPI
---
0x87: JUMPDEST 
0x88: V35 = CALLVALUE
0x8a: V36 = ISZERO V35
0x8b: V37 = 0x93
0x8e: JUMPI 0x93 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x87]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V38 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0x93
[0x93:0xc7]
---
Predecessors: [0x87]
Successors: [0x14d]
---
0x93 JUMPDEST
0x94 POP
0x95 PUSH2 0xc8
0x98 PUSH1 0x4
0x9a DUP1
0x9b CALLDATASIZE
0x9c SUB
0x9d DUP2
0x9e ADD
0x9f SWAP1
0xa0 DUP1
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe SWAP3
0xbf SWAP2
0xc0 SWAP1
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 PUSH2 0x14d
0xc7 JUMP
---
0x93: JUMPDEST 
0x95: V39 = 0xc8
0x98: V40 = 0x4
0x9b: V41 = CALLDATASIZE
0x9c: V42 = SUB V41 0x4
0x9e: V43 = ADD 0x4 V42
0xa2: V44 = CALLDATALOAD 0x4
0xa3: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xba: V47 = 0x20
0xbc: V48 = ADD 0x20 0x4
0xc4: V49 = 0x14d
0xc7: JUMP 0x14d
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0xc8, V46]
Exit stack: [V11, 0xc8, V46]

================================

Block 0xc8
[0xc8:0xdd]
---
Predecessors: [0x14d]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd DUP3
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP2
0xd4 POP
0xd5 POP
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda SWAP2
0xdb SUB
0xdc SWAP1
0xdd RETURN
---
0xc8: JUMPDEST 
0xc9: V50 = 0x40
0xcb: V51 = M[0x40]
0xcf: M[V51] = V101
0xd0: V52 = 0x20
0xd2: V53 = ADD 0x20 V51
0xd6: V54 = 0x40
0xd8: V55 = M[0x40]
0xdb: V56 = SUB V53 V55
0xdd: RETURN V55 V56
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x4c]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V57 = CALLVALUE
0xe1: V58 = ISZERO V57
0xe2: V59 = 0xea
0xe5: JUMPI 0xea V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V60 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xea
[0xea:0x128]
---
Predecessors: [0xde]
Successors: [0x195]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0x129
0xef PUSH1 0x4
0xf1 DUP1
0xf2 CALLDATASIZE
0xf3 SUB
0xf4 DUP2
0xf5 ADD
0xf6 SWAP1
0xf7 DUP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 SWAP1
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP1
0x115 SWAP3
0x116 SWAP2
0x117 SWAP1
0x118 DUP1
0x119 CALLDATALOAD
0x11a SWAP1
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f SWAP3
0x120 SWAP2
0x121 SWAP1
0x122 POP
0x123 POP
0x124 POP
0x125 PUSH2 0x195
0x128 JUMP
---
0xea: JUMPDEST 
0xec: V61 = 0x129
0xef: V62 = 0x4
0xf2: V63 = CALLDATASIZE
0xf3: V64 = SUB V63 0x4
0xf5: V65 = ADD 0x4 V64
0xf9: V66 = CALLDATALOAD 0x4
0xfa: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x111: V69 = 0x20
0x113: V70 = ADD 0x20 0x4
0x119: V71 = CALLDATALOAD 0x24
0x11b: V72 = 0x20
0x11d: V73 = ADD 0x20 0x24
0x125: V74 = 0x195
0x128: JUMP 0x195
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x129, V68, V71]
Exit stack: [V11, 0x129, V68, V71]

================================

Block 0x129
[0x129:0x142]
---
Predecessors: [0x2c8]
Successors: []
---
0x129 JUMPDEST
0x12a PUSH1 0x40
0x12c MLOAD
0x12d DUP1
0x12e DUP3
0x12f ISZERO
0x130 ISZERO
0x131 ISZERO
0x132 ISZERO
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP2
0x139 POP
0x13a POP
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f SWAP2
0x140 SUB
0x141 SWAP1
0x142 RETURN
---
0x129: JUMPDEST 
0x12a: V75 = 0x40
0x12c: V76 = M[0x40]
0x12f: V77 = ISZERO 0x1
0x130: V78 = ISZERO 0x0
0x131: V79 = ISZERO 0x1
0x132: V80 = ISZERO 0x0
0x134: M[V76] = 0x1
0x135: V81 = 0x20
0x137: V82 = ADD 0x20 V76
0x13b: V83 = 0x40
0x13d: V84 = M[0x40]
0x140: V85 = SUB V82 V84
0x142: RETURN V84 V85
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x14c]
---
Predecessors: [0x68]
Successors: [0x71]
---
0x143 JUMPDEST
0x144 PUSH1 0x0
0x146 PUSH1 0x1
0x148 SLOAD
0x149 SWAP1
0x14a POP
0x14b SWAP1
0x14c JUMP
---
0x143: JUMPDEST 
0x144: V86 = 0x0
0x146: V87 = 0x1
0x148: V88 = S[0x1]
0x14c: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x14d
[0x14d:0x194]
---
Predecessors: [0x93]
Successors: [0xc8]
---
0x14d JUMPDEST
0x14e PUSH1 0x0
0x150 DUP1
0x151 PUSH1 0x0
0x153 DUP4
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f AND
0x180 DUP2
0x181 MSTORE
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP1
0x186 DUP2
0x187 MSTORE
0x188 PUSH1 0x20
0x18a ADD
0x18b PUSH1 0x0
0x18d SHA3
0x18e SLOAD
0x18f SWAP1
0x190 POP
0x191 SWAP2
0x192 SWAP1
0x193 POP
0x194 JUMP
---
0x14d: JUMPDEST 
0x14e: V89 = 0x0
0x151: V90 = 0x0
0x154: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x16a: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x181: M[0x0] = V94
0x182: V95 = 0x20
0x184: V96 = ADD 0x20 0x0
0x187: M[0x20] = 0x0
0x188: V97 = 0x20
0x18a: V98 = ADD 0x20 0x20
0x18b: V99 = 0x0
0x18d: V100 = SHA3 0x0 0x40
0x18e: V101 = S[V100]
0x194: JUMP 0xc8
---
Entry stack: [V11, 0xc8, V46]
Stack pops: 2
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x195
[0x195:0x1df]
---
Predecessors: [0xea]
Successors: [0x1e0, 0x1e4]
---
0x195 JUMPDEST
0x196 PUSH1 0x0
0x198 DUP1
0x199 PUSH1 0x0
0x19b CALLER
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP1
0x1ce DUP2
0x1cf MSTORE
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 PUSH1 0x0
0x1d5 SHA3
0x1d6 SLOAD
0x1d7 DUP3
0x1d8 GT
0x1d9 ISZERO
0x1da ISZERO
0x1db ISZERO
0x1dc PUSH2 0x1e4
0x1df JUMPI
---
0x195: JUMPDEST 
0x196: V102 = 0x0
0x199: V103 = 0x0
0x19b: V104 = CALLER
0x19c: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1b2: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1c9: M[0x0] = V108
0x1ca: V109 = 0x20
0x1cc: V110 = ADD 0x20 0x0
0x1cf: M[0x20] = 0x0
0x1d0: V111 = 0x20
0x1d2: V112 = ADD 0x20 0x20
0x1d3: V113 = 0x0
0x1d5: V114 = SHA3 0x0 0x40
0x1d6: V115 = S[V114]
0x1d8: V116 = GT V71 V115
0x1d9: V117 = ISZERO V116
0x1da: V118 = ISZERO V117
0x1db: V119 = ISZERO V118
0x1dc: V120 = 0x1e4
0x1df: JUMPI 0x1e4 V119
---
Entry stack: [V11, 0x129, V68, V71]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x129, V68, V71, 0x0]

================================

Block 0x1e0
[0x1e0:0x1e3]
---
Predecessors: [0x195]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
---
0x1e0: V121 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x129, V68, V71, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x129, V68, V71, 0x0]

================================

Block 0x1e4
[0x1e4:0x234]
---
Predecessors: [0x195]
Successors: [0x379]
---
0x1e4 JUMPDEST
0x1e5 PUSH2 0x235
0x1e8 DUP3
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec CALLER
0x1ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x202 AND
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 AND
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x20
0x21d ADD
0x21e SWAP1
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 PUSH1 0x0
0x226 SHA3
0x227 SLOAD
0x228 PUSH2 0x379
0x22b SWAP1
0x22c SWAP2
0x22d SWAP1
0x22e PUSH4 0xffffffff
0x233 AND
0x234 JUMP
---
0x1e4: JUMPDEST 
0x1e5: V122 = 0x235
0x1e9: V123 = 0x0
0x1ec: V124 = CALLER
0x1ed: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x202: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x203: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x21a: M[0x0] = V128
0x21b: V129 = 0x20
0x21d: V130 = ADD 0x20 0x0
0x220: M[0x20] = 0x0
0x221: V131 = 0x20
0x223: V132 = ADD 0x20 0x20
0x224: V133 = 0x0
0x226: V134 = SHA3 0x0 0x40
0x227: V135 = S[V134]
0x228: V136 = 0x379
0x22e: V137 = 0xffffffff
0x233: V138 = AND 0xffffffff 0x379
0x234: JUMP 0x379
---
Entry stack: [V11, 0x129, V68, V71, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x235, V135, S1]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x235, V135, V71]

================================

Block 0x235
[0x235:0x2c7]
---
Predecessors: [0x387]
Successors: [0x392]
---
0x235 JUMPDEST
0x236 PUSH1 0x0
0x238 DUP1
0x239 CALLER
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 AND
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b SWAP1
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 PUSH1 0x0
0x273 SHA3
0x274 DUP2
0x275 SWAP1
0x276 SSTORE
0x277 POP
0x278 PUSH2 0x2c8
0x27b DUP3
0x27c PUSH1 0x0
0x27e DUP1
0x27f DUP7
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac DUP2
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 PUSH1 0x0
0x2b9 SHA3
0x2ba SLOAD
0x2bb PUSH2 0x392
0x2be SWAP1
0x2bf SWAP2
0x2c0 SWAP1
0x2c1 PUSH4 0xffffffff
0x2c6 AND
0x2c7 JUMP
---
0x235: JUMPDEST 
0x236: V139 = 0x0
0x239: V140 = CALLER
0x23a: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x250: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x267: M[0x0] = V144
0x268: V145 = 0x20
0x26a: V146 = ADD 0x20 0x0
0x26d: M[0x20] = 0x0
0x26e: V147 = 0x20
0x270: V148 = ADD 0x20 0x20
0x271: V149 = 0x0
0x273: V150 = SHA3 0x0 0x40
0x276: S[V150] = V198
0x278: V151 = 0x2c8
0x27c: V152 = 0x0
0x280: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x296: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x2ad: M[0x0] = V156
0x2ae: V157 = 0x20
0x2b0: V158 = ADD 0x20 0x0
0x2b3: M[0x20] = 0x0
0x2b4: V159 = 0x20
0x2b6: V160 = ADD 0x20 0x20
0x2b7: V161 = 0x0
0x2b9: V162 = SHA3 0x0 0x40
0x2ba: V163 = S[V162]
0x2bb: V164 = 0x392
0x2c1: V165 = 0xffffffff
0x2c6: V166 = AND 0xffffffff 0x392
0x2c7: JUMP 0x392
---
Entry stack: [V11, 0x129, V68, V71, 0x0, V198]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x2c8, V163, S2]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x2c8, V163, V71]

================================

Block 0x2c8
[0x2c8:0x378]
---
Predecessors: [0x3a5]
Successors: [0x129]
---
0x2c8 JUMPDEST
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc DUP6
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f8 AND
0x2f9 DUP2
0x2fa MSTORE
0x2fb PUSH1 0x20
0x2fd ADD
0x2fe SWAP1
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 PUSH1 0x0
0x306 SHA3
0x307 DUP2
0x308 SWAP1
0x309 SSTORE
0x30a POP
0x30b DUP3
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 CALLER
0x323 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x338 AND
0x339 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x35a DUP5
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f DUP3
0x360 DUP2
0x361 MSTORE
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP2
0x366 POP
0x367 POP
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c SWAP2
0x36d SUB
0x36e SWAP1
0x36f LOG3
0x370 PUSH1 0x1
0x372 SWAP1
0x373 POP
0x374 SWAP3
0x375 SWAP2
0x376 POP
0x377 POP
0x378 JUMP
---
0x2c8: JUMPDEST 
0x2c9: V167 = 0x0
0x2cd: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x2e3: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2fa: M[0x0] = V171
0x2fb: V172 = 0x20
0x2fd: V173 = ADD 0x20 0x0
0x300: M[0x20] = 0x0
0x301: V174 = 0x20
0x303: V175 = ADD 0x20 0x20
0x304: V176 = 0x0
0x306: V177 = SHA3 0x0 0x40
0x309: S[V177] = V200
0x30c: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x322: V180 = CALLER
0x323: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x338: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x339: V183 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x35b: V184 = 0x40
0x35d: V185 = M[0x40]
0x361: M[V185] = V71
0x362: V186 = 0x20
0x364: V187 = ADD 0x20 V185
0x368: V188 = 0x40
0x36a: V189 = M[0x40]
0x36d: V190 = SUB V187 V189
0x36f: LOG V189 V190 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V182 V179
0x370: V191 = 0x1
0x378: JUMP 0x129
---
Entry stack: [V11, 0x129, V68, V71, 0x0, V200]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x379
[0x379:0x385]
---
Predecessors: [0x1e4]
Successors: [0x386, 0x387]
---
0x379 JUMPDEST
0x37a PUSH1 0x0
0x37c DUP3
0x37d DUP3
0x37e GT
0x37f ISZERO
0x380 ISZERO
0x381 ISZERO
0x382 PUSH2 0x387
0x385 JUMPI
---
0x379: JUMPDEST 
0x37a: V192 = 0x0
0x37e: V193 = GT V71 V135
0x37f: V194 = ISZERO V193
0x380: V195 = ISZERO V194
0x381: V196 = ISZERO V195
0x382: V197 = 0x387
0x385: JUMPI 0x387 V196
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x235, V135, V71]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x235, V135, V71, 0x0]

================================

Block 0x386
[0x386:0x386]
---
Predecessors: [0x379]
Successors: []
---
0x386 INVALID
---
0x386: INVALID 
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x235, V135, V71, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x235, V135, V71, 0x0]

================================

Block 0x387
[0x387:0x391]
---
Predecessors: [0x379]
Successors: [0x235]
---
0x387 JUMPDEST
0x388 DUP2
0x389 DUP4
0x38a SUB
0x38b SWAP1
0x38c POP
0x38d SWAP3
0x38e SWAP2
0x38f POP
0x390 POP
0x391 JUMP
---
0x387: JUMPDEST 
0x38a: V198 = SUB V135 V71
0x391: JUMP 0x235
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x235, V135, V71, 0x0]
Stack pops: 4
Stack additions: [V198]
Exit stack: [V11, 0x129, V68, V71, 0x0, V198]

================================

Block 0x392
[0x392:0x3a3]
---
Predecessors: [0x235]
Successors: [0x3a4, 0x3a5]
---
0x392 JUMPDEST
0x393 PUSH1 0x0
0x395 DUP2
0x396 DUP4
0x397 ADD
0x398 SWAP1
0x399 POP
0x39a DUP3
0x39b DUP2
0x39c LT
0x39d ISZERO
0x39e ISZERO
0x39f ISZERO
0x3a0 PUSH2 0x3a5
0x3a3 JUMPI
---
0x392: JUMPDEST 
0x393: V199 = 0x0
0x397: V200 = ADD V163 V71
0x39c: V201 = LT V200 V163
0x39d: V202 = ISZERO V201
0x39e: V203 = ISZERO V202
0x39f: V204 = ISZERO V203
0x3a0: V205 = 0x3a5
0x3a3: JUMPI 0x3a5 V204
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x2c8, V163, V71]
Stack pops: 2
Stack additions: [S1, S0, V200]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x2c8, V163, V71, V200]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x392]
Successors: []
---
0x3a4 INVALID
---
0x3a4: INVALID 
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x2c8, V163, V71, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x2c8, V163, V71, V200]

================================

Block 0x3a5
[0x3a5:0x3ad]
---
Predecessors: [0x392]
Successors: [0x2c8]
---
0x3a5 JUMPDEST
0x3a6 DUP1
0x3a7 SWAP1
0x3a8 POP
0x3a9 SWAP3
0x3aa SWAP2
0x3ab POP
0x3ac POP
0x3ad JUMP
---
0x3a5: JUMPDEST 
0x3ad: JUMP 0x2c8
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x2c8, V163, V71, V200]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x129, V68, V71, 0x0, V200]

================================

Block 0x3ae
[0x3ae:0x432]
---
Predecessors: []
Successors: [0x433]
---
0x3ae STOP
0x3af LOG1
0x3b0 PUSH6 0x627a7a723058
0x3b7 SHA3
0x3b8 LOG1
0x3b9 MISSING 0xa6
0x3ba MSTORE8
0x3bb SWAP16
0x3bc PUSH5 0x78f5603fb5
0x3c2 MISSING 0xc1
0x3c3 PUSH5 0x9776f999e7
0x3c9 MISSING 0xca
0x3ca EXP
0x3cb PUSH13 0xf518f32616bef924d0df24fc00
0x3d9 MISSING 0x29
0x3da PUSH20 0x0
0x3ef ADDRESS
0x3f0 EQ
0x3f1 PUSH1 0x80
0x3f3 PUSH1 0x40
0x3f5 MSTORE
0x3f6 PUSH1 0x0
0x3f8 DUP1
0x3f9 REVERT
0x3fa STOP
0x3fb LOG1
0x3fc PUSH6 0x627a7a723058
0x403 SHA3
0x404 MISSING 0x2e
0x405 MOD
0x406 LOG1
0x407 PUSH25 0xc2113dd4d705477449decd5e4f9ee7f901ead6431a7596bd65
0x421 SSTORE
0x422 ADDRESS
0x423 PUSH10 0x296080604052600436
0x42e LT
0x42f PUSH2 0xba
0x432 JUMPI
---
0x3ae: STOP 
0x3af: LOG S0 S1 S2
0x3b0: V206 = 0x627a7a723058
0x3b7: V207 = SHA3 0x627a7a723058 S3
0x3b8: LOG V207 S4 S5
0x3b9: MISSING 0xa6
0x3ba: M8[S0] = S1
0x3bc: V208 = 0x78f5603fb5
0x3c2: MISSING 0xc1
0x3c3: V209 = 0x9776f999e7
0x3c9: MISSING 0xca
0x3ca: V210 = EXP S0 S1
0x3cb: V211 = 0xf518f32616bef924d0df24fc00
0x3d9: MISSING 0x29
0x3da: V212 = 0x0
0x3ef: V213 = ADDRESS
0x3f0: V214 = EQ V213 0x0
0x3f1: V215 = 0x80
0x3f3: V216 = 0x40
0x3f5: M[0x40] = 0x80
0x3f6: V217 = 0x0
0x3f9: REVERT 0x0 0x0
0x3fa: STOP 
0x3fb: LOG S0 S1 S2
0x3fc: V218 = 0x627a7a723058
0x403: V219 = SHA3 0x627a7a723058 S3
0x404: MISSING 0x2e
0x405: V220 = MOD S0 S1
0x406: LOG V220 S2 S3
0x407: V221 = 0xc2113dd4d705477449decd5e4f9ee7f901ead6431a7596bd65
0x421: S[0xc2113dd4d705477449decd5e4f9ee7f901ead6431a7596bd65] = S4
0x422: V222 = ADDRESS
0x423: V223 = 0x296080604052600436
0x42e: V224 = LT 0x296080604052600436 V222
0x42f: V225 = 0xba
0x432: THROWI V224
---
Entry stack: []
Stack pops: 0
Stack additions: [0x78f5603fb5, S18, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S2, 0x9776f999e7, 0xf518f32616bef924d0df24fc00, V210, V214, V219]
Exit stack: []

================================

Block 0x433
[0x433:0x466]
---
Predecessors: [0x3ae]
Successors: [0x467]
---
0x433 PUSH1 0x0
0x435 CALLDATALOAD
0x436 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x454 SWAP1
0x455 DIV
0x456 PUSH4 0xffffffff
0x45b AND
0x45c DUP1
0x45d PUSH4 0x3efb5c4
0x462 EQ
0x463 PUSH2 0xbf
0x466 JUMPI
---
0x433: V226 = 0x0
0x435: V227 = CALLDATALOAD 0x0
0x436: V228 = 0x100000000000000000000000000000000000000000000000000000000
0x455: V229 = DIV V227 0x100000000000000000000000000000000000000000000000000000000
0x456: V230 = 0xffffffff
0x45b: V231 = AND 0xffffffff V229
0x45d: V232 = 0x3efb5c4
0x462: V233 = EQ 0x3efb5c4 V231
0x463: V234 = 0xbf
0x466: THROWI V233
---
Entry stack: []
Stack pops: 0
Stack additions: [V231]
Exit stack: [V231]

================================

Block 0x467
[0x467:0x471]
---
Predecessors: [0x433]
Successors: [0x472]
---
0x467 DUP1
0x468 PUSH4 0x6fdde03
0x46d EQ
0x46e PUSH2 0x124
0x471 JUMPI
---
0x468: V235 = 0x6fdde03
0x46d: V236 = EQ 0x6fdde03 V231
0x46e: V237 = 0x124
0x471: THROWI V236
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x472
[0x472:0x47c]
---
Predecessors: [0x467]
Successors: [0x47d]
---
0x472 DUP1
0x473 PUSH4 0x18160ddd
0x478 EQ
0x479 PUSH2 0x1b4
0x47c JUMPI
---
0x473: V238 = 0x18160ddd
0x478: V239 = EQ 0x18160ddd V231
0x479: V240 = 0x1b4
0x47c: THROWI V239
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x47d
[0x47d:0x487]
---
Predecessors: [0x472]
Successors: [0x488]
---
0x47d DUP1
0x47e PUSH4 0x2ff2e9dc
0x483 EQ
0x484 PUSH2 0x1df
0x487 JUMPI
---
0x47e: V241 = 0x2ff2e9dc
0x483: V242 = EQ 0x2ff2e9dc V231
0x484: V243 = 0x1df
0x487: THROWI V242
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x488
[0x488:0x492]
---
Predecessors: [0x47d]
Successors: [0x493]
---
0x488 DUP1
0x489 PUSH4 0x313ce567
0x48e EQ
0x48f PUSH2 0x20a
0x492 JUMPI
---
0x489: V244 = 0x313ce567
0x48e: V245 = EQ 0x313ce567 V231
0x48f: V246 = 0x20a
0x492: THROWI V245
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x493
[0x493:0x49d]
---
Predecessors: [0x488]
Successors: [0x49e]
---
0x493 DUP1
0x494 PUSH4 0x3e460a84
0x499 EQ
0x49a PUSH2 0x23b
0x49d JUMPI
---
0x494: V247 = 0x3e460a84
0x499: V248 = EQ 0x3e460a84 V231
0x49a: V249 = 0x23b
0x49d: THROWI V248
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x49e
[0x49e:0x4a8]
---
Predecessors: [0x493]
Successors: [0x4a9]
---
0x49e DUP1
0x49f PUSH4 0x645e6ddc
0x4a4 EQ
0x4a5 PUSH2 0x280
0x4a8 JUMPI
---
0x49f: V250 = 0x645e6ddc
0x4a4: V251 = EQ 0x645e6ddc V231
0x4a5: V252 = 0x280
0x4a8: THROWI V251
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x4a9
[0x4a9:0x4b3]
---
Predecessors: [0x49e]
Successors: [0x4b4]
---
0x4a9 DUP1
0x4aa PUSH4 0x70a08231
0x4af EQ
0x4b0 PUSH2 0x2d7
0x4b3 JUMPI
---
0x4aa: V253 = 0x70a08231
0x4af: V254 = EQ 0x70a08231 V231
0x4b0: V255 = 0x2d7
0x4b3: THROWI V254
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x4b4
[0x4b4:0x4be]
---
Predecessors: [0x4a9]
Successors: [0x4bf]
---
0x4b4 DUP1
0x4b5 PUSH4 0x82394694
0x4ba EQ
0x4bb PUSH2 0x32e
0x4be JUMPI
---
0x4b5: V256 = 0x82394694
0x4ba: V257 = EQ 0x82394694 V231
0x4bb: V258 = 0x32e
0x4be: THROWI V257
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x4bf
[0x4bf:0x4c9]
---
Predecessors: [0x4b4]
Successors: [0x4ca]
---
0x4bf DUP1
0x4c0 PUSH4 0x8da5cb5b
0x4c5 EQ
0x4c6 PUSH2 0x389
0x4c9 JUMPI
---
0x4c0: V259 = 0x8da5cb5b
0x4c5: V260 = EQ 0x8da5cb5b V231
0x4c6: V261 = 0x389
0x4c9: THROWI V260
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x4ca
[0x4ca:0x4d4]
---
Predecessors: [0x4bf]
Successors: [0x4d5]
---
0x4ca DUP1
0x4cb PUSH4 0x95d89b41
0x4d0 EQ
0x4d1 PUSH2 0x3e0
0x4d4 JUMPI
---
0x4cb: V262 = 0x95d89b41
0x4d0: V263 = EQ 0x95d89b41 V231
0x4d1: V264 = 0x3e0
0x4d4: THROWI V263
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x4d5
[0x4d5:0x4df]
---
Predecessors: [0x4ca]
Successors: [0x4e0]
---
0x4d5 DUP1
0x4d6 PUSH4 0xa9059cbb
0x4db EQ
0x4dc PUSH2 0x470
0x4df JUMPI
---
0x4d6: V265 = 0xa9059cbb
0x4db: V266 = EQ 0xa9059cbb V231
0x4dc: V267 = 0x470
0x4df: THROWI V266
---
Entry stack: [V231]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V231]

================================

Block 0x4e0
[0x4e0:0x4ec]
---
Predecessors: [0x4d5]
Successors: [0x4ed]
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x0
0x4e3 DUP1
0x4e4 REVERT
0x4e5 JUMPDEST
0x4e6 CALLVALUE
0x4e7 DUP1
0x4e8 ISZERO
0x4e9 PUSH2 0xcb
0x4ec JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V268 = 0x0
0x4e4: REVERT 0x0 0x0
0x4e5: JUMPDEST 
0x4e6: V269 = CALLVALUE
0x4e8: V270 = ISZERO V269
0x4e9: V271 = 0xcb
0x4ec: THROWI V270
---
Entry stack: [V231]
Stack pops: 0
Stack additions: [V269]
Exit stack: []

================================

Block 0x4ed
[0x4ed:0x551]
---
Predecessors: [0x4e0]
Successors: [0x552]
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
0x4f1 JUMPDEST
0x4f2 POP
0x4f3 PUSH2 0x10a
0x4f6 PUSH1 0x4
0x4f8 DUP1
0x4f9 CALLDATASIZE
0x4fa SUB
0x4fb DUP2
0x4fc ADD
0x4fd SWAP1
0x4fe DUP1
0x4ff DUP1
0x500 CALLDATALOAD
0x501 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x516 AND
0x517 SWAP1
0x518 PUSH1 0x20
0x51a ADD
0x51b SWAP1
0x51c SWAP3
0x51d SWAP2
0x51e SWAP1
0x51f DUP1
0x520 CALLDATALOAD
0x521 SWAP1
0x522 PUSH1 0x20
0x524 ADD
0x525 SWAP1
0x526 SWAP3
0x527 SWAP2
0x528 SWAP1
0x529 POP
0x52a POP
0x52b POP
0x52c PUSH2 0x4d5
0x52f JUMP
0x530 JUMPDEST
0x531 PUSH1 0x40
0x533 MLOAD
0x534 DUP1
0x535 DUP3
0x536 ISZERO
0x537 ISZERO
0x538 ISZERO
0x539 ISZERO
0x53a DUP2
0x53b MSTORE
0x53c PUSH1 0x20
0x53e ADD
0x53f SWAP2
0x540 POP
0x541 POP
0x542 PUSH1 0x40
0x544 MLOAD
0x545 DUP1
0x546 SWAP2
0x547 SUB
0x548 SWAP1
0x549 RETURN
0x54a JUMPDEST
0x54b CALLVALUE
0x54c DUP1
0x54d ISZERO
0x54e PUSH2 0x130
0x551 JUMPI
---
0x4ed: V272 = 0x0
0x4f0: REVERT 0x0 0x0
0x4f1: JUMPDEST 
0x4f3: V273 = 0x10a
0x4f6: V274 = 0x4
0x4f9: V275 = CALLDATASIZE
0x4fa: V276 = SUB V275 0x4
0x4fc: V277 = ADD 0x4 V276
0x500: V278 = CALLDATALOAD 0x4
0x501: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x516: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x518: V281 = 0x20
0x51a: V282 = ADD 0x20 0x4
0x520: V283 = CALLDATALOAD 0x24
0x522: V284 = 0x20
0x524: V285 = ADD 0x20 0x24
0x52c: V286 = 0x4d5
0x52f: THROW 
0x530: JUMPDEST 
0x531: V287 = 0x40
0x533: V288 = M[0x40]
0x536: V289 = ISZERO S0
0x537: V290 = ISZERO V289
0x538: V291 = ISZERO V290
0x539: V292 = ISZERO V291
0x53b: M[V288] = V292
0x53c: V293 = 0x20
0x53e: V294 = ADD 0x20 V288
0x542: V295 = 0x40
0x544: V296 = M[0x40]
0x547: V297 = SUB V294 V296
0x549: RETURN V296 V297
0x54a: JUMPDEST 
0x54b: V298 = CALLVALUE
0x54d: V299 = ISZERO V298
0x54e: V300 = 0x130
0x551: THROWI V299
---
Entry stack: [V269]
Stack pops: 0
Stack additions: [V283, V280, 0x10a, V298]
Exit stack: []

================================

Block 0x552
[0x552:0x583]
---
Predecessors: [0x4ed]
Successors: [0x584]
---
0x552 PUSH1 0x0
0x554 DUP1
0x555 REVERT
0x556 JUMPDEST
0x557 POP
0x558 PUSH2 0x139
0x55b PUSH2 0x681
0x55e JUMP
0x55f JUMPDEST
0x560 PUSH1 0x40
0x562 MLOAD
0x563 DUP1
0x564 DUP1
0x565 PUSH1 0x20
0x567 ADD
0x568 DUP3
0x569 DUP2
0x56a SUB
0x56b DUP3
0x56c MSTORE
0x56d DUP4
0x56e DUP2
0x56f DUP2
0x570 MLOAD
0x571 DUP2
0x572 MSTORE
0x573 PUSH1 0x20
0x575 ADD
0x576 SWAP2
0x577 POP
0x578 DUP1
0x579 MLOAD
0x57a SWAP1
0x57b PUSH1 0x20
0x57d ADD
0x57e SWAP1
0x57f DUP1
0x580 DUP4
0x581 DUP4
0x582 PUSH1 0x0
---
0x552: V301 = 0x0
0x555: REVERT 0x0 0x0
0x556: JUMPDEST 
0x558: V302 = 0x139
0x55b: V303 = 0x681
0x55e: THROW 
0x55f: JUMPDEST 
0x560: V304 = 0x40
0x562: V305 = M[0x40]
0x565: V306 = 0x20
0x567: V307 = ADD 0x20 V305
0x56a: V308 = SUB V307 V305
0x56c: M[V305] = V308
0x570: V309 = M[S0]
0x572: M[V307] = V309
0x573: V310 = 0x20
0x575: V311 = ADD 0x20 V307
0x579: V312 = M[S0]
0x57b: V313 = 0x20
0x57d: V314 = ADD 0x20 S0
0x582: V315 = 0x0
---
Entry stack: [V298]
Stack pops: 0
Stack additions: [0x139, 0x0, V314, V311, V312, V312, V314, V311, V305, V305, S0]
Exit stack: []

================================

Block 0x584
[0x584:0x58c]
---
Predecessors: [0x552]
Successors: [0x58d]
---
0x584 JUMPDEST
0x585 DUP4
0x586 DUP2
0x587 LT
0x588 ISZERO
0x589 PUSH2 0x179
0x58c JUMPI
---
0x584: JUMPDEST 
0x587: V316 = LT 0x0 V312
0x588: V317 = ISZERO V316
0x589: V318 = 0x179
0x58c: THROWI V317
---
Entry stack: [S9, V305, V305, V311, V314, V312, V312, V311, V314, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V305, V305, V311, V314, V312, V312, V311, V314, 0x0]

================================

Block 0x58d
[0x58d:0x5b2]
---
Predecessors: [0x584]
Successors: [0x5b3]
---
0x58d DUP1
0x58e DUP3
0x58f ADD
0x590 MLOAD
0x591 DUP2
0x592 DUP5
0x593 ADD
0x594 MSTORE
0x595 PUSH1 0x20
0x597 DUP2
0x598 ADD
0x599 SWAP1
0x59a POP
0x59b PUSH2 0x15e
0x59e JUMP
0x59f JUMPDEST
0x5a0 POP
0x5a1 POP
0x5a2 POP
0x5a3 POP
0x5a4 SWAP1
0x5a5 POP
0x5a6 SWAP1
0x5a7 DUP2
0x5a8 ADD
0x5a9 SWAP1
0x5aa PUSH1 0x1f
0x5ac AND
0x5ad DUP1
0x5ae ISZERO
0x5af PUSH2 0x1a6
0x5b2 JUMPI
---
0x58f: V319 = ADD V314 0x0
0x590: V320 = M[V319]
0x593: V321 = ADD V311 0x0
0x594: M[V321] = V320
0x595: V322 = 0x20
0x598: V323 = ADD 0x0 0x20
0x59b: V324 = 0x15e
0x59e: THROW 
0x59f: JUMPDEST 
0x5a8: V325 = ADD S4 S6
0x5aa: V326 = 0x1f
0x5ac: V327 = AND 0x1f S4
0x5ae: V328 = ISZERO V327
0x5af: V329 = 0x1a6
0x5b2: THROWI V328
---
Entry stack: [S9, V305, V305, V311, V314, V312, V312, V311, V314, 0x0]
Stack pops: 3
Stack additions: [V327, V325]
Exit stack: []

================================

Block 0x5b3
[0x5b3:0x5cb]
---
Predecessors: [0x58d]
Successors: [0x5cc]
---
0x5b3 DUP1
0x5b4 DUP3
0x5b5 SUB
0x5b6 DUP1
0x5b7 MLOAD
0x5b8 PUSH1 0x1
0x5ba DUP4
0x5bb PUSH1 0x20
0x5bd SUB
0x5be PUSH2 0x100
0x5c1 EXP
0x5c2 SUB
0x5c3 NOT
0x5c4 AND
0x5c5 DUP2
0x5c6 MSTORE
0x5c7 PUSH1 0x20
0x5c9 ADD
0x5ca SWAP2
0x5cb POP
---
0x5b5: V330 = SUB V325 V327
0x5b7: V331 = M[V330]
0x5b8: V332 = 0x1
0x5bb: V333 = 0x20
0x5bd: V334 = SUB 0x20 V327
0x5be: V335 = 0x100
0x5c1: V336 = EXP 0x100 V334
0x5c2: V337 = SUB V336 0x1
0x5c3: V338 = NOT V337
0x5c4: V339 = AND V338 V331
0x5c6: M[V330] = V339
0x5c7: V340 = 0x20
0x5c9: V341 = ADD 0x20 V330
---
Entry stack: [V325, V327]
Stack pops: 2
Stack additions: [V341, S0]
Exit stack: [V341, V327]

================================

Block 0x5cc
[0x5cc:0x5e1]
---
Predecessors: [0x5b3]
Successors: [0x5e2]
---
0x5cc JUMPDEST
0x5cd POP
0x5ce SWAP3
0x5cf POP
0x5d0 POP
0x5d1 POP
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 DUP1
0x5d6 SWAP2
0x5d7 SUB
0x5d8 SWAP1
0x5d9 RETURN
0x5da JUMPDEST
0x5db CALLVALUE
0x5dc DUP1
0x5dd ISZERO
0x5de PUSH2 0x1c0
0x5e1 JUMPI
---
0x5cc: JUMPDEST 
0x5d2: V342 = 0x40
0x5d4: V343 = M[0x40]
0x5d7: V344 = SUB V341 V343
0x5d9: RETURN V343 V344
0x5da: JUMPDEST 
0x5db: V345 = CALLVALUE
0x5dd: V346 = ISZERO V345
0x5de: V347 = 0x1c0
0x5e1: THROWI V346
---
Entry stack: [V341, V327]
Stack pops: 10
Stack additions: [V345]
Exit stack: []

================================

Block 0x5e2
[0x5e2:0x60c]
---
Predecessors: [0x5cc]
Successors: [0x60d]
---
0x5e2 PUSH1 0x0
0x5e4 DUP1
0x5e5 REVERT
0x5e6 JUMPDEST
0x5e7 POP
0x5e8 PUSH2 0x1c9
0x5eb PUSH2 0x6ba
0x5ee JUMP
0x5ef JUMPDEST
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 DUP1
0x5f4 DUP3
0x5f5 DUP2
0x5f6 MSTORE
0x5f7 PUSH1 0x20
0x5f9 ADD
0x5fa SWAP2
0x5fb POP
0x5fc POP
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 SWAP2
0x602 SUB
0x603 SWAP1
0x604 RETURN
0x605 JUMPDEST
0x606 CALLVALUE
0x607 DUP1
0x608 ISZERO
0x609 PUSH2 0x1eb
0x60c JUMPI
---
0x5e2: V348 = 0x0
0x5e5: REVERT 0x0 0x0
0x5e6: JUMPDEST 
0x5e8: V349 = 0x1c9
0x5eb: V350 = 0x6ba
0x5ee: THROW 
0x5ef: JUMPDEST 
0x5f0: V351 = 0x40
0x5f2: V352 = M[0x40]
0x5f6: M[V352] = S0
0x5f7: V353 = 0x20
0x5f9: V354 = ADD 0x20 V352
0x5fd: V355 = 0x40
0x5ff: V356 = M[0x40]
0x602: V357 = SUB V354 V356
0x604: RETURN V356 V357
0x605: JUMPDEST 
0x606: V358 = CALLVALUE
0x608: V359 = ISZERO V358
0x609: V360 = 0x1eb
0x60c: THROWI V359
---
Entry stack: [V345]
Stack pops: 0
Stack additions: [0x1c9, V358]
Exit stack: []

================================

Block 0x60d
[0x60d:0x637]
---
Predecessors: [0x5e2]
Successors: [0x638]
---
0x60d PUSH1 0x0
0x60f DUP1
0x610 REVERT
0x611 JUMPDEST
0x612 POP
0x613 PUSH2 0x1f4
0x616 PUSH2 0x6c4
0x619 JUMP
0x61a JUMPDEST
0x61b PUSH1 0x40
0x61d MLOAD
0x61e DUP1
0x61f DUP3
0x620 DUP2
0x621 MSTORE
0x622 PUSH1 0x20
0x624 ADD
0x625 SWAP2
0x626 POP
0x627 POP
0x628 PUSH1 0x40
0x62a MLOAD
0x62b DUP1
0x62c SWAP2
0x62d SUB
0x62e SWAP1
0x62f RETURN
0x630 JUMPDEST
0x631 CALLVALUE
0x632 DUP1
0x633 ISZERO
0x634 PUSH2 0x216
0x637 JUMPI
---
0x60d: V361 = 0x0
0x610: REVERT 0x0 0x0
0x611: JUMPDEST 
0x613: V362 = 0x1f4
0x616: V363 = 0x6c4
0x619: THROW 
0x61a: JUMPDEST 
0x61b: V364 = 0x40
0x61d: V365 = M[0x40]
0x621: M[V365] = S0
0x622: V366 = 0x20
0x624: V367 = ADD 0x20 V365
0x628: V368 = 0x40
0x62a: V369 = M[0x40]
0x62d: V370 = SUB V367 V369
0x62f: RETURN V369 V370
0x630: JUMPDEST 
0x631: V371 = CALLVALUE
0x633: V372 = ISZERO V371
0x634: V373 = 0x216
0x637: THROWI V372
---
Entry stack: [V358]
Stack pops: 0
Stack additions: [0x1f4, V371]
Exit stack: []

================================

Block 0x638
[0x638:0x668]
---
Predecessors: [0x60d]
Successors: [0x669]
---
0x638 PUSH1 0x0
0x63a DUP1
0x63b REVERT
0x63c JUMPDEST
0x63d POP
0x63e PUSH2 0x21f
0x641 PUSH2 0x6d5
0x644 JUMP
0x645 JUMPDEST
0x646 PUSH1 0x40
0x648 MLOAD
0x649 DUP1
0x64a DUP3
0x64b PUSH1 0xff
0x64d AND
0x64e PUSH1 0xff
0x650 AND
0x651 DUP2
0x652 MSTORE
0x653 PUSH1 0x20
0x655 ADD
0x656 SWAP2
0x657 POP
0x658 POP
0x659 PUSH1 0x40
0x65b MLOAD
0x65c DUP1
0x65d SWAP2
0x65e SUB
0x65f SWAP1
0x660 RETURN
0x661 JUMPDEST
0x662 CALLVALUE
0x663 DUP1
0x664 ISZERO
0x665 PUSH2 0x247
0x668 JUMPI
---
0x638: V374 = 0x0
0x63b: REVERT 0x0 0x0
0x63c: JUMPDEST 
0x63e: V375 = 0x21f
0x641: V376 = 0x6d5
0x644: THROW 
0x645: JUMPDEST 
0x646: V377 = 0x40
0x648: V378 = M[0x40]
0x64b: V379 = 0xff
0x64d: V380 = AND 0xff S0
0x64e: V381 = 0xff
0x650: V382 = AND 0xff V380
0x652: M[V378] = V382
0x653: V383 = 0x20
0x655: V384 = ADD 0x20 V378
0x659: V385 = 0x40
0x65b: V386 = M[0x40]
0x65e: V387 = SUB V384 V386
0x660: RETURN V386 V387
0x661: JUMPDEST 
0x662: V388 = CALLVALUE
0x664: V389 = ISZERO V388
0x665: V390 = 0x247
0x668: THROWI V389
---
Entry stack: [V371]
Stack pops: 0
Stack additions: [0x21f, V388]
Exit stack: []

================================

Block 0x669
[0x669:0x6ad]
---
Predecessors: [0x638]
Successors: [0x6ae]
---
0x669 PUSH1 0x0
0x66b DUP1
0x66c REVERT
0x66d JUMPDEST
0x66e POP
0x66f PUSH2 0x266
0x672 PUSH1 0x4
0x674 DUP1
0x675 CALLDATASIZE
0x676 SUB
0x677 DUP2
0x678 ADD
0x679 SWAP1
0x67a DUP1
0x67b DUP1
0x67c CALLDATALOAD
0x67d SWAP1
0x67e PUSH1 0x20
0x680 ADD
0x681 SWAP1
0x682 SWAP3
0x683 SWAP2
0x684 SWAP1
0x685 POP
0x686 POP
0x687 POP
0x688 PUSH2 0x6da
0x68b JUMP
0x68c JUMPDEST
0x68d PUSH1 0x40
0x68f MLOAD
0x690 DUP1
0x691 DUP3
0x692 ISZERO
0x693 ISZERO
0x694 ISZERO
0x695 ISZERO
0x696 DUP2
0x697 MSTORE
0x698 PUSH1 0x20
0x69a ADD
0x69b SWAP2
0x69c POP
0x69d POP
0x69e PUSH1 0x40
0x6a0 MLOAD
0x6a1 DUP1
0x6a2 SWAP2
0x6a3 SUB
0x6a4 SWAP1
0x6a5 RETURN
0x6a6 JUMPDEST
0x6a7 CALLVALUE
0x6a8 DUP1
0x6a9 ISZERO
0x6aa PUSH2 0x28c
0x6ad JUMPI
---
0x669: V391 = 0x0
0x66c: REVERT 0x0 0x0
0x66d: JUMPDEST 
0x66f: V392 = 0x266
0x672: V393 = 0x4
0x675: V394 = CALLDATASIZE
0x676: V395 = SUB V394 0x4
0x678: V396 = ADD 0x4 V395
0x67c: V397 = CALLDATALOAD 0x4
0x67e: V398 = 0x20
0x680: V399 = ADD 0x20 0x4
0x688: V400 = 0x6da
0x68b: THROW 
0x68c: JUMPDEST 
0x68d: V401 = 0x40
0x68f: V402 = M[0x40]
0x692: V403 = ISZERO S0
0x693: V404 = ISZERO V403
0x694: V405 = ISZERO V404
0x695: V406 = ISZERO V405
0x697: M[V402] = V406
0x698: V407 = 0x20
0x69a: V408 = ADD 0x20 V402
0x69e: V409 = 0x40
0x6a0: V410 = M[0x40]
0x6a3: V411 = SUB V408 V410
0x6a5: RETURN V410 V411
0x6a6: JUMPDEST 
0x6a7: V412 = CALLVALUE
0x6a9: V413 = ISZERO V412
0x6aa: V414 = 0x28c
0x6ad: THROWI V413
---
Entry stack: [V388]
Stack pops: 0
Stack additions: [V397, 0x266, V412]
Exit stack: []

================================

Block 0x6ae
[0x6ae:0x704]
---
Predecessors: [0x669]
Successors: [0x705]
---
0x6ae PUSH1 0x0
0x6b0 DUP1
0x6b1 REVERT
0x6b2 JUMPDEST
0x6b3 POP
0x6b4 PUSH2 0x2c1
0x6b7 PUSH1 0x4
0x6b9 DUP1
0x6ba CALLDATASIZE
0x6bb SUB
0x6bc DUP2
0x6bd ADD
0x6be SWAP1
0x6bf DUP1
0x6c0 DUP1
0x6c1 CALLDATALOAD
0x6c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d7 AND
0x6d8 SWAP1
0x6d9 PUSH1 0x20
0x6db ADD
0x6dc SWAP1
0x6dd SWAP3
0x6de SWAP2
0x6df SWAP1
0x6e0 POP
0x6e1 POP
0x6e2 POP
0x6e3 PUSH2 0x9f8
0x6e6 JUMP
0x6e7 JUMPDEST
0x6e8 PUSH1 0x40
0x6ea MLOAD
0x6eb DUP1
0x6ec DUP3
0x6ed DUP2
0x6ee MSTORE
0x6ef PUSH1 0x20
0x6f1 ADD
0x6f2 SWAP2
0x6f3 POP
0x6f4 POP
0x6f5 PUSH1 0x40
0x6f7 MLOAD
0x6f8 DUP1
0x6f9 SWAP2
0x6fa SUB
0x6fb SWAP1
0x6fc RETURN
0x6fd JUMPDEST
0x6fe CALLVALUE
0x6ff DUP1
0x700 ISZERO
0x701 PUSH2 0x2e3
0x704 JUMPI
---
0x6ae: V415 = 0x0
0x6b1: REVERT 0x0 0x0
0x6b2: JUMPDEST 
0x6b4: V416 = 0x2c1
0x6b7: V417 = 0x4
0x6ba: V418 = CALLDATASIZE
0x6bb: V419 = SUB V418 0x4
0x6bd: V420 = ADD 0x4 V419
0x6c1: V421 = CALLDATALOAD 0x4
0x6c2: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d7: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x6d9: V424 = 0x20
0x6db: V425 = ADD 0x20 0x4
0x6e3: V426 = 0x9f8
0x6e6: THROW 
0x6e7: JUMPDEST 
0x6e8: V427 = 0x40
0x6ea: V428 = M[0x40]
0x6ee: M[V428] = S0
0x6ef: V429 = 0x20
0x6f1: V430 = ADD 0x20 V428
0x6f5: V431 = 0x40
0x6f7: V432 = M[0x40]
0x6fa: V433 = SUB V430 V432
0x6fc: RETURN V432 V433
0x6fd: JUMPDEST 
0x6fe: V434 = CALLVALUE
0x700: V435 = ISZERO V434
0x701: V436 = 0x2e3
0x704: THROWI V435
---
Entry stack: [V412]
Stack pops: 0
Stack additions: [V423, 0x2c1, V434]
Exit stack: []

================================

Block 0x705
[0x705:0x75b]
---
Predecessors: [0x6ae]
Successors: [0x75c]
---
0x705 PUSH1 0x0
0x707 DUP1
0x708 REVERT
0x709 JUMPDEST
0x70a POP
0x70b PUSH2 0x318
0x70e PUSH1 0x4
0x710 DUP1
0x711 CALLDATASIZE
0x712 SUB
0x713 DUP2
0x714 ADD
0x715 SWAP1
0x716 DUP1
0x717 DUP1
0x718 CALLDATALOAD
0x719 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72e AND
0x72f SWAP1
0x730 PUSH1 0x20
0x732 ADD
0x733 SWAP1
0x734 SWAP3
0x735 SWAP2
0x736 SWAP1
0x737 POP
0x738 POP
0x739 POP
0x73a PUSH2 0xa41
0x73d JUMP
0x73e JUMPDEST
0x73f PUSH1 0x40
0x741 MLOAD
0x742 DUP1
0x743 DUP3
0x744 DUP2
0x745 MSTORE
0x746 PUSH1 0x20
0x748 ADD
0x749 SWAP2
0x74a POP
0x74b POP
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP1
0x750 SWAP2
0x751 SUB
0x752 SWAP1
0x753 RETURN
0x754 JUMPDEST
0x755 CALLVALUE
0x756 DUP1
0x757 ISZERO
0x758 PUSH2 0x33a
0x75b JUMPI
---
0x705: V437 = 0x0
0x708: REVERT 0x0 0x0
0x709: JUMPDEST 
0x70b: V438 = 0x318
0x70e: V439 = 0x4
0x711: V440 = CALLDATASIZE
0x712: V441 = SUB V440 0x4
0x714: V442 = ADD 0x4 V441
0x718: V443 = CALLDATALOAD 0x4
0x719: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x72e: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x730: V446 = 0x20
0x732: V447 = ADD 0x20 0x4
0x73a: V448 = 0xa41
0x73d: THROW 
0x73e: JUMPDEST 
0x73f: V449 = 0x40
0x741: V450 = M[0x40]
0x745: M[V450] = S0
0x746: V451 = 0x20
0x748: V452 = ADD 0x20 V450
0x74c: V453 = 0x40
0x74e: V454 = M[0x40]
0x751: V455 = SUB V452 V454
0x753: RETURN V454 V455
0x754: JUMPDEST 
0x755: V456 = CALLVALUE
0x757: V457 = ISZERO V456
0x758: V458 = 0x33a
0x75b: THROWI V457
---
Entry stack: [V434]
Stack pops: 0
Stack additions: [V445, 0x318, V456]
Exit stack: []

================================

Block 0x75c
[0x75c:0x7b6]
---
Predecessors: [0x705]
Successors: [0x7b7]
---
0x75c PUSH1 0x0
0x75e DUP1
0x75f REVERT
0x760 JUMPDEST
0x761 POP
0x762 PUSH2 0x36f
0x765 PUSH1 0x4
0x767 DUP1
0x768 CALLDATASIZE
0x769 SUB
0x76a DUP2
0x76b ADD
0x76c SWAP1
0x76d DUP1
0x76e DUP1
0x76f CALLDATALOAD
0x770 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x785 AND
0x786 SWAP1
0x787 PUSH1 0x20
0x789 ADD
0x78a SWAP1
0x78b SWAP3
0x78c SWAP2
0x78d SWAP1
0x78e POP
0x78f POP
0x790 POP
0x791 PUSH2 0xa89
0x794 JUMP
0x795 JUMPDEST
0x796 PUSH1 0x40
0x798 MLOAD
0x799 DUP1
0x79a DUP3
0x79b ISZERO
0x79c ISZERO
0x79d ISZERO
0x79e ISZERO
0x79f DUP2
0x7a0 MSTORE
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 SWAP2
0x7a5 POP
0x7a6 POP
0x7a7 PUSH1 0x40
0x7a9 MLOAD
0x7aa DUP1
0x7ab SWAP2
0x7ac SUB
0x7ad SWAP1
0x7ae RETURN
0x7af JUMPDEST
0x7b0 CALLVALUE
0x7b1 DUP1
0x7b2 ISZERO
0x7b3 PUSH2 0x395
0x7b6 JUMPI
---
0x75c: V459 = 0x0
0x75f: REVERT 0x0 0x0
0x760: JUMPDEST 
0x762: V460 = 0x36f
0x765: V461 = 0x4
0x768: V462 = CALLDATASIZE
0x769: V463 = SUB V462 0x4
0x76b: V464 = ADD 0x4 V463
0x76f: V465 = CALLDATALOAD 0x4
0x770: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x785: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x787: V468 = 0x20
0x789: V469 = ADD 0x20 0x4
0x791: V470 = 0xa89
0x794: THROW 
0x795: JUMPDEST 
0x796: V471 = 0x40
0x798: V472 = M[0x40]
0x79b: V473 = ISZERO S0
0x79c: V474 = ISZERO V473
0x79d: V475 = ISZERO V474
0x79e: V476 = ISZERO V475
0x7a0: M[V472] = V476
0x7a1: V477 = 0x20
0x7a3: V478 = ADD 0x20 V472
0x7a7: V479 = 0x40
0x7a9: V480 = M[0x40]
0x7ac: V481 = SUB V478 V480
0x7ae: RETURN V480 V481
0x7af: JUMPDEST 
0x7b0: V482 = CALLVALUE
0x7b2: V483 = ISZERO V482
0x7b3: V484 = 0x395
0x7b6: THROWI V483
---
Entry stack: [V456]
Stack pops: 0
Stack additions: [V467, 0x36f, V482]
Exit stack: []

================================

Block 0x7b7
[0x7b7:0x80d]
---
Predecessors: [0x75c]
Successors: [0x80e]
---
0x7b7 PUSH1 0x0
0x7b9 DUP1
0x7ba REVERT
0x7bb JUMPDEST
0x7bc POP
0x7bd PUSH2 0x39e
0x7c0 PUSH2 0xb35
0x7c3 JUMP
0x7c4 JUMPDEST
0x7c5 PUSH1 0x40
0x7c7 MLOAD
0x7c8 DUP1
0x7c9 DUP3
0x7ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7df AND
0x7e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f5 AND
0x7f6 DUP2
0x7f7 MSTORE
0x7f8 PUSH1 0x20
0x7fa ADD
0x7fb SWAP2
0x7fc POP
0x7fd POP
0x7fe PUSH1 0x40
0x800 MLOAD
0x801 DUP1
0x802 SWAP2
0x803 SUB
0x804 SWAP1
0x805 RETURN
0x806 JUMPDEST
0x807 CALLVALUE
0x808 DUP1
0x809 ISZERO
0x80a PUSH2 0x3ec
0x80d JUMPI
---
0x7b7: V485 = 0x0
0x7ba: REVERT 0x0 0x0
0x7bb: JUMPDEST 
0x7bd: V486 = 0x39e
0x7c0: V487 = 0xb35
0x7c3: THROW 
0x7c4: JUMPDEST 
0x7c5: V488 = 0x40
0x7c7: V489 = M[0x40]
0x7ca: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x7df: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7e0: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f5: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x7f7: M[V489] = V493
0x7f8: V494 = 0x20
0x7fa: V495 = ADD 0x20 V489
0x7fe: V496 = 0x40
0x800: V497 = M[0x40]
0x803: V498 = SUB V495 V497
0x805: RETURN V497 V498
0x806: JUMPDEST 
0x807: V499 = CALLVALUE
0x809: V500 = ISZERO V499
0x80a: V501 = 0x3ec
0x80d: THROWI V500
---
Entry stack: [V482]
Stack pops: 0
Stack additions: [0x39e, V499]
Exit stack: []

================================

Block 0x80e
[0x80e:0x83f]
---
Predecessors: [0x7b7]
Successors: [0x840]
---
0x80e PUSH1 0x0
0x810 DUP1
0x811 REVERT
0x812 JUMPDEST
0x813 POP
0x814 PUSH2 0x3f5
0x817 PUSH2 0xb5b
0x81a JUMP
0x81b JUMPDEST
0x81c PUSH1 0x40
0x81e MLOAD
0x81f DUP1
0x820 DUP1
0x821 PUSH1 0x20
0x823 ADD
0x824 DUP3
0x825 DUP2
0x826 SUB
0x827 DUP3
0x828 MSTORE
0x829 DUP4
0x82a DUP2
0x82b DUP2
0x82c MLOAD
0x82d DUP2
0x82e MSTORE
0x82f PUSH1 0x20
0x831 ADD
0x832 SWAP2
0x833 POP
0x834 DUP1
0x835 MLOAD
0x836 SWAP1
0x837 PUSH1 0x20
0x839 ADD
0x83a SWAP1
0x83b DUP1
0x83c DUP4
0x83d DUP4
0x83e PUSH1 0x0
---
0x80e: V502 = 0x0
0x811: REVERT 0x0 0x0
0x812: JUMPDEST 
0x814: V503 = 0x3f5
0x817: V504 = 0xb5b
0x81a: THROW 
0x81b: JUMPDEST 
0x81c: V505 = 0x40
0x81e: V506 = M[0x40]
0x821: V507 = 0x20
0x823: V508 = ADD 0x20 V506
0x826: V509 = SUB V508 V506
0x828: M[V506] = V509
0x82c: V510 = M[S0]
0x82e: M[V508] = V510
0x82f: V511 = 0x20
0x831: V512 = ADD 0x20 V508
0x835: V513 = M[S0]
0x837: V514 = 0x20
0x839: V515 = ADD 0x20 S0
0x83e: V516 = 0x0
---
Entry stack: [V499]
Stack pops: 0
Stack additions: [0x3f5, 0x0, V515, V512, V513, V513, V515, V512, V506, V506, S0]
Exit stack: []

================================

Block 0x840
[0x840:0x848]
---
Predecessors: [0x80e]
Successors: [0x849]
---
0x840 JUMPDEST
0x841 DUP4
0x842 DUP2
0x843 LT
0x844 ISZERO
0x845 PUSH2 0x435
0x848 JUMPI
---
0x840: JUMPDEST 
0x843: V517 = LT 0x0 V513
0x844: V518 = ISZERO V517
0x845: V519 = 0x435
0x848: THROWI V518
---
Entry stack: [S9, V506, V506, V512, V515, V513, V513, V512, V515, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V506, V506, V512, V515, V513, V513, V512, V515, 0x0]

================================

Block 0x849
[0x849:0x86e]
---
Predecessors: [0x840]
Successors: [0x86f]
---
0x849 DUP1
0x84a DUP3
0x84b ADD
0x84c MLOAD
0x84d DUP2
0x84e DUP5
0x84f ADD
0x850 MSTORE
0x851 PUSH1 0x20
0x853 DUP2
0x854 ADD
0x855 SWAP1
0x856 POP
0x857 PUSH2 0x41a
0x85a JUMP
0x85b JUMPDEST
0x85c POP
0x85d POP
0x85e POP
0x85f POP
0x860 SWAP1
0x861 POP
0x862 SWAP1
0x863 DUP2
0x864 ADD
0x865 SWAP1
0x866 PUSH1 0x1f
0x868 AND
0x869 DUP1
0x86a ISZERO
0x86b PUSH2 0x462
0x86e JUMPI
---
0x84b: V520 = ADD V515 0x0
0x84c: V521 = M[V520]
0x84f: V522 = ADD V512 0x0
0x850: M[V522] = V521
0x851: V523 = 0x20
0x854: V524 = ADD 0x0 0x20
0x857: V525 = 0x41a
0x85a: THROW 
0x85b: JUMPDEST 
0x864: V526 = ADD S4 S6
0x866: V527 = 0x1f
0x868: V528 = AND 0x1f S4
0x86a: V529 = ISZERO V528
0x86b: V530 = 0x462
0x86e: THROWI V529
---
Entry stack: [S9, V506, V506, V512, V515, V513, V513, V512, V515, 0x0]
Stack pops: 3
Stack additions: [V528, V526]
Exit stack: []

================================

Block 0x86f
[0x86f:0x887]
---
Predecessors: [0x849]
Successors: [0x888]
---
0x86f DUP1
0x870 DUP3
0x871 SUB
0x872 DUP1
0x873 MLOAD
0x874 PUSH1 0x1
0x876 DUP4
0x877 PUSH1 0x20
0x879 SUB
0x87a PUSH2 0x100
0x87d EXP
0x87e SUB
0x87f NOT
0x880 AND
0x881 DUP2
0x882 MSTORE
0x883 PUSH1 0x20
0x885 ADD
0x886 SWAP2
0x887 POP
---
0x871: V531 = SUB V526 V528
0x873: V532 = M[V531]
0x874: V533 = 0x1
0x877: V534 = 0x20
0x879: V535 = SUB 0x20 V528
0x87a: V536 = 0x100
0x87d: V537 = EXP 0x100 V535
0x87e: V538 = SUB V537 0x1
0x87f: V539 = NOT V538
0x880: V540 = AND V539 V532
0x882: M[V531] = V540
0x883: V541 = 0x20
0x885: V542 = ADD 0x20 V531
---
Entry stack: [V526, V528]
Stack pops: 2
Stack additions: [V542, S0]
Exit stack: [V542, V528]

================================

Block 0x888
[0x888:0x89d]
---
Predecessors: [0x86f]
Successors: [0x89e]
---
0x888 JUMPDEST
0x889 POP
0x88a SWAP3
0x88b POP
0x88c POP
0x88d POP
0x88e PUSH1 0x40
0x890 MLOAD
0x891 DUP1
0x892 SWAP2
0x893 SUB
0x894 SWAP1
0x895 RETURN
0x896 JUMPDEST
0x897 CALLVALUE
0x898 DUP1
0x899 ISZERO
0x89a PUSH2 0x47c
0x89d JUMPI
---
0x888: JUMPDEST 
0x88e: V543 = 0x40
0x890: V544 = M[0x40]
0x893: V545 = SUB V542 V544
0x895: RETURN V544 V545
0x896: JUMPDEST 
0x897: V546 = CALLVALUE
0x899: V547 = ISZERO V546
0x89a: V548 = 0x47c
0x89d: THROWI V547
---
Entry stack: [V542, V528]
Stack pops: 10
Stack additions: [V546]
Exit stack: []

================================

Block 0x89e
[0x89e:0x954]
---
Predecessors: [0x888]
Successors: [0x955]
---
0x89e PUSH1 0x0
0x8a0 DUP1
0x8a1 REVERT
0x8a2 JUMPDEST
0x8a3 POP
0x8a4 PUSH2 0x4bb
0x8a7 PUSH1 0x4
0x8a9 DUP1
0x8aa CALLDATASIZE
0x8ab SUB
0x8ac DUP2
0x8ad ADD
0x8ae SWAP1
0x8af DUP1
0x8b0 DUP1
0x8b1 CALLDATALOAD
0x8b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c7 AND
0x8c8 SWAP1
0x8c9 PUSH1 0x20
0x8cb ADD
0x8cc SWAP1
0x8cd SWAP3
0x8ce SWAP2
0x8cf SWAP1
0x8d0 DUP1
0x8d1 CALLDATALOAD
0x8d2 SWAP1
0x8d3 PUSH1 0x20
0x8d5 ADD
0x8d6 SWAP1
0x8d7 SWAP3
0x8d8 SWAP2
0x8d9 SWAP1
0x8da POP
0x8db POP
0x8dc POP
0x8dd PUSH2 0xb94
0x8e0 JUMP
0x8e1 JUMPDEST
0x8e2 PUSH1 0x40
0x8e4 MLOAD
0x8e5 DUP1
0x8e6 DUP3
0x8e7 ISZERO
0x8e8 ISZERO
0x8e9 ISZERO
0x8ea ISZERO
0x8eb DUP2
0x8ec MSTORE
0x8ed PUSH1 0x20
0x8ef ADD
0x8f0 SWAP2
0x8f1 POP
0x8f2 POP
0x8f3 PUSH1 0x40
0x8f5 MLOAD
0x8f6 DUP1
0x8f7 SWAP2
0x8f8 SUB
0x8f9 SWAP1
0x8fa RETURN
0x8fb JUMPDEST
0x8fc PUSH1 0x0
0x8fe PUSH1 0x2
0x900 PUSH1 0x0
0x902 SWAP1
0x903 SLOAD
0x904 SWAP1
0x905 PUSH2 0x100
0x908 EXP
0x909 SWAP1
0x90a DIV
0x90b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x920 AND
0x921 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x936 AND
0x937 CALLER
0x938 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94d AND
0x94e EQ
0x94f ISZERO
0x950 ISZERO
0x951 PUSH2 0x533
0x954 JUMPI
---
0x89e: V549 = 0x0
0x8a1: REVERT 0x0 0x0
0x8a2: JUMPDEST 
0x8a4: V550 = 0x4bb
0x8a7: V551 = 0x4
0x8aa: V552 = CALLDATASIZE
0x8ab: V553 = SUB V552 0x4
0x8ad: V554 = ADD 0x4 V553
0x8b1: V555 = CALLDATALOAD 0x4
0x8b2: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c7: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x8c9: V558 = 0x20
0x8cb: V559 = ADD 0x20 0x4
0x8d1: V560 = CALLDATALOAD 0x24
0x8d3: V561 = 0x20
0x8d5: V562 = ADD 0x20 0x24
0x8dd: V563 = 0xb94
0x8e0: THROW 
0x8e1: JUMPDEST 
0x8e2: V564 = 0x40
0x8e4: V565 = M[0x40]
0x8e7: V566 = ISZERO S0
0x8e8: V567 = ISZERO V566
0x8e9: V568 = ISZERO V567
0x8ea: V569 = ISZERO V568
0x8ec: M[V565] = V569
0x8ed: V570 = 0x20
0x8ef: V571 = ADD 0x20 V565
0x8f3: V572 = 0x40
0x8f5: V573 = M[0x40]
0x8f8: V574 = SUB V571 V573
0x8fa: RETURN V573 V574
0x8fb: JUMPDEST 
0x8fc: V575 = 0x0
0x8fe: V576 = 0x2
0x900: V577 = 0x0
0x903: V578 = S[0x2]
0x905: V579 = 0x100
0x908: V580 = EXP 0x100 0x0
0x90a: V581 = DIV V578 0x1
0x90b: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0x920: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x921: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x936: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x937: V586 = CALLER
0x938: V587 = 0xffffffffffffffffffffffffffffffffffffffff
0x94d: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x94e: V589 = EQ V588 V585
0x94f: V590 = ISZERO V589
0x950: V591 = ISZERO V590
0x951: V592 = 0x533
0x954: THROWI V591
---
Entry stack: [V546]
Stack pops: 0
Stack additions: [V560, V557, 0x4bb, 0x0]
Exit stack: []

================================

Block 0x955
[0x955:0x9a1]
---
Predecessors: [0x89e]
Successors: [0x9a2]
---
0x955 PUSH1 0x0
0x957 DUP1
0x958 REVERT
0x959 JUMPDEST
0x95a PUSH1 0x0
0x95c PUSH1 0x3
0x95e PUSH1 0x0
0x960 DUP6
0x961 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x976 AND
0x977 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98c AND
0x98d DUP2
0x98e MSTORE
0x98f PUSH1 0x20
0x991 ADD
0x992 SWAP1
0x993 DUP2
0x994 MSTORE
0x995 PUSH1 0x20
0x997 ADD
0x998 PUSH1 0x0
0x99a SHA3
0x99b SLOAD
0x99c EQ
0x99d ISZERO
0x99e PUSH2 0x5e2
0x9a1 JUMPI
---
0x955: V593 = 0x0
0x958: REVERT 0x0 0x0
0x959: JUMPDEST 
0x95a: V594 = 0x0
0x95c: V595 = 0x3
0x95e: V596 = 0x0
0x961: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0x976: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x977: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0x98c: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x98e: M[0x0] = V600
0x98f: V601 = 0x20
0x991: V602 = ADD 0x20 0x0
0x994: M[0x20] = 0x3
0x995: V603 = 0x20
0x997: V604 = ADD 0x20 0x20
0x998: V605 = 0x0
0x99a: V606 = SHA3 0x0 0x40
0x99b: V607 = S[V606]
0x99c: V608 = EQ V607 0x0
0x99d: V609 = ISZERO V608
0x99e: V610 = 0x5e2
0x9a1: THROWI V609
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x9a2
[0x9a2:0xa07]
---
Predecessors: [0x955]
Successors: [0xa08]
---
0x9a2 PUSH1 0x4
0x9a4 DUP4
0x9a5 SWAP1
0x9a6 DUP1
0x9a7 PUSH1 0x1
0x9a9 DUP2
0x9aa SLOAD
0x9ab ADD
0x9ac DUP1
0x9ad DUP3
0x9ae SSTORE
0x9af DUP1
0x9b0 SWAP2
0x9b1 POP
0x9b2 POP
0x9b3 SWAP1
0x9b4 PUSH1 0x1
0x9b6 DUP3
0x9b7 SUB
0x9b8 SWAP1
0x9b9 PUSH1 0x0
0x9bb MSTORE
0x9bc PUSH1 0x20
0x9be PUSH1 0x0
0x9c0 SHA3
0x9c1 ADD
0x9c2 PUSH1 0x0
0x9c4 SWAP1
0x9c5 SWAP2
0x9c6 SWAP3
0x9c7 SWAP1
0x9c8 SWAP2
0x9c9 SWAP1
0x9ca SWAP2
0x9cb PUSH2 0x100
0x9ce EXP
0x9cf DUP2
0x9d0 SLOAD
0x9d1 DUP2
0x9d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e7 MUL
0x9e8 NOT
0x9e9 AND
0x9ea SWAP1
0x9eb DUP4
0x9ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa01 AND
0xa02 MUL
0xa03 OR
0xa04 SWAP1
0xa05 SSTORE
0xa06 POP
0xa07 POP
---
0x9a2: V611 = 0x4
0x9a7: V612 = 0x1
0x9aa: V613 = S[0x4]
0x9ab: V614 = ADD V613 0x1
0x9ae: S[0x4] = V614
0x9b4: V615 = 0x1
0x9b7: V616 = SUB V614 0x1
0x9b9: V617 = 0x0
0x9bb: M[0x0] = 0x4
0x9bc: V618 = 0x20
0x9be: V619 = 0x0
0x9c0: V620 = SHA3 0x0 0x20
0x9c1: V621 = ADD V620 V616
0x9c2: V622 = 0x0
0x9cb: V623 = 0x100
0x9ce: V624 = EXP 0x100 0x0
0x9d0: V625 = S[V621]
0x9d2: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V627 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9e8: V628 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9e9: V629 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V625
0x9ec: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xa01: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa02: V632 = MUL V631 0x1
0xa03: V633 = OR V632 V629
0xa05: S[V621] = V633
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0xa08
[0xa08:0xb60]
---
Predecessors: [0x9a2]
Successors: [0xb61]
---
0xa08 JUMPDEST
0xa09 PUSH2 0x634
0xa0c DUP3
0xa0d PUSH1 0x3
0xa0f PUSH1 0x0
0xa11 DUP7
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 AND
0xa28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3d AND
0xa3e DUP2
0xa3f MSTORE
0xa40 PUSH1 0x20
0xa42 ADD
0xa43 SWAP1
0xa44 DUP2
0xa45 MSTORE
0xa46 PUSH1 0x20
0xa48 ADD
0xa49 PUSH1 0x0
0xa4b SHA3
0xa4c SLOAD
0xa4d PUSH2 0xd78
0xa50 SWAP1
0xa51 SWAP2
0xa52 SWAP1
0xa53 PUSH4 0xffffffff
0xa58 AND
0xa59 JUMP
0xa5a JUMPDEST
0xa5b PUSH1 0x3
0xa5d PUSH1 0x0
0xa5f DUP6
0xa60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa75 AND
0xa76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8b AND
0xa8c DUP2
0xa8d MSTORE
0xa8e PUSH1 0x20
0xa90 ADD
0xa91 SWAP1
0xa92 DUP2
0xa93 MSTORE
0xa94 PUSH1 0x20
0xa96 ADD
0xa97 PUSH1 0x0
0xa99 SHA3
0xa9a DUP2
0xa9b SWAP1
0xa9c SSTORE
0xa9d POP
0xa9e PUSH1 0x1
0xaa0 SWAP1
0xaa1 POP
0xaa2 SWAP3
0xaa3 SWAP2
0xaa4 POP
0xaa5 POP
0xaa6 JUMP
0xaa7 JUMPDEST
0xaa8 PUSH1 0x40
0xaaa DUP1
0xaab MLOAD
0xaac SWAP1
0xaad DUP2
0xaae ADD
0xaaf PUSH1 0x40
0xab1 MSTORE
0xab2 DUP1
0xab3 PUSH1 0x6
0xab5 DUP2
0xab6 MSTORE
0xab7 PUSH1 0x20
0xab9 ADD
0xaba PUSH32 0x5377696e63610000000000000000000000000000000000000000000000000000
0xadb DUP2
0xadc MSTORE
0xadd POP
0xade DUP2
0xadf JUMP
0xae0 JUMPDEST
0xae1 PUSH1 0x0
0xae3 PUSH1 0x1
0xae5 SLOAD
0xae6 SWAP1
0xae7 POP
0xae8 SWAP1
0xae9 JUMP
0xaea JUMPDEST
0xaeb PUSH1 0x12
0xaed PUSH1 0xff
0xaef AND
0xaf0 PUSH1 0xa
0xaf2 EXP
0xaf3 PUSH4 0xbebc200
0xaf8 MUL
0xaf9 DUP2
0xafa JUMP
0xafb JUMPDEST
0xafc PUSH1 0x12
0xafe DUP2
0xaff JUMP
0xb00 JUMPDEST
0xb01 PUSH1 0x0
0xb03 DUP1
0xb04 PUSH1 0x0
0xb06 DUP1
0xb07 PUSH1 0x0
0xb09 DUP1
0xb0a PUSH1 0x2
0xb0c PUSH1 0x0
0xb0e SWAP1
0xb0f SLOAD
0xb10 SWAP1
0xb11 PUSH2 0x100
0xb14 EXP
0xb15 SWAP1
0xb16 DIV
0xb17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2c AND
0xb2d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb42 AND
0xb43 CALLER
0xb44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb59 AND
0xb5a EQ
0xb5b ISZERO
0xb5c ISZERO
0xb5d PUSH2 0x73f
0xb60 JUMPI
---
0xa08: JUMPDEST 
0xa09: V634 = 0x634
0xa0d: V635 = 0x3
0xa0f: V636 = 0x0
0xa12: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa28: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0xa3f: M[0x0] = V640
0xa40: V641 = 0x20
0xa42: V642 = ADD 0x20 0x0
0xa45: M[0x20] = 0x3
0xa46: V643 = 0x20
0xa48: V644 = ADD 0x20 0x20
0xa49: V645 = 0x0
0xa4b: V646 = SHA3 0x0 0x40
0xa4c: V647 = S[V646]
0xa4d: V648 = 0xd78
0xa53: V649 = 0xffffffff
0xa58: V650 = AND 0xffffffff 0xd78
0xa59: THROW 
0xa5a: JUMPDEST 
0xa5b: V651 = 0x3
0xa5d: V652 = 0x0
0xa60: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xa75: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa76: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8b: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0xa8d: M[0x0] = V656
0xa8e: V657 = 0x20
0xa90: V658 = ADD 0x20 0x0
0xa93: M[0x20] = 0x3
0xa94: V659 = 0x20
0xa96: V660 = ADD 0x20 0x20
0xa97: V661 = 0x0
0xa99: V662 = SHA3 0x0 0x40
0xa9c: S[V662] = S0
0xa9e: V663 = 0x1
0xaa6: JUMP S4
0xaa7: JUMPDEST 
0xaa8: V664 = 0x40
0xaab: V665 = M[0x40]
0xaae: V666 = ADD V665 0x40
0xaaf: V667 = 0x40
0xab1: M[0x40] = V666
0xab3: V668 = 0x6
0xab6: M[V665] = 0x6
0xab7: V669 = 0x20
0xab9: V670 = ADD 0x20 V665
0xaba: V671 = 0x5377696e63610000000000000000000000000000000000000000000000000000
0xadc: M[V670] = 0x5377696e63610000000000000000000000000000000000000000000000000000
0xadf: JUMP S0
0xae0: JUMPDEST 
0xae1: V672 = 0x0
0xae3: V673 = 0x1
0xae5: V674 = S[0x1]
0xae9: JUMP S0
0xaea: JUMPDEST 
0xaeb: V675 = 0x12
0xaed: V676 = 0xff
0xaef: V677 = AND 0xff 0x12
0xaf0: V678 = 0xa
0xaf2: V679 = EXP 0xa 0x12
0xaf3: V680 = 0xbebc200
0xaf8: V681 = MUL 0xbebc200 0xde0b6b3a7640000
0xafa: JUMP S0
0xafb: JUMPDEST 
0xafc: V682 = 0x12
0xaff: JUMP S0
0xb00: JUMPDEST 
0xb01: V683 = 0x0
0xb04: V684 = 0x0
0xb07: V685 = 0x0
0xb0a: V686 = 0x2
0xb0c: V687 = 0x0
0xb0f: V688 = S[0x2]
0xb11: V689 = 0x100
0xb14: V690 = EXP 0x100 0x0
0xb16: V691 = DIV V688 0x1
0xb17: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2c: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0xb2d: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0xb42: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0xb43: V696 = CALLER
0xb44: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xb59: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xb5a: V699 = EQ V698 V695
0xb5b: V700 = ISZERO V699
0xb5c: V701 = ISZERO V700
0xb5d: V702 = 0x73f
0xb60: THROWI V701
---
Entry stack: [S2, S1, S0]
Stack pops: 14
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xb61
[0xb61:0xb74]
---
Predecessors: [0xa08]
Successors: [0xb75]
---
0xb61 PUSH1 0x0
0xb63 DUP1
0xb64 REVERT
0xb65 JUMPDEST
0xb66 PUSH1 0x4
0xb68 DUP1
0xb69 SLOAD
0xb6a SWAP1
0xb6b POP
0xb6c DUP8
0xb6d GT
0xb6e ISZERO
0xb6f ISZERO
0xb70 ISZERO
0xb71 PUSH2 0x753
0xb74 JUMPI
---
0xb61: V703 = 0x0
0xb64: REVERT 0x0 0x0
0xb65: JUMPDEST 
0xb66: V704 = 0x4
0xb69: V705 = S[0x4]
0xb6d: V706 = GT S6 V705
0xb6e: V707 = ISZERO V706
0xb6f: V708 = ISZERO V707
0xb70: V709 = ISZERO V708
0xb71: V710 = 0x753
0xb74: THROWI V709
---
Entry stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xb75
[0xb75:0xb89]
---
Predecessors: [0xb61]
Successors: [0xb8a]
---
0xb75 PUSH1 0x0
0xb77 DUP1
0xb78 REVERT
0xb79 JUMPDEST
0xb7a PUSH1 0x4
0xb7c DUP1
0xb7d SLOAD
0xb7e SWAP1
0xb7f POP
0xb80 SWAP5
0xb81 POP
0xb82 PUSH1 0x4
0xb84 DUP1
0xb85 SLOAD
0xb86 SWAP1
0xb87 POP
0xb88 SWAP4
0xb89 POP
---
0xb75: V711 = 0x0
0xb78: REVERT 0x0 0x0
0xb79: JUMPDEST 
0xb7a: V712 = 0x4
0xb7d: V713 = S[0x4]
0xb82: V714 = 0x4
0xb85: V715 = S[0x4]
---
Entry stack: [S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, V715, V713]
Exit stack: []

================================

Block 0xb8a
[0xb8a:0xb98]
---
Predecessors: [0xb75]
Successors: [0xb99]
---
0xb8a JUMPDEST
0xb8b PUSH1 0x1
0xb8d DUP8
0xb8e DUP7
0xb8f SUB
0xb90 ADD
0xb91 DUP5
0xb92 LT
0xb93 ISZERO
0xb94 ISZERO
0xb95 PUSH2 0x9ea
0xb98 JUMPI
---
0xb8a: JUMPDEST 
0xb8b: V716 = 0x1
0xb8f: V717 = SUB V713 S6
0xb90: V718 = ADD V717 0x1
0xb92: V719 = LT V715 V718
0xb93: V720 = ISZERO V719
0xb94: V721 = ISZERO V720
0xb95: V722 = 0x9ea
0xb98: THROWI V721
---
Entry stack: [V713, V715, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [S1, S0, V713, V715, S2, S1, S0]

================================

Block 0xb99
[0xb99:0xbab]
---
Predecessors: [0xb8a]
Successors: [0xbac]
---
0xb99 PUSH1 0x1
0xb9b DUP5
0xb9c SUB
0xb9d SWAP3
0xb9e POP
0xb9f PUSH1 0x4
0xba1 DUP4
0xba2 DUP2
0xba3 SLOAD
0xba4 DUP2
0xba5 LT
0xba6 ISZERO
0xba7 ISZERO
0xba8 PUSH2 0x787
0xbab JUMPI
---
0xb99: V723 = 0x1
0xb9c: V724 = SUB V715 0x1
0xb9f: V725 = 0x4
0xba3: V726 = S[0x4]
0xba5: V727 = LT V724 V726
0xba6: V728 = ISZERO V727
0xba7: V729 = ISZERO V728
0xba8: V730 = 0x787
0xbab: THROWI V729
---
Entry stack: [S6, S5, V713, V715, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V724, S1, S0, 0x4, V724]
Exit stack: [S6, S5, V713, V715, V724, S1, S0, 0x4, V724]

================================

Block 0xbac
[0xbac:0xf08]
---
Predecessors: [0xb99]
Successors: [0xf09]
---
0xbac INVALID
0xbad JUMPDEST
0xbae SWAP1
0xbaf PUSH1 0x0
0xbb1 MSTORE
0xbb2 PUSH1 0x20
0xbb4 PUSH1 0x0
0xbb6 SHA3
0xbb7 ADD
0xbb8 PUSH1 0x0
0xbba SWAP1
0xbbb SLOAD
0xbbc SWAP1
0xbbd PUSH2 0x100
0xbc0 EXP
0xbc1 SWAP1
0xbc2 DIV
0xbc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd8 AND
0xbd9 SWAP2
0xbda POP
0xbdb PUSH1 0x3
0xbdd PUSH1 0x0
0xbdf DUP4
0xbe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf5 AND
0xbf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0b AND
0xc0c DUP2
0xc0d MSTORE
0xc0e PUSH1 0x20
0xc10 ADD
0xc11 SWAP1
0xc12 DUP2
0xc13 MSTORE
0xc14 PUSH1 0x20
0xc16 ADD
0xc17 PUSH1 0x0
0xc19 SHA3
0xc1a SLOAD
0xc1b SWAP1
0xc1c POP
0xc1d PUSH2 0x847
0xc20 DUP2
0xc21 PUSH1 0x0
0xc23 DUP1
0xc24 CALLER
0xc25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3a AND
0xc3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc50 AND
0xc51 DUP2
0xc52 MSTORE
0xc53 PUSH1 0x20
0xc55 ADD
0xc56 SWAP1
0xc57 DUP2
0xc58 MSTORE
0xc59 PUSH1 0x20
0xc5b ADD
0xc5c PUSH1 0x0
0xc5e SHA3
0xc5f SLOAD
0xc60 PUSH2 0xd94
0xc63 SWAP1
0xc64 SWAP2
0xc65 SWAP1
0xc66 PUSH4 0xffffffff
0xc6b AND
0xc6c JUMP
0xc6d JUMPDEST
0xc6e PUSH1 0x0
0xc70 DUP1
0xc71 CALLER
0xc72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc87 AND
0xc88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9d AND
0xc9e DUP2
0xc9f MSTORE
0xca0 PUSH1 0x20
0xca2 ADD
0xca3 SWAP1
0xca4 DUP2
0xca5 MSTORE
0xca6 PUSH1 0x20
0xca8 ADD
0xca9 PUSH1 0x0
0xcab SHA3
0xcac DUP2
0xcad SWAP1
0xcae SSTORE
0xcaf POP
0xcb0 PUSH2 0x8da
0xcb3 DUP2
0xcb4 PUSH1 0x0
0xcb6 DUP1
0xcb7 DUP6
0xcb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccd AND
0xcce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce3 AND
0xce4 DUP2
0xce5 MSTORE
0xce6 PUSH1 0x20
0xce8 ADD
0xce9 SWAP1
0xcea DUP2
0xceb MSTORE
0xcec PUSH1 0x20
0xcee ADD
0xcef PUSH1 0x0
0xcf1 SHA3
0xcf2 SLOAD
0xcf3 PUSH2 0xd78
0xcf6 SWAP1
0xcf7 SWAP2
0xcf8 SWAP1
0xcf9 PUSH4 0xffffffff
0xcfe AND
0xcff JUMP
0xd00 JUMPDEST
0xd01 PUSH1 0x0
0xd03 DUP1
0xd04 DUP5
0xd05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1a AND
0xd1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd30 AND
0xd31 DUP2
0xd32 MSTORE
0xd33 PUSH1 0x20
0xd35 ADD
0xd36 SWAP1
0xd37 DUP2
0xd38 MSTORE
0xd39 PUSH1 0x20
0xd3b ADD
0xd3c PUSH1 0x0
0xd3e SHA3
0xd3f DUP2
0xd40 SWAP1
0xd41 SSTORE
0xd42 POP
0xd43 PUSH1 0x0
0xd45 PUSH1 0x3
0xd47 PUSH1 0x0
0xd49 DUP5
0xd4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5f AND
0xd60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd75 AND
0xd76 DUP2
0xd77 MSTORE
0xd78 PUSH1 0x20
0xd7a ADD
0xd7b SWAP1
0xd7c DUP2
0xd7d MSTORE
0xd7e PUSH1 0x20
0xd80 ADD
0xd81 PUSH1 0x0
0xd83 SHA3
0xd84 DUP2
0xd85 SWAP1
0xd86 SSTORE
0xd87 POP
0xd88 PUSH1 0x4
0xd8a DUP1
0xd8b SLOAD
0xd8c DUP1
0xd8d SWAP2
0xd8e SWAP1
0xd8f PUSH1 0x1
0xd91 SWAP1
0xd92 SUB
0xd93 PUSH2 0x976
0xd96 SWAP2
0xd97 SWAP1
0xd98 PUSH2 0xdad
0xd9b JUMP
0xd9c JUMPDEST
0xd9d POP
0xd9e DUP2
0xd9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb4 AND
0xdb5 CALLER
0xdb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcb AND
0xdcc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xded DUP4
0xdee PUSH1 0x40
0xdf0 MLOAD
0xdf1 DUP1
0xdf2 DUP3
0xdf3 DUP2
0xdf4 MSTORE
0xdf5 PUSH1 0x20
0xdf7 ADD
0xdf8 SWAP2
0xdf9 POP
0xdfa POP
0xdfb PUSH1 0x40
0xdfd MLOAD
0xdfe DUP1
0xdff SWAP2
0xe00 SUB
0xe01 SWAP1
0xe02 LOG3
0xe03 DUP4
0xe04 DUP1
0xe05 PUSH1 0x1
0xe07 SWAP1
0xe08 SUB
0xe09 SWAP5
0xe0a POP
0xe0b POP
0xe0c PUSH2 0x764
0xe0f JUMP
0xe10 JUMPDEST
0xe11 PUSH1 0x1
0xe13 SWAP6
0xe14 POP
0xe15 POP
0xe16 POP
0xe17 POP
0xe18 POP
0xe19 POP
0xe1a SWAP2
0xe1b SWAP1
0xe1c POP
0xe1d JUMP
0xe1e JUMPDEST
0xe1f PUSH1 0x0
0xe21 PUSH1 0x3
0xe23 PUSH1 0x0
0xe25 DUP4
0xe26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3b AND
0xe3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe51 AND
0xe52 DUP2
0xe53 MSTORE
0xe54 PUSH1 0x20
0xe56 ADD
0xe57 SWAP1
0xe58 DUP2
0xe59 MSTORE
0xe5a PUSH1 0x20
0xe5c ADD
0xe5d PUSH1 0x0
0xe5f SHA3
0xe60 SLOAD
0xe61 SWAP1
0xe62 POP
0xe63 SWAP2
0xe64 SWAP1
0xe65 POP
0xe66 JUMP
0xe67 JUMPDEST
0xe68 PUSH1 0x0
0xe6a DUP1
0xe6b PUSH1 0x0
0xe6d DUP4
0xe6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe83 AND
0xe84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe99 AND
0xe9a DUP2
0xe9b MSTORE
0xe9c PUSH1 0x20
0xe9e ADD
0xe9f SWAP1
0xea0 DUP2
0xea1 MSTORE
0xea2 PUSH1 0x20
0xea4 ADD
0xea5 PUSH1 0x0
0xea7 SHA3
0xea8 SLOAD
0xea9 SWAP1
0xeaa POP
0xeab SWAP2
0xeac SWAP1
0xead POP
0xeae JUMP
0xeaf JUMPDEST
0xeb0 PUSH1 0x0
0xeb2 PUSH1 0x2
0xeb4 PUSH1 0x0
0xeb6 SWAP1
0xeb7 SLOAD
0xeb8 SWAP1
0xeb9 PUSH2 0x100
0xebc EXP
0xebd SWAP1
0xebe DIV
0xebf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed4 AND
0xed5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeea AND
0xeeb CALLER
0xeec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf01 AND
0xf02 EQ
0xf03 ISZERO
0xf04 ISZERO
0xf05 PUSH2 0xae7
0xf08 JUMPI
---
0xbac: INVALID 
0xbad: JUMPDEST 
0xbaf: V731 = 0x0
0xbb1: M[0x0] = S1
0xbb2: V732 = 0x20
0xbb4: V733 = 0x0
0xbb6: V734 = SHA3 0x0 0x20
0xbb7: V735 = ADD V734 S0
0xbb8: V736 = 0x0
0xbbb: V737 = S[V735]
0xbbd: V738 = 0x100
0xbc0: V739 = EXP 0x100 0x0
0xbc2: V740 = DIV V737 0x1
0xbc3: V741 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd8: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V740
0xbdb: V743 = 0x3
0xbdd: V744 = 0x0
0xbe0: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf5: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0xbf6: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0b: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xc0d: M[0x0] = V748
0xc0e: V749 = 0x20
0xc10: V750 = ADD 0x20 0x0
0xc13: M[0x20] = 0x3
0xc14: V751 = 0x20
0xc16: V752 = ADD 0x20 0x20
0xc17: V753 = 0x0
0xc19: V754 = SHA3 0x0 0x40
0xc1a: V755 = S[V754]
0xc1d: V756 = 0x847
0xc21: V757 = 0x0
0xc24: V758 = CALLER
0xc25: V759 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3a: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0xc3b: V761 = 0xffffffffffffffffffffffffffffffffffffffff
0xc50: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0xc52: M[0x0] = V762
0xc53: V763 = 0x20
0xc55: V764 = ADD 0x20 0x0
0xc58: M[0x20] = 0x0
0xc59: V765 = 0x20
0xc5b: V766 = ADD 0x20 0x20
0xc5c: V767 = 0x0
0xc5e: V768 = SHA3 0x0 0x40
0xc5f: V769 = S[V768]
0xc60: V770 = 0xd94
0xc66: V771 = 0xffffffff
0xc6b: V772 = AND 0xffffffff 0xd94
0xc6c: THROW 
0xc6d: JUMPDEST 
0xc6e: V773 = 0x0
0xc71: V774 = CALLER
0xc72: V775 = 0xffffffffffffffffffffffffffffffffffffffff
0xc87: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff V774
0xc88: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9d: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0xc9f: M[0x0] = V778
0xca0: V779 = 0x20
0xca2: V780 = ADD 0x20 0x0
0xca5: M[0x20] = 0x0
0xca6: V781 = 0x20
0xca8: V782 = ADD 0x20 0x20
0xca9: V783 = 0x0
0xcab: V784 = SHA3 0x0 0x40
0xcae: S[V784] = S0
0xcb0: V785 = 0x8da
0xcb4: V786 = 0x0
0xcb8: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xccd: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xcce: V789 = 0xffffffffffffffffffffffffffffffffffffffff
0xce3: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V788
0xce5: M[0x0] = V790
0xce6: V791 = 0x20
0xce8: V792 = ADD 0x20 0x0
0xceb: M[0x20] = 0x0
0xcec: V793 = 0x20
0xcee: V794 = ADD 0x20 0x20
0xcef: V795 = 0x0
0xcf1: V796 = SHA3 0x0 0x40
0xcf2: V797 = S[V796]
0xcf3: V798 = 0xd78
0xcf9: V799 = 0xffffffff
0xcfe: V800 = AND 0xffffffff 0xd78
0xcff: THROW 
0xd00: JUMPDEST 
0xd01: V801 = 0x0
0xd05: V802 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1a: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd1b: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xd30: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0xd32: M[0x0] = V805
0xd33: V806 = 0x20
0xd35: V807 = ADD 0x20 0x0
0xd38: M[0x20] = 0x0
0xd39: V808 = 0x20
0xd3b: V809 = ADD 0x20 0x20
0xd3c: V810 = 0x0
0xd3e: V811 = SHA3 0x0 0x40
0xd41: S[V811] = S0
0xd43: V812 = 0x0
0xd45: V813 = 0x3
0xd47: V814 = 0x0
0xd4a: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5f: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd60: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xd75: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xd77: M[0x0] = V818
0xd78: V819 = 0x20
0xd7a: V820 = ADD 0x20 0x0
0xd7d: M[0x20] = 0x3
0xd7e: V821 = 0x20
0xd80: V822 = ADD 0x20 0x20
0xd81: V823 = 0x0
0xd83: V824 = SHA3 0x0 0x40
0xd86: S[V824] = 0x0
0xd88: V825 = 0x4
0xd8b: V826 = S[0x4]
0xd8f: V827 = 0x1
0xd92: V828 = SUB V826 0x1
0xd93: V829 = 0x976
0xd98: V830 = 0xdad
0xd9b: THROW 
0xd9c: JUMPDEST 
0xd9f: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb4: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xdb5: V833 = CALLER
0xdb6: V834 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcb: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff V833
0xdcc: V836 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdee: V837 = 0x40
0xdf0: V838 = M[0x40]
0xdf4: M[V838] = S1
0xdf5: V839 = 0x20
0xdf7: V840 = ADD 0x20 V838
0xdfb: V841 = 0x40
0xdfd: V842 = M[0x40]
0xe00: V843 = SUB V840 V842
0xe02: LOG V842 V843 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V835 V832
0xe05: V844 = 0x1
0xe08: V845 = SUB S4 0x1
0xe0c: V846 = 0x764
0xe0f: THROW 
0xe10: JUMPDEST 
0xe11: V847 = 0x1
0xe1d: JUMP S7
0xe1e: JUMPDEST 
0xe1f: V848 = 0x0
0xe21: V849 = 0x3
0xe23: V850 = 0x0
0xe26: V851 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3b: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe3c: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xe51: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0xe53: M[0x0] = V854
0xe54: V855 = 0x20
0xe56: V856 = ADD 0x20 0x0
0xe59: M[0x20] = 0x3
0xe5a: V857 = 0x20
0xe5c: V858 = ADD 0x20 0x20
0xe5d: V859 = 0x0
0xe5f: V860 = SHA3 0x0 0x40
0xe60: V861 = S[V860]
0xe66: JUMP S1
0xe67: JUMPDEST 
0xe68: V862 = 0x0
0xe6b: V863 = 0x0
0xe6e: V864 = 0xffffffffffffffffffffffffffffffffffffffff
0xe83: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe84: V866 = 0xffffffffffffffffffffffffffffffffffffffff
0xe99: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0xe9b: M[0x0] = V867
0xe9c: V868 = 0x20
0xe9e: V869 = ADD 0x20 0x0
0xea1: M[0x20] = 0x0
0xea2: V870 = 0x20
0xea4: V871 = ADD 0x20 0x20
0xea5: V872 = 0x0
0xea7: V873 = SHA3 0x0 0x40
0xea8: V874 = S[V873]
0xeae: JUMP S1
0xeaf: JUMPDEST 
0xeb0: V875 = 0x0
0xeb2: V876 = 0x2
0xeb4: V877 = 0x0
0xeb7: V878 = S[0x2]
0xeb9: V879 = 0x100
0xebc: V880 = EXP 0x100 0x0
0xebe: V881 = DIV V878 0x1
0xebf: V882 = 0xffffffffffffffffffffffffffffffffffffffff
0xed4: V883 = AND 0xffffffffffffffffffffffffffffffffffffffff V881
0xed5: V884 = 0xffffffffffffffffffffffffffffffffffffffff
0xeea: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0xeeb: V886 = CALLER
0xeec: V887 = 0xffffffffffffffffffffffffffffffffffffffff
0xf01: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0xf02: V889 = EQ V888 V885
0xf03: V890 = ISZERO V889
0xf04: V891 = ISZERO V890
0xf05: V892 = 0xae7
0xf08: THROWI V891
---
Entry stack: [S8, S7, V713, V715, V724, S3, S2, 0x4, V724]
Stack pops: 0
Stack additions: [V755, V769, 0x847, V755, V742, S1, V797, 0x8da, S1, S2, V828, 0x4, 0x976, V826, S1, S2, S1, S2, S3, V845, 0x1, V861, V874, 0x0]
Exit stack: []

================================

Block 0xf09
[0xf09:0x1004]
---
Predecessors: [0xbac]
Successors: [0x1005]
---
0xf09 PUSH1 0x0
0xf0b DUP1
0xf0c REVERT
0xf0d JUMPDEST
0xf0e PUSH1 0x0
0xf10 PUSH1 0x3
0xf12 PUSH1 0x0
0xf14 DUP5
0xf15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2a AND
0xf2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf40 AND
0xf41 DUP2
0xf42 MSTORE
0xf43 PUSH1 0x20
0xf45 ADD
0xf46 SWAP1
0xf47 DUP2
0xf48 MSTORE
0xf49 PUSH1 0x20
0xf4b ADD
0xf4c PUSH1 0x0
0xf4e SHA3
0xf4f DUP2
0xf50 SWAP1
0xf51 SSTORE
0xf52 POP
0xf53 PUSH1 0x1
0xf55 SWAP1
0xf56 POP
0xf57 SWAP2
0xf58 SWAP1
0xf59 POP
0xf5a JUMP
0xf5b JUMPDEST
0xf5c PUSH1 0x2
0xf5e PUSH1 0x0
0xf60 SWAP1
0xf61 SLOAD
0xf62 SWAP1
0xf63 PUSH2 0x100
0xf66 EXP
0xf67 SWAP1
0xf68 DIV
0xf69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7e AND
0xf7f DUP2
0xf80 JUMP
0xf81 JUMPDEST
0xf82 PUSH1 0x40
0xf84 DUP1
0xf85 MLOAD
0xf86 SWAP1
0xf87 DUP2
0xf88 ADD
0xf89 PUSH1 0x40
0xf8b MSTORE
0xf8c DUP1
0xf8d PUSH1 0x3
0xf8f DUP2
0xf90 MSTORE
0xf91 PUSH1 0x20
0xf93 ADD
0xf94 PUSH32 0x5357490000000000000000000000000000000000000000000000000000000000
0xfb5 DUP2
0xfb6 MSTORE
0xfb7 POP
0xfb8 DUP2
0xfb9 JUMP
0xfba JUMPDEST
0xfbb PUSH1 0x0
0xfbd DUP1
0xfbe PUSH1 0x0
0xfc0 CALLER
0xfc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd6 AND
0xfd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfec AND
0xfed DUP2
0xfee MSTORE
0xfef PUSH1 0x20
0xff1 ADD
0xff2 SWAP1
0xff3 DUP2
0xff4 MSTORE
0xff5 PUSH1 0x20
0xff7 ADD
0xff8 PUSH1 0x0
0xffa SHA3
0xffb SLOAD
0xffc DUP3
0xffd GT
0xffe ISZERO
0xfff ISZERO
0x1000 ISZERO
0x1001 PUSH2 0xbe3
0x1004 JUMPI
---
0xf09: V893 = 0x0
0xf0c: REVERT 0x0 0x0
0xf0d: JUMPDEST 
0xf0e: V894 = 0x0
0xf10: V895 = 0x3
0xf12: V896 = 0x0
0xf15: V897 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2a: V898 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf2b: V899 = 0xffffffffffffffffffffffffffffffffffffffff
0xf40: V900 = AND 0xffffffffffffffffffffffffffffffffffffffff V898
0xf42: M[0x0] = V900
0xf43: V901 = 0x20
0xf45: V902 = ADD 0x20 0x0
0xf48: M[0x20] = 0x3
0xf49: V903 = 0x20
0xf4b: V904 = ADD 0x20 0x20
0xf4c: V905 = 0x0
0xf4e: V906 = SHA3 0x0 0x40
0xf51: S[V906] = 0x0
0xf53: V907 = 0x1
0xf5a: JUMP S2
0xf5b: JUMPDEST 
0xf5c: V908 = 0x2
0xf5e: V909 = 0x0
0xf61: V910 = S[0x2]
0xf63: V911 = 0x100
0xf66: V912 = EXP 0x100 0x0
0xf68: V913 = DIV V910 0x1
0xf69: V914 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7e: V915 = AND 0xffffffffffffffffffffffffffffffffffffffff V913
0xf80: JUMP S0
0xf81: JUMPDEST 
0xf82: V916 = 0x40
0xf85: V917 = M[0x40]
0xf88: V918 = ADD V917 0x40
0xf89: V919 = 0x40
0xf8b: M[0x40] = V918
0xf8d: V920 = 0x3
0xf90: M[V917] = 0x3
0xf91: V921 = 0x20
0xf93: V922 = ADD 0x20 V917
0xf94: V923 = 0x5357490000000000000000000000000000000000000000000000000000000000
0xfb6: M[V922] = 0x5357490000000000000000000000000000000000000000000000000000000000
0xfb9: JUMP S0
0xfba: JUMPDEST 
0xfbb: V924 = 0x0
0xfbe: V925 = 0x0
0xfc0: V926 = CALLER
0xfc1: V927 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd6: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0xfd7: V929 = 0xffffffffffffffffffffffffffffffffffffffff
0xfec: V930 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0xfee: M[0x0] = V930
0xfef: V931 = 0x20
0xff1: V932 = ADD 0x20 0x0
0xff4: M[0x20] = 0x0
0xff5: V933 = 0x20
0xff7: V934 = ADD 0x20 0x20
0xff8: V935 = 0x0
0xffa: V936 = SHA3 0x0 0x40
0xffb: V937 = S[V936]
0xffd: V938 = GT S0 V937
0xffe: V939 = ISZERO V938
0xfff: V940 = ISZERO V939
0x1000: V941 = ISZERO V940
0x1001: V942 = 0xbe3
0x1004: THROWI V941
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x1, V915, S0, V917, S0, 0x0, S0]
Exit stack: []

================================

Block 0x1005
[0x1005:0x11af]
---
Predecessors: [0xf09]
Successors: [0x11b0]
---
0x1005 PUSH1 0x0
0x1007 DUP1
0x1008 REVERT
0x1009 JUMPDEST
0x100a PUSH2 0xc34
0x100d DUP3
0x100e PUSH1 0x0
0x1010 DUP1
0x1011 CALLER
0x1012 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1027 AND
0x1028 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103d AND
0x103e DUP2
0x103f MSTORE
0x1040 PUSH1 0x20
0x1042 ADD
0x1043 SWAP1
0x1044 DUP2
0x1045 MSTORE
0x1046 PUSH1 0x20
0x1048 ADD
0x1049 PUSH1 0x0
0x104b SHA3
0x104c SLOAD
0x104d PUSH2 0xd94
0x1050 SWAP1
0x1051 SWAP2
0x1052 SWAP1
0x1053 PUSH4 0xffffffff
0x1058 AND
0x1059 JUMP
0x105a JUMPDEST
0x105b PUSH1 0x0
0x105d DUP1
0x105e CALLER
0x105f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1074 AND
0x1075 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108a AND
0x108b DUP2
0x108c MSTORE
0x108d PUSH1 0x20
0x108f ADD
0x1090 SWAP1
0x1091 DUP2
0x1092 MSTORE
0x1093 PUSH1 0x20
0x1095 ADD
0x1096 PUSH1 0x0
0x1098 SHA3
0x1099 DUP2
0x109a SWAP1
0x109b SSTORE
0x109c POP
0x109d PUSH2 0xcc7
0x10a0 DUP3
0x10a1 PUSH1 0x0
0x10a3 DUP1
0x10a4 DUP7
0x10a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ba AND
0x10bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d0 AND
0x10d1 DUP2
0x10d2 MSTORE
0x10d3 PUSH1 0x20
0x10d5 ADD
0x10d6 SWAP1
0x10d7 DUP2
0x10d8 MSTORE
0x10d9 PUSH1 0x20
0x10db ADD
0x10dc PUSH1 0x0
0x10de SHA3
0x10df SLOAD
0x10e0 PUSH2 0xd78
0x10e3 SWAP1
0x10e4 SWAP2
0x10e5 SWAP1
0x10e6 PUSH4 0xffffffff
0x10eb AND
0x10ec JUMP
0x10ed JUMPDEST
0x10ee PUSH1 0x0
0x10f0 DUP1
0x10f1 DUP6
0x10f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1107 AND
0x1108 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111d AND
0x111e DUP2
0x111f MSTORE
0x1120 PUSH1 0x20
0x1122 ADD
0x1123 SWAP1
0x1124 DUP2
0x1125 MSTORE
0x1126 PUSH1 0x20
0x1128 ADD
0x1129 PUSH1 0x0
0x112b SHA3
0x112c DUP2
0x112d SWAP1
0x112e SSTORE
0x112f POP
0x1130 DUP3
0x1131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1146 AND
0x1147 CALLER
0x1148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115d AND
0x115e PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x117f DUP5
0x1180 PUSH1 0x40
0x1182 MLOAD
0x1183 DUP1
0x1184 DUP3
0x1185 DUP2
0x1186 MSTORE
0x1187 PUSH1 0x20
0x1189 ADD
0x118a SWAP2
0x118b POP
0x118c POP
0x118d PUSH1 0x40
0x118f MLOAD
0x1190 DUP1
0x1191 SWAP2
0x1192 SUB
0x1193 SWAP1
0x1194 LOG3
0x1195 PUSH1 0x1
0x1197 SWAP1
0x1198 POP
0x1199 SWAP3
0x119a SWAP2
0x119b POP
0x119c POP
0x119d JUMP
0x119e JUMPDEST
0x119f PUSH1 0x0
0x11a1 DUP2
0x11a2 DUP4
0x11a3 ADD
0x11a4 SWAP1
0x11a5 POP
0x11a6 DUP3
0x11a7 DUP2
0x11a8 LT
0x11a9 ISZERO
0x11aa ISZERO
0x11ab ISZERO
0x11ac PUSH2 0xd8b
0x11af JUMPI
---
0x1005: V943 = 0x0
0x1008: REVERT 0x0 0x0
0x1009: JUMPDEST 
0x100a: V944 = 0xc34
0x100e: V945 = 0x0
0x1011: V946 = CALLER
0x1012: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0x1027: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0x1028: V949 = 0xffffffffffffffffffffffffffffffffffffffff
0x103d: V950 = AND 0xffffffffffffffffffffffffffffffffffffffff V948
0x103f: M[0x0] = V950
0x1040: V951 = 0x20
0x1042: V952 = ADD 0x20 0x0
0x1045: M[0x20] = 0x0
0x1046: V953 = 0x20
0x1048: V954 = ADD 0x20 0x20
0x1049: V955 = 0x0
0x104b: V956 = SHA3 0x0 0x40
0x104c: V957 = S[V956]
0x104d: V958 = 0xd94
0x1053: V959 = 0xffffffff
0x1058: V960 = AND 0xffffffff 0xd94
0x1059: THROW 
0x105a: JUMPDEST 
0x105b: V961 = 0x0
0x105e: V962 = CALLER
0x105f: V963 = 0xffffffffffffffffffffffffffffffffffffffff
0x1074: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0x1075: V965 = 0xffffffffffffffffffffffffffffffffffffffff
0x108a: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V964
0x108c: M[0x0] = V966
0x108d: V967 = 0x20
0x108f: V968 = ADD 0x20 0x0
0x1092: M[0x20] = 0x0
0x1093: V969 = 0x20
0x1095: V970 = ADD 0x20 0x20
0x1096: V971 = 0x0
0x1098: V972 = SHA3 0x0 0x40
0x109b: S[V972] = S0
0x109d: V973 = 0xcc7
0x10a1: V974 = 0x0
0x10a5: V975 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ba: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x10bb: V977 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d0: V978 = AND 0xffffffffffffffffffffffffffffffffffffffff V976
0x10d2: M[0x0] = V978
0x10d3: V979 = 0x20
0x10d5: V980 = ADD 0x20 0x0
0x10d8: M[0x20] = 0x0
0x10d9: V981 = 0x20
0x10db: V982 = ADD 0x20 0x20
0x10dc: V983 = 0x0
0x10de: V984 = SHA3 0x0 0x40
0x10df: V985 = S[V984]
0x10e0: V986 = 0xd78
0x10e6: V987 = 0xffffffff
0x10eb: V988 = AND 0xffffffff 0xd78
0x10ec: THROW 
0x10ed: JUMPDEST 
0x10ee: V989 = 0x0
0x10f2: V990 = 0xffffffffffffffffffffffffffffffffffffffff
0x1107: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1108: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0x111d: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0x111f: M[0x0] = V993
0x1120: V994 = 0x20
0x1122: V995 = ADD 0x20 0x0
0x1125: M[0x20] = 0x0
0x1126: V996 = 0x20
0x1128: V997 = ADD 0x20 0x20
0x1129: V998 = 0x0
0x112b: V999 = SHA3 0x0 0x40
0x112e: S[V999] = S0
0x1131: V1000 = 0xffffffffffffffffffffffffffffffffffffffff
0x1146: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1147: V1002 = CALLER
0x1148: V1003 = 0xffffffffffffffffffffffffffffffffffffffff
0x115d: V1004 = AND 0xffffffffffffffffffffffffffffffffffffffff V1002
0x115e: V1005 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1180: V1006 = 0x40
0x1182: V1007 = M[0x40]
0x1186: M[V1007] = S2
0x1187: V1008 = 0x20
0x1189: V1009 = ADD 0x20 V1007
0x118d: V1010 = 0x40
0x118f: V1011 = M[0x40]
0x1192: V1012 = SUB V1009 V1011
0x1194: LOG V1011 V1012 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1004 V1001
0x1195: V1013 = 0x1
0x119d: JUMP S4
0x119e: JUMPDEST 
0x119f: V1014 = 0x0
0x11a3: V1015 = ADD S1 S0
0x11a8: V1016 = LT V1015 S1
0x11a9: V1017 = ISZERO V1016
0x11aa: V1018 = ISZERO V1017
0x11ab: V1019 = ISZERO V1018
0x11ac: V1020 = 0xd8b
0x11af: THROWI V1019
---
Entry stack: [S1, 0x0]
Stack pops: 0
Stack additions: [S1, V957, 0xc34, S0, S1, S2, V985, 0xcc7, S1, S2, S3, 0x1, V1015, S0, S1]
Exit stack: []

================================

Block 0x11b0
[0x11b0:0x11c6]
---
Predecessors: [0x1005]
Successors: [0x11c7]
---
0x11b0 INVALID
0x11b1 JUMPDEST
0x11b2 DUP1
0x11b3 SWAP1
0x11b4 POP
0x11b5 SWAP3
0x11b6 SWAP2
0x11b7 POP
0x11b8 POP
0x11b9 JUMP
0x11ba JUMPDEST
0x11bb PUSH1 0x0
0x11bd DUP3
0x11be DUP3
0x11bf GT
0x11c0 ISZERO
0x11c1 ISZERO
0x11c2 ISZERO
0x11c3 PUSH2 0xda2
0x11c6 JUMPI
---
0x11b0: INVALID 
0x11b1: JUMPDEST 
0x11b9: JUMP S3
0x11ba: JUMPDEST 
0x11bb: V1021 = 0x0
0x11bf: V1022 = GT S0 S1
0x11c0: V1023 = ISZERO V1022
0x11c1: V1024 = ISZERO V1023
0x11c2: V1025 = ISZERO V1024
0x11c3: V1026 = 0xda2
0x11c6: THROWI V1025
---
Entry stack: [S2, S1, V1015]
Stack pops: 0
Stack additions: [S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x11c7
[0x11c7:0x11e0]
---
Predecessors: [0x11b0]
Successors: [0x11e1]
---
0x11c7 INVALID
0x11c8 JUMPDEST
0x11c9 DUP2
0x11ca DUP4
0x11cb SUB
0x11cc SWAP1
0x11cd POP
0x11ce SWAP3
0x11cf SWAP2
0x11d0 POP
0x11d1 POP
0x11d2 JUMP
0x11d3 JUMPDEST
0x11d4 DUP2
0x11d5 SLOAD
0x11d6 DUP2
0x11d7 DUP4
0x11d8 SSTORE
0x11d9 DUP2
0x11da DUP2
0x11db GT
0x11dc ISZERO
0x11dd PUSH2 0xdd4
0x11e0 JUMPI
---
0x11c7: INVALID 
0x11c8: JUMPDEST 
0x11cb: V1027 = SUB S2 S1
0x11d2: JUMP S3
0x11d3: JUMPDEST 
0x11d5: V1028 = S[S1]
0x11d8: S[S1] = S0
0x11db: V1029 = GT V1028 S0
0x11dc: V1030 = ISZERO V1029
0x11dd: V1031 = 0xdd4
0x11e0: THROWI V1030
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1027, V1028, S0, S1]
Exit stack: []

================================

Block 0x11e1
[0x11e1:0x11f9]
---
Predecessors: [0x11c7]
Successors: [0x11fa]
---
0x11e1 DUP2
0x11e2 DUP4
0x11e3 PUSH1 0x0
0x11e5 MSTORE
0x11e6 PUSH1 0x20
0x11e8 PUSH1 0x0
0x11ea SHA3
0x11eb SWAP2
0x11ec DUP3
0x11ed ADD
0x11ee SWAP2
0x11ef ADD
0x11f0 PUSH2 0xdd3
0x11f3 SWAP2
0x11f4 SWAP1
0x11f5 PUSH2 0xdd9
0x11f8 JUMP
0x11f9 JUMPDEST
---
0x11e3: V1032 = 0x0
0x11e5: M[0x0] = S2
0x11e6: V1033 = 0x20
0x11e8: V1034 = 0x0
0x11ea: V1035 = SHA3 0x0 0x20
0x11ed: V1036 = ADD V1035 V1028
0x11ef: V1037 = ADD V1035 S1
0x11f0: V1038 = 0xdd3
0x11f5: V1039 = 0xdd9
0x11f8: THROW 
0x11f9: JUMPDEST 
---
Entry stack: [S2, S1, V1028]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0x11fa
[0x11fa:0x1204]
---
Predecessors: [0x11e1]
Successors: [0x1205]
---
0x11fa JUMPDEST
0x11fb POP
0x11fc POP
0x11fd POP
0x11fe JUMP
0x11ff JUMPDEST
0x1200 PUSH2 0xdfb
0x1203 SWAP2
0x1204 SWAP1
---
0x11fa: JUMPDEST 
0x11fe: JUMP S3
0x11ff: JUMPDEST 
0x1200: V1040 = 0xdfb
---
Entry stack: []
Stack pops: 8
Stack additions: [S0, S1, 0xdfb]
Exit stack: []

================================

Block 0x1205
[0x1205:0x120d]
---
Predecessors: [0x11fa]
Successors: [0x120e]
---
0x1205 JUMPDEST
0x1206 DUP1
0x1207 DUP3
0x1208 GT
0x1209 ISZERO
0x120a PUSH2 0xdf7
0x120d JUMPI
---
0x1205: JUMPDEST 
0x1208: V1041 = GT S1 S0
0x1209: V1042 = ISZERO V1041
0x120a: V1043 = 0xdf7
0x120d: THROWI V1042
---
Entry stack: [0xdfb, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0xdfb, S1, S0]

================================

Block 0x120e
[0x120e:0x124f]
---
Predecessors: [0x1205]
Successors: []
---
0x120e PUSH1 0x0
0x1210 DUP2
0x1211 PUSH1 0x0
0x1213 SWAP1
0x1214 SSTORE
0x1215 POP
0x1216 PUSH1 0x1
0x1218 ADD
0x1219 PUSH2 0xddf
0x121c JUMP
0x121d JUMPDEST
0x121e POP
0x121f SWAP1
0x1220 JUMP
0x1221 JUMPDEST
0x1222 SWAP1
0x1223 JUMP
0x1224 STOP
0x1225 LOG1
0x1226 PUSH6 0x627a7a723058
0x122d SHA3
0x122e MISSING 0x47
0x122f MISSING 0xe8
0x1230 PUSH10 0x4e9f5bd01e7e2eb1ecc8
0x123b SWAP2
0x123c PUSH12 0x15b20042e3cf1985cd9de968
0x1249 DUP16
0x124a MISSING 0x48
0x124b DUP12
0x124c MISSING 0xfc
0x124d MISSING 0x26
0x124e STOP
0x124f MISSING 0x29
---
0x120e: V1044 = 0x0
0x1211: V1045 = 0x0
0x1214: S[S0] = 0x0
0x1216: V1046 = 0x1
0x1218: V1047 = ADD 0x1 S0
0x1219: V1048 = 0xddf
0x121c: THROW 
0x121d: JUMPDEST 
0x1220: JUMP S2
0x1221: JUMPDEST 
0x1223: JUMP S1
0x1224: STOP 
0x1225: LOG S0 S1 S2
0x1226: V1049 = 0x627a7a723058
0x122d: V1050 = SHA3 0x627a7a723058 S3
0x122e: MISSING 0x47
0x122f: MISSING 0xe8
0x1230: V1051 = 0x4e9f5bd01e7e2eb1ecc8
0x123c: V1052 = 0x15b20042e3cf1985cd9de968
0x124a: MISSING 0x48
0x124c: MISSING 0xfc
0x124d: MISSING 0x26
0x124e: STOP 
0x124f: MISSING 0x29
---
Entry stack: [0xdfb, S1, S0]
Stack pops: 6
Stack additions: [S13, 0x15b20042e3cf1985cd9de968, S1, S0, 0x4e9f5bd01e7e2eb1ecc8, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x18160ddd
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x143

Function 1:
Public function signature: 0x70a08231
Entry block: 0x87
Exit block: 0xc8
Body: 0x87, 0x8f, 0x93, 0xc8, 0x14d

Function 2:
Public function signature: 0xa9059cbb
Entry block: 0xde
Exit block: 0x129
Body: 0xde, 0xe6, 0xea, 0x129, 0x195, 0x1e0, 0x1e4, 0x235, 0x2c8, 0x379, 0x386, 0x387, 0x392, 0x3a4, 0x3a5

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

