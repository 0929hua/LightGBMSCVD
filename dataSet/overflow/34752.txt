Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x7b]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x7b
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x7b
0x3e: JUMPI 0x7b V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x10a]
---
0x3f DUP1
0x40 PUSH4 0x23b872dd
0x45 EQ
0x46 PUSH2 0x10a
0x49 JUMPI
---
0x40: V14 = 0x23b872dd
0x45: V15 = EQ 0x23b872dd V10
0x46: V16 = 0x10a
0x49: JUMPI 0x10a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x183]
---
0x4a DUP1
0x4b PUSH4 0x313ce567
0x50 EQ
0x51 PUSH2 0x183
0x54 JUMPI
---
0x4b: V17 = 0x313ce567
0x50: V18 = EQ 0x313ce567 V10
0x51: V19 = 0x183
0x54: JUMPI 0x183 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1b2]
---
0x55 DUP1
0x56 PUSH4 0x8da5cb5b
0x5b EQ
0x5c PUSH2 0x1b2
0x5f JUMPI
---
0x56: V20 = 0x8da5cb5b
0x5b: V21 = EQ 0x8da5cb5b V10
0x5c: V22 = 0x1b2
0x5f: JUMPI 0x1b2 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x207]
---
0x60 DUP1
0x61 PUSH4 0x95d89b41
0x66 EQ
0x67 PUSH2 0x207
0x6a JUMPI
---
0x61: V23 = 0x95d89b41
0x66: V24 = EQ 0x95d89b41 V10
0x67: V25 = 0x207
0x6a: JUMPI 0x207 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x296]
---
0x6b DUP1
0x6c PUSH4 0xa9059cbb
0x71 EQ
0x72 PUSH2 0x296
0x75 JUMPI
---
0x6c: V26 = 0xa9059cbb
0x71: V27 = EQ 0xa9059cbb V10
0x72: V28 = 0x296
0x75: JUMPI 0x296 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x7a]
---
Predecessors: [0x0, 0x6b]
Successors: []
---
0x76 JUMPDEST
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x76: JUMPDEST 
0x77: V29 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7b
[0x7b:0x81]
---
Predecessors: [0xb]
Successors: [0x82, 0x86]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7b: JUMPDEST 
0x7c: V30 = CALLVALUE
0x7d: V31 = ISZERO V30
0x7e: V32 = 0x86
0x81: JUMPI 0x86 V31
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7b]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V33 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x86
[0x86:0x8d]
---
Predecessors: [0x7b]
Successors: [0x2d8]
---
0x86 JUMPDEST
0x87 PUSH2 0x8e
0x8a PUSH2 0x2d8
0x8d JUMP
---
0x86: JUMPDEST 
0x87: V34 = 0x8e
0x8a: V35 = 0x2d8
0x8d: JUMP 0x2d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8e]
Exit stack: [V10, 0x8e]

================================

Block 0x8e
[0x8e:0xb2]
---
Predecessors: [0x2d8]
Successors: [0xb3]
---
0x8e JUMPDEST
0x8f PUSH1 0x40
0x91 MLOAD
0x92 DUP1
0x93 DUP1
0x94 PUSH1 0x20
0x96 ADD
0x97 DUP3
0x98 DUP2
0x99 SUB
0x9a DUP3
0x9b MSTORE
0x9c DUP4
0x9d DUP2
0x9e DUP2
0x9f MLOAD
0xa0 DUP2
0xa1 MSTORE
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP2
0xa6 POP
0xa7 DUP1
0xa8 MLOAD
0xa9 SWAP1
0xaa PUSH1 0x20
0xac ADD
0xad SWAP1
0xae DUP1
0xaf DUP4
0xb0 DUP4
0xb1 PUSH1 0x0
---
0x8e: JUMPDEST 
0x8f: V36 = 0x40
0x91: V37 = M[0x40]
0x94: V38 = 0x20
0x96: V39 = ADD 0x20 V37
0x99: V40 = SUB V39 V37
0x9b: M[V37] = V40
0x9f: V41 = M[V205]
0xa1: M[V39] = V41
0xa2: V42 = 0x20
0xa4: V43 = ADD 0x20 V39
0xa8: V44 = M[V205]
0xaa: V45 = 0x20
0xac: V46 = ADD 0x20 V205
0xb1: V47 = 0x0
---
Entry stack: [V10, 0x8e, V205]
Stack pops: 1
Stack additions: [S0, V37, V37, V43, V46, V44, V44, V43, V46, 0x0]
Exit stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, 0x0]

================================

Block 0xb3
[0xb3:0xbb]
---
Predecessors: [0x8e, 0xc4]
Successors: [0xbc, 0xcf]
---
0xb3 JUMPDEST
0xb4 DUP4
0xb5 DUP2
0xb6 LT
0xb7 ISZERO
0xb8 PUSH2 0xcf
0xbb JUMPI
---
0xb3: JUMPDEST 
0xb6: V48 = LT S0 V44
0xb7: V49 = ISZERO V48
0xb8: V50 = 0xcf
0xbb: JUMPI 0xcf V49
---
Entry stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, S0]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb3]
Successors: [0xc4]
---
0xbc DUP1
0xbd DUP3
0xbe ADD
0xbf MLOAD
0xc0 DUP2
0xc1 DUP5
0xc2 ADD
0xc3 MSTORE
---
0xbe: V51 = ADD V46 S0
0xbf: V52 = M[V51]
0xc2: V53 = ADD V43 S0
0xc3: M[V53] = V52
---
Entry stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, S0]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xbc]
Successors: [0xb3]
---
0xc4 JUMPDEST
0xc5 PUSH1 0x20
0xc7 DUP2
0xc8 ADD
0xc9 SWAP1
0xca POP
0xcb PUSH2 0xb3
0xce JUMP
---
0xc4: JUMPDEST 
0xc5: V54 = 0x20
0xc8: V55 = ADD S0 0x20
0xcb: V56 = 0xb3
0xce: JUMP 0xb3
---
Entry stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, S0]
Stack pops: 1
Stack additions: [V55]
Exit stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, V55]

================================

Block 0xcf
[0xcf:0xe2]
---
Predecessors: [0xb3]
Successors: [0xe3, 0xfc]
---
0xcf JUMPDEST
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 SWAP1
0xd5 POP
0xd6 SWAP1
0xd7 DUP2
0xd8 ADD
0xd9 SWAP1
0xda PUSH1 0x1f
0xdc AND
0xdd DUP1
0xde ISZERO
0xdf PUSH2 0xfc
0xe2 JUMPI
---
0xcf: JUMPDEST 
0xd8: V57 = ADD V44 V43
0xda: V58 = 0x1f
0xdc: V59 = AND 0x1f V44
0xde: V60 = ISZERO V59
0xdf: V61 = 0xfc
0xe2: JUMPI 0xfc V60
---
Entry stack: [V10, 0x8e, V205, V37, V37, V43, V46, V44, V44, V43, V46, S0]
Stack pops: 7
Stack additions: [V57, V59]
Exit stack: [V10, 0x8e, V205, V37, V37, V57, V59]

================================

Block 0xe3
[0xe3:0xfb]
---
Predecessors: [0xcf]
Successors: [0xfc]
---
0xe3 DUP1
0xe4 DUP3
0xe5 SUB
0xe6 DUP1
0xe7 MLOAD
0xe8 PUSH1 0x1
0xea DUP4
0xeb PUSH1 0x20
0xed SUB
0xee PUSH2 0x100
0xf1 EXP
0xf2 SUB
0xf3 NOT
0xf4 AND
0xf5 DUP2
0xf6 MSTORE
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP2
0xfb POP
---
0xe5: V62 = SUB V57 V59
0xe7: V63 = M[V62]
0xe8: V64 = 0x1
0xeb: V65 = 0x20
0xed: V66 = SUB 0x20 V59
0xee: V67 = 0x100
0xf1: V68 = EXP 0x100 V66
0xf2: V69 = SUB V68 0x1
0xf3: V70 = NOT V69
0xf4: V71 = AND V70 V63
0xf6: M[V62] = V71
0xf7: V72 = 0x20
0xf9: V73 = ADD 0x20 V62
---
Entry stack: [V10, 0x8e, V205, V37, V37, V57, V59]
Stack pops: 2
Stack additions: [V73, S0]
Exit stack: [V10, 0x8e, V205, V37, V37, V73, V59]

================================

Block 0xfc
[0xfc:0x109]
---
Predecessors: [0xcf, 0xe3]
Successors: []
---
0xfc JUMPDEST
0xfd POP
0xfe SWAP3
0xff POP
0x100 POP
0x101 POP
0x102 PUSH1 0x40
0x104 MLOAD
0x105 DUP1
0x106 SWAP2
0x107 SUB
0x108 SWAP1
0x109 RETURN
---
0xfc: JUMPDEST 
0x102: V74 = 0x40
0x104: V75 = M[0x40]
0x107: V76 = SUB S1 V75
0x109: RETURN V75 V76
---
Entry stack: [V10, 0x8e, V205, V37, V37, S1, V59]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x8e]

================================

Block 0x10a
[0x10a:0x110]
---
Predecessors: [0x3f]
Successors: [0x111, 0x115]
---
0x10a JUMPDEST
0x10b CALLVALUE
0x10c ISZERO
0x10d PUSH2 0x115
0x110 JUMPI
---
0x10a: JUMPDEST 
0x10b: V77 = CALLVALUE
0x10c: V78 = ISZERO V77
0x10d: V79 = 0x115
0x110: JUMPI 0x115 V78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x111
[0x111:0x114]
---
Predecessors: [0x10a]
Successors: []
---
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x111: V80 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x168]
---
Predecessors: [0x10a]
Successors: [0x311]
---
0x115 JUMPDEST
0x116 PUSH2 0x169
0x119 PUSH1 0x4
0x11b DUP1
0x11c DUP1
0x11d CALLDATALOAD
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 AND
0x134 SWAP1
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP1
0x139 SWAP2
0x13a SWAP1
0x13b DUP1
0x13c CALLDATALOAD
0x13d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x152 AND
0x153 SWAP1
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP1
0x158 SWAP2
0x159 SWAP1
0x15a DUP1
0x15b CALLDATALOAD
0x15c SWAP1
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 SWAP2
0x162 SWAP1
0x163 POP
0x164 POP
0x165 PUSH2 0x311
0x168 JUMP
---
0x115: JUMPDEST 
0x116: V81 = 0x169
0x119: V82 = 0x4
0x11d: V83 = CALLDATALOAD 0x4
0x11e: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x135: V86 = 0x20
0x137: V87 = ADD 0x20 0x4
0x13c: V88 = CALLDATALOAD 0x24
0x13d: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x152: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x154: V91 = 0x20
0x156: V92 = ADD 0x20 0x24
0x15b: V93 = CALLDATALOAD 0x44
0x15d: V94 = 0x20
0x15f: V95 = ADD 0x20 0x44
0x165: V96 = 0x311
0x168: JUMP 0x311
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x169, V85, V90, V93]
Exit stack: [V10, 0x169, V85, V90, V93]

================================

Block 0x169
[0x169:0x182]
---
Predecessors: [0x323]
Successors: []
---
0x169 JUMPDEST
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e DUP3
0x16f ISZERO
0x170 ISZERO
0x171 ISZERO
0x172 ISZERO
0x173 DUP2
0x174 MSTORE
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP2
0x179 POP
0x17a POP
0x17b PUSH1 0x40
0x17d MLOAD
0x17e DUP1
0x17f SWAP2
0x180 SUB
0x181 SWAP1
0x182 RETURN
---
0x169: JUMPDEST 
0x16a: V97 = 0x40
0x16c: V98 = M[0x40]
0x16f: V99 = ISZERO 0x1
0x170: V100 = ISZERO 0x0
0x171: V101 = ISZERO 0x1
0x172: V102 = ISZERO 0x0
0x174: M[V98] = 0x1
0x175: V103 = 0x20
0x177: V104 = ADD 0x20 V98
0x17b: V105 = 0x40
0x17d: V106 = M[0x40]
0x180: V107 = SUB V104 V106
0x182: RETURN V106 V107
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x183
[0x183:0x189]
---
Predecessors: [0x4a]
Successors: [0x18a, 0x18e]
---
0x183 JUMPDEST
0x184 CALLVALUE
0x185 ISZERO
0x186 PUSH2 0x18e
0x189 JUMPI
---
0x183: JUMPDEST 
0x184: V108 = CALLVALUE
0x185: V109 = ISZERO V108
0x186: V110 = 0x18e
0x189: JUMPI 0x18e V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18a
[0x18a:0x18d]
---
Predecessors: [0x183]
Successors: []
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d REVERT
---
0x18a: V111 = 0x0
0x18d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18e
[0x18e:0x195]
---
Predecessors: [0x183]
Successors: [0x32a]
---
0x18e JUMPDEST
0x18f PUSH2 0x196
0x192 PUSH2 0x32a
0x195 JUMP
---
0x18e: JUMPDEST 
0x18f: V112 = 0x196
0x192: V113 = 0x32a
0x195: JUMP 0x32a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x196]
Exit stack: [V10, 0x196]

================================

Block 0x196
[0x196:0x1b1]
---
Predecessors: [0x32a]
Successors: []
---
0x196 JUMPDEST
0x197 PUSH1 0x40
0x199 MLOAD
0x19a DUP1
0x19b DUP3
0x19c PUSH1 0xff
0x19e AND
0x19f PUSH1 0xff
0x1a1 AND
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP2
0x1a8 POP
0x1a9 POP
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad DUP1
0x1ae SWAP2
0x1af SUB
0x1b0 SWAP1
0x1b1 RETURN
---
0x196: JUMPDEST 
0x197: V114 = 0x40
0x199: V115 = M[0x40]
0x19c: V116 = 0xff
0x19e: V117 = AND 0xff 0x1
0x19f: V118 = 0xff
0x1a1: V119 = AND 0xff 0x1
0x1a3: M[V115] = 0x1
0x1a4: V120 = 0x20
0x1a6: V121 = ADD 0x20 V115
0x1aa: V122 = 0x40
0x1ac: V123 = M[0x40]
0x1af: V124 = SUB V121 V123
0x1b1: RETURN V123 V124
---
Entry stack: [V10, 0x196, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x196]

================================

Block 0x1b2
[0x1b2:0x1b8]
---
Predecessors: [0x55]
Successors: [0x1b9, 0x1bd]
---
0x1b2 JUMPDEST
0x1b3 CALLVALUE
0x1b4 ISZERO
0x1b5 PUSH2 0x1bd
0x1b8 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V125 = CALLVALUE
0x1b4: V126 = ISZERO V125
0x1b5: V127 = 0x1bd
0x1b8: JUMPI 0x1bd V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b9
[0x1b9:0x1bc]
---
Predecessors: [0x1b2]
Successors: []
---
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc REVERT
---
0x1b9: V128 = 0x0
0x1bc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x1b2]
Successors: [0x32f]
---
0x1bd JUMPDEST
0x1be PUSH2 0x1c5
0x1c1 PUSH2 0x32f
0x1c4 JUMP
---
0x1bd: JUMPDEST 
0x1be: V129 = 0x1c5
0x1c1: V130 = 0x32f
0x1c4: JUMP 0x32f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c5]
Exit stack: [V10, 0x1c5]

================================

Block 0x1c5
[0x1c5:0x206]
---
Predecessors: [0x32f]
Successors: []
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 DUP1
0x1ca DUP3
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP2
0x1fd POP
0x1fe POP
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP1
0x203 SWAP2
0x204 SUB
0x205 SWAP1
0x206 RETURN
---
0x1c5: JUMPDEST 
0x1c6: V131 = 0x40
0x1c8: V132 = M[0x40]
0x1cb: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x1e1: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1f8: M[V132] = V136
0x1f9: V137 = 0x20
0x1fb: V138 = ADD 0x20 V132
0x1ff: V139 = 0x40
0x201: V140 = M[0x40]
0x204: V141 = SUB V138 V140
0x206: RETURN V140 V141
---
Entry stack: [V10, 0x1c5, V223]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c5]

================================

Block 0x207
[0x207:0x20d]
---
Predecessors: [0x60]
Successors: [0x20e, 0x212]
---
0x207 JUMPDEST
0x208 CALLVALUE
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x207: JUMPDEST 
0x208: V142 = CALLVALUE
0x209: V143 = ISZERO V142
0x20a: V144 = 0x212
0x20d: JUMPI 0x212 V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x207]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V145 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x212
[0x212:0x219]
---
Predecessors: [0x207]
Successors: [0x354]
---
0x212 JUMPDEST
0x213 PUSH2 0x21a
0x216 PUSH2 0x354
0x219 JUMP
---
0x212: JUMPDEST 
0x213: V146 = 0x21a
0x216: V147 = 0x354
0x219: JUMP 0x354
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21a]
Exit stack: [V10, 0x21a]

================================

Block 0x21a
[0x21a:0x23e]
---
Predecessors: [0x354]
Successors: [0x23f]
---
0x21a JUMPDEST
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f DUP1
0x220 PUSH1 0x20
0x222 ADD
0x223 DUP3
0x224 DUP2
0x225 SUB
0x226 DUP3
0x227 MSTORE
0x228 DUP4
0x229 DUP2
0x22a DUP2
0x22b MLOAD
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP2
0x232 POP
0x233 DUP1
0x234 MLOAD
0x235 SWAP1
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP1
0x23a DUP1
0x23b DUP4
0x23c DUP4
0x23d PUSH1 0x0
---
0x21a: JUMPDEST 
0x21b: V148 = 0x40
0x21d: V149 = M[0x40]
0x220: V150 = 0x20
0x222: V151 = ADD 0x20 V149
0x225: V152 = SUB V151 V149
0x227: M[V149] = V152
0x22b: V153 = M[V225]
0x22d: M[V151] = V153
0x22e: V154 = 0x20
0x230: V155 = ADD 0x20 V151
0x234: V156 = M[V225]
0x236: V157 = 0x20
0x238: V158 = ADD 0x20 V225
0x23d: V159 = 0x0
---
Entry stack: [V10, 0x21a, V225]
Stack pops: 1
Stack additions: [S0, V149, V149, V155, V158, V156, V156, V155, V158, 0x0]
Exit stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, 0x0]

================================

Block 0x23f
[0x23f:0x247]
---
Predecessors: [0x21a, 0x250]
Successors: [0x248, 0x25b]
---
0x23f JUMPDEST
0x240 DUP4
0x241 DUP2
0x242 LT
0x243 ISZERO
0x244 PUSH2 0x25b
0x247 JUMPI
---
0x23f: JUMPDEST 
0x242: V160 = LT S0 V156
0x243: V161 = ISZERO V160
0x244: V162 = 0x25b
0x247: JUMPI 0x25b V161
---
Entry stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, S0]

================================

Block 0x248
[0x248:0x24f]
---
Predecessors: [0x23f]
Successors: [0x250]
---
0x248 DUP1
0x249 DUP3
0x24a ADD
0x24b MLOAD
0x24c DUP2
0x24d DUP5
0x24e ADD
0x24f MSTORE
---
0x24a: V163 = ADD V158 S0
0x24b: V164 = M[V163]
0x24e: V165 = ADD V155 S0
0x24f: M[V165] = V164
---
Entry stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, S0]

================================

Block 0x250
[0x250:0x25a]
---
Predecessors: [0x248]
Successors: [0x23f]
---
0x250 JUMPDEST
0x251 PUSH1 0x20
0x253 DUP2
0x254 ADD
0x255 SWAP1
0x256 POP
0x257 PUSH2 0x23f
0x25a JUMP
---
0x250: JUMPDEST 
0x251: V166 = 0x20
0x254: V167 = ADD S0 0x20
0x257: V168 = 0x23f
0x25a: JUMP 0x23f
---
Entry stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, S0]
Stack pops: 1
Stack additions: [V167]
Exit stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, V167]

================================

Block 0x25b
[0x25b:0x26e]
---
Predecessors: [0x23f]
Successors: [0x26f, 0x288]
---
0x25b JUMPDEST
0x25c POP
0x25d POP
0x25e POP
0x25f POP
0x260 SWAP1
0x261 POP
0x262 SWAP1
0x263 DUP2
0x264 ADD
0x265 SWAP1
0x266 PUSH1 0x1f
0x268 AND
0x269 DUP1
0x26a ISZERO
0x26b PUSH2 0x288
0x26e JUMPI
---
0x25b: JUMPDEST 
0x264: V169 = ADD V156 V155
0x266: V170 = 0x1f
0x268: V171 = AND 0x1f V156
0x26a: V172 = ISZERO V171
0x26b: V173 = 0x288
0x26e: JUMPI 0x288 V172
---
Entry stack: [V10, 0x21a, V225, V149, V149, V155, V158, V156, V156, V155, V158, S0]
Stack pops: 7
Stack additions: [V169, V171]
Exit stack: [V10, 0x21a, V225, V149, V149, V169, V171]

================================

Block 0x26f
[0x26f:0x287]
---
Predecessors: [0x25b]
Successors: [0x288]
---
0x26f DUP1
0x270 DUP3
0x271 SUB
0x272 DUP1
0x273 MLOAD
0x274 PUSH1 0x1
0x276 DUP4
0x277 PUSH1 0x20
0x279 SUB
0x27a PUSH2 0x100
0x27d EXP
0x27e SUB
0x27f NOT
0x280 AND
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP2
0x287 POP
---
0x271: V174 = SUB V169 V171
0x273: V175 = M[V174]
0x274: V176 = 0x1
0x277: V177 = 0x20
0x279: V178 = SUB 0x20 V171
0x27a: V179 = 0x100
0x27d: V180 = EXP 0x100 V178
0x27e: V181 = SUB V180 0x1
0x27f: V182 = NOT V181
0x280: V183 = AND V182 V175
0x282: M[V174] = V183
0x283: V184 = 0x20
0x285: V185 = ADD 0x20 V174
---
Entry stack: [V10, 0x21a, V225, V149, V149, V169, V171]
Stack pops: 2
Stack additions: [V185, S0]
Exit stack: [V10, 0x21a, V225, V149, V149, V185, V171]

================================

Block 0x288
[0x288:0x295]
---
Predecessors: [0x25b, 0x26f]
Successors: []
---
0x288 JUMPDEST
0x289 POP
0x28a SWAP3
0x28b POP
0x28c POP
0x28d POP
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 SWAP2
0x293 SUB
0x294 SWAP1
0x295 RETURN
---
0x288: JUMPDEST 
0x28e: V186 = 0x40
0x290: V187 = M[0x40]
0x293: V188 = SUB S1 V187
0x295: RETURN V187 V188
---
Entry stack: [V10, 0x21a, V225, V149, V149, S1, V171]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x21a]

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x6b]
Successors: [0x29d, 0x2a1]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V189 = CALLVALUE
0x298: V190 = ISZERO V189
0x299: V191 = 0x2a1
0x29c: JUMPI 0x2a1 V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x296]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V192 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a1
[0x2a1:0x2d5]
---
Predecessors: [0x296]
Successors: [0x38d]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x2d6
0x2a5 PUSH1 0x4
0x2a7 DUP1
0x2a8 DUP1
0x2a9 CALLDATALOAD
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 SWAP1
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 SWAP1
0x2c5 SWAP2
0x2c6 SWAP1
0x2c7 DUP1
0x2c8 CALLDATALOAD
0x2c9 SWAP1
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP1
0x2ce SWAP2
0x2cf SWAP1
0x2d0 POP
0x2d1 POP
0x2d2 PUSH2 0x38d
0x2d5 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V193 = 0x2d6
0x2a5: V194 = 0x4
0x2a9: V195 = CALLDATALOAD 0x4
0x2aa: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x2c1: V198 = 0x20
0x2c3: V199 = ADD 0x20 0x4
0x2c8: V200 = CALLDATALOAD 0x24
0x2ca: V201 = 0x20
0x2cc: V202 = ADD 0x20 0x24
0x2d2: V203 = 0x38d
0x2d5: JUMP 0x38d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d6, V197, V200]
Exit stack: [V10, 0x2d6, V197, V200]

================================

Block 0x2d6
[0x2d6:0x2d7]
---
Predecessors: [0x399]
Successors: []
---
0x2d6 JUMPDEST
0x2d7 STOP
---
0x2d6: JUMPDEST 
0x2d7: STOP 
---
Entry stack: [V10, 0x169, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x169, S0]

================================

Block 0x2d8
[0x2d8:0x310]
---
Predecessors: [0x86]
Successors: [0x8e]
---
0x2d8 JUMPDEST
0x2d9 PUSH1 0x40
0x2db DUP1
0x2dc MLOAD
0x2dd SWAP1
0x2de DUP2
0x2df ADD
0x2e0 PUSH1 0x40
0x2e2 MSTORE
0x2e3 DUP1
0x2e4 PUSH1 0x8
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb PUSH32 0x42696f6265616e73000000000000000000000000000000000000000000000000
0x30c DUP2
0x30d MSTORE
0x30e POP
0x30f DUP2
0x310 JUMP
---
0x2d8: JUMPDEST 
0x2d9: V204 = 0x40
0x2dc: V205 = M[0x40]
0x2df: V206 = ADD V205 0x40
0x2e0: V207 = 0x40
0x2e2: M[0x40] = V206
0x2e4: V208 = 0x8
0x2e7: M[V205] = 0x8
0x2e8: V209 = 0x20
0x2ea: V210 = ADD 0x20 V205
0x2eb: V211 = 0x42696f6265616e73000000000000000000000000000000000000000000000000
0x30d: M[V210] = 0x42696f6265616e73000000000000000000000000000000000000000000000000
0x310: JUMP 0x8e
---
Entry stack: [V10, 0x8e]
Stack pops: 1
Stack additions: [S0, V205]
Exit stack: [V10, 0x8e, V205]

================================

Block 0x311
[0x311:0x31d]
---
Predecessors: [0x115]
Successors: [0x39d]
---
0x311 JUMPDEST
0x312 PUSH1 0x0
0x314 PUSH2 0x31e
0x317 DUP5
0x318 DUP5
0x319 DUP5
0x31a PUSH2 0x39d
0x31d JUMP
---
0x311: JUMPDEST 
0x312: V212 = 0x0
0x314: V213 = 0x31e
0x31a: V214 = 0x39d
0x31d: JUMP 0x39d
---
Entry stack: [V10, 0x169, V85, V90, V93]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x31e, S2, S1, S0]
Exit stack: [V10, 0x169, V85, V90, V93, 0x0, 0x31e, V85, V90, V93]

================================

Block 0x31e
[0x31e:0x322]
---
Predecessors: [0x6ae]
Successors: [0x323]
---
0x31e JUMPDEST
0x31f PUSH1 0x1
0x321 SWAP1
0x322 POP
---
0x31e: JUMPDEST 
0x31f: V215 = 0x1
---
Entry stack: [V10, 0x169, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x169, S3, S2, S1, 0x1]

================================

Block 0x323
[0x323:0x329]
---
Predecessors: [0x31e]
Successors: [0x169]
---
0x323 JUMPDEST
0x324 SWAP4
0x325 SWAP3
0x326 POP
0x327 POP
0x328 POP
0x329 JUMP
---
0x323: JUMPDEST 
0x329: JUMP 0x169
---
Entry stack: [V10, 0x169, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x32a
[0x32a:0x32e]
---
Predecessors: [0x18e]
Successors: [0x196]
---
0x32a JUMPDEST
0x32b PUSH1 0x1
0x32d DUP2
0x32e JUMP
---
0x32a: JUMPDEST 
0x32b: V216 = 0x1
0x32e: JUMP 0x196
---
Entry stack: [V10, 0x196]
Stack pops: 1
Stack additions: [S0, 0x1]
Exit stack: [V10, 0x196, 0x1]

================================

Block 0x32f
[0x32f:0x353]
---
Predecessors: [0x1bd]
Successors: [0x1c5]
---
0x32f JUMPDEST
0x330 PUSH1 0x0
0x332 DUP1
0x333 SWAP1
0x334 SLOAD
0x335 SWAP1
0x336 PUSH2 0x100
0x339 EXP
0x33a SWAP1
0x33b DIV
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 DUP2
0x353 JUMP
---
0x32f: JUMPDEST 
0x330: V217 = 0x0
0x334: V218 = S[0x0]
0x336: V219 = 0x100
0x339: V220 = EXP 0x100 0x0
0x33b: V221 = DIV V218 0x1
0x33c: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x353: JUMP 0x1c5
---
Entry stack: [V10, 0x1c5]
Stack pops: 1
Stack additions: [S0, V223]
Exit stack: [V10, 0x1c5, V223]

================================

Block 0x354
[0x354:0x38c]
---
Predecessors: [0x212]
Successors: [0x21a]
---
0x354 JUMPDEST
0x355 PUSH1 0x40
0x357 DUP1
0x358 MLOAD
0x359 SWAP1
0x35a DUP2
0x35b ADD
0x35c PUSH1 0x40
0x35e MSTORE
0x35f DUP1
0x360 PUSH1 0x4
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 ADD
0x367 PUSH32 0x42494f4200000000000000000000000000000000000000000000000000000000
0x388 DUP2
0x389 MSTORE
0x38a POP
0x38b DUP2
0x38c JUMP
---
0x354: JUMPDEST 
0x355: V224 = 0x40
0x358: V225 = M[0x40]
0x35b: V226 = ADD V225 0x40
0x35c: V227 = 0x40
0x35e: M[0x40] = V226
0x360: V228 = 0x4
0x363: M[V225] = 0x4
0x364: V229 = 0x20
0x366: V230 = ADD 0x20 V225
0x367: V231 = 0x42494f4200000000000000000000000000000000000000000000000000000000
0x389: M[V230] = 0x42494f4200000000000000000000000000000000000000000000000000000000
0x38c: JUMP 0x21a
---
Entry stack: [V10, 0x21a]
Stack pops: 1
Stack additions: [S0, V225]
Exit stack: [V10, 0x21a, V225]

================================

Block 0x38d
[0x38d:0x397]
---
Predecessors: [0x2a1]
Successors: [0x39d]
---
0x38d JUMPDEST
0x38e PUSH2 0x398
0x391 CALLER
0x392 DUP4
0x393 DUP4
0x394 PUSH2 0x39d
0x397 JUMP
---
0x38d: JUMPDEST 
0x38e: V232 = 0x398
0x391: V233 = CALLER
0x394: V234 = 0x39d
0x397: JUMP 0x39d
---
Entry stack: [V10, 0x2d6, V197, V200]
Stack pops: 2
Stack additions: [S1, S0, 0x398, V233, S1, S0]
Exit stack: [V10, 0x2d6, V197, V200, 0x398, V233, V197, V200]

================================

Block 0x398
[0x398:0x398]
---
Predecessors: [0x6ae]
Successors: [0x399]
---
0x398 JUMPDEST
---
0x398: JUMPDEST 
---
Entry stack: [V10, 0x169, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x169, S3, S2, S1, S0]

================================

Block 0x399
[0x399:0x39c]
---
Predecessors: [0x398]
Successors: [0x2d6]
---
0x399 JUMPDEST
0x39a POP
0x39b POP
0x39c JUMP
---
0x399: JUMPDEST 
0x39c: JUMP S2
---
Entry stack: [V10, 0x169, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x169, S3]

================================

Block 0x39d
[0x39d:0x3bf]
---
Predecessors: [0x311, 0x38d]
Successors: [0x3c0, 0x3c4]
---
0x39d JUMPDEST
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 DUP4
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 EQ
0x3b9 ISZERO
0x3ba ISZERO
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x39d: JUMPDEST 
0x39e: V235 = 0x0
0x3a2: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x3b8: V238 = EQ V237 0x0
0x3b9: V239 = ISZERO V238
0x3ba: V240 = ISZERO V239
0x3bb: V241 = ISZERO V240
0x3bc: V242 = 0x3c4
0x3bf: JUMPI 0x3c4 V241
---
Entry stack: [V10, 0x169, S7, S6, S5, S4, {0x31e, 0x398}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x169, S7, S6, S5, S4, {0x31e, 0x398}, S2, S1, S0, 0x0]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x39d]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V243 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]

================================

Block 0x3c4
[0x3c4:0x40d]
---
Predecessors: [0x39d]
Successors: [0x40e, 0x412]
---
0x3c4 JUMPDEST
0x3c5 DUP2
0x3c6 PUSH1 0x2
0x3c8 PUSH1 0x0
0x3ca DUP7
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP1
0x3fd DUP2
0x3fe MSTORE
0x3ff PUSH1 0x20
0x401 ADD
0x402 PUSH1 0x0
0x404 SHA3
0x405 SLOAD
0x406 LT
0x407 ISZERO
0x408 ISZERO
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x3c4: JUMPDEST 
0x3c6: V244 = 0x2
0x3c8: V245 = 0x0
0x3cb: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x3e1: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x3f8: M[0x0] = V249
0x3f9: V250 = 0x20
0x3fb: V251 = ADD 0x20 0x0
0x3fe: M[0x20] = 0x2
0x3ff: V252 = 0x20
0x401: V253 = ADD 0x20 0x20
0x402: V254 = 0x0
0x404: V255 = SHA3 0x0 0x40
0x405: V256 = S[V255]
0x406: V257 = LT V256 S1
0x407: V258 = ISZERO V257
0x408: V259 = ISZERO V258
0x409: V260 = ISZERO V259
0x40a: V261 = 0x412
0x40d: JUMPI 0x412 V260
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x3c4]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V262 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]

================================

Block 0x412
[0x412:0x49b]
---
Predecessors: [0x3c4]
Successors: [0x49c, 0x4a0]
---
0x412 JUMPDEST
0x413 PUSH1 0x2
0x415 PUSH1 0x0
0x417 DUP5
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 DUP2
0x445 MSTORE
0x446 PUSH1 0x20
0x448 ADD
0x449 SWAP1
0x44a DUP2
0x44b MSTORE
0x44c PUSH1 0x20
0x44e ADD
0x44f PUSH1 0x0
0x451 SHA3
0x452 SLOAD
0x453 DUP3
0x454 PUSH1 0x2
0x456 PUSH1 0x0
0x458 DUP7
0x459 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46e AND
0x46f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x484 AND
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x20
0x489 ADD
0x48a SWAP1
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x20
0x48f ADD
0x490 PUSH1 0x0
0x492 SHA3
0x493 SLOAD
0x494 ADD
0x495 GT
0x496 ISZERO
0x497 ISZERO
0x498 PUSH2 0x4a0
0x49b JUMPI
---
0x412: JUMPDEST 
0x413: V263 = 0x2
0x415: V264 = 0x0
0x418: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x42e: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x445: M[0x0] = V268
0x446: V269 = 0x20
0x448: V270 = ADD 0x20 0x0
0x44b: M[0x20] = 0x2
0x44c: V271 = 0x20
0x44e: V272 = ADD 0x20 0x20
0x44f: V273 = 0x0
0x451: V274 = SHA3 0x0 0x40
0x452: V275 = S[V274]
0x454: V276 = 0x2
0x456: V277 = 0x0
0x459: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x46e: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x46f: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x484: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x486: M[0x0] = V281
0x487: V282 = 0x20
0x489: V283 = ADD 0x20 0x0
0x48c: M[0x20] = 0x2
0x48d: V284 = 0x20
0x48f: V285 = ADD 0x20 0x20
0x490: V286 = 0x0
0x492: V287 = SHA3 0x0 0x40
0x493: V288 = S[V287]
0x494: V289 = ADD V288 S1
0x495: V290 = GT V289 V275
0x496: V291 = ISZERO V290
0x497: V292 = ISZERO V291
0x498: V293 = 0x4a0
0x49b: JUMPI 0x4a0 V292
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]

================================

Block 0x49c
[0x49c:0x49f]
---
Predecessors: [0x412]
Successors: []
---
0x49c PUSH1 0x0
0x49e DUP1
0x49f REVERT
---
0x49c: V294 = 0x0
0x49f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]

================================

Block 0x4a0
[0x4a0:0x6ab]
---
Predecessors: [0x412]
Successors: [0x6ac, 0x6ad]
---
0x4a0 JUMPDEST
0x4a1 PUSH1 0x2
0x4a3 PUSH1 0x0
0x4a5 DUP5
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d1 AND
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 SWAP1
0x4d8 DUP2
0x4d9 MSTORE
0x4da PUSH1 0x20
0x4dc ADD
0x4dd PUSH1 0x0
0x4df SHA3
0x4e0 SLOAD
0x4e1 PUSH1 0x2
0x4e3 PUSH1 0x0
0x4e5 DUP7
0x4e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fb AND
0x4fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x511 AND
0x512 DUP2
0x513 MSTORE
0x514 PUSH1 0x20
0x516 ADD
0x517 SWAP1
0x518 DUP2
0x519 MSTORE
0x51a PUSH1 0x20
0x51c ADD
0x51d PUSH1 0x0
0x51f SHA3
0x520 SLOAD
0x521 ADD
0x522 SWAP1
0x523 POP
0x524 DUP2
0x525 PUSH1 0x2
0x527 PUSH1 0x0
0x529 DUP7
0x52a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53f AND
0x540 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x555 AND
0x556 DUP2
0x557 MSTORE
0x558 PUSH1 0x20
0x55a ADD
0x55b SWAP1
0x55c DUP2
0x55d MSTORE
0x55e PUSH1 0x20
0x560 ADD
0x561 PUSH1 0x0
0x563 SHA3
0x564 PUSH1 0x0
0x566 DUP3
0x567 DUP3
0x568 SLOAD
0x569 SUB
0x56a SWAP3
0x56b POP
0x56c POP
0x56d DUP2
0x56e SWAP1
0x56f SSTORE
0x570 POP
0x571 DUP2
0x572 PUSH1 0x2
0x574 PUSH1 0x0
0x576 DUP6
0x577 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58c AND
0x58d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a2 AND
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 SWAP1
0x5a9 DUP2
0x5aa MSTORE
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae PUSH1 0x0
0x5b0 SHA3
0x5b1 PUSH1 0x0
0x5b3 DUP3
0x5b4 DUP3
0x5b5 SLOAD
0x5b6 ADD
0x5b7 SWAP3
0x5b8 POP
0x5b9 POP
0x5ba DUP2
0x5bb SWAP1
0x5bc SSTORE
0x5bd POP
0x5be DUP3
0x5bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d4 AND
0x5d5 DUP5
0x5d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5eb AND
0x5ec PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x60d DUP5
0x60e PUSH1 0x40
0x610 MLOAD
0x611 DUP1
0x612 DUP3
0x613 DUP2
0x614 MSTORE
0x615 PUSH1 0x20
0x617 ADD
0x618 SWAP2
0x619 POP
0x61a POP
0x61b PUSH1 0x40
0x61d MLOAD
0x61e DUP1
0x61f SWAP2
0x620 SUB
0x621 SWAP1
0x622 LOG3
0x623 DUP1
0x624 PUSH1 0x2
0x626 PUSH1 0x0
0x628 DUP6
0x629 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63e AND
0x63f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x654 AND
0x655 DUP2
0x656 MSTORE
0x657 PUSH1 0x20
0x659 ADD
0x65a SWAP1
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f ADD
0x660 PUSH1 0x0
0x662 SHA3
0x663 SLOAD
0x664 PUSH1 0x2
0x666 PUSH1 0x0
0x668 DUP8
0x669 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67e AND
0x67f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x694 AND
0x695 DUP2
0x696 MSTORE
0x697 PUSH1 0x20
0x699 ADD
0x69a SWAP1
0x69b DUP2
0x69c MSTORE
0x69d PUSH1 0x20
0x69f ADD
0x6a0 PUSH1 0x0
0x6a2 SHA3
0x6a3 SLOAD
0x6a4 ADD
0x6a5 EQ
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 PUSH2 0x6ad
0x6ab JUMPI
---
0x4a0: JUMPDEST 
0x4a1: V295 = 0x2
0x4a3: V296 = 0x0
0x4a6: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x4bc: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x4d3: M[0x0] = V300
0x4d4: V301 = 0x20
0x4d6: V302 = ADD 0x20 0x0
0x4d9: M[0x20] = 0x2
0x4da: V303 = 0x20
0x4dc: V304 = ADD 0x20 0x20
0x4dd: V305 = 0x0
0x4df: V306 = SHA3 0x0 0x40
0x4e0: V307 = S[V306]
0x4e1: V308 = 0x2
0x4e3: V309 = 0x0
0x4e6: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x4fc: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x511: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x513: M[0x0] = V313
0x514: V314 = 0x20
0x516: V315 = ADD 0x20 0x0
0x519: M[0x20] = 0x2
0x51a: V316 = 0x20
0x51c: V317 = ADD 0x20 0x20
0x51d: V318 = 0x0
0x51f: V319 = SHA3 0x0 0x40
0x520: V320 = S[V319]
0x521: V321 = ADD V320 V307
0x525: V322 = 0x2
0x527: V323 = 0x0
0x52a: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x53f: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x540: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x555: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x557: M[0x0] = V327
0x558: V328 = 0x20
0x55a: V329 = ADD 0x20 0x0
0x55d: M[0x20] = 0x2
0x55e: V330 = 0x20
0x560: V331 = ADD 0x20 0x20
0x561: V332 = 0x0
0x563: V333 = SHA3 0x0 0x40
0x564: V334 = 0x0
0x568: V335 = S[V333]
0x569: V336 = SUB V335 S1
0x56f: S[V333] = V336
0x572: V337 = 0x2
0x574: V338 = 0x0
0x577: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x58c: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x58d: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x5a4: M[0x0] = V342
0x5a5: V343 = 0x20
0x5a7: V344 = ADD 0x20 0x0
0x5aa: M[0x20] = 0x2
0x5ab: V345 = 0x20
0x5ad: V346 = ADD 0x20 0x20
0x5ae: V347 = 0x0
0x5b0: V348 = SHA3 0x0 0x40
0x5b1: V349 = 0x0
0x5b5: V350 = S[V348]
0x5b6: V351 = ADD V350 S1
0x5bc: S[V348] = V351
0x5bf: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x5d6: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x5ec: V356 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x60e: V357 = 0x40
0x610: V358 = M[0x40]
0x614: M[V358] = S1
0x615: V359 = 0x20
0x617: V360 = ADD 0x20 V358
0x61b: V361 = 0x40
0x61d: V362 = M[0x40]
0x620: V363 = SUB V360 V362
0x622: LOG V362 V363 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V355 V353
0x624: V364 = 0x2
0x626: V365 = 0x0
0x629: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x63e: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x63f: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x654: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x656: M[0x0] = V369
0x657: V370 = 0x20
0x659: V371 = ADD 0x20 0x0
0x65c: M[0x20] = 0x2
0x65d: V372 = 0x20
0x65f: V373 = ADD 0x20 0x20
0x660: V374 = 0x0
0x662: V375 = SHA3 0x0 0x40
0x663: V376 = S[V375]
0x664: V377 = 0x2
0x666: V378 = 0x0
0x669: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x67f: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x694: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x696: M[0x0] = V382
0x697: V383 = 0x20
0x699: V384 = ADD 0x20 0x0
0x69c: M[0x20] = 0x2
0x69d: V385 = 0x20
0x69f: V386 = ADD 0x20 0x20
0x6a0: V387 = 0x0
0x6a2: V388 = SHA3 0x0 0x40
0x6a3: V389 = S[V388]
0x6a4: V390 = ADD V389 V376
0x6a5: V391 = EQ V390 V321
0x6a6: V392 = ISZERO V391
0x6a7: V393 = ISZERO V392
0x6a8: V394 = 0x6ad
0x6ab: JUMPI 0x6ad V393
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V321]
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, V321]

================================

Block 0x6ac
[0x6ac:0x6ac]
---
Predecessors: [0x4a0]
Successors: []
---
0x6ac INVALID
---
0x6ac: INVALID 
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, V321]

================================

Block 0x6ad
[0x6ad:0x6ad]
---
Predecessors: [0x4a0]
Successors: [0x6ae]
---
0x6ad JUMPDEST
---
0x6ad: JUMPDEST 
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, V321]

================================

Block 0x6ae
[0x6ae:0x6b3]
---
Predecessors: [0x6ad]
Successors: [0x31e, 0x398]
---
0x6ae JUMPDEST
0x6af POP
0x6b0 POP
0x6b1 POP
0x6b2 POP
0x6b3 JUMP
---
0x6ae: JUMPDEST 
0x6b3: JUMP {0x31e, 0x398}
---
Entry stack: [V10, 0x169, S8, S7, S6, S5, {0x31e, 0x398}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x169, S8, S7, S6, S5]

================================

Block 0x6b4
[0x6b4:0x6e6]
---
Predecessors: []
Successors: []
---
0x6b4 STOP
0x6b5 LOG1
0x6b6 PUSH6 0x627a7a723058
0x6bd SHA3
0x6be MISSING 0xfc
0x6bf DIV
0x6c0 LOG1
0x6c1 SWAP1
0x6c2 MISSING 0x26
0x6c3 PUSH5 0xe7037ba53e
0x6c9 JUMP
0x6ca MISSING 0xbd
0x6cb NUMBER
0x6cc DUP2
0x6cd DUP8
0x6ce DUP13
0x6cf LOG0
0x6d0 PUSH22 0x2748d3ac808ca80d2d4faa5350029
---
0x6b4: STOP 
0x6b5: LOG S0 S1 S2
0x6b6: V395 = 0x627a7a723058
0x6bd: V396 = SHA3 0x627a7a723058 S3
0x6be: MISSING 0xfc
0x6bf: V397 = DIV S0 S1
0x6c0: LOG V397 S2 S3
0x6c2: MISSING 0x26
0x6c3: V398 = 0xe7037ba53e
0x6c9: THROW 
0x6ca: MISSING 0xbd
0x6cb: V399 = NUMBER
0x6cf: LOG S9 S5
0x6d0: V400 = 0x2748d3ac808ca80d2d4faa5350029
---
Entry stack: []
Stack pops: 0
Stack additions: [V396, S5, S4, 0x2748d3ac808ca80d2d4faa5350029, S0, V399, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x7b
Exit block: 0xfc
Body: 0x7b, 0x82, 0x86, 0x8e, 0xb3, 0xbc, 0xc4, 0xcf, 0xe3, 0xfc, 0x2d8

Function 1:
Public function signature: 0x23b872dd
Entry block: 0x10a
Exit block: 0x169
Body: 0x10a, 0x111, 0x115, 0x169, 0x311, 0x31e, 0x323

Function 2:
Public function signature: 0x313ce567
Entry block: 0x183
Exit block: 0x196
Body: 0x183, 0x18a, 0x18e, 0x196, 0x32a

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1b2
Exit block: 0x1c5
Body: 0x1b2, 0x1b9, 0x1bd, 0x1c5, 0x32f

Function 4:
Public function signature: 0x95d89b41
Entry block: 0x207
Exit block: 0x288
Body: 0x207, 0x20e, 0x212, 0x21a, 0x23f, 0x248, 0x250, 0x25b, 0x26f, 0x288, 0x354

Function 5:
Public function signature: 0xa9059cbb
Entry block: 0x296
Exit block: 0x2d6
Body: 0x296, 0x29d, 0x2a1, 0x2d6, 0x38d, 0x398, 0x399

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x76
Body: 0x76

Function 7:
Private function
Entry block: 0x39d
Exit block: 0x6ae
Body: 0x39d, 0x3c4, 0x412, 0x4a0, 0x6ad, 0x6ae

