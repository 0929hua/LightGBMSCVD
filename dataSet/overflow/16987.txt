Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x3f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH1 0x3f
0xb JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3f
0xb: JUMPI 0x3f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc
[0xc:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x44]
---
0xc PUSH1 0x0
0xe CALLDATALOAD
0xf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d SWAP1
0x2e DIV
0x2f PUSH4 0xffffffff
0x34 AND
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH1 0x44
0x3e JUMPI
---
0xc: V6 = 0x0
0xe: V7 = CALLDATALOAD 0x0
0xf: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0xffffffff
0x34: V11 = AND 0xffffffff V9
0x36: V12 = 0x8da5cb5b
0x3b: V13 = EQ 0x8da5cb5b V11
0x3c: V14 = 0x44
0x3e: JUMPI 0x44 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x43]
---
Predecessors: [0x0, 0xc]
Successors: []
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 DUP1
0x43 REVERT
---
0x3f: JUMPDEST 
0x40: V15 = 0x0
0x43: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44
[0x44:0x49]
---
Predecessors: [0xc]
Successors: [0x4a, 0x4e]
---
0x44 JUMPDEST
0x45 CALLVALUE
0x46 ISZERO
0x47 PUSH1 0x4e
0x49 JUMPI
---
0x44: JUMPDEST 
0x45: V16 = CALLVALUE
0x46: V17 = ISZERO V16
0x47: V18 = 0x4e
0x49: JUMPI 0x4e V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x44]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V19 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x53]
---
Predecessors: [0x44]
Successors: [0x96]
---
0x4e JUMPDEST
0x4f PUSH1 0x54
0x51 PUSH1 0x96
0x53 JUMP
---
0x4e: JUMPDEST 
0x4f: V20 = 0x54
0x51: V21 = 0x96
0x53: JUMP 0x96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x54]
Exit stack: [V11, 0x54]

================================

Block 0x54
[0x54:0x95]
---
Predecessors: [0x96]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH1 0x40
0x57 MLOAD
0x58 DUP1
0x59 DUP3
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 DUP2
0x87 MSTORE
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP2
0x8c POP
0x8d POP
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 SWAP2
0x93 SUB
0x94 SWAP1
0x95 RETURN
---
0x54: JUMPDEST 
0x55: V22 = 0x40
0x57: V23 = M[0x40]
0x5a: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x70: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x87: M[V23] = V27
0x88: V28 = 0x20
0x8a: V29 = ADD 0x20 V23
0x8e: V30 = 0x40
0x90: V31 = M[0x40]
0x93: V32 = SUB V29 V31
0x95: RETURN V31 V32
---
Entry stack: [V11, 0x54, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x54]

================================

Block 0x96
[0x96:0xba]
---
Predecessors: [0x4e]
Successors: [0x54]
---
0x96 JUMPDEST
0x97 PUSH1 0x0
0x99 DUP1
0x9a SWAP1
0x9b SLOAD
0x9c SWAP1
0x9d PUSH2 0x100
0xa0 EXP
0xa1 SWAP1
0xa2 DIV
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 DUP2
0xba JUMP
---
0x96: JUMPDEST 
0x97: V33 = 0x0
0x9b: V34 = S[0x0]
0x9d: V35 = 0x100
0xa0: V36 = EXP 0x100 0x0
0xa2: V37 = DIV V34 0x1
0xa3: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xba: JUMP 0x54
---
Entry stack: [V11, 0x54]
Stack pops: 1
Stack additions: [S0, V39]
Exit stack: [V11, 0x54, V39]

================================

Block 0xbb
[0xbb:0x13f]
---
Predecessors: []
Successors: [0x140]
---
0xbb STOP
0xbc LOG1
0xbd PUSH6 0x627a7a723058
0xc4 SHA3
0xc5 RETURNDATASIZE
0xc6 MISSING 0xba
0xc7 MISSING 0xa6
0xc8 DUP9
0xc9 MISSING 0xfc
0xca JUMP
0xcb MISSING 0xae
0xcc BYTE
0xcd REVERT
0xce MISSING 0x28
0xcf MISSING 0x28
0xd0 CALLDATASIZE
0xd1 DUP10
0xd2 SWAP4
0xd3 MISSING 0xb2
0xd4 MISSING 0x4f
0xd5 MISSING 0x4d
0xd6 MISSING 0x5f
0xd7 CODECOPY
0xd8 MISSING 0xc5
0xd9 MISSING 0x2c
0xda MISSING 0xda
0xdb MISSING 0xc1
0xdc PUSH14 0x1d85e78cb895695002973000000
0xeb STOP
0xec STOP
0xed STOP
0xee STOP
0xef STOP
0xf0 STOP
0xf1 STOP
0xf2 STOP
0xf3 STOP
0xf4 STOP
0xf5 STOP
0xf6 STOP
0xf7 STOP
0xf8 STOP
0xf9 STOP
0xfa STOP
0xfb STOP
0xfc ADDRESS
0xfd EQ
0xfe PUSH1 0x60
0x100 PUSH1 0x40
0x102 MSTORE
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
0x107 STOP
0x108 LOG1
0x109 PUSH6 0x627a7a723058
0x110 SHA3
0x111 PUSH30 0x3bbba48d989ee3faa9fb15b3ad3005cf4a06428c226b6e8b058008c36ae8
0x130 MISSING 0xd6
0x131 STOP
0x132 MISSING 0x29
0x133 PUSH1 0x60
0x135 PUSH1 0x40
0x137 MSTORE
0x138 PUSH1 0x4
0x13a CALLDATASIZE
0x13b LT
0x13c PUSH2 0x99
0x13f JUMPI
---
0xbb: STOP 
0xbc: LOG S0 S1 S2
0xbd: V40 = 0x627a7a723058
0xc4: V41 = SHA3 0x627a7a723058 S3
0xc5: V42 = RETURNDATASIZE
0xc6: MISSING 0xba
0xc7: MISSING 0xa6
0xc9: MISSING 0xfc
0xca: JUMP S0
0xcb: MISSING 0xae
0xcc: V43 = BYTE S0 S1
0xcd: REVERT V43 S2
0xce: MISSING 0x28
0xcf: MISSING 0x28
0xd0: V44 = CALLDATASIZE
0xd3: MISSING 0xb2
0xd4: MISSING 0x4f
0xd5: MISSING 0x4d
0xd6: MISSING 0x5f
0xd7: CODECOPY S0 S1 S2
0xd8: MISSING 0xc5
0xd9: MISSING 0x2c
0xda: MISSING 0xda
0xdb: MISSING 0xc1
0xdc: V45 = 0x1d85e78cb895695002973000000
0xeb: STOP 
0xec: STOP 
0xed: STOP 
0xee: STOP 
0xef: STOP 
0xf0: STOP 
0xf1: STOP 
0xf2: STOP 
0xf3: STOP 
0xf4: STOP 
0xf5: STOP 
0xf6: STOP 
0xf7: STOP 
0xf8: STOP 
0xf9: STOP 
0xfa: STOP 
0xfb: STOP 
0xfc: V46 = ADDRESS
0xfd: V47 = EQ V46 S0
0xfe: V48 = 0x60
0x100: V49 = 0x40
0x102: M[0x40] = 0x60
0x103: V50 = 0x0
0x106: REVERT 0x0 0x0
0x107: STOP 
0x108: LOG S0 S1 S2
0x109: V51 = 0x627a7a723058
0x110: V52 = SHA3 0x627a7a723058 S3
0x111: V53 = 0x3bbba48d989ee3faa9fb15b3ad3005cf4a06428c226b6e8b058008c36ae8
0x130: MISSING 0xd6
0x131: STOP 
0x132: MISSING 0x29
0x133: V54 = 0x60
0x135: V55 = 0x40
0x137: M[0x40] = 0x60
0x138: V56 = 0x4
0x13a: V57 = CALLDATASIZE
0x13b: V58 = LT V57 0x4
0x13c: V59 = 0x99
0x13f: THROWI V58
---
Entry stack: []
Stack pops: 0
Stack additions: [V42, V41, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, S2, V44, S0, S1, S8, S3, S4, S5, S6, S7, S8, 0x1d85e78cb895695002973000000, V47, 0x3bbba48d989ee3faa9fb15b3ad3005cf4a06428c226b6e8b058008c36ae8, V52]
Exit stack: []

================================

Block 0x140
[0x140:0x173]
---
Predecessors: [0xbb]
Successors: [0x174]
---
0x140 PUSH1 0x0
0x142 CALLDATALOAD
0x143 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x161 SWAP1
0x162 DIV
0x163 PUSH4 0xffffffff
0x168 AND
0x169 DUP1
0x16a PUSH4 0x4a84938
0x16f EQ
0x170 PUSH2 0x9e
0x173 JUMPI
---
0x140: V60 = 0x0
0x142: V61 = CALLDATALOAD 0x0
0x143: V62 = 0x100000000000000000000000000000000000000000000000000000000
0x162: V63 = DIV V61 0x100000000000000000000000000000000000000000000000000000000
0x163: V64 = 0xffffffff
0x168: V65 = AND 0xffffffff V63
0x16a: V66 = 0x4a84938
0x16f: V67 = EQ 0x4a84938 V65
0x170: V68 = 0x9e
0x173: THROWI V67
---
Entry stack: []
Stack pops: 0
Stack additions: [V65]
Exit stack: [V65]

================================

Block 0x174
[0x174:0x17e]
---
Predecessors: [0x140]
Successors: [0x17f]
---
0x174 DUP1
0x175 PUSH4 0x6fdde03
0x17a EQ
0x17b PUSH2 0xc7
0x17e JUMPI
---
0x175: V69 = 0x6fdde03
0x17a: V70 = EQ 0x6fdde03 V65
0x17b: V71 = 0xc7
0x17e: THROWI V70
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x17f
[0x17f:0x189]
---
Predecessors: [0x174]
Successors: [0x18a]
---
0x17f DUP1
0x180 PUSH4 0x18160ddd
0x185 EQ
0x186 PUSH2 0x155
0x189 JUMPI
---
0x180: V72 = 0x18160ddd
0x185: V73 = EQ 0x18160ddd V65
0x186: V74 = 0x155
0x189: THROWI V73
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x18a
[0x18a:0x194]
---
Predecessors: [0x17f]
Successors: [0x195]
---
0x18a DUP1
0x18b PUSH4 0x313ce567
0x190 EQ
0x191 PUSH2 0x17e
0x194 JUMPI
---
0x18b: V75 = 0x313ce567
0x190: V76 = EQ 0x313ce567 V65
0x191: V77 = 0x17e
0x194: THROWI V76
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x195
[0x195:0x19f]
---
Predecessors: [0x18a]
Successors: [0x1a0]
---
0x195 DUP1
0x196 PUSH4 0x42966c68
0x19b EQ
0x19c PUSH2 0x1a7
0x19f JUMPI
---
0x196: V78 = 0x42966c68
0x19b: V79 = EQ 0x42966c68 V65
0x19c: V80 = 0x1a7
0x19f: THROWI V79
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x1a0
[0x1a0:0x1aa]
---
Predecessors: [0x195]
Successors: [0x1ab]
---
0x1a0 DUP1
0x1a1 PUSH4 0x70a08231
0x1a6 EQ
0x1a7 PUSH2 0x1ca
0x1aa JUMPI
---
0x1a1: V81 = 0x70a08231
0x1a6: V82 = EQ 0x70a08231 V65
0x1a7: V83 = 0x1ca
0x1aa: THROWI V82
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x1ab
[0x1ab:0x1b5]
---
Predecessors: [0x1a0]
Successors: [0x1b6]
---
0x1ab DUP1
0x1ac PUSH4 0x8da5cb5b
0x1b1 EQ
0x1b2 PUSH2 0x217
0x1b5 JUMPI
---
0x1ac: V84 = 0x8da5cb5b
0x1b1: V85 = EQ 0x8da5cb5b V65
0x1b2: V86 = 0x217
0x1b5: THROWI V85
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x1b6
[0x1b6:0x1c0]
---
Predecessors: [0x1ab]
Successors: [0x1c1]
---
0x1b6 DUP1
0x1b7 PUSH4 0x95d89b41
0x1bc EQ
0x1bd PUSH2 0x26c
0x1c0 JUMPI
---
0x1b7: V87 = 0x95d89b41
0x1bc: V88 = EQ 0x95d89b41 V65
0x1bd: V89 = 0x26c
0x1c0: THROWI V88
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x1c1
[0x1c1:0x1cb]
---
Predecessors: [0x1b6]
Successors: [0x1cc]
---
0x1c1 DUP1
0x1c2 PUSH4 0xa9059cbb
0x1c7 EQ
0x1c8 PUSH2 0x2fa
0x1cb JUMPI
---
0x1c2: V90 = 0xa9059cbb
0x1c7: V91 = EQ 0xa9059cbb V65
0x1c8: V92 = 0x2fa
0x1cb: THROWI V91
---
Entry stack: [V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V65]

================================

Block 0x1cc
[0x1cc:0x1d7]
---
Predecessors: [0x1c1]
Successors: [0x1d8]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0xa9
0x1d7 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V93 = 0x0
0x1d0: REVERT 0x0 0x0
0x1d1: JUMPDEST 
0x1d2: V94 = CALLVALUE
0x1d3: V95 = ISZERO V94
0x1d4: V96 = 0xa9
0x1d7: THROWI V95
---
Entry stack: [V65]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d8
[0x1d8:0x200]
---
Predecessors: [0x1cc]
Successors: [0x201]
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
0x1dc JUMPDEST
0x1dd PUSH2 0xb1
0x1e0 PUSH2 0x33c
0x1e3 JUMP
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 DUP3
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef SWAP2
0x1f0 POP
0x1f1 POP
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 RETURN
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0xd2
0x200 JUMPI
---
0x1d8: V97 = 0x0
0x1db: REVERT 0x0 0x0
0x1dc: JUMPDEST 
0x1dd: V98 = 0xb1
0x1e0: V99 = 0x33c
0x1e3: THROW 
0x1e4: JUMPDEST 
0x1e5: V100 = 0x40
0x1e7: V101 = M[0x40]
0x1eb: M[V101] = S0
0x1ec: V102 = 0x20
0x1ee: V103 = ADD 0x20 V101
0x1f2: V104 = 0x40
0x1f4: V105 = M[0x40]
0x1f7: V106 = SUB V103 V105
0x1f9: RETURN V105 V106
0x1fa: JUMPDEST 
0x1fb: V107 = CALLVALUE
0x1fc: V108 = ISZERO V107
0x1fd: V109 = 0xd2
0x200: THROWI V108
---
Entry stack: []
Stack pops: 0
Stack additions: [0xb1]
Exit stack: []

================================

Block 0x201
[0x201:0x231]
---
Predecessors: [0x1d8]
Successors: [0x232]
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
0x205 JUMPDEST
0x206 PUSH2 0xda
0x209 PUSH2 0x342
0x20c JUMP
0x20d JUMPDEST
0x20e PUSH1 0x40
0x210 MLOAD
0x211 DUP1
0x212 DUP1
0x213 PUSH1 0x20
0x215 ADD
0x216 DUP3
0x217 DUP2
0x218 SUB
0x219 DUP3
0x21a MSTORE
0x21b DUP4
0x21c DUP2
0x21d DUP2
0x21e MLOAD
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 SWAP2
0x225 POP
0x226 DUP1
0x227 MLOAD
0x228 SWAP1
0x229 PUSH1 0x20
0x22b ADD
0x22c SWAP1
0x22d DUP1
0x22e DUP4
0x22f DUP4
0x230 PUSH1 0x0
---
0x201: V110 = 0x0
0x204: REVERT 0x0 0x0
0x205: JUMPDEST 
0x206: V111 = 0xda
0x209: V112 = 0x342
0x20c: THROW 
0x20d: JUMPDEST 
0x20e: V113 = 0x40
0x210: V114 = M[0x40]
0x213: V115 = 0x20
0x215: V116 = ADD 0x20 V114
0x218: V117 = SUB V116 V114
0x21a: M[V114] = V117
0x21e: V118 = M[S0]
0x220: M[V116] = V118
0x221: V119 = 0x20
0x223: V120 = ADD 0x20 V116
0x227: V121 = M[S0]
0x229: V122 = 0x20
0x22b: V123 = ADD 0x20 S0
0x230: V124 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, 0x0, V123, V120, V121, V121, V123, V120, V114, V114, S0]
Exit stack: []

================================

Block 0x232
[0x232:0x23a]
---
Predecessors: [0x201]
Successors: [0x23b]
---
0x232 JUMPDEST
0x233 DUP4
0x234 DUP2
0x235 LT
0x236 ISZERO
0x237 PUSH2 0x11a
0x23a JUMPI
---
0x232: JUMPDEST 
0x235: V125 = LT 0x0 V121
0x236: V126 = ISZERO V125
0x237: V127 = 0x11a
0x23a: THROWI V126
---
Entry stack: [S9, V114, V114, V120, V123, V121, V121, V120, V123, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V114, V114, V120, V123, V121, V121, V120, V123, 0x0]

================================

Block 0x23b
[0x23b:0x260]
---
Predecessors: [0x232]
Successors: [0x261]
---
0x23b DUP1
0x23c DUP3
0x23d ADD
0x23e MLOAD
0x23f DUP2
0x240 DUP5
0x241 ADD
0x242 MSTORE
0x243 PUSH1 0x20
0x245 DUP2
0x246 ADD
0x247 SWAP1
0x248 POP
0x249 PUSH2 0xff
0x24c JUMP
0x24d JUMPDEST
0x24e POP
0x24f POP
0x250 POP
0x251 POP
0x252 SWAP1
0x253 POP
0x254 SWAP1
0x255 DUP2
0x256 ADD
0x257 SWAP1
0x258 PUSH1 0x1f
0x25a AND
0x25b DUP1
0x25c ISZERO
0x25d PUSH2 0x147
0x260 JUMPI
---
0x23d: V128 = ADD V123 0x0
0x23e: V129 = M[V128]
0x241: V130 = ADD V120 0x0
0x242: M[V130] = V129
0x243: V131 = 0x20
0x246: V132 = ADD 0x0 0x20
0x249: V133 = 0xff
0x24c: THROW 
0x24d: JUMPDEST 
0x256: V134 = ADD S4 S6
0x258: V135 = 0x1f
0x25a: V136 = AND 0x1f S4
0x25c: V137 = ISZERO V136
0x25d: V138 = 0x147
0x260: THROWI V137
---
Entry stack: [S9, V114, V114, V120, V123, V121, V121, V120, V123, 0x0]
Stack pops: 3
Stack additions: [V136, V134]
Exit stack: []

================================

Block 0x261
[0x261:0x279]
---
Predecessors: [0x23b]
Successors: [0x27a]
---
0x261 DUP1
0x262 DUP3
0x263 SUB
0x264 DUP1
0x265 MLOAD
0x266 PUSH1 0x1
0x268 DUP4
0x269 PUSH1 0x20
0x26b SUB
0x26c PUSH2 0x100
0x26f EXP
0x270 SUB
0x271 NOT
0x272 AND
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x20
0x277 ADD
0x278 SWAP2
0x279 POP
---
0x263: V139 = SUB V134 V136
0x265: V140 = M[V139]
0x266: V141 = 0x1
0x269: V142 = 0x20
0x26b: V143 = SUB 0x20 V136
0x26c: V144 = 0x100
0x26f: V145 = EXP 0x100 V143
0x270: V146 = SUB V145 0x1
0x271: V147 = NOT V146
0x272: V148 = AND V147 V140
0x274: M[V139] = V148
0x275: V149 = 0x20
0x277: V150 = ADD 0x20 V139
---
Entry stack: [V134, V136]
Stack pops: 2
Stack additions: [V150, S0]
Exit stack: [V150, V136]

================================

Block 0x27a
[0x27a:0x28e]
---
Predecessors: [0x261]
Successors: [0x28f]
---
0x27a JUMPDEST
0x27b POP
0x27c SWAP3
0x27d POP
0x27e POP
0x27f POP
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 SWAP2
0x285 SUB
0x286 SWAP1
0x287 RETURN
0x288 JUMPDEST
0x289 CALLVALUE
0x28a ISZERO
0x28b PUSH2 0x160
0x28e JUMPI
---
0x27a: JUMPDEST 
0x280: V151 = 0x40
0x282: V152 = M[0x40]
0x285: V153 = SUB V150 V152
0x287: RETURN V152 V153
0x288: JUMPDEST 
0x289: V154 = CALLVALUE
0x28a: V155 = ISZERO V154
0x28b: V156 = 0x160
0x28e: THROWI V155
---
Entry stack: [V150, V136]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x28f
[0x28f:0x2b7]
---
Predecessors: [0x27a]
Successors: [0x2b8]
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
0x293 JUMPDEST
0x294 PUSH2 0x168
0x297 PUSH2 0x3e0
0x29a JUMP
0x29b JUMPDEST
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 DUP3
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP2
0x2a7 POP
0x2a8 POP
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad SWAP2
0x2ae SUB
0x2af SWAP1
0x2b0 RETURN
0x2b1 JUMPDEST
0x2b2 CALLVALUE
0x2b3 ISZERO
0x2b4 PUSH2 0x189
0x2b7 JUMPI
---
0x28f: V157 = 0x0
0x292: REVERT 0x0 0x0
0x293: JUMPDEST 
0x294: V158 = 0x168
0x297: V159 = 0x3e0
0x29a: THROW 
0x29b: JUMPDEST 
0x29c: V160 = 0x40
0x29e: V161 = M[0x40]
0x2a2: M[V161] = S0
0x2a3: V162 = 0x20
0x2a5: V163 = ADD 0x20 V161
0x2a9: V164 = 0x40
0x2ab: V165 = M[0x40]
0x2ae: V166 = SUB V163 V165
0x2b0: RETURN V165 V166
0x2b1: JUMPDEST 
0x2b2: V167 = CALLVALUE
0x2b3: V168 = ISZERO V167
0x2b4: V169 = 0x189
0x2b7: THROWI V168
---
Entry stack: []
Stack pops: 0
Stack additions: [0x168]
Exit stack: []

================================

Block 0x2b8
[0x2b8:0x2e0]
---
Predecessors: [0x28f]
Successors: [0x2e1]
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
0x2bc JUMPDEST
0x2bd PUSH2 0x191
0x2c0 PUSH2 0x3e6
0x2c3 JUMP
0x2c4 JUMPDEST
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 DUP3
0x2ca DUP2
0x2cb MSTORE
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf SWAP2
0x2d0 POP
0x2d1 POP
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 DUP1
0x2d6 SWAP2
0x2d7 SUB
0x2d8 SWAP1
0x2d9 RETURN
0x2da JUMPDEST
0x2db CALLVALUE
0x2dc ISZERO
0x2dd PUSH2 0x1b2
0x2e0 JUMPI
---
0x2b8: V170 = 0x0
0x2bb: REVERT 0x0 0x0
0x2bc: JUMPDEST 
0x2bd: V171 = 0x191
0x2c0: V172 = 0x3e6
0x2c3: THROW 
0x2c4: JUMPDEST 
0x2c5: V173 = 0x40
0x2c7: V174 = M[0x40]
0x2cb: M[V174] = S0
0x2cc: V175 = 0x20
0x2ce: V176 = ADD 0x20 V174
0x2d2: V177 = 0x40
0x2d4: V178 = M[0x40]
0x2d7: V179 = SUB V176 V178
0x2d9: RETURN V178 V179
0x2da: JUMPDEST 
0x2db: V180 = CALLVALUE
0x2dc: V181 = ISZERO V180
0x2dd: V182 = 0x1b2
0x2e0: THROWI V181
---
Entry stack: []
Stack pops: 0
Stack additions: [0x191]
Exit stack: []

================================

Block 0x2e1
[0x2e1:0x303]
---
Predecessors: [0x2b8]
Successors: [0x304]
---
0x2e1 PUSH1 0x0
0x2e3 DUP1
0x2e4 REVERT
0x2e5 JUMPDEST
0x2e6 PUSH2 0x1c8
0x2e9 PUSH1 0x4
0x2eb DUP1
0x2ec DUP1
0x2ed CALLDATALOAD
0x2ee SWAP1
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 SWAP1
0x2f3 SWAP2
0x2f4 SWAP1
0x2f5 POP
0x2f6 POP
0x2f7 PUSH2 0x3ec
0x2fa JUMP
0x2fb JUMPDEST
0x2fc STOP
0x2fd JUMPDEST
0x2fe CALLVALUE
0x2ff ISZERO
0x300 PUSH2 0x1d5
0x303 JUMPI
---
0x2e1: V183 = 0x0
0x2e4: REVERT 0x0 0x0
0x2e5: JUMPDEST 
0x2e6: V184 = 0x1c8
0x2e9: V185 = 0x4
0x2ed: V186 = CALLDATALOAD 0x4
0x2ef: V187 = 0x20
0x2f1: V188 = ADD 0x20 0x4
0x2f7: V189 = 0x3ec
0x2fa: THROW 
0x2fb: JUMPDEST 
0x2fc: STOP 
0x2fd: JUMPDEST 
0x2fe: V190 = CALLVALUE
0x2ff: V191 = ISZERO V190
0x300: V192 = 0x1d5
0x303: THROWI V191
---
Entry stack: []
Stack pops: 0
Stack additions: [V186, 0x1c8]
Exit stack: []

================================

Block 0x304
[0x304:0x350]
---
Predecessors: [0x2e1]
Successors: [0x351]
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
0x308 JUMPDEST
0x309 PUSH2 0x201
0x30c PUSH1 0x4
0x30e DUP1
0x30f DUP1
0x310 CALLDATALOAD
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 SWAP1
0x328 PUSH1 0x20
0x32a ADD
0x32b SWAP1
0x32c SWAP2
0x32d SWAP1
0x32e POP
0x32f POP
0x330 PUSH2 0x3f9
0x333 JUMP
0x334 JUMPDEST
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 DUP3
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x20
0x33e ADD
0x33f SWAP2
0x340 POP
0x341 POP
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 SWAP2
0x347 SUB
0x348 SWAP1
0x349 RETURN
0x34a JUMPDEST
0x34b CALLVALUE
0x34c ISZERO
0x34d PUSH2 0x222
0x350 JUMPI
---
0x304: V193 = 0x0
0x307: REVERT 0x0 0x0
0x308: JUMPDEST 
0x309: V194 = 0x201
0x30c: V195 = 0x4
0x310: V196 = CALLDATALOAD 0x4
0x311: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x328: V199 = 0x20
0x32a: V200 = ADD 0x20 0x4
0x330: V201 = 0x3f9
0x333: THROW 
0x334: JUMPDEST 
0x335: V202 = 0x40
0x337: V203 = M[0x40]
0x33b: M[V203] = S0
0x33c: V204 = 0x20
0x33e: V205 = ADD 0x20 V203
0x342: V206 = 0x40
0x344: V207 = M[0x40]
0x347: V208 = SUB V205 V207
0x349: RETURN V207 V208
0x34a: JUMPDEST 
0x34b: V209 = CALLVALUE
0x34c: V210 = ISZERO V209
0x34d: V211 = 0x222
0x350: THROWI V210
---
Entry stack: []
Stack pops: 0
Stack additions: [V198, 0x201]
Exit stack: []

================================

Block 0x351
[0x351:0x3a5]
---
Predecessors: [0x304]
Successors: [0x3a6]
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
0x355 JUMPDEST
0x356 PUSH2 0x22a
0x359 PUSH2 0x411
0x35c JUMP
0x35d JUMPDEST
0x35e PUSH1 0x40
0x360 MLOAD
0x361 DUP1
0x362 DUP3
0x363 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x378 AND
0x379 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38e AND
0x38f DUP2
0x390 MSTORE
0x391 PUSH1 0x20
0x393 ADD
0x394 SWAP2
0x395 POP
0x396 POP
0x397 PUSH1 0x40
0x399 MLOAD
0x39a DUP1
0x39b SWAP2
0x39c SUB
0x39d SWAP1
0x39e RETURN
0x39f JUMPDEST
0x3a0 CALLVALUE
0x3a1 ISZERO
0x3a2 PUSH2 0x277
0x3a5 JUMPI
---
0x351: V212 = 0x0
0x354: REVERT 0x0 0x0
0x355: JUMPDEST 
0x356: V213 = 0x22a
0x359: V214 = 0x411
0x35c: THROW 
0x35d: JUMPDEST 
0x35e: V215 = 0x40
0x360: V216 = M[0x40]
0x363: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x378: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x379: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x38e: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x390: M[V216] = V220
0x391: V221 = 0x20
0x393: V222 = ADD 0x20 V216
0x397: V223 = 0x40
0x399: V224 = M[0x40]
0x39c: V225 = SUB V222 V224
0x39e: RETURN V224 V225
0x39f: JUMPDEST 
0x3a0: V226 = CALLVALUE
0x3a1: V227 = ISZERO V226
0x3a2: V228 = 0x277
0x3a5: THROWI V227
---
Entry stack: []
Stack pops: 0
Stack additions: [0x22a]
Exit stack: []

================================

Block 0x3a6
[0x3a6:0x3d6]
---
Predecessors: [0x351]
Successors: [0x3d7]
---
0x3a6 PUSH1 0x0
0x3a8 DUP1
0x3a9 REVERT
0x3aa JUMPDEST
0x3ab PUSH2 0x27f
0x3ae PUSH2 0x437
0x3b1 JUMP
0x3b2 JUMPDEST
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 DUP1
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb DUP3
0x3bc DUP2
0x3bd SUB
0x3be DUP3
0x3bf MSTORE
0x3c0 DUP4
0x3c1 DUP2
0x3c2 DUP2
0x3c3 MLOAD
0x3c4 DUP2
0x3c5 MSTORE
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP2
0x3ca POP
0x3cb DUP1
0x3cc MLOAD
0x3cd SWAP1
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP1
0x3d2 DUP1
0x3d3 DUP4
0x3d4 DUP4
0x3d5 PUSH1 0x0
---
0x3a6: V229 = 0x0
0x3a9: REVERT 0x0 0x0
0x3aa: JUMPDEST 
0x3ab: V230 = 0x27f
0x3ae: V231 = 0x437
0x3b1: THROW 
0x3b2: JUMPDEST 
0x3b3: V232 = 0x40
0x3b5: V233 = M[0x40]
0x3b8: V234 = 0x20
0x3ba: V235 = ADD 0x20 V233
0x3bd: V236 = SUB V235 V233
0x3bf: M[V233] = V236
0x3c3: V237 = M[S0]
0x3c5: M[V235] = V237
0x3c6: V238 = 0x20
0x3c8: V239 = ADD 0x20 V235
0x3cc: V240 = M[S0]
0x3ce: V241 = 0x20
0x3d0: V242 = ADD 0x20 S0
0x3d5: V243 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x27f, 0x0, V242, V239, V240, V240, V242, V239, V233, V233, S0]
Exit stack: []

================================

Block 0x3d7
[0x3d7:0x3df]
---
Predecessors: [0x3a6]
Successors: [0x3e0]
---
0x3d7 JUMPDEST
0x3d8 DUP4
0x3d9 DUP2
0x3da LT
0x3db ISZERO
0x3dc PUSH2 0x2bf
0x3df JUMPI
---
0x3d7: JUMPDEST 
0x3da: V244 = LT 0x0 V240
0x3db: V245 = ISZERO V244
0x3dc: V246 = 0x2bf
0x3df: THROWI V245
---
Entry stack: [S9, V233, V233, V239, V242, V240, V240, V239, V242, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V233, V233, V239, V242, V240, V240, V239, V242, 0x0]

================================

Block 0x3e0
[0x3e0:0x405]
---
Predecessors: [0x3d7]
Successors: [0x406]
---
0x3e0 DUP1
0x3e1 DUP3
0x3e2 ADD
0x3e3 MLOAD
0x3e4 DUP2
0x3e5 DUP5
0x3e6 ADD
0x3e7 MSTORE
0x3e8 PUSH1 0x20
0x3ea DUP2
0x3eb ADD
0x3ec SWAP1
0x3ed POP
0x3ee PUSH2 0x2a4
0x3f1 JUMP
0x3f2 JUMPDEST
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 SWAP1
0x3f8 POP
0x3f9 SWAP1
0x3fa DUP2
0x3fb ADD
0x3fc SWAP1
0x3fd PUSH1 0x1f
0x3ff AND
0x400 DUP1
0x401 ISZERO
0x402 PUSH2 0x2ec
0x405 JUMPI
---
0x3e2: V247 = ADD V242 0x0
0x3e3: V248 = M[V247]
0x3e6: V249 = ADD V239 0x0
0x3e7: M[V249] = V248
0x3e8: V250 = 0x20
0x3eb: V251 = ADD 0x0 0x20
0x3ee: V252 = 0x2a4
0x3f1: THROW 
0x3f2: JUMPDEST 
0x3fb: V253 = ADD S4 S6
0x3fd: V254 = 0x1f
0x3ff: V255 = AND 0x1f S4
0x401: V256 = ISZERO V255
0x402: V257 = 0x2ec
0x405: THROWI V256
---
Entry stack: [S9, V233, V233, V239, V242, V240, V240, V239, V242, 0x0]
Stack pops: 3
Stack additions: [V255, V253]
Exit stack: []

================================

Block 0x406
[0x406:0x41e]
---
Predecessors: [0x3e0]
Successors: [0x41f]
---
0x406 DUP1
0x407 DUP3
0x408 SUB
0x409 DUP1
0x40a MLOAD
0x40b PUSH1 0x1
0x40d DUP4
0x40e PUSH1 0x20
0x410 SUB
0x411 PUSH2 0x100
0x414 EXP
0x415 SUB
0x416 NOT
0x417 AND
0x418 DUP2
0x419 MSTORE
0x41a PUSH1 0x20
0x41c ADD
0x41d SWAP2
0x41e POP
---
0x408: V258 = SUB V253 V255
0x40a: V259 = M[V258]
0x40b: V260 = 0x1
0x40e: V261 = 0x20
0x410: V262 = SUB 0x20 V255
0x411: V263 = 0x100
0x414: V264 = EXP 0x100 V262
0x415: V265 = SUB V264 0x1
0x416: V266 = NOT V265
0x417: V267 = AND V266 V259
0x419: M[V258] = V267
0x41a: V268 = 0x20
0x41c: V269 = ADD 0x20 V258
---
Entry stack: [V253, V255]
Stack pops: 2
Stack additions: [V269, S0]
Exit stack: [V269, V255]

================================

Block 0x41f
[0x41f:0x433]
---
Predecessors: [0x406]
Successors: [0x434]
---
0x41f JUMPDEST
0x420 POP
0x421 SWAP3
0x422 POP
0x423 POP
0x424 POP
0x425 PUSH1 0x40
0x427 MLOAD
0x428 DUP1
0x429 SWAP2
0x42a SUB
0x42b SWAP1
0x42c RETURN
0x42d JUMPDEST
0x42e CALLVALUE
0x42f ISZERO
0x430 PUSH2 0x305
0x433 JUMPI
---
0x41f: JUMPDEST 
0x425: V270 = 0x40
0x427: V271 = M[0x40]
0x42a: V272 = SUB V269 V271
0x42c: RETURN V271 V272
0x42d: JUMPDEST 
0x42e: V273 = CALLVALUE
0x42f: V274 = ISZERO V273
0x430: V275 = 0x305
0x433: THROWI V274
---
Entry stack: [V269, V255]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x434
[0x434:0x4c4]
---
Predecessors: [0x41f]
Successors: [0x4c5]
---
0x434 PUSH1 0x0
0x436 DUP1
0x437 REVERT
0x438 JUMPDEST
0x439 PUSH2 0x33a
0x43c PUSH1 0x4
0x43e DUP1
0x43f DUP1
0x440 CALLDATALOAD
0x441 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x456 AND
0x457 SWAP1
0x458 PUSH1 0x20
0x45a ADD
0x45b SWAP1
0x45c SWAP2
0x45d SWAP1
0x45e DUP1
0x45f CALLDATALOAD
0x460 SWAP1
0x461 PUSH1 0x20
0x463 ADD
0x464 SWAP1
0x465 SWAP2
0x466 SWAP1
0x467 POP
0x468 POP
0x469 PUSH2 0x4d5
0x46c JUMP
0x46d JUMPDEST
0x46e STOP
0x46f JUMPDEST
0x470 PUSH1 0x7
0x472 SLOAD
0x473 DUP2
0x474 JUMP
0x475 JUMPDEST
0x476 PUSH1 0x1
0x478 DUP1
0x479 SLOAD
0x47a PUSH1 0x1
0x47c DUP2
0x47d PUSH1 0x1
0x47f AND
0x480 ISZERO
0x481 PUSH2 0x100
0x484 MUL
0x485 SUB
0x486 AND
0x487 PUSH1 0x2
0x489 SWAP1
0x48a DIV
0x48b DUP1
0x48c PUSH1 0x1f
0x48e ADD
0x48f PUSH1 0x20
0x491 DUP1
0x492 SWAP2
0x493 DIV
0x494 MUL
0x495 PUSH1 0x20
0x497 ADD
0x498 PUSH1 0x40
0x49a MLOAD
0x49b SWAP1
0x49c DUP2
0x49d ADD
0x49e PUSH1 0x40
0x4a0 MSTORE
0x4a1 DUP1
0x4a2 SWAP3
0x4a3 SWAP2
0x4a4 SWAP1
0x4a5 DUP2
0x4a6 DUP2
0x4a7 MSTORE
0x4a8 PUSH1 0x20
0x4aa ADD
0x4ab DUP3
0x4ac DUP1
0x4ad SLOAD
0x4ae PUSH1 0x1
0x4b0 DUP2
0x4b1 PUSH1 0x1
0x4b3 AND
0x4b4 ISZERO
0x4b5 PUSH2 0x100
0x4b8 MUL
0x4b9 SUB
0x4ba AND
0x4bb PUSH1 0x2
0x4bd SWAP1
0x4be DIV
0x4bf DUP1
0x4c0 ISZERO
0x4c1 PUSH2 0x3d8
0x4c4 JUMPI
---
0x434: V276 = 0x0
0x437: REVERT 0x0 0x0
0x438: JUMPDEST 
0x439: V277 = 0x33a
0x43c: V278 = 0x4
0x440: V279 = CALLDATALOAD 0x4
0x441: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x456: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x458: V282 = 0x20
0x45a: V283 = ADD 0x20 0x4
0x45f: V284 = CALLDATALOAD 0x24
0x461: V285 = 0x20
0x463: V286 = ADD 0x20 0x24
0x469: V287 = 0x4d5
0x46c: THROW 
0x46d: JUMPDEST 
0x46e: STOP 
0x46f: JUMPDEST 
0x470: V288 = 0x7
0x472: V289 = S[0x7]
0x474: JUMP S0
0x475: JUMPDEST 
0x476: V290 = 0x1
0x479: V291 = S[0x1]
0x47a: V292 = 0x1
0x47d: V293 = 0x1
0x47f: V294 = AND 0x1 V291
0x480: V295 = ISZERO V294
0x481: V296 = 0x100
0x484: V297 = MUL 0x100 V295
0x485: V298 = SUB V297 0x1
0x486: V299 = AND V298 V291
0x487: V300 = 0x2
0x48a: V301 = DIV V299 0x2
0x48c: V302 = 0x1f
0x48e: V303 = ADD 0x1f V301
0x48f: V304 = 0x20
0x493: V305 = DIV V303 0x20
0x494: V306 = MUL V305 0x20
0x495: V307 = 0x20
0x497: V308 = ADD 0x20 V306
0x498: V309 = 0x40
0x49a: V310 = M[0x40]
0x49d: V311 = ADD V310 V308
0x49e: V312 = 0x40
0x4a0: M[0x40] = V311
0x4a7: M[V310] = V301
0x4a8: V313 = 0x20
0x4aa: V314 = ADD 0x20 V310
0x4ad: V315 = S[0x1]
0x4ae: V316 = 0x1
0x4b1: V317 = 0x1
0x4b3: V318 = AND 0x1 V315
0x4b4: V319 = ISZERO V318
0x4b5: V320 = 0x100
0x4b8: V321 = MUL 0x100 V319
0x4b9: V322 = SUB V321 0x1
0x4ba: V323 = AND V322 V315
0x4bb: V324 = 0x2
0x4be: V325 = DIV V323 0x2
0x4c0: V326 = ISZERO V325
0x4c1: V327 = 0x3d8
0x4c4: THROWI V326
---
Entry stack: []
Stack pops: 0
Stack additions: [V284, V281, 0x33a, V289, S0, V325, 0x1, V314, V301, 0x1, V310]
Exit stack: []

================================

Block 0x4c5
[0x4c5:0x4cc]
---
Predecessors: [0x434]
Successors: [0x4cd]
---
0x4c5 DUP1
0x4c6 PUSH1 0x1f
0x4c8 LT
0x4c9 PUSH2 0x3ad
0x4cc JUMPI
---
0x4c6: V328 = 0x1f
0x4c8: V329 = LT 0x1f V325
0x4c9: V330 = 0x3ad
0x4cc: THROWI V329
---
Entry stack: [V310, 0x1, V301, V314, 0x1, V325]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V310, 0x1, V301, V314, 0x1, V325]

================================

Block 0x4cd
[0x4cd:0x4ed]
---
Predecessors: [0x4c5]
Successors: [0x4ee]
---
0x4cd PUSH2 0x100
0x4d0 DUP1
0x4d1 DUP4
0x4d2 SLOAD
0x4d3 DIV
0x4d4 MUL
0x4d5 DUP4
0x4d6 MSTORE
0x4d7 SWAP2
0x4d8 PUSH1 0x20
0x4da ADD
0x4db SWAP2
0x4dc PUSH2 0x3d8
0x4df JUMP
0x4e0 JUMPDEST
0x4e1 DUP3
0x4e2 ADD
0x4e3 SWAP2
0x4e4 SWAP1
0x4e5 PUSH1 0x0
0x4e7 MSTORE
0x4e8 PUSH1 0x20
0x4ea PUSH1 0x0
0x4ec SHA3
0x4ed SWAP1
---
0x4cd: V331 = 0x100
0x4d2: V332 = S[0x1]
0x4d3: V333 = DIV V332 0x100
0x4d4: V334 = MUL V333 0x100
0x4d6: M[V314] = V334
0x4d8: V335 = 0x20
0x4da: V336 = ADD 0x20 V314
0x4dc: V337 = 0x3d8
0x4df: THROW 
0x4e0: JUMPDEST 
0x4e2: V338 = ADD S2 S0
0x4e5: V339 = 0x0
0x4e7: M[0x0] = S1
0x4e8: V340 = 0x20
0x4ea: V341 = 0x0
0x4ec: V342 = SHA3 0x0 0x20
---
Entry stack: [V310, 0x1, V301, V314, 0x1, V325]
Stack pops: 3
Stack additions: [S2, V342, V338]
Exit stack: []

================================

Block 0x4ee
[0x4ee:0x501]
---
Predecessors: [0x4cd]
Successors: [0x502]
---
0x4ee JUMPDEST
0x4ef DUP2
0x4f0 SLOAD
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 SWAP1
0x4f4 PUSH1 0x1
0x4f6 ADD
0x4f7 SWAP1
0x4f8 PUSH1 0x20
0x4fa ADD
0x4fb DUP1
0x4fc DUP4
0x4fd GT
0x4fe PUSH2 0x3bb
0x501 JUMPI
---
0x4ee: JUMPDEST 
0x4f0: V343 = S[V342]
0x4f2: M[S0] = V343
0x4f4: V344 = 0x1
0x4f6: V345 = ADD 0x1 V342
0x4f8: V346 = 0x20
0x4fa: V347 = ADD 0x20 S0
0x4fd: V348 = GT V338 V347
0x4fe: V349 = 0x3bb
0x501: THROWI V348
---
Entry stack: [V338, V342, S0]
Stack pops: 3
Stack additions: [S2, V345, V347]
Exit stack: [V338, V345, V347]

================================

Block 0x502
[0x502:0x50a]
---
Predecessors: [0x4ee]
Successors: [0x50b]
---
0x502 DUP3
0x503 SWAP1
0x504 SUB
0x505 PUSH1 0x1f
0x507 AND
0x508 DUP3
0x509 ADD
0x50a SWAP2
---
0x504: V350 = SUB V347 V338
0x505: V351 = 0x1f
0x507: V352 = AND 0x1f V350
0x509: V353 = ADD V338 V352
---
Entry stack: [V338, V345, V347]
Stack pops: 3
Stack additions: [V353, S1, S2]
Exit stack: [V353, V345, V338]

================================

Block 0x50b
[0x50b:0x5b9]
---
Predecessors: [0x502]
Successors: [0x5ba]
---
0x50b JUMPDEST
0x50c POP
0x50d POP
0x50e POP
0x50f POP
0x510 POP
0x511 DUP2
0x512 JUMP
0x513 JUMPDEST
0x514 PUSH1 0x6
0x516 SLOAD
0x517 DUP2
0x518 JUMP
0x519 JUMPDEST
0x51a PUSH1 0x3
0x51c SLOAD
0x51d DUP2
0x51e JUMP
0x51f JUMPDEST
0x520 PUSH2 0x3f6
0x523 CALLER
0x524 DUP3
0x525 PUSH2 0x4e4
0x528 JUMP
0x529 JUMPDEST
0x52a POP
0x52b JUMP
0x52c JUMPDEST
0x52d PUSH1 0x8
0x52f PUSH1 0x20
0x531 MSTORE
0x532 DUP1
0x533 PUSH1 0x0
0x535 MSTORE
0x536 PUSH1 0x40
0x538 PUSH1 0x0
0x53a SHA3
0x53b PUSH1 0x0
0x53d SWAP2
0x53e POP
0x53f SWAP1
0x540 POP
0x541 SLOAD
0x542 DUP2
0x543 JUMP
0x544 JUMPDEST
0x545 PUSH1 0x5
0x547 PUSH1 0x0
0x549 SWAP1
0x54a SLOAD
0x54b SWAP1
0x54c PUSH2 0x100
0x54f EXP
0x550 SWAP1
0x551 DIV
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 AND
0x568 DUP2
0x569 JUMP
0x56a JUMPDEST
0x56b PUSH1 0x2
0x56d DUP1
0x56e SLOAD
0x56f PUSH1 0x1
0x571 DUP2
0x572 PUSH1 0x1
0x574 AND
0x575 ISZERO
0x576 PUSH2 0x100
0x579 MUL
0x57a SUB
0x57b AND
0x57c PUSH1 0x2
0x57e SWAP1
0x57f DIV
0x580 DUP1
0x581 PUSH1 0x1f
0x583 ADD
0x584 PUSH1 0x20
0x586 DUP1
0x587 SWAP2
0x588 DIV
0x589 MUL
0x58a PUSH1 0x20
0x58c ADD
0x58d PUSH1 0x40
0x58f MLOAD
0x590 SWAP1
0x591 DUP2
0x592 ADD
0x593 PUSH1 0x40
0x595 MSTORE
0x596 DUP1
0x597 SWAP3
0x598 SWAP2
0x599 SWAP1
0x59a DUP2
0x59b DUP2
0x59c MSTORE
0x59d PUSH1 0x20
0x59f ADD
0x5a0 DUP3
0x5a1 DUP1
0x5a2 SLOAD
0x5a3 PUSH1 0x1
0x5a5 DUP2
0x5a6 PUSH1 0x1
0x5a8 AND
0x5a9 ISZERO
0x5aa PUSH2 0x100
0x5ad MUL
0x5ae SUB
0x5af AND
0x5b0 PUSH1 0x2
0x5b2 SWAP1
0x5b3 DIV
0x5b4 DUP1
0x5b5 ISZERO
0x5b6 PUSH2 0x4cd
0x5b9 JUMPI
---
0x50b: JUMPDEST 
0x512: JUMP S6
0x513: JUMPDEST 
0x514: V354 = 0x6
0x516: V355 = S[0x6]
0x518: JUMP S0
0x519: JUMPDEST 
0x51a: V356 = 0x3
0x51c: V357 = S[0x3]
0x51e: JUMP S0
0x51f: JUMPDEST 
0x520: V358 = 0x3f6
0x523: V359 = CALLER
0x525: V360 = 0x4e4
0x528: THROW 
0x529: JUMPDEST 
0x52b: JUMP S1
0x52c: JUMPDEST 
0x52d: V361 = 0x8
0x52f: V362 = 0x20
0x531: M[0x20] = 0x8
0x533: V363 = 0x0
0x535: M[0x0] = S0
0x536: V364 = 0x40
0x538: V365 = 0x0
0x53a: V366 = SHA3 0x0 0x40
0x53b: V367 = 0x0
0x541: V368 = S[V366]
0x543: JUMP S1
0x544: JUMPDEST 
0x545: V369 = 0x5
0x547: V370 = 0x0
0x54a: V371 = S[0x5]
0x54c: V372 = 0x100
0x54f: V373 = EXP 0x100 0x0
0x551: V374 = DIV V371 0x1
0x552: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x569: JUMP S0
0x56a: JUMPDEST 
0x56b: V377 = 0x2
0x56e: V378 = S[0x2]
0x56f: V379 = 0x1
0x572: V380 = 0x1
0x574: V381 = AND 0x1 V378
0x575: V382 = ISZERO V381
0x576: V383 = 0x100
0x579: V384 = MUL 0x100 V382
0x57a: V385 = SUB V384 0x1
0x57b: V386 = AND V385 V378
0x57c: V387 = 0x2
0x57f: V388 = DIV V386 0x2
0x581: V389 = 0x1f
0x583: V390 = ADD 0x1f V388
0x584: V391 = 0x20
0x588: V392 = DIV V390 0x20
0x589: V393 = MUL V392 0x20
0x58a: V394 = 0x20
0x58c: V395 = ADD 0x20 V393
0x58d: V396 = 0x40
0x58f: V397 = M[0x40]
0x592: V398 = ADD V397 V395
0x593: V399 = 0x40
0x595: M[0x40] = V398
0x59c: M[V397] = V388
0x59d: V400 = 0x20
0x59f: V401 = ADD 0x20 V397
0x5a2: V402 = S[0x2]
0x5a3: V403 = 0x1
0x5a6: V404 = 0x1
0x5a8: V405 = AND 0x1 V402
0x5a9: V406 = ISZERO V405
0x5aa: V407 = 0x100
0x5ad: V408 = MUL 0x100 V406
0x5ae: V409 = SUB V408 0x1
0x5af: V410 = AND V409 V402
0x5b0: V411 = 0x2
0x5b3: V412 = DIV V410 0x2
0x5b5: V413 = ISZERO V412
0x5b6: V414 = 0x4cd
0x5b9: THROWI V413
---
Entry stack: [V353, V345, V338]
Stack pops: 634
Stack additions: [V412, 0x2, V401, V388, 0x2, V397]
Exit stack: []

================================

Block 0x5ba
[0x5ba:0x5c1]
---
Predecessors: [0x50b]
Successors: [0x5c2]
---
0x5ba DUP1
0x5bb PUSH1 0x1f
0x5bd LT
0x5be PUSH2 0x4a2
0x5c1 JUMPI
---
0x5bb: V415 = 0x1f
0x5bd: V416 = LT 0x1f V412
0x5be: V417 = 0x4a2
0x5c1: THROWI V416
---
Entry stack: [V397, 0x2, V388, V401, 0x2, V412]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V397, 0x2, V388, V401, 0x2, V412]

================================

Block 0x5c2
[0x5c2:0x5e2]
---
Predecessors: [0x5ba]
Successors: [0x5e3]
---
0x5c2 PUSH2 0x100
0x5c5 DUP1
0x5c6 DUP4
0x5c7 SLOAD
0x5c8 DIV
0x5c9 MUL
0x5ca DUP4
0x5cb MSTORE
0x5cc SWAP2
0x5cd PUSH1 0x20
0x5cf ADD
0x5d0 SWAP2
0x5d1 PUSH2 0x4cd
0x5d4 JUMP
0x5d5 JUMPDEST
0x5d6 DUP3
0x5d7 ADD
0x5d8 SWAP2
0x5d9 SWAP1
0x5da PUSH1 0x0
0x5dc MSTORE
0x5dd PUSH1 0x20
0x5df PUSH1 0x0
0x5e1 SHA3
0x5e2 SWAP1
---
0x5c2: V418 = 0x100
0x5c7: V419 = S[0x2]
0x5c8: V420 = DIV V419 0x100
0x5c9: V421 = MUL V420 0x100
0x5cb: M[V401] = V421
0x5cd: V422 = 0x20
0x5cf: V423 = ADD 0x20 V401
0x5d1: V424 = 0x4cd
0x5d4: THROW 
0x5d5: JUMPDEST 
0x5d7: V425 = ADD S2 S0
0x5da: V426 = 0x0
0x5dc: M[0x0] = S1
0x5dd: V427 = 0x20
0x5df: V428 = 0x0
0x5e1: V429 = SHA3 0x0 0x20
---
Entry stack: [V397, 0x2, V388, V401, 0x2, V412]
Stack pops: 3
Stack additions: [S2, V429, V425]
Exit stack: []

================================

Block 0x5e3
[0x5e3:0x5f6]
---
Predecessors: [0x5c2]
Successors: [0x5f7]
---
0x5e3 JUMPDEST
0x5e4 DUP2
0x5e5 SLOAD
0x5e6 DUP2
0x5e7 MSTORE
0x5e8 SWAP1
0x5e9 PUSH1 0x1
0x5eb ADD
0x5ec SWAP1
0x5ed PUSH1 0x20
0x5ef ADD
0x5f0 DUP1
0x5f1 DUP4
0x5f2 GT
0x5f3 PUSH2 0x4b0
0x5f6 JUMPI
---
0x5e3: JUMPDEST 
0x5e5: V430 = S[V429]
0x5e7: M[S0] = V430
0x5e9: V431 = 0x1
0x5eb: V432 = ADD 0x1 V429
0x5ed: V433 = 0x20
0x5ef: V434 = ADD 0x20 S0
0x5f2: V435 = GT V425 V434
0x5f3: V436 = 0x4b0
0x5f6: THROWI V435
---
Entry stack: [V425, V429, S0]
Stack pops: 3
Stack additions: [S2, V432, V434]
Exit stack: [V425, V432, V434]

================================

Block 0x5f7
[0x5f7:0x5ff]
---
Predecessors: [0x5e3]
Successors: [0x600]
---
0x5f7 DUP3
0x5f8 SWAP1
0x5f9 SUB
0x5fa PUSH1 0x1f
0x5fc AND
0x5fd DUP3
0x5fe ADD
0x5ff SWAP2
---
0x5f9: V437 = SUB V434 V425
0x5fa: V438 = 0x1f
0x5fc: V439 = AND 0x1f V437
0x5fe: V440 = ADD V425 V439
---
Entry stack: [V425, V432, V434]
Stack pops: 3
Stack additions: [V440, S1, S2]
Exit stack: [V440, V432, V425]

================================

Block 0x600
[0x600:0x660]
---
Predecessors: [0x5f7]
Successors: [0x661]
---
0x600 JUMPDEST
0x601 POP
0x602 POP
0x603 POP
0x604 POP
0x605 POP
0x606 DUP2
0x607 JUMP
0x608 JUMPDEST
0x609 PUSH2 0x4e0
0x60c CALLER
0x60d DUP4
0x60e DUP4
0x60f PUSH2 0x69a
0x612 JUMP
0x613 JUMPDEST
0x614 POP
0x615 POP
0x616 JUMP
0x617 JUMPDEST
0x618 PUSH1 0x8
0x61a PUSH1 0x0
0x61c DUP4
0x61d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x632 AND
0x633 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x648 AND
0x649 DUP2
0x64a MSTORE
0x64b PUSH1 0x20
0x64d ADD
0x64e SWAP1
0x64f DUP2
0x650 MSTORE
0x651 PUSH1 0x20
0x653 ADD
0x654 PUSH1 0x0
0x656 SHA3
0x657 SLOAD
0x658 DUP2
0x659 GT
0x65a ISZERO
0x65b ISZERO
0x65c ISZERO
0x65d PUSH2 0x532
0x660 JUMPI
---
0x600: JUMPDEST 
0x607: JUMP S6
0x608: JUMPDEST 
0x609: V441 = 0x4e0
0x60c: V442 = CALLER
0x60f: V443 = 0x69a
0x612: THROW 
0x613: JUMPDEST 
0x616: JUMP S2
0x617: JUMPDEST 
0x618: V444 = 0x8
0x61a: V445 = 0x0
0x61d: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x632: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x633: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x648: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x64a: M[0x0] = V449
0x64b: V450 = 0x20
0x64d: V451 = ADD 0x20 0x0
0x650: M[0x20] = 0x8
0x651: V452 = 0x20
0x653: V453 = ADD 0x20 0x20
0x654: V454 = 0x0
0x656: V455 = SHA3 0x0 0x40
0x657: V456 = S[V455]
0x659: V457 = GT S0 V456
0x65a: V458 = ISZERO V457
0x65b: V459 = ISZERO V458
0x65c: V460 = ISZERO V459
0x65d: V461 = 0x532
0x660: THROWI V460
---
Entry stack: [V440, V432, V425]
Stack pops: 36
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x661
[0x661:0x70e]
---
Predecessors: [0x600]
Successors: []
---
0x661 PUSH1 0x0
0x663 DUP1
0x664 REVERT
0x665 JUMPDEST
0x666 PUSH2 0x584
0x669 DUP2
0x66a PUSH1 0x8
0x66c PUSH1 0x0
0x66e DUP6
0x66f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x684 AND
0x685 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69a AND
0x69b DUP2
0x69c MSTORE
0x69d PUSH1 0x20
0x69f ADD
0x6a0 SWAP1
0x6a1 DUP2
0x6a2 MSTORE
0x6a3 PUSH1 0x20
0x6a5 ADD
0x6a6 PUSH1 0x0
0x6a8 SHA3
0x6a9 SLOAD
0x6aa PUSH2 0x9b0
0x6ad SWAP1
0x6ae SWAP2
0x6af SWAP1
0x6b0 PUSH4 0xffffffff
0x6b5 AND
0x6b6 JUMP
0x6b7 JUMPDEST
0x6b8 PUSH1 0x8
0x6ba PUSH1 0x0
0x6bc DUP5
0x6bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d2 AND
0x6d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e8 AND
0x6e9 DUP2
0x6ea MSTORE
0x6eb PUSH1 0x20
0x6ed ADD
0x6ee SWAP1
0x6ef DUP2
0x6f0 MSTORE
0x6f1 PUSH1 0x20
0x6f3 ADD
0x6f4 PUSH1 0x0
0x6f6 SHA3
0x6f7 DUP2
0x6f8 SWAP1
0x6f9 SSTORE
0x6fa POP
0x6fb PUSH2 0x5dc
0x6fe DUP2
0x6ff PUSH1 0x6
0x701 SLOAD
0x702 PUSH2 0x9b0
0x705 SWAP1
0x706 SWAP2
0x707 SWAP1
0x708 PUSH4 0xffffffff
0x70d AND
0x70e JUMP
---
0x661: V462 = 0x0
0x664: REVERT 0x0 0x0
0x665: JUMPDEST 
0x666: V463 = 0x584
0x66a: V464 = 0x8
0x66c: V465 = 0x0
0x66f: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x684: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x685: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x69c: M[0x0] = V469
0x69d: V470 = 0x20
0x69f: V471 = ADD 0x20 0x0
0x6a2: M[0x20] = 0x8
0x6a3: V472 = 0x20
0x6a5: V473 = ADD 0x20 0x20
0x6a6: V474 = 0x0
0x6a8: V475 = SHA3 0x0 0x40
0x6a9: V476 = S[V475]
0x6aa: V477 = 0x9b0
0x6b0: V478 = 0xffffffff
0x6b5: V479 = AND 0xffffffff 0x9b0
0x6b6: THROW 
0x6b7: JUMPDEST 
0x6b8: V480 = 0x8
0x6ba: V481 = 0x0
0x6bd: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6d3: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e8: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x6ea: M[0x0] = V485
0x6eb: V486 = 0x20
0x6ed: V487 = ADD 0x20 0x0
0x6f0: M[0x20] = 0x8
0x6f1: V488 = 0x20
0x6f3: V489 = ADD 0x20 0x20
0x6f4: V490 = 0x0
0x6f6: V491 = SHA3 0x0 0x40
0x6f9: S[V491] = S0
0x6fb: V492 = 0x5dc
0x6ff: V493 = 0x6
0x701: V494 = S[0x6]
0x702: V495 = 0x9b0
0x708: V496 = 0xffffffff
0x70d: V497 = AND 0xffffffff 0x9b0
0x70e: THROW 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S0, V476, 0x584, S0, S1, S1, V494, 0x5dc, S1, S2]
Exit stack: []

================================

Block 0x70f
[0x70f:0x7ef]
---
Predecessors: [0x7f0]
Successors: [0x7f0]
---
0x70f JUMPDEST
0x710 PUSH1 0x6
0x712 DUP2
0x713 SWAP1
0x714 SSTORE
0x715 POP
0x716 DUP2
0x717 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72c AND
0x72d PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x74e DUP3
0x74f PUSH1 0x40
0x751 MLOAD
0x752 DUP1
0x753 DUP3
0x754 DUP2
0x755 MSTORE
0x756 PUSH1 0x20
0x758 ADD
0x759 SWAP2
0x75a POP
0x75b POP
0x75c PUSH1 0x40
0x75e MLOAD
0x75f DUP1
0x760 SWAP2
0x761 SUB
0x762 SWAP1
0x763 LOG2
0x764 PUSH1 0x0
0x766 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77b AND
0x77c DUP3
0x77d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x792 AND
0x793 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7b4 DUP4
0x7b5 PUSH1 0x40
0x7b7 MLOAD
0x7b8 DUP1
0x7b9 DUP3
0x7ba DUP2
0x7bb MSTORE
0x7bc PUSH1 0x20
0x7be ADD
0x7bf SWAP2
0x7c0 POP
0x7c1 POP
0x7c2 PUSH1 0x40
0x7c4 MLOAD
0x7c5 DUP1
0x7c6 SWAP2
0x7c7 SUB
0x7c8 SWAP1
0x7c9 LOG3
0x7ca POP
0x7cb POP
0x7cc JUMP
0x7cd JUMPDEST
0x7ce PUSH1 0x0
0x7d0 DUP1
0x7d1 DUP4
0x7d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e7 AND
0x7e8 EQ
0x7e9 ISZERO
0x7ea ISZERO
0x7eb ISZERO
0x7ec PUSH2 0x6c1
0x7ef JUMPI
---
0x70f: JUMPDEST 
0x710: V498 = 0x6
0x714: S[0x6] = S0
0x717: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x72c: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x72d: V501 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x74f: V502 = 0x40
0x751: V503 = M[0x40]
0x755: M[V503] = S1
0x756: V504 = 0x20
0x758: V505 = ADD 0x20 V503
0x75c: V506 = 0x40
0x75e: V507 = M[0x40]
0x761: V508 = SUB V505 V507
0x763: LOG V507 V508 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V500
0x764: V509 = 0x0
0x766: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x77b: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x77d: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x792: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x793: V514 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7b5: V515 = 0x40
0x7b7: V516 = M[0x40]
0x7bb: M[V516] = S1
0x7bc: V517 = 0x20
0x7be: V518 = ADD 0x20 V516
0x7c2: V519 = 0x40
0x7c4: V520 = M[0x40]
0x7c7: V521 = SUB V518 V520
0x7c9: LOG V520 V521 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V513 0x0
0x7cc: JUMP S3
0x7cd: JUMPDEST 
0x7ce: V522 = 0x0
0x7d2: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e7: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7e8: V525 = EQ V524 0x0
0x7e9: V526 = ISZERO V525
0x7ea: V527 = ISZERO V526
0x7eb: V528 = ISZERO V527
0x7ec: V529 = 0x6c1
0x7ef: THROWI V528
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 8
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0x7f0
[0x7f0:0x83d]
---
Predecessors: [0x70f]
Successors: [0x70f, 0x83e]
---
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 REVERT
0x7f4 JUMPDEST
0x7f5 DUP2
0x7f6 PUSH1 0x8
0x7f8 PUSH1 0x0
0x7fa DUP7
0x7fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x810 AND
0x811 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x826 AND
0x827 DUP2
0x828 MSTORE
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP1
0x82d DUP2
0x82e MSTORE
0x82f PUSH1 0x20
0x831 ADD
0x832 PUSH1 0x0
0x834 SHA3
0x835 SLOAD
0x836 LT
0x837 ISZERO
0x838 ISZERO
0x839 ISZERO
0x83a PUSH2 0x70f
0x83d JUMPI
---
0x7f0: V530 = 0x0
0x7f3: REVERT 0x0 0x0
0x7f4: JUMPDEST 
0x7f6: V531 = 0x8
0x7f8: V532 = 0x0
0x7fb: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x810: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x811: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x826: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x828: M[0x0] = V536
0x829: V537 = 0x20
0x82b: V538 = ADD 0x20 0x0
0x82e: M[0x20] = 0x8
0x82f: V539 = 0x20
0x831: V540 = ADD 0x20 0x20
0x832: V541 = 0x0
0x834: V542 = SHA3 0x0 0x40
0x835: V543 = S[V542]
0x836: V544 = LT V543 S1
0x837: V545 = ISZERO V544
0x838: V546 = ISZERO V545
0x839: V547 = ISZERO V546
0x83a: V548 = 0x70f
0x83d: JUMPI 0x70f V547
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0x83e
[0x83e:0x8cb]
---
Predecessors: [0x7f0]
Successors: [0x8cc]
---
0x83e PUSH1 0x0
0x840 DUP1
0x841 REVERT
0x842 JUMPDEST
0x843 PUSH1 0x8
0x845 PUSH1 0x0
0x847 DUP5
0x848 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85d AND
0x85e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x873 AND
0x874 DUP2
0x875 MSTORE
0x876 PUSH1 0x20
0x878 ADD
0x879 SWAP1
0x87a DUP2
0x87b MSTORE
0x87c PUSH1 0x20
0x87e ADD
0x87f PUSH1 0x0
0x881 SHA3
0x882 SLOAD
0x883 DUP3
0x884 PUSH1 0x8
0x886 PUSH1 0x0
0x888 DUP7
0x889 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89e AND
0x89f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b4 AND
0x8b5 DUP2
0x8b6 MSTORE
0x8b7 PUSH1 0x20
0x8b9 ADD
0x8ba SWAP1
0x8bb DUP2
0x8bc MSTORE
0x8bd PUSH1 0x20
0x8bf ADD
0x8c0 PUSH1 0x0
0x8c2 SHA3
0x8c3 SLOAD
0x8c4 ADD
0x8c5 GT
0x8c6 ISZERO
0x8c7 ISZERO
0x8c8 PUSH2 0x79d
0x8cb JUMPI
---
0x83e: V549 = 0x0
0x841: REVERT 0x0 0x0
0x842: JUMPDEST 
0x843: V550 = 0x8
0x845: V551 = 0x0
0x848: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x85d: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x85e: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x873: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x875: M[0x0] = V555
0x876: V556 = 0x20
0x878: V557 = ADD 0x20 0x0
0x87b: M[0x20] = 0x8
0x87c: V558 = 0x20
0x87e: V559 = ADD 0x20 0x20
0x87f: V560 = 0x0
0x881: V561 = SHA3 0x0 0x40
0x882: V562 = S[V561]
0x884: V563 = 0x8
0x886: V564 = 0x0
0x889: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x89e: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x89f: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b4: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x8b6: M[0x0] = V568
0x8b7: V569 = 0x20
0x8b9: V570 = ADD 0x20 0x0
0x8bc: M[0x20] = 0x8
0x8bd: V571 = 0x20
0x8bf: V572 = ADD 0x20 0x20
0x8c0: V573 = 0x0
0x8c2: V574 = SHA3 0x0 0x40
0x8c3: V575 = S[V574]
0x8c4: V576 = ADD V575 S1
0x8c5: V577 = GT V576 V562
0x8c6: V578 = ISZERO V577
0x8c7: V579 = ISZERO V578
0x8c8: V580 = 0x79d
0x8cb: THROWI V579
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x8cc
[0x8cc:0xadb]
---
Predecessors: [0x83e]
Successors: [0xadc]
---
0x8cc PUSH1 0x0
0x8ce DUP1
0x8cf REVERT
0x8d0 JUMPDEST
0x8d1 PUSH1 0x8
0x8d3 PUSH1 0x0
0x8d5 DUP5
0x8d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8eb AND
0x8ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x901 AND
0x902 DUP2
0x903 MSTORE
0x904 PUSH1 0x20
0x906 ADD
0x907 SWAP1
0x908 DUP2
0x909 MSTORE
0x90a PUSH1 0x20
0x90c ADD
0x90d PUSH1 0x0
0x90f SHA3
0x910 SLOAD
0x911 PUSH1 0x8
0x913 PUSH1 0x0
0x915 DUP7
0x916 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92b AND
0x92c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x941 AND
0x942 DUP2
0x943 MSTORE
0x944 PUSH1 0x20
0x946 ADD
0x947 SWAP1
0x948 DUP2
0x949 MSTORE
0x94a PUSH1 0x20
0x94c ADD
0x94d PUSH1 0x0
0x94f SHA3
0x950 SLOAD
0x951 ADD
0x952 SWAP1
0x953 POP
0x954 DUP2
0x955 PUSH1 0x8
0x957 PUSH1 0x0
0x959 DUP7
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f AND
0x970 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x985 AND
0x986 DUP2
0x987 MSTORE
0x988 PUSH1 0x20
0x98a ADD
0x98b SWAP1
0x98c DUP2
0x98d MSTORE
0x98e PUSH1 0x20
0x990 ADD
0x991 PUSH1 0x0
0x993 SHA3
0x994 PUSH1 0x0
0x996 DUP3
0x997 DUP3
0x998 SLOAD
0x999 SUB
0x99a SWAP3
0x99b POP
0x99c POP
0x99d DUP2
0x99e SWAP1
0x99f SSTORE
0x9a0 POP
0x9a1 DUP2
0x9a2 PUSH1 0x8
0x9a4 PUSH1 0x0
0x9a6 DUP6
0x9a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bc AND
0x9bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d2 AND
0x9d3 DUP2
0x9d4 MSTORE
0x9d5 PUSH1 0x20
0x9d7 ADD
0x9d8 SWAP1
0x9d9 DUP2
0x9da MSTORE
0x9db PUSH1 0x20
0x9dd ADD
0x9de PUSH1 0x0
0x9e0 SHA3
0x9e1 PUSH1 0x0
0x9e3 DUP3
0x9e4 DUP3
0x9e5 SLOAD
0x9e6 ADD
0x9e7 SWAP3
0x9e8 POP
0x9e9 POP
0x9ea DUP2
0x9eb SWAP1
0x9ec SSTORE
0x9ed POP
0x9ee DUP3
0x9ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa04 AND
0xa05 DUP5
0xa06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1b AND
0xa1c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa3d DUP5
0xa3e PUSH1 0x40
0xa40 MLOAD
0xa41 DUP1
0xa42 DUP3
0xa43 DUP2
0xa44 MSTORE
0xa45 PUSH1 0x20
0xa47 ADD
0xa48 SWAP2
0xa49 POP
0xa4a POP
0xa4b PUSH1 0x40
0xa4d MLOAD
0xa4e DUP1
0xa4f SWAP2
0xa50 SUB
0xa51 SWAP1
0xa52 LOG3
0xa53 DUP1
0xa54 PUSH1 0x8
0xa56 PUSH1 0x0
0xa58 DUP6
0xa59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6e AND
0xa6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa84 AND
0xa85 DUP2
0xa86 MSTORE
0xa87 PUSH1 0x20
0xa89 ADD
0xa8a SWAP1
0xa8b DUP2
0xa8c MSTORE
0xa8d PUSH1 0x20
0xa8f ADD
0xa90 PUSH1 0x0
0xa92 SHA3
0xa93 SLOAD
0xa94 PUSH1 0x8
0xa96 PUSH1 0x0
0xa98 DUP8
0xa99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaae AND
0xaaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac4 AND
0xac5 DUP2
0xac6 MSTORE
0xac7 PUSH1 0x20
0xac9 ADD
0xaca SWAP1
0xacb DUP2
0xacc MSTORE
0xacd PUSH1 0x20
0xacf ADD
0xad0 PUSH1 0x0
0xad2 SHA3
0xad3 SLOAD
0xad4 ADD
0xad5 EQ
0xad6 ISZERO
0xad7 ISZERO
0xad8 PUSH2 0x9aa
0xadb JUMPI
---
0x8cc: V581 = 0x0
0x8cf: REVERT 0x0 0x0
0x8d0: JUMPDEST 
0x8d1: V582 = 0x8
0x8d3: V583 = 0x0
0x8d6: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x8ec: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x901: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x903: M[0x0] = V587
0x904: V588 = 0x20
0x906: V589 = ADD 0x20 0x0
0x909: M[0x20] = 0x8
0x90a: V590 = 0x20
0x90c: V591 = ADD 0x20 0x20
0x90d: V592 = 0x0
0x90f: V593 = SHA3 0x0 0x40
0x910: V594 = S[V593]
0x911: V595 = 0x8
0x913: V596 = 0x0
0x916: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0x92b: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x92c: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0x941: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x943: M[0x0] = V600
0x944: V601 = 0x20
0x946: V602 = ADD 0x20 0x0
0x949: M[0x20] = 0x8
0x94a: V603 = 0x20
0x94c: V604 = ADD 0x20 0x20
0x94d: V605 = 0x0
0x94f: V606 = SHA3 0x0 0x40
0x950: V607 = S[V606]
0x951: V608 = ADD V607 V594
0x955: V609 = 0x8
0x957: V610 = 0x0
0x95a: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x970: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0x985: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x987: M[0x0] = V614
0x988: V615 = 0x20
0x98a: V616 = ADD 0x20 0x0
0x98d: M[0x20] = 0x8
0x98e: V617 = 0x20
0x990: V618 = ADD 0x20 0x20
0x991: V619 = 0x0
0x993: V620 = SHA3 0x0 0x40
0x994: V621 = 0x0
0x998: V622 = S[V620]
0x999: V623 = SUB V622 S1
0x99f: S[V620] = V623
0x9a2: V624 = 0x8
0x9a4: V625 = 0x0
0x9a7: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bc: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9bd: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0x9d4: M[0x0] = V629
0x9d5: V630 = 0x20
0x9d7: V631 = ADD 0x20 0x0
0x9da: M[0x20] = 0x8
0x9db: V632 = 0x20
0x9dd: V633 = ADD 0x20 0x20
0x9de: V634 = 0x0
0x9e0: V635 = SHA3 0x0 0x40
0x9e1: V636 = 0x0
0x9e5: V637 = S[V635]
0x9e6: V638 = ADD V637 S1
0x9ec: S[V635] = V638
0x9ef: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xa04: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa06: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa1c: V643 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa3e: V644 = 0x40
0xa40: V645 = M[0x40]
0xa44: M[V645] = S1
0xa45: V646 = 0x20
0xa47: V647 = ADD 0x20 V645
0xa4b: V648 = 0x40
0xa4d: V649 = M[0x40]
0xa50: V650 = SUB V647 V649
0xa52: LOG V649 V650 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V642 V640
0xa54: V651 = 0x8
0xa56: V652 = 0x0
0xa59: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6e: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa6f: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0xa84: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0xa86: M[0x0] = V656
0xa87: V657 = 0x20
0xa89: V658 = ADD 0x20 0x0
0xa8c: M[0x20] = 0x8
0xa8d: V659 = 0x20
0xa8f: V660 = ADD 0x20 0x20
0xa90: V661 = 0x0
0xa92: V662 = SHA3 0x0 0x40
0xa93: V663 = S[V662]
0xa94: V664 = 0x8
0xa96: V665 = 0x0
0xa99: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xaae: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xaaf: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xac4: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0xac6: M[0x0] = V669
0xac7: V670 = 0x20
0xac9: V671 = ADD 0x20 0x0
0xacc: M[0x20] = 0x8
0xacd: V672 = 0x20
0xacf: V673 = ADD 0x20 0x20
0xad0: V674 = 0x0
0xad2: V675 = SHA3 0x0 0x40
0xad3: V676 = S[V675]
0xad4: V677 = ADD V676 V663
0xad5: V678 = EQ V677 V608
0xad6: V679 = ISZERO V678
0xad7: V680 = ISZERO V679
0xad8: V681 = 0x9aa
0xadb: THROWI V680
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V608, S1, S2, S3]
Exit stack: []

================================

Block 0xadc
[0xadc:0xaef]
---
Predecessors: [0x8cc]
Successors: [0xaf0]
---
0xadc INVALID
0xadd JUMPDEST
0xade POP
0xadf POP
0xae0 POP
0xae1 POP
0xae2 JUMP
0xae3 JUMPDEST
0xae4 PUSH1 0x0
0xae6 DUP3
0xae7 DUP3
0xae8 GT
0xae9 ISZERO
0xaea ISZERO
0xaeb ISZERO
0xaec PUSH2 0x9be
0xaef JUMPI
---
0xadc: INVALID 
0xadd: JUMPDEST 
0xae2: JUMP S4
0xae3: JUMPDEST 
0xae4: V682 = 0x0
0xae8: V683 = GT S0 S1
0xae9: V684 = ISZERO V683
0xaea: V685 = ISZERO V684
0xaeb: V686 = ISZERO V685
0xaec: V687 = 0x9be
0xaef: THROWI V686
---
Entry stack: [S3, S2, S1, V608]
Stack pops: 0
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0xaf0
[0xaf0:0xb3b]
---
Predecessors: [0xadc]
Successors: []
---
0xaf0 INVALID
0xaf1 JUMPDEST
0xaf2 DUP2
0xaf3 DUP4
0xaf4 SUB
0xaf5 SWAP1
0xaf6 POP
0xaf7 SWAP3
0xaf8 SWAP2
0xaf9 POP
0xafa POP
0xafb JUMP
0xafc STOP
0xafd LOG1
0xafe PUSH6 0x627a7a723058
0xb05 SHA3
0xb06 NOT
0xb07 CODESIZE
0xb08 MISSING 0xf6
0xb09 GAS
0xb0a AND
0xb0b PUSH6 0x4948c9797d5f
0xb12 SWAP4
0xb13 MISSING 0xc5
0xb14 PC
0xb15 MISSING 0x2c
0xb16 CALLDATASIZE
0xb17 EXP
0xb18 SWAP6
0xb19 MISSING 0xc7
0xb1a EXTCODECOPY
0xb1b MISSING 0xfb
0xb1c AND
0xb1d MISSING 0xd3
0xb1e DUP14
0xb1f PUSH28 0x15b1a76941c50029
---
0xaf0: INVALID 
0xaf1: JUMPDEST 
0xaf4: V688 = SUB S2 S1
0xafb: JUMP S3
0xafc: STOP 
0xafd: LOG S0 S1 S2
0xafe: V689 = 0x627a7a723058
0xb05: V690 = SHA3 0x627a7a723058 S3
0xb06: V691 = NOT V690
0xb07: V692 = CODESIZE
0xb08: MISSING 0xf6
0xb09: V693 = GAS
0xb0a: V694 = AND V693 S0
0xb0b: V695 = 0x4948c9797d5f
0xb13: MISSING 0xc5
0xb14: V696 = PC
0xb15: MISSING 0x2c
0xb16: V697 = CALLDATASIZE
0xb17: V698 = EXP V697 S0
0xb19: MISSING 0xc7
0xb1a: EXTCODECOPY S0 S1 S2 S3
0xb1b: MISSING 0xfb
0xb1c: V699 = AND S0 S1
0xb1d: MISSING 0xd3
0xb1f: V700 = 0x15b1a76941c50029
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V688, V692, V691, S3, V694, S1, S2, 0x4948c9797d5f, V696, S6, S1, S2, S3, S4, S5, V698, V699, 0x15b1a76941c50029, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x44
Exit block: 0x54
Body: 0x44, 0x4a, 0x4e, 0x54, 0x96

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x3f
Body: 0x3f

