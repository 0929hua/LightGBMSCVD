Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0xeb]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0xeb
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0xeb
0x65: JUMP 0xeb
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0xa7]
---
Predecessors: [0xeb]
Successors: []
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 MLOAD
0x6a DUP1
0x6b DUP3
0x6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81 AND
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 DUP2
0x99 MSTORE
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP2
0x9e POP
0x9f POP
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 SWAP2
0xa5 SUB
0xa6 SWAP1
0xa7 RETURN
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x69: V26 = M[0x40]
0x6c: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x81: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x82: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x99: M[V26] = V30
0x9a: V31 = 0x20
0x9c: V32 = ADD 0x20 V26
0xa0: V33 = 0x40
0xa2: V34 = M[0x40]
0xa5: V35 = SUB V32 V34
0xa7: RETURN V34 V35
---
Entry stack: [V11, 0x66, V57]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x41]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V36 = CALLVALUE
0xab: V37 = ISZERO V36
0xac: V38 = 0xb4
0xaf: JUMPI 0xb4 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V39 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0xb4
[0xb4:0xe8]
---
Predecessors: [0xa8]
Successors: [0x110]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0xe9
0xb9 PUSH1 0x4
0xbb DUP1
0xbc CALLDATASIZE
0xbd SUB
0xbe DUP2
0xbf ADD
0xc0 SWAP1
0xc1 DUP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP1
0xe2 POP
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x110
0xe8 JUMP
---
0xb4: JUMPDEST 
0xb6: V40 = 0xe9
0xb9: V41 = 0x4
0xbc: V42 = CALLDATASIZE
0xbd: V43 = SUB V42 0x4
0xbf: V44 = ADD 0x4 V43
0xc3: V45 = CALLDATALOAD 0x4
0xc4: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xdb: V48 = 0x20
0xdd: V49 = ADD 0x20 0x4
0xe5: V50 = 0x110
0xe8: JUMP 0x110
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xe9, V47]
Exit stack: [V11, 0xe9, V47]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x203]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0x10f]
---
Predecessors: [0x5d]
Successors: [0x66]
---
0xeb JUMPDEST
0xec PUSH1 0x0
0xee DUP1
0xef SWAP1
0xf0 SLOAD
0xf1 SWAP1
0xf2 PUSH2 0x100
0xf5 EXP
0xf6 SWAP1
0xf7 DIV
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e DUP2
0x10f JUMP
---
0xeb: JUMPDEST 
0xec: V51 = 0x0
0xf0: V52 = S[0x0]
0xf2: V53 = 0x100
0xf5: V54 = EXP 0x100 0x0
0xf7: V55 = DIV V52 0x1
0xf8: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x10f: JUMP 0x66
---
Entry stack: [V11, 0x66]
Stack pops: 1
Stack additions: [S0, V57]
Exit stack: [V11, 0x66, V57]

================================

Block 0x110
[0x110:0x166]
---
Predecessors: [0xb4]
Successors: [0x167, 0x16b]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 DUP1
0x114 SWAP1
0x115 SLOAD
0x116 SWAP1
0x117 PUSH2 0x100
0x11a EXP
0x11b SWAP1
0x11c DIV
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 CALLER
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 EQ
0x161 ISZERO
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x110: JUMPDEST 
0x111: V58 = 0x0
0x115: V59 = S[0x0]
0x117: V60 = 0x100
0x11a: V61 = EXP 0x100 0x0
0x11c: V62 = DIV V59 0x1
0x11d: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x133: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x149: V67 = CALLER
0x14a: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x160: V70 = EQ V69 V66
0x161: V71 = ISZERO V70
0x162: V72 = ISZERO V71
0x163: V73 = 0x16b
0x166: JUMPI 0x16b V72
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x110]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V74 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x16b
[0x16b:0x1c2]
---
Predecessors: [0x110]
Successors: [0x1c3, 0x1c7]
---
0x16b JUMPDEST
0x16c PUSH1 0x0
0x16e DUP1
0x16f SWAP1
0x170 SLOAD
0x171 SWAP1
0x172 PUSH2 0x100
0x175 EXP
0x176 SWAP1
0x177 DIV
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 DUP2
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb EQ
0x1bc ISZERO
0x1bd ISZERO
0x1be ISZERO
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x16b: JUMPDEST 
0x16c: V75 = 0x0
0x170: V76 = S[0x0]
0x172: V77 = 0x100
0x175: V78 = EXP 0x100 0x0
0x177: V79 = DIV V76 0x1
0x178: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x18e: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x1a5: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x1bb: V86 = EQ V85 V83
0x1bc: V87 = ISZERO V86
0x1bd: V88 = ISZERO V87
0x1be: V89 = ISZERO V88
0x1bf: V90 = 0x1c7
0x1c2: JUMPI 0x1c7 V89
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe9, V47]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x16b]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V91 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x1c7
[0x1c7:0x1fe]
---
Predecessors: [0x16b]
Successors: [0x1ff, 0x203]
---
0x1c7 JUMPDEST
0x1c8 PUSH1 0x0
0x1ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1df AND
0x1e0 DUP2
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 EQ
0x1f8 ISZERO
0x1f9 ISZERO
0x1fa ISZERO
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V92 = 0x0
0x1ca: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1e1: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x1f7: V97 = EQ V96 0x0
0x1f8: V98 = ISZERO V97
0x1f9: V99 = ISZERO V98
0x1fa: V100 = ISZERO V99
0x1fb: V101 = 0x203
0x1fe: JUMPI 0x203 V100
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe9, V47]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1c7]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V102 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x203
[0x203:0x2c0]
---
Predecessors: [0x1c7]
Successors: [0xe9]
---
0x203 JUMPDEST
0x204 DUP1
0x205 PUSH1 0x0
0x207 DUP1
0x208 PUSH2 0x100
0x20b EXP
0x20c DUP2
0x20d SLOAD
0x20e DUP2
0x20f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x224 MUL
0x225 NOT
0x226 AND
0x227 SWAP1
0x228 DUP4
0x229 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23e AND
0x23f MUL
0x240 OR
0x241 SWAP1
0x242 SSTORE
0x243 POP
0x244 DUP1
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a AND
0x25b PUSH1 0x0
0x25d DUP1
0x25e SWAP1
0x25f SLOAD
0x260 SWAP1
0x261 PUSH2 0x100
0x264 EXP
0x265 SWAP1
0x266 DIV
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 PUSH32 0x2ae143016adc0aa482e6ba5d9a350f3e3122aeb005ca4bf47d1d7b8221bce472
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb SWAP2
0x2bc SUB
0x2bd SWAP1
0x2be LOG3
0x2bf POP
0x2c0 JUMP
---
0x203: JUMPDEST 
0x205: V103 = 0x0
0x208: V104 = 0x100
0x20b: V105 = EXP 0x100 0x0
0x20d: V106 = S[0x0]
0x20f: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x224: V108 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x225: V109 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x226: V110 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V106
0x229: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x23f: V113 = MUL V112 0x1
0x240: V114 = OR V113 V110
0x242: S[0x0] = V114
0x245: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x25b: V117 = 0x0
0x25f: V118 = S[0x0]
0x261: V119 = 0x100
0x264: V120 = EXP 0x100 0x0
0x266: V121 = DIV V118 0x1
0x267: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x27d: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x293: V126 = 0x2ae143016adc0aa482e6ba5d9a350f3e3122aeb005ca4bf47d1d7b8221bce472
0x2b4: V127 = 0x40
0x2b6: V128 = M[0x40]
0x2b7: V129 = 0x40
0x2b9: V130 = M[0x40]
0x2bc: V131 = SUB V128 V130
0x2be: LOG V130 V131 0x2ae143016adc0aa482e6ba5d9a350f3e3122aeb005ca4bf47d1d7b8221bce472 V125 V116
0x2c0: JUMP 0xe9
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c1
[0x2c1:0x2f9]
---
Predecessors: []
Successors: [0x2fa]
---
0x2c1 STOP
0x2c2 LOG1
0x2c3 PUSH6 0x627a7a723058
0x2ca SHA3
0x2cb SWAP7
0x2cc PUSH16 0x4d89f96888a0935afedf5ed83c00a641
0x2dd MISSING 0xcd
0x2de PUSH18 0xb220a847f99da358b8c9124f002960806040
0x2f1 MSTORE
0x2f2 PUSH1 0x4
0x2f4 CALLDATASIZE
0x2f5 LT
0x2f6 PUSH2 0x62
0x2f9 JUMPI
---
0x2c1: STOP 
0x2c2: LOG S0 S1 S2
0x2c3: V132 = 0x627a7a723058
0x2ca: V133 = SHA3 0x627a7a723058 S3
0x2cc: V134 = 0x4d89f96888a0935afedf5ed83c00a641
0x2dd: MISSING 0xcd
0x2de: V135 = 0xb220a847f99da358b8c9124f002960806040
0x2f1: M[0xb220a847f99da358b8c9124f002960806040] = S0
0x2f2: V136 = 0x4
0x2f4: V137 = CALLDATASIZE
0x2f5: V138 = LT V137 0x4
0x2f6: V139 = 0x62
0x2f9: THROWI V138
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4d89f96888a0935afedf5ed83c00a641, S10, S4, S5, S6, S7, S8, S9, V133]
Exit stack: []

================================

Block 0x2fa
[0x2fa:0x32d]
---
Predecessors: [0x2c1]
Successors: [0x32e]
---
0x2fa PUSH1 0x0
0x2fc CALLDATALOAD
0x2fd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x31b SWAP1
0x31c DIV
0x31d PUSH4 0xffffffff
0x322 AND
0x323 DUP1
0x324 PUSH4 0x66d598f0
0x329 EQ
0x32a PUSH2 0x67
0x32d JUMPI
---
0x2fa: V140 = 0x0
0x2fc: V141 = CALLDATALOAD 0x0
0x2fd: V142 = 0x100000000000000000000000000000000000000000000000000000000
0x31c: V143 = DIV V141 0x100000000000000000000000000000000000000000000000000000000
0x31d: V144 = 0xffffffff
0x322: V145 = AND 0xffffffff V143
0x324: V146 = 0x66d598f0
0x329: V147 = EQ 0x66d598f0 V145
0x32a: V148 = 0x67
0x32d: THROWI V147
---
Entry stack: []
Stack pops: 0
Stack additions: [V145]
Exit stack: [V145]

================================

Block 0x32e
[0x32e:0x338]
---
Predecessors: [0x2fa]
Successors: [0x339]
---
0x32e DUP1
0x32f PUSH4 0x806f3319
0x334 EQ
0x335 PUSH2 0x92
0x338 JUMPI
---
0x32f: V149 = 0x806f3319
0x334: V150 = EQ 0x806f3319 V145
0x335: V151 = 0x92
0x338: THROWI V150
---
Entry stack: [V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V145]

================================

Block 0x339
[0x339:0x343]
---
Predecessors: [0x32e]
Successors: [0x344]
---
0x339 DUP1
0x33a PUSH4 0x8da5cb5b
0x33f EQ
0x340 PUSH2 0x15b
0x343 JUMPI
---
0x33a: V152 = 0x8da5cb5b
0x33f: V153 = EQ 0x8da5cb5b V145
0x340: V154 = 0x15b
0x343: THROWI V153
---
Entry stack: [V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V145]

================================

Block 0x344
[0x344:0x34e]
---
Predecessors: [0x339]
Successors: [0x34f]
---
0x344 DUP1
0x345 PUSH4 0xf2fde38b
0x34a EQ
0x34b PUSH2 0x1b2
0x34e JUMPI
---
0x345: V155 = 0xf2fde38b
0x34a: V156 = EQ 0xf2fde38b V145
0x34b: V157 = 0x1b2
0x34e: THROWI V156
---
Entry stack: [V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V145]

================================

Block 0x34f
[0x34f:0x35b]
---
Predecessors: [0x344, 0x624]
Successors: [0x35c]
---
0x34f JUMPDEST
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
0x354 JUMPDEST
0x355 CALLVALUE
0x356 DUP1
0x357 ISZERO
0x358 PUSH2 0x73
0x35b JUMPI
---
0x34f: JUMPDEST 
0x350: V158 = 0x0
0x353: REVERT 0x0 0x0
0x354: JUMPDEST 
0x355: V159 = CALLVALUE
0x357: V160 = ISZERO V159
0x358: V161 = 0x73
0x35b: THROWI V160
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V159]
Exit stack: []

================================

Block 0x35c
[0x35c:0x386]
---
Predecessors: [0x34f]
Successors: [0x387]
---
0x35c PUSH1 0x0
0x35e DUP1
0x35f REVERT
0x360 JUMPDEST
0x361 POP
0x362 PUSH2 0x7c
0x365 PUSH2 0x1f5
0x368 JUMP
0x369 JUMPDEST
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e DUP3
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 SWAP2
0x375 POP
0x376 POP
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b SWAP2
0x37c SUB
0x37d SWAP1
0x37e RETURN
0x37f JUMPDEST
0x380 CALLVALUE
0x381 DUP1
0x382 ISZERO
0x383 PUSH2 0x9e
0x386 JUMPI
---
0x35c: V162 = 0x0
0x35f: REVERT 0x0 0x0
0x360: JUMPDEST 
0x362: V163 = 0x7c
0x365: V164 = 0x1f5
0x368: THROW 
0x369: JUMPDEST 
0x36a: V165 = 0x40
0x36c: V166 = M[0x40]
0x370: M[V166] = S0
0x371: V167 = 0x20
0x373: V168 = ADD 0x20 V166
0x377: V169 = 0x40
0x379: V170 = M[0x40]
0x37c: V171 = SUB V168 V170
0x37e: RETURN V170 V171
0x37f: JUMPDEST 
0x380: V172 = CALLVALUE
0x382: V173 = ISZERO V172
0x383: V174 = 0x9e
0x386: THROWI V173
---
Entry stack: [V159]
Stack pops: 0
Stack additions: [0x7c, V172]
Exit stack: []

================================

Block 0x387
[0x387:0x44f]
---
Predecessors: [0x35c]
Successors: [0x450]
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
0x38b JUMPDEST
0x38c POP
0x38d PUSH2 0x159
0x390 PUSH1 0x4
0x392 DUP1
0x393 CALLDATASIZE
0x394 SUB
0x395 DUP2
0x396 ADD
0x397 SWAP1
0x398 DUP1
0x399 DUP1
0x39a CALLDATALOAD
0x39b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b0 AND
0x3b1 SWAP1
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 SWAP1
0x3b6 SWAP3
0x3b7 SWAP2
0x3b8 SWAP1
0x3b9 DUP1
0x3ba CALLDATALOAD
0x3bb SWAP1
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP1
0x3c0 DUP3
0x3c1 ADD
0x3c2 DUP1
0x3c3 CALLDATALOAD
0x3c4 SWAP1
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 SWAP1
0x3c9 DUP1
0x3ca DUP1
0x3cb PUSH1 0x20
0x3cd MUL
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 SWAP1
0x3d5 DUP2
0x3d6 ADD
0x3d7 PUSH1 0x40
0x3d9 MSTORE
0x3da DUP1
0x3db SWAP4
0x3dc SWAP3
0x3dd SWAP2
0x3de SWAP1
0x3df DUP2
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 ADD
0x3e5 DUP4
0x3e6 DUP4
0x3e7 PUSH1 0x20
0x3e9 MUL
0x3ea DUP1
0x3eb DUP3
0x3ec DUP5
0x3ed CALLDATACOPY
0x3ee DUP3
0x3ef ADD
0x3f0 SWAP2
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 SWAP2
0x3f8 SWAP3
0x3f9 SWAP2
0x3fa SWAP3
0x3fb SWAP1
0x3fc DUP1
0x3fd CALLDATALOAD
0x3fe SWAP1
0x3ff PUSH1 0x20
0x401 ADD
0x402 SWAP1
0x403 DUP3
0x404 ADD
0x405 DUP1
0x406 CALLDATALOAD
0x407 SWAP1
0x408 PUSH1 0x20
0x40a ADD
0x40b SWAP1
0x40c DUP1
0x40d DUP1
0x40e PUSH1 0x20
0x410 MUL
0x411 PUSH1 0x20
0x413 ADD
0x414 PUSH1 0x40
0x416 MLOAD
0x417 SWAP1
0x418 DUP2
0x419 ADD
0x41a PUSH1 0x40
0x41c MSTORE
0x41d DUP1
0x41e SWAP4
0x41f SWAP3
0x420 SWAP2
0x421 SWAP1
0x422 DUP2
0x423 DUP2
0x424 MSTORE
0x425 PUSH1 0x20
0x427 ADD
0x428 DUP4
0x429 DUP4
0x42a PUSH1 0x20
0x42c MUL
0x42d DUP1
0x42e DUP3
0x42f DUP5
0x430 CALLDATACOPY
0x431 DUP3
0x432 ADD
0x433 SWAP2
0x434 POP
0x435 POP
0x436 POP
0x437 POP
0x438 POP
0x439 POP
0x43a SWAP2
0x43b SWAP3
0x43c SWAP2
0x43d SWAP3
0x43e SWAP1
0x43f POP
0x440 POP
0x441 POP
0x442 PUSH2 0x1fb
0x445 JUMP
0x446 JUMPDEST
0x447 STOP
0x448 JUMPDEST
0x449 CALLVALUE
0x44a DUP1
0x44b ISZERO
0x44c PUSH2 0x167
0x44f JUMPI
---
0x387: V175 = 0x0
0x38a: REVERT 0x0 0x0
0x38b: JUMPDEST 
0x38d: V176 = 0x159
0x390: V177 = 0x4
0x393: V178 = CALLDATASIZE
0x394: V179 = SUB V178 0x4
0x396: V180 = ADD 0x4 V179
0x39a: V181 = CALLDATALOAD 0x4
0x39b: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b0: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x3b2: V184 = 0x20
0x3b4: V185 = ADD 0x20 0x4
0x3ba: V186 = CALLDATALOAD 0x24
0x3bc: V187 = 0x20
0x3be: V188 = ADD 0x20 0x24
0x3c1: V189 = ADD 0x4 V186
0x3c3: V190 = CALLDATALOAD V189
0x3c5: V191 = 0x20
0x3c7: V192 = ADD 0x20 V189
0x3cb: V193 = 0x20
0x3cd: V194 = MUL 0x20 V190
0x3ce: V195 = 0x20
0x3d0: V196 = ADD 0x20 V194
0x3d1: V197 = 0x40
0x3d3: V198 = M[0x40]
0x3d6: V199 = ADD V198 V196
0x3d7: V200 = 0x40
0x3d9: M[0x40] = V199
0x3e1: M[V198] = V190
0x3e2: V201 = 0x20
0x3e4: V202 = ADD 0x20 V198
0x3e7: V203 = 0x20
0x3e9: V204 = MUL 0x20 V190
0x3ed: CALLDATACOPY V202 V192 V204
0x3ef: V205 = ADD V202 V204
0x3fd: V206 = CALLDATALOAD 0x44
0x3ff: V207 = 0x20
0x401: V208 = ADD 0x20 0x44
0x404: V209 = ADD 0x4 V206
0x406: V210 = CALLDATALOAD V209
0x408: V211 = 0x20
0x40a: V212 = ADD 0x20 V209
0x40e: V213 = 0x20
0x410: V214 = MUL 0x20 V210
0x411: V215 = 0x20
0x413: V216 = ADD 0x20 V214
0x414: V217 = 0x40
0x416: V218 = M[0x40]
0x419: V219 = ADD V218 V216
0x41a: V220 = 0x40
0x41c: M[0x40] = V219
0x424: M[V218] = V210
0x425: V221 = 0x20
0x427: V222 = ADD 0x20 V218
0x42a: V223 = 0x20
0x42c: V224 = MUL 0x20 V210
0x430: CALLDATACOPY V222 V212 V224
0x432: V225 = ADD V222 V224
0x442: V226 = 0x1fb
0x445: THROW 
0x446: JUMPDEST 
0x447: STOP 
0x448: JUMPDEST 
0x449: V227 = CALLVALUE
0x44b: V228 = ISZERO V227
0x44c: V229 = 0x167
0x44f: THROWI V228
---
Entry stack: [V172]
Stack pops: 0
Stack additions: [V218, V198, V183, 0x159, V227]
Exit stack: []

================================

Block 0x450
[0x450:0x4a6]
---
Predecessors: [0x387]
Successors: [0x4a7]
---
0x450 PUSH1 0x0
0x452 DUP1
0x453 REVERT
0x454 JUMPDEST
0x455 POP
0x456 PUSH2 0x170
0x459 PUSH2 0x38a
0x45c JUMP
0x45d JUMPDEST
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 DUP3
0x463 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x478 AND
0x479 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48e AND
0x48f DUP2
0x490 MSTORE
0x491 PUSH1 0x20
0x493 ADD
0x494 SWAP2
0x495 POP
0x496 POP
0x497 PUSH1 0x40
0x499 MLOAD
0x49a DUP1
0x49b SWAP2
0x49c SUB
0x49d SWAP1
0x49e RETURN
0x49f JUMPDEST
0x4a0 CALLVALUE
0x4a1 DUP1
0x4a2 ISZERO
0x4a3 PUSH2 0x1be
0x4a6 JUMPI
---
0x450: V230 = 0x0
0x453: REVERT 0x0 0x0
0x454: JUMPDEST 
0x456: V231 = 0x170
0x459: V232 = 0x38a
0x45c: THROW 
0x45d: JUMPDEST 
0x45e: V233 = 0x40
0x460: V234 = M[0x40]
0x463: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x478: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x479: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x490: M[V234] = V238
0x491: V239 = 0x20
0x493: V240 = ADD 0x20 V234
0x497: V241 = 0x40
0x499: V242 = M[0x40]
0x49c: V243 = SUB V240 V242
0x49e: RETURN V242 V243
0x49f: JUMPDEST 
0x4a0: V244 = CALLVALUE
0x4a2: V245 = ISZERO V244
0x4a3: V246 = 0x1be
0x4a6: THROWI V245
---
Entry stack: [V227]
Stack pops: 0
Stack additions: [0x170, V244]
Exit stack: []

================================

Block 0x4a7
[0x4a7:0x540]
---
Predecessors: [0x450]
Successors: [0x541]
---
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa REVERT
0x4ab JUMPDEST
0x4ac POP
0x4ad PUSH2 0x1f3
0x4b0 PUSH1 0x4
0x4b2 DUP1
0x4b3 CALLDATASIZE
0x4b4 SUB
0x4b5 DUP2
0x4b6 ADD
0x4b7 SWAP1
0x4b8 DUP1
0x4b9 DUP1
0x4ba CALLDATALOAD
0x4bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d0 AND
0x4d1 SWAP1
0x4d2 PUSH1 0x20
0x4d4 ADD
0x4d5 SWAP1
0x4d6 SWAP3
0x4d7 SWAP2
0x4d8 SWAP1
0x4d9 POP
0x4da POP
0x4db POP
0x4dc PUSH2 0x3af
0x4df JUMP
0x4e0 JUMPDEST
0x4e1 STOP
0x4e2 JUMPDEST
0x4e3 PUSH1 0x1
0x4e5 SLOAD
0x4e6 DUP2
0x4e7 JUMP
0x4e8 JUMPDEST
0x4e9 PUSH1 0x0
0x4eb DUP1
0x4ec PUSH1 0x0
0x4ee SWAP1
0x4ef SLOAD
0x4f0 SWAP1
0x4f1 PUSH2 0x100
0x4f4 EXP
0x4f5 SWAP1
0x4f6 DIV
0x4f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50c AND
0x50d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x522 AND
0x523 CALLER
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 AND
0x53a EQ
0x53b ISZERO
0x53c ISZERO
0x53d PUSH2 0x258
0x540 JUMPI
---
0x4a7: V247 = 0x0
0x4aa: REVERT 0x0 0x0
0x4ab: JUMPDEST 
0x4ad: V248 = 0x1f3
0x4b0: V249 = 0x4
0x4b3: V250 = CALLDATASIZE
0x4b4: V251 = SUB V250 0x4
0x4b6: V252 = ADD 0x4 V251
0x4ba: V253 = CALLDATALOAD 0x4
0x4bb: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x4d2: V256 = 0x20
0x4d4: V257 = ADD 0x20 0x4
0x4dc: V258 = 0x3af
0x4df: THROW 
0x4e0: JUMPDEST 
0x4e1: STOP 
0x4e2: JUMPDEST 
0x4e3: V259 = 0x1
0x4e5: V260 = S[0x1]
0x4e7: JUMP S0
0x4e8: JUMPDEST 
0x4e9: V261 = 0x0
0x4ec: V262 = 0x0
0x4ef: V263 = S[0x0]
0x4f1: V264 = 0x100
0x4f4: V265 = EXP 0x100 0x0
0x4f6: V266 = DIV V263 0x1
0x4f7: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x50d: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x522: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x523: V271 = CALLER
0x524: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x539: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x53a: V274 = EQ V273 V270
0x53b: V275 = ISZERO V274
0x53c: V276 = ISZERO V275
0x53d: V277 = 0x258
0x540: THROWI V276
---
Entry stack: [V244]
Stack pops: 0
Stack additions: [V255, 0x1f3, V260, S0, 0x0]
Exit stack: []

================================

Block 0x541
[0x541:0x549]
---
Predecessors: [0x4a7]
Successors: [0x54a]
---
0x541 PUSH1 0x0
0x543 DUP1
0x544 REVERT
0x545 JUMPDEST
0x546 PUSH1 0x0
0x548 SWAP1
0x549 POP
---
0x541: V278 = 0x0
0x544: REVERT 0x0 0x0
0x545: JUMPDEST 
0x546: V279 = 0x0
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x54a
[0x54a:0x553]
---
Predecessors: [0x541]
Successors: [0x554]
---
0x54a JUMPDEST
0x54b DUP3
0x54c MLOAD
0x54d DUP2
0x54e LT
0x54f ISZERO
0x550 PUSH2 0x384
0x553 JUMPI
---
0x54a: JUMPDEST 
0x54c: V280 = M[S2]
0x54e: V281 = LT 0x0 V280
0x54f: V282 = ISZERO V281
0x550: V283 = 0x384
0x553: THROWI V282
---
Entry stack: [0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S1, S0, 0x0]

================================

Block 0x554
[0x554:0x57b]
---
Predecessors: [0x54a]
Successors: [0x57c]
---
0x554 DUP4
0x555 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56a AND
0x56b PUSH4 0xa9059cbb
0x570 DUP5
0x571 DUP4
0x572 DUP2
0x573 MLOAD
0x574 DUP2
0x575 LT
0x576 ISZERO
0x577 ISZERO
0x578 PUSH2 0x290
0x57b JUMPI
---
0x555: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x56b: V286 = 0xa9059cbb
0x573: V287 = M[S2]
0x575: V288 = LT 0x0 V287
0x576: V289 = ISZERO V288
0x577: V290 = ISZERO V289
0x578: V291 = 0x290
0x57b: THROWI V290
---
Entry stack: [S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V285, 0xa9059cbb, S2, S0]
Exit stack: [S0, S2, S1, 0x0, V285, 0xa9059cbb, S2, 0x0]

================================

Block 0x57c
[0x57c:0x596]
---
Predecessors: [0x554]
Successors: [0x597]
---
0x57c INVALID
0x57d JUMPDEST
0x57e SWAP1
0x57f PUSH1 0x20
0x581 ADD
0x582 SWAP1
0x583 PUSH1 0x20
0x585 MUL
0x586 ADD
0x587 MLOAD
0x588 PUSH1 0x1
0x58a SLOAD
0x58b DUP6
0x58c DUP6
0x58d DUP2
0x58e MLOAD
0x58f DUP2
0x590 LT
0x591 ISZERO
0x592 ISZERO
0x593 PUSH2 0x2ab
0x596 JUMPI
---
0x57c: INVALID 
0x57d: JUMPDEST 
0x57f: V292 = 0x20
0x581: V293 = ADD 0x20 S1
0x583: V294 = 0x20
0x585: V295 = MUL 0x20 S0
0x586: V296 = ADD V295 V293
0x587: V297 = M[V296]
0x588: V298 = 0x1
0x58a: V299 = S[0x1]
0x58e: V300 = M[S5]
0x590: V301 = LT S4 V300
0x591: V302 = ISZERO V301
0x592: V303 = ISZERO V302
0x593: V304 = 0x2ab
0x596: THROWI V303
---
Entry stack: [S7, S6, S5, 0x0, V285, 0xa9059cbb, S1, 0x0]
Stack pops: 0
Stack additions: [S4, S5, V299, V297, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x597
[0x597:0x623]
---
Predecessors: [0x57c]
Successors: [0x624]
---
0x597 INVALID
0x598 JUMPDEST
0x599 SWAP1
0x59a PUSH1 0x20
0x59c ADD
0x59d SWAP1
0x59e PUSH1 0x20
0x5a0 MUL
0x5a1 ADD
0x5a2 MLOAD
0x5a3 MUL
0x5a4 PUSH1 0x40
0x5a6 MLOAD
0x5a7 DUP4
0x5a8 PUSH4 0xffffffff
0x5ad AND
0x5ae PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5cc MUL
0x5cd DUP2
0x5ce MSTORE
0x5cf PUSH1 0x4
0x5d1 ADD
0x5d2 DUP1
0x5d3 DUP4
0x5d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e9 AND
0x5ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ff AND
0x600 DUP2
0x601 MSTORE
0x602 PUSH1 0x20
0x604 ADD
0x605 DUP3
0x606 DUP2
0x607 MSTORE
0x608 PUSH1 0x20
0x60a ADD
0x60b SWAP3
0x60c POP
0x60d POP
0x60e POP
0x60f PUSH1 0x20
0x611 PUSH1 0x40
0x613 MLOAD
0x614 DUP1
0x615 DUP4
0x616 SUB
0x617 DUP2
0x618 PUSH1 0x0
0x61a DUP8
0x61b DUP1
0x61c EXTCODESIZE
0x61d ISZERO
0x61e DUP1
0x61f ISZERO
0x620 PUSH2 0x33b
0x623 JUMPI
---
0x597: INVALID 
0x598: JUMPDEST 
0x59a: V305 = 0x20
0x59c: V306 = ADD 0x20 S1
0x59e: V307 = 0x20
0x5a0: V308 = MUL 0x20 S0
0x5a1: V309 = ADD V308 V306
0x5a2: V310 = M[V309]
0x5a3: V311 = MUL V310 S2
0x5a4: V312 = 0x40
0x5a6: V313 = M[0x40]
0x5a8: V314 = 0xffffffff
0x5ad: V315 = AND 0xffffffff S4
0x5ae: V316 = 0x100000000000000000000000000000000000000000000000000000000
0x5cc: V317 = MUL 0x100000000000000000000000000000000000000000000000000000000 V315
0x5ce: M[V313] = V317
0x5cf: V318 = 0x4
0x5d1: V319 = ADD 0x4 V313
0x5d4: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e9: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x5ea: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ff: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x601: M[V319] = V323
0x602: V324 = 0x20
0x604: V325 = ADD 0x20 V319
0x607: M[V325] = V311
0x608: V326 = 0x20
0x60a: V327 = ADD 0x20 V325
0x60f: V328 = 0x20
0x611: V329 = 0x40
0x613: V330 = M[0x40]
0x616: V331 = SUB V327 V330
0x618: V332 = 0x0
0x61c: V333 = EXTCODESIZE S5
0x61d: V334 = ISZERO V333
0x61f: V335 = ISZERO V334
0x620: V336 = 0x33b
0x623: THROWI V335
---
Entry stack: [S7, S6, S5, S4, V297, V299, S1, S0]
Stack pops: 0
Stack additions: [V334, S5, 0x0, V330, V331, V330, 0x20, V327, S4, S5]
Exit stack: []

================================

Block 0x624
[0x624:0x632]
---
Predecessors: [0x597]
Successors: [0x34f, 0x633]
---
0x624 PUSH1 0x0
0x626 DUP1
0x627 REVERT
0x628 JUMPDEST
0x629 POP
0x62a GAS
0x62b CALL
0x62c ISZERO
0x62d DUP1
0x62e ISZERO
0x62f PUSH2 0x34f
0x632 JUMPI
---
0x624: V337 = 0x0
0x627: REVERT 0x0 0x0
0x628: JUMPDEST 
0x62a: V338 = GAS
0x62b: V339 = CALL V338 S1 S2 S3 S4 S5 S6
0x62c: V340 = ISZERO V339
0x62e: V341 = ISZERO V340
0x62f: V342 = 0x34f
0x632: JUMPI 0x34f V341
---
Entry stack: [S9, S8, V327, 0x20, V330, V331, V330, 0x0, S1, V334]
Stack pops: 0
Stack additions: [V340]
Exit stack: []

================================

Block 0x633
[0x633:0x64d]
---
Predecessors: [0x624]
Successors: [0x64e]
---
0x633 RETURNDATASIZE
0x634 PUSH1 0x0
0x636 DUP1
0x637 RETURNDATACOPY
0x638 RETURNDATASIZE
0x639 PUSH1 0x0
0x63b REVERT
0x63c JUMPDEST
0x63d POP
0x63e POP
0x63f POP
0x640 POP
0x641 PUSH1 0x40
0x643 MLOAD
0x644 RETURNDATASIZE
0x645 PUSH1 0x20
0x647 DUP2
0x648 LT
0x649 ISZERO
0x64a PUSH2 0x365
0x64d JUMPI
---
0x633: V343 = RETURNDATASIZE
0x634: V344 = 0x0
0x637: RETURNDATACOPY 0x0 0x0 V343
0x638: V345 = RETURNDATASIZE
0x639: V346 = 0x0
0x63b: REVERT 0x0 V345
0x63c: JUMPDEST 
0x641: V347 = 0x40
0x643: V348 = M[0x40]
0x644: V349 = RETURNDATASIZE
0x645: V350 = 0x20
0x648: V351 = LT V349 0x20
0x649: V352 = ISZERO V351
0x64a: V353 = 0x365
0x64d: THROWI V352
---
Entry stack: [V340]
Stack pops: 0
Stack additions: [V349, V348]
Exit stack: []

================================

Block 0x64e
[0x64e:0x6f2]
---
Predecessors: [0x633]
Successors: [0x6f3]
---
0x64e PUSH1 0x0
0x650 DUP1
0x651 REVERT
0x652 JUMPDEST
0x653 DUP2
0x654 ADD
0x655 SWAP1
0x656 DUP1
0x657 DUP1
0x658 MLOAD
0x659 SWAP1
0x65a PUSH1 0x20
0x65c ADD
0x65d SWAP1
0x65e SWAP3
0x65f SWAP2
0x660 SWAP1
0x661 POP
0x662 POP
0x663 POP
0x664 POP
0x665 DUP1
0x666 DUP1
0x667 PUSH1 0x1
0x669 ADD
0x66a SWAP2
0x66b POP
0x66c POP
0x66d PUSH2 0x25d
0x670 JUMP
0x671 JUMPDEST
0x672 POP
0x673 POP
0x674 POP
0x675 POP
0x676 JUMP
0x677 JUMPDEST
0x678 PUSH1 0x0
0x67a DUP1
0x67b SWAP1
0x67c SLOAD
0x67d SWAP1
0x67e PUSH2 0x100
0x681 EXP
0x682 SWAP1
0x683 DIV
0x684 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x699 AND
0x69a DUP2
0x69b JUMP
0x69c JUMPDEST
0x69d PUSH1 0x0
0x69f DUP1
0x6a0 SWAP1
0x6a1 SLOAD
0x6a2 SWAP1
0x6a3 PUSH2 0x100
0x6a6 EXP
0x6a7 SWAP1
0x6a8 DIV
0x6a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6be AND
0x6bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d4 AND
0x6d5 CALLER
0x6d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6eb AND
0x6ec EQ
0x6ed ISZERO
0x6ee ISZERO
0x6ef PUSH2 0x40a
0x6f2 JUMPI
---
0x64e: V354 = 0x0
0x651: REVERT 0x0 0x0
0x652: JUMPDEST 
0x654: V355 = ADD S1 S0
0x658: V356 = M[S1]
0x65a: V357 = 0x20
0x65c: V358 = ADD 0x20 S1
0x667: V359 = 0x1
0x669: V360 = ADD 0x1 S2
0x66d: V361 = 0x25d
0x670: THROW 
0x671: JUMPDEST 
0x676: JUMP S4
0x677: JUMPDEST 
0x678: V362 = 0x0
0x67c: V363 = S[0x0]
0x67e: V364 = 0x100
0x681: V365 = EXP 0x100 0x0
0x683: V366 = DIV V363 0x1
0x684: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x699: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x69b: JUMP S0
0x69c: JUMPDEST 
0x69d: V369 = 0x0
0x6a1: V370 = S[0x0]
0x6a3: V371 = 0x100
0x6a6: V372 = EXP 0x100 0x0
0x6a8: V373 = DIV V370 0x1
0x6a9: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x6be: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x6bf: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d4: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x6d5: V378 = CALLER
0x6d6: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x6ec: V381 = EQ V380 V377
0x6ed: V382 = ISZERO V381
0x6ee: V383 = ISZERO V382
0x6ef: V384 = 0x40a
0x6f2: THROWI V383
---
Entry stack: [V348, V349]
Stack pops: 0
Stack additions: [V360, V368, S0]
Exit stack: []

================================

Block 0x6f3
[0x6f3:0x74e]
---
Predecessors: [0x64e]
Successors: [0x74f]
---
0x6f3 PUSH1 0x0
0x6f5 DUP1
0x6f6 REVERT
0x6f7 JUMPDEST
0x6f8 PUSH1 0x0
0x6fa DUP1
0x6fb SWAP1
0x6fc SLOAD
0x6fd SWAP1
0x6fe PUSH2 0x100
0x701 EXP
0x702 SWAP1
0x703 DIV
0x704 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x719 AND
0x71a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72f AND
0x730 DUP2
0x731 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x746 AND
0x747 EQ
0x748 ISZERO
0x749 ISZERO
0x74a ISZERO
0x74b PUSH2 0x466
0x74e JUMPI
---
0x6f3: V385 = 0x0
0x6f6: REVERT 0x0 0x0
0x6f7: JUMPDEST 
0x6f8: V386 = 0x0
0x6fc: V387 = S[0x0]
0x6fe: V388 = 0x100
0x701: V389 = EXP 0x100 0x0
0x703: V390 = DIV V387 0x1
0x704: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x719: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x71a: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x731: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x746: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x747: V397 = EQ V396 V394
0x748: V398 = ISZERO V397
0x749: V399 = ISZERO V398
0x74a: V400 = ISZERO V399
0x74b: V401 = 0x466
0x74e: THROWI V400
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x74f
[0x74f:0x78a]
---
Predecessors: [0x6f3]
Successors: [0x78b]
---
0x74f PUSH1 0x0
0x751 DUP1
0x752 REVERT
0x753 JUMPDEST
0x754 PUSH1 0x0
0x756 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76b AND
0x76c DUP2
0x76d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x782 AND
0x783 EQ
0x784 ISZERO
0x785 ISZERO
0x786 ISZERO
0x787 PUSH2 0x4a2
0x78a JUMPI
---
0x74f: V402 = 0x0
0x752: REVERT 0x0 0x0
0x753: JUMPDEST 
0x754: V403 = 0x0
0x756: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x76b: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x76d: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x782: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x783: V408 = EQ V407 0x0
0x784: V409 = ISZERO V408
0x785: V410 = ISZERO V409
0x786: V411 = ISZERO V410
0x787: V412 = 0x4a2
0x78a: THROWI V411
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x78b
[0x78b:0x878]
---
Predecessors: [0x74f]
Successors: []
---
0x78b PUSH1 0x0
0x78d DUP1
0x78e REVERT
0x78f JUMPDEST
0x790 DUP1
0x791 PUSH1 0x0
0x793 DUP1
0x794 PUSH2 0x100
0x797 EXP
0x798 DUP2
0x799 SLOAD
0x79a DUP2
0x79b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b0 MUL
0x7b1 NOT
0x7b2 AND
0x7b3 SWAP1
0x7b4 DUP4
0x7b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ca AND
0x7cb MUL
0x7cc OR
0x7cd SWAP1
0x7ce SSTORE
0x7cf POP
0x7d0 DUP1
0x7d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e6 AND
0x7e7 PUSH1 0x0
0x7e9 DUP1
0x7ea SWAP1
0x7eb SLOAD
0x7ec SWAP1
0x7ed PUSH2 0x100
0x7f0 EXP
0x7f1 SWAP1
0x7f2 DIV
0x7f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x808 AND
0x809 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81e AND
0x81f PUSH32 0x2ae143016adc0aa482e6ba5d9a350f3e3122aeb005ca4bf47d1d7b8221bce472
0x840 PUSH1 0x40
0x842 MLOAD
0x843 PUSH1 0x40
0x845 MLOAD
0x846 DUP1
0x847 SWAP2
0x848 SUB
0x849 SWAP1
0x84a LOG3
0x84b POP
0x84c JUMP
0x84d STOP
0x84e LOG1
0x84f PUSH6 0x627a7a723058
0x856 SHA3
0x857 LOG1
0x858 ORIGIN
0x859 MISSING 0x5f
0x85a DUP4
0x85b DUP2
0x85c DUP9
0x85d MISSING 0xb9
0x85e CREATE2
0x85f MISSING 0x2b
0x860 PUSH8 0xe11058bf01869800
0x869 SWAP15
0x86a MISSING 0x5d
0x86b MISSING 0xb8
0x86c SLOAD
0x86d MISSING 0xe1
0x86e MISSING 0xb7
0x86f SGT
0x870 MISSING 0xcd
0x871 LOG1
0x872 MISSING 0xfc
0x873 EQ
0x874 MISSING 0xb3
0x875 SWAP1
0x876 MISSING 0xed
0x877 STOP
0x878 MISSING 0x29
---
0x78b: V413 = 0x0
0x78e: REVERT 0x0 0x0
0x78f: JUMPDEST 
0x791: V414 = 0x0
0x794: V415 = 0x100
0x797: V416 = EXP 0x100 0x0
0x799: V417 = S[0x0]
0x79b: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b0: V419 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x7b1: V420 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7b2: V421 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V417
0x7b5: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ca: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7cb: V424 = MUL V423 0x1
0x7cc: V425 = OR V424 V421
0x7ce: S[0x0] = V425
0x7d1: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e6: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7e7: V428 = 0x0
0x7eb: V429 = S[0x0]
0x7ed: V430 = 0x100
0x7f0: V431 = EXP 0x100 0x0
0x7f2: V432 = DIV V429 0x1
0x7f3: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x808: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x809: V435 = 0xffffffffffffffffffffffffffffffffffffffff
0x81e: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x81f: V437 = 0x2ae143016adc0aa482e6ba5d9a350f3e3122aeb005ca4bf47d1d7b8221bce472
0x840: V438 = 0x40
0x842: V439 = M[0x40]
0x843: V440 = 0x40
0x845: V441 = M[0x40]
0x848: V442 = SUB V439 V441
0x84a: LOG V441 V442 0x2ae143016adc0aa482e6ba5d9a350f3e3122aeb005ca4bf47d1d7b8221bce472 V436 V427
0x84c: JUMP S1
0x84d: STOP 
0x84e: LOG S0 S1 S2
0x84f: V443 = 0x627a7a723058
0x856: V444 = SHA3 0x627a7a723058 S3
0x857: LOG V444 S4 S5
0x858: V445 = ORIGIN
0x859: MISSING 0x5f
0x85d: MISSING 0xb9
0x85e: V446 = CREATE2 S0 S1 S2 S3
0x85f: MISSING 0x2b
0x860: V447 = 0xe11058bf01869800
0x86a: MISSING 0x5d
0x86b: MISSING 0xb8
0x86c: V448 = S[S0]
0x86d: MISSING 0xe1
0x86e: MISSING 0xb7
0x86f: V449 = SGT S0 S1
0x870: MISSING 0xcd
0x871: LOG S0 S1 S2
0x872: MISSING 0xfc
0x873: V450 = EQ S0 S1
0x874: MISSING 0xb3
0x876: MISSING 0xed
0x877: STOP 
0x878: MISSING 0x29
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V445, S6, S0, S3, S0, S1, S2, S3, S4, S5, S6, V446, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, 0xe11058bf01869800, V448, V449, V450, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0xeb

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa8
Exit block: 0xe9
Body: 0xa8, 0xb0, 0xb4, 0xe9, 0x110, 0x167, 0x16b, 0x1c3, 0x1c7, 0x1ff, 0x203

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

