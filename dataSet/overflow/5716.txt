Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2db26de1
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2db26de1
0x3c: V13 = EQ 0x2db26de1 V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4d]
---
Predecessors: [0xd]
Successors: [0x4e, 0x52]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 DUP1
0x49 ISZERO
0x4a PUSH2 0x52
0x4d JUMPI
---
0x46: JUMPDEST 
0x47: V16 = CALLVALUE
0x49: V17 = ISZERO V16
0x4a: V18 = 0x52
0x4d: JUMPI 0x52 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V16]
Exit stack: [V11, V16]

================================

Block 0x4e
[0x4e:0x51]
---
Predecessors: [0x46]
Successors: []
---
0x4e PUSH1 0x0
0x50 DUP1
0x51 REVERT
---
0x4e: V19 = 0x0
0x51: REVERT 0x0 0x0
---
Entry stack: [V11, V16]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V16]

================================

Block 0x52
[0x52:0xa9]
---
Predecessors: [0x46]
Successors: [0x101]
---
0x52 JUMPDEST
0x53 POP
0x54 PUSH2 0xaa
0x57 PUSH1 0x4
0x59 DUP1
0x5a CALLDATASIZE
0x5b SUB
0x5c DUP2
0x5d ADD
0x5e SWAP1
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 SWAP1
0x63 PUSH1 0x20
0x65 ADD
0x66 SWAP1
0x67 DUP3
0x68 ADD
0x69 DUP1
0x6a CALLDATALOAD
0x6b SWAP1
0x6c PUSH1 0x20
0x6e ADD
0x6f SWAP1
0x70 DUP1
0x71 DUP1
0x72 PUSH1 0x20
0x74 MUL
0x75 PUSH1 0x20
0x77 ADD
0x78 PUSH1 0x40
0x7a MLOAD
0x7b SWAP1
0x7c DUP2
0x7d ADD
0x7e PUSH1 0x40
0x80 MSTORE
0x81 DUP1
0x82 SWAP4
0x83 SWAP3
0x84 SWAP2
0x85 SWAP1
0x86 DUP2
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b ADD
0x8c DUP4
0x8d DUP4
0x8e PUSH1 0x20
0x90 MUL
0x91 DUP1
0x92 DUP3
0x93 DUP5
0x94 CALLDATACOPY
0x95 DUP3
0x96 ADD
0x97 SWAP2
0x98 POP
0x99 POP
0x9a POP
0x9b POP
0x9c POP
0x9d POP
0x9e SWAP2
0x9f SWAP3
0xa0 SWAP2
0xa1 SWAP3
0xa2 SWAP1
0xa3 POP
0xa4 POP
0xa5 POP
0xa6 PUSH2 0x101
0xa9 JUMP
---
0x52: JUMPDEST 
0x54: V20 = 0xaa
0x57: V21 = 0x4
0x5a: V22 = CALLDATASIZE
0x5b: V23 = SUB V22 0x4
0x5d: V24 = ADD 0x4 V23
0x61: V25 = CALLDATALOAD 0x4
0x63: V26 = 0x20
0x65: V27 = ADD 0x20 0x4
0x68: V28 = ADD 0x4 V25
0x6a: V29 = CALLDATALOAD V28
0x6c: V30 = 0x20
0x6e: V31 = ADD 0x20 V28
0x72: V32 = 0x20
0x74: V33 = MUL 0x20 V29
0x75: V34 = 0x20
0x77: V35 = ADD 0x20 V33
0x78: V36 = 0x40
0x7a: V37 = M[0x40]
0x7d: V38 = ADD V37 V35
0x7e: V39 = 0x40
0x80: M[0x40] = V38
0x88: M[V37] = V29
0x89: V40 = 0x20
0x8b: V41 = ADD 0x20 V37
0x8e: V42 = 0x20
0x90: V43 = MUL 0x20 V29
0x94: CALLDATACOPY V41 V31 V43
0x96: V44 = ADD V41 V43
0xa6: V45 = 0x101
0xa9: JUMP 0x101
---
Entry stack: [V11, V16]
Stack pops: 1
Stack additions: [0xaa, V37]
Exit stack: [V11, 0xaa, V37]

================================

Block 0xaa
[0xaa:0xd1]
---
Predecessors: [0x1c5]
Successors: [0xd2]
---
0xaa JUMPDEST
0xab PUSH1 0x40
0xad MLOAD
0xae DUP1
0xaf DUP1
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 DUP3
0xb4 DUP2
0xb5 SUB
0xb6 DUP3
0xb7 MSTORE
0xb8 DUP4
0xb9 DUP2
0xba DUP2
0xbb MLOAD
0xbc DUP2
0xbd MSTORE
0xbe PUSH1 0x20
0xc0 ADD
0xc1 SWAP2
0xc2 POP
0xc3 DUP1
0xc4 MLOAD
0xc5 SWAP1
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP1
0xca PUSH1 0x20
0xcc MUL
0xcd DUP1
0xce DUP4
0xcf DUP4
0xd0 PUSH1 0x0
---
0xaa: JUMPDEST 
0xab: V46 = 0x40
0xad: V47 = M[0x40]
0xb0: V48 = 0x20
0xb2: V49 = ADD 0x20 V47
0xb5: V50 = SUB V49 V47
0xb7: M[V47] = V50
0xbb: V51 = M[V114]
0xbd: M[V49] = V51
0xbe: V52 = 0x20
0xc0: V53 = ADD 0x20 V49
0xc4: V54 = M[V114]
0xc6: V55 = 0x20
0xc8: V56 = ADD 0x20 V114
0xca: V57 = 0x20
0xcc: V58 = MUL 0x20 V54
0xd0: V59 = 0x0
---
Entry stack: [V11, V114]
Stack pops: 1
Stack additions: [S0, V47, V47, V53, V56, V58, V58, V53, V56, 0x0]
Exit stack: [V11, V114, V47, V47, V53, V56, V58, V58, V53, V56, 0x0]

================================

Block 0xd2
[0xd2:0xda]
---
Predecessors: [0xaa, 0xdb]
Successors: [0xdb, 0xed]
---
0xd2 JUMPDEST
0xd3 DUP4
0xd4 DUP2
0xd5 LT
0xd6 ISZERO
0xd7 PUSH2 0xed
0xda JUMPI
---
0xd2: JUMPDEST 
0xd5: V60 = LT S0 V58
0xd6: V61 = ISZERO V60
0xd7: V62 = 0xed
0xda: JUMPI 0xed V61
---
Entry stack: [V11, V114, V47, V47, V53, V56, V58, V58, V53, V56, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V114, V47, V47, V53, V56, V58, V58, V53, V56, S0]

================================

Block 0xdb
[0xdb:0xec]
---
Predecessors: [0xd2]
Successors: [0xd2]
---
0xdb DUP1
0xdc DUP3
0xdd ADD
0xde MLOAD
0xdf DUP2
0xe0 DUP5
0xe1 ADD
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 DUP2
0xe6 ADD
0xe7 SWAP1
0xe8 POP
0xe9 PUSH2 0xd2
0xec JUMP
---
0xdd: V63 = ADD V56 S0
0xde: V64 = M[V63]
0xe1: V65 = ADD V53 S0
0xe2: M[V65] = V64
0xe3: V66 = 0x20
0xe6: V67 = ADD S0 0x20
0xe9: V68 = 0xd2
0xec: JUMP 0xd2
---
Entry stack: [V11, V114, V47, V47, V53, V56, V58, V58, V53, V56, S0]
Stack pops: 3
Stack additions: [S2, S1, V67]
Exit stack: [V11, V114, V47, V47, V53, V56, V58, V58, V53, V56, V67]

================================

Block 0xed
[0xed:0x100]
---
Predecessors: [0xd2]
Successors: []
---
0xed JUMPDEST
0xee POP
0xef POP
0xf0 POP
0xf1 POP
0xf2 SWAP1
0xf3 POP
0xf4 ADD
0xf5 SWAP3
0xf6 POP
0xf7 POP
0xf8 POP
0xf9 PUSH1 0x40
0xfb MLOAD
0xfc DUP1
0xfd SWAP2
0xfe SUB
0xff SWAP1
0x100 RETURN
---
0xed: JUMPDEST 
0xf4: V69 = ADD V58 V53
0xf9: V70 = 0x40
0xfb: V71 = M[0x40]
0xfe: V72 = SUB V69 V71
0x100: RETURN V71 V72
---
Entry stack: [V11, V114, V47, V47, V53, V56, V58, V58, V53, V56, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x10a]
---
Predecessors: [0x52]
Successors: [0x10b]
---
0x101 JUMPDEST
0x102 PUSH1 0x60
0x104 PUSH1 0x0
0x106 DUP1
0x107 PUSH1 0x0
0x109 SWAP1
0x10a POP
---
0x101: JUMPDEST 
0x102: V73 = 0x60
0x104: V74 = 0x0
0x107: V75 = 0x0
---
Entry stack: [V11, 0xaa, V37]
Stack pops: 0
Stack additions: [0x60, 0x0, 0x0]
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, 0x0]

================================

Block 0x10b
[0x10b:0x114]
---
Predecessors: [0x101, 0x123]
Successors: [0x115, 0x17a]
---
0x10b JUMPDEST
0x10c DUP4
0x10d MLOAD
0x10e DUP2
0x10f LT
0x110 ISZERO
0x111 PUSH2 0x17a
0x114 JUMPI
---
0x10b: JUMPDEST 
0x10d: V76 = M[V37]
0x10f: V77 = LT S0 V76
0x110: V78 = ISZERO V77
0x111: V79 = 0x17a
0x114: JUMPI 0x17a V78
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, S0]

================================

Block 0x115
[0x115:0x121]
---
Predecessors: [0x10b]
Successors: [0x122, 0x123]
---
0x115 DUP2
0x116 DUP5
0x117 DUP3
0x118 DUP2
0x119 MLOAD
0x11a DUP2
0x11b LT
0x11c ISZERO
0x11d ISZERO
0x11e PUSH2 0x123
0x121 JUMPI
---
0x119: V80 = M[V37]
0x11b: V81 = LT S0 V80
0x11c: V82 = ISZERO V81
0x11d: V83 = ISZERO V82
0x11e: V84 = 0x123
0x121: JUMPI 0x123 V83
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, S3, S0]
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, S0, 0x0, V37, S0]

================================

Block 0x122
[0x122:0x122]
---
Predecessors: [0x115]
Successors: []
---
0x122 INVALID
---
0x122: INVALID 
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S3, 0x0, V37, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, S3, 0x0, V37, S0]

================================

Block 0x123
[0x123:0x179]
---
Predecessors: [0x115]
Successors: [0x10b]
---
0x123 JUMPDEST
0x124 SWAP1
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 PUSH1 0x20
0x12b MUL
0x12c ADD
0x12d MLOAD
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 BALANCE
0x145 SWAP1
0x146 DUP1
0x147 PUSH1 0x1
0x149 DUP2
0x14a SLOAD
0x14b ADD
0x14c DUP1
0x14d DUP3
0x14e SSTORE
0x14f DUP1
0x150 SWAP2
0x151 POP
0x152 POP
0x153 SWAP1
0x154 PUSH1 0x1
0x156 DUP3
0x157 SUB
0x158 SWAP1
0x159 PUSH1 0x0
0x15b MSTORE
0x15c PUSH1 0x20
0x15e PUSH1 0x0
0x160 SHA3
0x161 ADD
0x162 PUSH1 0x0
0x164 SWAP1
0x165 SWAP2
0x166 SWAP3
0x167 SWAP1
0x168 SWAP2
0x169 SWAP1
0x16a SWAP2
0x16b POP
0x16c SSTORE
0x16d POP
0x16e DUP1
0x16f DUP1
0x170 PUSH1 0x1
0x172 ADD
0x173 SWAP2
0x174 POP
0x175 POP
0x176 PUSH2 0x10b
0x179 JUMP
---
0x123: JUMPDEST 
0x125: V85 = 0x20
0x127: V86 = ADD 0x20 V37
0x129: V87 = 0x20
0x12b: V88 = MUL 0x20 S0
0x12c: V89 = ADD V88 V86
0x12d: V90 = M[V89]
0x12e: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x144: V93 = BALANCE V92
0x147: V94 = 0x1
0x14a: V95 = S[0x0]
0x14b: V96 = ADD V95 0x1
0x14e: S[0x0] = V96
0x154: V97 = 0x1
0x157: V98 = SUB V96 0x1
0x159: V99 = 0x0
0x15b: M[0x0] = 0x0
0x15c: V100 = 0x20
0x15e: V101 = 0x0
0x160: V102 = SHA3 0x0 0x20
0x161: V103 = ADD V102 V98
0x162: V104 = 0x0
0x16c: S[V103] = V93
0x170: V105 = 0x1
0x172: V106 = ADD 0x1 S3
0x176: V107 = 0x10b
0x179: JUMP 0x10b
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S3, 0x0, V37, S0]
Stack pops: 4
Stack additions: [V106]
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, V106]

================================

Block 0x17a
[0x17a:0x1a0]
---
Predecessors: [0x10b]
Successors: [0x1a1, 0x1c5]
---
0x17a JUMPDEST
0x17b DUP2
0x17c DUP1
0x17d SLOAD
0x17e DUP1
0x17f PUSH1 0x20
0x181 MUL
0x182 PUSH1 0x20
0x184 ADD
0x185 PUSH1 0x40
0x187 MLOAD
0x188 SWAP1
0x189 DUP2
0x18a ADD
0x18b PUSH1 0x40
0x18d MSTORE
0x18e DUP1
0x18f SWAP3
0x190 SWAP2
0x191 SWAP1
0x192 DUP2
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x20
0x197 ADD
0x198 DUP3
0x199 DUP1
0x19a SLOAD
0x19b DUP1
0x19c ISZERO
0x19d PUSH2 0x1c5
0x1a0 JUMPI
---
0x17a: JUMPDEST 
0x17d: V108 = S[0x0]
0x17f: V109 = 0x20
0x181: V110 = MUL 0x20 V108
0x182: V111 = 0x20
0x184: V112 = ADD 0x20 V110
0x185: V113 = 0x40
0x187: V114 = M[0x40]
0x18a: V115 = ADD V114 V112
0x18b: V116 = 0x40
0x18d: M[0x40] = V115
0x194: M[V114] = V108
0x195: V117 = 0x20
0x197: V118 = ADD 0x20 V114
0x19a: V119 = S[0x0]
0x19c: V120 = ISZERO V119
0x19d: V121 = 0x1c5
0x1a0: JUMPI 0x1c5 V120
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S0]
Stack pops: 2
Stack additions: [S1, S0, V114, S1, V108, V118, S1, V119]
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, S0, V114, 0x0, V108, V118, 0x0, V119]

================================

Block 0x1a1
[0x1a1:0x1b0]
---
Predecessors: [0x17a]
Successors: [0x1b1]
---
0x1a1 PUSH1 0x20
0x1a3 MUL
0x1a4 DUP3
0x1a5 ADD
0x1a6 SWAP2
0x1a7 SWAP1
0x1a8 PUSH1 0x0
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad PUSH1 0x0
0x1af SHA3
0x1b0 SWAP1
---
0x1a1: V122 = 0x20
0x1a3: V123 = MUL 0x20 V119
0x1a5: V124 = ADD V118 V123
0x1a8: V125 = 0x0
0x1aa: M[0x0] = 0x0
0x1ab: V126 = 0x20
0x1ad: V127 = 0x0
0x1af: V128 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S6, V114, 0x0, V108, V118, 0x0, V119]
Stack pops: 3
Stack additions: [V124, V128, S2]
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, S6, V114, 0x0, V108, V124, V128, V118]

================================

Block 0x1b1
[0x1b1:0x1c4]
---
Predecessors: [0x1a1, 0x1b1]
Successors: [0x1b1, 0x1c5]
---
0x1b1 JUMPDEST
0x1b2 DUP2
0x1b3 SLOAD
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 SWAP1
0x1ba PUSH1 0x1
0x1bc ADD
0x1bd SWAP1
0x1be DUP1
0x1bf DUP4
0x1c0 GT
0x1c1 PUSH2 0x1b1
0x1c4 JUMPI
---
0x1b1: JUMPDEST 
0x1b3: V129 = S[S1]
0x1b5: M[S0] = V129
0x1b6: V130 = 0x20
0x1b8: V131 = ADD 0x20 S0
0x1ba: V132 = 0x1
0x1bc: V133 = ADD 0x1 S1
0x1c0: V134 = GT V124 V131
0x1c1: V135 = 0x1b1
0x1c4: JUMPI 0x1b1 V134
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S6, V114, 0x0, V108, V124, S1, S0]
Stack pops: 3
Stack additions: [S2, V133, V131]
Exit stack: [V11, 0xaa, V37, 0x60, 0x0, S6, V114, 0x0, V108, V124, V133, V131]

================================

Block 0x1c5
[0x1c5:0x1d2]
---
Predecessors: [0x17a, 0x1b1]
Successors: [0xaa]
---
0x1c5 JUMPDEST
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb SWAP3
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf SWAP2
0x1d0 SWAP1
0x1d1 POP
0x1d2 JUMP
---
0x1c5: JUMPDEST 
0x1d2: JUMP 0xaa
---
Entry stack: [V11, 0xaa, V37, 0x60, 0x0, S6, V114, 0x0, V108, S2, S1, S0]
Stack pops: 11
Stack additions: [S5]
Exit stack: [V11, V114]

================================

Block 0x1d3
[0x1d3:0x201]
---
Predecessors: []
Successors: []
---
0x1d3 STOP
0x1d4 LOG1
0x1d5 PUSH6 0x627a7a723058
0x1dc SHA3
0x1dd MISSING 0xc0
0x1de MISSING 0xa7
0x1df DUP7
0x1e0 MISSING 0xdd
0x1e1 MISSING 0x2c
0x1e2 PUSH20 0x6656d69008cf4b56980b8ea4d9fcfd1d9b5a9cb2
0x1f7 PUSH10 0x964973426a0029
---
0x1d3: STOP 
0x1d4: LOG S0 S1 S2
0x1d5: V136 = 0x627a7a723058
0x1dc: V137 = SHA3 0x627a7a723058 S3
0x1dd: MISSING 0xc0
0x1de: MISSING 0xa7
0x1e0: MISSING 0xdd
0x1e1: MISSING 0x2c
0x1e2: V138 = 0x6656d69008cf4b56980b8ea4d9fcfd1d9b5a9cb2
0x1f7: V139 = 0x964973426a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V137, S6, S0, S1, S2, S3, S4, S5, S6, 0x964973426a0029, 0x6656d69008cf4b56980b8ea4d9fcfd1d9b5a9cb2]
Exit stack: []

================================

Function 0:
Public function signature: 0x2db26de1
Entry block: 0x46
Exit block: 0xed
Body: 0x46, 0x4e, 0x52, 0xaa, 0xd2, 0xdb, 0xed, 0x101, 0x10b, 0x115, 0x122, 0x123, 0x17a, 0x1a1, 0x1b1, 0x1c5

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

