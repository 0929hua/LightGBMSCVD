Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xdb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xdb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xdb
0xc: JUMPI 0xdb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x136]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xf4f8184
0x3c EQ
0x3d PUSH2 0x136
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xf4f8184
0x3c: V13 = EQ 0xf4f8184 V11
0x3d: V14 = 0x136
0x40: JUMPI 0x136 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x18d]
---
0x41 DUP1
0x42 PUSH4 0x13fa095f
0x47 EQ
0x48 PUSH2 0x18d
0x4b JUMPI
---
0x42: V15 = 0x13fa095f
0x47: V16 = EQ 0x13fa095f V11
0x48: V17 = 0x18d
0x4b: JUMPI 0x18d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1d0]
---
0x4c DUP1
0x4d PUSH4 0x53b7a59b
0x52 EQ
0x53 PUSH2 0x1d0
0x56 JUMPI
---
0x4d: V18 = 0x53b7a59b
0x52: V19 = EQ 0x53b7a59b V11
0x53: V20 = 0x1d0
0x56: JUMPI 0x1d0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x227]
---
0x57 DUP1
0x58 PUSH4 0x624964c3
0x5d EQ
0x5e PUSH2 0x227
0x61 JUMPI
---
0x58: V21 = 0x624964c3
0x5d: V22 = EQ 0x624964c3 V11
0x5e: V23 = 0x227
0x61: JUMPI 0x227 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x27e]
---
0x62 DUP1
0x63 PUSH4 0x70228eea
0x68 EQ
0x69 PUSH2 0x27e
0x6c JUMPI
---
0x63: V24 = 0x70228eea
0x68: V25 = EQ 0x70228eea V11
0x69: V26 = 0x27e
0x6c: JUMPI 0x27e V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x2e4]
---
0x6d DUP1
0x6e PUSH4 0x715018a6
0x73 EQ
0x74 PUSH2 0x2e4
0x77 JUMPI
---
0x6e: V27 = 0x715018a6
0x73: V28 = EQ 0x715018a6 V11
0x74: V29 = 0x2e4
0x77: JUMPI 0x2e4 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2fb]
---
0x78 DUP1
0x79 PUSH4 0x7362377b
0x7e EQ
0x7f PUSH2 0x2fb
0x82 JUMPI
---
0x79: V30 = 0x7362377b
0x7e: V31 = EQ 0x7362377b V11
0x7f: V32 = 0x2fb
0x82: JUMPI 0x2fb V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x32a]
---
0x83 DUP1
0x84 PUSH4 0x86f254bf
0x89 EQ
0x8a PUSH2 0x32a
0x8d JUMPI
---
0x84: V33 = 0x86f254bf
0x89: V34 = EQ 0x86f254bf V11
0x8a: V35 = 0x32a
0x8d: JUMPI 0x32a V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x355]
---
0x8e DUP1
0x8f PUSH4 0x89476069
0x94 EQ
0x95 PUSH2 0x355
0x98 JUMPI
---
0x8f: V36 = 0x89476069
0x94: V37 = EQ 0x89476069 V11
0x95: V38 = 0x355
0x98: JUMPI 0x355 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x3b0]
---
0x99 DUP1
0x9a PUSH4 0x8da5cb5b
0x9f EQ
0xa0 PUSH2 0x3b0
0xa3 JUMPI
---
0x9a: V39 = 0x8da5cb5b
0x9f: V40 = EQ 0x8da5cb5b V11
0xa0: V41 = 0x3b0
0xa3: JUMPI 0x3b0 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x407]
---
0xa4 DUP1
0xa5 PUSH4 0x9232494e
0xaa EQ
0xab PUSH2 0x407
0xae JUMPI
---
0xa5: V42 = 0x9232494e
0xaa: V43 = EQ 0x9232494e V11
0xab: V44 = 0x407
0xae: JUMPI 0x407 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x43a]
---
0xaf DUP1
0xb0 PUSH4 0xa215cd92
0xb5 EQ
0xb6 PUSH2 0x43a
0xb9 JUMPI
---
0xb0: V45 = 0xa215cd92
0xb5: V46 = EQ 0xa215cd92 V11
0xb6: V47 = 0x43a
0xb9: JUMPI 0x43a V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x467]
---
0xba DUP1
0xbb PUSH4 0xaf6d1fe4
0xc0 EQ
0xc1 PUSH2 0x467
0xc4 JUMPI
---
0xbb: V48 = 0xaf6d1fe4
0xc0: V49 = EQ 0xaf6d1fe4 V11
0xc1: V50 = 0x467
0xc4: JUMPI 0x467 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x4d4]
---
0xc5 DUP1
0xc6 PUSH4 0xc6ce2664
0xcb EQ
0xcc PUSH2 0x4d4
0xcf JUMPI
---
0xc6: V51 = 0xc6ce2664
0xcb: V52 = EQ 0xc6ce2664 V11
0xcc: V53 = 0x4d4
0xcf: JUMPI 0x4d4 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0xc5]
Successors: [0xdb, 0x517]
---
0xd0 DUP1
0xd1 PUSH4 0xf2fde38b
0xd6 EQ
0xd7 PUSH2 0x517
0xda JUMPI
---
0xd1: V54 = 0xf2fde38b
0xd6: V55 = EQ 0xf2fde38b V11
0xd7: V56 = 0x517
0xda: JUMPI 0x517 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xf2]
---
Predecessors: [0x0, 0xd0]
Successors: [0xf3, 0xf7]
---
0xdb JUMPDEST
0xdc PUSH1 0x0
0xde PUSH1 0x14
0xe0 SWAP1
0xe1 SLOAD
0xe2 SWAP1
0xe3 PUSH2 0x100
0xe6 EXP
0xe7 SWAP1
0xe8 DIV
0xe9 PUSH1 0xff
0xeb AND
0xec ISZERO
0xed ISZERO
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xdb: JUMPDEST 
0xdc: V57 = 0x0
0xde: V58 = 0x14
0xe1: V59 = S[0x0]
0xe3: V60 = 0x100
0xe6: V61 = EXP 0x100 0x14
0xe8: V62 = DIV V59 0x10000000000000000000000000000000000000000
0xe9: V63 = 0xff
0xeb: V64 = AND 0xff V62
0xec: V65 = ISZERO V64
0xed: V66 = ISZERO V65
0xee: V67 = ISZERO V66
0xef: V68 = 0xf7
0xf2: JUMPI 0xf7 V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xdb]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V69 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7
[0xf7:0x119]
---
Predecessors: [0xdb]
Successors: [0x55a]
---
0xf7 JUMPDEST
0xf8 PUSH1 0x1
0xfa PUSH1 0x0
0xfc PUSH1 0x14
0xfe PUSH2 0x100
0x101 EXP
0x102 DUP2
0x103 SLOAD
0x104 DUP2
0x105 PUSH1 0xff
0x107 MUL
0x108 NOT
0x109 AND
0x10a SWAP1
0x10b DUP4
0x10c ISZERO
0x10d ISZERO
0x10e MUL
0x10f OR
0x110 SWAP1
0x111 SSTORE
0x112 POP
0x113 PUSH2 0x11a
0x116 PUSH2 0x55a
0x119 JUMP
---
0xf7: JUMPDEST 
0xf8: V70 = 0x1
0xfa: V71 = 0x0
0xfc: V72 = 0x14
0xfe: V73 = 0x100
0x101: V74 = EXP 0x100 0x14
0x103: V75 = S[0x0]
0x105: V76 = 0xff
0x107: V77 = MUL 0xff 0x10000000000000000000000000000000000000000
0x108: V78 = NOT 0xff0000000000000000000000000000000000000000
0x109: V79 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V75
0x10c: V80 = ISZERO 0x1
0x10d: V81 = ISZERO 0x0
0x10e: V82 = MUL 0x1 0x10000000000000000000000000000000000000000
0x10f: V83 = OR 0x10000000000000000000000000000000000000000 V79
0x111: S[0x0] = V83
0x113: V84 = 0x11a
0x116: V85 = 0x55a
0x119: JUMP 0x55a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x11a
[0x11a:0x135]
---
Predecessors: [0x962]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x0
0x11d DUP1
0x11e PUSH1 0x14
0x120 PUSH2 0x100
0x123 EXP
0x124 DUP2
0x125 SLOAD
0x126 DUP2
0x127 PUSH1 0xff
0x129 MUL
0x12a NOT
0x12b AND
0x12c SWAP1
0x12d DUP4
0x12e ISZERO
0x12f ISZERO
0x130 MUL
0x131 OR
0x132 SWAP1
0x133 SSTORE
0x134 POP
0x135 STOP
---
0x11a: JUMPDEST 
0x11b: V86 = 0x0
0x11e: V87 = 0x14
0x120: V88 = 0x100
0x123: V89 = EXP 0x100 0x14
0x125: V90 = S[0x0]
0x127: V91 = 0xff
0x129: V92 = MUL 0xff 0x10000000000000000000000000000000000000000
0x12a: V93 = NOT 0xff0000000000000000000000000000000000000000
0x12b: V94 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V90
0x12e: V95 = ISZERO 0x0
0x12f: V96 = ISZERO 0x1
0x130: V97 = MUL 0x0 0x10000000000000000000000000000000000000000
0x131: V98 = OR 0x0 V94
0x133: S[0x0] = V98
0x135: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0xd]
Successors: [0x13e, 0x142]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 DUP1
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x136: JUMPDEST 
0x137: V99 = CALLVALUE
0x139: V100 = ISZERO V99
0x13a: V101 = 0x142
0x13d: JUMPI 0x142 V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V99]
Exit stack: [V11, V99]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x136]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V102 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V11, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V99]

================================

Block 0x142
[0x142:0x14a]
---
Predecessors: [0x136]
Successors: [0xa4a]
---
0x142 JUMPDEST
0x143 POP
0x144 PUSH2 0x14b
0x147 PUSH2 0xa4a
0x14a JUMP
---
0x142: JUMPDEST 
0x144: V103 = 0x14b
0x147: V104 = 0xa4a
0x14a: JUMP 0xa4a
---
Entry stack: [V11, V99]
Stack pops: 1
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x14b
[0x14b:0x18c]
---
Predecessors: [0xa4a]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 DUP3
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP2
0x183 POP
0x184 POP
0x185 PUSH1 0x40
0x187 MLOAD
0x188 DUP1
0x189 SWAP2
0x18a SUB
0x18b SWAP1
0x18c RETURN
---
0x14b: JUMPDEST 
0x14c: V105 = 0x40
0x14e: V106 = M[0x40]
0x151: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0x167: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x17e: M[V106] = V110
0x17f: V111 = 0x20
0x181: V112 = ADD 0x20 V106
0x185: V113 = 0x40
0x187: V114 = M[0x40]
0x18a: V115 = SUB V112 V114
0x18c: RETURN V114 V115
---
Entry stack: [V11, 0x14b, V673]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x41]
Successors: [0x195, 0x199]
---
0x18d JUMPDEST
0x18e CALLVALUE
0x18f DUP1
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18d: JUMPDEST 
0x18e: V116 = CALLVALUE
0x190: V117 = ISZERO V116
0x191: V118 = 0x199
0x194: JUMPI 0x199 V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18d]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V119 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x199
[0x199:0x1cd]
---
Predecessors: [0x18d]
Successors: [0xa70]
---
0x199 JUMPDEST
0x19a POP
0x19b PUSH2 0x1ce
0x19e PUSH1 0x4
0x1a0 DUP1
0x1a1 CALLDATASIZE
0x1a2 SUB
0x1a3 DUP2
0x1a4 ADD
0x1a5 SWAP1
0x1a6 DUP1
0x1a7 DUP1
0x1a8 CALLDATALOAD
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 SWAP3
0x1c5 SWAP2
0x1c6 SWAP1
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca PUSH2 0xa70
0x1cd JUMP
---
0x199: JUMPDEST 
0x19b: V120 = 0x1ce
0x19e: V121 = 0x4
0x1a1: V122 = CALLDATASIZE
0x1a2: V123 = SUB V122 0x4
0x1a4: V124 = ADD 0x4 V123
0x1a8: V125 = CALLDATALOAD 0x4
0x1a9: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1c0: V128 = 0x20
0x1c2: V129 = ADD 0x20 0x4
0x1ca: V130 = 0xa70
0x1cd: JUMP 0xa70
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x1ce, V127]
Exit stack: [V11, 0x1ce, V127]

================================

Block 0x1ce
[0x1ce:0x1cf]
---
Predecessors: [0xacb]
Successors: []
---
0x1ce JUMPDEST
0x1cf STOP
---
0x1ce: JUMPDEST 
0x1cf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d0
[0x1d0:0x1d7]
---
Predecessors: [0x4c]
Successors: [0x1d8, 0x1dc]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 DUP1
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V131 = CALLVALUE
0x1d3: V132 = ISZERO V131
0x1d4: V133 = 0x1dc
0x1d7: JUMPI 0x1dc V132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V11, V131]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V134 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V11, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V131]

================================

Block 0x1dc
[0x1dc:0x1e4]
---
Predecessors: [0x1d0]
Successors: [0xb0f]
---
0x1dc JUMPDEST
0x1dd POP
0x1de PUSH2 0x1e5
0x1e1 PUSH2 0xb0f
0x1e4 JUMP
---
0x1dc: JUMPDEST 
0x1de: V135 = 0x1e5
0x1e1: V136 = 0xb0f
0x1e4: JUMP 0xb0f
---
Entry stack: [V11, V131]
Stack pops: 1
Stack additions: [0x1e5]
Exit stack: [V11, 0x1e5]

================================

Block 0x1e5
[0x1e5:0x226]
---
Predecessors: [0xb0f]
Successors: []
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP1
0x1ea DUP3
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP2
0x21d POP
0x21e POP
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 SWAP2
0x224 SUB
0x225 SWAP1
0x226 RETURN
---
0x1e5: JUMPDEST 
0x1e6: V137 = 0x40
0x1e8: V138 = M[0x40]
0x1eb: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0x201: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x218: M[V138] = V142
0x219: V143 = 0x20
0x21b: V144 = ADD 0x20 V138
0x21f: V145 = 0x40
0x221: V146 = M[0x40]
0x224: V147 = SUB V144 V146
0x226: RETURN V146 V147
---
Entry stack: [V11, 0x1e5, V711]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1e5]

================================

Block 0x227
[0x227:0x22e]
---
Predecessors: [0x57]
Successors: [0x22f, 0x233]
---
0x227 JUMPDEST
0x228 CALLVALUE
0x229 DUP1
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x227: JUMPDEST 
0x228: V148 = CALLVALUE
0x22a: V149 = ISZERO V148
0x22b: V150 = 0x233
0x22e: JUMPI 0x233 V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V11, V148]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x227]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V151 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V11, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V148]

================================

Block 0x233
[0x233:0x23b]
---
Predecessors: [0x227]
Successors: [0xb35]
---
0x233 JUMPDEST
0x234 POP
0x235 PUSH2 0x23c
0x238 PUSH2 0xb35
0x23b JUMP
---
0x233: JUMPDEST 
0x235: V152 = 0x23c
0x238: V153 = 0xb35
0x23b: JUMP 0xb35
---
Entry stack: [V11, V148]
Stack pops: 1
Stack additions: [0x23c]
Exit stack: [V11, 0x23c]

================================

Block 0x23c
[0x23c:0x27d]
---
Predecessors: [0xc1a]
Successors: []
---
0x23c JUMPDEST
0x23d PUSH1 0x40
0x23f MLOAD
0x240 DUP1
0x241 DUP3
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP2
0x274 POP
0x275 POP
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a SWAP2
0x27b SUB
0x27c SWAP1
0x27d RETURN
---
0x23c: JUMPDEST 
0x23d: V154 = 0x40
0x23f: V155 = M[0x40]
0x242: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x258: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x26f: M[V155] = V159
0x270: V160 = 0x20
0x272: V161 = ADD 0x20 V155
0x276: V162 = 0x40
0x278: V163 = M[0x40]
0x27b: V164 = SUB V161 V163
0x27d: RETURN V163 V164
---
Entry stack: [V11, V769]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0x62]
Successors: [0x286, 0x28a]
---
0x27e JUMPDEST
0x27f CALLVALUE
0x280 DUP1
0x281 ISZERO
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x27e: JUMPDEST 
0x27f: V165 = CALLVALUE
0x281: V166 = ISZERO V165
0x282: V167 = 0x28a
0x285: JUMPI 0x28a V166
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V165]
Exit stack: [V11, V165]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x27e]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V168 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V11, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V165]

================================

Block 0x28a
[0x28a:0x2e1]
---
Predecessors: [0x27e]
Successors: [0xc30]
---
0x28a JUMPDEST
0x28b POP
0x28c PUSH2 0x2e2
0x28f PUSH1 0x4
0x291 DUP1
0x292 CALLDATASIZE
0x293 SUB
0x294 DUP2
0x295 ADD
0x296 SWAP1
0x297 DUP1
0x298 DUP1
0x299 CALLDATALOAD
0x29a SWAP1
0x29b PUSH1 0x20
0x29d ADD
0x29e SWAP1
0x29f DUP3
0x2a0 ADD
0x2a1 DUP1
0x2a2 CALLDATALOAD
0x2a3 SWAP1
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 SWAP1
0x2a8 DUP1
0x2a9 DUP1
0x2aa PUSH1 0x20
0x2ac MUL
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 ADD
0x2b6 PUSH1 0x40
0x2b8 MSTORE
0x2b9 DUP1
0x2ba SWAP4
0x2bb SWAP3
0x2bc SWAP2
0x2bd SWAP1
0x2be DUP2
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 DUP4
0x2c5 DUP4
0x2c6 PUSH1 0x20
0x2c8 MUL
0x2c9 DUP1
0x2ca DUP3
0x2cb DUP5
0x2cc CALLDATACOPY
0x2cd DUP3
0x2ce ADD
0x2cf SWAP2
0x2d0 POP
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 SWAP2
0x2d7 SWAP3
0x2d8 SWAP2
0x2d9 SWAP3
0x2da SWAP1
0x2db POP
0x2dc POP
0x2dd POP
0x2de PUSH2 0xc30
0x2e1 JUMP
---
0x28a: JUMPDEST 
0x28c: V169 = 0x2e2
0x28f: V170 = 0x4
0x292: V171 = CALLDATASIZE
0x293: V172 = SUB V171 0x4
0x295: V173 = ADD 0x4 V172
0x299: V174 = CALLDATALOAD 0x4
0x29b: V175 = 0x20
0x29d: V176 = ADD 0x20 0x4
0x2a0: V177 = ADD 0x4 V174
0x2a2: V178 = CALLDATALOAD V177
0x2a4: V179 = 0x20
0x2a6: V180 = ADD 0x20 V177
0x2aa: V181 = 0x20
0x2ac: V182 = MUL 0x20 V178
0x2ad: V183 = 0x20
0x2af: V184 = ADD 0x20 V182
0x2b0: V185 = 0x40
0x2b2: V186 = M[0x40]
0x2b5: V187 = ADD V186 V184
0x2b6: V188 = 0x40
0x2b8: M[0x40] = V187
0x2c0: M[V186] = V178
0x2c1: V189 = 0x20
0x2c3: V190 = ADD 0x20 V186
0x2c6: V191 = 0x20
0x2c8: V192 = MUL 0x20 V178
0x2cc: CALLDATACOPY V190 V180 V192
0x2ce: V193 = ADD V190 V192
0x2de: V194 = 0xc30
0x2e1: JUMP 0xc30
---
Entry stack: [V11, V165]
Stack pops: 1
Stack additions: [0x2e2, V186]
Exit stack: [V11, 0x2e2, V186]

================================

Block 0x2e2
[0x2e2:0x2e3]
---
Predecessors: [0xca1]
Successors: []
---
0x2e2 JUMPDEST
0x2e3 STOP
---
0x2e2: JUMPDEST 
0x2e3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e4
[0x2e4:0x2eb]
---
Predecessors: [0x6d]
Successors: [0x2ec, 0x2f0]
---
0x2e4 JUMPDEST
0x2e5 CALLVALUE
0x2e6 DUP1
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V195 = CALLVALUE
0x2e7: V196 = ISZERO V195
0x2e8: V197 = 0x2f0
0x2eb: JUMPI 0x2f0 V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V195]
Exit stack: [V11, V195]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2e4]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V198 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V11, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V195]

================================

Block 0x2f0
[0x2f0:0x2f8]
---
Predecessors: [0x2e4]
Successors: [0xca5]
---
0x2f0 JUMPDEST
0x2f1 POP
0x2f2 PUSH2 0x2f9
0x2f5 PUSH2 0xca5
0x2f8 JUMP
---
0x2f0: JUMPDEST 
0x2f2: V199 = 0x2f9
0x2f5: V200 = 0xca5
0x2f8: JUMP 0xca5
---
Entry stack: [V11, V195]
Stack pops: 1
Stack additions: [0x2f9]
Exit stack: [V11, 0x2f9]

================================

Block 0x2f9
[0x2f9:0x2fa]
---
Predecessors: [0xd00]
Successors: []
---
0x2f9 JUMPDEST
0x2fa STOP
---
0x2f9: JUMPDEST 
0x2fa: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fb
[0x2fb:0x302]
---
Predecessors: [0x78]
Successors: [0x303, 0x307]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd DUP1
0x2fe ISZERO
0x2ff PUSH2 0x307
0x302 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V201 = CALLVALUE
0x2fe: V202 = ISZERO V201
0x2ff: V203 = 0x307
0x302: JUMPI 0x307 V202
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V201]
Exit stack: [V11, V201]

================================

Block 0x303
[0x303:0x306]
---
Predecessors: [0x2fb]
Successors: []
---
0x303 PUSH1 0x0
0x305 DUP1
0x306 REVERT
---
0x303: V204 = 0x0
0x306: REVERT 0x0 0x0
---
Entry stack: [V11, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V201]

================================

Block 0x307
[0x307:0x30f]
---
Predecessors: [0x2fb]
Successors: [0xda7]
---
0x307 JUMPDEST
0x308 POP
0x309 PUSH2 0x310
0x30c PUSH2 0xda7
0x30f JUMP
---
0x307: JUMPDEST 
0x309: V205 = 0x310
0x30c: V206 = 0xda7
0x30f: JUMP 0xda7
---
Entry stack: [V11, V201]
Stack pops: 1
Stack additions: [0x310]
Exit stack: [V11, 0x310]

================================

Block 0x310
[0x310:0x329]
---
Predecessors: [0xedc]
Successors: []
---
0x310 JUMPDEST
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 DUP3
0x316 ISZERO
0x317 ISZERO
0x318 ISZERO
0x319 ISZERO
0x31a DUP2
0x31b MSTORE
0x31c PUSH1 0x20
0x31e ADD
0x31f SWAP2
0x320 POP
0x321 POP
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP1
0x326 SWAP2
0x327 SUB
0x328 SWAP1
0x329 RETURN
---
0x310: JUMPDEST 
0x311: V207 = 0x40
0x313: V208 = M[0x40]
0x316: V209 = ISZERO 0x1
0x317: V210 = ISZERO 0x0
0x318: V211 = ISZERO 0x1
0x319: V212 = ISZERO 0x0
0x31b: M[V208] = 0x1
0x31c: V213 = 0x20
0x31e: V214 = ADD 0x20 V208
0x322: V215 = 0x40
0x324: V216 = M[0x40]
0x327: V217 = SUB V214 V216
0x329: RETURN V216 V217
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x32a
[0x32a:0x331]
---
Predecessors: [0x83]
Successors: [0x332, 0x336]
---
0x32a JUMPDEST
0x32b CALLVALUE
0x32c DUP1
0x32d ISZERO
0x32e PUSH2 0x336
0x331 JUMPI
---
0x32a: JUMPDEST 
0x32b: V218 = CALLVALUE
0x32d: V219 = ISZERO V218
0x32e: V220 = 0x336
0x331: JUMPI 0x336 V219
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V218]
Exit stack: [V11, V218]

================================

Block 0x332
[0x332:0x335]
---
Predecessors: [0x32a]
Successors: []
---
0x332 PUSH1 0x0
0x334 DUP1
0x335 REVERT
---
0x332: V221 = 0x0
0x335: REVERT 0x0 0x0
---
Entry stack: [V11, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V218]

================================

Block 0x336
[0x336:0x33e]
---
Predecessors: [0x32a]
Successors: [0xefd]
---
0x336 JUMPDEST
0x337 POP
0x338 PUSH2 0x33f
0x33b PUSH2 0xefd
0x33e JUMP
---
0x336: JUMPDEST 
0x338: V222 = 0x33f
0x33b: V223 = 0xefd
0x33e: JUMP 0xefd
---
Entry stack: [V11, V218]
Stack pops: 1
Stack additions: [0x33f]
Exit stack: [V11, 0x33f]

================================

Block 0x33f
[0x33f:0x354]
---
Predecessors: [0xefd]
Successors: []
---
0x33f JUMPDEST
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 DUP3
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x20
0x349 ADD
0x34a SWAP2
0x34b POP
0x34c POP
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 SWAP2
0x352 SUB
0x353 SWAP1
0x354 RETURN
---
0x33f: JUMPDEST 
0x340: V224 = 0x40
0x342: V225 = M[0x40]
0x346: M[V225] = V939
0x347: V226 = 0x20
0x349: V227 = ADD 0x20 V225
0x34d: V228 = 0x40
0x34f: V229 = M[0x40]
0x352: V230 = SUB V227 V229
0x354: RETURN V229 V230
---
Entry stack: [V11, 0x33f, V939]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x33f]

================================

Block 0x355
[0x355:0x35c]
---
Predecessors: [0x8e]
Successors: [0x35d, 0x361]
---
0x355 JUMPDEST
0x356 CALLVALUE
0x357 DUP1
0x358 ISZERO
0x359 PUSH2 0x361
0x35c JUMPI
---
0x355: JUMPDEST 
0x356: V231 = CALLVALUE
0x358: V232 = ISZERO V231
0x359: V233 = 0x361
0x35c: JUMPI 0x361 V232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V231]
Exit stack: [V11, V231]

================================

Block 0x35d
[0x35d:0x360]
---
Predecessors: [0x355]
Successors: []
---
0x35d PUSH1 0x0
0x35f DUP1
0x360 REVERT
---
0x35d: V234 = 0x0
0x360: REVERT 0x0 0x0
---
Entry stack: [V11, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V231]

================================

Block 0x361
[0x361:0x395]
---
Predecessors: [0x355]
Successors: [0xf03]
---
0x361 JUMPDEST
0x362 POP
0x363 PUSH2 0x396
0x366 PUSH1 0x4
0x368 DUP1
0x369 CALLDATASIZE
0x36a SUB
0x36b DUP2
0x36c ADD
0x36d SWAP1
0x36e DUP1
0x36f DUP1
0x370 CALLDATALOAD
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 SWAP1
0x388 PUSH1 0x20
0x38a ADD
0x38b SWAP1
0x38c SWAP3
0x38d SWAP2
0x38e SWAP1
0x38f POP
0x390 POP
0x391 POP
0x392 PUSH2 0xf03
0x395 JUMP
---
0x361: JUMPDEST 
0x363: V235 = 0x396
0x366: V236 = 0x4
0x369: V237 = CALLDATASIZE
0x36a: V238 = SUB V237 0x4
0x36c: V239 = ADD 0x4 V238
0x370: V240 = CALLDATALOAD 0x4
0x371: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x388: V243 = 0x20
0x38a: V244 = ADD 0x20 0x4
0x392: V245 = 0xf03
0x395: JUMP 0xf03
---
Entry stack: [V11, V231]
Stack pops: 1
Stack additions: [0x396, V242]
Exit stack: [V11, 0x396, V242]

================================

Block 0x396
[0x396:0x3af]
---
Predecessors: [0x11ab]
Successors: []
---
0x396 JUMPDEST
0x397 PUSH1 0x40
0x399 MLOAD
0x39a DUP1
0x39b DUP3
0x39c ISZERO
0x39d ISZERO
0x39e ISZERO
0x39f ISZERO
0x3a0 DUP2
0x3a1 MSTORE
0x3a2 PUSH1 0x20
0x3a4 ADD
0x3a5 SWAP2
0x3a6 POP
0x3a7 POP
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab DUP1
0x3ac SWAP2
0x3ad SUB
0x3ae SWAP1
0x3af RETURN
---
0x396: JUMPDEST 
0x397: V246 = 0x40
0x399: V247 = M[0x40]
0x39c: V248 = ISZERO 0x1
0x39d: V249 = ISZERO 0x0
0x39e: V250 = ISZERO 0x1
0x39f: V251 = ISZERO 0x0
0x3a1: M[V247] = 0x1
0x3a2: V252 = 0x20
0x3a4: V253 = ADD 0x20 V247
0x3a8: V254 = 0x40
0x3aa: V255 = M[0x40]
0x3ad: V256 = SUB V253 V255
0x3af: RETURN V255 V256
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b0
[0x3b0:0x3b7]
---
Predecessors: [0x99]
Successors: [0x3b8, 0x3bc]
---
0x3b0 JUMPDEST
0x3b1 CALLVALUE
0x3b2 DUP1
0x3b3 ISZERO
0x3b4 PUSH2 0x3bc
0x3b7 JUMPI
---
0x3b0: JUMPDEST 
0x3b1: V257 = CALLVALUE
0x3b3: V258 = ISZERO V257
0x3b4: V259 = 0x3bc
0x3b7: JUMPI 0x3bc V258
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V257]
Exit stack: [V11, V257]

================================

Block 0x3b8
[0x3b8:0x3bb]
---
Predecessors: [0x3b0]
Successors: []
---
0x3b8 PUSH1 0x0
0x3ba DUP1
0x3bb REVERT
---
0x3b8: V260 = 0x0
0x3bb: REVERT 0x0 0x0
---
Entry stack: [V11, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V257]

================================

Block 0x3bc
[0x3bc:0x3c4]
---
Predecessors: [0x3b0]
Successors: [0x11ce]
---
0x3bc JUMPDEST
0x3bd POP
0x3be PUSH2 0x3c5
0x3c1 PUSH2 0x11ce
0x3c4 JUMP
---
0x3bc: JUMPDEST 
0x3be: V261 = 0x3c5
0x3c1: V262 = 0x11ce
0x3c4: JUMP 0x11ce
---
Entry stack: [V11, V257]
Stack pops: 1
Stack additions: [0x3c5]
Exit stack: [V11, 0x3c5]

================================

Block 0x3c5
[0x3c5:0x406]
---
Predecessors: [0x11ce]
Successors: []
---
0x3c5 JUMPDEST
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 DUP1
0x3ca DUP3
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP2
0x3fd POP
0x3fe POP
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 SWAP2
0x404 SUB
0x405 SWAP1
0x406 RETURN
---
0x3c5: JUMPDEST 
0x3c6: V263 = 0x40
0x3c8: V264 = M[0x40]
0x3cb: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V1124
0x3e1: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x3f8: M[V264] = V268
0x3f9: V269 = 0x20
0x3fb: V270 = ADD 0x20 V264
0x3ff: V271 = 0x40
0x401: V272 = M[0x40]
0x404: V273 = SUB V270 V272
0x406: RETURN V272 V273
---
Entry stack: [V11, 0x3c5, V1124]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3c5]

================================

Block 0x407
[0x407:0x40e]
---
Predecessors: [0xa4]
Successors: [0x40f, 0x413]
---
0x407 JUMPDEST
0x408 CALLVALUE
0x409 DUP1
0x40a ISZERO
0x40b PUSH2 0x413
0x40e JUMPI
---
0x407: JUMPDEST 
0x408: V274 = CALLVALUE
0x40a: V275 = ISZERO V274
0x40b: V276 = 0x413
0x40e: JUMPI 0x413 V275
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V274]
Exit stack: [V11, V274]

================================

Block 0x40f
[0x40f:0x412]
---
Predecessors: [0x407]
Successors: []
---
0x40f PUSH1 0x0
0x411 DUP1
0x412 REVERT
---
0x40f: V277 = 0x0
0x412: REVERT 0x0 0x0
---
Entry stack: [V11, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V274]

================================

Block 0x413
[0x413:0x41b]
---
Predecessors: [0x407]
Successors: [0x11f3]
---
0x413 JUMPDEST
0x414 POP
0x415 PUSH2 0x41c
0x418 PUSH2 0x11f3
0x41b JUMP
---
0x413: JUMPDEST 
0x415: V278 = 0x41c
0x418: V279 = 0x11f3
0x41b: JUMP 0x11f3
---
Entry stack: [V11, V274]
Stack pops: 1
Stack additions: [0x41c]
Exit stack: [V11, 0x41c]

================================

Block 0x41c
[0x41c:0x439]
---
Predecessors: [0x11f3]
Successors: []
---
0x41c JUMPDEST
0x41d PUSH1 0x40
0x41f MLOAD
0x420 DUP1
0x421 DUP3
0x422 PUSH1 0x0
0x424 NOT
0x425 AND
0x426 PUSH1 0x0
0x428 NOT
0x429 AND
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x20
0x42e ADD
0x42f SWAP2
0x430 POP
0x431 POP
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 SWAP2
0x437 SUB
0x438 SWAP1
0x439 RETURN
---
0x41c: JUMPDEST 
0x41d: V280 = 0x40
0x41f: V281 = M[0x40]
0x422: V282 = 0x0
0x424: V283 = NOT 0x0
0x425: V284 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x426: V285 = 0x0
0x428: V286 = NOT 0x0
0x429: V287 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x42b: M[V281] = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x42c: V288 = 0x20
0x42e: V289 = ADD 0x20 V281
0x432: V290 = 0x40
0x434: V291 = M[0x40]
0x437: V292 = SUB V289 V291
0x439: RETURN V291 V292
---
Entry stack: [V11, 0x41c, 0x42616e636f724e6574776f726b00000000000000000000000000000000000000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x41c]

================================

Block 0x43a
[0x43a:0x441]
---
Predecessors: [0xaf]
Successors: [0x442, 0x446]
---
0x43a JUMPDEST
0x43b CALLVALUE
0x43c DUP1
0x43d ISZERO
0x43e PUSH2 0x446
0x441 JUMPI
---
0x43a: JUMPDEST 
0x43b: V293 = CALLVALUE
0x43d: V294 = ISZERO V293
0x43e: V295 = 0x446
0x441: JUMPI 0x446 V294
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V293]
Exit stack: [V11, V293]

================================

Block 0x442
[0x442:0x445]
---
Predecessors: [0x43a]
Successors: []
---
0x442 PUSH1 0x0
0x444 DUP1
0x445 REVERT
---
0x442: V296 = 0x0
0x445: REVERT 0x0 0x0
---
Entry stack: [V11, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V293]

================================

Block 0x446
[0x446:0x464]
---
Predecessors: [0x43a]
Successors: [0x1217]
---
0x446 JUMPDEST
0x447 POP
0x448 PUSH2 0x465
0x44b PUSH1 0x4
0x44d DUP1
0x44e CALLDATASIZE
0x44f SUB
0x450 DUP2
0x451 ADD
0x452 SWAP1
0x453 DUP1
0x454 DUP1
0x455 CALLDATALOAD
0x456 SWAP1
0x457 PUSH1 0x20
0x459 ADD
0x45a SWAP1
0x45b SWAP3
0x45c SWAP2
0x45d SWAP1
0x45e POP
0x45f POP
0x460 POP
0x461 PUSH2 0x1217
0x464 JUMP
---
0x446: JUMPDEST 
0x448: V297 = 0x465
0x44b: V298 = 0x4
0x44e: V299 = CALLDATASIZE
0x44f: V300 = SUB V299 0x4
0x451: V301 = ADD 0x4 V300
0x455: V302 = CALLDATALOAD 0x4
0x457: V303 = 0x20
0x459: V304 = ADD 0x20 0x4
0x461: V305 = 0x1217
0x464: JUMP 0x1217
---
Entry stack: [V11, V293]
Stack pops: 1
Stack additions: [0x465, V302]
Exit stack: [V11, 0x465, V302]

================================

Block 0x465
[0x465:0x466]
---
Predecessors: [0x1272]
Successors: []
---
0x465 JUMPDEST
0x466 STOP
---
0x465: JUMPDEST 
0x466: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x467
[0x467:0x46e]
---
Predecessors: [0xba]
Successors: [0x46f, 0x473]
---
0x467 JUMPDEST
0x468 CALLVALUE
0x469 DUP1
0x46a ISZERO
0x46b PUSH2 0x473
0x46e JUMPI
---
0x467: JUMPDEST 
0x468: V306 = CALLVALUE
0x46a: V307 = ISZERO V306
0x46b: V308 = 0x473
0x46e: JUMPI 0x473 V307
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V306]
Exit stack: [V11, V306]

================================

Block 0x46f
[0x46f:0x472]
---
Predecessors: [0x467]
Successors: []
---
0x46f PUSH1 0x0
0x471 DUP1
0x472 REVERT
---
0x46f: V309 = 0x0
0x472: REVERT 0x0 0x0
---
Entry stack: [V11, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V306]

================================

Block 0x473
[0x473:0x491]
---
Predecessors: [0x467]
Successors: [0x127c]
---
0x473 JUMPDEST
0x474 POP
0x475 PUSH2 0x492
0x478 PUSH1 0x4
0x47a DUP1
0x47b CALLDATASIZE
0x47c SUB
0x47d DUP2
0x47e ADD
0x47f SWAP1
0x480 DUP1
0x481 DUP1
0x482 CALLDATALOAD
0x483 SWAP1
0x484 PUSH1 0x20
0x486 ADD
0x487 SWAP1
0x488 SWAP3
0x489 SWAP2
0x48a SWAP1
0x48b POP
0x48c POP
0x48d POP
0x48e PUSH2 0x127c
0x491 JUMP
---
0x473: JUMPDEST 
0x475: V310 = 0x492
0x478: V311 = 0x4
0x47b: V312 = CALLDATASIZE
0x47c: V313 = SUB V312 0x4
0x47e: V314 = ADD 0x4 V313
0x482: V315 = CALLDATALOAD 0x4
0x484: V316 = 0x20
0x486: V317 = ADD 0x20 0x4
0x48e: V318 = 0x127c
0x491: JUMP 0x127c
---
Entry stack: [V11, V306]
Stack pops: 1
Stack additions: [0x492, V315]
Exit stack: [V11, 0x492, V315]

================================

Block 0x492
[0x492:0x4d3]
---
Predecessors: [0x128b]
Successors: []
---
0x492 JUMPDEST
0x493 PUSH1 0x40
0x495 MLOAD
0x496 DUP1
0x497 DUP3
0x498 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ad AND
0x4ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c3 AND
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 PUSH1 0x20
0x4c8 ADD
0x4c9 SWAP2
0x4ca POP
0x4cb POP
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf DUP1
0x4d0 SWAP2
0x4d1 SUB
0x4d2 SWAP1
0x4d3 RETURN
---
0x492: JUMPDEST 
0x493: V319 = 0x40
0x495: V320 = M[0x40]
0x498: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V1161
0x4ae: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x4c5: M[V320] = V324
0x4c6: V325 = 0x20
0x4c8: V326 = ADD 0x20 V320
0x4cc: V327 = 0x40
0x4ce: V328 = M[0x40]
0x4d1: V329 = SUB V326 V328
0x4d3: RETURN V328 V329
---
Entry stack: [V11, 0x492, V1161]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x492]

================================

Block 0x4d4
[0x4d4:0x4db]
---
Predecessors: [0xc5]
Successors: [0x4dc, 0x4e0]
---
0x4d4 JUMPDEST
0x4d5 CALLVALUE
0x4d6 DUP1
0x4d7 ISZERO
0x4d8 PUSH2 0x4e0
0x4db JUMPI
---
0x4d4: JUMPDEST 
0x4d5: V330 = CALLVALUE
0x4d7: V331 = ISZERO V330
0x4d8: V332 = 0x4e0
0x4db: JUMPI 0x4e0 V331
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V330]
Exit stack: [V11, V330]

================================

Block 0x4dc
[0x4dc:0x4df]
---
Predecessors: [0x4d4]
Successors: []
---
0x4dc PUSH1 0x0
0x4de DUP1
0x4df REVERT
---
0x4dc: V333 = 0x0
0x4df: REVERT 0x0 0x0
---
Entry stack: [V11, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V330]

================================

Block 0x4e0
[0x4e0:0x514]
---
Predecessors: [0x4d4]
Successors: [0x12ba]
---
0x4e0 JUMPDEST
0x4e1 POP
0x4e2 PUSH2 0x515
0x4e5 PUSH1 0x4
0x4e7 DUP1
0x4e8 CALLDATASIZE
0x4e9 SUB
0x4ea DUP2
0x4eb ADD
0x4ec SWAP1
0x4ed DUP1
0x4ee DUP1
0x4ef CALLDATALOAD
0x4f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x505 AND
0x506 SWAP1
0x507 PUSH1 0x20
0x509 ADD
0x50a SWAP1
0x50b SWAP3
0x50c SWAP2
0x50d SWAP1
0x50e POP
0x50f POP
0x510 POP
0x511 PUSH2 0x12ba
0x514 JUMP
---
0x4e0: JUMPDEST 
0x4e2: V334 = 0x515
0x4e5: V335 = 0x4
0x4e8: V336 = CALLDATASIZE
0x4e9: V337 = SUB V336 0x4
0x4eb: V338 = ADD 0x4 V337
0x4ef: V339 = CALLDATALOAD 0x4
0x4f0: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x505: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x507: V342 = 0x20
0x509: V343 = ADD 0x20 0x4
0x511: V344 = 0x12ba
0x514: JUMP 0x12ba
---
Entry stack: [V11, V330]
Stack pops: 1
Stack additions: [0x515, V341]
Exit stack: [V11, 0x515, V341]

================================

Block 0x515
[0x515:0x516]
---
Predecessors: [0x1315]
Successors: []
---
0x515 JUMPDEST
0x516 STOP
---
0x515: JUMPDEST 
0x516: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x517
[0x517:0x51e]
---
Predecessors: [0xd0]
Successors: [0x51f, 0x523]
---
0x517 JUMPDEST
0x518 CALLVALUE
0x519 DUP1
0x51a ISZERO
0x51b PUSH2 0x523
0x51e JUMPI
---
0x517: JUMPDEST 
0x518: V345 = CALLVALUE
0x51a: V346 = ISZERO V345
0x51b: V347 = 0x523
0x51e: JUMPI 0x523 V346
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V345]
Exit stack: [V11, V345]

================================

Block 0x51f
[0x51f:0x522]
---
Predecessors: [0x517]
Successors: []
---
0x51f PUSH1 0x0
0x521 DUP1
0x522 REVERT
---
0x51f: V348 = 0x0
0x522: REVERT 0x0 0x0
---
Entry stack: [V11, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V345]

================================

Block 0x523
[0x523:0x557]
---
Predecessors: [0x517]
Successors: [0x1359]
---
0x523 JUMPDEST
0x524 POP
0x525 PUSH2 0x558
0x528 PUSH1 0x4
0x52a DUP1
0x52b CALLDATASIZE
0x52c SUB
0x52d DUP2
0x52e ADD
0x52f SWAP1
0x530 DUP1
0x531 DUP1
0x532 CALLDATALOAD
0x533 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x548 AND
0x549 SWAP1
0x54a PUSH1 0x20
0x54c ADD
0x54d SWAP1
0x54e SWAP3
0x54f SWAP2
0x550 SWAP1
0x551 POP
0x552 POP
0x553 POP
0x554 PUSH2 0x1359
0x557 JUMP
---
0x523: JUMPDEST 
0x525: V349 = 0x558
0x528: V350 = 0x4
0x52b: V351 = CALLDATASIZE
0x52c: V352 = SUB V351 0x4
0x52e: V353 = ADD 0x4 V352
0x532: V354 = CALLDATALOAD 0x4
0x533: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x548: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x54a: V357 = 0x20
0x54c: V358 = ADD 0x20 0x4
0x554: V359 = 0x1359
0x557: JUMP 0x1359
---
Entry stack: [V11, V345]
Stack pops: 1
Stack additions: [0x558, V356]
Exit stack: [V11, 0x558, V356]

================================

Block 0x558
[0x558:0x559]
---
Predecessors: [0x13bd]
Successors: []
---
0x558 JUMPDEST
0x559 STOP
---
0x558: JUMPDEST 
0x559: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x55a
[0x55a:0x575]
---
Predecessors: [0xf7]
Successors: [0x576, 0x57a]
---
0x55a JUMPDEST
0x55b PUSH1 0x0
0x55d DUP1
0x55e PUSH1 0x0
0x560 DUP1
0x561 PUSH1 0x14
0x563 SWAP1
0x564 SLOAD
0x565 SWAP1
0x566 PUSH2 0x100
0x569 EXP
0x56a SWAP1
0x56b DIV
0x56c PUSH1 0xff
0x56e AND
0x56f ISZERO
0x570 ISZERO
0x571 ISZERO
0x572 PUSH2 0x57a
0x575 JUMPI
---
0x55a: JUMPDEST 
0x55b: V360 = 0x0
0x55e: V361 = 0x0
0x561: V362 = 0x14
0x564: V363 = S[0x0]
0x566: V364 = 0x100
0x569: V365 = EXP 0x100 0x14
0x56b: V366 = DIV V363 0x10000000000000000000000000000000000000000
0x56c: V367 = 0xff
0x56e: V368 = AND 0xff V366
0x56f: V369 = ISZERO V368
0x570: V370 = ISZERO V369
0x571: V371 = ISZERO V370
0x572: V372 = 0x57a
0x575: JUMPI 0x57a V371
---
Entry stack: [V11, 0x11a]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0]

================================

Block 0x576
[0x576:0x579]
---
Predecessors: [0x55a]
Successors: []
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
---
0x576: V373 = 0x0
0x579: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0]

================================

Block 0x57a
[0x57a:0x661]
---
Predecessors: [0x55a]
Successors: [0x662, 0x666]
---
0x57a JUMPDEST
0x57b PUSH1 0x1
0x57d PUSH1 0x0
0x57f PUSH1 0x14
0x581 PUSH2 0x100
0x584 EXP
0x585 DUP2
0x586 SLOAD
0x587 DUP2
0x588 PUSH1 0xff
0x58a MUL
0x58b NOT
0x58c AND
0x58d SWAP1
0x58e DUP4
0x58f ISZERO
0x590 ISZERO
0x591 MUL
0x592 OR
0x593 SWAP1
0x594 SSTORE
0x595 POP
0x596 PUSH1 0x0
0x598 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ad AND
0x5ae PUSH1 0x4
0x5b0 PUSH1 0x0
0x5b2 SWAP1
0x5b3 SLOAD
0x5b4 SWAP1
0x5b5 PUSH2 0x100
0x5b8 EXP
0x5b9 SWAP1
0x5ba DIV
0x5bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d0 AND
0x5d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e6 AND
0x5e7 PUSH4 0x21f8a721
0x5ec PUSH32 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x60d PUSH1 0x40
0x60f MLOAD
0x610 DUP3
0x611 PUSH4 0xffffffff
0x616 AND
0x617 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x635 MUL
0x636 DUP2
0x637 MSTORE
0x638 PUSH1 0x4
0x63a ADD
0x63b DUP1
0x63c DUP3
0x63d PUSH1 0x0
0x63f NOT
0x640 AND
0x641 PUSH1 0x0
0x643 NOT
0x644 AND
0x645 DUP2
0x646 MSTORE
0x647 PUSH1 0x20
0x649 ADD
0x64a SWAP2
0x64b POP
0x64c POP
0x64d PUSH1 0x20
0x64f PUSH1 0x40
0x651 MLOAD
0x652 DUP1
0x653 DUP4
0x654 SUB
0x655 DUP2
0x656 PUSH1 0x0
0x658 DUP8
0x659 DUP1
0x65a EXTCODESIZE
0x65b ISZERO
0x65c DUP1
0x65d ISZERO
0x65e PUSH2 0x666
0x661 JUMPI
---
0x57a: JUMPDEST 
0x57b: V374 = 0x1
0x57d: V375 = 0x0
0x57f: V376 = 0x14
0x581: V377 = 0x100
0x584: V378 = EXP 0x100 0x14
0x586: V379 = S[0x0]
0x588: V380 = 0xff
0x58a: V381 = MUL 0xff 0x10000000000000000000000000000000000000000
0x58b: V382 = NOT 0xff0000000000000000000000000000000000000000
0x58c: V383 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V379
0x58f: V384 = ISZERO 0x1
0x590: V385 = ISZERO 0x0
0x591: V386 = MUL 0x1 0x10000000000000000000000000000000000000000
0x592: V387 = OR 0x10000000000000000000000000000000000000000 V383
0x594: S[0x0] = V387
0x596: V388 = 0x0
0x598: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ad: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5ae: V391 = 0x4
0x5b0: V392 = 0x0
0x5b3: V393 = S[0x4]
0x5b5: V394 = 0x100
0x5b8: V395 = EXP 0x100 0x0
0x5ba: V396 = DIV V393 0x1
0x5bb: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d0: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x5d1: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x5e7: V401 = 0x21f8a721
0x5ec: V402 = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x60d: V403 = 0x40
0x60f: V404 = M[0x40]
0x611: V405 = 0xffffffff
0x616: V406 = AND 0xffffffff 0x21f8a721
0x617: V407 = 0x100000000000000000000000000000000000000000000000000000000
0x635: V408 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x21f8a721
0x637: M[V404] = 0x21f8a72100000000000000000000000000000000000000000000000000000000
0x638: V409 = 0x4
0x63a: V410 = ADD 0x4 V404
0x63d: V411 = 0x0
0x63f: V412 = NOT 0x0
0x640: V413 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x641: V414 = 0x0
0x643: V415 = NOT 0x0
0x644: V416 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x646: M[V410] = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x647: V417 = 0x20
0x649: V418 = ADD 0x20 V410
0x64d: V419 = 0x20
0x64f: V420 = 0x40
0x651: V421 = M[0x40]
0x654: V422 = SUB V418 V421
0x656: V423 = 0x0
0x65a: V424 = EXTCODESIZE V400
0x65b: V425 = ISZERO V424
0x65d: V426 = ISZERO V425
0x65e: V427 = 0x666
0x661: JUMPI 0x666 V426
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x0, V400, 0x21f8a721, V418, 0x20, V421, V422, V421, 0x0, V400, V425]
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, 0x20, V421, V422, V421, 0x0, V400, V425]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x57a]
Successors: []
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
---
0x662: V428 = 0x0
0x665: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, 0x20, V421, V422, V421, 0x0, V400, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, 0x20, V421, V422, V421, 0x0, V400, V425]

================================

Block 0x666
[0x666:0x670]
---
Predecessors: [0x57a]
Successors: [0x671, 0x67a]
---
0x666 JUMPDEST
0x667 POP
0x668 GAS
0x669 CALL
0x66a ISZERO
0x66b DUP1
0x66c ISZERO
0x66d PUSH2 0x67a
0x670 JUMPI
---
0x666: JUMPDEST 
0x668: V429 = GAS
0x669: V430 = CALL V429 V400 0x0 V421 V422 V421 0x20
0x66a: V431 = ISZERO V430
0x66c: V432 = ISZERO V431
0x66d: V433 = 0x67a
0x670: JUMPI 0x67a V432
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, 0x20, V421, V422, V421, 0x0, V400, V425]
Stack pops: 7
Stack additions: [V431]
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, V431]

================================

Block 0x671
[0x671:0x679]
---
Predecessors: [0x666]
Successors: []
---
0x671 RETURNDATASIZE
0x672 PUSH1 0x0
0x674 DUP1
0x675 RETURNDATACOPY
0x676 RETURNDATASIZE
0x677 PUSH1 0x0
0x679 REVERT
---
0x671: V434 = RETURNDATASIZE
0x672: V435 = 0x0
0x675: RETURNDATACOPY 0x0 0x0 V434
0x676: V436 = RETURNDATASIZE
0x677: V437 = 0x0
0x679: REVERT 0x0 V436
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, V431]

================================

Block 0x67a
[0x67a:0x68b]
---
Predecessors: [0x666]
Successors: [0x68c, 0x690]
---
0x67a JUMPDEST
0x67b POP
0x67c POP
0x67d POP
0x67e POP
0x67f PUSH1 0x40
0x681 MLOAD
0x682 RETURNDATASIZE
0x683 PUSH1 0x20
0x685 DUP2
0x686 LT
0x687 ISZERO
0x688 PUSH2 0x690
0x68b JUMPI
---
0x67a: JUMPDEST 
0x67f: V438 = 0x40
0x681: V439 = M[0x40]
0x682: V440 = RETURNDATASIZE
0x683: V441 = 0x20
0x686: V442 = LT V440 0x20
0x687: V443 = ISZERO V442
0x688: V444 = 0x690
0x68b: JUMPI 0x690 V443
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V400, 0x21f8a721, V418, V431]
Stack pops: 4
Stack additions: [V439, V440]
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V439, V440]

================================

Block 0x68c
[0x68c:0x68f]
---
Predecessors: [0x67a]
Successors: []
---
0x68c PUSH1 0x0
0x68e DUP1
0x68f REVERT
---
0x68c: V445 = 0x0
0x68f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V439, V440]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V439, V440]

================================

Block 0x690
[0x690:0x6bf]
---
Predecessors: [0x67a]
Successors: [0x6c0, 0x6c1]
---
0x690 JUMPDEST
0x691 DUP2
0x692 ADD
0x693 SWAP1
0x694 DUP1
0x695 DUP1
0x696 MLOAD
0x697 SWAP1
0x698 PUSH1 0x20
0x69a ADD
0x69b SWAP1
0x69c SWAP3
0x69d SWAP2
0x69e SWAP1
0x69f POP
0x6a0 POP
0x6a1 POP
0x6a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b7 AND
0x6b8 EQ
0x6b9 ISZERO
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH2 0x6c1
0x6bf JUMPI
---
0x690: JUMPDEST 
0x692: V446 = ADD V439 V440
0x696: V447 = M[V439]
0x698: V448 = 0x20
0x69a: V449 = ADD 0x20 V439
0x6a2: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x6b8: V452 = EQ V451 0x0
0x6b9: V453 = ISZERO V452
0x6ba: V454 = ISZERO V453
0x6bb: V455 = ISZERO V454
0x6bc: V456 = 0x6c1
0x6bf: JUMPI 0x6c1 V455
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, 0x0, V439, V440]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0]

================================

Block 0x6c0
[0x6c0:0x6c0]
---
Predecessors: [0x690]
Successors: []
---
0x6c0 INVALID
---
0x6c0: INVALID 
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0]

================================

Block 0x6c1
[0x6c1:0x775]
---
Predecessors: [0x690]
Successors: [0x776, 0x77a]
---
0x6c1 JUMPDEST
0x6c2 PUSH1 0x4
0x6c4 PUSH1 0x0
0x6c6 SWAP1
0x6c7 SLOAD
0x6c8 SWAP1
0x6c9 PUSH2 0x100
0x6cc EXP
0x6cd SWAP1
0x6ce DIV
0x6cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e4 AND
0x6e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fa AND
0x6fb PUSH4 0x21f8a721
0x700 PUSH32 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x721 PUSH1 0x40
0x723 MLOAD
0x724 DUP3
0x725 PUSH4 0xffffffff
0x72a AND
0x72b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x749 MUL
0x74a DUP2
0x74b MSTORE
0x74c PUSH1 0x4
0x74e ADD
0x74f DUP1
0x750 DUP3
0x751 PUSH1 0x0
0x753 NOT
0x754 AND
0x755 PUSH1 0x0
0x757 NOT
0x758 AND
0x759 DUP2
0x75a MSTORE
0x75b PUSH1 0x20
0x75d ADD
0x75e SWAP2
0x75f POP
0x760 POP
0x761 PUSH1 0x20
0x763 PUSH1 0x40
0x765 MLOAD
0x766 DUP1
0x767 DUP4
0x768 SUB
0x769 DUP2
0x76a PUSH1 0x0
0x76c DUP8
0x76d DUP1
0x76e EXTCODESIZE
0x76f ISZERO
0x770 DUP1
0x771 ISZERO
0x772 PUSH2 0x77a
0x775 JUMPI
---
0x6c1: JUMPDEST 
0x6c2: V457 = 0x4
0x6c4: V458 = 0x0
0x6c7: V459 = S[0x4]
0x6c9: V460 = 0x100
0x6cc: V461 = EXP 0x100 0x0
0x6ce: V462 = DIV V459 0x1
0x6cf: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e4: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x6e5: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fa: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x6fb: V467 = 0x21f8a721
0x700: V468 = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x721: V469 = 0x40
0x723: V470 = M[0x40]
0x725: V471 = 0xffffffff
0x72a: V472 = AND 0xffffffff 0x21f8a721
0x72b: V473 = 0x100000000000000000000000000000000000000000000000000000000
0x749: V474 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x21f8a721
0x74b: M[V470] = 0x21f8a72100000000000000000000000000000000000000000000000000000000
0x74c: V475 = 0x4
0x74e: V476 = ADD 0x4 V470
0x751: V477 = 0x0
0x753: V478 = NOT 0x0
0x754: V479 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x755: V480 = 0x0
0x757: V481 = NOT 0x0
0x758: V482 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x75a: M[V476] = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x75b: V483 = 0x20
0x75d: V484 = ADD 0x20 V476
0x761: V485 = 0x20
0x763: V486 = 0x40
0x765: V487 = M[0x40]
0x768: V488 = SUB V484 V487
0x76a: V489 = 0x0
0x76e: V490 = EXTCODESIZE V466
0x76f: V491 = ISZERO V490
0x771: V492 = ISZERO V491
0x772: V493 = 0x77a
0x775: JUMPI 0x77a V492
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V466, 0x21f8a721, V484, 0x20, V487, V488, V487, 0x0, V466, V491]
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, 0x20, V487, V488, V487, 0x0, V466, V491]

================================

Block 0x776
[0x776:0x779]
---
Predecessors: [0x6c1]
Successors: []
---
0x776 PUSH1 0x0
0x778 DUP1
0x779 REVERT
---
0x776: V494 = 0x0
0x779: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, 0x20, V487, V488, V487, 0x0, V466, V491]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, 0x20, V487, V488, V487, 0x0, V466, V491]

================================

Block 0x77a
[0x77a:0x784]
---
Predecessors: [0x6c1]
Successors: [0x785, 0x78e]
---
0x77a JUMPDEST
0x77b POP
0x77c GAS
0x77d CALL
0x77e ISZERO
0x77f DUP1
0x780 ISZERO
0x781 PUSH2 0x78e
0x784 JUMPI
---
0x77a: JUMPDEST 
0x77c: V495 = GAS
0x77d: V496 = CALL V495 V466 0x0 V487 V488 V487 0x20
0x77e: V497 = ISZERO V496
0x780: V498 = ISZERO V497
0x781: V499 = 0x78e
0x784: JUMPI 0x78e V498
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, 0x20, V487, V488, V487, 0x0, V466, V491]
Stack pops: 7
Stack additions: [V497]
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, V497]

================================

Block 0x785
[0x785:0x78d]
---
Predecessors: [0x77a]
Successors: []
---
0x785 RETURNDATASIZE
0x786 PUSH1 0x0
0x788 DUP1
0x789 RETURNDATACOPY
0x78a RETURNDATASIZE
0x78b PUSH1 0x0
0x78d REVERT
---
0x785: V500 = RETURNDATASIZE
0x786: V501 = 0x0
0x789: RETURNDATACOPY 0x0 0x0 V500
0x78a: V502 = RETURNDATASIZE
0x78b: V503 = 0x0
0x78d: REVERT 0x0 V502
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, V497]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, V497]

================================

Block 0x78e
[0x78e:0x79f]
---
Predecessors: [0x77a]
Successors: [0x7a0, 0x7a4]
---
0x78e JUMPDEST
0x78f POP
0x790 POP
0x791 POP
0x792 POP
0x793 PUSH1 0x40
0x795 MLOAD
0x796 RETURNDATASIZE
0x797 PUSH1 0x20
0x799 DUP2
0x79a LT
0x79b ISZERO
0x79c PUSH2 0x7a4
0x79f JUMPI
---
0x78e: JUMPDEST 
0x793: V504 = 0x40
0x795: V505 = M[0x40]
0x796: V506 = RETURNDATASIZE
0x797: V507 = 0x20
0x79a: V508 = LT V506 0x20
0x79b: V509 = ISZERO V508
0x79c: V510 = 0x7a4
0x79f: JUMPI 0x7a4 V509
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, V466, 0x21f8a721, V484, V497]
Stack pops: 4
Stack additions: [V505, V506]
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, V505, V506]

================================

Block 0x7a0
[0x7a0:0x7a3]
---
Predecessors: [0x78e]
Successors: []
---
0x7a0 PUSH1 0x0
0x7a2 DUP1
0x7a3 REVERT
---
0x7a0: V511 = 0x0
0x7a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, V505, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, 0x0, 0x0, 0x0, V505, V506]

================================

Block 0x7a4
[0x7a4:0x7cb]
---
Predecessors: [0x78e]
Successors: [0x13c0]
---
0x7a4 JUMPDEST
0x7a5 DUP2
0x7a6 ADD
0x7a7 SWAP1
0x7a8 DUP1
0x7a9 DUP1
0x7aa MLOAD
0x7ab SWAP1
0x7ac PUSH1 0x20
0x7ae ADD
0x7af SWAP1
0x7b0 SWAP3
0x7b1 SWAP2
0x7b2 SWAP1
0x7b3 POP
0x7b4 POP
0x7b5 POP
0x7b6 SWAP3
0x7b7 POP
0x7b8 PUSH2 0x7cc
0x7bb CALLVALUE
0x7bc PUSH1 0x3
0x7be SLOAD
0x7bf PUSH2 0x13c0
0x7c2 SWAP1
0x7c3 SWAP2
0x7c4 SWAP1
0x7c5 PUSH4 0xffffffff
0x7ca AND
0x7cb JUMP
---
0x7a4: JUMPDEST 
0x7a6: V512 = ADD V505 V506
0x7aa: V513 = M[V505]
0x7ac: V514 = 0x20
0x7ae: V515 = ADD 0x20 V505
0x7b8: V516 = 0x7cc
0x7bb: V517 = CALLVALUE
0x7bc: V518 = 0x3
0x7be: V519 = S[0x3]
0x7bf: V520 = 0x13c0
0x7c5: V521 = 0xffffffff
0x7ca: V522 = AND 0xffffffff 0x13c0
0x7cb: JUMP 0x13c0
---
Entry stack: [V11, 0x11a, 0x0, 0x0, 0x0, V505, V506]
Stack pops: 5
Stack additions: [V513, S3, S2, 0x7cc, V519, V517]
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517]

================================

Block 0x7cc
[0x7cc:0x89b]
---
Predecessors: [0x13f2]
Successors: [0x89c, 0x8f6]
---
0x7cc JUMPDEST
0x7cd SWAP2
0x7ce POP
0x7cf DUP3
0x7d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e5 AND
0x7e6 PUSH4 0xc98fefed
0x7eb CALLVALUE
0x7ec PUSH1 0x1
0x7ee CALLVALUE
0x7ef DUP7
0x7f0 PUSH1 0x2
0x7f2 PUSH1 0x0
0x7f4 SWAP1
0x7f5 SLOAD
0x7f6 SWAP1
0x7f7 PUSH2 0x100
0x7fa EXP
0x7fb SWAP1
0x7fc DIV
0x7fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x812 AND
0x813 PUSH1 0x40
0x815 MLOAD
0x816 DUP7
0x817 PUSH4 0xffffffff
0x81c AND
0x81d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x83b MUL
0x83c DUP2
0x83d MSTORE
0x83e PUSH1 0x4
0x840 ADD
0x841 DUP1
0x842 DUP1
0x843 PUSH1 0x20
0x845 ADD
0x846 DUP6
0x847 DUP2
0x848 MSTORE
0x849 PUSH1 0x20
0x84b ADD
0x84c DUP5
0x84d DUP2
0x84e MSTORE
0x84f PUSH1 0x20
0x851 ADD
0x852 DUP4
0x853 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x868 AND
0x869 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87e AND
0x87f DUP2
0x880 MSTORE
0x881 PUSH1 0x20
0x883 ADD
0x884 DUP3
0x885 DUP2
0x886 SUB
0x887 DUP3
0x888 MSTORE
0x889 DUP7
0x88a DUP2
0x88b DUP2
0x88c SLOAD
0x88d DUP2
0x88e MSTORE
0x88f PUSH1 0x20
0x891 ADD
0x892 SWAP2
0x893 POP
0x894 DUP1
0x895 SLOAD
0x896 DUP1
0x897 ISZERO
0x898 PUSH2 0x8f6
0x89b JUMPI
---
0x7cc: JUMPDEST 
0x7d0: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x7e6: V525 = 0xc98fefed
0x7eb: V526 = CALLVALUE
0x7ec: V527 = 0x1
0x7ee: V528 = CALLVALUE
0x7f0: V529 = 0x2
0x7f2: V530 = 0x0
0x7f5: V531 = S[0x2]
0x7f7: V532 = 0x100
0x7fa: V533 = EXP 0x100 0x0
0x7fc: V534 = DIV V531 0x1
0x7fd: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x812: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x813: V537 = 0x40
0x815: V538 = M[0x40]
0x817: V539 = 0xffffffff
0x81c: V540 = AND 0xffffffff 0xc98fefed
0x81d: V541 = 0x100000000000000000000000000000000000000000000000000000000
0x83b: V542 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc98fefed
0x83d: M[V538] = 0xc98fefed00000000000000000000000000000000000000000000000000000000
0x83e: V543 = 0x4
0x840: V544 = ADD 0x4 V538
0x843: V545 = 0x20
0x845: V546 = ADD 0x20 V544
0x848: M[V546] = V528
0x849: V547 = 0x20
0x84b: V548 = ADD 0x20 V546
0x84e: M[V548] = S0
0x84f: V549 = 0x20
0x851: V550 = ADD 0x20 V548
0x853: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x868: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x869: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x87e: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x880: M[V550] = V554
0x881: V555 = 0x20
0x883: V556 = ADD 0x20 V550
0x886: V557 = SUB V556 V544
0x888: M[V544] = V557
0x88c: V558 = S[0x1]
0x88e: M[V556] = V558
0x88f: V559 = 0x20
0x891: V560 = ADD 0x20 V556
0x895: V561 = S[0x1]
0x897: V562 = ISZERO V561
0x898: V563 = 0x8f6
0x89b: JUMPI 0x8f6 V562
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, V524, 0xc98fefed, V526, 0x1, V528, S0, V536, V544, V544, V560, 0x1, V561]
Exit stack: [V11, 0x11a, V513, S0, 0x0, V524, 0xc98fefed, V526, 0x1, V528, S0, V536, V544, V544, V560, 0x1, V561]

================================

Block 0x89c
[0x89c:0x8ab]
---
Predecessors: [0x7cc]
Successors: [0x8ac]
---
0x89c PUSH1 0x20
0x89e MUL
0x89f DUP3
0x8a0 ADD
0x8a1 SWAP2
0x8a2 SWAP1
0x8a3 PUSH1 0x0
0x8a5 MSTORE
0x8a6 PUSH1 0x20
0x8a8 PUSH1 0x0
0x8aa SHA3
0x8ab SWAP1
---
0x89c: V564 = 0x20
0x89e: V565 = MUL 0x20 V561
0x8a0: V566 = ADD V560 V565
0x8a3: V567 = 0x0
0x8a5: M[0x0] = 0x1
0x8a6: V568 = 0x20
0x8a8: V569 = 0x0
0x8aa: V570 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x11a, V513, S13, 0x0, V524, 0xc98fefed, V526, 0x1, V528, S6, V536, V544, V544, V560, 0x1, V561]
Stack pops: 3
Stack additions: [V566, V570, S2]
Exit stack: [V11, 0x11a, V513, S13, 0x0, V524, 0xc98fefed, V526, 0x1, V528, S6, V536, V544, V544, V566, V570, V560]

================================

Block 0x8ac
[0x8ac:0x8f5]
---
Predecessors: [0x89c, 0x8ac]
Successors: [0x8ac, 0x8f6]
---
0x8ac JUMPDEST
0x8ad DUP2
0x8ae PUSH1 0x0
0x8b0 SWAP1
0x8b1 SLOAD
0x8b2 SWAP1
0x8b3 PUSH2 0x100
0x8b6 EXP
0x8b7 SWAP1
0x8b8 DIV
0x8b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ce AND
0x8cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e4 AND
0x8e5 DUP2
0x8e6 MSTORE
0x8e7 PUSH1 0x20
0x8e9 ADD
0x8ea SWAP1
0x8eb PUSH1 0x1
0x8ed ADD
0x8ee SWAP1
0x8ef DUP1
0x8f0 DUP4
0x8f1 GT
0x8f2 PUSH2 0x8ac
0x8f5 JUMPI
---
0x8ac: JUMPDEST 
0x8ae: V571 = 0x0
0x8b1: V572 = S[S1]
0x8b3: V573 = 0x100
0x8b6: V574 = EXP 0x100 0x0
0x8b8: V575 = DIV V572 0x1
0x8b9: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ce: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x8cf: V578 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x8e6: M[S0] = V579
0x8e7: V580 = 0x20
0x8e9: V581 = ADD 0x20 S0
0x8eb: V582 = 0x1
0x8ed: V583 = ADD 0x1 S1
0x8f1: V584 = GT V566 V581
0x8f2: V585 = 0x8ac
0x8f5: JUMPI 0x8ac V584
---
Entry stack: [V11, 0x11a, V513, S13, 0x0, V524, 0xc98fefed, V526, 0x1, V528, S6, V536, V544, V544, V566, S1, S0]
Stack pops: 3
Stack additions: [S2, V583, V581]
Exit stack: [V11, 0x11a, V513, S13, 0x0, V524, 0xc98fefed, V526, 0x1, V528, S6, V536, V544, V544, V566, V583, V581]

================================

Block 0x8f6
[0x8f6:0x913]
---
Predecessors: [0x7cc, 0x8ac]
Successors: [0x914, 0x918]
---
0x8f6 JUMPDEST
0x8f7 POP
0x8f8 POP
0x8f9 SWAP6
0x8fa POP
0x8fb POP
0x8fc POP
0x8fd POP
0x8fe POP
0x8ff POP
0x900 PUSH1 0x20
0x902 PUSH1 0x40
0x904 MLOAD
0x905 DUP1
0x906 DUP4
0x907 SUB
0x908 DUP2
0x909 DUP6
0x90a DUP9
0x90b DUP1
0x90c EXTCODESIZE
0x90d ISZERO
0x90e DUP1
0x90f ISZERO
0x910 PUSH2 0x918
0x913 JUMPI
---
0x8f6: JUMPDEST 
0x900: V586 = 0x20
0x902: V587 = 0x40
0x904: V588 = M[0x40]
0x907: V589 = SUB S2 V588
0x90c: V590 = EXTCODESIZE V524
0x90d: V591 = ISZERO V590
0x90f: V592 = ISZERO V591
0x910: V593 = 0x918
0x913: JUMPI 0x918 V592
---
Entry stack: [V11, 0x11a, V513, S13, 0x0, V524, 0xc98fefed, V526, 0x1, V528, S6, V536, V544, V544, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S2, 0x20, V588, V589, V588, S9, S11, V591]
Exit stack: [V11, 0x11a, V513, S13, 0x0, V524, 0xc98fefed, V526, S2, 0x20, V588, V589, V588, V526, V524, V591]

================================

Block 0x914
[0x914:0x917]
---
Predecessors: [0x8f6]
Successors: []
---
0x914 PUSH1 0x0
0x916 DUP1
0x917 REVERT
---
0x914: V594 = 0x0
0x917: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11a, V513, S12, 0x0, V524, 0xc98fefed, V526, S7, 0x20, V588, V589, V588, V526, V524, V591]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, V513, S12, 0x0, V524, 0xc98fefed, V526, S7, 0x20, V588, V589, V588, V526, V524, V591]

================================

Block 0x918
[0x918:0x922]
---
Predecessors: [0x8f6]
Successors: [0x923, 0x92c]
---
0x918 JUMPDEST
0x919 POP
0x91a GAS
0x91b CALL
0x91c ISZERO
0x91d DUP1
0x91e ISZERO
0x91f PUSH2 0x92c
0x922 JUMPI
---
0x918: JUMPDEST 
0x91a: V595 = GAS
0x91b: V596 = CALL V595 V524 V526 V588 V589 V588 0x20
0x91c: V597 = ISZERO V596
0x91e: V598 = ISZERO V597
0x91f: V599 = 0x92c
0x922: JUMPI 0x92c V598
---
Entry stack: [V11, 0x11a, V513, S12, 0x0, V524, 0xc98fefed, V526, S7, 0x20, V588, V589, V588, V526, V524, V591]
Stack pops: 7
Stack additions: [V597]
Exit stack: [V11, 0x11a, V513, S12, 0x0, V524, 0xc98fefed, V526, S7, V597]

================================

Block 0x923
[0x923:0x92b]
---
Predecessors: [0x918]
Successors: []
---
0x923 RETURNDATASIZE
0x924 PUSH1 0x0
0x926 DUP1
0x927 RETURNDATACOPY
0x928 RETURNDATASIZE
0x929 PUSH1 0x0
0x92b REVERT
---
0x923: V600 = RETURNDATASIZE
0x924: V601 = 0x0
0x927: RETURNDATACOPY 0x0 0x0 V600
0x928: V602 = RETURNDATASIZE
0x929: V603 = 0x0
0x92b: REVERT 0x0 V602
---
Entry stack: [V11, 0x11a, V513, S6, 0x0, V524, 0xc98fefed, V526, S1, V597]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, V513, S6, 0x0, V524, 0xc98fefed, V526, S1, V597]

================================

Block 0x92c
[0x92c:0x93e]
---
Predecessors: [0x918]
Successors: [0x93f, 0x943]
---
0x92c JUMPDEST
0x92d POP
0x92e POP
0x92f POP
0x930 POP
0x931 POP
0x932 PUSH1 0x40
0x934 MLOAD
0x935 RETURNDATASIZE
0x936 PUSH1 0x20
0x938 DUP2
0x939 LT
0x93a ISZERO
0x93b PUSH2 0x943
0x93e JUMPI
---
0x92c: JUMPDEST 
0x932: V604 = 0x40
0x934: V605 = M[0x40]
0x935: V606 = RETURNDATASIZE
0x936: V607 = 0x20
0x939: V608 = LT V606 0x20
0x93a: V609 = ISZERO V608
0x93b: V610 = 0x943
0x93e: JUMPI 0x943 V609
---
Entry stack: [V11, 0x11a, V513, S6, 0x0, V524, 0xc98fefed, V526, S1, V597]
Stack pops: 5
Stack additions: [V605, V606]
Exit stack: [V11, 0x11a, V513, S6, 0x0, V605, V606]

================================

Block 0x93f
[0x93f:0x942]
---
Predecessors: [0x92c]
Successors: []
---
0x93f PUSH1 0x0
0x941 DUP1
0x942 REVERT
---
0x93f: V611 = 0x0
0x942: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11a, V513, S3, 0x0, V605, V606]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, V513, S3, 0x0, V605, V606]

================================

Block 0x943
[0x943:0x960]
---
Predecessors: [0x92c]
Successors: [0x961, 0x962]
---
0x943 JUMPDEST
0x944 DUP2
0x945 ADD
0x946 SWAP1
0x947 DUP1
0x948 DUP1
0x949 MLOAD
0x94a SWAP1
0x94b PUSH1 0x20
0x94d ADD
0x94e SWAP1
0x94f SWAP3
0x950 SWAP2
0x951 SWAP1
0x952 POP
0x953 POP
0x954 POP
0x955 SWAP1
0x956 POP
0x957 PUSH1 0x0
0x959 DUP2
0x95a GT
0x95b ISZERO
0x95c ISZERO
0x95d PUSH2 0x962
0x960 JUMPI
---
0x943: JUMPDEST 
0x945: V612 = ADD V605 V606
0x949: V613 = M[V605]
0x94b: V614 = 0x20
0x94d: V615 = ADD 0x20 V605
0x957: V616 = 0x0
0x95a: V617 = GT V613 0x0
0x95b: V618 = ISZERO V617
0x95c: V619 = ISZERO V618
0x95d: V620 = 0x962
0x960: JUMPI 0x962 V619
---
Entry stack: [V11, 0x11a, V513, S3, 0x0, V605, V606]
Stack pops: 3
Stack additions: [V613]
Exit stack: [V11, 0x11a, V513, S3, V613]

================================

Block 0x961
[0x961:0x961]
---
Predecessors: [0x943]
Successors: []
---
0x961 INVALID
---
0x961: INVALID 
---
Entry stack: [V11, 0x11a, V513, S1, V613]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, V513, S1, V613]

================================

Block 0x962
[0x962:0xa49]
---
Predecessors: [0x943]
Successors: [0x11a]
---
0x962 JUMPDEST
0x963 PUSH32 0x8f6febffd2ae5e047f58a3d8b6be5bd1c598e690bb410d67b120b89d8df09be4
0x984 CALLER
0x985 CALLVALUE
0x986 PUSH1 0x2
0x988 PUSH1 0x0
0x98a SWAP1
0x98b SLOAD
0x98c SWAP1
0x98d PUSH2 0x100
0x990 EXP
0x991 SWAP1
0x992 DIV
0x993 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a8 AND
0x9a9 DUP5
0x9aa PUSH1 0x40
0x9ac MLOAD
0x9ad DUP1
0x9ae DUP6
0x9af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c4 AND
0x9c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9da AND
0x9db DUP2
0x9dc MSTORE
0x9dd PUSH1 0x20
0x9df ADD
0x9e0 DUP5
0x9e1 DUP2
0x9e2 MSTORE
0x9e3 PUSH1 0x20
0x9e5 ADD
0x9e6 DUP4
0x9e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fc AND
0x9fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa12 AND
0xa13 DUP2
0xa14 MSTORE
0xa15 PUSH1 0x20
0xa17 ADD
0xa18 DUP3
0xa19 DUP2
0xa1a MSTORE
0xa1b PUSH1 0x20
0xa1d ADD
0xa1e SWAP5
0xa1f POP
0xa20 POP
0xa21 POP
0xa22 POP
0xa23 POP
0xa24 PUSH1 0x40
0xa26 MLOAD
0xa27 DUP1
0xa28 SWAP2
0xa29 SUB
0xa2a SWAP1
0xa2b LOG1
0xa2c PUSH1 0x0
0xa2e DUP1
0xa2f PUSH1 0x14
0xa31 PUSH2 0x100
0xa34 EXP
0xa35 DUP2
0xa36 SLOAD
0xa37 DUP2
0xa38 PUSH1 0xff
0xa3a MUL
0xa3b NOT
0xa3c AND
0xa3d SWAP1
0xa3e DUP4
0xa3f ISZERO
0xa40 ISZERO
0xa41 MUL
0xa42 OR
0xa43 SWAP1
0xa44 SSTORE
0xa45 POP
0xa46 POP
0xa47 POP
0xa48 POP
0xa49 JUMP
---
0x962: JUMPDEST 
0x963: V621 = 0x8f6febffd2ae5e047f58a3d8b6be5bd1c598e690bb410d67b120b89d8df09be4
0x984: V622 = CALLER
0x985: V623 = CALLVALUE
0x986: V624 = 0x2
0x988: V625 = 0x0
0x98b: V626 = S[0x2]
0x98d: V627 = 0x100
0x990: V628 = EXP 0x100 0x0
0x992: V629 = DIV V626 0x1
0x993: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a8: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0x9aa: V632 = 0x40
0x9ac: V633 = M[0x40]
0x9af: V634 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c4: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x9c5: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x9da: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x9dc: M[V633] = V637
0x9dd: V638 = 0x20
0x9df: V639 = ADD 0x20 V633
0x9e2: M[V639] = V623
0x9e3: V640 = 0x20
0x9e5: V641 = ADD 0x20 V639
0x9e7: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fc: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x9fd: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xa12: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0xa14: M[V641] = V645
0xa15: V646 = 0x20
0xa17: V647 = ADD 0x20 V641
0xa1a: M[V647] = V613
0xa1b: V648 = 0x20
0xa1d: V649 = ADD 0x20 V647
0xa24: V650 = 0x40
0xa26: V651 = M[0x40]
0xa29: V652 = SUB V649 V651
0xa2b: LOG V651 V652 0x8f6febffd2ae5e047f58a3d8b6be5bd1c598e690bb410d67b120b89d8df09be4
0xa2c: V653 = 0x0
0xa2f: V654 = 0x14
0xa31: V655 = 0x100
0xa34: V656 = EXP 0x100 0x14
0xa36: V657 = S[0x0]
0xa38: V658 = 0xff
0xa3a: V659 = MUL 0xff 0x10000000000000000000000000000000000000000
0xa3b: V660 = NOT 0xff0000000000000000000000000000000000000000
0xa3c: V661 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V657
0xa3f: V662 = ISZERO 0x0
0xa40: V663 = ISZERO 0x1
0xa41: V664 = MUL 0x0 0x10000000000000000000000000000000000000000
0xa42: V665 = OR 0x0 V661
0xa44: S[0x0] = V665
0xa49: JUMP 0x11a
---
Entry stack: [V11, 0x11a, V513, S1, V613]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0xa4a
[0xa4a:0xa6f]
---
Predecessors: [0x142]
Successors: [0x14b]
---
0xa4a JUMPDEST
0xa4b PUSH1 0x4
0xa4d PUSH1 0x0
0xa4f SWAP1
0xa50 SLOAD
0xa51 SWAP1
0xa52 PUSH2 0x100
0xa55 EXP
0xa56 SWAP1
0xa57 DIV
0xa58 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6d AND
0xa6e DUP2
0xa6f JUMP
---
0xa4a: JUMPDEST 
0xa4b: V666 = 0x4
0xa4d: V667 = 0x0
0xa50: V668 = S[0x4]
0xa52: V669 = 0x100
0xa55: V670 = EXP 0x100 0x0
0xa57: V671 = DIV V668 0x1
0xa58: V672 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6d: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0xa6f: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [S0, V673]
Exit stack: [V11, 0x14b, V673]

================================

Block 0xa70
[0xa70:0xac6]
---
Predecessors: [0x199]
Successors: [0xac7, 0xacb]
---
0xa70 JUMPDEST
0xa71 PUSH1 0x0
0xa73 DUP1
0xa74 SWAP1
0xa75 SLOAD
0xa76 SWAP1
0xa77 PUSH2 0x100
0xa7a EXP
0xa7b SWAP1
0xa7c DIV
0xa7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa92 AND
0xa93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa8 AND
0xaa9 CALLER
0xaaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabf AND
0xac0 EQ
0xac1 ISZERO
0xac2 ISZERO
0xac3 PUSH2 0xacb
0xac6 JUMPI
---
0xa70: JUMPDEST 
0xa71: V674 = 0x0
0xa75: V675 = S[0x0]
0xa77: V676 = 0x100
0xa7a: V677 = EXP 0x100 0x0
0xa7c: V678 = DIV V675 0x1
0xa7d: V679 = 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0xa93: V681 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa8: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0xaa9: V683 = CALLER
0xaaa: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xabf: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0xac0: V686 = EQ V685 V682
0xac1: V687 = ISZERO V686
0xac2: V688 = ISZERO V687
0xac3: V689 = 0xacb
0xac6: JUMPI 0xacb V688
---
Entry stack: [V11, 0x1ce, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ce, V127]

================================

Block 0xac7
[0xac7:0xaca]
---
Predecessors: [0xa70]
Successors: []
---
0xac7 PUSH1 0x0
0xac9 DUP1
0xaca REVERT
---
0xac7: V690 = 0x0
0xaca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ce, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ce, V127]

================================

Block 0xacb
[0xacb:0xb0e]
---
Predecessors: [0xa70]
Successors: [0x1ce]
---
0xacb JUMPDEST
0xacc DUP1
0xacd PUSH1 0x2
0xacf PUSH1 0x0
0xad1 PUSH2 0x100
0xad4 EXP
0xad5 DUP2
0xad6 SLOAD
0xad7 DUP2
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed MUL
0xaee NOT
0xaef AND
0xaf0 SWAP1
0xaf1 DUP4
0xaf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb07 AND
0xb08 MUL
0xb09 OR
0xb0a SWAP1
0xb0b SSTORE
0xb0c POP
0xb0d POP
0xb0e JUMP
---
0xacb: JUMPDEST 
0xacd: V691 = 0x2
0xacf: V692 = 0x0
0xad1: V693 = 0x100
0xad4: V694 = EXP 0x100 0x0
0xad6: V695 = S[0x2]
0xad8: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V697 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xaee: V698 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaef: V699 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V695
0xaf2: V700 = 0xffffffffffffffffffffffffffffffffffffffff
0xb07: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0xb08: V702 = MUL V701 0x1
0xb09: V703 = OR V702 V699
0xb0b: S[0x2] = V703
0xb0e: JUMP 0x1ce
---
Entry stack: [V11, 0x1ce, V127]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0f
[0xb0f:0xb34]
---
Predecessors: [0x1dc]
Successors: [0x1e5]
---
0xb0f JUMPDEST
0xb10 PUSH1 0x2
0xb12 PUSH1 0x0
0xb14 SWAP1
0xb15 SLOAD
0xb16 SWAP1
0xb17 PUSH2 0x100
0xb1a EXP
0xb1b SWAP1
0xb1c DIV
0xb1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb32 AND
0xb33 DUP2
0xb34 JUMP
---
0xb0f: JUMPDEST 
0xb10: V704 = 0x2
0xb12: V705 = 0x0
0xb15: V706 = S[0x2]
0xb17: V707 = 0x100
0xb1a: V708 = EXP 0x100 0x0
0xb1c: V709 = DIV V706 0x1
0xb1d: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0xb32: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0xb34: JUMP 0x1e5
---
Entry stack: [V11, 0x1e5]
Stack pops: 1
Stack additions: [S0, V711]
Exit stack: [V11, 0x1e5, V711]

================================

Block 0xb35
[0xb35:0xbeb]
---
Predecessors: [0x233]
Successors: [0xbec, 0xbf0]
---
0xb35 JUMPDEST
0xb36 PUSH1 0x0
0xb38 PUSH1 0x4
0xb3a PUSH1 0x0
0xb3c SWAP1
0xb3d SLOAD
0xb3e SWAP1
0xb3f PUSH2 0x100
0xb42 EXP
0xb43 SWAP1
0xb44 DIV
0xb45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5a AND
0xb5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb70 AND
0xb71 PUSH4 0x21f8a721
0xb76 PUSH32 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0xb97 PUSH1 0x40
0xb99 MLOAD
0xb9a DUP3
0xb9b PUSH4 0xffffffff
0xba0 AND
0xba1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbbf MUL
0xbc0 DUP2
0xbc1 MSTORE
0xbc2 PUSH1 0x4
0xbc4 ADD
0xbc5 DUP1
0xbc6 DUP3
0xbc7 PUSH1 0x0
0xbc9 NOT
0xbca AND
0xbcb PUSH1 0x0
0xbcd NOT
0xbce AND
0xbcf DUP2
0xbd0 MSTORE
0xbd1 PUSH1 0x20
0xbd3 ADD
0xbd4 SWAP2
0xbd5 POP
0xbd6 POP
0xbd7 PUSH1 0x20
0xbd9 PUSH1 0x40
0xbdb MLOAD
0xbdc DUP1
0xbdd DUP4
0xbde SUB
0xbdf DUP2
0xbe0 PUSH1 0x0
0xbe2 DUP8
0xbe3 DUP1
0xbe4 EXTCODESIZE
0xbe5 ISZERO
0xbe6 DUP1
0xbe7 ISZERO
0xbe8 PUSH2 0xbf0
0xbeb JUMPI
---
0xb35: JUMPDEST 
0xb36: V712 = 0x0
0xb38: V713 = 0x4
0xb3a: V714 = 0x0
0xb3d: V715 = S[0x4]
0xb3f: V716 = 0x100
0xb42: V717 = EXP 0x100 0x0
0xb44: V718 = DIV V715 0x1
0xb45: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5a: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0xb5b: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xb70: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0xb71: V723 = 0x21f8a721
0xb76: V724 = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0xb97: V725 = 0x40
0xb99: V726 = M[0x40]
0xb9b: V727 = 0xffffffff
0xba0: V728 = AND 0xffffffff 0x21f8a721
0xba1: V729 = 0x100000000000000000000000000000000000000000000000000000000
0xbbf: V730 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x21f8a721
0xbc1: M[V726] = 0x21f8a72100000000000000000000000000000000000000000000000000000000
0xbc2: V731 = 0x4
0xbc4: V732 = ADD 0x4 V726
0xbc7: V733 = 0x0
0xbc9: V734 = NOT 0x0
0xbca: V735 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0xbcb: V736 = 0x0
0xbcd: V737 = NOT 0x0
0xbce: V738 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0xbd0: M[V732] = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0xbd1: V739 = 0x20
0xbd3: V740 = ADD 0x20 V732
0xbd7: V741 = 0x20
0xbd9: V742 = 0x40
0xbdb: V743 = M[0x40]
0xbde: V744 = SUB V740 V743
0xbe0: V745 = 0x0
0xbe4: V746 = EXTCODESIZE V722
0xbe5: V747 = ISZERO V746
0xbe7: V748 = ISZERO V747
0xbe8: V749 = 0xbf0
0xbeb: JUMPI 0xbf0 V748
---
Entry stack: [V11, 0x23c]
Stack pops: 0
Stack additions: [0x0, V722, 0x21f8a721, V740, 0x20, V743, V744, V743, 0x0, V722, V747]
Exit stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, 0x20, V743, V744, V743, 0x0, V722, V747]

================================

Block 0xbec
[0xbec:0xbef]
---
Predecessors: [0xb35]
Successors: []
---
0xbec PUSH1 0x0
0xbee DUP1
0xbef REVERT
---
0xbec: V750 = 0x0
0xbef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, 0x20, V743, V744, V743, 0x0, V722, V747]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, 0x20, V743, V744, V743, 0x0, V722, V747]

================================

Block 0xbf0
[0xbf0:0xbfa]
---
Predecessors: [0xb35]
Successors: [0xbfb, 0xc04]
---
0xbf0 JUMPDEST
0xbf1 POP
0xbf2 GAS
0xbf3 CALL
0xbf4 ISZERO
0xbf5 DUP1
0xbf6 ISZERO
0xbf7 PUSH2 0xc04
0xbfa JUMPI
---
0xbf0: JUMPDEST 
0xbf2: V751 = GAS
0xbf3: V752 = CALL V751 V722 0x0 V743 V744 V743 0x20
0xbf4: V753 = ISZERO V752
0xbf6: V754 = ISZERO V753
0xbf7: V755 = 0xc04
0xbfa: JUMPI 0xc04 V754
---
Entry stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, 0x20, V743, V744, V743, 0x0, V722, V747]
Stack pops: 7
Stack additions: [V753]
Exit stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, V753]

================================

Block 0xbfb
[0xbfb:0xc03]
---
Predecessors: [0xbf0]
Successors: []
---
0xbfb RETURNDATASIZE
0xbfc PUSH1 0x0
0xbfe DUP1
0xbff RETURNDATACOPY
0xc00 RETURNDATASIZE
0xc01 PUSH1 0x0
0xc03 REVERT
---
0xbfb: V756 = RETURNDATASIZE
0xbfc: V757 = 0x0
0xbff: RETURNDATACOPY 0x0 0x0 V756
0xc00: V758 = RETURNDATASIZE
0xc01: V759 = 0x0
0xc03: REVERT 0x0 V758
---
Entry stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, V753]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, V753]

================================

Block 0xc04
[0xc04:0xc15]
---
Predecessors: [0xbf0]
Successors: [0xc16, 0xc1a]
---
0xc04 JUMPDEST
0xc05 POP
0xc06 POP
0xc07 POP
0xc08 POP
0xc09 PUSH1 0x40
0xc0b MLOAD
0xc0c RETURNDATASIZE
0xc0d PUSH1 0x20
0xc0f DUP2
0xc10 LT
0xc11 ISZERO
0xc12 PUSH2 0xc1a
0xc15 JUMPI
---
0xc04: JUMPDEST 
0xc09: V760 = 0x40
0xc0b: V761 = M[0x40]
0xc0c: V762 = RETURNDATASIZE
0xc0d: V763 = 0x20
0xc10: V764 = LT V762 0x20
0xc11: V765 = ISZERO V764
0xc12: V766 = 0xc1a
0xc15: JUMPI 0xc1a V765
---
Entry stack: [V11, 0x23c, 0x0, V722, 0x21f8a721, V740, V753]
Stack pops: 4
Stack additions: [V761, V762]
Exit stack: [V11, 0x23c, 0x0, V761, V762]

================================

Block 0xc16
[0xc16:0xc19]
---
Predecessors: [0xc04]
Successors: []
---
0xc16 PUSH1 0x0
0xc18 DUP1
0xc19 REVERT
---
0xc16: V767 = 0x0
0xc19: REVERT 0x0 0x0
---
Entry stack: [V11, 0x23c, 0x0, V761, V762]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x23c, 0x0, V761, V762]

================================

Block 0xc1a
[0xc1a:0xc2f]
---
Predecessors: [0xc04]
Successors: [0x23c]
---
0xc1a JUMPDEST
0xc1b DUP2
0xc1c ADD
0xc1d SWAP1
0xc1e DUP1
0xc1f DUP1
0xc20 MLOAD
0xc21 SWAP1
0xc22 PUSH1 0x20
0xc24 ADD
0xc25 SWAP1
0xc26 SWAP3
0xc27 SWAP2
0xc28 SWAP1
0xc29 POP
0xc2a POP
0xc2b POP
0xc2c SWAP1
0xc2d POP
0xc2e SWAP1
0xc2f JUMP
---
0xc1a: JUMPDEST 
0xc1c: V768 = ADD V761 V762
0xc20: V769 = M[V761]
0xc22: V770 = 0x20
0xc24: V771 = ADD 0x20 V761
0xc2f: JUMP 0x23c
---
Entry stack: [V11, 0x23c, 0x0, V761, V762]
Stack pops: 4
Stack additions: [V769]
Exit stack: [V11, V769]

================================

Block 0xc30
[0xc30:0xc86]
---
Predecessors: [0x28a]
Successors: [0xc87, 0xc8b]
---
0xc30 JUMPDEST
0xc31 PUSH1 0x0
0xc33 DUP1
0xc34 SWAP1
0xc35 SLOAD
0xc36 SWAP1
0xc37 PUSH2 0x100
0xc3a EXP
0xc3b SWAP1
0xc3c DIV
0xc3d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc52 AND
0xc53 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc68 AND
0xc69 CALLER
0xc6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7f AND
0xc80 EQ
0xc81 ISZERO
0xc82 ISZERO
0xc83 PUSH2 0xc8b
0xc86 JUMPI
---
0xc30: JUMPDEST 
0xc31: V772 = 0x0
0xc35: V773 = S[0x0]
0xc37: V774 = 0x100
0xc3a: V775 = EXP 0x100 0x0
0xc3c: V776 = DIV V773 0x1
0xc3d: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xc52: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0xc53: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xc68: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0xc69: V781 = CALLER
0xc6a: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7f: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0xc80: V784 = EQ V783 V780
0xc81: V785 = ISZERO V784
0xc82: V786 = ISZERO V785
0xc83: V787 = 0xc8b
0xc86: JUMPI 0xc8b V786
---
Entry stack: [V11, 0x2e2, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e2, V186]

================================

Block 0xc87
[0xc87:0xc8a]
---
Predecessors: [0xc30]
Successors: []
---
0xc87 PUSH1 0x0
0xc89 DUP1
0xc8a REVERT
---
0xc87: V788 = 0x0
0xc8a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e2, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e2, V186]

================================

Block 0xc8b
[0xc8b:0xca0]
---
Predecessors: [0xc30]
Successors: [0x14f2]
---
0xc8b JUMPDEST
0xc8c DUP1
0xc8d PUSH1 0x1
0xc8f SWAP1
0xc90 DUP1
0xc91 MLOAD
0xc92 SWAP1
0xc93 PUSH1 0x20
0xc95 ADD
0xc96 SWAP1
0xc97 PUSH2 0xca1
0xc9a SWAP3
0xc9b SWAP2
0xc9c SWAP1
0xc9d PUSH2 0x14f2
0xca0 JUMP
---
0xc8b: JUMPDEST 
0xc8d: V789 = 0x1
0xc91: V790 = M[V186]
0xc93: V791 = 0x20
0xc95: V792 = ADD 0x20 V186
0xc97: V793 = 0xca1
0xc9d: V794 = 0x14f2
0xca0: JUMP 0x14f2
---
Entry stack: [V11, 0x2e2, V186]
Stack pops: 1
Stack additions: [S0, 0xca1, 0x1, V792, V790]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, V792, V790]

================================

Block 0xca1
[0xca1:0xca4]
---
Predecessors: [0x1578]
Successors: [0x2e2]
---
0xca1 JUMPDEST
0xca2 POP
0xca3 POP
0xca4 JUMP
---
0xca1: JUMPDEST 
0xca4: JUMP 0x2e2
---
Entry stack: [V11, 0x2e2, V186, 0x1]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0xca5
[0xca5:0xcfb]
---
Predecessors: [0x2f0]
Successors: [0xcfc, 0xd00]
---
0xca5 JUMPDEST
0xca6 PUSH1 0x0
0xca8 DUP1
0xca9 SWAP1
0xcaa SLOAD
0xcab SWAP1
0xcac PUSH2 0x100
0xcaf EXP
0xcb0 SWAP1
0xcb1 DIV
0xcb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc7 AND
0xcc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcdd AND
0xcde CALLER
0xcdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf4 AND
0xcf5 EQ
0xcf6 ISZERO
0xcf7 ISZERO
0xcf8 PUSH2 0xd00
0xcfb JUMPI
---
0xca5: JUMPDEST 
0xca6: V795 = 0x0
0xcaa: V796 = S[0x0]
0xcac: V797 = 0x100
0xcaf: V798 = EXP 0x100 0x0
0xcb1: V799 = DIV V796 0x1
0xcb2: V800 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc7: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0xcc8: V802 = 0xffffffffffffffffffffffffffffffffffffffff
0xcdd: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0xcde: V804 = CALLER
0xcdf: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf4: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0xcf5: V807 = EQ V806 V803
0xcf6: V808 = ISZERO V807
0xcf7: V809 = ISZERO V808
0xcf8: V810 = 0xd00
0xcfb: JUMPI 0xd00 V809
---
Entry stack: [V11, 0x2f9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2f9]

================================

Block 0xcfc
[0xcfc:0xcff]
---
Predecessors: [0xca5]
Successors: []
---
0xcfc PUSH1 0x0
0xcfe DUP1
0xcff REVERT
---
0xcfc: V811 = 0x0
0xcff: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2f9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2f9]

================================

Block 0xd00
[0xd00:0xda6]
---
Predecessors: [0xca5]
Successors: [0x2f9]
---
0xd00 JUMPDEST
0xd01 PUSH1 0x0
0xd03 DUP1
0xd04 SWAP1
0xd05 SLOAD
0xd06 SWAP1
0xd07 PUSH2 0x100
0xd0a EXP
0xd0b SWAP1
0xd0c DIV
0xd0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd22 AND
0xd23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd38 AND
0xd39 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0xd5a PUSH1 0x40
0xd5c MLOAD
0xd5d PUSH1 0x40
0xd5f MLOAD
0xd60 DUP1
0xd61 SWAP2
0xd62 SUB
0xd63 SWAP1
0xd64 LOG2
0xd65 PUSH1 0x0
0xd67 DUP1
0xd68 PUSH1 0x0
0xd6a PUSH2 0x100
0xd6d EXP
0xd6e DUP2
0xd6f SLOAD
0xd70 DUP2
0xd71 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd86 MUL
0xd87 NOT
0xd88 AND
0xd89 SWAP1
0xd8a DUP4
0xd8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda0 AND
0xda1 MUL
0xda2 OR
0xda3 SWAP1
0xda4 SSTORE
0xda5 POP
0xda6 JUMP
---
0xd00: JUMPDEST 
0xd01: V812 = 0x0
0xd05: V813 = S[0x0]
0xd07: V814 = 0x100
0xd0a: V815 = EXP 0x100 0x0
0xd0c: V816 = DIV V813 0x1
0xd0d: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xd22: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xd23: V819 = 0xffffffffffffffffffffffffffffffffffffffff
0xd38: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0xd39: V821 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0xd5a: V822 = 0x40
0xd5c: V823 = M[0x40]
0xd5d: V824 = 0x40
0xd5f: V825 = M[0x40]
0xd62: V826 = SUB V823 V825
0xd64: LOG V825 V826 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V820
0xd65: V827 = 0x0
0xd68: V828 = 0x0
0xd6a: V829 = 0x100
0xd6d: V830 = EXP 0x100 0x0
0xd6f: V831 = S[0x0]
0xd71: V832 = 0xffffffffffffffffffffffffffffffffffffffff
0xd86: V833 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xd87: V834 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd88: V835 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V831
0xd8b: V836 = 0xffffffffffffffffffffffffffffffffffffffff
0xda0: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xda1: V838 = MUL 0x0 0x1
0xda2: V839 = OR 0x0 V835
0xda4: S[0x0] = V839
0xda6: JUMP 0x2f9
---
Entry stack: [V11, 0x2f9]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xda7
[0xda7:0xdff]
---
Predecessors: [0x307]
Successors: [0xe00, 0xe04]
---
0xda7 JUMPDEST
0xda8 PUSH1 0x0
0xdaa DUP1
0xdab PUSH1 0x0
0xdad SWAP1
0xdae SLOAD
0xdaf SWAP1
0xdb0 PUSH2 0x100
0xdb3 EXP
0xdb4 SWAP1
0xdb5 DIV
0xdb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcb AND
0xdcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde1 AND
0xde2 CALLER
0xde3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf8 AND
0xdf9 EQ
0xdfa ISZERO
0xdfb ISZERO
0xdfc PUSH2 0xe04
0xdff JUMPI
---
0xda7: JUMPDEST 
0xda8: V840 = 0x0
0xdab: V841 = 0x0
0xdae: V842 = S[0x0]
0xdb0: V843 = 0x100
0xdb3: V844 = EXP 0x100 0x0
0xdb5: V845 = DIV V842 0x1
0xdb6: V846 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcb: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0xdcc: V848 = 0xffffffffffffffffffffffffffffffffffffffff
0xde1: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0xde2: V850 = CALLER
0xde3: V851 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf8: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff V850
0xdf9: V853 = EQ V852 V849
0xdfa: V854 = ISZERO V853
0xdfb: V855 = ISZERO V854
0xdfc: V856 = 0xe04
0xdff: JUMPI 0xe04 V855
---
Entry stack: [V11, 0x310]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x310, 0x0]

================================

Block 0xe00
[0xe00:0xe03]
---
Predecessors: [0xda7]
Successors: []
---
0xe00 PUSH1 0x0
0xe02 DUP1
0xe03 REVERT
---
0xe00: V857 = 0x0
0xe03: REVERT 0x0 0x0
---
Entry stack: [V11, 0x310, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x310, 0x0]

================================

Block 0xe04
[0xe04:0xe1b]
---
Predecessors: [0xda7]
Successors: [0xe1c, 0xe20]
---
0xe04 JUMPDEST
0xe05 PUSH1 0x0
0xe07 PUSH1 0x14
0xe09 SWAP1
0xe0a SLOAD
0xe0b SWAP1
0xe0c PUSH2 0x100
0xe0f EXP
0xe10 SWAP1
0xe11 DIV
0xe12 PUSH1 0xff
0xe14 AND
0xe15 ISZERO
0xe16 ISZERO
0xe17 ISZERO
0xe18 PUSH2 0xe20
0xe1b JUMPI
---
0xe04: JUMPDEST 
0xe05: V858 = 0x0
0xe07: V859 = 0x14
0xe0a: V860 = S[0x0]
0xe0c: V861 = 0x100
0xe0f: V862 = EXP 0x100 0x14
0xe11: V863 = DIV V860 0x10000000000000000000000000000000000000000
0xe12: V864 = 0xff
0xe14: V865 = AND 0xff V863
0xe15: V866 = ISZERO V865
0xe16: V867 = ISZERO V866
0xe17: V868 = ISZERO V867
0xe18: V869 = 0xe20
0xe1b: JUMPI 0xe20 V868
---
Entry stack: [V11, 0x310, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x310, 0x0]

================================

Block 0xe1c
[0xe1c:0xe1f]
---
Predecessors: [0xe04]
Successors: []
---
0xe1c PUSH1 0x0
0xe1e DUP1
0xe1f REVERT
---
0xe1c: V870 = 0x0
0xe1f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x310, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x310, 0x0]

================================

Block 0xe20
[0xe20:0xe5b]
---
Predecessors: [0xe04]
Successors: [0xe5c, 0xedc]
---
0xe20 JUMPDEST
0xe21 PUSH1 0x1
0xe23 PUSH1 0x0
0xe25 PUSH1 0x14
0xe27 PUSH2 0x100
0xe2a EXP
0xe2b DUP2
0xe2c SLOAD
0xe2d DUP2
0xe2e PUSH1 0xff
0xe30 MUL
0xe31 NOT
0xe32 AND
0xe33 SWAP1
0xe34 DUP4
0xe35 ISZERO
0xe36 ISZERO
0xe37 MUL
0xe38 OR
0xe39 SWAP1
0xe3a SSTORE
0xe3b POP
0xe3c PUSH1 0x0
0xe3e ADDRESS
0xe3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe54 AND
0xe55 BALANCE
0xe56 GT
0xe57 ISZERO
0xe58 PUSH2 0xedc
0xe5b JUMPI
---
0xe20: JUMPDEST 
0xe21: V871 = 0x1
0xe23: V872 = 0x0
0xe25: V873 = 0x14
0xe27: V874 = 0x100
0xe2a: V875 = EXP 0x100 0x14
0xe2c: V876 = S[0x0]
0xe2e: V877 = 0xff
0xe30: V878 = MUL 0xff 0x10000000000000000000000000000000000000000
0xe31: V879 = NOT 0xff0000000000000000000000000000000000000000
0xe32: V880 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V876
0xe35: V881 = ISZERO 0x1
0xe36: V882 = ISZERO 0x0
0xe37: V883 = MUL 0x1 0x10000000000000000000000000000000000000000
0xe38: V884 = OR 0x10000000000000000000000000000000000000000 V880
0xe3a: S[0x0] = V884
0xe3c: V885 = 0x0
0xe3e: V886 = ADDRESS
0xe3f: V887 = 0xffffffffffffffffffffffffffffffffffffffff
0xe54: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0xe55: V889 = BALANCE V888
0xe56: V890 = GT V889 0x0
0xe57: V891 = ISZERO V890
0xe58: V892 = 0xedc
0xe5b: JUMPI 0xedc V891
---
Entry stack: [V11, 0x310, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x310, 0x0]

================================

Block 0xe5c
[0xe5c:0xed0]
---
Predecessors: [0xe20]
Successors: [0xed1, 0xeda]
---
0xe5c PUSH1 0x2
0xe5e PUSH1 0x0
0xe60 SWAP1
0xe61 SLOAD
0xe62 SWAP1
0xe63 PUSH2 0x100
0xe66 EXP
0xe67 SWAP1
0xe68 DIV
0xe69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7e AND
0xe7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe94 AND
0xe95 PUSH2 0x8fc
0xe98 ADDRESS
0xe99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeae AND
0xeaf BALANCE
0xeb0 SWAP1
0xeb1 DUP2
0xeb2 ISZERO
0xeb3 MUL
0xeb4 SWAP1
0xeb5 PUSH1 0x40
0xeb7 MLOAD
0xeb8 PUSH1 0x0
0xeba PUSH1 0x40
0xebc MLOAD
0xebd DUP1
0xebe DUP4
0xebf SUB
0xec0 DUP2
0xec1 DUP6
0xec2 DUP9
0xec3 DUP9
0xec4 CALL
0xec5 SWAP4
0xec6 POP
0xec7 POP
0xec8 POP
0xec9 POP
0xeca ISZERO
0xecb DUP1
0xecc ISZERO
0xecd PUSH2 0xeda
0xed0 JUMPI
---
0xe5c: V893 = 0x2
0xe5e: V894 = 0x0
0xe61: V895 = S[0x2]
0xe63: V896 = 0x100
0xe66: V897 = EXP 0x100 0x0
0xe68: V898 = DIV V895 0x1
0xe69: V899 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7e: V900 = AND 0xffffffffffffffffffffffffffffffffffffffff V898
0xe7f: V901 = 0xffffffffffffffffffffffffffffffffffffffff
0xe94: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff V900
0xe95: V903 = 0x8fc
0xe98: V904 = ADDRESS
0xe99: V905 = 0xffffffffffffffffffffffffffffffffffffffff
0xeae: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0xeaf: V907 = BALANCE V906
0xeb2: V908 = ISZERO V907
0xeb3: V909 = MUL V908 0x8fc
0xeb5: V910 = 0x40
0xeb7: V911 = M[0x40]
0xeb8: V912 = 0x0
0xeba: V913 = 0x40
0xebc: V914 = M[0x40]
0xebf: V915 = SUB V911 V914
0xec4: V916 = CALL V909 V902 V907 V914 V915 V914 0x0
0xeca: V917 = ISZERO V916
0xecc: V918 = ISZERO V917
0xecd: V919 = 0xeda
0xed0: JUMPI 0xeda V918
---
Entry stack: [V11, 0x310, 0x0]
Stack pops: 0
Stack additions: [V917]
Exit stack: [V11, 0x310, 0x0, V917]

================================

Block 0xed1
[0xed1:0xed9]
---
Predecessors: [0xe5c]
Successors: []
---
0xed1 RETURNDATASIZE
0xed2 PUSH1 0x0
0xed4 DUP1
0xed5 RETURNDATACOPY
0xed6 RETURNDATASIZE
0xed7 PUSH1 0x0
0xed9 REVERT
---
0xed1: V920 = RETURNDATASIZE
0xed2: V921 = 0x0
0xed5: RETURNDATACOPY 0x0 0x0 V920
0xed6: V922 = RETURNDATASIZE
0xed7: V923 = 0x0
0xed9: REVERT 0x0 V922
---
Entry stack: [V11, 0x310, 0x0, V917]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x310, 0x0, V917]

================================

Block 0xeda
[0xeda:0xedb]
---
Predecessors: [0xe5c]
Successors: [0xedc]
---
0xeda JUMPDEST
0xedb POP
---
0xeda: JUMPDEST 
---
Entry stack: [V11, 0x310, 0x0, V917]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x310, 0x0]

================================

Block 0xedc
[0xedc:0xefc]
---
Predecessors: [0xe20, 0xeda]
Successors: [0x310]
---
0xedc JUMPDEST
0xedd PUSH1 0x1
0xedf SWAP1
0xee0 POP
0xee1 PUSH1 0x0
0xee3 DUP1
0xee4 PUSH1 0x14
0xee6 PUSH2 0x100
0xee9 EXP
0xeea DUP2
0xeeb SLOAD
0xeec DUP2
0xeed PUSH1 0xff
0xeef MUL
0xef0 NOT
0xef1 AND
0xef2 SWAP1
0xef3 DUP4
0xef4 ISZERO
0xef5 ISZERO
0xef6 MUL
0xef7 OR
0xef8 SWAP1
0xef9 SSTORE
0xefa POP
0xefb SWAP1
0xefc JUMP
---
0xedc: JUMPDEST 
0xedd: V924 = 0x1
0xee1: V925 = 0x0
0xee4: V926 = 0x14
0xee6: V927 = 0x100
0xee9: V928 = EXP 0x100 0x14
0xeeb: V929 = S[0x0]
0xeed: V930 = 0xff
0xeef: V931 = MUL 0xff 0x10000000000000000000000000000000000000000
0xef0: V932 = NOT 0xff0000000000000000000000000000000000000000
0xef1: V933 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V929
0xef4: V934 = ISZERO 0x0
0xef5: V935 = ISZERO 0x1
0xef6: V936 = MUL 0x0 0x10000000000000000000000000000000000000000
0xef7: V937 = OR 0x0 V933
0xef9: S[0x0] = V937
0xefc: JUMP 0x310
---
Entry stack: [V11, 0x310, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xefd
[0xefd:0xf02]
---
Predecessors: [0x336]
Successors: [0x33f]
---
0xefd JUMPDEST
0xefe PUSH1 0x3
0xf00 SLOAD
0xf01 DUP2
0xf02 JUMP
---
0xefd: JUMPDEST 
0xefe: V938 = 0x3
0xf00: V939 = S[0x3]
0xf02: JUMP 0x33f
---
Entry stack: [V11, 0x33f]
Stack pops: 1
Stack additions: [S0, V939]
Exit stack: [V11, 0x33f, V939]

================================

Block 0xf03
[0xf03:0xf5b]
---
Predecessors: [0x361]
Successors: [0xf5c, 0xf60]
---
0xf03 JUMPDEST
0xf04 PUSH1 0x0
0xf06 DUP1
0xf07 PUSH1 0x0
0xf09 SWAP1
0xf0a SLOAD
0xf0b SWAP1
0xf0c PUSH2 0x100
0xf0f EXP
0xf10 SWAP1
0xf11 DIV
0xf12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf27 AND
0xf28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3d AND
0xf3e CALLER
0xf3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf54 AND
0xf55 EQ
0xf56 ISZERO
0xf57 ISZERO
0xf58 PUSH2 0xf60
0xf5b JUMPI
---
0xf03: JUMPDEST 
0xf04: V940 = 0x0
0xf07: V941 = 0x0
0xf0a: V942 = S[0x0]
0xf0c: V943 = 0x100
0xf0f: V944 = EXP 0x100 0x0
0xf11: V945 = DIV V942 0x1
0xf12: V946 = 0xffffffffffffffffffffffffffffffffffffffff
0xf27: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0xf28: V948 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3d: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0xf3e: V950 = CALLER
0xf3f: V951 = 0xffffffffffffffffffffffffffffffffffffffff
0xf54: V952 = AND 0xffffffffffffffffffffffffffffffffffffffff V950
0xf55: V953 = EQ V952 V949
0xf56: V954 = ISZERO V953
0xf57: V955 = ISZERO V954
0xf58: V956 = 0xf60
0xf5b: JUMPI 0xf60 V955
---
Entry stack: [V11, 0x396, V242]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0xf5c
[0xf5c:0xf5f]
---
Predecessors: [0xf03]
Successors: []
---
0xf5c PUSH1 0x0
0xf5e DUP1
0xf5f REVERT
---
0xf5c: V957 = 0x0
0xf5f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0xf60
[0xf60:0xf77]
---
Predecessors: [0xf03]
Successors: [0xf78, 0xf7c]
---
0xf60 JUMPDEST
0xf61 PUSH1 0x0
0xf63 PUSH1 0x14
0xf65 SWAP1
0xf66 SLOAD
0xf67 SWAP1
0xf68 PUSH2 0x100
0xf6b EXP
0xf6c SWAP1
0xf6d DIV
0xf6e PUSH1 0xff
0xf70 AND
0xf71 ISZERO
0xf72 ISZERO
0xf73 ISZERO
0xf74 PUSH2 0xf7c
0xf77 JUMPI
---
0xf60: JUMPDEST 
0xf61: V958 = 0x0
0xf63: V959 = 0x14
0xf66: V960 = S[0x0]
0xf68: V961 = 0x100
0xf6b: V962 = EXP 0x100 0x14
0xf6d: V963 = DIV V960 0x10000000000000000000000000000000000000000
0xf6e: V964 = 0xff
0xf70: V965 = AND 0xff V963
0xf71: V966 = ISZERO V965
0xf72: V967 = ISZERO V966
0xf73: V968 = ISZERO V967
0xf74: V969 = 0xf7c
0xf77: JUMPI 0xf7c V968
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0xf78
[0xf78:0xf7b]
---
Predecessors: [0xf60]
Successors: []
---
0xf78 PUSH1 0x0
0xf7a DUP1
0xf7b REVERT
---
0xf78: V970 = 0x0
0xf7b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0xf7c
[0xf7c:0xfcd]
---
Predecessors: [0xf60]
Successors: [0xfce, 0x11ab]
---
0xf7c JUMPDEST
0xf7d PUSH1 0x1
0xf7f PUSH1 0x0
0xf81 PUSH1 0x14
0xf83 PUSH2 0x100
0xf86 EXP
0xf87 DUP2
0xf88 SLOAD
0xf89 DUP2
0xf8a PUSH1 0xff
0xf8c MUL
0xf8d NOT
0xf8e AND
0xf8f SWAP1
0xf90 DUP4
0xf91 ISZERO
0xf92 ISZERO
0xf93 MUL
0xf94 OR
0xf95 SWAP1
0xf96 SSTORE
0xf97 POP
0xf98 PUSH1 0x0
0xf9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfaf AND
0xfb0 DUP3
0xfb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc6 AND
0xfc7 EQ
0xfc8 ISZERO
0xfc9 ISZERO
0xfca PUSH2 0x11ab
0xfcd JUMPI
---
0xf7c: JUMPDEST 
0xf7d: V971 = 0x1
0xf7f: V972 = 0x0
0xf81: V973 = 0x14
0xf83: V974 = 0x100
0xf86: V975 = EXP 0x100 0x14
0xf88: V976 = S[0x0]
0xf8a: V977 = 0xff
0xf8c: V978 = MUL 0xff 0x10000000000000000000000000000000000000000
0xf8d: V979 = NOT 0xff0000000000000000000000000000000000000000
0xf8e: V980 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V976
0xf91: V981 = ISZERO 0x1
0xf92: V982 = ISZERO 0x0
0xf93: V983 = MUL 0x1 0x10000000000000000000000000000000000000000
0xf94: V984 = OR 0x10000000000000000000000000000000000000000 V980
0xf96: S[0x0] = V984
0xf98: V985 = 0x0
0xf9a: V986 = 0xffffffffffffffffffffffffffffffffffffffff
0xfaf: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xfb1: V988 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc6: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0xfc7: V990 = EQ V989 0x0
0xfc8: V991 = ISZERO V990
0xfc9: V992 = ISZERO V991
0xfca: V993 = 0x11ab
0xfcd: JUMPI 0x11ab V992
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0xfce
[0xfce:0x10a2]
---
Predecessors: [0xf7c]
Successors: [0x10a3, 0x10a7]
---
0xfce DUP2
0xfcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe4 AND
0xfe5 PUSH4 0xa9059cbb
0xfea PUSH1 0x2
0xfec PUSH1 0x0
0xfee SWAP1
0xfef SLOAD
0xff0 SWAP1
0xff1 PUSH2 0x100
0xff4 EXP
0xff5 SWAP1
0xff6 DIV
0xff7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100c AND
0x100d DUP5
0x100e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1023 AND
0x1024 PUSH4 0x70a08231
0x1029 ADDRESS
0x102a PUSH1 0x40
0x102c MLOAD
0x102d DUP3
0x102e PUSH4 0xffffffff
0x1033 AND
0x1034 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1052 MUL
0x1053 DUP2
0x1054 MSTORE
0x1055 PUSH1 0x4
0x1057 ADD
0x1058 DUP1
0x1059 DUP3
0x105a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106f AND
0x1070 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1085 AND
0x1086 DUP2
0x1087 MSTORE
0x1088 PUSH1 0x20
0x108a ADD
0x108b SWAP2
0x108c POP
0x108d POP
0x108e PUSH1 0x20
0x1090 PUSH1 0x40
0x1092 MLOAD
0x1093 DUP1
0x1094 DUP4
0x1095 SUB
0x1096 DUP2
0x1097 PUSH1 0x0
0x1099 DUP8
0x109a DUP1
0x109b EXTCODESIZE
0x109c ISZERO
0x109d DUP1
0x109e ISZERO
0x109f PUSH2 0x10a7
0x10a2 JUMPI
---
0xfcf: V994 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe4: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0xfe5: V996 = 0xa9059cbb
0xfea: V997 = 0x2
0xfec: V998 = 0x0
0xfef: V999 = S[0x2]
0xff1: V1000 = 0x100
0xff4: V1001 = EXP 0x100 0x0
0xff6: V1002 = DIV V999 0x1
0xff7: V1003 = 0xffffffffffffffffffffffffffffffffffffffff
0x100c: V1004 = AND 0xffffffffffffffffffffffffffffffffffffffff V1002
0x100e: V1005 = 0xffffffffffffffffffffffffffffffffffffffff
0x1023: V1006 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x1024: V1007 = 0x70a08231
0x1029: V1008 = ADDRESS
0x102a: V1009 = 0x40
0x102c: V1010 = M[0x40]
0x102e: V1011 = 0xffffffff
0x1033: V1012 = AND 0xffffffff 0x70a08231
0x1034: V1013 = 0x100000000000000000000000000000000000000000000000000000000
0x1052: V1014 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1054: M[V1010] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1055: V1015 = 0x4
0x1057: V1016 = ADD 0x4 V1010
0x105a: V1017 = 0xffffffffffffffffffffffffffffffffffffffff
0x106f: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0x1070: V1019 = 0xffffffffffffffffffffffffffffffffffffffff
0x1085: V1020 = AND 0xffffffffffffffffffffffffffffffffffffffff V1018
0x1087: M[V1016] = V1020
0x1088: V1021 = 0x20
0x108a: V1022 = ADD 0x20 V1016
0x108e: V1023 = 0x20
0x1090: V1024 = 0x40
0x1092: V1025 = M[0x40]
0x1095: V1026 = SUB V1022 V1025
0x1097: V1027 = 0x0
0x109b: V1028 = EXTCODESIZE V1006
0x109c: V1029 = ISZERO V1028
0x109e: V1030 = ISZERO V1029
0x109f: V1031 = 0x10a7
0x10a2: JUMPI 0x10a7 V1030
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, 0x20, V1025, V1026, V1025, 0x0, V1006, V1029]
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, 0x20, V1025, V1026, V1025, 0x0, V1006, V1029]

================================

Block 0x10a3
[0x10a3:0x10a6]
---
Predecessors: [0xfce]
Successors: []
---
0x10a3 PUSH1 0x0
0x10a5 DUP1
0x10a6 REVERT
---
0x10a3: V1032 = 0x0
0x10a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, 0x20, V1025, V1026, V1025, 0x0, V1006, V1029]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, 0x20, V1025, V1026, V1025, 0x0, V1006, V1029]

================================

Block 0x10a7
[0x10a7:0x10b1]
---
Predecessors: [0xfce]
Successors: [0x10b2, 0x10bb]
---
0x10a7 JUMPDEST
0x10a8 POP
0x10a9 GAS
0x10aa CALL
0x10ab ISZERO
0x10ac DUP1
0x10ad ISZERO
0x10ae PUSH2 0x10bb
0x10b1 JUMPI
---
0x10a7: JUMPDEST 
0x10a9: V1033 = GAS
0x10aa: V1034 = CALL V1033 V1006 0x0 V1025 V1026 V1025 0x20
0x10ab: V1035 = ISZERO V1034
0x10ad: V1036 = ISZERO V1035
0x10ae: V1037 = 0x10bb
0x10b1: JUMPI 0x10bb V1036
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, 0x20, V1025, V1026, V1025, 0x0, V1006, V1029]
Stack pops: 7
Stack additions: [V1035]
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, V1035]

================================

Block 0x10b2
[0x10b2:0x10ba]
---
Predecessors: [0x10a7]
Successors: []
---
0x10b2 RETURNDATASIZE
0x10b3 PUSH1 0x0
0x10b5 DUP1
0x10b6 RETURNDATACOPY
0x10b7 RETURNDATASIZE
0x10b8 PUSH1 0x0
0x10ba REVERT
---
0x10b2: V1038 = RETURNDATASIZE
0x10b3: V1039 = 0x0
0x10b6: RETURNDATACOPY 0x0 0x0 V1038
0x10b7: V1040 = RETURNDATASIZE
0x10b8: V1041 = 0x0
0x10ba: REVERT 0x0 V1040
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, V1035]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, V1035]

================================

Block 0x10bb
[0x10bb:0x10cc]
---
Predecessors: [0x10a7]
Successors: [0x10cd, 0x10d1]
---
0x10bb JUMPDEST
0x10bc POP
0x10bd POP
0x10be POP
0x10bf POP
0x10c0 PUSH1 0x40
0x10c2 MLOAD
0x10c3 RETURNDATASIZE
0x10c4 PUSH1 0x20
0x10c6 DUP2
0x10c7 LT
0x10c8 ISZERO
0x10c9 PUSH2 0x10d1
0x10cc JUMPI
---
0x10bb: JUMPDEST 
0x10c0: V1042 = 0x40
0x10c2: V1043 = M[0x40]
0x10c3: V1044 = RETURNDATASIZE
0x10c4: V1045 = 0x20
0x10c7: V1046 = LT V1044 0x20
0x10c8: V1047 = ISZERO V1046
0x10c9: V1048 = 0x10d1
0x10cc: JUMPI 0x10d1 V1047
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1006, 0x70a08231, V1022, V1035]
Stack pops: 4
Stack additions: [V1043, V1044]
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1043, V1044]

================================

Block 0x10cd
[0x10cd:0x10d0]
---
Predecessors: [0x10bb]
Successors: []
---
0x10cd PUSH1 0x0
0x10cf DUP1
0x10d0 REVERT
---
0x10cd: V1049 = 0x0
0x10d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1043, V1044]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1043, V1044]

================================

Block 0x10d1
[0x10d1:0x1162]
---
Predecessors: [0x10bb]
Successors: [0x1163, 0x1167]
---
0x10d1 JUMPDEST
0x10d2 DUP2
0x10d3 ADD
0x10d4 SWAP1
0x10d5 DUP1
0x10d6 DUP1
0x10d7 MLOAD
0x10d8 SWAP1
0x10d9 PUSH1 0x20
0x10db ADD
0x10dc SWAP1
0x10dd SWAP3
0x10de SWAP2
0x10df SWAP1
0x10e0 POP
0x10e1 POP
0x10e2 POP
0x10e3 PUSH1 0x40
0x10e5 MLOAD
0x10e6 DUP4
0x10e7 PUSH4 0xffffffff
0x10ec AND
0x10ed PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x110b MUL
0x110c DUP2
0x110d MSTORE
0x110e PUSH1 0x4
0x1110 ADD
0x1111 DUP1
0x1112 DUP4
0x1113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1128 AND
0x1129 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113e AND
0x113f DUP2
0x1140 MSTORE
0x1141 PUSH1 0x20
0x1143 ADD
0x1144 DUP3
0x1145 DUP2
0x1146 MSTORE
0x1147 PUSH1 0x20
0x1149 ADD
0x114a SWAP3
0x114b POP
0x114c POP
0x114d POP
0x114e PUSH1 0x20
0x1150 PUSH1 0x40
0x1152 MLOAD
0x1153 DUP1
0x1154 DUP4
0x1155 SUB
0x1156 DUP2
0x1157 PUSH1 0x0
0x1159 DUP8
0x115a DUP1
0x115b EXTCODESIZE
0x115c ISZERO
0x115d DUP1
0x115e ISZERO
0x115f PUSH2 0x1167
0x1162 JUMPI
---
0x10d1: JUMPDEST 
0x10d3: V1050 = ADD V1043 V1044
0x10d7: V1051 = M[V1043]
0x10d9: V1052 = 0x20
0x10db: V1053 = ADD 0x20 V1043
0x10e3: V1054 = 0x40
0x10e5: V1055 = M[0x40]
0x10e7: V1056 = 0xffffffff
0x10ec: V1057 = AND 0xffffffff 0xa9059cbb
0x10ed: V1058 = 0x100000000000000000000000000000000000000000000000000000000
0x110b: V1059 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x110d: M[V1055] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x110e: V1060 = 0x4
0x1110: V1061 = ADD 0x4 V1055
0x1113: V1062 = 0xffffffffffffffffffffffffffffffffffffffff
0x1128: V1063 = AND 0xffffffffffffffffffffffffffffffffffffffff V1004
0x1129: V1064 = 0xffffffffffffffffffffffffffffffffffffffff
0x113e: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V1063
0x1140: M[V1061] = V1065
0x1141: V1066 = 0x20
0x1143: V1067 = ADD 0x20 V1061
0x1146: M[V1067] = V1051
0x1147: V1068 = 0x20
0x1149: V1069 = ADD 0x20 V1067
0x114e: V1070 = 0x20
0x1150: V1071 = 0x40
0x1152: V1072 = M[0x40]
0x1155: V1073 = SUB V1069 V1072
0x1157: V1074 = 0x0
0x115b: V1075 = EXTCODESIZE V995
0x115c: V1076 = ISZERO V1075
0x115e: V1077 = ISZERO V1076
0x115f: V1078 = 0x1167
0x1162: JUMPI 0x1167 V1077
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1004, V1043, V1044]
Stack pops: 5
Stack additions: [S4, S3, V1069, 0x20, V1072, V1073, V1072, 0x0, S4, V1076]
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, 0x20, V1072, V1073, V1072, 0x0, V995, V1076]

================================

Block 0x1163
[0x1163:0x1166]
---
Predecessors: [0x10d1]
Successors: []
---
0x1163 PUSH1 0x0
0x1165 DUP1
0x1166 REVERT
---
0x1163: V1079 = 0x0
0x1166: REVERT 0x0 0x0
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, 0x20, V1072, V1073, V1072, 0x0, V995, V1076]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, 0x20, V1072, V1073, V1072, 0x0, V995, V1076]

================================

Block 0x1167
[0x1167:0x1171]
---
Predecessors: [0x10d1]
Successors: [0x1172, 0x117b]
---
0x1167 JUMPDEST
0x1168 POP
0x1169 GAS
0x116a CALL
0x116b ISZERO
0x116c DUP1
0x116d ISZERO
0x116e PUSH2 0x117b
0x1171 JUMPI
---
0x1167: JUMPDEST 
0x1169: V1080 = GAS
0x116a: V1081 = CALL V1080 V995 0x0 V1072 V1073 V1072 0x20
0x116b: V1082 = ISZERO V1081
0x116d: V1083 = ISZERO V1082
0x116e: V1084 = 0x117b
0x1171: JUMPI 0x117b V1083
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, 0x20, V1072, V1073, V1072, 0x0, V995, V1076]
Stack pops: 7
Stack additions: [V1082]
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, V1082]

================================

Block 0x1172
[0x1172:0x117a]
---
Predecessors: [0x1167]
Successors: []
---
0x1172 RETURNDATASIZE
0x1173 PUSH1 0x0
0x1175 DUP1
0x1176 RETURNDATACOPY
0x1177 RETURNDATASIZE
0x1178 PUSH1 0x0
0x117a REVERT
---
0x1172: V1085 = RETURNDATASIZE
0x1173: V1086 = 0x0
0x1176: RETURNDATACOPY 0x0 0x0 V1085
0x1177: V1087 = RETURNDATASIZE
0x1178: V1088 = 0x0
0x117a: REVERT 0x0 V1087
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, V1082]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, V1082]

================================

Block 0x117b
[0x117b:0x118c]
---
Predecessors: [0x1167]
Successors: [0x118d, 0x1191]
---
0x117b JUMPDEST
0x117c POP
0x117d POP
0x117e POP
0x117f POP
0x1180 PUSH1 0x40
0x1182 MLOAD
0x1183 RETURNDATASIZE
0x1184 PUSH1 0x20
0x1186 DUP2
0x1187 LT
0x1188 ISZERO
0x1189 PUSH2 0x1191
0x118c JUMPI
---
0x117b: JUMPDEST 
0x1180: V1089 = 0x40
0x1182: V1090 = M[0x40]
0x1183: V1091 = RETURNDATASIZE
0x1184: V1092 = 0x20
0x1187: V1093 = LT V1091 0x20
0x1188: V1094 = ISZERO V1093
0x1189: V1095 = 0x1191
0x118c: JUMPI 0x1191 V1094
---
Entry stack: [V11, 0x396, V242, 0x0, V995, 0xa9059cbb, V1069, V1082]
Stack pops: 4
Stack additions: [V1090, V1091]
Exit stack: [V11, 0x396, V242, 0x0, V1090, V1091]

================================

Block 0x118d
[0x118d:0x1190]
---
Predecessors: [0x117b]
Successors: []
---
0x118d PUSH1 0x0
0x118f DUP1
0x1190 REVERT
---
0x118d: V1096 = 0x0
0x1190: REVERT 0x0 0x0
---
Entry stack: [V11, 0x396, V242, 0x0, V1090, V1091]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0, V1090, V1091]

================================

Block 0x1191
[0x1191:0x11a8]
---
Predecessors: [0x117b]
Successors: [0x11a9, 0x11aa]
---
0x1191 JUMPDEST
0x1192 DUP2
0x1193 ADD
0x1194 SWAP1
0x1195 DUP1
0x1196 DUP1
0x1197 MLOAD
0x1198 SWAP1
0x1199 PUSH1 0x20
0x119b ADD
0x119c SWAP1
0x119d SWAP3
0x119e SWAP2
0x119f SWAP1
0x11a0 POP
0x11a1 POP
0x11a2 POP
0x11a3 ISZERO
0x11a4 ISZERO
0x11a5 PUSH2 0x11aa
0x11a8 JUMPI
---
0x1191: JUMPDEST 
0x1193: V1097 = ADD V1090 V1091
0x1197: V1098 = M[V1090]
0x1199: V1099 = 0x20
0x119b: V1100 = ADD 0x20 V1090
0x11a3: V1101 = ISZERO V1098
0x11a4: V1102 = ISZERO V1101
0x11a5: V1103 = 0x11aa
0x11a8: JUMPI 0x11aa V1102
---
Entry stack: [V11, 0x396, V242, 0x0, V1090, V1091]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0x11a9
[0x11a9:0x11a9]
---
Predecessors: [0x1191]
Successors: []
---
0x11a9 INVALID
---
0x11a9: INVALID 
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0x11aa
[0x11aa:0x11aa]
---
Predecessors: [0x1191]
Successors: [0x11ab]
---
0x11aa JUMPDEST
---
0x11aa: JUMPDEST 
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x396, V242, 0x0]

================================

Block 0x11ab
[0x11ab:0x11cd]
---
Predecessors: [0xf7c, 0x11aa]
Successors: [0x396]
---
0x11ab JUMPDEST
0x11ac PUSH1 0x1
0x11ae SWAP1
0x11af POP
0x11b0 PUSH1 0x0
0x11b2 DUP1
0x11b3 PUSH1 0x14
0x11b5 PUSH2 0x100
0x11b8 EXP
0x11b9 DUP2
0x11ba SLOAD
0x11bb DUP2
0x11bc PUSH1 0xff
0x11be MUL
0x11bf NOT
0x11c0 AND
0x11c1 SWAP1
0x11c2 DUP4
0x11c3 ISZERO
0x11c4 ISZERO
0x11c5 MUL
0x11c6 OR
0x11c7 SWAP1
0x11c8 SSTORE
0x11c9 POP
0x11ca SWAP2
0x11cb SWAP1
0x11cc POP
0x11cd JUMP
---
0x11ab: JUMPDEST 
0x11ac: V1104 = 0x1
0x11b0: V1105 = 0x0
0x11b3: V1106 = 0x14
0x11b5: V1107 = 0x100
0x11b8: V1108 = EXP 0x100 0x14
0x11ba: V1109 = S[0x0]
0x11bc: V1110 = 0xff
0x11be: V1111 = MUL 0xff 0x10000000000000000000000000000000000000000
0x11bf: V1112 = NOT 0xff0000000000000000000000000000000000000000
0x11c0: V1113 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1109
0x11c3: V1114 = ISZERO 0x0
0x11c4: V1115 = ISZERO 0x1
0x11c5: V1116 = MUL 0x0 0x10000000000000000000000000000000000000000
0x11c6: V1117 = OR 0x0 V1113
0x11c8: S[0x0] = V1117
0x11cd: JUMP 0x396
---
Entry stack: [V11, 0x396, V242, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x11ce
[0x11ce:0x11f2]
---
Predecessors: [0x3bc]
Successors: [0x3c5]
---
0x11ce JUMPDEST
0x11cf PUSH1 0x0
0x11d1 DUP1
0x11d2 SWAP1
0x11d3 SLOAD
0x11d4 SWAP1
0x11d5 PUSH2 0x100
0x11d8 EXP
0x11d9 SWAP1
0x11da DIV
0x11db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f0 AND
0x11f1 DUP2
0x11f2 JUMP
---
0x11ce: JUMPDEST 
0x11cf: V1118 = 0x0
0x11d3: V1119 = S[0x0]
0x11d5: V1120 = 0x100
0x11d8: V1121 = EXP 0x100 0x0
0x11da: V1122 = DIV V1119 0x1
0x11db: V1123 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f0: V1124 = AND 0xffffffffffffffffffffffffffffffffffffffff V1122
0x11f2: JUMP 0x3c5
---
Entry stack: [V11, 0x3c5]
Stack pops: 1
Stack additions: [S0, V1124]
Exit stack: [V11, 0x3c5, V1124]

================================

Block 0x11f3
[0x11f3:0x1216]
---
Predecessors: [0x413]
Successors: [0x41c]
---
0x11f3 JUMPDEST
0x11f4 PUSH32 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x1215 DUP2
0x1216 JUMP
---
0x11f3: JUMPDEST 
0x11f4: V1125 = 0x42616e636f724e6574776f726b00000000000000000000000000000000000000
0x1216: JUMP 0x41c
---
Entry stack: [V11, 0x41c]
Stack pops: 1
Stack additions: [S0, 0x42616e636f724e6574776f726b00000000000000000000000000000000000000]
Exit stack: [V11, 0x41c, 0x42616e636f724e6574776f726b00000000000000000000000000000000000000]

================================

Block 0x1217
[0x1217:0x126d]
---
Predecessors: [0x446]
Successors: [0x126e, 0x1272]
---
0x1217 JUMPDEST
0x1218 PUSH1 0x0
0x121a DUP1
0x121b SWAP1
0x121c SLOAD
0x121d SWAP1
0x121e PUSH2 0x100
0x1221 EXP
0x1222 SWAP1
0x1223 DIV
0x1224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1239 AND
0x123a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124f AND
0x1250 CALLER
0x1251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1266 AND
0x1267 EQ
0x1268 ISZERO
0x1269 ISZERO
0x126a PUSH2 0x1272
0x126d JUMPI
---
0x1217: JUMPDEST 
0x1218: V1126 = 0x0
0x121c: V1127 = S[0x0]
0x121e: V1128 = 0x100
0x1221: V1129 = EXP 0x100 0x0
0x1223: V1130 = DIV V1127 0x1
0x1224: V1131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1239: V1132 = AND 0xffffffffffffffffffffffffffffffffffffffff V1130
0x123a: V1133 = 0xffffffffffffffffffffffffffffffffffffffff
0x124f: V1134 = AND 0xffffffffffffffffffffffffffffffffffffffff V1132
0x1250: V1135 = CALLER
0x1251: V1136 = 0xffffffffffffffffffffffffffffffffffffffff
0x1266: V1137 = AND 0xffffffffffffffffffffffffffffffffffffffff V1135
0x1267: V1138 = EQ V1137 V1134
0x1268: V1139 = ISZERO V1138
0x1269: V1140 = ISZERO V1139
0x126a: V1141 = 0x1272
0x126d: JUMPI 0x1272 V1140
---
Entry stack: [V11, 0x465, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x465, V302]

================================

Block 0x126e
[0x126e:0x1271]
---
Predecessors: [0x1217]
Successors: []
---
0x126e PUSH1 0x0
0x1270 DUP1
0x1271 REVERT
---
0x126e: V1142 = 0x0
0x1271: REVERT 0x0 0x0
---
Entry stack: [V11, 0x465, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x465, V302]

================================

Block 0x1272
[0x1272:0x127b]
---
Predecessors: [0x1217]
Successors: [0x465]
---
0x1272 JUMPDEST
0x1273 DUP1
0x1274 PUSH1 0x3
0x1276 DUP2
0x1277 SWAP1
0x1278 SSTORE
0x1279 POP
0x127a POP
0x127b JUMP
---
0x1272: JUMPDEST 
0x1274: V1143 = 0x3
0x1278: S[0x3] = V302
0x127b: JUMP 0x465
---
Entry stack: [V11, 0x465, V302]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x127c
[0x127c:0x1289]
---
Predecessors: [0x473]
Successors: [0x128a, 0x128b]
---
0x127c JUMPDEST
0x127d PUSH1 0x1
0x127f DUP2
0x1280 DUP2
0x1281 SLOAD
0x1282 DUP2
0x1283 LT
0x1284 ISZERO
0x1285 ISZERO
0x1286 PUSH2 0x128b
0x1289 JUMPI
---
0x127c: JUMPDEST 
0x127d: V1144 = 0x1
0x1281: V1145 = S[0x1]
0x1283: V1146 = LT V315 V1145
0x1284: V1147 = ISZERO V1146
0x1285: V1148 = ISZERO V1147
0x1286: V1149 = 0x128b
0x1289: JUMPI 0x128b V1148
---
Entry stack: [V11, 0x492, V315]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x492, V315, 0x1, V315]

================================

Block 0x128a
[0x128a:0x128a]
---
Predecessors: [0x127c]
Successors: []
---
0x128a INVALID
---
0x128a: INVALID 
---
Entry stack: [V11, 0x492, V315, 0x1, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x492, V315, 0x1, V315]

================================

Block 0x128b
[0x128b:0x12b9]
---
Predecessors: [0x127c]
Successors: [0x492]
---
0x128b JUMPDEST
0x128c SWAP1
0x128d PUSH1 0x0
0x128f MSTORE
0x1290 PUSH1 0x20
0x1292 PUSH1 0x0
0x1294 SHA3
0x1295 ADD
0x1296 PUSH1 0x0
0x1298 SWAP2
0x1299 POP
0x129a SLOAD
0x129b SWAP1
0x129c PUSH2 0x100
0x129f EXP
0x12a0 SWAP1
0x12a1 DIV
0x12a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b7 AND
0x12b8 DUP2
0x12b9 JUMP
---
0x128b: JUMPDEST 
0x128d: V1150 = 0x0
0x128f: M[0x0] = 0x1
0x1290: V1151 = 0x20
0x1292: V1152 = 0x0
0x1294: V1153 = SHA3 0x0 0x20
0x1295: V1154 = ADD V1153 V315
0x1296: V1155 = 0x0
0x129a: V1156 = S[V1154]
0x129c: V1157 = 0x100
0x129f: V1158 = EXP 0x100 0x0
0x12a1: V1159 = DIV V1156 0x1
0x12a2: V1160 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b7: V1161 = AND 0xffffffffffffffffffffffffffffffffffffffff V1159
0x12b9: JUMP 0x492
---
Entry stack: [V11, 0x492, V315, 0x1, V315]
Stack pops: 4
Stack additions: [S3, V1161]
Exit stack: [V11, 0x492, V1161]

================================

Block 0x12ba
[0x12ba:0x1310]
---
Predecessors: [0x4e0]
Successors: [0x1311, 0x1315]
---
0x12ba JUMPDEST
0x12bb PUSH1 0x0
0x12bd DUP1
0x12be SWAP1
0x12bf SLOAD
0x12c0 SWAP1
0x12c1 PUSH2 0x100
0x12c4 EXP
0x12c5 SWAP1
0x12c6 DIV
0x12c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12dc AND
0x12dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f2 AND
0x12f3 CALLER
0x12f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1309 AND
0x130a EQ
0x130b ISZERO
0x130c ISZERO
0x130d PUSH2 0x1315
0x1310 JUMPI
---
0x12ba: JUMPDEST 
0x12bb: V1162 = 0x0
0x12bf: V1163 = S[0x0]
0x12c1: V1164 = 0x100
0x12c4: V1165 = EXP 0x100 0x0
0x12c6: V1166 = DIV V1163 0x1
0x12c7: V1167 = 0xffffffffffffffffffffffffffffffffffffffff
0x12dc: V1168 = AND 0xffffffffffffffffffffffffffffffffffffffff V1166
0x12dd: V1169 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f2: V1170 = AND 0xffffffffffffffffffffffffffffffffffffffff V1168
0x12f3: V1171 = CALLER
0x12f4: V1172 = 0xffffffffffffffffffffffffffffffffffffffff
0x1309: V1173 = AND 0xffffffffffffffffffffffffffffffffffffffff V1171
0x130a: V1174 = EQ V1173 V1170
0x130b: V1175 = ISZERO V1174
0x130c: V1176 = ISZERO V1175
0x130d: V1177 = 0x1315
0x1310: JUMPI 0x1315 V1176
---
Entry stack: [V11, 0x515, V341]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x515, V341]

================================

Block 0x1311
[0x1311:0x1314]
---
Predecessors: [0x12ba]
Successors: []
---
0x1311 PUSH1 0x0
0x1313 DUP1
0x1314 REVERT
---
0x1311: V1178 = 0x0
0x1314: REVERT 0x0 0x0
---
Entry stack: [V11, 0x515, V341]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x515, V341]

================================

Block 0x1315
[0x1315:0x1358]
---
Predecessors: [0x12ba]
Successors: [0x515]
---
0x1315 JUMPDEST
0x1316 DUP1
0x1317 PUSH1 0x4
0x1319 PUSH1 0x0
0x131b PUSH2 0x100
0x131e EXP
0x131f DUP2
0x1320 SLOAD
0x1321 DUP2
0x1322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1337 MUL
0x1338 NOT
0x1339 AND
0x133a SWAP1
0x133b DUP4
0x133c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1351 AND
0x1352 MUL
0x1353 OR
0x1354 SWAP1
0x1355 SSTORE
0x1356 POP
0x1357 POP
0x1358 JUMP
---
0x1315: JUMPDEST 
0x1317: V1179 = 0x4
0x1319: V1180 = 0x0
0x131b: V1181 = 0x100
0x131e: V1182 = EXP 0x100 0x0
0x1320: V1183 = S[0x4]
0x1322: V1184 = 0xffffffffffffffffffffffffffffffffffffffff
0x1337: V1185 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1338: V1186 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1339: V1187 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1183
0x133c: V1188 = 0xffffffffffffffffffffffffffffffffffffffff
0x1351: V1189 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x1352: V1190 = MUL V1189 0x1
0x1353: V1191 = OR V1190 V1187
0x1355: S[0x4] = V1191
0x1358: JUMP 0x515
---
Entry stack: [V11, 0x515, V341]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1359
[0x1359:0x13af]
---
Predecessors: [0x523]
Successors: [0x13b0, 0x13b4]
---
0x1359 JUMPDEST
0x135a PUSH1 0x0
0x135c DUP1
0x135d SWAP1
0x135e SLOAD
0x135f SWAP1
0x1360 PUSH2 0x100
0x1363 EXP
0x1364 SWAP1
0x1365 DIV
0x1366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x137b AND
0x137c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1391 AND
0x1392 CALLER
0x1393 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13a8 AND
0x13a9 EQ
0x13aa ISZERO
0x13ab ISZERO
0x13ac PUSH2 0x13b4
0x13af JUMPI
---
0x1359: JUMPDEST 
0x135a: V1192 = 0x0
0x135e: V1193 = S[0x0]
0x1360: V1194 = 0x100
0x1363: V1195 = EXP 0x100 0x0
0x1365: V1196 = DIV V1193 0x1
0x1366: V1197 = 0xffffffffffffffffffffffffffffffffffffffff
0x137b: V1198 = AND 0xffffffffffffffffffffffffffffffffffffffff V1196
0x137c: V1199 = 0xffffffffffffffffffffffffffffffffffffffff
0x1391: V1200 = AND 0xffffffffffffffffffffffffffffffffffffffff V1198
0x1392: V1201 = CALLER
0x1393: V1202 = 0xffffffffffffffffffffffffffffffffffffffff
0x13a8: V1203 = AND 0xffffffffffffffffffffffffffffffffffffffff V1201
0x13a9: V1204 = EQ V1203 V1200
0x13aa: V1205 = ISZERO V1204
0x13ab: V1206 = ISZERO V1205
0x13ac: V1207 = 0x13b4
0x13af: JUMPI 0x13b4 V1206
---
Entry stack: [V11, 0x558, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x558, V356]

================================

Block 0x13b0
[0x13b0:0x13b3]
---
Predecessors: [0x1359]
Successors: []
---
0x13b0 PUSH1 0x0
0x13b2 DUP1
0x13b3 REVERT
---
0x13b0: V1208 = 0x0
0x13b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x558, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x558, V356]

================================

Block 0x13b4
[0x13b4:0x13bc]
---
Predecessors: [0x1359]
Successors: [0x13f8]
---
0x13b4 JUMPDEST
0x13b5 PUSH2 0x13bd
0x13b8 DUP2
0x13b9 PUSH2 0x13f8
0x13bc JUMP
---
0x13b4: JUMPDEST 
0x13b5: V1209 = 0x13bd
0x13b9: V1210 = 0x13f8
0x13bc: JUMP 0x13f8
---
Entry stack: [V11, 0x558, V356]
Stack pops: 1
Stack additions: [S0, 0x13bd, S0]
Exit stack: [V11, 0x558, V356, 0x13bd, V356]

================================

Block 0x13bd
[0x13bd:0x13bf]
---
Predecessors: [0x1434]
Successors: [0x558]
---
0x13bd JUMPDEST
0x13be POP
0x13bf JUMP
---
0x13bd: JUMPDEST 
0x13bf: JUMP 0x558
---
Entry stack: [V11, 0x558, V356]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x13c0
[0x13c0:0x13ca]
---
Predecessors: [0x7a4]
Successors: [0x13cb, 0x13d3]
---
0x13c0 JUMPDEST
0x13c1 PUSH1 0x0
0x13c3 DUP1
0x13c4 DUP4
0x13c5 EQ
0x13c6 ISZERO
0x13c7 PUSH2 0x13d3
0x13ca JUMPI
---
0x13c0: JUMPDEST 
0x13c1: V1211 = 0x0
0x13c5: V1212 = EQ V519 0x0
0x13c6: V1213 = ISZERO V1212
0x13c7: V1214 = 0x13d3
0x13ca: JUMPI 0x13d3 V1213
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, 0x0]

================================

Block 0x13cb
[0x13cb:0x13d2]
---
Predecessors: [0x13c0]
Successors: [0x13f2]
---
0x13cb PUSH1 0x0
0x13cd SWAP1
0x13ce POP
0x13cf PUSH2 0x13f2
0x13d2 JUMP
---
0x13cb: V1215 = 0x0
0x13cf: V1216 = 0x13f2
0x13d2: JUMP 0x13f2
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, 0x0]

================================

Block 0x13d3
[0x13d3:0x13e2]
---
Predecessors: [0x13c0]
Successors: [0x13e3, 0x13e4]
---
0x13d3 JUMPDEST
0x13d4 DUP2
0x13d5 DUP4
0x13d6 MUL
0x13d7 SWAP1
0x13d8 POP
0x13d9 DUP2
0x13da DUP4
0x13db DUP3
0x13dc DUP2
0x13dd ISZERO
0x13de ISZERO
0x13df PUSH2 0x13e4
0x13e2 JUMPI
---
0x13d3: JUMPDEST 
0x13d6: V1217 = MUL V519 V517
0x13dd: V1218 = ISZERO V519
0x13de: V1219 = ISZERO V1218
0x13df: V1220 = 0x13e4
0x13e2: JUMPI 0x13e4 V1219
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1217, S1, S2, V1217]
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217, V517, V519, V1217]

================================

Block 0x13e3
[0x13e3:0x13e3]
---
Predecessors: [0x13d3]
Successors: []
---
0x13e3 INVALID
---
0x13e3: INVALID 
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217, V517, V519, V1217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217, V517, V519, V1217]

================================

Block 0x13e4
[0x13e4:0x13ec]
---
Predecessors: [0x13d3]
Successors: [0x13ed, 0x13ee]
---
0x13e4 JUMPDEST
0x13e5 DIV
0x13e6 EQ
0x13e7 ISZERO
0x13e8 ISZERO
0x13e9 PUSH2 0x13ee
0x13ec JUMPI
---
0x13e4: JUMPDEST 
0x13e5: V1221 = DIV V1217 V519
0x13e6: V1222 = EQ V1221 V517
0x13e7: V1223 = ISZERO V1222
0x13e8: V1224 = ISZERO V1223
0x13e9: V1225 = 0x13ee
0x13ec: JUMPI 0x13ee V1224
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217, V517, V519, V1217]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217]

================================

Block 0x13ed
[0x13ed:0x13ed]
---
Predecessors: [0x13e4]
Successors: []
---
0x13ed INVALID
---
0x13ed: INVALID 
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217]

================================

Block 0x13ee
[0x13ee:0x13f1]
---
Predecessors: [0x13e4]
Successors: [0x13f2]
---
0x13ee JUMPDEST
0x13ef DUP1
0x13f0 SWAP1
0x13f1 POP
---
0x13ee: JUMPDEST 
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, V1217]

================================

Block 0x13f2
[0x13f2:0x13f7]
---
Predecessors: [0x13cb, 0x13ee]
Successors: [0x7cc]
---
0x13f2 JUMPDEST
0x13f3 SWAP3
0x13f4 SWAP2
0x13f5 POP
0x13f6 POP
0x13f7 JUMP
---
0x13f2: JUMPDEST 
0x13f7: JUMP 0x7cc
---
Entry stack: [V11, 0x11a, V513, 0x0, 0x0, 0x7cc, V519, V517, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x11a, V513, 0x0, 0x0, S0]

================================

Block 0x13f8
[0x13f8:0x142f]
---
Predecessors: [0x13b4]
Successors: [0x1430, 0x1434]
---
0x13f8 JUMPDEST
0x13f9 PUSH1 0x0
0x13fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1410 AND
0x1411 DUP2
0x1412 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1427 AND
0x1428 EQ
0x1429 ISZERO
0x142a ISZERO
0x142b ISZERO
0x142c PUSH2 0x1434
0x142f JUMPI
---
0x13f8: JUMPDEST 
0x13f9: V1226 = 0x0
0x13fb: V1227 = 0xffffffffffffffffffffffffffffffffffffffff
0x1410: V1228 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1412: V1229 = 0xffffffffffffffffffffffffffffffffffffffff
0x1427: V1230 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x1428: V1231 = EQ V1230 0x0
0x1429: V1232 = ISZERO V1231
0x142a: V1233 = ISZERO V1232
0x142b: V1234 = ISZERO V1233
0x142c: V1235 = 0x1434
0x142f: JUMPI 0x1434 V1234
---
Entry stack: [V11, 0x558, V356, 0x13bd, V356]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x558, V356, 0x13bd, V356]

================================

Block 0x1430
[0x1430:0x1433]
---
Predecessors: [0x13f8]
Successors: []
---
0x1430 PUSH1 0x0
0x1432 DUP1
0x1433 REVERT
---
0x1430: V1236 = 0x0
0x1433: REVERT 0x0 0x0
---
Entry stack: [V11, 0x558, V356, 0x13bd, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x558, V356, 0x13bd, V356]

================================

Block 0x1434
[0x1434:0x14f1]
---
Predecessors: [0x13f8]
Successors: [0x13bd]
---
0x1434 JUMPDEST
0x1435 DUP1
0x1436 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144b AND
0x144c PUSH1 0x0
0x144e DUP1
0x144f SWAP1
0x1450 SLOAD
0x1451 SWAP1
0x1452 PUSH2 0x100
0x1455 EXP
0x1456 SWAP1
0x1457 DIV
0x1458 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146d AND
0x146e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1483 AND
0x1484 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x14a5 PUSH1 0x40
0x14a7 MLOAD
0x14a8 PUSH1 0x40
0x14aa MLOAD
0x14ab DUP1
0x14ac SWAP2
0x14ad SUB
0x14ae SWAP1
0x14af LOG3
0x14b0 DUP1
0x14b1 PUSH1 0x0
0x14b3 DUP1
0x14b4 PUSH2 0x100
0x14b7 EXP
0x14b8 DUP2
0x14b9 SLOAD
0x14ba DUP2
0x14bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d0 MUL
0x14d1 NOT
0x14d2 AND
0x14d3 SWAP1
0x14d4 DUP4
0x14d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14ea AND
0x14eb MUL
0x14ec OR
0x14ed SWAP1
0x14ee SSTORE
0x14ef POP
0x14f0 POP
0x14f1 JUMP
---
0x1434: JUMPDEST 
0x1436: V1237 = 0xffffffffffffffffffffffffffffffffffffffff
0x144b: V1238 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x144c: V1239 = 0x0
0x1450: V1240 = S[0x0]
0x1452: V1241 = 0x100
0x1455: V1242 = EXP 0x100 0x0
0x1457: V1243 = DIV V1240 0x1
0x1458: V1244 = 0xffffffffffffffffffffffffffffffffffffffff
0x146d: V1245 = AND 0xffffffffffffffffffffffffffffffffffffffff V1243
0x146e: V1246 = 0xffffffffffffffffffffffffffffffffffffffff
0x1483: V1247 = AND 0xffffffffffffffffffffffffffffffffffffffff V1245
0x1484: V1248 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x14a5: V1249 = 0x40
0x14a7: V1250 = M[0x40]
0x14a8: V1251 = 0x40
0x14aa: V1252 = M[0x40]
0x14ad: V1253 = SUB V1250 V1252
0x14af: LOG V1252 V1253 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1247 V1238
0x14b1: V1254 = 0x0
0x14b4: V1255 = 0x100
0x14b7: V1256 = EXP 0x100 0x0
0x14b9: V1257 = S[0x0]
0x14bb: V1258 = 0xffffffffffffffffffffffffffffffffffffffff
0x14d0: V1259 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x14d1: V1260 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x14d2: V1261 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1257
0x14d5: V1262 = 0xffffffffffffffffffffffffffffffffffffffff
0x14ea: V1263 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x14eb: V1264 = MUL V1263 0x1
0x14ec: V1265 = OR V1264 V1261
0x14ee: S[0x0] = V1265
0x14f1: JUMP 0x13bd
---
Entry stack: [V11, 0x558, V356, 0x13bd, V356]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x558, V356]

================================

Block 0x14f2
[0x14f2:0x150b]
---
Predecessors: [0xc8b]
Successors: [0x150c, 0x156b]
---
0x14f2 JUMPDEST
0x14f3 DUP3
0x14f4 DUP1
0x14f5 SLOAD
0x14f6 DUP3
0x14f7 DUP3
0x14f8 SSTORE
0x14f9 SWAP1
0x14fa PUSH1 0x0
0x14fc MSTORE
0x14fd PUSH1 0x20
0x14ff PUSH1 0x0
0x1501 SHA3
0x1502 SWAP1
0x1503 DUP2
0x1504 ADD
0x1505 SWAP3
0x1506 DUP3
0x1507 ISZERO
0x1508 PUSH2 0x156b
0x150b JUMPI
---
0x14f2: JUMPDEST 
0x14f5: V1266 = S[0x1]
0x14f8: S[0x1] = V790
0x14fa: V1267 = 0x0
0x14fc: M[0x0] = 0x1
0x14fd: V1268 = 0x20
0x14ff: V1269 = 0x0
0x1501: V1270 = SHA3 0x0 0x20
0x1504: V1271 = ADD V1270 V1266
0x1507: V1272 = ISZERO V790
0x1508: V1273 = 0x156b
0x150b: JUMPI 0x156b V1272
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, V792, V790]
Stack pops: 3
Stack additions: [S2, V1271, S0, V1270, S1]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, V790, V1270, V792]

================================

Block 0x150c
[0x150c:0x1511]
---
Predecessors: [0x14f2]
Successors: [0x1512]
---
0x150c SWAP2
0x150d PUSH1 0x20
0x150f MUL
0x1510 DUP3
0x1511 ADD
---
0x150d: V1274 = 0x20
0x150f: V1275 = MUL 0x20 V790
0x1511: V1276 = ADD V792 V1275
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, V790, V1270, V792]
Stack pops: 3
Stack additions: [S0, S1, V1276]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, V792, V1270, V1276]

================================

Block 0x1512
[0x1512:0x151a]
---
Predecessors: [0x150c, 0x151b]
Successors: [0x151b, 0x156a]
---
0x1512 JUMPDEST
0x1513 DUP3
0x1514 DUP2
0x1515 GT
0x1516 ISZERO
0x1517 PUSH2 0x156a
0x151a JUMPI
---
0x1512: JUMPDEST 
0x1515: V1277 = GT V1276 S2
0x1516: V1278 = ISZERO V1277
0x1517: V1279 = 0x156a
0x151a: JUMPI 0x156a V1278
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, S2, S1, V1276]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, S2, S1, V1276]

================================

Block 0x151b
[0x151b:0x1569]
---
Predecessors: [0x1512]
Successors: [0x1512]
---
0x151b DUP3
0x151c MLOAD
0x151d DUP3
0x151e PUSH1 0x0
0x1520 PUSH2 0x100
0x1523 EXP
0x1524 DUP2
0x1525 SLOAD
0x1526 DUP2
0x1527 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153c MUL
0x153d NOT
0x153e AND
0x153f SWAP1
0x1540 DUP4
0x1541 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1556 AND
0x1557 MUL
0x1558 OR
0x1559 SWAP1
0x155a SSTORE
0x155b POP
0x155c SWAP2
0x155d PUSH1 0x20
0x155f ADD
0x1560 SWAP2
0x1561 SWAP1
0x1562 PUSH1 0x1
0x1564 ADD
0x1565 SWAP1
0x1566 PUSH2 0x1512
0x1569 JUMP
---
0x151c: V1280 = M[S2]
0x151e: V1281 = 0x0
0x1520: V1282 = 0x100
0x1523: V1283 = EXP 0x100 0x0
0x1525: V1284 = S[S1]
0x1527: V1285 = 0xffffffffffffffffffffffffffffffffffffffff
0x153c: V1286 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x153d: V1287 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x153e: V1288 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1284
0x1541: V1289 = 0xffffffffffffffffffffffffffffffffffffffff
0x1556: V1290 = AND 0xffffffffffffffffffffffffffffffffffffffff V1280
0x1557: V1291 = MUL V1290 0x1
0x1558: V1292 = OR V1291 V1288
0x155a: S[S1] = V1292
0x155d: V1293 = 0x20
0x155f: V1294 = ADD 0x20 S2
0x1562: V1295 = 0x1
0x1564: V1296 = ADD 0x1 S1
0x1566: V1297 = 0x1512
0x1569: JUMP 0x1512
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, S2, S1, V1276]
Stack pops: 3
Stack additions: [V1294, V1296, S0]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, V1294, V1296, V1276]

================================

Block 0x156a
[0x156a:0x156a]
---
Predecessors: [0x1512]
Successors: [0x156b]
---
0x156a JUMPDEST
---
0x156a: JUMPDEST 
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, S2, S1, V1276]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, S2, S1, V1276]

================================

Block 0x156b
[0x156b:0x1577]
---
Predecessors: [0x14f2, 0x156a]
Successors: [0x157c]
---
0x156b JUMPDEST
0x156c POP
0x156d SWAP1
0x156e POP
0x156f PUSH2 0x1578
0x1572 SWAP2
0x1573 SWAP1
0x1574 PUSH2 0x157c
0x1577 JUMP
---
0x156b: JUMPDEST 
0x156f: V1298 = 0x1578
0x1574: V1299 = 0x157c
0x1577: JUMP 0x157c
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1578, S3, S1]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, V1271, S1]

================================

Block 0x1578
[0x1578:0x157b]
---
Predecessors: [0x15bc]
Successors: [0xca1]
---
0x1578 JUMPDEST
0x1579 POP
0x157a SWAP1
0x157b JUMP
---
0x1578: JUMPDEST 
0x157b: JUMP 0xca1
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x2e2, V186, 0x1]

================================

Block 0x157c
[0x157c:0x1581]
---
Predecessors: [0x156b]
Successors: [0x1582]
---
0x157c JUMPDEST
0x157d PUSH2 0x15bc
0x1580 SWAP2
0x1581 SWAP1
---
0x157c: JUMPDEST 
0x157d: V1300 = 0x15bc
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, V1271, S0]
Stack pops: 2
Stack additions: [0x15bc, S1, S0]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, 0x15bc, V1271, S0]

================================

Block 0x1582
[0x1582:0x158a]
---
Predecessors: [0x157c, 0x158b]
Successors: [0x158b, 0x15b8]
---
0x1582 JUMPDEST
0x1583 DUP1
0x1584 DUP3
0x1585 GT
0x1586 ISZERO
0x1587 PUSH2 0x15b8
0x158a JUMPI
---
0x1582: JUMPDEST 
0x1585: V1301 = GT V1271 S0
0x1586: V1302 = ISZERO V1301
0x1587: V1303 = 0x15b8
0x158a: JUMPI 0x15b8 V1302
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, 0x15bc, V1271, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, 0x15bc, V1271, S0]

================================

Block 0x158b
[0x158b:0x15b7]
---
Predecessors: [0x1582]
Successors: [0x1582]
---
0x158b PUSH1 0x0
0x158d DUP2
0x158e DUP2
0x158f PUSH2 0x100
0x1592 EXP
0x1593 DUP2
0x1594 SLOAD
0x1595 SWAP1
0x1596 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15ab MUL
0x15ac NOT
0x15ad AND
0x15ae SWAP1
0x15af SSTORE
0x15b0 POP
0x15b1 PUSH1 0x1
0x15b3 ADD
0x15b4 PUSH2 0x1582
0x15b7 JUMP
---
0x158b: V1304 = 0x0
0x158f: V1305 = 0x100
0x1592: V1306 = EXP 0x100 0x0
0x1594: V1307 = S[S0]
0x1596: V1308 = 0xffffffffffffffffffffffffffffffffffffffff
0x15ab: V1309 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x15ac: V1310 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x15ad: V1311 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1307
0x15af: S[S0] = V1311
0x15b1: V1312 = 0x1
0x15b3: V1313 = ADD 0x1 S0
0x15b4: V1314 = 0x1582
0x15b7: JUMP 0x1582
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, 0x15bc, V1271, S0]
Stack pops: 1
Stack additions: [V1313]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, 0x15bc, V1271, V1313]

================================

Block 0x15b8
[0x15b8:0x15bb]
---
Predecessors: [0x1582]
Successors: [0x15bc]
---
0x15b8 JUMPDEST
0x15b9 POP
0x15ba SWAP1
0x15bb JUMP
---
0x15b8: JUMPDEST 
0x15bb: JUMP 0x15bc
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, 0x15bc, V1271, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, V1271]

================================

Block 0x15bc
[0x15bc:0x15be]
---
Predecessors: [0x15b8]
Successors: [0x1578]
---
0x15bc JUMPDEST
0x15bd SWAP1
0x15be JUMP
---
0x15bc: JUMPDEST 
0x15be: JUMP 0x1578
---
Entry stack: [V11, 0x2e2, V186, 0xca1, 0x1, 0x1578, V1271]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x2e2, V186, 0xca1, 0x1, V1271]

================================

Block 0x15bf
[0x15bf:0x15f7]
---
Predecessors: []
Successors: [0x15f8]
---
0x15bf STOP
0x15c0 LOG1
0x15c1 PUSH6 0x627a7a723058
0x15c8 SHA3
0x15c9 SWAP6
0x15ca MISSING 0xcf
0x15cb MISSING 0xa7
0x15cc PUSH4 0x3b2c0f46
0x15d1 DUP12
0x15d2 MISSING 0xd3
0x15d3 MISSING 0xe5
0x15d4 XOR
0x15d5 MISSING 0xc0
0x15d6 MISSING 0xf8
0x15d7 PUSH22 0xb7b443006f18d0c67acd70834a7e7f1fd40029608060
0x15ee BLOCKHASH
0x15ef MSTORE
0x15f0 PUSH1 0x4
0x15f2 CALLDATASIZE
0x15f3 LT
0x15f4 PUSH2 0x57
0x15f7 JUMPI
---
0x15bf: STOP 
0x15c0: LOG S0 S1 S2
0x15c1: V1315 = 0x627a7a723058
0x15c8: V1316 = SHA3 0x627a7a723058 S3
0x15ca: MISSING 0xcf
0x15cb: MISSING 0xa7
0x15cc: V1317 = 0x3b2c0f46
0x15d2: MISSING 0xd3
0x15d3: MISSING 0xe5
0x15d4: V1318 = XOR S0 S1
0x15d5: MISSING 0xc0
0x15d6: MISSING 0xf8
0x15d7: V1319 = 0xb7b443006f18d0c67acd70834a7e7f1fd40029608060
0x15ee: V1320 = BLOCKHASH 0xb7b443006f18d0c67acd70834a7e7f1fd40029608060
0x15ef: M[V1320] = S0
0x15f0: V1321 = 0x4
0x15f2: V1322 = CALLDATASIZE
0x15f3: V1323 = LT V1322 0x4
0x15f4: V1324 = 0x57
0x15f7: THROWI V1323
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, S4, S5, S6, S7, S8, V1316, S10, 0x3b2c0f46, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V1318]
Exit stack: []

================================

Block 0x15f8
[0x15f8:0x162b]
---
Predecessors: [0x15bf]
Successors: [0x162c]
---
0x15f8 PUSH1 0x0
0x15fa CALLDATALOAD
0x15fb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1619 SWAP1
0x161a DIV
0x161b PUSH4 0xffffffff
0x1620 AND
0x1621 DUP1
0x1622 PUSH4 0x715018a6
0x1627 EQ
0x1628 PUSH2 0x5c
0x162b JUMPI
---
0x15f8: V1325 = 0x0
0x15fa: V1326 = CALLDATALOAD 0x0
0x15fb: V1327 = 0x100000000000000000000000000000000000000000000000000000000
0x161a: V1328 = DIV V1326 0x100000000000000000000000000000000000000000000000000000000
0x161b: V1329 = 0xffffffff
0x1620: V1330 = AND 0xffffffff V1328
0x1622: V1331 = 0x715018a6
0x1627: V1332 = EQ 0x715018a6 V1330
0x1628: V1333 = 0x5c
0x162b: THROWI V1332
---
Entry stack: []
Stack pops: 0
Stack additions: [V1330]
Exit stack: [V1330]

================================

Block 0x162c
[0x162c:0x1636]
---
Predecessors: [0x15f8]
Successors: [0x1637]
---
0x162c DUP1
0x162d PUSH4 0x8da5cb5b
0x1632 EQ
0x1633 PUSH2 0x73
0x1636 JUMPI
---
0x162d: V1334 = 0x8da5cb5b
0x1632: V1335 = EQ 0x8da5cb5b V1330
0x1633: V1336 = 0x73
0x1636: THROWI V1335
---
Entry stack: [V1330]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1330]

================================

Block 0x1637
[0x1637:0x1641]
---
Predecessors: [0x162c]
Successors: [0x1642]
---
0x1637 DUP1
0x1638 PUSH4 0xf2fde38b
0x163d EQ
0x163e PUSH2 0xca
0x1641 JUMPI
---
0x1638: V1337 = 0xf2fde38b
0x163d: V1338 = EQ 0xf2fde38b V1330
0x163e: V1339 = 0xca
0x1641: THROWI V1338
---
Entry stack: [V1330]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1330]

================================

Block 0x1642
[0x1642:0x164e]
---
Predecessors: [0x1637]
Successors: [0x164f]
---
0x1642 JUMPDEST
0x1643 PUSH1 0x0
0x1645 DUP1
0x1646 REVERT
0x1647 JUMPDEST
0x1648 CALLVALUE
0x1649 DUP1
0x164a ISZERO
0x164b PUSH2 0x68
0x164e JUMPI
---
0x1642: JUMPDEST 
0x1643: V1340 = 0x0
0x1646: REVERT 0x0 0x0
0x1647: JUMPDEST 
0x1648: V1341 = CALLVALUE
0x164a: V1342 = ISZERO V1341
0x164b: V1343 = 0x68
0x164e: THROWI V1342
---
Entry stack: [V1330]
Stack pops: 0
Stack additions: [V1341]
Exit stack: []

================================

Block 0x164f
[0x164f:0x1665]
---
Predecessors: [0x1642]
Successors: [0x1666]
---
0x164f PUSH1 0x0
0x1651 DUP1
0x1652 REVERT
0x1653 JUMPDEST
0x1654 POP
0x1655 PUSH2 0x71
0x1658 PUSH2 0x10d
0x165b JUMP
0x165c JUMPDEST
0x165d STOP
0x165e JUMPDEST
0x165f CALLVALUE
0x1660 DUP1
0x1661 ISZERO
0x1662 PUSH2 0x7f
0x1665 JUMPI
---
0x164f: V1344 = 0x0
0x1652: REVERT 0x0 0x0
0x1653: JUMPDEST 
0x1655: V1345 = 0x71
0x1658: V1346 = 0x10d
0x165b: THROW 
0x165c: JUMPDEST 
0x165d: STOP 
0x165e: JUMPDEST 
0x165f: V1347 = CALLVALUE
0x1661: V1348 = ISZERO V1347
0x1662: V1349 = 0x7f
0x1665: THROWI V1348
---
Entry stack: [V1341]
Stack pops: 0
Stack additions: [0x71, V1347]
Exit stack: []

================================

Block 0x1666
[0x1666:0x16bc]
---
Predecessors: [0x164f]
Successors: [0x16bd]
---
0x1666 PUSH1 0x0
0x1668 DUP1
0x1669 REVERT
0x166a JUMPDEST
0x166b POP
0x166c PUSH2 0x88
0x166f PUSH2 0x20f
0x1672 JUMP
0x1673 JUMPDEST
0x1674 PUSH1 0x40
0x1676 MLOAD
0x1677 DUP1
0x1678 DUP3
0x1679 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x168e AND
0x168f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16a4 AND
0x16a5 DUP2
0x16a6 MSTORE
0x16a7 PUSH1 0x20
0x16a9 ADD
0x16aa SWAP2
0x16ab POP
0x16ac POP
0x16ad PUSH1 0x40
0x16af MLOAD
0x16b0 DUP1
0x16b1 SWAP2
0x16b2 SUB
0x16b3 SWAP1
0x16b4 RETURN
0x16b5 JUMPDEST
0x16b6 CALLVALUE
0x16b7 DUP1
0x16b8 ISZERO
0x16b9 PUSH2 0xd6
0x16bc JUMPI
---
0x1666: V1350 = 0x0
0x1669: REVERT 0x0 0x0
0x166a: JUMPDEST 
0x166c: V1351 = 0x88
0x166f: V1352 = 0x20f
0x1672: THROW 
0x1673: JUMPDEST 
0x1674: V1353 = 0x40
0x1676: V1354 = M[0x40]
0x1679: V1355 = 0xffffffffffffffffffffffffffffffffffffffff
0x168e: V1356 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x168f: V1357 = 0xffffffffffffffffffffffffffffffffffffffff
0x16a4: V1358 = AND 0xffffffffffffffffffffffffffffffffffffffff V1356
0x16a6: M[V1354] = V1358
0x16a7: V1359 = 0x20
0x16a9: V1360 = ADD 0x20 V1354
0x16ad: V1361 = 0x40
0x16af: V1362 = M[0x40]
0x16b2: V1363 = SUB V1360 V1362
0x16b4: RETURN V1362 V1363
0x16b5: JUMPDEST 
0x16b6: V1364 = CALLVALUE
0x16b8: V1365 = ISZERO V1364
0x16b9: V1366 = 0xd6
0x16bc: THROWI V1365
---
Entry stack: [V1347]
Stack pops: 0
Stack additions: [0x88, V1364]
Exit stack: []

================================

Block 0x16bd
[0x16bd:0x174e]
---
Predecessors: [0x1666]
Successors: [0x174f]
---
0x16bd PUSH1 0x0
0x16bf DUP1
0x16c0 REVERT
0x16c1 JUMPDEST
0x16c2 POP
0x16c3 PUSH2 0x10b
0x16c6 PUSH1 0x4
0x16c8 DUP1
0x16c9 CALLDATASIZE
0x16ca SUB
0x16cb DUP2
0x16cc ADD
0x16cd SWAP1
0x16ce DUP1
0x16cf DUP1
0x16d0 CALLDATALOAD
0x16d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e6 AND
0x16e7 SWAP1
0x16e8 PUSH1 0x20
0x16ea ADD
0x16eb SWAP1
0x16ec SWAP3
0x16ed SWAP2
0x16ee SWAP1
0x16ef POP
0x16f0 POP
0x16f1 POP
0x16f2 PUSH2 0x234
0x16f5 JUMP
0x16f6 JUMPDEST
0x16f7 STOP
0x16f8 JUMPDEST
0x16f9 PUSH1 0x0
0x16fb DUP1
0x16fc SWAP1
0x16fd SLOAD
0x16fe SWAP1
0x16ff PUSH2 0x100
0x1702 EXP
0x1703 SWAP1
0x1704 DIV
0x1705 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171a AND
0x171b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1730 AND
0x1731 CALLER
0x1732 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1747 AND
0x1748 EQ
0x1749 ISZERO
0x174a ISZERO
0x174b PUSH2 0x168
0x174e JUMPI
---
0x16bd: V1367 = 0x0
0x16c0: REVERT 0x0 0x0
0x16c1: JUMPDEST 
0x16c3: V1368 = 0x10b
0x16c6: V1369 = 0x4
0x16c9: V1370 = CALLDATASIZE
0x16ca: V1371 = SUB V1370 0x4
0x16cc: V1372 = ADD 0x4 V1371
0x16d0: V1373 = CALLDATALOAD 0x4
0x16d1: V1374 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e6: V1375 = AND 0xffffffffffffffffffffffffffffffffffffffff V1373
0x16e8: V1376 = 0x20
0x16ea: V1377 = ADD 0x20 0x4
0x16f2: V1378 = 0x234
0x16f5: THROW 
0x16f6: JUMPDEST 
0x16f7: STOP 
0x16f8: JUMPDEST 
0x16f9: V1379 = 0x0
0x16fd: V1380 = S[0x0]
0x16ff: V1381 = 0x100
0x1702: V1382 = EXP 0x100 0x0
0x1704: V1383 = DIV V1380 0x1
0x1705: V1384 = 0xffffffffffffffffffffffffffffffffffffffff
0x171a: V1385 = AND 0xffffffffffffffffffffffffffffffffffffffff V1383
0x171b: V1386 = 0xffffffffffffffffffffffffffffffffffffffff
0x1730: V1387 = AND 0xffffffffffffffffffffffffffffffffffffffff V1385
0x1731: V1388 = CALLER
0x1732: V1389 = 0xffffffffffffffffffffffffffffffffffffffff
0x1747: V1390 = AND 0xffffffffffffffffffffffffffffffffffffffff V1388
0x1748: V1391 = EQ V1390 V1387
0x1749: V1392 = ISZERO V1391
0x174a: V1393 = ISZERO V1392
0x174b: V1394 = 0x168
0x174e: THROWI V1393
---
Entry stack: [V1364]
Stack pops: 0
Stack additions: [V1375, 0x10b]
Exit stack: []

================================

Block 0x174f
[0x174f:0x1875]
---
Predecessors: [0x16bd]
Successors: [0x1876]
---
0x174f PUSH1 0x0
0x1751 DUP1
0x1752 REVERT
0x1753 JUMPDEST
0x1754 PUSH1 0x0
0x1756 DUP1
0x1757 SWAP1
0x1758 SLOAD
0x1759 SWAP1
0x175a PUSH2 0x100
0x175d EXP
0x175e SWAP1
0x175f DIV
0x1760 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1775 AND
0x1776 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x178b AND
0x178c PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x17ad PUSH1 0x40
0x17af MLOAD
0x17b0 PUSH1 0x40
0x17b2 MLOAD
0x17b3 DUP1
0x17b4 SWAP2
0x17b5 SUB
0x17b6 SWAP1
0x17b7 LOG2
0x17b8 PUSH1 0x0
0x17ba DUP1
0x17bb PUSH1 0x0
0x17bd PUSH2 0x100
0x17c0 EXP
0x17c1 DUP2
0x17c2 SLOAD
0x17c3 DUP2
0x17c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d9 MUL
0x17da NOT
0x17db AND
0x17dc SWAP1
0x17dd DUP4
0x17de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f3 AND
0x17f4 MUL
0x17f5 OR
0x17f6 SWAP1
0x17f7 SSTORE
0x17f8 POP
0x17f9 JUMP
0x17fa JUMPDEST
0x17fb PUSH1 0x0
0x17fd DUP1
0x17fe SWAP1
0x17ff SLOAD
0x1800 SWAP1
0x1801 PUSH2 0x100
0x1804 EXP
0x1805 SWAP1
0x1806 DIV
0x1807 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181c AND
0x181d DUP2
0x181e JUMP
0x181f JUMPDEST
0x1820 PUSH1 0x0
0x1822 DUP1
0x1823 SWAP1
0x1824 SLOAD
0x1825 SWAP1
0x1826 PUSH2 0x100
0x1829 EXP
0x182a SWAP1
0x182b DIV
0x182c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1841 AND
0x1842 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1857 AND
0x1858 CALLER
0x1859 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186e AND
0x186f EQ
0x1870 ISZERO
0x1871 ISZERO
0x1872 PUSH2 0x28f
0x1875 JUMPI
---
0x174f: V1395 = 0x0
0x1752: REVERT 0x0 0x0
0x1753: JUMPDEST 
0x1754: V1396 = 0x0
0x1758: V1397 = S[0x0]
0x175a: V1398 = 0x100
0x175d: V1399 = EXP 0x100 0x0
0x175f: V1400 = DIV V1397 0x1
0x1760: V1401 = 0xffffffffffffffffffffffffffffffffffffffff
0x1775: V1402 = AND 0xffffffffffffffffffffffffffffffffffffffff V1400
0x1776: V1403 = 0xffffffffffffffffffffffffffffffffffffffff
0x178b: V1404 = AND 0xffffffffffffffffffffffffffffffffffffffff V1402
0x178c: V1405 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x17ad: V1406 = 0x40
0x17af: V1407 = M[0x40]
0x17b0: V1408 = 0x40
0x17b2: V1409 = M[0x40]
0x17b5: V1410 = SUB V1407 V1409
0x17b7: LOG V1409 V1410 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V1404
0x17b8: V1411 = 0x0
0x17bb: V1412 = 0x0
0x17bd: V1413 = 0x100
0x17c0: V1414 = EXP 0x100 0x0
0x17c2: V1415 = S[0x0]
0x17c4: V1416 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d9: V1417 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x17da: V1418 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x17db: V1419 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1415
0x17de: V1420 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f3: V1421 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x17f4: V1422 = MUL 0x0 0x1
0x17f5: V1423 = OR 0x0 V1419
0x17f7: S[0x0] = V1423
0x17f9: JUMP S0
0x17fa: JUMPDEST 
0x17fb: V1424 = 0x0
0x17ff: V1425 = S[0x0]
0x1801: V1426 = 0x100
0x1804: V1427 = EXP 0x100 0x0
0x1806: V1428 = DIV V1425 0x1
0x1807: V1429 = 0xffffffffffffffffffffffffffffffffffffffff
0x181c: V1430 = AND 0xffffffffffffffffffffffffffffffffffffffff V1428
0x181e: JUMP S0
0x181f: JUMPDEST 
0x1820: V1431 = 0x0
0x1824: V1432 = S[0x0]
0x1826: V1433 = 0x100
0x1829: V1434 = EXP 0x100 0x0
0x182b: V1435 = DIV V1432 0x1
0x182c: V1436 = 0xffffffffffffffffffffffffffffffffffffffff
0x1841: V1437 = AND 0xffffffffffffffffffffffffffffffffffffffff V1435
0x1842: V1438 = 0xffffffffffffffffffffffffffffffffffffffff
0x1857: V1439 = AND 0xffffffffffffffffffffffffffffffffffffffff V1437
0x1858: V1440 = CALLER
0x1859: V1441 = 0xffffffffffffffffffffffffffffffffffffffff
0x186e: V1442 = AND 0xffffffffffffffffffffffffffffffffffffffff V1440
0x186f: V1443 = EQ V1442 V1439
0x1870: V1444 = ISZERO V1443
0x1871: V1445 = ISZERO V1444
0x1872: V1446 = 0x28f
0x1875: THROWI V1445
---
Entry stack: []
Stack pops: 0
Stack additions: [V1430, S0]
Exit stack: []

================================

Block 0x1876
[0x1876:0x18bd]
---
Predecessors: [0x174f]
Successors: [0x18be]
---
0x1876 PUSH1 0x0
0x1878 DUP1
0x1879 REVERT
0x187a JUMPDEST
0x187b PUSH2 0x298
0x187e DUP2
0x187f PUSH2 0x29b
0x1882 JUMP
0x1883 JUMPDEST
0x1884 POP
0x1885 JUMP
0x1886 JUMPDEST
0x1887 PUSH1 0x0
0x1889 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189e AND
0x189f DUP2
0x18a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18b5 AND
0x18b6 EQ
0x18b7 ISZERO
0x18b8 ISZERO
0x18b9 ISZERO
0x18ba PUSH2 0x2d7
0x18bd JUMPI
---
0x1876: V1447 = 0x0
0x1879: REVERT 0x0 0x0
0x187a: JUMPDEST 
0x187b: V1448 = 0x298
0x187f: V1449 = 0x29b
0x1882: THROW 
0x1883: JUMPDEST 
0x1885: JUMP S1
0x1886: JUMPDEST 
0x1887: V1450 = 0x0
0x1889: V1451 = 0xffffffffffffffffffffffffffffffffffffffff
0x189e: V1452 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x18a0: V1453 = 0xffffffffffffffffffffffffffffffffffffffff
0x18b5: V1454 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x18b6: V1455 = EQ V1454 0x0
0x18b7: V1456 = ISZERO V1455
0x18b8: V1457 = ISZERO V1456
0x18b9: V1458 = ISZERO V1457
0x18ba: V1459 = 0x2d7
0x18bd: THROWI V1458
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, 0x298, S0, S0]
Exit stack: []

================================

Block 0x18be
[0x18be:0x1a3d]
---
Predecessors: [0x1876]
Successors: []
---
0x18be PUSH1 0x0
0x18c0 DUP1
0x18c1 REVERT
0x18c2 JUMPDEST
0x18c3 DUP1
0x18c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d9 AND
0x18da PUSH1 0x0
0x18dc DUP1
0x18dd SWAP1
0x18de SLOAD
0x18df SWAP1
0x18e0 PUSH2 0x100
0x18e3 EXP
0x18e4 SWAP1
0x18e5 DIV
0x18e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18fb AND
0x18fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1911 AND
0x1912 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1933 PUSH1 0x40
0x1935 MLOAD
0x1936 PUSH1 0x40
0x1938 MLOAD
0x1939 DUP1
0x193a SWAP2
0x193b SUB
0x193c SWAP1
0x193d LOG3
0x193e DUP1
0x193f PUSH1 0x0
0x1941 DUP1
0x1942 PUSH2 0x100
0x1945 EXP
0x1946 DUP2
0x1947 SLOAD
0x1948 DUP2
0x1949 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195e MUL
0x195f NOT
0x1960 AND
0x1961 SWAP1
0x1962 DUP4
0x1963 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1978 AND
0x1979 MUL
0x197a OR
0x197b SWAP1
0x197c SSTORE
0x197d POP
0x197e POP
0x197f JUMP
0x1980 STOP
0x1981 LOG1
0x1982 PUSH6 0x627a7a723058
0x1989 SHA3
0x198a MISSING 0xc
0x198b PUSH31 0x929a86d253a113e78ee0e0d1fb6f7746af7aa89b0992f7fced1ea7dc339700
0x19ab MISSING 0x29
0x19ac PUSH1 0x80
0x19ae PUSH1 0x40
0x19b0 MSTORE
0x19b1 PUSH1 0x0
0x19b3 DUP1
0x19b4 REVERT
0x19b5 STOP
0x19b6 LOG1
0x19b7 PUSH6 0x627a7a723058
0x19be SHA3
0x19bf MISSING 0xd7
0x19c0 SLOAD
0x19c1 PUSH27 0xd055c96bd117977747f3ec39aa9a50fe8e9129d6224285c133d4a1
0x19dd MSTORE
0x19de PUSH6 0x2973000000
0x19e5 STOP
0x19e6 STOP
0x19e7 STOP
0x19e8 STOP
0x19e9 STOP
0x19ea STOP
0x19eb STOP
0x19ec STOP
0x19ed STOP
0x19ee STOP
0x19ef STOP
0x19f0 STOP
0x19f1 STOP
0x19f2 STOP
0x19f3 STOP
0x19f4 STOP
0x19f5 STOP
0x19f6 ADDRESS
0x19f7 EQ
0x19f8 PUSH1 0x80
0x19fa PUSH1 0x40
0x19fc MSTORE
0x19fd PUSH1 0x0
0x19ff DUP1
0x1a00 REVERT
0x1a01 STOP
0x1a02 LOG1
0x1a03 PUSH6 0x627a7a723058
0x1a0a SHA3
0x1a0b DUP10
0x1a0c MISSING 0x2e
0x1a0d EXP
0x1a0e MISSING 0xbd
0x1a0f MLOAD
0x1a10 MISSING 0xce
0x1a11 ADD
0x1a12 MISSING 0x2a
0x1a13 MISSING 0x46
0x1a14 MISSING 0xe1
0x1a15 MISSING 0xd5
0x1a16 LOG1
0x1a17 MISSING 0xc4
0x1a18 DUP7
0x1a19 MISSING 0xac
0x1a1a MISSING 0x29
0x1a1b MISSING 0xc8
0x1a1c BLOCKHASH
0x1a1d MISSING 0x48
0x1a1e PUSH31 0x98a22d700cf25d70c62c9bc00029
---
0x18be: V1460 = 0x0
0x18c1: REVERT 0x0 0x0
0x18c2: JUMPDEST 
0x18c4: V1461 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d9: V1462 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x18da: V1463 = 0x0
0x18de: V1464 = S[0x0]
0x18e0: V1465 = 0x100
0x18e3: V1466 = EXP 0x100 0x0
0x18e5: V1467 = DIV V1464 0x1
0x18e6: V1468 = 0xffffffffffffffffffffffffffffffffffffffff
0x18fb: V1469 = AND 0xffffffffffffffffffffffffffffffffffffffff V1467
0x18fc: V1470 = 0xffffffffffffffffffffffffffffffffffffffff
0x1911: V1471 = AND 0xffffffffffffffffffffffffffffffffffffffff V1469
0x1912: V1472 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1933: V1473 = 0x40
0x1935: V1474 = M[0x40]
0x1936: V1475 = 0x40
0x1938: V1476 = M[0x40]
0x193b: V1477 = SUB V1474 V1476
0x193d: LOG V1476 V1477 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1471 V1462
0x193f: V1478 = 0x0
0x1942: V1479 = 0x100
0x1945: V1480 = EXP 0x100 0x0
0x1947: V1481 = S[0x0]
0x1949: V1482 = 0xffffffffffffffffffffffffffffffffffffffff
0x195e: V1483 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x195f: V1484 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1960: V1485 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1481
0x1963: V1486 = 0xffffffffffffffffffffffffffffffffffffffff
0x1978: V1487 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1979: V1488 = MUL V1487 0x1
0x197a: V1489 = OR V1488 V1485
0x197c: S[0x0] = V1489
0x197f: JUMP S1
0x1980: STOP 
0x1981: LOG S0 S1 S2
0x1982: V1490 = 0x627a7a723058
0x1989: V1491 = SHA3 0x627a7a723058 S3
0x198a: MISSING 0xc
0x198b: V1492 = 0x929a86d253a113e78ee0e0d1fb6f7746af7aa89b0992f7fced1ea7dc339700
0x19ab: MISSING 0x29
0x19ac: V1493 = 0x80
0x19ae: V1494 = 0x40
0x19b0: M[0x40] = 0x80
0x19b1: V1495 = 0x0
0x19b4: REVERT 0x0 0x0
0x19b5: STOP 
0x19b6: LOG S0 S1 S2
0x19b7: V1496 = 0x627a7a723058
0x19be: V1497 = SHA3 0x627a7a723058 S3
0x19bf: MISSING 0xd7
0x19c0: V1498 = S[S0]
0x19c1: V1499 = 0xd055c96bd117977747f3ec39aa9a50fe8e9129d6224285c133d4a1
0x19dd: M[0xd055c96bd117977747f3ec39aa9a50fe8e9129d6224285c133d4a1] = V1498
0x19de: V1500 = 0x2973000000
0x19e5: STOP 
0x19e6: STOP 
0x19e7: STOP 
0x19e8: STOP 
0x19e9: STOP 
0x19ea: STOP 
0x19eb: STOP 
0x19ec: STOP 
0x19ed: STOP 
0x19ee: STOP 
0x19ef: STOP 
0x19f0: STOP 
0x19f1: STOP 
0x19f2: STOP 
0x19f3: STOP 
0x19f4: STOP 
0x19f5: STOP 
0x19f6: V1501 = ADDRESS
0x19f7: V1502 = EQ V1501 S0
0x19f8: V1503 = 0x80
0x19fa: V1504 = 0x40
0x19fc: M[0x40] = 0x80
0x19fd: V1505 = 0x0
0x1a00: REVERT 0x0 0x0
0x1a01: STOP 
0x1a02: LOG S0 S1 S2
0x1a03: V1506 = 0x627a7a723058
0x1a0a: V1507 = SHA3 0x627a7a723058 S3
0x1a0c: MISSING 0x2e
0x1a0d: V1508 = EXP S0 S1
0x1a0e: MISSING 0xbd
0x1a0f: V1509 = M[S0]
0x1a10: MISSING 0xce
0x1a11: V1510 = ADD S0 S1
0x1a12: MISSING 0x2a
0x1a13: MISSING 0x46
0x1a14: MISSING 0xe1
0x1a15: MISSING 0xd5
0x1a16: LOG S0 S1 S2
0x1a17: MISSING 0xc4
0x1a19: MISSING 0xac
0x1a1a: MISSING 0x29
0x1a1b: MISSING 0xc8
0x1a1c: V1511 = BLOCKHASH S0
0x1a1d: MISSING 0x48
0x1a1e: V1512 = 0x98a22d700cf25d70c62c9bc00029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V1491, 0x929a86d253a113e78ee0e0d1fb6f7746af7aa89b0992f7fced1ea7dc339700, V1497, 0x2973000000, V1502, S12, V1507, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1508, V1509, V1510, S6, S0, S1, S2, S3, S4, S5, S6, V1511, 0x98a22d700cf25d70c62c9bc00029]
Exit stack: []

================================

Function 0:
Public function signature: 0xf4f8184
Entry block: 0x136
Exit block: 0x14b
Body: 0x136, 0x13e, 0x142, 0x14b, 0xa4a

Function 1:
Public function signature: 0x13fa095f
Entry block: 0x18d
Exit block: 0x1ce
Body: 0x18d, 0x195, 0x199, 0x1ce, 0xa70, 0xac7, 0xacb

Function 2:
Public function signature: 0x53b7a59b
Entry block: 0x1d0
Exit block: 0x1e5
Body: 0x1d0, 0x1d8, 0x1dc, 0x1e5, 0xb0f

Function 3:
Public function signature: 0x624964c3
Entry block: 0x227
Exit block: 0x23c
Body: 0x227, 0x22f, 0x233, 0x23c, 0xb35, 0xbec, 0xbf0, 0xbfb, 0xc04, 0xc16, 0xc1a

Function 4:
Public function signature: 0x70228eea
Entry block: 0x27e
Exit block: 0x2e2
Body: 0x27e, 0x286, 0x28a, 0x2e2, 0xc30, 0xc87, 0xc8b, 0xca1, 0x14f2, 0x150c, 0x1512, 0x151b, 0x156a, 0x156b, 0x1578, 0x157c, 0x1582, 0x158b, 0x15b8, 0x15bc

Function 5:
Public function signature: 0x715018a6
Entry block: 0x2e4
Exit block: 0x2f9
Body: 0x2e4, 0x2ec, 0x2f0, 0x2f9, 0xca5, 0xcfc, 0xd00

Function 6:
Public function signature: 0x7362377b
Entry block: 0x2fb
Exit block: 0xed1
Body: 0x2fb, 0x303, 0x307, 0x310, 0xda7, 0xe00, 0xe04, 0xe1c, 0xe20, 0xe5c, 0xed1, 0xeda, 0xedc

Function 7:
Public function signature: 0x86f254bf
Entry block: 0x32a
Exit block: 0x33f
Body: 0x32a, 0x332, 0x336, 0x33f, 0xefd

Function 8:
Public function signature: 0x89476069
Entry block: 0x355
Exit block: 0x11a9
Body: 0x355, 0x35d, 0x361, 0x396, 0xf03, 0xf5c, 0xf60, 0xf78, 0xf7c, 0xfce, 0x10a3, 0x10a7, 0x10b2, 0x10bb, 0x10cd, 0x10d1, 0x1163, 0x1167, 0x1172, 0x117b, 0x118d, 0x1191, 0x11a9, 0x11aa, 0x11ab

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x3b0
Exit block: 0x3c5
Body: 0x3b0, 0x3b8, 0x3bc, 0x3c5, 0x11ce

Function 10:
Public function signature: 0x9232494e
Entry block: 0x407
Exit block: 0x41c
Body: 0x407, 0x40f, 0x413, 0x41c, 0x11f3

Function 11:
Public function signature: 0xa215cd92
Entry block: 0x43a
Exit block: 0x465
Body: 0x43a, 0x442, 0x446, 0x465, 0x1217, 0x126e, 0x1272

Function 12:
Public function signature: 0xaf6d1fe4
Entry block: 0x467
Exit block: 0x492
Body: 0x467, 0x46f, 0x473, 0x492, 0x127c, 0x128a, 0x128b

Function 13:
Public function signature: 0xc6ce2664
Entry block: 0x4d4
Exit block: 0x515
Body: 0x4d4, 0x4dc, 0x4e0, 0x515, 0x12ba, 0x1311, 0x1315

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x517
Exit block: 0x558
Body: 0x517, 0x51f, 0x523, 0x558, 0x1359, 0x13b0, 0x13b4, 0x13bd, 0x13f8, 0x1430, 0x1434

Function 15:
Public fallback function
Entry block: 0xdb
Exit block: 0x11a
Body: 0xdb, 0xf3, 0xf7, 0x11a, 0x55a, 0x576, 0x57a, 0x662, 0x666, 0x671, 0x67a, 0x68c, 0x690, 0x6c0, 0x6c1, 0x776, 0x77a, 0x785, 0x78e, 0x7a0, 0x7a4, 0x7cc, 0x89c, 0x8ac, 0x8f6, 0x914, 0x918, 0x923, 0x92c, 0x93f, 0x943, 0x961, 0x962, 0x13c0, 0x13cb, 0x13d3, 0x13e3, 0x13e4, 0x13ed, 0x13ee, 0x13f2

