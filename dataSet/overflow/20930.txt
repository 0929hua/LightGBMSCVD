Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x55]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x55
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x55
0xa: JUMPI 0x55 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xee]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x354284f2
0x3a EQ
0x3b PUSH2 0xee
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x354284f2
0x3a: V12 = EQ 0x354284f2 V10
0x3b: V13 = 0xee
0x3e: JUMPI 0xee V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x103]
---
0x3f DUP1
0x40 PUSH4 0x4a3f17e7
0x45 EQ
0x46 PUSH2 0x103
0x49 JUMPI
---
0x40: V14 = 0x4a3f17e7
0x45: V15 = EQ 0x4a3f17e7 V10
0x46: V16 = 0x103
0x49: JUMPI 0x103 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x150]
---
0x4a DUP1
0x4b PUSH4 0xe58fc54c
0x50 EQ
0x51 PUSH2 0x150
0x54 JUMPI
---
0x4b: V17 = 0xe58fc54c
0x50: V18 = EQ 0xe58fc54c V10
0x51: V19 = 0x150
0x54: JUMPI 0x150 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x58]
---
Predecessors: [0x0, 0x4a]
Successors: [0x59]
---
0x55 JUMPDEST
0x56 PUSH2 0xec
---
0x55: JUMPDEST 
0x56: V20 = 0xec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xec]
Exit stack: [V10, 0xec]

================================

Block 0x59
[0x59:0xe9]
---
Predecessors: [0x55]
Successors: [0xea]
---
0x59 JUMPDEST
0x5a CALLVALUE
0x5b PUSH1 0x0
0x5d DUP1
0x5e CALLER
0x5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74 AND
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 DUP2
0x92 MSTORE
0x93 PUSH1 0x20
0x95 ADD
0x96 PUSH1 0x0
0x98 SHA3
0x99 PUSH1 0x0
0x9b DUP3
0x9c DUP3
0x9d SLOAD
0x9e ADD
0x9f SWAP3
0xa0 POP
0xa1 POP
0xa2 DUP2
0xa3 SWAP1
0xa4 SSTORE
0xa5 POP
0xa6 CALLVALUE
0xa7 CALLER
0xa8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd AND
0xbe PUSH32 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 SWAP2
0xe7 SUB
0xe8 SWAP1
0xe9 LOG3
---
0x59: JUMPDEST 
0x5a: V21 = CALLVALUE
0x5b: V22 = 0x0
0x5e: V23 = CALLER
0x5f: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x74: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x75: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x8c: M[0x0] = V27
0x8d: V28 = 0x20
0x8f: V29 = ADD 0x20 0x0
0x92: M[0x20] = 0x0
0x93: V30 = 0x20
0x95: V31 = ADD 0x20 0x20
0x96: V32 = 0x0
0x98: V33 = SHA3 0x0 0x40
0x99: V34 = 0x0
0x9d: V35 = S[V33]
0x9e: V36 = ADD V35 V21
0xa4: S[V33] = V36
0xa6: V37 = CALLVALUE
0xa7: V38 = CALLER
0xa8: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xbe: V41 = 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0xdf: V42 = 0x40
0xe1: V43 = M[0x40]
0xe2: V44 = 0x40
0xe4: V45 = M[0x40]
0xe7: V46 = SUB V43 V45
0xe9: LOG V45 V46 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091 V40 V37
---
Entry stack: [V10, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xec]

================================

Block 0xea
[0xea:0xeb]
---
Predecessors: [0x59]
Successors: [0xec]
---
0xea JUMPDEST
0xeb JUMP
---
0xea: JUMPDEST 
0xeb: JUMP 0xec
---
Entry stack: [V10, 0xec]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xec
[0xec:0xed]
---
Predecessors: [0xea]
Successors: []
---
0xec JUMPDEST
0xed STOP
---
0xec: JUMPDEST 
0xed: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0xb]
Successors: [0xf5, 0xf9]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V47 = CALLVALUE
0xf0: V48 = ISZERO V47
0xf1: V49 = 0xf9
0xf4: JUMPI 0xf9 V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xee]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V50 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xee]
Successors: [0x1a1]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x1a1
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V51 = 0x101
0xfd: V52 = 0x1a1
0x100: JUMP 0x1a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V10, 0x101]

================================

Block 0x101
[0x101:0x102]
---
Predecessors: [0x323]
Successors: []
---
0x101 JUMPDEST
0x102 STOP
---
0x101: JUMPDEST 
0x102: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x103
[0x103:0x109]
---
Predecessors: [0x3f]
Successors: [0x10a, 0x10e]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 ISZERO
0x106 PUSH2 0x10e
0x109 JUMPI
---
0x103: JUMPDEST 
0x104: V53 = CALLVALUE
0x105: V54 = ISZERO V53
0x106: V55 = 0x10e
0x109: JUMPI 0x10e V54
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0x103]
Successors: []
---
0x10a PUSH1 0x0
0x10c DUP1
0x10d REVERT
---
0x10a: V56 = 0x0
0x10d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10e
[0x10e:0x139]
---
Predecessors: [0x103]
Successors: [0x327]
---
0x10e JUMPDEST
0x10f PUSH2 0x13a
0x112 PUSH1 0x4
0x114 DUP1
0x115 DUP1
0x116 CALLDATALOAD
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d SWAP1
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 SWAP2
0x133 SWAP1
0x134 POP
0x135 POP
0x136 PUSH2 0x327
0x139 JUMP
---
0x10e: JUMPDEST 
0x10f: V57 = 0x13a
0x112: V58 = 0x4
0x116: V59 = CALLDATALOAD 0x4
0x117: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x12e: V62 = 0x20
0x130: V63 = ADD 0x20 0x4
0x136: V64 = 0x327
0x139: JUMP 0x327
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13a, V61]
Exit stack: [V10, 0x13a, V61]

================================

Block 0x13a
[0x13a:0x14f]
---
Predecessors: [0x327]
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP3
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP2
0x146 POP
0x147 POP
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c SWAP2
0x14d SUB
0x14e SWAP1
0x14f RETURN
---
0x13a: JUMPDEST 
0x13b: V65 = 0x40
0x13d: V66 = M[0x40]
0x141: M[V66] = V190
0x142: V67 = 0x20
0x144: V68 = ADD 0x20 V66
0x148: V69 = 0x40
0x14a: V70 = M[0x40]
0x14d: V71 = SUB V68 V70
0x14f: RETURN V70 V71
---
Entry stack: [V10, 0x13a, V190]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x13a]

================================

Block 0x150
[0x150:0x156]
---
Predecessors: [0x4a]
Successors: [0x157, 0x15b]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x150: JUMPDEST 
0x151: V72 = CALLVALUE
0x152: V73 = ISZERO V72
0x153: V74 = 0x15b
0x156: JUMPI 0x15b V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x150]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V75 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15b
[0x15b:0x186]
---
Predecessors: [0x150]
Successors: [0x33f]
---
0x15b JUMPDEST
0x15c PUSH2 0x187
0x15f PUSH1 0x4
0x161 DUP1
0x162 DUP1
0x163 CALLDATALOAD
0x164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x179 AND
0x17a SWAP1
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP1
0x17f SWAP2
0x180 SWAP1
0x181 POP
0x182 POP
0x183 PUSH2 0x33f
0x186 JUMP
---
0x15b: JUMPDEST 
0x15c: V76 = 0x187
0x15f: V77 = 0x4
0x163: V78 = CALLDATALOAD 0x4
0x164: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x179: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x17b: V81 = 0x20
0x17d: V82 = ADD 0x20 0x4
0x183: V83 = 0x33f
0x186: JUMP 0x33f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x187, V80]
Exit stack: [V10, 0x187, V80]

================================

Block 0x187
[0x187:0x1a0]
---
Predecessors: [0x54e]
Successors: []
---
0x187 JUMPDEST
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c DUP3
0x18d ISZERO
0x18e ISZERO
0x18f ISZERO
0x190 ISZERO
0x191 DUP2
0x192 MSTORE
0x193 PUSH1 0x20
0x195 ADD
0x196 SWAP2
0x197 POP
0x198 POP
0x199 PUSH1 0x40
0x19b MLOAD
0x19c DUP1
0x19d SWAP2
0x19e SUB
0x19f SWAP1
0x1a0 RETURN
---
0x187: JUMPDEST 
0x188: V84 = 0x40
0x18a: V85 = M[0x40]
0x18d: V86 = ISZERO V306
0x18e: V87 = ISZERO V86
0x18f: V88 = ISZERO V87
0x190: V89 = ISZERO V88
0x192: M[V85] = V89
0x193: V90 = 0x20
0x195: V91 = ADD 0x20 V85
0x199: V92 = 0x40
0x19b: V93 = M[0x40]
0x19e: V94 = SUB V91 V93
0x1a0: RETURN V93 V94
---
Entry stack: [V10, V306]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a1
[0x1a1:0x1af]
---
Predecessors: [0xf9]
Successors: [0x1b0, 0x1f3]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 PUSH1 0x1
0x1a7 SLOAD
0x1a8 TIMESTAMP
0x1a9 GT
0x1aa DUP1
0x1ab ISZERO
0x1ac PUSH2 0x1f3
0x1af JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V95 = 0x0
0x1a5: V96 = 0x1
0x1a7: V97 = S[0x1]
0x1a8: V98 = TIMESTAMP
0x1a9: V99 = GT V98 V97
0x1ab: V100 = ISZERO V99
0x1ac: V101 = 0x1f3
0x1af: JUMPI 0x1f3 V100
---
Entry stack: [V10, 0x101]
Stack pops: 0
Stack additions: [0x0, 0x0, V99]
Exit stack: [V10, 0x101, 0x0, 0x0, V99]

================================

Block 0x1b0
[0x1b0:0x1f2]
---
Predecessors: [0x1a1]
Successors: [0x1f3]
---
0x1b0 POP
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 PUSH1 0x0
0x1b6 CALLER
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 SWAP1
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee PUSH1 0x0
0x1f0 SHA3
0x1f1 SLOAD
0x1f2 GT
---
0x1b1: V102 = 0x0
0x1b4: V103 = 0x0
0x1b6: V104 = CALLER
0x1b7: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1cd: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1e4: M[0x0] = V108
0x1e5: V109 = 0x20
0x1e7: V110 = ADD 0x20 0x0
0x1ea: M[0x20] = 0x0
0x1eb: V111 = 0x20
0x1ed: V112 = ADD 0x20 0x20
0x1ee: V113 = 0x0
0x1f0: V114 = SHA3 0x0 0x40
0x1f1: V115 = S[V114]
0x1f2: V116 = GT V115 0x0
---
Entry stack: [V10, 0x101, 0x0, 0x0, V99]
Stack pops: 1
Stack additions: [V116]
Exit stack: [V10, 0x101, 0x0, 0x0, V116]

================================

Block 0x1f3
[0x1f3:0x1f9]
---
Predecessors: [0x1a1, 0x1b0]
Successors: [0x1fa, 0x1fe]
---
0x1f3 JUMPDEST
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V117 = ISZERO S0
0x1f5: V118 = ISZERO V117
0x1f6: V119 = 0x1fe
0x1f9: JUMPI 0x1fe V118
---
Entry stack: [V10, 0x101, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x101, 0x0, 0x0]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V120 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x101, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x101, 0x0, 0x0]

================================

Block 0x1fe
[0x1fe:0x249]
---
Predecessors: [0x1f3]
Successors: [0x24a, 0x24b]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x0
0x201 DUP1
0x202 CALLER
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 AND
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 SWAP1
0x235 DUP2
0x236 MSTORE
0x237 PUSH1 0x20
0x239 ADD
0x23a PUSH1 0x0
0x23c SHA3
0x23d SLOAD
0x23e SWAP2
0x23f POP
0x240 PUSH1 0x64
0x242 DUP3
0x243 DUP2
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x24b
0x249 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V121 = 0x0
0x202: V122 = CALLER
0x203: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x219: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x230: M[0x0] = V126
0x231: V127 = 0x20
0x233: V128 = ADD 0x20 0x0
0x236: M[0x20] = 0x0
0x237: V129 = 0x20
0x239: V130 = ADD 0x20 0x20
0x23a: V131 = 0x0
0x23c: V132 = SHA3 0x0 0x40
0x23d: V133 = S[V132]
0x240: V134 = 0x64
0x244: V135 = ISZERO 0x64
0x245: V136 = ISZERO 0x0
0x246: V137 = 0x24b
0x249: JUMPI 0x24b 0x1
---
Entry stack: [V10, 0x101, 0x0, 0x0]
Stack pops: 2
Stack additions: [V133, S0, 0x64, V133]
Exit stack: [V10, 0x101, V133, 0x0, 0x64, V133]

================================

Block 0x24a
[0x24a:0x24a]
---
Predecessors: [0x1fe]
Successors: []
---
0x24a INVALID
---
0x24a: INVALID 
---
Entry stack: [V10, 0x101, V133, 0x0, 0x64, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x101, V133, 0x0, 0x64, V133]

================================

Block 0x24b
[0x24b:0x2cd]
---
Predecessors: [0x1fe]
Successors: [0x2ce, 0x2d2]
---
0x24b JUMPDEST
0x24c DIV
0x24d SWAP1
0x24e POP
0x24f PUSH1 0x0
0x251 DUP1
0x252 PUSH1 0x0
0x254 CALLER
0x255 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26a AND
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP1
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x20
0x28b ADD
0x28c PUSH1 0x0
0x28e SHA3
0x28f DUP2
0x290 SWAP1
0x291 SSTORE
0x292 POP
0x293 CALLER
0x294 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a9 AND
0x2aa PUSH2 0x8fc
0x2ad DUP3
0x2ae SWAP1
0x2af DUP2
0x2b0 ISZERO
0x2b1 MUL
0x2b2 SWAP1
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 PUSH1 0x0
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc DUP4
0x2bd SUB
0x2be DUP2
0x2bf DUP6
0x2c0 DUP9
0x2c1 DUP9
0x2c2 CALL
0x2c3 SWAP4
0x2c4 POP
0x2c5 POP
0x2c6 POP
0x2c7 POP
0x2c8 ISZERO
0x2c9 ISZERO
0x2ca PUSH2 0x2d2
0x2cd JUMPI
---
0x24b: JUMPDEST 
0x24c: V138 = DIV V133 0x64
0x24f: V139 = 0x0
0x252: V140 = 0x0
0x254: V141 = CALLER
0x255: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x26b: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x282: M[0x0] = V145
0x283: V146 = 0x20
0x285: V147 = ADD 0x20 0x0
0x288: M[0x20] = 0x0
0x289: V148 = 0x20
0x28b: V149 = ADD 0x20 0x20
0x28c: V150 = 0x0
0x28e: V151 = SHA3 0x0 0x40
0x291: S[V151] = 0x0
0x293: V152 = CALLER
0x294: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2aa: V155 = 0x8fc
0x2b0: V156 = ISZERO V138
0x2b1: V157 = MUL V156 0x8fc
0x2b3: V158 = 0x40
0x2b5: V159 = M[0x40]
0x2b6: V160 = 0x0
0x2b8: V161 = 0x40
0x2ba: V162 = M[0x40]
0x2bd: V163 = SUB V159 V162
0x2c2: V164 = CALL V157 V154 V138 V162 V163 V162 0x0
0x2c8: V165 = ISZERO V164
0x2c9: V166 = ISZERO V165
0x2ca: V167 = 0x2d2
0x2cd: JUMPI 0x2d2 V166
---
Entry stack: [V10, 0x101, V133, 0x0, 0x64, V133]
Stack pops: 3
Stack additions: [V138]
Exit stack: [V10, 0x101, V133, V138]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x24b]
Successors: []
---
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 REVERT
---
0x2ce: V168 = 0x0
0x2d1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x101, V133, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x101, V133, V138]

================================

Block 0x2d2
[0x2d2:0x322]
---
Predecessors: [0x24b]
Successors: [0x323]
---
0x2d2 JUMPDEST
0x2d3 DUP1
0x2d4 CALLER
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb PUSH32 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x30c PUSH1 0x40
0x30e MLOAD
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 SWAP2
0x314 SUB
0x315 SWAP1
0x316 LOG3
0x317 PUSH1 0x78
0x319 PUSH1 0x1
0x31b SLOAD
0x31c ADD
0x31d PUSH1 0x1
0x31f DUP2
0x320 SWAP1
0x321 SSTORE
0x322 POP
---
0x2d2: JUMPDEST 
0x2d4: V169 = CALLER
0x2d5: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2eb: V172 = 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x30c: V173 = 0x40
0x30e: V174 = M[0x40]
0x30f: V175 = 0x40
0x311: V176 = M[0x40]
0x314: V177 = SUB V174 V176
0x316: LOG V176 V177 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7 V171 V138
0x317: V178 = 0x78
0x319: V179 = 0x1
0x31b: V180 = S[0x1]
0x31c: V181 = ADD V180 0x78
0x31d: V182 = 0x1
0x321: S[0x1] = V181
---
Entry stack: [V10, 0x101, V133, V138]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x101, V133, V138]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x2d2]
Successors: [0x101]
---
0x323 JUMPDEST
0x324 POP
0x325 POP
0x326 JUMP
---
0x323: JUMPDEST 
0x326: JUMP 0x101
---
Entry stack: [V10, 0x101, V133, V138]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x327
[0x327:0x33e]
---
Predecessors: [0x10e]
Successors: [0x13a]
---
0x327 JUMPDEST
0x328 PUSH1 0x0
0x32a PUSH1 0x20
0x32c MSTORE
0x32d DUP1
0x32e PUSH1 0x0
0x330 MSTORE
0x331 PUSH1 0x40
0x333 PUSH1 0x0
0x335 SHA3
0x336 PUSH1 0x0
0x338 SWAP2
0x339 POP
0x33a SWAP1
0x33b POP
0x33c SLOAD
0x33d DUP2
0x33e JUMP
---
0x327: JUMPDEST 
0x328: V183 = 0x0
0x32a: V184 = 0x20
0x32c: M[0x20] = 0x0
0x32e: V185 = 0x0
0x330: M[0x0] = V61
0x331: V186 = 0x40
0x333: V187 = 0x0
0x335: V188 = SHA3 0x0 0x40
0x336: V189 = 0x0
0x33c: V190 = S[V188]
0x33e: JUMP 0x13a
---
Entry stack: [V10, 0x13a, V61]
Stack pops: 2
Stack additions: [S1, V190]
Exit stack: [V10, 0x13a, V190]

================================

Block 0x33f
[0x33f:0x38d]
---
Predecessors: [0x15b]
Successors: [0x38e, 0x392]
---
0x33f JUMPDEST
0x340 PUSH1 0x0
0x342 DUP1
0x343 PUSH1 0x0
0x345 PUSH20 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 CALLER
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 EQ
0x388 ISZERO
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x33f: JUMPDEST 
0x340: V191 = 0x0
0x343: V192 = 0x0
0x345: V193 = 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x35a: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x370: V196 = CALLER
0x371: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x387: V199 = EQ V198 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x388: V200 = ISZERO V199
0x389: V201 = ISZERO V200
0x38a: V202 = 0x392
0x38d: JUMPI 0x392 V201
---
Entry stack: [V10, 0x187, V80]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x33f]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V203 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]

================================

Block 0x392
[0x392:0x39d]
---
Predecessors: [0x33f]
Successors: [0x39e, 0x3a2]
---
0x392 JUMPDEST
0x393 PUSH1 0x1
0x395 SLOAD
0x396 TIMESTAMP
0x397 GT
0x398 ISZERO
0x399 ISZERO
0x39a PUSH2 0x3a2
0x39d JUMPI
---
0x392: JUMPDEST 
0x393: V204 = 0x1
0x395: V205 = S[0x1]
0x396: V206 = TIMESTAMP
0x397: V207 = GT V206 V205
0x398: V208 = ISZERO V207
0x399: V209 = ISZERO V208
0x39a: V210 = 0x3a2
0x39d: JUMPI 0x3a2 V209
---
Entry stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]

================================

Block 0x39e
[0x39e:0x3a1]
---
Predecessors: [0x392]
Successors: []
---
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 REVERT
---
0x39e: V211 = 0x0
0x3a1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]

================================

Block 0x3a2
[0x3a2:0x445]
---
Predecessors: [0x392]
Successors: [0x446, 0x44a]
---
0x3a2 JUMPDEST
0x3a3 DUP4
0x3a4 SWAP2
0x3a5 POP
0x3a6 PUSH1 0x64
0x3a8 DUP3
0x3a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3be AND
0x3bf PUSH4 0x70a08231
0x3c4 ADDRESS
0x3c5 PUSH1 0x0
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd MSTORE
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP3
0x3d2 PUSH4 0xffffffff
0x3d7 AND
0x3d8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f6 MUL
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x4
0x3fb ADD
0x3fc DUP1
0x3fd DUP3
0x3fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x413 AND
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x20
0x42e ADD
0x42f SWAP2
0x430 POP
0x431 POP
0x432 PUSH1 0x20
0x434 PUSH1 0x40
0x436 MLOAD
0x437 DUP1
0x438 DUP4
0x439 SUB
0x43a DUP2
0x43b PUSH1 0x0
0x43d DUP8
0x43e DUP1
0x43f EXTCODESIZE
0x440 ISZERO
0x441 ISZERO
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x3a2: JUMPDEST 
0x3a6: V212 = 0x64
0x3a9: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x3bf: V215 = 0x70a08231
0x3c4: V216 = ADDRESS
0x3c5: V217 = 0x0
0x3c7: V218 = 0x40
0x3c9: V219 = M[0x40]
0x3ca: V220 = 0x20
0x3cc: V221 = ADD 0x20 V219
0x3cd: M[V221] = 0x0
0x3ce: V222 = 0x40
0x3d0: V223 = M[0x40]
0x3d2: V224 = 0xffffffff
0x3d7: V225 = AND 0xffffffff 0x70a08231
0x3d8: V226 = 0x100000000000000000000000000000000000000000000000000000000
0x3f6: V227 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x3f8: M[V223] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3f9: V228 = 0x4
0x3fb: V229 = ADD 0x4 V223
0x3fe: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x413: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x414: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x42b: M[V229] = V233
0x42c: V234 = 0x20
0x42e: V235 = ADD 0x20 V229
0x432: V236 = 0x20
0x434: V237 = 0x40
0x436: V238 = M[0x40]
0x439: V239 = SUB V235 V238
0x43b: V240 = 0x0
0x43f: V241 = EXTCODESIZE V214
0x440: V242 = ISZERO V241
0x441: V243 = ISZERO V242
0x442: V244 = 0x44a
0x445: JUMPI 0x44a V243
---
Entry stack: [V10, 0x187, V80, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, 0x64, V214, 0x70a08231, V235, 0x20, V238, V239, V238, 0x0, V214]
Exit stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235, 0x20, V238, V239, V238, 0x0, V214]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x3a2]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V245 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235, 0x20, V238, V239, V238, 0x0, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235, 0x20, V238, V239, V238, 0x0, V214]

================================

Block 0x44a
[0x44a:0x456]
---
Predecessors: [0x3a2]
Successors: [0x457, 0x45b]
---
0x44a JUMPDEST
0x44b PUSH2 0x2c6
0x44e GAS
0x44f SUB
0x450 CALL
0x451 ISZERO
0x452 ISZERO
0x453 PUSH2 0x45b
0x456 JUMPI
---
0x44a: JUMPDEST 
0x44b: V246 = 0x2c6
0x44e: V247 = GAS
0x44f: V248 = SUB V247 0x2c6
0x450: V249 = CALL V248 V214 0x0 V238 V239 V238 0x20
0x451: V250 = ISZERO V249
0x452: V251 = ISZERO V250
0x453: V252 = 0x45b
0x456: JUMPI 0x45b V251
---
Entry stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235, 0x20, V238, V239, V238, 0x0, V214]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235]

================================

Block 0x457
[0x457:0x45a]
---
Predecessors: [0x44a]
Successors: []
---
0x457 PUSH1 0x0
0x459 DUP1
0x45a REVERT
---
0x457: V253 = 0x0
0x45a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235]

================================

Block 0x45b
[0x45b:0x46c]
---
Predecessors: [0x44a]
Successors: [0x46d, 0x46e]
---
0x45b JUMPDEST
0x45c POP
0x45d POP
0x45e POP
0x45f PUSH1 0x40
0x461 MLOAD
0x462 DUP1
0x463 MLOAD
0x464 SWAP1
0x465 POP
0x466 DUP2
0x467 ISZERO
0x468 ISZERO
0x469 PUSH2 0x46e
0x46c JUMPI
---
0x45b: JUMPDEST 
0x45f: V254 = 0x40
0x461: V255 = M[0x40]
0x463: V256 = M[V255]
0x467: V257 = ISZERO 0x64
0x468: V258 = ISZERO 0x0
0x469: V259 = 0x46e
0x46c: JUMPI 0x46e 0x1
---
Entry stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V214, 0x70a08231, V235]
Stack pops: 4
Stack additions: [S3, V256]
Exit stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V256]

================================

Block 0x46d
[0x46d:0x46d]
---
Predecessors: [0x45b]
Successors: []
---
0x46d INVALID
---
0x46d: INVALID 
---
Entry stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V256]

================================

Block 0x46e
[0x46e:0x52b]
---
Predecessors: [0x45b]
Successors: [0x52c, 0x530]
---
0x46e JUMPDEST
0x46f DIV
0x470 SWAP1
0x471 POP
0x472 DUP2
0x473 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x488 AND
0x489 PUSH4 0xa9059cbb
0x48e PUSH20 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x4a3 DUP4
0x4a4 PUSH1 0x0
0x4a6 PUSH1 0x40
0x4a8 MLOAD
0x4a9 PUSH1 0x20
0x4ab ADD
0x4ac MSTORE
0x4ad PUSH1 0x40
0x4af MLOAD
0x4b0 DUP4
0x4b1 PUSH4 0xffffffff
0x4b6 AND
0x4b7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4d5 MUL
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x4
0x4da ADD
0x4db DUP1
0x4dc DUP4
0x4dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f2 AND
0x4f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x508 AND
0x509 DUP2
0x50a MSTORE
0x50b PUSH1 0x20
0x50d ADD
0x50e DUP3
0x50f DUP2
0x510 MSTORE
0x511 PUSH1 0x20
0x513 ADD
0x514 SWAP3
0x515 POP
0x516 POP
0x517 POP
0x518 PUSH1 0x20
0x51a PUSH1 0x40
0x51c MLOAD
0x51d DUP1
0x51e DUP4
0x51f SUB
0x520 DUP2
0x521 PUSH1 0x0
0x523 DUP8
0x524 DUP1
0x525 EXTCODESIZE
0x526 ISZERO
0x527 ISZERO
0x528 PUSH2 0x530
0x52b JUMPI
---
0x46e: JUMPDEST 
0x46f: V260 = DIV V256 0x64
0x473: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x488: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x489: V263 = 0xa9059cbb
0x48e: V264 = 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x4a4: V265 = 0x0
0x4a6: V266 = 0x40
0x4a8: V267 = M[0x40]
0x4a9: V268 = 0x20
0x4ab: V269 = ADD 0x20 V267
0x4ac: M[V269] = 0x0
0x4ad: V270 = 0x40
0x4af: V271 = M[0x40]
0x4b1: V272 = 0xffffffff
0x4b6: V273 = AND 0xffffffff 0xa9059cbb
0x4b7: V274 = 0x100000000000000000000000000000000000000000000000000000000
0x4d5: V275 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x4d7: M[V271] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4d8: V276 = 0x4
0x4da: V277 = ADD 0x4 V271
0x4dd: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f2: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x4f3: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x508: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x50a: M[V277] = 0x239c09c910ea910994b320ebdc6bb159e71d0b30
0x50b: V282 = 0x20
0x50d: V283 = ADD 0x20 V277
0x510: M[V283] = V260
0x511: V284 = 0x20
0x513: V285 = ADD 0x20 V283
0x518: V286 = 0x20
0x51a: V287 = 0x40
0x51c: V288 = M[0x40]
0x51f: V289 = SUB V285 V288
0x521: V290 = 0x0
0x525: V291 = EXTCODESIZE V262
0x526: V292 = ISZERO V291
0x527: V293 = ISZERO V292
0x528: V294 = 0x530
0x52b: JUMPI 0x530 V293
---
Entry stack: [V10, 0x187, V80, 0x0, V80, 0x0, 0x64, V256]
Stack pops: 4
Stack additions: [S3, V260, V262, 0xa9059cbb, V285, 0x20, V288, V289, V288, 0x0, V262]
Exit stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285, 0x20, V288, V289, V288, 0x0, V262]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x46e]
Successors: []
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f REVERT
---
0x52c: V295 = 0x0
0x52f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285, 0x20, V288, V289, V288, 0x0, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285, 0x20, V288, V289, V288, 0x0, V262]

================================

Block 0x530
[0x530:0x53c]
---
Predecessors: [0x46e]
Successors: [0x53d, 0x541]
---
0x530 JUMPDEST
0x531 PUSH2 0x2c6
0x534 GAS
0x535 SUB
0x536 CALL
0x537 ISZERO
0x538 ISZERO
0x539 PUSH2 0x541
0x53c JUMPI
---
0x530: JUMPDEST 
0x531: V296 = 0x2c6
0x534: V297 = GAS
0x535: V298 = SUB V297 0x2c6
0x536: V299 = CALL V298 V262 0x0 V288 V289 V288 0x20
0x537: V300 = ISZERO V299
0x538: V301 = ISZERO V300
0x539: V302 = 0x541
0x53c: JUMPI 0x541 V301
---
Entry stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285, 0x20, V288, V289, V288, 0x0, V262]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285]

================================

Block 0x53d
[0x53d:0x540]
---
Predecessors: [0x530]
Successors: []
---
0x53d PUSH1 0x0
0x53f DUP1
0x540 REVERT
---
0x53d: V303 = 0x0
0x540: REVERT 0x0 0x0
---
Entry stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285]

================================

Block 0x541
[0x541:0x54d]
---
Predecessors: [0x530]
Successors: [0x54e]
---
0x541 JUMPDEST
0x542 POP
0x543 POP
0x544 POP
0x545 PUSH1 0x40
0x547 MLOAD
0x548 DUP1
0x549 MLOAD
0x54a SWAP1
0x54b POP
0x54c SWAP3
0x54d POP
---
0x541: JUMPDEST 
0x545: V304 = 0x40
0x547: V305 = M[0x40]
0x549: V306 = M[V305]
---
Entry stack: [V10, 0x187, V80, 0x0, V80, V260, V262, 0xa9059cbb, V285]
Stack pops: 6
Stack additions: [V306, S4, S3]
Exit stack: [V10, 0x187, V80, V306, V80, V260]

================================

Block 0x54e
[0x54e:0x554]
---
Predecessors: [0x541]
Successors: [0x187]
---
0x54e JUMPDEST
0x54f POP
0x550 POP
0x551 SWAP2
0x552 SWAP1
0x553 POP
0x554 JUMP
---
0x54e: JUMPDEST 
0x554: JUMP 0x187
---
Entry stack: [V10, 0x187, V80, V306, V80, V260]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V306]

================================

Block 0x555
[0x555:0x588]
---
Predecessors: []
Successors: []
---
0x555 STOP
0x556 LOG1
0x557 PUSH6 0x627a7a723058
0x55e SHA3
0x55f GAS
0x560 CREATE2
0x561 DUP2
0x562 TIMESTAMP
0x563 TIMESTAMP
0x564 NUMBER
0x565 MISSING 0xc5
0x566 MISSING 0xfb
0x567 DELEGATECALL
0x568 MISSING 0xe4
0x569 ISZERO
0x56a SWAP13
0x56b BYTE
0x56c MISSING 0xae
0x56d MISSING 0xd3
0x56e PUSH26 0xc2fa2f43f4240fc0baf679fb4df09c310029
---
0x555: STOP 
0x556: LOG S0 S1 S2
0x557: V307 = 0x627a7a723058
0x55e: V308 = SHA3 0x627a7a723058 S3
0x55f: V309 = GAS
0x560: V310 = CREATE2 V309 V308 S4 S5
0x562: V311 = TIMESTAMP
0x563: V312 = TIMESTAMP
0x564: V313 = NUMBER
0x565: MISSING 0xc5
0x566: MISSING 0xfb
0x567: V314 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x568: MISSING 0xe4
0x569: V315 = ISZERO S0
0x56b: V316 = BYTE S13 S1
0x56c: MISSING 0xae
0x56d: MISSING 0xd3
0x56e: V317 = 0xc2fa2f43f4240fc0baf679fb4df09c310029
---
Entry stack: []
Stack pops: 0
Stack additions: [V313, V312, V311, S6, V310, S6, V314, V316, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V315, 0xc2fa2f43f4240fc0baf679fb4df09c310029]
Exit stack: []

================================

Function 0:
Public function signature: 0x354284f2
Entry block: 0xee
Exit block: 0x101
Body: 0xee, 0xf5, 0xf9, 0x101, 0x1a1, 0x1b0, 0x1f3, 0x1fa, 0x1fe, 0x24a, 0x24b, 0x2ce, 0x2d2, 0x323

Function 1:
Public function signature: 0x4a3f17e7
Entry block: 0x103
Exit block: 0x13a
Body: 0x103, 0x10a, 0x10e, 0x13a, 0x327

Function 2:
Public function signature: 0xe58fc54c
Entry block: 0x150
Exit block: 0x187
Body: 0x150, 0x157, 0x15b, 0x187, 0x33f, 0x38e, 0x392, 0x39e, 0x3a2, 0x446, 0x44a, 0x457, 0x45b, 0x46d, 0x46e, 0x52c, 0x530, 0x53d, 0x541, 0x54e

Function 3:
Public fallback function
Entry block: 0x55
Exit block: 0xec
Body: 0x55, 0x59, 0xea, 0xec

