Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x715018a6
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x715018a6
0x3c: V13 = EQ 0x715018a6 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x73]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x73
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x73
0x4b: JUMPI 0x73 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xca]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0xca
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0xca
0x56: JUMPI 0xca V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x10d]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x10d
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x10d
0x70: JUMP 0x10d
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: [0x168]
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0x41]
Successors: [0x7b, 0x7f]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x73: JUMPDEST 
0x74: V28 = CALLVALUE
0x76: V29 = ISZERO V28
0x77: V30 = 0x7f
0x7a: JUMPI 0x7f V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x73]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V31 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7f
[0x7f:0x87]
---
Predecessors: [0x73]
Successors: [0x20f]
---
0x7f JUMPDEST
0x80 POP
0x81 PUSH2 0x88
0x84 PUSH2 0x20f
0x87 JUMP
---
0x7f: JUMPDEST 
0x81: V32 = 0x88
0x84: V33 = 0x20f
0x87: JUMP 0x20f
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x88]
Exit stack: [V11, 0x88]

================================

Block 0x88
[0x88:0xc9]
---
Predecessors: [0x20f]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d DUP3
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0x88: JUMPDEST 
0x89: V34 = 0x40
0x8b: V35 = M[0x40]
0x8e: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0xa4: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbb: M[V35] = V39
0xbc: V40 = 0x20
0xbe: V41 = ADD 0x20 V35
0xc2: V42 = 0x40
0xc4: V43 = M[0x40]
0xc7: V44 = SUB V41 V43
0xc9: RETURN V43 V44
---
Entry stack: [V11, 0x88, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x88]

================================

Block 0xca
[0xca:0xd1]
---
Predecessors: [0x4c]
Successors: [0xd2, 0xd6]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc DUP1
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xca: JUMPDEST 
0xcb: V45 = CALLVALUE
0xcd: V46 = ISZERO V45
0xce: V47 = 0xd6
0xd1: JUMPI 0xd6 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xca]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V48 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xd6
[0xd6:0x10a]
---
Predecessors: [0xca]
Successors: [0x234]
---
0xd6 JUMPDEST
0xd7 POP
0xd8 PUSH2 0x10b
0xdb PUSH1 0x4
0xdd DUP1
0xde CALLDATASIZE
0xdf SUB
0xe0 DUP2
0xe1 ADD
0xe2 SWAP1
0xe3 DUP1
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 SWAP3
0x102 SWAP2
0x103 SWAP1
0x104 POP
0x105 POP
0x106 POP
0x107 PUSH2 0x234
0x10a JUMP
---
0xd6: JUMPDEST 
0xd8: V49 = 0x10b
0xdb: V50 = 0x4
0xde: V51 = CALLDATASIZE
0xdf: V52 = SUB V51 0x4
0xe1: V53 = ADD 0x4 V52
0xe5: V54 = CALLDATALOAD 0x4
0xe6: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xfd: V57 = 0x20
0xff: V58 = ADD 0x20 0x4
0x107: V59 = 0x234
0x10a: JUMP 0x234
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0x10b, V56]
Exit stack: [V11, 0x10b, V56]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x2cb]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x163]
---
Predecessors: [0x68]
Successors: [0x164, 0x168]
---
0x10d JUMPDEST
0x10e PUSH1 0x0
0x110 DUP1
0x111 SWAP1
0x112 SLOAD
0x113 SWAP1
0x114 PUSH2 0x100
0x117 EXP
0x118 SWAP1
0x119 DIV
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 CALLER
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d EQ
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x10d: JUMPDEST 
0x10e: V60 = 0x0
0x112: V61 = S[0x0]
0x114: V62 = 0x100
0x117: V63 = EXP 0x100 0x0
0x119: V64 = DIV V61 0x1
0x11a: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x130: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x146: V69 = CALLER
0x147: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x15d: V72 = EQ V71 V68
0x15e: V73 = ISZERO V72
0x15f: V74 = ISZERO V73
0x160: V75 = 0x168
0x163: JUMPI 0x168 V74
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x10d]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V76 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x168
[0x168:0x20e]
---
Predecessors: [0x10d]
Successors: [0x71]
---
0x168 JUMPDEST
0x169 PUSH1 0x0
0x16b DUP1
0x16c SWAP1
0x16d SLOAD
0x16e SWAP1
0x16f PUSH2 0x100
0x172 EXP
0x173 SWAP1
0x174 DIV
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc LOG2
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 PUSH1 0x0
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 DUP2
0x1d7 SLOAD
0x1d8 DUP2
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee MUL
0x1ef NOT
0x1f0 AND
0x1f1 SWAP1
0x1f2 DUP4
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 MUL
0x20a OR
0x20b SWAP1
0x20c SSTORE
0x20d POP
0x20e JUMP
---
0x168: JUMPDEST 
0x169: V77 = 0x0
0x16d: V78 = S[0x0]
0x16f: V79 = 0x100
0x172: V80 = EXP 0x100 0x0
0x174: V81 = DIV V78 0x1
0x175: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x18b: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a1: V86 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x1c2: V87 = 0x40
0x1c4: V88 = M[0x40]
0x1c5: V89 = 0x40
0x1c7: V90 = M[0x40]
0x1ca: V91 = SUB V88 V90
0x1cc: LOG V90 V91 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V85
0x1cd: V92 = 0x0
0x1d0: V93 = 0x0
0x1d2: V94 = 0x100
0x1d5: V95 = EXP 0x100 0x0
0x1d7: V96 = S[0x0]
0x1d9: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V98 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1ef: V99 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V100 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V96
0x1f3: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x209: V103 = MUL 0x0 0x1
0x20a: V104 = OR 0x0 V100
0x20c: S[0x0] = V104
0x20e: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x233]
---
Predecessors: [0x7f]
Successors: [0x88]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 SWAP1
0x214 SLOAD
0x215 SWAP1
0x216 PUSH2 0x100
0x219 EXP
0x21a SWAP1
0x21b DIV
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 DUP2
0x233 JUMP
---
0x20f: JUMPDEST 
0x210: V105 = 0x0
0x214: V106 = S[0x0]
0x216: V107 = 0x100
0x219: V108 = EXP 0x100 0x0
0x21b: V109 = DIV V106 0x1
0x21c: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x233: JUMP 0x88
---
Entry stack: [V11, 0x88]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [V11, 0x88, V111]

================================

Block 0x234
[0x234:0x28a]
---
Predecessors: [0xd6]
Successors: [0x28b, 0x28f]
---
0x234 JUMPDEST
0x235 PUSH1 0x0
0x237 DUP1
0x238 SWAP1
0x239 SLOAD
0x23a SWAP1
0x23b PUSH2 0x100
0x23e EXP
0x23f SWAP1
0x240 DIV
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d CALLER
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 EQ
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x234: JUMPDEST 
0x235: V112 = 0x0
0x239: V113 = S[0x0]
0x23b: V114 = 0x100
0x23e: V115 = EXP 0x100 0x0
0x240: V116 = DIV V113 0x1
0x241: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x257: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x26d: V121 = CALLER
0x26e: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x284: V124 = EQ V123 V120
0x285: V125 = ISZERO V124
0x286: V126 = ISZERO V125
0x287: V127 = 0x28f
0x28a: JUMPI 0x28f V126
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x234]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V128 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x28f
[0x28f:0x2c6]
---
Predecessors: [0x234]
Successors: [0x2c7, 0x2cb]
---
0x28f JUMPDEST
0x290 PUSH1 0x0
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 DUP2
0x2a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2be AND
0x2bf EQ
0x2c0 ISZERO
0x2c1 ISZERO
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x28f: JUMPDEST 
0x290: V129 = 0x0
0x292: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x2a9: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2bf: V134 = EQ V133 0x0
0x2c0: V135 = ISZERO V134
0x2c1: V136 = ISZERO V135
0x2c2: V137 = ISZERO V136
0x2c3: V138 = 0x2cb
0x2c6: JUMPI 0x2cb V137
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10b, V56]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x28f]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V139 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10b, V56]

================================

Block 0x2cb
[0x2cb:0x388]
---
Predecessors: [0x28f]
Successors: [0x10b]
---
0x2cb JUMPDEST
0x2cc DUP1
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 SWAP1
0x2e7 SLOAD
0x2e8 SWAP1
0x2e9 PUSH2 0x100
0x2ec EXP
0x2ed SWAP1
0x2ee DIV
0x2ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x304 AND
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a AND
0x31b PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x33c PUSH1 0x40
0x33e MLOAD
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP1
0x343 SWAP2
0x344 SUB
0x345 SWAP1
0x346 LOG3
0x347 DUP1
0x348 PUSH1 0x0
0x34a DUP1
0x34b PUSH2 0x100
0x34e EXP
0x34f DUP2
0x350 SLOAD
0x351 DUP2
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 MUL
0x368 NOT
0x369 AND
0x36a SWAP1
0x36b DUP4
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 MUL
0x383 OR
0x384 SWAP1
0x385 SSTORE
0x386 POP
0x387 POP
0x388 JUMP
---
0x2cb: JUMPDEST 
0x2cd: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x2e3: V142 = 0x0
0x2e7: V143 = S[0x0]
0x2e9: V144 = 0x100
0x2ec: V145 = EXP 0x100 0x0
0x2ee: V146 = DIV V143 0x1
0x2ef: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x304: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x305: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x31b: V151 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x33c: V152 = 0x40
0x33e: V153 = M[0x40]
0x33f: V154 = 0x40
0x341: V155 = M[0x40]
0x344: V156 = SUB V153 V155
0x346: LOG V155 V156 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V150 V141
0x348: V157 = 0x0
0x34b: V158 = 0x100
0x34e: V159 = EXP 0x100 0x0
0x350: V160 = S[0x0]
0x352: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V162 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x368: V163 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x369: V164 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V160
0x36c: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x382: V167 = MUL V166 0x1
0x383: V168 = OR V167 V164
0x385: S[0x0] = V168
0x388: JUMP 0x10b
---
Entry stack: [V11, 0x10b, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x389
[0x389:0x459]
---
Predecessors: []
Successors: [0x45a]
---
0x389 STOP
0x38a LOG1
0x38b PUSH6 0x627a7a723058
0x392 SHA3
0x393 DUP14
0x394 MISSING 0xc9
0x395 MISSING 0xbe
0x396 MISSING 0xf6
0x397 DUP2
0x398 MISSING 0xdd
0x399 MISSING 0xc9
0x39a MISSING 0xba
0x39b DELEGATECALL
0x39c SWAP2
0x39d DUP14
0x39e MISSING 0x1e
0x39f DIV
0x3a0 MISSING 0xb0
0x3a1 MISSING 0xda
0x3a2 MISSING 0xce
0x3a3 MISSING 0x2e
0x3a4 MISSING 0x2c
0x3a5 SWAP3
0x3a6 SWAP5
0x3a7 MISSING 0xac
0x3a8 GASPRICE
0x3a9 MISSING 0xc
0x3aa MISSING 0x28
0x3ab DUP11
0x3ac DIFFICULTY
0x3ad ADDMOD
0x3ae MISSING 0x1f
0x3af MISSING 0xa5
0x3b0 MISSING 0xe1
0x3b1 RETURNDATACOPY
0x3b2 CALLDATASIZE
0x3b3 STOP
0x3b4 MISSING 0x29
0x3b5 PUSH20 0x0
0x3ca ADDRESS
0x3cb EQ
0x3cc PUSH1 0x80
0x3ce PUSH1 0x40
0x3d0 MSTORE
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 REVERT
0x3d5 STOP
0x3d6 LOG1
0x3d7 PUSH6 0x627a7a723058
0x3de SHA3
0x3df SMOD
0x3e0 MISSING 0xba
0x3e1 PUSH22 0x991342221d63aefaeb909278a00c26b2ef7be89bf30b
0x3f8 ADD
0x3f9 PUSH30 0x61f981d71e00297300000000000000000000000000000000000000003014
0x418 PUSH1 0x80
0x41a PUSH1 0x40
0x41c MSTORE
0x41d PUSH1 0x0
0x41f DUP1
0x420 REVERT
0x421 STOP
0x422 LOG1
0x423 PUSH6 0x627a7a723058
0x42a SHA3
0x42b MISSING 0xe0
0x42c PUSH6 0x20941da22962
0x433 AND
0x434 PUSH9 0x64983e63e94d9393
0x43e MISSING 0xb7
0x43f DUP10
0x440 MISSING 0xb5
0x441 MISSING 0xe7
0x442 PUSH12 0x802148749c002dc00296080
0x44f PUSH1 0x40
0x451 MSTORE
0x452 PUSH1 0x4
0x454 CALLDATASIZE
0x455 LT
0x456 PUSH2 0xd0
0x459 JUMPI
---
0x389: STOP 
0x38a: LOG S0 S1 S2
0x38b: V169 = 0x627a7a723058
0x392: V170 = SHA3 0x627a7a723058 S3
0x394: MISSING 0xc9
0x395: MISSING 0xbe
0x396: MISSING 0xf6
0x398: MISSING 0xdd
0x399: MISSING 0xc9
0x39a: MISSING 0xba
0x39b: V171 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x39e: MISSING 0x1e
0x39f: V172 = DIV S0 S1
0x3a0: MISSING 0xb0
0x3a1: MISSING 0xda
0x3a2: MISSING 0xce
0x3a3: MISSING 0x2e
0x3a4: MISSING 0x2c
0x3a7: MISSING 0xac
0x3a8: V173 = GASPRICE
0x3a9: MISSING 0xc
0x3aa: MISSING 0x28
0x3ac: V174 = DIFFICULTY
0x3ad: V175 = ADDMOD V174 S10 S0
0x3ae: MISSING 0x1f
0x3af: MISSING 0xa5
0x3b0: MISSING 0xe1
0x3b1: RETURNDATACOPY S0 S1 S2
0x3b2: V176 = CALLDATASIZE
0x3b3: STOP 
0x3b4: MISSING 0x29
0x3b5: V177 = 0x0
0x3ca: V178 = ADDRESS
0x3cb: V179 = EQ V178 0x0
0x3cc: V180 = 0x80
0x3ce: V181 = 0x40
0x3d0: M[0x40] = 0x80
0x3d1: V182 = 0x0
0x3d4: REVERT 0x0 0x0
0x3d5: STOP 
0x3d6: LOG S0 S1 S2
0x3d7: V183 = 0x627a7a723058
0x3de: V184 = SHA3 0x627a7a723058 S3
0x3df: V185 = SMOD V184 S4
0x3e0: MISSING 0xba
0x3e1: V186 = 0x991342221d63aefaeb909278a00c26b2ef7be89bf30b
0x3f8: V187 = ADD 0x991342221d63aefaeb909278a00c26b2ef7be89bf30b S0
0x3f9: V188 = 0x61f981d71e00297300000000000000000000000000000000000000003014
0x418: V189 = 0x80
0x41a: V190 = 0x40
0x41c: M[0x40] = 0x80
0x41d: V191 = 0x0
0x420: REVERT 0x0 0x0
0x421: STOP 
0x422: LOG S0 S1 S2
0x423: V192 = 0x627a7a723058
0x42a: V193 = SHA3 0x627a7a723058 S3
0x42b: MISSING 0xe0
0x42c: V194 = 0x20941da22962
0x433: V195 = AND 0x20941da22962 S0
0x434: V196 = 0x64983e63e94d9393
0x43e: MISSING 0xb7
0x440: MISSING 0xb5
0x441: MISSING 0xe7
0x442: V197 = 0x802148749c002dc00296080
0x44f: V198 = 0x40
0x451: M[0x40] = 0x802148749c002dc00296080
0x452: V199 = 0x4
0x454: V200 = CALLDATASIZE
0x455: V201 = LT V200 0x4
0x456: V202 = 0xd0
0x459: THROWI V201
---
Entry stack: []
Stack pops: 0
Stack additions: [S16, V170, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S1, S0, S1, S18, S7, S6, V171, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V172, S5, S1, S2, S0, S4, S3, V173, V175, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V176, V179, V185, 0x61f981d71e00297300000000000000000000000000000000000000003014, V187, V193, 0x64983e63e94d9393, V195, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Block 0x45a
[0x45a:0x48d]
---
Predecessors: [0x389]
Successors: [0x48e]
---
0x45a PUSH1 0x0
0x45c CALLDATALOAD
0x45d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x47b SWAP1
0x47c DIV
0x47d PUSH4 0xffffffff
0x482 AND
0x483 DUP1
0x484 PUSH4 0xfb5a6b4
0x489 EQ
0x48a PUSH2 0xd5
0x48d JUMPI
---
0x45a: V203 = 0x0
0x45c: V204 = CALLDATALOAD 0x0
0x45d: V205 = 0x100000000000000000000000000000000000000000000000000000000
0x47c: V206 = DIV V204 0x100000000000000000000000000000000000000000000000000000000
0x47d: V207 = 0xffffffff
0x482: V208 = AND 0xffffffff V206
0x484: V209 = 0xfb5a6b4
0x489: V210 = EQ 0xfb5a6b4 V208
0x48a: V211 = 0xd5
0x48d: THROWI V210
---
Entry stack: []
Stack pops: 0
Stack additions: [V208]
Exit stack: [V208]

================================

Block 0x48e
[0x48e:0x498]
---
Predecessors: [0x45a]
Successors: [0x499]
---
0x48e DUP1
0x48f PUSH4 0x13d033c0
0x494 EQ
0x495 PUSH2 0x100
0x498 JUMPI
---
0x48f: V212 = 0x13d033c0
0x494: V213 = EQ 0x13d033c0 V208
0x495: V214 = 0x100
0x498: THROWI V213
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x499
[0x499:0x4a3]
---
Predecessors: [0x48e]
Successors: [0x4a4]
---
0x499 DUP1
0x49a PUSH4 0x1726cbc8
0x49f EQ
0x4a0 PUSH2 0x12b
0x4a3 JUMPI
---
0x49a: V215 = 0x1726cbc8
0x49f: V216 = EQ 0x1726cbc8 V208
0x4a0: V217 = 0x12b
0x4a3: THROWI V216
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4a4
[0x4a4:0x4ae]
---
Predecessors: [0x499]
Successors: [0x4af]
---
0x4a4 DUP1
0x4a5 PUSH4 0x19165587
0x4aa EQ
0x4ab PUSH2 0x182
0x4ae JUMPI
---
0x4a5: V218 = 0x19165587
0x4aa: V219 = EQ 0x19165587 V208
0x4ab: V220 = 0x182
0x4ae: THROWI V219
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4af
[0x4af:0x4b9]
---
Predecessors: [0x4a4]
Successors: [0x4ba]
---
0x4af DUP1
0x4b0 PUSH4 0x384711cc
0x4b5 EQ
0x4b6 PUSH2 0x1c5
0x4b9 JUMPI
---
0x4b0: V221 = 0x384711cc
0x4b5: V222 = EQ 0x384711cc V208
0x4b6: V223 = 0x1c5
0x4b9: THROWI V222
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4ba
[0x4ba:0x4c4]
---
Predecessors: [0x4af]
Successors: [0x4c5]
---
0x4ba DUP1
0x4bb PUSH4 0x38af3eed
0x4c0 EQ
0x4c1 PUSH2 0x21c
0x4c4 JUMPI
---
0x4bb: V224 = 0x38af3eed
0x4c0: V225 = EQ 0x38af3eed V208
0x4c1: V226 = 0x21c
0x4c4: THROWI V225
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4c5
[0x4c5:0x4cf]
---
Predecessors: [0x4ba]
Successors: [0x4d0]
---
0x4c5 DUP1
0x4c6 PUSH4 0x715018a6
0x4cb EQ
0x4cc PUSH2 0x273
0x4cf JUMPI
---
0x4c6: V227 = 0x715018a6
0x4cb: V228 = EQ 0x715018a6 V208
0x4cc: V229 = 0x273
0x4cf: THROWI V228
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4d0
[0x4d0:0x4da]
---
Predecessors: [0x4c5]
Successors: [0x4db]
---
0x4d0 DUP1
0x4d1 PUSH4 0x74a8f103
0x4d6 EQ
0x4d7 PUSH2 0x28a
0x4da JUMPI
---
0x4d1: V230 = 0x74a8f103
0x4d6: V231 = EQ 0x74a8f103 V208
0x4d7: V232 = 0x28a
0x4da: THROWI V231
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4db
[0x4db:0x4e5]
---
Predecessors: [0x4d0]
Successors: [0x4e6]
---
0x4db DUP1
0x4dc PUSH4 0x872a7810
0x4e1 EQ
0x4e2 PUSH2 0x2cd
0x4e5 JUMPI
---
0x4dc: V233 = 0x872a7810
0x4e1: V234 = EQ 0x872a7810 V208
0x4e2: V235 = 0x2cd
0x4e5: THROWI V234
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4e6
[0x4e6:0x4f0]
---
Predecessors: [0x4db]
Successors: [0x4f1]
---
0x4e6 DUP1
0x4e7 PUSH4 0x8da5cb5b
0x4ec EQ
0x4ed PUSH2 0x2fc
0x4f0 JUMPI
---
0x4e7: V236 = 0x8da5cb5b
0x4ec: V237 = EQ 0x8da5cb5b V208
0x4ed: V238 = 0x2fc
0x4f0: THROWI V237
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4f1
[0x4f1:0x4fb]
---
Predecessors: [0x4e6]
Successors: [0x4fc]
---
0x4f1 DUP1
0x4f2 PUSH4 0x9852595c
0x4f7 EQ
0x4f8 PUSH2 0x353
0x4fb JUMPI
---
0x4f2: V239 = 0x9852595c
0x4f7: V240 = EQ 0x9852595c V208
0x4f8: V241 = 0x353
0x4fb: THROWI V240
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x4fc
[0x4fc:0x506]
---
Predecessors: [0x4f1]
Successors: [0x507]
---
0x4fc DUP1
0x4fd PUSH4 0xbe9a6555
0x502 EQ
0x503 PUSH2 0x3aa
0x506 JUMPI
---
0x4fd: V242 = 0xbe9a6555
0x502: V243 = EQ 0xbe9a6555 V208
0x503: V244 = 0x3aa
0x506: THROWI V243
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x507
[0x507:0x511]
---
Predecessors: [0x4fc]
Successors: [0x512]
---
0x507 DUP1
0x508 PUSH4 0xf2fde38b
0x50d EQ
0x50e PUSH2 0x3d5
0x511 JUMPI
---
0x508: V245 = 0xf2fde38b
0x50d: V246 = EQ 0xf2fde38b V208
0x50e: V247 = 0x3d5
0x511: THROWI V246
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x512
[0x512:0x51c]
---
Predecessors: [0x507]
Successors: [0x51d]
---
0x512 DUP1
0x513 PUSH4 0xfa01dc06
0x518 EQ
0x519 PUSH2 0x418
0x51c JUMPI
---
0x513: V248 = 0xfa01dc06
0x518: V249 = EQ 0xfa01dc06 V208
0x519: V250 = 0x418
0x51c: THROWI V249
---
Entry stack: [V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V208]

================================

Block 0x51d
[0x51d:0x529]
---
Predecessors: [0x512]
Successors: [0x52a]
---
0x51d JUMPDEST
0x51e PUSH1 0x0
0x520 DUP1
0x521 REVERT
0x522 JUMPDEST
0x523 CALLVALUE
0x524 DUP1
0x525 ISZERO
0x526 PUSH2 0xe1
0x529 JUMPI
---
0x51d: JUMPDEST 
0x51e: V251 = 0x0
0x521: REVERT 0x0 0x0
0x522: JUMPDEST 
0x523: V252 = CALLVALUE
0x525: V253 = ISZERO V252
0x526: V254 = 0xe1
0x529: THROWI V253
---
Entry stack: [V208]
Stack pops: 0
Stack additions: [V252]
Exit stack: []

================================

Block 0x52a
[0x52a:0x554]
---
Predecessors: [0x51d]
Successors: [0x555]
---
0x52a PUSH1 0x0
0x52c DUP1
0x52d REVERT
0x52e JUMPDEST
0x52f POP
0x530 PUSH2 0xea
0x533 PUSH2 0x473
0x536 JUMP
0x537 JUMPDEST
0x538 PUSH1 0x40
0x53a MLOAD
0x53b DUP1
0x53c DUP3
0x53d DUP2
0x53e MSTORE
0x53f PUSH1 0x20
0x541 ADD
0x542 SWAP2
0x543 POP
0x544 POP
0x545 PUSH1 0x40
0x547 MLOAD
0x548 DUP1
0x549 SWAP2
0x54a SUB
0x54b SWAP1
0x54c RETURN
0x54d JUMPDEST
0x54e CALLVALUE
0x54f DUP1
0x550 ISZERO
0x551 PUSH2 0x10c
0x554 JUMPI
---
0x52a: V255 = 0x0
0x52d: REVERT 0x0 0x0
0x52e: JUMPDEST 
0x530: V256 = 0xea
0x533: V257 = 0x473
0x536: THROW 
0x537: JUMPDEST 
0x538: V258 = 0x40
0x53a: V259 = M[0x40]
0x53e: M[V259] = S0
0x53f: V260 = 0x20
0x541: V261 = ADD 0x20 V259
0x545: V262 = 0x40
0x547: V263 = M[0x40]
0x54a: V264 = SUB V261 V263
0x54c: RETURN V263 V264
0x54d: JUMPDEST 
0x54e: V265 = CALLVALUE
0x550: V266 = ISZERO V265
0x551: V267 = 0x10c
0x554: THROWI V266
---
Entry stack: [V252]
Stack pops: 0
Stack additions: [0xea, V265]
Exit stack: []

================================

Block 0x555
[0x555:0x57f]
---
Predecessors: [0x52a]
Successors: [0x580]
---
0x555 PUSH1 0x0
0x557 DUP1
0x558 REVERT
0x559 JUMPDEST
0x55a POP
0x55b PUSH2 0x115
0x55e PUSH2 0x479
0x561 JUMP
0x562 JUMPDEST
0x563 PUSH1 0x40
0x565 MLOAD
0x566 DUP1
0x567 DUP3
0x568 DUP2
0x569 MSTORE
0x56a PUSH1 0x20
0x56c ADD
0x56d SWAP2
0x56e POP
0x56f POP
0x570 PUSH1 0x40
0x572 MLOAD
0x573 DUP1
0x574 SWAP2
0x575 SUB
0x576 SWAP1
0x577 RETURN
0x578 JUMPDEST
0x579 CALLVALUE
0x57a DUP1
0x57b ISZERO
0x57c PUSH2 0x137
0x57f JUMPI
---
0x555: V268 = 0x0
0x558: REVERT 0x0 0x0
0x559: JUMPDEST 
0x55b: V269 = 0x115
0x55e: V270 = 0x479
0x561: THROW 
0x562: JUMPDEST 
0x563: V271 = 0x40
0x565: V272 = M[0x40]
0x569: M[V272] = S0
0x56a: V273 = 0x20
0x56c: V274 = ADD 0x20 V272
0x570: V275 = 0x40
0x572: V276 = M[0x40]
0x575: V277 = SUB V274 V276
0x577: RETURN V276 V277
0x578: JUMPDEST 
0x579: V278 = CALLVALUE
0x57b: V279 = ISZERO V278
0x57c: V280 = 0x137
0x57f: THROWI V279
---
Entry stack: [V265]
Stack pops: 0
Stack additions: [0x115, V278]
Exit stack: []

================================

Block 0x580
[0x580:0x5d6]
---
Predecessors: [0x555]
Successors: [0x5d7]
---
0x580 PUSH1 0x0
0x582 DUP1
0x583 REVERT
0x584 JUMPDEST
0x585 POP
0x586 PUSH2 0x16c
0x589 PUSH1 0x4
0x58b DUP1
0x58c CALLDATASIZE
0x58d SUB
0x58e DUP2
0x58f ADD
0x590 SWAP1
0x591 DUP1
0x592 DUP1
0x593 CALLDATALOAD
0x594 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a9 AND
0x5aa SWAP1
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae SWAP1
0x5af SWAP3
0x5b0 SWAP2
0x5b1 SWAP1
0x5b2 POP
0x5b3 POP
0x5b4 POP
0x5b5 PUSH2 0x47f
0x5b8 JUMP
0x5b9 JUMPDEST
0x5ba PUSH1 0x40
0x5bc MLOAD
0x5bd DUP1
0x5be DUP3
0x5bf DUP2
0x5c0 MSTORE
0x5c1 PUSH1 0x20
0x5c3 ADD
0x5c4 SWAP2
0x5c5 POP
0x5c6 POP
0x5c7 PUSH1 0x40
0x5c9 MLOAD
0x5ca DUP1
0x5cb SWAP2
0x5cc SUB
0x5cd SWAP1
0x5ce RETURN
0x5cf JUMPDEST
0x5d0 CALLVALUE
0x5d1 DUP1
0x5d2 ISZERO
0x5d3 PUSH2 0x18e
0x5d6 JUMPI
---
0x580: V281 = 0x0
0x583: REVERT 0x0 0x0
0x584: JUMPDEST 
0x586: V282 = 0x16c
0x589: V283 = 0x4
0x58c: V284 = CALLDATASIZE
0x58d: V285 = SUB V284 0x4
0x58f: V286 = ADD 0x4 V285
0x593: V287 = CALLDATALOAD 0x4
0x594: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a9: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x5ab: V290 = 0x20
0x5ad: V291 = ADD 0x20 0x4
0x5b5: V292 = 0x47f
0x5b8: THROW 
0x5b9: JUMPDEST 
0x5ba: V293 = 0x40
0x5bc: V294 = M[0x40]
0x5c0: M[V294] = S0
0x5c1: V295 = 0x20
0x5c3: V296 = ADD 0x20 V294
0x5c7: V297 = 0x40
0x5c9: V298 = M[0x40]
0x5cc: V299 = SUB V296 V298
0x5ce: RETURN V298 V299
0x5cf: JUMPDEST 
0x5d0: V300 = CALLVALUE
0x5d2: V301 = ISZERO V300
0x5d3: V302 = 0x18e
0x5d6: THROWI V301
---
Entry stack: [V278]
Stack pops: 0
Stack additions: [V289, 0x16c, V300]
Exit stack: []

================================

Block 0x5d7
[0x5d7:0x619]
---
Predecessors: [0x580]
Successors: [0x61a]
---
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da REVERT
0x5db JUMPDEST
0x5dc POP
0x5dd PUSH2 0x1c3
0x5e0 PUSH1 0x4
0x5e2 DUP1
0x5e3 CALLDATASIZE
0x5e4 SUB
0x5e5 DUP2
0x5e6 ADD
0x5e7 SWAP1
0x5e8 DUP1
0x5e9 DUP1
0x5ea CALLDATALOAD
0x5eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x600 AND
0x601 SWAP1
0x602 PUSH1 0x20
0x604 ADD
0x605 SWAP1
0x606 SWAP3
0x607 SWAP2
0x608 SWAP1
0x609 POP
0x60a POP
0x60b POP
0x60c PUSH2 0x4e2
0x60f JUMP
0x610 JUMPDEST
0x611 STOP
0x612 JUMPDEST
0x613 CALLVALUE
0x614 DUP1
0x615 ISZERO
0x616 PUSH2 0x1d1
0x619 JUMPI
---
0x5d7: V303 = 0x0
0x5da: REVERT 0x0 0x0
0x5db: JUMPDEST 
0x5dd: V304 = 0x1c3
0x5e0: V305 = 0x4
0x5e3: V306 = CALLDATASIZE
0x5e4: V307 = SUB V306 0x4
0x5e6: V308 = ADD 0x4 V307
0x5ea: V309 = CALLDATALOAD 0x4
0x5eb: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x600: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x602: V312 = 0x20
0x604: V313 = ADD 0x20 0x4
0x60c: V314 = 0x4e2
0x60f: THROW 
0x610: JUMPDEST 
0x611: STOP 
0x612: JUMPDEST 
0x613: V315 = CALLVALUE
0x615: V316 = ISZERO V315
0x616: V317 = 0x1d1
0x619: THROWI V316
---
Entry stack: [V300]
Stack pops: 0
Stack additions: [V311, 0x1c3, V315]
Exit stack: []

================================

Block 0x61a
[0x61a:0x670]
---
Predecessors: [0x5d7]
Successors: [0x671]
---
0x61a PUSH1 0x0
0x61c DUP1
0x61d REVERT
0x61e JUMPDEST
0x61f POP
0x620 PUSH2 0x206
0x623 PUSH1 0x4
0x625 DUP1
0x626 CALLDATASIZE
0x627 SUB
0x628 DUP2
0x629 ADD
0x62a SWAP1
0x62b DUP1
0x62c DUP1
0x62d CALLDATALOAD
0x62e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x643 AND
0x644 SWAP1
0x645 PUSH1 0x20
0x647 ADD
0x648 SWAP1
0x649 SWAP3
0x64a SWAP2
0x64b SWAP1
0x64c POP
0x64d POP
0x64e POP
0x64f PUSH2 0x61b
0x652 JUMP
0x653 JUMPDEST
0x654 PUSH1 0x40
0x656 MLOAD
0x657 DUP1
0x658 DUP3
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x20
0x65d ADD
0x65e SWAP2
0x65f POP
0x660 POP
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 SWAP2
0x666 SUB
0x667 SWAP1
0x668 RETURN
0x669 JUMPDEST
0x66a CALLVALUE
0x66b DUP1
0x66c ISZERO
0x66d PUSH2 0x228
0x670 JUMPI
---
0x61a: V318 = 0x0
0x61d: REVERT 0x0 0x0
0x61e: JUMPDEST 
0x620: V319 = 0x206
0x623: V320 = 0x4
0x626: V321 = CALLDATASIZE
0x627: V322 = SUB V321 0x4
0x629: V323 = ADD 0x4 V322
0x62d: V324 = CALLDATALOAD 0x4
0x62e: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x643: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x645: V327 = 0x20
0x647: V328 = ADD 0x20 0x4
0x64f: V329 = 0x61b
0x652: THROW 
0x653: JUMPDEST 
0x654: V330 = 0x40
0x656: V331 = M[0x40]
0x65a: M[V331] = S0
0x65b: V332 = 0x20
0x65d: V333 = ADD 0x20 V331
0x661: V334 = 0x40
0x663: V335 = M[0x40]
0x666: V336 = SUB V333 V335
0x668: RETURN V335 V336
0x669: JUMPDEST 
0x66a: V337 = CALLVALUE
0x66c: V338 = ISZERO V337
0x66d: V339 = 0x228
0x670: THROWI V338
---
Entry stack: [V315]
Stack pops: 0
Stack additions: [V326, 0x206, V337]
Exit stack: []

================================

Block 0x671
[0x671:0x6c7]
---
Predecessors: [0x61a]
Successors: [0x6c8]
---
0x671 PUSH1 0x0
0x673 DUP1
0x674 REVERT
0x675 JUMPDEST
0x676 POP
0x677 PUSH2 0x231
0x67a PUSH2 0x81f
0x67d JUMP
0x67e JUMPDEST
0x67f PUSH1 0x40
0x681 MLOAD
0x682 DUP1
0x683 DUP3
0x684 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x699 AND
0x69a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6af AND
0x6b0 DUP2
0x6b1 MSTORE
0x6b2 PUSH1 0x20
0x6b4 ADD
0x6b5 SWAP2
0x6b6 POP
0x6b7 POP
0x6b8 PUSH1 0x40
0x6ba MLOAD
0x6bb DUP1
0x6bc SWAP2
0x6bd SUB
0x6be SWAP1
0x6bf RETURN
0x6c0 JUMPDEST
0x6c1 CALLVALUE
0x6c2 DUP1
0x6c3 ISZERO
0x6c4 PUSH2 0x27f
0x6c7 JUMPI
---
0x671: V340 = 0x0
0x674: REVERT 0x0 0x0
0x675: JUMPDEST 
0x677: V341 = 0x231
0x67a: V342 = 0x81f
0x67d: THROW 
0x67e: JUMPDEST 
0x67f: V343 = 0x40
0x681: V344 = M[0x40]
0x684: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x699: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x69a: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x6af: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x6b1: M[V344] = V348
0x6b2: V349 = 0x20
0x6b4: V350 = ADD 0x20 V344
0x6b8: V351 = 0x40
0x6ba: V352 = M[0x40]
0x6bd: V353 = SUB V350 V352
0x6bf: RETURN V352 V353
0x6c0: JUMPDEST 
0x6c1: V354 = CALLVALUE
0x6c3: V355 = ISZERO V354
0x6c4: V356 = 0x27f
0x6c7: THROWI V355
---
Entry stack: [V337]
Stack pops: 0
Stack additions: [0x231, V354]
Exit stack: []

================================

Block 0x6c8
[0x6c8:0x6de]
---
Predecessors: [0x671]
Successors: [0x6df]
---
0x6c8 PUSH1 0x0
0x6ca DUP1
0x6cb REVERT
0x6cc JUMPDEST
0x6cd POP
0x6ce PUSH2 0x288
0x6d1 PUSH2 0x845
0x6d4 JUMP
0x6d5 JUMPDEST
0x6d6 STOP
0x6d7 JUMPDEST
0x6d8 CALLVALUE
0x6d9 DUP1
0x6da ISZERO
0x6db PUSH2 0x296
0x6de JUMPI
---
0x6c8: V357 = 0x0
0x6cb: REVERT 0x0 0x0
0x6cc: JUMPDEST 
0x6ce: V358 = 0x288
0x6d1: V359 = 0x845
0x6d4: THROW 
0x6d5: JUMPDEST 
0x6d6: STOP 
0x6d7: JUMPDEST 
0x6d8: V360 = CALLVALUE
0x6da: V361 = ISZERO V360
0x6db: V362 = 0x296
0x6de: THROWI V361
---
Entry stack: [V354]
Stack pops: 0
Stack additions: [0x288, V360]
Exit stack: []

================================

Block 0x6df
[0x6df:0x721]
---
Predecessors: [0x6c8]
Successors: [0x722]
---
0x6df PUSH1 0x0
0x6e1 DUP1
0x6e2 REVERT
0x6e3 JUMPDEST
0x6e4 POP
0x6e5 PUSH2 0x2cb
0x6e8 PUSH1 0x4
0x6ea DUP1
0x6eb CALLDATASIZE
0x6ec SUB
0x6ed DUP2
0x6ee ADD
0x6ef SWAP1
0x6f0 DUP1
0x6f1 DUP1
0x6f2 CALLDATALOAD
0x6f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x708 AND
0x709 SWAP1
0x70a PUSH1 0x20
0x70c ADD
0x70d SWAP1
0x70e SWAP3
0x70f SWAP2
0x710 SWAP1
0x711 POP
0x712 POP
0x713 POP
0x714 PUSH2 0x947
0x717 JUMP
0x718 JUMPDEST
0x719 STOP
0x71a JUMPDEST
0x71b CALLVALUE
0x71c DUP1
0x71d ISZERO
0x71e PUSH2 0x2d9
0x721 JUMPI
---
0x6df: V363 = 0x0
0x6e2: REVERT 0x0 0x0
0x6e3: JUMPDEST 
0x6e5: V364 = 0x2cb
0x6e8: V365 = 0x4
0x6eb: V366 = CALLDATASIZE
0x6ec: V367 = SUB V366 0x4
0x6ee: V368 = ADD 0x4 V367
0x6f2: V369 = CALLDATALOAD 0x4
0x6f3: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x708: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x70a: V372 = 0x20
0x70c: V373 = ADD 0x20 0x4
0x714: V374 = 0x947
0x717: THROW 
0x718: JUMPDEST 
0x719: STOP 
0x71a: JUMPDEST 
0x71b: V375 = CALLVALUE
0x71d: V376 = ISZERO V375
0x71e: V377 = 0x2d9
0x721: THROWI V376
---
Entry stack: [V360]
Stack pops: 0
Stack additions: [V371, 0x2cb, V375]
Exit stack: []

================================

Block 0x722
[0x722:0x750]
---
Predecessors: [0x6df]
Successors: [0x751]
---
0x722 PUSH1 0x0
0x724 DUP1
0x725 REVERT
0x726 JUMPDEST
0x727 POP
0x728 PUSH2 0x2e2
0x72b PUSH2 0xbe9
0x72e JUMP
0x72f JUMPDEST
0x730 PUSH1 0x40
0x732 MLOAD
0x733 DUP1
0x734 DUP3
0x735 ISZERO
0x736 ISZERO
0x737 ISZERO
0x738 ISZERO
0x739 DUP2
0x73a MSTORE
0x73b PUSH1 0x20
0x73d ADD
0x73e SWAP2
0x73f POP
0x740 POP
0x741 PUSH1 0x40
0x743 MLOAD
0x744 DUP1
0x745 SWAP2
0x746 SUB
0x747 SWAP1
0x748 RETURN
0x749 JUMPDEST
0x74a CALLVALUE
0x74b DUP1
0x74c ISZERO
0x74d PUSH2 0x308
0x750 JUMPI
---
0x722: V378 = 0x0
0x725: REVERT 0x0 0x0
0x726: JUMPDEST 
0x728: V379 = 0x2e2
0x72b: V380 = 0xbe9
0x72e: THROW 
0x72f: JUMPDEST 
0x730: V381 = 0x40
0x732: V382 = M[0x40]
0x735: V383 = ISZERO S0
0x736: V384 = ISZERO V383
0x737: V385 = ISZERO V384
0x738: V386 = ISZERO V385
0x73a: M[V382] = V386
0x73b: V387 = 0x20
0x73d: V388 = ADD 0x20 V382
0x741: V389 = 0x40
0x743: V390 = M[0x40]
0x746: V391 = SUB V388 V390
0x748: RETURN V390 V391
0x749: JUMPDEST 
0x74a: V392 = CALLVALUE
0x74c: V393 = ISZERO V392
0x74d: V394 = 0x308
0x750: THROWI V393
---
Entry stack: [V375]
Stack pops: 0
Stack additions: [0x2e2, V392]
Exit stack: []

================================

Block 0x751
[0x751:0x7a7]
---
Predecessors: [0x722]
Successors: [0x7a8]
---
0x751 PUSH1 0x0
0x753 DUP1
0x754 REVERT
0x755 JUMPDEST
0x756 POP
0x757 PUSH2 0x311
0x75a PUSH2 0xbfc
0x75d JUMP
0x75e JUMPDEST
0x75f PUSH1 0x40
0x761 MLOAD
0x762 DUP1
0x763 DUP3
0x764 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x779 AND
0x77a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78f AND
0x790 DUP2
0x791 MSTORE
0x792 PUSH1 0x20
0x794 ADD
0x795 SWAP2
0x796 POP
0x797 POP
0x798 PUSH1 0x40
0x79a MLOAD
0x79b DUP1
0x79c SWAP2
0x79d SUB
0x79e SWAP1
0x79f RETURN
0x7a0 JUMPDEST
0x7a1 CALLVALUE
0x7a2 DUP1
0x7a3 ISZERO
0x7a4 PUSH2 0x35f
0x7a7 JUMPI
---
0x751: V395 = 0x0
0x754: REVERT 0x0 0x0
0x755: JUMPDEST 
0x757: V396 = 0x311
0x75a: V397 = 0xbfc
0x75d: THROW 
0x75e: JUMPDEST 
0x75f: V398 = 0x40
0x761: V399 = M[0x40]
0x764: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x779: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x77a: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x78f: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x791: M[V399] = V403
0x792: V404 = 0x20
0x794: V405 = ADD 0x20 V399
0x798: V406 = 0x40
0x79a: V407 = M[0x40]
0x79d: V408 = SUB V405 V407
0x79f: RETURN V407 V408
0x7a0: JUMPDEST 
0x7a1: V409 = CALLVALUE
0x7a3: V410 = ISZERO V409
0x7a4: V411 = 0x35f
0x7a7: THROWI V410
---
Entry stack: [V392]
Stack pops: 0
Stack additions: [0x311, V409]
Exit stack: []

================================

Block 0x7a8
[0x7a8:0x7fe]
---
Predecessors: [0x751]
Successors: [0x7ff]
---
0x7a8 PUSH1 0x0
0x7aa DUP1
0x7ab REVERT
0x7ac JUMPDEST
0x7ad POP
0x7ae PUSH2 0x394
0x7b1 PUSH1 0x4
0x7b3 DUP1
0x7b4 CALLDATASIZE
0x7b5 SUB
0x7b6 DUP2
0x7b7 ADD
0x7b8 SWAP1
0x7b9 DUP1
0x7ba DUP1
0x7bb CALLDATALOAD
0x7bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d1 AND
0x7d2 SWAP1
0x7d3 PUSH1 0x20
0x7d5 ADD
0x7d6 SWAP1
0x7d7 SWAP3
0x7d8 SWAP2
0x7d9 SWAP1
0x7da POP
0x7db POP
0x7dc POP
0x7dd PUSH2 0xc21
0x7e0 JUMP
0x7e1 JUMPDEST
0x7e2 PUSH1 0x40
0x7e4 MLOAD
0x7e5 DUP1
0x7e6 DUP3
0x7e7 DUP2
0x7e8 MSTORE
0x7e9 PUSH1 0x20
0x7eb ADD
0x7ec SWAP2
0x7ed POP
0x7ee POP
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 DUP1
0x7f3 SWAP2
0x7f4 SUB
0x7f5 SWAP1
0x7f6 RETURN
0x7f7 JUMPDEST
0x7f8 CALLVALUE
0x7f9 DUP1
0x7fa ISZERO
0x7fb PUSH2 0x3b6
0x7fe JUMPI
---
0x7a8: V412 = 0x0
0x7ab: REVERT 0x0 0x0
0x7ac: JUMPDEST 
0x7ae: V413 = 0x394
0x7b1: V414 = 0x4
0x7b4: V415 = CALLDATASIZE
0x7b5: V416 = SUB V415 0x4
0x7b7: V417 = ADD 0x4 V416
0x7bb: V418 = CALLDATALOAD 0x4
0x7bc: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x7d3: V421 = 0x20
0x7d5: V422 = ADD 0x20 0x4
0x7dd: V423 = 0xc21
0x7e0: THROW 
0x7e1: JUMPDEST 
0x7e2: V424 = 0x40
0x7e4: V425 = M[0x40]
0x7e8: M[V425] = S0
0x7e9: V426 = 0x20
0x7eb: V427 = ADD 0x20 V425
0x7ef: V428 = 0x40
0x7f1: V429 = M[0x40]
0x7f4: V430 = SUB V427 V429
0x7f6: RETURN V429 V430
0x7f7: JUMPDEST 
0x7f8: V431 = CALLVALUE
0x7fa: V432 = ISZERO V431
0x7fb: V433 = 0x3b6
0x7fe: THROWI V432
---
Entry stack: [V409]
Stack pops: 0
Stack additions: [V420, 0x394, V431]
Exit stack: []

================================

Block 0x7ff
[0x7ff:0x829]
---
Predecessors: [0x7a8]
Successors: [0x82a]
---
0x7ff PUSH1 0x0
0x801 DUP1
0x802 REVERT
0x803 JUMPDEST
0x804 POP
0x805 PUSH2 0x3bf
0x808 PUSH2 0xc39
0x80b JUMP
0x80c JUMPDEST
0x80d PUSH1 0x40
0x80f MLOAD
0x810 DUP1
0x811 DUP3
0x812 DUP2
0x813 MSTORE
0x814 PUSH1 0x20
0x816 ADD
0x817 SWAP2
0x818 POP
0x819 POP
0x81a PUSH1 0x40
0x81c MLOAD
0x81d DUP1
0x81e SWAP2
0x81f SUB
0x820 SWAP1
0x821 RETURN
0x822 JUMPDEST
0x823 CALLVALUE
0x824 DUP1
0x825 ISZERO
0x826 PUSH2 0x3e1
0x829 JUMPI
---
0x7ff: V434 = 0x0
0x802: REVERT 0x0 0x0
0x803: JUMPDEST 
0x805: V435 = 0x3bf
0x808: V436 = 0xc39
0x80b: THROW 
0x80c: JUMPDEST 
0x80d: V437 = 0x40
0x80f: V438 = M[0x40]
0x813: M[V438] = S0
0x814: V439 = 0x20
0x816: V440 = ADD 0x20 V438
0x81a: V441 = 0x40
0x81c: V442 = M[0x40]
0x81f: V443 = SUB V440 V442
0x821: RETURN V442 V443
0x822: JUMPDEST 
0x823: V444 = CALLVALUE
0x825: V445 = ISZERO V444
0x826: V446 = 0x3e1
0x829: THROWI V445
---
Entry stack: [V431]
Stack pops: 0
Stack additions: [0x3bf, V444]
Exit stack: []

================================

Block 0x82a
[0x82a:0x86c]
---
Predecessors: [0x7ff]
Successors: [0x86d]
---
0x82a PUSH1 0x0
0x82c DUP1
0x82d REVERT
0x82e JUMPDEST
0x82f POP
0x830 PUSH2 0x416
0x833 PUSH1 0x4
0x835 DUP1
0x836 CALLDATASIZE
0x837 SUB
0x838 DUP2
0x839 ADD
0x83a SWAP1
0x83b DUP1
0x83c DUP1
0x83d CALLDATALOAD
0x83e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x853 AND
0x854 SWAP1
0x855 PUSH1 0x20
0x857 ADD
0x858 SWAP1
0x859 SWAP3
0x85a SWAP2
0x85b SWAP1
0x85c POP
0x85d POP
0x85e POP
0x85f PUSH2 0xc3f
0x862 JUMP
0x863 JUMPDEST
0x864 STOP
0x865 JUMPDEST
0x866 CALLVALUE
0x867 DUP1
0x868 ISZERO
0x869 PUSH2 0x424
0x86c JUMPI
---
0x82a: V447 = 0x0
0x82d: REVERT 0x0 0x0
0x82e: JUMPDEST 
0x830: V448 = 0x416
0x833: V449 = 0x4
0x836: V450 = CALLDATASIZE
0x837: V451 = SUB V450 0x4
0x839: V452 = ADD 0x4 V451
0x83d: V453 = CALLDATALOAD 0x4
0x83e: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x853: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x855: V456 = 0x20
0x857: V457 = ADD 0x20 0x4
0x85f: V458 = 0xc3f
0x862: THROW 
0x863: JUMPDEST 
0x864: STOP 
0x865: JUMPDEST 
0x866: V459 = CALLVALUE
0x868: V460 = ISZERO V459
0x869: V461 = 0x424
0x86c: THROWI V460
---
Entry stack: [V444]
Stack pops: 0
Stack additions: [V455, 0x416, V459]
Exit stack: []

================================

Block 0x86d
[0x86d:0x8a5]
---
Predecessors: [0x82a]
Successors: [0xd94]
---
0x86d PUSH1 0x0
0x86f DUP1
0x870 REVERT
0x871 JUMPDEST
0x872 POP
0x873 PUSH2 0x459
0x876 PUSH1 0x4
0x878 DUP1
0x879 CALLDATASIZE
0x87a SUB
0x87b DUP2
0x87c ADD
0x87d SWAP1
0x87e DUP1
0x87f DUP1
0x880 CALLDATALOAD
0x881 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x896 AND
0x897 SWAP1
0x898 PUSH1 0x20
0x89a ADD
0x89b SWAP1
0x89c SWAP3
0x89d SWAP2
0x89e SWAP1
0x89f POP
0x8a0 POP
0x8a1 POP
0x8a2 PUSH2 0xd94
0x8a5 JUMP
---
0x86d: V462 = 0x0
0x870: REVERT 0x0 0x0
0x871: JUMPDEST 
0x873: V463 = 0x459
0x876: V464 = 0x4
0x879: V465 = CALLDATASIZE
0x87a: V466 = SUB V465 0x4
0x87c: V467 = ADD 0x4 V466
0x880: V468 = CALLDATALOAD 0x4
0x881: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x896: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x898: V471 = 0x20
0x89a: V472 = ADD 0x20 0x4
0x8a2: V473 = 0xd94
0x8a5: JUMP 0xd94
---
Entry stack: [V459]
Stack pops: 0
Stack additions: [V470, 0x459]
Exit stack: []

================================

Block 0x8a6
[0x8a6:0x946]
---
Predecessors: []
Successors: [0x947]
---
0x8a6 JUMPDEST
0x8a7 PUSH1 0x40
0x8a9 MLOAD
0x8aa DUP1
0x8ab DUP3
0x8ac ISZERO
0x8ad ISZERO
0x8ae ISZERO
0x8af ISZERO
0x8b0 DUP2
0x8b1 MSTORE
0x8b2 PUSH1 0x20
0x8b4 ADD
0x8b5 SWAP2
0x8b6 POP
0x8b7 POP
0x8b8 PUSH1 0x40
0x8ba MLOAD
0x8bb DUP1
0x8bc SWAP2
0x8bd SUB
0x8be SWAP1
0x8bf RETURN
0x8c0 JUMPDEST
0x8c1 PUSH1 0x4
0x8c3 SLOAD
0x8c4 DUP2
0x8c5 JUMP
0x8c6 JUMPDEST
0x8c7 PUSH1 0x2
0x8c9 SLOAD
0x8ca DUP2
0x8cb JUMP
0x8cc JUMPDEST
0x8cd PUSH1 0x0
0x8cf PUSH2 0x4db
0x8d2 PUSH1 0x6
0x8d4 PUSH1 0x0
0x8d6 DUP5
0x8d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ec AND
0x8ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x902 AND
0x903 DUP2
0x904 MSTORE
0x905 PUSH1 0x20
0x907 ADD
0x908 SWAP1
0x909 DUP2
0x90a MSTORE
0x90b PUSH1 0x20
0x90d ADD
0x90e PUSH1 0x0
0x910 SHA3
0x911 SLOAD
0x912 PUSH2 0x4cd
0x915 DUP5
0x916 PUSH2 0x61b
0x919 JUMP
0x91a JUMPDEST
0x91b PUSH2 0xdb4
0x91e SWAP1
0x91f SWAP2
0x920 SWAP1
0x921 PUSH4 0xffffffff
0x926 AND
0x927 JUMP
0x928 JUMPDEST
0x929 SWAP1
0x92a POP
0x92b SWAP2
0x92c SWAP1
0x92d POP
0x92e JUMP
0x92f JUMPDEST
0x930 PUSH1 0x0
0x932 PUSH2 0x4ed
0x935 DUP3
0x936 PUSH2 0x47f
0x939 JUMP
0x93a JUMPDEST
0x93b SWAP1
0x93c POP
0x93d PUSH1 0x0
0x93f DUP2
0x940 GT
0x941 ISZERO
0x942 ISZERO
0x943 PUSH2 0x4fe
0x946 JUMPI
---
0x8a6: JUMPDEST 
0x8a7: V474 = 0x40
0x8a9: V475 = M[0x40]
0x8ac: V476 = ISZERO S0
0x8ad: V477 = ISZERO V476
0x8ae: V478 = ISZERO V477
0x8af: V479 = ISZERO V478
0x8b1: M[V475] = V479
0x8b2: V480 = 0x20
0x8b4: V481 = ADD 0x20 V475
0x8b8: V482 = 0x40
0x8ba: V483 = M[0x40]
0x8bd: V484 = SUB V481 V483
0x8bf: RETURN V483 V484
0x8c0: JUMPDEST 
0x8c1: V485 = 0x4
0x8c3: V486 = S[0x4]
0x8c5: JUMP S0
0x8c6: JUMPDEST 
0x8c7: V487 = 0x2
0x8c9: V488 = S[0x2]
0x8cb: JUMP S0
0x8cc: JUMPDEST 
0x8cd: V489 = 0x0
0x8cf: V490 = 0x4db
0x8d2: V491 = 0x6
0x8d4: V492 = 0x0
0x8d7: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8ed: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x902: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x904: M[0x0] = V496
0x905: V497 = 0x20
0x907: V498 = ADD 0x20 0x0
0x90a: M[0x20] = 0x6
0x90b: V499 = 0x20
0x90d: V500 = ADD 0x20 0x20
0x90e: V501 = 0x0
0x910: V502 = SHA3 0x0 0x40
0x911: V503 = S[V502]
0x912: V504 = 0x4cd
0x916: V505 = 0x61b
0x919: THROW 
0x91a: JUMPDEST 
0x91b: V506 = 0xdb4
0x921: V507 = 0xffffffff
0x926: V508 = AND 0xffffffff 0xdb4
0x927: THROW 
0x928: JUMPDEST 
0x92e: JUMP S3
0x92f: JUMPDEST 
0x930: V509 = 0x0
0x932: V510 = 0x4ed
0x936: V511 = 0x47f
0x939: THROW 
0x93a: JUMPDEST 
0x93d: V512 = 0x0
0x940: V513 = GT S0 0x0
0x941: V514 = ISZERO V513
0x942: V515 = ISZERO V514
0x943: V516 = 0x4fe
0x946: THROWI V515
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, 0x4cd, V503, S0, 0x4ed, S0]
Exit stack: []

================================

Block 0x947
[0x947:0xb03]
---
Predecessors: [0x8a6]
Successors: [0xb04]
---
0x947 PUSH1 0x0
0x949 DUP1
0x94a REVERT
0x94b JUMPDEST
0x94c PUSH2 0x550
0x94f DUP2
0x950 PUSH1 0x6
0x952 PUSH1 0x0
0x954 DUP6
0x955 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96a AND
0x96b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x980 AND
0x981 DUP2
0x982 MSTORE
0x983 PUSH1 0x20
0x985 ADD
0x986 SWAP1
0x987 DUP2
0x988 MSTORE
0x989 PUSH1 0x20
0x98b ADD
0x98c PUSH1 0x0
0x98e SHA3
0x98f SLOAD
0x990 PUSH2 0xdcd
0x993 SWAP1
0x994 SWAP2
0x995 SWAP1
0x996 PUSH4 0xffffffff
0x99b AND
0x99c JUMP
0x99d JUMPDEST
0x99e PUSH1 0x6
0x9a0 PUSH1 0x0
0x9a2 DUP5
0x9a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b8 AND
0x9b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ce AND
0x9cf DUP2
0x9d0 MSTORE
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 SWAP1
0x9d5 DUP2
0x9d6 MSTORE
0x9d7 PUSH1 0x20
0x9d9 ADD
0x9da PUSH1 0x0
0x9dc SHA3
0x9dd DUP2
0x9de SWAP1
0x9df SSTORE
0x9e0 POP
0x9e1 PUSH2 0x5e0
0x9e4 PUSH1 0x1
0x9e6 PUSH1 0x0
0x9e8 SWAP1
0x9e9 SLOAD
0x9ea SWAP1
0x9eb PUSH2 0x100
0x9ee EXP
0x9ef SWAP1
0x9f0 DIV
0x9f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa06 AND
0xa07 DUP3
0xa08 DUP5
0xa09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1e AND
0xa1f PUSH2 0xde9
0xa22 SWAP1
0xa23 SWAP3
0xa24 SWAP2
0xa25 SWAP1
0xa26 PUSH4 0xffffffff
0xa2b AND
0xa2c JUMP
0xa2d JUMPDEST
0xa2e PUSH32 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0xa4f DUP2
0xa50 PUSH1 0x40
0xa52 MLOAD
0xa53 DUP1
0xa54 DUP3
0xa55 DUP2
0xa56 MSTORE
0xa57 PUSH1 0x20
0xa59 ADD
0xa5a SWAP2
0xa5b POP
0xa5c POP
0xa5d PUSH1 0x40
0xa5f MLOAD
0xa60 DUP1
0xa61 SWAP2
0xa62 SUB
0xa63 SWAP1
0xa64 LOG1
0xa65 POP
0xa66 POP
0xa67 JUMP
0xa68 JUMPDEST
0xa69 PUSH1 0x0
0xa6b DUP1
0xa6c PUSH1 0x0
0xa6e DUP4
0xa6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa84 AND
0xa85 PUSH4 0x70a08231
0xa8a ADDRESS
0xa8b PUSH1 0x40
0xa8d MLOAD
0xa8e DUP3
0xa8f PUSH4 0xffffffff
0xa94 AND
0xa95 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xab3 MUL
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x4
0xab8 ADD
0xab9 DUP1
0xaba DUP3
0xabb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad0 AND
0xad1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae6 AND
0xae7 DUP2
0xae8 MSTORE
0xae9 PUSH1 0x20
0xaeb ADD
0xaec SWAP2
0xaed POP
0xaee POP
0xaef PUSH1 0x20
0xaf1 PUSH1 0x40
0xaf3 MLOAD
0xaf4 DUP1
0xaf5 DUP4
0xaf6 SUB
0xaf7 DUP2
0xaf8 PUSH1 0x0
0xafa DUP8
0xafb DUP1
0xafc EXTCODESIZE
0xafd ISZERO
0xafe DUP1
0xaff ISZERO
0xb00 PUSH2 0x6bb
0xb03 JUMPI
---
0x947: V517 = 0x0
0x94a: REVERT 0x0 0x0
0x94b: JUMPDEST 
0x94c: V518 = 0x550
0x950: V519 = 0x6
0x952: V520 = 0x0
0x955: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x96a: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x96b: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x980: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x982: M[0x0] = V524
0x983: V525 = 0x20
0x985: V526 = ADD 0x20 0x0
0x988: M[0x20] = 0x6
0x989: V527 = 0x20
0x98b: V528 = ADD 0x20 0x20
0x98c: V529 = 0x0
0x98e: V530 = SHA3 0x0 0x40
0x98f: V531 = S[V530]
0x990: V532 = 0xdcd
0x996: V533 = 0xffffffff
0x99b: V534 = AND 0xffffffff 0xdcd
0x99c: THROW 
0x99d: JUMPDEST 
0x99e: V535 = 0x6
0x9a0: V536 = 0x0
0x9a3: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b8: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9b9: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ce: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x9d0: M[0x0] = V540
0x9d1: V541 = 0x20
0x9d3: V542 = ADD 0x20 0x0
0x9d6: M[0x20] = 0x6
0x9d7: V543 = 0x20
0x9d9: V544 = ADD 0x20 0x20
0x9da: V545 = 0x0
0x9dc: V546 = SHA3 0x0 0x40
0x9df: S[V546] = S0
0x9e1: V547 = 0x5e0
0x9e4: V548 = 0x1
0x9e6: V549 = 0x0
0x9e9: V550 = S[0x1]
0x9eb: V551 = 0x100
0x9ee: V552 = EXP 0x100 0x0
0x9f0: V553 = DIV V550 0x1
0x9f1: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0xa06: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0xa09: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1e: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa1f: V558 = 0xde9
0xa26: V559 = 0xffffffff
0xa2b: V560 = AND 0xffffffff 0xde9
0xa2c: THROW 
0xa2d: JUMPDEST 
0xa2e: V561 = 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0xa50: V562 = 0x40
0xa52: V563 = M[0x40]
0xa56: M[V563] = S0
0xa57: V564 = 0x20
0xa59: V565 = ADD 0x20 V563
0xa5d: V566 = 0x40
0xa5f: V567 = M[0x40]
0xa62: V568 = SUB V565 V567
0xa64: LOG V567 V568 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0xa67: JUMP S2
0xa68: JUMPDEST 
0xa69: V569 = 0x0
0xa6c: V570 = 0x0
0xa6f: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0xa84: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa85: V573 = 0x70a08231
0xa8a: V574 = ADDRESS
0xa8b: V575 = 0x40
0xa8d: V576 = M[0x40]
0xa8f: V577 = 0xffffffff
0xa94: V578 = AND 0xffffffff 0x70a08231
0xa95: V579 = 0x100000000000000000000000000000000000000000000000000000000
0xab3: V580 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xab5: M[V576] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xab6: V581 = 0x4
0xab8: V582 = ADD 0x4 V576
0xabb: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0xad0: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0xad1: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0xae6: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0xae8: M[V582] = V586
0xae9: V587 = 0x20
0xaeb: V588 = ADD 0x20 V582
0xaef: V589 = 0x20
0xaf1: V590 = 0x40
0xaf3: V591 = M[0x40]
0xaf6: V592 = SUB V588 V591
0xaf8: V593 = 0x0
0xafc: V594 = EXTCODESIZE V572
0xafd: V595 = ISZERO V594
0xaff: V596 = ISZERO V595
0xb00: V597 = 0x6bb
0xb03: THROWI V596
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0, V531, 0x550, S0, S1, S1, V555, V557, 0x5e0, S1, S2, V595, V572, 0x0, V591, V592, V591, 0x20, V588, 0x70a08231, V572, 0x0, 0x0, 0x0, S0]
Exit stack: []

================================

Block 0xb04
[0xb04:0xb12]
---
Predecessors: [0x947]
Successors: [0xb13]
---
0xb04 PUSH1 0x0
0xb06 DUP1
0xb07 REVERT
0xb08 JUMPDEST
0xb09 POP
0xb0a GAS
0xb0b CALL
0xb0c ISZERO
0xb0d DUP1
0xb0e ISZERO
0xb0f PUSH2 0x6cf
0xb12 JUMPI
---
0xb04: V598 = 0x0
0xb07: REVERT 0x0 0x0
0xb08: JUMPDEST 
0xb0a: V599 = GAS
0xb0b: V600 = CALL V599 S1 S2 S3 S4 S5 S6
0xb0c: V601 = ISZERO V600
0xb0e: V602 = ISZERO V601
0xb0f: V603 = 0x6cf
0xb12: THROWI V602
---
Entry stack: [S13, 0x0, 0x0, 0x0, V572, 0x70a08231, V588, 0x20, V591, V592, V591, 0x0, V572, V595]
Stack pops: 0
Stack additions: [V601]
Exit stack: []

================================

Block 0xb13
[0xb13:0xb2d]
---
Predecessors: [0xb04]
Successors: [0xb2e]
---
0xb13 RETURNDATASIZE
0xb14 PUSH1 0x0
0xb16 DUP1
0xb17 RETURNDATACOPY
0xb18 RETURNDATASIZE
0xb19 PUSH1 0x0
0xb1b REVERT
0xb1c JUMPDEST
0xb1d POP
0xb1e POP
0xb1f POP
0xb20 POP
0xb21 PUSH1 0x40
0xb23 MLOAD
0xb24 RETURNDATASIZE
0xb25 PUSH1 0x20
0xb27 DUP2
0xb28 LT
0xb29 ISZERO
0xb2a PUSH2 0x6e5
0xb2d JUMPI
---
0xb13: V604 = RETURNDATASIZE
0xb14: V605 = 0x0
0xb17: RETURNDATACOPY 0x0 0x0 V604
0xb18: V606 = RETURNDATASIZE
0xb19: V607 = 0x0
0xb1b: REVERT 0x0 V606
0xb1c: JUMPDEST 
0xb21: V608 = 0x40
0xb23: V609 = M[0x40]
0xb24: V610 = RETURNDATASIZE
0xb25: V611 = 0x20
0xb28: V612 = LT V610 0x20
0xb29: V613 = ISZERO V612
0xb2a: V614 = 0x6e5
0xb2d: THROWI V613
---
Entry stack: [V601]
Stack pops: 0
Stack additions: [V610, V609]
Exit stack: []

================================

Block 0xb2e
[0xb2e:0xba3]
---
Predecessors: [0xb13]
Successors: [0xba4]
---
0xb2e PUSH1 0x0
0xb30 DUP1
0xb31 REVERT
0xb32 JUMPDEST
0xb33 DUP2
0xb34 ADD
0xb35 SWAP1
0xb36 DUP1
0xb37 DUP1
0xb38 MLOAD
0xb39 SWAP1
0xb3a PUSH1 0x20
0xb3c ADD
0xb3d SWAP1
0xb3e SWAP3
0xb3f SWAP2
0xb40 SWAP1
0xb41 POP
0xb42 POP
0xb43 POP
0xb44 SWAP2
0xb45 POP
0xb46 PUSH2 0x74a
0xb49 PUSH1 0x6
0xb4b PUSH1 0x0
0xb4d DUP7
0xb4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb63 AND
0xb64 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb79 AND
0xb7a DUP2
0xb7b MSTORE
0xb7c PUSH1 0x20
0xb7e ADD
0xb7f SWAP1
0xb80 DUP2
0xb81 MSTORE
0xb82 PUSH1 0x20
0xb84 ADD
0xb85 PUSH1 0x0
0xb87 SHA3
0xb88 SLOAD
0xb89 DUP4
0xb8a PUSH2 0xdcd
0xb8d SWAP1
0xb8e SWAP2
0xb8f SWAP1
0xb90 PUSH4 0xffffffff
0xb95 AND
0xb96 JUMP
0xb97 JUMPDEST
0xb98 SWAP1
0xb99 POP
0xb9a PUSH1 0x2
0xb9c SLOAD
0xb9d TIMESTAMP
0xb9e LT
0xb9f ISZERO
0xba0 PUSH2 0x75f
0xba3 JUMPI
---
0xb2e: V615 = 0x0
0xb31: REVERT 0x0 0x0
0xb32: JUMPDEST 
0xb34: V616 = ADD S1 S0
0xb38: V617 = M[S1]
0xb3a: V618 = 0x20
0xb3c: V619 = ADD 0x20 S1
0xb46: V620 = 0x74a
0xb49: V621 = 0x6
0xb4b: V622 = 0x0
0xb4e: V623 = 0xffffffffffffffffffffffffffffffffffffffff
0xb63: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xb64: V625 = 0xffffffffffffffffffffffffffffffffffffffff
0xb79: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0xb7b: M[0x0] = V626
0xb7c: V627 = 0x20
0xb7e: V628 = ADD 0x20 0x0
0xb81: M[0x20] = 0x6
0xb82: V629 = 0x20
0xb84: V630 = ADD 0x20 0x20
0xb85: V631 = 0x0
0xb87: V632 = SHA3 0x0 0x40
0xb88: V633 = S[V632]
0xb8a: V634 = 0xdcd
0xb90: V635 = 0xffffffff
0xb95: V636 = AND 0xffffffff 0xdcd
0xb96: THROW 
0xb97: JUMPDEST 
0xb9a: V637 = 0x2
0xb9c: V638 = S[0x2]
0xb9d: V639 = TIMESTAMP
0xb9e: V640 = LT V639 V638
0xb9f: V641 = ISZERO V640
0xba0: V642 = 0x75f
0xba3: THROWI V641
---
Entry stack: [V609, V610]
Stack pops: 0
Stack additions: [V633, V617, 0x74a, S2, V617, S4, S5, S0]
Exit stack: []

================================

Block 0xba4
[0xba4:0xbcb]
---
Predecessors: [0xb2e]
Successors: [0xbcc]
---
0xba4 PUSH1 0x0
0xba6 SWAP3
0xba7 POP
0xba8 PUSH2 0x818
0xbab JUMP
0xbac JUMPDEST
0xbad PUSH2 0x776
0xbb0 PUSH1 0x4
0xbb2 SLOAD
0xbb3 PUSH1 0x3
0xbb5 SLOAD
0xbb6 PUSH2 0xdcd
0xbb9 SWAP1
0xbba SWAP2
0xbbb SWAP1
0xbbc PUSH4 0xffffffff
0xbc1 AND
0xbc2 JUMP
0xbc3 JUMPDEST
0xbc4 TIMESTAMP
0xbc5 LT
0xbc6 ISZERO
0xbc7 DUP1
0xbc8 PUSH2 0x7cd
0xbcb JUMPI
---
0xba4: V643 = 0x0
0xba8: V644 = 0x818
0xbab: THROW 
0xbac: JUMPDEST 
0xbad: V645 = 0x776
0xbb0: V646 = 0x4
0xbb2: V647 = S[0x4]
0xbb3: V648 = 0x3
0xbb5: V649 = S[0x3]
0xbb6: V650 = 0xdcd
0xbbc: V651 = 0xffffffff
0xbc1: V652 = AND 0xffffffff 0xdcd
0xbc2: THROW 
0xbc3: JUMPDEST 
0xbc4: V653 = TIMESTAMP
0xbc5: V654 = LT V653 S0
0xbc6: V655 = ISZERO V654
0xbc8: V656 = 0x7cd
0xbcb: THROWI V655
---
Entry stack: [S0]
Stack pops: 3
Stack additions: [V655]
Exit stack: []

================================

Block 0xbcc
[0xbcc:0xc19]
---
Predecessors: [0xba4]
Successors: [0xc1a]
---
0xbcc POP
0xbcd PUSH1 0x7
0xbcf PUSH1 0x0
0xbd1 DUP6
0xbd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe7 AND
0xbe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfd AND
0xbfe DUP2
0xbff MSTORE
0xc00 PUSH1 0x20
0xc02 ADD
0xc03 SWAP1
0xc04 DUP2
0xc05 MSTORE
0xc06 PUSH1 0x20
0xc08 ADD
0xc09 PUSH1 0x0
0xc0b SHA3
0xc0c PUSH1 0x0
0xc0e SWAP1
0xc0f SLOAD
0xc10 SWAP1
0xc11 PUSH2 0x100
0xc14 EXP
0xc15 SWAP1
0xc16 DIV
0xc17 PUSH1 0xff
0xc19 AND
---
0xbcd: V657 = 0x7
0xbcf: V658 = 0x0
0xbd2: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe7: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xbe8: V661 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfd: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0xbff: M[0x0] = V662
0xc00: V663 = 0x20
0xc02: V664 = ADD 0x20 0x0
0xc05: M[0x20] = 0x7
0xc06: V665 = 0x20
0xc08: V666 = ADD 0x20 0x20
0xc09: V667 = 0x0
0xc0b: V668 = SHA3 0x0 0x40
0xc0c: V669 = 0x0
0xc0f: V670 = S[V668]
0xc11: V671 = 0x100
0xc14: V672 = EXP 0x100 0x0
0xc16: V673 = DIV V670 0x1
0xc17: V674 = 0xff
0xc19: V675 = AND 0xff V673
---
Entry stack: [V655]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V675]
Exit stack: [S3, S2, S1, S0, V675]

================================

Block 0xc1a
[0xc1a:0xc1f]
---
Predecessors: [0xbcc]
Successors: [0xc20]
---
0xc1a JUMPDEST
0xc1b ISZERO
0xc1c PUSH2 0x7da
0xc1f JUMPI
---
0xc1a: JUMPDEST 
0xc1b: V676 = ISZERO V675
0xc1c: V677 = 0x7da
0xc1f: THROWI V676
---
Entry stack: [S4, S3, S2, S1, V675]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, S1]

================================

Block 0xc20
[0xc20:0xc64]
---
Predecessors: [0xc1a]
Successors: [0xc65]
---
0xc20 DUP1
0xc21 SWAP3
0xc22 POP
0xc23 PUSH2 0x818
0xc26 JUMP
0xc27 JUMPDEST
0xc28 PUSH2 0x815
0xc2b PUSH1 0x4
0xc2d SLOAD
0xc2e PUSH2 0x807
0xc31 PUSH2 0x7f8
0xc34 PUSH1 0x3
0xc36 SLOAD
0xc37 TIMESTAMP
0xc38 PUSH2 0xdb4
0xc3b SWAP1
0xc3c SWAP2
0xc3d SWAP1
0xc3e PUSH4 0xffffffff
0xc43 AND
0xc44 JUMP
0xc45 JUMPDEST
0xc46 DUP5
0xc47 PUSH2 0xecd
0xc4a SWAP1
0xc4b SWAP2
0xc4c SWAP1
0xc4d PUSH4 0xffffffff
0xc52 AND
0xc53 JUMP
0xc54 JUMPDEST
0xc55 PUSH2 0xf05
0xc58 SWAP1
0xc59 SWAP2
0xc5a SWAP1
0xc5b PUSH4 0xffffffff
0xc60 AND
0xc61 JUMP
0xc62 JUMPDEST
0xc63 SWAP3
0xc64 POP
---
0xc23: V678 = 0x818
0xc26: THROW 
0xc27: JUMPDEST 
0xc28: V679 = 0x815
0xc2b: V680 = 0x4
0xc2d: V681 = S[0x4]
0xc2e: V682 = 0x807
0xc31: V683 = 0x7f8
0xc34: V684 = 0x3
0xc36: V685 = S[0x3]
0xc37: V686 = TIMESTAMP
0xc38: V687 = 0xdb4
0xc3e: V688 = 0xffffffff
0xc43: V689 = AND 0xffffffff 0xdb4
0xc44: THROW 
0xc45: JUMPDEST 
0xc47: V690 = 0xecd
0xc4d: V691 = 0xffffffff
0xc52: V692 = AND 0xffffffff 0xecd
0xc53: THROW 
0xc54: JUMPDEST 
0xc55: V693 = 0xf05
0xc5b: V694 = 0xffffffff
0xc60: V695 = AND 0xffffffff 0xf05
0xc61: THROW 
0xc62: JUMPDEST 
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V685, V686, 0x7f8, S0, S4, S1, S2, S0]
Exit stack: []

================================

Block 0xc65
[0xc65:0xce8]
---
Predecessors: [0xc20]
Successors: [0xce9]
---
0xc65 JUMPDEST
0xc66 POP
0xc67 POP
0xc68 SWAP2
0xc69 SWAP1
0xc6a POP
0xc6b JUMP
0xc6c JUMPDEST
0xc6d PUSH1 0x1
0xc6f PUSH1 0x0
0xc71 SWAP1
0xc72 SLOAD
0xc73 SWAP1
0xc74 PUSH2 0x100
0xc77 EXP
0xc78 SWAP1
0xc79 DIV
0xc7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8f AND
0xc90 DUP2
0xc91 JUMP
0xc92 JUMPDEST
0xc93 PUSH1 0x0
0xc95 DUP1
0xc96 SWAP1
0xc97 SLOAD
0xc98 SWAP1
0xc99 PUSH2 0x100
0xc9c EXP
0xc9d SWAP1
0xc9e DIV
0xc9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb4 AND
0xcb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcca AND
0xccb CALLER
0xccc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce1 AND
0xce2 EQ
0xce3 ISZERO
0xce4 ISZERO
0xce5 PUSH2 0x8a0
0xce8 JUMPI
---
0xc65: JUMPDEST 
0xc6b: JUMP S4
0xc6c: JUMPDEST 
0xc6d: V696 = 0x1
0xc6f: V697 = 0x0
0xc72: V698 = S[0x1]
0xc74: V699 = 0x100
0xc77: V700 = EXP 0x100 0x0
0xc79: V701 = DIV V698 0x1
0xc7a: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8f: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0xc91: JUMP S0
0xc92: JUMPDEST 
0xc93: V704 = 0x0
0xc97: V705 = S[0x0]
0xc99: V706 = 0x100
0xc9c: V707 = EXP 0x100 0x0
0xc9e: V708 = DIV V705 0x1
0xc9f: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb4: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xcb5: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0xcca: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0xccb: V713 = CALLER
0xccc: V714 = 0xffffffffffffffffffffffffffffffffffffffff
0xce1: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff V713
0xce2: V716 = EQ V715 V712
0xce3: V717 = ISZERO V716
0xce4: V718 = ISZERO V717
0xce5: V719 = 0x8a0
0xce8: THROWI V718
---
Entry stack: [S2, S1, S0]
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0xce9
[0xce9:0xd93]
---
Predecessors: [0xc65]
Successors: []
Has unresolved jump.
---
0xce9 PUSH1 0x0
0xceb DUP1
0xcec REVERT
0xced JUMPDEST
0xcee PUSH1 0x0
0xcf0 DUP1
0xcf1 SWAP1
0xcf2 SLOAD
0xcf3 SWAP1
0xcf4 PUSH2 0x100
0xcf7 EXP
0xcf8 SWAP1
0xcf9 DIV
0xcfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0f AND
0xd10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd25 AND
0xd26 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0xd47 PUSH1 0x40
0xd49 MLOAD
0xd4a PUSH1 0x40
0xd4c MLOAD
0xd4d DUP1
0xd4e SWAP2
0xd4f SUB
0xd50 SWAP1
0xd51 LOG2
0xd52 PUSH1 0x0
0xd54 DUP1
0xd55 PUSH1 0x0
0xd57 PUSH2 0x100
0xd5a EXP
0xd5b DUP2
0xd5c SLOAD
0xd5d DUP2
0xd5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd73 MUL
0xd74 NOT
0xd75 AND
0xd76 SWAP1
0xd77 DUP4
0xd78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8d AND
0xd8e MUL
0xd8f OR
0xd90 SWAP1
0xd91 SSTORE
0xd92 POP
0xd93 JUMP
---
0xce9: V720 = 0x0
0xcec: REVERT 0x0 0x0
0xced: JUMPDEST 
0xcee: V721 = 0x0
0xcf2: V722 = S[0x0]
0xcf4: V723 = 0x100
0xcf7: V724 = EXP 0x100 0x0
0xcf9: V725 = DIV V722 0x1
0xcfa: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0f: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0xd10: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xd25: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0xd26: V730 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0xd47: V731 = 0x40
0xd49: V732 = M[0x40]
0xd4a: V733 = 0x40
0xd4c: V734 = M[0x40]
0xd4f: V735 = SUB V732 V734
0xd51: LOG V734 V735 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V729
0xd52: V736 = 0x0
0xd55: V737 = 0x0
0xd57: V738 = 0x100
0xd5a: V739 = EXP 0x100 0x0
0xd5c: V740 = S[0x0]
0xd5e: V741 = 0xffffffffffffffffffffffffffffffffffffffff
0xd73: V742 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xd74: V743 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd75: V744 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V740
0xd78: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8d: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xd8e: V747 = MUL 0x0 0x1
0xd8f: V748 = OR 0x0 V744
0xd91: S[0x0] = V748
0xd93: JUMP S0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd94
[0xd94:0xdef]
---
Predecessors: [0x86d]
Successors: [0xdf0]
---
0xd94 JUMPDEST
0xd95 PUSH1 0x0
0xd97 DUP1
0xd98 PUSH1 0x0
0xd9a DUP1
0xd9b PUSH1 0x0
0xd9d SWAP1
0xd9e SLOAD
0xd9f SWAP1
0xda0 PUSH2 0x100
0xda3 EXP
0xda4 SWAP1
0xda5 DIV
0xda6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdbb AND
0xdbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd1 AND
0xdd2 CALLER
0xdd3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde8 AND
0xde9 EQ
0xdea ISZERO
0xdeb ISZERO
0xdec PUSH2 0x9a7
0xdef JUMPI
---
0xd94: JUMPDEST 
0xd95: V749 = 0x0
0xd98: V750 = 0x0
0xd9b: V751 = 0x0
0xd9e: V752 = S[0x0]
0xda0: V753 = 0x100
0xda3: V754 = EXP 0x100 0x0
0xda5: V755 = DIV V752 0x1
0xda6: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xdbb: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0xdbc: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd1: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xdd2: V760 = CALLER
0xdd3: V761 = 0xffffffffffffffffffffffffffffffffffffffff
0xde8: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0xde9: V763 = EQ V762 V759
0xdea: V764 = ISZERO V763
0xdeb: V765 = ISZERO V764
0xdec: V766 = 0x9a7
0xdef: THROWI V765
---
Entry stack: [0x459, V470]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [0x459, V470, 0x0, 0x0, 0x0]

================================

Block 0xdf0
[0xdf0:0xe0a]
---
Predecessors: [0xd94]
Successors: [0xe0b]
---
0xdf0 PUSH1 0x0
0xdf2 DUP1
0xdf3 REVERT
0xdf4 JUMPDEST
0xdf5 PUSH1 0x5
0xdf7 PUSH1 0x0
0xdf9 SWAP1
0xdfa SLOAD
0xdfb SWAP1
0xdfc PUSH2 0x100
0xdff EXP
0xe00 SWAP1
0xe01 DIV
0xe02 PUSH1 0xff
0xe04 AND
0xe05 ISZERO
0xe06 ISZERO
0xe07 PUSH2 0x9c2
0xe0a JUMPI
---
0xdf0: V767 = 0x0
0xdf3: REVERT 0x0 0x0
0xdf4: JUMPDEST 
0xdf5: V768 = 0x5
0xdf7: V769 = 0x0
0xdfa: V770 = S[0x5]
0xdfc: V771 = 0x100
0xdff: V772 = EXP 0x100 0x0
0xe01: V773 = DIV V770 0x1
0xe02: V774 = 0xff
0xe04: V775 = AND 0xff V773
0xe05: V776 = ISZERO V775
0xe06: V777 = ISZERO V776
0xe07: V778 = 0x9c2
0xe0a: THROWI V777
---
Entry stack: [0x459, V470, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe0b
[0xe0b:0xe63]
---
Predecessors: [0xdf0]
Successors: [0xe64]
---
0xe0b PUSH1 0x0
0xe0d DUP1
0xe0e REVERT
0xe0f JUMPDEST
0xe10 PUSH1 0x7
0xe12 PUSH1 0x0
0xe14 DUP6
0xe15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe2a AND
0xe2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe40 AND
0xe41 DUP2
0xe42 MSTORE
0xe43 PUSH1 0x20
0xe45 ADD
0xe46 SWAP1
0xe47 DUP2
0xe48 MSTORE
0xe49 PUSH1 0x20
0xe4b ADD
0xe4c PUSH1 0x0
0xe4e SHA3
0xe4f PUSH1 0x0
0xe51 SWAP1
0xe52 SLOAD
0xe53 SWAP1
0xe54 PUSH2 0x100
0xe57 EXP
0xe58 SWAP1
0xe59 DIV
0xe5a PUSH1 0xff
0xe5c AND
0xe5d ISZERO
0xe5e ISZERO
0xe5f ISZERO
0xe60 PUSH2 0xa1b
0xe63 JUMPI
---
0xe0b: V779 = 0x0
0xe0e: REVERT 0x0 0x0
0xe0f: JUMPDEST 
0xe10: V780 = 0x7
0xe12: V781 = 0x0
0xe15: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xe2a: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe2b: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xe40: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0xe42: M[0x0] = V785
0xe43: V786 = 0x20
0xe45: V787 = ADD 0x20 0x0
0xe48: M[0x20] = 0x7
0xe49: V788 = 0x20
0xe4b: V789 = ADD 0x20 0x20
0xe4c: V790 = 0x0
0xe4e: V791 = SHA3 0x0 0x40
0xe4f: V792 = 0x0
0xe52: V793 = S[V791]
0xe54: V794 = 0x100
0xe57: V795 = EXP 0x100 0x0
0xe59: V796 = DIV V793 0x1
0xe5a: V797 = 0xff
0xe5c: V798 = AND 0xff V796
0xe5d: V799 = ISZERO V798
0xe5e: V800 = ISZERO V799
0xe5f: V801 = ISZERO V800
0xe60: V802 = 0xa1b
0xe63: THROWI V801
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0xe64
[0xe64:0xefe]
---
Predecessors: [0xe0b]
Successors: [0xeff]
---
0xe64 PUSH1 0x0
0xe66 DUP1
0xe67 REVERT
0xe68 JUMPDEST
0xe69 DUP4
0xe6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7f AND
0xe80 PUSH4 0x70a08231
0xe85 ADDRESS
0xe86 PUSH1 0x40
0xe88 MLOAD
0xe89 DUP3
0xe8a PUSH4 0xffffffff
0xe8f AND
0xe90 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xeae MUL
0xeaf DUP2
0xeb0 MSTORE
0xeb1 PUSH1 0x4
0xeb3 ADD
0xeb4 DUP1
0xeb5 DUP3
0xeb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xecb AND
0xecc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee1 AND
0xee2 DUP2
0xee3 MSTORE
0xee4 PUSH1 0x20
0xee6 ADD
0xee7 SWAP2
0xee8 POP
0xee9 POP
0xeea PUSH1 0x20
0xeec PUSH1 0x40
0xeee MLOAD
0xeef DUP1
0xef0 DUP4
0xef1 SUB
0xef2 DUP2
0xef3 PUSH1 0x0
0xef5 DUP8
0xef6 DUP1
0xef7 EXTCODESIZE
0xef8 ISZERO
0xef9 DUP1
0xefa ISZERO
0xefb PUSH2 0xab6
0xefe JUMPI
---
0xe64: V803 = 0x0
0xe67: REVERT 0x0 0x0
0xe68: JUMPDEST 
0xe6a: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7f: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe80: V806 = 0x70a08231
0xe85: V807 = ADDRESS
0xe86: V808 = 0x40
0xe88: V809 = M[0x40]
0xe8a: V810 = 0xffffffff
0xe8f: V811 = AND 0xffffffff 0x70a08231
0xe90: V812 = 0x100000000000000000000000000000000000000000000000000000000
0xeae: V813 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xeb0: M[V809] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xeb1: V814 = 0x4
0xeb3: V815 = ADD 0x4 V809
0xeb6: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0xecb: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0xecc: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0xee1: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0xee3: M[V815] = V819
0xee4: V820 = 0x20
0xee6: V821 = ADD 0x20 V815
0xeea: V822 = 0x20
0xeec: V823 = 0x40
0xeee: V824 = M[0x40]
0xef1: V825 = SUB V821 V824
0xef3: V826 = 0x0
0xef7: V827 = EXTCODESIZE V805
0xef8: V828 = ISZERO V827
0xefa: V829 = ISZERO V828
0xefb: V830 = 0xab6
0xefe: THROWI V829
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V828, V805, 0x0, V824, V825, V824, 0x20, V821, 0x70a08231, V805, S0, S1, S2, S3]
Exit stack: []

================================

Block 0xeff
[0xeff:0xf0d]
---
Predecessors: [0xe64]
Successors: [0xf0e]
---
0xeff PUSH1 0x0
0xf01 DUP1
0xf02 REVERT
0xf03 JUMPDEST
0xf04 POP
0xf05 GAS
0xf06 CALL
0xf07 ISZERO
0xf08 DUP1
0xf09 ISZERO
0xf0a PUSH2 0xaca
0xf0d JUMPI
---
0xeff: V831 = 0x0
0xf02: REVERT 0x0 0x0
0xf03: JUMPDEST 
0xf05: V832 = GAS
0xf06: V833 = CALL V832 S1 S2 S3 S4 S5 S6
0xf07: V834 = ISZERO V833
0xf09: V835 = ISZERO V834
0xf0a: V836 = 0xaca
0xf0d: THROWI V835
---
Entry stack: [S13, S12, S11, S10, V805, 0x70a08231, V821, 0x20, V824, V825, V824, 0x0, V805, V828]
Stack pops: 0
Stack additions: [V834]
Exit stack: []

================================

Block 0xf0e
[0xf0e:0xf28]
---
Predecessors: [0xeff]
Successors: [0xf29]
---
0xf0e RETURNDATASIZE
0xf0f PUSH1 0x0
0xf11 DUP1
0xf12 RETURNDATACOPY
0xf13 RETURNDATASIZE
0xf14 PUSH1 0x0
0xf16 REVERT
0xf17 JUMPDEST
0xf18 POP
0xf19 POP
0xf1a POP
0xf1b POP
0xf1c PUSH1 0x40
0xf1e MLOAD
0xf1f RETURNDATASIZE
0xf20 PUSH1 0x20
0xf22 DUP2
0xf23 LT
0xf24 ISZERO
0xf25 PUSH2 0xae0
0xf28 JUMPI
---
0xf0e: V837 = RETURNDATASIZE
0xf0f: V838 = 0x0
0xf12: RETURNDATACOPY 0x0 0x0 V837
0xf13: V839 = RETURNDATASIZE
0xf14: V840 = 0x0
0xf16: REVERT 0x0 V839
0xf17: JUMPDEST 
0xf1c: V841 = 0x40
0xf1e: V842 = M[0x40]
0xf1f: V843 = RETURNDATASIZE
0xf20: V844 = 0x20
0xf23: V845 = LT V843 0x20
0xf24: V846 = ISZERO V845
0xf25: V847 = 0xae0
0xf28: THROWI V846
---
Entry stack: [V834]
Stack pops: 0
Stack additions: [V843, V842]
Exit stack: []

================================

Block 0xf29
[0xf29:0x10e2]
---
Predecessors: [0xf0e]
Successors: [0x10e3]
---
0xf29 PUSH1 0x0
0xf2b DUP1
0xf2c REVERT
0xf2d JUMPDEST
0xf2e DUP2
0xf2f ADD
0xf30 SWAP1
0xf31 DUP1
0xf32 DUP1
0xf33 MLOAD
0xf34 SWAP1
0xf35 PUSH1 0x20
0xf37 ADD
0xf38 SWAP1
0xf39 SWAP3
0xf3a SWAP2
0xf3b SWAP1
0xf3c POP
0xf3d POP
0xf3e POP
0xf3f SWAP3
0xf40 POP
0xf41 PUSH2 0xafc
0xf44 DUP5
0xf45 PUSH2 0x47f
0xf48 JUMP
0xf49 JUMPDEST
0xf4a SWAP2
0xf4b POP
0xf4c PUSH2 0xb11
0xf4f DUP3
0xf50 DUP5
0xf51 PUSH2 0xdb4
0xf54 SWAP1
0xf55 SWAP2
0xf56 SWAP1
0xf57 PUSH4 0xffffffff
0xf5c AND
0xf5d JUMP
0xf5e JUMPDEST
0xf5f SWAP1
0xf60 POP
0xf61 PUSH1 0x1
0xf63 PUSH1 0x7
0xf65 PUSH1 0x0
0xf67 DUP7
0xf68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7d AND
0xf7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf93 AND
0xf94 DUP2
0xf95 MSTORE
0xf96 PUSH1 0x20
0xf98 ADD
0xf99 SWAP1
0xf9a DUP2
0xf9b MSTORE
0xf9c PUSH1 0x20
0xf9e ADD
0xf9f PUSH1 0x0
0xfa1 SHA3
0xfa2 PUSH1 0x0
0xfa4 PUSH2 0x100
0xfa7 EXP
0xfa8 DUP2
0xfa9 SLOAD
0xfaa DUP2
0xfab PUSH1 0xff
0xfad MUL
0xfae NOT
0xfaf AND
0xfb0 SWAP1
0xfb1 DUP4
0xfb2 ISZERO
0xfb3 ISZERO
0xfb4 MUL
0xfb5 OR
0xfb6 SWAP1
0xfb7 SSTORE
0xfb8 POP
0xfb9 PUSH2 0xbb7
0xfbc PUSH1 0x0
0xfbe DUP1
0xfbf SWAP1
0xfc0 SLOAD
0xfc1 SWAP1
0xfc2 PUSH2 0x100
0xfc5 EXP
0xfc6 SWAP1
0xfc7 DIV
0xfc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfdd AND
0xfde DUP3
0xfdf DUP7
0xfe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff5 AND
0xff6 PUSH2 0xde9
0xff9 SWAP1
0xffa SWAP3
0xffb SWAP2
0xffc SWAP1
0xffd PUSH4 0xffffffff
0x1002 AND
0x1003 JUMP
0x1004 JUMPDEST
0x1005 PUSH32 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0x1026 PUSH1 0x40
0x1028 MLOAD
0x1029 PUSH1 0x40
0x102b MLOAD
0x102c DUP1
0x102d SWAP2
0x102e SUB
0x102f SWAP1
0x1030 LOG1
0x1031 POP
0x1032 POP
0x1033 POP
0x1034 POP
0x1035 JUMP
0x1036 JUMPDEST
0x1037 PUSH1 0x5
0x1039 PUSH1 0x0
0x103b SWAP1
0x103c SLOAD
0x103d SWAP1
0x103e PUSH2 0x100
0x1041 EXP
0x1042 SWAP1
0x1043 DIV
0x1044 PUSH1 0xff
0x1046 AND
0x1047 DUP2
0x1048 JUMP
0x1049 JUMPDEST
0x104a PUSH1 0x0
0x104c DUP1
0x104d SWAP1
0x104e SLOAD
0x104f SWAP1
0x1050 PUSH2 0x100
0x1053 EXP
0x1054 SWAP1
0x1055 DIV
0x1056 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106b AND
0x106c DUP2
0x106d JUMP
0x106e JUMPDEST
0x106f PUSH1 0x6
0x1071 PUSH1 0x20
0x1073 MSTORE
0x1074 DUP1
0x1075 PUSH1 0x0
0x1077 MSTORE
0x1078 PUSH1 0x40
0x107a PUSH1 0x0
0x107c SHA3
0x107d PUSH1 0x0
0x107f SWAP2
0x1080 POP
0x1081 SWAP1
0x1082 POP
0x1083 SLOAD
0x1084 DUP2
0x1085 JUMP
0x1086 JUMPDEST
0x1087 PUSH1 0x3
0x1089 SLOAD
0x108a DUP2
0x108b JUMP
0x108c JUMPDEST
0x108d PUSH1 0x0
0x108f DUP1
0x1090 SWAP1
0x1091 SLOAD
0x1092 SWAP1
0x1093 PUSH2 0x100
0x1096 EXP
0x1097 SWAP1
0x1098 DIV
0x1099 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ae AND
0x10af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c4 AND
0x10c5 CALLER
0x10c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10db AND
0x10dc EQ
0x10dd ISZERO
0x10de ISZERO
0x10df PUSH2 0xc9a
0x10e2 JUMPI
---
0xf29: V848 = 0x0
0xf2c: REVERT 0x0 0x0
0xf2d: JUMPDEST 
0xf2f: V849 = ADD S1 S0
0xf33: V850 = M[S1]
0xf35: V851 = 0x20
0xf37: V852 = ADD 0x20 S1
0xf41: V853 = 0xafc
0xf45: V854 = 0x47f
0xf48: THROW 
0xf49: JUMPDEST 
0xf4c: V855 = 0xb11
0xf51: V856 = 0xdb4
0xf57: V857 = 0xffffffff
0xf5c: V858 = AND 0xffffffff 0xdb4
0xf5d: THROW 
0xf5e: JUMPDEST 
0xf61: V859 = 0x1
0xf63: V860 = 0x7
0xf65: V861 = 0x0
0xf68: V862 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7d: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xf7e: V864 = 0xffffffffffffffffffffffffffffffffffffffff
0xf93: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V863
0xf95: M[0x0] = V865
0xf96: V866 = 0x20
0xf98: V867 = ADD 0x20 0x0
0xf9b: M[0x20] = 0x7
0xf9c: V868 = 0x20
0xf9e: V869 = ADD 0x20 0x20
0xf9f: V870 = 0x0
0xfa1: V871 = SHA3 0x0 0x40
0xfa2: V872 = 0x0
0xfa4: V873 = 0x100
0xfa7: V874 = EXP 0x100 0x0
0xfa9: V875 = S[V871]
0xfab: V876 = 0xff
0xfad: V877 = MUL 0xff 0x1
0xfae: V878 = NOT 0xff
0xfaf: V879 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V875
0xfb2: V880 = ISZERO 0x1
0xfb3: V881 = ISZERO 0x0
0xfb4: V882 = MUL 0x1 0x1
0xfb5: V883 = OR 0x1 V879
0xfb7: S[V871] = V883
0xfb9: V884 = 0xbb7
0xfbc: V885 = 0x0
0xfc0: V886 = S[0x0]
0xfc2: V887 = 0x100
0xfc5: V888 = EXP 0x100 0x0
0xfc7: V889 = DIV V886 0x1
0xfc8: V890 = 0xffffffffffffffffffffffffffffffffffffffff
0xfdd: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V889
0xfe0: V892 = 0xffffffffffffffffffffffffffffffffffffffff
0xff5: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xff6: V894 = 0xde9
0xffd: V895 = 0xffffffff
0x1002: V896 = AND 0xffffffff 0xde9
0x1003: THROW 
0x1004: JUMPDEST 
0x1005: V897 = 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0x1026: V898 = 0x40
0x1028: V899 = M[0x40]
0x1029: V900 = 0x40
0x102b: V901 = M[0x40]
0x102e: V902 = SUB V899 V901
0x1030: LOG V901 V902 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0x1035: JUMP S4
0x1036: JUMPDEST 
0x1037: V903 = 0x5
0x1039: V904 = 0x0
0x103c: V905 = S[0x5]
0x103e: V906 = 0x100
0x1041: V907 = EXP 0x100 0x0
0x1043: V908 = DIV V905 0x1
0x1044: V909 = 0xff
0x1046: V910 = AND 0xff V908
0x1048: JUMP S0
0x1049: JUMPDEST 
0x104a: V911 = 0x0
0x104e: V912 = S[0x0]
0x1050: V913 = 0x100
0x1053: V914 = EXP 0x100 0x0
0x1055: V915 = DIV V912 0x1
0x1056: V916 = 0xffffffffffffffffffffffffffffffffffffffff
0x106b: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V915
0x106d: JUMP S0
0x106e: JUMPDEST 
0x106f: V918 = 0x6
0x1071: V919 = 0x20
0x1073: M[0x20] = 0x6
0x1075: V920 = 0x0
0x1077: M[0x0] = S0
0x1078: V921 = 0x40
0x107a: V922 = 0x0
0x107c: V923 = SHA3 0x0 0x40
0x107d: V924 = 0x0
0x1083: V925 = S[V923]
0x1085: JUMP S1
0x1086: JUMPDEST 
0x1087: V926 = 0x3
0x1089: V927 = S[0x3]
0x108b: JUMP S0
0x108c: JUMPDEST 
0x108d: V928 = 0x0
0x1091: V929 = S[0x0]
0x1093: V930 = 0x100
0x1096: V931 = EXP 0x100 0x0
0x1098: V932 = DIV V929 0x1
0x1099: V933 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ae: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V932
0x10af: V935 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c4: V936 = AND 0xffffffffffffffffffffffffffffffffffffffff V934
0x10c5: V937 = CALLER
0x10c6: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0x10db: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0x10dc: V940 = EQ V939 V936
0x10dd: V941 = ISZERO V940
0x10de: V942 = ISZERO V941
0x10df: V943 = 0xc9a
0x10e2: THROWI V942
---
Entry stack: [V842, V843]
Stack pops: 0
Stack additions: [S5, 0xafc, S2, S3, V850, S5, S0, S3, 0xb11, S1, S0, S3, S0, V891, V893, 0xbb7, S0, S2, S3, S4, V910, S0, V917, S0, V925, S1, V927, S0]
Exit stack: []

================================

Block 0x10e3
[0x10e3:0x111e]
---
Predecessors: [0xf29]
Successors: [0x111f]
---
0x10e3 PUSH1 0x0
0x10e5 DUP1
0x10e6 REVERT
0x10e7 JUMPDEST
0x10e8 PUSH1 0x0
0x10ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ff AND
0x1100 DUP2
0x1101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1116 AND
0x1117 EQ
0x1118 ISZERO
0x1119 ISZERO
0x111a ISZERO
0x111b PUSH2 0xcd6
0x111e JUMPI
---
0x10e3: V944 = 0x0
0x10e6: REVERT 0x0 0x0
0x10e7: JUMPDEST 
0x10e8: V945 = 0x0
0x10ea: V946 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ff: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1101: V948 = 0xffffffffffffffffffffffffffffffffffffffff
0x1116: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1117: V950 = EQ V949 0x0
0x1118: V951 = ISZERO V950
0x1119: V952 = ISZERO V951
0x111a: V953 = ISZERO V952
0x111b: V954 = 0xcd6
0x111e: THROWI V953
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x111f
[0x111f:0x120d]
---
Predecessors: [0x10e3]
Successors: [0x120e]
---
0x111f PUSH1 0x0
0x1121 DUP1
0x1122 REVERT
0x1123 JUMPDEST
0x1124 DUP1
0x1125 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113a AND
0x113b PUSH1 0x0
0x113d DUP1
0x113e SWAP1
0x113f SLOAD
0x1140 SWAP1
0x1141 PUSH2 0x100
0x1144 EXP
0x1145 SWAP1
0x1146 DIV
0x1147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115c AND
0x115d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1172 AND
0x1173 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1194 PUSH1 0x40
0x1196 MLOAD
0x1197 PUSH1 0x40
0x1199 MLOAD
0x119a DUP1
0x119b SWAP2
0x119c SUB
0x119d SWAP1
0x119e LOG3
0x119f DUP1
0x11a0 PUSH1 0x0
0x11a2 DUP1
0x11a3 PUSH2 0x100
0x11a6 EXP
0x11a7 DUP2
0x11a8 SLOAD
0x11a9 DUP2
0x11aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11bf MUL
0x11c0 NOT
0x11c1 AND
0x11c2 SWAP1
0x11c3 DUP4
0x11c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d9 AND
0x11da MUL
0x11db OR
0x11dc SWAP1
0x11dd SSTORE
0x11de POP
0x11df POP
0x11e0 JUMP
0x11e1 JUMPDEST
0x11e2 PUSH1 0x7
0x11e4 PUSH1 0x20
0x11e6 MSTORE
0x11e7 DUP1
0x11e8 PUSH1 0x0
0x11ea MSTORE
0x11eb PUSH1 0x40
0x11ed PUSH1 0x0
0x11ef SHA3
0x11f0 PUSH1 0x0
0x11f2 SWAP2
0x11f3 POP
0x11f4 SLOAD
0x11f5 SWAP1
0x11f6 PUSH2 0x100
0x11f9 EXP
0x11fa SWAP1
0x11fb DIV
0x11fc PUSH1 0xff
0x11fe AND
0x11ff DUP2
0x1200 JUMP
0x1201 JUMPDEST
0x1202 PUSH1 0x0
0x1204 DUP3
0x1205 DUP3
0x1206 GT
0x1207 ISZERO
0x1208 ISZERO
0x1209 ISZERO
0x120a PUSH2 0xdc2
0x120d JUMPI
---
0x111f: V955 = 0x0
0x1122: REVERT 0x0 0x0
0x1123: JUMPDEST 
0x1125: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0x113a: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x113b: V958 = 0x0
0x113f: V959 = S[0x0]
0x1141: V960 = 0x100
0x1144: V961 = EXP 0x100 0x0
0x1146: V962 = DIV V959 0x1
0x1147: V963 = 0xffffffffffffffffffffffffffffffffffffffff
0x115c: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0x115d: V965 = 0xffffffffffffffffffffffffffffffffffffffff
0x1172: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V964
0x1173: V967 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1194: V968 = 0x40
0x1196: V969 = M[0x40]
0x1197: V970 = 0x40
0x1199: V971 = M[0x40]
0x119c: V972 = SUB V969 V971
0x119e: LOG V971 V972 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V966 V957
0x11a0: V973 = 0x0
0x11a3: V974 = 0x100
0x11a6: V975 = EXP 0x100 0x0
0x11a8: V976 = S[0x0]
0x11aa: V977 = 0xffffffffffffffffffffffffffffffffffffffff
0x11bf: V978 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x11c0: V979 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x11c1: V980 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V976
0x11c4: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d9: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x11da: V983 = MUL V982 0x1
0x11db: V984 = OR V983 V980
0x11dd: S[0x0] = V984
0x11e0: JUMP S1
0x11e1: JUMPDEST 
0x11e2: V985 = 0x7
0x11e4: V986 = 0x20
0x11e6: M[0x20] = 0x7
0x11e8: V987 = 0x0
0x11ea: M[0x0] = S0
0x11eb: V988 = 0x40
0x11ed: V989 = 0x0
0x11ef: V990 = SHA3 0x0 0x40
0x11f0: V991 = 0x0
0x11f4: V992 = S[V990]
0x11f6: V993 = 0x100
0x11f9: V994 = EXP 0x100 0x0
0x11fb: V995 = DIV V992 0x1
0x11fc: V996 = 0xff
0x11fe: V997 = AND 0xff V995
0x1200: JUMP S1
0x1201: JUMPDEST 
0x1202: V998 = 0x0
0x1206: V999 = GT S0 S1
0x1207: V1000 = ISZERO V999
0x1208: V1001 = ISZERO V1000
0x1209: V1002 = ISZERO V1001
0x120a: V1003 = 0xdc2
0x120d: THROWI V1002
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V997, S1, 0x0, S0, S1]
Exit stack: []

================================

Block 0x120e
[0x120e:0x122b]
---
Predecessors: [0x111f]
Successors: [0x122c]
---
0x120e INVALID
0x120f JUMPDEST
0x1210 DUP2
0x1211 DUP4
0x1212 SUB
0x1213 SWAP1
0x1214 POP
0x1215 SWAP3
0x1216 SWAP2
0x1217 POP
0x1218 POP
0x1219 JUMP
0x121a JUMPDEST
0x121b PUSH1 0x0
0x121d DUP2
0x121e DUP4
0x121f ADD
0x1220 SWAP1
0x1221 POP
0x1222 DUP3
0x1223 DUP2
0x1224 LT
0x1225 ISZERO
0x1226 ISZERO
0x1227 ISZERO
0x1228 PUSH2 0xde0
0x122b JUMPI
---
0x120e: INVALID 
0x120f: JUMPDEST 
0x1212: V1004 = SUB S2 S1
0x1219: JUMP S3
0x121a: JUMPDEST 
0x121b: V1005 = 0x0
0x121f: V1006 = ADD S1 S0
0x1224: V1007 = LT V1006 S1
0x1225: V1008 = ISZERO V1007
0x1226: V1009 = ISZERO V1008
0x1227: V1010 = ISZERO V1009
0x1228: V1011 = 0xde0
0x122b: THROWI V1010
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1004, V1006, S0, S1]
Exit stack: []

================================

Block 0x122c
[0x122c:0x12d4]
---
Predecessors: [0x120e]
Successors: [0x12d5]
---
0x122c INVALID
0x122d JUMPDEST
0x122e DUP1
0x122f SWAP1
0x1230 POP
0x1231 SWAP3
0x1232 SWAP2
0x1233 POP
0x1234 POP
0x1235 JUMP
0x1236 JUMPDEST
0x1237 DUP3
0x1238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124d AND
0x124e PUSH4 0xa9059cbb
0x1253 DUP4
0x1254 DUP4
0x1255 PUSH1 0x40
0x1257 MLOAD
0x1258 DUP4
0x1259 PUSH4 0xffffffff
0x125e AND
0x125f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x127d MUL
0x127e DUP2
0x127f MSTORE
0x1280 PUSH1 0x4
0x1282 ADD
0x1283 DUP1
0x1284 DUP4
0x1285 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129a AND
0x129b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b0 AND
0x12b1 DUP2
0x12b2 MSTORE
0x12b3 PUSH1 0x20
0x12b5 ADD
0x12b6 DUP3
0x12b7 DUP2
0x12b8 MSTORE
0x12b9 PUSH1 0x20
0x12bb ADD
0x12bc SWAP3
0x12bd POP
0x12be POP
0x12bf POP
0x12c0 PUSH1 0x20
0x12c2 PUSH1 0x40
0x12c4 MLOAD
0x12c5 DUP1
0x12c6 DUP4
0x12c7 SUB
0x12c8 DUP2
0x12c9 PUSH1 0x0
0x12cb DUP8
0x12cc DUP1
0x12cd EXTCODESIZE
0x12ce ISZERO
0x12cf DUP1
0x12d0 ISZERO
0x12d1 PUSH2 0xe8c
0x12d4 JUMPI
---
0x122c: INVALID 
0x122d: JUMPDEST 
0x1235: JUMP S3
0x1236: JUMPDEST 
0x1238: V1012 = 0xffffffffffffffffffffffffffffffffffffffff
0x124d: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x124e: V1014 = 0xa9059cbb
0x1255: V1015 = 0x40
0x1257: V1016 = M[0x40]
0x1259: V1017 = 0xffffffff
0x125e: V1018 = AND 0xffffffff 0xa9059cbb
0x125f: V1019 = 0x100000000000000000000000000000000000000000000000000000000
0x127d: V1020 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x127f: M[V1016] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1280: V1021 = 0x4
0x1282: V1022 = ADD 0x4 V1016
0x1285: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0x129a: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x129b: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b0: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0x12b2: M[V1022] = V1026
0x12b3: V1027 = 0x20
0x12b5: V1028 = ADD 0x20 V1022
0x12b8: M[V1028] = S0
0x12b9: V1029 = 0x20
0x12bb: V1030 = ADD 0x20 V1028
0x12c0: V1031 = 0x20
0x12c2: V1032 = 0x40
0x12c4: V1033 = M[0x40]
0x12c7: V1034 = SUB V1030 V1033
0x12c9: V1035 = 0x0
0x12cd: V1036 = EXTCODESIZE V1013
0x12ce: V1037 = ISZERO V1036
0x12d0: V1038 = ISZERO V1037
0x12d1: V1039 = 0xe8c
0x12d4: THROWI V1038
---
Entry stack: [S2, S1, V1006]
Stack pops: 0
Stack additions: [S0, V1037, V1013, 0x0, V1033, V1034, V1033, 0x20, V1030, 0xa9059cbb, V1013, S0, S1, S2]
Exit stack: []

================================

Block 0x12d5
[0x12d5:0x12e3]
---
Predecessors: [0x122c]
Successors: [0x12e4]
---
0x12d5 PUSH1 0x0
0x12d7 DUP1
0x12d8 REVERT
0x12d9 JUMPDEST
0x12da POP
0x12db GAS
0x12dc CALL
0x12dd ISZERO
0x12de DUP1
0x12df ISZERO
0x12e0 PUSH2 0xea0
0x12e3 JUMPI
---
0x12d5: V1040 = 0x0
0x12d8: REVERT 0x0 0x0
0x12d9: JUMPDEST 
0x12db: V1041 = GAS
0x12dc: V1042 = CALL V1041 S1 S2 S3 S4 S5 S6
0x12dd: V1043 = ISZERO V1042
0x12df: V1044 = ISZERO V1043
0x12e0: V1045 = 0xea0
0x12e3: THROWI V1044
---
Entry stack: [S12, S11, S10, V1013, 0xa9059cbb, V1030, 0x20, V1033, V1034, V1033, 0x0, V1013, V1037]
Stack pops: 0
Stack additions: [V1043]
Exit stack: []

================================

Block 0x12e4
[0x12e4:0x12fe]
---
Predecessors: [0x12d5]
Successors: [0x12ff]
---
0x12e4 RETURNDATASIZE
0x12e5 PUSH1 0x0
0x12e7 DUP1
0x12e8 RETURNDATACOPY
0x12e9 RETURNDATASIZE
0x12ea PUSH1 0x0
0x12ec REVERT
0x12ed JUMPDEST
0x12ee POP
0x12ef POP
0x12f0 POP
0x12f1 POP
0x12f2 PUSH1 0x40
0x12f4 MLOAD
0x12f5 RETURNDATASIZE
0x12f6 PUSH1 0x20
0x12f8 DUP2
0x12f9 LT
0x12fa ISZERO
0x12fb PUSH2 0xeb6
0x12fe JUMPI
---
0x12e4: V1046 = RETURNDATASIZE
0x12e5: V1047 = 0x0
0x12e8: RETURNDATACOPY 0x0 0x0 V1046
0x12e9: V1048 = RETURNDATASIZE
0x12ea: V1049 = 0x0
0x12ec: REVERT 0x0 V1048
0x12ed: JUMPDEST 
0x12f2: V1050 = 0x40
0x12f4: V1051 = M[0x40]
0x12f5: V1052 = RETURNDATASIZE
0x12f6: V1053 = 0x20
0x12f9: V1054 = LT V1052 0x20
0x12fa: V1055 = ISZERO V1054
0x12fb: V1056 = 0xeb6
0x12fe: THROWI V1055
---
Entry stack: [V1043]
Stack pops: 0
Stack additions: [V1052, V1051]
Exit stack: []

================================

Block 0x12ff
[0x12ff:0x1324]
---
Predecessors: [0x12e4]
Successors: [0x1325]
---
0x12ff PUSH1 0x0
0x1301 DUP1
0x1302 REVERT
0x1303 JUMPDEST
0x1304 DUP2
0x1305 ADD
0x1306 SWAP1
0x1307 DUP1
0x1308 DUP1
0x1309 MLOAD
0x130a SWAP1
0x130b PUSH1 0x20
0x130d ADD
0x130e SWAP1
0x130f SWAP3
0x1310 SWAP2
0x1311 SWAP1
0x1312 POP
0x1313 POP
0x1314 POP
0x1315 POP
0x1316 POP
0x1317 POP
0x1318 POP
0x1319 JUMP
0x131a JUMPDEST
0x131b PUSH1 0x0
0x131d DUP1
0x131e DUP4
0x131f EQ
0x1320 ISZERO
0x1321 PUSH2 0xee0
0x1324 JUMPI
---
0x12ff: V1057 = 0x0
0x1302: REVERT 0x0 0x0
0x1303: JUMPDEST 
0x1305: V1058 = ADD S1 S0
0x1309: V1059 = M[S1]
0x130b: V1060 = 0x20
0x130d: V1061 = ADD 0x20 S1
0x1319: JUMP S5
0x131a: JUMPDEST 
0x131b: V1062 = 0x0
0x131f: V1063 = EQ S1 0x0
0x1320: V1064 = ISZERO V1063
0x1321: V1065 = 0xee0
0x1324: THROWI V1064
---
Entry stack: [V1051, V1052]
Stack pops: 0
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0x1325
[0x1325:0x133c]
---
Predecessors: [0x12ff]
Successors: [0x133d]
---
0x1325 PUSH1 0x0
0x1327 SWAP1
0x1328 POP
0x1329 PUSH2 0xeff
0x132c JUMP
0x132d JUMPDEST
0x132e DUP2
0x132f DUP4
0x1330 MUL
0x1331 SWAP1
0x1332 POP
0x1333 DUP2
0x1334 DUP4
0x1335 DUP3
0x1336 DUP2
0x1337 ISZERO
0x1338 ISZERO
0x1339 PUSH2 0xef1
0x133c JUMPI
---
0x1325: V1066 = 0x0
0x1329: V1067 = 0xeff
0x132c: THROW 
0x132d: JUMPDEST 
0x1330: V1068 = MUL S2 S1
0x1337: V1069 = ISZERO S2
0x1338: V1070 = ISZERO V1069
0x1339: V1071 = 0xef1
0x133c: THROWI V1070
---
Entry stack: [S2, S1, 0x0]
Stack pops: 1
Stack additions: [V1068, S2, S1, V1068, S1, S2]
Exit stack: []

================================

Block 0x133d
[0x133d:0x1346]
---
Predecessors: [0x1325]
Successors: [0x1347]
---
0x133d INVALID
0x133e JUMPDEST
0x133f DIV
0x1340 EQ
0x1341 ISZERO
0x1342 ISZERO
0x1343 PUSH2 0xefb
0x1346 JUMPI
---
0x133d: INVALID 
0x133e: JUMPDEST 
0x133f: V1072 = DIV S0 S1
0x1340: V1073 = EQ V1072 S2
0x1341: V1074 = ISZERO V1073
0x1342: V1075 = ISZERO V1074
0x1343: V1076 = 0xefb
0x1346: THROWI V1075
---
Entry stack: [S5, S4, V1068, S2, S1, V1068]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1347
[0x1347:0x134b]
---
Predecessors: [0x133d]
Successors: [0x134c]
---
0x1347 INVALID
0x1348 JUMPDEST
0x1349 DUP1
0x134a SWAP1
0x134b POP
---
0x1347: INVALID 
0x1348: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x134c
[0x134c:0x135d]
---
Predecessors: [0x1347]
Successors: [0x135e]
---
0x134c JUMPDEST
0x134d SWAP3
0x134e SWAP2
0x134f POP
0x1350 POP
0x1351 JUMP
0x1352 JUMPDEST
0x1353 PUSH1 0x0
0x1355 DUP2
0x1356 DUP4
0x1357 DUP2
0x1358 ISZERO
0x1359 ISZERO
0x135a PUSH2 0xf12
0x135d JUMPI
---
0x134c: JUMPDEST 
0x1351: JUMP S3
0x1352: JUMPDEST 
0x1353: V1077 = 0x0
0x1358: V1078 = ISZERO S0
0x1359: V1079 = ISZERO V1078
0x135a: V1080 = 0xf12
0x135d: THROWI V1079
---
Entry stack: [S0]
Stack pops: 7
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x135e
[0x135e:0x1393]
---
Predecessors: [0x134c]
Successors: []
---
0x135e INVALID
0x135f JUMPDEST
0x1360 DIV
0x1361 SWAP1
0x1362 POP
0x1363 SWAP3
0x1364 SWAP2
0x1365 POP
0x1366 POP
0x1367 JUMP
0x1368 STOP
0x1369 LOG1
0x136a PUSH6 0x627a7a723058
0x1371 SHA3
0x1372 SWAP10
0x1373 MISSING 0x1f
0x1374 SWAP12
0x1375 MISSING 0xa9
0x1376 LOG3
0x1377 MISSING 0xa6
0x1378 SWAP2
0x1379 STOP
0x137a MISSING 0x2f
0x137b LOG2
0x137c MISSING 0x2f
0x137d MISSING 0x2c
0x137e NOT
0x137f PUSH9 0x2f2bcae781ffa9743d
0x1389 MISSING 0x2b
0x138a DUP13
0x138b MISSING 0xd4
0x138c SWAP11
0x138d DIFFICULTY
0x138e CALLDATALOAD
0x138f MISSING 0xe5
0x1390 DUP10
0x1391 GT
0x1392 STOP
0x1393 MISSING 0x29
---
0x135e: INVALID 
0x135f: JUMPDEST 
0x1360: V1081 = DIV S0 S1
0x1367: JUMP S5
0x1368: STOP 
0x1369: LOG S0 S1 S2
0x136a: V1082 = 0x627a7a723058
0x1371: V1083 = SHA3 0x627a7a723058 S3
0x1373: MISSING 0x1f
0x1375: MISSING 0xa9
0x1376: LOG S0 S1 S2 S3 S4
0x1377: MISSING 0xa6
0x1379: STOP 
0x137a: MISSING 0x2f
0x137b: LOG S0 S1 S2 S3
0x137c: MISSING 0x2f
0x137d: MISSING 0x2c
0x137e: V1084 = NOT S0
0x137f: V1085 = 0x2f2bcae781ffa9743d
0x1389: MISSING 0x2b
0x138b: MISSING 0xd4
0x138d: V1086 = DIFFICULTY
0x138e: V1087 = CALLDATALOAD V1086
0x138f: MISSING 0xe5
0x1391: V1088 = GT S9 S0
0x1392: STOP 
0x1393: MISSING 0x29
---
Entry stack: [S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V1081, S13, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1083, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, S2, S1, S0, 0x2f2bcae781ffa9743d, V1084, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1087, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V1088, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x715018a6
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x10d, 0x164, 0x168

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x73
Exit block: 0x88
Body: 0x73, 0x7b, 0x7f, 0x88, 0x20f

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0xca
Exit block: 0x10b
Body: 0xca, 0xd2, 0xd6, 0x10b, 0x234, 0x28b, 0x28f, 0x2c7, 0x2cb

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

