Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x93]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x93
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x93
0x40: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x123]
---
0x41 DUP1
0x42 PUSH4 0x18160ddd
0x47 EQ
0x48 PUSH2 0x123
0x4b JUMPI
---
0x42: V15 = 0x18160ddd
0x47: V16 = EQ 0x18160ddd V11
0x48: V17 = 0x123
0x4b: JUMPI 0x123 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x14e]
---
0x4c DUP1
0x4d PUSH4 0x313ce567
0x52 EQ
0x53 PUSH2 0x14e
0x56 JUMPI
---
0x4d: V18 = 0x313ce567
0x52: V19 = EQ 0x313ce567 V11
0x53: V20 = 0x14e
0x56: JUMPI 0x14e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x17f]
---
0x57 DUP1
0x58 PUSH4 0x378dc3dc
0x5d EQ
0x5e PUSH2 0x17f
0x61 JUMPI
---
0x58: V21 = 0x378dc3dc
0x5d: V22 = EQ 0x378dc3dc V11
0x5e: V23 = 0x17f
0x61: JUMPI 0x17f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1aa]
---
0x62 DUP1
0x63 PUSH4 0x70a08231
0x68 EQ
0x69 PUSH2 0x1aa
0x6c JUMPI
---
0x63: V24 = 0x70a08231
0x68: V25 = EQ 0x70a08231 V11
0x69: V26 = 0x1aa
0x6c: JUMPI 0x1aa V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x201]
---
0x6d DUP1
0x6e PUSH4 0x8da5cb5b
0x73 EQ
0x74 PUSH2 0x201
0x77 JUMPI
---
0x6e: V27 = 0x8da5cb5b
0x73: V28 = EQ 0x8da5cb5b V11
0x74: V29 = 0x201
0x77: JUMPI 0x201 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x258]
---
0x78 DUP1
0x79 PUSH4 0x95d89b41
0x7e EQ
0x7f PUSH2 0x258
0x82 JUMPI
---
0x79: V30 = 0x95d89b41
0x7e: V31 = EQ 0x95d89b41 V11
0x7f: V32 = 0x258
0x82: JUMPI 0x258 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2e8]
---
0x83 DUP1
0x84 PUSH4 0xa9059cbb
0x89 EQ
0x8a PUSH2 0x2e8
0x8d JUMPI
---
0x84: V33 = 0xa9059cbb
0x89: V34 = EQ 0xa9059cbb V11
0x8a: V35 = 0x2e8
0x8d: JUMPI 0x2e8 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x92]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x9a]
---
Predecessors: [0xd]
Successors: [0x9b, 0x9f]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 DUP1
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x96: V38 = ISZERO V37
0x97: V39 = 0x9f
0x9a: JUMPI 0x9f V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x93]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V40 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9f
[0x9f:0xa7]
---
Predecessors: [0x93]
Successors: [0x34d]
---
0x9f JUMPDEST
0xa0 POP
0xa1 PUSH2 0xa8
0xa4 PUSH2 0x34d
0xa7 JUMP
---
0x9f: JUMPDEST 
0xa1: V41 = 0xa8
0xa4: V42 = 0x34d
0xa7: JUMP 0x34d
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xa8
[0xa8:0xcc]
---
Predecessors: [0x3e3]
Successors: [0xcd]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad DUP1
0xae PUSH1 0x20
0xb0 ADD
0xb1 DUP3
0xb2 DUP2
0xb3 SUB
0xb4 DUP3
0xb5 MSTORE
0xb6 DUP4
0xb7 DUP2
0xb8 DUP2
0xb9 MLOAD
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 DUP1
0xc2 MLOAD
0xc3 SWAP1
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 DUP1
0xc9 DUP4
0xca DUP4
0xcb PUSH1 0x0
---
0xa8: JUMPDEST 
0xa9: V43 = 0x40
0xab: V44 = M[0x40]
0xae: V45 = 0x20
0xb0: V46 = ADD 0x20 V44
0xb3: V47 = SUB V46 V44
0xb5: M[V44] = V47
0xb9: V48 = M[V262]
0xbb: M[V46] = V48
0xbc: V49 = 0x20
0xbe: V50 = ADD 0x20 V46
0xc2: V51 = M[V262]
0xc4: V52 = 0x20
0xc6: V53 = ADD 0x20 V262
0xcb: V54 = 0x0
---
Entry stack: [V11, 0xa8, V262]
Stack pops: 1
Stack additions: [S0, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]
Exit stack: [V11, 0xa8, V262, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]

================================

Block 0xcd
[0xcd:0xd5]
---
Predecessors: [0xa8, 0xd6]
Successors: [0xd6, 0xe8]
---
0xcd JUMPDEST
0xce DUP4
0xcf DUP2
0xd0 LT
0xd1 ISZERO
0xd2 PUSH2 0xe8
0xd5 JUMPI
---
0xcd: JUMPDEST 
0xd0: V55 = LT S0 V51
0xd1: V56 = ISZERO V55
0xd2: V57 = 0xe8
0xd5: JUMPI 0xe8 V56
---
Entry stack: [V11, 0xa8, V262, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa8, V262, V44, V44, V50, V53, V51, V51, V50, V53, S0]

================================

Block 0xd6
[0xd6:0xe7]
---
Predecessors: [0xcd]
Successors: [0xcd]
---
0xd6 DUP1
0xd7 DUP3
0xd8 ADD
0xd9 MLOAD
0xda DUP2
0xdb DUP5
0xdc ADD
0xdd MSTORE
0xde PUSH1 0x20
0xe0 DUP2
0xe1 ADD
0xe2 SWAP1
0xe3 POP
0xe4 PUSH2 0xcd
0xe7 JUMP
---
0xd8: V58 = ADD V53 S0
0xd9: V59 = M[V58]
0xdc: V60 = ADD V50 S0
0xdd: M[V60] = V59
0xde: V61 = 0x20
0xe1: V62 = ADD S0 0x20
0xe4: V63 = 0xcd
0xe7: JUMP 0xcd
---
Entry stack: [V11, 0xa8, V262, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 3
Stack additions: [S2, S1, V62]
Exit stack: [V11, 0xa8, V262, V44, V44, V50, V53, V51, V51, V50, V53, V62]

================================

Block 0xe8
[0xe8:0xfb]
---
Predecessors: [0xcd]
Successors: [0xfc, 0x115]
---
0xe8 JUMPDEST
0xe9 POP
0xea POP
0xeb POP
0xec POP
0xed SWAP1
0xee POP
0xef SWAP1
0xf0 DUP2
0xf1 ADD
0xf2 SWAP1
0xf3 PUSH1 0x1f
0xf5 AND
0xf6 DUP1
0xf7 ISZERO
0xf8 PUSH2 0x115
0xfb JUMPI
---
0xe8: JUMPDEST 
0xf1: V64 = ADD V51 V50
0xf3: V65 = 0x1f
0xf5: V66 = AND 0x1f V51
0xf7: V67 = ISZERO V66
0xf8: V68 = 0x115
0xfb: JUMPI 0x115 V67
---
Entry stack: [V11, 0xa8, V262, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 7
Stack additions: [V64, V66]
Exit stack: [V11, 0xa8, V262, V44, V44, V64, V66]

================================

Block 0xfc
[0xfc:0x114]
---
Predecessors: [0xe8]
Successors: [0x115]
---
0xfc DUP1
0xfd DUP3
0xfe SUB
0xff DUP1
0x100 MLOAD
0x101 PUSH1 0x1
0x103 DUP4
0x104 PUSH1 0x20
0x106 SUB
0x107 PUSH2 0x100
0x10a EXP
0x10b SUB
0x10c NOT
0x10d AND
0x10e DUP2
0x10f MSTORE
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP2
0x114 POP
---
0xfe: V69 = SUB V64 V66
0x100: V70 = M[V69]
0x101: V71 = 0x1
0x104: V72 = 0x20
0x106: V73 = SUB 0x20 V66
0x107: V74 = 0x100
0x10a: V75 = EXP 0x100 V73
0x10b: V76 = SUB V75 0x1
0x10c: V77 = NOT V76
0x10d: V78 = AND V77 V70
0x10f: M[V69] = V78
0x110: V79 = 0x20
0x112: V80 = ADD 0x20 V69
---
Entry stack: [V11, 0xa8, V262, V44, V44, V64, V66]
Stack pops: 2
Stack additions: [V80, S0]
Exit stack: [V11, 0xa8, V262, V44, V44, V80, V66]

================================

Block 0x115
[0x115:0x122]
---
Predecessors: [0xe8, 0xfc]
Successors: []
---
0x115 JUMPDEST
0x116 POP
0x117 SWAP3
0x118 POP
0x119 POP
0x11a POP
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f SWAP2
0x120 SUB
0x121 SWAP1
0x122 RETURN
---
0x115: JUMPDEST 
0x11b: V81 = 0x40
0x11d: V82 = M[0x40]
0x120: V83 = SUB S1 V82
0x122: RETURN V82 V83
---
Entry stack: [V11, 0xa8, V262, V44, V44, S1, V66]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xa8]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x41]
Successors: [0x12b, 0x12f]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x123: JUMPDEST 
0x124: V84 = CALLVALUE
0x126: V85 = ISZERO V84
0x127: V86 = 0x12f
0x12a: JUMPI 0x12f V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, V84]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x123]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V87 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84]

================================

Block 0x12f
[0x12f:0x137]
---
Predecessors: [0x123]
Successors: [0x3eb]
---
0x12f JUMPDEST
0x130 POP
0x131 PUSH2 0x138
0x134 PUSH2 0x3eb
0x137 JUMP
---
0x12f: JUMPDEST 
0x131: V88 = 0x138
0x134: V89 = 0x3eb
0x137: JUMP 0x3eb
---
Entry stack: [V11, V84]
Stack pops: 1
Stack additions: [0x138]
Exit stack: [V11, 0x138]

================================

Block 0x138
[0x138:0x14d]
---
Predecessors: [0x3eb]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
---
0x138: JUMPDEST 
0x139: V90 = 0x40
0x13b: V91 = M[0x40]
0x13f: M[V91] = V308
0x140: V92 = 0x20
0x142: V93 = ADD 0x20 V91
0x146: V94 = 0x40
0x148: V95 = M[0x40]
0x14b: V96 = SUB V93 V95
0x14d: RETURN V95 V96
---
Entry stack: [V11, V308]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x4c]
Successors: [0x156, 0x15a]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14e: JUMPDEST 
0x14f: V97 = CALLVALUE
0x151: V98 = ISZERO V97
0x152: V99 = 0x15a
0x155: JUMPI 0x15a V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V97]
Exit stack: [V11, V97]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14e]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V100 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V11, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V97]

================================

Block 0x15a
[0x15a:0x162]
---
Predecessors: [0x14e]
Successors: [0x3f5]
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH2 0x163
0x15f PUSH2 0x3f5
0x162 JUMP
---
0x15a: JUMPDEST 
0x15c: V101 = 0x163
0x15f: V102 = 0x3f5
0x162: JUMP 0x3f5
---
Entry stack: [V11, V97]
Stack pops: 1
Stack additions: [0x163]
Exit stack: [V11, 0x163]

================================

Block 0x163
[0x163:0x17e]
---
Predecessors: [0x3f5]
Successors: []
---
0x163 JUMPDEST
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 DUP3
0x169 PUSH1 0xff
0x16b AND
0x16c PUSH1 0xff
0x16e AND
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP2
0x175 POP
0x176 POP
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e RETURN
---
0x163: JUMPDEST 
0x164: V103 = 0x40
0x166: V104 = M[0x40]
0x169: V105 = 0xff
0x16b: V106 = AND 0xff V316
0x16c: V107 = 0xff
0x16e: V108 = AND 0xff V106
0x170: M[V104] = V108
0x171: V109 = 0x20
0x173: V110 = ADD 0x20 V104
0x177: V111 = 0x40
0x179: V112 = M[0x40]
0x17c: V113 = SUB V110 V112
0x17e: RETURN V112 V113
---
Entry stack: [V11, 0x163, V316]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x163]

================================

Block 0x17f
[0x17f:0x186]
---
Predecessors: [0x57]
Successors: [0x187, 0x18b]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 DUP1
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x17f: JUMPDEST 
0x180: V114 = CALLVALUE
0x182: V115 = ISZERO V114
0x183: V116 = 0x18b
0x186: JUMPI 0x18b V115
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V114]
Exit stack: [V11, V114]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x17f]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V117 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V11, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V114]

================================

Block 0x18b
[0x18b:0x193]
---
Predecessors: [0x17f]
Successors: [0x408]
---
0x18b JUMPDEST
0x18c POP
0x18d PUSH2 0x194
0x190 PUSH2 0x408
0x193 JUMP
---
0x18b: JUMPDEST 
0x18d: V118 = 0x194
0x190: V119 = 0x408
0x193: JUMP 0x408
---
Entry stack: [V11, V114]
Stack pops: 1
Stack additions: [0x194]
Exit stack: [V11, 0x194]

================================

Block 0x194
[0x194:0x1a9]
---
Predecessors: [0x408]
Successors: []
---
0x194 JUMPDEST
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 DUP3
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP2
0x1a0 POP
0x1a1 POP
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 SWAP2
0x1a7 SUB
0x1a8 SWAP1
0x1a9 RETURN
---
0x194: JUMPDEST 
0x195: V120 = 0x40
0x197: V121 = M[0x40]
0x19b: M[V121] = V318
0x19c: V122 = 0x20
0x19e: V123 = ADD 0x20 V121
0x1a2: V124 = 0x40
0x1a4: V125 = M[0x40]
0x1a7: V126 = SUB V123 V125
0x1a9: RETURN V125 V126
---
Entry stack: [V11, 0x194, V318]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x194]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x62]
Successors: [0x1b2, 0x1b6]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V127 = CALLVALUE
0x1ad: V128 = ISZERO V127
0x1ae: V129 = 0x1b6
0x1b1: JUMPI 0x1b6 V128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V11, V127]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V130 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V127]

================================

Block 0x1b6
[0x1b6:0x1ea]
---
Predecessors: [0x1aa]
Successors: [0x40e]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 PUSH2 0x1eb
0x1bb PUSH1 0x4
0x1bd DUP1
0x1be CALLDATASIZE
0x1bf SUB
0x1c0 DUP2
0x1c1 ADD
0x1c2 SWAP1
0x1c3 DUP1
0x1c4 DUP1
0x1c5 CALLDATALOAD
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc SWAP1
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP1
0x1e1 SWAP3
0x1e2 SWAP2
0x1e3 SWAP1
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 PUSH2 0x40e
0x1ea JUMP
---
0x1b6: JUMPDEST 
0x1b8: V131 = 0x1eb
0x1bb: V132 = 0x4
0x1be: V133 = CALLDATASIZE
0x1bf: V134 = SUB V133 0x4
0x1c1: V135 = ADD 0x4 V134
0x1c5: V136 = CALLDATALOAD 0x4
0x1c6: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x1dd: V139 = 0x20
0x1df: V140 = ADD 0x20 0x4
0x1e7: V141 = 0x40e
0x1ea: JUMP 0x40e
---
Entry stack: [V11, V127]
Stack pops: 1
Stack additions: [0x1eb, V138]
Exit stack: [V11, 0x1eb, V138]

================================

Block 0x1eb
[0x1eb:0x200]
---
Predecessors: [0x40e]
Successors: []
---
0x1eb JUMPDEST
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef DUP1
0x1f0 DUP3
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 SWAP2
0x1f7 POP
0x1f8 POP
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd SWAP2
0x1fe SUB
0x1ff SWAP1
0x200 RETURN
---
0x1eb: JUMPDEST 
0x1ec: V142 = 0x40
0x1ee: V143 = M[0x40]
0x1f2: M[V143] = V331
0x1f3: V144 = 0x20
0x1f5: V145 = ADD 0x20 V143
0x1f9: V146 = 0x40
0x1fb: V147 = M[0x40]
0x1fe: V148 = SUB V145 V147
0x200: RETURN V147 V148
---
Entry stack: [V11, V331]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x201
[0x201:0x208]
---
Predecessors: [0x6d]
Successors: [0x209, 0x20d]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 DUP1
0x204 ISZERO
0x205 PUSH2 0x20d
0x208 JUMPI
---
0x201: JUMPDEST 
0x202: V149 = CALLVALUE
0x204: V150 = ISZERO V149
0x205: V151 = 0x20d
0x208: JUMPI 0x20d V150
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V11, V149]

================================

Block 0x209
[0x209:0x20c]
---
Predecessors: [0x201]
Successors: []
---
0x209 PUSH1 0x0
0x20b DUP1
0x20c REVERT
---
0x209: V152 = 0x0
0x20c: REVERT 0x0 0x0
---
Entry stack: [V11, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V149]

================================

Block 0x20d
[0x20d:0x215]
---
Predecessors: [0x201]
Successors: [0x456]
---
0x20d JUMPDEST
0x20e POP
0x20f PUSH2 0x216
0x212 PUSH2 0x456
0x215 JUMP
---
0x20d: JUMPDEST 
0x20f: V153 = 0x216
0x212: V154 = 0x456
0x215: JUMP 0x456
---
Entry stack: [V11, V149]
Stack pops: 1
Stack additions: [0x216]
Exit stack: [V11, 0x216]

================================

Block 0x216
[0x216:0x257]
---
Predecessors: [0x456]
Successors: []
---
0x216 JUMPDEST
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP1
0x21b DUP3
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x247 AND
0x248 DUP2
0x249 MSTORE
0x24a PUSH1 0x20
0x24c ADD
0x24d SWAP2
0x24e POP
0x24f POP
0x250 PUSH1 0x40
0x252 MLOAD
0x253 DUP1
0x254 SWAP2
0x255 SUB
0x256 SWAP1
0x257 RETURN
---
0x216: JUMPDEST 
0x217: V155 = 0x40
0x219: V156 = M[0x40]
0x21c: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x232: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x247: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x249: M[V156] = V160
0x24a: V161 = 0x20
0x24c: V162 = ADD 0x20 V156
0x250: V163 = 0x40
0x252: V164 = M[0x40]
0x255: V165 = SUB V162 V164
0x257: RETURN V164 V165
---
Entry stack: [V11, 0x216, V339]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x216]

================================

Block 0x258
[0x258:0x25f]
---
Predecessors: [0x78]
Successors: [0x260, 0x264]
---
0x258 JUMPDEST
0x259 CALLVALUE
0x25a DUP1
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x258: JUMPDEST 
0x259: V166 = CALLVALUE
0x25b: V167 = ISZERO V166
0x25c: V168 = 0x264
0x25f: JUMPI 0x264 V167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V11, V166]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x258]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V169 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V166]

================================

Block 0x264
[0x264:0x26c]
---
Predecessors: [0x258]
Successors: [0x47c]
---
0x264 JUMPDEST
0x265 POP
0x266 PUSH2 0x26d
0x269 PUSH2 0x47c
0x26c JUMP
---
0x264: JUMPDEST 
0x266: V170 = 0x26d
0x269: V171 = 0x47c
0x26c: JUMP 0x47c
---
Entry stack: [V11, V166]
Stack pops: 1
Stack additions: [0x26d]
Exit stack: [V11, 0x26d]

================================

Block 0x26d
[0x26d:0x291]
---
Predecessors: [0x512]
Successors: [0x292]
---
0x26d JUMPDEST
0x26e PUSH1 0x40
0x270 MLOAD
0x271 DUP1
0x272 DUP1
0x273 PUSH1 0x20
0x275 ADD
0x276 DUP3
0x277 DUP2
0x278 SUB
0x279 DUP3
0x27a MSTORE
0x27b DUP4
0x27c DUP2
0x27d DUP2
0x27e MLOAD
0x27f DUP2
0x280 MSTORE
0x281 PUSH1 0x20
0x283 ADD
0x284 SWAP2
0x285 POP
0x286 DUP1
0x287 MLOAD
0x288 SWAP1
0x289 PUSH1 0x20
0x28b ADD
0x28c SWAP1
0x28d DUP1
0x28e DUP4
0x28f DUP4
0x290 PUSH1 0x0
---
0x26d: JUMPDEST 
0x26e: V172 = 0x40
0x270: V173 = M[0x40]
0x273: V174 = 0x20
0x275: V175 = ADD 0x20 V173
0x278: V176 = SUB V175 V173
0x27a: M[V173] = V176
0x27e: V177 = M[V360]
0x280: M[V175] = V177
0x281: V178 = 0x20
0x283: V179 = ADD 0x20 V175
0x287: V180 = M[V360]
0x289: V181 = 0x20
0x28b: V182 = ADD 0x20 V360
0x290: V183 = 0x0
---
Entry stack: [V11, 0x26d, V360]
Stack pops: 1
Stack additions: [S0, V173, V173, V179, V182, V180, V180, V179, V182, 0x0]
Exit stack: [V11, 0x26d, V360, V173, V173, V179, V182, V180, V180, V179, V182, 0x0]

================================

Block 0x292
[0x292:0x29a]
---
Predecessors: [0x26d, 0x29b]
Successors: [0x29b, 0x2ad]
---
0x292 JUMPDEST
0x293 DUP4
0x294 DUP2
0x295 LT
0x296 ISZERO
0x297 PUSH2 0x2ad
0x29a JUMPI
---
0x292: JUMPDEST 
0x295: V184 = LT S0 V180
0x296: V185 = ISZERO V184
0x297: V186 = 0x2ad
0x29a: JUMPI 0x2ad V185
---
Entry stack: [V11, 0x26d, V360, V173, V173, V179, V182, V180, V180, V179, V182, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x26d, V360, V173, V173, V179, V182, V180, V180, V179, V182, S0]

================================

Block 0x29b
[0x29b:0x2ac]
---
Predecessors: [0x292]
Successors: [0x292]
---
0x29b DUP1
0x29c DUP3
0x29d ADD
0x29e MLOAD
0x29f DUP2
0x2a0 DUP5
0x2a1 ADD
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 DUP2
0x2a6 ADD
0x2a7 SWAP1
0x2a8 POP
0x2a9 PUSH2 0x292
0x2ac JUMP
---
0x29d: V187 = ADD V182 S0
0x29e: V188 = M[V187]
0x2a1: V189 = ADD V179 S0
0x2a2: M[V189] = V188
0x2a3: V190 = 0x20
0x2a6: V191 = ADD S0 0x20
0x2a9: V192 = 0x292
0x2ac: JUMP 0x292
---
Entry stack: [V11, 0x26d, V360, V173, V173, V179, V182, V180, V180, V179, V182, S0]
Stack pops: 3
Stack additions: [S2, S1, V191]
Exit stack: [V11, 0x26d, V360, V173, V173, V179, V182, V180, V180, V179, V182, V191]

================================

Block 0x2ad
[0x2ad:0x2c0]
---
Predecessors: [0x292]
Successors: [0x2c1, 0x2da]
---
0x2ad JUMPDEST
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 SWAP1
0x2b3 POP
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 ADD
0x2b7 SWAP1
0x2b8 PUSH1 0x1f
0x2ba AND
0x2bb DUP1
0x2bc ISZERO
0x2bd PUSH2 0x2da
0x2c0 JUMPI
---
0x2ad: JUMPDEST 
0x2b6: V193 = ADD V180 V179
0x2b8: V194 = 0x1f
0x2ba: V195 = AND 0x1f V180
0x2bc: V196 = ISZERO V195
0x2bd: V197 = 0x2da
0x2c0: JUMPI 0x2da V196
---
Entry stack: [V11, 0x26d, V360, V173, V173, V179, V182, V180, V180, V179, V182, S0]
Stack pops: 7
Stack additions: [V193, V195]
Exit stack: [V11, 0x26d, V360, V173, V173, V193, V195]

================================

Block 0x2c1
[0x2c1:0x2d9]
---
Predecessors: [0x2ad]
Successors: [0x2da]
---
0x2c1 DUP1
0x2c2 DUP3
0x2c3 SUB
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 PUSH1 0x1
0x2c8 DUP4
0x2c9 PUSH1 0x20
0x2cb SUB
0x2cc PUSH2 0x100
0x2cf EXP
0x2d0 SUB
0x2d1 NOT
0x2d2 AND
0x2d3 DUP2
0x2d4 MSTORE
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP2
0x2d9 POP
---
0x2c3: V198 = SUB V193 V195
0x2c5: V199 = M[V198]
0x2c6: V200 = 0x1
0x2c9: V201 = 0x20
0x2cb: V202 = SUB 0x20 V195
0x2cc: V203 = 0x100
0x2cf: V204 = EXP 0x100 V202
0x2d0: V205 = SUB V204 0x1
0x2d1: V206 = NOT V205
0x2d2: V207 = AND V206 V199
0x2d4: M[V198] = V207
0x2d5: V208 = 0x20
0x2d7: V209 = ADD 0x20 V198
---
Entry stack: [V11, 0x26d, V360, V173, V173, V193, V195]
Stack pops: 2
Stack additions: [V209, S0]
Exit stack: [V11, 0x26d, V360, V173, V173, V209, V195]

================================

Block 0x2da
[0x2da:0x2e7]
---
Predecessors: [0x2ad, 0x2c1]
Successors: []
---
0x2da JUMPDEST
0x2db POP
0x2dc SWAP3
0x2dd POP
0x2de POP
0x2df POP
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 DUP1
0x2e4 SWAP2
0x2e5 SUB
0x2e6 SWAP1
0x2e7 RETURN
---
0x2da: JUMPDEST 
0x2e0: V210 = 0x40
0x2e2: V211 = M[0x40]
0x2e5: V212 = SUB S1 V211
0x2e7: RETURN V211 V212
---
Entry stack: [V11, 0x26d, V360, V173, V173, S1, V195]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x26d]

================================

Block 0x2e8
[0x2e8:0x2ef]
---
Predecessors: [0x83]
Successors: [0x2f0, 0x2f4]
---
0x2e8 JUMPDEST
0x2e9 CALLVALUE
0x2ea DUP1
0x2eb ISZERO
0x2ec PUSH2 0x2f4
0x2ef JUMPI
---
0x2e8: JUMPDEST 
0x2e9: V213 = CALLVALUE
0x2eb: V214 = ISZERO V213
0x2ec: V215 = 0x2f4
0x2ef: JUMPI 0x2f4 V214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V11, V213]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2e8]
Successors: []
---
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 REVERT
---
0x2f0: V216 = 0x0
0x2f3: REVERT 0x0 0x0
---
Entry stack: [V11, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V213]

================================

Block 0x2f4
[0x2f4:0x332]
---
Predecessors: [0x2e8]
Successors: [0x51a]
---
0x2f4 JUMPDEST
0x2f5 POP
0x2f6 PUSH2 0x333
0x2f9 PUSH1 0x4
0x2fb DUP1
0x2fc CALLDATASIZE
0x2fd SUB
0x2fe DUP2
0x2ff ADD
0x300 SWAP1
0x301 DUP1
0x302 DUP1
0x303 CALLDATALOAD
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 AND
0x31a SWAP1
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP1
0x31f SWAP3
0x320 SWAP2
0x321 SWAP1
0x322 DUP1
0x323 CALLDATALOAD
0x324 SWAP1
0x325 PUSH1 0x20
0x327 ADD
0x328 SWAP1
0x329 SWAP3
0x32a SWAP2
0x32b SWAP1
0x32c POP
0x32d POP
0x32e POP
0x32f PUSH2 0x51a
0x332 JUMP
---
0x2f4: JUMPDEST 
0x2f6: V217 = 0x333
0x2f9: V218 = 0x4
0x2fc: V219 = CALLDATASIZE
0x2fd: V220 = SUB V219 0x4
0x2ff: V221 = ADD 0x4 V220
0x303: V222 = CALLDATALOAD 0x4
0x304: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x31b: V225 = 0x20
0x31d: V226 = ADD 0x20 0x4
0x323: V227 = CALLDATALOAD 0x24
0x325: V228 = 0x20
0x327: V229 = ADD 0x20 0x24
0x32f: V230 = 0x51a
0x332: JUMP 0x51a
---
Entry stack: [V11, V213]
Stack pops: 1
Stack additions: [0x333, V224, V227]
Exit stack: [V11, 0x333, V224, V227]

================================

Block 0x333
[0x333:0x34c]
---
Predecessors: [0x688]
Successors: []
---
0x333 JUMPDEST
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 DUP3
0x339 ISZERO
0x33a ISZERO
0x33b ISZERO
0x33c ISZERO
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 SWAP2
0x343 POP
0x344 POP
0x345 PUSH1 0x40
0x347 MLOAD
0x348 DUP1
0x349 SWAP2
0x34a SUB
0x34b SWAP1
0x34c RETURN
---
0x333: JUMPDEST 
0x334: V231 = 0x40
0x336: V232 = M[0x40]
0x339: V233 = ISZERO 0x1
0x33a: V234 = ISZERO 0x0
0x33b: V235 = ISZERO 0x1
0x33c: V236 = ISZERO 0x0
0x33e: M[V232] = 0x1
0x33f: V237 = 0x20
0x341: V238 = ADD 0x20 V232
0x345: V239 = 0x40
0x347: V240 = M[0x40]
0x34a: V241 = SUB V238 V240
0x34c: RETURN V240 V241
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x34d
[0x34d:0x39c]
---
Predecessors: [0x9f]
Successors: [0x39d, 0x3e3]
---
0x34d JUMPDEST
0x34e PUSH1 0x2
0x350 DUP1
0x351 SLOAD
0x352 PUSH1 0x1
0x354 DUP2
0x355 PUSH1 0x1
0x357 AND
0x358 ISZERO
0x359 PUSH2 0x100
0x35c MUL
0x35d SUB
0x35e AND
0x35f PUSH1 0x2
0x361 SWAP1
0x362 DIV
0x363 DUP1
0x364 PUSH1 0x1f
0x366 ADD
0x367 PUSH1 0x20
0x369 DUP1
0x36a SWAP2
0x36b DIV
0x36c MUL
0x36d PUSH1 0x20
0x36f ADD
0x370 PUSH1 0x40
0x372 MLOAD
0x373 SWAP1
0x374 DUP2
0x375 ADD
0x376 PUSH1 0x40
0x378 MSTORE
0x379 DUP1
0x37a SWAP3
0x37b SWAP2
0x37c SWAP1
0x37d DUP2
0x37e DUP2
0x37f MSTORE
0x380 PUSH1 0x20
0x382 ADD
0x383 DUP3
0x384 DUP1
0x385 SLOAD
0x386 PUSH1 0x1
0x388 DUP2
0x389 PUSH1 0x1
0x38b AND
0x38c ISZERO
0x38d PUSH2 0x100
0x390 MUL
0x391 SUB
0x392 AND
0x393 PUSH1 0x2
0x395 SWAP1
0x396 DIV
0x397 DUP1
0x398 ISZERO
0x399 PUSH2 0x3e3
0x39c JUMPI
---
0x34d: JUMPDEST 
0x34e: V242 = 0x2
0x351: V243 = S[0x2]
0x352: V244 = 0x1
0x355: V245 = 0x1
0x357: V246 = AND 0x1 V243
0x358: V247 = ISZERO V246
0x359: V248 = 0x100
0x35c: V249 = MUL 0x100 V247
0x35d: V250 = SUB V249 0x1
0x35e: V251 = AND V250 V243
0x35f: V252 = 0x2
0x362: V253 = DIV V251 0x2
0x364: V254 = 0x1f
0x366: V255 = ADD 0x1f V253
0x367: V256 = 0x20
0x36b: V257 = DIV V255 0x20
0x36c: V258 = MUL V257 0x20
0x36d: V259 = 0x20
0x36f: V260 = ADD 0x20 V258
0x370: V261 = 0x40
0x372: V262 = M[0x40]
0x375: V263 = ADD V262 V260
0x376: V264 = 0x40
0x378: M[0x40] = V263
0x37f: M[V262] = V253
0x380: V265 = 0x20
0x382: V266 = ADD 0x20 V262
0x385: V267 = S[0x2]
0x386: V268 = 0x1
0x389: V269 = 0x1
0x38b: V270 = AND 0x1 V267
0x38c: V271 = ISZERO V270
0x38d: V272 = 0x100
0x390: V273 = MUL 0x100 V271
0x391: V274 = SUB V273 0x1
0x392: V275 = AND V274 V267
0x393: V276 = 0x2
0x396: V277 = DIV V275 0x2
0x398: V278 = ISZERO V277
0x399: V279 = 0x3e3
0x39c: JUMPI 0x3e3 V278
---
Entry stack: [V11, 0xa8]
Stack pops: 0
Stack additions: [V262, 0x2, V253, V266, 0x2, V277]
Exit stack: [V11, 0xa8, V262, 0x2, V253, V266, 0x2, V277]

================================

Block 0x39d
[0x39d:0x3a4]
---
Predecessors: [0x34d]
Successors: [0x3a5, 0x3b8]
---
0x39d DUP1
0x39e PUSH1 0x1f
0x3a0 LT
0x3a1 PUSH2 0x3b8
0x3a4 JUMPI
---
0x39e: V280 = 0x1f
0x3a0: V281 = LT 0x1f V277
0x3a1: V282 = 0x3b8
0x3a4: JUMPI 0x3b8 V281
---
Entry stack: [V11, 0xa8, V262, 0x2, V253, V266, 0x2, V277]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa8, V262, 0x2, V253, V266, 0x2, V277]

================================

Block 0x3a5
[0x3a5:0x3b7]
---
Predecessors: [0x39d]
Successors: [0x3e3]
---
0x3a5 PUSH2 0x100
0x3a8 DUP1
0x3a9 DUP4
0x3aa SLOAD
0x3ab DIV
0x3ac MUL
0x3ad DUP4
0x3ae MSTORE
0x3af SWAP2
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 SWAP2
0x3b4 PUSH2 0x3e3
0x3b7 JUMP
---
0x3a5: V283 = 0x100
0x3aa: V284 = S[0x2]
0x3ab: V285 = DIV V284 0x100
0x3ac: V286 = MUL V285 0x100
0x3ae: M[V266] = V286
0x3b0: V287 = 0x20
0x3b2: V288 = ADD 0x20 V266
0x3b4: V289 = 0x3e3
0x3b7: JUMP 0x3e3
---
Entry stack: [V11, 0xa8, V262, 0x2, V253, V266, 0x2, V277]
Stack pops: 3
Stack additions: [V288, S1, S0]
Exit stack: [V11, 0xa8, V262, 0x2, V253, V288, 0x2, V277]

================================

Block 0x3b8
[0x3b8:0x3c5]
---
Predecessors: [0x39d]
Successors: [0x3c6]
---
0x3b8 JUMPDEST
0x3b9 DUP3
0x3ba ADD
0x3bb SWAP2
0x3bc SWAP1
0x3bd PUSH1 0x0
0x3bf MSTORE
0x3c0 PUSH1 0x20
0x3c2 PUSH1 0x0
0x3c4 SHA3
0x3c5 SWAP1
---
0x3b8: JUMPDEST 
0x3ba: V290 = ADD V266 V277
0x3bd: V291 = 0x0
0x3bf: M[0x0] = 0x2
0x3c0: V292 = 0x20
0x3c2: V293 = 0x0
0x3c4: V294 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xa8, V262, 0x2, V253, V266, 0x2, V277]
Stack pops: 3
Stack additions: [V290, V294, S2]
Exit stack: [V11, 0xa8, V262, 0x2, V253, V290, V294, V266]

================================

Block 0x3c6
[0x3c6:0x3d9]
---
Predecessors: [0x3b8, 0x3c6]
Successors: [0x3c6, 0x3da]
---
0x3c6 JUMPDEST
0x3c7 DUP2
0x3c8 SLOAD
0x3c9 DUP2
0x3ca MSTORE
0x3cb SWAP1
0x3cc PUSH1 0x1
0x3ce ADD
0x3cf SWAP1
0x3d0 PUSH1 0x20
0x3d2 ADD
0x3d3 DUP1
0x3d4 DUP4
0x3d5 GT
0x3d6 PUSH2 0x3c6
0x3d9 JUMPI
---
0x3c6: JUMPDEST 
0x3c8: V295 = S[S1]
0x3ca: M[S0] = V295
0x3cc: V296 = 0x1
0x3ce: V297 = ADD 0x1 S1
0x3d0: V298 = 0x20
0x3d2: V299 = ADD 0x20 S0
0x3d5: V300 = GT V290 V299
0x3d6: V301 = 0x3c6
0x3d9: JUMPI 0x3c6 V300
---
Entry stack: [V11, 0xa8, V262, 0x2, V253, V290, S1, S0]
Stack pops: 3
Stack additions: [S2, V297, V299]
Exit stack: [V11, 0xa8, V262, 0x2, V253, V290, V297, V299]

================================

Block 0x3da
[0x3da:0x3e2]
---
Predecessors: [0x3c6]
Successors: [0x3e3]
---
0x3da DUP3
0x3db SWAP1
0x3dc SUB
0x3dd PUSH1 0x1f
0x3df AND
0x3e0 DUP3
0x3e1 ADD
0x3e2 SWAP2
---
0x3dc: V302 = SUB V299 V290
0x3dd: V303 = 0x1f
0x3df: V304 = AND 0x1f V302
0x3e1: V305 = ADD V290 V304
---
Entry stack: [V11, 0xa8, V262, 0x2, V253, V290, V297, V299]
Stack pops: 3
Stack additions: [V305, S1, S2]
Exit stack: [V11, 0xa8, V262, 0x2, V253, V305, V297, V290]

================================

Block 0x3e3
[0x3e3:0x3ea]
---
Predecessors: [0x34d, 0x3a5, 0x3da]
Successors: [0xa8]
---
0x3e3 JUMPDEST
0x3e4 POP
0x3e5 POP
0x3e6 POP
0x3e7 POP
0x3e8 POP
0x3e9 DUP2
0x3ea JUMP
---
0x3e3: JUMPDEST 
0x3ea: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V262, 0x2, V253, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xa8, V262]

================================

Block 0x3eb
[0x3eb:0x3f4]
---
Predecessors: [0x12f]
Successors: [0x138]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x0
0x3ee PUSH1 0x1
0x3f0 SLOAD
0x3f1 SWAP1
0x3f2 POP
0x3f3 SWAP1
0x3f4 JUMP
---
0x3eb: JUMPDEST 
0x3ec: V306 = 0x0
0x3ee: V307 = 0x1
0x3f0: V308 = S[0x1]
0x3f4: JUMP 0x138
---
Entry stack: [V11, 0x138]
Stack pops: 1
Stack additions: [V308]
Exit stack: [V11, V308]

================================

Block 0x3f5
[0x3f5:0x407]
---
Predecessors: [0x15a]
Successors: [0x163]
---
0x3f5 JUMPDEST
0x3f6 PUSH1 0x4
0x3f8 PUSH1 0x0
0x3fa SWAP1
0x3fb SLOAD
0x3fc SWAP1
0x3fd PUSH2 0x100
0x400 EXP
0x401 SWAP1
0x402 DIV
0x403 PUSH1 0xff
0x405 AND
0x406 DUP2
0x407 JUMP
---
0x3f5: JUMPDEST 
0x3f6: V309 = 0x4
0x3f8: V310 = 0x0
0x3fb: V311 = S[0x4]
0x3fd: V312 = 0x100
0x400: V313 = EXP 0x100 0x0
0x402: V314 = DIV V311 0x1
0x403: V315 = 0xff
0x405: V316 = AND 0xff V314
0x407: JUMP 0x163
---
Entry stack: [V11, 0x163]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V11, 0x163, V316]

================================

Block 0x408
[0x408:0x40d]
---
Predecessors: [0x18b]
Successors: [0x194]
---
0x408 JUMPDEST
0x409 PUSH1 0x5
0x40b SLOAD
0x40c DUP2
0x40d JUMP
---
0x408: JUMPDEST 
0x409: V317 = 0x5
0x40b: V318 = S[0x5]
0x40d: JUMP 0x194
---
Entry stack: [V11, 0x194]
Stack pops: 1
Stack additions: [S0, V318]
Exit stack: [V11, 0x194, V318]

================================

Block 0x40e
[0x40e:0x455]
---
Predecessors: [0x1b6]
Successors: [0x1eb]
---
0x40e JUMPDEST
0x40f PUSH1 0x0
0x411 DUP1
0x412 PUSH1 0x0
0x414 DUP4
0x415 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42a AND
0x42b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x440 AND
0x441 DUP2
0x442 MSTORE
0x443 PUSH1 0x20
0x445 ADD
0x446 SWAP1
0x447 DUP2
0x448 MSTORE
0x449 PUSH1 0x20
0x44b ADD
0x44c PUSH1 0x0
0x44e SHA3
0x44f SLOAD
0x450 SWAP1
0x451 POP
0x452 SWAP2
0x453 SWAP1
0x454 POP
0x455 JUMP
---
0x40e: JUMPDEST 
0x40f: V319 = 0x0
0x412: V320 = 0x0
0x415: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x42a: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x42b: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x440: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x442: M[0x0] = V324
0x443: V325 = 0x20
0x445: V326 = ADD 0x20 0x0
0x448: M[0x20] = 0x0
0x449: V327 = 0x20
0x44b: V328 = ADD 0x20 0x20
0x44c: V329 = 0x0
0x44e: V330 = SHA3 0x0 0x40
0x44f: V331 = S[V330]
0x455: JUMP 0x1eb
---
Entry stack: [V11, 0x1eb, V138]
Stack pops: 2
Stack additions: [V331]
Exit stack: [V11, V331]

================================

Block 0x456
[0x456:0x47b]
---
Predecessors: [0x20d]
Successors: [0x216]
---
0x456 JUMPDEST
0x457 PUSH1 0x4
0x459 PUSH1 0x1
0x45b SWAP1
0x45c SLOAD
0x45d SWAP1
0x45e PUSH2 0x100
0x461 EXP
0x462 SWAP1
0x463 DIV
0x464 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x479 AND
0x47a DUP2
0x47b JUMP
---
0x456: JUMPDEST 
0x457: V332 = 0x4
0x459: V333 = 0x1
0x45c: V334 = S[0x4]
0x45e: V335 = 0x100
0x461: V336 = EXP 0x100 0x1
0x463: V337 = DIV V334 0x100
0x464: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x479: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x47b: JUMP 0x216
---
Entry stack: [V11, 0x216]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V11, 0x216, V339]

================================

Block 0x47c
[0x47c:0x4cb]
---
Predecessors: [0x264]
Successors: [0x4cc, 0x512]
---
0x47c JUMPDEST
0x47d PUSH1 0x3
0x47f DUP1
0x480 SLOAD
0x481 PUSH1 0x1
0x483 DUP2
0x484 PUSH1 0x1
0x486 AND
0x487 ISZERO
0x488 PUSH2 0x100
0x48b MUL
0x48c SUB
0x48d AND
0x48e PUSH1 0x2
0x490 SWAP1
0x491 DIV
0x492 DUP1
0x493 PUSH1 0x1f
0x495 ADD
0x496 PUSH1 0x20
0x498 DUP1
0x499 SWAP2
0x49a DIV
0x49b MUL
0x49c PUSH1 0x20
0x49e ADD
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 SWAP1
0x4a3 DUP2
0x4a4 ADD
0x4a5 PUSH1 0x40
0x4a7 MSTORE
0x4a8 DUP1
0x4a9 SWAP3
0x4aa SWAP2
0x4ab SWAP1
0x4ac DUP2
0x4ad DUP2
0x4ae MSTORE
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 DUP3
0x4b3 DUP1
0x4b4 SLOAD
0x4b5 PUSH1 0x1
0x4b7 DUP2
0x4b8 PUSH1 0x1
0x4ba AND
0x4bb ISZERO
0x4bc PUSH2 0x100
0x4bf MUL
0x4c0 SUB
0x4c1 AND
0x4c2 PUSH1 0x2
0x4c4 SWAP1
0x4c5 DIV
0x4c6 DUP1
0x4c7 ISZERO
0x4c8 PUSH2 0x512
0x4cb JUMPI
---
0x47c: JUMPDEST 
0x47d: V340 = 0x3
0x480: V341 = S[0x3]
0x481: V342 = 0x1
0x484: V343 = 0x1
0x486: V344 = AND 0x1 V341
0x487: V345 = ISZERO V344
0x488: V346 = 0x100
0x48b: V347 = MUL 0x100 V345
0x48c: V348 = SUB V347 0x1
0x48d: V349 = AND V348 V341
0x48e: V350 = 0x2
0x491: V351 = DIV V349 0x2
0x493: V352 = 0x1f
0x495: V353 = ADD 0x1f V351
0x496: V354 = 0x20
0x49a: V355 = DIV V353 0x20
0x49b: V356 = MUL V355 0x20
0x49c: V357 = 0x20
0x49e: V358 = ADD 0x20 V356
0x49f: V359 = 0x40
0x4a1: V360 = M[0x40]
0x4a4: V361 = ADD V360 V358
0x4a5: V362 = 0x40
0x4a7: M[0x40] = V361
0x4ae: M[V360] = V351
0x4af: V363 = 0x20
0x4b1: V364 = ADD 0x20 V360
0x4b4: V365 = S[0x3]
0x4b5: V366 = 0x1
0x4b8: V367 = 0x1
0x4ba: V368 = AND 0x1 V365
0x4bb: V369 = ISZERO V368
0x4bc: V370 = 0x100
0x4bf: V371 = MUL 0x100 V369
0x4c0: V372 = SUB V371 0x1
0x4c1: V373 = AND V372 V365
0x4c2: V374 = 0x2
0x4c5: V375 = DIV V373 0x2
0x4c7: V376 = ISZERO V375
0x4c8: V377 = 0x512
0x4cb: JUMPI 0x512 V376
---
Entry stack: [V11, 0x26d]
Stack pops: 0
Stack additions: [V360, 0x3, V351, V364, 0x3, V375]
Exit stack: [V11, 0x26d, V360, 0x3, V351, V364, 0x3, V375]

================================

Block 0x4cc
[0x4cc:0x4d3]
---
Predecessors: [0x47c]
Successors: [0x4d4, 0x4e7]
---
0x4cc DUP1
0x4cd PUSH1 0x1f
0x4cf LT
0x4d0 PUSH2 0x4e7
0x4d3 JUMPI
---
0x4cd: V378 = 0x1f
0x4cf: V379 = LT 0x1f V375
0x4d0: V380 = 0x4e7
0x4d3: JUMPI 0x4e7 V379
---
Entry stack: [V11, 0x26d, V360, 0x3, V351, V364, 0x3, V375]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x26d, V360, 0x3, V351, V364, 0x3, V375]

================================

Block 0x4d4
[0x4d4:0x4e6]
---
Predecessors: [0x4cc]
Successors: [0x512]
---
0x4d4 PUSH2 0x100
0x4d7 DUP1
0x4d8 DUP4
0x4d9 SLOAD
0x4da DIV
0x4db MUL
0x4dc DUP4
0x4dd MSTORE
0x4de SWAP2
0x4df PUSH1 0x20
0x4e1 ADD
0x4e2 SWAP2
0x4e3 PUSH2 0x512
0x4e6 JUMP
---
0x4d4: V381 = 0x100
0x4d9: V382 = S[0x3]
0x4da: V383 = DIV V382 0x100
0x4db: V384 = MUL V383 0x100
0x4dd: M[V364] = V384
0x4df: V385 = 0x20
0x4e1: V386 = ADD 0x20 V364
0x4e3: V387 = 0x512
0x4e6: JUMP 0x512
---
Entry stack: [V11, 0x26d, V360, 0x3, V351, V364, 0x3, V375]
Stack pops: 3
Stack additions: [V386, S1, S0]
Exit stack: [V11, 0x26d, V360, 0x3, V351, V386, 0x3, V375]

================================

Block 0x4e7
[0x4e7:0x4f4]
---
Predecessors: [0x4cc]
Successors: [0x4f5]
---
0x4e7 JUMPDEST
0x4e8 DUP3
0x4e9 ADD
0x4ea SWAP2
0x4eb SWAP1
0x4ec PUSH1 0x0
0x4ee MSTORE
0x4ef PUSH1 0x20
0x4f1 PUSH1 0x0
0x4f3 SHA3
0x4f4 SWAP1
---
0x4e7: JUMPDEST 
0x4e9: V388 = ADD V364 V375
0x4ec: V389 = 0x0
0x4ee: M[0x0] = 0x3
0x4ef: V390 = 0x20
0x4f1: V391 = 0x0
0x4f3: V392 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x26d, V360, 0x3, V351, V364, 0x3, V375]
Stack pops: 3
Stack additions: [V388, V392, S2]
Exit stack: [V11, 0x26d, V360, 0x3, V351, V388, V392, V364]

================================

Block 0x4f5
[0x4f5:0x508]
---
Predecessors: [0x4e7, 0x4f5]
Successors: [0x4f5, 0x509]
---
0x4f5 JUMPDEST
0x4f6 DUP2
0x4f7 SLOAD
0x4f8 DUP2
0x4f9 MSTORE
0x4fa SWAP1
0x4fb PUSH1 0x1
0x4fd ADD
0x4fe SWAP1
0x4ff PUSH1 0x20
0x501 ADD
0x502 DUP1
0x503 DUP4
0x504 GT
0x505 PUSH2 0x4f5
0x508 JUMPI
---
0x4f5: JUMPDEST 
0x4f7: V393 = S[S1]
0x4f9: M[S0] = V393
0x4fb: V394 = 0x1
0x4fd: V395 = ADD 0x1 S1
0x4ff: V396 = 0x20
0x501: V397 = ADD 0x20 S0
0x504: V398 = GT V388 V397
0x505: V399 = 0x4f5
0x508: JUMPI 0x4f5 V398
---
Entry stack: [V11, 0x26d, V360, 0x3, V351, V388, S1, S0]
Stack pops: 3
Stack additions: [S2, V395, V397]
Exit stack: [V11, 0x26d, V360, 0x3, V351, V388, V395, V397]

================================

Block 0x509
[0x509:0x511]
---
Predecessors: [0x4f5]
Successors: [0x512]
---
0x509 DUP3
0x50a SWAP1
0x50b SUB
0x50c PUSH1 0x1f
0x50e AND
0x50f DUP3
0x510 ADD
0x511 SWAP2
---
0x50b: V400 = SUB V397 V388
0x50c: V401 = 0x1f
0x50e: V402 = AND 0x1f V400
0x510: V403 = ADD V388 V402
---
Entry stack: [V11, 0x26d, V360, 0x3, V351, V388, V395, V397]
Stack pops: 3
Stack additions: [V403, S1, S2]
Exit stack: [V11, 0x26d, V360, 0x3, V351, V403, V395, V388]

================================

Block 0x512
[0x512:0x519]
---
Predecessors: [0x47c, 0x4d4, 0x509]
Successors: [0x26d]
---
0x512 JUMPDEST
0x513 POP
0x514 POP
0x515 POP
0x516 POP
0x517 POP
0x518 DUP2
0x519 JUMP
---
0x512: JUMPDEST 
0x519: JUMP 0x26d
---
Entry stack: [V11, 0x26d, V360, 0x3, V351, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x26d, V360]

================================

Block 0x51a
[0x51a:0x552]
---
Predecessors: [0x2f4]
Successors: [0x553, 0x557]
---
0x51a JUMPDEST
0x51b PUSH1 0x0
0x51d DUP1
0x51e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x533 AND
0x534 DUP4
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b EQ
0x54c ISZERO
0x54d ISZERO
0x54e ISZERO
0x54f PUSH2 0x557
0x552 JUMPI
---
0x51a: JUMPDEST 
0x51b: V404 = 0x0
0x51e: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x533: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x535: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x54b: V409 = EQ V408 0x0
0x54c: V410 = ISZERO V409
0x54d: V411 = ISZERO V410
0x54e: V412 = ISZERO V411
0x54f: V413 = 0x557
0x552: JUMPI 0x557 V412
---
Entry stack: [V11, 0x333, V224, V227]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x333, V224, V227, 0x0]

================================

Block 0x553
[0x553:0x556]
---
Predecessors: [0x51a]
Successors: []
---
0x553 PUSH1 0x0
0x555 DUP1
0x556 REVERT
---
0x553: V414 = 0x0
0x556: REVERT 0x0 0x0
---
Entry stack: [V11, 0x333, V224, V227, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x333, V224, V227, 0x0]

================================

Block 0x557
[0x557:0x59f]
---
Predecessors: [0x51a]
Successors: [0x5a0, 0x5a4]
---
0x557 JUMPDEST
0x558 PUSH1 0x0
0x55a DUP1
0x55b CALLER
0x55c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x571 AND
0x572 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x587 AND
0x588 DUP2
0x589 MSTORE
0x58a PUSH1 0x20
0x58c ADD
0x58d SWAP1
0x58e DUP2
0x58f MSTORE
0x590 PUSH1 0x20
0x592 ADD
0x593 PUSH1 0x0
0x595 SHA3
0x596 SLOAD
0x597 DUP3
0x598 GT
0x599 ISZERO
0x59a ISZERO
0x59b ISZERO
0x59c PUSH2 0x5a4
0x59f JUMPI
---
0x557: JUMPDEST 
0x558: V415 = 0x0
0x55b: V416 = CALLER
0x55c: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x571: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x572: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x587: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x589: M[0x0] = V420
0x58a: V421 = 0x20
0x58c: V422 = ADD 0x20 0x0
0x58f: M[0x20] = 0x0
0x590: V423 = 0x20
0x592: V424 = ADD 0x20 0x20
0x593: V425 = 0x0
0x595: V426 = SHA3 0x0 0x40
0x596: V427 = S[V426]
0x598: V428 = GT V227 V427
0x599: V429 = ISZERO V428
0x59a: V430 = ISZERO V429
0x59b: V431 = ISZERO V430
0x59c: V432 = 0x5a4
0x59f: JUMPI 0x5a4 V431
---
Entry stack: [V11, 0x333, V224, V227, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x333, V224, V227, 0x0]

================================

Block 0x5a0
[0x5a0:0x5a3]
---
Predecessors: [0x557]
Successors: []
---
0x5a0 PUSH1 0x0
0x5a2 DUP1
0x5a3 REVERT
---
0x5a0: V433 = 0x0
0x5a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x333, V224, V227, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x333, V224, V227, 0x0]

================================

Block 0x5a4
[0x5a4:0x5f4]
---
Predecessors: [0x557]
Successors: [0x739]
---
0x5a4 JUMPDEST
0x5a5 PUSH2 0x5f5
0x5a8 DUP3
0x5a9 PUSH1 0x0
0x5ab DUP1
0x5ac CALLER
0x5ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c2 AND
0x5c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d8 AND
0x5d9 DUP2
0x5da MSTORE
0x5db PUSH1 0x20
0x5dd ADD
0x5de SWAP1
0x5df DUP2
0x5e0 MSTORE
0x5e1 PUSH1 0x20
0x5e3 ADD
0x5e4 PUSH1 0x0
0x5e6 SHA3
0x5e7 SLOAD
0x5e8 PUSH2 0x739
0x5eb SWAP1
0x5ec SWAP2
0x5ed SWAP1
0x5ee PUSH4 0xffffffff
0x5f3 AND
0x5f4 JUMP
---
0x5a4: JUMPDEST 
0x5a5: V434 = 0x5f5
0x5a9: V435 = 0x0
0x5ac: V436 = CALLER
0x5ad: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x5c3: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x5da: M[0x0] = V440
0x5db: V441 = 0x20
0x5dd: V442 = ADD 0x20 0x0
0x5e0: M[0x20] = 0x0
0x5e1: V443 = 0x20
0x5e3: V444 = ADD 0x20 0x20
0x5e4: V445 = 0x0
0x5e6: V446 = SHA3 0x0 0x40
0x5e7: V447 = S[V446]
0x5e8: V448 = 0x739
0x5ee: V449 = 0xffffffff
0x5f3: V450 = AND 0xffffffff 0x739
0x5f4: JUMP 0x739
---
Entry stack: [V11, 0x333, V224, V227, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x5f5, V447, S1]
Exit stack: [V11, 0x333, V224, V227, 0x0, 0x5f5, V447, V227]

================================

Block 0x5f5
[0x5f5:0x687]
---
Predecessors: [0x747]
Successors: [0x752]
---
0x5f5 JUMPDEST
0x5f6 PUSH1 0x0
0x5f8 DUP1
0x5f9 CALLER
0x5fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60f AND
0x610 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x625 AND
0x626 DUP2
0x627 MSTORE
0x628 PUSH1 0x20
0x62a ADD
0x62b SWAP1
0x62c DUP2
0x62d MSTORE
0x62e PUSH1 0x20
0x630 ADD
0x631 PUSH1 0x0
0x633 SHA3
0x634 DUP2
0x635 SWAP1
0x636 SSTORE
0x637 POP
0x638 PUSH2 0x688
0x63b DUP3
0x63c PUSH1 0x0
0x63e DUP1
0x63f DUP7
0x640 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x655 AND
0x656 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66b AND
0x66c DUP2
0x66d MSTORE
0x66e PUSH1 0x20
0x670 ADD
0x671 SWAP1
0x672 DUP2
0x673 MSTORE
0x674 PUSH1 0x20
0x676 ADD
0x677 PUSH1 0x0
0x679 SHA3
0x67a SLOAD
0x67b PUSH2 0x752
0x67e SWAP1
0x67f SWAP2
0x680 SWAP1
0x681 PUSH4 0xffffffff
0x686 AND
0x687 JUMP
---
0x5f5: JUMPDEST 
0x5f6: V451 = 0x0
0x5f9: V452 = CALLER
0x5fa: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x610: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x625: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x627: M[0x0] = V456
0x628: V457 = 0x20
0x62a: V458 = ADD 0x20 0x0
0x62d: M[0x20] = 0x0
0x62e: V459 = 0x20
0x630: V460 = ADD 0x20 0x20
0x631: V461 = 0x0
0x633: V462 = SHA3 0x0 0x40
0x636: S[V462] = V510
0x638: V463 = 0x688
0x63c: V464 = 0x0
0x640: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x655: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x656: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x66b: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x66d: M[0x0] = V468
0x66e: V469 = 0x20
0x670: V470 = ADD 0x20 0x0
0x673: M[0x20] = 0x0
0x674: V471 = 0x20
0x676: V472 = ADD 0x20 0x20
0x677: V473 = 0x0
0x679: V474 = SHA3 0x0 0x40
0x67a: V475 = S[V474]
0x67b: V476 = 0x752
0x681: V477 = 0xffffffff
0x686: V478 = AND 0xffffffff 0x752
0x687: JUMP 0x752
---
Entry stack: [V11, 0x333, V224, V227, 0x0, V510]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x688, V475, S2]
Exit stack: [V11, 0x333, V224, V227, 0x0, 0x688, V475, V227]

================================

Block 0x688
[0x688:0x738]
---
Predecessors: [0x766]
Successors: [0x333]
---
0x688 JUMPDEST
0x689 PUSH1 0x0
0x68b DUP1
0x68c DUP6
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 AND
0x6a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b8 AND
0x6b9 DUP2
0x6ba MSTORE
0x6bb PUSH1 0x20
0x6bd ADD
0x6be SWAP1
0x6bf DUP2
0x6c0 MSTORE
0x6c1 PUSH1 0x20
0x6c3 ADD
0x6c4 PUSH1 0x0
0x6c6 SHA3
0x6c7 DUP2
0x6c8 SWAP1
0x6c9 SSTORE
0x6ca POP
0x6cb DUP3
0x6cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e1 AND
0x6e2 CALLER
0x6e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f8 AND
0x6f9 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x71a DUP5
0x71b PUSH1 0x40
0x71d MLOAD
0x71e DUP1
0x71f DUP3
0x720 DUP2
0x721 MSTORE
0x722 PUSH1 0x20
0x724 ADD
0x725 SWAP2
0x726 POP
0x727 POP
0x728 PUSH1 0x40
0x72a MLOAD
0x72b DUP1
0x72c SWAP2
0x72d SUB
0x72e SWAP1
0x72f LOG3
0x730 PUSH1 0x1
0x732 SWAP1
0x733 POP
0x734 SWAP3
0x735 SWAP2
0x736 POP
0x737 POP
0x738 JUMP
---
0x688: JUMPDEST 
0x689: V479 = 0x0
0x68d: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x6a3: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b8: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x6ba: M[0x0] = V483
0x6bb: V484 = 0x20
0x6bd: V485 = ADD 0x20 0x0
0x6c0: M[0x20] = 0x0
0x6c1: V486 = 0x20
0x6c3: V487 = ADD 0x20 0x20
0x6c4: V488 = 0x0
0x6c6: V489 = SHA3 0x0 0x40
0x6c9: S[V489] = V512
0x6cc: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e1: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x6e2: V492 = CALLER
0x6e3: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f8: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x6f9: V495 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x71b: V496 = 0x40
0x71d: V497 = M[0x40]
0x721: M[V497] = V227
0x722: V498 = 0x20
0x724: V499 = ADD 0x20 V497
0x728: V500 = 0x40
0x72a: V501 = M[0x40]
0x72d: V502 = SUB V499 V501
0x72f: LOG V501 V502 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V494 V491
0x730: V503 = 0x1
0x738: JUMP 0x333
---
Entry stack: [V11, 0x333, V224, V227, 0x0, V512]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x739
[0x739:0x745]
---
Predecessors: [0x5a4]
Successors: [0x746, 0x747]
---
0x739 JUMPDEST
0x73a PUSH1 0x0
0x73c DUP3
0x73d DUP3
0x73e GT
0x73f ISZERO
0x740 ISZERO
0x741 ISZERO
0x742 PUSH2 0x747
0x745 JUMPI
---
0x739: JUMPDEST 
0x73a: V504 = 0x0
0x73e: V505 = GT V227 V447
0x73f: V506 = ISZERO V505
0x740: V507 = ISZERO V506
0x741: V508 = ISZERO V507
0x742: V509 = 0x747
0x745: JUMPI 0x747 V508
---
Entry stack: [V11, 0x333, V224, V227, 0x0, 0x5f5, V447, V227]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x333, V224, V227, 0x0, 0x5f5, V447, V227, 0x0]

================================

Block 0x746
[0x746:0x746]
---
Predecessors: [0x739]
Successors: []
---
0x746 INVALID
---
0x746: INVALID 
---
Entry stack: [V11, 0x333, V224, V227, 0x0, 0x5f5, V447, V227, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x333, V224, V227, 0x0, 0x5f5, V447, V227, 0x0]

================================

Block 0x747
[0x747:0x751]
---
Predecessors: [0x739]
Successors: [0x5f5]
---
0x747 JUMPDEST
0x748 DUP2
0x749 DUP4
0x74a SUB
0x74b SWAP1
0x74c POP
0x74d SWAP3
0x74e SWAP2
0x74f POP
0x750 POP
0x751 JUMP
---
0x747: JUMPDEST 
0x74a: V510 = SUB V447 V227
0x751: JUMP 0x5f5
---
Entry stack: [V11, 0x333, V224, V227, 0x0, 0x5f5, V447, V227, 0x0]
Stack pops: 4
Stack additions: [V510]
Exit stack: [V11, 0x333, V224, V227, 0x0, V510]

================================

Block 0x752
[0x752:0x764]
---
Predecessors: [0x5f5]
Successors: [0x765, 0x766]
---
0x752 JUMPDEST
0x753 PUSH1 0x0
0x755 DUP1
0x756 DUP3
0x757 DUP5
0x758 ADD
0x759 SWAP1
0x75a POP
0x75b DUP4
0x75c DUP2
0x75d LT
0x75e ISZERO
0x75f ISZERO
0x760 ISZERO
0x761 PUSH2 0x766
0x764 JUMPI
---
0x752: JUMPDEST 
0x753: V511 = 0x0
0x758: V512 = ADD V475 V227
0x75d: V513 = LT V512 V475
0x75e: V514 = ISZERO V513
0x75f: V515 = ISZERO V514
0x760: V516 = ISZERO V515
0x761: V517 = 0x766
0x764: JUMPI 0x766 V516
---
Entry stack: [V11, 0x333, V224, V227, 0x0, 0x688, V475, V227]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V512]
Exit stack: [V11, 0x333, V224, V227, 0x0, 0x688, V475, V227, 0x0, V512]

================================

Block 0x765
[0x765:0x765]
---
Predecessors: [0x752]
Successors: []
---
0x765 INVALID
---
0x765: INVALID 
---
Entry stack: [V11, 0x333, V224, V227, 0x0, 0x688, V475, V227, 0x0, V512]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x333, V224, V227, 0x0, 0x688, V475, V227, 0x0, V512]

================================

Block 0x766
[0x766:0x76f]
---
Predecessors: [0x752]
Successors: [0x688]
---
0x766 JUMPDEST
0x767 DUP1
0x768 SWAP2
0x769 POP
0x76a POP
0x76b SWAP3
0x76c SWAP2
0x76d POP
0x76e POP
0x76f JUMP
---
0x766: JUMPDEST 
0x76f: JUMP 0x688
---
Entry stack: [V11, 0x333, V224, V227, 0x0, 0x688, V475, V227, 0x0, V512]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x333, V224, V227, 0x0, V512]

================================

Block 0x770
[0x770:0x7cf]
---
Predecessors: []
Successors: [0x7d0]
Has unresolved jump.
---
0x770 STOP
0x771 LOG1
0x772 PUSH6 0x627a7a723058
0x779 SHA3
0x77a MISSING 0xcc
0x77b MISSING 0xd4
0x77c SAR
0x77d PUSH28 0xcd88ab74fd115cc547864f6bd18e47fb2e7ef9ea970d6be4b6f8ddc5
0x79a STOP
0x79b MISSING 0x29
0x79c PUSH20 0x0
0x7b1 ADDRESS
0x7b2 EQ
0x7b3 PUSH1 0x80
0x7b5 PUSH1 0x40
0x7b7 MSTORE
0x7b8 PUSH1 0x0
0x7ba DUP1
0x7bb REVERT
0x7bc STOP
0x7bd LOG1
0x7be PUSH6 0x627a7a723058
0x7c5 SHA3
0x7c6 MISSING 0xa6
0x7c7 SWAP11
0x7c8 MISSING 0xa6
0x7c9 DUP3
0x7ca MISSING 0xbe
0x7cb MISSING 0xc0
0x7cc MISSING 0x4d
0x7cd DUP7
0x7ce MUL
0x7cf JUMPI
---
0x770: STOP 
0x771: LOG S0 S1 S2
0x772: V518 = 0x627a7a723058
0x779: V519 = SHA3 0x627a7a723058 S3
0x77a: MISSING 0xcc
0x77b: MISSING 0xd4
0x77c: V520 = SAR S0 S1
0x77d: V521 = 0xcd88ab74fd115cc547864f6bd18e47fb2e7ef9ea970d6be4b6f8ddc5
0x79a: STOP 
0x79b: MISSING 0x29
0x79c: V522 = 0x0
0x7b1: V523 = ADDRESS
0x7b2: V524 = EQ V523 0x0
0x7b3: V525 = 0x80
0x7b5: V526 = 0x40
0x7b7: M[0x40] = 0x80
0x7b8: V527 = 0x0
0x7bb: REVERT 0x0 0x0
0x7bc: STOP 
0x7bd: LOG S0 S1 S2
0x7be: V528 = 0x627a7a723058
0x7c5: V529 = SHA3 0x627a7a723058 S3
0x7c6: MISSING 0xa6
0x7c8: MISSING 0xa6
0x7ca: MISSING 0xbe
0x7cb: MISSING 0xc0
0x7cc: MISSING 0x4d
0x7ce: V530 = MUL S6 S0
0x7cf: JUMPI V530 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V519, 0xcd88ab74fd115cc547864f6bd18e47fb2e7ef9ea970d6be4b6f8ddc5, V520, V524, V529, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, S2, S0, S1, S2, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0x7d0
[0x7d0:0x7ff]
---
Predecessors: [0x770]
Successors: []
---
0x7d0 MISSING 0xae
0x7d1 MISSING 0xf
0x7d2 PUSH6 0xd31ceae3522d
0x7d9 ADDMOD
0x7da MISSING 0xa6
0x7db BYTE
0x7dc ORIGIN
0x7dd MISSING 0xe
0x7de MISSING 0xd5
0x7df MLOAD
0x7e0 SWAP7
0x7e1 XOR
0x7e2 MISSING 0xe
0x7e3 DUP4
0x7e4 PUSH27 0x400029
---
0x7d0: MISSING 0xae
0x7d1: MISSING 0xf
0x7d2: V531 = 0xd31ceae3522d
0x7d9: V532 = ADDMOD 0xd31ceae3522d S0 S1
0x7da: MISSING 0xa6
0x7db: V533 = BYTE S0 S1
0x7dc: V534 = ORIGIN
0x7dd: MISSING 0xe
0x7de: MISSING 0xd5
0x7df: V535 = M[S0]
0x7e1: V536 = XOR S7 S1
0x7e2: MISSING 0xe
0x7e4: V537 = 0x400029
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V532, V534, V533, V536, S2, S3, S4, S5, S6, V535, 0x400029, S3, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x93
Exit block: 0x115
Body: 0x93, 0x9b, 0x9f, 0xa8, 0xcd, 0xd6, 0xe8, 0xfc, 0x115, 0x34d, 0x39d, 0x3a5, 0x3b8, 0x3c6, 0x3da, 0x3e3

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x123
Exit block: 0x138
Body: 0x123, 0x12b, 0x12f, 0x138, 0x3eb

Function 2:
Public function signature: 0x313ce567
Entry block: 0x14e
Exit block: 0x163
Body: 0x14e, 0x156, 0x15a, 0x163, 0x3f5

Function 3:
Public function signature: 0x378dc3dc
Entry block: 0x17f
Exit block: 0x194
Body: 0x17f, 0x187, 0x18b, 0x194, 0x408

Function 4:
Public function signature: 0x70a08231
Entry block: 0x1aa
Exit block: 0x1eb
Body: 0x1aa, 0x1b2, 0x1b6, 0x1eb, 0x40e

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x201
Exit block: 0x216
Body: 0x201, 0x209, 0x20d, 0x216, 0x456

Function 6:
Public function signature: 0x95d89b41
Entry block: 0x258
Exit block: 0x2da
Body: 0x258, 0x260, 0x264, 0x26d, 0x292, 0x29b, 0x2ad, 0x2c1, 0x2da, 0x47c, 0x4cc, 0x4d4, 0x4e7, 0x4f5, 0x509, 0x512

Function 7:
Public function signature: 0xa9059cbb
Entry block: 0x2e8
Exit block: 0x333
Body: 0x2e8, 0x2f0, 0x2f4, 0x333, 0x51a, 0x553, 0x557, 0x5a0, 0x5a4, 0x5f5, 0x688, 0x739, 0x746, 0x747, 0x752, 0x765, 0x766

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

