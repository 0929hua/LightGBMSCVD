Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x2c39da94
0x34 EQ
0x35 PUSH2 0x53
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x2c39da94
0x34: V9 = EQ 0x2c39da94 V7
0x35: V10 = 0x53
0x38: JUMPI 0x53 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xeb]
---
0x39 DUP1
0x3a PUSH4 0x78a72e0d
0x3f EQ
0x40 PUSH2 0xeb
0x43 JUMPI
---
0x3a: V11 = 0x78a72e0d
0x3f: V12 = EQ 0x78a72e0d V7
0x40: V13 = 0xeb
0x43: JUMPI 0xeb V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x14f]
---
0x44 DUP1
0x45 PUSH4 0xec034bed
0x4a EQ
0x4b PUSH2 0x14f
0x4e JUMPI
---
0x45: V14 = 0xec034bed
0x4a: V15 = EQ 0xec034bed V7
0x4b: V16 = 0x14f
0x4e: JUMPI 0x14f V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x44]
Successors: []
---
0x4f PUSH1 0x0
0x51 DUP1
0x52 REVERT
---
0x4f: V17 = 0x0
0x52: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x53
[0x53:0x59]
---
Predecessors: [0x0]
Successors: [0x5a, 0x5e]
---
0x53 JUMPDEST
0x54 CALLVALUE
0x55 ISZERO
0x56 PUSH2 0x5e
0x59 JUMPI
---
0x53: JUMPDEST 
0x54: V18 = CALLVALUE
0x55: V19 = ISZERO V18
0x56: V20 = 0x5e
0x59: JUMPI 0x5e V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5d]
---
Predecessors: [0x53]
Successors: []
---
0x5a PUSH1 0x0
0x5c DUP1
0x5d REVERT
---
0x5a: V21 = 0x0
0x5d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5e
[0x5e:0xe8]
---
Predecessors: [0x53]
Successors: [0x1a4]
---
0x5e JUMPDEST
0x5f PUSH2 0xe9
0x62 PUSH1 0x4
0x64 DUP1
0x65 DUP1
0x66 CALLDATALOAD
0x67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c AND
0x7d SWAP1
0x7e PUSH1 0x20
0x80 ADD
0x81 SWAP1
0x82 SWAP2
0x83 SWAP1
0x84 DUP1
0x85 CALLDATALOAD
0x86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b AND
0x9c SWAP1
0x9d PUSH1 0x20
0x9f ADD
0xa0 SWAP1
0xa1 SWAP2
0xa2 SWAP1
0xa3 DUP1
0xa4 CALLDATALOAD
0xa5 SWAP1
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 SWAP1
0xaa DUP3
0xab ADD
0xac DUP1
0xad CALLDATALOAD
0xae SWAP1
0xaf PUSH1 0x20
0xb1 ADD
0xb2 SWAP1
0xb3 DUP1
0xb4 DUP1
0xb5 PUSH1 0x20
0xb7 MUL
0xb8 PUSH1 0x20
0xba ADD
0xbb PUSH1 0x40
0xbd MLOAD
0xbe SWAP1
0xbf DUP2
0xc0 ADD
0xc1 PUSH1 0x40
0xc3 MSTORE
0xc4 DUP1
0xc5 SWAP4
0xc6 SWAP3
0xc7 SWAP2
0xc8 SWAP1
0xc9 DUP2
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf DUP4
0xd0 DUP4
0xd1 PUSH1 0x20
0xd3 MUL
0xd4 DUP1
0xd5 DUP3
0xd6 DUP5
0xd7 CALLDATACOPY
0xd8 DUP3
0xd9 ADD
0xda SWAP2
0xdb POP
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 POP
0xe1 SWAP2
0xe2 SWAP1
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x1a4
0xe8 JUMP
---
0x5e: JUMPDEST 
0x5f: V22 = 0xe9
0x62: V23 = 0x4
0x66: V24 = CALLDATALOAD 0x4
0x67: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x7e: V27 = 0x20
0x80: V28 = ADD 0x20 0x4
0x85: V29 = CALLDATALOAD 0x24
0x86: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x9d: V32 = 0x20
0x9f: V33 = ADD 0x20 0x24
0xa4: V34 = CALLDATALOAD 0x44
0xa6: V35 = 0x20
0xa8: V36 = ADD 0x20 0x44
0xab: V37 = ADD 0x4 V34
0xad: V38 = CALLDATALOAD V37
0xaf: V39 = 0x20
0xb1: V40 = ADD 0x20 V37
0xb5: V41 = 0x20
0xb7: V42 = MUL 0x20 V38
0xb8: V43 = 0x20
0xba: V44 = ADD 0x20 V42
0xbb: V45 = 0x40
0xbd: V46 = M[0x40]
0xc0: V47 = ADD V46 V44
0xc1: V48 = 0x40
0xc3: M[0x40] = V47
0xcb: M[V46] = V38
0xcc: V49 = 0x20
0xce: V50 = ADD 0x20 V46
0xd1: V51 = 0x20
0xd3: V52 = MUL 0x20 V38
0xd7: CALLDATACOPY V50 V40 V52
0xd9: V53 = ADD V50 V52
0xe5: V54 = 0x1a4
0xe8: JUMP 0x1a4
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xe9, V26, V31, V46]
Exit stack: [V7, 0xe9, V26, V31, V46]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x325]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x39]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V55 = CALLVALUE
0xed: V56 = ISZERO V55
0xee: V57 = 0xf6
0xf1: JUMPI 0xf6 V56
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V58 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf6
[0xf6:0x138]
---
Predecessors: [0xeb]
Successors: [0x32f]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x139
0xfa PUSH1 0x4
0xfc DUP1
0xfd DUP1
0xfe CALLDATALOAD
0xff PUSH12 0xffffffffffffffffffffffff
0x10c AND
0x10d SWAP1
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP1
0x112 SWAP2
0x113 SWAP1
0x114 DUP1
0x115 CALLDATALOAD
0x116 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b AND
0x12c SWAP1
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 SWAP2
0x132 SWAP1
0x133 POP
0x134 POP
0x135 PUSH2 0x32f
0x138 JUMP
---
0xf6: JUMPDEST 
0xf7: V59 = 0x139
0xfa: V60 = 0x4
0xfe: V61 = CALLDATALOAD 0x4
0xff: V62 = 0xffffffffffffffffffffffff
0x10c: V63 = AND 0xffffffffffffffffffffffff V61
0x10e: V64 = 0x20
0x110: V65 = ADD 0x20 0x4
0x115: V66 = CALLDATALOAD 0x24
0x116: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x12d: V69 = 0x20
0x12f: V70 = ADD 0x20 0x24
0x135: V71 = 0x32f
0x138: JUMP 0x32f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x139, V63, V68]
Exit stack: [V7, 0x139, V63, V68]

================================

Block 0x139
[0x139:0x14e]
---
Predecessors: [0x32f]
Successors: []
---
0x139 JUMPDEST
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e DUP3
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP2
0x145 POP
0x146 POP
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP1
0x14b SWAP2
0x14c SUB
0x14d SWAP1
0x14e RETURN
---
0x139: JUMPDEST 
0x13a: V72 = 0x40
0x13c: V73 = M[0x40]
0x140: M[V73] = V194
0x141: V74 = 0x20
0x143: V75 = ADD 0x20 V73
0x147: V76 = 0x40
0x149: V77 = M[0x40]
0x14c: V78 = SUB V75 V77
0x14e: RETURN V77 V78
---
Entry stack: [V7, V194]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x14f
[0x14f:0x155]
---
Predecessors: [0x44]
Successors: [0x156, 0x15a]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14f: JUMPDEST 
0x150: V79 = CALLVALUE
0x151: V80 = ISZERO V79
0x152: V81 = 0x15a
0x155: JUMPI 0x15a V80
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14f]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V82 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x14f]
Successors: [0x375]
---
0x15a JUMPDEST
0x15b PUSH2 0x162
0x15e PUSH2 0x375
0x161 JUMP
---
0x15a: JUMPDEST 
0x15b: V83 = 0x162
0x15e: V84 = 0x375
0x161: JUMP 0x375
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x162]
Exit stack: [V7, 0x162]

================================

Block 0x162
[0x162:0x1a3]
---
Predecessors: [0x375]
Successors: []
---
0x162 JUMPDEST
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP1
0x167 DUP3
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x193 AND
0x194 DUP2
0x195 MSTORE
0x196 PUSH1 0x20
0x198 ADD
0x199 SWAP2
0x19a POP
0x19b POP
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 SWAP2
0x1a1 SUB
0x1a2 SWAP1
0x1a3 RETURN
---
0x162: JUMPDEST 
0x163: V85 = 0x40
0x165: V86 = M[0x40]
0x168: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x17e: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x193: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x195: M[V86] = V90
0x196: V91 = 0x20
0x198: V92 = ADD 0x20 V86
0x19c: V93 = 0x40
0x19e: V94 = M[0x40]
0x1a1: V95 = SUB V92 V94
0x1a3: RETURN V94 V95
---
Entry stack: [V7, 0x162, V201]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x162]

================================

Block 0x1a4
[0x1a4:0x1b4]
---
Predecessors: [0x5e]
Successors: [0x1b5]
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab PUSH1 0x0
0x1ad DUP6
0x1ae MLOAD
0x1af SWAP5
0x1b0 POP
0x1b1 PUSH1 0x0
0x1b3 SWAP4
0x1b4 POP
---
0x1a4: JUMPDEST 
0x1a5: V96 = 0x0
0x1a8: V97 = 0x0
0x1ab: V98 = 0x0
0x1ae: V99 = M[V46]
0x1b1: V100 = 0x0
---
Entry stack: [V7, 0xe9, V26, V31, V46]
Stack pops: 1
Stack additions: [S0, V99, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V7, 0xe9, V26, V31, V46, V99, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1b5
[0x1b5:0x1bd]
---
Predecessors: [0x1a4, 0x318]
Successors: [0x1be, 0x325]
---
0x1b5 JUMPDEST
0x1b6 DUP5
0x1b7 DUP5
0x1b8 LT
0x1b9 ISZERO
0x1ba PUSH2 0x325
0x1bd JUMPI
---
0x1b5: JUMPDEST 
0x1b8: V101 = LT S3 V99
0x1b9: V102 = ISZERO V101
0x1ba: V103 = 0x325
0x1bd: JUMPI 0x325 V102
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S3, S2, S1, S0]

================================

Block 0x1be
[0x1be:0x1c9]
---
Predecessors: [0x1b5]
Successors: [0x1ca, 0x1cb]
---
0x1be DUP6
0x1bf DUP5
0x1c0 DUP2
0x1c1 MLOAD
0x1c2 DUP2
0x1c3 LT
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x1cb
0x1c9 JUMPI
---
0x1c1: V104 = M[V46]
0x1c3: V105 = LT S3 V104
0x1c4: V106 = ISZERO V105
0x1c5: V107 = ISZERO V106
0x1c6: V108 = 0x1cb
0x1c9: JUMPI 0x1cb V107
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, S3]
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S3, S2, S1, S0, V46, S3]

================================

Block 0x1ca
[0x1ca:0x1ca]
---
Predecessors: [0x1be]
Successors: []
---
0x1ca INVALID
---
0x1ca: INVALID 
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S5, S4, S3, S2, V46, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S5, S4, S3, S2, V46, S0]

================================

Block 0x1cb
[0x1cb:0x2ed]
---
Predecessors: [0x1be]
Successors: [0x2ee, 0x2f2]
---
0x1cb JUMPDEST
0x1cc SWAP1
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP1
0x1d1 PUSH1 0x20
0x1d3 MUL
0x1d4 ADD
0x1d5 MLOAD
0x1d6 SWAP3
0x1d7 POP
0x1d8 DUP7
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef PUSH1 0xa0
0x1f1 DUP5
0x1f2 SWAP1
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SWAP1
0x1f7 DIV
0x1f8 MUL
0x1f9 SWAP2
0x1fa POP
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 DUP4
0x211 AND
0x212 SWAP1
0x213 POP
0x214 DUP8
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b PUSH4 0x23b872dd
0x230 CALLER
0x231 DUP4
0x232 DUP6
0x233 PUSH1 0x0
0x235 PUSH1 0x40
0x237 MLOAD
0x238 PUSH1 0x20
0x23a ADD
0x23b MSTORE
0x23c PUSH1 0x40
0x23e MLOAD
0x23f DUP5
0x240 PUSH4 0xffffffff
0x245 AND
0x246 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x264 MUL
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x4
0x269 ADD
0x26a DUP1
0x26b DUP5
0x26c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x281 AND
0x282 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x297 AND
0x298 DUP2
0x299 MSTORE
0x29a PUSH1 0x20
0x29c ADD
0x29d DUP4
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca DUP2
0x2cb MSTORE
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf DUP3
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 PUSH1 0x20
0x2d4 ADD
0x2d5 SWAP4
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da PUSH1 0x20
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 DUP4
0x2e1 SUB
0x2e2 DUP2
0x2e3 PUSH1 0x0
0x2e5 DUP8
0x2e6 DUP1
0x2e7 EXTCODESIZE
0x2e8 ISZERO
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x1cb: JUMPDEST 
0x1cd: V109 = 0x20
0x1cf: V110 = ADD 0x20 V46
0x1d1: V111 = 0x20
0x1d3: V112 = MUL 0x20 S0
0x1d4: V113 = ADD V112 V110
0x1d5: V114 = M[V113]
0x1d9: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x1ef: V117 = 0xa0
0x1f3: V118 = 0x2
0x1f5: V119 = EXP 0x2 0xa0
0x1f7: V120 = DIV V114 0x10000000000000000000000000000000000000000
0x1f8: V121 = MUL V120 V116
0x1fb: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x211: V123 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x215: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x22b: V126 = 0x23b872dd
0x230: V127 = CALLER
0x233: V128 = 0x0
0x235: V129 = 0x40
0x237: V130 = M[0x40]
0x238: V131 = 0x20
0x23a: V132 = ADD 0x20 V130
0x23b: M[V132] = 0x0
0x23c: V133 = 0x40
0x23e: V134 = M[0x40]
0x240: V135 = 0xffffffff
0x245: V136 = AND 0xffffffff 0x23b872dd
0x246: V137 = 0x100000000000000000000000000000000000000000000000000000000
0x264: V138 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x266: M[V134] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x267: V139 = 0x4
0x269: V140 = ADD 0x4 V134
0x26c: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x281: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x282: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x297: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x299: M[V140] = V144
0x29a: V145 = 0x20
0x29c: V146 = ADD 0x20 V140
0x29e: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x2b4: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2cb: M[V146] = V150
0x2cc: V151 = 0x20
0x2ce: V152 = ADD 0x20 V146
0x2d1: M[V152] = V121
0x2d2: V153 = 0x20
0x2d4: V154 = ADD 0x20 V152
0x2da: V155 = 0x20
0x2dc: V156 = 0x40
0x2de: V157 = M[0x40]
0x2e1: V158 = SUB V154 V157
0x2e3: V159 = 0x0
0x2e7: V160 = EXTCODESIZE V125
0x2e8: V161 = ISZERO V160
0x2e9: V162 = ISZERO V161
0x2ea: V163 = 0x2f2
0x2ed: JUMPI 0x2f2 V162
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S5, S4, S3, S2, V46, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, V114, V121, V123, V125, 0x23b872dd, V154, 0x20, V157, V158, V157, 0x0, V125]
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S5, V114, V121, V123, V125, 0x23b872dd, V154, 0x20, V157, V158, V157, 0x0, V125]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x1cb]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V164 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S12, V114, V121, V123, V125, 0x23b872dd, V154, 0x20, V157, V158, V157, 0x0, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S12, V114, V121, V123, V125, 0x23b872dd, V154, 0x20, V157, V158, V157, 0x0, V125]

================================

Block 0x2f2
[0x2f2:0x2fe]
---
Predecessors: [0x1cb]
Successors: [0x2ff, 0x303]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x2c6
0x2f6 GAS
0x2f7 SUB
0x2f8 CALL
0x2f9 ISZERO
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V165 = 0x2c6
0x2f6: V166 = GAS
0x2f7: V167 = SUB V166 0x2c6
0x2f8: V168 = CALL V167 V125 0x0 V157 V158 V157 0x20
0x2f9: V169 = ISZERO V168
0x2fa: V170 = ISZERO V169
0x2fb: V171 = 0x303
0x2fe: JUMPI 0x303 V170
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S12, V114, V121, V123, V125, 0x23b872dd, V154, 0x20, V157, V158, V157, 0x0, V125]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S12, V114, V121, V123, V125, 0x23b872dd, V154]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f2]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V172 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S6, V114, V121, V123, V125, 0x23b872dd, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S6, V114, V121, V123, V125, 0x23b872dd, V154]

================================

Block 0x303
[0x303:0x313]
---
Predecessors: [0x2f2]
Successors: [0x314, 0x318]
---
0x303 JUMPDEST
0x304 POP
0x305 POP
0x306 POP
0x307 PUSH1 0x40
0x309 MLOAD
0x30a DUP1
0x30b MLOAD
0x30c SWAP1
0x30d POP
0x30e ISZERO
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x303: JUMPDEST 
0x307: V173 = 0x40
0x309: V174 = M[0x40]
0x30b: V175 = M[V174]
0x30e: V176 = ISZERO V175
0x30f: V177 = ISZERO V176
0x310: V178 = 0x318
0x313: JUMPI 0x318 V177
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S6, V114, V121, V123, V125, 0x23b872dd, V154]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S6, V114, V121, V123]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x303]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V179 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S3, V114, V121, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe9, V26, V31, V46, V99, S3, V114, V121, V123]

================================

Block 0x318
[0x318:0x324]
---
Predecessors: [0x303]
Successors: [0x1b5]
---
0x318 JUMPDEST
0x319 DUP4
0x31a DUP1
0x31b PUSH1 0x1
0x31d ADD
0x31e SWAP5
0x31f POP
0x320 POP
0x321 PUSH2 0x1b5
0x324 JUMP
---
0x318: JUMPDEST 
0x31b: V180 = 0x1
0x31d: V181 = ADD 0x1 S3
0x321: V182 = 0x1b5
0x324: JUMP 0x1b5
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S3, V114, V121, V123]
Stack pops: 4
Stack additions: [V181, S2, S1, S0]
Exit stack: [V7, 0xe9, V26, V31, V46, V99, V181, V114, V121, V123]

================================

Block 0x325
[0x325:0x32e]
---
Predecessors: [0x1b5]
Successors: [0xe9]
---
0x325 JUMPDEST
0x326 POP
0x327 POP
0x328 POP
0x329 POP
0x32a POP
0x32b POP
0x32c POP
0x32d POP
0x32e JUMP
---
0x325: JUMPDEST 
0x32e: JUMP 0xe9
---
Entry stack: [V7, 0xe9, V26, V31, V46, V99, S3, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V7]

================================

Block 0x32f
[0x32f:0x374]
---
Predecessors: [0xf6]
Successors: [0x139]
---
0x32f JUMPDEST
0x330 PUSH1 0x0
0x332 DUP2
0x333 PUSH1 0xa0
0x335 DUP5
0x336 PUSH12 0xffffffffffffffffffffffff
0x343 AND
0x344 SWAP1
0x345 PUSH1 0x2
0x347 EXP
0x348 MUL
0x349 PUSH12 0xffffffffffffffffffffffff
0x356 AND
0x357 OR
0x358 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36d AND
0x36e SWAP1
0x36f POP
0x370 SWAP3
0x371 SWAP2
0x372 POP
0x373 POP
0x374 JUMP
---
0x32f: JUMPDEST 
0x330: V183 = 0x0
0x333: V184 = 0xa0
0x336: V185 = 0xffffffffffffffffffffffff
0x343: V186 = AND 0xffffffffffffffffffffffff V63
0x345: V187 = 0x2
0x347: V188 = EXP 0x2 0xa0
0x348: V189 = MUL 0x10000000000000000000000000000000000000000 V186
0x349: V190 = 0xffffffffffffffffffffffff
0x356: V191 = AND 0xffffffffffffffffffffffff V189
0x357: V192 = OR V191 V68
0x358: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x374: JUMP 0x139
---
Entry stack: [V7, 0x139, V63, V68]
Stack pops: 3
Stack additions: [V194]
Exit stack: [V7, V194]

================================

Block 0x375
[0x375:0x399]
---
Predecessors: [0x15a]
Successors: [0x162]
---
0x375 JUMPDEST
0x376 PUSH1 0x0
0x378 DUP1
0x379 SWAP1
0x37a SLOAD
0x37b SWAP1
0x37c PUSH2 0x100
0x37f EXP
0x380 SWAP1
0x381 DIV
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 DUP2
0x399 JUMP
---
0x375: JUMPDEST 
0x376: V195 = 0x0
0x37a: V196 = S[0x0]
0x37c: V197 = 0x100
0x37f: V198 = EXP 0x100 0x0
0x381: V199 = DIV V196 0x1
0x382: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x399: JUMP 0x162
---
Entry stack: [V7, 0x162]
Stack pops: 1
Stack additions: [S0, V201]
Exit stack: [V7, 0x162, V201]

================================

Block 0x39a
[0x39a:0x3d5]
---
Predecessors: []
Successors: []
---
0x39a STOP
0x39b LOG1
0x39c PUSH6 0x627a7a723058
0x3a3 SHA3
0x3a4 CALLDATASIZE
0x3a5 SWAP8
0x3a6 SWAP6
0x3a7 PUSH16 0x30215e48e93458aebf2a88489f0b555f
0x3b8 MISSING 0xb4
0x3b9 PUSH28 0xa4db24cce4814e9d65a80029
---
0x39a: STOP 
0x39b: LOG S0 S1 S2
0x39c: V202 = 0x627a7a723058
0x3a3: V203 = SHA3 0x627a7a723058 S3
0x3a4: V204 = CALLDATASIZE
0x3a7: V205 = 0x30215e48e93458aebf2a88489f0b555f
0x3b8: MISSING 0xb4
0x3b9: V206 = 0xa4db24cce4814e9d65a80029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x30215e48e93458aebf2a88489f0b555f, S8, V203, S4, S5, S6, S7, S10, S9, V204, 0xa4db24cce4814e9d65a80029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c39da94
Entry block: 0x53
Exit block: 0x314
Body: 0x53, 0x5a, 0x5e, 0xe9, 0x1a4, 0x1b5, 0x1be, 0x1ca, 0x1cb, 0x2ee, 0x2f2, 0x2ff, 0x303, 0x314, 0x318, 0x325

Function 1:
Public function signature: 0x78a72e0d
Entry block: 0xeb
Exit block: 0x139
Body: 0xeb, 0xf2, 0xf6, 0x139, 0x32f

Function 2:
Public function signature: 0xec034bed
Entry block: 0x14f
Exit block: 0x162
Body: 0x14f, 0x156, 0x15a, 0x162, 0x375

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

