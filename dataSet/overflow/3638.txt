Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x169ea2f8
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x169ea2f8
0x3c: V13 = EQ 0x169ea2f8 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xbf]
---
0x41 DUP1
0x42 PUSH4 0xb9dda7b8
0x47 EQ
0x48 PUSH2 0xbf
0x4b JUMPI
---
0x42: V15 = 0xb9dda7b8
0x47: V16 = EQ 0xb9dda7b8 V11
0x48: V17 = 0xbf
0x4b: JUMPI 0xbf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x114]
---
0x4c DUP1
0x4d PUSH4 0xc2944f69
0x52 EQ
0x53 PUSH2 0x114
0x56 JUMPI
---
0x4d: V18 = 0xc2944f69
0x52: V19 = EQ 0xc2944f69 V11
0x53: V20 = 0x114
0x56: JUMPI 0x114 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0xbc]
---
Predecessors: [0x5c]
Successors: [0x169]
---
0x67 JUMPDEST
0x68 PUSH2 0xbd
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 DUP3
0x76 ADD
0x77 DUP1
0x78 CALLDATALOAD
0x79 SWAP1
0x7a PUSH1 0x20
0x7c ADD
0x7d SWAP1
0x7e DUP1
0x7f DUP1
0x80 PUSH1 0x20
0x82 MUL
0x83 PUSH1 0x20
0x85 ADD
0x86 PUSH1 0x40
0x88 MLOAD
0x89 SWAP1
0x8a DUP2
0x8b ADD
0x8c PUSH1 0x40
0x8e MSTORE
0x8f DUP1
0x90 SWAP4
0x91 SWAP3
0x92 SWAP2
0x93 SWAP1
0x94 DUP2
0x95 DUP2
0x96 MSTORE
0x97 PUSH1 0x20
0x99 ADD
0x9a DUP4
0x9b DUP4
0x9c PUSH1 0x20
0x9e MUL
0x9f DUP1
0xa0 DUP3
0xa1 DUP5
0xa2 CALLDATACOPY
0xa3 DUP3
0xa4 ADD
0xa5 SWAP2
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac SWAP2
0xad SWAP1
0xae DUP1
0xaf CALLDATALOAD
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 SWAP2
0xb6 SWAP1
0xb7 POP
0xb8 POP
0xb9 PUSH2 0x169
0xbc JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0xbd
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x71: V29 = 0x20
0x73: V30 = ADD 0x20 0x4
0x76: V31 = ADD 0x4 V28
0x78: V32 = CALLDATALOAD V31
0x7a: V33 = 0x20
0x7c: V34 = ADD 0x20 V31
0x80: V35 = 0x20
0x82: V36 = MUL 0x20 V32
0x83: V37 = 0x20
0x85: V38 = ADD 0x20 V36
0x86: V39 = 0x40
0x88: V40 = M[0x40]
0x8b: V41 = ADD V40 V38
0x8c: V42 = 0x40
0x8e: M[0x40] = V41
0x96: M[V40] = V32
0x97: V43 = 0x20
0x99: V44 = ADD 0x20 V40
0x9c: V45 = 0x20
0x9e: V46 = MUL 0x20 V32
0xa2: CALLDATACOPY V44 V34 V46
0xa4: V47 = ADD V44 V46
0xaf: V48 = CALLDATALOAD 0x24
0xb1: V49 = 0x20
0xb3: V50 = ADD 0x20 0x24
0xb9: V51 = 0x169
0xbc: JUMP 0x169
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbd, V40, V48]
Exit stack: [V11, 0xbd, V40, V48]

================================

Block 0xbd
[0xbd:0xbe]
---
Predecessors: [0x339]
Successors: []
---
0xbd JUMPDEST
0xbe STOP
---
0xbd: JUMPDEST 
0xbe: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0xc5]
---
Predecessors: [0x41]
Successors: [0xc6, 0xca]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbf: JUMPDEST 
0xc0: V52 = CALLVALUE
0xc1: V53 = ISZERO V52
0xc2: V54 = 0xca
0xc5: JUMPI 0xca V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbf]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V55 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xca
[0xca:0xd1]
---
Predecessors: [0xbf]
Successors: [0x33f]
---
0xca JUMPDEST
0xcb PUSH2 0xd2
0xce PUSH2 0x33f
0xd1 JUMP
---
0xca: JUMPDEST 
0xcb: V56 = 0xd2
0xce: V57 = 0x33f
0xd1: JUMP 0x33f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd2]
Exit stack: [V11, 0xd2]

================================

Block 0xd2
[0xd2:0x113]
---
Predecessors: [0x33f]
Successors: []
---
0xd2 JUMPDEST
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 DUP3
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103 AND
0x104 DUP2
0x105 MSTORE
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP2
0x10a POP
0x10b POP
0x10c PUSH1 0x40
0x10e MLOAD
0x10f DUP1
0x110 SWAP2
0x111 SUB
0x112 SWAP1
0x113 RETURN
---
0xd2: JUMPDEST 
0xd3: V58 = 0x40
0xd5: V59 = M[0x40]
0xd8: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0xee: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x103: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x105: M[V59] = V63
0x106: V64 = 0x20
0x108: V65 = ADD 0x20 V59
0x10c: V66 = 0x40
0x10e: V67 = M[0x40]
0x111: V68 = SUB V65 V67
0x113: RETURN V67 V68
---
Entry stack: [V11, 0xd2, V196]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd2]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x4c]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V69 = CALLVALUE
0x116: V70 = ISZERO V69
0x117: V71 = 0x11f
0x11a: JUMPI 0x11f V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V72 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x114]
Successors: [0x364]
---
0x11f JUMPDEST
0x120 PUSH2 0x127
0x123 PUSH2 0x364
0x126 JUMP
---
0x11f: JUMPDEST 
0x120: V73 = 0x127
0x123: V74 = 0x364
0x126: JUMP 0x364
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V11, 0x127]

================================

Block 0x127
[0x127:0x168]
---
Predecessors: [0x364]
Successors: []
---
0x127 JUMPDEST
0x128 PUSH1 0x40
0x12a MLOAD
0x12b DUP1
0x12c DUP3
0x12d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x142 AND
0x143 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x158 AND
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP2
0x15f POP
0x160 POP
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 SWAP2
0x166 SUB
0x167 SWAP1
0x168 RETURN
---
0x127: JUMPDEST 
0x128: V75 = 0x40
0x12a: V76 = M[0x40]
0x12d: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x142: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x143: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x158: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x15a: M[V76] = V80
0x15b: V81 = 0x20
0x15d: V82 = ADD 0x20 V76
0x161: V83 = 0x40
0x163: V84 = M[0x40]
0x166: V85 = SUB V82 V84
0x168: RETURN V84 V85
---
Entry stack: [V11, 0x127, V204]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x127]

================================

Block 0x169
[0x169:0x1c3]
---
Predecessors: [0x67]
Successors: [0x1c4, 0x1c8]
---
0x169 JUMPDEST
0x16a PUSH1 0x0
0x16c DUP1
0x16d PUSH1 0x1
0x16f PUSH1 0x0
0x171 SWAP1
0x172 SLOAD
0x173 SWAP1
0x174 PUSH2 0x100
0x177 EXP
0x178 SWAP1
0x179 DIV
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f AND
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 CALLER
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd EQ
0x1be ISZERO
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x169: JUMPDEST 
0x16a: V86 = 0x0
0x16d: V87 = 0x1
0x16f: V88 = 0x0
0x172: V89 = S[0x1]
0x174: V90 = 0x100
0x177: V91 = EXP 0x100 0x0
0x179: V92 = DIV V89 0x1
0x17a: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x190: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1a6: V97 = CALLER
0x1a7: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1bd: V100 = EQ V99 V96
0x1be: V101 = ISZERO V100
0x1bf: V102 = ISZERO V101
0x1c0: V103 = 0x1c8
0x1c3: JUMPI 0x1c8 V102
---
Entry stack: [V11, 0xbd, V40, V48]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xbd, V40, V48, 0x0, 0x0]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x169]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V104 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V40, V48, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V40, V48, 0x0, 0x0]

================================

Block 0x1c8
[0x1c8:0x1cf]
---
Predecessors: [0x169]
Successors: [0x1d0]
---
0x1c8 JUMPDEST
0x1c9 DUP3
0x1ca SWAP2
0x1cb POP
0x1cc PUSH1 0x0
0x1ce SWAP1
0x1cf POP
---
0x1c8: JUMPDEST 
0x1cc: V105 = 0x0
---
Entry stack: [V11, 0xbd, V40, V48, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, 0x0]
Exit stack: [V11, 0xbd, V40, V48, V48, 0x0]

================================

Block 0x1d0
[0x1d0:0x1d9]
---
Predecessors: [0x1c8, 0x323]
Successors: [0x1da, 0x339]
---
0x1d0 JUMPDEST
0x1d1 DUP4
0x1d2 MLOAD
0x1d3 DUP2
0x1d4 LT
0x1d5 ISZERO
0x1d6 PUSH2 0x339
0x1d9 JUMPI
---
0x1d0: JUMPDEST 
0x1d2: V106 = M[V40]
0x1d4: V107 = LT S0 V106
0x1d5: V108 = ISZERO V107
0x1d6: V109 = 0x339
0x1d9: JUMPI 0x339 V108
---
Entry stack: [V11, 0xbd, V40, V48, V48, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xbd, V40, V48, V48, S0]

================================

Block 0x1da
[0x1da:0x245]
---
Predecessors: [0x1d0]
Successors: [0x246, 0x247]
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd SWAP1
0x1de SLOAD
0x1df SWAP1
0x1e0 PUSH2 0x100
0x1e3 EXP
0x1e4 SWAP1
0x1e5 DIV
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x211 AND
0x212 PUSH4 0x23b872dd
0x217 PUSH1 0x1
0x219 PUSH1 0x0
0x21b SWAP1
0x21c SLOAD
0x21d SWAP1
0x21e PUSH2 0x100
0x221 EXP
0x222 SWAP1
0x223 DIV
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a DUP7
0x23b DUP5
0x23c DUP2
0x23d MLOAD
0x23e DUP2
0x23f LT
0x240 ISZERO
0x241 ISZERO
0x242 PUSH2 0x247
0x245 JUMPI
---
0x1da: V110 = 0x0
0x1de: V111 = S[0x0]
0x1e0: V112 = 0x100
0x1e3: V113 = EXP 0x100 0x0
0x1e5: V114 = DIV V111 0x1
0x1e6: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1fc: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x211: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x212: V119 = 0x23b872dd
0x217: V120 = 0x1
0x219: V121 = 0x0
0x21c: V122 = S[0x1]
0x21e: V123 = 0x100
0x221: V124 = EXP 0x100 0x0
0x223: V125 = DIV V122 0x1
0x224: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x23d: V128 = M[V40]
0x23f: V129 = LT S0 V128
0x240: V130 = ISZERO V129
0x241: V131 = ISZERO V130
0x242: V132 = 0x247
0x245: JUMPI 0x247 V131
---
Entry stack: [V11, 0xbd, V40, V48, V48, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V118, 0x23b872dd, V127, S3, S0]
Exit stack: [V11, 0xbd, V40, V48, V48, S0, V118, 0x23b872dd, V127, V40, S0]

================================

Block 0x246
[0x246:0x246]
---
Predecessors: [0x1da]
Successors: []
---
0x246 INVALID
---
0x246: INVALID 
---
Entry stack: [V11, 0xbd, V40, V48, V48, S5, V118, 0x23b872dd, V127, V40, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V40, V48, V48, S5, V118, 0x23b872dd, V127, V40, S0]

================================

Block 0x247
[0x247:0x30d]
---
Predecessors: [0x1da]
Successors: [0x30e, 0x312]
---
0x247 JUMPDEST
0x248 SWAP1
0x249 PUSH1 0x20
0x24b ADD
0x24c SWAP1
0x24d PUSH1 0x20
0x24f MUL
0x250 ADD
0x251 MLOAD
0x252 DUP6
0x253 PUSH1 0x0
0x255 PUSH1 0x40
0x257 MLOAD
0x258 PUSH1 0x20
0x25a ADD
0x25b MSTORE
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP5
0x260 PUSH4 0xffffffff
0x265 AND
0x266 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x284 MUL
0x285 DUP2
0x286 MSTORE
0x287 PUSH1 0x4
0x289 ADD
0x28a DUP1
0x28b DUP5
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 AND
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd DUP4
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 AND
0x2ea DUP2
0x2eb MSTORE
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef DUP3
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x20
0x2f4 ADD
0x2f5 SWAP4
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa PUSH1 0x20
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff DUP1
0x300 DUP4
0x301 SUB
0x302 DUP2
0x303 PUSH1 0x0
0x305 DUP8
0x306 DUP1
0x307 EXTCODESIZE
0x308 ISZERO
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x247: JUMPDEST 
0x249: V133 = 0x20
0x24b: V134 = ADD 0x20 V40
0x24d: V135 = 0x20
0x24f: V136 = MUL 0x20 S0
0x250: V137 = ADD V136 V134
0x251: V138 = M[V137]
0x253: V139 = 0x0
0x255: V140 = 0x40
0x257: V141 = M[0x40]
0x258: V142 = 0x20
0x25a: V143 = ADD 0x20 V141
0x25b: M[V143] = 0x0
0x25c: V144 = 0x40
0x25e: V145 = M[0x40]
0x260: V146 = 0xffffffff
0x265: V147 = AND 0xffffffff 0x23b872dd
0x266: V148 = 0x100000000000000000000000000000000000000000000000000000000
0x284: V149 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x286: M[V145] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x287: V150 = 0x4
0x289: V151 = ADD 0x4 V145
0x28c: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x2a2: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2b9: M[V151] = V155
0x2ba: V156 = 0x20
0x2bc: V157 = ADD 0x20 V151
0x2be: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x2d4: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2eb: M[V157] = V161
0x2ec: V162 = 0x20
0x2ee: V163 = ADD 0x20 V157
0x2f1: M[V163] = V48
0x2f2: V164 = 0x20
0x2f4: V165 = ADD 0x20 V163
0x2fa: V166 = 0x20
0x2fc: V167 = 0x40
0x2fe: V168 = M[0x40]
0x301: V169 = SUB V165 V168
0x303: V170 = 0x0
0x307: V171 = EXTCODESIZE V118
0x308: V172 = ISZERO V171
0x309: V173 = ISZERO V172
0x30a: V174 = 0x312
0x30d: JUMPI 0x312 V173
---
Entry stack: [V11, 0xbd, V40, V48, V48, S5, V118, 0x23b872dd, V127, V40, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V165, 0x20, V168, V169, V168, 0x0, S4]
Exit stack: [V11, 0xbd, V40, V48, V48, S5, V118, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V118]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x247]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V175 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V40, V48, V48, S9, V118, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V40, V48, V48, S9, V118, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V118]

================================

Block 0x312
[0x312:0x31e]
---
Predecessors: [0x247]
Successors: [0x31f, 0x323]
---
0x312 JUMPDEST
0x313 PUSH2 0x2c6
0x316 GAS
0x317 SUB
0x318 CALL
0x319 ISZERO
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x312: JUMPDEST 
0x313: V176 = 0x2c6
0x316: V177 = GAS
0x317: V178 = SUB V177 0x2c6
0x318: V179 = CALL V178 V118 0x0 V168 V169 V168 0x20
0x319: V180 = ISZERO V179
0x31a: V181 = ISZERO V180
0x31b: V182 = 0x323
0x31e: JUMPI 0x323 V181
---
Entry stack: [V11, 0xbd, V40, V48, V48, S9, V118, 0x23b872dd, V165, 0x20, V168, V169, V168, 0x0, V118]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xbd, V40, V48, V48, S9, V118, 0x23b872dd, V165]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x312]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V183 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V40, V48, V48, S3, V118, 0x23b872dd, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V40, V48, V48, S3, V118, 0x23b872dd, V165]

================================

Block 0x323
[0x323:0x338]
---
Predecessors: [0x312]
Successors: [0x1d0]
---
0x323 JUMPDEST
0x324 POP
0x325 POP
0x326 POP
0x327 PUSH1 0x40
0x329 MLOAD
0x32a DUP1
0x32b MLOAD
0x32c SWAP1
0x32d POP
0x32e POP
0x32f PUSH1 0x1
0x331 DUP2
0x332 ADD
0x333 SWAP1
0x334 POP
0x335 PUSH2 0x1d0
0x338 JUMP
---
0x323: JUMPDEST 
0x327: V184 = 0x40
0x329: V185 = M[0x40]
0x32b: V186 = M[V185]
0x32f: V187 = 0x1
0x332: V188 = ADD S3 0x1
0x335: V189 = 0x1d0
0x338: JUMP 0x1d0
---
Entry stack: [V11, 0xbd, V40, V48, V48, S3, V118, 0x23b872dd, V165]
Stack pops: 4
Stack additions: [V188]
Exit stack: [V11, 0xbd, V40, V48, V48, V188]

================================

Block 0x339
[0x339:0x33e]
---
Predecessors: [0x1d0]
Successors: [0xbd]
---
0x339 JUMPDEST
0x33a POP
0x33b POP
0x33c POP
0x33d POP
0x33e JUMP
---
0x339: JUMPDEST 
0x33e: JUMP 0xbd
---
Entry stack: [V11, 0xbd, V40, V48, V48, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x33f
[0x33f:0x363]
---
Predecessors: [0xca]
Successors: [0xd2]
---
0x33f JUMPDEST
0x340 PUSH1 0x0
0x342 DUP1
0x343 SWAP1
0x344 SLOAD
0x345 SWAP1
0x346 PUSH2 0x100
0x349 EXP
0x34a SWAP1
0x34b DIV
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 DUP2
0x363 JUMP
---
0x33f: JUMPDEST 
0x340: V190 = 0x0
0x344: V191 = S[0x0]
0x346: V192 = 0x100
0x349: V193 = EXP 0x100 0x0
0x34b: V194 = DIV V191 0x1
0x34c: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x363: JUMP 0xd2
---
Entry stack: [V11, 0xd2]
Stack pops: 1
Stack additions: [S0, V196]
Exit stack: [V11, 0xd2, V196]

================================

Block 0x364
[0x364:0x389]
---
Predecessors: [0x11f]
Successors: [0x127]
---
0x364 JUMPDEST
0x365 PUSH1 0x1
0x367 PUSH1 0x0
0x369 SWAP1
0x36a SLOAD
0x36b SWAP1
0x36c PUSH2 0x100
0x36f EXP
0x370 SWAP1
0x371 DIV
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 DUP2
0x389 JUMP
---
0x364: JUMPDEST 
0x365: V197 = 0x1
0x367: V198 = 0x0
0x36a: V199 = S[0x1]
0x36c: V200 = 0x100
0x36f: V201 = EXP 0x100 0x0
0x371: V202 = DIV V199 0x1
0x372: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x389: JUMP 0x127
---
Entry stack: [V11, 0x127]
Stack pops: 1
Stack additions: [S0, V204]
Exit stack: [V11, 0x127, V204]

================================

Block 0x38a
[0x38a:0x3c1]
---
Predecessors: []
Successors: [0x3c2]
---
0x38a STOP
0x38b LOG1
0x38c PUSH6 0x627a7a723058
0x393 SHA3
0x394 MISSING 0xc1
0x395 PUSH15 0x66e01912603b30240146a310db4db
0x3a5 BYTE
0x3a6 MULMOD
0x3a7 DUP16
0x3a8 PUSH3 0xc99330
0x3ac PUSH6 0xf0ea16fdb2a1
0x3b3 CALLDATACOPY
0x3b4 STOP
0x3b5 MISSING 0x29
0x3b6 PUSH1 0x60
0x3b8 PUSH1 0x40
0x3ba MSTORE
0x3bb PUSH1 0x4
0x3bd CALLDATASIZE
0x3be LT
0x3bf PUSH1 0x3f
0x3c1 JUMPI
---
0x38a: STOP 
0x38b: LOG S0 S1 S2
0x38c: V205 = 0x627a7a723058
0x393: V206 = SHA3 0x627a7a723058 S3
0x394: MISSING 0xc1
0x395: V207 = 0x66e01912603b30240146a310db4db
0x3a5: V208 = BYTE 0x66e01912603b30240146a310db4db S0
0x3a6: V209 = MULMOD V208 S1 S2
0x3a8: V210 = 0xc99330
0x3ac: V211 = 0xf0ea16fdb2a1
0x3b3: CALLDATACOPY 0xf0ea16fdb2a1 0xc99330 S17
0x3b4: STOP 
0x3b5: MISSING 0x29
0x3b6: V212 = 0x60
0x3b8: V213 = 0x40
0x3ba: M[0x40] = 0x60
0x3bb: V214 = 0x4
0x3bd: V215 = CALLDATASIZE
0x3be: V216 = LT V215 0x4
0x3bf: V217 = 0x3f
0x3c1: THROWI V216
---
Entry stack: []
Stack pops: 0
Stack additions: [V206, V209, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17]
Exit stack: []

================================

Block 0x3c2
[0x3c2:0x3f4]
---
Predecessors: [0x38a]
Successors: [0x3f5]
---
0x3c2 PUSH1 0x0
0x3c4 CALLDATALOAD
0x3c5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3e3 SWAP1
0x3e4 DIV
0x3e5 PUSH4 0xffffffff
0x3ea AND
0x3eb DUP1
0x3ec PUSH4 0x23b872dd
0x3f1 EQ
0x3f2 PUSH1 0x44
0x3f4 JUMPI
---
0x3c2: V218 = 0x0
0x3c4: V219 = CALLDATALOAD 0x0
0x3c5: V220 = 0x100000000000000000000000000000000000000000000000000000000
0x3e4: V221 = DIV V219 0x100000000000000000000000000000000000000000000000000000000
0x3e5: V222 = 0xffffffff
0x3ea: V223 = AND 0xffffffff V221
0x3ec: V224 = 0x23b872dd
0x3f1: V225 = EQ 0x23b872dd V223
0x3f2: V226 = 0x44
0x3f4: THROWI V225
---
Entry stack: []
Stack pops: 0
Stack additions: [V223]
Exit stack: [V223]

================================

Block 0x3f5
[0x3f5:0x3ff]
---
Predecessors: [0x3c2]
Successors: [0x400]
---
0x3f5 JUMPDEST
0x3f6 PUSH1 0x0
0x3f8 DUP1
0x3f9 REVERT
0x3fa JUMPDEST
0x3fb CALLVALUE
0x3fc ISZERO
0x3fd PUSH1 0x4e
0x3ff JUMPI
---
0x3f5: JUMPDEST 
0x3f6: V227 = 0x0
0x3f9: REVERT 0x0 0x0
0x3fa: JUMPDEST 
0x3fb: V228 = CALLVALUE
0x3fc: V229 = ISZERO V228
0x3fd: V230 = 0x4e
0x3ff: THROWI V229
---
Entry stack: [V223]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x400
[0x400:0x49a]
---
Predecessors: [0x3f5]
Successors: [0x49b]
---
0x400 PUSH1 0x0
0x402 DUP1
0x403 REVERT
0x404 JUMPDEST
0x405 PUSH1 0xa0
0x407 PUSH1 0x4
0x409 DUP1
0x40a DUP1
0x40b CALLDATALOAD
0x40c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x421 AND
0x422 SWAP1
0x423 PUSH1 0x20
0x425 ADD
0x426 SWAP1
0x427 SWAP2
0x428 SWAP1
0x429 DUP1
0x42a CALLDATALOAD
0x42b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x440 AND
0x441 SWAP1
0x442 PUSH1 0x20
0x444 ADD
0x445 SWAP1
0x446 SWAP2
0x447 SWAP1
0x448 DUP1
0x449 CALLDATALOAD
0x44a SWAP1
0x44b PUSH1 0x20
0x44d ADD
0x44e SWAP1
0x44f SWAP2
0x450 SWAP1
0x451 POP
0x452 POP
0x453 PUSH1 0xba
0x455 JUMP
0x456 JUMPDEST
0x457 PUSH1 0x40
0x459 MLOAD
0x45a DUP1
0x45b DUP3
0x45c ISZERO
0x45d ISZERO
0x45e ISZERO
0x45f ISZERO
0x460 DUP2
0x461 MSTORE
0x462 PUSH1 0x20
0x464 ADD
0x465 SWAP2
0x466 POP
0x467 POP
0x468 PUSH1 0x40
0x46a MLOAD
0x46b DUP1
0x46c SWAP2
0x46d SUB
0x46e SWAP1
0x46f RETURN
0x470 JUMPDEST
0x471 PUSH1 0x0
0x473 SWAP4
0x474 SWAP3
0x475 POP
0x476 POP
0x477 POP
0x478 JUMP
0x479 STOP
0x47a LOG1
0x47b PUSH6 0x627a7a723058
0x482 SHA3
0x483 MISSING 0x5c
0x484 DUP5
0x485 PUSH18 0x2926ddfb861a48f4377811c37c99d995377e
0x498 NUMBER
0x499 SWAP1
0x49a JUMPI
---
0x400: V231 = 0x0
0x403: REVERT 0x0 0x0
0x404: JUMPDEST 
0x405: V232 = 0xa0
0x407: V233 = 0x4
0x40b: V234 = CALLDATALOAD 0x4
0x40c: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x421: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x423: V237 = 0x20
0x425: V238 = ADD 0x20 0x4
0x42a: V239 = CALLDATALOAD 0x24
0x42b: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x440: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x442: V242 = 0x20
0x444: V243 = ADD 0x20 0x24
0x449: V244 = CALLDATALOAD 0x44
0x44b: V245 = 0x20
0x44d: V246 = ADD 0x20 0x44
0x453: V247 = 0xba
0x455: THROW 
0x456: JUMPDEST 
0x457: V248 = 0x40
0x459: V249 = M[0x40]
0x45c: V250 = ISZERO S0
0x45d: V251 = ISZERO V250
0x45e: V252 = ISZERO V251
0x45f: V253 = ISZERO V252
0x461: M[V249] = V253
0x462: V254 = 0x20
0x464: V255 = ADD 0x20 V249
0x468: V256 = 0x40
0x46a: V257 = M[0x40]
0x46d: V258 = SUB V255 V257
0x46f: RETURN V257 V258
0x470: JUMPDEST 
0x471: V259 = 0x0
0x478: JUMP S3
0x479: STOP 
0x47a: LOG S0 S1 S2
0x47b: V260 = 0x627a7a723058
0x482: V261 = SHA3 0x627a7a723058 S3
0x483: MISSING 0x5c
0x485: V262 = 0x2926ddfb861a48f4377811c37c99d995377e
0x498: V263 = NUMBER
0x49a: THROWI V263
---
Entry stack: []
Stack pops: 0
Stack additions: [V244, V241, V236, 0xa0, 0x0, V261, S4, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x49b
[0x49b:0x4b1]
---
Predecessors: [0x400]
Successors: []
---
0x49b MISSING 0xcf
0x49c SLOAD
0x49d PUSH20 0x12318dd70b0029
---
0x49b: MISSING 0xcf
0x49c: V264 = S[S0]
0x49d: V265 = 0x12318dd70b0029
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x12318dd70b0029, V264]
Exit stack: []

================================

Function 0:
Public function signature: 0x169ea2f8
Entry block: 0x5c
Exit block: 0x31f
Body: 0x5c, 0x63, 0x67, 0xbd, 0x169, 0x1c4, 0x1c8, 0x1d0, 0x1da, 0x246, 0x247, 0x30e, 0x312, 0x31f, 0x323, 0x339

Function 1:
Public function signature: 0xb9dda7b8
Entry block: 0xbf
Exit block: 0xd2
Body: 0xbf, 0xc6, 0xca, 0xd2, 0x33f

Function 2:
Public function signature: 0xc2944f69
Entry block: 0x114
Exit block: 0x127
Body: 0x114, 0x11b, 0x11f, 0x127, 0x364

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

