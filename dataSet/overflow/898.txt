Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xb3]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xb3
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xb3
0x3e: JUMPI 0xb3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x142]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x142
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x142
0x49: JUMPI 0x142 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x19c]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x19c
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x19c
0x54: JUMPI 0x19c V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1c5]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1c5
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1c5
0x5f: JUMPI 0x1c5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x23e]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x23e
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x23e
0x6a: JUMPI 0x23e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x26d]
---
0x6b DUP1
0x6c PUSH4 0x70a08231
0x71 EQ
0x72 PUSH2 0x26d
0x75 JUMPI
---
0x6c: V26 = 0x70a08231
0x71: V27 = EQ 0x70a08231 V10
0x72: V28 = 0x26d
0x75: JUMPI 0x26d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2ba]
---
0x76 DUP1
0x77 PUSH4 0x95d89b41
0x7c EQ
0x7d PUSH2 0x2ba
0x80 JUMPI
---
0x77: V29 = 0x95d89b41
0x7c: V30 = EQ 0x95d89b41 V10
0x7d: V31 = 0x2ba
0x80: JUMPI 0x2ba V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x349]
---
0x81 DUP1
0x82 PUSH4 0xa9059cbb
0x87 EQ
0x88 PUSH2 0x349
0x8b JUMPI
---
0x82: V32 = 0xa9059cbb
0x87: V33 = EQ 0xa9059cbb V10
0x88: V34 = 0x349
0x8b: JUMPI 0x349 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x3a3]
---
0x8c DUP1
0x8d PUSH4 0xdd62ed3e
0x92 EQ
0x93 PUSH2 0x3a3
0x96 JUMPI
---
0x8d: V35 = 0xdd62ed3e
0x92: V36 = EQ 0xdd62ed3e V10
0x93: V37 = 0x3a3
0x96: JUMPI 0x3a3 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9d]
---
Predecessors: [0x0, 0x8c]
Successors: [0x9e, 0xa2]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x97: JUMPDEST 
0x98: V38 = CALLVALUE
0x99: V39 = ISZERO V38
0x9a: V40 = 0xa2
0x9d: JUMPI 0xa2 V39
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x97]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V41 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xa2]
---
Predecessors: [0x97]
Successors: [0xa3]
---
0xa2 JUMPDEST
---
0xa2: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xab]
---
Predecessors: [0xa2]
Successors: [0xac, 0xb0]
---
0xa3 JUMPDEST
0xa4 PUSH1 0x0
0xa6 ISZERO
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa3: JUMPDEST 
0xa4: V42 = 0x0
0xa6: V43 = ISZERO 0x0
0xa7: V44 = ISZERO 0x1
0xa8: V45 = 0xb0
0xab: JUMPI 0xb0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa3]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V46 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb0
[0xb0:0xb0]
---
Predecessors: [0xa3]
Successors: [0xb1]
---
0xb0 JUMPDEST
---
0xb0: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0xb0]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0xb]
Successors: [0xba, 0xbe]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb4: V47 = CALLVALUE
0xb5: V48 = ISZERO V47
0xb6: V49 = 0xbe
0xb9: JUMPI 0xbe V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb3]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V50 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0xb3]
Successors: [0x40f]
---
0xbe JUMPDEST
0xbf PUSH2 0xc6
0xc2 PUSH2 0x40f
0xc5 JUMP
---
0xbe: JUMPDEST 
0xbf: V51 = 0xc6
0xc2: V52 = 0x40f
0xc5: JUMP 0x40f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0xc6
[0xc6:0xea]
---
Predecessors: [0x4a5]
Successors: [0xeb]
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb DUP1
0xcc PUSH1 0x20
0xce ADD
0xcf DUP3
0xd0 DUP2
0xd1 SUB
0xd2 DUP3
0xd3 MSTORE
0xd4 DUP4
0xd5 DUP2
0xd6 DUP2
0xd7 MLOAD
0xd8 DUP2
0xd9 MSTORE
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP2
0xde POP
0xdf DUP1
0xe0 MLOAD
0xe1 SWAP1
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 SWAP1
0xe6 DUP1
0xe7 DUP4
0xe8 DUP4
0xe9 PUSH1 0x0
---
0xc6: JUMPDEST 
0xc7: V53 = 0x40
0xc9: V54 = M[0x40]
0xcc: V55 = 0x20
0xce: V56 = ADD 0x20 V54
0xd1: V57 = SUB V56 V54
0xd3: M[V54] = V57
0xd7: V58 = M[V317]
0xd9: M[V56] = V58
0xda: V59 = 0x20
0xdc: V60 = ADD 0x20 V56
0xe0: V61 = M[V317]
0xe2: V62 = 0x20
0xe4: V63 = ADD 0x20 V317
0xe9: V64 = 0x0
---
Entry stack: [V10, 0xc6, V317]
Stack pops: 1
Stack additions: [S0, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]
Exit stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]

================================

Block 0xeb
[0xeb:0xf3]
---
Predecessors: [0xc6, 0xfc]
Successors: [0xf4, 0x107]
---
0xeb JUMPDEST
0xec DUP4
0xed DUP2
0xee LT
0xef ISZERO
0xf0 PUSH2 0x107
0xf3 JUMPI
---
0xeb: JUMPDEST 
0xee: V65 = LT S0 V61
0xef: V66 = ISZERO V65
0xf0: V67 = 0x107
0xf3: JUMPI 0x107 V66
---
Entry stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, S0]

================================

Block 0xf4
[0xf4:0xfb]
---
Predecessors: [0xeb]
Successors: [0xfc]
---
0xf4 DUP1
0xf5 DUP3
0xf6 ADD
0xf7 MLOAD
0xf8 DUP2
0xf9 DUP5
0xfa ADD
0xfb MSTORE
---
0xf6: V68 = ADD V63 S0
0xf7: V69 = M[V68]
0xfa: V70 = ADD V60 S0
0xfb: M[V70] = V69
---
Entry stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, S0]

================================

Block 0xfc
[0xfc:0x106]
---
Predecessors: [0xf4]
Successors: [0xeb]
---
0xfc JUMPDEST
0xfd PUSH1 0x20
0xff DUP2
0x100 ADD
0x101 SWAP1
0x102 POP
0x103 PUSH2 0xeb
0x106 JUMP
---
0xfc: JUMPDEST 
0xfd: V71 = 0x20
0x100: V72 = ADD S0 0x20
0x103: V73 = 0xeb
0x106: JUMP 0xeb
---
Entry stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, S0]
Stack pops: 1
Stack additions: [V72]
Exit stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, V72]

================================

Block 0x107
[0x107:0x11a]
---
Predecessors: [0xeb]
Successors: [0x11b, 0x134]
---
0x107 JUMPDEST
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c SWAP1
0x10d POP
0x10e SWAP1
0x10f DUP2
0x110 ADD
0x111 SWAP1
0x112 PUSH1 0x1f
0x114 AND
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x134
0x11a JUMPI
---
0x107: JUMPDEST 
0x110: V74 = ADD V61 V60
0x112: V75 = 0x1f
0x114: V76 = AND 0x1f V61
0x116: V77 = ISZERO V76
0x117: V78 = 0x134
0x11a: JUMPI 0x134 V77
---
Entry stack: [V10, 0xc6, V317, V54, V54, V60, V63, V61, V61, V60, V63, S0]
Stack pops: 7
Stack additions: [V74, V76]
Exit stack: [V10, 0xc6, V317, V54, V54, V74, V76]

================================

Block 0x11b
[0x11b:0x133]
---
Predecessors: [0x107]
Successors: [0x134]
---
0x11b DUP1
0x11c DUP3
0x11d SUB
0x11e DUP1
0x11f MLOAD
0x120 PUSH1 0x1
0x122 DUP4
0x123 PUSH1 0x20
0x125 SUB
0x126 PUSH2 0x100
0x129 EXP
0x12a SUB
0x12b NOT
0x12c AND
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP2
0x133 POP
---
0x11d: V79 = SUB V74 V76
0x11f: V80 = M[V79]
0x120: V81 = 0x1
0x123: V82 = 0x20
0x125: V83 = SUB 0x20 V76
0x126: V84 = 0x100
0x129: V85 = EXP 0x100 V83
0x12a: V86 = SUB V85 0x1
0x12b: V87 = NOT V86
0x12c: V88 = AND V87 V80
0x12e: M[V79] = V88
0x12f: V89 = 0x20
0x131: V90 = ADD 0x20 V79
---
Entry stack: [V10, 0xc6, V317, V54, V54, V74, V76]
Stack pops: 2
Stack additions: [V90, S0]
Exit stack: [V10, 0xc6, V317, V54, V54, V90, V76]

================================

Block 0x134
[0x134:0x141]
---
Predecessors: [0x107, 0x11b]
Successors: []
---
0x134 JUMPDEST
0x135 POP
0x136 SWAP3
0x137 POP
0x138 POP
0x139 POP
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e SWAP2
0x13f SUB
0x140 SWAP1
0x141 RETURN
---
0x134: JUMPDEST 
0x13a: V91 = 0x40
0x13c: V92 = M[0x40]
0x13f: V93 = SUB S1 V92
0x141: RETURN V92 V93
---
Entry stack: [V10, 0xc6, V317, V54, V54, S1, V76]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xc6]

================================

Block 0x142
[0x142:0x148]
---
Predecessors: [0x3f]
Successors: [0x149, 0x14d]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x142: JUMPDEST 
0x143: V94 = CALLVALUE
0x144: V95 = ISZERO V94
0x145: V96 = 0x14d
0x148: JUMPI 0x14d V95
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x142]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V97 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14d
[0x14d:0x181]
---
Predecessors: [0x142]
Successors: [0x4ad]
---
0x14d JUMPDEST
0x14e PUSH2 0x182
0x151 PUSH1 0x4
0x153 DUP1
0x154 DUP1
0x155 CALLDATALOAD
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c SWAP1
0x16d PUSH1 0x20
0x16f ADD
0x170 SWAP1
0x171 SWAP2
0x172 SWAP1
0x173 DUP1
0x174 CALLDATALOAD
0x175 SWAP1
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP1
0x17a SWAP2
0x17b SWAP1
0x17c POP
0x17d POP
0x17e PUSH2 0x4ad
0x181 JUMP
---
0x14d: JUMPDEST 
0x14e: V98 = 0x182
0x151: V99 = 0x4
0x155: V100 = CALLDATALOAD 0x4
0x156: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x16d: V103 = 0x20
0x16f: V104 = ADD 0x20 0x4
0x174: V105 = CALLDATALOAD 0x24
0x176: V106 = 0x20
0x178: V107 = ADD 0x20 0x24
0x17e: V108 = 0x4ad
0x181: JUMP 0x4ad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x182, V102, V105]
Exit stack: [V10, 0x182, V102, V105]

================================

Block 0x182
[0x182:0x19b]
---
Predecessors: [0x59a]
Successors: []
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 MLOAD
0x186 DUP1
0x187 DUP3
0x188 ISZERO
0x189 ISZERO
0x18a ISZERO
0x18b ISZERO
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP2
0x192 POP
0x193 POP
0x194 PUSH1 0x40
0x196 MLOAD
0x197 DUP1
0x198 SWAP2
0x199 SUB
0x19a SWAP1
0x19b RETURN
---
0x182: JUMPDEST 
0x183: V109 = 0x40
0x185: V110 = M[0x40]
0x188: V111 = ISZERO 0x1
0x189: V112 = ISZERO 0x0
0x18a: V113 = ISZERO 0x1
0x18b: V114 = ISZERO 0x0
0x18d: M[V110] = 0x1
0x18e: V115 = 0x20
0x190: V116 = ADD 0x20 V110
0x194: V117 = 0x40
0x196: V118 = M[0x40]
0x199: V119 = SUB V116 V118
0x19b: RETURN V118 V119
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x4a]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V120 = CALLVALUE
0x19e: V121 = ISZERO V120
0x19f: V122 = 0x1a7
0x1a2: JUMPI 0x1a7 V121
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V123 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a7
[0x1a7:0x1ae]
---
Predecessors: [0x19c]
Successors: [0x5a0]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x1af
0x1ab PUSH2 0x5a0
0x1ae JUMP
---
0x1a7: JUMPDEST 
0x1a8: V124 = 0x1af
0x1ab: V125 = 0x5a0
0x1ae: JUMP 0x5a0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1af]
Exit stack: [V10, 0x1af]

================================

Block 0x1af
[0x1af:0x1c4]
---
Predecessors: [0x5a0]
Successors: []
---
0x1af JUMPDEST
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 DUP3
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba SWAP2
0x1bb POP
0x1bc POP
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 DUP1
0x1c1 SWAP2
0x1c2 SUB
0x1c3 SWAP1
0x1c4 RETURN
---
0x1af: JUMPDEST 
0x1b0: V126 = 0x40
0x1b2: V127 = M[0x40]
0x1b6: M[V127] = V401
0x1b7: V128 = 0x20
0x1b9: V129 = ADD 0x20 V127
0x1bd: V130 = 0x40
0x1bf: V131 = M[0x40]
0x1c2: V132 = SUB V129 V131
0x1c4: RETURN V131 V132
---
Entry stack: [V10, 0x1af, V401]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1af]

================================

Block 0x1c5
[0x1c5:0x1cb]
---
Predecessors: [0x55]
Successors: [0x1cc, 0x1d0]
---
0x1c5 JUMPDEST
0x1c6 CALLVALUE
0x1c7 ISZERO
0x1c8 PUSH2 0x1d0
0x1cb JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V133 = CALLVALUE
0x1c7: V134 = ISZERO V133
0x1c8: V135 = 0x1d0
0x1cb: JUMPI 0x1d0 V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cc
[0x1cc:0x1cf]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cc PUSH1 0x0
0x1ce DUP1
0x1cf REVERT
---
0x1cc: V136 = 0x0
0x1cf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d0
[0x1d0:0x223]
---
Predecessors: [0x1c5]
Successors: [0x5a6]
---
0x1d0 JUMPDEST
0x1d1 PUSH2 0x224
0x1d4 PUSH1 0x4
0x1d6 DUP1
0x1d7 DUP1
0x1d8 CALLDATALOAD
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef SWAP1
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP1
0x1f4 SWAP2
0x1f5 SWAP1
0x1f6 DUP1
0x1f7 CALLDATALOAD
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e SWAP1
0x20f PUSH1 0x20
0x211 ADD
0x212 SWAP1
0x213 SWAP2
0x214 SWAP1
0x215 DUP1
0x216 CALLDATALOAD
0x217 SWAP1
0x218 PUSH1 0x20
0x21a ADD
0x21b SWAP1
0x21c SWAP2
0x21d SWAP1
0x21e POP
0x21f POP
0x220 PUSH2 0x5a6
0x223 JUMP
---
0x1d0: JUMPDEST 
0x1d1: V137 = 0x224
0x1d4: V138 = 0x4
0x1d8: V139 = CALLDATALOAD 0x4
0x1d9: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1f0: V142 = 0x20
0x1f2: V143 = ADD 0x20 0x4
0x1f7: V144 = CALLDATALOAD 0x24
0x1f8: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x20f: V147 = 0x20
0x211: V148 = ADD 0x20 0x24
0x216: V149 = CALLDATALOAD 0x44
0x218: V150 = 0x20
0x21a: V151 = ADD 0x20 0x44
0x220: V152 = 0x5a6
0x223: JUMP 0x5a6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x224, V141, V146, V149]
Exit stack: [V10, 0x224, V141, V146, V149]

================================

Block 0x224
[0x224:0x23d]
---
Predecessors: [0x820]
Successors: []
---
0x224 JUMPDEST
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP1
0x229 DUP3
0x22a ISZERO
0x22b ISZERO
0x22c ISZERO
0x22d ISZERO
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 SWAP2
0x234 POP
0x235 POP
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a SWAP2
0x23b SUB
0x23c SWAP1
0x23d RETURN
---
0x224: JUMPDEST 
0x225: V153 = 0x40
0x227: V154 = M[0x40]
0x22a: V155 = ISZERO {0x0, 0x1}
0x22b: V156 = ISZERO V155
0x22c: V157 = ISZERO V156
0x22d: V158 = ISZERO V157
0x22f: M[V154] = V158
0x230: V159 = 0x20
0x232: V160 = ADD 0x20 V154
0x236: V161 = 0x40
0x238: V162 = M[0x40]
0x23b: V163 = SUB V160 V162
0x23d: RETURN V162 V163
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x23e
[0x23e:0x244]
---
Predecessors: [0x60]
Successors: [0x245, 0x249]
---
0x23e JUMPDEST
0x23f CALLVALUE
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x23e: JUMPDEST 
0x23f: V164 = CALLVALUE
0x240: V165 = ISZERO V164
0x241: V166 = 0x249
0x244: JUMPI 0x249 V165
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x23e]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V167 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x249
[0x249:0x250]
---
Predecessors: [0x23e]
Successors: [0x827]
---
0x249 JUMPDEST
0x24a PUSH2 0x251
0x24d PUSH2 0x827
0x250 JUMP
---
0x249: JUMPDEST 
0x24a: V168 = 0x251
0x24d: V169 = 0x827
0x250: JUMP 0x827
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x251]
Exit stack: [V10, 0x251]

================================

Block 0x251
[0x251:0x26c]
---
Predecessors: [0x827]
Successors: []
---
0x251 JUMPDEST
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 DUP3
0x257 PUSH1 0xff
0x259 AND
0x25a PUSH1 0xff
0x25c AND
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 ADD
0x262 SWAP2
0x263 POP
0x264 POP
0x265 PUSH1 0x40
0x267 MLOAD
0x268 DUP1
0x269 SWAP2
0x26a SUB
0x26b SWAP1
0x26c RETURN
---
0x251: JUMPDEST 
0x252: V170 = 0x40
0x254: V171 = M[0x40]
0x257: V172 = 0xff
0x259: V173 = AND 0xff V533
0x25a: V174 = 0xff
0x25c: V175 = AND 0xff V173
0x25e: M[V171] = V175
0x25f: V176 = 0x20
0x261: V177 = ADD 0x20 V171
0x265: V178 = 0x40
0x267: V179 = M[0x40]
0x26a: V180 = SUB V177 V179
0x26c: RETURN V179 V180
---
Entry stack: [V10, 0x251, V533]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x251]

================================

Block 0x26d
[0x26d:0x273]
---
Predecessors: [0x6b]
Successors: [0x274, 0x278]
---
0x26d JUMPDEST
0x26e CALLVALUE
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x26d: JUMPDEST 
0x26e: V181 = CALLVALUE
0x26f: V182 = ISZERO V181
0x270: V183 = 0x278
0x273: JUMPI 0x278 V182
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x26d]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V184 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x278
[0x278:0x2a3]
---
Predecessors: [0x26d]
Successors: [0x83a]
---
0x278 JUMPDEST
0x279 PUSH2 0x2a4
0x27c PUSH1 0x4
0x27e DUP1
0x27f DUP1
0x280 CALLDATALOAD
0x281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x296 AND
0x297 SWAP1
0x298 PUSH1 0x20
0x29a ADD
0x29b SWAP1
0x29c SWAP2
0x29d SWAP1
0x29e POP
0x29f POP
0x2a0 PUSH2 0x83a
0x2a3 JUMP
---
0x278: JUMPDEST 
0x279: V185 = 0x2a4
0x27c: V186 = 0x4
0x280: V187 = CALLDATALOAD 0x4
0x281: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x296: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x298: V190 = 0x20
0x29a: V191 = ADD 0x20 0x4
0x2a0: V192 = 0x83a
0x2a3: JUMP 0x83a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a4, V189]
Exit stack: [V10, 0x2a4, V189]

================================

Block 0x2a4
[0x2a4:0x2b9]
---
Predecessors: [0x87f]
Successors: []
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 DUP1
0x2a9 DUP3
0x2aa DUP2
0x2ab MSTORE
0x2ac PUSH1 0x20
0x2ae ADD
0x2af SWAP2
0x2b0 POP
0x2b1 POP
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 SWAP2
0x2b7 SUB
0x2b8 SWAP1
0x2b9 RETURN
---
0x2a4: JUMPDEST 
0x2a5: V193 = 0x40
0x2a7: V194 = M[0x40]
0x2ab: M[V194] = V547
0x2ac: V195 = 0x20
0x2ae: V196 = ADD 0x20 V194
0x2b2: V197 = 0x40
0x2b4: V198 = M[0x40]
0x2b7: V199 = SUB V196 V198
0x2b9: RETURN V198 V199
---
Entry stack: [V10, V547]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ba
[0x2ba:0x2c0]
---
Predecessors: [0x76]
Successors: [0x2c1, 0x2c5]
---
0x2ba JUMPDEST
0x2bb CALLVALUE
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V200 = CALLVALUE
0x2bc: V201 = ISZERO V200
0x2bd: V202 = 0x2c5
0x2c0: JUMPI 0x2c5 V201
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V203 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c5
[0x2c5:0x2cc]
---
Predecessors: [0x2ba]
Successors: [0x884]
---
0x2c5 JUMPDEST
0x2c6 PUSH2 0x2cd
0x2c9 PUSH2 0x884
0x2cc JUMP
---
0x2c5: JUMPDEST 
0x2c6: V204 = 0x2cd
0x2c9: V205 = 0x884
0x2cc: JUMP 0x884
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2cd]
Exit stack: [V10, 0x2cd]

================================

Block 0x2cd
[0x2cd:0x2f1]
---
Predecessors: [0x91a]
Successors: [0x2f2]
---
0x2cd JUMPDEST
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 DUP1
0x2d2 DUP1
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 DUP3
0x2d7 DUP2
0x2d8 SUB
0x2d9 DUP3
0x2da MSTORE
0x2db DUP4
0x2dc DUP2
0x2dd DUP2
0x2de MLOAD
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 SWAP2
0x2e5 POP
0x2e6 DUP1
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP1
0x2ed DUP1
0x2ee DUP4
0x2ef DUP4
0x2f0 PUSH1 0x0
---
0x2cd: JUMPDEST 
0x2ce: V206 = 0x40
0x2d0: V207 = M[0x40]
0x2d3: V208 = 0x20
0x2d5: V209 = ADD 0x20 V207
0x2d8: V210 = SUB V209 V207
0x2da: M[V207] = V210
0x2de: V211 = M[V568]
0x2e0: M[V209] = V211
0x2e1: V212 = 0x20
0x2e3: V213 = ADD 0x20 V209
0x2e7: V214 = M[V568]
0x2e9: V215 = 0x20
0x2eb: V216 = ADD 0x20 V568
0x2f0: V217 = 0x0
---
Entry stack: [V10, 0x2cd, V568]
Stack pops: 1
Stack additions: [S0, V207, V207, V213, V216, V214, V214, V213, V216, 0x0]
Exit stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, 0x0]

================================

Block 0x2f2
[0x2f2:0x2fa]
---
Predecessors: [0x2cd, 0x303]
Successors: [0x2fb, 0x30e]
---
0x2f2 JUMPDEST
0x2f3 DUP4
0x2f4 DUP2
0x2f5 LT
0x2f6 ISZERO
0x2f7 PUSH2 0x30e
0x2fa JUMPI
---
0x2f2: JUMPDEST 
0x2f5: V218 = LT S0 V214
0x2f6: V219 = ISZERO V218
0x2f7: V220 = 0x30e
0x2fa: JUMPI 0x30e V219
---
Entry stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, S0]

================================

Block 0x2fb
[0x2fb:0x302]
---
Predecessors: [0x2f2]
Successors: [0x303]
---
0x2fb DUP1
0x2fc DUP3
0x2fd ADD
0x2fe MLOAD
0x2ff DUP2
0x300 DUP5
0x301 ADD
0x302 MSTORE
---
0x2fd: V221 = ADD V216 S0
0x2fe: V222 = M[V221]
0x301: V223 = ADD V213 S0
0x302: M[V223] = V222
---
Entry stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, S0]

================================

Block 0x303
[0x303:0x30d]
---
Predecessors: [0x2fb]
Successors: [0x2f2]
---
0x303 JUMPDEST
0x304 PUSH1 0x20
0x306 DUP2
0x307 ADD
0x308 SWAP1
0x309 POP
0x30a PUSH2 0x2f2
0x30d JUMP
---
0x303: JUMPDEST 
0x304: V224 = 0x20
0x307: V225 = ADD S0 0x20
0x30a: V226 = 0x2f2
0x30d: JUMP 0x2f2
---
Entry stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, S0]
Stack pops: 1
Stack additions: [V225]
Exit stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, V225]

================================

Block 0x30e
[0x30e:0x321]
---
Predecessors: [0x2f2]
Successors: [0x322, 0x33b]
---
0x30e JUMPDEST
0x30f POP
0x310 POP
0x311 POP
0x312 POP
0x313 SWAP1
0x314 POP
0x315 SWAP1
0x316 DUP2
0x317 ADD
0x318 SWAP1
0x319 PUSH1 0x1f
0x31b AND
0x31c DUP1
0x31d ISZERO
0x31e PUSH2 0x33b
0x321 JUMPI
---
0x30e: JUMPDEST 
0x317: V227 = ADD V214 V213
0x319: V228 = 0x1f
0x31b: V229 = AND 0x1f V214
0x31d: V230 = ISZERO V229
0x31e: V231 = 0x33b
0x321: JUMPI 0x33b V230
---
Entry stack: [V10, 0x2cd, V568, V207, V207, V213, V216, V214, V214, V213, V216, S0]
Stack pops: 7
Stack additions: [V227, V229]
Exit stack: [V10, 0x2cd, V568, V207, V207, V227, V229]

================================

Block 0x322
[0x322:0x33a]
---
Predecessors: [0x30e]
Successors: [0x33b]
---
0x322 DUP1
0x323 DUP3
0x324 SUB
0x325 DUP1
0x326 MLOAD
0x327 PUSH1 0x1
0x329 DUP4
0x32a PUSH1 0x20
0x32c SUB
0x32d PUSH2 0x100
0x330 EXP
0x331 SUB
0x332 NOT
0x333 AND
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP2
0x33a POP
---
0x324: V232 = SUB V227 V229
0x326: V233 = M[V232]
0x327: V234 = 0x1
0x32a: V235 = 0x20
0x32c: V236 = SUB 0x20 V229
0x32d: V237 = 0x100
0x330: V238 = EXP 0x100 V236
0x331: V239 = SUB V238 0x1
0x332: V240 = NOT V239
0x333: V241 = AND V240 V233
0x335: M[V232] = V241
0x336: V242 = 0x20
0x338: V243 = ADD 0x20 V232
---
Entry stack: [V10, 0x2cd, V568, V207, V207, V227, V229]
Stack pops: 2
Stack additions: [V243, S0]
Exit stack: [V10, 0x2cd, V568, V207, V207, V243, V229]

================================

Block 0x33b
[0x33b:0x348]
---
Predecessors: [0x30e, 0x322]
Successors: []
---
0x33b JUMPDEST
0x33c POP
0x33d SWAP3
0x33e POP
0x33f POP
0x340 POP
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP1
0x345 SWAP2
0x346 SUB
0x347 SWAP1
0x348 RETURN
---
0x33b: JUMPDEST 
0x341: V244 = 0x40
0x343: V245 = M[0x40]
0x346: V246 = SUB S1 V245
0x348: RETURN V245 V246
---
Entry stack: [V10, 0x2cd, V568, V207, V207, S1, V229]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x2cd]

================================

Block 0x349
[0x349:0x34f]
---
Predecessors: [0x81]
Successors: [0x350, 0x354]
---
0x349 JUMPDEST
0x34a CALLVALUE
0x34b ISZERO
0x34c PUSH2 0x354
0x34f JUMPI
---
0x349: JUMPDEST 
0x34a: V247 = CALLVALUE
0x34b: V248 = ISZERO V247
0x34c: V249 = 0x354
0x34f: JUMPI 0x354 V248
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x350
[0x350:0x353]
---
Predecessors: [0x349]
Successors: []
---
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
---
0x350: V250 = 0x0
0x353: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x354
[0x354:0x388]
---
Predecessors: [0x349]
Successors: [0x922]
---
0x354 JUMPDEST
0x355 PUSH2 0x389
0x358 PUSH1 0x4
0x35a DUP1
0x35b DUP1
0x35c CALLDATALOAD
0x35d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x372 AND
0x373 SWAP1
0x374 PUSH1 0x20
0x376 ADD
0x377 SWAP1
0x378 SWAP2
0x379 SWAP1
0x37a DUP1
0x37b CALLDATALOAD
0x37c SWAP1
0x37d PUSH1 0x20
0x37f ADD
0x380 SWAP1
0x381 SWAP2
0x382 SWAP1
0x383 POP
0x384 POP
0x385 PUSH2 0x922
0x388 JUMP
---
0x354: JUMPDEST 
0x355: V251 = 0x389
0x358: V252 = 0x4
0x35c: V253 = CALLDATALOAD 0x4
0x35d: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x372: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x374: V256 = 0x20
0x376: V257 = ADD 0x20 0x4
0x37b: V258 = CALLDATALOAD 0x24
0x37d: V259 = 0x20
0x37f: V260 = ADD 0x20 0x24
0x385: V261 = 0x922
0x388: JUMP 0x922
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x389, V255, V258]
Exit stack: [V10, 0x389, V255, V258]

================================

Block 0x389
[0x389:0x3a2]
---
Predecessors: [0xa8a]
Successors: []
---
0x389 JUMPDEST
0x38a PUSH1 0x40
0x38c MLOAD
0x38d DUP1
0x38e DUP3
0x38f ISZERO
0x390 ISZERO
0x391 ISZERO
0x392 ISZERO
0x393 DUP2
0x394 MSTORE
0x395 PUSH1 0x20
0x397 ADD
0x398 SWAP2
0x399 POP
0x39a POP
0x39b PUSH1 0x40
0x39d MLOAD
0x39e DUP1
0x39f SWAP2
0x3a0 SUB
0x3a1 SWAP1
0x3a2 RETURN
---
0x389: JUMPDEST 
0x38a: V262 = 0x40
0x38c: V263 = M[0x40]
0x38f: V264 = ISZERO {0x0, 0x1}
0x390: V265 = ISZERO V264
0x391: V266 = ISZERO V265
0x392: V267 = ISZERO V266
0x394: M[V263] = V267
0x395: V268 = 0x20
0x397: V269 = ADD 0x20 V263
0x39b: V270 = 0x40
0x39d: V271 = M[0x40]
0x3a0: V272 = SUB V269 V271
0x3a2: RETURN V271 V272
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a3
[0x3a3:0x3a9]
---
Predecessors: [0x8c]
Successors: [0x3aa, 0x3ae]
---
0x3a3 JUMPDEST
0x3a4 CALLVALUE
0x3a5 ISZERO
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V273 = CALLVALUE
0x3a5: V274 = ISZERO V273
0x3a6: V275 = 0x3ae
0x3a9: JUMPI 0x3ae V274
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x3a3]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V276 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ae
[0x3ae:0x3f8]
---
Predecessors: [0x3a3]
Successors: [0xa90]
---
0x3ae JUMPDEST
0x3af PUSH2 0x3f9
0x3b2 PUSH1 0x4
0x3b4 DUP1
0x3b5 DUP1
0x3b6 CALLDATALOAD
0x3b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cc AND
0x3cd SWAP1
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP1
0x3d2 SWAP2
0x3d3 SWAP1
0x3d4 DUP1
0x3d5 CALLDATALOAD
0x3d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3eb AND
0x3ec SWAP1
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 SWAP1
0x3f1 SWAP2
0x3f2 SWAP1
0x3f3 POP
0x3f4 POP
0x3f5 PUSH2 0xa90
0x3f8 JUMP
---
0x3ae: JUMPDEST 
0x3af: V277 = 0x3f9
0x3b2: V278 = 0x4
0x3b6: V279 = CALLDATALOAD 0x4
0x3b7: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cc: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x3ce: V282 = 0x20
0x3d0: V283 = ADD 0x20 0x4
0x3d5: V284 = CALLDATALOAD 0x24
0x3d6: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x3ed: V287 = 0x20
0x3ef: V288 = ADD 0x20 0x24
0x3f5: V289 = 0xa90
0x3f8: JUMP 0xa90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f9, V281, V286]
Exit stack: [V10, 0x3f9, V281, V286]

================================

Block 0x3f9
[0x3f9:0x40e]
---
Predecessors: [0xb12]
Successors: []
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe DUP3
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP2
0x405 POP
0x406 POP
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b SWAP2
0x40c SUB
0x40d SWAP1
0x40e RETURN
---
0x3f9: JUMPDEST 
0x3fa: V290 = 0x40
0x3fc: V291 = M[0x40]
0x400: M[V291] = V707
0x401: V292 = 0x20
0x403: V293 = ADD 0x20 V291
0x407: V294 = 0x40
0x409: V295 = M[0x40]
0x40c: V296 = SUB V293 V295
0x40e: RETURN V295 V296
---
Entry stack: [V10, V707]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x40f
[0x40f:0x45e]
---
Predecessors: [0xbe]
Successors: [0x45f, 0x4a5]
---
0x40f JUMPDEST
0x410 PUSH1 0x1
0x412 DUP1
0x413 SLOAD
0x414 PUSH1 0x1
0x416 DUP2
0x417 PUSH1 0x1
0x419 AND
0x41a ISZERO
0x41b PUSH2 0x100
0x41e MUL
0x41f SUB
0x420 AND
0x421 PUSH1 0x2
0x423 SWAP1
0x424 DIV
0x425 DUP1
0x426 PUSH1 0x1f
0x428 ADD
0x429 PUSH1 0x20
0x42b DUP1
0x42c SWAP2
0x42d DIV
0x42e MUL
0x42f PUSH1 0x20
0x431 ADD
0x432 PUSH1 0x40
0x434 MLOAD
0x435 SWAP1
0x436 DUP2
0x437 ADD
0x438 PUSH1 0x40
0x43a MSTORE
0x43b DUP1
0x43c SWAP3
0x43d SWAP2
0x43e SWAP1
0x43f DUP2
0x440 DUP2
0x441 MSTORE
0x442 PUSH1 0x20
0x444 ADD
0x445 DUP3
0x446 DUP1
0x447 SLOAD
0x448 PUSH1 0x1
0x44a DUP2
0x44b PUSH1 0x1
0x44d AND
0x44e ISZERO
0x44f PUSH2 0x100
0x452 MUL
0x453 SUB
0x454 AND
0x455 PUSH1 0x2
0x457 SWAP1
0x458 DIV
0x459 DUP1
0x45a ISZERO
0x45b PUSH2 0x4a5
0x45e JUMPI
---
0x40f: JUMPDEST 
0x410: V297 = 0x1
0x413: V298 = S[0x1]
0x414: V299 = 0x1
0x417: V300 = 0x1
0x419: V301 = AND 0x1 V298
0x41a: V302 = ISZERO V301
0x41b: V303 = 0x100
0x41e: V304 = MUL 0x100 V302
0x41f: V305 = SUB V304 0x1
0x420: V306 = AND V305 V298
0x421: V307 = 0x2
0x424: V308 = DIV V306 0x2
0x426: V309 = 0x1f
0x428: V310 = ADD 0x1f V308
0x429: V311 = 0x20
0x42d: V312 = DIV V310 0x20
0x42e: V313 = MUL V312 0x20
0x42f: V314 = 0x20
0x431: V315 = ADD 0x20 V313
0x432: V316 = 0x40
0x434: V317 = M[0x40]
0x437: V318 = ADD V317 V315
0x438: V319 = 0x40
0x43a: M[0x40] = V318
0x441: M[V317] = V308
0x442: V320 = 0x20
0x444: V321 = ADD 0x20 V317
0x447: V322 = S[0x1]
0x448: V323 = 0x1
0x44b: V324 = 0x1
0x44d: V325 = AND 0x1 V322
0x44e: V326 = ISZERO V325
0x44f: V327 = 0x100
0x452: V328 = MUL 0x100 V326
0x453: V329 = SUB V328 0x1
0x454: V330 = AND V329 V322
0x455: V331 = 0x2
0x458: V332 = DIV V330 0x2
0x45a: V333 = ISZERO V332
0x45b: V334 = 0x4a5
0x45e: JUMPI 0x4a5 V333
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: [V317, 0x1, V308, V321, 0x1, V332]
Exit stack: [V10, 0xc6, V317, 0x1, V308, V321, 0x1, V332]

================================

Block 0x45f
[0x45f:0x466]
---
Predecessors: [0x40f]
Successors: [0x467, 0x47a]
---
0x45f DUP1
0x460 PUSH1 0x1f
0x462 LT
0x463 PUSH2 0x47a
0x466 JUMPI
---
0x460: V335 = 0x1f
0x462: V336 = LT 0x1f V332
0x463: V337 = 0x47a
0x466: JUMPI 0x47a V336
---
Entry stack: [V10, 0xc6, V317, 0x1, V308, V321, 0x1, V332]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xc6, V317, 0x1, V308, V321, 0x1, V332]

================================

Block 0x467
[0x467:0x479]
---
Predecessors: [0x45f]
Successors: [0x4a5]
---
0x467 PUSH2 0x100
0x46a DUP1
0x46b DUP4
0x46c SLOAD
0x46d DIV
0x46e MUL
0x46f DUP4
0x470 MSTORE
0x471 SWAP2
0x472 PUSH1 0x20
0x474 ADD
0x475 SWAP2
0x476 PUSH2 0x4a5
0x479 JUMP
---
0x467: V338 = 0x100
0x46c: V339 = S[0x1]
0x46d: V340 = DIV V339 0x100
0x46e: V341 = MUL V340 0x100
0x470: M[V321] = V341
0x472: V342 = 0x20
0x474: V343 = ADD 0x20 V321
0x476: V344 = 0x4a5
0x479: JUMP 0x4a5
---
Entry stack: [V10, 0xc6, V317, 0x1, V308, V321, 0x1, V332]
Stack pops: 3
Stack additions: [V343, S1, S0]
Exit stack: [V10, 0xc6, V317, 0x1, V308, V343, 0x1, V332]

================================

Block 0x47a
[0x47a:0x487]
---
Predecessors: [0x45f]
Successors: [0x488]
---
0x47a JUMPDEST
0x47b DUP3
0x47c ADD
0x47d SWAP2
0x47e SWAP1
0x47f PUSH1 0x0
0x481 MSTORE
0x482 PUSH1 0x20
0x484 PUSH1 0x0
0x486 SHA3
0x487 SWAP1
---
0x47a: JUMPDEST 
0x47c: V345 = ADD V321 V332
0x47f: V346 = 0x0
0x481: M[0x0] = 0x1
0x482: V347 = 0x20
0x484: V348 = 0x0
0x486: V349 = SHA3 0x0 0x20
---
Entry stack: [V10, 0xc6, V317, 0x1, V308, V321, 0x1, V332]
Stack pops: 3
Stack additions: [V345, V349, S2]
Exit stack: [V10, 0xc6, V317, 0x1, V308, V345, V349, V321]

================================

Block 0x488
[0x488:0x49b]
---
Predecessors: [0x47a, 0x488]
Successors: [0x488, 0x49c]
---
0x488 JUMPDEST
0x489 DUP2
0x48a SLOAD
0x48b DUP2
0x48c MSTORE
0x48d SWAP1
0x48e PUSH1 0x1
0x490 ADD
0x491 SWAP1
0x492 PUSH1 0x20
0x494 ADD
0x495 DUP1
0x496 DUP4
0x497 GT
0x498 PUSH2 0x488
0x49b JUMPI
---
0x488: JUMPDEST 
0x48a: V350 = S[S1]
0x48c: M[S0] = V350
0x48e: V351 = 0x1
0x490: V352 = ADD 0x1 S1
0x492: V353 = 0x20
0x494: V354 = ADD 0x20 S0
0x497: V355 = GT V345 V354
0x498: V356 = 0x488
0x49b: JUMPI 0x488 V355
---
Entry stack: [V10, 0xc6, V317, 0x1, V308, V345, S1, S0]
Stack pops: 3
Stack additions: [S2, V352, V354]
Exit stack: [V10, 0xc6, V317, 0x1, V308, V345, V352, V354]

================================

Block 0x49c
[0x49c:0x4a4]
---
Predecessors: [0x488]
Successors: [0x4a5]
---
0x49c DUP3
0x49d SWAP1
0x49e SUB
0x49f PUSH1 0x1f
0x4a1 AND
0x4a2 DUP3
0x4a3 ADD
0x4a4 SWAP2
---
0x49e: V357 = SUB V354 V345
0x49f: V358 = 0x1f
0x4a1: V359 = AND 0x1f V357
0x4a3: V360 = ADD V345 V359
---
Entry stack: [V10, 0xc6, V317, 0x1, V308, V345, V352, V354]
Stack pops: 3
Stack additions: [V360, S1, S2]
Exit stack: [V10, 0xc6, V317, 0x1, V308, V360, V352, V345]

================================

Block 0x4a5
[0x4a5:0x4ac]
---
Predecessors: [0x40f, 0x467, 0x49c]
Successors: [0xc6]
---
0x4a5 JUMPDEST
0x4a6 POP
0x4a7 POP
0x4a8 POP
0x4a9 POP
0x4aa POP
0x4ab DUP2
0x4ac JUMP
---
0x4a5: JUMPDEST 
0x4ac: JUMP 0xc6
---
Entry stack: [V10, 0xc6, V317, 0x1, V308, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0xc6, V317]

================================

Block 0x4ad
[0x4ad:0x599]
---
Predecessors: [0x14d]
Successors: [0x59a]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x0
0x4b0 DUP2
0x4b1 PUSH1 0x5
0x4b3 PUSH1 0x0
0x4b5 CALLER
0x4b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cb AND
0x4cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e1 AND
0x4e2 DUP2
0x4e3 MSTORE
0x4e4 PUSH1 0x20
0x4e6 ADD
0x4e7 SWAP1
0x4e8 DUP2
0x4e9 MSTORE
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed PUSH1 0x0
0x4ef SHA3
0x4f0 PUSH1 0x0
0x4f2 DUP6
0x4f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x508 AND
0x509 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51e AND
0x51f DUP2
0x520 MSTORE
0x521 PUSH1 0x20
0x523 ADD
0x524 SWAP1
0x525 DUP2
0x526 MSTORE
0x527 PUSH1 0x20
0x529 ADD
0x52a PUSH1 0x0
0x52c SHA3
0x52d DUP2
0x52e SWAP1
0x52f SSTORE
0x530 POP
0x531 DUP3
0x532 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x547 AND
0x548 CALLER
0x549 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55e AND
0x55f PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x580 DUP5
0x581 PUSH1 0x40
0x583 MLOAD
0x584 DUP1
0x585 DUP3
0x586 DUP2
0x587 MSTORE
0x588 PUSH1 0x20
0x58a ADD
0x58b SWAP2
0x58c POP
0x58d POP
0x58e PUSH1 0x40
0x590 MLOAD
0x591 DUP1
0x592 SWAP2
0x593 SUB
0x594 SWAP1
0x595 LOG3
0x596 PUSH1 0x1
0x598 SWAP1
0x599 POP
---
0x4ad: JUMPDEST 
0x4ae: V361 = 0x0
0x4b1: V362 = 0x5
0x4b3: V363 = 0x0
0x4b5: V364 = CALLER
0x4b6: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cb: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x4cc: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x4e3: M[0x0] = V368
0x4e4: V369 = 0x20
0x4e6: V370 = ADD 0x20 0x0
0x4e9: M[0x20] = 0x5
0x4ea: V371 = 0x20
0x4ec: V372 = ADD 0x20 0x20
0x4ed: V373 = 0x0
0x4ef: V374 = SHA3 0x0 0x40
0x4f0: V375 = 0x0
0x4f3: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x508: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x509: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x51e: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x520: M[0x0] = V379
0x521: V380 = 0x20
0x523: V381 = ADD 0x20 0x0
0x526: M[0x20] = V374
0x527: V382 = 0x20
0x529: V383 = ADD 0x20 0x20
0x52a: V384 = 0x0
0x52c: V385 = SHA3 0x0 0x40
0x52f: S[V385] = V105
0x532: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x547: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x548: V388 = CALLER
0x549: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x55e: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x55f: V391 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x581: V392 = 0x40
0x583: V393 = M[0x40]
0x587: M[V393] = V105
0x588: V394 = 0x20
0x58a: V395 = ADD 0x20 V393
0x58e: V396 = 0x40
0x590: V397 = M[0x40]
0x593: V398 = SUB V395 V397
0x595: LOG V397 V398 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V390 V387
0x596: V399 = 0x1
---
Entry stack: [V10, 0x182, V102, V105]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x182, V102, V105, 0x1]

================================

Block 0x59a
[0x59a:0x59f]
---
Predecessors: [0x4ad]
Successors: [0x182]
---
0x59a JUMPDEST
0x59b SWAP3
0x59c SWAP2
0x59d POP
0x59e POP
0x59f JUMP
---
0x59a: JUMPDEST 
0x59f: JUMP 0x182
---
Entry stack: [V10, 0x182, V102, V105, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x5a0
[0x5a0:0x5a5]
---
Predecessors: [0x1a7]
Successors: [0x1af]
---
0x5a0 JUMPDEST
0x5a1 PUSH1 0x0
0x5a3 SLOAD
0x5a4 DUP2
0x5a5 JUMP
---
0x5a0: JUMPDEST 
0x5a1: V400 = 0x0
0x5a3: V401 = S[0x0]
0x5a5: JUMP 0x1af
---
Entry stack: [V10, 0x1af]
Stack pops: 1
Stack additions: [S0, V401]
Exit stack: [V10, 0x1af, V401]

================================

Block 0x5a6
[0x5a6:0x5f1]
---
Predecessors: [0x1d0]
Successors: [0x5f2, 0x673]
---
0x5a6 JUMPDEST
0x5a7 PUSH1 0x0
0x5a9 DUP2
0x5aa PUSH1 0x4
0x5ac PUSH1 0x0
0x5ae DUP7
0x5af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c4 AND
0x5c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5da AND
0x5db DUP2
0x5dc MSTORE
0x5dd PUSH1 0x20
0x5df ADD
0x5e0 SWAP1
0x5e1 DUP2
0x5e2 MSTORE
0x5e3 PUSH1 0x20
0x5e5 ADD
0x5e6 PUSH1 0x0
0x5e8 SHA3
0x5e9 SLOAD
0x5ea LT
0x5eb ISZERO
0x5ec DUP1
0x5ed ISZERO
0x5ee PUSH2 0x673
0x5f1 JUMPI
---
0x5a6: JUMPDEST 
0x5a7: V402 = 0x0
0x5aa: V403 = 0x4
0x5ac: V404 = 0x0
0x5af: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c4: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x5c5: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x5da: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x5dc: M[0x0] = V408
0x5dd: V409 = 0x20
0x5df: V410 = ADD 0x20 0x0
0x5e2: M[0x20] = 0x4
0x5e3: V411 = 0x20
0x5e5: V412 = ADD 0x20 0x20
0x5e6: V413 = 0x0
0x5e8: V414 = SHA3 0x0 0x40
0x5e9: V415 = S[V414]
0x5ea: V416 = LT V415 V149
0x5eb: V417 = ISZERO V416
0x5ed: V418 = ISZERO V417
0x5ee: V419 = 0x673
0x5f1: JUMPI 0x673 V418
---
Entry stack: [V10, 0x224, V141, V146, V149]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V417]
Exit stack: [V10, 0x224, V141, V146, V149, 0x0, V417]

================================

Block 0x5f2
[0x5f2:0x672]
---
Predecessors: [0x5a6]
Successors: [0x673]
---
0x5f2 POP
0x5f3 DUP2
0x5f4 PUSH1 0x5
0x5f6 PUSH1 0x0
0x5f8 DUP7
0x5f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60e AND
0x60f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x624 AND
0x625 DUP2
0x626 MSTORE
0x627 PUSH1 0x20
0x629 ADD
0x62a SWAP1
0x62b DUP2
0x62c MSTORE
0x62d PUSH1 0x20
0x62f ADD
0x630 PUSH1 0x0
0x632 SHA3
0x633 PUSH1 0x0
0x635 CALLER
0x636 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64b AND
0x64c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x661 AND
0x662 DUP2
0x663 MSTORE
0x664 PUSH1 0x20
0x666 ADD
0x667 SWAP1
0x668 DUP2
0x669 MSTORE
0x66a PUSH1 0x20
0x66c ADD
0x66d PUSH1 0x0
0x66f SHA3
0x670 SLOAD
0x671 LT
0x672 ISZERO
---
0x5f4: V420 = 0x5
0x5f6: V421 = 0x0
0x5f9: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x60e: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x60f: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x624: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x626: M[0x0] = V425
0x627: V426 = 0x20
0x629: V427 = ADD 0x20 0x0
0x62c: M[0x20] = 0x5
0x62d: V428 = 0x20
0x62f: V429 = ADD 0x20 0x20
0x630: V430 = 0x0
0x632: V431 = SHA3 0x0 0x40
0x633: V432 = 0x0
0x635: V433 = CALLER
0x636: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x64b: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x64c: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x661: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x663: M[0x0] = V437
0x664: V438 = 0x20
0x666: V439 = ADD 0x20 0x0
0x669: M[0x20] = V431
0x66a: V440 = 0x20
0x66c: V441 = ADD 0x20 0x20
0x66d: V442 = 0x0
0x66f: V443 = SHA3 0x0 0x40
0x670: V444 = S[V443]
0x671: V445 = LT V444 V149
0x672: V446 = ISZERO V445
---
Entry stack: [V10, 0x224, V141, V146, V149, 0x0, V417]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V446]
Exit stack: [V10, 0x224, V141, V146, V149, 0x0, V446]

================================

Block 0x673
[0x673:0x679]
---
Predecessors: [0x5a6, 0x5f2]
Successors: [0x67a, 0x67f]
---
0x673 JUMPDEST
0x674 DUP1
0x675 ISZERO
0x676 PUSH2 0x67f
0x679 JUMPI
---
0x673: JUMPDEST 
0x675: V447 = ISZERO S0
0x676: V448 = 0x67f
0x679: JUMPI 0x67f V447
---
Entry stack: [V10, 0x224, V141, V146, V149, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x224, V141, V146, V149, 0x0, S0]

================================

Block 0x67a
[0x67a:0x67e]
---
Predecessors: [0x673]
Successors: [0x67f]
---
0x67a POP
0x67b PUSH1 0x0
0x67d DUP3
0x67e GT
---
0x67b: V449 = 0x0
0x67e: V450 = GT V149 0x0
---
Entry stack: [V10, 0x224, V141, V146, V149, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V450]
Exit stack: [V10, 0x224, V141, V146, V149, 0x0, V450]

================================

Block 0x67f
[0x67f:0x684]
---
Predecessors: [0x673, 0x67a]
Successors: [0x685, 0x816]
---
0x67f JUMPDEST
0x680 ISZERO
0x681 PUSH2 0x816
0x684 JUMPI
---
0x67f: JUMPDEST 
0x680: V451 = ISZERO S0
0x681: V452 = 0x816
0x684: JUMPI 0x816 V451
---
Entry stack: [V10, 0x224, V141, V146, V149, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x224, V141, V146, V149, 0x0]

================================

Block 0x685
[0x685:0x815]
---
Predecessors: [0x67f]
Successors: [0x820]
---
0x685 DUP2
0x686 PUSH1 0x4
0x688 PUSH1 0x0
0x68a DUP6
0x68b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a0 AND
0x6a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b6 AND
0x6b7 DUP2
0x6b8 MSTORE
0x6b9 PUSH1 0x20
0x6bb ADD
0x6bc SWAP1
0x6bd DUP2
0x6be MSTORE
0x6bf PUSH1 0x20
0x6c1 ADD
0x6c2 PUSH1 0x0
0x6c4 SHA3
0x6c5 PUSH1 0x0
0x6c7 DUP3
0x6c8 DUP3
0x6c9 SLOAD
0x6ca ADD
0x6cb SWAP3
0x6cc POP
0x6cd POP
0x6ce DUP2
0x6cf SWAP1
0x6d0 SSTORE
0x6d1 POP
0x6d2 DUP2
0x6d3 PUSH1 0x4
0x6d5 PUSH1 0x0
0x6d7 DUP7
0x6d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ed AND
0x6ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x703 AND
0x704 DUP2
0x705 MSTORE
0x706 PUSH1 0x20
0x708 ADD
0x709 SWAP1
0x70a DUP2
0x70b MSTORE
0x70c PUSH1 0x20
0x70e ADD
0x70f PUSH1 0x0
0x711 SHA3
0x712 PUSH1 0x0
0x714 DUP3
0x715 DUP3
0x716 SLOAD
0x717 SUB
0x718 SWAP3
0x719 POP
0x71a POP
0x71b DUP2
0x71c SWAP1
0x71d SSTORE
0x71e POP
0x71f DUP2
0x720 PUSH1 0x5
0x722 PUSH1 0x0
0x724 DUP7
0x725 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73a AND
0x73b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x750 AND
0x751 DUP2
0x752 MSTORE
0x753 PUSH1 0x20
0x755 ADD
0x756 SWAP1
0x757 DUP2
0x758 MSTORE
0x759 PUSH1 0x20
0x75b ADD
0x75c PUSH1 0x0
0x75e SHA3
0x75f PUSH1 0x0
0x761 CALLER
0x762 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x777 AND
0x778 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78d AND
0x78e DUP2
0x78f MSTORE
0x790 PUSH1 0x20
0x792 ADD
0x793 SWAP1
0x794 DUP2
0x795 MSTORE
0x796 PUSH1 0x20
0x798 ADD
0x799 PUSH1 0x0
0x79b SHA3
0x79c PUSH1 0x0
0x79e DUP3
0x79f DUP3
0x7a0 SLOAD
0x7a1 SUB
0x7a2 SWAP3
0x7a3 POP
0x7a4 POP
0x7a5 DUP2
0x7a6 SWAP1
0x7a7 SSTORE
0x7a8 POP
0x7a9 DUP3
0x7aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bf AND
0x7c0 DUP5
0x7c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d6 AND
0x7d7 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7f8 DUP5
0x7f9 PUSH1 0x40
0x7fb MLOAD
0x7fc DUP1
0x7fd DUP3
0x7fe DUP2
0x7ff MSTORE
0x800 PUSH1 0x20
0x802 ADD
0x803 SWAP2
0x804 POP
0x805 POP
0x806 PUSH1 0x40
0x808 MLOAD
0x809 DUP1
0x80a SWAP2
0x80b SUB
0x80c SWAP1
0x80d LOG3
0x80e PUSH1 0x1
0x810 SWAP1
0x811 POP
0x812 PUSH2 0x820
0x815 JUMP
---
0x686: V453 = 0x4
0x688: V454 = 0x0
0x68b: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x6a1: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x6b8: M[0x0] = V458
0x6b9: V459 = 0x20
0x6bb: V460 = ADD 0x20 0x0
0x6be: M[0x20] = 0x4
0x6bf: V461 = 0x20
0x6c1: V462 = ADD 0x20 0x20
0x6c2: V463 = 0x0
0x6c4: V464 = SHA3 0x0 0x40
0x6c5: V465 = 0x0
0x6c9: V466 = S[V464]
0x6ca: V467 = ADD V466 V149
0x6d0: S[V464] = V467
0x6d3: V468 = 0x4
0x6d5: V469 = 0x0
0x6d8: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ed: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x6ee: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x703: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x705: M[0x0] = V473
0x706: V474 = 0x20
0x708: V475 = ADD 0x20 0x0
0x70b: M[0x20] = 0x4
0x70c: V476 = 0x20
0x70e: V477 = ADD 0x20 0x20
0x70f: V478 = 0x0
0x711: V479 = SHA3 0x0 0x40
0x712: V480 = 0x0
0x716: V481 = S[V479]
0x717: V482 = SUB V481 V149
0x71d: S[V479] = V482
0x720: V483 = 0x5
0x722: V484 = 0x0
0x725: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x73a: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x73b: V487 = 0xffffffffffffffffffffffffffffffffffffffff
0x750: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x752: M[0x0] = V488
0x753: V489 = 0x20
0x755: V490 = ADD 0x20 0x0
0x758: M[0x20] = 0x5
0x759: V491 = 0x20
0x75b: V492 = ADD 0x20 0x20
0x75c: V493 = 0x0
0x75e: V494 = SHA3 0x0 0x40
0x75f: V495 = 0x0
0x761: V496 = CALLER
0x762: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x777: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x778: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x78d: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x78f: M[0x0] = V500
0x790: V501 = 0x20
0x792: V502 = ADD 0x20 0x0
0x795: M[0x20] = V494
0x796: V503 = 0x20
0x798: V504 = ADD 0x20 0x20
0x799: V505 = 0x0
0x79b: V506 = SHA3 0x0 0x40
0x79c: V507 = 0x0
0x7a0: V508 = S[V506]
0x7a1: V509 = SUB V508 V149
0x7a7: S[V506] = V509
0x7aa: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bf: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x7c1: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d6: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x7d7: V514 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7f9: V515 = 0x40
0x7fb: V516 = M[0x40]
0x7ff: M[V516] = V149
0x800: V517 = 0x20
0x802: V518 = ADD 0x20 V516
0x806: V519 = 0x40
0x808: V520 = M[0x40]
0x80b: V521 = SUB V518 V520
0x80d: LOG V520 V521 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V513 V511
0x80e: V522 = 0x1
0x812: V523 = 0x820
0x815: JUMP 0x820
---
Entry stack: [V10, 0x224, V141, V146, V149, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x224, V141, V146, V149, 0x1]

================================

Block 0x816
[0x816:0x81e]
---
Predecessors: [0x67f]
Successors: [0x820]
---
0x816 JUMPDEST
0x817 PUSH1 0x0
0x819 SWAP1
0x81a POP
0x81b PUSH2 0x820
0x81e JUMP
---
0x816: JUMPDEST 
0x817: V524 = 0x0
0x81b: V525 = 0x820
0x81e: JUMP 0x820
---
Entry stack: [V10, 0x224, V141, V146, V149, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x224, V141, V146, V149, 0x0]

================================

Block 0x81f
[0x81f:0x81f]
---
Predecessors: []
Successors: [0x820]
---
0x81f JUMPDEST
---
0x81f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x820
[0x820:0x826]
---
Predecessors: [0x685, 0x816, 0x81f]
Successors: [0x224]
---
0x820 JUMPDEST
0x821 SWAP4
0x822 SWAP3
0x823 POP
0x824 POP
0x825 POP
0x826 JUMP
---
0x820: JUMPDEST 
0x826: JUMP 0x224
---
Entry stack: [V10, 0x224, V141, V146, V149, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x827
[0x827:0x839]
---
Predecessors: [0x249]
Successors: [0x251]
---
0x827 JUMPDEST
0x828 PUSH1 0x2
0x82a PUSH1 0x0
0x82c SWAP1
0x82d SLOAD
0x82e SWAP1
0x82f PUSH2 0x100
0x832 EXP
0x833 SWAP1
0x834 DIV
0x835 PUSH1 0xff
0x837 AND
0x838 DUP2
0x839 JUMP
---
0x827: JUMPDEST 
0x828: V526 = 0x2
0x82a: V527 = 0x0
0x82d: V528 = S[0x2]
0x82f: V529 = 0x100
0x832: V530 = EXP 0x100 0x0
0x834: V531 = DIV V528 0x1
0x835: V532 = 0xff
0x837: V533 = AND 0xff V531
0x839: JUMP 0x251
---
Entry stack: [V10, 0x251]
Stack pops: 1
Stack additions: [S0, V533]
Exit stack: [V10, 0x251, V533]

================================

Block 0x83a
[0x83a:0x87e]
---
Predecessors: [0x278]
Successors: [0x87f]
---
0x83a JUMPDEST
0x83b PUSH1 0x0
0x83d PUSH1 0x4
0x83f PUSH1 0x0
0x841 DUP4
0x842 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x857 AND
0x858 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86d AND
0x86e DUP2
0x86f MSTORE
0x870 PUSH1 0x20
0x872 ADD
0x873 SWAP1
0x874 DUP2
0x875 MSTORE
0x876 PUSH1 0x20
0x878 ADD
0x879 PUSH1 0x0
0x87b SHA3
0x87c SLOAD
0x87d SWAP1
0x87e POP
---
0x83a: JUMPDEST 
0x83b: V534 = 0x0
0x83d: V535 = 0x4
0x83f: V536 = 0x0
0x842: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x857: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x858: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x86d: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x86f: M[0x0] = V540
0x870: V541 = 0x20
0x872: V542 = ADD 0x20 0x0
0x875: M[0x20] = 0x4
0x876: V543 = 0x20
0x878: V544 = ADD 0x20 0x20
0x879: V545 = 0x0
0x87b: V546 = SHA3 0x0 0x40
0x87c: V547 = S[V546]
---
Entry stack: [V10, 0x2a4, V189]
Stack pops: 1
Stack additions: [S0, V547]
Exit stack: [V10, 0x2a4, V189, V547]

================================

Block 0x87f
[0x87f:0x883]
---
Predecessors: [0x83a]
Successors: [0x2a4]
---
0x87f JUMPDEST
0x880 SWAP2
0x881 SWAP1
0x882 POP
0x883 JUMP
---
0x87f: JUMPDEST 
0x883: JUMP 0x2a4
---
Entry stack: [V10, 0x2a4, V189, V547]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V547]

================================

Block 0x884
[0x884:0x8d3]
---
Predecessors: [0x2c5]
Successors: [0x8d4, 0x91a]
---
0x884 JUMPDEST
0x885 PUSH1 0x3
0x887 DUP1
0x888 SLOAD
0x889 PUSH1 0x1
0x88b DUP2
0x88c PUSH1 0x1
0x88e AND
0x88f ISZERO
0x890 PUSH2 0x100
0x893 MUL
0x894 SUB
0x895 AND
0x896 PUSH1 0x2
0x898 SWAP1
0x899 DIV
0x89a DUP1
0x89b PUSH1 0x1f
0x89d ADD
0x89e PUSH1 0x20
0x8a0 DUP1
0x8a1 SWAP2
0x8a2 DIV
0x8a3 MUL
0x8a4 PUSH1 0x20
0x8a6 ADD
0x8a7 PUSH1 0x40
0x8a9 MLOAD
0x8aa SWAP1
0x8ab DUP2
0x8ac ADD
0x8ad PUSH1 0x40
0x8af MSTORE
0x8b0 DUP1
0x8b1 SWAP3
0x8b2 SWAP2
0x8b3 SWAP1
0x8b4 DUP2
0x8b5 DUP2
0x8b6 MSTORE
0x8b7 PUSH1 0x20
0x8b9 ADD
0x8ba DUP3
0x8bb DUP1
0x8bc SLOAD
0x8bd PUSH1 0x1
0x8bf DUP2
0x8c0 PUSH1 0x1
0x8c2 AND
0x8c3 ISZERO
0x8c4 PUSH2 0x100
0x8c7 MUL
0x8c8 SUB
0x8c9 AND
0x8ca PUSH1 0x2
0x8cc SWAP1
0x8cd DIV
0x8ce DUP1
0x8cf ISZERO
0x8d0 PUSH2 0x91a
0x8d3 JUMPI
---
0x884: JUMPDEST 
0x885: V548 = 0x3
0x888: V549 = S[0x3]
0x889: V550 = 0x1
0x88c: V551 = 0x1
0x88e: V552 = AND 0x1 V549
0x88f: V553 = ISZERO V552
0x890: V554 = 0x100
0x893: V555 = MUL 0x100 V553
0x894: V556 = SUB V555 0x1
0x895: V557 = AND V556 V549
0x896: V558 = 0x2
0x899: V559 = DIV V557 0x2
0x89b: V560 = 0x1f
0x89d: V561 = ADD 0x1f V559
0x89e: V562 = 0x20
0x8a2: V563 = DIV V561 0x20
0x8a3: V564 = MUL V563 0x20
0x8a4: V565 = 0x20
0x8a6: V566 = ADD 0x20 V564
0x8a7: V567 = 0x40
0x8a9: V568 = M[0x40]
0x8ac: V569 = ADD V568 V566
0x8ad: V570 = 0x40
0x8af: M[0x40] = V569
0x8b6: M[V568] = V559
0x8b7: V571 = 0x20
0x8b9: V572 = ADD 0x20 V568
0x8bc: V573 = S[0x3]
0x8bd: V574 = 0x1
0x8c0: V575 = 0x1
0x8c2: V576 = AND 0x1 V573
0x8c3: V577 = ISZERO V576
0x8c4: V578 = 0x100
0x8c7: V579 = MUL 0x100 V577
0x8c8: V580 = SUB V579 0x1
0x8c9: V581 = AND V580 V573
0x8ca: V582 = 0x2
0x8cd: V583 = DIV V581 0x2
0x8cf: V584 = ISZERO V583
0x8d0: V585 = 0x91a
0x8d3: JUMPI 0x91a V584
---
Entry stack: [V10, 0x2cd]
Stack pops: 0
Stack additions: [V568, 0x3, V559, V572, 0x3, V583]
Exit stack: [V10, 0x2cd, V568, 0x3, V559, V572, 0x3, V583]

================================

Block 0x8d4
[0x8d4:0x8db]
---
Predecessors: [0x884]
Successors: [0x8dc, 0x8ef]
---
0x8d4 DUP1
0x8d5 PUSH1 0x1f
0x8d7 LT
0x8d8 PUSH2 0x8ef
0x8db JUMPI
---
0x8d5: V586 = 0x1f
0x8d7: V587 = LT 0x1f V583
0x8d8: V588 = 0x8ef
0x8db: JUMPI 0x8ef V587
---
Entry stack: [V10, 0x2cd, V568, 0x3, V559, V572, 0x3, V583]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2cd, V568, 0x3, V559, V572, 0x3, V583]

================================

Block 0x8dc
[0x8dc:0x8ee]
---
Predecessors: [0x8d4]
Successors: [0x91a]
---
0x8dc PUSH2 0x100
0x8df DUP1
0x8e0 DUP4
0x8e1 SLOAD
0x8e2 DIV
0x8e3 MUL
0x8e4 DUP4
0x8e5 MSTORE
0x8e6 SWAP2
0x8e7 PUSH1 0x20
0x8e9 ADD
0x8ea SWAP2
0x8eb PUSH2 0x91a
0x8ee JUMP
---
0x8dc: V589 = 0x100
0x8e1: V590 = S[0x3]
0x8e2: V591 = DIV V590 0x100
0x8e3: V592 = MUL V591 0x100
0x8e5: M[V572] = V592
0x8e7: V593 = 0x20
0x8e9: V594 = ADD 0x20 V572
0x8eb: V595 = 0x91a
0x8ee: JUMP 0x91a
---
Entry stack: [V10, 0x2cd, V568, 0x3, V559, V572, 0x3, V583]
Stack pops: 3
Stack additions: [V594, S1, S0]
Exit stack: [V10, 0x2cd, V568, 0x3, V559, V594, 0x3, V583]

================================

Block 0x8ef
[0x8ef:0x8fc]
---
Predecessors: [0x8d4]
Successors: [0x8fd]
---
0x8ef JUMPDEST
0x8f0 DUP3
0x8f1 ADD
0x8f2 SWAP2
0x8f3 SWAP1
0x8f4 PUSH1 0x0
0x8f6 MSTORE
0x8f7 PUSH1 0x20
0x8f9 PUSH1 0x0
0x8fb SHA3
0x8fc SWAP1
---
0x8ef: JUMPDEST 
0x8f1: V596 = ADD V572 V583
0x8f4: V597 = 0x0
0x8f6: M[0x0] = 0x3
0x8f7: V598 = 0x20
0x8f9: V599 = 0x0
0x8fb: V600 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x2cd, V568, 0x3, V559, V572, 0x3, V583]
Stack pops: 3
Stack additions: [V596, V600, S2]
Exit stack: [V10, 0x2cd, V568, 0x3, V559, V596, V600, V572]

================================

Block 0x8fd
[0x8fd:0x910]
---
Predecessors: [0x8ef, 0x8fd]
Successors: [0x8fd, 0x911]
---
0x8fd JUMPDEST
0x8fe DUP2
0x8ff SLOAD
0x900 DUP2
0x901 MSTORE
0x902 SWAP1
0x903 PUSH1 0x1
0x905 ADD
0x906 SWAP1
0x907 PUSH1 0x20
0x909 ADD
0x90a DUP1
0x90b DUP4
0x90c GT
0x90d PUSH2 0x8fd
0x910 JUMPI
---
0x8fd: JUMPDEST 
0x8ff: V601 = S[S1]
0x901: M[S0] = V601
0x903: V602 = 0x1
0x905: V603 = ADD 0x1 S1
0x907: V604 = 0x20
0x909: V605 = ADD 0x20 S0
0x90c: V606 = GT V596 V605
0x90d: V607 = 0x8fd
0x910: JUMPI 0x8fd V606
---
Entry stack: [V10, 0x2cd, V568, 0x3, V559, V596, S1, S0]
Stack pops: 3
Stack additions: [S2, V603, V605]
Exit stack: [V10, 0x2cd, V568, 0x3, V559, V596, V603, V605]

================================

Block 0x911
[0x911:0x919]
---
Predecessors: [0x8fd]
Successors: [0x91a]
---
0x911 DUP3
0x912 SWAP1
0x913 SUB
0x914 PUSH1 0x1f
0x916 AND
0x917 DUP3
0x918 ADD
0x919 SWAP2
---
0x913: V608 = SUB V605 V596
0x914: V609 = 0x1f
0x916: V610 = AND 0x1f V608
0x918: V611 = ADD V596 V610
---
Entry stack: [V10, 0x2cd, V568, 0x3, V559, V596, V603, V605]
Stack pops: 3
Stack additions: [V611, S1, S2]
Exit stack: [V10, 0x2cd, V568, 0x3, V559, V611, V603, V596]

================================

Block 0x91a
[0x91a:0x921]
---
Predecessors: [0x884, 0x8dc, 0x911]
Successors: [0x2cd]
---
0x91a JUMPDEST
0x91b POP
0x91c POP
0x91d POP
0x91e POP
0x91f POP
0x920 DUP2
0x921 JUMP
---
0x91a: JUMPDEST 
0x921: JUMP 0x2cd
---
Entry stack: [V10, 0x2cd, V568, 0x3, V559, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x2cd, V568]

================================

Block 0x922
[0x922:0x96d]
---
Predecessors: [0x354]
Successors: [0x96e, 0x973]
---
0x922 JUMPDEST
0x923 PUSH1 0x0
0x925 DUP2
0x926 PUSH1 0x4
0x928 PUSH1 0x0
0x92a CALLER
0x92b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x940 AND
0x941 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x956 AND
0x957 DUP2
0x958 MSTORE
0x959 PUSH1 0x20
0x95b ADD
0x95c SWAP1
0x95d DUP2
0x95e MSTORE
0x95f PUSH1 0x20
0x961 ADD
0x962 PUSH1 0x0
0x964 SHA3
0x965 SLOAD
0x966 LT
0x967 ISZERO
0x968 DUP1
0x969 ISZERO
0x96a PUSH2 0x973
0x96d JUMPI
---
0x922: JUMPDEST 
0x923: V612 = 0x0
0x926: V613 = 0x4
0x928: V614 = 0x0
0x92a: V615 = CALLER
0x92b: V616 = 0xffffffffffffffffffffffffffffffffffffffff
0x940: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0x941: V618 = 0xffffffffffffffffffffffffffffffffffffffff
0x956: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0x958: M[0x0] = V619
0x959: V620 = 0x20
0x95b: V621 = ADD 0x20 0x0
0x95e: M[0x20] = 0x4
0x95f: V622 = 0x20
0x961: V623 = ADD 0x20 0x20
0x962: V624 = 0x0
0x964: V625 = SHA3 0x0 0x40
0x965: V626 = S[V625]
0x966: V627 = LT V626 V258
0x967: V628 = ISZERO V627
0x969: V629 = ISZERO V628
0x96a: V630 = 0x973
0x96d: JUMPI 0x973 V629
---
Entry stack: [V10, 0x389, V255, V258]
Stack pops: 1
Stack additions: [S0, 0x0, V628]
Exit stack: [V10, 0x389, V255, V258, 0x0, V628]

================================

Block 0x96e
[0x96e:0x972]
---
Predecessors: [0x922]
Successors: [0x973]
---
0x96e POP
0x96f PUSH1 0x0
0x971 DUP3
0x972 GT
---
0x96f: V631 = 0x0
0x972: V632 = GT V258 0x0
---
Entry stack: [V10, 0x389, V255, V258, 0x0, V628]
Stack pops: 3
Stack additions: [S2, S1, V632]
Exit stack: [V10, 0x389, V255, V258, 0x0, V632]

================================

Block 0x973
[0x973:0x978]
---
Predecessors: [0x922, 0x96e]
Successors: [0x979, 0xa80]
---
0x973 JUMPDEST
0x974 ISZERO
0x975 PUSH2 0xa80
0x978 JUMPI
---
0x973: JUMPDEST 
0x974: V633 = ISZERO S0
0x975: V634 = 0xa80
0x978: JUMPI 0xa80 V633
---
Entry stack: [V10, 0x389, V255, V258, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x389, V255, V258, 0x0]

================================

Block 0x979
[0x979:0xa7f]
---
Predecessors: [0x973]
Successors: [0xa8a]
---
0x979 DUP2
0x97a PUSH1 0x4
0x97c PUSH1 0x0
0x97e CALLER
0x97f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x994 AND
0x995 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9aa AND
0x9ab DUP2
0x9ac MSTORE
0x9ad PUSH1 0x20
0x9af ADD
0x9b0 SWAP1
0x9b1 DUP2
0x9b2 MSTORE
0x9b3 PUSH1 0x20
0x9b5 ADD
0x9b6 PUSH1 0x0
0x9b8 SHA3
0x9b9 PUSH1 0x0
0x9bb DUP3
0x9bc DUP3
0x9bd SLOAD
0x9be SUB
0x9bf SWAP3
0x9c0 POP
0x9c1 POP
0x9c2 DUP2
0x9c3 SWAP1
0x9c4 SSTORE
0x9c5 POP
0x9c6 DUP2
0x9c7 PUSH1 0x4
0x9c9 PUSH1 0x0
0x9cb DUP6
0x9cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e1 AND
0x9e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f7 AND
0x9f8 DUP2
0x9f9 MSTORE
0x9fa PUSH1 0x20
0x9fc ADD
0x9fd SWAP1
0x9fe DUP2
0x9ff MSTORE
0xa00 PUSH1 0x20
0xa02 ADD
0xa03 PUSH1 0x0
0xa05 SHA3
0xa06 PUSH1 0x0
0xa08 DUP3
0xa09 DUP3
0xa0a SLOAD
0xa0b ADD
0xa0c SWAP3
0xa0d POP
0xa0e POP
0xa0f DUP2
0xa10 SWAP1
0xa11 SSTORE
0xa12 POP
0xa13 DUP3
0xa14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa29 AND
0xa2a CALLER
0xa2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa40 AND
0xa41 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa62 DUP5
0xa63 PUSH1 0x40
0xa65 MLOAD
0xa66 DUP1
0xa67 DUP3
0xa68 DUP2
0xa69 MSTORE
0xa6a PUSH1 0x20
0xa6c ADD
0xa6d SWAP2
0xa6e POP
0xa6f POP
0xa70 PUSH1 0x40
0xa72 MLOAD
0xa73 DUP1
0xa74 SWAP2
0xa75 SUB
0xa76 SWAP1
0xa77 LOG3
0xa78 PUSH1 0x1
0xa7a SWAP1
0xa7b POP
0xa7c PUSH2 0xa8a
0xa7f JUMP
---
0x97a: V635 = 0x4
0x97c: V636 = 0x0
0x97e: V637 = CALLER
0x97f: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x994: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x995: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0x9aa: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x9ac: M[0x0] = V641
0x9ad: V642 = 0x20
0x9af: V643 = ADD 0x20 0x0
0x9b2: M[0x20] = 0x4
0x9b3: V644 = 0x20
0x9b5: V645 = ADD 0x20 0x20
0x9b6: V646 = 0x0
0x9b8: V647 = SHA3 0x0 0x40
0x9b9: V648 = 0x0
0x9bd: V649 = S[V647]
0x9be: V650 = SUB V649 V258
0x9c4: S[V647] = V650
0x9c7: V651 = 0x4
0x9c9: V652 = 0x0
0x9cc: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e1: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x9e2: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f7: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x9f9: M[0x0] = V656
0x9fa: V657 = 0x20
0x9fc: V658 = ADD 0x20 0x0
0x9ff: M[0x20] = 0x4
0xa00: V659 = 0x20
0xa02: V660 = ADD 0x20 0x20
0xa03: V661 = 0x0
0xa05: V662 = SHA3 0x0 0x40
0xa06: V663 = 0x0
0xa0a: V664 = S[V662]
0xa0b: V665 = ADD V664 V258
0xa11: S[V662] = V665
0xa14: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xa29: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0xa2a: V668 = CALLER
0xa2b: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0xa40: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0xa41: V671 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa63: V672 = 0x40
0xa65: V673 = M[0x40]
0xa69: M[V673] = V258
0xa6a: V674 = 0x20
0xa6c: V675 = ADD 0x20 V673
0xa70: V676 = 0x40
0xa72: V677 = M[0x40]
0xa75: V678 = SUB V675 V677
0xa77: LOG V677 V678 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V670 V667
0xa78: V679 = 0x1
0xa7c: V680 = 0xa8a
0xa7f: JUMP 0xa8a
---
Entry stack: [V10, 0x389, V255, V258, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x389, V255, V258, 0x1]

================================

Block 0xa80
[0xa80:0xa88]
---
Predecessors: [0x973]
Successors: [0xa8a]
---
0xa80 JUMPDEST
0xa81 PUSH1 0x0
0xa83 SWAP1
0xa84 POP
0xa85 PUSH2 0xa8a
0xa88 JUMP
---
0xa80: JUMPDEST 
0xa81: V681 = 0x0
0xa85: V682 = 0xa8a
0xa88: JUMP 0xa8a
---
Entry stack: [V10, 0x389, V255, V258, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x389, V255, V258, 0x0]

================================

Block 0xa89
[0xa89:0xa89]
---
Predecessors: []
Successors: [0xa8a]
---
0xa89 JUMPDEST
---
0xa89: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa8a
[0xa8a:0xa8f]
---
Predecessors: [0x979, 0xa80, 0xa89]
Successors: [0x389]
---
0xa8a JUMPDEST
0xa8b SWAP3
0xa8c SWAP2
0xa8d POP
0xa8e POP
0xa8f JUMP
---
0xa8a: JUMPDEST 
0xa8f: JUMP 0x389
---
Entry stack: [V10, 0x389, V255, V258, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xa90
[0xa90:0xb11]
---
Predecessors: [0x3ae]
Successors: [0xb12]
---
0xa90 JUMPDEST
0xa91 PUSH1 0x0
0xa93 PUSH1 0x5
0xa95 PUSH1 0x0
0xa97 DUP5
0xa98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaad AND
0xaae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac3 AND
0xac4 DUP2
0xac5 MSTORE
0xac6 PUSH1 0x20
0xac8 ADD
0xac9 SWAP1
0xaca DUP2
0xacb MSTORE
0xacc PUSH1 0x20
0xace ADD
0xacf PUSH1 0x0
0xad1 SHA3
0xad2 PUSH1 0x0
0xad4 DUP4
0xad5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaea AND
0xaeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb00 AND
0xb01 DUP2
0xb02 MSTORE
0xb03 PUSH1 0x20
0xb05 ADD
0xb06 SWAP1
0xb07 DUP2
0xb08 MSTORE
0xb09 PUSH1 0x20
0xb0b ADD
0xb0c PUSH1 0x0
0xb0e SHA3
0xb0f SLOAD
0xb10 SWAP1
0xb11 POP
---
0xa90: JUMPDEST 
0xa91: V683 = 0x0
0xa93: V684 = 0x5
0xa95: V685 = 0x0
0xa98: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xaad: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0xaae: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xac3: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0xac5: M[0x0] = V689
0xac6: V690 = 0x20
0xac8: V691 = ADD 0x20 0x0
0xacb: M[0x20] = 0x5
0xacc: V692 = 0x20
0xace: V693 = ADD 0x20 0x20
0xacf: V694 = 0x0
0xad1: V695 = SHA3 0x0 0x40
0xad2: V696 = 0x0
0xad5: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xaea: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0xaeb: V699 = 0xffffffffffffffffffffffffffffffffffffffff
0xb00: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0xb02: M[0x0] = V700
0xb03: V701 = 0x20
0xb05: V702 = ADD 0x20 0x0
0xb08: M[0x20] = V695
0xb09: V703 = 0x20
0xb0b: V704 = ADD 0x20 0x20
0xb0c: V705 = 0x0
0xb0e: V706 = SHA3 0x0 0x40
0xb0f: V707 = S[V706]
---
Entry stack: [V10, 0x3f9, V281, V286]
Stack pops: 2
Stack additions: [S1, S0, V707]
Exit stack: [V10, 0x3f9, V281, V286, V707]

================================

Block 0xb12
[0xb12:0xb17]
---
Predecessors: [0xa90]
Successors: [0x3f9]
---
0xb12 JUMPDEST
0xb13 SWAP3
0xb14 SWAP2
0xb15 POP
0xb16 POP
0xb17 JUMP
---
0xb12: JUMPDEST 
0xb17: JUMP 0x3f9
---
Entry stack: [V10, 0x3f9, V281, V286, V707]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V707]

================================

Block 0xb18
[0xb18:0xb4e]
---
Predecessors: []
Successors: []
---
0xb18 STOP
0xb19 LOG1
0xb1a PUSH6 0x627a7a723058
0xb21 SHA3
0xb22 DUP14
0xb23 NUMBER
0xb24 SELFDESTRUCT
0xb25 BLOCKHASH
0xb26 MISSING 0xce
0xb27 LOG4
0xb28 MISSING 0xe2
0xb29 MISSING 0xf7
0xb2a CODECOPY
0xb2b PUSH3 0x246baa
0xb2f MISSING 0xc8
0xb30 MISSING 0xd5
0xb31 LOG1
0xb32 MISSING 0xb5
0xb33 GASLIMIT
0xb34 SLT
0xb35 PUSH25 0x8aba26c907534df8666555610029
---
0xb18: STOP 
0xb19: LOG S0 S1 S2
0xb1a: V708 = 0x627a7a723058
0xb21: V709 = SHA3 0x627a7a723058 S3
0xb23: V710 = NUMBER
0xb24: SELFDESTRUCT V710
0xb25: V711 = BLOCKHASH S0
0xb26: MISSING 0xce
0xb27: LOG S0 S1 S2 S3 S4 S5
0xb28: MISSING 0xe2
0xb29: MISSING 0xf7
0xb2a: CODECOPY S0 S1 S2
0xb2b: V712 = 0x246baa
0xb2f: MISSING 0xc8
0xb30: MISSING 0xd5
0xb31: LOG S0 S1 S2
0xb32: MISSING 0xb5
0xb33: V713 = GASLIMIT
0xb34: V714 = SLT V713 S0
0xb35: V715 = 0x8aba26c907534df8666555610029
---
Entry stack: []
Stack pops: 0
Stack additions: [S16, V709, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V711, 0x246baa, 0x8aba26c907534df8666555610029, V714]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xb3
Exit block: 0x134
Body: 0xb3, 0xba, 0xbe, 0xc6, 0xeb, 0xf4, 0xfc, 0x107, 0x11b, 0x134, 0x40f, 0x45f, 0x467, 0x47a, 0x488, 0x49c, 0x4a5

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x142
Exit block: 0x182
Body: 0x142, 0x149, 0x14d, 0x182, 0x4ad, 0x59a

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x19c
Exit block: 0x1af
Body: 0x19c, 0x1a3, 0x1a7, 0x1af, 0x5a0

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1c5
Exit block: 0x224
Body: 0x1c5, 0x1cc, 0x1d0, 0x224, 0x5a6, 0x5f2, 0x673, 0x67a, 0x67f, 0x685, 0x816, 0x820

Function 4:
Public function signature: 0x313ce567
Entry block: 0x23e
Exit block: 0x251
Body: 0x23e, 0x245, 0x249, 0x251, 0x827

Function 5:
Public function signature: 0x70a08231
Entry block: 0x26d
Exit block: 0x2a4
Body: 0x26d, 0x274, 0x278, 0x2a4, 0x83a, 0x87f

Function 6:
Public function signature: 0x95d89b41
Entry block: 0x2ba
Exit block: 0x33b
Body: 0x2ba, 0x2c1, 0x2c5, 0x2cd, 0x2f2, 0x2fb, 0x303, 0x30e, 0x322, 0x33b, 0x884, 0x8d4, 0x8dc, 0x8ef, 0x8fd, 0x911, 0x91a

Function 7:
Public function signature: 0xa9059cbb
Entry block: 0x349
Exit block: 0x389
Body: 0x349, 0x350, 0x354, 0x389, 0x922, 0x96e, 0x973, 0x979, 0xa80, 0xa8a

Function 8:
Public function signature: 0xdd62ed3e
Entry block: 0x3a3
Exit block: 0x3f9
Body: 0x3a3, 0x3aa, 0x3ae, 0x3f9, 0xa90, 0xb12

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0xb1
Body: 0x97, 0x9e, 0xa2, 0xa3, 0xac, 0xb0, 0xb1

