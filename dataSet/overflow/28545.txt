Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xc668dfd7
0x34 EQ
0x35 PUSH2 0x3e
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xc668dfd7
0x34: V9 = EQ 0xc668dfd7 V7
0x35: V10 = 0x3e
0x38: JUMPI 0x3e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3d]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a PUSH1 0x0
0x3c DUP1
0x3d REVERT
---
0x39: JUMPDEST 
0x3a: V11 = 0x0
0x3d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3e
[0x3e:0x44]
---
Predecessors: [0x0]
Successors: [0x45, 0x49]
---
0x3e JUMPDEST
0x3f CALLVALUE
0x40 ISZERO
0x41 PUSH2 0x49
0x44 JUMPI
---
0x3e: JUMPDEST 
0x3f: V12 = CALLVALUE
0x40: V13 = ISZERO V12
0x41: V14 = 0x49
0x44: JUMPI 0x49 V13
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x45
[0x45:0x48]
---
Predecessors: [0x3e]
Successors: []
---
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x45: V15 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0xbd]
---
Predecessors: [0x3e]
Successors: [0xc0]
---
0x49 JUMPDEST
0x4a PUSH2 0xbe
0x4d PUSH1 0x4
0x4f DUP1
0x50 DUP1
0x51 CALLDATALOAD
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 SWAP1
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d SWAP2
0x6e SWAP1
0x6f DUP1
0x70 CALLDATALOAD
0x71 SWAP1
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP1
0x76 DUP3
0x77 ADD
0x78 DUP1
0x79 CALLDATALOAD
0x7a SWAP1
0x7b PUSH1 0x20
0x7d ADD
0x7e SWAP1
0x7f DUP1
0x80 DUP1
0x81 PUSH1 0x20
0x83 MUL
0x84 PUSH1 0x20
0x86 ADD
0x87 PUSH1 0x40
0x89 MLOAD
0x8a SWAP1
0x8b DUP2
0x8c ADD
0x8d PUSH1 0x40
0x8f MSTORE
0x90 DUP1
0x91 SWAP4
0x92 SWAP3
0x93 SWAP2
0x94 SWAP1
0x95 DUP2
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b DUP4
0x9c DUP4
0x9d PUSH1 0x20
0x9f MUL
0xa0 DUP1
0xa1 DUP3
0xa2 DUP5
0xa3 CALLDATACOPY
0xa4 DUP3
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad SWAP2
0xae SWAP1
0xaf DUP1
0xb0 CALLDATALOAD
0xb1 SWAP1
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP1
0xb6 SWAP2
0xb7 SWAP1
0xb8 POP
0xb9 POP
0xba PUSH2 0xc0
0xbd JUMP
---
0x49: JUMPDEST 
0x4a: V16 = 0xbe
0x4d: V17 = 0x4
0x51: V18 = CALLDATALOAD 0x4
0x52: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x69: V21 = 0x20
0x6b: V22 = ADD 0x20 0x4
0x70: V23 = CALLDATALOAD 0x24
0x72: V24 = 0x20
0x74: V25 = ADD 0x20 0x24
0x77: V26 = ADD 0x4 V23
0x79: V27 = CALLDATALOAD V26
0x7b: V28 = 0x20
0x7d: V29 = ADD 0x20 V26
0x81: V30 = 0x20
0x83: V31 = MUL 0x20 V27
0x84: V32 = 0x20
0x86: V33 = ADD 0x20 V31
0x87: V34 = 0x40
0x89: V35 = M[0x40]
0x8c: V36 = ADD V35 V33
0x8d: V37 = 0x40
0x8f: M[0x40] = V36
0x97: M[V35] = V27
0x98: V38 = 0x20
0x9a: V39 = ADD 0x20 V35
0x9d: V40 = 0x20
0x9f: V41 = MUL 0x20 V27
0xa3: CALLDATACOPY V39 V29 V41
0xa5: V42 = ADD V39 V41
0xb0: V43 = CALLDATALOAD 0x44
0xb2: V44 = 0x20
0xb4: V45 = ADD 0x20 0x44
0xba: V46 = 0xc0
0xbd: JUMP 0xc0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xbe, V20, V35, V43]
Exit stack: [V7, 0xbe, V20, V35, V43]

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: [0x1f3]
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xc0
[0xc0:0xca]
---
Predecessors: [0x49]
Successors: [0xcb]
---
0xc0 JUMPDEST
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 DUP5
0xc5 SWAP2
0xc6 POP
0xc7 PUSH1 0x0
0xc9 SWAP1
0xca POP
---
0xc0: JUMPDEST 
0xc1: V47 = 0x0
0xc7: V48 = 0x0
---
Entry stack: [V7, 0xbe, V20, V35, V43]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x0]
Exit stack: [V7, 0xbe, V20, V35, V43, V20, 0x0]

================================

Block 0xcb
[0xcb:0xd4]
---
Predecessors: [0xc0, 0x1e7]
Successors: [0xd5, 0x1f2]
---
0xcb JUMPDEST
0xcc DUP4
0xcd MLOAD
0xce DUP2
0xcf LT
0xd0 ISZERO
0xd1 PUSH2 0x1f2
0xd4 JUMPI
---
0xcb: JUMPDEST 
0xcd: V49 = M[V35]
0xcf: V50 = LT S0 V49
0xd0: V51 = ISZERO V50
0xd1: V52 = 0x1f2
0xd4: JUMPI 0x1f2 V51
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S0]

================================

Block 0xd5
[0xd5:0xfd]
---
Predecessors: [0xcb]
Successors: [0xfe, 0xff]
---
0xd5 DUP2
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb AND
0xec PUSH4 0x23b872dd
0xf1 CALLER
0xf2 DUP7
0xf3 DUP5
0xf4 DUP2
0xf5 MLOAD
0xf6 DUP2
0xf7 LT
0xf8 ISZERO
0xf9 ISZERO
0xfa PUSH2 0xff
0xfd JUMPI
---
0xd6: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0xec: V55 = 0x23b872dd
0xf1: V56 = CALLER
0xf5: V57 = M[V35]
0xf7: V58 = LT S0 V57
0xf8: V59 = ISZERO V58
0xf9: V60 = ISZERO V59
0xfa: V61 = 0xff
0xfd: JUMPI 0xff V60
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V54, 0x23b872dd, V56, S3, S0]
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S0, V54, 0x23b872dd, V56, V35, S0]

================================

Block 0xfe
[0xfe:0xfe]
---
Predecessors: [0xd5]
Successors: []
---
0xfe INVALID
---
0xfe: INVALID 
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S5, V54, 0x23b872dd, V56, V35, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S5, V54, 0x23b872dd, V56, V35, S0]

================================

Block 0xff
[0xff:0x1c5]
---
Predecessors: [0xd5]
Successors: [0x1c6, 0x1ca]
---
0xff JUMPDEST
0x100 SWAP1
0x101 PUSH1 0x20
0x103 ADD
0x104 SWAP1
0x105 PUSH1 0x20
0x107 MUL
0x108 ADD
0x109 MLOAD
0x10a DUP7
0x10b PUSH1 0x0
0x10d PUSH1 0x40
0x10f MLOAD
0x110 PUSH1 0x20
0x112 ADD
0x113 MSTORE
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP5
0x118 PUSH4 0xffffffff
0x11d AND
0x11e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x13c MUL
0x13d DUP2
0x13e MSTORE
0x13f PUSH1 0x4
0x141 ADD
0x142 DUP1
0x143 DUP5
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f AND
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x20
0x174 ADD
0x175 DUP4
0x176 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18b AND
0x18c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a1 AND
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 DUP3
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad SWAP4
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 PUSH1 0x20
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP1
0x1b8 DUP4
0x1b9 SUB
0x1ba DUP2
0x1bb PUSH1 0x0
0x1bd DUP8
0x1be DUP1
0x1bf EXTCODESIZE
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0xff: JUMPDEST 
0x101: V62 = 0x20
0x103: V63 = ADD 0x20 V35
0x105: V64 = 0x20
0x107: V65 = MUL 0x20 S0
0x108: V66 = ADD V65 V63
0x109: V67 = M[V66]
0x10b: V68 = 0x0
0x10d: V69 = 0x40
0x10f: V70 = M[0x40]
0x110: V71 = 0x20
0x112: V72 = ADD 0x20 V70
0x113: M[V72] = 0x0
0x114: V73 = 0x40
0x116: V74 = M[0x40]
0x118: V75 = 0xffffffff
0x11d: V76 = AND 0xffffffff 0x23b872dd
0x11e: V77 = 0x100000000000000000000000000000000000000000000000000000000
0x13c: V78 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x13e: M[V74] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x13f: V79 = 0x4
0x141: V80 = ADD 0x4 V74
0x144: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x15a: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x171: M[V80] = V84
0x172: V85 = 0x20
0x174: V86 = ADD 0x20 V80
0x176: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x18c: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a1: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x1a3: M[V86] = V90
0x1a4: V91 = 0x20
0x1a6: V92 = ADD 0x20 V86
0x1a9: M[V92] = V43
0x1aa: V93 = 0x20
0x1ac: V94 = ADD 0x20 V92
0x1b2: V95 = 0x20
0x1b4: V96 = 0x40
0x1b6: V97 = M[0x40]
0x1b9: V98 = SUB V94 V97
0x1bb: V99 = 0x0
0x1bf: V100 = EXTCODESIZE V54
0x1c0: V101 = ISZERO V100
0x1c1: V102 = ISZERO V101
0x1c2: V103 = 0x1ca
0x1c5: JUMPI 0x1ca V102
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S5, V54, 0x23b872dd, V56, V35, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V94, 0x20, V97, V98, V97, 0x0, S4]
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S5, V54, 0x23b872dd, V94, 0x20, V97, V98, V97, 0x0, V54]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0xff]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V104 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S9, V54, 0x23b872dd, V94, 0x20, V97, V98, V97, 0x0, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S9, V54, 0x23b872dd, V94, 0x20, V97, V98, V97, 0x0, V54]

================================

Block 0x1ca
[0x1ca:0x1d6]
---
Predecessors: [0xff]
Successors: [0x1d7, 0x1db]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x2c6
0x1ce GAS
0x1cf SUB
0x1d0 CALL
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V105 = 0x2c6
0x1ce: V106 = GAS
0x1cf: V107 = SUB V106 0x2c6
0x1d0: V108 = CALL V107 V54 0x0 V97 V98 V97 0x20
0x1d1: V109 = ISZERO V108
0x1d2: V110 = ISZERO V109
0x1d3: V111 = 0x1db
0x1d6: JUMPI 0x1db V110
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S9, V54, 0x23b872dd, V94, 0x20, V97, V98, V97, 0x0, V54]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S9, V54, 0x23b872dd, V94]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V112 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S3, V54, 0x23b872dd, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S3, V54, 0x23b872dd, V94]

================================

Block 0x1db
[0x1db:0x1e6]
---
Predecessors: [0x1ca]
Successors: [0x1e7]
---
0x1db JUMPDEST
0x1dc POP
0x1dd POP
0x1de POP
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 MLOAD
0x1e4 SWAP1
0x1e5 POP
0x1e6 POP
---
0x1db: JUMPDEST 
0x1df: V113 = 0x40
0x1e1: V114 = M[0x40]
0x1e3: V115 = M[V114]
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S3, V54, 0x23b872dd, V94]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S3]

================================

Block 0x1e7
[0x1e7:0x1f1]
---
Predecessors: [0x1db]
Successors: [0xcb]
---
0x1e7 JUMPDEST
0x1e8 DUP1
0x1e9 PUSH1 0x1
0x1eb ADD
0x1ec SWAP1
0x1ed POP
0x1ee PUSH2 0xcb
0x1f1 JUMP
---
0x1e7: JUMPDEST 
0x1e9: V116 = 0x1
0x1eb: V117 = ADD 0x1 S0
0x1ee: V118 = 0xcb
0x1f1: JUMP 0xcb
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S0]
Stack pops: 1
Stack additions: [V117]
Exit stack: [V7, 0xbe, V20, V35, V43, V20, V117]

================================

Block 0x1f2
[0x1f2:0x1f2]
---
Predecessors: [0xcb]
Successors: [0x1f3]
---
0x1f2 JUMPDEST
---
0x1f2: JUMPDEST 
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xbe, V20, V35, V43, V20, S0]

================================

Block 0x1f3
[0x1f3:0x1f9]
---
Predecessors: [0x1f2]
Successors: [0xbe]
---
0x1f3 JUMPDEST
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 JUMP
---
0x1f3: JUMPDEST 
0x1f9: JUMP 0xbe
---
Entry stack: [V7, 0xbe, V20, V35, V43, V20, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V7]

================================

Block 0x1fa
[0x1fa:0x239]
---
Predecessors: []
Successors: []
---
0x1fa STOP
0x1fb LOG1
0x1fc PUSH6 0x627a7a723058
0x203 SHA3
0x204 MISSING 0x49
0x205 MISSING 0x4f
0x206 MISSING 0xc2
0x207 MISSING 0xcb
0x208 MISSING 0x2a
0x209 SELFDESTRUCT
0x20a DIFFICULTY
0x20b BLOCKHASH
0x20c MISSING 0xe9
0x20d PUSH3 0xb9d71f
0x211 PUSH8 0x19a9e5fa8beb2514
0x21a REVERT
0x21b LOG2
0x21c SWAP16
0x21d PUSH28 0x2e146305d9570029
---
0x1fa: STOP 
0x1fb: LOG S0 S1 S2
0x1fc: V119 = 0x627a7a723058
0x203: V120 = SHA3 0x627a7a723058 S3
0x204: MISSING 0x49
0x205: MISSING 0x4f
0x206: MISSING 0xc2
0x207: MISSING 0xcb
0x208: MISSING 0x2a
0x209: SELFDESTRUCT S0
0x20a: V121 = DIFFICULTY
0x20b: V122 = BLOCKHASH V121
0x20c: MISSING 0xe9
0x20d: V123 = 0xb9d71f
0x211: V124 = 0x19a9e5fa8beb2514
0x21a: REVERT 0x19a9e5fa8beb2514 0xb9d71f
0x21b: LOG S0 S1 S2 S3
0x21d: V125 = 0x2e146305d9570029
---
Entry stack: []
Stack pops: 0
Stack additions: [V120, V122, 0x2e146305d9570029, S20, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S4]
Exit stack: []

================================

Function 0:
Public function signature: 0xc668dfd7
Entry block: 0x3e
Exit block: 0x1d7
Body: 0x3e, 0x45, 0x49, 0xbe, 0xc0, 0xcb, 0xd5, 0xfe, 0xff, 0x1c6, 0x1ca, 0x1d7, 0x1db, 0x1e7, 0x1f2, 0x1f3

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

