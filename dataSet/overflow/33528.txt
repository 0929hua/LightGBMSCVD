Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x41c0e1b5
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x41c0e1b5
0x3c: V13 = EQ 0x41c0e1b5 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x71]
---
0x41 DUP1
0x42 PUSH4 0xa4136862
0x47 EQ
0x48 PUSH2 0x71
0x4b JUMPI
---
0x42: V15 = 0xa4136862
0x47: V16 = EQ 0xa4136862 V11
0x48: V17 = 0x71
0x4b: JUMPI 0x71 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xce]
---
0x4c DUP1
0x4d PUSH4 0xcfae3217
0x52 EQ
0x53 PUSH2 0xce
0x56 JUMPI
---
0x4d: V18 = 0xcfae3217
0x52: V19 = EQ 0xcfae3217 V11
0x53: V20 = 0xce
0x56: JUMPI 0xce V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x15c]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x15c
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x15c
0x6e: JUMP 0x15c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0x70]
---
Predecessors: [0x1eb]
Successors: []
---
0x6f JUMPDEST
0x70 STOP
---
0x6f: JUMPDEST 
0x70: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x77]
---
Predecessors: [0x41]
Successors: [0x78, 0x7c]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 ISZERO
0x74 PUSH2 0x7c
0x77 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x73: V29 = ISZERO V28
0x74: V30 = 0x7c
0x77: JUMPI 0x7c V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7b]
---
Predecessors: [0x71]
Successors: []
---
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x78: V31 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0xcb]
---
Predecessors: [0x71]
Successors: [0x1ed]
---
0x7c JUMPDEST
0x7d PUSH2 0xcc
0x80 PUSH1 0x4
0x82 DUP1
0x83 DUP1
0x84 CALLDATALOAD
0x85 SWAP1
0x86 PUSH1 0x20
0x88 ADD
0x89 SWAP1
0x8a DUP3
0x8b ADD
0x8c DUP1
0x8d CALLDATALOAD
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 DUP1
0x94 DUP1
0x95 PUSH1 0x1f
0x97 ADD
0x98 PUSH1 0x20
0x9a DUP1
0x9b SWAP2
0x9c DIV
0x9d MUL
0x9e PUSH1 0x20
0xa0 ADD
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 SWAP1
0xa5 DUP2
0xa6 ADD
0xa7 PUSH1 0x40
0xa9 MSTORE
0xaa DUP1
0xab SWAP4
0xac SWAP3
0xad SWAP2
0xae SWAP1
0xaf DUP2
0xb0 DUP2
0xb1 MSTORE
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 DUP4
0xb6 DUP4
0xb7 DUP1
0xb8 DUP3
0xb9 DUP5
0xba CALLDATACOPY
0xbb DUP3
0xbc ADD
0xbd SWAP2
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 SWAP2
0xc5 SWAP1
0xc6 POP
0xc7 POP
0xc8 PUSH2 0x1ed
0xcb JUMP
---
0x7c: JUMPDEST 
0x7d: V32 = 0xcc
0x80: V33 = 0x4
0x84: V34 = CALLDATALOAD 0x4
0x86: V35 = 0x20
0x88: V36 = ADD 0x20 0x4
0x8b: V37 = ADD 0x4 V34
0x8d: V38 = CALLDATALOAD V37
0x8f: V39 = 0x20
0x91: V40 = ADD 0x20 V37
0x95: V41 = 0x1f
0x97: V42 = ADD 0x1f V38
0x98: V43 = 0x20
0x9c: V44 = DIV V42 0x20
0x9d: V45 = MUL V44 0x20
0x9e: V46 = 0x20
0xa0: V47 = ADD 0x20 V45
0xa1: V48 = 0x40
0xa3: V49 = M[0x40]
0xa6: V50 = ADD V49 V47
0xa7: V51 = 0x40
0xa9: M[0x40] = V50
0xb1: M[V49] = V38
0xb2: V52 = 0x20
0xb4: V53 = ADD 0x20 V49
0xba: CALLDATACOPY V53 V40 V38
0xbc: V54 = ADD V53 V38
0xc8: V55 = 0x1ed
0xcb: JUMP 0x1ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcc, V49]
Exit stack: [V11, 0xcc, V49]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0x203]
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x4c]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V56 = CALLVALUE
0xd0: V57 = ISZERO V56
0xd1: V58 = 0xd9
0xd4: JUMPI 0xd9 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V59 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0xce]
Successors: [0x207]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x207
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V60 = 0xe1
0xdd: V61 = 0x207
0xe0: JUMP 0x207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0x105]
---
Predecessors: [0x2a5]
Successors: [0x106]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 DUP1
0xe7 PUSH1 0x20
0xe9 ADD
0xea DUP3
0xeb DUP2
0xec SUB
0xed DUP3
0xee MSTORE
0xef DUP4
0xf0 DUP2
0xf1 DUP2
0xf2 MLOAD
0xf3 DUP2
0xf4 MSTORE
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP2
0xf9 POP
0xfa DUP1
0xfb MLOAD
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 DUP1
0x102 DUP4
0x103 DUP4
0x104 PUSH1 0x0
---
0xe1: JUMPDEST 
0xe2: V62 = 0x40
0xe4: V63 = M[0x40]
0xe7: V64 = 0x20
0xe9: V65 = ADD 0x20 V63
0xec: V66 = SUB V65 V63
0xee: M[V63] = V66
0xf2: V67 = M[V155]
0xf4: M[V65] = V67
0xf5: V68 = 0x20
0xf7: V69 = ADD 0x20 V65
0xfb: V70 = M[V155]
0xfd: V71 = 0x20
0xff: V72 = ADD 0x20 V155
0x104: V73 = 0x0
---
Entry stack: [V11, V155]
Stack pops: 1
Stack additions: [S0, V63, V63, V69, V72, V70, V70, V69, V72, 0x0]
Exit stack: [V11, V155, V63, V63, V69, V72, V70, V70, V69, V72, 0x0]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xe1, 0x10f]
Successors: [0x10f, 0x121]
---
0x106 JUMPDEST
0x107 DUP4
0x108 DUP2
0x109 LT
0x10a ISZERO
0x10b PUSH2 0x121
0x10e JUMPI
---
0x106: JUMPDEST 
0x109: V74 = LT S0 V70
0x10a: V75 = ISZERO V74
0x10b: V76 = 0x121
0x10e: JUMPI 0x121 V75
---
Entry stack: [V11, V155, V63, V63, V69, V72, V70, V70, V69, V72, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V155, V63, V63, V69, V72, V70, V70, V69, V72, S0]

================================

Block 0x10f
[0x10f:0x120]
---
Predecessors: [0x106]
Successors: [0x106]
---
0x10f DUP1
0x110 DUP3
0x111 ADD
0x112 MLOAD
0x113 DUP2
0x114 DUP5
0x115 ADD
0x116 MSTORE
0x117 PUSH1 0x20
0x119 DUP2
0x11a ADD
0x11b SWAP1
0x11c POP
0x11d PUSH2 0x106
0x120 JUMP
---
0x111: V77 = ADD V72 S0
0x112: V78 = M[V77]
0x115: V79 = ADD V69 S0
0x116: M[V79] = V78
0x117: V80 = 0x20
0x11a: V81 = ADD S0 0x20
0x11d: V82 = 0x106
0x120: JUMP 0x106
---
Entry stack: [V11, V155, V63, V63, V69, V72, V70, V70, V69, V72, S0]
Stack pops: 3
Stack additions: [S2, S1, V81]
Exit stack: [V11, V155, V63, V63, V69, V72, V70, V70, V69, V72, V81]

================================

Block 0x121
[0x121:0x134]
---
Predecessors: [0x106]
Successors: [0x135, 0x14e]
---
0x121 JUMPDEST
0x122 POP
0x123 POP
0x124 POP
0x125 POP
0x126 SWAP1
0x127 POP
0x128 SWAP1
0x129 DUP2
0x12a ADD
0x12b SWAP1
0x12c PUSH1 0x1f
0x12e AND
0x12f DUP1
0x130 ISZERO
0x131 PUSH2 0x14e
0x134 JUMPI
---
0x121: JUMPDEST 
0x12a: V83 = ADD V70 V69
0x12c: V84 = 0x1f
0x12e: V85 = AND 0x1f V70
0x130: V86 = ISZERO V85
0x131: V87 = 0x14e
0x134: JUMPI 0x14e V86
---
Entry stack: [V11, V155, V63, V63, V69, V72, V70, V70, V69, V72, S0]
Stack pops: 7
Stack additions: [V83, V85]
Exit stack: [V11, V155, V63, V63, V83, V85]

================================

Block 0x135
[0x135:0x14d]
---
Predecessors: [0x121]
Successors: [0x14e]
---
0x135 DUP1
0x136 DUP3
0x137 SUB
0x138 DUP1
0x139 MLOAD
0x13a PUSH1 0x1
0x13c DUP4
0x13d PUSH1 0x20
0x13f SUB
0x140 PUSH2 0x100
0x143 EXP
0x144 SUB
0x145 NOT
0x146 AND
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP2
0x14d POP
---
0x137: V88 = SUB V83 V85
0x139: V89 = M[V88]
0x13a: V90 = 0x1
0x13d: V91 = 0x20
0x13f: V92 = SUB 0x20 V85
0x140: V93 = 0x100
0x143: V94 = EXP 0x100 V92
0x144: V95 = SUB V94 0x1
0x145: V96 = NOT V95
0x146: V97 = AND V96 V89
0x148: M[V88] = V97
0x149: V98 = 0x20
0x14b: V99 = ADD 0x20 V88
---
Entry stack: [V11, V155, V63, V63, V83, V85]
Stack pops: 2
Stack additions: [V99, S0]
Exit stack: [V11, V155, V63, V63, V99, V85]

================================

Block 0x14e
[0x14e:0x15b]
---
Predecessors: [0x121, 0x135]
Successors: []
---
0x14e JUMPDEST
0x14f POP
0x150 SWAP3
0x151 POP
0x152 POP
0x153 POP
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 SWAP2
0x159 SUB
0x15a SWAP1
0x15b RETURN
---
0x14e: JUMPDEST 
0x154: V100 = 0x40
0x156: V101 = M[0x40]
0x159: V102 = SUB S1 V101
0x15b: RETURN V101 V102
---
Entry stack: [V11, V155, V63, V63, S1, V85]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x1b1]
---
Predecessors: [0x67]
Successors: [0x1b2, 0x1eb]
---
0x15c JUMPDEST
0x15d PUSH1 0x0
0x15f DUP1
0x160 SWAP1
0x161 SLOAD
0x162 SWAP1
0x163 PUSH2 0x100
0x166 EXP
0x167 SWAP1
0x168 DIV
0x169 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17e AND
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 AND
0x195 CALLER
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac EQ
0x1ad ISZERO
0x1ae PUSH2 0x1eb
0x1b1 JUMPI
---
0x15c: JUMPDEST 
0x15d: V103 = 0x0
0x161: V104 = S[0x0]
0x163: V105 = 0x100
0x166: V106 = EXP 0x100 0x0
0x168: V107 = DIV V104 0x1
0x169: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x17f: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x195: V112 = CALLER
0x196: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1ac: V115 = EQ V114 V111
0x1ad: V116 = ISZERO V115
0x1ae: V117 = 0x1eb
0x1b1: JUMPI 0x1eb V116
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x1b2
[0x1b2:0x1ea]
---
Predecessors: [0x15c]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 SWAP1
0x1b6 SLOAD
0x1b7 SWAP1
0x1b8 PUSH2 0x100
0x1bb EXP
0x1bc SWAP1
0x1bd DIV
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea SELFDESTRUCT
---
0x1b2: V118 = 0x0
0x1b6: V119 = S[0x0]
0x1b8: V120 = 0x100
0x1bb: V121 = EXP 0x100 0x0
0x1bd: V122 = DIV V119 0x1
0x1be: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1d4: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1ea: SELFDESTRUCT V126
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x1eb
[0x1eb:0x1ec]
---
Predecessors: [0x15c]
Successors: [0x6f]
---
0x1eb JUMPDEST
0x1ec JUMP
---
0x1eb: JUMPDEST 
0x1ec: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ed
[0x1ed:0x202]
---
Predecessors: [0x7c]
Successors: [0x2af]
---
0x1ed JUMPDEST
0x1ee DUP1
0x1ef PUSH1 0x1
0x1f1 SWAP1
0x1f2 DUP1
0x1f3 MLOAD
0x1f4 SWAP1
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP1
0x1f9 PUSH2 0x203
0x1fc SWAP3
0x1fd SWAP2
0x1fe SWAP1
0x1ff PUSH2 0x2af
0x202 JUMP
---
0x1ed: JUMPDEST 
0x1ef: V127 = 0x1
0x1f3: V128 = M[V49]
0x1f5: V129 = 0x20
0x1f7: V130 = ADD 0x20 V49
0x1f9: V131 = 0x203
0x1ff: V132 = 0x2af
0x202: JUMP 0x2af
---
Entry stack: [V11, 0xcc, V49]
Stack pops: 1
Stack additions: [S0, 0x203, 0x1, V130, V128]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V130, V128]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x32b]
Successors: [0xcc]
---
0x203 JUMPDEST
0x204 POP
0x205 POP
0x206 JUMP
---
0x203: JUMPDEST 
0x206: JUMP 0xcc
---
Entry stack: [V11, 0xcc, V49, 0x1]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0xd9]
Successors: [0x32f]
---
0x207 JUMPDEST
0x208 PUSH2 0x20f
0x20b PUSH2 0x32f
0x20e JUMP
---
0x207: JUMPDEST 
0x208: V133 = 0x20f
0x20b: V134 = 0x32f
0x20e: JUMP 0x32f
---
Entry stack: [V11, 0xe1]
Stack pops: 0
Stack additions: [0x20f]
Exit stack: [V11, 0xe1, 0x20f]

================================

Block 0x20f
[0x20f:0x25e]
---
Predecessors: [0x32f]
Successors: [0x25f, 0x2a5]
---
0x20f JUMPDEST
0x210 PUSH1 0x1
0x212 DUP1
0x213 SLOAD
0x214 PUSH1 0x1
0x216 DUP2
0x217 PUSH1 0x1
0x219 AND
0x21a ISZERO
0x21b PUSH2 0x100
0x21e MUL
0x21f SUB
0x220 AND
0x221 PUSH1 0x2
0x223 SWAP1
0x224 DIV
0x225 DUP1
0x226 PUSH1 0x1f
0x228 ADD
0x229 PUSH1 0x20
0x22b DUP1
0x22c SWAP2
0x22d DIV
0x22e MUL
0x22f PUSH1 0x20
0x231 ADD
0x232 PUSH1 0x40
0x234 MLOAD
0x235 SWAP1
0x236 DUP2
0x237 ADD
0x238 PUSH1 0x40
0x23a MSTORE
0x23b DUP1
0x23c SWAP3
0x23d SWAP2
0x23e SWAP1
0x23f DUP2
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 DUP3
0x246 DUP1
0x247 SLOAD
0x248 PUSH1 0x1
0x24a DUP2
0x24b PUSH1 0x1
0x24d AND
0x24e ISZERO
0x24f PUSH2 0x100
0x252 MUL
0x253 SUB
0x254 AND
0x255 PUSH1 0x2
0x257 SWAP1
0x258 DIV
0x259 DUP1
0x25a ISZERO
0x25b PUSH2 0x2a5
0x25e JUMPI
---
0x20f: JUMPDEST 
0x210: V135 = 0x1
0x213: V136 = S[0x1]
0x214: V137 = 0x1
0x217: V138 = 0x1
0x219: V139 = AND 0x1 V136
0x21a: V140 = ISZERO V139
0x21b: V141 = 0x100
0x21e: V142 = MUL 0x100 V140
0x21f: V143 = SUB V142 0x1
0x220: V144 = AND V143 V136
0x221: V145 = 0x2
0x224: V146 = DIV V144 0x2
0x226: V147 = 0x1f
0x228: V148 = ADD 0x1f V146
0x229: V149 = 0x20
0x22d: V150 = DIV V148 0x20
0x22e: V151 = MUL V150 0x20
0x22f: V152 = 0x20
0x231: V153 = ADD 0x20 V151
0x232: V154 = 0x40
0x234: V155 = M[0x40]
0x237: V156 = ADD V155 V153
0x238: V157 = 0x40
0x23a: M[0x40] = V156
0x241: M[V155] = V146
0x242: V158 = 0x20
0x244: V159 = ADD 0x20 V155
0x247: V160 = S[0x1]
0x248: V161 = 0x1
0x24b: V162 = 0x1
0x24d: V163 = AND 0x1 V160
0x24e: V164 = ISZERO V163
0x24f: V165 = 0x100
0x252: V166 = MUL 0x100 V164
0x253: V167 = SUB V166 0x1
0x254: V168 = AND V167 V160
0x255: V169 = 0x2
0x258: V170 = DIV V168 0x2
0x25a: V171 = ISZERO V170
0x25b: V172 = 0x2a5
0x25e: JUMPI 0x2a5 V171
---
Entry stack: [V11, 0xe1, V248]
Stack pops: 0
Stack additions: [V155, 0x1, V146, V159, 0x1, V170]
Exit stack: [V11, 0xe1, V248, V155, 0x1, V146, V159, 0x1, V170]

================================

Block 0x25f
[0x25f:0x266]
---
Predecessors: [0x20f]
Successors: [0x267, 0x27a]
---
0x25f DUP1
0x260 PUSH1 0x1f
0x262 LT
0x263 PUSH2 0x27a
0x266 JUMPI
---
0x260: V173 = 0x1f
0x262: V174 = LT 0x1f V170
0x263: V175 = 0x27a
0x266: JUMPI 0x27a V174
---
Entry stack: [V11, 0xe1, V248, V155, 0x1, V146, V159, 0x1, V170]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe1, V248, V155, 0x1, V146, V159, 0x1, V170]

================================

Block 0x267
[0x267:0x279]
---
Predecessors: [0x25f]
Successors: [0x2a5]
---
0x267 PUSH2 0x100
0x26a DUP1
0x26b DUP4
0x26c SLOAD
0x26d DIV
0x26e MUL
0x26f DUP4
0x270 MSTORE
0x271 SWAP2
0x272 PUSH1 0x20
0x274 ADD
0x275 SWAP2
0x276 PUSH2 0x2a5
0x279 JUMP
---
0x267: V176 = 0x100
0x26c: V177 = S[0x1]
0x26d: V178 = DIV V177 0x100
0x26e: V179 = MUL V178 0x100
0x270: M[V159] = V179
0x272: V180 = 0x20
0x274: V181 = ADD 0x20 V159
0x276: V182 = 0x2a5
0x279: JUMP 0x2a5
---
Entry stack: [V11, 0xe1, V248, V155, 0x1, V146, V159, 0x1, V170]
Stack pops: 3
Stack additions: [V181, S1, S0]
Exit stack: [V11, 0xe1, V248, V155, 0x1, V146, V181, 0x1, V170]

================================

Block 0x27a
[0x27a:0x287]
---
Predecessors: [0x25f]
Successors: [0x288]
---
0x27a JUMPDEST
0x27b DUP3
0x27c ADD
0x27d SWAP2
0x27e SWAP1
0x27f PUSH1 0x0
0x281 MSTORE
0x282 PUSH1 0x20
0x284 PUSH1 0x0
0x286 SHA3
0x287 SWAP1
---
0x27a: JUMPDEST 
0x27c: V183 = ADD V159 V170
0x27f: V184 = 0x0
0x281: M[0x0] = 0x1
0x282: V185 = 0x20
0x284: V186 = 0x0
0x286: V187 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xe1, V248, V155, 0x1, V146, V159, 0x1, V170]
Stack pops: 3
Stack additions: [V183, V187, S2]
Exit stack: [V11, 0xe1, V248, V155, 0x1, V146, V183, V187, V159]

================================

Block 0x288
[0x288:0x29b]
---
Predecessors: [0x27a, 0x288]
Successors: [0x288, 0x29c]
---
0x288 JUMPDEST
0x289 DUP2
0x28a SLOAD
0x28b DUP2
0x28c MSTORE
0x28d SWAP1
0x28e PUSH1 0x1
0x290 ADD
0x291 SWAP1
0x292 PUSH1 0x20
0x294 ADD
0x295 DUP1
0x296 DUP4
0x297 GT
0x298 PUSH2 0x288
0x29b JUMPI
---
0x288: JUMPDEST 
0x28a: V188 = S[S1]
0x28c: M[S0] = V188
0x28e: V189 = 0x1
0x290: V190 = ADD 0x1 S1
0x292: V191 = 0x20
0x294: V192 = ADD 0x20 S0
0x297: V193 = GT V183 V192
0x298: V194 = 0x288
0x29b: JUMPI 0x288 V193
---
Entry stack: [V11, 0xe1, V248, V155, 0x1, V146, V183, S1, S0]
Stack pops: 3
Stack additions: [S2, V190, V192]
Exit stack: [V11, 0xe1, V248, V155, 0x1, V146, V183, V190, V192]

================================

Block 0x29c
[0x29c:0x2a4]
---
Predecessors: [0x288]
Successors: [0x2a5]
---
0x29c DUP3
0x29d SWAP1
0x29e SUB
0x29f PUSH1 0x1f
0x2a1 AND
0x2a2 DUP3
0x2a3 ADD
0x2a4 SWAP2
---
0x29e: V195 = SUB V192 V183
0x29f: V196 = 0x1f
0x2a1: V197 = AND 0x1f V195
0x2a3: V198 = ADD V183 V197
---
Entry stack: [V11, 0xe1, V248, V155, 0x1, V146, V183, V190, V192]
Stack pops: 3
Stack additions: [V198, S1, S2]
Exit stack: [V11, 0xe1, V248, V155, 0x1, V146, V198, V190, V183]

================================

Block 0x2a5
[0x2a5:0x2ae]
---
Predecessors: [0x20f, 0x267, 0x29c]
Successors: [0xe1]
---
0x2a5 JUMPDEST
0x2a6 POP
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab SWAP1
0x2ac POP
0x2ad SWAP1
0x2ae JUMP
---
0x2a5: JUMPDEST 
0x2ae: JUMP 0xe1
---
Entry stack: [V11, 0xe1, V248, V155, 0x1, V146, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V155]

================================

Block 0x2af
[0x2af:0x2df]
---
Predecessors: [0x1ed]
Successors: [0x2e0, 0x2f0]
---
0x2af JUMPDEST
0x2b0 DUP3
0x2b1 DUP1
0x2b2 SLOAD
0x2b3 PUSH1 0x1
0x2b5 DUP2
0x2b6 PUSH1 0x1
0x2b8 AND
0x2b9 ISZERO
0x2ba PUSH2 0x100
0x2bd MUL
0x2be SUB
0x2bf AND
0x2c0 PUSH1 0x2
0x2c2 SWAP1
0x2c3 DIV
0x2c4 SWAP1
0x2c5 PUSH1 0x0
0x2c7 MSTORE
0x2c8 PUSH1 0x20
0x2ca PUSH1 0x0
0x2cc SHA3
0x2cd SWAP1
0x2ce PUSH1 0x1f
0x2d0 ADD
0x2d1 PUSH1 0x20
0x2d3 SWAP1
0x2d4 DIV
0x2d5 DUP2
0x2d6 ADD
0x2d7 SWAP3
0x2d8 DUP3
0x2d9 PUSH1 0x1f
0x2db LT
0x2dc PUSH2 0x2f0
0x2df JUMPI
---
0x2af: JUMPDEST 
0x2b2: V199 = S[0x1]
0x2b3: V200 = 0x1
0x2b6: V201 = 0x1
0x2b8: V202 = AND 0x1 V199
0x2b9: V203 = ISZERO V202
0x2ba: V204 = 0x100
0x2bd: V205 = MUL 0x100 V203
0x2be: V206 = SUB V205 0x1
0x2bf: V207 = AND V206 V199
0x2c0: V208 = 0x2
0x2c3: V209 = DIV V207 0x2
0x2c5: V210 = 0x0
0x2c7: M[0x0] = 0x1
0x2c8: V211 = 0x20
0x2ca: V212 = 0x0
0x2cc: V213 = SHA3 0x0 0x20
0x2ce: V214 = 0x1f
0x2d0: V215 = ADD 0x1f V209
0x2d1: V216 = 0x20
0x2d4: V217 = DIV V215 0x20
0x2d6: V218 = ADD V213 V217
0x2d9: V219 = 0x1f
0x2db: V220 = LT 0x1f V128
0x2dc: V221 = 0x2f0
0x2df: JUMPI 0x2f0 V220
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V130, V128]
Stack pops: 3
Stack additions: [S2, V218, S0, V213, S1]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V128, V213, V130]

================================

Block 0x2e0
[0x2e0:0x2ef]
---
Predecessors: [0x2af]
Successors: [0x31e]
---
0x2e0 DUP1
0x2e1 MLOAD
0x2e2 PUSH1 0xff
0x2e4 NOT
0x2e5 AND
0x2e6 DUP4
0x2e7 DUP1
0x2e8 ADD
0x2e9 OR
0x2ea DUP6
0x2eb SSTORE
0x2ec PUSH2 0x31e
0x2ef JUMP
---
0x2e1: V222 = M[V130]
0x2e2: V223 = 0xff
0x2e4: V224 = NOT 0xff
0x2e5: V225 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V222
0x2e8: V226 = ADD V128 V128
0x2e9: V227 = OR V226 V225
0x2eb: S[0x1] = V227
0x2ec: V228 = 0x31e
0x2ef: JUMP 0x31e
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V128, V213, V130]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V128, V213, V130]

================================

Block 0x2f0
[0x2f0:0x2fe]
---
Predecessors: [0x2af]
Successors: [0x2ff, 0x31e]
---
0x2f0 JUMPDEST
0x2f1 DUP3
0x2f2 DUP1
0x2f3 ADD
0x2f4 PUSH1 0x1
0x2f6 ADD
0x2f7 DUP6
0x2f8 SSTORE
0x2f9 DUP3
0x2fa ISZERO
0x2fb PUSH2 0x31e
0x2fe JUMPI
---
0x2f0: JUMPDEST 
0x2f3: V229 = ADD V128 V128
0x2f4: V230 = 0x1
0x2f6: V231 = ADD 0x1 V229
0x2f8: S[0x1] = V231
0x2fa: V232 = ISZERO V128
0x2fb: V233 = 0x31e
0x2fe: JUMPI 0x31e V232
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V128, V213, V130]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V128, V213, V130]

================================

Block 0x2ff
[0x2ff:0x301]
---
Predecessors: [0x2f0]
Successors: [0x302]
---
0x2ff SWAP2
0x300 DUP3
0x301 ADD
---
0x301: V234 = ADD V130 V128
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V128, V213, V130]
Stack pops: 3
Stack additions: [S0, S1, V234]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V130, V213, V234]

================================

Block 0x302
[0x302:0x30a]
---
Predecessors: [0x2ff, 0x30b]
Successors: [0x30b, 0x31d]
---
0x302 JUMPDEST
0x303 DUP3
0x304 DUP2
0x305 GT
0x306 ISZERO
0x307 PUSH2 0x31d
0x30a JUMPI
---
0x302: JUMPDEST 
0x305: V235 = GT V234 S2
0x306: V236 = ISZERO V235
0x307: V237 = 0x31d
0x30a: JUMPI 0x31d V236
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218, S2, S1, V234]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218, S2, S1, V234]

================================

Block 0x30b
[0x30b:0x31c]
---
Predecessors: [0x302]
Successors: [0x302]
---
0x30b DUP3
0x30c MLOAD
0x30d DUP3
0x30e SSTORE
0x30f SWAP2
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP2
0x314 SWAP1
0x315 PUSH1 0x1
0x317 ADD
0x318 SWAP1
0x319 PUSH2 0x302
0x31c JUMP
---
0x30c: V238 = M[S2]
0x30e: S[S1] = V238
0x310: V239 = 0x20
0x312: V240 = ADD 0x20 S2
0x315: V241 = 0x1
0x317: V242 = ADD 0x1 S1
0x319: V243 = 0x302
0x31c: JUMP 0x302
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218, S2, S1, V234]
Stack pops: 3
Stack additions: [V240, V242, S0]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218, V240, V242, V234]

================================

Block 0x31d
[0x31d:0x31d]
---
Predecessors: [0x302]
Successors: [0x31e]
---
0x31d JUMPDEST
---
0x31d: JUMPDEST 
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218, S2, S1, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218, S2, S1, V234]

================================

Block 0x31e
[0x31e:0x32a]
---
Predecessors: [0x2e0, 0x2f0, 0x31d]
Successors: [0x343]
---
0x31e JUMPDEST
0x31f POP
0x320 SWAP1
0x321 POP
0x322 PUSH2 0x32b
0x325 SWAP2
0x326 SWAP1
0x327 PUSH2 0x343
0x32a JUMP
---
0x31e: JUMPDEST 
0x322: V244 = 0x32b
0x327: V245 = 0x343
0x32a: JUMP 0x343
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218, S2, S1, S0]
Stack pops: 4
Stack additions: [0x32b, S3, S1]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, V218, S1]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x365]
Successors: [0x203]
---
0x32b JUMPDEST
0x32c POP
0x32d SWAP1
0x32e JUMP
---
0x32b: JUMPDEST 
0x32e: JUMP 0x203
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, V218]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xcc, V49, 0x1]

================================

Block 0x32f
[0x32f:0x342]
---
Predecessors: [0x207]
Successors: [0x20f]
---
0x32f JUMPDEST
0x330 PUSH1 0x20
0x332 PUSH1 0x40
0x334 MLOAD
0x335 SWAP1
0x336 DUP2
0x337 ADD
0x338 PUSH1 0x40
0x33a MSTORE
0x33b DUP1
0x33c PUSH1 0x0
0x33e DUP2
0x33f MSTORE
0x340 POP
0x341 SWAP1
0x342 JUMP
---
0x32f: JUMPDEST 
0x330: V246 = 0x20
0x332: V247 = 0x40
0x334: V248 = M[0x40]
0x337: V249 = ADD V248 0x20
0x338: V250 = 0x40
0x33a: M[0x40] = V249
0x33c: V251 = 0x0
0x33f: M[V248] = 0x0
0x342: JUMP 0x20f
---
Entry stack: [V11, 0xe1, 0x20f]
Stack pops: 1
Stack additions: [V248]
Exit stack: [V11, 0xe1, V248]

================================

Block 0x343
[0x343:0x348]
---
Predecessors: [0x31e]
Successors: [0x349]
---
0x343 JUMPDEST
0x344 PUSH2 0x365
0x347 SWAP2
0x348 SWAP1
---
0x343: JUMPDEST 
0x344: V252 = 0x365
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, V218, S0]
Stack pops: 2
Stack additions: [0x365, S1, S0]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, 0x365, V218, S0]

================================

Block 0x349
[0x349:0x351]
---
Predecessors: [0x343, 0x352]
Successors: [0x352, 0x361]
---
0x349 JUMPDEST
0x34a DUP1
0x34b DUP3
0x34c GT
0x34d ISZERO
0x34e PUSH2 0x361
0x351 JUMPI
---
0x349: JUMPDEST 
0x34c: V253 = GT V218 S0
0x34d: V254 = ISZERO V253
0x34e: V255 = 0x361
0x351: JUMPI 0x361 V254
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, 0x365, V218, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, 0x365, V218, S0]

================================

Block 0x352
[0x352:0x360]
---
Predecessors: [0x349]
Successors: [0x349]
---
0x352 PUSH1 0x0
0x354 DUP2
0x355 PUSH1 0x0
0x357 SWAP1
0x358 SSTORE
0x359 POP
0x35a PUSH1 0x1
0x35c ADD
0x35d PUSH2 0x349
0x360 JUMP
---
0x352: V256 = 0x0
0x355: V257 = 0x0
0x358: S[S0] = 0x0
0x35a: V258 = 0x1
0x35c: V259 = ADD 0x1 S0
0x35d: V260 = 0x349
0x360: JUMP 0x349
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, 0x365, V218, S0]
Stack pops: 1
Stack additions: [V259]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, 0x365, V218, V259]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x349]
Successors: [0x365]
---
0x361 JUMPDEST
0x362 POP
0x363 SWAP1
0x364 JUMP
---
0x361: JUMPDEST 
0x364: JUMP 0x365
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, 0x365, V218, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, V218]

================================

Block 0x365
[0x365:0x367]
---
Predecessors: [0x361]
Successors: [0x32b]
---
0x365 JUMPDEST
0x366 SWAP1
0x367 JUMP
---
0x365: JUMPDEST 
0x367: JUMP 0x32b
---
Entry stack: [V11, 0xcc, V49, 0x203, 0x1, 0x32b, V218]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xcc, V49, 0x203, 0x1, V218]

================================

Block 0x368
[0x368:0x393]
---
Predecessors: []
Successors: []
---
0x368 STOP
0x369 LOG1
0x36a PUSH6 0x627a7a723058
0x371 SHA3
0x372 MISSING 0xd4
0x373 SDIV
0x374 CREATE
0x375 MISSING 0x5e
0x376 SWAP9
0x377 PUSH12 0x935d7417798e7b84b95a6c78
0x384 MISSING 0x5c
0x385 NUMBER
0x386 SWAP3
0x387 PUSH10 0x143ad02b308b5c5f1429
0x392 STOP
0x393 MISSING 0x29
---
0x368: STOP 
0x369: LOG S0 S1 S2
0x36a: V261 = 0x627a7a723058
0x371: V262 = SHA3 0x627a7a723058 S3
0x372: MISSING 0xd4
0x373: V263 = SDIV S0 S1
0x374: V264 = CREATE V263 S2 S3
0x375: MISSING 0x5e
0x377: V265 = 0x935d7417798e7b84b95a6c78
0x384: MISSING 0x5c
0x385: V266 = NUMBER
0x387: V267 = 0x143ad02b308b5c5f1429
0x392: STOP 
0x393: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V262, V264, 0x935d7417798e7b84b95a6c78, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, 0x143ad02b308b5c5f1429, S2, S0, S1, V266]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x15c, 0x1b2, 0x1eb

Function 1:
Public function signature: 0xa4136862
Entry block: 0x71
Exit block: 0xcc
Body: 0x71, 0x78, 0x7c, 0xcc, 0x1ed, 0x203, 0x2af, 0x2e0, 0x2f0, 0x2ff, 0x302, 0x30b, 0x31d, 0x31e, 0x32b, 0x343, 0x349, 0x352, 0x361, 0x365

Function 2:
Public function signature: 0xcfae3217
Entry block: 0xce
Exit block: 0x14e
Body: 0xce, 0xd5, 0xd9, 0xe1, 0x106, 0x10f, 0x121, 0x135, 0x14e, 0x207, 0x20f, 0x25f, 0x267, 0x27a, 0x288, 0x29c, 0x2a5, 0x32f

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

