Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6b
0xa: JUMPI 0x6b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x32d]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x38af3eed
0x3a EQ
0x3b PUSH2 0x32d
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x38af3eed
0x3a: V12 = EQ 0x38af3eed V10
0x3b: V13 = 0x32d
0x3e: JUMPI 0x32d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x382]
---
0x3f DUP1
0x40 PUSH4 0x70a08231
0x45 EQ
0x46 PUSH2 0x382
0x49 JUMPI
---
0x40: V14 = 0x70a08231
0x45: V15 = EQ 0x70a08231 V10
0x46: V16 = 0x382
0x49: JUMPI 0x382 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x3cf]
---
0x4a DUP1
0x4b PUSH4 0x7b3e5e7b
0x50 EQ
0x51 PUSH2 0x3cf
0x54 JUMPI
---
0x4b: V17 = 0x7b3e5e7b
0x50: V18 = EQ 0x7b3e5e7b V10
0x51: V19 = 0x3cf
0x54: JUMPI 0x3cf V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x3f8]
---
0x55 DUP1
0x56 PUSH4 0xa035b1fe
0x5b EQ
0x5c PUSH2 0x3f8
0x5f JUMPI
---
0x56: V20 = 0xa035b1fe
0x5b: V21 = EQ 0xa035b1fe V10
0x5c: V22 = 0x3f8
0x5f: JUMPI 0x3f8 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x421]
---
0x60 DUP1
0x61 PUSH4 0xd68fac6d
0x66 EQ
0x67 PUSH2 0x421
0x6a JUMPI
---
0x61: V23 = 0xd68fac6d
0x66: V24 = EQ 0xd68fac6d V10
0x67: V25 = 0x421
0x6a: JUMPI 0x421 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x6b]
---
Predecessors: [0x0, 0x60]
Successors: [0x6c]
---
0x6b JUMPDEST
---
0x6b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x118]
---
Predecessors: [0x6b]
Successors: [0x119, 0x11a]
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f CALLVALUE
0x70 SWAP1
0x71 POP
0x72 DUP1
0x73 PUSH1 0x4
0x75 PUSH1 0x0
0x77 CALLER
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 DUP2
0xa5 MSTORE
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 SWAP1
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf PUSH1 0x0
0xb1 SHA3
0xb2 PUSH1 0x0
0xb4 DUP3
0xb5 DUP3
0xb6 SLOAD
0xb7 ADD
0xb8 SWAP3
0xb9 POP
0xba POP
0xbb DUP2
0xbc SWAP1
0xbd SSTORE
0xbe POP
0xbf DUP1
0xc0 PUSH1 0x1
0xc2 PUSH1 0x0
0xc4 DUP3
0xc5 DUP3
0xc6 SLOAD
0xc7 ADD
0xc8 SWAP3
0xc9 POP
0xca POP
0xcb DUP2
0xcc SWAP1
0xcd SSTORE
0xce POP
0xcf PUSH1 0x3
0xd1 PUSH1 0x0
0xd3 SWAP1
0xd4 SLOAD
0xd5 SWAP1
0xd6 PUSH2 0x100
0xd9 EXP
0xda SWAP1
0xdb DIV
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 PUSH4 0xa9059cbb
0x10d CALLER
0x10e PUSH1 0x2
0x110 SLOAD
0x111 DUP5
0x112 DUP2
0x113 ISZERO
0x114 ISZERO
0x115 PUSH2 0x11a
0x118 JUMPI
---
0x6c: JUMPDEST 
0x6d: V26 = 0x0
0x6f: V27 = CALLVALUE
0x73: V28 = 0x4
0x75: V29 = 0x0
0x77: V30 = CALLER
0x78: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8e: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa5: M[0x0] = V34
0xa6: V35 = 0x20
0xa8: V36 = ADD 0x20 0x0
0xab: M[0x20] = 0x4
0xac: V37 = 0x20
0xae: V38 = ADD 0x20 0x20
0xaf: V39 = 0x0
0xb1: V40 = SHA3 0x0 0x40
0xb2: V41 = 0x0
0xb6: V42 = S[V40]
0xb7: V43 = ADD V42 V27
0xbd: S[V40] = V43
0xc0: V44 = 0x1
0xc2: V45 = 0x0
0xc6: V46 = S[0x1]
0xc7: V47 = ADD V46 V27
0xcd: S[0x1] = V47
0xcf: V48 = 0x3
0xd1: V49 = 0x0
0xd4: V50 = S[0x3]
0xd6: V51 = 0x100
0xd9: V52 = EXP 0x100 0x0
0xdb: V53 = DIV V50 0x1
0xdc: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xf2: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x108: V58 = 0xa9059cbb
0x10d: V59 = CALLER
0x10e: V60 = 0x2
0x110: V61 = S[0x2]
0x113: V62 = ISZERO V61
0x114: V63 = ISZERO V62
0x115: V64 = 0x11a
0x118: JUMPI 0x11a V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V27, V57, 0xa9059cbb, V59, V61, V27]
Exit stack: [V10, V27, V57, 0xa9059cbb, V59, V61, V27]

================================

Block 0x119
[0x119:0x119]
---
Predecessors: [0x6c]
Successors: []
---
0x119 INVALID
---
0x119: INVALID 
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V59, V61, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V59, V61, V27]

================================

Block 0x11a
[0x11a:0x19a]
---
Predecessors: [0x6c]
Successors: [0x19b, 0x19f]
---
0x11a JUMPDEST
0x11b DIV
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP4
0x120 PUSH4 0xffffffff
0x125 AND
0x126 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x144 MUL
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x4
0x149 ADD
0x14a DUP1
0x14b DUP4
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 AND
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 DUP2
0x179 MSTORE
0x17a PUSH1 0x20
0x17c ADD
0x17d DUP3
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP3
0x184 POP
0x185 POP
0x186 POP
0x187 PUSH1 0x0
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP1
0x18d DUP4
0x18e SUB
0x18f DUP2
0x190 PUSH1 0x0
0x192 DUP8
0x193 DUP1
0x194 EXTCODESIZE
0x195 ISZERO
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x11a: JUMPDEST 
0x11b: V65 = DIV V27 V61
0x11c: V66 = 0x40
0x11e: V67 = M[0x40]
0x120: V68 = 0xffffffff
0x125: V69 = AND 0xffffffff 0xa9059cbb
0x126: V70 = 0x100000000000000000000000000000000000000000000000000000000
0x144: V71 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x146: M[V67] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x147: V72 = 0x4
0x149: V73 = ADD 0x4 V67
0x14c: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x161: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x162: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x179: M[V73] = V77
0x17a: V78 = 0x20
0x17c: V79 = ADD 0x20 V73
0x17f: M[V79] = V65
0x180: V80 = 0x20
0x182: V81 = ADD 0x20 V79
0x187: V82 = 0x0
0x189: V83 = 0x40
0x18b: V84 = M[0x40]
0x18e: V85 = SUB V81 V84
0x190: V86 = 0x0
0x194: V87 = EXTCODESIZE V57
0x195: V88 = ISZERO V87
0x196: V89 = ISZERO V88
0x197: V90 = 0x19f
0x19a: JUMPI 0x19f V89
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V59, V61, V27]
Stack pops: 5
Stack additions: [S4, S3, V81, 0x0, V84, V85, V84, 0x0, S4]
Exit stack: [V10, V27, V57, 0xa9059cbb, V81, 0x0, V84, V85, V84, 0x0, V57]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x11a]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V91 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V81, 0x0, V84, V85, V84, 0x0, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V81, 0x0, V84, V85, V84, 0x0, V57]

================================

Block 0x19f
[0x19f:0x1ab]
---
Predecessors: [0x11a]
Successors: [0x1ac, 0x1b0]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x2c6
0x1a3 GAS
0x1a4 SUB
0x1a5 CALL
0x1a6 ISZERO
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x19f: JUMPDEST 
0x1a0: V92 = 0x2c6
0x1a3: V93 = GAS
0x1a4: V94 = SUB V93 0x2c6
0x1a5: V95 = CALL V94 V57 0x0 V84 V85 V84 0x0
0x1a6: V96 = ISZERO V95
0x1a7: V97 = ISZERO V96
0x1a8: V98 = 0x1b0
0x1ab: JUMPI 0x1b0 V97
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V81, 0x0, V84, V85, V84, 0x0, V57]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V81]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x19f]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V99 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V81]

================================

Block 0x1b0
[0x1b0:0x288]
---
Predecessors: [0x19f]
Successors: [0x289, 0x328]
---
0x1b0 JUMPDEST
0x1b1 POP
0x1b2 POP
0x1b3 POP
0x1b4 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d5 CALLER
0x1d6 DUP3
0x1d7 PUSH1 0x1
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd DUP5
0x1de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f3 AND
0x1f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x209 AND
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x20
0x20e ADD
0x20f DUP4
0x210 DUP2
0x211 MSTORE
0x212 PUSH1 0x20
0x214 ADD
0x215 DUP3
0x216 ISZERO
0x217 ISZERO
0x218 ISZERO
0x219 ISZERO
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e ADD
0x21f SWAP4
0x220 POP
0x221 POP
0x222 POP
0x223 POP
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b LOG1
0x22c PUSH1 0x0
0x22e DUP1
0x22f SWAP1
0x230 SLOAD
0x231 SWAP1
0x232 PUSH2 0x100
0x235 EXP
0x236 SWAP1
0x237 DIV
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 PUSH2 0x8fc
0x267 PUSH1 0x1
0x269 SLOAD
0x26a SWAP1
0x26b DUP2
0x26c ISZERO
0x26d MUL
0x26e SWAP1
0x26f PUSH1 0x40
0x271 MLOAD
0x272 PUSH1 0x0
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 DUP4
0x279 SUB
0x27a DUP2
0x27b DUP6
0x27c DUP9
0x27d DUP9
0x27e CALL
0x27f SWAP4
0x280 POP
0x281 POP
0x282 POP
0x283 POP
0x284 ISZERO
0x285 PUSH2 0x328
0x288 JUMPI
---
0x1b0: JUMPDEST 
0x1b4: V100 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d5: V101 = CALLER
0x1d7: V102 = 0x1
0x1d9: V103 = 0x40
0x1db: V104 = M[0x40]
0x1de: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1f4: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x209: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x20b: M[V104] = V108
0x20c: V109 = 0x20
0x20e: V110 = ADD 0x20 V104
0x211: M[V110] = V27
0x212: V111 = 0x20
0x214: V112 = ADD 0x20 V110
0x216: V113 = ISZERO 0x1
0x217: V114 = ISZERO 0x0
0x218: V115 = ISZERO 0x1
0x219: V116 = ISZERO 0x0
0x21b: M[V112] = 0x1
0x21c: V117 = 0x20
0x21e: V118 = ADD 0x20 V112
0x224: V119 = 0x40
0x226: V120 = M[0x40]
0x229: V121 = SUB V118 V120
0x22b: LOG V120 V121 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22c: V122 = 0x0
0x230: V123 = S[0x0]
0x232: V124 = 0x100
0x235: V125 = EXP 0x100 0x0
0x237: V126 = DIV V123 0x1
0x238: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x24e: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x264: V131 = 0x8fc
0x267: V132 = 0x1
0x269: V133 = S[0x1]
0x26c: V134 = ISZERO V133
0x26d: V135 = MUL V134 0x8fc
0x26f: V136 = 0x40
0x271: V137 = M[0x40]
0x272: V138 = 0x0
0x274: V139 = 0x40
0x276: V140 = M[0x40]
0x279: V141 = SUB V137 V140
0x27e: V142 = CALL V135 V130 V133 V140 V141 V140 0x0
0x284: V143 = ISZERO V142
0x285: V144 = 0x328
0x288: JUMPI 0x328 V143
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V81]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, V27]

================================

Block 0x289
[0x289:0x327]
---
Predecessors: [0x1b0]
Successors: [0x329]
---
0x289 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad SWAP1
0x2ae SLOAD
0x2af SWAP1
0x2b0 PUSH2 0x100
0x2b3 EXP
0x2b4 SWAP1
0x2b5 DIV
0x2b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cb AND
0x2cc PUSH1 0x1
0x2ce SLOAD
0x2cf PUSH1 0x0
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP1
0x2d5 DUP5
0x2d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2eb AND
0x2ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x301 AND
0x302 DUP2
0x303 MSTORE
0x304 PUSH1 0x20
0x306 ADD
0x307 DUP4
0x308 DUP2
0x309 MSTORE
0x30a PUSH1 0x20
0x30c ADD
0x30d DUP3
0x30e ISZERO
0x30f ISZERO
0x310 ISZERO
0x311 ISZERO
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x20
0x316 ADD
0x317 SWAP4
0x318 POP
0x319 POP
0x31a POP
0x31b POP
0x31c PUSH1 0x40
0x31e MLOAD
0x31f DUP1
0x320 SWAP2
0x321 SUB
0x322 SWAP1
0x323 LOG1
0x324 PUSH2 0x329
0x327 JUMP
---
0x289: V145 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2aa: V146 = 0x0
0x2ae: V147 = S[0x0]
0x2b0: V148 = 0x100
0x2b3: V149 = EXP 0x100 0x0
0x2b5: V150 = DIV V147 0x1
0x2b6: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2cc: V153 = 0x1
0x2ce: V154 = S[0x1]
0x2cf: V155 = 0x0
0x2d1: V156 = 0x40
0x2d3: V157 = M[0x40]
0x2d6: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2ec: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x301: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x303: M[V157] = V161
0x304: V162 = 0x20
0x306: V163 = ADD 0x20 V157
0x309: M[V163] = V154
0x30a: V164 = 0x20
0x30c: V165 = ADD 0x20 V163
0x30e: V166 = ISZERO 0x0
0x30f: V167 = ISZERO 0x1
0x310: V168 = ISZERO 0x0
0x311: V169 = ISZERO 0x1
0x313: M[V165] = 0x0
0x314: V170 = 0x20
0x316: V171 = ADD 0x20 V165
0x31c: V172 = 0x40
0x31e: V173 = M[0x40]
0x321: V174 = SUB V171 V173
0x323: LOG V173 V174 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x324: V175 = 0x329
0x327: JUMP 0x329
---
Entry stack: [V10, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27]

================================

Block 0x328
[0x328:0x328]
---
Predecessors: [0x1b0]
Successors: [0x329]
---
0x328 JUMPDEST
---
0x328: JUMPDEST 
---
Entry stack: [V10, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27]

================================

Block 0x329
[0x329:0x329]
---
Predecessors: [0x289, 0x328]
Successors: [0x32a]
---
0x329 JUMPDEST
---
0x329: JUMPDEST 
---
Entry stack: [V10, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27]

================================

Block 0x32a
[0x32a:0x32c]
---
Predecessors: [0x329]
Successors: []
---
0x32a JUMPDEST
0x32b POP
0x32c STOP
---
0x32a: JUMPDEST 
0x32c: STOP 
---
Entry stack: [V10, V27]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x32d
[0x32d:0x333]
---
Predecessors: [0xb]
Successors: [0x334, 0x338]
---
0x32d JUMPDEST
0x32e CALLVALUE
0x32f ISZERO
0x330 PUSH2 0x338
0x333 JUMPI
---
0x32d: JUMPDEST 
0x32e: V176 = CALLVALUE
0x32f: V177 = ISZERO V176
0x330: V178 = 0x338
0x333: JUMPI 0x338 V177
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x32d]
Successors: []
---
0x334 PUSH1 0x0
0x336 DUP1
0x337 REVERT
---
0x334: V179 = 0x0
0x337: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x338
[0x338:0x33f]
---
Predecessors: [0x32d]
Successors: [0x476]
---
0x338 JUMPDEST
0x339 PUSH2 0x340
0x33c PUSH2 0x476
0x33f JUMP
---
0x338: JUMPDEST 
0x339: V180 = 0x340
0x33c: V181 = 0x476
0x33f: JUMP 0x476
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x340]
Exit stack: [V10, 0x340]

================================

Block 0x340
[0x340:0x381]
---
Predecessors: [0x476]
Successors: []
---
0x340 JUMPDEST
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP1
0x345 DUP3
0x346 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35b AND
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 AND
0x372 DUP2
0x373 MSTORE
0x374 PUSH1 0x20
0x376 ADD
0x377 SWAP2
0x378 POP
0x379 POP
0x37a PUSH1 0x40
0x37c MLOAD
0x37d DUP1
0x37e SWAP2
0x37f SUB
0x380 SWAP1
0x381 RETURN
---
0x340: JUMPDEST 
0x341: V182 = 0x40
0x343: V183 = M[0x40]
0x346: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x35c: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x373: M[V183] = V187
0x374: V188 = 0x20
0x376: V189 = ADD 0x20 V183
0x37a: V190 = 0x40
0x37c: V191 = M[0x40]
0x37f: V192 = SUB V189 V191
0x381: RETURN V191 V192
---
Entry stack: [V10, 0x340, V261]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x340]

================================

Block 0x382
[0x382:0x388]
---
Predecessors: [0x3f]
Successors: [0x389, 0x38d]
---
0x382 JUMPDEST
0x383 CALLVALUE
0x384 ISZERO
0x385 PUSH2 0x38d
0x388 JUMPI
---
0x382: JUMPDEST 
0x383: V193 = CALLVALUE
0x384: V194 = ISZERO V193
0x385: V195 = 0x38d
0x388: JUMPI 0x38d V194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x389
[0x389:0x38c]
---
Predecessors: [0x382]
Successors: []
---
0x389 PUSH1 0x0
0x38b DUP1
0x38c REVERT
---
0x389: V196 = 0x0
0x38c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38d
[0x38d:0x3b8]
---
Predecessors: [0x382]
Successors: [0x49b]
---
0x38d JUMPDEST
0x38e PUSH2 0x3b9
0x391 PUSH1 0x4
0x393 DUP1
0x394 DUP1
0x395 CALLDATALOAD
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac SWAP1
0x3ad PUSH1 0x20
0x3af ADD
0x3b0 SWAP1
0x3b1 SWAP2
0x3b2 SWAP1
0x3b3 POP
0x3b4 POP
0x3b5 PUSH2 0x49b
0x3b8 JUMP
---
0x38d: JUMPDEST 
0x38e: V197 = 0x3b9
0x391: V198 = 0x4
0x395: V199 = CALLDATALOAD 0x4
0x396: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x3ad: V202 = 0x20
0x3af: V203 = ADD 0x20 0x4
0x3b5: V204 = 0x49b
0x3b8: JUMP 0x49b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3b9, V201]
Exit stack: [V10, 0x3b9, V201]

================================

Block 0x3b9
[0x3b9:0x3ce]
---
Predecessors: [0x49b]
Successors: []
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be DUP3
0x3bf DUP2
0x3c0 MSTORE
0x3c1 PUSH1 0x20
0x3c3 ADD
0x3c4 SWAP2
0x3c5 POP
0x3c6 POP
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca DUP1
0x3cb SWAP2
0x3cc SUB
0x3cd SWAP1
0x3ce RETURN
---
0x3b9: JUMPDEST 
0x3ba: V205 = 0x40
0x3bc: V206 = M[0x40]
0x3c0: M[V206] = V269
0x3c1: V207 = 0x20
0x3c3: V208 = ADD 0x20 V206
0x3c7: V209 = 0x40
0x3c9: V210 = M[0x40]
0x3cc: V211 = SUB V208 V210
0x3ce: RETURN V210 V211
---
Entry stack: [V10, 0x3b9, V269]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3b9]

================================

Block 0x3cf
[0x3cf:0x3d5]
---
Predecessors: [0x4a]
Successors: [0x3d6, 0x3da]
---
0x3cf JUMPDEST
0x3d0 CALLVALUE
0x3d1 ISZERO
0x3d2 PUSH2 0x3da
0x3d5 JUMPI
---
0x3cf: JUMPDEST 
0x3d0: V212 = CALLVALUE
0x3d1: V213 = ISZERO V212
0x3d2: V214 = 0x3da
0x3d5: JUMPI 0x3da V213
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d6
[0x3d6:0x3d9]
---
Predecessors: [0x3cf]
Successors: []
---
0x3d6 PUSH1 0x0
0x3d8 DUP1
0x3d9 REVERT
---
0x3d6: V215 = 0x0
0x3d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3da
[0x3da:0x3e1]
---
Predecessors: [0x3cf]
Successors: [0x4b3]
---
0x3da JUMPDEST
0x3db PUSH2 0x3e2
0x3de PUSH2 0x4b3
0x3e1 JUMP
---
0x3da: JUMPDEST 
0x3db: V216 = 0x3e2
0x3de: V217 = 0x4b3
0x3e1: JUMP 0x4b3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3e2]
Exit stack: [V10, 0x3e2]

================================

Block 0x3e2
[0x3e2:0x3f7]
---
Predecessors: [0x4b3]
Successors: []
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 DUP3
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP2
0x3ee POP
0x3ef POP
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 SWAP2
0x3f5 SUB
0x3f6 SWAP1
0x3f7 RETURN
---
0x3e2: JUMPDEST 
0x3e3: V218 = 0x40
0x3e5: V219 = M[0x40]
0x3e9: M[V219] = V271
0x3ea: V220 = 0x20
0x3ec: V221 = ADD 0x20 V219
0x3f0: V222 = 0x40
0x3f2: V223 = M[0x40]
0x3f5: V224 = SUB V221 V223
0x3f7: RETURN V223 V224
---
Entry stack: [V10, 0x3e2, V271]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3e2]

================================

Block 0x3f8
[0x3f8:0x3fe]
---
Predecessors: [0x55]
Successors: [0x3ff, 0x403]
---
0x3f8 JUMPDEST
0x3f9 CALLVALUE
0x3fa ISZERO
0x3fb PUSH2 0x403
0x3fe JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V225 = CALLVALUE
0x3fa: V226 = ISZERO V225
0x3fb: V227 = 0x403
0x3fe: JUMPI 0x403 V226
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ff
[0x3ff:0x402]
---
Predecessors: [0x3f8]
Successors: []
---
0x3ff PUSH1 0x0
0x401 DUP1
0x402 REVERT
---
0x3ff: V228 = 0x0
0x402: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x403
[0x403:0x40a]
---
Predecessors: [0x3f8]
Successors: [0x4b9]
---
0x403 JUMPDEST
0x404 PUSH2 0x40b
0x407 PUSH2 0x4b9
0x40a JUMP
---
0x403: JUMPDEST 
0x404: V229 = 0x40b
0x407: V230 = 0x4b9
0x40a: JUMP 0x4b9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x40b]
Exit stack: [V10, 0x40b]

================================

Block 0x40b
[0x40b:0x420]
---
Predecessors: [0x4b9]
Successors: []
---
0x40b JUMPDEST
0x40c PUSH1 0x40
0x40e MLOAD
0x40f DUP1
0x410 DUP3
0x411 DUP2
0x412 MSTORE
0x413 PUSH1 0x20
0x415 ADD
0x416 SWAP2
0x417 POP
0x418 POP
0x419 PUSH1 0x40
0x41b MLOAD
0x41c DUP1
0x41d SWAP2
0x41e SUB
0x41f SWAP1
0x420 RETURN
---
0x40b: JUMPDEST 
0x40c: V231 = 0x40
0x40e: V232 = M[0x40]
0x412: M[V232] = V273
0x413: V233 = 0x20
0x415: V234 = ADD 0x20 V232
0x419: V235 = 0x40
0x41b: V236 = M[0x40]
0x41e: V237 = SUB V234 V236
0x420: RETURN V236 V237
---
Entry stack: [V10, 0x40b, V273]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x40b]

================================

Block 0x421
[0x421:0x427]
---
Predecessors: [0x60]
Successors: [0x428, 0x42c]
---
0x421 JUMPDEST
0x422 CALLVALUE
0x423 ISZERO
0x424 PUSH2 0x42c
0x427 JUMPI
---
0x421: JUMPDEST 
0x422: V238 = CALLVALUE
0x423: V239 = ISZERO V238
0x424: V240 = 0x42c
0x427: JUMPI 0x42c V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x421]
Successors: []
---
0x428 PUSH1 0x0
0x42a DUP1
0x42b REVERT
---
0x428: V241 = 0x0
0x42b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42c
[0x42c:0x433]
---
Predecessors: [0x421]
Successors: [0x4bf]
---
0x42c JUMPDEST
0x42d PUSH2 0x434
0x430 PUSH2 0x4bf
0x433 JUMP
---
0x42c: JUMPDEST 
0x42d: V242 = 0x434
0x430: V243 = 0x4bf
0x433: JUMP 0x4bf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x434]
Exit stack: [V10, 0x434]

================================

Block 0x434
[0x434:0x475]
---
Predecessors: [0x4bf]
Successors: []
---
0x434 JUMPDEST
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP1
0x439 DUP3
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x465 AND
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x20
0x46a ADD
0x46b SWAP2
0x46c POP
0x46d POP
0x46e PUSH1 0x40
0x470 MLOAD
0x471 DUP1
0x472 SWAP2
0x473 SUB
0x474 SWAP1
0x475 RETURN
---
0x434: JUMPDEST 
0x435: V244 = 0x40
0x437: V245 = M[0x40]
0x43a: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x450: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x465: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x467: M[V245] = V249
0x468: V250 = 0x20
0x46a: V251 = ADD 0x20 V245
0x46e: V252 = 0x40
0x470: V253 = M[0x40]
0x473: V254 = SUB V251 V253
0x475: RETURN V253 V254
---
Entry stack: [V10, 0x434, V281]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x434]

================================

Block 0x476
[0x476:0x49a]
---
Predecessors: [0x338]
Successors: [0x340]
---
0x476 JUMPDEST
0x477 PUSH1 0x0
0x479 DUP1
0x47a SWAP1
0x47b SLOAD
0x47c SWAP1
0x47d PUSH2 0x100
0x480 EXP
0x481 SWAP1
0x482 DIV
0x483 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x498 AND
0x499 DUP2
0x49a JUMP
---
0x476: JUMPDEST 
0x477: V255 = 0x0
0x47b: V256 = S[0x0]
0x47d: V257 = 0x100
0x480: V258 = EXP 0x100 0x0
0x482: V259 = DIV V256 0x1
0x483: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x498: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x49a: JUMP 0x340
---
Entry stack: [V10, 0x340]
Stack pops: 1
Stack additions: [S0, V261]
Exit stack: [V10, 0x340, V261]

================================

Block 0x49b
[0x49b:0x4b2]
---
Predecessors: [0x38d]
Successors: [0x3b9]
---
0x49b JUMPDEST
0x49c PUSH1 0x4
0x49e PUSH1 0x20
0x4a0 MSTORE
0x4a1 DUP1
0x4a2 PUSH1 0x0
0x4a4 MSTORE
0x4a5 PUSH1 0x40
0x4a7 PUSH1 0x0
0x4a9 SHA3
0x4aa PUSH1 0x0
0x4ac SWAP2
0x4ad POP
0x4ae SWAP1
0x4af POP
0x4b0 SLOAD
0x4b1 DUP2
0x4b2 JUMP
---
0x49b: JUMPDEST 
0x49c: V262 = 0x4
0x49e: V263 = 0x20
0x4a0: M[0x20] = 0x4
0x4a2: V264 = 0x0
0x4a4: M[0x0] = V201
0x4a5: V265 = 0x40
0x4a7: V266 = 0x0
0x4a9: V267 = SHA3 0x0 0x40
0x4aa: V268 = 0x0
0x4b0: V269 = S[V267]
0x4b2: JUMP 0x3b9
---
Entry stack: [V10, 0x3b9, V201]
Stack pops: 2
Stack additions: [S1, V269]
Exit stack: [V10, 0x3b9, V269]

================================

Block 0x4b3
[0x4b3:0x4b8]
---
Predecessors: [0x3da]
Successors: [0x3e2]
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0x1
0x4b6 SLOAD
0x4b7 DUP2
0x4b8 JUMP
---
0x4b3: JUMPDEST 
0x4b4: V270 = 0x1
0x4b6: V271 = S[0x1]
0x4b8: JUMP 0x3e2
---
Entry stack: [V10, 0x3e2]
Stack pops: 1
Stack additions: [S0, V271]
Exit stack: [V10, 0x3e2, V271]

================================

Block 0x4b9
[0x4b9:0x4be]
---
Predecessors: [0x403]
Successors: [0x40b]
---
0x4b9 JUMPDEST
0x4ba PUSH1 0x2
0x4bc SLOAD
0x4bd DUP2
0x4be JUMP
---
0x4b9: JUMPDEST 
0x4ba: V272 = 0x2
0x4bc: V273 = S[0x2]
0x4be: JUMP 0x40b
---
Entry stack: [V10, 0x40b]
Stack pops: 1
Stack additions: [S0, V273]
Exit stack: [V10, 0x40b, V273]

================================

Block 0x4bf
[0x4bf:0x4e4]
---
Predecessors: [0x42c]
Successors: [0x434]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x3
0x4c2 PUSH1 0x0
0x4c4 SWAP1
0x4c5 SLOAD
0x4c6 SWAP1
0x4c7 PUSH2 0x100
0x4ca EXP
0x4cb SWAP1
0x4cc DIV
0x4cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e2 AND
0x4e3 DUP2
0x4e4 JUMP
---
0x4bf: JUMPDEST 
0x4c0: V274 = 0x3
0x4c2: V275 = 0x0
0x4c5: V276 = S[0x3]
0x4c7: V277 = 0x100
0x4ca: V278 = EXP 0x100 0x0
0x4cc: V279 = DIV V276 0x1
0x4cd: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x4e4: JUMP 0x434
---
Entry stack: [V10, 0x434]
Stack pops: 1
Stack additions: [S0, V281]
Exit stack: [V10, 0x434, V281]

================================

Block 0x4e5
[0x4e5:0x501]
---
Predecessors: []
Successors: [0x502]
Has unresolved jump.
---
0x4e5 STOP
0x4e6 LOG1
0x4e7 PUSH6 0x627a7a723058
0x4ee SHA3
0x4ef DUP2
0x4f0 PUSH13 0xbacdc8b7c26134ab30fb5ccf06
0x4fe LOG4
0x4ff DIFFICULTY
0x500 MISSING 0xed
0x501 JUMPI
---
0x4e5: STOP 
0x4e6: LOG S0 S1 S2
0x4e7: V282 = 0x627a7a723058
0x4ee: V283 = SHA3 0x627a7a723058 S3
0x4f0: V284 = 0xbacdc8b7c26134ab30fb5ccf06
0x4fe: LOG 0xbacdc8b7c26134ab30fb5ccf06 S4 V283 S4 S5 S6
0x4ff: V285 = DIFFICULTY
0x500: MISSING 0xed
0x501: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V285]
Exit stack: []

================================

Block 0x502
[0x502:0x519]
---
Predecessors: [0x4e5]
Successors: []
---
0x502 PUSH4 0xc4686a4c
0x507 MISSING 0xa8
0x508 DUP16
0x509 MISSING 0xdc
0x50a MISSING 0x49
0x50b PUSH14 0x30c7240029
---
0x502: V286 = 0xc4686a4c
0x507: MISSING 0xa8
0x509: MISSING 0xdc
0x50a: MISSING 0x49
0x50b: V287 = 0x30c7240029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc4686a4c, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x30c7240029]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0x32d
Exit block: 0x340
Body: 0x32d, 0x334, 0x338, 0x340, 0x476

Function 1:
Public function signature: 0x70a08231
Entry block: 0x382
Exit block: 0x3b9
Body: 0x382, 0x389, 0x38d, 0x3b9, 0x49b

Function 2:
Public function signature: 0x7b3e5e7b
Entry block: 0x3cf
Exit block: 0x3e2
Body: 0x3cf, 0x3d6, 0x3da, 0x3e2, 0x4b3

Function 3:
Public function signature: 0xa035b1fe
Entry block: 0x3f8
Exit block: 0x40b
Body: 0x3f8, 0x3ff, 0x403, 0x40b, 0x4b9

Function 4:
Public function signature: 0xd68fac6d
Entry block: 0x421
Exit block: 0x434
Body: 0x421, 0x428, 0x42c, 0x434, 0x4bf

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x32a
Body: 0x6b, 0x6c, 0x119, 0x11a, 0x19b, 0x19f, 0x1ac, 0x1b0, 0x289, 0x328, 0x329, 0x32a

