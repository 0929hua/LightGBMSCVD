Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xe2]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xc250dcd
0x3c EQ
0x3d PUSH2 0xe2
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xc250dcd
0x3c: V13 = EQ 0xc250dcd V11
0x3d: V14 = 0xe2
0x40: JUMPI 0xe2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x109]
---
0x41 DUP1
0x42 PUSH4 0x36c0c834
0x47 EQ
0x48 PUSH2 0x109
0x4b JUMPI
---
0x42: V15 = 0x36c0c834
0x47: V16 = EQ 0x36c0c834 V11
0x48: V17 = 0x109
0x4b: JUMPI 0x109 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x134]
---
0x4c DUP1
0x4d PUSH4 0xa9b6c8bc
0x52 EQ
0x53 PUSH2 0x134
0x56 JUMPI
---
0x4d: V18 = 0xa9b6c8bc
0x52: V19 = EQ 0xa9b6c8bc V11
0x53: V20 = 0x134
0x56: JUMPI 0x134 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1aa]
---
0x57 DUP1
0x58 PUSH4 0xe23a15b5
0x5d EQ
0x5e PUSH2 0x1aa
0x61 JUMPI
---
0x58: V21 = 0xe23a15b5
0x5d: V22 = EQ 0xe23a15b5 V11
0x5e: V23 = 0x1aa
0x61: JUMPI 0x1aa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0xda]
---
Predecessors: [0x0, 0x57]
Successors: [0xdb, 0xdf]
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 ADDRESS
0x66 SWAP1
0x67 POP
0x68 PUSH1 0x0
0x6a DUP1
0x6b SWAP1
0x6c SLOAD
0x6d SWAP1
0x6e PUSH2 0x100
0x71 EXP
0x72 SWAP1
0x73 DIV
0x74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89 AND
0x8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f AND
0xa0 PUSH2 0x8fc
0xa3 DUP3
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba BALANCE
0xbb SWAP1
0xbc DUP2
0xbd ISZERO
0xbe MUL
0xbf SWAP1
0xc0 PUSH1 0x40
0xc2 MLOAD
0xc3 PUSH1 0x0
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 DUP1
0xc9 DUP4
0xca SUB
0xcb DUP2
0xcc DUP6
0xcd DUP9
0xce DUP9
0xcf CALL
0xd0 SWAP4
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 ISZERO
0xd6 ISZERO
0xd7 PUSH2 0xdf
0xda JUMPI
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x65: V25 = ADDRESS
0x68: V26 = 0x0
0x6c: V27 = S[0x0]
0x6e: V28 = 0x100
0x71: V29 = EXP 0x100 0x0
0x73: V30 = DIV V27 0x1
0x74: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x89: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8a: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa0: V35 = 0x8fc
0xa4: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0xba: V38 = BALANCE V37
0xbd: V39 = ISZERO V38
0xbe: V40 = MUL V39 0x8fc
0xc0: V41 = 0x40
0xc2: V42 = M[0x40]
0xc3: V43 = 0x0
0xc5: V44 = 0x40
0xc7: V45 = M[0x40]
0xca: V46 = SUB V42 V45
0xcf: V47 = CALL V40 V34 V38 V45 V46 V45 0x0
0xd5: V48 = ISZERO V47
0xd6: V49 = ISZERO V48
0xd7: V50 = 0xdf
0xda: JUMPI 0xdf V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0xdb
[0xdb:0xde]
---
Predecessors: [0x62]
Successors: []
---
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xdb: V51 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0xdf
[0xdf:0xe1]
---
Predecessors: [0x62]
Successors: []
---
0xdf JUMPDEST
0xe0 POP
0xe1 STOP
---
0xdf: JUMPDEST 
0xe1: STOP 
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0xd]
Successors: [0xe9, 0xed]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V52 = CALLVALUE
0xe4: V53 = ISZERO V52
0xe5: V54 = 0xed
0xe8: JUMPI 0xed V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V55 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xed
[0xed:0x106]
---
Predecessors: [0xe2]
Successors: [0x223]
---
0xed JUMPDEST
0xee PUSH2 0x107
0xf1 PUSH1 0x4
0xf3 DUP1
0xf4 DUP1
0xf5 CALLDATALOAD
0xf6 PUSH1 0x0
0xf8 NOT
0xf9 AND
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff SWAP2
0x100 SWAP1
0x101 POP
0x102 POP
0x103 PUSH2 0x223
0x106 JUMP
---
0xed: JUMPDEST 
0xee: V56 = 0x107
0xf1: V57 = 0x4
0xf5: V58 = CALLDATALOAD 0x4
0xf6: V59 = 0x0
0xf8: V60 = NOT 0x0
0xf9: V61 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V58
0xfb: V62 = 0x20
0xfd: V63 = ADD 0x20 0x4
0x103: V64 = 0x223
0x106: JUMP 0x223
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x107, V61]
Exit stack: [V11, 0x107, V61]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x223]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x131]
---
Predecessors: [0x41]
Successors: [0x244]
---
0x109 JUMPDEST
0x10a PUSH2 0x132
0x10d PUSH1 0x4
0x10f DUP1
0x110 DUP1
0x111 CALLDATALOAD
0x112 PUSH16 0xffffffffffffffffffffffffffffffff
0x123 NOT
0x124 AND
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a SWAP2
0x12b SWAP1
0x12c POP
0x12d POP
0x12e PUSH2 0x244
0x131 JUMP
---
0x109: JUMPDEST 
0x10a: V65 = 0x132
0x10d: V66 = 0x4
0x111: V67 = CALLDATALOAD 0x4
0x112: V68 = 0xffffffffffffffffffffffffffffffff
0x123: V69 = NOT 0xffffffffffffffffffffffffffffffff
0x124: V70 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V67
0x126: V71 = 0x20
0x128: V72 = ADD 0x20 0x4
0x12e: V73 = 0x244
0x131: JUMP 0x244
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x132, V70]
Exit stack: [V11, 0x132, V70]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x3db]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x134
[0x134:0x13a]
---
Predecessors: [0x4c]
Successors: [0x13b, 0x13f]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x134: JUMPDEST 
0x135: V74 = CALLVALUE
0x136: V75 = ISZERO V74
0x137: V76 = 0x13f
0x13a: JUMPI 0x13f V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x134]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V77 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13f
[0x13f:0x167]
---
Predecessors: [0x134]
Successors: [0x3df]
---
0x13f JUMPDEST
0x140 PUSH2 0x168
0x143 PUSH1 0x4
0x145 DUP1
0x146 DUP1
0x147 CALLDATALOAD
0x148 PUSH16 0xffffffffffffffffffffffffffffffff
0x159 NOT
0x15a AND
0x15b SWAP1
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP1
0x160 SWAP2
0x161 SWAP1
0x162 POP
0x163 POP
0x164 PUSH2 0x3df
0x167 JUMP
---
0x13f: JUMPDEST 
0x140: V78 = 0x168
0x143: V79 = 0x4
0x147: V80 = CALLDATALOAD 0x4
0x148: V81 = 0xffffffffffffffffffffffffffffffff
0x159: V82 = NOT 0xffffffffffffffffffffffffffffffff
0x15a: V83 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V80
0x15c: V84 = 0x20
0x15e: V85 = ADD 0x20 0x4
0x164: V86 = 0x3df
0x167: JUMP 0x3df
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x168, V83]
Exit stack: [V11, 0x168, V83]

================================

Block 0x168
[0x168:0x1a9]
---
Predecessors: [0x3df]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP3
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 AND
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP2
0x1a0 POP
0x1a1 POP
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 SWAP2
0x1a7 SUB
0x1a8 SWAP1
0x1a9 RETURN
---
0x168: JUMPDEST 
0x169: V87 = 0x40
0x16b: V88 = M[0x40]
0x16e: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x184: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x19b: M[V88] = V92
0x19c: V93 = 0x20
0x19e: V94 = ADD 0x20 V88
0x1a2: V95 = 0x40
0x1a4: V96 = M[0x40]
0x1a7: V97 = SUB V94 V96
0x1a9: RETURN V96 V97
---
Entry stack: [V11, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1aa
[0x1aa:0x1b0]
---
Predecessors: [0x57]
Successors: [0x1b1, 0x1b5]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac ISZERO
0x1ad PUSH2 0x1b5
0x1b0 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V98 = CALLVALUE
0x1ac: V99 = ISZERO V98
0x1ad: V100 = 0x1b5
0x1b0: JUMPI 0x1b5 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b1
[0x1b1:0x1b4]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 REVERT
---
0x1b1: V101 = 0x0
0x1b4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b5
[0x1b5:0x220]
---
Predecessors: [0x1aa]
Successors: [0x442]
---
0x1b5 JUMPDEST
0x1b6 PUSH2 0x221
0x1b9 PUSH1 0x4
0x1bb DUP1
0x1bc DUP1
0x1bd CALLDATALOAD
0x1be SWAP1
0x1bf PUSH1 0x20
0x1c1 ADD
0x1c2 SWAP1
0x1c3 DUP3
0x1c4 ADD
0x1c5 DUP1
0x1c6 CALLDATALOAD
0x1c7 SWAP1
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb SWAP1
0x1cc DUP1
0x1cd DUP1
0x1ce PUSH1 0x1f
0x1d0 ADD
0x1d1 PUSH1 0x20
0x1d3 DUP1
0x1d4 SWAP2
0x1d5 DIV
0x1d6 MUL
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd SWAP1
0x1de DUP2
0x1df ADD
0x1e0 PUSH1 0x40
0x1e2 MSTORE
0x1e3 DUP1
0x1e4 SWAP4
0x1e5 SWAP3
0x1e6 SWAP2
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee DUP4
0x1ef DUP4
0x1f0 DUP1
0x1f1 DUP3
0x1f2 DUP5
0x1f3 CALLDATACOPY
0x1f4 DUP3
0x1f5 ADD
0x1f6 SWAP2
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc POP
0x1fd SWAP2
0x1fe SWAP1
0x1ff DUP1
0x200 CALLDATALOAD
0x201 PUSH16 0xffffffffffffffffffffffffffffffff
0x212 NOT
0x213 AND
0x214 SWAP1
0x215 PUSH1 0x20
0x217 ADD
0x218 SWAP1
0x219 SWAP2
0x21a SWAP1
0x21b POP
0x21c POP
0x21d PUSH2 0x442
0x220 JUMP
---
0x1b5: JUMPDEST 
0x1b6: V102 = 0x221
0x1b9: V103 = 0x4
0x1bd: V104 = CALLDATALOAD 0x4
0x1bf: V105 = 0x20
0x1c1: V106 = ADD 0x20 0x4
0x1c4: V107 = ADD 0x4 V104
0x1c6: V108 = CALLDATALOAD V107
0x1c8: V109 = 0x20
0x1ca: V110 = ADD 0x20 V107
0x1ce: V111 = 0x1f
0x1d0: V112 = ADD 0x1f V108
0x1d1: V113 = 0x20
0x1d5: V114 = DIV V112 0x20
0x1d6: V115 = MUL V114 0x20
0x1d7: V116 = 0x20
0x1d9: V117 = ADD 0x20 V115
0x1da: V118 = 0x40
0x1dc: V119 = M[0x40]
0x1df: V120 = ADD V119 V117
0x1e0: V121 = 0x40
0x1e2: M[0x40] = V120
0x1ea: M[V119] = V108
0x1eb: V122 = 0x20
0x1ed: V123 = ADD 0x20 V119
0x1f3: CALLDATACOPY V123 V110 V108
0x1f5: V124 = ADD V123 V108
0x200: V125 = CALLDATALOAD 0x24
0x201: V126 = 0xffffffffffffffffffffffffffffffff
0x212: V127 = NOT 0xffffffffffffffffffffffffffffffff
0x213: V128 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V125
0x215: V129 = 0x20
0x217: V130 = ADD 0x20 0x24
0x21d: V131 = 0x442
0x220: JUMP 0x442
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x221, V119, V128]
Exit stack: [V11, 0x221, V119, V128]

================================

Block 0x221
[0x221:0x222]
---
Predecessors: [0x578]
Successors: []
---
0x221 JUMPDEST
0x222 STOP
---
0x221: JUMPDEST 
0x222: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x223
[0x223:0x243]
---
Predecessors: [0xed]
Successors: [0x107]
---
0x223 JUMPDEST
0x224 DUP1
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP1
0x229 DUP3
0x22a PUSH1 0x0
0x22c NOT
0x22d AND
0x22e PUSH1 0x0
0x230 NOT
0x231 AND
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP2
0x238 POP
0x239 POP
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e SWAP2
0x23f SUB
0x240 SWAP1
0x241 LOG0
0x242 POP
0x243 JUMP
---
0x223: JUMPDEST 
0x225: V132 = 0x40
0x227: V133 = M[0x40]
0x22a: V134 = 0x0
0x22c: V135 = NOT 0x0
0x22d: V136 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V61
0x22e: V137 = 0x0
0x230: V138 = NOT 0x0
0x231: V139 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V136
0x233: M[V133] = V139
0x234: V140 = 0x20
0x236: V141 = ADD 0x20 V133
0x23a: V142 = 0x40
0x23c: V143 = M[0x40]
0x23f: V144 = SUB V141 V143
0x241: LOG V143 V144
0x243: JUMP 0x107
---
Entry stack: [V11, 0x107, V61]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x244
[0x244:0x268]
---
Predecessors: [0x109]
Successors: [0x269, 0x2dd]
---
0x244 JUMPDEST
0x245 PUSH1 0x0
0x247 PUSH7 0x38d7ea4c68000
0x24f PUSH16 0xffffffffffffffffffffffffffffffff
0x260 AND
0x261 CALLVALUE
0x262 GT
0x263 DUP1
0x264 ISZERO
0x265 PUSH2 0x2dd
0x268 JUMPI
---
0x244: JUMPDEST 
0x245: V145 = 0x0
0x247: V146 = 0x38d7ea4c68000
0x24f: V147 = 0xffffffffffffffffffffffffffffffff
0x260: V148 = AND 0xffffffffffffffffffffffffffffffff 0x38d7ea4c68000
0x261: V149 = CALLVALUE
0x262: V150 = GT V149 0x38d7ea4c68000
0x264: V151 = ISZERO V150
0x265: V152 = 0x2dd
0x268: JUMPI 0x2dd V151
---
Entry stack: [V11, 0x132, V70]
Stack pops: 0
Stack additions: [0x0, V150]
Exit stack: [V11, 0x132, V70, 0x0, V150]

================================

Block 0x269
[0x269:0x2dc]
---
Predecessors: [0x244]
Successors: [0x2dd]
---
0x269 POP
0x26a PUSH1 0x0
0x26c PUSH1 0x1
0x26e PUSH1 0x0
0x270 DUP5
0x271 PUSH16 0xffffffffffffffffffffffffffffffff
0x282 NOT
0x283 AND
0x284 PUSH16 0xffffffffffffffffffffffffffffffff
0x295 NOT
0x296 AND
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c SWAP1
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 PUSH1 0x0
0x2a4 SHA3
0x2a5 PUSH1 0x0
0x2a7 SWAP1
0x2a8 SLOAD
0x2a9 SWAP1
0x2aa PUSH2 0x100
0x2ad EXP
0x2ae SWAP1
0x2af DIV
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc EQ
---
0x26a: V153 = 0x0
0x26c: V154 = 0x1
0x26e: V155 = 0x0
0x271: V156 = 0xffffffffffffffffffffffffffffffff
0x282: V157 = NOT 0xffffffffffffffffffffffffffffffff
0x283: V158 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V70
0x284: V159 = 0xffffffffffffffffffffffffffffffff
0x295: V160 = NOT 0xffffffffffffffffffffffffffffffff
0x296: V161 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V158
0x298: M[0x0] = V161
0x299: V162 = 0x20
0x29b: V163 = ADD 0x20 0x0
0x29e: M[0x20] = 0x1
0x29f: V164 = 0x20
0x2a1: V165 = ADD 0x20 0x20
0x2a2: V166 = 0x0
0x2a4: V167 = SHA3 0x0 0x40
0x2a5: V168 = 0x0
0x2a8: V169 = S[V167]
0x2aa: V170 = 0x100
0x2ad: V171 = EXP 0x100 0x0
0x2af: V172 = DIV V169 0x1
0x2b0: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2c6: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x2dc: V177 = EQ V176 0x0
---
Entry stack: [V11, 0x132, V70, 0x0, V150]
Stack pops: 3
Stack additions: [S2, S1, V177]
Exit stack: [V11, 0x132, V70, 0x0, V177]

================================

Block 0x2dd
[0x2dd:0x2e3]
---
Predecessors: [0x244, 0x269]
Successors: [0x2e4, 0x2e8]
---
0x2dd JUMPDEST
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x2dd: JUMPDEST 
0x2de: V178 = ISZERO S0
0x2df: V179 = ISZERO V178
0x2e0: V180 = 0x2e8
0x2e3: JUMPI 0x2e8 V179
---
Entry stack: [V11, 0x132, V70, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x132, V70, 0x0]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x2dd]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V181 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V70, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V70, 0x0]

================================

Block 0x2e8
[0x2e8:0x3d6]
---
Predecessors: [0x2dd]
Successors: [0x3d7, 0x3db]
---
0x2e8 JUMPDEST
0x2e9 CALLER
0x2ea PUSH1 0x1
0x2ec PUSH1 0x0
0x2ee DUP5
0x2ef PUSH16 0xffffffffffffffffffffffffffffffff
0x300 NOT
0x301 AND
0x302 PUSH16 0xffffffffffffffffffffffffffffffff
0x313 NOT
0x314 AND
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x20
0x319 ADD
0x31a SWAP1
0x31b DUP2
0x31c MSTORE
0x31d PUSH1 0x20
0x31f ADD
0x320 PUSH1 0x0
0x322 SHA3
0x323 PUSH1 0x0
0x325 PUSH2 0x100
0x328 EXP
0x329 DUP2
0x32a SLOAD
0x32b DUP2
0x32c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x341 MUL
0x342 NOT
0x343 AND
0x344 SWAP1
0x345 DUP4
0x346 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35b AND
0x35c MUL
0x35d OR
0x35e SWAP1
0x35f SSTORE
0x360 POP
0x361 ADDRESS
0x362 SWAP1
0x363 POP
0x364 PUSH1 0x0
0x366 DUP1
0x367 SWAP1
0x368 SLOAD
0x369 SWAP1
0x36a PUSH2 0x100
0x36d EXP
0x36e SWAP1
0x36f DIV
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 AND
0x386 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39b AND
0x39c PUSH2 0x8fc
0x39f DUP3
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 BALANCE
0x3b7 SWAP1
0x3b8 DUP2
0x3b9 ISZERO
0x3ba MUL
0x3bb SWAP1
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf PUSH1 0x0
0x3c1 PUSH1 0x40
0x3c3 MLOAD
0x3c4 DUP1
0x3c5 DUP4
0x3c6 SUB
0x3c7 DUP2
0x3c8 DUP6
0x3c9 DUP9
0x3ca DUP9
0x3cb CALL
0x3cc SWAP4
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 PUSH2 0x3db
0x3d6 JUMPI
---
0x2e8: JUMPDEST 
0x2e9: V182 = CALLER
0x2ea: V183 = 0x1
0x2ec: V184 = 0x0
0x2ef: V185 = 0xffffffffffffffffffffffffffffffff
0x300: V186 = NOT 0xffffffffffffffffffffffffffffffff
0x301: V187 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V70
0x302: V188 = 0xffffffffffffffffffffffffffffffff
0x313: V189 = NOT 0xffffffffffffffffffffffffffffffff
0x314: V190 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V187
0x316: M[0x0] = V190
0x317: V191 = 0x20
0x319: V192 = ADD 0x20 0x0
0x31c: M[0x20] = 0x1
0x31d: V193 = 0x20
0x31f: V194 = ADD 0x20 0x20
0x320: V195 = 0x0
0x322: V196 = SHA3 0x0 0x40
0x323: V197 = 0x0
0x325: V198 = 0x100
0x328: V199 = EXP 0x100 0x0
0x32a: V200 = S[V196]
0x32c: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x341: V202 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x342: V203 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x343: V204 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V200
0x346: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x35c: V207 = MUL V206 0x1
0x35d: V208 = OR V207 V204
0x35f: S[V196] = V208
0x361: V209 = ADDRESS
0x364: V210 = 0x0
0x368: V211 = S[0x0]
0x36a: V212 = 0x100
0x36d: V213 = EXP 0x100 0x0
0x36f: V214 = DIV V211 0x1
0x370: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x386: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x39b: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x39c: V219 = 0x8fc
0x3a0: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x3b6: V222 = BALANCE V221
0x3b9: V223 = ISZERO V222
0x3ba: V224 = MUL V223 0x8fc
0x3bc: V225 = 0x40
0x3be: V226 = M[0x40]
0x3bf: V227 = 0x0
0x3c1: V228 = 0x40
0x3c3: V229 = M[0x40]
0x3c6: V230 = SUB V226 V229
0x3cb: V231 = CALL V224 V218 V222 V229 V230 V229 0x0
0x3d1: V232 = ISZERO V231
0x3d2: V233 = ISZERO V232
0x3d3: V234 = 0x3db
0x3d6: JUMPI 0x3db V233
---
Entry stack: [V11, 0x132, V70, 0x0]
Stack pops: 2
Stack additions: [S1, V209]
Exit stack: [V11, 0x132, V70, V209]

================================

Block 0x3d7
[0x3d7:0x3da]
---
Predecessors: [0x2e8]
Successors: []
---
0x3d7 PUSH1 0x0
0x3d9 DUP1
0x3da REVERT
---
0x3d7: V235 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V70, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V70, V209]

================================

Block 0x3db
[0x3db:0x3de]
---
Predecessors: [0x2e8]
Successors: [0x132]
---
0x3db JUMPDEST
0x3dc POP
0x3dd POP
0x3de JUMP
---
0x3db: JUMPDEST 
0x3de: JUMP 0x132
---
Entry stack: [V11, 0x132, V70, V209]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x3df
[0x3df:0x441]
---
Predecessors: [0x13f]
Successors: [0x168]
---
0x3df JUMPDEST
0x3e0 PUSH1 0x0
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0x0
0x3e6 DUP4
0x3e7 PUSH16 0xffffffffffffffffffffffffffffffff
0x3f8 NOT
0x3f9 AND
0x3fa PUSH16 0xffffffffffffffffffffffffffffffff
0x40b NOT
0x40c AND
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 SWAP1
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x20
0x417 ADD
0x418 PUSH1 0x0
0x41a SHA3
0x41b PUSH1 0x0
0x41d SWAP1
0x41e SLOAD
0x41f SWAP1
0x420 PUSH2 0x100
0x423 EXP
0x424 SWAP1
0x425 DIV
0x426 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43b AND
0x43c SWAP1
0x43d POP
0x43e SWAP2
0x43f SWAP1
0x440 POP
0x441 JUMP
---
0x3df: JUMPDEST 
0x3e0: V236 = 0x0
0x3e2: V237 = 0x1
0x3e4: V238 = 0x0
0x3e7: V239 = 0xffffffffffffffffffffffffffffffff
0x3f8: V240 = NOT 0xffffffffffffffffffffffffffffffff
0x3f9: V241 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V83
0x3fa: V242 = 0xffffffffffffffffffffffffffffffff
0x40b: V243 = NOT 0xffffffffffffffffffffffffffffffff
0x40c: V244 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V241
0x40e: M[0x0] = V244
0x40f: V245 = 0x20
0x411: V246 = ADD 0x20 0x0
0x414: M[0x20] = 0x1
0x415: V247 = 0x20
0x417: V248 = ADD 0x20 0x20
0x418: V249 = 0x0
0x41a: V250 = SHA3 0x0 0x40
0x41b: V251 = 0x0
0x41e: V252 = S[V250]
0x420: V253 = 0x100
0x423: V254 = EXP 0x100 0x0
0x425: V255 = DIV V252 0x1
0x426: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x441: JUMP 0x168
---
Entry stack: [V11, 0x168, V83]
Stack pops: 2
Stack additions: [V257]
Exit stack: [V11, V257]

================================

Block 0x442
[0x442:0x4d0]
---
Predecessors: [0x1b5]
Successors: [0x4d1, 0x4d5]
---
0x442 JUMPDEST
0x443 CALLER
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a PUSH1 0x1
0x45c PUSH1 0x0
0x45e DUP4
0x45f PUSH16 0xffffffffffffffffffffffffffffffff
0x470 NOT
0x471 AND
0x472 PUSH16 0xffffffffffffffffffffffffffffffff
0x483 NOT
0x484 AND
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x20
0x489 ADD
0x48a SWAP1
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x20
0x48f ADD
0x490 PUSH1 0x0
0x492 SHA3
0x493 PUSH1 0x0
0x495 SWAP1
0x496 SLOAD
0x497 SWAP1
0x498 PUSH2 0x100
0x49b EXP
0x49c SWAP1
0x49d DIV
0x49e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b3 AND
0x4b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c9 AND
0x4ca EQ
0x4cb ISZERO
0x4cc ISZERO
0x4cd PUSH2 0x4d5
0x4d0 JUMPI
---
0x442: JUMPDEST 
0x443: V258 = CALLER
0x444: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x45a: V261 = 0x1
0x45c: V262 = 0x0
0x45f: V263 = 0xffffffffffffffffffffffffffffffff
0x470: V264 = NOT 0xffffffffffffffffffffffffffffffff
0x471: V265 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V128
0x472: V266 = 0xffffffffffffffffffffffffffffffff
0x483: V267 = NOT 0xffffffffffffffffffffffffffffffff
0x484: V268 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V265
0x486: M[0x0] = V268
0x487: V269 = 0x20
0x489: V270 = ADD 0x20 0x0
0x48c: M[0x20] = 0x1
0x48d: V271 = 0x20
0x48f: V272 = ADD 0x20 0x20
0x490: V273 = 0x0
0x492: V274 = SHA3 0x0 0x40
0x493: V275 = 0x0
0x496: V276 = S[V274]
0x498: V277 = 0x100
0x49b: V278 = EXP 0x100 0x0
0x49d: V279 = DIV V276 0x1
0x49e: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b3: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x4b4: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x4ca: V284 = EQ V283 V260
0x4cb: V285 = ISZERO V284
0x4cc: V286 = ISZERO V285
0x4cd: V287 = 0x4d5
0x4d0: JUMPI 0x4d5 V286
---
Entry stack: [V11, 0x221, V119, V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x221, V119, V128]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x442]
Successors: []
---
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 REVERT
---
0x4d1: V288 = 0x0
0x4d4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x221, V119, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x221, V119, V128]

================================

Block 0x4d5
[0x4d5:0x52f]
---
Predecessors: [0x442]
Successors: [0x530]
---
0x4d5 JUMPDEST
0x4d6 DUP1
0x4d7 PUSH16 0xffffffffffffffffffffffffffffffff
0x4e8 NOT
0x4e9 AND
0x4ea PUSH32 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7
0x50b DUP4
0x50c PUSH1 0x40
0x50e MLOAD
0x50f DUP1
0x510 DUP1
0x511 PUSH1 0x20
0x513 ADD
0x514 DUP3
0x515 DUP2
0x516 SUB
0x517 DUP3
0x518 MSTORE
0x519 DUP4
0x51a DUP2
0x51b DUP2
0x51c MLOAD
0x51d DUP2
0x51e MSTORE
0x51f PUSH1 0x20
0x521 ADD
0x522 SWAP2
0x523 POP
0x524 DUP1
0x525 MLOAD
0x526 SWAP1
0x527 PUSH1 0x20
0x529 ADD
0x52a SWAP1
0x52b DUP1
0x52c DUP4
0x52d DUP4
0x52e PUSH1 0x0
---
0x4d5: JUMPDEST 
0x4d7: V289 = 0xffffffffffffffffffffffffffffffff
0x4e8: V290 = NOT 0xffffffffffffffffffffffffffffffff
0x4e9: V291 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V128
0x4ea: V292 = 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7
0x50c: V293 = 0x40
0x50e: V294 = M[0x40]
0x511: V295 = 0x20
0x513: V296 = ADD 0x20 V294
0x516: V297 = SUB V296 V294
0x518: M[V294] = V297
0x51c: V298 = M[V119]
0x51e: M[V296] = V298
0x51f: V299 = 0x20
0x521: V300 = ADD 0x20 V296
0x525: V301 = M[V119]
0x527: V302 = 0x20
0x529: V303 = ADD 0x20 V119
0x52e: V304 = 0x0
---
Entry stack: [V11, 0x221, V119, V128]
Stack pops: 2
Stack additions: [S1, S0, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, S1, V294, V294, V300, V303, V301, V301, V300, V303, 0x0]
Exit stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V300, V303, V301, V301, V300, V303, 0x0]

================================

Block 0x530
[0x530:0x538]
---
Predecessors: [0x4d5, 0x539]
Successors: [0x539, 0x54b]
---
0x530 JUMPDEST
0x531 DUP4
0x532 DUP2
0x533 LT
0x534 ISZERO
0x535 PUSH2 0x54b
0x538 JUMPI
---
0x530: JUMPDEST 
0x533: V305 = LT S0 V301
0x534: V306 = ISZERO V305
0x535: V307 = 0x54b
0x538: JUMPI 0x54b V306
---
Entry stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V300, V303, V301, V301, V300, V303, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V300, V303, V301, V301, V300, V303, S0]

================================

Block 0x539
[0x539:0x54a]
---
Predecessors: [0x530]
Successors: [0x530]
---
0x539 DUP1
0x53a DUP3
0x53b ADD
0x53c MLOAD
0x53d DUP2
0x53e DUP5
0x53f ADD
0x540 MSTORE
0x541 PUSH1 0x20
0x543 DUP2
0x544 ADD
0x545 SWAP1
0x546 POP
0x547 PUSH2 0x530
0x54a JUMP
---
0x53b: V308 = ADD V303 S0
0x53c: V309 = M[V308]
0x53f: V310 = ADD V300 S0
0x540: M[V310] = V309
0x541: V311 = 0x20
0x544: V312 = ADD S0 0x20
0x547: V313 = 0x530
0x54a: JUMP 0x530
---
Entry stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V300, V303, V301, V301, V300, V303, S0]
Stack pops: 3
Stack additions: [S2, S1, V312]
Exit stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V300, V303, V301, V301, V300, V303, V312]

================================

Block 0x54b
[0x54b:0x55e]
---
Predecessors: [0x530]
Successors: [0x55f, 0x578]
---
0x54b JUMPDEST
0x54c POP
0x54d POP
0x54e POP
0x54f POP
0x550 SWAP1
0x551 POP
0x552 SWAP1
0x553 DUP2
0x554 ADD
0x555 SWAP1
0x556 PUSH1 0x1f
0x558 AND
0x559 DUP1
0x55a ISZERO
0x55b PUSH2 0x578
0x55e JUMPI
---
0x54b: JUMPDEST 
0x554: V314 = ADD V301 V300
0x556: V315 = 0x1f
0x558: V316 = AND 0x1f V301
0x55a: V317 = ISZERO V316
0x55b: V318 = 0x578
0x55e: JUMPI 0x578 V317
---
Entry stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V300, V303, V301, V301, V300, V303, S0]
Stack pops: 7
Stack additions: [V314, V316]
Exit stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V314, V316]

================================

Block 0x55f
[0x55f:0x577]
---
Predecessors: [0x54b]
Successors: [0x578]
---
0x55f DUP1
0x560 DUP3
0x561 SUB
0x562 DUP1
0x563 MLOAD
0x564 PUSH1 0x1
0x566 DUP4
0x567 PUSH1 0x20
0x569 SUB
0x56a PUSH2 0x100
0x56d EXP
0x56e SUB
0x56f NOT
0x570 AND
0x571 DUP2
0x572 MSTORE
0x573 PUSH1 0x20
0x575 ADD
0x576 SWAP2
0x577 POP
---
0x561: V319 = SUB V314 V316
0x563: V320 = M[V319]
0x564: V321 = 0x1
0x567: V322 = 0x20
0x569: V323 = SUB 0x20 V316
0x56a: V324 = 0x100
0x56d: V325 = EXP 0x100 V323
0x56e: V326 = SUB V325 0x1
0x56f: V327 = NOT V326
0x570: V328 = AND V327 V320
0x572: M[V319] = V328
0x573: V329 = 0x20
0x575: V330 = ADD 0x20 V319
---
Entry stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V314, V316]
Stack pops: 2
Stack additions: [V330, S0]
Exit stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, V330, V316]

================================

Block 0x578
[0x578:0x588]
---
Predecessors: [0x54b, 0x55f]
Successors: [0x221]
---
0x578 JUMPDEST
0x579 POP
0x57a SWAP3
0x57b POP
0x57c POP
0x57d POP
0x57e PUSH1 0x40
0x580 MLOAD
0x581 DUP1
0x582 SWAP2
0x583 SUB
0x584 SWAP1
0x585 LOG2
0x586 POP
0x587 POP
0x588 JUMP
---
0x578: JUMPDEST 
0x57e: V331 = 0x40
0x580: V332 = M[0x40]
0x583: V333 = SUB S1 V332
0x585: LOG V332 V333 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7 V291
0x588: JUMP 0x221
---
Entry stack: [V11, 0x221, V119, V128, V291, 0x958ce2d593ac95a75b4c09bfb4b0b0281d706dda518df0c0b387c60373b17bf7, V119, V294, V294, S1, V316]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x589
[0x589:0x5bc]
---
Predecessors: []
Successors: []
---
0x589 STOP
0x58a LOG1
0x58b PUSH6 0x627a7a723058
0x592 SHA3
0x593 MISSING 0xb1
0x594 MISSING 0xdb
0x595 MISSING 0xca
0x596 MISSING 0xed
0x597 MISSING 0x2e
0x598 MISSING 0xd2
0x599 SLT
0x59a PUSH9 0xce8614e378a17074ea
0x5a4 MISSING 0xe3
0x5a5 PUSH23 0x24f55b4f47131a113fc0fcb21d0029
---
0x589: STOP 
0x58a: LOG S0 S1 S2
0x58b: V334 = 0x627a7a723058
0x592: V335 = SHA3 0x627a7a723058 S3
0x593: MISSING 0xb1
0x594: MISSING 0xdb
0x595: MISSING 0xca
0x596: MISSING 0xed
0x597: MISSING 0x2e
0x598: MISSING 0xd2
0x599: V336 = SLT S0 S1
0x59a: V337 = 0xce8614e378a17074ea
0x5a4: MISSING 0xe3
0x5a5: V338 = 0x24f55b4f47131a113fc0fcb21d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V335, 0xce8614e378a17074ea, V336, 0x24f55b4f47131a113fc0fcb21d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xc250dcd
Entry block: 0xe2
Exit block: 0x107
Body: 0xe2, 0xe9, 0xed, 0x107, 0x223

Function 1:
Public function signature: 0x36c0c834
Entry block: 0x109
Exit block: 0x132
Body: 0x109, 0x132, 0x244, 0x269, 0x2dd, 0x2e4, 0x2e8, 0x3d7, 0x3db

Function 2:
Public function signature: 0xa9b6c8bc
Entry block: 0x134
Exit block: 0x168
Body: 0x134, 0x13b, 0x13f, 0x168, 0x3df

Function 3:
Public function signature: 0xe23a15b5
Entry block: 0x1aa
Exit block: 0x221
Body: 0x1aa, 0x1b1, 0x1b5, 0x221, 0x442, 0x4d1, 0x4d5, 0x530, 0x539, 0x54b, 0x55f, 0x578

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0xdf
Body: 0x62, 0xdb, 0xdf

