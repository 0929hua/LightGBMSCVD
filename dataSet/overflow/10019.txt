Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x19045a25
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x19045a25
0x3c: V13 = EQ 0x19045a25 V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0xa2]
---
Predecessors: [0xd]
Successors: [0xe5]
---
0x46 JUMPDEST
0x47 PUSH2 0xa3
0x4a PUSH1 0x4
0x4c DUP1
0x4d DUP1
0x4e CALLDATALOAD
0x4f PUSH1 0x0
0x51 NOT
0x52 AND
0x53 SWAP1
0x54 PUSH1 0x20
0x56 ADD
0x57 SWAP1
0x58 SWAP2
0x59 SWAP1
0x5a DUP1
0x5b CALLDATALOAD
0x5c SWAP1
0x5d PUSH1 0x20
0x5f ADD
0x60 SWAP1
0x61 DUP3
0x62 ADD
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x20
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c PUSH1 0x1f
0x6e ADD
0x6f PUSH1 0x20
0x71 DUP1
0x72 SWAP2
0x73 DIV
0x74 MUL
0x75 PUSH1 0x20
0x77 ADD
0x78 PUSH1 0x40
0x7a MLOAD
0x7b SWAP1
0x7c DUP2
0x7d ADD
0x7e PUSH1 0x40
0x80 MSTORE
0x81 DUP1
0x82 SWAP4
0x83 SWAP3
0x84 SWAP2
0x85 SWAP1
0x86 DUP2
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b ADD
0x8c DUP4
0x8d DUP4
0x8e DUP1
0x8f DUP3
0x90 DUP5
0x91 CALLDATACOPY
0x92 DUP3
0x93 ADD
0x94 SWAP2
0x95 POP
0x96 POP
0x97 POP
0x98 POP
0x99 POP
0x9a POP
0x9b SWAP2
0x9c SWAP1
0x9d POP
0x9e POP
0x9f PUSH2 0xe5
0xa2 JUMP
---
0x46: JUMPDEST 
0x47: V16 = 0xa3
0x4a: V17 = 0x4
0x4e: V18 = CALLDATALOAD 0x4
0x4f: V19 = 0x0
0x51: V20 = NOT 0x0
0x52: V21 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V18
0x54: V22 = 0x20
0x56: V23 = ADD 0x20 0x4
0x5b: V24 = CALLDATALOAD 0x24
0x5d: V25 = 0x20
0x5f: V26 = ADD 0x20 0x24
0x62: V27 = ADD 0x4 V24
0x64: V28 = CALLDATALOAD V27
0x66: V29 = 0x20
0x68: V30 = ADD 0x20 V27
0x6c: V31 = 0x1f
0x6e: V32 = ADD 0x1f V28
0x6f: V33 = 0x20
0x73: V34 = DIV V32 0x20
0x74: V35 = MUL V34 0x20
0x75: V36 = 0x20
0x77: V37 = ADD 0x20 V35
0x78: V38 = 0x40
0x7a: V39 = M[0x40]
0x7d: V40 = ADD V39 V37
0x7e: V41 = 0x40
0x80: M[0x40] = V40
0x88: M[V39] = V28
0x89: V42 = 0x20
0x8b: V43 = ADD 0x20 V39
0x91: CALLDATACOPY V43 V30 V28
0x93: V44 = ADD V43 V28
0x9f: V45 = 0xe5
0xa2: JUMP 0xe5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3, V21, V39]
Exit stack: [V11, 0xa3, V21, V39]

================================

Block 0xa3
[0xa3:0xe4]
---
Predecessors: [0x1da]
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 DUP1
0xa8 DUP3
0xa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe AND
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 AND
0xd5 DUP2
0xd6 MSTORE
0xd7 PUSH1 0x20
0xd9 ADD
0xda SWAP2
0xdb POP
0xdc POP
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 SWAP2
0xe2 SUB
0xe3 SWAP1
0xe4 RETURN
---
0xa3: JUMPDEST 
0xa4: V46 = 0x40
0xa6: V47 = M[0x40]
0xa9: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbf: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xd6: M[V47] = V51
0xd7: V52 = 0x20
0xd9: V53 = ADD 0x20 V47
0xdd: V54 = 0x40
0xdf: V55 = M[0x40]
0xe2: V56 = SUB V53 V55
0xe4: RETURN V55 V56
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xf6]
---
Predecessors: [0x46]
Successors: [0xf7, 0xff]
---
0xe5 JUMPDEST
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 PUSH1 0x0
0xeb DUP1
0xec PUSH1 0x41
0xee DUP6
0xef MLOAD
0xf0 EQ
0xf1 ISZERO
0xf2 ISZERO
0xf3 PUSH2 0xff
0xf6 JUMPI
---
0xe5: JUMPDEST 
0xe6: V57 = 0x0
0xe9: V58 = 0x0
0xec: V59 = 0x41
0xef: V60 = M[V39]
0xf0: V61 = EQ V60 0x41
0xf1: V62 = ISZERO V61
0xf2: V63 = ISZERO V62
0xf3: V64 = 0xff
0xf6: JUMPI 0xff V63
---
Entry stack: [V11, 0xa3, V21, V39]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xa3, V21, V39, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf7
[0xf7:0xfe]
---
Predecessors: [0xe5]
Successors: [0x1da]
---
0xf7 PUSH1 0x0
0xf9 SWAP4
0xfa POP
0xfb PUSH2 0x1da
0xfe JUMP
---
0xf7: V65 = 0x0
0xfb: V66 = 0x1da
0xfe: JUMP 0x1da
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V11, 0xa3, V21, V39, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xff
[0xff:0x123]
---
Predecessors: [0xe5]
Successors: [0x124, 0x12a]
---
0xff JUMPDEST
0x100 PUSH1 0x20
0x102 DUP6
0x103 ADD
0x104 MLOAD
0x105 SWAP3
0x106 POP
0x107 PUSH1 0x40
0x109 DUP6
0x10a ADD
0x10b MLOAD
0x10c SWAP2
0x10d POP
0x10e PUSH1 0x60
0x110 DUP6
0x111 ADD
0x112 MLOAD
0x113 PUSH1 0x0
0x115 BYTE
0x116 SWAP1
0x117 POP
0x118 PUSH1 0x1b
0x11a DUP2
0x11b PUSH1 0xff
0x11d AND
0x11e LT
0x11f ISZERO
0x120 PUSH2 0x12a
0x123 JUMPI
---
0xff: JUMPDEST 
0x100: V67 = 0x20
0x103: V68 = ADD V39 0x20
0x104: V69 = M[V68]
0x107: V70 = 0x40
0x10a: V71 = ADD V39 0x40
0x10b: V72 = M[V71]
0x10e: V73 = 0x60
0x111: V74 = ADD V39 0x60
0x112: V75 = M[V74]
0x113: V76 = 0x0
0x115: V77 = BYTE 0x0 V75
0x118: V78 = 0x1b
0x11b: V79 = 0xff
0x11d: V80 = AND 0xff V77
0x11e: V81 = LT V80 0x1b
0x11f: V82 = ISZERO V81
0x120: V83 = 0x12a
0x123: JUMPI 0x12a V82
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, V69, V72, V77]
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, V77]

================================

Block 0x124
[0x124:0x129]
---
Predecessors: [0xff]
Successors: [0x12a]
---
0x124 PUSH1 0x1b
0x126 DUP2
0x127 ADD
0x128 SWAP1
0x129 POP
---
0x124: V84 = 0x1b
0x127: V85 = ADD V77 0x1b
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, V77]
Stack pops: 1
Stack additions: [V85]
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, V85]

================================

Block 0x12a
[0x12a:0x138]
---
Predecessors: [0xff, 0x124]
Successors: [0x139, 0x142]
---
0x12a JUMPDEST
0x12b PUSH1 0x1b
0x12d DUP2
0x12e PUSH1 0xff
0x130 AND
0x131 EQ
0x132 ISZERO
0x133 DUP1
0x134 ISZERO
0x135 PUSH2 0x142
0x138 JUMPI
---
0x12a: JUMPDEST 
0x12b: V86 = 0x1b
0x12e: V87 = 0xff
0x130: V88 = AND 0xff S0
0x131: V89 = EQ V88 0x1b
0x132: V90 = ISZERO V89
0x134: V91 = ISZERO V90
0x135: V92 = 0x142
0x138: JUMPI 0x142 V91
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S0]
Stack pops: 1
Stack additions: [S0, V90]
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S0, V90]

================================

Block 0x139
[0x139:0x141]
---
Predecessors: [0x12a]
Successors: [0x142]
---
0x139 POP
0x13a PUSH1 0x1c
0x13c DUP2
0x13d PUSH1 0xff
0x13f AND
0x140 EQ
0x141 ISZERO
---
0x13a: V93 = 0x1c
0x13d: V94 = 0xff
0x13f: V95 = AND 0xff S1
0x140: V96 = EQ V95 0x1c
0x141: V97 = ISZERO V96
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S1, V90]
Stack pops: 2
Stack additions: [S1, V97]
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S1, V97]

================================

Block 0x142
[0x142:0x147]
---
Predecessors: [0x12a, 0x139]
Successors: [0x148, 0x150]
---
0x142 JUMPDEST
0x143 ISZERO
0x144 PUSH2 0x150
0x147 JUMPI
---
0x142: JUMPDEST 
0x143: V98 = ISZERO S0
0x144: V99 = 0x150
0x147: JUMPI 0x150 V98
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S1]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x142]
Successors: [0x1da]
---
0x148 PUSH1 0x0
0x14a SWAP4
0x14b POP
0x14c PUSH2 0x1da
0x14f JUMP
---
0x148: V100 = 0x0
0x14c: V101 = 0x1da
0x14f: JUMP 0x1da
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S0]

================================

Block 0x150
[0x150:0x1c9]
---
Predecessors: [0x142]
Successors: [0x1ca, 0x1ce]
---
0x150 JUMPDEST
0x151 PUSH1 0x1
0x153 DUP7
0x154 DUP3
0x155 DUP6
0x156 DUP6
0x157 PUSH1 0x40
0x159 MLOAD
0x15a PUSH1 0x0
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 PUSH1 0x40
0x163 MSTORE
0x164 PUSH1 0x0
0x166 PUSH1 0x40
0x168 MLOAD
0x169 PUSH1 0x20
0x16b ADD
0x16c MSTORE
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 DUP6
0x172 PUSH1 0x0
0x174 NOT
0x175 AND
0x176 PUSH1 0x0
0x178 NOT
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f DUP5
0x180 PUSH1 0xff
0x182 AND
0x183 PUSH1 0xff
0x185 AND
0x186 DUP2
0x187 MSTORE
0x188 PUSH1 0x20
0x18a ADD
0x18b DUP4
0x18c PUSH1 0x0
0x18e NOT
0x18f AND
0x190 PUSH1 0x0
0x192 NOT
0x193 AND
0x194 DUP2
0x195 MSTORE
0x196 PUSH1 0x20
0x198 ADD
0x199 DUP3
0x19a PUSH1 0x0
0x19c NOT
0x19d AND
0x19e PUSH1 0x0
0x1a0 NOT
0x1a1 AND
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP5
0x1a8 POP
0x1a9 POP
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad PUSH1 0x20
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 PUSH1 0x20
0x1b4 DUP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 DUP1
0x1b8 DUP5
0x1b9 SUB
0x1ba SWAP1
0x1bb PUSH1 0x0
0x1bd DUP7
0x1be PUSH2 0x646e
0x1c1 GAS
0x1c2 SUB
0x1c3 CALL
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x150: JUMPDEST 
0x151: V102 = 0x1
0x157: V103 = 0x40
0x159: V104 = M[0x40]
0x15a: V105 = 0x0
0x15d: M[V104] = 0x0
0x15e: V106 = 0x20
0x160: V107 = ADD 0x20 V104
0x161: V108 = 0x40
0x163: M[0x40] = V107
0x164: V109 = 0x0
0x166: V110 = 0x40
0x168: V111 = M[0x40]
0x169: V112 = 0x20
0x16b: V113 = ADD 0x20 V111
0x16c: M[V113] = 0x0
0x16d: V114 = 0x40
0x16f: V115 = M[0x40]
0x172: V116 = 0x0
0x174: V117 = NOT 0x0
0x175: V118 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V21
0x176: V119 = 0x0
0x178: V120 = NOT 0x0
0x179: V121 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V118
0x17b: M[V115] = V121
0x17c: V122 = 0x20
0x17e: V123 = ADD 0x20 V115
0x180: V124 = 0xff
0x182: V125 = AND 0xff S0
0x183: V126 = 0xff
0x185: V127 = AND 0xff V125
0x187: M[V123] = V127
0x188: V128 = 0x20
0x18a: V129 = ADD 0x20 V123
0x18c: V130 = 0x0
0x18e: V131 = NOT 0x0
0x18f: V132 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V69
0x190: V133 = 0x0
0x192: V134 = NOT 0x0
0x193: V135 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V132
0x195: M[V129] = V135
0x196: V136 = 0x20
0x198: V137 = ADD 0x20 V129
0x19a: V138 = 0x0
0x19c: V139 = NOT 0x0
0x19d: V140 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V72
0x19e: V141 = 0x0
0x1a0: V142 = NOT 0x0
0x1a1: V143 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V140
0x1a3: M[V137] = V143
0x1a4: V144 = 0x20
0x1a6: V145 = ADD 0x20 V137
0x1ad: V146 = 0x20
0x1af: V147 = 0x40
0x1b1: V148 = M[0x40]
0x1b2: V149 = 0x20
0x1b5: V150 = SUB V148 0x20
0x1b9: V151 = SUB V145 V148
0x1bb: V152 = 0x0
0x1be: V153 = 0x646e
0x1c1: V154 = GAS
0x1c2: V155 = SUB V154 0x646e
0x1c3: V156 = CALL V155 0x1 0x0 V148 V151 V150 0x20
0x1c4: V157 = ISZERO V156
0x1c5: V158 = ISZERO V157
0x1c6: V159 = 0x1ce
0x1c9: JUMPI 0x1ce V158
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x1, V145]
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S0, 0x1, V145]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x150]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V160 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S2, 0x1, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S2, 0x1, V145]

================================

Block 0x1ce
[0x1ce:0x1d9]
---
Predecessors: [0x150]
Successors: [0x1da]
---
0x1ce JUMPDEST
0x1cf POP
0x1d0 POP
0x1d1 PUSH1 0x20
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 SUB
0x1d7 MLOAD
0x1d8 SWAP4
0x1d9 POP
---
0x1ce: JUMPDEST 
0x1d1: V161 = 0x20
0x1d3: V162 = 0x40
0x1d5: V163 = M[0x40]
0x1d6: V164 = SUB V163 0x20
0x1d7: V165 = M[V164]
---
Entry stack: [V11, 0xa3, V21, V39, 0x0, V69, V72, S2, 0x1, V145]
Stack pops: 6
Stack additions: [V165, S4, S3, S2]
Exit stack: [V11, 0xa3, V21, V39, V165, V69, V72, S2]

================================

Block 0x1da
[0x1da:0x1e2]
---
Predecessors: [0xf7, 0x148, 0x1ce]
Successors: [0xa3]
---
0x1da JUMPDEST
0x1db POP
0x1dc POP
0x1dd POP
0x1de SWAP3
0x1df SWAP2
0x1e0 POP
0x1e1 POP
0x1e2 JUMP
---
0x1da: JUMPDEST 
0x1e2: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V21, V39, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V11, S3]

================================

Block 0x1e3
[0x1e3:0x219]
---
Predecessors: []
Successors: []
---
0x1e3 STOP
0x1e4 LOG1
0x1e5 PUSH6 0x627a7a723058
0x1ec SHA3
0x1ed PUSH1 0x95
0x1ef MISSING 0xce
0x1f0 MISSING 0x2e
0x1f1 PUSH11 0x5e859771da0ea8236001bf
0x1fd PUSH28 0x7fdd4df80d6b4462b1b5d69e62abed0029
---
0x1e3: STOP 
0x1e4: LOG S0 S1 S2
0x1e5: V166 = 0x627a7a723058
0x1ec: V167 = SHA3 0x627a7a723058 S3
0x1ed: V168 = 0x95
0x1ef: MISSING 0xce
0x1f0: MISSING 0x2e
0x1f1: V169 = 0x5e859771da0ea8236001bf
0x1fd: V170 = 0x7fdd4df80d6b4462b1b5d69e62abed0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x95, V167, 0x7fdd4df80d6b4462b1b5d69e62abed0029, 0x5e859771da0ea8236001bf]
Exit stack: []

================================

Function 0:
Public function signature: 0x19045a25
Entry block: 0x46
Exit block: 0x1ca
Body: 0x46, 0xa3, 0xe5, 0xf7, 0xff, 0x124, 0x12a, 0x139, 0x142, 0x148, 0x150, 0x1ca, 0x1ce, 0x1da

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

