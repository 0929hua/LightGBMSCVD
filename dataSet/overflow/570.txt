Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1cbcc77c
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1cbcc77c
0x3c: V13 = EQ 0x1cbcc77c V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x70]
---
0x41 DUP1
0x42 PUSH4 0x31fb67c2
0x47 EQ
0x48 PUSH2 0x70
0x4b JUMPI
---
0x42: V15 = 0x31fb67c2
0x47: V16 = EQ 0x31fb67c2 V11
0x48: V17 = 0x70
0x4b: JUMPI 0x70 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xcc]
---
0x4c DUP1
0x4d PUSH4 0x5d42513b
0x52 EQ
0x53 PUSH2 0xcc
0x56 JUMPI
---
0x4d: V18 = 0x5d42513b
0x52: V19 = EQ 0x5d42513b V11
0x53: V20 = 0xcc
0x56: JUMPI 0xcc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x60]
---
Predecessors: [0xd]
Successors: [0x61, 0x65]
---
0x59 JUMPDEST
0x5a CALLVALUE
0x5b DUP1
0x5c ISZERO
0x5d PUSH2 0x65
0x60 JUMPI
---
0x59: JUMPDEST 
0x5a: V21 = CALLVALUE
0x5c: V22 = ISZERO V21
0x5d: V23 = 0x65
0x60: JUMPI 0x65 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V21]
Exit stack: [V11, V21]

================================

Block 0x61
[0x61:0x64]
---
Predecessors: [0x59]
Successors: []
---
0x61 PUSH1 0x0
0x63 DUP1
0x64 REVERT
---
0x61: V24 = 0x0
0x64: REVERT 0x0 0x0
---
Entry stack: [V11, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V21]

================================

Block 0x65
[0x65:0x6d]
---
Predecessors: [0x59]
Successors: [0xe3]
---
0x65 JUMPDEST
0x66 POP
0x67 PUSH2 0x6e
0x6a PUSH2 0xe3
0x6d JUMP
---
0x65: JUMPDEST 
0x67: V25 = 0x6e
0x6a: V26 = 0xe3
0x6d: JUMP 0xe3
---
Entry stack: [V11, V21]
Stack pops: 1
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: []
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x70
[0x70:0xc9]
---
Predecessors: [0x41]
Successors: [0x157]
---
0x70 JUMPDEST
0x71 PUSH2 0xca
0x74 PUSH1 0x4
0x76 DUP1
0x77 CALLDATASIZE
0x78 SUB
0x79 DUP2
0x7a ADD
0x7b SWAP1
0x7c DUP1
0x7d DUP1
0x7e CALLDATALOAD
0x7f SWAP1
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP1
0x84 DUP3
0x85 ADD
0x86 DUP1
0x87 CALLDATALOAD
0x88 SWAP1
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP1
0x8d DUP1
0x8e DUP1
0x8f PUSH1 0x1f
0x91 ADD
0x92 PUSH1 0x20
0x94 DUP1
0x95 SWAP2
0x96 DIV
0x97 MUL
0x98 PUSH1 0x20
0x9a ADD
0x9b PUSH1 0x40
0x9d MLOAD
0x9e SWAP1
0x9f DUP2
0xa0 ADD
0xa1 PUSH1 0x40
0xa3 MSTORE
0xa4 DUP1
0xa5 SWAP4
0xa6 SWAP3
0xa7 SWAP2
0xa8 SWAP1
0xa9 DUP2
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf DUP4
0xb0 DUP4
0xb1 DUP1
0xb2 DUP3
0xb3 DUP5
0xb4 CALLDATACOPY
0xb5 DUP3
0xb6 ADD
0xb7 SWAP2
0xb8 POP
0xb9 POP
0xba POP
0xbb POP
0xbc POP
0xbd POP
0xbe SWAP2
0xbf SWAP3
0xc0 SWAP2
0xc1 SWAP3
0xc2 SWAP1
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 PUSH2 0x157
0xc9 JUMP
---
0x70: JUMPDEST 
0x71: V27 = 0xca
0x74: V28 = 0x4
0x77: V29 = CALLDATASIZE
0x78: V30 = SUB V29 0x4
0x7a: V31 = ADD 0x4 V30
0x7e: V32 = CALLDATALOAD 0x4
0x80: V33 = 0x20
0x82: V34 = ADD 0x20 0x4
0x85: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x89: V37 = 0x20
0x8b: V38 = ADD 0x20 V35
0x8f: V39 = 0x1f
0x91: V40 = ADD 0x1f V36
0x92: V41 = 0x20
0x96: V42 = DIV V40 0x20
0x97: V43 = MUL V42 0x20
0x98: V44 = 0x20
0x9a: V45 = ADD 0x20 V43
0x9b: V46 = 0x40
0x9d: V47 = M[0x40]
0xa0: V48 = ADD V47 V45
0xa1: V49 = 0x40
0xa3: M[0x40] = V48
0xab: M[V47] = V36
0xac: V50 = 0x20
0xae: V51 = ADD 0x20 V47
0xb4: CALLDATACOPY V51 V38 V36
0xb6: V52 = ADD V51 V36
0xc6: V53 = 0x157
0xc9: JUMP 0x157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xca, V47]
Exit stack: [V11, 0xca, V47]

================================

Block 0xca
[0xca:0xcb]
---
Predecessors: [0x32b]
Successors: []
---
0xca JUMPDEST
0xcb STOP
---
0xca: JUMPDEST 
0xcb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x4c]
Successors: [0xd4, 0xd8]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcc: JUMPDEST 
0xcd: V54 = CALLVALUE
0xcf: V55 = ISZERO V54
0xd0: V56 = 0xd8
0xd3: JUMPI 0xd8 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcc]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V57 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xd8
[0xd8:0xe0]
---
Predecessors: [0xcc]
Successors: [0x32f]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH2 0xe1
0xdd PUSH2 0x32f
0xe0 JUMP
---
0xd8: JUMPDEST 
0xda: V58 = 0xe1
0xdd: V59 = 0x32f
0xe0: JUMP 0x32f
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0xe2]
---
Predecessors: [0x3e7]
Successors: []
---
0xe1 JUMPDEST
0xe2 STOP
---
0xe1: JUMPDEST 
0xe2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0x139]
---
Predecessors: [0x65]
Successors: [0x13a, 0x13e]
---
0xe3 JUMPDEST
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 SWAP1
0xe8 SLOAD
0xe9 SWAP1
0xea PUSH2 0x100
0xed EXP
0xee SWAP1
0xef DIV
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c CALLER
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 EQ
0x134 ISZERO
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0xe3: JUMPDEST 
0xe4: V60 = 0x0
0xe8: V61 = S[0x0]
0xea: V62 = 0x100
0xed: V63 = EXP 0x100 0x0
0xef: V64 = DIV V61 0x1
0xf0: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x106: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x11c: V69 = CALLER
0x11d: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x133: V72 = EQ V71 V68
0x134: V73 = ISZERO V72
0x135: V74 = ISZERO V73
0x136: V75 = 0x13e
0x139: JUMPI 0x13e V74
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0xe3]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V76 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x13e
[0x13e:0x156]
---
Predecessors: [0xe3]
Successors: []
---
0x13e JUMPDEST
0x13f CALLER
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 SELFDESTRUCT
---
0x13e: JUMPDEST 
0x13f: V77 = CALLER
0x140: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x156: SELFDESTRUCT V79
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x157
[0x157:0x16b]
---
Predecessors: [0x70]
Successors: [0x16c, 0x170]
---
0x157 JUMPDEST
0x158 PUSH1 0x0
0x15a PUSH8 0x8ac7230489e80000
0x163 CALLVALUE
0x164 LT
0x165 ISZERO
0x166 ISZERO
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x157: JUMPDEST 
0x158: V80 = 0x0
0x15a: V81 = 0x8ac7230489e80000
0x163: V82 = CALLVALUE
0x164: V83 = LT V82 0x8ac7230489e80000
0x165: V84 = ISZERO V83
0x166: V85 = ISZERO V84
0x167: V86 = ISZERO V85
0x168: V87 = 0x170
0x16b: JUMPI 0x170 V86
---
Entry stack: [V11, 0xca, V47]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xca, V47, 0x0]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x157]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V88 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xca, V47, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V47, 0x0]

================================

Block 0x170
[0x170:0x17b]
---
Predecessors: [0x157]
Successors: [0x17c, 0x180]
---
0x170 JUMPDEST
0x171 PUSH1 0x0
0x173 DUP3
0x174 MLOAD
0x175 GT
0x176 ISZERO
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x170: JUMPDEST 
0x171: V89 = 0x0
0x174: V90 = M[V47]
0x175: V91 = GT V90 0x0
0x176: V92 = ISZERO V91
0x177: V93 = ISZERO V92
0x178: V94 = 0x180
0x17b: JUMPI 0x180 V93
---
Entry stack: [V11, 0xca, V47, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xca, V47, 0x0]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x170]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V95 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xca, V47, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V47, 0x0]

================================

Block 0x180
[0x180:0x190]
---
Predecessors: [0x170]
Successors: [0x191]
---
0x180 JUMPDEST
0x181 DUP2
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 DUP3
0x187 DUP1
0x188 MLOAD
0x189 SWAP1
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP1
0x18e DUP1
0x18f DUP4
0x190 DUP4
---
0x180: JUMPDEST 
0x182: V96 = 0x40
0x184: V97 = M[0x40]
0x188: V98 = M[V47]
0x18a: V99 = 0x20
0x18c: V100 = ADD 0x20 V47
---
Entry stack: [V11, 0xca, V47, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1, V97, V97, V100, V98, V98, V97, V100]
Exit stack: [V11, 0xca, V47, 0x0, V47, V97, V97, V100, V98, V98, V97, V100]

================================

Block 0x191
[0x191:0x19b]
---
Predecessors: [0x180, 0x19c]
Successors: [0x19c, 0x1b6]
---
0x191 JUMPDEST
0x192 PUSH1 0x20
0x194 DUP4
0x195 LT
0x196 ISZERO
0x197 ISZERO
0x198 PUSH2 0x1b6
0x19b JUMPI
---
0x191: JUMPDEST 
0x192: V101 = 0x20
0x195: V102 = LT S2 0x20
0x196: V103 = ISZERO V102
0x197: V104 = ISZERO V103
0x198: V105 = 0x1b6
0x19b: JUMPI 0x1b6 V104
---
Entry stack: [V11, 0xca, V47, 0x0, V47, V97, V97, V100, V98, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xca, V47, 0x0, V47, V97, V97, V100, V98, S2, S1, S0]

================================

Block 0x19c
[0x19c:0x1b5]
---
Predecessors: [0x191]
Successors: [0x191]
---
0x19c DUP1
0x19d MLOAD
0x19e DUP3
0x19f MSTORE
0x1a0 PUSH1 0x20
0x1a2 DUP3
0x1a3 ADD
0x1a4 SWAP2
0x1a5 POP
0x1a6 PUSH1 0x20
0x1a8 DUP2
0x1a9 ADD
0x1aa SWAP1
0x1ab POP
0x1ac PUSH1 0x20
0x1ae DUP4
0x1af SUB
0x1b0 SWAP3
0x1b1 POP
0x1b2 PUSH2 0x191
0x1b5 JUMP
---
0x19d: V106 = M[S0]
0x19f: M[S1] = V106
0x1a0: V107 = 0x20
0x1a3: V108 = ADD S1 0x20
0x1a6: V109 = 0x20
0x1a9: V110 = ADD S0 0x20
0x1ac: V111 = 0x20
0x1af: V112 = SUB S2 0x20
0x1b2: V113 = 0x191
0x1b5: JUMP 0x191
---
Entry stack: [V11, 0xca, V47, 0x0, V47, V97, V97, V100, V98, S2, S1, S0]
Stack pops: 3
Stack additions: [V112, V108, V110]
Exit stack: [V11, 0xca, V47, 0x0, V47, V97, V97, V100, V98, V112, V108, V110]

================================

Block 0x1b6
[0x1b6:0x1f7]
---
Predecessors: [0x191]
Successors: [0x1f8, 0x2c2]
---
0x1b6 JUMPDEST
0x1b7 PUSH1 0x1
0x1b9 DUP4
0x1ba PUSH1 0x20
0x1bc SUB
0x1bd PUSH2 0x100
0x1c0 EXP
0x1c1 SUB
0x1c2 DUP1
0x1c3 NOT
0x1c4 DUP3
0x1c5 MLOAD
0x1c6 AND
0x1c7 DUP2
0x1c8 DUP5
0x1c9 MLOAD
0x1ca AND
0x1cb DUP1
0x1cc DUP3
0x1cd OR
0x1ce DUP6
0x1cf MSTORE
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 SWAP1
0x1d7 POP
0x1d8 ADD
0x1d9 SWAP2
0x1da POP
0x1db POP
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 SHA3
0x1e4 SWAP1
0x1e5 POP
0x1e6 PUSH1 0x1
0x1e8 SLOAD
0x1e9 PUSH1 0x0
0x1eb NOT
0x1ec AND
0x1ed DUP2
0x1ee PUSH1 0x0
0x1f0 NOT
0x1f1 AND
0x1f2 EQ
0x1f3 ISZERO
0x1f4 PUSH2 0x2c2
0x1f7 JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V114 = 0x1
0x1ba: V115 = 0x20
0x1bc: V116 = SUB 0x20 S2
0x1bd: V117 = 0x100
0x1c0: V118 = EXP 0x100 V116
0x1c1: V119 = SUB V118 0x1
0x1c3: V120 = NOT V119
0x1c5: V121 = M[S0]
0x1c6: V122 = AND V121 V120
0x1c9: V123 = M[S1]
0x1ca: V124 = AND V123 V119
0x1cd: V125 = OR V122 V124
0x1cf: M[S1] = V125
0x1d8: V126 = ADD V98 V97
0x1dc: V127 = 0x40
0x1de: V128 = M[0x40]
0x1e1: V129 = SUB V126 V128
0x1e3: V130 = SHA3 V128 V129
0x1e6: V131 = 0x1
0x1e8: V132 = S[0x1]
0x1e9: V133 = 0x0
0x1eb: V134 = NOT 0x0
0x1ec: V135 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V132
0x1ee: V136 = 0x0
0x1f0: V137 = NOT 0x0
0x1f1: V138 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V130
0x1f2: V139 = EQ V138 V135
0x1f3: V140 = ISZERO V139
0x1f4: V141 = 0x2c2
0x1f7: JUMPI 0x2c2 V140
---
Entry stack: [V11, 0xca, V47, 0x0, V47, V97, V97, V100, V98, S2, S1, S0]
Stack pops: 9
Stack additions: [V130]
Exit stack: [V11, 0xca, V47, V130]

================================

Block 0x1f8
[0x1f8:0x2b2]
---
Predecessors: [0x1b6]
Successors: [0x2b3, 0x2bc]
---
0x1f8 PUSH32 0xf9fbd55454309325ccadd998a641a1dfe7cd888eea26c0ae93b95992a13ac144
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP1
0x21d DUP1
0x21e PUSH1 0x20
0x220 ADD
0x221 DUP3
0x222 DUP2
0x223 SUB
0x224 DUP3
0x225 MSTORE
0x226 PUSH1 0x9
0x228 DUP2
0x229 MSTORE
0x22a PUSH1 0x20
0x22c ADD
0x22d DUP1
0x22e PUSH32 0x53484120776f726b730000000000000000000000000000000000000000000000
0x24f DUP2
0x250 MSTORE
0x251 POP
0x252 PUSH1 0x20
0x254 ADD
0x255 SWAP2
0x256 POP
0x257 POP
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c SWAP2
0x25d SUB
0x25e SWAP1
0x25f LOG1
0x260 CALLER
0x261 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x276 AND
0x277 PUSH2 0x8fc
0x27a ADDRESS
0x27b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x290 AND
0x291 BALANCE
0x292 SWAP1
0x293 DUP2
0x294 ISZERO
0x295 MUL
0x296 SWAP1
0x297 PUSH1 0x40
0x299 MLOAD
0x29a PUSH1 0x0
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 DUP4
0x2a1 SUB
0x2a2 DUP2
0x2a3 DUP6
0x2a4 DUP9
0x2a5 DUP9
0x2a6 CALL
0x2a7 SWAP4
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac ISZERO
0x2ad DUP1
0x2ae ISZERO
0x2af PUSH2 0x2bc
0x2b2 JUMPI
---
0x1f8: V142 = 0xf9fbd55454309325ccadd998a641a1dfe7cd888eea26c0ae93b95992a13ac144
0x219: V143 = 0x40
0x21b: V144 = M[0x40]
0x21e: V145 = 0x20
0x220: V146 = ADD 0x20 V144
0x223: V147 = SUB V146 V144
0x225: M[V144] = V147
0x226: V148 = 0x9
0x229: M[V146] = 0x9
0x22a: V149 = 0x20
0x22c: V150 = ADD 0x20 V146
0x22e: V151 = 0x53484120776f726b730000000000000000000000000000000000000000000000
0x250: M[V150] = 0x53484120776f726b730000000000000000000000000000000000000000000000
0x252: V152 = 0x20
0x254: V153 = ADD 0x20 V150
0x258: V154 = 0x40
0x25a: V155 = M[0x40]
0x25d: V156 = SUB V153 V155
0x25f: LOG V155 V156 0xf9fbd55454309325ccadd998a641a1dfe7cd888eea26c0ae93b95992a13ac144
0x260: V157 = CALLER
0x261: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x276: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x277: V160 = 0x8fc
0x27a: V161 = ADDRESS
0x27b: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x290: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x291: V164 = BALANCE V163
0x294: V165 = ISZERO V164
0x295: V166 = MUL V165 0x8fc
0x297: V167 = 0x40
0x299: V168 = M[0x40]
0x29a: V169 = 0x0
0x29c: V170 = 0x40
0x29e: V171 = M[0x40]
0x2a1: V172 = SUB V168 V171
0x2a6: V173 = CALL V166 V159 V164 V171 V172 V171 0x0
0x2ac: V174 = ISZERO V173
0x2ae: V175 = ISZERO V174
0x2af: V176 = 0x2bc
0x2b2: JUMPI 0x2bc V175
---
Entry stack: [V11, 0xca, V47, V130]
Stack pops: 0
Stack additions: [V174]
Exit stack: [V11, 0xca, V47, V130, V174]

================================

Block 0x2b3
[0x2b3:0x2bb]
---
Predecessors: [0x1f8]
Successors: []
---
0x2b3 RETURNDATASIZE
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 RETURNDATACOPY
0x2b8 RETURNDATASIZE
0x2b9 PUSH1 0x0
0x2bb REVERT
---
0x2b3: V177 = RETURNDATASIZE
0x2b4: V178 = 0x0
0x2b7: RETURNDATACOPY 0x0 0x0 V177
0x2b8: V179 = RETURNDATASIZE
0x2b9: V180 = 0x0
0x2bb: REVERT 0x0 V179
---
Entry stack: [V11, 0xca, V47, V130, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V47, V130, V174]

================================

Block 0x2bc
[0x2bc:0x2c1]
---
Predecessors: [0x1f8]
Successors: [0x32b]
---
0x2bc JUMPDEST
0x2bd POP
0x2be PUSH2 0x32b
0x2c1 JUMP
---
0x2bc: JUMPDEST 
0x2be: V181 = 0x32b
0x2c1: JUMP 0x32b
---
Entry stack: [V11, 0xca, V47, V130, V174]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xca, V47, V130]

================================

Block 0x2c2
[0x2c2:0x32a]
---
Predecessors: [0x1b6]
Successors: [0x32b]
---
0x2c2 JUMPDEST
0x2c3 PUSH32 0xf9fbd55454309325ccadd998a641a1dfe7cd888eea26c0ae93b95992a13ac144
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 DUP1
0x2e8 DUP1
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec DUP3
0x2ed DUP2
0x2ee SUB
0x2ef DUP3
0x2f0 MSTORE
0x2f1 PUSH1 0xf
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 DUP1
0x2f9 PUSH32 0x53484120646f65736e7420776f726b0000000000000000000000000000000000
0x31a DUP2
0x31b MSTORE
0x31c POP
0x31d PUSH1 0x20
0x31f ADD
0x320 SWAP2
0x321 POP
0x322 POP
0x323 PUSH1 0x40
0x325 MLOAD
0x326 DUP1
0x327 SWAP2
0x328 SUB
0x329 SWAP1
0x32a LOG1
---
0x2c2: JUMPDEST 
0x2c3: V182 = 0xf9fbd55454309325ccadd998a641a1dfe7cd888eea26c0ae93b95992a13ac144
0x2e4: V183 = 0x40
0x2e6: V184 = M[0x40]
0x2e9: V185 = 0x20
0x2eb: V186 = ADD 0x20 V184
0x2ee: V187 = SUB V186 V184
0x2f0: M[V184] = V187
0x2f1: V188 = 0xf
0x2f4: M[V186] = 0xf
0x2f5: V189 = 0x20
0x2f7: V190 = ADD 0x20 V186
0x2f9: V191 = 0x53484120646f65736e7420776f726b0000000000000000000000000000000000
0x31b: M[V190] = 0x53484120646f65736e7420776f726b0000000000000000000000000000000000
0x31d: V192 = 0x20
0x31f: V193 = ADD 0x20 V190
0x323: V194 = 0x40
0x325: V195 = M[0x40]
0x328: V196 = SUB V193 V195
0x32a: LOG V195 V196 0xf9fbd55454309325ccadd998a641a1dfe7cd888eea26c0ae93b95992a13ac144
---
Entry stack: [V11, 0xca, V47, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V47, V130]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x2bc, 0x2c2]
Successors: [0xca]
---
0x32b JUMPDEST
0x32c POP
0x32d POP
0x32e JUMP
---
0x32b: JUMPDEST 
0x32e: JUMP 0xca
---
Entry stack: [V11, 0xca, V47, V130]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x32f
[0x32f:0x385]
---
Predecessors: [0xd8]
Successors: [0x386, 0x38a]
---
0x32f JUMPDEST
0x330 PUSH1 0x0
0x332 DUP1
0x333 SWAP1
0x334 SLOAD
0x335 SWAP1
0x336 PUSH2 0x100
0x339 EXP
0x33a SWAP1
0x33b DIV
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 CALLER
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f EQ
0x380 ISZERO
0x381 ISZERO
0x382 PUSH2 0x38a
0x385 JUMPI
---
0x32f: JUMPDEST 
0x330: V197 = 0x0
0x334: V198 = S[0x0]
0x336: V199 = 0x100
0x339: V200 = EXP 0x100 0x0
0x33b: V201 = DIV V198 0x1
0x33c: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x352: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x368: V206 = CALLER
0x369: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x37f: V209 = EQ V208 V205
0x380: V210 = ISZERO V209
0x381: V211 = ISZERO V210
0x382: V212 = 0x38a
0x385: JUMPI 0x38a V211
---
Entry stack: [V11, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0x386
[0x386:0x389]
---
Predecessors: [0x32f]
Successors: []
---
0x386 PUSH1 0x0
0x388 DUP1
0x389 REVERT
---
0x386: V213 = 0x0
0x389: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0x38a
[0x38a:0x3dd]
---
Predecessors: [0x32f]
Successors: [0x3de, 0x3e7]
---
0x38a JUMPDEST
0x38b CALLER
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 PUSH2 0x8fc
0x3a5 ADDRESS
0x3a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bb AND
0x3bc BALANCE
0x3bd SWAP1
0x3be DUP2
0x3bf ISZERO
0x3c0 MUL
0x3c1 SWAP1
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 PUSH1 0x0
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca DUP1
0x3cb DUP4
0x3cc SUB
0x3cd DUP2
0x3ce DUP6
0x3cf DUP9
0x3d0 DUP9
0x3d1 CALL
0x3d2 SWAP4
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 POP
0x3d7 ISZERO
0x3d8 DUP1
0x3d9 ISZERO
0x3da PUSH2 0x3e7
0x3dd JUMPI
---
0x38a: JUMPDEST 
0x38b: V214 = CALLER
0x38c: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3a2: V217 = 0x8fc
0x3a5: V218 = ADDRESS
0x3a6: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bb: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3bc: V221 = BALANCE V220
0x3bf: V222 = ISZERO V221
0x3c0: V223 = MUL V222 0x8fc
0x3c2: V224 = 0x40
0x3c4: V225 = M[0x40]
0x3c5: V226 = 0x0
0x3c7: V227 = 0x40
0x3c9: V228 = M[0x40]
0x3cc: V229 = SUB V225 V228
0x3d1: V230 = CALL V223 V216 V221 V228 V229 V228 0x0
0x3d7: V231 = ISZERO V230
0x3d9: V232 = ISZERO V231
0x3da: V233 = 0x3e7
0x3dd: JUMPI 0x3e7 V232
---
Entry stack: [V11, 0xe1]
Stack pops: 0
Stack additions: [V231]
Exit stack: [V11, 0xe1, V231]

================================

Block 0x3de
[0x3de:0x3e6]
---
Predecessors: [0x38a]
Successors: []
---
0x3de RETURNDATASIZE
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 RETURNDATACOPY
0x3e3 RETURNDATASIZE
0x3e4 PUSH1 0x0
0x3e6 REVERT
---
0x3de: V234 = RETURNDATASIZE
0x3df: V235 = 0x0
0x3e2: RETURNDATACOPY 0x0 0x0 V234
0x3e3: V236 = RETURNDATASIZE
0x3e4: V237 = 0x0
0x3e6: REVERT 0x0 V236
---
Entry stack: [V11, 0xe1, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe1, V231]

================================

Block 0x3e7
[0x3e7:0x3e9]
---
Predecessors: [0x38a]
Successors: [0xe1]
---
0x3e7 JUMPDEST
0x3e8 POP
0x3e9 JUMP
---
0x3e7: JUMPDEST 
0x3e9: JUMP 0xe1
---
Entry stack: [V11, 0xe1, V231]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ea
[0x3ea:0x415]
---
Predecessors: []
Successors: []
---
0x3ea STOP
0x3eb LOG1
0x3ec PUSH6 0x627a7a723058
0x3f3 SHA3
0x3f4 EXTCODECOPY
0x3f5 MISSING 0xde
0x3f6 SWAP7
0x3f7 DUP12
0x3f8 CODESIZE
0x3f9 ORIGIN
0x3fa MISSING 0x47
0x3fb MISSING 0xbd
0x3fc CALL
0x3fd DUP14
0x3fe MISSING 0x23
0x3ff RETURNDATASIZE
0x400 LOG2
0x401 SELFDESTRUCT
0x402 RETURN
0x403 SWAP6
0x404 MISSING 0xd1
0x405 MISSING 0x5d
0x406 PUSH5 0x1652921d9
0x40c MISSING 0xe5
0x40d MISSING 0xef
0x40e SWAP5
0x40f DUP16
0x410 SWAP2
0x411 MISSING 0xe5
0x412 RETURN
0x413 MISSING 0xc6
0x414 STOP
0x415 MISSING 0x29
---
0x3ea: STOP 
0x3eb: LOG S0 S1 S2
0x3ec: V238 = 0x627a7a723058
0x3f3: V239 = SHA3 0x627a7a723058 S3
0x3f4: EXTCODECOPY V239 S4 S5 S6
0x3f5: MISSING 0xde
0x3f8: V240 = CODESIZE
0x3f9: V241 = ORIGIN
0x3fa: MISSING 0x47
0x3fb: MISSING 0xbd
0x3fc: V242 = CALL S0 S1 S2 S3 S4 S5 S6
0x3fe: MISSING 0x23
0x3ff: V243 = RETURNDATASIZE
0x400: LOG V243 S0 S1 S2
0x401: SELFDESTRUCT S3
0x402: RETURN S0 S1
0x404: MISSING 0xd1
0x405: MISSING 0x5d
0x406: V244 = 0x1652921d9
0x40c: MISSING 0xe5
0x40d: MISSING 0xef
0x411: MISSING 0xe5
0x412: RETURN S0 S1
0x413: MISSING 0xc6
0x414: STOP 
0x415: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V241, V240, S11, S7, S1, S2, S3, S4, S5, S6, S0, S8, S9, S10, S11, S19, V242, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S6, S1, S2, S3, S4, S5, S0, 0x1652921d9, S1, S5, S15, S2, S3, S4, S0, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cbcc77c
Entry block: 0x59
Exit block: 0x13a
Body: 0x59, 0x61, 0x65, 0xe3, 0x13a, 0x13e

Function 1:
Public function signature: 0x31fb67c2
Entry block: 0x70
Exit block: 0xca
Body: 0x70, 0xca, 0x157, 0x16c, 0x170, 0x17c, 0x180, 0x191, 0x19c, 0x1b6, 0x1f8, 0x2b3, 0x2bc, 0x2c2, 0x32b

Function 2:
Public function signature: 0x5d42513b
Entry block: 0xcc
Exit block: 0xe1
Body: 0xcc, 0xd4, 0xd8, 0xe1, 0x32f, 0x386, 0x38a, 0x3de, 0x3e7

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

