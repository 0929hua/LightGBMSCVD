Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x27e235e3
0x34 EQ
0x35 PUSH2 0x54
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x27e235e3
0x34: V9 = EQ 0x27e235e3 V7
0x35: V10 = 0x54
0x38: JUMPI 0x54 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xa1]
---
0x39 DUP1
0x3a PUSH4 0x4e71d92d
0x3f EQ
0x40 PUSH2 0xa1
0x43 JUMPI
---
0x3a: V11 = 0x4e71d92d
0x3f: V12 = EQ 0x4e71d92d V7
0x40: V13 = 0xa1
0x43: JUMPI 0xa1 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xb6]
---
0x44 DUP1
0x45 PUSH4 0xf340fa01
0x4a EQ
0x4b PUSH2 0xb6
0x4e JUMPI
---
0x45: V14 = 0xf340fa01
0x4a: V15 = EQ 0xf340fa01 V7
0x4b: V16 = 0xb6
0x4e: JUMPI 0xb6 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x53]
---
Predecessors: [0x44]
Successors: []
---
0x4f JUMPDEST
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x4f: JUMPDEST 
0x50: V17 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5a]
---
Predecessors: [0x0]
Successors: [0x5b, 0x5f]
---
0x54 JUMPDEST
0x55 CALLVALUE
0x56 ISZERO
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x54: JUMPDEST 
0x55: V18 = CALLVALUE
0x56: V19 = ISZERO V18
0x57: V20 = 0x5f
0x5a: JUMPI 0x5f V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x54]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V21 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x8a]
---
Predecessors: [0x54]
Successors: [0xe4]
---
0x5f JUMPDEST
0x60 PUSH2 0x8b
0x63 PUSH1 0x4
0x65 DUP1
0x66 DUP1
0x67 CALLDATALOAD
0x68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d AND
0x7e SWAP1
0x7f PUSH1 0x20
0x81 ADD
0x82 SWAP1
0x83 SWAP2
0x84 SWAP1
0x85 POP
0x86 POP
0x87 PUSH2 0xe4
0x8a JUMP
---
0x5f: JUMPDEST 
0x60: V22 = 0x8b
0x63: V23 = 0x4
0x67: V24 = CALLDATALOAD 0x4
0x68: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x7f: V27 = 0x20
0x81: V28 = ADD 0x20 0x4
0x87: V29 = 0xe4
0x8a: JUMP 0xe4
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x8b, V26]
Exit stack: [V7, 0x8b, V26]

================================

Block 0x8b
[0x8b:0xa0]
---
Predecessors: [0xe4]
Successors: []
---
0x8b JUMPDEST
0x8c PUSH1 0x40
0x8e MLOAD
0x8f DUP1
0x90 DUP3
0x91 DUP2
0x92 MSTORE
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP2
0x97 POP
0x98 POP
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d SWAP2
0x9e SUB
0x9f SWAP1
0xa0 RETURN
---
0x8b: JUMPDEST 
0x8c: V30 = 0x40
0x8e: V31 = M[0x40]
0x92: M[V31] = V58
0x93: V32 = 0x20
0x95: V33 = ADD 0x20 V31
0x99: V34 = 0x40
0x9b: V35 = M[0x40]
0x9e: V36 = SUB V33 V35
0xa0: RETURN V35 V36
---
Entry stack: [V7, 0x8b, V58]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x8b]

================================

Block 0xa1
[0xa1:0xa7]
---
Predecessors: [0x39]
Successors: [0xa8, 0xac]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa1: JUMPDEST 
0xa2: V37 = CALLVALUE
0xa3: V38 = ISZERO V37
0xa4: V39 = 0xac
0xa7: JUMPI 0xac V38
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa1]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V40 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0xa1]
Successors: [0xfc]
---
0xac JUMPDEST
0xad PUSH2 0xb4
0xb0 PUSH2 0xfc
0xb3 JUMP
---
0xac: JUMPDEST 
0xad: V41 = 0xb4
0xb0: V42 = 0xfc
0xb3: JUMP 0xfc
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V7, 0xb4]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0x1d2]
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb6
[0xb6:0xe1]
---
Predecessors: [0x44]
Successors: [0x1d6]
---
0xb6 JUMPDEST
0xb7 PUSH2 0xe2
0xba PUSH1 0x4
0xbc DUP1
0xbd DUP1
0xbe CALLDATALOAD
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 AND
0xd5 SWAP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda SWAP2
0xdb SWAP1
0xdc POP
0xdd POP
0xde PUSH2 0x1d6
0xe1 JUMP
---
0xb6: JUMPDEST 
0xb7: V43 = 0xe2
0xba: V44 = 0x4
0xbe: V45 = CALLDATALOAD 0x4
0xbf: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xd6: V48 = 0x20
0xd8: V49 = ADD 0x20 0x4
0xde: V50 = 0x1d6
0xe1: JUMP 0x1d6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xe2, V47]
Exit stack: [V7, 0xe2, V47]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: [0x232]
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe4
[0xe4:0xfb]
---
Predecessors: [0x5f]
Successors: [0x8b]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x0
0xe7 PUSH1 0x20
0xe9 MSTORE
0xea DUP1
0xeb PUSH1 0x0
0xed MSTORE
0xee PUSH1 0x40
0xf0 PUSH1 0x0
0xf2 SHA3
0xf3 PUSH1 0x0
0xf5 SWAP2
0xf6 POP
0xf7 SWAP1
0xf8 POP
0xf9 SLOAD
0xfa DUP2
0xfb JUMP
---
0xe4: JUMPDEST 
0xe5: V51 = 0x0
0xe7: V52 = 0x20
0xe9: M[0x20] = 0x0
0xeb: V53 = 0x0
0xed: M[0x0] = V26
0xee: V54 = 0x40
0xf0: V55 = 0x0
0xf2: V56 = SHA3 0x0 0x40
0xf3: V57 = 0x0
0xf9: V58 = S[V56]
0xfb: JUMP 0x8b
---
Entry stack: [V7, 0x8b, V26]
Stack pops: 2
Stack additions: [S1, V58]
Exit stack: [V7, 0x8b, V58]

================================

Block 0xfc
[0xfc:0x14a]
---
Predecessors: [0xac]
Successors: [0x14b, 0x14f]
---
0xfc JUMPDEST
0xfd PUSH1 0x0
0xff DUP1
0x100 PUSH1 0x0
0x102 DUP1
0x103 CALLER
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP1
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a ADD
0x13b PUSH1 0x0
0x13d SHA3
0x13e SLOAD
0x13f SWAP2
0x140 POP
0x141 PUSH1 0x0
0x143 DUP3
0x144 GT
0x145 ISZERO
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0xfc: JUMPDEST 
0xfd: V59 = 0x0
0x100: V60 = 0x0
0x103: V61 = CALLER
0x104: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x11a: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x131: M[0x0] = V65
0x132: V66 = 0x20
0x134: V67 = ADD 0x20 0x0
0x137: M[0x20] = 0x0
0x138: V68 = 0x20
0x13a: V69 = ADD 0x20 0x20
0x13b: V70 = 0x0
0x13d: V71 = SHA3 0x0 0x40
0x13e: V72 = S[V71]
0x141: V73 = 0x0
0x144: V74 = GT V72 0x0
0x145: V75 = ISZERO V74
0x146: V76 = ISZERO V75
0x147: V77 = 0x14f
0x14a: JUMPI 0x14f V76
---
Entry stack: [V7, 0xb4]
Stack pops: 0
Stack additions: [V72, 0x0]
Exit stack: [V7, 0xb4, V72, 0x0]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0xfc]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V78 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V7, 0xb4, V72, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xb4, V72, 0x0]

================================

Block 0x14f
[0x14f:0x1cc]
---
Predecessors: [0xfc]
Successors: [0x1cd, 0x1d1]
---
0x14f JUMPDEST
0x150 PUSH1 0x0
0x152 DUP1
0x153 PUSH1 0x0
0x155 CALLER
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP1
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d PUSH1 0x0
0x18f SHA3
0x190 DUP2
0x191 SWAP1
0x192 SSTORE
0x193 POP
0x194 CALLER
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab DUP3
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af PUSH1 0x0
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 DUP4
0x1b6 SUB
0x1b7 DUP2
0x1b8 DUP6
0x1b9 DUP8
0x1ba PUSH2 0x8796
0x1bd GAS
0x1be SUB
0x1bf CALL
0x1c0 SWAP3
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 SWAP1
0x1c5 POP
0x1c6 DUP1
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x14f: JUMPDEST 
0x150: V79 = 0x0
0x153: V80 = 0x0
0x155: V81 = CALLER
0x156: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x16c: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x181: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x183: M[0x0] = V85
0x184: V86 = 0x20
0x186: V87 = ADD 0x20 0x0
0x189: M[0x20] = 0x0
0x18a: V88 = 0x20
0x18c: V89 = ADD 0x20 0x20
0x18d: V90 = 0x0
0x18f: V91 = SHA3 0x0 0x40
0x192: S[V91] = 0x0
0x194: V92 = CALLER
0x195: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1ac: V95 = 0x40
0x1ae: V96 = M[0x40]
0x1af: V97 = 0x0
0x1b1: V98 = 0x40
0x1b3: V99 = M[0x40]
0x1b6: V100 = SUB V96 V99
0x1ba: V101 = 0x8796
0x1bd: V102 = GAS
0x1be: V103 = SUB V102 0x8796
0x1bf: V104 = CALL V103 V94 V72 V99 V100 V99 0x0
0x1c7: V105 = ISZERO V104
0x1c8: V106 = ISZERO V105
0x1c9: V107 = 0x1d1
0x1cc: JUMPI 0x1d1 V106
---
Entry stack: [V7, 0xb4, V72, 0x0]
Stack pops: 2
Stack additions: [S1, V104]
Exit stack: [V7, 0xb4, V72, V104]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x14f]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V108 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V7, 0xb4, V72, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xb4, V72, V104]

================================

Block 0x1d1
[0x1d1:0x1d1]
---
Predecessors: [0x14f]
Successors: [0x1d2]
---
0x1d1 JUMPDEST
---
0x1d1: JUMPDEST 
---
Entry stack: [V7, 0xb4, V72, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xb4, V72, V104]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1d1]
Successors: [0xb4]
---
0x1d2 JUMPDEST
0x1d3 POP
0x1d4 POP
0x1d5 JUMP
---
0x1d2: JUMPDEST 
0x1d5: JUMP 0xb4
---
Entry stack: [V7, 0xb4, V72, V104]
Stack pops: 3
Stack additions: []
Exit stack: [V7]

================================

Block 0x1d6
[0x1d6:0x1e0]
---
Predecessors: [0xb6]
Successors: [0x1e1, 0x1e5]
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x0
0x1d9 CALLVALUE
0x1da GT
0x1db ISZERO
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V109 = 0x0
0x1d9: V110 = CALLVALUE
0x1da: V111 = GT V110 0x0
0x1db: V112 = ISZERO V111
0x1dc: V113 = ISZERO V112
0x1dd: V114 = 0x1e5
0x1e0: JUMPI 0x1e5 V113
---
Entry stack: [V7, 0xe2, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe2, V47]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x1d6]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V115 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V7, 0xe2, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe2, V47]

================================

Block 0x1e5
[0x1e5:0x231]
---
Predecessors: [0x1d6]
Successors: [0x232]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea DUP4
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 PUSH1 0x0
0x224 SHA3
0x225 PUSH1 0x0
0x227 DUP3
0x228 DUP3
0x229 SLOAD
0x22a ADD
0x22b SWAP3
0x22c POP
0x22d POP
0x22e DUP2
0x22f SWAP1
0x230 SSTORE
0x231 POP
---
0x1e5: JUMPDEST 
0x1e6: V116 = CALLVALUE
0x1e7: V117 = 0x0
0x1eb: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x201: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x218: M[0x0] = V121
0x219: V122 = 0x20
0x21b: V123 = ADD 0x20 0x0
0x21e: M[0x20] = 0x0
0x21f: V124 = 0x20
0x221: V125 = ADD 0x20 0x20
0x222: V126 = 0x0
0x224: V127 = SHA3 0x0 0x40
0x225: V128 = 0x0
0x229: V129 = S[V127]
0x22a: V130 = ADD V129 V116
0x230: S[V127] = V130
---
Entry stack: [V7, 0xe2, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xe2, V47]

================================

Block 0x232
[0x232:0x234]
---
Predecessors: [0x1e5]
Successors: [0xe2]
---
0x232 JUMPDEST
0x233 POP
0x234 JUMP
---
0x232: JUMPDEST 
0x234: JUMP 0xe2
---
Entry stack: [V7, 0xe2, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x235
[0x235:0x273]
---
Predecessors: []
Successors: []
---
0x235 STOP
0x236 LOG1
0x237 PUSH6 0x627a7a723058
0x23e SHA3
0x23f MISSING 0xee
0x240 MISSING 0x4d
0x241 MISSING 0xdc
0x242 MISSING 0x5e
0x243 CODESIZE
0x244 MISSING 0xc8
0x245 DUP2
0x246 SAR
0x247 SHL
0x248 MISSING 0xe7
0x249 MISSING 0xca
0x24a PUSH6 0x2966c0851398
0x251 MISSING 0x2f
0x252 MISSING 0xba
0x253 MISSING 0xbe
0x254 POP
0x255 CALLDATACOPY
0x256 CALLCODE
0x257 PUSH28 0x9318d17dee25620029
---
0x235: STOP 
0x236: LOG S0 S1 S2
0x237: V131 = 0x627a7a723058
0x23e: V132 = SHA3 0x627a7a723058 S3
0x23f: MISSING 0xee
0x240: MISSING 0x4d
0x241: MISSING 0xdc
0x242: MISSING 0x5e
0x243: V133 = CODESIZE
0x244: MISSING 0xc8
0x246: V134 = SAR S1 S0
0x247: V135 = SHL V134 S1
0x248: MISSING 0xe7
0x249: MISSING 0xca
0x24a: V136 = 0x2966c0851398
0x251: MISSING 0x2f
0x252: MISSING 0xba
0x253: MISSING 0xbe
0x255: CALLDATACOPY S1 S2 S3
0x256: V137 = CALLCODE S4 S5 S6 S7 S8 S9 S10
0x257: V138 = 0x9318d17dee25620029
---
Entry stack: []
Stack pops: 0
Stack additions: [V132, V133, V135, 0x2966c0851398, 0x9318d17dee25620029, V137]
Exit stack: []

================================

Function 0:
Public function signature: 0x27e235e3
Entry block: 0x54
Exit block: 0x8b
Body: 0x54, 0x5b, 0x5f, 0x8b, 0xe4

Function 1:
Public function signature: 0x4e71d92d
Entry block: 0xa1
Exit block: 0xb4
Body: 0xa1, 0xa8, 0xac, 0xb4, 0xfc, 0x14b, 0x14f, 0x1cd, 0x1d1, 0x1d2

Function 2:
Public function signature: 0xf340fa01
Entry block: 0xb6
Exit block: 0xe2
Body: 0xb6, 0xe2, 0x1d6, 0x1e1, 0x1e5, 0x232

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

