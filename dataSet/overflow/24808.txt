Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb8
0xa: JUMPI 0xb8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xbd]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xbd
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xbd
0x3e: JUMPI 0xbd V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x14c]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x14c
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x14c
0x49: JUMPI 0x14c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1a6]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x1a6
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x1a6
0x54: JUMPI 0x1a6 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1cf]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1cf
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1cf
0x5f: JUMPI 0x1cf V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x248]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x248
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x248
0x6a: JUMPI 0x248 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x277]
---
0x6b DUP1
0x6c PUSH4 0x42966c68
0x71 EQ
0x72 PUSH2 0x277
0x75 JUMPI
---
0x6c: V26 = 0x42966c68
0x71: V27 = EQ 0x42966c68 V10
0x72: V28 = 0x277
0x75: JUMPI 0x277 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2b2]
---
0x76 DUP1
0x77 PUSH4 0x70a08231
0x7c EQ
0x7d PUSH2 0x2b2
0x80 JUMPI
---
0x77: V29 = 0x70a08231
0x7c: V30 = EQ 0x70a08231 V10
0x7d: V31 = 0x2b2
0x80: JUMPI 0x2b2 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x2ff]
---
0x81 DUP1
0x82 PUSH4 0x79c65068
0x87 EQ
0x88 PUSH2 0x2ff
0x8b JUMPI
---
0x82: V32 = 0x79c65068
0x87: V33 = EQ 0x79c65068 V10
0x88: V34 = 0x2ff
0x8b: JUMPI 0x2ff V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x341]
---
0x8c DUP1
0x8d PUSH4 0x79cc6790
0x92 EQ
0x93 PUSH2 0x341
0x96 JUMPI
---
0x8d: V35 = 0x79cc6790
0x92: V36 = EQ 0x79cc6790 V10
0x93: V37 = 0x341
0x96: JUMPI 0x341 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x39b]
---
0x97 DUP1
0x98 PUSH4 0x95d89b41
0x9d EQ
0x9e PUSH2 0x39b
0xa1 JUMPI
---
0x98: V38 = 0x95d89b41
0x9d: V39 = EQ 0x95d89b41 V10
0x9e: V40 = 0x39b
0xa1: JUMPI 0x39b V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x42a]
---
0xa2 DUP1
0xa3 PUSH4 0xa9059cbb
0xa8 EQ
0xa9 PUSH2 0x42a
0xac JUMPI
---
0xa3: V41 = 0xa9059cbb
0xa8: V42 = EQ 0xa9059cbb V10
0xa9: V43 = 0x42a
0xac: JUMPI 0x42a V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x46c]
---
0xad DUP1
0xae PUSH4 0xdd62ed3e
0xb3 EQ
0xb4 PUSH2 0x46c
0xb7 JUMPI
---
0xae: V44 = 0xdd62ed3e
0xb3: V45 = EQ 0xdd62ed3e V10
0xb4: V46 = 0x46c
0xb7: JUMPI 0x46c V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xbc]
---
Predecessors: [0x0, 0xad]
Successors: []
---
0xb8 JUMPDEST
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb8: JUMPDEST 
0xb9: V47 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0xb]
Successors: [0xc4, 0xc8]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V48 = CALLVALUE
0xbf: V49 = ISZERO V48
0xc0: V50 = 0xc8
0xc3: JUMPI 0xc8 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V51 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0xbd]
Successors: [0x4d8]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xd0
0xcc PUSH2 0x4d8
0xcf JUMP
---
0xc8: JUMPDEST 
0xc9: V52 = 0xd0
0xcc: V53 = 0x4d8
0xcf: JUMP 0x4d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V10, 0xd0]

================================

Block 0xd0
[0xd0:0xf4]
---
Predecessors: [0x56e]
Successors: [0xf5]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 DUP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 DUP3
0xda DUP2
0xdb SUB
0xdc DUP3
0xdd MSTORE
0xde DUP4
0xdf DUP2
0xe0 DUP2
0xe1 MLOAD
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP2
0xe8 POP
0xe9 DUP1
0xea MLOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 DUP1
0xf1 DUP4
0xf2 DUP4
0xf3 PUSH1 0x0
---
0xd0: JUMPDEST 
0xd1: V54 = 0x40
0xd3: V55 = M[0x40]
0xd6: V56 = 0x20
0xd8: V57 = ADD 0x20 V55
0xdb: V58 = SUB V57 V55
0xdd: M[V55] = V58
0xe1: V59 = M[V369]
0xe3: M[V57] = V59
0xe4: V60 = 0x20
0xe6: V61 = ADD 0x20 V57
0xea: V62 = M[V369]
0xec: V63 = 0x20
0xee: V64 = ADD 0x20 V369
0xf3: V65 = 0x0
---
Entry stack: [V10, 0xd0, V369]
Stack pops: 1
Stack additions: [S0, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]
Exit stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]

================================

Block 0xf5
[0xf5:0xfd]
---
Predecessors: [0xd0, 0x106]
Successors: [0xfe, 0x111]
---
0xf5 JUMPDEST
0xf6 DUP4
0xf7 DUP2
0xf8 LT
0xf9 ISZERO
0xfa PUSH2 0x111
0xfd JUMPI
---
0xf5: JUMPDEST 
0xf8: V66 = LT S0 V62
0xf9: V67 = ISZERO V66
0xfa: V68 = 0x111
0xfd: JUMPI 0x111 V67
---
Entry stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, S0]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xf5]
Successors: [0x106]
---
0xfe DUP1
0xff DUP3
0x100 ADD
0x101 MLOAD
0x102 DUP2
0x103 DUP5
0x104 ADD
0x105 MSTORE
---
0x100: V69 = ADD V64 S0
0x101: V70 = M[V69]
0x104: V71 = ADD V61 S0
0x105: M[V71] = V70
---
Entry stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, S0]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfe]
Successors: [0xf5]
---
0x106 JUMPDEST
0x107 PUSH1 0x20
0x109 DUP2
0x10a ADD
0x10b SWAP1
0x10c POP
0x10d PUSH2 0xf5
0x110 JUMP
---
0x106: JUMPDEST 
0x107: V72 = 0x20
0x10a: V73 = ADD S0 0x20
0x10d: V74 = 0xf5
0x110: JUMP 0xf5
---
Entry stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 1
Stack additions: [V73]
Exit stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, V73]

================================

Block 0x111
[0x111:0x124]
---
Predecessors: [0xf5]
Successors: [0x125, 0x13e]
---
0x111 JUMPDEST
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 SWAP1
0x117 POP
0x118 SWAP1
0x119 DUP2
0x11a ADD
0x11b SWAP1
0x11c PUSH1 0x1f
0x11e AND
0x11f DUP1
0x120 ISZERO
0x121 PUSH2 0x13e
0x124 JUMPI
---
0x111: JUMPDEST 
0x11a: V75 = ADD V62 V61
0x11c: V76 = 0x1f
0x11e: V77 = AND 0x1f V62
0x120: V78 = ISZERO V77
0x121: V79 = 0x13e
0x124: JUMPI 0x13e V78
---
Entry stack: [V10, 0xd0, V369, V55, V55, V61, V64, V62, V62, V61, V64, S0]
Stack pops: 7
Stack additions: [V75, V77]
Exit stack: [V10, 0xd0, V369, V55, V55, V75, V77]

================================

Block 0x125
[0x125:0x13d]
---
Predecessors: [0x111]
Successors: [0x13e]
---
0x125 DUP1
0x126 DUP3
0x127 SUB
0x128 DUP1
0x129 MLOAD
0x12a PUSH1 0x1
0x12c DUP4
0x12d PUSH1 0x20
0x12f SUB
0x130 PUSH2 0x100
0x133 EXP
0x134 SUB
0x135 NOT
0x136 AND
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP2
0x13d POP
---
0x127: V80 = SUB V75 V77
0x129: V81 = M[V80]
0x12a: V82 = 0x1
0x12d: V83 = 0x20
0x12f: V84 = SUB 0x20 V77
0x130: V85 = 0x100
0x133: V86 = EXP 0x100 V84
0x134: V87 = SUB V86 0x1
0x135: V88 = NOT V87
0x136: V89 = AND V88 V81
0x138: M[V80] = V89
0x139: V90 = 0x20
0x13b: V91 = ADD 0x20 V80
---
Entry stack: [V10, 0xd0, V369, V55, V55, V75, V77]
Stack pops: 2
Stack additions: [V91, S0]
Exit stack: [V10, 0xd0, V369, V55, V55, V91, V77]

================================

Block 0x13e
[0x13e:0x14b]
---
Predecessors: [0x111, 0x125]
Successors: []
---
0x13e JUMPDEST
0x13f POP
0x140 SWAP3
0x141 POP
0x142 POP
0x143 POP
0x144 PUSH1 0x40
0x146 MLOAD
0x147 DUP1
0x148 SWAP2
0x149 SUB
0x14a SWAP1
0x14b RETURN
---
0x13e: JUMPDEST 
0x144: V92 = 0x40
0x146: V93 = M[0x40]
0x149: V94 = SUB S1 V93
0x14b: RETURN V93 V94
---
Entry stack: [V10, 0xd0, V369, V55, V55, S1, V77]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xd0]

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x3f]
Successors: [0x153, 0x157]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V95 = CALLVALUE
0x14e: V96 = ISZERO V95
0x14f: V97 = 0x157
0x152: JUMPI 0x157 V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14c]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V98 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x157
[0x157:0x18b]
---
Predecessors: [0x14c]
Successors: [0x576]
---
0x157 JUMPDEST
0x158 PUSH2 0x18c
0x15b PUSH1 0x4
0x15d DUP1
0x15e DUP1
0x15f CALLDATALOAD
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 SWAP1
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP1
0x17b SWAP2
0x17c SWAP1
0x17d DUP1
0x17e CALLDATALOAD
0x17f SWAP1
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP1
0x184 SWAP2
0x185 SWAP1
0x186 POP
0x187 POP
0x188 PUSH2 0x576
0x18b JUMP
---
0x157: JUMPDEST 
0x158: V99 = 0x18c
0x15b: V100 = 0x4
0x15f: V101 = CALLDATALOAD 0x4
0x160: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x177: V104 = 0x20
0x179: V105 = ADD 0x20 0x4
0x17e: V106 = CALLDATALOAD 0x24
0x180: V107 = 0x20
0x182: V108 = ADD 0x20 0x24
0x188: V109 = 0x576
0x18b: JUMP 0x576
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18c, V103, V106]
Exit stack: [V10, 0x18c, V103, V106]

================================

Block 0x18c
[0x18c:0x1a5]
---
Predecessors: [0x5fe]
Successors: []
---
0x18c JUMPDEST
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 DUP3
0x192 ISZERO
0x193 ISZERO
0x194 ISZERO
0x195 ISZERO
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP2
0x19c POP
0x19d POP
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 SWAP2
0x1a3 SUB
0x1a4 SWAP1
0x1a5 RETURN
---
0x18c: JUMPDEST 
0x18d: V110 = 0x40
0x18f: V111 = M[0x40]
0x192: V112 = ISZERO 0x1
0x193: V113 = ISZERO 0x0
0x194: V114 = ISZERO 0x1
0x195: V115 = ISZERO 0x0
0x197: M[V111] = 0x1
0x198: V116 = 0x20
0x19a: V117 = ADD 0x20 V111
0x19e: V118 = 0x40
0x1a0: V119 = M[0x40]
0x1a3: V120 = SUB V117 V119
0x1a5: RETURN V119 V120
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a6
[0x1a6:0x1ac]
---
Predecessors: [0x4a]
Successors: [0x1ad, 0x1b1]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V121 = CALLVALUE
0x1a8: V122 = ISZERO V121
0x1a9: V123 = 0x1b1
0x1ac: JUMPI 0x1b1 V122
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V124 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1a6]
Successors: [0x604]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x1b9
0x1b5 PUSH2 0x604
0x1b8 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V125 = 0x1b9
0x1b5: V126 = 0x604
0x1b8: JUMP 0x604
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9]
Exit stack: [V10, 0x1b9]

================================

Block 0x1b9
[0x1b9:0x1ce]
---
Predecessors: [0x604]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be DUP3
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP2
0x1c5 POP
0x1c6 POP
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca DUP1
0x1cb SWAP2
0x1cc SUB
0x1cd SWAP1
0x1ce RETURN
---
0x1b9: JUMPDEST 
0x1ba: V127 = 0x40
0x1bc: V128 = M[0x40]
0x1c0: M[V128] = V440
0x1c1: V129 = 0x20
0x1c3: V130 = ADD 0x20 V128
0x1c7: V131 = 0x40
0x1c9: V132 = M[0x40]
0x1cc: V133 = SUB V130 V132
0x1ce: RETURN V132 V133
---
Entry stack: [V10, 0x1b9, V440]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b9]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x55]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V134 = CALLVALUE
0x1d1: V135 = ISZERO V134
0x1d2: V136 = 0x1da
0x1d5: JUMPI 0x1da V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V137 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x22d]
---
Predecessors: [0x1cf]
Successors: [0x60a]
---
0x1da JUMPDEST
0x1db PUSH2 0x22e
0x1de PUSH1 0x4
0x1e0 DUP1
0x1e1 DUP1
0x1e2 CALLDATALOAD
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP1
0x201 CALLDATALOAD
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 SWAP1
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d SWAP2
0x21e SWAP1
0x21f DUP1
0x220 CALLDATALOAD
0x221 SWAP1
0x222 PUSH1 0x20
0x224 ADD
0x225 SWAP1
0x226 SWAP2
0x227 SWAP1
0x228 POP
0x229 POP
0x22a PUSH2 0x60a
0x22d JUMP
---
0x1da: JUMPDEST 
0x1db: V138 = 0x22e
0x1de: V139 = 0x4
0x1e2: V140 = CALLDATALOAD 0x4
0x1e3: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1fa: V143 = 0x20
0x1fc: V144 = ADD 0x20 0x4
0x201: V145 = CALLDATALOAD 0x24
0x202: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x219: V148 = 0x20
0x21b: V149 = ADD 0x20 0x24
0x220: V150 = CALLDATALOAD 0x44
0x222: V151 = 0x20
0x224: V152 = ADD 0x20 0x44
0x22a: V153 = 0x60a
0x22d: JUMP 0x60a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22e, V142, V147, V150]
Exit stack: [V10, 0x22e, V142, V147, V150]

================================

Block 0x22e
[0x22e:0x247]
---
Predecessors: [0x731]
Successors: []
---
0x22e JUMPDEST
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 DUP3
0x234 ISZERO
0x235 ISZERO
0x236 ISZERO
0x237 ISZERO
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x20
0x23c ADD
0x23d SWAP2
0x23e POP
0x23f POP
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 SWAP2
0x245 SUB
0x246 SWAP1
0x247 RETURN
---
0x22e: JUMPDEST 
0x22f: V154 = 0x40
0x231: V155 = M[0x40]
0x234: V156 = ISZERO 0x1
0x235: V157 = ISZERO 0x0
0x236: V158 = ISZERO 0x1
0x237: V159 = ISZERO 0x0
0x239: M[V155] = 0x1
0x23a: V160 = 0x20
0x23c: V161 = ADD 0x20 V155
0x240: V162 = 0x40
0x242: V163 = M[0x40]
0x245: V164 = SUB V161 V163
0x247: RETURN V163 V164
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x248
[0x248:0x24e]
---
Predecessors: [0x60]
Successors: [0x24f, 0x253]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x248: JUMPDEST 
0x249: V165 = CALLVALUE
0x24a: V166 = ISZERO V165
0x24b: V167 = 0x253
0x24e: JUMPI 0x253 V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x248]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V168 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x253
[0x253:0x25a]
---
Predecessors: [0x248]
Successors: [0x738]
---
0x253 JUMPDEST
0x254 PUSH2 0x25b
0x257 PUSH2 0x738
0x25a JUMP
---
0x253: JUMPDEST 
0x254: V169 = 0x25b
0x257: V170 = 0x738
0x25a: JUMP 0x738
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25b]
Exit stack: [V10, 0x25b]

================================

Block 0x25b
[0x25b:0x276]
---
Predecessors: [0x738]
Successors: []
---
0x25b JUMPDEST
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP3
0x261 PUSH1 0xff
0x263 AND
0x264 PUSH1 0xff
0x266 AND
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP2
0x26d POP
0x26e POP
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 RETURN
---
0x25b: JUMPDEST 
0x25c: V171 = 0x40
0x25e: V172 = M[0x40]
0x261: V173 = 0xff
0x263: V174 = AND 0xff V510
0x264: V175 = 0xff
0x266: V176 = AND 0xff V174
0x268: M[V172] = V176
0x269: V177 = 0x20
0x26b: V178 = ADD 0x20 V172
0x26f: V179 = 0x40
0x271: V180 = M[0x40]
0x274: V181 = SUB V178 V180
0x276: RETURN V180 V181
---
Entry stack: [V10, 0x25b, V510]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25b]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x6b]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V182 = CALLVALUE
0x279: V183 = ISZERO V182
0x27a: V184 = 0x282
0x27d: JUMPI 0x282 V183
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V185 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x297]
---
Predecessors: [0x277]
Successors: [0x74b]
---
0x282 JUMPDEST
0x283 PUSH2 0x298
0x286 PUSH1 0x4
0x288 DUP1
0x289 DUP1
0x28a CALLDATALOAD
0x28b SWAP1
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP1
0x290 SWAP2
0x291 SWAP1
0x292 POP
0x293 POP
0x294 PUSH2 0x74b
0x297 JUMP
---
0x282: JUMPDEST 
0x283: V186 = 0x298
0x286: V187 = 0x4
0x28a: V188 = CALLDATALOAD 0x4
0x28c: V189 = 0x20
0x28e: V190 = ADD 0x20 0x4
0x294: V191 = 0x74b
0x297: JUMP 0x74b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x298, V188]
Exit stack: [V10, 0x298, V188]

================================

Block 0x298
[0x298:0x2b1]
---
Predecessors: [0x84b]
Successors: []
---
0x298 JUMPDEST
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d DUP3
0x29e ISZERO
0x29f ISZERO
0x2a0 ISZERO
0x2a1 ISZERO
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 SWAP2
0x2a8 POP
0x2a9 POP
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x298: JUMPDEST 
0x299: V192 = 0x40
0x29b: V193 = M[0x40]
0x29e: V194 = ISZERO 0x1
0x29f: V195 = ISZERO 0x0
0x2a0: V196 = ISZERO 0x1
0x2a1: V197 = ISZERO 0x0
0x2a3: M[V193] = 0x1
0x2a4: V198 = 0x20
0x2a6: V199 = ADD 0x20 V193
0x2aa: V200 = 0x40
0x2ac: V201 = M[0x40]
0x2af: V202 = SUB V199 V201
0x2b1: RETURN V201 V202
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x76]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V203 = CALLVALUE
0x2b4: V204 = ISZERO V203
0x2b5: V205 = 0x2bd
0x2b8: JUMPI 0x2bd V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V206 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bd
[0x2bd:0x2e8]
---
Predecessors: [0x2b2]
Successors: [0x850]
---
0x2bd JUMPDEST
0x2be PUSH2 0x2e9
0x2c1 PUSH1 0x4
0x2c3 DUP1
0x2c4 DUP1
0x2c5 CALLDATALOAD
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc SWAP1
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 SWAP1
0x2e1 SWAP2
0x2e2 SWAP1
0x2e3 POP
0x2e4 POP
0x2e5 PUSH2 0x850
0x2e8 JUMP
---
0x2bd: JUMPDEST 
0x2be: V207 = 0x2e9
0x2c1: V208 = 0x4
0x2c5: V209 = CALLDATALOAD 0x4
0x2c6: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x2dd: V212 = 0x20
0x2df: V213 = ADD 0x20 0x4
0x2e5: V214 = 0x850
0x2e8: JUMP 0x850
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e9, V211]
Exit stack: [V10, 0x2e9, V211]

================================

Block 0x2e9
[0x2e9:0x2fe]
---
Predecessors: [0x850]
Successors: []
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee DUP3
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 SWAP2
0x2f5 POP
0x2f6 POP
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb SWAP2
0x2fc SUB
0x2fd SWAP1
0x2fe RETURN
---
0x2e9: JUMPDEST 
0x2ea: V215 = 0x40
0x2ec: V216 = M[0x40]
0x2f0: M[V216] = V571
0x2f1: V217 = 0x20
0x2f3: V218 = ADD 0x20 V216
0x2f7: V219 = 0x40
0x2f9: V220 = M[0x40]
0x2fc: V221 = SUB V218 V220
0x2fe: RETURN V220 V221
---
Entry stack: [V10, 0x2e9, V571]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2e9]

================================

Block 0x2ff
[0x2ff:0x305]
---
Predecessors: [0x81]
Successors: [0x306, 0x30a]
---
0x2ff JUMPDEST
0x300 CALLVALUE
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2ff: JUMPDEST 
0x300: V222 = CALLVALUE
0x301: V223 = ISZERO V222
0x302: V224 = 0x30a
0x305: JUMPI 0x30a V223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2ff]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V225 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30a
[0x30a:0x33e]
---
Predecessors: [0x2ff]
Successors: [0x868]
---
0x30a JUMPDEST
0x30b PUSH2 0x33f
0x30e PUSH1 0x4
0x310 DUP1
0x311 DUP1
0x312 CALLDATALOAD
0x313 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x328 AND
0x329 SWAP1
0x32a PUSH1 0x20
0x32c ADD
0x32d SWAP1
0x32e SWAP2
0x32f SWAP1
0x330 DUP1
0x331 CALLDATALOAD
0x332 SWAP1
0x333 PUSH1 0x20
0x335 ADD
0x336 SWAP1
0x337 SWAP2
0x338 SWAP1
0x339 POP
0x33a POP
0x33b PUSH2 0x868
0x33e JUMP
---
0x30a: JUMPDEST 
0x30b: V226 = 0x33f
0x30e: V227 = 0x4
0x312: V228 = CALLDATALOAD 0x4
0x313: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x328: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x32a: V231 = 0x20
0x32c: V232 = ADD 0x20 0x4
0x331: V233 = CALLDATALOAD 0x24
0x333: V234 = 0x20
0x335: V235 = ADD 0x20 0x24
0x33b: V236 = 0x868
0x33e: JUMP 0x868
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33f, V230, V233]
Exit stack: [V10, 0x33f, V230, V233]

================================

Block 0x33f
[0x33f:0x340]
---
Predecessors: [0x97b]
Successors: []
---
0x33f JUMPDEST
0x340 STOP
---
0x33f: JUMPDEST 
0x340: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x341
[0x341:0x347]
---
Predecessors: [0x8c]
Successors: [0x348, 0x34c]
---
0x341 JUMPDEST
0x342 CALLVALUE
0x343 ISZERO
0x344 PUSH2 0x34c
0x347 JUMPI
---
0x341: JUMPDEST 
0x342: V237 = CALLVALUE
0x343: V238 = ISZERO V237
0x344: V239 = 0x34c
0x347: JUMPI 0x34c V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x341]
Successors: []
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b REVERT
---
0x348: V240 = 0x0
0x34b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34c
[0x34c:0x380]
---
Predecessors: [0x341]
Successors: [0x97f]
---
0x34c JUMPDEST
0x34d PUSH2 0x381
0x350 PUSH1 0x4
0x352 DUP1
0x353 DUP1
0x354 CALLDATALOAD
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b SWAP1
0x36c PUSH1 0x20
0x36e ADD
0x36f SWAP1
0x370 SWAP2
0x371 SWAP1
0x372 DUP1
0x373 CALLDATALOAD
0x374 SWAP1
0x375 PUSH1 0x20
0x377 ADD
0x378 SWAP1
0x379 SWAP2
0x37a SWAP1
0x37b POP
0x37c POP
0x37d PUSH2 0x97f
0x380 JUMP
---
0x34c: JUMPDEST 
0x34d: V241 = 0x381
0x350: V242 = 0x4
0x354: V243 = CALLDATALOAD 0x4
0x355: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x36c: V246 = 0x20
0x36e: V247 = ADD 0x20 0x4
0x373: V248 = CALLDATALOAD 0x24
0x375: V249 = 0x20
0x377: V250 = ADD 0x20 0x24
0x37d: V251 = 0x97f
0x380: JUMP 0x97f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x381, V245, V248]
Exit stack: [V10, 0x381, V245, V248]

================================

Block 0x381
[0x381:0x39a]
---
Predecessors: [0xb94]
Successors: []
---
0x381 JUMPDEST
0x382 PUSH1 0x40
0x384 MLOAD
0x385 DUP1
0x386 DUP3
0x387 ISZERO
0x388 ISZERO
0x389 ISZERO
0x38a ISZERO
0x38b DUP2
0x38c MSTORE
0x38d PUSH1 0x20
0x38f ADD
0x390 SWAP2
0x391 POP
0x392 POP
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a RETURN
---
0x381: JUMPDEST 
0x382: V252 = 0x40
0x384: V253 = M[0x40]
0x387: V254 = ISZERO 0x1
0x388: V255 = ISZERO 0x0
0x389: V256 = ISZERO 0x1
0x38a: V257 = ISZERO 0x0
0x38c: M[V253] = 0x1
0x38d: V258 = 0x20
0x38f: V259 = ADD 0x20 V253
0x393: V260 = 0x40
0x395: V261 = M[0x40]
0x398: V262 = SUB V259 V261
0x39a: RETURN V261 V262
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x39b
[0x39b:0x3a1]
---
Predecessors: [0x97]
Successors: [0x3a2, 0x3a6]
---
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V263 = CALLVALUE
0x39d: V264 = ISZERO V263
0x39e: V265 = 0x3a6
0x3a1: JUMPI 0x3a6 V264
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39b]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V266 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a6
[0x3a6:0x3ad]
---
Predecessors: [0x39b]
Successors: [0xb9a]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x3ae
0x3aa PUSH2 0xb9a
0x3ad JUMP
---
0x3a6: JUMPDEST 
0x3a7: V267 = 0x3ae
0x3aa: V268 = 0xb9a
0x3ad: JUMP 0xb9a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ae]
Exit stack: [V10, 0x3ae]

================================

Block 0x3ae
[0x3ae:0x3d2]
---
Predecessors: [0xc30]
Successors: [0x3d3]
---
0x3ae JUMPDEST
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 DUP1
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 DUP3
0x3b8 DUP2
0x3b9 SUB
0x3ba DUP3
0x3bb MSTORE
0x3bc DUP4
0x3bd DUP2
0x3be DUP2
0x3bf MLOAD
0x3c0 DUP2
0x3c1 MSTORE
0x3c2 PUSH1 0x20
0x3c4 ADD
0x3c5 SWAP2
0x3c6 POP
0x3c7 DUP1
0x3c8 MLOAD
0x3c9 SWAP1
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd SWAP1
0x3ce DUP1
0x3cf DUP4
0x3d0 DUP4
0x3d1 PUSH1 0x0
---
0x3ae: JUMPDEST 
0x3af: V269 = 0x40
0x3b1: V270 = M[0x40]
0x3b4: V271 = 0x20
0x3b6: V272 = ADD 0x20 V270
0x3b9: V273 = SUB V272 V270
0x3bb: M[V270] = V273
0x3bf: V274 = M[V744]
0x3c1: M[V272] = V274
0x3c2: V275 = 0x20
0x3c4: V276 = ADD 0x20 V272
0x3c8: V277 = M[V744]
0x3ca: V278 = 0x20
0x3cc: V279 = ADD 0x20 V744
0x3d1: V280 = 0x0
---
Entry stack: [V10, 0x3ae, V744]
Stack pops: 1
Stack additions: [S0, V270, V270, V276, V279, V277, V277, V276, V279, 0x0]
Exit stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, 0x0]

================================

Block 0x3d3
[0x3d3:0x3db]
---
Predecessors: [0x3ae, 0x3e4]
Successors: [0x3dc, 0x3ef]
---
0x3d3 JUMPDEST
0x3d4 DUP4
0x3d5 DUP2
0x3d6 LT
0x3d7 ISZERO
0x3d8 PUSH2 0x3ef
0x3db JUMPI
---
0x3d3: JUMPDEST 
0x3d6: V281 = LT S0 V277
0x3d7: V282 = ISZERO V281
0x3d8: V283 = 0x3ef
0x3db: JUMPI 0x3ef V282
---
Entry stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, S0]

================================

Block 0x3dc
[0x3dc:0x3e3]
---
Predecessors: [0x3d3]
Successors: [0x3e4]
---
0x3dc DUP1
0x3dd DUP3
0x3de ADD
0x3df MLOAD
0x3e0 DUP2
0x3e1 DUP5
0x3e2 ADD
0x3e3 MSTORE
---
0x3de: V284 = ADD V279 S0
0x3df: V285 = M[V284]
0x3e2: V286 = ADD V276 S0
0x3e3: M[V286] = V285
---
Entry stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, S0]

================================

Block 0x3e4
[0x3e4:0x3ee]
---
Predecessors: [0x3dc]
Successors: [0x3d3]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x20
0x3e7 DUP2
0x3e8 ADD
0x3e9 SWAP1
0x3ea POP
0x3eb PUSH2 0x3d3
0x3ee JUMP
---
0x3e4: JUMPDEST 
0x3e5: V287 = 0x20
0x3e8: V288 = ADD S0 0x20
0x3eb: V289 = 0x3d3
0x3ee: JUMP 0x3d3
---
Entry stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 1
Stack additions: [V288]
Exit stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, V288]

================================

Block 0x3ef
[0x3ef:0x402]
---
Predecessors: [0x3d3]
Successors: [0x403, 0x41c]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 SWAP1
0x3f5 POP
0x3f6 SWAP1
0x3f7 DUP2
0x3f8 ADD
0x3f9 SWAP1
0x3fa PUSH1 0x1f
0x3fc AND
0x3fd DUP1
0x3fe ISZERO
0x3ff PUSH2 0x41c
0x402 JUMPI
---
0x3ef: JUMPDEST 
0x3f8: V290 = ADD V277 V276
0x3fa: V291 = 0x1f
0x3fc: V292 = AND 0x1f V277
0x3fe: V293 = ISZERO V292
0x3ff: V294 = 0x41c
0x402: JUMPI 0x41c V293
---
Entry stack: [V10, 0x3ae, V744, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 7
Stack additions: [V290, V292]
Exit stack: [V10, 0x3ae, V744, V270, V270, V290, V292]

================================

Block 0x403
[0x403:0x41b]
---
Predecessors: [0x3ef]
Successors: [0x41c]
---
0x403 DUP1
0x404 DUP3
0x405 SUB
0x406 DUP1
0x407 MLOAD
0x408 PUSH1 0x1
0x40a DUP4
0x40b PUSH1 0x20
0x40d SUB
0x40e PUSH2 0x100
0x411 EXP
0x412 SUB
0x413 NOT
0x414 AND
0x415 DUP2
0x416 MSTORE
0x417 PUSH1 0x20
0x419 ADD
0x41a SWAP2
0x41b POP
---
0x405: V295 = SUB V290 V292
0x407: V296 = M[V295]
0x408: V297 = 0x1
0x40b: V298 = 0x20
0x40d: V299 = SUB 0x20 V292
0x40e: V300 = 0x100
0x411: V301 = EXP 0x100 V299
0x412: V302 = SUB V301 0x1
0x413: V303 = NOT V302
0x414: V304 = AND V303 V296
0x416: M[V295] = V304
0x417: V305 = 0x20
0x419: V306 = ADD 0x20 V295
---
Entry stack: [V10, 0x3ae, V744, V270, V270, V290, V292]
Stack pops: 2
Stack additions: [V306, S0]
Exit stack: [V10, 0x3ae, V744, V270, V270, V306, V292]

================================

Block 0x41c
[0x41c:0x429]
---
Predecessors: [0x3ef, 0x403]
Successors: []
---
0x41c JUMPDEST
0x41d POP
0x41e SWAP3
0x41f POP
0x420 POP
0x421 POP
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP1
0x426 SWAP2
0x427 SUB
0x428 SWAP1
0x429 RETURN
---
0x41c: JUMPDEST 
0x422: V307 = 0x40
0x424: V308 = M[0x40]
0x427: V309 = SUB S1 V308
0x429: RETURN V308 V309
---
Entry stack: [V10, 0x3ae, V744, V270, V270, S1, V292]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x3ae]

================================

Block 0x42a
[0x42a:0x430]
---
Predecessors: [0xa2]
Successors: [0x431, 0x435]
---
0x42a JUMPDEST
0x42b CALLVALUE
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x42a: JUMPDEST 
0x42b: V310 = CALLVALUE
0x42c: V311 = ISZERO V310
0x42d: V312 = 0x435
0x430: JUMPI 0x435 V311
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x42a]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V313 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x435
[0x435:0x469]
---
Predecessors: [0x42a]
Successors: [0xc38]
---
0x435 JUMPDEST
0x436 PUSH2 0x46a
0x439 PUSH1 0x4
0x43b DUP1
0x43c DUP1
0x43d CALLDATALOAD
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 SWAP1
0x455 PUSH1 0x20
0x457 ADD
0x458 SWAP1
0x459 SWAP2
0x45a SWAP1
0x45b DUP1
0x45c CALLDATALOAD
0x45d SWAP1
0x45e PUSH1 0x20
0x460 ADD
0x461 SWAP1
0x462 SWAP2
0x463 SWAP1
0x464 POP
0x465 POP
0x466 PUSH2 0xc38
0x469 JUMP
---
0x435: JUMPDEST 
0x436: V314 = 0x46a
0x439: V315 = 0x4
0x43d: V316 = CALLDATALOAD 0x4
0x43e: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x455: V319 = 0x20
0x457: V320 = ADD 0x20 0x4
0x45c: V321 = CALLDATALOAD 0x24
0x45e: V322 = 0x20
0x460: V323 = ADD 0x20 0x24
0x466: V324 = 0xc38
0x469: JUMP 0xc38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x46a, V318, V321]
Exit stack: [V10, 0x46a, V318, V321]

================================

Block 0x46a
[0x46a:0x46b]
---
Predecessors: [0xc44]
Successors: []
---
0x46a JUMPDEST
0x46b STOP
---
0x46a: JUMPDEST 
0x46b: STOP 
---
Entry stack: [V10, 0x22e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S0]

================================

Block 0x46c
[0x46c:0x472]
---
Predecessors: [0xad]
Successors: [0x473, 0x477]
---
0x46c JUMPDEST
0x46d CALLVALUE
0x46e ISZERO
0x46f PUSH2 0x477
0x472 JUMPI
---
0x46c: JUMPDEST 
0x46d: V325 = CALLVALUE
0x46e: V326 = ISZERO V325
0x46f: V327 = 0x477
0x472: JUMPI 0x477 V326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x473
[0x473:0x476]
---
Predecessors: [0x46c]
Successors: []
---
0x473 PUSH1 0x0
0x475 DUP1
0x476 REVERT
---
0x473: V328 = 0x0
0x476: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x477
[0x477:0x4c1]
---
Predecessors: [0x46c]
Successors: [0xc48]
---
0x477 JUMPDEST
0x478 PUSH2 0x4c2
0x47b PUSH1 0x4
0x47d DUP1
0x47e DUP1
0x47f CALLDATALOAD
0x480 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x495 AND
0x496 SWAP1
0x497 PUSH1 0x20
0x499 ADD
0x49a SWAP1
0x49b SWAP2
0x49c SWAP1
0x49d DUP1
0x49e CALLDATALOAD
0x49f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b4 AND
0x4b5 SWAP1
0x4b6 PUSH1 0x20
0x4b8 ADD
0x4b9 SWAP1
0x4ba SWAP2
0x4bb SWAP1
0x4bc POP
0x4bd POP
0x4be PUSH2 0xc48
0x4c1 JUMP
---
0x477: JUMPDEST 
0x478: V329 = 0x4c2
0x47b: V330 = 0x4
0x47f: V331 = CALLDATALOAD 0x4
0x480: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x495: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x497: V334 = 0x20
0x499: V335 = ADD 0x20 0x4
0x49e: V336 = CALLDATALOAD 0x24
0x49f: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x4b6: V339 = 0x20
0x4b8: V340 = ADD 0x20 0x24
0x4be: V341 = 0xc48
0x4c1: JUMP 0xc48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4c2, V333, V338]
Exit stack: [V10, 0x4c2, V333, V338]

================================

Block 0x4c2
[0x4c2:0x4d7]
---
Predecessors: [0xc48]
Successors: []
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 DUP1
0x4c7 DUP3
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x20
0x4cc ADD
0x4cd SWAP2
0x4ce POP
0x4cf POP
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 DUP1
0x4d4 SWAP2
0x4d5 SUB
0x4d6 SWAP1
0x4d7 RETURN
---
0x4c2: JUMPDEST 
0x4c3: V342 = 0x40
0x4c5: V343 = M[0x40]
0x4c9: M[V343] = V803
0x4ca: V344 = 0x20
0x4cc: V345 = ADD 0x20 V343
0x4d0: V346 = 0x40
0x4d2: V347 = M[0x40]
0x4d5: V348 = SUB V345 V347
0x4d7: RETURN V347 V348
---
Entry stack: [V10, 0x4c2, V803]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4c2]

================================

Block 0x4d8
[0x4d8:0x527]
---
Predecessors: [0xc8]
Successors: [0x528, 0x56e]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc SLOAD
0x4dd PUSH1 0x1
0x4df DUP2
0x4e0 PUSH1 0x1
0x4e2 AND
0x4e3 ISZERO
0x4e4 PUSH2 0x100
0x4e7 MUL
0x4e8 SUB
0x4e9 AND
0x4ea PUSH1 0x2
0x4ec SWAP1
0x4ed DIV
0x4ee DUP1
0x4ef PUSH1 0x1f
0x4f1 ADD
0x4f2 PUSH1 0x20
0x4f4 DUP1
0x4f5 SWAP2
0x4f6 DIV
0x4f7 MUL
0x4f8 PUSH1 0x20
0x4fa ADD
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe SWAP1
0x4ff DUP2
0x500 ADD
0x501 PUSH1 0x40
0x503 MSTORE
0x504 DUP1
0x505 SWAP3
0x506 SWAP2
0x507 SWAP1
0x508 DUP2
0x509 DUP2
0x50a MSTORE
0x50b PUSH1 0x20
0x50d ADD
0x50e DUP3
0x50f DUP1
0x510 SLOAD
0x511 PUSH1 0x1
0x513 DUP2
0x514 PUSH1 0x1
0x516 AND
0x517 ISZERO
0x518 PUSH2 0x100
0x51b MUL
0x51c SUB
0x51d AND
0x51e PUSH1 0x2
0x520 SWAP1
0x521 DIV
0x522 DUP1
0x523 ISZERO
0x524 PUSH2 0x56e
0x527 JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V349 = 0x0
0x4dc: V350 = S[0x0]
0x4dd: V351 = 0x1
0x4e0: V352 = 0x1
0x4e2: V353 = AND 0x1 V350
0x4e3: V354 = ISZERO V353
0x4e4: V355 = 0x100
0x4e7: V356 = MUL 0x100 V354
0x4e8: V357 = SUB V356 0x1
0x4e9: V358 = AND V357 V350
0x4ea: V359 = 0x2
0x4ed: V360 = DIV V358 0x2
0x4ef: V361 = 0x1f
0x4f1: V362 = ADD 0x1f V360
0x4f2: V363 = 0x20
0x4f6: V364 = DIV V362 0x20
0x4f7: V365 = MUL V364 0x20
0x4f8: V366 = 0x20
0x4fa: V367 = ADD 0x20 V365
0x4fb: V368 = 0x40
0x4fd: V369 = M[0x40]
0x500: V370 = ADD V369 V367
0x501: V371 = 0x40
0x503: M[0x40] = V370
0x50a: M[V369] = V360
0x50b: V372 = 0x20
0x50d: V373 = ADD 0x20 V369
0x510: V374 = S[0x0]
0x511: V375 = 0x1
0x514: V376 = 0x1
0x516: V377 = AND 0x1 V374
0x517: V378 = ISZERO V377
0x518: V379 = 0x100
0x51b: V380 = MUL 0x100 V378
0x51c: V381 = SUB V380 0x1
0x51d: V382 = AND V381 V374
0x51e: V383 = 0x2
0x521: V384 = DIV V382 0x2
0x523: V385 = ISZERO V384
0x524: V386 = 0x56e
0x527: JUMPI 0x56e V385
---
Entry stack: [V10, 0xd0]
Stack pops: 0
Stack additions: [V369, 0x0, V360, V373, 0x0, V384]
Exit stack: [V10, 0xd0, V369, 0x0, V360, V373, 0x0, V384]

================================

Block 0x528
[0x528:0x52f]
---
Predecessors: [0x4d8]
Successors: [0x530, 0x543]
---
0x528 DUP1
0x529 PUSH1 0x1f
0x52b LT
0x52c PUSH2 0x543
0x52f JUMPI
---
0x529: V387 = 0x1f
0x52b: V388 = LT 0x1f V384
0x52c: V389 = 0x543
0x52f: JUMPI 0x543 V388
---
Entry stack: [V10, 0xd0, V369, 0x0, V360, V373, 0x0, V384]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xd0, V369, 0x0, V360, V373, 0x0, V384]

================================

Block 0x530
[0x530:0x542]
---
Predecessors: [0x528]
Successors: [0x56e]
---
0x530 PUSH2 0x100
0x533 DUP1
0x534 DUP4
0x535 SLOAD
0x536 DIV
0x537 MUL
0x538 DUP4
0x539 MSTORE
0x53a SWAP2
0x53b PUSH1 0x20
0x53d ADD
0x53e SWAP2
0x53f PUSH2 0x56e
0x542 JUMP
---
0x530: V390 = 0x100
0x535: V391 = S[0x0]
0x536: V392 = DIV V391 0x100
0x537: V393 = MUL V392 0x100
0x539: M[V373] = V393
0x53b: V394 = 0x20
0x53d: V395 = ADD 0x20 V373
0x53f: V396 = 0x56e
0x542: JUMP 0x56e
---
Entry stack: [V10, 0xd0, V369, 0x0, V360, V373, 0x0, V384]
Stack pops: 3
Stack additions: [V395, S1, S0]
Exit stack: [V10, 0xd0, V369, 0x0, V360, V395, 0x0, V384]

================================

Block 0x543
[0x543:0x550]
---
Predecessors: [0x528]
Successors: [0x551]
---
0x543 JUMPDEST
0x544 DUP3
0x545 ADD
0x546 SWAP2
0x547 SWAP1
0x548 PUSH1 0x0
0x54a MSTORE
0x54b PUSH1 0x20
0x54d PUSH1 0x0
0x54f SHA3
0x550 SWAP1
---
0x543: JUMPDEST 
0x545: V397 = ADD V373 V384
0x548: V398 = 0x0
0x54a: M[0x0] = 0x0
0x54b: V399 = 0x20
0x54d: V400 = 0x0
0x54f: V401 = SHA3 0x0 0x20
---
Entry stack: [V10, 0xd0, V369, 0x0, V360, V373, 0x0, V384]
Stack pops: 3
Stack additions: [V397, V401, S2]
Exit stack: [V10, 0xd0, V369, 0x0, V360, V397, V401, V373]

================================

Block 0x551
[0x551:0x564]
---
Predecessors: [0x543, 0x551]
Successors: [0x551, 0x565]
---
0x551 JUMPDEST
0x552 DUP2
0x553 SLOAD
0x554 DUP2
0x555 MSTORE
0x556 SWAP1
0x557 PUSH1 0x1
0x559 ADD
0x55a SWAP1
0x55b PUSH1 0x20
0x55d ADD
0x55e DUP1
0x55f DUP4
0x560 GT
0x561 PUSH2 0x551
0x564 JUMPI
---
0x551: JUMPDEST 
0x553: V402 = S[S1]
0x555: M[S0] = V402
0x557: V403 = 0x1
0x559: V404 = ADD 0x1 S1
0x55b: V405 = 0x20
0x55d: V406 = ADD 0x20 S0
0x560: V407 = GT V397 V406
0x561: V408 = 0x551
0x564: JUMPI 0x551 V407
---
Entry stack: [V10, 0xd0, V369, 0x0, V360, V397, S1, S0]
Stack pops: 3
Stack additions: [S2, V404, V406]
Exit stack: [V10, 0xd0, V369, 0x0, V360, V397, V404, V406]

================================

Block 0x565
[0x565:0x56d]
---
Predecessors: [0x551]
Successors: [0x56e]
---
0x565 DUP3
0x566 SWAP1
0x567 SUB
0x568 PUSH1 0x1f
0x56a AND
0x56b DUP3
0x56c ADD
0x56d SWAP2
---
0x567: V409 = SUB V406 V397
0x568: V410 = 0x1f
0x56a: V411 = AND 0x1f V409
0x56c: V412 = ADD V397 V411
---
Entry stack: [V10, 0xd0, V369, 0x0, V360, V397, V404, V406]
Stack pops: 3
Stack additions: [V412, S1, S2]
Exit stack: [V10, 0xd0, V369, 0x0, V360, V412, V404, V397]

================================

Block 0x56e
[0x56e:0x575]
---
Predecessors: [0x4d8, 0x530, 0x565]
Successors: [0xd0]
---
0x56e JUMPDEST
0x56f POP
0x570 POP
0x571 POP
0x572 POP
0x573 POP
0x574 DUP2
0x575 JUMP
---
0x56e: JUMPDEST 
0x575: JUMP 0xd0
---
Entry stack: [V10, 0xd0, V369, 0x0, V360, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0xd0, V369]

================================

Block 0x576
[0x576:0x5fd]
---
Predecessors: [0x157]
Successors: [0x5fe]
---
0x576 JUMPDEST
0x577 PUSH1 0x0
0x579 DUP2
0x57a PUSH1 0x5
0x57c PUSH1 0x0
0x57e CALLER
0x57f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x594 AND
0x595 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5aa AND
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x20
0x5af ADD
0x5b0 SWAP1
0x5b1 DUP2
0x5b2 MSTORE
0x5b3 PUSH1 0x20
0x5b5 ADD
0x5b6 PUSH1 0x0
0x5b8 SHA3
0x5b9 PUSH1 0x0
0x5bb DUP6
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e7 AND
0x5e8 DUP2
0x5e9 MSTORE
0x5ea PUSH1 0x20
0x5ec ADD
0x5ed SWAP1
0x5ee DUP2
0x5ef MSTORE
0x5f0 PUSH1 0x20
0x5f2 ADD
0x5f3 PUSH1 0x0
0x5f5 SHA3
0x5f6 DUP2
0x5f7 SWAP1
0x5f8 SSTORE
0x5f9 POP
0x5fa PUSH1 0x1
0x5fc SWAP1
0x5fd POP
---
0x576: JUMPDEST 
0x577: V413 = 0x0
0x57a: V414 = 0x5
0x57c: V415 = 0x0
0x57e: V416 = CALLER
0x57f: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x594: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x595: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x5aa: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x5ac: M[0x0] = V420
0x5ad: V421 = 0x20
0x5af: V422 = ADD 0x20 0x0
0x5b2: M[0x20] = 0x5
0x5b3: V423 = 0x20
0x5b5: V424 = ADD 0x20 0x20
0x5b6: V425 = 0x0
0x5b8: V426 = SHA3 0x0 0x40
0x5b9: V427 = 0x0
0x5bc: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x5d2: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x5e9: M[0x0] = V431
0x5ea: V432 = 0x20
0x5ec: V433 = ADD 0x20 0x0
0x5ef: M[0x20] = V426
0x5f0: V434 = 0x20
0x5f2: V435 = ADD 0x20 0x20
0x5f3: V436 = 0x0
0x5f5: V437 = SHA3 0x0 0x40
0x5f8: S[V437] = V106
0x5fa: V438 = 0x1
---
Entry stack: [V10, 0x18c, V103, V106]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x18c, V103, V106, 0x1]

================================

Block 0x5fe
[0x5fe:0x603]
---
Predecessors: [0x576]
Successors: [0x18c]
---
0x5fe JUMPDEST
0x5ff SWAP3
0x600 SWAP2
0x601 POP
0x602 POP
0x603 JUMP
---
0x5fe: JUMPDEST 
0x603: JUMP 0x18c
---
Entry stack: [V10, 0x18c, V103, V106, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x604
[0x604:0x609]
---
Predecessors: [0x1b1]
Successors: [0x1b9]
---
0x604 JUMPDEST
0x605 PUSH1 0x3
0x607 SLOAD
0x608 DUP2
0x609 JUMP
---
0x604: JUMPDEST 
0x605: V439 = 0x3
0x607: V440 = S[0x3]
0x609: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9]
Stack pops: 1
Stack additions: [S0, V440]
Exit stack: [V10, 0x1b9, V440]

================================

Block 0x60a
[0x60a:0x692]
---
Predecessors: [0x1da]
Successors: [0x693, 0x697]
---
0x60a JUMPDEST
0x60b PUSH1 0x0
0x60d PUSH1 0x5
0x60f PUSH1 0x0
0x611 DUP6
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63d AND
0x63e DUP2
0x63f MSTORE
0x640 PUSH1 0x20
0x642 ADD
0x643 SWAP1
0x644 DUP2
0x645 MSTORE
0x646 PUSH1 0x20
0x648 ADD
0x649 PUSH1 0x0
0x64b SHA3
0x64c PUSH1 0x0
0x64e CALLER
0x64f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x664 AND
0x665 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67a AND
0x67b DUP2
0x67c MSTORE
0x67d PUSH1 0x20
0x67f ADD
0x680 SWAP1
0x681 DUP2
0x682 MSTORE
0x683 PUSH1 0x20
0x685 ADD
0x686 PUSH1 0x0
0x688 SHA3
0x689 SLOAD
0x68a DUP3
0x68b GT
0x68c ISZERO
0x68d ISZERO
0x68e ISZERO
0x68f PUSH2 0x697
0x692 JUMPI
---
0x60a: JUMPDEST 
0x60b: V441 = 0x0
0x60d: V442 = 0x5
0x60f: V443 = 0x0
0x612: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x628: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x63f: M[0x0] = V447
0x640: V448 = 0x20
0x642: V449 = ADD 0x20 0x0
0x645: M[0x20] = 0x5
0x646: V450 = 0x20
0x648: V451 = ADD 0x20 0x20
0x649: V452 = 0x0
0x64b: V453 = SHA3 0x0 0x40
0x64c: V454 = 0x0
0x64e: V455 = CALLER
0x64f: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x664: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x665: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x67c: M[0x0] = V459
0x67d: V460 = 0x20
0x67f: V461 = ADD 0x20 0x0
0x682: M[0x20] = V453
0x683: V462 = 0x20
0x685: V463 = ADD 0x20 0x20
0x686: V464 = 0x0
0x688: V465 = SHA3 0x0 0x40
0x689: V466 = S[V465]
0x68b: V467 = GT V150 V466
0x68c: V468 = ISZERO V467
0x68d: V469 = ISZERO V468
0x68e: V470 = ISZERO V469
0x68f: V471 = 0x697
0x692: JUMPI 0x697 V470
---
Entry stack: [V10, 0x22e, V142, V147, V150]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0]

================================

Block 0x693
[0x693:0x696]
---
Predecessors: [0x60a]
Successors: []
---
0x693 PUSH1 0x0
0x695 DUP1
0x696 REVERT
---
0x693: V472 = 0x0
0x696: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, V142, V147, V150, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0]

================================

Block 0x697
[0x697:0x72b]
---
Predecessors: [0x60a]
Successors: [0xc6d]
---
0x697 JUMPDEST
0x698 DUP2
0x699 PUSH1 0x5
0x69b PUSH1 0x0
0x69d DUP7
0x69e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b3 AND
0x6b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c9 AND
0x6ca DUP2
0x6cb MSTORE
0x6cc PUSH1 0x20
0x6ce ADD
0x6cf SWAP1
0x6d0 DUP2
0x6d1 MSTORE
0x6d2 PUSH1 0x20
0x6d4 ADD
0x6d5 PUSH1 0x0
0x6d7 SHA3
0x6d8 PUSH1 0x0
0x6da CALLER
0x6db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f0 AND
0x6f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x706 AND
0x707 DUP2
0x708 MSTORE
0x709 PUSH1 0x20
0x70b ADD
0x70c SWAP1
0x70d DUP2
0x70e MSTORE
0x70f PUSH1 0x20
0x711 ADD
0x712 PUSH1 0x0
0x714 SHA3
0x715 PUSH1 0x0
0x717 DUP3
0x718 DUP3
0x719 SLOAD
0x71a SUB
0x71b SWAP3
0x71c POP
0x71d POP
0x71e DUP2
0x71f SWAP1
0x720 SSTORE
0x721 POP
0x722 PUSH2 0x72c
0x725 DUP5
0x726 DUP5
0x727 DUP5
0x728 PUSH2 0xc6d
0x72b JUMP
---
0x697: JUMPDEST 
0x699: V473 = 0x5
0x69b: V474 = 0x0
0x69e: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x6b4: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x6cb: M[0x0] = V478
0x6cc: V479 = 0x20
0x6ce: V480 = ADD 0x20 0x0
0x6d1: M[0x20] = 0x5
0x6d2: V481 = 0x20
0x6d4: V482 = ADD 0x20 0x20
0x6d5: V483 = 0x0
0x6d7: V484 = SHA3 0x0 0x40
0x6d8: V485 = 0x0
0x6da: V486 = CALLER
0x6db: V487 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x6f1: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x706: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x708: M[0x0] = V490
0x709: V491 = 0x20
0x70b: V492 = ADD 0x20 0x0
0x70e: M[0x20] = V484
0x70f: V493 = 0x20
0x711: V494 = ADD 0x20 0x20
0x712: V495 = 0x0
0x714: V496 = SHA3 0x0 0x40
0x715: V497 = 0x0
0x719: V498 = S[V496]
0x71a: V499 = SUB V498 V150
0x720: S[V496] = V499
0x722: V500 = 0x72c
0x728: V501 = 0xc6d
0x72b: JUMP 0xc6d
---
Entry stack: [V10, 0x22e, V142, V147, V150, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x72c, S3, S2, S1]
Exit stack: [V10, 0x22e, V142, V147, V150, 0x0, 0x72c, V142, V147, V150]

================================

Block 0x72c
[0x72c:0x730]
---
Predecessors: [0xf7e]
Successors: [0x731]
---
0x72c JUMPDEST
0x72d PUSH1 0x1
0x72f SWAP1
0x730 POP
---
0x72c: JUMPDEST 
0x72d: V502 = 0x1
---
Entry stack: [V10, 0x22e, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x22e, S3, S2, S1, 0x1]

================================

Block 0x731
[0x731:0x737]
---
Predecessors: [0x72c]
Successors: [0x22e]
---
0x731 JUMPDEST
0x732 SWAP4
0x733 SWAP3
0x734 POP
0x735 POP
0x736 POP
0x737 JUMP
---
0x731: JUMPDEST 
0x737: JUMP 0x22e
---
Entry stack: [V10, 0x22e, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x738
[0x738:0x74a]
---
Predecessors: [0x253]
Successors: [0x25b]
---
0x738 JUMPDEST
0x739 PUSH1 0x2
0x73b PUSH1 0x0
0x73d SWAP1
0x73e SLOAD
0x73f SWAP1
0x740 PUSH2 0x100
0x743 EXP
0x744 SWAP1
0x745 DIV
0x746 PUSH1 0xff
0x748 AND
0x749 DUP2
0x74a JUMP
---
0x738: JUMPDEST 
0x739: V503 = 0x2
0x73b: V504 = 0x0
0x73e: V505 = S[0x2]
0x740: V506 = 0x100
0x743: V507 = EXP 0x100 0x0
0x745: V508 = DIV V505 0x1
0x746: V509 = 0xff
0x748: V510 = AND 0xff V508
0x74a: JUMP 0x25b
---
Entry stack: [V10, 0x25b]
Stack pops: 1
Stack additions: [S0, V510]
Exit stack: [V10, 0x25b, V510]

================================

Block 0x74b
[0x74b:0x796]
---
Predecessors: [0x282]
Successors: [0x797, 0x79b]
---
0x74b JUMPDEST
0x74c PUSH1 0x0
0x74e DUP2
0x74f PUSH1 0x4
0x751 PUSH1 0x0
0x753 CALLER
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77f AND
0x780 DUP2
0x781 MSTORE
0x782 PUSH1 0x20
0x784 ADD
0x785 SWAP1
0x786 DUP2
0x787 MSTORE
0x788 PUSH1 0x20
0x78a ADD
0x78b PUSH1 0x0
0x78d SHA3
0x78e SLOAD
0x78f LT
0x790 ISZERO
0x791 ISZERO
0x792 ISZERO
0x793 PUSH2 0x79b
0x796 JUMPI
---
0x74b: JUMPDEST 
0x74c: V511 = 0x0
0x74f: V512 = 0x4
0x751: V513 = 0x0
0x753: V514 = CALLER
0x754: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x76a: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x77f: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x781: M[0x0] = V518
0x782: V519 = 0x20
0x784: V520 = ADD 0x20 0x0
0x787: M[0x20] = 0x4
0x788: V521 = 0x20
0x78a: V522 = ADD 0x20 0x20
0x78b: V523 = 0x0
0x78d: V524 = SHA3 0x0 0x40
0x78e: V525 = S[V524]
0x78f: V526 = LT V525 V188
0x790: V527 = ISZERO V526
0x791: V528 = ISZERO V527
0x792: V529 = ISZERO V528
0x793: V530 = 0x79b
0x796: JUMPI 0x79b V529
---
Entry stack: [V10, 0x298, V188]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V10, 0x298, V188, 0x0]

================================

Block 0x797
[0x797:0x79a]
---
Predecessors: [0x74b]
Successors: []
---
0x797 PUSH1 0x0
0x799 DUP1
0x79a REVERT
---
0x797: V531 = 0x0
0x79a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x298, V188, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x298, V188, 0x0]

================================

Block 0x79b
[0x79b:0x84a]
---
Predecessors: [0x74b]
Successors: [0x84b]
---
0x79b JUMPDEST
0x79c DUP2
0x79d PUSH1 0x4
0x79f PUSH1 0x0
0x7a1 CALLER
0x7a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b7 AND
0x7b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cd AND
0x7ce DUP2
0x7cf MSTORE
0x7d0 PUSH1 0x20
0x7d2 ADD
0x7d3 SWAP1
0x7d4 DUP2
0x7d5 MSTORE
0x7d6 PUSH1 0x20
0x7d8 ADD
0x7d9 PUSH1 0x0
0x7db SHA3
0x7dc PUSH1 0x0
0x7de DUP3
0x7df DUP3
0x7e0 SLOAD
0x7e1 SUB
0x7e2 SWAP3
0x7e3 POP
0x7e4 POP
0x7e5 DUP2
0x7e6 SWAP1
0x7e7 SSTORE
0x7e8 POP
0x7e9 DUP2
0x7ea PUSH1 0x3
0x7ec PUSH1 0x0
0x7ee DUP3
0x7ef DUP3
0x7f0 SLOAD
0x7f1 SUB
0x7f2 SWAP3
0x7f3 POP
0x7f4 POP
0x7f5 DUP2
0x7f6 SWAP1
0x7f7 SSTORE
0x7f8 POP
0x7f9 CALLER
0x7fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80f AND
0x810 PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x831 DUP4
0x832 PUSH1 0x40
0x834 MLOAD
0x835 DUP1
0x836 DUP3
0x837 DUP2
0x838 MSTORE
0x839 PUSH1 0x20
0x83b ADD
0x83c SWAP2
0x83d POP
0x83e POP
0x83f PUSH1 0x40
0x841 MLOAD
0x842 DUP1
0x843 SWAP2
0x844 SUB
0x845 SWAP1
0x846 LOG2
0x847 PUSH1 0x1
0x849 SWAP1
0x84a POP
---
0x79b: JUMPDEST 
0x79d: V532 = 0x4
0x79f: V533 = 0x0
0x7a1: V534 = CALLER
0x7a2: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b7: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x7b8: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cd: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x7cf: M[0x0] = V538
0x7d0: V539 = 0x20
0x7d2: V540 = ADD 0x20 0x0
0x7d5: M[0x20] = 0x4
0x7d6: V541 = 0x20
0x7d8: V542 = ADD 0x20 0x20
0x7d9: V543 = 0x0
0x7db: V544 = SHA3 0x0 0x40
0x7dc: V545 = 0x0
0x7e0: V546 = S[V544]
0x7e1: V547 = SUB V546 V188
0x7e7: S[V544] = V547
0x7ea: V548 = 0x3
0x7ec: V549 = 0x0
0x7f0: V550 = S[0x3]
0x7f1: V551 = SUB V550 V188
0x7f7: S[0x3] = V551
0x7f9: V552 = CALLER
0x7fa: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x80f: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x810: V555 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x832: V556 = 0x40
0x834: V557 = M[0x40]
0x838: M[V557] = V188
0x839: V558 = 0x20
0x83b: V559 = ADD 0x20 V557
0x83f: V560 = 0x40
0x841: V561 = M[0x40]
0x844: V562 = SUB V559 V561
0x846: LOG V561 V562 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V554
0x847: V563 = 0x1
---
Entry stack: [V10, 0x298, V188, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x298, V188, 0x1]

================================

Block 0x84b
[0x84b:0x84f]
---
Predecessors: [0x79b]
Successors: [0x298]
---
0x84b JUMPDEST
0x84c SWAP2
0x84d SWAP1
0x84e POP
0x84f JUMP
---
0x84b: JUMPDEST 
0x84f: JUMP 0x298
---
Entry stack: [V10, 0x298, V188, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x850
[0x850:0x867]
---
Predecessors: [0x2bd]
Successors: [0x2e9]
---
0x850 JUMPDEST
0x851 PUSH1 0x4
0x853 PUSH1 0x20
0x855 MSTORE
0x856 DUP1
0x857 PUSH1 0x0
0x859 MSTORE
0x85a PUSH1 0x40
0x85c PUSH1 0x0
0x85e SHA3
0x85f PUSH1 0x0
0x861 SWAP2
0x862 POP
0x863 SWAP1
0x864 POP
0x865 SLOAD
0x866 DUP2
0x867 JUMP
---
0x850: JUMPDEST 
0x851: V564 = 0x4
0x853: V565 = 0x20
0x855: M[0x20] = 0x4
0x857: V566 = 0x0
0x859: M[0x0] = V211
0x85a: V567 = 0x40
0x85c: V568 = 0x0
0x85e: V569 = SHA3 0x0 0x40
0x85f: V570 = 0x0
0x865: V571 = S[V569]
0x867: JUMP 0x2e9
---
Entry stack: [V10, 0x2e9, V211]
Stack pops: 2
Stack additions: [S1, V571]
Exit stack: [V10, 0x2e9, V571]

================================

Block 0x868
[0x868:0x97a]
---
Predecessors: [0x30a]
Successors: [0x97b]
---
0x868 JUMPDEST
0x869 DUP1
0x86a PUSH1 0x4
0x86c PUSH1 0x0
0x86e DUP5
0x86f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x884 AND
0x885 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89a AND
0x89b DUP2
0x89c MSTORE
0x89d PUSH1 0x20
0x89f ADD
0x8a0 SWAP1
0x8a1 DUP2
0x8a2 MSTORE
0x8a3 PUSH1 0x20
0x8a5 ADD
0x8a6 PUSH1 0x0
0x8a8 SHA3
0x8a9 PUSH1 0x0
0x8ab DUP3
0x8ac DUP3
0x8ad SLOAD
0x8ae ADD
0x8af SWAP3
0x8b0 POP
0x8b1 POP
0x8b2 DUP2
0x8b3 SWAP1
0x8b4 SSTORE
0x8b5 POP
0x8b6 DUP1
0x8b7 PUSH1 0x3
0x8b9 PUSH1 0x0
0x8bb DUP3
0x8bc DUP3
0x8bd SLOAD
0x8be ADD
0x8bf SWAP3
0x8c0 POP
0x8c1 POP
0x8c2 DUP2
0x8c3 SWAP1
0x8c4 SSTORE
0x8c5 POP
0x8c6 CALLER
0x8c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8dc AND
0x8dd PUSH1 0x0
0x8df PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x900 DUP4
0x901 PUSH1 0x40
0x903 MLOAD
0x904 DUP1
0x905 DUP3
0x906 DUP2
0x907 MSTORE
0x908 PUSH1 0x20
0x90a ADD
0x90b SWAP2
0x90c POP
0x90d POP
0x90e PUSH1 0x40
0x910 MLOAD
0x911 DUP1
0x912 SWAP2
0x913 SUB
0x914 SWAP1
0x915 LOG3
0x916 DUP2
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d CALLER
0x92e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x943 AND
0x944 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x965 DUP4
0x966 PUSH1 0x40
0x968 MLOAD
0x969 DUP1
0x96a DUP3
0x96b DUP2
0x96c MSTORE
0x96d PUSH1 0x20
0x96f ADD
0x970 SWAP2
0x971 POP
0x972 POP
0x973 PUSH1 0x40
0x975 MLOAD
0x976 DUP1
0x977 SWAP2
0x978 SUB
0x979 SWAP1
0x97a LOG3
---
0x868: JUMPDEST 
0x86a: V572 = 0x4
0x86c: V573 = 0x0
0x86f: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x884: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x885: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0x89a: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x89c: M[0x0] = V577
0x89d: V578 = 0x20
0x89f: V579 = ADD 0x20 0x0
0x8a2: M[0x20] = 0x4
0x8a3: V580 = 0x20
0x8a5: V581 = ADD 0x20 0x20
0x8a6: V582 = 0x0
0x8a8: V583 = SHA3 0x0 0x40
0x8a9: V584 = 0x0
0x8ad: V585 = S[V583]
0x8ae: V586 = ADD V585 V233
0x8b4: S[V583] = V586
0x8b7: V587 = 0x3
0x8b9: V588 = 0x0
0x8bd: V589 = S[0x3]
0x8be: V590 = ADD V589 V233
0x8c4: S[0x3] = V590
0x8c6: V591 = CALLER
0x8c7: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x8dc: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x8dd: V594 = 0x0
0x8df: V595 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x901: V596 = 0x40
0x903: V597 = M[0x40]
0x907: M[V597] = V233
0x908: V598 = 0x20
0x90a: V599 = ADD 0x20 V597
0x90e: V600 = 0x40
0x910: V601 = M[0x40]
0x913: V602 = SUB V599 V601
0x915: LOG V601 V602 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 0x0 V593
0x917: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x92d: V605 = CALLER
0x92e: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0x943: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x944: V608 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x966: V609 = 0x40
0x968: V610 = M[0x40]
0x96c: M[V610] = V233
0x96d: V611 = 0x20
0x96f: V612 = ADD 0x20 V610
0x973: V613 = 0x40
0x975: V614 = M[0x40]
0x978: V615 = SUB V612 V614
0x97a: LOG V614 V615 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V607 V604
---
Entry stack: [V10, 0x33f, V230, V233]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x33f, V230, V233]

================================

Block 0x97b
[0x97b:0x97e]
---
Predecessors: [0x868]
Successors: [0x33f]
---
0x97b JUMPDEST
0x97c POP
0x97d POP
0x97e JUMP
---
0x97b: JUMPDEST 
0x97e: JUMP 0x33f
---
Entry stack: [V10, 0x33f, V230, V233]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x97f
[0x97f:0x9ca]
---
Predecessors: [0x34c]
Successors: [0x9cb, 0x9cf]
---
0x97f JUMPDEST
0x980 PUSH1 0x0
0x982 DUP2
0x983 PUSH1 0x4
0x985 PUSH1 0x0
0x987 DUP6
0x988 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99d AND
0x99e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b3 AND
0x9b4 DUP2
0x9b5 MSTORE
0x9b6 PUSH1 0x20
0x9b8 ADD
0x9b9 SWAP1
0x9ba DUP2
0x9bb MSTORE
0x9bc PUSH1 0x20
0x9be ADD
0x9bf PUSH1 0x0
0x9c1 SHA3
0x9c2 SLOAD
0x9c3 LT
0x9c4 ISZERO
0x9c5 ISZERO
0x9c6 ISZERO
0x9c7 PUSH2 0x9cf
0x9ca JUMPI
---
0x97f: JUMPDEST 
0x980: V616 = 0x0
0x983: V617 = 0x4
0x985: V618 = 0x0
0x988: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x99d: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x99e: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b3: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x9b5: M[0x0] = V622
0x9b6: V623 = 0x20
0x9b8: V624 = ADD 0x20 0x0
0x9bb: M[0x20] = 0x4
0x9bc: V625 = 0x20
0x9be: V626 = ADD 0x20 0x20
0x9bf: V627 = 0x0
0x9c1: V628 = SHA3 0x0 0x40
0x9c2: V629 = S[V628]
0x9c3: V630 = LT V629 V248
0x9c4: V631 = ISZERO V630
0x9c5: V632 = ISZERO V631
0x9c6: V633 = ISZERO V632
0x9c7: V634 = 0x9cf
0x9ca: JUMPI 0x9cf V633
---
Entry stack: [V10, 0x381, V245, V248]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x381, V245, V248, 0x0]

================================

Block 0x9cb
[0x9cb:0x9ce]
---
Predecessors: [0x97f]
Successors: []
---
0x9cb PUSH1 0x0
0x9cd DUP1
0x9ce REVERT
---
0x9cb: V635 = 0x0
0x9ce: REVERT 0x0 0x0
---
Entry stack: [V10, 0x381, V245, V248, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x381, V245, V248, 0x0]

================================

Block 0x9cf
[0x9cf:0xa55]
---
Predecessors: [0x97f]
Successors: [0xa56, 0xa5a]
---
0x9cf JUMPDEST
0x9d0 PUSH1 0x5
0x9d2 PUSH1 0x0
0x9d4 DUP5
0x9d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ea AND
0x9eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa00 AND
0xa01 DUP2
0xa02 MSTORE
0xa03 PUSH1 0x20
0xa05 ADD
0xa06 SWAP1
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b ADD
0xa0c PUSH1 0x0
0xa0e SHA3
0xa0f PUSH1 0x0
0xa11 CALLER
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 AND
0xa28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3d AND
0xa3e DUP2
0xa3f MSTORE
0xa40 PUSH1 0x20
0xa42 ADD
0xa43 SWAP1
0xa44 DUP2
0xa45 MSTORE
0xa46 PUSH1 0x20
0xa48 ADD
0xa49 PUSH1 0x0
0xa4b SHA3
0xa4c SLOAD
0xa4d DUP3
0xa4e GT
0xa4f ISZERO
0xa50 ISZERO
0xa51 ISZERO
0xa52 PUSH2 0xa5a
0xa55 JUMPI
---
0x9cf: JUMPDEST 
0x9d0: V636 = 0x5
0x9d2: V637 = 0x0
0x9d5: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ea: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x9eb: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0xa02: M[0x0] = V641
0xa03: V642 = 0x20
0xa05: V643 = ADD 0x20 0x0
0xa08: M[0x20] = 0x5
0xa09: V644 = 0x20
0xa0b: V645 = ADD 0x20 0x20
0xa0c: V646 = 0x0
0xa0e: V647 = SHA3 0x0 0x40
0xa0f: V648 = 0x0
0xa11: V649 = CALLER
0xa12: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0xa28: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0xa3f: M[0x0] = V653
0xa40: V654 = 0x20
0xa42: V655 = ADD 0x20 0x0
0xa45: M[0x20] = V647
0xa46: V656 = 0x20
0xa48: V657 = ADD 0x20 0x20
0xa49: V658 = 0x0
0xa4b: V659 = SHA3 0x0 0x40
0xa4c: V660 = S[V659]
0xa4e: V661 = GT V248 V660
0xa4f: V662 = ISZERO V661
0xa50: V663 = ISZERO V662
0xa51: V664 = ISZERO V663
0xa52: V665 = 0xa5a
0xa55: JUMPI 0xa5a V664
---
Entry stack: [V10, 0x381, V245, V248, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x381, V245, V248, 0x0]

================================

Block 0xa56
[0xa56:0xa59]
---
Predecessors: [0x9cf]
Successors: []
---
0xa56 PUSH1 0x0
0xa58 DUP1
0xa59 REVERT
---
0xa56: V666 = 0x0
0xa59: REVERT 0x0 0x0
---
Entry stack: [V10, 0x381, V245, V248, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x381, V245, V248, 0x0]

================================

Block 0xa5a
[0xa5a:0xb93]
---
Predecessors: [0x9cf]
Successors: [0xb94]
---
0xa5a JUMPDEST
0xa5b DUP2
0xa5c PUSH1 0x4
0xa5e PUSH1 0x0
0xa60 DUP6
0xa61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa76 AND
0xa77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8c AND
0xa8d DUP2
0xa8e MSTORE
0xa8f PUSH1 0x20
0xa91 ADD
0xa92 SWAP1
0xa93 DUP2
0xa94 MSTORE
0xa95 PUSH1 0x20
0xa97 ADD
0xa98 PUSH1 0x0
0xa9a SHA3
0xa9b PUSH1 0x0
0xa9d DUP3
0xa9e DUP3
0xa9f SLOAD
0xaa0 SUB
0xaa1 SWAP3
0xaa2 POP
0xaa3 POP
0xaa4 DUP2
0xaa5 SWAP1
0xaa6 SSTORE
0xaa7 POP
0xaa8 DUP2
0xaa9 PUSH1 0x5
0xaab PUSH1 0x0
0xaad DUP6
0xaae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac3 AND
0xac4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad9 AND
0xada DUP2
0xadb MSTORE
0xadc PUSH1 0x20
0xade ADD
0xadf SWAP1
0xae0 DUP2
0xae1 MSTORE
0xae2 PUSH1 0x20
0xae4 ADD
0xae5 PUSH1 0x0
0xae7 SHA3
0xae8 PUSH1 0x0
0xaea CALLER
0xaeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb00 AND
0xb01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb16 AND
0xb17 DUP2
0xb18 MSTORE
0xb19 PUSH1 0x20
0xb1b ADD
0xb1c SWAP1
0xb1d DUP2
0xb1e MSTORE
0xb1f PUSH1 0x20
0xb21 ADD
0xb22 PUSH1 0x0
0xb24 SHA3
0xb25 PUSH1 0x0
0xb27 DUP3
0xb28 DUP3
0xb29 SLOAD
0xb2a SUB
0xb2b SWAP3
0xb2c POP
0xb2d POP
0xb2e DUP2
0xb2f SWAP1
0xb30 SSTORE
0xb31 POP
0xb32 DUP2
0xb33 PUSH1 0x3
0xb35 PUSH1 0x0
0xb37 DUP3
0xb38 DUP3
0xb39 SLOAD
0xb3a SUB
0xb3b SWAP3
0xb3c POP
0xb3d POP
0xb3e DUP2
0xb3f SWAP1
0xb40 SSTORE
0xb41 POP
0xb42 DUP3
0xb43 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb58 AND
0xb59 PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0xb7a DUP4
0xb7b PUSH1 0x40
0xb7d MLOAD
0xb7e DUP1
0xb7f DUP3
0xb80 DUP2
0xb81 MSTORE
0xb82 PUSH1 0x20
0xb84 ADD
0xb85 SWAP2
0xb86 POP
0xb87 POP
0xb88 PUSH1 0x40
0xb8a MLOAD
0xb8b DUP1
0xb8c SWAP2
0xb8d SUB
0xb8e SWAP1
0xb8f LOG2
0xb90 PUSH1 0x1
0xb92 SWAP1
0xb93 POP
---
0xa5a: JUMPDEST 
0xa5c: V667 = 0x4
0xa5e: V668 = 0x0
0xa61: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0xa76: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0xa77: V671 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8c: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V670
0xa8e: M[0x0] = V672
0xa8f: V673 = 0x20
0xa91: V674 = ADD 0x20 0x0
0xa94: M[0x20] = 0x4
0xa95: V675 = 0x20
0xa97: V676 = ADD 0x20 0x20
0xa98: V677 = 0x0
0xa9a: V678 = SHA3 0x0 0x40
0xa9b: V679 = 0x0
0xa9f: V680 = S[V678]
0xaa0: V681 = SUB V680 V248
0xaa6: S[V678] = V681
0xaa9: V682 = 0x5
0xaab: V683 = 0x0
0xaae: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xac3: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0xac4: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xad9: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0xadb: M[0x0] = V687
0xadc: V688 = 0x20
0xade: V689 = ADD 0x20 0x0
0xae1: M[0x20] = 0x5
0xae2: V690 = 0x20
0xae4: V691 = ADD 0x20 0x20
0xae5: V692 = 0x0
0xae7: V693 = SHA3 0x0 0x40
0xae8: V694 = 0x0
0xaea: V695 = CALLER
0xaeb: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xb00: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V695
0xb01: V698 = 0xffffffffffffffffffffffffffffffffffffffff
0xb16: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0xb18: M[0x0] = V699
0xb19: V700 = 0x20
0xb1b: V701 = ADD 0x20 0x0
0xb1e: M[0x20] = V693
0xb1f: V702 = 0x20
0xb21: V703 = ADD 0x20 0x20
0xb22: V704 = 0x0
0xb24: V705 = SHA3 0x0 0x40
0xb25: V706 = 0x0
0xb29: V707 = S[V705]
0xb2a: V708 = SUB V707 V248
0xb30: S[V705] = V708
0xb33: V709 = 0x3
0xb35: V710 = 0x0
0xb39: V711 = S[0x3]
0xb3a: V712 = SUB V711 V248
0xb40: S[0x3] = V712
0xb43: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0xb58: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0xb59: V715 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0xb7b: V716 = 0x40
0xb7d: V717 = M[0x40]
0xb81: M[V717] = V248
0xb82: V718 = 0x20
0xb84: V719 = ADD 0x20 V717
0xb88: V720 = 0x40
0xb8a: V721 = M[0x40]
0xb8d: V722 = SUB V719 V721
0xb8f: LOG V721 V722 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V714
0xb90: V723 = 0x1
---
Entry stack: [V10, 0x381, V245, V248, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x381, V245, V248, 0x1]

================================

Block 0xb94
[0xb94:0xb99]
---
Predecessors: [0xa5a]
Successors: [0x381]
---
0xb94 JUMPDEST
0xb95 SWAP3
0xb96 SWAP2
0xb97 POP
0xb98 POP
0xb99 JUMP
---
0xb94: JUMPDEST 
0xb99: JUMP 0x381
---
Entry stack: [V10, 0x381, V245, V248, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xb9a
[0xb9a:0xbe9]
---
Predecessors: [0x3a6]
Successors: [0xbea, 0xc30]
---
0xb9a JUMPDEST
0xb9b PUSH1 0x1
0xb9d DUP1
0xb9e SLOAD
0xb9f PUSH1 0x1
0xba1 DUP2
0xba2 PUSH1 0x1
0xba4 AND
0xba5 ISZERO
0xba6 PUSH2 0x100
0xba9 MUL
0xbaa SUB
0xbab AND
0xbac PUSH1 0x2
0xbae SWAP1
0xbaf DIV
0xbb0 DUP1
0xbb1 PUSH1 0x1f
0xbb3 ADD
0xbb4 PUSH1 0x20
0xbb6 DUP1
0xbb7 SWAP2
0xbb8 DIV
0xbb9 MUL
0xbba PUSH1 0x20
0xbbc ADD
0xbbd PUSH1 0x40
0xbbf MLOAD
0xbc0 SWAP1
0xbc1 DUP2
0xbc2 ADD
0xbc3 PUSH1 0x40
0xbc5 MSTORE
0xbc6 DUP1
0xbc7 SWAP3
0xbc8 SWAP2
0xbc9 SWAP1
0xbca DUP2
0xbcb DUP2
0xbcc MSTORE
0xbcd PUSH1 0x20
0xbcf ADD
0xbd0 DUP3
0xbd1 DUP1
0xbd2 SLOAD
0xbd3 PUSH1 0x1
0xbd5 DUP2
0xbd6 PUSH1 0x1
0xbd8 AND
0xbd9 ISZERO
0xbda PUSH2 0x100
0xbdd MUL
0xbde SUB
0xbdf AND
0xbe0 PUSH1 0x2
0xbe2 SWAP1
0xbe3 DIV
0xbe4 DUP1
0xbe5 ISZERO
0xbe6 PUSH2 0xc30
0xbe9 JUMPI
---
0xb9a: JUMPDEST 
0xb9b: V724 = 0x1
0xb9e: V725 = S[0x1]
0xb9f: V726 = 0x1
0xba2: V727 = 0x1
0xba4: V728 = AND 0x1 V725
0xba5: V729 = ISZERO V728
0xba6: V730 = 0x100
0xba9: V731 = MUL 0x100 V729
0xbaa: V732 = SUB V731 0x1
0xbab: V733 = AND V732 V725
0xbac: V734 = 0x2
0xbaf: V735 = DIV V733 0x2
0xbb1: V736 = 0x1f
0xbb3: V737 = ADD 0x1f V735
0xbb4: V738 = 0x20
0xbb8: V739 = DIV V737 0x20
0xbb9: V740 = MUL V739 0x20
0xbba: V741 = 0x20
0xbbc: V742 = ADD 0x20 V740
0xbbd: V743 = 0x40
0xbbf: V744 = M[0x40]
0xbc2: V745 = ADD V744 V742
0xbc3: V746 = 0x40
0xbc5: M[0x40] = V745
0xbcc: M[V744] = V735
0xbcd: V747 = 0x20
0xbcf: V748 = ADD 0x20 V744
0xbd2: V749 = S[0x1]
0xbd3: V750 = 0x1
0xbd6: V751 = 0x1
0xbd8: V752 = AND 0x1 V749
0xbd9: V753 = ISZERO V752
0xbda: V754 = 0x100
0xbdd: V755 = MUL 0x100 V753
0xbde: V756 = SUB V755 0x1
0xbdf: V757 = AND V756 V749
0xbe0: V758 = 0x2
0xbe3: V759 = DIV V757 0x2
0xbe5: V760 = ISZERO V759
0xbe6: V761 = 0xc30
0xbe9: JUMPI 0xc30 V760
---
Entry stack: [V10, 0x3ae]
Stack pops: 0
Stack additions: [V744, 0x1, V735, V748, 0x1, V759]
Exit stack: [V10, 0x3ae, V744, 0x1, V735, V748, 0x1, V759]

================================

Block 0xbea
[0xbea:0xbf1]
---
Predecessors: [0xb9a]
Successors: [0xbf2, 0xc05]
---
0xbea DUP1
0xbeb PUSH1 0x1f
0xbed LT
0xbee PUSH2 0xc05
0xbf1 JUMPI
---
0xbeb: V762 = 0x1f
0xbed: V763 = LT 0x1f V759
0xbee: V764 = 0xc05
0xbf1: JUMPI 0xc05 V763
---
Entry stack: [V10, 0x3ae, V744, 0x1, V735, V748, 0x1, V759]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3ae, V744, 0x1, V735, V748, 0x1, V759]

================================

Block 0xbf2
[0xbf2:0xc04]
---
Predecessors: [0xbea]
Successors: [0xc30]
---
0xbf2 PUSH2 0x100
0xbf5 DUP1
0xbf6 DUP4
0xbf7 SLOAD
0xbf8 DIV
0xbf9 MUL
0xbfa DUP4
0xbfb MSTORE
0xbfc SWAP2
0xbfd PUSH1 0x20
0xbff ADD
0xc00 SWAP2
0xc01 PUSH2 0xc30
0xc04 JUMP
---
0xbf2: V765 = 0x100
0xbf7: V766 = S[0x1]
0xbf8: V767 = DIV V766 0x100
0xbf9: V768 = MUL V767 0x100
0xbfb: M[V748] = V768
0xbfd: V769 = 0x20
0xbff: V770 = ADD 0x20 V748
0xc01: V771 = 0xc30
0xc04: JUMP 0xc30
---
Entry stack: [V10, 0x3ae, V744, 0x1, V735, V748, 0x1, V759]
Stack pops: 3
Stack additions: [V770, S1, S0]
Exit stack: [V10, 0x3ae, V744, 0x1, V735, V770, 0x1, V759]

================================

Block 0xc05
[0xc05:0xc12]
---
Predecessors: [0xbea]
Successors: [0xc13]
---
0xc05 JUMPDEST
0xc06 DUP3
0xc07 ADD
0xc08 SWAP2
0xc09 SWAP1
0xc0a PUSH1 0x0
0xc0c MSTORE
0xc0d PUSH1 0x20
0xc0f PUSH1 0x0
0xc11 SHA3
0xc12 SWAP1
---
0xc05: JUMPDEST 
0xc07: V772 = ADD V748 V759
0xc0a: V773 = 0x0
0xc0c: M[0x0] = 0x1
0xc0d: V774 = 0x20
0xc0f: V775 = 0x0
0xc11: V776 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x3ae, V744, 0x1, V735, V748, 0x1, V759]
Stack pops: 3
Stack additions: [V772, V776, S2]
Exit stack: [V10, 0x3ae, V744, 0x1, V735, V772, V776, V748]

================================

Block 0xc13
[0xc13:0xc26]
---
Predecessors: [0xc05, 0xc13]
Successors: [0xc13, 0xc27]
---
0xc13 JUMPDEST
0xc14 DUP2
0xc15 SLOAD
0xc16 DUP2
0xc17 MSTORE
0xc18 SWAP1
0xc19 PUSH1 0x1
0xc1b ADD
0xc1c SWAP1
0xc1d PUSH1 0x20
0xc1f ADD
0xc20 DUP1
0xc21 DUP4
0xc22 GT
0xc23 PUSH2 0xc13
0xc26 JUMPI
---
0xc13: JUMPDEST 
0xc15: V777 = S[S1]
0xc17: M[S0] = V777
0xc19: V778 = 0x1
0xc1b: V779 = ADD 0x1 S1
0xc1d: V780 = 0x20
0xc1f: V781 = ADD 0x20 S0
0xc22: V782 = GT V772 V781
0xc23: V783 = 0xc13
0xc26: JUMPI 0xc13 V782
---
Entry stack: [V10, 0x3ae, V744, 0x1, V735, V772, S1, S0]
Stack pops: 3
Stack additions: [S2, V779, V781]
Exit stack: [V10, 0x3ae, V744, 0x1, V735, V772, V779, V781]

================================

Block 0xc27
[0xc27:0xc2f]
---
Predecessors: [0xc13]
Successors: [0xc30]
---
0xc27 DUP3
0xc28 SWAP1
0xc29 SUB
0xc2a PUSH1 0x1f
0xc2c AND
0xc2d DUP3
0xc2e ADD
0xc2f SWAP2
---
0xc29: V784 = SUB V781 V772
0xc2a: V785 = 0x1f
0xc2c: V786 = AND 0x1f V784
0xc2e: V787 = ADD V772 V786
---
Entry stack: [V10, 0x3ae, V744, 0x1, V735, V772, V779, V781]
Stack pops: 3
Stack additions: [V787, S1, S2]
Exit stack: [V10, 0x3ae, V744, 0x1, V735, V787, V779, V772]

================================

Block 0xc30
[0xc30:0xc37]
---
Predecessors: [0xb9a, 0xbf2, 0xc27]
Successors: [0x3ae]
---
0xc30 JUMPDEST
0xc31 POP
0xc32 POP
0xc33 POP
0xc34 POP
0xc35 POP
0xc36 DUP2
0xc37 JUMP
---
0xc30: JUMPDEST 
0xc37: JUMP 0x3ae
---
Entry stack: [V10, 0x3ae, V744, 0x1, V735, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x3ae, V744]

================================

Block 0xc38
[0xc38:0xc42]
---
Predecessors: [0x435]
Successors: [0xc6d]
---
0xc38 JUMPDEST
0xc39 PUSH2 0xc43
0xc3c CALLER
0xc3d DUP4
0xc3e DUP4
0xc3f PUSH2 0xc6d
0xc42 JUMP
---
0xc38: JUMPDEST 
0xc39: V788 = 0xc43
0xc3c: V789 = CALLER
0xc3f: V790 = 0xc6d
0xc42: JUMP 0xc6d
---
Entry stack: [V10, 0x46a, V318, V321]
Stack pops: 2
Stack additions: [S1, S0, 0xc43, V789, S1, S0]
Exit stack: [V10, 0x46a, V318, V321, 0xc43, V789, V318, V321]

================================

Block 0xc43
[0xc43:0xc43]
---
Predecessors: [0xf7e]
Successors: [0xc44]
---
0xc43 JUMPDEST
---
0xc43: JUMPDEST 
---
Entry stack: [V10, 0x22e, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S3, S2, S1, S0]

================================

Block 0xc44
[0xc44:0xc47]
---
Predecessors: [0xc43]
Successors: [0x46a]
---
0xc44 JUMPDEST
0xc45 POP
0xc46 POP
0xc47 JUMP
---
0xc44: JUMPDEST 
0xc47: JUMP S2
---
Entry stack: [V10, 0x22e, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x22e, S3]

================================

Block 0xc48
[0xc48:0xc6c]
---
Predecessors: [0x477]
Successors: [0x4c2]
---
0xc48 JUMPDEST
0xc49 PUSH1 0x5
0xc4b PUSH1 0x20
0xc4d MSTORE
0xc4e DUP2
0xc4f PUSH1 0x0
0xc51 MSTORE
0xc52 PUSH1 0x40
0xc54 PUSH1 0x0
0xc56 SHA3
0xc57 PUSH1 0x20
0xc59 MSTORE
0xc5a DUP1
0xc5b PUSH1 0x0
0xc5d MSTORE
0xc5e PUSH1 0x40
0xc60 PUSH1 0x0
0xc62 SHA3
0xc63 PUSH1 0x0
0xc65 SWAP2
0xc66 POP
0xc67 SWAP2
0xc68 POP
0xc69 POP
0xc6a SLOAD
0xc6b DUP2
0xc6c JUMP
---
0xc48: JUMPDEST 
0xc49: V791 = 0x5
0xc4b: V792 = 0x20
0xc4d: M[0x20] = 0x5
0xc4f: V793 = 0x0
0xc51: M[0x0] = V333
0xc52: V794 = 0x40
0xc54: V795 = 0x0
0xc56: V796 = SHA3 0x0 0x40
0xc57: V797 = 0x20
0xc59: M[0x20] = V796
0xc5b: V798 = 0x0
0xc5d: M[0x0] = V338
0xc5e: V799 = 0x40
0xc60: V800 = 0x0
0xc62: V801 = SHA3 0x0 0x40
0xc63: V802 = 0x0
0xc6a: V803 = S[V801]
0xc6c: JUMP 0x4c2
---
Entry stack: [V10, 0x4c2, V333, V338]
Stack pops: 3
Stack additions: [S2, V803]
Exit stack: [V10, 0x4c2, V803]

================================

Block 0xc6d
[0xc6d:0xc8f]
---
Predecessors: [0x697, 0xc38]
Successors: [0xc90, 0xc94]
---
0xc6d JUMPDEST
0xc6e PUSH1 0x0
0xc70 DUP1
0xc71 DUP4
0xc72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc87 AND
0xc88 EQ
0xc89 ISZERO
0xc8a ISZERO
0xc8b ISZERO
0xc8c PUSH2 0xc94
0xc8f JUMPI
---
0xc6d: JUMPDEST 
0xc6e: V804 = 0x0
0xc72: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0xc87: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xc88: V807 = EQ V806 0x0
0xc89: V808 = ISZERO V807
0xc8a: V809 = ISZERO V808
0xc8b: V810 = ISZERO V809
0xc8c: V811 = 0xc94
0xc8f: JUMPI 0xc94 V810
---
Entry stack: [V10, 0x22e, S7, S6, S5, S4, {0x72c, 0xc43}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x22e, S7, S6, S5, S4, {0x72c, 0xc43}, S2, S1, S0, 0x0]

================================

Block 0xc90
[0xc90:0xc93]
---
Predecessors: [0xc6d]
Successors: []
---
0xc90 PUSH1 0x0
0xc92 DUP1
0xc93 REVERT
---
0xc90: V812 = 0x0
0xc93: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]

================================

Block 0xc94
[0xc94:0xcdd]
---
Predecessors: [0xc6d]
Successors: [0xcde, 0xce2]
---
0xc94 JUMPDEST
0xc95 DUP2
0xc96 PUSH1 0x4
0xc98 PUSH1 0x0
0xc9a DUP7
0xc9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb0 AND
0xcb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc6 AND
0xcc7 DUP2
0xcc8 MSTORE
0xcc9 PUSH1 0x20
0xccb ADD
0xccc SWAP1
0xccd DUP2
0xcce MSTORE
0xccf PUSH1 0x20
0xcd1 ADD
0xcd2 PUSH1 0x0
0xcd4 SHA3
0xcd5 SLOAD
0xcd6 LT
0xcd7 ISZERO
0xcd8 ISZERO
0xcd9 ISZERO
0xcda PUSH2 0xce2
0xcdd JUMPI
---
0xc94: JUMPDEST 
0xc96: V813 = 0x4
0xc98: V814 = 0x0
0xc9b: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb0: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xcb1: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc6: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xcc8: M[0x0] = V818
0xcc9: V819 = 0x20
0xccb: V820 = ADD 0x20 0x0
0xcce: M[0x20] = 0x4
0xccf: V821 = 0x20
0xcd1: V822 = ADD 0x20 0x20
0xcd2: V823 = 0x0
0xcd4: V824 = SHA3 0x0 0x40
0xcd5: V825 = S[V824]
0xcd6: V826 = LT V825 S1
0xcd7: V827 = ISZERO V826
0xcd8: V828 = ISZERO V827
0xcd9: V829 = ISZERO V828
0xcda: V830 = 0xce2
0xcdd: JUMPI 0xce2 V829
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]

================================

Block 0xcde
[0xcde:0xce1]
---
Predecessors: [0xc94]
Successors: []
---
0xcde PUSH1 0x0
0xce0 DUP1
0xce1 REVERT
---
0xcde: V831 = 0x0
0xce1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]

================================

Block 0xce2
[0xce2:0xd6b]
---
Predecessors: [0xc94]
Successors: [0xd6c, 0xd70]
---
0xce2 JUMPDEST
0xce3 PUSH1 0x4
0xce5 PUSH1 0x0
0xce7 DUP5
0xce8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfd AND
0xcfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd13 AND
0xd14 DUP2
0xd15 MSTORE
0xd16 PUSH1 0x20
0xd18 ADD
0xd19 SWAP1
0xd1a DUP2
0xd1b MSTORE
0xd1c PUSH1 0x20
0xd1e ADD
0xd1f PUSH1 0x0
0xd21 SHA3
0xd22 SLOAD
0xd23 DUP3
0xd24 PUSH1 0x4
0xd26 PUSH1 0x0
0xd28 DUP7
0xd29 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3e AND
0xd3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd54 AND
0xd55 DUP2
0xd56 MSTORE
0xd57 PUSH1 0x20
0xd59 ADD
0xd5a SWAP1
0xd5b DUP2
0xd5c MSTORE
0xd5d PUSH1 0x20
0xd5f ADD
0xd60 PUSH1 0x0
0xd62 SHA3
0xd63 SLOAD
0xd64 ADD
0xd65 GT
0xd66 ISZERO
0xd67 ISZERO
0xd68 PUSH2 0xd70
0xd6b JUMPI
---
0xce2: JUMPDEST 
0xce3: V832 = 0x4
0xce5: V833 = 0x0
0xce8: V834 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xcfe: V836 = 0xffffffffffffffffffffffffffffffffffffffff
0xd13: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff V835
0xd15: M[0x0] = V837
0xd16: V838 = 0x20
0xd18: V839 = ADD 0x20 0x0
0xd1b: M[0x20] = 0x4
0xd1c: V840 = 0x20
0xd1e: V841 = ADD 0x20 0x20
0xd1f: V842 = 0x0
0xd21: V843 = SHA3 0x0 0x40
0xd22: V844 = S[V843]
0xd24: V845 = 0x4
0xd26: V846 = 0x0
0xd29: V847 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3e: V848 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd3f: V849 = 0xffffffffffffffffffffffffffffffffffffffff
0xd54: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0xd56: M[0x0] = V850
0xd57: V851 = 0x20
0xd59: V852 = ADD 0x20 0x0
0xd5c: M[0x20] = 0x4
0xd5d: V853 = 0x20
0xd5f: V854 = ADD 0x20 0x20
0xd60: V855 = 0x0
0xd62: V856 = SHA3 0x0 0x40
0xd63: V857 = S[V856]
0xd64: V858 = ADD V857 S1
0xd65: V859 = GT V858 V844
0xd66: V860 = ISZERO V859
0xd67: V861 = ISZERO V860
0xd68: V862 = 0xd70
0xd6b: JUMPI 0xd70 V861
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]

================================

Block 0xd6c
[0xd6c:0xd6f]
---
Predecessors: [0xce2]
Successors: []
---
0xd6c PUSH1 0x0
0xd6e DUP1
0xd6f REVERT
---
0xd6c: V863 = 0x0
0xd6f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]

================================

Block 0xd70
[0xd70:0xf7b]
---
Predecessors: [0xce2]
Successors: [0xf7c, 0xf7d]
---
0xd70 JUMPDEST
0xd71 PUSH1 0x4
0xd73 PUSH1 0x0
0xd75 DUP5
0xd76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8b AND
0xd8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda1 AND
0xda2 DUP2
0xda3 MSTORE
0xda4 PUSH1 0x20
0xda6 ADD
0xda7 SWAP1
0xda8 DUP2
0xda9 MSTORE
0xdaa PUSH1 0x20
0xdac ADD
0xdad PUSH1 0x0
0xdaf SHA3
0xdb0 SLOAD
0xdb1 PUSH1 0x4
0xdb3 PUSH1 0x0
0xdb5 DUP7
0xdb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcb AND
0xdcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde1 AND
0xde2 DUP2
0xde3 MSTORE
0xde4 PUSH1 0x20
0xde6 ADD
0xde7 SWAP1
0xde8 DUP2
0xde9 MSTORE
0xdea PUSH1 0x20
0xdec ADD
0xded PUSH1 0x0
0xdef SHA3
0xdf0 SLOAD
0xdf1 ADD
0xdf2 SWAP1
0xdf3 POP
0xdf4 DUP2
0xdf5 PUSH1 0x4
0xdf7 PUSH1 0x0
0xdf9 DUP7
0xdfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0f AND
0xe10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe25 AND
0xe26 DUP2
0xe27 MSTORE
0xe28 PUSH1 0x20
0xe2a ADD
0xe2b SWAP1
0xe2c DUP2
0xe2d MSTORE
0xe2e PUSH1 0x20
0xe30 ADD
0xe31 PUSH1 0x0
0xe33 SHA3
0xe34 PUSH1 0x0
0xe36 DUP3
0xe37 DUP3
0xe38 SLOAD
0xe39 SUB
0xe3a SWAP3
0xe3b POP
0xe3c POP
0xe3d DUP2
0xe3e SWAP1
0xe3f SSTORE
0xe40 POP
0xe41 DUP2
0xe42 PUSH1 0x4
0xe44 PUSH1 0x0
0xe46 DUP6
0xe47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5c AND
0xe5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe72 AND
0xe73 DUP2
0xe74 MSTORE
0xe75 PUSH1 0x20
0xe77 ADD
0xe78 SWAP1
0xe79 DUP2
0xe7a MSTORE
0xe7b PUSH1 0x20
0xe7d ADD
0xe7e PUSH1 0x0
0xe80 SHA3
0xe81 PUSH1 0x0
0xe83 DUP3
0xe84 DUP3
0xe85 SLOAD
0xe86 ADD
0xe87 SWAP3
0xe88 POP
0xe89 POP
0xe8a DUP2
0xe8b SWAP1
0xe8c SSTORE
0xe8d POP
0xe8e DUP3
0xe8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea4 AND
0xea5 DUP5
0xea6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xebb AND
0xebc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xedd DUP5
0xede PUSH1 0x40
0xee0 MLOAD
0xee1 DUP1
0xee2 DUP3
0xee3 DUP2
0xee4 MSTORE
0xee5 PUSH1 0x20
0xee7 ADD
0xee8 SWAP2
0xee9 POP
0xeea POP
0xeeb PUSH1 0x40
0xeed MLOAD
0xeee DUP1
0xeef SWAP2
0xef0 SUB
0xef1 SWAP1
0xef2 LOG3
0xef3 DUP1
0xef4 PUSH1 0x4
0xef6 PUSH1 0x0
0xef8 DUP6
0xef9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0e AND
0xf0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf24 AND
0xf25 DUP2
0xf26 MSTORE
0xf27 PUSH1 0x20
0xf29 ADD
0xf2a SWAP1
0xf2b DUP2
0xf2c MSTORE
0xf2d PUSH1 0x20
0xf2f ADD
0xf30 PUSH1 0x0
0xf32 SHA3
0xf33 SLOAD
0xf34 PUSH1 0x4
0xf36 PUSH1 0x0
0xf38 DUP8
0xf39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4e AND
0xf4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf64 AND
0xf65 DUP2
0xf66 MSTORE
0xf67 PUSH1 0x20
0xf69 ADD
0xf6a SWAP1
0xf6b DUP2
0xf6c MSTORE
0xf6d PUSH1 0x20
0xf6f ADD
0xf70 PUSH1 0x0
0xf72 SHA3
0xf73 SLOAD
0xf74 ADD
0xf75 EQ
0xf76 ISZERO
0xf77 ISZERO
0xf78 PUSH2 0xf7d
0xf7b JUMPI
---
0xd70: JUMPDEST 
0xd71: V864 = 0x4
0xd73: V865 = 0x0
0xd76: V866 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8b: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd8c: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0xda1: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V867
0xda3: M[0x0] = V869
0xda4: V870 = 0x20
0xda6: V871 = ADD 0x20 0x0
0xda9: M[0x20] = 0x4
0xdaa: V872 = 0x20
0xdac: V873 = ADD 0x20 0x20
0xdad: V874 = 0x0
0xdaf: V875 = SHA3 0x0 0x40
0xdb0: V876 = S[V875]
0xdb1: V877 = 0x4
0xdb3: V878 = 0x0
0xdb6: V879 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcb: V880 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xdcc: V881 = 0xffffffffffffffffffffffffffffffffffffffff
0xde1: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff V880
0xde3: M[0x0] = V882
0xde4: V883 = 0x20
0xde6: V884 = ADD 0x20 0x0
0xde9: M[0x20] = 0x4
0xdea: V885 = 0x20
0xdec: V886 = ADD 0x20 0x20
0xded: V887 = 0x0
0xdef: V888 = SHA3 0x0 0x40
0xdf0: V889 = S[V888]
0xdf1: V890 = ADD V889 V876
0xdf5: V891 = 0x4
0xdf7: V892 = 0x0
0xdfa: V893 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0f: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe10: V895 = 0xffffffffffffffffffffffffffffffffffffffff
0xe25: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V894
0xe27: M[0x0] = V896
0xe28: V897 = 0x20
0xe2a: V898 = ADD 0x20 0x0
0xe2d: M[0x20] = 0x4
0xe2e: V899 = 0x20
0xe30: V900 = ADD 0x20 0x20
0xe31: V901 = 0x0
0xe33: V902 = SHA3 0x0 0x40
0xe34: V903 = 0x0
0xe38: V904 = S[V902]
0xe39: V905 = SUB V904 S1
0xe3f: S[V902] = V905
0xe42: V906 = 0x4
0xe44: V907 = 0x0
0xe47: V908 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5c: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xe5d: V910 = 0xffffffffffffffffffffffffffffffffffffffff
0xe72: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V909
0xe74: M[0x0] = V911
0xe75: V912 = 0x20
0xe77: V913 = ADD 0x20 0x0
0xe7a: M[0x20] = 0x4
0xe7b: V914 = 0x20
0xe7d: V915 = ADD 0x20 0x20
0xe7e: V916 = 0x0
0xe80: V917 = SHA3 0x0 0x40
0xe81: V918 = 0x0
0xe85: V919 = S[V917]
0xe86: V920 = ADD V919 S1
0xe8c: S[V917] = V920
0xe8f: V921 = 0xffffffffffffffffffffffffffffffffffffffff
0xea4: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xea6: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0xebb: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xebc: V925 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xede: V926 = 0x40
0xee0: V927 = M[0x40]
0xee4: M[V927] = S1
0xee5: V928 = 0x20
0xee7: V929 = ADD 0x20 V927
0xeeb: V930 = 0x40
0xeed: V931 = M[0x40]
0xef0: V932 = SUB V929 V931
0xef2: LOG V931 V932 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V924 V922
0xef4: V933 = 0x4
0xef6: V934 = 0x0
0xef9: V935 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0e: V936 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf0f: V937 = 0xffffffffffffffffffffffffffffffffffffffff
0xf24: V938 = AND 0xffffffffffffffffffffffffffffffffffffffff V936
0xf26: M[0x0] = V938
0xf27: V939 = 0x20
0xf29: V940 = ADD 0x20 0x0
0xf2c: M[0x20] = 0x4
0xf2d: V941 = 0x20
0xf2f: V942 = ADD 0x20 0x20
0xf30: V943 = 0x0
0xf32: V944 = SHA3 0x0 0x40
0xf33: V945 = S[V944]
0xf34: V946 = 0x4
0xf36: V947 = 0x0
0xf39: V948 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4e: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf4f: V950 = 0xffffffffffffffffffffffffffffffffffffffff
0xf64: V951 = AND 0xffffffffffffffffffffffffffffffffffffffff V949
0xf66: M[0x0] = V951
0xf67: V952 = 0x20
0xf69: V953 = ADD 0x20 0x0
0xf6c: M[0x20] = 0x4
0xf6d: V954 = 0x20
0xf6f: V955 = ADD 0x20 0x20
0xf70: V956 = 0x0
0xf72: V957 = SHA3 0x0 0x40
0xf73: V958 = S[V957]
0xf74: V959 = ADD V958 V945
0xf75: V960 = EQ V959 V890
0xf76: V961 = ISZERO V960
0xf77: V962 = ISZERO V961
0xf78: V963 = 0xf7d
0xf7b: JUMPI 0xf7d V962
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V890]
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, V890]

================================

Block 0xf7c
[0xf7c:0xf7c]
---
Predecessors: [0xd70]
Successors: []
---
0xf7c INVALID
---
0xf7c: INVALID 
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, V890]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, V890]

================================

Block 0xf7d
[0xf7d:0xf7d]
---
Predecessors: [0xd70]
Successors: [0xf7e]
---
0xf7d JUMPDEST
---
0xf7d: JUMPDEST 
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, V890]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, V890]

================================

Block 0xf7e
[0xf7e:0xf83]
---
Predecessors: [0xf7d]
Successors: [0x72c, 0xc43]
---
0xf7e JUMPDEST
0xf7f POP
0xf80 POP
0xf81 POP
0xf82 POP
0xf83 JUMP
---
0xf7e: JUMPDEST 
0xf83: JUMP {0x72c, 0xc43}
---
Entry stack: [V10, 0x22e, S8, S7, S6, S5, {0x72c, 0xc43}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x22e, S8, S7, S6, S5]

================================

Block 0xf84
[0xf84:0xfc1]
---
Predecessors: []
Successors: []
---
0xf84 STOP
0xf85 LOG1
0xf86 PUSH6 0x627a7a723058
0xf8d SHA3
0xf8e MISSING 0xf6
0xf8f EXTCODEHASH
0xf90 MISSING 0xe5
0xf91 PUSH16 0xa25a795f60e3114e05e69dd57472657b
0xfa2 DUP16
0xfa3 SWAP16
0xfa4 SWAP14
0xfa5 PUSH2 0xed5c
0xfa8 MISSING 0xa5
0xfa9 MISSING 0xe4
0xfaa MISSING 0xdd
0xfab MISSING 0xaa
0xfac MLOAD
0xfad PUSH20 0x29
---
0xf84: STOP 
0xf85: LOG S0 S1 S2
0xf86: V964 = 0x627a7a723058
0xf8d: V965 = SHA3 0x627a7a723058 S3
0xf8e: MISSING 0xf6
0xf8f: V966 = EXTCODEHASH S0
0xf90: MISSING 0xe5
0xf91: V967 = 0xa25a795f60e3114e05e69dd57472657b
0xfa5: V968 = 0xed5c
0xfa8: MISSING 0xa5
0xfa9: MISSING 0xe4
0xfaa: MISSING 0xdd
0xfab: MISSING 0xaa
0xfac: V969 = M[S0]
0xfad: V970 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V965, V966, 0xed5c, S12, 0xa25a795f60e3114e05e69dd57472657b, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S14, S13, S14, 0x29, V969]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xbd
Exit block: 0x13e
Body: 0xbd, 0xc4, 0xc8, 0xd0, 0xf5, 0xfe, 0x106, 0x111, 0x125, 0x13e, 0x4d8, 0x528, 0x530, 0x543, 0x551, 0x565, 0x56e

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x14c
Exit block: 0x18c
Body: 0x14c, 0x153, 0x157, 0x18c, 0x576, 0x5fe

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1a6
Exit block: 0x1b9
Body: 0x1a6, 0x1ad, 0x1b1, 0x1b9, 0x604

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1cf
Exit block: 0x22e
Body: 0x1cf, 0x1d6, 0x1da, 0x22e, 0x60a, 0x693, 0x697, 0x72c, 0x731

Function 4:
Public function signature: 0x313ce567
Entry block: 0x248
Exit block: 0x25b
Body: 0x248, 0x24f, 0x253, 0x25b, 0x738

Function 5:
Public function signature: 0x42966c68
Entry block: 0x277
Exit block: 0x298
Body: 0x277, 0x27e, 0x282, 0x298, 0x74b, 0x797, 0x79b, 0x84b

Function 6:
Public function signature: 0x70a08231
Entry block: 0x2b2
Exit block: 0x2e9
Body: 0x2b2, 0x2b9, 0x2bd, 0x2e9, 0x850

Function 7:
Public function signature: 0x79c65068
Entry block: 0x2ff
Exit block: 0x33f
Body: 0x2ff, 0x306, 0x30a, 0x33f, 0x868, 0x97b

Function 8:
Public function signature: 0x79cc6790
Entry block: 0x341
Exit block: 0x381
Body: 0x341, 0x348, 0x34c, 0x381, 0x97f, 0x9cb, 0x9cf, 0xa56, 0xa5a, 0xb94

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x39b
Exit block: 0x41c
Body: 0x39b, 0x3a2, 0x3a6, 0x3ae, 0x3d3, 0x3dc, 0x3e4, 0x3ef, 0x403, 0x41c, 0xb9a, 0xbea, 0xbf2, 0xc05, 0xc13, 0xc27, 0xc30

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x42a
Exit block: 0x46a
Body: 0x42a, 0x431, 0x435, 0x46a, 0xc38, 0xc43, 0xc44

Function 11:
Public function signature: 0xdd62ed3e
Entry block: 0x46c
Exit block: 0x4c2
Body: 0x46c, 0x473, 0x477, 0x4c2, 0xc48

Function 12:
Public fallback function
Entry block: 0xb8
Exit block: 0xb8
Body: 0xb8

Function 13:
Private function
Entry block: 0xc6d
Exit block: 0xf7e
Body: 0xc6d, 0xc94, 0xce2, 0xd70, 0xf7d, 0xf7e

