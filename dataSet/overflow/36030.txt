Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x4fb2e45d
0x34 EQ
0x35 PUSH2 0x48
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x4fb2e45d
0x34: V9 = EQ 0x4fb2e45d V7
0x35: V10 = 0x48
0x38: JUMPI 0x48 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x81]
---
0x39 DUP1
0x3a PUSH4 0xb4a99a4e
0x3f EQ
0x40 PUSH2 0x81
0x43 JUMPI
---
0x3a: V11 = 0xb4a99a4e
0x3f: V12 = EQ 0xb4a99a4e V7
0x40: V13 = 0x81
0x43: JUMPI 0x81 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: []
---
0x44 PUSH1 0x0
0x46 DUP1
0x47 REVERT
---
0x44: V14 = 0x0
0x47: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x48
[0x48:0x4e]
---
Predecessors: [0x0]
Successors: [0x4f, 0x53]
---
0x48 JUMPDEST
0x49 CALLVALUE
0x4a ISZERO
0x4b PUSH2 0x53
0x4e JUMPI
---
0x48: JUMPDEST 
0x49: V15 = CALLVALUE
0x4a: V16 = ISZERO V15
0x4b: V17 = 0x53
0x4e: JUMPI 0x53 V16
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x48]
Successors: []
---
0x4f PUSH1 0x0
0x51 DUP1
0x52 REVERT
---
0x4f: V18 = 0x0
0x52: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x53
[0x53:0x7e]
---
Predecessors: [0x48]
Successors: [0xd6]
---
0x53 JUMPDEST
0x54 PUSH2 0x7f
0x57 PUSH1 0x4
0x59 DUP1
0x5a DUP1
0x5b CALLDATALOAD
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 SWAP1
0x73 PUSH1 0x20
0x75 ADD
0x76 SWAP1
0x77 SWAP2
0x78 SWAP1
0x79 POP
0x7a POP
0x7b PUSH2 0xd6
0x7e JUMP
---
0x53: JUMPDEST 
0x54: V19 = 0x7f
0x57: V20 = 0x4
0x5b: V21 = CALLDATALOAD 0x4
0x5c: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x73: V24 = 0x20
0x75: V25 = ADD 0x20 0x4
0x7b: V26 = 0xd6
0x7e: JUMP 0xd6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x7f, V23]
Exit stack: [V7, 0x7f, V23]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x18d]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0x39]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V27 = CALLVALUE
0x83: V28 = ISZERO V27
0x84: V29 = 0x8c
0x87: JUMPI 0x8c V28
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V30 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x81, 0x1b5]
Successors: [0x190]
---
0x8c JUMPDEST
0x8d PUSH2 0x94
0x90 PUSH2 0x190
0x93 JUMP
---
0x8c: JUMPDEST 
0x8d: V31 = 0x94
0x90: V32 = 0x190
0x93: JUMP 0x190
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x94]
Exit stack: [V7, 0x94]

================================

Block 0x94
[0x94:0xd5]
---
Predecessors: [0x190]
Successors: []
---
0x94 JUMPDEST
0x95 PUSH1 0x40
0x97 MLOAD
0x98 DUP1
0x99 DUP3
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 AND
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP2
0xcc POP
0xcd POP
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP1
0xd2 SWAP2
0xd3 SUB
0xd4 SWAP1
0xd5 RETURN
---
0x94: JUMPDEST 
0x95: V33 = 0x40
0x97: V34 = M[0x40]
0x9a: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0xb0: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xc7: M[V34] = V38
0xc8: V39 = 0x20
0xca: V40 = ADD 0x20 V34
0xce: V41 = 0x40
0xd0: V42 = M[0x40]
0xd3: V43 = SUB V40 V42
0xd5: RETURN V42 V43
---
Entry stack: [V7, 0x94, V85]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x94]

================================

Block 0xd6
[0xd6:0x12b]
---
Predecessors: [0x53]
Successors: [0x12c, 0x18d]
---
0xd6 JUMPDEST
0xd7 CALLER
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee PUSH1 0x0
0xf0 DUP1
0xf1 SWAP1
0xf2 SLOAD
0xf3 SWAP1
0xf4 PUSH2 0x100
0xf7 EXP
0xf8 SWAP1
0xf9 DIV
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125 AND
0x126 EQ
0x127 ISZERO
0x128 PUSH2 0x18d
0x12b JUMPI
---
0xd6: JUMPDEST 
0xd7: V44 = CALLER
0xd8: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xee: V47 = 0x0
0xf2: V48 = S[0x0]
0xf4: V49 = 0x100
0xf7: V50 = EXP 0x100 0x0
0xf9: V51 = DIV V48 0x1
0xfa: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x110: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x125: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x126: V56 = EQ V55 V46
0x127: V57 = ISZERO V56
0x128: V58 = 0x18d
0x12b: JUMPI 0x18d V57
---
Entry stack: [V7, 0x7f, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x7f, V23]

================================

Block 0x12c
[0x12c:0x14b]
---
Predecessors: [0xd6]
Successors: [0x14c, 0x18c]
---
0x12c PUSH1 0x0
0x12e ADDRESS
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 BALANCE
0x146 EQ
0x147 ISZERO
0x148 PUSH2 0x18c
0x14b JUMPI
---
0x12c: V59 = 0x0
0x12e: V60 = ADDRESS
0x12f: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x145: V63 = BALANCE V62
0x146: V64 = EQ V63 0x0
0x147: V65 = ISZERO V64
0x148: V66 = 0x18c
0x14b: JUMPI 0x18c V65
---
Entry stack: [V7, 0x7f, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x7f, V23]

================================

Block 0x14c
[0x14c:0x18b]
---
Predecessors: [0x12c]
Successors: [0x18c]
---
0x14c DUP1
0x14d PUSH1 0x0
0x14f DUP1
0x150 PUSH2 0x100
0x153 EXP
0x154 DUP2
0x155 SLOAD
0x156 DUP2
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c MUL
0x16d NOT
0x16e AND
0x16f SWAP1
0x170 DUP4
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 MUL
0x188 OR
0x189 SWAP1
0x18a SSTORE
0x18b POP
---
0x14d: V67 = 0x0
0x150: V68 = 0x100
0x153: V69 = EXP 0x100 0x0
0x155: V70 = S[0x0]
0x157: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V72 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x16d: V73 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V74 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V70
0x171: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x187: V77 = MUL V76 0x1
0x188: V78 = OR V77 V74
0x18a: S[0x0] = V78
---
Entry stack: [V7, 0x7f, V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x7f, V23]

================================

Block 0x18c
[0x18c:0x18c]
---
Predecessors: [0x12c, 0x14c]
Successors: [0x18d]
---
0x18c JUMPDEST
---
0x18c: JUMPDEST 
---
Entry stack: [V7, 0x7f, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x7f, V23]

================================

Block 0x18d
[0x18d:0x18f]
---
Predecessors: [0xd6, 0x18c]
Successors: [0x7f]
---
0x18d JUMPDEST
0x18e POP
0x18f JUMP
---
0x18d: JUMPDEST 
0x18f: JUMP 0x7f
---
Entry stack: [V7, 0x7f, V23]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x190
[0x190:0x1b4]
---
Predecessors: [0x8c]
Successors: [0x94]
---
0x190 JUMPDEST
0x191 PUSH1 0x0
0x193 DUP1
0x194 SWAP1
0x195 SLOAD
0x196 SWAP1
0x197 PUSH2 0x100
0x19a EXP
0x19b SWAP1
0x19c DIV
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 DUP2
0x1b4 JUMP
---
0x190: JUMPDEST 
0x191: V79 = 0x0
0x195: V80 = S[0x0]
0x197: V81 = 0x100
0x19a: V82 = EXP 0x100 0x0
0x19c: V83 = DIV V80 0x1
0x19d: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1b4: JUMP 0x94
---
Entry stack: [V7, 0x94]
Stack pops: 1
Stack additions: [S0, V85]
Exit stack: [V7, 0x94, V85]

================================

Block 0x1b5
[0x1b5:0x1eb]
---
Predecessors: []
Successors: [0x8c, 0x1ec]
---
0x1b5 STOP
0x1b6 LOG1
0x1b7 PUSH6 0x627a7a723058
0x1be SHA3
0x1bf DUP13
0x1c0 MISSING 0xd0
0x1c1 PUSH10 0x448390212fc28d452b04
0x1cc PUSH19 0x2f606cace05ee3079be99e9622ebb79a878300
0x1e0 MISSING 0x29
0x1e1 PUSH1 0x60
0x1e3 PUSH1 0x40
0x1e5 MSTORE
0x1e6 CALLDATASIZE
0x1e7 ISZERO
0x1e8 PUSH2 0x8c
0x1eb JUMPI
---
0x1b5: STOP 
0x1b6: LOG S0 S1 S2
0x1b7: V86 = 0x627a7a723058
0x1be: V87 = SHA3 0x627a7a723058 S3
0x1c0: MISSING 0xd0
0x1c1: V88 = 0x448390212fc28d452b04
0x1cc: V89 = 0x2f606cace05ee3079be99e9622ebb79a878300
0x1e0: MISSING 0x29
0x1e1: V90 = 0x60
0x1e3: V91 = 0x40
0x1e5: M[0x40] = 0x60
0x1e6: V92 = CALLDATASIZE
0x1e7: V93 = ISZERO V92
0x1e8: V94 = 0x8c
0x1eb: JUMPI 0x8c V93
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V87, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x2f606cace05ee3079be99e9622ebb79a878300, 0x448390212fc28d452b04]
Exit stack: []

================================

Block 0x1ec
[0x1ec:0x21f]
---
Predecessors: [0x1b5]
Successors: [0x220]
---
0x1ec PUSH1 0x0
0x1ee CALLDATALOAD
0x1ef PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x20d SWAP1
0x20e DIV
0x20f PUSH4 0xffffffff
0x214 AND
0x215 DUP1
0x216 PUSH4 0x2e1a7d4d
0x21b EQ
0x21c PUSH2 0x96
0x21f JUMPI
---
0x1ec: V95 = 0x0
0x1ee: V96 = CALLDATALOAD 0x0
0x1ef: V97 = 0x100000000000000000000000000000000000000000000000000000000
0x20e: V98 = DIV V96 0x100000000000000000000000000000000000000000000000000000000
0x20f: V99 = 0xffffffff
0x214: V100 = AND 0xffffffff V98
0x216: V101 = 0x2e1a7d4d
0x21b: V102 = EQ 0x2e1a7d4d V100
0x21c: V103 = 0x96
0x21f: THROWI V102
---
Entry stack: []
Stack pops: 0
Stack additions: [V100]
Exit stack: [V100]

================================

Block 0x220
[0x220:0x22a]
---
Predecessors: [0x1ec]
Successors: [0x22b]
---
0x220 DUP1
0x221 PUSH4 0x41c0e1b5
0x226 EQ
0x227 PUSH2 0xb9
0x22a JUMPI
---
0x221: V104 = 0x41c0e1b5
0x226: V105 = EQ 0x41c0e1b5 V100
0x227: V106 = 0xb9
0x22a: THROWI V105
---
Entry stack: [V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V100]

================================

Block 0x22b
[0x22b:0x235]
---
Predecessors: [0x220]
Successors: [0x236]
---
0x22b DUP1
0x22c PUSH4 0x4fb2e45d
0x231 EQ
0x232 PUSH2 0xce
0x235 JUMPI
---
0x22c: V107 = 0x4fb2e45d
0x231: V108 = EQ 0x4fb2e45d V100
0x232: V109 = 0xce
0x235: THROWI V108
---
Entry stack: [V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V100]

================================

Block 0x236
[0x236:0x240]
---
Predecessors: [0x22b]
Successors: [0x241]
---
0x236 DUP1
0x237 PUSH4 0xb4a99a4e
0x23c EQ
0x23d PUSH2 0x107
0x240 JUMPI
---
0x237: V110 = 0xb4a99a4e
0x23c: V111 = EQ 0xb4a99a4e V100
0x23d: V112 = 0x107
0x240: THROWI V111
---
Entry stack: [V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V100]

================================

Block 0x241
[0x241:0x24b]
---
Predecessors: [0x236]
Successors: [0x24c]
---
0x241 DUP1
0x242 PUSH4 0xb7f9c4f6
0x247 EQ
0x248 PUSH2 0x15c
0x24b JUMPI
---
0x242: V113 = 0xb7f9c4f6
0x247: V114 = EQ 0xb7f9c4f6 V100
0x248: V115 = 0x15c
0x24b: THROWI V114
---
Entry stack: [V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V100]

================================

Block 0x24c
[0x24c:0x256]
---
Predecessors: [0x241]
Successors: [0x257]
---
0x24c DUP1
0x24d PUSH4 0xd0e30db0
0x252 EQ
0x253 PUSH2 0x17f
0x256 JUMPI
---
0x24d: V116 = 0xd0e30db0
0x252: V117 = EQ 0xd0e30db0 V100
0x253: V118 = 0x17f
0x256: THROWI V117
---
Entry stack: [V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V100]

================================

Block 0x257
[0x257:0x261]
---
Predecessors: [0x24c]
Successors: [0x262]
---
0x257 DUP1
0x258 PUSH4 0xec8cb281
0x25d EQ
0x25e PUSH2 0x189
0x261 JUMPI
---
0x258: V119 = 0xec8cb281
0x25d: V120 = EQ 0xec8cb281 V100
0x25e: V121 = 0x189
0x261: THROWI V120
---
Entry stack: [V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V100]

================================

Block 0x262
[0x262:0x26c]
---
Predecessors: [0x257]
Successors: [0x26d]
---
0x262 DUP1
0x263 PUSH4 0xfc7e286d
0x268 EQ
0x269 PUSH2 0x1b2
0x26c JUMPI
---
0x263: V122 = 0xfc7e286d
0x268: V123 = EQ 0xfc7e286d V100
0x269: V124 = 0x1b2
0x26c: THROWI V123
---
Entry stack: [V100]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V100]

================================

Block 0x26d
[0x26d:0x27d]
---
Predecessors: [0x262]
Successors: [0x27e]
---
0x26d JUMPDEST
0x26e PUSH2 0x94
0x271 PUSH2 0x1ff
0x274 JUMP
0x275 JUMPDEST
0x276 STOP
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0xa1
0x27d JUMPI
---
0x26d: JUMPDEST 
0x26e: V125 = 0x94
0x271: V126 = 0x1ff
0x274: THROW 
0x275: JUMPDEST 
0x276: STOP 
0x277: JUMPDEST 
0x278: V127 = CALLVALUE
0x279: V128 = ISZERO V127
0x27a: V129 = 0xa1
0x27d: THROWI V128
---
Entry stack: [V100]
Stack pops: 0
Stack additions: [0x94]
Exit stack: []

================================

Block 0x27e
[0x27e:0x2a0]
---
Predecessors: [0x26d]
Successors: [0x2a1]
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
0x282 JUMPDEST
0x283 PUSH2 0xb7
0x286 PUSH1 0x4
0x288 DUP1
0x289 DUP1
0x28a CALLDATALOAD
0x28b SWAP1
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP1
0x290 SWAP2
0x291 SWAP1
0x292 POP
0x293 POP
0x294 PUSH2 0x2b7
0x297 JUMP
0x298 JUMPDEST
0x299 STOP
0x29a JUMPDEST
0x29b CALLVALUE
0x29c ISZERO
0x29d PUSH2 0xc4
0x2a0 JUMPI
---
0x27e: V130 = 0x0
0x281: REVERT 0x0 0x0
0x282: JUMPDEST 
0x283: V131 = 0xb7
0x286: V132 = 0x4
0x28a: V133 = CALLDATALOAD 0x4
0x28c: V134 = 0x20
0x28e: V135 = ADD 0x20 0x4
0x294: V136 = 0x2b7
0x297: THROW 
0x298: JUMPDEST 
0x299: STOP 
0x29a: JUMPDEST 
0x29b: V137 = CALLVALUE
0x29c: V138 = ISZERO V137
0x29d: V139 = 0xc4
0x2a0: THROWI V138
---
Entry stack: []
Stack pops: 0
Stack additions: [V133, 0xb7]
Exit stack: []

================================

Block 0x2a1
[0x2a1:0x2b5]
---
Predecessors: [0x27e]
Successors: [0x2b6]
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
0x2a5 JUMPDEST
0x2a6 PUSH2 0xcc
0x2a9 PUSH2 0x3fb
0x2ac JUMP
0x2ad JUMPDEST
0x2ae STOP
0x2af JUMPDEST
0x2b0 CALLVALUE
0x2b1 ISZERO
0x2b2 PUSH2 0xd9
0x2b5 JUMPI
---
0x2a1: V140 = 0x0
0x2a4: REVERT 0x0 0x0
0x2a5: JUMPDEST 
0x2a6: V141 = 0xcc
0x2a9: V142 = 0x3fb
0x2ac: THROW 
0x2ad: JUMPDEST 
0x2ae: STOP 
0x2af: JUMPDEST 
0x2b0: V143 = CALLVALUE
0x2b1: V144 = ISZERO V143
0x2b2: V145 = 0xd9
0x2b5: THROWI V144
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcc]
Exit stack: []

================================

Block 0x2b6
[0x2b6:0x2ee]
---
Predecessors: [0x2a1]
Successors: [0x2ef]
---
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 REVERT
0x2ba JUMPDEST
0x2bb PUSH2 0x105
0x2be PUSH1 0x4
0x2c0 DUP1
0x2c1 DUP1
0x2c2 CALLDATALOAD
0x2c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d8 AND
0x2d9 SWAP1
0x2da PUSH1 0x20
0x2dc ADD
0x2dd SWAP1
0x2de SWAP2
0x2df SWAP1
0x2e0 POP
0x2e1 POP
0x2e2 PUSH2 0x48c
0x2e5 JUMP
0x2e6 JUMPDEST
0x2e7 STOP
0x2e8 JUMPDEST
0x2e9 CALLVALUE
0x2ea ISZERO
0x2eb PUSH2 0x112
0x2ee JUMPI
---
0x2b6: V146 = 0x0
0x2b9: REVERT 0x0 0x0
0x2ba: JUMPDEST 
0x2bb: V147 = 0x105
0x2be: V148 = 0x4
0x2c2: V149 = CALLDATALOAD 0x4
0x2c3: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2da: V152 = 0x20
0x2dc: V153 = ADD 0x20 0x4
0x2e2: V154 = 0x48c
0x2e5: THROW 
0x2e6: JUMPDEST 
0x2e7: STOP 
0x2e8: JUMPDEST 
0x2e9: V155 = CALLVALUE
0x2ea: V156 = ISZERO V155
0x2eb: V157 = 0x112
0x2ee: THROWI V156
---
Entry stack: []
Stack pops: 0
Stack additions: [V151, 0x105]
Exit stack: []

================================

Block 0x2ef
[0x2ef:0x343]
---
Predecessors: [0x2b6]
Successors: [0x344]
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
0x2f3 JUMPDEST
0x2f4 PUSH2 0x11a
0x2f7 PUSH2 0x546
0x2fa JUMP
0x2fb JUMPDEST
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff DUP1
0x300 DUP3
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d DUP2
0x32e MSTORE
0x32f PUSH1 0x20
0x331 ADD
0x332 SWAP2
0x333 POP
0x334 POP
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 SWAP2
0x33a SUB
0x33b SWAP1
0x33c RETURN
0x33d JUMPDEST
0x33e CALLVALUE
0x33f ISZERO
0x340 PUSH2 0x167
0x343 JUMPI
---
0x2ef: V158 = 0x0
0x2f2: REVERT 0x0 0x0
0x2f3: JUMPDEST 
0x2f4: V159 = 0x11a
0x2f7: V160 = 0x546
0x2fa: THROW 
0x2fb: JUMPDEST 
0x2fc: V161 = 0x40
0x2fe: V162 = M[0x40]
0x301: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x317: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x32e: M[V162] = V166
0x32f: V167 = 0x20
0x331: V168 = ADD 0x20 V162
0x335: V169 = 0x40
0x337: V170 = M[0x40]
0x33a: V171 = SUB V168 V170
0x33c: RETURN V170 V171
0x33d: JUMPDEST 
0x33e: V172 = CALLVALUE
0x33f: V173 = ISZERO V172
0x340: V174 = 0x167
0x343: THROWI V173
---
Entry stack: []
Stack pops: 0
Stack additions: [0x11a]
Exit stack: []

================================

Block 0x344
[0x344:0x370]
---
Predecessors: [0x2ef]
Successors: [0x371]
---
0x344 PUSH1 0x0
0x346 DUP1
0x347 REVERT
0x348 JUMPDEST
0x349 PUSH2 0x17d
0x34c PUSH1 0x4
0x34e DUP1
0x34f DUP1
0x350 CALLDATALOAD
0x351 SWAP1
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP1
0x356 SWAP2
0x357 SWAP1
0x358 POP
0x359 POP
0x35a PUSH2 0x56c
0x35d JUMP
0x35e JUMPDEST
0x35f STOP
0x360 JUMPDEST
0x361 PUSH2 0x187
0x364 PUSH2 0x1ff
0x367 JUMP
0x368 JUMPDEST
0x369 STOP
0x36a JUMPDEST
0x36b CALLVALUE
0x36c ISZERO
0x36d PUSH2 0x194
0x370 JUMPI
---
0x344: V175 = 0x0
0x347: REVERT 0x0 0x0
0x348: JUMPDEST 
0x349: V176 = 0x17d
0x34c: V177 = 0x4
0x350: V178 = CALLDATALOAD 0x4
0x352: V179 = 0x20
0x354: V180 = ADD 0x20 0x4
0x35a: V181 = 0x56c
0x35d: THROW 
0x35e: JUMPDEST 
0x35f: STOP 
0x360: JUMPDEST 
0x361: V182 = 0x187
0x364: V183 = 0x1ff
0x367: THROW 
0x368: JUMPDEST 
0x369: STOP 
0x36a: JUMPDEST 
0x36b: V184 = CALLVALUE
0x36c: V185 = ISZERO V184
0x36d: V186 = 0x194
0x370: THROWI V185
---
Entry stack: []
Stack pops: 0
Stack additions: [V178, 0x17d, 0x187]
Exit stack: []

================================

Block 0x371
[0x371:0x399]
---
Predecessors: [0x344]
Successors: [0x39a]
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
0x375 JUMPDEST
0x376 PUSH2 0x19c
0x379 PUSH2 0x629
0x37c JUMP
0x37d JUMPDEST
0x37e PUSH1 0x40
0x380 MLOAD
0x381 DUP1
0x382 DUP3
0x383 DUP2
0x384 MSTORE
0x385 PUSH1 0x20
0x387 ADD
0x388 SWAP2
0x389 POP
0x38a POP
0x38b PUSH1 0x40
0x38d MLOAD
0x38e DUP1
0x38f SWAP2
0x390 SUB
0x391 SWAP1
0x392 RETURN
0x393 JUMPDEST
0x394 CALLVALUE
0x395 ISZERO
0x396 PUSH2 0x1bd
0x399 JUMPI
---
0x371: V187 = 0x0
0x374: REVERT 0x0 0x0
0x375: JUMPDEST 
0x376: V188 = 0x19c
0x379: V189 = 0x629
0x37c: THROW 
0x37d: JUMPDEST 
0x37e: V190 = 0x40
0x380: V191 = M[0x40]
0x384: M[V191] = S0
0x385: V192 = 0x20
0x387: V193 = ADD 0x20 V191
0x38b: V194 = 0x40
0x38d: V195 = M[0x40]
0x390: V196 = SUB V193 V195
0x392: RETURN V195 V196
0x393: JUMPDEST 
0x394: V197 = CALLVALUE
0x395: V198 = ISZERO V197
0x396: V199 = 0x1bd
0x399: THROWI V198
---
Entry stack: []
Stack pops: 0
Stack additions: [0x19c]
Exit stack: []

================================

Block 0x39a
[0x39a:0x3f1]
---
Predecessors: [0x371]
Successors: [0x3f2]
---
0x39a PUSH1 0x0
0x39c DUP1
0x39d REVERT
0x39e JUMPDEST
0x39f PUSH2 0x1e9
0x3a2 PUSH1 0x4
0x3a4 DUP1
0x3a5 DUP1
0x3a6 CALLDATALOAD
0x3a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bc AND
0x3bd SWAP1
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 SWAP1
0x3c2 SWAP2
0x3c3 SWAP1
0x3c4 POP
0x3c5 POP
0x3c6 PUSH2 0x62f
0x3c9 JUMP
0x3ca JUMPDEST
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce DUP1
0x3cf DUP3
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x20
0x3d4 ADD
0x3d5 SWAP2
0x3d6 POP
0x3d7 POP
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db DUP1
0x3dc SWAP2
0x3dd SUB
0x3de SWAP1
0x3df RETURN
0x3e0 JUMPDEST
0x3e1 PUSH8 0x3782dace9d90000
0x3ea CALLVALUE
0x3eb LT
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x2b0
0x3f1 JUMPI
---
0x39a: V200 = 0x0
0x39d: REVERT 0x0 0x0
0x39e: JUMPDEST 
0x39f: V201 = 0x1e9
0x3a2: V202 = 0x4
0x3a6: V203 = CALLDATALOAD 0x4
0x3a7: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3be: V206 = 0x20
0x3c0: V207 = ADD 0x20 0x4
0x3c6: V208 = 0x62f
0x3c9: THROW 
0x3ca: JUMPDEST 
0x3cb: V209 = 0x40
0x3cd: V210 = M[0x40]
0x3d1: M[V210] = S0
0x3d2: V211 = 0x20
0x3d4: V212 = ADD 0x20 V210
0x3d8: V213 = 0x40
0x3da: V214 = M[0x40]
0x3dd: V215 = SUB V212 V214
0x3df: RETURN V214 V215
0x3e0: JUMPDEST 
0x3e1: V216 = 0x3782dace9d90000
0x3ea: V217 = CALLVALUE
0x3eb: V218 = LT V217 0x3782dace9d90000
0x3ec: V219 = ISZERO V218
0x3ed: V220 = ISZERO V219
0x3ee: V221 = 0x2b0
0x3f1: THROWI V220
---
Entry stack: []
Stack pops: 0
Stack additions: [V205, 0x1e9]
Exit stack: []

================================

Block 0x3f2
[0x3f2:0x4ef]
---
Predecessors: [0x39a]
Successors: [0x4f0]
---
0x3f2 CALLVALUE
0x3f3 PUSH1 0x2
0x3f5 PUSH1 0x0
0x3f7 CALLER
0x3f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40d AND
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 SWAP1
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x20
0x42e ADD
0x42f PUSH1 0x0
0x431 SHA3
0x432 PUSH1 0x0
0x434 DUP3
0x435 DUP3
0x436 SLOAD
0x437 ADD
0x438 SWAP3
0x439 POP
0x43a POP
0x43b DUP2
0x43c SWAP1
0x43d SSTORE
0x43e POP
0x43f CALLER
0x440 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x455 AND
0x456 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x477 CALLVALUE
0x478 PUSH1 0x40
0x47a MLOAD
0x47b DUP1
0x47c DUP3
0x47d DUP2
0x47e MSTORE
0x47f PUSH1 0x20
0x481 ADD
0x482 SWAP2
0x483 POP
0x484 POP
0x485 PUSH1 0x40
0x487 MLOAD
0x488 DUP1
0x489 SWAP2
0x48a SUB
0x48b SWAP1
0x48c LOG2
0x48d PUSH2 0x2b5
0x490 JUMP
0x491 JUMPDEST
0x492 PUSH1 0x0
0x494 DUP1
0x495 REVERT
0x496 JUMPDEST
0x497 JUMP
0x498 JUMPDEST
0x499 PUSH1 0x0
0x49b CALLER
0x49c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b1 AND
0x4b2 PUSH1 0x0
0x4b4 DUP1
0x4b5 SWAP1
0x4b6 SLOAD
0x4b7 SWAP1
0x4b8 PUSH2 0x100
0x4bb EXP
0x4bc SWAP1
0x4bd DIV
0x4be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d3 AND
0x4d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e9 AND
0x4ea EQ
0x4eb ISZERO
0x4ec PUSH2 0x3f7
0x4ef JUMPI
---
0x3f2: V222 = CALLVALUE
0x3f3: V223 = 0x2
0x3f5: V224 = 0x0
0x3f7: V225 = CALLER
0x3f8: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x40e: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x425: M[0x0] = V229
0x426: V230 = 0x20
0x428: V231 = ADD 0x20 0x0
0x42b: M[0x20] = 0x2
0x42c: V232 = 0x20
0x42e: V233 = ADD 0x20 0x20
0x42f: V234 = 0x0
0x431: V235 = SHA3 0x0 0x40
0x432: V236 = 0x0
0x436: V237 = S[V235]
0x437: V238 = ADD V237 V222
0x43d: S[V235] = V238
0x43f: V239 = CALLER
0x440: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x455: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x456: V242 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x477: V243 = CALLVALUE
0x478: V244 = 0x40
0x47a: V245 = M[0x40]
0x47e: M[V245] = V243
0x47f: V246 = 0x20
0x481: V247 = ADD 0x20 V245
0x485: V248 = 0x40
0x487: V249 = M[0x40]
0x48a: V250 = SUB V247 V249
0x48c: LOG V249 V250 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V241
0x48d: V251 = 0x2b5
0x490: THROW 
0x491: JUMPDEST 
0x492: V252 = 0x0
0x495: REVERT 0x0 0x0
0x496: JUMPDEST 
0x497: JUMP S0
0x498: JUMPDEST 
0x499: V253 = 0x0
0x49b: V254 = CALLER
0x49c: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b1: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x4b2: V257 = 0x0
0x4b6: V258 = S[0x0]
0x4b8: V259 = 0x100
0x4bb: V260 = EXP 0x100 0x0
0x4bd: V261 = DIV V258 0x1
0x4be: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x4d4: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x4ea: V266 = EQ V265 V256
0x4eb: V267 = ISZERO V266
0x4ec: V268 = 0x3f7
0x4ef: THROWI V267
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x4f0
[0x4f0:0x4fa]
---
Predecessors: [0x3f2]
Successors: [0x4fb]
---
0x4f0 PUSH1 0x3
0x4f2 SLOAD
0x4f3 TIMESTAMP
0x4f4 LT
0x4f5 ISZERO
0x4f6 ISZERO
0x4f7 PUSH2 0x3f6
0x4fa JUMPI
---
0x4f0: V269 = 0x3
0x4f2: V270 = S[0x3]
0x4f3: V271 = TIMESTAMP
0x4f4: V272 = LT V271 V270
0x4f5: V273 = ISZERO V272
0x4f6: V274 = ISZERO V273
0x4f7: V275 = 0x3f6
0x4fa: THROWI V274
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x0]

================================

Block 0x4fb
[0x4fb:0x546]
---
Predecessors: [0x4f0]
Successors: [0x547]
---
0x4fb PUSH1 0x2
0x4fd PUSH1 0x0
0x4ff CALLER
0x500 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x515 AND
0x516 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52b AND
0x52c DUP2
0x52d MSTORE
0x52e PUSH1 0x20
0x530 ADD
0x531 SWAP1
0x532 DUP2
0x533 MSTORE
0x534 PUSH1 0x20
0x536 ADD
0x537 PUSH1 0x0
0x539 SHA3
0x53a SLOAD
0x53b SWAP1
0x53c POP
0x53d DUP1
0x53e DUP3
0x53f GT
0x540 ISZERO
0x541 DUP1
0x542 ISZERO
0x543 PUSH2 0x36b
0x546 JUMPI
---
0x4fb: V276 = 0x2
0x4fd: V277 = 0x0
0x4ff: V278 = CALLER
0x500: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x515: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x516: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x52b: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x52d: M[0x0] = V282
0x52e: V283 = 0x20
0x530: V284 = ADD 0x20 0x0
0x533: M[0x20] = 0x2
0x534: V285 = 0x20
0x536: V286 = ADD 0x20 0x20
0x537: V287 = 0x0
0x539: V288 = SHA3 0x0 0x40
0x53a: V289 = S[V288]
0x53f: V290 = GT S1 V289
0x540: V291 = ISZERO V290
0x542: V292 = ISZERO V291
0x543: V293 = 0x36b
0x546: THROWI V292
---
Entry stack: [0x0]
Stack pops: 2
Stack additions: [S1, V289, V291]
Exit stack: [S0, V289, V291]

================================

Block 0x547
[0x547:0x54b]
---
Predecessors: [0x4fb]
Successors: [0x54c]
---
0x547 POP
0x548 PUSH1 0x0
0x54a DUP2
0x54b GT
---
0x548: V294 = 0x0
0x54b: V295 = GT V289 0x0
---
Entry stack: [S2, V289, V291]
Stack pops: 2
Stack additions: [S1, V295]
Exit stack: [S2, V289, V295]

================================

Block 0x54c
[0x54c:0x551]
---
Predecessors: [0x547]
Successors: [0x552]
---
0x54c JUMPDEST
0x54d ISZERO
0x54e PUSH2 0x3f5
0x551 JUMPI
---
0x54c: JUMPDEST 
0x54d: V296 = ISZERO V295
0x54e: V297 = 0x3f5
0x551: THROWI V296
---
Entry stack: [S2, V289, V295]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V289]

================================

Block 0x552
[0x552:0x5d5]
---
Predecessors: [0x54c]
Successors: [0x5d6]
---
0x552 CALLER
0x553 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x568 AND
0x569 PUSH2 0x8fc
0x56c DUP4
0x56d SWAP1
0x56e DUP2
0x56f ISZERO
0x570 MUL
0x571 SWAP1
0x572 PUSH1 0x40
0x574 MLOAD
0x575 PUSH1 0x0
0x577 PUSH1 0x40
0x579 MLOAD
0x57a DUP1
0x57b DUP4
0x57c SUB
0x57d DUP2
0x57e DUP6
0x57f DUP9
0x580 DUP9
0x581 CALL
0x582 SWAP4
0x583 POP
0x584 POP
0x585 POP
0x586 POP
0x587 POP
0x588 CALLER
0x589 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59e AND
0x59f PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x5c0 DUP4
0x5c1 PUSH1 0x40
0x5c3 MLOAD
0x5c4 DUP1
0x5c5 DUP3
0x5c6 DUP2
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca ADD
0x5cb SWAP2
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 DUP1
0x5d2 SWAP2
0x5d3 SUB
0x5d4 SWAP1
0x5d5 LOG2
---
0x552: V298 = CALLER
0x553: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x568: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x569: V301 = 0x8fc
0x56f: V302 = ISZERO S1
0x570: V303 = MUL V302 0x8fc
0x572: V304 = 0x40
0x574: V305 = M[0x40]
0x575: V306 = 0x0
0x577: V307 = 0x40
0x579: V308 = M[0x40]
0x57c: V309 = SUB V305 V308
0x581: V310 = CALL V303 V300 S1 V308 V309 V308 0x0
0x588: V311 = CALLER
0x589: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x59f: V314 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x5c1: V315 = 0x40
0x5c3: V316 = M[0x40]
0x5c7: M[V316] = S1
0x5c8: V317 = 0x20
0x5ca: V318 = ADD 0x20 V316
0x5ce: V319 = 0x40
0x5d0: V320 = M[0x40]
0x5d3: V321 = SUB V318 V320
0x5d5: LOG V320 V321 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V313
---
Entry stack: [S1, V289]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, V289]

================================

Block 0x5d6
[0x5d6:0x5d6]
---
Predecessors: [0x552]
Successors: [0x5d7]
---
0x5d6 JUMPDEST
---
0x5d6: JUMPDEST 
---
Entry stack: [S1, V289]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V289]

================================

Block 0x5d7
[0x5d7:0x5d7]
---
Predecessors: [0x5d6]
Successors: [0x5d8]
---
0x5d7 JUMPDEST
---
0x5d7: JUMPDEST 
---
Entry stack: [S1, V289]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V289]

================================

Block 0x5d8
[0x5d8:0x631]
---
Predecessors: [0x5d7]
Successors: [0x632]
---
0x5d8 JUMPDEST
0x5d9 POP
0x5da POP
0x5db JUMP
0x5dc JUMPDEST
0x5dd CALLER
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 AND
0x5f4 PUSH1 0x0
0x5f6 DUP1
0x5f7 SWAP1
0x5f8 SLOAD
0x5f9 SWAP1
0x5fa PUSH2 0x100
0x5fd EXP
0x5fe SWAP1
0x5ff DIV
0x600 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x615 AND
0x616 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62b AND
0x62c EQ
0x62d ISZERO
0x62e PUSH2 0x48a
0x631 JUMPI
---
0x5d8: JUMPDEST 
0x5db: JUMP S2
0x5dc: JUMPDEST 
0x5dd: V322 = CALLER
0x5de: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x5f4: V325 = 0x0
0x5f8: V326 = S[0x0]
0x5fa: V327 = 0x100
0x5fd: V328 = EXP 0x100 0x0
0x5ff: V329 = DIV V326 0x1
0x600: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x615: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x616: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x62b: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x62c: V334 = EQ V333 V324
0x62d: V335 = ISZERO V334
0x62e: V336 = 0x48a
0x631: THROWI V335
---
Entry stack: [S1, V289]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x632
[0x632:0x651]
---
Predecessors: [0x5d8]
Successors: [0x652]
---
0x632 PUSH1 0x0
0x634 ADDRESS
0x635 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64a AND
0x64b BALANCE
0x64c EQ
0x64d ISZERO
0x64e PUSH2 0x489
0x651 JUMPI
---
0x632: V337 = 0x0
0x634: V338 = ADDRESS
0x635: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x64b: V341 = BALANCE V340
0x64c: V342 = EQ V341 0x0
0x64d: V343 = ISZERO V342
0x64e: V344 = 0x489
0x651: THROWI V343
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x652
[0x652:0x66a]
---
Predecessors: [0x632]
Successors: [0x66b]
---
0x652 CALLER
0x653 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x668 AND
0x669 SELFDESTRUCT
0x66a JUMPDEST
---
0x652: V345 = CALLER
0x653: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x668: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x669: SELFDESTRUCT V347
0x66a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66b
[0x66b:0x6c2]
---
Predecessors: [0x652]
Successors: [0x6c3]
---
0x66b JUMPDEST
0x66c JUMP
0x66d JUMPDEST
0x66e CALLER
0x66f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x684 AND
0x685 PUSH1 0x0
0x687 DUP1
0x688 SWAP1
0x689 SLOAD
0x68a SWAP1
0x68b PUSH2 0x100
0x68e EXP
0x68f SWAP1
0x690 DIV
0x691 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a6 AND
0x6a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bc AND
0x6bd EQ
0x6be ISZERO
0x6bf PUSH2 0x543
0x6c2 JUMPI
---
0x66b: JUMPDEST 
0x66c: JUMP S0
0x66d: JUMPDEST 
0x66e: V348 = CALLER
0x66f: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x684: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x685: V351 = 0x0
0x689: V352 = S[0x0]
0x68b: V353 = 0x100
0x68e: V354 = EXP 0x100 0x0
0x690: V355 = DIV V352 0x1
0x691: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a6: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x6a7: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x6bd: V360 = EQ V359 V350
0x6be: V361 = ISZERO V360
0x6bf: V362 = 0x543
0x6c2: THROWI V361
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x6c3
[0x6c3:0x6e2]
---
Predecessors: [0x66b]
Successors: [0x6e3]
---
0x6c3 PUSH1 0x0
0x6c5 ADDRESS
0x6c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6db AND
0x6dc BALANCE
0x6dd EQ
0x6de ISZERO
0x6df PUSH2 0x542
0x6e2 JUMPI
---
0x6c3: V363 = 0x0
0x6c5: V364 = ADDRESS
0x6c6: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x6dc: V367 = BALANCE V366
0x6dd: V368 = EQ V367 0x0
0x6de: V369 = ISZERO V368
0x6df: V370 = 0x542
0x6e2: THROWI V369
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6e3
[0x6e3:0x722]
---
Predecessors: [0x6c3]
Successors: [0x723]
---
0x6e3 DUP1
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 PUSH2 0x100
0x6ea EXP
0x6eb DUP2
0x6ec SLOAD
0x6ed DUP2
0x6ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x703 MUL
0x704 NOT
0x705 AND
0x706 SWAP1
0x707 DUP4
0x708 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71d AND
0x71e MUL
0x71f OR
0x720 SWAP1
0x721 SSTORE
0x722 POP
---
0x6e4: V371 = 0x0
0x6e7: V372 = 0x100
0x6ea: V373 = EXP 0x100 0x0
0x6ec: V374 = S[0x0]
0x6ee: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x703: V376 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x704: V377 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x705: V378 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V374
0x708: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x71d: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x71e: V381 = MUL V380 0x1
0x71f: V382 = OR V381 V378
0x721: S[0x0] = V382
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x723
[0x723:0x723]
---
Predecessors: [0x6e3]
Successors: [0x724]
---
0x723 JUMPDEST
---
0x723: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x724
[0x724:0x83b]
---
Predecessors: [0x723]
Successors: [0x83c]
Has unresolved jump.
---
0x724 JUMPDEST
0x725 POP
0x726 JUMP
0x727 JUMPDEST
0x728 PUSH1 0x1
0x72a PUSH1 0x0
0x72c SWAP1
0x72d SLOAD
0x72e SWAP1
0x72f PUSH2 0x100
0x732 EXP
0x733 SWAP1
0x734 DIV
0x735 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74a AND
0x74b DUP2
0x74c JUMP
0x74d JUMPDEST
0x74e CALLER
0x74f PUSH1 0x1
0x751 PUSH1 0x0
0x753 PUSH2 0x100
0x756 EXP
0x757 DUP2
0x758 SLOAD
0x759 DUP2
0x75a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76f MUL
0x770 NOT
0x771 AND
0x772 SWAP1
0x773 DUP4
0x774 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x789 AND
0x78a MUL
0x78b OR
0x78c SWAP1
0x78d SSTORE
0x78e POP
0x78f DUP1
0x790 PUSH1 0x3
0x792 DUP2
0x793 SWAP1
0x794 SSTORE
0x795 POP
0x796 PUSH1 0x1
0x798 PUSH1 0x0
0x79a SWAP1
0x79b SLOAD
0x79c SWAP1
0x79d PUSH2 0x100
0x7a0 EXP
0x7a1 SWAP1
0x7a2 DIV
0x7a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b8 AND
0x7b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ce AND
0x7cf PUSH32 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x7f0 PUSH1 0x3
0x7f2 SLOAD
0x7f3 PUSH1 0x40
0x7f5 MLOAD
0x7f6 DUP1
0x7f7 DUP3
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc ADD
0x7fd SWAP2
0x7fe POP
0x7ff POP
0x800 PUSH1 0x40
0x802 MLOAD
0x803 DUP1
0x804 SWAP2
0x805 SUB
0x806 SWAP1
0x807 LOG2
0x808 POP
0x809 JUMP
0x80a JUMPDEST
0x80b PUSH1 0x3
0x80d SLOAD
0x80e DUP2
0x80f JUMP
0x810 JUMPDEST
0x811 PUSH1 0x2
0x813 PUSH1 0x20
0x815 MSTORE
0x816 DUP1
0x817 PUSH1 0x0
0x819 MSTORE
0x81a PUSH1 0x40
0x81c PUSH1 0x0
0x81e SHA3
0x81f PUSH1 0x0
0x821 SWAP2
0x822 POP
0x823 SWAP1
0x824 POP
0x825 SLOAD
0x826 DUP2
0x827 JUMP
0x828 STOP
0x829 LOG1
0x82a PUSH6 0x627a7a723058
0x831 SHA3
0x832 SGT
0x833 MISSING 0xf8
0x834 CALLDATACOPY
0x835 EXP
0x836 MISSING 0xaf
0x837 MISSING 0xae
0x838 MISSING 0xaf
0x839 MISSING 0xd9
0x83a MISSING 0xac
0x83b JUMPI
---
0x724: JUMPDEST 
0x726: JUMP S1
0x727: JUMPDEST 
0x728: V383 = 0x1
0x72a: V384 = 0x0
0x72d: V385 = S[0x1]
0x72f: V386 = 0x100
0x732: V387 = EXP 0x100 0x0
0x734: V388 = DIV V385 0x1
0x735: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x74a: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x74c: JUMP S0
0x74d: JUMPDEST 
0x74e: V391 = CALLER
0x74f: V392 = 0x1
0x751: V393 = 0x0
0x753: V394 = 0x100
0x756: V395 = EXP 0x100 0x0
0x758: V396 = S[0x1]
0x75a: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x76f: V398 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x770: V399 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x771: V400 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V396
0x774: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x789: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x78a: V403 = MUL V402 0x1
0x78b: V404 = OR V403 V400
0x78d: S[0x1] = V404
0x790: V405 = 0x3
0x794: S[0x3] = S0
0x796: V406 = 0x1
0x798: V407 = 0x0
0x79b: V408 = S[0x1]
0x79d: V409 = 0x100
0x7a0: V410 = EXP 0x100 0x0
0x7a2: V411 = DIV V408 0x1
0x7a3: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b8: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x7b9: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ce: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x7cf: V416 = 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x7f0: V417 = 0x3
0x7f2: V418 = S[0x3]
0x7f3: V419 = 0x40
0x7f5: V420 = M[0x40]
0x7f9: M[V420] = V418
0x7fa: V421 = 0x20
0x7fc: V422 = ADD 0x20 V420
0x800: V423 = 0x40
0x802: V424 = M[0x40]
0x805: V425 = SUB V422 V424
0x807: LOG V424 V425 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79 V415
0x809: JUMP S1
0x80a: JUMPDEST 
0x80b: V426 = 0x3
0x80d: V427 = S[0x3]
0x80f: JUMP S0
0x810: JUMPDEST 
0x811: V428 = 0x2
0x813: V429 = 0x20
0x815: M[0x20] = 0x2
0x817: V430 = 0x0
0x819: M[0x0] = S0
0x81a: V431 = 0x40
0x81c: V432 = 0x0
0x81e: V433 = SHA3 0x0 0x40
0x81f: V434 = 0x0
0x825: V435 = S[V433]
0x827: JUMP S1
0x828: STOP 
0x829: LOG S0 S1 S2
0x82a: V436 = 0x627a7a723058
0x831: V437 = SHA3 0x627a7a723058 S3
0x832: V438 = SGT V437 S4
0x833: MISSING 0xf8
0x834: CALLDATACOPY S0 S1 S2
0x835: V439 = EXP S3 S4
0x836: MISSING 0xaf
0x837: MISSING 0xae
0x838: MISSING 0xaf
0x839: MISSING 0xd9
0x83a: MISSING 0xac
0x83b: JUMPI S0 S1
---
Entry stack: [S0]
Stack pops: 5328
Stack additions: []
Exit stack: []

================================

Block 0x83c
[0x83c:0x853]
---
Predecessors: [0x724]
Successors: []
---
0x83c MISSING 0xcc
0x83d REVERT
0x83e ADD
0x83f MSTORE
0x840 MISSING 0xaa
0x841 OR
0x842 ISZERO
0x843 MISSING 0xad
0x844 MISSING 0x4d
0x845 JUMPDEST
0x846 MISSING 0xa7
0x847 MISSING 0xdb
0x848 MSIZE
0x849 OR
0x84a MISSING 0xd2
0x84b MISSING 0x4d
0x84c SHA3
0x84d GAS
0x84e SLOAD
0x84f MISSING 0xfc
0x850 POP
0x851 MISSING 0xc1
0x852 STOP
0x853 MISSING 0x29
---
0x83c: MISSING 0xcc
0x83d: REVERT S0 S1
0x83e: V440 = ADD S0 S1
0x83f: M[V440] = S2
0x840: MISSING 0xaa
0x841: V441 = OR S0 S1
0x842: V442 = ISZERO V441
0x843: MISSING 0xad
0x844: MISSING 0x4d
0x845: JUMPDEST 
0x846: MISSING 0xa7
0x847: MISSING 0xdb
0x848: V443 = MSIZE
0x849: V444 = OR V443 S0
0x84a: MISSING 0xd2
0x84b: MISSING 0x4d
0x84c: V445 = SHA3 S0 S1
0x84d: V446 = GAS
0x84e: V447 = S[V446]
0x84f: MISSING 0xfc
0x851: MISSING 0xc1
0x852: STOP 
0x853: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V442, V444, V447, V445]
Exit stack: []

================================

Function 0:
Public function signature: 0x4fb2e45d
Entry block: 0x48
Exit block: 0x7f
Body: 0x48, 0x4f, 0x53, 0x7f, 0xd6, 0x12c, 0x14c, 0x18c, 0x18d

Function 1:
Public function signature: 0xb4a99a4e
Entry block: 0x81
Exit block: 0x94
Body: 0x81, 0x88, 0x8c, 0x94, 0x190

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

