Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x242fc62
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x242fc62
0x3c: V13 = EQ 0x242fc62 V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcf]
---
0x41 DUP1
0x42 PUSH4 0x2ab13037
0x47 EQ
0x48 PUSH2 0xcf
0x4b JUMPI
---
0x42: V15 = 0x2ab13037
0x47: V16 = EQ 0x2ab13037 V11
0x48: V17 = 0xcf
0x4b: JUMPI 0xcf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x100]
---
0x4c DUP1
0x4d PUSH4 0x5cd7d478
0x52 EQ
0x53 PUSH2 0x100
0x56 JUMPI
---
0x4d: V18 = 0x5cd7d478
0x52: V19 = EQ 0x5cd7d478 V11
0x53: V20 = 0x100
0x56: JUMPI 0x100 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x12f]
---
0x57 DUP1
0x58 PUSH4 0x8d0fc05a
0x5d EQ
0x5e PUSH2 0x12f
0x61 JUMPI
---
0x58: V21 = 0x8d0fc05a
0x5d: V22 = EQ 0x8d0fc05a V11
0x5e: V23 = 0x12f
0x61: JUMPI 0x12f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x160]
---
0x62 DUP1
0x63 PUSH4 0xc31ad7dc
0x68 EQ
0x69 PUSH2 0x160
0x6c JUMPI
---
0x63: V24 = 0xc31ad7dc
0x68: V25 = EQ 0xc31ad7dc V11
0x69: V26 = 0x160
0x6c: JUMPI 0x160 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0xd]
Successors: [0x79, 0x7d]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V28 = CALLVALUE
0x74: V29 = ISZERO V28
0x75: V30 = 0x7d
0x78: JUMPI 0x7d V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x72]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V31 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0xcc]
---
Predecessors: [0x72]
Successors: [0x1bd]
---
0x7d JUMPDEST
0x7e PUSH2 0xcd
0x81 PUSH1 0x4
0x83 DUP1
0x84 DUP1
0x85 CALLDATALOAD
0x86 SWAP1
0x87 PUSH1 0x20
0x89 ADD
0x8a SWAP1
0x8b DUP3
0x8c ADD
0x8d DUP1
0x8e CALLDATALOAD
0x8f SWAP1
0x90 PUSH1 0x20
0x92 ADD
0x93 SWAP1
0x94 DUP1
0x95 DUP1
0x96 PUSH1 0x1f
0x98 ADD
0x99 PUSH1 0x20
0x9b DUP1
0x9c SWAP2
0x9d DIV
0x9e MUL
0x9f PUSH1 0x20
0xa1 ADD
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 SWAP1
0xa6 DUP2
0xa7 ADD
0xa8 PUSH1 0x40
0xaa MSTORE
0xab DUP1
0xac SWAP4
0xad SWAP3
0xae SWAP2
0xaf SWAP1
0xb0 DUP2
0xb1 DUP2
0xb2 MSTORE
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 DUP4
0xb7 DUP4
0xb8 DUP1
0xb9 DUP3
0xba DUP5
0xbb CALLDATACOPY
0xbc DUP3
0xbd ADD
0xbe SWAP2
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 SWAP2
0xc6 SWAP1
0xc7 POP
0xc8 POP
0xc9 PUSH2 0x1bd
0xcc JUMP
---
0x7d: JUMPDEST 
0x7e: V32 = 0xcd
0x81: V33 = 0x4
0x85: V34 = CALLDATALOAD 0x4
0x87: V35 = 0x20
0x89: V36 = ADD 0x20 0x4
0x8c: V37 = ADD 0x4 V34
0x8e: V38 = CALLDATALOAD V37
0x90: V39 = 0x20
0x92: V40 = ADD 0x20 V37
0x96: V41 = 0x1f
0x98: V42 = ADD 0x1f V38
0x99: V43 = 0x20
0x9d: V44 = DIV V42 0x20
0x9e: V45 = MUL V44 0x20
0x9f: V46 = 0x20
0xa1: V47 = ADD 0x20 V45
0xa2: V48 = 0x40
0xa4: V49 = M[0x40]
0xa7: V50 = ADD V49 V47
0xa8: V51 = 0x40
0xaa: M[0x40] = V50
0xb2: M[V49] = V38
0xb3: V52 = 0x20
0xb5: V53 = ADD 0x20 V49
0xbb: CALLDATACOPY V53 V40 V38
0xbd: V54 = ADD V53 V38
0xc9: V55 = 0x1bd
0xcc: JUMP 0x1bd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcd, V49]
Exit stack: [V11, 0xcd, V49]

================================

Block 0xcd
[0xcd:0xce]
---
Predecessors: [0x269]
Successors: []
---
0xcd JUMPDEST
0xce STOP
---
0xcd: JUMPDEST 
0xce: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x41]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V56 = CALLVALUE
0xd1: V57 = ISZERO V56
0xd2: V58 = 0xda
0xd5: JUMPI 0xda V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V59 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x279]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x279
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V60 = 0xe2
0xde: V61 = 0x279
0xe1: JUMP 0x279
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xff]
---
Predecessors: [0x279]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 DUP3
0xe8 PUSH2 0xffff
0xeb AND
0xec PUSH2 0xffff
0xef AND
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP2
0xf6 POP
0xf7 POP
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc SWAP2
0xfd SUB
0xfe SWAP1
0xff RETURN
---
0xe2: JUMPDEST 
0xe3: V62 = 0x40
0xe5: V63 = M[0x40]
0xe8: V64 = 0xffff
0xeb: V65 = AND 0xffff V197
0xec: V66 = 0xffff
0xef: V67 = AND 0xffff V65
0xf1: M[V63] = V67
0xf2: V68 = 0x20
0xf4: V69 = ADD 0x20 V63
0xf8: V70 = 0x40
0xfa: V71 = M[0x40]
0xfd: V72 = SUB V69 V71
0xff: RETURN V71 V72
---
Entry stack: [V11, 0xe2, V197]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x4c]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V73 = CALLVALUE
0x102: V74 = ISZERO V73
0x103: V75 = 0x10b
0x106: JUMPI 0x10b V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V76 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x28d]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x28d
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V77 = 0x113
0x10f: V78 = 0x28d
0x112: JUMP 0x28d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x113
[0x113:0x12e]
---
Predecessors: [0x2cc]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 DUP3
0x119 PUSH1 0xff
0x11b AND
0x11c PUSH1 0xff
0x11e AND
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 SWAP2
0x125 POP
0x126 POP
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b SWAP2
0x12c SUB
0x12d SWAP1
0x12e RETURN
---
0x113: JUMPDEST 
0x114: V79 = 0x40
0x116: V80 = M[0x40]
0x119: V81 = 0xff
0x11b: V82 = AND 0xff {0x0, 0x1}
0x11c: V83 = 0xff
0x11e: V84 = AND 0xff V82
0x120: M[V80] = V84
0x121: V85 = 0x20
0x123: V86 = ADD 0x20 V80
0x127: V87 = 0x40
0x129: V88 = M[0x40]
0x12c: V89 = SUB V86 V88
0x12e: RETURN V88 V89
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0x57]
Successors: [0x136, 0x13a]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 ISZERO
0x132 PUSH2 0x13a
0x135 JUMPI
---
0x12f: JUMPDEST 
0x130: V90 = CALLVALUE
0x131: V91 = ISZERO V90
0x132: V92 = 0x13a
0x135: JUMPI 0x13a V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x136
[0x136:0x139]
---
Predecessors: [0x12f]
Successors: []
---
0x136 PUSH1 0x0
0x138 DUP1
0x139 REVERT
---
0x136: V93 = 0x0
0x139: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x12f]
Successors: [0x2cf]
---
0x13a JUMPDEST
0x13b PUSH2 0x142
0x13e PUSH2 0x2cf
0x141 JUMP
---
0x13a: JUMPDEST 
0x13b: V94 = 0x142
0x13e: V95 = 0x2cf
0x141: JUMP 0x2cf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V11, 0x142]

================================

Block 0x142
[0x142:0x15f]
---
Predecessors: [0x2cf]
Successors: []
---
0x142 JUMPDEST
0x143 PUSH1 0x40
0x145 MLOAD
0x146 DUP1
0x147 DUP3
0x148 PUSH2 0xffff
0x14b AND
0x14c PUSH2 0xffff
0x14f AND
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP2
0x156 POP
0x157 POP
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c SWAP2
0x15d SUB
0x15e SWAP1
0x15f RETURN
---
0x142: JUMPDEST 
0x143: V96 = 0x40
0x145: V97 = M[0x40]
0x148: V98 = 0xffff
0x14b: V99 = AND 0xffff V230
0x14c: V100 = 0xffff
0x14f: V101 = AND 0xffff V99
0x151: M[V97] = V101
0x152: V102 = 0x20
0x154: V103 = ADD 0x20 V97
0x158: V104 = 0x40
0x15a: V105 = M[0x40]
0x15d: V106 = SUB V103 V105
0x15f: RETURN V105 V106
---
Entry stack: [V11, 0x142, V230]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x142]

================================

Block 0x160
[0x160:0x166]
---
Predecessors: [0x62]
Successors: [0x167, 0x16b]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x160: JUMPDEST 
0x161: V107 = CALLVALUE
0x162: V108 = ISZERO V107
0x163: V109 = 0x16b
0x166: JUMPI 0x16b V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x160]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V110 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16b
[0x16b:0x1ba]
---
Predecessors: [0x160]
Successors: [0x2e2]
---
0x16b JUMPDEST
0x16c PUSH2 0x1bb
0x16f PUSH1 0x4
0x171 DUP1
0x172 DUP1
0x173 CALLDATALOAD
0x174 SWAP1
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 DUP3
0x17a ADD
0x17b DUP1
0x17c CALLDATALOAD
0x17d SWAP1
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP1
0x182 DUP1
0x183 DUP1
0x184 PUSH1 0x1f
0x186 ADD
0x187 PUSH1 0x20
0x189 DUP1
0x18a SWAP2
0x18b DIV
0x18c MUL
0x18d PUSH1 0x20
0x18f ADD
0x190 PUSH1 0x40
0x192 MLOAD
0x193 SWAP1
0x194 DUP2
0x195 ADD
0x196 PUSH1 0x40
0x198 MSTORE
0x199 DUP1
0x19a SWAP4
0x19b SWAP3
0x19c SWAP2
0x19d SWAP1
0x19e DUP2
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP4
0x1a5 DUP4
0x1a6 DUP1
0x1a7 DUP3
0x1a8 DUP5
0x1a9 CALLDATACOPY
0x1aa DUP3
0x1ab ADD
0x1ac SWAP2
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 SWAP2
0x1b4 SWAP1
0x1b5 POP
0x1b6 POP
0x1b7 PUSH2 0x2e2
0x1ba JUMP
---
0x16b: JUMPDEST 
0x16c: V111 = 0x1bb
0x16f: V112 = 0x4
0x173: V113 = CALLDATALOAD 0x4
0x175: V114 = 0x20
0x177: V115 = ADD 0x20 0x4
0x17a: V116 = ADD 0x4 V113
0x17c: V117 = CALLDATALOAD V116
0x17e: V118 = 0x20
0x180: V119 = ADD 0x20 V116
0x184: V120 = 0x1f
0x186: V121 = ADD 0x1f V117
0x187: V122 = 0x20
0x18b: V123 = DIV V121 0x20
0x18c: V124 = MUL V123 0x20
0x18d: V125 = 0x20
0x18f: V126 = ADD 0x20 V124
0x190: V127 = 0x40
0x192: V128 = M[0x40]
0x195: V129 = ADD V128 V126
0x196: V130 = 0x40
0x198: M[0x40] = V129
0x1a0: M[V128] = V117
0x1a1: V131 = 0x20
0x1a3: V132 = ADD 0x20 V128
0x1a9: CALLDATACOPY V132 V119 V117
0x1ab: V133 = ADD V132 V117
0x1b7: V134 = 0x2e2
0x1ba: JUMP 0x2e2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1bb, V128]
Exit stack: [V11, 0x1bb, V128]

================================

Block 0x1bb
[0x1bb:0x1bc]
---
Predecessors: [0x3a1]
Successors: []
---
0x1bb JUMPDEST
0x1bc STOP
---
0x1bb: JUMPDEST 
0x1bc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bd
[0x1bd:0x220]
---
Predecessors: [0x7d]
Successors: [0x221]
---
0x1bd JUMPDEST
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 PUSH1 0x2
0x1c3 PUSH2 0x100
0x1c6 EXP
0x1c7 DUP2
0x1c8 SLOAD
0x1c9 DUP2
0x1ca PUSH2 0xffff
0x1cd MUL
0x1ce NOT
0x1cf AND
0x1d0 SWAP1
0x1d1 DUP4
0x1d2 PUSH2 0xffff
0x1d5 AND
0x1d6 MUL
0x1d7 OR
0x1d8 SWAP1
0x1d9 SSTORE
0x1da POP
0x1db PUSH32 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b
0x1fc DUP2
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP1
0x201 DUP1
0x202 PUSH1 0x20
0x204 ADD
0x205 DUP3
0x206 DUP2
0x207 SUB
0x208 DUP3
0x209 MSTORE
0x20a DUP4
0x20b DUP2
0x20c DUP2
0x20d MLOAD
0x20e DUP2
0x20f MSTORE
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP2
0x214 POP
0x215 DUP1
0x216 MLOAD
0x217 SWAP1
0x218 PUSH1 0x20
0x21a ADD
0x21b SWAP1
0x21c DUP1
0x21d DUP4
0x21e DUP4
0x21f PUSH1 0x0
---
0x1bd: JUMPDEST 
0x1be: V135 = 0x0
0x1c1: V136 = 0x2
0x1c3: V137 = 0x100
0x1c6: V138 = EXP 0x100 0x2
0x1c8: V139 = S[0x0]
0x1ca: V140 = 0xffff
0x1cd: V141 = MUL 0xffff 0x10000
0x1ce: V142 = NOT 0xffff0000
0x1cf: V143 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff V139
0x1d2: V144 = 0xffff
0x1d5: V145 = AND 0xffff 0x0
0x1d6: V146 = MUL 0x0 0x10000
0x1d7: V147 = OR 0x0 V143
0x1d9: S[0x0] = V147
0x1db: V148 = 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b
0x1fd: V149 = 0x40
0x1ff: V150 = M[0x40]
0x202: V151 = 0x20
0x204: V152 = ADD 0x20 V150
0x207: V153 = SUB V152 V150
0x209: M[V150] = V153
0x20d: V154 = M[V49]
0x20f: M[V152] = V154
0x210: V155 = 0x20
0x212: V156 = ADD 0x20 V152
0x216: V157 = M[V49]
0x218: V158 = 0x20
0x21a: V159 = ADD 0x20 V49
0x21f: V160 = 0x0
---
Entry stack: [V11, 0xcd, V49]
Stack pops: 1
Stack additions: [S0, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, S0, V150, V150, V156, V159, V157, V157, V156, V159, 0x0]
Exit stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V156, V159, V157, V157, V156, V159, 0x0]

================================

Block 0x221
[0x221:0x229]
---
Predecessors: [0x1bd, 0x22a]
Successors: [0x22a, 0x23c]
---
0x221 JUMPDEST
0x222 DUP4
0x223 DUP2
0x224 LT
0x225 ISZERO
0x226 PUSH2 0x23c
0x229 JUMPI
---
0x221: JUMPDEST 
0x224: V161 = LT S0 V157
0x225: V162 = ISZERO V161
0x226: V163 = 0x23c
0x229: JUMPI 0x23c V162
---
Entry stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V156, V159, V157, V157, V156, V159, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V156, V159, V157, V157, V156, V159, S0]

================================

Block 0x22a
[0x22a:0x23b]
---
Predecessors: [0x221]
Successors: [0x221]
---
0x22a DUP1
0x22b DUP3
0x22c ADD
0x22d MLOAD
0x22e DUP2
0x22f DUP5
0x230 ADD
0x231 MSTORE
0x232 PUSH1 0x20
0x234 DUP2
0x235 ADD
0x236 SWAP1
0x237 POP
0x238 PUSH2 0x221
0x23b JUMP
---
0x22c: V164 = ADD V159 S0
0x22d: V165 = M[V164]
0x230: V166 = ADD V156 S0
0x231: M[V166] = V165
0x232: V167 = 0x20
0x235: V168 = ADD S0 0x20
0x238: V169 = 0x221
0x23b: JUMP 0x221
---
Entry stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V156, V159, V157, V157, V156, V159, S0]
Stack pops: 3
Stack additions: [S2, S1, V168]
Exit stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V156, V159, V157, V157, V156, V159, V168]

================================

Block 0x23c
[0x23c:0x24f]
---
Predecessors: [0x221]
Successors: [0x250, 0x269]
---
0x23c JUMPDEST
0x23d POP
0x23e POP
0x23f POP
0x240 POP
0x241 SWAP1
0x242 POP
0x243 SWAP1
0x244 DUP2
0x245 ADD
0x246 SWAP1
0x247 PUSH1 0x1f
0x249 AND
0x24a DUP1
0x24b ISZERO
0x24c PUSH2 0x269
0x24f JUMPI
---
0x23c: JUMPDEST 
0x245: V170 = ADD V157 V156
0x247: V171 = 0x1f
0x249: V172 = AND 0x1f V157
0x24b: V173 = ISZERO V172
0x24c: V174 = 0x269
0x24f: JUMPI 0x269 V173
---
Entry stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V156, V159, V157, V157, V156, V159, S0]
Stack pops: 7
Stack additions: [V170, V172]
Exit stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V170, V172]

================================

Block 0x250
[0x250:0x268]
---
Predecessors: [0x23c]
Successors: [0x269]
---
0x250 DUP1
0x251 DUP3
0x252 SUB
0x253 DUP1
0x254 MLOAD
0x255 PUSH1 0x1
0x257 DUP4
0x258 PUSH1 0x20
0x25a SUB
0x25b PUSH2 0x100
0x25e EXP
0x25f SUB
0x260 NOT
0x261 AND
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP2
0x268 POP
---
0x252: V175 = SUB V170 V172
0x254: V176 = M[V175]
0x255: V177 = 0x1
0x258: V178 = 0x20
0x25a: V179 = SUB 0x20 V172
0x25b: V180 = 0x100
0x25e: V181 = EXP 0x100 V179
0x25f: V182 = SUB V181 0x1
0x260: V183 = NOT V182
0x261: V184 = AND V183 V176
0x263: M[V175] = V184
0x264: V185 = 0x20
0x266: V186 = ADD 0x20 V175
---
Entry stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V170, V172]
Stack pops: 2
Stack additions: [V186, S0]
Exit stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, V186, V172]

================================

Block 0x269
[0x269:0x278]
---
Predecessors: [0x23c, 0x250]
Successors: [0xcd]
---
0x269 JUMPDEST
0x26a POP
0x26b SWAP3
0x26c POP
0x26d POP
0x26e POP
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 LOG1
0x277 POP
0x278 JUMP
---
0x269: JUMPDEST 
0x26f: V187 = 0x40
0x271: V188 = M[0x40]
0x274: V189 = SUB S1 V188
0x276: LOG V188 V189 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b
0x278: JUMP 0xcd
---
Entry stack: [V11, 0xcd, V49, 0xee7c371fc0570f53048ec729f71ecf89d7a7ce29250b7e26dd0d98e4af70537b, V49, V150, V150, S1, V172]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x279
[0x279:0x28c]
---
Predecessors: [0xda]
Successors: [0xe2]
---
0x279 JUMPDEST
0x27a PUSH1 0x0
0x27c PUSH1 0x2
0x27e SWAP1
0x27f SLOAD
0x280 SWAP1
0x281 PUSH2 0x100
0x284 EXP
0x285 SWAP1
0x286 DIV
0x287 PUSH2 0xffff
0x28a AND
0x28b DUP2
0x28c JUMP
---
0x279: JUMPDEST 
0x27a: V190 = 0x0
0x27c: V191 = 0x2
0x27f: V192 = S[0x0]
0x281: V193 = 0x100
0x284: V194 = EXP 0x100 0x2
0x286: V195 = DIV V192 0x10000
0x287: V196 = 0xffff
0x28a: V197 = AND 0xffff V195
0x28c: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V197]
Exit stack: [V11, 0xe2, V197]

================================

Block 0x28d
[0x28d:0x2be]
---
Predecessors: [0x10b]
Successors: [0x2bf, 0x2c7]
---
0x28d JUMPDEST
0x28e PUSH1 0x0
0x290 DUP1
0x291 PUSH1 0x2
0x293 SWAP1
0x294 SLOAD
0x295 SWAP1
0x296 PUSH2 0x100
0x299 EXP
0x29a SWAP1
0x29b DIV
0x29c PUSH2 0xffff
0x29f AND
0x2a0 PUSH2 0xffff
0x2a3 AND
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 SWAP1
0x2a8 SLOAD
0x2a9 SWAP1
0x2aa PUSH2 0x100
0x2ad EXP
0x2ae SWAP1
0x2af DIV
0x2b0 PUSH2 0xffff
0x2b3 AND
0x2b4 PUSH2 0xffff
0x2b7 AND
0x2b8 LT
0x2b9 ISZERO
0x2ba ISZERO
0x2bb PUSH2 0x2c7
0x2be JUMPI
---
0x28d: JUMPDEST 
0x28e: V198 = 0x0
0x291: V199 = 0x2
0x294: V200 = S[0x0]
0x296: V201 = 0x100
0x299: V202 = EXP 0x100 0x2
0x29b: V203 = DIV V200 0x10000
0x29c: V204 = 0xffff
0x29f: V205 = AND 0xffff V203
0x2a0: V206 = 0xffff
0x2a3: V207 = AND 0xffff V205
0x2a4: V208 = 0x0
0x2a8: V209 = S[0x0]
0x2aa: V210 = 0x100
0x2ad: V211 = EXP 0x100 0x0
0x2af: V212 = DIV V209 0x1
0x2b0: V213 = 0xffff
0x2b3: V214 = AND 0xffff V212
0x2b4: V215 = 0xffff
0x2b7: V216 = AND 0xffff V214
0x2b8: V217 = LT V216 V207
0x2b9: V218 = ISZERO V217
0x2ba: V219 = ISZERO V218
0x2bb: V220 = 0x2c7
0x2be: JUMPI 0x2c7 V219
---
Entry stack: [V11, 0x113]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x113, 0x0]

================================

Block 0x2bf
[0x2bf:0x2c6]
---
Predecessors: [0x28d]
Successors: [0x2cc]
---
0x2bf PUSH1 0x0
0x2c1 SWAP1
0x2c2 POP
0x2c3 PUSH2 0x2cc
0x2c6 JUMP
---
0x2bf: V221 = 0x0
0x2c3: V222 = 0x2cc
0x2c6: JUMP 0x2cc
---
Entry stack: [V11, 0x113, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x113, 0x0]

================================

Block 0x2c7
[0x2c7:0x2cb]
---
Predecessors: [0x28d]
Successors: [0x2cc]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x1
0x2ca SWAP1
0x2cb POP
---
0x2c7: JUMPDEST 
0x2c8: V223 = 0x1
---
Entry stack: [V11, 0x113, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x113, 0x1]

================================

Block 0x2cc
[0x2cc:0x2ce]
---
Predecessors: [0x2bf, 0x2c7]
Successors: [0x113]
---
0x2cc JUMPDEST
0x2cd SWAP1
0x2ce JUMP
---
0x2cc: JUMPDEST 
0x2ce: JUMP 0x113
---
Entry stack: [V11, 0x113, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x2cf
[0x2cf:0x2e1]
---
Predecessors: [0x13a]
Successors: [0x142]
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 SWAP1
0x2d4 SLOAD
0x2d5 SWAP1
0x2d6 PUSH2 0x100
0x2d9 EXP
0x2da SWAP1
0x2db DIV
0x2dc PUSH2 0xffff
0x2df AND
0x2e0 DUP2
0x2e1 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V224 = 0x0
0x2d4: V225 = S[0x0]
0x2d6: V226 = 0x100
0x2d9: V227 = EXP 0x100 0x0
0x2db: V228 = DIV V225 0x1
0x2dc: V229 = 0xffff
0x2df: V230 = AND 0xffff V228
0x2e1: JUMP 0x142
---
Entry stack: [V11, 0x142]
Stack pops: 1
Stack additions: [S0, V230]
Exit stack: [V11, 0x142, V230]

================================

Block 0x2e2
[0x2e2:0x358]
---
Predecessors: [0x16b]
Successors: [0x359]
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 PUSH1 0x0
0x2e8 DUP3
0x2e9 DUP3
0x2ea DUP3
0x2eb SWAP1
0x2ec SLOAD
0x2ed SWAP1
0x2ee PUSH2 0x100
0x2f1 EXP
0x2f2 SWAP1
0x2f3 DIV
0x2f4 PUSH2 0xffff
0x2f7 AND
0x2f8 ADD
0x2f9 SWAP3
0x2fa POP
0x2fb PUSH2 0x100
0x2fe EXP
0x2ff DUP2
0x300 SLOAD
0x301 DUP2
0x302 PUSH2 0xffff
0x305 MUL
0x306 NOT
0x307 AND
0x308 SWAP1
0x309 DUP4
0x30a PUSH2 0xffff
0x30d AND
0x30e MUL
0x30f OR
0x310 SWAP1
0x311 SSTORE
0x312 POP
0x313 PUSH32 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296
0x334 DUP2
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 DUP1
0x33a PUSH1 0x20
0x33c ADD
0x33d DUP3
0x33e DUP2
0x33f SUB
0x340 DUP3
0x341 MSTORE
0x342 DUP4
0x343 DUP2
0x344 DUP2
0x345 MLOAD
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x20
0x34a ADD
0x34b SWAP2
0x34c POP
0x34d DUP1
0x34e MLOAD
0x34f SWAP1
0x350 PUSH1 0x20
0x352 ADD
0x353 SWAP1
0x354 DUP1
0x355 DUP4
0x356 DUP4
0x357 PUSH1 0x0
---
0x2e2: JUMPDEST 
0x2e3: V231 = 0x0
0x2e6: V232 = 0x0
0x2ec: V233 = S[0x0]
0x2ee: V234 = 0x100
0x2f1: V235 = EXP 0x100 0x0
0x2f3: V236 = DIV V233 0x1
0x2f4: V237 = 0xffff
0x2f7: V238 = AND 0xffff V236
0x2f8: V239 = ADD V238 0x0
0x2fb: V240 = 0x100
0x2fe: V241 = EXP 0x100 0x0
0x300: V242 = S[0x0]
0x302: V243 = 0xffff
0x305: V244 = MUL 0xffff 0x1
0x306: V245 = NOT 0xffff
0x307: V246 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V242
0x30a: V247 = 0xffff
0x30d: V248 = AND 0xffff V239
0x30e: V249 = MUL V248 0x1
0x30f: V250 = OR V249 V246
0x311: S[0x0] = V250
0x313: V251 = 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296
0x335: V252 = 0x40
0x337: V253 = M[0x40]
0x33a: V254 = 0x20
0x33c: V255 = ADD 0x20 V253
0x33f: V256 = SUB V255 V253
0x341: M[V253] = V256
0x345: V257 = M[V128]
0x347: M[V255] = V257
0x348: V258 = 0x20
0x34a: V259 = ADD 0x20 V255
0x34e: V260 = M[V128]
0x350: V261 = 0x20
0x352: V262 = ADD 0x20 V128
0x357: V263 = 0x0
---
Entry stack: [V11, 0x1bb, V128]
Stack pops: 1
Stack additions: [S0, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, S0, V253, V253, V259, V262, V260, V260, V259, V262, 0x0]
Exit stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V259, V262, V260, V260, V259, V262, 0x0]

================================

Block 0x359
[0x359:0x361]
---
Predecessors: [0x2e2, 0x362]
Successors: [0x362, 0x374]
---
0x359 JUMPDEST
0x35a DUP4
0x35b DUP2
0x35c LT
0x35d ISZERO
0x35e PUSH2 0x374
0x361 JUMPI
---
0x359: JUMPDEST 
0x35c: V264 = LT S0 V260
0x35d: V265 = ISZERO V264
0x35e: V266 = 0x374
0x361: JUMPI 0x374 V265
---
Entry stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V259, V262, V260, V260, V259, V262, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V259, V262, V260, V260, V259, V262, S0]

================================

Block 0x362
[0x362:0x373]
---
Predecessors: [0x359]
Successors: [0x359]
---
0x362 DUP1
0x363 DUP3
0x364 ADD
0x365 MLOAD
0x366 DUP2
0x367 DUP5
0x368 ADD
0x369 MSTORE
0x36a PUSH1 0x20
0x36c DUP2
0x36d ADD
0x36e SWAP1
0x36f POP
0x370 PUSH2 0x359
0x373 JUMP
---
0x364: V267 = ADD V262 S0
0x365: V268 = M[V267]
0x368: V269 = ADD V259 S0
0x369: M[V269] = V268
0x36a: V270 = 0x20
0x36d: V271 = ADD S0 0x20
0x370: V272 = 0x359
0x373: JUMP 0x359
---
Entry stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V259, V262, V260, V260, V259, V262, S0]
Stack pops: 3
Stack additions: [S2, S1, V271]
Exit stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V259, V262, V260, V260, V259, V262, V271]

================================

Block 0x374
[0x374:0x387]
---
Predecessors: [0x359]
Successors: [0x388, 0x3a1]
---
0x374 JUMPDEST
0x375 POP
0x376 POP
0x377 POP
0x378 POP
0x379 SWAP1
0x37a POP
0x37b SWAP1
0x37c DUP2
0x37d ADD
0x37e SWAP1
0x37f PUSH1 0x1f
0x381 AND
0x382 DUP1
0x383 ISZERO
0x384 PUSH2 0x3a1
0x387 JUMPI
---
0x374: JUMPDEST 
0x37d: V273 = ADD V260 V259
0x37f: V274 = 0x1f
0x381: V275 = AND 0x1f V260
0x383: V276 = ISZERO V275
0x384: V277 = 0x3a1
0x387: JUMPI 0x3a1 V276
---
Entry stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V259, V262, V260, V260, V259, V262, S0]
Stack pops: 7
Stack additions: [V273, V275]
Exit stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V273, V275]

================================

Block 0x388
[0x388:0x3a0]
---
Predecessors: [0x374]
Successors: [0x3a1]
---
0x388 DUP1
0x389 DUP3
0x38a SUB
0x38b DUP1
0x38c MLOAD
0x38d PUSH1 0x1
0x38f DUP4
0x390 PUSH1 0x20
0x392 SUB
0x393 PUSH2 0x100
0x396 EXP
0x397 SUB
0x398 NOT
0x399 AND
0x39a DUP2
0x39b MSTORE
0x39c PUSH1 0x20
0x39e ADD
0x39f SWAP2
0x3a0 POP
---
0x38a: V278 = SUB V273 V275
0x38c: V279 = M[V278]
0x38d: V280 = 0x1
0x390: V281 = 0x20
0x392: V282 = SUB 0x20 V275
0x393: V283 = 0x100
0x396: V284 = EXP 0x100 V282
0x397: V285 = SUB V284 0x1
0x398: V286 = NOT V285
0x399: V287 = AND V286 V279
0x39b: M[V278] = V287
0x39c: V288 = 0x20
0x39e: V289 = ADD 0x20 V278
---
Entry stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V273, V275]
Stack pops: 2
Stack additions: [V289, S0]
Exit stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, V289, V275]

================================

Block 0x3a1
[0x3a1:0x3b0]
---
Predecessors: [0x374, 0x388]
Successors: [0x1bb]
---
0x3a1 JUMPDEST
0x3a2 POP
0x3a3 SWAP3
0x3a4 POP
0x3a5 POP
0x3a6 POP
0x3a7 PUSH1 0x40
0x3a9 MLOAD
0x3aa DUP1
0x3ab SWAP2
0x3ac SUB
0x3ad SWAP1
0x3ae LOG1
0x3af POP
0x3b0 JUMP
---
0x3a1: JUMPDEST 
0x3a7: V290 = 0x40
0x3a9: V291 = M[0x40]
0x3ac: V292 = SUB S1 V291
0x3ae: LOG V291 V292 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296
0x3b0: JUMP 0x1bb
---
Entry stack: [V11, 0x1bb, V128, 0x3f22a19ad703e4231be9fa3a9f071c5104cb3962bdb0a3fb5e02c7c8d75df296, V128, V253, V253, S1, V275]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b1
[0x3b1:0x3dc]
---
Predecessors: []
Successors: []
---
0x3b1 STOP
0x3b2 LOG1
0x3b3 PUSH6 0x627a7a723058
0x3ba SHA3
0x3bb ADD
0x3bc DUP6
0x3bd SWAP14
0x3be MISSING 0xcd
0x3bf MISSING 0x4c
0x3c0 MISSING 0xa6
0x3c1 MISSING 0xe0
0x3c2 MISSING 0xf6
0x3c3 CALLDATACOPY
0x3c4 MISSING 0xc6
0x3c5 MISSING 0xef
0x3c6 MISSING 0xf8
0x3c7 LOG0
0x3c8 MISSING 0xc7
0x3c9 STATICCALL
0x3ca MISSING 0xf8
0x3cb MISSING 0xe1
0x3cc MISSING 0xb7
0x3cd MISSING 0xe2
0x3ce BLOCKHASH
0x3cf MISSING 0xd6
0x3d0 RETURN
0x3d1 MISSING 0x5f
0x3d2 MISSING 0xb2
0x3d3 MISSING 0x22
0x3d4 MISSING 0xe8
0x3d5 PUSH5 0x7d2b0e18db
0x3db STOP
0x3dc MISSING 0x29
---
0x3b1: STOP 
0x3b2: LOG S0 S1 S2
0x3b3: V293 = 0x627a7a723058
0x3ba: V294 = SHA3 0x627a7a723058 S3
0x3bb: V295 = ADD V294 S4
0x3be: MISSING 0xcd
0x3bf: MISSING 0x4c
0x3c0: MISSING 0xa6
0x3c1: MISSING 0xe0
0x3c2: MISSING 0xf6
0x3c3: CALLDATACOPY S0 S1 S2
0x3c4: MISSING 0xc6
0x3c5: MISSING 0xef
0x3c6: MISSING 0xf8
0x3c7: LOG S0 S1
0x3c8: MISSING 0xc7
0x3c9: V296 = STATICCALL S0 S1 S2 S3 S4 S5
0x3ca: MISSING 0xf8
0x3cb: MISSING 0xe1
0x3cc: MISSING 0xb7
0x3cd: MISSING 0xe2
0x3ce: V297 = BLOCKHASH S0
0x3cf: MISSING 0xd6
0x3d0: RETURN S0 S1
0x3d1: MISSING 0x5f
0x3d2: MISSING 0xb2
0x3d3: MISSING 0x22
0x3d4: MISSING 0xe8
0x3d5: V298 = 0x7d2b0e18db
0x3db: STOP 
0x3dc: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, V295, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S9, V296, V297, 0x7d2b0e18db]
Exit stack: []

================================

Function 0:
Public function signature: 0x242fc62
Entry block: 0x72
Exit block: 0xcd
Body: 0x72, 0x79, 0x7d, 0xcd, 0x1bd, 0x221, 0x22a, 0x23c, 0x250, 0x269

Function 1:
Public function signature: 0x2ab13037
Entry block: 0xcf
Exit block: 0xe2
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x279

Function 2:
Public function signature: 0x5cd7d478
Entry block: 0x100
Exit block: 0x113
Body: 0x100, 0x107, 0x10b, 0x113, 0x28d, 0x2bf, 0x2c7, 0x2cc

Function 3:
Public function signature: 0x8d0fc05a
Entry block: 0x12f
Exit block: 0x142
Body: 0x12f, 0x136, 0x13a, 0x142, 0x2cf

Function 4:
Public function signature: 0xc31ad7dc
Entry block: 0x160
Exit block: 0x1bb
Body: 0x160, 0x167, 0x16b, 0x1bb, 0x2e2, 0x359, 0x362, 0x374, 0x388, 0x3a1

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

