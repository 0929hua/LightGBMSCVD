Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x79ba5097
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x79ba5097
0x3c: V13 = EQ 0x79ba5097 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7e]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x7e
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x7e
0x4b: JUMPI 0x7e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd5]
---
0x4c DUP1
0x4d PUSH4 0xd4ee1d90
0x52 EQ
0x53 PUSH2 0xd5
0x56 JUMPI
---
0x4d: V18 = 0xd4ee1d90
0x52: V19 = EQ 0xd4ee1d90 V11
0x53: V20 = 0xd5
0x56: JUMPI 0xd5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x12c]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x12c
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x12c
0x61: JUMPI 0x12c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0x7b]
---
Predecessors: [0x67]
Successors: [0x16f]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0x7c
0x78 PUSH2 0x16f
0x7b JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0x7c
0x78: V30 = 0x16f
0x7b: JUMP 0x16f
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x7c]
Exit stack: [V11, 0x7c]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: [0x234]
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0x41]
Successors: [0x86, 0x8a]
---
0x7e JUMPDEST
0x7f CALLVALUE
0x80 DUP1
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x7e: JUMPDEST 
0x7f: V31 = CALLVALUE
0x81: V32 = ISZERO V31
0x82: V33 = 0x8a
0x85: JUMPI 0x8a V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7e]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V34 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x8a
[0x8a:0x92]
---
Predecessors: [0x7e]
Successors: [0x333]
---
0x8a JUMPDEST
0x8b POP
0x8c PUSH2 0x93
0x8f PUSH2 0x333
0x92 JUMP
---
0x8a: JUMPDEST 
0x8c: V35 = 0x93
0x8f: V36 = 0x333
0x92: JUMP 0x333
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0x93]
Exit stack: [V11, 0x93]

================================

Block 0x93
[0x93:0xd4]
---
Predecessors: [0x333]
Successors: []
---
0x93 JUMPDEST
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 DUP3
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP2
0xcb POP
0xcc POP
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 SWAP2
0xd2 SUB
0xd3 SWAP1
0xd4 RETURN
---
0x93: JUMPDEST 
0x94: V37 = 0x40
0x96: V38 = M[0x40]
0x99: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0xaf: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc6: M[V38] = V42
0xc7: V43 = 0x20
0xc9: V44 = ADD 0x20 V38
0xcd: V45 = 0x40
0xcf: V46 = M[0x40]
0xd2: V47 = SUB V44 V46
0xd4: RETURN V46 V47
---
Entry stack: [V11, 0x93, V165]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x93]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0x4c]
Successors: [0xdd, 0xe1]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 DUP1
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd5: JUMPDEST 
0xd6: V48 = CALLVALUE
0xd8: V49 = ISZERO V48
0xd9: V50 = 0xe1
0xdc: JUMPI 0xe1 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd5]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V51 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xe1
[0xe1:0xe9]
---
Predecessors: [0xd5]
Successors: [0x358]
---
0xe1 JUMPDEST
0xe2 POP
0xe3 PUSH2 0xea
0xe6 PUSH2 0x358
0xe9 JUMP
---
0xe1: JUMPDEST 
0xe3: V52 = 0xea
0xe6: V53 = 0x358
0xe9: JUMP 0x358
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xea]
Exit stack: [V11, 0xea]

================================

Block 0xea
[0xea:0x12b]
---
Predecessors: [0x358]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP2
0x122 POP
0x123 POP
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0xea: JUMPDEST 
0xeb: V54 = 0x40
0xed: V55 = M[0x40]
0xf0: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x106: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x11d: M[V55] = V59
0x11e: V60 = 0x20
0x120: V61 = ADD 0x20 V55
0x124: V62 = 0x40
0x126: V63 = M[0x40]
0x129: V64 = SUB V61 V63
0x12b: RETURN V63 V64
---
Entry stack: [V11, 0xea, V173]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xea]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x57]
Successors: [0x134, 0x138]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12c: JUMPDEST 
0x12d: V65 = CALLVALUE
0x12f: V66 = ISZERO V65
0x130: V67 = 0x138
0x133: JUMPI 0x138 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V65]
Exit stack: [V11, V65]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12c]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V68 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65]

================================

Block 0x138
[0x138:0x16c]
---
Predecessors: [0x12c]
Successors: [0x37e]
---
0x138 JUMPDEST
0x139 POP
0x13a PUSH2 0x16d
0x13d PUSH1 0x4
0x13f DUP1
0x140 CALLDATASIZE
0x141 SUB
0x142 DUP2
0x143 ADD
0x144 SWAP1
0x145 DUP1
0x146 DUP1
0x147 CALLDATALOAD
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP3
0x164 SWAP2
0x165 SWAP1
0x166 POP
0x167 POP
0x168 POP
0x169 PUSH2 0x37e
0x16c JUMP
---
0x138: JUMPDEST 
0x13a: V69 = 0x16d
0x13d: V70 = 0x4
0x140: V71 = CALLDATASIZE
0x141: V72 = SUB V71 0x4
0x143: V73 = ADD 0x4 V72
0x147: V74 = CALLDATALOAD 0x4
0x148: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15f: V77 = 0x20
0x161: V78 = ADD 0x20 0x4
0x169: V79 = 0x37e
0x16c: JUMP 0x37e
---
Entry stack: [V11, V65]
Stack pops: 1
Stack additions: [0x16d, V76]
Exit stack: [V11, 0x16d, V76]

================================

Block 0x16d
[0x16d:0x16e]
---
Predecessors: [0x4e7]
Successors: []
---
0x16d JUMPDEST
0x16e STOP
---
0x16d: JUMPDEST 
0x16e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16f
[0x16f:0x1c6]
---
Predecessors: [0x73]
Successors: [0x1c7, 0x234]
---
0x16f JUMPDEST
0x170 PUSH1 0x1
0x172 PUSH1 0x0
0x174 SWAP1
0x175 SLOAD
0x176 SWAP1
0x177 PUSH2 0x100
0x17a EXP
0x17b SWAP1
0x17c DIV
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 AND
0x1a9 CALLER
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 EQ
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 PUSH2 0x234
0x1c6 JUMPI
---
0x16f: JUMPDEST 
0x170: V80 = 0x1
0x172: V81 = 0x0
0x175: V82 = S[0x1]
0x177: V83 = 0x100
0x17a: V84 = EXP 0x100 0x0
0x17c: V85 = DIV V82 0x1
0x17d: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x193: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1a9: V90 = CALLER
0x1aa: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1c0: V93 = EQ V92 V89
0x1c1: V94 = ISZERO V93
0x1c2: V95 = ISZERO V94
0x1c3: V96 = 0x234
0x1c6: JUMPI 0x234 V95
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x1c7
[0x1c7:0x233]
---
Predecessors: [0x16f]
Successors: []
---
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1eb DUP2
0x1ec MSTORE
0x1ed PUSH1 0x4
0x1ef ADD
0x1f0 DUP1
0x1f1 DUP1
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 DUP3
0x1f6 DUP2
0x1f7 SUB
0x1f8 DUP3
0x1f9 MSTORE
0x1fa PUSH1 0x16
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 DUP1
0x202 PUSH32 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x223 DUP2
0x224 MSTORE
0x225 POP
0x226 PUSH1 0x20
0x228 ADD
0x229 SWAP2
0x22a POP
0x22b POP
0x22c PUSH1 0x40
0x22e MLOAD
0x22f DUP1
0x230 SWAP2
0x231 SUB
0x232 SWAP1
0x233 REVERT
---
0x1c7: V97 = 0x40
0x1c9: V98 = M[0x40]
0x1ca: V99 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1ec: M[V98] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1ed: V100 = 0x4
0x1ef: V101 = ADD 0x4 V98
0x1f2: V102 = 0x20
0x1f4: V103 = ADD 0x20 V101
0x1f7: V104 = SUB V103 V101
0x1f9: M[V101] = V104
0x1fa: V105 = 0x16
0x1fd: M[V103] = 0x16
0x1fe: V106 = 0x20
0x200: V107 = ADD 0x20 V103
0x202: V108 = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x224: M[V107] = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x226: V109 = 0x20
0x228: V110 = ADD 0x20 V107
0x22c: V111 = 0x40
0x22e: V112 = M[0x40]
0x231: V113 = SUB V110 V112
0x233: REVERT V112 V113
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x234
[0x234:0x332]
---
Predecessors: [0x16f]
Successors: [0x7c]
---
0x234 JUMPDEST
0x235 CALLER
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c PUSH1 0x0
0x24e DUP1
0x24f SWAP1
0x250 SLOAD
0x251 SWAP1
0x252 PUSH2 0x100
0x255 EXP
0x256 SWAP1
0x257 DIV
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac SWAP2
0x2ad SUB
0x2ae SWAP1
0x2af LOG3
0x2b0 CALLER
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 PUSH2 0x100
0x2b7 EXP
0x2b8 DUP2
0x2b9 SLOAD
0x2ba DUP2
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 MUL
0x2d1 NOT
0x2d2 AND
0x2d3 SWAP1
0x2d4 DUP4
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb MUL
0x2ec OR
0x2ed SWAP1
0x2ee SSTORE
0x2ef POP
0x2f0 PUSH1 0x0
0x2f2 PUSH1 0x1
0x2f4 PUSH1 0x0
0x2f6 PUSH2 0x100
0x2f9 EXP
0x2fa DUP2
0x2fb SLOAD
0x2fc DUP2
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 MUL
0x313 NOT
0x314 AND
0x315 SWAP1
0x316 DUP4
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d MUL
0x32e OR
0x32f SWAP1
0x330 SSTORE
0x331 POP
0x332 JUMP
---
0x234: JUMPDEST 
0x235: V114 = CALLER
0x236: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x24c: V117 = 0x0
0x250: V118 = S[0x0]
0x252: V119 = 0x100
0x255: V120 = EXP 0x100 0x0
0x257: V121 = DIV V118 0x1
0x258: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x26e: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x284: V126 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2a5: V127 = 0x40
0x2a7: V128 = M[0x40]
0x2a8: V129 = 0x40
0x2aa: V130 = M[0x40]
0x2ad: V131 = SUB V128 V130
0x2af: LOG V130 V131 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V125 V116
0x2b0: V132 = CALLER
0x2b1: V133 = 0x0
0x2b4: V134 = 0x100
0x2b7: V135 = EXP 0x100 0x0
0x2b9: V136 = S[0x0]
0x2bb: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V138 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2d1: V139 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V140 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V136
0x2d5: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x2eb: V143 = MUL V142 0x1
0x2ec: V144 = OR V143 V140
0x2ee: S[0x0] = V144
0x2f0: V145 = 0x0
0x2f2: V146 = 0x1
0x2f4: V147 = 0x0
0x2f6: V148 = 0x100
0x2f9: V149 = EXP 0x100 0x0
0x2fb: V150 = S[0x1]
0x2fd: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V152 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x313: V153 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x314: V154 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V150
0x317: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x32d: V157 = MUL 0x0 0x1
0x32e: V158 = OR 0x0 V154
0x330: S[0x1] = V158
0x332: JUMP 0x7c
---
Entry stack: [V11, 0x7c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x333
[0x333:0x357]
---
Predecessors: [0x8a]
Successors: [0x93]
---
0x333 JUMPDEST
0x334 PUSH1 0x0
0x336 DUP1
0x337 SWAP1
0x338 SLOAD
0x339 SWAP1
0x33a PUSH2 0x100
0x33d EXP
0x33e SWAP1
0x33f DIV
0x340 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x355 AND
0x356 DUP2
0x357 JUMP
---
0x333: JUMPDEST 
0x334: V159 = 0x0
0x338: V160 = S[0x0]
0x33a: V161 = 0x100
0x33d: V162 = EXP 0x100 0x0
0x33f: V163 = DIV V160 0x1
0x340: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x355: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x357: JUMP 0x93
---
Entry stack: [V11, 0x93]
Stack pops: 1
Stack additions: [S0, V165]
Exit stack: [V11, 0x93, V165]

================================

Block 0x358
[0x358:0x37d]
---
Predecessors: [0xe1]
Successors: [0xea]
---
0x358 JUMPDEST
0x359 PUSH1 0x1
0x35b PUSH1 0x0
0x35d SWAP1
0x35e SLOAD
0x35f SWAP1
0x360 PUSH2 0x100
0x363 EXP
0x364 SWAP1
0x365 DIV
0x366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37b AND
0x37c DUP2
0x37d JUMP
---
0x358: JUMPDEST 
0x359: V166 = 0x1
0x35b: V167 = 0x0
0x35e: V168 = S[0x1]
0x360: V169 = 0x100
0x363: V170 = EXP 0x100 0x0
0x365: V171 = DIV V168 0x1
0x366: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x37d: JUMP 0xea
---
Entry stack: [V11, 0xea]
Stack pops: 1
Stack additions: [S0, V173]
Exit stack: [V11, 0xea, V173]

================================

Block 0x37e
[0x37e:0x3d4]
---
Predecessors: [0x138]
Successors: [0x3d5, 0x442]
---
0x37e JUMPDEST
0x37f PUSH1 0x0
0x381 DUP1
0x382 SWAP1
0x383 SLOAD
0x384 SWAP1
0x385 PUSH2 0x100
0x388 EXP
0x389 SWAP1
0x38a DIV
0x38b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a0 AND
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 CALLER
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce EQ
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 PUSH2 0x442
0x3d4 JUMPI
---
0x37e: JUMPDEST 
0x37f: V174 = 0x0
0x383: V175 = S[0x0]
0x385: V176 = 0x100
0x388: V177 = EXP 0x100 0x0
0x38a: V178 = DIV V175 0x1
0x38b: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a0: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x3a1: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x3b7: V183 = CALLER
0x3b8: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x3ce: V186 = EQ V185 V182
0x3cf: V187 = ISZERO V186
0x3d0: V188 = ISZERO V187
0x3d1: V189 = 0x442
0x3d4: JUMPI 0x442 V188
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x3d5
[0x3d5:0x441]
---
Predecessors: [0x37e]
Successors: []
---
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x4
0x3fd ADD
0x3fe DUP1
0x3ff DUP1
0x400 PUSH1 0x20
0x402 ADD
0x403 DUP3
0x404 DUP2
0x405 SUB
0x406 DUP3
0x407 MSTORE
0x408 PUSH1 0x13
0x40a DUP2
0x40b MSTORE
0x40c PUSH1 0x20
0x40e ADD
0x40f DUP1
0x410 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x431 DUP2
0x432 MSTORE
0x433 POP
0x434 PUSH1 0x20
0x436 ADD
0x437 SWAP2
0x438 POP
0x439 POP
0x43a PUSH1 0x40
0x43c MLOAD
0x43d DUP1
0x43e SWAP2
0x43f SUB
0x440 SWAP1
0x441 REVERT
---
0x3d5: V190 = 0x40
0x3d7: V191 = M[0x40]
0x3d8: V192 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3fa: M[V191] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3fb: V193 = 0x4
0x3fd: V194 = ADD 0x4 V191
0x400: V195 = 0x20
0x402: V196 = ADD 0x20 V194
0x405: V197 = SUB V196 V194
0x407: M[V194] = V197
0x408: V198 = 0x13
0x40b: M[V196] = 0x13
0x40c: V199 = 0x20
0x40e: V200 = ADD 0x20 V196
0x410: V201 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x432: M[V200] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x434: V202 = 0x20
0x436: V203 = ADD 0x20 V200
0x43a: V204 = 0x40
0x43c: V205 = M[0x40]
0x43f: V206 = SUB V203 V205
0x441: REVERT V205 V206
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x442
[0x442:0x479]
---
Predecessors: [0x37e]
Successors: [0x47a, 0x4e7]
---
0x442 JUMPDEST
0x443 DUP1
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a PUSH1 0x0
0x45c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x471 AND
0x472 EQ
0x473 ISZERO
0x474 ISZERO
0x475 ISZERO
0x476 PUSH2 0x4e7
0x479 JUMPI
---
0x442: JUMPDEST 
0x444: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x45a: V209 = 0x0
0x45c: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x471: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x472: V212 = EQ 0x0 V208
0x473: V213 = ISZERO V212
0x474: V214 = ISZERO V213
0x475: V215 = ISZERO V214
0x476: V216 = 0x4e7
0x479: JUMPI 0x4e7 V215
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x16d, V76]

================================

Block 0x47a
[0x47a:0x4e6]
---
Predecessors: [0x442]
Successors: []
---
0x47a PUSH1 0x40
0x47c MLOAD
0x47d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x4
0x4a2 ADD
0x4a3 DUP1
0x4a4 DUP1
0x4a5 PUSH1 0x20
0x4a7 ADD
0x4a8 DUP3
0x4a9 DUP2
0x4aa SUB
0x4ab DUP3
0x4ac MSTORE
0x4ad PUSH1 0x17
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 DUP1
0x4b5 PUSH32 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 POP
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc SWAP2
0x4dd POP
0x4de POP
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 SWAP2
0x4e4 SUB
0x4e5 SWAP1
0x4e6 REVERT
---
0x47a: V217 = 0x40
0x47c: V218 = M[0x40]
0x47d: V219 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49f: M[V218] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4a0: V220 = 0x4
0x4a2: V221 = ADD 0x4 V218
0x4a5: V222 = 0x20
0x4a7: V223 = ADD 0x20 V221
0x4aa: V224 = SUB V223 V221
0x4ac: M[V221] = V224
0x4ad: V225 = 0x17
0x4b0: M[V223] = 0x17
0x4b1: V226 = 0x20
0x4b3: V227 = ADD 0x20 V223
0x4b5: V228 = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x4d7: M[V227] = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x4d9: V229 = 0x20
0x4db: V230 = ADD 0x20 V227
0x4df: V231 = 0x40
0x4e1: V232 = M[0x40]
0x4e4: V233 = SUB V230 V232
0x4e6: REVERT V232 V233
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x4e7
[0x4e7:0x52a]
---
Predecessors: [0x442]
Successors: [0x16d]
---
0x4e7 JUMPDEST
0x4e8 DUP1
0x4e9 PUSH1 0x1
0x4eb PUSH1 0x0
0x4ed PUSH2 0x100
0x4f0 EXP
0x4f1 DUP2
0x4f2 SLOAD
0x4f3 DUP2
0x4f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x509 MUL
0x50a NOT
0x50b AND
0x50c SWAP1
0x50d DUP4
0x50e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x523 AND
0x524 MUL
0x525 OR
0x526 SWAP1
0x527 SSTORE
0x528 POP
0x529 POP
0x52a JUMP
---
0x4e7: JUMPDEST 
0x4e9: V234 = 0x1
0x4eb: V235 = 0x0
0x4ed: V236 = 0x100
0x4f0: V237 = EXP 0x100 0x0
0x4f2: V238 = S[0x1]
0x4f4: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x509: V240 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x50a: V241 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V242 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V238
0x50e: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x523: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x524: V245 = MUL V244 0x1
0x525: V246 = OR V245 V242
0x527: S[0x1] = V246
0x52a: JUMP 0x16d
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x52b
[0x52b:0x5af]
---
Predecessors: []
Successors: [0x5b0]
---
0x52b STOP
0x52c LOG1
0x52d PUSH6 0x627a7a723058
0x534 SHA3
0x535 DUP5
0x536 MISSING 0xce
0x537 MISSING 0xe4
0x538 RETURN
0x539 MISSING 0xd8
0x53a PUSH16 0x79ff38d5273a5907fba9fea6953c236a
0x54b CALLDATASIZE
0x54c MISSING 0xd
0x54d CALLCODE
0x54e CODECOPY
0x54f RETURN
0x550 MISSING 0xe7
0x551 PUSH17 0xf710c60029730000000000000000000000
0x563 STOP
0x564 STOP
0x565 STOP
0x566 STOP
0x567 STOP
0x568 STOP
0x569 STOP
0x56a STOP
0x56b STOP
0x56c ADDRESS
0x56d EQ
0x56e PUSH1 0x80
0x570 PUSH1 0x40
0x572 MSTORE
0x573 PUSH1 0x0
0x575 DUP1
0x576 REVERT
0x577 STOP
0x578 LOG1
0x579 PUSH6 0x627a7a723058
0x580 SHA3
0x581 MLOAD
0x582 MISSING 0xb9
0x583 MSIZE
0x584 MISSING 0x1e
0x585 ADDMOD
0x586 MISSING 0xe7
0x587 PUSH8 0x9deb2fc77092c6c8
0x590 MISSING 0xe4
0x591 CALLDATASIZE
0x592 SHA3
0x593 ADD
0x594 SHA3
0x595 MISSING 0xd2
0x596 DIV
0x597 XOR
0x598 DUP1
0x599 PUSH21 0xa86b1d8ff015e000296080604052600436106100ba
0x5af JUMPI
---
0x52b: STOP 
0x52c: LOG S0 S1 S2
0x52d: V247 = 0x627a7a723058
0x534: V248 = SHA3 0x627a7a723058 S3
0x536: MISSING 0xce
0x537: MISSING 0xe4
0x538: RETURN S0 S1
0x539: MISSING 0xd8
0x53a: V249 = 0x79ff38d5273a5907fba9fea6953c236a
0x54b: V250 = CALLDATASIZE
0x54c: MISSING 0xd
0x54d: V251 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x54e: CODECOPY V251 S7 S8
0x54f: RETURN S9 S10
0x550: MISSING 0xe7
0x551: V252 = 0xf710c60029730000000000000000000000
0x563: STOP 
0x564: STOP 
0x565: STOP 
0x566: STOP 
0x567: STOP 
0x568: STOP 
0x569: STOP 
0x56a: STOP 
0x56b: STOP 
0x56c: V253 = ADDRESS
0x56d: V254 = EQ V253 S0
0x56e: V255 = 0x80
0x570: V256 = 0x40
0x572: M[0x40] = 0x80
0x573: V257 = 0x0
0x576: REVERT 0x0 0x0
0x577: STOP 
0x578: LOG S0 S1 S2
0x579: V258 = 0x627a7a723058
0x580: V259 = SHA3 0x627a7a723058 S3
0x581: V260 = M[V259]
0x582: MISSING 0xb9
0x583: V261 = MSIZE
0x584: MISSING 0x1e
0x585: V262 = ADDMOD S0 S1 S2
0x586: MISSING 0xe7
0x587: V263 = 0x9deb2fc77092c6c8
0x590: MISSING 0xe4
0x591: V264 = CALLDATASIZE
0x592: V265 = SHA3 V264 S0
0x593: V266 = ADD V265 S1
0x594: V267 = SHA3 V266 S2
0x595: MISSING 0xd2
0x596: V268 = DIV S0 S1
0x597: V269 = XOR V268 S2
0x599: V270 = 0xa86b1d8ff015e000296080604052600436106100ba
0x5af: THROWI V269
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, V248, S4, S5, S6, S7, V250, 0x79ff38d5273a5907fba9fea6953c236a, 0xf710c60029730000000000000000000000, V254, V260, V261, V262, 0x9deb2fc77092c6c8, V267, V269]
Exit stack: []

================================

Block 0x5b0
[0x5b0:0x5e3]
---
Predecessors: [0x52b]
Successors: [0x5e4]
---
0x5b0 PUSH1 0x0
0x5b2 CALLDATALOAD
0x5b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5d1 SWAP1
0x5d2 DIV
0x5d3 PUSH4 0xffffffff
0x5d8 AND
0x5d9 DUP1
0x5da PUSH4 0x1ef771fb
0x5df EQ
0x5e0 PUSH2 0xb7f
0x5e3 JUMPI
---
0x5b0: V271 = 0x0
0x5b2: V272 = CALLDATALOAD 0x0
0x5b3: V273 = 0x100000000000000000000000000000000000000000000000000000000
0x5d2: V274 = DIV V272 0x100000000000000000000000000000000000000000000000000000000
0x5d3: V275 = 0xffffffff
0x5d8: V276 = AND 0xffffffff V274
0x5da: V277 = 0x1ef771fb
0x5df: V278 = EQ 0x1ef771fb V276
0x5e0: V279 = 0xb7f
0x5e3: THROWI V278
---
Entry stack: [V269]
Stack pops: 0
Stack additions: [V276]
Exit stack: [V269, V276]

================================

Block 0x5e4
[0x5e4:0x5ee]
---
Predecessors: [0x5b0]
Successors: [0x5ef]
---
0x5e4 DUP1
0x5e5 PUSH4 0x51d962e1
0x5ea EQ
0x5eb PUSH2 0xbd6
0x5ee JUMPI
---
0x5e5: V280 = 0x51d962e1
0x5ea: V281 = EQ 0x51d962e1 V276
0x5eb: V282 = 0xbd6
0x5ee: THROWI V281
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x5ef
[0x5ef:0x5f9]
---
Predecessors: [0x5e4]
Successors: [0x5fa]
---
0x5ef DUP1
0x5f0 PUSH4 0x5e35359e
0x5f5 EQ
0x5f6 PUSH2 0xc01
0x5f9 JUMPI
---
0x5f0: V283 = 0x5e35359e
0x5f5: V284 = EQ 0x5e35359e V276
0x5f6: V285 = 0xc01
0x5f9: THROWI V284
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x5fa
[0x5fa:0x604]
---
Predecessors: [0x5ef]
Successors: [0x605]
---
0x5fa DUP1
0x5fb PUSH4 0x6c56a3f1
0x600 EQ
0x601 PUSH2 0xc86
0x604 JUMPI
---
0x5fb: V286 = 0x6c56a3f1
0x600: V287 = EQ 0x6c56a3f1 V276
0x601: V288 = 0xc86
0x604: THROWI V287
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x605
[0x605:0x60f]
---
Predecessors: [0x5fa]
Successors: [0x610]
---
0x605 DUP1
0x606 PUSH4 0x7974f8fe
0x60b EQ
0x60c PUSH2 0xcb1
0x60f JUMPI
---
0x606: V289 = 0x7974f8fe
0x60b: V290 = EQ 0x7974f8fe V276
0x60c: V291 = 0xcb1
0x60f: THROWI V290
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x610
[0x610:0x61a]
---
Predecessors: [0x605]
Successors: [0x61b]
---
0x610 DUP1
0x611 PUSH4 0x79ba5097
0x616 EQ
0x617 PUSH2 0xcde
0x61a JUMPI
---
0x611: V292 = 0x79ba5097
0x616: V293 = EQ 0x79ba5097 V276
0x617: V294 = 0xcde
0x61a: THROWI V293
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x61b
[0x61b:0x625]
---
Predecessors: [0x610]
Successors: [0x626]
---
0x61b DUP1
0x61c PUSH4 0x8bc008e6
0x621 EQ
0x622 PUSH2 0xcf5
0x625 JUMPI
---
0x61c: V295 = 0x8bc008e6
0x621: V296 = EQ 0x8bc008e6 V276
0x622: V297 = 0xcf5
0x625: THROWI V296
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x626
[0x626:0x630]
---
Predecessors: [0x61b]
Successors: [0x631]
---
0x626 DUP1
0x627 PUSH4 0x8da5cb5b
0x62c EQ
0x62d PUSH2 0xd4c
0x630 JUMPI
---
0x627: V298 = 0x8da5cb5b
0x62c: V299 = EQ 0x8da5cb5b V276
0x62d: V300 = 0xd4c
0x630: THROWI V299
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x631
[0x631:0x63b]
---
Predecessors: [0x626]
Successors: [0x63c]
---
0x631 DUP1
0x632 PUSH4 0xd4ee1d90
0x637 EQ
0x638 PUSH2 0xda3
0x63b JUMPI
---
0x632: V301 = 0xd4ee1d90
0x637: V302 = EQ 0xd4ee1d90 V276
0x638: V303 = 0xda3
0x63b: THROWI V302
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x63c
[0x63c:0x646]
---
Predecessors: [0x631]
Successors: [0x647]
---
0x63c DUP1
0x63d PUSH4 0xdf49804a
0x642 EQ
0x643 PUSH2 0xdfa
0x646 JUMPI
---
0x63d: V304 = 0xdf49804a
0x642: V305 = EQ 0xdf49804a V276
0x643: V306 = 0xdfa
0x646: THROWI V305
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x647
[0x647:0x651]
---
Predecessors: [0x63c]
Successors: [0x652]
---
0x647 DUP1
0x648 PUSH4 0xee71f3f5
0x64d EQ
0x64e PUSH2 0xe51
0x651 JUMPI
---
0x648: V307 = 0xee71f3f5
0x64d: V308 = EQ 0xee71f3f5 V276
0x64e: V309 = 0xe51
0x651: THROWI V308
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x652
[0x652:0x65c]
---
Predecessors: [0x647]
Successors: [0x65d]
---
0x652 DUP1
0x653 PUSH4 0xf2fde38b
0x658 EQ
0x659 PUSH2 0xea8
0x65c JUMPI
---
0x653: V310 = 0xf2fde38b
0x658: V311 = EQ 0xf2fde38b V276
0x659: V312 = 0xea8
0x65c: THROWI V311
---
Entry stack: [V269, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269, V276]

================================

Block 0x65d
[0x65d:0x664]
---
Predecessors: [0x652]
Successors: [0x665]
---
0x65d JUMPDEST
0x65e CALLVALUE
0x65f DUP1
0x660 ISZERO
0x661 PUSH2 0xc6
0x664 JUMPI
---
0x65d: JUMPDEST 
0x65e: V313 = CALLVALUE
0x660: V314 = ISZERO V313
0x661: V315 = 0xc6
0x664: THROWI V314
---
Entry stack: [V269, V276]
Stack pops: 0
Stack additions: [V313]
Exit stack: [V269, V276, V313]

================================

Block 0x665
[0x665:0x6aa]
---
Predecessors: [0x65d]
Successors: [0x6ab]
---
0x665 PUSH1 0x0
0x667 DUP1
0x668 REVERT
0x669 JUMPDEST
0x66a POP
0x66b PUSH1 0x0
0x66d DUP1
0x66e PUSH1 0x0
0x670 DUP1
0x671 PUSH1 0x0
0x673 DUP1
0x674 PUSH1 0x0
0x676 ORIGIN
0x677 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68c AND
0x68d CALLER
0x68e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a3 AND
0x6a4 EQ
0x6a5 ISZERO
0x6a6 ISZERO
0x6a7 PUSH2 0x175
0x6aa JUMPI
---
0x665: V316 = 0x0
0x668: REVERT 0x0 0x0
0x669: JUMPDEST 
0x66b: V317 = 0x0
0x66e: V318 = 0x0
0x671: V319 = 0x0
0x674: V320 = 0x0
0x676: V321 = ORIGIN
0x677: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x68c: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x68d: V324 = CALLER
0x68e: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a3: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x6a4: V327 = EQ V326 V323
0x6a5: V328 = ISZERO V327
0x6a6: V329 = ISZERO V328
0x6a7: V330 = 0x175
0x6aa: THROWI V329
---
Entry stack: [V269, V276, V313]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x6ab
[0x6ab:0x72f]
---
Predecessors: [0x665]
Successors: [0xeeb]
---
0x6ab PUSH1 0x40
0x6ad MLOAD
0x6ae PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6cf DUP2
0x6d0 MSTORE
0x6d1 PUSH1 0x4
0x6d3 ADD
0x6d4 DUP1
0x6d5 DUP1
0x6d6 PUSH1 0x20
0x6d8 ADD
0x6d9 DUP3
0x6da DUP2
0x6db SUB
0x6dc DUP3
0x6dd MSTORE
0x6de PUSH1 0x16
0x6e0 DUP2
0x6e1 MSTORE
0x6e2 PUSH1 0x20
0x6e4 ADD
0x6e5 DUP1
0x6e6 PUSH32 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x707 DUP2
0x708 MSTORE
0x709 POP
0x70a PUSH1 0x20
0x70c ADD
0x70d SWAP2
0x70e POP
0x70f POP
0x710 PUSH1 0x40
0x712 MLOAD
0x713 DUP1
0x714 SWAP2
0x715 SUB
0x716 SWAP1
0x717 REVERT
0x718 JUMPDEST
0x719 PUSH2 0x18d
0x71c PUSH3 0x15180
0x720 PUSH1 0x4
0x722 SLOAD
0x723 PUSH2 0xeeb
0x726 SWAP1
0x727 SWAP2
0x728 SWAP1
0x729 PUSH4 0xffffffff
0x72e AND
0x72f JUMP
---
0x6ab: V331 = 0x40
0x6ad: V332 = M[0x40]
0x6ae: V333 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6d0: M[V332] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6d1: V334 = 0x4
0x6d3: V335 = ADD 0x4 V332
0x6d6: V336 = 0x20
0x6d8: V337 = ADD 0x20 V335
0x6db: V338 = SUB V337 V335
0x6dd: M[V335] = V338
0x6de: V339 = 0x16
0x6e1: M[V337] = 0x16
0x6e2: V340 = 0x20
0x6e4: V341 = ADD 0x20 V337
0x6e6: V342 = 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x708: M[V341] = 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x70a: V343 = 0x20
0x70c: V344 = ADD 0x20 V341
0x710: V345 = 0x40
0x712: V346 = M[0x40]
0x715: V347 = SUB V344 V346
0x717: REVERT V346 V347
0x718: JUMPDEST 
0x719: V348 = 0x18d
0x71c: V349 = 0x15180
0x720: V350 = 0x4
0x722: V351 = S[0x4]
0x723: V352 = 0xeeb
0x729: V353 = 0xffffffff
0x72e: V354 = AND 0xffffffff 0xeeb
0x72f: JUMP 0xeeb
---
Entry stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x15180, V351, 0x18d]
Exit stack: []

================================

Block 0x730
[0x730:0x738]
---
Predecessors: []
Successors: [0x739]
---
0x730 JUMPDEST
0x731 TIMESTAMP
0x732 GT
0x733 ISZERO
0x734 ISZERO
0x735 PUSH2 0x19a
0x738 JUMPI
---
0x730: JUMPDEST 
0x731: V355 = TIMESTAMP
0x732: V356 = GT V355 S0
0x733: V357 = ISZERO V356
0x734: V358 = ISZERO V357
0x735: V359 = 0x19a
0x738: THROWI V358
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x739
[0x739:0x7f5]
---
Predecessors: [0x730]
Successors: [0x7f6]
---
0x739 PUSH1 0x0
0x73b DUP1
0x73c REVERT
0x73d JUMPDEST
0x73e PUSH1 0x2
0x740 PUSH1 0x0
0x742 SWAP1
0x743 SLOAD
0x744 SWAP1
0x745 PUSH2 0x100
0x748 EXP
0x749 SWAP1
0x74a DIV
0x74b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x760 AND
0x761 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x776 AND
0x777 PUSH4 0x70a08231
0x77c CALLER
0x77d PUSH1 0x40
0x77f MLOAD
0x780 DUP3
0x781 PUSH4 0xffffffff
0x786 AND
0x787 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a5 MUL
0x7a6 DUP2
0x7a7 MSTORE
0x7a8 PUSH1 0x4
0x7aa ADD
0x7ab DUP1
0x7ac DUP3
0x7ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c2 AND
0x7c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d8 AND
0x7d9 DUP2
0x7da MSTORE
0x7db PUSH1 0x20
0x7dd ADD
0x7de SWAP2
0x7df POP
0x7e0 POP
0x7e1 PUSH1 0x20
0x7e3 PUSH1 0x40
0x7e5 MLOAD
0x7e6 DUP1
0x7e7 DUP4
0x7e8 SUB
0x7e9 DUP2
0x7ea PUSH1 0x0
0x7ec DUP8
0x7ed DUP1
0x7ee EXTCODESIZE
0x7ef ISZERO
0x7f0 DUP1
0x7f1 ISZERO
0x7f2 PUSH2 0x257
0x7f5 JUMPI
---
0x739: V360 = 0x0
0x73c: REVERT 0x0 0x0
0x73d: JUMPDEST 
0x73e: V361 = 0x2
0x740: V362 = 0x0
0x743: V363 = S[0x2]
0x745: V364 = 0x100
0x748: V365 = EXP 0x100 0x0
0x74a: V366 = DIV V363 0x1
0x74b: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x760: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x761: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x776: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x777: V371 = 0x70a08231
0x77c: V372 = CALLER
0x77d: V373 = 0x40
0x77f: V374 = M[0x40]
0x781: V375 = 0xffffffff
0x786: V376 = AND 0xffffffff 0x70a08231
0x787: V377 = 0x100000000000000000000000000000000000000000000000000000000
0x7a5: V378 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x7a7: M[V374] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7a8: V379 = 0x4
0x7aa: V380 = ADD 0x4 V374
0x7ad: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x7c3: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d8: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x7da: M[V380] = V384
0x7db: V385 = 0x20
0x7dd: V386 = ADD 0x20 V380
0x7e1: V387 = 0x20
0x7e3: V388 = 0x40
0x7e5: V389 = M[0x40]
0x7e8: V390 = SUB V386 V389
0x7ea: V391 = 0x0
0x7ee: V392 = EXTCODESIZE V370
0x7ef: V393 = ISZERO V392
0x7f1: V394 = ISZERO V393
0x7f2: V395 = 0x257
0x7f5: THROWI V394
---
Entry stack: []
Stack pops: 0
Stack additions: [V393, V370, 0x0, V389, V390, V389, 0x20, V386, 0x70a08231, V370]
Exit stack: []

================================

Block 0x7f6
[0x7f6:0x804]
---
Predecessors: [0x739]
Successors: [0x805]
---
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 REVERT
0x7fa JUMPDEST
0x7fb POP
0x7fc GAS
0x7fd CALL
0x7fe ISZERO
0x7ff DUP1
0x800 ISZERO
0x801 PUSH2 0x26b
0x804 JUMPI
---
0x7f6: V396 = 0x0
0x7f9: REVERT 0x0 0x0
0x7fa: JUMPDEST 
0x7fc: V397 = GAS
0x7fd: V398 = CALL V397 S1 S2 S3 S4 S5 S6
0x7fe: V399 = ISZERO V398
0x800: V400 = ISZERO V399
0x801: V401 = 0x26b
0x804: THROWI V400
---
Entry stack: [V370, 0x70a08231, V386, 0x20, V389, V390, V389, 0x0, V370, V393]
Stack pops: 0
Stack additions: [V399]
Exit stack: []

================================

Block 0x805
[0x805:0x81f]
---
Predecessors: [0x7f6]
Successors: [0x820]
---
0x805 RETURNDATASIZE
0x806 PUSH1 0x0
0x808 DUP1
0x809 RETURNDATACOPY
0x80a RETURNDATASIZE
0x80b PUSH1 0x0
0x80d REVERT
0x80e JUMPDEST
0x80f POP
0x810 POP
0x811 POP
0x812 POP
0x813 PUSH1 0x40
0x815 MLOAD
0x816 RETURNDATASIZE
0x817 PUSH1 0x20
0x819 DUP2
0x81a LT
0x81b ISZERO
0x81c PUSH2 0x281
0x81f JUMPI
---
0x805: V402 = RETURNDATASIZE
0x806: V403 = 0x0
0x809: RETURNDATACOPY 0x0 0x0 V402
0x80a: V404 = RETURNDATASIZE
0x80b: V405 = 0x0
0x80d: REVERT 0x0 V404
0x80e: JUMPDEST 
0x813: V406 = 0x40
0x815: V407 = M[0x40]
0x816: V408 = RETURNDATASIZE
0x817: V409 = 0x20
0x81a: V410 = LT V408 0x20
0x81b: V411 = ISZERO V410
0x81c: V412 = 0x281
0x81f: THROWI V411
---
Entry stack: [V399]
Stack pops: 0
Stack additions: [V408, V407]
Exit stack: []

================================

Block 0x820
[0x820:0x840]
---
Predecessors: [0x805]
Successors: [0x841]
---
0x820 PUSH1 0x0
0x822 DUP1
0x823 REVERT
0x824 JUMPDEST
0x825 DUP2
0x826 ADD
0x827 SWAP1
0x828 DUP1
0x829 DUP1
0x82a MLOAD
0x82b SWAP1
0x82c PUSH1 0x20
0x82e ADD
0x82f SWAP1
0x830 SWAP3
0x831 SWAP2
0x832 SWAP1
0x833 POP
0x834 POP
0x835 POP
0x836 SWAP7
0x837 POP
0x838 PUSH1 0x0
0x83a DUP8
0x83b GT
0x83c ISZERO
0x83d PUSH2 0x6aa
0x840 JUMPI
---
0x820: V413 = 0x0
0x823: REVERT 0x0 0x0
0x824: JUMPDEST 
0x826: V414 = ADD S1 S0
0x82a: V415 = M[S1]
0x82c: V416 = 0x20
0x82e: V417 = ADD 0x20 S1
0x838: V418 = 0x0
0x83b: V419 = GT V415 0x0
0x83c: V420 = ISZERO V419
0x83d: V421 = 0x6aa
0x840: THROWI V420
---
Entry stack: [V407, V408]
Stack pops: 0
Stack additions: [S2, S3, S4, S5, S6, S7, V415]
Exit stack: []

================================

Block 0x841
[0x841:0x914]
---
Predecessors: [0x820]
Successors: [0x915]
---
0x841 PUSH1 0x2
0x843 PUSH1 0x0
0x845 SWAP1
0x846 SLOAD
0x847 SWAP1
0x848 PUSH2 0x100
0x84b EXP
0x84c SWAP1
0x84d DIV
0x84e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x863 AND
0x864 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x879 AND
0x87a PUSH4 0x1d32ab99
0x87f PUSH20 0xdead0dead0dead0dead0dead0dead0dead0dead
0x894 DUP10
0x895 PUSH1 0x40
0x897 MLOAD
0x898 DUP4
0x899 PUSH4 0xffffffff
0x89e AND
0x89f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8bd MUL
0x8be DUP2
0x8bf MSTORE
0x8c0 PUSH1 0x4
0x8c2 ADD
0x8c3 DUP1
0x8c4 DUP4
0x8c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8da AND
0x8db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f0 AND
0x8f1 DUP2
0x8f2 MSTORE
0x8f3 PUSH1 0x20
0x8f5 ADD
0x8f6 DUP3
0x8f7 DUP2
0x8f8 MSTORE
0x8f9 PUSH1 0x20
0x8fb ADD
0x8fc SWAP3
0x8fd POP
0x8fe POP
0x8ff POP
0x900 PUSH1 0x20
0x902 PUSH1 0x40
0x904 MLOAD
0x905 DUP1
0x906 DUP4
0x907 SUB
0x908 DUP2
0x909 PUSH1 0x0
0x90b DUP8
0x90c DUP1
0x90d EXTCODESIZE
0x90e ISZERO
0x90f DUP1
0x910 ISZERO
0x911 PUSH2 0x376
0x914 JUMPI
---
0x841: V422 = 0x2
0x843: V423 = 0x0
0x846: V424 = S[0x2]
0x848: V425 = 0x100
0x84b: V426 = EXP 0x100 0x0
0x84d: V427 = DIV V424 0x1
0x84e: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x863: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x864: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x879: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x87a: V432 = 0x1d32ab99
0x87f: V433 = 0xdead0dead0dead0dead0dead0dead0dead0dead
0x895: V434 = 0x40
0x897: V435 = M[0x40]
0x899: V436 = 0xffffffff
0x89e: V437 = AND 0xffffffff 0x1d32ab99
0x89f: V438 = 0x100000000000000000000000000000000000000000000000000000000
0x8bd: V439 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1d32ab99
0x8bf: M[V435] = 0x1d32ab9900000000000000000000000000000000000000000000000000000000
0x8c0: V440 = 0x4
0x8c2: V441 = ADD 0x4 V435
0x8c5: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x8da: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdead0dead0dead0dead0dead0dead0dead0dead
0x8db: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f0: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdead0dead0dead0dead0dead0dead0dead0dead
0x8f2: M[V441] = 0xdead0dead0dead0dead0dead0dead0dead0dead
0x8f3: V446 = 0x20
0x8f5: V447 = ADD 0x20 V441
0x8f8: M[V447] = V415
0x8f9: V448 = 0x20
0x8fb: V449 = ADD 0x20 V447
0x900: V450 = 0x20
0x902: V451 = 0x40
0x904: V452 = M[0x40]
0x907: V453 = SUB V449 V452
0x909: V454 = 0x0
0x90d: V455 = EXTCODESIZE V431
0x90e: V456 = ISZERO V455
0x910: V457 = ISZERO V456
0x911: V458 = 0x376
0x914: THROWI V457
---
Entry stack: [V415, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V431, 0x1d32ab99, V449, 0x20, V452, V453, V452, 0x0, V431, V456]
Exit stack: [V415, S5, S4, S3, S2, S1, S0, V431, 0x1d32ab99, V449, 0x20, V452, V453, V452, 0x0, V431, V456]

================================

Block 0x915
[0x915:0x923]
---
Predecessors: [0x841]
Successors: [0x924]
---
0x915 PUSH1 0x0
0x917 DUP1
0x918 REVERT
0x919 JUMPDEST
0x91a POP
0x91b GAS
0x91c CALL
0x91d ISZERO
0x91e DUP1
0x91f ISZERO
0x920 PUSH2 0x38a
0x923 JUMPI
---
0x915: V459 = 0x0
0x918: REVERT 0x0 0x0
0x919: JUMPDEST 
0x91b: V460 = GAS
0x91c: V461 = CALL V460 S1 S2 S3 S4 S5 S6
0x91d: V462 = ISZERO V461
0x91f: V463 = ISZERO V462
0x920: V464 = 0x38a
0x923: THROWI V463
---
Entry stack: [V415, S15, S14, S13, S12, S11, S10, V431, 0x1d32ab99, V449, 0x20, V452, V453, V452, 0x0, V431, V456]
Stack pops: 0
Stack additions: [V462]
Exit stack: []

================================

Block 0x924
[0x924:0x93e]
---
Predecessors: [0x915]
Successors: [0x93f]
---
0x924 RETURNDATASIZE
0x925 PUSH1 0x0
0x927 DUP1
0x928 RETURNDATACOPY
0x929 RETURNDATASIZE
0x92a PUSH1 0x0
0x92c REVERT
0x92d JUMPDEST
0x92e POP
0x92f POP
0x930 POP
0x931 POP
0x932 PUSH1 0x40
0x934 MLOAD
0x935 RETURNDATASIZE
0x936 PUSH1 0x20
0x938 DUP2
0x939 LT
0x93a ISZERO
0x93b PUSH2 0x3a0
0x93e JUMPI
---
0x924: V465 = RETURNDATASIZE
0x925: V466 = 0x0
0x928: RETURNDATACOPY 0x0 0x0 V465
0x929: V467 = RETURNDATASIZE
0x92a: V468 = 0x0
0x92c: REVERT 0x0 V467
0x92d: JUMPDEST 
0x932: V469 = 0x40
0x934: V470 = M[0x40]
0x935: V471 = RETURNDATASIZE
0x936: V472 = 0x20
0x939: V473 = LT V471 0x20
0x93a: V474 = ISZERO V473
0x93b: V475 = 0x3a0
0x93e: THROWI V474
---
Entry stack: [V462]
Stack pops: 0
Stack additions: [V471, V470]
Exit stack: []

================================

Block 0x93f
[0x93f:0xab3]
---
Predecessors: [0x924]
Successors: [0xeeb]
---
0x93f PUSH1 0x0
0x941 DUP1
0x942 REVERT
0x943 JUMPDEST
0x944 DUP2
0x945 ADD
0x946 SWAP1
0x947 DUP1
0x948 DUP1
0x949 MLOAD
0x94a SWAP1
0x94b PUSH1 0x20
0x94d ADD
0x94e SWAP1
0x94f SWAP3
0x950 SWAP2
0x951 SWAP1
0x952 POP
0x953 POP
0x954 POP
0x955 POP
0x956 PUSH2 0x417
0x959 PUSH2 0x3c9
0x95c PUSH1 0x5
0x95e DUP10
0x95f PUSH2 0xf04
0x962 SWAP1
0x963 SWAP2
0x964 SWAP1
0x965 PUSH4 0xffffffff
0x96a AND
0x96b JUMP
0x96c JUMPDEST
0x96d PUSH1 0x6
0x96f PUSH1 0x0
0x971 CALLER
0x972 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x987 AND
0x988 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99d AND
0x99e DUP2
0x99f MSTORE
0x9a0 PUSH1 0x20
0x9a2 ADD
0x9a3 SWAP1
0x9a4 DUP2
0x9a5 MSTORE
0x9a6 PUSH1 0x20
0x9a8 ADD
0x9a9 PUSH1 0x0
0x9ab SHA3
0x9ac SLOAD
0x9ad PUSH2 0xf3c
0x9b0 SWAP1
0x9b1 SWAP2
0x9b2 SWAP1
0x9b3 PUSH4 0xffffffff
0x9b8 AND
0x9b9 JUMP
0x9ba JUMPDEST
0x9bb PUSH1 0x6
0x9bd PUSH1 0x0
0x9bf CALLER
0x9c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d5 AND
0x9d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9eb AND
0x9ec DUP2
0x9ed MSTORE
0x9ee PUSH1 0x20
0x9f0 ADD
0x9f1 SWAP1
0x9f2 DUP2
0x9f3 MSTORE
0x9f4 PUSH1 0x20
0x9f6 ADD
0x9f7 PUSH1 0x0
0x9f9 SHA3
0x9fa DUP2
0x9fb SWAP1
0x9fc SSTORE
0x9fd POP
0x9fe PUSH2 0x511
0xa01 PUSH1 0x7
0xa03 PUSH1 0x0
0xa05 CALLER
0xa06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1b AND
0xa1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa31 AND
0xa32 DUP2
0xa33 MSTORE
0xa34 PUSH1 0x20
0xa36 ADD
0xa37 SWAP1
0xa38 DUP2
0xa39 MSTORE
0xa3a PUSH1 0x20
0xa3c ADD
0xa3d PUSH1 0x0
0xa3f SHA3
0xa40 SLOAD
0xa41 PUSH2 0x503
0xa44 PUSH1 0x64
0xa46 PUSH2 0x4f5
0xa49 PUSH1 0x1e
0xa4b PUSH1 0x6
0xa4d PUSH1 0x0
0xa4f CALLER
0xa50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa65 AND
0xa66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7b AND
0xa7c DUP2
0xa7d MSTORE
0xa7e PUSH1 0x20
0xa80 ADD
0xa81 SWAP1
0xa82 DUP2
0xa83 MSTORE
0xa84 PUSH1 0x20
0xa86 ADD
0xa87 PUSH1 0x0
0xa89 SHA3
0xa8a SLOAD
0xa8b PUSH2 0xf04
0xa8e SWAP1
0xa8f SWAP2
0xa90 SWAP1
0xa91 PUSH4 0xffffffff
0xa96 AND
0xa97 JUMP
0xa98 JUMPDEST
0xa99 PUSH2 0xf58
0xa9c SWAP1
0xa9d SWAP2
0xa9e SWAP1
0xa9f PUSH4 0xffffffff
0xaa4 AND
0xaa5 JUMP
0xaa6 JUMPDEST
0xaa7 PUSH2 0xeeb
0xaaa SWAP1
0xaab SWAP2
0xaac SWAP1
0xaad PUSH4 0xffffffff
0xab2 AND
0xab3 JUMP
---
0x93f: V476 = 0x0
0x942: REVERT 0x0 0x0
0x943: JUMPDEST 
0x945: V477 = ADD S1 S0
0x949: V478 = M[S1]
0x94b: V479 = 0x20
0x94d: V480 = ADD 0x20 S1
0x956: V481 = 0x417
0x959: V482 = 0x3c9
0x95c: V483 = 0x5
0x95f: V484 = 0xf04
0x965: V485 = 0xffffffff
0x96a: V486 = AND 0xffffffff 0xf04
0x96b: THROW 
0x96c: JUMPDEST 
0x96d: V487 = 0x6
0x96f: V488 = 0x0
0x971: V489 = CALLER
0x972: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x987: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x988: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x99d: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x99f: M[0x0] = V493
0x9a0: V494 = 0x20
0x9a2: V495 = ADD 0x20 0x0
0x9a5: M[0x20] = 0x6
0x9a6: V496 = 0x20
0x9a8: V497 = ADD 0x20 0x20
0x9a9: V498 = 0x0
0x9ab: V499 = SHA3 0x0 0x40
0x9ac: V500 = S[V499]
0x9ad: V501 = 0xf3c
0x9b3: V502 = 0xffffffff
0x9b8: V503 = AND 0xffffffff 0xf3c
0x9b9: THROW 
0x9ba: JUMPDEST 
0x9bb: V504 = 0x6
0x9bd: V505 = 0x0
0x9bf: V506 = CALLER
0x9c0: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d5: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x9d6: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x9eb: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x9ed: M[0x0] = V510
0x9ee: V511 = 0x20
0x9f0: V512 = ADD 0x20 0x0
0x9f3: M[0x20] = 0x6
0x9f4: V513 = 0x20
0x9f6: V514 = ADD 0x20 0x20
0x9f7: V515 = 0x0
0x9f9: V516 = SHA3 0x0 0x40
0x9fc: S[V516] = S0
0x9fe: V517 = 0x511
0xa01: V518 = 0x7
0xa03: V519 = 0x0
0xa05: V520 = CALLER
0xa06: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0xa1c: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0xa31: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0xa33: M[0x0] = V524
0xa34: V525 = 0x20
0xa36: V526 = ADD 0x20 0x0
0xa39: M[0x20] = 0x7
0xa3a: V527 = 0x20
0xa3c: V528 = ADD 0x20 0x20
0xa3d: V529 = 0x0
0xa3f: V530 = SHA3 0x0 0x40
0xa40: V531 = S[V530]
0xa41: V532 = 0x503
0xa44: V533 = 0x64
0xa46: V534 = 0x4f5
0xa49: V535 = 0x1e
0xa4b: V536 = 0x6
0xa4d: V537 = 0x0
0xa4f: V538 = CALLER
0xa50: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0xa65: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0xa66: V541 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7b: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V540
0xa7d: M[0x0] = V542
0xa7e: V543 = 0x20
0xa80: V544 = ADD 0x20 0x0
0xa83: M[0x20] = 0x6
0xa84: V545 = 0x20
0xa86: V546 = ADD 0x20 0x20
0xa87: V547 = 0x0
0xa89: V548 = SHA3 0x0 0x40
0xa8a: V549 = S[V548]
0xa8b: V550 = 0xf04
0xa91: V551 = 0xffffffff
0xa96: V552 = AND 0xffffffff 0xf04
0xa97: THROW 
0xa98: JUMPDEST 
0xa99: V553 = 0xf58
0xa9f: V554 = 0xffffffff
0xaa4: V555 = AND 0xffffffff 0xf58
0xaa5: THROW 
0xaa6: JUMPDEST 
0xaa7: V556 = 0xeeb
0xaad: V557 = 0xffffffff
0xab2: V558 = AND 0xffffffff 0xeeb
0xab3: JUMP 0xeeb
---
Entry stack: [V470, V471]
Stack pops: 0
Stack additions: [0x5, S8, 0x3c9, 0x417, S2, S3, S4, S5, S6, S7, S8, S0, V500, 0x1e, V549, 0x4f5, 0x64, 0x503, V531, 0x511, S1, S0, S1, S0]
Exit stack: []

================================

Block 0xab4
[0xab4:0xc0b]
---
Predecessors: []
Successors: [0xc0c]
---
0xab4 JUMPDEST
0xab5 SWAP6
0xab6 POP
0xab7 PUSH2 0x565
0xaba DUP7
0xabb PUSH1 0x7
0xabd PUSH1 0x0
0xabf CALLER
0xac0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad5 AND
0xad6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaeb AND
0xaec DUP2
0xaed MSTORE
0xaee PUSH1 0x20
0xaf0 ADD
0xaf1 SWAP1
0xaf2 DUP2
0xaf3 MSTORE
0xaf4 PUSH1 0x20
0xaf6 ADD
0xaf7 PUSH1 0x0
0xaf9 SHA3
0xafa SLOAD
0xafb PUSH2 0xf3c
0xafe SWAP1
0xaff SWAP2
0xb00 SWAP1
0xb01 PUSH4 0xffffffff
0xb06 AND
0xb07 JUMP
0xb08 JUMPDEST
0xb09 PUSH1 0x7
0xb0b PUSH1 0x0
0xb0d CALLER
0xb0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb23 AND
0xb24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb39 AND
0xb3a DUP2
0xb3b MSTORE
0xb3c PUSH1 0x20
0xb3e ADD
0xb3f SWAP1
0xb40 DUP2
0xb41 MSTORE
0xb42 PUSH1 0x20
0xb44 ADD
0xb45 PUSH1 0x0
0xb47 SHA3
0xb48 DUP2
0xb49 SWAP1
0xb4a SSTORE
0xb4b POP
0xb4c PUSH1 0x3
0xb4e PUSH1 0x0
0xb50 SWAP1
0xb51 SLOAD
0xb52 SWAP1
0xb53 PUSH2 0x100
0xb56 EXP
0xb57 SWAP1
0xb58 DIV
0xb59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6e AND
0xb6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb84 AND
0xb85 PUSH4 0xa9059cbb
0xb8a CALLER
0xb8b DUP9
0xb8c PUSH1 0x40
0xb8e MLOAD
0xb8f DUP4
0xb90 PUSH4 0xffffffff
0xb95 AND
0xb96 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbb4 MUL
0xbb5 DUP2
0xbb6 MSTORE
0xbb7 PUSH1 0x4
0xbb9 ADD
0xbba DUP1
0xbbb DUP4
0xbbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd1 AND
0xbd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe7 AND
0xbe8 DUP2
0xbe9 MSTORE
0xbea PUSH1 0x20
0xbec ADD
0xbed DUP3
0xbee DUP2
0xbef MSTORE
0xbf0 PUSH1 0x20
0xbf2 ADD
0xbf3 SWAP3
0xbf4 POP
0xbf5 POP
0xbf6 POP
0xbf7 PUSH1 0x20
0xbf9 PUSH1 0x40
0xbfb MLOAD
0xbfc DUP1
0xbfd DUP4
0xbfe SUB
0xbff DUP2
0xc00 PUSH1 0x0
0xc02 DUP8
0xc03 DUP1
0xc04 EXTCODESIZE
0xc05 ISZERO
0xc06 DUP1
0xc07 ISZERO
0xc08 PUSH2 0x66d
0xc0b JUMPI
---
0xab4: JUMPDEST 
0xab7: V559 = 0x565
0xabb: V560 = 0x7
0xabd: V561 = 0x0
0xabf: V562 = CALLER
0xac0: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0xad5: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0xad6: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0xaeb: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0xaed: M[0x0] = V566
0xaee: V567 = 0x20
0xaf0: V568 = ADD 0x20 0x0
0xaf3: M[0x20] = 0x7
0xaf4: V569 = 0x20
0xaf6: V570 = ADD 0x20 0x20
0xaf7: V571 = 0x0
0xaf9: V572 = SHA3 0x0 0x40
0xafa: V573 = S[V572]
0xafb: V574 = 0xf3c
0xb01: V575 = 0xffffffff
0xb06: V576 = AND 0xffffffff 0xf3c
0xb07: THROW 
0xb08: JUMPDEST 
0xb09: V577 = 0x7
0xb0b: V578 = 0x0
0xb0d: V579 = CALLER
0xb0e: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0xb23: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0xb24: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0xb39: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0xb3b: M[0x0] = V583
0xb3c: V584 = 0x20
0xb3e: V585 = ADD 0x20 0x0
0xb41: M[0x20] = 0x7
0xb42: V586 = 0x20
0xb44: V587 = ADD 0x20 0x20
0xb45: V588 = 0x0
0xb47: V589 = SHA3 0x0 0x40
0xb4a: S[V589] = S0
0xb4c: V590 = 0x3
0xb4e: V591 = 0x0
0xb51: V592 = S[0x3]
0xb53: V593 = 0x100
0xb56: V594 = EXP 0x100 0x0
0xb58: V595 = DIV V592 0x1
0xb59: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6e: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0xb6f: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0xb84: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0xb85: V600 = 0xa9059cbb
0xb8a: V601 = CALLER
0xb8c: V602 = 0x40
0xb8e: V603 = M[0x40]
0xb90: V604 = 0xffffffff
0xb95: V605 = AND 0xffffffff 0xa9059cbb
0xb96: V606 = 0x100000000000000000000000000000000000000000000000000000000
0xbb4: V607 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xbb6: M[V603] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbb7: V608 = 0x4
0xbb9: V609 = ADD 0x4 V603
0xbbc: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd1: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0xbd2: V612 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe7: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0xbe9: M[V609] = V613
0xbea: V614 = 0x20
0xbec: V615 = ADD 0x20 V609
0xbef: M[V615] = S6
0xbf0: V616 = 0x20
0xbf2: V617 = ADD 0x20 V615
0xbf7: V618 = 0x20
0xbf9: V619 = 0x40
0xbfb: V620 = M[0x40]
0xbfe: V621 = SUB V617 V620
0xc00: V622 = 0x0
0xc04: V623 = EXTCODESIZE V599
0xc05: V624 = ISZERO V623
0xc07: V625 = ISZERO V624
0xc08: V626 = 0x66d
0xc0b: THROWI V625
---
Entry stack: []
Stack pops: 7
Stack additions: [S0, S5, V624, V599, 0x0, V620, V621, V620, 0x20, V617, 0xa9059cbb, V599, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xc0c
[0xc0c:0xc1a]
---
Predecessors: [0xab4]
Successors: [0xc1b]
---
0xc0c PUSH1 0x0
0xc0e DUP1
0xc0f REVERT
0xc10 JUMPDEST
0xc11 POP
0xc12 GAS
0xc13 CALL
0xc14 ISZERO
0xc15 DUP1
0xc16 ISZERO
0xc17 PUSH2 0x681
0xc1a JUMPI
---
0xc0c: V627 = 0x0
0xc0f: REVERT 0x0 0x0
0xc10: JUMPDEST 
0xc12: V628 = GAS
0xc13: V629 = CALL V628 S1 S2 S3 S4 S5 S6
0xc14: V630 = ISZERO V629
0xc16: V631 = ISZERO V630
0xc17: V632 = 0x681
0xc1a: THROWI V631
---
Entry stack: [S15, S14, S13, S12, S11, S10, V599, 0xa9059cbb, V617, 0x20, V620, V621, V620, 0x0, V599, V624]
Stack pops: 0
Stack additions: [V630]
Exit stack: []

================================

Block 0xc1b
[0xc1b:0xc35]
---
Predecessors: [0xc0c]
Successors: [0xc36]
---
0xc1b RETURNDATASIZE
0xc1c PUSH1 0x0
0xc1e DUP1
0xc1f RETURNDATACOPY
0xc20 RETURNDATASIZE
0xc21 PUSH1 0x0
0xc23 REVERT
0xc24 JUMPDEST
0xc25 POP
0xc26 POP
0xc27 POP
0xc28 POP
0xc29 PUSH1 0x40
0xc2b MLOAD
0xc2c RETURNDATASIZE
0xc2d PUSH1 0x20
0xc2f DUP2
0xc30 LT
0xc31 ISZERO
0xc32 PUSH2 0x697
0xc35 JUMPI
---
0xc1b: V633 = RETURNDATASIZE
0xc1c: V634 = 0x0
0xc1f: RETURNDATACOPY 0x0 0x0 V633
0xc20: V635 = RETURNDATASIZE
0xc21: V636 = 0x0
0xc23: REVERT 0x0 V635
0xc24: JUMPDEST 
0xc29: V637 = 0x40
0xc2b: V638 = M[0x40]
0xc2c: V639 = RETURNDATASIZE
0xc2d: V640 = 0x20
0xc30: V641 = LT V639 0x20
0xc31: V642 = ISZERO V641
0xc32: V643 = 0x697
0xc35: THROWI V642
---
Entry stack: [V630]
Stack pops: 0
Stack additions: [V639, V638]
Exit stack: []

================================

Block 0xc36
[0xc36:0xc4c]
---
Predecessors: [0xc1b]
Successors: [0xc4d]
---
0xc36 PUSH1 0x0
0xc38 DUP1
0xc39 REVERT
0xc3a JUMPDEST
0xc3b DUP2
0xc3c ADD
0xc3d SWAP1
0xc3e DUP1
0xc3f DUP1
0xc40 MLOAD
0xc41 SWAP1
0xc42 PUSH1 0x20
0xc44 ADD
0xc45 SWAP1
0xc46 SWAP3
0xc47 SWAP2
0xc48 SWAP1
0xc49 POP
0xc4a POP
0xc4b POP
0xc4c POP
---
0xc36: V644 = 0x0
0xc39: REVERT 0x0 0x0
0xc3a: JUMPDEST 
0xc3c: V645 = ADD S1 S0
0xc40: V646 = M[S1]
0xc42: V647 = 0x20
0xc44: V648 = ADD 0x20 S1
---
Entry stack: [V638, V639]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc4d
[0xc4d:0xc96]
---
Predecessors: [0xc36]
Successors: [0xc97]
---
0xc4d JUMPDEST
0xc4e PUSH1 0x0
0xc50 PUSH1 0x6
0xc52 PUSH1 0x0
0xc54 CALLER
0xc55 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6a AND
0xc6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc80 AND
0xc81 DUP2
0xc82 MSTORE
0xc83 PUSH1 0x20
0xc85 ADD
0xc86 SWAP1
0xc87 DUP2
0xc88 MSTORE
0xc89 PUSH1 0x20
0xc8b ADD
0xc8c PUSH1 0x0
0xc8e SHA3
0xc8f SLOAD
0xc90 GT
0xc91 ISZERO
0xc92 ISZERO
0xc93 PUSH2 0x761
0xc96 JUMPI
---
0xc4d: JUMPDEST 
0xc4e: V649 = 0x0
0xc50: V650 = 0x6
0xc52: V651 = 0x0
0xc54: V652 = CALLER
0xc55: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6a: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0xc6b: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0xc80: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0xc82: M[0x0] = V656
0xc83: V657 = 0x20
0xc85: V658 = ADD 0x20 0x0
0xc88: M[0x20] = 0x6
0xc89: V659 = 0x20
0xc8b: V660 = ADD 0x20 0x20
0xc8c: V661 = 0x0
0xc8e: V662 = SHA3 0x0 0x40
0xc8f: V663 = S[V662]
0xc90: V664 = GT V663 0x0
0xc91: V665 = ISZERO V664
0xc92: V666 = ISZERO V665
0xc93: V667 = 0x761
0xc96: THROWI V666
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc97
[0xc97:0xd0e]
---
Predecessors: [0xc4d]
Successors: [0xd0f]
---
0xc97 PUSH1 0x40
0xc99 MLOAD
0xc9a PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcbb DUP2
0xcbc MSTORE
0xcbd PUSH1 0x4
0xcbf ADD
0xcc0 DUP1
0xcc1 DUP1
0xcc2 PUSH1 0x20
0xcc4 ADD
0xcc5 DUP3
0xcc6 DUP2
0xcc7 SUB
0xcc8 DUP3
0xcc9 MSTORE
0xcca PUSH1 0x1a
0xccc DUP2
0xccd MSTORE
0xcce PUSH1 0x20
0xcd0 ADD
0xcd1 DUP1
0xcd2 PUSH32 0x7872615f616d6f756e745b6d73672e73656e6465725d203e2030000000000000
0xcf3 DUP2
0xcf4 MSTORE
0xcf5 POP
0xcf6 PUSH1 0x20
0xcf8 ADD
0xcf9 SWAP2
0xcfa POP
0xcfb POP
0xcfc PUSH1 0x40
0xcfe MLOAD
0xcff DUP1
0xd00 SWAP2
0xd01 SUB
0xd02 SWAP1
0xd03 REVERT
0xd04 JUMPDEST
0xd05 PUSH1 0x4
0xd07 SLOAD
0xd08 TIMESTAMP
0xd09 GT
0xd0a ISZERO
0xd0b PUSH2 0xb76
0xd0e JUMPI
---
0xc97: V668 = 0x40
0xc99: V669 = M[0x40]
0xc9a: V670 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcbc: M[V669] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcbd: V671 = 0x4
0xcbf: V672 = ADD 0x4 V669
0xcc2: V673 = 0x20
0xcc4: V674 = ADD 0x20 V672
0xcc7: V675 = SUB V674 V672
0xcc9: M[V672] = V675
0xcca: V676 = 0x1a
0xccd: M[V674] = 0x1a
0xcce: V677 = 0x20
0xcd0: V678 = ADD 0x20 V674
0xcd2: V679 = 0x7872615f616d6f756e745b6d73672e73656e6465725d203e2030000000000000
0xcf4: M[V678] = 0x7872615f616d6f756e745b6d73672e73656e6465725d203e2030000000000000
0xcf6: V680 = 0x20
0xcf8: V681 = ADD 0x20 V678
0xcfc: V682 = 0x40
0xcfe: V683 = M[0x40]
0xd01: V684 = SUB V681 V683
0xd03: REVERT V683 V684
0xd04: JUMPDEST 
0xd05: V685 = 0x4
0xd07: V686 = S[0x4]
0xd08: V687 = TIMESTAMP
0xd09: V688 = GT V687 V686
0xd0a: V689 = ISZERO V688
0xd0b: V690 = 0xb76
0xd0e: THROWI V689
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd0f
[0xd0f:0xd24]
---
Predecessors: [0xc97]
Successors: [0xeeb]
---
0xd0f PUSH2 0x782
0xd12 PUSH1 0x4
0xd14 SLOAD
0xd15 PUSH1 0x5
0xd17 SLOAD
0xd18 PUSH2 0xeeb
0xd1b SWAP1
0xd1c SWAP2
0xd1d SWAP1
0xd1e PUSH4 0xffffffff
0xd23 AND
0xd24 JUMP
---
0xd0f: V691 = 0x782
0xd12: V692 = 0x4
0xd14: V693 = S[0x4]
0xd15: V694 = 0x5
0xd17: V695 = S[0x5]
0xd18: V696 = 0xeeb
0xd1e: V697 = 0xffffffff
0xd23: V698 = AND 0xffffffff 0xeeb
0xd24: JUMP 0xeeb
---
Entry stack: []
Stack pops: 0
Stack additions: [0x782, V695, V693]
Exit stack: [0x782, V695, V693]

================================

Block 0xd25
[0xd25:0xd3b]
---
Predecessors: []
Successors: [0xeeb]
---
0xd25 JUMPDEST
0xd26 SWAP5
0xd27 POP
0xd28 PUSH2 0x799
0xd2b PUSH1 0x4
0xd2d SLOAD
0xd2e TIMESTAMP
0xd2f PUSH2 0xeeb
0xd32 SWAP1
0xd33 SWAP2
0xd34 SWAP1
0xd35 PUSH4 0xffffffff
0xd3a AND
0xd3b JUMP
---
0xd25: JUMPDEST 
0xd28: V699 = 0x799
0xd2b: V700 = 0x4
0xd2d: V701 = S[0x4]
0xd2e: V702 = TIMESTAMP
0xd2f: V703 = 0xeeb
0xd35: V704 = 0xffffffff
0xd3a: V705 = AND 0xffffffff 0xeeb
0xd3b: JUMP 0xeeb
---
Entry stack: []
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1, 0x799, V702, V701]
Exit stack: [S0, S4, S3, S2, S1, 0x799, V702, V701]

================================

Block 0xd3c
[0xd3c:0xd4c]
---
Predecessors: []
Successors: [0xd4d]
---
0xd3c JUMPDEST
0xd3d SWAP4
0xd3e POP
0xd3f PUSH1 0x0
0xd41 SWAP3
0xd42 POP
0xd43 PUSH1 0x5
0xd45 SLOAD
0xd46 TIMESTAMP
0xd47 GT
0xd48 ISZERO
0xd49 PUSH2 0x7b9
0xd4c JUMPI
---
0xd3c: JUMPDEST 
0xd3f: V706 = 0x0
0xd43: V707 = 0x5
0xd45: V708 = S[0x5]
0xd46: V709 = TIMESTAMP
0xd47: V710 = GT V709 V708
0xd48: V711 = ISZERO V710
0xd49: V712 = 0x7b9
0xd4c: THROWI V711
---
Entry stack: []
Stack pops: 5
Stack additions: [S0, 0x0, S2, S1]
Exit stack: [S0, 0x0, S2, S1]

================================

Block 0xd4d
[0xd4d:0xd8b]
---
Predecessors: [0xd3c]
Successors: [0xd8c]
---
0xd4d PUSH8 0xde0b6b3a7640000
0xd56 SWAP3
0xd57 POP
0xd58 PUSH2 0x7e9
0xd5b JUMP
0xd5c JUMPDEST
0xd5d PUSH2 0x7e6
0xd60 DUP6
0xd61 PUSH2 0x7d8
0xd64 PUSH8 0xde0b6b3a7640000
0xd6d DUP8
0xd6e PUSH2 0xf04
0xd71 SWAP1
0xd72 SWAP2
0xd73 SWAP1
0xd74 PUSH4 0xffffffff
0xd79 AND
0xd7a JUMP
0xd7b JUMPDEST
0xd7c PUSH2 0xf58
0xd7f SWAP1
0xd80 SWAP2
0xd81 SWAP1
0xd82 PUSH4 0xffffffff
0xd87 AND
0xd88 JUMP
0xd89 JUMPDEST
0xd8a SWAP3
0xd8b POP
---
0xd4d: V713 = 0xde0b6b3a7640000
0xd58: V714 = 0x7e9
0xd5b: THROW 
0xd5c: JUMPDEST 
0xd5d: V715 = 0x7e6
0xd61: V716 = 0x7d8
0xd64: V717 = 0xde0b6b3a7640000
0xd6e: V718 = 0xf04
0xd74: V719 = 0xffffffff
0xd79: V720 = AND 0xffffffff 0xf04
0xd7a: THROW 
0xd7b: JUMPDEST 
0xd7c: V721 = 0xf58
0xd82: V722 = 0xffffffff
0xd87: V723 = AND 0xffffffff 0xf58
0xd88: THROW 
0xd89: JUMPDEST 
---
Entry stack: [S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [0xde0b6b3a7640000, S3, 0x7d8, S4, 0x7e6, S0, S1, S2, S0]
Exit stack: []

================================

Block 0xd8c
[0xd8c:0xeea]
---
Predecessors: [0xd4d]
Successors: []
---
0xd8c JUMPDEST
0xd8d PUSH2 0x85d
0xd90 PUSH8 0xde0b6b3a7640000
0xd99 PUSH2 0x84f
0xd9c PUSH8 0x429d069189e0000
0xda5 PUSH1 0x6
0xda7 PUSH1 0x0
0xda9 CALLER
0xdaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdbf AND
0xdc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd5 AND
0xdd6 DUP2
0xdd7 MSTORE
0xdd8 PUSH1 0x20
0xdda ADD
0xddb SWAP1
0xddc DUP2
0xddd MSTORE
0xdde PUSH1 0x20
0xde0 ADD
0xde1 PUSH1 0x0
0xde3 SHA3
0xde4 SLOAD
0xde5 PUSH2 0xf04
0xde8 SWAP1
0xde9 SWAP2
0xdea SWAP1
0xdeb PUSH4 0xffffffff
0xdf0 AND
0xdf1 JUMP
0xdf2 JUMPDEST
0xdf3 PUSH2 0xf58
0xdf6 SWAP1
0xdf7 SWAP2
0xdf8 SWAP1
0xdf9 PUSH4 0xffffffff
0xdfe AND
0xdff JUMP
0xe00 JUMPDEST
0xe01 SWAP2
0xe02 POP
0xe03 PUSH2 0x8d3
0xe06 PUSH8 0xde0b6b3a7640000
0xe0f PUSH2 0x8c5
0xe12 PUSH8 0x9b6e64a8ec60000
0xe1b PUSH1 0x6
0xe1d PUSH1 0x0
0xe1f CALLER
0xe20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe35 AND
0xe36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4b AND
0xe4c DUP2
0xe4d MSTORE
0xe4e PUSH1 0x20
0xe50 ADD
0xe51 SWAP1
0xe52 DUP2
0xe53 MSTORE
0xe54 PUSH1 0x20
0xe56 ADD
0xe57 PUSH1 0x0
0xe59 SHA3
0xe5a SLOAD
0xe5b PUSH2 0xf04
0xe5e SWAP1
0xe5f SWAP2
0xe60 SWAP1
0xe61 PUSH4 0xffffffff
0xe66 AND
0xe67 JUMP
0xe68 JUMPDEST
0xe69 PUSH2 0xf58
0xe6c SWAP1
0xe6d SWAP2
0xe6e SWAP1
0xe6f PUSH4 0xffffffff
0xe74 AND
0xe75 JUMP
0xe76 JUMPDEST
0xe77 SWAP1
0xe78 POP
0xe79 PUSH2 0x965
0xe7c PUSH1 0x7
0xe7e PUSH1 0x0
0xe80 CALLER
0xe81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe96 AND
0xe97 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeac AND
0xead DUP2
0xeae MSTORE
0xeaf PUSH1 0x20
0xeb1 ADD
0xeb2 SWAP1
0xeb3 DUP2
0xeb4 MSTORE
0xeb5 PUSH1 0x20
0xeb7 ADD
0xeb8 PUSH1 0x0
0xeba SHA3
0xebb SLOAD
0xebc PUSH2 0x957
0xebf PUSH2 0x948
0xec2 PUSH8 0xde0b6b3a7640000
0xecb PUSH2 0x93a
0xece DUP9
0xecf DUP8
0xed0 PUSH2 0xf04
0xed3 SWAP1
0xed4 SWAP2
0xed5 SWAP1
0xed6 PUSH4 0xffffffff
0xedb AND
0xedc JUMP
0xedd JUMPDEST
0xede PUSH2 0xf58
0xee1 SWAP1
0xee2 SWAP2
0xee3 SWAP1
0xee4 PUSH4 0xffffffff
0xee9 AND
0xeea JUMP
---
0xd8c: JUMPDEST 
0xd8d: V724 = 0x85d
0xd90: V725 = 0xde0b6b3a7640000
0xd99: V726 = 0x84f
0xd9c: V727 = 0x429d069189e0000
0xda5: V728 = 0x6
0xda7: V729 = 0x0
0xda9: V730 = CALLER
0xdaa: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0xdbf: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0xdc0: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd5: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0xdd7: M[0x0] = V734
0xdd8: V735 = 0x20
0xdda: V736 = ADD 0x20 0x0
0xddd: M[0x20] = 0x6
0xdde: V737 = 0x20
0xde0: V738 = ADD 0x20 0x20
0xde1: V739 = 0x0
0xde3: V740 = SHA3 0x0 0x40
0xde4: V741 = S[V740]
0xde5: V742 = 0xf04
0xdeb: V743 = 0xffffffff
0xdf0: V744 = AND 0xffffffff 0xf04
0xdf1: THROW 
0xdf2: JUMPDEST 
0xdf3: V745 = 0xf58
0xdf9: V746 = 0xffffffff
0xdfe: V747 = AND 0xffffffff 0xf58
0xdff: THROW 
0xe00: JUMPDEST 
0xe03: V748 = 0x8d3
0xe06: V749 = 0xde0b6b3a7640000
0xe0f: V750 = 0x8c5
0xe12: V751 = 0x9b6e64a8ec60000
0xe1b: V752 = 0x6
0xe1d: V753 = 0x0
0xe1f: V754 = CALLER
0xe20: V755 = 0xffffffffffffffffffffffffffffffffffffffff
0xe35: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0xe36: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4b: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xe4d: M[0x0] = V758
0xe4e: V759 = 0x20
0xe50: V760 = ADD 0x20 0x0
0xe53: M[0x20] = 0x6
0xe54: V761 = 0x20
0xe56: V762 = ADD 0x20 0x20
0xe57: V763 = 0x0
0xe59: V764 = SHA3 0x0 0x40
0xe5a: V765 = S[V764]
0xe5b: V766 = 0xf04
0xe61: V767 = 0xffffffff
0xe66: V768 = AND 0xffffffff 0xf04
0xe67: THROW 
0xe68: JUMPDEST 
0xe69: V769 = 0xf58
0xe6f: V770 = 0xffffffff
0xe74: V771 = AND 0xffffffff 0xf58
0xe75: THROW 
0xe76: JUMPDEST 
0xe79: V772 = 0x965
0xe7c: V773 = 0x7
0xe7e: V774 = 0x0
0xe80: V775 = CALLER
0xe81: V776 = 0xffffffffffffffffffffffffffffffffffffffff
0xe96: V777 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0xe97: V778 = 0xffffffffffffffffffffffffffffffffffffffff
0xeac: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0xeae: M[0x0] = V779
0xeaf: V780 = 0x20
0xeb1: V781 = ADD 0x20 0x0
0xeb4: M[0x20] = 0x7
0xeb5: V782 = 0x20
0xeb7: V783 = ADD 0x20 0x20
0xeb8: V784 = 0x0
0xeba: V785 = SHA3 0x0 0x40
0xebb: V786 = S[V785]
0xebc: V787 = 0x957
0xebf: V788 = 0x948
0xec2: V789 = 0xde0b6b3a7640000
0xecb: V790 = 0x93a
0xed0: V791 = 0xf04
0xed6: V792 = 0xffffffff
0xedb: V793 = AND 0xffffffff 0xf04
0xedc: THROW 
0xedd: JUMPDEST 
0xede: V794 = 0xf58
0xee4: V795 = 0xffffffff
0xee9: V796 = AND 0xffffffff 0xf58
0xeea: THROW 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [0x85d, 0xde0b6b3a7640000, 0x84f, V741, 0x429d069189e0000, S1, S0, 0x9b6e64a8ec60000, V765, 0x8c5, 0xde0b6b3a7640000, 0x8d3, S1, S0, S1, S0, S3, S0, 0x93a, 0xde0b6b3a7640000, 0x948, 0x957, V786, 0x965, S0, S2, S3, S1, S0]
Exit stack: []

================================

Block 0xeeb
[0xeeb:0xf07]
---
Predecessors: [0x6ab, 0x93f, 0xd0f, 0xd25, 0xeeb]
Successors: [0xeeb]
---
0xeeb JUMPDEST
0xeec DUP6
0xeed PUSH2 0xf3c
0xef0 SWAP1
0xef1 SWAP2
0xef2 SWAP1
0xef3 PUSH4 0xffffffff
0xef8 AND
0xef9 JUMP
0xefa JUMPDEST
0xefb PUSH2 0xeeb
0xefe SWAP1
0xeff SWAP2
0xf00 SWAP1
0xf01 PUSH4 0xffffffff
0xf06 AND
0xf07 JUMP
---
0xeeb: JUMPDEST 
0xeed: V797 = 0xf3c
0xef3: V798 = 0xffffffff
0xef8: V799 = AND 0xffffffff 0xf3c
0xef9: THROW 
0xefa: JUMPDEST 
0xefb: V800 = 0xeeb
0xf01: V801 = 0xffffffff
0xf06: V802 = AND 0xffffffff 0xeeb
0xf07: JUMP 0xeeb
---
Entry stack: [S7, S6, S5, S4, S3, {0x18d, 0x782, 0x799}, S1, S0]
Stack pops: 6
Stack additions: [S5, S1, S0]
Exit stack: []

================================

Block 0xf08
[0xf08:0xfa9]
---
Predecessors: []
Successors: [0xfaa]
---
0xf08 JUMPDEST
0xf09 SWAP6
0xf0a POP
0xf0b PUSH2 0x9b9
0xf0e DUP7
0xf0f PUSH1 0x7
0xf11 PUSH1 0x0
0xf13 CALLER
0xf14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf29 AND
0xf2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3f AND
0xf40 DUP2
0xf41 MSTORE
0xf42 PUSH1 0x20
0xf44 ADD
0xf45 SWAP1
0xf46 DUP2
0xf47 MSTORE
0xf48 PUSH1 0x20
0xf4a ADD
0xf4b PUSH1 0x0
0xf4d SHA3
0xf4e SLOAD
0xf4f PUSH2 0xf3c
0xf52 SWAP1
0xf53 SWAP2
0xf54 SWAP1
0xf55 PUSH4 0xffffffff
0xf5a AND
0xf5b JUMP
0xf5c JUMPDEST
0xf5d PUSH1 0x7
0xf5f PUSH1 0x0
0xf61 CALLER
0xf62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf77 AND
0xf78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8d AND
0xf8e DUP2
0xf8f MSTORE
0xf90 PUSH1 0x20
0xf92 ADD
0xf93 SWAP1
0xf94 DUP2
0xf95 MSTORE
0xf96 PUSH1 0x20
0xf98 ADD
0xf99 PUSH1 0x0
0xf9b SHA3
0xf9c DUP2
0xf9d SWAP1
0xf9e SSTORE
0xf9f POP
0xfa0 PUSH1 0x0
0xfa2 DUP7
0xfa3 GT
0xfa4 ISZERO
0xfa5 ISZERO
0xfa6 PUSH2 0xa74
0xfa9 JUMPI
---
0xf08: JUMPDEST 
0xf0b: V803 = 0x9b9
0xf0f: V804 = 0x7
0xf11: V805 = 0x0
0xf13: V806 = CALLER
0xf14: V807 = 0xffffffffffffffffffffffffffffffffffffffff
0xf29: V808 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0xf2a: V809 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3f: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V808
0xf41: M[0x0] = V810
0xf42: V811 = 0x20
0xf44: V812 = ADD 0x20 0x0
0xf47: M[0x20] = 0x7
0xf48: V813 = 0x20
0xf4a: V814 = ADD 0x20 0x20
0xf4b: V815 = 0x0
0xf4d: V816 = SHA3 0x0 0x40
0xf4e: V817 = S[V816]
0xf4f: V818 = 0xf3c
0xf55: V819 = 0xffffffff
0xf5a: V820 = AND 0xffffffff 0xf3c
0xf5b: THROW 
0xf5c: JUMPDEST 
0xf5d: V821 = 0x7
0xf5f: V822 = 0x0
0xf61: V823 = CALLER
0xf62: V824 = 0xffffffffffffffffffffffffffffffffffffffff
0xf77: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff V823
0xf78: V826 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8d: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0xf8f: M[0x0] = V827
0xf90: V828 = 0x20
0xf92: V829 = ADD 0x20 0x0
0xf95: M[0x20] = 0x7
0xf96: V830 = 0x20
0xf98: V831 = ADD 0x20 0x20
0xf99: V832 = 0x0
0xf9b: V833 = SHA3 0x0 0x40
0xf9e: S[V833] = S0
0xfa0: V834 = 0x0
0xfa3: V835 = GT S6 0x0
0xfa4: V836 = ISZERO V835
0xfa5: V837 = ISZERO V836
0xfa6: V838 = 0xa74
0xfa9: THROWI V837
---
Entry stack: []
Stack pops: 7
Stack additions: [S0, S5, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xfaa
[0xfaa:0x10d7]
---
Predecessors: [0xf08]
Successors: [0x10d8]
---
0xfaa PUSH1 0x40
0xfac MLOAD
0xfad PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfce DUP2
0xfcf MSTORE
0xfd0 PUSH1 0x4
0xfd2 ADD
0xfd3 DUP1
0xfd4 DUP1
0xfd5 PUSH1 0x20
0xfd7 ADD
0xfd8 DUP3
0xfd9 DUP2
0xfda SUB
0xfdb DUP3
0xfdc MSTORE
0xfdd PUSH1 0xd
0xfdf DUP2
0xfe0 MSTORE
0xfe1 PUSH1 0x20
0xfe3 ADD
0xfe4 DUP1
0xfe5 PUSH32 0x746b6e546f53656e64203e203000000000000000000000000000000000000000
0x1006 DUP2
0x1007 MSTORE
0x1008 POP
0x1009 PUSH1 0x20
0x100b ADD
0x100c SWAP2
0x100d POP
0x100e POP
0x100f PUSH1 0x40
0x1011 MLOAD
0x1012 DUP1
0x1013 SWAP2
0x1014 SUB
0x1015 SWAP1
0x1016 REVERT
0x1017 JUMPDEST
0x1018 PUSH1 0x3
0x101a PUSH1 0x0
0x101c SWAP1
0x101d SLOAD
0x101e SWAP1
0x101f PUSH2 0x100
0x1022 EXP
0x1023 SWAP1
0x1024 DIV
0x1025 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103a AND
0x103b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1050 AND
0x1051 PUSH4 0xa9059cbb
0x1056 CALLER
0x1057 DUP9
0x1058 PUSH1 0x40
0x105a MLOAD
0x105b DUP4
0x105c PUSH4 0xffffffff
0x1061 AND
0x1062 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1080 MUL
0x1081 DUP2
0x1082 MSTORE
0x1083 PUSH1 0x4
0x1085 ADD
0x1086 DUP1
0x1087 DUP4
0x1088 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109d AND
0x109e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b3 AND
0x10b4 DUP2
0x10b5 MSTORE
0x10b6 PUSH1 0x20
0x10b8 ADD
0x10b9 DUP3
0x10ba DUP2
0x10bb MSTORE
0x10bc PUSH1 0x20
0x10be ADD
0x10bf SWAP3
0x10c0 POP
0x10c1 POP
0x10c2 POP
0x10c3 PUSH1 0x20
0x10c5 PUSH1 0x40
0x10c7 MLOAD
0x10c8 DUP1
0x10c9 DUP4
0x10ca SUB
0x10cb DUP2
0x10cc PUSH1 0x0
0x10ce DUP8
0x10cf DUP1
0x10d0 EXTCODESIZE
0x10d1 ISZERO
0x10d2 DUP1
0x10d3 ISZERO
0x10d4 PUSH2 0xb39
0x10d7 JUMPI
---
0xfaa: V839 = 0x40
0xfac: V840 = M[0x40]
0xfad: V841 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfcf: M[V840] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfd0: V842 = 0x4
0xfd2: V843 = ADD 0x4 V840
0xfd5: V844 = 0x20
0xfd7: V845 = ADD 0x20 V843
0xfda: V846 = SUB V845 V843
0xfdc: M[V843] = V846
0xfdd: V847 = 0xd
0xfe0: M[V845] = 0xd
0xfe1: V848 = 0x20
0xfe3: V849 = ADD 0x20 V845
0xfe5: V850 = 0x746b6e546f53656e64203e203000000000000000000000000000000000000000
0x1007: M[V849] = 0x746b6e546f53656e64203e203000000000000000000000000000000000000000
0x1009: V851 = 0x20
0x100b: V852 = ADD 0x20 V849
0x100f: V853 = 0x40
0x1011: V854 = M[0x40]
0x1014: V855 = SUB V852 V854
0x1016: REVERT V854 V855
0x1017: JUMPDEST 
0x1018: V856 = 0x3
0x101a: V857 = 0x0
0x101d: V858 = S[0x3]
0x101f: V859 = 0x100
0x1022: V860 = EXP 0x100 0x0
0x1024: V861 = DIV V858 0x1
0x1025: V862 = 0xffffffffffffffffffffffffffffffffffffffff
0x103a: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0x103b: V864 = 0xffffffffffffffffffffffffffffffffffffffff
0x1050: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V863
0x1051: V866 = 0xa9059cbb
0x1056: V867 = CALLER
0x1058: V868 = 0x40
0x105a: V869 = M[0x40]
0x105c: V870 = 0xffffffff
0x1061: V871 = AND 0xffffffff 0xa9059cbb
0x1062: V872 = 0x100000000000000000000000000000000000000000000000000000000
0x1080: V873 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1082: M[V869] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1083: V874 = 0x4
0x1085: V875 = ADD 0x4 V869
0x1088: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0x109d: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V867
0x109e: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b3: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0x10b5: M[V875] = V879
0x10b6: V880 = 0x20
0x10b8: V881 = ADD 0x20 V875
0x10bb: M[V881] = S5
0x10bc: V882 = 0x20
0x10be: V883 = ADD 0x20 V881
0x10c3: V884 = 0x20
0x10c5: V885 = 0x40
0x10c7: V886 = M[0x40]
0x10ca: V887 = SUB V883 V886
0x10cc: V888 = 0x0
0x10d0: V889 = EXTCODESIZE V865
0x10d1: V890 = ISZERO V889
0x10d3: V891 = ISZERO V890
0x10d4: V892 = 0xb39
0x10d7: THROWI V891
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V890, V865, 0x0, V886, V887, V886, 0x20, V883, 0xa9059cbb, V865, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x10d8
[0x10d8:0x10e6]
---
Predecessors: [0xfaa]
Successors: [0x10e7]
---
0x10d8 PUSH1 0x0
0x10da DUP1
0x10db REVERT
0x10dc JUMPDEST
0x10dd POP
0x10de GAS
0x10df CALL
0x10e0 ISZERO
0x10e1 DUP1
0x10e2 ISZERO
0x10e3 PUSH2 0xb4d
0x10e6 JUMPI
---
0x10d8: V893 = 0x0
0x10db: REVERT 0x0 0x0
0x10dc: JUMPDEST 
0x10de: V894 = GAS
0x10df: V895 = CALL V894 S1 S2 S3 S4 S5 S6
0x10e0: V896 = ISZERO V895
0x10e2: V897 = ISZERO V896
0x10e3: V898 = 0xb4d
0x10e6: THROWI V897
---
Entry stack: [S15, S14, S13, S12, S11, S10, V865, 0xa9059cbb, V883, 0x20, V886, V887, V886, 0x0, V865, V890]
Stack pops: 0
Stack additions: [V896]
Exit stack: []

================================

Block 0x10e7
[0x10e7:0x1101]
---
Predecessors: [0x10d8]
Successors: [0x1102]
---
0x10e7 RETURNDATASIZE
0x10e8 PUSH1 0x0
0x10ea DUP1
0x10eb RETURNDATACOPY
0x10ec RETURNDATASIZE
0x10ed PUSH1 0x0
0x10ef REVERT
0x10f0 JUMPDEST
0x10f1 POP
0x10f2 POP
0x10f3 POP
0x10f4 POP
0x10f5 PUSH1 0x40
0x10f7 MLOAD
0x10f8 RETURNDATASIZE
0x10f9 PUSH1 0x20
0x10fb DUP2
0x10fc LT
0x10fd ISZERO
0x10fe PUSH2 0xb63
0x1101 JUMPI
---
0x10e7: V899 = RETURNDATASIZE
0x10e8: V900 = 0x0
0x10eb: RETURNDATACOPY 0x0 0x0 V899
0x10ec: V901 = RETURNDATASIZE
0x10ed: V902 = 0x0
0x10ef: REVERT 0x0 V901
0x10f0: JUMPDEST 
0x10f5: V903 = 0x40
0x10f7: V904 = M[0x40]
0x10f8: V905 = RETURNDATASIZE
0x10f9: V906 = 0x20
0x10fc: V907 = LT V905 0x20
0x10fd: V908 = ISZERO V907
0x10fe: V909 = 0xb63
0x1101: THROWI V908
---
Entry stack: [V896]
Stack pops: 0
Stack additions: [V905, V904]
Exit stack: []

================================

Block 0x1102
[0x1102:0x1118]
---
Predecessors: [0x10e7]
Successors: [0x1119]
---
0x1102 PUSH1 0x0
0x1104 DUP1
0x1105 REVERT
0x1106 JUMPDEST
0x1107 DUP2
0x1108 ADD
0x1109 SWAP1
0x110a DUP1
0x110b DUP1
0x110c MLOAD
0x110d SWAP1
0x110e PUSH1 0x20
0x1110 ADD
0x1111 SWAP1
0x1112 SWAP3
0x1113 SWAP2
0x1114 SWAP1
0x1115 POP
0x1116 POP
0x1117 POP
0x1118 POP
---
0x1102: V910 = 0x0
0x1105: REVERT 0x0 0x0
0x1106: JUMPDEST 
0x1108: V911 = ADD S1 S0
0x110c: V912 = M[S1]
0x110e: V913 = 0x20
0x1110: V914 = ADD 0x20 S1
---
Entry stack: [V904, V905]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1119
[0x1119:0x1129]
---
Predecessors: [0x1102]
Successors: [0x112a]
---
0x1119 JUMPDEST
0x111a POP
0x111b POP
0x111c POP
0x111d POP
0x111e POP
0x111f POP
0x1120 POP
0x1121 STOP
0x1122 JUMPDEST
0x1123 CALLVALUE
0x1124 DUP1
0x1125 ISZERO
0x1126 PUSH2 0xb8b
0x1129 JUMPI
---
0x1119: JUMPDEST 
0x1121: STOP 
0x1122: JUMPDEST 
0x1123: V915 = CALLVALUE
0x1125: V916 = ISZERO V915
0x1126: V917 = 0xb8b
0x1129: THROWI V916
---
Entry stack: []
Stack pops: 14
Stack additions: [V915]
Exit stack: []

================================

Block 0x112a
[0x112a:0x1180]
---
Predecessors: [0x1119]
Successors: [0x1181]
---
0x112a PUSH1 0x0
0x112c DUP1
0x112d REVERT
0x112e JUMPDEST
0x112f POP
0x1130 PUSH2 0xbc0
0x1133 PUSH1 0x4
0x1135 DUP1
0x1136 CALLDATASIZE
0x1137 SUB
0x1138 DUP2
0x1139 ADD
0x113a SWAP1
0x113b DUP1
0x113c DUP1
0x113d CALLDATALOAD
0x113e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1153 AND
0x1154 SWAP1
0x1155 PUSH1 0x20
0x1157 ADD
0x1158 SWAP1
0x1159 SWAP3
0x115a SWAP2
0x115b SWAP1
0x115c POP
0x115d POP
0x115e POP
0x115f PUSH2 0xf6e
0x1162 JUMP
0x1163 JUMPDEST
0x1164 PUSH1 0x40
0x1166 MLOAD
0x1167 DUP1
0x1168 DUP3
0x1169 DUP2
0x116a MSTORE
0x116b PUSH1 0x20
0x116d ADD
0x116e SWAP2
0x116f POP
0x1170 POP
0x1171 PUSH1 0x40
0x1173 MLOAD
0x1174 DUP1
0x1175 SWAP2
0x1176 SUB
0x1177 SWAP1
0x1178 RETURN
0x1179 JUMPDEST
0x117a CALLVALUE
0x117b DUP1
0x117c ISZERO
0x117d PUSH2 0xbe2
0x1180 JUMPI
---
0x112a: V918 = 0x0
0x112d: REVERT 0x0 0x0
0x112e: JUMPDEST 
0x1130: V919 = 0xbc0
0x1133: V920 = 0x4
0x1136: V921 = CALLDATASIZE
0x1137: V922 = SUB V921 0x4
0x1139: V923 = ADD 0x4 V922
0x113d: V924 = CALLDATALOAD 0x4
0x113e: V925 = 0xffffffffffffffffffffffffffffffffffffffff
0x1153: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V924
0x1155: V927 = 0x20
0x1157: V928 = ADD 0x20 0x4
0x115f: V929 = 0xf6e
0x1162: THROW 
0x1163: JUMPDEST 
0x1164: V930 = 0x40
0x1166: V931 = M[0x40]
0x116a: M[V931] = S0
0x116b: V932 = 0x20
0x116d: V933 = ADD 0x20 V931
0x1171: V934 = 0x40
0x1173: V935 = M[0x40]
0x1176: V936 = SUB V933 V935
0x1178: RETURN V935 V936
0x1179: JUMPDEST 
0x117a: V937 = CALLVALUE
0x117c: V938 = ISZERO V937
0x117d: V939 = 0xbe2
0x1180: THROWI V938
---
Entry stack: [V915]
Stack pops: 0
Stack additions: [V926, 0xbc0, V937]
Exit stack: []

================================

Block 0x1181
[0x1181:0x11ab]
---
Predecessors: [0x112a]
Successors: [0x11ac]
---
0x1181 PUSH1 0x0
0x1183 DUP1
0x1184 REVERT
0x1185 JUMPDEST
0x1186 POP
0x1187 PUSH2 0xbeb
0x118a PUSH2 0xf86
0x118d JUMP
0x118e JUMPDEST
0x118f PUSH1 0x40
0x1191 MLOAD
0x1192 DUP1
0x1193 DUP3
0x1194 DUP2
0x1195 MSTORE
0x1196 PUSH1 0x20
0x1198 ADD
0x1199 SWAP2
0x119a POP
0x119b POP
0x119c PUSH1 0x40
0x119e MLOAD
0x119f DUP1
0x11a0 SWAP2
0x11a1 SUB
0x11a2 SWAP1
0x11a3 RETURN
0x11a4 JUMPDEST
0x11a5 CALLVALUE
0x11a6 DUP1
0x11a7 ISZERO
0x11a8 PUSH2 0xc0d
0x11ab JUMPI
---
0x1181: V940 = 0x0
0x1184: REVERT 0x0 0x0
0x1185: JUMPDEST 
0x1187: V941 = 0xbeb
0x118a: V942 = 0xf86
0x118d: THROW 
0x118e: JUMPDEST 
0x118f: V943 = 0x40
0x1191: V944 = M[0x40]
0x1195: M[V944] = S0
0x1196: V945 = 0x20
0x1198: V946 = ADD 0x20 V944
0x119c: V947 = 0x40
0x119e: V948 = M[0x40]
0x11a1: V949 = SUB V946 V948
0x11a3: RETURN V948 V949
0x11a4: JUMPDEST 
0x11a5: V950 = CALLVALUE
0x11a7: V951 = ISZERO V950
0x11a8: V952 = 0xc0d
0x11ab: THROWI V951
---
Entry stack: [V937]
Stack pops: 0
Stack additions: [0xbeb, V950]
Exit stack: []

================================

Block 0x11ac
[0x11ac:0x1230]
---
Predecessors: [0x1181]
Successors: [0x1231]
---
0x11ac PUSH1 0x0
0x11ae DUP1
0x11af REVERT
0x11b0 JUMPDEST
0x11b1 POP
0x11b2 PUSH2 0xc6c
0x11b5 PUSH1 0x4
0x11b7 DUP1
0x11b8 CALLDATASIZE
0x11b9 SUB
0x11ba DUP2
0x11bb ADD
0x11bc SWAP1
0x11bd DUP1
0x11be DUP1
0x11bf CALLDATALOAD
0x11c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d5 AND
0x11d6 SWAP1
0x11d7 PUSH1 0x20
0x11d9 ADD
0x11da SWAP1
0x11db SWAP3
0x11dc SWAP2
0x11dd SWAP1
0x11de DUP1
0x11df CALLDATALOAD
0x11e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f5 AND
0x11f6 SWAP1
0x11f7 PUSH1 0x20
0x11f9 ADD
0x11fa SWAP1
0x11fb SWAP3
0x11fc SWAP2
0x11fd SWAP1
0x11fe DUP1
0x11ff CALLDATALOAD
0x1200 SWAP1
0x1201 PUSH1 0x20
0x1203 ADD
0x1204 SWAP1
0x1205 SWAP3
0x1206 SWAP2
0x1207 SWAP1
0x1208 POP
0x1209 POP
0x120a POP
0x120b PUSH2 0xf8c
0x120e JUMP
0x120f JUMPDEST
0x1210 PUSH1 0x40
0x1212 MLOAD
0x1213 DUP1
0x1214 DUP3
0x1215 ISZERO
0x1216 ISZERO
0x1217 ISZERO
0x1218 ISZERO
0x1219 DUP2
0x121a MSTORE
0x121b PUSH1 0x20
0x121d ADD
0x121e SWAP2
0x121f POP
0x1220 POP
0x1221 PUSH1 0x40
0x1223 MLOAD
0x1224 DUP1
0x1225 SWAP2
0x1226 SUB
0x1227 SWAP1
0x1228 RETURN
0x1229 JUMPDEST
0x122a CALLVALUE
0x122b DUP1
0x122c ISZERO
0x122d PUSH2 0xc92
0x1230 JUMPI
---
0x11ac: V953 = 0x0
0x11af: REVERT 0x0 0x0
0x11b0: JUMPDEST 
0x11b2: V954 = 0xc6c
0x11b5: V955 = 0x4
0x11b8: V956 = CALLDATASIZE
0x11b9: V957 = SUB V956 0x4
0x11bb: V958 = ADD 0x4 V957
0x11bf: V959 = CALLDATALOAD 0x4
0x11c0: V960 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d5: V961 = AND 0xffffffffffffffffffffffffffffffffffffffff V959
0x11d7: V962 = 0x20
0x11d9: V963 = ADD 0x20 0x4
0x11df: V964 = CALLDATALOAD 0x24
0x11e0: V965 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f5: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V964
0x11f7: V967 = 0x20
0x11f9: V968 = ADD 0x20 0x24
0x11ff: V969 = CALLDATALOAD 0x44
0x1201: V970 = 0x20
0x1203: V971 = ADD 0x20 0x44
0x120b: V972 = 0xf8c
0x120e: THROW 
0x120f: JUMPDEST 
0x1210: V973 = 0x40
0x1212: V974 = M[0x40]
0x1215: V975 = ISZERO S0
0x1216: V976 = ISZERO V975
0x1217: V977 = ISZERO V976
0x1218: V978 = ISZERO V977
0x121a: M[V974] = V978
0x121b: V979 = 0x20
0x121d: V980 = ADD 0x20 V974
0x1221: V981 = 0x40
0x1223: V982 = M[0x40]
0x1226: V983 = SUB V980 V982
0x1228: RETURN V982 V983
0x1229: JUMPDEST 
0x122a: V984 = CALLVALUE
0x122c: V985 = ISZERO V984
0x122d: V986 = 0xc92
0x1230: THROWI V985
---
Entry stack: [V950]
Stack pops: 0
Stack additions: [V969, V966, V961, 0xc6c, V984]
Exit stack: []

================================

Block 0x1231
[0x1231:0x125b]
---
Predecessors: [0x11ac]
Successors: [0x125c]
---
0x1231 PUSH1 0x0
0x1233 DUP1
0x1234 REVERT
0x1235 JUMPDEST
0x1236 POP
0x1237 PUSH2 0xc9b
0x123a PUSH2 0x1139
0x123d JUMP
0x123e JUMPDEST
0x123f PUSH1 0x40
0x1241 MLOAD
0x1242 DUP1
0x1243 DUP3
0x1244 DUP2
0x1245 MSTORE
0x1246 PUSH1 0x20
0x1248 ADD
0x1249 SWAP2
0x124a POP
0x124b POP
0x124c PUSH1 0x40
0x124e MLOAD
0x124f DUP1
0x1250 SWAP2
0x1251 SUB
0x1252 SWAP1
0x1253 RETURN
0x1254 JUMPDEST
0x1255 CALLVALUE
0x1256 DUP1
0x1257 ISZERO
0x1258 PUSH2 0xcbd
0x125b JUMPI
---
0x1231: V987 = 0x0
0x1234: REVERT 0x0 0x0
0x1235: JUMPDEST 
0x1237: V988 = 0xc9b
0x123a: V989 = 0x1139
0x123d: THROW 
0x123e: JUMPDEST 
0x123f: V990 = 0x40
0x1241: V991 = M[0x40]
0x1245: M[V991] = S0
0x1246: V992 = 0x20
0x1248: V993 = ADD 0x20 V991
0x124c: V994 = 0x40
0x124e: V995 = M[0x40]
0x1251: V996 = SUB V993 V995
0x1253: RETURN V995 V996
0x1254: JUMPDEST 
0x1255: V997 = CALLVALUE
0x1257: V998 = ISZERO V997
0x1258: V999 = 0xcbd
0x125b: THROWI V998
---
Entry stack: [V984]
Stack pops: 0
Stack additions: [0xc9b, V997]
Exit stack: []

================================

Block 0x125c
[0x125c:0x1288]
---
Predecessors: [0x1231]
Successors: [0x1289]
---
0x125c PUSH1 0x0
0x125e DUP1
0x125f REVERT
0x1260 JUMPDEST
0x1261 POP
0x1262 PUSH2 0xcdc
0x1265 PUSH1 0x4
0x1267 DUP1
0x1268 CALLDATASIZE
0x1269 SUB
0x126a DUP2
0x126b ADD
0x126c SWAP1
0x126d DUP1
0x126e DUP1
0x126f CALLDATALOAD
0x1270 SWAP1
0x1271 PUSH1 0x20
0x1273 ADD
0x1274 SWAP1
0x1275 SWAP3
0x1276 SWAP2
0x1277 SWAP1
0x1278 POP
0x1279 POP
0x127a POP
0x127b PUSH2 0x113f
0x127e JUMP
0x127f JUMPDEST
0x1280 STOP
0x1281 JUMPDEST
0x1282 CALLVALUE
0x1283 DUP1
0x1284 ISZERO
0x1285 PUSH2 0xcea
0x1288 JUMPI
---
0x125c: V1000 = 0x0
0x125f: REVERT 0x0 0x0
0x1260: JUMPDEST 
0x1262: V1001 = 0xcdc
0x1265: V1002 = 0x4
0x1268: V1003 = CALLDATASIZE
0x1269: V1004 = SUB V1003 0x4
0x126b: V1005 = ADD 0x4 V1004
0x126f: V1006 = CALLDATALOAD 0x4
0x1271: V1007 = 0x20
0x1273: V1008 = ADD 0x20 0x4
0x127b: V1009 = 0x113f
0x127e: THROW 
0x127f: JUMPDEST 
0x1280: STOP 
0x1281: JUMPDEST 
0x1282: V1010 = CALLVALUE
0x1284: V1011 = ISZERO V1010
0x1285: V1012 = 0xcea
0x1288: THROWI V1011
---
Entry stack: [V997]
Stack pops: 0
Stack additions: [V1006, 0xcdc, V1010]
Exit stack: []

================================

Block 0x1289
[0x1289:0x129f]
---
Predecessors: [0x125c]
Successors: [0x12a0]
---
0x1289 PUSH1 0x0
0x128b DUP1
0x128c REVERT
0x128d JUMPDEST
0x128e POP
0x128f PUSH2 0xcf3
0x1292 PUSH2 0x122c
0x1295 JUMP
0x1296 JUMPDEST
0x1297 STOP
0x1298 JUMPDEST
0x1299 CALLVALUE
0x129a DUP1
0x129b ISZERO
0x129c PUSH2 0xd01
0x129f JUMPI
---
0x1289: V1013 = 0x0
0x128c: REVERT 0x0 0x0
0x128d: JUMPDEST 
0x128f: V1014 = 0xcf3
0x1292: V1015 = 0x122c
0x1295: THROW 
0x1296: JUMPDEST 
0x1297: STOP 
0x1298: JUMPDEST 
0x1299: V1016 = CALLVALUE
0x129b: V1017 = ISZERO V1016
0x129c: V1018 = 0xd01
0x129f: THROWI V1017
---
Entry stack: [V1010]
Stack pops: 0
Stack additions: [0xcf3, V1016]
Exit stack: []

================================

Block 0x12a0
[0x12a0:0x12f6]
---
Predecessors: [0x1289]
Successors: [0x12f7]
---
0x12a0 PUSH1 0x0
0x12a2 DUP1
0x12a3 REVERT
0x12a4 JUMPDEST
0x12a5 POP
0x12a6 PUSH2 0xd0a
0x12a9 PUSH2 0x13f0
0x12ac JUMP
0x12ad JUMPDEST
0x12ae PUSH1 0x40
0x12b0 MLOAD
0x12b1 DUP1
0x12b2 DUP3
0x12b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c8 AND
0x12c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12de AND
0x12df DUP2
0x12e0 MSTORE
0x12e1 PUSH1 0x20
0x12e3 ADD
0x12e4 SWAP2
0x12e5 POP
0x12e6 POP
0x12e7 PUSH1 0x40
0x12e9 MLOAD
0x12ea DUP1
0x12eb SWAP2
0x12ec SUB
0x12ed SWAP1
0x12ee RETURN
0x12ef JUMPDEST
0x12f0 CALLVALUE
0x12f1 DUP1
0x12f2 ISZERO
0x12f3 PUSH2 0xd58
0x12f6 JUMPI
---
0x12a0: V1019 = 0x0
0x12a3: REVERT 0x0 0x0
0x12a4: JUMPDEST 
0x12a6: V1020 = 0xd0a
0x12a9: V1021 = 0x13f0
0x12ac: THROW 
0x12ad: JUMPDEST 
0x12ae: V1022 = 0x40
0x12b0: V1023 = M[0x40]
0x12b3: V1024 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c8: V1025 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12c9: V1026 = 0xffffffffffffffffffffffffffffffffffffffff
0x12de: V1027 = AND 0xffffffffffffffffffffffffffffffffffffffff V1025
0x12e0: M[V1023] = V1027
0x12e1: V1028 = 0x20
0x12e3: V1029 = ADD 0x20 V1023
0x12e7: V1030 = 0x40
0x12e9: V1031 = M[0x40]
0x12ec: V1032 = SUB V1029 V1031
0x12ee: RETURN V1031 V1032
0x12ef: JUMPDEST 
0x12f0: V1033 = CALLVALUE
0x12f2: V1034 = ISZERO V1033
0x12f3: V1035 = 0xd58
0x12f6: THROWI V1034
---
Entry stack: [V1016]
Stack pops: 0
Stack additions: [0xd0a, V1033]
Exit stack: []

================================

Block 0x12f7
[0x12f7:0x134d]
---
Predecessors: [0x12a0]
Successors: [0x134e]
---
0x12f7 PUSH1 0x0
0x12f9 DUP1
0x12fa REVERT
0x12fb JUMPDEST
0x12fc POP
0x12fd PUSH2 0xd61
0x1300 PUSH2 0x1416
0x1303 JUMP
0x1304 JUMPDEST
0x1305 PUSH1 0x40
0x1307 MLOAD
0x1308 DUP1
0x1309 DUP3
0x130a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131f AND
0x1320 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1335 AND
0x1336 DUP2
0x1337 MSTORE
0x1338 PUSH1 0x20
0x133a ADD
0x133b SWAP2
0x133c POP
0x133d POP
0x133e PUSH1 0x40
0x1340 MLOAD
0x1341 DUP1
0x1342 SWAP2
0x1343 SUB
0x1344 SWAP1
0x1345 RETURN
0x1346 JUMPDEST
0x1347 CALLVALUE
0x1348 DUP1
0x1349 ISZERO
0x134a PUSH2 0xdaf
0x134d JUMPI
---
0x12f7: V1036 = 0x0
0x12fa: REVERT 0x0 0x0
0x12fb: JUMPDEST 
0x12fd: V1037 = 0xd61
0x1300: V1038 = 0x1416
0x1303: THROW 
0x1304: JUMPDEST 
0x1305: V1039 = 0x40
0x1307: V1040 = M[0x40]
0x130a: V1041 = 0xffffffffffffffffffffffffffffffffffffffff
0x131f: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1320: V1043 = 0xffffffffffffffffffffffffffffffffffffffff
0x1335: V1044 = AND 0xffffffffffffffffffffffffffffffffffffffff V1042
0x1337: M[V1040] = V1044
0x1338: V1045 = 0x20
0x133a: V1046 = ADD 0x20 V1040
0x133e: V1047 = 0x40
0x1340: V1048 = M[0x40]
0x1343: V1049 = SUB V1046 V1048
0x1345: RETURN V1048 V1049
0x1346: JUMPDEST 
0x1347: V1050 = CALLVALUE
0x1349: V1051 = ISZERO V1050
0x134a: V1052 = 0xdaf
0x134d: THROWI V1051
---
Entry stack: [V1033]
Stack pops: 0
Stack additions: [0xd61, V1050]
Exit stack: []

================================

Block 0x134e
[0x134e:0x13a4]
---
Predecessors: [0x12f7]
Successors: [0x13a5]
---
0x134e PUSH1 0x0
0x1350 DUP1
0x1351 REVERT
0x1352 JUMPDEST
0x1353 POP
0x1354 PUSH2 0xdb8
0x1357 PUSH2 0x143b
0x135a JUMP
0x135b JUMPDEST
0x135c PUSH1 0x40
0x135e MLOAD
0x135f DUP1
0x1360 DUP3
0x1361 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1376 AND
0x1377 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138c AND
0x138d DUP2
0x138e MSTORE
0x138f PUSH1 0x20
0x1391 ADD
0x1392 SWAP2
0x1393 POP
0x1394 POP
0x1395 PUSH1 0x40
0x1397 MLOAD
0x1398 DUP1
0x1399 SWAP2
0x139a SUB
0x139b SWAP1
0x139c RETURN
0x139d JUMPDEST
0x139e CALLVALUE
0x139f DUP1
0x13a0 ISZERO
0x13a1 PUSH2 0xe06
0x13a4 JUMPI
---
0x134e: V1053 = 0x0
0x1351: REVERT 0x0 0x0
0x1352: JUMPDEST 
0x1354: V1054 = 0xdb8
0x1357: V1055 = 0x143b
0x135a: THROW 
0x135b: JUMPDEST 
0x135c: V1056 = 0x40
0x135e: V1057 = M[0x40]
0x1361: V1058 = 0xffffffffffffffffffffffffffffffffffffffff
0x1376: V1059 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1377: V1060 = 0xffffffffffffffffffffffffffffffffffffffff
0x138c: V1061 = AND 0xffffffffffffffffffffffffffffffffffffffff V1059
0x138e: M[V1057] = V1061
0x138f: V1062 = 0x20
0x1391: V1063 = ADD 0x20 V1057
0x1395: V1064 = 0x40
0x1397: V1065 = M[0x40]
0x139a: V1066 = SUB V1063 V1065
0x139c: RETURN V1065 V1066
0x139d: JUMPDEST 
0x139e: V1067 = CALLVALUE
0x13a0: V1068 = ISZERO V1067
0x13a1: V1069 = 0xe06
0x13a4: THROWI V1068
---
Entry stack: [V1050]
Stack pops: 0
Stack additions: [0xdb8, V1067]
Exit stack: []

================================

Block 0x13a5
[0x13a5:0x13fb]
---
Predecessors: [0x134e]
Successors: [0x13fc]
---
0x13a5 PUSH1 0x0
0x13a7 DUP1
0x13a8 REVERT
0x13a9 JUMPDEST
0x13aa POP
0x13ab PUSH2 0xe0f
0x13ae PUSH2 0x1461
0x13b1 JUMP
0x13b2 JUMPDEST
0x13b3 PUSH1 0x40
0x13b5 MLOAD
0x13b6 DUP1
0x13b7 DUP3
0x13b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13cd AND
0x13ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13e3 AND
0x13e4 DUP2
0x13e5 MSTORE
0x13e6 PUSH1 0x20
0x13e8 ADD
0x13e9 SWAP2
0x13ea POP
0x13eb POP
0x13ec PUSH1 0x40
0x13ee MLOAD
0x13ef DUP1
0x13f0 SWAP2
0x13f1 SUB
0x13f2 SWAP1
0x13f3 RETURN
0x13f4 JUMPDEST
0x13f5 CALLVALUE
0x13f6 DUP1
0x13f7 ISZERO
0x13f8 PUSH2 0xe5d
0x13fb JUMPI
---
0x13a5: V1070 = 0x0
0x13a8: REVERT 0x0 0x0
0x13a9: JUMPDEST 
0x13ab: V1071 = 0xe0f
0x13ae: V1072 = 0x1461
0x13b1: THROW 
0x13b2: JUMPDEST 
0x13b3: V1073 = 0x40
0x13b5: V1074 = M[0x40]
0x13b8: V1075 = 0xffffffffffffffffffffffffffffffffffffffff
0x13cd: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x13ce: V1077 = 0xffffffffffffffffffffffffffffffffffffffff
0x13e3: V1078 = AND 0xffffffffffffffffffffffffffffffffffffffff V1076
0x13e5: M[V1074] = V1078
0x13e6: V1079 = 0x20
0x13e8: V1080 = ADD 0x20 V1074
0x13ec: V1081 = 0x40
0x13ee: V1082 = M[0x40]
0x13f1: V1083 = SUB V1080 V1082
0x13f3: RETURN V1082 V1083
0x13f4: JUMPDEST 
0x13f5: V1084 = CALLVALUE
0x13f7: V1085 = ISZERO V1084
0x13f8: V1086 = 0xe5d
0x13fb: THROWI V1085
---
Entry stack: [V1067]
Stack pops: 0
Stack additions: [0xe0f, V1084]
Exit stack: []

================================

Block 0x13fc
[0x13fc:0x1452]
---
Predecessors: [0x13a5]
Successors: [0x1453]
---
0x13fc PUSH1 0x0
0x13fe DUP1
0x13ff REVERT
0x1400 JUMPDEST
0x1401 POP
0x1402 PUSH2 0xe92
0x1405 PUSH1 0x4
0x1407 DUP1
0x1408 CALLDATASIZE
0x1409 SUB
0x140a DUP2
0x140b ADD
0x140c SWAP1
0x140d DUP1
0x140e DUP1
0x140f CALLDATALOAD
0x1410 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1425 AND
0x1426 SWAP1
0x1427 PUSH1 0x20
0x1429 ADD
0x142a SWAP1
0x142b SWAP3
0x142c SWAP2
0x142d SWAP1
0x142e POP
0x142f POP
0x1430 POP
0x1431 PUSH2 0x1487
0x1434 JUMP
0x1435 JUMPDEST
0x1436 PUSH1 0x40
0x1438 MLOAD
0x1439 DUP1
0x143a DUP3
0x143b DUP2
0x143c MSTORE
0x143d PUSH1 0x20
0x143f ADD
0x1440 SWAP2
0x1441 POP
0x1442 POP
0x1443 PUSH1 0x40
0x1445 MLOAD
0x1446 DUP1
0x1447 SWAP2
0x1448 SUB
0x1449 SWAP1
0x144a RETURN
0x144b JUMPDEST
0x144c CALLVALUE
0x144d DUP1
0x144e ISZERO
0x144f PUSH2 0xeb4
0x1452 JUMPI
---
0x13fc: V1087 = 0x0
0x13ff: REVERT 0x0 0x0
0x1400: JUMPDEST 
0x1402: V1088 = 0xe92
0x1405: V1089 = 0x4
0x1408: V1090 = CALLDATASIZE
0x1409: V1091 = SUB V1090 0x4
0x140b: V1092 = ADD 0x4 V1091
0x140f: V1093 = CALLDATALOAD 0x4
0x1410: V1094 = 0xffffffffffffffffffffffffffffffffffffffff
0x1425: V1095 = AND 0xffffffffffffffffffffffffffffffffffffffff V1093
0x1427: V1096 = 0x20
0x1429: V1097 = ADD 0x20 0x4
0x1431: V1098 = 0x1487
0x1434: THROW 
0x1435: JUMPDEST 
0x1436: V1099 = 0x40
0x1438: V1100 = M[0x40]
0x143c: M[V1100] = S0
0x143d: V1101 = 0x20
0x143f: V1102 = ADD 0x20 V1100
0x1443: V1103 = 0x40
0x1445: V1104 = M[0x40]
0x1448: V1105 = SUB V1102 V1104
0x144a: RETURN V1104 V1105
0x144b: JUMPDEST 
0x144c: V1106 = CALLVALUE
0x144e: V1107 = ISZERO V1106
0x144f: V1108 = 0xeb4
0x1452: THROWI V1107
---
Entry stack: [V1084]
Stack pops: 0
Stack additions: [V1095, 0xe92, V1106]
Exit stack: []

================================

Block 0x1453
[0x1453:0x149a]
---
Predecessors: [0x13fc]
Successors: [0x149b]
---
0x1453 PUSH1 0x0
0x1455 DUP1
0x1456 REVERT
0x1457 JUMPDEST
0x1458 POP
0x1459 PUSH2 0xee9
0x145c PUSH1 0x4
0x145e DUP1
0x145f CALLDATASIZE
0x1460 SUB
0x1461 DUP2
0x1462 ADD
0x1463 SWAP1
0x1464 DUP1
0x1465 DUP1
0x1466 CALLDATALOAD
0x1467 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147c AND
0x147d SWAP1
0x147e PUSH1 0x20
0x1480 ADD
0x1481 SWAP1
0x1482 SWAP3
0x1483 SWAP2
0x1484 SWAP1
0x1485 POP
0x1486 POP
0x1487 POP
0x1488 PUSH2 0x149f
0x148b JUMP
0x148c JUMPDEST
0x148d STOP
0x148e JUMPDEST
0x148f PUSH1 0x0
0x1491 DUP3
0x1492 DUP3
0x1493 GT
0x1494 ISZERO
0x1495 ISZERO
0x1496 ISZERO
0x1497 PUSH2 0xef9
0x149a JUMPI
---
0x1453: V1109 = 0x0
0x1456: REVERT 0x0 0x0
0x1457: JUMPDEST 
0x1459: V1110 = 0xee9
0x145c: V1111 = 0x4
0x145f: V1112 = CALLDATASIZE
0x1460: V1113 = SUB V1112 0x4
0x1462: V1114 = ADD 0x4 V1113
0x1466: V1115 = CALLDATALOAD 0x4
0x1467: V1116 = 0xffffffffffffffffffffffffffffffffffffffff
0x147c: V1117 = AND 0xffffffffffffffffffffffffffffffffffffffff V1115
0x147e: V1118 = 0x20
0x1480: V1119 = ADD 0x20 0x4
0x1488: V1120 = 0x149f
0x148b: THROW 
0x148c: JUMPDEST 
0x148d: STOP 
0x148e: JUMPDEST 
0x148f: V1121 = 0x0
0x1493: V1122 = GT S0 S1
0x1494: V1123 = ISZERO V1122
0x1495: V1124 = ISZERO V1123
0x1496: V1125 = ISZERO V1124
0x1497: V1126 = 0xef9
0x149a: THROWI V1125
---
Entry stack: [V1106]
Stack pops: 0
Stack additions: [V1117, 0xee9, 0x0, S0, S1]
Exit stack: []

================================

Block 0x149b
[0x149b:0x14b1]
---
Predecessors: [0x1453]
Successors: [0x14b2]
---
0x149b INVALID
0x149c JUMPDEST
0x149d DUP2
0x149e DUP4
0x149f SUB
0x14a0 SWAP1
0x14a1 POP
0x14a2 SWAP3
0x14a3 SWAP2
0x14a4 POP
0x14a5 POP
0x14a6 JUMP
0x14a7 JUMPDEST
0x14a8 PUSH1 0x0
0x14aa DUP1
0x14ab DUP4
0x14ac EQ
0x14ad ISZERO
0x14ae PUSH2 0xf17
0x14b1 JUMPI
---
0x149b: INVALID 
0x149c: JUMPDEST 
0x149f: V1127 = SUB S2 S1
0x14a6: JUMP S3
0x14a7: JUMPDEST 
0x14a8: V1128 = 0x0
0x14ac: V1129 = EQ S1 0x0
0x14ad: V1130 = ISZERO V1129
0x14ae: V1131 = 0xf17
0x14b1: THROWI V1130
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1127, 0x0, S0, S1]
Exit stack: []

================================

Block 0x14b2
[0x14b2:0x14c9]
---
Predecessors: [0x149b]
Successors: [0x14ca]
---
0x14b2 PUSH1 0x0
0x14b4 SWAP1
0x14b5 POP
0x14b6 PUSH2 0xf36
0x14b9 JUMP
0x14ba JUMPDEST
0x14bb DUP2
0x14bc DUP4
0x14bd MUL
0x14be SWAP1
0x14bf POP
0x14c0 DUP2
0x14c1 DUP4
0x14c2 DUP3
0x14c3 DUP2
0x14c4 ISZERO
0x14c5 ISZERO
0x14c6 PUSH2 0xf28
0x14c9 JUMPI
---
0x14b2: V1132 = 0x0
0x14b6: V1133 = 0xf36
0x14b9: THROW 
0x14ba: JUMPDEST 
0x14bd: V1134 = MUL S2 S1
0x14c4: V1135 = ISZERO S2
0x14c5: V1136 = ISZERO V1135
0x14c6: V1137 = 0xf28
0x14c9: THROWI V1136
---
Entry stack: [S2, S1, 0x0]
Stack pops: 1
Stack additions: [V1134, S2, S1, V1134, S1, S2]
Exit stack: []

================================

Block 0x14ca
[0x14ca:0x14d3]
---
Predecessors: [0x14b2]
Successors: [0x14d4]
---
0x14ca INVALID
0x14cb JUMPDEST
0x14cc DIV
0x14cd EQ
0x14ce ISZERO
0x14cf ISZERO
0x14d0 PUSH2 0xf32
0x14d3 JUMPI
---
0x14ca: INVALID 
0x14cb: JUMPDEST 
0x14cc: V1138 = DIV S0 S1
0x14cd: V1139 = EQ V1138 S2
0x14ce: V1140 = ISZERO V1139
0x14cf: V1141 = ISZERO V1140
0x14d0: V1142 = 0xf32
0x14d3: THROWI V1141
---
Entry stack: [S5, S4, V1134, S2, S1, V1134]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14d4
[0x14d4:0x14d8]
---
Predecessors: [0x14ca]
Successors: [0x14d9]
---
0x14d4 INVALID
0x14d5 JUMPDEST
0x14d6 DUP1
0x14d7 SWAP1
0x14d8 POP
---
0x14d4: INVALID 
0x14d5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x14d9
[0x14d9:0x14f0]
---
Predecessors: [0x14d4]
Successors: [0x14f1]
---
0x14d9 JUMPDEST
0x14da SWAP3
0x14db SWAP2
0x14dc POP
0x14dd POP
0x14de JUMP
0x14df JUMPDEST
0x14e0 PUSH1 0x0
0x14e2 DUP2
0x14e3 DUP4
0x14e4 ADD
0x14e5 SWAP1
0x14e6 POP
0x14e7 DUP3
0x14e8 DUP2
0x14e9 LT
0x14ea ISZERO
0x14eb ISZERO
0x14ec ISZERO
0x14ed PUSH2 0xf4f
0x14f0 JUMPI
---
0x14d9: JUMPDEST 
0x14de: JUMP S3
0x14df: JUMPDEST 
0x14e0: V1143 = 0x0
0x14e4: V1144 = ADD S1 S0
0x14e9: V1145 = LT V1144 S1
0x14ea: V1146 = ISZERO V1145
0x14eb: V1147 = ISZERO V1146
0x14ec: V1148 = ISZERO V1147
0x14ed: V1149 = 0xf4f
0x14f0: THROWI V1148
---
Entry stack: [S0]
Stack pops: 7
Stack additions: [V1144, S0, S1]
Exit stack: []

================================

Block 0x14f1
[0x14f1:0x1506]
---
Predecessors: [0x14d9]
Successors: [0x1507]
---
0x14f1 INVALID
0x14f2 JUMPDEST
0x14f3 DUP1
0x14f4 SWAP1
0x14f5 POP
0x14f6 SWAP3
0x14f7 SWAP2
0x14f8 POP
0x14f9 POP
0x14fa JUMP
0x14fb JUMPDEST
0x14fc PUSH1 0x0
0x14fe DUP2
0x14ff DUP4
0x1500 DUP2
0x1501 ISZERO
0x1502 ISZERO
0x1503 PUSH2 0xf65
0x1506 JUMPI
---
0x14f1: INVALID 
0x14f2: JUMPDEST 
0x14fa: JUMP S3
0x14fb: JUMPDEST 
0x14fc: V1150 = 0x0
0x1501: V1151 = ISZERO S0
0x1502: V1152 = ISZERO V1151
0x1503: V1153 = 0xf65
0x1506: THROWI V1152
---
Entry stack: [S2, S1, V1144]
Stack pops: 0
Stack additions: [S0, S1, S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x1507
[0x1507:0x1587]
---
Predecessors: [0x14f1]
Successors: [0x1588]
---
0x1507 INVALID
0x1508 JUMPDEST
0x1509 DIV
0x150a SWAP1
0x150b POP
0x150c SWAP3
0x150d SWAP2
0x150e POP
0x150f POP
0x1510 JUMP
0x1511 JUMPDEST
0x1512 PUSH1 0x6
0x1514 PUSH1 0x20
0x1516 MSTORE
0x1517 DUP1
0x1518 PUSH1 0x0
0x151a MSTORE
0x151b PUSH1 0x40
0x151d PUSH1 0x0
0x151f SHA3
0x1520 PUSH1 0x0
0x1522 SWAP2
0x1523 POP
0x1524 SWAP1
0x1525 POP
0x1526 SLOAD
0x1527 DUP2
0x1528 JUMP
0x1529 JUMPDEST
0x152a PUSH1 0x5
0x152c SLOAD
0x152d DUP2
0x152e JUMP
0x152f JUMPDEST
0x1530 PUSH1 0x0
0x1532 DUP1
0x1533 PUSH1 0x0
0x1535 SWAP1
0x1536 SLOAD
0x1537 SWAP1
0x1538 PUSH2 0x100
0x153b EXP
0x153c SWAP1
0x153d DIV
0x153e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1553 AND
0x1554 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1569 AND
0x156a CALLER
0x156b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1580 AND
0x1581 EQ
0x1582 ISZERO
0x1583 ISZERO
0x1584 PUSH2 0x1052
0x1587 JUMPI
---
0x1507: INVALID 
0x1508: JUMPDEST 
0x1509: V1154 = DIV S0 S1
0x1510: JUMP S5
0x1511: JUMPDEST 
0x1512: V1155 = 0x6
0x1514: V1156 = 0x20
0x1516: M[0x20] = 0x6
0x1518: V1157 = 0x0
0x151a: M[0x0] = S0
0x151b: V1158 = 0x40
0x151d: V1159 = 0x0
0x151f: V1160 = SHA3 0x0 0x40
0x1520: V1161 = 0x0
0x1526: V1162 = S[V1160]
0x1528: JUMP S1
0x1529: JUMPDEST 
0x152a: V1163 = 0x5
0x152c: V1164 = S[0x5]
0x152e: JUMP S0
0x152f: JUMPDEST 
0x1530: V1165 = 0x0
0x1533: V1166 = 0x0
0x1536: V1167 = S[0x0]
0x1538: V1168 = 0x100
0x153b: V1169 = EXP 0x100 0x0
0x153d: V1170 = DIV V1167 0x1
0x153e: V1171 = 0xffffffffffffffffffffffffffffffffffffffff
0x1553: V1172 = AND 0xffffffffffffffffffffffffffffffffffffffff V1170
0x1554: V1173 = 0xffffffffffffffffffffffffffffffffffffffff
0x1569: V1174 = AND 0xffffffffffffffffffffffffffffffffffffffff V1172
0x156a: V1175 = CALLER
0x156b: V1176 = 0xffffffffffffffffffffffffffffffffffffffff
0x1580: V1177 = AND 0xffffffffffffffffffffffffffffffffffffffff V1175
0x1581: V1178 = EQ V1177 V1174
0x1582: V1179 = ISZERO V1178
0x1583: V1180 = ISZERO V1179
0x1584: V1181 = 0x1052
0x1587: THROWI V1180
---
Entry stack: [S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V1154, V1162, S1, V1164, S0, 0x0]
Exit stack: []

================================

Block 0x1588
[0x1588:0x1693]
---
Predecessors: [0x1507]
Successors: [0x1694]
---
0x1588 PUSH1 0x40
0x158a MLOAD
0x158b PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x15ac DUP2
0x15ad MSTORE
0x15ae PUSH1 0x4
0x15b0 ADD
0x15b1 DUP1
0x15b2 DUP1
0x15b3 PUSH1 0x20
0x15b5 ADD
0x15b6 DUP3
0x15b7 DUP2
0x15b8 SUB
0x15b9 DUP3
0x15ba MSTORE
0x15bb PUSH1 0x13
0x15bd DUP2
0x15be MSTORE
0x15bf PUSH1 0x20
0x15c1 ADD
0x15c2 DUP1
0x15c3 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x15e4 DUP2
0x15e5 MSTORE
0x15e6 POP
0x15e7 PUSH1 0x20
0x15e9 ADD
0x15ea SWAP2
0x15eb POP
0x15ec POP
0x15ed PUSH1 0x40
0x15ef MLOAD
0x15f0 DUP1
0x15f1 SWAP2
0x15f2 SUB
0x15f3 SWAP1
0x15f4 REVERT
0x15f5 JUMPDEST
0x15f6 DUP4
0x15f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x160c AND
0x160d PUSH4 0xa9059cbb
0x1612 DUP5
0x1613 DUP5
0x1614 PUSH1 0x40
0x1616 MLOAD
0x1617 DUP4
0x1618 PUSH4 0xffffffff
0x161d AND
0x161e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x163c MUL
0x163d DUP2
0x163e MSTORE
0x163f PUSH1 0x4
0x1641 ADD
0x1642 DUP1
0x1643 DUP4
0x1644 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1659 AND
0x165a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166f AND
0x1670 DUP2
0x1671 MSTORE
0x1672 PUSH1 0x20
0x1674 ADD
0x1675 DUP3
0x1676 DUP2
0x1677 MSTORE
0x1678 PUSH1 0x20
0x167a ADD
0x167b SWAP3
0x167c POP
0x167d POP
0x167e POP
0x167f PUSH1 0x20
0x1681 PUSH1 0x40
0x1683 MLOAD
0x1684 DUP1
0x1685 DUP4
0x1686 SUB
0x1687 DUP2
0x1688 PUSH1 0x0
0x168a DUP8
0x168b DUP1
0x168c EXTCODESIZE
0x168d ISZERO
0x168e DUP1
0x168f ISZERO
0x1690 PUSH2 0x10f5
0x1693 JUMPI
---
0x1588: V1182 = 0x40
0x158a: V1183 = M[0x40]
0x158b: V1184 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x15ad: M[V1183] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x15ae: V1185 = 0x4
0x15b0: V1186 = ADD 0x4 V1183
0x15b3: V1187 = 0x20
0x15b5: V1188 = ADD 0x20 V1186
0x15b8: V1189 = SUB V1188 V1186
0x15ba: M[V1186] = V1189
0x15bb: V1190 = 0x13
0x15be: M[V1188] = 0x13
0x15bf: V1191 = 0x20
0x15c1: V1192 = ADD 0x20 V1188
0x15c3: V1193 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x15e5: M[V1192] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x15e7: V1194 = 0x20
0x15e9: V1195 = ADD 0x20 V1192
0x15ed: V1196 = 0x40
0x15ef: V1197 = M[0x40]
0x15f2: V1198 = SUB V1195 V1197
0x15f4: REVERT V1197 V1198
0x15f5: JUMPDEST 
0x15f7: V1199 = 0xffffffffffffffffffffffffffffffffffffffff
0x160c: V1200 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x160d: V1201 = 0xa9059cbb
0x1614: V1202 = 0x40
0x1616: V1203 = M[0x40]
0x1618: V1204 = 0xffffffff
0x161d: V1205 = AND 0xffffffff 0xa9059cbb
0x161e: V1206 = 0x100000000000000000000000000000000000000000000000000000000
0x163c: V1207 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x163e: M[V1203] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x163f: V1208 = 0x4
0x1641: V1209 = ADD 0x4 V1203
0x1644: V1210 = 0xffffffffffffffffffffffffffffffffffffffff
0x1659: V1211 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x165a: V1212 = 0xffffffffffffffffffffffffffffffffffffffff
0x166f: V1213 = AND 0xffffffffffffffffffffffffffffffffffffffff V1211
0x1671: M[V1209] = V1213
0x1672: V1214 = 0x20
0x1674: V1215 = ADD 0x20 V1209
0x1677: M[V1215] = S1
0x1678: V1216 = 0x20
0x167a: V1217 = ADD 0x20 V1215
0x167f: V1218 = 0x20
0x1681: V1219 = 0x40
0x1683: V1220 = M[0x40]
0x1686: V1221 = SUB V1217 V1220
0x1688: V1222 = 0x0
0x168c: V1223 = EXTCODESIZE V1200
0x168d: V1224 = ISZERO V1223
0x168f: V1225 = ISZERO V1224
0x1690: V1226 = 0x10f5
0x1693: THROWI V1225
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1224, V1200, 0x0, V1220, V1221, V1220, 0x20, V1217, 0xa9059cbb, V1200, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x1694
[0x1694:0x16a2]
---
Predecessors: [0x1588]
Successors: [0x16a3]
---
0x1694 PUSH1 0x0
0x1696 DUP1
0x1697 REVERT
0x1698 JUMPDEST
0x1699 POP
0x169a GAS
0x169b CALL
0x169c ISZERO
0x169d DUP1
0x169e ISZERO
0x169f PUSH2 0x1109
0x16a2 JUMPI
---
0x1694: V1227 = 0x0
0x1697: REVERT 0x0 0x0
0x1698: JUMPDEST 
0x169a: V1228 = GAS
0x169b: V1229 = CALL V1228 S1 S2 S3 S4 S5 S6
0x169c: V1230 = ISZERO V1229
0x169e: V1231 = ISZERO V1230
0x169f: V1232 = 0x1109
0x16a2: THROWI V1231
---
Entry stack: [S13, S12, S11, S10, V1200, 0xa9059cbb, V1217, 0x20, V1220, V1221, V1220, 0x0, V1200, V1224]
Stack pops: 0
Stack additions: [V1230]
Exit stack: []

================================

Block 0x16a3
[0x16a3:0x16bd]
---
Predecessors: [0x1694]
Successors: [0x16be]
---
0x16a3 RETURNDATASIZE
0x16a4 PUSH1 0x0
0x16a6 DUP1
0x16a7 RETURNDATACOPY
0x16a8 RETURNDATASIZE
0x16a9 PUSH1 0x0
0x16ab REVERT
0x16ac JUMPDEST
0x16ad POP
0x16ae POP
0x16af POP
0x16b0 POP
0x16b1 PUSH1 0x40
0x16b3 MLOAD
0x16b4 RETURNDATASIZE
0x16b5 PUSH1 0x20
0x16b7 DUP2
0x16b8 LT
0x16b9 ISZERO
0x16ba PUSH2 0x111f
0x16bd JUMPI
---
0x16a3: V1233 = RETURNDATASIZE
0x16a4: V1234 = 0x0
0x16a7: RETURNDATACOPY 0x0 0x0 V1233
0x16a8: V1235 = RETURNDATASIZE
0x16a9: V1236 = 0x0
0x16ab: REVERT 0x0 V1235
0x16ac: JUMPDEST 
0x16b1: V1237 = 0x40
0x16b3: V1238 = M[0x40]
0x16b4: V1239 = RETURNDATASIZE
0x16b5: V1240 = 0x20
0x16b8: V1241 = LT V1239 0x20
0x16b9: V1242 = ISZERO V1241
0x16ba: V1243 = 0x111f
0x16bd: THROWI V1242
---
Entry stack: [V1230]
Stack pops: 0
Stack additions: [V1239, V1238]
Exit stack: []

================================

Block 0x16be
[0x16be:0x1738]
---
Predecessors: [0x16a3]
Successors: [0x1739]
---
0x16be PUSH1 0x0
0x16c0 DUP1
0x16c1 REVERT
0x16c2 JUMPDEST
0x16c3 DUP2
0x16c4 ADD
0x16c5 SWAP1
0x16c6 DUP1
0x16c7 DUP1
0x16c8 MLOAD
0x16c9 SWAP1
0x16ca PUSH1 0x20
0x16cc ADD
0x16cd SWAP1
0x16ce SWAP3
0x16cf SWAP2
0x16d0 SWAP1
0x16d1 POP
0x16d2 POP
0x16d3 POP
0x16d4 SWAP1
0x16d5 POP
0x16d6 SWAP4
0x16d7 SWAP3
0x16d8 POP
0x16d9 POP
0x16da POP
0x16db JUMP
0x16dc JUMPDEST
0x16dd PUSH1 0x4
0x16df SLOAD
0x16e0 DUP2
0x16e1 JUMP
0x16e2 JUMPDEST
0x16e3 PUSH1 0x0
0x16e5 DUP1
0x16e6 SWAP1
0x16e7 SLOAD
0x16e8 SWAP1
0x16e9 PUSH2 0x100
0x16ec EXP
0x16ed SWAP1
0x16ee DIV
0x16ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1704 AND
0x1705 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171a AND
0x171b CALLER
0x171c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1731 AND
0x1732 EQ
0x1733 ISZERO
0x1734 ISZERO
0x1735 PUSH2 0x1203
0x1738 JUMPI
---
0x16be: V1244 = 0x0
0x16c1: REVERT 0x0 0x0
0x16c2: JUMPDEST 
0x16c4: V1245 = ADD S1 S0
0x16c8: V1246 = M[S1]
0x16ca: V1247 = 0x20
0x16cc: V1248 = ADD 0x20 S1
0x16db: JUMP S6
0x16dc: JUMPDEST 
0x16dd: V1249 = 0x4
0x16df: V1250 = S[0x4]
0x16e1: JUMP S0
0x16e2: JUMPDEST 
0x16e3: V1251 = 0x0
0x16e7: V1252 = S[0x0]
0x16e9: V1253 = 0x100
0x16ec: V1254 = EXP 0x100 0x0
0x16ee: V1255 = DIV V1252 0x1
0x16ef: V1256 = 0xffffffffffffffffffffffffffffffffffffffff
0x1704: V1257 = AND 0xffffffffffffffffffffffffffffffffffffffff V1255
0x1705: V1258 = 0xffffffffffffffffffffffffffffffffffffffff
0x171a: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffff V1257
0x171b: V1260 = CALLER
0x171c: V1261 = 0xffffffffffffffffffffffffffffffffffffffff
0x1731: V1262 = AND 0xffffffffffffffffffffffffffffffffffffffff V1260
0x1732: V1263 = EQ V1262 V1259
0x1733: V1264 = ISZERO V1263
0x1734: V1265 = ISZERO V1264
0x1735: V1266 = 0x1203
0x1738: THROWI V1265
---
Entry stack: [V1238, V1239]
Stack pops: 0
Stack additions: [V1246, V1250, S0]
Exit stack: []

================================

Block 0x1739
[0x1739:0x1826]
---
Predecessors: [0x16be]
Successors: [0x1827]
---
0x1739 PUSH1 0x40
0x173b MLOAD
0x173c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x175d DUP2
0x175e MSTORE
0x175f PUSH1 0x4
0x1761 ADD
0x1762 DUP1
0x1763 DUP1
0x1764 PUSH1 0x20
0x1766 ADD
0x1767 DUP3
0x1768 DUP2
0x1769 SUB
0x176a DUP3
0x176b MSTORE
0x176c PUSH1 0x13
0x176e DUP2
0x176f MSTORE
0x1770 PUSH1 0x20
0x1772 ADD
0x1773 DUP1
0x1774 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1795 DUP2
0x1796 MSTORE
0x1797 POP
0x1798 PUSH1 0x20
0x179a ADD
0x179b SWAP2
0x179c POP
0x179d POP
0x179e PUSH1 0x40
0x17a0 MLOAD
0x17a1 DUP1
0x17a2 SWAP2
0x17a3 SUB
0x17a4 SWAP1
0x17a5 REVERT
0x17a6 JUMPDEST
0x17a7 DUP1
0x17a8 PUSH1 0x4
0x17aa DUP2
0x17ab SWAP1
0x17ac SSTORE
0x17ad POP
0x17ae PUSH2 0x1223
0x17b1 PUSH4 0x114db00
0x17b6 PUSH1 0x4
0x17b8 SLOAD
0x17b9 PUSH2 0xf3c
0x17bc SWAP1
0x17bd SWAP2
0x17be SWAP1
0x17bf PUSH4 0xffffffff
0x17c4 AND
0x17c5 JUMP
0x17c6 JUMPDEST
0x17c7 PUSH1 0x5
0x17c9 DUP2
0x17ca SWAP1
0x17cb SSTORE
0x17cc POP
0x17cd POP
0x17ce JUMP
0x17cf JUMPDEST
0x17d0 PUSH1 0x1
0x17d2 PUSH1 0x0
0x17d4 SWAP1
0x17d5 SLOAD
0x17d6 SWAP1
0x17d7 PUSH2 0x100
0x17da EXP
0x17db SWAP1
0x17dc DIV
0x17dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f2 AND
0x17f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1808 AND
0x1809 CALLER
0x180a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181f AND
0x1820 EQ
0x1821 ISZERO
0x1822 ISZERO
0x1823 PUSH2 0x12f1
0x1826 JUMPI
---
0x1739: V1267 = 0x40
0x173b: V1268 = M[0x40]
0x173c: V1269 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x175e: M[V1268] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x175f: V1270 = 0x4
0x1761: V1271 = ADD 0x4 V1268
0x1764: V1272 = 0x20
0x1766: V1273 = ADD 0x20 V1271
0x1769: V1274 = SUB V1273 V1271
0x176b: M[V1271] = V1274
0x176c: V1275 = 0x13
0x176f: M[V1273] = 0x13
0x1770: V1276 = 0x20
0x1772: V1277 = ADD 0x20 V1273
0x1774: V1278 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1796: M[V1277] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1798: V1279 = 0x20
0x179a: V1280 = ADD 0x20 V1277
0x179e: V1281 = 0x40
0x17a0: V1282 = M[0x40]
0x17a3: V1283 = SUB V1280 V1282
0x17a5: REVERT V1282 V1283
0x17a6: JUMPDEST 
0x17a8: V1284 = 0x4
0x17ac: S[0x4] = S0
0x17ae: V1285 = 0x1223
0x17b1: V1286 = 0x114db00
0x17b6: V1287 = 0x4
0x17b8: V1288 = S[0x4]
0x17b9: V1289 = 0xf3c
0x17bf: V1290 = 0xffffffff
0x17c4: V1291 = AND 0xffffffff 0xf3c
0x17c5: THROW 
0x17c6: JUMPDEST 
0x17c7: V1292 = 0x5
0x17cb: S[0x5] = S0
0x17ce: JUMP S2
0x17cf: JUMPDEST 
0x17d0: V1293 = 0x1
0x17d2: V1294 = 0x0
0x17d5: V1295 = S[0x1]
0x17d7: V1296 = 0x100
0x17da: V1297 = EXP 0x100 0x0
0x17dc: V1298 = DIV V1295 0x1
0x17dd: V1299 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f2: V1300 = AND 0xffffffffffffffffffffffffffffffffffffffff V1298
0x17f3: V1301 = 0xffffffffffffffffffffffffffffffffffffffff
0x1808: V1302 = AND 0xffffffffffffffffffffffffffffffffffffffff V1300
0x1809: V1303 = CALLER
0x180a: V1304 = 0xffffffffffffffffffffffffffffffffffffffff
0x181f: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffff V1303
0x1820: V1306 = EQ V1305 V1302
0x1821: V1307 = ISZERO V1306
0x1822: V1308 = ISZERO V1307
0x1823: V1309 = 0x12f1
0x1826: THROWI V1308
---
Entry stack: []
Stack pops: 0
Stack additions: [0x114db00, V1288, 0x1223, S0]
Exit stack: []

================================

Block 0x1827
[0x1827:0x1a98]
---
Predecessors: [0x1739]
Successors: [0x1a99]
---
0x1827 PUSH1 0x40
0x1829 MLOAD
0x182a PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x184b DUP2
0x184c MSTORE
0x184d PUSH1 0x4
0x184f ADD
0x1850 DUP1
0x1851 DUP1
0x1852 PUSH1 0x20
0x1854 ADD
0x1855 DUP3
0x1856 DUP2
0x1857 SUB
0x1858 DUP3
0x1859 MSTORE
0x185a PUSH1 0x16
0x185c DUP2
0x185d MSTORE
0x185e PUSH1 0x20
0x1860 ADD
0x1861 DUP1
0x1862 PUSH32 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x1883 DUP2
0x1884 MSTORE
0x1885 POP
0x1886 PUSH1 0x20
0x1888 ADD
0x1889 SWAP2
0x188a POP
0x188b POP
0x188c PUSH1 0x40
0x188e MLOAD
0x188f DUP1
0x1890 SWAP2
0x1891 SUB
0x1892 SWAP1
0x1893 REVERT
0x1894 JUMPDEST
0x1895 CALLER
0x1896 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18ab AND
0x18ac PUSH1 0x0
0x18ae DUP1
0x18af SWAP1
0x18b0 SLOAD
0x18b1 SWAP1
0x18b2 PUSH2 0x100
0x18b5 EXP
0x18b6 SWAP1
0x18b7 DIV
0x18b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18cd AND
0x18ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e3 AND
0x18e4 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1905 PUSH1 0x40
0x1907 MLOAD
0x1908 PUSH1 0x40
0x190a MLOAD
0x190b DUP1
0x190c SWAP2
0x190d SUB
0x190e SWAP1
0x190f LOG3
0x1910 CALLER
0x1911 PUSH1 0x0
0x1913 DUP1
0x1914 PUSH2 0x100
0x1917 EXP
0x1918 DUP2
0x1919 SLOAD
0x191a DUP2
0x191b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1930 MUL
0x1931 NOT
0x1932 AND
0x1933 SWAP1
0x1934 DUP4
0x1935 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194a AND
0x194b MUL
0x194c OR
0x194d SWAP1
0x194e SSTORE
0x194f POP
0x1950 PUSH1 0x0
0x1952 PUSH1 0x1
0x1954 PUSH1 0x0
0x1956 PUSH2 0x100
0x1959 EXP
0x195a DUP2
0x195b SLOAD
0x195c DUP2
0x195d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1972 MUL
0x1973 NOT
0x1974 AND
0x1975 SWAP1
0x1976 DUP4
0x1977 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198c AND
0x198d MUL
0x198e OR
0x198f SWAP1
0x1990 SSTORE
0x1991 POP
0x1992 JUMP
0x1993 JUMPDEST
0x1994 PUSH1 0x3
0x1996 PUSH1 0x0
0x1998 SWAP1
0x1999 SLOAD
0x199a SWAP1
0x199b PUSH2 0x100
0x199e EXP
0x199f SWAP1
0x19a0 DIV
0x19a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19b6 AND
0x19b7 DUP2
0x19b8 JUMP
0x19b9 JUMPDEST
0x19ba PUSH1 0x0
0x19bc DUP1
0x19bd SWAP1
0x19be SLOAD
0x19bf SWAP1
0x19c0 PUSH2 0x100
0x19c3 EXP
0x19c4 SWAP1
0x19c5 DIV
0x19c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19db AND
0x19dc DUP2
0x19dd JUMP
0x19de JUMPDEST
0x19df PUSH1 0x1
0x19e1 PUSH1 0x0
0x19e3 SWAP1
0x19e4 SLOAD
0x19e5 SWAP1
0x19e6 PUSH2 0x100
0x19e9 EXP
0x19ea SWAP1
0x19eb DIV
0x19ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a01 AND
0x1a02 DUP2
0x1a03 JUMP
0x1a04 JUMPDEST
0x1a05 PUSH1 0x2
0x1a07 PUSH1 0x0
0x1a09 SWAP1
0x1a0a SLOAD
0x1a0b SWAP1
0x1a0c PUSH2 0x100
0x1a0f EXP
0x1a10 SWAP1
0x1a11 DIV
0x1a12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a27 AND
0x1a28 DUP2
0x1a29 JUMP
0x1a2a JUMPDEST
0x1a2b PUSH1 0x7
0x1a2d PUSH1 0x20
0x1a2f MSTORE
0x1a30 DUP1
0x1a31 PUSH1 0x0
0x1a33 MSTORE
0x1a34 PUSH1 0x40
0x1a36 PUSH1 0x0
0x1a38 SHA3
0x1a39 PUSH1 0x0
0x1a3b SWAP2
0x1a3c POP
0x1a3d SWAP1
0x1a3e POP
0x1a3f SLOAD
0x1a40 DUP2
0x1a41 JUMP
0x1a42 JUMPDEST
0x1a43 PUSH1 0x0
0x1a45 DUP1
0x1a46 SWAP1
0x1a47 SLOAD
0x1a48 SWAP1
0x1a49 PUSH2 0x100
0x1a4c EXP
0x1a4d SWAP1
0x1a4e DIV
0x1a4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a64 AND
0x1a65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7a AND
0x1a7b CALLER
0x1a7c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a91 AND
0x1a92 EQ
0x1a93 ISZERO
0x1a94 ISZERO
0x1a95 PUSH2 0x1563
0x1a98 JUMPI
---
0x1827: V1310 = 0x40
0x1829: V1311 = M[0x40]
0x182a: V1312 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x184c: M[V1311] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x184d: V1313 = 0x4
0x184f: V1314 = ADD 0x4 V1311
0x1852: V1315 = 0x20
0x1854: V1316 = ADD 0x20 V1314
0x1857: V1317 = SUB V1316 V1314
0x1859: M[V1314] = V1317
0x185a: V1318 = 0x16
0x185d: M[V1316] = 0x16
0x185e: V1319 = 0x20
0x1860: V1320 = ADD 0x20 V1316
0x1862: V1321 = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x1884: M[V1320] = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0x1886: V1322 = 0x20
0x1888: V1323 = ADD 0x20 V1320
0x188c: V1324 = 0x40
0x188e: V1325 = M[0x40]
0x1891: V1326 = SUB V1323 V1325
0x1893: REVERT V1325 V1326
0x1894: JUMPDEST 
0x1895: V1327 = CALLER
0x1896: V1328 = 0xffffffffffffffffffffffffffffffffffffffff
0x18ab: V1329 = AND 0xffffffffffffffffffffffffffffffffffffffff V1327
0x18ac: V1330 = 0x0
0x18b0: V1331 = S[0x0]
0x18b2: V1332 = 0x100
0x18b5: V1333 = EXP 0x100 0x0
0x18b7: V1334 = DIV V1331 0x1
0x18b8: V1335 = 0xffffffffffffffffffffffffffffffffffffffff
0x18cd: V1336 = AND 0xffffffffffffffffffffffffffffffffffffffff V1334
0x18ce: V1337 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e3: V1338 = AND 0xffffffffffffffffffffffffffffffffffffffff V1336
0x18e4: V1339 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1905: V1340 = 0x40
0x1907: V1341 = M[0x40]
0x1908: V1342 = 0x40
0x190a: V1343 = M[0x40]
0x190d: V1344 = SUB V1341 V1343
0x190f: LOG V1343 V1344 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1338 V1329
0x1910: V1345 = CALLER
0x1911: V1346 = 0x0
0x1914: V1347 = 0x100
0x1917: V1348 = EXP 0x100 0x0
0x1919: V1349 = S[0x0]
0x191b: V1350 = 0xffffffffffffffffffffffffffffffffffffffff
0x1930: V1351 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1931: V1352 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1932: V1353 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1349
0x1935: V1354 = 0xffffffffffffffffffffffffffffffffffffffff
0x194a: V1355 = AND 0xffffffffffffffffffffffffffffffffffffffff V1345
0x194b: V1356 = MUL V1355 0x1
0x194c: V1357 = OR V1356 V1353
0x194e: S[0x0] = V1357
0x1950: V1358 = 0x0
0x1952: V1359 = 0x1
0x1954: V1360 = 0x0
0x1956: V1361 = 0x100
0x1959: V1362 = EXP 0x100 0x0
0x195b: V1363 = S[0x1]
0x195d: V1364 = 0xffffffffffffffffffffffffffffffffffffffff
0x1972: V1365 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1973: V1366 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1974: V1367 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1363
0x1977: V1368 = 0xffffffffffffffffffffffffffffffffffffffff
0x198c: V1369 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x198d: V1370 = MUL 0x0 0x1
0x198e: V1371 = OR 0x0 V1367
0x1990: S[0x1] = V1371
0x1992: JUMP S0
0x1993: JUMPDEST 
0x1994: V1372 = 0x3
0x1996: V1373 = 0x0
0x1999: V1374 = S[0x3]
0x199b: V1375 = 0x100
0x199e: V1376 = EXP 0x100 0x0
0x19a0: V1377 = DIV V1374 0x1
0x19a1: V1378 = 0xffffffffffffffffffffffffffffffffffffffff
0x19b6: V1379 = AND 0xffffffffffffffffffffffffffffffffffffffff V1377
0x19b8: JUMP S0
0x19b9: JUMPDEST 
0x19ba: V1380 = 0x0
0x19be: V1381 = S[0x0]
0x19c0: V1382 = 0x100
0x19c3: V1383 = EXP 0x100 0x0
0x19c5: V1384 = DIV V1381 0x1
0x19c6: V1385 = 0xffffffffffffffffffffffffffffffffffffffff
0x19db: V1386 = AND 0xffffffffffffffffffffffffffffffffffffffff V1384
0x19dd: JUMP S0
0x19de: JUMPDEST 
0x19df: V1387 = 0x1
0x19e1: V1388 = 0x0
0x19e4: V1389 = S[0x1]
0x19e6: V1390 = 0x100
0x19e9: V1391 = EXP 0x100 0x0
0x19eb: V1392 = DIV V1389 0x1
0x19ec: V1393 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a01: V1394 = AND 0xffffffffffffffffffffffffffffffffffffffff V1392
0x1a03: JUMP S0
0x1a04: JUMPDEST 
0x1a05: V1395 = 0x2
0x1a07: V1396 = 0x0
0x1a0a: V1397 = S[0x2]
0x1a0c: V1398 = 0x100
0x1a0f: V1399 = EXP 0x100 0x0
0x1a11: V1400 = DIV V1397 0x1
0x1a12: V1401 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a27: V1402 = AND 0xffffffffffffffffffffffffffffffffffffffff V1400
0x1a29: JUMP S0
0x1a2a: JUMPDEST 
0x1a2b: V1403 = 0x7
0x1a2d: V1404 = 0x20
0x1a2f: M[0x20] = 0x7
0x1a31: V1405 = 0x0
0x1a33: M[0x0] = S0
0x1a34: V1406 = 0x40
0x1a36: V1407 = 0x0
0x1a38: V1408 = SHA3 0x0 0x40
0x1a39: V1409 = 0x0
0x1a3f: V1410 = S[V1408]
0x1a41: JUMP S1
0x1a42: JUMPDEST 
0x1a43: V1411 = 0x0
0x1a47: V1412 = S[0x0]
0x1a49: V1413 = 0x100
0x1a4c: V1414 = EXP 0x100 0x0
0x1a4e: V1415 = DIV V1412 0x1
0x1a4f: V1416 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a64: V1417 = AND 0xffffffffffffffffffffffffffffffffffffffff V1415
0x1a65: V1418 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7a: V1419 = AND 0xffffffffffffffffffffffffffffffffffffffff V1417
0x1a7b: V1420 = CALLER
0x1a7c: V1421 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a91: V1422 = AND 0xffffffffffffffffffffffffffffffffffffffff V1420
0x1a92: V1423 = EQ V1422 V1419
0x1a93: V1424 = ISZERO V1423
0x1a94: V1425 = ISZERO V1424
0x1a95: V1426 = 0x1563
0x1a98: THROWI V1425
---
Entry stack: []
Stack pops: 0
Stack additions: [V1379, S0, V1386, S0, V1394, S0, V1402, S0, V1410, S1]
Exit stack: []

================================

Block 0x1a99
[0x1a99:0x1b3d]
---
Predecessors: [0x1827]
Successors: [0x1b3e]
---
0x1a99 PUSH1 0x40
0x1a9b MLOAD
0x1a9c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1abd DUP2
0x1abe MSTORE
0x1abf PUSH1 0x4
0x1ac1 ADD
0x1ac2 DUP1
0x1ac3 DUP1
0x1ac4 PUSH1 0x20
0x1ac6 ADD
0x1ac7 DUP3
0x1ac8 DUP2
0x1ac9 SUB
0x1aca DUP3
0x1acb MSTORE
0x1acc PUSH1 0x13
0x1ace DUP2
0x1acf MSTORE
0x1ad0 PUSH1 0x20
0x1ad2 ADD
0x1ad3 DUP1
0x1ad4 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1af5 DUP2
0x1af6 MSTORE
0x1af7 POP
0x1af8 PUSH1 0x20
0x1afa ADD
0x1afb SWAP2
0x1afc POP
0x1afd POP
0x1afe PUSH1 0x40
0x1b00 MLOAD
0x1b01 DUP1
0x1b02 SWAP2
0x1b03 SUB
0x1b04 SWAP1
0x1b05 REVERT
0x1b06 JUMPDEST
0x1b07 DUP1
0x1b08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1d AND
0x1b1e PUSH1 0x0
0x1b20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b35 AND
0x1b36 EQ
0x1b37 ISZERO
0x1b38 ISZERO
0x1b39 ISZERO
0x1b3a PUSH2 0x1608
0x1b3d JUMPI
---
0x1a99: V1427 = 0x40
0x1a9b: V1428 = M[0x40]
0x1a9c: V1429 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1abe: M[V1428] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1abf: V1430 = 0x4
0x1ac1: V1431 = ADD 0x4 V1428
0x1ac4: V1432 = 0x20
0x1ac6: V1433 = ADD 0x20 V1431
0x1ac9: V1434 = SUB V1433 V1431
0x1acb: M[V1431] = V1434
0x1acc: V1435 = 0x13
0x1acf: M[V1433] = 0x13
0x1ad0: V1436 = 0x20
0x1ad2: V1437 = ADD 0x20 V1433
0x1ad4: V1438 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1af6: M[V1437] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x1af8: V1439 = 0x20
0x1afa: V1440 = ADD 0x20 V1437
0x1afe: V1441 = 0x40
0x1b00: V1442 = M[0x40]
0x1b03: V1443 = SUB V1440 V1442
0x1b05: REVERT V1442 V1443
0x1b06: JUMPDEST 
0x1b08: V1444 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1d: V1445 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1b1e: V1446 = 0x0
0x1b20: V1447 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b35: V1448 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1b36: V1449 = EQ 0x0 V1445
0x1b37: V1450 = ISZERO V1449
0x1b38: V1451 = ISZERO V1450
0x1b39: V1452 = ISZERO V1451
0x1b3a: V1453 = 0x1608
0x1b3d: THROWI V1452
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1b3e
[0x1b3e:0x1c1a]
---
Predecessors: [0x1a99]
Successors: []
---
0x1b3e PUSH1 0x40
0x1b40 MLOAD
0x1b41 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1b62 DUP2
0x1b63 MSTORE
0x1b64 PUSH1 0x4
0x1b66 ADD
0x1b67 DUP1
0x1b68 DUP1
0x1b69 PUSH1 0x20
0x1b6b ADD
0x1b6c DUP3
0x1b6d DUP2
0x1b6e SUB
0x1b6f DUP3
0x1b70 MSTORE
0x1b71 PUSH1 0x17
0x1b73 DUP2
0x1b74 MSTORE
0x1b75 PUSH1 0x20
0x1b77 ADD
0x1b78 DUP1
0x1b79 PUSH32 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x1b9a DUP2
0x1b9b MSTORE
0x1b9c POP
0x1b9d PUSH1 0x20
0x1b9f ADD
0x1ba0 SWAP2
0x1ba1 POP
0x1ba2 POP
0x1ba3 PUSH1 0x40
0x1ba5 MLOAD
0x1ba6 DUP1
0x1ba7 SWAP2
0x1ba8 SUB
0x1ba9 SWAP1
0x1baa REVERT
0x1bab JUMPDEST
0x1bac DUP1
0x1bad PUSH1 0x1
0x1baf PUSH1 0x0
0x1bb1 PUSH2 0x100
0x1bb4 EXP
0x1bb5 DUP2
0x1bb6 SLOAD
0x1bb7 DUP2
0x1bb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bcd MUL
0x1bce NOT
0x1bcf AND
0x1bd0 SWAP1
0x1bd1 DUP4
0x1bd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be7 AND
0x1be8 MUL
0x1be9 OR
0x1bea SWAP1
0x1beb SSTORE
0x1bec POP
0x1bed POP
0x1bee JUMP
0x1bef STOP
0x1bf0 LOG1
0x1bf1 PUSH6 0x627a7a723058
0x1bf8 SHA3
0x1bf9 MISSING 0xa7
0x1bfa SWAP2
0x1bfb MISSING 0xbd
0x1bfc MISSING 0x23
0x1bfd PUSH24 0x3bf3ab1d7b95d33f319ff79387b24733238b0e581e316e7f
0x1c16 MISSING 0x25
0x1c17 MISSING 0xe1
0x1c18 MISSING 0x1e
0x1c19 STOP
0x1c1a MISSING 0x29
---
0x1b3e: V1454 = 0x40
0x1b40: V1455 = M[0x40]
0x1b41: V1456 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1b63: M[V1455] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1b64: V1457 = 0x4
0x1b66: V1458 = ADD 0x4 V1455
0x1b69: V1459 = 0x20
0x1b6b: V1460 = ADD 0x20 V1458
0x1b6e: V1461 = SUB V1460 V1458
0x1b70: M[V1458] = V1461
0x1b71: V1462 = 0x17
0x1b74: M[V1460] = 0x17
0x1b75: V1463 = 0x20
0x1b77: V1464 = ADD 0x20 V1460
0x1b79: V1465 = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x1b9b: M[V1464] = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0x1b9d: V1466 = 0x20
0x1b9f: V1467 = ADD 0x20 V1464
0x1ba3: V1468 = 0x40
0x1ba5: V1469 = M[0x40]
0x1ba8: V1470 = SUB V1467 V1469
0x1baa: REVERT V1469 V1470
0x1bab: JUMPDEST 
0x1bad: V1471 = 0x1
0x1baf: V1472 = 0x0
0x1bb1: V1473 = 0x100
0x1bb4: V1474 = EXP 0x100 0x0
0x1bb6: V1475 = S[0x1]
0x1bb8: V1476 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bcd: V1477 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1bce: V1478 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1bcf: V1479 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1475
0x1bd2: V1480 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be7: V1481 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1be8: V1482 = MUL V1481 0x1
0x1be9: V1483 = OR V1482 V1479
0x1beb: S[0x1] = V1483
0x1bee: JUMP S1
0x1bef: STOP 
0x1bf0: LOG S0 S1 S2
0x1bf1: V1484 = 0x627a7a723058
0x1bf8: V1485 = SHA3 0x627a7a723058 S3
0x1bf9: MISSING 0xa7
0x1bfb: MISSING 0xbd
0x1bfc: MISSING 0x23
0x1bfd: V1486 = 0x3bf3ab1d7b95d33f319ff79387b24733238b0e581e316e7f
0x1c16: MISSING 0x25
0x1c17: MISSING 0xe1
0x1c18: MISSING 0x1e
0x1c19: STOP 
0x1c1a: MISSING 0x29
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V1485, S2, S1, S0, 0x3bf3ab1d7b95d33f319ff79387b24733238b0e581e316e7f]
Exit stack: []

================================

Function 0:
Public function signature: 0x79ba5097
Entry block: 0x67
Exit block: 0x7c
Body: 0x67, 0x6f, 0x73, 0x7c, 0x16f, 0x1c7, 0x234

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x7e
Exit block: 0x93
Body: 0x7e, 0x86, 0x8a, 0x93, 0x333

Function 2:
Public function signature: 0xd4ee1d90
Entry block: 0xd5
Exit block: 0xea
Body: 0xd5, 0xdd, 0xe1, 0xea, 0x358

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x12c
Exit block: 0x16d
Body: 0x12c, 0x134, 0x138, 0x16d, 0x37e, 0x3d5, 0x442, 0x47a, 0x4e7

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

