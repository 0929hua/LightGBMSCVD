Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x48bfe40f
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x48bfe40f
0x3c: V13 = EQ 0x48bfe40f V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xde]
---
0x41 DUP1
0x42 PUSH4 0x4fb2e45d
0x47 EQ
0x48 PUSH2 0xde
0x4b JUMPI
---
0x42: V15 = 0x4fb2e45d
0x47: V16 = EQ 0x4fb2e45d V11
0x48: V17 = 0xde
0x4b: JUMPI 0xde V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x117]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x117
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x117
0x56: JUMPI 0x117 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0xdb]
---
Predecessors: [0x5c]
Successors: [0x16c]
---
0x67 JUMPDEST
0x68 PUSH2 0xdc
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 DUP3
0x76 ADD
0x77 DUP1
0x78 CALLDATALOAD
0x79 SWAP1
0x7a PUSH1 0x20
0x7c ADD
0x7d SWAP1
0x7e DUP1
0x7f DUP1
0x80 PUSH1 0x20
0x82 MUL
0x83 PUSH1 0x20
0x85 ADD
0x86 PUSH1 0x40
0x88 MLOAD
0x89 SWAP1
0x8a DUP2
0x8b ADD
0x8c PUSH1 0x40
0x8e MSTORE
0x8f DUP1
0x90 SWAP4
0x91 SWAP3
0x92 SWAP2
0x93 SWAP1
0x94 DUP2
0x95 DUP2
0x96 MSTORE
0x97 PUSH1 0x20
0x99 ADD
0x9a DUP4
0x9b DUP4
0x9c PUSH1 0x20
0x9e MUL
0x9f DUP1
0xa0 DUP3
0xa1 DUP5
0xa2 CALLDATACOPY
0xa3 DUP3
0xa4 ADD
0xa5 SWAP2
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac SWAP2
0xad SWAP1
0xae DUP1
0xaf CALLDATALOAD
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 SWAP2
0xb6 SWAP1
0xb7 DUP1
0xb8 CALLDATALOAD
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce AND
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 SWAP2
0xd5 SWAP1
0xd6 POP
0xd7 POP
0xd8 PUSH2 0x16c
0xdb JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0xdc
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x71: V29 = 0x20
0x73: V30 = ADD 0x20 0x4
0x76: V31 = ADD 0x4 V28
0x78: V32 = CALLDATALOAD V31
0x7a: V33 = 0x20
0x7c: V34 = ADD 0x20 V31
0x80: V35 = 0x20
0x82: V36 = MUL 0x20 V32
0x83: V37 = 0x20
0x85: V38 = ADD 0x20 V36
0x86: V39 = 0x40
0x88: V40 = M[0x40]
0x8b: V41 = ADD V40 V38
0x8c: V42 = 0x40
0x8e: M[0x40] = V41
0x96: M[V40] = V32
0x97: V43 = 0x20
0x99: V44 = ADD 0x20 V40
0x9c: V45 = 0x20
0x9e: V46 = MUL 0x20 V32
0xa2: CALLDATACOPY V44 V34 V46
0xa4: V47 = ADD V44 V46
0xaf: V48 = CALLDATALOAD 0x24
0xb1: V49 = 0x20
0xb3: V50 = ADD 0x20 0x24
0xb8: V51 = CALLDATALOAD 0x44
0xb9: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xd0: V54 = 0x20
0xd2: V55 = ADD 0x20 0x44
0xd8: V56 = 0x16c
0xdb: JUMP 0x16c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdc, V40, V48, V53]
Exit stack: [V11, 0xdc, V40, V48, V53]

================================

Block 0xdc
[0xdc:0xdd]
---
Predecessors: [0x2c0]
Successors: []
---
0xdc JUMPDEST
0xdd STOP
---
0xdc: JUMPDEST 
0xdd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe4]
---
Predecessors: [0x41]
Successors: [0xe5, 0xe9]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xde: JUMPDEST 
0xdf: V57 = CALLVALUE
0xe0: V58 = ISZERO V57
0xe1: V59 = 0xe9
0xe4: JUMPI 0xe9 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xde]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V60 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe9
[0xe9:0x114]
---
Predecessors: [0xde]
Successors: [0x2c6]
---
0xe9 JUMPDEST
0xea PUSH2 0x115
0xed PUSH1 0x4
0xef DUP1
0xf0 DUP1
0xf1 CALLDATALOAD
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 SWAP1
0x109 PUSH1 0x20
0x10b ADD
0x10c SWAP1
0x10d SWAP2
0x10e SWAP1
0x10f POP
0x110 POP
0x111 PUSH2 0x2c6
0x114 JUMP
---
0xe9: JUMPDEST 
0xea: V61 = 0x115
0xed: V62 = 0x4
0xf1: V63 = CALLDATALOAD 0x4
0xf2: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x109: V66 = 0x20
0x10b: V67 = ADD 0x20 0x4
0x111: V68 = 0x2c6
0x114: JUMP 0x2c6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x115, V65]
Exit stack: [V11, 0x115, V65]

================================

Block 0x115
[0x115:0x116]
---
Predecessors: [0x321]
Successors: []
---
0x115 JUMPDEST
0x116 STOP
---
0x115: JUMPDEST 
0x116: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x4c]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V69 = CALLVALUE
0x119: V70 = ISZERO V69
0x11a: V71 = 0x122
0x11d: JUMPI 0x122 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V72 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x117]
Successors: [0x364]
---
0x122 JUMPDEST
0x123 PUSH2 0x12a
0x126 PUSH2 0x364
0x129 JUMP
---
0x122: JUMPDEST 
0x123: V73 = 0x12a
0x126: V74 = 0x364
0x129: JUMP 0x364
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V11, 0x12a]

================================

Block 0x12a
[0x12a:0x16b]
---
Predecessors: [0x364]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP3
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP2
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x12a: JUMPDEST 
0x12b: V75 = 0x40
0x12d: V76 = M[0x40]
0x130: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x146: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x15d: M[V76] = V80
0x15e: V81 = 0x20
0x160: V82 = ADD 0x20 V76
0x164: V83 = 0x40
0x166: V84 = M[0x40]
0x169: V85 = SUB V82 V84
0x16b: RETURN V84 V85
---
Entry stack: [V11, 0x12a, V201]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x12a]

================================

Block 0x16c
[0x16c:0x1c4]
---
Predecessors: [0x67]
Successors: [0x1c5, 0x1c9]
---
0x16c JUMPDEST
0x16d PUSH1 0x0
0x16f DUP1
0x170 PUSH1 0x0
0x172 SWAP1
0x173 SLOAD
0x174 SWAP1
0x175 PUSH2 0x100
0x178 EXP
0x179 SWAP1
0x17a DIV
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6 AND
0x1a7 CALLER
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be EQ
0x1bf ISZERO
0x1c0 ISZERO
0x1c1 PUSH2 0x1c9
0x1c4 JUMPI
---
0x16c: JUMPDEST 
0x16d: V86 = 0x0
0x170: V87 = 0x0
0x173: V88 = S[0x0]
0x175: V89 = 0x100
0x178: V90 = EXP 0x100 0x0
0x17a: V91 = DIV V88 0x1
0x17b: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x191: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1a7: V96 = CALLER
0x1a8: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1be: V99 = EQ V98 V95
0x1bf: V100 = ISZERO V99
0x1c0: V101 = ISZERO V100
0x1c1: V102 = 0x1c9
0x1c4: JUMPI 0x1c9 V101
---
Entry stack: [V11, 0xdc, V40, V48, V53]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xdc, V40, V48, V53, 0x0]

================================

Block 0x1c5
[0x1c5:0x1c8]
---
Predecessors: [0x16c]
Successors: []
---
0x1c5 PUSH1 0x0
0x1c7 DUP1
0x1c8 REVERT
---
0x1c5: V103 = 0x0
0x1c8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdc, V40, V48, V53, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V40, V48, V53, 0x0]

================================

Block 0x1c9
[0x1c9:0x1d3]
---
Predecessors: [0x16c]
Successors: [0x1d4, 0x1d8]
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x4
0x1cc DUP4
0x1cd EQ
0x1ce ISZERO
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V104 = 0x4
0x1cd: V105 = EQ V48 0x4
0x1ce: V106 = ISZERO V105
0x1cf: V107 = ISZERO V106
0x1d0: V108 = 0x1d8
0x1d3: JUMPI 0x1d8 V107
---
Entry stack: [V11, 0xdc, V40, V48, V53, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xdc, V40, V48, V53, 0x0]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1c9]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V109 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdc, V40, V48, V53, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V40, V48, V53, 0x0]

================================

Block 0x1d8
[0x1d8:0x1dc]
---
Predecessors: [0x1c9]
Successors: [0x1dd]
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x0
0x1db SWAP1
0x1dc POP
---
0x1d8: JUMPDEST 
0x1d9: V110 = 0x0
---
Entry stack: [V11, 0xdc, V40, V48, V53, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xdc, V40, V48, V53, 0x0]

================================

Block 0x1dd
[0x1dd:0x1e6]
---
Predecessors: [0x1d8, 0x2b0]
Successors: [0x1e7, 0x2c0]
---
0x1dd JUMPDEST
0x1de DUP4
0x1df MLOAD
0x1e0 DUP2
0x1e1 LT
0x1e2 ISZERO
0x1e3 PUSH2 0x2c0
0x1e6 JUMPI
---
0x1dd: JUMPDEST 
0x1df: V111 = M[V40]
0x1e1: V112 = LT S0 V111
0x1e2: V113 = ISZERO V112
0x1e3: V114 = 0x2c0
0x1e6: JUMPI 0x2c0 V113
---
Entry stack: [V11, 0xdc, V40, V48, V53, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xdc, V40, V48, V53, S0]

================================

Block 0x1e7
[0x1e7:0x20e]
---
Predecessors: [0x1dd]
Successors: [0x20f, 0x210]
---
0x1e7 DUP2
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH4 0x16603758
0x203 DUP6
0x204 DUP4
0x205 DUP2
0x206 MLOAD
0x207 DUP2
0x208 LT
0x209 ISZERO
0x20a ISZERO
0x20b PUSH2 0x210
0x20e JUMPI
---
0x1e8: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x1fe: V117 = 0x16603758
0x206: V118 = M[V40]
0x208: V119 = LT S0 V118
0x209: V120 = ISZERO V119
0x20a: V121 = ISZERO V120
0x20b: V122 = 0x210
0x20e: JUMPI 0x210 V121
---
Entry stack: [V11, 0xdc, V40, V48, V53, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V116, 0x16603758, S3, S0]
Exit stack: [V11, 0xdc, V40, V48, V53, S0, V116, 0x16603758, V40, S0]

================================

Block 0x20f
[0x20f:0x20f]
---
Predecessors: [0x1e7]
Successors: []
---
0x20f INVALID
---
0x20f: INVALID 
---
Entry stack: [V11, 0xdc, V40, V48, V53, S4, V116, 0x16603758, V40, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V40, V48, V53, S4, V116, 0x16603758, V40, S0]

================================

Block 0x210
[0x210:0x29a]
---
Predecessors: [0x1e7]
Successors: [0x29b, 0x29f]
---
0x210 JUMPDEST
0x211 SWAP1
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP1
0x216 PUSH1 0x20
0x218 MUL
0x219 ADD
0x21a MLOAD
0x21b DUP6
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP4
0x220 PUSH4 0xffffffff
0x225 AND
0x226 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x244 MUL
0x245 DUP2
0x246 MSTORE
0x247 PUSH1 0x4
0x249 ADD
0x24a DUP1
0x24b DUP4
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d DUP3
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x20
0x282 ADD
0x283 SWAP3
0x284 POP
0x285 POP
0x286 POP
0x287 PUSH1 0x0
0x289 PUSH1 0x40
0x28b MLOAD
0x28c DUP1
0x28d DUP4
0x28e SUB
0x28f DUP2
0x290 PUSH1 0x0
0x292 DUP8
0x293 DUP1
0x294 EXTCODESIZE
0x295 ISZERO
0x296 ISZERO
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x210: JUMPDEST 
0x212: V123 = 0x20
0x214: V124 = ADD 0x20 V40
0x216: V125 = 0x20
0x218: V126 = MUL 0x20 S0
0x219: V127 = ADD V126 V124
0x21a: V128 = M[V127]
0x21c: V129 = 0x40
0x21e: V130 = M[0x40]
0x220: V131 = 0xffffffff
0x225: V132 = AND 0xffffffff 0x16603758
0x226: V133 = 0x100000000000000000000000000000000000000000000000000000000
0x244: V134 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x16603758
0x246: M[V130] = 0x1660375800000000000000000000000000000000000000000000000000000000
0x247: V135 = 0x4
0x249: V136 = ADD 0x4 V130
0x24c: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x262: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x279: M[V136] = V140
0x27a: V141 = 0x20
0x27c: V142 = ADD 0x20 V136
0x27f: M[V142] = V48
0x280: V143 = 0x20
0x282: V144 = ADD 0x20 V142
0x287: V145 = 0x0
0x289: V146 = 0x40
0x28b: V147 = M[0x40]
0x28e: V148 = SUB V144 V147
0x290: V149 = 0x0
0x294: V150 = EXTCODESIZE V116
0x295: V151 = ISZERO V150
0x296: V152 = ISZERO V151
0x297: V153 = 0x29f
0x29a: JUMPI 0x29f V152
---
Entry stack: [V11, 0xdc, V40, V48, V53, S4, V116, 0x16603758, V40, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V144, 0x0, V147, V148, V147, 0x0, S3]
Exit stack: [V11, 0xdc, V40, V48, V53, S4, V116, 0x16603758, V144, 0x0, V147, V148, V147, 0x0, V116]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x210]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
---
0x29b: V154 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdc, V40, V48, V53, S9, V116, 0x16603758, V144, 0x0, V147, V148, V147, 0x0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V40, V48, V53, S9, V116, 0x16603758, V144, 0x0, V147, V148, V147, 0x0, V116]

================================

Block 0x29f
[0x29f:0x2ab]
---
Predecessors: [0x210]
Successors: [0x2ac, 0x2b0]
---
0x29f JUMPDEST
0x2a0 PUSH2 0x2c6
0x2a3 GAS
0x2a4 SUB
0x2a5 CALL
0x2a6 ISZERO
0x2a7 ISZERO
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x29f: JUMPDEST 
0x2a0: V155 = 0x2c6
0x2a3: V156 = GAS
0x2a4: V157 = SUB V156 0x2c6
0x2a5: V158 = CALL V157 V116 0x0 V147 V148 V147 0x0
0x2a6: V159 = ISZERO V158
0x2a7: V160 = ISZERO V159
0x2a8: V161 = 0x2b0
0x2ab: JUMPI 0x2b0 V160
---
Entry stack: [V11, 0xdc, V40, V48, V53, S9, V116, 0x16603758, V144, 0x0, V147, V148, V147, 0x0, V116]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xdc, V40, V48, V53, S9, V116, 0x16603758, V144]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x29f]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V162 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdc, V40, V48, V53, S3, V116, 0x16603758, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V40, V48, V53, S3, V116, 0x16603758, V144]

================================

Block 0x2b0
[0x2b0:0x2bf]
---
Predecessors: [0x29f]
Successors: [0x1dd]
---
0x2b0 JUMPDEST
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 DUP1
0x2b5 DUP1
0x2b6 PUSH1 0x1
0x2b8 ADD
0x2b9 SWAP2
0x2ba POP
0x2bb POP
0x2bc PUSH2 0x1dd
0x2bf JUMP
---
0x2b0: JUMPDEST 
0x2b6: V163 = 0x1
0x2b8: V164 = ADD 0x1 S3
0x2bc: V165 = 0x1dd
0x2bf: JUMP 0x1dd
---
Entry stack: [V11, 0xdc, V40, V48, V53, S3, V116, 0x16603758, V144]
Stack pops: 4
Stack additions: [V164]
Exit stack: [V11, 0xdc, V40, V48, V53, V164]

================================

Block 0x2c0
[0x2c0:0x2c5]
---
Predecessors: [0x1dd]
Successors: [0xdc]
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 JUMP
---
0x2c0: JUMPDEST 
0x2c5: JUMP 0xdc
---
Entry stack: [V11, 0xdc, V40, V48, V53, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c6
[0x2c6:0x31c]
---
Predecessors: [0xe9]
Successors: [0x31d, 0x321]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca SWAP1
0x2cb SLOAD
0x2cc SWAP1
0x2cd PUSH2 0x100
0x2d0 EXP
0x2d1 SWAP1
0x2d2 DIV
0x2d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e8 AND
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff CALLER
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 EQ
0x317 ISZERO
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V166 = 0x0
0x2cb: V167 = S[0x0]
0x2cd: V168 = 0x100
0x2d0: V169 = EXP 0x100 0x0
0x2d2: V170 = DIV V167 0x1
0x2d3: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2e9: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2ff: V175 = CALLER
0x300: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x316: V178 = EQ V177 V174
0x317: V179 = ISZERO V178
0x318: V180 = ISZERO V179
0x319: V181 = 0x321
0x31c: JUMPI 0x321 V180
---
Entry stack: [V11, 0x115, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115, V65]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x2c6]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V182 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V11, 0x115, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115, V65]

================================

Block 0x321
[0x321:0x363]
---
Predecessors: [0x2c6]
Successors: [0x115]
---
0x321 JUMPDEST
0x322 DUP1
0x323 PUSH1 0x0
0x325 DUP1
0x326 PUSH2 0x100
0x329 EXP
0x32a DUP2
0x32b SLOAD
0x32c DUP2
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 MUL
0x343 NOT
0x344 AND
0x345 SWAP1
0x346 DUP4
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d MUL
0x35e OR
0x35f SWAP1
0x360 SSTORE
0x361 POP
0x362 POP
0x363 JUMP
---
0x321: JUMPDEST 
0x323: V183 = 0x0
0x326: V184 = 0x100
0x329: V185 = EXP 0x100 0x0
0x32b: V186 = S[0x0]
0x32d: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V188 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x343: V189 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x344: V190 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V186
0x347: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x35d: V193 = MUL V192 0x1
0x35e: V194 = OR V193 V190
0x360: S[0x0] = V194
0x363: JUMP 0x115
---
Entry stack: [V11, 0x115, V65]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x364
[0x364:0x388]
---
Predecessors: [0x122]
Successors: [0x12a]
---
0x364 JUMPDEST
0x365 PUSH1 0x0
0x367 DUP1
0x368 SWAP1
0x369 SLOAD
0x36a SWAP1
0x36b PUSH2 0x100
0x36e EXP
0x36f SWAP1
0x370 DIV
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 DUP2
0x388 JUMP
---
0x364: JUMPDEST 
0x365: V195 = 0x0
0x369: V196 = S[0x0]
0x36b: V197 = 0x100
0x36e: V198 = EXP 0x100 0x0
0x370: V199 = DIV V196 0x1
0x371: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x388: JUMP 0x12a
---
Entry stack: [V11, 0x12a]
Stack pops: 1
Stack additions: [S0, V201]
Exit stack: [V11, 0x12a, V201]

================================

Block 0x389
[0x389:0x3be]
---
Predecessors: []
Successors: []
---
0x389 STOP
0x38a LOG1
0x38b PUSH6 0x627a7a723058
0x392 SHA3
0x393 PUSH16 0x4fbc766e2d5e294be6e7c644a0a078ca
0x3a4 GASLIMIT
0x3a5 MISSING 0xb5
0x3a6 SHL
0x3a7 MISSING 0xce
0x3a8 GAS
0x3a9 SWAP14
0x3aa MISSING 0x23
0x3ab RETURNDATASIZE
0x3ac CALLDATACOPY
0x3ad RETURNDATASIZE
0x3ae PUSH16 0xf857ef040029
---
0x389: STOP 
0x38a: LOG S0 S1 S2
0x38b: V202 = 0x627a7a723058
0x392: V203 = SHA3 0x627a7a723058 S3
0x393: V204 = 0x4fbc766e2d5e294be6e7c644a0a078ca
0x3a4: V205 = GASLIMIT
0x3a5: MISSING 0xb5
0x3a6: V206 = SHL S0 S1
0x3a7: MISSING 0xce
0x3a8: V207 = GAS
0x3aa: MISSING 0x23
0x3ab: V208 = RETURNDATASIZE
0x3ac: CALLDATACOPY V208 S0 S1
0x3ad: V209 = RETURNDATASIZE
0x3ae: V210 = 0xf857ef040029
---
Entry stack: []
Stack pops: 0
Stack additions: [V205, 0x4fbc766e2d5e294be6e7c644a0a078ca, V203, V206, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V207, 0xf857ef040029, V209]
Exit stack: []

================================

Function 0:
Public function signature: 0x48bfe40f
Entry block: 0x5c
Exit block: 0x2ac
Body: 0x5c, 0x63, 0x67, 0xdc, 0x16c, 0x1c5, 0x1c9, 0x1d4, 0x1d8, 0x1dd, 0x1e7, 0x20f, 0x210, 0x29b, 0x29f, 0x2ac, 0x2b0, 0x2c0

Function 1:
Public function signature: 0x4fb2e45d
Entry block: 0xde
Exit block: 0x115
Body: 0xde, 0xe5, 0xe9, 0x115, 0x2c6, 0x31d, 0x321

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x117
Exit block: 0x12a
Body: 0x117, 0x11e, 0x122, 0x12a, 0x364

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

