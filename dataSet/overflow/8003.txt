Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x18160ddd
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x18160ddd
0x3c: V13 = EQ 0x18160ddd V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x87]
---
0x41 DUP1
0x42 PUSH4 0x70a08231
0x47 EQ
0x48 PUSH2 0x87
0x4b JUMPI
---
0x42: V15 = 0x70a08231
0x47: V16 = EQ 0x70a08231 V11
0x48: V17 = 0x87
0x4b: JUMPI 0x87 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xde]
---
0x4c DUP1
0x4d PUSH4 0xa9059cbb
0x52 EQ
0x53 PUSH2 0xde
0x56 JUMPI
---
0x4d: V18 = 0xa9059cbb
0x52: V19 = EQ 0xa9059cbb V11
0x53: V20 = 0xde
0x56: JUMPI 0xde V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x143]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x143
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x143
0x70: JUMP 0x143
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x86]
---
Predecessors: [0x143]
Successors: []
---
0x71 JUMPDEST
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 DUP3
0x77 DUP2
0x78 MSTORE
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP2
0x7d POP
0x7e POP
0x7f PUSH1 0x40
0x81 MLOAD
0x82 DUP1
0x83 SWAP2
0x84 SUB
0x85 SWAP1
0x86 RETURN
---
0x71: JUMPDEST 
0x72: V28 = 0x40
0x74: V29 = M[0x40]
0x78: M[V29] = V88
0x79: V30 = 0x20
0x7b: V31 = ADD 0x20 V29
0x7f: V32 = 0x40
0x81: V33 = M[0x40]
0x84: V34 = SUB V31 V33
0x86: RETURN V33 V34
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x41]
Successors: [0x8f, 0x93]
---
0x87 JUMPDEST
0x88 CALLVALUE
0x89 DUP1
0x8a ISZERO
0x8b PUSH2 0x93
0x8e JUMPI
---
0x87: JUMPDEST 
0x88: V35 = CALLVALUE
0x8a: V36 = ISZERO V35
0x8b: V37 = 0x93
0x8e: JUMPI 0x93 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x87]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V38 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0x93
[0x93:0xc7]
---
Predecessors: [0x87]
Successors: [0x14d]
---
0x93 JUMPDEST
0x94 POP
0x95 PUSH2 0xc8
0x98 PUSH1 0x4
0x9a DUP1
0x9b CALLDATASIZE
0x9c SUB
0x9d DUP2
0x9e ADD
0x9f SWAP1
0xa0 DUP1
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe SWAP3
0xbf SWAP2
0xc0 SWAP1
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 PUSH2 0x14d
0xc7 JUMP
---
0x93: JUMPDEST 
0x95: V39 = 0xc8
0x98: V40 = 0x4
0x9b: V41 = CALLDATASIZE
0x9c: V42 = SUB V41 0x4
0x9e: V43 = ADD 0x4 V42
0xa2: V44 = CALLDATALOAD 0x4
0xa3: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xba: V47 = 0x20
0xbc: V48 = ADD 0x20 0x4
0xc4: V49 = 0x14d
0xc7: JUMP 0x14d
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0xc8, V46]
Exit stack: [V11, 0xc8, V46]

================================

Block 0xc8
[0xc8:0xdd]
---
Predecessors: [0x14d]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd DUP3
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP2
0xd4 POP
0xd5 POP
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda SWAP2
0xdb SUB
0xdc SWAP1
0xdd RETURN
---
0xc8: JUMPDEST 
0xc9: V50 = 0x40
0xcb: V51 = M[0x40]
0xcf: M[V51] = V101
0xd0: V52 = 0x20
0xd2: V53 = ADD 0x20 V51
0xd6: V54 = 0x40
0xd8: V55 = M[0x40]
0xdb: V56 = SUB V53 V55
0xdd: RETURN V55 V56
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x4c]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V57 = CALLVALUE
0xe1: V58 = ISZERO V57
0xe2: V59 = 0xea
0xe5: JUMPI 0xea V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V60 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xea
[0xea:0x128]
---
Predecessors: [0xde]
Successors: [0x195]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0x129
0xef PUSH1 0x4
0xf1 DUP1
0xf2 CALLDATASIZE
0xf3 SUB
0xf4 DUP2
0xf5 ADD
0xf6 SWAP1
0xf7 DUP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 SWAP1
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP1
0x115 SWAP3
0x116 SWAP2
0x117 SWAP1
0x118 DUP1
0x119 CALLDATALOAD
0x11a SWAP1
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f SWAP3
0x120 SWAP2
0x121 SWAP1
0x122 POP
0x123 POP
0x124 POP
0x125 PUSH2 0x195
0x128 JUMP
---
0xea: JUMPDEST 
0xec: V61 = 0x129
0xef: V62 = 0x4
0xf2: V63 = CALLDATASIZE
0xf3: V64 = SUB V63 0x4
0xf5: V65 = ADD 0x4 V64
0xf9: V66 = CALLDATALOAD 0x4
0xfa: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x111: V69 = 0x20
0x113: V70 = ADD 0x20 0x4
0x119: V71 = CALLDATALOAD 0x24
0x11b: V72 = 0x20
0x11d: V73 = ADD 0x20 0x24
0x125: V74 = 0x195
0x128: JUMP 0x195
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x129, V68, V71]
Exit stack: [V11, 0x129, V68, V71]

================================

Block 0x129
[0x129:0x142]
---
Predecessors: [0x303]
Successors: []
---
0x129 JUMPDEST
0x12a PUSH1 0x40
0x12c MLOAD
0x12d DUP1
0x12e DUP3
0x12f ISZERO
0x130 ISZERO
0x131 ISZERO
0x132 ISZERO
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP2
0x139 POP
0x13a POP
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f SWAP2
0x140 SUB
0x141 SWAP1
0x142 RETURN
---
0x129: JUMPDEST 
0x12a: V75 = 0x40
0x12c: V76 = M[0x40]
0x12f: V77 = ISZERO 0x1
0x130: V78 = ISZERO 0x0
0x131: V79 = ISZERO 0x1
0x132: V80 = ISZERO 0x0
0x134: M[V76] = 0x1
0x135: V81 = 0x20
0x137: V82 = ADD 0x20 V76
0x13b: V83 = 0x40
0x13d: V84 = M[0x40]
0x140: V85 = SUB V82 V84
0x142: RETURN V84 V85
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x14c]
---
Predecessors: [0x68]
Successors: [0x71]
---
0x143 JUMPDEST
0x144 PUSH1 0x0
0x146 PUSH1 0x1
0x148 SLOAD
0x149 SWAP1
0x14a POP
0x14b SWAP1
0x14c JUMP
---
0x143: JUMPDEST 
0x144: V86 = 0x0
0x146: V87 = 0x1
0x148: V88 = S[0x1]
0x14c: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x14d
[0x14d:0x194]
---
Predecessors: [0x93]
Successors: [0xc8]
---
0x14d JUMPDEST
0x14e PUSH1 0x0
0x150 DUP1
0x151 PUSH1 0x0
0x153 DUP4
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f AND
0x180 DUP2
0x181 MSTORE
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP1
0x186 DUP2
0x187 MSTORE
0x188 PUSH1 0x20
0x18a ADD
0x18b PUSH1 0x0
0x18d SHA3
0x18e SLOAD
0x18f SWAP1
0x190 POP
0x191 SWAP2
0x192 SWAP1
0x193 POP
0x194 JUMP
---
0x14d: JUMPDEST 
0x14e: V89 = 0x0
0x151: V90 = 0x0
0x154: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x16a: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x181: M[0x0] = V94
0x182: V95 = 0x20
0x184: V96 = ADD 0x20 0x0
0x187: M[0x20] = 0x0
0x188: V97 = 0x20
0x18a: V98 = ADD 0x20 0x20
0x18b: V99 = 0x0
0x18d: V100 = SHA3 0x0 0x40
0x18e: V101 = S[V100]
0x194: JUMP 0xc8
---
Entry stack: [V11, 0xc8, V46]
Stack pops: 2
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x195
[0x195:0x1cd]
---
Predecessors: [0xea]
Successors: [0x1ce, 0x1d2]
---
0x195 JUMPDEST
0x196 PUSH1 0x0
0x198 DUP1
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af DUP4
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 EQ
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 ISZERO
0x1ca PUSH2 0x1d2
0x1cd JUMPI
---
0x195: JUMPDEST 
0x196: V102 = 0x0
0x199: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1b0: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x1c6: V107 = EQ V106 0x0
0x1c7: V108 = ISZERO V107
0x1c8: V109 = ISZERO V108
0x1c9: V110 = ISZERO V109
0x1ca: V111 = 0x1d2
0x1cd: JUMPI 0x1d2 V110
---
Entry stack: [V11, 0x129, V68, V71]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x129, V68, V71, 0x0]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x195]
Successors: []
---
0x1ce PUSH1 0x0
0x1d0 DUP1
0x1d1 REVERT
---
0x1ce: V112 = 0x0
0x1d1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x129, V68, V71, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x129, V68, V71, 0x0]

================================

Block 0x1d2
[0x1d2:0x21a]
---
Predecessors: [0x195]
Successors: [0x21b, 0x21f]
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 CALLER
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x202 AND
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 SWAP1
0x209 DUP2
0x20a MSTORE
0x20b PUSH1 0x20
0x20d ADD
0x20e PUSH1 0x0
0x210 SHA3
0x211 SLOAD
0x212 DUP3
0x213 GT
0x214 ISZERO
0x215 ISZERO
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V113 = 0x0
0x1d6: V114 = CALLER
0x1d7: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1ed: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x202: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x204: M[0x0] = V118
0x205: V119 = 0x20
0x207: V120 = ADD 0x20 0x0
0x20a: M[0x20] = 0x0
0x20b: V121 = 0x20
0x20d: V122 = ADD 0x20 0x20
0x20e: V123 = 0x0
0x210: V124 = SHA3 0x0 0x40
0x211: V125 = S[V124]
0x213: V126 = GT V71 V125
0x214: V127 = ISZERO V126
0x215: V128 = ISZERO V127
0x216: V129 = ISZERO V128
0x217: V130 = 0x21f
0x21a: JUMPI 0x21f V129
---
Entry stack: [V11, 0x129, V68, V71, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x129, V68, V71, 0x0]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x1d2]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V131 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x129, V68, V71, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x129, V68, V71, 0x0]

================================

Block 0x21f
[0x21f:0x26f]
---
Predecessors: [0x1d2]
Successors: [0x3b4]
---
0x21f JUMPDEST
0x220 PUSH2 0x270
0x223 DUP3
0x224 PUSH1 0x0
0x226 DUP1
0x227 CALLER
0x228 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23d AND
0x23e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x253 AND
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP1
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x20
0x25e ADD
0x25f PUSH1 0x0
0x261 SHA3
0x262 SLOAD
0x263 PUSH2 0x3b4
0x266 SWAP1
0x267 SWAP2
0x268 SWAP1
0x269 PUSH4 0xffffffff
0x26e AND
0x26f JUMP
---
0x21f: JUMPDEST 
0x220: V132 = 0x270
0x224: V133 = 0x0
0x227: V134 = CALLER
0x228: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x23e: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x253: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x255: M[0x0] = V138
0x256: V139 = 0x20
0x258: V140 = ADD 0x20 0x0
0x25b: M[0x20] = 0x0
0x25c: V141 = 0x20
0x25e: V142 = ADD 0x20 0x20
0x25f: V143 = 0x0
0x261: V144 = SHA3 0x0 0x40
0x262: V145 = S[V144]
0x263: V146 = 0x3b4
0x269: V147 = 0xffffffff
0x26e: V148 = AND 0xffffffff 0x3b4
0x26f: JUMP 0x3b4
---
Entry stack: [V11, 0x129, V68, V71, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x270, V145, S1]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x270, V145, V71]

================================

Block 0x270
[0x270:0x302]
---
Predecessors: [0x3c2]
Successors: [0x3cd]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 DUP1
0x274 CALLER
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac PUSH1 0x0
0x2ae SHA3
0x2af DUP2
0x2b0 SWAP1
0x2b1 SSTORE
0x2b2 POP
0x2b3 PUSH2 0x303
0x2b6 DUP3
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba DUP7
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 AND
0x2d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e6 AND
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP1
0x2ed DUP2
0x2ee MSTORE
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 PUSH1 0x0
0x2f4 SHA3
0x2f5 SLOAD
0x2f6 PUSH2 0x3cd
0x2f9 SWAP1
0x2fa SWAP2
0x2fb SWAP1
0x2fc PUSH4 0xffffffff
0x301 AND
0x302 JUMP
---
0x270: JUMPDEST 
0x271: V149 = 0x0
0x274: V150 = CALLER
0x275: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x28b: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2a2: M[0x0] = V154
0x2a3: V155 = 0x20
0x2a5: V156 = ADD 0x20 0x0
0x2a8: M[0x20] = 0x0
0x2a9: V157 = 0x20
0x2ab: V158 = ADD 0x20 0x20
0x2ac: V159 = 0x0
0x2ae: V160 = SHA3 0x0 0x40
0x2b1: S[V160] = V208
0x2b3: V161 = 0x303
0x2b7: V162 = 0x0
0x2bb: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x2d1: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2e8: M[0x0] = V166
0x2e9: V167 = 0x20
0x2eb: V168 = ADD 0x20 0x0
0x2ee: M[0x20] = 0x0
0x2ef: V169 = 0x20
0x2f1: V170 = ADD 0x20 0x20
0x2f2: V171 = 0x0
0x2f4: V172 = SHA3 0x0 0x40
0x2f5: V173 = S[V172]
0x2f6: V174 = 0x3cd
0x2fc: V175 = 0xffffffff
0x301: V176 = AND 0xffffffff 0x3cd
0x302: JUMP 0x3cd
---
Entry stack: [V11, 0x129, V68, V71, 0x0, V208]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x303, V173, S2]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x303, V173, V71]

================================

Block 0x303
[0x303:0x3b3]
---
Predecessors: [0x3e0]
Successors: [0x129]
---
0x303 JUMPDEST
0x304 PUSH1 0x0
0x306 DUP1
0x307 DUP6
0x308 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31d AND
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 AND
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP1
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x20
0x33e ADD
0x33f PUSH1 0x0
0x341 SHA3
0x342 DUP2
0x343 SWAP1
0x344 SSTORE
0x345 POP
0x346 DUP3
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d CALLER
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 AND
0x374 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x395 DUP5
0x396 PUSH1 0x40
0x398 MLOAD
0x399 DUP1
0x39a DUP3
0x39b DUP2
0x39c MSTORE
0x39d PUSH1 0x20
0x39f ADD
0x3a0 SWAP2
0x3a1 POP
0x3a2 POP
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 SWAP2
0x3a8 SUB
0x3a9 SWAP1
0x3aa LOG3
0x3ab PUSH1 0x1
0x3ad SWAP1
0x3ae POP
0x3af SWAP3
0x3b0 SWAP2
0x3b1 POP
0x3b2 POP
0x3b3 JUMP
---
0x303: JUMPDEST 
0x304: V177 = 0x0
0x308: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x31e: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x335: M[0x0] = V181
0x336: V182 = 0x20
0x338: V183 = ADD 0x20 0x0
0x33b: M[0x20] = 0x0
0x33c: V184 = 0x20
0x33e: V185 = ADD 0x20 0x20
0x33f: V186 = 0x0
0x341: V187 = SHA3 0x0 0x40
0x344: S[V187] = V210
0x347: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x35d: V190 = CALLER
0x35e: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x374: V193 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x396: V194 = 0x40
0x398: V195 = M[0x40]
0x39c: M[V195] = V71
0x39d: V196 = 0x20
0x39f: V197 = ADD 0x20 V195
0x3a3: V198 = 0x40
0x3a5: V199 = M[0x40]
0x3a8: V200 = SUB V197 V199
0x3aa: LOG V199 V200 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V192 V189
0x3ab: V201 = 0x1
0x3b3: JUMP 0x129
---
Entry stack: [V11, 0x129, V68, V71, 0x0, V210]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x3b4
[0x3b4:0x3c0]
---
Predecessors: [0x21f]
Successors: [0x3c1, 0x3c2]
---
0x3b4 JUMPDEST
0x3b5 PUSH1 0x0
0x3b7 DUP3
0x3b8 DUP3
0x3b9 GT
0x3ba ISZERO
0x3bb ISZERO
0x3bc ISZERO
0x3bd PUSH2 0x3c2
0x3c0 JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V202 = 0x0
0x3b9: V203 = GT V71 V145
0x3ba: V204 = ISZERO V203
0x3bb: V205 = ISZERO V204
0x3bc: V206 = ISZERO V205
0x3bd: V207 = 0x3c2
0x3c0: JUMPI 0x3c2 V206
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x270, V145, V71]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x270, V145, V71, 0x0]

================================

Block 0x3c1
[0x3c1:0x3c1]
---
Predecessors: [0x3b4]
Successors: []
---
0x3c1 INVALID
---
0x3c1: INVALID 
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x270, V145, V71, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x270, V145, V71, 0x0]

================================

Block 0x3c2
[0x3c2:0x3cc]
---
Predecessors: [0x3b4]
Successors: [0x270]
---
0x3c2 JUMPDEST
0x3c3 DUP2
0x3c4 DUP4
0x3c5 SUB
0x3c6 SWAP1
0x3c7 POP
0x3c8 SWAP3
0x3c9 SWAP2
0x3ca POP
0x3cb POP
0x3cc JUMP
---
0x3c2: JUMPDEST 
0x3c5: V208 = SUB V145 V71
0x3cc: JUMP 0x270
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x270, V145, V71, 0x0]
Stack pops: 4
Stack additions: [V208]
Exit stack: [V11, 0x129, V68, V71, 0x0, V208]

================================

Block 0x3cd
[0x3cd:0x3de]
---
Predecessors: [0x270]
Successors: [0x3df, 0x3e0]
---
0x3cd JUMPDEST
0x3ce PUSH1 0x0
0x3d0 DUP2
0x3d1 DUP4
0x3d2 ADD
0x3d3 SWAP1
0x3d4 POP
0x3d5 DUP3
0x3d6 DUP2
0x3d7 LT
0x3d8 ISZERO
0x3d9 ISZERO
0x3da ISZERO
0x3db PUSH2 0x3e0
0x3de JUMPI
---
0x3cd: JUMPDEST 
0x3ce: V209 = 0x0
0x3d2: V210 = ADD V173 V71
0x3d7: V211 = LT V210 V173
0x3d8: V212 = ISZERO V211
0x3d9: V213 = ISZERO V212
0x3da: V214 = ISZERO V213
0x3db: V215 = 0x3e0
0x3de: JUMPI 0x3e0 V214
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x303, V173, V71]
Stack pops: 2
Stack additions: [S1, S0, V210]
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x303, V173, V71, V210]

================================

Block 0x3df
[0x3df:0x3df]
---
Predecessors: [0x3cd]
Successors: []
---
0x3df INVALID
---
0x3df: INVALID 
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x303, V173, V71, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x129, V68, V71, 0x0, 0x303, V173, V71, V210]

================================

Block 0x3e0
[0x3e0:0x3e8]
---
Predecessors: [0x3cd]
Successors: [0x303]
---
0x3e0 JUMPDEST
0x3e1 DUP1
0x3e2 SWAP1
0x3e3 POP
0x3e4 SWAP3
0x3e5 SWAP2
0x3e6 POP
0x3e7 POP
0x3e8 JUMP
---
0x3e0: JUMPDEST 
0x3e8: JUMP 0x303
---
Entry stack: [V11, 0x129, V68, V71, 0x0, 0x303, V173, V71, V210]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x129, V68, V71, 0x0, V210]

================================

Block 0x3e9
[0x3e9:0x421]
---
Predecessors: []
Successors: [0x422]
---
0x3e9 STOP
0x3ea LOG1
0x3eb PUSH6 0x627a7a723058
0x3f2 SHA3
0x3f3 CALLDATACOPY
0x3f4 CODECOPY
0x3f5 MISSING 0xdb
0x3f6 MISSING 0xb8
0x3f7 ADDMOD
0x3f8 MISSING 0xe9
0x3f9 PUSH4 0xfbc5c91
0x3fe MISSING 0xce
0x3ff DUP16
0x400 MISSING 0xd0
0x401 CREATE
0x402 COINBASE
0x403 MISSING 0xd2
0x404 DUP3
0x405 MISSING 0xca
0x406 PUSH8 0xa245d91dd6271067
0x40f MISSING 0xe5
0x410 MISSING 0xd2
0x411 MISSING 0x29
0x412 MISSING 0x2c
0x413 STOP
0x414 MISSING 0x29
0x415 PUSH1 0x80
0x417 PUSH1 0x40
0x419 MSTORE
0x41a PUSH1 0x4
0x41c CALLDATASIZE
0x41d LT
0x41e PUSH2 0xa4
0x421 JUMPI
---
0x3e9: STOP 
0x3ea: LOG S0 S1 S2
0x3eb: V216 = 0x627a7a723058
0x3f2: V217 = SHA3 0x627a7a723058 S3
0x3f3: CALLDATACOPY V217 S4 S5
0x3f4: CODECOPY S6 S7 S8
0x3f5: MISSING 0xdb
0x3f6: MISSING 0xb8
0x3f7: V218 = ADDMOD S0 S1 S2
0x3f8: MISSING 0xe9
0x3f9: V219 = 0xfbc5c91
0x3fe: MISSING 0xce
0x400: MISSING 0xd0
0x401: V220 = CREATE S0 S1 S2
0x402: V221 = COINBASE
0x403: MISSING 0xd2
0x405: MISSING 0xca
0x406: V222 = 0xa245d91dd6271067
0x40f: MISSING 0xe5
0x410: MISSING 0xd2
0x411: MISSING 0x29
0x412: MISSING 0x2c
0x413: STOP 
0x414: MISSING 0x29
0x415: V223 = 0x80
0x417: V224 = 0x40
0x419: M[0x40] = 0x80
0x41a: V225 = 0x4
0x41c: V226 = CALLDATASIZE
0x41d: V227 = LT V226 0x4
0x41e: V228 = 0xa4
0x421: THROWI V227
---
Entry stack: []
Stack pops: 0
Stack additions: [V218, 0xfbc5c91, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V221, V220, S2, S0, S1, S2, 0xa245d91dd6271067]
Exit stack: []

================================

Block 0x422
[0x422:0x455]
---
Predecessors: [0x3e9]
Successors: [0x456]
---
0x422 PUSH1 0x0
0x424 CALLDATALOAD
0x425 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x443 SWAP1
0x444 DIV
0x445 PUSH4 0xffffffff
0x44a AND
0x44b DUP1
0x44c PUSH4 0x6fdde03
0x451 EQ
0x452 PUSH2 0xa9
0x455 JUMPI
---
0x422: V229 = 0x0
0x424: V230 = CALLDATALOAD 0x0
0x425: V231 = 0x100000000000000000000000000000000000000000000000000000000
0x444: V232 = DIV V230 0x100000000000000000000000000000000000000000000000000000000
0x445: V233 = 0xffffffff
0x44a: V234 = AND 0xffffffff V232
0x44c: V235 = 0x6fdde03
0x451: V236 = EQ 0x6fdde03 V234
0x452: V237 = 0xa9
0x455: THROWI V236
---
Entry stack: []
Stack pops: 0
Stack additions: [V234]
Exit stack: [V234]

================================

Block 0x456
[0x456:0x460]
---
Predecessors: [0x422]
Successors: [0x461]
---
0x456 DUP1
0x457 PUSH4 0x95ea7b3
0x45c EQ
0x45d PUSH2 0x139
0x460 JUMPI
---
0x457: V238 = 0x95ea7b3
0x45c: V239 = EQ 0x95ea7b3 V234
0x45d: V240 = 0x139
0x460: THROWI V239
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x461
[0x461:0x46b]
---
Predecessors: [0x456]
Successors: [0x46c]
---
0x461 DUP1
0x462 PUSH4 0x18160ddd
0x467 EQ
0x468 PUSH2 0x19e
0x46b JUMPI
---
0x462: V241 = 0x18160ddd
0x467: V242 = EQ 0x18160ddd V234
0x468: V243 = 0x19e
0x46b: THROWI V242
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x46c
[0x46c:0x476]
---
Predecessors: [0x461]
Successors: [0x477]
---
0x46c DUP1
0x46d PUSH4 0x23b872dd
0x472 EQ
0x473 PUSH2 0x1c9
0x476 JUMPI
---
0x46d: V244 = 0x23b872dd
0x472: V245 = EQ 0x23b872dd V234
0x473: V246 = 0x1c9
0x476: THROWI V245
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x477
[0x477:0x481]
---
Predecessors: [0x46c]
Successors: [0x482]
---
0x477 DUP1
0x478 PUSH4 0x2ff2e9dc
0x47d EQ
0x47e PUSH2 0x24e
0x481 JUMPI
---
0x478: V247 = 0x2ff2e9dc
0x47d: V248 = EQ 0x2ff2e9dc V234
0x47e: V249 = 0x24e
0x481: THROWI V248
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x482
[0x482:0x48c]
---
Predecessors: [0x477]
Successors: [0x48d]
---
0x482 DUP1
0x483 PUSH4 0x313ce567
0x488 EQ
0x489 PUSH2 0x279
0x48c JUMPI
---
0x483: V250 = 0x313ce567
0x488: V251 = EQ 0x313ce567 V234
0x489: V252 = 0x279
0x48c: THROWI V251
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x48d
[0x48d:0x497]
---
Predecessors: [0x482]
Successors: [0x498]
---
0x48d DUP1
0x48e PUSH4 0x70a08231
0x493 EQ
0x494 PUSH2 0x2aa
0x497 JUMPI
---
0x48e: V253 = 0x70a08231
0x493: V254 = EQ 0x70a08231 V234
0x494: V255 = 0x2aa
0x497: THROWI V254
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x498
[0x498:0x4a2]
---
Predecessors: [0x48d]
Successors: [0x4a3]
---
0x498 DUP1
0x499 PUSH4 0x95d89b41
0x49e EQ
0x49f PUSH2 0x301
0x4a2 JUMPI
---
0x499: V256 = 0x95d89b41
0x49e: V257 = EQ 0x95d89b41 V234
0x49f: V258 = 0x301
0x4a2: THROWI V257
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x4a3
[0x4a3:0x4ad]
---
Predecessors: [0x498]
Successors: [0x4ae]
---
0x4a3 DUP1
0x4a4 PUSH4 0xa9059cbb
0x4a9 EQ
0x4aa PUSH2 0x391
0x4ad JUMPI
---
0x4a4: V259 = 0xa9059cbb
0x4a9: V260 = EQ 0xa9059cbb V234
0x4aa: V261 = 0x391
0x4ad: THROWI V260
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x4ae
[0x4ae:0x4b8]
---
Predecessors: [0x4a3]
Successors: [0x4b9]
---
0x4ae DUP1
0x4af PUSH4 0xdd62ed3e
0x4b4 EQ
0x4b5 PUSH2 0x3f6
0x4b8 JUMPI
---
0x4af: V262 = 0xdd62ed3e
0x4b4: V263 = EQ 0xdd62ed3e V234
0x4b5: V264 = 0x3f6
0x4b8: THROWI V263
---
Entry stack: [V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V234]

================================

Block 0x4b9
[0x4b9:0x4c5]
---
Predecessors: [0x4ae]
Successors: [0x4c6]
---
0x4b9 JUMPDEST
0x4ba PUSH1 0x0
0x4bc DUP1
0x4bd REVERT
0x4be JUMPDEST
0x4bf CALLVALUE
0x4c0 DUP1
0x4c1 ISZERO
0x4c2 PUSH2 0xb5
0x4c5 JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V265 = 0x0
0x4bd: REVERT 0x0 0x0
0x4be: JUMPDEST 
0x4bf: V266 = CALLVALUE
0x4c1: V267 = ISZERO V266
0x4c2: V268 = 0xb5
0x4c5: THROWI V267
---
Entry stack: [V234]
Stack pops: 0
Stack additions: [V266]
Exit stack: []

================================

Block 0x4c6
[0x4c6:0x4f7]
---
Predecessors: [0x4b9]
Successors: [0x4f8]
---
0x4c6 PUSH1 0x0
0x4c8 DUP1
0x4c9 REVERT
0x4ca JUMPDEST
0x4cb POP
0x4cc PUSH2 0xbe
0x4cf PUSH2 0x46d
0x4d2 JUMP
0x4d3 JUMPDEST
0x4d4 PUSH1 0x40
0x4d6 MLOAD
0x4d7 DUP1
0x4d8 DUP1
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc DUP3
0x4dd DUP2
0x4de SUB
0x4df DUP3
0x4e0 MSTORE
0x4e1 DUP4
0x4e2 DUP2
0x4e3 DUP2
0x4e4 MLOAD
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x20
0x4e9 ADD
0x4ea SWAP2
0x4eb POP
0x4ec DUP1
0x4ed MLOAD
0x4ee SWAP1
0x4ef PUSH1 0x20
0x4f1 ADD
0x4f2 SWAP1
0x4f3 DUP1
0x4f4 DUP4
0x4f5 DUP4
0x4f6 PUSH1 0x0
---
0x4c6: V269 = 0x0
0x4c9: REVERT 0x0 0x0
0x4ca: JUMPDEST 
0x4cc: V270 = 0xbe
0x4cf: V271 = 0x46d
0x4d2: THROW 
0x4d3: JUMPDEST 
0x4d4: V272 = 0x40
0x4d6: V273 = M[0x40]
0x4d9: V274 = 0x20
0x4db: V275 = ADD 0x20 V273
0x4de: V276 = SUB V275 V273
0x4e0: M[V273] = V276
0x4e4: V277 = M[S0]
0x4e6: M[V275] = V277
0x4e7: V278 = 0x20
0x4e9: V279 = ADD 0x20 V275
0x4ed: V280 = M[S0]
0x4ef: V281 = 0x20
0x4f1: V282 = ADD 0x20 S0
0x4f6: V283 = 0x0
---
Entry stack: [V266]
Stack pops: 0
Stack additions: [0xbe, 0x0, V282, V279, V280, V280, V282, V279, V273, V273, S0]
Exit stack: []

================================

Block 0x4f8
[0x4f8:0x500]
---
Predecessors: [0x4c6]
Successors: [0x501]
---
0x4f8 JUMPDEST
0x4f9 DUP4
0x4fa DUP2
0x4fb LT
0x4fc ISZERO
0x4fd PUSH2 0xfe
0x500 JUMPI
---
0x4f8: JUMPDEST 
0x4fb: V284 = LT 0x0 V280
0x4fc: V285 = ISZERO V284
0x4fd: V286 = 0xfe
0x500: THROWI V285
---
Entry stack: [S9, V273, V273, V279, V282, V280, V280, V279, V282, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V273, V273, V279, V282, V280, V280, V279, V282, 0x0]

================================

Block 0x501
[0x501:0x526]
---
Predecessors: [0x4f8]
Successors: [0x527]
---
0x501 DUP1
0x502 DUP3
0x503 ADD
0x504 MLOAD
0x505 DUP2
0x506 DUP5
0x507 ADD
0x508 MSTORE
0x509 PUSH1 0x20
0x50b DUP2
0x50c ADD
0x50d SWAP1
0x50e POP
0x50f PUSH2 0xe3
0x512 JUMP
0x513 JUMPDEST
0x514 POP
0x515 POP
0x516 POP
0x517 POP
0x518 SWAP1
0x519 POP
0x51a SWAP1
0x51b DUP2
0x51c ADD
0x51d SWAP1
0x51e PUSH1 0x1f
0x520 AND
0x521 DUP1
0x522 ISZERO
0x523 PUSH2 0x12b
0x526 JUMPI
---
0x503: V287 = ADD V282 0x0
0x504: V288 = M[V287]
0x507: V289 = ADD V279 0x0
0x508: M[V289] = V288
0x509: V290 = 0x20
0x50c: V291 = ADD 0x0 0x20
0x50f: V292 = 0xe3
0x512: THROW 
0x513: JUMPDEST 
0x51c: V293 = ADD S4 S6
0x51e: V294 = 0x1f
0x520: V295 = AND 0x1f S4
0x522: V296 = ISZERO V295
0x523: V297 = 0x12b
0x526: THROWI V296
---
Entry stack: [S9, V273, V273, V279, V282, V280, V280, V279, V282, 0x0]
Stack pops: 3
Stack additions: [V295, V293]
Exit stack: []

================================

Block 0x527
[0x527:0x53f]
---
Predecessors: [0x501]
Successors: [0x540]
---
0x527 DUP1
0x528 DUP3
0x529 SUB
0x52a DUP1
0x52b MLOAD
0x52c PUSH1 0x1
0x52e DUP4
0x52f PUSH1 0x20
0x531 SUB
0x532 PUSH2 0x100
0x535 EXP
0x536 SUB
0x537 NOT
0x538 AND
0x539 DUP2
0x53a MSTORE
0x53b PUSH1 0x20
0x53d ADD
0x53e SWAP2
0x53f POP
---
0x529: V298 = SUB V293 V295
0x52b: V299 = M[V298]
0x52c: V300 = 0x1
0x52f: V301 = 0x20
0x531: V302 = SUB 0x20 V295
0x532: V303 = 0x100
0x535: V304 = EXP 0x100 V302
0x536: V305 = SUB V304 0x1
0x537: V306 = NOT V305
0x538: V307 = AND V306 V299
0x53a: M[V298] = V307
0x53b: V308 = 0x20
0x53d: V309 = ADD 0x20 V298
---
Entry stack: [V293, V295]
Stack pops: 2
Stack additions: [V309, S0]
Exit stack: [V309, V295]

================================

Block 0x540
[0x540:0x555]
---
Predecessors: [0x527]
Successors: [0x556]
---
0x540 JUMPDEST
0x541 POP
0x542 SWAP3
0x543 POP
0x544 POP
0x545 POP
0x546 PUSH1 0x40
0x548 MLOAD
0x549 DUP1
0x54a SWAP2
0x54b SUB
0x54c SWAP1
0x54d RETURN
0x54e JUMPDEST
0x54f CALLVALUE
0x550 DUP1
0x551 ISZERO
0x552 PUSH2 0x145
0x555 JUMPI
---
0x540: JUMPDEST 
0x546: V310 = 0x40
0x548: V311 = M[0x40]
0x54b: V312 = SUB V309 V311
0x54d: RETURN V311 V312
0x54e: JUMPDEST 
0x54f: V313 = CALLVALUE
0x551: V314 = ISZERO V313
0x552: V315 = 0x145
0x555: THROWI V314
---
Entry stack: [V309, V295]
Stack pops: 10
Stack additions: [V313]
Exit stack: []

================================

Block 0x556
[0x556:0x5ba]
---
Predecessors: [0x540]
Successors: [0x5bb]
---
0x556 PUSH1 0x0
0x558 DUP1
0x559 REVERT
0x55a JUMPDEST
0x55b POP
0x55c PUSH2 0x184
0x55f PUSH1 0x4
0x561 DUP1
0x562 CALLDATASIZE
0x563 SUB
0x564 DUP2
0x565 ADD
0x566 SWAP1
0x567 DUP1
0x568 DUP1
0x569 CALLDATALOAD
0x56a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57f AND
0x580 SWAP1
0x581 PUSH1 0x20
0x583 ADD
0x584 SWAP1
0x585 SWAP3
0x586 SWAP2
0x587 SWAP1
0x588 DUP1
0x589 CALLDATALOAD
0x58a SWAP1
0x58b PUSH1 0x20
0x58d ADD
0x58e SWAP1
0x58f SWAP3
0x590 SWAP2
0x591 SWAP1
0x592 POP
0x593 POP
0x594 POP
0x595 PUSH2 0x4a6
0x598 JUMP
0x599 JUMPDEST
0x59a PUSH1 0x40
0x59c MLOAD
0x59d DUP1
0x59e DUP3
0x59f ISZERO
0x5a0 ISZERO
0x5a1 ISZERO
0x5a2 ISZERO
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 SWAP2
0x5a9 POP
0x5aa POP
0x5ab PUSH1 0x40
0x5ad MLOAD
0x5ae DUP1
0x5af SWAP2
0x5b0 SUB
0x5b1 SWAP1
0x5b2 RETURN
0x5b3 JUMPDEST
0x5b4 CALLVALUE
0x5b5 DUP1
0x5b6 ISZERO
0x5b7 PUSH2 0x1aa
0x5ba JUMPI
---
0x556: V316 = 0x0
0x559: REVERT 0x0 0x0
0x55a: JUMPDEST 
0x55c: V317 = 0x184
0x55f: V318 = 0x4
0x562: V319 = CALLDATASIZE
0x563: V320 = SUB V319 0x4
0x565: V321 = ADD 0x4 V320
0x569: V322 = CALLDATALOAD 0x4
0x56a: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x57f: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x581: V325 = 0x20
0x583: V326 = ADD 0x20 0x4
0x589: V327 = CALLDATALOAD 0x24
0x58b: V328 = 0x20
0x58d: V329 = ADD 0x20 0x24
0x595: V330 = 0x4a6
0x598: THROW 
0x599: JUMPDEST 
0x59a: V331 = 0x40
0x59c: V332 = M[0x40]
0x59f: V333 = ISZERO S0
0x5a0: V334 = ISZERO V333
0x5a1: V335 = ISZERO V334
0x5a2: V336 = ISZERO V335
0x5a4: M[V332] = V336
0x5a5: V337 = 0x20
0x5a7: V338 = ADD 0x20 V332
0x5ab: V339 = 0x40
0x5ad: V340 = M[0x40]
0x5b0: V341 = SUB V338 V340
0x5b2: RETURN V340 V341
0x5b3: JUMPDEST 
0x5b4: V342 = CALLVALUE
0x5b6: V343 = ISZERO V342
0x5b7: V344 = 0x1aa
0x5ba: THROWI V343
---
Entry stack: [V313]
Stack pops: 0
Stack additions: [V327, V324, 0x184, V342]
Exit stack: []

================================

Block 0x5bb
[0x5bb:0x5e5]
---
Predecessors: [0x556]
Successors: [0x5e6]
---
0x5bb PUSH1 0x0
0x5bd DUP1
0x5be REVERT
0x5bf JUMPDEST
0x5c0 POP
0x5c1 PUSH2 0x1b3
0x5c4 PUSH2 0x598
0x5c7 JUMP
0x5c8 JUMPDEST
0x5c9 PUSH1 0x40
0x5cb MLOAD
0x5cc DUP1
0x5cd DUP3
0x5ce DUP2
0x5cf MSTORE
0x5d0 PUSH1 0x20
0x5d2 ADD
0x5d3 SWAP2
0x5d4 POP
0x5d5 POP
0x5d6 PUSH1 0x40
0x5d8 MLOAD
0x5d9 DUP1
0x5da SWAP2
0x5db SUB
0x5dc SWAP1
0x5dd RETURN
0x5de JUMPDEST
0x5df CALLVALUE
0x5e0 DUP1
0x5e1 ISZERO
0x5e2 PUSH2 0x1d5
0x5e5 JUMPI
---
0x5bb: V345 = 0x0
0x5be: REVERT 0x0 0x0
0x5bf: JUMPDEST 
0x5c1: V346 = 0x1b3
0x5c4: V347 = 0x598
0x5c7: THROW 
0x5c8: JUMPDEST 
0x5c9: V348 = 0x40
0x5cb: V349 = M[0x40]
0x5cf: M[V349] = S0
0x5d0: V350 = 0x20
0x5d2: V351 = ADD 0x20 V349
0x5d6: V352 = 0x40
0x5d8: V353 = M[0x40]
0x5db: V354 = SUB V351 V353
0x5dd: RETURN V353 V354
0x5de: JUMPDEST 
0x5df: V355 = CALLVALUE
0x5e1: V356 = ISZERO V355
0x5e2: V357 = 0x1d5
0x5e5: THROWI V356
---
Entry stack: [V342]
Stack pops: 0
Stack additions: [0x1b3, V355]
Exit stack: []

================================

Block 0x5e6
[0x5e6:0x66a]
---
Predecessors: [0x5bb]
Successors: [0x66b]
---
0x5e6 PUSH1 0x0
0x5e8 DUP1
0x5e9 REVERT
0x5ea JUMPDEST
0x5eb POP
0x5ec PUSH2 0x234
0x5ef PUSH1 0x4
0x5f1 DUP1
0x5f2 CALLDATASIZE
0x5f3 SUB
0x5f4 DUP2
0x5f5 ADD
0x5f6 SWAP1
0x5f7 DUP1
0x5f8 DUP1
0x5f9 CALLDATALOAD
0x5fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60f AND
0x610 SWAP1
0x611 PUSH1 0x20
0x613 ADD
0x614 SWAP1
0x615 SWAP3
0x616 SWAP2
0x617 SWAP1
0x618 DUP1
0x619 CALLDATALOAD
0x61a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62f AND
0x630 SWAP1
0x631 PUSH1 0x20
0x633 ADD
0x634 SWAP1
0x635 SWAP3
0x636 SWAP2
0x637 SWAP1
0x638 DUP1
0x639 CALLDATALOAD
0x63a SWAP1
0x63b PUSH1 0x20
0x63d ADD
0x63e SWAP1
0x63f SWAP3
0x640 SWAP2
0x641 SWAP1
0x642 POP
0x643 POP
0x644 POP
0x645 PUSH2 0x5a2
0x648 JUMP
0x649 JUMPDEST
0x64a PUSH1 0x40
0x64c MLOAD
0x64d DUP1
0x64e DUP3
0x64f ISZERO
0x650 ISZERO
0x651 ISZERO
0x652 ISZERO
0x653 DUP2
0x654 MSTORE
0x655 PUSH1 0x20
0x657 ADD
0x658 SWAP2
0x659 POP
0x65a POP
0x65b PUSH1 0x40
0x65d MLOAD
0x65e DUP1
0x65f SWAP2
0x660 SUB
0x661 SWAP1
0x662 RETURN
0x663 JUMPDEST
0x664 CALLVALUE
0x665 DUP1
0x666 ISZERO
0x667 PUSH2 0x25a
0x66a JUMPI
---
0x5e6: V358 = 0x0
0x5e9: REVERT 0x0 0x0
0x5ea: JUMPDEST 
0x5ec: V359 = 0x234
0x5ef: V360 = 0x4
0x5f2: V361 = CALLDATASIZE
0x5f3: V362 = SUB V361 0x4
0x5f5: V363 = ADD 0x4 V362
0x5f9: V364 = CALLDATALOAD 0x4
0x5fa: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x611: V367 = 0x20
0x613: V368 = ADD 0x20 0x4
0x619: V369 = CALLDATALOAD 0x24
0x61a: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x631: V372 = 0x20
0x633: V373 = ADD 0x20 0x24
0x639: V374 = CALLDATALOAD 0x44
0x63b: V375 = 0x20
0x63d: V376 = ADD 0x20 0x44
0x645: V377 = 0x5a2
0x648: THROW 
0x649: JUMPDEST 
0x64a: V378 = 0x40
0x64c: V379 = M[0x40]
0x64f: V380 = ISZERO S0
0x650: V381 = ISZERO V380
0x651: V382 = ISZERO V381
0x652: V383 = ISZERO V382
0x654: M[V379] = V383
0x655: V384 = 0x20
0x657: V385 = ADD 0x20 V379
0x65b: V386 = 0x40
0x65d: V387 = M[0x40]
0x660: V388 = SUB V385 V387
0x662: RETURN V387 V388
0x663: JUMPDEST 
0x664: V389 = CALLVALUE
0x666: V390 = ISZERO V389
0x667: V391 = 0x25a
0x66a: THROWI V390
---
Entry stack: [V355]
Stack pops: 0
Stack additions: [V374, V371, V366, 0x234, V389]
Exit stack: []

================================

Block 0x66b
[0x66b:0x695]
---
Predecessors: [0x5e6]
Successors: [0x696]
---
0x66b PUSH1 0x0
0x66d DUP1
0x66e REVERT
0x66f JUMPDEST
0x670 POP
0x671 PUSH2 0x263
0x674 PUSH2 0x95c
0x677 JUMP
0x678 JUMPDEST
0x679 PUSH1 0x40
0x67b MLOAD
0x67c DUP1
0x67d DUP3
0x67e DUP2
0x67f MSTORE
0x680 PUSH1 0x20
0x682 ADD
0x683 SWAP2
0x684 POP
0x685 POP
0x686 PUSH1 0x40
0x688 MLOAD
0x689 DUP1
0x68a SWAP2
0x68b SUB
0x68c SWAP1
0x68d RETURN
0x68e JUMPDEST
0x68f CALLVALUE
0x690 DUP1
0x691 ISZERO
0x692 PUSH2 0x285
0x695 JUMPI
---
0x66b: V392 = 0x0
0x66e: REVERT 0x0 0x0
0x66f: JUMPDEST 
0x671: V393 = 0x263
0x674: V394 = 0x95c
0x677: THROW 
0x678: JUMPDEST 
0x679: V395 = 0x40
0x67b: V396 = M[0x40]
0x67f: M[V396] = S0
0x680: V397 = 0x20
0x682: V398 = ADD 0x20 V396
0x686: V399 = 0x40
0x688: V400 = M[0x40]
0x68b: V401 = SUB V398 V400
0x68d: RETURN V400 V401
0x68e: JUMPDEST 
0x68f: V402 = CALLVALUE
0x691: V403 = ISZERO V402
0x692: V404 = 0x285
0x695: THROWI V403
---
Entry stack: [V389]
Stack pops: 0
Stack additions: [0x263, V402]
Exit stack: []

================================

Block 0x696
[0x696:0x6c6]
---
Predecessors: [0x66b]
Successors: [0x6c7]
---
0x696 PUSH1 0x0
0x698 DUP1
0x699 REVERT
0x69a JUMPDEST
0x69b POP
0x69c PUSH2 0x28e
0x69f PUSH2 0x96d
0x6a2 JUMP
0x6a3 JUMPDEST
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 DUP1
0x6a8 DUP3
0x6a9 PUSH1 0xff
0x6ab AND
0x6ac PUSH1 0xff
0x6ae AND
0x6af DUP2
0x6b0 MSTORE
0x6b1 PUSH1 0x20
0x6b3 ADD
0x6b4 SWAP2
0x6b5 POP
0x6b6 POP
0x6b7 PUSH1 0x40
0x6b9 MLOAD
0x6ba DUP1
0x6bb SWAP2
0x6bc SUB
0x6bd SWAP1
0x6be RETURN
0x6bf JUMPDEST
0x6c0 CALLVALUE
0x6c1 DUP1
0x6c2 ISZERO
0x6c3 PUSH2 0x2b6
0x6c6 JUMPI
---
0x696: V405 = 0x0
0x699: REVERT 0x0 0x0
0x69a: JUMPDEST 
0x69c: V406 = 0x28e
0x69f: V407 = 0x96d
0x6a2: THROW 
0x6a3: JUMPDEST 
0x6a4: V408 = 0x40
0x6a6: V409 = M[0x40]
0x6a9: V410 = 0xff
0x6ab: V411 = AND 0xff S0
0x6ac: V412 = 0xff
0x6ae: V413 = AND 0xff V411
0x6b0: M[V409] = V413
0x6b1: V414 = 0x20
0x6b3: V415 = ADD 0x20 V409
0x6b7: V416 = 0x40
0x6b9: V417 = M[0x40]
0x6bc: V418 = SUB V415 V417
0x6be: RETURN V417 V418
0x6bf: JUMPDEST 
0x6c0: V419 = CALLVALUE
0x6c2: V420 = ISZERO V419
0x6c3: V421 = 0x2b6
0x6c6: THROWI V420
---
Entry stack: [V402]
Stack pops: 0
Stack additions: [0x28e, V419]
Exit stack: []

================================

Block 0x6c7
[0x6c7:0x71d]
---
Predecessors: [0x696]
Successors: [0x71e]
---
0x6c7 PUSH1 0x0
0x6c9 DUP1
0x6ca REVERT
0x6cb JUMPDEST
0x6cc POP
0x6cd PUSH2 0x2eb
0x6d0 PUSH1 0x4
0x6d2 DUP1
0x6d3 CALLDATASIZE
0x6d4 SUB
0x6d5 DUP2
0x6d6 ADD
0x6d7 SWAP1
0x6d8 DUP1
0x6d9 DUP1
0x6da CALLDATALOAD
0x6db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f0 AND
0x6f1 SWAP1
0x6f2 PUSH1 0x20
0x6f4 ADD
0x6f5 SWAP1
0x6f6 SWAP3
0x6f7 SWAP2
0x6f8 SWAP1
0x6f9 POP
0x6fa POP
0x6fb POP
0x6fc PUSH2 0x972
0x6ff JUMP
0x700 JUMPDEST
0x701 PUSH1 0x40
0x703 MLOAD
0x704 DUP1
0x705 DUP3
0x706 DUP2
0x707 MSTORE
0x708 PUSH1 0x20
0x70a ADD
0x70b SWAP2
0x70c POP
0x70d POP
0x70e PUSH1 0x40
0x710 MLOAD
0x711 DUP1
0x712 SWAP2
0x713 SUB
0x714 SWAP1
0x715 RETURN
0x716 JUMPDEST
0x717 CALLVALUE
0x718 DUP1
0x719 ISZERO
0x71a PUSH2 0x30d
0x71d JUMPI
---
0x6c7: V422 = 0x0
0x6ca: REVERT 0x0 0x0
0x6cb: JUMPDEST 
0x6cd: V423 = 0x2eb
0x6d0: V424 = 0x4
0x6d3: V425 = CALLDATASIZE
0x6d4: V426 = SUB V425 0x4
0x6d6: V427 = ADD 0x4 V426
0x6da: V428 = CALLDATALOAD 0x4
0x6db: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x6f2: V431 = 0x20
0x6f4: V432 = ADD 0x20 0x4
0x6fc: V433 = 0x972
0x6ff: THROW 
0x700: JUMPDEST 
0x701: V434 = 0x40
0x703: V435 = M[0x40]
0x707: M[V435] = S0
0x708: V436 = 0x20
0x70a: V437 = ADD 0x20 V435
0x70e: V438 = 0x40
0x710: V439 = M[0x40]
0x713: V440 = SUB V437 V439
0x715: RETURN V439 V440
0x716: JUMPDEST 
0x717: V441 = CALLVALUE
0x719: V442 = ISZERO V441
0x71a: V443 = 0x30d
0x71d: THROWI V442
---
Entry stack: [V419]
Stack pops: 0
Stack additions: [V430, 0x2eb, V441]
Exit stack: []

================================

Block 0x71e
[0x71e:0x74f]
---
Predecessors: [0x6c7]
Successors: [0x750]
---
0x71e PUSH1 0x0
0x720 DUP1
0x721 REVERT
0x722 JUMPDEST
0x723 POP
0x724 PUSH2 0x316
0x727 PUSH2 0x9ba
0x72a JUMP
0x72b JUMPDEST
0x72c PUSH1 0x40
0x72e MLOAD
0x72f DUP1
0x730 DUP1
0x731 PUSH1 0x20
0x733 ADD
0x734 DUP3
0x735 DUP2
0x736 SUB
0x737 DUP3
0x738 MSTORE
0x739 DUP4
0x73a DUP2
0x73b DUP2
0x73c MLOAD
0x73d DUP2
0x73e MSTORE
0x73f PUSH1 0x20
0x741 ADD
0x742 SWAP2
0x743 POP
0x744 DUP1
0x745 MLOAD
0x746 SWAP1
0x747 PUSH1 0x20
0x749 ADD
0x74a SWAP1
0x74b DUP1
0x74c DUP4
0x74d DUP4
0x74e PUSH1 0x0
---
0x71e: V444 = 0x0
0x721: REVERT 0x0 0x0
0x722: JUMPDEST 
0x724: V445 = 0x316
0x727: V446 = 0x9ba
0x72a: THROW 
0x72b: JUMPDEST 
0x72c: V447 = 0x40
0x72e: V448 = M[0x40]
0x731: V449 = 0x20
0x733: V450 = ADD 0x20 V448
0x736: V451 = SUB V450 V448
0x738: M[V448] = V451
0x73c: V452 = M[S0]
0x73e: M[V450] = V452
0x73f: V453 = 0x20
0x741: V454 = ADD 0x20 V450
0x745: V455 = M[S0]
0x747: V456 = 0x20
0x749: V457 = ADD 0x20 S0
0x74e: V458 = 0x0
---
Entry stack: [V441]
Stack pops: 0
Stack additions: [0x316, 0x0, V457, V454, V455, V455, V457, V454, V448, V448, S0]
Exit stack: []

================================

Block 0x750
[0x750:0x758]
---
Predecessors: [0x71e]
Successors: [0x759]
---
0x750 JUMPDEST
0x751 DUP4
0x752 DUP2
0x753 LT
0x754 ISZERO
0x755 PUSH2 0x356
0x758 JUMPI
---
0x750: JUMPDEST 
0x753: V459 = LT 0x0 V455
0x754: V460 = ISZERO V459
0x755: V461 = 0x356
0x758: THROWI V460
---
Entry stack: [S9, V448, V448, V454, V457, V455, V455, V454, V457, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V448, V448, V454, V457, V455, V455, V454, V457, 0x0]

================================

Block 0x759
[0x759:0x77e]
---
Predecessors: [0x750]
Successors: [0x77f]
---
0x759 DUP1
0x75a DUP3
0x75b ADD
0x75c MLOAD
0x75d DUP2
0x75e DUP5
0x75f ADD
0x760 MSTORE
0x761 PUSH1 0x20
0x763 DUP2
0x764 ADD
0x765 SWAP1
0x766 POP
0x767 PUSH2 0x33b
0x76a JUMP
0x76b JUMPDEST
0x76c POP
0x76d POP
0x76e POP
0x76f POP
0x770 SWAP1
0x771 POP
0x772 SWAP1
0x773 DUP2
0x774 ADD
0x775 SWAP1
0x776 PUSH1 0x1f
0x778 AND
0x779 DUP1
0x77a ISZERO
0x77b PUSH2 0x383
0x77e JUMPI
---
0x75b: V462 = ADD V457 0x0
0x75c: V463 = M[V462]
0x75f: V464 = ADD V454 0x0
0x760: M[V464] = V463
0x761: V465 = 0x20
0x764: V466 = ADD 0x0 0x20
0x767: V467 = 0x33b
0x76a: THROW 
0x76b: JUMPDEST 
0x774: V468 = ADD S4 S6
0x776: V469 = 0x1f
0x778: V470 = AND 0x1f S4
0x77a: V471 = ISZERO V470
0x77b: V472 = 0x383
0x77e: THROWI V471
---
Entry stack: [S9, V448, V448, V454, V457, V455, V455, V454, V457, 0x0]
Stack pops: 3
Stack additions: [V470, V468]
Exit stack: []

================================

Block 0x77f
[0x77f:0x797]
---
Predecessors: [0x759]
Successors: [0x798]
---
0x77f DUP1
0x780 DUP3
0x781 SUB
0x782 DUP1
0x783 MLOAD
0x784 PUSH1 0x1
0x786 DUP4
0x787 PUSH1 0x20
0x789 SUB
0x78a PUSH2 0x100
0x78d EXP
0x78e SUB
0x78f NOT
0x790 AND
0x791 DUP2
0x792 MSTORE
0x793 PUSH1 0x20
0x795 ADD
0x796 SWAP2
0x797 POP
---
0x781: V473 = SUB V468 V470
0x783: V474 = M[V473]
0x784: V475 = 0x1
0x787: V476 = 0x20
0x789: V477 = SUB 0x20 V470
0x78a: V478 = 0x100
0x78d: V479 = EXP 0x100 V477
0x78e: V480 = SUB V479 0x1
0x78f: V481 = NOT V480
0x790: V482 = AND V481 V474
0x792: M[V473] = V482
0x793: V483 = 0x20
0x795: V484 = ADD 0x20 V473
---
Entry stack: [V468, V470]
Stack pops: 2
Stack additions: [V484, S0]
Exit stack: [V484, V470]

================================

Block 0x798
[0x798:0x7ad]
---
Predecessors: [0x77f]
Successors: [0x7ae]
---
0x798 JUMPDEST
0x799 POP
0x79a SWAP3
0x79b POP
0x79c POP
0x79d POP
0x79e PUSH1 0x40
0x7a0 MLOAD
0x7a1 DUP1
0x7a2 SWAP2
0x7a3 SUB
0x7a4 SWAP1
0x7a5 RETURN
0x7a6 JUMPDEST
0x7a7 CALLVALUE
0x7a8 DUP1
0x7a9 ISZERO
0x7aa PUSH2 0x39d
0x7ad JUMPI
---
0x798: JUMPDEST 
0x79e: V485 = 0x40
0x7a0: V486 = M[0x40]
0x7a3: V487 = SUB V484 V486
0x7a5: RETURN V486 V487
0x7a6: JUMPDEST 
0x7a7: V488 = CALLVALUE
0x7a9: V489 = ISZERO V488
0x7aa: V490 = 0x39d
0x7ad: THROWI V489
---
Entry stack: [V484, V470]
Stack pops: 10
Stack additions: [V488]
Exit stack: []

================================

Block 0x7ae
[0x7ae:0x812]
---
Predecessors: [0x798]
Successors: [0x813]
---
0x7ae PUSH1 0x0
0x7b0 DUP1
0x7b1 REVERT
0x7b2 JUMPDEST
0x7b3 POP
0x7b4 PUSH2 0x3dc
0x7b7 PUSH1 0x4
0x7b9 DUP1
0x7ba CALLDATASIZE
0x7bb SUB
0x7bc DUP2
0x7bd ADD
0x7be SWAP1
0x7bf DUP1
0x7c0 DUP1
0x7c1 CALLDATALOAD
0x7c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d7 AND
0x7d8 SWAP1
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc SWAP1
0x7dd SWAP3
0x7de SWAP2
0x7df SWAP1
0x7e0 DUP1
0x7e1 CALLDATALOAD
0x7e2 SWAP1
0x7e3 PUSH1 0x20
0x7e5 ADD
0x7e6 SWAP1
0x7e7 SWAP3
0x7e8 SWAP2
0x7e9 SWAP1
0x7ea POP
0x7eb POP
0x7ec POP
0x7ed PUSH2 0x9f3
0x7f0 JUMP
0x7f1 JUMPDEST
0x7f2 PUSH1 0x40
0x7f4 MLOAD
0x7f5 DUP1
0x7f6 DUP3
0x7f7 ISZERO
0x7f8 ISZERO
0x7f9 ISZERO
0x7fa ISZERO
0x7fb DUP2
0x7fc MSTORE
0x7fd PUSH1 0x20
0x7ff ADD
0x800 SWAP2
0x801 POP
0x802 POP
0x803 PUSH1 0x40
0x805 MLOAD
0x806 DUP1
0x807 SWAP2
0x808 SUB
0x809 SWAP1
0x80a RETURN
0x80b JUMPDEST
0x80c CALLVALUE
0x80d DUP1
0x80e ISZERO
0x80f PUSH2 0x402
0x812 JUMPI
---
0x7ae: V491 = 0x0
0x7b1: REVERT 0x0 0x0
0x7b2: JUMPDEST 
0x7b4: V492 = 0x3dc
0x7b7: V493 = 0x4
0x7ba: V494 = CALLDATASIZE
0x7bb: V495 = SUB V494 0x4
0x7bd: V496 = ADD 0x4 V495
0x7c1: V497 = CALLDATALOAD 0x4
0x7c2: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d7: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x7d9: V500 = 0x20
0x7db: V501 = ADD 0x20 0x4
0x7e1: V502 = CALLDATALOAD 0x24
0x7e3: V503 = 0x20
0x7e5: V504 = ADD 0x20 0x24
0x7ed: V505 = 0x9f3
0x7f0: THROW 
0x7f1: JUMPDEST 
0x7f2: V506 = 0x40
0x7f4: V507 = M[0x40]
0x7f7: V508 = ISZERO S0
0x7f8: V509 = ISZERO V508
0x7f9: V510 = ISZERO V509
0x7fa: V511 = ISZERO V510
0x7fc: M[V507] = V511
0x7fd: V512 = 0x20
0x7ff: V513 = ADD 0x20 V507
0x803: V514 = 0x40
0x805: V515 = M[0x40]
0x808: V516 = SUB V513 V515
0x80a: RETURN V515 V516
0x80b: JUMPDEST 
0x80c: V517 = CALLVALUE
0x80e: V518 = ISZERO V517
0x80f: V519 = 0x402
0x812: THROWI V518
---
Entry stack: [V488]
Stack pops: 0
Stack additions: [V502, V499, 0x3dc, V517]
Exit stack: []

================================

Block 0x813
[0x813:0x9ef]
---
Predecessors: [0x7ae]
Successors: [0x9f0]
---
0x813 PUSH1 0x0
0x815 DUP1
0x816 REVERT
0x817 JUMPDEST
0x818 POP
0x819 PUSH2 0x457
0x81c PUSH1 0x4
0x81e DUP1
0x81f CALLDATASIZE
0x820 SUB
0x821 DUP2
0x822 ADD
0x823 SWAP1
0x824 DUP1
0x825 DUP1
0x826 CALLDATALOAD
0x827 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83c AND
0x83d SWAP1
0x83e PUSH1 0x20
0x840 ADD
0x841 SWAP1
0x842 SWAP3
0x843 SWAP2
0x844 SWAP1
0x845 DUP1
0x846 CALLDATALOAD
0x847 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85c AND
0x85d SWAP1
0x85e PUSH1 0x20
0x860 ADD
0x861 SWAP1
0x862 SWAP3
0x863 SWAP2
0x864 SWAP1
0x865 POP
0x866 POP
0x867 POP
0x868 PUSH2 0xc12
0x86b JUMP
0x86c JUMPDEST
0x86d PUSH1 0x40
0x86f MLOAD
0x870 DUP1
0x871 DUP3
0x872 DUP2
0x873 MSTORE
0x874 PUSH1 0x20
0x876 ADD
0x877 SWAP2
0x878 POP
0x879 POP
0x87a PUSH1 0x40
0x87c MLOAD
0x87d DUP1
0x87e SWAP2
0x87f SUB
0x880 SWAP1
0x881 RETURN
0x882 JUMPDEST
0x883 PUSH1 0x40
0x885 DUP1
0x886 MLOAD
0x887 SWAP1
0x888 DUP2
0x889 ADD
0x88a PUSH1 0x40
0x88c MSTORE
0x88d DUP1
0x88e PUSH1 0x9
0x890 DUP2
0x891 MSTORE
0x892 PUSH1 0x20
0x894 ADD
0x895 PUSH32 0x426c6f6e6b436f696e0000000000000000000000000000000000000000000000
0x8b6 DUP2
0x8b7 MSTORE
0x8b8 POP
0x8b9 DUP2
0x8ba JUMP
0x8bb JUMPDEST
0x8bc PUSH1 0x0
0x8be DUP2
0x8bf PUSH1 0x2
0x8c1 PUSH1 0x0
0x8c3 CALLER
0x8c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d9 AND
0x8da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ef AND
0x8f0 DUP2
0x8f1 MSTORE
0x8f2 PUSH1 0x20
0x8f4 ADD
0x8f5 SWAP1
0x8f6 DUP2
0x8f7 MSTORE
0x8f8 PUSH1 0x20
0x8fa ADD
0x8fb PUSH1 0x0
0x8fd SHA3
0x8fe PUSH1 0x0
0x900 DUP6
0x901 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x916 AND
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d DUP2
0x92e MSTORE
0x92f PUSH1 0x20
0x931 ADD
0x932 SWAP1
0x933 DUP2
0x934 MSTORE
0x935 PUSH1 0x20
0x937 ADD
0x938 PUSH1 0x0
0x93a SHA3
0x93b DUP2
0x93c SWAP1
0x93d SSTORE
0x93e POP
0x93f DUP3
0x940 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x955 AND
0x956 CALLER
0x957 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96c AND
0x96d PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x98e DUP5
0x98f PUSH1 0x40
0x991 MLOAD
0x992 DUP1
0x993 DUP3
0x994 DUP2
0x995 MSTORE
0x996 PUSH1 0x20
0x998 ADD
0x999 SWAP2
0x99a POP
0x99b POP
0x99c PUSH1 0x40
0x99e MLOAD
0x99f DUP1
0x9a0 SWAP2
0x9a1 SUB
0x9a2 SWAP1
0x9a3 LOG3
0x9a4 PUSH1 0x1
0x9a6 SWAP1
0x9a7 POP
0x9a8 SWAP3
0x9a9 SWAP2
0x9aa POP
0x9ab POP
0x9ac JUMP
0x9ad JUMPDEST
0x9ae PUSH1 0x0
0x9b0 PUSH1 0x1
0x9b2 SLOAD
0x9b3 SWAP1
0x9b4 POP
0x9b5 SWAP1
0x9b6 JUMP
0x9b7 JUMPDEST
0x9b8 PUSH1 0x0
0x9ba DUP1
0x9bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d0 AND
0x9d1 DUP4
0x9d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e7 AND
0x9e8 EQ
0x9e9 ISZERO
0x9ea ISZERO
0x9eb ISZERO
0x9ec PUSH2 0x5df
0x9ef JUMPI
---
0x813: V520 = 0x0
0x816: REVERT 0x0 0x0
0x817: JUMPDEST 
0x819: V521 = 0x457
0x81c: V522 = 0x4
0x81f: V523 = CALLDATASIZE
0x820: V524 = SUB V523 0x4
0x822: V525 = ADD 0x4 V524
0x826: V526 = CALLDATALOAD 0x4
0x827: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0x83c: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x83e: V529 = 0x20
0x840: V530 = ADD 0x20 0x4
0x846: V531 = CALLDATALOAD 0x24
0x847: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x85c: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x85e: V534 = 0x20
0x860: V535 = ADD 0x20 0x24
0x868: V536 = 0xc12
0x86b: THROW 
0x86c: JUMPDEST 
0x86d: V537 = 0x40
0x86f: V538 = M[0x40]
0x873: M[V538] = S0
0x874: V539 = 0x20
0x876: V540 = ADD 0x20 V538
0x87a: V541 = 0x40
0x87c: V542 = M[0x40]
0x87f: V543 = SUB V540 V542
0x881: RETURN V542 V543
0x882: JUMPDEST 
0x883: V544 = 0x40
0x886: V545 = M[0x40]
0x889: V546 = ADD V545 0x40
0x88a: V547 = 0x40
0x88c: M[0x40] = V546
0x88e: V548 = 0x9
0x891: M[V545] = 0x9
0x892: V549 = 0x20
0x894: V550 = ADD 0x20 V545
0x895: V551 = 0x426c6f6e6b436f696e0000000000000000000000000000000000000000000000
0x8b7: M[V550] = 0x426c6f6e6b436f696e0000000000000000000000000000000000000000000000
0x8ba: JUMP S0
0x8bb: JUMPDEST 
0x8bc: V552 = 0x0
0x8bf: V553 = 0x2
0x8c1: V554 = 0x0
0x8c3: V555 = CALLER
0x8c4: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d9: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x8da: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ef: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x8f1: M[0x0] = V559
0x8f2: V560 = 0x20
0x8f4: V561 = ADD 0x20 0x0
0x8f7: M[0x20] = 0x2
0x8f8: V562 = 0x20
0x8fa: V563 = ADD 0x20 0x20
0x8fb: V564 = 0x0
0x8fd: V565 = SHA3 0x0 0x40
0x8fe: V566 = 0x0
0x901: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x916: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x917: V569 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x92e: M[0x0] = V570
0x92f: V571 = 0x20
0x931: V572 = ADD 0x20 0x0
0x934: M[0x20] = V565
0x935: V573 = 0x20
0x937: V574 = ADD 0x20 0x20
0x938: V575 = 0x0
0x93a: V576 = SHA3 0x0 0x40
0x93d: S[V576] = S0
0x940: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0x955: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x956: V579 = CALLER
0x957: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0x96c: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x96d: V582 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x98f: V583 = 0x40
0x991: V584 = M[0x40]
0x995: M[V584] = S0
0x996: V585 = 0x20
0x998: V586 = ADD 0x20 V584
0x99c: V587 = 0x40
0x99e: V588 = M[0x40]
0x9a1: V589 = SUB V586 V588
0x9a3: LOG V588 V589 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V581 V578
0x9a4: V590 = 0x1
0x9ac: JUMP S2
0x9ad: JUMPDEST 
0x9ae: V591 = 0x0
0x9b0: V592 = 0x1
0x9b2: V593 = S[0x1]
0x9b6: JUMP S0
0x9b7: JUMPDEST 
0x9b8: V594 = 0x0
0x9bb: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d0: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x9d2: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x9e8: V599 = EQ V598 0x0
0x9e9: V600 = ISZERO V599
0x9ea: V601 = ISZERO V600
0x9eb: V602 = ISZERO V601
0x9ec: V603 = 0x5df
0x9ef: THROWI V602
---
Entry stack: [V517]
Stack pops: 0
Stack additions: [V533, V528, 0x457, V545, S0, 0x1, V593, 0x0, S0, S1]
Exit stack: []

================================

Block 0x9f0
[0x9f0:0xa3c]
---
Predecessors: [0x813]
Successors: [0xa3d]
---
0x9f0 PUSH1 0x0
0x9f2 DUP1
0x9f3 REVERT
0x9f4 JUMPDEST
0x9f5 PUSH1 0x0
0x9f7 DUP1
0x9f8 DUP6
0x9f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0e AND
0xa0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa24 AND
0xa25 DUP2
0xa26 MSTORE
0xa27 PUSH1 0x20
0xa29 ADD
0xa2a SWAP1
0xa2b DUP2
0xa2c MSTORE
0xa2d PUSH1 0x20
0xa2f ADD
0xa30 PUSH1 0x0
0xa32 SHA3
0xa33 SLOAD
0xa34 DUP3
0xa35 GT
0xa36 ISZERO
0xa37 ISZERO
0xa38 ISZERO
0xa39 PUSH2 0x62c
0xa3c JUMPI
---
0x9f0: V604 = 0x0
0x9f3: REVERT 0x0 0x0
0x9f4: JUMPDEST 
0x9f5: V605 = 0x0
0x9f9: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0e: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa0f: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0xa24: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0xa26: M[0x0] = V609
0xa27: V610 = 0x20
0xa29: V611 = ADD 0x20 0x0
0xa2c: M[0x20] = 0x0
0xa2d: V612 = 0x20
0xa2f: V613 = ADD 0x20 0x20
0xa30: V614 = 0x0
0xa32: V615 = SHA3 0x0 0x40
0xa33: V616 = S[V615]
0xa35: V617 = GT S1 V616
0xa36: V618 = ISZERO V617
0xa37: V619 = ISZERO V618
0xa38: V620 = ISZERO V619
0xa39: V621 = 0x62c
0xa3c: THROWI V620
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0xa3d
[0xa3d:0xac7]
---
Predecessors: [0x9f0]
Successors: [0xac8]
---
0xa3d PUSH1 0x0
0xa3f DUP1
0xa40 REVERT
0xa41 JUMPDEST
0xa42 PUSH1 0x2
0xa44 PUSH1 0x0
0xa46 DUP6
0xa47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5c AND
0xa5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa72 AND
0xa73 DUP2
0xa74 MSTORE
0xa75 PUSH1 0x20
0xa77 ADD
0xa78 SWAP1
0xa79 DUP2
0xa7a MSTORE
0xa7b PUSH1 0x20
0xa7d ADD
0xa7e PUSH1 0x0
0xa80 SHA3
0xa81 PUSH1 0x0
0xa83 CALLER
0xa84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa99 AND
0xa9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaaf AND
0xab0 DUP2
0xab1 MSTORE
0xab2 PUSH1 0x20
0xab4 ADD
0xab5 SWAP1
0xab6 DUP2
0xab7 MSTORE
0xab8 PUSH1 0x20
0xaba ADD
0xabb PUSH1 0x0
0xabd SHA3
0xabe SLOAD
0xabf DUP3
0xac0 GT
0xac1 ISZERO
0xac2 ISZERO
0xac3 ISZERO
0xac4 PUSH2 0x6b7
0xac7 JUMPI
---
0xa3d: V622 = 0x0
0xa40: REVERT 0x0 0x0
0xa41: JUMPDEST 
0xa42: V623 = 0x2
0xa44: V624 = 0x0
0xa47: V625 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5c: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa5d: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0xa72: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V626
0xa74: M[0x0] = V628
0xa75: V629 = 0x20
0xa77: V630 = ADD 0x20 0x0
0xa7a: M[0x20] = 0x2
0xa7b: V631 = 0x20
0xa7d: V632 = ADD 0x20 0x20
0xa7e: V633 = 0x0
0xa80: V634 = SHA3 0x0 0x40
0xa81: V635 = 0x0
0xa83: V636 = CALLER
0xa84: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xa99: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0xa9a: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xaaf: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0xab1: M[0x0] = V640
0xab2: V641 = 0x20
0xab4: V642 = ADD 0x20 0x0
0xab7: M[0x20] = V634
0xab8: V643 = 0x20
0xaba: V644 = ADD 0x20 0x20
0xabb: V645 = 0x0
0xabd: V646 = SHA3 0x0 0x40
0xabe: V647 = S[V646]
0xac0: V648 = GT S1 V647
0xac1: V649 = ISZERO V648
0xac2: V650 = ISZERO V649
0xac3: V651 = ISZERO V650
0xac4: V652 = 0x6b7
0xac7: THROWI V651
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0xac8
[0xac8:0xe40]
---
Predecessors: [0xa3d]
Successors: [0xe41]
---
0xac8 PUSH1 0x0
0xaca DUP1
0xacb REVERT
0xacc JUMPDEST
0xacd PUSH2 0x708
0xad0 DUP3
0xad1 PUSH1 0x0
0xad3 DUP1
0xad4 DUP8
0xad5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaea AND
0xaeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb00 AND
0xb01 DUP2
0xb02 MSTORE
0xb03 PUSH1 0x20
0xb05 ADD
0xb06 SWAP1
0xb07 DUP2
0xb08 MSTORE
0xb09 PUSH1 0x20
0xb0b ADD
0xb0c PUSH1 0x0
0xb0e SHA3
0xb0f SLOAD
0xb10 PUSH2 0xc99
0xb13 SWAP1
0xb14 SWAP2
0xb15 SWAP1
0xb16 PUSH4 0xffffffff
0xb1b AND
0xb1c JUMP
0xb1d JUMPDEST
0xb1e PUSH1 0x0
0xb20 DUP1
0xb21 DUP7
0xb22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb37 AND
0xb38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4d AND
0xb4e DUP2
0xb4f MSTORE
0xb50 PUSH1 0x20
0xb52 ADD
0xb53 SWAP1
0xb54 DUP2
0xb55 MSTORE
0xb56 PUSH1 0x20
0xb58 ADD
0xb59 PUSH1 0x0
0xb5b SHA3
0xb5c DUP2
0xb5d SWAP1
0xb5e SSTORE
0xb5f POP
0xb60 PUSH2 0x79b
0xb63 DUP3
0xb64 PUSH1 0x0
0xb66 DUP1
0xb67 DUP7
0xb68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7d AND
0xb7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb93 AND
0xb94 DUP2
0xb95 MSTORE
0xb96 PUSH1 0x20
0xb98 ADD
0xb99 SWAP1
0xb9a DUP2
0xb9b MSTORE
0xb9c PUSH1 0x20
0xb9e ADD
0xb9f PUSH1 0x0
0xba1 SHA3
0xba2 SLOAD
0xba3 PUSH2 0xcb2
0xba6 SWAP1
0xba7 SWAP2
0xba8 SWAP1
0xba9 PUSH4 0xffffffff
0xbae AND
0xbaf JUMP
0xbb0 JUMPDEST
0xbb1 PUSH1 0x0
0xbb3 DUP1
0xbb4 DUP6
0xbb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbca AND
0xbcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe0 AND
0xbe1 DUP2
0xbe2 MSTORE
0xbe3 PUSH1 0x20
0xbe5 ADD
0xbe6 SWAP1
0xbe7 DUP2
0xbe8 MSTORE
0xbe9 PUSH1 0x20
0xbeb ADD
0xbec PUSH1 0x0
0xbee SHA3
0xbef DUP2
0xbf0 SWAP1
0xbf1 SSTORE
0xbf2 POP
0xbf3 PUSH2 0x86c
0xbf6 DUP3
0xbf7 PUSH1 0x2
0xbf9 PUSH1 0x0
0xbfb DUP8
0xbfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc11 AND
0xc12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc27 AND
0xc28 DUP2
0xc29 MSTORE
0xc2a PUSH1 0x20
0xc2c ADD
0xc2d SWAP1
0xc2e DUP2
0xc2f MSTORE
0xc30 PUSH1 0x20
0xc32 ADD
0xc33 PUSH1 0x0
0xc35 SHA3
0xc36 PUSH1 0x0
0xc38 CALLER
0xc39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4e AND
0xc4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc64 AND
0xc65 DUP2
0xc66 MSTORE
0xc67 PUSH1 0x20
0xc69 ADD
0xc6a SWAP1
0xc6b DUP2
0xc6c MSTORE
0xc6d PUSH1 0x20
0xc6f ADD
0xc70 PUSH1 0x0
0xc72 SHA3
0xc73 SLOAD
0xc74 PUSH2 0xc99
0xc77 SWAP1
0xc78 SWAP2
0xc79 SWAP1
0xc7a PUSH4 0xffffffff
0xc7f AND
0xc80 JUMP
0xc81 JUMPDEST
0xc82 PUSH1 0x2
0xc84 PUSH1 0x0
0xc86 DUP7
0xc87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9c AND
0xc9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb2 AND
0xcb3 DUP2
0xcb4 MSTORE
0xcb5 PUSH1 0x20
0xcb7 ADD
0xcb8 SWAP1
0xcb9 DUP2
0xcba MSTORE
0xcbb PUSH1 0x20
0xcbd ADD
0xcbe PUSH1 0x0
0xcc0 SHA3
0xcc1 PUSH1 0x0
0xcc3 CALLER
0xcc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd9 AND
0xcda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcef AND
0xcf0 DUP2
0xcf1 MSTORE
0xcf2 PUSH1 0x20
0xcf4 ADD
0xcf5 SWAP1
0xcf6 DUP2
0xcf7 MSTORE
0xcf8 PUSH1 0x20
0xcfa ADD
0xcfb PUSH1 0x0
0xcfd SHA3
0xcfe DUP2
0xcff SWAP1
0xd00 SSTORE
0xd01 POP
0xd02 DUP3
0xd03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd18 AND
0xd19 DUP5
0xd1a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2f AND
0xd30 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd51 DUP5
0xd52 PUSH1 0x40
0xd54 MLOAD
0xd55 DUP1
0xd56 DUP3
0xd57 DUP2
0xd58 MSTORE
0xd59 PUSH1 0x20
0xd5b ADD
0xd5c SWAP2
0xd5d POP
0xd5e POP
0xd5f PUSH1 0x40
0xd61 MLOAD
0xd62 DUP1
0xd63 SWAP2
0xd64 SUB
0xd65 SWAP1
0xd66 LOG3
0xd67 PUSH1 0x1
0xd69 SWAP1
0xd6a POP
0xd6b SWAP4
0xd6c SWAP3
0xd6d POP
0xd6e POP
0xd6f POP
0xd70 JUMP
0xd71 JUMPDEST
0xd72 PUSH1 0x12
0xd74 PUSH1 0xff
0xd76 AND
0xd77 PUSH1 0xa
0xd79 EXP
0xd7a PUSH4 0x1406f40
0xd7f MUL
0xd80 DUP2
0xd81 JUMP
0xd82 JUMPDEST
0xd83 PUSH1 0x12
0xd85 DUP2
0xd86 JUMP
0xd87 JUMPDEST
0xd88 PUSH1 0x0
0xd8a DUP1
0xd8b PUSH1 0x0
0xd8d DUP4
0xd8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda3 AND
0xda4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb9 AND
0xdba DUP2
0xdbb MSTORE
0xdbc PUSH1 0x20
0xdbe ADD
0xdbf SWAP1
0xdc0 DUP2
0xdc1 MSTORE
0xdc2 PUSH1 0x20
0xdc4 ADD
0xdc5 PUSH1 0x0
0xdc7 SHA3
0xdc8 SLOAD
0xdc9 SWAP1
0xdca POP
0xdcb SWAP2
0xdcc SWAP1
0xdcd POP
0xdce JUMP
0xdcf JUMPDEST
0xdd0 PUSH1 0x40
0xdd2 DUP1
0xdd3 MLOAD
0xdd4 SWAP1
0xdd5 DUP2
0xdd6 ADD
0xdd7 PUSH1 0x40
0xdd9 MSTORE
0xdda DUP1
0xddb PUSH1 0x3
0xddd DUP2
0xdde MSTORE
0xddf PUSH1 0x20
0xde1 ADD
0xde2 PUSH32 0x424c4e0000000000000000000000000000000000000000000000000000000000
0xe03 DUP2
0xe04 MSTORE
0xe05 POP
0xe06 DUP2
0xe07 JUMP
0xe08 JUMPDEST
0xe09 PUSH1 0x0
0xe0b DUP1
0xe0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe21 AND
0xe22 DUP4
0xe23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe38 AND
0xe39 EQ
0xe3a ISZERO
0xe3b ISZERO
0xe3c ISZERO
0xe3d PUSH2 0xa30
0xe40 JUMPI
---
0xac8: V653 = 0x0
0xacb: REVERT 0x0 0x0
0xacc: JUMPDEST 
0xacd: V654 = 0x708
0xad1: V655 = 0x0
0xad5: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xaea: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xaeb: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0xb00: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0xb02: M[0x0] = V659
0xb03: V660 = 0x20
0xb05: V661 = ADD 0x20 0x0
0xb08: M[0x20] = 0x0
0xb09: V662 = 0x20
0xb0b: V663 = ADD 0x20 0x20
0xb0c: V664 = 0x0
0xb0e: V665 = SHA3 0x0 0x40
0xb0f: V666 = S[V665]
0xb10: V667 = 0xc99
0xb16: V668 = 0xffffffff
0xb1b: V669 = AND 0xffffffff 0xc99
0xb1c: THROW 
0xb1d: JUMPDEST 
0xb1e: V670 = 0x0
0xb22: V671 = 0xffffffffffffffffffffffffffffffffffffffff
0xb37: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xb38: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4d: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0xb4f: M[0x0] = V674
0xb50: V675 = 0x20
0xb52: V676 = ADD 0x20 0x0
0xb55: M[0x20] = 0x0
0xb56: V677 = 0x20
0xb58: V678 = ADD 0x20 0x20
0xb59: V679 = 0x0
0xb5b: V680 = SHA3 0x0 0x40
0xb5e: S[V680] = S0
0xb60: V681 = 0x79b
0xb64: V682 = 0x0
0xb68: V683 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7d: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb7e: V685 = 0xffffffffffffffffffffffffffffffffffffffff
0xb93: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0xb95: M[0x0] = V686
0xb96: V687 = 0x20
0xb98: V688 = ADD 0x20 0x0
0xb9b: M[0x20] = 0x0
0xb9c: V689 = 0x20
0xb9e: V690 = ADD 0x20 0x20
0xb9f: V691 = 0x0
0xba1: V692 = SHA3 0x0 0x40
0xba2: V693 = S[V692]
0xba3: V694 = 0xcb2
0xba9: V695 = 0xffffffff
0xbae: V696 = AND 0xffffffff 0xcb2
0xbaf: THROW 
0xbb0: JUMPDEST 
0xbb1: V697 = 0x0
0xbb5: V698 = 0xffffffffffffffffffffffffffffffffffffffff
0xbca: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xbcb: V700 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe0: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff V699
0xbe2: M[0x0] = V701
0xbe3: V702 = 0x20
0xbe5: V703 = ADD 0x20 0x0
0xbe8: M[0x20] = 0x0
0xbe9: V704 = 0x20
0xbeb: V705 = ADD 0x20 0x20
0xbec: V706 = 0x0
0xbee: V707 = SHA3 0x0 0x40
0xbf1: S[V707] = S0
0xbf3: V708 = 0x86c
0xbf7: V709 = 0x2
0xbf9: V710 = 0x0
0xbfc: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0xc11: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc12: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0xc27: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0xc29: M[0x0] = V714
0xc2a: V715 = 0x20
0xc2c: V716 = ADD 0x20 0x0
0xc2f: M[0x20] = 0x2
0xc30: V717 = 0x20
0xc32: V718 = ADD 0x20 0x20
0xc33: V719 = 0x0
0xc35: V720 = SHA3 0x0 0x40
0xc36: V721 = 0x0
0xc38: V722 = CALLER
0xc39: V723 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4e: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0xc4f: V725 = 0xffffffffffffffffffffffffffffffffffffffff
0xc64: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0xc66: M[0x0] = V726
0xc67: V727 = 0x20
0xc69: V728 = ADD 0x20 0x0
0xc6c: M[0x20] = V720
0xc6d: V729 = 0x20
0xc6f: V730 = ADD 0x20 0x20
0xc70: V731 = 0x0
0xc72: V732 = SHA3 0x0 0x40
0xc73: V733 = S[V732]
0xc74: V734 = 0xc99
0xc7a: V735 = 0xffffffff
0xc7f: V736 = AND 0xffffffff 0xc99
0xc80: THROW 
0xc81: JUMPDEST 
0xc82: V737 = 0x2
0xc84: V738 = 0x0
0xc87: V739 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9c: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc9d: V741 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb2: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V740
0xcb4: M[0x0] = V742
0xcb5: V743 = 0x20
0xcb7: V744 = ADD 0x20 0x0
0xcba: M[0x20] = 0x2
0xcbb: V745 = 0x20
0xcbd: V746 = ADD 0x20 0x20
0xcbe: V747 = 0x0
0xcc0: V748 = SHA3 0x0 0x40
0xcc1: V749 = 0x0
0xcc3: V750 = CALLER
0xcc4: V751 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd9: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0xcda: V753 = 0xffffffffffffffffffffffffffffffffffffffff
0xcef: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff V752
0xcf1: M[0x0] = V754
0xcf2: V755 = 0x20
0xcf4: V756 = ADD 0x20 0x0
0xcf7: M[0x20] = V748
0xcf8: V757 = 0x20
0xcfa: V758 = ADD 0x20 0x20
0xcfb: V759 = 0x0
0xcfd: V760 = SHA3 0x0 0x40
0xd00: S[V760] = S0
0xd03: V761 = 0xffffffffffffffffffffffffffffffffffffffff
0xd18: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd1a: V763 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2f: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xd30: V765 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd52: V766 = 0x40
0xd54: V767 = M[0x40]
0xd58: M[V767] = S2
0xd59: V768 = 0x20
0xd5b: V769 = ADD 0x20 V767
0xd5f: V770 = 0x40
0xd61: V771 = M[0x40]
0xd64: V772 = SUB V769 V771
0xd66: LOG V771 V772 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V764 V762
0xd67: V773 = 0x1
0xd70: JUMP S5
0xd71: JUMPDEST 
0xd72: V774 = 0x12
0xd74: V775 = 0xff
0xd76: V776 = AND 0xff 0x12
0xd77: V777 = 0xa
0xd79: V778 = EXP 0xa 0x12
0xd7a: V779 = 0x1406f40
0xd7f: V780 = MUL 0x1406f40 0xde0b6b3a7640000
0xd81: JUMP S0
0xd82: JUMPDEST 
0xd83: V781 = 0x12
0xd86: JUMP S0
0xd87: JUMPDEST 
0xd88: V782 = 0x0
0xd8b: V783 = 0x0
0xd8e: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xda3: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xda4: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb9: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0xdbb: M[0x0] = V787
0xdbc: V788 = 0x20
0xdbe: V789 = ADD 0x20 0x0
0xdc1: M[0x20] = 0x0
0xdc2: V790 = 0x20
0xdc4: V791 = ADD 0x20 0x20
0xdc5: V792 = 0x0
0xdc7: V793 = SHA3 0x0 0x40
0xdc8: V794 = S[V793]
0xdce: JUMP S1
0xdcf: JUMPDEST 
0xdd0: V795 = 0x40
0xdd3: V796 = M[0x40]
0xdd6: V797 = ADD V796 0x40
0xdd7: V798 = 0x40
0xdd9: M[0x40] = V797
0xddb: V799 = 0x3
0xdde: M[V796] = 0x3
0xddf: V800 = 0x20
0xde1: V801 = ADD 0x20 V796
0xde2: V802 = 0x424c4e0000000000000000000000000000000000000000000000000000000000
0xe04: M[V801] = 0x424c4e0000000000000000000000000000000000000000000000000000000000
0xe07: JUMP S0
0xe08: JUMPDEST 
0xe09: V803 = 0x0
0xe0c: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xe21: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xe23: V806 = 0xffffffffffffffffffffffffffffffffffffffff
0xe38: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xe39: V808 = EQ V807 0x0
0xe3a: V809 = ISZERO V808
0xe3b: V810 = ISZERO V809
0xe3c: V811 = ISZERO V810
0xe3d: V812 = 0xa30
0xe40: THROWI V811
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S1, V666, 0x708, S0, S1, S2, S3, S2, V693, 0x79b, S1, S2, S3, S4, S2, V733, 0x86c, S1, S2, S3, S4, 0x1, 0x115eec47f6cf7e35000000, S0, 0x12, S0, V794, V796, S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0xe41
[0xe41:0xe8d]
---
Predecessors: [0xac8]
Successors: [0xe8e]
---
0xe41 PUSH1 0x0
0xe43 DUP1
0xe44 REVERT
0xe45 JUMPDEST
0xe46 PUSH1 0x0
0xe48 DUP1
0xe49 CALLER
0xe4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5f AND
0xe60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe75 AND
0xe76 DUP2
0xe77 MSTORE
0xe78 PUSH1 0x20
0xe7a ADD
0xe7b SWAP1
0xe7c DUP2
0xe7d MSTORE
0xe7e PUSH1 0x20
0xe80 ADD
0xe81 PUSH1 0x0
0xe83 SHA3
0xe84 SLOAD
0xe85 DUP3
0xe86 GT
0xe87 ISZERO
0xe88 ISZERO
0xe89 ISZERO
0xe8a PUSH2 0xa7d
0xe8d JUMPI
---
0xe41: V813 = 0x0
0xe44: REVERT 0x0 0x0
0xe45: JUMPDEST 
0xe46: V814 = 0x0
0xe49: V815 = CALLER
0xe4a: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5f: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V815
0xe60: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0xe75: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0xe77: M[0x0] = V819
0xe78: V820 = 0x20
0xe7a: V821 = ADD 0x20 0x0
0xe7d: M[0x20] = 0x0
0xe7e: V822 = 0x20
0xe80: V823 = ADD 0x20 0x20
0xe81: V824 = 0x0
0xe83: V825 = SHA3 0x0 0x40
0xe84: V826 = S[V825]
0xe86: V827 = GT S1 V826
0xe87: V828 = ISZERO V827
0xe88: V829 = ISZERO V828
0xe89: V830 = ISZERO V829
0xe8a: V831 = 0xa7d
0xe8d: THROWI V830
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xe8e
[0xe8e:0x10ba]
---
Predecessors: [0xe41]
Successors: [0x10bb]
---
0xe8e PUSH1 0x0
0xe90 DUP1
0xe91 REVERT
0xe92 JUMPDEST
0xe93 PUSH2 0xace
0xe96 DUP3
0xe97 PUSH1 0x0
0xe99 DUP1
0xe9a CALLER
0xe9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb0 AND
0xeb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec6 AND
0xec7 DUP2
0xec8 MSTORE
0xec9 PUSH1 0x20
0xecb ADD
0xecc SWAP1
0xecd DUP2
0xece MSTORE
0xecf PUSH1 0x20
0xed1 ADD
0xed2 PUSH1 0x0
0xed4 SHA3
0xed5 SLOAD
0xed6 PUSH2 0xc99
0xed9 SWAP1
0xeda SWAP2
0xedb SWAP1
0xedc PUSH4 0xffffffff
0xee1 AND
0xee2 JUMP
0xee3 JUMPDEST
0xee4 PUSH1 0x0
0xee6 DUP1
0xee7 CALLER
0xee8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xefd AND
0xefe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf13 AND
0xf14 DUP2
0xf15 MSTORE
0xf16 PUSH1 0x20
0xf18 ADD
0xf19 SWAP1
0xf1a DUP2
0xf1b MSTORE
0xf1c PUSH1 0x20
0xf1e ADD
0xf1f PUSH1 0x0
0xf21 SHA3
0xf22 DUP2
0xf23 SWAP1
0xf24 SSTORE
0xf25 POP
0xf26 PUSH2 0xb61
0xf29 DUP3
0xf2a PUSH1 0x0
0xf2c DUP1
0xf2d DUP7
0xf2e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf43 AND
0xf44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf59 AND
0xf5a DUP2
0xf5b MSTORE
0xf5c PUSH1 0x20
0xf5e ADD
0xf5f SWAP1
0xf60 DUP2
0xf61 MSTORE
0xf62 PUSH1 0x20
0xf64 ADD
0xf65 PUSH1 0x0
0xf67 SHA3
0xf68 SLOAD
0xf69 PUSH2 0xcb2
0xf6c SWAP1
0xf6d SWAP2
0xf6e SWAP1
0xf6f PUSH4 0xffffffff
0xf74 AND
0xf75 JUMP
0xf76 JUMPDEST
0xf77 PUSH1 0x0
0xf79 DUP1
0xf7a DUP6
0xf7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf90 AND
0xf91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa6 AND
0xfa7 DUP2
0xfa8 MSTORE
0xfa9 PUSH1 0x20
0xfab ADD
0xfac SWAP1
0xfad DUP2
0xfae MSTORE
0xfaf PUSH1 0x20
0xfb1 ADD
0xfb2 PUSH1 0x0
0xfb4 SHA3
0xfb5 DUP2
0xfb6 SWAP1
0xfb7 SSTORE
0xfb8 POP
0xfb9 DUP3
0xfba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcf AND
0xfd0 CALLER
0xfd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe6 AND
0xfe7 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1008 DUP5
0x1009 PUSH1 0x40
0x100b MLOAD
0x100c DUP1
0x100d DUP3
0x100e DUP2
0x100f MSTORE
0x1010 PUSH1 0x20
0x1012 ADD
0x1013 SWAP2
0x1014 POP
0x1015 POP
0x1016 PUSH1 0x40
0x1018 MLOAD
0x1019 DUP1
0x101a SWAP2
0x101b SUB
0x101c SWAP1
0x101d LOG3
0x101e PUSH1 0x1
0x1020 SWAP1
0x1021 POP
0x1022 SWAP3
0x1023 SWAP2
0x1024 POP
0x1025 POP
0x1026 JUMP
0x1027 JUMPDEST
0x1028 PUSH1 0x0
0x102a PUSH1 0x2
0x102c PUSH1 0x0
0x102e DUP5
0x102f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1044 AND
0x1045 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105a AND
0x105b DUP2
0x105c MSTORE
0x105d PUSH1 0x20
0x105f ADD
0x1060 SWAP1
0x1061 DUP2
0x1062 MSTORE
0x1063 PUSH1 0x20
0x1065 ADD
0x1066 PUSH1 0x0
0x1068 SHA3
0x1069 PUSH1 0x0
0x106b DUP4
0x106c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1081 AND
0x1082 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1097 AND
0x1098 DUP2
0x1099 MSTORE
0x109a PUSH1 0x20
0x109c ADD
0x109d SWAP1
0x109e DUP2
0x109f MSTORE
0x10a0 PUSH1 0x20
0x10a2 ADD
0x10a3 PUSH1 0x0
0x10a5 SHA3
0x10a6 SLOAD
0x10a7 SWAP1
0x10a8 POP
0x10a9 SWAP3
0x10aa SWAP2
0x10ab POP
0x10ac POP
0x10ad JUMP
0x10ae JUMPDEST
0x10af PUSH1 0x0
0x10b1 DUP3
0x10b2 DUP3
0x10b3 GT
0x10b4 ISZERO
0x10b5 ISZERO
0x10b6 ISZERO
0x10b7 PUSH2 0xca7
0x10ba JUMPI
---
0xe8e: V832 = 0x0
0xe91: REVERT 0x0 0x0
0xe92: JUMPDEST 
0xe93: V833 = 0xace
0xe97: V834 = 0x0
0xe9a: V835 = CALLER
0xe9b: V836 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb0: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff V835
0xeb1: V838 = 0xffffffffffffffffffffffffffffffffffffffff
0xec6: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V837
0xec8: M[0x0] = V839
0xec9: V840 = 0x20
0xecb: V841 = ADD 0x20 0x0
0xece: M[0x20] = 0x0
0xecf: V842 = 0x20
0xed1: V843 = ADD 0x20 0x20
0xed2: V844 = 0x0
0xed4: V845 = SHA3 0x0 0x40
0xed5: V846 = S[V845]
0xed6: V847 = 0xc99
0xedc: V848 = 0xffffffff
0xee1: V849 = AND 0xffffffff 0xc99
0xee2: THROW 
0xee3: JUMPDEST 
0xee4: V850 = 0x0
0xee7: V851 = CALLER
0xee8: V852 = 0xffffffffffffffffffffffffffffffffffffffff
0xefd: V853 = AND 0xffffffffffffffffffffffffffffffffffffffff V851
0xefe: V854 = 0xffffffffffffffffffffffffffffffffffffffff
0xf13: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0xf15: M[0x0] = V855
0xf16: V856 = 0x20
0xf18: V857 = ADD 0x20 0x0
0xf1b: M[0x20] = 0x0
0xf1c: V858 = 0x20
0xf1e: V859 = ADD 0x20 0x20
0xf1f: V860 = 0x0
0xf21: V861 = SHA3 0x0 0x40
0xf24: S[V861] = S0
0xf26: V862 = 0xb61
0xf2a: V863 = 0x0
0xf2e: V864 = 0xffffffffffffffffffffffffffffffffffffffff
0xf43: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf44: V866 = 0xffffffffffffffffffffffffffffffffffffffff
0xf59: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0xf5b: M[0x0] = V867
0xf5c: V868 = 0x20
0xf5e: V869 = ADD 0x20 0x0
0xf61: M[0x20] = 0x0
0xf62: V870 = 0x20
0xf64: V871 = ADD 0x20 0x20
0xf65: V872 = 0x0
0xf67: V873 = SHA3 0x0 0x40
0xf68: V874 = S[V873]
0xf69: V875 = 0xcb2
0xf6f: V876 = 0xffffffff
0xf74: V877 = AND 0xffffffff 0xcb2
0xf75: THROW 
0xf76: JUMPDEST 
0xf77: V878 = 0x0
0xf7b: V879 = 0xffffffffffffffffffffffffffffffffffffffff
0xf90: V880 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf91: V881 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa6: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff V880
0xfa8: M[0x0] = V882
0xfa9: V883 = 0x20
0xfab: V884 = ADD 0x20 0x0
0xfae: M[0x20] = 0x0
0xfaf: V885 = 0x20
0xfb1: V886 = ADD 0x20 0x20
0xfb2: V887 = 0x0
0xfb4: V888 = SHA3 0x0 0x40
0xfb7: S[V888] = S0
0xfba: V889 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcf: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xfd0: V891 = CALLER
0xfd1: V892 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe6: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff V891
0xfe7: V894 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1009: V895 = 0x40
0x100b: V896 = M[0x40]
0x100f: M[V896] = S2
0x1010: V897 = 0x20
0x1012: V898 = ADD 0x20 V896
0x1016: V899 = 0x40
0x1018: V900 = M[0x40]
0x101b: V901 = SUB V898 V900
0x101d: LOG V900 V901 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V893 V890
0x101e: V902 = 0x1
0x1026: JUMP S4
0x1027: JUMPDEST 
0x1028: V903 = 0x0
0x102a: V904 = 0x2
0x102c: V905 = 0x0
0x102f: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0x1044: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1045: V908 = 0xffffffffffffffffffffffffffffffffffffffff
0x105a: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V907
0x105c: M[0x0] = V909
0x105d: V910 = 0x20
0x105f: V911 = ADD 0x20 0x0
0x1062: M[0x20] = 0x2
0x1063: V912 = 0x20
0x1065: V913 = ADD 0x20 0x20
0x1066: V914 = 0x0
0x1068: V915 = SHA3 0x0 0x40
0x1069: V916 = 0x0
0x106c: V917 = 0xffffffffffffffffffffffffffffffffffffffff
0x1081: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1082: V919 = 0xffffffffffffffffffffffffffffffffffffffff
0x1097: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0x1099: M[0x0] = V920
0x109a: V921 = 0x20
0x109c: V922 = ADD 0x20 0x0
0x109f: M[0x20] = V915
0x10a0: V923 = 0x20
0x10a2: V924 = ADD 0x20 0x20
0x10a3: V925 = 0x0
0x10a5: V926 = SHA3 0x0 0x40
0x10a6: V927 = S[V926]
0x10ad: JUMP S2
0x10ae: JUMPDEST 
0x10af: V928 = 0x0
0x10b3: V929 = GT S0 S1
0x10b4: V930 = ISZERO V929
0x10b5: V931 = ISZERO V930
0x10b6: V932 = ISZERO V931
0x10b7: V933 = 0xca7
0x10ba: THROWI V932
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S1, V846, 0xace, S0, S1, S2, V874, 0xb61, S1, S2, S3, 0x1, V927, 0x0, S0, S1]
Exit stack: []

================================

Block 0x10bb
[0x10bb:0x10d8]
---
Predecessors: [0xe8e]
Successors: [0x10d9]
---
0x10bb INVALID
0x10bc JUMPDEST
0x10bd DUP2
0x10be DUP4
0x10bf SUB
0x10c0 SWAP1
0x10c1 POP
0x10c2 SWAP3
0x10c3 SWAP2
0x10c4 POP
0x10c5 POP
0x10c6 JUMP
0x10c7 JUMPDEST
0x10c8 PUSH1 0x0
0x10ca DUP2
0x10cb DUP4
0x10cc ADD
0x10cd SWAP1
0x10ce POP
0x10cf DUP3
0x10d0 DUP2
0x10d1 LT
0x10d2 ISZERO
0x10d3 ISZERO
0x10d4 ISZERO
0x10d5 PUSH2 0xcc5
0x10d8 JUMPI
---
0x10bb: INVALID 
0x10bc: JUMPDEST 
0x10bf: V934 = SUB S2 S1
0x10c6: JUMP S3
0x10c7: JUMPDEST 
0x10c8: V935 = 0x0
0x10cc: V936 = ADD S1 S0
0x10d1: V937 = LT V936 S1
0x10d2: V938 = ISZERO V937
0x10d3: V939 = ISZERO V938
0x10d4: V940 = ISZERO V939
0x10d5: V941 = 0xcc5
0x10d8: THROWI V940
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V934, V936, S0, S1]
Exit stack: []

================================

Block 0x10d9
[0x10d9:0x1167]
---
Predecessors: [0x10bb]
Successors: [0x1168]
---
0x10d9 INVALID
0x10da JUMPDEST
0x10db DUP1
0x10dc SWAP1
0x10dd POP
0x10de SWAP3
0x10df SWAP2
0x10e0 POP
0x10e1 POP
0x10e2 JUMP
0x10e3 STOP
0x10e4 LOG1
0x10e5 PUSH6 0x627a7a723058
0x10ec SHA3
0x10ed CALLDATASIZE
0x10ee RETURNDATASIZE
0x10ef MISSING 0xb3
0x10f0 GASLIMIT
0x10f1 MISSING 0xe5
0x10f2 MISSING 0xd4
0x10f3 SWAP8
0x10f4 PUSH9 0xaaee3dec29fb245640
0x10fe MISSING 0xde
0x10ff MISSING 0xe9
0x1100 PUSH27 0x512554799cf88529c160dba002973000000000000000000000000
0x111c STOP
0x111d STOP
0x111e STOP
0x111f STOP
0x1120 STOP
0x1121 STOP
0x1122 STOP
0x1123 STOP
0x1124 ADDRESS
0x1125 EQ
0x1126 PUSH1 0x80
0x1128 PUSH1 0x40
0x112a MSTORE
0x112b PUSH1 0x0
0x112d DUP1
0x112e REVERT
0x112f STOP
0x1130 LOG1
0x1131 PUSH6 0x627a7a723058
0x1138 SHA3
0x1139 MISSING 0x2f
0x113a MISSING 0xe3
0x113b PUSH20 0xc2f92348cd6323088bad9c8047bea68768415d85
0x1150 MISSING 0x2a
0x1151 CALLCODE
0x1152 SHL
0x1153 DUP4
0x1154 MISSING 0xcb
0x1155 MISSING 0xe4
0x1156 MISSING 0xdc
0x1157 CALL
0x1158 MISSING 0xbd
0x1159 STOP
0x115a MISSING 0x29
0x115b PUSH1 0x80
0x115d PUSH1 0x40
0x115f MSTORE
0x1160 PUSH1 0x4
0x1162 CALLDATASIZE
0x1163 LT
0x1164 PUSH2 0x78
0x1167 JUMPI
---
0x10d9: INVALID 
0x10da: JUMPDEST 
0x10e2: JUMP S3
0x10e3: STOP 
0x10e4: LOG S0 S1 S2
0x10e5: V942 = 0x627a7a723058
0x10ec: V943 = SHA3 0x627a7a723058 S3
0x10ed: V944 = CALLDATASIZE
0x10ee: V945 = RETURNDATASIZE
0x10ef: MISSING 0xb3
0x10f0: V946 = GASLIMIT
0x10f1: MISSING 0xe5
0x10f2: MISSING 0xd4
0x10f4: V947 = 0xaaee3dec29fb245640
0x10fe: MISSING 0xde
0x10ff: MISSING 0xe9
0x1100: V948 = 0x512554799cf88529c160dba002973000000000000000000000000
0x111c: STOP 
0x111d: STOP 
0x111e: STOP 
0x111f: STOP 
0x1120: STOP 
0x1121: STOP 
0x1122: STOP 
0x1123: STOP 
0x1124: V949 = ADDRESS
0x1125: V950 = EQ V949 S0
0x1126: V951 = 0x80
0x1128: V952 = 0x40
0x112a: M[0x40] = 0x80
0x112b: V953 = 0x0
0x112e: REVERT 0x0 0x0
0x112f: STOP 
0x1130: LOG S0 S1 S2
0x1131: V954 = 0x627a7a723058
0x1138: V955 = SHA3 0x627a7a723058 S3
0x1139: MISSING 0x2f
0x113a: MISSING 0xe3
0x113b: V956 = 0xc2f92348cd6323088bad9c8047bea68768415d85
0x1150: MISSING 0x2a
0x1151: V957 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x1152: V958 = SHL V957 S7
0x1154: MISSING 0xcb
0x1155: MISSING 0xe4
0x1156: MISSING 0xdc
0x1157: V959 = CALL S0 S1 S2 S3 S4 S5 S6
0x1158: MISSING 0xbd
0x1159: STOP 
0x115a: MISSING 0x29
0x115b: V960 = 0x80
0x115d: V961 = 0x40
0x115f: M[0x40] = 0x80
0x1160: V962 = 0x4
0x1162: V963 = CALLDATASIZE
0x1163: V964 = LT V963 0x4
0x1164: V965 = 0x78
0x1167: THROWI V964
---
Entry stack: [S2, S1, V936]
Stack pops: 0
Stack additions: [S0, V945, V944, V943, V946, 0xaaee3dec29fb245640, S8, S1, S2, S3, S4, S5, S6, S7, S0, 0x512554799cf88529c160dba002973000000000000000000000000, V950, V955, 0xc2f92348cd6323088bad9c8047bea68768415d85, S10, V958, S8, S9, S10, V959]
Exit stack: []

================================

Block 0x1168
[0x1168:0x119b]
---
Predecessors: [0x10d9]
Successors: [0x119c]
---
0x1168 PUSH1 0x0
0x116a CALLDATALOAD
0x116b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1189 SWAP1
0x118a DIV
0x118b PUSH4 0xffffffff
0x1190 AND
0x1191 DUP1
0x1192 PUSH4 0x95ea7b3
0x1197 EQ
0x1198 PUSH2 0x7d
0x119b JUMPI
---
0x1168: V966 = 0x0
0x116a: V967 = CALLDATALOAD 0x0
0x116b: V968 = 0x100000000000000000000000000000000000000000000000000000000
0x118a: V969 = DIV V967 0x100000000000000000000000000000000000000000000000000000000
0x118b: V970 = 0xffffffff
0x1190: V971 = AND 0xffffffff V969
0x1192: V972 = 0x95ea7b3
0x1197: V973 = EQ 0x95ea7b3 V971
0x1198: V974 = 0x7d
0x119b: THROWI V973
---
Entry stack: []
Stack pops: 0
Stack additions: [V971]
Exit stack: [V971]

================================

Block 0x119c
[0x119c:0x11a6]
---
Predecessors: [0x1168]
Successors: [0x11a7]
---
0x119c DUP1
0x119d PUSH4 0x18160ddd
0x11a2 EQ
0x11a3 PUSH2 0xe2
0x11a6 JUMPI
---
0x119d: V975 = 0x18160ddd
0x11a2: V976 = EQ 0x18160ddd V971
0x11a3: V977 = 0xe2
0x11a6: THROWI V976
---
Entry stack: [V971]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V971]

================================

Block 0x11a7
[0x11a7:0x11b1]
---
Predecessors: [0x119c]
Successors: [0x11b2]
---
0x11a7 DUP1
0x11a8 PUSH4 0x23b872dd
0x11ad EQ
0x11ae PUSH2 0x10d
0x11b1 JUMPI
---
0x11a8: V978 = 0x23b872dd
0x11ad: V979 = EQ 0x23b872dd V971
0x11ae: V980 = 0x10d
0x11b1: THROWI V979
---
Entry stack: [V971]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V971]

================================

Block 0x11b2
[0x11b2:0x11bc]
---
Predecessors: [0x11a7]
Successors: [0x11bd]
---
0x11b2 DUP1
0x11b3 PUSH4 0x70a08231
0x11b8 EQ
0x11b9 PUSH2 0x192
0x11bc JUMPI
---
0x11b3: V981 = 0x70a08231
0x11b8: V982 = EQ 0x70a08231 V971
0x11b9: V983 = 0x192
0x11bc: THROWI V982
---
Entry stack: [V971]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V971]

================================

Block 0x11bd
[0x11bd:0x11c7]
---
Predecessors: [0x11b2]
Successors: [0x11c8]
---
0x11bd DUP1
0x11be PUSH4 0xa9059cbb
0x11c3 EQ
0x11c4 PUSH2 0x1e9
0x11c7 JUMPI
---
0x11be: V984 = 0xa9059cbb
0x11c3: V985 = EQ 0xa9059cbb V971
0x11c4: V986 = 0x1e9
0x11c7: THROWI V985
---
Entry stack: [V971]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V971]

================================

Block 0x11c8
[0x11c8:0x11d2]
---
Predecessors: [0x11bd]
Successors: [0x11d3]
---
0x11c8 DUP1
0x11c9 PUSH4 0xdd62ed3e
0x11ce EQ
0x11cf PUSH2 0x24e
0x11d2 JUMPI
---
0x11c9: V987 = 0xdd62ed3e
0x11ce: V988 = EQ 0xdd62ed3e V971
0x11cf: V989 = 0x24e
0x11d2: THROWI V988
---
Entry stack: [V971]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V971]

================================

Block 0x11d3
[0x11d3:0x11df]
---
Predecessors: [0x11c8]
Successors: [0x11e0]
---
0x11d3 JUMPDEST
0x11d4 PUSH1 0x0
0x11d6 DUP1
0x11d7 REVERT
0x11d8 JUMPDEST
0x11d9 CALLVALUE
0x11da DUP1
0x11db ISZERO
0x11dc PUSH2 0x89
0x11df JUMPI
---
0x11d3: JUMPDEST 
0x11d4: V990 = 0x0
0x11d7: REVERT 0x0 0x0
0x11d8: JUMPDEST 
0x11d9: V991 = CALLVALUE
0x11db: V992 = ISZERO V991
0x11dc: V993 = 0x89
0x11df: THROWI V992
---
Entry stack: [V971]
Stack pops: 0
Stack additions: [V991]
Exit stack: []

================================

Block 0x11e0
[0x11e0:0x1244]
---
Predecessors: [0x11d3]
Successors: [0x1245]
---
0x11e0 PUSH1 0x0
0x11e2 DUP1
0x11e3 REVERT
0x11e4 JUMPDEST
0x11e5 POP
0x11e6 PUSH2 0xc8
0x11e9 PUSH1 0x4
0x11eb DUP1
0x11ec CALLDATASIZE
0x11ed SUB
0x11ee DUP2
0x11ef ADD
0x11f0 SWAP1
0x11f1 DUP1
0x11f2 DUP1
0x11f3 CALLDATALOAD
0x11f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1209 AND
0x120a SWAP1
0x120b PUSH1 0x20
0x120d ADD
0x120e SWAP1
0x120f SWAP3
0x1210 SWAP2
0x1211 SWAP1
0x1212 DUP1
0x1213 CALLDATALOAD
0x1214 SWAP1
0x1215 PUSH1 0x20
0x1217 ADD
0x1218 SWAP1
0x1219 SWAP3
0x121a SWAP2
0x121b SWAP1
0x121c POP
0x121d POP
0x121e POP
0x121f PUSH2 0x2c5
0x1222 JUMP
0x1223 JUMPDEST
0x1224 PUSH1 0x40
0x1226 MLOAD
0x1227 DUP1
0x1228 DUP3
0x1229 ISZERO
0x122a ISZERO
0x122b ISZERO
0x122c ISZERO
0x122d DUP2
0x122e MSTORE
0x122f PUSH1 0x20
0x1231 ADD
0x1232 SWAP2
0x1233 POP
0x1234 POP
0x1235 PUSH1 0x40
0x1237 MLOAD
0x1238 DUP1
0x1239 SWAP2
0x123a SUB
0x123b SWAP1
0x123c RETURN
0x123d JUMPDEST
0x123e CALLVALUE
0x123f DUP1
0x1240 ISZERO
0x1241 PUSH2 0xee
0x1244 JUMPI
---
0x11e0: V994 = 0x0
0x11e3: REVERT 0x0 0x0
0x11e4: JUMPDEST 
0x11e6: V995 = 0xc8
0x11e9: V996 = 0x4
0x11ec: V997 = CALLDATASIZE
0x11ed: V998 = SUB V997 0x4
0x11ef: V999 = ADD 0x4 V998
0x11f3: V1000 = CALLDATALOAD 0x4
0x11f4: V1001 = 0xffffffffffffffffffffffffffffffffffffffff
0x1209: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff V1000
0x120b: V1003 = 0x20
0x120d: V1004 = ADD 0x20 0x4
0x1213: V1005 = CALLDATALOAD 0x24
0x1215: V1006 = 0x20
0x1217: V1007 = ADD 0x20 0x24
0x121f: V1008 = 0x2c5
0x1222: THROW 
0x1223: JUMPDEST 
0x1224: V1009 = 0x40
0x1226: V1010 = M[0x40]
0x1229: V1011 = ISZERO S0
0x122a: V1012 = ISZERO V1011
0x122b: V1013 = ISZERO V1012
0x122c: V1014 = ISZERO V1013
0x122e: M[V1010] = V1014
0x122f: V1015 = 0x20
0x1231: V1016 = ADD 0x20 V1010
0x1235: V1017 = 0x40
0x1237: V1018 = M[0x40]
0x123a: V1019 = SUB V1016 V1018
0x123c: RETURN V1018 V1019
0x123d: JUMPDEST 
0x123e: V1020 = CALLVALUE
0x1240: V1021 = ISZERO V1020
0x1241: V1022 = 0xee
0x1244: THROWI V1021
---
Entry stack: [V991]
Stack pops: 0
Stack additions: [V1005, V1002, 0xc8, V1020]
Exit stack: []

================================

Block 0x1245
[0x1245:0x126f]
---
Predecessors: [0x11e0]
Successors: [0x1270]
---
0x1245 PUSH1 0x0
0x1247 DUP1
0x1248 REVERT
0x1249 JUMPDEST
0x124a POP
0x124b PUSH2 0xf7
0x124e PUSH2 0x3b7
0x1251 JUMP
0x1252 JUMPDEST
0x1253 PUSH1 0x40
0x1255 MLOAD
0x1256 DUP1
0x1257 DUP3
0x1258 DUP2
0x1259 MSTORE
0x125a PUSH1 0x20
0x125c ADD
0x125d SWAP2
0x125e POP
0x125f POP
0x1260 PUSH1 0x40
0x1262 MLOAD
0x1263 DUP1
0x1264 SWAP2
0x1265 SUB
0x1266 SWAP1
0x1267 RETURN
0x1268 JUMPDEST
0x1269 CALLVALUE
0x126a DUP1
0x126b ISZERO
0x126c PUSH2 0x119
0x126f JUMPI
---
0x1245: V1023 = 0x0
0x1248: REVERT 0x0 0x0
0x1249: JUMPDEST 
0x124b: V1024 = 0xf7
0x124e: V1025 = 0x3b7
0x1251: THROW 
0x1252: JUMPDEST 
0x1253: V1026 = 0x40
0x1255: V1027 = M[0x40]
0x1259: M[V1027] = S0
0x125a: V1028 = 0x20
0x125c: V1029 = ADD 0x20 V1027
0x1260: V1030 = 0x40
0x1262: V1031 = M[0x40]
0x1265: V1032 = SUB V1029 V1031
0x1267: RETURN V1031 V1032
0x1268: JUMPDEST 
0x1269: V1033 = CALLVALUE
0x126b: V1034 = ISZERO V1033
0x126c: V1035 = 0x119
0x126f: THROWI V1034
---
Entry stack: [V1020]
Stack pops: 0
Stack additions: [0xf7, V1033]
Exit stack: []

================================

Block 0x1270
[0x1270:0x12f4]
---
Predecessors: [0x1245]
Successors: [0x12f5]
---
0x1270 PUSH1 0x0
0x1272 DUP1
0x1273 REVERT
0x1274 JUMPDEST
0x1275 POP
0x1276 PUSH2 0x178
0x1279 PUSH1 0x4
0x127b DUP1
0x127c CALLDATASIZE
0x127d SUB
0x127e DUP2
0x127f ADD
0x1280 SWAP1
0x1281 DUP1
0x1282 DUP1
0x1283 CALLDATALOAD
0x1284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1299 AND
0x129a SWAP1
0x129b PUSH1 0x20
0x129d ADD
0x129e SWAP1
0x129f SWAP3
0x12a0 SWAP2
0x12a1 SWAP1
0x12a2 DUP1
0x12a3 CALLDATALOAD
0x12a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b9 AND
0x12ba SWAP1
0x12bb PUSH1 0x20
0x12bd ADD
0x12be SWAP1
0x12bf SWAP3
0x12c0 SWAP2
0x12c1 SWAP1
0x12c2 DUP1
0x12c3 CALLDATALOAD
0x12c4 SWAP1
0x12c5 PUSH1 0x20
0x12c7 ADD
0x12c8 SWAP1
0x12c9 SWAP3
0x12ca SWAP2
0x12cb SWAP1
0x12cc POP
0x12cd POP
0x12ce POP
0x12cf PUSH2 0x3c1
0x12d2 JUMP
0x12d3 JUMPDEST
0x12d4 PUSH1 0x40
0x12d6 MLOAD
0x12d7 DUP1
0x12d8 DUP3
0x12d9 ISZERO
0x12da ISZERO
0x12db ISZERO
0x12dc ISZERO
0x12dd DUP2
0x12de MSTORE
0x12df PUSH1 0x20
0x12e1 ADD
0x12e2 SWAP2
0x12e3 POP
0x12e4 POP
0x12e5 PUSH1 0x40
0x12e7 MLOAD
0x12e8 DUP1
0x12e9 SWAP2
0x12ea SUB
0x12eb SWAP1
0x12ec RETURN
0x12ed JUMPDEST
0x12ee CALLVALUE
0x12ef DUP1
0x12f0 ISZERO
0x12f1 PUSH2 0x19e
0x12f4 JUMPI
---
0x1270: V1036 = 0x0
0x1273: REVERT 0x0 0x0
0x1274: JUMPDEST 
0x1276: V1037 = 0x178
0x1279: V1038 = 0x4
0x127c: V1039 = CALLDATASIZE
0x127d: V1040 = SUB V1039 0x4
0x127f: V1041 = ADD 0x4 V1040
0x1283: V1042 = CALLDATALOAD 0x4
0x1284: V1043 = 0xffffffffffffffffffffffffffffffffffffffff
0x1299: V1044 = AND 0xffffffffffffffffffffffffffffffffffffffff V1042
0x129b: V1045 = 0x20
0x129d: V1046 = ADD 0x20 0x4
0x12a3: V1047 = CALLDATALOAD 0x24
0x12a4: V1048 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b9: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0x12bb: V1050 = 0x20
0x12bd: V1051 = ADD 0x20 0x24
0x12c3: V1052 = CALLDATALOAD 0x44
0x12c5: V1053 = 0x20
0x12c7: V1054 = ADD 0x20 0x44
0x12cf: V1055 = 0x3c1
0x12d2: THROW 
0x12d3: JUMPDEST 
0x12d4: V1056 = 0x40
0x12d6: V1057 = M[0x40]
0x12d9: V1058 = ISZERO S0
0x12da: V1059 = ISZERO V1058
0x12db: V1060 = ISZERO V1059
0x12dc: V1061 = ISZERO V1060
0x12de: M[V1057] = V1061
0x12df: V1062 = 0x20
0x12e1: V1063 = ADD 0x20 V1057
0x12e5: V1064 = 0x40
0x12e7: V1065 = M[0x40]
0x12ea: V1066 = SUB V1063 V1065
0x12ec: RETURN V1065 V1066
0x12ed: JUMPDEST 
0x12ee: V1067 = CALLVALUE
0x12f0: V1068 = ISZERO V1067
0x12f1: V1069 = 0x19e
0x12f4: THROWI V1068
---
Entry stack: [V1033]
Stack pops: 0
Stack additions: [V1052, V1049, V1044, 0x178, V1067]
Exit stack: []

================================

Block 0x12f5
[0x12f5:0x134b]
---
Predecessors: [0x1270]
Successors: [0x134c]
---
0x12f5 PUSH1 0x0
0x12f7 DUP1
0x12f8 REVERT
0x12f9 JUMPDEST
0x12fa POP
0x12fb PUSH2 0x1d3
0x12fe PUSH1 0x4
0x1300 DUP1
0x1301 CALLDATASIZE
0x1302 SUB
0x1303 DUP2
0x1304 ADD
0x1305 SWAP1
0x1306 DUP1
0x1307 DUP1
0x1308 CALLDATALOAD
0x1309 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131e AND
0x131f SWAP1
0x1320 PUSH1 0x20
0x1322 ADD
0x1323 SWAP1
0x1324 SWAP3
0x1325 SWAP2
0x1326 SWAP1
0x1327 POP
0x1328 POP
0x1329 POP
0x132a PUSH2 0x77b
0x132d JUMP
0x132e JUMPDEST
0x132f PUSH1 0x40
0x1331 MLOAD
0x1332 DUP1
0x1333 DUP3
0x1334 DUP2
0x1335 MSTORE
0x1336 PUSH1 0x20
0x1338 ADD
0x1339 SWAP2
0x133a POP
0x133b POP
0x133c PUSH1 0x40
0x133e MLOAD
0x133f DUP1
0x1340 SWAP2
0x1341 SUB
0x1342 SWAP1
0x1343 RETURN
0x1344 JUMPDEST
0x1345 CALLVALUE
0x1346 DUP1
0x1347 ISZERO
0x1348 PUSH2 0x1f5
0x134b JUMPI
---
0x12f5: V1070 = 0x0
0x12f8: REVERT 0x0 0x0
0x12f9: JUMPDEST 
0x12fb: V1071 = 0x1d3
0x12fe: V1072 = 0x4
0x1301: V1073 = CALLDATASIZE
0x1302: V1074 = SUB V1073 0x4
0x1304: V1075 = ADD 0x4 V1074
0x1308: V1076 = CALLDATALOAD 0x4
0x1309: V1077 = 0xffffffffffffffffffffffffffffffffffffffff
0x131e: V1078 = AND 0xffffffffffffffffffffffffffffffffffffffff V1076
0x1320: V1079 = 0x20
0x1322: V1080 = ADD 0x20 0x4
0x132a: V1081 = 0x77b
0x132d: THROW 
0x132e: JUMPDEST 
0x132f: V1082 = 0x40
0x1331: V1083 = M[0x40]
0x1335: M[V1083] = S0
0x1336: V1084 = 0x20
0x1338: V1085 = ADD 0x20 V1083
0x133c: V1086 = 0x40
0x133e: V1087 = M[0x40]
0x1341: V1088 = SUB V1085 V1087
0x1343: RETURN V1087 V1088
0x1344: JUMPDEST 
0x1345: V1089 = CALLVALUE
0x1347: V1090 = ISZERO V1089
0x1348: V1091 = 0x1f5
0x134b: THROWI V1090
---
Entry stack: [V1067]
Stack pops: 0
Stack additions: [V1078, 0x1d3, V1089]
Exit stack: []

================================

Block 0x134c
[0x134c:0x13b0]
---
Predecessors: [0x12f5]
Successors: [0x13b1]
---
0x134c PUSH1 0x0
0x134e DUP1
0x134f REVERT
0x1350 JUMPDEST
0x1351 POP
0x1352 PUSH2 0x234
0x1355 PUSH1 0x4
0x1357 DUP1
0x1358 CALLDATASIZE
0x1359 SUB
0x135a DUP2
0x135b ADD
0x135c SWAP1
0x135d DUP1
0x135e DUP1
0x135f CALLDATALOAD
0x1360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1375 AND
0x1376 SWAP1
0x1377 PUSH1 0x20
0x1379 ADD
0x137a SWAP1
0x137b SWAP3
0x137c SWAP2
0x137d SWAP1
0x137e DUP1
0x137f CALLDATALOAD
0x1380 SWAP1
0x1381 PUSH1 0x20
0x1383 ADD
0x1384 SWAP1
0x1385 SWAP3
0x1386 SWAP2
0x1387 SWAP1
0x1388 POP
0x1389 POP
0x138a POP
0x138b PUSH2 0x7c3
0x138e JUMP
0x138f JUMPDEST
0x1390 PUSH1 0x40
0x1392 MLOAD
0x1393 DUP1
0x1394 DUP3
0x1395 ISZERO
0x1396 ISZERO
0x1397 ISZERO
0x1398 ISZERO
0x1399 DUP2
0x139a MSTORE
0x139b PUSH1 0x20
0x139d ADD
0x139e SWAP2
0x139f POP
0x13a0 POP
0x13a1 PUSH1 0x40
0x13a3 MLOAD
0x13a4 DUP1
0x13a5 SWAP2
0x13a6 SUB
0x13a7 SWAP1
0x13a8 RETURN
0x13a9 JUMPDEST
0x13aa CALLVALUE
0x13ab DUP1
0x13ac ISZERO
0x13ad PUSH2 0x25a
0x13b0 JUMPI
---
0x134c: V1092 = 0x0
0x134f: REVERT 0x0 0x0
0x1350: JUMPDEST 
0x1352: V1093 = 0x234
0x1355: V1094 = 0x4
0x1358: V1095 = CALLDATASIZE
0x1359: V1096 = SUB V1095 0x4
0x135b: V1097 = ADD 0x4 V1096
0x135f: V1098 = CALLDATALOAD 0x4
0x1360: V1099 = 0xffffffffffffffffffffffffffffffffffffffff
0x1375: V1100 = AND 0xffffffffffffffffffffffffffffffffffffffff V1098
0x1377: V1101 = 0x20
0x1379: V1102 = ADD 0x20 0x4
0x137f: V1103 = CALLDATALOAD 0x24
0x1381: V1104 = 0x20
0x1383: V1105 = ADD 0x20 0x24
0x138b: V1106 = 0x7c3
0x138e: THROW 
0x138f: JUMPDEST 
0x1390: V1107 = 0x40
0x1392: V1108 = M[0x40]
0x1395: V1109 = ISZERO S0
0x1396: V1110 = ISZERO V1109
0x1397: V1111 = ISZERO V1110
0x1398: V1112 = ISZERO V1111
0x139a: M[V1108] = V1112
0x139b: V1113 = 0x20
0x139d: V1114 = ADD 0x20 V1108
0x13a1: V1115 = 0x40
0x13a3: V1116 = M[0x40]
0x13a6: V1117 = SUB V1114 V1116
0x13a8: RETURN V1116 V1117
0x13a9: JUMPDEST 
0x13aa: V1118 = CALLVALUE
0x13ac: V1119 = ISZERO V1118
0x13ad: V1120 = 0x25a
0x13b0: THROWI V1119
---
Entry stack: [V1089]
Stack pops: 0
Stack additions: [V1103, V1100, 0x234, V1118]
Exit stack: []

================================

Block 0x13b1
[0x13b1:0x1554]
---
Predecessors: [0x134c]
Successors: [0x1555]
---
0x13b1 PUSH1 0x0
0x13b3 DUP1
0x13b4 REVERT
0x13b5 JUMPDEST
0x13b6 POP
0x13b7 PUSH2 0x2af
0x13ba PUSH1 0x4
0x13bc DUP1
0x13bd CALLDATASIZE
0x13be SUB
0x13bf DUP2
0x13c0 ADD
0x13c1 SWAP1
0x13c2 DUP1
0x13c3 DUP1
0x13c4 CALLDATALOAD
0x13c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13da AND
0x13db SWAP1
0x13dc PUSH1 0x20
0x13de ADD
0x13df SWAP1
0x13e0 SWAP3
0x13e1 SWAP2
0x13e2 SWAP1
0x13e3 DUP1
0x13e4 CALLDATALOAD
0x13e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13fa AND
0x13fb SWAP1
0x13fc PUSH1 0x20
0x13fe ADD
0x13ff SWAP1
0x1400 SWAP3
0x1401 SWAP2
0x1402 SWAP1
0x1403 POP
0x1404 POP
0x1405 POP
0x1406 PUSH2 0x9e2
0x1409 JUMP
0x140a JUMPDEST
0x140b PUSH1 0x40
0x140d MLOAD
0x140e DUP1
0x140f DUP3
0x1410 DUP2
0x1411 MSTORE
0x1412 PUSH1 0x20
0x1414 ADD
0x1415 SWAP2
0x1416 POP
0x1417 POP
0x1418 PUSH1 0x40
0x141a MLOAD
0x141b DUP1
0x141c SWAP2
0x141d SUB
0x141e SWAP1
0x141f RETURN
0x1420 JUMPDEST
0x1421 PUSH1 0x0
0x1423 DUP2
0x1424 PUSH1 0x2
0x1426 PUSH1 0x0
0x1428 CALLER
0x1429 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143e AND
0x143f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1454 AND
0x1455 DUP2
0x1456 MSTORE
0x1457 PUSH1 0x20
0x1459 ADD
0x145a SWAP1
0x145b DUP2
0x145c MSTORE
0x145d PUSH1 0x20
0x145f ADD
0x1460 PUSH1 0x0
0x1462 SHA3
0x1463 PUSH1 0x0
0x1465 DUP6
0x1466 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147b AND
0x147c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1491 AND
0x1492 DUP2
0x1493 MSTORE
0x1494 PUSH1 0x20
0x1496 ADD
0x1497 SWAP1
0x1498 DUP2
0x1499 MSTORE
0x149a PUSH1 0x20
0x149c ADD
0x149d PUSH1 0x0
0x149f SHA3
0x14a0 DUP2
0x14a1 SWAP1
0x14a2 SSTORE
0x14a3 POP
0x14a4 DUP3
0x14a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14ba AND
0x14bb CALLER
0x14bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d1 AND
0x14d2 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x14f3 DUP5
0x14f4 PUSH1 0x40
0x14f6 MLOAD
0x14f7 DUP1
0x14f8 DUP3
0x14f9 DUP2
0x14fa MSTORE
0x14fb PUSH1 0x20
0x14fd ADD
0x14fe SWAP2
0x14ff POP
0x1500 POP
0x1501 PUSH1 0x40
0x1503 MLOAD
0x1504 DUP1
0x1505 SWAP2
0x1506 SUB
0x1507 SWAP1
0x1508 LOG3
0x1509 PUSH1 0x1
0x150b SWAP1
0x150c POP
0x150d SWAP3
0x150e SWAP2
0x150f POP
0x1510 POP
0x1511 JUMP
0x1512 JUMPDEST
0x1513 PUSH1 0x0
0x1515 PUSH1 0x1
0x1517 SLOAD
0x1518 SWAP1
0x1519 POP
0x151a SWAP1
0x151b JUMP
0x151c JUMPDEST
0x151d PUSH1 0x0
0x151f DUP1
0x1520 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1535 AND
0x1536 DUP4
0x1537 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x154c AND
0x154d EQ
0x154e ISZERO
0x154f ISZERO
0x1550 ISZERO
0x1551 PUSH2 0x3fe
0x1554 JUMPI
---
0x13b1: V1121 = 0x0
0x13b4: REVERT 0x0 0x0
0x13b5: JUMPDEST 
0x13b7: V1122 = 0x2af
0x13ba: V1123 = 0x4
0x13bd: V1124 = CALLDATASIZE
0x13be: V1125 = SUB V1124 0x4
0x13c0: V1126 = ADD 0x4 V1125
0x13c4: V1127 = CALLDATALOAD 0x4
0x13c5: V1128 = 0xffffffffffffffffffffffffffffffffffffffff
0x13da: V1129 = AND 0xffffffffffffffffffffffffffffffffffffffff V1127
0x13dc: V1130 = 0x20
0x13de: V1131 = ADD 0x20 0x4
0x13e4: V1132 = CALLDATALOAD 0x24
0x13e5: V1133 = 0xffffffffffffffffffffffffffffffffffffffff
0x13fa: V1134 = AND 0xffffffffffffffffffffffffffffffffffffffff V1132
0x13fc: V1135 = 0x20
0x13fe: V1136 = ADD 0x20 0x24
0x1406: V1137 = 0x9e2
0x1409: THROW 
0x140a: JUMPDEST 
0x140b: V1138 = 0x40
0x140d: V1139 = M[0x40]
0x1411: M[V1139] = S0
0x1412: V1140 = 0x20
0x1414: V1141 = ADD 0x20 V1139
0x1418: V1142 = 0x40
0x141a: V1143 = M[0x40]
0x141d: V1144 = SUB V1141 V1143
0x141f: RETURN V1143 V1144
0x1420: JUMPDEST 
0x1421: V1145 = 0x0
0x1424: V1146 = 0x2
0x1426: V1147 = 0x0
0x1428: V1148 = CALLER
0x1429: V1149 = 0xffffffffffffffffffffffffffffffffffffffff
0x143e: V1150 = AND 0xffffffffffffffffffffffffffffffffffffffff V1148
0x143f: V1151 = 0xffffffffffffffffffffffffffffffffffffffff
0x1454: V1152 = AND 0xffffffffffffffffffffffffffffffffffffffff V1150
0x1456: M[0x0] = V1152
0x1457: V1153 = 0x20
0x1459: V1154 = ADD 0x20 0x0
0x145c: M[0x20] = 0x2
0x145d: V1155 = 0x20
0x145f: V1156 = ADD 0x20 0x20
0x1460: V1157 = 0x0
0x1462: V1158 = SHA3 0x0 0x40
0x1463: V1159 = 0x0
0x1466: V1160 = 0xffffffffffffffffffffffffffffffffffffffff
0x147b: V1161 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x147c: V1162 = 0xffffffffffffffffffffffffffffffffffffffff
0x1491: V1163 = AND 0xffffffffffffffffffffffffffffffffffffffff V1161
0x1493: M[0x0] = V1163
0x1494: V1164 = 0x20
0x1496: V1165 = ADD 0x20 0x0
0x1499: M[0x20] = V1158
0x149a: V1166 = 0x20
0x149c: V1167 = ADD 0x20 0x20
0x149d: V1168 = 0x0
0x149f: V1169 = SHA3 0x0 0x40
0x14a2: S[V1169] = S0
0x14a5: V1170 = 0xffffffffffffffffffffffffffffffffffffffff
0x14ba: V1171 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x14bb: V1172 = CALLER
0x14bc: V1173 = 0xffffffffffffffffffffffffffffffffffffffff
0x14d1: V1174 = AND 0xffffffffffffffffffffffffffffffffffffffff V1172
0x14d2: V1175 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x14f4: V1176 = 0x40
0x14f6: V1177 = M[0x40]
0x14fa: M[V1177] = S0
0x14fb: V1178 = 0x20
0x14fd: V1179 = ADD 0x20 V1177
0x1501: V1180 = 0x40
0x1503: V1181 = M[0x40]
0x1506: V1182 = SUB V1179 V1181
0x1508: LOG V1181 V1182 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V1174 V1171
0x1509: V1183 = 0x1
0x1511: JUMP S2
0x1512: JUMPDEST 
0x1513: V1184 = 0x0
0x1515: V1185 = 0x1
0x1517: V1186 = S[0x1]
0x151b: JUMP S0
0x151c: JUMPDEST 
0x151d: V1187 = 0x0
0x1520: V1188 = 0xffffffffffffffffffffffffffffffffffffffff
0x1535: V1189 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1537: V1190 = 0xffffffffffffffffffffffffffffffffffffffff
0x154c: V1191 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x154d: V1192 = EQ V1191 0x0
0x154e: V1193 = ISZERO V1192
0x154f: V1194 = ISZERO V1193
0x1550: V1195 = ISZERO V1194
0x1551: V1196 = 0x3fe
0x1554: THROWI V1195
---
Entry stack: [V1118]
Stack pops: 0
Stack additions: [V1134, V1129, 0x2af, 0x1, V1186, 0x0, S0, S1]
Exit stack: []

================================

Block 0x1555
[0x1555:0x15a1]
---
Predecessors: [0x13b1]
Successors: [0x15a2]
---
0x1555 PUSH1 0x0
0x1557 DUP1
0x1558 REVERT
0x1559 JUMPDEST
0x155a PUSH1 0x0
0x155c DUP1
0x155d DUP6
0x155e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1573 AND
0x1574 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1589 AND
0x158a DUP2
0x158b MSTORE
0x158c PUSH1 0x20
0x158e ADD
0x158f SWAP1
0x1590 DUP2
0x1591 MSTORE
0x1592 PUSH1 0x20
0x1594 ADD
0x1595 PUSH1 0x0
0x1597 SHA3
0x1598 SLOAD
0x1599 DUP3
0x159a GT
0x159b ISZERO
0x159c ISZERO
0x159d ISZERO
0x159e PUSH2 0x44b
0x15a1 JUMPI
---
0x1555: V1197 = 0x0
0x1558: REVERT 0x0 0x0
0x1559: JUMPDEST 
0x155a: V1198 = 0x0
0x155e: V1199 = 0xffffffffffffffffffffffffffffffffffffffff
0x1573: V1200 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1574: V1201 = 0xffffffffffffffffffffffffffffffffffffffff
0x1589: V1202 = AND 0xffffffffffffffffffffffffffffffffffffffff V1200
0x158b: M[0x0] = V1202
0x158c: V1203 = 0x20
0x158e: V1204 = ADD 0x20 0x0
0x1591: M[0x20] = 0x0
0x1592: V1205 = 0x20
0x1594: V1206 = ADD 0x20 0x20
0x1595: V1207 = 0x0
0x1597: V1208 = SHA3 0x0 0x40
0x1598: V1209 = S[V1208]
0x159a: V1210 = GT S1 V1209
0x159b: V1211 = ISZERO V1210
0x159c: V1212 = ISZERO V1211
0x159d: V1213 = ISZERO V1212
0x159e: V1214 = 0x44b
0x15a1: THROWI V1213
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0x15a2
[0x15a2:0x162c]
---
Predecessors: [0x1555]
Successors: [0x162d]
---
0x15a2 PUSH1 0x0
0x15a4 DUP1
0x15a5 REVERT
0x15a6 JUMPDEST
0x15a7 PUSH1 0x2
0x15a9 PUSH1 0x0
0x15ab DUP6
0x15ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c1 AND
0x15c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d7 AND
0x15d8 DUP2
0x15d9 MSTORE
0x15da PUSH1 0x20
0x15dc ADD
0x15dd SWAP1
0x15de DUP2
0x15df MSTORE
0x15e0 PUSH1 0x20
0x15e2 ADD
0x15e3 PUSH1 0x0
0x15e5 SHA3
0x15e6 PUSH1 0x0
0x15e8 CALLER
0x15e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15fe AND
0x15ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1614 AND
0x1615 DUP2
0x1616 MSTORE
0x1617 PUSH1 0x20
0x1619 ADD
0x161a SWAP1
0x161b DUP2
0x161c MSTORE
0x161d PUSH1 0x20
0x161f ADD
0x1620 PUSH1 0x0
0x1622 SHA3
0x1623 SLOAD
0x1624 DUP3
0x1625 GT
0x1626 ISZERO
0x1627 ISZERO
0x1628 ISZERO
0x1629 PUSH2 0x4d6
0x162c JUMPI
---
0x15a2: V1215 = 0x0
0x15a5: REVERT 0x0 0x0
0x15a6: JUMPDEST 
0x15a7: V1216 = 0x2
0x15a9: V1217 = 0x0
0x15ac: V1218 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c1: V1219 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x15c2: V1220 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d7: V1221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1219
0x15d9: M[0x0] = V1221
0x15da: V1222 = 0x20
0x15dc: V1223 = ADD 0x20 0x0
0x15df: M[0x20] = 0x2
0x15e0: V1224 = 0x20
0x15e2: V1225 = ADD 0x20 0x20
0x15e3: V1226 = 0x0
0x15e5: V1227 = SHA3 0x0 0x40
0x15e6: V1228 = 0x0
0x15e8: V1229 = CALLER
0x15e9: V1230 = 0xffffffffffffffffffffffffffffffffffffffff
0x15fe: V1231 = AND 0xffffffffffffffffffffffffffffffffffffffff V1229
0x15ff: V1232 = 0xffffffffffffffffffffffffffffffffffffffff
0x1614: V1233 = AND 0xffffffffffffffffffffffffffffffffffffffff V1231
0x1616: M[0x0] = V1233
0x1617: V1234 = 0x20
0x1619: V1235 = ADD 0x20 0x0
0x161c: M[0x20] = V1227
0x161d: V1236 = 0x20
0x161f: V1237 = ADD 0x20 0x20
0x1620: V1238 = 0x0
0x1622: V1239 = SHA3 0x0 0x40
0x1623: V1240 = S[V1239]
0x1625: V1241 = GT S1 V1240
0x1626: V1242 = ISZERO V1241
0x1627: V1243 = ISZERO V1242
0x1628: V1244 = ISZERO V1243
0x1629: V1245 = 0x4d6
0x162c: THROWI V1244
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0x162d
[0x162d:0x1956]
---
Predecessors: [0x15a2]
Successors: [0x1957]
---
0x162d PUSH1 0x0
0x162f DUP1
0x1630 REVERT
0x1631 JUMPDEST
0x1632 PUSH2 0x527
0x1635 DUP3
0x1636 PUSH1 0x0
0x1638 DUP1
0x1639 DUP8
0x163a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164f AND
0x1650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1665 AND
0x1666 DUP2
0x1667 MSTORE
0x1668 PUSH1 0x20
0x166a ADD
0x166b SWAP1
0x166c DUP2
0x166d MSTORE
0x166e PUSH1 0x20
0x1670 ADD
0x1671 PUSH1 0x0
0x1673 SHA3
0x1674 SLOAD
0x1675 PUSH2 0xa69
0x1678 SWAP1
0x1679 SWAP2
0x167a SWAP1
0x167b PUSH4 0xffffffff
0x1680 AND
0x1681 JUMP
0x1682 JUMPDEST
0x1683 PUSH1 0x0
0x1685 DUP1
0x1686 DUP7
0x1687 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169c AND
0x169d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b2 AND
0x16b3 DUP2
0x16b4 MSTORE
0x16b5 PUSH1 0x20
0x16b7 ADD
0x16b8 SWAP1
0x16b9 DUP2
0x16ba MSTORE
0x16bb PUSH1 0x20
0x16bd ADD
0x16be PUSH1 0x0
0x16c0 SHA3
0x16c1 DUP2
0x16c2 SWAP1
0x16c3 SSTORE
0x16c4 POP
0x16c5 PUSH2 0x5ba
0x16c8 DUP3
0x16c9 PUSH1 0x0
0x16cb DUP1
0x16cc DUP7
0x16cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e2 AND
0x16e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f8 AND
0x16f9 DUP2
0x16fa MSTORE
0x16fb PUSH1 0x20
0x16fd ADD
0x16fe SWAP1
0x16ff DUP2
0x1700 MSTORE
0x1701 PUSH1 0x20
0x1703 ADD
0x1704 PUSH1 0x0
0x1706 SHA3
0x1707 SLOAD
0x1708 PUSH2 0xa82
0x170b SWAP1
0x170c SWAP2
0x170d SWAP1
0x170e PUSH4 0xffffffff
0x1713 AND
0x1714 JUMP
0x1715 JUMPDEST
0x1716 PUSH1 0x0
0x1718 DUP1
0x1719 DUP6
0x171a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x172f AND
0x1730 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1745 AND
0x1746 DUP2
0x1747 MSTORE
0x1748 PUSH1 0x20
0x174a ADD
0x174b SWAP1
0x174c DUP2
0x174d MSTORE
0x174e PUSH1 0x20
0x1750 ADD
0x1751 PUSH1 0x0
0x1753 SHA3
0x1754 DUP2
0x1755 SWAP1
0x1756 SSTORE
0x1757 POP
0x1758 PUSH2 0x68b
0x175b DUP3
0x175c PUSH1 0x2
0x175e PUSH1 0x0
0x1760 DUP8
0x1761 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1776 AND
0x1777 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x178c AND
0x178d DUP2
0x178e MSTORE
0x178f PUSH1 0x20
0x1791 ADD
0x1792 SWAP1
0x1793 DUP2
0x1794 MSTORE
0x1795 PUSH1 0x20
0x1797 ADD
0x1798 PUSH1 0x0
0x179a SHA3
0x179b PUSH1 0x0
0x179d CALLER
0x179e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b3 AND
0x17b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c9 AND
0x17ca DUP2
0x17cb MSTORE
0x17cc PUSH1 0x20
0x17ce ADD
0x17cf SWAP1
0x17d0 DUP2
0x17d1 MSTORE
0x17d2 PUSH1 0x20
0x17d4 ADD
0x17d5 PUSH1 0x0
0x17d7 SHA3
0x17d8 SLOAD
0x17d9 PUSH2 0xa69
0x17dc SWAP1
0x17dd SWAP2
0x17de SWAP1
0x17df PUSH4 0xffffffff
0x17e4 AND
0x17e5 JUMP
0x17e6 JUMPDEST
0x17e7 PUSH1 0x2
0x17e9 PUSH1 0x0
0x17eb DUP7
0x17ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1801 AND
0x1802 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1817 AND
0x1818 DUP2
0x1819 MSTORE
0x181a PUSH1 0x20
0x181c ADD
0x181d SWAP1
0x181e DUP2
0x181f MSTORE
0x1820 PUSH1 0x20
0x1822 ADD
0x1823 PUSH1 0x0
0x1825 SHA3
0x1826 PUSH1 0x0
0x1828 CALLER
0x1829 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183e AND
0x183f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1854 AND
0x1855 DUP2
0x1856 MSTORE
0x1857 PUSH1 0x20
0x1859 ADD
0x185a SWAP1
0x185b DUP2
0x185c MSTORE
0x185d PUSH1 0x20
0x185f ADD
0x1860 PUSH1 0x0
0x1862 SHA3
0x1863 DUP2
0x1864 SWAP1
0x1865 SSTORE
0x1866 POP
0x1867 DUP3
0x1868 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187d AND
0x187e DUP5
0x187f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1894 AND
0x1895 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x18b6 DUP5
0x18b7 PUSH1 0x40
0x18b9 MLOAD
0x18ba DUP1
0x18bb DUP3
0x18bc DUP2
0x18bd MSTORE
0x18be PUSH1 0x20
0x18c0 ADD
0x18c1 SWAP2
0x18c2 POP
0x18c3 POP
0x18c4 PUSH1 0x40
0x18c6 MLOAD
0x18c7 DUP1
0x18c8 SWAP2
0x18c9 SUB
0x18ca SWAP1
0x18cb LOG3
0x18cc PUSH1 0x1
0x18ce SWAP1
0x18cf POP
0x18d0 SWAP4
0x18d1 SWAP3
0x18d2 POP
0x18d3 POP
0x18d4 POP
0x18d5 JUMP
0x18d6 JUMPDEST
0x18d7 PUSH1 0x0
0x18d9 DUP1
0x18da PUSH1 0x0
0x18dc DUP4
0x18dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f2 AND
0x18f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1908 AND
0x1909 DUP2
0x190a MSTORE
0x190b PUSH1 0x20
0x190d ADD
0x190e SWAP1
0x190f DUP2
0x1910 MSTORE
0x1911 PUSH1 0x20
0x1913 ADD
0x1914 PUSH1 0x0
0x1916 SHA3
0x1917 SLOAD
0x1918 SWAP1
0x1919 POP
0x191a SWAP2
0x191b SWAP1
0x191c POP
0x191d JUMP
0x191e JUMPDEST
0x191f PUSH1 0x0
0x1921 DUP1
0x1922 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1937 AND
0x1938 DUP4
0x1939 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194e AND
0x194f EQ
0x1950 ISZERO
0x1951 ISZERO
0x1952 ISZERO
0x1953 PUSH2 0x800
0x1956 JUMPI
---
0x162d: V1246 = 0x0
0x1630: REVERT 0x0 0x0
0x1631: JUMPDEST 
0x1632: V1247 = 0x527
0x1636: V1248 = 0x0
0x163a: V1249 = 0xffffffffffffffffffffffffffffffffffffffff
0x164f: V1250 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1650: V1251 = 0xffffffffffffffffffffffffffffffffffffffff
0x1665: V1252 = AND 0xffffffffffffffffffffffffffffffffffffffff V1250
0x1667: M[0x0] = V1252
0x1668: V1253 = 0x20
0x166a: V1254 = ADD 0x20 0x0
0x166d: M[0x20] = 0x0
0x166e: V1255 = 0x20
0x1670: V1256 = ADD 0x20 0x20
0x1671: V1257 = 0x0
0x1673: V1258 = SHA3 0x0 0x40
0x1674: V1259 = S[V1258]
0x1675: V1260 = 0xa69
0x167b: V1261 = 0xffffffff
0x1680: V1262 = AND 0xffffffff 0xa69
0x1681: THROW 
0x1682: JUMPDEST 
0x1683: V1263 = 0x0
0x1687: V1264 = 0xffffffffffffffffffffffffffffffffffffffff
0x169c: V1265 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x169d: V1266 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b2: V1267 = AND 0xffffffffffffffffffffffffffffffffffffffff V1265
0x16b4: M[0x0] = V1267
0x16b5: V1268 = 0x20
0x16b7: V1269 = ADD 0x20 0x0
0x16ba: M[0x20] = 0x0
0x16bb: V1270 = 0x20
0x16bd: V1271 = ADD 0x20 0x20
0x16be: V1272 = 0x0
0x16c0: V1273 = SHA3 0x0 0x40
0x16c3: S[V1273] = S0
0x16c5: V1274 = 0x5ba
0x16c9: V1275 = 0x0
0x16cd: V1276 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e2: V1277 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x16e3: V1278 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f8: V1279 = AND 0xffffffffffffffffffffffffffffffffffffffff V1277
0x16fa: M[0x0] = V1279
0x16fb: V1280 = 0x20
0x16fd: V1281 = ADD 0x20 0x0
0x1700: M[0x20] = 0x0
0x1701: V1282 = 0x20
0x1703: V1283 = ADD 0x20 0x20
0x1704: V1284 = 0x0
0x1706: V1285 = SHA3 0x0 0x40
0x1707: V1286 = S[V1285]
0x1708: V1287 = 0xa82
0x170e: V1288 = 0xffffffff
0x1713: V1289 = AND 0xffffffff 0xa82
0x1714: THROW 
0x1715: JUMPDEST 
0x1716: V1290 = 0x0
0x171a: V1291 = 0xffffffffffffffffffffffffffffffffffffffff
0x172f: V1292 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1730: V1293 = 0xffffffffffffffffffffffffffffffffffffffff
0x1745: V1294 = AND 0xffffffffffffffffffffffffffffffffffffffff V1292
0x1747: M[0x0] = V1294
0x1748: V1295 = 0x20
0x174a: V1296 = ADD 0x20 0x0
0x174d: M[0x20] = 0x0
0x174e: V1297 = 0x20
0x1750: V1298 = ADD 0x20 0x20
0x1751: V1299 = 0x0
0x1753: V1300 = SHA3 0x0 0x40
0x1756: S[V1300] = S0
0x1758: V1301 = 0x68b
0x175c: V1302 = 0x2
0x175e: V1303 = 0x0
0x1761: V1304 = 0xffffffffffffffffffffffffffffffffffffffff
0x1776: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1777: V1306 = 0xffffffffffffffffffffffffffffffffffffffff
0x178c: V1307 = AND 0xffffffffffffffffffffffffffffffffffffffff V1305
0x178e: M[0x0] = V1307
0x178f: V1308 = 0x20
0x1791: V1309 = ADD 0x20 0x0
0x1794: M[0x20] = 0x2
0x1795: V1310 = 0x20
0x1797: V1311 = ADD 0x20 0x20
0x1798: V1312 = 0x0
0x179a: V1313 = SHA3 0x0 0x40
0x179b: V1314 = 0x0
0x179d: V1315 = CALLER
0x179e: V1316 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b3: V1317 = AND 0xffffffffffffffffffffffffffffffffffffffff V1315
0x17b4: V1318 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c9: V1319 = AND 0xffffffffffffffffffffffffffffffffffffffff V1317
0x17cb: M[0x0] = V1319
0x17cc: V1320 = 0x20
0x17ce: V1321 = ADD 0x20 0x0
0x17d1: M[0x20] = V1313
0x17d2: V1322 = 0x20
0x17d4: V1323 = ADD 0x20 0x20
0x17d5: V1324 = 0x0
0x17d7: V1325 = SHA3 0x0 0x40
0x17d8: V1326 = S[V1325]
0x17d9: V1327 = 0xa69
0x17df: V1328 = 0xffffffff
0x17e4: V1329 = AND 0xffffffff 0xa69
0x17e5: THROW 
0x17e6: JUMPDEST 
0x17e7: V1330 = 0x2
0x17e9: V1331 = 0x0
0x17ec: V1332 = 0xffffffffffffffffffffffffffffffffffffffff
0x1801: V1333 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1802: V1334 = 0xffffffffffffffffffffffffffffffffffffffff
0x1817: V1335 = AND 0xffffffffffffffffffffffffffffffffffffffff V1333
0x1819: M[0x0] = V1335
0x181a: V1336 = 0x20
0x181c: V1337 = ADD 0x20 0x0
0x181f: M[0x20] = 0x2
0x1820: V1338 = 0x20
0x1822: V1339 = ADD 0x20 0x20
0x1823: V1340 = 0x0
0x1825: V1341 = SHA3 0x0 0x40
0x1826: V1342 = 0x0
0x1828: V1343 = CALLER
0x1829: V1344 = 0xffffffffffffffffffffffffffffffffffffffff
0x183e: V1345 = AND 0xffffffffffffffffffffffffffffffffffffffff V1343
0x183f: V1346 = 0xffffffffffffffffffffffffffffffffffffffff
0x1854: V1347 = AND 0xffffffffffffffffffffffffffffffffffffffff V1345
0x1856: M[0x0] = V1347
0x1857: V1348 = 0x20
0x1859: V1349 = ADD 0x20 0x0
0x185c: M[0x20] = V1341
0x185d: V1350 = 0x20
0x185f: V1351 = ADD 0x20 0x20
0x1860: V1352 = 0x0
0x1862: V1353 = SHA3 0x0 0x40
0x1865: S[V1353] = S0
0x1868: V1354 = 0xffffffffffffffffffffffffffffffffffffffff
0x187d: V1355 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x187f: V1356 = 0xffffffffffffffffffffffffffffffffffffffff
0x1894: V1357 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1895: V1358 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x18b7: V1359 = 0x40
0x18b9: V1360 = M[0x40]
0x18bd: M[V1360] = S2
0x18be: V1361 = 0x20
0x18c0: V1362 = ADD 0x20 V1360
0x18c4: V1363 = 0x40
0x18c6: V1364 = M[0x40]
0x18c9: V1365 = SUB V1362 V1364
0x18cb: LOG V1364 V1365 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1357 V1355
0x18cc: V1366 = 0x1
0x18d5: JUMP S5
0x18d6: JUMPDEST 
0x18d7: V1367 = 0x0
0x18da: V1368 = 0x0
0x18dd: V1369 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f2: V1370 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x18f3: V1371 = 0xffffffffffffffffffffffffffffffffffffffff
0x1908: V1372 = AND 0xffffffffffffffffffffffffffffffffffffffff V1370
0x190a: M[0x0] = V1372
0x190b: V1373 = 0x20
0x190d: V1374 = ADD 0x20 0x0
0x1910: M[0x20] = 0x0
0x1911: V1375 = 0x20
0x1913: V1376 = ADD 0x20 0x20
0x1914: V1377 = 0x0
0x1916: V1378 = SHA3 0x0 0x40
0x1917: V1379 = S[V1378]
0x191d: JUMP S1
0x191e: JUMPDEST 
0x191f: V1380 = 0x0
0x1922: V1381 = 0xffffffffffffffffffffffffffffffffffffffff
0x1937: V1382 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1939: V1383 = 0xffffffffffffffffffffffffffffffffffffffff
0x194e: V1384 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x194f: V1385 = EQ V1384 0x0
0x1950: V1386 = ISZERO V1385
0x1951: V1387 = ISZERO V1386
0x1952: V1388 = ISZERO V1387
0x1953: V1389 = 0x800
0x1956: THROWI V1388
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S1, V1259, 0x527, S0, S1, S2, S3, S2, V1286, 0x5ba, S1, S2, S3, S4, S2, V1326, 0x68b, S1, S2, S3, S4, 0x1, V1379, 0x0, S0, S1]
Exit stack: []

================================

Block 0x1957
[0x1957:0x19a3]
---
Predecessors: [0x162d]
Successors: [0x19a4]
---
0x1957 PUSH1 0x0
0x1959 DUP1
0x195a REVERT
0x195b JUMPDEST
0x195c PUSH1 0x0
0x195e DUP1
0x195f CALLER
0x1960 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1975 AND
0x1976 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198b AND
0x198c DUP2
0x198d MSTORE
0x198e PUSH1 0x20
0x1990 ADD
0x1991 SWAP1
0x1992 DUP2
0x1993 MSTORE
0x1994 PUSH1 0x20
0x1996 ADD
0x1997 PUSH1 0x0
0x1999 SHA3
0x199a SLOAD
0x199b DUP3
0x199c GT
0x199d ISZERO
0x199e ISZERO
0x199f ISZERO
0x19a0 PUSH2 0x84d
0x19a3 JUMPI
---
0x1957: V1390 = 0x0
0x195a: REVERT 0x0 0x0
0x195b: JUMPDEST 
0x195c: V1391 = 0x0
0x195f: V1392 = CALLER
0x1960: V1393 = 0xffffffffffffffffffffffffffffffffffffffff
0x1975: V1394 = AND 0xffffffffffffffffffffffffffffffffffffffff V1392
0x1976: V1395 = 0xffffffffffffffffffffffffffffffffffffffff
0x198b: V1396 = AND 0xffffffffffffffffffffffffffffffffffffffff V1394
0x198d: M[0x0] = V1396
0x198e: V1397 = 0x20
0x1990: V1398 = ADD 0x20 0x0
0x1993: M[0x20] = 0x0
0x1994: V1399 = 0x20
0x1996: V1400 = ADD 0x20 0x20
0x1997: V1401 = 0x0
0x1999: V1402 = SHA3 0x0 0x40
0x199a: V1403 = S[V1402]
0x199c: V1404 = GT S1 V1403
0x199d: V1405 = ISZERO V1404
0x199e: V1406 = ISZERO V1405
0x199f: V1407 = ISZERO V1406
0x19a0: V1408 = 0x84d
0x19a3: THROWI V1407
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x19a4
[0x19a4:0x1bd0]
---
Predecessors: [0x1957]
Successors: [0x1bd1]
---
0x19a4 PUSH1 0x0
0x19a6 DUP1
0x19a7 REVERT
0x19a8 JUMPDEST
0x19a9 PUSH2 0x89e
0x19ac DUP3
0x19ad PUSH1 0x0
0x19af DUP1
0x19b0 CALLER
0x19b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c6 AND
0x19c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19dc AND
0x19dd DUP2
0x19de MSTORE
0x19df PUSH1 0x20
0x19e1 ADD
0x19e2 SWAP1
0x19e3 DUP2
0x19e4 MSTORE
0x19e5 PUSH1 0x20
0x19e7 ADD
0x19e8 PUSH1 0x0
0x19ea SHA3
0x19eb SLOAD
0x19ec PUSH2 0xa69
0x19ef SWAP1
0x19f0 SWAP2
0x19f1 SWAP1
0x19f2 PUSH4 0xffffffff
0x19f7 AND
0x19f8 JUMP
0x19f9 JUMPDEST
0x19fa PUSH1 0x0
0x19fc DUP1
0x19fd CALLER
0x19fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a13 AND
0x1a14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a29 AND
0x1a2a DUP2
0x1a2b MSTORE
0x1a2c PUSH1 0x20
0x1a2e ADD
0x1a2f SWAP1
0x1a30 DUP2
0x1a31 MSTORE
0x1a32 PUSH1 0x20
0x1a34 ADD
0x1a35 PUSH1 0x0
0x1a37 SHA3
0x1a38 DUP2
0x1a39 SWAP1
0x1a3a SSTORE
0x1a3b POP
0x1a3c PUSH2 0x931
0x1a3f DUP3
0x1a40 PUSH1 0x0
0x1a42 DUP1
0x1a43 DUP7
0x1a44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a59 AND
0x1a5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6f AND
0x1a70 DUP2
0x1a71 MSTORE
0x1a72 PUSH1 0x20
0x1a74 ADD
0x1a75 SWAP1
0x1a76 DUP2
0x1a77 MSTORE
0x1a78 PUSH1 0x20
0x1a7a ADD
0x1a7b PUSH1 0x0
0x1a7d SHA3
0x1a7e SLOAD
0x1a7f PUSH2 0xa82
0x1a82 SWAP1
0x1a83 SWAP2
0x1a84 SWAP1
0x1a85 PUSH4 0xffffffff
0x1a8a AND
0x1a8b JUMP
0x1a8c JUMPDEST
0x1a8d PUSH1 0x0
0x1a8f DUP1
0x1a90 DUP6
0x1a91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa6 AND
0x1aa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1abc AND
0x1abd DUP2
0x1abe MSTORE
0x1abf PUSH1 0x20
0x1ac1 ADD
0x1ac2 SWAP1
0x1ac3 DUP2
0x1ac4 MSTORE
0x1ac5 PUSH1 0x20
0x1ac7 ADD
0x1ac8 PUSH1 0x0
0x1aca SHA3
0x1acb DUP2
0x1acc SWAP1
0x1acd SSTORE
0x1ace POP
0x1acf DUP3
0x1ad0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae5 AND
0x1ae6 CALLER
0x1ae7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1afc AND
0x1afd PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1b1e DUP5
0x1b1f PUSH1 0x40
0x1b21 MLOAD
0x1b22 DUP1
0x1b23 DUP3
0x1b24 DUP2
0x1b25 MSTORE
0x1b26 PUSH1 0x20
0x1b28 ADD
0x1b29 SWAP2
0x1b2a POP
0x1b2b POP
0x1b2c PUSH1 0x40
0x1b2e MLOAD
0x1b2f DUP1
0x1b30 SWAP2
0x1b31 SUB
0x1b32 SWAP1
0x1b33 LOG3
0x1b34 PUSH1 0x1
0x1b36 SWAP1
0x1b37 POP
0x1b38 SWAP3
0x1b39 SWAP2
0x1b3a POP
0x1b3b POP
0x1b3c JUMP
0x1b3d JUMPDEST
0x1b3e PUSH1 0x0
0x1b40 PUSH1 0x2
0x1b42 PUSH1 0x0
0x1b44 DUP5
0x1b45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b5a AND
0x1b5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b70 AND
0x1b71 DUP2
0x1b72 MSTORE
0x1b73 PUSH1 0x20
0x1b75 ADD
0x1b76 SWAP1
0x1b77 DUP2
0x1b78 MSTORE
0x1b79 PUSH1 0x20
0x1b7b ADD
0x1b7c PUSH1 0x0
0x1b7e SHA3
0x1b7f PUSH1 0x0
0x1b81 DUP4
0x1b82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b97 AND
0x1b98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bad AND
0x1bae DUP2
0x1baf MSTORE
0x1bb0 PUSH1 0x20
0x1bb2 ADD
0x1bb3 SWAP1
0x1bb4 DUP2
0x1bb5 MSTORE
0x1bb6 PUSH1 0x20
0x1bb8 ADD
0x1bb9 PUSH1 0x0
0x1bbb SHA3
0x1bbc SLOAD
0x1bbd SWAP1
0x1bbe POP
0x1bbf SWAP3
0x1bc0 SWAP2
0x1bc1 POP
0x1bc2 POP
0x1bc3 JUMP
0x1bc4 JUMPDEST
0x1bc5 PUSH1 0x0
0x1bc7 DUP3
0x1bc8 DUP3
0x1bc9 GT
0x1bca ISZERO
0x1bcb ISZERO
0x1bcc ISZERO
0x1bcd PUSH2 0xa77
0x1bd0 JUMPI
---
0x19a4: V1409 = 0x0
0x19a7: REVERT 0x0 0x0
0x19a8: JUMPDEST 
0x19a9: V1410 = 0x89e
0x19ad: V1411 = 0x0
0x19b0: V1412 = CALLER
0x19b1: V1413 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c6: V1414 = AND 0xffffffffffffffffffffffffffffffffffffffff V1412
0x19c7: V1415 = 0xffffffffffffffffffffffffffffffffffffffff
0x19dc: V1416 = AND 0xffffffffffffffffffffffffffffffffffffffff V1414
0x19de: M[0x0] = V1416
0x19df: V1417 = 0x20
0x19e1: V1418 = ADD 0x20 0x0
0x19e4: M[0x20] = 0x0
0x19e5: V1419 = 0x20
0x19e7: V1420 = ADD 0x20 0x20
0x19e8: V1421 = 0x0
0x19ea: V1422 = SHA3 0x0 0x40
0x19eb: V1423 = S[V1422]
0x19ec: V1424 = 0xa69
0x19f2: V1425 = 0xffffffff
0x19f7: V1426 = AND 0xffffffff 0xa69
0x19f8: THROW 
0x19f9: JUMPDEST 
0x19fa: V1427 = 0x0
0x19fd: V1428 = CALLER
0x19fe: V1429 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a13: V1430 = AND 0xffffffffffffffffffffffffffffffffffffffff V1428
0x1a14: V1431 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a29: V1432 = AND 0xffffffffffffffffffffffffffffffffffffffff V1430
0x1a2b: M[0x0] = V1432
0x1a2c: V1433 = 0x20
0x1a2e: V1434 = ADD 0x20 0x0
0x1a31: M[0x20] = 0x0
0x1a32: V1435 = 0x20
0x1a34: V1436 = ADD 0x20 0x20
0x1a35: V1437 = 0x0
0x1a37: V1438 = SHA3 0x0 0x40
0x1a3a: S[V1438] = S0
0x1a3c: V1439 = 0x931
0x1a40: V1440 = 0x0
0x1a44: V1441 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a59: V1442 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1a5a: V1443 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6f: V1444 = AND 0xffffffffffffffffffffffffffffffffffffffff V1442
0x1a71: M[0x0] = V1444
0x1a72: V1445 = 0x20
0x1a74: V1446 = ADD 0x20 0x0
0x1a77: M[0x20] = 0x0
0x1a78: V1447 = 0x20
0x1a7a: V1448 = ADD 0x20 0x20
0x1a7b: V1449 = 0x0
0x1a7d: V1450 = SHA3 0x0 0x40
0x1a7e: V1451 = S[V1450]
0x1a7f: V1452 = 0xa82
0x1a85: V1453 = 0xffffffff
0x1a8a: V1454 = AND 0xffffffff 0xa82
0x1a8b: THROW 
0x1a8c: JUMPDEST 
0x1a8d: V1455 = 0x0
0x1a91: V1456 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa6: V1457 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1aa7: V1458 = 0xffffffffffffffffffffffffffffffffffffffff
0x1abc: V1459 = AND 0xffffffffffffffffffffffffffffffffffffffff V1457
0x1abe: M[0x0] = V1459
0x1abf: V1460 = 0x20
0x1ac1: V1461 = ADD 0x20 0x0
0x1ac4: M[0x20] = 0x0
0x1ac5: V1462 = 0x20
0x1ac7: V1463 = ADD 0x20 0x20
0x1ac8: V1464 = 0x0
0x1aca: V1465 = SHA3 0x0 0x40
0x1acd: S[V1465] = S0
0x1ad0: V1466 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae5: V1467 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1ae6: V1468 = CALLER
0x1ae7: V1469 = 0xffffffffffffffffffffffffffffffffffffffff
0x1afc: V1470 = AND 0xffffffffffffffffffffffffffffffffffffffff V1468
0x1afd: V1471 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1b1f: V1472 = 0x40
0x1b21: V1473 = M[0x40]
0x1b25: M[V1473] = S2
0x1b26: V1474 = 0x20
0x1b28: V1475 = ADD 0x20 V1473
0x1b2c: V1476 = 0x40
0x1b2e: V1477 = M[0x40]
0x1b31: V1478 = SUB V1475 V1477
0x1b33: LOG V1477 V1478 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1470 V1467
0x1b34: V1479 = 0x1
0x1b3c: JUMP S4
0x1b3d: JUMPDEST 
0x1b3e: V1480 = 0x0
0x1b40: V1481 = 0x2
0x1b42: V1482 = 0x0
0x1b45: V1483 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b5a: V1484 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1b5b: V1485 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b70: V1486 = AND 0xffffffffffffffffffffffffffffffffffffffff V1484
0x1b72: M[0x0] = V1486
0x1b73: V1487 = 0x20
0x1b75: V1488 = ADD 0x20 0x0
0x1b78: M[0x20] = 0x2
0x1b79: V1489 = 0x20
0x1b7b: V1490 = ADD 0x20 0x20
0x1b7c: V1491 = 0x0
0x1b7e: V1492 = SHA3 0x0 0x40
0x1b7f: V1493 = 0x0
0x1b82: V1494 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b97: V1495 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1b98: V1496 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bad: V1497 = AND 0xffffffffffffffffffffffffffffffffffffffff V1495
0x1baf: M[0x0] = V1497
0x1bb0: V1498 = 0x20
0x1bb2: V1499 = ADD 0x20 0x0
0x1bb5: M[0x20] = V1492
0x1bb6: V1500 = 0x20
0x1bb8: V1501 = ADD 0x20 0x20
0x1bb9: V1502 = 0x0
0x1bbb: V1503 = SHA3 0x0 0x40
0x1bbc: V1504 = S[V1503]
0x1bc3: JUMP S2
0x1bc4: JUMPDEST 
0x1bc5: V1505 = 0x0
0x1bc9: V1506 = GT S0 S1
0x1bca: V1507 = ISZERO V1506
0x1bcb: V1508 = ISZERO V1507
0x1bcc: V1509 = ISZERO V1508
0x1bcd: V1510 = 0xa77
0x1bd0: THROWI V1509
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S1, V1423, 0x89e, S0, S1, S2, V1451, 0x931, S1, S2, S3, 0x1, V1504, 0x0, S0, S1]
Exit stack: []

================================

Block 0x1bd1
[0x1bd1:0x1bee]
---
Predecessors: [0x19a4]
Successors: [0x1bef]
---
0x1bd1 INVALID
0x1bd2 JUMPDEST
0x1bd3 DUP2
0x1bd4 DUP4
0x1bd5 SUB
0x1bd6 SWAP1
0x1bd7 POP
0x1bd8 SWAP3
0x1bd9 SWAP2
0x1bda POP
0x1bdb POP
0x1bdc JUMP
0x1bdd JUMPDEST
0x1bde PUSH1 0x0
0x1be0 DUP2
0x1be1 DUP4
0x1be2 ADD
0x1be3 SWAP1
0x1be4 POP
0x1be5 DUP3
0x1be6 DUP2
0x1be7 LT
0x1be8 ISZERO
0x1be9 ISZERO
0x1bea ISZERO
0x1beb PUSH2 0xa95
0x1bee JUMPI
---
0x1bd1: INVALID 
0x1bd2: JUMPDEST 
0x1bd5: V1511 = SUB S2 S1
0x1bdc: JUMP S3
0x1bdd: JUMPDEST 
0x1bde: V1512 = 0x0
0x1be2: V1513 = ADD S1 S0
0x1be7: V1514 = LT V1513 S1
0x1be8: V1515 = ISZERO V1514
0x1be9: V1516 = ISZERO V1515
0x1bea: V1517 = ISZERO V1516
0x1beb: V1518 = 0xa95
0x1bee: THROWI V1517
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1511, V1513, S0, S1]
Exit stack: []

================================

Block 0x1bef
[0x1bef:0x1c29]
---
Predecessors: [0x1bd1]
Successors: []
---
0x1bef INVALID
0x1bf0 JUMPDEST
0x1bf1 DUP1
0x1bf2 SWAP1
0x1bf3 POP
0x1bf4 SWAP3
0x1bf5 SWAP2
0x1bf6 POP
0x1bf7 POP
0x1bf8 JUMP
0x1bf9 STOP
0x1bfa LOG1
0x1bfb PUSH6 0x627a7a723058
0x1c02 SHA3
0x1c03 MISSING 0xca
0x1c04 DUP8
0x1c05 DUP10
0x1c06 MISSING 0xe8
0x1c07 MISSING 0xdc
0x1c08 MISSING 0x49
0x1c09 MISSING 0xc8
0x1c0a NOT
0x1c0b MISSING 0xce
0x1c0c PUSH29 0x8e75406e981bb9e942886b28a3914081957ec3306e200029
---
0x1bef: INVALID 
0x1bf0: JUMPDEST 
0x1bf8: JUMP S3
0x1bf9: STOP 
0x1bfa: LOG S0 S1 S2
0x1bfb: V1519 = 0x627a7a723058
0x1c02: V1520 = SHA3 0x627a7a723058 S3
0x1c03: MISSING 0xca
0x1c06: MISSING 0xe8
0x1c07: MISSING 0xdc
0x1c08: MISSING 0x49
0x1c09: MISSING 0xc8
0x1c0a: V1521 = NOT S0
0x1c0b: MISSING 0xce
0x1c0c: V1522 = 0x8e75406e981bb9e942886b28a3914081957ec3306e200029
---
Entry stack: [S2, S1, V1513]
Stack pops: 0
Stack additions: [S0, V1520, S8, S7, S0, S1, S2, S3, S4, S5, S6, S7, S8, V1521, 0x8e75406e981bb9e942886b28a3914081957ec3306e200029]
Exit stack: []

================================

Function 0:
Public function signature: 0x18160ddd
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x143

Function 1:
Public function signature: 0x70a08231
Entry block: 0x87
Exit block: 0xc8
Body: 0x87, 0x8f, 0x93, 0xc8, 0x14d

Function 2:
Public function signature: 0xa9059cbb
Entry block: 0xde
Exit block: 0x129
Body: 0xde, 0xe6, 0xea, 0x129, 0x195, 0x1ce, 0x1d2, 0x21b, 0x21f, 0x270, 0x303, 0x3b4, 0x3c1, 0x3c2, 0x3cd, 0x3df, 0x3e0

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

