Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb8a76f54
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb8a76f54
0x3c: V13 = EQ 0xb8a76f54 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xae]
---
0x41 DUP1
0x42 PUSH4 0xcb0ab425
0x47 EQ
0x48 PUSH2 0xae
0x4b JUMPI
---
0x42: V15 = 0xcb0ab425
0x47: V16 = EQ 0xcb0ab425 V11
0x48: V17 = 0xae
0x4b: JUMPI 0xae V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xab]
---
Predecessors: [0x51]
Successors: [0x160]
---
0x5c JUMPDEST
0x5d PUSH2 0xac
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x20
0x68 ADD
0x69 SWAP1
0x6a DUP3
0x6b ADD
0x6c DUP1
0x6d CALLDATALOAD
0x6e SWAP1
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP1
0x73 DUP1
0x74 DUP1
0x75 PUSH1 0x1f
0x77 ADD
0x78 PUSH1 0x20
0x7a DUP1
0x7b SWAP2
0x7c DIV
0x7d MUL
0x7e PUSH1 0x20
0x80 ADD
0x81 PUSH1 0x40
0x83 MLOAD
0x84 SWAP1
0x85 DUP2
0x86 ADD
0x87 PUSH1 0x40
0x89 MSTORE
0x8a DUP1
0x8b SWAP4
0x8c SWAP3
0x8d SWAP2
0x8e SWAP1
0x8f DUP2
0x90 DUP2
0x91 MSTORE
0x92 PUSH1 0x20
0x94 ADD
0x95 DUP4
0x96 DUP4
0x97 DUP1
0x98 DUP3
0x99 DUP5
0x9a CALLDATACOPY
0x9b DUP3
0x9c ADD
0x9d SWAP2
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 SWAP2
0xa5 SWAP1
0xa6 POP
0xa7 POP
0xa8 PUSH2 0x160
0xab JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xac
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x66: V26 = 0x20
0x68: V27 = ADD 0x20 0x4
0x6b: V28 = ADD 0x4 V25
0x6d: V29 = CALLDATALOAD V28
0x6f: V30 = 0x20
0x71: V31 = ADD 0x20 V28
0x75: V32 = 0x1f
0x77: V33 = ADD 0x1f V29
0x78: V34 = 0x20
0x7c: V35 = DIV V33 0x20
0x7d: V36 = MUL V35 0x20
0x7e: V37 = 0x20
0x80: V38 = ADD 0x20 V36
0x81: V39 = 0x40
0x83: V40 = M[0x40]
0x86: V41 = ADD V40 V38
0x87: V42 = 0x40
0x89: M[0x40] = V41
0x91: M[V40] = V29
0x92: V43 = 0x20
0x94: V44 = ADD 0x20 V40
0x9a: CALLDATACOPY V44 V31 V29
0x9c: V45 = ADD V44 V29
0xa8: V46 = 0x160
0xab: JUMP 0x160
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xac, V40]
Exit stack: [V11, 0xac, V40]

================================

Block 0xac
[0xac:0xad]
---
Predecessors: [0x259]
Successors: []
---
0xac JUMPDEST
0xad STOP
---
0xac: JUMPDEST 
0xad: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x41]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V47 = CALLVALUE
0xb0: V48 = ISZERO V47
0xb1: V49 = 0xb9
0xb4: JUMPI 0xb9 V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V50 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xe4]
---
Predecessors: [0xae]
Successors: [0x269]
---
0xb9 JUMPDEST
0xba PUSH2 0xe5
0xbd PUSH1 0x4
0xbf DUP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd SWAP2
0xde SWAP1
0xdf POP
0xe0 POP
0xe1 PUSH2 0x269
0xe4 JUMP
---
0xb9: JUMPDEST 
0xba: V51 = 0xe5
0xbd: V52 = 0x4
0xc1: V53 = CALLDATALOAD 0x4
0xc2: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xd9: V56 = 0x20
0xdb: V57 = ADD 0x20 0x4
0xe1: V58 = 0x269
0xe4: JUMP 0x269
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5, V55]
Exit stack: [V11, 0xe5, V55]

================================

Block 0xe5
[0xe5:0x109]
---
Predecessors: [0x343]
Successors: [0x10a]
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP1
0xeb PUSH1 0x20
0xed ADD
0xee DUP3
0xef DUP2
0xf0 SUB
0xf1 DUP3
0xf2 MSTORE
0xf3 DUP4
0xf4 DUP2
0xf5 DUP2
0xf6 MLOAD
0xf7 DUP2
0xf8 MSTORE
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP2
0xfd POP
0xfe DUP1
0xff MLOAD
0x100 SWAP1
0x101 PUSH1 0x20
0x103 ADD
0x104 SWAP1
0x105 DUP1
0x106 DUP4
0x107 DUP4
0x108 PUSH1 0x0
---
0xe5: JUMPDEST 
0xe6: V59 = 0x40
0xe8: V60 = M[0x40]
0xeb: V61 = 0x20
0xed: V62 = ADD 0x20 V60
0xf0: V63 = SUB V62 V60
0xf2: M[V60] = V63
0xf6: V64 = M[V194]
0xf8: M[V62] = V64
0xf9: V65 = 0x20
0xfb: V66 = ADD 0x20 V62
0xff: V67 = M[V194]
0x101: V68 = 0x20
0x103: V69 = ADD 0x20 V194
0x108: V70 = 0x0
---
Entry stack: [V11, V194]
Stack pops: 1
Stack additions: [S0, V60, V60, V66, V69, V67, V67, V66, V69, 0x0]
Exit stack: [V11, V194, V60, V60, V66, V69, V67, V67, V66, V69, 0x0]

================================

Block 0x10a
[0x10a:0x112]
---
Predecessors: [0xe5, 0x113]
Successors: [0x113, 0x125]
---
0x10a JUMPDEST
0x10b DUP4
0x10c DUP2
0x10d LT
0x10e ISZERO
0x10f PUSH2 0x125
0x112 JUMPI
---
0x10a: JUMPDEST 
0x10d: V71 = LT S0 V67
0x10e: V72 = ISZERO V71
0x10f: V73 = 0x125
0x112: JUMPI 0x125 V72
---
Entry stack: [V11, V194, V60, V60, V66, V69, V67, V67, V66, V69, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V194, V60, V60, V66, V69, V67, V67, V66, V69, S0]

================================

Block 0x113
[0x113:0x124]
---
Predecessors: [0x10a]
Successors: [0x10a]
---
0x113 DUP1
0x114 DUP3
0x115 ADD
0x116 MLOAD
0x117 DUP2
0x118 DUP5
0x119 ADD
0x11a MSTORE
0x11b PUSH1 0x20
0x11d DUP2
0x11e ADD
0x11f SWAP1
0x120 POP
0x121 PUSH2 0x10a
0x124 JUMP
---
0x115: V74 = ADD V69 S0
0x116: V75 = M[V74]
0x119: V76 = ADD V66 S0
0x11a: M[V76] = V75
0x11b: V77 = 0x20
0x11e: V78 = ADD S0 0x20
0x121: V79 = 0x10a
0x124: JUMP 0x10a
---
Entry stack: [V11, V194, V60, V60, V66, V69, V67, V67, V66, V69, S0]
Stack pops: 3
Stack additions: [S2, S1, V78]
Exit stack: [V11, V194, V60, V60, V66, V69, V67, V67, V66, V69, V78]

================================

Block 0x125
[0x125:0x138]
---
Predecessors: [0x10a]
Successors: [0x139, 0x152]
---
0x125 JUMPDEST
0x126 POP
0x127 POP
0x128 POP
0x129 POP
0x12a SWAP1
0x12b POP
0x12c SWAP1
0x12d DUP2
0x12e ADD
0x12f SWAP1
0x130 PUSH1 0x1f
0x132 AND
0x133 DUP1
0x134 ISZERO
0x135 PUSH2 0x152
0x138 JUMPI
---
0x125: JUMPDEST 
0x12e: V80 = ADD V67 V66
0x130: V81 = 0x1f
0x132: V82 = AND 0x1f V67
0x134: V83 = ISZERO V82
0x135: V84 = 0x152
0x138: JUMPI 0x152 V83
---
Entry stack: [V11, V194, V60, V60, V66, V69, V67, V67, V66, V69, S0]
Stack pops: 7
Stack additions: [V80, V82]
Exit stack: [V11, V194, V60, V60, V80, V82]

================================

Block 0x139
[0x139:0x151]
---
Predecessors: [0x125]
Successors: [0x152]
---
0x139 DUP1
0x13a DUP3
0x13b SUB
0x13c DUP1
0x13d MLOAD
0x13e PUSH1 0x1
0x140 DUP4
0x141 PUSH1 0x20
0x143 SUB
0x144 PUSH2 0x100
0x147 EXP
0x148 SUB
0x149 NOT
0x14a AND
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 SWAP2
0x151 POP
---
0x13b: V85 = SUB V80 V82
0x13d: V86 = M[V85]
0x13e: V87 = 0x1
0x141: V88 = 0x20
0x143: V89 = SUB 0x20 V82
0x144: V90 = 0x100
0x147: V91 = EXP 0x100 V89
0x148: V92 = SUB V91 0x1
0x149: V93 = NOT V92
0x14a: V94 = AND V93 V86
0x14c: M[V85] = V94
0x14d: V95 = 0x20
0x14f: V96 = ADD 0x20 V85
---
Entry stack: [V11, V194, V60, V60, V80, V82]
Stack pops: 2
Stack additions: [V96, S0]
Exit stack: [V11, V194, V60, V60, V96, V82]

================================

Block 0x152
[0x152:0x15f]
---
Predecessors: [0x125, 0x139]
Successors: []
---
0x152 JUMPDEST
0x153 POP
0x154 SWAP3
0x155 POP
0x156 POP
0x157 POP
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c SWAP2
0x15d SUB
0x15e SWAP1
0x15f RETURN
---
0x152: JUMPDEST 
0x158: V97 = 0x40
0x15a: V98 = M[0x40]
0x15d: V99 = SUB S1 V98
0x15f: RETURN V98 V99
---
Entry stack: [V11, V194, V60, V60, S1, V82]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x160
[0x160:0x1b1]
---
Predecessors: [0x5c]
Successors: [0x34f]
---
0x160 JUMPDEST
0x161 DUP1
0x162 PUSH1 0x0
0x164 DUP1
0x165 CALLER
0x166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b AND
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 DUP2
0x193 MSTORE
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP1
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x20
0x19c ADD
0x19d PUSH1 0x0
0x19f SHA3
0x1a0 SWAP1
0x1a1 DUP1
0x1a2 MLOAD
0x1a3 SWAP1
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP1
0x1a8 PUSH2 0x1b2
0x1ab SWAP3
0x1ac SWAP2
0x1ad SWAP1
0x1ae PUSH2 0x34f
0x1b1 JUMP
---
0x160: JUMPDEST 
0x162: V100 = 0x0
0x165: V101 = CALLER
0x166: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x17c: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x193: M[0x0] = V105
0x194: V106 = 0x20
0x196: V107 = ADD 0x20 0x0
0x199: M[0x20] = 0x0
0x19a: V108 = 0x20
0x19c: V109 = ADD 0x20 0x20
0x19d: V110 = 0x0
0x19f: V111 = SHA3 0x0 0x40
0x1a2: V112 = M[V40]
0x1a4: V113 = 0x20
0x1a6: V114 = ADD 0x20 V40
0x1a8: V115 = 0x1b2
0x1ae: V116 = 0x34f
0x1b1: JUMP 0x34f
---
Entry stack: [V11, 0xac, V40]
Stack pops: 1
Stack additions: [S0, 0x1b2, V111, V114, V112]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V114, V112]

================================

Block 0x1b2
[0x1b2:0x210]
---
Predecessors: [0x3cb]
Successors: [0x211]
---
0x1b2 JUMPDEST
0x1b3 POP
0x1b4 CALLER
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb PUSH32 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e
0x1ec DUP3
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 DUP1
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 DUP3
0x1f6 DUP2
0x1f7 SUB
0x1f8 DUP3
0x1f9 MSTORE
0x1fa DUP4
0x1fb DUP2
0x1fc DUP2
0x1fd MLOAD
0x1fe DUP2
0x1ff MSTORE
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP2
0x204 POP
0x205 DUP1
0x206 MLOAD
0x207 SWAP1
0x208 PUSH1 0x20
0x20a ADD
0x20b SWAP1
0x20c DUP1
0x20d DUP4
0x20e DUP4
0x20f PUSH1 0x0
---
0x1b2: JUMPDEST 
0x1b4: V117 = CALLER
0x1b5: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1cb: V120 = 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e
0x1ed: V121 = 0x40
0x1ef: V122 = M[0x40]
0x1f2: V123 = 0x20
0x1f4: V124 = ADD 0x20 V122
0x1f7: V125 = SUB V124 V122
0x1f9: M[V122] = V125
0x1fd: V126 = M[V40]
0x1ff: M[V124] = V126
0x200: V127 = 0x20
0x202: V128 = ADD 0x20 V124
0x206: V129 = M[V40]
0x208: V130 = 0x20
0x20a: V131 = ADD 0x20 V40
0x20f: V132 = 0x0
---
Entry stack: [V11, 0xac, V40, V111]
Stack pops: 2
Stack additions: [S1, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, S1, V122, V122, V128, V131, V129, V129, V128, V131, 0x0]
Exit stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V128, V131, V129, V129, V128, V131, 0x0]

================================

Block 0x211
[0x211:0x219]
---
Predecessors: [0x1b2, 0x21a]
Successors: [0x21a, 0x22c]
---
0x211 JUMPDEST
0x212 DUP4
0x213 DUP2
0x214 LT
0x215 ISZERO
0x216 PUSH2 0x22c
0x219 JUMPI
---
0x211: JUMPDEST 
0x214: V133 = LT S0 V129
0x215: V134 = ISZERO V133
0x216: V135 = 0x22c
0x219: JUMPI 0x22c V134
---
Entry stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V128, V131, V129, V129, V128, V131, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V128, V131, V129, V129, V128, V131, S0]

================================

Block 0x21a
[0x21a:0x22b]
---
Predecessors: [0x211]
Successors: [0x211]
---
0x21a DUP1
0x21b DUP3
0x21c ADD
0x21d MLOAD
0x21e DUP2
0x21f DUP5
0x220 ADD
0x221 MSTORE
0x222 PUSH1 0x20
0x224 DUP2
0x225 ADD
0x226 SWAP1
0x227 POP
0x228 PUSH2 0x211
0x22b JUMP
---
0x21c: V136 = ADD V131 S0
0x21d: V137 = M[V136]
0x220: V138 = ADD V128 S0
0x221: M[V138] = V137
0x222: V139 = 0x20
0x225: V140 = ADD S0 0x20
0x228: V141 = 0x211
0x22b: JUMP 0x211
---
Entry stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V128, V131, V129, V129, V128, V131, S0]
Stack pops: 3
Stack additions: [S2, S1, V140]
Exit stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V128, V131, V129, V129, V128, V131, V140]

================================

Block 0x22c
[0x22c:0x23f]
---
Predecessors: [0x211]
Successors: [0x240, 0x259]
---
0x22c JUMPDEST
0x22d POP
0x22e POP
0x22f POP
0x230 POP
0x231 SWAP1
0x232 POP
0x233 SWAP1
0x234 DUP2
0x235 ADD
0x236 SWAP1
0x237 PUSH1 0x1f
0x239 AND
0x23a DUP1
0x23b ISZERO
0x23c PUSH2 0x259
0x23f JUMPI
---
0x22c: JUMPDEST 
0x235: V142 = ADD V129 V128
0x237: V143 = 0x1f
0x239: V144 = AND 0x1f V129
0x23b: V145 = ISZERO V144
0x23c: V146 = 0x259
0x23f: JUMPI 0x259 V145
---
Entry stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V128, V131, V129, V129, V128, V131, S0]
Stack pops: 7
Stack additions: [V142, V144]
Exit stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V142, V144]

================================

Block 0x240
[0x240:0x258]
---
Predecessors: [0x22c]
Successors: [0x259]
---
0x240 DUP1
0x241 DUP3
0x242 SUB
0x243 DUP1
0x244 MLOAD
0x245 PUSH1 0x1
0x247 DUP4
0x248 PUSH1 0x20
0x24a SUB
0x24b PUSH2 0x100
0x24e EXP
0x24f SUB
0x250 NOT
0x251 AND
0x252 DUP2
0x253 MSTORE
0x254 PUSH1 0x20
0x256 ADD
0x257 SWAP2
0x258 POP
---
0x242: V147 = SUB V142 V144
0x244: V148 = M[V147]
0x245: V149 = 0x1
0x248: V150 = 0x20
0x24a: V151 = SUB 0x20 V144
0x24b: V152 = 0x100
0x24e: V153 = EXP 0x100 V151
0x24f: V154 = SUB V153 0x1
0x250: V155 = NOT V154
0x251: V156 = AND V155 V148
0x253: M[V147] = V156
0x254: V157 = 0x20
0x256: V158 = ADD 0x20 V147
---
Entry stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V142, V144]
Stack pops: 2
Stack additions: [V158, S0]
Exit stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, V158, V144]

================================

Block 0x259
[0x259:0x268]
---
Predecessors: [0x22c, 0x240]
Successors: [0xac]
---
0x259 JUMPDEST
0x25a POP
0x25b SWAP3
0x25c POP
0x25d POP
0x25e POP
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 SWAP2
0x264 SUB
0x265 SWAP1
0x266 LOG2
0x267 POP
0x268 JUMP
---
0x259: JUMPDEST 
0x25f: V159 = 0x40
0x261: V160 = M[0x40]
0x264: V161 = SUB S1 V160
0x266: LOG V160 V161 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e V119
0x268: JUMP 0xac
---
Entry stack: [V11, 0xac, V40, V119, 0x3ad00a2153f5aa93fde4e185fe1fdbf9a5504e110816d08da5fe39fbe7cec83e, V40, V122, V122, S1, V144]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0xb9]
Successors: [0x3cf]
---
0x269 JUMPDEST
0x26a PUSH2 0x271
0x26d PUSH2 0x3cf
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V162 = 0x271
0x26d: V163 = 0x3cf
0x270: JUMP 0x3cf
---
Entry stack: [V11, 0xe5, V55]
Stack pops: 0
Stack additions: [0x271]
Exit stack: [V11, 0xe5, V55, 0x271]

================================

Block 0x271
[0x271:0x2fc]
---
Predecessors: [0x3cf]
Successors: [0x2fd, 0x343]
---
0x271 JUMPDEST
0x272 PUSH1 0x0
0x274 DUP1
0x275 DUP4
0x276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28b AND
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 AND
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 SWAP1
0x2a8 DUP2
0x2a9 MSTORE
0x2aa PUSH1 0x20
0x2ac ADD
0x2ad PUSH1 0x0
0x2af SHA3
0x2b0 DUP1
0x2b1 SLOAD
0x2b2 PUSH1 0x1
0x2b4 DUP2
0x2b5 PUSH1 0x1
0x2b7 AND
0x2b8 ISZERO
0x2b9 PUSH2 0x100
0x2bc MUL
0x2bd SUB
0x2be AND
0x2bf PUSH1 0x2
0x2c1 SWAP1
0x2c2 DIV
0x2c3 DUP1
0x2c4 PUSH1 0x1f
0x2c6 ADD
0x2c7 PUSH1 0x20
0x2c9 DUP1
0x2ca SWAP2
0x2cb DIV
0x2cc MUL
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 SWAP1
0x2d4 DUP2
0x2d5 ADD
0x2d6 PUSH1 0x40
0x2d8 MSTORE
0x2d9 DUP1
0x2da SWAP3
0x2db SWAP2
0x2dc SWAP1
0x2dd DUP2
0x2de DUP2
0x2df MSTORE
0x2e0 PUSH1 0x20
0x2e2 ADD
0x2e3 DUP3
0x2e4 DUP1
0x2e5 SLOAD
0x2e6 PUSH1 0x1
0x2e8 DUP2
0x2e9 PUSH1 0x1
0x2eb AND
0x2ec ISZERO
0x2ed PUSH2 0x100
0x2f0 MUL
0x2f1 SUB
0x2f2 AND
0x2f3 PUSH1 0x2
0x2f5 SWAP1
0x2f6 DIV
0x2f7 DUP1
0x2f8 ISZERO
0x2f9 PUSH2 0x343
0x2fc JUMPI
---
0x271: JUMPDEST 
0x272: V164 = 0x0
0x276: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x28c: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2a3: M[0x0] = V168
0x2a4: V169 = 0x20
0x2a6: V170 = ADD 0x20 0x0
0x2a9: M[0x20] = 0x0
0x2aa: V171 = 0x20
0x2ac: V172 = ADD 0x20 0x20
0x2ad: V173 = 0x0
0x2af: V174 = SHA3 0x0 0x40
0x2b1: V175 = S[V174]
0x2b2: V176 = 0x1
0x2b5: V177 = 0x1
0x2b7: V178 = AND 0x1 V175
0x2b8: V179 = ISZERO V178
0x2b9: V180 = 0x100
0x2bc: V181 = MUL 0x100 V179
0x2bd: V182 = SUB V181 0x1
0x2be: V183 = AND V182 V175
0x2bf: V184 = 0x2
0x2c2: V185 = DIV V183 0x2
0x2c4: V186 = 0x1f
0x2c6: V187 = ADD 0x1f V185
0x2c7: V188 = 0x20
0x2cb: V189 = DIV V187 0x20
0x2cc: V190 = MUL V189 0x20
0x2cd: V191 = 0x20
0x2cf: V192 = ADD 0x20 V190
0x2d0: V193 = 0x40
0x2d2: V194 = M[0x40]
0x2d5: V195 = ADD V194 V192
0x2d6: V196 = 0x40
0x2d8: M[0x40] = V195
0x2df: M[V194] = V185
0x2e0: V197 = 0x20
0x2e2: V198 = ADD 0x20 V194
0x2e5: V199 = S[V174]
0x2e6: V200 = 0x1
0x2e9: V201 = 0x1
0x2eb: V202 = AND 0x1 V199
0x2ec: V203 = ISZERO V202
0x2ed: V204 = 0x100
0x2f0: V205 = MUL 0x100 V203
0x2f1: V206 = SUB V205 0x1
0x2f2: V207 = AND V206 V199
0x2f3: V208 = 0x2
0x2f6: V209 = DIV V207 0x2
0x2f8: V210 = ISZERO V209
0x2f9: V211 = 0x343
0x2fc: JUMPI 0x343 V210
---
Entry stack: [V11, 0xe5, V55, V287]
Stack pops: 2
Stack additions: [S1, S0, V194, V174, V185, V198, V174, V209]
Exit stack: [V11, 0xe5, V55, V287, V194, V174, V185, V198, V174, V209]

================================

Block 0x2fd
[0x2fd:0x304]
---
Predecessors: [0x271]
Successors: [0x305, 0x318]
---
0x2fd DUP1
0x2fe PUSH1 0x1f
0x300 LT
0x301 PUSH2 0x318
0x304 JUMPI
---
0x2fe: V212 = 0x1f
0x300: V213 = LT 0x1f V209
0x301: V214 = 0x318
0x304: JUMPI 0x318 V213
---
Entry stack: [V11, 0xe5, V55, V287, V194, V174, V185, V198, V174, V209]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe5, V55, V287, V194, V174, V185, V198, V174, V209]

================================

Block 0x305
[0x305:0x317]
---
Predecessors: [0x2fd]
Successors: [0x343]
---
0x305 PUSH2 0x100
0x308 DUP1
0x309 DUP4
0x30a SLOAD
0x30b DIV
0x30c MUL
0x30d DUP4
0x30e MSTORE
0x30f SWAP2
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP2
0x314 PUSH2 0x343
0x317 JUMP
---
0x305: V215 = 0x100
0x30a: V216 = S[V174]
0x30b: V217 = DIV V216 0x100
0x30c: V218 = MUL V217 0x100
0x30e: M[V198] = V218
0x310: V219 = 0x20
0x312: V220 = ADD 0x20 V198
0x314: V221 = 0x343
0x317: JUMP 0x343
---
Entry stack: [V11, 0xe5, V55, V287, V194, V174, V185, V198, V174, V209]
Stack pops: 3
Stack additions: [V220, S1, S0]
Exit stack: [V11, 0xe5, V55, V287, V194, V174, V185, V220, V174, V209]

================================

Block 0x318
[0x318:0x325]
---
Predecessors: [0x2fd]
Successors: [0x326]
---
0x318 JUMPDEST
0x319 DUP3
0x31a ADD
0x31b SWAP2
0x31c SWAP1
0x31d PUSH1 0x0
0x31f MSTORE
0x320 PUSH1 0x20
0x322 PUSH1 0x0
0x324 SHA3
0x325 SWAP1
---
0x318: JUMPDEST 
0x31a: V222 = ADD V198 V209
0x31d: V223 = 0x0
0x31f: M[0x0] = V174
0x320: V224 = 0x20
0x322: V225 = 0x0
0x324: V226 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xe5, V55, V287, V194, V174, V185, V198, V174, V209]
Stack pops: 3
Stack additions: [V222, V226, S2]
Exit stack: [V11, 0xe5, V55, V287, V194, V174, V185, V222, V226, V198]

================================

Block 0x326
[0x326:0x339]
---
Predecessors: [0x318, 0x326]
Successors: [0x326, 0x33a]
---
0x326 JUMPDEST
0x327 DUP2
0x328 SLOAD
0x329 DUP2
0x32a MSTORE
0x32b SWAP1
0x32c PUSH1 0x1
0x32e ADD
0x32f SWAP1
0x330 PUSH1 0x20
0x332 ADD
0x333 DUP1
0x334 DUP4
0x335 GT
0x336 PUSH2 0x326
0x339 JUMPI
---
0x326: JUMPDEST 
0x328: V227 = S[S1]
0x32a: M[S0] = V227
0x32c: V228 = 0x1
0x32e: V229 = ADD 0x1 S1
0x330: V230 = 0x20
0x332: V231 = ADD 0x20 S0
0x335: V232 = GT V222 V231
0x336: V233 = 0x326
0x339: JUMPI 0x326 V232
---
Entry stack: [V11, 0xe5, V55, V287, V194, V174, V185, V222, S1, S0]
Stack pops: 3
Stack additions: [S2, V229, V231]
Exit stack: [V11, 0xe5, V55, V287, V194, V174, V185, V222, V229, V231]

================================

Block 0x33a
[0x33a:0x342]
---
Predecessors: [0x326]
Successors: [0x343]
---
0x33a DUP3
0x33b SWAP1
0x33c SUB
0x33d PUSH1 0x1f
0x33f AND
0x340 DUP3
0x341 ADD
0x342 SWAP2
---
0x33c: V234 = SUB V231 V222
0x33d: V235 = 0x1f
0x33f: V236 = AND 0x1f V234
0x341: V237 = ADD V222 V236
---
Entry stack: [V11, 0xe5, V55, V287, V194, V174, V185, V222, V229, V231]
Stack pops: 3
Stack additions: [V237, S1, S2]
Exit stack: [V11, 0xe5, V55, V287, V194, V174, V185, V237, V229, V222]

================================

Block 0x343
[0x343:0x34e]
---
Predecessors: [0x271, 0x305, 0x33a]
Successors: [0xe5]
---
0x343 JUMPDEST
0x344 POP
0x345 POP
0x346 POP
0x347 POP
0x348 POP
0x349 SWAP1
0x34a POP
0x34b SWAP2
0x34c SWAP1
0x34d POP
0x34e JUMP
---
0x343: JUMPDEST 
0x34e: JUMP 0xe5
---
Entry stack: [V11, 0xe5, V55, V287, V194, V174, V185, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V11, V194]

================================

Block 0x34f
[0x34f:0x37f]
---
Predecessors: [0x160]
Successors: [0x380, 0x390]
---
0x34f JUMPDEST
0x350 DUP3
0x351 DUP1
0x352 SLOAD
0x353 PUSH1 0x1
0x355 DUP2
0x356 PUSH1 0x1
0x358 AND
0x359 ISZERO
0x35a PUSH2 0x100
0x35d MUL
0x35e SUB
0x35f AND
0x360 PUSH1 0x2
0x362 SWAP1
0x363 DIV
0x364 SWAP1
0x365 PUSH1 0x0
0x367 MSTORE
0x368 PUSH1 0x20
0x36a PUSH1 0x0
0x36c SHA3
0x36d SWAP1
0x36e PUSH1 0x1f
0x370 ADD
0x371 PUSH1 0x20
0x373 SWAP1
0x374 DIV
0x375 DUP2
0x376 ADD
0x377 SWAP3
0x378 DUP3
0x379 PUSH1 0x1f
0x37b LT
0x37c PUSH2 0x390
0x37f JUMPI
---
0x34f: JUMPDEST 
0x352: V238 = S[V111]
0x353: V239 = 0x1
0x356: V240 = 0x1
0x358: V241 = AND 0x1 V238
0x359: V242 = ISZERO V241
0x35a: V243 = 0x100
0x35d: V244 = MUL 0x100 V242
0x35e: V245 = SUB V244 0x1
0x35f: V246 = AND V245 V238
0x360: V247 = 0x2
0x363: V248 = DIV V246 0x2
0x365: V249 = 0x0
0x367: M[0x0] = V111
0x368: V250 = 0x20
0x36a: V251 = 0x0
0x36c: V252 = SHA3 0x0 0x20
0x36e: V253 = 0x1f
0x370: V254 = ADD 0x1f V248
0x371: V255 = 0x20
0x374: V256 = DIV V254 0x20
0x376: V257 = ADD V252 V256
0x379: V258 = 0x1f
0x37b: V259 = LT 0x1f V112
0x37c: V260 = 0x390
0x37f: JUMPI 0x390 V259
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V114, V112]
Stack pops: 3
Stack additions: [S2, V257, S0, V252, S1]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257, V112, V252, V114]

================================

Block 0x380
[0x380:0x38f]
---
Predecessors: [0x34f]
Successors: [0x3be]
---
0x380 DUP1
0x381 MLOAD
0x382 PUSH1 0xff
0x384 NOT
0x385 AND
0x386 DUP4
0x387 DUP1
0x388 ADD
0x389 OR
0x38a DUP6
0x38b SSTORE
0x38c PUSH2 0x3be
0x38f JUMP
---
0x381: V261 = M[V114]
0x382: V262 = 0xff
0x384: V263 = NOT 0xff
0x385: V264 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V261
0x388: V265 = ADD V112 V112
0x389: V266 = OR V265 V264
0x38b: S[V111] = V266
0x38c: V267 = 0x3be
0x38f: JUMP 0x3be
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257, V112, V252, V114]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257, V112, V252, V114]

================================

Block 0x390
[0x390:0x39e]
---
Predecessors: [0x34f]
Successors: [0x39f, 0x3be]
---
0x390 JUMPDEST
0x391 DUP3
0x392 DUP1
0x393 ADD
0x394 PUSH1 0x1
0x396 ADD
0x397 DUP6
0x398 SSTORE
0x399 DUP3
0x39a ISZERO
0x39b PUSH2 0x3be
0x39e JUMPI
---
0x390: JUMPDEST 
0x393: V268 = ADD V112 V112
0x394: V269 = 0x1
0x396: V270 = ADD 0x1 V268
0x398: S[V111] = V270
0x39a: V271 = ISZERO V112
0x39b: V272 = 0x3be
0x39e: JUMPI 0x3be V271
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257, V112, V252, V114]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257, V112, V252, V114]

================================

Block 0x39f
[0x39f:0x3a1]
---
Predecessors: [0x390]
Successors: [0x3a2]
---
0x39f SWAP2
0x3a0 DUP3
0x3a1 ADD
---
0x3a1: V273 = ADD V114 V112
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257, V112, V252, V114]
Stack pops: 3
Stack additions: [S0, S1, V273]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257, V114, V252, V273]

================================

Block 0x3a2
[0x3a2:0x3aa]
---
Predecessors: [0x39f, 0x3ab]
Successors: [0x3ab, 0x3bd]
---
0x3a2 JUMPDEST
0x3a3 DUP3
0x3a4 DUP2
0x3a5 GT
0x3a6 ISZERO
0x3a7 PUSH2 0x3bd
0x3aa JUMPI
---
0x3a2: JUMPDEST 
0x3a5: V274 = GT V273 S2
0x3a6: V275 = ISZERO V274
0x3a7: V276 = 0x3bd
0x3aa: JUMPI 0x3bd V275
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257, S2, S1, V273]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257, S2, S1, V273]

================================

Block 0x3ab
[0x3ab:0x3bc]
---
Predecessors: [0x3a2]
Successors: [0x3a2]
---
0x3ab DUP3
0x3ac MLOAD
0x3ad DUP3
0x3ae SSTORE
0x3af SWAP2
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 SWAP2
0x3b4 SWAP1
0x3b5 PUSH1 0x1
0x3b7 ADD
0x3b8 SWAP1
0x3b9 PUSH2 0x3a2
0x3bc JUMP
---
0x3ac: V277 = M[S2]
0x3ae: S[S1] = V277
0x3b0: V278 = 0x20
0x3b2: V279 = ADD 0x20 S2
0x3b5: V280 = 0x1
0x3b7: V281 = ADD 0x1 S1
0x3b9: V282 = 0x3a2
0x3bc: JUMP 0x3a2
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257, S2, S1, V273]
Stack pops: 3
Stack additions: [V279, V281, S0]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257, V279, V281, V273]

================================

Block 0x3bd
[0x3bd:0x3bd]
---
Predecessors: [0x3a2]
Successors: [0x3be]
---
0x3bd JUMPDEST
---
0x3bd: JUMPDEST 
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257, S2, S1, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257, S2, S1, V273]

================================

Block 0x3be
[0x3be:0x3ca]
---
Predecessors: [0x380, 0x390, 0x3bd]
Successors: [0x3e3]
---
0x3be JUMPDEST
0x3bf POP
0x3c0 SWAP1
0x3c1 POP
0x3c2 PUSH2 0x3cb
0x3c5 SWAP2
0x3c6 SWAP1
0x3c7 PUSH2 0x3e3
0x3ca JUMP
---
0x3be: JUMPDEST 
0x3c2: V283 = 0x3cb
0x3c7: V284 = 0x3e3
0x3ca: JUMP 0x3e3
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3cb, S3, S1]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, V257, S1]

================================

Block 0x3cb
[0x3cb:0x3ce]
---
Predecessors: [0x405]
Successors: [0x1b2]
---
0x3cb JUMPDEST
0x3cc POP
0x3cd SWAP1
0x3ce JUMP
---
0x3cb: JUMPDEST 
0x3ce: JUMP 0x1b2
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, V257]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xac, V40, V111]

================================

Block 0x3cf
[0x3cf:0x3e2]
---
Predecessors: [0x269]
Successors: [0x271]
---
0x3cf JUMPDEST
0x3d0 PUSH1 0x20
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 SWAP1
0x3d6 DUP2
0x3d7 ADD
0x3d8 PUSH1 0x40
0x3da MSTORE
0x3db DUP1
0x3dc PUSH1 0x0
0x3de DUP2
0x3df MSTORE
0x3e0 POP
0x3e1 SWAP1
0x3e2 JUMP
---
0x3cf: JUMPDEST 
0x3d0: V285 = 0x20
0x3d2: V286 = 0x40
0x3d4: V287 = M[0x40]
0x3d7: V288 = ADD V287 0x20
0x3d8: V289 = 0x40
0x3da: M[0x40] = V288
0x3dc: V290 = 0x0
0x3df: M[V287] = 0x0
0x3e2: JUMP 0x271
---
Entry stack: [V11, 0xe5, V55, 0x271]
Stack pops: 1
Stack additions: [V287]
Exit stack: [V11, 0xe5, V55, V287]

================================

Block 0x3e3
[0x3e3:0x3e8]
---
Predecessors: [0x3be]
Successors: [0x3e9]
---
0x3e3 JUMPDEST
0x3e4 PUSH2 0x405
0x3e7 SWAP2
0x3e8 SWAP1
---
0x3e3: JUMPDEST 
0x3e4: V291 = 0x405
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, V257, S0]
Stack pops: 2
Stack additions: [0x405, S1, S0]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, 0x405, V257, S0]

================================

Block 0x3e9
[0x3e9:0x3f1]
---
Predecessors: [0x3e3, 0x3f2]
Successors: [0x3f2, 0x401]
---
0x3e9 JUMPDEST
0x3ea DUP1
0x3eb DUP3
0x3ec GT
0x3ed ISZERO
0x3ee PUSH2 0x401
0x3f1 JUMPI
---
0x3e9: JUMPDEST 
0x3ec: V292 = GT V257 S0
0x3ed: V293 = ISZERO V292
0x3ee: V294 = 0x401
0x3f1: JUMPI 0x401 V293
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, 0x405, V257, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, 0x405, V257, S0]

================================

Block 0x3f2
[0x3f2:0x400]
---
Predecessors: [0x3e9]
Successors: [0x3e9]
---
0x3f2 PUSH1 0x0
0x3f4 DUP2
0x3f5 PUSH1 0x0
0x3f7 SWAP1
0x3f8 SSTORE
0x3f9 POP
0x3fa PUSH1 0x1
0x3fc ADD
0x3fd PUSH2 0x3e9
0x400 JUMP
---
0x3f2: V295 = 0x0
0x3f5: V296 = 0x0
0x3f8: S[S0] = 0x0
0x3fa: V297 = 0x1
0x3fc: V298 = ADD 0x1 S0
0x3fd: V299 = 0x3e9
0x400: JUMP 0x3e9
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, 0x405, V257, S0]
Stack pops: 1
Stack additions: [V298]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, 0x405, V257, V298]

================================

Block 0x401
[0x401:0x404]
---
Predecessors: [0x3e9]
Successors: [0x405]
---
0x401 JUMPDEST
0x402 POP
0x403 SWAP1
0x404 JUMP
---
0x401: JUMPDEST 
0x404: JUMP 0x405
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, 0x405, V257, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, V257]

================================

Block 0x405
[0x405:0x407]
---
Predecessors: [0x401]
Successors: [0x3cb]
---
0x405 JUMPDEST
0x406 SWAP1
0x407 JUMP
---
0x405: JUMPDEST 
0x407: JUMP 0x3cb
---
Entry stack: [V11, 0xac, V40, 0x1b2, V111, 0x3cb, V257]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xac, V40, 0x1b2, V111, V257]

================================

Block 0x408
[0x408:0x433]
---
Predecessors: []
Successors: []
---
0x408 STOP
0x409 LOG1
0x40a PUSH6 0x627a7a723058
0x411 SHA3
0x412 MISSING 0x23
0x413 DUP11
0x414 MISSING 0xd8
0x415 MISSING 0xf6
0x416 GASPRICE
0x417 DUP1
0x418 PUSH12 0x484a50bd3b00c03d9c689eb
0x425 PUSH2 0x1707
0x428 PUSH8 0x5f247ff65be349b5
0x431 MISSING 0xc2
0x432 STOP
0x433 MISSING 0x29
---
0x408: STOP 
0x409: LOG S0 S1 S2
0x40a: V300 = 0x627a7a723058
0x411: V301 = SHA3 0x627a7a723058 S3
0x412: MISSING 0x23
0x414: MISSING 0xd8
0x415: MISSING 0xf6
0x416: V302 = GASPRICE
0x418: V303 = 0x484a50bd3b00c03d9c689eb
0x425: V304 = 0x1707
0x428: V305 = 0x5f247ff65be349b5
0x431: MISSING 0xc2
0x432: STOP 
0x433: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V301, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x5f247ff65be349b5, 0x1707, 0x484a50bd3b00c03d9c689eb, V302, V302]
Exit stack: []

================================

Function 0:
Public function signature: 0xb8a76f54
Entry block: 0x51
Exit block: 0xac
Body: 0x51, 0x58, 0x5c, 0xac, 0x160, 0x1b2, 0x211, 0x21a, 0x22c, 0x240, 0x259, 0x34f, 0x380, 0x390, 0x39f, 0x3a2, 0x3ab, 0x3bd, 0x3be, 0x3cb, 0x3e3, 0x3e9, 0x3f2, 0x401, 0x405

Function 1:
Public function signature: 0xcb0ab425
Entry block: 0xae
Exit block: 0x152
Body: 0xae, 0xb5, 0xb9, 0xe5, 0x10a, 0x113, 0x125, 0x139, 0x152, 0x269, 0x271, 0x2fd, 0x305, 0x318, 0x326, 0x33a, 0x343, 0x3cf

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

