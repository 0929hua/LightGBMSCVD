Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xba]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xba
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xba
0xc: JUMPI 0xba V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x3e7]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x167ff46f
0x3c EQ
0x3d PUSH2 0x3e7
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x167ff46f
0x3c: V13 = EQ 0x167ff46f V11
0x3d: V14 = 0x3e7
0x40: JUMPI 0x3e7 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x414]
---
0x41 DUP1
0x42 PUSH4 0x24600fc3
0x47 EQ
0x48 PUSH2 0x414
0x4b JUMPI
---
0x42: V15 = 0x24600fc3
0x47: V16 = EQ 0x24600fc3 V11
0x48: V17 = 0x414
0x4b: JUMPI 0x414 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x429]
---
0x4c DUP1
0x4d PUSH4 0x5af82abf
0x52 EQ
0x53 PUSH2 0x429
0x56 JUMPI
---
0x4d: V18 = 0x5af82abf
0x52: V19 = EQ 0x5af82abf V11
0x53: V20 = 0x429
0x56: JUMPI 0x429 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x47e]
---
0x57 DUP1
0x58 PUSH4 0x71c6d4dc
0x5d EQ
0x5e PUSH2 0x47e
0x61 JUMPI
---
0x58: V21 = 0x71c6d4dc
0x5d: V22 = EQ 0x71c6d4dc V11
0x5e: V23 = 0x47e
0x61: JUMPI 0x47e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x4d3]
---
0x62 DUP1
0x63 PUSH4 0x7a4e4ecf
0x68 EQ
0x69 PUSH2 0x4d3
0x6c JUMPI
---
0x63: V24 = 0x7a4e4ecf
0x68: V25 = EQ 0x7a4e4ecf V11
0x69: V26 = 0x4d3
0x6c: JUMPI 0x4d3 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x515]
---
0x6d DUP1
0x6e PUSH4 0x92e405ac
0x73 EQ
0x74 PUSH2 0x515
0x77 JUMPI
---
0x6e: V27 = 0x92e405ac
0x73: V28 = EQ 0x92e405ac V11
0x74: V29 = 0x515
0x77: JUMPI 0x515 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x54e]
---
0x78 DUP1
0x79 PUSH4 0xa8d5fd65
0x7e EQ
0x7f PUSH2 0x54e
0x82 JUMPI
---
0x79: V30 = 0xa8d5fd65
0x7e: V31 = EQ 0xa8d5fd65 V11
0x7f: V32 = 0x54e
0x82: JUMPI 0x54e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x57d]
---
0x83 DUP1
0x84 PUSH4 0xb8c766b8
0x89 EQ
0x8a PUSH2 0x57d
0x8d JUMPI
---
0x84: V33 = 0xb8c766b8
0x89: V34 = EQ 0xb8c766b8 V11
0x8a: V35 = 0x57d
0x8d: JUMPI 0x57d V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x5aa]
---
0x8e DUP1
0x8f PUSH4 0xbe10862b
0x94 EQ
0x95 PUSH2 0x5aa
0x98 JUMPI
---
0x8f: V36 = 0xbe10862b
0x94: V37 = EQ 0xbe10862b V11
0x95: V38 = 0x5aa
0x98: JUMPI 0x5aa V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x5ff]
---
0x99 DUP1
0x9a PUSH4 0xc89f2ce4
0x9f EQ
0xa0 PUSH2 0x5ff
0xa3 JUMPI
---
0x9a: V39 = 0xc89f2ce4
0x9f: V40 = EQ 0xc89f2ce4 V11
0xa0: V41 = 0x5ff
0xa3: JUMPI 0x5ff V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x628]
---
0xa4 DUP1
0xa5 PUSH4 0xddd41ef6
0xaa EQ
0xab PUSH2 0x628
0xae JUMPI
---
0xa5: V42 = 0xddd41ef6
0xaa: V43 = EQ 0xddd41ef6 V11
0xab: V44 = 0x628
0xae: JUMPI 0x628 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x661]
---
0xaf DUP1
0xb0 PUSH4 0xee55efee
0xb5 EQ
0xb6 PUSH2 0x661
0xb9 JUMPI
---
0xb0: V45 = 0xee55efee
0xb5: V46 = EQ 0xee55efee V11
0xb6: V47 = 0x661
0xb9: JUMPI 0x661 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xd4]
---
Predecessors: [0x0, 0xaf]
Successors: [0xd5, 0xd9]
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd DUP1
0xbe PUSH1 0x5
0xc0 PUSH1 0x0
0xc2 SWAP1
0xc3 SLOAD
0xc4 SWAP1
0xc5 PUSH2 0x100
0xc8 EXP
0xc9 SWAP1
0xca DIV
0xcb PUSH1 0xff
0xcd AND
0xce ISZERO
0xcf ISZERO
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xba: JUMPDEST 
0xbb: V48 = 0x0
0xbe: V49 = 0x5
0xc0: V50 = 0x0
0xc3: V51 = S[0x5]
0xc5: V52 = 0x100
0xc8: V53 = EXP 0x100 0x0
0xca: V54 = DIV V51 0x1
0xcb: V55 = 0xff
0xcd: V56 = AND 0xff V54
0xce: V57 = ISZERO V56
0xcf: V58 = ISZERO V57
0xd0: V59 = ISZERO V58
0xd1: V60 = 0xd9
0xd4: JUMPI 0xd9 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xba]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V61 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xd9
[0xd9:0xea]
---
Predecessors: [0xba]
Successors: [0xeb, 0xef]
---
0xd9 JUMPDEST
0xda PUSH7 0x38d7ea4c68000
0xe2 CALLVALUE
0xe3 LT
0xe4 ISZERO
0xe5 ISZERO
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xd9: JUMPDEST 
0xda: V62 = 0x38d7ea4c68000
0xe2: V63 = CALLVALUE
0xe3: V64 = LT V63 0x38d7ea4c68000
0xe4: V65 = ISZERO V64
0xe5: V66 = ISZERO V65
0xe6: V67 = ISZERO V66
0xe7: V68 = 0xef
0xea: JUMPI 0xef V67
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xd9]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V69 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xef
[0xef:0x1b6]
---
Predecessors: [0xd9]
Successors: [0x1b7, 0x1bb]
---
0xef JUMPDEST
0xf0 PUSH2 0xc350
0xf3 CALLVALUE
0xf4 MUL
0xf5 SWAP2
0xf6 POP
0xf7 PUSH1 0x1
0xf9 PUSH1 0x0
0xfb SWAP1
0xfc SLOAD
0xfd SWAP1
0xfe PUSH2 0x100
0x101 EXP
0x102 SWAP1
0x103 DIV
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH4 0x70a08231
0x135 ADDRESS
0x136 PUSH1 0x0
0x138 PUSH1 0x40
0x13a MLOAD
0x13b PUSH1 0x20
0x13d ADD
0x13e MSTORE
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP3
0x143 PUSH4 0xffffffff
0x148 AND
0x149 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x167 MUL
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x4
0x16c ADD
0x16d DUP1
0x16e DUP3
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a AND
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 SWAP2
0x1a1 POP
0x1a2 POP
0x1a3 PUSH1 0x20
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 DUP4
0x1aa SUB
0x1ab DUP2
0x1ac PUSH1 0x0
0x1ae DUP8
0x1af DUP1
0x1b0 EXTCODESIZE
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0xef: JUMPDEST 
0xf0: V70 = 0xc350
0xf3: V71 = CALLVALUE
0xf4: V72 = MUL V71 0xc350
0xf7: V73 = 0x1
0xf9: V74 = 0x0
0xfc: V75 = S[0x1]
0xfe: V76 = 0x100
0x101: V77 = EXP 0x100 0x0
0x103: V78 = DIV V75 0x1
0x104: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x11a: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x130: V83 = 0x70a08231
0x135: V84 = ADDRESS
0x136: V85 = 0x0
0x138: V86 = 0x40
0x13a: V87 = M[0x40]
0x13b: V88 = 0x20
0x13d: V89 = ADD 0x20 V87
0x13e: M[V89] = 0x0
0x13f: V90 = 0x40
0x141: V91 = M[0x40]
0x143: V92 = 0xffffffff
0x148: V93 = AND 0xffffffff 0x70a08231
0x149: V94 = 0x100000000000000000000000000000000000000000000000000000000
0x167: V95 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x169: M[V91] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x16a: V96 = 0x4
0x16c: V97 = ADD 0x4 V91
0x16f: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x185: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x19c: M[V97] = V101
0x19d: V102 = 0x20
0x19f: V103 = ADD 0x20 V97
0x1a3: V104 = 0x20
0x1a5: V105 = 0x40
0x1a7: V106 = M[0x40]
0x1aa: V107 = SUB V103 V106
0x1ac: V108 = 0x0
0x1b0: V109 = EXTCODESIZE V82
0x1b1: V110 = ISZERO V109
0x1b2: V111 = ISZERO V110
0x1b3: V112 = 0x1bb
0x1b6: JUMPI 0x1bb V111
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V72, S0, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]
Exit stack: [V11, V72, 0x0, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0xef]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V113 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11, V72, 0x0, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, 0x0, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]

================================

Block 0x1bb
[0x1bb:0x1c7]
---
Predecessors: [0xef]
Successors: [0x1c8, 0x1cc]
---
0x1bb JUMPDEST
0x1bc PUSH2 0x2c6
0x1bf GAS
0x1c0 SUB
0x1c1 CALL
0x1c2 ISZERO
0x1c3 ISZERO
0x1c4 PUSH2 0x1cc
0x1c7 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V114 = 0x2c6
0x1bf: V115 = GAS
0x1c0: V116 = SUB V115 0x2c6
0x1c1: V117 = CALL V116 V82 0x0 V106 V107 V106 0x20
0x1c2: V118 = ISZERO V117
0x1c3: V119 = ISZERO V118
0x1c4: V120 = 0x1cc
0x1c7: JUMPI 0x1cc V119
---
Entry stack: [V11, V72, 0x0, V82, 0x70a08231, V103, 0x20, V106, V107, V106, 0x0, V82]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V72, 0x0, V82, 0x70a08231, V103]

================================

Block 0x1c8
[0x1c8:0x1cb]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c8 PUSH1 0x0
0x1ca DUP1
0x1cb REVERT
---
0x1c8: V121 = 0x0
0x1cb: REVERT 0x0 0x0
---
Entry stack: [V11, V72, 0x0, V82, 0x70a08231, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, 0x0, V82, 0x70a08231, V103]

================================

Block 0x1cc
[0x1cc:0x1df]
---
Predecessors: [0x1bb]
Successors: [0x1e0, 0x1e4]
---
0x1cc JUMPDEST
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 MLOAD
0x1d5 SWAP1
0x1d6 POP
0x1d7 DUP3
0x1d8 GT
0x1d9 ISZERO
0x1da ISZERO
0x1db ISZERO
0x1dc PUSH2 0x1e4
0x1df JUMPI
---
0x1cc: JUMPDEST 
0x1d0: V122 = 0x40
0x1d2: V123 = M[0x40]
0x1d4: V124 = M[V123]
0x1d8: V125 = GT V72 V124
0x1d9: V126 = ISZERO V125
0x1da: V127 = ISZERO V126
0x1db: V128 = ISZERO V127
0x1dc: V129 = 0x1e4
0x1df: JUMPI 0x1e4 V128
---
Entry stack: [V11, V72, 0x0, V82, 0x70a08231, V103]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V11, V72, 0x0]

================================

Block 0x1e0
[0x1e0:0x1e3]
---
Predecessors: [0x1cc]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
---
0x1e0: V130 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V11, V72, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, 0x0]

================================

Block 0x1e4
[0x1e4:0x2a3]
---
Predecessors: [0x1cc]
Successors: [0x2a4, 0x2a8]
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x1
0x1e7 PUSH1 0x0
0x1e9 SWAP1
0x1ea SLOAD
0x1eb SWAP1
0x1ec PUSH2 0x100
0x1ef EXP
0x1f0 SWAP1
0x1f1 DIV
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 AND
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e PUSH4 0xa9059cbb
0x223 CALLER
0x224 DUP5
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP4
0x229 PUSH4 0xffffffff
0x22e AND
0x22f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x24d MUL
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x4
0x252 ADD
0x253 DUP1
0x254 DUP4
0x255 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26a AND
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 DUP3
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x20
0x28b ADD
0x28c SWAP3
0x28d POP
0x28e POP
0x28f POP
0x290 PUSH1 0x0
0x292 PUSH1 0x40
0x294 MLOAD
0x295 DUP1
0x296 DUP4
0x297 SUB
0x298 DUP2
0x299 PUSH1 0x0
0x29b DUP8
0x29c DUP1
0x29d EXTCODESIZE
0x29e ISZERO
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V131 = 0x1
0x1e7: V132 = 0x0
0x1ea: V133 = S[0x1]
0x1ec: V134 = 0x100
0x1ef: V135 = EXP 0x100 0x0
0x1f1: V136 = DIV V133 0x1
0x1f2: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x208: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x21e: V141 = 0xa9059cbb
0x223: V142 = CALLER
0x225: V143 = 0x40
0x227: V144 = M[0x40]
0x229: V145 = 0xffffffff
0x22e: V146 = AND 0xffffffff 0xa9059cbb
0x22f: V147 = 0x100000000000000000000000000000000000000000000000000000000
0x24d: V148 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x24f: M[V144] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x250: V149 = 0x4
0x252: V150 = ADD 0x4 V144
0x255: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x26b: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x282: M[V150] = V154
0x283: V155 = 0x20
0x285: V156 = ADD 0x20 V150
0x288: M[V156] = V72
0x289: V157 = 0x20
0x28b: V158 = ADD 0x20 V156
0x290: V159 = 0x0
0x292: V160 = 0x40
0x294: V161 = M[0x40]
0x297: V162 = SUB V158 V161
0x299: V163 = 0x0
0x29d: V164 = EXTCODESIZE V140
0x29e: V165 = ISZERO V164
0x29f: V166 = ISZERO V165
0x2a0: V167 = 0x2a8
0x2a3: JUMPI 0x2a8 V166
---
Entry stack: [V11, V72, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V140, 0xa9059cbb, V158, 0x0, V161, V162, V161, 0x0, V140]
Exit stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158, 0x0, V161, V162, V161, 0x0, V140]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x1e4]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V168 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158, 0x0, V161, V162, V161, 0x0, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158, 0x0, V161, V162, V161, 0x0, V140]

================================

Block 0x2a8
[0x2a8:0x2b4]
---
Predecessors: [0x1e4]
Successors: [0x2b5, 0x2b9]
---
0x2a8 JUMPDEST
0x2a9 PUSH2 0x2c6
0x2ac GAS
0x2ad SUB
0x2ae CALL
0x2af ISZERO
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V169 = 0x2c6
0x2ac: V170 = GAS
0x2ad: V171 = SUB V170 0x2c6
0x2ae: V172 = CALL V171 V140 0x0 V161 V162 V161 0x0
0x2af: V173 = ISZERO V172
0x2b0: V174 = ISZERO V173
0x2b1: V175 = 0x2b9
0x2b4: JUMPI 0x2b9 V174
---
Entry stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158, 0x0, V161, V162, V161, 0x0, V140]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2a8]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V176 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158]

================================

Block 0x2b9
[0x2b9:0x300]
---
Predecessors: [0x2a8]
Successors: [0x301, 0x302]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd CALLVALUE
0x2be PUSH1 0x4
0x2c0 PUSH1 0x0
0x2c2 DUP3
0x2c3 DUP3
0x2c4 SLOAD
0x2c5 ADD
0x2c6 SWAP3
0x2c7 POP
0x2c8 POP
0x2c9 DUP2
0x2ca SWAP1
0x2cb SSTORE
0x2cc POP
0x2cd PUSH1 0x3
0x2cf PUSH1 0x14
0x2d1 SWAP1
0x2d2 SLOAD
0x2d3 SWAP1
0x2d4 PUSH2 0x100
0x2d7 EXP
0x2d8 SWAP1
0x2d9 DIV
0x2da PUSH1 0xff
0x2dc AND
0x2dd PUSH1 0xff
0x2df AND
0x2e0 PUSH1 0x64
0x2e2 ADDRESS
0x2e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f8 AND
0x2f9 BALANCE
0x2fa DUP2
0x2fb ISZERO
0x2fc ISZERO
0x2fd PUSH2 0x302
0x300 JUMPI
---
0x2b9: JUMPDEST 
0x2bd: V177 = CALLVALUE
0x2be: V178 = 0x4
0x2c0: V179 = 0x0
0x2c4: V180 = S[0x4]
0x2c5: V181 = ADD V180 V177
0x2cb: S[0x4] = V181
0x2cd: V182 = 0x3
0x2cf: V183 = 0x14
0x2d2: V184 = S[0x3]
0x2d4: V185 = 0x100
0x2d7: V186 = EXP 0x100 0x14
0x2d9: V187 = DIV V184 0x10000000000000000000000000000000000000000
0x2da: V188 = 0xff
0x2dc: V189 = AND 0xff V187
0x2dd: V190 = 0xff
0x2df: V191 = AND 0xff V189
0x2e0: V192 = 0x64
0x2e2: V193 = ADDRESS
0x2e3: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x2f9: V196 = BALANCE V195
0x2fb: V197 = ISZERO 0x64
0x2fc: V198 = ISZERO 0x0
0x2fd: V199 = 0x302
0x300: JUMPI 0x302 0x1
---
Entry stack: [V11, V72, 0x0, V140, 0xa9059cbb, V158]
Stack pops: 3
Stack additions: [V191, 0x64, V196]
Exit stack: [V11, V72, 0x0, V191, 0x64, V196]

================================

Block 0x301
[0x301:0x301]
---
Predecessors: [0x2b9]
Successors: []
---
0x301 INVALID
---
0x301: INVALID 
---
Entry stack: [V11, V72, 0x0, V191, 0x64, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, 0x0, V191, 0x64, V196]

================================

Block 0x302
[0x302:0x37c]
---
Predecessors: [0x2b9]
Successors: [0x37d, 0x381]
---
0x302 JUMPDEST
0x303 DIV
0x304 MUL
0x305 SWAP1
0x306 POP
0x307 PUSH1 0x2
0x309 PUSH1 0x0
0x30b SWAP1
0x30c SLOAD
0x30d SWAP1
0x30e PUSH2 0x100
0x311 EXP
0x312 SWAP1
0x313 DIV
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 AND
0x32a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33f AND
0x340 PUSH2 0x8fc
0x343 DUP3
0x344 ADDRESS
0x345 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35a AND
0x35b BALANCE
0x35c SUB
0x35d SWAP1
0x35e DUP2
0x35f ISZERO
0x360 MUL
0x361 SWAP1
0x362 PUSH1 0x40
0x364 MLOAD
0x365 PUSH1 0x0
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b DUP4
0x36c SUB
0x36d DUP2
0x36e DUP6
0x36f DUP9
0x370 DUP9
0x371 CALL
0x372 SWAP4
0x373 POP
0x374 POP
0x375 POP
0x376 POP
0x377 ISZERO
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x302: JUMPDEST 
0x303: V200 = DIV V196 0x64
0x304: V201 = MUL V200 V191
0x307: V202 = 0x2
0x309: V203 = 0x0
0x30c: V204 = S[0x2]
0x30e: V205 = 0x100
0x311: V206 = EXP 0x100 0x0
0x313: V207 = DIV V204 0x1
0x314: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x329: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x32a: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x340: V212 = 0x8fc
0x344: V213 = ADDRESS
0x345: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x35b: V216 = BALANCE V215
0x35c: V217 = SUB V216 V201
0x35f: V218 = ISZERO V217
0x360: V219 = MUL V218 0x8fc
0x362: V220 = 0x40
0x364: V221 = M[0x40]
0x365: V222 = 0x0
0x367: V223 = 0x40
0x369: V224 = M[0x40]
0x36c: V225 = SUB V221 V224
0x371: V226 = CALL V219 V211 V217 V224 V225 V224 0x0
0x377: V227 = ISZERO V226
0x378: V228 = ISZERO V227
0x379: V229 = 0x381
0x37c: JUMPI 0x381 V228
---
Entry stack: [V11, V72, 0x0, V191, 0x64, V196]
Stack pops: 4
Stack additions: [V201]
Exit stack: [V11, V72, V201]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x302]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V230 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V11, V72, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, V201]

================================

Block 0x381
[0x381:0x3de]
---
Predecessors: [0x302]
Successors: [0x3df, 0x3e3]
---
0x381 JUMPDEST
0x382 PUSH1 0x3
0x384 PUSH1 0x0
0x386 SWAP1
0x387 SLOAD
0x388 SWAP1
0x389 PUSH2 0x100
0x38c EXP
0x38d SWAP1
0x38e DIV
0x38f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a4 AND
0x3a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ba AND
0x3bb PUSH2 0x8fc
0x3be DUP3
0x3bf SWAP1
0x3c0 DUP2
0x3c1 ISZERO
0x3c2 MUL
0x3c3 SWAP1
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 PUSH1 0x0
0x3c9 PUSH1 0x40
0x3cb MLOAD
0x3cc DUP1
0x3cd DUP4
0x3ce SUB
0x3cf DUP2
0x3d0 DUP6
0x3d1 DUP9
0x3d2 DUP9
0x3d3 CALL
0x3d4 SWAP4
0x3d5 POP
0x3d6 POP
0x3d7 POP
0x3d8 POP
0x3d9 ISZERO
0x3da ISZERO
0x3db PUSH2 0x3e3
0x3de JUMPI
---
0x381: JUMPDEST 
0x382: V231 = 0x3
0x384: V232 = 0x0
0x387: V233 = S[0x3]
0x389: V234 = 0x100
0x38c: V235 = EXP 0x100 0x0
0x38e: V236 = DIV V233 0x1
0x38f: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x3a5: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ba: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x3bb: V241 = 0x8fc
0x3c1: V242 = ISZERO V201
0x3c2: V243 = MUL V242 0x8fc
0x3c4: V244 = 0x40
0x3c6: V245 = M[0x40]
0x3c7: V246 = 0x0
0x3c9: V247 = 0x40
0x3cb: V248 = M[0x40]
0x3ce: V249 = SUB V245 V248
0x3d3: V250 = CALL V243 V240 V201 V248 V249 V248 0x0
0x3d9: V251 = ISZERO V250
0x3da: V252 = ISZERO V251
0x3db: V253 = 0x3e3
0x3de: JUMPI 0x3e3 V252
---
Entry stack: [V11, V72, V201]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, V72, V201]

================================

Block 0x3df
[0x3df:0x3e2]
---
Predecessors: [0x381]
Successors: []
---
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 REVERT
---
0x3df: V254 = 0x0
0x3e2: REVERT 0x0 0x0
---
Entry stack: [V11, V72, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72, V201]

================================

Block 0x3e3
[0x3e3:0x3e6]
---
Predecessors: [0x381]
Successors: []
---
0x3e3 JUMPDEST
0x3e4 POP
0x3e5 POP
0x3e6 STOP
---
0x3e3: JUMPDEST 
0x3e6: STOP 
---
Entry stack: [V11, V72, V201]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e7
[0x3e7:0x3ed]
---
Predecessors: [0xd]
Successors: [0x3ee, 0x3f2]
---
0x3e7 JUMPDEST
0x3e8 CALLVALUE
0x3e9 ISZERO
0x3ea PUSH2 0x3f2
0x3ed JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V255 = CALLVALUE
0x3e9: V256 = ISZERO V255
0x3ea: V257 = 0x3f2
0x3ed: JUMPI 0x3f2 V256
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ee
[0x3ee:0x3f1]
---
Predecessors: [0x3e7]
Successors: []
---
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 REVERT
---
0x3ee: V258 = 0x0
0x3f1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f2
[0x3f2:0x3f9]
---
Predecessors: [0x3e7]
Successors: [0x68e]
---
0x3f2 JUMPDEST
0x3f3 PUSH2 0x3fa
0x3f6 PUSH2 0x68e
0x3f9 JUMP
---
0x3f2: JUMPDEST 
0x3f3: V259 = 0x3fa
0x3f6: V260 = 0x68e
0x3f9: JUMP 0x68e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3fa]
Exit stack: [V11, 0x3fa]

================================

Block 0x3fa
[0x3fa:0x413]
---
Predecessors: [0x707]
Successors: []
---
0x3fa JUMPDEST
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff DUP3
0x400 ISZERO
0x401 ISZERO
0x402 ISZERO
0x403 ISZERO
0x404 DUP2
0x405 MSTORE
0x406 PUSH1 0x20
0x408 ADD
0x409 SWAP2
0x40a POP
0x40b POP
0x40c PUSH1 0x40
0x40e MLOAD
0x40f DUP1
0x410 SWAP2
0x411 SUB
0x412 SWAP1
0x413 RETURN
---
0x3fa: JUMPDEST 
0x3fb: V261 = 0x40
0x3fd: V262 = M[0x40]
0x400: V263 = ISZERO 0x1
0x401: V264 = ISZERO 0x0
0x402: V265 = ISZERO 0x1
0x403: V266 = ISZERO 0x0
0x405: M[V262] = 0x1
0x406: V267 = 0x20
0x408: V268 = ADD 0x20 V262
0x40c: V269 = 0x40
0x40e: V270 = M[0x40]
0x411: V271 = SUB V268 V270
0x413: RETURN V270 V271
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x414
[0x414:0x41a]
---
Predecessors: [0x41]
Successors: [0x41b, 0x41f]
---
0x414 JUMPDEST
0x415 CALLVALUE
0x416 ISZERO
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x414: JUMPDEST 
0x415: V272 = CALLVALUE
0x416: V273 = ISZERO V272
0x417: V274 = 0x41f
0x41a: JUMPI 0x41f V273
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x414]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V275 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x41f
[0x41f:0x426]
---
Predecessors: [0x414]
Successors: [0x729]
---
0x41f JUMPDEST
0x420 PUSH2 0x427
0x423 PUSH2 0x729
0x426 JUMP
---
0x41f: JUMPDEST 
0x420: V276 = 0x427
0x423: V277 = 0x729
0x426: JUMP 0x729
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x427]
Exit stack: [V11, 0x427]

================================

Block 0x427
[0x427:0x428]
---
Predecessors: [0x7fe]
Successors: []
---
0x427 JUMPDEST
0x428 STOP
---
0x427: JUMPDEST 
0x428: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x429
[0x429:0x42f]
---
Predecessors: [0x4c]
Successors: [0x430, 0x434]
---
0x429 JUMPDEST
0x42a CALLVALUE
0x42b ISZERO
0x42c PUSH2 0x434
0x42f JUMPI
---
0x429: JUMPDEST 
0x42a: V278 = CALLVALUE
0x42b: V279 = ISZERO V278
0x42c: V280 = 0x434
0x42f: JUMPI 0x434 V279
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x430
[0x430:0x433]
---
Predecessors: [0x429]
Successors: []
---
0x430 PUSH1 0x0
0x432 DUP1
0x433 REVERT
---
0x430: V281 = 0x0
0x433: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x434
[0x434:0x43b]
---
Predecessors: [0x429]
Successors: [0x800]
---
0x434 JUMPDEST
0x435 PUSH2 0x43c
0x438 PUSH2 0x800
0x43b JUMP
---
0x434: JUMPDEST 
0x435: V282 = 0x43c
0x438: V283 = 0x800
0x43b: JUMP 0x800
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x43c]
Exit stack: [V11, 0x43c]

================================

Block 0x43c
[0x43c:0x47d]
---
Predecessors: [0x800]
Successors: []
---
0x43c JUMPDEST
0x43d PUSH1 0x40
0x43f MLOAD
0x440 DUP1
0x441 DUP3
0x442 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x457 AND
0x458 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46d AND
0x46e DUP2
0x46f MSTORE
0x470 PUSH1 0x20
0x472 ADD
0x473 SWAP2
0x474 POP
0x475 POP
0x476 PUSH1 0x40
0x478 MLOAD
0x479 DUP1
0x47a SWAP2
0x47b SUB
0x47c SWAP1
0x47d RETURN
---
0x43c: JUMPDEST 
0x43d: V284 = 0x40
0x43f: V285 = M[0x40]
0x442: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x457: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x458: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x46d: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x46f: M[V285] = V289
0x470: V290 = 0x20
0x472: V291 = ADD 0x20 V285
0x476: V292 = 0x40
0x478: V293 = M[0x40]
0x47b: V294 = SUB V291 V293
0x47d: RETURN V293 V294
---
Entry stack: [V11, 0x43c, V531]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x43c]

================================

Block 0x47e
[0x47e:0x484]
---
Predecessors: [0x57]
Successors: [0x485, 0x489]
---
0x47e JUMPDEST
0x47f CALLVALUE
0x480 ISZERO
0x481 PUSH2 0x489
0x484 JUMPI
---
0x47e: JUMPDEST 
0x47f: V295 = CALLVALUE
0x480: V296 = ISZERO V295
0x481: V297 = 0x489
0x484: JUMPI 0x489 V296
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x485
[0x485:0x488]
---
Predecessors: [0x47e]
Successors: []
---
0x485 PUSH1 0x0
0x487 DUP1
0x488 REVERT
---
0x485: V298 = 0x0
0x488: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x489
[0x489:0x490]
---
Predecessors: [0x47e]
Successors: [0x826]
---
0x489 JUMPDEST
0x48a PUSH2 0x491
0x48d PUSH2 0x826
0x490 JUMP
---
0x489: JUMPDEST 
0x48a: V299 = 0x491
0x48d: V300 = 0x826
0x490: JUMP 0x826
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x491]
Exit stack: [V11, 0x491]

================================

Block 0x491
[0x491:0x4d2]
---
Predecessors: [0x826]
Successors: []
---
0x491 JUMPDEST
0x492 PUSH1 0x40
0x494 MLOAD
0x495 DUP1
0x496 DUP3
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 AND
0x4c3 DUP2
0x4c4 MSTORE
0x4c5 PUSH1 0x20
0x4c7 ADD
0x4c8 SWAP2
0x4c9 POP
0x4ca POP
0x4cb PUSH1 0x40
0x4cd MLOAD
0x4ce DUP1
0x4cf SWAP2
0x4d0 SUB
0x4d1 SWAP1
0x4d2 RETURN
---
0x491: JUMPDEST 
0x492: V301 = 0x40
0x494: V302 = M[0x40]
0x497: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x4ad: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x4c4: M[V302] = V306
0x4c5: V307 = 0x20
0x4c7: V308 = ADD 0x20 V302
0x4cb: V309 = 0x40
0x4cd: V310 = M[0x40]
0x4d0: V311 = SUB V308 V310
0x4d2: RETURN V310 V311
---
Entry stack: [V11, 0x491, V538]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x491]

================================

Block 0x4d3
[0x4d3:0x4d9]
---
Predecessors: [0x62]
Successors: [0x4da, 0x4de]
---
0x4d3 JUMPDEST
0x4d4 CALLVALUE
0x4d5 ISZERO
0x4d6 PUSH2 0x4de
0x4d9 JUMPI
---
0x4d3: JUMPDEST 
0x4d4: V312 = CALLVALUE
0x4d5: V313 = ISZERO V312
0x4d6: V314 = 0x4de
0x4d9: JUMPI 0x4de V313
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4da
[0x4da:0x4dd]
---
Predecessors: [0x4d3]
Successors: []
---
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd REVERT
---
0x4da: V315 = 0x0
0x4dd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4de
[0x4de:0x512]
---
Predecessors: [0x4d3]
Successors: [0x84b]
---
0x4de JUMPDEST
0x4df PUSH2 0x513
0x4e2 PUSH1 0x4
0x4e4 DUP1
0x4e5 DUP1
0x4e6 CALLDATALOAD
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd SWAP1
0x4fe PUSH1 0x20
0x500 ADD
0x501 SWAP1
0x502 SWAP2
0x503 SWAP1
0x504 DUP1
0x505 CALLDATALOAD
0x506 SWAP1
0x507 PUSH1 0x20
0x509 ADD
0x50a SWAP1
0x50b SWAP2
0x50c SWAP1
0x50d POP
0x50e POP
0x50f PUSH2 0x84b
0x512 JUMP
---
0x4de: JUMPDEST 
0x4df: V316 = 0x513
0x4e2: V317 = 0x4
0x4e6: V318 = CALLDATALOAD 0x4
0x4e7: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x4fe: V321 = 0x20
0x500: V322 = ADD 0x20 0x4
0x505: V323 = CALLDATALOAD 0x24
0x507: V324 = 0x20
0x509: V325 = ADD 0x20 0x24
0x50f: V326 = 0x84b
0x512: JUMP 0x84b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x513, V320, V323]
Exit stack: [V11, 0x513, V320, V323]

================================

Block 0x513
[0x513:0x514]
---
Predecessors: [0x97c]
Successors: []
---
0x513 JUMPDEST
0x514 STOP
---
0x513: JUMPDEST 
0x514: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x515
[0x515:0x51b]
---
Predecessors: [0x6d]
Successors: [0x51c, 0x520]
---
0x515 JUMPDEST
0x516 CALLVALUE
0x517 ISZERO
0x518 PUSH2 0x520
0x51b JUMPI
---
0x515: JUMPDEST 
0x516: V327 = CALLVALUE
0x517: V328 = ISZERO V327
0x518: V329 = 0x520
0x51b: JUMPI 0x520 V328
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51c
[0x51c:0x51f]
---
Predecessors: [0x515]
Successors: []
---
0x51c PUSH1 0x0
0x51e DUP1
0x51f REVERT
---
0x51c: V330 = 0x0
0x51f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x520
[0x520:0x54b]
---
Predecessors: [0x515]
Successors: [0x983]
---
0x520 JUMPDEST
0x521 PUSH2 0x54c
0x524 PUSH1 0x4
0x526 DUP1
0x527 DUP1
0x528 CALLDATALOAD
0x529 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53e AND
0x53f SWAP1
0x540 PUSH1 0x20
0x542 ADD
0x543 SWAP1
0x544 SWAP2
0x545 SWAP1
0x546 POP
0x547 POP
0x548 PUSH2 0x983
0x54b JUMP
---
0x520: JUMPDEST 
0x521: V331 = 0x54c
0x524: V332 = 0x4
0x528: V333 = CALLDATALOAD 0x4
0x529: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x540: V336 = 0x20
0x542: V337 = ADD 0x20 0x4
0x548: V338 = 0x983
0x54b: JUMP 0x983
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x54c, V335]
Exit stack: [V11, 0x54c, V335]

================================

Block 0x54c
[0x54c:0x54d]
---
Predecessors: [0x9df]
Successors: []
---
0x54c JUMPDEST
0x54d STOP
---
0x54c: JUMPDEST 
0x54d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x54e
[0x54e:0x554]
---
Predecessors: [0x78]
Successors: [0x555, 0x559]
---
0x54e JUMPDEST
0x54f CALLVALUE
0x550 ISZERO
0x551 PUSH2 0x559
0x554 JUMPI
---
0x54e: JUMPDEST 
0x54f: V339 = CALLVALUE
0x550: V340 = ISZERO V339
0x551: V341 = 0x559
0x554: JUMPI 0x559 V340
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x555
[0x555:0x558]
---
Predecessors: [0x54e]
Successors: []
---
0x555 PUSH1 0x0
0x557 DUP1
0x558 REVERT
---
0x555: V342 = 0x0
0x558: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x559
[0x559:0x560]
---
Predecessors: [0x54e]
Successors: [0xa23]
---
0x559 JUMPDEST
0x55a PUSH2 0x561
0x55d PUSH2 0xa23
0x560 JUMP
---
0x559: JUMPDEST 
0x55a: V343 = 0x561
0x55d: V344 = 0xa23
0x560: JUMP 0xa23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x561]
Exit stack: [V11, 0x561]

================================

Block 0x561
[0x561:0x57c]
---
Predecessors: [0xa23]
Successors: []
---
0x561 JUMPDEST
0x562 PUSH1 0x40
0x564 MLOAD
0x565 DUP1
0x566 DUP3
0x567 PUSH1 0xff
0x569 AND
0x56a PUSH1 0xff
0x56c AND
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x20
0x571 ADD
0x572 SWAP2
0x573 POP
0x574 POP
0x575 PUSH1 0x40
0x577 MLOAD
0x578 DUP1
0x579 SWAP2
0x57a SUB
0x57b SWAP1
0x57c RETURN
---
0x561: JUMPDEST 
0x562: V345 = 0x40
0x564: V346 = M[0x40]
0x567: V347 = 0xff
0x569: V348 = AND 0xff V640
0x56a: V349 = 0xff
0x56c: V350 = AND 0xff V348
0x56e: M[V346] = V350
0x56f: V351 = 0x20
0x571: V352 = ADD 0x20 V346
0x575: V353 = 0x40
0x577: V354 = M[0x40]
0x57a: V355 = SUB V352 V354
0x57c: RETURN V354 V355
---
Entry stack: [V11, 0x561, V640]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x561]

================================

Block 0x57d
[0x57d:0x583]
---
Predecessors: [0x83]
Successors: [0x584, 0x588]
---
0x57d JUMPDEST
0x57e CALLVALUE
0x57f ISZERO
0x580 PUSH2 0x588
0x583 JUMPI
---
0x57d: JUMPDEST 
0x57e: V356 = CALLVALUE
0x57f: V357 = ISZERO V356
0x580: V358 = 0x588
0x583: JUMPI 0x588 V357
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x584
[0x584:0x587]
---
Predecessors: [0x57d]
Successors: []
---
0x584 PUSH1 0x0
0x586 DUP1
0x587 REVERT
---
0x584: V359 = 0x0
0x587: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x588
[0x588:0x58f]
---
Predecessors: [0x57d]
Successors: [0xa36]
---
0x588 JUMPDEST
0x589 PUSH2 0x590
0x58c PUSH2 0xa36
0x58f JUMP
---
0x588: JUMPDEST 
0x589: V360 = 0x590
0x58c: V361 = 0xa36
0x58f: JUMP 0xa36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x590]
Exit stack: [V11, 0x590]

================================

Block 0x590
[0x590:0x5a9]
---
Predecessors: [0xa36]
Successors: []
---
0x590 JUMPDEST
0x591 PUSH1 0x40
0x593 MLOAD
0x594 DUP1
0x595 DUP3
0x596 ISZERO
0x597 ISZERO
0x598 ISZERO
0x599 ISZERO
0x59a DUP2
0x59b MSTORE
0x59c PUSH1 0x20
0x59e ADD
0x59f SWAP2
0x5a0 POP
0x5a1 POP
0x5a2 PUSH1 0x40
0x5a4 MLOAD
0x5a5 DUP1
0x5a6 SWAP2
0x5a7 SUB
0x5a8 SWAP1
0x5a9 RETURN
---
0x590: JUMPDEST 
0x591: V362 = 0x40
0x593: V363 = M[0x40]
0x596: V364 = ISZERO V648
0x597: V365 = ISZERO V364
0x598: V366 = ISZERO V365
0x599: V367 = ISZERO V366
0x59b: M[V363] = V367
0x59c: V368 = 0x20
0x59e: V369 = ADD 0x20 V363
0x5a2: V370 = 0x40
0x5a4: V371 = M[0x40]
0x5a7: V372 = SUB V369 V371
0x5a9: RETURN V371 V372
---
Entry stack: [V11, 0x590, V648]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x590]

================================

Block 0x5aa
[0x5aa:0x5b0]
---
Predecessors: [0x8e]
Successors: [0x5b1, 0x5b5]
---
0x5aa JUMPDEST
0x5ab CALLVALUE
0x5ac ISZERO
0x5ad PUSH2 0x5b5
0x5b0 JUMPI
---
0x5aa: JUMPDEST 
0x5ab: V373 = CALLVALUE
0x5ac: V374 = ISZERO V373
0x5ad: V375 = 0x5b5
0x5b0: JUMPI 0x5b5 V374
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b1
[0x5b1:0x5b4]
---
Predecessors: [0x5aa]
Successors: []
---
0x5b1 PUSH1 0x0
0x5b3 DUP1
0x5b4 REVERT
---
0x5b1: V376 = 0x0
0x5b4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b5
[0x5b5:0x5bc]
---
Predecessors: [0x5aa]
Successors: [0xa49]
---
0x5b5 JUMPDEST
0x5b6 PUSH2 0x5bd
0x5b9 PUSH2 0xa49
0x5bc JUMP
---
0x5b5: JUMPDEST 
0x5b6: V377 = 0x5bd
0x5b9: V378 = 0xa49
0x5bc: JUMP 0xa49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5bd]
Exit stack: [V11, 0x5bd]

================================

Block 0x5bd
[0x5bd:0x5fe]
---
Predecessors: [0xa49]
Successors: []
---
0x5bd JUMPDEST
0x5be PUSH1 0x40
0x5c0 MLOAD
0x5c1 DUP1
0x5c2 DUP3
0x5c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d8 AND
0x5d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ee AND
0x5ef DUP2
0x5f0 MSTORE
0x5f1 PUSH1 0x20
0x5f3 ADD
0x5f4 SWAP2
0x5f5 POP
0x5f6 POP
0x5f7 PUSH1 0x40
0x5f9 MLOAD
0x5fa DUP1
0x5fb SWAP2
0x5fc SUB
0x5fd SWAP1
0x5fe RETURN
---
0x5bd: JUMPDEST 
0x5be: V379 = 0x40
0x5c0: V380 = M[0x40]
0x5c3: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0x5d9: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x5f0: M[V380] = V384
0x5f1: V385 = 0x20
0x5f3: V386 = ADD 0x20 V380
0x5f7: V387 = 0x40
0x5f9: V388 = M[0x40]
0x5fc: V389 = SUB V386 V388
0x5fe: RETURN V388 V389
---
Entry stack: [V11, 0x5bd, V656]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x5bd]

================================

Block 0x5ff
[0x5ff:0x605]
---
Predecessors: [0x99]
Successors: [0x606, 0x60a]
---
0x5ff JUMPDEST
0x600 CALLVALUE
0x601 ISZERO
0x602 PUSH2 0x60a
0x605 JUMPI
---
0x5ff: JUMPDEST 
0x600: V390 = CALLVALUE
0x601: V391 = ISZERO V390
0x602: V392 = 0x60a
0x605: JUMPI 0x60a V391
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x606
[0x606:0x609]
---
Predecessors: [0x5ff]
Successors: []
---
0x606 PUSH1 0x0
0x608 DUP1
0x609 REVERT
---
0x606: V393 = 0x0
0x609: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x60a
[0x60a:0x611]
---
Predecessors: [0x5ff]
Successors: [0xa6f]
---
0x60a JUMPDEST
0x60b PUSH2 0x612
0x60e PUSH2 0xa6f
0x611 JUMP
---
0x60a: JUMPDEST 
0x60b: V394 = 0x612
0x60e: V395 = 0xa6f
0x611: JUMP 0xa6f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x612]
Exit stack: [V11, 0x612]

================================

Block 0x612
[0x612:0x627]
---
Predecessors: [0xa6f]
Successors: []
---
0x612 JUMPDEST
0x613 PUSH1 0x40
0x615 MLOAD
0x616 DUP1
0x617 DUP3
0x618 DUP2
0x619 MSTORE
0x61a PUSH1 0x20
0x61c ADD
0x61d SWAP2
0x61e POP
0x61f POP
0x620 PUSH1 0x40
0x622 MLOAD
0x623 DUP1
0x624 SWAP2
0x625 SUB
0x626 SWAP1
0x627 RETURN
---
0x612: JUMPDEST 
0x613: V396 = 0x40
0x615: V397 = M[0x40]
0x619: M[V397] = V658
0x61a: V398 = 0x20
0x61c: V399 = ADD 0x20 V397
0x620: V400 = 0x40
0x622: V401 = M[0x40]
0x625: V402 = SUB V399 V401
0x627: RETURN V401 V402
---
Entry stack: [V11, 0x612, V658]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x612]

================================

Block 0x628
[0x628:0x62e]
---
Predecessors: [0xa4]
Successors: [0x62f, 0x633]
---
0x628 JUMPDEST
0x629 CALLVALUE
0x62a ISZERO
0x62b PUSH2 0x633
0x62e JUMPI
---
0x628: JUMPDEST 
0x629: V403 = CALLVALUE
0x62a: V404 = ISZERO V403
0x62b: V405 = 0x633
0x62e: JUMPI 0x633 V404
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62f
[0x62f:0x632]
---
Predecessors: [0x628]
Successors: []
---
0x62f PUSH1 0x0
0x631 DUP1
0x632 REVERT
---
0x62f: V406 = 0x0
0x632: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x633
[0x633:0x65e]
---
Predecessors: [0x628]
Successors: [0xa75]
---
0x633 JUMPDEST
0x634 PUSH2 0x65f
0x637 PUSH1 0x4
0x639 DUP1
0x63a DUP1
0x63b CALLDATALOAD
0x63c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x651 AND
0x652 SWAP1
0x653 PUSH1 0x20
0x655 ADD
0x656 SWAP1
0x657 SWAP2
0x658 SWAP1
0x659 POP
0x65a POP
0x65b PUSH2 0xa75
0x65e JUMP
---
0x633: JUMPDEST 
0x634: V407 = 0x65f
0x637: V408 = 0x4
0x63b: V409 = CALLDATALOAD 0x4
0x63c: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x651: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x653: V412 = 0x20
0x655: V413 = ADD 0x20 0x4
0x65b: V414 = 0xa75
0x65e: JUMP 0xa75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x65f, V411]
Exit stack: [V11, 0x65f, V411]

================================

Block 0x65f
[0x65f:0x660]
---
Predecessors: [0xad1]
Successors: []
---
0x65f JUMPDEST
0x660 STOP
---
0x65f: JUMPDEST 
0x660: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x661
[0x661:0x667]
---
Predecessors: [0xaf]
Successors: [0x668, 0x66c]
---
0x661 JUMPDEST
0x662 CALLVALUE
0x663 ISZERO
0x664 PUSH2 0x66c
0x667 JUMPI
---
0x661: JUMPDEST 
0x662: V415 = CALLVALUE
0x663: V416 = ISZERO V415
0x664: V417 = 0x66c
0x667: JUMPI 0x66c V416
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x668
[0x668:0x66b]
---
Predecessors: [0x661]
Successors: []
---
0x668 PUSH1 0x0
0x66a DUP1
0x66b REVERT
---
0x668: V418 = 0x0
0x66b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66c
[0x66c:0x673]
---
Predecessors: [0x661]
Successors: [0xb15]
---
0x66c JUMPDEST
0x66d PUSH2 0x674
0x670 PUSH2 0xb15
0x673 JUMP
---
0x66c: JUMPDEST 
0x66d: V419 = 0x674
0x670: V420 = 0xb15
0x673: JUMP 0xb15
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x674]
Exit stack: [V11, 0x674]

================================

Block 0x674
[0x674:0x68d]
---
Predecessors: [0xb8f]
Successors: []
---
0x674 JUMPDEST
0x675 PUSH1 0x40
0x677 MLOAD
0x678 DUP1
0x679 DUP3
0x67a ISZERO
0x67b ISZERO
0x67c ISZERO
0x67d ISZERO
0x67e DUP2
0x67f MSTORE
0x680 PUSH1 0x20
0x682 ADD
0x683 SWAP2
0x684 POP
0x685 POP
0x686 PUSH1 0x40
0x688 MLOAD
0x689 DUP1
0x68a SWAP2
0x68b SUB
0x68c SWAP1
0x68d RETURN
---
0x674: JUMPDEST 
0x675: V421 = 0x40
0x677: V422 = M[0x40]
0x67a: V423 = ISZERO 0x1
0x67b: V424 = ISZERO 0x0
0x67c: V425 = ISZERO 0x1
0x67d: V426 = ISZERO 0x0
0x67f: M[V422] = 0x1
0x680: V427 = 0x20
0x682: V428 = ADD 0x20 V422
0x686: V429 = 0x40
0x688: V430 = M[0x40]
0x68b: V431 = SUB V428 V430
0x68d: RETURN V430 V431
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x68e
[0x68e:0x6e7]
---
Predecessors: [0x3f2]
Successors: [0x6e8, 0x6ec]
---
0x68e JUMPDEST
0x68f PUSH1 0x0
0x691 PUSH1 0x2
0x693 PUSH1 0x0
0x695 SWAP1
0x696 SLOAD
0x697 SWAP1
0x698 PUSH2 0x100
0x69b EXP
0x69c SWAP1
0x69d DIV
0x69e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b3 AND
0x6b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c9 AND
0x6ca CALLER
0x6cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e0 AND
0x6e1 EQ
0x6e2 ISZERO
0x6e3 ISZERO
0x6e4 PUSH2 0x6ec
0x6e7 JUMPI
---
0x68e: JUMPDEST 
0x68f: V432 = 0x0
0x691: V433 = 0x2
0x693: V434 = 0x0
0x696: V435 = S[0x2]
0x698: V436 = 0x100
0x69b: V437 = EXP 0x100 0x0
0x69d: V438 = DIV V435 0x1
0x69e: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x6b4: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x6ca: V443 = CALLER
0x6cb: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x6e1: V446 = EQ V445 V442
0x6e2: V447 = ISZERO V446
0x6e3: V448 = ISZERO V447
0x6e4: V449 = 0x6ec
0x6e7: JUMPI 0x6ec V448
---
Entry stack: [V11, 0x3fa]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x3fa, 0x0]

================================

Block 0x6e8
[0x6e8:0x6eb]
---
Predecessors: [0x68e]
Successors: []
---
0x6e8 PUSH1 0x0
0x6ea DUP1
0x6eb REVERT
---
0x6e8: V450 = 0x0
0x6eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3fa, 0x0]

================================

Block 0x6ec
[0x6ec:0x702]
---
Predecessors: [0x68e]
Successors: [0x703, 0x707]
---
0x6ec JUMPDEST
0x6ed PUSH1 0x5
0x6ef PUSH1 0x0
0x6f1 SWAP1
0x6f2 SLOAD
0x6f3 SWAP1
0x6f4 PUSH2 0x100
0x6f7 EXP
0x6f8 SWAP1
0x6f9 DIV
0x6fa PUSH1 0xff
0x6fc AND
0x6fd ISZERO
0x6fe ISZERO
0x6ff PUSH2 0x707
0x702 JUMPI
---
0x6ec: JUMPDEST 
0x6ed: V451 = 0x5
0x6ef: V452 = 0x0
0x6f2: V453 = S[0x5]
0x6f4: V454 = 0x100
0x6f7: V455 = EXP 0x100 0x0
0x6f9: V456 = DIV V453 0x1
0x6fa: V457 = 0xff
0x6fc: V458 = AND 0xff V456
0x6fd: V459 = ISZERO V458
0x6fe: V460 = ISZERO V459
0x6ff: V461 = 0x707
0x702: JUMPI 0x707 V460
---
Entry stack: [V11, 0x3fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3fa, 0x0]

================================

Block 0x703
[0x703:0x706]
---
Predecessors: [0x6ec]
Successors: []
---
0x703 PUSH1 0x0
0x705 DUP1
0x706 REVERT
---
0x703: V462 = 0x0
0x706: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3fa, 0x0]

================================

Block 0x707
[0x707:0x728]
---
Predecessors: [0x6ec]
Successors: [0x3fa]
---
0x707 JUMPDEST
0x708 PUSH1 0x0
0x70a PUSH1 0x5
0x70c PUSH1 0x0
0x70e PUSH2 0x100
0x711 EXP
0x712 DUP2
0x713 SLOAD
0x714 DUP2
0x715 PUSH1 0xff
0x717 MUL
0x718 NOT
0x719 AND
0x71a SWAP1
0x71b DUP4
0x71c ISZERO
0x71d ISZERO
0x71e MUL
0x71f OR
0x720 SWAP1
0x721 SSTORE
0x722 POP
0x723 PUSH1 0x1
0x725 SWAP1
0x726 POP
0x727 SWAP1
0x728 JUMP
---
0x707: JUMPDEST 
0x708: V463 = 0x0
0x70a: V464 = 0x5
0x70c: V465 = 0x0
0x70e: V466 = 0x100
0x711: V467 = EXP 0x100 0x0
0x713: V468 = S[0x5]
0x715: V469 = 0xff
0x717: V470 = MUL 0xff 0x1
0x718: V471 = NOT 0xff
0x719: V472 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V468
0x71c: V473 = ISZERO 0x0
0x71d: V474 = ISZERO 0x1
0x71e: V475 = MUL 0x0 0x1
0x71f: V476 = OR 0x0 V472
0x721: S[0x5] = V476
0x723: V477 = 0x1
0x728: JUMP 0x3fa
---
Entry stack: [V11, 0x3fa, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x729
[0x729:0x780]
---
Predecessors: [0x41f]
Successors: [0x781, 0x785]
---
0x729 JUMPDEST
0x72a PUSH1 0x2
0x72c PUSH1 0x0
0x72e SWAP1
0x72f SLOAD
0x730 SWAP1
0x731 PUSH2 0x100
0x734 EXP
0x735 SWAP1
0x736 DIV
0x737 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74c AND
0x74d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x762 AND
0x763 CALLER
0x764 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x779 AND
0x77a EQ
0x77b ISZERO
0x77c ISZERO
0x77d PUSH2 0x785
0x780 JUMPI
---
0x729: JUMPDEST 
0x72a: V478 = 0x2
0x72c: V479 = 0x0
0x72f: V480 = S[0x2]
0x731: V481 = 0x100
0x734: V482 = EXP 0x100 0x0
0x736: V483 = DIV V480 0x1
0x737: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x74c: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x74d: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x762: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x763: V488 = CALLER
0x764: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x779: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x77a: V491 = EQ V490 V487
0x77b: V492 = ISZERO V491
0x77c: V493 = ISZERO V492
0x77d: V494 = 0x785
0x780: JUMPI 0x785 V493
---
Entry stack: [V11, 0x427]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x427]

================================

Block 0x781
[0x781:0x784]
---
Predecessors: [0x729]
Successors: []
---
0x781 PUSH1 0x0
0x783 DUP1
0x784 REVERT
---
0x781: V495 = 0x0
0x784: REVERT 0x0 0x0
---
Entry stack: [V11, 0x427]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x427]

================================

Block 0x785
[0x785:0x7f9]
---
Predecessors: [0x729]
Successors: [0x7fa, 0x7fe]
---
0x785 JUMPDEST
0x786 PUSH1 0x2
0x788 PUSH1 0x0
0x78a SWAP1
0x78b SLOAD
0x78c SWAP1
0x78d PUSH2 0x100
0x790 EXP
0x791 SWAP1
0x792 DIV
0x793 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a8 AND
0x7a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7be AND
0x7bf PUSH2 0x8fc
0x7c2 ADDRESS
0x7c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d8 AND
0x7d9 BALANCE
0x7da SWAP1
0x7db DUP2
0x7dc ISZERO
0x7dd MUL
0x7de SWAP1
0x7df PUSH1 0x40
0x7e1 MLOAD
0x7e2 PUSH1 0x0
0x7e4 PUSH1 0x40
0x7e6 MLOAD
0x7e7 DUP1
0x7e8 DUP4
0x7e9 SUB
0x7ea DUP2
0x7eb DUP6
0x7ec DUP9
0x7ed DUP9
0x7ee CALL
0x7ef SWAP4
0x7f0 POP
0x7f1 POP
0x7f2 POP
0x7f3 POP
0x7f4 ISZERO
0x7f5 ISZERO
0x7f6 PUSH2 0x7fe
0x7f9 JUMPI
---
0x785: JUMPDEST 
0x786: V496 = 0x2
0x788: V497 = 0x0
0x78b: V498 = S[0x2]
0x78d: V499 = 0x100
0x790: V500 = EXP 0x100 0x0
0x792: V501 = DIV V498 0x1
0x793: V502 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a8: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x7a9: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x7be: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x7bf: V506 = 0x8fc
0x7c2: V507 = ADDRESS
0x7c3: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d8: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x7d9: V510 = BALANCE V509
0x7dc: V511 = ISZERO V510
0x7dd: V512 = MUL V511 0x8fc
0x7df: V513 = 0x40
0x7e1: V514 = M[0x40]
0x7e2: V515 = 0x0
0x7e4: V516 = 0x40
0x7e6: V517 = M[0x40]
0x7e9: V518 = SUB V514 V517
0x7ee: V519 = CALL V512 V505 V510 V517 V518 V517 0x0
0x7f4: V520 = ISZERO V519
0x7f5: V521 = ISZERO V520
0x7f6: V522 = 0x7fe
0x7f9: JUMPI 0x7fe V521
---
Entry stack: [V11, 0x427]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x427]

================================

Block 0x7fa
[0x7fa:0x7fd]
---
Predecessors: [0x785]
Successors: []
---
0x7fa PUSH1 0x0
0x7fc DUP1
0x7fd REVERT
---
0x7fa: V523 = 0x0
0x7fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x427]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x427]

================================

Block 0x7fe
[0x7fe:0x7ff]
---
Predecessors: [0x785]
Successors: [0x427]
---
0x7fe JUMPDEST
0x7ff JUMP
---
0x7fe: JUMPDEST 
0x7ff: JUMP 0x427
---
Entry stack: [V11, 0x427]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x800
[0x800:0x825]
---
Predecessors: [0x434]
Successors: [0x43c]
---
0x800 JUMPDEST
0x801 PUSH1 0x2
0x803 PUSH1 0x0
0x805 SWAP1
0x806 SLOAD
0x807 SWAP1
0x808 PUSH2 0x100
0x80b EXP
0x80c SWAP1
0x80d DIV
0x80e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x823 AND
0x824 DUP2
0x825 JUMP
---
0x800: JUMPDEST 
0x801: V524 = 0x2
0x803: V525 = 0x0
0x806: V526 = S[0x2]
0x808: V527 = 0x100
0x80b: V528 = EXP 0x100 0x0
0x80d: V529 = DIV V526 0x1
0x80e: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x823: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x825: JUMP 0x43c
---
Entry stack: [V11, 0x43c]
Stack pops: 1
Stack additions: [S0, V531]
Exit stack: [V11, 0x43c, V531]

================================

Block 0x826
[0x826:0x84a]
---
Predecessors: [0x489]
Successors: [0x491]
---
0x826 JUMPDEST
0x827 PUSH1 0x0
0x829 DUP1
0x82a SWAP1
0x82b SLOAD
0x82c SWAP1
0x82d PUSH2 0x100
0x830 EXP
0x831 SWAP1
0x832 DIV
0x833 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x848 AND
0x849 DUP2
0x84a JUMP
---
0x826: JUMPDEST 
0x827: V532 = 0x0
0x82b: V533 = S[0x0]
0x82d: V534 = 0x100
0x830: V535 = EXP 0x100 0x0
0x832: V536 = DIV V533 0x1
0x833: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x848: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x84a: JUMP 0x491
---
Entry stack: [V11, 0x491]
Stack pops: 1
Stack additions: [S0, V538]
Exit stack: [V11, 0x491, V538]

================================

Block 0x84b
[0x84b:0x8a2]
---
Predecessors: [0x4de]
Successors: [0x8a3, 0x8a7]
---
0x84b JUMPDEST
0x84c PUSH1 0x2
0x84e PUSH1 0x0
0x850 SWAP1
0x851 SLOAD
0x852 SWAP1
0x853 PUSH2 0x100
0x856 EXP
0x857 SWAP1
0x858 DIV
0x859 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86e AND
0x86f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x884 AND
0x885 CALLER
0x886 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89b AND
0x89c EQ
0x89d ISZERO
0x89e ISZERO
0x89f PUSH2 0x8a7
0x8a2 JUMPI
---
0x84b: JUMPDEST 
0x84c: V539 = 0x2
0x84e: V540 = 0x0
0x851: V541 = S[0x2]
0x853: V542 = 0x100
0x856: V543 = EXP 0x100 0x0
0x858: V544 = DIV V541 0x1
0x859: V545 = 0xffffffffffffffffffffffffffffffffffffffff
0x86e: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x86f: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x884: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x885: V549 = CALLER
0x886: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x89b: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x89c: V552 = EQ V551 V548
0x89d: V553 = ISZERO V552
0x89e: V554 = ISZERO V553
0x89f: V555 = 0x8a7
0x8a2: JUMPI 0x8a7 V554
---
Entry stack: [V11, 0x513, V320, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x513, V320, V323]

================================

Block 0x8a3
[0x8a3:0x8a6]
---
Predecessors: [0x84b]
Successors: []
---
0x8a3 PUSH1 0x0
0x8a5 DUP1
0x8a6 REVERT
---
0x8a3: V556 = 0x0
0x8a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x513, V320, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x513, V320, V323]

================================

Block 0x8a7
[0x8a7:0x966]
---
Predecessors: [0x84b]
Successors: [0x967, 0x96b]
---
0x8a7 JUMPDEST
0x8a8 PUSH1 0x1
0x8aa PUSH1 0x0
0x8ac SWAP1
0x8ad SLOAD
0x8ae SWAP1
0x8af PUSH2 0x100
0x8b2 EXP
0x8b3 SWAP1
0x8b4 DIV
0x8b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ca AND
0x8cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e0 AND
0x8e1 PUSH4 0xa9059cbb
0x8e6 DUP4
0x8e7 DUP4
0x8e8 PUSH1 0x40
0x8ea MLOAD
0x8eb DUP4
0x8ec PUSH4 0xffffffff
0x8f1 AND
0x8f2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x910 MUL
0x911 DUP2
0x912 MSTORE
0x913 PUSH1 0x4
0x915 ADD
0x916 DUP1
0x917 DUP4
0x918 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92d AND
0x92e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x943 AND
0x944 DUP2
0x945 MSTORE
0x946 PUSH1 0x20
0x948 ADD
0x949 DUP3
0x94a DUP2
0x94b MSTORE
0x94c PUSH1 0x20
0x94e ADD
0x94f SWAP3
0x950 POP
0x951 POP
0x952 POP
0x953 PUSH1 0x0
0x955 PUSH1 0x40
0x957 MLOAD
0x958 DUP1
0x959 DUP4
0x95a SUB
0x95b DUP2
0x95c PUSH1 0x0
0x95e DUP8
0x95f DUP1
0x960 EXTCODESIZE
0x961 ISZERO
0x962 ISZERO
0x963 PUSH2 0x96b
0x966 JUMPI
---
0x8a7: JUMPDEST 
0x8a8: V557 = 0x1
0x8aa: V558 = 0x0
0x8ad: V559 = S[0x1]
0x8af: V560 = 0x100
0x8b2: V561 = EXP 0x100 0x0
0x8b4: V562 = DIV V559 0x1
0x8b5: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ca: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x8cb: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x8e1: V567 = 0xa9059cbb
0x8e8: V568 = 0x40
0x8ea: V569 = M[0x40]
0x8ec: V570 = 0xffffffff
0x8f1: V571 = AND 0xffffffff 0xa9059cbb
0x8f2: V572 = 0x100000000000000000000000000000000000000000000000000000000
0x910: V573 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x912: M[V569] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x913: V574 = 0x4
0x915: V575 = ADD 0x4 V569
0x918: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0x92d: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x92e: V578 = 0xffffffffffffffffffffffffffffffffffffffff
0x943: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x945: M[V575] = V579
0x946: V580 = 0x20
0x948: V581 = ADD 0x20 V575
0x94b: M[V581] = V323
0x94c: V582 = 0x20
0x94e: V583 = ADD 0x20 V581
0x953: V584 = 0x0
0x955: V585 = 0x40
0x957: V586 = M[0x40]
0x95a: V587 = SUB V583 V586
0x95c: V588 = 0x0
0x960: V589 = EXTCODESIZE V566
0x961: V590 = ISZERO V589
0x962: V591 = ISZERO V590
0x963: V592 = 0x96b
0x966: JUMPI 0x96b V591
---
Entry stack: [V11, 0x513, V320, V323]
Stack pops: 2
Stack additions: [S1, S0, V566, 0xa9059cbb, V583, 0x0, V586, V587, V586, 0x0, V566]
Exit stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583, 0x0, V586, V587, V586, 0x0, V566]

================================

Block 0x967
[0x967:0x96a]
---
Predecessors: [0x8a7]
Successors: []
---
0x967 PUSH1 0x0
0x969 DUP1
0x96a REVERT
---
0x967: V593 = 0x0
0x96a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583, 0x0, V586, V587, V586, 0x0, V566]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583, 0x0, V586, V587, V586, 0x0, V566]

================================

Block 0x96b
[0x96b:0x977]
---
Predecessors: [0x8a7]
Successors: [0x978, 0x97c]
---
0x96b JUMPDEST
0x96c PUSH2 0x2c6
0x96f GAS
0x970 SUB
0x971 CALL
0x972 ISZERO
0x973 ISZERO
0x974 PUSH2 0x97c
0x977 JUMPI
---
0x96b: JUMPDEST 
0x96c: V594 = 0x2c6
0x96f: V595 = GAS
0x970: V596 = SUB V595 0x2c6
0x971: V597 = CALL V596 V566 0x0 V586 V587 V586 0x0
0x972: V598 = ISZERO V597
0x973: V599 = ISZERO V598
0x974: V600 = 0x97c
0x977: JUMPI 0x97c V599
---
Entry stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583, 0x0, V586, V587, V586, 0x0, V566]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583]

================================

Block 0x978
[0x978:0x97b]
---
Predecessors: [0x96b]
Successors: []
---
0x978 PUSH1 0x0
0x97a DUP1
0x97b REVERT
---
0x978: V601 = 0x0
0x97b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583]

================================

Block 0x97c
[0x97c:0x982]
---
Predecessors: [0x96b]
Successors: [0x513]
---
0x97c JUMPDEST
0x97d POP
0x97e POP
0x97f POP
0x980 POP
0x981 POP
0x982 JUMP
---
0x97c: JUMPDEST 
0x982: JUMP 0x513
---
Entry stack: [V11, 0x513, V320, V323, V566, 0xa9059cbb, V583]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x983
[0x983:0x9da]
---
Predecessors: [0x520]
Successors: [0x9db, 0x9df]
---
0x983 JUMPDEST
0x984 PUSH1 0x3
0x986 PUSH1 0x0
0x988 SWAP1
0x989 SLOAD
0x98a SWAP1
0x98b PUSH2 0x100
0x98e EXP
0x98f SWAP1
0x990 DIV
0x991 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a6 AND
0x9a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bc AND
0x9bd CALLER
0x9be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d3 AND
0x9d4 EQ
0x9d5 ISZERO
0x9d6 ISZERO
0x9d7 PUSH2 0x9df
0x9da JUMPI
---
0x983: JUMPDEST 
0x984: V602 = 0x3
0x986: V603 = 0x0
0x989: V604 = S[0x3]
0x98b: V605 = 0x100
0x98e: V606 = EXP 0x100 0x0
0x990: V607 = DIV V604 0x1
0x991: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a6: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x9a7: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bc: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0x9bd: V612 = CALLER
0x9be: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d3: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x9d4: V615 = EQ V614 V611
0x9d5: V616 = ISZERO V615
0x9d6: V617 = ISZERO V616
0x9d7: V618 = 0x9df
0x9da: JUMPI 0x9df V617
---
Entry stack: [V11, 0x54c, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x54c, V335]

================================

Block 0x9db
[0x9db:0x9de]
---
Predecessors: [0x983]
Successors: []
---
0x9db PUSH1 0x0
0x9dd DUP1
0x9de REVERT
---
0x9db: V619 = 0x0
0x9de: REVERT 0x0 0x0
---
Entry stack: [V11, 0x54c, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x54c, V335]

================================

Block 0x9df
[0x9df:0xa22]
---
Predecessors: [0x983]
Successors: [0x54c]
---
0x9df JUMPDEST
0x9e0 DUP1
0x9e1 PUSH1 0x2
0x9e3 PUSH1 0x0
0x9e5 PUSH2 0x100
0x9e8 EXP
0x9e9 DUP2
0x9ea SLOAD
0x9eb DUP2
0x9ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa01 MUL
0xa02 NOT
0xa03 AND
0xa04 SWAP1
0xa05 DUP4
0xa06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1b AND
0xa1c MUL
0xa1d OR
0xa1e SWAP1
0xa1f SSTORE
0xa20 POP
0xa21 POP
0xa22 JUMP
---
0x9df: JUMPDEST 
0x9e1: V620 = 0x2
0x9e3: V621 = 0x0
0x9e5: V622 = 0x100
0x9e8: V623 = EXP 0x100 0x0
0x9ea: V624 = S[0x2]
0x9ec: V625 = 0xffffffffffffffffffffffffffffffffffffffff
0xa01: V626 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa02: V627 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa03: V628 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V624
0xa06: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0xa1c: V631 = MUL V630 0x1
0xa1d: V632 = OR V631 V628
0xa1f: S[0x2] = V632
0xa22: JUMP 0x54c
---
Entry stack: [V11, 0x54c, V335]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa23
[0xa23:0xa35]
---
Predecessors: [0x559]
Successors: [0x561]
---
0xa23 JUMPDEST
0xa24 PUSH1 0x3
0xa26 PUSH1 0x14
0xa28 SWAP1
0xa29 SLOAD
0xa2a SWAP1
0xa2b PUSH2 0x100
0xa2e EXP
0xa2f SWAP1
0xa30 DIV
0xa31 PUSH1 0xff
0xa33 AND
0xa34 DUP2
0xa35 JUMP
---
0xa23: JUMPDEST 
0xa24: V633 = 0x3
0xa26: V634 = 0x14
0xa29: V635 = S[0x3]
0xa2b: V636 = 0x100
0xa2e: V637 = EXP 0x100 0x14
0xa30: V638 = DIV V635 0x10000000000000000000000000000000000000000
0xa31: V639 = 0xff
0xa33: V640 = AND 0xff V638
0xa35: JUMP 0x561
---
Entry stack: [V11, 0x561]
Stack pops: 1
Stack additions: [S0, V640]
Exit stack: [V11, 0x561, V640]

================================

Block 0xa36
[0xa36:0xa48]
---
Predecessors: [0x588]
Successors: [0x590]
---
0xa36 JUMPDEST
0xa37 PUSH1 0x5
0xa39 PUSH1 0x0
0xa3b SWAP1
0xa3c SLOAD
0xa3d SWAP1
0xa3e PUSH2 0x100
0xa41 EXP
0xa42 SWAP1
0xa43 DIV
0xa44 PUSH1 0xff
0xa46 AND
0xa47 DUP2
0xa48 JUMP
---
0xa36: JUMPDEST 
0xa37: V641 = 0x5
0xa39: V642 = 0x0
0xa3c: V643 = S[0x5]
0xa3e: V644 = 0x100
0xa41: V645 = EXP 0x100 0x0
0xa43: V646 = DIV V643 0x1
0xa44: V647 = 0xff
0xa46: V648 = AND 0xff V646
0xa48: JUMP 0x590
---
Entry stack: [V11, 0x590]
Stack pops: 1
Stack additions: [S0, V648]
Exit stack: [V11, 0x590, V648]

================================

Block 0xa49
[0xa49:0xa6e]
---
Predecessors: [0x5b5]
Successors: [0x5bd]
---
0xa49 JUMPDEST
0xa4a PUSH1 0x3
0xa4c PUSH1 0x0
0xa4e SWAP1
0xa4f SLOAD
0xa50 SWAP1
0xa51 PUSH2 0x100
0xa54 EXP
0xa55 SWAP1
0xa56 DIV
0xa57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6c AND
0xa6d DUP2
0xa6e JUMP
---
0xa49: JUMPDEST 
0xa4a: V649 = 0x3
0xa4c: V650 = 0x0
0xa4f: V651 = S[0x3]
0xa51: V652 = 0x100
0xa54: V653 = EXP 0x100 0x0
0xa56: V654 = DIV V651 0x1
0xa57: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6c: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0xa6e: JUMP 0x5bd
---
Entry stack: [V11, 0x5bd]
Stack pops: 1
Stack additions: [S0, V656]
Exit stack: [V11, 0x5bd, V656]

================================

Block 0xa6f
[0xa6f:0xa74]
---
Predecessors: [0x60a]
Successors: [0x612]
---
0xa6f JUMPDEST
0xa70 PUSH1 0x4
0xa72 SLOAD
0xa73 DUP2
0xa74 JUMP
---
0xa6f: JUMPDEST 
0xa70: V657 = 0x4
0xa72: V658 = S[0x4]
0xa74: JUMP 0x612
---
Entry stack: [V11, 0x612]
Stack pops: 1
Stack additions: [S0, V658]
Exit stack: [V11, 0x612, V658]

================================

Block 0xa75
[0xa75:0xacc]
---
Predecessors: [0x633]
Successors: [0xacd, 0xad1]
---
0xa75 JUMPDEST
0xa76 PUSH1 0x2
0xa78 PUSH1 0x0
0xa7a SWAP1
0xa7b SLOAD
0xa7c SWAP1
0xa7d PUSH2 0x100
0xa80 EXP
0xa81 SWAP1
0xa82 DIV
0xa83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa98 AND
0xa99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaae AND
0xaaf CALLER
0xab0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac5 AND
0xac6 EQ
0xac7 ISZERO
0xac8 ISZERO
0xac9 PUSH2 0xad1
0xacc JUMPI
---
0xa75: JUMPDEST 
0xa76: V659 = 0x2
0xa78: V660 = 0x0
0xa7b: V661 = S[0x2]
0xa7d: V662 = 0x100
0xa80: V663 = EXP 0x100 0x0
0xa82: V664 = DIV V661 0x1
0xa83: V665 = 0xffffffffffffffffffffffffffffffffffffffff
0xa98: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xa99: V667 = 0xffffffffffffffffffffffffffffffffffffffff
0xaae: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0xaaf: V669 = CALLER
0xab0: V670 = 0xffffffffffffffffffffffffffffffffffffffff
0xac5: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0xac6: V672 = EQ V671 V668
0xac7: V673 = ISZERO V672
0xac8: V674 = ISZERO V673
0xac9: V675 = 0xad1
0xacc: JUMPI 0xad1 V674
---
Entry stack: [V11, 0x65f, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65f, V411]

================================

Block 0xacd
[0xacd:0xad0]
---
Predecessors: [0xa75]
Successors: []
---
0xacd PUSH1 0x0
0xacf DUP1
0xad0 REVERT
---
0xacd: V676 = 0x0
0xad0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65f, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65f, V411]

================================

Block 0xad1
[0xad1:0xb14]
---
Predecessors: [0xa75]
Successors: [0x65f]
---
0xad1 JUMPDEST
0xad2 DUP1
0xad3 PUSH1 0x2
0xad5 PUSH1 0x0
0xad7 PUSH2 0x100
0xada EXP
0xadb DUP2
0xadc SLOAD
0xadd DUP2
0xade PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf3 MUL
0xaf4 NOT
0xaf5 AND
0xaf6 SWAP1
0xaf7 DUP4
0xaf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0d AND
0xb0e MUL
0xb0f OR
0xb10 SWAP1
0xb11 SSTORE
0xb12 POP
0xb13 POP
0xb14 JUMP
---
0xad1: JUMPDEST 
0xad3: V677 = 0x2
0xad5: V678 = 0x0
0xad7: V679 = 0x100
0xada: V680 = EXP 0x100 0x0
0xadc: V681 = S[0x2]
0xade: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf3: V683 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xaf4: V684 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaf5: V685 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V681
0xaf8: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0d: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0xb0e: V688 = MUL V687 0x1
0xb0f: V689 = OR V688 V685
0xb11: S[0x2] = V689
0xb14: JUMP 0x65f
---
Entry stack: [V11, 0x65f, V411]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xb15
[0xb15:0xb6e]
---
Predecessors: [0x66c]
Successors: [0xb6f, 0xb73]
---
0xb15 JUMPDEST
0xb16 PUSH1 0x0
0xb18 PUSH1 0x2
0xb1a PUSH1 0x0
0xb1c SWAP1
0xb1d SLOAD
0xb1e SWAP1
0xb1f PUSH2 0x100
0xb22 EXP
0xb23 SWAP1
0xb24 DIV
0xb25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3a AND
0xb3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb50 AND
0xb51 CALLER
0xb52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb67 AND
0xb68 EQ
0xb69 ISZERO
0xb6a ISZERO
0xb6b PUSH2 0xb73
0xb6e JUMPI
---
0xb15: JUMPDEST 
0xb16: V690 = 0x0
0xb18: V691 = 0x2
0xb1a: V692 = 0x0
0xb1d: V693 = S[0x2]
0xb1f: V694 = 0x100
0xb22: V695 = EXP 0x100 0x0
0xb24: V696 = DIV V693 0x1
0xb25: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3a: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xb3b: V699 = 0xffffffffffffffffffffffffffffffffffffffff
0xb50: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0xb51: V701 = CALLER
0xb52: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xb67: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0xb68: V704 = EQ V703 V700
0xb69: V705 = ISZERO V704
0xb6a: V706 = ISZERO V705
0xb6b: V707 = 0xb73
0xb6e: JUMPI 0xb73 V706
---
Entry stack: [V11, 0x674]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x674, 0x0]

================================

Block 0xb6f
[0xb6f:0xb72]
---
Predecessors: [0xb15]
Successors: []
---
0xb6f PUSH1 0x0
0xb71 DUP1
0xb72 REVERT
---
0xb6f: V708 = 0x0
0xb72: REVERT 0x0 0x0
---
Entry stack: [V11, 0x674, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x674, 0x0]

================================

Block 0xb73
[0xb73:0xb8a]
---
Predecessors: [0xb15]
Successors: [0xb8b, 0xb8f]
---
0xb73 JUMPDEST
0xb74 PUSH1 0x5
0xb76 PUSH1 0x0
0xb78 SWAP1
0xb79 SLOAD
0xb7a SWAP1
0xb7b PUSH2 0x100
0xb7e EXP
0xb7f SWAP1
0xb80 DIV
0xb81 PUSH1 0xff
0xb83 AND
0xb84 ISZERO
0xb85 ISZERO
0xb86 ISZERO
0xb87 PUSH2 0xb8f
0xb8a JUMPI
---
0xb73: JUMPDEST 
0xb74: V709 = 0x5
0xb76: V710 = 0x0
0xb79: V711 = S[0x5]
0xb7b: V712 = 0x100
0xb7e: V713 = EXP 0x100 0x0
0xb80: V714 = DIV V711 0x1
0xb81: V715 = 0xff
0xb83: V716 = AND 0xff V714
0xb84: V717 = ISZERO V716
0xb85: V718 = ISZERO V717
0xb86: V719 = ISZERO V718
0xb87: V720 = 0xb8f
0xb8a: JUMPI 0xb8f V719
---
Entry stack: [V11, 0x674, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x674, 0x0]

================================

Block 0xb8b
[0xb8b:0xb8e]
---
Predecessors: [0xb73]
Successors: []
---
0xb8b PUSH1 0x0
0xb8d DUP1
0xb8e REVERT
---
0xb8b: V721 = 0x0
0xb8e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x674, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x674, 0x0]

================================

Block 0xb8f
[0xb8f:0xbb0]
---
Predecessors: [0xb73]
Successors: [0x674]
---
0xb8f JUMPDEST
0xb90 PUSH1 0x1
0xb92 PUSH1 0x5
0xb94 PUSH1 0x0
0xb96 PUSH2 0x100
0xb99 EXP
0xb9a DUP2
0xb9b SLOAD
0xb9c DUP2
0xb9d PUSH1 0xff
0xb9f MUL
0xba0 NOT
0xba1 AND
0xba2 SWAP1
0xba3 DUP4
0xba4 ISZERO
0xba5 ISZERO
0xba6 MUL
0xba7 OR
0xba8 SWAP1
0xba9 SSTORE
0xbaa POP
0xbab PUSH1 0x1
0xbad SWAP1
0xbae POP
0xbaf SWAP1
0xbb0 JUMP
---
0xb8f: JUMPDEST 
0xb90: V722 = 0x1
0xb92: V723 = 0x5
0xb94: V724 = 0x0
0xb96: V725 = 0x100
0xb99: V726 = EXP 0x100 0x0
0xb9b: V727 = S[0x5]
0xb9d: V728 = 0xff
0xb9f: V729 = MUL 0xff 0x1
0xba0: V730 = NOT 0xff
0xba1: V731 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V727
0xba4: V732 = ISZERO 0x1
0xba5: V733 = ISZERO 0x0
0xba6: V734 = MUL 0x1 0x1
0xba7: V735 = OR 0x1 V731
0xba9: S[0x5] = V735
0xbab: V736 = 0x1
0xbb0: JUMP 0x674
---
Entry stack: [V11, 0x674, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xbb1
[0xbb1:0xbe1]
---
Predecessors: []
Successors: []
---
0xbb1 STOP
0xbb2 LOG1
0xbb3 PUSH6 0x627a7a723058
0xbba SHA3
0xbbb MISSING 0xea
0xbbc DUP5
0xbbd MISSING 0x46
0xbbe MISSING 0xc9
0xbbf BALANCE
0xbc0 MISSING 0x27
0xbc1 MISSING 0xdc
0xbc2 ADD
0xbc3 SWAP14
0xbc4 SWAP4
0xbc5 COINBASE
0xbc6 MISSING 0xfc
0xbc7 PUSH26 0x1bf7c388049322d8ad3b62c167d34b6ba398a40029
---
0xbb1: STOP 
0xbb2: LOG S0 S1 S2
0xbb3: V737 = 0x627a7a723058
0xbba: V738 = SHA3 0x627a7a723058 S3
0xbbb: MISSING 0xea
0xbbd: MISSING 0x46
0xbbe: MISSING 0xc9
0xbbf: V739 = BALANCE S0
0xbc0: MISSING 0x27
0xbc1: MISSING 0xdc
0xbc2: V740 = ADD S0 S1
0xbc5: V741 = COINBASE
0xbc6: MISSING 0xfc
0xbc7: V742 = 0x1bf7c388049322d8ad3b62c167d34b6ba398a40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V738, S4, S0, S1, S2, S3, S4, V739, V741, S5, S2, S3, S4, S15, S6, S7, S8, S9, S10, S11, S12, S13, S14, V740, 0x1bf7c388049322d8ad3b62c167d34b6ba398a40029]
Exit stack: []

================================

Function 0:
Public function signature: 0x167ff46f
Entry block: 0x3e7
Exit block: 0x3fa
Body: 0x3e7, 0x3ee, 0x3f2, 0x3fa, 0x68e, 0x6e8, 0x6ec, 0x703, 0x707

Function 1:
Public function signature: 0x24600fc3
Entry block: 0x414
Exit block: 0x427
Body: 0x414, 0x41b, 0x41f, 0x427, 0x729, 0x781, 0x785, 0x7fa, 0x7fe

Function 2:
Public function signature: 0x5af82abf
Entry block: 0x429
Exit block: 0x43c
Body: 0x429, 0x430, 0x434, 0x43c, 0x800

Function 3:
Public function signature: 0x71c6d4dc
Entry block: 0x47e
Exit block: 0x491
Body: 0x47e, 0x485, 0x489, 0x491, 0x826

Function 4:
Public function signature: 0x7a4e4ecf
Entry block: 0x4d3
Exit block: 0x513
Body: 0x4d3, 0x4da, 0x4de, 0x513, 0x84b, 0x8a3, 0x8a7, 0x967, 0x96b, 0x978, 0x97c

Function 5:
Public function signature: 0x92e405ac
Entry block: 0x515
Exit block: 0x54c
Body: 0x515, 0x51c, 0x520, 0x54c, 0x983, 0x9db, 0x9df

Function 6:
Public function signature: 0xa8d5fd65
Entry block: 0x54e
Exit block: 0x561
Body: 0x54e, 0x555, 0x559, 0x561, 0xa23

Function 7:
Public function signature: 0xb8c766b8
Entry block: 0x57d
Exit block: 0x590
Body: 0x57d, 0x584, 0x588, 0x590, 0xa36

Function 8:
Public function signature: 0xbe10862b
Entry block: 0x5aa
Exit block: 0x5bd
Body: 0x5aa, 0x5b1, 0x5b5, 0x5bd, 0xa49

Function 9:
Public function signature: 0xc89f2ce4
Entry block: 0x5ff
Exit block: 0x612
Body: 0x5ff, 0x606, 0x60a, 0x612, 0xa6f

Function 10:
Public function signature: 0xddd41ef6
Entry block: 0x628
Exit block: 0x65f
Body: 0x628, 0x62f, 0x633, 0x65f, 0xa75, 0xacd, 0xad1

Function 11:
Public function signature: 0xee55efee
Entry block: 0x661
Exit block: 0x674
Body: 0x661, 0x668, 0x66c, 0x674, 0xb15, 0xb6f, 0xb73, 0xb8b, 0xb8f

Function 12:
Public fallback function
Entry block: 0xba
Exit block: 0x3e3
Body: 0xba, 0xd5, 0xd9, 0xeb, 0xef, 0x1b7, 0x1bb, 0x1c8, 0x1cc, 0x1e0, 0x1e4, 0x2a4, 0x2a8, 0x2b5, 0x2b9, 0x301, 0x302, 0x37d, 0x381, 0x3df, 0x3e3

