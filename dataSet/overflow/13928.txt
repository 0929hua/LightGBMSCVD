Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x5b2a0e96
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x5b2a0e96
0x3c: V13 = EQ 0x5b2a0e96 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd3]
---
0x41 DUP1
0x42 PUSH4 0xaafafbf3
0x47 EQ
0x48 PUSH2 0xd3
0x4b JUMPI
---
0x42: V15 = 0xaafafbf3
0x47: V16 = EQ 0xaafafbf3 V11
0x48: V17 = 0xd3
0x4b: JUMPI 0xd3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xd0]
---
Predecessors: [0x51]
Successors: [0x122]
---
0x5c JUMPDEST
0x5d PUSH2 0xd1
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 SWAP2
0x81 SWAP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 SWAP1
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP1
0x89 DUP3
0x8a ADD
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 DUP1
0x93 DUP1
0x94 PUSH1 0x20
0x96 MUL
0x97 PUSH1 0x20
0x99 ADD
0x9a PUSH1 0x40
0x9c MLOAD
0x9d SWAP1
0x9e DUP2
0x9f ADD
0xa0 PUSH1 0x40
0xa2 MSTORE
0xa3 DUP1
0xa4 SWAP4
0xa5 SWAP3
0xa6 SWAP2
0xa7 SWAP1
0xa8 DUP2
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae DUP4
0xaf DUP4
0xb0 PUSH1 0x20
0xb2 MUL
0xb3 DUP1
0xb4 DUP3
0xb5 DUP5
0xb6 CALLDATACOPY
0xb7 DUP3
0xb8 ADD
0xb9 SWAP2
0xba POP
0xbb POP
0xbc POP
0xbd POP
0xbe POP
0xbf POP
0xc0 SWAP2
0xc1 SWAP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 SWAP1
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP1
0xc9 SWAP2
0xca SWAP1
0xcb POP
0xcc POP
0xcd PUSH2 0x122
0xd0 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xd1
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x7c: V28 = 0x20
0x7e: V29 = ADD 0x20 0x4
0x83: V30 = CALLDATALOAD 0x24
0x85: V31 = 0x20
0x87: V32 = ADD 0x20 0x24
0x8a: V33 = ADD 0x4 V30
0x8c: V34 = CALLDATALOAD V33
0x8e: V35 = 0x20
0x90: V36 = ADD 0x20 V33
0x94: V37 = 0x20
0x96: V38 = MUL 0x20 V34
0x97: V39 = 0x20
0x99: V40 = ADD 0x20 V38
0x9a: V41 = 0x40
0x9c: V42 = M[0x40]
0x9f: V43 = ADD V42 V40
0xa0: V44 = 0x40
0xa2: M[0x40] = V43
0xaa: M[V42] = V34
0xab: V45 = 0x20
0xad: V46 = ADD 0x20 V42
0xb0: V47 = 0x20
0xb2: V48 = MUL 0x20 V34
0xb6: CALLDATACOPY V46 V36 V48
0xb8: V49 = ADD V46 V48
0xc3: V50 = CALLDATALOAD 0x44
0xc5: V51 = 0x20
0xc7: V52 = ADD 0x20 0x44
0xcd: V53 = 0x122
0xd0: JUMP 0x122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd1, V27, V42, V50]
Exit stack: [V11, 0xd1, V27, V42, V50]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: [0x25f]
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0x11f]
---
Predecessors: [0x41]
Successors: [0x266]
---
0xd3 JUMPDEST
0xd4 PUSH2 0x120
0xd7 PUSH1 0x4
0xd9 DUP1
0xda DUP1
0xdb CALLDATALOAD
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 DUP3
0xe2 ADD
0xe3 DUP1
0xe4 CALLDATALOAD
0xe5 SWAP1
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP1
0xea DUP1
0xeb DUP1
0xec PUSH1 0x20
0xee MUL
0xef PUSH1 0x20
0xf1 ADD
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 SWAP1
0xf6 DUP2
0xf7 ADD
0xf8 PUSH1 0x40
0xfa MSTORE
0xfb DUP1
0xfc SWAP4
0xfd SWAP3
0xfe SWAP2
0xff SWAP1
0x100 DUP2
0x101 DUP2
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 DUP4
0x107 DUP4
0x108 PUSH1 0x20
0x10a MUL
0x10b DUP1
0x10c DUP3
0x10d DUP5
0x10e CALLDATACOPY
0x10f DUP3
0x110 ADD
0x111 SWAP2
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 POP
0x117 POP
0x118 SWAP2
0x119 SWAP1
0x11a POP
0x11b POP
0x11c PUSH2 0x266
0x11f JUMP
---
0xd3: JUMPDEST 
0xd4: V54 = 0x120
0xd7: V55 = 0x4
0xdb: V56 = CALLDATALOAD 0x4
0xdd: V57 = 0x20
0xdf: V58 = ADD 0x20 0x4
0xe2: V59 = ADD 0x4 V56
0xe4: V60 = CALLDATALOAD V59
0xe6: V61 = 0x20
0xe8: V62 = ADD 0x20 V59
0xec: V63 = 0x20
0xee: V64 = MUL 0x20 V60
0xef: V65 = 0x20
0xf1: V66 = ADD 0x20 V64
0xf2: V67 = 0x40
0xf4: V68 = M[0x40]
0xf7: V69 = ADD V68 V66
0xf8: V70 = 0x40
0xfa: M[0x40] = V69
0x102: M[V68] = V60
0x103: V71 = 0x20
0x105: V72 = ADD 0x20 V68
0x108: V73 = 0x20
0x10a: V74 = MUL 0x20 V60
0x10e: CALLDATACOPY V72 V62 V74
0x110: V75 = ADD V72 V74
0x11c: V76 = 0x266
0x11f: JUMP 0x266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x120, V68]
Exit stack: [V11, 0x120, V68]

================================

Block 0x120
[0x120:0x121]
---
Predecessors: [0x33c]
Successors: []
---
0x120 JUMPDEST
0x121 STOP
---
0x120: JUMPDEST 
0x121: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x5c]
Successors: [0x12d]
---
0x122 JUMPDEST
0x123 PUSH1 0x0
0x125 DUP1
0x126 DUP5
0x127 SWAP2
0x128 POP
0x129 PUSH1 0x0
0x12b SWAP1
0x12c POP
---
0x122: JUMPDEST 
0x123: V77 = 0x0
0x129: V78 = 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x0]
Exit stack: [V11, 0xd1, V27, V42, V50, V27, 0x0]

================================

Block 0x12d
[0x12d:0x136]
---
Predecessors: [0x122, 0x252]
Successors: [0x137, 0x25f]
---
0x12d JUMPDEST
0x12e DUP4
0x12f MLOAD
0x130 DUP2
0x131 LT
0x132 ISZERO
0x133 PUSH2 0x25f
0x136 JUMPI
---
0x12d: JUMPDEST 
0x12f: V79 = M[V42]
0x131: V80 = LT S0 V79
0x132: V81 = ISZERO V80
0x133: V82 = 0x25f
0x136: JUMPI 0x25f V81
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S0]

================================

Block 0x137
[0x137:0x15f]
---
Predecessors: [0x12d]
Successors: [0x160, 0x161]
---
0x137 DUP2
0x138 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d AND
0x14e PUSH4 0x23b872dd
0x153 CALLER
0x154 DUP7
0x155 DUP5
0x156 DUP2
0x157 MLOAD
0x158 DUP2
0x159 LT
0x15a ISZERO
0x15b ISZERO
0x15c PUSH2 0x161
0x15f JUMPI
---
0x138: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x14e: V85 = 0x23b872dd
0x153: V86 = CALLER
0x157: V87 = M[V42]
0x159: V88 = LT S0 V87
0x15a: V89 = ISZERO V88
0x15b: V90 = ISZERO V89
0x15c: V91 = 0x161
0x15f: JUMPI 0x161 V90
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V84, 0x23b872dd, V86, S3, S0]
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S0, V84, 0x23b872dd, V86, V42, S0]

================================

Block 0x160
[0x160:0x160]
---
Predecessors: [0x137]
Successors: []
---
0x160 INVALID
---
0x160: INVALID 
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S5, V84, 0x23b872dd, V86, V42, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S5, V84, 0x23b872dd, V86, V42, S0]

================================

Block 0x161
[0x161:0x227]
---
Predecessors: [0x137]
Successors: [0x228, 0x22c]
---
0x161 JUMPDEST
0x162 SWAP1
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP1
0x167 PUSH1 0x20
0x169 MUL
0x16a ADD
0x16b MLOAD
0x16c DUP7
0x16d PUSH1 0x0
0x16f PUSH1 0x40
0x171 MLOAD
0x172 PUSH1 0x20
0x174 ADD
0x175 MSTORE
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP5
0x17a PUSH4 0xffffffff
0x17f AND
0x180 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x19e MUL
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x4
0x1a3 ADD
0x1a4 DUP1
0x1a5 DUP5
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 DUP4
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 DUP2
0x205 MSTORE
0x206 PUSH1 0x20
0x208 ADD
0x209 DUP3
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x20
0x20e ADD
0x20f SWAP4
0x210 POP
0x211 POP
0x212 POP
0x213 POP
0x214 PUSH1 0x20
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a DUP4
0x21b SUB
0x21c DUP2
0x21d PUSH1 0x0
0x21f DUP8
0x220 DUP1
0x221 EXTCODESIZE
0x222 ISZERO
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x161: JUMPDEST 
0x163: V92 = 0x20
0x165: V93 = ADD 0x20 V42
0x167: V94 = 0x20
0x169: V95 = MUL 0x20 S0
0x16a: V96 = ADD V95 V93
0x16b: V97 = M[V96]
0x16d: V98 = 0x0
0x16f: V99 = 0x40
0x171: V100 = M[0x40]
0x172: V101 = 0x20
0x174: V102 = ADD 0x20 V100
0x175: M[V102] = 0x0
0x176: V103 = 0x40
0x178: V104 = M[0x40]
0x17a: V105 = 0xffffffff
0x17f: V106 = AND 0xffffffff 0x23b872dd
0x180: V107 = 0x100000000000000000000000000000000000000000000000000000000
0x19e: V108 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x1a0: M[V104] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1a1: V109 = 0x4
0x1a3: V110 = ADD 0x4 V104
0x1a6: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x1bc: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1d3: M[V110] = V114
0x1d4: V115 = 0x20
0x1d6: V116 = ADD 0x20 V110
0x1d8: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1ee: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x205: M[V116] = V120
0x206: V121 = 0x20
0x208: V122 = ADD 0x20 V116
0x20b: M[V122] = V50
0x20c: V123 = 0x20
0x20e: V124 = ADD 0x20 V122
0x214: V125 = 0x20
0x216: V126 = 0x40
0x218: V127 = M[0x40]
0x21b: V128 = SUB V124 V127
0x21d: V129 = 0x0
0x221: V130 = EXTCODESIZE V84
0x222: V131 = ISZERO V130
0x223: V132 = ISZERO V131
0x224: V133 = 0x22c
0x227: JUMPI 0x22c V132
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S5, V84, 0x23b872dd, V86, V42, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V124, 0x20, V127, V128, V127, 0x0, S4]
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S5, V84, 0x23b872dd, V124, 0x20, V127, V128, V127, 0x0, V84]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x161]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V134 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S9, V84, 0x23b872dd, V124, 0x20, V127, V128, V127, 0x0, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S9, V84, 0x23b872dd, V124, 0x20, V127, V128, V127, 0x0, V84]

================================

Block 0x22c
[0x22c:0x238]
---
Predecessors: [0x161]
Successors: [0x239, 0x23d]
---
0x22c JUMPDEST
0x22d PUSH2 0x2c6
0x230 GAS
0x231 SUB
0x232 CALL
0x233 ISZERO
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x22c: JUMPDEST 
0x22d: V135 = 0x2c6
0x230: V136 = GAS
0x231: V137 = SUB V136 0x2c6
0x232: V138 = CALL V137 V84 0x0 V127 V128 V127 0x20
0x233: V139 = ISZERO V138
0x234: V140 = ISZERO V139
0x235: V141 = 0x23d
0x238: JUMPI 0x23d V140
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S9, V84, 0x23b872dd, V124, 0x20, V127, V128, V127, 0x0, V84]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S9, V84, 0x23b872dd, V124]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x22c]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V142 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S3, V84, 0x23b872dd, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S3, V84, 0x23b872dd, V124]

================================

Block 0x23d
[0x23d:0x24d]
---
Predecessors: [0x22c]
Successors: [0x24e, 0x252]
---
0x23d JUMPDEST
0x23e POP
0x23f POP
0x240 POP
0x241 PUSH1 0x40
0x243 MLOAD
0x244 DUP1
0x245 MLOAD
0x246 SWAP1
0x247 POP
0x248 ISZERO
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x23d: JUMPDEST 
0x241: V143 = 0x40
0x243: V144 = M[0x40]
0x245: V145 = M[V144]
0x248: V146 = ISZERO V145
0x249: V147 = ISZERO V146
0x24a: V148 = 0x252
0x24d: JUMPI 0x252 V147
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S3, V84, 0x23b872dd, V124]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S3]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x23d]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V149 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, V27, S0]

================================

Block 0x252
[0x252:0x25e]
---
Predecessors: [0x23d]
Successors: [0x12d]
---
0x252 JUMPDEST
0x253 DUP1
0x254 DUP1
0x255 PUSH1 0x1
0x257 ADD
0x258 SWAP2
0x259 POP
0x25a POP
0x25b PUSH2 0x12d
0x25e JUMP
---
0x252: JUMPDEST 
0x255: V150 = 0x1
0x257: V151 = ADD 0x1 S0
0x25b: V152 = 0x12d
0x25e: JUMP 0x12d
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S0]
Stack pops: 1
Stack additions: [V151]
Exit stack: [V11, 0xd1, V27, V42, V50, V27, V151]

================================

Block 0x25f
[0x25f:0x265]
---
Predecessors: [0x12d]
Successors: [0xd1]
---
0x25f JUMPDEST
0x260 POP
0x261 POP
0x262 POP
0x263 POP
0x264 POP
0x265 JUMP
---
0x25f: JUMPDEST 
0x265: JUMP 0xd1
---
Entry stack: [V11, 0xd1, V27, V42, V50, V27, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x266
[0x266:0x26b]
---
Predecessors: [0xd3]
Successors: [0x26c]
---
0x266 JUMPDEST
0x267 PUSH1 0x0
0x269 DUP1
0x26a SWAP1
0x26b POP
---
0x266: JUMPDEST 
0x267: V153 = 0x0
---
Entry stack: [V11, 0x120, V68]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x120, V68, 0x0]

================================

Block 0x26c
[0x26c:0x275]
---
Predecessors: [0x266, 0x2d8]
Successors: [0x276, 0x2e5]
---
0x26c JUMPDEST
0x26d DUP2
0x26e MLOAD
0x26f DUP2
0x270 LT
0x271 ISZERO
0x272 PUSH2 0x2e5
0x275 JUMPI
---
0x26c: JUMPDEST 
0x26e: V154 = M[V68]
0x270: V155 = LT S0 V154
0x271: V156 = ISZERO V155
0x272: V157 = 0x2e5
0x275: JUMPI 0x2e5 V156
---
Entry stack: [V11, 0x120, V68, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x120, V68, S0]

================================

Block 0x276
[0x276:0x281]
---
Predecessors: [0x26c]
Successors: [0x282, 0x283]
---
0x276 DUP2
0x277 DUP2
0x278 DUP2
0x279 MLOAD
0x27a DUP2
0x27b LT
0x27c ISZERO
0x27d ISZERO
0x27e PUSH2 0x283
0x281 JUMPI
---
0x279: V158 = M[V68]
0x27b: V159 = LT S0 V158
0x27c: V160 = ISZERO V159
0x27d: V161 = ISZERO V160
0x27e: V162 = 0x283
0x281: JUMPI 0x283 V161
---
Entry stack: [V11, 0x120, V68, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V11, 0x120, V68, S0, V68, S0]

================================

Block 0x282
[0x282:0x282]
---
Predecessors: [0x276]
Successors: []
---
0x282 INVALID
---
0x282: INVALID 
---
Entry stack: [V11, 0x120, V68, S2, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V68, S2, V68, S0]

================================

Block 0x283
[0x283:0x2b0]
---
Predecessors: [0x276]
Successors: [0x2b1, 0x2b2]
---
0x283 JUMPDEST
0x284 SWAP1
0x285 PUSH1 0x20
0x287 ADD
0x288 SWAP1
0x289 PUSH1 0x20
0x28b MUL
0x28c ADD
0x28d MLOAD
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 PUSH2 0x8fc
0x2a7 DUP4
0x2a8 MLOAD
0x2a9 CALLVALUE
0x2aa DUP2
0x2ab ISZERO
0x2ac ISZERO
0x2ad PUSH2 0x2b2
0x2b0 JUMPI
---
0x283: JUMPDEST 
0x285: V163 = 0x20
0x287: V164 = ADD 0x20 V68
0x289: V165 = 0x20
0x28b: V166 = MUL 0x20 S0
0x28c: V167 = ADD V166 V164
0x28d: V168 = M[V167]
0x28e: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2a4: V171 = 0x8fc
0x2a8: V172 = M[V68]
0x2a9: V173 = CALLVALUE
0x2ab: V174 = ISZERO V172
0x2ac: V175 = ISZERO V174
0x2ad: V176 = 0x2b2
0x2b0: JUMPI 0x2b2 V175
---
Entry stack: [V11, 0x120, V68, S2, V68, S0]
Stack pops: 4
Stack additions: [S3, S2, V170, 0x8fc, V172, V173]
Exit stack: [V11, 0x120, V68, S2, V170, 0x8fc, V172, V173]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x283]
Successors: []
---
0x2b1 INVALID
---
0x2b1: INVALID 
---
Entry stack: [V11, 0x120, V68, S4, V170, 0x8fc, V172, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V68, S4, V170, 0x8fc, V172, V173]

================================

Block 0x2b2
[0x2b2:0x2d3]
---
Predecessors: [0x283]
Successors: [0x2d4, 0x2d8]
---
0x2b2 JUMPDEST
0x2b3 DIV
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 ISZERO
0x2b7 MUL
0x2b8 SWAP1
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc PUSH1 0x0
0x2be PUSH1 0x40
0x2c0 MLOAD
0x2c1 DUP1
0x2c2 DUP4
0x2c3 SUB
0x2c4 DUP2
0x2c5 DUP6
0x2c6 DUP9
0x2c7 DUP9
0x2c8 CALL
0x2c9 SWAP4
0x2ca POP
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce ISZERO
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V177 = DIV V173 V172
0x2b6: V178 = ISZERO V177
0x2b7: V179 = MUL V178 0x8fc
0x2b9: V180 = 0x40
0x2bb: V181 = M[0x40]
0x2bc: V182 = 0x0
0x2be: V183 = 0x40
0x2c0: V184 = M[0x40]
0x2c3: V185 = SUB V181 V184
0x2c8: V186 = CALL V179 V170 V177 V184 V185 V184 0x0
0x2ce: V187 = ISZERO V186
0x2cf: V188 = ISZERO V187
0x2d0: V189 = 0x2d8
0x2d3: JUMPI 0x2d8 V188
---
Entry stack: [V11, 0x120, V68, S4, V170, 0x8fc, V172, V173]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x120, V68, S4]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x2b2]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V190 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x120, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V68, S0]

================================

Block 0x2d8
[0x2d8:0x2e4]
---
Predecessors: [0x2b2]
Successors: [0x26c]
---
0x2d8 JUMPDEST
0x2d9 DUP1
0x2da DUP1
0x2db PUSH1 0x1
0x2dd ADD
0x2de SWAP2
0x2df POP
0x2e0 POP
0x2e1 PUSH2 0x26c
0x2e4 JUMP
---
0x2d8: JUMPDEST 
0x2db: V191 = 0x1
0x2dd: V192 = ADD 0x1 S0
0x2e1: V193 = 0x26c
0x2e4: JUMP 0x26c
---
Entry stack: [V11, 0x120, V68, S0]
Stack pops: 1
Stack additions: [V192]
Exit stack: [V11, 0x120, V68, V192]

================================

Block 0x2e5
[0x2e5:0x337]
---
Predecessors: [0x26c]
Successors: [0x338, 0x33c]
---
0x2e5 JUMPDEST
0x2e6 CALLER
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd PUSH2 0x8fc
0x300 ADDRESS
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 BALANCE
0x318 SWAP1
0x319 DUP2
0x31a ISZERO
0x31b MUL
0x31c SWAP1
0x31d PUSH1 0x40
0x31f MLOAD
0x320 PUSH1 0x0
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP1
0x326 DUP4
0x327 SUB
0x328 DUP2
0x329 DUP6
0x32a DUP9
0x32b DUP9
0x32c CALL
0x32d SWAP4
0x32e POP
0x32f POP
0x330 POP
0x331 POP
0x332 ISZERO
0x333 ISZERO
0x334 PUSH2 0x33c
0x337 JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V194 = CALLER
0x2e7: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x2fd: V197 = 0x8fc
0x300: V198 = ADDRESS
0x301: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x317: V201 = BALANCE V200
0x31a: V202 = ISZERO V201
0x31b: V203 = MUL V202 0x8fc
0x31d: V204 = 0x40
0x31f: V205 = M[0x40]
0x320: V206 = 0x0
0x322: V207 = 0x40
0x324: V208 = M[0x40]
0x327: V209 = SUB V205 V208
0x32c: V210 = CALL V203 V196 V201 V208 V209 V208 0x0
0x332: V211 = ISZERO V210
0x333: V212 = ISZERO V211
0x334: V213 = 0x33c
0x337: JUMPI 0x33c V212
---
Entry stack: [V11, 0x120, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V68, S0]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x2e5]
Successors: []
---
0x338 PUSH1 0x0
0x33a DUP1
0x33b REVERT
---
0x338: V214 = 0x0
0x33b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x120, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120, V68, S0]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x2e5]
Successors: [0x120]
---
0x33c JUMPDEST
0x33d POP
0x33e POP
0x33f JUMP
---
0x33c: JUMPDEST 
0x33f: JUMP 0x120
---
Entry stack: [V11, 0x120, V68, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x340
[0x340:0x36b]
---
Predecessors: []
Successors: []
---
0x340 STOP
0x341 LOG1
0x342 PUSH6 0x627a7a723058
0x349 SHA3
0x34a MISSING 0xf
0x34b PUSH30 0x8ee899072781e34e489246682eb55b971f31db52c50f37d87a85bb02e4ad
0x36a STOP
0x36b MISSING 0x29
---
0x340: STOP 
0x341: LOG S0 S1 S2
0x342: V215 = 0x627a7a723058
0x349: V216 = SHA3 0x627a7a723058 S3
0x34a: MISSING 0xf
0x34b: V217 = 0x8ee899072781e34e489246682eb55b971f31db52c50f37d87a85bb02e4ad
0x36a: STOP 
0x36b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V216, 0x8ee899072781e34e489246682eb55b971f31db52c50f37d87a85bb02e4ad]
Exit stack: []

================================

Function 0:
Public function signature: 0x5b2a0e96
Entry block: 0x51
Exit block: 0x24e
Body: 0x51, 0x58, 0x5c, 0xd1, 0x122, 0x12d, 0x137, 0x160, 0x161, 0x228, 0x22c, 0x239, 0x23d, 0x24e, 0x252, 0x25f

Function 1:
Public function signature: 0xaafafbf3
Entry block: 0xd3
Exit block: 0x2d4
Body: 0xd3, 0x120, 0x266, 0x26c, 0x276, 0x282, 0x283, 0x2b1, 0x2b2, 0x2d4, 0x2d8, 0x2e5, 0x338, 0x33c

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

