Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xf2fde38b
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xf2fde38b
0x3c: V13 = EQ 0xf2fde38b V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4c]
---
Predecessors: [0xd]
Successors: [0x4d, 0x51]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 ISZERO
0x49 PUSH2 0x51
0x4c JUMPI
---
0x46: JUMPDEST 
0x47: V16 = CALLVALUE
0x48: V17 = ISZERO V16
0x49: V18 = 0x51
0x4c: JUMPI 0x51 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d
[0x4d:0x50]
---
Predecessors: [0x46]
Successors: []
---
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4d: V19 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x7c]
---
Predecessors: [0x46]
Successors: [0x7f]
---
0x51 JUMPDEST
0x52 PUSH2 0x7d
0x55 PUSH1 0x4
0x57 DUP1
0x58 DUP1
0x59 CALLDATALOAD
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 SWAP2
0x76 SWAP1
0x77 POP
0x78 POP
0x79 PUSH2 0x7f
0x7c JUMP
---
0x51: JUMPDEST 
0x52: V20 = 0x7d
0x55: V21 = 0x4
0x59: V22 = CALLDATALOAD 0x4
0x5a: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x71: V25 = 0x20
0x73: V26 = ADD 0x20 0x4
0x79: V27 = 0x7f
0x7c: JUMP 0x7f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7d, V24]
Exit stack: [V11, 0x7d, V24]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x115]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0xd4]
---
Predecessors: [0x51]
Successors: [0xd5, 0x115]
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 DUP1
0x83 SWAP1
0x84 SLOAD
0x85 SWAP1
0x86 PUSH2 0x100
0x89 EXP
0x8a SWAP1
0x8b DIV
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 CALLER
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce AND
0xcf EQ
0xd0 ISZERO
0xd1 PUSH2 0x115
0xd4 JUMPI
---
0x7f: JUMPDEST 
0x80: V28 = 0x0
0x84: V29 = S[0x0]
0x86: V30 = 0x100
0x89: V31 = EXP 0x100 0x0
0x8b: V32 = DIV V29 0x1
0x8c: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa2: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xb8: V37 = CALLER
0xb9: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xcf: V40 = EQ V39 V36
0xd0: V41 = ISZERO V40
0xd1: V42 = 0x115
0xd4: JUMPI 0x115 V41
---
Entry stack: [V11, 0x7d, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, V24]

================================

Block 0xd5
[0xd5:0x114]
---
Predecessors: [0x7f]
Successors: [0x115]
---
0xd5 DUP1
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 PUSH2 0x100
0xdc EXP
0xdd DUP2
0xde SLOAD
0xdf DUP2
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 MUL
0xf6 NOT
0xf7 AND
0xf8 SWAP1
0xf9 DUP4
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 MUL
0x111 OR
0x112 SWAP1
0x113 SSTORE
0x114 POP
---
0xd6: V43 = 0x0
0xd9: V44 = 0x100
0xdc: V45 = EXP 0x100 0x0
0xde: V46 = S[0x0]
0xe0: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V48 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf6: V49 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V50 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V46
0xfa: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x110: V53 = MUL V52 0x1
0x111: V54 = OR V53 V50
0x113: S[0x0] = V54
---
Entry stack: [V11, 0x7d, V24]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7d, V24]

================================

Block 0x115
[0x115:0x117]
---
Predecessors: [0x7f, 0xd5]
Successors: [0x7d]
---
0x115 JUMPDEST
0x116 POP
0x117 JUMP
---
0x115: JUMPDEST 
0x117: JUMP 0x7d
---
Entry stack: [V11, 0x7d, V24]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x118
[0x118:0x150]
---
Predecessors: []
Successors: [0x151]
---
0x118 STOP
0x119 LOG1
0x11a PUSH6 0x627a7a723058
0x121 SHA3
0x122 LOG4
0x123 MISSING 0xf6
0x124 PUSH8 0x9a2a2ecfbef397cf
0x12d SWAP5
0x12e MISSING 0x24
0x12f PUSH2 0xa13a
0x132 MISSING 0x26
0x133 MISSING 0xac
0x134 MISSING 0xa6
0x135 MISSING 0xbd
0x136 LOG4
0x137 CODECOPY
0x138 MISSING 0xe7
0x139 MISSING 0x4f
0x13a REVERT
0x13b MISSING 0xde
0x13c CREATE
0x13d ADDMOD
0x13e CODESIZE
0x13f BLOCKHASH
0x140 MISSING 0xc1
0x141 PUSH8 0x29606060405260
0x14a DIV
0x14b CALLDATASIZE
0x14c LT
0x14d PUSH2 0x62
0x150 JUMPI
---
0x118: STOP 
0x119: LOG S0 S1 S2
0x11a: V55 = 0x627a7a723058
0x121: V56 = SHA3 0x627a7a723058 S3
0x122: LOG V56 S4 S5 S6 S7 S8
0x123: MISSING 0xf6
0x124: V57 = 0x9a2a2ecfbef397cf
0x12e: MISSING 0x24
0x12f: V58 = 0xa13a
0x132: MISSING 0x26
0x133: MISSING 0xac
0x134: MISSING 0xa6
0x135: MISSING 0xbd
0x136: LOG S0 S1 S2 S3 S4 S5
0x137: CODECOPY S6 S7 S8
0x138: MISSING 0xe7
0x139: MISSING 0x4f
0x13a: REVERT S0 S1
0x13b: MISSING 0xde
0x13c: V59 = CREATE S0 S1 S2
0x13d: V60 = ADDMOD V59 S3 S4
0x13e: V61 = CODESIZE
0x13f: V62 = BLOCKHASH V61
0x140: MISSING 0xc1
0x141: V63 = 0x29606060405260
0x14a: V64 = DIV 0x29606060405260 S0
0x14b: V65 = CALLDATASIZE
0x14c: V66 = LT V65 V64
0x14d: V67 = 0x62
0x150: THROWI V66
---
Entry stack: []
Stack pops: 0
Stack additions: [S4, S0, S1, S2, S3, 0x9a2a2ecfbef397cf, 0xa13a, V62, V60]
Exit stack: []

================================

Block 0x151
[0x151:0x184]
---
Predecessors: [0x118]
Successors: [0x185]
---
0x151 PUSH1 0x0
0x153 CALLDATALOAD
0x154 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x172 SWAP1
0x173 DIV
0x174 PUSH4 0xffffffff
0x179 AND
0x17a DUP1
0x17b PUSH4 0x223c217b
0x180 EQ
0x181 PUSH2 0x67
0x184 JUMPI
---
0x151: V68 = 0x0
0x153: V69 = CALLDATALOAD 0x0
0x154: V70 = 0x100000000000000000000000000000000000000000000000000000000
0x173: V71 = DIV V69 0x100000000000000000000000000000000000000000000000000000000
0x174: V72 = 0xffffffff
0x179: V73 = AND 0xffffffff V71
0x17b: V74 = 0x223c217b
0x180: V75 = EQ 0x223c217b V73
0x181: V76 = 0x67
0x184: THROWI V75
---
Entry stack: []
Stack pops: 0
Stack additions: [V73]
Exit stack: [V73]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0x151]
Successors: [0x190]
---
0x185 DUP1
0x186 PUSH4 0x89476069
0x18b EQ
0x18c PUSH2 0xe0
0x18f JUMPI
---
0x186: V77 = 0x89476069
0x18b: V78 = EQ 0x89476069 V73
0x18c: V79 = 0xe0
0x18f: THROWI V78
---
Entry stack: [V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V73]

================================

Block 0x190
[0x190:0x19a]
---
Predecessors: [0x185]
Successors: [0x19b]
---
0x190 DUP1
0x191 PUSH4 0xb215814b
0x196 EQ
0x197 PUSH2 0x131
0x19a JUMPI
---
0x191: V80 = 0xb215814b
0x196: V81 = EQ 0xb215814b V73
0x197: V82 = 0x131
0x19a: THROWI V81
---
Entry stack: [V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V73]

================================

Block 0x19b
[0x19b:0x1a5]
---
Predecessors: [0x190]
Successors: [0x1a6]
---
0x19b DUP1
0x19c PUSH4 0xf2fde38b
0x1a1 EQ
0x1a2 PUSH2 0x1a1
0x1a5 JUMPI
---
0x19c: V83 = 0xf2fde38b
0x1a1: V84 = EQ 0xf2fde38b V73
0x1a2: V85 = 0x1a1
0x1a5: THROWI V84
---
Entry stack: [V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V73]

================================

Block 0x1a6
[0x1a6:0x1aa]
---
Predecessors: [0x19b]
Successors: []
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a6: JUMPDEST 
0x1a7: V86 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V73]
Stack pops: 0
Stack additions: []
Exit stack: [V73]

================================

Block 0x1ab
[0x1ab:0x1b1]
---
Predecessors: [0x73d]
Successors: [0x1b2]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad ISZERO
0x1ae PUSH2 0x72
0x1b1 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V87 = CALLVALUE
0x1ad: V88 = ISZERO V87
0x1ae: V89 = 0x72
0x1b1: THROWI V88
---
Entry stack: [V392]
Stack pops: 0
Stack additions: []
Exit stack: [V392]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1ab]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V90 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V392]
Stack pops: 0
Stack additions: []
Exit stack: [V392]

================================

Block 0x1b6
[0x1b6:0x22a]
---
Predecessors: [0x856]
Successors: [0x22b]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0xc6
0x1ba PUSH1 0x4
0x1bc DUP1
0x1bd DUP1
0x1be CALLDATALOAD
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 SWAP1
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP1
0x1da SWAP2
0x1db SWAP1
0x1dc DUP1
0x1dd CALLDATALOAD
0x1de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f3 AND
0x1f4 SWAP1
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP1
0x1f9 SWAP2
0x1fa SWAP1
0x1fb DUP1
0x1fc CALLDATALOAD
0x1fd SWAP1
0x1fe PUSH1 0x20
0x200 ADD
0x201 SWAP1
0x202 SWAP2
0x203 SWAP1
0x204 POP
0x205 POP
0x206 PUSH2 0x1da
0x209 JUMP
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d MLOAD
0x20e DUP1
0x20f DUP3
0x210 ISZERO
0x211 ISZERO
0x212 ISZERO
0x213 ISZERO
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP2
0x21a POP
0x21b POP
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 SWAP2
0x221 SUB
0x222 SWAP1
0x223 RETURN
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0xeb
0x22a JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V91 = 0xc6
0x1ba: V92 = 0x4
0x1be: V93 = CALLDATALOAD 0x4
0x1bf: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1d6: V96 = 0x20
0x1d8: V97 = ADD 0x20 0x4
0x1dd: V98 = CALLDATALOAD 0x24
0x1de: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1f5: V101 = 0x20
0x1f7: V102 = ADD 0x20 0x24
0x1fc: V103 = CALLDATALOAD 0x44
0x1fe: V104 = 0x20
0x200: V105 = ADD 0x20 0x44
0x206: V106 = 0x1da
0x209: THROW 
0x20a: JUMPDEST 
0x20b: V107 = 0x40
0x20d: V108 = M[0x40]
0x210: V109 = ISZERO S0
0x211: V110 = ISZERO V109
0x212: V111 = ISZERO V110
0x213: V112 = ISZERO V111
0x215: M[V108] = V112
0x216: V113 = 0x20
0x218: V114 = ADD 0x20 V108
0x21c: V115 = 0x40
0x21e: V116 = M[0x40]
0x221: V117 = SUB V114 V116
0x223: RETURN V116 V117
0x224: JUMPDEST 
0x225: V118 = CALLVALUE
0x226: V119 = ISZERO V118
0x227: V120 = 0xeb
0x22a: THROWI V119
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc6, V95, V100, V103]
Exit stack: []

================================

Block 0x22b
[0x22b:0x27b]
---
Predecessors: [0x1b6]
Successors: [0x27c]
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
0x22f JUMPDEST
0x230 PUSH2 0x117
0x233 PUSH1 0x4
0x235 DUP1
0x236 DUP1
0x237 CALLDATALOAD
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e SWAP1
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP1
0x253 SWAP2
0x254 SWAP1
0x255 POP
0x256 POP
0x257 PUSH2 0x301
0x25a JUMP
0x25b JUMPDEST
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP3
0x261 ISZERO
0x262 ISZERO
0x263 ISZERO
0x264 ISZERO
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x20
0x269 ADD
0x26a SWAP2
0x26b POP
0x26c POP
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 SWAP2
0x272 SUB
0x273 SWAP1
0x274 RETURN
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x13c
0x27b JUMPI
---
0x22b: V121 = 0x0
0x22e: REVERT 0x0 0x0
0x22f: JUMPDEST 
0x230: V122 = 0x117
0x233: V123 = 0x4
0x237: V124 = CALLDATALOAD 0x4
0x238: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x24f: V127 = 0x20
0x251: V128 = ADD 0x20 0x4
0x257: V129 = 0x301
0x25a: THROW 
0x25b: JUMPDEST 
0x25c: V130 = 0x40
0x25e: V131 = M[0x40]
0x261: V132 = ISZERO S0
0x262: V133 = ISZERO V132
0x263: V134 = ISZERO V133
0x264: V135 = ISZERO V134
0x266: M[V131] = V135
0x267: V136 = 0x20
0x269: V137 = ADD 0x20 V131
0x26d: V138 = 0x40
0x26f: V139 = M[0x40]
0x272: V140 = SUB V137 V139
0x274: RETURN V139 V140
0x275: JUMPDEST 
0x276: V141 = CALLVALUE
0x277: V142 = ISZERO V141
0x278: V143 = 0x13c
0x27b: THROWI V142
---
Entry stack: []
Stack pops: 0
Stack additions: [V126, 0x117]
Exit stack: []

================================

Block 0x27c
[0x27c:0x2eb]
---
Predecessors: [0x22b]
Successors: [0x2ec]
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
0x280 JUMPDEST
0x281 PUSH2 0x187
0x284 PUSH1 0x4
0x286 DUP1
0x287 DUP1
0x288 CALLDATALOAD
0x289 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29e AND
0x29f SWAP1
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 SWAP1
0x2a4 SWAP2
0x2a5 SWAP1
0x2a6 DUP1
0x2a7 CALLDATALOAD
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be SWAP1
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 SWAP1
0x2c5 POP
0x2c6 POP
0x2c7 PUSH2 0x3f4
0x2ca JUMP
0x2cb JUMPDEST
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 DUP3
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 ISZERO
0x2d4 ISZERO
0x2d5 DUP2
0x2d6 MSTORE
0x2d7 PUSH1 0x20
0x2d9 ADD
0x2da SWAP2
0x2db POP
0x2dc POP
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 SWAP2
0x2e2 SUB
0x2e3 SWAP1
0x2e4 RETURN
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 ISZERO
0x2e8 PUSH2 0x1ac
0x2eb JUMPI
---
0x27c: V144 = 0x0
0x27f: REVERT 0x0 0x0
0x280: JUMPDEST 
0x281: V145 = 0x187
0x284: V146 = 0x4
0x288: V147 = CALLDATALOAD 0x4
0x289: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x2a0: V150 = 0x20
0x2a2: V151 = ADD 0x20 0x4
0x2a7: V152 = CALLDATALOAD 0x24
0x2a8: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2bf: V155 = 0x20
0x2c1: V156 = ADD 0x20 0x24
0x2c7: V157 = 0x3f4
0x2ca: THROW 
0x2cb: JUMPDEST 
0x2cc: V158 = 0x40
0x2ce: V159 = M[0x40]
0x2d1: V160 = ISZERO S0
0x2d2: V161 = ISZERO V160
0x2d3: V162 = ISZERO V161
0x2d4: V163 = ISZERO V162
0x2d6: M[V159] = V163
0x2d7: V164 = 0x20
0x2d9: V165 = ADD 0x20 V159
0x2dd: V166 = 0x40
0x2df: V167 = M[0x40]
0x2e2: V168 = SUB V165 V167
0x2e4: RETURN V167 V168
0x2e5: JUMPDEST 
0x2e6: V169 = CALLVALUE
0x2e7: V170 = ISZERO V169
0x2e8: V171 = 0x1ac
0x2eb: THROWI V170
---
Entry stack: []
Stack pops: 0
Stack additions: [V154, V149, 0x187]
Exit stack: []

================================

Block 0x2ec
[0x2ec:0x375]
---
Predecessors: [0x27c]
Successors: [0x376]
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
0x2f0 JUMPDEST
0x2f1 PUSH2 0x1d8
0x2f4 PUSH1 0x4
0x2f6 DUP1
0x2f7 DUP1
0x2f8 CALLDATALOAD
0x2f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30e AND
0x30f SWAP1
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP1
0x314 SWAP2
0x315 SWAP1
0x316 POP
0x317 POP
0x318 PUSH2 0x4e8
0x31b JUMP
0x31c JUMPDEST
0x31d STOP
0x31e JUMPDEST
0x31f PUSH1 0x0
0x321 DUP1
0x322 PUSH1 0x0
0x324 SWAP1
0x325 SLOAD
0x326 SWAP1
0x327 PUSH2 0x100
0x32a EXP
0x32b SWAP1
0x32c DIV
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x358 AND
0x359 CALLER
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 EQ
0x371 ISZERO
0x372 PUSH2 0x2fa
0x375 JUMPI
---
0x2ec: V172 = 0x0
0x2ef: REVERT 0x0 0x0
0x2f0: JUMPDEST 
0x2f1: V173 = 0x1d8
0x2f4: V174 = 0x4
0x2f8: V175 = CALLDATALOAD 0x4
0x2f9: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x30e: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x310: V178 = 0x20
0x312: V179 = ADD 0x20 0x4
0x318: V180 = 0x4e8
0x31b: THROW 
0x31c: JUMPDEST 
0x31d: STOP 
0x31e: JUMPDEST 
0x31f: V181 = 0x0
0x322: V182 = 0x0
0x325: V183 = S[0x0]
0x327: V184 = 0x100
0x32a: V185 = EXP 0x100 0x0
0x32c: V186 = DIV V183 0x1
0x32d: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x343: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x358: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x359: V191 = CALLER
0x35a: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x370: V194 = EQ V193 V190
0x371: V195 = ISZERO V194
0x372: V196 = 0x2fa
0x375: THROWI V195
---
Entry stack: []
Stack pops: 0
Stack additions: [V177, 0x1d8, 0x0]
Exit stack: []

================================

Block 0x376
[0x376:0x41b]
---
Predecessors: [0x2ec]
Successors: [0x41c]
---
0x376 DUP4
0x377 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38c AND
0x38d PUSH4 0xa9059cbb
0x392 DUP5
0x393 DUP5
0x394 PUSH1 0x0
0x396 PUSH1 0x40
0x398 MLOAD
0x399 PUSH1 0x20
0x39b ADD
0x39c MSTORE
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 DUP4
0x3a1 PUSH4 0xffffffff
0x3a6 AND
0x3a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3c5 MUL
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 PUSH1 0x4
0x3ca ADD
0x3cb DUP1
0x3cc DUP4
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe DUP3
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP3
0x405 POP
0x406 POP
0x407 POP
0x408 PUSH1 0x20
0x40a PUSH1 0x40
0x40c MLOAD
0x40d DUP1
0x40e DUP4
0x40f SUB
0x410 DUP2
0x411 PUSH1 0x0
0x413 DUP8
0x414 DUP1
0x415 EXTCODESIZE
0x416 ISZERO
0x417 ISZERO
0x418 PUSH2 0x2dc
0x41b JUMPI
---
0x377: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x38c: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x38d: V199 = 0xa9059cbb
0x394: V200 = 0x0
0x396: V201 = 0x40
0x398: V202 = M[0x40]
0x399: V203 = 0x20
0x39b: V204 = ADD 0x20 V202
0x39c: M[V204] = 0x0
0x39d: V205 = 0x40
0x39f: V206 = M[0x40]
0x3a1: V207 = 0xffffffff
0x3a6: V208 = AND 0xffffffff 0xa9059cbb
0x3a7: V209 = 0x100000000000000000000000000000000000000000000000000000000
0x3c5: V210 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3c7: M[V206] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c8: V211 = 0x4
0x3ca: V212 = ADD 0x4 V206
0x3cd: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x3e3: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3fa: M[V212] = V216
0x3fb: V217 = 0x20
0x3fd: V218 = ADD 0x20 V212
0x400: M[V218] = S1
0x401: V219 = 0x20
0x403: V220 = ADD 0x20 V218
0x408: V221 = 0x20
0x40a: V222 = 0x40
0x40c: V223 = M[0x40]
0x40f: V224 = SUB V220 V223
0x411: V225 = 0x0
0x415: V226 = EXTCODESIZE V198
0x416: V227 = ISZERO V226
0x417: V228 = ISZERO V227
0x418: V229 = 0x2dc
0x41b: THROWI V228
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V198, 0xa9059cbb, V220, 0x20, V223, V224, V223, 0x0, V198]
Exit stack: [S2, S1, S0, 0x0, V198, 0xa9059cbb, V220, 0x20, V223, V224, V223, 0x0, V198]

================================

Block 0x41c
[0x41c:0x42c]
---
Predecessors: [0x376]
Successors: [0x42d]
---
0x41c PUSH1 0x0
0x41e DUP1
0x41f REVERT
0x420 JUMPDEST
0x421 PUSH2 0x2c6
0x424 GAS
0x425 SUB
0x426 CALL
0x427 ISZERO
0x428 ISZERO
0x429 PUSH2 0x2ed
0x42c JUMPI
---
0x41c: V230 = 0x0
0x41f: REVERT 0x0 0x0
0x420: JUMPDEST 
0x421: V231 = 0x2c6
0x424: V232 = GAS
0x425: V233 = SUB V232 0x2c6
0x426: V234 = CALL V233 S0 S1 S2 S3 S4 S5
0x427: V235 = ISZERO V234
0x428: V236 = ISZERO V235
0x429: V237 = 0x2ed
0x42c: THROWI V236
---
Entry stack: [S12, S11, S10, 0x0, V198, 0xa9059cbb, V220, 0x20, V223, V224, V223, 0x0, V198]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42d
[0x42d:0x43d]
---
Predecessors: [0x41c]
Successors: [0x43e]
---
0x42d PUSH1 0x0
0x42f DUP1
0x430 REVERT
0x431 JUMPDEST
0x432 POP
0x433 POP
0x434 POP
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP1
0x439 MLOAD
0x43a SWAP1
0x43b POP
0x43c SWAP1
0x43d POP
---
0x42d: V238 = 0x0
0x430: REVERT 0x0 0x0
0x431: JUMPDEST 
0x435: V239 = 0x40
0x437: V240 = M[0x40]
0x439: V241 = M[V240]
---
Entry stack: []
Stack pops: 0
Stack additions: [V241]
Exit stack: []

================================

Block 0x43e
[0x43e:0x50c]
---
Predecessors: [0x42d]
Successors: [0x50d]
---
0x43e JUMPDEST
0x43f SWAP4
0x440 SWAP3
0x441 POP
0x442 POP
0x443 POP
0x444 JUMP
0x445 JUMPDEST
0x446 PUSH1 0x0
0x448 PUSH2 0x3ed
0x44b DUP3
0x44c CALLER
0x44d DUP5
0x44e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x463 AND
0x464 PUSH4 0x70a08231
0x469 PUSH1 0x1
0x46b PUSH1 0x0
0x46d SWAP1
0x46e SLOAD
0x46f SWAP1
0x470 PUSH2 0x100
0x473 EXP
0x474 SWAP1
0x475 DIV
0x476 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48b AND
0x48c PUSH1 0x0
0x48e PUSH1 0x40
0x490 MLOAD
0x491 PUSH1 0x20
0x493 ADD
0x494 MSTORE
0x495 PUSH1 0x40
0x497 MLOAD
0x498 DUP3
0x499 PUSH4 0xffffffff
0x49e AND
0x49f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4bd MUL
0x4be DUP2
0x4bf MSTORE
0x4c0 PUSH1 0x4
0x4c2 ADD
0x4c3 DUP1
0x4c4 DUP3
0x4c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4da AND
0x4db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f0 AND
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 PUSH1 0x20
0x4f5 ADD
0x4f6 SWAP2
0x4f7 POP
0x4f8 POP
0x4f9 PUSH1 0x20
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe DUP1
0x4ff DUP4
0x500 SUB
0x501 DUP2
0x502 PUSH1 0x0
0x504 DUP8
0x505 DUP1
0x506 EXTCODESIZE
0x507 ISZERO
0x508 ISZERO
0x509 PUSH2 0x3cd
0x50c JUMPI
---
0x43e: JUMPDEST 
0x444: JUMP S4
0x445: JUMPDEST 
0x446: V242 = 0x0
0x448: V243 = 0x3ed
0x44c: V244 = CALLER
0x44e: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x463: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x464: V247 = 0x70a08231
0x469: V248 = 0x1
0x46b: V249 = 0x0
0x46e: V250 = S[0x1]
0x470: V251 = 0x100
0x473: V252 = EXP 0x100 0x0
0x475: V253 = DIV V250 0x1
0x476: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x48c: V256 = 0x0
0x48e: V257 = 0x40
0x490: V258 = M[0x40]
0x491: V259 = 0x20
0x493: V260 = ADD 0x20 V258
0x494: M[V260] = 0x0
0x495: V261 = 0x40
0x497: V262 = M[0x40]
0x499: V263 = 0xffffffff
0x49e: V264 = AND 0xffffffff 0x70a08231
0x49f: V265 = 0x100000000000000000000000000000000000000000000000000000000
0x4bd: V266 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x4bf: M[V262] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4c0: V267 = 0x4
0x4c2: V268 = ADD 0x4 V262
0x4c5: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x4da: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4db: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x4f2: M[V268] = V272
0x4f3: V273 = 0x20
0x4f5: V274 = ADD 0x20 V268
0x4f9: V275 = 0x20
0x4fb: V276 = 0x40
0x4fd: V277 = M[0x40]
0x500: V278 = SUB V274 V277
0x502: V279 = 0x0
0x506: V280 = EXTCODESIZE V246
0x507: V281 = ISZERO V280
0x508: V282 = ISZERO V281
0x509: V283 = 0x3cd
0x50c: THROWI V282
---
Entry stack: [V241]
Stack pops: 9
Stack additions: [V246, 0x0, V277, V278, V277, 0x20, V274, 0x70a08231, V246, V244, S0, 0x3ed, 0x0, S0]
Exit stack: []

================================

Block 0x50d
[0x50d:0x51d]
---
Predecessors: [0x43e]
Successors: [0x51e]
---
0x50d PUSH1 0x0
0x50f DUP1
0x510 REVERT
0x511 JUMPDEST
0x512 PUSH2 0x2c6
0x515 GAS
0x516 SUB
0x517 CALL
0x518 ISZERO
0x519 ISZERO
0x51a PUSH2 0x3de
0x51d JUMPI
---
0x50d: V284 = 0x0
0x510: REVERT 0x0 0x0
0x511: JUMPDEST 
0x512: V285 = 0x2c6
0x515: V286 = GAS
0x516: V287 = SUB V286 0x2c6
0x517: V288 = CALL V287 S0 S1 S2 S3 S4 S5
0x518: V289 = ISZERO V288
0x519: V290 = ISZERO V289
0x51a: V291 = 0x3de
0x51d: THROWI V290
---
Entry stack: [S13, 0x0, 0x3ed, S10, V244, V246, 0x70a08231, V274, 0x20, V277, V278, V277, 0x0, V246]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x51e
[0x51e:0x5ff]
---
Predecessors: [0x50d]
Successors: [0x600]
---
0x51e PUSH1 0x0
0x520 DUP1
0x521 REVERT
0x522 JUMPDEST
0x523 POP
0x524 POP
0x525 POP
0x526 PUSH1 0x40
0x528 MLOAD
0x529 DUP1
0x52a MLOAD
0x52b SWAP1
0x52c POP
0x52d PUSH2 0x1da
0x530 JUMP
0x531 JUMPDEST
0x532 SWAP1
0x533 POP
0x534 SWAP2
0x535 SWAP1
0x536 POP
0x537 JUMP
0x538 JUMPDEST
0x539 PUSH1 0x0
0x53b PUSH2 0x4e0
0x53e DUP4
0x53f DUP4
0x540 DUP6
0x541 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x556 AND
0x557 PUSH4 0x70a08231
0x55c PUSH1 0x1
0x55e PUSH1 0x0
0x560 SWAP1
0x561 SLOAD
0x562 SWAP1
0x563 PUSH2 0x100
0x566 EXP
0x567 SWAP1
0x568 DIV
0x569 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57e AND
0x57f PUSH1 0x0
0x581 PUSH1 0x40
0x583 MLOAD
0x584 PUSH1 0x20
0x586 ADD
0x587 MSTORE
0x588 PUSH1 0x40
0x58a MLOAD
0x58b DUP3
0x58c PUSH4 0xffffffff
0x591 AND
0x592 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5b0 MUL
0x5b1 DUP2
0x5b2 MSTORE
0x5b3 PUSH1 0x4
0x5b5 ADD
0x5b6 DUP1
0x5b7 DUP3
0x5b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cd AND
0x5ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e3 AND
0x5e4 DUP2
0x5e5 MSTORE
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 SWAP2
0x5ea POP
0x5eb POP
0x5ec PUSH1 0x20
0x5ee PUSH1 0x40
0x5f0 MLOAD
0x5f1 DUP1
0x5f2 DUP4
0x5f3 SUB
0x5f4 DUP2
0x5f5 PUSH1 0x0
0x5f7 DUP8
0x5f8 DUP1
0x5f9 EXTCODESIZE
0x5fa ISZERO
0x5fb ISZERO
0x5fc PUSH2 0x4c0
0x5ff JUMPI
---
0x51e: V292 = 0x0
0x521: REVERT 0x0 0x0
0x522: JUMPDEST 
0x526: V293 = 0x40
0x528: V294 = M[0x40]
0x52a: V295 = M[V294]
0x52d: V296 = 0x1da
0x530: THROW 
0x531: JUMPDEST 
0x537: JUMP S3
0x538: JUMPDEST 
0x539: V297 = 0x0
0x53b: V298 = 0x4e0
0x541: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x556: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x557: V301 = 0x70a08231
0x55c: V302 = 0x1
0x55e: V303 = 0x0
0x561: V304 = S[0x1]
0x563: V305 = 0x100
0x566: V306 = EXP 0x100 0x0
0x568: V307 = DIV V304 0x1
0x569: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x57f: V310 = 0x0
0x581: V311 = 0x40
0x583: V312 = M[0x40]
0x584: V313 = 0x20
0x586: V314 = ADD 0x20 V312
0x587: M[V314] = 0x0
0x588: V315 = 0x40
0x58a: V316 = M[0x40]
0x58c: V317 = 0xffffffff
0x591: V318 = AND 0xffffffff 0x70a08231
0x592: V319 = 0x100000000000000000000000000000000000000000000000000000000
0x5b0: V320 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x5b2: M[V316] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5b3: V321 = 0x4
0x5b5: V322 = ADD 0x4 V316
0x5b8: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x5ce: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x5e5: M[V322] = V326
0x5e6: V327 = 0x20
0x5e8: V328 = ADD 0x20 V322
0x5ec: V329 = 0x20
0x5ee: V330 = 0x40
0x5f0: V331 = M[0x40]
0x5f3: V332 = SUB V328 V331
0x5f5: V333 = 0x0
0x5f9: V334 = EXTCODESIZE V300
0x5fa: V335 = ISZERO V334
0x5fb: V336 = ISZERO V335
0x5fc: V337 = 0x4c0
0x5ff: THROWI V336
---
Entry stack: []
Stack pops: 0
Stack additions: [V295, S0, V300, 0x0, V331, V332, V331, 0x20, V328, 0x70a08231, V300, S0, S1, 0x4e0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x600
[0x600:0x610]
---
Predecessors: [0x51e]
Successors: [0x611]
---
0x600 PUSH1 0x0
0x602 DUP1
0x603 REVERT
0x604 JUMPDEST
0x605 PUSH2 0x2c6
0x608 GAS
0x609 SUB
0x60a CALL
0x60b ISZERO
0x60c ISZERO
0x60d PUSH2 0x4d1
0x610 JUMPI
---
0x600: V338 = 0x0
0x603: REVERT 0x0 0x0
0x604: JUMPDEST 
0x605: V339 = 0x2c6
0x608: V340 = GAS
0x609: V341 = SUB V340 0x2c6
0x60a: V342 = CALL V341 S0 S1 S2 S3 S4 S5
0x60b: V343 = ISZERO V342
0x60c: V344 = ISZERO V343
0x60d: V345 = 0x4d1
0x610: THROWI V344
---
Entry stack: [S14, S13, 0x0, 0x4e0, S10, S9, V300, 0x70a08231, V328, 0x20, V331, V332, V331, 0x0, V300]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x611
[0x611:0x681]
---
Predecessors: [0x600]
Successors: [0x682]
---
0x611 PUSH1 0x0
0x613 DUP1
0x614 REVERT
0x615 JUMPDEST
0x616 POP
0x617 POP
0x618 POP
0x619 PUSH1 0x40
0x61b MLOAD
0x61c DUP1
0x61d MLOAD
0x61e SWAP1
0x61f POP
0x620 PUSH2 0x1da
0x623 JUMP
0x624 JUMPDEST
0x625 SWAP1
0x626 POP
0x627 SWAP3
0x628 SWAP2
0x629 POP
0x62a POP
0x62b JUMP
0x62c JUMPDEST
0x62d PUSH1 0x0
0x62f DUP1
0x630 SWAP1
0x631 SLOAD
0x632 SWAP1
0x633 PUSH2 0x100
0x636 EXP
0x637 SWAP1
0x638 DIV
0x639 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64e AND
0x64f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x664 AND
0x665 CALLER
0x666 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67b AND
0x67c EQ
0x67d ISZERO
0x67e PUSH2 0x57e
0x681 JUMPI
---
0x611: V346 = 0x0
0x614: REVERT 0x0 0x0
0x615: JUMPDEST 
0x619: V347 = 0x40
0x61b: V348 = M[0x40]
0x61d: V349 = M[V348]
0x620: V350 = 0x1da
0x623: THROW 
0x624: JUMPDEST 
0x62b: JUMP S4
0x62c: JUMPDEST 
0x62d: V351 = 0x0
0x631: V352 = S[0x0]
0x633: V353 = 0x100
0x636: V354 = EXP 0x100 0x0
0x638: V355 = DIV V352 0x1
0x639: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x64f: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x664: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x665: V360 = CALLER
0x666: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x67b: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x67c: V363 = EQ V362 V359
0x67d: V364 = ISZERO V363
0x67e: V365 = 0x57e
0x681: THROWI V364
---
Entry stack: []
Stack pops: 0
Stack additions: [V349, S0]
Exit stack: []

================================

Block 0x682
[0x682:0x6c1]
---
Predecessors: [0x611]
Successors: [0x6c2]
---
0x682 DUP1
0x683 PUSH1 0x0
0x685 DUP1
0x686 PUSH2 0x100
0x689 EXP
0x68a DUP2
0x68b SLOAD
0x68c DUP2
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 MUL
0x6a3 NOT
0x6a4 AND
0x6a5 SWAP1
0x6a6 DUP4
0x6a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bc AND
0x6bd MUL
0x6be OR
0x6bf SWAP1
0x6c0 SSTORE
0x6c1 POP
---
0x683: V366 = 0x0
0x686: V367 = 0x100
0x689: V368 = EXP 0x100 0x0
0x68b: V369 = S[0x0]
0x68d: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V371 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6a3: V372 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V373 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V369
0x6a7: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6bd: V376 = MUL V375 0x1
0x6be: V377 = OR V376 V373
0x6c0: S[0x0] = V377
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x6c2
[0x6c2:0x6fd]
---
Predecessors: [0x682]
Successors: [0x6fe]
---
0x6c2 JUMPDEST
0x6c3 POP
0x6c4 JUMP
0x6c5 STOP
0x6c6 LOG1
0x6c7 PUSH6 0x627a7a723058
0x6ce SHA3
0x6cf MSIZE
0x6d0 MISSING 0xd6
0x6d1 MISSING 0xe7
0x6d2 MISSING 0x1f
0x6d3 MISSING 0xa7
0x6d4 PUSH30 0x4d49f45eaab0f964245a0e27fa62824bd10820aa9324ffdbf4d00296060
0x6f3 PUSH1 0x40
0x6f5 MSTORE
0x6f6 PUSH1 0x4
0x6f8 CALLDATASIZE
0x6f9 LT
0x6fa PUSH2 0xdb
0x6fd JUMPI
---
0x6c2: JUMPDEST 
0x6c4: JUMP S1
0x6c5: STOP 
0x6c6: LOG S0 S1 S2
0x6c7: V378 = 0x627a7a723058
0x6ce: V379 = SHA3 0x627a7a723058 S3
0x6cf: V380 = MSIZE
0x6d0: MISSING 0xd6
0x6d1: MISSING 0xe7
0x6d2: MISSING 0x1f
0x6d3: MISSING 0xa7
0x6d4: V381 = 0x4d49f45eaab0f964245a0e27fa62824bd10820aa9324ffdbf4d00296060
0x6f3: V382 = 0x40
0x6f5: M[0x40] = 0x4d49f45eaab0f964245a0e27fa62824bd10820aa9324ffdbf4d00296060
0x6f6: V383 = 0x4
0x6f8: V384 = CALLDATASIZE
0x6f9: V385 = LT V384 0x4
0x6fa: V386 = 0xdb
0x6fd: THROWI V385
---
Entry stack: [S0]
Stack pops: 112
Stack additions: []
Exit stack: []

================================

Block 0x6fe
[0x6fe:0x731]
---
Predecessors: [0x6c2]
Successors: [0x732]
---
0x6fe PUSH1 0x0
0x700 CALLDATALOAD
0x701 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x71f SWAP1
0x720 DIV
0x721 PUSH4 0xffffffff
0x726 AND
0x727 DUP1
0x728 PUSH4 0x223c217b
0x72d EQ
0x72e PUSH2 0xe5
0x731 JUMPI
---
0x6fe: V387 = 0x0
0x700: V388 = CALLDATALOAD 0x0
0x701: V389 = 0x100000000000000000000000000000000000000000000000000000000
0x720: V390 = DIV V388 0x100000000000000000000000000000000000000000000000000000000
0x721: V391 = 0xffffffff
0x726: V392 = AND 0xffffffff V390
0x728: V393 = 0x223c217b
0x72d: V394 = EQ 0x223c217b V392
0x72e: V395 = 0xe5
0x731: THROWI V394
---
Entry stack: []
Stack pops: 0
Stack additions: [V392]
Exit stack: [V392]

================================

Block 0x732
[0x732:0x73c]
---
Predecessors: [0x6fe]
Successors: [0x73d]
---
0x732 DUP1
0x733 PUSH4 0x3ee2d7c2
0x738 EQ
0x739 PUSH2 0x15e
0x73c JUMPI
---
0x733: V396 = 0x3ee2d7c2
0x738: V397 = EQ 0x3ee2d7c2 V392
0x739: V398 = 0x15e
0x73c: THROWI V397
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x73d
[0x73d:0x747]
---
Predecessors: [0x732]
Successors: [0x1ab, 0x748]
---
0x73d DUP1
0x73e PUSH4 0x41c0e1b5
0x743 EQ
0x744 PUSH2 0x1ab
0x747 JUMPI
---
0x73e: V399 = 0x41c0e1b5
0x743: V400 = EQ 0x41c0e1b5 V392
0x744: V401 = 0x1ab
0x747: JUMPI 0x1ab V400
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x748
[0x748:0x752]
---
Predecessors: [0x73d]
Successors: [0x753]
---
0x748 DUP1
0x749 PUSH4 0x7c65f503
0x74e EQ
0x74f PUSH2 0x1c0
0x752 JUMPI
---
0x749: V402 = 0x7c65f503
0x74e: V403 = EQ 0x7c65f503 V392
0x74f: V404 = 0x1c0
0x752: THROWI V403
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x753
[0x753:0x75d]
---
Predecessors: [0x748]
Successors: [0x75e]
---
0x753 DUP1
0x754 PUSH4 0x893d20e8
0x759 EQ
0x75a PUSH2 0x1ca
0x75d JUMPI
---
0x754: V405 = 0x893d20e8
0x759: V406 = EQ 0x893d20e8 V392
0x75a: V407 = 0x1ca
0x75d: THROWI V406
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x75e
[0x75e:0x768]
---
Predecessors: [0x753]
Successors: [0x769]
---
0x75e DUP1
0x75f PUSH4 0x89476069
0x764 EQ
0x765 PUSH2 0x21f
0x768 JUMPI
---
0x75f: V408 = 0x89476069
0x764: V409 = EQ 0x89476069 V392
0x765: V410 = 0x21f
0x768: THROWI V409
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x769
[0x769:0x773]
---
Predecessors: [0x75e]
Successors: [0x774]
---
0x769 DUP1
0x76a PUSH4 0x8cf49cad
0x76f EQ
0x770 PUSH2 0x270
0x773 JUMPI
---
0x76a: V411 = 0x8cf49cad
0x76f: V412 = EQ 0x8cf49cad V392
0x770: V413 = 0x270
0x773: THROWI V412
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x774
[0x774:0x77e]
---
Predecessors: [0x769]
Successors: [0x77f]
---
0x774 DUP1
0x775 PUSH4 0xb215814b
0x77a EQ
0x77b PUSH2 0x299
0x77e JUMPI
---
0x775: V414 = 0xb215814b
0x77a: V415 = EQ 0xb215814b V392
0x77b: V416 = 0x299
0x77e: THROWI V415
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x77f
[0x77f:0x789]
---
Predecessors: [0x774]
Successors: [0x78a]
---
0x77f DUP1
0x780 PUSH4 0xbe3eac25
0x785 EQ
0x786 PUSH2 0x309
0x789 JUMPI
---
0x780: V417 = 0xbe3eac25
0x785: V418 = EQ 0xbe3eac25 V392
0x786: V419 = 0x309
0x789: THROWI V418
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x78a
[0x78a:0x794]
---
Predecessors: [0x77f]
Successors: [0x795]
---
0x78a DUP1
0x78b PUSH4 0xc635a9f2
0x790 EQ
0x791 PUSH2 0x336
0x794 JUMPI
---
0x78b: V420 = 0xc635a9f2
0x790: V421 = EQ 0xc635a9f2 V392
0x791: V422 = 0x336
0x794: THROWI V421
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x795
[0x795:0x79f]
---
Predecessors: [0x78a]
Successors: [0x7a0]
---
0x795 DUP1
0x796 PUSH4 0xcfa4f3e8
0x79b EQ
0x79c PUSH2 0x35f
0x79f JUMPI
---
0x796: V423 = 0xcfa4f3e8
0x79b: V424 = EQ 0xcfa4f3e8 V392
0x79c: V425 = 0x35f
0x79f: THROWI V424
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x7a0
[0x7a0:0x7aa]
---
Predecessors: [0x795]
Successors: [0x7ab]
---
0x7a0 DUP1
0x7a1 PUSH4 0xd0e30db0
0x7a6 EQ
0x7a7 PUSH2 0x382
0x7aa JUMPI
---
0x7a1: V426 = 0xd0e30db0
0x7a6: V427 = EQ 0xd0e30db0 V392
0x7a7: V428 = 0x382
0x7aa: THROWI V427
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x7ab
[0x7ab:0x7b5]
---
Predecessors: [0x7a0]
Successors: [0x7b6]
---
0x7ab DUP1
0x7ac PUSH4 0xf2fde38b
0x7b1 EQ
0x7b2 PUSH2 0x38c
0x7b5 JUMPI
---
0x7ac: V429 = 0xf2fde38b
0x7b1: V430 = EQ 0xf2fde38b V392
0x7b2: V431 = 0x38c
0x7b5: THROWI V430
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x7b6
[0x7b6:0x7c0]
---
Predecessors: [0x7ab]
Successors: [0x7c1]
---
0x7b6 DUP1
0x7b7 PUSH4 0xf3fef3a3
0x7bc EQ
0x7bd PUSH2 0x3c5
0x7c0 JUMPI
---
0x7b7: V432 = 0xf3fef3a3
0x7bc: V433 = EQ 0xf3fef3a3 V392
0x7bd: V434 = 0x3c5
0x7c0: THROWI V433
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x7c1
[0x7c1:0x7cb]
---
Predecessors: [0x7b6]
Successors: [0x7cc]
---
0x7c1 DUP1
0x7c2 PUSH4 0xf83d08ba
0x7c7 EQ
0x7c8 PUSH2 0x407
0x7cb JUMPI
---
0x7c2: V435 = 0xf83d08ba
0x7c7: V436 = EQ 0xf83d08ba V392
0x7c8: V437 = 0x407
0x7cb: THROWI V436
---
Entry stack: [V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V392]

================================

Block 0x7cc
[0x7cc:0x7dc]
---
Predecessors: [0x7c1]
Successors: [0x7dd]
---
0x7cc JUMPDEST
0x7cd PUSH2 0xe3
0x7d0 PUSH2 0x41c
0x7d3 JUMP
0x7d4 JUMPDEST
0x7d5 STOP
0x7d6 JUMPDEST
0x7d7 CALLVALUE
0x7d8 ISZERO
0x7d9 PUSH2 0xf0
0x7dc JUMPI
---
0x7cc: JUMPDEST 
0x7cd: V438 = 0xe3
0x7d0: V439 = 0x41c
0x7d3: THROW 
0x7d4: JUMPDEST 
0x7d5: STOP 
0x7d6: JUMPDEST 
0x7d7: V440 = CALLVALUE
0x7d8: V441 = ISZERO V440
0x7d9: V442 = 0xf0
0x7dc: THROWI V441
---
Entry stack: [V392]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: []

================================

Block 0x7dd
[0x7dd:0x834]
---
Predecessors: [0x7cc]
Successors: []
---
0x7dd PUSH1 0x0
0x7df DUP1
0x7e0 REVERT
0x7e1 JUMPDEST
0x7e2 PUSH2 0x144
0x7e5 PUSH1 0x4
0x7e7 DUP1
0x7e8 DUP1
0x7e9 CALLDATALOAD
0x7ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ff AND
0x800 SWAP1
0x801 PUSH1 0x20
0x803 ADD
0x804 SWAP1
0x805 SWAP2
0x806 SWAP1
0x807 DUP1
0x808 CALLDATALOAD
0x809 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81e AND
0x81f SWAP1
0x820 PUSH1 0x20
0x822 ADD
0x823 SWAP1
0x824 SWAP2
0x825 SWAP1
0x826 DUP1
0x827 CALLDATALOAD
0x828 SWAP1
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP1
0x82d SWAP2
0x82e SWAP1
0x82f POP
0x830 POP
0x831 PUSH2 0x4d4
0x834 JUMP
---
0x7dd: V443 = 0x0
0x7e0: REVERT 0x0 0x0
0x7e1: JUMPDEST 
0x7e2: V444 = 0x144
0x7e5: V445 = 0x4
0x7e9: V446 = CALLDATALOAD 0x4
0x7ea: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ff: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x801: V449 = 0x20
0x803: V450 = ADD 0x20 0x4
0x808: V451 = CALLDATALOAD 0x24
0x809: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x81e: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x820: V454 = 0x20
0x822: V455 = ADD 0x20 0x24
0x827: V456 = CALLDATALOAD 0x44
0x829: V457 = 0x20
0x82b: V458 = ADD 0x20 0x44
0x831: V459 = 0x4d4
0x834: THROW 
---
Entry stack: []
Stack pops: 0
Stack additions: [V456, V453, V448, 0x144]
Exit stack: []

================================

Block 0x835
[0x835:0x855]
---
Predecessors: [0xded]
Successors: [0x856]
---
0x835 JUMPDEST
0x836 PUSH1 0x40
0x838 MLOAD
0x839 DUP1
0x83a DUP3
0x83b ISZERO
0x83c ISZERO
0x83d ISZERO
0x83e ISZERO
0x83f DUP2
0x840 MSTORE
0x841 PUSH1 0x20
0x843 ADD
0x844 SWAP2
0x845 POP
0x846 POP
0x847 PUSH1 0x40
0x849 MLOAD
0x84a DUP1
0x84b SWAP2
0x84c SUB
0x84d SWAP1
0x84e RETURN
0x84f JUMPDEST
0x850 CALLVALUE
0x851 ISZERO
0x852 PUSH2 0x169
0x855 JUMPI
---
0x835: JUMPDEST 
0x836: V460 = 0x40
0x838: V461 = M[0x40]
0x83b: V462 = ISZERO V852
0x83c: V463 = ISZERO V462
0x83d: V464 = ISZERO V463
0x83e: V465 = ISZERO V464
0x840: M[V461] = V465
0x841: V466 = 0x20
0x843: V467 = ADD 0x20 V461
0x847: V468 = 0x40
0x849: V469 = M[0x40]
0x84c: V470 = SUB V467 V469
0x84e: RETURN V469 V470
0x84f: JUMPDEST 
0x850: V471 = CALLVALUE
0x851: V472 = ISZERO V471
0x852: V473 = 0x169
0x855: THROWI V472
---
Entry stack: [S13, 0x0, 0x855, S10, V850, V852, 0x70a08231, V880, 0x20, V883, V884, V883, 0x0, V852]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x856
[0x856:0x8a2]
---
Predecessors: [0x835]
Successors: [0x1b6, 0x8a3]
---
0x856 PUSH1 0x0
0x858 DUP1
0x859 REVERT
0x85a JUMPDEST
0x85b PUSH2 0x195
0x85e PUSH1 0x4
0x860 DUP1
0x861 DUP1
0x862 CALLDATALOAD
0x863 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x878 AND
0x879 SWAP1
0x87a PUSH1 0x20
0x87c ADD
0x87d SWAP1
0x87e SWAP2
0x87f SWAP1
0x880 POP
0x881 POP
0x882 PUSH2 0x5fb
0x885 JUMP
0x886 JUMPDEST
0x887 PUSH1 0x40
0x889 MLOAD
0x88a DUP1
0x88b DUP3
0x88c DUP2
0x88d MSTORE
0x88e PUSH1 0x20
0x890 ADD
0x891 SWAP2
0x892 POP
0x893 POP
0x894 PUSH1 0x40
0x896 MLOAD
0x897 DUP1
0x898 SWAP2
0x899 SUB
0x89a SWAP1
0x89b RETURN
0x89c JUMPDEST
0x89d CALLVALUE
0x89e ISZERO
0x89f PUSH2 0x1b6
0x8a2 JUMPI
---
0x856: V474 = 0x0
0x859: REVERT 0x0 0x0
0x85a: JUMPDEST 
0x85b: V475 = 0x195
0x85e: V476 = 0x4
0x862: V477 = CALLDATALOAD 0x4
0x863: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x878: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x87a: V480 = 0x20
0x87c: V481 = ADD 0x20 0x4
0x882: V482 = 0x5fb
0x885: THROW 
0x886: JUMPDEST 
0x887: V483 = 0x40
0x889: V484 = M[0x40]
0x88d: M[V484] = S0
0x88e: V485 = 0x20
0x890: V486 = ADD 0x20 V484
0x894: V487 = 0x40
0x896: V488 = M[0x40]
0x899: V489 = SUB V486 V488
0x89b: RETURN V488 V489
0x89c: JUMPDEST 
0x89d: V490 = CALLVALUE
0x89e: V491 = ISZERO V490
0x89f: V492 = 0x1b6
0x8a2: JUMPI 0x1b6 V491
---
Entry stack: []
Stack pops: 0
Stack additions: [V479, 0x195]
Exit stack: []

================================

Block 0x8a3
[0x8a3:0x8c1]
---
Predecessors: [0x856]
Successors: [0x8c2]
---
0x8a3 PUSH1 0x0
0x8a5 DUP1
0x8a6 REVERT
0x8a7 JUMPDEST
0x8a8 PUSH2 0x1be
0x8ab PUSH2 0x613
0x8ae JUMP
0x8af JUMPDEST
0x8b0 STOP
0x8b1 JUMPDEST
0x8b2 PUSH2 0x1c8
0x8b5 PUSH2 0x673
0x8b8 JUMP
0x8b9 JUMPDEST
0x8ba STOP
0x8bb JUMPDEST
0x8bc CALLVALUE
0x8bd ISZERO
0x8be PUSH2 0x1d5
0x8c1 JUMPI
---
0x8a3: V493 = 0x0
0x8a6: REVERT 0x0 0x0
0x8a7: JUMPDEST 
0x8a8: V494 = 0x1be
0x8ab: V495 = 0x613
0x8ae: THROW 
0x8af: JUMPDEST 
0x8b0: STOP 
0x8b1: JUMPDEST 
0x8b2: V496 = 0x1c8
0x8b5: V497 = 0x673
0x8b8: THROW 
0x8b9: JUMPDEST 
0x8ba: STOP 
0x8bb: JUMPDEST 
0x8bc: V498 = CALLVALUE
0x8bd: V499 = ISZERO V498
0x8be: V500 = 0x1d5
0x8c1: THROWI V499
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1be, 0x1c8]
Exit stack: []

================================

Block 0x8c2
[0x8c2:0x916]
---
Predecessors: [0x8a3]
Successors: [0x917]
---
0x8c2 PUSH1 0x0
0x8c4 DUP1
0x8c5 REVERT
0x8c6 JUMPDEST
0x8c7 PUSH2 0x1dd
0x8ca PUSH2 0x73f
0x8cd JUMP
0x8ce JUMPDEST
0x8cf PUSH1 0x40
0x8d1 MLOAD
0x8d2 DUP1
0x8d3 DUP3
0x8d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e9 AND
0x8ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ff AND
0x900 DUP2
0x901 MSTORE
0x902 PUSH1 0x20
0x904 ADD
0x905 SWAP2
0x906 POP
0x907 POP
0x908 PUSH1 0x40
0x90a MLOAD
0x90b DUP1
0x90c SWAP2
0x90d SUB
0x90e SWAP1
0x90f RETURN
0x910 JUMPDEST
0x911 CALLVALUE
0x912 ISZERO
0x913 PUSH2 0x22a
0x916 JUMPI
---
0x8c2: V501 = 0x0
0x8c5: REVERT 0x0 0x0
0x8c6: JUMPDEST 
0x8c7: V502 = 0x1dd
0x8ca: V503 = 0x73f
0x8cd: THROW 
0x8ce: JUMPDEST 
0x8cf: V504 = 0x40
0x8d1: V505 = M[0x40]
0x8d4: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8ea: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ff: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x901: M[V505] = V509
0x902: V510 = 0x20
0x904: V511 = ADD 0x20 V505
0x908: V512 = 0x40
0x90a: V513 = M[0x40]
0x90d: V514 = SUB V511 V513
0x90f: RETURN V513 V514
0x910: JUMPDEST 
0x911: V515 = CALLVALUE
0x912: V516 = ISZERO V515
0x913: V517 = 0x22a
0x916: THROWI V516
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1dd]
Exit stack: []

================================

Block 0x917
[0x917:0x967]
---
Predecessors: [0x8c2]
Successors: [0x968]
---
0x917 PUSH1 0x0
0x919 DUP1
0x91a REVERT
0x91b JUMPDEST
0x91c PUSH2 0x256
0x91f PUSH1 0x4
0x921 DUP1
0x922 DUP1
0x923 CALLDATALOAD
0x924 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x939 AND
0x93a SWAP1
0x93b PUSH1 0x20
0x93d ADD
0x93e SWAP1
0x93f SWAP2
0x940 SWAP1
0x941 POP
0x942 POP
0x943 PUSH2 0x769
0x946 JUMP
0x947 JUMPDEST
0x948 PUSH1 0x40
0x94a MLOAD
0x94b DUP1
0x94c DUP3
0x94d ISZERO
0x94e ISZERO
0x94f ISZERO
0x950 ISZERO
0x951 DUP2
0x952 MSTORE
0x953 PUSH1 0x20
0x955 ADD
0x956 SWAP2
0x957 POP
0x958 POP
0x959 PUSH1 0x40
0x95b MLOAD
0x95c DUP1
0x95d SWAP2
0x95e SUB
0x95f SWAP1
0x960 RETURN
0x961 JUMPDEST
0x962 CALLVALUE
0x963 ISZERO
0x964 PUSH2 0x27b
0x967 JUMPI
---
0x917: V518 = 0x0
0x91a: REVERT 0x0 0x0
0x91b: JUMPDEST 
0x91c: V519 = 0x256
0x91f: V520 = 0x4
0x923: V521 = CALLDATALOAD 0x4
0x924: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x939: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x93b: V524 = 0x20
0x93d: V525 = ADD 0x20 0x4
0x943: V526 = 0x769
0x946: THROW 
0x947: JUMPDEST 
0x948: V527 = 0x40
0x94a: V528 = M[0x40]
0x94d: V529 = ISZERO S0
0x94e: V530 = ISZERO V529
0x94f: V531 = ISZERO V530
0x950: V532 = ISZERO V531
0x952: M[V528] = V532
0x953: V533 = 0x20
0x955: V534 = ADD 0x20 V528
0x959: V535 = 0x40
0x95b: V536 = M[0x40]
0x95e: V537 = SUB V534 V536
0x960: RETURN V536 V537
0x961: JUMPDEST 
0x962: V538 = CALLVALUE
0x963: V539 = ISZERO V538
0x964: V540 = 0x27b
0x967: THROWI V539
---
Entry stack: []
Stack pops: 0
Stack additions: [V523, 0x256]
Exit stack: []

================================

Block 0x968
[0x968:0x973]
---
Predecessors: [0x917]
Successors: []
---
0x968 PUSH1 0x0
0x96a DUP1
0x96b REVERT
0x96c JUMPDEST
0x96d PUSH2 0x283
0x970 PUSH2 0x85c
0x973 JUMP
---
0x968: V541 = 0x0
0x96b: REVERT 0x0 0x0
0x96c: JUMPDEST 
0x96d: V542 = 0x283
0x970: V543 = 0x85c
0x973: THROW 
---
Entry stack: []
Stack pops: 0
Stack additions: [0x283]
Exit stack: []

================================

Block 0x974
[0x974:0x990]
---
Predecessors: [0xa2e, 0xb17]
Successors: [0x991]
---
0x974 JUMPDEST
0x975 PUSH1 0x40
0x977 MLOAD
0x978 DUP1
0x979 DUP3
0x97a DUP2
0x97b MSTORE
0x97c PUSH1 0x20
0x97e ADD
0x97f SWAP2
0x980 POP
0x981 POP
0x982 PUSH1 0x40
0x984 MLOAD
0x985 DUP1
0x986 SWAP2
0x987 SUB
0x988 SWAP1
0x989 RETURN
0x98a JUMPDEST
0x98b CALLVALUE
0x98c ISZERO
0x98d PUSH2 0x2a4
0x990 JUMPI
---
0x974: JUMPDEST 
0x975: V544 = 0x40
0x977: V545 = M[0x40]
0x97b: M[V545] = {0x349, 0x42d}
0x97c: V546 = 0x20
0x97e: V547 = ADD 0x20 V545
0x982: V548 = 0x40
0x984: V549 = M[0x40]
0x987: V550 = SUB V547 V549
0x989: RETURN V549 V550
0x98a: JUMPDEST 
0x98b: V551 = CALLVALUE
0x98c: V552 = ISZERO V551
0x98d: V553 = 0x2a4
0x990: THROWI V552
---
Entry stack: [{0x349, 0x42d}]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x991
[0x991:0xa00]
---
Predecessors: [0x974]
Successors: [0xa01]
---
0x991 PUSH1 0x0
0x993 DUP1
0x994 REVERT
0x995 JUMPDEST
0x996 PUSH2 0x2ef
0x999 PUSH1 0x4
0x99b DUP1
0x99c DUP1
0x99d CALLDATALOAD
0x99e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b3 AND
0x9b4 SWAP1
0x9b5 PUSH1 0x20
0x9b7 ADD
0x9b8 SWAP1
0x9b9 SWAP2
0x9ba SWAP1
0x9bb DUP1
0x9bc CALLDATALOAD
0x9bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d2 AND
0x9d3 SWAP1
0x9d4 PUSH1 0x20
0x9d6 ADD
0x9d7 SWAP1
0x9d8 SWAP2
0x9d9 SWAP1
0x9da POP
0x9db POP
0x9dc PUSH2 0x866
0x9df JUMP
0x9e0 JUMPDEST
0x9e1 PUSH1 0x40
0x9e3 MLOAD
0x9e4 DUP1
0x9e5 DUP3
0x9e6 ISZERO
0x9e7 ISZERO
0x9e8 ISZERO
0x9e9 ISZERO
0x9ea DUP2
0x9eb MSTORE
0x9ec PUSH1 0x20
0x9ee ADD
0x9ef SWAP2
0x9f0 POP
0x9f1 POP
0x9f2 PUSH1 0x40
0x9f4 MLOAD
0x9f5 DUP1
0x9f6 SWAP2
0x9f7 SUB
0x9f8 SWAP1
0x9f9 RETURN
0x9fa JUMPDEST
0x9fb CALLVALUE
0x9fc ISZERO
0x9fd PUSH2 0x314
0xa00 JUMPI
---
0x991: V554 = 0x0
0x994: REVERT 0x0 0x0
0x995: JUMPDEST 
0x996: V555 = 0x2ef
0x999: V556 = 0x4
0x99d: V557 = CALLDATALOAD 0x4
0x99e: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b3: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x9b5: V560 = 0x20
0x9b7: V561 = ADD 0x20 0x4
0x9bc: V562 = CALLDATALOAD 0x24
0x9bd: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x9d4: V565 = 0x20
0x9d6: V566 = ADD 0x20 0x24
0x9dc: V567 = 0x866
0x9df: THROW 
0x9e0: JUMPDEST 
0x9e1: V568 = 0x40
0x9e3: V569 = M[0x40]
0x9e6: V570 = ISZERO S0
0x9e7: V571 = ISZERO V570
0x9e8: V572 = ISZERO V571
0x9e9: V573 = ISZERO V572
0x9eb: M[V569] = V573
0x9ec: V574 = 0x20
0x9ee: V575 = ADD 0x20 V569
0x9f2: V576 = 0x40
0x9f4: V577 = M[0x40]
0x9f7: V578 = SUB V575 V577
0x9f9: RETURN V577 V578
0x9fa: JUMPDEST 
0x9fb: V579 = CALLVALUE
0x9fc: V580 = ISZERO V579
0x9fd: V581 = 0x314
0xa00: THROWI V580
---
Entry stack: []
Stack pops: 0
Stack additions: [V564, V559, 0x2ef]
Exit stack: []

================================

Block 0xa01
[0xa01:0xa2d]
---
Predecessors: [0x991]
Successors: [0xa2e]
---
0xa01 PUSH1 0x0
0xa03 DUP1
0xa04 REVERT
0xa05 JUMPDEST
0xa06 PUSH2 0x31c
0xa09 PUSH2 0x95a
0xa0c JUMP
0xa0d JUMPDEST
0xa0e PUSH1 0x40
0xa10 MLOAD
0xa11 DUP1
0xa12 DUP3
0xa13 ISZERO
0xa14 ISZERO
0xa15 ISZERO
0xa16 ISZERO
0xa17 DUP2
0xa18 MSTORE
0xa19 PUSH1 0x20
0xa1b ADD
0xa1c SWAP2
0xa1d POP
0xa1e POP
0xa1f PUSH1 0x40
0xa21 MLOAD
0xa22 DUP1
0xa23 SWAP2
0xa24 SUB
0xa25 SWAP1
0xa26 RETURN
0xa27 JUMPDEST
0xa28 CALLVALUE
0xa29 ISZERO
0xa2a PUSH2 0x341
0xa2d JUMPI
---
0xa01: V582 = 0x0
0xa04: REVERT 0x0 0x0
0xa05: JUMPDEST 
0xa06: V583 = 0x31c
0xa09: V584 = 0x95a
0xa0c: THROW 
0xa0d: JUMPDEST 
0xa0e: V585 = 0x40
0xa10: V586 = M[0x40]
0xa13: V587 = ISZERO S0
0xa14: V588 = ISZERO V587
0xa15: V589 = ISZERO V588
0xa16: V590 = ISZERO V589
0xa18: M[V586] = V590
0xa19: V591 = 0x20
0xa1b: V592 = ADD 0x20 V586
0xa1f: V593 = 0x40
0xa21: V594 = M[0x40]
0xa24: V595 = SUB V592 V594
0xa26: RETURN V594 V595
0xa27: JUMPDEST 
0xa28: V596 = CALLVALUE
0xa29: V597 = ISZERO V596
0xa2a: V598 = 0x341
0xa2d: THROWI V597
---
Entry stack: []
Stack pops: 0
Stack additions: [0x31c]
Exit stack: []

================================

Block 0xa2e
[0xa2e:0xa39]
---
Predecessors: [0xa01]
Successors: [0x974]
---
0xa2e PUSH1 0x0
0xa30 DUP1
0xa31 REVERT
0xa32 JUMPDEST
0xa33 PUSH2 0x349
0xa36 PUSH2 0x974
0xa39 JUMP
---
0xa2e: V599 = 0x0
0xa31: REVERT 0x0 0x0
0xa32: JUMPDEST 
0xa33: V600 = 0x349
0xa36: V601 = 0x974
0xa39: JUMP 0x974
---
Entry stack: []
Stack pops: 0
Stack additions: [0x349]
Exit stack: []

================================

Block 0xa3a
[0xa3a:0xa56]
---
Predecessors: []
Successors: [0xa57]
---
0xa3a JUMPDEST
0xa3b PUSH1 0x40
0xa3d MLOAD
0xa3e DUP1
0xa3f DUP3
0xa40 DUP2
0xa41 MSTORE
0xa42 PUSH1 0x20
0xa44 ADD
0xa45 SWAP2
0xa46 POP
0xa47 POP
0xa48 PUSH1 0x40
0xa4a MLOAD
0xa4b DUP1
0xa4c SWAP2
0xa4d SUB
0xa4e SWAP1
0xa4f RETURN
0xa50 JUMPDEST
0xa51 CALLVALUE
0xa52 ISZERO
0xa53 PUSH2 0x36a
0xa56 JUMPI
---
0xa3a: JUMPDEST 
0xa3b: V602 = 0x40
0xa3d: V603 = M[0x40]
0xa41: M[V603] = S0
0xa42: V604 = 0x20
0xa44: V605 = ADD 0x20 V603
0xa48: V606 = 0x40
0xa4a: V607 = M[0x40]
0xa4d: V608 = SUB V605 V607
0xa4f: RETURN V607 V608
0xa50: JUMPDEST 
0xa51: V609 = CALLVALUE
0xa52: V610 = ISZERO V609
0xa53: V611 = 0x36a
0xa56: THROWI V610
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xa57
[0xa57:0xa83]
---
Predecessors: [0xa3a]
Successors: [0xa84]
---
0xa57 PUSH1 0x0
0xa59 DUP1
0xa5a REVERT
0xa5b JUMPDEST
0xa5c PUSH2 0x380
0xa5f PUSH1 0x4
0xa61 DUP1
0xa62 DUP1
0xa63 CALLDATALOAD
0xa64 SWAP1
0xa65 PUSH1 0x20
0xa67 ADD
0xa68 SWAP1
0xa69 SWAP2
0xa6a SWAP1
0xa6b POP
0xa6c POP
0xa6d PUSH2 0x97e
0xa70 JUMP
0xa71 JUMPDEST
0xa72 STOP
0xa73 JUMPDEST
0xa74 PUSH2 0x38a
0xa77 PUSH2 0x41c
0xa7a JUMP
0xa7b JUMPDEST
0xa7c STOP
0xa7d JUMPDEST
0xa7e CALLVALUE
0xa7f ISZERO
0xa80 PUSH2 0x397
0xa83 JUMPI
---
0xa57: V612 = 0x0
0xa5a: REVERT 0x0 0x0
0xa5b: JUMPDEST 
0xa5c: V613 = 0x380
0xa5f: V614 = 0x4
0xa63: V615 = CALLDATALOAD 0x4
0xa65: V616 = 0x20
0xa67: V617 = ADD 0x20 0x4
0xa6d: V618 = 0x97e
0xa70: THROW 
0xa71: JUMPDEST 
0xa72: STOP 
0xa73: JUMPDEST 
0xa74: V619 = 0x38a
0xa77: V620 = 0x41c
0xa7a: THROW 
0xa7b: JUMPDEST 
0xa7c: STOP 
0xa7d: JUMPDEST 
0xa7e: V621 = CALLVALUE
0xa7f: V622 = ISZERO V621
0xa80: V623 = 0x397
0xa83: THROWI V622
---
Entry stack: []
Stack pops: 0
Stack additions: [V615, 0x380, 0x38a]
Exit stack: []

================================

Block 0xa84
[0xa84:0xabc]
---
Predecessors: [0xa57]
Successors: [0xabd]
---
0xa84 PUSH1 0x0
0xa86 DUP1
0xa87 REVERT
0xa88 JUMPDEST
0xa89 PUSH2 0x3c3
0xa8c PUSH1 0x4
0xa8e DUP1
0xa8f DUP1
0xa90 CALLDATALOAD
0xa91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa6 AND
0xaa7 SWAP1
0xaa8 PUSH1 0x20
0xaaa ADD
0xaab SWAP1
0xaac SWAP2
0xaad SWAP1
0xaae POP
0xaaf POP
0xab0 PUSH2 0x9c1
0xab3 JUMP
0xab4 JUMPDEST
0xab5 STOP
0xab6 JUMPDEST
0xab7 CALLVALUE
0xab8 ISZERO
0xab9 PUSH2 0x3d0
0xabc JUMPI
---
0xa84: V624 = 0x0
0xa87: REVERT 0x0 0x0
0xa88: JUMPDEST 
0xa89: V625 = 0x3c3
0xa8c: V626 = 0x4
0xa90: V627 = CALLDATALOAD 0x4
0xa91: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa6: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0xaa8: V630 = 0x20
0xaaa: V631 = ADD 0x20 0x4
0xab0: V632 = 0x9c1
0xab3: THROW 
0xab4: JUMPDEST 
0xab5: STOP 
0xab6: JUMPDEST 
0xab7: V633 = CALLVALUE
0xab8: V634 = ISZERO V633
0xab9: V635 = 0x3d0
0xabc: THROWI V634
---
Entry stack: []
Stack pops: 0
Stack additions: [V629, 0x3c3]
Exit stack: []

================================

Block 0xabd
[0xabd:0xafe]
---
Predecessors: [0xa84]
Successors: [0xaff]
---
0xabd PUSH1 0x0
0xabf DUP1
0xac0 REVERT
0xac1 JUMPDEST
0xac2 PUSH2 0x405
0xac5 PUSH1 0x4
0xac7 DUP1
0xac8 DUP1
0xac9 CALLDATALOAD
0xaca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xadf AND
0xae0 SWAP1
0xae1 PUSH1 0x20
0xae3 ADD
0xae4 SWAP1
0xae5 SWAP2
0xae6 SWAP1
0xae7 DUP1
0xae8 CALLDATALOAD
0xae9 SWAP1
0xaea PUSH1 0x20
0xaec ADD
0xaed SWAP1
0xaee SWAP2
0xaef SWAP1
0xaf0 POP
0xaf1 POP
0xaf2 PUSH2 0xa5a
0xaf5 JUMP
0xaf6 JUMPDEST
0xaf7 STOP
0xaf8 JUMPDEST
0xaf9 CALLVALUE
0xafa ISZERO
0xafb PUSH2 0x412
0xafe JUMPI
---
0xabd: V636 = 0x0
0xac0: REVERT 0x0 0x0
0xac1: JUMPDEST 
0xac2: V637 = 0x405
0xac5: V638 = 0x4
0xac9: V639 = CALLDATALOAD 0x4
0xaca: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0xadf: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0xae1: V642 = 0x20
0xae3: V643 = ADD 0x20 0x4
0xae8: V644 = CALLDATALOAD 0x24
0xaea: V645 = 0x20
0xaec: V646 = ADD 0x20 0x24
0xaf2: V647 = 0xa5a
0xaf5: THROW 
0xaf6: JUMPDEST 
0xaf7: STOP 
0xaf8: JUMPDEST 
0xaf9: V648 = CALLVALUE
0xafa: V649 = ISZERO V648
0xafb: V650 = 0x412
0xafe: THROWI V649
---
Entry stack: []
Stack pops: 0
Stack additions: [V644, V641, 0x405]
Exit stack: []

================================

Block 0xaff
[0xaff:0xb16]
---
Predecessors: [0xabd]
Successors: [0xb17]
---
0xaff PUSH1 0x0
0xb01 DUP1
0xb02 REVERT
0xb03 JUMPDEST
0xb04 PUSH2 0x41a
0xb07 PUSH2 0xbab
0xb0a JUMP
0xb0b JUMPDEST
0xb0c STOP
0xb0d JUMPDEST
0xb0e PUSH1 0x0
0xb10 CALLVALUE
0xb11 GT
0xb12 ISZERO
0xb13 PUSH2 0x4d2
0xb16 JUMPI
---
0xaff: V651 = 0x0
0xb02: REVERT 0x0 0x0
0xb03: JUMPDEST 
0xb04: V652 = 0x41a
0xb07: V653 = 0xbab
0xb0a: THROW 
0xb0b: JUMPDEST 
0xb0c: STOP 
0xb0d: JUMPDEST 
0xb0e: V654 = 0x0
0xb10: V655 = CALLVALUE
0xb11: V656 = GT V655 0x0
0xb12: V657 = ISZERO V656
0xb13: V658 = 0x4d2
0xb16: THROWI V657
---
Entry stack: []
Stack pops: 0
Stack additions: [0x41a]
Exit stack: []

================================

Block 0xb17
[0xb17:0xb1d]
---
Predecessors: [0xaff]
Successors: [0x974]
---
0xb17 PUSH2 0x42d
0xb1a PUSH2 0x974
0xb1d JUMP
---
0xb17: V659 = 0x42d
0xb1a: V660 = 0x974
0xb1d: JUMP 0x974
---
Entry stack: []
Stack pops: 0
Stack additions: [0x42d]
Exit stack: [0x42d]

================================

Block 0xb1e
[0xb1e:0xb26]
---
Predecessors: []
Successors: [0xb27]
---
0xb1e JUMPDEST
0xb1f CALLVALUE
0xb20 LT
0xb21 ISZERO
0xb22 ISZERO
0xb23 PUSH2 0x483
0xb26 JUMPI
---
0xb1e: JUMPDEST 
0xb1f: V661 = CALLVALUE
0xb20: V662 = LT V661 S0
0xb21: V663 = ISZERO V662
0xb22: V664 = ISZERO V663
0xb23: V665 = 0x483
0xb26: THROWI V664
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb27
[0xb27:0xb73]
---
Predecessors: [0xb1e]
Successors: [0xb74]
---
0xb27 CALLVALUE
0xb28 PUSH1 0x2
0xb2a PUSH1 0x0
0xb2c CALLER
0xb2d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb42 AND
0xb43 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb58 AND
0xb59 DUP2
0xb5a MSTORE
0xb5b PUSH1 0x20
0xb5d ADD
0xb5e SWAP1
0xb5f DUP2
0xb60 MSTORE
0xb61 PUSH1 0x20
0xb63 ADD
0xb64 PUSH1 0x0
0xb66 SHA3
0xb67 PUSH1 0x0
0xb69 DUP3
0xb6a DUP3
0xb6b SLOAD
0xb6c ADD
0xb6d SWAP3
0xb6e POP
0xb6f POP
0xb70 DUP2
0xb71 SWAP1
0xb72 SSTORE
0xb73 POP
---
0xb27: V666 = CALLVALUE
0xb28: V667 = 0x2
0xb2a: V668 = 0x0
0xb2c: V669 = CALLER
0xb2d: V670 = 0xffffffffffffffffffffffffffffffffffffffff
0xb42: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0xb43: V672 = 0xffffffffffffffffffffffffffffffffffffffff
0xb58: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0xb5a: M[0x0] = V673
0xb5b: V674 = 0x20
0xb5d: V675 = ADD 0x20 0x0
0xb60: M[0x20] = 0x2
0xb61: V676 = 0x20
0xb63: V677 = ADD 0x20 0x20
0xb64: V678 = 0x0
0xb66: V679 = SHA3 0x0 0x40
0xb67: V680 = 0x0
0xb6b: V681 = S[V679]
0xb6c: V682 = ADD V681 V666
0xb72: S[V679] = V682
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb74
[0xb74:0xbc2]
---
Predecessors: [0xb27]
Successors: [0xbc3]
---
0xb74 JUMPDEST
0xb75 CALLER
0xb76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8b AND
0xb8c PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xbad CALLVALUE
0xbae PUSH1 0x40
0xbb0 MLOAD
0xbb1 DUP1
0xbb2 DUP3
0xbb3 DUP2
0xbb4 MSTORE
0xbb5 PUSH1 0x20
0xbb7 ADD
0xbb8 SWAP2
0xbb9 POP
0xbba POP
0xbbb PUSH1 0x40
0xbbd MLOAD
0xbbe DUP1
0xbbf SWAP2
0xbc0 SUB
0xbc1 SWAP1
0xbc2 LOG2
---
0xb74: JUMPDEST 
0xb75: V683 = CALLER
0xb76: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8b: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0xb8c: V686 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xbad: V687 = CALLVALUE
0xbae: V688 = 0x40
0xbb0: V689 = M[0x40]
0xbb4: M[V689] = V687
0xbb5: V690 = 0x20
0xbb7: V691 = ADD 0x20 V689
0xbbb: V692 = 0x40
0xbbd: V693 = M[0x40]
0xbc0: V694 = SUB V691 V693
0xbc2: LOG V693 V694 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V685
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbc3
[0xbc3:0xc1c]
---
Predecessors: [0xb74]
Successors: [0xc1d]
---
0xbc3 JUMPDEST
0xbc4 JUMP
0xbc5 JUMPDEST
0xbc6 PUSH1 0x0
0xbc8 DUP1
0xbc9 PUSH1 0x0
0xbcb SWAP1
0xbcc SLOAD
0xbcd SWAP1
0xbce PUSH2 0x100
0xbd1 EXP
0xbd2 SWAP1
0xbd3 DIV
0xbd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe9 AND
0xbea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbff AND
0xc00 CALLER
0xc01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc16 AND
0xc17 EQ
0xc18 ISZERO
0xc19 PUSH2 0x5f4
0xc1c JUMPI
---
0xbc3: JUMPDEST 
0xbc4: JUMP S0
0xbc5: JUMPDEST 
0xbc6: V695 = 0x0
0xbc9: V696 = 0x0
0xbcc: V697 = S[0x0]
0xbce: V698 = 0x100
0xbd1: V699 = EXP 0x100 0x0
0xbd3: V700 = DIV V697 0x1
0xbd4: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe9: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0xbea: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xbff: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0xc00: V705 = CALLER
0xc01: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xc16: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0xc17: V708 = EQ V707 V704
0xc18: V709 = ISZERO V708
0xc19: V710 = 0x5f4
0xc1c: THROWI V709
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0xc1d
[0xc1d:0xcc2]
---
Predecessors: [0xbc3]
Successors: [0xcc3]
---
0xc1d DUP4
0xc1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc33 AND
0xc34 PUSH4 0xa9059cbb
0xc39 DUP5
0xc3a DUP5
0xc3b PUSH1 0x0
0xc3d PUSH1 0x40
0xc3f MLOAD
0xc40 PUSH1 0x20
0xc42 ADD
0xc43 MSTORE
0xc44 PUSH1 0x40
0xc46 MLOAD
0xc47 DUP4
0xc48 PUSH4 0xffffffff
0xc4d AND
0xc4e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc6c MUL
0xc6d DUP2
0xc6e MSTORE
0xc6f PUSH1 0x4
0xc71 ADD
0xc72 DUP1
0xc73 DUP4
0xc74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc89 AND
0xc8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9f AND
0xca0 DUP2
0xca1 MSTORE
0xca2 PUSH1 0x20
0xca4 ADD
0xca5 DUP3
0xca6 DUP2
0xca7 MSTORE
0xca8 PUSH1 0x20
0xcaa ADD
0xcab SWAP3
0xcac POP
0xcad POP
0xcae POP
0xcaf PUSH1 0x20
0xcb1 PUSH1 0x40
0xcb3 MLOAD
0xcb4 DUP1
0xcb5 DUP4
0xcb6 SUB
0xcb7 DUP2
0xcb8 PUSH1 0x0
0xcba DUP8
0xcbb DUP1
0xcbc EXTCODESIZE
0xcbd ISZERO
0xcbe ISZERO
0xcbf PUSH2 0x5d6
0xcc2 JUMPI
---
0xc1e: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0xc33: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc34: V713 = 0xa9059cbb
0xc3b: V714 = 0x0
0xc3d: V715 = 0x40
0xc3f: V716 = M[0x40]
0xc40: V717 = 0x20
0xc42: V718 = ADD 0x20 V716
0xc43: M[V718] = 0x0
0xc44: V719 = 0x40
0xc46: V720 = M[0x40]
0xc48: V721 = 0xffffffff
0xc4d: V722 = AND 0xffffffff 0xa9059cbb
0xc4e: V723 = 0x100000000000000000000000000000000000000000000000000000000
0xc6c: V724 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc6e: M[V720] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc6f: V725 = 0x4
0xc71: V726 = ADD 0x4 V720
0xc74: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0xc89: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xc8a: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9f: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0xca1: M[V726] = V730
0xca2: V731 = 0x20
0xca4: V732 = ADD 0x20 V726
0xca7: M[V732] = S1
0xca8: V733 = 0x20
0xcaa: V734 = ADD 0x20 V732
0xcaf: V735 = 0x20
0xcb1: V736 = 0x40
0xcb3: V737 = M[0x40]
0xcb6: V738 = SUB V734 V737
0xcb8: V739 = 0x0
0xcbc: V740 = EXTCODESIZE V712
0xcbd: V741 = ISZERO V740
0xcbe: V742 = ISZERO V741
0xcbf: V743 = 0x5d6
0xcc2: THROWI V742
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V712, 0xa9059cbb, V734, 0x20, V737, V738, V737, 0x0, V712]
Exit stack: [S2, S1, S0, 0x0, V712, 0xa9059cbb, V734, 0x20, V737, V738, V737, 0x0, V712]

================================

Block 0xcc3
[0xcc3:0xcd3]
---
Predecessors: [0xc1d]
Successors: [0xcd4]
---
0xcc3 PUSH1 0x0
0xcc5 DUP1
0xcc6 REVERT
0xcc7 JUMPDEST
0xcc8 PUSH2 0x2c6
0xccb GAS
0xccc SUB
0xccd CALL
0xcce ISZERO
0xccf ISZERO
0xcd0 PUSH2 0x5e7
0xcd3 JUMPI
---
0xcc3: V744 = 0x0
0xcc6: REVERT 0x0 0x0
0xcc7: JUMPDEST 
0xcc8: V745 = 0x2c6
0xccb: V746 = GAS
0xccc: V747 = SUB V746 0x2c6
0xccd: V748 = CALL V747 S0 S1 S2 S3 S4 S5
0xcce: V749 = ISZERO V748
0xccf: V750 = ISZERO V749
0xcd0: V751 = 0x5e7
0xcd3: THROWI V750
---
Entry stack: [S12, S11, S10, 0x0, V712, 0xa9059cbb, V734, 0x20, V737, V738, V737, 0x0, V712]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcd4
[0xcd4:0xce4]
---
Predecessors: [0xcc3]
Successors: [0xce5]
---
0xcd4 PUSH1 0x0
0xcd6 DUP1
0xcd7 REVERT
0xcd8 JUMPDEST
0xcd9 POP
0xcda POP
0xcdb POP
0xcdc PUSH1 0x40
0xcde MLOAD
0xcdf DUP1
0xce0 MLOAD
0xce1 SWAP1
0xce2 POP
0xce3 SWAP1
0xce4 POP
---
0xcd4: V752 = 0x0
0xcd7: REVERT 0x0 0x0
0xcd8: JUMPDEST 
0xcdc: V753 = 0x40
0xcde: V754 = M[0x40]
0xce0: V755 = M[V754]
---
Entry stack: []
Stack pops: 0
Stack additions: [V755]
Exit stack: []

================================

Block 0xce5
[0xce5:0xd25]
---
Predecessors: [0xcd4]
Successors: [0xd26]
---
0xce5 JUMPDEST
0xce6 SWAP4
0xce7 SWAP3
0xce8 POP
0xce9 POP
0xcea POP
0xceb JUMP
0xcec JUMPDEST
0xced PUSH1 0x2
0xcef PUSH1 0x20
0xcf1 MSTORE
0xcf2 DUP1
0xcf3 PUSH1 0x0
0xcf5 MSTORE
0xcf6 PUSH1 0x40
0xcf8 PUSH1 0x0
0xcfa SHA3
0xcfb PUSH1 0x0
0xcfd SWAP2
0xcfe POP
0xcff SWAP1
0xd00 POP
0xd01 SLOAD
0xd02 DUP2
0xd03 JUMP
0xd04 JUMPDEST
0xd05 PUSH1 0x0
0xd07 ADDRESS
0xd08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1d AND
0xd1e BALANCE
0xd1f EQ
0xd20 ISZERO
0xd21 ISZERO
0xd22 PUSH2 0x639
0xd25 JUMPI
---
0xce5: JUMPDEST 
0xceb: JUMP S4
0xcec: JUMPDEST 
0xced: V756 = 0x2
0xcef: V757 = 0x20
0xcf1: M[0x20] = 0x2
0xcf3: V758 = 0x0
0xcf5: M[0x0] = S0
0xcf6: V759 = 0x40
0xcf8: V760 = 0x0
0xcfa: V761 = SHA3 0x0 0x40
0xcfb: V762 = 0x0
0xd01: V763 = S[V761]
0xd03: JUMP S1
0xd04: JUMPDEST 
0xd05: V764 = 0x0
0xd07: V765 = ADDRESS
0xd08: V766 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1d: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0xd1e: V768 = BALANCE V767
0xd1f: V769 = EQ V768 0x0
0xd20: V770 = ISZERO V769
0xd21: V771 = ISZERO V770
0xd22: V772 = 0x639
0xd25: THROWI V771
---
Entry stack: [V755]
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0xd26
[0xd26:0xd7a]
---
Predecessors: [0xce5]
Successors: [0xd7b]
---
0xd26 PUSH1 0x0
0xd28 DUP1
0xd29 REVERT
0xd2a JUMPDEST
0xd2b PUSH1 0x0
0xd2d DUP1
0xd2e SWAP1
0xd2f SLOAD
0xd30 SWAP1
0xd31 PUSH2 0x100
0xd34 EXP
0xd35 SWAP1
0xd36 DIV
0xd37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4c AND
0xd4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd62 AND
0xd63 SELFDESTRUCT
0xd64 JUMPDEST
0xd65 PUSH1 0x4
0xd67 PUSH1 0x0
0xd69 SWAP1
0xd6a SLOAD
0xd6b SWAP1
0xd6c PUSH2 0x100
0xd6f EXP
0xd70 SWAP1
0xd71 DIV
0xd72 PUSH1 0xff
0xd74 AND
0xd75 ISZERO
0xd76 ISZERO
0xd77 PUSH2 0x6fc
0xd7a JUMPI
---
0xd26: V773 = 0x0
0xd29: REVERT 0x0 0x0
0xd2a: JUMPDEST 
0xd2b: V774 = 0x0
0xd2f: V775 = S[0x0]
0xd31: V776 = 0x100
0xd34: V777 = EXP 0x100 0x0
0xd36: V778 = DIV V775 0x1
0xd37: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4c: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0xd4d: V781 = 0xffffffffffffffffffffffffffffffffffffffff
0xd62: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xd63: SELFDESTRUCT V782
0xd64: JUMPDEST 
0xd65: V783 = 0x4
0xd67: V784 = 0x0
0xd6a: V785 = S[0x4]
0xd6c: V786 = 0x100
0xd6f: V787 = EXP 0x100 0x0
0xd71: V788 = DIV V785 0x1
0xd72: V789 = 0xff
0xd74: V790 = AND 0xff V788
0xd75: V791 = ISZERO V790
0xd76: V792 = ISZERO V791
0xd77: V793 = 0x6fc
0xd7a: THROWI V792
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd7b
[0xd7b:0xdec]
---
Predecessors: [0xd26]
Successors: [0xded]
---
0xd7b CALLER
0xd7c PUSH1 0x0
0xd7e DUP1
0xd7f PUSH2 0x100
0xd82 EXP
0xd83 DUP2
0xd84 SLOAD
0xd85 DUP2
0xd86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9b MUL
0xd9c NOT
0xd9d AND
0xd9e SWAP1
0xd9f DUP4
0xda0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb5 AND
0xdb6 MUL
0xdb7 OR
0xdb8 SWAP1
0xdb9 SSTORE
0xdba POP
0xdbb PUSH8 0x3782dace9d90000
0xdc4 PUSH1 0x3
0xdc6 DUP2
0xdc7 SWAP1
0xdc8 SSTORE
0xdc9 POP
0xdca PUSH1 0x0
0xdcc PUSH1 0x4
0xdce PUSH1 0x0
0xdd0 PUSH2 0x100
0xdd3 EXP
0xdd4 DUP2
0xdd5 SLOAD
0xdd6 DUP2
0xdd7 PUSH1 0xff
0xdd9 MUL
0xdda NOT
0xddb AND
0xddc SWAP1
0xddd DUP4
0xdde ISZERO
0xddf ISZERO
0xde0 MUL
0xde1 OR
0xde2 SWAP1
0xde3 SSTORE
0xde4 POP
0xde5 PUSH2 0x6fb
0xde8 PUSH2 0x41c
0xdeb JUMP
0xdec JUMPDEST
---
0xd7b: V794 = CALLER
0xd7c: V795 = 0x0
0xd7f: V796 = 0x100
0xd82: V797 = EXP 0x100 0x0
0xd84: V798 = S[0x0]
0xd86: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9b: V800 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xd9c: V801 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd9d: V802 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V798
0xda0: V803 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb5: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0xdb6: V805 = MUL V804 0x1
0xdb7: V806 = OR V805 V802
0xdb9: S[0x0] = V806
0xdbb: V807 = 0x3782dace9d90000
0xdc4: V808 = 0x3
0xdc8: S[0x3] = 0x3782dace9d90000
0xdca: V809 = 0x0
0xdcc: V810 = 0x4
0xdce: V811 = 0x0
0xdd0: V812 = 0x100
0xdd3: V813 = EXP 0x100 0x0
0xdd5: V814 = S[0x4]
0xdd7: V815 = 0xff
0xdd9: V816 = MUL 0xff 0x1
0xdda: V817 = NOT 0xff
0xddb: V818 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V814
0xdde: V819 = ISZERO 0x0
0xddf: V820 = ISZERO 0x1
0xde0: V821 = MUL 0x0 0x1
0xde1: V822 = OR 0x0 V818
0xde3: S[0x4] = V822
0xde5: V823 = 0x6fb
0xde8: V824 = 0x41c
0xdeb: THROW 
0xdec: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6fb]
Exit stack: []

================================

Block 0xded
[0xded:0xf21]
---
Predecessors: [0xd7b]
Successors: [0x835, 0xf22]
---
0xded JUMPDEST
0xdee CALLER
0xdef PUSH1 0x6
0xdf1 PUSH1 0x0
0xdf3 PUSH2 0x100
0xdf6 EXP
0xdf7 DUP2
0xdf8 SLOAD
0xdf9 DUP2
0xdfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0f MUL
0xe10 NOT
0xe11 AND
0xe12 SWAP1
0xe13 DUP4
0xe14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe29 AND
0xe2a MUL
0xe2b OR
0xe2c SWAP1
0xe2d SSTORE
0xe2e POP
0xe2f JUMP
0xe30 JUMPDEST
0xe31 PUSH1 0x0
0xe33 PUSH1 0x6
0xe35 PUSH1 0x0
0xe37 SWAP1
0xe38 SLOAD
0xe39 SWAP1
0xe3a PUSH2 0x100
0xe3d EXP
0xe3e SWAP1
0xe3f DIV
0xe40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe55 AND
0xe56 SWAP1
0xe57 POP
0xe58 SWAP1
0xe59 JUMP
0xe5a JUMPDEST
0xe5b PUSH1 0x0
0xe5d PUSH2 0x855
0xe60 DUP3
0xe61 CALLER
0xe62 DUP5
0xe63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe78 AND
0xe79 PUSH4 0x70a08231
0xe7e PUSH1 0x1
0xe80 PUSH1 0x0
0xe82 SWAP1
0xe83 SLOAD
0xe84 SWAP1
0xe85 PUSH2 0x100
0xe88 EXP
0xe89 SWAP1
0xe8a DIV
0xe8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea0 AND
0xea1 PUSH1 0x0
0xea3 PUSH1 0x40
0xea5 MLOAD
0xea6 PUSH1 0x20
0xea8 ADD
0xea9 MSTORE
0xeaa PUSH1 0x40
0xeac MLOAD
0xead DUP3
0xeae PUSH4 0xffffffff
0xeb3 AND
0xeb4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xed2 MUL
0xed3 DUP2
0xed4 MSTORE
0xed5 PUSH1 0x4
0xed7 ADD
0xed8 DUP1
0xed9 DUP3
0xeda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeef AND
0xef0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf05 AND
0xf06 DUP2
0xf07 MSTORE
0xf08 PUSH1 0x20
0xf0a ADD
0xf0b SWAP2
0xf0c POP
0xf0d POP
0xf0e PUSH1 0x20
0xf10 PUSH1 0x40
0xf12 MLOAD
0xf13 DUP1
0xf14 DUP4
0xf15 SUB
0xf16 DUP2
0xf17 PUSH1 0x0
0xf19 DUP8
0xf1a DUP1
0xf1b EXTCODESIZE
0xf1c ISZERO
0xf1d ISZERO
0xf1e PUSH2 0x835
0xf21 JUMPI
---
0xded: JUMPDEST 
0xdee: V825 = CALLER
0xdef: V826 = 0x6
0xdf1: V827 = 0x0
0xdf3: V828 = 0x100
0xdf6: V829 = EXP 0x100 0x0
0xdf8: V830 = S[0x6]
0xdfa: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0f: V832 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xe10: V833 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe11: V834 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V830
0xe14: V835 = 0xffffffffffffffffffffffffffffffffffffffff
0xe29: V836 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0xe2a: V837 = MUL V836 0x1
0xe2b: V838 = OR V837 V834
0xe2d: S[0x6] = V838
0xe2f: JUMP S0
0xe30: JUMPDEST 
0xe31: V839 = 0x0
0xe33: V840 = 0x6
0xe35: V841 = 0x0
0xe38: V842 = S[0x6]
0xe3a: V843 = 0x100
0xe3d: V844 = EXP 0x100 0x0
0xe3f: V845 = DIV V842 0x1
0xe40: V846 = 0xffffffffffffffffffffffffffffffffffffffff
0xe55: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0xe59: JUMP S0
0xe5a: JUMPDEST 
0xe5b: V848 = 0x0
0xe5d: V849 = 0x855
0xe61: V850 = CALLER
0xe63: V851 = 0xffffffffffffffffffffffffffffffffffffffff
0xe78: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe79: V853 = 0x70a08231
0xe7e: V854 = 0x1
0xe80: V855 = 0x0
0xe83: V856 = S[0x1]
0xe85: V857 = 0x100
0xe88: V858 = EXP 0x100 0x0
0xe8a: V859 = DIV V856 0x1
0xe8b: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xea0: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0xea1: V862 = 0x0
0xea3: V863 = 0x40
0xea5: V864 = M[0x40]
0xea6: V865 = 0x20
0xea8: V866 = ADD 0x20 V864
0xea9: M[V866] = 0x0
0xeaa: V867 = 0x40
0xeac: V868 = M[0x40]
0xeae: V869 = 0xffffffff
0xeb3: V870 = AND 0xffffffff 0x70a08231
0xeb4: V871 = 0x100000000000000000000000000000000000000000000000000000000
0xed2: V872 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xed4: M[V868] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xed5: V873 = 0x4
0xed7: V874 = ADD 0x4 V868
0xeda: V875 = 0xffffffffffffffffffffffffffffffffffffffff
0xeef: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0xef0: V877 = 0xffffffffffffffffffffffffffffffffffffffff
0xf05: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff V876
0xf07: M[V874] = V878
0xf08: V879 = 0x20
0xf0a: V880 = ADD 0x20 V874
0xf0e: V881 = 0x20
0xf10: V882 = 0x40
0xf12: V883 = M[0x40]
0xf15: V884 = SUB V880 V883
0xf17: V885 = 0x0
0xf1b: V886 = EXTCODESIZE V852
0xf1c: V887 = ISZERO V886
0xf1d: V888 = ISZERO V887
0xf1e: V889 = 0x835
0xf21: JUMPI 0x835 V888
---
Entry stack: []
Stack pops: 3
Stack additions: [V852, 0x0, V883, V884, V883, 0x20, V880, 0x70a08231, V852, V850, S0, 0x855, 0x0, S0]
Exit stack: []

================================

Block 0xf22
[0xf22:0xf32]
---
Predecessors: [0xded]
Successors: [0xf33]
---
0xf22 PUSH1 0x0
0xf24 DUP1
0xf25 REVERT
0xf26 JUMPDEST
0xf27 PUSH2 0x2c6
0xf2a GAS
0xf2b SUB
0xf2c CALL
0xf2d ISZERO
0xf2e ISZERO
0xf2f PUSH2 0x846
0xf32 JUMPI
---
0xf22: V890 = 0x0
0xf25: REVERT 0x0 0x0
0xf26: JUMPDEST 
0xf27: V891 = 0x2c6
0xf2a: V892 = GAS
0xf2b: V893 = SUB V892 0x2c6
0xf2c: V894 = CALL V893 S0 S1 S2 S3 S4 S5
0xf2d: V895 = ISZERO V894
0xf2e: V896 = ISZERO V895
0xf2f: V897 = 0x846
0xf32: THROWI V896
---
Entry stack: [S13, 0x0, 0x855, S10, V850, V852, 0x70a08231, V880, 0x20, V883, V884, V883, 0x0, V852]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf33
[0xf33:0x101e]
---
Predecessors: [0xf22]
Successors: [0x101f]
---
0xf33 PUSH1 0x0
0xf35 DUP1
0xf36 REVERT
0xf37 JUMPDEST
0xf38 POP
0xf39 POP
0xf3a POP
0xf3b PUSH1 0x40
0xf3d MLOAD
0xf3e DUP1
0xf3f MLOAD
0xf40 SWAP1
0xf41 POP
0xf42 PUSH2 0x4d4
0xf45 JUMP
0xf46 JUMPDEST
0xf47 SWAP1
0xf48 POP
0xf49 SWAP2
0xf4a SWAP1
0xf4b POP
0xf4c JUMP
0xf4d JUMPDEST
0xf4e PUSH1 0x0
0xf50 PUSH1 0x5
0xf52 SLOAD
0xf53 SWAP1
0xf54 POP
0xf55 SWAP1
0xf56 JUMP
0xf57 JUMPDEST
0xf58 PUSH1 0x0
0xf5a PUSH2 0x952
0xf5d DUP4
0xf5e DUP4
0xf5f DUP6
0xf60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf75 AND
0xf76 PUSH4 0x70a08231
0xf7b PUSH1 0x1
0xf7d PUSH1 0x0
0xf7f SWAP1
0xf80 SLOAD
0xf81 SWAP1
0xf82 PUSH2 0x100
0xf85 EXP
0xf86 SWAP1
0xf87 DIV
0xf88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9d AND
0xf9e PUSH1 0x0
0xfa0 PUSH1 0x40
0xfa2 MLOAD
0xfa3 PUSH1 0x20
0xfa5 ADD
0xfa6 MSTORE
0xfa7 PUSH1 0x40
0xfa9 MLOAD
0xfaa DUP3
0xfab PUSH4 0xffffffff
0xfb0 AND
0xfb1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xfcf MUL
0xfd0 DUP2
0xfd1 MSTORE
0xfd2 PUSH1 0x4
0xfd4 ADD
0xfd5 DUP1
0xfd6 DUP3
0xfd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfec AND
0xfed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1002 AND
0x1003 DUP2
0x1004 MSTORE
0x1005 PUSH1 0x20
0x1007 ADD
0x1008 SWAP2
0x1009 POP
0x100a POP
0x100b PUSH1 0x20
0x100d PUSH1 0x40
0x100f MLOAD
0x1010 DUP1
0x1011 DUP4
0x1012 SUB
0x1013 DUP2
0x1014 PUSH1 0x0
0x1016 DUP8
0x1017 DUP1
0x1018 EXTCODESIZE
0x1019 ISZERO
0x101a ISZERO
0x101b PUSH2 0x932
0x101e JUMPI
---
0xf33: V898 = 0x0
0xf36: REVERT 0x0 0x0
0xf37: JUMPDEST 
0xf3b: V899 = 0x40
0xf3d: V900 = M[0x40]
0xf3f: V901 = M[V900]
0xf42: V902 = 0x4d4
0xf45: THROW 
0xf46: JUMPDEST 
0xf4c: JUMP S3
0xf4d: JUMPDEST 
0xf4e: V903 = 0x0
0xf50: V904 = 0x5
0xf52: V905 = S[0x5]
0xf56: JUMP S0
0xf57: JUMPDEST 
0xf58: V906 = 0x0
0xf5a: V907 = 0x952
0xf60: V908 = 0xffffffffffffffffffffffffffffffffffffffff
0xf75: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf76: V910 = 0x70a08231
0xf7b: V911 = 0x1
0xf7d: V912 = 0x0
0xf80: V913 = S[0x1]
0xf82: V914 = 0x100
0xf85: V915 = EXP 0x100 0x0
0xf87: V916 = DIV V913 0x1
0xf88: V917 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9d: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0xf9e: V919 = 0x0
0xfa0: V920 = 0x40
0xfa2: V921 = M[0x40]
0xfa3: V922 = 0x20
0xfa5: V923 = ADD 0x20 V921
0xfa6: M[V923] = 0x0
0xfa7: V924 = 0x40
0xfa9: V925 = M[0x40]
0xfab: V926 = 0xffffffff
0xfb0: V927 = AND 0xffffffff 0x70a08231
0xfb1: V928 = 0x100000000000000000000000000000000000000000000000000000000
0xfcf: V929 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xfd1: M[V925] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xfd2: V930 = 0x4
0xfd4: V931 = ADD 0x4 V925
0xfd7: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xfec: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0xfed: V934 = 0xffffffffffffffffffffffffffffffffffffffff
0x1002: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V933
0x1004: M[V931] = V935
0x1005: V936 = 0x20
0x1007: V937 = ADD 0x20 V931
0x100b: V938 = 0x20
0x100d: V939 = 0x40
0x100f: V940 = M[0x40]
0x1012: V941 = SUB V937 V940
0x1014: V942 = 0x0
0x1018: V943 = EXTCODESIZE V909
0x1019: V944 = ISZERO V943
0x101a: V945 = ISZERO V944
0x101b: V946 = 0x932
0x101e: THROWI V945
---
Entry stack: []
Stack pops: 0
Stack additions: [V901, S0, V905, V909, 0x0, V940, V941, V940, 0x20, V937, 0x70a08231, V909, S0, S1, 0x952, 0x0, S0, S1]
Exit stack: []

================================

Block 0x101f
[0x101f:0x102f]
---
Predecessors: [0xf33]
Successors: [0x1030]
---
0x101f PUSH1 0x0
0x1021 DUP1
0x1022 REVERT
0x1023 JUMPDEST
0x1024 PUSH2 0x2c6
0x1027 GAS
0x1028 SUB
0x1029 CALL
0x102a ISZERO
0x102b ISZERO
0x102c PUSH2 0x943
0x102f JUMPI
---
0x101f: V947 = 0x0
0x1022: REVERT 0x0 0x0
0x1023: JUMPDEST 
0x1024: V948 = 0x2c6
0x1027: V949 = GAS
0x1028: V950 = SUB V949 0x2c6
0x1029: V951 = CALL V950 S0 S1 S2 S3 S4 S5
0x102a: V952 = ISZERO V951
0x102b: V953 = ISZERO V952
0x102c: V954 = 0x943
0x102f: THROWI V953
---
Entry stack: [S14, S13, 0x0, 0x952, S10, S9, V909, 0x70a08231, V937, 0x20, V940, V941, V940, 0x0, V909]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1030
[0x1030:0x1058]
---
Predecessors: [0x101f]
Successors: [0x1059]
---
0x1030 PUSH1 0x0
0x1032 DUP1
0x1033 REVERT
0x1034 JUMPDEST
0x1035 POP
0x1036 POP
0x1037 POP
0x1038 PUSH1 0x40
0x103a MLOAD
0x103b DUP1
0x103c MLOAD
0x103d SWAP1
0x103e POP
0x103f PUSH2 0x4d4
0x1042 JUMP
0x1043 JUMPDEST
0x1044 SWAP1
0x1045 POP
0x1046 SWAP3
0x1047 SWAP2
0x1048 POP
0x1049 POP
0x104a JUMP
0x104b JUMPDEST
0x104c PUSH1 0x0
0x104e DUP1
0x104f PUSH1 0x5
0x1051 SLOAD
0x1052 GT
0x1053 DUP1
0x1054 ISZERO
0x1055 PUSH2 0x96f
0x1058 JUMPI
---
0x1030: V955 = 0x0
0x1033: REVERT 0x0 0x0
0x1034: JUMPDEST 
0x1038: V956 = 0x40
0x103a: V957 = M[0x40]
0x103c: V958 = M[V957]
0x103f: V959 = 0x4d4
0x1042: THROW 
0x1043: JUMPDEST 
0x104a: JUMP S4
0x104b: JUMPDEST 
0x104c: V960 = 0x0
0x104f: V961 = 0x5
0x1051: V962 = S[0x5]
0x1052: V963 = GT V962 0x0
0x1054: V964 = ISZERO V963
0x1055: V965 = 0x96f
0x1058: THROWI V964
---
Entry stack: []
Stack pops: 0
Stack additions: [V958, S0, V963, 0x0]
Exit stack: []

================================

Block 0x1059
[0x1059:0x105f]
---
Predecessors: [0x1030]
Successors: [0x1060]
---
0x1059 POP
0x105a TIMESTAMP
0x105b PUSH1 0x5
0x105d SLOAD
0x105e GT
0x105f ISZERO
---
0x105a: V966 = TIMESTAMP
0x105b: V967 = 0x5
0x105d: V968 = S[0x5]
0x105e: V969 = GT V968 V966
0x105f: V970 = ISZERO V969
---
Entry stack: [0x0, V963]
Stack pops: 1
Stack additions: [V970]
Exit stack: [0x0, V970]

================================

Block 0x1060
[0x1060:0x1107]
---
Predecessors: [0x1059]
Successors: [0x1108]
---
0x1060 JUMPDEST
0x1061 SWAP1
0x1062 POP
0x1063 SWAP1
0x1064 JUMP
0x1065 JUMPDEST
0x1066 PUSH1 0x0
0x1068 PUSH1 0x3
0x106a SLOAD
0x106b SWAP1
0x106c POP
0x106d SWAP1
0x106e JUMP
0x106f JUMPDEST
0x1070 DUP1
0x1071 PUSH1 0x5
0x1073 DUP2
0x1074 SWAP1
0x1075 SSTORE
0x1076 POP
0x1077 PUSH32 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x1098 PUSH1 0x5
0x109a SLOAD
0x109b PUSH1 0x40
0x109d MLOAD
0x109e DUP1
0x109f DUP3
0x10a0 DUP2
0x10a1 MSTORE
0x10a2 PUSH1 0x20
0x10a4 ADD
0x10a5 SWAP2
0x10a6 POP
0x10a7 POP
0x10a8 PUSH1 0x40
0x10aa MLOAD
0x10ab DUP1
0x10ac SWAP2
0x10ad SUB
0x10ae SWAP1
0x10af LOG1
0x10b0 POP
0x10b1 JUMP
0x10b2 JUMPDEST
0x10b3 PUSH1 0x0
0x10b5 DUP1
0x10b6 SWAP1
0x10b7 SLOAD
0x10b8 SWAP1
0x10b9 PUSH2 0x100
0x10bc EXP
0x10bd SWAP1
0x10be DIV
0x10bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d4 AND
0x10d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ea AND
0x10eb CALLER
0x10ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1101 AND
0x1102 EQ
0x1103 ISZERO
0x1104 PUSH2 0xa57
0x1107 JUMPI
---
0x1060: JUMPDEST 
0x1064: JUMP S2
0x1065: JUMPDEST 
0x1066: V971 = 0x0
0x1068: V972 = 0x3
0x106a: V973 = S[0x3]
0x106e: JUMP S0
0x106f: JUMPDEST 
0x1071: V974 = 0x5
0x1075: S[0x5] = S0
0x1077: V975 = 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x1098: V976 = 0x5
0x109a: V977 = S[0x5]
0x109b: V978 = 0x40
0x109d: V979 = M[0x40]
0x10a1: M[V979] = V977
0x10a2: V980 = 0x20
0x10a4: V981 = ADD 0x20 V979
0x10a8: V982 = 0x40
0x10aa: V983 = M[0x40]
0x10ad: V984 = SUB V981 V983
0x10af: LOG V983 V984 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x10b1: JUMP S1
0x10b2: JUMPDEST 
0x10b3: V985 = 0x0
0x10b7: V986 = S[0x0]
0x10b9: V987 = 0x100
0x10bc: V988 = EXP 0x100 0x0
0x10be: V989 = DIV V986 0x1
0x10bf: V990 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d4: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0x10d5: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ea: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0x10eb: V994 = CALLER
0x10ec: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x1101: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0x1102: V997 = EQ V996 V993
0x1103: V998 = ISZERO V997
0x1104: V999 = 0xa57
0x1107: THROWI V998
---
Entry stack: [0x0, V970]
Stack pops: 18
Stack additions: []
Exit stack: []

================================

Block 0x1108
[0x1108:0x1147]
---
Predecessors: [0x1060]
Successors: [0x1148]
---
0x1108 DUP1
0x1109 PUSH1 0x0
0x110b DUP1
0x110c PUSH2 0x100
0x110f EXP
0x1110 DUP2
0x1111 SLOAD
0x1112 DUP2
0x1113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1128 MUL
0x1129 NOT
0x112a AND
0x112b SWAP1
0x112c DUP4
0x112d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1142 AND
0x1143 MUL
0x1144 OR
0x1145 SWAP1
0x1146 SSTORE
0x1147 POP
---
0x1109: V1000 = 0x0
0x110c: V1001 = 0x100
0x110f: V1002 = EXP 0x100 0x0
0x1111: V1003 = S[0x0]
0x1113: V1004 = 0xffffffffffffffffffffffffffffffffffffffff
0x1128: V1005 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1129: V1006 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x112a: V1007 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1003
0x112d: V1008 = 0xffffffffffffffffffffffffffffffffffffffff
0x1142: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1143: V1010 = MUL V1009 0x1
0x1144: V1011 = OR V1010 V1007
0x1146: S[0x0] = V1011
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x1148
[0x1148:0x11a2]
---
Predecessors: [0x1108]
Successors: [0x11a3]
---
0x1148 JUMPDEST
0x1149 POP
0x114a JUMP
0x114b JUMPDEST
0x114c PUSH1 0x0
0x114e DUP1
0x114f PUSH1 0x0
0x1151 SWAP1
0x1152 SLOAD
0x1153 SWAP1
0x1154 PUSH2 0x100
0x1157 EXP
0x1158 SWAP1
0x1159 DIV
0x115a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116f AND
0x1170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1185 AND
0x1186 CALLER
0x1187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119c AND
0x119d EQ
0x119e ISZERO
0x119f PUSH2 0xba6
0x11a2 JUMPI
---
0x1148: JUMPDEST 
0x114a: JUMP S1
0x114b: JUMPDEST 
0x114c: V1012 = 0x0
0x114f: V1013 = 0x0
0x1152: V1014 = S[0x0]
0x1154: V1015 = 0x100
0x1157: V1016 = EXP 0x100 0x0
0x1159: V1017 = DIV V1014 0x1
0x115a: V1018 = 0xffffffffffffffffffffffffffffffffffffffff
0x116f: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V1017
0x1170: V1020 = 0xffffffffffffffffffffffffffffffffffffffff
0x1185: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1019
0x1186: V1022 = CALLER
0x1187: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0x119c: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1022
0x119d: V1025 = EQ V1024 V1021
0x119e: V1026 = ISZERO V1025
0x119f: V1027 = 0xba6
0x11a2: THROWI V1026
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [0x0]
Exit stack: []

================================

Block 0x11a3
[0x11a3:0x11af]
---
Predecessors: [0x1148]
Successors: [0x11b0]
---
0x11a3 PUSH2 0xab9
0x11a6 PUSH2 0x95a
0x11a9 JUMP
0x11aa JUMPDEST
0x11ab ISZERO
0x11ac PUSH2 0xba5
0x11af JUMPI
---
0x11a3: V1028 = 0xab9
0x11a6: V1029 = 0x95a
0x11a9: THROW 
0x11aa: JUMPDEST 
0x11ab: V1030 = ISZERO S0
0x11ac: V1031 = 0xba5
0x11af: THROWI V1030
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0xab9]
Exit stack: []

================================

Block 0x11b0
[0x11b0:0x11fb]
---
Predecessors: [0x11a3]
Successors: [0x11fc]
---
0x11b0 PUSH1 0x2
0x11b2 PUSH1 0x0
0x11b4 CALLER
0x11b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ca AND
0x11cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e0 AND
0x11e1 DUP2
0x11e2 MSTORE
0x11e3 PUSH1 0x20
0x11e5 ADD
0x11e6 SWAP1
0x11e7 DUP2
0x11e8 MSTORE
0x11e9 PUSH1 0x20
0x11eb ADD
0x11ec PUSH1 0x0
0x11ee SHA3
0x11ef SLOAD
0x11f0 SWAP1
0x11f1 POP
0x11f2 PUSH1 0x0
0x11f4 DUP2
0x11f5 GT
0x11f6 DUP1
0x11f7 ISZERO
0x11f8 PUSH2 0xb10
0x11fb JUMPI
---
0x11b0: V1032 = 0x2
0x11b2: V1033 = 0x0
0x11b4: V1034 = CALLER
0x11b5: V1035 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ca: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0x11cb: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e0: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1036
0x11e2: M[0x0] = V1038
0x11e3: V1039 = 0x20
0x11e5: V1040 = ADD 0x20 0x0
0x11e8: M[0x20] = 0x2
0x11e9: V1041 = 0x20
0x11eb: V1042 = ADD 0x20 0x20
0x11ec: V1043 = 0x0
0x11ee: V1044 = SHA3 0x0 0x40
0x11ef: V1045 = S[V1044]
0x11f2: V1046 = 0x0
0x11f5: V1047 = GT V1045 0x0
0x11f7: V1048 = ISZERO V1047
0x11f8: V1049 = 0xb10
0x11fb: THROWI V1048
---
Entry stack: []
Stack pops: 1
Stack additions: [V1045, V1047]
Exit stack: [V1045, V1047]

================================

Block 0x11fc
[0x11fc:0x1200]
---
Predecessors: [0x11b0]
Successors: [0x1201]
---
0x11fc POP
0x11fd DUP1
0x11fe DUP3
0x11ff GT
0x1200 ISZERO
---
0x11ff: V1050 = GT S2 V1045
0x1200: V1051 = ISZERO V1050
---
Entry stack: [V1045, V1047]
Stack pops: 3
Stack additions: [S2, S1, V1051]
Exit stack: [S0, V1045, V1051]

================================

Block 0x1201
[0x1201:0x1206]
---
Predecessors: [0x11fc]
Successors: [0x1207]
---
0x1201 JUMPDEST
0x1202 ISZERO
0x1203 PUSH2 0xba4
0x1206 JUMPI
---
0x1201: JUMPDEST 
0x1202: V1052 = ISZERO V1051
0x1203: V1053 = 0xba4
0x1206: THROWI V1052
---
Entry stack: [S2, V1045, V1051]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V1045]

================================

Block 0x1207
[0x1207:0x1241]
---
Predecessors: [0x1201]
Successors: [0x1242]
---
0x1207 DUP3
0x1208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121d AND
0x121e PUSH2 0x8fc
0x1221 DUP4
0x1222 SWAP1
0x1223 DUP2
0x1224 ISZERO
0x1225 MUL
0x1226 SWAP1
0x1227 PUSH1 0x40
0x1229 MLOAD
0x122a PUSH1 0x0
0x122c PUSH1 0x40
0x122e MLOAD
0x122f DUP1
0x1230 DUP4
0x1231 SUB
0x1232 DUP2
0x1233 DUP6
0x1234 DUP9
0x1235 DUP9
0x1236 CALL
0x1237 SWAP4
0x1238 POP
0x1239 POP
0x123a POP
0x123b POP
0x123c ISZERO
0x123d ISZERO
0x123e PUSH2 0xb55
0x1241 JUMPI
---
0x1208: V1054 = 0xffffffffffffffffffffffffffffffffffffffff
0x121d: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x121e: V1056 = 0x8fc
0x1224: V1057 = ISZERO S1
0x1225: V1058 = MUL V1057 0x8fc
0x1227: V1059 = 0x40
0x1229: V1060 = M[0x40]
0x122a: V1061 = 0x0
0x122c: V1062 = 0x40
0x122e: V1063 = M[0x40]
0x1231: V1064 = SUB V1060 V1063
0x1236: V1065 = CALL V1058 V1055 S1 V1063 V1064 V1063 0x0
0x123c: V1066 = ISZERO V1065
0x123d: V1067 = ISZERO V1066
0x123e: V1068 = 0xb55
0x1241: THROWI V1067
---
Entry stack: [S1, V1045]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S0, S1, V1045]

================================

Block 0x1242
[0x1242:0x1294]
---
Predecessors: [0x1207]
Successors: [0x1295]
---
0x1242 PUSH1 0x0
0x1244 DUP1
0x1245 REVERT
0x1246 JUMPDEST
0x1247 DUP3
0x1248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125d AND
0x125e PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x127f DUP4
0x1280 PUSH1 0x40
0x1282 MLOAD
0x1283 DUP1
0x1284 DUP3
0x1285 DUP2
0x1286 MSTORE
0x1287 PUSH1 0x20
0x1289 ADD
0x128a SWAP2
0x128b POP
0x128c POP
0x128d PUSH1 0x40
0x128f MLOAD
0x1290 DUP1
0x1291 SWAP2
0x1292 SUB
0x1293 SWAP1
0x1294 LOG2
---
0x1242: V1069 = 0x0
0x1245: REVERT 0x0 0x0
0x1246: JUMPDEST 
0x1248: V1070 = 0xffffffffffffffffffffffffffffffffffffffff
0x125d: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x125e: V1072 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x1280: V1073 = 0x40
0x1282: V1074 = M[0x40]
0x1286: M[V1074] = S1
0x1287: V1075 = 0x20
0x1289: V1076 = ADD 0x20 V1074
0x128d: V1077 = 0x40
0x128f: V1078 = M[0x40]
0x1292: V1079 = SUB V1076 V1078
0x1294: LOG V1078 V1079 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V1071
---
Entry stack: [S2, S1, V1045]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x1295
[0x1295:0x1295]
---
Predecessors: [0x1242]
Successors: [0x1296]
---
0x1295 JUMPDEST
---
0x1295: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x1296
[0x1296:0x1296]
---
Predecessors: [0x1295]
Successors: [0x1297]
---
0x1296 JUMPDEST
---
0x1296: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x1297
[0x1297:0x12e4]
---
Predecessors: [0x1296]
Successors: []
---
0x1297 JUMPDEST
0x1298 POP
0x1299 POP
0x129a POP
0x129b JUMP
0x129c JUMPDEST
0x129d PUSH1 0x1
0x129f PUSH1 0x4
0x12a1 PUSH1 0x0
0x12a3 PUSH2 0x100
0x12a6 EXP
0x12a7 DUP2
0x12a8 SLOAD
0x12a9 DUP2
0x12aa PUSH1 0xff
0x12ac MUL
0x12ad NOT
0x12ae AND
0x12af SWAP1
0x12b0 DUP4
0x12b1 ISZERO
0x12b2 ISZERO
0x12b3 MUL
0x12b4 OR
0x12b5 SWAP1
0x12b6 SSTORE
0x12b7 POP
0x12b8 JUMP
0x12b9 STOP
0x12ba LOG1
0x12bb PUSH6 0x627a7a723058
0x12c2 SHA3
0x12c3 NUMBER
0x12c4 MISSING 0xb2
0x12c5 MISSING 0xb9
0x12c6 CALLER
0x12c7 PUSH26 0x7bfddd874dd3074bfd61fc2962a1ebb68a2c5641b8da584d9b40
0x12e2 MISSING 0x5e
0x12e3 STOP
0x12e4 MISSING 0x29
---
0x1297: JUMPDEST 
0x129b: JUMP S3
0x129c: JUMPDEST 
0x129d: V1080 = 0x1
0x129f: V1081 = 0x4
0x12a1: V1082 = 0x0
0x12a3: V1083 = 0x100
0x12a6: V1084 = EXP 0x100 0x0
0x12a8: V1085 = S[0x4]
0x12aa: V1086 = 0xff
0x12ac: V1087 = MUL 0xff 0x1
0x12ad: V1088 = NOT 0xff
0x12ae: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1085
0x12b1: V1090 = ISZERO 0x1
0x12b2: V1091 = ISZERO 0x0
0x12b3: V1092 = MUL 0x1 0x1
0x12b4: V1093 = OR 0x1 V1089
0x12b6: S[0x4] = V1093
0x12b8: JUMP S0
0x12b9: STOP 
0x12ba: LOG S0 S1 S2
0x12bb: V1094 = 0x627a7a723058
0x12c2: V1095 = SHA3 0x627a7a723058 S3
0x12c3: V1096 = NUMBER
0x12c4: MISSING 0xb2
0x12c5: MISSING 0xb9
0x12c6: V1097 = CALLER
0x12c7: V1098 = 0x7bfddd874dd3074bfd61fc2962a1ebb68a2c5641b8da584d9b40
0x12e2: MISSING 0x5e
0x12e3: STOP 
0x12e4: MISSING 0x29
---
Entry stack: [S2, S1, S0]
Stack pops: 492
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xf2fde38b
Entry block: 0x46
Exit block: 0x7d
Body: 0x46, 0x4d, 0x51, 0x7d, 0x7f, 0xd5, 0x115

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

