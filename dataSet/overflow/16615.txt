Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x3f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH1 0x3f
0xb JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3f
0xb: JUMPI 0x3f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc
[0xc:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x44]
---
0xc PUSH1 0x0
0xe CALLDATALOAD
0xf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d SWAP1
0x2e DIV
0x2f PUSH4 0xffffffff
0x34 AND
0x35 DUP1
0x36 PUSH4 0x23b872dd
0x3b EQ
0x3c PUSH1 0x44
0x3e JUMPI
---
0xc: V6 = 0x0
0xe: V7 = CALLDATALOAD 0x0
0xf: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0xffffffff
0x34: V11 = AND 0xffffffff V9
0x36: V12 = 0x23b872dd
0x3b: V13 = EQ 0x23b872dd V11
0x3c: V14 = 0x44
0x3e: JUMPI 0x44 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x43]
---
Predecessors: [0x0, 0xc]
Successors: []
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 DUP1
0x43 REVERT
---
0x3f: JUMPDEST 
0x40: V15 = 0x0
0x43: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44
[0x44:0x49]
---
Predecessors: [0xc]
Successors: [0x4a, 0x4e]
---
0x44 JUMPDEST
0x45 CALLVALUE
0x46 ISZERO
0x47 PUSH1 0x4e
0x49 JUMPI
---
0x44: JUMPDEST 
0x45: V16 = CALLVALUE
0x46: V17 = ISZERO V16
0x47: V18 = 0x4e
0x49: JUMPI 0x4e V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x44]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V19 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x9f]
---
Predecessors: [0x44]
Successors: [0xba]
---
0x4e JUMPDEST
0x4f PUSH1 0xa0
0x51 PUSH1 0x4
0x53 DUP1
0x54 DUP1
0x55 CALLDATALOAD
0x56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b AND
0x6c SWAP1
0x6d PUSH1 0x20
0x6f ADD
0x70 SWAP1
0x71 SWAP2
0x72 SWAP1
0x73 DUP1
0x74 CALLDATALOAD
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b SWAP1
0x8c PUSH1 0x20
0x8e ADD
0x8f SWAP1
0x90 SWAP2
0x91 SWAP1
0x92 DUP1
0x93 CALLDATALOAD
0x94 SWAP1
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP1
0x99 SWAP2
0x9a SWAP1
0x9b POP
0x9c POP
0x9d PUSH1 0xba
0x9f JUMP
---
0x4e: JUMPDEST 
0x4f: V20 = 0xa0
0x51: V21 = 0x4
0x55: V22 = CALLDATALOAD 0x4
0x56: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x6d: V25 = 0x20
0x6f: V26 = ADD 0x20 0x4
0x74: V27 = CALLDATALOAD 0x24
0x75: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x8c: V30 = 0x20
0x8e: V31 = ADD 0x20 0x24
0x93: V32 = CALLDATALOAD 0x44
0x95: V33 = 0x20
0x97: V34 = ADD 0x20 0x44
0x9d: V35 = 0xba
0x9f: JUMP 0xba
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa0, V24, V29, V32]
Exit stack: [V11, 0xa0, V24, V29, V32]

================================

Block 0xa0
[0xa0:0xb9]
---
Predecessors: [0xba]
Successors: []
---
0xa0 JUMPDEST
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 DUP1
0xa5 DUP3
0xa6 ISZERO
0xa7 ISZERO
0xa8 ISZERO
0xa9 ISZERO
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf SWAP2
0xb0 POP
0xb1 POP
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 DUP1
0xb6 SWAP2
0xb7 SUB
0xb8 SWAP1
0xb9 RETURN
---
0xa0: JUMPDEST 
0xa1: V36 = 0x40
0xa3: V37 = M[0x40]
0xa6: V38 = ISZERO 0x0
0xa7: V39 = ISZERO 0x1
0xa8: V40 = ISZERO 0x0
0xa9: V41 = ISZERO 0x1
0xab: M[V37] = 0x0
0xac: V42 = 0x20
0xae: V43 = ADD 0x20 V37
0xb2: V44 = 0x40
0xb4: V45 = M[0x40]
0xb7: V46 = SUB V43 V45
0xb9: RETURN V45 V46
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc2]
---
Predecessors: [0x4e]
Successors: [0xa0]
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd SWAP4
0xbe SWAP3
0xbf POP
0xc0 POP
0xc1 POP
0xc2 JUMP
---
0xba: JUMPDEST 
0xbb: V47 = 0x0
0xc2: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V24, V29, V32]
Stack pops: 4
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xc3
[0xc3:0xd2]
---
Predecessors: []
Successors: [0xd3]
Has unresolved jump.
---
0xc3 STOP
0xc4 LOG1
0xc5 PUSH6 0x627a7a723058
0xcc SHA3
0xcd GASLIMIT
0xce MISSING 0xaf
0xcf MISSING 0x21
0xd0 MISSING 0xde
0xd1 SWAP10
0xd2 JUMPI
---
0xc3: STOP 
0xc4: LOG S0 S1 S2
0xc5: V48 = 0x627a7a723058
0xcc: V49 = SHA3 0x627a7a723058 S3
0xcd: V50 = GASLIMIT
0xce: MISSING 0xaf
0xcf: MISSING 0x21
0xd0: MISSING 0xde
0xd2: JUMPI S10 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V50, V49, S2, S3, S4, S5, S6, S7, S8, S9, S0]
Exit stack: []

================================

Block 0xd3
[0xd3:0xfb]
---
Predecessors: [0xc3]
Successors: [0xfc]
---
0xd3 MISSING 0x1f
0xd4 MISSING 0x2f
0xd5 MISSING 0xe7
0xd6 LOG3
0xd7 CREATE2
0xd8 ISZERO
0xd9 MISSING 0xad
0xda LOG3
0xdb SLOAD
0xdc MISSING 0xe9
0xdd MISSING 0xbb
0xde MISSING 0x4c
0xdf MISSING 0xef
0xe0 PUSH15 0x102672d27d8a53410a8ed8d002960
0xf0 PUSH1 0x60
0xf2 BLOCKHASH
0xf3 MSTORE
0xf4 PUSH1 0x4
0xf6 CALLDATASIZE
0xf7 LT
0xf8 PUSH2 0x4c
0xfb JUMPI
---
0xd3: MISSING 0x1f
0xd4: MISSING 0x2f
0xd5: MISSING 0xe7
0xd6: LOG S0 S1 S2 S3 S4
0xd7: V51 = CREATE2 S5 S6 S7 S8
0xd8: V52 = ISZERO V51
0xd9: MISSING 0xad
0xda: LOG S0 S1 S2 S3 S4
0xdb: V53 = S[S5]
0xdc: MISSING 0xe9
0xdd: MISSING 0xbb
0xde: MISSING 0x4c
0xdf: MISSING 0xef
0xe0: V54 = 0x102672d27d8a53410a8ed8d002960
0xf0: V55 = 0x60
0xf2: V56 = BLOCKHASH 0x60
0xf3: M[V56] = 0x102672d27d8a53410a8ed8d002960
0xf4: V57 = 0x4
0xf6: V58 = CALLDATASIZE
0xf7: V59 = LT V58 0x4
0xf8: V60 = 0x4c
0xfb: THROWI V59
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V52, V53]
Exit stack: []

================================

Block 0xfc
[0xfc:0x12f]
---
Predecessors: [0xd3]
Successors: [0x130]
---
0xfc PUSH1 0x0
0xfe CALLDATALOAD
0xff PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11d SWAP1
0x11e DIV
0x11f PUSH4 0xffffffff
0x124 AND
0x125 DUP1
0x126 PUSH4 0x8da5cb5b
0x12b EQ
0x12c PUSH2 0x51
0x12f JUMPI
---
0xfc: V61 = 0x0
0xfe: V62 = CALLDATALOAD 0x0
0xff: V63 = 0x100000000000000000000000000000000000000000000000000000000
0x11e: V64 = DIV V62 0x100000000000000000000000000000000000000000000000000000000
0x11f: V65 = 0xffffffff
0x124: V66 = AND 0xffffffff V64
0x126: V67 = 0x8da5cb5b
0x12b: V68 = EQ 0x8da5cb5b V66
0x12c: V69 = 0x51
0x12f: THROWI V68
---
Entry stack: []
Stack pops: 0
Stack additions: [V66]
Exit stack: [V66]

================================

Block 0x130
[0x130:0x13a]
---
Predecessors: [0xfc]
Successors: [0x13b]
---
0x130 DUP1
0x131 PUSH4 0xf2fde38b
0x136 EQ
0x137 PUSH2 0xa6
0x13a JUMPI
---
0x131: V70 = 0xf2fde38b
0x136: V71 = EQ 0xf2fde38b V66
0x137: V72 = 0xa6
0x13a: THROWI V71
---
Entry stack: [V66]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V66]

================================

Block 0x13b
[0x13b:0x146]
---
Predecessors: [0x130]
Successors: [0x147]
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
0x140 JUMPDEST
0x141 CALLVALUE
0x142 ISZERO
0x143 PUSH2 0x5c
0x146 JUMPI
---
0x13b: JUMPDEST 
0x13c: V73 = 0x0
0x13f: REVERT 0x0 0x0
0x140: JUMPDEST 
0x141: V74 = CALLVALUE
0x142: V75 = ISZERO V74
0x143: V76 = 0x5c
0x146: THROWI V75
---
Entry stack: [V66]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x147
[0x147:0x19b]
---
Predecessors: [0x13b]
Successors: [0x19c]
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
0x14b JUMPDEST
0x14c PUSH2 0x64
0x14f PUSH2 0xdf
0x152 JUMP
0x153 JUMPDEST
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 DUP3
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 DUP2
0x186 MSTORE
0x187 PUSH1 0x20
0x189 ADD
0x18a SWAP2
0x18b POP
0x18c POP
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 SWAP2
0x192 SUB
0x193 SWAP1
0x194 RETURN
0x195 JUMPDEST
0x196 CALLVALUE
0x197 ISZERO
0x198 PUSH2 0xb1
0x19b JUMPI
---
0x147: V77 = 0x0
0x14a: REVERT 0x0 0x0
0x14b: JUMPDEST 
0x14c: V78 = 0x64
0x14f: V79 = 0xdf
0x152: THROW 
0x153: JUMPDEST 
0x154: V80 = 0x40
0x156: V81 = M[0x40]
0x159: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x16f: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x186: M[V81] = V85
0x187: V86 = 0x20
0x189: V87 = ADD 0x20 V81
0x18d: V88 = 0x40
0x18f: V89 = M[0x40]
0x192: V90 = SUB V87 V89
0x194: RETURN V89 V90
0x195: JUMPDEST 
0x196: V91 = CALLVALUE
0x197: V92 = ISZERO V91
0x198: V93 = 0xb1
0x19b: THROWI V92
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x19c
[0x19c:0x249]
---
Predecessors: [0x147]
Successors: [0x24a]
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
0x1a0 JUMPDEST
0x1a1 PUSH2 0xdd
0x1a4 PUSH1 0x4
0x1a6 DUP1
0x1a7 DUP1
0x1a8 CALLDATALOAD
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 SWAP2
0x1c5 SWAP1
0x1c6 POP
0x1c7 POP
0x1c8 PUSH2 0x104
0x1cb JUMP
0x1cc JUMPDEST
0x1cd STOP
0x1ce JUMPDEST
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 SWAP1
0x1d3 SLOAD
0x1d4 SWAP1
0x1d5 PUSH2 0x100
0x1d8 EXP
0x1d9 SWAP1
0x1da DIV
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 DUP2
0x1f2 JUMP
0x1f3 JUMPDEST
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 SWAP1
0x1f8 SLOAD
0x1f9 SWAP1
0x1fa PUSH2 0x100
0x1fd EXP
0x1fe SWAP1
0x1ff DIV
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c CALLER
0x22d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x242 AND
0x243 EQ
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x15f
0x249 JUMPI
---
0x19c: V94 = 0x0
0x19f: REVERT 0x0 0x0
0x1a0: JUMPDEST 
0x1a1: V95 = 0xdd
0x1a4: V96 = 0x4
0x1a8: V97 = CALLDATALOAD 0x4
0x1a9: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1c0: V100 = 0x20
0x1c2: V101 = ADD 0x20 0x4
0x1c8: V102 = 0x104
0x1cb: THROW 
0x1cc: JUMPDEST 
0x1cd: STOP 
0x1ce: JUMPDEST 
0x1cf: V103 = 0x0
0x1d3: V104 = S[0x0]
0x1d5: V105 = 0x100
0x1d8: V106 = EXP 0x100 0x0
0x1da: V107 = DIV V104 0x1
0x1db: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1f2: JUMP S0
0x1f3: JUMPDEST 
0x1f4: V110 = 0x0
0x1f8: V111 = S[0x0]
0x1fa: V112 = 0x100
0x1fd: V113 = EXP 0x100 0x0
0x1ff: V114 = DIV V111 0x1
0x200: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x216: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x22c: V119 = CALLER
0x22d: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x242: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x243: V122 = EQ V121 V118
0x244: V123 = ISZERO V122
0x245: V124 = ISZERO V123
0x246: V125 = 0x15f
0x249: THROWI V124
---
Entry stack: []
Stack pops: 0
Stack additions: [V99, 0xdd, V109, S0]
Exit stack: []

================================

Block 0x24a
[0x24a:0x284]
---
Predecessors: [0x19c]
Successors: [0x285]
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 DUP2
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d AND
0x27e EQ
0x27f ISZERO
0x280 ISZERO
0x281 PUSH2 0x1d6
0x284 JUMPI
---
0x24a: V126 = 0x0
0x24d: REVERT 0x0 0x0
0x24e: JUMPDEST 
0x24f: V127 = 0x0
0x251: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x268: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x27e: V132 = EQ V131 0x0
0x27f: V133 = ISZERO V132
0x280: V134 = ISZERO V133
0x281: V135 = 0x1d6
0x284: THROWI V134
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x285
[0x285:0x2c4]
---
Predecessors: [0x24a]
Successors: [0x2c5]
---
0x285 DUP1
0x286 PUSH1 0x0
0x288 DUP1
0x289 PUSH2 0x100
0x28c EXP
0x28d DUP2
0x28e SLOAD
0x28f DUP2
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 MUL
0x2a6 NOT
0x2a7 AND
0x2a8 SWAP1
0x2a9 DUP4
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 MUL
0x2c1 OR
0x2c2 SWAP1
0x2c3 SSTORE
0x2c4 POP
---
0x286: V136 = 0x0
0x289: V137 = 0x100
0x28c: V138 = EXP 0x100 0x0
0x28e: V139 = S[0x0]
0x290: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V141 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2a6: V142 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V143 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V139
0x2aa: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2c0: V146 = MUL V145 0x1
0x2c1: V147 = OR V146 V143
0x2c3: S[0x0] = V147
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x2c5
[0x2c5:0x334]
---
Predecessors: [0x285]
Successors: [0x335]
---
0x2c5 JUMPDEST
0x2c6 POP
0x2c7 JUMP
0x2c8 STOP
0x2c9 LOG1
0x2ca PUSH6 0x627a7a723058
0x2d1 SHA3
0x2d2 PUSH30 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846
0x2f1 PUSH17 0x29606060405260043610610057576000
0x303 CALLDATALOAD
0x304 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x322 SWAP1
0x323 DIV
0x324 PUSH4 0xffffffff
0x329 AND
0x32a DUP1
0x32b PUSH4 0x8da5cb5b
0x330 EQ
0x331 PUSH2 0x5c
0x334 JUMPI
---
0x2c5: JUMPDEST 
0x2c7: JUMP S1
0x2c8: STOP 
0x2c9: LOG S0 S1 S2
0x2ca: V148 = 0x627a7a723058
0x2d1: V149 = SHA3 0x627a7a723058 S3
0x2d2: V150 = 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846
0x2f1: V151 = 0x29606060405260043610610057576000
0x303: V152 = CALLDATALOAD 0x29606060405260043610610057576000
0x304: V153 = 0x100000000000000000000000000000000000000000000000000000000
0x323: V154 = DIV V152 0x100000000000000000000000000000000000000000000000000000000
0x324: V155 = 0xffffffff
0x329: V156 = AND 0xffffffff V154
0x32b: V157 = 0x8da5cb5b
0x330: V158 = EQ 0x8da5cb5b V156
0x331: V159 = 0x5c
0x334: THROWI V158
---
Entry stack: [S0]
Stack pops: 8
Stack additions: [V156, 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846, V149]
Exit stack: []

================================

Block 0x335
[0x335:0x33f]
---
Predecessors: [0x2c5]
Successors: [0x340]
---
0x335 DUP1
0x336 PUSH4 0xdd719d2c
0x33b EQ
0x33c PUSH2 0xb1
0x33f JUMPI
---
0x336: V160 = 0xdd719d2c
0x33b: V161 = EQ 0xdd719d2c V156
0x33c: V162 = 0xb1
0x33f: THROWI V161
---
Entry stack: [V149, 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846, V156]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V149, 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846, V156]

================================

Block 0x340
[0x340:0x34a]
---
Predecessors: [0x335]
Successors: [0x34b]
---
0x340 DUP1
0x341 PUSH4 0xf2fde38b
0x346 EQ
0x347 PUSH2 0x189
0x34a JUMPI
---
0x341: V163 = 0xf2fde38b
0x346: V164 = EQ 0xf2fde38b V156
0x347: V165 = 0x189
0x34a: THROWI V164
---
Entry stack: [V149, 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846, V156]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V149, 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846, V156]

================================

Block 0x34b
[0x34b:0x356]
---
Predecessors: [0x340]
Successors: [0x357]
---
0x34b JUMPDEST
0x34c PUSH1 0x0
0x34e DUP1
0x34f REVERT
0x350 JUMPDEST
0x351 CALLVALUE
0x352 ISZERO
0x353 PUSH2 0x67
0x356 JUMPI
---
0x34b: JUMPDEST 
0x34c: V166 = 0x0
0x34f: REVERT 0x0 0x0
0x350: JUMPDEST 
0x351: V167 = CALLVALUE
0x352: V168 = ISZERO V167
0x353: V169 = 0x67
0x356: THROWI V168
---
Entry stack: [V149, 0xb1451fa4c632b528d4dbe1609f2b758cccf80d347546430a8c0cf70f0846, V156]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x357
[0x357:0x3ab]
---
Predecessors: [0x34b]
Successors: [0x3ac]
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
0x35b JUMPDEST
0x35c PUSH2 0x6f
0x35f PUSH2 0x1c2
0x362 JUMP
0x363 JUMPDEST
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP3
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x394 AND
0x395 DUP2
0x396 MSTORE
0x397 PUSH1 0x20
0x399 ADD
0x39a SWAP2
0x39b POP
0x39c POP
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 DUP1
0x3a1 SWAP2
0x3a2 SUB
0x3a3 SWAP1
0x3a4 RETURN
0x3a5 JUMPDEST
0x3a6 CALLVALUE
0x3a7 ISZERO
0x3a8 PUSH2 0xbc
0x3ab JUMPI
---
0x357: V170 = 0x0
0x35a: REVERT 0x0 0x0
0x35b: JUMPDEST 
0x35c: V171 = 0x6f
0x35f: V172 = 0x1c2
0x362: THROW 
0x363: JUMPDEST 
0x364: V173 = 0x40
0x366: V174 = M[0x40]
0x369: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x37f: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x394: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x396: M[V174] = V178
0x397: V179 = 0x20
0x399: V180 = ADD 0x20 V174
0x39d: V181 = 0x40
0x39f: V182 = M[0x40]
0x3a2: V183 = SUB V180 V182
0x3a4: RETURN V182 V183
0x3a5: JUMPDEST 
0x3a6: V184 = CALLVALUE
0x3a7: V185 = ISZERO V184
0x3a8: V186 = 0xbc
0x3ab: THROWI V185
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6f]
Exit stack: []

================================

Block 0x3ac
[0x3ac:0x483]
---
Predecessors: [0x357]
Successors: [0x484]
---
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af REVERT
0x3b0 JUMPDEST
0x3b1 PUSH2 0x187
0x3b4 PUSH1 0x4
0x3b6 DUP1
0x3b7 DUP1
0x3b8 CALLDATALOAD
0x3b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ce AND
0x3cf SWAP1
0x3d0 PUSH1 0x20
0x3d2 ADD
0x3d3 SWAP1
0x3d4 SWAP2
0x3d5 SWAP1
0x3d6 DUP1
0x3d7 CALLDATALOAD
0x3d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ed AND
0x3ee SWAP1
0x3ef PUSH1 0x20
0x3f1 ADD
0x3f2 SWAP1
0x3f3 SWAP2
0x3f4 SWAP1
0x3f5 DUP1
0x3f6 CALLDATALOAD
0x3f7 SWAP1
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb SWAP1
0x3fc DUP3
0x3fd ADD
0x3fe DUP1
0x3ff CALLDATALOAD
0x400 SWAP1
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP1
0x405 DUP1
0x406 DUP1
0x407 PUSH1 0x20
0x409 MUL
0x40a PUSH1 0x20
0x40c ADD
0x40d PUSH1 0x40
0x40f MLOAD
0x410 SWAP1
0x411 DUP2
0x412 ADD
0x413 PUSH1 0x40
0x415 MSTORE
0x416 DUP1
0x417 SWAP4
0x418 SWAP3
0x419 SWAP2
0x41a SWAP1
0x41b DUP2
0x41c DUP2
0x41d MSTORE
0x41e PUSH1 0x20
0x420 ADD
0x421 DUP4
0x422 DUP4
0x423 PUSH1 0x20
0x425 MUL
0x426 DUP1
0x427 DUP3
0x428 DUP5
0x429 CALLDATACOPY
0x42a DUP3
0x42b ADD
0x42c SWAP2
0x42d POP
0x42e POP
0x42f POP
0x430 POP
0x431 POP
0x432 POP
0x433 SWAP2
0x434 SWAP1
0x435 DUP1
0x436 CALLDATALOAD
0x437 SWAP1
0x438 PUSH1 0x20
0x43a ADD
0x43b SWAP1
0x43c DUP3
0x43d ADD
0x43e DUP1
0x43f CALLDATALOAD
0x440 SWAP1
0x441 PUSH1 0x20
0x443 ADD
0x444 SWAP1
0x445 DUP1
0x446 DUP1
0x447 PUSH1 0x20
0x449 MUL
0x44a PUSH1 0x20
0x44c ADD
0x44d PUSH1 0x40
0x44f MLOAD
0x450 SWAP1
0x451 DUP2
0x452 ADD
0x453 PUSH1 0x40
0x455 MSTORE
0x456 DUP1
0x457 SWAP4
0x458 SWAP3
0x459 SWAP2
0x45a SWAP1
0x45b DUP2
0x45c DUP2
0x45d MSTORE
0x45e PUSH1 0x20
0x460 ADD
0x461 DUP4
0x462 DUP4
0x463 PUSH1 0x20
0x465 MUL
0x466 DUP1
0x467 DUP3
0x468 DUP5
0x469 CALLDATACOPY
0x46a DUP3
0x46b ADD
0x46c SWAP2
0x46d POP
0x46e POP
0x46f POP
0x470 POP
0x471 POP
0x472 POP
0x473 SWAP2
0x474 SWAP1
0x475 POP
0x476 POP
0x477 PUSH2 0x1e7
0x47a JUMP
0x47b JUMPDEST
0x47c STOP
0x47d JUMPDEST
0x47e CALLVALUE
0x47f ISZERO
0x480 PUSH2 0x194
0x483 JUMPI
---
0x3ac: V187 = 0x0
0x3af: REVERT 0x0 0x0
0x3b0: JUMPDEST 
0x3b1: V188 = 0x187
0x3b4: V189 = 0x4
0x3b8: V190 = CALLDATALOAD 0x4
0x3b9: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ce: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x3d0: V193 = 0x20
0x3d2: V194 = ADD 0x20 0x4
0x3d7: V195 = CALLDATALOAD 0x24
0x3d8: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x3ef: V198 = 0x20
0x3f1: V199 = ADD 0x20 0x24
0x3f6: V200 = CALLDATALOAD 0x44
0x3f8: V201 = 0x20
0x3fa: V202 = ADD 0x20 0x44
0x3fd: V203 = ADD 0x4 V200
0x3ff: V204 = CALLDATALOAD V203
0x401: V205 = 0x20
0x403: V206 = ADD 0x20 V203
0x407: V207 = 0x20
0x409: V208 = MUL 0x20 V204
0x40a: V209 = 0x20
0x40c: V210 = ADD 0x20 V208
0x40d: V211 = 0x40
0x40f: V212 = M[0x40]
0x412: V213 = ADD V212 V210
0x413: V214 = 0x40
0x415: M[0x40] = V213
0x41d: M[V212] = V204
0x41e: V215 = 0x20
0x420: V216 = ADD 0x20 V212
0x423: V217 = 0x20
0x425: V218 = MUL 0x20 V204
0x429: CALLDATACOPY V216 V206 V218
0x42b: V219 = ADD V216 V218
0x436: V220 = CALLDATALOAD 0x64
0x438: V221 = 0x20
0x43a: V222 = ADD 0x20 0x64
0x43d: V223 = ADD 0x4 V220
0x43f: V224 = CALLDATALOAD V223
0x441: V225 = 0x20
0x443: V226 = ADD 0x20 V223
0x447: V227 = 0x20
0x449: V228 = MUL 0x20 V224
0x44a: V229 = 0x20
0x44c: V230 = ADD 0x20 V228
0x44d: V231 = 0x40
0x44f: V232 = M[0x40]
0x452: V233 = ADD V232 V230
0x453: V234 = 0x40
0x455: M[0x40] = V233
0x45d: M[V232] = V224
0x45e: V235 = 0x20
0x460: V236 = ADD 0x20 V232
0x463: V237 = 0x20
0x465: V238 = MUL 0x20 V224
0x469: CALLDATACOPY V236 V226 V238
0x46b: V239 = ADD V236 V238
0x477: V240 = 0x1e7
0x47a: THROW 
0x47b: JUMPDEST 
0x47c: STOP 
0x47d: JUMPDEST 
0x47e: V241 = CALLVALUE
0x47f: V242 = ISZERO V241
0x480: V243 = 0x194
0x483: THROWI V242
---
Entry stack: []
Stack pops: 0
Stack additions: [V232, V212, V197, V192, 0x187]
Exit stack: []

================================

Block 0x484
[0x484:0x533]
---
Predecessors: [0x3ac]
Successors: [0x534]
---
0x484 PUSH1 0x0
0x486 DUP1
0x487 REVERT
0x488 JUMPDEST
0x489 PUSH2 0x1c0
0x48c PUSH1 0x4
0x48e DUP1
0x48f DUP1
0x490 CALLDATALOAD
0x491 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a6 AND
0x4a7 SWAP1
0x4a8 PUSH1 0x20
0x4aa ADD
0x4ab SWAP1
0x4ac SWAP2
0x4ad SWAP1
0x4ae POP
0x4af POP
0x4b0 PUSH2 0x38f
0x4b3 JUMP
0x4b4 JUMPDEST
0x4b5 STOP
0x4b6 JUMPDEST
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba SWAP1
0x4bb SLOAD
0x4bc SWAP1
0x4bd PUSH2 0x100
0x4c0 EXP
0x4c1 SWAP1
0x4c2 DIV
0x4c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d8 AND
0x4d9 DUP2
0x4da JUMP
0x4db JUMPDEST
0x4dc PUSH1 0x0
0x4de DUP1
0x4df PUSH1 0x0
0x4e1 SWAP1
0x4e2 SLOAD
0x4e3 SWAP1
0x4e4 PUSH2 0x100
0x4e7 EXP
0x4e8 SWAP1
0x4e9 DIV
0x4ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ff AND
0x500 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x515 AND
0x516 CALLER
0x517 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52c AND
0x52d EQ
0x52e ISZERO
0x52f ISZERO
0x530 PUSH2 0x244
0x533 JUMPI
---
0x484: V244 = 0x0
0x487: REVERT 0x0 0x0
0x488: JUMPDEST 
0x489: V245 = 0x1c0
0x48c: V246 = 0x4
0x490: V247 = CALLDATALOAD 0x4
0x491: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x4a8: V250 = 0x20
0x4aa: V251 = ADD 0x20 0x4
0x4b0: V252 = 0x38f
0x4b3: THROW 
0x4b4: JUMPDEST 
0x4b5: STOP 
0x4b6: JUMPDEST 
0x4b7: V253 = 0x0
0x4bb: V254 = S[0x0]
0x4bd: V255 = 0x100
0x4c0: V256 = EXP 0x100 0x0
0x4c2: V257 = DIV V254 0x1
0x4c3: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x4da: JUMP S0
0x4db: JUMPDEST 
0x4dc: V260 = 0x0
0x4df: V261 = 0x0
0x4e2: V262 = S[0x0]
0x4e4: V263 = 0x100
0x4e7: V264 = EXP 0x100 0x0
0x4e9: V265 = DIV V262 0x1
0x4ea: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ff: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x500: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x515: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x516: V270 = CALLER
0x517: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x52c: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x52d: V273 = EQ V272 V269
0x52e: V274 = ISZERO V273
0x52f: V275 = ISZERO V274
0x530: V276 = 0x244
0x533: THROWI V275
---
Entry stack: []
Stack pops: 0
Stack additions: [V249, 0x1c0, V259, S0, 0x0]
Exit stack: []

================================

Block 0x534
[0x534:0x53c]
---
Predecessors: [0x484]
Successors: [0x53d]
---
0x534 PUSH1 0x0
0x536 DUP1
0x537 REVERT
0x538 JUMPDEST
0x539 PUSH1 0x0
0x53b SWAP1
0x53c POP
---
0x534: V277 = 0x0
0x537: REVERT 0x0 0x0
0x538: JUMPDEST 
0x539: V278 = 0x0
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x53d
[0x53d:0x546]
---
Predecessors: [0x534]
Successors: [0x547]
---
0x53d JUMPDEST
0x53e DUP3
0x53f MLOAD
0x540 DUP2
0x541 LT
0x542 ISZERO
0x543 PUSH2 0x388
0x546 JUMPI
---
0x53d: JUMPDEST 
0x53f: V279 = M[S2]
0x541: V280 = LT 0x0 V279
0x542: V281 = ISZERO V280
0x543: V282 = 0x388
0x546: THROWI V281
---
Entry stack: [0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S1, S0, 0x0]

================================

Block 0x547
[0x547:0x56f]
---
Predecessors: [0x53d]
Successors: [0x570]
---
0x547 DUP5
0x548 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55d AND
0x55e PUSH4 0x23b872dd
0x563 DUP6
0x564 DUP6
0x565 DUP5
0x566 DUP2
0x567 MLOAD
0x568 DUP2
0x569 LT
0x56a ISZERO
0x56b ISZERO
0x56c PUSH2 0x27d
0x56f JUMPI
---
0x548: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x55e: V285 = 0x23b872dd
0x567: V286 = M[S2]
0x569: V287 = LT 0x0 V286
0x56a: V288 = ISZERO V287
0x56b: V289 = ISZERO V288
0x56c: V290 = 0x27d
0x56f: THROWI V289
---
Entry stack: [S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V284, 0x23b872dd, S3, S2, S0]
Exit stack: [S1, S0, S2, S1, 0x0, V284, 0x23b872dd, S0, S2, 0x0]

================================

Block 0x570
[0x570:0x587]
---
Predecessors: [0x547]
Successors: [0x588]
---
0x570 INVALID
0x571 JUMPDEST
0x572 SWAP1
0x573 PUSH1 0x20
0x575 ADD
0x576 SWAP1
0x577 PUSH1 0x20
0x579 MUL
0x57a ADD
0x57b MLOAD
0x57c DUP6
0x57d DUP6
0x57e DUP2
0x57f MLOAD
0x580 DUP2
0x581 LT
0x582 ISZERO
0x583 ISZERO
0x584 PUSH2 0x295
0x587 JUMPI
---
0x570: INVALID 
0x571: JUMPDEST 
0x573: V291 = 0x20
0x575: V292 = ADD 0x20 S1
0x577: V293 = 0x20
0x579: V294 = MUL 0x20 S0
0x57a: V295 = ADD V294 V292
0x57b: V296 = M[V295]
0x57f: V297 = M[S6]
0x581: V298 = LT S5 V297
0x582: V299 = ISZERO V298
0x583: V300 = ISZERO V299
0x584: V301 = 0x295
0x587: THROWI V300
---
Entry stack: [S9, S8, S7, S6, 0x0, V284, 0x23b872dd, S2, S1, 0x0]
Stack pops: 0
Stack additions: [S5, S6, V296, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0x588
[0x588:0x64e]
---
Predecessors: [0x570]
Successors: [0x64f]
---
0x588 INVALID
0x589 JUMPDEST
0x58a SWAP1
0x58b PUSH1 0x20
0x58d ADD
0x58e SWAP1
0x58f PUSH1 0x20
0x591 MUL
0x592 ADD
0x593 MLOAD
0x594 PUSH1 0x0
0x596 PUSH1 0x40
0x598 MLOAD
0x599 PUSH1 0x20
0x59b ADD
0x59c MSTORE
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP5
0x5a1 PUSH4 0xffffffff
0x5a6 AND
0x5a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5c5 MUL
0x5c6 DUP2
0x5c7 MSTORE
0x5c8 PUSH1 0x4
0x5ca ADD
0x5cb DUP1
0x5cc DUP5
0x5cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e2 AND
0x5e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f8 AND
0x5f9 DUP2
0x5fa MSTORE
0x5fb PUSH1 0x20
0x5fd ADD
0x5fe DUP4
0x5ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x614 AND
0x615 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62a AND
0x62b DUP2
0x62c MSTORE
0x62d PUSH1 0x20
0x62f ADD
0x630 DUP3
0x631 DUP2
0x632 MSTORE
0x633 PUSH1 0x20
0x635 ADD
0x636 SWAP4
0x637 POP
0x638 POP
0x639 POP
0x63a POP
0x63b PUSH1 0x20
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 DUP4
0x642 SUB
0x643 DUP2
0x644 PUSH1 0x0
0x646 DUP8
0x647 DUP1
0x648 EXTCODESIZE
0x649 ISZERO
0x64a ISZERO
0x64b PUSH2 0x35f
0x64e JUMPI
---
0x588: INVALID 
0x589: JUMPDEST 
0x58b: V302 = 0x20
0x58d: V303 = ADD 0x20 S1
0x58f: V304 = 0x20
0x591: V305 = MUL 0x20 S0
0x592: V306 = ADD V305 V303
0x593: V307 = M[V306]
0x594: V308 = 0x0
0x596: V309 = 0x40
0x598: V310 = M[0x40]
0x599: V311 = 0x20
0x59b: V312 = ADD 0x20 V310
0x59c: M[V312] = 0x0
0x59d: V313 = 0x40
0x59f: V314 = M[0x40]
0x5a1: V315 = 0xffffffff
0x5a6: V316 = AND 0xffffffff S4
0x5a7: V317 = 0x100000000000000000000000000000000000000000000000000000000
0x5c5: V318 = MUL 0x100000000000000000000000000000000000000000000000000000000 V316
0x5c7: M[V314] = V318
0x5c8: V319 = 0x4
0x5ca: V320 = ADD 0x4 V314
0x5cd: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x5e3: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f8: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x5fa: M[V320] = V324
0x5fb: V325 = 0x20
0x5fd: V326 = ADD 0x20 V320
0x5ff: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x614: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x615: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x62c: M[V326] = V330
0x62d: V331 = 0x20
0x62f: V332 = ADD 0x20 V326
0x632: M[V332] = V307
0x633: V333 = 0x20
0x635: V334 = ADD 0x20 V332
0x63b: V335 = 0x20
0x63d: V336 = 0x40
0x63f: V337 = M[0x40]
0x642: V338 = SUB V334 V337
0x644: V339 = 0x0
0x648: V340 = EXTCODESIZE S5
0x649: V341 = ISZERO V340
0x64a: V342 = ISZERO V341
0x64b: V343 = 0x35f
0x64e: THROWI V342
---
Entry stack: [S7, S6, S5, S4, S3, V296, S1, S0]
Stack pops: 0
Stack additions: [S5, 0x0, V337, V338, V337, 0x20, V334, S4, S5]
Exit stack: []

================================

Block 0x64f
[0x64f:0x65f]
---
Predecessors: [0x588]
Successors: [0x660]
---
0x64f PUSH1 0x0
0x651 DUP1
0x652 REVERT
0x653 JUMPDEST
0x654 PUSH2 0x2c6
0x657 GAS
0x658 SUB
0x659 CALL
0x65a ISZERO
0x65b ISZERO
0x65c PUSH2 0x370
0x65f JUMPI
---
0x64f: V344 = 0x0
0x652: REVERT 0x0 0x0
0x653: JUMPDEST 
0x654: V345 = 0x2c6
0x657: V346 = GAS
0x658: V347 = SUB V346 0x2c6
0x659: V348 = CALL V347 S0 S1 S2 S3 S4 S5
0x65a: V349 = ISZERO V348
0x65b: V350 = ISZERO V349
0x65c: V351 = 0x370
0x65f: THROWI V350
---
Entry stack: [S8, S7, V334, 0x20, V337, V338, V337, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x660
[0x660:0x6d9]
---
Predecessors: [0x64f]
Successors: [0x6da]
---
0x660 PUSH1 0x0
0x662 DUP1
0x663 REVERT
0x664 JUMPDEST
0x665 POP
0x666 POP
0x667 POP
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c MLOAD
0x66d SWAP1
0x66e POP
0x66f POP
0x670 DUP1
0x671 DUP1
0x672 PUSH1 0x1
0x674 ADD
0x675 SWAP2
0x676 POP
0x677 POP
0x678 PUSH2 0x249
0x67b JUMP
0x67c JUMPDEST
0x67d POP
0x67e POP
0x67f POP
0x680 POP
0x681 POP
0x682 JUMP
0x683 JUMPDEST
0x684 PUSH1 0x0
0x686 DUP1
0x687 SWAP1
0x688 SLOAD
0x689 SWAP1
0x68a PUSH2 0x100
0x68d EXP
0x68e SWAP1
0x68f DIV
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc CALLER
0x6bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d2 AND
0x6d3 EQ
0x6d4 ISZERO
0x6d5 ISZERO
0x6d6 PUSH2 0x3ea
0x6d9 JUMPI
---
0x660: V352 = 0x0
0x663: REVERT 0x0 0x0
0x664: JUMPDEST 
0x668: V353 = 0x40
0x66a: V354 = M[0x40]
0x66c: V355 = M[V354]
0x672: V356 = 0x1
0x674: V357 = ADD 0x1 S3
0x678: V358 = 0x249
0x67b: THROW 
0x67c: JUMPDEST 
0x682: JUMP S5
0x683: JUMPDEST 
0x684: V359 = 0x0
0x688: V360 = S[0x0]
0x68a: V361 = 0x100
0x68d: V362 = EXP 0x100 0x0
0x68f: V363 = DIV V360 0x1
0x690: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x6a6: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x6bc: V368 = CALLER
0x6bd: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x6d3: V371 = EQ V370 V367
0x6d4: V372 = ISZERO V371
0x6d5: V373 = ISZERO V372
0x6d6: V374 = 0x3ea
0x6d9: THROWI V373
---
Entry stack: []
Stack pops: 0
Stack additions: [V357]
Exit stack: []

================================

Block 0x6da
[0x6da:0x714]
---
Predecessors: [0x660]
Successors: [0x715]
---
0x6da PUSH1 0x0
0x6dc DUP1
0x6dd REVERT
0x6de JUMPDEST
0x6df PUSH1 0x0
0x6e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f6 AND
0x6f7 DUP2
0x6f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70d AND
0x70e EQ
0x70f ISZERO
0x710 ISZERO
0x711 PUSH2 0x461
0x714 JUMPI
---
0x6da: V375 = 0x0
0x6dd: REVERT 0x0 0x0
0x6de: JUMPDEST 
0x6df: V376 = 0x0
0x6e1: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f6: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6f8: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x70e: V381 = EQ V380 0x0
0x70f: V382 = ISZERO V381
0x710: V383 = ISZERO V382
0x711: V384 = 0x461
0x714: THROWI V383
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x715
[0x715:0x754]
---
Predecessors: [0x6da]
Successors: [0x755]
---
0x715 DUP1
0x716 PUSH1 0x0
0x718 DUP1
0x719 PUSH2 0x100
0x71c EXP
0x71d DUP2
0x71e SLOAD
0x71f DUP2
0x720 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x735 MUL
0x736 NOT
0x737 AND
0x738 SWAP1
0x739 DUP4
0x73a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 MUL
0x751 OR
0x752 SWAP1
0x753 SSTORE
0x754 POP
---
0x716: V385 = 0x0
0x719: V386 = 0x100
0x71c: V387 = EXP 0x100 0x0
0x71e: V388 = S[0x0]
0x720: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x735: V390 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x736: V391 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x737: V392 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V388
0x73a: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x750: V395 = MUL V394 0x1
0x751: V396 = OR V395 V392
0x753: S[0x0] = V396
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x755
[0x755:0x783]
---
Predecessors: [0x715]
Successors: []
---
0x755 JUMPDEST
0x756 POP
0x757 JUMP
0x758 STOP
0x759 LOG1
0x75a PUSH6 0x627a7a723058
0x761 SHA3
0x762 MSTORE
0x763 MISSING 0xa8
0x764 MISSING 0xbb
0x765 MISSING 0xd7
0x766 MISSING 0xeb
0x767 NUMBER
0x768 MISSING 0x4a
0x769 PUSH23 0x2d238dcc50b857408f7f1749d9e455d9086406e0897734
0x781 MISSING 0x48
0x782 STOP
0x783 MISSING 0x29
---
0x755: JUMPDEST 
0x757: JUMP S1
0x758: STOP 
0x759: LOG S0 S1 S2
0x75a: V397 = 0x627a7a723058
0x761: V398 = SHA3 0x627a7a723058 S3
0x762: M[V398] = S4
0x763: MISSING 0xa8
0x764: MISSING 0xbb
0x765: MISSING 0xd7
0x766: MISSING 0xeb
0x767: V399 = NUMBER
0x768: MISSING 0x4a
0x769: V400 = 0x2d238dcc50b857408f7f1749d9e455d9086406e0897734
0x781: MISSING 0x48
0x782: STOP 
0x783: MISSING 0x29
---
Entry stack: [S0]
Stack pops: 1018
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x23b872dd
Entry block: 0x44
Exit block: 0xa0
Body: 0x44, 0x4a, 0x4e, 0xa0, 0xba

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x3f
Body: 0x3f

