Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x8da5cb5b
0x34 EQ
0x35 PUSH2 0x49
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x8da5cb5b
0x34: V9 = EQ 0x8da5cb5b V7
0x35: V10 = 0x49
0x38: JUMPI 0x49 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x9e]
---
0x39 DUP1
0x3a PUSH4 0xf2fde38b
0x3f EQ
0x40 PUSH2 0x9e
0x43 JUMPI
---
0x3a: V11 = 0xf2fde38b
0x3f: V12 = EQ 0xf2fde38b V7
0x40: V13 = 0x9e
0x43: JUMPI 0x9e V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x48]
---
Predecessors: [0x39]
Successors: []
---
0x44 JUMPDEST
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x44: JUMPDEST 
0x45: V14 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0x4f]
---
Predecessors: [0x0]
Successors: [0x50, 0x54]
---
0x49 JUMPDEST
0x4a CALLVALUE
0x4b ISZERO
0x4c PUSH2 0x54
0x4f JUMPI
---
0x49: JUMPDEST 
0x4a: V15 = CALLVALUE
0x4b: V16 = ISZERO V15
0x4c: V17 = 0x54
0x4f: JUMPI 0x54 V16
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x50
[0x50:0x53]
---
Predecessors: [0x49]
Successors: []
---
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x50: V18 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5b]
---
Predecessors: [0x49]
Successors: [0xd7]
---
0x54 JUMPDEST
0x55 PUSH2 0x5c
0x58 PUSH2 0xd7
0x5b JUMP
---
0x54: JUMPDEST 
0x55: V19 = 0x5c
0x58: V20 = 0xd7
0x5b: JUMP 0xd7
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x5c]
Exit stack: [V7, 0x5c]

================================

Block 0x5c
[0x5c:0x9d]
---
Predecessors: [0xd7]
Successors: []
---
0x5c JUMPDEST
0x5d PUSH1 0x40
0x5f MLOAD
0x60 DUP1
0x61 DUP3
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e DUP2
0x8f MSTORE
0x90 PUSH1 0x20
0x92 ADD
0x93 SWAP2
0x94 POP
0x95 POP
0x96 PUSH1 0x40
0x98 MLOAD
0x99 DUP1
0x9a SWAP2
0x9b SUB
0x9c SWAP1
0x9d RETURN
---
0x5c: JUMPDEST 
0x5d: V21 = 0x40
0x5f: V22 = M[0x40]
0x62: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x78: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x8f: M[V22] = V26
0x90: V27 = 0x20
0x92: V28 = ADD 0x20 V22
0x96: V29 = 0x40
0x98: V30 = M[0x40]
0x9b: V31 = SUB V28 V30
0x9d: RETURN V30 V31
---
Entry stack: [V7, 0x5c, V50]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x5c]

================================

Block 0x9e
[0x9e:0xa4]
---
Predecessors: [0x39]
Successors: [0xa5, 0xa9]
---
0x9e JUMPDEST
0x9f CALLVALUE
0xa0 ISZERO
0xa1 PUSH2 0xa9
0xa4 JUMPI
---
0x9e: JUMPDEST 
0x9f: V32 = CALLVALUE
0xa0: V33 = ISZERO V32
0xa1: V34 = 0xa9
0xa4: JUMPI 0xa9 V33
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xa5
[0xa5:0xa8]
---
Predecessors: [0x9e]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa5: V35 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xa9
[0xa9:0xd4]
---
Predecessors: [0x9e]
Successors: [0xfc]
---
0xa9 JUMPDEST
0xaa PUSH2 0xd5
0xad PUSH1 0x4
0xaf DUP1
0xb0 DUP1
0xb1 CALLDATALOAD
0xb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7 AND
0xc8 SWAP1
0xc9 PUSH1 0x20
0xcb ADD
0xcc SWAP1
0xcd SWAP2
0xce SWAP1
0xcf POP
0xd0 POP
0xd1 PUSH2 0xfc
0xd4 JUMP
---
0xa9: JUMPDEST 
0xaa: V36 = 0xd5
0xad: V37 = 0x4
0xb1: V38 = CALLDATALOAD 0x4
0xb2: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xc9: V41 = 0x20
0xcb: V42 = ADD 0x20 0x4
0xd1: V43 = 0xfc
0xd4: JUMP 0xfc
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xd5, V40]
Exit stack: [V7, 0xd5, V40]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: [0x250]
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd7
[0xd7:0xfb]
---
Predecessors: [0x54]
Successors: [0x5c]
---
0xd7 JUMPDEST
0xd8 PUSH1 0x0
0xda DUP1
0xdb SWAP1
0xdc SLOAD
0xdd SWAP1
0xde PUSH2 0x100
0xe1 EXP
0xe2 SWAP1
0xe3 DIV
0xe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9 AND
0xfa DUP2
0xfb JUMP
---
0xd7: JUMPDEST 
0xd8: V44 = 0x0
0xdc: V45 = S[0x0]
0xde: V46 = 0x100
0xe1: V47 = EXP 0x100 0x0
0xe3: V48 = DIV V45 0x1
0xe4: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xfb: JUMP 0x5c
---
Entry stack: [V7, 0x5c]
Stack pops: 1
Stack additions: [S0, V50]
Exit stack: [V7, 0x5c, V50]

================================

Block 0xfc
[0xfc:0x152]
---
Predecessors: [0xa9]
Successors: [0x153, 0x157]
---
0xfc JUMPDEST
0xfd PUSH1 0x0
0xff DUP1
0x100 SWAP1
0x101 SLOAD
0x102 SWAP1
0x103 PUSH2 0x100
0x106 EXP
0x107 SWAP1
0x108 DIV
0x109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e AND
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 CALLER
0x136 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14b AND
0x14c EQ
0x14d ISZERO
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0xfc: JUMPDEST 
0xfd: V51 = 0x0
0x101: V52 = S[0x0]
0x103: V53 = 0x100
0x106: V54 = EXP 0x100 0x0
0x108: V55 = DIV V52 0x1
0x109: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x11f: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x135: V60 = CALLER
0x136: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x14c: V63 = EQ V62 V59
0x14d: V64 = ISZERO V63
0x14e: V65 = ISZERO V64
0x14f: V66 = 0x157
0x152: JUMPI 0x157 V65
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0xfc]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V67 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x157
[0x157:0x18e]
---
Predecessors: [0xfc]
Successors: [0x18f, 0x193]
---
0x157 JUMPDEST
0x158 PUSH1 0x0
0x15a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f AND
0x170 DUP2
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 EQ
0x188 ISZERO
0x189 ISZERO
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x157: JUMPDEST 
0x158: V68 = 0x0
0x15a: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x171: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x187: V73 = EQ V72 0x0
0x188: V74 = ISZERO V73
0x189: V75 = ISZERO V74
0x18a: V76 = ISZERO V75
0x18b: V77 = 0x193
0x18e: JUMPI 0x193 V76
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xd5, V40]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x157]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V78 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x193
[0x193:0x24e]
---
Predecessors: [0x157]
Successors: [0x24f]
---
0x193 JUMPDEST
0x194 DUP1
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae SWAP1
0x1af SLOAD
0x1b0 SWAP1
0x1b1 PUSH2 0x100
0x1b4 EXP
0x1b5 SWAP1
0x1b6 DIV
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x204 PUSH1 0x40
0x206 MLOAD
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b SWAP2
0x20c SUB
0x20d SWAP1
0x20e LOG3
0x20f DUP1
0x210 PUSH1 0x0
0x212 DUP1
0x213 PUSH2 0x100
0x216 EXP
0x217 DUP2
0x218 SLOAD
0x219 DUP2
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f MUL
0x230 NOT
0x231 AND
0x232 SWAP1
0x233 DUP4
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a MUL
0x24b OR
0x24c SWAP1
0x24d SSTORE
0x24e POP
---
0x193: JUMPDEST 
0x195: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x1ab: V81 = 0x0
0x1af: V82 = S[0x0]
0x1b1: V83 = 0x100
0x1b4: V84 = EXP 0x100 0x0
0x1b6: V85 = DIV V82 0x1
0x1b7: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x1cd: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1e3: V90 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x204: V91 = 0x40
0x206: V92 = M[0x40]
0x207: V93 = 0x40
0x209: V94 = M[0x40]
0x20c: V95 = SUB V92 V94
0x20e: LOG V94 V95 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V89 V80
0x210: V96 = 0x0
0x213: V97 = 0x100
0x216: V98 = EXP 0x100 0x0
0x218: V99 = S[0x0]
0x21a: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V101 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x230: V102 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x231: V103 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V99
0x234: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x24a: V106 = MUL V105 0x1
0x24b: V107 = OR V106 V103
0x24d: S[0x0] = V107
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xd5, V40]

================================

Block 0x24f
[0x24f:0x24f]
---
Predecessors: [0x193]
Successors: [0x250]
---
0x24f JUMPDEST
---
0x24f: JUMPDEST 
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xd5, V40]

================================

Block 0x250
[0x250:0x252]
---
Predecessors: [0x24f]
Successors: [0xd5]
---
0x250 JUMPDEST
0x251 POP
0x252 JUMP
---
0x250: JUMPDEST 
0x252: JUMP 0xd5
---
Entry stack: [V7, 0xd5, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x253
[0x253:0x283]
---
Predecessors: []
Successors: [0x284]
---
0x253 STOP
0x254 LOG1
0x255 PUSH6 0x627a7a723058
0x25c SHA3
0x25d MSTORE8
0x25e MISSING 0xa7
0x25f MISSING 0x5f
0x260 GT
0x261 MISSING 0xa7
0x262 STATICCALL
0x263 MISSING 0xce
0x264 MISSING 0x4e
0x265 MISSING 0xd7
0x266 MISSING 0xaf
0x267 SSTORE
0x268 DUP1
0x269 SSTORE
0x26a PUSH14 0x1c679ac68045a2c21f9c49a4256e
0x279 MISSING 0xfc
0x27a MISSING 0xbb
0x27b SDIV
0x27c CALLER
0x27d STOP
0x27e MISSING 0x29
0x27f PUSH1 0x60
0x281 PUSH1 0x40
0x283 MSTORE
---
0x253: STOP 
0x254: LOG S0 S1 S2
0x255: V108 = 0x627a7a723058
0x25c: V109 = SHA3 0x627a7a723058 S3
0x25d: M8[V109] = S4
0x25e: MISSING 0xa7
0x25f: MISSING 0x5f
0x260: V110 = GT S0 S1
0x261: MISSING 0xa7
0x262: V111 = STATICCALL S0 S1 S2 S3 S4 S5
0x263: MISSING 0xce
0x264: MISSING 0x4e
0x265: MISSING 0xd7
0x266: MISSING 0xaf
0x267: S[S0] = S1
0x269: S[S2] = S2
0x26a: V112 = 0x1c679ac68045a2c21f9c49a4256e
0x279: MISSING 0xfc
0x27a: MISSING 0xbb
0x27b: V113 = SDIV S0 S1
0x27c: V114 = CALLER
0x27d: STOP 
0x27e: MISSING 0x29
0x27f: V115 = 0x60
0x281: V116 = 0x40
0x283: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: [V110, V111, 0x1c679ac68045a2c21f9c49a4256e, V114, V113]
Exit stack: []

================================

Block 0x284
[0x284:0x2f5]
---
Predecessors: [0x253]
Successors: [0x2f6]
---
0x284 JUMPDEST
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
0x289 STOP
0x28a LOG1
0x28b PUSH6 0x627a7a723058
0x292 SHA3
0x293 PUSH28 0x65b59b95ad150983ef7cacdcf811298ed4a9c67a4d822006b2f1cd0
0x2b0 NUMBER
0x2b1 PUSH14 0xc4002960606040525b600080fd00
0x2c0 LOG1
0x2c1 PUSH6 0x627a7a723058
0x2c8 SHA3
0x2c9 PUSH31 0x222382899ab3dad748ccd22890ce9b7397333d8325522140d1d2c74d0e1697
0x2e9 STOP
0x2ea MISSING 0x29
0x2eb PUSH1 0x60
0x2ed PUSH1 0x40
0x2ef MSTORE
0x2f0 CALLDATASIZE
0x2f1 ISZERO
0x2f2 PUSH2 0xa2
0x2f5 JUMPI
---
0x284: JUMPDEST 
0x285: V117 = 0x0
0x288: REVERT 0x0 0x0
0x289: STOP 
0x28a: LOG S0 S1 S2
0x28b: V118 = 0x627a7a723058
0x292: V119 = SHA3 0x627a7a723058 S3
0x293: V120 = 0x65b59b95ad150983ef7cacdcf811298ed4a9c67a4d822006b2f1cd0
0x2b0: V121 = NUMBER
0x2b1: V122 = 0xc4002960606040525b600080fd00
0x2c0: LOG 0xc4002960606040525b600080fd00 V121 0x65b59b95ad150983ef7cacdcf811298ed4a9c67a4d822006b2f1cd0
0x2c1: V123 = 0x627a7a723058
0x2c8: V124 = SHA3 0x627a7a723058 V119
0x2c9: V125 = 0x222382899ab3dad748ccd22890ce9b7397333d8325522140d1d2c74d0e1697
0x2e9: STOP 
0x2ea: MISSING 0x29
0x2eb: V126 = 0x60
0x2ed: V127 = 0x40
0x2ef: M[0x40] = 0x60
0x2f0: V128 = CALLDATASIZE
0x2f1: V129 = ISZERO V128
0x2f2: V130 = 0xa2
0x2f5: THROWI V129
---
Entry stack: []
Stack pops: 0
Stack additions: [0x222382899ab3dad748ccd22890ce9b7397333d8325522140d1d2c74d0e1697, V124]
Exit stack: []

================================

Block 0x2f6
[0x2f6:0x329]
---
Predecessors: [0x284]
Successors: [0x32a]
---
0x2f6 PUSH1 0x0
0x2f8 CALLDATALOAD
0x2f9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x317 SWAP1
0x318 DIV
0x319 PUSH4 0xffffffff
0x31e AND
0x31f DUP1
0x320 PUSH4 0x1c07f0a3
0x325 EQ
0x326 PUSH2 0xa7
0x329 JUMPI
---
0x2f6: V131 = 0x0
0x2f8: V132 = CALLDATALOAD 0x0
0x2f9: V133 = 0x100000000000000000000000000000000000000000000000000000000
0x318: V134 = DIV V132 0x100000000000000000000000000000000000000000000000000000000
0x319: V135 = 0xffffffff
0x31e: V136 = AND 0xffffffff V134
0x320: V137 = 0x1c07f0a3
0x325: V138 = EQ 0x1c07f0a3 V136
0x326: V139 = 0xa7
0x329: THROWI V138
---
Entry stack: []
Stack pops: 0
Stack additions: [V136]
Exit stack: [V136]

================================

Block 0x32a
[0x32a:0x334]
---
Predecessors: [0x2f6]
Successors: [0x335]
---
0x32a DUP1
0x32b PUSH4 0x1dbc04ae
0x330 EQ
0x331 PUSH2 0x107
0x334 JUMPI
---
0x32b: V140 = 0x1dbc04ae
0x330: V141 = EQ 0x1dbc04ae V136
0x331: V142 = 0x107
0x334: THROWI V141
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x335
[0x335:0x33f]
---
Predecessors: [0x32a]
Successors: [0x340]
---
0x335 DUP1
0x336 PUSH4 0x321a7c8c
0x33b EQ
0x33c PUSH2 0x140
0x33f JUMPI
---
0x336: V143 = 0x321a7c8c
0x33b: V144 = EQ 0x321a7c8c V136
0x33c: V145 = 0x140
0x33f: THROWI V144
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x340
[0x340:0x34a]
---
Predecessors: [0x335]
Successors: [0x34b]
---
0x340 DUP1
0x341 PUSH4 0x458efde3
0x346 EQ
0x347 PUSH2 0x19d
0x34a JUMPI
---
0x341: V146 = 0x458efde3
0x346: V147 = EQ 0x458efde3 V136
0x347: V148 = 0x19d
0x34a: THROWI V147
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x34b
[0x34b:0x355]
---
Predecessors: [0x340]
Successors: [0x356]
---
0x34b DUP1
0x34c PUSH4 0x74a3c5d5
0x351 EQ
0x352 PUSH2 0x1b2
0x355 JUMPI
---
0x34c: V149 = 0x74a3c5d5
0x351: V150 = EQ 0x74a3c5d5 V136
0x352: V151 = 0x1b2
0x355: THROWI V150
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x356
[0x356:0x360]
---
Predecessors: [0x34b]
Successors: [0x361]
---
0x356 DUP1
0x357 PUSH4 0x8c30779b
0x35c EQ
0x35d PUSH2 0x1ff
0x360 JUMPI
---
0x357: V152 = 0x8c30779b
0x35c: V153 = EQ 0x8c30779b V136
0x35d: V154 = 0x1ff
0x360: THROWI V153
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x361
[0x361:0x36b]
---
Predecessors: [0x356]
Successors: [0x36c]
---
0x361 DUP1
0x362 PUSH4 0x8da5cb5b
0x367 EQ
0x368 PUSH2 0x24c
0x36b JUMPI
---
0x362: V155 = 0x8da5cb5b
0x367: V156 = EQ 0x8da5cb5b V136
0x368: V157 = 0x24c
0x36b: THROWI V156
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x36c
[0x36c:0x376]
---
Predecessors: [0x361]
Successors: [0x377]
---
0x36c DUP1
0x36d PUSH4 0x9890220b
0x372 EQ
0x373 PUSH2 0x2a1
0x376 JUMPI
---
0x36d: V158 = 0x9890220b
0x372: V159 = EQ 0x9890220b V136
0x373: V160 = 0x2a1
0x376: THROWI V159
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x377
[0x377:0x381]
---
Predecessors: [0x36c]
Successors: [0x382]
---
0x377 DUP1
0x378 PUSH4 0xe6ad204e
0x37d EQ
0x37e PUSH2 0x2b6
0x381 JUMPI
---
0x378: V161 = 0xe6ad204e
0x37d: V162 = EQ 0xe6ad204e V136
0x37e: V163 = 0x2b6
0x381: THROWI V162
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x382
[0x382:0x38c]
---
Predecessors: [0x377]
Successors: [0x38d]
---
0x382 DUP1
0x383 PUSH4 0xf2fde38b
0x388 EQ
0x389 PUSH2 0x313
0x38c JUMPI
---
0x383: V164 = 0xf2fde38b
0x388: V165 = EQ 0xf2fde38b V136
0x389: V166 = 0x313
0x38c: THROWI V165
---
Entry stack: [V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V136]

================================

Block 0x38d
[0x38d:0x398]
---
Predecessors: [0x382, 0x66a]
Successors: [0x399]
---
0x38d JUMPDEST
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
0x392 JUMPDEST
0x393 CALLVALUE
0x394 ISZERO
0x395 PUSH2 0xb2
0x398 JUMPI
---
0x38d: JUMPDEST 
0x38e: V167 = 0x0
0x391: REVERT 0x0 0x0
0x392: JUMPDEST 
0x393: V168 = CALLVALUE
0x394: V169 = ISZERO V168
0x395: V170 = 0xb2
0x398: THROWI V169
---
Entry stack: [S5, S4, S3, V344, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x399
[0x399:0x3c2]
---
Predecessors: [0x38d]
Successors: [0x3c3]
---
0x399 PUSH1 0x0
0x39b DUP1
0x39c REVERT
0x39d JUMPDEST
0x39e PUSH2 0xc8
0x3a1 PUSH1 0x4
0x3a3 DUP1
0x3a4 DUP1
0x3a5 CALLDATALOAD
0x3a6 SWAP1
0x3a7 PUSH1 0x20
0x3a9 ADD
0x3aa SWAP1
0x3ab SWAP2
0x3ac SWAP1
0x3ad POP
0x3ae POP
0x3af PUSH2 0x34c
0x3b2 JUMP
0x3b3 JUMPDEST
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 DUP3
0x3b9 PUSH1 0xa
0x3bb PUSH1 0x20
0x3bd MUL
0x3be DUP1
0x3bf DUP4
0x3c0 DUP4
0x3c1 PUSH1 0x0
---
0x399: V171 = 0x0
0x39c: REVERT 0x0 0x0
0x39d: JUMPDEST 
0x39e: V172 = 0xc8
0x3a1: V173 = 0x4
0x3a5: V174 = CALLDATALOAD 0x4
0x3a7: V175 = 0x20
0x3a9: V176 = ADD 0x20 0x4
0x3af: V177 = 0x34c
0x3b2: THROW 
0x3b3: JUMPDEST 
0x3b4: V178 = 0x40
0x3b6: V179 = M[0x40]
0x3b9: V180 = 0xa
0x3bb: V181 = 0x20
0x3bd: V182 = MUL 0x20 0xa
0x3c1: V183 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V174, 0xc8, 0x0, S0, V179, 0x140, 0x140, S0, V179, V179, S0]
Exit stack: []

================================

Block 0x3c3
[0x3c3:0x3cb]
---
Predecessors: [0x399]
Successors: [0x3cc]
---
0x3c3 JUMPDEST
0x3c4 DUP4
0x3c5 DUP2
0x3c6 LT
0x3c7 ISZERO
0x3c8 PUSH2 0xf4
0x3cb JUMPI
---
0x3c3: JUMPDEST 
0x3c6: V184 = LT 0x0 0x140
0x3c7: V185 = ISZERO 0x1
0x3c8: V186 = 0xf4
0x3cb: THROWI 0x0
---
Entry stack: [S8, V179, V179, S5, 0x140, 0x140, V179, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S8, V179, V179, S5, 0x140, 0x140, V179, S1, 0x0]

================================

Block 0x3cc
[0x3cc:0x3d3]
---
Predecessors: [0x3c3]
Successors: [0x3d4]
---
0x3cc DUP1
0x3cd DUP3
0x3ce ADD
0x3cf MLOAD
0x3d0 DUP2
0x3d1 DUP5
0x3d2 ADD
0x3d3 MSTORE
---
0x3ce: V187 = ADD S1 0x0
0x3cf: V188 = M[V187]
0x3d2: V189 = ADD V179 0x0
0x3d3: M[V189] = V188
---
Entry stack: [S8, V179, V179, S5, 0x140, 0x140, V179, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V179, V179, S5, 0x140, 0x140, V179, S1, 0x0]

================================

Block 0x3d4
[0x3d4:0x3f8]
---
Predecessors: [0x3cc]
Successors: [0x3f9]
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x20
0x3d7 DUP2
0x3d8 ADD
0x3d9 SWAP1
0x3da POP
0x3db PUSH2 0xd8
0x3de JUMP
0x3df JUMPDEST
0x3e0 POP
0x3e1 POP
0x3e2 POP
0x3e3 POP
0x3e4 SWAP1
0x3e5 POP
0x3e6 ADD
0x3e7 SWAP2
0x3e8 POP
0x3e9 POP
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP1
0x3ee SWAP2
0x3ef SUB
0x3f0 SWAP1
0x3f1 RETURN
0x3f2 JUMPDEST
0x3f3 CALLVALUE
0x3f4 ISZERO
0x3f5 PUSH2 0x112
0x3f8 JUMPI
---
0x3d4: JUMPDEST 
0x3d5: V190 = 0x20
0x3d8: V191 = ADD 0x0 0x20
0x3db: V192 = 0xd8
0x3de: THROW 
0x3df: JUMPDEST 
0x3e6: V193 = ADD S4 S6
0x3ea: V194 = 0x40
0x3ec: V195 = M[0x40]
0x3ef: V196 = SUB V193 V195
0x3f1: RETURN V195 V196
0x3f2: JUMPDEST 
0x3f3: V197 = CALLVALUE
0x3f4: V198 = ISZERO V197
0x3f5: V199 = 0x112
0x3f8: THROWI V198
---
Entry stack: [S8, V179, V179, S5, 0x140, 0x140, V179, S1, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x3f9
[0x3f9:0x431]
---
Predecessors: [0x3d4]
Successors: [0x432]
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
0x3fd JUMPDEST
0x3fe PUSH2 0x13e
0x401 PUSH1 0x4
0x403 DUP1
0x404 DUP1
0x405 CALLDATALOAD
0x406 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41b AND
0x41c SWAP1
0x41d PUSH1 0x20
0x41f ADD
0x420 SWAP1
0x421 SWAP2
0x422 SWAP1
0x423 POP
0x424 POP
0x425 PUSH2 0x41e
0x428 JUMP
0x429 JUMPDEST
0x42a STOP
0x42b JUMPDEST
0x42c CALLVALUE
0x42d ISZERO
0x42e PUSH2 0x14b
0x431 JUMPI
---
0x3f9: V200 = 0x0
0x3fc: REVERT 0x0 0x0
0x3fd: JUMPDEST 
0x3fe: V201 = 0x13e
0x401: V202 = 0x4
0x405: V203 = CALLDATALOAD 0x4
0x406: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x41d: V206 = 0x20
0x41f: V207 = ADD 0x20 0x4
0x425: V208 = 0x41e
0x428: THROW 
0x429: JUMPDEST 
0x42a: STOP 
0x42b: JUMPDEST 
0x42c: V209 = CALLVALUE
0x42d: V210 = ISZERO V209
0x42e: V211 = 0x14b
0x431: THROWI V210
---
Entry stack: []
Stack pops: 0
Stack additions: [V205, 0x13e]
Exit stack: []

================================

Block 0x432
[0x432:0x48e]
---
Predecessors: [0x3f9]
Successors: [0x48f]
---
0x432 PUSH1 0x0
0x434 DUP1
0x435 REVERT
0x436 JUMPDEST
0x437 PUSH2 0x19b
0x43a PUSH1 0x4
0x43c DUP1
0x43d DUP1
0x43e CALLDATALOAD
0x43f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x454 AND
0x455 SWAP1
0x456 PUSH1 0x20
0x458 ADD
0x459 SWAP1
0x45a SWAP2
0x45b SWAP1
0x45c DUP1
0x45d CALLDATALOAD
0x45e SWAP1
0x45f PUSH1 0x20
0x461 ADD
0x462 SWAP1
0x463 SWAP2
0x464 SWAP1
0x465 DUP1
0x466 CALLDATALOAD
0x467 SWAP1
0x468 PUSH1 0x20
0x46a ADD
0x46b SWAP1
0x46c SWAP2
0x46d SWAP1
0x46e DUP1
0x46f CALLDATALOAD
0x470 SWAP1
0x471 PUSH1 0x20
0x473 ADD
0x474 SWAP1
0x475 SWAP2
0x476 SWAP1
0x477 DUP1
0x478 CALLDATALOAD
0x479 SWAP1
0x47a PUSH1 0x20
0x47c ADD
0x47d SWAP1
0x47e SWAP2
0x47f SWAP1
0x480 POP
0x481 POP
0x482 PUSH2 0x4fb
0x485 JUMP
0x486 JUMPDEST
0x487 STOP
0x488 JUMPDEST
0x489 CALLVALUE
0x48a ISZERO
0x48b PUSH2 0x1a8
0x48e JUMPI
---
0x432: V212 = 0x0
0x435: REVERT 0x0 0x0
0x436: JUMPDEST 
0x437: V213 = 0x19b
0x43a: V214 = 0x4
0x43e: V215 = CALLDATALOAD 0x4
0x43f: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x454: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x456: V218 = 0x20
0x458: V219 = ADD 0x20 0x4
0x45d: V220 = CALLDATALOAD 0x24
0x45f: V221 = 0x20
0x461: V222 = ADD 0x20 0x24
0x466: V223 = CALLDATALOAD 0x44
0x468: V224 = 0x20
0x46a: V225 = ADD 0x20 0x44
0x46f: V226 = CALLDATALOAD 0x64
0x471: V227 = 0x20
0x473: V228 = ADD 0x20 0x64
0x478: V229 = CALLDATALOAD 0x84
0x47a: V230 = 0x20
0x47c: V231 = ADD 0x20 0x84
0x482: V232 = 0x4fb
0x485: THROW 
0x486: JUMPDEST 
0x487: STOP 
0x488: JUMPDEST 
0x489: V233 = CALLVALUE
0x48a: V234 = ISZERO V233
0x48b: V235 = 0x1a8
0x48e: THROWI V234
---
Entry stack: []
Stack pops: 0
Stack additions: [V229, V226, V223, V220, V217, 0x19b]
Exit stack: []

================================

Block 0x48f
[0x48f:0x4a3]
---
Predecessors: [0x432]
Successors: [0x4a4]
---
0x48f PUSH1 0x0
0x491 DUP1
0x492 REVERT
0x493 JUMPDEST
0x494 PUSH2 0x1b0
0x497 PUSH2 0x810
0x49a JUMP
0x49b JUMPDEST
0x49c STOP
0x49d JUMPDEST
0x49e CALLVALUE
0x49f ISZERO
0x4a0 PUSH2 0x1bd
0x4a3 JUMPI
---
0x48f: V236 = 0x0
0x492: REVERT 0x0 0x0
0x493: JUMPDEST 
0x494: V237 = 0x1b0
0x497: V238 = 0x810
0x49a: THROW 
0x49b: JUMPDEST 
0x49c: STOP 
0x49d: JUMPDEST 
0x49e: V239 = CALLVALUE
0x49f: V240 = ISZERO V239
0x4a0: V241 = 0x1bd
0x4a3: THROWI V240
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: []

================================

Block 0x4a4
[0x4a4:0x4f0]
---
Predecessors: [0x48f]
Successors: [0x4f1]
---
0x4a4 PUSH1 0x0
0x4a6 DUP1
0x4a7 REVERT
0x4a8 JUMPDEST
0x4a9 PUSH2 0x1e9
0x4ac PUSH1 0x4
0x4ae DUP1
0x4af DUP1
0x4b0 CALLDATALOAD
0x4b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c6 AND
0x4c7 SWAP1
0x4c8 PUSH1 0x20
0x4ca ADD
0x4cb SWAP1
0x4cc SWAP2
0x4cd SWAP1
0x4ce POP
0x4cf POP
0x4d0 PUSH2 0xa5a
0x4d3 JUMP
0x4d4 JUMPDEST
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 DUP3
0x4da DUP2
0x4db MSTORE
0x4dc PUSH1 0x20
0x4de ADD
0x4df SWAP2
0x4e0 POP
0x4e1 POP
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 DUP1
0x4e6 SWAP2
0x4e7 SUB
0x4e8 SWAP1
0x4e9 RETURN
0x4ea JUMPDEST
0x4eb CALLVALUE
0x4ec ISZERO
0x4ed PUSH2 0x20a
0x4f0 JUMPI
---
0x4a4: V242 = 0x0
0x4a7: REVERT 0x0 0x0
0x4a8: JUMPDEST 
0x4a9: V243 = 0x1e9
0x4ac: V244 = 0x4
0x4b0: V245 = CALLDATALOAD 0x4
0x4b1: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x4c8: V248 = 0x20
0x4ca: V249 = ADD 0x20 0x4
0x4d0: V250 = 0xa5a
0x4d3: THROW 
0x4d4: JUMPDEST 
0x4d5: V251 = 0x40
0x4d7: V252 = M[0x40]
0x4db: M[V252] = S0
0x4dc: V253 = 0x20
0x4de: V254 = ADD 0x20 V252
0x4e2: V255 = 0x40
0x4e4: V256 = M[0x40]
0x4e7: V257 = SUB V254 V256
0x4e9: RETURN V256 V257
0x4ea: JUMPDEST 
0x4eb: V258 = CALLVALUE
0x4ec: V259 = ISZERO V258
0x4ed: V260 = 0x20a
0x4f0: THROWI V259
---
Entry stack: []
Stack pops: 0
Stack additions: [V247, 0x1e9]
Exit stack: []

================================

Block 0x4f1
[0x4f1:0x53d]
---
Predecessors: [0x4a4]
Successors: [0x53e]
---
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 REVERT
0x4f5 JUMPDEST
0x4f6 PUSH2 0x236
0x4f9 PUSH1 0x4
0x4fb DUP1
0x4fc DUP1
0x4fd CALLDATALOAD
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 SWAP1
0x515 PUSH1 0x20
0x517 ADD
0x518 SWAP1
0x519 SWAP2
0x51a SWAP1
0x51b POP
0x51c POP
0x51d PUSH2 0xba3
0x520 JUMP
0x521 JUMPDEST
0x522 PUSH1 0x40
0x524 MLOAD
0x525 DUP1
0x526 DUP3
0x527 DUP2
0x528 MSTORE
0x529 PUSH1 0x20
0x52b ADD
0x52c SWAP2
0x52d POP
0x52e POP
0x52f PUSH1 0x40
0x531 MLOAD
0x532 DUP1
0x533 SWAP2
0x534 SUB
0x535 SWAP1
0x536 RETURN
0x537 JUMPDEST
0x538 CALLVALUE
0x539 ISZERO
0x53a PUSH2 0x257
0x53d JUMPI
---
0x4f1: V261 = 0x0
0x4f4: REVERT 0x0 0x0
0x4f5: JUMPDEST 
0x4f6: V262 = 0x236
0x4f9: V263 = 0x4
0x4fd: V264 = CALLDATALOAD 0x4
0x4fe: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x515: V267 = 0x20
0x517: V268 = ADD 0x20 0x4
0x51d: V269 = 0xba3
0x520: THROW 
0x521: JUMPDEST 
0x522: V270 = 0x40
0x524: V271 = M[0x40]
0x528: M[V271] = S0
0x529: V272 = 0x20
0x52b: V273 = ADD 0x20 V271
0x52f: V274 = 0x40
0x531: V275 = M[0x40]
0x534: V276 = SUB V273 V275
0x536: RETURN V275 V276
0x537: JUMPDEST 
0x538: V277 = CALLVALUE
0x539: V278 = ISZERO V277
0x53a: V279 = 0x257
0x53d: THROWI V278
---
Entry stack: []
Stack pops: 0
Stack additions: [V266, 0x236]
Exit stack: []

================================

Block 0x53e
[0x53e:0x592]
---
Predecessors: [0x4f1]
Successors: [0x593]
---
0x53e PUSH1 0x0
0x540 DUP1
0x541 REVERT
0x542 JUMPDEST
0x543 PUSH2 0x25f
0x546 PUSH2 0xc0f
0x549 JUMP
0x54a JUMPDEST
0x54b PUSH1 0x40
0x54d MLOAD
0x54e DUP1
0x54f DUP3
0x550 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x565 AND
0x566 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57b AND
0x57c DUP2
0x57d MSTORE
0x57e PUSH1 0x20
0x580 ADD
0x581 SWAP2
0x582 POP
0x583 POP
0x584 PUSH1 0x40
0x586 MLOAD
0x587 DUP1
0x588 SWAP2
0x589 SUB
0x58a SWAP1
0x58b RETURN
0x58c JUMPDEST
0x58d CALLVALUE
0x58e ISZERO
0x58f PUSH2 0x2ac
0x592 JUMPI
---
0x53e: V280 = 0x0
0x541: REVERT 0x0 0x0
0x542: JUMPDEST 
0x543: V281 = 0x25f
0x546: V282 = 0xc0f
0x549: THROW 
0x54a: JUMPDEST 
0x54b: V283 = 0x40
0x54d: V284 = M[0x40]
0x550: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x565: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x566: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x57b: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x57d: M[V284] = V288
0x57e: V289 = 0x20
0x580: V290 = ADD 0x20 V284
0x584: V291 = 0x40
0x586: V292 = M[0x40]
0x589: V293 = SUB V290 V292
0x58b: RETURN V292 V293
0x58c: JUMPDEST 
0x58d: V294 = CALLVALUE
0x58e: V295 = ISZERO V294
0x58f: V296 = 0x2ac
0x592: THROWI V295
---
Entry stack: []
Stack pops: 0
Stack additions: [0x25f]
Exit stack: []

================================

Block 0x593
[0x593:0x5a7]
---
Predecessors: [0x53e]
Successors: [0x5a8]
---
0x593 PUSH1 0x0
0x595 DUP1
0x596 REVERT
0x597 JUMPDEST
0x598 PUSH2 0x2b4
0x59b PUSH2 0xc34
0x59e JUMP
0x59f JUMPDEST
0x5a0 STOP
0x5a1 JUMPDEST
0x5a2 CALLVALUE
0x5a3 ISZERO
0x5a4 PUSH2 0x2c1
0x5a7 JUMPI
---
0x593: V297 = 0x0
0x596: REVERT 0x0 0x0
0x597: JUMPDEST 
0x598: V298 = 0x2b4
0x59b: V299 = 0xc34
0x59e: THROW 
0x59f: JUMPDEST 
0x5a0: STOP 
0x5a1: JUMPDEST 
0x5a2: V300 = CALLVALUE
0x5a3: V301 = ISZERO V300
0x5a4: V302 = 0x2c1
0x5a7: THROWI V301
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2b4]
Exit stack: []

================================

Block 0x5a8
[0x5a8:0x604]
---
Predecessors: [0x593]
Successors: [0x605]
---
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab REVERT
0x5ac JUMPDEST
0x5ad PUSH2 0x2f6
0x5b0 PUSH1 0x4
0x5b2 DUP1
0x5b3 DUP1
0x5b4 CALLDATALOAD
0x5b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ca AND
0x5cb SWAP1
0x5cc PUSH1 0x20
0x5ce ADD
0x5cf SWAP1
0x5d0 SWAP2
0x5d1 SWAP1
0x5d2 DUP1
0x5d3 CALLDATALOAD
0x5d4 SWAP1
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 SWAP1
0x5d9 SWAP2
0x5da SWAP1
0x5db POP
0x5dc POP
0x5dd PUSH2 0xe2c
0x5e0 JUMP
0x5e1 JUMPDEST
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 DUP1
0x5e6 DUP4
0x5e7 DUP2
0x5e8 MSTORE
0x5e9 PUSH1 0x20
0x5eb ADD
0x5ec DUP3
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 SWAP3
0x5f3 POP
0x5f4 POP
0x5f5 POP
0x5f6 PUSH1 0x40
0x5f8 MLOAD
0x5f9 DUP1
0x5fa SWAP2
0x5fb SUB
0x5fc SWAP1
0x5fd RETURN
0x5fe JUMPDEST
0x5ff CALLVALUE
0x600 ISZERO
0x601 PUSH2 0x31e
0x604 JUMPI
---
0x5a8: V303 = 0x0
0x5ab: REVERT 0x0 0x0
0x5ac: JUMPDEST 
0x5ad: V304 = 0x2f6
0x5b0: V305 = 0x4
0x5b4: V306 = CALLDATALOAD 0x4
0x5b5: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x5cc: V309 = 0x20
0x5ce: V310 = ADD 0x20 0x4
0x5d3: V311 = CALLDATALOAD 0x24
0x5d5: V312 = 0x20
0x5d7: V313 = ADD 0x20 0x24
0x5dd: V314 = 0xe2c
0x5e0: THROW 
0x5e1: JUMPDEST 
0x5e2: V315 = 0x40
0x5e4: V316 = M[0x40]
0x5e8: M[V316] = S1
0x5e9: V317 = 0x20
0x5eb: V318 = ADD 0x20 V316
0x5ee: M[V318] = S0
0x5ef: V319 = 0x20
0x5f1: V320 = ADD 0x20 V318
0x5f6: V321 = 0x40
0x5f8: V322 = M[0x40]
0x5fb: V323 = SUB V320 V322
0x5fd: RETURN V322 V323
0x5fe: JUMPDEST 
0x5ff: V324 = CALLVALUE
0x600: V325 = ISZERO V324
0x601: V326 = 0x31e
0x604: THROWI V325
---
Entry stack: []
Stack pops: 0
Stack additions: [V311, V308, 0x2f6]
Exit stack: []

================================

Block 0x605
[0x605:0x63e]
---
Predecessors: [0x5a8]
Successors: []
---
0x605 PUSH1 0x0
0x607 DUP1
0x608 REVERT
0x609 JUMPDEST
0x60a PUSH2 0x34a
0x60d PUSH1 0x4
0x60f DUP1
0x610 DUP1
0x611 CALLDATALOAD
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 SWAP1
0x629 PUSH1 0x20
0x62b ADD
0x62c SWAP1
0x62d SWAP2
0x62e SWAP1
0x62f POP
0x630 POP
0x631 PUSH2 0xe6d
0x634 JUMP
0x635 JUMPDEST
0x636 STOP
0x637 JUMPDEST
0x638 PUSH2 0x354
0x63b PUSH2 0x1019
0x63e JUMP
---
0x605: V327 = 0x0
0x608: REVERT 0x0 0x0
0x609: JUMPDEST 
0x60a: V328 = 0x34a
0x60d: V329 = 0x4
0x611: V330 = CALLDATALOAD 0x4
0x612: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x629: V333 = 0x20
0x62b: V334 = ADD 0x20 0x4
0x631: V335 = 0xe6d
0x634: THROW 
0x635: JUMPDEST 
0x636: STOP 
0x637: JUMPDEST 
0x638: V336 = 0x354
0x63b: V337 = 0x1019
0x63e: THROW 
---
Entry stack: []
Stack pops: 0
Stack additions: [V332, 0x34a, 0x354]
Exit stack: []

================================

Block 0x63f
[0x63f:0x652]
---
Predecessors: [0xae1]
Successors: [0x653]
---
0x63f JUMPDEST
0x640 PUSH2 0x35c
0x643 PUSH2 0x1019
0x646 JUMP
0x647 JUMPDEST
0x648 PUSH1 0x0
0x64a PUSH1 0xa
0x64c DUP5
0x64d MUL
0x64e PUSH1 0x0
0x650 ADD
0x651 SWAP1
0x652 POP
---
0x63f: JUMPDEST 
0x640: V338 = 0x35c
0x643: V339 = 0x1019
0x646: THROW 
0x647: JUMPDEST 
0x648: V340 = 0x0
0x64a: V341 = 0xa
0x64d: V342 = MUL S2 0xa
0x64e: V343 = 0x0
0x650: V344 = ADD 0x0 V342
---
Entry stack: [S7, S6, S5, S4, S3, S2, V605, S0]
Stack pops: 0
Stack additions: [0x35c, V344, S0, S1, S2]
Exit stack: []

================================

Block 0x653
[0x653:0x65c]
---
Predecessors: [0x63f]
Successors: [0x65d]
---
0x653 JUMPDEST
0x654 PUSH1 0xa
0x656 DUP2
0x657 LT
0x658 ISZERO
0x659 PUSH2 0x413
0x65c JUMPI
---
0x653: JUMPDEST 
0x654: V345 = 0xa
0x657: V346 = LT V344 0xa
0x658: V347 = ISZERO V346
0x659: V348 = 0x413
0x65c: THROWI V347
---
Entry stack: [S3, S2, S1, V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V344]

================================

Block 0x65d
[0x65d:0x669]
---
Predecessors: [0x653]
Successors: [0x66a]
---
0x65d PUSH1 0x3
0x65f DUP1
0x660 SLOAD
0x661 SWAP1
0x662 POP
0x663 DUP2
0x664 LT
0x665 ISZERO
0x666 PUSH2 0x405
0x669 JUMPI
---
0x65d: V349 = 0x3
0x660: V350 = S[0x3]
0x664: V351 = LT V344 V350
0x665: V352 = ISZERO V351
0x666: V353 = 0x405
0x669: THROWI V352
---
Entry stack: [S3, S2, S1, V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V344]

================================

Block 0x66a
[0x66a:0x676]
---
Predecessors: [0x65d]
Successors: [0x38d, 0x677]
---
0x66a PUSH1 0x3
0x66c DUP2
0x66d DUP2
0x66e SLOAD
0x66f DUP2
0x670 LT
0x671 ISZERO
0x672 ISZERO
0x673 PUSH2 0x38d
0x676 JUMPI
---
0x66a: V354 = 0x3
0x66e: V355 = S[0x3]
0x670: V356 = LT V344 V355
0x671: V357 = ISZERO V356
0x672: V358 = ISZERO V357
0x673: V359 = 0x38d
0x676: JUMPI 0x38d V358
---
Entry stack: [S3, S2, S1, V344]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [S3, S2, S1, V344, 0x3, V344]

================================

Block 0x677
[0x677:0x685]
---
Predecessors: [0x66a]
Successors: [0x686]
---
0x677 INVALID
0x678 JUMPDEST
0x679 SWAP1
0x67a PUSH1 0x0
0x67c MSTORE
0x67d PUSH1 0x20
0x67f PUSH1 0x0
0x681 SHA3
0x682 SWAP1
0x683 ADD
0x684 PUSH1 0x0
---
0x677: INVALID 
0x678: JUMPDEST 
0x67a: V360 = 0x0
0x67c: M[0x0] = S1
0x67d: V361 = 0x20
0x67f: V362 = 0x0
0x681: V363 = SHA3 0x0 0x20
0x683: V364 = ADD S0 V363
0x684: V365 = 0x0
---
Entry stack: [S5, S4, S3, V344, 0x3, V344]
Stack pops: 0
Stack additions: [0x0, V364]
Exit stack: []

================================

Block 0x686
[0x686:0x6b6]
---
Predecessors: [0x677]
Successors: [0x6b7]
---
0x686 JUMPDEST
0x687 SWAP1
0x688 SLOAD
0x689 SWAP1
0x68a PUSH2 0x100
0x68d EXP
0x68e SWAP1
0x68f DIV
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 DUP3
0x6a7 PUSH1 0xa
0x6a9 DUP7
0x6aa MUL
0x6ab DUP4
0x6ac SUB
0x6ad PUSH1 0xa
0x6af DUP2
0x6b0 LT
0x6b1 ISZERO
0x6b2 ISZERO
0x6b3 PUSH2 0x3cd
0x6b6 JUMPI
---
0x686: JUMPDEST 
0x688: V366 = S[V364]
0x68a: V367 = 0x100
0x68d: V368 = EXP 0x100 0x0
0x68f: V369 = DIV V366 0x1
0x690: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x6a7: V372 = 0xa
0x6aa: V373 = MUL S5 0xa
0x6ac: V374 = SUB S2 V373
0x6ad: V375 = 0xa
0x6b0: V376 = LT V374 0xa
0x6b1: V377 = ISZERO V376
0x6b2: V378 = ISZERO V377
0x6b3: V379 = 0x3cd
0x6b6: THROWI V378
---
Entry stack: [V364, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V371, S3, V374]
Exit stack: [S3, S2, S1, S0, V371, S1, V374]

================================

Block 0x6b7
[0x6b7:0x6ef]
---
Predecessors: [0x686]
Successors: [0x6f0]
---
0x6b7 INVALID
0x6b8 JUMPDEST
0x6b9 PUSH1 0x20
0x6bb MUL
0x6bc ADD
0x6bd SWAP1
0x6be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d3 AND
0x6d4 SWAP1
0x6d5 DUP2
0x6d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6eb AND
0x6ec DUP2
0x6ed MSTORE
0x6ee POP
0x6ef POP
---
0x6b7: INVALID 
0x6b8: JUMPDEST 
0x6b9: V380 = 0x20
0x6bb: V381 = MUL 0x20 S0
0x6bc: V382 = ADD V381 S1
0x6be: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6d6: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x6ed: M[V382] = V386
---
Entry stack: [S6, S5, S4, S3, V371, S1, V374]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f0
[0x6f0:0x6f0]
---
Predecessors: [0x6b7]
Successors: [0x6f1]
---
0x6f0 JUMPDEST
---
0x6f0: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f1
[0x6f1:0x701]
---
Predecessors: [0x6f0]
Successors: [0x702]
---
0x6f1 JUMPDEST
0x6f2 DUP1
0x6f3 DUP1
0x6f4 PUSH1 0x1
0x6f6 ADD
0x6f7 SWAP2
0x6f8 POP
0x6f9 POP
0x6fa PUSH2 0x368
0x6fd JUMP
0x6fe JUMPDEST
0x6ff DUP2
0x700 SWAP3
0x701 POP
---
0x6f1: JUMPDEST 
0x6f4: V387 = 0x1
0x6f6: V388 = ADD 0x1 S0
0x6fa: V389 = 0x368
0x6fd: THROW 
0x6fe: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, S1, S1]
Exit stack: []

================================

Block 0x702
[0x702:0x75f]
---
Predecessors: [0x6f1]
Successors: [0x760]
---
0x702 JUMPDEST
0x703 POP
0x704 POP
0x705 SWAP2
0x706 SWAP1
0x707 POP
0x708 JUMP
0x709 JUMPDEST
0x70a PUSH1 0x0
0x70c DUP1
0x70d SWAP1
0x70e SLOAD
0x70f SWAP1
0x710 PUSH2 0x100
0x713 EXP
0x714 SWAP1
0x715 DIV
0x716 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72b AND
0x72c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x741 AND
0x742 CALLER
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 EQ
0x75a ISZERO
0x75b ISZERO
0x75c PUSH2 0x479
0x75f JUMPI
---
0x702: JUMPDEST 
0x708: JUMP S4
0x709: JUMPDEST 
0x70a: V390 = 0x0
0x70e: V391 = S[0x0]
0x710: V392 = 0x100
0x713: V393 = EXP 0x100 0x0
0x715: V394 = DIV V391 0x1
0x716: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x72b: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x72c: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x741: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x742: V399 = CALLER
0x743: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x759: V402 = EQ V401 V398
0x75a: V403 = ISZERO V402
0x75b: V404 = ISZERO V403
0x75c: V405 = 0x479
0x75f: THROWI V404
---
Entry stack: [S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: []

================================

Block 0x760
[0x760:0x79b]
---
Predecessors: [0x702]
Successors: [0x79c]
---
0x760 PUSH1 0x0
0x762 DUP1
0x763 REVERT
0x764 JUMPDEST
0x765 PUSH1 0x0
0x767 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77c AND
0x77d DUP2
0x77e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x793 AND
0x794 EQ
0x795 ISZERO
0x796 ISZERO
0x797 ISZERO
0x798 PUSH2 0x4b5
0x79b JUMPI
---
0x760: V406 = 0x0
0x763: REVERT 0x0 0x0
0x764: JUMPDEST 
0x765: V407 = 0x0
0x767: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x77c: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x77e: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x793: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x794: V412 = EQ V411 0x0
0x795: V413 = ISZERO V412
0x796: V414 = ISZERO V413
0x797: V415 = ISZERO V414
0x798: V416 = 0x4b5
0x79b: THROWI V415
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x79c
[0x79c:0x7e1]
---
Predecessors: [0x760]
Successors: [0x7e2]
---
0x79c PUSH1 0x0
0x79e DUP1
0x79f REVERT
0x7a0 JUMPDEST
0x7a1 DUP1
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0x0
0x7a6 PUSH2 0x100
0x7a9 EXP
0x7aa DUP2
0x7ab SLOAD
0x7ac DUP2
0x7ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c2 MUL
0x7c3 NOT
0x7c4 AND
0x7c5 SWAP1
0x7c6 DUP4
0x7c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dc AND
0x7dd MUL
0x7de OR
0x7df SWAP1
0x7e0 SSTORE
0x7e1 POP
---
0x79c: V417 = 0x0
0x79f: REVERT 0x0 0x0
0x7a0: JUMPDEST 
0x7a2: V418 = 0x1
0x7a4: V419 = 0x0
0x7a6: V420 = 0x100
0x7a9: V421 = EXP 0x100 0x0
0x7ab: V422 = S[0x1]
0x7ad: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: V424 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x7c3: V425 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7c4: V426 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V422
0x7c7: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7dd: V429 = MUL V428 0x1
0x7de: V430 = OR V429 V426
0x7e0: S[0x1] = V430
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x7e2
[0x7e2:0x7e2]
---
Predecessors: [0x79c]
Successors: [0x7e3]
---
0x7e2 JUMPDEST
---
0x7e2: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x7e3
[0x7e3:0x841]
---
Predecessors: [0x7e2]
Successors: [0x842]
---
0x7e3 JUMPDEST
0x7e4 POP
0x7e5 JUMP
0x7e6 JUMPDEST
0x7e7 PUSH1 0x0
0x7e9 DUP1
0x7ea PUSH1 0x0
0x7ec DUP1
0x7ed PUSH1 0x0
0x7ef SWAP1
0x7f0 SLOAD
0x7f1 SWAP1
0x7f2 PUSH2 0x100
0x7f5 EXP
0x7f6 SWAP1
0x7f7 DIV
0x7f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80d AND
0x80e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x823 AND
0x824 CALLER
0x825 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83a AND
0x83b EQ
0x83c ISZERO
0x83d ISZERO
0x83e PUSH2 0x55b
0x841 JUMPI
---
0x7e3: JUMPDEST 
0x7e5: JUMP S1
0x7e6: JUMPDEST 
0x7e7: V431 = 0x0
0x7ea: V432 = 0x0
0x7ed: V433 = 0x0
0x7f0: V434 = S[0x0]
0x7f2: V435 = 0x100
0x7f5: V436 = EXP 0x100 0x0
0x7f7: V437 = DIV V434 0x1
0x7f8: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x80d: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x80e: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x823: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x824: V442 = CALLER
0x825: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x83a: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x83b: V445 = EQ V444 V441
0x83c: V446 = ISZERO V445
0x83d: V447 = ISZERO V446
0x83e: V448 = 0x55b
0x841: THROWI V447
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x842
[0x842:0x89f]
---
Predecessors: [0x7e3]
Successors: [0x8a0]
---
0x842 PUSH1 0x0
0x844 DUP1
0x845 REVERT
0x846 JUMPDEST
0x847 PUSH1 0x0
0x849 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85e AND
0x85f PUSH1 0x1
0x861 PUSH1 0x0
0x863 SWAP1
0x864 SLOAD
0x865 SWAP1
0x866 PUSH2 0x100
0x869 EXP
0x86a SWAP1
0x86b DIV
0x86c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x881 AND
0x882 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x897 AND
0x898 EQ
0x899 ISZERO
0x89a ISZERO
0x89b ISZERO
0x89c PUSH2 0x5b9
0x89f JUMPI
---
0x842: V449 = 0x0
0x845: REVERT 0x0 0x0
0x846: JUMPDEST 
0x847: V450 = 0x0
0x849: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x85e: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x85f: V453 = 0x1
0x861: V454 = 0x0
0x864: V455 = S[0x1]
0x866: V456 = 0x100
0x869: V457 = EXP 0x100 0x0
0x86b: V458 = DIV V455 0x1
0x86c: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x881: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x882: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x897: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x898: V463 = EQ V462 0x0
0x899: V464 = ISZERO V463
0x89a: V465 = ISZERO V464
0x89b: V466 = ISZERO V465
0x89c: V467 = 0x5b9
0x89f: THROWI V466
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8a0
[0x8a0:0x8db]
---
Predecessors: [0x842]
Successors: [0x8dc]
---
0x8a0 PUSH1 0x0
0x8a2 DUP1
0x8a3 REVERT
0x8a4 JUMPDEST
0x8a5 PUSH1 0x0
0x8a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bc AND
0x8bd DUP9
0x8be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d3 AND
0x8d4 EQ
0x8d5 ISZERO
0x8d6 ISZERO
0x8d7 ISZERO
0x8d8 PUSH2 0x5f5
0x8db JUMPI
---
0x8a0: V468 = 0x0
0x8a3: REVERT 0x0 0x0
0x8a4: JUMPDEST 
0x8a5: V469 = 0x0
0x8a7: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bc: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8be: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d3: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x8d4: V474 = EQ V473 0x0
0x8d5: V475 = ISZERO V474
0x8d6: V476 = ISZERO V475
0x8d7: V477 = ISZERO V476
0x8d8: V478 = 0x5f5
0x8db: THROWI V477
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x8dc
[0x8dc:0x8ea]
---
Predecessors: [0x8a0]
Successors: [0x8eb]
---
0x8dc PUSH1 0x0
0x8de DUP1
0x8df REVERT
0x8e0 JUMPDEST
0x8e1 TIMESTAMP
0x8e2 DUP7
0x8e3 LT
0x8e4 ISZERO
0x8e5 ISZERO
0x8e6 ISZERO
0x8e7 PUSH2 0x604
0x8ea JUMPI
---
0x8dc: V479 = 0x0
0x8df: REVERT 0x0 0x0
0x8e0: JUMPDEST 
0x8e1: V480 = TIMESTAMP
0x8e3: V481 = LT S5 V480
0x8e4: V482 = ISZERO V481
0x8e5: V483 = ISZERO V482
0x8e6: V484 = ISZERO V483
0x8e7: V485 = 0x604
0x8ea: THROWI V484
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x8eb
[0x8eb:0x8f9]
---
Predecessors: [0x8dc]
Successors: [0x8fa]
---
0x8eb PUSH1 0x0
0x8ed DUP1
0x8ee REVERT
0x8ef JUMPDEST
0x8f0 PUSH1 0x0
0x8f2 DUP5
0x8f3 GT
0x8f4 ISZERO
0x8f5 ISZERO
0x8f6 PUSH2 0x613
0x8f9 JUMPI
---
0x8eb: V486 = 0x0
0x8ee: REVERT 0x0 0x0
0x8ef: JUMPDEST 
0x8f0: V487 = 0x0
0x8f3: V488 = GT S3 0x0
0x8f4: V489 = ISZERO V488
0x8f5: V490 = ISZERO V489
0x8f6: V491 = 0x613
0x8f9: THROWI V490
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0x8fa
[0x8fa:0x908]
---
Predecessors: [0x8eb]
Successors: [0x909]
---
0x8fa PUSH1 0x0
0x8fc DUP1
0x8fd REVERT
0x8fe JUMPDEST
0x8ff PUSH1 0x0
0x901 DUP6
0x902 GT
0x903 ISZERO
0x904 ISZERO
0x905 PUSH2 0x622
0x908 JUMPI
---
0x8fa: V492 = 0x0
0x8fd: REVERT 0x0 0x0
0x8fe: JUMPDEST 
0x8ff: V493 = 0x0
0x902: V494 = GT S4 0x0
0x903: V495 = ISZERO V494
0x904: V496 = ISZERO V495
0x905: V497 = 0x622
0x908: THROWI V496
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x909
[0x909:0x929]
---
Predecessors: [0x8fa]
Successors: [0x92a]
---
0x909 PUSH1 0x0
0x90b DUP1
0x90c REVERT
0x90d JUMPDEST
0x90e DUP6
0x90f SWAP3
0x910 POP
0x911 PUSH2 0x638
0x914 DUP5
0x915 DUP9
0x916 PUSH2 0xfc4
0x919 SWAP1
0x91a SWAP2
0x91b SWAP1
0x91c PUSH4 0xffffffff
0x921 AND
0x922 JUMP
0x923 JUMPDEST
0x924 SWAP1
0x925 POP
0x926 PUSH1 0x0
0x928 SWAP2
0x929 POP
---
0x909: V498 = 0x0
0x90c: REVERT 0x0 0x0
0x90d: JUMPDEST 
0x911: V499 = 0x638
0x916: V500 = 0xfc4
0x91c: V501 = 0xffffffff
0x921: V502 = AND 0xffffffff 0xfc4
0x922: THROW 
0x923: JUMPDEST 
0x926: V503 = 0x0
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S3, S6, 0x638, S0, S1, S5, S3, S4, S5, S6, S0, 0x0]
Exit stack: []

================================

Block 0x92a
[0x92a:0x932]
---
Predecessors: [0x909]
Successors: [0x933]
---
0x92a JUMPDEST
0x92b DUP4
0x92c DUP3
0x92d LT
0x92e ISZERO
0x92f PUSH2 0x803
0x932 JUMPI
---
0x92a: JUMPDEST 
0x92d: V504 = LT 0x0 S3
0x92e: V505 = ISZERO V504
0x92f: V506 = 0x803
0x932: THROWI V505
---
Entry stack: [0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S1, S0, 0x0, S0]

================================

Block 0x933
[0x933:0x992]
---
Predecessors: [0x92a]
Successors: [0x993]
---
0x933 PUSH2 0x65a
0x936 DUP6
0x937 DUP5
0x938 PUSH2 0xfe0
0x93b SWAP1
0x93c SWAP2
0x93d SWAP1
0x93e PUSH4 0xffffffff
0x943 AND
0x944 JUMP
0x945 JUMPDEST
0x946 SWAP3
0x947 POP
0x948 PUSH1 0x0
0x94a PUSH1 0x4
0x94c PUSH1 0x0
0x94e DUP11
0x94f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x964 AND
0x965 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97a AND
0x97b DUP2
0x97c MSTORE
0x97d PUSH1 0x20
0x97f ADD
0x980 SWAP1
0x981 DUP2
0x982 MSTORE
0x983 PUSH1 0x20
0x985 ADD
0x986 PUSH1 0x0
0x988 SHA3
0x989 DUP1
0x98a SLOAD
0x98b SWAP1
0x98c POP
0x98d EQ
0x98e ISZERO
0x98f PUSH2 0x70c
0x992 JUMPI
---
0x933: V507 = 0x65a
0x938: V508 = 0xfe0
0x93e: V509 = 0xffffffff
0x943: V510 = AND 0xffffffff 0xfe0
0x944: THROW 
0x945: JUMPDEST 
0x948: V511 = 0x0
0x94a: V512 = 0x4
0x94c: V513 = 0x0
0x94f: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x964: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x965: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x97a: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x97c: M[0x0] = V517
0x97d: V518 = 0x20
0x97f: V519 = ADD 0x20 0x0
0x982: M[0x20] = 0x4
0x983: V520 = 0x20
0x985: V521 = ADD 0x20 0x20
0x986: V522 = 0x0
0x988: V523 = SHA3 0x0 0x40
0x98a: V524 = S[V523]
0x98d: V525 = EQ V524 0x0
0x98e: V526 = ISZERO V525
0x98f: V527 = 0x70c
0x992: THROWI V526
---
Entry stack: [S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S2, S0, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0x993
[0x993:0x9b3]
---
Predecessors: [0x933]
Successors: [0x9b4]
---
0x993 PUSH1 0x3
0x995 DUP1
0x996 SLOAD
0x997 DUP1
0x998 PUSH1 0x1
0x99a ADD
0x99b DUP3
0x99c DUP2
0x99d PUSH2 0x6bb
0x9a0 SWAP2
0x9a1 SWAP1
0x9a2 PUSH2 0x1058
0x9a5 JUMP
0x9a6 JUMPDEST
0x9a7 SWAP2
0x9a8 PUSH1 0x0
0x9aa MSTORE
0x9ab PUSH1 0x20
0x9ad PUSH1 0x0
0x9af SHA3
0x9b0 SWAP1
0x9b1 ADD
0x9b2 PUSH1 0x0
---
0x993: V528 = 0x3
0x996: V529 = S[0x3]
0x998: V530 = 0x1
0x99a: V531 = ADD 0x1 V529
0x99d: V532 = 0x6bb
0x9a2: V533 = 0x1058
0x9a5: THROW 
0x9a6: JUMPDEST 
0x9a8: V534 = 0x0
0x9aa: M[0x0] = S2
0x9ab: V535 = 0x20
0x9ad: V536 = 0x0
0x9af: V537 = SHA3 0x0 0x20
0x9b1: V538 = ADD S1 V537
0x9b2: V539 = 0x0
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3, V529, V531, 0x6bb, 0x3, V531, 0x0, V538, S0]
Exit stack: []

================================

Block 0x9b4
[0x9b4:0x9f6]
---
Predecessors: [0x993]
Successors: [0x9f7]
---
0x9b4 JUMPDEST
0x9b5 DUP11
0x9b6 SWAP1
0x9b7 SWAP2
0x9b8 SWAP1
0x9b9 SWAP2
0x9ba PUSH2 0x100
0x9bd EXP
0x9be DUP2
0x9bf SLOAD
0x9c0 DUP2
0x9c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d6 MUL
0x9d7 NOT
0x9d8 AND
0x9d9 SWAP1
0x9da DUP4
0x9db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f0 AND
0x9f1 MUL
0x9f2 OR
0x9f3 SWAP1
0x9f4 SSTORE
0x9f5 POP
0x9f6 POP
---
0x9b4: JUMPDEST 
0x9ba: V540 = 0x100
0x9bd: V541 = EXP 0x100 0x0
0x9bf: V542 = S[V538]
0x9c1: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d6: V544 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9d7: V545 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9d8: V546 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V542
0x9db: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f0: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x9f1: V549 = MUL V548 0x1
0x9f2: V550 = OR V549 V546
0x9f4: S[V538] = V550
---
Entry stack: [S2, V538, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3]
Exit stack: [S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9f7
[0x9f7:0xa58]
---
Predecessors: [0x9b4]
Successors: [0xa59]
---
0x9f7 JUMPDEST
0x9f8 PUSH1 0x4
0x9fa PUSH1 0x0
0x9fc DUP10
0x9fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa12 AND
0xa13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa28 AND
0xa29 DUP2
0xa2a MSTORE
0xa2b PUSH1 0x20
0xa2d ADD
0xa2e SWAP1
0xa2f DUP2
0xa30 MSTORE
0xa31 PUSH1 0x20
0xa33 ADD
0xa34 PUSH1 0x0
0xa36 SHA3
0xa37 DUP1
0xa38 SLOAD
0xa39 DUP1
0xa3a PUSH1 0x1
0xa3c ADD
0xa3d DUP3
0xa3e DUP2
0xa3f PUSH2 0x75d
0xa42 SWAP2
0xa43 SWAP1
0xa44 PUSH2 0x1084
0xa47 JUMP
0xa48 JUMPDEST
0xa49 SWAP2
0xa4a PUSH1 0x0
0xa4c MSTORE
0xa4d PUSH1 0x20
0xa4f PUSH1 0x0
0xa51 SHA3
0xa52 SWAP1
0xa53 PUSH1 0x2
0xa55 MUL
0xa56 ADD
0xa57 PUSH1 0x0
---
0x9f7: JUMPDEST 
0x9f8: V551 = 0x4
0x9fa: V552 = 0x0
0x9fd: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0xa12: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xa13: V555 = 0xffffffffffffffffffffffffffffffffffffffff
0xa28: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0xa2a: M[0x0] = V556
0xa2b: V557 = 0x20
0xa2d: V558 = ADD 0x20 0x0
0xa30: M[0x20] = 0x4
0xa31: V559 = 0x20
0xa33: V560 = ADD 0x20 0x20
0xa34: V561 = 0x0
0xa36: V562 = SHA3 0x0 0x40
0xa38: V563 = S[V562]
0xa3a: V564 = 0x1
0xa3c: V565 = ADD 0x1 V563
0xa3f: V566 = 0x75d
0xa44: V567 = 0x1084
0xa47: THROW 
0xa48: JUMPDEST 
0xa4a: V568 = 0x0
0xa4c: M[0x0] = S2
0xa4d: V569 = 0x20
0xa4f: V570 = 0x0
0xa51: V571 = SHA3 0x0 0x20
0xa53: V572 = 0x2
0xa55: V573 = MUL 0x2 S1
0xa56: V574 = ADD V573 V571
0xa57: V575 = 0x0
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, 0x0, V574, S0]
Exit stack: []

================================

Block 0xa59
[0xa59:0xae0]
---
Predecessors: [0x9f7]
Successors: [0xae1]
---
0xa59 JUMPDEST
0xa5a PUSH1 0x40
0xa5c DUP1
0xa5d MLOAD
0xa5e SWAP1
0xa5f DUP2
0xa60 ADD
0xa61 PUSH1 0x40
0xa63 MSTORE
0xa64 DUP1
0xa65 DUP6
0xa66 DUP2
0xa67 MSTORE
0xa68 PUSH1 0x20
0xa6a ADD
0xa6b DUP8
0xa6c DUP2
0xa6d MSTORE
0xa6e POP
0xa6f SWAP1
0xa70 SWAP2
0xa71 SWAP1
0xa72 SWAP2
0xa73 POP
0xa74 PUSH1 0x0
0xa76 DUP3
0xa77 ADD
0xa78 MLOAD
0xa79 DUP2
0xa7a PUSH1 0x0
0xa7c ADD
0xa7d SSTORE
0xa7e PUSH1 0x20
0xa80 DUP3
0xa81 ADD
0xa82 MLOAD
0xa83 DUP2
0xa84 PUSH1 0x1
0xa86 ADD
0xa87 SSTORE
0xa88 POP
0xa89 POP
0xa8a POP
0xa8b DUP8
0xa8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa1 AND
0xaa2 PUSH32 0x9ade76f4385de306666dfb21a52b27d52db0fde8ad0f515fa261f532cac60d21
0xac3 DUP3
0xac4 DUP6
0xac5 PUSH1 0x40
0xac7 MLOAD
0xac8 DUP1
0xac9 DUP4
0xaca DUP2
0xacb MSTORE
0xacc PUSH1 0x20
0xace ADD
0xacf DUP3
0xad0 DUP2
0xad1 MSTORE
0xad2 PUSH1 0x20
0xad4 ADD
0xad5 SWAP3
0xad6 POP
0xad7 POP
0xad8 POP
0xad9 PUSH1 0x40
0xadb MLOAD
0xadc DUP1
0xadd SWAP2
0xade SUB
0xadf SWAP1
0xae0 LOG2
---
0xa59: JUMPDEST 
0xa5a: V576 = 0x40
0xa5d: V577 = M[0x40]
0xa60: V578 = ADD V577 0x40
0xa61: V579 = 0x40
0xa63: M[0x40] = V578
0xa67: M[V577] = S3
0xa68: V580 = 0x20
0xa6a: V581 = ADD 0x20 V577
0xa6d: M[V581] = S5
0xa74: V582 = 0x0
0xa77: V583 = ADD V577 0x0
0xa78: V584 = M[V583]
0xa7a: V585 = 0x0
0xa7c: V586 = ADD 0x0 V574
0xa7d: S[V586] = V584
0xa7e: V587 = 0x20
0xa81: V588 = ADD V577 0x20
0xa82: V589 = M[V588]
0xa84: V590 = 0x1
0xa86: V591 = ADD 0x1 V574
0xa87: S[V591] = V589
0xa8c: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa1: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0xaa2: V594 = 0x9ade76f4385de306666dfb21a52b27d52db0fde8ad0f515fa261f532cac60d21
0xac5: V595 = 0x40
0xac7: V596 = M[0x40]
0xacb: M[V596] = S3
0xacc: V597 = 0x20
0xace: V598 = ADD 0x20 V596
0xad1: M[V598] = S5
0xad2: V599 = 0x20
0xad4: V600 = ADD 0x20 V598
0xad9: V601 = 0x40
0xadb: V602 = M[0x40]
0xade: V603 = SUB V600 V602
0xae0: LOG V602 V603 0x9ade76f4385de306666dfb21a52b27d52db0fde8ad0f515fa261f532cac60d21 V593
---
Entry stack: [S2, V574, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3]
Exit stack: [S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xae1
[0xae1:0xaed]
---
Predecessors: [0xa59]
Successors: [0x63f]
---
0xae1 JUMPDEST
0xae2 DUP2
0xae3 DUP1
0xae4 PUSH1 0x1
0xae6 ADD
0xae7 SWAP3
0xae8 POP
0xae9 POP
0xaea PUSH2 0x63f
0xaed JUMP
---
0xae1: JUMPDEST 
0xae4: V604 = 0x1
0xae6: V605 = ADD 0x1 S1
0xaea: V606 = 0x63f
0xaed: JUMP 0x63f
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V605, S0]
Exit stack: [S7, S6, S5, S4, S3, S2, V605, S0]

================================

Block 0xaee
[0xaee:0xaee]
---
Predecessors: []
Successors: [0xaef]
---
0xaee JUMPDEST
---
0xaee: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaef
[0xaef:0xaef]
---
Predecessors: [0xaee]
Successors: [0xaf0]
---
0xaef JUMPDEST
---
0xaef: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf0
[0xaf0:0xaf0]
---
Predecessors: [0xaef]
Successors: [0xaf1]
---
0xaf0 JUMPDEST
---
0xaf0: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf1
[0xaf1:0xb55]
---
Predecessors: [0xaf0]
Successors: [0xb56]
---
0xaf1 JUMPDEST
0xaf2 POP
0xaf3 POP
0xaf4 POP
0xaf5 POP
0xaf6 POP
0xaf7 POP
0xaf8 POP
0xaf9 POP
0xafa JUMP
0xafb JUMPDEST
0xafc PUSH1 0x0
0xafe DUP1
0xaff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb14 AND
0xb15 PUSH1 0x1
0xb17 PUSH1 0x0
0xb19 SWAP1
0xb1a SLOAD
0xb1b SWAP1
0xb1c PUSH2 0x100
0xb1f EXP
0xb20 SWAP1
0xb21 DIV
0xb22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb37 AND
0xb38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4d AND
0xb4e EQ
0xb4f ISZERO
0xb50 ISZERO
0xb51 ISZERO
0xb52 PUSH2 0x86f
0xb55 JUMPI
---
0xaf1: JUMPDEST 
0xafa: JUMP S8
0xafb: JUMPDEST 
0xafc: V607 = 0x0
0xaff: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0xb14: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xb15: V610 = 0x1
0xb17: V611 = 0x0
0xb1a: V612 = S[0x1]
0xb1c: V613 = 0x100
0xb1f: V614 = EXP 0x100 0x0
0xb21: V615 = DIV V612 0x1
0xb22: V616 = 0xffffffffffffffffffffffffffffffffffffffff
0xb37: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0xb38: V618 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4d: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0xb4e: V620 = EQ V619 0x0
0xb4f: V621 = ISZERO V620
0xb50: V622 = ISZERO V621
0xb51: V623 = ISZERO V622
0xb52: V624 = 0x86f
0xb55: THROWI V623
---
Entry stack: []
Stack pops: 18
Stack additions: [0x0]
Exit stack: []

================================

Block 0xb56
[0xb56:0xb6f]
---
Predecessors: [0xaf1]
Successors: [0xb70]
---
0xb56 PUSH1 0x0
0xb58 DUP1
0xb59 REVERT
0xb5a JUMPDEST
0xb5b PUSH2 0x878
0xb5e CALLER
0xb5f PUSH2 0xba3
0xb62 JUMP
0xb63 JUMPDEST
0xb64 SWAP1
0xb65 POP
0xb66 PUSH1 0x0
0xb68 DUP2
0xb69 GT
0xb6a ISZERO
0xb6b ISZERO
0xb6c PUSH2 0x889
0xb6f JUMPI
---
0xb56: V625 = 0x0
0xb59: REVERT 0x0 0x0
0xb5a: JUMPDEST 
0xb5b: V626 = 0x878
0xb5e: V627 = CALLER
0xb5f: V628 = 0xba3
0xb62: THROW 
0xb63: JUMPDEST 
0xb66: V629 = 0x0
0xb69: V630 = GT S0 0x0
0xb6a: V631 = ISZERO V630
0xb6b: V632 = ISZERO V631
0xb6c: V633 = 0x889
0xb6f: THROWI V632
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V627, 0x878, S0]
Exit stack: []

================================

Block 0xb70
[0xb70:0xcd1]
---
Predecessors: [0xb56]
Successors: [0xcd2]
---
0xb70 PUSH1 0x0
0xb72 DUP1
0xb73 REVERT
0xb74 JUMPDEST
0xb75 PUSH2 0x8db
0xb78 DUP2
0xb79 PUSH1 0x2
0xb7b PUSH1 0x0
0xb7d CALLER
0xb7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb93 AND
0xb94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba9 AND
0xbaa DUP2
0xbab MSTORE
0xbac PUSH1 0x20
0xbae ADD
0xbaf SWAP1
0xbb0 DUP2
0xbb1 MSTORE
0xbb2 PUSH1 0x20
0xbb4 ADD
0xbb5 PUSH1 0x0
0xbb7 SHA3
0xbb8 SLOAD
0xbb9 PUSH2 0xfe0
0xbbc SWAP1
0xbbd SWAP2
0xbbe SWAP1
0xbbf PUSH4 0xffffffff
0xbc4 AND
0xbc5 JUMP
0xbc6 JUMPDEST
0xbc7 PUSH1 0x2
0xbc9 PUSH1 0x0
0xbcb CALLER
0xbcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe1 AND
0xbe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf7 AND
0xbf8 DUP2
0xbf9 MSTORE
0xbfa PUSH1 0x20
0xbfc ADD
0xbfd SWAP1
0xbfe DUP2
0xbff MSTORE
0xc00 PUSH1 0x20
0xc02 ADD
0xc03 PUSH1 0x0
0xc05 SHA3
0xc06 DUP2
0xc07 SWAP1
0xc08 SSTORE
0xc09 POP
0xc0a PUSH1 0x1
0xc0c PUSH1 0x0
0xc0e SWAP1
0xc0f SLOAD
0xc10 SWAP1
0xc11 PUSH2 0x100
0xc14 EXP
0xc15 SWAP1
0xc16 DIV
0xc17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2c AND
0xc2d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc42 AND
0xc43 PUSH4 0xa9059cbb
0xc48 CALLER
0xc49 DUP4
0xc4a PUSH1 0x0
0xc4c PUSH1 0x40
0xc4e MLOAD
0xc4f PUSH1 0x20
0xc51 ADD
0xc52 MSTORE
0xc53 PUSH1 0x40
0xc55 MLOAD
0xc56 DUP4
0xc57 PUSH4 0xffffffff
0xc5c AND
0xc5d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc7b MUL
0xc7c DUP2
0xc7d MSTORE
0xc7e PUSH1 0x4
0xc80 ADD
0xc81 DUP1
0xc82 DUP4
0xc83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc98 AND
0xc99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcae AND
0xcaf DUP2
0xcb0 MSTORE
0xcb1 PUSH1 0x20
0xcb3 ADD
0xcb4 DUP3
0xcb5 DUP2
0xcb6 MSTORE
0xcb7 PUSH1 0x20
0xcb9 ADD
0xcba SWAP3
0xcbb POP
0xcbc POP
0xcbd POP
0xcbe PUSH1 0x20
0xcc0 PUSH1 0x40
0xcc2 MLOAD
0xcc3 DUP1
0xcc4 DUP4
0xcc5 SUB
0xcc6 DUP2
0xcc7 PUSH1 0x0
0xcc9 DUP8
0xcca DUP1
0xccb EXTCODESIZE
0xccc ISZERO
0xccd ISZERO
0xcce PUSH2 0x9eb
0xcd1 JUMPI
---
0xb70: V634 = 0x0
0xb73: REVERT 0x0 0x0
0xb74: JUMPDEST 
0xb75: V635 = 0x8db
0xb79: V636 = 0x2
0xb7b: V637 = 0x0
0xb7d: V638 = CALLER
0xb7e: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xb93: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0xb94: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0xba9: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0xbab: M[0x0] = V642
0xbac: V643 = 0x20
0xbae: V644 = ADD 0x20 0x0
0xbb1: M[0x20] = 0x2
0xbb2: V645 = 0x20
0xbb4: V646 = ADD 0x20 0x20
0xbb5: V647 = 0x0
0xbb7: V648 = SHA3 0x0 0x40
0xbb8: V649 = S[V648]
0xbb9: V650 = 0xfe0
0xbbf: V651 = 0xffffffff
0xbc4: V652 = AND 0xffffffff 0xfe0
0xbc5: THROW 
0xbc6: JUMPDEST 
0xbc7: V653 = 0x2
0xbc9: V654 = 0x0
0xbcb: V655 = CALLER
0xbcc: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe1: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0xbe2: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf7: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0xbf9: M[0x0] = V659
0xbfa: V660 = 0x20
0xbfc: V661 = ADD 0x20 0x0
0xbff: M[0x20] = 0x2
0xc00: V662 = 0x20
0xc02: V663 = ADD 0x20 0x20
0xc03: V664 = 0x0
0xc05: V665 = SHA3 0x0 0x40
0xc08: S[V665] = S0
0xc0a: V666 = 0x1
0xc0c: V667 = 0x0
0xc0f: V668 = S[0x1]
0xc11: V669 = 0x100
0xc14: V670 = EXP 0x100 0x0
0xc16: V671 = DIV V668 0x1
0xc17: V672 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2c: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0xc2d: V674 = 0xffffffffffffffffffffffffffffffffffffffff
0xc42: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0xc43: V676 = 0xa9059cbb
0xc48: V677 = CALLER
0xc4a: V678 = 0x0
0xc4c: V679 = 0x40
0xc4e: V680 = M[0x40]
0xc4f: V681 = 0x20
0xc51: V682 = ADD 0x20 V680
0xc52: M[V682] = 0x0
0xc53: V683 = 0x40
0xc55: V684 = M[0x40]
0xc57: V685 = 0xffffffff
0xc5c: V686 = AND 0xffffffff 0xa9059cbb
0xc5d: V687 = 0x100000000000000000000000000000000000000000000000000000000
0xc7b: V688 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc7d: M[V684] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc7e: V689 = 0x4
0xc80: V690 = ADD 0x4 V684
0xc83: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xc98: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xc99: V693 = 0xffffffffffffffffffffffffffffffffffffffff
0xcae: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0xcb0: M[V690] = V694
0xcb1: V695 = 0x20
0xcb3: V696 = ADD 0x20 V690
0xcb6: M[V696] = S1
0xcb7: V697 = 0x20
0xcb9: V698 = ADD 0x20 V696
0xcbe: V699 = 0x20
0xcc0: V700 = 0x40
0xcc2: V701 = M[0x40]
0xcc5: V702 = SUB V698 V701
0xcc7: V703 = 0x0
0xccb: V704 = EXTCODESIZE V675
0xccc: V705 = ISZERO V704
0xccd: V706 = ISZERO V705
0xcce: V707 = 0x9eb
0xcd1: THROWI V706
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0, V649, 0x8db, S0, V675, 0x0, V701, V702, V701, 0x20, V698, 0xa9059cbb, V675, S1]
Exit stack: []

================================

Block 0xcd2
[0xcd2:0xce2]
---
Predecessors: [0xb70]
Successors: [0xce3]
---
0xcd2 PUSH1 0x0
0xcd4 DUP1
0xcd5 REVERT
0xcd6 JUMPDEST
0xcd7 PUSH2 0x2c6
0xcda GAS
0xcdb SUB
0xcdc CALL
0xcdd ISZERO
0xcde ISZERO
0xcdf PUSH2 0x9fc
0xce2 JUMPI
---
0xcd2: V708 = 0x0
0xcd5: REVERT 0x0 0x0
0xcd6: JUMPDEST 
0xcd7: V709 = 0x2c6
0xcda: V710 = GAS
0xcdb: V711 = SUB V710 0x2c6
0xcdc: V712 = CALL V711 S0 S1 S2 S3 S4 S5
0xcdd: V713 = ISZERO V712
0xcde: V714 = ISZERO V713
0xcdf: V715 = 0x9fc
0xce2: THROWI V714
---
Entry stack: [S9, V675, 0xa9059cbb, V698, 0x20, V701, V702, V701, 0x0, V675]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce3
[0xce3:0xd40]
---
Predecessors: [0xcd2]
Successors: [0xd41]
---
0xce3 PUSH1 0x0
0xce5 DUP1
0xce6 REVERT
0xce7 JUMPDEST
0xce8 POP
0xce9 POP
0xcea POP
0xceb PUSH1 0x40
0xced MLOAD
0xcee DUP1
0xcef MLOAD
0xcf0 SWAP1
0xcf1 POP
0xcf2 POP
0xcf3 CALLER
0xcf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd09 AND
0xd0a PUSH32 0xd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e
0xd2b DUP3
0xd2c PUSH1 0x40
0xd2e MLOAD
0xd2f DUP1
0xd30 DUP3
0xd31 DUP2
0xd32 MSTORE
0xd33 PUSH1 0x20
0xd35 ADD
0xd36 SWAP2
0xd37 POP
0xd38 POP
0xd39 PUSH1 0x40
0xd3b MLOAD
0xd3c DUP1
0xd3d SWAP2
0xd3e SUB
0xd3f SWAP1
0xd40 LOG2
---
0xce3: V716 = 0x0
0xce6: REVERT 0x0 0x0
0xce7: JUMPDEST 
0xceb: V717 = 0x40
0xced: V718 = M[0x40]
0xcef: V719 = M[V718]
0xcf3: V720 = CALLER
0xcf4: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xd09: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0xd0a: V723 = 0xd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e
0xd2c: V724 = 0x40
0xd2e: V725 = M[0x40]
0xd32: M[V725] = S3
0xd33: V726 = 0x20
0xd35: V727 = ADD 0x20 V725
0xd39: V728 = 0x40
0xd3b: V729 = M[0x40]
0xd3e: V730 = SUB V727 V729
0xd40: LOG V729 V730 0xd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e V722
---
Entry stack: []
Stack pops: 0
Stack additions: [S3]
Exit stack: []

================================

Block 0xd41
[0xd41:0xd41]
---
Predecessors: [0xce3]
Successors: [0xd42]
---
0xd41 JUMPDEST
---
0xd41: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xd42
[0xd42:0xd4d]
---
Predecessors: [0xd41]
Successors: [0xd4e]
---
0xd42 JUMPDEST
0xd43 POP
0xd44 JUMP
0xd45 JUMPDEST
0xd46 PUSH1 0x0
0xd48 DUP1
0xd49 PUSH1 0x0
0xd4b DUP1
0xd4c SWAP1
0xd4d POP
---
0xd42: JUMPDEST 
0xd44: JUMP S1
0xd45: JUMPDEST 
0xd46: V731 = 0x0
0xd49: V732 = 0x0
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xd4e
[0xd4e:0xd98]
---
Predecessors: [0xd42]
Successors: [0xd99]
---
0xd4e JUMPDEST
0xd4f PUSH1 0x4
0xd51 PUSH1 0x0
0xd53 DUP6
0xd54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd69 AND
0xd6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7f AND
0xd80 DUP2
0xd81 MSTORE
0xd82 PUSH1 0x20
0xd84 ADD
0xd85 SWAP1
0xd86 DUP2
0xd87 MSTORE
0xd88 PUSH1 0x20
0xd8a ADD
0xd8b PUSH1 0x0
0xd8d SHA3
0xd8e DUP1
0xd8f SLOAD
0xd90 SWAP1
0xd91 POP
0xd92 DUP2
0xd93 LT
0xd94 ISZERO
0xd95 PUSH2 0xb9b
0xd98 JUMPI
---
0xd4e: JUMPDEST 
0xd4f: V733 = 0x4
0xd51: V734 = 0x0
0xd54: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xd69: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd6a: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7f: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0xd81: M[0x0] = V738
0xd82: V739 = 0x20
0xd84: V740 = ADD 0x20 0x0
0xd87: M[0x20] = 0x4
0xd88: V741 = 0x20
0xd8a: V742 = ADD 0x20 0x20
0xd8b: V743 = 0x0
0xd8d: V744 = SHA3 0x0 0x40
0xd8f: V745 = S[V744]
0xd93: V746 = LT 0x0 V745
0xd94: V747 = ISZERO V746
0xd95: V748 = 0xb9b
0xd98: THROWI V747
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S0, 0x0, 0x0, 0x0]

================================

Block 0xd99
[0xd99:0xde3]
---
Predecessors: [0xd4e]
Successors: [0xde4]
---
0xd99 TIMESTAMP
0xd9a PUSH1 0x4
0xd9c PUSH1 0x0
0xd9e DUP7
0xd9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb4 AND
0xdb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdca AND
0xdcb DUP2
0xdcc MSTORE
0xdcd PUSH1 0x20
0xdcf ADD
0xdd0 SWAP1
0xdd1 DUP2
0xdd2 MSTORE
0xdd3 PUSH1 0x20
0xdd5 ADD
0xdd6 PUSH1 0x0
0xdd8 SHA3
0xdd9 DUP3
0xdda DUP2
0xddb SLOAD
0xddc DUP2
0xddd LT
0xdde ISZERO
0xddf ISZERO
0xde0 PUSH2 0xafa
0xde3 JUMPI
---
0xd99: V749 = TIMESTAMP
0xd9a: V750 = 0x4
0xd9c: V751 = 0x0
0xd9f: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb4: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xdb5: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xdca: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0xdcc: M[0x0] = V755
0xdcd: V756 = 0x20
0xdcf: V757 = ADD 0x20 0x0
0xdd2: M[0x20] = 0x4
0xdd3: V758 = 0x20
0xdd5: V759 = ADD 0x20 0x20
0xdd6: V760 = 0x0
0xdd8: V761 = SHA3 0x0 0x40
0xddb: V762 = S[V761]
0xddd: V763 = LT 0x0 V762
0xdde: V764 = ISZERO V763
0xddf: V765 = ISZERO V764
0xde0: V766 = 0xafa
0xde3: THROWI V765
---
Entry stack: [S3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V749, V761, S0]
Exit stack: [S3, 0x0, 0x0, 0x0, V749, V761, 0x0]

================================

Block 0xde4
[0xde4:0xdf5]
---
Predecessors: [0xd99]
Successors: [0xdf6]
---
0xde4 INVALID
0xde5 JUMPDEST
0xde6 SWAP1
0xde7 PUSH1 0x0
0xde9 MSTORE
0xdea PUSH1 0x20
0xdec PUSH1 0x0
0xdee SHA3
0xdef SWAP1
0xdf0 PUSH1 0x2
0xdf2 MUL
0xdf3 ADD
0xdf4 PUSH1 0x0
---
0xde4: INVALID 
0xde5: JUMPDEST 
0xde7: V767 = 0x0
0xde9: M[0x0] = S1
0xdea: V768 = 0x20
0xdec: V769 = 0x0
0xdee: V770 = SHA3 0x0 0x20
0xdf0: V771 = 0x2
0xdf2: V772 = MUL 0x2 S0
0xdf3: V773 = ADD V772 V770
0xdf4: V774 = 0x0
---
Entry stack: [S6, 0x0, 0x0, 0x0, V749, V761, 0x0]
Stack pops: 0
Stack additions: [0x0, V773]
Exit stack: []

================================

Block 0xdf6
[0xdf6:0xe01]
---
Predecessors: [0xde4]
Successors: [0xe02]
---
0xdf6 JUMPDEST
0xdf7 POP
0xdf8 PUSH1 0x1
0xdfa ADD
0xdfb SLOAD
0xdfc LT
0xdfd ISZERO
0xdfe PUSH2 0xb8d
0xe01 JUMPI
---
0xdf6: JUMPDEST 
0xdf8: V775 = 0x1
0xdfa: V776 = ADD 0x1 V773
0xdfb: V777 = S[V776]
0xdfc: V778 = LT V777 S2
0xdfd: V779 = ISZERO V778
0xdfe: V780 = 0xb8d
0xe01: THROWI V779
---
Entry stack: [V773, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xe02
[0xe02:0xe4e]
---
Predecessors: [0xdf6]
Successors: [0xe4f]
---
0xe02 PUSH2 0xb8a
0xe05 PUSH1 0x4
0xe07 PUSH1 0x0
0xe09 DUP7
0xe0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1f AND
0xe20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe35 AND
0xe36 DUP2
0xe37 MSTORE
0xe38 PUSH1 0x20
0xe3a ADD
0xe3b SWAP1
0xe3c DUP2
0xe3d MSTORE
0xe3e PUSH1 0x20
0xe40 ADD
0xe41 PUSH1 0x0
0xe43 SHA3
0xe44 DUP3
0xe45 DUP2
0xe46 SLOAD
0xe47 DUP2
0xe48 LT
0xe49 ISZERO
0xe4a ISZERO
0xe4b PUSH2 0xb65
0xe4e JUMPI
---
0xe02: V781 = 0xb8a
0xe05: V782 = 0x4
0xe07: V783 = 0x0
0xe0a: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1f: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe20: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xe35: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0xe37: M[0x0] = V787
0xe38: V788 = 0x20
0xe3a: V789 = ADD 0x20 0x0
0xe3d: M[0x20] = 0x4
0xe3e: V790 = 0x20
0xe40: V791 = ADD 0x20 0x20
0xe41: V792 = 0x0
0xe43: V793 = SHA3 0x0 0x40
0xe46: V794 = S[V793]
0xe48: V795 = LT S0 V794
0xe49: V796 = ISZERO V795
0xe4a: V797 = ISZERO V796
0xe4b: V798 = 0xb65
0xe4e: THROWI V797
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xb8a, V793, S0]
Exit stack: [S3, S2, S1, S0, 0xb8a, V793, S0]

================================

Block 0xe4f
[0xe4f:0xe60]
---
Predecessors: [0xe02]
Successors: [0xe61]
---
0xe4f INVALID
0xe50 JUMPDEST
0xe51 SWAP1
0xe52 PUSH1 0x0
0xe54 MSTORE
0xe55 PUSH1 0x20
0xe57 PUSH1 0x0
0xe59 SHA3
0xe5a SWAP1
0xe5b PUSH1 0x2
0xe5d MUL
0xe5e ADD
0xe5f PUSH1 0x0
---
0xe4f: INVALID 
0xe50: JUMPDEST 
0xe52: V799 = 0x0
0xe54: M[0x0] = S1
0xe55: V800 = 0x20
0xe57: V801 = 0x0
0xe59: V802 = SHA3 0x0 0x20
0xe5b: V803 = 0x2
0xe5d: V804 = MUL 0x2 S0
0xe5e: V805 = ADD V804 V802
0xe5f: V806 = 0x0
---
Entry stack: [S6, S5, S4, S3, 0xb8a, V793, S0]
Stack pops: 0
Stack additions: [0x0, V805]
Exit stack: []

================================

Block 0xe61
[0xe61:0xe77]
---
Predecessors: [0xe4f]
Successors: [0xe78]
---
0xe61 JUMPDEST
0xe62 POP
0xe63 PUSH1 0x0
0xe65 ADD
0xe66 SLOAD
0xe67 DUP4
0xe68 PUSH2 0xfe0
0xe6b SWAP1
0xe6c SWAP2
0xe6d SWAP1
0xe6e PUSH4 0xffffffff
0xe73 AND
0xe74 JUMP
0xe75 JUMPDEST
0xe76 SWAP2
0xe77 POP
---
0xe61: JUMPDEST 
0xe63: V807 = 0x0
0xe65: V808 = ADD 0x0 V805
0xe66: V809 = S[V808]
0xe68: V810 = 0xfe0
0xe6e: V811 = 0xffffffff
0xe73: V812 = AND 0xffffffff 0xfe0
0xe74: THROW 
0xe75: JUMPDEST 
---
Entry stack: [V805, 0x0]
Stack pops: 5
Stack additions: [S1, S0]
Exit stack: []

================================

Block 0xe78
[0xe78:0xe78]
---
Predecessors: [0xe61]
Successors: [0xe79]
---
0xe78 JUMPDEST
---
0xe78: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0xe79
[0xe79:0xe86]
---
Predecessors: [0xe78]
Successors: [0xe87]
---
0xe79 JUMPDEST
0xe7a DUP1
0xe7b DUP1
0xe7c PUSH1 0x1
0xe7e ADD
0xe7f SWAP2
0xe80 POP
0xe81 POP
0xe82 PUSH2 0xa63
0xe85 JUMP
0xe86 JUMPDEST
---
0xe79: JUMPDEST 
0xe7c: V813 = 0x1
0xe7e: V814 = ADD 0x1 S0
0xe82: V815 = 0xa63
0xe85: THROW 
0xe86: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xe87
[0xe87:0xef3]
---
Predecessors: [0xe79]
Successors: [0xef4]
---
0xe87 JUMPDEST
0xe88 POP
0xe89 POP
0xe8a SWAP2
0xe8b SWAP1
0xe8c POP
0xe8d JUMP
0xe8e JUMPDEST
0xe8f PUSH1 0x0
0xe91 DUP1
0xe92 PUSH2 0xbaf
0xe95 DUP4
0xe96 PUSH2 0xa5a
0xe99 JUMP
0xe9a JUMPDEST
0xe9b SWAP1
0xe9c POP
0xe9d PUSH2 0xc03
0xea0 PUSH1 0x2
0xea2 PUSH1 0x0
0xea4 DUP6
0xea5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeba AND
0xebb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed0 AND
0xed1 DUP2
0xed2 MSTORE
0xed3 PUSH1 0x20
0xed5 ADD
0xed6 SWAP1
0xed7 DUP2
0xed8 MSTORE
0xed9 PUSH1 0x20
0xedb ADD
0xedc PUSH1 0x0
0xede SHA3
0xedf SLOAD
0xee0 DUP3
0xee1 PUSH2 0xfff
0xee4 SWAP1
0xee5 SWAP2
0xee6 SWAP1
0xee7 PUSH4 0xffffffff
0xeec AND
0xeed JUMP
0xeee JUMPDEST
0xeef SWAP1
0xef0 POP
0xef1 DUP1
0xef2 SWAP2
0xef3 POP
---
0xe87: JUMPDEST 
0xe8d: JUMP S4
0xe8e: JUMPDEST 
0xe8f: V816 = 0x0
0xe92: V817 = 0xbaf
0xe96: V818 = 0xa5a
0xe99: THROW 
0xe9a: JUMPDEST 
0xe9d: V819 = 0xc03
0xea0: V820 = 0x2
0xea2: V821 = 0x0
0xea5: V822 = 0xffffffffffffffffffffffffffffffffffffffff
0xeba: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xebb: V824 = 0xffffffffffffffffffffffffffffffffffffffff
0xed0: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff V823
0xed2: M[0x0] = V825
0xed3: V826 = 0x20
0xed5: V827 = ADD 0x20 0x0
0xed8: M[0x20] = 0x2
0xed9: V828 = 0x20
0xedb: V829 = ADD 0x20 0x20
0xedc: V830 = 0x0
0xede: V831 = SHA3 0x0 0x40
0xedf: V832 = S[V831]
0xee1: V833 = 0xfff
0xee7: V834 = 0xffffffff
0xeec: V835 = AND 0xffffffff 0xfff
0xeed: THROW 
0xeee: JUMPDEST 
---
Entry stack: []
Stack pops: 20
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0xef4
[0xef4:0xf75]
---
Predecessors: [0xe87]
Successors: [0xf76]
---
0xef4 JUMPDEST
0xef5 POP
0xef6 SWAP2
0xef7 SWAP1
0xef8 POP
0xef9 JUMP
0xefa JUMPDEST
0xefb PUSH1 0x0
0xefd DUP1
0xefe SWAP1
0xeff SLOAD
0xf00 SWAP1
0xf01 PUSH2 0x100
0xf04 EXP
0xf05 SWAP1
0xf06 DIV
0xf07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1c AND
0xf1d DUP2
0xf1e JUMP
0xf1f JUMPDEST
0xf20 PUSH1 0x0
0xf22 DUP1
0xf23 SWAP1
0xf24 SLOAD
0xf25 SWAP1
0xf26 PUSH2 0x100
0xf29 EXP
0xf2a SWAP1
0xf2b DIV
0xf2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf41 AND
0xf42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf57 AND
0xf58 CALLER
0xf59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6e AND
0xf6f EQ
0xf70 ISZERO
0xf71 ISZERO
0xf72 PUSH2 0xc8f
0xf75 JUMPI
---
0xef4: JUMPDEST 
0xef9: JUMP S3
0xefa: JUMPDEST 
0xefb: V836 = 0x0
0xeff: V837 = S[0x0]
0xf01: V838 = 0x100
0xf04: V839 = EXP 0x100 0x0
0xf06: V840 = DIV V837 0x1
0xf07: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1c: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0xf1e: JUMP S0
0xf1f: JUMPDEST 
0xf20: V843 = 0x0
0xf24: V844 = S[0x0]
0xf26: V845 = 0x100
0xf29: V846 = EXP 0x100 0x0
0xf2b: V847 = DIV V844 0x1
0xf2c: V848 = 0xffffffffffffffffffffffffffffffffffffffff
0xf41: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0xf42: V850 = 0xffffffffffffffffffffffffffffffffffffffff
0xf57: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0xf58: V852 = CALLER
0xf59: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6e: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0xf6f: V855 = EQ V854 V851
0xf70: V856 = ISZERO V855
0xf71: V857 = ISZERO V856
0xf72: V858 = 0xc8f
0xf75: THROWI V857
---
Entry stack: [S1, S0]
Stack pops: 12
Stack additions: []
Exit stack: []

================================

Block 0xf76
[0xf76:0xfed]
---
Predecessors: [0xef4]
Successors: [0xfee]
---
0xf76 PUSH1 0x0
0xf78 DUP1
0xf79 REVERT
0xf7a JUMPDEST
0xf7b PUSH1 0x0
0xf7d DUP1
0xf7e SWAP1
0xf7f SLOAD
0xf80 SWAP1
0xf81 PUSH2 0x100
0xf84 EXP
0xf85 SWAP1
0xf86 DIV
0xf87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9c AND
0xf9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb2 AND
0xfb3 PUSH2 0x8fc
0xfb6 ADDRESS
0xfb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcc AND
0xfcd BALANCE
0xfce SWAP1
0xfcf DUP2
0xfd0 ISZERO
0xfd1 MUL
0xfd2 SWAP1
0xfd3 PUSH1 0x40
0xfd5 MLOAD
0xfd6 PUSH1 0x0
0xfd8 PUSH1 0x40
0xfda MLOAD
0xfdb DUP1
0xfdc DUP4
0xfdd SUB
0xfde DUP2
0xfdf DUP6
0xfe0 DUP9
0xfe1 DUP9
0xfe2 CALL
0xfe3 SWAP4
0xfe4 POP
0xfe5 POP
0xfe6 POP
0xfe7 POP
0xfe8 ISZERO
0xfe9 ISZERO
0xfea PUSH2 0xd07
0xfed JUMPI
---
0xf76: V859 = 0x0
0xf79: REVERT 0x0 0x0
0xf7a: JUMPDEST 
0xf7b: V860 = 0x0
0xf7f: V861 = S[0x0]
0xf81: V862 = 0x100
0xf84: V863 = EXP 0x100 0x0
0xf86: V864 = DIV V861 0x1
0xf87: V865 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9c: V866 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0xf9d: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb2: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0xfb3: V869 = 0x8fc
0xfb6: V870 = ADDRESS
0xfb7: V871 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcc: V872 = AND 0xffffffffffffffffffffffffffffffffffffffff V870
0xfcd: V873 = BALANCE V872
0xfd0: V874 = ISZERO V873
0xfd1: V875 = MUL V874 0x8fc
0xfd3: V876 = 0x40
0xfd5: V877 = M[0x40]
0xfd6: V878 = 0x0
0xfd8: V879 = 0x40
0xfda: V880 = M[0x40]
0xfdd: V881 = SUB V877 V880
0xfe2: V882 = CALL V875 V868 V873 V880 V881 V880 0x0
0xfe8: V883 = ISZERO V882
0xfe9: V884 = ISZERO V883
0xfea: V885 = 0xd07
0xfed: THROWI V884
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfee
[0xfee:0x10f2]
---
Predecessors: [0xf76]
Successors: [0x10f3]
---
0xfee PUSH1 0x0
0xff0 DUP1
0xff1 REVERT
0xff2 JUMPDEST
0xff3 PUSH1 0x1
0xff5 PUSH1 0x0
0xff7 SWAP1
0xff8 SLOAD
0xff9 SWAP1
0xffa PUSH2 0x100
0xffd EXP
0xffe SWAP1
0xfff DIV
0x1000 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1015 AND
0x1016 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102b AND
0x102c PUSH4 0xa9059cbb
0x1031 PUSH1 0x0
0x1033 DUP1
0x1034 SWAP1
0x1035 SLOAD
0x1036 SWAP1
0x1037 PUSH2 0x100
0x103a EXP
0x103b SWAP1
0x103c DIV
0x103d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1052 AND
0x1053 ADDRESS
0x1054 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1069 AND
0x106a BALANCE
0x106b PUSH1 0x0
0x106d PUSH1 0x40
0x106f MLOAD
0x1070 PUSH1 0x20
0x1072 ADD
0x1073 MSTORE
0x1074 PUSH1 0x40
0x1076 MLOAD
0x1077 DUP4
0x1078 PUSH4 0xffffffff
0x107d AND
0x107e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x109c MUL
0x109d DUP2
0x109e MSTORE
0x109f PUSH1 0x4
0x10a1 ADD
0x10a2 DUP1
0x10a3 DUP4
0x10a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b9 AND
0x10ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10cf AND
0x10d0 DUP2
0x10d1 MSTORE
0x10d2 PUSH1 0x20
0x10d4 ADD
0x10d5 DUP3
0x10d6 DUP2
0x10d7 MSTORE
0x10d8 PUSH1 0x20
0x10da ADD
0x10db SWAP3
0x10dc POP
0x10dd POP
0x10de POP
0x10df PUSH1 0x20
0x10e1 PUSH1 0x40
0x10e3 MLOAD
0x10e4 DUP1
0x10e5 DUP4
0x10e6 SUB
0x10e7 DUP2
0x10e8 PUSH1 0x0
0x10ea DUP8
0x10eb DUP1
0x10ec EXTCODESIZE
0x10ed ISZERO
0x10ee ISZERO
0x10ef PUSH2 0xe0c
0x10f2 JUMPI
---
0xfee: V886 = 0x0
0xff1: REVERT 0x0 0x0
0xff2: JUMPDEST 
0xff3: V887 = 0x1
0xff5: V888 = 0x0
0xff8: V889 = S[0x1]
0xffa: V890 = 0x100
0xffd: V891 = EXP 0x100 0x0
0xfff: V892 = DIV V889 0x1
0x1000: V893 = 0xffffffffffffffffffffffffffffffffffffffff
0x1015: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V892
0x1016: V895 = 0xffffffffffffffffffffffffffffffffffffffff
0x102b: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V894
0x102c: V897 = 0xa9059cbb
0x1031: V898 = 0x0
0x1035: V899 = S[0x0]
0x1037: V900 = 0x100
0x103a: V901 = EXP 0x100 0x0
0x103c: V902 = DIV V899 0x1
0x103d: V903 = 0xffffffffffffffffffffffffffffffffffffffff
0x1052: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0x1053: V905 = ADDRESS
0x1054: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0x1069: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0x106a: V908 = BALANCE V907
0x106b: V909 = 0x0
0x106d: V910 = 0x40
0x106f: V911 = M[0x40]
0x1070: V912 = 0x20
0x1072: V913 = ADD 0x20 V911
0x1073: M[V913] = 0x0
0x1074: V914 = 0x40
0x1076: V915 = M[0x40]
0x1078: V916 = 0xffffffff
0x107d: V917 = AND 0xffffffff 0xa9059cbb
0x107e: V918 = 0x100000000000000000000000000000000000000000000000000000000
0x109c: V919 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x109e: M[V915] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x109f: V920 = 0x4
0x10a1: V921 = ADD 0x4 V915
0x10a4: V922 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b9: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0x10ba: V924 = 0xffffffffffffffffffffffffffffffffffffffff
0x10cf: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0x10d1: M[V921] = V925
0x10d2: V926 = 0x20
0x10d4: V927 = ADD 0x20 V921
0x10d7: M[V927] = V908
0x10d8: V928 = 0x20
0x10da: V929 = ADD 0x20 V927
0x10df: V930 = 0x20
0x10e1: V931 = 0x40
0x10e3: V932 = M[0x40]
0x10e6: V933 = SUB V929 V932
0x10e8: V934 = 0x0
0x10ec: V935 = EXTCODESIZE V896
0x10ed: V936 = ISZERO V935
0x10ee: V937 = ISZERO V936
0x10ef: V938 = 0xe0c
0x10f2: THROWI V937
---
Entry stack: []
Stack pops: 0
Stack additions: [V896, 0x0, V932, V933, V932, 0x20, V929, 0xa9059cbb, V896]
Exit stack: []

================================

Block 0x10f3
[0x10f3:0x1103]
---
Predecessors: [0xfee]
Successors: [0x1104]
---
0x10f3 PUSH1 0x0
0x10f5 DUP1
0x10f6 REVERT
0x10f7 JUMPDEST
0x10f8 PUSH2 0x2c6
0x10fb GAS
0x10fc SUB
0x10fd CALL
0x10fe ISZERO
0x10ff ISZERO
0x1100 PUSH2 0xe1d
0x1103 JUMPI
---
0x10f3: V939 = 0x0
0x10f6: REVERT 0x0 0x0
0x10f7: JUMPDEST 
0x10f8: V940 = 0x2c6
0x10fb: V941 = GAS
0x10fc: V942 = SUB V941 0x2c6
0x10fd: V943 = CALL V942 S0 S1 S2 S3 S4 S5
0x10fe: V944 = ISZERO V943
0x10ff: V945 = ISZERO V944
0x1100: V946 = 0xe1d
0x1103: THROWI V945
---
Entry stack: [V896, 0xa9059cbb, V929, 0x20, V932, V933, V932, 0x0, V896]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1104
[0x1104:0x1113]
---
Predecessors: [0x10f3]
Successors: [0x1114]
---
0x1104 PUSH1 0x0
0x1106 DUP1
0x1107 REVERT
0x1108 JUMPDEST
0x1109 POP
0x110a POP
0x110b POP
0x110c PUSH1 0x40
0x110e MLOAD
0x110f DUP1
0x1110 MLOAD
0x1111 SWAP1
0x1112 POP
0x1113 POP
---
0x1104: V947 = 0x0
0x1107: REVERT 0x0 0x0
0x1108: JUMPDEST 
0x110c: V948 = 0x40
0x110e: V949 = M[0x40]
0x1110: V950 = M[V949]
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1114
[0x1114:0x1114]
---
Predecessors: [0x1104]
Successors: [0x1115]
---
0x1114 JUMPDEST
---
0x1114: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1115
[0x1115:0x1130]
---
Predecessors: [0x1114]
Successors: [0x1131]
---
0x1115 JUMPDEST
0x1116 JUMP
0x1117 JUMPDEST
0x1118 PUSH1 0x4
0x111a PUSH1 0x20
0x111c MSTORE
0x111d DUP2
0x111e PUSH1 0x0
0x1120 MSTORE
0x1121 PUSH1 0x40
0x1123 PUSH1 0x0
0x1125 SHA3
0x1126 DUP2
0x1127 DUP2
0x1128 SLOAD
0x1129 DUP2
0x112a LT
0x112b ISZERO
0x112c ISZERO
0x112d PUSH2 0xe47
0x1130 JUMPI
---
0x1115: JUMPDEST 
0x1116: JUMP S0
0x1117: JUMPDEST 
0x1118: V951 = 0x4
0x111a: V952 = 0x20
0x111c: M[0x20] = 0x4
0x111e: V953 = 0x0
0x1120: M[0x0] = S1
0x1121: V954 = 0x40
0x1123: V955 = 0x0
0x1125: V956 = SHA3 0x0 0x40
0x1128: V957 = S[V956]
0x112a: V958 = LT S0 V957
0x112b: V959 = ISZERO V958
0x112c: V960 = ISZERO V959
0x112d: V961 = 0xe47
0x1130: THROWI V960
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, V956, S0, S1]
Exit stack: []

================================

Block 0x1131
[0x1131:0x1142]
---
Predecessors: [0x1115]
Successors: [0x1143]
---
0x1131 INVALID
0x1132 JUMPDEST
0x1133 SWAP1
0x1134 PUSH1 0x0
0x1136 MSTORE
0x1137 PUSH1 0x20
0x1139 PUSH1 0x0
0x113b SHA3
0x113c SWAP1
0x113d PUSH1 0x2
0x113f MUL
0x1140 ADD
0x1141 PUSH1 0x0
---
0x1131: INVALID 
0x1132: JUMPDEST 
0x1134: V962 = 0x0
0x1136: M[0x0] = S1
0x1137: V963 = 0x20
0x1139: V964 = 0x0
0x113b: V965 = SHA3 0x0 0x20
0x113d: V966 = 0x2
0x113f: V967 = MUL 0x2 S0
0x1140: V968 = ADD V967 V965
0x1141: V969 = 0x0
---
Entry stack: [S3, S2, V956, S0]
Stack pops: 0
Stack additions: [0x0, V968]
Exit stack: []

================================

Block 0x1143
[0x1143:0x11ae]
---
Predecessors: [0x1131]
Successors: [0x11af]
---
0x1143 JUMPDEST
0x1144 SWAP2
0x1145 POP
0x1146 SWAP2
0x1147 POP
0x1148 POP
0x1149 DUP1
0x114a PUSH1 0x0
0x114c ADD
0x114d SLOAD
0x114e SWAP1
0x114f DUP1
0x1150 PUSH1 0x1
0x1152 ADD
0x1153 SLOAD
0x1154 SWAP1
0x1155 POP
0x1156 DUP3
0x1157 JUMP
0x1158 JUMPDEST
0x1159 PUSH1 0x0
0x115b DUP1
0x115c SWAP1
0x115d SLOAD
0x115e SWAP1
0x115f PUSH2 0x100
0x1162 EXP
0x1163 SWAP1
0x1164 DIV
0x1165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x117a AND
0x117b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1190 AND
0x1191 CALLER
0x1192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a7 AND
0x11a8 EQ
0x11a9 ISZERO
0x11aa ISZERO
0x11ab PUSH2 0xec8
0x11ae JUMPI
---
0x1143: JUMPDEST 
0x114a: V970 = 0x0
0x114c: V971 = ADD 0x0 V968
0x114d: V972 = S[V971]
0x1150: V973 = 0x1
0x1152: V974 = ADD 0x1 V968
0x1153: V975 = S[V974]
0x1157: JUMP S4
0x1158: JUMPDEST 
0x1159: V976 = 0x0
0x115d: V977 = S[0x0]
0x115f: V978 = 0x100
0x1162: V979 = EXP 0x100 0x0
0x1164: V980 = DIV V977 0x1
0x1165: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0x117a: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V980
0x117b: V983 = 0xffffffffffffffffffffffffffffffffffffffff
0x1190: V984 = AND 0xffffffffffffffffffffffffffffffffffffffff V982
0x1191: V985 = CALLER
0x1192: V986 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a7: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff V985
0x11a8: V988 = EQ V987 V984
0x11a9: V989 = ISZERO V988
0x11aa: V990 = ISZERO V989
0x11ab: V991 = 0xec8
0x11ae: THROWI V990
---
Entry stack: [V968, 0x0]
Stack pops: 7
Stack additions: []
Exit stack: []

================================

Block 0x11af
[0x11af:0x11ea]
---
Predecessors: [0x1143]
Successors: [0x11eb]
---
0x11af PUSH1 0x0
0x11b1 DUP1
0x11b2 REVERT
0x11b3 JUMPDEST
0x11b4 PUSH1 0x0
0x11b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11cb AND
0x11cc DUP2
0x11cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e2 AND
0x11e3 EQ
0x11e4 ISZERO
0x11e5 ISZERO
0x11e6 ISZERO
0x11e7 PUSH2 0xf04
0x11ea JUMPI
---
0x11af: V992 = 0x0
0x11b2: REVERT 0x0 0x0
0x11b3: JUMPDEST 
0x11b4: V993 = 0x0
0x11b6: V994 = 0xffffffffffffffffffffffffffffffffffffffff
0x11cb: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x11cd: V996 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e2: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x11e3: V998 = EQ V997 0x0
0x11e4: V999 = ISZERO V998
0x11e5: V1000 = ISZERO V999
0x11e6: V1001 = ISZERO V1000
0x11e7: V1002 = 0xf04
0x11ea: THROWI V1001
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x11eb
[0x11eb:0x12aa]
---
Predecessors: [0x11af]
Successors: [0x12ab]
---
0x11eb PUSH1 0x0
0x11ed DUP1
0x11ee REVERT
0x11ef JUMPDEST
0x11f0 DUP1
0x11f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1206 AND
0x1207 PUSH1 0x0
0x1209 DUP1
0x120a SWAP1
0x120b SLOAD
0x120c SWAP1
0x120d PUSH2 0x100
0x1210 EXP
0x1211 SWAP1
0x1212 DIV
0x1213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1228 AND
0x1229 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123e AND
0x123f PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1260 PUSH1 0x40
0x1262 MLOAD
0x1263 PUSH1 0x40
0x1265 MLOAD
0x1266 DUP1
0x1267 SWAP2
0x1268 SUB
0x1269 SWAP1
0x126a LOG3
0x126b DUP1
0x126c PUSH1 0x0
0x126e DUP1
0x126f PUSH2 0x100
0x1272 EXP
0x1273 DUP2
0x1274 SLOAD
0x1275 DUP2
0x1276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128b MUL
0x128c NOT
0x128d AND
0x128e SWAP1
0x128f DUP4
0x1290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a5 AND
0x12a6 MUL
0x12a7 OR
0x12a8 SWAP1
0x12a9 SSTORE
0x12aa POP
---
0x11eb: V1003 = 0x0
0x11ee: REVERT 0x0 0x0
0x11ef: JUMPDEST 
0x11f1: V1004 = 0xffffffffffffffffffffffffffffffffffffffff
0x1206: V1005 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1207: V1006 = 0x0
0x120b: V1007 = S[0x0]
0x120d: V1008 = 0x100
0x1210: V1009 = EXP 0x100 0x0
0x1212: V1010 = DIV V1007 0x1
0x1213: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0x1228: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff V1010
0x1229: V1013 = 0xffffffffffffffffffffffffffffffffffffffff
0x123e: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff V1012
0x123f: V1015 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1260: V1016 = 0x40
0x1262: V1017 = M[0x40]
0x1263: V1018 = 0x40
0x1265: V1019 = M[0x40]
0x1268: V1020 = SUB V1017 V1019
0x126a: LOG V1019 V1020 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1014 V1005
0x126c: V1021 = 0x0
0x126f: V1022 = 0x100
0x1272: V1023 = EXP 0x100 0x0
0x1274: V1024 = S[0x0]
0x1276: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0x128b: V1026 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x128c: V1027 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x128d: V1028 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1024
0x1290: V1029 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a5: V1030 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x12a6: V1031 = MUL V1030 0x1
0x12a7: V1032 = OR V1031 V1028
0x12a9: S[0x0] = V1032
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x12ab
[0x12ab:0x12ab]
---
Predecessors: [0x11eb]
Successors: [0x12ac]
---
0x12ab JUMPDEST
---
0x12ab: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x12ac
[0x12ac:0x12bb]
---
Predecessors: [0x12ab]
Successors: [0x12bc]
---
0x12ac JUMPDEST
0x12ad POP
0x12ae JUMP
0x12af JUMPDEST
0x12b0 PUSH1 0x0
0x12b2 DUP1
0x12b3 DUP3
0x12b4 DUP5
0x12b5 DUP2
0x12b6 ISZERO
0x12b7 ISZERO
0x12b8 PUSH2 0xfd2
0x12bb JUMPI
---
0x12ac: JUMPDEST 
0x12ae: JUMP S1
0x12af: JUMPDEST 
0x12b0: V1033 = 0x0
0x12b6: V1034 = ISZERO S0
0x12b7: V1035 = ISZERO V1034
0x12b8: V1036 = 0xfd2
0x12bb: THROWI V1035
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x12bc
[0x12bc:0x12c3]
---
Predecessors: [0x12ac]
Successors: [0x12c4]
---
0x12bc INVALID
0x12bd JUMPDEST
0x12be DIV
0x12bf SWAP1
0x12c0 POP
0x12c1 DUP1
0x12c2 SWAP2
0x12c3 POP
---
0x12bc: INVALID 
0x12bd: JUMPDEST 
0x12be: V1037 = DIV S0 S1
---
Entry stack: [S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V1037, V1037]
Exit stack: []

================================

Block 0x12c4
[0x12c4:0x12dd]
---
Predecessors: [0x12bc]
Successors: [0x12de]
---
0x12c4 JUMPDEST
0x12c5 POP
0x12c6 SWAP3
0x12c7 SWAP2
0x12c8 POP
0x12c9 POP
0x12ca JUMP
0x12cb JUMPDEST
0x12cc PUSH1 0x0
0x12ce DUP1
0x12cf DUP3
0x12d0 DUP5
0x12d1 ADD
0x12d2 SWAP1
0x12d3 POP
0x12d4 DUP4
0x12d5 DUP2
0x12d6 LT
0x12d7 ISZERO
0x12d8 ISZERO
0x12d9 ISZERO
0x12da PUSH2 0xff4
0x12dd JUMPI
---
0x12c4: JUMPDEST 
0x12ca: JUMP S4
0x12cb: JUMPDEST 
0x12cc: V1038 = 0x0
0x12d1: V1039 = ADD S1 S0
0x12d6: V1040 = LT V1039 S1
0x12d7: V1041 = ISZERO V1040
0x12d8: V1042 = ISZERO V1041
0x12d9: V1043 = ISZERO V1042
0x12da: V1044 = 0xff4
0x12dd: THROWI V1043
---
Entry stack: [V1037, V1037]
Stack pops: 9
Stack additions: [V1039, 0x0, S0, S1]
Exit stack: []

================================

Block 0x12de
[0x12de:0x12e2]
---
Predecessors: [0x12c4]
Successors: [0x12e3]
---
0x12de INVALID
0x12df JUMPDEST
0x12e0 DUP1
0x12e1 SWAP2
0x12e2 POP
---
0x12de: INVALID 
0x12df: JUMPDEST 
---
Entry stack: [S3, S2, 0x0, V1039]
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0x12e3
[0x12e3:0x12f6]
---
Predecessors: [0x12de]
Successors: [0x12f7]
---
0x12e3 JUMPDEST
0x12e4 POP
0x12e5 SWAP3
0x12e6 SWAP2
0x12e7 POP
0x12e8 POP
0x12e9 JUMP
0x12ea JUMPDEST
0x12eb PUSH1 0x0
0x12ed DUP3
0x12ee DUP3
0x12ef GT
0x12f0 ISZERO
0x12f1 ISZERO
0x12f2 ISZERO
0x12f3 PUSH2 0x100d
0x12f6 JUMPI
---
0x12e3: JUMPDEST 
0x12e9: JUMP S4
0x12ea: JUMPDEST 
0x12eb: V1045 = 0x0
0x12ef: V1046 = GT S0 S1
0x12f0: V1047 = ISZERO V1046
0x12f1: V1048 = ISZERO V1047
0x12f2: V1049 = ISZERO V1048
0x12f3: V1050 = 0x100d
0x12f6: THROWI V1049
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0x12f7
[0x12f7:0x12fd]
---
Predecessors: [0x12e3]
Successors: [0x12fe]
---
0x12f7 INVALID
0x12f8 JUMPDEST
0x12f9 DUP2
0x12fa DUP4
0x12fb SUB
0x12fc SWAP1
0x12fd POP
---
0x12f7: INVALID 
0x12f8: JUMPDEST 
0x12fb: V1051 = SUB S2 S1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1051, S1, S2]
Exit stack: []

================================

Block 0x12fe
[0x12fe:0x1314]
---
Predecessors: [0x12f7]
Successors: [0x1315]
---
0x12fe JUMPDEST
0x12ff SWAP3
0x1300 SWAP2
0x1301 POP
0x1302 POP
0x1303 JUMP
0x1304 JUMPDEST
0x1305 PUSH2 0x140
0x1308 PUSH1 0x40
0x130a MLOAD
0x130b SWAP1
0x130c DUP2
0x130d ADD
0x130e PUSH1 0x40
0x1310 MSTORE
0x1311 DUP1
0x1312 PUSH1 0xa
0x1314 SWAP1
---
0x12fe: JUMPDEST 
0x1303: JUMP S3
0x1304: JUMPDEST 
0x1305: V1052 = 0x140
0x1308: V1053 = 0x40
0x130a: V1054 = M[0x40]
0x130d: V1055 = ADD V1054 0x140
0x130e: V1056 = 0x40
0x1310: M[0x40] = V1055
0x1312: V1057 = 0xa
---
Entry stack: [S2, S1, V1051]
Stack pops: 7
Stack additions: [V1054, 0xa, V1054]
Exit stack: []

================================

Block 0x1315
[0x1315:0x133d]
---
Predecessors: [0x12fe]
Successors: [0x133e]
---
0x1315 JUMPDEST
0x1316 PUSH1 0x0
0x1318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132d AND
0x132e DUP2
0x132f MSTORE
0x1330 PUSH1 0x20
0x1332 ADD
0x1333 SWAP1
0x1334 PUSH1 0x1
0x1336 SWAP1
0x1337 SUB
0x1338 SWAP1
0x1339 DUP2
0x133a PUSH2 0x102a
0x133d JUMPI
---
0x1315: JUMPDEST 
0x1316: V1058 = 0x0
0x1318: V1059 = 0xffffffffffffffffffffffffffffffffffffffff
0x132d: V1060 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x132f: M[V1054] = 0x0
0x1330: V1061 = 0x20
0x1332: V1062 = ADD 0x20 V1054
0x1334: V1063 = 0x1
0x1337: V1064 = SUB 0xa 0x1
0x133a: V1065 = 0x102a
0x133d: THROWI 0x9
---
Entry stack: [V1054, 0xa, V1054]
Stack pops: 2
Stack additions: [0x9, V1062]
Exit stack: [V1054, 0x9, V1062]

================================

Block 0x133e
[0x133e:0x1350]
---
Predecessors: [0x1315]
Successors: [0x1351]
---
0x133e SWAP1
0x133f POP
0x1340 POP
0x1341 SWAP1
0x1342 JUMP
0x1343 JUMPDEST
0x1344 DUP2
0x1345 SLOAD
0x1346 DUP2
0x1347 DUP4
0x1348 SSTORE
0x1349 DUP2
0x134a DUP2
0x134b ISZERO
0x134c GT
0x134d PUSH2 0x107f
0x1350 JUMPI
---
0x1342: JUMP S3
0x1343: JUMPDEST 
0x1345: V1066 = S[S1]
0x1348: S[S1] = S0
0x134b: V1067 = ISZERO V1066
0x134c: V1068 = GT V1067 S0
0x134d: V1069 = 0x107f
0x1350: THROWI V1068
---
Entry stack: [V1054, 0x9, V1062]
Stack pops: 7
Stack additions: [V1066, S0, S1]
Exit stack: []

================================

Block 0x1351
[0x1351:0x1369]
---
Predecessors: [0x133e]
Successors: [0x136a]
---
0x1351 DUP2
0x1352 DUP4
0x1353 PUSH1 0x0
0x1355 MSTORE
0x1356 PUSH1 0x20
0x1358 PUSH1 0x0
0x135a SHA3
0x135b SWAP2
0x135c DUP3
0x135d ADD
0x135e SWAP2
0x135f ADD
0x1360 PUSH2 0x107e
0x1363 SWAP2
0x1364 SWAP1
0x1365 PUSH2 0x10b6
0x1368 JUMP
0x1369 JUMPDEST
---
0x1353: V1070 = 0x0
0x1355: M[0x0] = S2
0x1356: V1071 = 0x20
0x1358: V1072 = 0x0
0x135a: V1073 = SHA3 0x0 0x20
0x135d: V1074 = ADD V1073 V1066
0x135f: V1075 = ADD V1073 S1
0x1360: V1076 = 0x107e
0x1365: V1077 = 0x10b6
0x1368: THROW 
0x1369: JUMPDEST 
---
Entry stack: [S2, S1, V1066]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0x136a
[0x136a:0x137c]
---
Predecessors: [0x1351]
Successors: [0x137d]
---
0x136a JUMPDEST
0x136b POP
0x136c POP
0x136d POP
0x136e JUMP
0x136f JUMPDEST
0x1370 DUP2
0x1371 SLOAD
0x1372 DUP2
0x1373 DUP4
0x1374 SSTORE
0x1375 DUP2
0x1376 DUP2
0x1377 ISZERO
0x1378 GT
0x1379 PUSH2 0x10b1
0x137c JUMPI
---
0x136a: JUMPDEST 
0x136e: JUMP S3
0x136f: JUMPDEST 
0x1371: V1078 = S[S1]
0x1374: S[S1] = S0
0x1377: V1079 = ISZERO V1078
0x1378: V1080 = GT V1079 S0
0x1379: V1081 = 0x10b1
0x137c: THROWI V1080
---
Entry stack: []
Stack pops: 8
Stack additions: [V1078, S0, S1]
Exit stack: []

================================

Block 0x137d
[0x137d:0x139b]
---
Predecessors: [0x136a]
Successors: [0x139c]
---
0x137d PUSH1 0x2
0x137f MUL
0x1380 DUP2
0x1381 PUSH1 0x2
0x1383 MUL
0x1384 DUP4
0x1385 PUSH1 0x0
0x1387 MSTORE
0x1388 PUSH1 0x20
0x138a PUSH1 0x0
0x138c SHA3
0x138d SWAP2
0x138e DUP3
0x138f ADD
0x1390 SWAP2
0x1391 ADD
0x1392 PUSH2 0x10b0
0x1395 SWAP2
0x1396 SWAP1
0x1397 PUSH2 0x10db
0x139a JUMP
0x139b JUMPDEST
---
0x137d: V1082 = 0x2
0x137f: V1083 = MUL 0x2 V1078
0x1381: V1084 = 0x2
0x1383: V1085 = MUL 0x2 S1
0x1385: V1086 = 0x0
0x1387: M[0x0] = S2
0x1388: V1087 = 0x20
0x138a: V1088 = 0x0
0x138c: V1089 = SHA3 0x0 0x20
0x138f: V1090 = ADD V1089 V1083
0x1391: V1091 = ADD V1089 V1085
0x1392: V1092 = 0x10b0
0x1397: V1093 = 0x10db
0x139a: THROW 
0x139b: JUMPDEST 
---
Entry stack: [S2, S1, V1078]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0x139c
[0x139c:0x13a6]
---
Predecessors: [0x137d]
Successors: [0x13a7]
---
0x139c JUMPDEST
0x139d POP
0x139e POP
0x139f POP
0x13a0 JUMP
0x13a1 JUMPDEST
0x13a2 PUSH2 0x10d8
0x13a5 SWAP2
0x13a6 SWAP1
---
0x139c: JUMPDEST 
0x13a0: JUMP S3
0x13a1: JUMPDEST 
0x13a2: V1094 = 0x10d8
---
Entry stack: []
Stack pops: 8
Stack additions: [S0, S1, 0x10d8]
Exit stack: []

================================

Block 0x13a7
[0x13a7:0x13af]
---
Predecessors: [0x139c]
Successors: [0x13b0]
---
0x13a7 JUMPDEST
0x13a8 DUP1
0x13a9 DUP3
0x13aa GT
0x13ab ISZERO
0x13ac PUSH2 0x10d4
0x13af JUMPI
---
0x13a7: JUMPDEST 
0x13aa: V1095 = GT S1 S0
0x13ab: V1096 = ISZERO V1095
0x13ac: V1097 = 0x10d4
0x13af: THROWI V1096
---
Entry stack: [0x10d8, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0x10d8, S1, S0]

================================

Block 0x13b0
[0x13b0:0x13cb]
---
Predecessors: [0x13a7]
Successors: [0x13cc]
---
0x13b0 PUSH1 0x0
0x13b2 DUP2
0x13b3 PUSH1 0x0
0x13b5 SWAP1
0x13b6 SSTORE
0x13b7 POP
0x13b8 PUSH1 0x1
0x13ba ADD
0x13bb PUSH2 0x10bc
0x13be JUMP
0x13bf JUMPDEST
0x13c0 POP
0x13c1 SWAP1
0x13c2 JUMP
0x13c3 JUMPDEST
0x13c4 SWAP1
0x13c5 JUMP
0x13c6 JUMPDEST
0x13c7 PUSH2 0x1107
0x13ca SWAP2
0x13cb SWAP1
---
0x13b0: V1098 = 0x0
0x13b3: V1099 = 0x0
0x13b6: S[S0] = 0x0
0x13b8: V1100 = 0x1
0x13ba: V1101 = ADD 0x1 S0
0x13bb: V1102 = 0x10bc
0x13be: THROW 
0x13bf: JUMPDEST 
0x13c2: JUMP S2
0x13c3: JUMPDEST 
0x13c5: JUMP S1
0x13c6: JUMPDEST 
0x13c7: V1103 = 0x1107
---
Entry stack: [0x10d8, S1, S0]
Stack pops: 1
Stack additions: [S0, S1, 0x1107]
Exit stack: []

================================

Block 0x13cc
[0x13cc:0x13d4]
---
Predecessors: [0x13b0]
Successors: [0x13d5]
---
0x13cc JUMPDEST
0x13cd DUP1
0x13ce DUP3
0x13cf GT
0x13d0 ISZERO
0x13d1 PUSH2 0x1103
0x13d4 JUMPI
---
0x13cc: JUMPDEST 
0x13cf: V1104 = GT S1 S0
0x13d0: V1105 = ISZERO V1104
0x13d1: V1106 = 0x1103
0x13d4: THROWI V1105
---
Entry stack: [0x1107, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0x1107, S1, S0]

================================

Block 0x13d5
[0x13d5:0x1416]
---
Predecessors: [0x13cc]
Successors: [0x1417]
---
0x13d5 PUSH1 0x0
0x13d7 DUP1
0x13d8 DUP3
0x13d9 ADD
0x13da PUSH1 0x0
0x13dc SWAP1
0x13dd SSTORE
0x13de PUSH1 0x1
0x13e0 DUP3
0x13e1 ADD
0x13e2 PUSH1 0x0
0x13e4 SWAP1
0x13e5 SSTORE
0x13e6 POP
0x13e7 PUSH1 0x2
0x13e9 ADD
0x13ea PUSH2 0x10e1
0x13ed JUMP
0x13ee JUMPDEST
0x13ef POP
0x13f0 SWAP1
0x13f1 JUMP
0x13f2 JUMPDEST
0x13f3 SWAP1
0x13f4 JUMP
0x13f5 STOP
0x13f6 LOG1
0x13f7 PUSH6 0x627a7a723058
0x13fe SHA3
0x13ff COINBASE
0x1400 MISSING 0xee
0x1401 MISSING 0xb3
0x1402 MISSING 0xea
0x1403 PUSH19 0x2cc70c966fdf1481b0edc1d1e63213367d5b54
---
0x13d5: V1107 = 0x0
0x13d9: V1108 = ADD S0 0x0
0x13da: V1109 = 0x0
0x13dd: S[V1108] = 0x0
0x13de: V1110 = 0x1
0x13e1: V1111 = ADD S0 0x1
0x13e2: V1112 = 0x0
0x13e5: S[V1111] = 0x0
0x13e7: V1113 = 0x2
0x13e9: V1114 = ADD 0x2 S0
0x13ea: V1115 = 0x10e1
0x13ed: THROW 
0x13ee: JUMPDEST 
0x13f1: JUMP S2
0x13f2: JUMPDEST 
0x13f4: JUMP S1
0x13f5: STOP 
0x13f6: LOG S0 S1 S2
0x13f7: V1116 = 0x627a7a723058
0x13fe: V1117 = SHA3 0x627a7a723058 S3
0x13ff: V1118 = COINBASE
0x1400: MISSING 0xee
0x1401: MISSING 0xb3
0x1402: MISSING 0xea
0x1403: V1119 = 0x2cc70c966fdf1481b0edc1d1e63213367d5b54
---
Entry stack: [0x1107, S1, S0]
Stack pops: 8
Stack additions: [0x2cc70c966fdf1481b0edc1d1e63213367d5b54]
Exit stack: []

================================

Block 0x1417
[0x1417:0x1420]
---
Predecessors: [0x13d5]
Successors: []
---
0x1417 JUMPDEST
0x1418 COINBASE
0x1419 SHA3
0x141a MISSING 0x46
0x141b MISSING 0xd7
0x141c PC
0x141d MISSING 0xda
0x141e CALLVALUE
0x141f STOP
0x1420 MISSING 0x29
---
0x1417: JUMPDEST 
0x1418: V1120 = COINBASE
0x1419: V1121 = SHA3 V1120 0x2cc70c966fdf1481b0edc1d1e63213367d5b54
0x141a: MISSING 0x46
0x141b: MISSING 0xd7
0x141c: V1122 = PC
0x141d: MISSING 0xda
0x141e: V1123 = CALLVALUE
0x141f: STOP 
0x1420: MISSING 0x29
---
Entry stack: [0x2cc70c966fdf1481b0edc1d1e63213367d5b54]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x49
Exit block: 0x5c
Body: 0x49, 0x50, 0x54, 0x5c, 0xd7

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0x9e
Exit block: 0xd5
Body: 0x9e, 0xa5, 0xa9, 0xd5, 0xfc, 0x153, 0x157, 0x18f, 0x193, 0x24f, 0x250

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

