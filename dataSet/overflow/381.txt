Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x72a503be
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x72a503be
0x3c: V13 = EQ 0x72a503be V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x125]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x125
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x125
0x4b: JUMPI 0x125 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x17c]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0x17c
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0x17c
0x56: JUMPI 0x17c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x122]
---
Predecessors: [0x5c]
Successors: [0x1bf]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x123
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATASIZE
0x71 SUB
0x72 DUP2
0x73 ADD
0x74 SWAP1
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 SWAP3
0x94 SWAP2
0x95 SWAP1
0x96 DUP1
0x97 CALLDATALOAD
0x98 SWAP1
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d DUP3
0x9e ADD
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 SWAP1
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP1
0xa6 DUP1
0xa7 DUP1
0xa8 PUSH1 0x20
0xaa MUL
0xab PUSH1 0x20
0xad ADD
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 SWAP1
0xb2 DUP2
0xb3 ADD
0xb4 PUSH1 0x40
0xb6 MSTORE
0xb7 DUP1
0xb8 SWAP4
0xb9 SWAP3
0xba SWAP2
0xbb SWAP1
0xbc DUP2
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 ADD
0xc2 DUP4
0xc3 DUP4
0xc4 PUSH1 0x20
0xc6 MUL
0xc7 DUP1
0xc8 DUP3
0xc9 DUP5
0xca CALLDATACOPY
0xcb DUP3
0xcc ADD
0xcd SWAP2
0xce POP
0xcf POP
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 SWAP2
0xd5 SWAP3
0xd6 SWAP2
0xd7 SWAP3
0xd8 SWAP1
0xd9 DUP1
0xda CALLDATALOAD
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 DUP3
0xe1 ADD
0xe2 DUP1
0xe3 CALLDATALOAD
0xe4 SWAP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 DUP1
0xea DUP1
0xeb PUSH1 0x20
0xed MUL
0xee PUSH1 0x20
0xf0 ADD
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 SWAP1
0xf5 DUP2
0xf6 ADD
0xf7 PUSH1 0x40
0xf9 MSTORE
0xfa DUP1
0xfb SWAP4
0xfc SWAP3
0xfd SWAP2
0xfe SWAP1
0xff DUP2
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 DUP4
0x106 DUP4
0x107 PUSH1 0x20
0x109 MUL
0x10a DUP1
0x10b DUP3
0x10c DUP5
0x10d CALLDATACOPY
0x10e DUP3
0x10f ADD
0x110 SWAP2
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 POP
0x117 SWAP2
0x118 SWAP3
0x119 SWAP2
0x11a SWAP3
0x11b SWAP1
0x11c POP
0x11d POP
0x11e POP
0x11f PUSH2 0x1bf
0x122 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x123
0x6d: V27 = 0x4
0x70: V28 = CALLDATASIZE
0x71: V29 = SUB V28 0x4
0x73: V30 = ADD 0x4 V29
0x77: V31 = CALLDATALOAD 0x4
0x78: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x8f: V34 = 0x20
0x91: V35 = ADD 0x20 0x4
0x97: V36 = CALLDATALOAD 0x24
0x99: V37 = 0x20
0x9b: V38 = ADD 0x20 0x24
0x9e: V39 = ADD 0x4 V36
0xa0: V40 = CALLDATALOAD V39
0xa2: V41 = 0x20
0xa4: V42 = ADD 0x20 V39
0xa8: V43 = 0x20
0xaa: V44 = MUL 0x20 V40
0xab: V45 = 0x20
0xad: V46 = ADD 0x20 V44
0xae: V47 = 0x40
0xb0: V48 = M[0x40]
0xb3: V49 = ADD V48 V46
0xb4: V50 = 0x40
0xb6: M[0x40] = V49
0xbe: M[V48] = V40
0xbf: V51 = 0x20
0xc1: V52 = ADD 0x20 V48
0xc4: V53 = 0x20
0xc6: V54 = MUL 0x20 V40
0xca: CALLDATACOPY V52 V42 V54
0xcc: V55 = ADD V52 V54
0xda: V56 = CALLDATALOAD 0x44
0xdc: V57 = 0x20
0xde: V58 = ADD 0x20 0x44
0xe1: V59 = ADD 0x4 V56
0xe3: V60 = CALLDATALOAD V59
0xe5: V61 = 0x20
0xe7: V62 = ADD 0x20 V59
0xeb: V63 = 0x20
0xed: V64 = MUL 0x20 V60
0xee: V65 = 0x20
0xf0: V66 = ADD 0x20 V64
0xf1: V67 = 0x40
0xf3: V68 = M[0x40]
0xf6: V69 = ADD V68 V66
0xf7: V70 = 0x40
0xf9: M[0x40] = V69
0x101: M[V68] = V60
0x102: V71 = 0x20
0x104: V72 = ADD 0x20 V68
0x107: V73 = 0x20
0x109: V74 = MUL 0x20 V60
0x10d: CALLDATACOPY V72 V62 V74
0x10f: V75 = ADD V72 V74
0x11f: V76 = 0x1bf
0x122: JUMP 0x1bf
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x123, V33, V48, V68]
Exit stack: [V11, 0x123, V33, V48, V68]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: [0x394]
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x41]
Successors: [0x12d, 0x131]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 DUP1
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x125: JUMPDEST 
0x126: V77 = CALLVALUE
0x128: V78 = ISZERO V77
0x129: V79 = 0x131
0x12c: JUMPI 0x131 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x125]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V80 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x131
[0x131:0x139]
---
Predecessors: [0x125]
Successors: [0x39b]
---
0x131 JUMPDEST
0x132 POP
0x133 PUSH2 0x13a
0x136 PUSH2 0x39b
0x139 JUMP
---
0x131: JUMPDEST 
0x133: V81 = 0x13a
0x136: V82 = 0x39b
0x139: JUMP 0x39b
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x13a]
Exit stack: [V11, 0x13a]

================================

Block 0x13a
[0x13a:0x17b]
---
Predecessors: [0x39b]
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP3
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP2
0x172 POP
0x173 POP
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 SWAP2
0x179 SUB
0x17a SWAP1
0x17b RETURN
---
0x13a: JUMPDEST 
0x13b: V83 = 0x40
0x13d: V84 = M[0x40]
0x140: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x156: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x16d: M[V84] = V88
0x16e: V89 = 0x20
0x170: V90 = ADD 0x20 V84
0x174: V91 = 0x40
0x176: V92 = M[0x40]
0x179: V93 = SUB V90 V92
0x17b: RETURN V92 V93
---
Entry stack: [V11, 0x13a, V231]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x13a]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x4c]
Successors: [0x184, 0x188]
---
0x17c JUMPDEST
0x17d CALLVALUE
0x17e DUP1
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17c: JUMPDEST 
0x17d: V94 = CALLVALUE
0x17f: V95 = ISZERO V94
0x180: V96 = 0x188
0x183: JUMPI 0x188 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17c]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V97 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V11, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V94]

================================

Block 0x188
[0x188:0x1bc]
---
Predecessors: [0x17c]
Successors: [0x3c0]
---
0x188 JUMPDEST
0x189 POP
0x18a PUSH2 0x1bd
0x18d PUSH1 0x4
0x18f DUP1
0x190 CALLDATASIZE
0x191 SUB
0x192 DUP2
0x193 ADD
0x194 SWAP1
0x195 DUP1
0x196 DUP1
0x197 CALLDATALOAD
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad AND
0x1ae SWAP1
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP1
0x1b3 SWAP3
0x1b4 SWAP2
0x1b5 SWAP1
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 PUSH2 0x3c0
0x1bc JUMP
---
0x188: JUMPDEST 
0x18a: V98 = 0x1bd
0x18d: V99 = 0x4
0x190: V100 = CALLDATASIZE
0x191: V101 = SUB V100 0x4
0x193: V102 = ADD 0x4 V101
0x197: V103 = CALLDATALOAD 0x4
0x198: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1af: V106 = 0x20
0x1b1: V107 = ADD 0x20 0x4
0x1b9: V108 = 0x3c0
0x1bc: JUMP 0x3c0
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: [0x1bd, V105]
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x1bd
[0x1bd:0x1be]
---
Predecessors: [0x457]
Successors: []
---
0x1bd JUMPDEST
0x1be STOP
---
0x1bd: JUMPDEST 
0x1be: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x218]
---
Predecessors: [0x68]
Successors: [0x219, 0x21d]
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 SWAP1
0x1c7 SLOAD
0x1c8 SWAP1
0x1c9 PUSH2 0x100
0x1cc EXP
0x1cd SWAP1
0x1ce DIV
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb CALLER
0x1fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x211 AND
0x212 EQ
0x213 ISZERO
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V109 = 0x0
0x1c3: V110 = 0x0
0x1c7: V111 = S[0x0]
0x1c9: V112 = 0x100
0x1cc: V113 = EXP 0x100 0x0
0x1ce: V114 = DIV V111 0x1
0x1cf: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1e5: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1fb: V119 = CALLER
0x1fc: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x211: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x212: V122 = EQ V121 V118
0x213: V123 = ISZERO V122
0x214: V124 = ISZERO V123
0x215: V125 = 0x21d
0x218: JUMPI 0x21d V124
---
Entry stack: [V11, 0x123, V33, V48, V68]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x1bf]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V126 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x21d
[0x21d:0x228]
---
Predecessors: [0x1bf]
Successors: [0x229, 0x22d]
---
0x21d JUMPDEST
0x21e DUP3
0x21f MLOAD
0x220 DUP5
0x221 MLOAD
0x222 EQ
0x223 ISZERO
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x21d: JUMPDEST 
0x21f: V127 = M[V68]
0x221: V128 = M[V48]
0x222: V129 = EQ V128 V127
0x223: V130 = ISZERO V129
0x224: V131 = ISZERO V130
0x225: V132 = 0x22d
0x228: JUMPI 0x22d V131
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x21d]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V133 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x22d
[0x22d:0x264]
---
Predecessors: [0x21d]
Successors: [0x265, 0x269]
---
0x22d JUMPDEST
0x22e PUSH1 0x0
0x230 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x245 AND
0x246 DUP6
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d EQ
0x25e ISZERO
0x25f ISZERO
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x22d: JUMPDEST 
0x22e: V134 = 0x0
0x230: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x245: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x247: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x25d: V139 = EQ V138 0x0
0x25e: V140 = ISZERO V139
0x25f: V141 = ISZERO V140
0x260: V142 = ISZERO V141
0x261: V143 = 0x269
0x264: JUMPI 0x269 V142
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x22d]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V144 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x22d]
Successors: [0x271]
---
0x269 JUMPDEST
0x26a DUP5
0x26b SWAP2
0x26c POP
0x26d PUSH1 0x0
0x26f SWAP1
0x270 POP
---
0x269: JUMPDEST 
0x26d: V145 = 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S4, 0x0]
Exit stack: [V11, 0x123, V33, V48, V68, V33, 0x0]

================================

Block 0x271
[0x271:0x27a]
---
Predecessors: [0x269, 0x375]
Successors: [0x27b, 0x394]
---
0x271 JUMPDEST
0x272 DUP4
0x273 MLOAD
0x274 DUP2
0x275 LT
0x276 ISZERO
0x277 PUSH2 0x394
0x27a JUMPI
---
0x271: JUMPDEST 
0x273: V146 = M[V48]
0x275: V147 = LT S0 V146
0x276: V148 = ISZERO V147
0x277: V149 = 0x394
0x27a: JUMPI 0x394 V148
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S0]

================================

Block 0x27b
[0x27b:0x2a2]
---
Predecessors: [0x271]
Successors: [0x2a3, 0x2a4]
---
0x27b DUP2
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 AND
0x292 PUSH4 0xa9059cbb
0x297 DUP6
0x298 DUP4
0x299 DUP2
0x29a MLOAD
0x29b DUP2
0x29c LT
0x29d ISZERO
0x29e ISZERO
0x29f PUSH2 0x2a4
0x2a2 JUMPI
---
0x27c: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x291: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x292: V152 = 0xa9059cbb
0x29a: V153 = M[V48]
0x29c: V154 = LT S0 V153
0x29d: V155 = ISZERO V154
0x29e: V156 = ISZERO V155
0x29f: V157 = 0x2a4
0x2a2: JUMPI 0x2a4 V156
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V151, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S0, V151, 0xa9059cbb, V48, S0]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x27b]
Successors: []
---
0x2a3 INVALID
---
0x2a3: INVALID 
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V48, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V48, S0]

================================

Block 0x2a4
[0x2a4:0x2ba]
---
Predecessors: [0x27b]
Successors: [0x2bb, 0x2bc]
---
0x2a4 JUMPDEST
0x2a5 SWAP1
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 SWAP1
0x2aa PUSH1 0x20
0x2ac MUL
0x2ad ADD
0x2ae MLOAD
0x2af DUP6
0x2b0 DUP5
0x2b1 DUP2
0x2b2 MLOAD
0x2b3 DUP2
0x2b4 LT
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x2bc
0x2ba JUMPI
---
0x2a4: JUMPDEST 
0x2a6: V158 = 0x20
0x2a8: V159 = ADD 0x20 V48
0x2aa: V160 = 0x20
0x2ac: V161 = MUL 0x20 S0
0x2ad: V162 = ADD V161 V159
0x2ae: V163 = M[V162]
0x2b2: V164 = M[V68]
0x2b4: V165 = LT S4 V164
0x2b5: V166 = ISZERO V165
0x2b6: V167 = ISZERO V166
0x2b7: V168 = 0x2bc
0x2ba: JUMPI 0x2bc V167
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V48, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V163, S6, S4]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V163, V68, S4]

================================

Block 0x2bb
[0x2bb:0x2bb]
---
Predecessors: [0x2a4]
Successors: []
---
0x2bb INVALID
---
0x2bb: INVALID 
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V163, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V163, V68, S0]

================================

Block 0x2bc
[0x2bc:0x346]
---
Predecessors: [0x2a4]
Successors: [0x347, 0x34b]
---
0x2bc JUMPDEST
0x2bd SWAP1
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 SWAP1
0x2c2 PUSH1 0x20
0x2c4 MUL
0x2c5 ADD
0x2c6 MLOAD
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP4
0x2cb PUSH4 0xffffffff
0x2d0 AND
0x2d1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2ef MUL
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x4
0x2f4 ADD
0x2f5 DUP1
0x2f6 DUP4
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 AND
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x20
0x327 ADD
0x328 DUP3
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e SWAP3
0x32f POP
0x330 POP
0x331 POP
0x332 PUSH1 0x20
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 DUP4
0x339 SUB
0x33a DUP2
0x33b PUSH1 0x0
0x33d DUP8
0x33e DUP1
0x33f EXTCODESIZE
0x340 ISZERO
0x341 DUP1
0x342 ISZERO
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x2bc: JUMPDEST 
0x2be: V169 = 0x20
0x2c0: V170 = ADD 0x20 V68
0x2c2: V171 = 0x20
0x2c4: V172 = MUL 0x20 S0
0x2c5: V173 = ADD V172 V170
0x2c6: V174 = M[V173]
0x2c7: V175 = 0x40
0x2c9: V176 = M[0x40]
0x2cb: V177 = 0xffffffff
0x2d0: V178 = AND 0xffffffff 0xa9059cbb
0x2d1: V179 = 0x100000000000000000000000000000000000000000000000000000000
0x2ef: V180 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2f1: M[V176] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2f2: V181 = 0x4
0x2f4: V182 = ADD 0x4 V176
0x2f7: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x30d: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x324: M[V182] = V186
0x325: V187 = 0x20
0x327: V188 = ADD 0x20 V182
0x32a: M[V188] = V174
0x32b: V189 = 0x20
0x32d: V190 = ADD 0x20 V188
0x332: V191 = 0x20
0x334: V192 = 0x40
0x336: V193 = M[0x40]
0x339: V194 = SUB V190 V193
0x33b: V195 = 0x0
0x33f: V196 = EXTCODESIZE V151
0x340: V197 = ISZERO V196
0x342: V198 = ISZERO V197
0x343: V199 = 0x34b
0x346: JUMPI 0x34b V198
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V163, V68, S0]
Stack pops: 5
Stack additions: [S4, S3, V190, 0x20, V193, V194, V193, 0x0, S4, V197]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V190, 0x20, V193, V194, V193, 0x0, V151, V197]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x2bc]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V200 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, 0x20, V193, V194, V193, 0x0, V151, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, 0x20, V193, V194, V193, 0x0, V151, V197]

================================

Block 0x34b
[0x34b:0x355]
---
Predecessors: [0x2bc]
Successors: [0x356, 0x35f]
---
0x34b JUMPDEST
0x34c POP
0x34d GAS
0x34e CALL
0x34f ISZERO
0x350 DUP1
0x351 ISZERO
0x352 PUSH2 0x35f
0x355 JUMPI
---
0x34b: JUMPDEST 
0x34d: V201 = GAS
0x34e: V202 = CALL V201 V151 0x0 V193 V194 V193 0x20
0x34f: V203 = ISZERO V202
0x351: V204 = ISZERO V203
0x352: V205 = 0x35f
0x355: JUMPI 0x35f V204
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, 0x20, V193, V194, V193, 0x0, V151, V197]
Stack pops: 7
Stack additions: [V203]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, V203]

================================

Block 0x356
[0x356:0x35e]
---
Predecessors: [0x34b]
Successors: []
---
0x356 RETURNDATASIZE
0x357 PUSH1 0x0
0x359 DUP1
0x35a RETURNDATACOPY
0x35b RETURNDATASIZE
0x35c PUSH1 0x0
0x35e REVERT
---
0x356: V206 = RETURNDATASIZE
0x357: V207 = 0x0
0x35a: RETURNDATACOPY 0x0 0x0 V206
0x35b: V208 = RETURNDATASIZE
0x35c: V209 = 0x0
0x35e: REVERT 0x0 V208
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V190, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V190, V203]

================================

Block 0x35f
[0x35f:0x370]
---
Predecessors: [0x34b]
Successors: [0x371, 0x375]
---
0x35f JUMPDEST
0x360 POP
0x361 POP
0x362 POP
0x363 POP
0x364 PUSH1 0x40
0x366 MLOAD
0x367 RETURNDATASIZE
0x368 PUSH1 0x20
0x36a DUP2
0x36b LT
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x35f: JUMPDEST 
0x364: V210 = 0x40
0x366: V211 = M[0x40]
0x367: V212 = RETURNDATASIZE
0x368: V213 = 0x20
0x36b: V214 = LT V212 0x20
0x36c: V215 = ISZERO V214
0x36d: V216 = 0x375
0x370: JUMPI 0x375 V215
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V190, V203]
Stack pops: 4
Stack additions: [V211, V212]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S4, V211, V212]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x35f]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V217 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S2, V211, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S2, V211, V212]

================================

Block 0x375
[0x375:0x393]
---
Predecessors: [0x35f]
Successors: [0x271]
---
0x375 JUMPDEST
0x376 DUP2
0x377 ADD
0x378 SWAP1
0x379 DUP1
0x37a DUP1
0x37b MLOAD
0x37c SWAP1
0x37d PUSH1 0x20
0x37f ADD
0x380 SWAP1
0x381 SWAP3
0x382 SWAP2
0x383 SWAP1
0x384 POP
0x385 POP
0x386 POP
0x387 POP
0x388 DUP1
0x389 DUP1
0x38a PUSH1 0x1
0x38c ADD
0x38d SWAP2
0x38e POP
0x38f POP
0x390 PUSH2 0x271
0x393 JUMP
---
0x375: JUMPDEST 
0x377: V218 = ADD V211 V212
0x37b: V219 = M[V211]
0x37d: V220 = 0x20
0x37f: V221 = ADD 0x20 V211
0x38a: V222 = 0x1
0x38c: V223 = ADD 0x1 S2
0x390: V224 = 0x271
0x393: JUMP 0x271
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S2, V211, V212]
Stack pops: 3
Stack additions: [V223]
Exit stack: [V11, 0x123, V33, V48, V68, V33, V223]

================================

Block 0x394
[0x394:0x39a]
---
Predecessors: [0x271]
Successors: [0x123]
---
0x394 JUMPDEST
0x395 POP
0x396 POP
0x397 POP
0x398 POP
0x399 POP
0x39a JUMP
---
0x394: JUMPDEST 
0x39a: JUMP 0x123
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x39b
[0x39b:0x3bf]
---
Predecessors: [0x131]
Successors: [0x13a]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e DUP1
0x39f SWAP1
0x3a0 SLOAD
0x3a1 SWAP1
0x3a2 PUSH2 0x100
0x3a5 EXP
0x3a6 SWAP1
0x3a7 DIV
0x3a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bd AND
0x3be DUP2
0x3bf JUMP
---
0x39b: JUMPDEST 
0x39c: V225 = 0x0
0x3a0: V226 = S[0x0]
0x3a2: V227 = 0x100
0x3a5: V228 = EXP 0x100 0x0
0x3a7: V229 = DIV V226 0x1
0x3a8: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x3bf: JUMP 0x13a
---
Entry stack: [V11, 0x13a]
Stack pops: 1
Stack additions: [S0, V231]
Exit stack: [V11, 0x13a, V231]

================================

Block 0x3c0
[0x3c0:0x416]
---
Predecessors: [0x188]
Successors: [0x417, 0x41b]
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 SWAP1
0x3c5 SLOAD
0x3c6 SWAP1
0x3c7 PUSH2 0x100
0x3ca EXP
0x3cb SWAP1
0x3cc DIV
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 CALLER
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 EQ
0x411 ISZERO
0x412 ISZERO
0x413 PUSH2 0x41b
0x416 JUMPI
---
0x3c0: JUMPDEST 
0x3c1: V232 = 0x0
0x3c5: V233 = S[0x0]
0x3c7: V234 = 0x100
0x3ca: V235 = EXP 0x100 0x0
0x3cc: V236 = DIV V233 0x1
0x3cd: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x3e3: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x3f9: V241 = CALLER
0x3fa: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x410: V244 = EQ V243 V240
0x411: V245 = ISZERO V244
0x412: V246 = ISZERO V245
0x413: V247 = 0x41b
0x416: JUMPI 0x41b V246
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x417
[0x417:0x41a]
---
Predecessors: [0x3c0]
Successors: []
---
0x417 PUSH1 0x0
0x419 DUP1
0x41a REVERT
---
0x417: V248 = 0x0
0x41a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x41b
[0x41b:0x452]
---
Predecessors: [0x3c0]
Successors: [0x453, 0x457]
---
0x41b JUMPDEST
0x41c PUSH1 0x0
0x41e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x433 AND
0x434 DUP2
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b EQ
0x44c ISZERO
0x44d ISZERO
0x44e ISZERO
0x44f PUSH2 0x457
0x452 JUMPI
---
0x41b: JUMPDEST 
0x41c: V249 = 0x0
0x41e: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x433: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x435: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x44b: V254 = EQ V253 0x0
0x44c: V255 = ISZERO V254
0x44d: V256 = ISZERO V255
0x44e: V257 = ISZERO V256
0x44f: V258 = 0x457
0x452: JUMPI 0x457 V257
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x453
[0x453:0x456]
---
Predecessors: [0x41b]
Successors: []
---
0x453 PUSH1 0x0
0x455 DUP1
0x456 REVERT
---
0x453: V259 = 0x0
0x456: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x457
[0x457:0x514]
---
Predecessors: [0x41b]
Successors: [0x1bd]
---
0x457 JUMPDEST
0x458 DUP1
0x459 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46e AND
0x46f PUSH1 0x0
0x471 DUP1
0x472 SWAP1
0x473 SLOAD
0x474 SWAP1
0x475 PUSH2 0x100
0x478 EXP
0x479 SWAP1
0x47a DIV
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a6 AND
0x4a7 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4c8 PUSH1 0x40
0x4ca MLOAD
0x4cb PUSH1 0x40
0x4cd MLOAD
0x4ce DUP1
0x4cf SWAP2
0x4d0 SUB
0x4d1 SWAP1
0x4d2 LOG3
0x4d3 DUP1
0x4d4 PUSH1 0x0
0x4d6 DUP1
0x4d7 PUSH2 0x100
0x4da EXP
0x4db DUP2
0x4dc SLOAD
0x4dd DUP2
0x4de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f3 MUL
0x4f4 NOT
0x4f5 AND
0x4f6 SWAP1
0x4f7 DUP4
0x4f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50d AND
0x50e MUL
0x50f OR
0x510 SWAP1
0x511 SSTORE
0x512 POP
0x513 POP
0x514 JUMP
---
0x457: JUMPDEST 
0x459: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x46e: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x46f: V262 = 0x0
0x473: V263 = S[0x0]
0x475: V264 = 0x100
0x478: V265 = EXP 0x100 0x0
0x47a: V266 = DIV V263 0x1
0x47b: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x491: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x4a7: V271 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4c8: V272 = 0x40
0x4ca: V273 = M[0x40]
0x4cb: V274 = 0x40
0x4cd: V275 = M[0x40]
0x4d0: V276 = SUB V273 V275
0x4d2: LOG V275 V276 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V270 V261
0x4d4: V277 = 0x0
0x4d7: V278 = 0x100
0x4da: V279 = EXP 0x100 0x0
0x4dc: V280 = S[0x0]
0x4de: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f3: V282 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4f4: V283 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4f5: V284 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V280
0x4f8: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x50d: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x50e: V287 = MUL V286 0x1
0x50f: V288 = OR V287 V284
0x511: S[0x0] = V288
0x514: JUMP 0x1bd
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x515
[0x515:0x54d]
---
Predecessors: []
Successors: [0x54e]
---
0x515 STOP
0x516 LOG1
0x517 PUSH6 0x627a7a723058
0x51e SHA3
0x51f PUSH21 0x4612ee78c821eab7085f342ce5e54c3944a7d2ed2f
0x535 MISSING 0x26
0x536 SWAP14
0x537 DELEGATECALL
0x538 PC
0x539 SWAP1
0x53a MISSING 0xac
0x53b MISSING 0xeb
0x53c SWAP12
0x53d SMOD
0x53e RETURNDATASIZE
0x53f STOP
0x540 MISSING 0x29
0x541 PUSH1 0x80
0x543 PUSH1 0x40
0x545 MSTORE
0x546 PUSH1 0x4
0x548 CALLDATASIZE
0x549 LT
0x54a PUSH2 0x4c
0x54d JUMPI
---
0x515: STOP 
0x516: LOG S0 S1 S2
0x517: V289 = 0x627a7a723058
0x51e: V290 = SHA3 0x627a7a723058 S3
0x51f: V291 = 0x4612ee78c821eab7085f342ce5e54c3944a7d2ed2f
0x535: MISSING 0x26
0x537: V292 = DELEGATECALL S14 S1 S2 S3 S4 S5
0x538: V293 = PC
0x53a: MISSING 0xac
0x53b: MISSING 0xeb
0x53d: V294 = SMOD S12 S1
0x53e: V295 = RETURNDATASIZE
0x53f: STOP 
0x540: MISSING 0x29
0x541: V296 = 0x80
0x543: V297 = 0x40
0x545: M[0x40] = 0x80
0x546: V298 = 0x4
0x548: V299 = CALLDATASIZE
0x549: V300 = LT V299 0x4
0x54a: V301 = 0x4c
0x54d: THROWI V300
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4612ee78c821eab7085f342ce5e54c3944a7d2ed2f, V290, V292, V293, S6, S7, S8, S9, S10, S11, S12, S13, S0, V295, V294, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Block 0x54e
[0x54e:0x581]
---
Predecessors: [0x515]
Successors: [0x582]
---
0x54e PUSH1 0x0
0x550 CALLDATALOAD
0x551 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x56f SWAP1
0x570 DIV
0x571 PUSH4 0xffffffff
0x576 AND
0x577 DUP1
0x578 PUSH4 0x8da5cb5b
0x57d EQ
0x57e PUSH2 0x51
0x581 JUMPI
---
0x54e: V302 = 0x0
0x550: V303 = CALLDATALOAD 0x0
0x551: V304 = 0x100000000000000000000000000000000000000000000000000000000
0x570: V305 = DIV V303 0x100000000000000000000000000000000000000000000000000000000
0x571: V306 = 0xffffffff
0x576: V307 = AND 0xffffffff V305
0x578: V308 = 0x8da5cb5b
0x57d: V309 = EQ 0x8da5cb5b V307
0x57e: V310 = 0x51
0x581: THROWI V309
---
Entry stack: []
Stack pops: 0
Stack additions: [V307]
Exit stack: [V307]

================================

Block 0x582
[0x582:0x58c]
---
Predecessors: [0x54e]
Successors: [0x58d]
---
0x582 DUP1
0x583 PUSH4 0xf2fde38b
0x588 EQ
0x589 PUSH2 0xa8
0x58c JUMPI
---
0x583: V311 = 0xf2fde38b
0x588: V312 = EQ 0xf2fde38b V307
0x589: V313 = 0xa8
0x58c: THROWI V312
---
Entry stack: [V307]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V307]

================================

Block 0x58d
[0x58d:0x599]
---
Predecessors: [0x582]
Successors: [0x59a]
---
0x58d JUMPDEST
0x58e PUSH1 0x0
0x590 DUP1
0x591 REVERT
0x592 JUMPDEST
0x593 CALLVALUE
0x594 DUP1
0x595 ISZERO
0x596 PUSH2 0x5d
0x599 JUMPI
---
0x58d: JUMPDEST 
0x58e: V314 = 0x0
0x591: REVERT 0x0 0x0
0x592: JUMPDEST 
0x593: V315 = CALLVALUE
0x595: V316 = ISZERO V315
0x596: V317 = 0x5d
0x599: THROWI V316
---
Entry stack: [V307]
Stack pops: 0
Stack additions: [V315]
Exit stack: []

================================

Block 0x59a
[0x59a:0x5f0]
---
Predecessors: [0x58d]
Successors: [0x5f1]
---
0x59a PUSH1 0x0
0x59c DUP1
0x59d REVERT
0x59e JUMPDEST
0x59f POP
0x5a0 PUSH2 0x66
0x5a3 PUSH2 0xeb
0x5a6 JUMP
0x5a7 JUMPDEST
0x5a8 PUSH1 0x40
0x5aa MLOAD
0x5ab DUP1
0x5ac DUP3
0x5ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c2 AND
0x5c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d8 AND
0x5d9 DUP2
0x5da MSTORE
0x5db PUSH1 0x20
0x5dd ADD
0x5de SWAP2
0x5df POP
0x5e0 POP
0x5e1 PUSH1 0x40
0x5e3 MLOAD
0x5e4 DUP1
0x5e5 SWAP2
0x5e6 SUB
0x5e7 SWAP1
0x5e8 RETURN
0x5e9 JUMPDEST
0x5ea CALLVALUE
0x5eb DUP1
0x5ec ISZERO
0x5ed PUSH2 0xb4
0x5f0 JUMPI
---
0x59a: V318 = 0x0
0x59d: REVERT 0x0 0x0
0x59e: JUMPDEST 
0x5a0: V319 = 0x66
0x5a3: V320 = 0xeb
0x5a6: THROW 
0x5a7: JUMPDEST 
0x5a8: V321 = 0x40
0x5aa: V322 = M[0x40]
0x5ad: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5c3: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x5da: M[V322] = V326
0x5db: V327 = 0x20
0x5dd: V328 = ADD 0x20 V322
0x5e1: V329 = 0x40
0x5e3: V330 = M[0x40]
0x5e6: V331 = SUB V328 V330
0x5e8: RETURN V330 V331
0x5e9: JUMPDEST 
0x5ea: V332 = CALLVALUE
0x5ec: V333 = ISZERO V332
0x5ed: V334 = 0xb4
0x5f0: THROWI V333
---
Entry stack: [V315]
Stack pops: 0
Stack additions: [0x66, V332]
Exit stack: []

================================

Block 0x5f1
[0x5f1:0x6a7]
---
Predecessors: [0x59a]
Successors: [0x6a8]
---
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 REVERT
0x5f5 JUMPDEST
0x5f6 POP
0x5f7 PUSH2 0xe9
0x5fa PUSH1 0x4
0x5fc DUP1
0x5fd CALLDATASIZE
0x5fe SUB
0x5ff DUP2
0x600 ADD
0x601 SWAP1
0x602 DUP1
0x603 DUP1
0x604 CALLDATALOAD
0x605 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61a AND
0x61b SWAP1
0x61c PUSH1 0x20
0x61e ADD
0x61f SWAP1
0x620 SWAP3
0x621 SWAP2
0x622 SWAP1
0x623 POP
0x624 POP
0x625 POP
0x626 PUSH2 0x110
0x629 JUMP
0x62a JUMPDEST
0x62b STOP
0x62c JUMPDEST
0x62d PUSH1 0x0
0x62f DUP1
0x630 SWAP1
0x631 SLOAD
0x632 SWAP1
0x633 PUSH2 0x100
0x636 EXP
0x637 SWAP1
0x638 DIV
0x639 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64e AND
0x64f DUP2
0x650 JUMP
0x651 JUMPDEST
0x652 PUSH1 0x0
0x654 DUP1
0x655 SWAP1
0x656 SLOAD
0x657 SWAP1
0x658 PUSH2 0x100
0x65b EXP
0x65c SWAP1
0x65d DIV
0x65e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x673 AND
0x674 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x689 AND
0x68a CALLER
0x68b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a0 AND
0x6a1 EQ
0x6a2 ISZERO
0x6a3 ISZERO
0x6a4 PUSH2 0x16b
0x6a7 JUMPI
---
0x5f1: V335 = 0x0
0x5f4: REVERT 0x0 0x0
0x5f5: JUMPDEST 
0x5f7: V336 = 0xe9
0x5fa: V337 = 0x4
0x5fd: V338 = CALLDATASIZE
0x5fe: V339 = SUB V338 0x4
0x600: V340 = ADD 0x4 V339
0x604: V341 = CALLDATALOAD 0x4
0x605: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x61a: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x61c: V344 = 0x20
0x61e: V345 = ADD 0x20 0x4
0x626: V346 = 0x110
0x629: THROW 
0x62a: JUMPDEST 
0x62b: STOP 
0x62c: JUMPDEST 
0x62d: V347 = 0x0
0x631: V348 = S[0x0]
0x633: V349 = 0x100
0x636: V350 = EXP 0x100 0x0
0x638: V351 = DIV V348 0x1
0x639: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x650: JUMP S0
0x651: JUMPDEST 
0x652: V354 = 0x0
0x656: V355 = S[0x0]
0x658: V356 = 0x100
0x65b: V357 = EXP 0x100 0x0
0x65d: V358 = DIV V355 0x1
0x65e: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x673: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x674: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x689: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x68a: V363 = CALLER
0x68b: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x6a1: V366 = EQ V365 V362
0x6a2: V367 = ISZERO V366
0x6a3: V368 = ISZERO V367
0x6a4: V369 = 0x16b
0x6a7: THROWI V368
---
Entry stack: [V332]
Stack pops: 0
Stack additions: [V343, 0xe9, V353, S0]
Exit stack: []

================================

Block 0x6a8
[0x6a8:0x6e3]
---
Predecessors: [0x5f1]
Successors: [0x6e4]
---
0x6a8 PUSH1 0x0
0x6aa DUP1
0x6ab REVERT
0x6ac JUMPDEST
0x6ad PUSH1 0x0
0x6af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c4 AND
0x6c5 DUP2
0x6c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6db AND
0x6dc EQ
0x6dd ISZERO
0x6de ISZERO
0x6df ISZERO
0x6e0 PUSH2 0x1a7
0x6e3 JUMPI
---
0x6a8: V370 = 0x0
0x6ab: REVERT 0x0 0x0
0x6ac: JUMPDEST 
0x6ad: V371 = 0x0
0x6af: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c4: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6c6: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6dc: V376 = EQ V375 0x0
0x6dd: V377 = ISZERO V376
0x6de: V378 = ISZERO V377
0x6df: V379 = ISZERO V378
0x6e0: V380 = 0x1a7
0x6e3: THROWI V379
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x6e4
[0x6e4:0x7d1]
---
Predecessors: [0x6a8]
Successors: []
---
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 REVERT
0x6e8 JUMPDEST
0x6e9 DUP1
0x6ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ff AND
0x700 PUSH1 0x0
0x702 DUP1
0x703 SWAP1
0x704 SLOAD
0x705 SWAP1
0x706 PUSH2 0x100
0x709 EXP
0x70a SWAP1
0x70b DIV
0x70c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x721 AND
0x722 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x737 AND
0x738 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x759 PUSH1 0x40
0x75b MLOAD
0x75c PUSH1 0x40
0x75e MLOAD
0x75f DUP1
0x760 SWAP2
0x761 SUB
0x762 SWAP1
0x763 LOG3
0x764 DUP1
0x765 PUSH1 0x0
0x767 DUP1
0x768 PUSH2 0x100
0x76b EXP
0x76c DUP2
0x76d SLOAD
0x76e DUP2
0x76f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x784 MUL
0x785 NOT
0x786 AND
0x787 SWAP1
0x788 DUP4
0x789 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79e AND
0x79f MUL
0x7a0 OR
0x7a1 SWAP1
0x7a2 SSTORE
0x7a3 POP
0x7a4 POP
0x7a5 JUMP
0x7a6 STOP
0x7a7 LOG1
0x7a8 PUSH6 0x627a7a723058
0x7af SHA3
0x7b0 STATICCALL
0x7b1 PUSH30 0xbfe1867d15443886832e3a61c09f8ca518893f6f8267918bd14160b6eb2b
0x7d0 STOP
0x7d1 MISSING 0x29
---
0x6e4: V381 = 0x0
0x6e7: REVERT 0x0 0x0
0x6e8: JUMPDEST 
0x6ea: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ff: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x700: V384 = 0x0
0x704: V385 = S[0x0]
0x706: V386 = 0x100
0x709: V387 = EXP 0x100 0x0
0x70b: V388 = DIV V385 0x1
0x70c: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x721: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x722: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x737: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x738: V393 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x759: V394 = 0x40
0x75b: V395 = M[0x40]
0x75c: V396 = 0x40
0x75e: V397 = M[0x40]
0x761: V398 = SUB V395 V397
0x763: LOG V397 V398 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V392 V383
0x765: V399 = 0x0
0x768: V400 = 0x100
0x76b: V401 = EXP 0x100 0x0
0x76d: V402 = S[0x0]
0x76f: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x784: V404 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x785: V405 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x786: V406 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V402
0x789: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x79e: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x79f: V409 = MUL V408 0x1
0x7a0: V410 = OR V409 V406
0x7a2: S[0x0] = V410
0x7a5: JUMP S1
0x7a6: STOP 
0x7a7: LOG S0 S1 S2
0x7a8: V411 = 0x627a7a723058
0x7af: V412 = SHA3 0x627a7a723058 S3
0x7b0: V413 = STATICCALL V412 S4 S5 S6 S7 S8
0x7b1: V414 = 0xbfe1867d15443886832e3a61c09f8ca518893f6f8267918bd14160b6eb2b
0x7d0: STOP 
0x7d1: MISSING 0x29
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0xbfe1867d15443886832e3a61c09f8ca518893f6f8267918bd14160b6eb2b, V413]
Exit stack: []

================================

Function 0:
Public function signature: 0x72a503be
Entry block: 0x5c
Exit block: 0x371
Body: 0x5c, 0x64, 0x68, 0x123, 0x1bf, 0x219, 0x21d, 0x229, 0x22d, 0x265, 0x269, 0x271, 0x27b, 0x2a3, 0x2a4, 0x2bb, 0x2bc, 0x347, 0x34b, 0x356, 0x35f, 0x371, 0x375, 0x394

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x125
Exit block: 0x13a
Body: 0x125, 0x12d, 0x131, 0x13a, 0x39b

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x17c
Exit block: 0x1bd
Body: 0x17c, 0x184, 0x188, 0x1bd, 0x3c0, 0x417, 0x41b, 0x453, 0x457

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

