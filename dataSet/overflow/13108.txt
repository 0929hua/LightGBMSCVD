Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x3da]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6e66f6e9
0x3c EQ
0x3d PUSH2 0x3da
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6e66f6e9
0x3c: V13 = EQ 0x6e66f6e9 V11
0x3d: V14 = 0x3da
0x40: JUMPI 0x3da V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x431]
---
0x41 DUP1
0x42 PUSH4 0x9518589a
0x47 EQ
0x48 PUSH2 0x431
0x4b JUMPI
---
0x42: V15 = 0x9518589a
0x47: V16 = EQ 0x9518589a V11
0x48: V17 = 0x431
0x4b: JUMPI 0x431 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x57]
---
Predecessors: [0x0, 0x41]
Successors: [0x58, 0x59]
---
0x4c JUMPDEST
0x4d PUSH1 0x5
0x4f SLOAD
0x50 CALLVALUE
0x51 DUP2
0x52 ISZERO
0x53 ISZERO
0x54 PUSH2 0x59
0x57 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = 0x5
0x4f: V19 = S[0x5]
0x50: V20 = CALLVALUE
0x52: V21 = ISZERO V19
0x53: V22 = ISZERO V21
0x54: V23 = 0x59
0x57: JUMPI 0x59 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19, V20]
Exit stack: [V11, V19, V20]

================================

Block 0x58
[0x58:0x58]
---
Predecessors: [0x4c]
Successors: []
---
0x58 INVALID
---
0x58: INVALID 
---
Entry stack: [V11, V19, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19, V20]

================================

Block 0x59
[0x59:0x71]
---
Predecessors: [0x4c]
Successors: [0x72, 0x9e]
---
0x59 JUMPDEST
0x5a DIV
0x5b PUSH1 0x4
0x5d DUP2
0x5e SWAP1
0x5f SSTORE
0x60 POP
0x61 PUSH8 0x4563918244f40000
0x6a CALLVALUE
0x6b LT
0x6c ISZERO
0x6d ISZERO
0x6e PUSH2 0x9e
0x71 JUMPI
---
0x59: JUMPDEST 
0x5a: V24 = DIV V20 V19
0x5b: V25 = 0x4
0x5f: S[0x4] = V24
0x61: V26 = 0x4563918244f40000
0x6a: V27 = CALLVALUE
0x6b: V28 = LT V27 0x4563918244f40000
0x6c: V29 = ISZERO V28
0x6d: V30 = ISZERO V29
0x6e: V31 = 0x9e
0x71: JUMPI 0x9e V30
---
Entry stack: [V11, V19, V20]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x59]
Successors: [0x7d, 0x7e]
---
0x72 PUSH1 0x5
0x74 SLOAD
0x75 CALLVALUE
0x76 DUP2
0x77 ISZERO
0x78 ISZERO
0x79 PUSH2 0x7e
0x7c JUMPI
---
0x72: V32 = 0x5
0x74: V33 = S[0x5]
0x75: V34 = CALLVALUE
0x77: V35 = ISZERO V33
0x78: V36 = ISZERO V35
0x79: V37 = 0x7e
0x7c: JUMPI 0x7e V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33, V34]
Exit stack: [V11, V33, V34]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x72]
Successors: []
---
0x7d INVALID
---
0x7d: INVALID 
---
Entry stack: [V11, V33, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33, V34]

================================

Block 0x7e
[0x7e:0x94]
---
Predecessors: [0x72]
Successors: [0x95, 0x96]
---
0x7e JUMPDEST
0x7f DIV
0x80 PUSH1 0x4
0x82 DUP2
0x83 SWAP1
0x84 SSTORE
0x85 POP
0x86 PUSH1 0x2
0x88 PUSH1 0x3
0x8a PUSH1 0x4
0x8c SLOAD
0x8d MUL
0x8e DUP2
0x8f ISZERO
0x90 ISZERO
0x91 PUSH2 0x96
0x94 JUMPI
---
0x7e: JUMPDEST 
0x7f: V38 = DIV V34 V33
0x80: V39 = 0x4
0x84: S[0x4] = V38
0x86: V40 = 0x2
0x88: V41 = 0x3
0x8a: V42 = 0x4
0x8c: V43 = S[0x4]
0x8d: V44 = MUL V43 0x3
0x8f: V45 = ISZERO 0x2
0x90: V46 = ISZERO 0x0
0x91: V47 = 0x96
0x94: JUMPI 0x96 0x1
---
Entry stack: [V11, V33, V34]
Stack pops: 2
Stack additions: [0x2, V44]
Exit stack: [V11, 0x2, V44]

================================

Block 0x95
[0x95:0x95]
---
Predecessors: [0x7e]
Successors: []
---
0x95 INVALID
---
0x95: INVALID 
---
Entry stack: [V11, 0x2, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2, V44]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0x7e]
Successors: [0x9e]
---
0x96 JUMPDEST
0x97 DIV
0x98 PUSH1 0x4
0x9a DUP2
0x9b SWAP1
0x9c SSTORE
0x9d POP
---
0x96: JUMPDEST 
0x97: V48 = DIV V44 0x2
0x98: V49 = 0x4
0x9c: S[0x4] = V48
---
Entry stack: [V11, 0x2, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xaf]
---
Predecessors: [0x59, 0x96]
Successors: [0xb0, 0xd0]
---
0x9e JUMPDEST
0x9f PUSH8 0xd02ab486cedc0000
0xa8 CALLVALUE
0xa9 LT
0xaa ISZERO
0xab ISZERO
0xac PUSH2 0xd0
0xaf JUMPI
---
0x9e: JUMPDEST 
0x9f: V50 = 0xd02ab486cedc0000
0xa8: V51 = CALLVALUE
0xa9: V52 = LT V51 0xd02ab486cedc0000
0xaa: V53 = ISZERO V52
0xab: V54 = ISZERO V53
0xac: V55 = 0xd0
0xaf: JUMPI 0xd0 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xba]
---
Predecessors: [0x9e]
Successors: [0xbb, 0xbc]
---
0xb0 PUSH1 0x5
0xb2 SLOAD
0xb3 CALLVALUE
0xb4 DUP2
0xb5 ISZERO
0xb6 ISZERO
0xb7 PUSH2 0xbc
0xba JUMPI
---
0xb0: V56 = 0x5
0xb2: V57 = S[0x5]
0xb3: V58 = CALLVALUE
0xb5: V59 = ISZERO V57
0xb6: V60 = ISZERO V59
0xb7: V61 = 0xbc
0xba: JUMPI 0xbc V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57, V58]
Exit stack: [V11, V57, V58]

================================

Block 0xbb
[0xbb:0xbb]
---
Predecessors: [0xb0]
Successors: []
---
0xbb INVALID
---
0xbb: INVALID 
---
Entry stack: [V11, V57, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, V58]

================================

Block 0xbc
[0xbc:0xcf]
---
Predecessors: [0xb0]
Successors: [0xd0]
---
0xbc JUMPDEST
0xbd DIV
0xbe PUSH1 0x4
0xc0 DUP2
0xc1 SWAP1
0xc2 SSTORE
0xc3 POP
0xc4 PUSH1 0x2
0xc6 PUSH1 0x4
0xc8 SLOAD
0xc9 MUL
0xca PUSH1 0x4
0xcc DUP2
0xcd SWAP1
0xce SSTORE
0xcf POP
---
0xbc: JUMPDEST 
0xbd: V62 = DIV V58 V57
0xbe: V63 = 0x4
0xc2: S[0x4] = V62
0xc4: V64 = 0x2
0xc6: V65 = 0x4
0xc8: V66 = S[0x4]
0xc9: V67 = MUL V66 0x2
0xca: V68 = 0x4
0xce: S[0x4] = V67
---
Entry stack: [V11, V57, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xe2]
---
Predecessors: [0x9e, 0xbc]
Successors: [0xe3, 0x103]
---
0xd0 JUMPDEST
0xd1 PUSH9 0x15af1d78b58c40000
0xdb CALLVALUE
0xdc LT
0xdd ISZERO
0xde ISZERO
0xdf PUSH2 0x103
0xe2 JUMPI
---
0xd0: JUMPDEST 
0xd1: V69 = 0x15af1d78b58c40000
0xdb: V70 = CALLVALUE
0xdc: V71 = LT V70 0x15af1d78b58c40000
0xdd: V72 = ISZERO V71
0xde: V73 = ISZERO V72
0xdf: V74 = 0x103
0xe2: JUMPI 0x103 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd0]
Successors: [0xee, 0xef]
---
0xe3 PUSH1 0x5
0xe5 SLOAD
0xe6 CALLVALUE
0xe7 DUP2
0xe8 ISZERO
0xe9 ISZERO
0xea PUSH2 0xef
0xed JUMPI
---
0xe3: V75 = 0x5
0xe5: V76 = S[0x5]
0xe6: V77 = CALLVALUE
0xe8: V78 = ISZERO V76
0xe9: V79 = ISZERO V78
0xea: V80 = 0xef
0xed: JUMPI 0xef V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76, V77]
Exit stack: [V11, V76, V77]

================================

Block 0xee
[0xee:0xee]
---
Predecessors: [0xe3]
Successors: []
---
0xee INVALID
---
0xee: INVALID 
---
Entry stack: [V11, V76, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76, V77]

================================

Block 0xef
[0xef:0x102]
---
Predecessors: [0xe3]
Successors: [0x103]
---
0xef JUMPDEST
0xf0 DIV
0xf1 PUSH1 0x4
0xf3 DUP2
0xf4 SWAP1
0xf5 SSTORE
0xf6 POP
0xf7 PUSH1 0x3
0xf9 PUSH1 0x4
0xfb SLOAD
0xfc MUL
0xfd PUSH1 0x4
0xff DUP2
0x100 SWAP1
0x101 SSTORE
0x102 POP
---
0xef: JUMPDEST 
0xf0: V81 = DIV V77 V76
0xf1: V82 = 0x4
0xf5: S[0x4] = V81
0xf7: V83 = 0x3
0xf9: V84 = 0x4
0xfb: V85 = S[0x4]
0xfc: V86 = MUL V85 0x3
0xfd: V87 = 0x4
0x101: S[0x4] = V86
---
Entry stack: [V11, V76, V77]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x103
[0x103:0x21b]
---
Predecessors: [0xd0, 0xef]
Successors: [0x21c, 0x220]
---
0x103 JUMPDEST
0x104 PUSH1 0x9
0x106 PUSH1 0x0
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d PUSH4 0x23b872dd
0x142 PUSH1 0x1
0x144 PUSH1 0x0
0x146 SWAP1
0x147 SLOAD
0x148 SWAP1
0x149 PUSH2 0x100
0x14c EXP
0x14d SWAP1
0x14e DIV
0x14f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164 AND
0x165 CALLER
0x166 PUSH1 0x4
0x168 SLOAD
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP5
0x16d PUSH4 0xffffffff
0x172 AND
0x173 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x191 MUL
0x192 DUP2
0x193 MSTORE
0x194 PUSH1 0x4
0x196 ADD
0x197 DUP1
0x198 DUP5
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c4 AND
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca DUP4
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc DUP3
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP4
0x203 POP
0x204 POP
0x205 POP
0x206 POP
0x207 PUSH1 0x20
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d DUP4
0x20e SUB
0x20f DUP2
0x210 PUSH1 0x0
0x212 DUP8
0x213 DUP1
0x214 EXTCODESIZE
0x215 ISZERO
0x216 DUP1
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0x103: JUMPDEST 
0x104: V88 = 0x9
0x106: V89 = 0x0
0x109: V90 = S[0x9]
0x10b: V91 = 0x100
0x10e: V92 = EXP 0x100 0x0
0x110: V93 = DIV V90 0x1
0x111: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x127: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x13d: V98 = 0x23b872dd
0x142: V99 = 0x1
0x144: V100 = 0x0
0x147: V101 = S[0x1]
0x149: V102 = 0x100
0x14c: V103 = EXP 0x100 0x0
0x14e: V104 = DIV V101 0x1
0x14f: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x164: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x165: V107 = CALLER
0x166: V108 = 0x4
0x168: V109 = S[0x4]
0x169: V110 = 0x40
0x16b: V111 = M[0x40]
0x16d: V112 = 0xffffffff
0x172: V113 = AND 0xffffffff 0x23b872dd
0x173: V114 = 0x100000000000000000000000000000000000000000000000000000000
0x191: V115 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x193: M[V111] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x194: V116 = 0x4
0x196: V117 = ADD 0x4 V111
0x199: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1af: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1c6: M[V117] = V121
0x1c7: V122 = 0x20
0x1c9: V123 = ADD 0x20 V117
0x1cb: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1e1: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1f8: M[V123] = V127
0x1f9: V128 = 0x20
0x1fb: V129 = ADD 0x20 V123
0x1fe: M[V129] = V109
0x1ff: V130 = 0x20
0x201: V131 = ADD 0x20 V129
0x207: V132 = 0x20
0x209: V133 = 0x40
0x20b: V134 = M[0x40]
0x20e: V135 = SUB V131 V134
0x210: V136 = 0x0
0x214: V137 = EXTCODESIZE V97
0x215: V138 = ISZERO V137
0x217: V139 = ISZERO V138
0x218: V140 = 0x220
0x21b: JUMPI 0x220 V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V97, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V97, V138]
Exit stack: [V11, V97, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V97, V138]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0x103]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V141 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V11, V97, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V97, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V97, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V97, V138]

================================

Block 0x220
[0x220:0x22a]
---
Predecessors: [0x103]
Successors: [0x22b, 0x234]
---
0x220 JUMPDEST
0x221 POP
0x222 GAS
0x223 CALL
0x224 ISZERO
0x225 DUP1
0x226 ISZERO
0x227 PUSH2 0x234
0x22a JUMPI
---
0x220: JUMPDEST 
0x222: V142 = GAS
0x223: V143 = CALL V142 V97 0x0 V134 V135 V134 0x20
0x224: V144 = ISZERO V143
0x226: V145 = ISZERO V144
0x227: V146 = 0x234
0x22a: JUMPI 0x234 V145
---
Entry stack: [V11, V97, 0x23b872dd, V131, 0x20, V134, V135, V134, 0x0, V97, V138]
Stack pops: 7
Stack additions: [V144]
Exit stack: [V11, V97, 0x23b872dd, V131, V144]

================================

Block 0x22b
[0x22b:0x233]
---
Predecessors: [0x220]
Successors: []
---
0x22b RETURNDATASIZE
0x22c PUSH1 0x0
0x22e DUP1
0x22f RETURNDATACOPY
0x230 RETURNDATASIZE
0x231 PUSH1 0x0
0x233 REVERT
---
0x22b: V147 = RETURNDATASIZE
0x22c: V148 = 0x0
0x22f: RETURNDATACOPY 0x0 0x0 V147
0x230: V149 = RETURNDATASIZE
0x231: V150 = 0x0
0x233: REVERT 0x0 V149
---
Entry stack: [V11, V97, 0x23b872dd, V131, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V97, 0x23b872dd, V131, V144]

================================

Block 0x234
[0x234:0x245]
---
Predecessors: [0x220]
Successors: [0x246, 0x24a]
---
0x234 JUMPDEST
0x235 POP
0x236 POP
0x237 POP
0x238 POP
0x239 PUSH1 0x40
0x23b MLOAD
0x23c RETURNDATASIZE
0x23d PUSH1 0x20
0x23f DUP2
0x240 LT
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x234: JUMPDEST 
0x239: V151 = 0x40
0x23b: V152 = M[0x40]
0x23c: V153 = RETURNDATASIZE
0x23d: V154 = 0x20
0x240: V155 = LT V153 0x20
0x241: V156 = ISZERO V155
0x242: V157 = 0x24a
0x245: JUMPI 0x24a V156
---
Entry stack: [V11, V97, 0x23b872dd, V131, V144]
Stack pops: 4
Stack additions: [V152, V153]
Exit stack: [V11, V152, V153]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x234]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V158 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V11, V152, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V152, V153]

================================

Block 0x24a
[0x24a:0x269]
---
Predecessors: [0x234]
Successors: [0x26a, 0x26b]
---
0x24a JUMPDEST
0x24b DUP2
0x24c ADD
0x24d SWAP1
0x24e DUP1
0x24f DUP1
0x250 MLOAD
0x251 SWAP1
0x252 PUSH1 0x20
0x254 ADD
0x255 SWAP1
0x256 SWAP3
0x257 SWAP2
0x258 SWAP1
0x259 POP
0x25a POP
0x25b POP
0x25c POP
0x25d PUSH1 0x64
0x25f PUSH1 0x8
0x261 CALLVALUE
0x262 MUL
0x263 DUP2
0x264 ISZERO
0x265 ISZERO
0x266 PUSH2 0x26b
0x269 JUMPI
---
0x24a: JUMPDEST 
0x24c: V159 = ADD V152 V153
0x250: V160 = M[V152]
0x252: V161 = 0x20
0x254: V162 = ADD 0x20 V152
0x25d: V163 = 0x64
0x25f: V164 = 0x8
0x261: V165 = CALLVALUE
0x262: V166 = MUL V165 0x8
0x264: V167 = ISZERO 0x64
0x265: V168 = ISZERO 0x0
0x266: V169 = 0x26b
0x269: JUMPI 0x26b 0x1
---
Entry stack: [V11, V152, V153]
Stack pops: 2
Stack additions: [0x64, V166]
Exit stack: [V11, 0x64, V166]

================================

Block 0x26a
[0x26a:0x26a]
---
Predecessors: [0x24a]
Successors: []
---
0x26a INVALID
---
0x26a: INVALID 
---
Entry stack: [V11, 0x64, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V166]

================================

Block 0x26b
[0x26b:0x27f]
---
Predecessors: [0x24a]
Successors: [0x280, 0x281]
---
0x26b JUMPDEST
0x26c DIV
0x26d PUSH1 0x7
0x26f DUP2
0x270 SWAP1
0x271 SSTORE
0x272 POP
0x273 PUSH1 0x64
0x275 PUSH1 0x6
0x277 CALLVALUE
0x278 MUL
0x279 DUP2
0x27a ISZERO
0x27b ISZERO
0x27c PUSH2 0x281
0x27f JUMPI
---
0x26b: JUMPDEST 
0x26c: V170 = DIV V166 0x64
0x26d: V171 = 0x7
0x271: S[0x7] = V170
0x273: V172 = 0x64
0x275: V173 = 0x6
0x277: V174 = CALLVALUE
0x278: V175 = MUL V174 0x6
0x27a: V176 = ISZERO 0x64
0x27b: V177 = ISZERO 0x0
0x27c: V178 = 0x281
0x27f: JUMPI 0x281 0x1
---
Entry stack: [V11, 0x64, V166]
Stack pops: 2
Stack additions: [0x64, V175]
Exit stack: [V11, 0x64, V175]

================================

Block 0x280
[0x280:0x280]
---
Predecessors: [0x26b]
Successors: []
---
0x280 INVALID
---
0x280: INVALID 
---
Entry stack: [V11, 0x64, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V175]

================================

Block 0x281
[0x281:0x2f7]
---
Predecessors: [0x26b]
Successors: [0x2f8, 0x301]
---
0x281 JUMPDEST
0x282 DIV
0x283 PUSH1 0x8
0x285 DUP2
0x286 SWAP1
0x287 SSTORE
0x288 POP
0x289 PUSH1 0x8
0x28b SLOAD
0x28c PUSH1 0x7
0x28e SLOAD
0x28f CALLVALUE
0x290 SUB
0x291 SUB
0x292 PUSH1 0x6
0x294 DUP2
0x295 SWAP1
0x296 SSTORE
0x297 POP
0x298 PUSH1 0x2
0x29a PUSH1 0x0
0x29c SWAP1
0x29d SLOAD
0x29e SWAP1
0x29f PUSH2 0x100
0x2a2 EXP
0x2a3 SWAP1
0x2a4 DIV
0x2a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ba AND
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 AND
0x2d1 PUSH2 0x8fc
0x2d4 PUSH1 0x7
0x2d6 SLOAD
0x2d7 SWAP1
0x2d8 DUP2
0x2d9 ISZERO
0x2da MUL
0x2db SWAP1
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df PUSH1 0x0
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP1
0x2e5 DUP4
0x2e6 SUB
0x2e7 DUP2
0x2e8 DUP6
0x2e9 DUP9
0x2ea DUP9
0x2eb CALL
0x2ec SWAP4
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 ISZERO
0x2f2 DUP1
0x2f3 ISZERO
0x2f4 PUSH2 0x301
0x2f7 JUMPI
---
0x281: JUMPDEST 
0x282: V179 = DIV V175 0x64
0x283: V180 = 0x8
0x287: S[0x8] = V179
0x289: V181 = 0x8
0x28b: V182 = S[0x8]
0x28c: V183 = 0x7
0x28e: V184 = S[0x7]
0x28f: V185 = CALLVALUE
0x290: V186 = SUB V185 V184
0x291: V187 = SUB V186 V182
0x292: V188 = 0x6
0x296: S[0x6] = V187
0x298: V189 = 0x2
0x29a: V190 = 0x0
0x29d: V191 = S[0x2]
0x29f: V192 = 0x100
0x2a2: V193 = EXP 0x100 0x0
0x2a4: V194 = DIV V191 0x1
0x2a5: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x2bb: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x2d1: V199 = 0x8fc
0x2d4: V200 = 0x7
0x2d6: V201 = S[0x7]
0x2d9: V202 = ISZERO V201
0x2da: V203 = MUL V202 0x8fc
0x2dc: V204 = 0x40
0x2de: V205 = M[0x40]
0x2df: V206 = 0x0
0x2e1: V207 = 0x40
0x2e3: V208 = M[0x40]
0x2e6: V209 = SUB V205 V208
0x2eb: V210 = CALL V203 V198 V201 V208 V209 V208 0x0
0x2f1: V211 = ISZERO V210
0x2f3: V212 = ISZERO V211
0x2f4: V213 = 0x301
0x2f7: JUMPI 0x301 V212
---
Entry stack: [V11, 0x64, V175]
Stack pops: 2
Stack additions: [V211]
Exit stack: [V11, V211]

================================

Block 0x2f8
[0x2f8:0x300]
---
Predecessors: [0x281]
Successors: []
---
0x2f8 RETURNDATASIZE
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc RETURNDATACOPY
0x2fd RETURNDATASIZE
0x2fe PUSH1 0x0
0x300 REVERT
---
0x2f8: V214 = RETURNDATASIZE
0x2f9: V215 = 0x0
0x2fc: RETURNDATACOPY 0x0 0x0 V214
0x2fd: V216 = RETURNDATASIZE
0x2fe: V217 = 0x0
0x300: REVERT 0x0 V216
---
Entry stack: [V11, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V211]

================================

Block 0x301
[0x301:0x362]
---
Predecessors: [0x281]
Successors: [0x363, 0x36c]
---
0x301 JUMPDEST
0x302 POP
0x303 PUSH1 0x3
0x305 PUSH1 0x0
0x307 SWAP1
0x308 SLOAD
0x309 SWAP1
0x30a PUSH2 0x100
0x30d EXP
0x30e SWAP1
0x30f DIV
0x310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x325 AND
0x326 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33b AND
0x33c PUSH2 0x8fc
0x33f PUSH1 0x8
0x341 SLOAD
0x342 SWAP1
0x343 DUP2
0x344 ISZERO
0x345 MUL
0x346 SWAP1
0x347 PUSH1 0x40
0x349 MLOAD
0x34a PUSH1 0x0
0x34c PUSH1 0x40
0x34e MLOAD
0x34f DUP1
0x350 DUP4
0x351 SUB
0x352 DUP2
0x353 DUP6
0x354 DUP9
0x355 DUP9
0x356 CALL
0x357 SWAP4
0x358 POP
0x359 POP
0x35a POP
0x35b POP
0x35c ISZERO
0x35d DUP1
0x35e ISZERO
0x35f PUSH2 0x36c
0x362 JUMPI
---
0x301: JUMPDEST 
0x303: V218 = 0x3
0x305: V219 = 0x0
0x308: V220 = S[0x3]
0x30a: V221 = 0x100
0x30d: V222 = EXP 0x100 0x0
0x30f: V223 = DIV V220 0x1
0x310: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x325: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x326: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x33b: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x33c: V228 = 0x8fc
0x33f: V229 = 0x8
0x341: V230 = S[0x8]
0x344: V231 = ISZERO V230
0x345: V232 = MUL V231 0x8fc
0x347: V233 = 0x40
0x349: V234 = M[0x40]
0x34a: V235 = 0x0
0x34c: V236 = 0x40
0x34e: V237 = M[0x40]
0x351: V238 = SUB V234 V237
0x356: V239 = CALL V232 V227 V230 V237 V238 V237 0x0
0x35c: V240 = ISZERO V239
0x35e: V241 = ISZERO V240
0x35f: V242 = 0x36c
0x362: JUMPI 0x36c V241
---
Entry stack: [V11, V211]
Stack pops: 1
Stack additions: [V240]
Exit stack: [V11, V240]

================================

Block 0x363
[0x363:0x36b]
---
Predecessors: [0x301]
Successors: []
---
0x363 RETURNDATASIZE
0x364 PUSH1 0x0
0x366 DUP1
0x367 RETURNDATACOPY
0x368 RETURNDATASIZE
0x369 PUSH1 0x0
0x36b REVERT
---
0x363: V243 = RETURNDATASIZE
0x364: V244 = 0x0
0x367: RETURNDATACOPY 0x0 0x0 V243
0x368: V245 = RETURNDATASIZE
0x369: V246 = 0x0
0x36b: REVERT 0x0 V245
---
Entry stack: [V11, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V240]

================================

Block 0x36c
[0x36c:0x3cd]
---
Predecessors: [0x301]
Successors: [0x3ce, 0x3d7]
---
0x36c JUMPDEST
0x36d POP
0x36e PUSH1 0x1
0x370 PUSH1 0x0
0x372 SWAP1
0x373 SLOAD
0x374 SWAP1
0x375 PUSH2 0x100
0x378 EXP
0x379 SWAP1
0x37a DIV
0x37b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x390 AND
0x391 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a6 AND
0x3a7 PUSH2 0x8fc
0x3aa PUSH1 0x6
0x3ac SLOAD
0x3ad SWAP1
0x3ae DUP2
0x3af ISZERO
0x3b0 MUL
0x3b1 SWAP1
0x3b2 PUSH1 0x40
0x3b4 MLOAD
0x3b5 PUSH1 0x0
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba DUP1
0x3bb DUP4
0x3bc SUB
0x3bd DUP2
0x3be DUP6
0x3bf DUP9
0x3c0 DUP9
0x3c1 CALL
0x3c2 SWAP4
0x3c3 POP
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 ISZERO
0x3c8 DUP1
0x3c9 ISZERO
0x3ca PUSH2 0x3d7
0x3cd JUMPI
---
0x36c: JUMPDEST 
0x36e: V247 = 0x1
0x370: V248 = 0x0
0x373: V249 = S[0x1]
0x375: V250 = 0x100
0x378: V251 = EXP 0x100 0x0
0x37a: V252 = DIV V249 0x1
0x37b: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x390: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x391: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x3a7: V257 = 0x8fc
0x3aa: V258 = 0x6
0x3ac: V259 = S[0x6]
0x3af: V260 = ISZERO V259
0x3b0: V261 = MUL V260 0x8fc
0x3b2: V262 = 0x40
0x3b4: V263 = M[0x40]
0x3b5: V264 = 0x0
0x3b7: V265 = 0x40
0x3b9: V266 = M[0x40]
0x3bc: V267 = SUB V263 V266
0x3c1: V268 = CALL V261 V256 V259 V266 V267 V266 0x0
0x3c7: V269 = ISZERO V268
0x3c9: V270 = ISZERO V269
0x3ca: V271 = 0x3d7
0x3cd: JUMPI 0x3d7 V270
---
Entry stack: [V11, V240]
Stack pops: 1
Stack additions: [V269]
Exit stack: [V11, V269]

================================

Block 0x3ce
[0x3ce:0x3d6]
---
Predecessors: [0x36c]
Successors: []
---
0x3ce RETURNDATASIZE
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 RETURNDATACOPY
0x3d3 RETURNDATASIZE
0x3d4 PUSH1 0x0
0x3d6 REVERT
---
0x3ce: V272 = RETURNDATASIZE
0x3cf: V273 = 0x0
0x3d2: RETURNDATACOPY 0x0 0x0 V272
0x3d3: V274 = RETURNDATASIZE
0x3d4: V275 = 0x0
0x3d6: REVERT 0x0 V274
---
Entry stack: [V11, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V269]

================================

Block 0x3d7
[0x3d7:0x3d9]
---
Predecessors: [0x36c]
Successors: []
---
0x3d7 JUMPDEST
0x3d8 POP
0x3d9 STOP
---
0x3d7: JUMPDEST 
0x3d9: STOP 
---
Entry stack: [V11, V269]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3da
[0x3da:0x3e1]
---
Predecessors: [0xd]
Successors: [0x3e2, 0x3e6]
---
0x3da JUMPDEST
0x3db CALLVALUE
0x3dc DUP1
0x3dd ISZERO
0x3de PUSH2 0x3e6
0x3e1 JUMPI
---
0x3da: JUMPDEST 
0x3db: V276 = CALLVALUE
0x3dd: V277 = ISZERO V276
0x3de: V278 = 0x3e6
0x3e1: JUMPI 0x3e6 V277
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V276]
Exit stack: [V11, V276]

================================

Block 0x3e2
[0x3e2:0x3e5]
---
Predecessors: [0x3da]
Successors: []
---
0x3e2 PUSH1 0x0
0x3e4 DUP1
0x3e5 REVERT
---
0x3e2: V279 = 0x0
0x3e5: REVERT 0x0 0x0
---
Entry stack: [V11, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V276]

================================

Block 0x3e6
[0x3e6:0x3ee]
---
Predecessors: [0x3da]
Successors: [0x45c]
---
0x3e6 JUMPDEST
0x3e7 POP
0x3e8 PUSH2 0x3ef
0x3eb PUSH2 0x45c
0x3ee JUMP
---
0x3e6: JUMPDEST 
0x3e8: V280 = 0x3ef
0x3eb: V281 = 0x45c
0x3ee: JUMP 0x45c
---
Entry stack: [V11, V276]
Stack pops: 1
Stack additions: [0x3ef]
Exit stack: [V11, 0x3ef]

================================

Block 0x3ef
[0x3ef:0x430]
---
Predecessors: [0x45c]
Successors: []
---
0x3ef JUMPDEST
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 DUP3
0x3f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40a AND
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 DUP2
0x422 MSTORE
0x423 PUSH1 0x20
0x425 ADD
0x426 SWAP2
0x427 POP
0x428 POP
0x429 PUSH1 0x40
0x42b MLOAD
0x42c DUP1
0x42d SWAP2
0x42e SUB
0x42f SWAP1
0x430 RETURN
---
0x3ef: JUMPDEST 
0x3f0: V282 = 0x40
0x3f2: V283 = M[0x40]
0x3f5: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x40a: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x40b: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x422: M[V283] = V287
0x423: V288 = 0x20
0x425: V289 = ADD 0x20 V283
0x429: V290 = 0x40
0x42b: V291 = M[0x40]
0x42e: V292 = SUB V289 V291
0x430: RETURN V291 V292
---
Entry stack: [V11, 0x3ef, V313]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3ef]

================================

Block 0x431
[0x431:0x438]
---
Predecessors: [0x41]
Successors: [0x439, 0x43d]
---
0x431 JUMPDEST
0x432 CALLVALUE
0x433 DUP1
0x434 ISZERO
0x435 PUSH2 0x43d
0x438 JUMPI
---
0x431: JUMPDEST 
0x432: V293 = CALLVALUE
0x434: V294 = ISZERO V293
0x435: V295 = 0x43d
0x438: JUMPI 0x43d V294
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V293]
Exit stack: [V11, V293]

================================

Block 0x439
[0x439:0x43c]
---
Predecessors: [0x431]
Successors: []
---
0x439 PUSH1 0x0
0x43b DUP1
0x43c REVERT
---
0x439: V296 = 0x0
0x43c: REVERT 0x0 0x0
---
Entry stack: [V11, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V293]

================================

Block 0x43d
[0x43d:0x445]
---
Predecessors: [0x431]
Successors: [0x482]
---
0x43d JUMPDEST
0x43e POP
0x43f PUSH2 0x446
0x442 PUSH2 0x482
0x445 JUMP
---
0x43d: JUMPDEST 
0x43f: V297 = 0x446
0x442: V298 = 0x482
0x445: JUMP 0x482
---
Entry stack: [V11, V293]
Stack pops: 1
Stack additions: [0x446]
Exit stack: [V11, 0x446]

================================

Block 0x446
[0x446:0x45b]
---
Predecessors: [0x482]
Successors: []
---
0x446 JUMPDEST
0x447 PUSH1 0x40
0x449 MLOAD
0x44a DUP1
0x44b DUP3
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x20
0x450 ADD
0x451 SWAP2
0x452 POP
0x453 POP
0x454 PUSH1 0x40
0x456 MLOAD
0x457 DUP1
0x458 SWAP2
0x459 SUB
0x45a SWAP1
0x45b RETURN
---
0x446: JUMPDEST 
0x447: V299 = 0x40
0x449: V300 = M[0x40]
0x44d: M[V300] = V315
0x44e: V301 = 0x20
0x450: V302 = ADD 0x20 V300
0x454: V303 = 0x40
0x456: V304 = M[0x40]
0x459: V305 = SUB V302 V304
0x45b: RETURN V304 V305
---
Entry stack: [V11, 0x446, V315]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x446]

================================

Block 0x45c
[0x45c:0x481]
---
Predecessors: [0x3e6]
Successors: [0x3ef]
---
0x45c JUMPDEST
0x45d PUSH1 0x9
0x45f PUSH1 0x0
0x461 SWAP1
0x462 SLOAD
0x463 SWAP1
0x464 PUSH2 0x100
0x467 EXP
0x468 SWAP1
0x469 DIV
0x46a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47f AND
0x480 DUP2
0x481 JUMP
---
0x45c: JUMPDEST 
0x45d: V306 = 0x9
0x45f: V307 = 0x0
0x462: V308 = S[0x9]
0x464: V309 = 0x100
0x467: V310 = EXP 0x100 0x0
0x469: V311 = DIV V308 0x1
0x46a: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x481: JUMP 0x3ef
---
Entry stack: [V11, 0x3ef]
Stack pops: 1
Stack additions: [S0, V313]
Exit stack: [V11, 0x3ef, V313]

================================

Block 0x482
[0x482:0x487]
---
Predecessors: [0x43d]
Successors: [0x446]
---
0x482 JUMPDEST
0x483 PUSH1 0x5
0x485 SLOAD
0x486 DUP2
0x487 JUMP
---
0x482: JUMPDEST 
0x483: V314 = 0x5
0x485: V315 = S[0x5]
0x487: JUMP 0x446
---
Entry stack: [V11, 0x446]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V11, 0x446, V315]

================================

Block 0x488
[0x488:0x4a9]
---
Predecessors: []
Successors: [0x4aa]
Has unresolved jump.
---
0x488 STOP
0x489 LOG1
0x48a PUSH6 0x627a7a723058
0x491 SHA3
0x492 PUSH7 0x38e9dfad9d0368
0x49a SMOD
0x49b DUP16
0x49c DUP15
0x49d MISSING 0xbd
0x49e DUP1
0x49f MISSING 0xee
0x4a0 MISSING 0x24
0x4a1 EXP
0x4a2 MISSING 0xbc
0x4a3 PUSH3 0xfdb836
0x4a7 DUP4
0x4a8 TIMESTAMP
0x4a9 JUMPI
---
0x488: STOP 
0x489: LOG S0 S1 S2
0x48a: V316 = 0x627a7a723058
0x491: V317 = SHA3 0x627a7a723058 S3
0x492: V318 = 0x38e9dfad9d0368
0x49a: V319 = SMOD 0x38e9dfad9d0368 V317
0x49d: MISSING 0xbd
0x49f: MISSING 0xee
0x4a0: MISSING 0x24
0x4a1: V320 = EXP S0 S1
0x4a2: MISSING 0xbc
0x4a3: V321 = 0xfdb836
0x4a8: V322 = TIMESTAMP
0x4a9: JUMPI V322 S2
---
Entry stack: []
Stack pops: 0
Stack additions: [S16, S18, V319, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S0, S0, V320, 0xfdb836, S0, S1, S2]
Exit stack: []

================================

Block 0x4aa
[0x4aa:0x4b3]
---
Predecessors: [0x488]
Successors: []
---
0x4aa MISSING 0xc3
0x4ab DELEGATECALL
0x4ac MISSING 0xdd
0x4ad DUP10
0x4ae MSIZE
0x4af SWAP1
0x4b0 MISSING 0x4e
0x4b1 MISSING 0x2b
0x4b2 STOP
0x4b3 MISSING 0x29
---
0x4aa: MISSING 0xc3
0x4ab: V323 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x4ac: MISSING 0xdd
0x4ae: V324 = MSIZE
0x4b0: MISSING 0x4e
0x4b1: MISSING 0x2b
0x4b2: STOP 
0x4b3: MISSING 0x29
---
Entry stack: [S3, S2, S1, 0xfdb836]
Stack pops: 0
Stack additions: [V323, S9, V324, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x6e66f6e9
Entry block: 0x3da
Exit block: 0x3ef
Body: 0x3da, 0x3e2, 0x3e6, 0x3ef, 0x45c

Function 1:
Public function signature: 0x9518589a
Entry block: 0x431
Exit block: 0x446
Body: 0x431, 0x439, 0x43d, 0x446, 0x482

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x3d7
Body: 0x4c, 0x58, 0x59, 0x72, 0x7d, 0x7e, 0x95, 0x96, 0x9e, 0xb0, 0xbb, 0xbc, 0xd0, 0xe3, 0xee, 0xef, 0x103, 0x21c, 0x220, 0x22b, 0x234, 0x246, 0x24a, 0x26a, 0x26b, 0x280, 0x281, 0x2f8, 0x301, 0x363, 0x36c, 0x3ce, 0x3d7

