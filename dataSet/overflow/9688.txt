Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xa6fbb05
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xa6fbb05
0x3c: V13 = EQ 0xa6fbb05 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x96]
---
0x41 DUP1
0x42 PUSH4 0x181ffc5f
0x47 EQ
0x48 PUSH2 0x96
0x4b JUMPI
---
0x42: V15 = 0x181ffc5f
0x47: V16 = EQ 0x181ffc5f V11
0x48: V17 = 0x96
0x4b: JUMPI 0x96 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb9]
---
0x4c DUP1
0x4d PUSH4 0x31fd725a
0x52 EQ
0x53 PUSH2 0xb9
0x56 JUMPI
---
0x4d: V18 = 0x31fd725a
0x52: V19 = EQ 0x31fd725a V11
0x53: V20 = 0xb9
0x56: JUMPI 0xb9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe0]
---
0x57 DUP1
0x58 PUSH4 0x410c8005
0x5d EQ
0x5e PUSH2 0xe0
0x61 JUMPI
---
0x58: V21 = 0x410c8005
0x5d: V22 = EQ 0x410c8005 V11
0x5e: V23 = 0xe0
0x61: JUMPI 0xe0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x119]
---
0x62 DUP1
0x63 PUSH4 0xb456ecc5
0x68 EQ
0x69 PUSH2 0x119
0x6c JUMPI
---
0x63: V24 = 0xb456ecc5
0x68: V25 = EQ 0xb456ecc5 V11
0x69: V26 = 0x119
0x6c: JUMPI 0x119 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x192]
---
0x6d DUP1
0x6e PUSH4 0xbea948c8
0x73 EQ
0x74 PUSH2 0x192
0x77 JUMPI
---
0x6e: V27 = 0xbea948c8
0x73: V28 = EQ 0xbea948c8 V11
0x74: V29 = 0x192
0x77: JUMPI 0x192 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x93]
---
Predecessors: [0xd]
Successors: [0x19c]
---
0x7a JUMPDEST
0x7b PUSH2 0x94
0x7e PUSH1 0x4
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH1 0x0
0x85 NOT
0x86 AND
0x87 SWAP1
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP1
0x8c SWAP2
0x8d SWAP1
0x8e POP
0x8f POP
0x90 PUSH2 0x19c
0x93 JUMP
---
0x7a: JUMPDEST 
0x7b: V30 = 0x94
0x7e: V31 = 0x4
0x82: V32 = CALLDATALOAD 0x4
0x83: V33 = 0x0
0x85: V34 = NOT 0x0
0x86: V35 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V32
0x88: V36 = 0x20
0x8a: V37 = ADD 0x20 0x4
0x90: V38 = 0x19c
0x93: JUMP 0x19c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x94, V35]
Exit stack: [V11, 0x94, V35]

================================

Block 0x94
[0x94:0x95]
---
Predecessors: [0x225]
Successors: []
---
0x94 JUMPDEST
0x95 STOP
---
0x94: JUMPDEST 
0x95: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0xb6]
---
Predecessors: [0x41]
Successors: [0x228]
---
0x96 JUMPDEST
0x97 PUSH2 0xb7
0x9a PUSH1 0x4
0x9c DUP1
0x9d DUP1
0x9e CALLDATALOAD
0x9f SWAP1
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP1
0xa4 DUP3
0xa5 ADD
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP2
0xad SWAP1
0xae SWAP2
0xaf SWAP3
0xb0 SWAP1
0xb1 POP
0xb2 POP
0xb3 PUSH2 0x228
0xb6 JUMP
---
0x96: JUMPDEST 
0x97: V39 = 0xb7
0x9a: V40 = 0x4
0x9e: V41 = CALLDATALOAD 0x4
0xa0: V42 = 0x20
0xa2: V43 = ADD 0x20 0x4
0xa5: V44 = ADD 0x4 V41
0xa7: V45 = CALLDATALOAD V44
0xa9: V46 = 0x20
0xab: V47 = ADD 0x20 V44
0xb3: V48 = 0x228
0xb6: JUMP 0x228
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb7, V47, V45]
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0xb7
[0xb7:0xb8]
---
Predecessors: [0x2ae]
Successors: []
---
0xb7 JUMPDEST
0xb8 STOP
---
0xb7: JUMPDEST 
0xb8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbf]
---
Predecessors: [0x4c]
Successors: [0xc0, 0xc4]
---
0xb9 JUMPDEST
0xba CALLVALUE
0xbb ISZERO
0xbc PUSH2 0xc4
0xbf JUMPI
---
0xb9: JUMPDEST 
0xba: V49 = CALLVALUE
0xbb: V50 = ISZERO V49
0xbc: V51 = 0xc4
0xbf: JUMPI 0xc4 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc0
[0xc0:0xc3]
---
Predecessors: [0xb9]
Successors: []
---
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xc0: V52 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xdd]
---
Predecessors: [0xb9]
Successors: [0x2b2]
---
0xc4 JUMPDEST
0xc5 PUSH2 0xde
0xc8 PUSH1 0x4
0xca DUP1
0xcb DUP1
0xcc CALLDATALOAD
0xcd PUSH1 0x0
0xcf NOT
0xd0 AND
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 POP
0xd9 POP
0xda PUSH2 0x2b2
0xdd JUMP
---
0xc4: JUMPDEST 
0xc5: V53 = 0xde
0xc8: V54 = 0x4
0xcc: V55 = CALLDATALOAD 0x4
0xcd: V56 = 0x0
0xcf: V57 = NOT 0x0
0xd0: V58 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V55
0xd2: V59 = 0x20
0xd4: V60 = ADD 0x20 0x4
0xda: V61 = 0x2b2
0xdd: JUMP 0x2b2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xde, V58]
Exit stack: [V11, 0xde, V58]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0x337]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x57]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V62 = CALLVALUE
0xe2: V63 = ISZERO V62
0xe3: V64 = 0xeb
0xe6: JUMPI 0xeb V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V65 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0x116]
---
Predecessors: [0xe0]
Successors: [0x33a]
---
0xeb JUMPDEST
0xec PUSH2 0x117
0xef PUSH1 0x4
0xf1 DUP1
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a SWAP1
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f SWAP2
0x110 SWAP1
0x111 POP
0x112 POP
0x113 PUSH2 0x33a
0x116 JUMP
---
0xeb: JUMPDEST 
0xec: V66 = 0x117
0xef: V67 = 0x4
0xf3: V68 = CALLDATALOAD 0x4
0xf4: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x10b: V71 = 0x20
0x10d: V72 = ADD 0x20 0x4
0x113: V73 = 0x33a
0x116: JUMP 0x33a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x117, V70]
Exit stack: [V11, 0x117, V70]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x3d1]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0x62]
Successors: [0x120, 0x124]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V74 = CALLVALUE
0x11b: V75 = ISZERO V74
0x11c: V76 = 0x124
0x11f: JUMPI 0x124 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x119]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V77 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x124
[0x124:0x173]
---
Predecessors: [0x119]
Successors: [0x3d4]
---
0x124 JUMPDEST
0x125 PUSH2 0x174
0x128 PUSH1 0x4
0x12a DUP1
0x12b DUP1
0x12c CALLDATALOAD
0x12d SWAP1
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 DUP3
0x133 ADD
0x134 DUP1
0x135 CALLDATALOAD
0x136 SWAP1
0x137 PUSH1 0x20
0x139 ADD
0x13a SWAP1
0x13b DUP1
0x13c DUP1
0x13d PUSH1 0x1f
0x13f ADD
0x140 PUSH1 0x20
0x142 DUP1
0x143 SWAP2
0x144 DIV
0x145 MUL
0x146 PUSH1 0x20
0x148 ADD
0x149 PUSH1 0x40
0x14b MLOAD
0x14c SWAP1
0x14d DUP2
0x14e ADD
0x14f PUSH1 0x40
0x151 MSTORE
0x152 DUP1
0x153 SWAP4
0x154 SWAP3
0x155 SWAP2
0x156 SWAP1
0x157 DUP2
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d DUP4
0x15e DUP4
0x15f DUP1
0x160 DUP3
0x161 DUP5
0x162 CALLDATACOPY
0x163 DUP3
0x164 ADD
0x165 SWAP2
0x166 POP
0x167 POP
0x168 POP
0x169 POP
0x16a POP
0x16b POP
0x16c SWAP2
0x16d SWAP1
0x16e POP
0x16f POP
0x170 PUSH2 0x3d4
0x173 JUMP
---
0x124: JUMPDEST 
0x125: V78 = 0x174
0x128: V79 = 0x4
0x12c: V80 = CALLDATALOAD 0x4
0x12e: V81 = 0x20
0x130: V82 = ADD 0x20 0x4
0x133: V83 = ADD 0x4 V80
0x135: V84 = CALLDATALOAD V83
0x137: V85 = 0x20
0x139: V86 = ADD 0x20 V83
0x13d: V87 = 0x1f
0x13f: V88 = ADD 0x1f V84
0x140: V89 = 0x20
0x144: V90 = DIV V88 0x20
0x145: V91 = MUL V90 0x20
0x146: V92 = 0x20
0x148: V93 = ADD 0x20 V91
0x149: V94 = 0x40
0x14b: V95 = M[0x40]
0x14e: V96 = ADD V95 V93
0x14f: V97 = 0x40
0x151: M[0x40] = V96
0x159: M[V95] = V84
0x15a: V98 = 0x20
0x15c: V99 = ADD 0x20 V95
0x162: CALLDATACOPY V99 V86 V84
0x164: V100 = ADD V99 V84
0x170: V101 = 0x3d4
0x173: JUMP 0x3d4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x174, V95]
Exit stack: [V11, 0x174, V95]

================================

Block 0x174
[0x174:0x191]
---
Predecessors: [0x40c]
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 DUP3
0x17a PUSH1 0x0
0x17c NOT
0x17d AND
0x17e PUSH1 0x0
0x180 NOT
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP2
0x188 POP
0x189 POP
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e SWAP2
0x18f SUB
0x190 SWAP1
0x191 RETURN
---
0x174: JUMPDEST 
0x175: V102 = 0x40
0x177: V103 = M[0x40]
0x17a: V104 = 0x0
0x17c: V105 = NOT 0x0
0x17d: V106 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V301
0x17e: V107 = 0x0
0x180: V108 = NOT 0x0
0x181: V109 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V106
0x183: M[V103] = V109
0x184: V110 = 0x20
0x186: V111 = ADD 0x20 V103
0x18a: V112 = 0x40
0x18c: V113 = M[0x40]
0x18f: V114 = SUB V111 V113
0x191: RETURN V113 V114
---
Entry stack: [V11, V301]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x6d]
Successors: [0x440]
---
0x192 JUMPDEST
0x193 PUSH2 0x19a
0x196 PUSH2 0x440
0x199 JUMP
---
0x192: JUMPDEST 
0x193: V115 = 0x19a
0x196: V116 = 0x440
0x199: JUMP 0x440
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x19a]
Exit stack: [V11, 0x19a]

================================

Block 0x19a
[0x19a:0x19b]
---
Predecessors: [0x4ee]
Successors: []
---
0x19a JUMPDEST
0x19b STOP
---
0x19a: JUMPDEST 
0x19b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19c
[0x19c:0x1b3]
---
Predecessors: [0x7a]
Successors: [0x1b4, 0x1c0]
---
0x19c JUMPDEST
0x19d PUSH1 0x1
0x19f PUSH1 0x0
0x1a1 SWAP1
0x1a2 SLOAD
0x1a3 SWAP1
0x1a4 PUSH2 0x100
0x1a7 EXP
0x1a8 SWAP1
0x1a9 DIV
0x1aa PUSH1 0xff
0x1ac AND
0x1ad ISZERO
0x1ae DUP1
0x1af ISZERO
0x1b0 PUSH2 0x1c0
0x1b3 JUMPI
---
0x19c: JUMPDEST 
0x19d: V117 = 0x1
0x19f: V118 = 0x0
0x1a2: V119 = S[0x1]
0x1a4: V120 = 0x100
0x1a7: V121 = EXP 0x100 0x0
0x1a9: V122 = DIV V119 0x1
0x1aa: V123 = 0xff
0x1ac: V124 = AND 0xff V122
0x1ad: V125 = ISZERO V124
0x1af: V126 = ISZERO V125
0x1b0: V127 = 0x1c0
0x1b3: JUMPI 0x1c0 V126
---
Entry stack: [V11, 0x94, V35]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, 0x94, V35, V125]

================================

Block 0x1b4
[0x1b4:0x1bf]
---
Predecessors: [0x19c]
Successors: [0x1c0]
---
0x1b4 POP
0x1b5 PUSH8 0xde0b6b3a7640000
0x1be CALLVALUE
0x1bf GT
---
0x1b5: V128 = 0xde0b6b3a7640000
0x1be: V129 = CALLVALUE
0x1bf: V130 = GT V129 0xde0b6b3a7640000
---
Entry stack: [V11, 0x94, V35, V125]
Stack pops: 1
Stack additions: [V130]
Exit stack: [V11, 0x94, V35, V130]

================================

Block 0x1c0
[0x1c0:0x1c5]
---
Predecessors: [0x19c, 0x1b4]
Successors: [0x1c6, 0x1d4]
---
0x1c0 JUMPDEST
0x1c1 DUP1
0x1c2 PUSH2 0x1d4
0x1c5 JUMPI
---
0x1c0: JUMPDEST 
0x1c2: V131 = 0x1d4
0x1c5: JUMPI 0x1d4 S0
---
Entry stack: [V11, 0x94, V35, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x94, V35, S0]

================================

Block 0x1c6
[0x1c6:0x1d3]
---
Predecessors: [0x1c0]
Successors: [0x1d4]
---
0x1c6 POP
0x1c7 PUSH1 0x0
0x1c9 PUSH1 0x1
0x1cb MUL
0x1cc PUSH1 0x0
0x1ce SLOAD
0x1cf PUSH1 0x0
0x1d1 NOT
0x1d2 AND
0x1d3 EQ
---
0x1c7: V132 = 0x0
0x1c9: V133 = 0x1
0x1cb: V134 = MUL 0x1 0x0
0x1cc: V135 = 0x0
0x1ce: V136 = S[0x0]
0x1cf: V137 = 0x0
0x1d1: V138 = NOT 0x0
0x1d2: V139 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V136
0x1d3: V140 = EQ V139 0x0
---
Entry stack: [V11, 0x94, V35, S0]
Stack pops: 1
Stack additions: [V140]
Exit stack: [V11, 0x94, V35, V140]

================================

Block 0x1d4
[0x1d4:0x1d9]
---
Predecessors: [0x1c0, 0x1c6]
Successors: [0x1da, 0x225]
---
0x1d4 JUMPDEST
0x1d5 ISZERO
0x1d6 PUSH2 0x225
0x1d9 JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V141 = ISZERO S0
0x1d6: V142 = 0x225
0x1d9: JUMPI 0x225 V141
---
Entry stack: [V11, 0x94, V35, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x94, V35]

================================

Block 0x1da
[0x1da:0x224]
---
Predecessors: [0x1d4]
Successors: [0x225]
---
0x1da DUP1
0x1db PUSH1 0x0
0x1dd DUP2
0x1de PUSH1 0x0
0x1e0 NOT
0x1e1 AND
0x1e2 SWAP1
0x1e3 SSTORE
0x1e4 POP
0x1e5 CALLER
0x1e6 PUSH1 0x1
0x1e8 DUP1
0x1e9 PUSH2 0x100
0x1ec EXP
0x1ed DUP2
0x1ee SLOAD
0x1ef DUP2
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 MUL
0x206 NOT
0x207 AND
0x208 SWAP1
0x209 DUP4
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f AND
0x220 MUL
0x221 OR
0x222 SWAP1
0x223 SSTORE
0x224 POP
---
0x1db: V143 = 0x0
0x1de: V144 = 0x0
0x1e0: V145 = NOT 0x0
0x1e1: V146 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V35
0x1e3: S[0x0] = V146
0x1e5: V147 = CALLER
0x1e6: V148 = 0x1
0x1e9: V149 = 0x100
0x1ec: V150 = EXP 0x100 0x1
0x1ee: V151 = S[0x1]
0x1f0: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V153 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x100
0x206: V154 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x207: V155 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V151
0x20a: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x220: V158 = MUL V157 0x100
0x221: V159 = OR V158 V155
0x223: S[0x1] = V159
---
Entry stack: [V11, 0x94, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x94, V35]

================================

Block 0x225
[0x225:0x227]
---
Predecessors: [0x1d4, 0x1da]
Successors: [0x94]
---
0x225 JUMPDEST
0x226 POP
0x227 JUMP
---
0x225: JUMPDEST 
0x227: JUMP 0x94
---
Entry stack: [V11, 0x94, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x228
[0x228:0x256]
---
Predecessors: [0x96]
Successors: [0x257, 0x2ae]
---
0x228 JUMPDEST
0x229 DUP2
0x22a DUP2
0x22b PUSH1 0x40
0x22d MLOAD
0x22e DUP1
0x22f DUP4
0x230 DUP4
0x231 DUP1
0x232 DUP3
0x233 DUP5
0x234 CALLDATACOPY
0x235 DUP3
0x236 ADD
0x237 SWAP2
0x238 POP
0x239 POP
0x23a SWAP3
0x23b POP
0x23c POP
0x23d POP
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 SWAP2
0x243 SUB
0x244 SWAP1
0x245 SHA3
0x246 PUSH1 0x0
0x248 NOT
0x249 AND
0x24a PUSH1 0x0
0x24c SLOAD
0x24d PUSH1 0x0
0x24f NOT
0x250 AND
0x251 EQ
0x252 ISZERO
0x253 PUSH2 0x2ae
0x256 JUMPI
---
0x228: JUMPDEST 
0x22b: V160 = 0x40
0x22d: V161 = M[0x40]
0x234: CALLDATACOPY V161 V47 V45
0x236: V162 = ADD V161 V45
0x23e: V163 = 0x40
0x240: V164 = M[0x40]
0x243: V165 = SUB V162 V164
0x245: V166 = SHA3 V164 V165
0x246: V167 = 0x0
0x248: V168 = NOT 0x0
0x249: V169 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V166
0x24a: V170 = 0x0
0x24c: V171 = S[0x0]
0x24d: V172 = 0x0
0x24f: V173 = NOT 0x0
0x250: V174 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V171
0x251: V175 = EQ V174 V169
0x252: V176 = ISZERO V175
0x253: V177 = 0x2ae
0x256: JUMPI 0x2ae V176
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x257
[0x257:0x2a8]
---
Predecessors: [0x228]
Successors: [0x2a9, 0x2ad]
---
0x257 CALLER
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e PUSH2 0x8fc
0x271 ADDRESS
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 BALANCE
0x289 SWAP1
0x28a DUP2
0x28b ISZERO
0x28c MUL
0x28d SWAP1
0x28e PUSH1 0x40
0x290 MLOAD
0x291 PUSH1 0x0
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 DUP4
0x298 SUB
0x299 DUP2
0x29a DUP6
0x29b DUP9
0x29c DUP9
0x29d CALL
0x29e SWAP4
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 ISZERO
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x257: V178 = CALLER
0x258: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x26e: V181 = 0x8fc
0x271: V182 = ADDRESS
0x272: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x288: V185 = BALANCE V184
0x28b: V186 = ISZERO V185
0x28c: V187 = MUL V186 0x8fc
0x28e: V188 = 0x40
0x290: V189 = M[0x40]
0x291: V190 = 0x0
0x293: V191 = 0x40
0x295: V192 = M[0x40]
0x298: V193 = SUB V189 V192
0x29d: V194 = CALL V187 V180 V185 V192 V193 V192 0x0
0x2a3: V195 = ISZERO V194
0x2a4: V196 = ISZERO V195
0x2a5: V197 = 0x2ad
0x2a8: JUMPI 0x2ad V196
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x257]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V198 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x2ad
[0x2ad:0x2ad]
---
Predecessors: [0x257]
Successors: [0x2ae]
---
0x2ad JUMPDEST
---
0x2ad: JUMPDEST 
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x228, 0x2ad]
Successors: [0xb7]
---
0x2ae JUMPDEST
0x2af POP
0x2b0 POP
0x2b1 JUMP
---
0x2ae: JUMPDEST 
0x2b1: JUMP 0xb7
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b2
[0x2b2:0x2c5]
---
Predecessors: [0xc4]
Successors: [0x2c6, 0x317]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x0
0x2b5 SLOAD
0x2b6 PUSH1 0x0
0x2b8 NOT
0x2b9 AND
0x2ba DUP2
0x2bb PUSH1 0x0
0x2bd NOT
0x2be AND
0x2bf EQ
0x2c0 DUP1
0x2c1 ISZERO
0x2c2 PUSH2 0x317
0x2c5 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V199 = 0x0
0x2b5: V200 = S[0x0]
0x2b6: V201 = 0x0
0x2b8: V202 = NOT 0x0
0x2b9: V203 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V200
0x2bb: V204 = 0x0
0x2bd: V205 = NOT 0x0
0x2be: V206 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V58
0x2bf: V207 = EQ V206 V203
0x2c1: V208 = ISZERO V207
0x2c2: V209 = 0x317
0x2c5: JUMPI 0x317 V208
---
Entry stack: [V11, 0xde, V58]
Stack pops: 1
Stack additions: [S0, V207]
Exit stack: [V11, 0xde, V58, V207]

================================

Block 0x2c6
[0x2c6:0x316]
---
Predecessors: [0x2b2]
Successors: [0x317]
---
0x2c6 POP
0x2c7 PUSH1 0x1
0x2c9 DUP1
0x2ca SWAP1
0x2cb SLOAD
0x2cc SWAP1
0x2cd PUSH2 0x100
0x2d0 EXP
0x2d1 SWAP1
0x2d2 DIV
0x2d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e8 AND
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff CALLER
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 EQ
---
0x2c7: V210 = 0x1
0x2cb: V211 = S[0x1]
0x2cd: V212 = 0x100
0x2d0: V213 = EXP 0x100 0x1
0x2d2: V214 = DIV V211 0x100
0x2d3: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x2e9: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2ff: V219 = CALLER
0x300: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x316: V222 = EQ V221 V218
---
Entry stack: [V11, 0xde, V58, V207]
Stack pops: 1
Stack additions: [V222]
Exit stack: [V11, 0xde, V58, V222]

================================

Block 0x317
[0x317:0x31c]
---
Predecessors: [0x2b2, 0x2c6]
Successors: [0x31d, 0x337]
---
0x317 JUMPDEST
0x318 ISZERO
0x319 PUSH2 0x337
0x31c JUMPI
---
0x317: JUMPDEST 
0x318: V223 = ISZERO S0
0x319: V224 = 0x337
0x31c: JUMPI 0x337 V223
---
Entry stack: [V11, 0xde, V58, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xde, V58]

================================

Block 0x31d
[0x31d:0x336]
---
Predecessors: [0x317]
Successors: [0x337]
---
0x31d PUSH1 0x1
0x31f DUP1
0x320 PUSH1 0x0
0x322 PUSH2 0x100
0x325 EXP
0x326 DUP2
0x327 SLOAD
0x328 DUP2
0x329 PUSH1 0xff
0x32b MUL
0x32c NOT
0x32d AND
0x32e SWAP1
0x32f DUP4
0x330 ISZERO
0x331 ISZERO
0x332 MUL
0x333 OR
0x334 SWAP1
0x335 SSTORE
0x336 POP
---
0x31d: V225 = 0x1
0x320: V226 = 0x0
0x322: V227 = 0x100
0x325: V228 = EXP 0x100 0x0
0x327: V229 = S[0x1]
0x329: V230 = 0xff
0x32b: V231 = MUL 0xff 0x1
0x32c: V232 = NOT 0xff
0x32d: V233 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V229
0x330: V234 = ISZERO 0x1
0x331: V235 = ISZERO 0x0
0x332: V236 = MUL 0x1 0x1
0x333: V237 = OR 0x1 V233
0x335: S[0x1] = V237
---
Entry stack: [V11, 0xde, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde, V58]

================================

Block 0x337
[0x337:0x339]
---
Predecessors: [0x317, 0x31d]
Successors: [0xde]
---
0x337 JUMPDEST
0x338 POP
0x339 JUMP
---
0x337: JUMPDEST 
0x339: JUMP 0xde
---
Entry stack: [V11, 0xde, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x33a
[0x33a:0x38f]
---
Predecessors: [0xeb]
Successors: [0x390, 0x3d1]
---
0x33a JUMPDEST
0x33b PUSH1 0x1
0x33d DUP1
0x33e SWAP1
0x33f SLOAD
0x340 SWAP1
0x341 PUSH2 0x100
0x344 EXP
0x345 SWAP1
0x346 DIV
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x372 AND
0x373 CALLER
0x374 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x389 AND
0x38a EQ
0x38b ISZERO
0x38c PUSH2 0x3d1
0x38f JUMPI
---
0x33a: JUMPDEST 
0x33b: V238 = 0x1
0x33f: V239 = S[0x1]
0x341: V240 = 0x100
0x344: V241 = EXP 0x100 0x1
0x346: V242 = DIV V239 0x100
0x347: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x35d: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x372: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x373: V247 = CALLER
0x374: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x389: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x38a: V250 = EQ V249 V246
0x38b: V251 = ISZERO V250
0x38c: V252 = 0x3d1
0x38f: JUMPI 0x3d1 V251
---
Entry stack: [V11, 0x117, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V70]

================================

Block 0x390
[0x390:0x3d0]
---
Predecessors: [0x33a]
Successors: [0x3d1]
---
0x390 DUP1
0x391 PUSH1 0x2
0x393 PUSH1 0x0
0x395 PUSH2 0x100
0x398 EXP
0x399 DUP2
0x39a SLOAD
0x39b DUP2
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 MUL
0x3b2 NOT
0x3b3 AND
0x3b4 SWAP1
0x3b5 DUP4
0x3b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cb AND
0x3cc MUL
0x3cd OR
0x3ce SWAP1
0x3cf SSTORE
0x3d0 POP
---
0x391: V253 = 0x2
0x393: V254 = 0x0
0x395: V255 = 0x100
0x398: V256 = EXP 0x100 0x0
0x39a: V257 = S[0x2]
0x39c: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V259 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3b2: V260 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b3: V261 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V257
0x3b6: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x3cc: V264 = MUL V263 0x1
0x3cd: V265 = OR V264 V261
0x3cf: S[0x2] = V265
---
Entry stack: [V11, 0x117, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x117, V70]

================================

Block 0x3d1
[0x3d1:0x3d3]
---
Predecessors: [0x33a, 0x390]
Successors: [0x117]
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 JUMP
---
0x3d1: JUMPDEST 
0x3d3: JUMP 0x117
---
Entry stack: [V11, 0x117, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d4
[0x3d4:0x3e6]
---
Predecessors: [0x124]
Successors: [0x3e7]
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x0
0x3d7 DUP2
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db DUP1
0x3dc DUP3
0x3dd DUP1
0x3de MLOAD
0x3df SWAP1
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 SWAP1
0x3e4 DUP1
0x3e5 DUP4
0x3e6 DUP4
---
0x3d4: JUMPDEST 
0x3d5: V266 = 0x0
0x3d8: V267 = 0x40
0x3da: V268 = M[0x40]
0x3de: V269 = M[V95]
0x3e0: V270 = 0x20
0x3e2: V271 = ADD 0x20 V95
---
Entry stack: [V11, 0x174, V95]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V268, V268, V271, V269, V269, V268, V271]
Exit stack: [V11, 0x174, V95, 0x0, V95, V268, V268, V271, V269, V269, V268, V271]

================================

Block 0x3e7
[0x3e7:0x3f1]
---
Predecessors: [0x3d4, 0x3f2]
Successors: [0x3f2, 0x40c]
---
0x3e7 JUMPDEST
0x3e8 PUSH1 0x20
0x3ea DUP4
0x3eb LT
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x40c
0x3f1 JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V272 = 0x20
0x3eb: V273 = LT S2 0x20
0x3ec: V274 = ISZERO V273
0x3ed: V275 = ISZERO V274
0x3ee: V276 = 0x40c
0x3f1: JUMPI 0x40c V275
---
Entry stack: [V11, 0x174, V95, 0x0, V95, V268, V268, V271, V269, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x174, V95, 0x0, V95, V268, V268, V271, V269, S2, S1, S0]

================================

Block 0x3f2
[0x3f2:0x40b]
---
Predecessors: [0x3e7]
Successors: [0x3e7]
---
0x3f2 DUP1
0x3f3 MLOAD
0x3f4 DUP3
0x3f5 MSTORE
0x3f6 PUSH1 0x20
0x3f8 DUP3
0x3f9 ADD
0x3fa SWAP2
0x3fb POP
0x3fc PUSH1 0x20
0x3fe DUP2
0x3ff ADD
0x400 SWAP1
0x401 POP
0x402 PUSH1 0x20
0x404 DUP4
0x405 SUB
0x406 SWAP3
0x407 POP
0x408 PUSH2 0x3e7
0x40b JUMP
---
0x3f3: V277 = M[S0]
0x3f5: M[S1] = V277
0x3f6: V278 = 0x20
0x3f9: V279 = ADD S1 0x20
0x3fc: V280 = 0x20
0x3ff: V281 = ADD S0 0x20
0x402: V282 = 0x20
0x405: V283 = SUB S2 0x20
0x408: V284 = 0x3e7
0x40b: JUMP 0x3e7
---
Entry stack: [V11, 0x174, V95, 0x0, V95, V268, V268, V271, V269, S2, S1, S0]
Stack pops: 3
Stack additions: [V283, V279, V281]
Exit stack: [V11, 0x174, V95, 0x0, V95, V268, V268, V271, V269, V283, V279, V281]

================================

Block 0x40c
[0x40c:0x43f]
---
Predecessors: [0x3e7]
Successors: [0x174]
---
0x40c JUMPDEST
0x40d PUSH1 0x1
0x40f DUP4
0x410 PUSH1 0x20
0x412 SUB
0x413 PUSH2 0x100
0x416 EXP
0x417 SUB
0x418 DUP1
0x419 NOT
0x41a DUP3
0x41b MLOAD
0x41c AND
0x41d DUP2
0x41e DUP5
0x41f MLOAD
0x420 AND
0x421 DUP1
0x422 DUP3
0x423 OR
0x424 DUP6
0x425 MSTORE
0x426 POP
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b POP
0x42c SWAP1
0x42d POP
0x42e ADD
0x42f SWAP2
0x430 POP
0x431 POP
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 SWAP2
0x437 SUB
0x438 SWAP1
0x439 SHA3
0x43a SWAP1
0x43b POP
0x43c SWAP2
0x43d SWAP1
0x43e POP
0x43f JUMP
---
0x40c: JUMPDEST 
0x40d: V285 = 0x1
0x410: V286 = 0x20
0x412: V287 = SUB 0x20 S2
0x413: V288 = 0x100
0x416: V289 = EXP 0x100 V287
0x417: V290 = SUB V289 0x1
0x419: V291 = NOT V290
0x41b: V292 = M[S0]
0x41c: V293 = AND V292 V291
0x41f: V294 = M[S1]
0x420: V295 = AND V294 V290
0x423: V296 = OR V293 V295
0x425: M[S1] = V296
0x42e: V297 = ADD V269 V268
0x432: V298 = 0x40
0x434: V299 = M[0x40]
0x437: V300 = SUB V297 V299
0x439: V301 = SHA3 V299 V300
0x43f: JUMP 0x174
---
Entry stack: [V11, 0x174, V95, 0x0, V95, V268, V268, V271, V269, S2, S1, S0]
Stack pops: 11
Stack additions: [V301]
Exit stack: [V11, V301]

================================

Block 0x440
[0x440:0x496]
---
Predecessors: [0x192]
Successors: [0x497, 0x4ee]
---
0x440 JUMPDEST
0x441 PUSH1 0x2
0x443 PUSH1 0x0
0x445 SWAP1
0x446 SLOAD
0x447 SWAP1
0x448 PUSH2 0x100
0x44b EXP
0x44c SWAP1
0x44d DIV
0x44e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x463 AND
0x464 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x479 AND
0x47a CALLER
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 EQ
0x492 ISZERO
0x493 PUSH2 0x4ee
0x496 JUMPI
---
0x440: JUMPDEST 
0x441: V302 = 0x2
0x443: V303 = 0x0
0x446: V304 = S[0x2]
0x448: V305 = 0x100
0x44b: V306 = EXP 0x100 0x0
0x44d: V307 = DIV V304 0x1
0x44e: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x463: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x464: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x479: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x47a: V312 = CALLER
0x47b: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x491: V315 = EQ V314 V311
0x492: V316 = ISZERO V315
0x493: V317 = 0x4ee
0x496: JUMPI 0x4ee V316
---
Entry stack: [V11, 0x19a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19a]

================================

Block 0x497
[0x497:0x4e8]
---
Predecessors: [0x440]
Successors: [0x4e9, 0x4ed]
---
0x497 CALLER
0x498 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ad AND
0x4ae PUSH2 0x8fc
0x4b1 ADDRESS
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 BALANCE
0x4c9 SWAP1
0x4ca DUP2
0x4cb ISZERO
0x4cc MUL
0x4cd SWAP1
0x4ce PUSH1 0x40
0x4d0 MLOAD
0x4d1 PUSH1 0x0
0x4d3 PUSH1 0x40
0x4d5 MLOAD
0x4d6 DUP1
0x4d7 DUP4
0x4d8 SUB
0x4d9 DUP2
0x4da DUP6
0x4db DUP9
0x4dc DUP9
0x4dd CALL
0x4de SWAP4
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 POP
0x4e3 ISZERO
0x4e4 ISZERO
0x4e5 PUSH2 0x4ed
0x4e8 JUMPI
---
0x497: V318 = CALLER
0x498: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x4ae: V321 = 0x8fc
0x4b1: V322 = ADDRESS
0x4b2: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x4c8: V325 = BALANCE V324
0x4cb: V326 = ISZERO V325
0x4cc: V327 = MUL V326 0x8fc
0x4ce: V328 = 0x40
0x4d0: V329 = M[0x40]
0x4d1: V330 = 0x0
0x4d3: V331 = 0x40
0x4d5: V332 = M[0x40]
0x4d8: V333 = SUB V329 V332
0x4dd: V334 = CALL V327 V320 V325 V332 V333 V332 0x0
0x4e3: V335 = ISZERO V334
0x4e4: V336 = ISZERO V335
0x4e5: V337 = 0x4ed
0x4e8: JUMPI 0x4ed V336
---
Entry stack: [V11, 0x19a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19a]

================================

Block 0x4e9
[0x4e9:0x4ec]
---
Predecessors: [0x497]
Successors: []
---
0x4e9 PUSH1 0x0
0x4eb DUP1
0x4ec REVERT
---
0x4e9: V338 = 0x0
0x4ec: REVERT 0x0 0x0
---
Entry stack: [V11, 0x19a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19a]

================================

Block 0x4ed
[0x4ed:0x4ed]
---
Predecessors: [0x497]
Successors: [0x4ee]
---
0x4ed JUMPDEST
---
0x4ed: JUMPDEST 
---
Entry stack: [V11, 0x19a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19a]

================================

Block 0x4ee
[0x4ee:0x4ef]
---
Predecessors: [0x440, 0x4ed]
Successors: [0x19a]
---
0x4ee JUMPDEST
0x4ef JUMP
---
0x4ee: JUMPDEST 
0x4ef: JUMP 0x19a
---
Entry stack: [V11, 0x19a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f0
[0x4f0:0x52b]
---
Predecessors: []
Successors: []
---
0x4f0 STOP
0x4f1 LOG1
0x4f2 PUSH6 0x627a7a723058
0x4f9 SHA3
0x4fa LOG4
0x4fb MISSING 0xd3
0x4fc LOG0
0x4fd MISSING 0xca
0x4fe SHL
0x4ff PUSH12 0x77a7d8ad0dcdc238e72fbb42
0x50c SWAP6
0x50d MISSING 0xdb
0x50e MISSING 0xa6
0x50f CALLDATACOPY
0x510 MISSING 0x1e
0x511 SWAP5
0x512 ADDRESS
0x513 SHR
0x514 LOG3
0x515 SWAP6
0x516 PUSH21 0x784fa60029
---
0x4f0: STOP 
0x4f1: LOG S0 S1 S2
0x4f2: V339 = 0x627a7a723058
0x4f9: V340 = SHA3 0x627a7a723058 S3
0x4fa: LOG V340 S4 S5 S6 S7 S8
0x4fb: MISSING 0xd3
0x4fc: LOG S0 S1
0x4fd: MISSING 0xca
0x4fe: V341 = SHL S0 S1
0x4ff: V342 = 0x77a7d8ad0dcdc238e72fbb42
0x50d: MISSING 0xdb
0x50e: MISSING 0xa6
0x50f: CALLDATACOPY S0 S1 S2
0x510: MISSING 0x1e
0x512: V343 = ADDRESS
0x513: V344 = SHR V343 S5
0x514: LOG V344 S1 S2 S3 S4
0x516: V345 = 0x784fa60029
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, V341, S2, S3, S4, S5, 0x77a7d8ad0dcdc238e72fbb42, 0x784fa60029, S11, S6, S7, S8, S9, S10, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x7a
Exit block: 0x94
Body: 0x7a, 0x94, 0x19c, 0x1b4, 0x1c0, 0x1c6, 0x1d4, 0x1da, 0x225

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x96
Exit block: 0xb7
Body: 0x96, 0xb7, 0x228, 0x257, 0x2a9, 0x2ad, 0x2ae

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xb9
Exit block: 0xde
Body: 0xb9, 0xc0, 0xc4, 0xde, 0x2b2, 0x2c6, 0x317, 0x31d, 0x337

Function 3:
Public function signature: 0x410c8005
Entry block: 0xe0
Exit block: 0x117
Body: 0xe0, 0xe7, 0xeb, 0x117, 0x33a, 0x390, 0x3d1

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x119
Exit block: 0x174
Body: 0x119, 0x120, 0x124, 0x174, 0x3d4, 0x3e7, 0x3f2, 0x40c

Function 5:
Public function signature: 0xbea948c8
Entry block: 0x192
Exit block: 0x19a
Body: 0x192, 0x19a, 0x440, 0x497, 0x4e9, 0x4ed, 0x4ee

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

