Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8c
0xa: JUMPI 0x8c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x8e]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xc8b29ae
0x3a EQ
0x3b PUSH2 0x8e
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xc8b29ae
0x3a: V12 = EQ 0xc8b29ae V10
0x3b: V13 = 0x8e
0x3e: JUMPI 0x8e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xb4]
---
0x3f DUP1
0x40 PUSH4 0x2b1e5016
0x45 EQ
0x46 PUSH2 0xb4
0x49 JUMPI
---
0x40: V14 = 0x2b1e5016
0x45: V15 = EQ 0x2b1e5016 V10
0x46: V16 = 0xb4
0x49: JUMPI 0xb4 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xc6]
---
0x4a DUP1
0x4b PUSH4 0x3bc58532
0x50 EQ
0x51 PUSH2 0xc6
0x54 JUMPI
---
0x4b: V17 = 0x3bc58532
0x50: V18 = EQ 0x3bc58532 V10
0x51: V19 = 0xc6
0x54: JUMPI 0xc6 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x118]
---
0x55 DUP1
0x56 PUSH4 0x77a1ec4b
0x5b EQ
0x5c PUSH2 0x118
0x5f JUMPI
---
0x56: V20 = 0x77a1ec4b
0x5b: V21 = EQ 0x77a1ec4b V10
0x5c: V22 = 0x118
0x5f: JUMPI 0x118 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x13e]
---
0x60 DUP1
0x61 PUSH4 0x7844ce81
0x66 EQ
0x67 PUSH2 0x13e
0x6a JUMPI
---
0x61: V23 = 0x7844ce81
0x66: V24 = EQ 0x7844ce81 V10
0x67: V25 = 0x13e
0x6a: JUMPI 0x13e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x164]
---
0x6b DUP1
0x6c PUSH4 0xbc7e8d3c
0x71 EQ
0x72 PUSH2 0x164
0x75 JUMPI
---
0x6c: V26 = 0xbc7e8d3c
0x71: V27 = EQ 0xbc7e8d3c V10
0x72: V28 = 0x164
0x75: JUMPI 0x164 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x18e]
---
0x76 DUP1
0x77 PUSH4 0xc80ec522
0x7c EQ
0x7d PUSH2 0x18e
0x80 JUMPI
---
0x77: V29 = 0xc80ec522
0x7c: V30 = EQ 0xc80ec522 V10
0x7d: V31 = 0x18e
0x80: JUMPI 0x18e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x1b8]
---
0x81 DUP1
0x82 PUSH4 0xd0e30db0
0x87 EQ
0x88 PUSH2 0x1b8
0x8b JUMPI
---
0x82: V32 = 0xd0e30db0
0x87: V33 = EQ 0xd0e30db0 V10
0x88: V34 = 0x1b8
0x8b: JUMPI 0x1b8 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: [0x0, 0x81]
Successors: []
---
0x8c JUMPDEST
0x8d INVALID
---
0x8c: JUMPDEST 
0x8d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8e
[0x8e:0x94]
---
Predecessors: [0xb]
Successors: [0x95, 0x96]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 ISZERO
0x91 PUSH2 0x96
0x94 JUMPI
---
0x8e: JUMPDEST 
0x8f: V35 = CALLVALUE
0x90: V36 = ISZERO V35
0x91: V37 = 0x96
0x94: JUMPI 0x96 V36
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x95
[0x95:0x95]
---
Predecessors: [0x8e]
Successors: []
---
0x95 INVALID
---
0x95: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0x8e]
Successors: [0x1c2]
---
0x96 JUMPDEST
0x97 PUSH2 0x9e
0x9a PUSH2 0x1c2
0x9d JUMP
---
0x96: JUMPDEST 
0x97: V38 = 0x9e
0x9a: V39 = 0x1c2
0x9d: JUMP 0x1c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x9e]
Exit stack: [V10, 0x9e]

================================

Block 0x9e
[0x9e:0xb3]
---
Predecessors: [0x1c2]
Successors: []
---
0x9e JUMPDEST
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 DUP1
0xa3 DUP3
0xa4 DUP2
0xa5 MSTORE
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 SWAP2
0xaa POP
0xab POP
0xac PUSH1 0x40
0xae MLOAD
0xaf DUP1
0xb0 SWAP2
0xb1 SUB
0xb2 SWAP1
0xb3 RETURN
---
0x9e: JUMPDEST 
0x9f: V40 = 0x40
0xa1: V41 = M[0x40]
0xa5: M[V41] = V127
0xa6: V42 = 0x20
0xa8: V43 = ADD 0x20 V41
0xac: V44 = 0x40
0xae: V45 = M[0x40]
0xb1: V46 = SUB V43 V45
0xb3: RETURN V45 V46
---
Entry stack: [V10, 0x9e, V127]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x9e]

================================

Block 0xb4
[0xb4:0xba]
---
Predecessors: [0x3f]
Successors: [0xbb, 0xbc]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 ISZERO
0xb7 PUSH2 0xbc
0xba JUMPI
---
0xb4: JUMPDEST 
0xb5: V47 = CALLVALUE
0xb6: V48 = ISZERO V47
0xb7: V49 = 0xbc
0xba: JUMPI 0xbc V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbb
[0xbb:0xbb]
---
Predecessors: [0xb4]
Successors: []
---
0xbb INVALID
---
0xbb: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb4]
Successors: [0x1c8]
---
0xbc JUMPDEST
0xbd PUSH2 0xc4
0xc0 PUSH2 0x1c8
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V50 = 0xc4
0xc0: V51 = 0x1c8
0xc3: JUMP 0x1c8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V10, 0xc4]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: []
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x4a]
Successors: [0xcd, 0xce]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xce
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V52 = CALLVALUE
0xc8: V53 = ISZERO V52
0xc9: V54 = 0xce
0xcc: JUMPI 0xce V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xcd]
---
Predecessors: [0xc6]
Successors: []
---
0xcd INVALID
---
0xcd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0xc6]
Successors: [0x2fe]
---
0xce JUMPDEST
0xcf PUSH2 0xd6
0xd2 PUSH2 0x2fe
0xd5 JUMP
---
0xce: JUMPDEST 
0xcf: V55 = 0xd6
0xd2: V56 = 0x2fe
0xd5: JUMP 0x2fe
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: [V10, 0xd6]

================================

Block 0xd6
[0xd6:0x117]
---
Predecessors: [0x2fe]
Successors: []
---
0xd6 JUMPDEST
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda DUP1
0xdb DUP3
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 DUP2
0x109 MSTORE
0x10a PUSH1 0x20
0x10c ADD
0x10d SWAP2
0x10e POP
0x10f POP
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 SWAP2
0x115 SUB
0x116 SWAP1
0x117 RETURN
---
0xd6: JUMPDEST 
0xd7: V57 = 0x40
0xd9: V58 = M[0x40]
0xdc: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0xf2: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x109: M[V58] = V62
0x10a: V63 = 0x20
0x10c: V64 = ADD 0x20 V58
0x110: V65 = 0x40
0x112: V66 = M[0x40]
0x115: V67 = SUB V64 V66
0x117: RETURN V66 V67
---
Entry stack: [V10, 0xd6, V222]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xd6]

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0x55]
Successors: [0x11f, 0x120]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x120
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V68 = CALLVALUE
0x11a: V69 = ISZERO V68
0x11b: V70 = 0x120
0x11e: JUMPI 0x120 V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0x118]
Successors: []
---
0x11f INVALID
---
0x11f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x118]
Successors: [0x324]
---
0x120 JUMPDEST
0x121 PUSH2 0x128
0x124 PUSH2 0x324
0x127 JUMP
---
0x120: JUMPDEST 
0x121: V71 = 0x128
0x124: V72 = 0x324
0x127: JUMP 0x324
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V10, 0x128]

================================

Block 0x128
[0x128:0x13d]
---
Predecessors: [0x347]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP1
0x12d DUP3
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP2
0x134 POP
0x135 POP
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a SWAP2
0x13b SUB
0x13c SWAP1
0x13d RETURN
---
0x128: JUMPDEST 
0x129: V73 = 0x40
0x12b: V74 = M[0x40]
0x12f: M[V74] = S0
0x130: V75 = 0x20
0x132: V76 = ADD 0x20 V74
0x136: V77 = 0x40
0x138: V78 = M[0x40]
0x13b: V79 = SUB V76 V78
0x13d: RETURN V78 V79
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x60]
Successors: [0x145, 0x146]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x146
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V80 = CALLVALUE
0x140: V81 = ISZERO V80
0x141: V82 = 0x146
0x144: JUMPI 0x146 V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x145
[0x145:0x145]
---
Predecessors: [0x13e]
Successors: []
---
0x145 INVALID
---
0x145: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x13e]
Successors: [0x34b]
---
0x146 JUMPDEST
0x147 PUSH2 0x14e
0x14a PUSH2 0x34b
0x14d JUMP
---
0x146: JUMPDEST 
0x147: V83 = 0x14e
0x14a: V84 = 0x34b
0x14d: JUMP 0x34b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14e]
Exit stack: [V10, 0x14e]

================================

Block 0x14e
[0x14e:0x163]
---
Predecessors: [0x34b]
Successors: []
---
0x14e JUMPDEST
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 DUP3
0x154 DUP2
0x155 MSTORE
0x156 PUSH1 0x20
0x158 ADD
0x159 SWAP2
0x15a POP
0x15b POP
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x14e: JUMPDEST 
0x14f: V85 = 0x40
0x151: V86 = M[0x40]
0x155: M[V86] = V239
0x156: V87 = 0x20
0x158: V88 = ADD 0x20 V86
0x15c: V89 = 0x40
0x15e: V90 = M[0x40]
0x161: V91 = SUB V88 V90
0x163: RETURN V90 V91
---
Entry stack: [V10, 0x14e, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x14e]

================================

Block 0x164
[0x164:0x16a]
---
Predecessors: [0x6b]
Successors: [0x16b, 0x16c]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 ISZERO
0x167 PUSH2 0x16c
0x16a JUMPI
---
0x164: JUMPDEST 
0x165: V92 = CALLVALUE
0x166: V93 = ISZERO V92
0x167: V94 = 0x16c
0x16a: JUMPI 0x16c V93
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16b
[0x16b:0x16b]
---
Predecessors: [0x164]
Successors: []
---
0x16b INVALID
---
0x16b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x164]
Successors: [0x351]
---
0x16c JUMPDEST
0x16d PUSH2 0x174
0x170 PUSH2 0x351
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V95 = 0x174
0x170: V96 = 0x351
0x173: JUMP 0x351
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x174]
Exit stack: [V10, 0x174]

================================

Block 0x174
[0x174:0x18d]
---
Predecessors: [0x370]
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 DUP3
0x17a ISZERO
0x17b ISZERO
0x17c ISZERO
0x17d ISZERO
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP2
0x184 POP
0x185 POP
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d RETURN
---
0x174: JUMPDEST 
0x175: V97 = 0x40
0x177: V98 = M[0x40]
0x17a: V99 = ISZERO {0x0, 0x1}
0x17b: V100 = ISZERO V99
0x17c: V101 = ISZERO V100
0x17d: V102 = ISZERO V101
0x17f: M[V98] = V102
0x180: V103 = 0x20
0x182: V104 = ADD 0x20 V98
0x186: V105 = 0x40
0x188: V106 = M[0x40]
0x18b: V107 = SUB V104 V106
0x18d: RETURN V106 V107
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x76]
Successors: [0x195, 0x196]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x196
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V108 = CALLVALUE
0x190: V109 = ISZERO V108
0x191: V110 = 0x196
0x194: JUMPI 0x196 V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x195
[0x195:0x195]
---
Predecessors: [0x18e]
Successors: []
---
0x195 INVALID
---
0x195: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x18e]
Successors: [0x373]
---
0x196 JUMPDEST
0x197 PUSH2 0x19e
0x19a PUSH2 0x373
0x19d JUMP
---
0x196: JUMPDEST 
0x197: V111 = 0x19e
0x19a: V112 = 0x373
0x19d: JUMP 0x373
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x19e]
Exit stack: [V10, 0x19e]

================================

Block 0x19e
[0x19e:0x1b7]
---
Predecessors: [0x373]
Successors: []
---
0x19e JUMPDEST
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 DUP3
0x1a4 ISZERO
0x1a5 ISZERO
0x1a6 ISZERO
0x1a7 ISZERO
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad SWAP2
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x19e: JUMPDEST 
0x19f: V113 = 0x40
0x1a1: V114 = M[0x40]
0x1a4: V115 = ISZERO V258
0x1a5: V116 = ISZERO V115
0x1a6: V117 = ISZERO V116
0x1a7: V118 = ISZERO V117
0x1a9: M[V114] = V118
0x1aa: V119 = 0x20
0x1ac: V120 = ADD 0x20 V114
0x1b0: V121 = 0x40
0x1b2: V122 = M[0x40]
0x1b5: V123 = SUB V120 V122
0x1b7: RETURN V122 V123
---
Entry stack: [V10, 0x19e, V258]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x19e]

================================

Block 0x1b8
[0x1b8:0x1bf]
---
Predecessors: [0x81]
Successors: [0x386]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x1c0
0x1bc PUSH2 0x386
0x1bf JUMP
---
0x1b8: JUMPDEST 
0x1b9: V124 = 0x1c0
0x1bc: V125 = 0x386
0x1bf: JUMP 0x386
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V10, 0x1c0]

================================

Block 0x1c0
[0x1c0:0x1c1]
---
Predecessors: [0x397]
Successors: []
---
0x1c0 JUMPDEST
0x1c1 STOP
---
0x1c0: JUMPDEST 
0x1c1: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c2
[0x1c2:0x1c7]
---
Predecessors: [0x96]
Successors: [0x9e]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x0
0x1c5 SLOAD
0x1c6 DUP2
0x1c7 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V126 = 0x0
0x1c5: V127 = S[0x0]
0x1c7: JUMP 0x9e
---
Entry stack: [V10, 0x9e]
Stack pops: 1
Stack additions: [S0, V127]
Exit stack: [V10, 0x9e, V127]

================================

Block 0x1c8
[0x1c8:0x21f]
---
Predecessors: [0xbc]
Successors: [0x220, 0x225]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x1
0x1cb PUSH1 0x0
0x1cd SWAP1
0x1ce SLOAD
0x1cf SWAP1
0x1d0 PUSH2 0x100
0x1d3 EXP
0x1d4 SWAP1
0x1d5 DIV
0x1d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1eb AND
0x1ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x201 AND
0x202 CALLER
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 AND
0x219 EQ
0x21a ISZERO
0x21b ISZERO
0x21c PUSH2 0x225
0x21f JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V128 = 0x1
0x1cb: V129 = 0x0
0x1ce: V130 = S[0x1]
0x1d0: V131 = 0x100
0x1d3: V132 = EXP 0x100 0x0
0x1d5: V133 = DIV V130 0x1
0x1d6: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x1ec: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x201: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x202: V138 = CALLER
0x203: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x219: V141 = EQ V140 V137
0x21a: V142 = ISZERO V141
0x21b: V143 = ISZERO V142
0x21c: V144 = 0x225
0x21f: JUMPI 0x225 V143
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x220
[0x220:0x224]
---
Predecessors: [0x1c8]
Successors: []
---
0x220 PUSH1 0x0
0x222 PUSH1 0x0
0x224 REVERT
---
0x220: V145 = 0x0
0x222: V146 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x225
[0x225:0x22f]
---
Predecessors: [0x1c8]
Successors: [0x230, 0x235]
---
0x225 JUMPDEST
0x226 PUSH1 0x0
0x228 SLOAD
0x229 NUMBER
0x22a LT
0x22b ISZERO
0x22c PUSH2 0x235
0x22f JUMPI
---
0x225: JUMPDEST 
0x226: V147 = 0x0
0x228: V148 = S[0x0]
0x229: V149 = NUMBER
0x22a: V150 = LT V149 V148
0x22b: V151 = ISZERO V150
0x22c: V152 = 0x235
0x22f: JUMPI 0x235 V151
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x230
[0x230:0x234]
---
Predecessors: [0x225]
Successors: []
---
0x230 PUSH1 0x0
0x232 PUSH1 0x0
0x234 REVERT
---
0x230: V153 = 0x0
0x232: V154 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x235
[0x235:0x24a]
---
Predecessors: [0x225]
Successors: [0x24b, 0x250]
---
0x235 JUMPDEST
0x236 PUSH1 0x3
0x238 PUSH1 0x0
0x23a SWAP1
0x23b SLOAD
0x23c SWAP1
0x23d PUSH2 0x100
0x240 EXP
0x241 SWAP1
0x242 DIV
0x243 PUSH1 0xff
0x245 AND
0x246 ISZERO
0x247 PUSH2 0x250
0x24a JUMPI
---
0x235: JUMPDEST 
0x236: V155 = 0x3
0x238: V156 = 0x0
0x23b: V157 = S[0x3]
0x23d: V158 = 0x100
0x240: V159 = EXP 0x100 0x0
0x242: V160 = DIV V157 0x1
0x243: V161 = 0xff
0x245: V162 = AND 0xff V160
0x246: V163 = ISZERO V162
0x247: V164 = 0x250
0x24a: JUMPI 0x250 V163
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x24b
[0x24b:0x24f]
---
Predecessors: [0x235]
Successors: []
---
0x24b PUSH1 0x0
0x24d PUSH1 0x0
0x24f REVERT
---
0x24b: V165 = 0x0
0x24d: V166 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x250
[0x250:0x25c]
---
Predecessors: [0x235]
Successors: [0x25d, 0x262]
---
0x250 JUMPDEST
0x251 PUSH1 0x0
0x253 PUSH1 0x2
0x255 SLOAD
0x256 GT
0x257 ISZERO
0x258 ISZERO
0x259 PUSH2 0x262
0x25c JUMPI
---
0x250: JUMPDEST 
0x251: V167 = 0x0
0x253: V168 = 0x2
0x255: V169 = S[0x2]
0x256: V170 = GT V169 0x0
0x257: V171 = ISZERO V170
0x258: V172 = ISZERO V171
0x259: V173 = 0x262
0x25c: JUMPI 0x262 V172
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x25d
[0x25d:0x261]
---
Predecessors: [0x250]
Successors: []
---
0x25d PUSH1 0x0
0x25f PUSH1 0x0
0x261 REVERT
---
0x25d: V174 = 0x0
0x25f: V175 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x262
[0x262:0x2fb]
---
Predecessors: [0x250]
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x1
0x265 PUSH1 0x3
0x267 PUSH1 0x0
0x269 PUSH2 0x100
0x26c EXP
0x26d DUP2
0x26e SLOAD
0x26f DUP2
0x270 PUSH1 0xff
0x272 MUL
0x273 NOT
0x274 AND
0x275 SWAP1
0x276 DUP4
0x277 ISZERO
0x278 ISZERO
0x279 MUL
0x27a OR
0x27b SWAP1
0x27c SSTORE
0x27d POP
0x27e PUSH1 0x0
0x280 PUSH1 0x2
0x282 DUP2
0x283 SWAP1
0x284 SSTORE
0x285 POP
0x286 PUSH32 0xb19183f24dc3d962470aed6aef737565168c37e29c6c3b024504225bff9d8a5f
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad DUP3
0x2ae ISZERO
0x2af ISZERO
0x2b0 ISZERO
0x2b1 ISZERO
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 SWAP2
0x2b8 POP
0x2b9 POP
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 LOG1
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0x0
0x2c6 SWAP1
0x2c7 SLOAD
0x2c8 SWAP1
0x2c9 PUSH2 0x100
0x2cc EXP
0x2cd SWAP1
0x2ce DIV
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb SELFDESTRUCT
---
0x262: JUMPDEST 
0x263: V176 = 0x1
0x265: V177 = 0x3
0x267: V178 = 0x0
0x269: V179 = 0x100
0x26c: V180 = EXP 0x100 0x0
0x26e: V181 = S[0x3]
0x270: V182 = 0xff
0x272: V183 = MUL 0xff 0x1
0x273: V184 = NOT 0xff
0x274: V185 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V181
0x277: V186 = ISZERO 0x1
0x278: V187 = ISZERO 0x0
0x279: V188 = MUL 0x1 0x1
0x27a: V189 = OR 0x1 V185
0x27c: S[0x3] = V189
0x27e: V190 = 0x0
0x280: V191 = 0x2
0x284: S[0x2] = 0x0
0x286: V192 = 0xb19183f24dc3d962470aed6aef737565168c37e29c6c3b024504225bff9d8a5f
0x2a7: V193 = 0x1
0x2a9: V194 = 0x40
0x2ab: V195 = M[0x40]
0x2ae: V196 = ISZERO 0x1
0x2af: V197 = ISZERO 0x0
0x2b0: V198 = ISZERO 0x1
0x2b1: V199 = ISZERO 0x0
0x2b3: M[V195] = 0x1
0x2b4: V200 = 0x20
0x2b6: V201 = ADD 0x20 V195
0x2ba: V202 = 0x40
0x2bc: V203 = M[0x40]
0x2bf: V204 = SUB V201 V203
0x2c1: LOG V203 V204 0xb19183f24dc3d962470aed6aef737565168c37e29c6c3b024504225bff9d8a5f
0x2c2: V205 = 0x1
0x2c4: V206 = 0x0
0x2c7: V207 = S[0x1]
0x2c9: V208 = 0x100
0x2cc: V209 = EXP 0x100 0x0
0x2ce: V210 = DIV V207 0x1
0x2cf: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x2e5: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x2fb: SELFDESTRUCT V214
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x2fc
[0x2fc:0x2fd]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x2fc JUMPDEST
0x2fd JUMP
---
0x2fc: JUMPDEST 
0x2fd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fe
[0x2fe:0x323]
---
Predecessors: [0xce]
Successors: [0xd6]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 PUSH1 0x0
0x303 SWAP1
0x304 SLOAD
0x305 SWAP1
0x306 PUSH2 0x100
0x309 EXP
0x30a SWAP1
0x30b DIV
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 DUP2
0x323 JUMP
---
0x2fe: JUMPDEST 
0x2ff: V215 = 0x1
0x301: V216 = 0x0
0x304: V217 = S[0x1]
0x306: V218 = 0x100
0x309: V219 = EXP 0x100 0x0
0x30b: V220 = DIV V217 0x1
0x30c: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x323: JUMP 0xd6
---
Entry stack: [V10, 0xd6]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V10, 0xd6, V222]

================================

Block 0x324
[0x324:0x33a]
---
Predecessors: [0x120]
Successors: [0x33b, 0x343]
---
0x324 JUMPDEST
0x325 PUSH1 0x0
0x327 PUSH1 0x0
0x329 NUMBER
0x32a PUSH1 0x0
0x32c SLOAD
0x32d SUB
0x32e SWAP1
0x32f POP
0x330 PUSH1 0x0
0x332 SLOAD
0x333 NUMBER
0x334 LT
0x335 ISZERO
0x336 ISZERO
0x337 PUSH2 0x343
0x33a JUMPI
---
0x324: JUMPDEST 
0x325: V223 = 0x0
0x327: V224 = 0x0
0x329: V225 = NUMBER
0x32a: V226 = 0x0
0x32c: V227 = S[0x0]
0x32d: V228 = SUB V227 V225
0x330: V229 = 0x0
0x332: V230 = S[0x0]
0x333: V231 = NUMBER
0x334: V232 = LT V231 V230
0x335: V233 = ISZERO V232
0x336: V234 = ISZERO V233
0x337: V235 = 0x343
0x33a: JUMPI 0x343 V234
---
Entry stack: [V10, 0x128]
Stack pops: 0
Stack additions: [0x0, V228]
Exit stack: [V10, 0x128, 0x0, V228]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x324]
Successors: [0x347]
---
0x33b PUSH1 0x0
0x33d SWAP2
0x33e POP
0x33f PUSH2 0x347
0x342 JUMP
---
0x33b: V236 = 0x0
0x33f: V237 = 0x347
0x342: JUMP 0x347
---
Entry stack: [V10, 0x128, 0x0, V228]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x128, 0x0, V228]

================================

Block 0x343
[0x343:0x346]
---
Predecessors: [0x324]
Successors: [0x347]
---
0x343 JUMPDEST
0x344 DUP1
0x345 SWAP2
0x346 POP
---
0x343: JUMPDEST 
---
Entry stack: [V10, 0x128, 0x0, V228]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x128, V228, V228]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x33b, 0x343]
Successors: [0x128]
---
0x347 JUMPDEST
0x348 POP
0x349 SWAP1
0x34a JUMP
---
0x347: JUMPDEST 
0x34a: JUMP 0x128
---
Entry stack: [V10, 0x128, S1, V228]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S1]

================================

Block 0x34b
[0x34b:0x350]
---
Predecessors: [0x146]
Successors: [0x14e]
---
0x34b JUMPDEST
0x34c PUSH1 0x2
0x34e SLOAD
0x34f DUP2
0x350 JUMP
---
0x34b: JUMPDEST 
0x34c: V238 = 0x2
0x34e: V239 = S[0x2]
0x350: JUMP 0x14e
---
Entry stack: [V10, 0x14e]
Stack pops: 1
Stack additions: [S0, V239]
Exit stack: [V10, 0x14e, V239]

================================

Block 0x351
[0x351:0x35d]
---
Predecessors: [0x16c]
Successors: [0x35e, 0x366]
---
0x351 JUMPDEST
0x352 PUSH1 0x0
0x354 PUSH1 0x0
0x356 SLOAD
0x357 NUMBER
0x358 LT
0x359 ISZERO
0x35a PUSH2 0x366
0x35d JUMPI
---
0x351: JUMPDEST 
0x352: V240 = 0x0
0x354: V241 = 0x0
0x356: V242 = S[0x0]
0x357: V243 = NUMBER
0x358: V244 = LT V243 V242
0x359: V245 = ISZERO V244
0x35a: V246 = 0x366
0x35d: JUMPI 0x366 V245
---
Entry stack: [V10, 0x174]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x174, 0x0]

================================

Block 0x35e
[0x35e:0x365]
---
Predecessors: [0x351]
Successors: [0x370]
---
0x35e PUSH1 0x0
0x360 SWAP1
0x361 POP
0x362 PUSH2 0x370
0x365 JUMP
---
0x35e: V247 = 0x0
0x362: V248 = 0x370
0x365: JUMP 0x370
---
Entry stack: [V10, 0x174, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x174, 0x0]

================================

Block 0x366
[0x366:0x36e]
---
Predecessors: [0x351]
Successors: [0x370]
---
0x366 JUMPDEST
0x367 PUSH1 0x1
0x369 SWAP1
0x36a POP
0x36b PUSH2 0x370
0x36e JUMP
---
0x366: JUMPDEST 
0x367: V249 = 0x1
0x36b: V250 = 0x370
0x36e: JUMP 0x370
---
Entry stack: [V10, 0x174, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x174, 0x1]

================================

Block 0x36f
[0x36f:0x36f]
---
Predecessors: []
Successors: [0x370]
---
0x36f JUMPDEST
---
0x36f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x370
[0x370:0x372]
---
Predecessors: [0x35e, 0x366, 0x36f]
Successors: [0x174]
---
0x370 JUMPDEST
0x371 SWAP1
0x372 JUMP
---
0x370: JUMPDEST 
0x372: JUMP 0x174
---
Entry stack: [V10, 0x174, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x373
[0x373:0x385]
---
Predecessors: [0x196]
Successors: [0x19e]
---
0x373 JUMPDEST
0x374 PUSH1 0x3
0x376 PUSH1 0x0
0x378 SWAP1
0x379 SLOAD
0x37a SWAP1
0x37b PUSH2 0x100
0x37e EXP
0x37f SWAP1
0x380 DIV
0x381 PUSH1 0xff
0x383 AND
0x384 DUP2
0x385 JUMP
---
0x373: JUMPDEST 
0x374: V251 = 0x3
0x376: V252 = 0x0
0x379: V253 = S[0x3]
0x37b: V254 = 0x100
0x37e: V255 = EXP 0x100 0x0
0x380: V256 = DIV V253 0x1
0x381: V257 = 0xff
0x383: V258 = AND 0xff V256
0x385: JUMP 0x19e
---
Entry stack: [V10, 0x19e]
Stack pops: 1
Stack additions: [S0, V258]
Exit stack: [V10, 0x19e, V258]

================================

Block 0x386
[0x386:0x396]
---
Predecessors: [0x1b8]
Successors: [0x397]
---
0x386 JUMPDEST
0x387 CALLVALUE
0x388 PUSH1 0x2
0x38a PUSH1 0x0
0x38c DUP3
0x38d DUP3
0x38e SLOAD
0x38f ADD
0x390 SWAP3
0x391 POP
0x392 POP
0x393 DUP2
0x394 SWAP1
0x395 SSTORE
0x396 POP
---
0x386: JUMPDEST 
0x387: V259 = CALLVALUE
0x388: V260 = 0x2
0x38a: V261 = 0x0
0x38e: V262 = S[0x2]
0x38f: V263 = ADD V262 V259
0x395: S[0x2] = V263
---
Entry stack: [V10, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c0]

================================

Block 0x397
[0x397:0x398]
---
Predecessors: [0x386]
Successors: [0x1c0]
---
0x397 JUMPDEST
0x398 JUMP
---
0x397: JUMPDEST 
0x398: JUMP 0x1c0
---
Entry stack: [V10, 0x1c0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x399
[0x399:0x3cc]
---
Predecessors: []
Successors: []
---
0x399 STOP
0x39a LOG1
0x39b PUSH6 0x627a7a723058
0x3a2 SHA3
0x3a3 NOT
0x3a4 MISSING 0xe8
0x3a5 MISSING 0xde
0x3a6 DUP7
0x3a7 LOG2
0x3a8 PUSH8 0xb24d5fb05ae4d1f1
0x3b1 MISSING 0x28
0x3b2 PUSH26 0x49f860c9117ba2d608dd94a1c70553890029
---
0x399: STOP 
0x39a: LOG S0 S1 S2
0x39b: V264 = 0x627a7a723058
0x3a2: V265 = SHA3 0x627a7a723058 S3
0x3a3: V266 = NOT V265
0x3a4: MISSING 0xe8
0x3a5: MISSING 0xde
0x3a7: LOG S6 S0 S1 S2
0x3a8: V267 = 0xb24d5fb05ae4d1f1
0x3b1: MISSING 0x28
0x3b2: V268 = 0x49f860c9117ba2d608dd94a1c70553890029
---
Entry stack: []
Stack pops: 0
Stack additions: [V266, 0xb24d5fb05ae4d1f1, S3, S4, S5, S6, 0x49f860c9117ba2d608dd94a1c70553890029]
Exit stack: []

================================

Function 0:
Public function signature: 0xc8b29ae
Entry block: 0x8e
Exit block: 0x9e
Body: 0x8e, 0x95, 0x96, 0x9e, 0x1c2

Function 1:
Public function signature: 0x2b1e5016
Entry block: 0xb4
Exit block: 0x262
Body: 0xb4, 0xbb, 0xbc, 0x1c8, 0x220, 0x225, 0x230, 0x235, 0x24b, 0x250, 0x25d, 0x262

Function 2:
Public function signature: 0x3bc58532
Entry block: 0xc6
Exit block: 0xd6
Body: 0xc6, 0xcd, 0xce, 0xd6, 0x2fe

Function 3:
Public function signature: 0x77a1ec4b
Entry block: 0x118
Exit block: 0x128
Body: 0x118, 0x11f, 0x120, 0x128, 0x324, 0x33b, 0x343, 0x347

Function 4:
Public function signature: 0x7844ce81
Entry block: 0x13e
Exit block: 0x14e
Body: 0x13e, 0x145, 0x146, 0x14e, 0x34b

Function 5:
Public function signature: 0xbc7e8d3c
Entry block: 0x164
Exit block: 0x174
Body: 0x164, 0x16b, 0x16c, 0x174, 0x351, 0x35e, 0x366, 0x370

Function 6:
Public function signature: 0xc80ec522
Entry block: 0x18e
Exit block: 0x19e
Body: 0x18e, 0x195, 0x196, 0x19e, 0x373

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1b8
Exit block: 0x1c0
Body: 0x1b8, 0x1c0, 0x386, 0x397

Function 8:
Public fallback function
Entry block: 0x8c
Exit block: 0x8c
Body: 0x8c

