Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x10f01eba
0x3c EQ
0x3d PUSH2 0x7f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x10f01eba
0x3c: V13 = EQ 0x10f01eba V11
0x3d: V14 = 0x7f
0x40: JUMPI 0x7f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd6]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xd6
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xd6
0x4b: JUMPI 0xd6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xed]
---
0x4c DUP1
0x4d PUSH4 0x6e7d3025
0x52 EQ
0x53 PUSH2 0xed
0x56 JUMPI
---
0x4d: V18 = 0x6e7d3025
0x52: V19 = EQ 0x6e7d3025 V11
0x53: V20 = 0xed
0x56: JUMPI 0xed V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x168]
---
0x57 DUP1
0x58 PUSH4 0xa5ae65ba
0x5d EQ
0x5e PUSH2 0x168
0x61 JUMPI
---
0x58: V21 = 0xa5ae65ba
0x5d: V22 = EQ 0xa5ae65ba V11
0x5e: V23 = 0x168
0x61: JUMPI 0x168 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x193]
---
0x62 DUP1
0x63 PUSH4 0xd0e30db0
0x68 EQ
0x69 PUSH2 0x193
0x6c JUMPI
---
0x63: V24 = 0xd0e30db0
0x68: V25 = EQ 0xd0e30db0 V11
0x69: V26 = 0x193
0x6c: JUMPI 0x193 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x7a]
---
Predecessors: [0x0, 0x62]
Successors: [0x1b5]
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 CALLVALUE
0x71 SWAP1
0x72 POP
0x73 PUSH2 0x7b
0x76 DUP2
0x77 PUSH2 0x1b5
0x7a JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x70: V28 = CALLVALUE
0x73: V29 = 0x7b
0x77: V30 = 0x1b5
0x7a: JUMP 0x1b5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28, 0x7b, V28]
Exit stack: [V11, V28, 0x7b, V28]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x306]
Successors: []
---
0x7b JUMPDEST
0x7c POP
0x7d POP
0x7e STOP
---
0x7b: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V11, 0x19b, S2, S1, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x19b, S2]

================================

Block 0x7f
[0x7f:0x86]
---
Predecessors: [0xd]
Successors: [0x87, 0x8b]
---
0x7f JUMPDEST
0x80 CALLVALUE
0x81 DUP1
0x82 ISZERO
0x83 PUSH2 0x8b
0x86 JUMPI
---
0x7f: JUMPDEST 
0x80: V31 = CALLVALUE
0x82: V32 = ISZERO V31
0x83: V33 = 0x8b
0x86: JUMPI 0x8b V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x87
[0x87:0x8a]
---
Predecessors: [0x7f]
Successors: []
---
0x87 PUSH1 0x0
0x89 DUP1
0x8a REVERT
---
0x87: V34 = 0x0
0x8a: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x8b
[0x8b:0xbf]
---
Predecessors: [0x7f]
Successors: [0x329]
---
0x8b JUMPDEST
0x8c POP
0x8d PUSH2 0xc0
0x90 PUSH1 0x4
0x92 DUP1
0x93 CALLDATASIZE
0x94 SUB
0x95 DUP2
0x96 ADD
0x97 SWAP1
0x98 DUP1
0x99 DUP1
0x9a CALLDATALOAD
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 SWAP1
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP1
0xb6 SWAP3
0xb7 SWAP2
0xb8 SWAP1
0xb9 POP
0xba POP
0xbb POP
0xbc PUSH2 0x329
0xbf JUMP
---
0x8b: JUMPDEST 
0x8d: V35 = 0xc0
0x90: V36 = 0x4
0x93: V37 = CALLDATASIZE
0x94: V38 = SUB V37 0x4
0x96: V39 = ADD 0x4 V38
0x9a: V40 = CALLDATALOAD 0x4
0x9b: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xb2: V43 = 0x20
0xb4: V44 = ADD 0x20 0x4
0xbc: V45 = 0x329
0xbf: JUMP 0x329
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0xc0, V42]
Exit stack: [V11, 0xc0, V42]

================================

Block 0xc0
[0xc0:0xd5]
---
Predecessors: [0x329]
Successors: []
---
0xc0 JUMPDEST
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 DUP3
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP2
0xcc POP
0xcd POP
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP1
0xd2 SWAP2
0xd3 SUB
0xd4 SWAP1
0xd5 RETURN
---
0xc0: JUMPDEST 
0xc1: V46 = 0x40
0xc3: V47 = M[0x40]
0xc7: M[V47] = V253
0xc8: V48 = 0x20
0xca: V49 = ADD 0x20 V47
0xce: V50 = 0x40
0xd0: V51 = M[0x40]
0xd3: V52 = SUB V49 V51
0xd5: RETURN V51 V52
---
Entry stack: [V11, 0xc0, V253]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc0]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0x41]
Successors: [0xde, 0xe2]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 DUP1
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd6: JUMPDEST 
0xd7: V53 = CALLVALUE
0xd9: V54 = ISZERO V53
0xda: V55 = 0xe2
0xdd: JUMPI 0xe2 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V53]
Exit stack: [V11, V53]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd6]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V56 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V53]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0xd6]
Successors: [0x341]
---
0xe2 JUMPDEST
0xe3 POP
0xe4 PUSH2 0xeb
0xe7 PUSH2 0x341
0xea JUMP
---
0xe2: JUMPDEST 
0xe4: V57 = 0xeb
0xe7: V58 = 0x341
0xea: JUMP 0x341
---
Entry stack: [V11, V53]
Stack pops: 1
Stack additions: [0xeb]
Exit stack: [V11, 0xeb]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: [0x507]
Successors: []
---
0xeb JUMPDEST
0xec STOP
---
0xeb: JUMPDEST 
0xec: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0x4c]
Successors: [0xf5, 0xf9]
---
0xed JUMPDEST
0xee CALLVALUE
0xef DUP1
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xed: JUMPDEST 
0xee: V59 = CALLVALUE
0xf0: V60 = ISZERO V59
0xf1: V61 = 0xf9
0xf4: JUMPI 0xf9 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V59]
Exit stack: [V11, V59]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xed]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V62 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V59]

================================

Block 0xf9
[0xf9:0x117]
---
Predecessors: [0xed]
Successors: [0x50e]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH2 0x118
0xfe PUSH1 0x4
0x100 DUP1
0x101 CALLDATASIZE
0x102 SUB
0x103 DUP2
0x104 ADD
0x105 SWAP1
0x106 DUP1
0x107 DUP1
0x108 CALLDATALOAD
0x109 SWAP1
0x10a PUSH1 0x20
0x10c ADD
0x10d SWAP1
0x10e SWAP3
0x10f SWAP2
0x110 SWAP1
0x111 POP
0x112 POP
0x113 POP
0x114 PUSH2 0x50e
0x117 JUMP
---
0xf9: JUMPDEST 
0xfb: V63 = 0x118
0xfe: V64 = 0x4
0x101: V65 = CALLDATASIZE
0x102: V66 = SUB V65 0x4
0x104: V67 = ADD 0x4 V66
0x108: V68 = CALLDATALOAD 0x4
0x10a: V69 = 0x20
0x10c: V70 = ADD 0x20 0x4
0x114: V71 = 0x50e
0x117: JUMP 0x50e
---
Entry stack: [V11, V59]
Stack pops: 1
Stack additions: [0x118, V68]
Exit stack: [V11, 0x118, V68]

================================

Block 0x118
[0x118:0x167]
---
Predecessors: [0x50e]
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b MLOAD
0x11c DUP1
0x11d DUP5
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 AND
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a DUP2
0x14b MSTORE
0x14c PUSH1 0x20
0x14e ADD
0x14f DUP4
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 DUP3
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP4
0x15c POP
0x15d POP
0x15e POP
0x15f POP
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 SWAP2
0x165 SUB
0x166 SWAP1
0x167 RETURN
---
0x118: JUMPDEST 
0x119: V72 = 0x40
0x11b: V73 = M[0x40]
0x11e: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x134: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x14b: M[V73] = V77
0x14c: V78 = 0x20
0x14e: V79 = ADD 0x20 V73
0x151: M[V79] = V372
0x152: V80 = 0x20
0x154: V81 = ADD 0x20 V79
0x157: M[V81] = V375
0x158: V82 = 0x20
0x15a: V83 = ADD 0x20 V81
0x160: V84 = 0x40
0x162: V85 = M[0x40]
0x165: V86 = SUB V83 V85
0x167: RETURN V85 V86
---
Entry stack: [V11, 0x118, V369, V372, V375]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x118]

================================

Block 0x168
[0x168:0x16f]
---
Predecessors: [0x57]
Successors: [0x170, 0x174]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a DUP1
0x16b ISZERO
0x16c PUSH2 0x174
0x16f JUMPI
---
0x168: JUMPDEST 
0x169: V87 = CALLVALUE
0x16b: V88 = ISZERO V87
0x16c: V89 = 0x174
0x16f: JUMPI 0x174 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x170
[0x170:0x173]
---
Predecessors: [0x168]
Successors: []
---
0x170 PUSH1 0x0
0x172 DUP1
0x173 REVERT
---
0x170: V90 = 0x0
0x173: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x174
[0x174:0x17c]
---
Predecessors: [0x168]
Successors: [0x558]
---
0x174 JUMPDEST
0x175 POP
0x176 PUSH2 0x17d
0x179 PUSH2 0x558
0x17c JUMP
---
0x174: JUMPDEST 
0x176: V91 = 0x17d
0x179: V92 = 0x558
0x17c: JUMP 0x558
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x17d]
Exit stack: [V11, 0x17d]

================================

Block 0x17d
[0x17d:0x192]
---
Predecessors: [0x617]
Successors: []
---
0x17d JUMPDEST
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 DUP3
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP2
0x189 POP
0x18a POP
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f SWAP2
0x190 SUB
0x191 SWAP1
0x192 RETURN
---
0x17d: JUMPDEST 
0x17e: V93 = 0x40
0x180: V94 = M[0x40]
0x184: M[V94] = V424
0x185: V95 = 0x20
0x187: V96 = ADD 0x20 V94
0x18b: V97 = 0x40
0x18d: V98 = M[0x40]
0x190: V99 = SUB V96 V98
0x192: RETURN V98 V99
---
Entry stack: [V11, V424]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x193
[0x193:0x19a]
---
Predecessors: [0x62]
Successors: [0x638]
---
0x193 JUMPDEST
0x194 PUSH2 0x19b
0x197 PUSH2 0x638
0x19a JUMP
---
0x193: JUMPDEST 
0x194: V100 = 0x19b
0x197: V101 = 0x638
0x19a: JUMP 0x638
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x19b]
Exit stack: [V11, 0x19b]

================================

Block 0x19b
[0x19b:0x1b4]
---
Predecessors: [0x647]
Successors: []
---
0x19b JUMPDEST
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 DUP3
0x1a1 ISZERO
0x1a2 ISZERO
0x1a3 ISZERO
0x1a4 ISZERO
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP2
0x1ab POP
0x1ac POP
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 SWAP2
0x1b2 SUB
0x1b3 SWAP1
0x1b4 RETURN
---
0x19b: JUMPDEST 
0x19c: V102 = 0x40
0x19e: V103 = M[0x40]
0x1a1: V104 = ISZERO 0x1
0x1a2: V105 = ISZERO 0x0
0x1a3: V106 = ISZERO 0x1
0x1a4: V107 = ISZERO 0x0
0x1a6: M[V103] = 0x1
0x1a7: V108 = 0x20
0x1a9: V109 = ADD 0x20 V103
0x1ad: V110 = 0x40
0x1af: V111 = M[0x40]
0x1b2: V112 = SUB V109 V111
0x1b4: RETURN V111 V112
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b5
[0x1b5:0x1e6]
---
Predecessors: [0x6d, 0x638]
Successors: [0x650]
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc PUSH1 0x64
0x1be PUSH2 0x1e7
0x1c1 PUSH1 0x1
0x1c3 PUSH1 0x0
0x1c5 PUSH1 0x1
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 PUSH1 0x0
0x1d4 SHA3
0x1d5 PUSH1 0x2
0x1d7 ADD
0x1d8 SLOAD
0x1d9 DUP8
0x1da PUSH2 0x650
0x1dd SWAP1
0x1de SWAP2
0x1df SWAP1
0x1e0 PUSH4 0xffffffff
0x1e5 AND
0x1e6 JUMP
---
0x1b5: JUMPDEST 
0x1b6: V113 = 0x0
0x1b9: V114 = 0x0
0x1bc: V115 = 0x64
0x1be: V116 = 0x1e7
0x1c1: V117 = 0x1
0x1c3: V118 = 0x0
0x1c5: V119 = 0x1
0x1c8: M[0x0] = 0x1
0x1c9: V120 = 0x20
0x1cb: V121 = ADD 0x20 0x0
0x1ce: M[0x20] = 0x1
0x1cf: V122 = 0x20
0x1d1: V123 = ADD 0x20 0x20
0x1d2: V124 = 0x0
0x1d4: V125 = SHA3 0x0 0x40
0x1d5: V126 = 0x2
0x1d7: V127 = ADD 0x2 V125
0x1d8: V128 = S[V127]
0x1da: V129 = 0x650
0x1e0: V130 = 0xffffffff
0x1e5: V131 = AND 0xffffffff 0x650
0x1e6: JUMP 0x650
---
Entry stack: [V11, 0x19b, S3, S2, {0x7b, 0x647}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x1e7, S0, V128]
Exit stack: [V11, 0x19b, S3, S2, {0x7b, 0x647}, S0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x1e7, S0, V128]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x6ee]
Successors: [0x1ef, 0x1f0]
---
0x1e7 JUMPDEST
0x1e8 DUP2
0x1e9 ISZERO
0x1ea ISZERO
0x1eb PUSH2 0x1f0
0x1ee JUMPI
---
0x1e7: JUMPDEST 
0x1e9: V132 = ISZERO 0x64
0x1ea: V133 = ISZERO 0x0
0x1eb: V134 = 0x1f0
0x1ee: JUMPI 0x1f0 0x1
---
Entry stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]

================================

Block 0x1ef
[0x1ef:0x1ef]
---
Predecessors: [0x1e7]
Successors: []
---
0x1ef INVALID
---
0x1ef: INVALID 
---
Entry stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]

================================

Block 0x1f0
[0x1f0:0x21e]
---
Predecessors: [0x1e7]
Successors: [0x650]
---
0x1f0 JUMPDEST
0x1f1 DIV
0x1f2 SWAP3
0x1f3 POP
0x1f4 PUSH1 0x64
0x1f6 PUSH2 0x21f
0x1f9 PUSH1 0x1
0x1fb PUSH1 0x0
0x1fd PUSH1 0x2
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 SWAP1
0x205 DUP2
0x206 MSTORE
0x207 PUSH1 0x20
0x209 ADD
0x20a PUSH1 0x0
0x20c SHA3
0x20d PUSH1 0x2
0x20f ADD
0x210 SLOAD
0x211 DUP8
0x212 PUSH2 0x650
0x215 SWAP1
0x216 SWAP2
0x217 SWAP1
0x218 PUSH4 0xffffffff
0x21d AND
0x21e JUMP
---
0x1f0: JUMPDEST 
0x1f1: V135 = DIV S0 0x64
0x1f4: V136 = 0x64
0x1f6: V137 = 0x21f
0x1f9: V138 = 0x1
0x1fb: V139 = 0x0
0x1fd: V140 = 0x2
0x200: M[0x0] = 0x2
0x201: V141 = 0x20
0x203: V142 = ADD 0x20 0x0
0x206: M[0x20] = 0x1
0x207: V143 = 0x20
0x209: V144 = ADD 0x20 0x20
0x20a: V145 = 0x0
0x20c: V146 = SHA3 0x0 0x40
0x20d: V147 = 0x2
0x20f: V148 = ADD 0x2 V146
0x210: V149 = S[V148]
0x212: V150 = 0x650
0x218: V151 = 0xffffffff
0x21d: V152 = AND 0xffffffff 0x650
0x21e: JUMP 0x650
---
Entry stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]
Stack pops: 7
Stack additions: [S6, S5, V135, S3, S2, 0x64, 0x21f, S6, V149]
Exit stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, V135, 0x0, 0x0, 0x64, 0x21f, S6, V149]

================================

Block 0x21f
[0x21f:0x226]
---
Predecessors: [0x6ee]
Successors: [0x227, 0x228]
---
0x21f JUMPDEST
0x220 DUP2
0x221 ISZERO
0x222 ISZERO
0x223 PUSH2 0x228
0x226 JUMPI
---
0x21f: JUMPDEST 
0x221: V153 = ISZERO 0x64
0x222: V154 = ISZERO 0x0
0x223: V155 = 0x228
0x226: JUMPI 0x228 0x1
---
Entry stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]

================================

Block 0x227
[0x227:0x227]
---
Predecessors: [0x21f]
Successors: []
---
0x227 INVALID
---
0x227: INVALID 
---
Entry stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]

================================

Block 0x228
[0x228:0x241]
---
Predecessors: [0x21f]
Successors: [0x6f4]
---
0x228 JUMPDEST
0x229 DIV
0x22a SWAP2
0x22b POP
0x22c PUSH2 0x250
0x22f DUP3
0x230 PUSH2 0x242
0x233 DUP6
0x234 DUP9
0x235 PUSH2 0x6f4
0x238 SWAP1
0x239 SWAP2
0x23a SWAP1
0x23b PUSH4 0xffffffff
0x240 AND
0x241 JUMP
---
0x228: JUMPDEST 
0x229: V156 = DIV S0 0x64
0x22c: V157 = 0x250
0x230: V158 = 0x242
0x235: V159 = 0x6f4
0x23b: V160 = 0xffffffff
0x240: V161 = AND 0xffffffff 0x6f4
0x241: JUMP 0x6f4
---
Entry stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, 0x0, 0x0, 0x64, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, V156, S2, 0x250, V156, 0x242, S6, S4]
Exit stack: [V11, 0x19b, S9, S8, {0x7b, 0x647}, S6, 0x0, S4, V156, 0x0, 0x250, V156, 0x242, S6, S4]

================================

Block 0x242
[0x242:0x24f]
---
Predecessors: [0x76e]
Successors: [0x6f4]
---
0x242 JUMPDEST
0x243 PUSH2 0x6f4
0x246 SWAP1
0x247 SWAP2
0x248 SWAP1
0x249 PUSH4 0xffffffff
0x24e AND
0x24f JUMP
---
0x242: JUMPDEST 
0x243: V162 = 0x6f4
0x249: V163 = 0xffffffff
0x24e: V164 = AND 0xffffffff 0x6f4
0x24f: JUMP 0x6f4
---
Entry stack: [V11, 0x19b, S10, S9, S8, S7, {0x0, 0x7b, 0x647}, S5, S4, S3, S2, S1, V485]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, 0x19b, S10, S9, S8, S7, {0x0, 0x7b, 0x647}, S5, S4, S3, S2, V485, S1]

================================

Block 0x250
[0x250:0x27b]
---
Predecessors: [0x76e]
Successors: [0x779]
---
0x250 JUMPDEST
0x251 SWAP1
0x252 POP
0x253 PUSH2 0x27c
0x256 PUSH1 0x1
0x258 PUSH1 0x0
0x25a PUSH1 0x1
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 ADD
0x261 SWAP1
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 PUSH1 0x0
0x269 SHA3
0x26a PUSH1 0x1
0x26c ADD
0x26d SLOAD
0x26e DUP5
0x26f PUSH2 0x779
0x272 SWAP1
0x273 SWAP2
0x274 SWAP1
0x275 PUSH4 0xffffffff
0x27a AND
0x27b JUMP
---
0x250: JUMPDEST 
0x253: V165 = 0x27c
0x256: V166 = 0x1
0x258: V167 = 0x0
0x25a: V168 = 0x1
0x25d: M[0x0] = 0x1
0x25e: V169 = 0x20
0x260: V170 = ADD 0x20 0x0
0x263: M[0x20] = 0x1
0x264: V171 = 0x20
0x266: V172 = ADD 0x20 0x20
0x267: V173 = 0x0
0x269: V174 = SHA3 0x0 0x40
0x26a: V175 = 0x1
0x26c: V176 = ADD 0x1 V174
0x26d: V177 = S[V176]
0x26f: V178 = 0x779
0x275: V179 = 0xffffffff
0x27a: V180 = AND 0xffffffff 0x779
0x27b: JUMP 0x779
---
Entry stack: [V11, 0x19b, S10, S9, S8, S7, {0x0, 0x7b, 0x647}, S5, S4, S3, S2, S1, V485]
Stack pops: 4
Stack additions: [S3, S2, S0, 0x27c, S3, V177]
Exit stack: [V11, 0x19b, S10, S9, S8, S7, {0x0, 0x7b, 0x647}, S5, S4, S3, S2, V485, 0x27c, S3, V177]

================================

Block 0x27c
[0x27c:0x2c0]
---
Predecessors: [0x7f8]
Successors: [0x779]
---
0x27c JUMPDEST
0x27d PUSH1 0x1
0x27f PUSH1 0x0
0x281 PUSH1 0x1
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 SWAP1
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e PUSH1 0x0
0x290 SHA3
0x291 PUSH1 0x1
0x293 ADD
0x294 DUP2
0x295 SWAP1
0x296 SSTORE
0x297 POP
0x298 PUSH2 0x2c1
0x29b PUSH1 0x1
0x29d PUSH1 0x0
0x29f PUSH1 0x2
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac PUSH1 0x0
0x2ae SHA3
0x2af PUSH1 0x1
0x2b1 ADD
0x2b2 SLOAD
0x2b3 DUP4
0x2b4 PUSH2 0x779
0x2b7 SWAP1
0x2b8 SWAP2
0x2b9 SWAP1
0x2ba PUSH4 0xffffffff
0x2bf AND
0x2c0 JUMP
---
0x27c: JUMPDEST 
0x27d: V181 = 0x1
0x27f: V182 = 0x0
0x281: V183 = 0x1
0x284: M[0x0] = 0x1
0x285: V184 = 0x20
0x287: V185 = ADD 0x20 0x0
0x28a: M[0x20] = 0x1
0x28b: V186 = 0x20
0x28d: V187 = ADD 0x20 0x20
0x28e: V188 = 0x0
0x290: V189 = SHA3 0x0 0x40
0x291: V190 = 0x1
0x293: V191 = ADD 0x1 V189
0x296: S[V191] = V487
0x298: V192 = 0x2c1
0x29b: V193 = 0x1
0x29d: V194 = 0x0
0x29f: V195 = 0x2
0x2a2: M[0x0] = 0x2
0x2a3: V196 = 0x20
0x2a5: V197 = ADD 0x20 0x0
0x2a8: M[0x20] = 0x1
0x2a9: V198 = 0x20
0x2ab: V199 = ADD 0x20 0x20
0x2ac: V200 = 0x0
0x2ae: V201 = SHA3 0x0 0x40
0x2af: V202 = 0x1
0x2b1: V203 = ADD 0x1 V201
0x2b2: V204 = S[V203]
0x2b4: V205 = 0x779
0x2ba: V206 = 0xffffffff
0x2bf: V207 = AND 0xffffffff 0x779
0x2c0: JUMP 0x779
---
Entry stack: [V11, 0x19b, S8, S7, {0x7b, 0x647}, S5, 0x0, S3, S2, S1, V487]
Stack pops: 3
Stack additions: [S2, S1, 0x2c1, S2, V204]
Exit stack: [V11, 0x19b, S8, S7, {0x7b, 0x647}, S5, 0x0, S3, S2, S1, 0x2c1, S2, V204]

================================

Block 0x2c1
[0x2c1:0x305]
---
Predecessors: [0x7f8]
Successors: [0x779]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0x0
0x2c6 PUSH1 0x2
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP1
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 PUSH1 0x0
0x2d5 SHA3
0x2d6 PUSH1 0x1
0x2d8 ADD
0x2d9 DUP2
0x2da SWAP1
0x2db SSTORE
0x2dc POP
0x2dd PUSH2 0x306
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0x0
0x2e4 PUSH1 0x3
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb SWAP1
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 PUSH1 0x0
0x2f3 SHA3
0x2f4 PUSH1 0x1
0x2f6 ADD
0x2f7 SLOAD
0x2f8 DUP3
0x2f9 PUSH2 0x779
0x2fc SWAP1
0x2fd SWAP2
0x2fe SWAP1
0x2ff PUSH4 0xffffffff
0x304 AND
0x305 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V208 = 0x1
0x2c4: V209 = 0x0
0x2c6: V210 = 0x2
0x2c9: M[0x0] = 0x2
0x2ca: V211 = 0x20
0x2cc: V212 = ADD 0x20 0x0
0x2cf: M[0x20] = 0x1
0x2d0: V213 = 0x20
0x2d2: V214 = ADD 0x20 0x20
0x2d3: V215 = 0x0
0x2d5: V216 = SHA3 0x0 0x40
0x2d6: V217 = 0x1
0x2d8: V218 = ADD 0x1 V216
0x2db: S[V218] = S0
0x2dd: V219 = 0x306
0x2e0: V220 = 0x1
0x2e2: V221 = 0x0
0x2e4: V222 = 0x3
0x2e7: M[0x0] = 0x3
0x2e8: V223 = 0x20
0x2ea: V224 = ADD 0x20 0x0
0x2ed: M[0x20] = 0x1
0x2ee: V225 = 0x20
0x2f0: V226 = ADD 0x20 0x20
0x2f1: V227 = 0x0
0x2f3: V228 = SHA3 0x0 0x40
0x2f4: V229 = 0x1
0x2f6: V230 = ADD 0x1 V228
0x2f7: V231 = S[V230]
0x2f9: V232 = 0x779
0x2ff: V233 = 0xffffffff
0x304: V234 = AND 0xffffffff 0x779
0x305: JUMP 0x779
---
Entry stack: [V11, 0x19b, S8, S7, {0x7b, 0x647}, S5, 0x0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x306, S1, V231]
Exit stack: [V11, 0x19b, S8, S7, {0x7b, 0x647}, S5, 0x0, S3, S2, S1, 0x306, S1, V231]

================================

Block 0x306
[0x306:0x328]
---
Predecessors: [0x7f8]
Successors: [0x7b, 0x647]
---
0x306 JUMPDEST
0x307 PUSH1 0x1
0x309 PUSH1 0x0
0x30b PUSH1 0x3
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x20
0x311 ADD
0x312 SWAP1
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 ADD
0x318 PUSH1 0x0
0x31a SHA3
0x31b PUSH1 0x1
0x31d ADD
0x31e DUP2
0x31f SWAP1
0x320 SSTORE
0x321 POP
0x322 POP
0x323 POP
0x324 POP
0x325 SWAP2
0x326 SWAP1
0x327 POP
0x328 JUMP
---
0x306: JUMPDEST 
0x307: V235 = 0x1
0x309: V236 = 0x0
0x30b: V237 = 0x3
0x30e: M[0x0] = 0x3
0x30f: V238 = 0x20
0x311: V239 = ADD 0x20 0x0
0x314: M[0x20] = 0x1
0x315: V240 = 0x20
0x317: V241 = ADD 0x20 0x20
0x318: V242 = 0x0
0x31a: V243 = SHA3 0x0 0x40
0x31b: V244 = 0x1
0x31d: V245 = ADD 0x1 V243
0x320: S[V245] = S0
0x328: JUMP {0x7b, 0x647}
---
Entry stack: [V11, 0x19b, S8, S7, {0x7b, 0x647}, S5, 0x0, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S4]
Exit stack: [V11, 0x19b, S8, S7, 0x0]

================================

Block 0x329
[0x329:0x340]
---
Predecessors: [0x8b]
Successors: [0xc0]
---
0x329 JUMPDEST
0x32a PUSH1 0x0
0x32c PUSH1 0x20
0x32e MSTORE
0x32f DUP1
0x330 PUSH1 0x0
0x332 MSTORE
0x333 PUSH1 0x40
0x335 PUSH1 0x0
0x337 SHA3
0x338 PUSH1 0x0
0x33a SWAP2
0x33b POP
0x33c SWAP1
0x33d POP
0x33e SLOAD
0x33f DUP2
0x340 JUMP
---
0x329: JUMPDEST 
0x32a: V246 = 0x0
0x32c: V247 = 0x20
0x32e: M[0x20] = 0x0
0x330: V248 = 0x0
0x332: M[0x0] = V42
0x333: V249 = 0x40
0x335: V250 = 0x0
0x337: V251 = SHA3 0x0 0x40
0x338: V252 = 0x0
0x33e: V253 = S[V251]
0x340: JUMP 0xc0
---
Entry stack: [V11, 0xc0, V42]
Stack pops: 2
Stack additions: [S1, V253]
Exit stack: [V11, 0xc0, V253]

================================

Block 0x341
[0x341:0x358]
---
Predecessors: [0xe2]
Successors: [0x359, 0x3c6]
---
0x341 JUMPDEST
0x342 PUSH1 0x0
0x344 DUP1
0x345 PUSH1 0x0
0x347 DUP1
0x348 CALLER
0x349 SWAP2
0x34a POP
0x34b DUP2
0x34c EXTCODESIZE
0x34d SWAP1
0x34e POP
0x34f PUSH1 0x0
0x351 DUP2
0x352 EQ
0x353 ISZERO
0x354 ISZERO
0x355 PUSH2 0x3c6
0x358 JUMPI
---
0x341: JUMPDEST 
0x342: V254 = 0x0
0x345: V255 = 0x0
0x348: V256 = CALLER
0x34c: V257 = EXTCODESIZE V256
0x34f: V258 = 0x0
0x352: V259 = EQ V257 0x0
0x353: V260 = ISZERO V259
0x354: V261 = ISZERO V260
0x355: V262 = 0x3c6
0x358: JUMPI 0x3c6 V261
---
Entry stack: [V11, 0xeb]
Stack pops: 0
Stack additions: [0x0, 0x0, V256, V257]
Exit stack: [V11, 0xeb, 0x0, 0x0, V256, V257]

================================

Block 0x359
[0x359:0x3c5]
---
Predecessors: [0x341]
Successors: []
---
0x359 PUSH1 0x40
0x35b MLOAD
0x35c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x37d DUP2
0x37e MSTORE
0x37f PUSH1 0x4
0x381 ADD
0x382 DUP1
0x383 DUP1
0x384 PUSH1 0x20
0x386 ADD
0x387 DUP3
0x388 DUP2
0x389 SUB
0x38a DUP3
0x38b MSTORE
0x38c PUSH1 0x11
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 ADD
0x393 DUP1
0x394 PUSH32 0x736f7272792068756d616e73206f6e6c79000000000000000000000000000000
0x3b5 DUP2
0x3b6 MSTORE
0x3b7 POP
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb SWAP2
0x3bc POP
0x3bd POP
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 DUP1
0x3c2 SWAP2
0x3c3 SUB
0x3c4 SWAP1
0x3c5 REVERT
---
0x359: V263 = 0x40
0x35b: V264 = M[0x40]
0x35c: V265 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x37e: M[V264] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x37f: V266 = 0x4
0x381: V267 = ADD 0x4 V264
0x384: V268 = 0x20
0x386: V269 = ADD 0x20 V267
0x389: V270 = SUB V269 V267
0x38b: M[V267] = V270
0x38c: V271 = 0x11
0x38f: M[V269] = 0x11
0x390: V272 = 0x20
0x392: V273 = ADD 0x20 V269
0x394: V274 = 0x736f7272792068756d616e73206f6e6c79000000000000000000000000000000
0x3b6: M[V273] = 0x736f7272792068756d616e73206f6e6c79000000000000000000000000000000
0x3b8: V275 = 0x20
0x3ba: V276 = ADD 0x20 V273
0x3be: V277 = 0x40
0x3c0: V278 = M[0x40]
0x3c3: V279 = SUB V276 V278
0x3c5: REVERT V278 V279
---
Entry stack: [V11, 0xeb, 0x0, 0x0, V256, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb, 0x0, 0x0, V256, V257]

================================

Block 0x3c6
[0x3c6:0x412]
---
Predecessors: [0x341]
Successors: [0x413, 0x480]
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca CALLER
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP1
0x3fd DUP2
0x3fe MSTORE
0x3ff PUSH1 0x20
0x401 ADD
0x402 PUSH1 0x0
0x404 SHA3
0x405 SLOAD
0x406 SWAP4
0x407 POP
0x408 PUSH1 0x0
0x40a DUP5
0x40b EQ
0x40c ISZERO
0x40d ISZERO
0x40e ISZERO
0x40f PUSH2 0x480
0x412 JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V280 = 0x0
0x3ca: V281 = CALLER
0x3cb: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x3e1: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x3f8: M[0x0] = V285
0x3f9: V286 = 0x20
0x3fb: V287 = ADD 0x20 0x0
0x3fe: M[0x20] = 0x0
0x3ff: V288 = 0x20
0x401: V289 = ADD 0x20 0x20
0x402: V290 = 0x0
0x404: V291 = SHA3 0x0 0x40
0x405: V292 = S[V291]
0x408: V293 = 0x0
0x40b: V294 = EQ V292 0x0
0x40c: V295 = ISZERO V294
0x40d: V296 = ISZERO V295
0x40e: V297 = ISZERO V296
0x40f: V298 = 0x480
0x412: JUMPI 0x480 V297
---
Entry stack: [V11, 0xeb, 0x0, 0x0, V256, V257]
Stack pops: 4
Stack additions: [V292, S2, S1, S0]
Exit stack: [V11, 0xeb, V292, 0x0, V256, V257]

================================

Block 0x413
[0x413:0x47f]
---
Predecessors: [0x3c6]
Successors: []
---
0x413 PUSH1 0x40
0x415 MLOAD
0x416 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x437 DUP2
0x438 MSTORE
0x439 PUSH1 0x4
0x43b ADD
0x43c DUP1
0x43d DUP1
0x43e PUSH1 0x20
0x440 ADD
0x441 DUP3
0x442 DUP2
0x443 SUB
0x444 DUP3
0x445 MSTORE
0x446 PUSH1 0xe
0x448 DUP2
0x449 MSTORE
0x44a PUSH1 0x20
0x44c ADD
0x44d DUP1
0x44e PUSH32 0x736f727279206e6f74207465616d000000000000000000000000000000000000
0x46f DUP2
0x470 MSTORE
0x471 POP
0x472 PUSH1 0x20
0x474 ADD
0x475 SWAP2
0x476 POP
0x477 POP
0x478 PUSH1 0x40
0x47a MLOAD
0x47b DUP1
0x47c SWAP2
0x47d SUB
0x47e SWAP1
0x47f REVERT
---
0x413: V299 = 0x40
0x415: V300 = M[0x40]
0x416: V301 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x438: M[V300] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x439: V302 = 0x4
0x43b: V303 = ADD 0x4 V300
0x43e: V304 = 0x20
0x440: V305 = ADD 0x20 V303
0x443: V306 = SUB V305 V303
0x445: M[V303] = V306
0x446: V307 = 0xe
0x449: M[V305] = 0xe
0x44a: V308 = 0x20
0x44c: V309 = ADD 0x20 V305
0x44e: V310 = 0x736f727279206e6f74207465616d000000000000000000000000000000000000
0x470: M[V309] = 0x736f727279206e6f74207465616d000000000000000000000000000000000000
0x472: V311 = 0x20
0x474: V312 = ADD 0x20 V309
0x478: V313 = 0x40
0x47a: V314 = M[0x40]
0x47d: V315 = SUB V312 V314
0x47f: REVERT V314 V315
---
Entry stack: [V11, 0xeb, V292, 0x0, V256, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb, V292, 0x0, V256, V257]

================================

Block 0x480
[0x480:0x488]
---
Predecessors: [0x3c6]
Successors: [0x801]
---
0x480 JUMPDEST
0x481 PUSH2 0x489
0x484 DUP5
0x485 PUSH2 0x801
0x488 JUMP
---
0x480: JUMPDEST 
0x481: V316 = 0x489
0x485: V317 = 0x801
0x488: JUMP 0x801
---
Entry stack: [V11, 0xeb, V292, 0x0, V256, V257]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x489, S3]
Exit stack: [V11, 0xeb, V292, 0x0, V256, V257, 0x489, V292]

================================

Block 0x489
[0x489:0x4fd]
---
Predecessors: [0x843]
Successors: [0x4fe, 0x507]
---
0x489 JUMPDEST
0x48a SWAP3
0x48b POP
0x48c PUSH1 0x1
0x48e PUSH1 0x0
0x490 DUP6
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x20
0x495 ADD
0x496 SWAP1
0x497 DUP2
0x498 MSTORE
0x499 PUSH1 0x20
0x49b ADD
0x49c PUSH1 0x0
0x49e SHA3
0x49f PUSH1 0x0
0x4a1 ADD
0x4a2 PUSH1 0x0
0x4a4 SWAP1
0x4a5 SLOAD
0x4a6 SWAP1
0x4a7 PUSH2 0x100
0x4aa EXP
0x4ab SWAP1
0x4ac DIV
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 AND
0x4c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d8 AND
0x4d9 PUSH2 0x8fc
0x4dc DUP5
0x4dd SWAP1
0x4de DUP2
0x4df ISZERO
0x4e0 MUL
0x4e1 SWAP1
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 PUSH1 0x0
0x4e7 PUSH1 0x40
0x4e9 MLOAD
0x4ea DUP1
0x4eb DUP4
0x4ec SUB
0x4ed DUP2
0x4ee DUP6
0x4ef DUP9
0x4f0 DUP9
0x4f1 CALL
0x4f2 SWAP4
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 POP
0x4f7 ISZERO
0x4f8 DUP1
0x4f9 ISZERO
0x4fa PUSH2 0x507
0x4fd JUMPI
---
0x489: JUMPDEST 
0x48c: V318 = 0x1
0x48e: V319 = 0x0
0x492: M[0x0] = V292
0x493: V320 = 0x20
0x495: V321 = ADD 0x20 0x0
0x498: M[0x20] = 0x1
0x499: V322 = 0x20
0x49b: V323 = ADD 0x20 0x20
0x49c: V324 = 0x0
0x49e: V325 = SHA3 0x0 0x40
0x49f: V326 = 0x0
0x4a1: V327 = ADD 0x0 V325
0x4a2: V328 = 0x0
0x4a5: V329 = S[V327]
0x4a7: V330 = 0x100
0x4aa: V331 = EXP 0x100 0x0
0x4ac: V332 = DIV V329 0x1
0x4ad: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x4c3: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x4d9: V337 = 0x8fc
0x4df: V338 = ISZERO V521
0x4e0: V339 = MUL V338 0x8fc
0x4e2: V340 = 0x40
0x4e4: V341 = M[0x40]
0x4e5: V342 = 0x0
0x4e7: V343 = 0x40
0x4e9: V344 = M[0x40]
0x4ec: V345 = SUB V341 V344
0x4f1: V346 = CALL V339 V336 V521 V344 V345 V344 0x0
0x4f7: V347 = ISZERO V346
0x4f9: V348 = ISZERO V347
0x4fa: V349 = 0x507
0x4fd: JUMPI 0x507 V348
---
Entry stack: [V11, 0xeb, V292, 0x0, V256, V257, V521]
Stack pops: 5
Stack additions: [S4, S0, S2, S1, V347]
Exit stack: [V11, 0xeb, V292, V521, V256, V257, V347]

================================

Block 0x4fe
[0x4fe:0x506]
---
Predecessors: [0x489]
Successors: []
---
0x4fe RETURNDATASIZE
0x4ff PUSH1 0x0
0x501 DUP1
0x502 RETURNDATACOPY
0x503 RETURNDATASIZE
0x504 PUSH1 0x0
0x506 REVERT
---
0x4fe: V350 = RETURNDATASIZE
0x4ff: V351 = 0x0
0x502: RETURNDATACOPY 0x0 0x0 V350
0x503: V352 = RETURNDATASIZE
0x504: V353 = 0x0
0x506: REVERT 0x0 V352
---
Entry stack: [V11, 0xeb, V292, V521, V256, V257, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb, V292, V521, V256, V257, V347]

================================

Block 0x507
[0x507:0x50d]
---
Predecessors: [0x489]
Successors: [0xeb]
---
0x507 JUMPDEST
0x508 POP
0x509 POP
0x50a POP
0x50b POP
0x50c POP
0x50d JUMP
---
0x507: JUMPDEST 
0x50d: JUMP 0xeb
---
Entry stack: [V11, 0xeb, V292, V521, V256, V257, V347]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x50e
[0x50e:0x557]
---
Predecessors: [0xf9]
Successors: [0x118]
---
0x50e JUMPDEST
0x50f PUSH1 0x1
0x511 PUSH1 0x20
0x513 MSTORE
0x514 DUP1
0x515 PUSH1 0x0
0x517 MSTORE
0x518 PUSH1 0x40
0x51a PUSH1 0x0
0x51c SHA3
0x51d PUSH1 0x0
0x51f SWAP2
0x520 POP
0x521 SWAP1
0x522 POP
0x523 DUP1
0x524 PUSH1 0x0
0x526 ADD
0x527 PUSH1 0x0
0x529 SWAP1
0x52a SLOAD
0x52b SWAP1
0x52c PUSH2 0x100
0x52f EXP
0x530 SWAP1
0x531 DIV
0x532 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x547 AND
0x548 SWAP1
0x549 DUP1
0x54a PUSH1 0x1
0x54c ADD
0x54d SLOAD
0x54e SWAP1
0x54f DUP1
0x550 PUSH1 0x2
0x552 ADD
0x553 SLOAD
0x554 SWAP1
0x555 POP
0x556 DUP4
0x557 JUMP
---
0x50e: JUMPDEST 
0x50f: V354 = 0x1
0x511: V355 = 0x20
0x513: M[0x20] = 0x1
0x515: V356 = 0x0
0x517: M[0x0] = V68
0x518: V357 = 0x40
0x51a: V358 = 0x0
0x51c: V359 = SHA3 0x0 0x40
0x51d: V360 = 0x0
0x524: V361 = 0x0
0x526: V362 = ADD 0x0 V359
0x527: V363 = 0x0
0x52a: V364 = S[V362]
0x52c: V365 = 0x100
0x52f: V366 = EXP 0x100 0x0
0x531: V367 = DIV V364 0x1
0x532: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x547: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x54a: V370 = 0x1
0x54c: V371 = ADD 0x1 V359
0x54d: V372 = S[V371]
0x550: V373 = 0x2
0x552: V374 = ADD 0x2 V359
0x553: V375 = S[V374]
0x557: JUMP 0x118
---
Entry stack: [V11, 0x118, V68]
Stack pops: 2
Stack additions: [S1, V369, V372, V375]
Exit stack: [V11, 0x118, V369, V372, V375]

================================

Block 0x558
[0x558:0x5a9]
---
Predecessors: [0x174]
Successors: [0x5aa, 0x617]
---
0x558 JUMPDEST
0x559 PUSH1 0x0
0x55b DUP1
0x55c PUSH1 0x0
0x55e DUP1
0x55f PUSH1 0x0
0x561 CALLER
0x562 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x577 AND
0x578 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58d AND
0x58e DUP2
0x58f MSTORE
0x590 PUSH1 0x20
0x592 ADD
0x593 SWAP1
0x594 DUP2
0x595 MSTORE
0x596 PUSH1 0x20
0x598 ADD
0x599 PUSH1 0x0
0x59b SHA3
0x59c SLOAD
0x59d SWAP2
0x59e POP
0x59f PUSH1 0x0
0x5a1 DUP3
0x5a2 EQ
0x5a3 ISZERO
0x5a4 ISZERO
0x5a5 ISZERO
0x5a6 PUSH2 0x617
0x5a9 JUMPI
---
0x558: JUMPDEST 
0x559: V376 = 0x0
0x55c: V377 = 0x0
0x55f: V378 = 0x0
0x561: V379 = CALLER
0x562: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x577: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x578: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x58d: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x58f: M[0x0] = V383
0x590: V384 = 0x20
0x592: V385 = ADD 0x20 0x0
0x595: M[0x20] = 0x0
0x596: V386 = 0x20
0x598: V387 = ADD 0x20 0x20
0x599: V388 = 0x0
0x59b: V389 = SHA3 0x0 0x40
0x59c: V390 = S[V389]
0x59f: V391 = 0x0
0x5a2: V392 = EQ V390 0x0
0x5a3: V393 = ISZERO V392
0x5a4: V394 = ISZERO V393
0x5a5: V395 = ISZERO V394
0x5a6: V396 = 0x617
0x5a9: JUMPI 0x617 V395
---
Entry stack: [V11, 0x17d]
Stack pops: 0
Stack additions: [0x0, V390, 0x0]
Exit stack: [V11, 0x17d, 0x0, V390, 0x0]

================================

Block 0x5aa
[0x5aa:0x616]
---
Predecessors: [0x558]
Successors: []
---
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5ce DUP2
0x5cf MSTORE
0x5d0 PUSH1 0x4
0x5d2 ADD
0x5d3 DUP1
0x5d4 DUP1
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 DUP3
0x5d9 DUP2
0x5da SUB
0x5db DUP3
0x5dc MSTORE
0x5dd PUSH1 0xe
0x5df DUP2
0x5e0 MSTORE
0x5e1 PUSH1 0x20
0x5e3 ADD
0x5e4 DUP1
0x5e5 PUSH32 0x736f727279206e6f74207465616d000000000000000000000000000000000000
0x606 DUP2
0x607 MSTORE
0x608 POP
0x609 PUSH1 0x20
0x60b ADD
0x60c SWAP2
0x60d POP
0x60e POP
0x60f PUSH1 0x40
0x611 MLOAD
0x612 DUP1
0x613 SWAP2
0x614 SUB
0x615 SWAP1
0x616 REVERT
---
0x5aa: V397 = 0x40
0x5ac: V398 = M[0x40]
0x5ad: V399 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5cf: M[V398] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5d0: V400 = 0x4
0x5d2: V401 = ADD 0x4 V398
0x5d5: V402 = 0x20
0x5d7: V403 = ADD 0x20 V401
0x5da: V404 = SUB V403 V401
0x5dc: M[V401] = V404
0x5dd: V405 = 0xe
0x5e0: M[V403] = 0xe
0x5e1: V406 = 0x20
0x5e3: V407 = ADD 0x20 V403
0x5e5: V408 = 0x736f727279206e6f74207465616d000000000000000000000000000000000000
0x607: M[V407] = 0x736f727279206e6f74207465616d000000000000000000000000000000000000
0x609: V409 = 0x20
0x60b: V410 = ADD 0x20 V407
0x60f: V411 = 0x40
0x611: V412 = M[0x40]
0x614: V413 = SUB V410 V412
0x616: REVERT V412 V413
---
Entry stack: [V11, 0x17d, 0x0, V390, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, 0x0, V390, 0x0]

================================

Block 0x617
[0x617:0x637]
---
Predecessors: [0x558]
Successors: [0x17d]
---
0x617 JUMPDEST
0x618 PUSH1 0x1
0x61a PUSH1 0x0
0x61c DUP4
0x61d DUP2
0x61e MSTORE
0x61f PUSH1 0x20
0x621 ADD
0x622 SWAP1
0x623 DUP2
0x624 MSTORE
0x625 PUSH1 0x20
0x627 ADD
0x628 PUSH1 0x0
0x62a SHA3
0x62b PUSH1 0x1
0x62d ADD
0x62e SLOAD
0x62f SWAP1
0x630 POP
0x631 DUP1
0x632 SWAP3
0x633 POP
0x634 POP
0x635 POP
0x636 SWAP1
0x637 JUMP
---
0x617: JUMPDEST 
0x618: V414 = 0x1
0x61a: V415 = 0x0
0x61e: M[0x0] = V390
0x61f: V416 = 0x20
0x621: V417 = ADD 0x20 0x0
0x624: M[0x20] = 0x1
0x625: V418 = 0x20
0x627: V419 = ADD 0x20 0x20
0x628: V420 = 0x0
0x62a: V421 = SHA3 0x0 0x40
0x62b: V422 = 0x1
0x62d: V423 = ADD 0x1 V421
0x62e: V424 = S[V423]
0x637: JUMP 0x17d
---
Entry stack: [V11, 0x17d, 0x0, V390, 0x0]
Stack pops: 4
Stack additions: [V424]
Exit stack: [V11, V424]

================================

Block 0x638
[0x638:0x646]
---
Predecessors: [0x193]
Successors: [0x1b5]
---
0x638 JUMPDEST
0x639 PUSH1 0x0
0x63b DUP1
0x63c CALLVALUE
0x63d SWAP1
0x63e POP
0x63f PUSH2 0x647
0x642 DUP2
0x643 PUSH2 0x1b5
0x646 JUMP
---
0x638: JUMPDEST 
0x639: V425 = 0x0
0x63c: V426 = CALLVALUE
0x63f: V427 = 0x647
0x643: V428 = 0x1b5
0x646: JUMP 0x1b5
---
Entry stack: [V11, 0x19b]
Stack pops: 0
Stack additions: [0x0, V426, 0x647, V426]
Exit stack: [V11, 0x19b, 0x0, V426, 0x647, V426]

================================

Block 0x647
[0x647:0x64f]
---
Predecessors: [0x306]
Successors: [0x19b]
---
0x647 JUMPDEST
0x648 POP
0x649 PUSH1 0x1
0x64b SWAP2
0x64c POP
0x64d POP
0x64e SWAP1
0x64f JUMP
---
0x647: JUMPDEST 
0x649: V429 = 0x1
0x64f: JUMP 0x19b
---
Entry stack: [V11, 0x19b, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x650
[0x650:0x65a]
---
Predecessors: [0x1b5, 0x1f0]
Successors: [0x65b, 0x663]
---
0x650 JUMPDEST
0x651 PUSH1 0x0
0x653 DUP1
0x654 DUP4
0x655 EQ
0x656 ISZERO
0x657 PUSH2 0x663
0x65a JUMPI
---
0x650: JUMPDEST 
0x651: V430 = 0x0
0x655: V431 = EQ S1 0x0
0x656: V432 = ISZERO V431
0x657: V433 = 0x663
0x65a: JUMPI 0x663 V432
---
Entry stack: [V11, 0x19b, S11, S10, {0x7b, 0x647}, S8, 0x0, S6, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x19b, S11, S10, {0x7b, 0x647}, S8, 0x0, S6, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S1, S0, 0x0]

================================

Block 0x65b
[0x65b:0x662]
---
Predecessors: [0x650]
Successors: [0x6ee]
---
0x65b PUSH1 0x0
0x65d SWAP1
0x65e POP
0x65f PUSH2 0x6ee
0x662 JUMP
---
0x65b: V434 = 0x0
0x65f: V435 = 0x6ee
0x662: JUMP 0x6ee
---
Entry stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, 0x0]

================================

Block 0x663
[0x663:0x672]
---
Predecessors: [0x650]
Successors: [0x673, 0x674]
---
0x663 JUMPDEST
0x664 DUP2
0x665 DUP4
0x666 MUL
0x667 SWAP1
0x668 POP
0x669 DUP2
0x66a DUP4
0x66b DUP3
0x66c DUP2
0x66d ISZERO
0x66e ISZERO
0x66f PUSH2 0x674
0x672 JUMPI
---
0x663: JUMPDEST 
0x666: V436 = MUL S2 S1
0x66d: V437 = ISZERO S2
0x66e: V438 = ISZERO V437
0x66f: V439 = 0x674
0x672: JUMPI 0x674 V438
---
Entry stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V436, S1, S2, V436]
Exit stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, V436, S1, S2, V436]

================================

Block 0x673
[0x673:0x673]
---
Predecessors: [0x663]
Successors: []
---
0x673 INVALID
---
0x673: INVALID 
---
Entry stack: [V11, 0x19b, S15, S14, {0x7b, 0x647}, S12, 0x0, S10, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S5, S4, V436, S2, S1, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19b, S15, S14, {0x7b, 0x647}, S12, 0x0, S10, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S5, S4, V436, S2, S1, V436]

================================

Block 0x674
[0x674:0x67c]
---
Predecessors: [0x663]
Successors: [0x67d, 0x6ea]
---
0x674 JUMPDEST
0x675 DIV
0x676 EQ
0x677 ISZERO
0x678 ISZERO
0x679 PUSH2 0x6ea
0x67c JUMPI
---
0x674: JUMPDEST 
0x675: V440 = DIV V436 S1
0x676: V441 = EQ V440 S2
0x677: V442 = ISZERO V441
0x678: V443 = ISZERO V442
0x679: V444 = 0x6ea
0x67c: JUMPI 0x6ea V443
---
Entry stack: [V11, 0x19b, S15, S14, {0x7b, 0x647}, S12, 0x0, S10, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S5, S4, V436, S2, S1, V436]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x19b, S15, S14, {0x7b, 0x647}, S12, 0x0, S10, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S5, S4, V436]

================================

Block 0x67d
[0x67d:0x6e9]
---
Predecessors: [0x674]
Successors: []
---
0x67d PUSH1 0x40
0x67f MLOAD
0x680 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6a1 DUP2
0x6a2 MSTORE
0x6a3 PUSH1 0x4
0x6a5 ADD
0x6a6 DUP1
0x6a7 DUP1
0x6a8 PUSH1 0x20
0x6aa ADD
0x6ab DUP3
0x6ac DUP2
0x6ad SUB
0x6ae DUP3
0x6af MSTORE
0x6b0 PUSH1 0x13
0x6b2 DUP2
0x6b3 MSTORE
0x6b4 PUSH1 0x20
0x6b6 ADD
0x6b7 DUP1
0x6b8 PUSH32 0x536166654d617468206d756c206661696c656400000000000000000000000000
0x6d9 DUP2
0x6da MSTORE
0x6db POP
0x6dc PUSH1 0x20
0x6de ADD
0x6df SWAP2
0x6e0 POP
0x6e1 POP
0x6e2 PUSH1 0x40
0x6e4 MLOAD
0x6e5 DUP1
0x6e6 SWAP2
0x6e7 SUB
0x6e8 SWAP1
0x6e9 REVERT
---
0x67d: V445 = 0x40
0x67f: V446 = M[0x40]
0x680: V447 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6a2: M[V446] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6a3: V448 = 0x4
0x6a5: V449 = ADD 0x4 V446
0x6a8: V450 = 0x20
0x6aa: V451 = ADD 0x20 V449
0x6ad: V452 = SUB V451 V449
0x6af: M[V449] = V452
0x6b0: V453 = 0x13
0x6b3: M[V451] = 0x13
0x6b4: V454 = 0x20
0x6b6: V455 = ADD 0x20 V451
0x6b8: V456 = 0x536166654d617468206d756c206661696c656400000000000000000000000000
0x6da: M[V455] = 0x536166654d617468206d756c206661696c656400000000000000000000000000
0x6dc: V457 = 0x20
0x6de: V458 = ADD 0x20 V455
0x6e2: V459 = 0x40
0x6e4: V460 = M[0x40]
0x6e7: V461 = SUB V458 V460
0x6e9: REVERT V460 V461
---
Entry stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, S0]

================================

Block 0x6ea
[0x6ea:0x6ed]
---
Predecessors: [0x674]
Successors: [0x6ee]
---
0x6ea JUMPDEST
0x6eb DUP1
0x6ec SWAP1
0x6ed POP
---
0x6ea: JUMPDEST 
---
Entry stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, S0]

================================

Block 0x6ee
[0x6ee:0x6f3]
---
Predecessors: [0x65b, 0x6ea]
Successors: [0x1e7, 0x21f]
---
0x6ee JUMPDEST
0x6ef SWAP3
0x6f0 SWAP2
0x6f1 POP
0x6f2 POP
0x6f3 JUMP
---
0x6ee: JUMPDEST 
0x6f3: JUMP {0x1e7, 0x21f}
---
Entry stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, {0x1e7, 0x21f}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x19b, S12, S11, {0x7b, 0x647}, S9, 0x0, S7, 0x0, 0x0, 0x64, S0]

================================

Block 0x6f4
[0x6f4:0x700]
---
Predecessors: [0x228, 0x242]
Successors: [0x701, 0x76e]
---
0x6f4 JUMPDEST
0x6f5 PUSH1 0x0
0x6f7 DUP3
0x6f8 DUP3
0x6f9 GT
0x6fa ISZERO
0x6fb ISZERO
0x6fc ISZERO
0x6fd PUSH2 0x76e
0x700 JUMPI
---
0x6f4: JUMPDEST 
0x6f5: V462 = 0x0
0x6f9: V463 = GT S0 S1
0x6fa: V464 = ISZERO V463
0x6fb: V465 = ISZERO V464
0x6fc: V466 = ISZERO V465
0x6fd: V467 = 0x76e
0x700: JUMPI 0x76e V466
---
Entry stack: [V11, 0x19b, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x19b, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x701
[0x701:0x76d]
---
Predecessors: [0x6f4]
Successors: []
---
0x701 PUSH1 0x40
0x703 MLOAD
0x704 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x725 DUP2
0x726 MSTORE
0x727 PUSH1 0x4
0x729 ADD
0x72a DUP1
0x72b DUP1
0x72c PUSH1 0x20
0x72e ADD
0x72f DUP3
0x730 DUP2
0x731 SUB
0x732 DUP3
0x733 MSTORE
0x734 PUSH1 0x13
0x736 DUP2
0x737 MSTORE
0x738 PUSH1 0x20
0x73a ADD
0x73b DUP1
0x73c PUSH32 0x536166654d61746820737562206661696c656400000000000000000000000000
0x75d DUP2
0x75e MSTORE
0x75f POP
0x760 PUSH1 0x20
0x762 ADD
0x763 SWAP2
0x764 POP
0x765 POP
0x766 PUSH1 0x40
0x768 MLOAD
0x769 DUP1
0x76a SWAP2
0x76b SUB
0x76c SWAP1
0x76d REVERT
---
0x701: V468 = 0x40
0x703: V469 = M[0x40]
0x704: V470 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x726: M[V469] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x727: V471 = 0x4
0x729: V472 = ADD 0x4 V469
0x72c: V473 = 0x20
0x72e: V474 = ADD 0x20 V472
0x731: V475 = SUB V474 V472
0x733: M[V472] = V475
0x734: V476 = 0x13
0x737: M[V474] = 0x13
0x738: V477 = 0x20
0x73a: V478 = ADD 0x20 V474
0x73c: V479 = 0x536166654d61746820737562206661696c656400000000000000000000000000
0x75e: M[V478] = 0x536166654d61746820737562206661696c656400000000000000000000000000
0x760: V480 = 0x20
0x762: V481 = ADD 0x20 V478
0x766: V482 = 0x40
0x768: V483 = M[0x40]
0x76b: V484 = SUB V481 V483
0x76d: REVERT V483 V484
---
Entry stack: [V11, 0x19b, S13, S12, S11, S10, {0x0, 0x7b, 0x647}, S8, S7, S6, S5, S4, {0x242, 0x250}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19b, S13, S12, S11, S10, {0x0, 0x7b, 0x647}, S8, S7, S6, S5, S4, {0x242, 0x250}, S2, S1, 0x0]

================================

Block 0x76e
[0x76e:0x778]
---
Predecessors: [0x6f4]
Successors: [0x242, 0x250]
---
0x76e JUMPDEST
0x76f DUP2
0x770 DUP4
0x771 SUB
0x772 SWAP1
0x773 POP
0x774 SWAP3
0x775 SWAP2
0x776 POP
0x777 POP
0x778 JUMP
---
0x76e: JUMPDEST 
0x771: V485 = SUB S2 S1
0x778: JUMP {0x242, 0x250}
---
Entry stack: [V11, 0x19b, S13, S12, S11, S10, {0x0, 0x7b, 0x647}, S8, S7, S6, S5, S4, {0x242, 0x250}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V485]
Exit stack: [V11, 0x19b, S13, S12, S11, S10, {0x0, 0x7b, 0x647}, S8, S7, S6, S5, S4, V485]

================================

Block 0x779
[0x779:0x78a]
---
Predecessors: [0x250, 0x27c, 0x2c1]
Successors: [0x78b, 0x7f8]
---
0x779 JUMPDEST
0x77a PUSH1 0x0
0x77c DUP2
0x77d DUP4
0x77e ADD
0x77f SWAP1
0x780 POP
0x781 DUP3
0x782 DUP2
0x783 LT
0x784 ISZERO
0x785 ISZERO
0x786 ISZERO
0x787 PUSH2 0x7f8
0x78a JUMPI
---
0x779: JUMPDEST 
0x77a: V486 = 0x0
0x77e: V487 = ADD S1 S0
0x783: V488 = LT V487 S1
0x784: V489 = ISZERO V488
0x785: V490 = ISZERO V489
0x786: V491 = ISZERO V490
0x787: V492 = 0x7f8
0x78a: JUMPI 0x7f8 V491
---
Entry stack: [V11, 0x19b, S12, S11, S10, S9, {0x0, 0x7b, 0x647}, S7, S6, S5, S4, S3, {0x27c, 0x2c1, 0x306}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V487]
Exit stack: [V11, 0x19b, S12, S11, S10, S9, {0x0, 0x7b, 0x647}, S7, S6, S5, S4, S3, {0x27c, 0x2c1, 0x306}, S1, S0, V487]

================================

Block 0x78b
[0x78b:0x7f7]
---
Predecessors: [0x779]
Successors: []
---
0x78b PUSH1 0x40
0x78d MLOAD
0x78e PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7af DUP2
0x7b0 MSTORE
0x7b1 PUSH1 0x4
0x7b3 ADD
0x7b4 DUP1
0x7b5 DUP1
0x7b6 PUSH1 0x20
0x7b8 ADD
0x7b9 DUP3
0x7ba DUP2
0x7bb SUB
0x7bc DUP3
0x7bd MSTORE
0x7be PUSH1 0x13
0x7c0 DUP2
0x7c1 MSTORE
0x7c2 PUSH1 0x20
0x7c4 ADD
0x7c5 DUP1
0x7c6 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x7e7 DUP2
0x7e8 MSTORE
0x7e9 POP
0x7ea PUSH1 0x20
0x7ec ADD
0x7ed SWAP2
0x7ee POP
0x7ef POP
0x7f0 PUSH1 0x40
0x7f2 MLOAD
0x7f3 DUP1
0x7f4 SWAP2
0x7f5 SUB
0x7f6 SWAP1
0x7f7 REVERT
---
0x78b: V493 = 0x40
0x78d: V494 = M[0x40]
0x78e: V495 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7b0: M[V494] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7b1: V496 = 0x4
0x7b3: V497 = ADD 0x4 V494
0x7b6: V498 = 0x20
0x7b8: V499 = ADD 0x20 V497
0x7bb: V500 = SUB V499 V497
0x7bd: M[V497] = V500
0x7be: V501 = 0x13
0x7c1: M[V499] = 0x13
0x7c2: V502 = 0x20
0x7c4: V503 = ADD 0x20 V499
0x7c6: V504 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x7e8: M[V503] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x7ea: V505 = 0x20
0x7ec: V506 = ADD 0x20 V503
0x7f0: V507 = 0x40
0x7f2: V508 = M[0x40]
0x7f5: V509 = SUB V506 V508
0x7f7: REVERT V508 V509
---
Entry stack: [V11, 0x19b, S11, S10, {0x7b, 0x647}, S8, 0x0, S6, S5, S4, {0x27c, 0x2c1, 0x306}, S2, S1, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19b, S11, S10, {0x7b, 0x647}, S8, 0x0, S6, S5, S4, {0x27c, 0x2c1, 0x306}, S2, S1, V487]

================================

Block 0x7f8
[0x7f8:0x800]
---
Predecessors: [0x779]
Successors: [0x27c, 0x2c1, 0x306]
---
0x7f8 JUMPDEST
0x7f9 DUP1
0x7fa SWAP1
0x7fb POP
0x7fc SWAP3
0x7fd SWAP2
0x7fe POP
0x7ff POP
0x800 JUMP
---
0x7f8: JUMPDEST 
0x800: JUMP {0x27c, 0x2c1, 0x306}
---
Entry stack: [V11, 0x19b, S11, S10, {0x7b, 0x647}, S8, 0x0, S6, S5, S4, {0x27c, 0x2c1, 0x306}, S2, S1, V487]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x19b, S11, S10, {0x7b, 0x647}, S8, 0x0, S6, S5, S4, V487]

================================

Block 0x801
[0x801:0x826]
---
Predecessors: [0x480]
Successors: [0x827, 0x843]
---
0x801 JUMPDEST
0x802 PUSH1 0x0
0x804 DUP1
0x805 PUSH1 0x1
0x807 PUSH1 0x0
0x809 DUP5
0x80a DUP2
0x80b MSTORE
0x80c PUSH1 0x20
0x80e ADD
0x80f SWAP1
0x810 DUP2
0x811 MSTORE
0x812 PUSH1 0x20
0x814 ADD
0x815 PUSH1 0x0
0x817 SHA3
0x818 PUSH1 0x1
0x81a ADD
0x81b SLOAD
0x81c SWAP1
0x81d POP
0x81e PUSH1 0x0
0x820 DUP2
0x821 GT
0x822 ISZERO
0x823 PUSH2 0x843
0x826 JUMPI
---
0x801: JUMPDEST 
0x802: V510 = 0x0
0x805: V511 = 0x1
0x807: V512 = 0x0
0x80b: M[0x0] = V292
0x80c: V513 = 0x20
0x80e: V514 = ADD 0x20 0x0
0x811: M[0x20] = 0x1
0x812: V515 = 0x20
0x814: V516 = ADD 0x20 0x20
0x815: V517 = 0x0
0x817: V518 = SHA3 0x0 0x40
0x818: V519 = 0x1
0x81a: V520 = ADD 0x1 V518
0x81b: V521 = S[V520]
0x81e: V522 = 0x0
0x821: V523 = GT V521 0x0
0x822: V524 = ISZERO V523
0x823: V525 = 0x843
0x826: JUMPI 0x843 V524
---
Entry stack: [V11, 0xeb, V292, 0x0, V256, V257, 0x489, V292]
Stack pops: 1
Stack additions: [S0, 0x0, V521]
Exit stack: [V11, 0xeb, V292, 0x0, V256, V257, 0x489, V292, 0x0, V521]

================================

Block 0x827
[0x827:0x842]
---
Predecessors: [0x801]
Successors: [0x843]
---
0x827 PUSH1 0x0
0x829 PUSH1 0x1
0x82b PUSH1 0x0
0x82d DUP6
0x82e DUP2
0x82f MSTORE
0x830 PUSH1 0x20
0x832 ADD
0x833 SWAP1
0x834 DUP2
0x835 MSTORE
0x836 PUSH1 0x20
0x838 ADD
0x839 PUSH1 0x0
0x83b SHA3
0x83c PUSH1 0x1
0x83e ADD
0x83f DUP2
0x840 SWAP1
0x841 SSTORE
0x842 POP
---
0x827: V526 = 0x0
0x829: V527 = 0x1
0x82b: V528 = 0x0
0x82f: M[0x0] = V292
0x830: V529 = 0x20
0x832: V530 = ADD 0x20 0x0
0x835: M[0x20] = 0x1
0x836: V531 = 0x20
0x838: V532 = ADD 0x20 0x20
0x839: V533 = 0x0
0x83b: V534 = SHA3 0x0 0x40
0x83c: V535 = 0x1
0x83e: V536 = ADD 0x1 V534
0x841: S[V536] = 0x0
---
Entry stack: [V11, 0xeb, V292, 0x0, V256, V257, 0x489, V292, 0x0, V521]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xeb, V292, 0x0, V256, V257, 0x489, V292, 0x0, V521]

================================

Block 0x843
[0x843:0x84b]
---
Predecessors: [0x801, 0x827]
Successors: [0x489]
---
0x843 JUMPDEST
0x844 DUP1
0x845 SWAP2
0x846 POP
0x847 POP
0x848 SWAP2
0x849 SWAP1
0x84a POP
0x84b JUMP
---
0x843: JUMPDEST 
0x84b: JUMP 0x489
---
Entry stack: [V11, 0xeb, V292, 0x0, V256, V257, 0x489, V292, 0x0, V521]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0xeb, V292, 0x0, V256, V257, V521]

================================

Block 0x84c
[0x84c:0x90f]
---
Predecessors: []
Successors: []
---
0x84c STOP
0x84d LOG1
0x84e PUSH6 0x627a7a723058
0x855 SHA3
0x856 PUSH19 0xaf1f27214b0fe5df764b30b4fff15ab8064472
0x86a SDIV
0x86b MISSING 0xe0
0x86c PUSH23 0x5cce65f1947130f0d20029730000000000000000000000
0x884 STOP
0x885 STOP
0x886 STOP
0x887 STOP
0x888 STOP
0x889 STOP
0x88a STOP
0x88b STOP
0x88c STOP
0x88d ADDRESS
0x88e EQ
0x88f PUSH1 0x80
0x891 PUSH1 0x40
0x893 MSTORE
0x894 PUSH1 0x0
0x896 DUP1
0x897 REVERT
0x898 STOP
0x899 LOG1
0x89a PUSH6 0x627a7a723058
0x8a1 SHA3
0x8a2 DUP13
0x8a3 MISSING 0xe2
0x8a4 MISSING 0xd3
0x8a5 MISSING 0xeb
0x8a6 PUSH12 0xa28f2a9c104f42c33833d683
0x8b3 SWAP6
0x8b4 MISSING 0x2e
0x8b5 COINBASE
0x8b6 STATICCALL
0x8b7 EXTCODECOPY
0x8b8 MISSING 0x48
0x8b9 DUP15
0x8ba PUSH12 0xb72b0098866fc00029730000
0x8c7 STOP
0x8c8 STOP
0x8c9 STOP
0x8ca STOP
0x8cb STOP
0x8cc STOP
0x8cd STOP
0x8ce STOP
0x8cf STOP
0x8d0 STOP
0x8d1 STOP
0x8d2 STOP
0x8d3 STOP
0x8d4 STOP
0x8d5 STOP
0x8d6 STOP
0x8d7 STOP
0x8d8 STOP
0x8d9 ADDRESS
0x8da EQ
0x8db PUSH1 0x80
0x8dd PUSH1 0x40
0x8df MSTORE
0x8e0 PUSH1 0x0
0x8e2 DUP1
0x8e3 REVERT
0x8e4 STOP
0x8e5 LOG1
0x8e6 PUSH6 0x627a7a723058
0x8ed SHA3
0x8ee PUSH27 0x8ed50b133a39e60b16310065bfc7e1cb5f1d835ca65a3caf0c68e7
0x90a SUB
0x90b LOG1
0x90c MISSING 0xe4
0x90d SIGNEXTEND
0x90e STOP
0x90f MISSING 0x29
---
0x84c: STOP 
0x84d: LOG S0 S1 S2
0x84e: V537 = 0x627a7a723058
0x855: V538 = SHA3 0x627a7a723058 S3
0x856: V539 = 0xaf1f27214b0fe5df764b30b4fff15ab8064472
0x86a: V540 = SDIV 0xaf1f27214b0fe5df764b30b4fff15ab8064472 V538
0x86b: MISSING 0xe0
0x86c: V541 = 0x5cce65f1947130f0d20029730000000000000000000000
0x884: STOP 
0x885: STOP 
0x886: STOP 
0x887: STOP 
0x888: STOP 
0x889: STOP 
0x88a: STOP 
0x88b: STOP 
0x88c: STOP 
0x88d: V542 = ADDRESS
0x88e: V543 = EQ V542 S0
0x88f: V544 = 0x80
0x891: V545 = 0x40
0x893: M[0x40] = 0x80
0x894: V546 = 0x0
0x897: REVERT 0x0 0x0
0x898: STOP 
0x899: LOG S0 S1 S2
0x89a: V547 = 0x627a7a723058
0x8a1: V548 = SHA3 0x627a7a723058 S3
0x8a3: MISSING 0xe2
0x8a4: MISSING 0xd3
0x8a5: MISSING 0xeb
0x8a6: V549 = 0xa28f2a9c104f42c33833d683
0x8b4: MISSING 0x2e
0x8b5: V550 = COINBASE
0x8b6: V551 = STATICCALL V550 S0 S1 S2 S3 S4
0x8b7: EXTCODECOPY V551 S5 S6 S7
0x8b8: MISSING 0x48
0x8ba: V552 = 0xb72b0098866fc00029730000
0x8c7: STOP 
0x8c8: STOP 
0x8c9: STOP 
0x8ca: STOP 
0x8cb: STOP 
0x8cc: STOP 
0x8cd: STOP 
0x8ce: STOP 
0x8cf: STOP 
0x8d0: STOP 
0x8d1: STOP 
0x8d2: STOP 
0x8d3: STOP 
0x8d4: STOP 
0x8d5: STOP 
0x8d6: STOP 
0x8d7: STOP 
0x8d8: STOP 
0x8d9: V553 = ADDRESS
0x8da: V554 = EQ V553 S0
0x8db: V555 = 0x80
0x8dd: V556 = 0x40
0x8df: M[0x40] = 0x80
0x8e0: V557 = 0x0
0x8e3: REVERT 0x0 0x0
0x8e4: STOP 
0x8e5: LOG S0 S1 S2
0x8e6: V558 = 0x627a7a723058
0x8ed: V559 = SHA3 0x627a7a723058 S3
0x8ee: V560 = 0x8ed50b133a39e60b16310065bfc7e1cb5f1d835ca65a3caf0c68e7
0x90a: V561 = SUB 0x8ed50b133a39e60b16310065bfc7e1cb5f1d835ca65a3caf0c68e7 V559
0x90b: LOG V561 S4 S5
0x90c: MISSING 0xe4
0x90d: V562 = SIGNEXTEND S0 S1
0x90e: STOP 
0x90f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V540, 0x5cce65f1947130f0d20029730000000000000000000000, V543, S15, V548, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S5, S0, S1, S2, S3, S4, 0xa28f2a9c104f42c33833d683, 0xb72b0098866fc00029730000, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V554, V562]
Exit stack: []

================================

Function 0:
Public function signature: 0x10f01eba
Entry block: 0x7f
Exit block: 0xc0
Body: 0x7f, 0x87, 0x8b, 0xc0, 0x329

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xd6
Exit block: 0xeb
Body: 0xd6, 0xde, 0xe2, 0xeb, 0x341, 0x359, 0x3c6, 0x413, 0x480, 0x489, 0x4fe, 0x507, 0x801, 0x827, 0x843

Function 2:
Public function signature: 0x6e7d3025
Entry block: 0xed
Exit block: 0x118
Body: 0xed, 0xf5, 0xf9, 0x118, 0x50e

Function 3:
Public function signature: 0xa5ae65ba
Entry block: 0x168
Exit block: 0x17d
Body: 0x168, 0x170, 0x174, 0x17d, 0x558, 0x5aa, 0x617

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0x193
Exit block: 0x19b
Body: 0x193, 0x19b, 0x638, 0x647

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x7b
Body: 0x6d, 0x7b

Function 6:
Private function
Entry block: 0x1b5
Exit block: 0x306
Body: 0x1b5, 0x1e7, 0x1f0, 0x21f, 0x228, 0x242, 0x250, 0x27c, 0x27c, 0x2c1, 0x306, 0x6f4, 0x76e, 0x779, 0x7f8

Function 7:
Private function
Entry block: 0x650
Exit block: 0x6ee
Body: 0x650, 0x65b, 0x663, 0x674, 0x6ea, 0x6ee

Function 8:
Private function
Entry block: 0x779
Exit block: 0x7f8
Body: 0x779, 0x7f8

