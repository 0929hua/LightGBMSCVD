Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6b
0xa: JUMPI 0x6b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x333]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x38af3eed
0x3a EQ
0x3b PUSH2 0x333
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x38af3eed
0x3a: V12 = EQ 0x38af3eed V10
0x3b: V13 = 0x333
0x3e: JUMPI 0x333 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x388]
---
0x3f DUP1
0x40 PUSH4 0x70a08231
0x45 EQ
0x46 PUSH2 0x388
0x49 JUMPI
---
0x40: V14 = 0x70a08231
0x45: V15 = EQ 0x70a08231 V10
0x46: V16 = 0x388
0x49: JUMPI 0x388 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x3d5]
---
0x4a DUP1
0x4b PUSH4 0x7b3e5e7b
0x50 EQ
0x51 PUSH2 0x3d5
0x54 JUMPI
---
0x4b: V17 = 0x7b3e5e7b
0x50: V18 = EQ 0x7b3e5e7b V10
0x51: V19 = 0x3d5
0x54: JUMPI 0x3d5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x3fe]
---
0x55 DUP1
0x56 PUSH4 0xa035b1fe
0x5b EQ
0x5c PUSH2 0x3fe
0x5f JUMPI
---
0x56: V20 = 0xa035b1fe
0x5b: V21 = EQ 0xa035b1fe V10
0x5c: V22 = 0x3fe
0x5f: JUMPI 0x3fe V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x427]
---
0x60 DUP1
0x61 PUSH4 0xd68fac6d
0x66 EQ
0x67 PUSH2 0x427
0x6a JUMPI
---
0x61: V23 = 0xd68fac6d
0x66: V24 = EQ 0xd68fac6d V10
0x67: V25 = 0x427
0x6a: JUMPI 0x427 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x6b]
---
Predecessors: [0x0, 0x60]
Successors: [0x6c]
---
0x6b JUMPDEST
---
0x6b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x121]
---
Predecessors: [0x6b]
Successors: [0x122, 0x123]
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f CALLVALUE
0x70 SWAP1
0x71 POP
0x72 DUP1
0x73 PUSH1 0x4
0x75 PUSH1 0x0
0x77 CALLER
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 DUP2
0xa5 MSTORE
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 SWAP1
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf PUSH1 0x0
0xb1 SHA3
0xb2 PUSH1 0x0
0xb4 DUP3
0xb5 DUP3
0xb6 SLOAD
0xb7 ADD
0xb8 SWAP3
0xb9 POP
0xba POP
0xbb DUP2
0xbc SWAP1
0xbd SSTORE
0xbe POP
0xbf DUP1
0xc0 PUSH1 0x1
0xc2 PUSH1 0x0
0xc4 DUP3
0xc5 DUP3
0xc6 SLOAD
0xc7 ADD
0xc8 SWAP3
0xc9 POP
0xca POP
0xcb DUP2
0xcc SWAP1
0xcd SSTORE
0xce POP
0xcf PUSH1 0x3
0xd1 PUSH1 0x0
0xd3 SWAP1
0xd4 SLOAD
0xd5 SWAP1
0xd6 PUSH2 0x100
0xd9 EXP
0xda SWAP1
0xdb DIV
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 PUSH4 0xa9059cbb
0x10d CALLER
0x10e PUSH8 0xde0b6b3a7640000
0x117 PUSH1 0x2
0x119 SLOAD
0x11a DUP6
0x11b DUP2
0x11c ISZERO
0x11d ISZERO
0x11e PUSH2 0x123
0x121 JUMPI
---
0x6c: JUMPDEST 
0x6d: V26 = 0x0
0x6f: V27 = CALLVALUE
0x73: V28 = 0x4
0x75: V29 = 0x0
0x77: V30 = CALLER
0x78: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8e: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa5: M[0x0] = V34
0xa6: V35 = 0x20
0xa8: V36 = ADD 0x20 0x0
0xab: M[0x20] = 0x4
0xac: V37 = 0x20
0xae: V38 = ADD 0x20 0x20
0xaf: V39 = 0x0
0xb1: V40 = SHA3 0x0 0x40
0xb2: V41 = 0x0
0xb6: V42 = S[V40]
0xb7: V43 = ADD V42 V27
0xbd: S[V40] = V43
0xc0: V44 = 0x1
0xc2: V45 = 0x0
0xc6: V46 = S[0x1]
0xc7: V47 = ADD V46 V27
0xcd: S[0x1] = V47
0xcf: V48 = 0x3
0xd1: V49 = 0x0
0xd4: V50 = S[0x3]
0xd6: V51 = 0x100
0xd9: V52 = EXP 0x100 0x0
0xdb: V53 = DIV V50 0x1
0xdc: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xf2: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x108: V58 = 0xa9059cbb
0x10d: V59 = CALLER
0x10e: V60 = 0xde0b6b3a7640000
0x117: V61 = 0x2
0x119: V62 = S[0x2]
0x11c: V63 = ISZERO V62
0x11d: V64 = ISZERO V63
0x11e: V65 = 0x123
0x121: JUMPI 0x123 V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V27, V57, 0xa9059cbb, V59, 0xde0b6b3a7640000, V62, V27]
Exit stack: [V10, V27, V57, 0xa9059cbb, V59, 0xde0b6b3a7640000, V62, V27]

================================

Block 0x122
[0x122:0x122]
---
Predecessors: [0x6c]
Successors: []
---
0x122 INVALID
---
0x122: INVALID 
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V59, 0xde0b6b3a7640000, V62, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V59, 0xde0b6b3a7640000, V62, V27]

================================

Block 0x123
[0x123:0x1a4]
---
Predecessors: [0x6c]
Successors: [0x1a5, 0x1a9]
---
0x123 JUMPDEST
0x124 DIV
0x125 MUL
0x126 PUSH1 0x40
0x128 MLOAD
0x129 DUP4
0x12a PUSH4 0xffffffff
0x12f AND
0x130 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x14e MUL
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x4
0x153 ADD
0x154 DUP1
0x155 DUP4
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 DUP3
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP3
0x18e POP
0x18f POP
0x190 POP
0x191 PUSH1 0x0
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 DUP4
0x198 SUB
0x199 DUP2
0x19a PUSH1 0x0
0x19c DUP8
0x19d DUP1
0x19e EXTCODESIZE
0x19f ISZERO
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x123: JUMPDEST 
0x124: V66 = DIV V27 V62
0x125: V67 = MUL V66 0xde0b6b3a7640000
0x126: V68 = 0x40
0x128: V69 = M[0x40]
0x12a: V70 = 0xffffffff
0x12f: V71 = AND 0xffffffff 0xa9059cbb
0x130: V72 = 0x100000000000000000000000000000000000000000000000000000000
0x14e: V73 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x150: M[V69] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x151: V74 = 0x4
0x153: V75 = ADD 0x4 V69
0x156: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x16c: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x181: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x183: M[V75] = V79
0x184: V80 = 0x20
0x186: V81 = ADD 0x20 V75
0x189: M[V81] = V67
0x18a: V82 = 0x20
0x18c: V83 = ADD 0x20 V81
0x191: V84 = 0x0
0x193: V85 = 0x40
0x195: V86 = M[0x40]
0x198: V87 = SUB V83 V86
0x19a: V88 = 0x0
0x19e: V89 = EXTCODESIZE V57
0x19f: V90 = ISZERO V89
0x1a0: V91 = ISZERO V90
0x1a1: V92 = 0x1a9
0x1a4: JUMPI 0x1a9 V91
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V59, 0xde0b6b3a7640000, V62, V27]
Stack pops: 6
Stack additions: [S5, S4, V83, 0x0, V86, V87, V86, 0x0, S5]
Exit stack: [V10, V27, V57, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V57]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x123]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V93 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V57]

================================

Block 0x1a9
[0x1a9:0x1b5]
---
Predecessors: [0x123]
Successors: [0x1b6, 0x1ba]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x2c6
0x1ad GAS
0x1ae SUB
0x1af CALL
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V94 = 0x2c6
0x1ad: V95 = GAS
0x1ae: V96 = SUB V95 0x2c6
0x1af: V97 = CALL V96 V57 0x0 V86 V87 V86 0x0
0x1b0: V98 = ISZERO V97
0x1b1: V99 = ISZERO V98
0x1b2: V100 = 0x1ba
0x1b5: JUMPI 0x1ba V99
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V57]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V83]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V101 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27, V57, 0xa9059cbb, V83]

================================

Block 0x1ba
[0x1ba:0x291]
---
Predecessors: [0x1a9]
Successors: [0x292, 0x296]
---
0x1ba JUMPDEST
0x1bb POP
0x1bc POP
0x1bd POP
0x1be PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1df CALLER
0x1e0 DUP3
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 DUP5
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 DUP4
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e ADD
0x21f DUP3
0x220 ISZERO
0x221 ISZERO
0x222 ISZERO
0x223 ISZERO
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x20
0x228 ADD
0x229 SWAP4
0x22a POP
0x22b POP
0x22c POP
0x22d POP
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 SWAP2
0x233 SUB
0x234 SWAP1
0x235 LOG1
0x236 PUSH1 0x0
0x238 DUP1
0x239 SWAP1
0x23a SLOAD
0x23b SWAP1
0x23c PUSH2 0x100
0x23f EXP
0x240 SWAP1
0x241 DIV
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e PUSH2 0x8fc
0x271 DUP3
0x272 SWAP1
0x273 DUP2
0x274 ISZERO
0x275 MUL
0x276 SWAP1
0x277 PUSH1 0x40
0x279 MLOAD
0x27a PUSH1 0x0
0x27c PUSH1 0x40
0x27e MLOAD
0x27f DUP1
0x280 DUP4
0x281 SUB
0x282 DUP2
0x283 DUP6
0x284 DUP9
0x285 DUP9
0x286 CALL
0x287 SWAP4
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c ISZERO
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x1ba: JUMPDEST 
0x1be: V102 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1df: V103 = CALLER
0x1e1: V104 = 0x1
0x1e3: V105 = 0x40
0x1e5: V106 = M[0x40]
0x1e8: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1fe: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x215: M[V106] = V110
0x216: V111 = 0x20
0x218: V112 = ADD 0x20 V106
0x21b: M[V112] = V27
0x21c: V113 = 0x20
0x21e: V114 = ADD 0x20 V112
0x220: V115 = ISZERO 0x1
0x221: V116 = ISZERO 0x0
0x222: V117 = ISZERO 0x1
0x223: V118 = ISZERO 0x0
0x225: M[V114] = 0x1
0x226: V119 = 0x20
0x228: V120 = ADD 0x20 V114
0x22e: V121 = 0x40
0x230: V122 = M[0x40]
0x233: V123 = SUB V120 V122
0x235: LOG V122 V123 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x236: V124 = 0x0
0x23a: V125 = S[0x0]
0x23c: V126 = 0x100
0x23f: V127 = EXP 0x100 0x0
0x241: V128 = DIV V125 0x1
0x242: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x258: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x26e: V133 = 0x8fc
0x274: V134 = ISZERO V27
0x275: V135 = MUL V134 0x8fc
0x277: V136 = 0x40
0x279: V137 = M[0x40]
0x27a: V138 = 0x0
0x27c: V139 = 0x40
0x27e: V140 = M[0x40]
0x281: V141 = SUB V137 V140
0x286: V142 = CALL V135 V132 V27 V140 V141 V140 0x0
0x28c: V143 = ISZERO V142
0x28d: V144 = ISZERO V143
0x28e: V145 = 0x296
0x291: JUMPI 0x296 V144
---
Entry stack: [V10, V27, V57, 0xa9059cbb, V83]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, V27]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x1ba]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V146 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V10, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V27]

================================

Block 0x296
[0x296:0x32f]
---
Predecessors: [0x1ba]
Successors: [0x330]
---
0x296 JUMPDEST
0x297 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb SWAP1
0x2bc SLOAD
0x2bd SWAP1
0x2be PUSH2 0x100
0x2c1 EXP
0x2c2 SWAP1
0x2c3 DIV
0x2c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d9 AND
0x2da DUP3
0x2db PUSH1 0x0
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 DUP5
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d AND
0x30e DUP2
0x30f MSTORE
0x310 PUSH1 0x20
0x312 ADD
0x313 DUP4
0x314 DUP2
0x315 MSTORE
0x316 PUSH1 0x20
0x318 ADD
0x319 DUP3
0x31a ISZERO
0x31b ISZERO
0x31c ISZERO
0x31d ISZERO
0x31e DUP2
0x31f MSTORE
0x320 PUSH1 0x20
0x322 ADD
0x323 SWAP4
0x324 POP
0x325 POP
0x326 POP
0x327 POP
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c SWAP2
0x32d SUB
0x32e SWAP1
0x32f LOG1
---
0x296: JUMPDEST 
0x297: V147 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2b8: V148 = 0x0
0x2bc: V149 = S[0x0]
0x2be: V150 = 0x100
0x2c1: V151 = EXP 0x100 0x0
0x2c3: V152 = DIV V149 0x1
0x2c4: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2db: V155 = 0x0
0x2dd: V156 = 0x40
0x2df: V157 = M[0x40]
0x2e2: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x2f8: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x30f: M[V157] = V161
0x310: V162 = 0x20
0x312: V163 = ADD 0x20 V157
0x315: M[V163] = V27
0x316: V164 = 0x20
0x318: V165 = ADD 0x20 V163
0x31a: V166 = ISZERO 0x0
0x31b: V167 = ISZERO 0x1
0x31c: V168 = ISZERO 0x0
0x31d: V169 = ISZERO 0x1
0x31f: M[V165] = 0x0
0x320: V170 = 0x20
0x322: V171 = ADD 0x20 V165
0x328: V172 = 0x40
0x32a: V173 = M[0x40]
0x32d: V174 = SUB V171 V173
0x32f: LOG V173 V174 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, V27]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, V27]

================================

Block 0x330
[0x330:0x332]
---
Predecessors: [0x296]
Successors: []
---
0x330 JUMPDEST
0x331 POP
0x332 STOP
---
0x330: JUMPDEST 
0x332: STOP 
---
Entry stack: [V10, V27]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x333
[0x333:0x339]
---
Predecessors: [0xb]
Successors: [0x33a, 0x33e]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x333: JUMPDEST 
0x334: V175 = CALLVALUE
0x335: V176 = ISZERO V175
0x336: V177 = 0x33e
0x339: JUMPI 0x33e V176
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x333]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V178 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33e
[0x33e:0x345]
---
Predecessors: [0x333]
Successors: [0x47c]
---
0x33e JUMPDEST
0x33f PUSH2 0x346
0x342 PUSH2 0x47c
0x345 JUMP
---
0x33e: JUMPDEST 
0x33f: V179 = 0x346
0x342: V180 = 0x47c
0x345: JUMP 0x47c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x346]
Exit stack: [V10, 0x346]

================================

Block 0x346
[0x346:0x387]
---
Predecessors: [0x47c]
Successors: []
---
0x346 JUMPDEST
0x347 PUSH1 0x40
0x349 MLOAD
0x34a DUP1
0x34b DUP3
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 AND
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x20
0x37c ADD
0x37d SWAP2
0x37e POP
0x37f POP
0x380 PUSH1 0x40
0x382 MLOAD
0x383 DUP1
0x384 SWAP2
0x385 SUB
0x386 SWAP1
0x387 RETURN
---
0x346: JUMPDEST 
0x347: V181 = 0x40
0x349: V182 = M[0x40]
0x34c: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x362: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x379: M[V182] = V186
0x37a: V187 = 0x20
0x37c: V188 = ADD 0x20 V182
0x380: V189 = 0x40
0x382: V190 = M[0x40]
0x385: V191 = SUB V188 V190
0x387: RETURN V190 V191
---
Entry stack: [V10, 0x346, V260]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x346]

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0x3f]
Successors: [0x38f, 0x393]
---
0x388 JUMPDEST
0x389 CALLVALUE
0x38a ISZERO
0x38b PUSH2 0x393
0x38e JUMPI
---
0x388: JUMPDEST 
0x389: V192 = CALLVALUE
0x38a: V193 = ISZERO V192
0x38b: V194 = 0x393
0x38e: JUMPI 0x393 V193
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x388]
Successors: []
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
---
0x38f: V195 = 0x0
0x392: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x393
[0x393:0x3be]
---
Predecessors: [0x388]
Successors: [0x4a1]
---
0x393 JUMPDEST
0x394 PUSH2 0x3bf
0x397 PUSH1 0x4
0x399 DUP1
0x39a DUP1
0x39b CALLDATALOAD
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 SWAP1
0x3b3 PUSH1 0x20
0x3b5 ADD
0x3b6 SWAP1
0x3b7 SWAP2
0x3b8 SWAP1
0x3b9 POP
0x3ba POP
0x3bb PUSH2 0x4a1
0x3be JUMP
---
0x393: JUMPDEST 
0x394: V196 = 0x3bf
0x397: V197 = 0x4
0x39b: V198 = CALLDATALOAD 0x4
0x39c: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x3b3: V201 = 0x20
0x3b5: V202 = ADD 0x20 0x4
0x3bb: V203 = 0x4a1
0x3be: JUMP 0x4a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3bf, V200]
Exit stack: [V10, 0x3bf, V200]

================================

Block 0x3bf
[0x3bf:0x3d4]
---
Predecessors: [0x4a1]
Successors: []
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 DUP1
0x3c4 DUP3
0x3c5 DUP2
0x3c6 MSTORE
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP2
0x3cb POP
0x3cc POP
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 SWAP2
0x3d2 SUB
0x3d3 SWAP1
0x3d4 RETURN
---
0x3bf: JUMPDEST 
0x3c0: V204 = 0x40
0x3c2: V205 = M[0x40]
0x3c6: M[V205] = V268
0x3c7: V206 = 0x20
0x3c9: V207 = ADD 0x20 V205
0x3cd: V208 = 0x40
0x3cf: V209 = M[0x40]
0x3d2: V210 = SUB V207 V209
0x3d4: RETURN V209 V210
---
Entry stack: [V10, 0x3bf, V268]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3bf]

================================

Block 0x3d5
[0x3d5:0x3db]
---
Predecessors: [0x4a]
Successors: [0x3dc, 0x3e0]
---
0x3d5 JUMPDEST
0x3d6 CALLVALUE
0x3d7 ISZERO
0x3d8 PUSH2 0x3e0
0x3db JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V211 = CALLVALUE
0x3d7: V212 = ISZERO V211
0x3d8: V213 = 0x3e0
0x3db: JUMPI 0x3e0 V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3d5]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V214 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e0
[0x3e0:0x3e7]
---
Predecessors: [0x3d5]
Successors: [0x4b9]
---
0x3e0 JUMPDEST
0x3e1 PUSH2 0x3e8
0x3e4 PUSH2 0x4b9
0x3e7 JUMP
---
0x3e0: JUMPDEST 
0x3e1: V215 = 0x3e8
0x3e4: V216 = 0x4b9
0x3e7: JUMP 0x4b9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3e8]
Exit stack: [V10, 0x3e8]

================================

Block 0x3e8
[0x3e8:0x3fd]
---
Predecessors: [0x4b9]
Successors: []
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x40
0x3eb MLOAD
0x3ec DUP1
0x3ed DUP3
0x3ee DUP2
0x3ef MSTORE
0x3f0 PUSH1 0x20
0x3f2 ADD
0x3f3 SWAP2
0x3f4 POP
0x3f5 POP
0x3f6 PUSH1 0x40
0x3f8 MLOAD
0x3f9 DUP1
0x3fa SWAP2
0x3fb SUB
0x3fc SWAP1
0x3fd RETURN
---
0x3e8: JUMPDEST 
0x3e9: V217 = 0x40
0x3eb: V218 = M[0x40]
0x3ef: M[V218] = V270
0x3f0: V219 = 0x20
0x3f2: V220 = ADD 0x20 V218
0x3f6: V221 = 0x40
0x3f8: V222 = M[0x40]
0x3fb: V223 = SUB V220 V222
0x3fd: RETURN V222 V223
---
Entry stack: [V10, 0x3e8, V270]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3e8]

================================

Block 0x3fe
[0x3fe:0x404]
---
Predecessors: [0x55]
Successors: [0x405, 0x409]
---
0x3fe JUMPDEST
0x3ff CALLVALUE
0x400 ISZERO
0x401 PUSH2 0x409
0x404 JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V224 = CALLVALUE
0x400: V225 = ISZERO V224
0x401: V226 = 0x409
0x404: JUMPI 0x409 V225
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x405
[0x405:0x408]
---
Predecessors: [0x3fe]
Successors: []
---
0x405 PUSH1 0x0
0x407 DUP1
0x408 REVERT
---
0x405: V227 = 0x0
0x408: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x409
[0x409:0x410]
---
Predecessors: [0x3fe]
Successors: [0x4bf]
---
0x409 JUMPDEST
0x40a PUSH2 0x411
0x40d PUSH2 0x4bf
0x410 JUMP
---
0x409: JUMPDEST 
0x40a: V228 = 0x411
0x40d: V229 = 0x4bf
0x410: JUMP 0x4bf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x411]
Exit stack: [V10, 0x411]

================================

Block 0x411
[0x411:0x426]
---
Predecessors: [0x4bf]
Successors: []
---
0x411 JUMPDEST
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 DUP3
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x20
0x41b ADD
0x41c SWAP2
0x41d POP
0x41e POP
0x41f PUSH1 0x40
0x421 MLOAD
0x422 DUP1
0x423 SWAP2
0x424 SUB
0x425 SWAP1
0x426 RETURN
---
0x411: JUMPDEST 
0x412: V230 = 0x40
0x414: V231 = M[0x40]
0x418: M[V231] = V272
0x419: V232 = 0x20
0x41b: V233 = ADD 0x20 V231
0x41f: V234 = 0x40
0x421: V235 = M[0x40]
0x424: V236 = SUB V233 V235
0x426: RETURN V235 V236
---
Entry stack: [V10, 0x411, V272]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x411]

================================

Block 0x427
[0x427:0x42d]
---
Predecessors: [0x60]
Successors: [0x42e, 0x432]
---
0x427 JUMPDEST
0x428 CALLVALUE
0x429 ISZERO
0x42a PUSH2 0x432
0x42d JUMPI
---
0x427: JUMPDEST 
0x428: V237 = CALLVALUE
0x429: V238 = ISZERO V237
0x42a: V239 = 0x432
0x42d: JUMPI 0x432 V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42e
[0x42e:0x431]
---
Predecessors: [0x427]
Successors: []
---
0x42e PUSH1 0x0
0x430 DUP1
0x431 REVERT
---
0x42e: V240 = 0x0
0x431: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x432
[0x432:0x439]
---
Predecessors: [0x427]
Successors: [0x4c5]
---
0x432 JUMPDEST
0x433 PUSH2 0x43a
0x436 PUSH2 0x4c5
0x439 JUMP
---
0x432: JUMPDEST 
0x433: V241 = 0x43a
0x436: V242 = 0x4c5
0x439: JUMP 0x4c5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x43a]
Exit stack: [V10, 0x43a]

================================

Block 0x43a
[0x43a:0x47b]
---
Predecessors: [0x4c5]
Successors: []
---
0x43a JUMPDEST
0x43b PUSH1 0x40
0x43d MLOAD
0x43e DUP1
0x43f DUP3
0x440 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x455 AND
0x456 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46b AND
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 SWAP2
0x472 POP
0x473 POP
0x474 PUSH1 0x40
0x476 MLOAD
0x477 DUP1
0x478 SWAP2
0x479 SUB
0x47a SWAP1
0x47b RETURN
---
0x43a: JUMPDEST 
0x43b: V243 = 0x40
0x43d: V244 = M[0x40]
0x440: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x455: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x456: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x46d: M[V244] = V248
0x46e: V249 = 0x20
0x470: V250 = ADD 0x20 V244
0x474: V251 = 0x40
0x476: V252 = M[0x40]
0x479: V253 = SUB V250 V252
0x47b: RETURN V252 V253
---
Entry stack: [V10, 0x43a, V280]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x43a]

================================

Block 0x47c
[0x47c:0x4a0]
---
Predecessors: [0x33e]
Successors: [0x346]
---
0x47c JUMPDEST
0x47d PUSH1 0x0
0x47f DUP1
0x480 SWAP1
0x481 SLOAD
0x482 SWAP1
0x483 PUSH2 0x100
0x486 EXP
0x487 SWAP1
0x488 DIV
0x489 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49e AND
0x49f DUP2
0x4a0 JUMP
---
0x47c: JUMPDEST 
0x47d: V254 = 0x0
0x481: V255 = S[0x0]
0x483: V256 = 0x100
0x486: V257 = EXP 0x100 0x0
0x488: V258 = DIV V255 0x1
0x489: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x4a0: JUMP 0x346
---
Entry stack: [V10, 0x346]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V10, 0x346, V260]

================================

Block 0x4a1
[0x4a1:0x4b8]
---
Predecessors: [0x393]
Successors: [0x3bf]
---
0x4a1 JUMPDEST
0x4a2 PUSH1 0x4
0x4a4 PUSH1 0x20
0x4a6 MSTORE
0x4a7 DUP1
0x4a8 PUSH1 0x0
0x4aa MSTORE
0x4ab PUSH1 0x40
0x4ad PUSH1 0x0
0x4af SHA3
0x4b0 PUSH1 0x0
0x4b2 SWAP2
0x4b3 POP
0x4b4 SWAP1
0x4b5 POP
0x4b6 SLOAD
0x4b7 DUP2
0x4b8 JUMP
---
0x4a1: JUMPDEST 
0x4a2: V261 = 0x4
0x4a4: V262 = 0x20
0x4a6: M[0x20] = 0x4
0x4a8: V263 = 0x0
0x4aa: M[0x0] = V200
0x4ab: V264 = 0x40
0x4ad: V265 = 0x0
0x4af: V266 = SHA3 0x0 0x40
0x4b0: V267 = 0x0
0x4b6: V268 = S[V266]
0x4b8: JUMP 0x3bf
---
Entry stack: [V10, 0x3bf, V200]
Stack pops: 2
Stack additions: [S1, V268]
Exit stack: [V10, 0x3bf, V268]

================================

Block 0x4b9
[0x4b9:0x4be]
---
Predecessors: [0x3e0]
Successors: [0x3e8]
---
0x4b9 JUMPDEST
0x4ba PUSH1 0x1
0x4bc SLOAD
0x4bd DUP2
0x4be JUMP
---
0x4b9: JUMPDEST 
0x4ba: V269 = 0x1
0x4bc: V270 = S[0x1]
0x4be: JUMP 0x3e8
---
Entry stack: [V10, 0x3e8]
Stack pops: 1
Stack additions: [S0, V270]
Exit stack: [V10, 0x3e8, V270]

================================

Block 0x4bf
[0x4bf:0x4c4]
---
Predecessors: [0x409]
Successors: [0x411]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x2
0x4c2 SLOAD
0x4c3 DUP2
0x4c4 JUMP
---
0x4bf: JUMPDEST 
0x4c0: V271 = 0x2
0x4c2: V272 = S[0x2]
0x4c4: JUMP 0x411
---
Entry stack: [V10, 0x411]
Stack pops: 1
Stack additions: [S0, V272]
Exit stack: [V10, 0x411, V272]

================================

Block 0x4c5
[0x4c5:0x4ea]
---
Predecessors: [0x432]
Successors: [0x43a]
---
0x4c5 JUMPDEST
0x4c6 PUSH1 0x3
0x4c8 PUSH1 0x0
0x4ca SWAP1
0x4cb SLOAD
0x4cc SWAP1
0x4cd PUSH2 0x100
0x4d0 EXP
0x4d1 SWAP1
0x4d2 DIV
0x4d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e8 AND
0x4e9 DUP2
0x4ea JUMP
---
0x4c5: JUMPDEST 
0x4c6: V273 = 0x3
0x4c8: V274 = 0x0
0x4cb: V275 = S[0x3]
0x4cd: V276 = 0x100
0x4d0: V277 = EXP 0x100 0x0
0x4d2: V278 = DIV V275 0x1
0x4d3: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4ea: JUMP 0x43a
---
Entry stack: [V10, 0x43a]
Stack pops: 1
Stack additions: [S0, V280]
Exit stack: [V10, 0x43a, V280]

================================

Block 0x4eb
[0x4eb:0x51d]
---
Predecessors: []
Successors: []
---
0x4eb STOP
0x4ec LOG1
0x4ed PUSH6 0x627a7a723058
0x4f4 SHA3
0x4f5 MISSING 0xd3
0x4f6 SWAP11
0x4f7 MISSING 0x26
0x4f8 PUSH1 0xcf
0x4fa MISSING 0xf7
0x4fb MISSING 0xc1
0x4fc SWAP7
0x4fd MISSING 0xd7
0x4fe MISSING 0xde
0x4ff MISSING 0xdd
0x500 MISSING 0x2a
0x501 POP
0x502 PUSH27 0x6f51d1a782af06c6e01dbf6cac50fb223b4e0029
---
0x4eb: STOP 
0x4ec: LOG S0 S1 S2
0x4ed: V281 = 0x627a7a723058
0x4f4: V282 = SHA3 0x627a7a723058 S3
0x4f5: MISSING 0xd3
0x4f7: MISSING 0x26
0x4f8: V283 = 0xcf
0x4fa: MISSING 0xf7
0x4fb: MISSING 0xc1
0x4fd: MISSING 0xd7
0x4fe: MISSING 0xde
0x4ff: MISSING 0xdd
0x500: MISSING 0x2a
0x502: V284 = 0x6f51d1a782af06c6e01dbf6cac50fb223b4e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V282, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0xcf, S7, S1, S2, S3, S4, S5, S6, S0, 0x6f51d1a782af06c6e01dbf6cac50fb223b4e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0x333
Exit block: 0x346
Body: 0x333, 0x33a, 0x33e, 0x346, 0x47c

Function 1:
Public function signature: 0x70a08231
Entry block: 0x388
Exit block: 0x3bf
Body: 0x388, 0x38f, 0x393, 0x3bf, 0x4a1

Function 2:
Public function signature: 0x7b3e5e7b
Entry block: 0x3d5
Exit block: 0x3e8
Body: 0x3d5, 0x3dc, 0x3e0, 0x3e8, 0x4b9

Function 3:
Public function signature: 0xa035b1fe
Entry block: 0x3fe
Exit block: 0x411
Body: 0x3fe, 0x405, 0x409, 0x411, 0x4bf

Function 4:
Public function signature: 0xd68fac6d
Entry block: 0x427
Exit block: 0x43a
Body: 0x427, 0x42e, 0x432, 0x43a, 0x4c5

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x330
Body: 0x6b, 0x6c, 0x122, 0x123, 0x1a5, 0x1a9, 0x1b6, 0x1ba, 0x292, 0x296, 0x330

