Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3576a32f
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3576a32f
0x3c: V13 = EQ 0x3576a32f V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xab]
---
0x41 DUP1
0x42 PUSH4 0x3af8e4ab
0x47 EQ
0x48 PUSH2 0xab
0x4b JUMPI
---
0x42: V15 = 0x3af8e4ab
0x47: V16 = EQ 0x3af8e4ab V11
0x48: V17 = 0xab
0x4b: JUMPI 0xab V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x100]
---
0x4c DUP1
0x4d PUSH4 0x3ccfd60b
0x52 EQ
0x53 PUSH2 0x100
0x56 JUMPI
---
0x4d: V18 = 0x3ccfd60b
0x52: V19 = EQ 0x3ccfd60b V11
0x53: V20 = 0x100
0x56: JUMPI 0x100 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x115]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x115
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x115
0x61: JUMPI 0x115 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x16a]
---
0x62 DUP1
0x63 PUSH4 0xad8733ca
0x68 EQ
0x69 PUSH2 0x16a
0x6c JUMPI
---
0x63: V24 = 0xad8733ca
0x68: V25 = EQ 0xad8733ca V11
0x69: V26 = 0x16a
0x6c: JUMPI 0x16a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0xd]
Successors: [0x79, 0x7d]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V28 = CALLVALUE
0x74: V29 = ISZERO V28
0x75: V30 = 0x7d
0x78: JUMPI 0x7d V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x72]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V31 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0xa8]
---
Predecessors: [0x72]
Successors: [0x237]
---
0x7d JUMPDEST
0x7e PUSH2 0xa9
0x81 PUSH1 0x4
0x83 DUP1
0x84 DUP1
0x85 CALLDATALOAD
0x86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b AND
0x9c SWAP1
0x9d PUSH1 0x20
0x9f ADD
0xa0 SWAP1
0xa1 SWAP2
0xa2 SWAP1
0xa3 POP
0xa4 POP
0xa5 PUSH2 0x237
0xa8 JUMP
---
0x7d: JUMPDEST 
0x7e: V32 = 0xa9
0x81: V33 = 0x4
0x85: V34 = CALLDATALOAD 0x4
0x86: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x9d: V37 = 0x20
0x9f: V38 = ADD 0x20 0x4
0xa5: V39 = 0x237
0xa8: JUMP 0x237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa9, V36]
Exit stack: [V11, 0xa9, V36]

================================

Block 0xa9
[0xa9:0xaa]
---
Predecessors: [0x2ea]
Successors: []
---
0xa9 JUMPDEST
0xaa STOP
---
0xa9: JUMPDEST 
0xaa: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xab
[0xab:0xb1]
---
Predecessors: [0x41]
Successors: [0xb2, 0xb6]
---
0xab JUMPDEST
0xac CALLVALUE
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xab: JUMPDEST 
0xac: V40 = CALLVALUE
0xad: V41 = ISZERO V40
0xae: V42 = 0xb6
0xb1: JUMPI 0xb6 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xab]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V43 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0xab]
Successors: [0x32d]
---
0xb6 JUMPDEST
0xb7 PUSH2 0xbe
0xba PUSH2 0x32d
0xbd JUMP
---
0xb6: JUMPDEST 
0xb7: V44 = 0xbe
0xba: V45 = 0x32d
0xbd: JUMP 0x32d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbe]
Exit stack: [V11, 0xbe]

================================

Block 0xbe
[0xbe:0xff]
---
Predecessors: [0x32d]
Successors: []
---
0xbe JUMPDEST
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 DUP3
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP2
0xf6 POP
0xf7 POP
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc SWAP2
0xfd SUB
0xfe SWAP1
0xff RETURN
---
0xbe: JUMPDEST 
0xbf: V46 = 0x40
0xc1: V47 = M[0x40]
0xc4: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0xda: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xf1: M[V47] = V51
0xf2: V52 = 0x20
0xf4: V53 = ADD 0x20 V47
0xf8: V54 = 0x40
0xfa: V55 = M[0x40]
0xfd: V56 = SUB V53 V55
0xff: RETURN V55 V56
---
Entry stack: [V11, 0xbe, V189]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbe]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x4c]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V57 = CALLVALUE
0x102: V58 = ISZERO V57
0x103: V59 = 0x10b
0x106: JUMPI 0x10b V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V60 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x352]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x352
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V61 = 0x113
0x10f: V62 = 0x352
0x112: JUMP 0x352
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x113]

================================

Block 0x113
[0x113:0x114]
---
Predecessors: [0x47e]
Successors: []
---
0x113 JUMPDEST
0x114 STOP
---
0x113: JUMPDEST 
0x114: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0x57]
Successors: [0x11c, 0x120]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V63 = CALLVALUE
0x117: V64 = ISZERO V63
0x118: V65 = 0x120
0x11b: JUMPI 0x120 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x115]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V66 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x115]
Successors: [0x480]
---
0x120 JUMPDEST
0x121 PUSH2 0x128
0x124 PUSH2 0x480
0x127 JUMP
---
0x120: JUMPDEST 
0x121: V67 = 0x128
0x124: V68 = 0x480
0x127: JUMP 0x480
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V11, 0x128]

================================

Block 0x128
[0x128:0x169]
---
Predecessors: [0x480]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP1
0x12d DUP3
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP2
0x160 POP
0x161 POP
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 SWAP2
0x167 SUB
0x168 SWAP1
0x169 RETURN
---
0x128: JUMPDEST 
0x129: V69 = 0x40
0x12b: V70 = M[0x40]
0x12e: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x144: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x15b: M[V70] = V74
0x15c: V75 = 0x20
0x15e: V76 = ADD 0x20 V70
0x162: V77 = 0x40
0x164: V78 = M[0x40]
0x167: V79 = SUB V76 V78
0x169: RETURN V78 V79
---
Entry stack: [V11, 0x128, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x128]

================================

Block 0x16a
[0x16a:0x170]
---
Predecessors: [0x62]
Successors: [0x171, 0x175]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x16a: JUMPDEST 
0x16b: V80 = CALLVALUE
0x16c: V81 = ISZERO V80
0x16d: V82 = 0x175
0x170: JUMPI 0x175 V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x16a]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V83 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x175
[0x175:0x220]
---
Predecessors: [0x16a]
Successors: [0x4a6]
---
0x175 JUMPDEST
0x176 PUSH2 0x221
0x179 PUSH1 0x4
0x17b DUP1
0x17c DUP1
0x17d CALLDATALOAD
0x17e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x193 AND
0x194 SWAP1
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 SWAP2
0x19a SWAP1
0x19b DUP1
0x19c CALLDATALOAD
0x19d SWAP1
0x19e PUSH1 0x20
0x1a0 ADD
0x1a1 SWAP1
0x1a2 DUP3
0x1a3 ADD
0x1a4 DUP1
0x1a5 CALLDATALOAD
0x1a6 SWAP1
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP1
0x1ab DUP1
0x1ac DUP1
0x1ad PUSH1 0x20
0x1af MUL
0x1b0 PUSH1 0x20
0x1b2 ADD
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 SWAP1
0x1b7 DUP2
0x1b8 ADD
0x1b9 PUSH1 0x40
0x1bb MSTORE
0x1bc DUP1
0x1bd SWAP4
0x1be SWAP3
0x1bf SWAP2
0x1c0 SWAP1
0x1c1 DUP2
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 DUP4
0x1c8 DUP4
0x1c9 PUSH1 0x20
0x1cb MUL
0x1cc DUP1
0x1cd DUP3
0x1ce DUP5
0x1cf CALLDATACOPY
0x1d0 DUP3
0x1d1 ADD
0x1d2 SWAP2
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 SWAP2
0x1da SWAP1
0x1db DUP1
0x1dc CALLDATALOAD
0x1dd SWAP1
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 SWAP1
0x1e2 DUP3
0x1e3 ADD
0x1e4 DUP1
0x1e5 CALLDATALOAD
0x1e6 SWAP1
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea SWAP1
0x1eb DUP1
0x1ec DUP1
0x1ed PUSH1 0x20
0x1ef MUL
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 SWAP1
0x1f7 DUP2
0x1f8 ADD
0x1f9 PUSH1 0x40
0x1fb MSTORE
0x1fc DUP1
0x1fd SWAP4
0x1fe SWAP3
0x1ff SWAP2
0x200 SWAP1
0x201 DUP2
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 DUP4
0x208 DUP4
0x209 PUSH1 0x20
0x20b MUL
0x20c DUP1
0x20d DUP3
0x20e DUP5
0x20f CALLDATACOPY
0x210 DUP3
0x211 ADD
0x212 SWAP2
0x213 POP
0x214 POP
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 SWAP2
0x21a SWAP1
0x21b POP
0x21c POP
0x21d PUSH2 0x4a6
0x220 JUMP
---
0x175: JUMPDEST 
0x176: V84 = 0x221
0x179: V85 = 0x4
0x17d: V86 = CALLDATALOAD 0x4
0x17e: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x193: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x195: V89 = 0x20
0x197: V90 = ADD 0x20 0x4
0x19c: V91 = CALLDATALOAD 0x24
0x19e: V92 = 0x20
0x1a0: V93 = ADD 0x20 0x24
0x1a3: V94 = ADD 0x4 V91
0x1a5: V95 = CALLDATALOAD V94
0x1a7: V96 = 0x20
0x1a9: V97 = ADD 0x20 V94
0x1ad: V98 = 0x20
0x1af: V99 = MUL 0x20 V95
0x1b0: V100 = 0x20
0x1b2: V101 = ADD 0x20 V99
0x1b3: V102 = 0x40
0x1b5: V103 = M[0x40]
0x1b8: V104 = ADD V103 V101
0x1b9: V105 = 0x40
0x1bb: M[0x40] = V104
0x1c3: M[V103] = V95
0x1c4: V106 = 0x20
0x1c6: V107 = ADD 0x20 V103
0x1c9: V108 = 0x20
0x1cb: V109 = MUL 0x20 V95
0x1cf: CALLDATACOPY V107 V97 V109
0x1d1: V110 = ADD V107 V109
0x1dc: V111 = CALLDATALOAD 0x44
0x1de: V112 = 0x20
0x1e0: V113 = ADD 0x20 0x44
0x1e3: V114 = ADD 0x4 V111
0x1e5: V115 = CALLDATALOAD V114
0x1e7: V116 = 0x20
0x1e9: V117 = ADD 0x20 V114
0x1ed: V118 = 0x20
0x1ef: V119 = MUL 0x20 V115
0x1f0: V120 = 0x20
0x1f2: V121 = ADD 0x20 V119
0x1f3: V122 = 0x40
0x1f5: V123 = M[0x40]
0x1f8: V124 = ADD V123 V121
0x1f9: V125 = 0x40
0x1fb: M[0x40] = V124
0x203: M[V123] = V115
0x204: V126 = 0x20
0x206: V127 = ADD 0x20 V123
0x209: V128 = 0x20
0x20b: V129 = MUL 0x20 V115
0x20f: CALLDATACOPY V127 V117 V129
0x211: V130 = ADD V127 V129
0x21d: V131 = 0x4a6
0x220: JUMP 0x4a6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x221, V88, V103, V123]
Exit stack: [V11, 0x221, V88, V103, V123]

================================

Block 0x221
[0x221:0x236]
---
Predecessors: [0x65d]
Successors: []
---
0x221 JUMPDEST
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 DUP3
0x227 DUP2
0x228 MSTORE
0x229 PUSH1 0x20
0x22b ADD
0x22c SWAP2
0x22d POP
0x22e POP
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 SWAP2
0x234 SUB
0x235 SWAP1
0x236 RETURN
---
0x221: JUMPDEST 
0x222: V132 = 0x40
0x224: V133 = M[0x40]
0x228: M[V133] = S0
0x229: V134 = 0x20
0x22b: V135 = ADD 0x20 V133
0x22f: V136 = 0x40
0x231: V137 = M[0x40]
0x234: V138 = SUB V135 V137
0x236: RETURN V137 V138
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x237
[0x237:0x28d]
---
Predecessors: [0x7d]
Successors: [0x28e, 0x2df]
---
0x237 JUMPDEST
0x238 PUSH1 0x1
0x23a PUSH1 0x0
0x23c SWAP1
0x23d SLOAD
0x23e SWAP1
0x23f PUSH2 0x100
0x242 EXP
0x243 SWAP1
0x244 DIV
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a AND
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 CALLER
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 EQ
0x289 DUP1
0x28a PUSH2 0x2df
0x28d JUMPI
---
0x237: JUMPDEST 
0x238: V139 = 0x1
0x23a: V140 = 0x0
0x23d: V141 = S[0x1]
0x23f: V142 = 0x100
0x242: V143 = EXP 0x100 0x0
0x244: V144 = DIV V141 0x1
0x245: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x25b: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x271: V149 = CALLER
0x272: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x288: V152 = EQ V151 V148
0x28a: V153 = 0x2df
0x28d: JUMPI 0x2df V152
---
Entry stack: [V11, 0xa9, V36]
Stack pops: 0
Stack additions: [V152]
Exit stack: [V11, 0xa9, V36, V152]

================================

Block 0x28e
[0x28e:0x2de]
---
Predecessors: [0x237]
Successors: [0x2df]
---
0x28e POP
0x28f PUSH1 0x0
0x291 DUP1
0x292 SWAP1
0x293 SLOAD
0x294 SWAP1
0x295 PUSH2 0x100
0x298 EXP
0x299 SWAP1
0x29a DIV
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c6 AND
0x2c7 CALLER
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd AND
0x2de EQ
---
0x28f: V154 = 0x0
0x293: V155 = S[0x0]
0x295: V156 = 0x100
0x298: V157 = EXP 0x100 0x0
0x29a: V158 = DIV V155 0x1
0x29b: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2b1: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x2c7: V163 = CALLER
0x2c8: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2de: V166 = EQ V165 V162
---
Entry stack: [V11, 0xa9, V36, V152]
Stack pops: 1
Stack additions: [V166]
Exit stack: [V11, 0xa9, V36, V166]

================================

Block 0x2df
[0x2df:0x2e5]
---
Predecessors: [0x237, 0x28e]
Successors: [0x2e6, 0x2ea]
---
0x2df JUMPDEST
0x2e0 ISZERO
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V167 = ISZERO S0
0x2e1: V168 = ISZERO V167
0x2e2: V169 = 0x2ea
0x2e5: JUMPI 0x2ea V168
---
Entry stack: [V11, 0xa9, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa9, V36]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2df]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V170 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V36]

================================

Block 0x2ea
[0x2ea:0x32c]
---
Predecessors: [0x2df]
Successors: [0xa9]
---
0x2ea JUMPDEST
0x2eb DUP1
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef PUSH2 0x100
0x2f2 EXP
0x2f3 DUP2
0x2f4 SLOAD
0x2f5 DUP2
0x2f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30b MUL
0x30c NOT
0x30d AND
0x30e SWAP1
0x30f DUP4
0x310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x325 AND
0x326 MUL
0x327 OR
0x328 SWAP1
0x329 SSTORE
0x32a POP
0x32b POP
0x32c JUMP
---
0x2ea: JUMPDEST 
0x2ec: V171 = 0x0
0x2ef: V172 = 0x100
0x2f2: V173 = EXP 0x100 0x0
0x2f4: V174 = S[0x0]
0x2f6: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V176 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x30c: V177 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V178 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V174
0x310: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x325: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x326: V181 = MUL V180 0x1
0x327: V182 = OR V181 V178
0x329: S[0x0] = V182
0x32c: JUMP 0xa9
---
Entry stack: [V11, 0xa9, V36]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x32d
[0x32d:0x351]
---
Predecessors: [0xb6]
Successors: [0xbe]
---
0x32d JUMPDEST
0x32e PUSH1 0x0
0x330 DUP1
0x331 SWAP1
0x332 SLOAD
0x333 SWAP1
0x334 PUSH2 0x100
0x337 EXP
0x338 SWAP1
0x339 DIV
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 DUP2
0x351 JUMP
---
0x32d: JUMPDEST 
0x32e: V183 = 0x0
0x332: V184 = S[0x0]
0x334: V185 = 0x100
0x337: V186 = EXP 0x100 0x0
0x339: V187 = DIV V184 0x1
0x33a: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x351: JUMP 0xbe
---
Entry stack: [V11, 0xbe]
Stack pops: 1
Stack additions: [S0, V189]
Exit stack: [V11, 0xbe, V189]

================================

Block 0x352
[0x352:0x3a8]
---
Predecessors: [0x10b]
Successors: [0x3a9, 0x3fa]
---
0x352 JUMPDEST
0x353 PUSH1 0x1
0x355 PUSH1 0x0
0x357 SWAP1
0x358 SLOAD
0x359 SWAP1
0x35a PUSH2 0x100
0x35d EXP
0x35e SWAP1
0x35f DIV
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38b AND
0x38c CALLER
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 EQ
0x3a4 DUP1
0x3a5 PUSH2 0x3fa
0x3a8 JUMPI
---
0x352: JUMPDEST 
0x353: V190 = 0x1
0x355: V191 = 0x0
0x358: V192 = S[0x1]
0x35a: V193 = 0x100
0x35d: V194 = EXP 0x100 0x0
0x35f: V195 = DIV V192 0x1
0x360: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x376: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x38c: V200 = CALLER
0x38d: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x3a3: V203 = EQ V202 V199
0x3a5: V204 = 0x3fa
0x3a8: JUMPI 0x3fa V203
---
Entry stack: [V11, 0x113]
Stack pops: 0
Stack additions: [V203]
Exit stack: [V11, 0x113, V203]

================================

Block 0x3a9
[0x3a9:0x3f9]
---
Predecessors: [0x352]
Successors: [0x3fa]
---
0x3a9 POP
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad SWAP1
0x3ae SLOAD
0x3af SWAP1
0x3b0 PUSH2 0x100
0x3b3 EXP
0x3b4 SWAP1
0x3b5 DIV
0x3b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cb AND
0x3cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e1 AND
0x3e2 CALLER
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 EQ
---
0x3aa: V205 = 0x0
0x3ae: V206 = S[0x0]
0x3b0: V207 = 0x100
0x3b3: V208 = EXP 0x100 0x0
0x3b5: V209 = DIV V206 0x1
0x3b6: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x3cc: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x3e2: V214 = CALLER
0x3e3: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3f9: V217 = EQ V216 V213
---
Entry stack: [V11, 0x113, V203]
Stack pops: 1
Stack additions: [V217]
Exit stack: [V11, 0x113, V217]

================================

Block 0x3fa
[0x3fa:0x400]
---
Predecessors: [0x352, 0x3a9]
Successors: [0x401, 0x405]
---
0x3fa JUMPDEST
0x3fb ISZERO
0x3fc ISZERO
0x3fd PUSH2 0x405
0x400 JUMPI
---
0x3fa: JUMPDEST 
0x3fb: V218 = ISZERO S0
0x3fc: V219 = ISZERO V218
0x3fd: V220 = 0x405
0x400: JUMPI 0x405 V219
---
Entry stack: [V11, 0x113, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x113]

================================

Block 0x401
[0x401:0x404]
---
Predecessors: [0x3fa]
Successors: []
---
0x401 PUSH1 0x0
0x403 DUP1
0x404 REVERT
---
0x401: V221 = 0x0
0x404: REVERT 0x0 0x0
---
Entry stack: [V11, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x113]

================================

Block 0x405
[0x405:0x479]
---
Predecessors: [0x3fa]
Successors: [0x47a, 0x47e]
---
0x405 JUMPDEST
0x406 PUSH1 0x1
0x408 PUSH1 0x0
0x40a SWAP1
0x40b SLOAD
0x40c SWAP1
0x40d PUSH2 0x100
0x410 EXP
0x411 SWAP1
0x412 DIV
0x413 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x428 AND
0x429 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43e AND
0x43f PUSH2 0x8fc
0x442 ADDRESS
0x443 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x458 AND
0x459 BALANCE
0x45a SWAP1
0x45b DUP2
0x45c ISZERO
0x45d MUL
0x45e SWAP1
0x45f PUSH1 0x40
0x461 MLOAD
0x462 PUSH1 0x0
0x464 PUSH1 0x40
0x466 MLOAD
0x467 DUP1
0x468 DUP4
0x469 SUB
0x46a DUP2
0x46b DUP6
0x46c DUP9
0x46d DUP9
0x46e CALL
0x46f SWAP4
0x470 POP
0x471 POP
0x472 POP
0x473 POP
0x474 ISZERO
0x475 ISZERO
0x476 PUSH2 0x47e
0x479 JUMPI
---
0x405: JUMPDEST 
0x406: V222 = 0x1
0x408: V223 = 0x0
0x40b: V224 = S[0x1]
0x40d: V225 = 0x100
0x410: V226 = EXP 0x100 0x0
0x412: V227 = DIV V224 0x1
0x413: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x428: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x429: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x43e: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x43f: V232 = 0x8fc
0x442: V233 = ADDRESS
0x443: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x458: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x459: V236 = BALANCE V235
0x45c: V237 = ISZERO V236
0x45d: V238 = MUL V237 0x8fc
0x45f: V239 = 0x40
0x461: V240 = M[0x40]
0x462: V241 = 0x0
0x464: V242 = 0x40
0x466: V243 = M[0x40]
0x469: V244 = SUB V240 V243
0x46e: V245 = CALL V238 V231 V236 V243 V244 V243 0x0
0x474: V246 = ISZERO V245
0x475: V247 = ISZERO V246
0x476: V248 = 0x47e
0x479: JUMPI 0x47e V247
---
Entry stack: [V11, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x113]

================================

Block 0x47a
[0x47a:0x47d]
---
Predecessors: [0x405]
Successors: []
---
0x47a PUSH1 0x0
0x47c DUP1
0x47d REVERT
---
0x47a: V249 = 0x0
0x47d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x113]

================================

Block 0x47e
[0x47e:0x47f]
---
Predecessors: [0x405]
Successors: [0x113]
---
0x47e JUMPDEST
0x47f JUMP
---
0x47e: JUMPDEST 
0x47f: JUMP 0x113
---
Entry stack: [V11, 0x113]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x480
[0x480:0x4a5]
---
Predecessors: [0x120]
Successors: [0x128]
---
0x480 JUMPDEST
0x481 PUSH1 0x1
0x483 PUSH1 0x0
0x485 SWAP1
0x486 SLOAD
0x487 SWAP1
0x488 PUSH2 0x100
0x48b EXP
0x48c SWAP1
0x48d DIV
0x48e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a3 AND
0x4a4 DUP2
0x4a5 JUMP
---
0x480: JUMPDEST 
0x481: V250 = 0x1
0x483: V251 = 0x0
0x486: V252 = S[0x1]
0x488: V253 = 0x100
0x48b: V254 = EXP 0x100 0x0
0x48d: V255 = DIV V252 0x1
0x48e: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4a5: JUMP 0x128
---
Entry stack: [V11, 0x128]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V11, 0x128, V257]

================================

Block 0x4a6
[0x4a6:0x4ff]
---
Predecessors: [0x175]
Successors: [0x500, 0x551]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa PUSH1 0x1
0x4ac PUSH1 0x0
0x4ae SWAP1
0x4af SLOAD
0x4b0 SWAP1
0x4b1 PUSH2 0x100
0x4b4 EXP
0x4b5 SWAP1
0x4b6 DIV
0x4b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cc AND
0x4cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e2 AND
0x4e3 CALLER
0x4e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f9 AND
0x4fa EQ
0x4fb DUP1
0x4fc PUSH2 0x551
0x4ff JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V258 = 0x0
0x4aa: V259 = 0x1
0x4ac: V260 = 0x0
0x4af: V261 = S[0x1]
0x4b1: V262 = 0x100
0x4b4: V263 = EXP 0x100 0x0
0x4b6: V264 = DIV V261 0x1
0x4b7: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x4cd: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x4e3: V269 = CALLER
0x4e4: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x4fa: V272 = EQ V271 V268
0x4fc: V273 = 0x551
0x4ff: JUMPI 0x551 V272
---
Entry stack: [V11, 0x221, V88, V103, V123]
Stack pops: 0
Stack additions: [0x0, 0x0, V272]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0, V272]

================================

Block 0x500
[0x500:0x550]
---
Predecessors: [0x4a6]
Successors: [0x551]
---
0x500 POP
0x501 PUSH1 0x0
0x503 DUP1
0x504 SWAP1
0x505 SLOAD
0x506 SWAP1
0x507 PUSH2 0x100
0x50a EXP
0x50b SWAP1
0x50c DIV
0x50d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x522 AND
0x523 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x538 AND
0x539 CALLER
0x53a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54f AND
0x550 EQ
---
0x501: V274 = 0x0
0x505: V275 = S[0x0]
0x507: V276 = 0x100
0x50a: V277 = EXP 0x100 0x0
0x50c: V278 = DIV V275 0x1
0x50d: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x522: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x523: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x538: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x539: V283 = CALLER
0x53a: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x550: V286 = EQ V285 V282
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0, V272]
Stack pops: 1
Stack additions: [V286]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0, V286]

================================

Block 0x551
[0x551:0x557]
---
Predecessors: [0x4a6, 0x500]
Successors: [0x558, 0x55c]
---
0x551 JUMPDEST
0x552 ISZERO
0x553 ISZERO
0x554 PUSH2 0x55c
0x557 JUMPI
---
0x551: JUMPDEST 
0x552: V287 = ISZERO S0
0x553: V288 = ISZERO V287
0x554: V289 = 0x55c
0x557: JUMPI 0x55c V288
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0]

================================

Block 0x558
[0x558:0x55b]
---
Predecessors: [0x551]
Successors: []
---
0x558 PUSH1 0x0
0x55a DUP1
0x55b REVERT
---
0x558: V290 = 0x0
0x55b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0]

================================

Block 0x55c
[0x55c:0x560]
---
Predecessors: [0x551]
Successors: [0x561]
---
0x55c JUMPDEST
0x55d PUSH1 0x0
0x55f SWAP1
0x560 POP
---
0x55c: JUMPDEST 
0x55d: V291 = 0x0
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, 0x0]

================================

Block 0x561
[0x561:0x56a]
---
Predecessors: [0x55c, 0x647]
Successors: [0x56b, 0x65d]
---
0x561 JUMPDEST
0x562 DUP4
0x563 MLOAD
0x564 DUP2
0x565 LT
0x566 ISZERO
0x567 PUSH2 0x65d
0x56a JUMPI
---
0x561: JUMPDEST 
0x563: V292 = M[V103]
0x565: V293 = LT S0 V292
0x566: V294 = ISZERO V293
0x567: V295 = 0x65d
0x56a: JUMPI 0x65d V294
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S0]

================================

Block 0x56b
[0x56b:0x592]
---
Predecessors: [0x561]
Successors: [0x593, 0x594]
---
0x56b DUP5
0x56c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x581 AND
0x582 PUSH4 0xa9059cbb
0x587 DUP6
0x588 DUP4
0x589 DUP2
0x58a MLOAD
0x58b DUP2
0x58c LT
0x58d ISZERO
0x58e ISZERO
0x58f PUSH2 0x594
0x592 JUMPI
---
0x56c: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x581: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x582: V298 = 0xa9059cbb
0x58a: V299 = M[V103]
0x58c: V300 = LT S0 V299
0x58d: V301 = ISZERO V300
0x58e: V302 = ISZERO V301
0x58f: V303 = 0x594
0x592: JUMPI 0x594 V302
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V297, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S0, V297, 0xa9059cbb, V103, S0]

================================

Block 0x593
[0x593:0x593]
---
Predecessors: [0x56b]
Successors: []
---
0x593 INVALID
---
0x593: INVALID 
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S4, V297, 0xa9059cbb, V103, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S4, V297, 0xa9059cbb, V103, S0]

================================

Block 0x594
[0x594:0x5aa]
---
Predecessors: [0x56b]
Successors: [0x5ab, 0x5ac]
---
0x594 JUMPDEST
0x595 SWAP1
0x596 PUSH1 0x20
0x598 ADD
0x599 SWAP1
0x59a PUSH1 0x20
0x59c MUL
0x59d ADD
0x59e MLOAD
0x59f DUP6
0x5a0 DUP5
0x5a1 DUP2
0x5a2 MLOAD
0x5a3 DUP2
0x5a4 LT
0x5a5 ISZERO
0x5a6 ISZERO
0x5a7 PUSH2 0x5ac
0x5aa JUMPI
---
0x594: JUMPDEST 
0x596: V304 = 0x20
0x598: V305 = ADD 0x20 V103
0x59a: V306 = 0x20
0x59c: V307 = MUL 0x20 S0
0x59d: V308 = ADD V307 V305
0x59e: V309 = M[V308]
0x5a2: V310 = M[V123]
0x5a4: V311 = LT S4 V310
0x5a5: V312 = ISZERO V311
0x5a6: V313 = ISZERO V312
0x5a7: V314 = 0x5ac
0x5aa: JUMPI 0x5ac V313
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S4, V297, 0xa9059cbb, V103, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V309, S6, S4]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S4, V297, 0xa9059cbb, V309, V123, S4]

================================

Block 0x5ab
[0x5ab:0x5ab]
---
Predecessors: [0x594]
Successors: []
---
0x5ab INVALID
---
0x5ab: INVALID 
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S5, V297, 0xa9059cbb, V309, V123, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S5, V297, 0xa9059cbb, V309, V123, S0]

================================

Block 0x5ac
[0x5ac:0x635]
---
Predecessors: [0x594]
Successors: [0x636, 0x63a]
---
0x5ac JUMPDEST
0x5ad SWAP1
0x5ae PUSH1 0x20
0x5b0 ADD
0x5b1 SWAP1
0x5b2 PUSH1 0x20
0x5b4 MUL
0x5b5 ADD
0x5b6 MLOAD
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba DUP4
0x5bb PUSH4 0xffffffff
0x5c0 AND
0x5c1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5df MUL
0x5e0 DUP2
0x5e1 MSTORE
0x5e2 PUSH1 0x4
0x5e4 ADD
0x5e5 DUP1
0x5e6 DUP4
0x5e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fc AND
0x5fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x612 AND
0x613 DUP2
0x614 MSTORE
0x615 PUSH1 0x20
0x617 ADD
0x618 DUP3
0x619 DUP2
0x61a MSTORE
0x61b PUSH1 0x20
0x61d ADD
0x61e SWAP3
0x61f POP
0x620 POP
0x621 POP
0x622 PUSH1 0x20
0x624 PUSH1 0x40
0x626 MLOAD
0x627 DUP1
0x628 DUP4
0x629 SUB
0x62a DUP2
0x62b PUSH1 0x0
0x62d DUP8
0x62e DUP1
0x62f EXTCODESIZE
0x630 ISZERO
0x631 ISZERO
0x632 PUSH2 0x63a
0x635 JUMPI
---
0x5ac: JUMPDEST 
0x5ae: V315 = 0x20
0x5b0: V316 = ADD 0x20 V123
0x5b2: V317 = 0x20
0x5b4: V318 = MUL 0x20 S0
0x5b5: V319 = ADD V318 V316
0x5b6: V320 = M[V319]
0x5b7: V321 = 0x40
0x5b9: V322 = M[0x40]
0x5bb: V323 = 0xffffffff
0x5c0: V324 = AND 0xffffffff 0xa9059cbb
0x5c1: V325 = 0x100000000000000000000000000000000000000000000000000000000
0x5df: V326 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x5e1: M[V322] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5e2: V327 = 0x4
0x5e4: V328 = ADD 0x4 V322
0x5e7: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x5fd: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x612: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x614: M[V328] = V332
0x615: V333 = 0x20
0x617: V334 = ADD 0x20 V328
0x61a: M[V334] = V320
0x61b: V335 = 0x20
0x61d: V336 = ADD 0x20 V334
0x622: V337 = 0x20
0x624: V338 = 0x40
0x626: V339 = M[0x40]
0x629: V340 = SUB V336 V339
0x62b: V341 = 0x0
0x62f: V342 = EXTCODESIZE V297
0x630: V343 = ISZERO V342
0x631: V344 = ISZERO V343
0x632: V345 = 0x63a
0x635: JUMPI 0x63a V344
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S5, V297, 0xa9059cbb, V309, V123, S0]
Stack pops: 5
Stack additions: [S4, S3, V336, 0x20, V339, V340, V339, 0x0, S4]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S5, V297, 0xa9059cbb, V336, 0x20, V339, V340, V339, 0x0, V297]

================================

Block 0x636
[0x636:0x639]
---
Predecessors: [0x5ac]
Successors: []
---
0x636 PUSH1 0x0
0x638 DUP1
0x639 REVERT
---
0x636: V346 = 0x0
0x639: REVERT 0x0 0x0
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S9, V297, 0xa9059cbb, V336, 0x20, V339, V340, V339, 0x0, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S9, V297, 0xa9059cbb, V336, 0x20, V339, V340, V339, 0x0, V297]

================================

Block 0x63a
[0x63a:0x642]
---
Predecessors: [0x5ac]
Successors: [0x643, 0x647]
---
0x63a JUMPDEST
0x63b GAS
0x63c CALL
0x63d ISZERO
0x63e ISZERO
0x63f PUSH2 0x647
0x642 JUMPI
---
0x63a: JUMPDEST 
0x63b: V347 = GAS
0x63c: V348 = CALL V347 V297 0x0 V339 V340 V339 0x20
0x63d: V349 = ISZERO V348
0x63e: V350 = ISZERO V349
0x63f: V351 = 0x647
0x642: JUMPI 0x647 V350
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S9, V297, 0xa9059cbb, V336, 0x20, V339, V340, V339, 0x0, V297]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S9, V297, 0xa9059cbb, V336]

================================

Block 0x643
[0x643:0x646]
---
Predecessors: [0x63a]
Successors: []
---
0x643 PUSH1 0x0
0x645 DUP1
0x646 REVERT
---
0x643: V352 = 0x0
0x646: REVERT 0x0 0x0
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S3, V297, 0xa9059cbb, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, S3, V297, 0xa9059cbb, V336]

================================

Block 0x647
[0x647:0x65c]
---
Predecessors: [0x63a]
Successors: [0x561]
---
0x647 JUMPDEST
0x648 POP
0x649 POP
0x64a POP
0x64b PUSH1 0x40
0x64d MLOAD
0x64e DUP1
0x64f MLOAD
0x650 SWAP1
0x651 POP
0x652 POP
0x653 PUSH1 0x1
0x655 DUP2
0x656 ADD
0x657 SWAP1
0x658 POP
0x659 PUSH2 0x561
0x65c JUMP
---
0x647: JUMPDEST 
0x64b: V353 = 0x40
0x64d: V354 = M[0x40]
0x64f: V355 = M[V354]
0x653: V356 = 0x1
0x656: V357 = ADD S3 0x1
0x659: V358 = 0x561
0x65c: JUMP 0x561
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S3, V297, 0xa9059cbb, V336]
Stack pops: 4
Stack additions: [V357]
Exit stack: [V11, 0x221, V88, V103, V123, 0x0, V357]

================================

Block 0x65d
[0x65d:0x667]
---
Predecessors: [0x561]
Successors: [0x221]
---
0x65d JUMPDEST
0x65e DUP1
0x65f SWAP2
0x660 POP
0x661 POP
0x662 SWAP4
0x663 SWAP3
0x664 POP
0x665 POP
0x666 POP
0x667 JUMP
---
0x65d: JUMPDEST 
0x667: JUMP 0x221
---
Entry stack: [V11, 0x221, V88, V103, V123, 0x0, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x668
[0x668:0x69d]
---
Predecessors: []
Successors: []
---
0x668 STOP
0x669 LOG1
0x66a PUSH6 0x627a7a723058
0x671 SHA3
0x672 MISSING 0x22
0x673 STOP
0x674 PUSH14 0x501ffb69a64e2c0ec154fa6a8f45
0x683 MISSING 0xd4
0x684 SWAP10
0x685 DUP11
0x686 MISSING 0x49
0x687 MISSING 0xb1
0x688 PUSH1 0x71
0x68a MISSING 0xba
0x68b MSTORE
0x68c MISSING 0x5e
0x68d CODESIZE
0x68e PUSH15 0x8d54050029
---
0x668: STOP 
0x669: LOG S0 S1 S2
0x66a: V359 = 0x627a7a723058
0x671: V360 = SHA3 0x627a7a723058 S3
0x672: MISSING 0x22
0x673: STOP 
0x674: V361 = 0x501ffb69a64e2c0ec154fa6a8f45
0x683: MISSING 0xd4
0x686: MISSING 0x49
0x687: MISSING 0xb1
0x688: V362 = 0x71
0x68a: MISSING 0xba
0x68b: M[S0] = S1
0x68c: MISSING 0x5e
0x68d: V363 = CODESIZE
0x68e: V364 = 0x8d54050029
---
Entry stack: []
Stack pops: 0
Stack additions: [V360, 0x501ffb69a64e2c0ec154fa6a8f45, S0, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, 0x71, 0x8d54050029, V363]
Exit stack: []

================================

Function 0:
Public function signature: 0x3576a32f
Entry block: 0x72
Exit block: 0xa9
Body: 0x72, 0x79, 0x7d, 0xa9, 0x237, 0x28e, 0x2df, 0x2e6, 0x2ea

Function 1:
Public function signature: 0x3af8e4ab
Entry block: 0xab
Exit block: 0xbe
Body: 0xab, 0xb2, 0xb6, 0xbe, 0x32d

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x100
Exit block: 0x113
Body: 0x100, 0x107, 0x10b, 0x113, 0x352, 0x3a9, 0x3fa, 0x401, 0x405, 0x47a, 0x47e

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x115
Exit block: 0x128
Body: 0x115, 0x11c, 0x120, 0x128, 0x480

Function 4:
Public function signature: 0xad8733ca
Entry block: 0x16a
Exit block: 0x643
Body: 0x16a, 0x171, 0x175, 0x221, 0x4a6, 0x500, 0x551, 0x558, 0x55c, 0x561, 0x56b, 0x593, 0x594, 0x5ab, 0x5ac, 0x636, 0x63a, 0x643, 0x647, 0x65d

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

