Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xcfd0a0d
0x34 EQ
0x35 PUSH2 0x5c
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xcfd0a0d
0x34: V9 = EQ 0xcfd0a0d V7
0x35: V10 = 0x5c
0x38: JUMPI 0x5c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xae]
---
0x39 DUP1
0x3a PUSH4 0x52f6ee58
0x3f EQ
0x40 PUSH2 0xae
0x43 JUMPI
---
0x3a: V11 = 0x52f6ee58
0x3f: V12 = EQ 0x52f6ee58 V7
0x40: V13 = 0xae
0x43: JUMPI 0xae V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xd4]
---
0x44 DUP1
0x45 PUSH4 0x69ac5721
0x4a EQ
0x4b PUSH2 0xd4
0x4e JUMPI
---
0x45: V14 = 0x69ac5721
0x4a: V15 = EQ 0x69ac5721 V7
0x4b: V16 = 0xd4
0x4e: JUMPI 0xd4 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xfa]
---
0x4f DUP1
0x50 PUSH4 0xa69df4b5
0x55 EQ
0x56 PUSH2 0xfa
0x59 JUMPI
---
0x50: V17 = 0xa69df4b5
0x55: V18 = EQ 0xa69df4b5 V7
0x56: V19 = 0xfa
0x59: JUMPI 0xfa V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5b]
---
Predecessors: [0x4f]
Successors: []
---
0x5a JUMPDEST
0x5b INVALID
---
0x5a: JUMPDEST 
0x5b: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0x0]
Successors: [0x63, 0x64]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x64
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V20 = CALLVALUE
0x5e: V21 = ISZERO V20
0x5f: V22 = 0x64
0x62: JUMPI 0x64 V21
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x63
[0x63:0x63]
---
Predecessors: [0x5c]
Successors: []
---
0x63 INVALID
---
0x63: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0x5c]
Successors: [0x10c]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x10c
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V23 = 0x6c
0x68: V24 = 0x10c
0x6b: JUMP 0x10c
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V7, 0x6c]

================================

Block 0x6c
[0x6c:0xad]
---
Predecessors: [0x10c]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x40
0x6f MLOAD
0x70 DUP1
0x71 DUP3
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d AND
0x9e DUP2
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP2
0xa4 POP
0xa5 POP
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad RETURN
---
0x6c: JUMPDEST 
0x6d: V25 = 0x40
0x6f: V26 = M[0x40]
0x72: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x88: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x9f: M[V26] = V30
0xa0: V31 = 0x20
0xa2: V32 = ADD 0x20 V26
0xa6: V33 = 0x40
0xa8: V34 = M[0x40]
0xab: V35 = SUB V32 V34
0xad: RETURN V34 V35
---
Entry stack: [V7, 0x6c, V72]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x6c]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x39]
Successors: [0xb5, 0xb6]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb6
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V36 = CALLVALUE
0xb0: V37 = ISZERO V36
0xb1: V38 = 0xb6
0xb4: JUMPI 0xb6 V37
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb5
[0xb5:0xb5]
---
Predecessors: [0xae]
Successors: []
---
0xb5 INVALID
---
0xb5: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0xae]
Successors: [0x132]
---
0xb6 JUMPDEST
0xb7 PUSH2 0xbe
0xba PUSH2 0x132
0xbd JUMP
---
0xb6: JUMPDEST 
0xb7: V39 = 0xbe
0xba: V40 = 0x132
0xbd: JUMP 0x132
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xbe]
Exit stack: [V7, 0xbe]

================================

Block 0xbe
[0xbe:0xd3]
---
Predecessors: [0x132]
Successors: []
---
0xbe JUMPDEST
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 DUP3
0xc4 DUP2
0xc5 MSTORE
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP2
0xca POP
0xcb POP
0xcc PUSH1 0x40
0xce MLOAD
0xcf DUP1
0xd0 SWAP2
0xd1 SUB
0xd2 SWAP1
0xd3 RETURN
---
0xbe: JUMPDEST 
0xbf: V41 = 0x40
0xc1: V42 = M[0x40]
0xc5: M[V42] = 0xde0b6b3a7640000
0xc6: V43 = 0x20
0xc8: V44 = ADD 0x20 V42
0xcc: V45 = 0x40
0xce: V46 = M[0x40]
0xd1: V47 = SUB V44 V46
0xd3: RETURN V46 V47
---
Entry stack: [V7, 0xbe, 0xde0b6b3a7640000]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xbe]

================================

Block 0xd4
[0xd4:0xda]
---
Predecessors: [0x44]
Successors: [0xdb, 0xdc]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 ISZERO
0xd7 PUSH2 0xdc
0xda JUMPI
---
0xd4: JUMPDEST 
0xd5: V48 = CALLVALUE
0xd6: V49 = ISZERO V48
0xd7: V50 = 0xdc
0xda: JUMPI 0xdc V49
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xdb
[0xdb:0xdb]
---
Predecessors: [0xd4]
Successors: []
---
0xdb INVALID
---
0xdb: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xd4]
Successors: [0x13e]
---
0xdc JUMPDEST
0xdd PUSH2 0xe4
0xe0 PUSH2 0x13e
0xe3 JUMP
---
0xdc: JUMPDEST 
0xdd: V51 = 0xe4
0xe0: V52 = 0x13e
0xe3: JUMP 0x13e
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xe4]
Exit stack: [V7, 0xe4]

================================

Block 0xe4
[0xe4:0xf9]
---
Predecessors: [0x13e]
Successors: []
---
0xe4 JUMPDEST
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP3
0xea DUP2
0xeb MSTORE
0xec PUSH1 0x20
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 POP
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 SWAP2
0xf7 SUB
0xf8 SWAP1
0xf9 RETURN
---
0xe4: JUMPDEST 
0xe5: V53 = 0x40
0xe7: V54 = M[0x40]
0xeb: M[V54] = V75
0xec: V55 = 0x20
0xee: V56 = ADD 0x20 V54
0xf2: V57 = 0x40
0xf4: V58 = M[0x40]
0xf7: V59 = SUB V56 V58
0xf9: RETURN V58 V59
---
Entry stack: [V7, 0xe4, V75]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xe4]

================================

Block 0xfa
[0xfa:0x100]
---
Predecessors: [0x4f]
Successors: [0x101, 0x102]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc ISZERO
0xfd PUSH2 0x102
0x100 JUMPI
---
0xfa: JUMPDEST 
0xfb: V60 = CALLVALUE
0xfc: V61 = ISZERO V60
0xfd: V62 = 0x102
0x100: JUMPI 0x102 V61
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x101
[0x101:0x101]
---
Predecessors: [0xfa]
Successors: []
---
0x101 INVALID
---
0x101: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x102
[0x102:0x109]
---
Predecessors: [0xfa]
Successors: [0x144]
---
0x102 JUMPDEST
0x103 PUSH2 0x10a
0x106 PUSH2 0x144
0x109 JUMP
---
0x102: JUMPDEST 
0x103: V63 = 0x10a
0x106: V64 = 0x144
0x109: JUMP 0x144
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V7, 0x10a]

================================

Block 0x10a
[0x10a:0x10b]
---
Predecessors: [0x2d5]
Successors: []
---
0x10a JUMPDEST
0x10b STOP
---
0x10a: JUMPDEST 
0x10b: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10c
[0x10c:0x131]
---
Predecessors: [0x64]
Successors: [0x6c]
---
0x10c JUMPDEST
0x10d PUSH1 0x2
0x10f PUSH1 0x0
0x111 SWAP1
0x112 SLOAD
0x113 SWAP1
0x114 PUSH2 0x100
0x117 EXP
0x118 SWAP1
0x119 DIV
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 DUP2
0x131 JUMP
---
0x10c: JUMPDEST 
0x10d: V65 = 0x2
0x10f: V66 = 0x0
0x112: V67 = S[0x2]
0x114: V68 = 0x100
0x117: V69 = EXP 0x100 0x0
0x119: V70 = DIV V67 0x1
0x11a: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x131: JUMP 0x6c
---
Entry stack: [V7, 0x6c]
Stack pops: 1
Stack additions: [S0, V72]
Exit stack: [V7, 0x6c, V72]

================================

Block 0x132
[0x132:0x13d]
---
Predecessors: [0xb6]
Successors: [0xbe]
---
0x132 JUMPDEST
0x133 PUSH8 0xde0b6b3a7640000
0x13c DUP2
0x13d JUMP
---
0x132: JUMPDEST 
0x133: V73 = 0xde0b6b3a7640000
0x13d: JUMP 0xbe
---
Entry stack: [V7, 0xbe]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000]
Exit stack: [V7, 0xbe, 0xde0b6b3a7640000]

================================

Block 0x13e
[0x13e:0x143]
---
Predecessors: [0xdc]
Successors: [0xe4]
---
0x13e JUMPDEST
0x13f PUSH1 0x1
0x141 SLOAD
0x142 DUP2
0x143 JUMP
---
0x13e: JUMPDEST 
0x13f: V74 = 0x1
0x141: V75 = S[0x1]
0x143: JUMP 0xe4
---
Entry stack: [V7, 0xe4]
Stack pops: 1
Stack additions: [S0, V75]
Exit stack: [V7, 0xe4, V75]

================================

Block 0x144
[0x144:0x150]
---
Predecessors: [0x102]
Successors: [0x151, 0x156]
---
0x144 JUMPDEST
0x145 PUSH1 0x0
0x147 PUSH1 0x1
0x149 SLOAD
0x14a TIMESTAMP
0x14b LT
0x14c ISZERO
0x14d PUSH2 0x156
0x150 JUMPI
---
0x144: JUMPDEST 
0x145: V76 = 0x0
0x147: V77 = 0x1
0x149: V78 = S[0x1]
0x14a: V79 = TIMESTAMP
0x14b: V80 = LT V79 V78
0x14c: V81 = ISZERO V80
0x14d: V82 = 0x156
0x150: JUMPI 0x156 V81
---
Entry stack: [V7, 0x10a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V7, 0x10a, 0x0]

================================

Block 0x151
[0x151:0x155]
---
Predecessors: [0x144]
Successors: []
---
0x151 PUSH1 0x0
0x153 PUSH1 0x0
0x155 REVERT
---
0x151: V83 = 0x0
0x153: V84 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V7, 0x10a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x10a, 0x0]

================================

Block 0x156
[0x156:0x2af]
---
Predecessors: [0x144]
Successors: [0x2b0, 0x2b1]
---
0x156 JUMPDEST
0x157 PUSH1 0x0
0x159 PUSH1 0x0
0x15b CALLER
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 AND
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP1
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 PUSH1 0x0
0x195 SHA3
0x196 SLOAD
0x197 SWAP1
0x198 POP
0x199 PUSH1 0x0
0x19b PUSH1 0x0
0x19d PUSH1 0x0
0x19f CALLER
0x1a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b5 AND
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb AND
0x1cc DUP2
0x1cd MSTORE
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 PUSH1 0x0
0x1d9 SHA3
0x1da DUP2
0x1db SWAP1
0x1dc SSTORE
0x1dd POP
0x1de PUSH1 0x2
0x1e0 PUSH1 0x0
0x1e2 SWAP1
0x1e3 SLOAD
0x1e4 SWAP1
0x1e5 PUSH2 0x100
0x1e8 EXP
0x1e9 SWAP1
0x1ea DIV
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 PUSH4 0xa9059cbb
0x21c CALLER
0x21d PUSH8 0xde0b6b3a7640000
0x226 DUP5
0x227 MUL
0x228 PUSH1 0x0
0x22a PUSH1 0x40
0x22c MLOAD
0x22d PUSH1 0x20
0x22f ADD
0x230 MSTORE
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP4
0x235 PUSH4 0xffffffff
0x23a AND
0x23b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x259 MUL
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x4
0x25e ADD
0x25f DUP1
0x260 DUP4
0x261 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x276 AND
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x20
0x291 ADD
0x292 DUP3
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP3
0x299 POP
0x29a POP
0x29b POP
0x29c PUSH1 0x20
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 DUP4
0x2a3 SUB
0x2a4 DUP2
0x2a5 PUSH1 0x0
0x2a7 DUP8
0x2a8 DUP1
0x2a9 EXTCODESIZE
0x2aa ISZERO
0x2ab ISZERO
0x2ac PUSH2 0x2b1
0x2af JUMPI
---
0x156: JUMPDEST 
0x157: V85 = 0x0
0x159: V86 = 0x0
0x15b: V87 = CALLER
0x15c: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x172: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x189: M[0x0] = V91
0x18a: V92 = 0x20
0x18c: V93 = ADD 0x20 0x0
0x18f: M[0x20] = 0x0
0x190: V94 = 0x20
0x192: V95 = ADD 0x20 0x20
0x193: V96 = 0x0
0x195: V97 = SHA3 0x0 0x40
0x196: V98 = S[V97]
0x199: V99 = 0x0
0x19b: V100 = 0x0
0x19d: V101 = 0x0
0x19f: V102 = CALLER
0x1a0: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1b6: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1cd: M[0x0] = V106
0x1ce: V107 = 0x20
0x1d0: V108 = ADD 0x20 0x0
0x1d3: M[0x20] = 0x0
0x1d4: V109 = 0x20
0x1d6: V110 = ADD 0x20 0x20
0x1d7: V111 = 0x0
0x1d9: V112 = SHA3 0x0 0x40
0x1dc: S[V112] = 0x0
0x1de: V113 = 0x2
0x1e0: V114 = 0x0
0x1e3: V115 = S[0x2]
0x1e5: V116 = 0x100
0x1e8: V117 = EXP 0x100 0x0
0x1ea: V118 = DIV V115 0x1
0x1eb: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x201: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x217: V123 = 0xa9059cbb
0x21c: V124 = CALLER
0x21d: V125 = 0xde0b6b3a7640000
0x227: V126 = MUL V98 0xde0b6b3a7640000
0x228: V127 = 0x0
0x22a: V128 = 0x40
0x22c: V129 = M[0x40]
0x22d: V130 = 0x20
0x22f: V131 = ADD 0x20 V129
0x230: M[V131] = 0x0
0x231: V132 = 0x40
0x233: V133 = M[0x40]
0x235: V134 = 0xffffffff
0x23a: V135 = AND 0xffffffff 0xa9059cbb
0x23b: V136 = 0x100000000000000000000000000000000000000000000000000000000
0x259: V137 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x25b: M[V133] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x25c: V138 = 0x4
0x25e: V139 = ADD 0x4 V133
0x261: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x276: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x277: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x28e: M[V139] = V143
0x28f: V144 = 0x20
0x291: V145 = ADD 0x20 V139
0x294: M[V145] = V126
0x295: V146 = 0x20
0x297: V147 = ADD 0x20 V145
0x29c: V148 = 0x20
0x29e: V149 = 0x40
0x2a0: V150 = M[0x40]
0x2a3: V151 = SUB V147 V150
0x2a5: V152 = 0x0
0x2a9: V153 = EXTCODESIZE V122
0x2aa: V154 = ISZERO V153
0x2ab: V155 = ISZERO V154
0x2ac: V156 = 0x2b1
0x2af: JUMPI 0x2b1 V155
---
Entry stack: [V7, 0x10a, 0x0]
Stack pops: 1
Stack additions: [V98, V122, 0xa9059cbb, V147, 0x20, V150, V151, V150, 0x0, V122]
Exit stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147, 0x20, V150, V151, V150, 0x0, V122]

================================

Block 0x2b0
[0x2b0:0x2b0]
---
Predecessors: [0x156]
Successors: []
---
0x2b0 INVALID
---
0x2b0: INVALID 
---
Entry stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147, 0x20, V150, V151, V150, 0x0, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147, 0x20, V150, V151, V150, 0x0, V122]

================================

Block 0x2b1
[0x2b1:0x2bc]
---
Predecessors: [0x156]
Successors: [0x2bd, 0x2be]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x32
0x2b4 GAS
0x2b5 SUB
0x2b6 CALL
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 PUSH2 0x2be
0x2bc JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V157 = 0x32
0x2b4: V158 = GAS
0x2b5: V159 = SUB V158 0x32
0x2b6: V160 = CALL V159 V122 0x0 V150 V151 V150 0x20
0x2b7: V161 = ISZERO V160
0x2b8: V162 = ISZERO V161
0x2b9: V163 = 0x2be
0x2bc: JUMPI 0x2be V162
---
Entry stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147, 0x20, V150, V151, V150, 0x0, V122]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147]

================================

Block 0x2bd
[0x2bd:0x2bd]
---
Predecessors: [0x2b1]
Successors: []
---
0x2bd INVALID
---
0x2bd: INVALID 
---
Entry stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147]

================================

Block 0x2be
[0x2be:0x2ce]
---
Predecessors: [0x2b1]
Successors: [0x2cf, 0x2d4]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 DUP1
0x2c6 MLOAD
0x2c7 SWAP1
0x2c8 POP
0x2c9 ISZERO
0x2ca ISZERO
0x2cb PUSH2 0x2d4
0x2ce JUMPI
---
0x2be: JUMPDEST 
0x2c2: V164 = 0x40
0x2c4: V165 = M[0x40]
0x2c6: V166 = M[V165]
0x2c9: V167 = ISZERO V166
0x2ca: V168 = ISZERO V167
0x2cb: V169 = 0x2d4
0x2ce: JUMPI 0x2d4 V168
---
Entry stack: [V7, 0x10a, V98, V122, 0xa9059cbb, V147]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x10a, V98]

================================

Block 0x2cf
[0x2cf:0x2d3]
---
Predecessors: [0x2be]
Successors: []
---
0x2cf PUSH1 0x0
0x2d1 PUSH1 0x0
0x2d3 REVERT
---
0x2cf: V170 = 0x0
0x2d1: V171 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V7, 0x10a, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x10a, V98]

================================

Block 0x2d4
[0x2d4:0x2d4]
---
Predecessors: [0x2be]
Successors: [0x2d5]
---
0x2d4 JUMPDEST
---
0x2d4: JUMPDEST 
---
Entry stack: [V7, 0x10a, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x10a, V98]

================================

Block 0x2d5
[0x2d5:0x2d7]
---
Predecessors: [0x2d4]
Successors: [0x10a]
---
0x2d5 JUMPDEST
0x2d6 POP
0x2d7 JUMP
---
0x2d5: JUMPDEST 
0x2d7: JUMP 0x10a
---
Entry stack: [V7, 0x10a, V98]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x2d8
[0x2d8:0x30e]
---
Predecessors: []
Successors: [0x30f]
---
0x2d8 STOP
0x2d9 LOG1
0x2da PUSH6 0x627a7a723058
0x2e1 SHA3
0x2e2 DELEGATECALL
0x2e3 SHA3
0x2e4 PUSH29 0x96104ad3cb2c5b3d76f39ac60a5d5a6335c6df80bc828539adcd2fee5d
0x302 STOP
0x303 MISSING 0x29
0x304 PUSH1 0x60
0x306 PUSH1 0x40
0x308 MSTORE
0x309 CALLDATASIZE
0x30a ISZERO
0x30b PUSH2 0x76
0x30e JUMPI
---
0x2d8: STOP 
0x2d9: LOG S0 S1 S2
0x2da: V172 = 0x627a7a723058
0x2e1: V173 = SHA3 0x627a7a723058 S3
0x2e2: V174 = DELEGATECALL V173 S4 S5 S6 S7 S8
0x2e3: V175 = SHA3 V174 S9
0x2e4: V176 = 0x96104ad3cb2c5b3d76f39ac60a5d5a6335c6df80bc828539adcd2fee5d
0x302: STOP 
0x303: MISSING 0x29
0x304: V177 = 0x60
0x306: V178 = 0x40
0x308: M[0x40] = 0x60
0x309: V179 = CALLDATASIZE
0x30a: V180 = ISZERO V179
0x30b: V181 = 0x76
0x30e: THROWI V180
---
Entry stack: []
Stack pops: 0
Stack additions: [0x96104ad3cb2c5b3d76f39ac60a5d5a6335c6df80bc828539adcd2fee5d, V175]
Exit stack: []

================================

Block 0x30f
[0x30f:0x342]
---
Predecessors: [0x2d8]
Successors: [0x343]
---
0x30f PUSH1 0x0
0x311 CALLDATALOAD
0x312 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x330 SWAP1
0x331 DIV
0x332 PUSH4 0xffffffff
0x337 AND
0x338 DUP1
0x339 PUSH4 0x95ea7b3
0x33e EQ
0x33f PUSH2 0x78
0x342 JUMPI
---
0x30f: V182 = 0x0
0x311: V183 = CALLDATALOAD 0x0
0x312: V184 = 0x100000000000000000000000000000000000000000000000000000000
0x331: V185 = DIV V183 0x100000000000000000000000000000000000000000000000000000000
0x332: V186 = 0xffffffff
0x337: V187 = AND 0xffffffff V185
0x339: V188 = 0x95ea7b3
0x33e: V189 = EQ 0x95ea7b3 V187
0x33f: V190 = 0x78
0x342: THROWI V189
---
Entry stack: []
Stack pops: 0
Stack additions: [V187]
Exit stack: [V187]

================================

Block 0x343
[0x343:0x34d]
---
Predecessors: [0x30f]
Successors: [0x34e]
---
0x343 DUP1
0x344 PUSH4 0x18160ddd
0x349 EQ
0x34a PUSH2 0xcf
0x34d JUMPI
---
0x344: V191 = 0x18160ddd
0x349: V192 = EQ 0x18160ddd V187
0x34a: V193 = 0xcf
0x34d: THROWI V192
---
Entry stack: [V187]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V187]

================================

Block 0x34e
[0x34e:0x358]
---
Predecessors: [0x343]
Successors: [0x359]
---
0x34e DUP1
0x34f PUSH4 0x23b872dd
0x354 EQ
0x355 PUSH2 0xf5
0x358 JUMPI
---
0x34f: V194 = 0x23b872dd
0x354: V195 = EQ 0x23b872dd V187
0x355: V196 = 0xf5
0x358: THROWI V195
---
Entry stack: [V187]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V187]

================================

Block 0x359
[0x359:0x363]
---
Predecessors: [0x34e]
Successors: [0x364]
---
0x359 DUP1
0x35a PUSH4 0x70a08231
0x35f EQ
0x360 PUSH2 0x16b
0x363 JUMPI
---
0x35a: V197 = 0x70a08231
0x35f: V198 = EQ 0x70a08231 V187
0x360: V199 = 0x16b
0x363: THROWI V198
---
Entry stack: [V187]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V187]

================================

Block 0x364
[0x364:0x36e]
---
Predecessors: [0x359]
Successors: [0x36f]
---
0x364 DUP1
0x365 PUSH4 0xa9059cbb
0x36a EQ
0x36b PUSH2 0x1b5
0x36e JUMPI
---
0x365: V200 = 0xa9059cbb
0x36a: V201 = EQ 0xa9059cbb V187
0x36b: V202 = 0x1b5
0x36e: THROWI V201
---
Entry stack: [V187]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V187]

================================

Block 0x36f
[0x36f:0x379]
---
Predecessors: [0x364]
Successors: [0x37a]
---
0x36f DUP1
0x370 PUSH4 0xdd62ed3e
0x375 EQ
0x376 PUSH2 0x20c
0x379 JUMPI
---
0x370: V203 = 0xdd62ed3e
0x375: V204 = EQ 0xdd62ed3e V187
0x376: V205 = 0x20c
0x379: THROWI V204
---
Entry stack: [V187]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V187]

================================

Block 0x37a
[0x37a:0x382]
---
Predecessors: [0x36f]
Successors: [0x383]
---
0x37a JUMPDEST
0x37b INVALID
0x37c JUMPDEST
0x37d CALLVALUE
0x37e ISZERO
0x37f PUSH2 0x80
0x382 JUMPI
---
0x37a: JUMPDEST 
0x37b: INVALID 
0x37c: JUMPDEST 
0x37d: V206 = CALLVALUE
0x37e: V207 = ISZERO V206
0x37f: V208 = 0x80
0x382: THROWI V207
---
Entry stack: [V187]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x383
[0x383:0x3d9]
---
Predecessors: [0x37a]
Successors: [0x3da]
---
0x383 INVALID
0x384 JUMPDEST
0x385 PUSH2 0xb5
0x388 PUSH1 0x4
0x38a DUP1
0x38b DUP1
0x38c CALLDATALOAD
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 SWAP1
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP1
0x3a8 SWAP2
0x3a9 SWAP1
0x3aa DUP1
0x3ab CALLDATALOAD
0x3ac SWAP1
0x3ad PUSH1 0x20
0x3af ADD
0x3b0 SWAP1
0x3b1 SWAP2
0x3b2 SWAP1
0x3b3 POP
0x3b4 POP
0x3b5 PUSH2 0x275
0x3b8 JUMP
0x3b9 JUMPDEST
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be DUP3
0x3bf ISZERO
0x3c0 ISZERO
0x3c1 ISZERO
0x3c2 ISZERO
0x3c3 DUP2
0x3c4 MSTORE
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 SWAP2
0x3c9 POP
0x3ca POP
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce DUP1
0x3cf SWAP2
0x3d0 SUB
0x3d1 SWAP1
0x3d2 RETURN
0x3d3 JUMPDEST
0x3d4 CALLVALUE
0x3d5 ISZERO
0x3d6 PUSH2 0xd7
0x3d9 JUMPI
---
0x383: INVALID 
0x384: JUMPDEST 
0x385: V209 = 0xb5
0x388: V210 = 0x4
0x38c: V211 = CALLDATALOAD 0x4
0x38d: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x3a4: V214 = 0x20
0x3a6: V215 = ADD 0x20 0x4
0x3ab: V216 = CALLDATALOAD 0x24
0x3ad: V217 = 0x20
0x3af: V218 = ADD 0x20 0x24
0x3b5: V219 = 0x275
0x3b8: THROW 
0x3b9: JUMPDEST 
0x3ba: V220 = 0x40
0x3bc: V221 = M[0x40]
0x3bf: V222 = ISZERO S0
0x3c0: V223 = ISZERO V222
0x3c1: V224 = ISZERO V223
0x3c2: V225 = ISZERO V224
0x3c4: M[V221] = V225
0x3c5: V226 = 0x20
0x3c7: V227 = ADD 0x20 V221
0x3cb: V228 = 0x40
0x3cd: V229 = M[0x40]
0x3d0: V230 = SUB V227 V229
0x3d2: RETURN V229 V230
0x3d3: JUMPDEST 
0x3d4: V231 = CALLVALUE
0x3d5: V232 = ISZERO V231
0x3d6: V233 = 0xd7
0x3d9: THROWI V232
---
Entry stack: []
Stack pops: 0
Stack additions: [V216, V213, 0xb5]
Exit stack: []

================================

Block 0x3da
[0x3da:0x3ff]
---
Predecessors: [0x383]
Successors: [0x400]
---
0x3da INVALID
0x3db JUMPDEST
0x3dc PUSH2 0xdf
0x3df PUSH2 0x368
0x3e2 JUMP
0x3e3 JUMPDEST
0x3e4 PUSH1 0x40
0x3e6 MLOAD
0x3e7 DUP1
0x3e8 DUP3
0x3e9 DUP2
0x3ea MSTORE
0x3eb PUSH1 0x20
0x3ed ADD
0x3ee SWAP2
0x3ef POP
0x3f0 POP
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 DUP1
0x3f5 SWAP2
0x3f6 SUB
0x3f7 SWAP1
0x3f8 RETURN
0x3f9 JUMPDEST
0x3fa CALLVALUE
0x3fb ISZERO
0x3fc PUSH2 0xfd
0x3ff JUMPI
---
0x3da: INVALID 
0x3db: JUMPDEST 
0x3dc: V234 = 0xdf
0x3df: V235 = 0x368
0x3e2: THROW 
0x3e3: JUMPDEST 
0x3e4: V236 = 0x40
0x3e6: V237 = M[0x40]
0x3ea: M[V237] = S0
0x3eb: V238 = 0x20
0x3ed: V239 = ADD 0x20 V237
0x3f1: V240 = 0x40
0x3f3: V241 = M[0x40]
0x3f6: V242 = SUB V239 V241
0x3f8: RETURN V241 V242
0x3f9: JUMPDEST 
0x3fa: V243 = CALLVALUE
0x3fb: V244 = ISZERO V243
0x3fc: V245 = 0xfd
0x3ff: THROWI V244
---
Entry stack: []
Stack pops: 0
Stack additions: [0xdf]
Exit stack: []

================================

Block 0x400
[0x400:0x475]
---
Predecessors: [0x3da]
Successors: [0x476]
---
0x400 INVALID
0x401 JUMPDEST
0x402 PUSH2 0x151
0x405 PUSH1 0x4
0x407 DUP1
0x408 DUP1
0x409 CALLDATALOAD
0x40a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41f AND
0x420 SWAP1
0x421 PUSH1 0x20
0x423 ADD
0x424 SWAP1
0x425 SWAP2
0x426 SWAP1
0x427 DUP1
0x428 CALLDATALOAD
0x429 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43e AND
0x43f SWAP1
0x440 PUSH1 0x20
0x442 ADD
0x443 SWAP1
0x444 SWAP2
0x445 SWAP1
0x446 DUP1
0x447 CALLDATALOAD
0x448 SWAP1
0x449 PUSH1 0x20
0x44b ADD
0x44c SWAP1
0x44d SWAP2
0x44e SWAP1
0x44f POP
0x450 POP
0x451 PUSH2 0x36e
0x454 JUMP
0x455 JUMPDEST
0x456 PUSH1 0x40
0x458 MLOAD
0x459 DUP1
0x45a DUP3
0x45b ISZERO
0x45c ISZERO
0x45d ISZERO
0x45e ISZERO
0x45f DUP2
0x460 MSTORE
0x461 PUSH1 0x20
0x463 ADD
0x464 SWAP2
0x465 POP
0x466 POP
0x467 PUSH1 0x40
0x469 MLOAD
0x46a DUP1
0x46b SWAP2
0x46c SUB
0x46d SWAP1
0x46e RETURN
0x46f JUMPDEST
0x470 CALLVALUE
0x471 ISZERO
0x472 PUSH2 0x173
0x475 JUMPI
---
0x400: INVALID 
0x401: JUMPDEST 
0x402: V246 = 0x151
0x405: V247 = 0x4
0x409: V248 = CALLDATALOAD 0x4
0x40a: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x421: V251 = 0x20
0x423: V252 = ADD 0x20 0x4
0x428: V253 = CALLDATALOAD 0x24
0x429: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x43e: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x440: V256 = 0x20
0x442: V257 = ADD 0x20 0x24
0x447: V258 = CALLDATALOAD 0x44
0x449: V259 = 0x20
0x44b: V260 = ADD 0x20 0x44
0x451: V261 = 0x36e
0x454: THROW 
0x455: JUMPDEST 
0x456: V262 = 0x40
0x458: V263 = M[0x40]
0x45b: V264 = ISZERO S0
0x45c: V265 = ISZERO V264
0x45d: V266 = ISZERO V265
0x45e: V267 = ISZERO V266
0x460: M[V263] = V267
0x461: V268 = 0x20
0x463: V269 = ADD 0x20 V263
0x467: V270 = 0x40
0x469: V271 = M[0x40]
0x46c: V272 = SUB V269 V271
0x46e: RETURN V271 V272
0x46f: JUMPDEST 
0x470: V273 = CALLVALUE
0x471: V274 = ISZERO V273
0x472: V275 = 0x173
0x475: THROWI V274
---
Entry stack: []
Stack pops: 0
Stack additions: [V258, V255, V250, 0x151]
Exit stack: []

================================

Block 0x476
[0x476:0x4bf]
---
Predecessors: [0x400]
Successors: [0x4c0]
---
0x476 INVALID
0x477 JUMPDEST
0x478 PUSH2 0x19f
0x47b PUSH1 0x4
0x47d DUP1
0x47e DUP1
0x47f CALLDATALOAD
0x480 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x495 AND
0x496 SWAP1
0x497 PUSH1 0x20
0x499 ADD
0x49a SWAP1
0x49b SWAP2
0x49c SWAP1
0x49d POP
0x49e POP
0x49f PUSH2 0x5ef
0x4a2 JUMP
0x4a3 JUMPDEST
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 DUP3
0x4a9 DUP2
0x4aa MSTORE
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae SWAP2
0x4af POP
0x4b0 POP
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 SWAP2
0x4b6 SUB
0x4b7 SWAP1
0x4b8 RETURN
0x4b9 JUMPDEST
0x4ba CALLVALUE
0x4bb ISZERO
0x4bc PUSH2 0x1bd
0x4bf JUMPI
---
0x476: INVALID 
0x477: JUMPDEST 
0x478: V276 = 0x19f
0x47b: V277 = 0x4
0x47f: V278 = CALLDATALOAD 0x4
0x480: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x495: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x497: V281 = 0x20
0x499: V282 = ADD 0x20 0x4
0x49f: V283 = 0x5ef
0x4a2: THROW 
0x4a3: JUMPDEST 
0x4a4: V284 = 0x40
0x4a6: V285 = M[0x40]
0x4aa: M[V285] = S0
0x4ab: V286 = 0x20
0x4ad: V287 = ADD 0x20 V285
0x4b1: V288 = 0x40
0x4b3: V289 = M[0x40]
0x4b6: V290 = SUB V287 V289
0x4b8: RETURN V289 V290
0x4b9: JUMPDEST 
0x4ba: V291 = CALLVALUE
0x4bb: V292 = ISZERO V291
0x4bc: V293 = 0x1bd
0x4bf: THROWI V292
---
Entry stack: []
Stack pops: 0
Stack additions: [V280, 0x19f]
Exit stack: []

================================

Block 0x4c0
[0x4c0:0x516]
---
Predecessors: [0x476]
Successors: [0x517]
---
0x4c0 INVALID
0x4c1 JUMPDEST
0x4c2 PUSH2 0x1f2
0x4c5 PUSH1 0x4
0x4c7 DUP1
0x4c8 DUP1
0x4c9 CALLDATALOAD
0x4ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4df AND
0x4e0 SWAP1
0x4e1 PUSH1 0x20
0x4e3 ADD
0x4e4 SWAP1
0x4e5 SWAP2
0x4e6 SWAP1
0x4e7 DUP1
0x4e8 CALLDATALOAD
0x4e9 SWAP1
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed SWAP1
0x4ee SWAP2
0x4ef SWAP1
0x4f0 POP
0x4f1 POP
0x4f2 PUSH2 0x639
0x4f5 JUMP
0x4f6 JUMPDEST
0x4f7 PUSH1 0x40
0x4f9 MLOAD
0x4fa DUP1
0x4fb DUP3
0x4fc ISZERO
0x4fd ISZERO
0x4fe ISZERO
0x4ff ISZERO
0x500 DUP2
0x501 MSTORE
0x502 PUSH1 0x20
0x504 ADD
0x505 SWAP2
0x506 POP
0x507 POP
0x508 PUSH1 0x40
0x50a MLOAD
0x50b DUP1
0x50c SWAP2
0x50d SUB
0x50e SWAP1
0x50f RETURN
0x510 JUMPDEST
0x511 CALLVALUE
0x512 ISZERO
0x513 PUSH2 0x214
0x516 JUMPI
---
0x4c0: INVALID 
0x4c1: JUMPDEST 
0x4c2: V294 = 0x1f2
0x4c5: V295 = 0x4
0x4c9: V296 = CALLDATALOAD 0x4
0x4ca: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4df: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x4e1: V299 = 0x20
0x4e3: V300 = ADD 0x20 0x4
0x4e8: V301 = CALLDATALOAD 0x24
0x4ea: V302 = 0x20
0x4ec: V303 = ADD 0x20 0x24
0x4f2: V304 = 0x639
0x4f5: THROW 
0x4f6: JUMPDEST 
0x4f7: V305 = 0x40
0x4f9: V306 = M[0x40]
0x4fc: V307 = ISZERO S0
0x4fd: V308 = ISZERO V307
0x4fe: V309 = ISZERO V308
0x4ff: V310 = ISZERO V309
0x501: M[V306] = V310
0x502: V311 = 0x20
0x504: V312 = ADD 0x20 V306
0x508: V313 = 0x40
0x50a: V314 = M[0x40]
0x50d: V315 = SUB V312 V314
0x50f: RETURN V314 V315
0x510: JUMPDEST 
0x511: V316 = CALLVALUE
0x512: V317 = ISZERO V316
0x513: V318 = 0x214
0x516: THROWI V317
---
Entry stack: []
Stack pops: 0
Stack additions: [V301, V298, 0x1f2]
Exit stack: []

================================

Block 0x517
[0x517:0x665]
---
Predecessors: [0x4c0]
Successors: [0x666]
---
0x517 INVALID
0x518 JUMPDEST
0x519 PUSH2 0x25f
0x51c PUSH1 0x4
0x51e DUP1
0x51f DUP1
0x520 CALLDATALOAD
0x521 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x536 AND
0x537 SWAP1
0x538 PUSH1 0x20
0x53a ADD
0x53b SWAP1
0x53c SWAP2
0x53d SWAP1
0x53e DUP1
0x53f CALLDATALOAD
0x540 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x555 AND
0x556 SWAP1
0x557 PUSH1 0x20
0x559 ADD
0x55a SWAP1
0x55b SWAP2
0x55c SWAP1
0x55d POP
0x55e POP
0x55f PUSH2 0x7a7
0x562 JUMP
0x563 JUMPDEST
0x564 PUSH1 0x40
0x566 MLOAD
0x567 DUP1
0x568 DUP3
0x569 DUP2
0x56a MSTORE
0x56b PUSH1 0x20
0x56d ADD
0x56e SWAP2
0x56f POP
0x570 POP
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 SWAP2
0x576 SUB
0x577 SWAP1
0x578 RETURN
0x579 JUMPDEST
0x57a PUSH1 0x0
0x57c DUP2
0x57d PUSH1 0x2
0x57f PUSH1 0x0
0x581 CALLER
0x582 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x597 AND
0x598 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ad AND
0x5ae DUP2
0x5af MSTORE
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 SWAP1
0x5b4 DUP2
0x5b5 MSTORE
0x5b6 PUSH1 0x20
0x5b8 ADD
0x5b9 PUSH1 0x0
0x5bb SHA3
0x5bc PUSH1 0x0
0x5be DUP6
0x5bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d4 AND
0x5d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ea AND
0x5eb DUP2
0x5ec MSTORE
0x5ed PUSH1 0x20
0x5ef ADD
0x5f0 SWAP1
0x5f1 DUP2
0x5f2 MSTORE
0x5f3 PUSH1 0x20
0x5f5 ADD
0x5f6 PUSH1 0x0
0x5f8 SHA3
0x5f9 DUP2
0x5fa SWAP1
0x5fb SSTORE
0x5fc POP
0x5fd DUP3
0x5fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x613 AND
0x614 CALLER
0x615 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62a AND
0x62b PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x64c DUP5
0x64d PUSH1 0x40
0x64f MLOAD
0x650 DUP1
0x651 DUP3
0x652 DUP2
0x653 MSTORE
0x654 PUSH1 0x20
0x656 ADD
0x657 SWAP2
0x658 POP
0x659 POP
0x65a PUSH1 0x40
0x65c MLOAD
0x65d DUP1
0x65e SWAP2
0x65f SUB
0x660 SWAP1
0x661 LOG3
0x662 PUSH1 0x1
0x664 SWAP1
0x665 POP
---
0x517: INVALID 
0x518: JUMPDEST 
0x519: V319 = 0x25f
0x51c: V320 = 0x4
0x520: V321 = CALLDATALOAD 0x4
0x521: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x536: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x538: V324 = 0x20
0x53a: V325 = ADD 0x20 0x4
0x53f: V326 = CALLDATALOAD 0x24
0x540: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x555: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x557: V329 = 0x20
0x559: V330 = ADD 0x20 0x24
0x55f: V331 = 0x7a7
0x562: THROW 
0x563: JUMPDEST 
0x564: V332 = 0x40
0x566: V333 = M[0x40]
0x56a: M[V333] = S0
0x56b: V334 = 0x20
0x56d: V335 = ADD 0x20 V333
0x571: V336 = 0x40
0x573: V337 = M[0x40]
0x576: V338 = SUB V335 V337
0x578: RETURN V337 V338
0x579: JUMPDEST 
0x57a: V339 = 0x0
0x57d: V340 = 0x2
0x57f: V341 = 0x0
0x581: V342 = CALLER
0x582: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x597: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x598: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ad: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x5af: M[0x0] = V346
0x5b0: V347 = 0x20
0x5b2: V348 = ADD 0x20 0x0
0x5b5: M[0x20] = 0x2
0x5b6: V349 = 0x20
0x5b8: V350 = ADD 0x20 0x20
0x5b9: V351 = 0x0
0x5bb: V352 = SHA3 0x0 0x40
0x5bc: V353 = 0x0
0x5bf: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x5d5: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ea: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x5ec: M[0x0] = V357
0x5ed: V358 = 0x20
0x5ef: V359 = ADD 0x20 0x0
0x5f2: M[0x20] = V352
0x5f3: V360 = 0x20
0x5f5: V361 = ADD 0x20 0x20
0x5f6: V362 = 0x0
0x5f8: V363 = SHA3 0x0 0x40
0x5fb: S[V363] = S0
0x5fe: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x613: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x614: V366 = CALLER
0x615: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x62b: V369 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x64d: V370 = 0x40
0x64f: V371 = M[0x40]
0x653: M[V371] = S0
0x654: V372 = 0x20
0x656: V373 = ADD 0x20 V371
0x65a: V374 = 0x40
0x65c: V375 = M[0x40]
0x65f: V376 = SUB V373 V375
0x661: LOG V375 V376 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V368 V365
0x662: V377 = 0x1
---
Entry stack: []
Stack pops: 0
Stack additions: [V328, V323, 0x25f, 0x1, S0, S1]
Exit stack: []

================================

Block 0x666
[0x666:0x6bd]
---
Predecessors: [0x517]
Successors: [0x6be]
---
0x666 JUMPDEST
0x667 SWAP3
0x668 SWAP2
0x669 POP
0x66a POP
0x66b JUMP
0x66c JUMPDEST
0x66d PUSH1 0x0
0x66f SLOAD
0x670 DUP2
0x671 JUMP
0x672 JUMPDEST
0x673 PUSH1 0x0
0x675 DUP2
0x676 PUSH1 0x1
0x678 PUSH1 0x0
0x67a DUP7
0x67b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x690 AND
0x691 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a6 AND
0x6a7 DUP2
0x6a8 MSTORE
0x6a9 PUSH1 0x20
0x6ab ADD
0x6ac SWAP1
0x6ad DUP2
0x6ae MSTORE
0x6af PUSH1 0x20
0x6b1 ADD
0x6b2 PUSH1 0x0
0x6b4 SHA3
0x6b5 SLOAD
0x6b6 LT
0x6b7 ISZERO
0x6b8 DUP1
0x6b9 ISZERO
0x6ba PUSH2 0x43b
0x6bd JUMPI
---
0x666: JUMPDEST 
0x66b: JUMP S3
0x66c: JUMPDEST 
0x66d: V378 = 0x0
0x66f: V379 = S[0x0]
0x671: JUMP S0
0x672: JUMPDEST 
0x673: V380 = 0x0
0x676: V381 = 0x1
0x678: V382 = 0x0
0x67b: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x690: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x691: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a6: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x6a8: M[0x0] = V386
0x6a9: V387 = 0x20
0x6ab: V388 = ADD 0x20 0x0
0x6ae: M[0x20] = 0x1
0x6af: V389 = 0x20
0x6b1: V390 = ADD 0x20 0x20
0x6b2: V391 = 0x0
0x6b4: V392 = SHA3 0x0 0x40
0x6b5: V393 = S[V392]
0x6b6: V394 = LT V393 S0
0x6b7: V395 = ISZERO V394
0x6b9: V396 = ISZERO V395
0x6ba: V397 = 0x43b
0x6bd: THROWI V396
---
Entry stack: [S2, S1, 0x1]
Stack pops: 12
Stack additions: [V395, 0x0, S0, S1, S2]
Exit stack: []

================================

Block 0x6be
[0x6be:0x73e]
---
Predecessors: [0x666]
Successors: [0x73f]
---
0x6be POP
0x6bf DUP2
0x6c0 PUSH1 0x2
0x6c2 PUSH1 0x0
0x6c4 DUP7
0x6c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6da AND
0x6db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f0 AND
0x6f1 DUP2
0x6f2 MSTORE
0x6f3 PUSH1 0x20
0x6f5 ADD
0x6f6 SWAP1
0x6f7 DUP2
0x6f8 MSTORE
0x6f9 PUSH1 0x20
0x6fb ADD
0x6fc PUSH1 0x0
0x6fe SHA3
0x6ff PUSH1 0x0
0x701 CALLER
0x702 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x717 AND
0x718 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72d AND
0x72e DUP2
0x72f MSTORE
0x730 PUSH1 0x20
0x732 ADD
0x733 SWAP1
0x734 DUP2
0x735 MSTORE
0x736 PUSH1 0x20
0x738 ADD
0x739 PUSH1 0x0
0x73b SHA3
0x73c SLOAD
0x73d LT
0x73e ISZERO
---
0x6c0: V398 = 0x2
0x6c2: V399 = 0x0
0x6c5: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x6da: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x6db: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x6f2: M[0x0] = V403
0x6f3: V404 = 0x20
0x6f5: V405 = ADD 0x20 0x0
0x6f8: M[0x20] = 0x2
0x6f9: V406 = 0x20
0x6fb: V407 = ADD 0x20 0x20
0x6fc: V408 = 0x0
0x6fe: V409 = SHA3 0x0 0x40
0x6ff: V410 = 0x0
0x701: V411 = CALLER
0x702: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x717: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x718: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x72f: M[0x0] = V415
0x730: V416 = 0x20
0x732: V417 = ADD 0x20 0x0
0x735: M[0x20] = V409
0x736: V418 = 0x20
0x738: V419 = ADD 0x20 0x20
0x739: V420 = 0x0
0x73b: V421 = SHA3 0x0 0x40
0x73c: V422 = S[V421]
0x73d: V423 = LT V422 S2
0x73e: V424 = ISZERO V423
---
Entry stack: [S4, S3, S2, 0x0, V395]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V424]
Exit stack: [S4, S3, S2, 0x0, V424]

================================

Block 0x73f
[0x73f:0x745]
---
Predecessors: [0x6be]
Successors: [0x746]
---
0x73f JUMPDEST
0x740 DUP1
0x741 ISZERO
0x742 PUSH2 0x447
0x745 JUMPI
---
0x73f: JUMPDEST 
0x741: V425 = ISZERO V424
0x742: V426 = 0x447
0x745: THROWI V425
---
Entry stack: [S4, S3, S2, 0x0, V424]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, 0x0, V424]

================================

Block 0x746
[0x746:0x74a]
---
Predecessors: [0x73f]
Successors: [0x74b]
---
0x746 POP
0x747 PUSH1 0x0
0x749 DUP3
0x74a GT
---
0x747: V427 = 0x0
0x74a: V428 = GT S2 0x0
---
Entry stack: [S4, S3, S2, 0x0, V424]
Stack pops: 3
Stack additions: [S2, S1, V428]
Exit stack: [S4, S3, S2, 0x0, V428]

================================

Block 0x74b
[0x74b:0x750]
---
Predecessors: [0x746]
Successors: [0x751]
---
0x74b JUMPDEST
0x74c ISZERO
0x74d PUSH2 0x5de
0x750 JUMPI
---
0x74b: JUMPDEST 
0x74c: V429 = ISZERO V428
0x74d: V430 = 0x5de
0x750: THROWI V429
---
Entry stack: [S4, S3, S2, 0x0, V428]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, 0x0]

================================

Block 0x751
[0x751:0x8eb]
---
Predecessors: [0x74b]
Successors: [0x8ec]
---
0x751 DUP2
0x752 PUSH1 0x1
0x754 PUSH1 0x0
0x756 DUP6
0x757 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76c AND
0x76d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x782 AND
0x783 DUP2
0x784 MSTORE
0x785 PUSH1 0x20
0x787 ADD
0x788 SWAP1
0x789 DUP2
0x78a MSTORE
0x78b PUSH1 0x20
0x78d ADD
0x78e PUSH1 0x0
0x790 SHA3
0x791 PUSH1 0x0
0x793 DUP3
0x794 DUP3
0x795 SLOAD
0x796 ADD
0x797 SWAP3
0x798 POP
0x799 POP
0x79a DUP2
0x79b SWAP1
0x79c SSTORE
0x79d POP
0x79e DUP2
0x79f PUSH1 0x1
0x7a1 PUSH1 0x0
0x7a3 DUP7
0x7a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b9 AND
0x7ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cf AND
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x20
0x7d4 ADD
0x7d5 SWAP1
0x7d6 DUP2
0x7d7 MSTORE
0x7d8 PUSH1 0x20
0x7da ADD
0x7db PUSH1 0x0
0x7dd SHA3
0x7de PUSH1 0x0
0x7e0 DUP3
0x7e1 DUP3
0x7e2 SLOAD
0x7e3 SUB
0x7e4 SWAP3
0x7e5 POP
0x7e6 POP
0x7e7 DUP2
0x7e8 SWAP1
0x7e9 SSTORE
0x7ea POP
0x7eb DUP2
0x7ec PUSH1 0x2
0x7ee PUSH1 0x0
0x7f0 DUP7
0x7f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x806 AND
0x807 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81c AND
0x81d DUP2
0x81e MSTORE
0x81f PUSH1 0x20
0x821 ADD
0x822 SWAP1
0x823 DUP2
0x824 MSTORE
0x825 PUSH1 0x20
0x827 ADD
0x828 PUSH1 0x0
0x82a SHA3
0x82b PUSH1 0x0
0x82d CALLER
0x82e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x843 AND
0x844 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x859 AND
0x85a DUP2
0x85b MSTORE
0x85c PUSH1 0x20
0x85e ADD
0x85f SWAP1
0x860 DUP2
0x861 MSTORE
0x862 PUSH1 0x20
0x864 ADD
0x865 PUSH1 0x0
0x867 SHA3
0x868 PUSH1 0x0
0x86a DUP3
0x86b DUP3
0x86c SLOAD
0x86d SUB
0x86e SWAP3
0x86f POP
0x870 POP
0x871 DUP2
0x872 SWAP1
0x873 SSTORE
0x874 POP
0x875 DUP3
0x876 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88b AND
0x88c DUP5
0x88d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a2 AND
0x8a3 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8c4 DUP5
0x8c5 PUSH1 0x40
0x8c7 MLOAD
0x8c8 DUP1
0x8c9 DUP3
0x8ca DUP2
0x8cb MSTORE
0x8cc PUSH1 0x20
0x8ce ADD
0x8cf SWAP2
0x8d0 POP
0x8d1 POP
0x8d2 PUSH1 0x40
0x8d4 MLOAD
0x8d5 DUP1
0x8d6 SWAP2
0x8d7 SUB
0x8d8 SWAP1
0x8d9 LOG3
0x8da PUSH1 0x1
0x8dc SWAP1
0x8dd POP
0x8de PUSH2 0x5e8
0x8e1 JUMP
0x8e2 JUMPDEST
0x8e3 PUSH1 0x0
0x8e5 SWAP1
0x8e6 POP
0x8e7 PUSH2 0x5e8
0x8ea JUMP
0x8eb JUMPDEST
---
0x752: V431 = 0x1
0x754: V432 = 0x0
0x757: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x76c: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x76d: V435 = 0xffffffffffffffffffffffffffffffffffffffff
0x782: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x784: M[0x0] = V436
0x785: V437 = 0x20
0x787: V438 = ADD 0x20 0x0
0x78a: M[0x20] = 0x1
0x78b: V439 = 0x20
0x78d: V440 = ADD 0x20 0x20
0x78e: V441 = 0x0
0x790: V442 = SHA3 0x0 0x40
0x791: V443 = 0x0
0x795: V444 = S[V442]
0x796: V445 = ADD V444 S1
0x79c: S[V442] = V445
0x79f: V446 = 0x1
0x7a1: V447 = 0x0
0x7a4: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b9: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7ba: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cf: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x7d1: M[0x0] = V451
0x7d2: V452 = 0x20
0x7d4: V453 = ADD 0x20 0x0
0x7d7: M[0x20] = 0x1
0x7d8: V454 = 0x20
0x7da: V455 = ADD 0x20 0x20
0x7db: V456 = 0x0
0x7dd: V457 = SHA3 0x0 0x40
0x7de: V458 = 0x0
0x7e2: V459 = S[V457]
0x7e3: V460 = SUB V459 S1
0x7e9: S[V457] = V460
0x7ec: V461 = 0x2
0x7ee: V462 = 0x0
0x7f1: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x806: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x807: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x81c: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x81e: M[0x0] = V466
0x81f: V467 = 0x20
0x821: V468 = ADD 0x20 0x0
0x824: M[0x20] = 0x2
0x825: V469 = 0x20
0x827: V470 = ADD 0x20 0x20
0x828: V471 = 0x0
0x82a: V472 = SHA3 0x0 0x40
0x82b: V473 = 0x0
0x82d: V474 = CALLER
0x82e: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x843: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x844: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x859: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x85b: M[0x0] = V478
0x85c: V479 = 0x20
0x85e: V480 = ADD 0x20 0x0
0x861: M[0x20] = V472
0x862: V481 = 0x20
0x864: V482 = ADD 0x20 0x20
0x865: V483 = 0x0
0x867: V484 = SHA3 0x0 0x40
0x868: V485 = 0x0
0x86c: V486 = S[V484]
0x86d: V487 = SUB V486 S1
0x873: S[V484] = V487
0x876: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x88b: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x88d: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a2: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8a3: V492 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8c5: V493 = 0x40
0x8c7: V494 = M[0x40]
0x8cb: M[V494] = S1
0x8cc: V495 = 0x20
0x8ce: V496 = ADD 0x20 V494
0x8d2: V497 = 0x40
0x8d4: V498 = M[0x40]
0x8d7: V499 = SUB V496 V498
0x8d9: LOG V498 V499 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V491 V489
0x8da: V500 = 0x1
0x8de: V501 = 0x5e8
0x8e1: THROW 
0x8e2: JUMPDEST 
0x8e3: V502 = 0x0
0x8e7: V503 = 0x5e8
0x8ea: THROW 
0x8eb: JUMPDEST 
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 7
Stack additions: []
Exit stack: []

================================

Block 0x8ec
[0x8ec:0x937]
---
Predecessors: [0x751]
Successors: [0x938]
---
0x8ec JUMPDEST
0x8ed SWAP4
0x8ee SWAP3
0x8ef POP
0x8f0 POP
0x8f1 POP
0x8f2 JUMP
0x8f3 JUMPDEST
0x8f4 PUSH1 0x0
0x8f6 PUSH1 0x1
0x8f8 PUSH1 0x0
0x8fa DUP4
0x8fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x910 AND
0x911 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x926 AND
0x927 DUP2
0x928 MSTORE
0x929 PUSH1 0x20
0x92b ADD
0x92c SWAP1
0x92d DUP2
0x92e MSTORE
0x92f PUSH1 0x20
0x931 ADD
0x932 PUSH1 0x0
0x934 SHA3
0x935 SLOAD
0x936 SWAP1
0x937 POP
---
0x8ec: JUMPDEST 
0x8f2: JUMP S4
0x8f3: JUMPDEST 
0x8f4: V504 = 0x0
0x8f6: V505 = 0x1
0x8f8: V506 = 0x0
0x8fb: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x910: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x911: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x926: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x928: M[0x0] = V510
0x929: V511 = 0x20
0x92b: V512 = ADD 0x20 0x0
0x92e: M[0x20] = 0x1
0x92f: V513 = 0x20
0x931: V514 = ADD 0x20 0x20
0x932: V515 = 0x0
0x934: V516 = SHA3 0x0 0x40
0x935: V517 = S[V516]
---
Entry stack: []
Stack pops: 9
Stack additions: [V517, S0]
Exit stack: []

================================

Block 0x938
[0x938:0x988]
---
Predecessors: [0x8ec]
Successors: [0x989]
---
0x938 JUMPDEST
0x939 SWAP2
0x93a SWAP1
0x93b POP
0x93c JUMP
0x93d JUMPDEST
0x93e PUSH1 0x0
0x940 DUP2
0x941 PUSH1 0x1
0x943 PUSH1 0x0
0x945 CALLER
0x946 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95b AND
0x95c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x971 AND
0x972 DUP2
0x973 MSTORE
0x974 PUSH1 0x20
0x976 ADD
0x977 SWAP1
0x978 DUP2
0x979 MSTORE
0x97a PUSH1 0x20
0x97c ADD
0x97d PUSH1 0x0
0x97f SHA3
0x980 SLOAD
0x981 LT
0x982 ISZERO
0x983 DUP1
0x984 ISZERO
0x985 PUSH2 0x68a
0x988 JUMPI
---
0x938: JUMPDEST 
0x93c: JUMP S2
0x93d: JUMPDEST 
0x93e: V518 = 0x0
0x941: V519 = 0x1
0x943: V520 = 0x0
0x945: V521 = CALLER
0x946: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x95b: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x95c: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x971: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x973: M[0x0] = V525
0x974: V526 = 0x20
0x976: V527 = ADD 0x20 0x0
0x979: M[0x20] = 0x1
0x97a: V528 = 0x20
0x97c: V529 = ADD 0x20 0x20
0x97d: V530 = 0x0
0x97f: V531 = SHA3 0x0 0x40
0x980: V532 = S[V531]
0x981: V533 = LT V532 S0
0x982: V534 = ISZERO V533
0x984: V535 = ISZERO V534
0x985: V536 = 0x68a
0x988: THROWI V535
---
Entry stack: [S1, V517]
Stack pops: 5
Stack additions: [V534, 0x0, S0]
Exit stack: []

================================

Block 0x989
[0x989:0x98d]
---
Predecessors: [0x938]
Successors: [0x98e]
---
0x989 POP
0x98a PUSH1 0x0
0x98c DUP3
0x98d GT
---
0x98a: V537 = 0x0
0x98d: V538 = GT S2 0x0
---
Entry stack: [S2, 0x0, V534]
Stack pops: 3
Stack additions: [S2, S1, V538]
Exit stack: [S2, 0x0, V538]

================================

Block 0x98e
[0x98e:0x993]
---
Predecessors: [0x989]
Successors: [0x994]
---
0x98e JUMPDEST
0x98f ISZERO
0x990 PUSH2 0x797
0x993 JUMPI
---
0x98e: JUMPDEST 
0x98f: V539 = ISZERO V538
0x990: V540 = 0x797
0x993: THROWI V539
---
Entry stack: [S2, 0x0, V538]
Stack pops: 1
Stack additions: []
Exit stack: [S2, 0x0]

================================

Block 0x994
[0x994:0xaa4]
---
Predecessors: [0x98e]
Successors: [0xaa5]
---
0x994 DUP2
0x995 PUSH1 0x1
0x997 PUSH1 0x0
0x999 CALLER
0x99a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9af AND
0x9b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c5 AND
0x9c6 DUP2
0x9c7 MSTORE
0x9c8 PUSH1 0x20
0x9ca ADD
0x9cb SWAP1
0x9cc DUP2
0x9cd MSTORE
0x9ce PUSH1 0x20
0x9d0 ADD
0x9d1 PUSH1 0x0
0x9d3 SHA3
0x9d4 PUSH1 0x0
0x9d6 DUP3
0x9d7 DUP3
0x9d8 SLOAD
0x9d9 SUB
0x9da SWAP3
0x9db POP
0x9dc POP
0x9dd DUP2
0x9de SWAP1
0x9df SSTORE
0x9e0 POP
0x9e1 DUP2
0x9e2 PUSH1 0x1
0x9e4 PUSH1 0x0
0x9e6 DUP6
0x9e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fc AND
0x9fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa12 AND
0xa13 DUP2
0xa14 MSTORE
0xa15 PUSH1 0x20
0xa17 ADD
0xa18 SWAP1
0xa19 DUP2
0xa1a MSTORE
0xa1b PUSH1 0x20
0xa1d ADD
0xa1e PUSH1 0x0
0xa20 SHA3
0xa21 PUSH1 0x0
0xa23 DUP3
0xa24 DUP3
0xa25 SLOAD
0xa26 ADD
0xa27 SWAP3
0xa28 POP
0xa29 POP
0xa2a DUP2
0xa2b SWAP1
0xa2c SSTORE
0xa2d POP
0xa2e DUP3
0xa2f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa44 AND
0xa45 CALLER
0xa46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5b AND
0xa5c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa7d DUP5
0xa7e PUSH1 0x40
0xa80 MLOAD
0xa81 DUP1
0xa82 DUP3
0xa83 DUP2
0xa84 MSTORE
0xa85 PUSH1 0x20
0xa87 ADD
0xa88 SWAP2
0xa89 POP
0xa8a POP
0xa8b PUSH1 0x40
0xa8d MLOAD
0xa8e DUP1
0xa8f SWAP2
0xa90 SUB
0xa91 SWAP1
0xa92 LOG3
0xa93 PUSH1 0x1
0xa95 SWAP1
0xa96 POP
0xa97 PUSH2 0x7a1
0xa9a JUMP
0xa9b JUMPDEST
0xa9c PUSH1 0x0
0xa9e SWAP1
0xa9f POP
0xaa0 PUSH2 0x7a1
0xaa3 JUMP
0xaa4 JUMPDEST
---
0x995: V541 = 0x1
0x997: V542 = 0x0
0x999: V543 = CALLER
0x99a: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x9af: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x9b0: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c5: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x9c7: M[0x0] = V547
0x9c8: V548 = 0x20
0x9ca: V549 = ADD 0x20 0x0
0x9cd: M[0x20] = 0x1
0x9ce: V550 = 0x20
0x9d0: V551 = ADD 0x20 0x20
0x9d1: V552 = 0x0
0x9d3: V553 = SHA3 0x0 0x40
0x9d4: V554 = 0x0
0x9d8: V555 = S[V553]
0x9d9: V556 = SUB V555 S1
0x9df: S[V553] = V556
0x9e2: V557 = 0x1
0x9e4: V558 = 0x0
0x9e7: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fc: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9fd: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0xa12: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0xa14: M[0x0] = V562
0xa15: V563 = 0x20
0xa17: V564 = ADD 0x20 0x0
0xa1a: M[0x20] = 0x1
0xa1b: V565 = 0x20
0xa1d: V566 = ADD 0x20 0x20
0xa1e: V567 = 0x0
0xa20: V568 = SHA3 0x0 0x40
0xa21: V569 = 0x0
0xa25: V570 = S[V568]
0xa26: V571 = ADD V570 S1
0xa2c: S[V568] = V571
0xa2f: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0xa44: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa45: V574 = CALLER
0xa46: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5b: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0xa5c: V577 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa7e: V578 = 0x40
0xa80: V579 = M[0x40]
0xa84: M[V579] = S1
0xa85: V580 = 0x20
0xa87: V581 = ADD 0x20 V579
0xa8b: V582 = 0x40
0xa8d: V583 = M[0x40]
0xa90: V584 = SUB V581 V583
0xa92: LOG V583 V584 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V576 V573
0xa93: V585 = 0x1
0xa97: V586 = 0x7a1
0xa9a: THROW 
0xa9b: JUMPDEST 
0xa9c: V587 = 0x0
0xaa0: V588 = 0x7a1
0xaa3: THROW 
0xaa4: JUMPDEST 
---
Entry stack: [S1, 0x0]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xaa5
[0xaa5:0xb2c]
---
Predecessors: [0x994]
Successors: [0xb2d]
---
0xaa5 JUMPDEST
0xaa6 SWAP3
0xaa7 SWAP2
0xaa8 POP
0xaa9 POP
0xaaa JUMP
0xaab JUMPDEST
0xaac PUSH1 0x0
0xaae PUSH1 0x2
0xab0 PUSH1 0x0
0xab2 DUP5
0xab3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac8 AND
0xac9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xade AND
0xadf DUP2
0xae0 MSTORE
0xae1 PUSH1 0x20
0xae3 ADD
0xae4 SWAP1
0xae5 DUP2
0xae6 MSTORE
0xae7 PUSH1 0x20
0xae9 ADD
0xaea PUSH1 0x0
0xaec SHA3
0xaed PUSH1 0x0
0xaef DUP4
0xaf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb05 AND
0xb06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1b AND
0xb1c DUP2
0xb1d MSTORE
0xb1e PUSH1 0x20
0xb20 ADD
0xb21 SWAP1
0xb22 DUP2
0xb23 MSTORE
0xb24 PUSH1 0x20
0xb26 ADD
0xb27 PUSH1 0x0
0xb29 SHA3
0xb2a SLOAD
0xb2b SWAP1
0xb2c POP
---
0xaa5: JUMPDEST 
0xaaa: JUMP S3
0xaab: JUMPDEST 
0xaac: V589 = 0x0
0xaae: V590 = 0x2
0xab0: V591 = 0x0
0xab3: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0xac8: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xac9: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0xade: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0xae0: M[0x0] = V595
0xae1: V596 = 0x20
0xae3: V597 = ADD 0x20 0x0
0xae6: M[0x20] = 0x2
0xae7: V598 = 0x20
0xae9: V599 = ADD 0x20 0x20
0xaea: V600 = 0x0
0xaec: V601 = SHA3 0x0 0x40
0xaed: V602 = 0x0
0xaf0: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0xb05: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb06: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1b: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0xb1d: M[0x0] = V606
0xb1e: V607 = 0x20
0xb20: V608 = ADD 0x20 0x0
0xb23: M[0x20] = V601
0xb24: V609 = 0x20
0xb26: V610 = ADD 0x20 0x20
0xb27: V611 = 0x0
0xb29: V612 = SHA3 0x0 0x40
0xb2a: V613 = S[V612]
---
Entry stack: []
Stack pops: 7
Stack additions: [V613, S0, S1]
Exit stack: []

================================

Block 0xb2d
[0xb2d:0xb65]
---
Predecessors: [0xaa5]
Successors: []
---
0xb2d JUMPDEST
0xb2e SWAP3
0xb2f SWAP2
0xb30 POP
0xb31 POP
0xb32 JUMP
0xb33 STOP
0xb34 LOG1
0xb35 PUSH6 0x627a7a723058
0xb3c SHA3
0xb3d CALLCODE
0xb3e PUSH23 0x4164dd8ff6391c903d48b9a64ba1229f77af7af54d5afa
0xb56 MISSING 0xe4
0xb57 SMOD
0xb58 MISSING 0xd4
0xb59 PUSH12 0x88e1700029
---
0xb2d: JUMPDEST 
0xb32: JUMP S3
0xb33: STOP 
0xb34: LOG S0 S1 S2
0xb35: V614 = 0x627a7a723058
0xb3c: V615 = SHA3 0x627a7a723058 S3
0xb3d: V616 = CALLCODE V615 S4 S5 S6 S7 S8 S9
0xb3e: V617 = 0x4164dd8ff6391c903d48b9a64ba1229f77af7af54d5afa
0xb56: MISSING 0xe4
0xb57: V618 = SMOD S0 S1
0xb58: MISSING 0xd4
0xb59: V619 = 0x88e1700029
---
Entry stack: [S2, S1, V613]
Stack pops: 51
Stack additions: [0x88e1700029]
Exit stack: []

================================

Function 0:
Public function signature: 0xcfd0a0d
Entry block: 0x5c
Exit block: 0x6c
Body: 0x5c, 0x63, 0x64, 0x6c, 0x10c

Function 1:
Public function signature: 0x52f6ee58
Entry block: 0xae
Exit block: 0xbe
Body: 0xae, 0xb5, 0xb6, 0xbe, 0x132

Function 2:
Public function signature: 0x69ac5721
Entry block: 0xd4
Exit block: 0xe4
Body: 0xd4, 0xdb, 0xdc, 0xe4, 0x13e

Function 3:
Public function signature: 0xa69df4b5
Entry block: 0xfa
Exit block: 0x10a
Body: 0xfa, 0x101, 0x102, 0x10a, 0x144, 0x151, 0x156, 0x2b0, 0x2b1, 0x2bd, 0x2be, 0x2cf, 0x2d4, 0x2d5

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

