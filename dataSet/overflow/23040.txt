Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xd0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xd0
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xd0
0xc: JUMPI 0xd0 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2d05d3f
0x3c EQ
0x3d PUSH2 0x59d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2d05d3f
0x3c: V13 = EQ 0x2d05d3f V11
0x3d: V14 = 0x59d
0x40: JUMPI 0x59d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x5f2]
---
0x41 DUP1
0x42 PUSH4 0x4fed917
0x47 EQ
0x48 PUSH2 0x5f2
0x4b JUMPI
---
0x42: V15 = 0x4fed917
0x47: V16 = EQ 0x4fed917 V11
0x48: V17 = 0x5f2
0x4b: JUMPI 0x5f2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x645]
---
0x4c DUP1
0x4d PUSH4 0x6fdde03
0x52 EQ
0x53 PUSH2 0x645
0x56 JUMPI
---
0x4d: V18 = 0x6fdde03
0x52: V19 = EQ 0x6fdde03 V11
0x53: V20 = 0x645
0x56: JUMPI 0x645 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x6d3]
---
0x57 DUP1
0x58 PUSH4 0x14f6c3be
0x5d EQ
0x5e PUSH2 0x6d3
0x61 JUMPI
---
0x58: V21 = 0x14f6c3be
0x5d: V22 = EQ 0x14f6c3be V11
0x5e: V23 = 0x6d3
0x61: JUMPI 0x6d3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x6e8]
---
0x62 DUP1
0x63 PUSH4 0x18160ddd
0x68 EQ
0x69 PUSH2 0x6e8
0x6c JUMPI
---
0x63: V24 = 0x18160ddd
0x68: V25 = EQ 0x18160ddd V11
0x69: V26 = 0x6e8
0x6c: JUMPI 0x6e8 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x711]
---
0x6d DUP1
0x6e PUSH4 0x2c4e722e
0x73 EQ
0x74 PUSH2 0x711
0x77 JUMPI
---
0x6e: V27 = 0x2c4e722e
0x73: V28 = EQ 0x2c4e722e V11
0x74: V29 = 0x711
0x77: JUMPI 0x711 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x73a]
---
0x78 DUP1
0x79 PUSH4 0x313ce567
0x7e EQ
0x7f PUSH2 0x73a
0x82 JUMPI
---
0x79: V30 = 0x313ce567
0x7e: V31 = EQ 0x313ce567 V11
0x7f: V32 = 0x73a
0x82: JUMPI 0x73a V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x763]
---
0x83 DUP1
0x84 PUSH4 0x70a08231
0x89 EQ
0x8a PUSH2 0x763
0x8d JUMPI
---
0x84: V33 = 0x70a08231
0x89: V34 = EQ 0x70a08231 V11
0x8a: V35 = 0x763
0x8d: JUMPI 0x763 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x7b0]
---
0x8e DUP1
0x8f PUSH4 0x95d89b41
0x94 EQ
0x95 PUSH2 0x7b0
0x98 JUMPI
---
0x8f: V36 = 0x95d89b41
0x94: V37 = EQ 0x95d89b41 V11
0x95: V38 = 0x7b0
0x98: JUMPI 0x7b0 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x83e]
---
0x99 DUP1
0x9a PUSH4 0x9765b4d7
0x9f EQ
0xa0 PUSH2 0x83e
0xa3 JUMPI
---
0x9a: V39 = 0x9765b4d7
0x9f: V40 = EQ 0x9765b4d7 V11
0xa0: V41 = 0x83e
0xa3: JUMPI 0x83e V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x86b]
---
0xa4 DUP1
0xa5 PUSH4 0xa6f48c90
0xaa EQ
0xab PUSH2 0x86b
0xae JUMPI
---
0xa5: V42 = 0xa6f48c90
0xaa: V43 = EQ 0xa6f48c90 V11
0xab: V44 = 0x86b
0xae: JUMPI 0x86b V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x894]
---
0xaf DUP1
0xb0 PUSH4 0xa9059cbb
0xb5 EQ
0xb6 PUSH2 0x894
0xb9 JUMPI
---
0xb0: V45 = 0xa9059cbb
0xb5: V46 = EQ 0xa9059cbb V11
0xb6: V47 = 0x894
0xb9: JUMPI 0x894 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x8d6]
---
0xba DUP1
0xbb PUSH4 0xbe9a6555
0xc0 EQ
0xc1 PUSH2 0x8d6
0xc4 JUMPI
---
0xbb: V48 = 0xbe9a6555
0xc0: V49 = EQ 0xbe9a6555 V11
0xc1: V50 = 0x8d6
0xc4: JUMPI 0x8d6 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x8ff]
---
0xc5 DUP1
0xc6 PUSH4 0xefbe1c1c
0xcb EQ
0xcc PUSH2 0x8ff
0xcf JUMPI
---
0xc6: V51 = 0xefbe1c1c
0xcb: V52 = EQ 0xefbe1c1c V11
0xcc: V53 = 0x8ff
0xcf: JUMPI 0x8ff V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xeb]
---
Predecessors: [0x0, 0xc5]
Successors: [0xec, 0xf0]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 PUSH1 0x0
0xd6 PUSH1 0x4
0xd8 PUSH1 0x14
0xda SWAP1
0xdb SLOAD
0xdc SWAP1
0xdd PUSH2 0x100
0xe0 EXP
0xe1 SWAP1
0xe2 DIV
0xe3 PUSH1 0xff
0xe5 AND
0xe6 ISZERO
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xd0: JUMPDEST 
0xd1: V54 = 0x0
0xd4: V55 = 0x0
0xd6: V56 = 0x4
0xd8: V57 = 0x14
0xdb: V58 = S[0x4]
0xdd: V59 = 0x100
0xe0: V60 = EXP 0x100 0x14
0xe2: V61 = DIV V58 0x10000000000000000000000000000000000000000
0xe3: V62 = 0xff
0xe5: V63 = AND 0xff V61
0xe6: V64 = ISZERO V63
0xe7: V65 = ISZERO V64
0xe8: V66 = 0xf0
0xeb: JUMPI 0xf0 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xd0]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V67 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0xf0
[0xf0:0xfc]
---
Predecessors: [0xd0]
Successors: [0xfd, 0x104]
---
0xf0 JUMPDEST
0xf1 PUSH1 0x5
0xf3 SLOAD
0xf4 TIMESTAMP
0xf5 LT
0xf6 ISZERO
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x104
0xfc JUMPI
---
0xf0: JUMPDEST 
0xf1: V68 = 0x5
0xf3: V69 = S[0x5]
0xf4: V70 = TIMESTAMP
0xf5: V71 = LT V70 V69
0xf6: V72 = ISZERO V71
0xf8: V73 = ISZERO V72
0xf9: V74 = 0x104
0xfc: JUMPI 0x104 V73
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V11, 0x0, 0x0, 0x0, V72]

================================

Block 0xfd
[0xfd:0x103]
---
Predecessors: [0xf0]
Successors: [0x104]
---
0xfd POP
0xfe PUSH1 0x6
0x100 SLOAD
0x101 TIMESTAMP
0x102 GT
0x103 ISZERO
---
0xfe: V75 = 0x6
0x100: V76 = S[0x6]
0x101: V77 = TIMESTAMP
0x102: V78 = GT V77 V76
0x103: V79 = ISZERO V78
---
Entry stack: [V11, 0x0, 0x0, 0x0, V72]
Stack pops: 1
Stack additions: [V79]
Exit stack: [V11, 0x0, 0x0, 0x0, V79]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0xf0, 0xfd]
Successors: [0x10b, 0x10f]
---
0x104 JUMPDEST
0x105 ISZERO
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V80 = ISZERO S0
0x106: V81 = ISZERO V80
0x107: V82 = 0x10f
0x10a: JUMPI 0x10f V81
---
Entry stack: [V11, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x104]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V83 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0x10f
[0x10f:0x11d]
---
Predecessors: [0x104]
Successors: [0x11e, 0x12b]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 SWAP3
0x112 POP
0x113 PUSH1 0x0
0x115 PUSH1 0x7
0x117 SLOAD
0x118 EQ
0x119 ISZERO
0x11a PUSH2 0x12b
0x11d JUMPI
---
0x10f: JUMPDEST 
0x110: V84 = CALLVALUE
0x113: V85 = 0x0
0x115: V86 = 0x7
0x117: V87 = S[0x7]
0x118: V88 = EQ V87 0x0
0x119: V89 = ISZERO V88
0x11a: V90 = 0x12b
0x11d: JUMPI 0x12b V89
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V84, S1, S0]
Exit stack: [V11, V84, 0x0, 0x0]

================================

Block 0x11e
[0x11e:0x12a]
---
Predecessors: [0x10f]
Successors: [0x146]
---
0x11e PUSH1 0x2
0x120 SLOAD
0x121 PUSH1 0x8
0x123 SLOAD
0x124 MUL
0x125 SWAP2
0x126 POP
0x127 PUSH2 0x146
0x12a JUMP
---
0x11e: V91 = 0x2
0x120: V92 = S[0x2]
0x121: V93 = 0x8
0x123: V94 = S[0x8]
0x124: V95 = MUL V94 V92
0x127: V96 = 0x146
0x12a: JUMP 0x146
---
Entry stack: [V11, V84, 0x0, 0x0]
Stack pops: 2
Stack additions: [V95, S0]
Exit stack: [V11, V84, V95, 0x0]

================================

Block 0x12b
[0x12b:0x13f]
---
Predecessors: [0x10f]
Successors: [0x140, 0x141]
---
0x12b JUMPDEST
0x12c PUSH1 0x7
0x12e SLOAD
0x12f PUSH8 0xde0b6b3a7640000
0x138 DUP5
0x139 DUP2
0x13a ISZERO
0x13b ISZERO
0x13c PUSH2 0x141
0x13f JUMPI
---
0x12b: JUMPDEST 
0x12c: V97 = 0x7
0x12e: V98 = S[0x7]
0x12f: V99 = 0xde0b6b3a7640000
0x13a: V100 = ISZERO 0xde0b6b3a7640000
0x13b: V101 = ISZERO 0x0
0x13c: V102 = 0x141
0x13f: JUMPI 0x141 0x1
---
Entry stack: [V11, V84, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V98, 0xde0b6b3a7640000, S2]
Exit stack: [V11, V84, 0x0, 0x0, V98, 0xde0b6b3a7640000, V84]

================================

Block 0x140
[0x140:0x140]
---
Predecessors: [0x12b]
Successors: []
---
0x140 INVALID
---
0x140: INVALID 
---
Entry stack: [V11, V84, 0x0, 0x0, V98, 0xde0b6b3a7640000, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, 0x0, 0x0, V98, 0xde0b6b3a7640000, V84]

================================

Block 0x141
[0x141:0x145]
---
Predecessors: [0x12b]
Successors: [0x146]
---
0x141 JUMPDEST
0x142 DIV
0x143 MUL
0x144 SWAP2
0x145 POP
---
0x141: JUMPDEST 
0x142: V103 = DIV V84 0xde0b6b3a7640000
0x143: V104 = MUL V103 V98
---
Entry stack: [V11, V84, 0x0, 0x0, V98, 0xde0b6b3a7640000, V84]
Stack pops: 5
Stack additions: [V104, S3]
Exit stack: [V11, V84, V104, 0x0]

================================

Block 0x146
[0x146:0x150]
---
Predecessors: [0x11e, 0x141]
Successors: [0x151, 0x155]
---
0x146 JUMPDEST
0x147 PUSH1 0x0
0x149 DUP3
0x14a GT
0x14b ISZERO
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0x146: JUMPDEST 
0x147: V105 = 0x0
0x14a: V106 = GT S1 0x0
0x14b: V107 = ISZERO V106
0x14c: V108 = ISZERO V107
0x14d: V109 = 0x155
0x150: JUMPI 0x155 V108
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0x146]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V110 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x155
[0x155:0x1ad]
---
Predecessors: [0x146]
Successors: [0x1ae, 0x1b2]
---
0x155 JUMPDEST
0x156 CALLER
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d PUSH1 0x4
0x16f PUSH1 0x0
0x171 SWAP1
0x172 SLOAD
0x173 SWAP1
0x174 PUSH2 0x100
0x177 EXP
0x178 SWAP1
0x179 DIV
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f AND
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 EQ
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x155: JUMPDEST 
0x156: V111 = CALLER
0x157: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x16d: V114 = 0x4
0x16f: V115 = 0x0
0x172: V116 = S[0x4]
0x174: V117 = 0x100
0x177: V118 = EXP 0x100 0x0
0x179: V119 = DIV V116 0x1
0x17a: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x190: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1a6: V124 = EQ V123 V113
0x1a7: V125 = ISZERO V124
0x1a8: V126 = ISZERO V125
0x1a9: V127 = ISZERO V126
0x1aa: V128 = 0x1b2
0x1ad: JUMPI 0x1b2 V127
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x155]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V129 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x1b2
[0x1b2:0x21d]
---
Predecessors: [0x155]
Successors: [0x21e, 0x222]
---
0x1b2 JUMPDEST
0x1b3 DUP2
0x1b4 PUSH1 0x9
0x1b6 PUSH1 0x0
0x1b8 PUSH1 0x4
0x1ba PUSH1 0x0
0x1bc SWAP1
0x1bd SLOAD
0x1be SWAP1
0x1bf PUSH2 0x100
0x1c2 EXP
0x1c3 SWAP1
0x1c4 DIV
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da AND
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 DUP2
0x208 MSTORE
0x209 PUSH1 0x20
0x20b ADD
0x20c SWAP1
0x20d DUP2
0x20e MSTORE
0x20f PUSH1 0x20
0x211 ADD
0x212 PUSH1 0x0
0x214 SHA3
0x215 SLOAD
0x216 LT
0x217 ISZERO
0x218 ISZERO
0x219 ISZERO
0x21a PUSH2 0x222
0x21d JUMPI
---
0x1b2: JUMPDEST 
0x1b4: V130 = 0x9
0x1b6: V131 = 0x0
0x1b8: V132 = 0x4
0x1ba: V133 = 0x0
0x1bd: V134 = S[0x4]
0x1bf: V135 = 0x100
0x1c2: V136 = EXP 0x100 0x0
0x1c4: V137 = DIV V134 0x1
0x1c5: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x1db: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1f1: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x208: M[0x0] = V143
0x209: V144 = 0x20
0x20b: V145 = ADD 0x20 0x0
0x20e: M[0x20] = 0x9
0x20f: V146 = 0x20
0x211: V147 = ADD 0x20 0x20
0x212: V148 = 0x0
0x214: V149 = SHA3 0x0 0x40
0x215: V150 = S[V149]
0x216: V151 = LT V150 S1
0x217: V152 = ISZERO V151
0x218: V153 = ISZERO V152
0x219: V154 = ISZERO V153
0x21a: V155 = 0x222
0x21d: JUMPI 0x222 V154
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x21e
[0x21e:0x221]
---
Predecessors: [0x1b2]
Successors: []
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
---
0x21e: V156 = 0x0
0x221: REVERT 0x0 0x0
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x222
[0x222:0x22d]
---
Predecessors: [0x1b2]
Successors: [0x22e, 0x28c]
---
0x222 JUMPDEST
0x223 PUSH1 0x0
0x225 PUSH1 0x7
0x227 SLOAD
0x228 EQ
0x229 ISZERO
0x22a PUSH2 0x28c
0x22d JUMPI
---
0x222: JUMPDEST 
0x223: V157 = 0x0
0x225: V158 = 0x7
0x227: V159 = S[0x7]
0x228: V160 = EQ V159 0x0
0x229: V161 = ISZERO V160
0x22a: V162 = 0x28c
0x22d: JUMPI 0x28c V161
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x22e
[0x22e:0x286]
---
Predecessors: [0x222]
Successors: [0x287, 0x28b]
---
0x22e PUSH1 0x1
0x230 PUSH1 0xa
0x232 PUSH1 0x0
0x234 CALLER
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x260 AND
0x261 DUP2
0x262 MSTORE
0x263 PUSH1 0x20
0x265 ADD
0x266 SWAP1
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x20
0x26b ADD
0x26c PUSH1 0x0
0x26e SHA3
0x26f PUSH1 0x0
0x271 SWAP1
0x272 SLOAD
0x273 SWAP1
0x274 PUSH2 0x100
0x277 EXP
0x278 SWAP1
0x279 DIV
0x27a PUSH1 0xff
0x27c AND
0x27d PUSH1 0xff
0x27f AND
0x280 LT
0x281 ISZERO
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x22e: V163 = 0x1
0x230: V164 = 0xa
0x232: V165 = 0x0
0x234: V166 = CALLER
0x235: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x24b: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x260: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x262: M[0x0] = V170
0x263: V171 = 0x20
0x265: V172 = ADD 0x20 0x0
0x268: M[0x20] = 0xa
0x269: V173 = 0x20
0x26b: V174 = ADD 0x20 0x20
0x26c: V175 = 0x0
0x26e: V176 = SHA3 0x0 0x40
0x26f: V177 = 0x0
0x272: V178 = S[V176]
0x274: V179 = 0x100
0x277: V180 = EXP 0x100 0x0
0x279: V181 = DIV V178 0x1
0x27a: V182 = 0xff
0x27c: V183 = AND 0xff V181
0x27d: V184 = 0xff
0x27f: V185 = AND 0xff V183
0x280: V186 = LT V185 0x1
0x281: V187 = ISZERO V186
0x282: V188 = ISZERO V187
0x283: V189 = 0x28b
0x286: JUMPI 0x28b V188
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x22e]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V190 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x28b
[0x28b:0x28b]
---
Predecessors: [0x22e]
Successors: [0x28c]
---
0x28b JUMPDEST
---
0x28b: JUMPDEST 
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, 0x0]

================================

Block 0x28c
[0x28c:0x51f]
---
Predecessors: [0x222, 0x28b]
Successors: [0x520, 0x521]
---
0x28c JUMPDEST
0x28d PUSH1 0x9
0x28f PUSH1 0x0
0x291 PUSH1 0x4
0x293 PUSH1 0x0
0x295 SWAP1
0x296 SLOAD
0x297 SWAP1
0x298 PUSH2 0x100
0x29b EXP
0x29c SWAP1
0x29d DIV
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 DUP2
0x2e1 MSTORE
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb PUSH1 0x0
0x2ed SHA3
0x2ee SLOAD
0x2ef PUSH1 0x9
0x2f1 PUSH1 0x0
0x2f3 CALLER
0x2f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x309 AND
0x30a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31f AND
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP1
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a ADD
0x32b PUSH1 0x0
0x32d SHA3
0x32e SLOAD
0x32f ADD
0x330 SWAP1
0x331 POP
0x332 DUP2
0x333 PUSH1 0x9
0x335 PUSH1 0x0
0x337 CALLER
0x338 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34d AND
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 DUP2
0x365 MSTORE
0x366 PUSH1 0x20
0x368 ADD
0x369 SWAP1
0x36a DUP2
0x36b MSTORE
0x36c PUSH1 0x20
0x36e ADD
0x36f PUSH1 0x0
0x371 SHA3
0x372 PUSH1 0x0
0x374 DUP3
0x375 DUP3
0x376 SLOAD
0x377 ADD
0x378 SWAP3
0x379 POP
0x37a POP
0x37b DUP2
0x37c SWAP1
0x37d SSTORE
0x37e POP
0x37f DUP2
0x380 PUSH1 0x9
0x382 PUSH1 0x0
0x384 PUSH1 0x4
0x386 PUSH1 0x0
0x388 SWAP1
0x389 SLOAD
0x38a SWAP1
0x38b PUSH2 0x100
0x38e EXP
0x38f SWAP1
0x390 DIV
0x391 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a6 AND
0x3a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bc AND
0x3bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d2 AND
0x3d3 DUP2
0x3d4 MSTORE
0x3d5 PUSH1 0x20
0x3d7 ADD
0x3d8 SWAP1
0x3d9 DUP2
0x3da MSTORE
0x3db PUSH1 0x20
0x3dd ADD
0x3de PUSH1 0x0
0x3e0 SHA3
0x3e1 PUSH1 0x0
0x3e3 DUP3
0x3e4 DUP3
0x3e5 SLOAD
0x3e6 SUB
0x3e7 SWAP3
0x3e8 POP
0x3e9 POP
0x3ea DUP2
0x3eb SWAP1
0x3ec SSTORE
0x3ed POP
0x3ee CALLER
0x3ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x404 AND
0x405 PUSH1 0x4
0x407 PUSH1 0x0
0x409 SWAP1
0x40a SLOAD
0x40b SWAP1
0x40c PUSH2 0x100
0x40f EXP
0x410 SWAP1
0x411 DIV
0x412 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x427 AND
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x45f DUP5
0x460 PUSH1 0x40
0x462 MLOAD
0x463 DUP1
0x464 DUP3
0x465 DUP2
0x466 MSTORE
0x467 PUSH1 0x20
0x469 ADD
0x46a SWAP2
0x46b POP
0x46c POP
0x46d PUSH1 0x40
0x46f MLOAD
0x470 DUP1
0x471 SWAP2
0x472 SUB
0x473 SWAP1
0x474 LOG3
0x475 DUP1
0x476 PUSH1 0x9
0x478 PUSH1 0x0
0x47a PUSH1 0x4
0x47c PUSH1 0x0
0x47e SWAP1
0x47f SLOAD
0x480 SWAP1
0x481 PUSH2 0x100
0x484 EXP
0x485 SWAP1
0x486 DIV
0x487 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49c AND
0x49d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b2 AND
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 AND
0x4c9 DUP2
0x4ca MSTORE
0x4cb PUSH1 0x20
0x4cd ADD
0x4ce SWAP1
0x4cf DUP2
0x4d0 MSTORE
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 PUSH1 0x0
0x4d6 SHA3
0x4d7 SLOAD
0x4d8 PUSH1 0x9
0x4da PUSH1 0x0
0x4dc CALLER
0x4dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f2 AND
0x4f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x508 AND
0x509 DUP2
0x50a MSTORE
0x50b PUSH1 0x20
0x50d ADD
0x50e SWAP1
0x50f DUP2
0x510 MSTORE
0x511 PUSH1 0x20
0x513 ADD
0x514 PUSH1 0x0
0x516 SHA3
0x517 SLOAD
0x518 ADD
0x519 EQ
0x51a ISZERO
0x51b ISZERO
0x51c PUSH2 0x521
0x51f JUMPI
---
0x28c: JUMPDEST 
0x28d: V191 = 0x9
0x28f: V192 = 0x0
0x291: V193 = 0x4
0x293: V194 = 0x0
0x296: V195 = S[0x4]
0x298: V196 = 0x100
0x29b: V197 = EXP 0x100 0x0
0x29d: V198 = DIV V195 0x1
0x29e: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x2b4: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x2ca: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x2e1: M[0x0] = V204
0x2e2: V205 = 0x20
0x2e4: V206 = ADD 0x20 0x0
0x2e7: M[0x20] = 0x9
0x2e8: V207 = 0x20
0x2ea: V208 = ADD 0x20 0x20
0x2eb: V209 = 0x0
0x2ed: V210 = SHA3 0x0 0x40
0x2ee: V211 = S[V210]
0x2ef: V212 = 0x9
0x2f1: V213 = 0x0
0x2f3: V214 = CALLER
0x2f4: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x309: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x30a: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x31f: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x321: M[0x0] = V218
0x322: V219 = 0x20
0x324: V220 = ADD 0x20 0x0
0x327: M[0x20] = 0x9
0x328: V221 = 0x20
0x32a: V222 = ADD 0x20 0x20
0x32b: V223 = 0x0
0x32d: V224 = SHA3 0x0 0x40
0x32e: V225 = S[V224]
0x32f: V226 = ADD V225 V211
0x333: V227 = 0x9
0x335: V228 = 0x0
0x337: V229 = CALLER
0x338: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x34e: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x365: M[0x0] = V233
0x366: V234 = 0x20
0x368: V235 = ADD 0x20 0x0
0x36b: M[0x20] = 0x9
0x36c: V236 = 0x20
0x36e: V237 = ADD 0x20 0x20
0x36f: V238 = 0x0
0x371: V239 = SHA3 0x0 0x40
0x372: V240 = 0x0
0x376: V241 = S[V239]
0x377: V242 = ADD V241 S1
0x37d: S[V239] = V242
0x380: V243 = 0x9
0x382: V244 = 0x0
0x384: V245 = 0x4
0x386: V246 = 0x0
0x389: V247 = S[0x4]
0x38b: V248 = 0x100
0x38e: V249 = EXP 0x100 0x0
0x390: V250 = DIV V247 0x1
0x391: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x3a7: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x3bd: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x3d4: M[0x0] = V256
0x3d5: V257 = 0x20
0x3d7: V258 = ADD 0x20 0x0
0x3da: M[0x20] = 0x9
0x3db: V259 = 0x20
0x3dd: V260 = ADD 0x20 0x20
0x3de: V261 = 0x0
0x3e0: V262 = SHA3 0x0 0x40
0x3e1: V263 = 0x0
0x3e5: V264 = S[V262]
0x3e6: V265 = SUB V264 S1
0x3ec: S[V262] = V265
0x3ee: V266 = CALLER
0x3ef: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x404: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x405: V269 = 0x4
0x407: V270 = 0x0
0x40a: V271 = S[0x4]
0x40c: V272 = 0x100
0x40f: V273 = EXP 0x100 0x0
0x411: V274 = DIV V271 0x1
0x412: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x427: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x428: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x43e: V279 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x460: V280 = 0x40
0x462: V281 = M[0x40]
0x466: M[V281] = S1
0x467: V282 = 0x20
0x469: V283 = ADD 0x20 V281
0x46d: V284 = 0x40
0x46f: V285 = M[0x40]
0x472: V286 = SUB V283 V285
0x474: LOG V285 V286 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V278 V268
0x476: V287 = 0x9
0x478: V288 = 0x0
0x47a: V289 = 0x4
0x47c: V290 = 0x0
0x47f: V291 = S[0x4]
0x481: V292 = 0x100
0x484: V293 = EXP 0x100 0x0
0x486: V294 = DIV V291 0x1
0x487: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x49d: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x4b3: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x4ca: M[0x0] = V300
0x4cb: V301 = 0x20
0x4cd: V302 = ADD 0x20 0x0
0x4d0: M[0x20] = 0x9
0x4d1: V303 = 0x20
0x4d3: V304 = ADD 0x20 0x20
0x4d4: V305 = 0x0
0x4d6: V306 = SHA3 0x0 0x40
0x4d7: V307 = S[V306]
0x4d8: V308 = 0x9
0x4da: V309 = 0x0
0x4dc: V310 = CALLER
0x4dd: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f2: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x4f3: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x508: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x50a: M[0x0] = V314
0x50b: V315 = 0x20
0x50d: V316 = ADD 0x20 0x0
0x510: M[0x20] = 0x9
0x511: V317 = 0x20
0x513: V318 = ADD 0x20 0x20
0x514: V319 = 0x0
0x516: V320 = SHA3 0x0 0x40
0x517: V321 = S[V320]
0x518: V322 = ADD V321 V307
0x519: V323 = EQ V322 V226
0x51a: V324 = ISZERO V323
0x51b: V325 = ISZERO V324
0x51c: V326 = 0x521
0x51f: JUMPI 0x521 V325
---
Entry stack: [V11, V84, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V226]
Exit stack: [V11, V84, S1, V226]

================================

Block 0x520
[0x520:0x520]
---
Predecessors: [0x28c]
Successors: []
---
0x520 INVALID
---
0x520: INVALID 
---
Entry stack: [V11, V84, S1, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, V226]

================================

Block 0x521
[0x521:0x52c]
---
Predecessors: [0x28c]
Successors: [0x52d, 0x598]
---
0x521 JUMPDEST
0x522 PUSH1 0x0
0x524 PUSH1 0x7
0x526 SLOAD
0x527 EQ
0x528 ISZERO
0x529 PUSH2 0x598
0x52c JUMPI
---
0x521: JUMPDEST 
0x522: V327 = 0x0
0x524: V328 = 0x7
0x526: V329 = S[0x7]
0x527: V330 = EQ V329 0x0
0x528: V331 = ISZERO V330
0x529: V332 = 0x598
0x52c: JUMPI 0x598 V331
---
Entry stack: [V11, V84, S1, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, V226]

================================

Block 0x52d
[0x52d:0x597]
---
Predecessors: [0x521]
Successors: [0x598]
---
0x52d PUSH1 0x1
0x52f PUSH1 0xa
0x531 PUSH1 0x0
0x533 CALLER
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55f AND
0x560 DUP2
0x561 MSTORE
0x562 PUSH1 0x20
0x564 ADD
0x565 SWAP1
0x566 DUP2
0x567 MSTORE
0x568 PUSH1 0x20
0x56a ADD
0x56b PUSH1 0x0
0x56d SHA3
0x56e PUSH1 0x0
0x570 DUP3
0x571 DUP3
0x572 DUP3
0x573 SWAP1
0x574 SLOAD
0x575 SWAP1
0x576 PUSH2 0x100
0x579 EXP
0x57a SWAP1
0x57b DIV
0x57c PUSH1 0xff
0x57e AND
0x57f ADD
0x580 SWAP3
0x581 POP
0x582 PUSH2 0x100
0x585 EXP
0x586 DUP2
0x587 SLOAD
0x588 DUP2
0x589 PUSH1 0xff
0x58b MUL
0x58c NOT
0x58d AND
0x58e SWAP1
0x58f DUP4
0x590 PUSH1 0xff
0x592 AND
0x593 MUL
0x594 OR
0x595 SWAP1
0x596 SSTORE
0x597 POP
---
0x52d: V333 = 0x1
0x52f: V334 = 0xa
0x531: V335 = 0x0
0x533: V336 = CALLER
0x534: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x54a: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x55f: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x561: M[0x0] = V340
0x562: V341 = 0x20
0x564: V342 = ADD 0x20 0x0
0x567: M[0x20] = 0xa
0x568: V343 = 0x20
0x56a: V344 = ADD 0x20 0x20
0x56b: V345 = 0x0
0x56d: V346 = SHA3 0x0 0x40
0x56e: V347 = 0x0
0x574: V348 = S[V346]
0x576: V349 = 0x100
0x579: V350 = EXP 0x100 0x0
0x57b: V351 = DIV V348 0x1
0x57c: V352 = 0xff
0x57e: V353 = AND 0xff V351
0x57f: V354 = ADD V353 0x1
0x582: V355 = 0x100
0x585: V356 = EXP 0x100 0x0
0x587: V357 = S[V346]
0x589: V358 = 0xff
0x58b: V359 = MUL 0xff 0x1
0x58c: V360 = NOT 0xff
0x58d: V361 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V357
0x590: V362 = 0xff
0x592: V363 = AND 0xff V354
0x593: V364 = MUL V363 0x1
0x594: V365 = OR V364 V361
0x596: S[V346] = V365
---
Entry stack: [V11, V84, S1, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84, S1, V226]

================================

Block 0x598
[0x598:0x59c]
---
Predecessors: [0x521, 0x52d]
Successors: []
---
0x598 JUMPDEST
0x599 POP
0x59a POP
0x59b POP
0x59c STOP
---
0x598: JUMPDEST 
0x59c: STOP 
---
Entry stack: [V11, V84, S1, V226]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x59d
[0x59d:0x5a3]
---
Predecessors: [0xd]
Successors: [0x5a4, 0x5a8]
---
0x59d JUMPDEST
0x59e CALLVALUE
0x59f ISZERO
0x5a0 PUSH2 0x5a8
0x5a3 JUMPI
---
0x59d: JUMPDEST 
0x59e: V366 = CALLVALUE
0x59f: V367 = ISZERO V366
0x5a0: V368 = 0x5a8
0x5a3: JUMPI 0x5a8 V367
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a4
[0x5a4:0x5a7]
---
Predecessors: [0x59d]
Successors: []
---
0x5a4 PUSH1 0x0
0x5a6 DUP1
0x5a7 REVERT
---
0x5a4: V369 = 0x0
0x5a7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a8
[0x5a8:0x5af]
---
Predecessors: [0x59d]
Successors: [0x928]
---
0x5a8 JUMPDEST
0x5a9 PUSH2 0x5b0
0x5ac PUSH2 0x928
0x5af JUMP
---
0x5a8: JUMPDEST 
0x5a9: V370 = 0x5b0
0x5ac: V371 = 0x928
0x5af: JUMP 0x928
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5b0]
Exit stack: [V11, 0x5b0]

================================

Block 0x5b0
[0x5b0:0x5f1]
---
Predecessors: [0x928]
Successors: []
---
0x5b0 JUMPDEST
0x5b1 PUSH1 0x40
0x5b3 MLOAD
0x5b4 DUP1
0x5b5 DUP3
0x5b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cb AND
0x5cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e1 AND
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 SWAP2
0x5e8 POP
0x5e9 POP
0x5ea PUSH1 0x40
0x5ec MLOAD
0x5ed DUP1
0x5ee SWAP2
0x5ef SUB
0x5f0 SWAP1
0x5f1 RETURN
---
0x5b0: JUMPDEST 
0x5b1: V372 = 0x40
0x5b3: V373 = M[0x40]
0x5b6: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x5cc: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e1: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x5e3: M[V373] = V377
0x5e4: V378 = 0x20
0x5e6: V379 = ADD 0x20 V373
0x5ea: V380 = 0x40
0x5ec: V381 = M[0x40]
0x5ef: V382 = SUB V379 V381
0x5f1: RETURN V381 V382
---
Entry stack: [V11, 0x5b0, V642]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x5b0]

================================

Block 0x5f2
[0x5f2:0x5f8]
---
Predecessors: [0x41]
Successors: [0x5f9, 0x5fd]
---
0x5f2 JUMPDEST
0x5f3 CALLVALUE
0x5f4 ISZERO
0x5f5 PUSH2 0x5fd
0x5f8 JUMPI
---
0x5f2: JUMPDEST 
0x5f3: V383 = CALLVALUE
0x5f4: V384 = ISZERO V383
0x5f5: V385 = 0x5fd
0x5f8: JUMPI 0x5fd V384
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f9
[0x5f9:0x5fc]
---
Predecessors: [0x5f2]
Successors: []
---
0x5f9 PUSH1 0x0
0x5fb DUP1
0x5fc REVERT
---
0x5f9: V386 = 0x0
0x5fc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5fd
[0x5fd:0x628]
---
Predecessors: [0x5f2]
Successors: [0x94e]
---
0x5fd JUMPDEST
0x5fe PUSH2 0x629
0x601 PUSH1 0x4
0x603 DUP1
0x604 DUP1
0x605 CALLDATALOAD
0x606 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61b AND
0x61c SWAP1
0x61d PUSH1 0x20
0x61f ADD
0x620 SWAP1
0x621 SWAP2
0x622 SWAP1
0x623 POP
0x624 POP
0x625 PUSH2 0x94e
0x628 JUMP
---
0x5fd: JUMPDEST 
0x5fe: V387 = 0x629
0x601: V388 = 0x4
0x605: V389 = CALLDATALOAD 0x4
0x606: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x61b: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x61d: V392 = 0x20
0x61f: V393 = ADD 0x20 0x4
0x625: V394 = 0x94e
0x628: JUMP 0x94e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x629, V391]
Exit stack: [V11, 0x629, V391]

================================

Block 0x629
[0x629:0x644]
---
Predecessors: [0x94e]
Successors: []
---
0x629 JUMPDEST
0x62a PUSH1 0x40
0x62c MLOAD
0x62d DUP1
0x62e DUP3
0x62f PUSH1 0xff
0x631 AND
0x632 PUSH1 0xff
0x634 AND
0x635 DUP2
0x636 MSTORE
0x637 PUSH1 0x20
0x639 ADD
0x63a SWAP2
0x63b POP
0x63c POP
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 SWAP2
0x642 SUB
0x643 SWAP1
0x644 RETURN
---
0x629: JUMPDEST 
0x62a: V395 = 0x40
0x62c: V396 = M[0x40]
0x62f: V397 = 0xff
0x631: V398 = AND 0xff V655
0x632: V399 = 0xff
0x634: V400 = AND 0xff V398
0x636: M[V396] = V400
0x637: V401 = 0x20
0x639: V402 = ADD 0x20 V396
0x63d: V403 = 0x40
0x63f: V404 = M[0x40]
0x642: V405 = SUB V402 V404
0x644: RETURN V404 V405
---
Entry stack: [V11, 0x629, V655]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x629]

================================

Block 0x645
[0x645:0x64b]
---
Predecessors: [0x4c]
Successors: [0x64c, 0x650]
---
0x645 JUMPDEST
0x646 CALLVALUE
0x647 ISZERO
0x648 PUSH2 0x650
0x64b JUMPI
---
0x645: JUMPDEST 
0x646: V406 = CALLVALUE
0x647: V407 = ISZERO V406
0x648: V408 = 0x650
0x64b: JUMPI 0x650 V407
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64c
[0x64c:0x64f]
---
Predecessors: [0x645]
Successors: []
---
0x64c PUSH1 0x0
0x64e DUP1
0x64f REVERT
---
0x64c: V409 = 0x0
0x64f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x650
[0x650:0x657]
---
Predecessors: [0x645]
Successors: [0x96e]
---
0x650 JUMPDEST
0x651 PUSH2 0x658
0x654 PUSH2 0x96e
0x657 JUMP
---
0x650: JUMPDEST 
0x651: V410 = 0x658
0x654: V411 = 0x96e
0x657: JUMP 0x96e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x658]
Exit stack: [V11, 0x658]

================================

Block 0x658
[0x658:0x67c]
---
Predecessors: [0xa04]
Successors: [0x67d]
---
0x658 JUMPDEST
0x659 PUSH1 0x40
0x65b MLOAD
0x65c DUP1
0x65d DUP1
0x65e PUSH1 0x20
0x660 ADD
0x661 DUP3
0x662 DUP2
0x663 SUB
0x664 DUP3
0x665 MSTORE
0x666 DUP4
0x667 DUP2
0x668 DUP2
0x669 MLOAD
0x66a DUP2
0x66b MSTORE
0x66c PUSH1 0x20
0x66e ADD
0x66f SWAP2
0x670 POP
0x671 DUP1
0x672 MLOAD
0x673 SWAP1
0x674 PUSH1 0x20
0x676 ADD
0x677 SWAP1
0x678 DUP1
0x679 DUP4
0x67a DUP4
0x67b PUSH1 0x0
---
0x658: JUMPDEST 
0x659: V412 = 0x40
0x65b: V413 = M[0x40]
0x65e: V414 = 0x20
0x660: V415 = ADD 0x20 V413
0x663: V416 = SUB V415 V413
0x665: M[V413] = V416
0x669: V417 = M[V676]
0x66b: M[V415] = V417
0x66c: V418 = 0x20
0x66e: V419 = ADD 0x20 V415
0x672: V420 = M[V676]
0x674: V421 = 0x20
0x676: V422 = ADD 0x20 V676
0x67b: V423 = 0x0
---
Entry stack: [V11, 0x658, V676]
Stack pops: 1
Stack additions: [S0, V413, V413, V419, V422, V420, V420, V419, V422, 0x0]
Exit stack: [V11, 0x658, V676, V413, V413, V419, V422, V420, V420, V419, V422, 0x0]

================================

Block 0x67d
[0x67d:0x685]
---
Predecessors: [0x658, 0x686]
Successors: [0x686, 0x698]
---
0x67d JUMPDEST
0x67e DUP4
0x67f DUP2
0x680 LT
0x681 ISZERO
0x682 PUSH2 0x698
0x685 JUMPI
---
0x67d: JUMPDEST 
0x680: V424 = LT S0 V420
0x681: V425 = ISZERO V424
0x682: V426 = 0x698
0x685: JUMPI 0x698 V425
---
Entry stack: [V11, 0x658, V676, V413, V413, V419, V422, V420, V420, V419, V422, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x658, V676, V413, V413, V419, V422, V420, V420, V419, V422, S0]

================================

Block 0x686
[0x686:0x697]
---
Predecessors: [0x67d]
Successors: [0x67d]
---
0x686 DUP1
0x687 DUP3
0x688 ADD
0x689 MLOAD
0x68a DUP2
0x68b DUP5
0x68c ADD
0x68d MSTORE
0x68e PUSH1 0x20
0x690 DUP2
0x691 ADD
0x692 SWAP1
0x693 POP
0x694 PUSH2 0x67d
0x697 JUMP
---
0x688: V427 = ADD V422 S0
0x689: V428 = M[V427]
0x68c: V429 = ADD V419 S0
0x68d: M[V429] = V428
0x68e: V430 = 0x20
0x691: V431 = ADD S0 0x20
0x694: V432 = 0x67d
0x697: JUMP 0x67d
---
Entry stack: [V11, 0x658, V676, V413, V413, V419, V422, V420, V420, V419, V422, S0]
Stack pops: 3
Stack additions: [S2, S1, V431]
Exit stack: [V11, 0x658, V676, V413, V413, V419, V422, V420, V420, V419, V422, V431]

================================

Block 0x698
[0x698:0x6ab]
---
Predecessors: [0x67d]
Successors: [0x6ac, 0x6c5]
---
0x698 JUMPDEST
0x699 POP
0x69a POP
0x69b POP
0x69c POP
0x69d SWAP1
0x69e POP
0x69f SWAP1
0x6a0 DUP2
0x6a1 ADD
0x6a2 SWAP1
0x6a3 PUSH1 0x1f
0x6a5 AND
0x6a6 DUP1
0x6a7 ISZERO
0x6a8 PUSH2 0x6c5
0x6ab JUMPI
---
0x698: JUMPDEST 
0x6a1: V433 = ADD V420 V419
0x6a3: V434 = 0x1f
0x6a5: V435 = AND 0x1f V420
0x6a7: V436 = ISZERO V435
0x6a8: V437 = 0x6c5
0x6ab: JUMPI 0x6c5 V436
---
Entry stack: [V11, 0x658, V676, V413, V413, V419, V422, V420, V420, V419, V422, S0]
Stack pops: 7
Stack additions: [V433, V435]
Exit stack: [V11, 0x658, V676, V413, V413, V433, V435]

================================

Block 0x6ac
[0x6ac:0x6c4]
---
Predecessors: [0x698]
Successors: [0x6c5]
---
0x6ac DUP1
0x6ad DUP3
0x6ae SUB
0x6af DUP1
0x6b0 MLOAD
0x6b1 PUSH1 0x1
0x6b3 DUP4
0x6b4 PUSH1 0x20
0x6b6 SUB
0x6b7 PUSH2 0x100
0x6ba EXP
0x6bb SUB
0x6bc NOT
0x6bd AND
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x20
0x6c2 ADD
0x6c3 SWAP2
0x6c4 POP
---
0x6ae: V438 = SUB V433 V435
0x6b0: V439 = M[V438]
0x6b1: V440 = 0x1
0x6b4: V441 = 0x20
0x6b6: V442 = SUB 0x20 V435
0x6b7: V443 = 0x100
0x6ba: V444 = EXP 0x100 V442
0x6bb: V445 = SUB V444 0x1
0x6bc: V446 = NOT V445
0x6bd: V447 = AND V446 V439
0x6bf: M[V438] = V447
0x6c0: V448 = 0x20
0x6c2: V449 = ADD 0x20 V438
---
Entry stack: [V11, 0x658, V676, V413, V413, V433, V435]
Stack pops: 2
Stack additions: [V449, S0]
Exit stack: [V11, 0x658, V676, V413, V413, V449, V435]

================================

Block 0x6c5
[0x6c5:0x6d2]
---
Predecessors: [0x698, 0x6ac]
Successors: []
---
0x6c5 JUMPDEST
0x6c6 POP
0x6c7 SWAP3
0x6c8 POP
0x6c9 POP
0x6ca POP
0x6cb PUSH1 0x40
0x6cd MLOAD
0x6ce DUP1
0x6cf SWAP2
0x6d0 SUB
0x6d1 SWAP1
0x6d2 RETURN
---
0x6c5: JUMPDEST 
0x6cb: V450 = 0x40
0x6cd: V451 = M[0x40]
0x6d0: V452 = SUB S1 V451
0x6d2: RETURN V451 V452
---
Entry stack: [V11, 0x658, V676, V413, V413, S1, V435]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x658]

================================

Block 0x6d3
[0x6d3:0x6d9]
---
Predecessors: [0x57]
Successors: [0x6da, 0x6de]
---
0x6d3 JUMPDEST
0x6d4 CALLVALUE
0x6d5 ISZERO
0x6d6 PUSH2 0x6de
0x6d9 JUMPI
---
0x6d3: JUMPDEST 
0x6d4: V453 = CALLVALUE
0x6d5: V454 = ISZERO V453
0x6d6: V455 = 0x6de
0x6d9: JUMPI 0x6de V454
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6da
[0x6da:0x6dd]
---
Predecessors: [0x6d3]
Successors: []
---
0x6da PUSH1 0x0
0x6dc DUP1
0x6dd REVERT
---
0x6da: V456 = 0x0
0x6dd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6de
[0x6de:0x6e5]
---
Predecessors: [0x6d3]
Successors: [0xa0c]
---
0x6de JUMPDEST
0x6df PUSH2 0x6e6
0x6e2 PUSH2 0xa0c
0x6e5 JUMP
---
0x6de: JUMPDEST 
0x6df: V457 = 0x6e6
0x6e2: V458 = 0xa0c
0x6e5: JUMP 0xa0c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e6]
Exit stack: [V11, 0x6e6]

================================

Block 0x6e6
[0x6e6:0x6e7]
---
Predecessors: [0xb04]
Successors: []
---
0x6e6 JUMPDEST
0x6e7 STOP
---
0x6e6: JUMPDEST 
0x6e7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e8
[0x6e8:0x6ee]
---
Predecessors: [0x62]
Successors: [0x6ef, 0x6f3]
---
0x6e8 JUMPDEST
0x6e9 CALLVALUE
0x6ea ISZERO
0x6eb PUSH2 0x6f3
0x6ee JUMPI
---
0x6e8: JUMPDEST 
0x6e9: V459 = CALLVALUE
0x6ea: V460 = ISZERO V459
0x6eb: V461 = 0x6f3
0x6ee: JUMPI 0x6f3 V460
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6ef
[0x6ef:0x6f2]
---
Predecessors: [0x6e8]
Successors: []
---
0x6ef PUSH1 0x0
0x6f1 DUP1
0x6f2 REVERT
---
0x6ef: V462 = 0x0
0x6f2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f3
[0x6f3:0x6fa]
---
Predecessors: [0x6e8]
Successors: [0xb06]
---
0x6f3 JUMPDEST
0x6f4 PUSH2 0x6fb
0x6f7 PUSH2 0xb06
0x6fa JUMP
---
0x6f3: JUMPDEST 
0x6f4: V463 = 0x6fb
0x6f7: V464 = 0xb06
0x6fa: JUMP 0xb06
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6fb]
Exit stack: [V11, 0x6fb]

================================

Block 0x6fb
[0x6fb:0x710]
---
Predecessors: [0xb06]
Successors: []
---
0x6fb JUMPDEST
0x6fc PUSH1 0x40
0x6fe MLOAD
0x6ff DUP1
0x700 DUP3
0x701 DUP2
0x702 MSTORE
0x703 PUSH1 0x20
0x705 ADD
0x706 SWAP2
0x707 POP
0x708 POP
0x709 PUSH1 0x40
0x70b MLOAD
0x70c DUP1
0x70d SWAP2
0x70e SUB
0x70f SWAP1
0x710 RETURN
---
0x6fb: JUMPDEST 
0x6fc: V465 = 0x40
0x6fe: V466 = M[0x40]
0x702: M[V466] = V775
0x703: V467 = 0x20
0x705: V468 = ADD 0x20 V466
0x709: V469 = 0x40
0x70b: V470 = M[0x40]
0x70e: V471 = SUB V468 V470
0x710: RETURN V470 V471
---
Entry stack: [V11, 0x6fb, V775]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6fb]

================================

Block 0x711
[0x711:0x717]
---
Predecessors: [0x6d]
Successors: [0x718, 0x71c]
---
0x711 JUMPDEST
0x712 CALLVALUE
0x713 ISZERO
0x714 PUSH2 0x71c
0x717 JUMPI
---
0x711: JUMPDEST 
0x712: V472 = CALLVALUE
0x713: V473 = ISZERO V472
0x714: V474 = 0x71c
0x717: JUMPI 0x71c V473
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x718
[0x718:0x71b]
---
Predecessors: [0x711]
Successors: []
---
0x718 PUSH1 0x0
0x71a DUP1
0x71b REVERT
---
0x718: V475 = 0x0
0x71b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71c
[0x71c:0x723]
---
Predecessors: [0x711]
Successors: [0xb0c]
---
0x71c JUMPDEST
0x71d PUSH2 0x724
0x720 PUSH2 0xb0c
0x723 JUMP
---
0x71c: JUMPDEST 
0x71d: V476 = 0x724
0x720: V477 = 0xb0c
0x723: JUMP 0xb0c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x724]
Exit stack: [V11, 0x724]

================================

Block 0x724
[0x724:0x739]
---
Predecessors: [0xb0c]
Successors: []
---
0x724 JUMPDEST
0x725 PUSH1 0x40
0x727 MLOAD
0x728 DUP1
0x729 DUP3
0x72a DUP2
0x72b MSTORE
0x72c PUSH1 0x20
0x72e ADD
0x72f SWAP2
0x730 POP
0x731 POP
0x732 PUSH1 0x40
0x734 MLOAD
0x735 DUP1
0x736 SWAP2
0x737 SUB
0x738 SWAP1
0x739 RETURN
---
0x724: JUMPDEST 
0x725: V478 = 0x40
0x727: V479 = M[0x40]
0x72b: M[V479] = V777
0x72c: V480 = 0x20
0x72e: V481 = ADD 0x20 V479
0x732: V482 = 0x40
0x734: V483 = M[0x40]
0x737: V484 = SUB V481 V483
0x739: RETURN V483 V484
---
Entry stack: [V11, 0x724, V777]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x724]

================================

Block 0x73a
[0x73a:0x740]
---
Predecessors: [0x78]
Successors: [0x741, 0x745]
---
0x73a JUMPDEST
0x73b CALLVALUE
0x73c ISZERO
0x73d PUSH2 0x745
0x740 JUMPI
---
0x73a: JUMPDEST 
0x73b: V485 = CALLVALUE
0x73c: V486 = ISZERO V485
0x73d: V487 = 0x745
0x740: JUMPI 0x745 V486
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x741
[0x741:0x744]
---
Predecessors: [0x73a]
Successors: []
---
0x741 PUSH1 0x0
0x743 DUP1
0x744 REVERT
---
0x741: V488 = 0x0
0x744: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x745
[0x745:0x74c]
---
Predecessors: [0x73a]
Successors: [0xb12]
---
0x745 JUMPDEST
0x746 PUSH2 0x74d
0x749 PUSH2 0xb12
0x74c JUMP
---
0x745: JUMPDEST 
0x746: V489 = 0x74d
0x749: V490 = 0xb12
0x74c: JUMP 0xb12
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x74d]
Exit stack: [V11, 0x74d]

================================

Block 0x74d
[0x74d:0x762]
---
Predecessors: [0xb12]
Successors: []
---
0x74d JUMPDEST
0x74e PUSH1 0x40
0x750 MLOAD
0x751 DUP1
0x752 DUP3
0x753 DUP2
0x754 MSTORE
0x755 PUSH1 0x20
0x757 ADD
0x758 SWAP2
0x759 POP
0x75a POP
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP1
0x75f SWAP2
0x760 SUB
0x761 SWAP1
0x762 RETURN
---
0x74d: JUMPDEST 
0x74e: V491 = 0x40
0x750: V492 = M[0x40]
0x754: M[V492] = V779
0x755: V493 = 0x20
0x757: V494 = ADD 0x20 V492
0x75b: V495 = 0x40
0x75d: V496 = M[0x40]
0x760: V497 = SUB V494 V496
0x762: RETURN V496 V497
---
Entry stack: [V11, 0x74d, V779]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x74d]

================================

Block 0x763
[0x763:0x769]
---
Predecessors: [0x83]
Successors: [0x76a, 0x76e]
---
0x763 JUMPDEST
0x764 CALLVALUE
0x765 ISZERO
0x766 PUSH2 0x76e
0x769 JUMPI
---
0x763: JUMPDEST 
0x764: V498 = CALLVALUE
0x765: V499 = ISZERO V498
0x766: V500 = 0x76e
0x769: JUMPI 0x76e V499
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76a
[0x76a:0x76d]
---
Predecessors: [0x763]
Successors: []
---
0x76a PUSH1 0x0
0x76c DUP1
0x76d REVERT
---
0x76a: V501 = 0x0
0x76d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76e
[0x76e:0x799]
---
Predecessors: [0x763]
Successors: [0xb18]
---
0x76e JUMPDEST
0x76f PUSH2 0x79a
0x772 PUSH1 0x4
0x774 DUP1
0x775 DUP1
0x776 CALLDATALOAD
0x777 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78c AND
0x78d SWAP1
0x78e PUSH1 0x20
0x790 ADD
0x791 SWAP1
0x792 SWAP2
0x793 SWAP1
0x794 POP
0x795 POP
0x796 PUSH2 0xb18
0x799 JUMP
---
0x76e: JUMPDEST 
0x76f: V502 = 0x79a
0x772: V503 = 0x4
0x776: V504 = CALLDATALOAD 0x4
0x777: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x78c: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x78e: V507 = 0x20
0x790: V508 = ADD 0x20 0x4
0x796: V509 = 0xb18
0x799: JUMP 0xb18
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x79a, V506]
Exit stack: [V11, 0x79a, V506]

================================

Block 0x79a
[0x79a:0x7af]
---
Predecessors: [0xb18]
Successors: []
---
0x79a JUMPDEST
0x79b PUSH1 0x40
0x79d MLOAD
0x79e DUP1
0x79f DUP3
0x7a0 DUP2
0x7a1 MSTORE
0x7a2 PUSH1 0x20
0x7a4 ADD
0x7a5 SWAP2
0x7a6 POP
0x7a7 POP
0x7a8 PUSH1 0x40
0x7aa MLOAD
0x7ab DUP1
0x7ac SWAP2
0x7ad SUB
0x7ae SWAP1
0x7af RETURN
---
0x79a: JUMPDEST 
0x79b: V510 = 0x40
0x79d: V511 = M[0x40]
0x7a1: M[V511] = V787
0x7a2: V512 = 0x20
0x7a4: V513 = ADD 0x20 V511
0x7a8: V514 = 0x40
0x7aa: V515 = M[0x40]
0x7ad: V516 = SUB V513 V515
0x7af: RETURN V515 V516
---
Entry stack: [V11, 0x79a, V787]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x79a]

================================

Block 0x7b0
[0x7b0:0x7b6]
---
Predecessors: [0x8e]
Successors: [0x7b7, 0x7bb]
---
0x7b0 JUMPDEST
0x7b1 CALLVALUE
0x7b2 ISZERO
0x7b3 PUSH2 0x7bb
0x7b6 JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V517 = CALLVALUE
0x7b2: V518 = ISZERO V517
0x7b3: V519 = 0x7bb
0x7b6: JUMPI 0x7bb V518
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7b7
[0x7b7:0x7ba]
---
Predecessors: [0x7b0]
Successors: []
---
0x7b7 PUSH1 0x0
0x7b9 DUP1
0x7ba REVERT
---
0x7b7: V520 = 0x0
0x7ba: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7bb
[0x7bb:0x7c2]
---
Predecessors: [0x7b0]
Successors: [0xb30]
---
0x7bb JUMPDEST
0x7bc PUSH2 0x7c3
0x7bf PUSH2 0xb30
0x7c2 JUMP
---
0x7bb: JUMPDEST 
0x7bc: V521 = 0x7c3
0x7bf: V522 = 0xb30
0x7c2: JUMP 0xb30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7c3]
Exit stack: [V11, 0x7c3]

================================

Block 0x7c3
[0x7c3:0x7e7]
---
Predecessors: [0xbc6]
Successors: [0x7e8]
---
0x7c3 JUMPDEST
0x7c4 PUSH1 0x40
0x7c6 MLOAD
0x7c7 DUP1
0x7c8 DUP1
0x7c9 PUSH1 0x20
0x7cb ADD
0x7cc DUP3
0x7cd DUP2
0x7ce SUB
0x7cf DUP3
0x7d0 MSTORE
0x7d1 DUP4
0x7d2 DUP2
0x7d3 DUP2
0x7d4 MLOAD
0x7d5 DUP2
0x7d6 MSTORE
0x7d7 PUSH1 0x20
0x7d9 ADD
0x7da SWAP2
0x7db POP
0x7dc DUP1
0x7dd MLOAD
0x7de SWAP1
0x7df PUSH1 0x20
0x7e1 ADD
0x7e2 SWAP1
0x7e3 DUP1
0x7e4 DUP4
0x7e5 DUP4
0x7e6 PUSH1 0x0
---
0x7c3: JUMPDEST 
0x7c4: V523 = 0x40
0x7c6: V524 = M[0x40]
0x7c9: V525 = 0x20
0x7cb: V526 = ADD 0x20 V524
0x7ce: V527 = SUB V526 V524
0x7d0: M[V524] = V527
0x7d4: V528 = M[V808]
0x7d6: M[V526] = V528
0x7d7: V529 = 0x20
0x7d9: V530 = ADD 0x20 V526
0x7dd: V531 = M[V808]
0x7df: V532 = 0x20
0x7e1: V533 = ADD 0x20 V808
0x7e6: V534 = 0x0
---
Entry stack: [V11, 0x7c3, V808]
Stack pops: 1
Stack additions: [S0, V524, V524, V530, V533, V531, V531, V530, V533, 0x0]
Exit stack: [V11, 0x7c3, V808, V524, V524, V530, V533, V531, V531, V530, V533, 0x0]

================================

Block 0x7e8
[0x7e8:0x7f0]
---
Predecessors: [0x7c3, 0x7f1]
Successors: [0x7f1, 0x803]
---
0x7e8 JUMPDEST
0x7e9 DUP4
0x7ea DUP2
0x7eb LT
0x7ec ISZERO
0x7ed PUSH2 0x803
0x7f0 JUMPI
---
0x7e8: JUMPDEST 
0x7eb: V535 = LT S0 V531
0x7ec: V536 = ISZERO V535
0x7ed: V537 = 0x803
0x7f0: JUMPI 0x803 V536
---
Entry stack: [V11, 0x7c3, V808, V524, V524, V530, V533, V531, V531, V530, V533, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x7c3, V808, V524, V524, V530, V533, V531, V531, V530, V533, S0]

================================

Block 0x7f1
[0x7f1:0x802]
---
Predecessors: [0x7e8]
Successors: [0x7e8]
---
0x7f1 DUP1
0x7f2 DUP3
0x7f3 ADD
0x7f4 MLOAD
0x7f5 DUP2
0x7f6 DUP5
0x7f7 ADD
0x7f8 MSTORE
0x7f9 PUSH1 0x20
0x7fb DUP2
0x7fc ADD
0x7fd SWAP1
0x7fe POP
0x7ff PUSH2 0x7e8
0x802 JUMP
---
0x7f3: V538 = ADD V533 S0
0x7f4: V539 = M[V538]
0x7f7: V540 = ADD V530 S0
0x7f8: M[V540] = V539
0x7f9: V541 = 0x20
0x7fc: V542 = ADD S0 0x20
0x7ff: V543 = 0x7e8
0x802: JUMP 0x7e8
---
Entry stack: [V11, 0x7c3, V808, V524, V524, V530, V533, V531, V531, V530, V533, S0]
Stack pops: 3
Stack additions: [S2, S1, V542]
Exit stack: [V11, 0x7c3, V808, V524, V524, V530, V533, V531, V531, V530, V533, V542]

================================

Block 0x803
[0x803:0x816]
---
Predecessors: [0x7e8]
Successors: [0x817, 0x830]
---
0x803 JUMPDEST
0x804 POP
0x805 POP
0x806 POP
0x807 POP
0x808 SWAP1
0x809 POP
0x80a SWAP1
0x80b DUP2
0x80c ADD
0x80d SWAP1
0x80e PUSH1 0x1f
0x810 AND
0x811 DUP1
0x812 ISZERO
0x813 PUSH2 0x830
0x816 JUMPI
---
0x803: JUMPDEST 
0x80c: V544 = ADD V531 V530
0x80e: V545 = 0x1f
0x810: V546 = AND 0x1f V531
0x812: V547 = ISZERO V546
0x813: V548 = 0x830
0x816: JUMPI 0x830 V547
---
Entry stack: [V11, 0x7c3, V808, V524, V524, V530, V533, V531, V531, V530, V533, S0]
Stack pops: 7
Stack additions: [V544, V546]
Exit stack: [V11, 0x7c3, V808, V524, V524, V544, V546]

================================

Block 0x817
[0x817:0x82f]
---
Predecessors: [0x803]
Successors: [0x830]
---
0x817 DUP1
0x818 DUP3
0x819 SUB
0x81a DUP1
0x81b MLOAD
0x81c PUSH1 0x1
0x81e DUP4
0x81f PUSH1 0x20
0x821 SUB
0x822 PUSH2 0x100
0x825 EXP
0x826 SUB
0x827 NOT
0x828 AND
0x829 DUP2
0x82a MSTORE
0x82b PUSH1 0x20
0x82d ADD
0x82e SWAP2
0x82f POP
---
0x819: V549 = SUB V544 V546
0x81b: V550 = M[V549]
0x81c: V551 = 0x1
0x81f: V552 = 0x20
0x821: V553 = SUB 0x20 V546
0x822: V554 = 0x100
0x825: V555 = EXP 0x100 V553
0x826: V556 = SUB V555 0x1
0x827: V557 = NOT V556
0x828: V558 = AND V557 V550
0x82a: M[V549] = V558
0x82b: V559 = 0x20
0x82d: V560 = ADD 0x20 V549
---
Entry stack: [V11, 0x7c3, V808, V524, V524, V544, V546]
Stack pops: 2
Stack additions: [V560, S0]
Exit stack: [V11, 0x7c3, V808, V524, V524, V560, V546]

================================

Block 0x830
[0x830:0x83d]
---
Predecessors: [0x803, 0x817]
Successors: []
---
0x830 JUMPDEST
0x831 POP
0x832 SWAP3
0x833 POP
0x834 POP
0x835 POP
0x836 PUSH1 0x40
0x838 MLOAD
0x839 DUP1
0x83a SWAP2
0x83b SUB
0x83c SWAP1
0x83d RETURN
---
0x830: JUMPDEST 
0x836: V561 = 0x40
0x838: V562 = M[0x40]
0x83b: V563 = SUB S1 V562
0x83d: RETURN V562 V563
---
Entry stack: [V11, 0x7c3, V808, V524, V524, S1, V546]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x7c3]

================================

Block 0x83e
[0x83e:0x844]
---
Predecessors: [0x99]
Successors: [0x845, 0x849]
---
0x83e JUMPDEST
0x83f CALLVALUE
0x840 ISZERO
0x841 PUSH2 0x849
0x844 JUMPI
---
0x83e: JUMPDEST 
0x83f: V564 = CALLVALUE
0x840: V565 = ISZERO V564
0x841: V566 = 0x849
0x844: JUMPI 0x849 V565
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x845
[0x845:0x848]
---
Predecessors: [0x83e]
Successors: []
---
0x845 PUSH1 0x0
0x847 DUP1
0x848 REVERT
---
0x845: V567 = 0x0
0x848: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x849
[0x849:0x850]
---
Predecessors: [0x83e]
Successors: [0xbce]
---
0x849 JUMPDEST
0x84a PUSH2 0x851
0x84d PUSH2 0xbce
0x850 JUMP
---
0x849: JUMPDEST 
0x84a: V568 = 0x851
0x84d: V569 = 0xbce
0x850: JUMP 0xbce
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x851]
Exit stack: [V11, 0x851]

================================

Block 0x851
[0x851:0x86a]
---
Predecessors: [0xbce]
Successors: []
---
0x851 JUMPDEST
0x852 PUSH1 0x40
0x854 MLOAD
0x855 DUP1
0x856 DUP3
0x857 ISZERO
0x858 ISZERO
0x859 ISZERO
0x85a ISZERO
0x85b DUP2
0x85c MSTORE
0x85d PUSH1 0x20
0x85f ADD
0x860 SWAP2
0x861 POP
0x862 POP
0x863 PUSH1 0x40
0x865 MLOAD
0x866 DUP1
0x867 SWAP2
0x868 SUB
0x869 SWAP1
0x86a RETURN
---
0x851: JUMPDEST 
0x852: V570 = 0x40
0x854: V571 = M[0x40]
0x857: V572 = ISZERO V859
0x858: V573 = ISZERO V572
0x859: V574 = ISZERO V573
0x85a: V575 = ISZERO V574
0x85c: M[V571] = V575
0x85d: V576 = 0x20
0x85f: V577 = ADD 0x20 V571
0x863: V578 = 0x40
0x865: V579 = M[0x40]
0x868: V580 = SUB V577 V579
0x86a: RETURN V579 V580
---
Entry stack: [V11, 0x851, V859]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x851]

================================

Block 0x86b
[0x86b:0x871]
---
Predecessors: [0xa4]
Successors: [0x872, 0x876]
---
0x86b JUMPDEST
0x86c CALLVALUE
0x86d ISZERO
0x86e PUSH2 0x876
0x871 JUMPI
---
0x86b: JUMPDEST 
0x86c: V581 = CALLVALUE
0x86d: V582 = ISZERO V581
0x86e: V583 = 0x876
0x871: JUMPI 0x876 V582
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x872
[0x872:0x875]
---
Predecessors: [0x86b]
Successors: []
---
0x872 PUSH1 0x0
0x874 DUP1
0x875 REVERT
---
0x872: V584 = 0x0
0x875: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x876
[0x876:0x87d]
---
Predecessors: [0x86b]
Successors: [0xbe1]
---
0x876 JUMPDEST
0x877 PUSH2 0x87e
0x87a PUSH2 0xbe1
0x87d JUMP
---
0x876: JUMPDEST 
0x877: V585 = 0x87e
0x87a: V586 = 0xbe1
0x87d: JUMP 0xbe1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x87e]
Exit stack: [V11, 0x87e]

================================

Block 0x87e
[0x87e:0x893]
---
Predecessors: [0xbe1]
Successors: []
---
0x87e JUMPDEST
0x87f PUSH1 0x40
0x881 MLOAD
0x882 DUP1
0x883 DUP3
0x884 DUP2
0x885 MSTORE
0x886 PUSH1 0x20
0x888 ADD
0x889 SWAP2
0x88a POP
0x88b POP
0x88c PUSH1 0x40
0x88e MLOAD
0x88f DUP1
0x890 SWAP2
0x891 SUB
0x892 SWAP1
0x893 RETURN
---
0x87e: JUMPDEST 
0x87f: V587 = 0x40
0x881: V588 = M[0x40]
0x885: M[V588] = V861
0x886: V589 = 0x20
0x888: V590 = ADD 0x20 V588
0x88c: V591 = 0x40
0x88e: V592 = M[0x40]
0x891: V593 = SUB V590 V592
0x893: RETURN V592 V593
---
Entry stack: [V11, 0x87e, V861]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x87e]

================================

Block 0x894
[0x894:0x89a]
---
Predecessors: [0xaf]
Successors: [0x89b, 0x89f]
---
0x894 JUMPDEST
0x895 CALLVALUE
0x896 ISZERO
0x897 PUSH2 0x89f
0x89a JUMPI
---
0x894: JUMPDEST 
0x895: V594 = CALLVALUE
0x896: V595 = ISZERO V594
0x897: V596 = 0x89f
0x89a: JUMPI 0x89f V595
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x89b
[0x89b:0x89e]
---
Predecessors: [0x894]
Successors: []
---
0x89b PUSH1 0x0
0x89d DUP1
0x89e REVERT
---
0x89b: V597 = 0x0
0x89e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x89f
[0x89f:0x8d3]
---
Predecessors: [0x894]
Successors: [0xbe7]
---
0x89f JUMPDEST
0x8a0 PUSH2 0x8d4
0x8a3 PUSH1 0x4
0x8a5 DUP1
0x8a6 DUP1
0x8a7 CALLDATALOAD
0x8a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bd AND
0x8be SWAP1
0x8bf PUSH1 0x20
0x8c1 ADD
0x8c2 SWAP1
0x8c3 SWAP2
0x8c4 SWAP1
0x8c5 DUP1
0x8c6 CALLDATALOAD
0x8c7 SWAP1
0x8c8 PUSH1 0x20
0x8ca ADD
0x8cb SWAP1
0x8cc SWAP2
0x8cd SWAP1
0x8ce POP
0x8cf POP
0x8d0 PUSH2 0xbe7
0x8d3 JUMP
---
0x89f: JUMPDEST 
0x8a0: V598 = 0x8d4
0x8a3: V599 = 0x4
0x8a7: V600 = CALLDATALOAD 0x4
0x8a8: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bd: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x8bf: V603 = 0x20
0x8c1: V604 = ADD 0x20 0x4
0x8c6: V605 = CALLDATALOAD 0x24
0x8c8: V606 = 0x20
0x8ca: V607 = ADD 0x20 0x24
0x8d0: V608 = 0xbe7
0x8d3: JUMP 0xbe7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d4, V602, V605]
Exit stack: [V11, 0x8d4, V602, V605]

================================

Block 0x8d4
[0x8d4:0x8d5]
---
Predecessors: [0xf32]
Successors: []
---
0x8d4 JUMPDEST
0x8d5 STOP
---
0x8d4: JUMPDEST 
0x8d5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d6
[0x8d6:0x8dc]
---
Predecessors: [0xba]
Successors: [0x8dd, 0x8e1]
---
0x8d6 JUMPDEST
0x8d7 CALLVALUE
0x8d8 ISZERO
0x8d9 PUSH2 0x8e1
0x8dc JUMPI
---
0x8d6: JUMPDEST 
0x8d7: V609 = CALLVALUE
0x8d8: V610 = ISZERO V609
0x8d9: V611 = 0x8e1
0x8dc: JUMPI 0x8e1 V610
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8dd
[0x8dd:0x8e0]
---
Predecessors: [0x8d6]
Successors: []
---
0x8dd PUSH1 0x0
0x8df DUP1
0x8e0 REVERT
---
0x8dd: V612 = 0x0
0x8e0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8e1
[0x8e1:0x8e8]
---
Predecessors: [0x8d6]
Successors: [0xf37]
---
0x8e1 JUMPDEST
0x8e2 PUSH2 0x8e9
0x8e5 PUSH2 0xf37
0x8e8 JUMP
---
0x8e1: JUMPDEST 
0x8e2: V613 = 0x8e9
0x8e5: V614 = 0xf37
0x8e8: JUMP 0xf37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8e9]
Exit stack: [V11, 0x8e9]

================================

Block 0x8e9
[0x8e9:0x8fe]
---
Predecessors: [0xf37]
Successors: []
---
0x8e9 JUMPDEST
0x8ea PUSH1 0x40
0x8ec MLOAD
0x8ed DUP1
0x8ee DUP3
0x8ef DUP2
0x8f0 MSTORE
0x8f1 PUSH1 0x20
0x8f3 ADD
0x8f4 SWAP2
0x8f5 POP
0x8f6 POP
0x8f7 PUSH1 0x40
0x8f9 MLOAD
0x8fa DUP1
0x8fb SWAP2
0x8fc SUB
0x8fd SWAP1
0x8fe RETURN
---
0x8e9: JUMPDEST 
0x8ea: V615 = 0x40
0x8ec: V616 = M[0x40]
0x8f0: M[V616] = V1039
0x8f1: V617 = 0x20
0x8f3: V618 = ADD 0x20 V616
0x8f7: V619 = 0x40
0x8f9: V620 = M[0x40]
0x8fc: V621 = SUB V618 V620
0x8fe: RETURN V620 V621
---
Entry stack: [V11, 0x8e9, V1039]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8e9]

================================

Block 0x8ff
[0x8ff:0x905]
---
Predecessors: [0xc5]
Successors: [0x906, 0x90a]
---
0x8ff JUMPDEST
0x900 CALLVALUE
0x901 ISZERO
0x902 PUSH2 0x90a
0x905 JUMPI
---
0x8ff: JUMPDEST 
0x900: V622 = CALLVALUE
0x901: V623 = ISZERO V622
0x902: V624 = 0x90a
0x905: JUMPI 0x90a V623
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x906
[0x906:0x909]
---
Predecessors: [0x8ff]
Successors: []
---
0x906 PUSH1 0x0
0x908 DUP1
0x909 REVERT
---
0x906: V625 = 0x0
0x909: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90a
[0x90a:0x911]
---
Predecessors: [0x8ff]
Successors: [0xf3d]
---
0x90a JUMPDEST
0x90b PUSH2 0x912
0x90e PUSH2 0xf3d
0x911 JUMP
---
0x90a: JUMPDEST 
0x90b: V626 = 0x912
0x90e: V627 = 0xf3d
0x911: JUMP 0xf3d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x912]
Exit stack: [V11, 0x912]

================================

Block 0x912
[0x912:0x927]
---
Predecessors: [0xf3d]
Successors: []
---
0x912 JUMPDEST
0x913 PUSH1 0x40
0x915 MLOAD
0x916 DUP1
0x917 DUP3
0x918 DUP2
0x919 MSTORE
0x91a PUSH1 0x20
0x91c ADD
0x91d SWAP2
0x91e POP
0x91f POP
0x920 PUSH1 0x40
0x922 MLOAD
0x923 DUP1
0x924 SWAP2
0x925 SUB
0x926 SWAP1
0x927 RETURN
---
0x912: JUMPDEST 
0x913: V628 = 0x40
0x915: V629 = M[0x40]
0x919: M[V629] = V1041
0x91a: V630 = 0x20
0x91c: V631 = ADD 0x20 V629
0x920: V632 = 0x40
0x922: V633 = M[0x40]
0x925: V634 = SUB V631 V633
0x927: RETURN V633 V634
---
Entry stack: [V11, 0x912, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x912]

================================

Block 0x928
[0x928:0x94d]
---
Predecessors: [0x5a8]
Successors: [0x5b0]
---
0x928 JUMPDEST
0x929 PUSH1 0x4
0x92b PUSH1 0x0
0x92d SWAP1
0x92e SLOAD
0x92f SWAP1
0x930 PUSH2 0x100
0x933 EXP
0x934 SWAP1
0x935 DIV
0x936 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94b AND
0x94c DUP2
0x94d JUMP
---
0x928: JUMPDEST 
0x929: V635 = 0x4
0x92b: V636 = 0x0
0x92e: V637 = S[0x4]
0x930: V638 = 0x100
0x933: V639 = EXP 0x100 0x0
0x935: V640 = DIV V637 0x1
0x936: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0x94b: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x94d: JUMP 0x5b0
---
Entry stack: [V11, 0x5b0]
Stack pops: 1
Stack additions: [S0, V642]
Exit stack: [V11, 0x5b0, V642]

================================

Block 0x94e
[0x94e:0x96d]
---
Predecessors: [0x5fd]
Successors: [0x629]
---
0x94e JUMPDEST
0x94f PUSH1 0xa
0x951 PUSH1 0x20
0x953 MSTORE
0x954 DUP1
0x955 PUSH1 0x0
0x957 MSTORE
0x958 PUSH1 0x40
0x95a PUSH1 0x0
0x95c SHA3
0x95d PUSH1 0x0
0x95f SWAP2
0x960 POP
0x961 SLOAD
0x962 SWAP1
0x963 PUSH2 0x100
0x966 EXP
0x967 SWAP1
0x968 DIV
0x969 PUSH1 0xff
0x96b AND
0x96c DUP2
0x96d JUMP
---
0x94e: JUMPDEST 
0x94f: V643 = 0xa
0x951: V644 = 0x20
0x953: M[0x20] = 0xa
0x955: V645 = 0x0
0x957: M[0x0] = V391
0x958: V646 = 0x40
0x95a: V647 = 0x0
0x95c: V648 = SHA3 0x0 0x40
0x95d: V649 = 0x0
0x961: V650 = S[V648]
0x963: V651 = 0x100
0x966: V652 = EXP 0x100 0x0
0x968: V653 = DIV V650 0x1
0x969: V654 = 0xff
0x96b: V655 = AND 0xff V653
0x96d: JUMP 0x629
---
Entry stack: [V11, 0x629, V391]
Stack pops: 2
Stack additions: [S1, V655]
Exit stack: [V11, 0x629, V655]

================================

Block 0x96e
[0x96e:0x9bd]
---
Predecessors: [0x650]
Successors: [0x9be, 0xa04]
---
0x96e JUMPDEST
0x96f PUSH1 0x0
0x971 DUP1
0x972 SLOAD
0x973 PUSH1 0x1
0x975 DUP2
0x976 PUSH1 0x1
0x978 AND
0x979 ISZERO
0x97a PUSH2 0x100
0x97d MUL
0x97e SUB
0x97f AND
0x980 PUSH1 0x2
0x982 SWAP1
0x983 DIV
0x984 DUP1
0x985 PUSH1 0x1f
0x987 ADD
0x988 PUSH1 0x20
0x98a DUP1
0x98b SWAP2
0x98c DIV
0x98d MUL
0x98e PUSH1 0x20
0x990 ADD
0x991 PUSH1 0x40
0x993 MLOAD
0x994 SWAP1
0x995 DUP2
0x996 ADD
0x997 PUSH1 0x40
0x999 MSTORE
0x99a DUP1
0x99b SWAP3
0x99c SWAP2
0x99d SWAP1
0x99e DUP2
0x99f DUP2
0x9a0 MSTORE
0x9a1 PUSH1 0x20
0x9a3 ADD
0x9a4 DUP3
0x9a5 DUP1
0x9a6 SLOAD
0x9a7 PUSH1 0x1
0x9a9 DUP2
0x9aa PUSH1 0x1
0x9ac AND
0x9ad ISZERO
0x9ae PUSH2 0x100
0x9b1 MUL
0x9b2 SUB
0x9b3 AND
0x9b4 PUSH1 0x2
0x9b6 SWAP1
0x9b7 DIV
0x9b8 DUP1
0x9b9 ISZERO
0x9ba PUSH2 0xa04
0x9bd JUMPI
---
0x96e: JUMPDEST 
0x96f: V656 = 0x0
0x972: V657 = S[0x0]
0x973: V658 = 0x1
0x976: V659 = 0x1
0x978: V660 = AND 0x1 V657
0x979: V661 = ISZERO V660
0x97a: V662 = 0x100
0x97d: V663 = MUL 0x100 V661
0x97e: V664 = SUB V663 0x1
0x97f: V665 = AND V664 V657
0x980: V666 = 0x2
0x983: V667 = DIV V665 0x2
0x985: V668 = 0x1f
0x987: V669 = ADD 0x1f V667
0x988: V670 = 0x20
0x98c: V671 = DIV V669 0x20
0x98d: V672 = MUL V671 0x20
0x98e: V673 = 0x20
0x990: V674 = ADD 0x20 V672
0x991: V675 = 0x40
0x993: V676 = M[0x40]
0x996: V677 = ADD V676 V674
0x997: V678 = 0x40
0x999: M[0x40] = V677
0x9a0: M[V676] = V667
0x9a1: V679 = 0x20
0x9a3: V680 = ADD 0x20 V676
0x9a6: V681 = S[0x0]
0x9a7: V682 = 0x1
0x9aa: V683 = 0x1
0x9ac: V684 = AND 0x1 V681
0x9ad: V685 = ISZERO V684
0x9ae: V686 = 0x100
0x9b1: V687 = MUL 0x100 V685
0x9b2: V688 = SUB V687 0x1
0x9b3: V689 = AND V688 V681
0x9b4: V690 = 0x2
0x9b7: V691 = DIV V689 0x2
0x9b9: V692 = ISZERO V691
0x9ba: V693 = 0xa04
0x9bd: JUMPI 0xa04 V692
---
Entry stack: [V11, 0x658]
Stack pops: 0
Stack additions: [V676, 0x0, V667, V680, 0x0, V691]
Exit stack: [V11, 0x658, V676, 0x0, V667, V680, 0x0, V691]

================================

Block 0x9be
[0x9be:0x9c5]
---
Predecessors: [0x96e]
Successors: [0x9c6, 0x9d9]
---
0x9be DUP1
0x9bf PUSH1 0x1f
0x9c1 LT
0x9c2 PUSH2 0x9d9
0x9c5 JUMPI
---
0x9bf: V694 = 0x1f
0x9c1: V695 = LT 0x1f V691
0x9c2: V696 = 0x9d9
0x9c5: JUMPI 0x9d9 V695
---
Entry stack: [V11, 0x658, V676, 0x0, V667, V680, 0x0, V691]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x658, V676, 0x0, V667, V680, 0x0, V691]

================================

Block 0x9c6
[0x9c6:0x9d8]
---
Predecessors: [0x9be]
Successors: [0xa04]
---
0x9c6 PUSH2 0x100
0x9c9 DUP1
0x9ca DUP4
0x9cb SLOAD
0x9cc DIV
0x9cd MUL
0x9ce DUP4
0x9cf MSTORE
0x9d0 SWAP2
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 SWAP2
0x9d5 PUSH2 0xa04
0x9d8 JUMP
---
0x9c6: V697 = 0x100
0x9cb: V698 = S[0x0]
0x9cc: V699 = DIV V698 0x100
0x9cd: V700 = MUL V699 0x100
0x9cf: M[V680] = V700
0x9d1: V701 = 0x20
0x9d3: V702 = ADD 0x20 V680
0x9d5: V703 = 0xa04
0x9d8: JUMP 0xa04
---
Entry stack: [V11, 0x658, V676, 0x0, V667, V680, 0x0, V691]
Stack pops: 3
Stack additions: [V702, S1, S0]
Exit stack: [V11, 0x658, V676, 0x0, V667, V702, 0x0, V691]

================================

Block 0x9d9
[0x9d9:0x9e6]
---
Predecessors: [0x9be]
Successors: [0x9e7]
---
0x9d9 JUMPDEST
0x9da DUP3
0x9db ADD
0x9dc SWAP2
0x9dd SWAP1
0x9de PUSH1 0x0
0x9e0 MSTORE
0x9e1 PUSH1 0x20
0x9e3 PUSH1 0x0
0x9e5 SHA3
0x9e6 SWAP1
---
0x9d9: JUMPDEST 
0x9db: V704 = ADD V680 V691
0x9de: V705 = 0x0
0x9e0: M[0x0] = 0x0
0x9e1: V706 = 0x20
0x9e3: V707 = 0x0
0x9e5: V708 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x658, V676, 0x0, V667, V680, 0x0, V691]
Stack pops: 3
Stack additions: [V704, V708, S2]
Exit stack: [V11, 0x658, V676, 0x0, V667, V704, V708, V680]

================================

Block 0x9e7
[0x9e7:0x9fa]
---
Predecessors: [0x9d9, 0x9e7]
Successors: [0x9e7, 0x9fb]
---
0x9e7 JUMPDEST
0x9e8 DUP2
0x9e9 SLOAD
0x9ea DUP2
0x9eb MSTORE
0x9ec SWAP1
0x9ed PUSH1 0x1
0x9ef ADD
0x9f0 SWAP1
0x9f1 PUSH1 0x20
0x9f3 ADD
0x9f4 DUP1
0x9f5 DUP4
0x9f6 GT
0x9f7 PUSH2 0x9e7
0x9fa JUMPI
---
0x9e7: JUMPDEST 
0x9e9: V709 = S[S1]
0x9eb: M[S0] = V709
0x9ed: V710 = 0x1
0x9ef: V711 = ADD 0x1 S1
0x9f1: V712 = 0x20
0x9f3: V713 = ADD 0x20 S0
0x9f6: V714 = GT V704 V713
0x9f7: V715 = 0x9e7
0x9fa: JUMPI 0x9e7 V714
---
Entry stack: [V11, 0x658, V676, 0x0, V667, V704, S1, S0]
Stack pops: 3
Stack additions: [S2, V711, V713]
Exit stack: [V11, 0x658, V676, 0x0, V667, V704, V711, V713]

================================

Block 0x9fb
[0x9fb:0xa03]
---
Predecessors: [0x9e7]
Successors: [0xa04]
---
0x9fb DUP3
0x9fc SWAP1
0x9fd SUB
0x9fe PUSH1 0x1f
0xa00 AND
0xa01 DUP3
0xa02 ADD
0xa03 SWAP2
---
0x9fd: V716 = SUB V713 V704
0x9fe: V717 = 0x1f
0xa00: V718 = AND 0x1f V716
0xa02: V719 = ADD V704 V718
---
Entry stack: [V11, 0x658, V676, 0x0, V667, V704, V711, V713]
Stack pops: 3
Stack additions: [V719, S1, S2]
Exit stack: [V11, 0x658, V676, 0x0, V667, V719, V711, V704]

================================

Block 0xa04
[0xa04:0xa0b]
---
Predecessors: [0x96e, 0x9c6, 0x9fb]
Successors: [0x658]
---
0xa04 JUMPDEST
0xa05 POP
0xa06 POP
0xa07 POP
0xa08 POP
0xa09 POP
0xa0a DUP2
0xa0b JUMP
---
0xa04: JUMPDEST 
0xa0b: JUMP 0x658
---
Entry stack: [V11, 0x658, V676, 0x0, V667, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x658, V676]

================================

Block 0xa0c
[0xa0c:0xa2d]
---
Predecessors: [0x6de]
Successors: [0xa2e, 0xa80]
---
0xa0c JUMPDEST
0xa0d PUSH1 0x0
0xa0f ADDRESS
0xa10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa25 AND
0xa26 BALANCE
0xa27 GT
0xa28 DUP1
0xa29 ISZERO
0xa2a PUSH2 0xa80
0xa2d JUMPI
---
0xa0c: JUMPDEST 
0xa0d: V720 = 0x0
0xa0f: V721 = ADDRESS
0xa10: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xa25: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0xa26: V724 = BALANCE V723
0xa27: V725 = GT V724 0x0
0xa29: V726 = ISZERO V725
0xa2a: V727 = 0xa80
0xa2d: JUMPI 0xa80 V726
---
Entry stack: [V11, 0x6e6]
Stack pops: 0
Stack additions: [V725]
Exit stack: [V11, 0x6e6, V725]

================================

Block 0xa2e
[0xa2e:0xa7f]
---
Predecessors: [0xa0c]
Successors: [0xa80]
---
0xa2e POP
0xa2f PUSH1 0x4
0xa31 PUSH1 0x0
0xa33 SWAP1
0xa34 SLOAD
0xa35 SWAP1
0xa36 PUSH2 0x100
0xa39 EXP
0xa3a SWAP1
0xa3b DIV
0xa3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa51 AND
0xa52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa67 AND
0xa68 CALLER
0xa69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7e AND
0xa7f EQ
---
0xa2f: V728 = 0x4
0xa31: V729 = 0x0
0xa34: V730 = S[0x4]
0xa36: V731 = 0x100
0xa39: V732 = EXP 0x100 0x0
0xa3b: V733 = DIV V730 0x1
0xa3c: V734 = 0xffffffffffffffffffffffffffffffffffffffff
0xa51: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0xa52: V736 = 0xffffffffffffffffffffffffffffffffffffffff
0xa67: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V735
0xa68: V738 = CALLER
0xa69: V739 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7e: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xa7f: V741 = EQ V740 V737
---
Entry stack: [V11, 0x6e6, V725]
Stack pops: 1
Stack additions: [V741]
Exit stack: [V11, 0x6e6, V741]

================================

Block 0xa80
[0xa80:0xa86]
---
Predecessors: [0xa0c, 0xa2e]
Successors: [0xa87, 0xa8b]
---
0xa80 JUMPDEST
0xa81 ISZERO
0xa82 ISZERO
0xa83 PUSH2 0xa8b
0xa86 JUMPI
---
0xa80: JUMPDEST 
0xa81: V742 = ISZERO S0
0xa82: V743 = ISZERO V742
0xa83: V744 = 0xa8b
0xa86: JUMPI 0xa8b V743
---
Entry stack: [V11, 0x6e6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6e6]

================================

Block 0xa87
[0xa87:0xa8a]
---
Predecessors: [0xa80]
Successors: []
---
0xa87 PUSH1 0x0
0xa89 DUP1
0xa8a REVERT
---
0xa87: V745 = 0x0
0xa8a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e6]

================================

Block 0xa8b
[0xa8b:0xaff]
---
Predecessors: [0xa80]
Successors: [0xb00, 0xb04]
---
0xa8b JUMPDEST
0xa8c PUSH1 0x4
0xa8e PUSH1 0x0
0xa90 SWAP1
0xa91 SLOAD
0xa92 SWAP1
0xa93 PUSH2 0x100
0xa96 EXP
0xa97 SWAP1
0xa98 DIV
0xa99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaae AND
0xaaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac4 AND
0xac5 PUSH2 0x8fc
0xac8 ADDRESS
0xac9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xade AND
0xadf BALANCE
0xae0 SWAP1
0xae1 DUP2
0xae2 ISZERO
0xae3 MUL
0xae4 SWAP1
0xae5 PUSH1 0x40
0xae7 MLOAD
0xae8 PUSH1 0x0
0xaea PUSH1 0x40
0xaec MLOAD
0xaed DUP1
0xaee DUP4
0xaef SUB
0xaf0 DUP2
0xaf1 DUP6
0xaf2 DUP9
0xaf3 DUP9
0xaf4 CALL
0xaf5 SWAP4
0xaf6 POP
0xaf7 POP
0xaf8 POP
0xaf9 POP
0xafa ISZERO
0xafb ISZERO
0xafc PUSH2 0xb04
0xaff JUMPI
---
0xa8b: JUMPDEST 
0xa8c: V746 = 0x4
0xa8e: V747 = 0x0
0xa91: V748 = S[0x4]
0xa93: V749 = 0x100
0xa96: V750 = EXP 0x100 0x0
0xa98: V751 = DIV V748 0x1
0xa99: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xaae: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xaaf: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xac4: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0xac5: V756 = 0x8fc
0xac8: V757 = ADDRESS
0xac9: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xade: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xadf: V760 = BALANCE V759
0xae2: V761 = ISZERO V760
0xae3: V762 = MUL V761 0x8fc
0xae5: V763 = 0x40
0xae7: V764 = M[0x40]
0xae8: V765 = 0x0
0xaea: V766 = 0x40
0xaec: V767 = M[0x40]
0xaef: V768 = SUB V764 V767
0xaf4: V769 = CALL V762 V755 V760 V767 V768 V767 0x0
0xafa: V770 = ISZERO V769
0xafb: V771 = ISZERO V770
0xafc: V772 = 0xb04
0xaff: JUMPI 0xb04 V771
---
Entry stack: [V11, 0x6e6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e6]

================================

Block 0xb00
[0xb00:0xb03]
---
Predecessors: [0xa8b]
Successors: []
---
0xb00 PUSH1 0x0
0xb02 DUP1
0xb03 REVERT
---
0xb00: V773 = 0x0
0xb03: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e6]

================================

Block 0xb04
[0xb04:0xb05]
---
Predecessors: [0xa8b]
Successors: [0x6e6]
---
0xb04 JUMPDEST
0xb05 JUMP
---
0xb04: JUMPDEST 
0xb05: JUMP 0x6e6
---
Entry stack: [V11, 0x6e6]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xb06
[0xb06:0xb0b]
---
Predecessors: [0x6f3]
Successors: [0x6fb]
---
0xb06 JUMPDEST
0xb07 PUSH1 0x3
0xb09 SLOAD
0xb0a DUP2
0xb0b JUMP
---
0xb06: JUMPDEST 
0xb07: V774 = 0x3
0xb09: V775 = S[0x3]
0xb0b: JUMP 0x6fb
---
Entry stack: [V11, 0x6fb]
Stack pops: 1
Stack additions: [S0, V775]
Exit stack: [V11, 0x6fb, V775]

================================

Block 0xb0c
[0xb0c:0xb11]
---
Predecessors: [0x71c]
Successors: [0x724]
---
0xb0c JUMPDEST
0xb0d PUSH1 0x7
0xb0f SLOAD
0xb10 DUP2
0xb11 JUMP
---
0xb0c: JUMPDEST 
0xb0d: V776 = 0x7
0xb0f: V777 = S[0x7]
0xb11: JUMP 0x724
---
Entry stack: [V11, 0x724]
Stack pops: 1
Stack additions: [S0, V777]
Exit stack: [V11, 0x724, V777]

================================

Block 0xb12
[0xb12:0xb17]
---
Predecessors: [0x745]
Successors: [0x74d]
---
0xb12 JUMPDEST
0xb13 PUSH1 0x2
0xb15 SLOAD
0xb16 DUP2
0xb17 JUMP
---
0xb12: JUMPDEST 
0xb13: V778 = 0x2
0xb15: V779 = S[0x2]
0xb17: JUMP 0x74d
---
Entry stack: [V11, 0x74d]
Stack pops: 1
Stack additions: [S0, V779]
Exit stack: [V11, 0x74d, V779]

================================

Block 0xb18
[0xb18:0xb2f]
---
Predecessors: [0x76e]
Successors: [0x79a]
---
0xb18 JUMPDEST
0xb19 PUSH1 0x9
0xb1b PUSH1 0x20
0xb1d MSTORE
0xb1e DUP1
0xb1f PUSH1 0x0
0xb21 MSTORE
0xb22 PUSH1 0x40
0xb24 PUSH1 0x0
0xb26 SHA3
0xb27 PUSH1 0x0
0xb29 SWAP2
0xb2a POP
0xb2b SWAP1
0xb2c POP
0xb2d SLOAD
0xb2e DUP2
0xb2f JUMP
---
0xb18: JUMPDEST 
0xb19: V780 = 0x9
0xb1b: V781 = 0x20
0xb1d: M[0x20] = 0x9
0xb1f: V782 = 0x0
0xb21: M[0x0] = V506
0xb22: V783 = 0x40
0xb24: V784 = 0x0
0xb26: V785 = SHA3 0x0 0x40
0xb27: V786 = 0x0
0xb2d: V787 = S[V785]
0xb2f: JUMP 0x79a
---
Entry stack: [V11, 0x79a, V506]
Stack pops: 2
Stack additions: [S1, V787]
Exit stack: [V11, 0x79a, V787]

================================

Block 0xb30
[0xb30:0xb7f]
---
Predecessors: [0x7bb]
Successors: [0xb80, 0xbc6]
---
0xb30 JUMPDEST
0xb31 PUSH1 0x1
0xb33 DUP1
0xb34 SLOAD
0xb35 PUSH1 0x1
0xb37 DUP2
0xb38 PUSH1 0x1
0xb3a AND
0xb3b ISZERO
0xb3c PUSH2 0x100
0xb3f MUL
0xb40 SUB
0xb41 AND
0xb42 PUSH1 0x2
0xb44 SWAP1
0xb45 DIV
0xb46 DUP1
0xb47 PUSH1 0x1f
0xb49 ADD
0xb4a PUSH1 0x20
0xb4c DUP1
0xb4d SWAP2
0xb4e DIV
0xb4f MUL
0xb50 PUSH1 0x20
0xb52 ADD
0xb53 PUSH1 0x40
0xb55 MLOAD
0xb56 SWAP1
0xb57 DUP2
0xb58 ADD
0xb59 PUSH1 0x40
0xb5b MSTORE
0xb5c DUP1
0xb5d SWAP3
0xb5e SWAP2
0xb5f SWAP1
0xb60 DUP2
0xb61 DUP2
0xb62 MSTORE
0xb63 PUSH1 0x20
0xb65 ADD
0xb66 DUP3
0xb67 DUP1
0xb68 SLOAD
0xb69 PUSH1 0x1
0xb6b DUP2
0xb6c PUSH1 0x1
0xb6e AND
0xb6f ISZERO
0xb70 PUSH2 0x100
0xb73 MUL
0xb74 SUB
0xb75 AND
0xb76 PUSH1 0x2
0xb78 SWAP1
0xb79 DIV
0xb7a DUP1
0xb7b ISZERO
0xb7c PUSH2 0xbc6
0xb7f JUMPI
---
0xb30: JUMPDEST 
0xb31: V788 = 0x1
0xb34: V789 = S[0x1]
0xb35: V790 = 0x1
0xb38: V791 = 0x1
0xb3a: V792 = AND 0x1 V789
0xb3b: V793 = ISZERO V792
0xb3c: V794 = 0x100
0xb3f: V795 = MUL 0x100 V793
0xb40: V796 = SUB V795 0x1
0xb41: V797 = AND V796 V789
0xb42: V798 = 0x2
0xb45: V799 = DIV V797 0x2
0xb47: V800 = 0x1f
0xb49: V801 = ADD 0x1f V799
0xb4a: V802 = 0x20
0xb4e: V803 = DIV V801 0x20
0xb4f: V804 = MUL V803 0x20
0xb50: V805 = 0x20
0xb52: V806 = ADD 0x20 V804
0xb53: V807 = 0x40
0xb55: V808 = M[0x40]
0xb58: V809 = ADD V808 V806
0xb59: V810 = 0x40
0xb5b: M[0x40] = V809
0xb62: M[V808] = V799
0xb63: V811 = 0x20
0xb65: V812 = ADD 0x20 V808
0xb68: V813 = S[0x1]
0xb69: V814 = 0x1
0xb6c: V815 = 0x1
0xb6e: V816 = AND 0x1 V813
0xb6f: V817 = ISZERO V816
0xb70: V818 = 0x100
0xb73: V819 = MUL 0x100 V817
0xb74: V820 = SUB V819 0x1
0xb75: V821 = AND V820 V813
0xb76: V822 = 0x2
0xb79: V823 = DIV V821 0x2
0xb7b: V824 = ISZERO V823
0xb7c: V825 = 0xbc6
0xb7f: JUMPI 0xbc6 V824
---
Entry stack: [V11, 0x7c3]
Stack pops: 0
Stack additions: [V808, 0x1, V799, V812, 0x1, V823]
Exit stack: [V11, 0x7c3, V808, 0x1, V799, V812, 0x1, V823]

================================

Block 0xb80
[0xb80:0xb87]
---
Predecessors: [0xb30]
Successors: [0xb88, 0xb9b]
---
0xb80 DUP1
0xb81 PUSH1 0x1f
0xb83 LT
0xb84 PUSH2 0xb9b
0xb87 JUMPI
---
0xb81: V826 = 0x1f
0xb83: V827 = LT 0x1f V823
0xb84: V828 = 0xb9b
0xb87: JUMPI 0xb9b V827
---
Entry stack: [V11, 0x7c3, V808, 0x1, V799, V812, 0x1, V823]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7c3, V808, 0x1, V799, V812, 0x1, V823]

================================

Block 0xb88
[0xb88:0xb9a]
---
Predecessors: [0xb80]
Successors: [0xbc6]
---
0xb88 PUSH2 0x100
0xb8b DUP1
0xb8c DUP4
0xb8d SLOAD
0xb8e DIV
0xb8f MUL
0xb90 DUP4
0xb91 MSTORE
0xb92 SWAP2
0xb93 PUSH1 0x20
0xb95 ADD
0xb96 SWAP2
0xb97 PUSH2 0xbc6
0xb9a JUMP
---
0xb88: V829 = 0x100
0xb8d: V830 = S[0x1]
0xb8e: V831 = DIV V830 0x100
0xb8f: V832 = MUL V831 0x100
0xb91: M[V812] = V832
0xb93: V833 = 0x20
0xb95: V834 = ADD 0x20 V812
0xb97: V835 = 0xbc6
0xb9a: JUMP 0xbc6
---
Entry stack: [V11, 0x7c3, V808, 0x1, V799, V812, 0x1, V823]
Stack pops: 3
Stack additions: [V834, S1, S0]
Exit stack: [V11, 0x7c3, V808, 0x1, V799, V834, 0x1, V823]

================================

Block 0xb9b
[0xb9b:0xba8]
---
Predecessors: [0xb80]
Successors: [0xba9]
---
0xb9b JUMPDEST
0xb9c DUP3
0xb9d ADD
0xb9e SWAP2
0xb9f SWAP1
0xba0 PUSH1 0x0
0xba2 MSTORE
0xba3 PUSH1 0x20
0xba5 PUSH1 0x0
0xba7 SHA3
0xba8 SWAP1
---
0xb9b: JUMPDEST 
0xb9d: V836 = ADD V812 V823
0xba0: V837 = 0x0
0xba2: M[0x0] = 0x1
0xba3: V838 = 0x20
0xba5: V839 = 0x0
0xba7: V840 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x7c3, V808, 0x1, V799, V812, 0x1, V823]
Stack pops: 3
Stack additions: [V836, V840, S2]
Exit stack: [V11, 0x7c3, V808, 0x1, V799, V836, V840, V812]

================================

Block 0xba9
[0xba9:0xbbc]
---
Predecessors: [0xb9b, 0xba9]
Successors: [0xba9, 0xbbd]
---
0xba9 JUMPDEST
0xbaa DUP2
0xbab SLOAD
0xbac DUP2
0xbad MSTORE
0xbae SWAP1
0xbaf PUSH1 0x1
0xbb1 ADD
0xbb2 SWAP1
0xbb3 PUSH1 0x20
0xbb5 ADD
0xbb6 DUP1
0xbb7 DUP4
0xbb8 GT
0xbb9 PUSH2 0xba9
0xbbc JUMPI
---
0xba9: JUMPDEST 
0xbab: V841 = S[S1]
0xbad: M[S0] = V841
0xbaf: V842 = 0x1
0xbb1: V843 = ADD 0x1 S1
0xbb3: V844 = 0x20
0xbb5: V845 = ADD 0x20 S0
0xbb8: V846 = GT V836 V845
0xbb9: V847 = 0xba9
0xbbc: JUMPI 0xba9 V846
---
Entry stack: [V11, 0x7c3, V808, 0x1, V799, V836, S1, S0]
Stack pops: 3
Stack additions: [S2, V843, V845]
Exit stack: [V11, 0x7c3, V808, 0x1, V799, V836, V843, V845]

================================

Block 0xbbd
[0xbbd:0xbc5]
---
Predecessors: [0xba9]
Successors: [0xbc6]
---
0xbbd DUP3
0xbbe SWAP1
0xbbf SUB
0xbc0 PUSH1 0x1f
0xbc2 AND
0xbc3 DUP3
0xbc4 ADD
0xbc5 SWAP2
---
0xbbf: V848 = SUB V845 V836
0xbc0: V849 = 0x1f
0xbc2: V850 = AND 0x1f V848
0xbc4: V851 = ADD V836 V850
---
Entry stack: [V11, 0x7c3, V808, 0x1, V799, V836, V843, V845]
Stack pops: 3
Stack additions: [V851, S1, S2]
Exit stack: [V11, 0x7c3, V808, 0x1, V799, V851, V843, V836]

================================

Block 0xbc6
[0xbc6:0xbcd]
---
Predecessors: [0xb30, 0xb88, 0xbbd]
Successors: [0x7c3]
---
0xbc6 JUMPDEST
0xbc7 POP
0xbc8 POP
0xbc9 POP
0xbca POP
0xbcb POP
0xbcc DUP2
0xbcd JUMP
---
0xbc6: JUMPDEST 
0xbcd: JUMP 0x7c3
---
Entry stack: [V11, 0x7c3, V808, 0x1, V799, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x7c3, V808]

================================

Block 0xbce
[0xbce:0xbe0]
---
Predecessors: [0x849]
Successors: [0x851]
---
0xbce JUMPDEST
0xbcf PUSH1 0x4
0xbd1 PUSH1 0x14
0xbd3 SWAP1
0xbd4 SLOAD
0xbd5 SWAP1
0xbd6 PUSH2 0x100
0xbd9 EXP
0xbda SWAP1
0xbdb DIV
0xbdc PUSH1 0xff
0xbde AND
0xbdf DUP2
0xbe0 JUMP
---
0xbce: JUMPDEST 
0xbcf: V852 = 0x4
0xbd1: V853 = 0x14
0xbd4: V854 = S[0x4]
0xbd6: V855 = 0x100
0xbd9: V856 = EXP 0x100 0x14
0xbdb: V857 = DIV V854 0x10000000000000000000000000000000000000000
0xbdc: V858 = 0xff
0xbde: V859 = AND 0xff V857
0xbe0: JUMP 0x851
---
Entry stack: [V11, 0x851]
Stack pops: 1
Stack additions: [S0, V859]
Exit stack: [V11, 0x851, V859]

================================

Block 0xbe1
[0xbe1:0xbe6]
---
Predecessors: [0x876]
Successors: [0x87e]
---
0xbe1 JUMPDEST
0xbe2 PUSH1 0x8
0xbe4 SLOAD
0xbe5 DUP2
0xbe6 JUMP
---
0xbe1: JUMPDEST 
0xbe2: V860 = 0x8
0xbe4: V861 = S[0x8]
0xbe6: JUMP 0x87e
---
Entry stack: [V11, 0x87e]
Stack pops: 1
Stack additions: [S0, V861]
Exit stack: [V11, 0x87e, V861]

================================

Block 0xbe7
[0xbe7:0xc09]
---
Predecessors: [0x89f]
Successors: [0xc0a, 0xc0e]
---
0xbe7 JUMPDEST
0xbe8 PUSH1 0x0
0xbea DUP1
0xbeb DUP4
0xbec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc01 AND
0xc02 EQ
0xc03 ISZERO
0xc04 ISZERO
0xc05 ISZERO
0xc06 PUSH2 0xc0e
0xc09 JUMPI
---
0xbe7: JUMPDEST 
0xbe8: V862 = 0x0
0xbec: V863 = 0xffffffffffffffffffffffffffffffffffffffff
0xc01: V864 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xc02: V865 = EQ V864 0x0
0xc03: V866 = ISZERO V865
0xc04: V867 = ISZERO V866
0xc05: V868 = ISZERO V867
0xc06: V869 = 0xc0e
0xc09: JUMPI 0xc0e V868
---
Entry stack: [V11, 0x8d4, V602, V605]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xc0a
[0xc0a:0xc0d]
---
Predecessors: [0xbe7]
Successors: []
---
0xc0a PUSH1 0x0
0xc0c DUP1
0xc0d REVERT
---
0xc0a: V870 = 0x0
0xc0d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xc0e
[0xc0e:0xc44]
---
Predecessors: [0xbe7]
Successors: [0xc45, 0xc49]
---
0xc0e JUMPDEST
0xc0f DUP3
0xc10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc25 AND
0xc26 CALLER
0xc27 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3c AND
0xc3d EQ
0xc3e ISZERO
0xc3f ISZERO
0xc40 ISZERO
0xc41 PUSH2 0xc49
0xc44 JUMPI
---
0xc0e: JUMPDEST 
0xc10: V871 = 0xffffffffffffffffffffffffffffffffffffffff
0xc25: V872 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xc26: V873 = CALLER
0xc27: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3c: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xc3d: V876 = EQ V875 V872
0xc3e: V877 = ISZERO V876
0xc3f: V878 = ISZERO V877
0xc40: V879 = ISZERO V878
0xc41: V880 = 0xc49
0xc44: JUMPI 0xc49 V879
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xc45
[0xc45:0xc48]
---
Predecessors: [0xc0e]
Successors: []
---
0xc45 PUSH1 0x0
0xc47 DUP1
0xc48 REVERT
---
0xc45: V881 = 0x0
0xc48: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xc49
[0xc49:0xc92]
---
Predecessors: [0xc0e]
Successors: [0xc93, 0xc97]
---
0xc49 JUMPDEST
0xc4a DUP2
0xc4b PUSH1 0x9
0xc4d PUSH1 0x0
0xc4f CALLER
0xc50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc65 AND
0xc66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7b AND
0xc7c DUP2
0xc7d MSTORE
0xc7e PUSH1 0x20
0xc80 ADD
0xc81 SWAP1
0xc82 DUP2
0xc83 MSTORE
0xc84 PUSH1 0x20
0xc86 ADD
0xc87 PUSH1 0x0
0xc89 SHA3
0xc8a SLOAD
0xc8b LT
0xc8c ISZERO
0xc8d ISZERO
0xc8e ISZERO
0xc8f PUSH2 0xc97
0xc92 JUMPI
---
0xc49: JUMPDEST 
0xc4b: V882 = 0x9
0xc4d: V883 = 0x0
0xc4f: V884 = CALLER
0xc50: V885 = 0xffffffffffffffffffffffffffffffffffffffff
0xc65: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0xc66: V887 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7b: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0xc7d: M[0x0] = V888
0xc7e: V889 = 0x20
0xc80: V890 = ADD 0x20 0x0
0xc83: M[0x20] = 0x9
0xc84: V891 = 0x20
0xc86: V892 = ADD 0x20 0x20
0xc87: V893 = 0x0
0xc89: V894 = SHA3 0x0 0x40
0xc8a: V895 = S[V894]
0xc8b: V896 = LT V895 V605
0xc8c: V897 = ISZERO V896
0xc8d: V898 = ISZERO V897
0xc8e: V899 = ISZERO V898
0xc8f: V900 = 0xc97
0xc92: JUMPI 0xc97 V899
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xc93
[0xc93:0xc96]
---
Predecessors: [0xc49]
Successors: []
---
0xc93 PUSH1 0x0
0xc95 DUP1
0xc96 REVERT
---
0xc93: V901 = 0x0
0xc96: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xc97
[0xc97:0xd20]
---
Predecessors: [0xc49]
Successors: [0xd21, 0xd25]
---
0xc97 JUMPDEST
0xc98 PUSH1 0x9
0xc9a PUSH1 0x0
0xc9c DUP5
0xc9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb2 AND
0xcb3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc8 AND
0xcc9 DUP2
0xcca MSTORE
0xccb PUSH1 0x20
0xccd ADD
0xcce SWAP1
0xccf DUP2
0xcd0 MSTORE
0xcd1 PUSH1 0x20
0xcd3 ADD
0xcd4 PUSH1 0x0
0xcd6 SHA3
0xcd7 SLOAD
0xcd8 DUP3
0xcd9 PUSH1 0x9
0xcdb PUSH1 0x0
0xcdd DUP7
0xcde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf3 AND
0xcf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd09 AND
0xd0a DUP2
0xd0b MSTORE
0xd0c PUSH1 0x20
0xd0e ADD
0xd0f SWAP1
0xd10 DUP2
0xd11 MSTORE
0xd12 PUSH1 0x20
0xd14 ADD
0xd15 PUSH1 0x0
0xd17 SHA3
0xd18 SLOAD
0xd19 ADD
0xd1a GT
0xd1b ISZERO
0xd1c ISZERO
0xd1d PUSH2 0xd25
0xd20 JUMPI
---
0xc97: JUMPDEST 
0xc98: V902 = 0x9
0xc9a: V903 = 0x0
0xc9d: V904 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb2: V905 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xcb3: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc8: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0xcca: M[0x0] = V907
0xccb: V908 = 0x20
0xccd: V909 = ADD 0x20 0x0
0xcd0: M[0x20] = 0x9
0xcd1: V910 = 0x20
0xcd3: V911 = ADD 0x20 0x20
0xcd4: V912 = 0x0
0xcd6: V913 = SHA3 0x0 0x40
0xcd7: V914 = S[V913]
0xcd9: V915 = 0x9
0xcdb: V916 = 0x0
0xcde: V917 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf3: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xcf4: V919 = 0xffffffffffffffffffffffffffffffffffffffff
0xd09: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0xd0b: M[0x0] = V920
0xd0c: V921 = 0x20
0xd0e: V922 = ADD 0x20 0x0
0xd11: M[0x20] = 0x9
0xd12: V923 = 0x20
0xd14: V924 = ADD 0x20 0x20
0xd15: V925 = 0x0
0xd17: V926 = SHA3 0x0 0x40
0xd18: V927 = S[V926]
0xd19: V928 = ADD V927 V605
0xd1a: V929 = GT V928 V914
0xd1b: V930 = ISZERO V929
0xd1c: V931 = ISZERO V930
0xd1d: V932 = 0xd25
0xd20: JUMPI 0xd25 V931
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xd21
[0xd21:0xd24]
---
Predecessors: [0xc97]
Successors: []
---
0xd21 PUSH1 0x0
0xd23 DUP1
0xd24 REVERT
---
0xd21: V933 = 0x0
0xd24: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d4, V602, V605, 0x0]

================================

Block 0xd25
[0xd25:0xf30]
---
Predecessors: [0xc97]
Successors: [0xf31, 0xf32]
---
0xd25 JUMPDEST
0xd26 PUSH1 0x9
0xd28 PUSH1 0x0
0xd2a DUP5
0xd2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd40 AND
0xd41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd56 AND
0xd57 DUP2
0xd58 MSTORE
0xd59 PUSH1 0x20
0xd5b ADD
0xd5c SWAP1
0xd5d DUP2
0xd5e MSTORE
0xd5f PUSH1 0x20
0xd61 ADD
0xd62 PUSH1 0x0
0xd64 SHA3
0xd65 SLOAD
0xd66 PUSH1 0x9
0xd68 PUSH1 0x0
0xd6a CALLER
0xd6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd80 AND
0xd81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd96 AND
0xd97 DUP2
0xd98 MSTORE
0xd99 PUSH1 0x20
0xd9b ADD
0xd9c SWAP1
0xd9d DUP2
0xd9e MSTORE
0xd9f PUSH1 0x20
0xda1 ADD
0xda2 PUSH1 0x0
0xda4 SHA3
0xda5 SLOAD
0xda6 ADD
0xda7 SWAP1
0xda8 POP
0xda9 DUP2
0xdaa PUSH1 0x9
0xdac PUSH1 0x0
0xdae CALLER
0xdaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc4 AND
0xdc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdda AND
0xddb DUP2
0xddc MSTORE
0xddd PUSH1 0x20
0xddf ADD
0xde0 SWAP1
0xde1 DUP2
0xde2 MSTORE
0xde3 PUSH1 0x20
0xde5 ADD
0xde6 PUSH1 0x0
0xde8 SHA3
0xde9 PUSH1 0x0
0xdeb DUP3
0xdec DUP3
0xded SLOAD
0xdee SUB
0xdef SWAP3
0xdf0 POP
0xdf1 POP
0xdf2 DUP2
0xdf3 SWAP1
0xdf4 SSTORE
0xdf5 POP
0xdf6 DUP2
0xdf7 PUSH1 0x9
0xdf9 PUSH1 0x0
0xdfb DUP6
0xdfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe11 AND
0xe12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe27 AND
0xe28 DUP2
0xe29 MSTORE
0xe2a PUSH1 0x20
0xe2c ADD
0xe2d SWAP1
0xe2e DUP2
0xe2f MSTORE
0xe30 PUSH1 0x20
0xe32 ADD
0xe33 PUSH1 0x0
0xe35 SHA3
0xe36 PUSH1 0x0
0xe38 DUP3
0xe39 DUP3
0xe3a SLOAD
0xe3b ADD
0xe3c SWAP3
0xe3d POP
0xe3e POP
0xe3f DUP2
0xe40 SWAP1
0xe41 SSTORE
0xe42 POP
0xe43 DUP3
0xe44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe59 AND
0xe5a CALLER
0xe5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe70 AND
0xe71 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xe92 DUP5
0xe93 PUSH1 0x40
0xe95 MLOAD
0xe96 DUP1
0xe97 DUP3
0xe98 DUP2
0xe99 MSTORE
0xe9a PUSH1 0x20
0xe9c ADD
0xe9d SWAP2
0xe9e POP
0xe9f POP
0xea0 PUSH1 0x40
0xea2 MLOAD
0xea3 DUP1
0xea4 SWAP2
0xea5 SUB
0xea6 SWAP1
0xea7 LOG3
0xea8 DUP1
0xea9 PUSH1 0x9
0xeab PUSH1 0x0
0xead DUP6
0xeae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec3 AND
0xec4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed9 AND
0xeda DUP2
0xedb MSTORE
0xedc PUSH1 0x20
0xede ADD
0xedf SWAP1
0xee0 DUP2
0xee1 MSTORE
0xee2 PUSH1 0x20
0xee4 ADD
0xee5 PUSH1 0x0
0xee7 SHA3
0xee8 SLOAD
0xee9 PUSH1 0x9
0xeeb PUSH1 0x0
0xeed CALLER
0xeee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf03 AND
0xf04 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf19 AND
0xf1a DUP2
0xf1b MSTORE
0xf1c PUSH1 0x20
0xf1e ADD
0xf1f SWAP1
0xf20 DUP2
0xf21 MSTORE
0xf22 PUSH1 0x20
0xf24 ADD
0xf25 PUSH1 0x0
0xf27 SHA3
0xf28 SLOAD
0xf29 ADD
0xf2a EQ
0xf2b ISZERO
0xf2c ISZERO
0xf2d PUSH2 0xf32
0xf30 JUMPI
---
0xd25: JUMPDEST 
0xd26: V934 = 0x9
0xd28: V935 = 0x0
0xd2b: V936 = 0xffffffffffffffffffffffffffffffffffffffff
0xd40: V937 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xd41: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0xd56: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0xd58: M[0x0] = V939
0xd59: V940 = 0x20
0xd5b: V941 = ADD 0x20 0x0
0xd5e: M[0x20] = 0x9
0xd5f: V942 = 0x20
0xd61: V943 = ADD 0x20 0x20
0xd62: V944 = 0x0
0xd64: V945 = SHA3 0x0 0x40
0xd65: V946 = S[V945]
0xd66: V947 = 0x9
0xd68: V948 = 0x0
0xd6a: V949 = CALLER
0xd6b: V950 = 0xffffffffffffffffffffffffffffffffffffffff
0xd80: V951 = AND 0xffffffffffffffffffffffffffffffffffffffff V949
0xd81: V952 = 0xffffffffffffffffffffffffffffffffffffffff
0xd96: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff V951
0xd98: M[0x0] = V953
0xd99: V954 = 0x20
0xd9b: V955 = ADD 0x20 0x0
0xd9e: M[0x20] = 0x9
0xd9f: V956 = 0x20
0xda1: V957 = ADD 0x20 0x20
0xda2: V958 = 0x0
0xda4: V959 = SHA3 0x0 0x40
0xda5: V960 = S[V959]
0xda6: V961 = ADD V960 V946
0xdaa: V962 = 0x9
0xdac: V963 = 0x0
0xdae: V964 = CALLER
0xdaf: V965 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc4: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V964
0xdc5: V967 = 0xffffffffffffffffffffffffffffffffffffffff
0xdda: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V966
0xddc: M[0x0] = V968
0xddd: V969 = 0x20
0xddf: V970 = ADD 0x20 0x0
0xde2: M[0x20] = 0x9
0xde3: V971 = 0x20
0xde5: V972 = ADD 0x20 0x20
0xde6: V973 = 0x0
0xde8: V974 = SHA3 0x0 0x40
0xde9: V975 = 0x0
0xded: V976 = S[V974]
0xdee: V977 = SUB V976 V605
0xdf4: S[V974] = V977
0xdf7: V978 = 0x9
0xdf9: V979 = 0x0
0xdfc: V980 = 0xffffffffffffffffffffffffffffffffffffffff
0xe11: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xe12: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0xe27: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0xe29: M[0x0] = V983
0xe2a: V984 = 0x20
0xe2c: V985 = ADD 0x20 0x0
0xe2f: M[0x20] = 0x9
0xe30: V986 = 0x20
0xe32: V987 = ADD 0x20 0x20
0xe33: V988 = 0x0
0xe35: V989 = SHA3 0x0 0x40
0xe36: V990 = 0x0
0xe3a: V991 = S[V989]
0xe3b: V992 = ADD V991 V605
0xe41: S[V989] = V992
0xe44: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0xe59: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xe5a: V995 = CALLER
0xe5b: V996 = 0xffffffffffffffffffffffffffffffffffffffff
0xe70: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0xe71: V998 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xe93: V999 = 0x40
0xe95: V1000 = M[0x40]
0xe99: M[V1000] = V605
0xe9a: V1001 = 0x20
0xe9c: V1002 = ADD 0x20 V1000
0xea0: V1003 = 0x40
0xea2: V1004 = M[0x40]
0xea5: V1005 = SUB V1002 V1004
0xea7: LOG V1004 V1005 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V997 V994
0xea9: V1006 = 0x9
0xeab: V1007 = 0x0
0xeae: V1008 = 0xffffffffffffffffffffffffffffffffffffffff
0xec3: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xec4: V1010 = 0xffffffffffffffffffffffffffffffffffffffff
0xed9: V1011 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
0xedb: M[0x0] = V1011
0xedc: V1012 = 0x20
0xede: V1013 = ADD 0x20 0x0
0xee1: M[0x20] = 0x9
0xee2: V1014 = 0x20
0xee4: V1015 = ADD 0x20 0x20
0xee5: V1016 = 0x0
0xee7: V1017 = SHA3 0x0 0x40
0xee8: V1018 = S[V1017]
0xee9: V1019 = 0x9
0xeeb: V1020 = 0x0
0xeed: V1021 = CALLER
0xeee: V1022 = 0xffffffffffffffffffffffffffffffffffffffff
0xf03: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V1021
0xf04: V1024 = 0xffffffffffffffffffffffffffffffffffffffff
0xf19: V1025 = AND 0xffffffffffffffffffffffffffffffffffffffff V1023
0xf1b: M[0x0] = V1025
0xf1c: V1026 = 0x20
0xf1e: V1027 = ADD 0x20 0x0
0xf21: M[0x20] = 0x9
0xf22: V1028 = 0x20
0xf24: V1029 = ADD 0x20 0x20
0xf25: V1030 = 0x0
0xf27: V1031 = SHA3 0x0 0x40
0xf28: V1032 = S[V1031]
0xf29: V1033 = ADD V1032 V1018
0xf2a: V1034 = EQ V1033 V961
0xf2b: V1035 = ISZERO V1034
0xf2c: V1036 = ISZERO V1035
0xf2d: V1037 = 0xf32
0xf30: JUMPI 0xf32 V1036
---
Entry stack: [V11, 0x8d4, V602, V605, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V961]
Exit stack: [V11, 0x8d4, V602, V605, V961]

================================

Block 0xf31
[0xf31:0xf31]
---
Predecessors: [0xd25]
Successors: []
---
0xf31 INVALID
---
0xf31: INVALID 
---
Entry stack: [V11, 0x8d4, V602, V605, V961]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d4, V602, V605, V961]

================================

Block 0xf32
[0xf32:0xf36]
---
Predecessors: [0xd25]
Successors: [0x8d4]
---
0xf32 JUMPDEST
0xf33 POP
0xf34 POP
0xf35 POP
0xf36 JUMP
---
0xf32: JUMPDEST 
0xf36: JUMP 0x8d4
---
Entry stack: [V11, 0x8d4, V602, V605, V961]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0xf37
[0xf37:0xf3c]
---
Predecessors: [0x8e1]
Successors: [0x8e9]
---
0xf37 JUMPDEST
0xf38 PUSH1 0x5
0xf3a SLOAD
0xf3b DUP2
0xf3c JUMP
---
0xf37: JUMPDEST 
0xf38: V1038 = 0x5
0xf3a: V1039 = S[0x5]
0xf3c: JUMP 0x8e9
---
Entry stack: [V11, 0x8e9]
Stack pops: 1
Stack additions: [S0, V1039]
Exit stack: [V11, 0x8e9, V1039]

================================

Block 0xf3d
[0xf3d:0xf42]
---
Predecessors: [0x90a]
Successors: [0x912]
---
0xf3d JUMPDEST
0xf3e PUSH1 0x6
0xf40 SLOAD
0xf41 DUP2
0xf42 JUMP
---
0xf3d: JUMPDEST 
0xf3e: V1040 = 0x6
0xf40: V1041 = S[0x6]
0xf42: JUMP 0x912
---
Entry stack: [V11, 0x912]
Stack pops: 1
Stack additions: [S0, V1041]
Exit stack: [V11, 0x912, V1041]

================================

Block 0xf43
[0xf43:0xf6e]
---
Predecessors: []
Successors: []
---
0xf43 STOP
0xf44 LOG1
0xf45 PUSH6 0x627a7a723058
0xf4c SHA3
0xf4d EXTCODEHASH
0xf4e MISSING 0xac
0xf4f LOG1
0xf50 LOG0
0xf51 MISSING 0x2f
0xf52 SSTORE
0xf53 MISSING 0xab
0xf54 MISSING 0xc1
0xf55 MISSING 0x48
0xf56 STOP
0xf57 SHR
0xf58 MISSING 0x29
0xf59 RETURNDATACOPY
0xf5a PUSH20 0xf5a73f8db0e1e2b4586cd1c0a5b24c0cb4490029
---
0xf43: STOP 
0xf44: LOG S0 S1 S2
0xf45: V1042 = 0x627a7a723058
0xf4c: V1043 = SHA3 0x627a7a723058 S3
0xf4d: V1044 = EXTCODEHASH V1043
0xf4e: MISSING 0xac
0xf4f: LOG S0 S1 S2
0xf50: LOG S3 S4
0xf51: MISSING 0x2f
0xf52: S[S0] = S1
0xf53: MISSING 0xab
0xf54: MISSING 0xc1
0xf55: MISSING 0x48
0xf56: STOP 
0xf57: V1045 = SHR S0 S1
0xf58: MISSING 0x29
0xf59: RETURNDATACOPY S0 S1 S2
0xf5a: V1046 = 0xf5a73f8db0e1e2b4586cd1c0a5b24c0cb4490029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1044, V1045, 0xf5a73f8db0e1e2b4586cd1c0a5b24c0cb4490029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x59d
Exit block: 0x5b0
Body: 0x59d, 0x5a4, 0x5a8, 0x5b0, 0x928

Function 1:
Public function signature: 0x4fed917
Entry block: 0x5f2
Exit block: 0x629
Body: 0x5f2, 0x5f9, 0x5fd, 0x629, 0x94e

Function 2:
Public function signature: 0x6fdde03
Entry block: 0x645
Exit block: 0x6c5
Body: 0x645, 0x64c, 0x650, 0x658, 0x67d, 0x686, 0x698, 0x6ac, 0x6c5, 0x96e, 0x9be, 0x9c6, 0x9d9, 0x9e7, 0x9fb, 0xa04

Function 3:
Public function signature: 0x14f6c3be
Entry block: 0x6d3
Exit block: 0x6e6
Body: 0x6d3, 0x6da, 0x6de, 0x6e6, 0xa0c, 0xa2e, 0xa80, 0xa87, 0xa8b, 0xb00, 0xb04

Function 4:
Public function signature: 0x18160ddd
Entry block: 0x6e8
Exit block: 0x6fb
Body: 0x6e8, 0x6ef, 0x6f3, 0x6fb, 0xb06

Function 5:
Public function signature: 0x2c4e722e
Entry block: 0x711
Exit block: 0x724
Body: 0x711, 0x718, 0x71c, 0x724, 0xb0c

Function 6:
Public function signature: 0x313ce567
Entry block: 0x73a
Exit block: 0x74d
Body: 0x73a, 0x741, 0x745, 0x74d, 0xb12

Function 7:
Public function signature: 0x70a08231
Entry block: 0x763
Exit block: 0x79a
Body: 0x763, 0x76a, 0x76e, 0x79a, 0xb18

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x7b0
Exit block: 0x830
Body: 0x7b0, 0x7b7, 0x7bb, 0x7c3, 0x7e8, 0x7f1, 0x803, 0x817, 0x830, 0xb30, 0xb80, 0xb88, 0xb9b, 0xba9, 0xbbd, 0xbc6

Function 9:
Public function signature: 0x9765b4d7
Entry block: 0x83e
Exit block: 0x851
Body: 0x83e, 0x845, 0x849, 0x851, 0xbce

Function 10:
Public function signature: 0xa6f48c90
Entry block: 0x86b
Exit block: 0x87e
Body: 0x86b, 0x872, 0x876, 0x87e, 0xbe1

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x894
Exit block: 0x8d4
Body: 0x894, 0x89b, 0x89f, 0x8d4, 0xbe7, 0xc0a, 0xc0e, 0xc45, 0xc49, 0xc93, 0xc97, 0xd21, 0xd25, 0xf31, 0xf32

Function 12:
Public function signature: 0xbe9a6555
Entry block: 0x8d6
Exit block: 0x8e9
Body: 0x8d6, 0x8dd, 0x8e1, 0x8e9, 0xf37

Function 13:
Public function signature: 0xefbe1c1c
Entry block: 0x8ff
Exit block: 0x912
Body: 0x8ff, 0x906, 0x90a, 0x912, 0xf3d

Function 14:
Public fallback function
Entry block: 0xd0
Exit block: 0x598
Body: 0xd0, 0xec, 0xf0, 0xfd, 0x104, 0x10b, 0x10f, 0x11e, 0x12b, 0x140, 0x141, 0x146, 0x151, 0x155, 0x1ae, 0x1b2, 0x21e, 0x222, 0x22e, 0x287, 0x28b, 0x28c, 0x520, 0x521, 0x52d, 0x598

