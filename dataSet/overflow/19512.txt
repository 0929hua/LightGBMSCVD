Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb2225351
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb2225351
0x3c: V13 = EQ 0xb2225351 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xf0]
---
0x41 DUP1
0x42 PUSH4 0xc80e0ddd
0x47 EQ
0x48 PUSH2 0xf0
0x4b JUMPI
---
0x42: V15 = 0xc80e0ddd
0x47: V16 = EQ 0xc80e0ddd V11
0x48: V17 = 0xf0
0x4b: JUMPI 0xf0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x74]
---
Predecessors: [0x51]
Successors: [0x156]
---
0x5c JUMPDEST
0x5d PUSH2 0x75
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH1 0xff
0x67 AND
0x68 SWAP1
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d SWAP2
0x6e SWAP1
0x6f POP
0x70 POP
0x71 PUSH2 0x156
0x74 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x75
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0xff
0x67: V27 = AND 0xff V25
0x69: V28 = 0x20
0x6b: V29 = ADD 0x20 0x4
0x71: V30 = 0x156
0x74: JUMP 0x156
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x75, V27]
Exit stack: [V11, 0x75, V27]

================================

Block 0x75
[0x75:0x99]
---
Predecessors: [0x207]
Successors: [0x9a]
---
0x75 JUMPDEST
0x76 PUSH1 0x40
0x78 MLOAD
0x79 DUP1
0x7a DUP1
0x7b PUSH1 0x20
0x7d ADD
0x7e DUP3
0x7f DUP2
0x80 SUB
0x81 DUP3
0x82 MSTORE
0x83 DUP4
0x84 DUP2
0x85 DUP2
0x86 MLOAD
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP2
0x8d POP
0x8e DUP1
0x8f MLOAD
0x90 SWAP1
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP1
0x95 DUP1
0x96 DUP4
0x97 DUP4
0x98 PUSH1 0x0
---
0x75: JUMPDEST 
0x76: V31 = 0x40
0x78: V32 = M[0x40]
0x7b: V33 = 0x20
0x7d: V34 = ADD 0x20 V32
0x80: V35 = SUB V34 V32
0x82: M[V32] = V35
0x86: V36 = M[V133]
0x88: M[V34] = V36
0x89: V37 = 0x20
0x8b: V38 = ADD 0x20 V34
0x8f: V39 = M[V133]
0x91: V40 = 0x20
0x93: V41 = ADD 0x20 V133
0x98: V42 = 0x0
---
Entry stack: [V11, V133]
Stack pops: 1
Stack additions: [S0, V32, V32, V38, V41, V39, V39, V38, V41, 0x0]
Exit stack: [V11, V133, V32, V32, V38, V41, V39, V39, V38, V41, 0x0]

================================

Block 0x9a
[0x9a:0xa2]
---
Predecessors: [0x75, 0xa3]
Successors: [0xa3, 0xb5]
---
0x9a JUMPDEST
0x9b DUP4
0x9c DUP2
0x9d LT
0x9e ISZERO
0x9f PUSH2 0xb5
0xa2 JUMPI
---
0x9a: JUMPDEST 
0x9d: V43 = LT S0 V39
0x9e: V44 = ISZERO V43
0x9f: V45 = 0xb5
0xa2: JUMPI 0xb5 V44
---
Entry stack: [V11, V133, V32, V32, V38, V41, V39, V39, V38, V41, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V133, V32, V32, V38, V41, V39, V39, V38, V41, S0]

================================

Block 0xa3
[0xa3:0xb4]
---
Predecessors: [0x9a]
Successors: [0x9a]
---
0xa3 DUP1
0xa4 DUP3
0xa5 ADD
0xa6 MLOAD
0xa7 DUP2
0xa8 DUP5
0xa9 ADD
0xaa MSTORE
0xab PUSH1 0x20
0xad DUP2
0xae ADD
0xaf SWAP1
0xb0 POP
0xb1 PUSH2 0x9a
0xb4 JUMP
---
0xa5: V46 = ADD V41 S0
0xa6: V47 = M[V46]
0xa9: V48 = ADD V38 S0
0xaa: M[V48] = V47
0xab: V49 = 0x20
0xae: V50 = ADD S0 0x20
0xb1: V51 = 0x9a
0xb4: JUMP 0x9a
---
Entry stack: [V11, V133, V32, V32, V38, V41, V39, V39, V38, V41, S0]
Stack pops: 3
Stack additions: [S2, S1, V50]
Exit stack: [V11, V133, V32, V32, V38, V41, V39, V39, V38, V41, V50]

================================

Block 0xb5
[0xb5:0xc8]
---
Predecessors: [0x9a]
Successors: [0xc9, 0xe2]
---
0xb5 JUMPDEST
0xb6 POP
0xb7 POP
0xb8 POP
0xb9 POP
0xba SWAP1
0xbb POP
0xbc SWAP1
0xbd DUP2
0xbe ADD
0xbf SWAP1
0xc0 PUSH1 0x1f
0xc2 AND
0xc3 DUP1
0xc4 ISZERO
0xc5 PUSH2 0xe2
0xc8 JUMPI
---
0xb5: JUMPDEST 
0xbe: V52 = ADD V39 V38
0xc0: V53 = 0x1f
0xc2: V54 = AND 0x1f V39
0xc4: V55 = ISZERO V54
0xc5: V56 = 0xe2
0xc8: JUMPI 0xe2 V55
---
Entry stack: [V11, V133, V32, V32, V38, V41, V39, V39, V38, V41, S0]
Stack pops: 7
Stack additions: [V52, V54]
Exit stack: [V11, V133, V32, V32, V52, V54]

================================

Block 0xc9
[0xc9:0xe1]
---
Predecessors: [0xb5]
Successors: [0xe2]
---
0xc9 DUP1
0xca DUP3
0xcb SUB
0xcc DUP1
0xcd MLOAD
0xce PUSH1 0x1
0xd0 DUP4
0xd1 PUSH1 0x20
0xd3 SUB
0xd4 PUSH2 0x100
0xd7 EXP
0xd8 SUB
0xd9 NOT
0xda AND
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP2
0xe1 POP
---
0xcb: V57 = SUB V52 V54
0xcd: V58 = M[V57]
0xce: V59 = 0x1
0xd1: V60 = 0x20
0xd3: V61 = SUB 0x20 V54
0xd4: V62 = 0x100
0xd7: V63 = EXP 0x100 V61
0xd8: V64 = SUB V63 0x1
0xd9: V65 = NOT V64
0xda: V66 = AND V65 V58
0xdc: M[V57] = V66
0xdd: V67 = 0x20
0xdf: V68 = ADD 0x20 V57
---
Entry stack: [V11, V133, V32, V32, V52, V54]
Stack pops: 2
Stack additions: [V68, S0]
Exit stack: [V11, V133, V32, V32, V68, V54]

================================

Block 0xe2
[0xe2:0xef]
---
Predecessors: [0xb5, 0xc9]
Successors: []
---
0xe2 JUMPDEST
0xe3 POP
0xe4 SWAP3
0xe5 POP
0xe6 POP
0xe7 POP
0xe8 PUSH1 0x40
0xea MLOAD
0xeb DUP1
0xec SWAP2
0xed SUB
0xee SWAP1
0xef RETURN
---
0xe2: JUMPDEST 
0xe8: V69 = 0x40
0xea: V70 = M[0x40]
0xed: V71 = SUB S1 V70
0xef: RETURN V70 V71
---
Entry stack: [V11, V133, V32, V32, S1, V54]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xf6]
---
Predecessors: [0x41]
Successors: [0xf7, 0xfb]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xf0: JUMPDEST 
0xf1: V72 = CALLVALUE
0xf2: V73 = ISZERO V72
0xf3: V74 = 0xfb
0xf6: JUMPI 0xfb V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xf0]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V75 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x153]
---
Predecessors: [0xf0]
Successors: [0x213]
---
0xfb JUMPDEST
0xfc PUSH2 0x154
0xff PUSH1 0x4
0x101 DUP1
0x102 DUP1
0x103 CALLDATALOAD
0x104 SWAP1
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP1
0x109 SWAP2
0x10a SWAP1
0x10b DUP1
0x10c CALLDATALOAD
0x10d SWAP1
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP1
0x112 DUP3
0x113 ADD
0x114 DUP1
0x115 CALLDATALOAD
0x116 SWAP1
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b DUP1
0x11c DUP1
0x11d PUSH1 0x1f
0x11f ADD
0x120 PUSH1 0x20
0x122 DUP1
0x123 SWAP2
0x124 DIV
0x125 MUL
0x126 PUSH1 0x20
0x128 ADD
0x129 PUSH1 0x40
0x12b MLOAD
0x12c SWAP1
0x12d DUP2
0x12e ADD
0x12f PUSH1 0x40
0x131 MSTORE
0x132 DUP1
0x133 SWAP4
0x134 SWAP3
0x135 SWAP2
0x136 SWAP1
0x137 DUP2
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c ADD
0x13d DUP4
0x13e DUP4
0x13f DUP1
0x140 DUP3
0x141 DUP5
0x142 CALLDATACOPY
0x143 DUP3
0x144 ADD
0x145 SWAP2
0x146 POP
0x147 POP
0x148 POP
0x149 POP
0x14a POP
0x14b POP
0x14c SWAP2
0x14d SWAP1
0x14e POP
0x14f POP
0x150 PUSH2 0x213
0x153 JUMP
---
0xfb: JUMPDEST 
0xfc: V76 = 0x154
0xff: V77 = 0x4
0x103: V78 = CALLDATALOAD 0x4
0x105: V79 = 0x20
0x107: V80 = ADD 0x20 0x4
0x10c: V81 = CALLDATALOAD 0x24
0x10e: V82 = 0x20
0x110: V83 = ADD 0x20 0x24
0x113: V84 = ADD 0x4 V81
0x115: V85 = CALLDATALOAD V84
0x117: V86 = 0x20
0x119: V87 = ADD 0x20 V84
0x11d: V88 = 0x1f
0x11f: V89 = ADD 0x1f V85
0x120: V90 = 0x20
0x124: V91 = DIV V89 0x20
0x125: V92 = MUL V91 0x20
0x126: V93 = 0x20
0x128: V94 = ADD 0x20 V92
0x129: V95 = 0x40
0x12b: V96 = M[0x40]
0x12e: V97 = ADD V96 V94
0x12f: V98 = 0x40
0x131: M[0x40] = V97
0x139: M[V96] = V85
0x13a: V99 = 0x20
0x13c: V100 = ADD 0x20 V96
0x142: CALLDATACOPY V100 V87 V85
0x144: V101 = ADD V100 V85
0x150: V102 = 0x213
0x153: JUMP 0x213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x154, V78, V96]
Exit stack: [V11, 0x154, V78, V96]

================================

Block 0x154
[0x154:0x155]
---
Predecessors: [0x239]
Successors: []
---
0x154 JUMPDEST
0x155 STOP
---
0x154: JUMPDEST 
0x155: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x15d]
---
Predecessors: [0x5c]
Successors: [0x23e]
---
0x156 JUMPDEST
0x157 PUSH2 0x15e
0x15a PUSH2 0x23e
0x15d JUMP
---
0x156: JUMPDEST 
0x157: V103 = 0x15e
0x15a: V104 = 0x23e
0x15d: JUMP 0x23e
---
Entry stack: [V11, 0x75, V27]
Stack pops: 0
Stack additions: [0x15e]
Exit stack: [V11, 0x75, V27, 0x15e]

================================

Block 0x15e
[0x15e:0x1c0]
---
Predecessors: [0x23e]
Successors: [0x1c1, 0x207]
---
0x15e JUMPDEST
0x15f PUSH1 0x0
0x161 DUP1
0x162 DUP4
0x163 PUSH1 0xff
0x165 AND
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP1
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x20
0x170 ADD
0x171 PUSH1 0x0
0x173 SHA3
0x174 DUP1
0x175 SLOAD
0x176 PUSH1 0x1
0x178 DUP2
0x179 PUSH1 0x1
0x17b AND
0x17c ISZERO
0x17d PUSH2 0x100
0x180 MUL
0x181 SUB
0x182 AND
0x183 PUSH1 0x2
0x185 SWAP1
0x186 DIV
0x187 DUP1
0x188 PUSH1 0x1f
0x18a ADD
0x18b PUSH1 0x20
0x18d DUP1
0x18e SWAP2
0x18f DIV
0x190 MUL
0x191 PUSH1 0x20
0x193 ADD
0x194 PUSH1 0x40
0x196 MLOAD
0x197 SWAP1
0x198 DUP2
0x199 ADD
0x19a PUSH1 0x40
0x19c MSTORE
0x19d DUP1
0x19e SWAP3
0x19f SWAP2
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 DUP3
0x1a8 DUP1
0x1a9 SLOAD
0x1aa PUSH1 0x1
0x1ac DUP2
0x1ad PUSH1 0x1
0x1af AND
0x1b0 ISZERO
0x1b1 PUSH2 0x100
0x1b4 MUL
0x1b5 SUB
0x1b6 AND
0x1b7 PUSH1 0x2
0x1b9 SWAP1
0x1ba DIV
0x1bb DUP1
0x1bc ISZERO
0x1bd PUSH2 0x207
0x1c0 JUMPI
---
0x15e: JUMPDEST 
0x15f: V105 = 0x0
0x163: V106 = 0xff
0x165: V107 = AND 0xff V27
0x167: M[0x0] = V107
0x168: V108 = 0x20
0x16a: V109 = ADD 0x20 0x0
0x16d: M[0x20] = 0x0
0x16e: V110 = 0x20
0x170: V111 = ADD 0x20 0x20
0x171: V112 = 0x0
0x173: V113 = SHA3 0x0 0x40
0x175: V114 = S[V113]
0x176: V115 = 0x1
0x179: V116 = 0x1
0x17b: V117 = AND 0x1 V114
0x17c: V118 = ISZERO V117
0x17d: V119 = 0x100
0x180: V120 = MUL 0x100 V118
0x181: V121 = SUB V120 0x1
0x182: V122 = AND V121 V114
0x183: V123 = 0x2
0x186: V124 = DIV V122 0x2
0x188: V125 = 0x1f
0x18a: V126 = ADD 0x1f V124
0x18b: V127 = 0x20
0x18f: V128 = DIV V126 0x20
0x190: V129 = MUL V128 0x20
0x191: V130 = 0x20
0x193: V131 = ADD 0x20 V129
0x194: V132 = 0x40
0x196: V133 = M[0x40]
0x199: V134 = ADD V133 V131
0x19a: V135 = 0x40
0x19c: M[0x40] = V134
0x1a3: M[V133] = V124
0x1a4: V136 = 0x20
0x1a6: V137 = ADD 0x20 V133
0x1a9: V138 = S[V113]
0x1aa: V139 = 0x1
0x1ad: V140 = 0x1
0x1af: V141 = AND 0x1 V138
0x1b0: V142 = ISZERO V141
0x1b1: V143 = 0x100
0x1b4: V144 = MUL 0x100 V142
0x1b5: V145 = SUB V144 0x1
0x1b6: V146 = AND V145 V138
0x1b7: V147 = 0x2
0x1ba: V148 = DIV V146 0x2
0x1bc: V149 = ISZERO V148
0x1bd: V150 = 0x207
0x1c0: JUMPI 0x207 V149
---
Entry stack: [V11, 0x75, V27, V191]
Stack pops: 2
Stack additions: [S1, S0, V133, V113, V124, V137, V113, V148]
Exit stack: [V11, 0x75, V27, V191, V133, V113, V124, V137, V113, V148]

================================

Block 0x1c1
[0x1c1:0x1c8]
---
Predecessors: [0x15e]
Successors: [0x1c9, 0x1dc]
---
0x1c1 DUP1
0x1c2 PUSH1 0x1f
0x1c4 LT
0x1c5 PUSH2 0x1dc
0x1c8 JUMPI
---
0x1c2: V151 = 0x1f
0x1c4: V152 = LT 0x1f V148
0x1c5: V153 = 0x1dc
0x1c8: JUMPI 0x1dc V152
---
Entry stack: [V11, 0x75, V27, V191, V133, V113, V124, V137, V113, V148]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x75, V27, V191, V133, V113, V124, V137, V113, V148]

================================

Block 0x1c9
[0x1c9:0x1db]
---
Predecessors: [0x1c1]
Successors: [0x207]
---
0x1c9 PUSH2 0x100
0x1cc DUP1
0x1cd DUP4
0x1ce SLOAD
0x1cf DIV
0x1d0 MUL
0x1d1 DUP4
0x1d2 MSTORE
0x1d3 SWAP2
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP2
0x1d8 PUSH2 0x207
0x1db JUMP
---
0x1c9: V154 = 0x100
0x1ce: V155 = S[V113]
0x1cf: V156 = DIV V155 0x100
0x1d0: V157 = MUL V156 0x100
0x1d2: M[V137] = V157
0x1d4: V158 = 0x20
0x1d6: V159 = ADD 0x20 V137
0x1d8: V160 = 0x207
0x1db: JUMP 0x207
---
Entry stack: [V11, 0x75, V27, V191, V133, V113, V124, V137, V113, V148]
Stack pops: 3
Stack additions: [V159, S1, S0]
Exit stack: [V11, 0x75, V27, V191, V133, V113, V124, V159, V113, V148]

================================

Block 0x1dc
[0x1dc:0x1e9]
---
Predecessors: [0x1c1]
Successors: [0x1ea]
---
0x1dc JUMPDEST
0x1dd DUP3
0x1de ADD
0x1df SWAP2
0x1e0 SWAP1
0x1e1 PUSH1 0x0
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 PUSH1 0x0
0x1e8 SHA3
0x1e9 SWAP1
---
0x1dc: JUMPDEST 
0x1de: V161 = ADD V137 V148
0x1e1: V162 = 0x0
0x1e3: M[0x0] = V113
0x1e4: V163 = 0x20
0x1e6: V164 = 0x0
0x1e8: V165 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x75, V27, V191, V133, V113, V124, V137, V113, V148]
Stack pops: 3
Stack additions: [V161, V165, S2]
Exit stack: [V11, 0x75, V27, V191, V133, V113, V124, V161, V165, V137]

================================

Block 0x1ea
[0x1ea:0x1fd]
---
Predecessors: [0x1dc, 0x1ea]
Successors: [0x1ea, 0x1fe]
---
0x1ea JUMPDEST
0x1eb DUP2
0x1ec SLOAD
0x1ed DUP2
0x1ee MSTORE
0x1ef SWAP1
0x1f0 PUSH1 0x1
0x1f2 ADD
0x1f3 SWAP1
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 DUP1
0x1f8 DUP4
0x1f9 GT
0x1fa PUSH2 0x1ea
0x1fd JUMPI
---
0x1ea: JUMPDEST 
0x1ec: V166 = S[S1]
0x1ee: M[S0] = V166
0x1f0: V167 = 0x1
0x1f2: V168 = ADD 0x1 S1
0x1f4: V169 = 0x20
0x1f6: V170 = ADD 0x20 S0
0x1f9: V171 = GT V161 V170
0x1fa: V172 = 0x1ea
0x1fd: JUMPI 0x1ea V171
---
Entry stack: [V11, 0x75, V27, V191, V133, V113, V124, V161, S1, S0]
Stack pops: 3
Stack additions: [S2, V168, V170]
Exit stack: [V11, 0x75, V27, V191, V133, V113, V124, V161, V168, V170]

================================

Block 0x1fe
[0x1fe:0x206]
---
Predecessors: [0x1ea]
Successors: [0x207]
---
0x1fe DUP3
0x1ff SWAP1
0x200 SUB
0x201 PUSH1 0x1f
0x203 AND
0x204 DUP3
0x205 ADD
0x206 SWAP2
---
0x200: V173 = SUB V170 V161
0x201: V174 = 0x1f
0x203: V175 = AND 0x1f V173
0x205: V176 = ADD V161 V175
---
Entry stack: [V11, 0x75, V27, V191, V133, V113, V124, V161, V168, V170]
Stack pops: 3
Stack additions: [V176, S1, S2]
Exit stack: [V11, 0x75, V27, V191, V133, V113, V124, V176, V168, V161]

================================

Block 0x207
[0x207:0x212]
---
Predecessors: [0x15e, 0x1c9, 0x1fe]
Successors: [0x75]
---
0x207 JUMPDEST
0x208 POP
0x209 POP
0x20a POP
0x20b POP
0x20c POP
0x20d SWAP1
0x20e POP
0x20f SWAP2
0x210 SWAP1
0x211 POP
0x212 JUMP
---
0x207: JUMPDEST 
0x212: JUMP 0x75
---
Entry stack: [V11, 0x75, V27, V191, V133, V113, V124, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V11, V133]

================================

Block 0x213
[0x213:0x238]
---
Predecessors: [0xfb]
Successors: [0x252]
---
0x213 JUMPDEST
0x214 DUP1
0x215 PUSH1 0x0
0x217 DUP1
0x218 DUP5
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x20
0x21d ADD
0x21e SWAP1
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 PUSH1 0x0
0x226 SHA3
0x227 SWAP1
0x228 DUP1
0x229 MLOAD
0x22a SWAP1
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f PUSH2 0x239
0x232 SWAP3
0x233 SWAP2
0x234 SWAP1
0x235 PUSH2 0x252
0x238 JUMP
---
0x213: JUMPDEST 
0x215: V177 = 0x0
0x21a: M[0x0] = V78
0x21b: V178 = 0x20
0x21d: V179 = ADD 0x20 0x0
0x220: M[0x20] = 0x0
0x221: V180 = 0x20
0x223: V181 = ADD 0x20 0x20
0x224: V182 = 0x0
0x226: V183 = SHA3 0x0 0x40
0x229: V184 = M[V96]
0x22b: V185 = 0x20
0x22d: V186 = ADD 0x20 V96
0x22f: V187 = 0x239
0x235: V188 = 0x252
0x238: JUMP 0x252
---
Entry stack: [V11, 0x154, V78, V96]
Stack pops: 2
Stack additions: [S1, S0, 0x239, V183, V186, V184]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V186, V184]

================================

Block 0x239
[0x239:0x23d]
---
Predecessors: [0x2ce]
Successors: [0x154]
---
0x239 JUMPDEST
0x23a POP
0x23b POP
0x23c POP
0x23d JUMP
---
0x239: JUMPDEST 
0x23d: JUMP 0x154
---
Entry stack: [V11, 0x154, V78, V96, V183]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x23e
[0x23e:0x251]
---
Predecessors: [0x156]
Successors: [0x15e]
---
0x23e JUMPDEST
0x23f PUSH1 0x20
0x241 PUSH1 0x40
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 ADD
0x247 PUSH1 0x40
0x249 MSTORE
0x24a DUP1
0x24b PUSH1 0x0
0x24d DUP2
0x24e MSTORE
0x24f POP
0x250 SWAP1
0x251 JUMP
---
0x23e: JUMPDEST 
0x23f: V189 = 0x20
0x241: V190 = 0x40
0x243: V191 = M[0x40]
0x246: V192 = ADD V191 0x20
0x247: V193 = 0x40
0x249: M[0x40] = V192
0x24b: V194 = 0x0
0x24e: M[V191] = 0x0
0x251: JUMP 0x15e
---
Entry stack: [V11, 0x75, V27, 0x15e]
Stack pops: 1
Stack additions: [V191]
Exit stack: [V11, 0x75, V27, V191]

================================

Block 0x252
[0x252:0x282]
---
Predecessors: [0x213]
Successors: [0x283, 0x293]
---
0x252 JUMPDEST
0x253 DUP3
0x254 DUP1
0x255 SLOAD
0x256 PUSH1 0x1
0x258 DUP2
0x259 PUSH1 0x1
0x25b AND
0x25c ISZERO
0x25d PUSH2 0x100
0x260 MUL
0x261 SUB
0x262 AND
0x263 PUSH1 0x2
0x265 SWAP1
0x266 DIV
0x267 SWAP1
0x268 PUSH1 0x0
0x26a MSTORE
0x26b PUSH1 0x20
0x26d PUSH1 0x0
0x26f SHA3
0x270 SWAP1
0x271 PUSH1 0x1f
0x273 ADD
0x274 PUSH1 0x20
0x276 SWAP1
0x277 DIV
0x278 DUP2
0x279 ADD
0x27a SWAP3
0x27b DUP3
0x27c PUSH1 0x1f
0x27e LT
0x27f PUSH2 0x293
0x282 JUMPI
---
0x252: JUMPDEST 
0x255: V195 = S[V183]
0x256: V196 = 0x1
0x259: V197 = 0x1
0x25b: V198 = AND 0x1 V195
0x25c: V199 = ISZERO V198
0x25d: V200 = 0x100
0x260: V201 = MUL 0x100 V199
0x261: V202 = SUB V201 0x1
0x262: V203 = AND V202 V195
0x263: V204 = 0x2
0x266: V205 = DIV V203 0x2
0x268: V206 = 0x0
0x26a: M[0x0] = V183
0x26b: V207 = 0x20
0x26d: V208 = 0x0
0x26f: V209 = SHA3 0x0 0x20
0x271: V210 = 0x1f
0x273: V211 = ADD 0x1f V205
0x274: V212 = 0x20
0x277: V213 = DIV V211 0x20
0x279: V214 = ADD V209 V213
0x27c: V215 = 0x1f
0x27e: V216 = LT 0x1f V184
0x27f: V217 = 0x293
0x282: JUMPI 0x293 V216
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V186, V184]
Stack pops: 3
Stack additions: [S2, V214, S0, V209, S1]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V184, V209, V186]

================================

Block 0x283
[0x283:0x292]
---
Predecessors: [0x252]
Successors: [0x2c1]
---
0x283 DUP1
0x284 MLOAD
0x285 PUSH1 0xff
0x287 NOT
0x288 AND
0x289 DUP4
0x28a DUP1
0x28b ADD
0x28c OR
0x28d DUP6
0x28e SSTORE
0x28f PUSH2 0x2c1
0x292 JUMP
---
0x284: V218 = M[V186]
0x285: V219 = 0xff
0x287: V220 = NOT 0xff
0x288: V221 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V218
0x28b: V222 = ADD V184 V184
0x28c: V223 = OR V222 V221
0x28e: S[V183] = V223
0x28f: V224 = 0x2c1
0x292: JUMP 0x2c1
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V184, V209, V186]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V184, V209, V186]

================================

Block 0x293
[0x293:0x2a1]
---
Predecessors: [0x252]
Successors: [0x2a2, 0x2c1]
---
0x293 JUMPDEST
0x294 DUP3
0x295 DUP1
0x296 ADD
0x297 PUSH1 0x1
0x299 ADD
0x29a DUP6
0x29b SSTORE
0x29c DUP3
0x29d ISZERO
0x29e PUSH2 0x2c1
0x2a1 JUMPI
---
0x293: JUMPDEST 
0x296: V225 = ADD V184 V184
0x297: V226 = 0x1
0x299: V227 = ADD 0x1 V225
0x29b: S[V183] = V227
0x29d: V228 = ISZERO V184
0x29e: V229 = 0x2c1
0x2a1: JUMPI 0x2c1 V228
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V184, V209, V186]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V184, V209, V186]

================================

Block 0x2a2
[0x2a2:0x2a4]
---
Predecessors: [0x293]
Successors: [0x2a5]
---
0x2a2 SWAP2
0x2a3 DUP3
0x2a4 ADD
---
0x2a4: V230 = ADD V186 V184
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V184, V209, V186]
Stack pops: 3
Stack additions: [S0, S1, V230]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V186, V209, V230]

================================

Block 0x2a5
[0x2a5:0x2ad]
---
Predecessors: [0x2a2, 0x2ae]
Successors: [0x2ae, 0x2c0]
---
0x2a5 JUMPDEST
0x2a6 DUP3
0x2a7 DUP2
0x2a8 GT
0x2a9 ISZERO
0x2aa PUSH2 0x2c0
0x2ad JUMPI
---
0x2a5: JUMPDEST 
0x2a8: V231 = GT V230 S2
0x2a9: V232 = ISZERO V231
0x2aa: V233 = 0x2c0
0x2ad: JUMPI 0x2c0 V232
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214, S2, S1, V230]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214, S2, S1, V230]

================================

Block 0x2ae
[0x2ae:0x2bf]
---
Predecessors: [0x2a5]
Successors: [0x2a5]
---
0x2ae DUP3
0x2af MLOAD
0x2b0 DUP3
0x2b1 SSTORE
0x2b2 SWAP2
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP2
0x2b7 SWAP1
0x2b8 PUSH1 0x1
0x2ba ADD
0x2bb SWAP1
0x2bc PUSH2 0x2a5
0x2bf JUMP
---
0x2af: V234 = M[S2]
0x2b1: S[S1] = V234
0x2b3: V235 = 0x20
0x2b5: V236 = ADD 0x20 S2
0x2b8: V237 = 0x1
0x2ba: V238 = ADD 0x1 S1
0x2bc: V239 = 0x2a5
0x2bf: JUMP 0x2a5
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214, S2, S1, V230]
Stack pops: 3
Stack additions: [V236, V238, S0]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214, V236, V238, V230]

================================

Block 0x2c0
[0x2c0:0x2c0]
---
Predecessors: [0x2a5]
Successors: [0x2c1]
---
0x2c0 JUMPDEST
---
0x2c0: JUMPDEST 
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214, S2, S1, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214, S2, S1, V230]

================================

Block 0x2c1
[0x2c1:0x2cd]
---
Predecessors: [0x283, 0x293, 0x2c0]
Successors: [0x2d2]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 SWAP1
0x2c4 POP
0x2c5 PUSH2 0x2ce
0x2c8 SWAP2
0x2c9 SWAP1
0x2ca PUSH2 0x2d2
0x2cd JUMP
---
0x2c1: JUMPDEST 
0x2c5: V240 = 0x2ce
0x2ca: V241 = 0x2d2
0x2cd: JUMP 0x2d2
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214, S2, S1, S0]
Stack pops: 4
Stack additions: [0x2ce, S3, S1]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, V214, S1]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x2f4]
Successors: [0x239]
---
0x2ce JUMPDEST
0x2cf POP
0x2d0 SWAP1
0x2d1 JUMP
---
0x2ce: JUMPDEST 
0x2d1: JUMP 0x239
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, V214]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x154, V78, V96, V183]

================================

Block 0x2d2
[0x2d2:0x2d7]
---
Predecessors: [0x2c1]
Successors: [0x2d8]
---
0x2d2 JUMPDEST
0x2d3 PUSH2 0x2f4
0x2d6 SWAP2
0x2d7 SWAP1
---
0x2d2: JUMPDEST 
0x2d3: V242 = 0x2f4
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, V214, S0]
Stack pops: 2
Stack additions: [0x2f4, S1, S0]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, 0x2f4, V214, S0]

================================

Block 0x2d8
[0x2d8:0x2e0]
---
Predecessors: [0x2d2, 0x2e1]
Successors: [0x2e1, 0x2f0]
---
0x2d8 JUMPDEST
0x2d9 DUP1
0x2da DUP3
0x2db GT
0x2dc ISZERO
0x2dd PUSH2 0x2f0
0x2e0 JUMPI
---
0x2d8: JUMPDEST 
0x2db: V243 = GT V214 S0
0x2dc: V244 = ISZERO V243
0x2dd: V245 = 0x2f0
0x2e0: JUMPI 0x2f0 V244
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, 0x2f4, V214, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, 0x2f4, V214, S0]

================================

Block 0x2e1
[0x2e1:0x2ef]
---
Predecessors: [0x2d8]
Successors: [0x2d8]
---
0x2e1 PUSH1 0x0
0x2e3 DUP2
0x2e4 PUSH1 0x0
0x2e6 SWAP1
0x2e7 SSTORE
0x2e8 POP
0x2e9 PUSH1 0x1
0x2eb ADD
0x2ec PUSH2 0x2d8
0x2ef JUMP
---
0x2e1: V246 = 0x0
0x2e4: V247 = 0x0
0x2e7: S[S0] = 0x0
0x2e9: V248 = 0x1
0x2eb: V249 = ADD 0x1 S0
0x2ec: V250 = 0x2d8
0x2ef: JUMP 0x2d8
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, 0x2f4, V214, S0]
Stack pops: 1
Stack additions: [V249]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, 0x2f4, V214, V249]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2d8]
Successors: [0x2f4]
---
0x2f0 JUMPDEST
0x2f1 POP
0x2f2 SWAP1
0x2f3 JUMP
---
0x2f0: JUMPDEST 
0x2f3: JUMP 0x2f4
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, 0x2f4, V214, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, V214]

================================

Block 0x2f4
[0x2f4:0x2f6]
---
Predecessors: [0x2f0]
Successors: [0x2ce]
---
0x2f4 JUMPDEST
0x2f5 SWAP1
0x2f6 JUMP
---
0x2f4: JUMPDEST 
0x2f6: JUMP 0x2ce
---
Entry stack: [V11, 0x154, V78, V96, 0x239, V183, 0x2ce, V214]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x154, V78, V96, 0x239, V183, V214]

================================

Block 0x2f7
[0x2f7:0x322]
---
Predecessors: []
Successors: []
---
0x2f7 STOP
0x2f8 LOG1
0x2f9 PUSH6 0x627a7a723058
0x300 SHA3
0x301 MISSING 0xa7
0x302 SWAP14
0x303 MISSING 0x48
0x304 MISSING 0xdc
0x305 CALLDATACOPY
0x306 MOD
0x307 MISSING 0xb3
0x308 PUSH2 0x3ba
0x30b MISSING 0xe2
0x30c MISSING 0x4c
0x30d MISSING 0x48
0x30e MISSING 0xb6
0x30f MISSING 0xcb
0x310 MISSING 0xe9
0x311 CALLDATACOPY
0x312 BYTE
0x313 MISSING 0xcd
0x314 MISSING 0x2c
0x315 MISSING 0x28
0x316 MISSING 0xfc
0x317 BALANCE
0x318 MISSING 0x26
0x319 MISSING 0xcf
0x31a MISSING 0xbe
0x31b SLOAD
0x31c MISSING 0xf8
0x31d MISSING 0xa6
0x31e SWAP16
0x31f NUMBER
0x320 SHL
0x321 STOP
0x322 MISSING 0x29
---
0x2f7: STOP 
0x2f8: LOG S0 S1 S2
0x2f9: V251 = 0x627a7a723058
0x300: V252 = SHA3 0x627a7a723058 S3
0x301: MISSING 0xa7
0x303: MISSING 0x48
0x304: MISSING 0xdc
0x305: CALLDATACOPY S0 S1 S2
0x306: V253 = MOD S3 S4
0x307: MISSING 0xb3
0x308: V254 = 0x3ba
0x30b: MISSING 0xe2
0x30c: MISSING 0x4c
0x30d: MISSING 0x48
0x30e: MISSING 0xb6
0x30f: MISSING 0xcb
0x310: MISSING 0xe9
0x311: CALLDATACOPY S0 S1 S2
0x312: V255 = BYTE S3 S4
0x313: MISSING 0xcd
0x314: MISSING 0x2c
0x315: MISSING 0x28
0x316: MISSING 0xfc
0x317: V256 = BALANCE S0
0x318: MISSING 0x26
0x319: MISSING 0xcf
0x31a: MISSING 0xbe
0x31b: V257 = S[S0]
0x31c: MISSING 0xf8
0x31d: MISSING 0xa6
0x31f: V258 = NUMBER
0x320: V259 = SHL V258 S16
0x321: STOP 
0x322: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V252, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V253, 0x3ba, V255, V256, V257, V259, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0xb2225351
Entry block: 0x51
Exit block: 0xe2
Body: 0x51, 0x58, 0x5c, 0x75, 0x9a, 0xa3, 0xb5, 0xc9, 0xe2, 0x156, 0x15e, 0x1c1, 0x1c9, 0x1dc, 0x1ea, 0x1fe, 0x207, 0x23e

Function 1:
Public function signature: 0xc80e0ddd
Entry block: 0xf0
Exit block: 0x154
Body: 0xf0, 0xf7, 0xfb, 0x154, 0x213, 0x239, 0x252, 0x283, 0x293, 0x2a2, 0x2a5, 0x2ae, 0x2c0, 0x2c1, 0x2ce, 0x2d2, 0x2d8, 0x2e1, 0x2f0, 0x2f4

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

