Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x2d08d408
0x34 EQ
0x35 PUSH2 0x5e
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x2d08d408
0x34: V9 = EQ 0x2d08d408 V7
0x35: V10 = 0x5e
0x38: JUMPI 0x5e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xed]
---
0x39 DUP1
0x3a PUSH4 0x70e44c6a
0x3f EQ
0x40 PUSH2 0xed
0x43 JUMPI
---
0x3a: V11 = 0x70e44c6a
0x3f: V12 = EQ 0x70e44c6a V7
0x40: V13 = 0xed
0x43: JUMPI 0xed V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xf7]
---
0x44 DUP1
0x45 PUSH4 0xc422d09b
0x4a EQ
0x4b PUSH2 0xf7
0x4e JUMPI
---
0x45: V14 = 0xc422d09b
0x4a: V15 = EQ 0xc422d09b V7
0x4b: V16 = 0xf7
0x4e: JUMPI 0xf7 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x10c]
---
0x4f DUP1
0x50 PUSH4 0xf2853292
0x55 EQ
0x56 PUSH2 0x10c
0x59 JUMPI
---
0x50: V17 = 0xf2853292
0x55: V18 = EQ 0xf2853292 V7
0x56: V19 = 0x10c
0x59: JUMPI 0x10c V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5d]
---
Predecessors: [0x4f]
Successors: []
---
0x5a PUSH1 0x0
0x5c DUP1
0x5d REVERT
---
0x5a: V20 = 0x0
0x5d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5e
[0x5e:0xea]
---
Predecessors: [0x0]
Successors: [0x145]
---
0x5e JUMPDEST
0x5f PUSH2 0xeb
0x62 PUSH1 0x4
0x64 DUP1
0x65 DUP1
0x66 CALLDATALOAD
0x67 SWAP1
0x68 PUSH1 0x20
0x6a ADD
0x6b SWAP1
0x6c DUP3
0x6d ADD
0x6e DUP1
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 DUP1
0x76 DUP1
0x77 PUSH1 0x20
0x79 MUL
0x7a PUSH1 0x20
0x7c ADD
0x7d PUSH1 0x40
0x7f MLOAD
0x80 SWAP1
0x81 DUP2
0x82 ADD
0x83 PUSH1 0x40
0x85 MSTORE
0x86 DUP1
0x87 SWAP4
0x88 SWAP3
0x89 SWAP2
0x8a SWAP1
0x8b DUP2
0x8c DUP2
0x8d MSTORE
0x8e PUSH1 0x20
0x90 ADD
0x91 DUP4
0x92 DUP4
0x93 PUSH1 0x20
0x95 MUL
0x96 DUP1
0x97 DUP3
0x98 DUP5
0x99 CALLDATACOPY
0x9a DUP3
0x9b ADD
0x9c SWAP2
0x9d POP
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 SWAP2
0xa4 SWAP1
0xa5 DUP1
0xa6 CALLDATALOAD
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac DUP3
0xad ADD
0xae DUP1
0xaf CALLDATALOAD
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 DUP1
0xb6 DUP1
0xb7 PUSH1 0x20
0xb9 MUL
0xba PUSH1 0x20
0xbc ADD
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 ADD
0xc3 PUSH1 0x40
0xc5 MSTORE
0xc6 DUP1
0xc7 SWAP4
0xc8 SWAP3
0xc9 SWAP2
0xca SWAP1
0xcb DUP2
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x20
0xd0 ADD
0xd1 DUP4
0xd2 DUP4
0xd3 PUSH1 0x20
0xd5 MUL
0xd6 DUP1
0xd7 DUP3
0xd8 DUP5
0xd9 CALLDATACOPY
0xda DUP3
0xdb ADD
0xdc SWAP2
0xdd POP
0xde POP
0xdf POP
0xe0 POP
0xe1 POP
0xe2 POP
0xe3 SWAP2
0xe4 SWAP1
0xe5 POP
0xe6 POP
0xe7 PUSH2 0x145
0xea JUMP
---
0x5e: JUMPDEST 
0x5f: V21 = 0xeb
0x62: V22 = 0x4
0x66: V23 = CALLDATALOAD 0x4
0x68: V24 = 0x20
0x6a: V25 = ADD 0x20 0x4
0x6d: V26 = ADD 0x4 V23
0x6f: V27 = CALLDATALOAD V26
0x71: V28 = 0x20
0x73: V29 = ADD 0x20 V26
0x77: V30 = 0x20
0x79: V31 = MUL 0x20 V27
0x7a: V32 = 0x20
0x7c: V33 = ADD 0x20 V31
0x7d: V34 = 0x40
0x7f: V35 = M[0x40]
0x82: V36 = ADD V35 V33
0x83: V37 = 0x40
0x85: M[0x40] = V36
0x8d: M[V35] = V27
0x8e: V38 = 0x20
0x90: V39 = ADD 0x20 V35
0x93: V40 = 0x20
0x95: V41 = MUL 0x20 V27
0x99: CALLDATACOPY V39 V29 V41
0x9b: V42 = ADD V39 V41
0xa6: V43 = CALLDATALOAD 0x24
0xa8: V44 = 0x20
0xaa: V45 = ADD 0x20 0x24
0xad: V46 = ADD 0x4 V43
0xaf: V47 = CALLDATALOAD V46
0xb1: V48 = 0x20
0xb3: V49 = ADD 0x20 V46
0xb7: V50 = 0x20
0xb9: V51 = MUL 0x20 V47
0xba: V52 = 0x20
0xbc: V53 = ADD 0x20 V51
0xbd: V54 = 0x40
0xbf: V55 = M[0x40]
0xc2: V56 = ADD V55 V53
0xc3: V57 = 0x40
0xc5: M[0x40] = V56
0xcd: M[V55] = V47
0xce: V58 = 0x20
0xd0: V59 = ADD 0x20 V55
0xd3: V60 = 0x20
0xd5: V61 = MUL 0x20 V47
0xd9: CALLDATACOPY V59 V49 V61
0xdb: V62 = ADD V59 V61
0xe7: V63 = 0x145
0xea: JUMP 0x145
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xeb, V35, V55]
Exit stack: [V7, 0xeb, V35, V55]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: [0x261]
Successors: []
---
0xeb JUMPDEST
0xec STOP
---
0xeb: JUMPDEST 
0xec: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0x39]
Successors: [0x268]
---
0xed JUMPDEST
0xee PUSH2 0xf5
0xf1 PUSH2 0x268
0xf4 JUMP
---
0xed: JUMPDEST 
0xee: V64 = 0xf5
0xf1: V65 = 0x268
0xf4: JUMP 0x268
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xf5]
Exit stack: [V7, 0xf5]

================================

Block 0xf5
[0xf5:0xf6]
---
Predecessors: [0x2e0]
Successors: []
---
0xf5 JUMPDEST
0xf6 STOP
---
0xf5: JUMPDEST 
0xf6: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf7
[0xf7:0xfd]
---
Predecessors: [0x44]
Successors: [0xfe, 0x102]
---
0xf7 JUMPDEST
0xf8 CALLVALUE
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf7: JUMPDEST 
0xf8: V66 = CALLVALUE
0xf9: V67 = ISZERO V66
0xfa: V68 = 0x102
0xfd: JUMPI 0x102 V67
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf7]
Successors: []
---
0xfe PUSH1 0x0
0x100 DUP1
0x101 REVERT
---
0xfe: V69 = 0x0
0x101: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x102
[0x102:0x109]
---
Predecessors: [0xf7]
Successors: [0x2e2]
---
0x102 JUMPDEST
0x103 PUSH2 0x10a
0x106 PUSH2 0x2e2
0x109 JUMP
---
0x102: JUMPDEST 
0x103: V70 = 0x10a
0x106: V71 = 0x2e2
0x109: JUMP 0x2e2
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V7, 0x10a]

================================

Block 0x10a
[0x10a:0x10b]
---
Predecessors: [0x33e]
Successors: []
---
0x10a JUMPDEST
0x10b STOP
---
0x10a: JUMPDEST 
0x10b: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10c
[0x10c:0x112]
---
Predecessors: [0x4f]
Successors: [0x113, 0x117]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10c: JUMPDEST 
0x10d: V72 = CALLVALUE
0x10e: V73 = ISZERO V72
0x10f: V74 = 0x117
0x112: JUMPI 0x117 V73
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10c]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V75 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x117
[0x117:0x142]
---
Predecessors: [0x10c]
Successors: [0x3a2]
---
0x117 JUMPDEST
0x118 PUSH2 0x143
0x11b PUSH1 0x4
0x11d DUP1
0x11e DUP1
0x11f CALLDATALOAD
0x120 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x135 AND
0x136 SWAP1
0x137 PUSH1 0x20
0x139 ADD
0x13a SWAP1
0x13b SWAP2
0x13c SWAP1
0x13d POP
0x13e POP
0x13f PUSH2 0x3a2
0x142 JUMP
---
0x117: JUMPDEST 
0x118: V76 = 0x143
0x11b: V77 = 0x4
0x11f: V78 = CALLDATALOAD 0x4
0x120: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x135: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x137: V81 = 0x20
0x139: V82 = ADD 0x20 0x4
0x13f: V83 = 0x3a2
0x142: JUMP 0x3a2
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x143, V80]
Exit stack: [V7, 0x143, V80]

================================

Block 0x143
[0x143:0x144]
---
Predecessors: [0x3fd]
Successors: []
---
0x143 JUMPDEST
0x144 STOP
---
0x143: JUMPDEST 
0x144: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x145
[0x145:0x155]
---
Predecessors: [0x5e]
Successors: [0x156, 0x15a]
---
0x145 JUMPDEST
0x146 PUSH1 0x0
0x148 DUP1
0x149 PUSH1 0x0
0x14b DUP5
0x14c MLOAD
0x14d DUP5
0x14e MLOAD
0x14f EQ
0x150 ISZERO
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x145: JUMPDEST 
0x146: V84 = 0x0
0x149: V85 = 0x0
0x14c: V86 = M[V35]
0x14e: V87 = M[V55]
0x14f: V88 = EQ V87 V86
0x150: V89 = ISZERO V88
0x151: V90 = ISZERO V89
0x152: V91 = 0x15a
0x155: JUMPI 0x15a V90
---
Entry stack: [V7, 0xeb, V35, V55]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V7, 0xeb, V35, V55, 0x0, 0x0, 0x0]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x145]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V92 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V7, 0xeb, V35, V55, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, 0x0, 0x0, 0x0]

================================

Block 0x15a
[0x15a:0x15e]
---
Predecessors: [0x145]
Successors: [0x15f]
---
0x15a JUMPDEST
0x15b PUSH1 0x0
0x15d SWAP2
0x15e POP
---
0x15a: JUMPDEST 
0x15b: V93 = 0x0
---
Entry stack: [V7, 0xeb, V35, V55, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V7, 0xeb, V35, V55, 0x0, 0x0, 0x0]

================================

Block 0x15f
[0x15f:0x168]
---
Predecessors: [0x15a, 0x1b3]
Successors: [0x169, 0x1ce]
---
0x15f JUMPDEST
0x160 DUP4
0x161 MLOAD
0x162 DUP3
0x163 LT
0x164 ISZERO
0x165 PUSH2 0x1ce
0x168 JUMPI
---
0x15f: JUMPDEST 
0x161: V94 = M[V55]
0x163: V95 = LT S1 V94
0x164: V96 = ISZERO V95
0x165: V97 = 0x1ce
0x168: JUMPI 0x1ce V96
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]

================================

Block 0x169
[0x169:0x176]
---
Predecessors: [0x15f]
Successors: [0x177, 0x178]
---
0x169 PUSH1 0x0
0x16b DUP6
0x16c DUP4
0x16d DUP2
0x16e MLOAD
0x16f DUP2
0x170 LT
0x171 ISZERO
0x172 ISZERO
0x173 PUSH2 0x178
0x176 JUMPI
---
0x169: V98 = 0x0
0x16e: V99 = M[V35]
0x170: V100 = LT S1 V99
0x171: V101 = ISZERO V100
0x172: V102 = ISZERO V101
0x173: V103 = 0x178
0x176: JUMPI 0x178 V102
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, S4, S1]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, 0x0, 0x0, V35, S1]

================================

Block 0x177
[0x177:0x177]
---
Predecessors: [0x169]
Successors: []
---
0x177 INVALID
---
0x177: INVALID 
---
Entry stack: [V7, 0xeb, V35, V55, S5, S4, 0x0, 0x0, V35, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S5, S4, 0x0, 0x0, V35, S0]

================================

Block 0x178
[0x178:0x1a0]
---
Predecessors: [0x169]
Successors: [0x1a1, 0x1a5]
---
0x178 JUMPDEST
0x179 SWAP1
0x17a PUSH1 0x20
0x17c ADD
0x17d SWAP1
0x17e PUSH1 0x20
0x180 MUL
0x181 ADD
0x182 MLOAD
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 EQ
0x19a ISZERO
0x19b ISZERO
0x19c ISZERO
0x19d PUSH2 0x1a5
0x1a0 JUMPI
---
0x178: JUMPDEST 
0x17a: V104 = 0x20
0x17c: V105 = ADD 0x20 V35
0x17e: V106 = 0x20
0x180: V107 = MUL 0x20 S0
0x181: V108 = ADD V107 V105
0x182: V109 = M[V108]
0x183: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x199: V112 = EQ V111 0x0
0x19a: V113 = ISZERO V112
0x19b: V114 = ISZERO V113
0x19c: V115 = ISZERO V114
0x19d: V116 = 0x1a5
0x1a0: JUMPI 0x1a5 V115
---
Entry stack: [V7, 0xeb, V35, V55, S5, S4, 0x0, 0x0, V35, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S5, S4, 0x0]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x178]
Successors: []
---
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 REVERT
---
0x1a1: V117 = 0x0
0x1a4: REVERT 0x0 0x0
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]

================================

Block 0x1a5
[0x1a5:0x1b1]
---
Predecessors: [0x178]
Successors: [0x1b2, 0x1b3]
---
0x1a5 JUMPDEST
0x1a6 DUP4
0x1a7 DUP3
0x1a8 DUP2
0x1a9 MLOAD
0x1aa DUP2
0x1ab LT
0x1ac ISZERO
0x1ad ISZERO
0x1ae PUSH2 0x1b3
0x1b1 JUMPI
---
0x1a5: JUMPDEST 
0x1a9: V118 = M[V55]
0x1ab: V119 = LT S1 V118
0x1ac: V120 = ISZERO V119
0x1ad: V121 = ISZERO V120
0x1ae: V122 = 0x1b3
0x1b1: JUMPI 0x1b3 V121
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S1]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, 0x0, V55, S1]

================================

Block 0x1b2
[0x1b2:0x1b2]
---
Predecessors: [0x1a5]
Successors: []
---
0x1b2 INVALID
---
0x1b2: INVALID 
---
Entry stack: [V7, 0xeb, V35, V55, S4, S3, 0x0, V55, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S4, S3, 0x0, V55, S0]

================================

Block 0x1b3
[0x1b3:0x1cd]
---
Predecessors: [0x1a5]
Successors: [0x15f]
---
0x1b3 JUMPDEST
0x1b4 SWAP1
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP1
0x1b9 PUSH1 0x20
0x1bb MUL
0x1bc ADD
0x1bd MLOAD
0x1be DUP4
0x1bf ADD
0x1c0 SWAP3
0x1c1 POP
0x1c2 DUP2
0x1c3 DUP1
0x1c4 PUSH1 0x1
0x1c6 ADD
0x1c7 SWAP3
0x1c8 POP
0x1c9 POP
0x1ca PUSH2 0x15f
0x1cd JUMP
---
0x1b3: JUMPDEST 
0x1b5: V123 = 0x20
0x1b7: V124 = ADD 0x20 V55
0x1b9: V125 = 0x20
0x1bb: V126 = MUL 0x20 S0
0x1bc: V127 = ADD V126 V124
0x1bd: V128 = M[V127]
0x1bf: V129 = ADD S4 V128
0x1c4: V130 = 0x1
0x1c6: V131 = ADD 0x1 S3
0x1ca: V132 = 0x15f
0x1cd: JUMP 0x15f
---
Entry stack: [V7, 0xeb, V35, V55, S4, S3, 0x0, V55, S0]
Stack pops: 5
Stack additions: [V129, V131, S2]
Exit stack: [V7, 0xeb, V35, V55, V129, V131, 0x0]

================================

Block 0x1ce
[0x1ce:0x1d7]
---
Predecessors: [0x15f]
Successors: [0x1d8, 0x261]
---
0x1ce JUMPDEST
0x1cf DUP3
0x1d0 CALLVALUE
0x1d1 LT
0x1d2 ISZERO
0x1d3 ISZERO
0x1d4 PUSH2 0x261
0x1d7 JUMPI
---
0x1ce: JUMPDEST 
0x1d0: V133 = CALLVALUE
0x1d1: V134 = LT V133 S2
0x1d2: V135 = ISZERO V134
0x1d3: V136 = ISZERO V135
0x1d4: V137 = 0x261
0x1d7: JUMPI 0x261 V136
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1ce]
Successors: [0x1dc]
---
0x1d8 PUSH1 0x0
0x1da SWAP1
0x1db POP
---
0x1d8: V138 = 0x0
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, 0x0]

================================

Block 0x1dc
[0x1dc:0x1e5]
---
Predecessors: [0x1d8, 0x253]
Successors: [0x1e6, 0x260]
---
0x1dc JUMPDEST
0x1dd DUP5
0x1de MLOAD
0x1df DUP2
0x1e0 LT
0x1e1 ISZERO
0x1e2 PUSH2 0x260
0x1e5 JUMPI
---
0x1dc: JUMPDEST 
0x1de: V139 = M[V35]
0x1e0: V140 = LT S0 V139
0x1e1: V141 = ISZERO V140
0x1e2: V142 = 0x260
0x1e5: JUMPI 0x260 V141
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, S0]

================================

Block 0x1e6
[0x1e6:0x1f1]
---
Predecessors: [0x1dc]
Successors: [0x1f2, 0x1f3]
---
0x1e6 DUP5
0x1e7 DUP2
0x1e8 DUP2
0x1e9 MLOAD
0x1ea DUP2
0x1eb LT
0x1ec ISZERO
0x1ed ISZERO
0x1ee PUSH2 0x1f3
0x1f1 JUMPI
---
0x1e9: V143 = M[V35]
0x1eb: V144 = LT S0 V143
0x1ec: V145 = ISZERO V144
0x1ed: V146 = ISZERO V145
0x1ee: V147 = 0x1f3
0x1f1: JUMPI 0x1f3 V146
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S0]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, S0, V35, S0]

================================

Block 0x1f2
[0x1f2:0x1f2]
---
Predecessors: [0x1e6]
Successors: []
---
0x1f2 INVALID
---
0x1f2: INVALID 
---
Entry stack: [V7, 0xeb, V35, V55, S4, S3, S2, V35, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S4, S3, S2, V35, S0]

================================

Block 0x1f3
[0x1f3:0x222]
---
Predecessors: [0x1e6]
Successors: [0x223, 0x224]
---
0x1f3 JUMPDEST
0x1f4 SWAP1
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP1
0x1f9 PUSH1 0x20
0x1fb MUL
0x1fc ADD
0x1fd MLOAD
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 PUSH2 0x8fc
0x217 DUP6
0x218 DUP4
0x219 DUP2
0x21a MLOAD
0x21b DUP2
0x21c LT
0x21d ISZERO
0x21e ISZERO
0x21f PUSH2 0x224
0x222 JUMPI
---
0x1f3: JUMPDEST 
0x1f5: V148 = 0x20
0x1f7: V149 = ADD 0x20 V35
0x1f9: V150 = 0x20
0x1fb: V151 = MUL 0x20 S0
0x1fc: V152 = ADD V151 V149
0x1fd: V153 = M[V152]
0x1fe: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x214: V156 = 0x8fc
0x21a: V157 = M[V55]
0x21c: V158 = LT S2 V157
0x21d: V159 = ISZERO V158
0x21e: V160 = ISZERO V159
0x21f: V161 = 0x224
0x222: JUMPI 0x224 V160
---
Entry stack: [V7, 0xeb, V35, V55, S4, S3, S2, V35, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V155, 0x8fc, S5, S2]
Exit stack: [V7, 0xeb, V35, V55, S4, S3, S2, V155, 0x8fc, V55, S2]

================================

Block 0x223
[0x223:0x223]
---
Predecessors: [0x1f3]
Successors: []
---
0x223 INVALID
---
0x223: INVALID 
---
Entry stack: [V7, 0xeb, V35, V55, S6, S5, S4, V155, 0x8fc, V55, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S6, S5, S4, V155, 0x8fc, V55, S0]

================================

Block 0x224
[0x224:0x24e]
---
Predecessors: [0x1f3]
Successors: [0x24f, 0x253]
---
0x224 JUMPDEST
0x225 SWAP1
0x226 PUSH1 0x20
0x228 ADD
0x229 SWAP1
0x22a PUSH1 0x20
0x22c MUL
0x22d ADD
0x22e MLOAD
0x22f SWAP1
0x230 DUP2
0x231 ISZERO
0x232 MUL
0x233 SWAP1
0x234 PUSH1 0x40
0x236 MLOAD
0x237 PUSH1 0x0
0x239 PUSH1 0x40
0x23b MLOAD
0x23c DUP1
0x23d DUP4
0x23e SUB
0x23f DUP2
0x240 DUP6
0x241 DUP9
0x242 DUP9
0x243 CALL
0x244 SWAP4
0x245 POP
0x246 POP
0x247 POP
0x248 POP
0x249 ISZERO
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x224: JUMPDEST 
0x226: V162 = 0x20
0x228: V163 = ADD 0x20 V55
0x22a: V164 = 0x20
0x22c: V165 = MUL 0x20 S0
0x22d: V166 = ADD V165 V163
0x22e: V167 = M[V166]
0x231: V168 = ISZERO V167
0x232: V169 = MUL V168 0x8fc
0x234: V170 = 0x40
0x236: V171 = M[0x40]
0x237: V172 = 0x0
0x239: V173 = 0x40
0x23b: V174 = M[0x40]
0x23e: V175 = SUB V171 V174
0x243: V176 = CALL V169 V155 V167 V174 V175 V174 0x0
0x249: V177 = ISZERO V176
0x24a: V178 = ISZERO V177
0x24b: V179 = 0x253
0x24e: JUMPI 0x253 V178
---
Entry stack: [V7, 0xeb, V35, V55, S6, S5, S4, V155, 0x8fc, V55, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S6, S5, S4]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x224]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V180 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S2, S1, S0]

================================

Block 0x253
[0x253:0x25f]
---
Predecessors: [0x224]
Successors: [0x1dc]
---
0x253 JUMPDEST
0x254 DUP1
0x255 DUP1
0x256 PUSH1 0x1
0x258 ADD
0x259 SWAP2
0x25a POP
0x25b POP
0x25c PUSH2 0x1dc
0x25f JUMP
---
0x253: JUMPDEST 
0x256: V181 = 0x1
0x258: V182 = ADD 0x1 S0
0x25c: V183 = 0x1dc
0x25f: JUMP 0x1dc
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, S0]
Stack pops: 1
Stack additions: [V182]
Exit stack: [V7, 0xeb, V35, V55, S2, S1, V182]

================================

Block 0x260
[0x260:0x260]
---
Predecessors: [0x1dc]
Successors: [0x261]
---
0x260 JUMPDEST
---
0x260: JUMPDEST 
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xeb, V35, V55, S2, S1, S0]

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0x1ce, 0x260]
Successors: [0xeb]
---
0x261 JUMPDEST
0x262 POP
0x263 POP
0x264 POP
0x265 POP
0x266 POP
0x267 JUMP
---
0x261: JUMPDEST 
0x267: JUMP 0xeb
---
Entry stack: [V7, 0xeb, V35, V55, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V7]

================================

Block 0x268
[0x268:0x2db]
---
Predecessors: [0xed]
Successors: [0x2dc, 0x2e0]
---
0x268 JUMPDEST
0x269 PUSH1 0x0
0x26b DUP1
0x26c SWAP1
0x26d SLOAD
0x26e SWAP1
0x26f PUSH2 0x100
0x272 EXP
0x273 SWAP1
0x274 DIV
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 PUSH2 0x8fc
0x2a4 ADDRESS
0x2a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ba AND
0x2bb BALANCE
0x2bc SWAP1
0x2bd DUP2
0x2be ISZERO
0x2bf MUL
0x2c0 SWAP1
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 PUSH1 0x0
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca DUP4
0x2cb SUB
0x2cc DUP2
0x2cd DUP6
0x2ce DUP9
0x2cf DUP9
0x2d0 CALL
0x2d1 SWAP4
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 ISZERO
0x2d7 ISZERO
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x268: JUMPDEST 
0x269: V184 = 0x0
0x26d: V185 = S[0x0]
0x26f: V186 = 0x100
0x272: V187 = EXP 0x100 0x0
0x274: V188 = DIV V185 0x1
0x275: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x28b: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x2a1: V193 = 0x8fc
0x2a4: V194 = ADDRESS
0x2a5: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x2bb: V197 = BALANCE V196
0x2be: V198 = ISZERO V197
0x2bf: V199 = MUL V198 0x8fc
0x2c1: V200 = 0x40
0x2c3: V201 = M[0x40]
0x2c4: V202 = 0x0
0x2c6: V203 = 0x40
0x2c8: V204 = M[0x40]
0x2cb: V205 = SUB V201 V204
0x2d0: V206 = CALL V199 V192 V197 V204 V205 V204 0x0
0x2d6: V207 = ISZERO V206
0x2d7: V208 = ISZERO V207
0x2d8: V209 = 0x2e0
0x2db: JUMPI 0x2e0 V208
---
Entry stack: [V7, 0xf5]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf5]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x268]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V210 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V7, 0xf5]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf5]

================================

Block 0x2e0
[0x2e0:0x2e1]
---
Predecessors: [0x268]
Successors: [0xf5]
---
0x2e0 JUMPDEST
0x2e1 JUMP
---
0x2e0: JUMPDEST 
0x2e1: JUMP 0xf5
---
Entry stack: [V7, 0xf5]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x2e2
[0x2e2:0x339]
---
Predecessors: [0x102]
Successors: [0x33a, 0x33e]
---
0x2e2 JUMPDEST
0x2e3 CALLER
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa PUSH1 0x1
0x2fc PUSH1 0x0
0x2fe SWAP1
0x2ff SLOAD
0x300 SWAP1
0x301 PUSH2 0x100
0x304 EXP
0x305 SWAP1
0x306 DIV
0x307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31c AND
0x31d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x332 AND
0x333 EQ
0x334 ISZERO
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V211 = CALLER
0x2e4: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x2fa: V214 = 0x1
0x2fc: V215 = 0x0
0x2ff: V216 = S[0x1]
0x301: V217 = 0x100
0x304: V218 = EXP 0x100 0x0
0x306: V219 = DIV V216 0x1
0x307: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x31d: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x332: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x333: V224 = EQ V223 V213
0x334: V225 = ISZERO V224
0x335: V226 = ISZERO V225
0x336: V227 = 0x33e
0x339: JUMPI 0x33e V226
---
Entry stack: [V7, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x10a]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x2e2]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V228 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V7, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x10a]

================================

Block 0x33e
[0x33e:0x3a1]
---
Predecessors: [0x2e2]
Successors: [0x10a]
---
0x33e JUMPDEST
0x33f PUSH1 0x1
0x341 PUSH1 0x0
0x343 SWAP1
0x344 SLOAD
0x345 SWAP1
0x346 PUSH2 0x100
0x349 EXP
0x34a SWAP1
0x34b DIV
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 PUSH1 0x0
0x364 DUP1
0x365 PUSH2 0x100
0x368 EXP
0x369 DUP2
0x36a SLOAD
0x36b DUP2
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 MUL
0x382 NOT
0x383 AND
0x384 SWAP1
0x385 DUP4
0x386 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39b AND
0x39c MUL
0x39d OR
0x39e SWAP1
0x39f SSTORE
0x3a0 POP
0x3a1 JUMP
---
0x33e: JUMPDEST 
0x33f: V229 = 0x1
0x341: V230 = 0x0
0x344: V231 = S[0x1]
0x346: V232 = 0x100
0x349: V233 = EXP 0x100 0x0
0x34b: V234 = DIV V231 0x1
0x34c: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x362: V237 = 0x0
0x365: V238 = 0x100
0x368: V239 = EXP 0x100 0x0
0x36a: V240 = S[0x0]
0x36c: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V242 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x382: V243 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x383: V244 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V240
0x386: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x39b: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x39c: V247 = MUL V246 0x1
0x39d: V248 = OR V247 V244
0x39f: S[0x0] = V248
0x3a1: JUMP 0x10a
---
Entry stack: [V7, 0x10a]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x3a2
[0x3a2:0x3f8]
---
Predecessors: [0x117]
Successors: [0x3f9, 0x3fd]
---
0x3a2 JUMPDEST
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 SWAP1
0x3a7 SLOAD
0x3a8 SWAP1
0x3a9 PUSH2 0x100
0x3ac EXP
0x3ad SWAP1
0x3ae DIV
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3da AND
0x3db CALLER
0x3dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f1 AND
0x3f2 EQ
0x3f3 ISZERO
0x3f4 ISZERO
0x3f5 PUSH2 0x3fd
0x3f8 JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V249 = 0x0
0x3a7: V250 = S[0x0]
0x3a9: V251 = 0x100
0x3ac: V252 = EXP 0x100 0x0
0x3ae: V253 = DIV V250 0x1
0x3af: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x3c5: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x3da: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x3db: V258 = CALLER
0x3dc: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x3f2: V261 = EQ V260 V257
0x3f3: V262 = ISZERO V261
0x3f4: V263 = ISZERO V262
0x3f5: V264 = 0x3fd
0x3f8: JUMPI 0x3fd V263
---
Entry stack: [V7, 0x143, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x143, V80]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3a2]
Successors: []
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
---
0x3f9: V265 = 0x0
0x3fc: REVERT 0x0 0x0
---
Entry stack: [V7, 0x143, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x143, V80]

================================

Block 0x3fd
[0x3fd:0x440]
---
Predecessors: [0x3a2]
Successors: [0x143]
---
0x3fd JUMPDEST
0x3fe DUP1
0x3ff PUSH1 0x1
0x401 PUSH1 0x0
0x403 PUSH2 0x100
0x406 EXP
0x407 DUP2
0x408 SLOAD
0x409 DUP2
0x40a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41f MUL
0x420 NOT
0x421 AND
0x422 SWAP1
0x423 DUP4
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a MUL
0x43b OR
0x43c SWAP1
0x43d SSTORE
0x43e POP
0x43f POP
0x440 JUMP
---
0x3fd: JUMPDEST 
0x3ff: V266 = 0x1
0x401: V267 = 0x0
0x403: V268 = 0x100
0x406: V269 = EXP 0x100 0x0
0x408: V270 = S[0x1]
0x40a: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V272 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x420: V273 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x421: V274 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V270
0x424: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x43a: V277 = MUL V276 0x1
0x43b: V278 = OR V277 V274
0x43d: S[0x1] = V278
0x440: JUMP 0x143
---
Entry stack: [V7, 0x143, V80]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x441
[0x441:0x471]
---
Predecessors: []
Successors: []
---
0x441 STOP
0x442 LOG1
0x443 PUSH6 0x627a7a723058
0x44a SHA3
0x44b MISSING 0xdd
0x44c MISSING 0xab
0x44d SELFDESTRUCT
0x44e MISSING 0x2a
0x44f CREATE
0x450 CALL
0x451 CODESIZE
0x452 SWAP10
0x453 MISSING 0x2e
0x454 PUSH29 0x88945e57c484472ffdacde1d847c516489b7cdd2a3b80029
---
0x441: STOP 
0x442: LOG S0 S1 S2
0x443: V279 = 0x627a7a723058
0x44a: V280 = SHA3 0x627a7a723058 S3
0x44b: MISSING 0xdd
0x44c: MISSING 0xab
0x44d: SELFDESTRUCT S0
0x44e: MISSING 0x2a
0x44f: V281 = CREATE S0 S1 S2
0x450: V282 = CALL V281 S3 S4 S5 S6 S7 S8
0x451: V283 = CODESIZE
0x453: MISSING 0x2e
0x454: V284 = 0x88945e57c484472ffdacde1d847c516489b7cdd2a3b80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V280, S17, V282, S9, S10, S11, S12, S13, S14, S15, S16, V283, 0x88945e57c484472ffdacde1d847c516489b7cdd2a3b80029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d08d408
Entry block: 0x5e
Exit block: 0x24f
Body: 0x5e, 0xeb, 0x145, 0x156, 0x15a, 0x15f, 0x169, 0x177, 0x178, 0x1a1, 0x1a5, 0x1b2, 0x1b3, 0x1ce, 0x1d8, 0x1dc, 0x1e6, 0x1f2, 0x1f3, 0x223, 0x224, 0x24f, 0x253, 0x260, 0x261

Function 1:
Public function signature: 0x70e44c6a
Entry block: 0xed
Exit block: 0xf5
Body: 0xed, 0xf5, 0x268, 0x2dc, 0x2e0

Function 2:
Public function signature: 0xc422d09b
Entry block: 0xf7
Exit block: 0x10a
Body: 0xf7, 0xfe, 0x102, 0x10a, 0x2e2, 0x33a, 0x33e

Function 3:
Public function signature: 0xf2853292
Entry block: 0x10c
Exit block: 0x143
Body: 0x10c, 0x113, 0x117, 0x143, 0x3a2, 0x3f9, 0x3fd

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

