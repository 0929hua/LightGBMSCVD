Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1249c58b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1249c58b
0x3c: V13 = EQ 0x1249c58b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x66]
---
0x41 DUP1
0x42 PUSH4 0x42966c68
0x47 EQ
0x48 PUSH2 0x66
0x4b JUMPI
---
0x42: V15 = 0x42966c68
0x47: V16 = EQ 0x42966c68 V11
0x48: V17 = 0x66
0x4b: JUMPI 0x66 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x93]
---
0x4c DUP1
0x4d PUSH4 0xa9059cbb
0x52 EQ
0x53 PUSH2 0x93
0x56 JUMPI
---
0x4d: V18 = 0xa9059cbb
0x52: V19 = EQ 0xa9059cbb V11
0x53: V20 = 0x93
0x56: JUMPI 0x93 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0xe0]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0xe0
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V22 = 0x64
0x60: V23 = 0xe0
0x63: JUMP 0xe0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0x65]
---
Predecessors: [0xe0]
Successors: []
---
0x64 JUMPDEST
0x65 STOP
---
0x64: JUMPDEST 
0x65: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0x41]
Successors: [0x6e, 0x72]
---
0x66 JUMPDEST
0x67 CALLVALUE
0x68 DUP1
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x66: JUMPDEST 
0x67: V24 = CALLVALUE
0x69: V25 = ISZERO V24
0x6a: V26 = 0x72
0x6d: JUMPI 0x72 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x66]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x72
[0x72:0x90]
---
Predecessors: [0x66]
Successors: [0x12e]
---
0x72 JUMPDEST
0x73 POP
0x74 PUSH2 0x91
0x77 PUSH1 0x4
0x79 DUP1
0x7a CALLDATASIZE
0x7b SUB
0x7c DUP2
0x7d ADD
0x7e SWAP1
0x7f DUP1
0x80 DUP1
0x81 CALLDATALOAD
0x82 SWAP1
0x83 PUSH1 0x20
0x85 ADD
0x86 SWAP1
0x87 SWAP3
0x88 SWAP2
0x89 SWAP1
0x8a POP
0x8b POP
0x8c POP
0x8d PUSH2 0x12e
0x90 JUMP
---
0x72: JUMPDEST 
0x74: V28 = 0x91
0x77: V29 = 0x4
0x7a: V30 = CALLDATASIZE
0x7b: V31 = SUB V30 0x4
0x7d: V32 = ADD 0x4 V31
0x81: V33 = CALLDATALOAD 0x4
0x83: V34 = 0x20
0x85: V35 = ADD 0x20 0x4
0x8d: V36 = 0x12e
0x90: JUMP 0x12e
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x91, V33]
Exit stack: [V11, 0x91, V33]

================================

Block 0x91
[0x91:0x92]
---
Predecessors: [0x20d]
Successors: []
---
0x91 JUMPDEST
0x92 STOP
---
0x91: JUMPDEST 
0x92: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x9a]
---
Predecessors: [0x4c]
Successors: [0x9b, 0x9f]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 DUP1
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x96: V38 = ISZERO V37
0x97: V39 = 0x9f
0x9a: JUMPI 0x9f V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x93]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V40 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9f
[0x9f:0xdd]
---
Predecessors: [0x93]
Successors: [0x211]
---
0x9f JUMPDEST
0xa0 POP
0xa1 PUSH2 0xde
0xa4 PUSH1 0x4
0xa6 DUP1
0xa7 CALLDATASIZE
0xa8 SUB
0xa9 DUP2
0xaa ADD
0xab SWAP1
0xac DUP1
0xad DUP1
0xae CALLDATALOAD
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 SWAP1
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP1
0xca SWAP3
0xcb SWAP2
0xcc SWAP1
0xcd DUP1
0xce CALLDATALOAD
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 SWAP3
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 POP
0xda PUSH2 0x211
0xdd JUMP
---
0x9f: JUMPDEST 
0xa1: V41 = 0xde
0xa4: V42 = 0x4
0xa7: V43 = CALLDATASIZE
0xa8: V44 = SUB V43 0x4
0xaa: V45 = ADD 0x4 V44
0xae: V46 = CALLDATALOAD 0x4
0xaf: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xc6: V49 = 0x20
0xc8: V50 = ADD 0x20 0x4
0xce: V51 = CALLDATALOAD 0x24
0xd0: V52 = 0x20
0xd2: V53 = ADD 0x20 0x24
0xda: V54 = 0x211
0xdd: JUMP 0x211
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xde, V48, V51]
Exit stack: [V11, 0xde, V48, V51]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0x25e]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0x12d]
---
Predecessors: [0x5c]
Successors: [0x64]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 CALLER
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111 AND
0x112 DUP2
0x113 MSTORE
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP1
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d PUSH1 0x0
0x11f SHA3
0x120 PUSH1 0x0
0x122 DUP3
0x123 DUP3
0x124 SLOAD
0x125 ADD
0x126 SWAP3
0x127 POP
0x128 POP
0x129 DUP2
0x12a SWAP1
0x12b SSTORE
0x12c POP
0x12d JUMP
---
0xe0: JUMPDEST 
0xe1: V55 = CALLVALUE
0xe2: V56 = 0x0
0xe5: V57 = CALLER
0xe6: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xfc: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x111: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x113: M[0x0] = V61
0x114: V62 = 0x20
0x116: V63 = ADD 0x20 0x0
0x119: M[0x20] = 0x0
0x11a: V64 = 0x20
0x11c: V65 = ADD 0x20 0x20
0x11d: V66 = 0x0
0x11f: V67 = SHA3 0x0 0x40
0x120: V68 = 0x0
0x124: V69 = S[V67]
0x125: V70 = ADD V69 V55
0x12b: S[V67] = V70
0x12d: JUMP 0x64
---
Entry stack: [V11, 0x64]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x12e
[0x12e:0x176]
---
Predecessors: [0x72]
Successors: [0x177, 0x17b]
---
0x12e JUMPDEST
0x12f PUSH1 0x0
0x131 DUP1
0x132 CALLER
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f DUP2
0x160 MSTORE
0x161 PUSH1 0x20
0x163 ADD
0x164 SWAP1
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x20
0x169 ADD
0x16a PUSH1 0x0
0x16c SHA3
0x16d SLOAD
0x16e DUP2
0x16f GT
0x170 ISZERO
0x171 ISZERO
0x172 ISZERO
0x173 PUSH2 0x17b
0x176 JUMPI
---
0x12e: JUMPDEST 
0x12f: V71 = 0x0
0x132: V72 = CALLER
0x133: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x149: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x160: M[0x0] = V76
0x161: V77 = 0x20
0x163: V78 = ADD 0x20 0x0
0x166: M[0x20] = 0x0
0x167: V79 = 0x20
0x169: V80 = ADD 0x20 0x20
0x16a: V81 = 0x0
0x16c: V82 = SHA3 0x0 0x40
0x16d: V83 = S[V82]
0x16f: V84 = GT V33 V83
0x170: V85 = ISZERO V84
0x171: V86 = ISZERO V85
0x172: V87 = ISZERO V86
0x173: V88 = 0x17b
0x176: JUMPI 0x17b V87
---
Entry stack: [V11, 0x91, V33]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, V33]

================================

Block 0x177
[0x177:0x17a]
---
Predecessors: [0x12e]
Successors: []
---
0x177 PUSH1 0x0
0x179 DUP1
0x17a REVERT
---
0x177: V89 = 0x0
0x17a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, V33]

================================

Block 0x17b
[0x17b:0x203]
---
Predecessors: [0x12e]
Successors: [0x204, 0x20d]
---
0x17b JUMPDEST
0x17c DUP1
0x17d PUSH1 0x0
0x17f DUP1
0x180 CALLER
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP1
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 PUSH1 0x0
0x1ba SHA3
0x1bb PUSH1 0x0
0x1bd DUP3
0x1be DUP3
0x1bf SLOAD
0x1c0 SUB
0x1c1 SWAP3
0x1c2 POP
0x1c3 POP
0x1c4 DUP2
0x1c5 SWAP1
0x1c6 SSTORE
0x1c7 POP
0x1c8 CALLER
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH2 0x8fc
0x1e2 DUP3
0x1e3 SWAP1
0x1e4 DUP2
0x1e5 ISZERO
0x1e6 MUL
0x1e7 SWAP1
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb PUSH1 0x0
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 DUP4
0x1f2 SUB
0x1f3 DUP2
0x1f4 DUP6
0x1f5 DUP9
0x1f6 DUP9
0x1f7 CALL
0x1f8 SWAP4
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc POP
0x1fd ISZERO
0x1fe DUP1
0x1ff ISZERO
0x200 PUSH2 0x20d
0x203 JUMPI
---
0x17b: JUMPDEST 
0x17d: V90 = 0x0
0x180: V91 = CALLER
0x181: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x197: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1ae: M[0x0] = V95
0x1af: V96 = 0x20
0x1b1: V97 = ADD 0x20 0x0
0x1b4: M[0x20] = 0x0
0x1b5: V98 = 0x20
0x1b7: V99 = ADD 0x20 0x20
0x1b8: V100 = 0x0
0x1ba: V101 = SHA3 0x0 0x40
0x1bb: V102 = 0x0
0x1bf: V103 = S[V101]
0x1c0: V104 = SUB V103 V33
0x1c6: S[V101] = V104
0x1c8: V105 = CALLER
0x1c9: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1df: V108 = 0x8fc
0x1e5: V109 = ISZERO V33
0x1e6: V110 = MUL V109 0x8fc
0x1e8: V111 = 0x40
0x1ea: V112 = M[0x40]
0x1eb: V113 = 0x0
0x1ed: V114 = 0x40
0x1ef: V115 = M[0x40]
0x1f2: V116 = SUB V112 V115
0x1f7: V117 = CALL V110 V107 V33 V115 V116 V115 0x0
0x1fd: V118 = ISZERO V117
0x1ff: V119 = ISZERO V118
0x200: V120 = 0x20d
0x203: JUMPI 0x20d V119
---
Entry stack: [V11, 0x91, V33]
Stack pops: 1
Stack additions: [S0, V118]
Exit stack: [V11, 0x91, V33, V118]

================================

Block 0x204
[0x204:0x20c]
---
Predecessors: [0x17b]
Successors: []
---
0x204 RETURNDATASIZE
0x205 PUSH1 0x0
0x207 DUP1
0x208 RETURNDATACOPY
0x209 RETURNDATASIZE
0x20a PUSH1 0x0
0x20c REVERT
---
0x204: V121 = RETURNDATASIZE
0x205: V122 = 0x0
0x208: RETURNDATACOPY 0x0 0x0 V121
0x209: V123 = RETURNDATASIZE
0x20a: V124 = 0x0
0x20c: REVERT 0x0 V123
---
Entry stack: [V11, 0x91, V33, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, V33, V118]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x17b]
Successors: [0x91]
---
0x20d JUMPDEST
0x20e POP
0x20f POP
0x210 JUMP
---
0x20d: JUMPDEST 
0x210: JUMP 0x91
---
Entry stack: [V11, 0x91, V33, V118]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x211
[0x211:0x259]
---
Predecessors: [0x9f]
Successors: [0x25a, 0x25e]
---
0x211 JUMPDEST
0x212 PUSH1 0x0
0x214 DUP1
0x215 CALLER
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x241 AND
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 SWAP1
0x248 DUP2
0x249 MSTORE
0x24a PUSH1 0x20
0x24c ADD
0x24d PUSH1 0x0
0x24f SHA3
0x250 SLOAD
0x251 DUP2
0x252 GT
0x253 ISZERO
0x254 ISZERO
0x255 ISZERO
0x256 PUSH2 0x25e
0x259 JUMPI
---
0x211: JUMPDEST 
0x212: V125 = 0x0
0x215: V126 = CALLER
0x216: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x22c: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x241: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x243: M[0x0] = V130
0x244: V131 = 0x20
0x246: V132 = ADD 0x20 0x0
0x249: M[0x20] = 0x0
0x24a: V133 = 0x20
0x24c: V134 = ADD 0x20 0x20
0x24d: V135 = 0x0
0x24f: V136 = SHA3 0x0 0x40
0x250: V137 = S[V136]
0x252: V138 = GT V51 V137
0x253: V139 = ISZERO V138
0x254: V140 = ISZERO V139
0x255: V141 = ISZERO V140
0x256: V142 = 0x25e
0x259: JUMPI 0x25e V141
---
Entry stack: [V11, 0xde, V48, V51]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xde, V48, V51]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x211]
Successors: []
---
0x25a PUSH1 0x0
0x25c DUP1
0x25d REVERT
---
0x25a: V143 = 0x0
0x25d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xde, V48, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde, V48, V51]

================================

Block 0x25e
[0x25e:0x2f9]
---
Predecessors: [0x211]
Successors: [0xde]
---
0x25e JUMPDEST
0x25f DUP1
0x260 PUSH1 0x0
0x262 DUP1
0x263 CALLER
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 AND
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x0
0x29d SHA3
0x29e PUSH1 0x0
0x2a0 DUP3
0x2a1 DUP3
0x2a2 SLOAD
0x2a3 SUB
0x2a4 SWAP3
0x2a5 POP
0x2a6 POP
0x2a7 DUP2
0x2a8 SWAP1
0x2a9 SSTORE
0x2aa POP
0x2ab DUP1
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af DUP5
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc DUP2
0x2dd MSTORE
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 SWAP1
0x2e2 DUP2
0x2e3 MSTORE
0x2e4 PUSH1 0x20
0x2e6 ADD
0x2e7 PUSH1 0x0
0x2e9 SHA3
0x2ea PUSH1 0x0
0x2ec DUP3
0x2ed DUP3
0x2ee SLOAD
0x2ef ADD
0x2f0 SWAP3
0x2f1 POP
0x2f2 POP
0x2f3 DUP2
0x2f4 SWAP1
0x2f5 SSTORE
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 JUMP
---
0x25e: JUMPDEST 
0x260: V144 = 0x0
0x263: V145 = CALLER
0x264: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x27a: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x291: M[0x0] = V149
0x292: V150 = 0x20
0x294: V151 = ADD 0x20 0x0
0x297: M[0x20] = 0x0
0x298: V152 = 0x20
0x29a: V153 = ADD 0x20 0x20
0x29b: V154 = 0x0
0x29d: V155 = SHA3 0x0 0x40
0x29e: V156 = 0x0
0x2a2: V157 = S[V155]
0x2a3: V158 = SUB V157 V51
0x2a9: S[V155] = V158
0x2ac: V159 = 0x0
0x2b0: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x2c6: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2dd: M[0x0] = V163
0x2de: V164 = 0x20
0x2e0: V165 = ADD 0x20 0x0
0x2e3: M[0x20] = 0x0
0x2e4: V166 = 0x20
0x2e6: V167 = ADD 0x20 0x20
0x2e7: V168 = 0x0
0x2e9: V169 = SHA3 0x0 0x40
0x2ea: V170 = 0x0
0x2ee: V171 = S[V169]
0x2ef: V172 = ADD V171 V51
0x2f5: S[V169] = V172
0x2f9: JUMP 0xde
---
Entry stack: [V11, 0xde, V48, V51]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fa
[0x2fa:0x303]
---
Predecessors: []
Successors: [0x304]
---
0x2fa STOP
0x2fb LOG1
0x2fc PUSH6 0x627a7a723058
0x303 SHA3
---
0x2fa: STOP 
0x2fb: LOG S0 S1 S2
0x2fc: V173 = 0x627a7a723058
0x303: V174 = SHA3 0x627a7a723058 S3
---
Entry stack: []
Stack pops: 0
Stack additions: [V174]
Exit stack: []

================================

Block 0x304
[0x304:0x325]
---
Predecessors: [0x2fa]
Successors: []
---
0x304 JUMPDEST
0x305 GASPRICE
0x306 MISSING 0xcd
0x307 LOG3
0x308 MISSING 0x27
0x309 DUP4
0x30a MISSING 0xfb
0x30b MISSING 0xeb
0x30c MISSING 0xe4
0x30d STATICCALL
0x30e SWAP6
0x30f PUSH5 0x5d9453645d
0x315 PUSH12 0x88adb749e47dfc0e1a7c5a31
0x322 MISSING 0xcd
0x323 MISSING 0x2e
0x324 STOP
0x325 MISSING 0x29
---
0x304: JUMPDEST 
0x305: V175 = GASPRICE
0x306: MISSING 0xcd
0x307: LOG S0 S1 S2 S3 S4
0x308: MISSING 0x27
0x30a: MISSING 0xfb
0x30b: MISSING 0xeb
0x30c: MISSING 0xe4
0x30d: V176 = STATICCALL S0 S1 S2 S3 S4 S5
0x30f: V177 = 0x5d9453645d
0x315: V178 = 0x88adb749e47dfc0e1a7c5a31
0x322: MISSING 0xcd
0x323: MISSING 0x2e
0x324: STOP 
0x325: MISSING 0x29
---
Entry stack: [V174]
Stack pops: 0
Stack additions: [V175, S3, S0, S1, S2, S3, 0x88adb749e47dfc0e1a7c5a31, 0x5d9453645d, S11, S6, S7, S8, S9, S10, V176]
Exit stack: []

================================

Function 0:
Public function signature: 0x1249c58b
Entry block: 0x5c
Exit block: 0x64
Body: 0x5c, 0x64, 0xe0

Function 1:
Public function signature: 0x42966c68
Entry block: 0x66
Exit block: 0x91
Body: 0x66, 0x6e, 0x72, 0x91, 0x12e, 0x177, 0x17b, 0x204, 0x20d

Function 2:
Public function signature: 0xa9059cbb
Entry block: 0x93
Exit block: 0xde
Body: 0x93, 0x9b, 0x9f, 0xde, 0x211, 0x25a, 0x25e

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

