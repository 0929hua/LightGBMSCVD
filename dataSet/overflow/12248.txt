Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x13af4035
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x13af4035
0x3c: V13 = EQ 0x13af4035 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x9f]
---
0x41 DUP1
0x42 PUSH4 0xacd02c30
0x47 EQ
0x48 PUSH2 0x9f
0x4b JUMPI
---
0x42: V15 = 0xacd02c30
0x47: V16 = EQ 0xacd02c30 V11
0x48: V17 = 0x9f
0x4b: JUMPI 0x9f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x168]
---
0x4c DUP1
0x4d PUSH4 0xc55b6bb7
0x52 EQ
0x53 PUSH2 0x168
0x56 JUMPI
---
0x4d: V18 = 0xc55b6bb7
0x52: V19 = EQ 0xc55b6bb7 V11
0x53: V20 = 0x168
0x56: JUMPI 0x168 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x9c]
---
Predecessors: [0x5c]
Successors: [0x1cb]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x9d
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATASIZE
0x71 SUB
0x72 DUP2
0x73 ADD
0x74 SWAP1
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 SWAP3
0x94 SWAP2
0x95 SWAP1
0x96 POP
0x97 POP
0x98 POP
0x99 PUSH2 0x1cb
0x9c JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x9d
0x6d: V27 = 0x4
0x70: V28 = CALLDATASIZE
0x71: V29 = SUB V28 0x4
0x73: V30 = ADD 0x4 V29
0x77: V31 = CALLDATALOAD 0x4
0x78: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x8f: V34 = 0x20
0x91: V35 = ADD 0x20 0x4
0x99: V36 = 0x1cb
0x9c: JUMP 0x1cb
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x9d, V33]
Exit stack: [V11, 0x9d, V33]

================================

Block 0x9d
[0x9d:0x9e]
---
Predecessors: [0x262]
Successors: []
---
0x9d JUMPDEST
0x9e STOP
---
0x9d: JUMPDEST 
0x9e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa6]
---
Predecessors: [0x41]
Successors: [0xa7, 0xab]
---
0x9f JUMPDEST
0xa0 CALLVALUE
0xa1 DUP1
0xa2 ISZERO
0xa3 PUSH2 0xab
0xa6 JUMPI
---
0x9f: JUMPDEST 
0xa0: V37 = CALLVALUE
0xa2: V38 = ISZERO V37
0xa3: V39 = 0xab
0xa6: JUMPI 0xab V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0xa7
[0xa7:0xaa]
---
Predecessors: [0x9f]
Successors: []
---
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa REVERT
---
0xa7: V40 = 0x0
0xaa: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0xab
[0xab:0x165]
---
Predecessors: [0x9f]
Successors: [0x308]
---
0xab JUMPDEST
0xac POP
0xad PUSH2 0x166
0xb0 PUSH1 0x4
0xb2 DUP1
0xb3 CALLDATASIZE
0xb4 SUB
0xb5 DUP2
0xb6 ADD
0xb7 SWAP1
0xb8 DUP1
0xb9 DUP1
0xba CALLDATALOAD
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 AND
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 SWAP3
0xd7 SWAP2
0xd8 SWAP1
0xd9 DUP1
0xda CALLDATALOAD
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 DUP3
0xe1 ADD
0xe2 DUP1
0xe3 CALLDATALOAD
0xe4 SWAP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 DUP1
0xea DUP1
0xeb PUSH1 0x20
0xed MUL
0xee PUSH1 0x20
0xf0 ADD
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 SWAP1
0xf5 DUP2
0xf6 ADD
0xf7 PUSH1 0x40
0xf9 MSTORE
0xfa DUP1
0xfb SWAP4
0xfc SWAP3
0xfd SWAP2
0xfe SWAP1
0xff DUP2
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 DUP4
0x106 DUP4
0x107 PUSH1 0x20
0x109 MUL
0x10a DUP1
0x10b DUP3
0x10c DUP5
0x10d CALLDATACOPY
0x10e DUP3
0x10f ADD
0x110 SWAP2
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 POP
0x117 SWAP2
0x118 SWAP3
0x119 SWAP2
0x11a SWAP3
0x11b SWAP1
0x11c DUP1
0x11d CALLDATALOAD
0x11e SWAP1
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP1
0x123 DUP3
0x124 ADD
0x125 DUP1
0x126 CALLDATALOAD
0x127 SWAP1
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c DUP1
0x12d DUP1
0x12e PUSH1 0x20
0x130 MUL
0x131 PUSH1 0x20
0x133 ADD
0x134 PUSH1 0x40
0x136 MLOAD
0x137 SWAP1
0x138 DUP2
0x139 ADD
0x13a PUSH1 0x40
0x13c MSTORE
0x13d DUP1
0x13e SWAP4
0x13f SWAP3
0x140 SWAP2
0x141 SWAP1
0x142 DUP2
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x20
0x147 ADD
0x148 DUP4
0x149 DUP4
0x14a PUSH1 0x20
0x14c MUL
0x14d DUP1
0x14e DUP3
0x14f DUP5
0x150 CALLDATACOPY
0x151 DUP3
0x152 ADD
0x153 SWAP2
0x154 POP
0x155 POP
0x156 POP
0x157 POP
0x158 POP
0x159 POP
0x15a SWAP2
0x15b SWAP3
0x15c SWAP2
0x15d SWAP3
0x15e SWAP1
0x15f POP
0x160 POP
0x161 POP
0x162 PUSH2 0x308
0x165 JUMP
---
0xab: JUMPDEST 
0xad: V41 = 0x166
0xb0: V42 = 0x4
0xb3: V43 = CALLDATASIZE
0xb4: V44 = SUB V43 0x4
0xb6: V45 = ADD 0x4 V44
0xba: V46 = CALLDATALOAD 0x4
0xbb: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xd2: V49 = 0x20
0xd4: V50 = ADD 0x20 0x4
0xda: V51 = CALLDATALOAD 0x24
0xdc: V52 = 0x20
0xde: V53 = ADD 0x20 0x24
0xe1: V54 = ADD 0x4 V51
0xe3: V55 = CALLDATALOAD V54
0xe5: V56 = 0x20
0xe7: V57 = ADD 0x20 V54
0xeb: V58 = 0x20
0xed: V59 = MUL 0x20 V55
0xee: V60 = 0x20
0xf0: V61 = ADD 0x20 V59
0xf1: V62 = 0x40
0xf3: V63 = M[0x40]
0xf6: V64 = ADD V63 V61
0xf7: V65 = 0x40
0xf9: M[0x40] = V64
0x101: M[V63] = V55
0x102: V66 = 0x20
0x104: V67 = ADD 0x20 V63
0x107: V68 = 0x20
0x109: V69 = MUL 0x20 V55
0x10d: CALLDATACOPY V67 V57 V69
0x10f: V70 = ADD V67 V69
0x11d: V71 = CALLDATALOAD 0x44
0x11f: V72 = 0x20
0x121: V73 = ADD 0x20 0x44
0x124: V74 = ADD 0x4 V71
0x126: V75 = CALLDATALOAD V74
0x128: V76 = 0x20
0x12a: V77 = ADD 0x20 V74
0x12e: V78 = 0x20
0x130: V79 = MUL 0x20 V75
0x131: V80 = 0x20
0x133: V81 = ADD 0x20 V79
0x134: V82 = 0x40
0x136: V83 = M[0x40]
0x139: V84 = ADD V83 V81
0x13a: V85 = 0x40
0x13c: M[0x40] = V84
0x144: M[V83] = V75
0x145: V86 = 0x20
0x147: V87 = ADD 0x20 V83
0x14a: V88 = 0x20
0x14c: V89 = MUL 0x20 V75
0x150: CALLDATACOPY V87 V77 V89
0x152: V90 = ADD V87 V89
0x162: V91 = 0x308
0x165: JUMP 0x308
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0x166, V48, V63, V83]
Exit stack: [V11, 0x166, V48, V63, V83]

================================

Block 0x166
[0x166:0x167]
---
Predecessors: [0x6d2]
Successors: []
---
0x166 JUMPDEST
0x167 STOP
---
0x166: JUMPDEST 
0x167: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x168
[0x168:0x16f]
---
Predecessors: [0x4c]
Successors: [0x170, 0x174]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a DUP1
0x16b ISZERO
0x16c PUSH2 0x174
0x16f JUMPI
---
0x168: JUMPDEST 
0x169: V92 = CALLVALUE
0x16b: V93 = ISZERO V92
0x16c: V94 = 0x174
0x16f: JUMPI 0x174 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V11, V92]

================================

Block 0x170
[0x170:0x173]
---
Predecessors: [0x168]
Successors: []
---
0x170 PUSH1 0x0
0x172 DUP1
0x173 REVERT
---
0x170: V95 = 0x0
0x173: REVERT 0x0 0x0
---
Entry stack: [V11, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V92]

================================

Block 0x174
[0x174:0x1c8]
---
Predecessors: [0x168]
Successors: [0x6ef]
---
0x174 JUMPDEST
0x175 POP
0x176 PUSH2 0x1c9
0x179 PUSH1 0x4
0x17b DUP1
0x17c CALLDATASIZE
0x17d SUB
0x17e DUP2
0x17f ADD
0x180 SWAP1
0x181 DUP1
0x182 DUP1
0x183 CALLDATALOAD
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a SWAP1
0x19b PUSH1 0x20
0x19d ADD
0x19e SWAP1
0x19f SWAP3
0x1a0 SWAP2
0x1a1 SWAP1
0x1a2 DUP1
0x1a3 CALLDATALOAD
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba SWAP1
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP1
0x1bf SWAP3
0x1c0 SWAP2
0x1c1 SWAP1
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 PUSH2 0x6ef
0x1c8 JUMP
---
0x174: JUMPDEST 
0x176: V96 = 0x1c9
0x179: V97 = 0x4
0x17c: V98 = CALLDATASIZE
0x17d: V99 = SUB V98 0x4
0x17f: V100 = ADD 0x4 V99
0x183: V101 = CALLDATALOAD 0x4
0x184: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x19b: V104 = 0x20
0x19d: V105 = ADD 0x20 0x4
0x1a3: V106 = CALLDATALOAD 0x24
0x1a4: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1bb: V109 = 0x20
0x1bd: V110 = ADD 0x20 0x24
0x1c5: V111 = 0x6ef
0x1c8: JUMP 0x6ef
---
Entry stack: [V11, V92]
Stack pops: 1
Stack additions: [0x1c9, V103, V108]
Exit stack: [V11, 0x1c9, V103, V108]

================================

Block 0x1c9
[0x1c9:0x1ca]
---
Predecessors: [0x81b]
Successors: []
---
0x1c9 JUMPDEST
0x1ca STOP
---
0x1c9: JUMPDEST 
0x1ca: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cb
[0x1cb:0x202]
---
Predecessors: [0x68]
Successors: [0x203, 0x207]
---
0x1cb JUMPDEST
0x1cc PUSH1 0x0
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 DUP2
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb EQ
0x1fc ISZERO
0x1fd ISZERO
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V112 = 0x0
0x1ce: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1e5: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x1fb: V117 = EQ V116 0x0
0x1fc: V118 = ISZERO V117
0x1fd: V119 = ISZERO V118
0x1fe: V120 = ISZERO V119
0x1ff: V121 = 0x207
0x202: JUMPI 0x207 V120
---
Entry stack: [V11, 0x9d, V33]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x9d, V33]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1cb]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V122 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9d, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9d, V33]

================================

Block 0x207
[0x207:0x25d]
---
Predecessors: [0x1cb]
Successors: [0x25e, 0x262]
---
0x207 JUMPDEST
0x208 PUSH1 0x0
0x20a DUP1
0x20b SWAP1
0x20c SLOAD
0x20d SWAP1
0x20e PUSH2 0x100
0x211 EXP
0x212 SWAP1
0x213 DIV
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 CALLER
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 EQ
0x258 ISZERO
0x259 ISZERO
0x25a PUSH2 0x262
0x25d JUMPI
---
0x207: JUMPDEST 
0x208: V123 = 0x0
0x20c: V124 = S[0x0]
0x20e: V125 = 0x100
0x211: V126 = EXP 0x100 0x0
0x213: V127 = DIV V124 0x1
0x214: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x22a: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x240: V132 = CALLER
0x241: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x257: V135 = EQ V134 V131
0x258: V136 = ISZERO V135
0x259: V137 = ISZERO V136
0x25a: V138 = 0x262
0x25d: JUMPI 0x262 V137
---
Entry stack: [V11, 0x9d, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9d, V33]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x207]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V139 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9d, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9d, V33]

================================

Block 0x262
[0x262:0x307]
---
Predecessors: [0x207]
Successors: [0x9d]
---
0x262 JUMPDEST
0x263 DUP1
0x264 PUSH1 0x0
0x266 DUP1
0x267 PUSH2 0x100
0x26a EXP
0x26b DUP2
0x26c SLOAD
0x26d DUP2
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 MUL
0x284 NOT
0x285 AND
0x286 SWAP1
0x287 DUP4
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d AND
0x29e MUL
0x29f OR
0x2a0 SWAP1
0x2a1 SSTORE
0x2a2 POP
0x2a3 PUSH32 0x50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe2
0x2c4 DUP2
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 DUP3
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP2
0x2fc POP
0x2fd POP
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 DUP1
0x302 SWAP2
0x303 SUB
0x304 SWAP1
0x305 LOG1
0x306 POP
0x307 JUMP
---
0x262: JUMPDEST 
0x264: V140 = 0x0
0x267: V141 = 0x100
0x26a: V142 = EXP 0x100 0x0
0x26c: V143 = S[0x0]
0x26e: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V145 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x284: V146 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x285: V147 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V143
0x288: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x29e: V150 = MUL V149 0x1
0x29f: V151 = OR V150 V147
0x2a1: S[0x0] = V151
0x2a3: V152 = 0x50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe2
0x2c5: V153 = 0x40
0x2c7: V154 = M[0x40]
0x2ca: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x2e0: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x2f7: M[V154] = V158
0x2f8: V159 = 0x20
0x2fa: V160 = ADD 0x20 V154
0x2fe: V161 = 0x40
0x300: V162 = M[0x40]
0x303: V163 = SUB V160 V162
0x305: LOG V162 V163 0x50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe2
0x307: JUMP 0x9d
---
Entry stack: [V11, 0x9d, V33]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x308
[0x308:0x3a2]
---
Predecessors: [0xab]
Successors: [0x3a3, 0x3a7]
---
0x308 JUMPDEST
0x309 PUSH1 0x0
0x30b DUP1
0x30c PUSH1 0x0
0x30e DUP1
0x30f PUSH1 0x1
0x311 PUSH1 0x0
0x313 DUP9
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 AND
0x32a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33f AND
0x340 DUP2
0x341 MSTORE
0x342 PUSH1 0x20
0x344 ADD
0x345 SWAP1
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x20
0x34a ADD
0x34b PUSH1 0x0
0x34d SHA3
0x34e PUSH1 0x0
0x350 SWAP1
0x351 SLOAD
0x352 SWAP1
0x353 PUSH2 0x100
0x356 EXP
0x357 SWAP1
0x358 DIV
0x359 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36e AND
0x36f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x384 AND
0x385 CALLER
0x386 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39b AND
0x39c EQ
0x39d ISZERO
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x308: JUMPDEST 
0x309: V164 = 0x0
0x30c: V165 = 0x0
0x30f: V166 = 0x1
0x311: V167 = 0x0
0x314: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x329: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x32a: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x341: M[0x0] = V171
0x342: V172 = 0x20
0x344: V173 = ADD 0x20 0x0
0x347: M[0x20] = 0x1
0x348: V174 = 0x20
0x34a: V175 = ADD 0x20 0x20
0x34b: V176 = 0x0
0x34d: V177 = SHA3 0x0 0x40
0x34e: V178 = 0x0
0x351: V179 = S[V177]
0x353: V180 = 0x100
0x356: V181 = EXP 0x100 0x0
0x358: V182 = DIV V179 0x1
0x359: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x36f: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x384: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x385: V187 = CALLER
0x386: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x39b: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x39c: V190 = EQ V189 V186
0x39d: V191 = ISZERO V190
0x39e: V192 = ISZERO V191
0x39f: V193 = 0x3a7
0x3a2: JUMPI 0x3a7 V192
---
Entry stack: [V11, 0x166, V48, V63, V83]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x308]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V194 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3a7
[0x3a7:0x43d]
---
Predecessors: [0x308]
Successors: [0x43e, 0x442]
---
0x3a7 JUMPDEST
0x3a8 DUP7
0x3a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3be AND
0x3bf PUSH4 0x70a08231
0x3c4 ADDRESS
0x3c5 PUSH1 0x40
0x3c7 MLOAD
0x3c8 DUP3
0x3c9 PUSH4 0xffffffff
0x3ce AND
0x3cf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3ed MUL
0x3ee DUP2
0x3ef MSTORE
0x3f0 PUSH1 0x4
0x3f2 ADD
0x3f3 DUP1
0x3f4 DUP3
0x3f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40a AND
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 DUP2
0x422 MSTORE
0x423 PUSH1 0x20
0x425 ADD
0x426 SWAP2
0x427 POP
0x428 POP
0x429 PUSH1 0x20
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f DUP4
0x430 SUB
0x431 DUP2
0x432 PUSH1 0x0
0x434 DUP8
0x435 DUP1
0x436 EXTCODESIZE
0x437 ISZERO
0x438 DUP1
0x439 ISZERO
0x43a PUSH2 0x442
0x43d JUMPI
---
0x3a7: JUMPDEST 
0x3a9: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x3bf: V197 = 0x70a08231
0x3c4: V198 = ADDRESS
0x3c5: V199 = 0x40
0x3c7: V200 = M[0x40]
0x3c9: V201 = 0xffffffff
0x3ce: V202 = AND 0xffffffff 0x70a08231
0x3cf: V203 = 0x100000000000000000000000000000000000000000000000000000000
0x3ed: V204 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x3ef: M[V200] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3f0: V205 = 0x4
0x3f2: V206 = ADD 0x4 V200
0x3f5: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x40a: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x40b: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x422: M[V206] = V210
0x423: V211 = 0x20
0x425: V212 = ADD 0x20 V206
0x429: V213 = 0x20
0x42b: V214 = 0x40
0x42d: V215 = M[0x40]
0x430: V216 = SUB V212 V215
0x432: V217 = 0x0
0x436: V218 = EXTCODESIZE V196
0x437: V219 = ISZERO V218
0x439: V220 = ISZERO V219
0x43a: V221 = 0x442
0x43d: JUMPI 0x442 V220
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V196, 0x70a08231, V212, 0x20, V215, V216, V215, 0x0, V196, V219]
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, 0x20, V215, V216, V215, 0x0, V196, V219]

================================

Block 0x43e
[0x43e:0x441]
---
Predecessors: [0x3a7]
Successors: []
---
0x43e PUSH1 0x0
0x440 DUP1
0x441 REVERT
---
0x43e: V222 = 0x0
0x441: REVERT 0x0 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, 0x20, V215, V216, V215, 0x0, V196, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, 0x20, V215, V216, V215, 0x0, V196, V219]

================================

Block 0x442
[0x442:0x44c]
---
Predecessors: [0x3a7]
Successors: [0x44d, 0x456]
---
0x442 JUMPDEST
0x443 POP
0x444 GAS
0x445 CALL
0x446 ISZERO
0x447 DUP1
0x448 ISZERO
0x449 PUSH2 0x456
0x44c JUMPI
---
0x442: JUMPDEST 
0x444: V223 = GAS
0x445: V224 = CALL V223 V196 0x0 V215 V216 V215 0x20
0x446: V225 = ISZERO V224
0x448: V226 = ISZERO V225
0x449: V227 = 0x456
0x44c: JUMPI 0x456 V226
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, 0x20, V215, V216, V215, 0x0, V196, V219]
Stack pops: 7
Stack additions: [V225]
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, V225]

================================

Block 0x44d
[0x44d:0x455]
---
Predecessors: [0x442]
Successors: []
---
0x44d RETURNDATASIZE
0x44e PUSH1 0x0
0x450 DUP1
0x451 RETURNDATACOPY
0x452 RETURNDATASIZE
0x453 PUSH1 0x0
0x455 REVERT
---
0x44d: V228 = RETURNDATASIZE
0x44e: V229 = 0x0
0x451: RETURNDATACOPY 0x0 0x0 V228
0x452: V230 = RETURNDATASIZE
0x453: V231 = 0x0
0x455: REVERT 0x0 V230
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, V225]

================================

Block 0x456
[0x456:0x467]
---
Predecessors: [0x442]
Successors: [0x468, 0x46c]
---
0x456 JUMPDEST
0x457 POP
0x458 POP
0x459 POP
0x45a POP
0x45b PUSH1 0x40
0x45d MLOAD
0x45e RETURNDATASIZE
0x45f PUSH1 0x20
0x461 DUP2
0x462 LT
0x463 ISZERO
0x464 PUSH2 0x46c
0x467 JUMPI
---
0x456: JUMPDEST 
0x45b: V232 = 0x40
0x45d: V233 = M[0x40]
0x45e: V234 = RETURNDATASIZE
0x45f: V235 = 0x20
0x462: V236 = LT V234 0x20
0x463: V237 = ISZERO V236
0x464: V238 = 0x46c
0x467: JUMPI 0x46c V237
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V196, 0x70a08231, V212, V225]
Stack pops: 4
Stack additions: [V233, V234]
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V233, V234]

================================

Block 0x468
[0x468:0x46b]
---
Predecessors: [0x456]
Successors: []
---
0x468 PUSH1 0x0
0x46a DUP1
0x46b REVERT
---
0x468: V239 = 0x0
0x46b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V233, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V233, V234]

================================

Block 0x46c
[0x46c:0x483]
---
Predecessors: [0x456]
Successors: [0x484]
---
0x46c JUMPDEST
0x46d DUP2
0x46e ADD
0x46f SWAP1
0x470 DUP1
0x471 DUP1
0x472 MLOAD
0x473 SWAP1
0x474 PUSH1 0x20
0x476 ADD
0x477 SWAP1
0x478 SWAP3
0x479 SWAP2
0x47a SWAP1
0x47b POP
0x47c POP
0x47d POP
0x47e SWAP4
0x47f POP
0x480 PUSH1 0x0
0x482 SWAP2
0x483 POP
---
0x46c: JUMPDEST 
0x46e: V240 = ADD V233 V234
0x472: V241 = M[V233]
0x474: V242 = 0x20
0x476: V243 = ADD 0x20 V233
0x480: V244 = 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, 0x0, 0x0, 0x0, 0x0, V233, V234]
Stack pops: 6
Stack additions: [V241, S4, 0x0, S2]
Exit stack: [V11, 0x166, V48, V63, V83, V241, 0x0, 0x0, 0x0]

================================

Block 0x484
[0x484:0x491]
---
Predecessors: [0x46c, 0x4a3]
Successors: [0x492, 0x4be]
---
0x484 JUMPDEST
0x485 DUP5
0x486 MLOAD
0x487 DUP3
0x488 PUSH2 0xffff
0x48b AND
0x48c LT
0x48d ISZERO
0x48e PUSH2 0x4be
0x491 JUMPI
---
0x484: JUMPDEST 
0x486: V245 = M[V83]
0x488: V246 = 0xffff
0x48b: V247 = AND 0xffff S1
0x48c: V248 = LT V247 V245
0x48d: V249 = ISZERO V248
0x48e: V250 = 0x4be
0x491: JUMPI 0x4be V249
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, 0x0]

================================

Block 0x492
[0x492:0x4a1]
---
Predecessors: [0x484]
Successors: [0x4a2, 0x4a3]
---
0x492 DUP5
0x493 DUP3
0x494 PUSH2 0xffff
0x497 AND
0x498 DUP2
0x499 MLOAD
0x49a DUP2
0x49b LT
0x49c ISZERO
0x49d ISZERO
0x49e PUSH2 0x4a3
0x4a1 JUMPI
---
0x494: V251 = 0xffff
0x497: V252 = AND 0xffff S1
0x499: V253 = M[V83]
0x49b: V254 = LT V252 V253
0x49c: V255 = ISZERO V254
0x49d: V256 = ISZERO V255
0x49e: V257 = 0x4a3
0x4a1: JUMPI 0x4a3 V256
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, V252]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, 0x0, V83, V252]

================================

Block 0x4a2
[0x4a2:0x4a2]
---
Predecessors: [0x492]
Successors: []
---
0x4a2 INVALID
---
0x4a2: INVALID 
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, 0x0, V83, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, 0x0, V83, V252]

================================

Block 0x4a3
[0x4a3:0x4bd]
---
Predecessors: [0x492]
Successors: [0x484]
---
0x4a3 JUMPDEST
0x4a4 SWAP1
0x4a5 PUSH1 0x20
0x4a7 ADD
0x4a8 SWAP1
0x4a9 PUSH1 0x20
0x4ab MUL
0x4ac ADD
0x4ad MLOAD
0x4ae DUP4
0x4af ADD
0x4b0 SWAP3
0x4b1 POP
0x4b2 DUP2
0x4b3 DUP1
0x4b4 PUSH1 0x1
0x4b6 ADD
0x4b7 SWAP3
0x4b8 POP
0x4b9 POP
0x4ba PUSH2 0x484
0x4bd JUMP
---
0x4a3: JUMPDEST 
0x4a5: V258 = 0x20
0x4a7: V259 = ADD 0x20 V83
0x4a9: V260 = 0x20
0x4ab: V261 = MUL 0x20 V252
0x4ac: V262 = ADD V261 V259
0x4ad: V263 = M[V262]
0x4af: V264 = ADD S4 V263
0x4b4: V265 = 0x1
0x4b6: V266 = ADD 0x1 S3
0x4ba: V267 = 0x484
0x4bd: JUMP 0x484
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, 0x0, V83, V252]
Stack pops: 5
Stack additions: [V264, V266, S2]
Exit stack: [V11, 0x166, V48, V63, V83, V241, V264, V266, 0x0]

================================

Block 0x4be
[0x4be:0x4c2]
---
Predecessors: [0x484]
Successors: [0x4c3]
---
0x4be JUMPDEST
0x4bf PUSH1 0x0
0x4c1 SWAP2
0x4c2 POP
---
0x4be: JUMPDEST 
0x4bf: V268 = 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, 0x0, 0x0]

================================

Block 0x4c3
[0x4c3:0x4d0]
---
Predecessors: [0x4be, 0x5ff]
Successors: [0x4d1, 0x60c]
---
0x4c3 JUMPDEST
0x4c4 DUP6
0x4c5 MLOAD
0x4c6 DUP3
0x4c7 PUSH2 0xffff
0x4ca AND
0x4cb LT
0x4cc ISZERO
0x4cd PUSH2 0x60c
0x4d0 JUMPI
---
0x4c3: JUMPDEST 
0x4c5: V269 = M[V63]
0x4c7: V270 = 0xffff
0x4ca: V271 = AND 0xffff S1
0x4cb: V272 = LT V271 V269
0x4cc: V273 = ISZERO V272
0x4cd: V274 = 0x60c
0x4d0: JUMPI 0x60c V273
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, S0]

================================

Block 0x4d1
[0x4d1:0x4e1]
---
Predecessors: [0x4c3]
Successors: [0x4e2, 0x4e3]
---
0x4d1 DUP3
0x4d2 DUP6
0x4d3 DUP4
0x4d4 PUSH2 0xffff
0x4d7 AND
0x4d8 DUP2
0x4d9 MLOAD
0x4da DUP2
0x4db LT
0x4dc ISZERO
0x4dd ISZERO
0x4de PUSH2 0x4e3
0x4e1 JUMPI
---
0x4d4: V275 = 0xffff
0x4d7: V276 = AND 0xffff S1
0x4d9: V277 = M[V83]
0x4db: V278 = LT V276 V277
0x4dc: V279 = ISZERO V278
0x4dd: V280 = ISZERO V279
0x4de: V281 = 0x4e3
0x4e1: JUMPI 0x4e3 V280
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S2, S4, V276]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, S0, S2, V83, V276]

================================

Block 0x4e2
[0x4e2:0x4e2]
---
Predecessors: [0x4d1]
Successors: []
---
0x4e2 INVALID
---
0x4e2: INVALID 
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S5, S4, S3, S2, V83, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S5, S4, S3, S2, V83, V276]

================================

Block 0x4e3
[0x4e3:0x4f6]
---
Predecessors: [0x4d1]
Successors: [0x4f7, 0x4f8]
---
0x4e3 JUMPDEST
0x4e4 SWAP1
0x4e5 PUSH1 0x20
0x4e7 ADD
0x4e8 SWAP1
0x4e9 PUSH1 0x20
0x4eb MUL
0x4ec ADD
0x4ed MLOAD
0x4ee DUP6
0x4ef MUL
0x4f0 DUP2
0x4f1 ISZERO
0x4f2 ISZERO
0x4f3 PUSH2 0x4f8
0x4f6 JUMPI
---
0x4e3: JUMPDEST 
0x4e5: V282 = 0x20
0x4e7: V283 = ADD 0x20 V83
0x4e9: V284 = 0x20
0x4eb: V285 = MUL 0x20 V276
0x4ec: V286 = ADD V285 V283
0x4ed: V287 = M[V286]
0x4ef: V288 = MUL V241 V287
0x4f1: V289 = ISZERO S2
0x4f2: V290 = ISZERO V289
0x4f3: V291 = 0x4f8
0x4f6: JUMPI 0x4f8 V290
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S5, S4, S3, S2, V83, V276]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V288]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S5, S4, S3, S2, V288]

================================

Block 0x4f7
[0x4f7:0x4f7]
---
Predecessors: [0x4e3]
Successors: []
---
0x4f7 INVALID
---
0x4f7: INVALID 
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, S2, S1, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, S2, S1, V288]

================================

Block 0x4f8
[0x4f8:0x527]
---
Predecessors: [0x4e3]
Successors: [0x528, 0x529]
---
0x4f8 JUMPDEST
0x4f9 DIV
0x4fa SWAP1
0x4fb POP
0x4fc DUP7
0x4fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x512 AND
0x513 PUSH4 0xa9059cbb
0x518 DUP8
0x519 DUP5
0x51a PUSH2 0xffff
0x51d AND
0x51e DUP2
0x51f MLOAD
0x520 DUP2
0x521 LT
0x522 ISZERO
0x523 ISZERO
0x524 PUSH2 0x529
0x527 JUMPI
---
0x4f8: JUMPDEST 
0x4f9: V292 = DIV V288 S1
0x4fd: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x512: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x513: V295 = 0xa9059cbb
0x51a: V296 = 0xffff
0x51d: V297 = AND 0xffff S3
0x51f: V298 = M[V63]
0x521: V299 = LT V297 V298
0x522: V300 = ISZERO V299
0x523: V301 = ISZERO V300
0x524: V302 = 0x529
0x527: JUMPI 0x529 V301
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, S2, S1, V288]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V292, V294, 0xa9059cbb, S7, V297]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, V292, V294, 0xa9059cbb, V63, V297]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x4f8]
Successors: []
---
0x528 INVALID
---
0x528: INVALID 
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V294, 0xa9059cbb, V63, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V294, 0xa9059cbb, V63, V297]

================================

Block 0x529
[0x529:0x5b4]
---
Predecessors: [0x4f8]
Successors: [0x5b5, 0x5b9]
---
0x529 JUMPDEST
0x52a SWAP1
0x52b PUSH1 0x20
0x52d ADD
0x52e SWAP1
0x52f PUSH1 0x20
0x531 MUL
0x532 ADD
0x533 MLOAD
0x534 DUP4
0x535 PUSH1 0x40
0x537 MLOAD
0x538 DUP4
0x539 PUSH4 0xffffffff
0x53e AND
0x53f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x55d MUL
0x55e DUP2
0x55f MSTORE
0x560 PUSH1 0x4
0x562 ADD
0x563 DUP1
0x564 DUP4
0x565 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57a AND
0x57b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x590 AND
0x591 DUP2
0x592 MSTORE
0x593 PUSH1 0x20
0x595 ADD
0x596 DUP3
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP3
0x59d POP
0x59e POP
0x59f POP
0x5a0 PUSH1 0x20
0x5a2 PUSH1 0x40
0x5a4 MLOAD
0x5a5 DUP1
0x5a6 DUP4
0x5a7 SUB
0x5a8 DUP2
0x5a9 PUSH1 0x0
0x5ab DUP8
0x5ac DUP1
0x5ad EXTCODESIZE
0x5ae ISZERO
0x5af DUP1
0x5b0 ISZERO
0x5b1 PUSH2 0x5b9
0x5b4 JUMPI
---
0x529: JUMPDEST 
0x52b: V303 = 0x20
0x52d: V304 = ADD 0x20 V63
0x52f: V305 = 0x20
0x531: V306 = MUL 0x20 V297
0x532: V307 = ADD V306 V304
0x533: V308 = M[V307]
0x535: V309 = 0x40
0x537: V310 = M[0x40]
0x539: V311 = 0xffffffff
0x53e: V312 = AND 0xffffffff 0xa9059cbb
0x53f: V313 = 0x100000000000000000000000000000000000000000000000000000000
0x55d: V314 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x55f: M[V310] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x560: V315 = 0x4
0x562: V316 = ADD 0x4 V310
0x565: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x57a: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x57b: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x590: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x592: M[V316] = V320
0x593: V321 = 0x20
0x595: V322 = ADD 0x20 V316
0x598: M[V322] = V292
0x599: V323 = 0x20
0x59b: V324 = ADD 0x20 V322
0x5a0: V325 = 0x20
0x5a2: V326 = 0x40
0x5a4: V327 = M[0x40]
0x5a7: V328 = SUB V324 V327
0x5a9: V329 = 0x0
0x5ad: V330 = EXTCODESIZE V294
0x5ae: V331 = ISZERO V330
0x5b0: V332 = ISZERO V331
0x5b1: V333 = 0x5b9
0x5b4: JUMPI 0x5b9 V332
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V294, 0xa9059cbb, V63, V297]
Stack pops: 5
Stack additions: [S4, S3, S2, V324, 0x20, V327, V328, V327, 0x0, S3, V331]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V294, 0xa9059cbb, V324, 0x20, V327, V328, V327, 0x0, V294, V331]

================================

Block 0x5b5
[0x5b5:0x5b8]
---
Predecessors: [0x529]
Successors: []
---
0x5b5 PUSH1 0x0
0x5b7 DUP1
0x5b8 REVERT
---
0x5b5: V334 = 0x0
0x5b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S12, S11, V292, V294, 0xa9059cbb, V324, 0x20, V327, V328, V327, 0x0, V294, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S12, S11, V292, V294, 0xa9059cbb, V324, 0x20, V327, V328, V327, 0x0, V294, V331]

================================

Block 0x5b9
[0x5b9:0x5c3]
---
Predecessors: [0x529]
Successors: [0x5c4, 0x5cd]
---
0x5b9 JUMPDEST
0x5ba POP
0x5bb GAS
0x5bc CALL
0x5bd ISZERO
0x5be DUP1
0x5bf ISZERO
0x5c0 PUSH2 0x5cd
0x5c3 JUMPI
---
0x5b9: JUMPDEST 
0x5bb: V335 = GAS
0x5bc: V336 = CALL V335 V294 0x0 V327 V328 V327 0x20
0x5bd: V337 = ISZERO V336
0x5bf: V338 = ISZERO V337
0x5c0: V339 = 0x5cd
0x5c3: JUMPI 0x5cd V338
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S12, S11, V292, V294, 0xa9059cbb, V324, 0x20, V327, V328, V327, 0x0, V294, V331]
Stack pops: 7
Stack additions: [V337]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S12, S11, V292, V294, 0xa9059cbb, V324, V337]

================================

Block 0x5c4
[0x5c4:0x5cc]
---
Predecessors: [0x5b9]
Successors: []
---
0x5c4 RETURNDATASIZE
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 RETURNDATACOPY
0x5c9 RETURNDATASIZE
0x5ca PUSH1 0x0
0x5cc REVERT
---
0x5c4: V340 = RETURNDATASIZE
0x5c5: V341 = 0x0
0x5c8: RETURNDATACOPY 0x0 0x0 V340
0x5c9: V342 = RETURNDATASIZE
0x5ca: V343 = 0x0
0x5cc: REVERT 0x0 V342
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V294, 0xa9059cbb, V324, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V294, 0xa9059cbb, V324, V337]

================================

Block 0x5cd
[0x5cd:0x5de]
---
Predecessors: [0x5b9]
Successors: [0x5df, 0x5e3]
---
0x5cd JUMPDEST
0x5ce POP
0x5cf POP
0x5d0 POP
0x5d1 POP
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 RETURNDATASIZE
0x5d6 PUSH1 0x20
0x5d8 DUP2
0x5d9 LT
0x5da ISZERO
0x5db PUSH2 0x5e3
0x5de JUMPI
---
0x5cd: JUMPDEST 
0x5d2: V344 = 0x40
0x5d4: V345 = M[0x40]
0x5d5: V346 = RETURNDATASIZE
0x5d6: V347 = 0x20
0x5d9: V348 = LT V346 0x20
0x5da: V349 = ISZERO V348
0x5db: V350 = 0x5e3
0x5de: JUMPI 0x5e3 V349
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V294, 0xa9059cbb, V324, V337]
Stack pops: 4
Stack additions: [V345, V346]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S6, S5, V292, V345, V346]

================================

Block 0x5df
[0x5df:0x5e2]
---
Predecessors: [0x5cd]
Successors: []
---
0x5df PUSH1 0x0
0x5e1 DUP1
0x5e2 REVERT
---
0x5df: V351 = 0x0
0x5e2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, V292, V345, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, V292, V345, V346]

================================

Block 0x5e3
[0x5e3:0x5fa]
---
Predecessors: [0x5cd]
Successors: [0x5fb, 0x5ff]
---
0x5e3 JUMPDEST
0x5e4 DUP2
0x5e5 ADD
0x5e6 SWAP1
0x5e7 DUP1
0x5e8 DUP1
0x5e9 MLOAD
0x5ea SWAP1
0x5eb PUSH1 0x20
0x5ed ADD
0x5ee SWAP1
0x5ef SWAP3
0x5f0 SWAP2
0x5f1 SWAP1
0x5f2 POP
0x5f3 POP
0x5f4 POP
0x5f5 ISZERO
0x5f6 ISZERO
0x5f7 PUSH2 0x5ff
0x5fa JUMPI
---
0x5e3: JUMPDEST 
0x5e5: V352 = ADD V345 V346
0x5e9: V353 = M[V345]
0x5eb: V354 = 0x20
0x5ed: V355 = ADD 0x20 V345
0x5f5: V356 = ISZERO V353
0x5f6: V357 = ISZERO V356
0x5f7: V358 = 0x5ff
0x5fa: JUMPI 0x5ff V357
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, V292, V345, V346]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S4, S3, V292]

================================

Block 0x5fb
[0x5fb:0x5fe]
---
Predecessors: [0x5e3]
Successors: []
---
0x5fb PUSH1 0x0
0x5fd DUP1
0x5fe REVERT
---
0x5fb: V359 = 0x0
0x5fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, V292]

================================

Block 0x5ff
[0x5ff:0x60b]
---
Predecessors: [0x5e3]
Successors: [0x4c3]
---
0x5ff JUMPDEST
0x600 DUP2
0x601 DUP1
0x602 PUSH1 0x1
0x604 ADD
0x605 SWAP3
0x606 POP
0x607 POP
0x608 PUSH2 0x4c3
0x60b JUMP
---
0x5ff: JUMPDEST 
0x602: V360 = 0x1
0x604: V361 = ADD 0x1 S1
0x608: V362 = 0x4c3
0x60b: JUMP 0x4c3
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, V292]
Stack pops: 2
Stack additions: [V361, S0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, V361, V292]

================================

Block 0x60c
[0x60c:0x621]
---
Predecessors: [0x4c3]
Successors: [0x622]
---
0x60c JUMPDEST
0x60d DUP6
0x60e PUSH1 0x40
0x610 MLOAD
0x611 DUP1
0x612 DUP3
0x613 DUP1
0x614 MLOAD
0x615 SWAP1
0x616 PUSH1 0x20
0x618 ADD
0x619 SWAP1
0x61a PUSH1 0x20
0x61c MUL
0x61d DUP1
0x61e DUP4
0x61f DUP4
0x620 PUSH1 0x0
---
0x60c: JUMPDEST 
0x60e: V363 = 0x40
0x610: V364 = M[0x40]
0x614: V365 = M[V63]
0x616: V366 = 0x20
0x618: V367 = ADD 0x20 V63
0x61a: V368 = 0x20
0x61c: V369 = MUL 0x20 V365
0x620: V370 = 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, V364, V364, V367, V369, V369, V364, V367, 0x0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S2, S1, S0, V63, V364, V364, V367, V369, V369, V364, V367, 0x0]

================================

Block 0x622
[0x622:0x62a]
---
Predecessors: [0x60c, 0x62b]
Successors: [0x62b, 0x63d]
---
0x622 JUMPDEST
0x623 DUP4
0x624 DUP2
0x625 LT
0x626 ISZERO
0x627 PUSH2 0x63d
0x62a JUMPI
---
0x622: JUMPDEST 
0x625: V371 = LT S0 V369
0x626: V372 = ISZERO V371
0x627: V373 = 0x63d
0x62a: JUMPI 0x63d V372
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S11, S10, S9, V63, V364, V364, V367, V369, V369, V364, V367, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S11, S10, S9, V63, V364, V364, V367, V369, V369, V364, V367, S0]

================================

Block 0x62b
[0x62b:0x63c]
---
Predecessors: [0x622]
Successors: [0x622]
---
0x62b DUP1
0x62c DUP3
0x62d ADD
0x62e MLOAD
0x62f DUP2
0x630 DUP5
0x631 ADD
0x632 MSTORE
0x633 PUSH1 0x20
0x635 DUP2
0x636 ADD
0x637 SWAP1
0x638 POP
0x639 PUSH2 0x622
0x63c JUMP
---
0x62d: V374 = ADD V367 S0
0x62e: V375 = M[V374]
0x631: V376 = ADD V364 S0
0x632: M[V376] = V375
0x633: V377 = 0x20
0x636: V378 = ADD S0 0x20
0x639: V379 = 0x622
0x63c: JUMP 0x622
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S11, S10, S9, V63, V364, V364, V367, V369, V369, V364, V367, S0]
Stack pops: 3
Stack additions: [S2, S1, V378]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S11, S10, S9, V63, V364, V364, V367, V369, V369, V364, V367, V378]

================================

Block 0x63d
[0x63d:0x6b6]
---
Predecessors: [0x622]
Successors: [0x6b7]
---
0x63d JUMPDEST
0x63e POP
0x63f POP
0x640 POP
0x641 POP
0x642 SWAP1
0x643 POP
0x644 ADD
0x645 SWAP2
0x646 POP
0x647 POP
0x648 PUSH1 0x40
0x64a MLOAD
0x64b DUP1
0x64c SWAP2
0x64d SUB
0x64e SWAP1
0x64f SHA3
0x650 DUP8
0x651 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x666 AND
0x667 PUSH32 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f
0x688 DUP8
0x689 DUP8
0x68a PUSH1 0x40
0x68c MLOAD
0x68d DUP1
0x68e DUP1
0x68f PUSH1 0x20
0x691 ADD
0x692 DUP4
0x693 DUP2
0x694 MSTORE
0x695 PUSH1 0x20
0x697 ADD
0x698 DUP3
0x699 DUP2
0x69a SUB
0x69b DUP3
0x69c MSTORE
0x69d DUP5
0x69e DUP2
0x69f DUP2
0x6a0 MLOAD
0x6a1 DUP2
0x6a2 MSTORE
0x6a3 PUSH1 0x20
0x6a5 ADD
0x6a6 SWAP2
0x6a7 POP
0x6a8 DUP1
0x6a9 MLOAD
0x6aa SWAP1
0x6ab PUSH1 0x20
0x6ad ADD
0x6ae SWAP1
0x6af PUSH1 0x20
0x6b1 MUL
0x6b2 DUP1
0x6b3 DUP4
0x6b4 DUP4
0x6b5 PUSH1 0x0
---
0x63d: JUMPDEST 
0x644: V380 = ADD V369 V364
0x648: V381 = 0x40
0x64a: V382 = M[0x40]
0x64d: V383 = SUB V380 V382
0x64f: V384 = SHA3 V382 V383
0x651: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x666: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x667: V387 = 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f
0x68a: V388 = 0x40
0x68c: V389 = M[0x40]
0x68f: V390 = 0x20
0x691: V391 = ADD 0x20 V389
0x694: M[V391] = V241
0x695: V392 = 0x20
0x697: V393 = ADD 0x20 V391
0x69a: V394 = SUB V393 V389
0x69c: M[V389] = V394
0x6a0: V395 = M[V83]
0x6a2: M[V393] = V395
0x6a3: V396 = 0x20
0x6a5: V397 = ADD 0x20 V393
0x6a9: V398 = M[V83]
0x6ab: V399 = 0x20
0x6ad: V400 = ADD 0x20 V83
0x6af: V401 = 0x20
0x6b1: V402 = MUL 0x20 V398
0x6b5: V403 = 0x0
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S11, S10, S9, V63, V364, V364, V367, V369, V369, V364, V367, S0]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, V384, V386, 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f, S13, S12, V389, V389, V397, V400, V402, V402, V397, V400, 0x0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S11, S10, S9, V384, V386, 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f, V83, V241, V389, V389, V397, V400, V402, V402, V397, V400, 0x0]

================================

Block 0x6b7
[0x6b7:0x6bf]
---
Predecessors: [0x63d, 0x6c0]
Successors: [0x6c0, 0x6d2]
---
0x6b7 JUMPDEST
0x6b8 DUP4
0x6b9 DUP2
0x6ba LT
0x6bb ISZERO
0x6bc PUSH2 0x6d2
0x6bf JUMPI
---
0x6b7: JUMPDEST 
0x6ba: V404 = LT S0 V402
0x6bb: V405 = ISZERO V404
0x6bc: V406 = 0x6d2
0x6bf: JUMPI 0x6d2 V405
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S16, S15, S14, V384, V386, 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f, V83, V241, V389, V389, V397, V400, V402, V402, V397, V400, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S16, S15, S14, V384, V386, 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f, V83, V241, V389, V389, V397, V400, V402, V402, V397, V400, S0]

================================

Block 0x6c0
[0x6c0:0x6d1]
---
Predecessors: [0x6b7]
Successors: [0x6b7]
---
0x6c0 DUP1
0x6c1 DUP3
0x6c2 ADD
0x6c3 MLOAD
0x6c4 DUP2
0x6c5 DUP5
0x6c6 ADD
0x6c7 MSTORE
0x6c8 PUSH1 0x20
0x6ca DUP2
0x6cb ADD
0x6cc SWAP1
0x6cd POP
0x6ce PUSH2 0x6b7
0x6d1 JUMP
---
0x6c2: V407 = ADD V400 S0
0x6c3: V408 = M[V407]
0x6c6: V409 = ADD V397 S0
0x6c7: M[V409] = V408
0x6c8: V410 = 0x20
0x6cb: V411 = ADD S0 0x20
0x6ce: V412 = 0x6b7
0x6d1: JUMP 0x6b7
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S16, S15, S14, V384, V386, 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f, V83, V241, V389, V389, V397, V400, V402, V402, V397, V400, S0]
Stack pops: 3
Stack additions: [S2, S1, V411]
Exit stack: [V11, 0x166, V48, V63, V83, V241, S16, S15, S14, V384, V386, 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f, V83, V241, V389, V389, V397, V400, V402, V402, V397, V400, V411]

================================

Block 0x6d2
[0x6d2:0x6ee]
---
Predecessors: [0x6b7]
Successors: [0x166]
---
0x6d2 JUMPDEST
0x6d3 POP
0x6d4 POP
0x6d5 POP
0x6d6 POP
0x6d7 SWAP1
0x6d8 POP
0x6d9 ADD
0x6da SWAP4
0x6db POP
0x6dc POP
0x6dd POP
0x6de POP
0x6df PUSH1 0x40
0x6e1 MLOAD
0x6e2 DUP1
0x6e3 SWAP2
0x6e4 SUB
0x6e5 SWAP1
0x6e6 LOG3
0x6e7 POP
0x6e8 POP
0x6e9 POP
0x6ea POP
0x6eb POP
0x6ec POP
0x6ed POP
0x6ee JUMP
---
0x6d2: JUMPDEST 
0x6d9: V413 = ADD V402 V397
0x6df: V414 = 0x40
0x6e1: V415 = M[0x40]
0x6e4: V416 = SUB V413 V415
0x6e6: LOG V415 V416 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f V386 V384
0x6ee: JUMP 0x166
---
Entry stack: [V11, 0x166, V48, V63, V83, V241, S16, S15, S14, V384, V386, 0xb734e0271c57efa82054cd06a6e232246394586b6ddeee56a190b5e0bc18e72f, V83, V241, V389, V389, V397, V400, V402, V402, V397, V400, S0]
Stack pops: 22
Stack additions: []
Exit stack: [V11]

================================

Block 0x6ef
[0x6ef:0x726]
---
Predecessors: [0x174]
Successors: [0x727, 0x72b]
---
0x6ef JUMPDEST
0x6f0 PUSH1 0x0
0x6f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x707 AND
0x708 DUP2
0x709 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71e AND
0x71f EQ
0x720 ISZERO
0x721 ISZERO
0x722 ISZERO
0x723 PUSH2 0x72b
0x726 JUMPI
---
0x6ef: JUMPDEST 
0x6f0: V417 = 0x0
0x6f2: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x707: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x709: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x71e: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x71f: V422 = EQ V421 0x0
0x720: V423 = ISZERO V422
0x721: V424 = ISZERO V423
0x722: V425 = ISZERO V424
0x723: V426 = 0x72b
0x726: JUMPI 0x72b V425
---
Entry stack: [V11, 0x1c9, V103, V108]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1c9, V103, V108]

================================

Block 0x727
[0x727:0x72a]
---
Predecessors: [0x6ef]
Successors: []
---
0x727 PUSH1 0x0
0x729 DUP1
0x72a REVERT
---
0x727: V427 = 0x0
0x72a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V103, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V103, V108]

================================

Block 0x72b
[0x72b:0x7be]
---
Predecessors: [0x6ef]
Successors: [0x7bf, 0x810]
---
0x72b JUMPDEST
0x72c PUSH1 0x1
0x72e PUSH1 0x0
0x730 DUP4
0x731 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x746 AND
0x747 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75c AND
0x75d DUP2
0x75e MSTORE
0x75f PUSH1 0x20
0x761 ADD
0x762 SWAP1
0x763 DUP2
0x764 MSTORE
0x765 PUSH1 0x20
0x767 ADD
0x768 PUSH1 0x0
0x76a SHA3
0x76b PUSH1 0x0
0x76d SWAP1
0x76e SLOAD
0x76f SWAP1
0x770 PUSH2 0x100
0x773 EXP
0x774 SWAP1
0x775 DIV
0x776 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78b AND
0x78c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a1 AND
0x7a2 CALLER
0x7a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b8 AND
0x7b9 EQ
0x7ba DUP1
0x7bb PUSH2 0x810
0x7be JUMPI
---
0x72b: JUMPDEST 
0x72c: V428 = 0x1
0x72e: V429 = 0x0
0x731: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x746: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x747: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x75c: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x75e: M[0x0] = V433
0x75f: V434 = 0x20
0x761: V435 = ADD 0x20 0x0
0x764: M[0x20] = 0x1
0x765: V436 = 0x20
0x767: V437 = ADD 0x20 0x20
0x768: V438 = 0x0
0x76a: V439 = SHA3 0x0 0x40
0x76b: V440 = 0x0
0x76e: V441 = S[V439]
0x770: V442 = 0x100
0x773: V443 = EXP 0x100 0x0
0x775: V444 = DIV V441 0x1
0x776: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x78b: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x78c: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a1: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x7a2: V449 = CALLER
0x7a3: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b8: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x7b9: V452 = EQ V451 V448
0x7bb: V453 = 0x810
0x7be: JUMPI 0x810 V452
---
Entry stack: [V11, 0x1c9, V103, V108]
Stack pops: 2
Stack additions: [S1, S0, V452]
Exit stack: [V11, 0x1c9, V103, V108, V452]

================================

Block 0x7bf
[0x7bf:0x80f]
---
Predecessors: [0x72b]
Successors: [0x810]
---
0x7bf POP
0x7c0 PUSH1 0x0
0x7c2 DUP1
0x7c3 SWAP1
0x7c4 SLOAD
0x7c5 SWAP1
0x7c6 PUSH2 0x100
0x7c9 EXP
0x7ca SWAP1
0x7cb DIV
0x7cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e1 AND
0x7e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f7 AND
0x7f8 CALLER
0x7f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80e AND
0x80f EQ
---
0x7c0: V454 = 0x0
0x7c4: V455 = S[0x0]
0x7c6: V456 = 0x100
0x7c9: V457 = EXP 0x100 0x0
0x7cb: V458 = DIV V455 0x1
0x7cc: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x7e2: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f7: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x7f8: V463 = CALLER
0x7f9: V464 = 0xffffffffffffffffffffffffffffffffffffffff
0x80e: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x80f: V466 = EQ V465 V462
---
Entry stack: [V11, 0x1c9, V103, V108, V452]
Stack pops: 1
Stack additions: [V466]
Exit stack: [V11, 0x1c9, V103, V108, V466]

================================

Block 0x810
[0x810:0x816]
---
Predecessors: [0x72b, 0x7bf]
Successors: [0x817, 0x81b]
---
0x810 JUMPDEST
0x811 ISZERO
0x812 ISZERO
0x813 PUSH2 0x81b
0x816 JUMPI
---
0x810: JUMPDEST 
0x811: V467 = ISZERO S0
0x812: V468 = ISZERO V467
0x813: V469 = 0x81b
0x816: JUMPI 0x81b V468
---
Entry stack: [V11, 0x1c9, V103, V108, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1c9, V103, V108]

================================

Block 0x817
[0x817:0x81a]
---
Predecessors: [0x810]
Successors: []
---
0x817 PUSH1 0x0
0x819 DUP1
0x81a REVERT
---
0x817: V470 = 0x0
0x81a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V103, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V103, V108]

================================

Block 0x81b
[0x81b:0x8f6]
---
Predecessors: [0x810]
Successors: [0x1c9]
---
0x81b JUMPDEST
0x81c DUP1
0x81d PUSH1 0x1
0x81f PUSH1 0x0
0x821 DUP5
0x822 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x837 AND
0x838 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84d AND
0x84e DUP2
0x84f MSTORE
0x850 PUSH1 0x20
0x852 ADD
0x853 SWAP1
0x854 DUP2
0x855 MSTORE
0x856 PUSH1 0x20
0x858 ADD
0x859 PUSH1 0x0
0x85b SHA3
0x85c PUSH1 0x0
0x85e PUSH2 0x100
0x861 EXP
0x862 DUP2
0x863 SLOAD
0x864 DUP2
0x865 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87a MUL
0x87b NOT
0x87c AND
0x87d SWAP1
0x87e DUP4
0x87f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x894 AND
0x895 MUL
0x896 OR
0x897 SWAP1
0x898 SSTORE
0x899 POP
0x89a DUP1
0x89b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b0 AND
0x8b1 DUP3
0x8b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c7 AND
0x8c8 PUSH32 0xbf265e8326285a2747e33e54d5945f7111f2b5edb826eb8c08d4677779b3ff97
0x8e9 PUSH1 0x40
0x8eb MLOAD
0x8ec PUSH1 0x40
0x8ee MLOAD
0x8ef DUP1
0x8f0 SWAP2
0x8f1 SUB
0x8f2 SWAP1
0x8f3 LOG3
0x8f4 POP
0x8f5 POP
0x8f6 JUMP
---
0x81b: JUMPDEST 
0x81d: V471 = 0x1
0x81f: V472 = 0x0
0x822: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x837: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x838: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x84d: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x84f: M[0x0] = V476
0x850: V477 = 0x20
0x852: V478 = ADD 0x20 0x0
0x855: M[0x20] = 0x1
0x856: V479 = 0x20
0x858: V480 = ADD 0x20 0x20
0x859: V481 = 0x0
0x85b: V482 = SHA3 0x0 0x40
0x85c: V483 = 0x0
0x85e: V484 = 0x100
0x861: V485 = EXP 0x100 0x0
0x863: V486 = S[V482]
0x865: V487 = 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V488 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x87b: V489 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x87c: V490 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V486
0x87f: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x894: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x895: V493 = MUL V492 0x1
0x896: V494 = OR V493 V490
0x898: S[V482] = V494
0x89b: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b0: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x8b2: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c7: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x8c8: V499 = 0xbf265e8326285a2747e33e54d5945f7111f2b5edb826eb8c08d4677779b3ff97
0x8e9: V500 = 0x40
0x8eb: V501 = M[0x40]
0x8ec: V502 = 0x40
0x8ee: V503 = M[0x40]
0x8f1: V504 = SUB V501 V503
0x8f3: LOG V503 V504 0xbf265e8326285a2747e33e54d5945f7111f2b5edb826eb8c08d4677779b3ff97 V498 V496
0x8f6: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9, V103, V108]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f7
[0x8f7:0x903]
---
Predecessors: []
Successors: [0x904]
Has unresolved jump.
---
0x8f7 STOP
0x8f8 LOG1
0x8f9 PUSH6 0x627a7a723058
0x900 SHA3
0x901 GT
0x902 MISSING 0xe3
0x903 JUMPI
---
0x8f7: STOP 
0x8f8: LOG S0 S1 S2
0x8f9: V505 = 0x627a7a723058
0x900: V506 = SHA3 0x627a7a723058 S3
0x901: V507 = GT V506 S4
0x902: MISSING 0xe3
0x903: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V507]
Exit stack: []

================================

Block 0x904
[0x904:0x922]
---
Predecessors: [0x8f7]
Successors: []
---
0x904 DUP4
0x905 XOR
0x906 PUSH27 0x912deb7d3b46571c6bf64868c9f3b22b80153be3574d4a1e751f00
0x922 MISSING 0x29
---
0x905: V508 = XOR S3 S0
0x906: V509 = 0x912deb7d3b46571c6bf64868c9f3b22b80153be3574d4a1e751f00
0x922: MISSING 0x29
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, V508, 0x912deb7d3b46571c6bf64868c9f3b22b80153be3574d4a1e751f00]
Exit stack: [S3, S2, S1, V508, 0x912deb7d3b46571c6bf64868c9f3b22b80153be3574d4a1e751f00]

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x5c
Exit block: 0x9d
Body: 0x5c, 0x64, 0x68, 0x9d, 0x1cb, 0x203, 0x207, 0x25e, 0x262

Function 1:
Public function signature: 0xacd02c30
Entry block: 0x9f
Exit block: 0x5fb
Body: 0x9f, 0xa7, 0xab, 0x166, 0x308, 0x3a3, 0x3a7, 0x43e, 0x442, 0x44d, 0x456, 0x468, 0x46c, 0x484, 0x492, 0x4a2, 0x4a3, 0x4be, 0x4c3, 0x4d1, 0x4e2, 0x4e3, 0x4f7, 0x4f8, 0x528, 0x529, 0x5b5, 0x5b9, 0x5c4, 0x5cd, 0x5df, 0x5e3, 0x5fb, 0x5ff, 0x60c, 0x622, 0x62b, 0x63d, 0x6b7, 0x6c0, 0x6d2

Function 2:
Public function signature: 0xc55b6bb7
Entry block: 0x168
Exit block: 0x1c9
Body: 0x168, 0x170, 0x174, 0x1c9, 0x6ef, 0x727, 0x72b, 0x7bf, 0x810, 0x817, 0x81b

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

