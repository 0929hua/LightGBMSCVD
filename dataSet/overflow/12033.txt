Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2fbaba26
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2fbaba26
0x3c: V13 = EQ 0x2fbaba26 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb7]
---
0x41 DUP1
0x42 PUSH4 0x6b2fafa9
0x47 EQ
0x48 PUSH2 0xb7
0x4b JUMPI
---
0x42: V15 = 0x6b2fafa9
0x47: V16 = EQ 0x6b2fafa9 V11
0x48: V17 = 0xb7
0x4b: JUMPI 0xb7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xb4]
---
Predecessors: [0x51]
Successors: [0x153]
---
0x5c JUMPDEST
0x5d PUSH2 0xb5
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x20
0x68 ADD
0x69 SWAP1
0x6a SWAP2
0x6b SWAP1
0x6c DUP1
0x6d CALLDATALOAD
0x6e SWAP1
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP1
0x73 DUP3
0x74 ADD
0x75 DUP1
0x76 CALLDATALOAD
0x77 SWAP1
0x78 PUSH1 0x20
0x7a ADD
0x7b SWAP1
0x7c DUP1
0x7d DUP1
0x7e PUSH1 0x1f
0x80 ADD
0x81 PUSH1 0x20
0x83 DUP1
0x84 SWAP2
0x85 DIV
0x86 MUL
0x87 PUSH1 0x20
0x89 ADD
0x8a PUSH1 0x40
0x8c MLOAD
0x8d SWAP1
0x8e DUP2
0x8f ADD
0x90 PUSH1 0x40
0x92 MSTORE
0x93 DUP1
0x94 SWAP4
0x95 SWAP3
0x96 SWAP2
0x97 SWAP1
0x98 DUP2
0x99 DUP2
0x9a MSTORE
0x9b PUSH1 0x20
0x9d ADD
0x9e DUP4
0x9f DUP4
0xa0 DUP1
0xa1 DUP3
0xa2 DUP5
0xa3 CALLDATACOPY
0xa4 DUP3
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad SWAP2
0xae SWAP1
0xaf POP
0xb0 POP
0xb1 PUSH2 0x153
0xb4 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xb5
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x66: V26 = 0x20
0x68: V27 = ADD 0x20 0x4
0x6d: V28 = CALLDATALOAD 0x24
0x6f: V29 = 0x20
0x71: V30 = ADD 0x20 0x24
0x74: V31 = ADD 0x4 V28
0x76: V32 = CALLDATALOAD V31
0x78: V33 = 0x20
0x7a: V34 = ADD 0x20 V31
0x7e: V35 = 0x1f
0x80: V36 = ADD 0x1f V32
0x81: V37 = 0x20
0x85: V38 = DIV V36 0x20
0x86: V39 = MUL V38 0x20
0x87: V40 = 0x20
0x89: V41 = ADD 0x20 V39
0x8a: V42 = 0x40
0x8c: V43 = M[0x40]
0x8f: V44 = ADD V43 V41
0x90: V45 = 0x40
0x92: M[0x40] = V44
0x9a: M[V43] = V32
0x9b: V46 = 0x20
0x9d: V47 = ADD 0x20 V43
0xa3: CALLDATACOPY V47 V34 V32
0xa5: V48 = ADD V47 V32
0xb1: V49 = 0x153
0xb4: JUMP 0x153
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb5, V25, V43]
Exit stack: [V11, 0xb5, V25, V43]

================================

Block 0xb5
[0xb5:0xb6]
---
Predecessors: [0x1d5]
Successors: []
---
0xb5 JUMPDEST
0xb6 STOP
---
0xb5: JUMPDEST 
0xb6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7
[0xb7:0xbd]
---
Predecessors: [0x41]
Successors: [0xbe, 0xc2]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb7: JUMPDEST 
0xb8: V50 = CALLVALUE
0xb9: V51 = ISZERO V50
0xba: V52 = 0xc2
0xbd: JUMPI 0xc2 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb7]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V53 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xd7]
---
Predecessors: [0xb7]
Successors: [0x1da]
---
0xc2 JUMPDEST
0xc3 PUSH2 0xd8
0xc6 PUSH1 0x4
0xc8 DUP1
0xc9 DUP1
0xca CALLDATALOAD
0xcb SWAP1
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP1
0xd0 SWAP2
0xd1 SWAP1
0xd2 POP
0xd3 POP
0xd4 PUSH2 0x1da
0xd7 JUMP
---
0xc2: JUMPDEST 
0xc3: V54 = 0xd8
0xc6: V55 = 0x4
0xca: V56 = CALLDATALOAD 0x4
0xcc: V57 = 0x20
0xce: V58 = ADD 0x20 0x4
0xd4: V59 = 0x1da
0xd7: JUMP 0x1da
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd8, V56]
Exit stack: [V11, 0xd8, V56]

================================

Block 0xd8
[0xd8:0xfc]
---
Predecessors: [0x288]
Successors: [0xfd]
---
0xd8 JUMPDEST
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd DUP1
0xde PUSH1 0x20
0xe0 ADD
0xe1 DUP3
0xe2 DUP2
0xe3 SUB
0xe4 DUP3
0xe5 MSTORE
0xe6 DUP4
0xe7 DUP2
0xe8 DUP2
0xe9 MLOAD
0xea DUP2
0xeb MSTORE
0xec PUSH1 0x20
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 DUP1
0xf2 MLOAD
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 DUP1
0xf9 DUP4
0xfa DUP4
0xfb PUSH1 0x0
---
0xd8: JUMPDEST 
0xd9: V60 = 0x40
0xdb: V61 = M[0x40]
0xde: V62 = 0x20
0xe0: V63 = ADD 0x20 V61
0xe3: V64 = SUB V63 V61
0xe5: M[V61] = V64
0xe9: V65 = M[V159]
0xeb: M[V63] = V65
0xec: V66 = 0x20
0xee: V67 = ADD 0x20 V63
0xf2: V68 = M[V159]
0xf4: V69 = 0x20
0xf6: V70 = ADD 0x20 V159
0xfb: V71 = 0x0
---
Entry stack: [V11, V159]
Stack pops: 1
Stack additions: [S0, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]
Exit stack: [V11, V159, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]

================================

Block 0xfd
[0xfd:0x105]
---
Predecessors: [0xd8, 0x106]
Successors: [0x106, 0x118]
---
0xfd JUMPDEST
0xfe DUP4
0xff DUP2
0x100 LT
0x101 ISZERO
0x102 PUSH2 0x118
0x105 JUMPI
---
0xfd: JUMPDEST 
0x100: V72 = LT S0 V68
0x101: V73 = ISZERO V72
0x102: V74 = 0x118
0x105: JUMPI 0x118 V73
---
Entry stack: [V11, V159, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V159, V61, V61, V67, V70, V68, V68, V67, V70, S0]

================================

Block 0x106
[0x106:0x117]
---
Predecessors: [0xfd]
Successors: [0xfd]
---
0x106 DUP1
0x107 DUP3
0x108 ADD
0x109 MLOAD
0x10a DUP2
0x10b DUP5
0x10c ADD
0x10d MSTORE
0x10e PUSH1 0x20
0x110 DUP2
0x111 ADD
0x112 SWAP1
0x113 POP
0x114 PUSH2 0xfd
0x117 JUMP
---
0x108: V75 = ADD V70 S0
0x109: V76 = M[V75]
0x10c: V77 = ADD V67 S0
0x10d: M[V77] = V76
0x10e: V78 = 0x20
0x111: V79 = ADD S0 0x20
0x114: V80 = 0xfd
0x117: JUMP 0xfd
---
Entry stack: [V11, V159, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 3
Stack additions: [S2, S1, V79]
Exit stack: [V11, V159, V61, V61, V67, V70, V68, V68, V67, V70, V79]

================================

Block 0x118
[0x118:0x12b]
---
Predecessors: [0xfd]
Successors: [0x12c, 0x145]
---
0x118 JUMPDEST
0x119 POP
0x11a POP
0x11b POP
0x11c POP
0x11d SWAP1
0x11e POP
0x11f SWAP1
0x120 DUP2
0x121 ADD
0x122 SWAP1
0x123 PUSH1 0x1f
0x125 AND
0x126 DUP1
0x127 ISZERO
0x128 PUSH2 0x145
0x12b JUMPI
---
0x118: JUMPDEST 
0x121: V81 = ADD V68 V67
0x123: V82 = 0x1f
0x125: V83 = AND 0x1f V68
0x127: V84 = ISZERO V83
0x128: V85 = 0x145
0x12b: JUMPI 0x145 V84
---
Entry stack: [V11, V159, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 7
Stack additions: [V81, V83]
Exit stack: [V11, V159, V61, V61, V81, V83]

================================

Block 0x12c
[0x12c:0x144]
---
Predecessors: [0x118]
Successors: [0x145]
---
0x12c DUP1
0x12d DUP3
0x12e SUB
0x12f DUP1
0x130 MLOAD
0x131 PUSH1 0x1
0x133 DUP4
0x134 PUSH1 0x20
0x136 SUB
0x137 PUSH2 0x100
0x13a EXP
0x13b SUB
0x13c NOT
0x13d AND
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
---
0x12e: V86 = SUB V81 V83
0x130: V87 = M[V86]
0x131: V88 = 0x1
0x134: V89 = 0x20
0x136: V90 = SUB 0x20 V83
0x137: V91 = 0x100
0x13a: V92 = EXP 0x100 V90
0x13b: V93 = SUB V92 0x1
0x13c: V94 = NOT V93
0x13d: V95 = AND V94 V87
0x13f: M[V86] = V95
0x140: V96 = 0x20
0x142: V97 = ADD 0x20 V86
---
Entry stack: [V11, V159, V61, V61, V81, V83]
Stack pops: 2
Stack additions: [V97, S0]
Exit stack: [V11, V159, V61, V61, V97, V83]

================================

Block 0x145
[0x145:0x152]
---
Predecessors: [0x118, 0x12c]
Successors: []
---
0x145 JUMPDEST
0x146 POP
0x147 SWAP3
0x148 POP
0x149 POP
0x14a POP
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f SWAP2
0x150 SUB
0x151 SWAP1
0x152 RETURN
---
0x145: JUMPDEST 
0x14b: V98 = 0x40
0x14d: V99 = M[0x40]
0x150: V100 = SUB S1 V99
0x152: RETURN V99 V100
---
Entry stack: [V11, V159, V61, V61, S1, V83]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x153
[0x153:0x1aa]
---
Predecessors: [0x5c]
Successors: [0x1ab, 0x1af]
---
0x153 JUMPDEST
0x154 PUSH1 0x1
0x156 PUSH1 0x0
0x158 SWAP1
0x159 SLOAD
0x15a SWAP1
0x15b PUSH2 0x100
0x15e EXP
0x15f SWAP1
0x160 DIV
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d CALLER
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 EQ
0x1a5 ISZERO
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x153: JUMPDEST 
0x154: V101 = 0x1
0x156: V102 = 0x0
0x159: V103 = S[0x1]
0x15b: V104 = 0x100
0x15e: V105 = EXP 0x100 0x0
0x160: V106 = DIV V103 0x1
0x161: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x177: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x18d: V111 = CALLER
0x18e: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1a4: V114 = EQ V113 V110
0x1a5: V115 = ISZERO V114
0x1a6: V116 = ISZERO V115
0x1a7: V117 = 0x1af
0x1aa: JUMPI 0x1af V116
---
Entry stack: [V11, 0xb5, V25, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb5, V25, V43]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x153]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V118 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb5, V25, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb5, V25, V43]

================================

Block 0x1af
[0x1af:0x1d4]
---
Predecessors: [0x153]
Successors: [0x294]
---
0x1af JUMPDEST
0x1b0 DUP1
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 DUP5
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba SWAP1
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 PUSH1 0x0
0x1c2 SHA3
0x1c3 SWAP1
0x1c4 DUP1
0x1c5 MLOAD
0x1c6 SWAP1
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP1
0x1cb PUSH2 0x1d5
0x1ce SWAP3
0x1cf SWAP2
0x1d0 SWAP1
0x1d1 PUSH2 0x294
0x1d4 JUMP
---
0x1af: JUMPDEST 
0x1b1: V119 = 0x0
0x1b6: M[0x0] = V25
0x1b7: V120 = 0x20
0x1b9: V121 = ADD 0x20 0x0
0x1bc: M[0x20] = 0x0
0x1bd: V122 = 0x20
0x1bf: V123 = ADD 0x20 0x20
0x1c0: V124 = 0x0
0x1c2: V125 = SHA3 0x0 0x40
0x1c5: V126 = M[V43]
0x1c7: V127 = 0x20
0x1c9: V128 = ADD 0x20 V43
0x1cb: V129 = 0x1d5
0x1d1: V130 = 0x294
0x1d4: JUMP 0x294
---
Entry stack: [V11, 0xb5, V25, V43]
Stack pops: 2
Stack additions: [S1, S0, 0x1d5, V125, V128, V126]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V128, V126]

================================

Block 0x1d5
[0x1d5:0x1d9]
---
Predecessors: [0x310]
Successors: [0xb5]
---
0x1d5 JUMPDEST
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 JUMP
---
0x1d5: JUMPDEST 
0x1d9: JUMP 0xb5
---
Entry stack: [V11, 0xb5, V25, V43, V125]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1da
[0x1da:0x1e1]
---
Predecessors: [0xc2]
Successors: [0x314]
---
0x1da JUMPDEST
0x1db PUSH2 0x1e2
0x1de PUSH2 0x314
0x1e1 JUMP
---
0x1da: JUMPDEST 
0x1db: V131 = 0x1e2
0x1de: V132 = 0x314
0x1e1: JUMP 0x314
---
Entry stack: [V11, 0xd8, V56]
Stack pops: 0
Stack additions: [0x1e2]
Exit stack: [V11, 0xd8, V56, 0x1e2]

================================

Block 0x1e2
[0x1e2:0x241]
---
Predecessors: [0x314]
Successors: [0x242, 0x288]
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 DUP4
0x1e7 DUP2
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec SWAP1
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 PUSH1 0x0
0x1f4 SHA3
0x1f5 DUP1
0x1f6 SLOAD
0x1f7 PUSH1 0x1
0x1f9 DUP2
0x1fa PUSH1 0x1
0x1fc AND
0x1fd ISZERO
0x1fe PUSH2 0x100
0x201 MUL
0x202 SUB
0x203 AND
0x204 PUSH1 0x2
0x206 SWAP1
0x207 DIV
0x208 DUP1
0x209 PUSH1 0x1f
0x20b ADD
0x20c PUSH1 0x20
0x20e DUP1
0x20f SWAP2
0x210 DIV
0x211 MUL
0x212 PUSH1 0x20
0x214 ADD
0x215 PUSH1 0x40
0x217 MLOAD
0x218 SWAP1
0x219 DUP2
0x21a ADD
0x21b PUSH1 0x40
0x21d MSTORE
0x21e DUP1
0x21f SWAP3
0x220 SWAP2
0x221 SWAP1
0x222 DUP2
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0x20
0x227 ADD
0x228 DUP3
0x229 DUP1
0x22a SLOAD
0x22b PUSH1 0x1
0x22d DUP2
0x22e PUSH1 0x1
0x230 AND
0x231 ISZERO
0x232 PUSH2 0x100
0x235 MUL
0x236 SUB
0x237 AND
0x238 PUSH1 0x2
0x23a SWAP1
0x23b DIV
0x23c DUP1
0x23d ISZERO
0x23e PUSH2 0x288
0x241 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V133 = 0x0
0x1e8: M[0x0] = V56
0x1e9: V134 = 0x20
0x1eb: V135 = ADD 0x20 0x0
0x1ee: M[0x20] = 0x0
0x1ef: V136 = 0x20
0x1f1: V137 = ADD 0x20 0x20
0x1f2: V138 = 0x0
0x1f4: V139 = SHA3 0x0 0x40
0x1f6: V140 = S[V139]
0x1f7: V141 = 0x1
0x1fa: V142 = 0x1
0x1fc: V143 = AND 0x1 V140
0x1fd: V144 = ISZERO V143
0x1fe: V145 = 0x100
0x201: V146 = MUL 0x100 V144
0x202: V147 = SUB V146 0x1
0x203: V148 = AND V147 V140
0x204: V149 = 0x2
0x207: V150 = DIV V148 0x2
0x209: V151 = 0x1f
0x20b: V152 = ADD 0x1f V150
0x20c: V153 = 0x20
0x210: V154 = DIV V152 0x20
0x211: V155 = MUL V154 0x20
0x212: V156 = 0x20
0x214: V157 = ADD 0x20 V155
0x215: V158 = 0x40
0x217: V159 = M[0x40]
0x21a: V160 = ADD V159 V157
0x21b: V161 = 0x40
0x21d: M[0x40] = V160
0x224: M[V159] = V150
0x225: V162 = 0x20
0x227: V163 = ADD 0x20 V159
0x22a: V164 = S[V139]
0x22b: V165 = 0x1
0x22e: V166 = 0x1
0x230: V167 = AND 0x1 V164
0x231: V168 = ISZERO V167
0x232: V169 = 0x100
0x235: V170 = MUL 0x100 V168
0x236: V171 = SUB V170 0x1
0x237: V172 = AND V171 V164
0x238: V173 = 0x2
0x23b: V174 = DIV V172 0x2
0x23d: V175 = ISZERO V174
0x23e: V176 = 0x288
0x241: JUMPI 0x288 V175
---
Entry stack: [V11, 0xd8, V56, V252]
Stack pops: 2
Stack additions: [S1, S0, V159, V139, V150, V163, V139, V174]
Exit stack: [V11, 0xd8, V56, V252, V159, V139, V150, V163, V139, V174]

================================

Block 0x242
[0x242:0x249]
---
Predecessors: [0x1e2]
Successors: [0x24a, 0x25d]
---
0x242 DUP1
0x243 PUSH1 0x1f
0x245 LT
0x246 PUSH2 0x25d
0x249 JUMPI
---
0x243: V177 = 0x1f
0x245: V178 = LT 0x1f V174
0x246: V179 = 0x25d
0x249: JUMPI 0x25d V178
---
Entry stack: [V11, 0xd8, V56, V252, V159, V139, V150, V163, V139, V174]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xd8, V56, V252, V159, V139, V150, V163, V139, V174]

================================

Block 0x24a
[0x24a:0x25c]
---
Predecessors: [0x242]
Successors: [0x288]
---
0x24a PUSH2 0x100
0x24d DUP1
0x24e DUP4
0x24f SLOAD
0x250 DIV
0x251 MUL
0x252 DUP4
0x253 MSTORE
0x254 SWAP2
0x255 PUSH1 0x20
0x257 ADD
0x258 SWAP2
0x259 PUSH2 0x288
0x25c JUMP
---
0x24a: V180 = 0x100
0x24f: V181 = S[V139]
0x250: V182 = DIV V181 0x100
0x251: V183 = MUL V182 0x100
0x253: M[V163] = V183
0x255: V184 = 0x20
0x257: V185 = ADD 0x20 V163
0x259: V186 = 0x288
0x25c: JUMP 0x288
---
Entry stack: [V11, 0xd8, V56, V252, V159, V139, V150, V163, V139, V174]
Stack pops: 3
Stack additions: [V185, S1, S0]
Exit stack: [V11, 0xd8, V56, V252, V159, V139, V150, V185, V139, V174]

================================

Block 0x25d
[0x25d:0x26a]
---
Predecessors: [0x242]
Successors: [0x26b]
---
0x25d JUMPDEST
0x25e DUP3
0x25f ADD
0x260 SWAP2
0x261 SWAP1
0x262 PUSH1 0x0
0x264 MSTORE
0x265 PUSH1 0x20
0x267 PUSH1 0x0
0x269 SHA3
0x26a SWAP1
---
0x25d: JUMPDEST 
0x25f: V187 = ADD V163 V174
0x262: V188 = 0x0
0x264: M[0x0] = V139
0x265: V189 = 0x20
0x267: V190 = 0x0
0x269: V191 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xd8, V56, V252, V159, V139, V150, V163, V139, V174]
Stack pops: 3
Stack additions: [V187, V191, S2]
Exit stack: [V11, 0xd8, V56, V252, V159, V139, V150, V187, V191, V163]

================================

Block 0x26b
[0x26b:0x27e]
---
Predecessors: [0x25d, 0x26b]
Successors: [0x26b, 0x27f]
---
0x26b JUMPDEST
0x26c DUP2
0x26d SLOAD
0x26e DUP2
0x26f MSTORE
0x270 SWAP1
0x271 PUSH1 0x1
0x273 ADD
0x274 SWAP1
0x275 PUSH1 0x20
0x277 ADD
0x278 DUP1
0x279 DUP4
0x27a GT
0x27b PUSH2 0x26b
0x27e JUMPI
---
0x26b: JUMPDEST 
0x26d: V192 = S[S1]
0x26f: M[S0] = V192
0x271: V193 = 0x1
0x273: V194 = ADD 0x1 S1
0x275: V195 = 0x20
0x277: V196 = ADD 0x20 S0
0x27a: V197 = GT V187 V196
0x27b: V198 = 0x26b
0x27e: JUMPI 0x26b V197
---
Entry stack: [V11, 0xd8, V56, V252, V159, V139, V150, V187, S1, S0]
Stack pops: 3
Stack additions: [S2, V194, V196]
Exit stack: [V11, 0xd8, V56, V252, V159, V139, V150, V187, V194, V196]

================================

Block 0x27f
[0x27f:0x287]
---
Predecessors: [0x26b]
Successors: [0x288]
---
0x27f DUP3
0x280 SWAP1
0x281 SUB
0x282 PUSH1 0x1f
0x284 AND
0x285 DUP3
0x286 ADD
0x287 SWAP2
---
0x281: V199 = SUB V196 V187
0x282: V200 = 0x1f
0x284: V201 = AND 0x1f V199
0x286: V202 = ADD V187 V201
---
Entry stack: [V11, 0xd8, V56, V252, V159, V139, V150, V187, V194, V196]
Stack pops: 3
Stack additions: [V202, S1, S2]
Exit stack: [V11, 0xd8, V56, V252, V159, V139, V150, V202, V194, V187]

================================

Block 0x288
[0x288:0x293]
---
Predecessors: [0x1e2, 0x24a, 0x27f]
Successors: [0xd8]
---
0x288 JUMPDEST
0x289 POP
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e SWAP1
0x28f POP
0x290 SWAP2
0x291 SWAP1
0x292 POP
0x293 JUMP
---
0x288: JUMPDEST 
0x293: JUMP 0xd8
---
Entry stack: [V11, 0xd8, V56, V252, V159, V139, V150, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V11, V159]

================================

Block 0x294
[0x294:0x2c4]
---
Predecessors: [0x1af]
Successors: [0x2c5, 0x2d5]
---
0x294 JUMPDEST
0x295 DUP3
0x296 DUP1
0x297 SLOAD
0x298 PUSH1 0x1
0x29a DUP2
0x29b PUSH1 0x1
0x29d AND
0x29e ISZERO
0x29f PUSH2 0x100
0x2a2 MUL
0x2a3 SUB
0x2a4 AND
0x2a5 PUSH1 0x2
0x2a7 SWAP1
0x2a8 DIV
0x2a9 SWAP1
0x2aa PUSH1 0x0
0x2ac MSTORE
0x2ad PUSH1 0x20
0x2af PUSH1 0x0
0x2b1 SHA3
0x2b2 SWAP1
0x2b3 PUSH1 0x1f
0x2b5 ADD
0x2b6 PUSH1 0x20
0x2b8 SWAP1
0x2b9 DIV
0x2ba DUP2
0x2bb ADD
0x2bc SWAP3
0x2bd DUP3
0x2be PUSH1 0x1f
0x2c0 LT
0x2c1 PUSH2 0x2d5
0x2c4 JUMPI
---
0x294: JUMPDEST 
0x297: V203 = S[V125]
0x298: V204 = 0x1
0x29b: V205 = 0x1
0x29d: V206 = AND 0x1 V203
0x29e: V207 = ISZERO V206
0x29f: V208 = 0x100
0x2a2: V209 = MUL 0x100 V207
0x2a3: V210 = SUB V209 0x1
0x2a4: V211 = AND V210 V203
0x2a5: V212 = 0x2
0x2a8: V213 = DIV V211 0x2
0x2aa: V214 = 0x0
0x2ac: M[0x0] = V125
0x2ad: V215 = 0x20
0x2af: V216 = 0x0
0x2b1: V217 = SHA3 0x0 0x20
0x2b3: V218 = 0x1f
0x2b5: V219 = ADD 0x1f V213
0x2b6: V220 = 0x20
0x2b9: V221 = DIV V219 0x20
0x2bb: V222 = ADD V217 V221
0x2be: V223 = 0x1f
0x2c0: V224 = LT 0x1f V126
0x2c1: V225 = 0x2d5
0x2c4: JUMPI 0x2d5 V224
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V128, V126]
Stack pops: 3
Stack additions: [S2, V222, S0, V217, S1]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V126, V217, V128]

================================

Block 0x2c5
[0x2c5:0x2d4]
---
Predecessors: [0x294]
Successors: [0x303]
---
0x2c5 DUP1
0x2c6 MLOAD
0x2c7 PUSH1 0xff
0x2c9 NOT
0x2ca AND
0x2cb DUP4
0x2cc DUP1
0x2cd ADD
0x2ce OR
0x2cf DUP6
0x2d0 SSTORE
0x2d1 PUSH2 0x303
0x2d4 JUMP
---
0x2c6: V226 = M[V128]
0x2c7: V227 = 0xff
0x2c9: V228 = NOT 0xff
0x2ca: V229 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V226
0x2cd: V230 = ADD V126 V126
0x2ce: V231 = OR V230 V229
0x2d0: S[V125] = V231
0x2d1: V232 = 0x303
0x2d4: JUMP 0x303
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V126, V217, V128]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V126, V217, V128]

================================

Block 0x2d5
[0x2d5:0x2e3]
---
Predecessors: [0x294]
Successors: [0x2e4, 0x303]
---
0x2d5 JUMPDEST
0x2d6 DUP3
0x2d7 DUP1
0x2d8 ADD
0x2d9 PUSH1 0x1
0x2db ADD
0x2dc DUP6
0x2dd SSTORE
0x2de DUP3
0x2df ISZERO
0x2e0 PUSH2 0x303
0x2e3 JUMPI
---
0x2d5: JUMPDEST 
0x2d8: V233 = ADD V126 V126
0x2d9: V234 = 0x1
0x2db: V235 = ADD 0x1 V233
0x2dd: S[V125] = V235
0x2df: V236 = ISZERO V126
0x2e0: V237 = 0x303
0x2e3: JUMPI 0x303 V236
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V126, V217, V128]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V126, V217, V128]

================================

Block 0x2e4
[0x2e4:0x2e6]
---
Predecessors: [0x2d5]
Successors: [0x2e7]
---
0x2e4 SWAP2
0x2e5 DUP3
0x2e6 ADD
---
0x2e6: V238 = ADD V128 V126
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V126, V217, V128]
Stack pops: 3
Stack additions: [S0, S1, V238]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V128, V217, V238]

================================

Block 0x2e7
[0x2e7:0x2ef]
---
Predecessors: [0x2e4, 0x2f0]
Successors: [0x2f0, 0x302]
---
0x2e7 JUMPDEST
0x2e8 DUP3
0x2e9 DUP2
0x2ea GT
0x2eb ISZERO
0x2ec PUSH2 0x302
0x2ef JUMPI
---
0x2e7: JUMPDEST 
0x2ea: V239 = GT V238 S2
0x2eb: V240 = ISZERO V239
0x2ec: V241 = 0x302
0x2ef: JUMPI 0x302 V240
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, S2, S1, V238]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, S2, S1, V238]

================================

Block 0x2f0
[0x2f0:0x301]
---
Predecessors: [0x2e7]
Successors: [0x2e7]
---
0x2f0 DUP3
0x2f1 MLOAD
0x2f2 DUP3
0x2f3 SSTORE
0x2f4 SWAP2
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 SWAP2
0x2f9 SWAP1
0x2fa PUSH1 0x1
0x2fc ADD
0x2fd SWAP1
0x2fe PUSH2 0x2e7
0x301 JUMP
---
0x2f1: V242 = M[S2]
0x2f3: S[S1] = V242
0x2f5: V243 = 0x20
0x2f7: V244 = ADD 0x20 S2
0x2fa: V245 = 0x1
0x2fc: V246 = ADD 0x1 S1
0x2fe: V247 = 0x2e7
0x301: JUMP 0x2e7
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, S2, S1, V238]
Stack pops: 3
Stack additions: [V244, V246, S0]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, V244, V246, V238]

================================

Block 0x302
[0x302:0x302]
---
Predecessors: [0x2e7]
Successors: [0x303]
---
0x302 JUMPDEST
---
0x302: JUMPDEST 
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, S2, S1, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, S2, S1, V238]

================================

Block 0x303
[0x303:0x30f]
---
Predecessors: [0x2c5, 0x2d5, 0x302]
Successors: [0x328]
---
0x303 JUMPDEST
0x304 POP
0x305 SWAP1
0x306 POP
0x307 PUSH2 0x310
0x30a SWAP2
0x30b SWAP1
0x30c PUSH2 0x328
0x30f JUMP
---
0x303: JUMPDEST 
0x307: V248 = 0x310
0x30c: V249 = 0x328
0x30f: JUMP 0x328
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222, S2, S1, S0]
Stack pops: 4
Stack additions: [0x310, S3, S1]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, V222, S1]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x34a]
Successors: [0x1d5]
---
0x310 JUMPDEST
0x311 POP
0x312 SWAP1
0x313 JUMP
---
0x310: JUMPDEST 
0x313: JUMP 0x1d5
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xb5, V25, V43, V125]

================================

Block 0x314
[0x314:0x327]
---
Predecessors: [0x1da]
Successors: [0x1e2]
---
0x314 JUMPDEST
0x315 PUSH1 0x20
0x317 PUSH1 0x40
0x319 MLOAD
0x31a SWAP1
0x31b DUP2
0x31c ADD
0x31d PUSH1 0x40
0x31f MSTORE
0x320 DUP1
0x321 PUSH1 0x0
0x323 DUP2
0x324 MSTORE
0x325 POP
0x326 SWAP1
0x327 JUMP
---
0x314: JUMPDEST 
0x315: V250 = 0x20
0x317: V251 = 0x40
0x319: V252 = M[0x40]
0x31c: V253 = ADD V252 0x20
0x31d: V254 = 0x40
0x31f: M[0x40] = V253
0x321: V255 = 0x0
0x324: M[V252] = 0x0
0x327: JUMP 0x1e2
---
Entry stack: [V11, 0xd8, V56, 0x1e2]
Stack pops: 1
Stack additions: [V252]
Exit stack: [V11, 0xd8, V56, V252]

================================

Block 0x328
[0x328:0x32d]
---
Predecessors: [0x303]
Successors: [0x32e]
---
0x328 JUMPDEST
0x329 PUSH2 0x34a
0x32c SWAP2
0x32d SWAP1
---
0x328: JUMPDEST 
0x329: V256 = 0x34a
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, V222, S0]
Stack pops: 2
Stack additions: [0x34a, S1, S0]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, 0x34a, V222, S0]

================================

Block 0x32e
[0x32e:0x336]
---
Predecessors: [0x328, 0x337]
Successors: [0x337, 0x346]
---
0x32e JUMPDEST
0x32f DUP1
0x330 DUP3
0x331 GT
0x332 ISZERO
0x333 PUSH2 0x346
0x336 JUMPI
---
0x32e: JUMPDEST 
0x331: V257 = GT V222 S0
0x332: V258 = ISZERO V257
0x333: V259 = 0x346
0x336: JUMPI 0x346 V258
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, 0x34a, V222, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, 0x34a, V222, S0]

================================

Block 0x337
[0x337:0x345]
---
Predecessors: [0x32e]
Successors: [0x32e]
---
0x337 PUSH1 0x0
0x339 DUP2
0x33a PUSH1 0x0
0x33c SWAP1
0x33d SSTORE
0x33e POP
0x33f PUSH1 0x1
0x341 ADD
0x342 PUSH2 0x32e
0x345 JUMP
---
0x337: V260 = 0x0
0x33a: V261 = 0x0
0x33d: S[S0] = 0x0
0x33f: V262 = 0x1
0x341: V263 = ADD 0x1 S0
0x342: V264 = 0x32e
0x345: JUMP 0x32e
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, 0x34a, V222, S0]
Stack pops: 1
Stack additions: [V263]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, 0x34a, V222, V263]

================================

Block 0x346
[0x346:0x349]
---
Predecessors: [0x32e]
Successors: [0x34a]
---
0x346 JUMPDEST
0x347 POP
0x348 SWAP1
0x349 JUMP
---
0x346: JUMPDEST 
0x349: JUMP 0x34a
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, 0x34a, V222, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, V222]

================================

Block 0x34a
[0x34a:0x34c]
---
Predecessors: [0x346]
Successors: [0x310]
---
0x34a JUMPDEST
0x34b SWAP1
0x34c JUMP
---
0x34a: JUMPDEST 
0x34c: JUMP 0x310
---
Entry stack: [V11, 0xb5, V25, V43, 0x1d5, V125, 0x310, V222]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xb5, V25, V43, 0x1d5, V125, V222]

================================

Block 0x34d
[0x34d:0x379]
---
Predecessors: []
Successors: []
---
0x34d STOP
0x34e LOG1
0x34f PUSH6 0x627a7a723058
0x356 SHA3
0x357 GASLIMIT
0x358 JUMP
0x359 PUSH32 0x3477a31af443275218598a95944157dc45e575472c517de9ef5014836a0029
---
0x34d: STOP 
0x34e: LOG S0 S1 S2
0x34f: V265 = 0x627a7a723058
0x356: V266 = SHA3 0x627a7a723058 S3
0x357: V267 = GASLIMIT
0x358: JUMP V267
0x359: V268 = 0x3477a31af443275218598a95944157dc45e575472c517de9ef5014836a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V266, 0x3477a31af443275218598a95944157dc45e575472c517de9ef5014836a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2fbaba26
Entry block: 0x51
Exit block: 0xb5
Body: 0x51, 0x58, 0x5c, 0xb5, 0x153, 0x1ab, 0x1af, 0x1d5, 0x294, 0x2c5, 0x2d5, 0x2e4, 0x2e7, 0x2f0, 0x302, 0x303, 0x310, 0x328, 0x32e, 0x337, 0x346, 0x34a

Function 1:
Public function signature: 0x6b2fafa9
Entry block: 0xb7
Exit block: 0x145
Body: 0xb7, 0xbe, 0xc2, 0xd8, 0xfd, 0x106, 0x118, 0x12c, 0x145, 0x1da, 0x1e2, 0x242, 0x24a, 0x25d, 0x26b, 0x27f, 0x288, 0x314

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

