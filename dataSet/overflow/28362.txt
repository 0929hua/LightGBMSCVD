Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2d202d24
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2d202d24
0x3c: V13 = EQ 0x2d202d24 V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xce]
---
0x41 DUP1
0x42 PUSH4 0x573f642d
0x47 EQ
0x48 PUSH2 0xce
0x4b JUMPI
---
0x42: V15 = 0x573f642d
0x47: V16 = EQ 0x573f642d V11
0x48: V17 = 0xce
0x4b: JUMPI 0xce V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x15c]
---
0x4c DUP1
0x4d PUSH4 0x97f59897
0x52 EQ
0x53 PUSH2 0x15c
0x56 JUMPI
---
0x4d: V18 = 0x97f59897
0x52: V19 = EQ 0x97f59897 V11
0x53: V20 = 0x15c
0x56: JUMPI 0x15c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1b1]
---
0x57 DUP1
0x58 PUSH4 0x992924a6
0x5d EQ
0x5e PUSH2 0x1b1
0x61 JUMPI
---
0x58: V21 = 0x992924a6
0x5d: V22 = EQ 0x992924a6 V11
0x5e: V23 = 0x1b1
0x61: JUMPI 0x1b1 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x214]
---
0x62 DUP1
0x63 PUSH4 0xd5d1e770
0x68 EQ
0x69 PUSH2 0x214
0x6c JUMPI
---
0x63: V24 = 0xd5d1e770
0x68: V25 = EQ 0xd5d1e770 V11
0x69: V26 = 0x214
0x6c: JUMPI 0x214 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x241]
---
0x6d DUP1
0x6e PUSH4 0xfd42657a
0x73 EQ
0x74 PUSH2 0x241
0x77 JUMPI
---
0x6e: V27 = 0xfd42657a
0x73: V28 = EQ 0xfd42657a V11
0x74: V29 = 0x241
0x77: JUMPI 0x241 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0xb3]
---
Predecessors: [0x7d]
Successors: [0x296]
---
0x88 JUMPDEST
0x89 PUSH2 0xb4
0x8c PUSH1 0x4
0x8e DUP1
0x8f DUP1
0x90 CALLDATALOAD
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP2
0xad SWAP1
0xae POP
0xaf POP
0xb0 PUSH2 0x296
0xb3 JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0xb4
0x8c: V36 = 0x4
0x90: V37 = CALLDATALOAD 0x4
0x91: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xa8: V40 = 0x20
0xaa: V41 = ADD 0x20 0x4
0xb0: V42 = 0x296
0xb3: JUMP 0x296
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb4, V39]
Exit stack: [V11, 0xb4, V39]

================================

Block 0xb4
[0xb4:0xcd]
---
Predecessors: [0x33e]
Successors: []
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 DUP1
0xb9 DUP3
0xba ISZERO
0xbb ISZERO
0xbc ISZERO
0xbd ISZERO
0xbe DUP2
0xbf MSTORE
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP2
0xc4 POP
0xc5 POP
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca SWAP2
0xcb SUB
0xcc SWAP1
0xcd RETURN
---
0xb4: JUMPDEST 
0xb5: V43 = 0x40
0xb7: V44 = M[0x40]
0xba: V45 = ISZERO {0x0, 0x1}
0xbb: V46 = ISZERO V45
0xbc: V47 = ISZERO V46
0xbd: V48 = ISZERO V47
0xbf: M[V44] = V48
0xc0: V49 = 0x20
0xc2: V50 = ADD 0x20 V44
0xc6: V51 = 0x40
0xc8: V52 = M[0x40]
0xcb: V53 = SUB V50 V52
0xcd: RETURN V52 V53
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x41]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V54 = CALLVALUE
0xd0: V55 = ISZERO V54
0xd1: V56 = 0xd9
0xd4: JUMPI 0xd9 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V57 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0xce]
Successors: [0x343]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x343
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V58 = 0xe1
0xdd: V59 = 0x343
0xe0: JUMP 0x343
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0x105]
---
Predecessors: [0x3d9]
Successors: [0x106]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 DUP1
0xe7 PUSH1 0x20
0xe9 ADD
0xea DUP3
0xeb DUP2
0xec SUB
0xed DUP3
0xee MSTORE
0xef DUP4
0xf0 DUP2
0xf1 DUP2
0xf2 MLOAD
0xf3 DUP2
0xf4 MSTORE
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP2
0xf9 POP
0xfa DUP1
0xfb MLOAD
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 DUP1
0x102 DUP4
0x103 DUP4
0x104 PUSH1 0x0
---
0xe1: JUMPDEST 
0xe2: V60 = 0x40
0xe4: V61 = M[0x40]
0xe7: V62 = 0x20
0xe9: V63 = ADD 0x20 V61
0xec: V64 = SUB V63 V61
0xee: M[V61] = V64
0xf2: V65 = M[V227]
0xf4: M[V63] = V65
0xf5: V66 = 0x20
0xf7: V67 = ADD 0x20 V63
0xfb: V68 = M[V227]
0xfd: V69 = 0x20
0xff: V70 = ADD 0x20 V227
0x104: V71 = 0x0
---
Entry stack: [V11, 0xe1, V227]
Stack pops: 1
Stack additions: [S0, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]
Exit stack: [V11, 0xe1, V227, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xe1, 0x10f]
Successors: [0x10f, 0x121]
---
0x106 JUMPDEST
0x107 DUP4
0x108 DUP2
0x109 LT
0x10a ISZERO
0x10b PUSH2 0x121
0x10e JUMPI
---
0x106: JUMPDEST 
0x109: V72 = LT S0 V68
0x10a: V73 = ISZERO V72
0x10b: V74 = 0x121
0x10e: JUMPI 0x121 V73
---
Entry stack: [V11, 0xe1, V227, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xe1, V227, V61, V61, V67, V70, V68, V68, V67, V70, S0]

================================

Block 0x10f
[0x10f:0x120]
---
Predecessors: [0x106]
Successors: [0x106]
---
0x10f DUP1
0x110 DUP3
0x111 ADD
0x112 MLOAD
0x113 DUP2
0x114 DUP5
0x115 ADD
0x116 MSTORE
0x117 PUSH1 0x20
0x119 DUP2
0x11a ADD
0x11b SWAP1
0x11c POP
0x11d PUSH2 0x106
0x120 JUMP
---
0x111: V75 = ADD V70 S0
0x112: V76 = M[V75]
0x115: V77 = ADD V67 S0
0x116: M[V77] = V76
0x117: V78 = 0x20
0x11a: V79 = ADD S0 0x20
0x11d: V80 = 0x106
0x120: JUMP 0x106
---
Entry stack: [V11, 0xe1, V227, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 3
Stack additions: [S2, S1, V79]
Exit stack: [V11, 0xe1, V227, V61, V61, V67, V70, V68, V68, V67, V70, V79]

================================

Block 0x121
[0x121:0x134]
---
Predecessors: [0x106]
Successors: [0x135, 0x14e]
---
0x121 JUMPDEST
0x122 POP
0x123 POP
0x124 POP
0x125 POP
0x126 SWAP1
0x127 POP
0x128 SWAP1
0x129 DUP2
0x12a ADD
0x12b SWAP1
0x12c PUSH1 0x1f
0x12e AND
0x12f DUP1
0x130 ISZERO
0x131 PUSH2 0x14e
0x134 JUMPI
---
0x121: JUMPDEST 
0x12a: V81 = ADD V68 V67
0x12c: V82 = 0x1f
0x12e: V83 = AND 0x1f V68
0x130: V84 = ISZERO V83
0x131: V85 = 0x14e
0x134: JUMPI 0x14e V84
---
Entry stack: [V11, 0xe1, V227, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 7
Stack additions: [V81, V83]
Exit stack: [V11, 0xe1, V227, V61, V61, V81, V83]

================================

Block 0x135
[0x135:0x14d]
---
Predecessors: [0x121]
Successors: [0x14e]
---
0x135 DUP1
0x136 DUP3
0x137 SUB
0x138 DUP1
0x139 MLOAD
0x13a PUSH1 0x1
0x13c DUP4
0x13d PUSH1 0x20
0x13f SUB
0x140 PUSH2 0x100
0x143 EXP
0x144 SUB
0x145 NOT
0x146 AND
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP2
0x14d POP
---
0x137: V86 = SUB V81 V83
0x139: V87 = M[V86]
0x13a: V88 = 0x1
0x13d: V89 = 0x20
0x13f: V90 = SUB 0x20 V83
0x140: V91 = 0x100
0x143: V92 = EXP 0x100 V90
0x144: V93 = SUB V92 0x1
0x145: V94 = NOT V93
0x146: V95 = AND V94 V87
0x148: M[V86] = V95
0x149: V96 = 0x20
0x14b: V97 = ADD 0x20 V86
---
Entry stack: [V11, 0xe1, V227, V61, V61, V81, V83]
Stack pops: 2
Stack additions: [V97, S0]
Exit stack: [V11, 0xe1, V227, V61, V61, V97, V83]

================================

Block 0x14e
[0x14e:0x15b]
---
Predecessors: [0x121, 0x135]
Successors: []
---
0x14e JUMPDEST
0x14f POP
0x150 SWAP3
0x151 POP
0x152 POP
0x153 POP
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 SWAP2
0x159 SUB
0x15a SWAP1
0x15b RETURN
---
0x14e: JUMPDEST 
0x154: V98 = 0x40
0x156: V99 = M[0x40]
0x159: V100 = SUB S1 V99
0x15b: RETURN V99 V100
---
Entry stack: [V11, 0xe1, V227, V61, V61, S1, V83]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x4c]
Successors: [0x163, 0x167]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V101 = CALLVALUE
0x15e: V102 = ISZERO V101
0x15f: V103 = 0x167
0x162: JUMPI 0x167 V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x15c]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V104 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x16e]
---
Predecessors: [0x15c]
Successors: [0x3e1]
---
0x167 JUMPDEST
0x168 PUSH2 0x16f
0x16b PUSH2 0x3e1
0x16e JUMP
---
0x167: JUMPDEST 
0x168: V105 = 0x16f
0x16b: V106 = 0x3e1
0x16e: JUMP 0x3e1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16f]
Exit stack: [V11, 0x16f]

================================

Block 0x16f
[0x16f:0x1b0]
---
Predecessors: [0x3e1]
Successors: []
---
0x16f JUMPDEST
0x170 PUSH1 0x40
0x172 MLOAD
0x173 DUP1
0x174 DUP3
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP2
0x1a7 POP
0x1a8 POP
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad SWAP2
0x1ae SUB
0x1af SWAP1
0x1b0 RETURN
---
0x16f: JUMPDEST 
0x170: V107 = 0x40
0x172: V108 = M[0x40]
0x175: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x18b: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1a2: M[V108] = V112
0x1a3: V113 = 0x20
0x1a5: V114 = ADD 0x20 V108
0x1a9: V115 = 0x40
0x1ab: V116 = M[0x40]
0x1ae: V117 = SUB V114 V116
0x1b0: RETURN V116 V117
---
Entry stack: [V11, 0x16f, V278]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x16f]

================================

Block 0x1b1
[0x1b1:0x1b7]
---
Predecessors: [0x57]
Successors: [0x1b8, 0x1bc]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V118 = CALLVALUE
0x1b3: V119 = ISZERO V118
0x1b4: V120 = 0x1bc
0x1b7: JUMPI 0x1bc V119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V121 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bc
[0x1bc:0x1d1]
---
Predecessors: [0x1b1]
Successors: [0x407]
---
0x1bc JUMPDEST
0x1bd PUSH2 0x1d2
0x1c0 PUSH1 0x4
0x1c2 DUP1
0x1c3 DUP1
0x1c4 CALLDATALOAD
0x1c5 SWAP1
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 SWAP1
0x1ca SWAP2
0x1cb SWAP1
0x1cc POP
0x1cd POP
0x1ce PUSH2 0x407
0x1d1 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V122 = 0x1d2
0x1c0: V123 = 0x4
0x1c4: V124 = CALLDATALOAD 0x4
0x1c6: V125 = 0x20
0x1c8: V126 = ADD 0x20 0x4
0x1ce: V127 = 0x407
0x1d1: JUMP 0x407
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d2, V124]
Exit stack: [V11, 0x1d2, V124]

================================

Block 0x1d2
[0x1d2:0x213]
---
Predecessors: [0x416]
Successors: []
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 DUP3
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 DUP2
0x205 MSTORE
0x206 PUSH1 0x20
0x208 ADD
0x209 SWAP2
0x20a POP
0x20b POP
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 SWAP2
0x211 SUB
0x212 SWAP1
0x213 RETURN
---
0x1d2: JUMPDEST 
0x1d3: V128 = 0x40
0x1d5: V129 = M[0x40]
0x1d8: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x1ee: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x205: M[V129] = V133
0x206: V134 = 0x20
0x208: V135 = ADD 0x20 V129
0x20c: V136 = 0x40
0x20e: V137 = M[0x40]
0x211: V138 = SUB V135 V137
0x213: RETURN V137 V138
---
Entry stack: [V11, 0x1d2, V296]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1d2]

================================

Block 0x214
[0x214:0x21a]
---
Predecessors: [0x62]
Successors: [0x21b, 0x21f]
---
0x214 JUMPDEST
0x215 CALLVALUE
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x214: JUMPDEST 
0x215: V139 = CALLVALUE
0x216: V140 = ISZERO V139
0x217: V141 = 0x21f
0x21a: JUMPI 0x21f V140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x214]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V142 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21f
[0x21f:0x226]
---
Predecessors: [0x214]
Successors: [0x446]
---
0x21f JUMPDEST
0x220 PUSH2 0x227
0x223 PUSH2 0x446
0x226 JUMP
---
0x21f: JUMPDEST 
0x220: V143 = 0x227
0x223: V144 = 0x446
0x226: JUMP 0x446
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V11, 0x227]

================================

Block 0x227
[0x227:0x240]
---
Predecessors: [0x5d7]
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c DUP3
0x22d ISZERO
0x22e ISZERO
0x22f ISZERO
0x230 ISZERO
0x231 DUP2
0x232 MSTORE
0x233 PUSH1 0x20
0x235 ADD
0x236 SWAP2
0x237 POP
0x238 POP
0x239 PUSH1 0x40
0x23b MLOAD
0x23c DUP1
0x23d SWAP2
0x23e SUB
0x23f SWAP1
0x240 RETURN
---
0x227: JUMPDEST 
0x228: V145 = 0x40
0x22a: V146 = M[0x40]
0x22d: V147 = ISZERO {0x0, 0x1}
0x22e: V148 = ISZERO V147
0x22f: V149 = ISZERO V148
0x230: V150 = ISZERO V149
0x232: M[V146] = V150
0x233: V151 = 0x20
0x235: V152 = ADD 0x20 V146
0x239: V153 = 0x40
0x23b: V154 = M[0x40]
0x23e: V155 = SUB V152 V154
0x240: RETURN V154 V155
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x241
[0x241:0x247]
---
Predecessors: [0x6d]
Successors: [0x248, 0x24c]
---
0x241 JUMPDEST
0x242 CALLVALUE
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x241: JUMPDEST 
0x242: V156 = CALLVALUE
0x243: V157 = ISZERO V156
0x244: V158 = 0x24c
0x247: JUMPI 0x24c V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x241]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V159 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x24c
[0x24c:0x253]
---
Predecessors: [0x241]
Successors: [0x5da]
---
0x24c JUMPDEST
0x24d PUSH2 0x254
0x250 PUSH2 0x5da
0x253 JUMP
---
0x24c: JUMPDEST 
0x24d: V160 = 0x254
0x250: V161 = 0x5da
0x253: JUMP 0x5da
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V11, 0x254]

================================

Block 0x254
[0x254:0x295]
---
Predecessors: [0x5da]
Successors: []
---
0x254 JUMPDEST
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 DUP3
0x25a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26f AND
0x270 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x285 AND
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a ADD
0x28b SWAP2
0x28c POP
0x28d POP
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 SWAP2
0x293 SUB
0x294 SWAP1
0x295 RETURN
---
0x254: JUMPDEST 
0x255: V162 = 0x40
0x257: V163 = M[0x40]
0x25a: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x26f: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x270: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x285: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x287: M[V163] = V167
0x288: V168 = 0x20
0x28a: V169 = ADD 0x20 V163
0x28e: V170 = 0x40
0x290: V171 = M[0x40]
0x293: V172 = SUB V169 V171
0x295: RETURN V171 V172
---
Entry stack: [V11, 0x254, V391]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x296
[0x296:0x2ef]
---
Predecessors: [0x88]
Successors: [0x2f0, 0x2f8]
---
0x296 JUMPDEST
0x297 PUSH1 0x0
0x299 CALLER
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0x0
0x2b4 SWAP1
0x2b5 SLOAD
0x2b6 SWAP1
0x2b7 PUSH2 0x100
0x2ba EXP
0x2bb SWAP1
0x2bc DIV
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e8 AND
0x2e9 EQ
0x2ea ISZERO
0x2eb ISZERO
0x2ec PUSH2 0x2f8
0x2ef JUMPI
---
0x296: JUMPDEST 
0x297: V173 = 0x0
0x299: V174 = CALLER
0x29a: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x2b0: V177 = 0x1
0x2b2: V178 = 0x0
0x2b5: V179 = S[0x1]
0x2b7: V180 = 0x100
0x2ba: V181 = EXP 0x100 0x0
0x2bc: V182 = DIV V179 0x1
0x2bd: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x2d3: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2e9: V187 = EQ V186 V176
0x2ea: V188 = ISZERO V187
0x2eb: V189 = ISZERO V188
0x2ec: V190 = 0x2f8
0x2ef: JUMPI 0x2f8 V189
---
Entry stack: [V11, 0xb4, V39]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xb4, V39, 0x0]

================================

Block 0x2f0
[0x2f0:0x2f7]
---
Predecessors: [0x296]
Successors: [0x33e]
---
0x2f0 PUSH1 0x0
0x2f2 SWAP1
0x2f3 POP
0x2f4 PUSH2 0x33e
0x2f7 JUMP
---
0x2f0: V191 = 0x0
0x2f4: V192 = 0x33e
0x2f7: JUMP 0x33e
---
Entry stack: [V11, 0xb4, V39, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xb4, V39, 0x0]

================================

Block 0x2f8
[0x2f8:0x33d]
---
Predecessors: [0x296]
Successors: [0x33e]
---
0x2f8 JUMPDEST
0x2f9 DUP2
0x2fa PUSH1 0x2
0x2fc PUSH1 0x0
0x2fe PUSH2 0x100
0x301 EXP
0x302 DUP2
0x303 SLOAD
0x304 DUP2
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a MUL
0x31b NOT
0x31c AND
0x31d SWAP1
0x31e DUP4
0x31f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x334 AND
0x335 MUL
0x336 OR
0x337 SWAP1
0x338 SSTORE
0x339 POP
0x33a PUSH1 0x1
0x33c SWAP1
0x33d POP
---
0x2f8: JUMPDEST 
0x2fa: V193 = 0x2
0x2fc: V194 = 0x0
0x2fe: V195 = 0x100
0x301: V196 = EXP 0x100 0x0
0x303: V197 = S[0x2]
0x305: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V199 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x31b: V200 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V201 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V197
0x31f: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x334: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x335: V204 = MUL V203 0x1
0x336: V205 = OR V204 V201
0x338: S[0x2] = V205
0x33a: V206 = 0x1
---
Entry stack: [V11, 0xb4, V39, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V11, 0xb4, V39, 0x1]

================================

Block 0x33e
[0x33e:0x342]
---
Predecessors: [0x2f0, 0x2f8]
Successors: [0xb4]
---
0x33e JUMPDEST
0x33f SWAP2
0x340 SWAP1
0x341 POP
0x342 JUMP
---
0x33e: JUMPDEST 
0x342: JUMP 0xb4
---
Entry stack: [V11, 0xb4, V39, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x343
[0x343:0x392]
---
Predecessors: [0xd9]
Successors: [0x393, 0x3d9]
---
0x343 JUMPDEST
0x344 PUSH1 0x3
0x346 DUP1
0x347 SLOAD
0x348 PUSH1 0x1
0x34a DUP2
0x34b PUSH1 0x1
0x34d AND
0x34e ISZERO
0x34f PUSH2 0x100
0x352 MUL
0x353 SUB
0x354 AND
0x355 PUSH1 0x2
0x357 SWAP1
0x358 DIV
0x359 DUP1
0x35a PUSH1 0x1f
0x35c ADD
0x35d PUSH1 0x20
0x35f DUP1
0x360 SWAP2
0x361 DIV
0x362 MUL
0x363 PUSH1 0x20
0x365 ADD
0x366 PUSH1 0x40
0x368 MLOAD
0x369 SWAP1
0x36a DUP2
0x36b ADD
0x36c PUSH1 0x40
0x36e MSTORE
0x36f DUP1
0x370 SWAP3
0x371 SWAP2
0x372 SWAP1
0x373 DUP2
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x20
0x378 ADD
0x379 DUP3
0x37a DUP1
0x37b SLOAD
0x37c PUSH1 0x1
0x37e DUP2
0x37f PUSH1 0x1
0x381 AND
0x382 ISZERO
0x383 PUSH2 0x100
0x386 MUL
0x387 SUB
0x388 AND
0x389 PUSH1 0x2
0x38b SWAP1
0x38c DIV
0x38d DUP1
0x38e ISZERO
0x38f PUSH2 0x3d9
0x392 JUMPI
---
0x343: JUMPDEST 
0x344: V207 = 0x3
0x347: V208 = S[0x3]
0x348: V209 = 0x1
0x34b: V210 = 0x1
0x34d: V211 = AND 0x1 V208
0x34e: V212 = ISZERO V211
0x34f: V213 = 0x100
0x352: V214 = MUL 0x100 V212
0x353: V215 = SUB V214 0x1
0x354: V216 = AND V215 V208
0x355: V217 = 0x2
0x358: V218 = DIV V216 0x2
0x35a: V219 = 0x1f
0x35c: V220 = ADD 0x1f V218
0x35d: V221 = 0x20
0x361: V222 = DIV V220 0x20
0x362: V223 = MUL V222 0x20
0x363: V224 = 0x20
0x365: V225 = ADD 0x20 V223
0x366: V226 = 0x40
0x368: V227 = M[0x40]
0x36b: V228 = ADD V227 V225
0x36c: V229 = 0x40
0x36e: M[0x40] = V228
0x375: M[V227] = V218
0x376: V230 = 0x20
0x378: V231 = ADD 0x20 V227
0x37b: V232 = S[0x3]
0x37c: V233 = 0x1
0x37f: V234 = 0x1
0x381: V235 = AND 0x1 V232
0x382: V236 = ISZERO V235
0x383: V237 = 0x100
0x386: V238 = MUL 0x100 V236
0x387: V239 = SUB V238 0x1
0x388: V240 = AND V239 V232
0x389: V241 = 0x2
0x38c: V242 = DIV V240 0x2
0x38e: V243 = ISZERO V242
0x38f: V244 = 0x3d9
0x392: JUMPI 0x3d9 V243
---
Entry stack: [V11, 0xe1]
Stack pops: 0
Stack additions: [V227, 0x3, V218, V231, 0x3, V242]
Exit stack: [V11, 0xe1, V227, 0x3, V218, V231, 0x3, V242]

================================

Block 0x393
[0x393:0x39a]
---
Predecessors: [0x343]
Successors: [0x39b, 0x3ae]
---
0x393 DUP1
0x394 PUSH1 0x1f
0x396 LT
0x397 PUSH2 0x3ae
0x39a JUMPI
---
0x394: V245 = 0x1f
0x396: V246 = LT 0x1f V242
0x397: V247 = 0x3ae
0x39a: JUMPI 0x3ae V246
---
Entry stack: [V11, 0xe1, V227, 0x3, V218, V231, 0x3, V242]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe1, V227, 0x3, V218, V231, 0x3, V242]

================================

Block 0x39b
[0x39b:0x3ad]
---
Predecessors: [0x393]
Successors: [0x3d9]
---
0x39b PUSH2 0x100
0x39e DUP1
0x39f DUP4
0x3a0 SLOAD
0x3a1 DIV
0x3a2 MUL
0x3a3 DUP4
0x3a4 MSTORE
0x3a5 SWAP2
0x3a6 PUSH1 0x20
0x3a8 ADD
0x3a9 SWAP2
0x3aa PUSH2 0x3d9
0x3ad JUMP
---
0x39b: V248 = 0x100
0x3a0: V249 = S[0x3]
0x3a1: V250 = DIV V249 0x100
0x3a2: V251 = MUL V250 0x100
0x3a4: M[V231] = V251
0x3a6: V252 = 0x20
0x3a8: V253 = ADD 0x20 V231
0x3aa: V254 = 0x3d9
0x3ad: JUMP 0x3d9
---
Entry stack: [V11, 0xe1, V227, 0x3, V218, V231, 0x3, V242]
Stack pops: 3
Stack additions: [V253, S1, S0]
Exit stack: [V11, 0xe1, V227, 0x3, V218, V253, 0x3, V242]

================================

Block 0x3ae
[0x3ae:0x3bb]
---
Predecessors: [0x393]
Successors: [0x3bc]
---
0x3ae JUMPDEST
0x3af DUP3
0x3b0 ADD
0x3b1 SWAP2
0x3b2 SWAP1
0x3b3 PUSH1 0x0
0x3b5 MSTORE
0x3b6 PUSH1 0x20
0x3b8 PUSH1 0x0
0x3ba SHA3
0x3bb SWAP1
---
0x3ae: JUMPDEST 
0x3b0: V255 = ADD V231 V242
0x3b3: V256 = 0x0
0x3b5: M[0x0] = 0x3
0x3b6: V257 = 0x20
0x3b8: V258 = 0x0
0x3ba: V259 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xe1, V227, 0x3, V218, V231, 0x3, V242]
Stack pops: 3
Stack additions: [V255, V259, S2]
Exit stack: [V11, 0xe1, V227, 0x3, V218, V255, V259, V231]

================================

Block 0x3bc
[0x3bc:0x3cf]
---
Predecessors: [0x3ae, 0x3bc]
Successors: [0x3bc, 0x3d0]
---
0x3bc JUMPDEST
0x3bd DUP2
0x3be SLOAD
0x3bf DUP2
0x3c0 MSTORE
0x3c1 SWAP1
0x3c2 PUSH1 0x1
0x3c4 ADD
0x3c5 SWAP1
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 DUP1
0x3ca DUP4
0x3cb GT
0x3cc PUSH2 0x3bc
0x3cf JUMPI
---
0x3bc: JUMPDEST 
0x3be: V260 = S[S1]
0x3c0: M[S0] = V260
0x3c2: V261 = 0x1
0x3c4: V262 = ADD 0x1 S1
0x3c6: V263 = 0x20
0x3c8: V264 = ADD 0x20 S0
0x3cb: V265 = GT V255 V264
0x3cc: V266 = 0x3bc
0x3cf: JUMPI 0x3bc V265
---
Entry stack: [V11, 0xe1, V227, 0x3, V218, V255, S1, S0]
Stack pops: 3
Stack additions: [S2, V262, V264]
Exit stack: [V11, 0xe1, V227, 0x3, V218, V255, V262, V264]

================================

Block 0x3d0
[0x3d0:0x3d8]
---
Predecessors: [0x3bc]
Successors: [0x3d9]
---
0x3d0 DUP3
0x3d1 SWAP1
0x3d2 SUB
0x3d3 PUSH1 0x1f
0x3d5 AND
0x3d6 DUP3
0x3d7 ADD
0x3d8 SWAP2
---
0x3d2: V267 = SUB V264 V255
0x3d3: V268 = 0x1f
0x3d5: V269 = AND 0x1f V267
0x3d7: V270 = ADD V255 V269
---
Entry stack: [V11, 0xe1, V227, 0x3, V218, V255, V262, V264]
Stack pops: 3
Stack additions: [V270, S1, S2]
Exit stack: [V11, 0xe1, V227, 0x3, V218, V270, V262, V255]

================================

Block 0x3d9
[0x3d9:0x3e0]
---
Predecessors: [0x343, 0x39b, 0x3d0]
Successors: [0xe1]
---
0x3d9 JUMPDEST
0x3da POP
0x3db POP
0x3dc POP
0x3dd POP
0x3de POP
0x3df DUP2
0x3e0 JUMP
---
0x3d9: JUMPDEST 
0x3e0: JUMP 0xe1
---
Entry stack: [V11, 0xe1, V227, 0x3, V218, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xe1, V227]

================================

Block 0x3e1
[0x3e1:0x406]
---
Predecessors: [0x167]
Successors: [0x16f]
---
0x3e1 JUMPDEST
0x3e2 PUSH1 0x2
0x3e4 PUSH1 0x0
0x3e6 SWAP1
0x3e7 SLOAD
0x3e8 SWAP1
0x3e9 PUSH2 0x100
0x3ec EXP
0x3ed SWAP1
0x3ee DIV
0x3ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x404 AND
0x405 DUP2
0x406 JUMP
---
0x3e1: JUMPDEST 
0x3e2: V271 = 0x2
0x3e4: V272 = 0x0
0x3e7: V273 = S[0x2]
0x3e9: V274 = 0x100
0x3ec: V275 = EXP 0x100 0x0
0x3ee: V276 = DIV V273 0x1
0x3ef: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x404: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x406: JUMP 0x16f
---
Entry stack: [V11, 0x16f]
Stack pops: 1
Stack additions: [S0, V278]
Exit stack: [V11, 0x16f, V278]

================================

Block 0x407
[0x407:0x414]
---
Predecessors: [0x1bc]
Successors: [0x415, 0x416]
---
0x407 JUMPDEST
0x408 PUSH1 0x0
0x40a DUP2
0x40b DUP2
0x40c SLOAD
0x40d DUP2
0x40e LT
0x40f ISZERO
0x410 ISZERO
0x411 PUSH2 0x416
0x414 JUMPI
---
0x407: JUMPDEST 
0x408: V279 = 0x0
0x40c: V280 = S[0x0]
0x40e: V281 = LT V124 V280
0x40f: V282 = ISZERO V281
0x410: V283 = ISZERO V282
0x411: V284 = 0x416
0x414: JUMPI 0x416 V283
---
Entry stack: [V11, 0x1d2, V124]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0x1d2, V124, 0x0, V124]

================================

Block 0x415
[0x415:0x415]
---
Predecessors: [0x407]
Successors: []
---
0x415 INVALID
---
0x415: INVALID 
---
Entry stack: [V11, 0x1d2, V124, 0x0, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d2, V124, 0x0, V124]

================================

Block 0x416
[0x416:0x445]
---
Predecessors: [0x407]
Successors: [0x1d2]
---
0x416 JUMPDEST
0x417 SWAP1
0x418 PUSH1 0x0
0x41a MSTORE
0x41b PUSH1 0x20
0x41d PUSH1 0x0
0x41f SHA3
0x420 SWAP1
0x421 ADD
0x422 PUSH1 0x0
0x424 SWAP2
0x425 POP
0x426 SLOAD
0x427 SWAP1
0x428 PUSH2 0x100
0x42b EXP
0x42c SWAP1
0x42d DIV
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 DUP2
0x445 JUMP
---
0x416: JUMPDEST 
0x418: V285 = 0x0
0x41a: M[0x0] = 0x0
0x41b: V286 = 0x20
0x41d: V287 = 0x0
0x41f: V288 = SHA3 0x0 0x20
0x421: V289 = ADD V124 V288
0x422: V290 = 0x0
0x426: V291 = S[V289]
0x428: V292 = 0x100
0x42b: V293 = EXP 0x100 0x0
0x42d: V294 = DIV V291 0x1
0x42e: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x445: JUMP 0x1d2
---
Entry stack: [V11, 0x1d2, V124, 0x0, V124]
Stack pops: 4
Stack additions: [S3, V296]
Exit stack: [V11, 0x1d2, V296]

================================

Block 0x446
[0x446:0x49f]
---
Predecessors: [0x21f]
Successors: [0x4a0, 0x4a8]
---
0x446 JUMPDEST
0x447 PUSH1 0x0
0x449 CALLER
0x44a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45f AND
0x460 PUSH1 0x2
0x462 PUSH1 0x0
0x464 SWAP1
0x465 SLOAD
0x466 SWAP1
0x467 PUSH2 0x100
0x46a EXP
0x46b SWAP1
0x46c DIV
0x46d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x482 AND
0x483 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x498 AND
0x499 EQ
0x49a ISZERO
0x49b ISZERO
0x49c PUSH2 0x4a8
0x49f JUMPI
---
0x446: JUMPDEST 
0x447: V297 = 0x0
0x449: V298 = CALLER
0x44a: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x45f: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x460: V301 = 0x2
0x462: V302 = 0x0
0x465: V303 = S[0x2]
0x467: V304 = 0x100
0x46a: V305 = EXP 0x100 0x0
0x46c: V306 = DIV V303 0x1
0x46d: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x482: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x483: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x498: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x499: V311 = EQ V310 V300
0x49a: V312 = ISZERO V311
0x49b: V313 = ISZERO V312
0x49c: V314 = 0x4a8
0x49f: JUMPI 0x4a8 V313
---
Entry stack: [V11, 0x227]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x227, 0x0]

================================

Block 0x4a0
[0x4a0:0x4a7]
---
Predecessors: [0x446]
Successors: [0x5d7]
---
0x4a0 PUSH1 0x0
0x4a2 SWAP1
0x4a3 POP
0x4a4 PUSH2 0x5d7
0x4a7 JUMP
---
0x4a0: V315 = 0x0
0x4a4: V316 = 0x5d7
0x4a7: JUMP 0x5d7
---
Entry stack: [V11, 0x227, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x227, 0x0]

================================

Block 0x4a8
[0x4a8:0x4bb]
---
Predecessors: [0x446]
Successors: [0x600]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x0
0x4ab DUP1
0x4ac SLOAD
0x4ad DUP1
0x4ae PUSH1 0x1
0x4b0 ADD
0x4b1 DUP3
0x4b2 DUP2
0x4b3 PUSH2 0x4bc
0x4b6 SWAP2
0x4b7 SWAP1
0x4b8 PUSH2 0x600
0x4bb JUMP
---
0x4a8: JUMPDEST 
0x4a9: V317 = 0x0
0x4ac: V318 = S[0x0]
0x4ae: V319 = 0x1
0x4b0: V320 = ADD 0x1 V318
0x4b3: V321 = 0x4bc
0x4b8: V322 = 0x600
0x4bb: JUMP 0x600
---
Entry stack: [V11, 0x227, 0x0]
Stack pops: 0
Stack additions: [0x0, V318, V320, 0x4bc, 0x0, V320]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320]

================================

Block 0x4bc
[0x4bc:0x5d6]
---
Predecessors: [0x627]
Successors: [0x5d7]
---
0x4bc JUMPDEST
0x4bd SWAP2
0x4be PUSH1 0x0
0x4c0 MSTORE
0x4c1 PUSH1 0x20
0x4c3 PUSH1 0x0
0x4c5 SHA3
0x4c6 SWAP1
0x4c7 ADD
0x4c8 PUSH1 0x0
0x4ca PUSH1 0x2
0x4cc PUSH1 0x0
0x4ce SWAP1
0x4cf SLOAD
0x4d0 SWAP1
0x4d1 PUSH2 0x100
0x4d4 EXP
0x4d5 SWAP1
0x4d6 DIV
0x4d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ec AND
0x4ed SWAP1
0x4ee SWAP2
0x4ef SWAP1
0x4f0 SWAP2
0x4f1 PUSH2 0x100
0x4f4 EXP
0x4f5 DUP2
0x4f6 SLOAD
0x4f7 DUP2
0x4f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50d MUL
0x50e NOT
0x50f AND
0x510 SWAP1
0x511 DUP4
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 AND
0x528 MUL
0x529 OR
0x52a SWAP1
0x52b SSTORE
0x52c POP
0x52d POP
0x52e PUSH1 0x2
0x530 PUSH1 0x0
0x532 SWAP1
0x533 SLOAD
0x534 SWAP1
0x535 PUSH2 0x100
0x538 EXP
0x539 SWAP1
0x53a DIV
0x53b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x550 AND
0x551 PUSH1 0x1
0x553 PUSH1 0x0
0x555 PUSH2 0x100
0x558 EXP
0x559 DUP2
0x55a SLOAD
0x55b DUP2
0x55c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x571 MUL
0x572 NOT
0x573 AND
0x574 SWAP1
0x575 DUP4
0x576 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58b AND
0x58c MUL
0x58d OR
0x58e SWAP1
0x58f SSTORE
0x590 POP
0x591 PUSH1 0x0
0x593 PUSH1 0x2
0x595 PUSH1 0x0
0x597 PUSH2 0x100
0x59a EXP
0x59b DUP2
0x59c SLOAD
0x59d DUP2
0x59e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b3 MUL
0x5b4 NOT
0x5b5 AND
0x5b6 SWAP1
0x5b7 DUP4
0x5b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cd AND
0x5ce MUL
0x5cf OR
0x5d0 SWAP1
0x5d1 SSTORE
0x5d2 POP
0x5d3 PUSH1 0x1
0x5d5 SWAP1
0x5d6 POP
---
0x4bc: JUMPDEST 
0x4be: V323 = 0x0
0x4c0: M[0x0] = 0x0
0x4c1: V324 = 0x20
0x4c3: V325 = 0x0
0x4c5: V326 = SHA3 0x0 0x20
0x4c7: V327 = ADD V318 V326
0x4c8: V328 = 0x0
0x4ca: V329 = 0x2
0x4cc: V330 = 0x0
0x4cf: V331 = S[0x2]
0x4d1: V332 = 0x100
0x4d4: V333 = EXP 0x100 0x0
0x4d6: V334 = DIV V331 0x1
0x4d7: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ec: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x4f1: V337 = 0x100
0x4f4: V338 = EXP 0x100 0x0
0x4f6: V339 = S[V327]
0x4f8: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x50d: V341 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x50e: V342 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x50f: V343 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V339
0x512: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x528: V346 = MUL V345 0x1
0x529: V347 = OR V346 V343
0x52b: S[V327] = V347
0x52e: V348 = 0x2
0x530: V349 = 0x0
0x533: V350 = S[0x2]
0x535: V351 = 0x100
0x538: V352 = EXP 0x100 0x0
0x53a: V353 = DIV V350 0x1
0x53b: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x550: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x551: V356 = 0x1
0x553: V357 = 0x0
0x555: V358 = 0x100
0x558: V359 = EXP 0x100 0x0
0x55a: V360 = S[0x1]
0x55c: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x571: V362 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x572: V363 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x573: V364 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V360
0x576: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x58c: V367 = MUL V366 0x1
0x58d: V368 = OR V367 V364
0x58f: S[0x1] = V368
0x591: V369 = 0x0
0x593: V370 = 0x2
0x595: V371 = 0x0
0x597: V372 = 0x100
0x59a: V373 = EXP 0x100 0x0
0x59c: V374 = S[0x2]
0x59e: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b3: V376 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5b4: V377 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V378 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V374
0x5b8: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5ce: V381 = MUL 0x0 0x1
0x5cf: V382 = OR 0x0 V378
0x5d1: S[0x2] = V382
0x5d3: V383 = 0x1
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x227, 0x1]

================================

Block 0x5d7
[0x5d7:0x5d9]
---
Predecessors: [0x4a0, 0x4bc]
Successors: [0x227]
---
0x5d7 JUMPDEST
0x5d8 SWAP1
0x5d9 JUMP
---
0x5d7: JUMPDEST 
0x5d9: JUMP 0x227
---
Entry stack: [V11, 0x227, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x5da
[0x5da:0x5ff]
---
Predecessors: [0x24c]
Successors: [0x254]
---
0x5da JUMPDEST
0x5db PUSH1 0x1
0x5dd PUSH1 0x0
0x5df SWAP1
0x5e0 SLOAD
0x5e1 SWAP1
0x5e2 PUSH2 0x100
0x5e5 EXP
0x5e6 SWAP1
0x5e7 DIV
0x5e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fd AND
0x5fe DUP2
0x5ff JUMP
---
0x5da: JUMPDEST 
0x5db: V384 = 0x1
0x5dd: V385 = 0x0
0x5e0: V386 = S[0x1]
0x5e2: V387 = 0x100
0x5e5: V388 = EXP 0x100 0x0
0x5e7: V389 = DIV V386 0x1
0x5e8: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x5ff: JUMP 0x254
---
Entry stack: [V11, 0x254]
Stack pops: 1
Stack additions: [S0, V391]
Exit stack: [V11, 0x254, V391]

================================

Block 0x600
[0x600:0x60d]
---
Predecessors: [0x4a8]
Successors: [0x60e, 0x627]
---
0x600 JUMPDEST
0x601 DUP2
0x602 SLOAD
0x603 DUP2
0x604 DUP4
0x605 SSTORE
0x606 DUP2
0x607 DUP2
0x608 ISZERO
0x609 GT
0x60a PUSH2 0x627
0x60d JUMPI
---
0x600: JUMPDEST 
0x602: V392 = S[0x0]
0x605: S[0x0] = V320
0x608: V393 = ISZERO V392
0x609: V394 = GT V393 V320
0x60a: V395 = 0x627
0x60d: JUMPI 0x627 V394
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320]
Stack pops: 2
Stack additions: [S1, S0, V392]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, V392]

================================

Block 0x60e
[0x60e:0x625]
---
Predecessors: [0x600]
Successors: [0x62c]
---
0x60e DUP2
0x60f DUP4
0x610 PUSH1 0x0
0x612 MSTORE
0x613 PUSH1 0x20
0x615 PUSH1 0x0
0x617 SHA3
0x618 SWAP2
0x619 DUP3
0x61a ADD
0x61b SWAP2
0x61c ADD
0x61d PUSH2 0x626
0x620 SWAP2
0x621 SWAP1
0x622 PUSH2 0x62c
0x625 JUMP
---
0x610: V396 = 0x0
0x612: M[0x0] = 0x0
0x613: V397 = 0x20
0x615: V398 = 0x0
0x617: V399 = SHA3 0x0 0x20
0x61a: V400 = ADD V399 V392
0x61c: V401 = ADD V399 V320
0x61d: V402 = 0x626
0x622: V403 = 0x62c
0x625: JUMP 0x62c
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, V392]
Stack pops: 3
Stack additions: [S2, S1, 0x626, V400, V401]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, V400, V401]

================================

Block 0x626
[0x626:0x626]
---
Predecessors: [0x64e]
Successors: [0x627]
---
0x626 JUMPDEST
---
0x626: JUMPDEST 
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, V400]

================================

Block 0x627
[0x627:0x62b]
---
Predecessors: [0x600, 0x626]
Successors: [0x4bc]
---
0x627 JUMPDEST
0x628 POP
0x629 POP
0x62a POP
0x62b JUMP
---
0x627: JUMPDEST 
0x62b: JUMP 0x4bc
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320]

================================

Block 0x62c
[0x62c:0x631]
---
Predecessors: [0x60e]
Successors: [0x632]
---
0x62c JUMPDEST
0x62d PUSH2 0x64e
0x630 SWAP2
0x631 SWAP1
---
0x62c: JUMPDEST 
0x62d: V404 = 0x64e
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, V400, V401]
Stack pops: 2
Stack additions: [0x64e, S1, S0]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, 0x64e, V400, V401]

================================

Block 0x632
[0x632:0x63a]
---
Predecessors: [0x62c, 0x63b]
Successors: [0x63b, 0x64a]
---
0x632 JUMPDEST
0x633 DUP1
0x634 DUP3
0x635 GT
0x636 ISZERO
0x637 PUSH2 0x64a
0x63a JUMPI
---
0x632: JUMPDEST 
0x635: V405 = GT V400 S0
0x636: V406 = ISZERO V405
0x637: V407 = 0x64a
0x63a: JUMPI 0x64a V406
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, 0x64e, V400, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, 0x64e, V400, S0]

================================

Block 0x63b
[0x63b:0x649]
---
Predecessors: [0x632]
Successors: [0x632]
---
0x63b PUSH1 0x0
0x63d DUP2
0x63e PUSH1 0x0
0x640 SWAP1
0x641 SSTORE
0x642 POP
0x643 PUSH1 0x1
0x645 ADD
0x646 PUSH2 0x632
0x649 JUMP
---
0x63b: V408 = 0x0
0x63e: V409 = 0x0
0x641: S[S0] = 0x0
0x643: V410 = 0x1
0x645: V411 = ADD 0x1 S0
0x646: V412 = 0x632
0x649: JUMP 0x632
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, 0x64e, V400, S0]
Stack pops: 1
Stack additions: [V411]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, 0x64e, V400, V411]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x632]
Successors: [0x64e]
---
0x64a JUMPDEST
0x64b POP
0x64c SWAP1
0x64d JUMP
---
0x64a: JUMPDEST 
0x64d: JUMP 0x64e
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, 0x64e, V400, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, V400]

================================

Block 0x64e
[0x64e:0x650]
---
Predecessors: [0x64a]
Successors: [0x626]
---
0x64e JUMPDEST
0x64f SWAP1
0x650 JUMP
---
0x64e: JUMPDEST 
0x650: JUMP 0x626
---
Entry stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, 0x626, V400]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x227, 0x0, 0x0, V318, V320, 0x4bc, 0x0, V320, V400]

================================

Block 0x651
[0x651:0x687]
---
Predecessors: []
Successors: []
---
0x651 STOP
0x652 LOG1
0x653 PUSH6 0x627a7a723058
0x65a SHA3
0x65b ADD
0x65c CALLDATACOPY
0x65d MISSING 0xdc
0x65e PUSH12 0x372d592ce40e24843fbb3b52
0x66b DUP9
0x66c CALLCODE
0x66d DUP3
0x66e MISSING 0xe6
0x66f CALLCODE
0x670 PUSH23 0x92cbebb8ae5382c040050029
---
0x651: STOP 
0x652: LOG S0 S1 S2
0x653: V413 = 0x627a7a723058
0x65a: V414 = SHA3 0x627a7a723058 S3
0x65b: V415 = ADD V414 S4
0x65c: CALLDATACOPY V415 S5 S6
0x65d: MISSING 0xdc
0x65e: V416 = 0x372d592ce40e24843fbb3b52
0x66c: V417 = CALLCODE S7 0x372d592ce40e24843fbb3b52 S0 S1 S2 S3 S4
0x66e: MISSING 0xe6
0x66f: V418 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x670: V419 = 0x92cbebb8ae5382c040050029
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, V417, S5, S6, S7, 0x92cbebb8ae5382c040050029, V418]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d202d24
Entry block: 0x7d
Exit block: 0xb4
Body: 0x7d, 0x84, 0x88, 0xb4, 0x296, 0x2f0, 0x2f8, 0x33e

Function 1:
Public function signature: 0x573f642d
Entry block: 0xce
Exit block: 0x14e
Body: 0xce, 0xd5, 0xd9, 0xe1, 0x106, 0x10f, 0x121, 0x135, 0x14e, 0x343, 0x393, 0x39b, 0x3ae, 0x3bc, 0x3d0, 0x3d9

Function 2:
Public function signature: 0x97f59897
Entry block: 0x15c
Exit block: 0x16f
Body: 0x15c, 0x163, 0x167, 0x16f, 0x3e1

Function 3:
Public function signature: 0x992924a6
Entry block: 0x1b1
Exit block: 0x1d2
Body: 0x1b1, 0x1b8, 0x1bc, 0x1d2, 0x407, 0x415, 0x416

Function 4:
Public function signature: 0xd5d1e770
Entry block: 0x214
Exit block: 0x227
Body: 0x214, 0x21b, 0x21f, 0x227, 0x446, 0x4a0, 0x4a8, 0x4bc, 0x5d7, 0x600, 0x60e, 0x626, 0x627, 0x62c, 0x632, 0x63b, 0x64a, 0x64e

Function 5:
Public function signature: 0xfd42657a
Entry block: 0x241
Exit block: 0x254
Body: 0x241, 0x248, 0x24c, 0x254, 0x5da

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

