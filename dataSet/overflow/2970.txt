Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6e8f7142
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6e8f7142
0x3c: V13 = EQ 0x6e8f7142 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x120]
---
0x41 DUP1
0x42 PUSH4 0x7d4c1403
0x47 EQ
0x48 PUSH2 0x120
0x4b JUMPI
---
0x42: V15 = 0x7d4c1403
0x47: V16 = EQ 0x7d4c1403 V11
0x48: V17 = 0x120
0x4b: JUMPI 0x120 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x11d]
---
Predecessors: [0x51]
Successors: [0x242]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x11e
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP3
0x89 SWAP2
0x8a SWAP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 DUP3
0x93 ADD
0x94 DUP1
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b DUP1
0x9c DUP1
0x9d PUSH1 0x1f
0x9f ADD
0xa0 PUSH1 0x20
0xa2 DUP1
0xa3 SWAP2
0xa4 DIV
0xa5 MUL
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 PUSH1 0x40
0xab MLOAD
0xac SWAP1
0xad DUP2
0xae ADD
0xaf PUSH1 0x40
0xb1 MSTORE
0xb2 DUP1
0xb3 SWAP4
0xb4 SWAP3
0xb5 SWAP2
0xb6 SWAP1
0xb7 DUP2
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x20
0xbc ADD
0xbd DUP4
0xbe DUP4
0xbf DUP1
0xc0 DUP3
0xc1 DUP5
0xc2 CALLDATACOPY
0xc3 DUP3
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca POP
0xcb POP
0xcc SWAP2
0xcd SWAP3
0xce SWAP2
0xcf SWAP3
0xd0 SWAP1
0xd1 DUP1
0xd2 CALLDATALOAD
0xd3 SWAP1
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 SWAP1
0xd8 DUP3
0xd9 ADD
0xda DUP1
0xdb CALLDATALOAD
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 DUP1
0xe2 DUP1
0xe3 PUSH1 0x1f
0xe5 ADD
0xe6 PUSH1 0x20
0xe8 DUP1
0xe9 SWAP2
0xea DIV
0xeb MUL
0xec PUSH1 0x20
0xee ADD
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 SWAP1
0xf3 DUP2
0xf4 ADD
0xf5 PUSH1 0x40
0xf7 MSTORE
0xf8 DUP1
0xf9 SWAP4
0xfa SWAP3
0xfb SWAP2
0xfc SWAP1
0xfd DUP2
0xfe DUP2
0xff MSTORE
0x100 PUSH1 0x20
0x102 ADD
0x103 DUP4
0x104 DUP4
0x105 DUP1
0x106 DUP3
0x107 DUP5
0x108 CALLDATACOPY
0x109 DUP3
0x10a ADD
0x10b SWAP2
0x10c POP
0x10d POP
0x10e POP
0x10f POP
0x110 POP
0x111 POP
0x112 SWAP2
0x113 SWAP3
0x114 SWAP2
0x115 SWAP3
0x116 SWAP1
0x117 POP
0x118 POP
0x119 POP
0x11a PUSH2 0x242
0x11d JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x11e
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6d: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x84: V31 = 0x20
0x86: V32 = ADD 0x20 0x4
0x8c: V33 = CALLDATALOAD 0x24
0x8e: V34 = 0x20
0x90: V35 = ADD 0x20 0x24
0x93: V36 = ADD 0x4 V33
0x95: V37 = CALLDATALOAD V36
0x97: V38 = 0x20
0x99: V39 = ADD 0x20 V36
0x9d: V40 = 0x1f
0x9f: V41 = ADD 0x1f V37
0xa0: V42 = 0x20
0xa4: V43 = DIV V41 0x20
0xa5: V44 = MUL V43 0x20
0xa6: V45 = 0x20
0xa8: V46 = ADD 0x20 V44
0xa9: V47 = 0x40
0xab: V48 = M[0x40]
0xae: V49 = ADD V48 V46
0xaf: V50 = 0x40
0xb1: M[0x40] = V49
0xb9: M[V48] = V37
0xba: V51 = 0x20
0xbc: V52 = ADD 0x20 V48
0xc2: CALLDATACOPY V52 V39 V37
0xc4: V53 = ADD V52 V37
0xd2: V54 = CALLDATALOAD 0x44
0xd4: V55 = 0x20
0xd6: V56 = ADD 0x20 0x44
0xd9: V57 = ADD 0x4 V54
0xdb: V58 = CALLDATALOAD V57
0xdd: V59 = 0x20
0xdf: V60 = ADD 0x20 V57
0xe3: V61 = 0x1f
0xe5: V62 = ADD 0x1f V58
0xe6: V63 = 0x20
0xea: V64 = DIV V62 0x20
0xeb: V65 = MUL V64 0x20
0xec: V66 = 0x20
0xee: V67 = ADD 0x20 V65
0xef: V68 = 0x40
0xf1: V69 = M[0x40]
0xf4: V70 = ADD V69 V67
0xf5: V71 = 0x40
0xf7: M[0x40] = V70
0xff: M[V69] = V58
0x100: V72 = 0x20
0x102: V73 = ADD 0x20 V69
0x108: CALLDATACOPY V73 V60 V58
0x10a: V74 = ADD V73 V58
0x11a: V75 = 0x242
0x11d: JUMP 0x242
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x11e, V30, V48, V69]
Exit stack: [V11, 0x11e, V30, V48, V69]

================================

Block 0x11e
[0x11e:0x11f]
---
Predecessors: [0x33a]
Successors: []
---
0x11e JUMPDEST
0x11f STOP
---
0x11e: JUMPDEST 
0x11f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x41]
Successors: [0x128, 0x12c]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 DUP1
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x120: JUMPDEST 
0x121: V76 = CALLVALUE
0x123: V77 = ISZERO V76
0x124: V78 = 0x12c
0x127: JUMPI 0x12c V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x120]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V79 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V11, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76]

================================

Block 0x12c
[0x12c:0x1c6]
---
Predecessors: [0x120]
Successors: [0x340]
---
0x12c JUMPDEST
0x12d POP
0x12e PUSH2 0x1c7
0x131 PUSH1 0x4
0x133 DUP1
0x134 CALLDATASIZE
0x135 SUB
0x136 DUP2
0x137 ADD
0x138 SWAP1
0x139 DUP1
0x13a DUP1
0x13b CALLDATALOAD
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 SWAP3
0x158 SWAP2
0x159 SWAP1
0x15a DUP1
0x15b CALLDATALOAD
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 AND
0x172 SWAP1
0x173 PUSH1 0x20
0x175 ADD
0x176 SWAP1
0x177 SWAP3
0x178 SWAP2
0x179 SWAP1
0x17a DUP1
0x17b CALLDATALOAD
0x17c SWAP1
0x17d PUSH1 0x20
0x17f ADD
0x180 SWAP1
0x181 DUP3
0x182 ADD
0x183 DUP1
0x184 CALLDATALOAD
0x185 SWAP1
0x186 PUSH1 0x20
0x188 ADD
0x189 SWAP1
0x18a DUP1
0x18b DUP1
0x18c PUSH1 0x1f
0x18e ADD
0x18f PUSH1 0x20
0x191 DUP1
0x192 SWAP2
0x193 DIV
0x194 MUL
0x195 PUSH1 0x20
0x197 ADD
0x198 PUSH1 0x40
0x19a MLOAD
0x19b SWAP1
0x19c DUP2
0x19d ADD
0x19e PUSH1 0x40
0x1a0 MSTORE
0x1a1 DUP1
0x1a2 SWAP4
0x1a3 SWAP3
0x1a4 SWAP2
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac DUP4
0x1ad DUP4
0x1ae DUP1
0x1af DUP3
0x1b0 DUP5
0x1b1 CALLDATACOPY
0x1b2 DUP3
0x1b3 ADD
0x1b4 SWAP2
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb SWAP2
0x1bc SWAP3
0x1bd SWAP2
0x1be SWAP3
0x1bf SWAP1
0x1c0 POP
0x1c1 POP
0x1c2 POP
0x1c3 PUSH2 0x340
0x1c6 JUMP
---
0x12c: JUMPDEST 
0x12e: V80 = 0x1c7
0x131: V81 = 0x4
0x134: V82 = CALLDATASIZE
0x135: V83 = SUB V82 0x4
0x137: V84 = ADD 0x4 V83
0x13b: V85 = CALLDATALOAD 0x4
0x13c: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x153: V88 = 0x20
0x155: V89 = ADD 0x20 0x4
0x15b: V90 = CALLDATALOAD 0x24
0x15c: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x173: V93 = 0x20
0x175: V94 = ADD 0x20 0x24
0x17b: V95 = CALLDATALOAD 0x44
0x17d: V96 = 0x20
0x17f: V97 = ADD 0x20 0x44
0x182: V98 = ADD 0x4 V95
0x184: V99 = CALLDATALOAD V98
0x186: V100 = 0x20
0x188: V101 = ADD 0x20 V98
0x18c: V102 = 0x1f
0x18e: V103 = ADD 0x1f V99
0x18f: V104 = 0x20
0x193: V105 = DIV V103 0x20
0x194: V106 = MUL V105 0x20
0x195: V107 = 0x20
0x197: V108 = ADD 0x20 V106
0x198: V109 = 0x40
0x19a: V110 = M[0x40]
0x19d: V111 = ADD V110 V108
0x19e: V112 = 0x40
0x1a0: M[0x40] = V111
0x1a8: M[V110] = V99
0x1a9: V113 = 0x20
0x1ab: V114 = ADD 0x20 V110
0x1b1: CALLDATACOPY V114 V101 V99
0x1b3: V115 = ADD V114 V99
0x1c3: V116 = 0x340
0x1c6: JUMP 0x340
---
Entry stack: [V11, V76]
Stack pops: 1
Stack additions: [0x1c7, V87, V92, V110]
Exit stack: [V11, 0x1c7, V87, V92, V110]

================================

Block 0x1c7
[0x1c7:0x1eb]
---
Predecessors: [0x4ba]
Successors: [0x1ec]
---
0x1c7 JUMPDEST
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc DUP1
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 DUP3
0x1d1 DUP2
0x1d2 SUB
0x1d3 DUP3
0x1d4 MSTORE
0x1d5 DUP4
0x1d6 DUP2
0x1d7 DUP2
0x1d8 MLOAD
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x20
0x1dd ADD
0x1de SWAP2
0x1df POP
0x1e0 DUP1
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP1
0x1e7 DUP1
0x1e8 DUP4
0x1e9 DUP4
0x1ea PUSH1 0x0
---
0x1c7: JUMPDEST 
0x1c8: V117 = 0x40
0x1ca: V118 = M[0x40]
0x1cd: V119 = 0x20
0x1cf: V120 = ADD 0x20 V118
0x1d2: V121 = SUB V120 V118
0x1d4: M[V118] = V121
0x1d8: V122 = M[V302]
0x1da: M[V120] = V122
0x1db: V123 = 0x20
0x1dd: V124 = ADD 0x20 V120
0x1e1: V125 = M[V302]
0x1e3: V126 = 0x20
0x1e5: V127 = ADD 0x20 V302
0x1ea: V128 = 0x0
---
Entry stack: [V11, V302]
Stack pops: 1
Stack additions: [S0, V118, V118, V124, V127, V125, V125, V124, V127, 0x0]
Exit stack: [V11, V302, V118, V118, V124, V127, V125, V125, V124, V127, 0x0]

================================

Block 0x1ec
[0x1ec:0x1f4]
---
Predecessors: [0x1c7, 0x1f5]
Successors: [0x1f5, 0x207]
---
0x1ec JUMPDEST
0x1ed DUP4
0x1ee DUP2
0x1ef LT
0x1f0 ISZERO
0x1f1 PUSH2 0x207
0x1f4 JUMPI
---
0x1ec: JUMPDEST 
0x1ef: V129 = LT S0 V125
0x1f0: V130 = ISZERO V129
0x1f1: V131 = 0x207
0x1f4: JUMPI 0x207 V130
---
Entry stack: [V11, V302, V118, V118, V124, V127, V125, V125, V124, V127, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V302, V118, V118, V124, V127, V125, V125, V124, V127, S0]

================================

Block 0x1f5
[0x1f5:0x206]
---
Predecessors: [0x1ec]
Successors: [0x1ec]
---
0x1f5 DUP1
0x1f6 DUP3
0x1f7 ADD
0x1f8 MLOAD
0x1f9 DUP2
0x1fa DUP5
0x1fb ADD
0x1fc MSTORE
0x1fd PUSH1 0x20
0x1ff DUP2
0x200 ADD
0x201 SWAP1
0x202 POP
0x203 PUSH2 0x1ec
0x206 JUMP
---
0x1f7: V132 = ADD V127 S0
0x1f8: V133 = M[V132]
0x1fb: V134 = ADD V124 S0
0x1fc: M[V134] = V133
0x1fd: V135 = 0x20
0x200: V136 = ADD S0 0x20
0x203: V137 = 0x1ec
0x206: JUMP 0x1ec
---
Entry stack: [V11, V302, V118, V118, V124, V127, V125, V125, V124, V127, S0]
Stack pops: 3
Stack additions: [S2, S1, V136]
Exit stack: [V11, V302, V118, V118, V124, V127, V125, V125, V124, V127, V136]

================================

Block 0x207
[0x207:0x21a]
---
Predecessors: [0x1ec]
Successors: [0x21b, 0x234]
---
0x207 JUMPDEST
0x208 POP
0x209 POP
0x20a POP
0x20b POP
0x20c SWAP1
0x20d POP
0x20e SWAP1
0x20f DUP2
0x210 ADD
0x211 SWAP1
0x212 PUSH1 0x1f
0x214 AND
0x215 DUP1
0x216 ISZERO
0x217 PUSH2 0x234
0x21a JUMPI
---
0x207: JUMPDEST 
0x210: V138 = ADD V125 V124
0x212: V139 = 0x1f
0x214: V140 = AND 0x1f V125
0x216: V141 = ISZERO V140
0x217: V142 = 0x234
0x21a: JUMPI 0x234 V141
---
Entry stack: [V11, V302, V118, V118, V124, V127, V125, V125, V124, V127, S0]
Stack pops: 7
Stack additions: [V138, V140]
Exit stack: [V11, V302, V118, V118, V138, V140]

================================

Block 0x21b
[0x21b:0x233]
---
Predecessors: [0x207]
Successors: [0x234]
---
0x21b DUP1
0x21c DUP3
0x21d SUB
0x21e DUP1
0x21f MLOAD
0x220 PUSH1 0x1
0x222 DUP4
0x223 PUSH1 0x20
0x225 SUB
0x226 PUSH2 0x100
0x229 EXP
0x22a SUB
0x22b NOT
0x22c AND
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x20
0x231 ADD
0x232 SWAP2
0x233 POP
---
0x21d: V143 = SUB V138 V140
0x21f: V144 = M[V143]
0x220: V145 = 0x1
0x223: V146 = 0x20
0x225: V147 = SUB 0x20 V140
0x226: V148 = 0x100
0x229: V149 = EXP 0x100 V147
0x22a: V150 = SUB V149 0x1
0x22b: V151 = NOT V150
0x22c: V152 = AND V151 V144
0x22e: M[V143] = V152
0x22f: V153 = 0x20
0x231: V154 = ADD 0x20 V143
---
Entry stack: [V11, V302, V118, V118, V138, V140]
Stack pops: 2
Stack additions: [V154, S0]
Exit stack: [V11, V302, V118, V118, V154, V140]

================================

Block 0x234
[0x234:0x241]
---
Predecessors: [0x207, 0x21b]
Successors: []
---
0x234 JUMPDEST
0x235 POP
0x236 SWAP3
0x237 POP
0x238 POP
0x239 POP
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e SWAP2
0x23f SUB
0x240 SWAP1
0x241 RETURN
---
0x234: JUMPDEST 
0x23a: V155 = 0x40
0x23c: V156 = M[0x40]
0x23f: V157 = SUB S1 V156
0x241: RETURN V156 V157
---
Entry stack: [V11, V302, V118, V118, S1, V140]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x242
[0x242:0x2ce]
---
Predecessors: [0x5d]
Successors: [0x2cf]
---
0x242 JUMPDEST
0x243 DUP1
0x244 PUSH1 0x0
0x246 DUP1
0x247 DUP6
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 DUP2
0x275 MSTORE
0x276 PUSH1 0x20
0x278 ADD
0x279 SWAP1
0x27a DUP2
0x27b MSTORE
0x27c PUSH1 0x20
0x27e ADD
0x27f PUSH1 0x0
0x281 SHA3
0x282 PUSH1 0x0
0x284 CALLER
0x285 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29a AND
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc PUSH1 0x0
0x2be SHA3
0x2bf DUP4
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 DUP1
0x2c4 DUP3
0x2c5 DUP1
0x2c6 MLOAD
0x2c7 SWAP1
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb SWAP1
0x2cc DUP1
0x2cd DUP4
0x2ce DUP4
---
0x242: JUMPDEST 
0x244: V158 = 0x0
0x248: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x25e: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x275: M[0x0] = V162
0x276: V163 = 0x20
0x278: V164 = ADD 0x20 0x0
0x27b: M[0x20] = 0x0
0x27c: V165 = 0x20
0x27e: V166 = ADD 0x20 0x20
0x27f: V167 = 0x0
0x281: V168 = SHA3 0x0 0x40
0x282: V169 = 0x0
0x284: V170 = CALLER
0x285: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x29b: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2b2: M[0x0] = V174
0x2b3: V175 = 0x20
0x2b5: V176 = ADD 0x20 0x0
0x2b8: M[0x20] = V168
0x2b9: V177 = 0x20
0x2bb: V178 = ADD 0x20 0x20
0x2bc: V179 = 0x0
0x2be: V180 = SHA3 0x0 0x40
0x2c0: V181 = 0x40
0x2c2: V182 = M[0x40]
0x2c6: V183 = M[V48]
0x2c8: V184 = 0x20
0x2ca: V185 = ADD 0x20 V48
---
Entry stack: [V11, 0x11e, V30, V48, V69]
Stack pops: 3
Stack additions: [S2, S1, S0, S0, V180, S1, V182, V182, V185, V183, V183, V182, V185]
Exit stack: [V11, 0x11e, V30, V48, V69, V69, V180, V48, V182, V182, V185, V183, V183, V182, V185]

================================

Block 0x2cf
[0x2cf:0x2d9]
---
Predecessors: [0x242, 0x2da]
Successors: [0x2da, 0x2f4]
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x20
0x2d2 DUP4
0x2d3 LT
0x2d4 ISZERO
0x2d5 ISZERO
0x2d6 PUSH2 0x2f4
0x2d9 JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V186 = 0x20
0x2d3: V187 = LT S2 0x20
0x2d4: V188 = ISZERO V187
0x2d5: V189 = ISZERO V188
0x2d6: V190 = 0x2f4
0x2d9: JUMPI 0x2f4 V189
---
Entry stack: [V11, 0x11e, V30, V48, V69, V69, V180, V48, V182, V182, V185, V183, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x11e, V30, V48, V69, V69, V180, V48, V182, V182, V185, V183, S2, S1, S0]

================================

Block 0x2da
[0x2da:0x2f3]
---
Predecessors: [0x2cf]
Successors: [0x2cf]
---
0x2da DUP1
0x2db MLOAD
0x2dc DUP3
0x2dd MSTORE
0x2de PUSH1 0x20
0x2e0 DUP3
0x2e1 ADD
0x2e2 SWAP2
0x2e3 POP
0x2e4 PUSH1 0x20
0x2e6 DUP2
0x2e7 ADD
0x2e8 SWAP1
0x2e9 POP
0x2ea PUSH1 0x20
0x2ec DUP4
0x2ed SUB
0x2ee SWAP3
0x2ef POP
0x2f0 PUSH2 0x2cf
0x2f3 JUMP
---
0x2db: V191 = M[S0]
0x2dd: M[S1] = V191
0x2de: V192 = 0x20
0x2e1: V193 = ADD S1 0x20
0x2e4: V194 = 0x20
0x2e7: V195 = ADD S0 0x20
0x2ea: V196 = 0x20
0x2ed: V197 = SUB S2 0x20
0x2f0: V198 = 0x2cf
0x2f3: JUMP 0x2cf
---
Entry stack: [V11, 0x11e, V30, V48, V69, V69, V180, V48, V182, V182, V185, V183, S2, S1, S0]
Stack pops: 3
Stack additions: [V197, V193, V195]
Exit stack: [V11, 0x11e, V30, V48, V69, V69, V180, V48, V182, V182, V185, V183, V197, V193, V195]

================================

Block 0x2f4
[0x2f4:0x339]
---
Predecessors: [0x2cf]
Successors: [0x4c8]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x1
0x2f7 DUP4
0x2f8 PUSH1 0x20
0x2fa SUB
0x2fb PUSH2 0x100
0x2fe EXP
0x2ff SUB
0x300 DUP1
0x301 NOT
0x302 DUP3
0x303 MLOAD
0x304 AND
0x305 DUP2
0x306 DUP5
0x307 MLOAD
0x308 AND
0x309 DUP1
0x30a DUP3
0x30b OR
0x30c DUP6
0x30d MSTORE
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 POP
0x313 POP
0x314 SWAP1
0x315 POP
0x316 ADD
0x317 SWAP2
0x318 POP
0x319 POP
0x31a SWAP1
0x31b DUP2
0x31c MSTORE
0x31d PUSH1 0x20
0x31f ADD
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP1
0x324 SWAP2
0x325 SUB
0x326 SWAP1
0x327 SHA3
0x328 SWAP1
0x329 DUP1
0x32a MLOAD
0x32b SWAP1
0x32c PUSH1 0x20
0x32e ADD
0x32f SWAP1
0x330 PUSH2 0x33a
0x333 SWAP3
0x334 SWAP2
0x335 SWAP1
0x336 PUSH2 0x4c8
0x339 JUMP
---
0x2f4: JUMPDEST 
0x2f5: V199 = 0x1
0x2f8: V200 = 0x20
0x2fa: V201 = SUB 0x20 S2
0x2fb: V202 = 0x100
0x2fe: V203 = EXP 0x100 V201
0x2ff: V204 = SUB V203 0x1
0x301: V205 = NOT V204
0x303: V206 = M[S0]
0x304: V207 = AND V206 V205
0x307: V208 = M[S1]
0x308: V209 = AND V208 V204
0x30b: V210 = OR V207 V209
0x30d: M[S1] = V210
0x316: V211 = ADD V183 V182
0x31c: M[V211] = V180
0x31d: V212 = 0x20
0x31f: V213 = ADD 0x20 V211
0x320: V214 = 0x40
0x322: V215 = M[0x40]
0x325: V216 = SUB V213 V215
0x327: V217 = SHA3 V215 V216
0x32a: V218 = M[V69]
0x32c: V219 = 0x20
0x32e: V220 = ADD 0x20 V69
0x330: V221 = 0x33a
0x336: V222 = 0x4c8
0x339: JUMP 0x4c8
---
Entry stack: [V11, 0x11e, V30, V48, V69, V69, V180, V48, V182, V182, V185, V183, S2, S1, S0]
Stack pops: 10
Stack additions: [0x33a, V217, V220, V218]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V220, V218]

================================

Block 0x33a
[0x33a:0x33f]
---
Predecessors: [0x544]
Successors: [0x11e]
---
0x33a JUMPDEST
0x33b POP
0x33c POP
0x33d POP
0x33e POP
0x33f JUMP
---
0x33a: JUMPDEST 
0x33f: JUMP 0x11e
---
Entry stack: [V11, 0x11e, V30, V48, V69, V217]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x340
[0x340:0x3cd]
---
Predecessors: [0x12c]
Successors: [0x3ce]
---
0x340 JUMPDEST
0x341 PUSH1 0x60
0x343 PUSH1 0x0
0x345 DUP1
0x346 DUP6
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x372 AND
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x20
0x377 ADD
0x378 SWAP1
0x379 DUP2
0x37a MSTORE
0x37b PUSH1 0x20
0x37d ADD
0x37e PUSH1 0x0
0x380 SHA3
0x381 PUSH1 0x0
0x383 DUP5
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3af AND
0x3b0 DUP2
0x3b1 MSTORE
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 SWAP1
0x3b6 DUP2
0x3b7 MSTORE
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb PUSH1 0x0
0x3bd SHA3
0x3be DUP3
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 DUP3
0x3c4 DUP1
0x3c5 MLOAD
0x3c6 SWAP1
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP1
0x3cb DUP1
0x3cc DUP4
0x3cd DUP4
---
0x340: JUMPDEST 
0x341: V223 = 0x60
0x343: V224 = 0x0
0x347: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x35d: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x372: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x374: M[0x0] = V228
0x375: V229 = 0x20
0x377: V230 = ADD 0x20 0x0
0x37a: M[0x20] = 0x0
0x37b: V231 = 0x20
0x37d: V232 = ADD 0x20 0x20
0x37e: V233 = 0x0
0x380: V234 = SHA3 0x0 0x40
0x381: V235 = 0x0
0x384: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x39a: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x3b1: M[0x0] = V239
0x3b2: V240 = 0x20
0x3b4: V241 = ADD 0x20 0x0
0x3b7: M[0x20] = V234
0x3b8: V242 = 0x20
0x3ba: V243 = ADD 0x20 0x20
0x3bb: V244 = 0x0
0x3bd: V245 = SHA3 0x0 0x40
0x3bf: V246 = 0x40
0x3c1: V247 = M[0x40]
0x3c5: V248 = M[V110]
0x3c7: V249 = 0x20
0x3c9: V250 = ADD 0x20 V110
---
Entry stack: [V11, 0x1c7, V87, V92, V110]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x60, V245, S0, V247, V247, V250, V248, V248, V247, V250]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V245, V110, V247, V247, V250, V248, V248, V247, V250]

================================

Block 0x3ce
[0x3ce:0x3d8]
---
Predecessors: [0x340, 0x3d9]
Successors: [0x3d9, 0x3f3]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x20
0x3d1 DUP4
0x3d2 LT
0x3d3 ISZERO
0x3d4 ISZERO
0x3d5 PUSH2 0x3f3
0x3d8 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V251 = 0x20
0x3d2: V252 = LT S2 0x20
0x3d3: V253 = ISZERO V252
0x3d4: V254 = ISZERO V253
0x3d5: V255 = 0x3f3
0x3d8: JUMPI 0x3f3 V254
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V245, V110, V247, V247, V250, V248, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V245, V110, V247, V247, V250, V248, S2, S1, S0]

================================

Block 0x3d9
[0x3d9:0x3f2]
---
Predecessors: [0x3ce]
Successors: [0x3ce]
---
0x3d9 DUP1
0x3da MLOAD
0x3db DUP3
0x3dc MSTORE
0x3dd PUSH1 0x20
0x3df DUP3
0x3e0 ADD
0x3e1 SWAP2
0x3e2 POP
0x3e3 PUSH1 0x20
0x3e5 DUP2
0x3e6 ADD
0x3e7 SWAP1
0x3e8 POP
0x3e9 PUSH1 0x20
0x3eb DUP4
0x3ec SUB
0x3ed SWAP3
0x3ee POP
0x3ef PUSH2 0x3ce
0x3f2 JUMP
---
0x3da: V256 = M[S0]
0x3dc: M[S1] = V256
0x3dd: V257 = 0x20
0x3e0: V258 = ADD S1 0x20
0x3e3: V259 = 0x20
0x3e6: V260 = ADD S0 0x20
0x3e9: V261 = 0x20
0x3ec: V262 = SUB S2 0x20
0x3ef: V263 = 0x3ce
0x3f2: JUMP 0x3ce
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V245, V110, V247, V247, V250, V248, S2, S1, S0]
Stack pops: 3
Stack additions: [V262, V258, V260]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V245, V110, V247, V247, V250, V248, V262, V258, V260]

================================

Block 0x3f3
[0x3f3:0x473]
---
Predecessors: [0x3ce]
Successors: [0x474, 0x4ba]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x1
0x3f6 DUP4
0x3f7 PUSH1 0x20
0x3f9 SUB
0x3fa PUSH2 0x100
0x3fd EXP
0x3fe SUB
0x3ff DUP1
0x400 NOT
0x401 DUP3
0x402 MLOAD
0x403 AND
0x404 DUP2
0x405 DUP5
0x406 MLOAD
0x407 AND
0x408 DUP1
0x409 DUP3
0x40a OR
0x40b DUP6
0x40c MSTORE
0x40d POP
0x40e POP
0x40f POP
0x410 POP
0x411 POP
0x412 POP
0x413 SWAP1
0x414 POP
0x415 ADD
0x416 SWAP2
0x417 POP
0x418 POP
0x419 SWAP1
0x41a DUP2
0x41b MSTORE
0x41c PUSH1 0x20
0x41e ADD
0x41f PUSH1 0x40
0x421 MLOAD
0x422 DUP1
0x423 SWAP2
0x424 SUB
0x425 SWAP1
0x426 SHA3
0x427 DUP1
0x428 SLOAD
0x429 PUSH1 0x1
0x42b DUP2
0x42c PUSH1 0x1
0x42e AND
0x42f ISZERO
0x430 PUSH2 0x100
0x433 MUL
0x434 SUB
0x435 AND
0x436 PUSH1 0x2
0x438 SWAP1
0x439 DIV
0x43a DUP1
0x43b PUSH1 0x1f
0x43d ADD
0x43e PUSH1 0x20
0x440 DUP1
0x441 SWAP2
0x442 DIV
0x443 MUL
0x444 PUSH1 0x20
0x446 ADD
0x447 PUSH1 0x40
0x449 MLOAD
0x44a SWAP1
0x44b DUP2
0x44c ADD
0x44d PUSH1 0x40
0x44f MSTORE
0x450 DUP1
0x451 SWAP3
0x452 SWAP2
0x453 SWAP1
0x454 DUP2
0x455 DUP2
0x456 MSTORE
0x457 PUSH1 0x20
0x459 ADD
0x45a DUP3
0x45b DUP1
0x45c SLOAD
0x45d PUSH1 0x1
0x45f DUP2
0x460 PUSH1 0x1
0x462 AND
0x463 ISZERO
0x464 PUSH2 0x100
0x467 MUL
0x468 SUB
0x469 AND
0x46a PUSH1 0x2
0x46c SWAP1
0x46d DIV
0x46e DUP1
0x46f ISZERO
0x470 PUSH2 0x4ba
0x473 JUMPI
---
0x3f3: JUMPDEST 
0x3f4: V264 = 0x1
0x3f7: V265 = 0x20
0x3f9: V266 = SUB 0x20 S2
0x3fa: V267 = 0x100
0x3fd: V268 = EXP 0x100 V266
0x3fe: V269 = SUB V268 0x1
0x400: V270 = NOT V269
0x402: V271 = M[S0]
0x403: V272 = AND V271 V270
0x406: V273 = M[S1]
0x407: V274 = AND V273 V269
0x40a: V275 = OR V272 V274
0x40c: M[S1] = V275
0x415: V276 = ADD V248 V247
0x41b: M[V276] = V245
0x41c: V277 = 0x20
0x41e: V278 = ADD 0x20 V276
0x41f: V279 = 0x40
0x421: V280 = M[0x40]
0x424: V281 = SUB V278 V280
0x426: V282 = SHA3 V280 V281
0x428: V283 = S[V282]
0x429: V284 = 0x1
0x42c: V285 = 0x1
0x42e: V286 = AND 0x1 V283
0x42f: V287 = ISZERO V286
0x430: V288 = 0x100
0x433: V289 = MUL 0x100 V287
0x434: V290 = SUB V289 0x1
0x435: V291 = AND V290 V283
0x436: V292 = 0x2
0x439: V293 = DIV V291 0x2
0x43b: V294 = 0x1f
0x43d: V295 = ADD 0x1f V293
0x43e: V296 = 0x20
0x442: V297 = DIV V295 0x20
0x443: V298 = MUL V297 0x20
0x444: V299 = 0x20
0x446: V300 = ADD 0x20 V298
0x447: V301 = 0x40
0x449: V302 = M[0x40]
0x44c: V303 = ADD V302 V300
0x44d: V304 = 0x40
0x44f: M[0x40] = V303
0x456: M[V302] = V293
0x457: V305 = 0x20
0x459: V306 = ADD 0x20 V302
0x45c: V307 = S[V282]
0x45d: V308 = 0x1
0x460: V309 = 0x1
0x462: V310 = AND 0x1 V307
0x463: V311 = ISZERO V310
0x464: V312 = 0x100
0x467: V313 = MUL 0x100 V311
0x468: V314 = SUB V313 0x1
0x469: V315 = AND V314 V307
0x46a: V316 = 0x2
0x46d: V317 = DIV V315 0x2
0x46f: V318 = ISZERO V317
0x470: V319 = 0x4ba
0x473: JUMPI 0x4ba V318
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V245, V110, V247, V247, V250, V248, S2, S1, S0]
Stack pops: 9
Stack additions: [V302, V282, V293, V306, V282, V317]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V306, V282, V317]

================================

Block 0x474
[0x474:0x47b]
---
Predecessors: [0x3f3]
Successors: [0x47c, 0x48f]
---
0x474 DUP1
0x475 PUSH1 0x1f
0x477 LT
0x478 PUSH2 0x48f
0x47b JUMPI
---
0x475: V320 = 0x1f
0x477: V321 = LT 0x1f V317
0x478: V322 = 0x48f
0x47b: JUMPI 0x48f V321
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V306, V282, V317]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V306, V282, V317]

================================

Block 0x47c
[0x47c:0x48e]
---
Predecessors: [0x474]
Successors: [0x4ba]
---
0x47c PUSH2 0x100
0x47f DUP1
0x480 DUP4
0x481 SLOAD
0x482 DIV
0x483 MUL
0x484 DUP4
0x485 MSTORE
0x486 SWAP2
0x487 PUSH1 0x20
0x489 ADD
0x48a SWAP2
0x48b PUSH2 0x4ba
0x48e JUMP
---
0x47c: V323 = 0x100
0x481: V324 = S[V282]
0x482: V325 = DIV V324 0x100
0x483: V326 = MUL V325 0x100
0x485: M[V306] = V326
0x487: V327 = 0x20
0x489: V328 = ADD 0x20 V306
0x48b: V329 = 0x4ba
0x48e: JUMP 0x4ba
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V306, V282, V317]
Stack pops: 3
Stack additions: [V328, S1, S0]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V328, V282, V317]

================================

Block 0x48f
[0x48f:0x49c]
---
Predecessors: [0x474]
Successors: [0x49d]
---
0x48f JUMPDEST
0x490 DUP3
0x491 ADD
0x492 SWAP2
0x493 SWAP1
0x494 PUSH1 0x0
0x496 MSTORE
0x497 PUSH1 0x20
0x499 PUSH1 0x0
0x49b SHA3
0x49c SWAP1
---
0x48f: JUMPDEST 
0x491: V330 = ADD V306 V317
0x494: V331 = 0x0
0x496: M[0x0] = V282
0x497: V332 = 0x20
0x499: V333 = 0x0
0x49b: V334 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V306, V282, V317]
Stack pops: 3
Stack additions: [V330, V334, S2]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V330, V334, V306]

================================

Block 0x49d
[0x49d:0x4b0]
---
Predecessors: [0x48f, 0x49d]
Successors: [0x49d, 0x4b1]
---
0x49d JUMPDEST
0x49e DUP2
0x49f SLOAD
0x4a0 DUP2
0x4a1 MSTORE
0x4a2 SWAP1
0x4a3 PUSH1 0x1
0x4a5 ADD
0x4a6 SWAP1
0x4a7 PUSH1 0x20
0x4a9 ADD
0x4aa DUP1
0x4ab DUP4
0x4ac GT
0x4ad PUSH2 0x49d
0x4b0 JUMPI
---
0x49d: JUMPDEST 
0x49f: V335 = S[S1]
0x4a1: M[S0] = V335
0x4a3: V336 = 0x1
0x4a5: V337 = ADD 0x1 S1
0x4a7: V338 = 0x20
0x4a9: V339 = ADD 0x20 S0
0x4ac: V340 = GT V330 V339
0x4ad: V341 = 0x49d
0x4b0: JUMPI 0x49d V340
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V330, S1, S0]
Stack pops: 3
Stack additions: [S2, V337, V339]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V330, V337, V339]

================================

Block 0x4b1
[0x4b1:0x4b9]
---
Predecessors: [0x49d]
Successors: [0x4ba]
---
0x4b1 DUP3
0x4b2 SWAP1
0x4b3 SUB
0x4b4 PUSH1 0x1f
0x4b6 AND
0x4b7 DUP3
0x4b8 ADD
0x4b9 SWAP2
---
0x4b3: V342 = SUB V339 V330
0x4b4: V343 = 0x1f
0x4b6: V344 = AND 0x1f V342
0x4b8: V345 = ADD V330 V344
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V330, V337, V339]
Stack pops: 3
Stack additions: [V345, S1, S2]
Exit stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, V345, V337, V330]

================================

Block 0x4ba
[0x4ba:0x4c7]
---
Predecessors: [0x3f3, 0x47c, 0x4b1]
Successors: [0x1c7]
---
0x4ba JUMPDEST
0x4bb POP
0x4bc POP
0x4bd POP
0x4be POP
0x4bf POP
0x4c0 SWAP1
0x4c1 POP
0x4c2 SWAP4
0x4c3 SWAP3
0x4c4 POP
0x4c5 POP
0x4c6 POP
0x4c7 JUMP
---
0x4ba: JUMPDEST 
0x4c7: JUMP 0x1c7
---
Entry stack: [V11, 0x1c7, V87, V92, V110, 0x60, V302, V282, V293, S2, S1, S0]
Stack pops: 11
Stack additions: [S5]
Exit stack: [V11, V302]

================================

Block 0x4c8
[0x4c8:0x4f8]
---
Predecessors: [0x2f4]
Successors: [0x4f9, 0x509]
---
0x4c8 JUMPDEST
0x4c9 DUP3
0x4ca DUP1
0x4cb SLOAD
0x4cc PUSH1 0x1
0x4ce DUP2
0x4cf PUSH1 0x1
0x4d1 AND
0x4d2 ISZERO
0x4d3 PUSH2 0x100
0x4d6 MUL
0x4d7 SUB
0x4d8 AND
0x4d9 PUSH1 0x2
0x4db SWAP1
0x4dc DIV
0x4dd SWAP1
0x4de PUSH1 0x0
0x4e0 MSTORE
0x4e1 PUSH1 0x20
0x4e3 PUSH1 0x0
0x4e5 SHA3
0x4e6 SWAP1
0x4e7 PUSH1 0x1f
0x4e9 ADD
0x4ea PUSH1 0x20
0x4ec SWAP1
0x4ed DIV
0x4ee DUP2
0x4ef ADD
0x4f0 SWAP3
0x4f1 DUP3
0x4f2 PUSH1 0x1f
0x4f4 LT
0x4f5 PUSH2 0x509
0x4f8 JUMPI
---
0x4c8: JUMPDEST 
0x4cb: V346 = S[V217]
0x4cc: V347 = 0x1
0x4cf: V348 = 0x1
0x4d1: V349 = AND 0x1 V346
0x4d2: V350 = ISZERO V349
0x4d3: V351 = 0x100
0x4d6: V352 = MUL 0x100 V350
0x4d7: V353 = SUB V352 0x1
0x4d8: V354 = AND V353 V346
0x4d9: V355 = 0x2
0x4dc: V356 = DIV V354 0x2
0x4de: V357 = 0x0
0x4e0: M[0x0] = V217
0x4e1: V358 = 0x20
0x4e3: V359 = 0x0
0x4e5: V360 = SHA3 0x0 0x20
0x4e7: V361 = 0x1f
0x4e9: V362 = ADD 0x1f V356
0x4ea: V363 = 0x20
0x4ed: V364 = DIV V362 0x20
0x4ef: V365 = ADD V360 V364
0x4f2: V366 = 0x1f
0x4f4: V367 = LT 0x1f V218
0x4f5: V368 = 0x509
0x4f8: JUMPI 0x509 V367
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V220, V218]
Stack pops: 3
Stack additions: [S2, V365, S0, V360, S1]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V218, V360, V220]

================================

Block 0x4f9
[0x4f9:0x508]
---
Predecessors: [0x4c8]
Successors: [0x537]
---
0x4f9 DUP1
0x4fa MLOAD
0x4fb PUSH1 0xff
0x4fd NOT
0x4fe AND
0x4ff DUP4
0x500 DUP1
0x501 ADD
0x502 OR
0x503 DUP6
0x504 SSTORE
0x505 PUSH2 0x537
0x508 JUMP
---
0x4fa: V369 = M[V220]
0x4fb: V370 = 0xff
0x4fd: V371 = NOT 0xff
0x4fe: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V369
0x501: V373 = ADD V218 V218
0x502: V374 = OR V373 V372
0x504: S[V217] = V374
0x505: V375 = 0x537
0x508: JUMP 0x537
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V218, V360, V220]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V218, V360, V220]

================================

Block 0x509
[0x509:0x517]
---
Predecessors: [0x4c8]
Successors: [0x518, 0x537]
---
0x509 JUMPDEST
0x50a DUP3
0x50b DUP1
0x50c ADD
0x50d PUSH1 0x1
0x50f ADD
0x510 DUP6
0x511 SSTORE
0x512 DUP3
0x513 ISZERO
0x514 PUSH2 0x537
0x517 JUMPI
---
0x509: JUMPDEST 
0x50c: V376 = ADD V218 V218
0x50d: V377 = 0x1
0x50f: V378 = ADD 0x1 V376
0x511: S[V217] = V378
0x513: V379 = ISZERO V218
0x514: V380 = 0x537
0x517: JUMPI 0x537 V379
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V218, V360, V220]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V218, V360, V220]

================================

Block 0x518
[0x518:0x51a]
---
Predecessors: [0x509]
Successors: [0x51b]
---
0x518 SWAP2
0x519 DUP3
0x51a ADD
---
0x51a: V381 = ADD V220 V218
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V218, V360, V220]
Stack pops: 3
Stack additions: [S0, S1, V381]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V220, V360, V381]

================================

Block 0x51b
[0x51b:0x523]
---
Predecessors: [0x518, 0x524]
Successors: [0x524, 0x536]
---
0x51b JUMPDEST
0x51c DUP3
0x51d DUP2
0x51e GT
0x51f ISZERO
0x520 PUSH2 0x536
0x523 JUMPI
---
0x51b: JUMPDEST 
0x51e: V382 = GT V381 S2
0x51f: V383 = ISZERO V382
0x520: V384 = 0x536
0x523: JUMPI 0x536 V383
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, S2, S1, V381]

================================

Block 0x524
[0x524:0x535]
---
Predecessors: [0x51b]
Successors: [0x51b]
---
0x524 DUP3
0x525 MLOAD
0x526 DUP3
0x527 SSTORE
0x528 SWAP2
0x529 PUSH1 0x20
0x52b ADD
0x52c SWAP2
0x52d SWAP1
0x52e PUSH1 0x1
0x530 ADD
0x531 SWAP1
0x532 PUSH2 0x51b
0x535 JUMP
---
0x525: V385 = M[S2]
0x527: S[S1] = V385
0x529: V386 = 0x20
0x52b: V387 = ADD 0x20 S2
0x52e: V388 = 0x1
0x530: V389 = ADD 0x1 S1
0x532: V390 = 0x51b
0x535: JUMP 0x51b
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [V387, V389, S0]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, V387, V389, V381]

================================

Block 0x536
[0x536:0x536]
---
Predecessors: [0x51b]
Successors: [0x537]
---
0x536 JUMPDEST
---
0x536: JUMPDEST 
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, S2, S1, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, S2, S1, V381]

================================

Block 0x537
[0x537:0x543]
---
Predecessors: [0x4f9, 0x509, 0x536]
Successors: [0x548]
---
0x537 JUMPDEST
0x538 POP
0x539 SWAP1
0x53a POP
0x53b PUSH2 0x544
0x53e SWAP2
0x53f SWAP1
0x540 PUSH2 0x548
0x543 JUMP
---
0x537: JUMPDEST 
0x53b: V391 = 0x544
0x540: V392 = 0x548
0x543: JUMP 0x548
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365, S2, S1, S0]
Stack pops: 4
Stack additions: [0x544, S3, S1]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, V365, S1]

================================

Block 0x544
[0x544:0x547]
---
Predecessors: [0x56a]
Successors: [0x33a]
---
0x544 JUMPDEST
0x545 POP
0x546 SWAP1
0x547 JUMP
---
0x544: JUMPDEST 
0x547: JUMP 0x33a
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x11e, V30, V48, V69, V217]

================================

Block 0x548
[0x548:0x54d]
---
Predecessors: [0x537]
Successors: [0x54e]
---
0x548 JUMPDEST
0x549 PUSH2 0x56a
0x54c SWAP2
0x54d SWAP1
---
0x548: JUMPDEST 
0x549: V393 = 0x56a
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, V365, S0]
Stack pops: 2
Stack additions: [0x56a, S1, S0]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, 0x56a, V365, S0]

================================

Block 0x54e
[0x54e:0x556]
---
Predecessors: [0x548, 0x557]
Successors: [0x557, 0x566]
---
0x54e JUMPDEST
0x54f DUP1
0x550 DUP3
0x551 GT
0x552 ISZERO
0x553 PUSH2 0x566
0x556 JUMPI
---
0x54e: JUMPDEST 
0x551: V394 = GT V365 S0
0x552: V395 = ISZERO V394
0x553: V396 = 0x566
0x556: JUMPI 0x566 V395
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, 0x56a, V365, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, 0x56a, V365, S0]

================================

Block 0x557
[0x557:0x565]
---
Predecessors: [0x54e]
Successors: [0x54e]
---
0x557 PUSH1 0x0
0x559 DUP2
0x55a PUSH1 0x0
0x55c SWAP1
0x55d SSTORE
0x55e POP
0x55f PUSH1 0x1
0x561 ADD
0x562 PUSH2 0x54e
0x565 JUMP
---
0x557: V397 = 0x0
0x55a: V398 = 0x0
0x55d: S[S0] = 0x0
0x55f: V399 = 0x1
0x561: V400 = ADD 0x1 S0
0x562: V401 = 0x54e
0x565: JUMP 0x54e
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, 0x56a, V365, S0]
Stack pops: 1
Stack additions: [V400]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, 0x56a, V365, V400]

================================

Block 0x566
[0x566:0x569]
---
Predecessors: [0x54e]
Successors: [0x56a]
---
0x566 JUMPDEST
0x567 POP
0x568 SWAP1
0x569 JUMP
---
0x566: JUMPDEST 
0x569: JUMP 0x56a
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, 0x56a, V365, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, V365]

================================

Block 0x56a
[0x56a:0x56c]
---
Predecessors: [0x566]
Successors: [0x544]
---
0x56a JUMPDEST
0x56b SWAP1
0x56c JUMP
---
0x56a: JUMPDEST 
0x56c: JUMP 0x544
---
Entry stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, 0x544, V365]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x11e, V30, V48, V69, 0x33a, V217, V365]

================================

Block 0x56d
[0x56d:0x598]
---
Predecessors: []
Successors: []
---
0x56d STOP
0x56e LOG1
0x56f PUSH6 0x627a7a723058
0x576 SHA3
0x577 XOR
0x578 MISSING 0xde
0x579 MISSING 0xbb
0x57a MISSING 0xe7
0x57b DUP1
0x57c MISSING 0x4b
0x57d SWAP2
0x57e SWAP12
0x57f LOG4
0x580 STATICCALL
0x581 BYTE
0x582 MISSING 0x4b
0x583 PUSH18 0xee9269559b5a7db20eda11f46c4ab17fcfb1
0x596 MISSING 0xc7
0x597 STOP
0x598 MISSING 0x29
---
0x56d: STOP 
0x56e: LOG S0 S1 S2
0x56f: V402 = 0x627a7a723058
0x576: V403 = SHA3 0x627a7a723058 S3
0x577: V404 = XOR V403 S4
0x578: MISSING 0xde
0x579: MISSING 0xbb
0x57a: MISSING 0xe7
0x57c: MISSING 0x4b
0x57f: LOG S12 S1 S0 S3 S4 S5
0x580: V405 = STATICCALL S6 S7 S8 S9 S10 S11
0x581: V406 = BYTE V405 S2
0x582: MISSING 0x4b
0x583: V407 = 0xee9269559b5a7db20eda11f46c4ab17fcfb1
0x596: MISSING 0xc7
0x597: STOP 
0x598: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V404, S0, S0, V406, 0xee9269559b5a7db20eda11f46c4ab17fcfb1]
Exit stack: []

================================

Function 0:
Public function signature: 0x6e8f7142
Entry block: 0x51
Exit block: 0x11e
Body: 0x51, 0x59, 0x5d, 0x11e, 0x242, 0x2cf, 0x2da, 0x2f4, 0x33a, 0x4c8, 0x4f9, 0x509, 0x518, 0x51b, 0x524, 0x536, 0x537, 0x544, 0x548, 0x54e, 0x557, 0x566, 0x56a

Function 1:
Public function signature: 0x7d4c1403
Entry block: 0x120
Exit block: 0x234
Body: 0x120, 0x128, 0x12c, 0x1c7, 0x1ec, 0x1f5, 0x207, 0x21b, 0x234, 0x340, 0x3ce, 0x3d9, 0x3f3, 0x474, 0x47c, 0x48f, 0x49d, 0x4b1, 0x4ba

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

