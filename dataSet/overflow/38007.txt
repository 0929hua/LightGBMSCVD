Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xae1b13d
0x34 EQ
0x35 PUSH2 0x46
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xae1b13d
0x34: V9 = EQ 0xae1b13d V7
0x35: V10 = 0x46
0x38: JUMPI 0x46 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xe3]
---
0x39 DUP1
0x3a PUSH4 0x83197ef0
0x3f EQ
0x40 PUSH2 0xe3
0x43 JUMPI
---
0x3a: V11 = 0x83197ef0
0x3f: V12 = EQ 0x83197ef0 V7
0x40: V13 = 0xe3
0x43: JUMPI 0xe3 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x45]
---
Predecessors: [0x39]
Successors: []
---
0x44 JUMPDEST
0x45 INVALID
---
0x44: JUMPDEST 
0x45: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x46
[0x46:0x4c]
---
Predecessors: [0x0]
Successors: [0x4d, 0x4e]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 ISZERO
0x49 PUSH2 0x4e
0x4c JUMPI
---
0x46: JUMPDEST 
0x47: V14 = CALLVALUE
0x48: V15 = ISZERO V14
0x49: V16 = 0x4e
0x4c: JUMPI 0x4e V15
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x4d
[0x4d:0x4d]
---
Predecessors: [0x46]
Successors: []
---
0x4d INVALID
---
0x4d: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x4e
[0x4e:0xe0]
---
Predecessors: [0x46]
Successors: [0xf5]
---
0x4e JUMPDEST
0x4f PUSH2 0xe1
0x52 PUSH1 0x4
0x54 DUP1
0x55 DUP1
0x56 CALLDATALOAD
0x57 SWAP1
0x58 PUSH1 0x20
0x5a ADD
0x5b SWAP1
0x5c DUP3
0x5d ADD
0x5e DUP1
0x5f CALLDATALOAD
0x60 SWAP1
0x61 PUSH1 0x20
0x63 ADD
0x64 SWAP1
0x65 DUP1
0x66 DUP1
0x67 PUSH1 0x1f
0x69 ADD
0x6a PUSH1 0x20
0x6c DUP1
0x6d SWAP2
0x6e DIV
0x6f MUL
0x70 PUSH1 0x20
0x72 ADD
0x73 PUSH1 0x40
0x75 MLOAD
0x76 SWAP1
0x77 DUP2
0x78 ADD
0x79 PUSH1 0x40
0x7b MSTORE
0x7c DUP1
0x7d SWAP4
0x7e SWAP3
0x7f SWAP2
0x80 SWAP1
0x81 DUP2
0x82 DUP2
0x83 MSTORE
0x84 PUSH1 0x20
0x86 ADD
0x87 DUP4
0x88 DUP4
0x89 DUP1
0x8a DUP3
0x8b DUP5
0x8c CALLDATACOPY
0x8d DUP3
0x8e ADD
0x8f SWAP2
0x90 POP
0x91 POP
0x92 POP
0x93 POP
0x94 POP
0x95 POP
0x96 SWAP2
0x97 SWAP1
0x98 DUP1
0x99 CALLDATALOAD
0x9a SWAP1
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f DUP3
0xa0 ADD
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 SWAP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP1
0xa8 DUP1
0xa9 DUP1
0xaa PUSH1 0x1f
0xac ADD
0xad PUSH1 0x20
0xaf DUP1
0xb0 SWAP2
0xb1 DIV
0xb2 MUL
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 PUSH1 0x40
0xb8 MLOAD
0xb9 SWAP1
0xba DUP2
0xbb ADD
0xbc PUSH1 0x40
0xbe MSTORE
0xbf DUP1
0xc0 SWAP4
0xc1 SWAP3
0xc2 SWAP2
0xc3 SWAP1
0xc4 DUP2
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca DUP4
0xcb DUP4
0xcc DUP1
0xcd DUP3
0xce DUP5
0xcf CALLDATACOPY
0xd0 DUP3
0xd1 ADD
0xd2 SWAP2
0xd3 POP
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 SWAP2
0xda SWAP1
0xdb POP
0xdc POP
0xdd PUSH2 0xf5
0xe0 JUMP
---
0x4e: JUMPDEST 
0x4f: V17 = 0xe1
0x52: V18 = 0x4
0x56: V19 = CALLDATALOAD 0x4
0x58: V20 = 0x20
0x5a: V21 = ADD 0x20 0x4
0x5d: V22 = ADD 0x4 V19
0x5f: V23 = CALLDATALOAD V22
0x61: V24 = 0x20
0x63: V25 = ADD 0x20 V22
0x67: V26 = 0x1f
0x69: V27 = ADD 0x1f V23
0x6a: V28 = 0x20
0x6e: V29 = DIV V27 0x20
0x6f: V30 = MUL V29 0x20
0x70: V31 = 0x20
0x72: V32 = ADD 0x20 V30
0x73: V33 = 0x40
0x75: V34 = M[0x40]
0x78: V35 = ADD V34 V32
0x79: V36 = 0x40
0x7b: M[0x40] = V35
0x83: M[V34] = V23
0x84: V37 = 0x20
0x86: V38 = ADD 0x20 V34
0x8c: CALLDATACOPY V38 V25 V23
0x8e: V39 = ADD V38 V23
0x99: V40 = CALLDATALOAD 0x24
0x9b: V41 = 0x20
0x9d: V42 = ADD 0x20 0x24
0xa0: V43 = ADD 0x4 V40
0xa2: V44 = CALLDATALOAD V43
0xa4: V45 = 0x20
0xa6: V46 = ADD 0x20 V43
0xaa: V47 = 0x1f
0xac: V48 = ADD 0x1f V44
0xad: V49 = 0x20
0xb1: V50 = DIV V48 0x20
0xb2: V51 = MUL V50 0x20
0xb3: V52 = 0x20
0xb5: V53 = ADD 0x20 V51
0xb6: V54 = 0x40
0xb8: V55 = M[0x40]
0xbb: V56 = ADD V55 V53
0xbc: V57 = 0x40
0xbe: M[0x40] = V56
0xc6: M[V55] = V44
0xc7: V58 = 0x20
0xc9: V59 = ADD 0x20 V55
0xcf: CALLDATACOPY V59 V46 V44
0xd1: V60 = ADD V59 V44
0xdd: V61 = 0xf5
0xe0: JUMP 0xf5
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xe1, V34, V55]
Exit stack: [V7, 0xe1, V34, V55]

================================

Block 0xe1
[0xe1:0xe2]
---
Predecessors: [0x254]
Successors: []
---
0xe1 JUMPDEST
0xe2 STOP
---
0xe1: JUMPDEST 
0xe2: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe3
[0xe3:0xe9]
---
Predecessors: [0x39]
Successors: [0xea, 0xeb]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 ISZERO
0xe6 PUSH2 0xeb
0xe9 JUMPI
---
0xe3: JUMPDEST 
0xe4: V62 = CALLVALUE
0xe5: V63 = ISZERO V62
0xe6: V64 = 0xeb
0xe9: JUMPI 0xeb V63
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xea
[0xea:0xea]
---
Predecessors: [0xe3]
Successors: []
---
0xea INVALID
---
0xea: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe3]
Successors: [0x258]
---
0xeb JUMPDEST
0xec PUSH2 0xf3
0xef PUSH2 0x258
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V65 = 0xf3
0xef: V66 = 0x258
0xf2: JUMP 0x258
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V7, 0xf3]

================================

Block 0xf3
[0xf3:0xf4]
---
Predecessors: []
Successors: []
---
0xf3 JUMPDEST
0xf4 STOP
---
0xf3: JUMPDEST 
0xf4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf5
[0xf5:0x100]
---
Predecessors: [0x4e]
Successors: [0x101, 0x106]
---
0xf5 JUMPDEST
0xf6 PUSH1 0x0
0xf8 DUP3
0xf9 MLOAD
0xfa GT
0xfb ISZERO
0xfc ISZERO
0xfd PUSH2 0x106
0x100 JUMPI
---
0xf5: JUMPDEST 
0xf6: V67 = 0x0
0xf9: V68 = M[V34]
0xfa: V69 = GT V68 0x0
0xfb: V70 = ISZERO V69
0xfc: V71 = ISZERO V70
0xfd: V72 = 0x106
0x100: JUMPI 0x106 V71
---
Entry stack: [V7, 0xe1, V34, V55]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0xe1, V34, V55]

================================

Block 0x101
[0x101:0x105]
---
Predecessors: [0xf5]
Successors: []
---
0x101 PUSH1 0x0
0x103 PUSH1 0x0
0x105 REVERT
---
0x101: V73 = 0x0
0x103: V74 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V7, 0xe1, V34, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe1, V34, V55]

================================

Block 0x106
[0x106:0x111]
---
Predecessors: [0xf5]
Successors: [0x112, 0x117]
---
0x106 JUMPDEST
0x107 PUSH1 0x0
0x109 DUP2
0x10a MLOAD
0x10b GT
0x10c ISZERO
0x10d ISZERO
0x10e PUSH2 0x117
0x111 JUMPI
---
0x106: JUMPDEST 
0x107: V75 = 0x0
0x10a: V76 = M[V55]
0x10b: V77 = GT V76 0x0
0x10c: V78 = ISZERO V77
0x10d: V79 = ISZERO V78
0x10e: V80 = 0x117
0x111: JUMPI 0x117 V79
---
Entry stack: [V7, 0xe1, V34, V55]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xe1, V34, V55]

================================

Block 0x112
[0x112:0x116]
---
Predecessors: [0x106]
Successors: []
---
0x112 PUSH1 0x0
0x114 PUSH1 0x0
0x116 REVERT
---
0x112: V81 = 0x0
0x114: V82 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V7, 0xe1, V34, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe1, V34, V55]

================================

Block 0x117
[0x117:0x17f]
---
Predecessors: [0x106]
Successors: [0x180, 0x1a4]
---
0x117 JUMPDEST
0x118 CALLER
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f PUSH32 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9
0x150 DUP4
0x151 DUP4
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 DUP1
0x157 PUSH1 0x20
0x159 ADD
0x15a DUP1
0x15b PUSH1 0x20
0x15d ADD
0x15e DUP4
0x15f DUP2
0x160 SUB
0x161 DUP4
0x162 MSTORE
0x163 DUP6
0x164 DUP2
0x165 DUP2
0x166 MLOAD
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c SWAP2
0x16d POP
0x16e DUP1
0x16f MLOAD
0x170 SWAP1
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 DUP1
0x176 DUP4
0x177 DUP4
0x178 PUSH1 0x0
0x17a DUP4
0x17b EQ
0x17c PUSH2 0x1a4
0x17f JUMPI
---
0x117: JUMPDEST 
0x118: V83 = CALLER
0x119: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x12f: V86 = 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9
0x152: V87 = 0x40
0x154: V88 = M[0x40]
0x157: V89 = 0x20
0x159: V90 = ADD 0x20 V88
0x15b: V91 = 0x20
0x15d: V92 = ADD 0x20 V90
0x160: V93 = SUB V92 V88
0x162: M[V88] = V93
0x166: V94 = M[V34]
0x168: M[V92] = V94
0x169: V95 = 0x20
0x16b: V96 = ADD 0x20 V92
0x16f: V97 = M[V34]
0x171: V98 = 0x20
0x173: V99 = ADD 0x20 V34
0x178: V100 = 0x0
0x17b: V101 = EQ V97 0x0
0x17c: V102 = 0x1a4
0x17f: JUMPI 0x1a4 V101
---
Entry stack: [V7, 0xe1, V34, V55]
Stack pops: 2
Stack additions: [S1, S0, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, S1, S0, V88, V88, V90, V96, V99, V97, V97, V96, V99]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V96, V99, V97, V97, V96, V99]

================================

Block 0x180
[0x180:0x18d]
---
Predecessors: [0x117, 0x18e]
Successors: [0x18e, 0x1a4]
---
0x180 JUMPDEST
0x181 DUP1
0x182 MLOAD
0x183 DUP3
0x184 MSTORE
0x185 PUSH1 0x20
0x187 DUP4
0x188 GT
0x189 ISZERO
0x18a PUSH2 0x1a4
0x18d JUMPI
---
0x180: JUMPDEST 
0x182: V103 = M[S0]
0x184: M[S1] = V103
0x185: V104 = 0x20
0x188: V105 = GT S2 0x20
0x189: V106 = ISZERO V105
0x18a: V107 = 0x1a4
0x18d: JUMPI 0x1a4 V106
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V96, V99, V97, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V96, V99, V97, S2, S1, S0]

================================

Block 0x18e
[0x18e:0x1a3]
---
Predecessors: [0x180]
Successors: [0x180]
---
0x18e PUSH1 0x20
0x190 DUP3
0x191 ADD
0x192 SWAP2
0x193 POP
0x194 PUSH1 0x20
0x196 DUP2
0x197 ADD
0x198 SWAP1
0x199 POP
0x19a PUSH1 0x20
0x19c DUP4
0x19d SUB
0x19e SWAP3
0x19f POP
0x1a0 PUSH2 0x180
0x1a3 JUMP
---
0x18e: V108 = 0x20
0x191: V109 = ADD S1 0x20
0x194: V110 = 0x20
0x197: V111 = ADD S0 0x20
0x19a: V112 = 0x20
0x19d: V113 = SUB S2 0x20
0x1a0: V114 = 0x180
0x1a3: JUMP 0x180
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V96, V99, V97, S2, S1, S0]
Stack pops: 3
Stack additions: [V113, V109, V111]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V96, V99, V97, V113, V109, V111]

================================

Block 0x1a4
[0x1a4:0x1b6]
---
Predecessors: [0x117, 0x180]
Successors: [0x1b7, 0x1d0]
---
0x1a4 JUMPDEST
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 SWAP1
0x1a9 POP
0x1aa SWAP1
0x1ab DUP2
0x1ac ADD
0x1ad SWAP1
0x1ae PUSH1 0x1f
0x1b0 AND
0x1b1 DUP1
0x1b2 ISZERO
0x1b3 PUSH2 0x1d0
0x1b6 JUMPI
---
0x1a4: JUMPDEST 
0x1ac: V115 = ADD V97 V96
0x1ae: V116 = 0x1f
0x1b0: V117 = AND 0x1f V97
0x1b2: V118 = ISZERO V117
0x1b3: V119 = 0x1d0
0x1b6: JUMPI 0x1d0 V118
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V96, V99, V97, S2, S1, S0]
Stack pops: 6
Stack additions: [V115, V117]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V115, V117]

================================

Block 0x1b7
[0x1b7:0x1cf]
---
Predecessors: [0x1a4]
Successors: [0x1d0]
---
0x1b7 DUP1
0x1b8 DUP3
0x1b9 SUB
0x1ba DUP1
0x1bb MLOAD
0x1bc PUSH1 0x1
0x1be DUP4
0x1bf PUSH1 0x20
0x1c1 SUB
0x1c2 PUSH2 0x100
0x1c5 EXP
0x1c6 SUB
0x1c7 NOT
0x1c8 AND
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP2
0x1cf POP
---
0x1b9: V120 = SUB V115 V117
0x1bb: V121 = M[V120]
0x1bc: V122 = 0x1
0x1bf: V123 = 0x20
0x1c1: V124 = SUB 0x20 V117
0x1c2: V125 = 0x100
0x1c5: V126 = EXP 0x100 V124
0x1c6: V127 = SUB V126 0x1
0x1c7: V128 = NOT V127
0x1c8: V129 = AND V128 V121
0x1ca: M[V120] = V129
0x1cb: V130 = 0x20
0x1cd: V131 = ADD 0x20 V120
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V115, V117]
Stack pops: 2
Stack additions: [V131, S0]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V131, V117]

================================

Block 0x1d0
[0x1d0:0x1f3]
---
Predecessors: [0x1a4, 0x1b7]
Successors: [0x1f4, 0x218]
---
0x1d0 JUMPDEST
0x1d1 POP
0x1d2 DUP4
0x1d3 DUP2
0x1d4 SUB
0x1d5 DUP3
0x1d6 MSTORE
0x1d7 DUP5
0x1d8 DUP2
0x1d9 DUP2
0x1da MLOAD
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP2
0x1e1 POP
0x1e2 DUP1
0x1e3 MLOAD
0x1e4 SWAP1
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 SWAP1
0x1e9 DUP1
0x1ea DUP4
0x1eb DUP4
0x1ec PUSH1 0x0
0x1ee DUP4
0x1ef EQ
0x1f0 PUSH2 0x218
0x1f3 JUMPI
---
0x1d0: JUMPDEST 
0x1d4: V132 = SUB S1 V88
0x1d6: M[V90] = V132
0x1da: V133 = M[V55]
0x1dc: M[S1] = V133
0x1dd: V134 = 0x20
0x1df: V135 = ADD 0x20 S1
0x1e3: V136 = M[V55]
0x1e5: V137 = 0x20
0x1e7: V138 = ADD 0x20 V55
0x1ec: V139 = 0x0
0x1ef: V140 = EQ V136 0x0
0x1f0: V141 = 0x218
0x1f3: JUMPI 0x218 V140
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, S1, V117]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V135, V138, V136, V136, V135, V138]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V135, V138, V136, V136, V135, V138]

================================

Block 0x1f4
[0x1f4:0x201]
---
Predecessors: [0x1d0, 0x202]
Successors: [0x202, 0x218]
---
0x1f4 JUMPDEST
0x1f5 DUP1
0x1f6 MLOAD
0x1f7 DUP3
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb DUP4
0x1fc GT
0x1fd ISZERO
0x1fe PUSH2 0x218
0x201 JUMPI
---
0x1f4: JUMPDEST 
0x1f6: V142 = M[S0]
0x1f8: M[S1] = V142
0x1f9: V143 = 0x20
0x1fc: V144 = GT S2 0x20
0x1fd: V145 = ISZERO V144
0x1fe: V146 = 0x218
0x201: JUMPI 0x218 V145
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V135, V138, V136, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V135, V138, V136, S2, S1, S0]

================================

Block 0x202
[0x202:0x217]
---
Predecessors: [0x1f4]
Successors: [0x1f4]
---
0x202 PUSH1 0x20
0x204 DUP3
0x205 ADD
0x206 SWAP2
0x207 POP
0x208 PUSH1 0x20
0x20a DUP2
0x20b ADD
0x20c SWAP1
0x20d POP
0x20e PUSH1 0x20
0x210 DUP4
0x211 SUB
0x212 SWAP3
0x213 POP
0x214 PUSH2 0x1f4
0x217 JUMP
---
0x202: V147 = 0x20
0x205: V148 = ADD S1 0x20
0x208: V149 = 0x20
0x20b: V150 = ADD S0 0x20
0x20e: V151 = 0x20
0x211: V152 = SUB S2 0x20
0x214: V153 = 0x1f4
0x217: JUMP 0x1f4
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V135, V138, V136, S2, S1, S0]
Stack pops: 3
Stack additions: [V152, V148, V150]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V135, V138, V136, V152, V148, V150]

================================

Block 0x218
[0x218:0x22a]
---
Predecessors: [0x1d0, 0x1f4]
Successors: [0x22b, 0x244]
---
0x218 JUMPDEST
0x219 POP
0x21a POP
0x21b POP
0x21c SWAP1
0x21d POP
0x21e SWAP1
0x21f DUP2
0x220 ADD
0x221 SWAP1
0x222 PUSH1 0x1f
0x224 AND
0x225 DUP1
0x226 ISZERO
0x227 PUSH2 0x244
0x22a JUMPI
---
0x218: JUMPDEST 
0x220: V154 = ADD V136 V135
0x222: V155 = 0x1f
0x224: V156 = AND 0x1f V136
0x226: V157 = ISZERO V156
0x227: V158 = 0x244
0x22a: JUMPI 0x244 V157
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V135, V138, V136, S2, S1, S0]
Stack pops: 6
Stack additions: [V154, V156]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V154, V156]

================================

Block 0x22b
[0x22b:0x243]
---
Predecessors: [0x218]
Successors: [0x244]
---
0x22b DUP1
0x22c DUP3
0x22d SUB
0x22e DUP1
0x22f MLOAD
0x230 PUSH1 0x1
0x232 DUP4
0x233 PUSH1 0x20
0x235 SUB
0x236 PUSH2 0x100
0x239 EXP
0x23a SUB
0x23b NOT
0x23c AND
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 SWAP2
0x243 POP
---
0x22d: V159 = SUB V154 V156
0x22f: V160 = M[V159]
0x230: V161 = 0x1
0x233: V162 = 0x20
0x235: V163 = SUB 0x20 V156
0x236: V164 = 0x100
0x239: V165 = EXP 0x100 V163
0x23a: V166 = SUB V165 0x1
0x23b: V167 = NOT V166
0x23c: V168 = AND V167 V160
0x23e: M[V159] = V168
0x23f: V169 = 0x20
0x241: V170 = ADD 0x20 V159
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V154, V156]
Stack pops: 2
Stack additions: [V170, S0]
Exit stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, V170, V156]

================================

Block 0x244
[0x244:0x253]
---
Predecessors: [0x218, 0x22b]
Successors: [0x254]
---
0x244 JUMPDEST
0x245 POP
0x246 SWAP5
0x247 POP
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 SWAP2
0x251 SUB
0x252 SWAP1
0x253 LOG2
---
0x244: JUMPDEST 
0x24c: V171 = 0x40
0x24e: V172 = M[0x40]
0x251: V173 = SUB S1 V172
0x253: LOG V172 V173 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9 V85
---
Entry stack: [V7, 0xe1, V34, V55, V85, 0xc2a24b33e52365462e520478af6ac73195f0894f754dfbf7edd62a5879c55df9, V34, V55, V88, V88, V90, S1, V156]
Stack pops: 9
Stack additions: []
Exit stack: [V7, 0xe1, V34, V55]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x244]
Successors: [0xe1]
---
0x254 JUMPDEST
0x255 POP
0x256 POP
0x257 JUMP
---
0x254: JUMPDEST 
0x257: JUMP 0xe1
---
Entry stack: [V7, 0xe1, V34, V55]
Stack pops: 3
Stack additions: []
Exit stack: [V7]

================================

Block 0x258
[0x258:0x2af]
---
Predecessors: [0xeb]
Successors: [0x2b0, 0x2b5]
---
0x258 JUMPDEST
0x259 PUSH1 0x0
0x25b PUSH1 0x0
0x25d SWAP1
0x25e SLOAD
0x25f SWAP1
0x260 PUSH2 0x100
0x263 EXP
0x264 SWAP1
0x265 DIV
0x266 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27b AND
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 AND
0x292 CALLER
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 EQ
0x2aa ISZERO
0x2ab ISZERO
0x2ac PUSH2 0x2b5
0x2af JUMPI
---
0x258: JUMPDEST 
0x259: V174 = 0x0
0x25b: V175 = 0x0
0x25e: V176 = S[0x0]
0x260: V177 = 0x100
0x263: V178 = EXP 0x100 0x0
0x265: V179 = DIV V176 0x1
0x266: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x27c: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x291: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x292: V184 = CALLER
0x293: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2a9: V187 = EQ V186 V183
0x2aa: V188 = ISZERO V187
0x2ab: V189 = ISZERO V188
0x2ac: V190 = 0x2b5
0x2af: JUMPI 0x2b5 V189
---
Entry stack: [V7, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf3]

================================

Block 0x2b0
[0x2b0:0x2b4]
---
Predecessors: [0x258]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 PUSH1 0x0
0x2b4 REVERT
---
0x2b0: V191 = 0x0
0x2b2: V192 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V7, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf3]

================================

Block 0x2b5
[0x2b5:0x2ef]
---
Predecessors: [0x258]
Successors: []
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x0
0x2b8 PUSH1 0x0
0x2ba SWAP1
0x2bb SLOAD
0x2bc SWAP1
0x2bd PUSH2 0x100
0x2c0 EXP
0x2c1 SWAP1
0x2c2 DIV
0x2c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d8 AND
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef SELFDESTRUCT
---
0x2b5: JUMPDEST 
0x2b6: V193 = 0x0
0x2b8: V194 = 0x0
0x2bb: V195 = S[0x0]
0x2bd: V196 = 0x100
0x2c0: V197 = EXP 0x100 0x0
0x2c2: V198 = DIV V195 0x1
0x2c3: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x2d9: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x2ef: SELFDESTRUCT V202
---
Entry stack: [V7, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xf3]

================================

Block 0x2f0
[0x2f0:0x332]
---
Predecessors: []
Successors: []
---
0x2f0 JUMPDEST
0x2f1 JUMP
0x2f2 STOP
0x2f3 LOG1
0x2f4 PUSH6 0x627a7a723058
0x2fb SHA3
0x2fc SHR
0x2fd MISSING 0x2f
0x2fe TIMESTAMP
0x2ff MISSING 0xb1
0x300 PUSH11 0x83adf85c9ec06efba5285c
0x30c MISSING 0xdb
0x30d MISSING 0xea
0x30e PUSH1 0xa6
0x310 PUSH7 0x8464c07a31dfb0
0x318 MISSING 0xb2
0x319 ISZERO
0x31a MISSING 0x22
0x31b PUSH23 0x29
---
0x2f0: JUMPDEST 
0x2f1: JUMP S0
0x2f2: STOP 
0x2f3: LOG S0 S1 S2
0x2f4: V203 = 0x627a7a723058
0x2fb: V204 = SHA3 0x627a7a723058 S3
0x2fc: V205 = SHR V204 S4
0x2fd: MISSING 0x2f
0x2fe: V206 = TIMESTAMP
0x2ff: MISSING 0xb1
0x300: V207 = 0x83adf85c9ec06efba5285c
0x30c: MISSING 0xdb
0x30d: MISSING 0xea
0x30e: V208 = 0xa6
0x310: V209 = 0x8464c07a31dfb0
0x318: MISSING 0xb2
0x319: V210 = ISZERO S0
0x31a: MISSING 0x22
0x31b: V211 = 0x29
---
Entry stack: []
Stack pops: 195
Stack additions: [0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0xae1b13d
Entry block: 0x46
Exit block: 0xe1
Body: 0x46, 0x4d, 0x4e, 0xe1, 0xf5, 0x101, 0x106, 0x112, 0x117, 0x180, 0x18e, 0x1a4, 0x1b7, 0x1d0, 0x1f4, 0x202, 0x218, 0x22b, 0x244, 0x254

Function 1:
Public function signature: 0x83197ef0
Entry block: 0xe3
Exit block: 0x2b0
Body: 0xe3, 0xea, 0xeb, 0x258, 0x2b0, 0x2b5

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

