Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x3c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xb4a99a4e
0x34 EQ
0x35 PUSH1 0x3c
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xb4a99a4e
0x34: V9 = EQ 0xb4a99a4e V7
0x35: V10 = 0x3c
0x37: JUMPI 0x3c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x3b]
---
Predecessors: [0x0]
Successors: []
---
0x38 PUSH1 0x0
0x3a DUP1
0x3b REVERT
---
0x38: V11 = 0x0
0x3b: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3c
[0x3c:0x41]
---
Predecessors: [0x0]
Successors: [0x42, 0x46]
---
0x3c JUMPDEST
0x3d CALLVALUE
0x3e ISZERO
0x3f PUSH1 0x46
0x41 JUMPI
---
0x3c: JUMPDEST 
0x3d: V12 = CALLVALUE
0x3e: V13 = ISZERO V12
0x3f: V14 = 0x46
0x41: JUMPI 0x46 V13
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x42
[0x42:0x45]
---
Predecessors: [0x3c]
Successors: []
---
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x46
[0x46:0x4b]
---
Predecessors: [0x3c]
Successors: [0x8e]
---
0x46 JUMPDEST
0x47 PUSH1 0x4c
0x49 PUSH1 0x8e
0x4b JUMP
---
0x46: JUMPDEST 
0x47: V16 = 0x4c
0x49: V17 = 0x8e
0x4b: JUMP 0x8e
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x4c]
Exit stack: [V7, 0x4c]

================================

Block 0x4c
[0x4c:0x8d]
---
Predecessors: [0x8e]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x40
0x4f MLOAD
0x50 DUP1
0x51 DUP3
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d AND
0x7e DUP2
0x7f MSTORE
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP2
0x84 POP
0x85 POP
0x86 PUSH1 0x40
0x88 MLOAD
0x89 DUP1
0x8a SWAP2
0x8b SUB
0x8c SWAP1
0x8d RETURN
---
0x4c: JUMPDEST 
0x4d: V18 = 0x40
0x4f: V19 = M[0x40]
0x52: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x68: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x7f: M[V19] = V23
0x80: V24 = 0x20
0x82: V25 = ADD 0x20 V19
0x86: V26 = 0x40
0x88: V27 = M[0x40]
0x8b: V28 = SUB V25 V27
0x8d: RETURN V27 V28
---
Entry stack: [V7, 0x4c, V35]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x4c]

================================

Block 0x8e
[0x8e:0xb2]
---
Predecessors: [0x46]
Successors: [0x4c]
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 SWAP1
0x93 SLOAD
0x94 SWAP1
0x95 PUSH2 0x100
0x98 EXP
0x99 SWAP1
0x9a DIV
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 DUP2
0xb2 JUMP
---
0x8e: JUMPDEST 
0x8f: V29 = 0x0
0x93: V30 = S[0x0]
0x95: V31 = 0x100
0x98: V32 = EXP 0x100 0x0
0x9a: V33 = DIV V30 0x1
0x9b: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xb2: JUMP 0x4c
---
Entry stack: [V7, 0x4c]
Stack pops: 1
Stack additions: [S0, V35]
Exit stack: [V7, 0x4c, V35]

================================

Block 0xb3
[0xb3:0xe9]
---
Predecessors: []
Successors: [0xea]
---
0xb3 STOP
0xb4 LOG1
0xb5 PUSH6 0x627a7a723058
0xbc SHA3
0xbd MISSING 0xfb
0xbe RETURNDATACOPY
0xbf MISSING 0xcd
0xc0 MISSING 0xa9
0xc1 PUSH6 0x4b9bcae24ec0
0xc8 PUSH23 0x5b78ae8fa281d8b690e7836ee0ffcd92201c89fe002960
0xe0 PUSH1 0x60
0xe2 BLOCKHASH
0xe3 MSTORE
0xe4 CALLDATASIZE
0xe5 ISZERO
0xe6 PUSH2 0x81
0xe9 JUMPI
---
0xb3: STOP 
0xb4: LOG S0 S1 S2
0xb5: V36 = 0x627a7a723058
0xbc: V37 = SHA3 0x627a7a723058 S3
0xbd: MISSING 0xfb
0xbe: RETURNDATACOPY S0 S1 S2
0xbf: MISSING 0xcd
0xc0: MISSING 0xa9
0xc1: V38 = 0x4b9bcae24ec0
0xc8: V39 = 0x5b78ae8fa281d8b690e7836ee0ffcd92201c89fe002960
0xe0: V40 = 0x60
0xe2: V41 = BLOCKHASH 0x60
0xe3: M[V41] = 0x5b78ae8fa281d8b690e7836ee0ffcd92201c89fe002960
0xe4: V42 = CALLDATASIZE
0xe5: V43 = ISZERO V42
0xe6: V44 = 0x81
0xe9: THROWI V43
---
Entry stack: []
Stack pops: 0
Stack additions: [V37, 0x4b9bcae24ec0]
Exit stack: []

================================

Block 0xea
[0xea:0x11d]
---
Predecessors: [0xb3]
Successors: [0x11e]
---
0xea PUSH1 0x0
0xec CALLDATALOAD
0xed PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10b SWAP1
0x10c DIV
0x10d PUSH4 0xffffffff
0x112 AND
0x113 DUP1
0x114 PUSH4 0x2e1a7d4d
0x119 EQ
0x11a PUSH2 0x8b
0x11d JUMPI
---
0xea: V45 = 0x0
0xec: V46 = CALLDATALOAD 0x0
0xed: V47 = 0x100000000000000000000000000000000000000000000000000000000
0x10c: V48 = DIV V46 0x100000000000000000000000000000000000000000000000000000000
0x10d: V49 = 0xffffffff
0x112: V50 = AND 0xffffffff V48
0x114: V51 = 0x2e1a7d4d
0x119: V52 = EQ 0x2e1a7d4d V50
0x11a: V53 = 0x8b
0x11d: THROWI V52
---
Entry stack: [0x4b9bcae24ec0]
Stack pops: 0
Stack additions: [V50]
Exit stack: [0x4b9bcae24ec0, V50]

================================

Block 0x11e
[0x11e:0x128]
---
Predecessors: [0xea]
Successors: [0x129]
---
0x11e DUP1
0x11f PUSH4 0x41c0e1b5
0x124 EQ
0x125 PUSH2 0xa3
0x128 JUMPI
---
0x11f: V54 = 0x41c0e1b5
0x124: V55 = EQ 0x41c0e1b5 V50
0x125: V56 = 0xa3
0x128: THROWI V55
---
Entry stack: [0x4b9bcae24ec0, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x4b9bcae24ec0, V50]

================================

Block 0x129
[0x129:0x133]
---
Predecessors: [0x11e]
Successors: [0x134]
---
0x129 DUP1
0x12a PUSH4 0xb4a99a4e
0x12f EQ
0x130 PUSH2 0xad
0x133 JUMPI
---
0x12a: V57 = 0xb4a99a4e
0x12f: V58 = EQ 0xb4a99a4e V50
0x130: V59 = 0xad
0x133: THROWI V58
---
Entry stack: [0x4b9bcae24ec0, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x4b9bcae24ec0, V50]

================================

Block 0x134
[0x134:0x13e]
---
Predecessors: [0x129]
Successors: [0x13f]
---
0x134 DUP1
0x135 PUSH4 0xb7b0422d
0x13a EQ
0x13b PUSH2 0x102
0x13e JUMPI
---
0x135: V60 = 0xb7b0422d
0x13a: V61 = EQ 0xb7b0422d V50
0x13b: V62 = 0x102
0x13e: THROWI V61
---
Entry stack: [0x4b9bcae24ec0, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x4b9bcae24ec0, V50]

================================

Block 0x13f
[0x13f:0x149]
---
Predecessors: [0x134]
Successors: [0x14a]
---
0x13f DUP1
0x140 PUSH4 0xd0e30db0
0x145 EQ
0x146 PUSH2 0x11a
0x149 JUMPI
---
0x140: V63 = 0xd0e30db0
0x145: V64 = EQ 0xd0e30db0 V50
0x146: V65 = 0x11a
0x149: THROWI V64
---
Entry stack: [0x4b9bcae24ec0, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x4b9bcae24ec0, V50]

================================

Block 0x14a
[0x14a:0x154]
---
Predecessors: [0x13f]
Successors: [0x155]
---
0x14a DUP1
0x14b PUSH4 0xec8cb281
0x150 EQ
0x151 PUSH2 0x124
0x154 JUMPI
---
0x14b: V66 = 0xec8cb281
0x150: V67 = EQ 0xec8cb281 V50
0x151: V68 = 0x124
0x154: THROWI V67
---
Entry stack: [0x4b9bcae24ec0, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x4b9bcae24ec0, V50]

================================

Block 0x155
[0x155:0x15f]
---
Predecessors: [0x14a]
Successors: [0x160]
---
0x155 DUP1
0x156 PUSH4 0xfc7e286d
0x15b EQ
0x15c PUSH2 0x14d
0x15f JUMPI
---
0x156: V69 = 0xfc7e286d
0x15b: V70 = EQ 0xfc7e286d V50
0x15c: V71 = 0x14d
0x15f: THROWI V70
---
Entry stack: [0x4b9bcae24ec0, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x4b9bcae24ec0, V50]

================================

Block 0x160
[0x160:0x192]
---
Predecessors: [0x155]
Successors: [0x193]
---
0x160 JUMPDEST
0x161 PUSH2 0x89
0x164 PUSH2 0x19a
0x167 JUMP
0x168 JUMPDEST
0x169 STOP
0x16a JUMPDEST
0x16b PUSH2 0xa1
0x16e PUSH1 0x4
0x170 DUP1
0x171 DUP1
0x172 CALLDATALOAD
0x173 SWAP1
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP1
0x178 SWAP2
0x179 SWAP1
0x17a POP
0x17b POP
0x17c PUSH2 0x249
0x17f JUMP
0x180 JUMPDEST
0x181 STOP
0x182 JUMPDEST
0x183 PUSH2 0xab
0x186 PUSH2 0x303
0x189 JUMP
0x18a JUMPDEST
0x18b STOP
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0xb8
0x192 JUMPI
---
0x160: JUMPDEST 
0x161: V72 = 0x89
0x164: V73 = 0x19a
0x167: THROW 
0x168: JUMPDEST 
0x169: STOP 
0x16a: JUMPDEST 
0x16b: V74 = 0xa1
0x16e: V75 = 0x4
0x172: V76 = CALLDATALOAD 0x4
0x174: V77 = 0x20
0x176: V78 = ADD 0x20 0x4
0x17c: V79 = 0x249
0x17f: THROW 
0x180: JUMPDEST 
0x181: STOP 
0x182: JUMPDEST 
0x183: V80 = 0xab
0x186: V81 = 0x303
0x189: THROW 
0x18a: JUMPDEST 
0x18b: STOP 
0x18c: JUMPDEST 
0x18d: V82 = CALLVALUE
0x18e: V83 = ISZERO V82
0x18f: V84 = 0xb8
0x192: THROWI V83
---
Entry stack: [0x4b9bcae24ec0, V50]
Stack pops: 0
Stack additions: [0x89, V76, 0xa1, 0xab]
Exit stack: []

================================

Block 0x193
[0x193:0x209]
---
Predecessors: [0x160]
Successors: [0x20a]
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
0x197 JUMPDEST
0x198 PUSH2 0xc0
0x19b PUSH2 0x34e
0x19e JUMP
0x19f JUMPDEST
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 DUP1
0x1a4 DUP3
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP2
0x1d7 POP
0x1d8 POP
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd SWAP2
0x1de SUB
0x1df SWAP1
0x1e0 RETURN
0x1e1 JUMPDEST
0x1e2 PUSH2 0x118
0x1e5 PUSH1 0x4
0x1e7 DUP1
0x1e8 DUP1
0x1e9 CALLDATALOAD
0x1ea SWAP1
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee SWAP1
0x1ef SWAP2
0x1f0 SWAP1
0x1f1 POP
0x1f2 POP
0x1f3 PUSH2 0x374
0x1f6 JUMP
0x1f7 JUMPDEST
0x1f8 STOP
0x1f9 JUMPDEST
0x1fa PUSH2 0x122
0x1fd PUSH2 0x19a
0x200 JUMP
0x201 JUMPDEST
0x202 STOP
0x203 JUMPDEST
0x204 CALLVALUE
0x205 ISZERO
0x206 PUSH2 0x12f
0x209 JUMPI
---
0x193: V85 = 0x0
0x196: REVERT 0x0 0x0
0x197: JUMPDEST 
0x198: V86 = 0xc0
0x19b: V87 = 0x34e
0x19e: THROW 
0x19f: JUMPDEST 
0x1a0: V88 = 0x40
0x1a2: V89 = M[0x40]
0x1a5: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1bb: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1d2: M[V89] = V93
0x1d3: V94 = 0x20
0x1d5: V95 = ADD 0x20 V89
0x1d9: V96 = 0x40
0x1db: V97 = M[0x40]
0x1de: V98 = SUB V95 V97
0x1e0: RETURN V97 V98
0x1e1: JUMPDEST 
0x1e2: V99 = 0x118
0x1e5: V100 = 0x4
0x1e9: V101 = CALLDATALOAD 0x4
0x1eb: V102 = 0x20
0x1ed: V103 = ADD 0x20 0x4
0x1f3: V104 = 0x374
0x1f6: THROW 
0x1f7: JUMPDEST 
0x1f8: STOP 
0x1f9: JUMPDEST 
0x1fa: V105 = 0x122
0x1fd: V106 = 0x19a
0x200: THROW 
0x201: JUMPDEST 
0x202: STOP 
0x203: JUMPDEST 
0x204: V107 = CALLVALUE
0x205: V108 = ISZERO V107
0x206: V109 = 0x12f
0x209: THROWI V108
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc0, V101, 0x118, 0x122]
Exit stack: []

================================

Block 0x20a
[0x20a:0x232]
---
Predecessors: [0x193]
Successors: [0x233]
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
0x20e JUMPDEST
0x20f PUSH2 0x137
0x212 PUSH2 0x42f
0x215 JUMP
0x216 JUMPDEST
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP1
0x21b DUP3
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x20
0x220 ADD
0x221 SWAP2
0x222 POP
0x223 POP
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b RETURN
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x158
0x232 JUMPI
---
0x20a: V110 = 0x0
0x20d: REVERT 0x0 0x0
0x20e: JUMPDEST 
0x20f: V111 = 0x137
0x212: V112 = 0x42f
0x215: THROW 
0x216: JUMPDEST 
0x217: V113 = 0x40
0x219: V114 = M[0x40]
0x21d: M[V114] = S0
0x21e: V115 = 0x20
0x220: V116 = ADD 0x20 V114
0x224: V117 = 0x40
0x226: V118 = M[0x40]
0x229: V119 = SUB V116 V118
0x22b: RETURN V118 V119
0x22c: JUMPDEST 
0x22d: V120 = CALLVALUE
0x22e: V121 = ISZERO V120
0x22f: V122 = 0x158
0x232: THROWI V121
---
Entry stack: []
Stack pops: 0
Stack additions: [0x137]
Exit stack: []

================================

Block 0x233
[0x233:0x28a]
---
Predecessors: [0x20a]
Successors: [0x28b]
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
0x237 JUMPDEST
0x238 PUSH2 0x184
0x23b PUSH1 0x4
0x23d DUP1
0x23e DUP1
0x23f CALLDATALOAD
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 AND
0x256 SWAP1
0x257 PUSH1 0x20
0x259 ADD
0x25a SWAP1
0x25b SWAP2
0x25c SWAP1
0x25d POP
0x25e POP
0x25f PUSH2 0x435
0x262 JUMP
0x263 JUMPDEST
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 DUP3
0x269 DUP2
0x26a MSTORE
0x26b PUSH1 0x20
0x26d ADD
0x26e SWAP2
0x26f POP
0x270 POP
0x271 PUSH1 0x40
0x273 MLOAD
0x274 DUP1
0x275 SWAP2
0x276 SUB
0x277 SWAP1
0x278 RETURN
0x279 JUMPDEST
0x27a PUSH8 0xde0b6b3a7640000
0x283 CALLVALUE
0x284 LT
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x247
0x28a JUMPI
---
0x233: V123 = 0x0
0x236: REVERT 0x0 0x0
0x237: JUMPDEST 
0x238: V124 = 0x184
0x23b: V125 = 0x4
0x23f: V126 = CALLDATALOAD 0x4
0x240: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x257: V129 = 0x20
0x259: V130 = ADD 0x20 0x4
0x25f: V131 = 0x435
0x262: THROW 
0x263: JUMPDEST 
0x264: V132 = 0x40
0x266: V133 = M[0x40]
0x26a: M[V133] = S0
0x26b: V134 = 0x20
0x26d: V135 = ADD 0x20 V133
0x271: V136 = 0x40
0x273: V137 = M[0x40]
0x276: V138 = SUB V135 V137
0x278: RETURN V137 V138
0x279: JUMPDEST 
0x27a: V139 = 0xde0b6b3a7640000
0x283: V140 = CALLVALUE
0x284: V141 = LT V140 0xde0b6b3a7640000
0x285: V142 = ISZERO V141
0x286: V143 = ISZERO V142
0x287: V144 = 0x247
0x28a: THROWI V143
---
Entry stack: []
Stack pops: 0
Stack additions: [V128, 0x184]
Exit stack: []

================================

Block 0x28b
[0x28b:0x325]
---
Predecessors: [0x233]
Successors: [0x326]
---
0x28b CALLVALUE
0x28c PUSH1 0x2
0x28e PUSH1 0x0
0x290 CALLER
0x291 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a6 AND
0x2a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bc AND
0x2bd DUP2
0x2be MSTORE
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP1
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x20
0x2c7 ADD
0x2c8 PUSH1 0x0
0x2ca SHA3
0x2cb PUSH1 0x0
0x2cd DUP3
0x2ce DUP3
0x2cf SLOAD
0x2d0 ADD
0x2d1 SWAP3
0x2d2 POP
0x2d3 POP
0x2d4 DUP2
0x2d5 SWAP1
0x2d6 SSTORE
0x2d7 POP
0x2d8 CALLER
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x310 CALLVALUE
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 DUP3
0x316 DUP2
0x317 MSTORE
0x318 PUSH1 0x20
0x31a ADD
0x31b SWAP2
0x31c POP
0x31d POP
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 SWAP2
0x323 SUB
0x324 SWAP1
0x325 LOG2
---
0x28b: V145 = CALLVALUE
0x28c: V146 = 0x2
0x28e: V147 = 0x0
0x290: V148 = CALLER
0x291: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a6: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2a7: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bc: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2be: M[0x0] = V152
0x2bf: V153 = 0x20
0x2c1: V154 = ADD 0x20 0x0
0x2c4: M[0x20] = 0x2
0x2c5: V155 = 0x20
0x2c7: V156 = ADD 0x20 0x20
0x2c8: V157 = 0x0
0x2ca: V158 = SHA3 0x0 0x40
0x2cb: V159 = 0x0
0x2cf: V160 = S[V158]
0x2d0: V161 = ADD V160 V145
0x2d6: S[V158] = V161
0x2d8: V162 = CALLER
0x2d9: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x2ef: V165 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x310: V166 = CALLVALUE
0x311: V167 = 0x40
0x313: V168 = M[0x40]
0x317: M[V168] = V166
0x318: V169 = 0x20
0x31a: V170 = ADD 0x20 V168
0x31e: V171 = 0x40
0x320: V172 = M[0x40]
0x323: V173 = SUB V170 V172
0x325: LOG V172 V173 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V164
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x326
[0x326:0x338]
---
Predecessors: [0x28b]
Successors: [0x339]
---
0x326 JUMPDEST
0x327 JUMP
0x328 JUMPDEST
0x329 PUSH1 0x0
0x32b PUSH2 0x253
0x32e PUSH2 0x44d
0x331 JUMP
0x332 JUMPDEST
0x333 DUP1
0x334 ISZERO
0x335 PUSH2 0x261
0x338 JUMPI
---
0x326: JUMPDEST 
0x327: JUMP S0
0x328: JUMPDEST 
0x329: V174 = 0x0
0x32b: V175 = 0x253
0x32e: V176 = 0x44d
0x331: THROW 
0x332: JUMPDEST 
0x334: V177 = ISZERO S0
0x335: V178 = 0x261
0x338: THROWI V177
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: []

================================

Block 0x339
[0x339:0x33f]
---
Predecessors: [0x326]
Successors: [0x340]
---
0x339 POP
0x33a PUSH1 0x3
0x33c SLOAD
0x33d TIMESTAMP
0x33e LT
0x33f ISZERO
---
0x33a: V179 = 0x3
0x33c: V180 = S[0x3]
0x33d: V181 = TIMESTAMP
0x33e: V182 = LT V181 V180
0x33f: V183 = ISZERO V182
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [V183]
Exit stack: [V183]

================================

Block 0x340
[0x340:0x345]
---
Predecessors: [0x339]
Successors: [0x346]
---
0x340 JUMPDEST
0x341 ISZERO
0x342 PUSH2 0x2ff
0x345 JUMPI
---
0x340: JUMPDEST 
0x341: V184 = ISZERO V183
0x342: V185 = 0x2ff
0x345: THROWI V184
---
Entry stack: [V183]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x346
[0x346:0x391]
---
Predecessors: [0x340]
Successors: [0x392]
---
0x346 PUSH1 0x2
0x348 PUSH1 0x0
0x34a CALLER
0x34b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x360 AND
0x361 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x376 AND
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x20
0x37b ADD
0x37c SWAP1
0x37d DUP2
0x37e MSTORE
0x37f PUSH1 0x20
0x381 ADD
0x382 PUSH1 0x0
0x384 SHA3
0x385 SLOAD
0x386 SWAP1
0x387 POP
0x388 DUP1
0x389 DUP3
0x38a GT
0x38b ISZERO
0x38c DUP1
0x38d ISZERO
0x38e PUSH2 0x2b8
0x391 JUMPI
---
0x346: V186 = 0x2
0x348: V187 = 0x0
0x34a: V188 = CALLER
0x34b: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x360: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x361: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x376: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x378: M[0x0] = V192
0x379: V193 = 0x20
0x37b: V194 = ADD 0x20 0x0
0x37e: M[0x20] = 0x2
0x37f: V195 = 0x20
0x381: V196 = ADD 0x20 0x20
0x382: V197 = 0x0
0x384: V198 = SHA3 0x0 0x40
0x385: V199 = S[V198]
0x38a: V200 = GT S1 V199
0x38b: V201 = ISZERO V200
0x38d: V202 = ISZERO V201
0x38e: V203 = 0x2b8
0x391: THROWI V202
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, V199, V201]
Exit stack: [S1, V199, V201]

================================

Block 0x392
[0x392:0x396]
---
Predecessors: [0x346]
Successors: [0x397]
---
0x392 POP
0x393 PUSH1 0x0
0x395 DUP2
0x396 GT
---
0x393: V204 = 0x0
0x396: V205 = GT V199 0x0
---
Entry stack: [S2, V199, V201]
Stack pops: 2
Stack additions: [S1, V205]
Exit stack: [S2, V199, V205]

================================

Block 0x397
[0x397:0x39c]
---
Predecessors: [0x392]
Successors: [0x39d]
---
0x397 JUMPDEST
0x398 ISZERO
0x399 PUSH2 0x2fe
0x39c JUMPI
---
0x397: JUMPDEST 
0x398: V206 = ISZERO V205
0x399: V207 = 0x2fe
0x39c: THROWI V206
---
Entry stack: [S2, V199, V205]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V199]

================================

Block 0x39d
[0x39d:0x3d7]
---
Predecessors: [0x397]
Successors: [0x3d8]
---
0x39d CALLER
0x39e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b3 AND
0x3b4 PUSH2 0x8fc
0x3b7 DUP4
0x3b8 SWAP1
0x3b9 DUP2
0x3ba ISZERO
0x3bb MUL
0x3bc SWAP1
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 PUSH1 0x0
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 DUP4
0x3c7 SUB
0x3c8 DUP2
0x3c9 DUP6
0x3ca DUP9
0x3cb DUP9
0x3cc CALL
0x3cd SWAP4
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 ISZERO
0x3d3 ISZERO
0x3d4 PUSH2 0x2fd
0x3d7 JUMPI
---
0x39d: V208 = CALLER
0x39e: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b3: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x3b4: V211 = 0x8fc
0x3ba: V212 = ISZERO S1
0x3bb: V213 = MUL V212 0x8fc
0x3bd: V214 = 0x40
0x3bf: V215 = M[0x40]
0x3c0: V216 = 0x0
0x3c2: V217 = 0x40
0x3c4: V218 = M[0x40]
0x3c7: V219 = SUB V215 V218
0x3cc: V220 = CALL V213 V210 S1 V218 V219 V218 0x0
0x3d2: V221 = ISZERO V220
0x3d3: V222 = ISZERO V221
0x3d4: V223 = 0x2fd
0x3d7: THROWI V222
---
Entry stack: [S1, V199]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, V199]

================================

Block 0x3d8
[0x3d8:0x3dc]
---
Predecessors: [0x39d]
Successors: [0x3dd]
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
0x3dc JUMPDEST
---
0x3d8: V224 = 0x0
0x3db: REVERT 0x0 0x0
0x3dc: JUMPDEST 
---
Entry stack: [S1, V199]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3dd
[0x3dd:0x3dd]
---
Predecessors: [0x3d8]
Successors: [0x3de]
---
0x3dd JUMPDEST
---
0x3dd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3de
[0x3de:0x3f0]
---
Predecessors: [0x3dd]
Successors: [0x3f1]
---
0x3de JUMPDEST
0x3df POP
0x3e0 POP
0x3e1 JUMP
0x3e2 JUMPDEST
0x3e3 PUSH2 0x30b
0x3e6 PUSH2 0x44d
0x3e9 JUMP
0x3ea JUMPDEST
0x3eb DUP1
0x3ec ISZERO
0x3ed PUSH2 0x32e
0x3f0 JUMPI
---
0x3de: JUMPDEST 
0x3e1: JUMP S2
0x3e2: JUMPDEST 
0x3e3: V225 = 0x30b
0x3e6: V226 = 0x44d
0x3e9: THROW 
0x3ea: JUMPDEST 
0x3ec: V227 = ISZERO S0
0x3ed: V228 = 0x32e
0x3f0: THROWI V227
---
Entry stack: []
Stack pops: 11
Stack additions: [S0]
Exit stack: []

================================

Block 0x3f1
[0x3f1:0x40c]
---
Predecessors: [0x3de]
Successors: [0x40d]
---
0x3f1 POP
0x3f2 PUSH1 0x0
0x3f4 ADDRESS
0x3f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40a AND
0x40b BALANCE
0x40c EQ
---
0x3f2: V229 = 0x0
0x3f4: V230 = ADDRESS
0x3f5: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x40a: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x40b: V233 = BALANCE V232
0x40c: V234 = EQ V233 0x0
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [V234]
Exit stack: [V234]

================================

Block 0x40d
[0x40d:0x412]
---
Predecessors: [0x3f1]
Successors: [0x413]
---
0x40d JUMPDEST
0x40e ISZERO
0x40f PUSH2 0x34c
0x412 JUMPI
---
0x40d: JUMPDEST 
0x40e: V235 = ISZERO V234
0x40f: V236 = 0x34c
0x412: THROWI V235
---
Entry stack: [V234]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x413
[0x413:0x5b7]
---
Predecessors: [0x40d]
Successors: []
---
0x413 CALLER
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a SELFDESTRUCT
0x42b JUMPDEST
0x42c JUMP
0x42d JUMPDEST
0x42e PUSH1 0x1
0x430 PUSH1 0x0
0x432 SWAP1
0x433 SLOAD
0x434 SWAP1
0x435 PUSH2 0x100
0x438 EXP
0x439 SWAP1
0x43a DIV
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 DUP2
0x452 JUMP
0x453 JUMPDEST
0x454 CALLER
0x455 PUSH1 0x1
0x457 PUSH1 0x0
0x459 PUSH2 0x100
0x45c EXP
0x45d DUP2
0x45e SLOAD
0x45f DUP2
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 MUL
0x476 NOT
0x477 AND
0x478 SWAP1
0x479 DUP4
0x47a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48f AND
0x490 MUL
0x491 OR
0x492 SWAP1
0x493 SSTORE
0x494 POP
0x495 DUP1
0x496 PUSH1 0x3
0x498 DUP2
0x499 SWAP1
0x49a SSTORE
0x49b POP
0x49c PUSH1 0x1
0x49e PUSH1 0x0
0x4a0 SWAP1
0x4a1 SLOAD
0x4a2 SWAP1
0x4a3 PUSH2 0x100
0x4a6 EXP
0x4a7 SWAP1
0x4a8 DIV
0x4a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4be AND
0x4bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d4 AND
0x4d5 PUSH32 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x4f6 DUP3
0x4f7 PUSH1 0x40
0x4f9 MLOAD
0x4fa DUP1
0x4fb DUP3
0x4fc DUP2
0x4fd MSTORE
0x4fe PUSH1 0x20
0x500 ADD
0x501 SWAP2
0x502 POP
0x503 POP
0x504 PUSH1 0x40
0x506 MLOAD
0x507 DUP1
0x508 SWAP2
0x509 SUB
0x50a SWAP1
0x50b LOG2
0x50c POP
0x50d JUMP
0x50e JUMPDEST
0x50f PUSH1 0x3
0x511 SLOAD
0x512 DUP2
0x513 JUMP
0x514 JUMPDEST
0x515 PUSH1 0x2
0x517 PUSH1 0x20
0x519 MSTORE
0x51a DUP1
0x51b PUSH1 0x0
0x51d MSTORE
0x51e PUSH1 0x40
0x520 PUSH1 0x0
0x522 SHA3
0x523 PUSH1 0x0
0x525 SWAP2
0x526 POP
0x527 SWAP1
0x528 POP
0x529 SLOAD
0x52a DUP2
0x52b JUMP
0x52c JUMPDEST
0x52d PUSH1 0x0
0x52f CALLER
0x530 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x545 AND
0x546 PUSH1 0x0
0x548 DUP1
0x549 SWAP1
0x54a SLOAD
0x54b SWAP1
0x54c PUSH2 0x100
0x54f EXP
0x550 SWAP1
0x551 DIV
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 AND
0x568 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57d AND
0x57e EQ
0x57f SWAP1
0x580 POP
0x581 SWAP1
0x582 JUMP
0x583 STOP
0x584 LOG1
0x585 PUSH6 0x627a7a723058
0x58c SHA3
0x58d MISSING 0xab
0x58e PUSH13 0xd4b392a083f65556163f3c74ea
0x59c PUSH27 0xda10cfb865220a0c8abc8d0941a0a7880029
---
0x413: V237 = CALLER
0x414: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x42a: SELFDESTRUCT V239
0x42b: JUMPDEST 
0x42c: JUMP S0
0x42d: JUMPDEST 
0x42e: V240 = 0x1
0x430: V241 = 0x0
0x433: V242 = S[0x1]
0x435: V243 = 0x100
0x438: V244 = EXP 0x100 0x0
0x43a: V245 = DIV V242 0x1
0x43b: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x452: JUMP S0
0x453: JUMPDEST 
0x454: V248 = CALLER
0x455: V249 = 0x1
0x457: V250 = 0x0
0x459: V251 = 0x100
0x45c: V252 = EXP 0x100 0x0
0x45e: V253 = S[0x1]
0x460: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V255 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x476: V256 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x477: V257 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V253
0x47a: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x490: V260 = MUL V259 0x1
0x491: V261 = OR V260 V257
0x493: S[0x1] = V261
0x496: V262 = 0x3
0x49a: S[0x3] = S0
0x49c: V263 = 0x1
0x49e: V264 = 0x0
0x4a1: V265 = S[0x1]
0x4a3: V266 = 0x100
0x4a6: V267 = EXP 0x100 0x0
0x4a8: V268 = DIV V265 0x1
0x4a9: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x4bf: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x4d5: V273 = 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x4f7: V274 = 0x40
0x4f9: V275 = M[0x40]
0x4fd: M[V275] = S0
0x4fe: V276 = 0x20
0x500: V277 = ADD 0x20 V275
0x504: V278 = 0x40
0x506: V279 = M[0x40]
0x509: V280 = SUB V277 V279
0x50b: LOG V279 V280 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79 V272
0x50d: JUMP S1
0x50e: JUMPDEST 
0x50f: V281 = 0x3
0x511: V282 = S[0x3]
0x513: JUMP S0
0x514: JUMPDEST 
0x515: V283 = 0x2
0x517: V284 = 0x20
0x519: M[0x20] = 0x2
0x51b: V285 = 0x0
0x51d: M[0x0] = S0
0x51e: V286 = 0x40
0x520: V287 = 0x0
0x522: V288 = SHA3 0x0 0x40
0x523: V289 = 0x0
0x529: V290 = S[V288]
0x52b: JUMP S1
0x52c: JUMPDEST 
0x52d: V291 = 0x0
0x52f: V292 = CALLER
0x530: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x545: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x546: V295 = 0x0
0x54a: V296 = S[0x0]
0x54c: V297 = 0x100
0x54f: V298 = EXP 0x100 0x0
0x551: V299 = DIV V296 0x1
0x552: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x568: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x57d: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x57e: V304 = EQ V303 V294
0x582: JUMP S0
0x583: STOP 
0x584: LOG S0 S1 S2
0x585: V305 = 0x627a7a723058
0x58c: V306 = SHA3 0x627a7a723058 S3
0x58d: MISSING 0xab
0x58e: V307 = 0xd4b392a083f65556163f3c74ea
0x59c: V308 = 0xda10cfb865220a0c8abc8d0941a0a7880029
---
Entry stack: []
Stack pops: 0
Stack additions: [V247, S0, V282, S0, V290, S1, V304, V306, 0xda10cfb865220a0c8abc8d0941a0a7880029, 0xd4b392a083f65556163f3c74ea]
Exit stack: []

================================

Function 0:
Public function signature: 0xb4a99a4e
Entry block: 0x3c
Exit block: 0x4c
Body: 0x3c, 0x42, 0x46, 0x4c, 0x8e

Function 1:
Public fallback function
Entry block: 0x38
Exit block: 0x38
Body: 0x38

