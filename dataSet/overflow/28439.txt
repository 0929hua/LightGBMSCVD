Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x95ea7b3
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x95ea7b3
0x3c: V13 = EQ 0x95ea7b3 V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd7]
---
0x41 DUP1
0x42 PUSH4 0x18160ddd
0x47 EQ
0x48 PUSH2 0xd7
0x4b JUMPI
---
0x42: V15 = 0x18160ddd
0x47: V16 = EQ 0x18160ddd V11
0x48: V17 = 0xd7
0x4b: JUMPI 0xd7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x100]
---
0x4c DUP1
0x4d PUSH4 0x23b872dd
0x52 EQ
0x53 PUSH2 0x100
0x56 JUMPI
---
0x4d: V18 = 0x23b872dd
0x52: V19 = EQ 0x23b872dd V11
0x53: V20 = 0x100
0x56: JUMPI 0x100 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x179]
---
0x57 DUP1
0x58 PUSH4 0x70a08231
0x5d EQ
0x5e PUSH2 0x179
0x61 JUMPI
---
0x58: V21 = 0x70a08231
0x5d: V22 = EQ 0x70a08231 V11
0x5e: V23 = 0x179
0x61: JUMPI 0x179 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1c6]
---
0x62 DUP1
0x63 PUSH4 0xa9059cbb
0x68 EQ
0x69 PUSH2 0x1c6
0x6c JUMPI
---
0x63: V24 = 0xa9059cbb
0x68: V25 = EQ 0xa9059cbb V11
0x69: V26 = 0x1c6
0x6c: JUMPI 0x1c6 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x220]
---
0x6d DUP1
0x6e PUSH4 0xdd62ed3e
0x73 EQ
0x74 PUSH2 0x220
0x77 JUMPI
---
0x6e: V27 = 0xdd62ed3e
0x73: V28 = EQ 0xdd62ed3e V11
0x74: V29 = 0x220
0x77: JUMPI 0x220 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0xbc]
---
Predecessors: [0x7d]
Successors: [0x28c]
---
0x88 JUMPDEST
0x89 PUSH2 0xbd
0x8c PUSH1 0x4
0x8e DUP1
0x8f DUP1
0x90 CALLDATALOAD
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP2
0xad SWAP1
0xae DUP1
0xaf CALLDATALOAD
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 SWAP2
0xb6 SWAP1
0xb7 POP
0xb8 POP
0xb9 PUSH2 0x28c
0xbc JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0xbd
0x8c: V36 = 0x4
0x90: V37 = CALLDATALOAD 0x4
0x91: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xa8: V40 = 0x20
0xaa: V41 = ADD 0x20 0x4
0xaf: V42 = CALLDATALOAD 0x24
0xb1: V43 = 0x20
0xb3: V44 = ADD 0x20 0x24
0xb9: V45 = 0x28c
0xbc: JUMP 0x28c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbd, V39, V42]
Exit stack: [V11, 0xbd, V39, V42]

================================

Block 0xbd
[0xbd:0xd6]
---
Predecessors: [0x28c]
Successors: []
---
0xbd JUMPDEST
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 DUP1
0xc2 DUP3
0xc3 ISZERO
0xc4 ISZERO
0xc5 ISZERO
0xc6 ISZERO
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc SWAP2
0xcd POP
0xce POP
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 RETURN
---
0xbd: JUMPDEST 
0xbe: V46 = 0x40
0xc0: V47 = M[0x40]
0xc3: V48 = ISZERO 0x1
0xc4: V49 = ISZERO 0x0
0xc5: V50 = ISZERO 0x1
0xc6: V51 = ISZERO 0x0
0xc8: M[V47] = 0x1
0xc9: V52 = 0x20
0xcb: V53 = ADD 0x20 V47
0xcf: V54 = 0x40
0xd1: V55 = M[0x40]
0xd4: V56 = SUB V53 V55
0xd6: RETURN V55 V56
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x41]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V57 = CALLVALUE
0xd9: V58 = ISZERO V57
0xda: V59 = 0xe2
0xdd: JUMPI 0xe2 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V60 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0xd7, 0x950]
Successors: [0x37e]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xea
0xe6 PUSH2 0x37e
0xe9 JUMP
---
0xe2: JUMPDEST 
0xe3: V61 = 0xea
0xe6: V62 = 0x37e
0xe9: JUMP 0x37e
---
Entry stack: [S9, V505, V505, V511, V514, V512, V512, V511, V514, S0]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [S9, V505, V505, V511, V514, V512, V512, V511, V514, S0, 0xea]

================================

Block 0xea
[0xea:0xff]
---
Predecessors: [0x37e]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP2
0xf6 POP
0xf7 POP
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc SWAP2
0xfd SUB
0xfe SWAP1
0xff RETURN
---
0xea: JUMPDEST 
0xeb: V63 = 0x40
0xed: V64 = M[0x40]
0xf1: M[V64] = V210
0xf2: V65 = 0x20
0xf4: V66 = ADD 0x20 V64
0xf8: V67 = 0x40
0xfa: V68 = M[0x40]
0xfd: V69 = SUB V66 V68
0xff: RETURN V68 V69
---
Entry stack: [S11, V505, V505, V511, V514, V512, V512, V511, V514, S2, 0xea, V210]
Stack pops: 1
Stack additions: []
Exit stack: [S11, V505, V505, V511, V514, V512, V512, V511, V514, S2, 0xea]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x4c]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V70 = CALLVALUE
0x102: V71 = ISZERO V70
0x103: V72 = 0x10b
0x106: JUMPI 0x10b V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V73 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x15e]
---
Predecessors: [0x100]
Successors: [0x384]
---
0x10b JUMPDEST
0x10c PUSH2 0x15f
0x10f PUSH1 0x4
0x111 DUP1
0x112 DUP1
0x113 CALLDATALOAD
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 AND
0x12a SWAP1
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP1
0x12f SWAP2
0x130 SWAP1
0x131 DUP1
0x132 CALLDATALOAD
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 SWAP1
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP1
0x14e SWAP2
0x14f SWAP1
0x150 DUP1
0x151 CALLDATALOAD
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 SWAP2
0x158 SWAP1
0x159 POP
0x15a POP
0x15b PUSH2 0x384
0x15e JUMP
---
0x10b: JUMPDEST 
0x10c: V74 = 0x15f
0x10f: V75 = 0x4
0x113: V76 = CALLDATALOAD 0x4
0x114: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x12b: V79 = 0x20
0x12d: V80 = ADD 0x20 0x4
0x132: V81 = CALLDATALOAD 0x24
0x133: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x14a: V84 = 0x20
0x14c: V85 = ADD 0x20 0x24
0x151: V86 = CALLDATALOAD 0x44
0x153: V87 = 0x20
0x155: V88 = ADD 0x20 0x44
0x15b: V89 = 0x384
0x15e: JUMP 0x384
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15f, V78, V83, V86]
Exit stack: [V11, 0x15f, V78, V83, V86]

================================

Block 0x15f
[0x15f:0x178]
---
Predecessors: [0x5f9]
Successors: []
---
0x15f JUMPDEST
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 DUP3
0x165 ISZERO
0x166 ISZERO
0x167 ISZERO
0x168 ISZERO
0x169 DUP2
0x16a MSTORE
0x16b PUSH1 0x20
0x16d ADD
0x16e SWAP2
0x16f POP
0x170 POP
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 SWAP2
0x176 SUB
0x177 SWAP1
0x178 RETURN
---
0x15f: JUMPDEST 
0x160: V90 = 0x40
0x162: V91 = M[0x40]
0x165: V92 = ISZERO {0x0, 0x1}
0x166: V93 = ISZERO V92
0x167: V94 = ISZERO V93
0x168: V95 = ISZERO V94
0x16a: M[V91] = V95
0x16b: V96 = 0x20
0x16d: V97 = ADD 0x20 V91
0x171: V98 = 0x40
0x173: V99 = M[0x40]
0x176: V100 = SUB V97 V99
0x178: RETURN V99 V100
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x57]
Successors: [0x180, 0x184]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x179: JUMPDEST 
0x17a: V101 = CALLVALUE
0x17b: V102 = ISZERO V101
0x17c: V103 = 0x184
0x17f: JUMPI 0x184 V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V104 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x184
[0x184:0x1af]
---
Predecessors: [0x179]
Successors: [0x600]
---
0x184 JUMPDEST
0x185 PUSH2 0x1b0
0x188 PUSH1 0x4
0x18a DUP1
0x18b DUP1
0x18c CALLDATALOAD
0x18d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a2 AND
0x1a3 SWAP1
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 SWAP1
0x1a8 SWAP2
0x1a9 SWAP1
0x1aa POP
0x1ab POP
0x1ac PUSH2 0x600
0x1af JUMP
---
0x184: JUMPDEST 
0x185: V105 = 0x1b0
0x188: V106 = 0x4
0x18c: V107 = CALLDATALOAD 0x4
0x18d: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1a4: V110 = 0x20
0x1a6: V111 = ADD 0x20 0x4
0x1ac: V112 = 0x600
0x1af: JUMP 0x600
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1b0, V109]
Exit stack: [V11, 0x1b0, V109]

================================

Block 0x1b0
[0x1b0:0x1c5]
---
Predecessors: [0x600]
Successors: []
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 DUP3
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP2
0x1bc POP
0x1bd POP
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 RETURN
---
0x1b0: JUMPDEST 
0x1b1: V113 = 0x40
0x1b3: V114 = M[0x40]
0x1b7: M[V114] = V347
0x1b8: V115 = 0x20
0x1ba: V116 = ADD 0x20 V114
0x1be: V117 = 0x40
0x1c0: V118 = M[0x40]
0x1c3: V119 = SUB V116 V118
0x1c5: RETURN V118 V119
---
Entry stack: [V11, V347]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c6
[0x1c6:0x1cc]
---
Predecessors: [0x62, 0x9fe]
Successors: [0x1cd, 0x1d1]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V120 = CALLVALUE
0x1c8: V121 = ISZERO V120
0x1c9: V122 = 0x1d1
0x1cc: JUMPI 0x1d1 V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c6]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V123 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d1
[0x1d1:0x205]
---
Predecessors: [0x1c6]
Successors: [0x649]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0x206
0x1d5 PUSH1 0x4
0x1d7 DUP1
0x1d8 DUP1
0x1d9 CALLDATALOAD
0x1da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ef AND
0x1f0 SWAP1
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 SWAP1
0x1f5 SWAP2
0x1f6 SWAP1
0x1f7 DUP1
0x1f8 CALLDATALOAD
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe SWAP2
0x1ff SWAP1
0x200 POP
0x201 POP
0x202 PUSH2 0x649
0x205 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V124 = 0x206
0x1d5: V125 = 0x4
0x1d9: V126 = CALLDATALOAD 0x4
0x1da: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1f1: V129 = 0x20
0x1f3: V130 = ADD 0x20 0x4
0x1f8: V131 = CALLDATALOAD 0x24
0x1fa: V132 = 0x20
0x1fc: V133 = ADD 0x20 0x24
0x202: V134 = 0x649
0x205: JUMP 0x649
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x206, V128, V131]
Exit stack: [V11, 0x206, V128, V131]

================================

Block 0x206
[0x206:0x21f]
---
Predecessors: [0x7ac]
Successors: []
---
0x206 JUMPDEST
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b DUP3
0x20c ISZERO
0x20d ISZERO
0x20e ISZERO
0x20f ISZERO
0x210 DUP2
0x211 MSTORE
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP2
0x216 POP
0x217 POP
0x218 PUSH1 0x40
0x21a MLOAD
0x21b DUP1
0x21c SWAP2
0x21d SUB
0x21e SWAP1
0x21f RETURN
---
0x206: JUMPDEST 
0x207: V135 = 0x40
0x209: V136 = M[0x40]
0x20c: V137 = ISZERO {0x0, 0x1}
0x20d: V138 = ISZERO V137
0x20e: V139 = ISZERO V138
0x20f: V140 = ISZERO V139
0x211: M[V136] = V140
0x212: V141 = 0x20
0x214: V142 = ADD 0x20 V136
0x218: V143 = 0x40
0x21a: V144 = M[0x40]
0x21d: V145 = SUB V142 V144
0x21f: RETURN V144 V145
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x220
[0x220:0x226]
---
Predecessors: [0x6d]
Successors: [0x227, 0x22b]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x220: JUMPDEST 
0x221: V146 = CALLVALUE
0x222: V147 = ISZERO V146
0x223: V148 = 0x22b
0x226: JUMPI 0x22b V147
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x220]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V149 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22b
[0x22b:0x275]
---
Predecessors: [0x220]
Successors: [0x7b2]
---
0x22b JUMPDEST
0x22c PUSH2 0x276
0x22f PUSH1 0x4
0x231 DUP1
0x232 DUP1
0x233 CALLDATALOAD
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a SWAP1
0x24b PUSH1 0x20
0x24d ADD
0x24e SWAP1
0x24f SWAP2
0x250 SWAP1
0x251 DUP1
0x252 CALLDATALOAD
0x253 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x268 AND
0x269 SWAP1
0x26a PUSH1 0x20
0x26c ADD
0x26d SWAP1
0x26e SWAP2
0x26f SWAP1
0x270 POP
0x271 POP
0x272 PUSH2 0x7b2
0x275 JUMP
---
0x22b: JUMPDEST 
0x22c: V150 = 0x276
0x22f: V151 = 0x4
0x233: V152 = CALLDATALOAD 0x4
0x234: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x24b: V155 = 0x20
0x24d: V156 = ADD 0x20 0x4
0x252: V157 = CALLDATALOAD 0x24
0x253: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x268: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x26a: V160 = 0x20
0x26c: V161 = ADD 0x20 0x24
0x272: V162 = 0x7b2
0x275: JUMP 0x7b2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x276, V154, V159]
Exit stack: [V11, 0x276, V154, V159]

================================

Block 0x276
[0x276:0x28b]
---
Predecessors: [0x7b2]
Successors: []
---
0x276 JUMPDEST
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b DUP3
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x20
0x280 ADD
0x281 SWAP2
0x282 POP
0x283 POP
0x284 PUSH1 0x40
0x286 MLOAD
0x287 DUP1
0x288 SWAP2
0x289 SUB
0x28a SWAP1
0x28b RETURN
---
0x276: JUMPDEST 
0x277: V163 = 0x40
0x279: V164 = M[0x40]
0x27d: M[V164] = V442
0x27e: V165 = 0x20
0x280: V166 = ADD 0x20 V164
0x284: V167 = 0x40
0x286: V168 = M[0x40]
0x289: V169 = SUB V166 V168
0x28b: RETURN V168 V169
---
Entry stack: [V11, V442]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x28c
[0x28c:0x37d]
---
Predecessors: [0x88]
Successors: [0xbd]
---
0x28c JUMPDEST
0x28d PUSH1 0x0
0x28f DUP2
0x290 PUSH1 0x2
0x292 PUSH1 0x0
0x294 CALLER
0x295 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2aa AND
0x2ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c0 AND
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP1
0x2c7 DUP2
0x2c8 MSTORE
0x2c9 PUSH1 0x20
0x2cb ADD
0x2cc PUSH1 0x0
0x2ce SHA3
0x2cf PUSH1 0x0
0x2d1 DUP6
0x2d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e7 AND
0x2e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fd AND
0x2fe DUP2
0x2ff MSTORE
0x300 PUSH1 0x20
0x302 ADD
0x303 SWAP1
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x20
0x308 ADD
0x309 PUSH1 0x0
0x30b SHA3
0x30c DUP2
0x30d SWAP1
0x30e SSTORE
0x30f POP
0x310 DUP3
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 CALLER
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d AND
0x33e PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x35f DUP5
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 DUP3
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x20
0x369 ADD
0x36a SWAP2
0x36b POP
0x36c POP
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 SWAP2
0x372 SUB
0x373 SWAP1
0x374 LOG3
0x375 PUSH1 0x1
0x377 SWAP1
0x378 POP
0x379 SWAP3
0x37a SWAP2
0x37b POP
0x37c POP
0x37d JUMP
---
0x28c: JUMPDEST 
0x28d: V170 = 0x0
0x290: V171 = 0x2
0x292: V172 = 0x0
0x294: V173 = CALLER
0x295: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2ab: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c0: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2c2: M[0x0] = V177
0x2c3: V178 = 0x20
0x2c5: V179 = ADD 0x20 0x0
0x2c8: M[0x20] = 0x2
0x2c9: V180 = 0x20
0x2cb: V181 = ADD 0x20 0x20
0x2cc: V182 = 0x0
0x2ce: V183 = SHA3 0x0 0x40
0x2cf: V184 = 0x0
0x2d2: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x2e8: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2ff: M[0x0] = V188
0x300: V189 = 0x20
0x302: V190 = ADD 0x20 0x0
0x305: M[0x20] = V183
0x306: V191 = 0x20
0x308: V192 = ADD 0x20 0x20
0x309: V193 = 0x0
0x30b: V194 = SHA3 0x0 0x40
0x30e: S[V194] = V42
0x311: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x327: V197 = CALLER
0x328: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x33e: V200 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x360: V201 = 0x40
0x362: V202 = M[0x40]
0x366: M[V202] = V42
0x367: V203 = 0x20
0x369: V204 = ADD 0x20 V202
0x36d: V205 = 0x40
0x36f: V206 = M[0x40]
0x372: V207 = SUB V204 V206
0x374: LOG V206 V207 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V199 V196
0x375: V208 = 0x1
0x37d: JUMP 0xbd
---
Entry stack: [V11, 0xbd, V39, V42]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x37e
[0x37e:0x383]
---
Predecessors: [0xe2]
Successors: [0xea]
---
0x37e JUMPDEST
0x37f PUSH1 0x0
0x381 SLOAD
0x382 DUP2
0x383 JUMP
---
0x37e: JUMPDEST 
0x37f: V209 = 0x0
0x381: V210 = S[0x0]
0x383: JUMP 0xea
---
Entry stack: [S10, V505, V505, V511, V514, V512, V512, V511, V514, S1, 0xea]
Stack pops: 1
Stack additions: [S0, V210]
Exit stack: [S10, V505, V505, V511, V514, V512, V512, V511, V514, S1, 0xea, V210]

================================

Block 0x384
[0x384:0x3cf]
---
Predecessors: [0x10b]
Successors: [0x3d0, 0x451]
---
0x384 JUMPDEST
0x385 PUSH1 0x0
0x387 DUP2
0x388 PUSH1 0x1
0x38a PUSH1 0x0
0x38c DUP7
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b8 AND
0x3b9 DUP2
0x3ba MSTORE
0x3bb PUSH1 0x20
0x3bd ADD
0x3be SWAP1
0x3bf DUP2
0x3c0 MSTORE
0x3c1 PUSH1 0x20
0x3c3 ADD
0x3c4 PUSH1 0x0
0x3c6 SHA3
0x3c7 SLOAD
0x3c8 LT
0x3c9 ISZERO
0x3ca DUP1
0x3cb ISZERO
0x3cc PUSH2 0x451
0x3cf JUMPI
---
0x384: JUMPDEST 
0x385: V211 = 0x0
0x388: V212 = 0x1
0x38a: V213 = 0x0
0x38d: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x3a3: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b8: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3ba: M[0x0] = V217
0x3bb: V218 = 0x20
0x3bd: V219 = ADD 0x20 0x0
0x3c0: M[0x20] = 0x1
0x3c1: V220 = 0x20
0x3c3: V221 = ADD 0x20 0x20
0x3c4: V222 = 0x0
0x3c6: V223 = SHA3 0x0 0x40
0x3c7: V224 = S[V223]
0x3c8: V225 = LT V224 V86
0x3c9: V226 = ISZERO V225
0x3cb: V227 = ISZERO V226
0x3cc: V228 = 0x451
0x3cf: JUMPI 0x451 V227
---
Entry stack: [V11, 0x15f, V78, V83, V86]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V226]
Exit stack: [V11, 0x15f, V78, V83, V86, 0x0, V226]

================================

Block 0x3d0
[0x3d0:0x450]
---
Predecessors: [0x384]
Successors: [0x451]
---
0x3d0 POP
0x3d1 DUP2
0x3d2 PUSH1 0x2
0x3d4 PUSH1 0x0
0x3d6 DUP7
0x3d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ec AND
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 SWAP1
0x409 DUP2
0x40a MSTORE
0x40b PUSH1 0x20
0x40d ADD
0x40e PUSH1 0x0
0x410 SHA3
0x411 PUSH1 0x0
0x413 CALLER
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43f AND
0x440 DUP2
0x441 MSTORE
0x442 PUSH1 0x20
0x444 ADD
0x445 SWAP1
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b PUSH1 0x0
0x44d SHA3
0x44e SLOAD
0x44f LT
0x450 ISZERO
---
0x3d2: V229 = 0x2
0x3d4: V230 = 0x0
0x3d7: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x3ed: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x404: M[0x0] = V234
0x405: V235 = 0x20
0x407: V236 = ADD 0x20 0x0
0x40a: M[0x20] = 0x2
0x40b: V237 = 0x20
0x40d: V238 = ADD 0x20 0x20
0x40e: V239 = 0x0
0x410: V240 = SHA3 0x0 0x40
0x411: V241 = 0x0
0x413: V242 = CALLER
0x414: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x42a: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x441: M[0x0] = V246
0x442: V247 = 0x20
0x444: V248 = ADD 0x20 0x0
0x447: M[0x20] = V240
0x448: V249 = 0x20
0x44a: V250 = ADD 0x20 0x20
0x44b: V251 = 0x0
0x44d: V252 = SHA3 0x0 0x40
0x44e: V253 = S[V252]
0x44f: V254 = LT V253 V86
0x450: V255 = ISZERO V254
---
Entry stack: [V11, 0x15f, V78, V83, V86, 0x0, V226]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V255]
Exit stack: [V11, 0x15f, V78, V83, V86, 0x0, V255]

================================

Block 0x451
[0x451:0x457]
---
Predecessors: [0x384, 0x3d0]
Successors: [0x458, 0x45d]
---
0x451 JUMPDEST
0x452 DUP1
0x453 ISZERO
0x454 PUSH2 0x45d
0x457 JUMPI
---
0x451: JUMPDEST 
0x453: V256 = ISZERO S0
0x454: V257 = 0x45d
0x457: JUMPI 0x45d V256
---
Entry stack: [V11, 0x15f, V78, V83, V86, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x15f, V78, V83, V86, 0x0, S0]

================================

Block 0x458
[0x458:0x45c]
---
Predecessors: [0x451]
Successors: [0x45d]
---
0x458 POP
0x459 PUSH1 0x0
0x45b DUP3
0x45c GT
---
0x459: V258 = 0x0
0x45c: V259 = GT V86 0x0
---
Entry stack: [V11, 0x15f, V78, V83, V86, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V259]
Exit stack: [V11, 0x15f, V78, V83, V86, 0x0, V259]

================================

Block 0x45d
[0x45d:0x462]
---
Predecessors: [0x451, 0x458]
Successors: [0x463, 0x5f4]
---
0x45d JUMPDEST
0x45e ISZERO
0x45f PUSH2 0x5f4
0x462 JUMPI
---
0x45d: JUMPDEST 
0x45e: V260 = ISZERO S0
0x45f: V261 = 0x5f4
0x462: JUMPI 0x5f4 V260
---
Entry stack: [V11, 0x15f, V78, V83, V86, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15f, V78, V83, V86, 0x0]

================================

Block 0x463
[0x463:0x5f3]
---
Predecessors: [0x45d]
Successors: [0x5f9]
---
0x463 DUP2
0x464 PUSH1 0x1
0x466 PUSH1 0x0
0x468 DUP6
0x469 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47e AND
0x47f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x494 AND
0x495 DUP2
0x496 MSTORE
0x497 PUSH1 0x20
0x499 ADD
0x49a SWAP1
0x49b DUP2
0x49c MSTORE
0x49d PUSH1 0x20
0x49f ADD
0x4a0 PUSH1 0x0
0x4a2 SHA3
0x4a3 PUSH1 0x0
0x4a5 DUP3
0x4a6 DUP3
0x4a7 SLOAD
0x4a8 ADD
0x4a9 SWAP3
0x4aa POP
0x4ab POP
0x4ac DUP2
0x4ad SWAP1
0x4ae SSTORE
0x4af POP
0x4b0 DUP2
0x4b1 PUSH1 0x1
0x4b3 PUSH1 0x0
0x4b5 DUP7
0x4b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cb AND
0x4cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e1 AND
0x4e2 DUP2
0x4e3 MSTORE
0x4e4 PUSH1 0x20
0x4e6 ADD
0x4e7 SWAP1
0x4e8 DUP2
0x4e9 MSTORE
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed PUSH1 0x0
0x4ef SHA3
0x4f0 PUSH1 0x0
0x4f2 DUP3
0x4f3 DUP3
0x4f4 SLOAD
0x4f5 SUB
0x4f6 SWAP3
0x4f7 POP
0x4f8 POP
0x4f9 DUP2
0x4fa SWAP1
0x4fb SSTORE
0x4fc POP
0x4fd DUP2
0x4fe PUSH1 0x2
0x500 PUSH1 0x0
0x502 DUP7
0x503 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x518 AND
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f DUP2
0x530 MSTORE
0x531 PUSH1 0x20
0x533 ADD
0x534 SWAP1
0x535 DUP2
0x536 MSTORE
0x537 PUSH1 0x20
0x539 ADD
0x53a PUSH1 0x0
0x53c SHA3
0x53d PUSH1 0x0
0x53f CALLER
0x540 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x555 AND
0x556 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56b AND
0x56c DUP2
0x56d MSTORE
0x56e PUSH1 0x20
0x570 ADD
0x571 SWAP1
0x572 DUP2
0x573 MSTORE
0x574 PUSH1 0x20
0x576 ADD
0x577 PUSH1 0x0
0x579 SHA3
0x57a PUSH1 0x0
0x57c DUP3
0x57d DUP3
0x57e SLOAD
0x57f SUB
0x580 SWAP3
0x581 POP
0x582 POP
0x583 DUP2
0x584 SWAP1
0x585 SSTORE
0x586 POP
0x587 DUP3
0x588 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59d AND
0x59e DUP5
0x59f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b4 AND
0x5b5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5d6 DUP5
0x5d7 PUSH1 0x40
0x5d9 MLOAD
0x5da DUP1
0x5db DUP3
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 SWAP2
0x5e2 POP
0x5e3 POP
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 DUP1
0x5e8 SWAP2
0x5e9 SUB
0x5ea SWAP1
0x5eb LOG3
0x5ec PUSH1 0x1
0x5ee SWAP1
0x5ef POP
0x5f0 PUSH2 0x5f9
0x5f3 JUMP
---
0x464: V262 = 0x1
0x466: V263 = 0x0
0x469: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x47f: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x494: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x496: M[0x0] = V267
0x497: V268 = 0x20
0x499: V269 = ADD 0x20 0x0
0x49c: M[0x20] = 0x1
0x49d: V270 = 0x20
0x49f: V271 = ADD 0x20 0x20
0x4a0: V272 = 0x0
0x4a2: V273 = SHA3 0x0 0x40
0x4a3: V274 = 0x0
0x4a7: V275 = S[V273]
0x4a8: V276 = ADD V275 V86
0x4ae: S[V273] = V276
0x4b1: V277 = 0x1
0x4b3: V278 = 0x0
0x4b6: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cb: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x4cc: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x4e3: M[0x0] = V282
0x4e4: V283 = 0x20
0x4e6: V284 = ADD 0x20 0x0
0x4e9: M[0x20] = 0x1
0x4ea: V285 = 0x20
0x4ec: V286 = ADD 0x20 0x20
0x4ed: V287 = 0x0
0x4ef: V288 = SHA3 0x0 0x40
0x4f0: V289 = 0x0
0x4f4: V290 = S[V288]
0x4f5: V291 = SUB V290 V86
0x4fb: S[V288] = V291
0x4fe: V292 = 0x2
0x500: V293 = 0x0
0x503: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x518: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x519: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x530: M[0x0] = V297
0x531: V298 = 0x20
0x533: V299 = ADD 0x20 0x0
0x536: M[0x20] = 0x2
0x537: V300 = 0x20
0x539: V301 = ADD 0x20 0x20
0x53a: V302 = 0x0
0x53c: V303 = SHA3 0x0 0x40
0x53d: V304 = 0x0
0x53f: V305 = CALLER
0x540: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x555: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x556: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x56b: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x56d: M[0x0] = V309
0x56e: V310 = 0x20
0x570: V311 = ADD 0x20 0x0
0x573: M[0x20] = V303
0x574: V312 = 0x20
0x576: V313 = ADD 0x20 0x20
0x577: V314 = 0x0
0x579: V315 = SHA3 0x0 0x40
0x57a: V316 = 0x0
0x57e: V317 = S[V315]
0x57f: V318 = SUB V317 V86
0x585: S[V315] = V318
0x588: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x59d: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x59f: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b4: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x5b5: V323 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5d7: V324 = 0x40
0x5d9: V325 = M[0x40]
0x5dd: M[V325] = V86
0x5de: V326 = 0x20
0x5e0: V327 = ADD 0x20 V325
0x5e4: V328 = 0x40
0x5e6: V329 = M[0x40]
0x5e9: V330 = SUB V327 V329
0x5eb: LOG V329 V330 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V322 V320
0x5ec: V331 = 0x1
0x5f0: V332 = 0x5f9
0x5f3: JUMP 0x5f9
---
Entry stack: [V11, 0x15f, V78, V83, V86, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V11, 0x15f, V78, V83, V86, 0x1]

================================

Block 0x5f4
[0x5f4:0x5f8]
---
Predecessors: [0x45d]
Successors: [0x5f9]
---
0x5f4 JUMPDEST
0x5f5 PUSH1 0x0
0x5f7 SWAP1
0x5f8 POP
---
0x5f4: JUMPDEST 
0x5f5: V333 = 0x0
---
Entry stack: [V11, 0x15f, V78, V83, V86, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x15f, V78, V83, V86, 0x0]

================================

Block 0x5f9
[0x5f9:0x5ff]
---
Predecessors: [0x463, 0x5f4]
Successors: [0x15f]
---
0x5f9 JUMPDEST
0x5fa SWAP4
0x5fb SWAP3
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff JUMP
---
0x5f9: JUMPDEST 
0x5ff: JUMP 0x15f
---
Entry stack: [V11, 0x15f, V78, V83, V86, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x600
[0x600:0x648]
---
Predecessors: [0x184]
Successors: [0x1b0]
---
0x600 JUMPDEST
0x601 PUSH1 0x0
0x603 PUSH1 0x1
0x605 PUSH1 0x0
0x607 DUP4
0x608 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61d AND
0x61e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x633 AND
0x634 DUP2
0x635 MSTORE
0x636 PUSH1 0x20
0x638 ADD
0x639 SWAP1
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x20
0x63e ADD
0x63f PUSH1 0x0
0x641 SHA3
0x642 SLOAD
0x643 SWAP1
0x644 POP
0x645 SWAP2
0x646 SWAP1
0x647 POP
0x648 JUMP
---
0x600: JUMPDEST 
0x601: V334 = 0x0
0x603: V335 = 0x1
0x605: V336 = 0x0
0x608: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x61d: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x61e: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x633: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x635: M[0x0] = V340
0x636: V341 = 0x20
0x638: V342 = ADD 0x20 0x0
0x63b: M[0x20] = 0x1
0x63c: V343 = 0x20
0x63e: V344 = ADD 0x20 0x20
0x63f: V345 = 0x0
0x641: V346 = SHA3 0x0 0x40
0x642: V347 = S[V346]
0x648: JUMP 0x1b0
---
Entry stack: [V11, 0x1b0, V109]
Stack pops: 2
Stack additions: [V347]
Exit stack: [V11, V347]

================================

Block 0x649
[0x649:0x694]
---
Predecessors: [0x1d1]
Successors: [0x695, 0x69a]
---
0x649 JUMPDEST
0x64a PUSH1 0x0
0x64c DUP2
0x64d PUSH1 0x1
0x64f PUSH1 0x0
0x651 CALLER
0x652 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x667 AND
0x668 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67d AND
0x67e DUP2
0x67f MSTORE
0x680 PUSH1 0x20
0x682 ADD
0x683 SWAP1
0x684 DUP2
0x685 MSTORE
0x686 PUSH1 0x20
0x688 ADD
0x689 PUSH1 0x0
0x68b SHA3
0x68c SLOAD
0x68d LT
0x68e ISZERO
0x68f DUP1
0x690 ISZERO
0x691 PUSH2 0x69a
0x694 JUMPI
---
0x649: JUMPDEST 
0x64a: V348 = 0x0
0x64d: V349 = 0x1
0x64f: V350 = 0x0
0x651: V351 = CALLER
0x652: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x667: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x668: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x67d: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x67f: M[0x0] = V355
0x680: V356 = 0x20
0x682: V357 = ADD 0x20 0x0
0x685: M[0x20] = 0x1
0x686: V358 = 0x20
0x688: V359 = ADD 0x20 0x20
0x689: V360 = 0x0
0x68b: V361 = SHA3 0x0 0x40
0x68c: V362 = S[V361]
0x68d: V363 = LT V362 V131
0x68e: V364 = ISZERO V363
0x690: V365 = ISZERO V364
0x691: V366 = 0x69a
0x694: JUMPI 0x69a V365
---
Entry stack: [V11, 0x206, V128, V131]
Stack pops: 1
Stack additions: [S0, 0x0, V364]
Exit stack: [V11, 0x206, V128, V131, 0x0, V364]

================================

Block 0x695
[0x695:0x699]
---
Predecessors: [0x649]
Successors: [0x69a]
---
0x695 POP
0x696 PUSH1 0x0
0x698 DUP3
0x699 GT
---
0x696: V367 = 0x0
0x699: V368 = GT V131 0x0
---
Entry stack: [V11, 0x206, V128, V131, 0x0, V364]
Stack pops: 3
Stack additions: [S2, S1, V368]
Exit stack: [V11, 0x206, V128, V131, 0x0, V368]

================================

Block 0x69a
[0x69a:0x69f]
---
Predecessors: [0x649, 0x695]
Successors: [0x6a0, 0x7a7]
---
0x69a JUMPDEST
0x69b ISZERO
0x69c PUSH2 0x7a7
0x69f JUMPI
---
0x69a: JUMPDEST 
0x69b: V369 = ISZERO S0
0x69c: V370 = 0x7a7
0x69f: JUMPI 0x7a7 V369
---
Entry stack: [V11, 0x206, V128, V131, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x206, V128, V131, 0x0]

================================

Block 0x6a0
[0x6a0:0x7a6]
---
Predecessors: [0x69a]
Successors: [0x7ac]
---
0x6a0 DUP2
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0x0
0x6a5 CALLER
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d1 AND
0x6d2 DUP2
0x6d3 MSTORE
0x6d4 PUSH1 0x20
0x6d6 ADD
0x6d7 SWAP1
0x6d8 DUP2
0x6d9 MSTORE
0x6da PUSH1 0x20
0x6dc ADD
0x6dd PUSH1 0x0
0x6df SHA3
0x6e0 PUSH1 0x0
0x6e2 DUP3
0x6e3 DUP3
0x6e4 SLOAD
0x6e5 SUB
0x6e6 SWAP3
0x6e7 POP
0x6e8 POP
0x6e9 DUP2
0x6ea SWAP1
0x6eb SSTORE
0x6ec POP
0x6ed DUP2
0x6ee PUSH1 0x1
0x6f0 PUSH1 0x0
0x6f2 DUP6
0x6f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x708 AND
0x709 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71e AND
0x71f DUP2
0x720 MSTORE
0x721 PUSH1 0x20
0x723 ADD
0x724 SWAP1
0x725 DUP2
0x726 MSTORE
0x727 PUSH1 0x20
0x729 ADD
0x72a PUSH1 0x0
0x72c SHA3
0x72d PUSH1 0x0
0x72f DUP3
0x730 DUP3
0x731 SLOAD
0x732 ADD
0x733 SWAP3
0x734 POP
0x735 POP
0x736 DUP2
0x737 SWAP1
0x738 SSTORE
0x739 POP
0x73a DUP3
0x73b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x750 AND
0x751 CALLER
0x752 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x767 AND
0x768 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x789 DUP5
0x78a PUSH1 0x40
0x78c MLOAD
0x78d DUP1
0x78e DUP3
0x78f DUP2
0x790 MSTORE
0x791 PUSH1 0x20
0x793 ADD
0x794 SWAP2
0x795 POP
0x796 POP
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b SWAP2
0x79c SUB
0x79d SWAP1
0x79e LOG3
0x79f PUSH1 0x1
0x7a1 SWAP1
0x7a2 POP
0x7a3 PUSH2 0x7ac
0x7a6 JUMP
---
0x6a1: V371 = 0x1
0x6a3: V372 = 0x0
0x6a5: V373 = CALLER
0x6a6: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x6bc: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d1: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x6d3: M[0x0] = V377
0x6d4: V378 = 0x20
0x6d6: V379 = ADD 0x20 0x0
0x6d9: M[0x20] = 0x1
0x6da: V380 = 0x20
0x6dc: V381 = ADD 0x20 0x20
0x6dd: V382 = 0x0
0x6df: V383 = SHA3 0x0 0x40
0x6e0: V384 = 0x0
0x6e4: V385 = S[V383]
0x6e5: V386 = SUB V385 V131
0x6eb: S[V383] = V386
0x6ee: V387 = 0x1
0x6f0: V388 = 0x0
0x6f3: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x708: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x709: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x71e: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x720: M[0x0] = V392
0x721: V393 = 0x20
0x723: V394 = ADD 0x20 0x0
0x726: M[0x20] = 0x1
0x727: V395 = 0x20
0x729: V396 = ADD 0x20 0x20
0x72a: V397 = 0x0
0x72c: V398 = SHA3 0x0 0x40
0x72d: V399 = 0x0
0x731: V400 = S[V398]
0x732: V401 = ADD V400 V131
0x738: S[V398] = V401
0x73b: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x750: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x751: V404 = CALLER
0x752: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x767: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x768: V407 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x78a: V408 = 0x40
0x78c: V409 = M[0x40]
0x790: M[V409] = V131
0x791: V410 = 0x20
0x793: V411 = ADD 0x20 V409
0x797: V412 = 0x40
0x799: V413 = M[0x40]
0x79c: V414 = SUB V411 V413
0x79e: LOG V413 V414 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V406 V403
0x79f: V415 = 0x1
0x7a3: V416 = 0x7ac
0x7a6: JUMP 0x7ac
---
Entry stack: [V11, 0x206, V128, V131, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V11, 0x206, V128, V131, 0x1]

================================

Block 0x7a7
[0x7a7:0x7ab]
---
Predecessors: [0x69a]
Successors: [0x7ac]
---
0x7a7 JUMPDEST
0x7a8 PUSH1 0x0
0x7aa SWAP1
0x7ab POP
---
0x7a7: JUMPDEST 
0x7a8: V417 = 0x0
---
Entry stack: [V11, 0x206, V128, V131, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x206, V128, V131, 0x0]

================================

Block 0x7ac
[0x7ac:0x7b1]
---
Predecessors: [0x6a0, 0x7a7]
Successors: [0x206]
---
0x7ac JUMPDEST
0x7ad SWAP3
0x7ae SWAP2
0x7af POP
0x7b0 POP
0x7b1 JUMP
---
0x7ac: JUMPDEST 
0x7b1: JUMP 0x206
---
Entry stack: [V11, 0x206, V128, V131, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x7b2
[0x7b2:0x838]
---
Predecessors: [0x22b]
Successors: [0x276]
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x0
0x7b5 PUSH1 0x2
0x7b7 PUSH1 0x0
0x7b9 DUP5
0x7ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cf AND
0x7d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e5 AND
0x7e6 DUP2
0x7e7 MSTORE
0x7e8 PUSH1 0x20
0x7ea ADD
0x7eb SWAP1
0x7ec DUP2
0x7ed MSTORE
0x7ee PUSH1 0x20
0x7f0 ADD
0x7f1 PUSH1 0x0
0x7f3 SHA3
0x7f4 PUSH1 0x0
0x7f6 DUP4
0x7f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80c AND
0x80d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x822 AND
0x823 DUP2
0x824 MSTORE
0x825 PUSH1 0x20
0x827 ADD
0x828 SWAP1
0x829 DUP2
0x82a MSTORE
0x82b PUSH1 0x20
0x82d ADD
0x82e PUSH1 0x0
0x830 SHA3
0x831 SLOAD
0x832 SWAP1
0x833 POP
0x834 SWAP3
0x835 SWAP2
0x836 POP
0x837 POP
0x838 JUMP
---
0x7b2: JUMPDEST 
0x7b3: V418 = 0x0
0x7b5: V419 = 0x2
0x7b7: V420 = 0x0
0x7ba: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cf: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x7d0: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x7e7: M[0x0] = V424
0x7e8: V425 = 0x20
0x7ea: V426 = ADD 0x20 0x0
0x7ed: M[0x20] = 0x2
0x7ee: V427 = 0x20
0x7f0: V428 = ADD 0x20 0x20
0x7f1: V429 = 0x0
0x7f3: V430 = SHA3 0x0 0x40
0x7f4: V431 = 0x0
0x7f7: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x80c: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x80d: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x822: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x824: M[0x0] = V435
0x825: V436 = 0x20
0x827: V437 = ADD 0x20 0x0
0x82a: M[0x20] = V430
0x82b: V438 = 0x20
0x82d: V439 = ADD 0x20 0x20
0x82e: V440 = 0x0
0x830: V441 = SHA3 0x0 0x40
0x831: V442 = S[V441]
0x838: JUMP 0x276
---
Entry stack: [V11, 0x276, V154, V159]
Stack pops: 3
Stack additions: [V442]
Exit stack: [V11, V442]

================================

Block 0x839
[0x839:0x871]
---
Predecessors: []
Successors: [0x872]
---
0x839 STOP
0x83a LOG1
0x83b PUSH6 0x627a7a723058
0x842 SHA3
0x843 DUP9
0x844 PUSH2 0x4069
0x847 MISSING 0x27
0x848 MISSING 0xb3
0x849 MISSING 0xe3
0x84a ADDRESS
0x84b PUSH1 0x4c
0x84d MISSING 0xec
0x84e MISSING 0xaf
0x84f MISSING 0xe7
0x850 SLOAD
0x851 MISSING 0xe3
0x852 SAR
0x853 MISSING 0xa6
0x854 MISSING 0xec
0x855 MISSING 0xab
0x856 REVERT
0x857 SWAP6
0x858 MISSING 0xc9
0x859 MISSING 0xcd
0x85a ADD
0x85b DUP1
0x85c MISSING 0xb5
0x85d SELFDESTRUCT
0x85e MISSING 0xc4
0x85f MISSING 0xd0
0x860 MISSING 0xbd
0x861 MISSING 0x4a
0x862 NUMBER
0x863 STOP
0x864 MISSING 0x29
0x865 PUSH1 0x60
0x867 PUSH1 0x40
0x869 MSTORE
0x86a PUSH1 0x4
0x86c CALLDATASIZE
0x86d LT
0x86e PUSH2 0x99
0x871 JUMPI
---
0x839: STOP 
0x83a: LOG S0 S1 S2
0x83b: V443 = 0x627a7a723058
0x842: V444 = SHA3 0x627a7a723058 S3
0x844: V445 = 0x4069
0x847: MISSING 0x27
0x848: MISSING 0xb3
0x849: MISSING 0xe3
0x84a: V446 = ADDRESS
0x84b: V447 = 0x4c
0x84d: MISSING 0xec
0x84e: MISSING 0xaf
0x84f: MISSING 0xe7
0x850: V448 = S[S0]
0x851: MISSING 0xe3
0x852: V449 = SAR S0 S1
0x853: MISSING 0xa6
0x854: MISSING 0xec
0x855: MISSING 0xab
0x856: REVERT S0 S1
0x858: MISSING 0xc9
0x859: MISSING 0xcd
0x85a: V450 = ADD S0 S1
0x85c: MISSING 0xb5
0x85d: SELFDESTRUCT S0
0x85e: MISSING 0xc4
0x85f: MISSING 0xd0
0x860: MISSING 0xbd
0x861: MISSING 0x4a
0x862: V451 = NUMBER
0x863: STOP 
0x864: MISSING 0x29
0x865: V452 = 0x60
0x867: V453 = 0x40
0x869: M[0x40] = 0x60
0x86a: V454 = 0x4
0x86c: V455 = CALLDATASIZE
0x86d: V456 = LT V455 0x4
0x86e: V457 = 0x99
0x871: THROWI V456
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4069, S11, V444, S4, S5, S6, S7, S8, S9, S10, S11, 0x4c, V446, V448, V449, S6, S1, S2, S3, S4, S5, S0, V450, V450, V451]
Exit stack: []

================================

Block 0x872
[0x872:0x8a5]
---
Predecessors: [0x839]
Successors: [0x8a6]
---
0x872 PUSH1 0x0
0x874 CALLDATALOAD
0x875 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x893 SWAP1
0x894 DIV
0x895 PUSH4 0xffffffff
0x89a AND
0x89b DUP1
0x89c PUSH4 0x6fdde03
0x8a1 EQ
0x8a2 PUSH2 0xaa
0x8a5 JUMPI
---
0x872: V458 = 0x0
0x874: V459 = CALLDATALOAD 0x0
0x875: V460 = 0x100000000000000000000000000000000000000000000000000000000
0x894: V461 = DIV V459 0x100000000000000000000000000000000000000000000000000000000
0x895: V462 = 0xffffffff
0x89a: V463 = AND 0xffffffff V461
0x89c: V464 = 0x6fdde03
0x8a1: V465 = EQ 0x6fdde03 V463
0x8a2: V466 = 0xaa
0x8a5: THROWI V465
---
Entry stack: []
Stack pops: 0
Stack additions: [V463]
Exit stack: [V463]

================================

Block 0x8a6
[0x8a6:0x8b0]
---
Predecessors: [0x872]
Successors: [0x8b1]
---
0x8a6 DUP1
0x8a7 PUSH4 0x95ea7b3
0x8ac EQ
0x8ad PUSH2 0x138
0x8b0 JUMPI
---
0x8a7: V467 = 0x95ea7b3
0x8ac: V468 = EQ 0x95ea7b3 V463
0x8ad: V469 = 0x138
0x8b0: THROWI V468
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8b1
[0x8b1:0x8bb]
---
Predecessors: [0x8a6]
Successors: [0x8bc]
---
0x8b1 DUP1
0x8b2 PUSH4 0x18160ddd
0x8b7 EQ
0x8b8 PUSH2 0x192
0x8bb JUMPI
---
0x8b2: V470 = 0x18160ddd
0x8b7: V471 = EQ 0x18160ddd V463
0x8b8: V472 = 0x192
0x8bb: THROWI V471
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8bc
[0x8bc:0x8c6]
---
Predecessors: [0x8b1]
Successors: [0x8c7]
---
0x8bc DUP1
0x8bd PUSH4 0x23b872dd
0x8c2 EQ
0x8c3 PUSH2 0x1bb
0x8c6 JUMPI
---
0x8bd: V473 = 0x23b872dd
0x8c2: V474 = EQ 0x23b872dd V463
0x8c3: V475 = 0x1bb
0x8c6: THROWI V474
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8c7
[0x8c7:0x8d1]
---
Predecessors: [0x8bc]
Successors: [0x8d2]
---
0x8c7 DUP1
0x8c8 PUSH4 0x313ce567
0x8cd EQ
0x8ce PUSH2 0x234
0x8d1 JUMPI
---
0x8c8: V476 = 0x313ce567
0x8cd: V477 = EQ 0x313ce567 V463
0x8ce: V478 = 0x234
0x8d1: THROWI V477
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8d2
[0x8d2:0x8dc]
---
Predecessors: [0x8c7]
Successors: [0x8dd]
---
0x8d2 DUP1
0x8d3 PUSH4 0x70a08231
0x8d8 EQ
0x8d9 PUSH2 0x25d
0x8dc JUMPI
---
0x8d3: V479 = 0x70a08231
0x8d8: V480 = EQ 0x70a08231 V463
0x8d9: V481 = 0x25d
0x8dc: THROWI V480
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8dd
[0x8dd:0x8e7]
---
Predecessors: [0x8d2]
Successors: [0x8e8]
---
0x8dd DUP1
0x8de PUSH4 0x95d89b41
0x8e3 EQ
0x8e4 PUSH2 0x2aa
0x8e7 JUMPI
---
0x8de: V482 = 0x95d89b41
0x8e3: V483 = EQ 0x95d89b41 V463
0x8e4: V484 = 0x2aa
0x8e7: THROWI V483
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8e8
[0x8e8:0x8f2]
---
Predecessors: [0x8dd]
Successors: [0x8f3]
---
0x8e8 DUP1
0x8e9 PUSH4 0xa9059cbb
0x8ee EQ
0x8ef PUSH2 0x338
0x8f2 JUMPI
---
0x8e9: V485 = 0xa9059cbb
0x8ee: V486 = EQ 0xa9059cbb V463
0x8ef: V487 = 0x338
0x8f2: THROWI V486
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8f3
[0x8f3:0x8fd]
---
Predecessors: [0x8e8]
Successors: [0x8fe]
---
0x8f3 DUP1
0x8f4 PUSH4 0xdd62ed3e
0x8f9 EQ
0x8fa PUSH2 0x392
0x8fd JUMPI
---
0x8f4: V488 = 0xdd62ed3e
0x8f9: V489 = EQ 0xdd62ed3e V463
0x8fa: V490 = 0x392
0x8fd: THROWI V489
---
Entry stack: [V463]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V463]

================================

Block 0x8fe
[0x8fe:0x908]
---
Predecessors: [0x8f3]
Successors: [0x909]
---
0x8fe JUMPDEST
0x8ff PUSH1 0x0
0x901 CALLVALUE
0x902 EQ
0x903 ISZERO
0x904 ISZERO
0x905 PUSH2 0xa8
0x908 JUMPI
---
0x8fe: JUMPDEST 
0x8ff: V491 = 0x0
0x901: V492 = CALLVALUE
0x902: V493 = EQ V492 0x0
0x903: V494 = ISZERO V493
0x904: V495 = ISZERO V494
0x905: V496 = 0xa8
0x908: THROWI V495
---
Entry stack: [V463]
Stack pops: 0
Stack additions: []
Exit stack: [V463]

================================

Block 0x909
[0x909:0x915]
---
Predecessors: [0x8fe]
Successors: [0x916]
---
0x909 PUSH1 0x0
0x90b DUP1
0x90c REVERT
0x90d JUMPDEST
0x90e STOP
0x90f JUMPDEST
0x910 CALLVALUE
0x911 ISZERO
0x912 PUSH2 0xb5
0x915 JUMPI
---
0x909: V497 = 0x0
0x90c: REVERT 0x0 0x0
0x90d: JUMPDEST 
0x90e: STOP 
0x90f: JUMPDEST 
0x910: V498 = CALLVALUE
0x911: V499 = ISZERO V498
0x912: V500 = 0xb5
0x915: THROWI V499
---
Entry stack: [V463]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x916
[0x916:0x946]
---
Predecessors: [0x909]
Successors: [0x947]
---
0x916 PUSH1 0x0
0x918 DUP1
0x919 REVERT
0x91a JUMPDEST
0x91b PUSH2 0xbd
0x91e PUSH2 0x3fe
0x921 JUMP
0x922 JUMPDEST
0x923 PUSH1 0x40
0x925 MLOAD
0x926 DUP1
0x927 DUP1
0x928 PUSH1 0x20
0x92a ADD
0x92b DUP3
0x92c DUP2
0x92d SUB
0x92e DUP3
0x92f MSTORE
0x930 DUP4
0x931 DUP2
0x932 DUP2
0x933 MLOAD
0x934 DUP2
0x935 MSTORE
0x936 PUSH1 0x20
0x938 ADD
0x939 SWAP2
0x93a POP
0x93b DUP1
0x93c MLOAD
0x93d SWAP1
0x93e PUSH1 0x20
0x940 ADD
0x941 SWAP1
0x942 DUP1
0x943 DUP4
0x944 DUP4
0x945 PUSH1 0x0
---
0x916: V501 = 0x0
0x919: REVERT 0x0 0x0
0x91a: JUMPDEST 
0x91b: V502 = 0xbd
0x91e: V503 = 0x3fe
0x921: THROW 
0x922: JUMPDEST 
0x923: V504 = 0x40
0x925: V505 = M[0x40]
0x928: V506 = 0x20
0x92a: V507 = ADD 0x20 V505
0x92d: V508 = SUB V507 V505
0x92f: M[V505] = V508
0x933: V509 = M[S0]
0x935: M[V507] = V509
0x936: V510 = 0x20
0x938: V511 = ADD 0x20 V507
0x93c: V512 = M[S0]
0x93e: V513 = 0x20
0x940: V514 = ADD 0x20 S0
0x945: V515 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbd, 0x0, V514, V511, V512, V512, V514, V511, V505, V505, S0]
Exit stack: []

================================

Block 0x947
[0x947:0x94f]
---
Predecessors: [0x916]
Successors: [0x950]
---
0x947 JUMPDEST
0x948 DUP4
0x949 DUP2
0x94a LT
0x94b ISZERO
0x94c PUSH2 0xfd
0x94f JUMPI
---
0x947: JUMPDEST 
0x94a: V516 = LT 0x0 V512
0x94b: V517 = ISZERO V516
0x94c: V518 = 0xfd
0x94f: THROWI V517
---
Entry stack: [S9, V505, V505, V511, V514, V512, V512, V511, V514, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V505, V505, V511, V514, V512, V512, V511, V514, 0x0]

================================

Block 0x950
[0x950:0x961]
---
Predecessors: [0x947]
Successors: [0xe2]
---
0x950 DUP1
0x951 DUP3
0x952 ADD
0x953 MLOAD
0x954 DUP2
0x955 DUP5
0x956 ADD
0x957 MSTORE
0x958 PUSH1 0x20
0x95a DUP2
0x95b ADD
0x95c SWAP1
0x95d POP
0x95e PUSH2 0xe2
0x961 JUMP
---
0x952: V519 = ADD V514 0x0
0x953: V520 = M[V519]
0x956: V521 = ADD V511 0x0
0x957: M[V521] = V520
0x958: V522 = 0x20
0x95b: V523 = ADD 0x0 0x20
0x95e: V524 = 0xe2
0x961: JUMP 0xe2
---
Entry stack: [S9, V505, V505, V511, V514, V512, V512, V511, V514, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x20]
Exit stack: [S9, V505, V505, V511, V514, V512, V512, V511, V514, 0x20]

================================

Block 0x962
[0x962:0x975]
---
Predecessors: []
Successors: [0x976]
---
0x962 JUMPDEST
0x963 POP
0x964 POP
0x965 POP
0x966 POP
0x967 SWAP1
0x968 POP
0x969 SWAP1
0x96a DUP2
0x96b ADD
0x96c SWAP1
0x96d PUSH1 0x1f
0x96f AND
0x970 DUP1
0x971 ISZERO
0x972 PUSH2 0x12a
0x975 JUMPI
---
0x962: JUMPDEST 
0x96b: V525 = ADD S4 S6
0x96d: V526 = 0x1f
0x96f: V527 = AND 0x1f S4
0x971: V528 = ISZERO V527
0x972: V529 = 0x12a
0x975: THROWI V528
---
Entry stack: []
Stack pops: 7
Stack additions: [V525, V527]
Exit stack: [V525, V527]

================================

Block 0x976
[0x976:0x98e]
---
Predecessors: [0x962]
Successors: [0x98f]
---
0x976 DUP1
0x977 DUP3
0x978 SUB
0x979 DUP1
0x97a MLOAD
0x97b PUSH1 0x1
0x97d DUP4
0x97e PUSH1 0x20
0x980 SUB
0x981 PUSH2 0x100
0x984 EXP
0x985 SUB
0x986 NOT
0x987 AND
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x20
0x98c ADD
0x98d SWAP2
0x98e POP
---
0x978: V530 = SUB V525 V527
0x97a: V531 = M[V530]
0x97b: V532 = 0x1
0x97e: V533 = 0x20
0x980: V534 = SUB 0x20 V527
0x981: V535 = 0x100
0x984: V536 = EXP 0x100 V534
0x985: V537 = SUB V536 0x1
0x986: V538 = NOT V537
0x987: V539 = AND V538 V531
0x989: M[V530] = V539
0x98a: V540 = 0x20
0x98c: V541 = ADD 0x20 V530
---
Entry stack: [V525, V527]
Stack pops: 2
Stack additions: [V541, S0]
Exit stack: [V541, V527]

================================

Block 0x98f
[0x98f:0x9a3]
---
Predecessors: [0x976]
Successors: [0x9a4]
---
0x98f JUMPDEST
0x990 POP
0x991 SWAP3
0x992 POP
0x993 POP
0x994 POP
0x995 PUSH1 0x40
0x997 MLOAD
0x998 DUP1
0x999 SWAP2
0x99a SUB
0x99b SWAP1
0x99c RETURN
0x99d JUMPDEST
0x99e CALLVALUE
0x99f ISZERO
0x9a0 PUSH2 0x143
0x9a3 JUMPI
---
0x98f: JUMPDEST 
0x995: V542 = 0x40
0x997: V543 = M[0x40]
0x99a: V544 = SUB V541 V543
0x99c: RETURN V543 V544
0x99d: JUMPDEST 
0x99e: V545 = CALLVALUE
0x99f: V546 = ISZERO V545
0x9a0: V547 = 0x143
0x9a3: THROWI V546
---
Entry stack: [V541, V527]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x9a4
[0x9a4:0x9fd]
---
Predecessors: [0x98f]
Successors: [0x9fe]
---
0x9a4 PUSH1 0x0
0x9a6 DUP1
0x9a7 REVERT
0x9a8 JUMPDEST
0x9a9 PUSH2 0x178
0x9ac PUSH1 0x4
0x9ae DUP1
0x9af DUP1
0x9b0 CALLDATALOAD
0x9b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c6 AND
0x9c7 SWAP1
0x9c8 PUSH1 0x20
0x9ca ADD
0x9cb SWAP1
0x9cc SWAP2
0x9cd SWAP1
0x9ce DUP1
0x9cf CALLDATALOAD
0x9d0 SWAP1
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 SWAP1
0x9d5 SWAP2
0x9d6 SWAP1
0x9d7 POP
0x9d8 POP
0x9d9 PUSH2 0x437
0x9dc JUMP
0x9dd JUMPDEST
0x9de PUSH1 0x40
0x9e0 MLOAD
0x9e1 DUP1
0x9e2 DUP3
0x9e3 ISZERO
0x9e4 ISZERO
0x9e5 ISZERO
0x9e6 ISZERO
0x9e7 DUP2
0x9e8 MSTORE
0x9e9 PUSH1 0x20
0x9eb ADD
0x9ec SWAP2
0x9ed POP
0x9ee POP
0x9ef PUSH1 0x40
0x9f1 MLOAD
0x9f2 DUP1
0x9f3 SWAP2
0x9f4 SUB
0x9f5 SWAP1
0x9f6 RETURN
0x9f7 JUMPDEST
0x9f8 CALLVALUE
0x9f9 ISZERO
0x9fa PUSH2 0x19d
0x9fd JUMPI
---
0x9a4: V548 = 0x0
0x9a7: REVERT 0x0 0x0
0x9a8: JUMPDEST 
0x9a9: V549 = 0x178
0x9ac: V550 = 0x4
0x9b0: V551 = CALLDATALOAD 0x4
0x9b1: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c6: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x9c8: V554 = 0x20
0x9ca: V555 = ADD 0x20 0x4
0x9cf: V556 = CALLDATALOAD 0x24
0x9d1: V557 = 0x20
0x9d3: V558 = ADD 0x20 0x24
0x9d9: V559 = 0x437
0x9dc: THROW 
0x9dd: JUMPDEST 
0x9de: V560 = 0x40
0x9e0: V561 = M[0x40]
0x9e3: V562 = ISZERO S0
0x9e4: V563 = ISZERO V562
0x9e5: V564 = ISZERO V563
0x9e6: V565 = ISZERO V564
0x9e8: M[V561] = V565
0x9e9: V566 = 0x20
0x9eb: V567 = ADD 0x20 V561
0x9ef: V568 = 0x40
0x9f1: V569 = M[0x40]
0x9f4: V570 = SUB V567 V569
0x9f6: RETURN V569 V570
0x9f7: JUMPDEST 
0x9f8: V571 = CALLVALUE
0x9f9: V572 = ISZERO V571
0x9fa: V573 = 0x19d
0x9fd: THROWI V572
---
Entry stack: []
Stack pops: 0
Stack additions: [V556, V553, 0x178]
Exit stack: []

================================

Block 0x9fe
[0x9fe:0xa26]
---
Predecessors: [0x9a4]
Successors: [0x1c6, 0xa27]
---
0x9fe PUSH1 0x0
0xa00 DUP1
0xa01 REVERT
0xa02 JUMPDEST
0xa03 PUSH2 0x1a5
0xa06 PUSH2 0x529
0xa09 JUMP
0xa0a JUMPDEST
0xa0b PUSH1 0x40
0xa0d MLOAD
0xa0e DUP1
0xa0f DUP3
0xa10 DUP2
0xa11 MSTORE
0xa12 PUSH1 0x20
0xa14 ADD
0xa15 SWAP2
0xa16 POP
0xa17 POP
0xa18 PUSH1 0x40
0xa1a MLOAD
0xa1b DUP1
0xa1c SWAP2
0xa1d SUB
0xa1e SWAP1
0xa1f RETURN
0xa20 JUMPDEST
0xa21 CALLVALUE
0xa22 ISZERO
0xa23 PUSH2 0x1c6
0xa26 JUMPI
---
0x9fe: V574 = 0x0
0xa01: REVERT 0x0 0x0
0xa02: JUMPDEST 
0xa03: V575 = 0x1a5
0xa06: V576 = 0x529
0xa09: THROW 
0xa0a: JUMPDEST 
0xa0b: V577 = 0x40
0xa0d: V578 = M[0x40]
0xa11: M[V578] = S0
0xa12: V579 = 0x20
0xa14: V580 = ADD 0x20 V578
0xa18: V581 = 0x40
0xa1a: V582 = M[0x40]
0xa1d: V583 = SUB V580 V582
0xa1f: RETURN V582 V583
0xa20: JUMPDEST 
0xa21: V584 = CALLVALUE
0xa22: V585 = ISZERO V584
0xa23: V586 = 0x1c6
0xa26: JUMPI 0x1c6 V585
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: []

================================

Block 0xa27
[0xa27:0xa9f]
---
Predecessors: [0x9fe]
Successors: [0xaa0]
---
0xa27 PUSH1 0x0
0xa29 DUP1
0xa2a REVERT
0xa2b JUMPDEST
0xa2c PUSH2 0x21a
0xa2f PUSH1 0x4
0xa31 DUP1
0xa32 DUP1
0xa33 CALLDATALOAD
0xa34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa49 AND
0xa4a SWAP1
0xa4b PUSH1 0x20
0xa4d ADD
0xa4e SWAP1
0xa4f SWAP2
0xa50 SWAP1
0xa51 DUP1
0xa52 CALLDATALOAD
0xa53 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa68 AND
0xa69 SWAP1
0xa6a PUSH1 0x20
0xa6c ADD
0xa6d SWAP1
0xa6e SWAP2
0xa6f SWAP1
0xa70 DUP1
0xa71 CALLDATALOAD
0xa72 SWAP1
0xa73 PUSH1 0x20
0xa75 ADD
0xa76 SWAP1
0xa77 SWAP2
0xa78 SWAP1
0xa79 POP
0xa7a POP
0xa7b PUSH2 0x52f
0xa7e JUMP
0xa7f JUMPDEST
0xa80 PUSH1 0x40
0xa82 MLOAD
0xa83 DUP1
0xa84 DUP3
0xa85 ISZERO
0xa86 ISZERO
0xa87 ISZERO
0xa88 ISZERO
0xa89 DUP2
0xa8a MSTORE
0xa8b PUSH1 0x20
0xa8d ADD
0xa8e SWAP2
0xa8f POP
0xa90 POP
0xa91 PUSH1 0x40
0xa93 MLOAD
0xa94 DUP1
0xa95 SWAP2
0xa96 SUB
0xa97 SWAP1
0xa98 RETURN
0xa99 JUMPDEST
0xa9a CALLVALUE
0xa9b ISZERO
0xa9c PUSH2 0x23f
0xa9f JUMPI
---
0xa27: V587 = 0x0
0xa2a: REVERT 0x0 0x0
0xa2b: JUMPDEST 
0xa2c: V588 = 0x21a
0xa2f: V589 = 0x4
0xa33: V590 = CALLDATALOAD 0x4
0xa34: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0xa49: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0xa4b: V593 = 0x20
0xa4d: V594 = ADD 0x20 0x4
0xa52: V595 = CALLDATALOAD 0x24
0xa53: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0xa68: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0xa6a: V598 = 0x20
0xa6c: V599 = ADD 0x20 0x24
0xa71: V600 = CALLDATALOAD 0x44
0xa73: V601 = 0x20
0xa75: V602 = ADD 0x20 0x44
0xa7b: V603 = 0x52f
0xa7e: THROW 
0xa7f: JUMPDEST 
0xa80: V604 = 0x40
0xa82: V605 = M[0x40]
0xa85: V606 = ISZERO S0
0xa86: V607 = ISZERO V606
0xa87: V608 = ISZERO V607
0xa88: V609 = ISZERO V608
0xa8a: M[V605] = V609
0xa8b: V610 = 0x20
0xa8d: V611 = ADD 0x20 V605
0xa91: V612 = 0x40
0xa93: V613 = M[0x40]
0xa96: V614 = SUB V611 V613
0xa98: RETURN V613 V614
0xa99: JUMPDEST 
0xa9a: V615 = CALLVALUE
0xa9b: V616 = ISZERO V615
0xa9c: V617 = 0x23f
0xa9f: THROWI V616
---
Entry stack: []
Stack pops: 0
Stack additions: [V600, V597, V592, 0x21a]
Exit stack: []

================================

Block 0xaa0
[0xaa0:0xac8]
---
Predecessors: [0xa27]
Successors: [0xac9]
---
0xaa0 PUSH1 0x0
0xaa2 DUP1
0xaa3 REVERT
0xaa4 JUMPDEST
0xaa5 PUSH2 0x247
0xaa8 PUSH2 0x7ab
0xaab JUMP
0xaac JUMPDEST
0xaad PUSH1 0x40
0xaaf MLOAD
0xab0 DUP1
0xab1 DUP3
0xab2 DUP2
0xab3 MSTORE
0xab4 PUSH1 0x20
0xab6 ADD
0xab7 SWAP2
0xab8 POP
0xab9 POP
0xaba PUSH1 0x40
0xabc MLOAD
0xabd DUP1
0xabe SWAP2
0xabf SUB
0xac0 SWAP1
0xac1 RETURN
0xac2 JUMPDEST
0xac3 CALLVALUE
0xac4 ISZERO
0xac5 PUSH2 0x268
0xac8 JUMPI
---
0xaa0: V618 = 0x0
0xaa3: REVERT 0x0 0x0
0xaa4: JUMPDEST 
0xaa5: V619 = 0x247
0xaa8: V620 = 0x7ab
0xaab: THROW 
0xaac: JUMPDEST 
0xaad: V621 = 0x40
0xaaf: V622 = M[0x40]
0xab3: M[V622] = S0
0xab4: V623 = 0x20
0xab6: V624 = ADD 0x20 V622
0xaba: V625 = 0x40
0xabc: V626 = M[0x40]
0xabf: V627 = SUB V624 V626
0xac1: RETURN V626 V627
0xac2: JUMPDEST 
0xac3: V628 = CALLVALUE
0xac4: V629 = ISZERO V628
0xac5: V630 = 0x268
0xac8: THROWI V629
---
Entry stack: []
Stack pops: 0
Stack additions: [0x247]
Exit stack: []

================================

Block 0xac9
[0xac9:0xb15]
---
Predecessors: [0xaa0]
Successors: [0xb16]
---
0xac9 PUSH1 0x0
0xacb DUP1
0xacc REVERT
0xacd JUMPDEST
0xace PUSH2 0x294
0xad1 PUSH1 0x4
0xad3 DUP1
0xad4 DUP1
0xad5 CALLDATALOAD
0xad6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaeb AND
0xaec SWAP1
0xaed PUSH1 0x20
0xaef ADD
0xaf0 SWAP1
0xaf1 SWAP2
0xaf2 SWAP1
0xaf3 POP
0xaf4 POP
0xaf5 PUSH2 0x7b0
0xaf8 JUMP
0xaf9 JUMPDEST
0xafa PUSH1 0x40
0xafc MLOAD
0xafd DUP1
0xafe DUP3
0xaff DUP2
0xb00 MSTORE
0xb01 PUSH1 0x20
0xb03 ADD
0xb04 SWAP2
0xb05 POP
0xb06 POP
0xb07 PUSH1 0x40
0xb09 MLOAD
0xb0a DUP1
0xb0b SWAP2
0xb0c SUB
0xb0d SWAP1
0xb0e RETURN
0xb0f JUMPDEST
0xb10 CALLVALUE
0xb11 ISZERO
0xb12 PUSH2 0x2b5
0xb15 JUMPI
---
0xac9: V631 = 0x0
0xacc: REVERT 0x0 0x0
0xacd: JUMPDEST 
0xace: V632 = 0x294
0xad1: V633 = 0x4
0xad5: V634 = CALLDATALOAD 0x4
0xad6: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0xaeb: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0xaed: V637 = 0x20
0xaef: V638 = ADD 0x20 0x4
0xaf5: V639 = 0x7b0
0xaf8: THROW 
0xaf9: JUMPDEST 
0xafa: V640 = 0x40
0xafc: V641 = M[0x40]
0xb00: M[V641] = S0
0xb01: V642 = 0x20
0xb03: V643 = ADD 0x20 V641
0xb07: V644 = 0x40
0xb09: V645 = M[0x40]
0xb0c: V646 = SUB V643 V645
0xb0e: RETURN V645 V646
0xb0f: JUMPDEST 
0xb10: V647 = CALLVALUE
0xb11: V648 = ISZERO V647
0xb12: V649 = 0x2b5
0xb15: THROWI V648
---
Entry stack: []
Stack pops: 0
Stack additions: [V636, 0x294]
Exit stack: []

================================

Block 0xb16
[0xb16:0xb46]
---
Predecessors: [0xac9]
Successors: [0xb47]
---
0xb16 PUSH1 0x0
0xb18 DUP1
0xb19 REVERT
0xb1a JUMPDEST
0xb1b PUSH2 0x2bd
0xb1e PUSH2 0x7f9
0xb21 JUMP
0xb22 JUMPDEST
0xb23 PUSH1 0x40
0xb25 MLOAD
0xb26 DUP1
0xb27 DUP1
0xb28 PUSH1 0x20
0xb2a ADD
0xb2b DUP3
0xb2c DUP2
0xb2d SUB
0xb2e DUP3
0xb2f MSTORE
0xb30 DUP4
0xb31 DUP2
0xb32 DUP2
0xb33 MLOAD
0xb34 DUP2
0xb35 MSTORE
0xb36 PUSH1 0x20
0xb38 ADD
0xb39 SWAP2
0xb3a POP
0xb3b DUP1
0xb3c MLOAD
0xb3d SWAP1
0xb3e PUSH1 0x20
0xb40 ADD
0xb41 SWAP1
0xb42 DUP1
0xb43 DUP4
0xb44 DUP4
0xb45 PUSH1 0x0
---
0xb16: V650 = 0x0
0xb19: REVERT 0x0 0x0
0xb1a: JUMPDEST 
0xb1b: V651 = 0x2bd
0xb1e: V652 = 0x7f9
0xb21: THROW 
0xb22: JUMPDEST 
0xb23: V653 = 0x40
0xb25: V654 = M[0x40]
0xb28: V655 = 0x20
0xb2a: V656 = ADD 0x20 V654
0xb2d: V657 = SUB V656 V654
0xb2f: M[V654] = V657
0xb33: V658 = M[S0]
0xb35: M[V656] = V658
0xb36: V659 = 0x20
0xb38: V660 = ADD 0x20 V656
0xb3c: V661 = M[S0]
0xb3e: V662 = 0x20
0xb40: V663 = ADD 0x20 S0
0xb45: V664 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2bd, 0x0, V663, V660, V661, V661, V663, V660, V654, V654, S0]
Exit stack: []

================================

Block 0xb47
[0xb47:0xb4f]
---
Predecessors: [0xb16]
Successors: [0xb50]
---
0xb47 JUMPDEST
0xb48 DUP4
0xb49 DUP2
0xb4a LT
0xb4b ISZERO
0xb4c PUSH2 0x2fd
0xb4f JUMPI
---
0xb47: JUMPDEST 
0xb4a: V665 = LT 0x0 V661
0xb4b: V666 = ISZERO V665
0xb4c: V667 = 0x2fd
0xb4f: THROWI V666
---
Entry stack: [S9, V654, V654, V660, V663, V661, V661, V660, V663, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V654, V654, V660, V663, V661, V661, V660, V663, 0x0]

================================

Block 0xb50
[0xb50:0xb75]
---
Predecessors: [0xb47]
Successors: [0xb76]
---
0xb50 DUP1
0xb51 DUP3
0xb52 ADD
0xb53 MLOAD
0xb54 DUP2
0xb55 DUP5
0xb56 ADD
0xb57 MSTORE
0xb58 PUSH1 0x20
0xb5a DUP2
0xb5b ADD
0xb5c SWAP1
0xb5d POP
0xb5e PUSH2 0x2e2
0xb61 JUMP
0xb62 JUMPDEST
0xb63 POP
0xb64 POP
0xb65 POP
0xb66 POP
0xb67 SWAP1
0xb68 POP
0xb69 SWAP1
0xb6a DUP2
0xb6b ADD
0xb6c SWAP1
0xb6d PUSH1 0x1f
0xb6f AND
0xb70 DUP1
0xb71 ISZERO
0xb72 PUSH2 0x32a
0xb75 JUMPI
---
0xb52: V668 = ADD V663 0x0
0xb53: V669 = M[V668]
0xb56: V670 = ADD V660 0x0
0xb57: M[V670] = V669
0xb58: V671 = 0x20
0xb5b: V672 = ADD 0x0 0x20
0xb5e: V673 = 0x2e2
0xb61: THROW 
0xb62: JUMPDEST 
0xb6b: V674 = ADD S4 S6
0xb6d: V675 = 0x1f
0xb6f: V676 = AND 0x1f S4
0xb71: V677 = ISZERO V676
0xb72: V678 = 0x32a
0xb75: THROWI V677
---
Entry stack: [S9, V654, V654, V660, V663, V661, V661, V660, V663, 0x0]
Stack pops: 3
Stack additions: [V676, V674]
Exit stack: []

================================

Block 0xb76
[0xb76:0xb8e]
---
Predecessors: [0xb50]
Successors: [0xb8f]
---
0xb76 DUP1
0xb77 DUP3
0xb78 SUB
0xb79 DUP1
0xb7a MLOAD
0xb7b PUSH1 0x1
0xb7d DUP4
0xb7e PUSH1 0x20
0xb80 SUB
0xb81 PUSH2 0x100
0xb84 EXP
0xb85 SUB
0xb86 NOT
0xb87 AND
0xb88 DUP2
0xb89 MSTORE
0xb8a PUSH1 0x20
0xb8c ADD
0xb8d SWAP2
0xb8e POP
---
0xb78: V679 = SUB V674 V676
0xb7a: V680 = M[V679]
0xb7b: V681 = 0x1
0xb7e: V682 = 0x20
0xb80: V683 = SUB 0x20 V676
0xb81: V684 = 0x100
0xb84: V685 = EXP 0x100 V683
0xb85: V686 = SUB V685 0x1
0xb86: V687 = NOT V686
0xb87: V688 = AND V687 V680
0xb89: M[V679] = V688
0xb8a: V689 = 0x20
0xb8c: V690 = ADD 0x20 V679
---
Entry stack: [V674, V676]
Stack pops: 2
Stack additions: [V690, S0]
Exit stack: [V690, V676]

================================

Block 0xb8f
[0xb8f:0xba3]
---
Predecessors: [0xb76]
Successors: [0xba4]
---
0xb8f JUMPDEST
0xb90 POP
0xb91 SWAP3
0xb92 POP
0xb93 POP
0xb94 POP
0xb95 PUSH1 0x40
0xb97 MLOAD
0xb98 DUP1
0xb99 SWAP2
0xb9a SUB
0xb9b SWAP1
0xb9c RETURN
0xb9d JUMPDEST
0xb9e CALLVALUE
0xb9f ISZERO
0xba0 PUSH2 0x343
0xba3 JUMPI
---
0xb8f: JUMPDEST 
0xb95: V691 = 0x40
0xb97: V692 = M[0x40]
0xb9a: V693 = SUB V690 V692
0xb9c: RETURN V692 V693
0xb9d: JUMPDEST 
0xb9e: V694 = CALLVALUE
0xb9f: V695 = ISZERO V694
0xba0: V696 = 0x343
0xba3: THROWI V695
---
Entry stack: [V690, V676]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0xba4
[0xba4:0xbfd]
---
Predecessors: [0xb8f]
Successors: [0xbfe]
---
0xba4 PUSH1 0x0
0xba6 DUP1
0xba7 REVERT
0xba8 JUMPDEST
0xba9 PUSH2 0x378
0xbac PUSH1 0x4
0xbae DUP1
0xbaf DUP1
0xbb0 CALLDATALOAD
0xbb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc6 AND
0xbc7 SWAP1
0xbc8 PUSH1 0x20
0xbca ADD
0xbcb SWAP1
0xbcc SWAP2
0xbcd SWAP1
0xbce DUP1
0xbcf CALLDATALOAD
0xbd0 SWAP1
0xbd1 PUSH1 0x20
0xbd3 ADD
0xbd4 SWAP1
0xbd5 SWAP2
0xbd6 SWAP1
0xbd7 POP
0xbd8 POP
0xbd9 PUSH2 0x832
0xbdc JUMP
0xbdd JUMPDEST
0xbde PUSH1 0x40
0xbe0 MLOAD
0xbe1 DUP1
0xbe2 DUP3
0xbe3 ISZERO
0xbe4 ISZERO
0xbe5 ISZERO
0xbe6 ISZERO
0xbe7 DUP2
0xbe8 MSTORE
0xbe9 PUSH1 0x20
0xbeb ADD
0xbec SWAP2
0xbed POP
0xbee POP
0xbef PUSH1 0x40
0xbf1 MLOAD
0xbf2 DUP1
0xbf3 SWAP2
0xbf4 SUB
0xbf5 SWAP1
0xbf6 RETURN
0xbf7 JUMPDEST
0xbf8 CALLVALUE
0xbf9 ISZERO
0xbfa PUSH2 0x39d
0xbfd JUMPI
---
0xba4: V697 = 0x0
0xba7: REVERT 0x0 0x0
0xba8: JUMPDEST 
0xba9: V698 = 0x378
0xbac: V699 = 0x4
0xbb0: V700 = CALLDATALOAD 0x4
0xbb1: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc6: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0xbc8: V703 = 0x20
0xbca: V704 = ADD 0x20 0x4
0xbcf: V705 = CALLDATALOAD 0x24
0xbd1: V706 = 0x20
0xbd3: V707 = ADD 0x20 0x24
0xbd9: V708 = 0x832
0xbdc: THROW 
0xbdd: JUMPDEST 
0xbde: V709 = 0x40
0xbe0: V710 = M[0x40]
0xbe3: V711 = ISZERO S0
0xbe4: V712 = ISZERO V711
0xbe5: V713 = ISZERO V712
0xbe6: V714 = ISZERO V713
0xbe8: M[V710] = V714
0xbe9: V715 = 0x20
0xbeb: V716 = ADD 0x20 V710
0xbef: V717 = 0x40
0xbf1: V718 = M[0x40]
0xbf4: V719 = SUB V716 V718
0xbf6: RETURN V718 V719
0xbf7: JUMPDEST 
0xbf8: V720 = CALLVALUE
0xbf9: V721 = ISZERO V720
0xbfa: V722 = 0x39d
0xbfd: THROWI V721
---
Entry stack: []
Stack pops: 0
Stack additions: [V705, V702, 0x378]
Exit stack: []

================================

Block 0xbfe
[0xbfe:0xddf]
---
Predecessors: [0xba4]
Successors: [0xde0]
---
0xbfe PUSH1 0x0
0xc00 DUP1
0xc01 REVERT
0xc02 JUMPDEST
0xc03 PUSH2 0x3e8
0xc06 PUSH1 0x4
0xc08 DUP1
0xc09 DUP1
0xc0a CALLDATALOAD
0xc0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc20 AND
0xc21 SWAP1
0xc22 PUSH1 0x20
0xc24 ADD
0xc25 SWAP1
0xc26 SWAP2
0xc27 SWAP1
0xc28 DUP1
0xc29 CALLDATALOAD
0xc2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3f AND
0xc40 SWAP1
0xc41 PUSH1 0x20
0xc43 ADD
0xc44 SWAP1
0xc45 SWAP2
0xc46 SWAP1
0xc47 POP
0xc48 POP
0xc49 PUSH2 0x99b
0xc4c JUMP
0xc4d JUMPDEST
0xc4e PUSH1 0x40
0xc50 MLOAD
0xc51 DUP1
0xc52 DUP3
0xc53 DUP2
0xc54 MSTORE
0xc55 PUSH1 0x20
0xc57 ADD
0xc58 SWAP2
0xc59 POP
0xc5a POP
0xc5b PUSH1 0x40
0xc5d MLOAD
0xc5e DUP1
0xc5f SWAP2
0xc60 SUB
0xc61 SWAP1
0xc62 RETURN
0xc63 JUMPDEST
0xc64 PUSH1 0x40
0xc66 DUP1
0xc67 MLOAD
0xc68 SWAP1
0xc69 DUP2
0xc6a ADD
0xc6b PUSH1 0x40
0xc6d MSTORE
0xc6e DUP1
0xc6f PUSH1 0x5
0xc71 DUP2
0xc72 MSTORE
0xc73 PUSH1 0x20
0xc75 ADD
0xc76 PUSH32 0x5874696d65000000000000000000000000000000000000000000000000000000
0xc97 DUP2
0xc98 MSTORE
0xc99 POP
0xc9a DUP2
0xc9b JUMP
0xc9c JUMPDEST
0xc9d PUSH1 0x0
0xc9f DUP2
0xca0 PUSH1 0x2
0xca2 PUSH1 0x0
0xca4 CALLER
0xca5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcba AND
0xcbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd0 AND
0xcd1 DUP2
0xcd2 MSTORE
0xcd3 PUSH1 0x20
0xcd5 ADD
0xcd6 SWAP1
0xcd7 DUP2
0xcd8 MSTORE
0xcd9 PUSH1 0x20
0xcdb ADD
0xcdc PUSH1 0x0
0xcde SHA3
0xcdf PUSH1 0x0
0xce1 DUP6
0xce2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf7 AND
0xcf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0d AND
0xd0e DUP2
0xd0f MSTORE
0xd10 PUSH1 0x20
0xd12 ADD
0xd13 SWAP1
0xd14 DUP2
0xd15 MSTORE
0xd16 PUSH1 0x20
0xd18 ADD
0xd19 PUSH1 0x0
0xd1b SHA3
0xd1c DUP2
0xd1d SWAP1
0xd1e SSTORE
0xd1f POP
0xd20 DUP3
0xd21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd36 AND
0xd37 CALLER
0xd38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4d AND
0xd4e PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xd6f DUP5
0xd70 PUSH1 0x40
0xd72 MLOAD
0xd73 DUP1
0xd74 DUP3
0xd75 DUP2
0xd76 MSTORE
0xd77 PUSH1 0x20
0xd79 ADD
0xd7a SWAP2
0xd7b POP
0xd7c POP
0xd7d PUSH1 0x40
0xd7f MLOAD
0xd80 DUP1
0xd81 SWAP2
0xd82 SUB
0xd83 SWAP1
0xd84 LOG3
0xd85 PUSH1 0x1
0xd87 SWAP1
0xd88 POP
0xd89 SWAP3
0xd8a SWAP2
0xd8b POP
0xd8c POP
0xd8d JUMP
0xd8e JUMPDEST
0xd8f PUSH1 0x3
0xd91 SLOAD
0xd92 DUP2
0xd93 JUMP
0xd94 JUMPDEST
0xd95 PUSH1 0x0
0xd97 DUP2
0xd98 PUSH1 0x1
0xd9a PUSH1 0x0
0xd9c DUP7
0xd9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb2 AND
0xdb3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc8 AND
0xdc9 DUP2
0xdca MSTORE
0xdcb PUSH1 0x20
0xdcd ADD
0xdce SWAP1
0xdcf DUP2
0xdd0 MSTORE
0xdd1 PUSH1 0x20
0xdd3 ADD
0xdd4 PUSH1 0x0
0xdd6 SHA3
0xdd7 SLOAD
0xdd8 LT
0xdd9 ISZERO
0xdda DUP1
0xddb ISZERO
0xddc PUSH2 0x5fc
0xddf JUMPI
---
0xbfe: V723 = 0x0
0xc01: REVERT 0x0 0x0
0xc02: JUMPDEST 
0xc03: V724 = 0x3e8
0xc06: V725 = 0x4
0xc0a: V726 = CALLDATALOAD 0x4
0xc0b: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0xc20: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0xc22: V729 = 0x20
0xc24: V730 = ADD 0x20 0x4
0xc29: V731 = CALLDATALOAD 0x24
0xc2a: V732 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3f: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0xc41: V734 = 0x20
0xc43: V735 = ADD 0x20 0x24
0xc49: V736 = 0x99b
0xc4c: THROW 
0xc4d: JUMPDEST 
0xc4e: V737 = 0x40
0xc50: V738 = M[0x40]
0xc54: M[V738] = S0
0xc55: V739 = 0x20
0xc57: V740 = ADD 0x20 V738
0xc5b: V741 = 0x40
0xc5d: V742 = M[0x40]
0xc60: V743 = SUB V740 V742
0xc62: RETURN V742 V743
0xc63: JUMPDEST 
0xc64: V744 = 0x40
0xc67: V745 = M[0x40]
0xc6a: V746 = ADD V745 0x40
0xc6b: V747 = 0x40
0xc6d: M[0x40] = V746
0xc6f: V748 = 0x5
0xc72: M[V745] = 0x5
0xc73: V749 = 0x20
0xc75: V750 = ADD 0x20 V745
0xc76: V751 = 0x5874696d65000000000000000000000000000000000000000000000000000000
0xc98: M[V750] = 0x5874696d65000000000000000000000000000000000000000000000000000000
0xc9b: JUMP S0
0xc9c: JUMPDEST 
0xc9d: V752 = 0x0
0xca0: V753 = 0x2
0xca2: V754 = 0x0
0xca4: V755 = CALLER
0xca5: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xcba: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0xcbb: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd0: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xcd2: M[0x0] = V759
0xcd3: V760 = 0x20
0xcd5: V761 = ADD 0x20 0x0
0xcd8: M[0x20] = 0x2
0xcd9: V762 = 0x20
0xcdb: V763 = ADD 0x20 0x20
0xcdc: V764 = 0x0
0xcde: V765 = SHA3 0x0 0x40
0xcdf: V766 = 0x0
0xce2: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf7: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xcf8: V769 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0d: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff V768
0xd0f: M[0x0] = V770
0xd10: V771 = 0x20
0xd12: V772 = ADD 0x20 0x0
0xd15: M[0x20] = V765
0xd16: V773 = 0x20
0xd18: V774 = ADD 0x20 0x20
0xd19: V775 = 0x0
0xd1b: V776 = SHA3 0x0 0x40
0xd1e: S[V776] = S0
0xd21: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xd36: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xd37: V779 = CALLER
0xd38: V780 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4d: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V779
0xd4e: V782 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xd70: V783 = 0x40
0xd72: V784 = M[0x40]
0xd76: M[V784] = S0
0xd77: V785 = 0x20
0xd79: V786 = ADD 0x20 V784
0xd7d: V787 = 0x40
0xd7f: V788 = M[0x40]
0xd82: V789 = SUB V786 V788
0xd84: LOG V788 V789 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V781 V778
0xd85: V790 = 0x1
0xd8d: JUMP S2
0xd8e: JUMPDEST 
0xd8f: V791 = 0x3
0xd91: V792 = S[0x3]
0xd93: JUMP S0
0xd94: JUMPDEST 
0xd95: V793 = 0x0
0xd98: V794 = 0x1
0xd9a: V795 = 0x0
0xd9d: V796 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb2: V797 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xdb3: V798 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc8: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V797
0xdca: M[0x0] = V799
0xdcb: V800 = 0x20
0xdcd: V801 = ADD 0x20 0x0
0xdd0: M[0x20] = 0x1
0xdd1: V802 = 0x20
0xdd3: V803 = ADD 0x20 0x20
0xdd4: V804 = 0x0
0xdd6: V805 = SHA3 0x0 0x40
0xdd7: V806 = S[V805]
0xdd8: V807 = LT V806 S0
0xdd9: V808 = ISZERO V807
0xddb: V809 = ISZERO V808
0xddc: V810 = 0x5fc
0xddf: THROWI V809
---
Entry stack: []
Stack pops: 0
Stack additions: [V733, V728, 0x3e8, V745, S0, 0x1, V792, S0, V808, 0x0, S0, S1, S2]
Exit stack: []

================================

Block 0xde0
[0xde0:0xe60]
---
Predecessors: [0xbfe]
Successors: [0xe61]
---
0xde0 POP
0xde1 DUP2
0xde2 PUSH1 0x2
0xde4 PUSH1 0x0
0xde6 DUP7
0xde7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfc AND
0xdfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe12 AND
0xe13 DUP2
0xe14 MSTORE
0xe15 PUSH1 0x20
0xe17 ADD
0xe18 SWAP1
0xe19 DUP2
0xe1a MSTORE
0xe1b PUSH1 0x20
0xe1d ADD
0xe1e PUSH1 0x0
0xe20 SHA3
0xe21 PUSH1 0x0
0xe23 CALLER
0xe24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe39 AND
0xe3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4f AND
0xe50 DUP2
0xe51 MSTORE
0xe52 PUSH1 0x20
0xe54 ADD
0xe55 SWAP1
0xe56 DUP2
0xe57 MSTORE
0xe58 PUSH1 0x20
0xe5a ADD
0xe5b PUSH1 0x0
0xe5d SHA3
0xe5e SLOAD
0xe5f LT
0xe60 ISZERO
---
0xde2: V811 = 0x2
0xde4: V812 = 0x0
0xde7: V813 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfc: V814 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xdfd: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xe12: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0xe14: M[0x0] = V816
0xe15: V817 = 0x20
0xe17: V818 = ADD 0x20 0x0
0xe1a: M[0x20] = 0x2
0xe1b: V819 = 0x20
0xe1d: V820 = ADD 0x20 0x20
0xe1e: V821 = 0x0
0xe20: V822 = SHA3 0x0 0x40
0xe21: V823 = 0x0
0xe23: V824 = CALLER
0xe24: V825 = 0xffffffffffffffffffffffffffffffffffffffff
0xe39: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V824
0xe3a: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4f: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0xe51: M[0x0] = V828
0xe52: V829 = 0x20
0xe54: V830 = ADD 0x20 0x0
0xe57: M[0x20] = V822
0xe58: V831 = 0x20
0xe5a: V832 = ADD 0x20 0x20
0xe5b: V833 = 0x0
0xe5d: V834 = SHA3 0x0 0x40
0xe5e: V835 = S[V834]
0xe5f: V836 = LT V835 S2
0xe60: V837 = ISZERO V836
---
Entry stack: [S4, S3, S2, 0x0, V808]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V837]
Exit stack: [S4, S3, S2, 0x0, V837]

================================

Block 0xe61
[0xe61:0xe67]
---
Predecessors: [0xde0]
Successors: [0xe68]
---
0xe61 JUMPDEST
0xe62 DUP1
0xe63 ISZERO
0xe64 PUSH2 0x608
0xe67 JUMPI
---
0xe61: JUMPDEST 
0xe63: V838 = ISZERO V837
0xe64: V839 = 0x608
0xe67: THROWI V838
---
Entry stack: [S4, S3, S2, 0x0, V837]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, 0x0, V837]

================================

Block 0xe68
[0xe68:0xe6c]
---
Predecessors: [0xe61]
Successors: [0xe6d]
---
0xe68 POP
0xe69 PUSH1 0x0
0xe6b DUP3
0xe6c GT
---
0xe69: V840 = 0x0
0xe6c: V841 = GT S2 0x0
---
Entry stack: [S4, S3, S2, 0x0, V837]
Stack pops: 3
Stack additions: [S2, S1, V841]
Exit stack: [S4, S3, S2, 0x0, V841]

================================

Block 0xe6d
[0xe6d:0xe72]
---
Predecessors: [0xe68]
Successors: [0xe73]
---
0xe6d JUMPDEST
0xe6e ISZERO
0xe6f PUSH2 0x79f
0xe72 JUMPI
---
0xe6d: JUMPDEST 
0xe6e: V842 = ISZERO V841
0xe6f: V843 = 0x79f
0xe72: THROWI V842
---
Entry stack: [S4, S3, S2, 0x0, V841]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, 0x0]

================================

Block 0xe73
[0xe73:0x1008]
---
Predecessors: [0xe6d]
Successors: [0x1009]
---
0xe73 DUP2
0xe74 PUSH1 0x1
0xe76 PUSH1 0x0
0xe78 DUP6
0xe79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8e AND
0xe8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea4 AND
0xea5 DUP2
0xea6 MSTORE
0xea7 PUSH1 0x20
0xea9 ADD
0xeaa SWAP1
0xeab DUP2
0xeac MSTORE
0xead PUSH1 0x20
0xeaf ADD
0xeb0 PUSH1 0x0
0xeb2 SHA3
0xeb3 PUSH1 0x0
0xeb5 DUP3
0xeb6 DUP3
0xeb7 SLOAD
0xeb8 ADD
0xeb9 SWAP3
0xeba POP
0xebb POP
0xebc DUP2
0xebd SWAP1
0xebe SSTORE
0xebf POP
0xec0 DUP2
0xec1 PUSH1 0x1
0xec3 PUSH1 0x0
0xec5 DUP7
0xec6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedb AND
0xedc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef1 AND
0xef2 DUP2
0xef3 MSTORE
0xef4 PUSH1 0x20
0xef6 ADD
0xef7 SWAP1
0xef8 DUP2
0xef9 MSTORE
0xefa PUSH1 0x20
0xefc ADD
0xefd PUSH1 0x0
0xeff SHA3
0xf00 PUSH1 0x0
0xf02 DUP3
0xf03 DUP3
0xf04 SLOAD
0xf05 SUB
0xf06 SWAP3
0xf07 POP
0xf08 POP
0xf09 DUP2
0xf0a SWAP1
0xf0b SSTORE
0xf0c POP
0xf0d DUP2
0xf0e PUSH1 0x2
0xf10 PUSH1 0x0
0xf12 DUP7
0xf13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf28 AND
0xf29 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3e AND
0xf3f DUP2
0xf40 MSTORE
0xf41 PUSH1 0x20
0xf43 ADD
0xf44 SWAP1
0xf45 DUP2
0xf46 MSTORE
0xf47 PUSH1 0x20
0xf49 ADD
0xf4a PUSH1 0x0
0xf4c SHA3
0xf4d PUSH1 0x0
0xf4f CALLER
0xf50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf65 AND
0xf66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7b AND
0xf7c DUP2
0xf7d MSTORE
0xf7e PUSH1 0x20
0xf80 ADD
0xf81 SWAP1
0xf82 DUP2
0xf83 MSTORE
0xf84 PUSH1 0x20
0xf86 ADD
0xf87 PUSH1 0x0
0xf89 SHA3
0xf8a PUSH1 0x0
0xf8c DUP3
0xf8d DUP3
0xf8e SLOAD
0xf8f SUB
0xf90 SWAP3
0xf91 POP
0xf92 POP
0xf93 DUP2
0xf94 SWAP1
0xf95 SSTORE
0xf96 POP
0xf97 DUP3
0xf98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfad AND
0xfae DUP5
0xfaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc4 AND
0xfc5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xfe6 DUP5
0xfe7 PUSH1 0x40
0xfe9 MLOAD
0xfea DUP1
0xfeb DUP3
0xfec DUP2
0xfed MSTORE
0xfee PUSH1 0x20
0xff0 ADD
0xff1 SWAP2
0xff2 POP
0xff3 POP
0xff4 PUSH1 0x40
0xff6 MLOAD
0xff7 DUP1
0xff8 SWAP2
0xff9 SUB
0xffa SWAP1
0xffb LOG3
0xffc PUSH1 0x1
0xffe SWAP1
0xfff POP
0x1000 PUSH2 0x7a4
0x1003 JUMP
0x1004 JUMPDEST
0x1005 PUSH1 0x0
0x1007 SWAP1
0x1008 POP
---
0xe74: V844 = 0x1
0xe76: V845 = 0x0
0xe79: V846 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8e: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xe8f: V848 = 0xffffffffffffffffffffffffffffffffffffffff
0xea4: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0xea6: M[0x0] = V849
0xea7: V850 = 0x20
0xea9: V851 = ADD 0x20 0x0
0xeac: M[0x20] = 0x1
0xead: V852 = 0x20
0xeaf: V853 = ADD 0x20 0x20
0xeb0: V854 = 0x0
0xeb2: V855 = SHA3 0x0 0x40
0xeb3: V856 = 0x0
0xeb7: V857 = S[V855]
0xeb8: V858 = ADD V857 S1
0xebe: S[V855] = V858
0xec1: V859 = 0x1
0xec3: V860 = 0x0
0xec6: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xedb: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xedc: V863 = 0xffffffffffffffffffffffffffffffffffffffff
0xef1: V864 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0xef3: M[0x0] = V864
0xef4: V865 = 0x20
0xef6: V866 = ADD 0x20 0x0
0xef9: M[0x20] = 0x1
0xefa: V867 = 0x20
0xefc: V868 = ADD 0x20 0x20
0xefd: V869 = 0x0
0xeff: V870 = SHA3 0x0 0x40
0xf00: V871 = 0x0
0xf04: V872 = S[V870]
0xf05: V873 = SUB V872 S1
0xf0b: S[V870] = V873
0xf0e: V874 = 0x2
0xf10: V875 = 0x0
0xf13: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xf28: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf29: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3e: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0xf40: M[0x0] = V879
0xf41: V880 = 0x20
0xf43: V881 = ADD 0x20 0x0
0xf46: M[0x20] = 0x2
0xf47: V882 = 0x20
0xf49: V883 = ADD 0x20 0x20
0xf4a: V884 = 0x0
0xf4c: V885 = SHA3 0x0 0x40
0xf4d: V886 = 0x0
0xf4f: V887 = CALLER
0xf50: V888 = 0xffffffffffffffffffffffffffffffffffffffff
0xf65: V889 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xf66: V890 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7b: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V889
0xf7d: M[0x0] = V891
0xf7e: V892 = 0x20
0xf80: V893 = ADD 0x20 0x0
0xf83: M[0x20] = V885
0xf84: V894 = 0x20
0xf86: V895 = ADD 0x20 0x20
0xf87: V896 = 0x0
0xf89: V897 = SHA3 0x0 0x40
0xf8a: V898 = 0x0
0xf8e: V899 = S[V897]
0xf8f: V900 = SUB V899 S1
0xf95: S[V897] = V900
0xf98: V901 = 0xffffffffffffffffffffffffffffffffffffffff
0xfad: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xfaf: V903 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc4: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xfc5: V905 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xfe7: V906 = 0x40
0xfe9: V907 = M[0x40]
0xfed: M[V907] = S1
0xfee: V908 = 0x20
0xff0: V909 = ADD 0x20 V907
0xff4: V910 = 0x40
0xff6: V911 = M[0x40]
0xff9: V912 = SUB V909 V911
0xffb: LOG V911 V912 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V904 V902
0xffc: V913 = 0x1
0x1000: V914 = 0x7a4
0x1003: THROW 
0x1004: JUMPDEST 
0x1005: V915 = 0x0
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x0]
Exit stack: []

================================

Block 0x1009
[0x1009:0x10e2]
---
Predecessors: [0xe73]
Successors: [0x10e3]
---
0x1009 JUMPDEST
0x100a SWAP4
0x100b SWAP3
0x100c POP
0x100d POP
0x100e POP
0x100f JUMP
0x1010 JUMPDEST
0x1011 PUSH1 0x12
0x1013 DUP2
0x1014 JUMP
0x1015 JUMPDEST
0x1016 PUSH1 0x0
0x1018 PUSH1 0x1
0x101a PUSH1 0x0
0x101c DUP4
0x101d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1032 AND
0x1033 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1048 AND
0x1049 DUP2
0x104a MSTORE
0x104b PUSH1 0x20
0x104d ADD
0x104e SWAP1
0x104f DUP2
0x1050 MSTORE
0x1051 PUSH1 0x20
0x1053 ADD
0x1054 PUSH1 0x0
0x1056 SHA3
0x1057 SLOAD
0x1058 SWAP1
0x1059 POP
0x105a SWAP2
0x105b SWAP1
0x105c POP
0x105d JUMP
0x105e JUMPDEST
0x105f PUSH1 0x40
0x1061 DUP1
0x1062 MLOAD
0x1063 SWAP1
0x1064 DUP2
0x1065 ADD
0x1066 PUSH1 0x40
0x1068 MSTORE
0x1069 DUP1
0x106a PUSH1 0x5
0x106c DUP2
0x106d MSTORE
0x106e PUSH1 0x20
0x1070 ADD
0x1071 PUSH32 0x5854494d45000000000000000000000000000000000000000000000000000000
0x1092 DUP2
0x1093 MSTORE
0x1094 POP
0x1095 DUP2
0x1096 JUMP
0x1097 JUMPDEST
0x1098 PUSH1 0x0
0x109a DUP2
0x109b PUSH1 0x1
0x109d PUSH1 0x0
0x109f CALLER
0x10a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b5 AND
0x10b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10cb AND
0x10cc DUP2
0x10cd MSTORE
0x10ce PUSH1 0x20
0x10d0 ADD
0x10d1 SWAP1
0x10d2 DUP2
0x10d3 MSTORE
0x10d4 PUSH1 0x20
0x10d6 ADD
0x10d7 PUSH1 0x0
0x10d9 SHA3
0x10da SLOAD
0x10db LT
0x10dc ISZERO
0x10dd DUP1
0x10de ISZERO
0x10df PUSH2 0x883
0x10e2 JUMPI
---
0x1009: JUMPDEST 
0x100f: JUMP S4
0x1010: JUMPDEST 
0x1011: V916 = 0x12
0x1014: JUMP S0
0x1015: JUMPDEST 
0x1016: V917 = 0x0
0x1018: V918 = 0x1
0x101a: V919 = 0x0
0x101d: V920 = 0xffffffffffffffffffffffffffffffffffffffff
0x1032: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1033: V922 = 0xffffffffffffffffffffffffffffffffffffffff
0x1048: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V921
0x104a: M[0x0] = V923
0x104b: V924 = 0x20
0x104d: V925 = ADD 0x20 0x0
0x1050: M[0x20] = 0x1
0x1051: V926 = 0x20
0x1053: V927 = ADD 0x20 0x20
0x1054: V928 = 0x0
0x1056: V929 = SHA3 0x0 0x40
0x1057: V930 = S[V929]
0x105d: JUMP S1
0x105e: JUMPDEST 
0x105f: V931 = 0x40
0x1062: V932 = M[0x40]
0x1065: V933 = ADD V932 0x40
0x1066: V934 = 0x40
0x1068: M[0x40] = V933
0x106a: V935 = 0x5
0x106d: M[V932] = 0x5
0x106e: V936 = 0x20
0x1070: V937 = ADD 0x20 V932
0x1071: V938 = 0x5854494d45000000000000000000000000000000000000000000000000000000
0x1093: M[V937] = 0x5854494d45000000000000000000000000000000000000000000000000000000
0x1096: JUMP S0
0x1097: JUMPDEST 
0x1098: V939 = 0x0
0x109b: V940 = 0x1
0x109d: V941 = 0x0
0x109f: V942 = CALLER
0x10a0: V943 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b5: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V942
0x10b6: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0x10cb: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V944
0x10cd: M[0x0] = V946
0x10ce: V947 = 0x20
0x10d0: V948 = ADD 0x20 0x0
0x10d3: M[0x20] = 0x1
0x10d4: V949 = 0x20
0x10d6: V950 = ADD 0x20 0x20
0x10d7: V951 = 0x0
0x10d9: V952 = SHA3 0x0 0x40
0x10da: V953 = S[V952]
0x10db: V954 = LT V953 S0
0x10dc: V955 = ISZERO V954
0x10de: V956 = ISZERO V955
0x10df: V957 = 0x883
0x10e2: THROWI V956
---
Entry stack: [0x0]
Stack pops: 60
Stack additions: [V955, 0x0, S0]
Exit stack: []

================================

Block 0x10e3
[0x10e3:0x10e7]
---
Predecessors: [0x1009]
Successors: [0x10e8]
---
0x10e3 POP
0x10e4 PUSH1 0x0
0x10e6 DUP3
0x10e7 GT
---
0x10e4: V958 = 0x0
0x10e7: V959 = GT S2 0x0
---
Entry stack: [S2, 0x0, V955]
Stack pops: 3
Stack additions: [S2, S1, V959]
Exit stack: [S2, 0x0, V959]

================================

Block 0x10e8
[0x10e8:0x10ed]
---
Predecessors: [0x10e3]
Successors: [0x10ee]
---
0x10e8 JUMPDEST
0x10e9 ISZERO
0x10ea PUSH2 0x990
0x10ed JUMPI
---
0x10e8: JUMPDEST 
0x10e9: V960 = ISZERO V959
0x10ea: V961 = 0x990
0x10ed: THROWI V960
---
Entry stack: [S2, 0x0, V959]
Stack pops: 1
Stack additions: []
Exit stack: [S2, 0x0]

================================

Block 0x10ee
[0x10ee:0x11f9]
---
Predecessors: [0x10e8]
Successors: [0x11fa]
---
0x10ee DUP2
0x10ef PUSH1 0x1
0x10f1 PUSH1 0x0
0x10f3 CALLER
0x10f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1109 AND
0x110a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111f AND
0x1120 DUP2
0x1121 MSTORE
0x1122 PUSH1 0x20
0x1124 ADD
0x1125 SWAP1
0x1126 DUP2
0x1127 MSTORE
0x1128 PUSH1 0x20
0x112a ADD
0x112b PUSH1 0x0
0x112d SHA3
0x112e PUSH1 0x0
0x1130 DUP3
0x1131 DUP3
0x1132 SLOAD
0x1133 SUB
0x1134 SWAP3
0x1135 POP
0x1136 POP
0x1137 DUP2
0x1138 SWAP1
0x1139 SSTORE
0x113a POP
0x113b DUP2
0x113c PUSH1 0x1
0x113e PUSH1 0x0
0x1140 DUP6
0x1141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1156 AND
0x1157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116c AND
0x116d DUP2
0x116e MSTORE
0x116f PUSH1 0x20
0x1171 ADD
0x1172 SWAP1
0x1173 DUP2
0x1174 MSTORE
0x1175 PUSH1 0x20
0x1177 ADD
0x1178 PUSH1 0x0
0x117a SHA3
0x117b PUSH1 0x0
0x117d DUP3
0x117e DUP3
0x117f SLOAD
0x1180 ADD
0x1181 SWAP3
0x1182 POP
0x1183 POP
0x1184 DUP2
0x1185 SWAP1
0x1186 SSTORE
0x1187 POP
0x1188 DUP3
0x1189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119e AND
0x119f CALLER
0x11a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b5 AND
0x11b6 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x11d7 DUP5
0x11d8 PUSH1 0x40
0x11da MLOAD
0x11db DUP1
0x11dc DUP3
0x11dd DUP2
0x11de MSTORE
0x11df PUSH1 0x20
0x11e1 ADD
0x11e2 SWAP2
0x11e3 POP
0x11e4 POP
0x11e5 PUSH1 0x40
0x11e7 MLOAD
0x11e8 DUP1
0x11e9 SWAP2
0x11ea SUB
0x11eb SWAP1
0x11ec LOG3
0x11ed PUSH1 0x1
0x11ef SWAP1
0x11f0 POP
0x11f1 PUSH2 0x995
0x11f4 JUMP
0x11f5 JUMPDEST
0x11f6 PUSH1 0x0
0x11f8 SWAP1
0x11f9 POP
---
0x10ef: V962 = 0x1
0x10f1: V963 = 0x0
0x10f3: V964 = CALLER
0x10f4: V965 = 0xffffffffffffffffffffffffffffffffffffffff
0x1109: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V964
0x110a: V967 = 0xffffffffffffffffffffffffffffffffffffffff
0x111f: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V966
0x1121: M[0x0] = V968
0x1122: V969 = 0x20
0x1124: V970 = ADD 0x20 0x0
0x1127: M[0x20] = 0x1
0x1128: V971 = 0x20
0x112a: V972 = ADD 0x20 0x20
0x112b: V973 = 0x0
0x112d: V974 = SHA3 0x0 0x40
0x112e: V975 = 0x0
0x1132: V976 = S[V974]
0x1133: V977 = SUB V976 S1
0x1139: S[V974] = V977
0x113c: V978 = 0x1
0x113e: V979 = 0x0
0x1141: V980 = 0xffffffffffffffffffffffffffffffffffffffff
0x1156: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1157: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0x116c: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0x116e: M[0x0] = V983
0x116f: V984 = 0x20
0x1171: V985 = ADD 0x20 0x0
0x1174: M[0x20] = 0x1
0x1175: V986 = 0x20
0x1177: V987 = ADD 0x20 0x20
0x1178: V988 = 0x0
0x117a: V989 = SHA3 0x0 0x40
0x117b: V990 = 0x0
0x117f: V991 = S[V989]
0x1180: V992 = ADD V991 S1
0x1186: S[V989] = V992
0x1189: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0x119e: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x119f: V995 = CALLER
0x11a0: V996 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b5: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0x11b6: V998 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x11d8: V999 = 0x40
0x11da: V1000 = M[0x40]
0x11de: M[V1000] = S1
0x11df: V1001 = 0x20
0x11e1: V1002 = ADD 0x20 V1000
0x11e5: V1003 = 0x40
0x11e7: V1004 = M[0x40]
0x11ea: V1005 = SUB V1002 V1004
0x11ec: LOG V1004 V1005 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V997 V994
0x11ed: V1006 = 0x1
0x11f1: V1007 = 0x995
0x11f4: THROW 
0x11f5: JUMPDEST 
0x11f6: V1008 = 0x0
---
Entry stack: [S1, 0x0]
Stack pops: 3
Stack additions: [0x0]
Exit stack: []

================================

Block 0x11fa
[0x11fa:0x12cb]
---
Predecessors: [0x10ee]
Successors: []
---
0x11fa JUMPDEST
0x11fb SWAP3
0x11fc SWAP2
0x11fd POP
0x11fe POP
0x11ff JUMP
0x1200 JUMPDEST
0x1201 PUSH1 0x0
0x1203 PUSH1 0x2
0x1205 PUSH1 0x0
0x1207 DUP5
0x1208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121d AND
0x121e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1233 AND
0x1234 DUP2
0x1235 MSTORE
0x1236 PUSH1 0x20
0x1238 ADD
0x1239 SWAP1
0x123a DUP2
0x123b MSTORE
0x123c PUSH1 0x20
0x123e ADD
0x123f PUSH1 0x0
0x1241 SHA3
0x1242 PUSH1 0x0
0x1244 DUP4
0x1245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125a AND
0x125b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1270 AND
0x1271 DUP2
0x1272 MSTORE
0x1273 PUSH1 0x20
0x1275 ADD
0x1276 SWAP1
0x1277 DUP2
0x1278 MSTORE
0x1279 PUSH1 0x20
0x127b ADD
0x127c PUSH1 0x0
0x127e SHA3
0x127f SLOAD
0x1280 SWAP1
0x1281 POP
0x1282 SWAP3
0x1283 SWAP2
0x1284 POP
0x1285 POP
0x1286 JUMP
0x1287 STOP
0x1288 LOG1
0x1289 PUSH6 0x627a7a723058
0x1290 SHA3
0x1291 PUSH20 0x41a4fdf04d894127756e7e40bb69a698e3411d3e
0x12a6 MISSING 0xfb
0x12a7 POP
0x12a8 LOG3
0x12a9 BALANCE
0x12aa ISZERO
0x12ab PUSH32 0x20d411c6a90029
---
0x11fa: JUMPDEST 
0x11ff: JUMP S3
0x1200: JUMPDEST 
0x1201: V1009 = 0x0
0x1203: V1010 = 0x2
0x1205: V1011 = 0x0
0x1208: V1012 = 0xffffffffffffffffffffffffffffffffffffffff
0x121d: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x121e: V1014 = 0xffffffffffffffffffffffffffffffffffffffff
0x1233: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V1013
0x1235: M[0x0] = V1015
0x1236: V1016 = 0x20
0x1238: V1017 = ADD 0x20 0x0
0x123b: M[0x20] = 0x2
0x123c: V1018 = 0x20
0x123e: V1019 = ADD 0x20 0x20
0x123f: V1020 = 0x0
0x1241: V1021 = SHA3 0x0 0x40
0x1242: V1022 = 0x0
0x1245: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0x125a: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x125b: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0x1270: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0x1272: M[0x0] = V1026
0x1273: V1027 = 0x20
0x1275: V1028 = ADD 0x20 0x0
0x1278: M[0x20] = V1021
0x1279: V1029 = 0x20
0x127b: V1030 = ADD 0x20 0x20
0x127c: V1031 = 0x0
0x127e: V1032 = SHA3 0x0 0x40
0x127f: V1033 = S[V1032]
0x1286: JUMP S2
0x1287: STOP 
0x1288: LOG S0 S1 S2
0x1289: V1034 = 0x627a7a723058
0x1290: V1035 = SHA3 0x627a7a723058 S3
0x1291: V1036 = 0x41a4fdf04d894127756e7e40bb69a698e3411d3e
0x12a6: MISSING 0xfb
0x12a8: LOG S1 S2 S3 S4 S5
0x12a9: V1037 = BALANCE S6
0x12aa: V1038 = ISZERO V1037
0x12ab: V1039 = 0x20d411c6a90029
---
Entry stack: [0x0]
Stack pops: 50
Stack additions: [0x20d411c6a90029, V1038]
Exit stack: []

================================

Function 0:
Public function signature: 0x95ea7b3
Entry block: 0x7d
Exit block: 0xbd
Body: 0x7d, 0x84, 0x88, 0xbd, 0x28c

Function 1:
Public function signature: 0x18160ddd
Entry block: 0xd7
Exit block: 0xea
Body: 0xd7, 0xde, 0xe2, 0xea, 0x37e

Function 2:
Public function signature: 0x23b872dd
Entry block: 0x100
Exit block: 0x15f
Body: 0x100, 0x107, 0x10b, 0x15f, 0x384, 0x3d0, 0x451, 0x458, 0x45d, 0x463, 0x5f4, 0x5f9

Function 3:
Public function signature: 0x70a08231
Entry block: 0x179
Exit block: 0x1b0
Body: 0x179, 0x180, 0x184, 0x1b0, 0x600

Function 4:
Public function signature: 0xa9059cbb
Entry block: 0x1c6
Exit block: 0x206
Body: 0x1c6, 0x1cd, 0x1d1, 0x206, 0x649, 0x695, 0x69a, 0x6a0, 0x7a7, 0x7ac

Function 5:
Public function signature: 0xdd62ed3e
Entry block: 0x220
Exit block: 0x276
Body: 0x220, 0x227, 0x22b, 0x276, 0x7b2

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

