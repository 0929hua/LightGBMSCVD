Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x42cb150
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x42cb150
0x3c: V13 = EQ 0x42cb150 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcc]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0xcc
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0xcc
0x4b: JUMPI 0xcc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x123]
---
0x4c DUP1
0x4d PUSH4 0xfc0c546a
0x52 EQ
0x53 PUSH2 0x123
0x56 JUMPI
---
0x4d: V18 = 0xfc0c546a
0x52: V19 = EQ 0xfc0c546a V11
0x53: V20 = 0x123
0x56: JUMPI 0x123 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0xc9]
---
Predecessors: [0x5c]
Successors: [0x17a]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0xca
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATASIZE
0x71 SUB
0x72 DUP2
0x73 ADD
0x74 SWAP1
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP3
0x7e SWAP2
0x7f SWAP1
0x80 DUP1
0x81 CALLDATALOAD
0x82 SWAP1
0x83 PUSH1 0x20
0x85 ADD
0x86 SWAP1
0x87 DUP3
0x88 ADD
0x89 DUP1
0x8a CALLDATALOAD
0x8b SWAP1
0x8c PUSH1 0x20
0x8e ADD
0x8f SWAP1
0x90 DUP1
0x91 DUP1
0x92 PUSH1 0x20
0x94 MUL
0x95 PUSH1 0x20
0x97 ADD
0x98 PUSH1 0x40
0x9a MLOAD
0x9b SWAP1
0x9c DUP2
0x9d ADD
0x9e PUSH1 0x40
0xa0 MSTORE
0xa1 DUP1
0xa2 SWAP4
0xa3 SWAP3
0xa4 SWAP2
0xa5 SWAP1
0xa6 DUP2
0xa7 DUP2
0xa8 MSTORE
0xa9 PUSH1 0x20
0xab ADD
0xac DUP4
0xad DUP4
0xae PUSH1 0x20
0xb0 MUL
0xb1 DUP1
0xb2 DUP3
0xb3 DUP5
0xb4 CALLDATACOPY
0xb5 DUP3
0xb6 ADD
0xb7 SWAP2
0xb8 POP
0xb9 POP
0xba POP
0xbb POP
0xbc POP
0xbd POP
0xbe SWAP2
0xbf SWAP3
0xc0 SWAP2
0xc1 SWAP3
0xc2 SWAP1
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 PUSH2 0x17a
0xc9 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0xca
0x6d: V27 = 0x4
0x70: V28 = CALLDATASIZE
0x71: V29 = SUB V28 0x4
0x73: V30 = ADD 0x4 V29
0x77: V31 = CALLDATALOAD 0x4
0x79: V32 = 0x20
0x7b: V33 = ADD 0x20 0x4
0x81: V34 = CALLDATALOAD 0x24
0x83: V35 = 0x20
0x85: V36 = ADD 0x20 0x24
0x88: V37 = ADD 0x4 V34
0x8a: V38 = CALLDATALOAD V37
0x8c: V39 = 0x20
0x8e: V40 = ADD 0x20 V37
0x92: V41 = 0x20
0x94: V42 = MUL 0x20 V38
0x95: V43 = 0x20
0x97: V44 = ADD 0x20 V42
0x98: V45 = 0x40
0x9a: V46 = M[0x40]
0x9d: V47 = ADD V46 V44
0x9e: V48 = 0x40
0xa0: M[0x40] = V47
0xa8: M[V46] = V38
0xa9: V49 = 0x20
0xab: V50 = ADD 0x20 V46
0xae: V51 = 0x20
0xb0: V52 = MUL 0x20 V38
0xb4: CALLDATACOPY V50 V40 V52
0xb6: V53 = ADD V50 V52
0xc6: V54 = 0x17a
0xc9: JUMP 0x17a
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0xca, V31, V46]
Exit stack: [V11, 0xca, V31, V46]

================================

Block 0xca
[0xca:0xcb]
---
Predecessors: [0x31a]
Successors: []
---
0xca JUMPDEST
0xcb STOP
---
0xca: JUMPDEST 
0xcb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x41]
Successors: [0xd4, 0xd8]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcc: JUMPDEST 
0xcd: V55 = CALLVALUE
0xcf: V56 = ISZERO V55
0xd0: V57 = 0xd8
0xd3: JUMPI 0xd8 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcc]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V58 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xd8
[0xd8:0xe0]
---
Predecessors: [0xcc]
Successors: [0x31f]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH2 0xe1
0xdd PUSH2 0x31f
0xe0 JUMP
---
0xd8: JUMPDEST 
0xda: V59 = 0xe1
0xdd: V60 = 0x31f
0xe0: JUMP 0x31f
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0x122]
---
Predecessors: [0x31f]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 DUP3
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 AND
0x113 DUP2
0x114 MSTORE
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP2
0x119 POP
0x11a POP
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f SWAP2
0x120 SUB
0x121 SWAP1
0x122 RETURN
---
0xe1: JUMPDEST 
0xe2: V61 = 0x40
0xe4: V62 = M[0x40]
0xe7: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0xfd: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x114: M[V62] = V66
0x115: V67 = 0x20
0x117: V68 = ADD 0x20 V62
0x11b: V69 = 0x40
0x11d: V70 = M[0x40]
0x120: V71 = SUB V68 V70
0x122: RETURN V70 V71
---
Entry stack: [V11, 0xe1, V198]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x4c]
Successors: [0x12b, 0x12f]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x123: JUMPDEST 
0x124: V72 = CALLVALUE
0x126: V73 = ISZERO V72
0x127: V74 = 0x12f
0x12a: JUMPI 0x12f V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V11, V72]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x123]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V75 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72]

================================

Block 0x12f
[0x12f:0x137]
---
Predecessors: [0x123]
Successors: [0x345]
---
0x12f JUMPDEST
0x130 POP
0x131 PUSH2 0x138
0x134 PUSH2 0x345
0x137 JUMP
---
0x12f: JUMPDEST 
0x131: V76 = 0x138
0x134: V77 = 0x345
0x137: JUMP 0x345
---
Entry stack: [V11, V72]
Stack pops: 1
Stack additions: [0x138]
Exit stack: [V11, 0x138]

================================

Block 0x138
[0x138:0x179]
---
Predecessors: [0x345]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP2
0x170 POP
0x171 POP
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 SWAP2
0x177 SUB
0x178 SWAP1
0x179 RETURN
---
0x138: JUMPDEST 
0x139: V78 = 0x40
0x13b: V79 = M[0x40]
0x13e: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x154: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x16b: M[V79] = V83
0x16c: V84 = 0x20
0x16e: V85 = ADD 0x20 V79
0x172: V86 = 0x40
0x174: V87 = M[0x40]
0x177: V88 = SUB V85 V87
0x179: RETURN V87 V88
---
Entry stack: [V11, 0x138, V205]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x138]

================================

Block 0x17a
[0x17a:0x1d3]
---
Predecessors: [0x68]
Successors: [0x1d4, 0x1d8]
---
0x17a JUMPDEST
0x17b PUSH1 0x0
0x17d PUSH1 0x1
0x17f PUSH1 0x0
0x181 SWAP1
0x182 SLOAD
0x183 SWAP1
0x184 PUSH2 0x100
0x187 EXP
0x188 SWAP1
0x189 DIV
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b5 AND
0x1b6 CALLER
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd EQ
0x1ce ISZERO
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x17a: JUMPDEST 
0x17b: V89 = 0x0
0x17d: V90 = 0x1
0x17f: V91 = 0x0
0x182: V92 = S[0x1]
0x184: V93 = 0x100
0x187: V94 = EXP 0x100 0x0
0x189: V95 = DIV V92 0x1
0x18a: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1a0: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1b6: V100 = CALLER
0x1b7: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1cd: V103 = EQ V102 V99
0x1ce: V104 = ISZERO V103
0x1cf: V105 = ISZERO V104
0x1d0: V106 = 0x1d8
0x1d3: JUMPI 0x1d8 V105
---
Entry stack: [V11, 0xca, V31, V46]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xca, V31, V46, 0x0]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x17a]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V107 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xca, V31, V46, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V31, V46, 0x0]

================================

Block 0x1d8
[0x1d8:0x1e3]
---
Predecessors: [0x17a]
Successors: [0x1e4, 0x1e8]
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x0
0x1db DUP4
0x1dc EQ
0x1dd ISZERO
0x1de ISZERO
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V108 = 0x0
0x1dc: V109 = EQ V31 0x0
0x1dd: V110 = ISZERO V109
0x1de: V111 = ISZERO V110
0x1df: V112 = ISZERO V111
0x1e0: V113 = 0x1e8
0x1e3: JUMPI 0x1e8 V112
---
Entry stack: [V11, 0xca, V31, V46, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xca, V31, V46, 0x0]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1d8]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V114 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xca, V31, V46, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V31, V46, 0x0]

================================

Block 0x1e8
[0x1e8:0x1ec]
---
Predecessors: [0x1d8]
Successors: [0x1ed]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb SWAP1
0x1ec POP
---
0x1e8: JUMPDEST 
0x1e9: V115 = 0x0
---
Entry stack: [V11, 0xca, V31, V46, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xca, V31, V46, 0x0]

================================

Block 0x1ed
[0x1ed:0x1f6]
---
Predecessors: [0x1e8, 0x2fb]
Successors: [0x1f7, 0x31a]
---
0x1ed JUMPDEST
0x1ee DUP2
0x1ef MLOAD
0x1f0 DUP2
0x1f1 LT
0x1f2 ISZERO
0x1f3 PUSH2 0x31a
0x1f6 JUMPI
---
0x1ed: JUMPDEST 
0x1ef: V116 = M[V46]
0x1f1: V117 = LT S0 V116
0x1f2: V118 = ISZERO V117
0x1f3: V119 = 0x31a
0x1f6: JUMPI 0x31a V118
---
Entry stack: [V11, 0xca, V31, V46, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xca, V31, V46, S0]

================================

Block 0x1f7
[0x1f7:0x23f]
---
Predecessors: [0x1ed]
Successors: [0x240, 0x241]
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa SWAP1
0x1fb SLOAD
0x1fc SWAP1
0x1fd PUSH2 0x100
0x200 EXP
0x201 SWAP1
0x202 DIV
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 AND
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f PUSH4 0xa9059cbb
0x234 DUP4
0x235 DUP4
0x236 DUP2
0x237 MLOAD
0x238 DUP2
0x239 LT
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x241
0x23f JUMPI
---
0x1f7: V120 = 0x0
0x1fb: V121 = S[0x0]
0x1fd: V122 = 0x100
0x200: V123 = EXP 0x100 0x0
0x202: V124 = DIV V121 0x1
0x203: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x219: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x22f: V129 = 0xa9059cbb
0x237: V130 = M[V46]
0x239: V131 = LT S0 V130
0x23a: V132 = ISZERO V131
0x23b: V133 = ISZERO V132
0x23c: V134 = 0x241
0x23f: JUMPI 0x241 V133
---
Entry stack: [V11, 0xca, V31, V46, S0]
Stack pops: 2
Stack additions: [S1, S0, V128, 0xa9059cbb, S1, S0]
Exit stack: [V11, 0xca, V31, V46, S0, V128, 0xa9059cbb, V46, S0]

================================

Block 0x240
[0x240:0x240]
---
Predecessors: [0x1f7]
Successors: []
---
0x240 INVALID
---
0x240: INVALID 
---
Entry stack: [V11, 0xca, V31, V46, S4, V128, 0xa9059cbb, V46, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V31, V46, S4, V128, 0xa9059cbb, V46, S0]

================================

Block 0x241
[0x241:0x2cc]
---
Predecessors: [0x1f7]
Successors: [0x2cd, 0x2d1]
---
0x241 JUMPDEST
0x242 SWAP1
0x243 PUSH1 0x20
0x245 ADD
0x246 SWAP1
0x247 PUSH1 0x20
0x249 MUL
0x24a ADD
0x24b MLOAD
0x24c DUP6
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP4
0x251 PUSH4 0xffffffff
0x256 AND
0x257 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x275 MUL
0x276 DUP2
0x277 MSTORE
0x278 PUSH1 0x4
0x27a ADD
0x27b DUP1
0x27c DUP4
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae DUP3
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x20
0x2b3 ADD
0x2b4 SWAP3
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 PUSH1 0x20
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be DUP4
0x2bf SUB
0x2c0 DUP2
0x2c1 PUSH1 0x0
0x2c3 DUP8
0x2c4 DUP1
0x2c5 EXTCODESIZE
0x2c6 ISZERO
0x2c7 DUP1
0x2c8 ISZERO
0x2c9 PUSH2 0x2d1
0x2cc JUMPI
---
0x241: JUMPDEST 
0x243: V135 = 0x20
0x245: V136 = ADD 0x20 V46
0x247: V137 = 0x20
0x249: V138 = MUL 0x20 S0
0x24a: V139 = ADD V138 V136
0x24b: V140 = M[V139]
0x24d: V141 = 0x40
0x24f: V142 = M[0x40]
0x251: V143 = 0xffffffff
0x256: V144 = AND 0xffffffff 0xa9059cbb
0x257: V145 = 0x100000000000000000000000000000000000000000000000000000000
0x275: V146 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x277: M[V142] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x278: V147 = 0x4
0x27a: V148 = ADD 0x4 V142
0x27d: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x293: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2aa: M[V148] = V152
0x2ab: V153 = 0x20
0x2ad: V154 = ADD 0x20 V148
0x2b0: M[V154] = V31
0x2b1: V155 = 0x20
0x2b3: V156 = ADD 0x20 V154
0x2b8: V157 = 0x20
0x2ba: V158 = 0x40
0x2bc: V159 = M[0x40]
0x2bf: V160 = SUB V156 V159
0x2c1: V161 = 0x0
0x2c5: V162 = EXTCODESIZE V128
0x2c6: V163 = ISZERO V162
0x2c8: V164 = ISZERO V163
0x2c9: V165 = 0x2d1
0x2cc: JUMPI 0x2d1 V164
---
Entry stack: [V11, 0xca, V31, V46, S4, V128, 0xa9059cbb, V46, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V156, 0x20, V159, V160, V159, 0x0, S3, V163]
Exit stack: [V11, 0xca, V31, V46, S4, V128, 0xa9059cbb, V156, 0x20, V159, V160, V159, 0x0, V128, V163]

================================

Block 0x2cd
[0x2cd:0x2d0]
---
Predecessors: [0x241]
Successors: []
---
0x2cd PUSH1 0x0
0x2cf DUP1
0x2d0 REVERT
---
0x2cd: V166 = 0x0
0x2d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xca, V31, V46, S10, V128, 0xa9059cbb, V156, 0x20, V159, V160, V159, 0x0, V128, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V31, V46, S10, V128, 0xa9059cbb, V156, 0x20, V159, V160, V159, 0x0, V128, V163]

================================

Block 0x2d1
[0x2d1:0x2db]
---
Predecessors: [0x241]
Successors: [0x2dc, 0x2e5]
---
0x2d1 JUMPDEST
0x2d2 POP
0x2d3 GAS
0x2d4 CALL
0x2d5 ISZERO
0x2d6 DUP1
0x2d7 ISZERO
0x2d8 PUSH2 0x2e5
0x2db JUMPI
---
0x2d1: JUMPDEST 
0x2d3: V167 = GAS
0x2d4: V168 = CALL V167 V128 0x0 V159 V160 V159 0x20
0x2d5: V169 = ISZERO V168
0x2d7: V170 = ISZERO V169
0x2d8: V171 = 0x2e5
0x2db: JUMPI 0x2e5 V170
---
Entry stack: [V11, 0xca, V31, V46, S10, V128, 0xa9059cbb, V156, 0x20, V159, V160, V159, 0x0, V128, V163]
Stack pops: 7
Stack additions: [V169]
Exit stack: [V11, 0xca, V31, V46, S10, V128, 0xa9059cbb, V156, V169]

================================

Block 0x2dc
[0x2dc:0x2e4]
---
Predecessors: [0x2d1]
Successors: []
---
0x2dc RETURNDATASIZE
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 RETURNDATACOPY
0x2e1 RETURNDATASIZE
0x2e2 PUSH1 0x0
0x2e4 REVERT
---
0x2dc: V172 = RETURNDATASIZE
0x2dd: V173 = 0x0
0x2e0: RETURNDATACOPY 0x0 0x0 V172
0x2e1: V174 = RETURNDATASIZE
0x2e2: V175 = 0x0
0x2e4: REVERT 0x0 V174
---
Entry stack: [V11, 0xca, V31, V46, S4, V128, 0xa9059cbb, V156, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V31, V46, S4, V128, 0xa9059cbb, V156, V169]

================================

Block 0x2e5
[0x2e5:0x2f6]
---
Predecessors: [0x2d1]
Successors: [0x2f7, 0x2fb]
---
0x2e5 JUMPDEST
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 POP
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed RETURNDATASIZE
0x2ee PUSH1 0x20
0x2f0 DUP2
0x2f1 LT
0x2f2 ISZERO
0x2f3 PUSH2 0x2fb
0x2f6 JUMPI
---
0x2e5: JUMPDEST 
0x2ea: V176 = 0x40
0x2ec: V177 = M[0x40]
0x2ed: V178 = RETURNDATASIZE
0x2ee: V179 = 0x20
0x2f1: V180 = LT V178 0x20
0x2f2: V181 = ISZERO V180
0x2f3: V182 = 0x2fb
0x2f6: JUMPI 0x2fb V181
---
Entry stack: [V11, 0xca, V31, V46, S4, V128, 0xa9059cbb, V156, V169]
Stack pops: 4
Stack additions: [V177, V178]
Exit stack: [V11, 0xca, V31, V46, S4, V177, V178]

================================

Block 0x2f7
[0x2f7:0x2fa]
---
Predecessors: [0x2e5]
Successors: []
---
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa REVERT
---
0x2f7: V183 = 0x0
0x2fa: REVERT 0x0 0x0
---
Entry stack: [V11, 0xca, V31, V46, S2, V177, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V31, V46, S2, V177, V178]

================================

Block 0x2fb
[0x2fb:0x319]
---
Predecessors: [0x2e5]
Successors: [0x1ed]
---
0x2fb JUMPDEST
0x2fc DUP2
0x2fd ADD
0x2fe SWAP1
0x2ff DUP1
0x300 DUP1
0x301 MLOAD
0x302 SWAP1
0x303 PUSH1 0x20
0x305 ADD
0x306 SWAP1
0x307 SWAP3
0x308 SWAP2
0x309 SWAP1
0x30a POP
0x30b POP
0x30c POP
0x30d POP
0x30e DUP1
0x30f DUP1
0x310 PUSH1 0x1
0x312 ADD
0x313 SWAP2
0x314 POP
0x315 POP
0x316 PUSH2 0x1ed
0x319 JUMP
---
0x2fb: JUMPDEST 
0x2fd: V184 = ADD V177 V178
0x301: V185 = M[V177]
0x303: V186 = 0x20
0x305: V187 = ADD 0x20 V177
0x310: V188 = 0x1
0x312: V189 = ADD 0x1 S2
0x316: V190 = 0x1ed
0x319: JUMP 0x1ed
---
Entry stack: [V11, 0xca, V31, V46, S2, V177, V178]
Stack pops: 3
Stack additions: [V189]
Exit stack: [V11, 0xca, V31, V46, V189]

================================

Block 0x31a
[0x31a:0x31e]
---
Predecessors: [0x1ed]
Successors: [0xca]
---
0x31a JUMPDEST
0x31b POP
0x31c POP
0x31d POP
0x31e JUMP
---
0x31a: JUMPDEST 
0x31e: JUMP 0xca
---
Entry stack: [V11, 0xca, V31, V46, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x31f
[0x31f:0x344]
---
Predecessors: [0xd8]
Successors: [0xe1]
---
0x31f JUMPDEST
0x320 PUSH1 0x1
0x322 PUSH1 0x0
0x324 SWAP1
0x325 SLOAD
0x326 SWAP1
0x327 PUSH2 0x100
0x32a EXP
0x32b SWAP1
0x32c DIV
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 DUP2
0x344 JUMP
---
0x31f: JUMPDEST 
0x320: V191 = 0x1
0x322: V192 = 0x0
0x325: V193 = S[0x1]
0x327: V194 = 0x100
0x32a: V195 = EXP 0x100 0x0
0x32c: V196 = DIV V193 0x1
0x32d: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x344: JUMP 0xe1
---
Entry stack: [V11, 0xe1]
Stack pops: 1
Stack additions: [S0, V198]
Exit stack: [V11, 0xe1, V198]

================================

Block 0x345
[0x345:0x369]
---
Predecessors: [0x12f]
Successors: [0x138]
---
0x345 JUMPDEST
0x346 PUSH1 0x0
0x348 DUP1
0x349 SWAP1
0x34a SLOAD
0x34b SWAP1
0x34c PUSH2 0x100
0x34f EXP
0x350 SWAP1
0x351 DIV
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 DUP2
0x369 JUMP
---
0x345: JUMPDEST 
0x346: V199 = 0x0
0x34a: V200 = S[0x0]
0x34c: V201 = 0x100
0x34f: V202 = EXP 0x100 0x0
0x351: V203 = DIV V200 0x1
0x352: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x369: JUMP 0x138
---
Entry stack: [V11, 0x138]
Stack pops: 1
Stack additions: [S0, V205]
Exit stack: [V11, 0x138, V205]

================================

Block 0x36a
[0x36a:0x39a]
---
Predecessors: []
Successors: []
---
0x36a STOP
0x36b LOG1
0x36c PUSH6 0x627a7a723058
0x373 SHA3
0x374 GASPRICE
0x375 DUP6
0x376 SWAP16
0x377 SHA3
0x378 CALLCODE
0x379 PUSH6 0xf7e81a780b65
0x380 DIFFICULTY
0x381 MISSING 0xf6
0x382 MISSING 0x4d
0x383 MISSING 0xa5
0x384 MISSING 0x4b
0x385 MISSING 0x5e
0x386 DUP5
0x387 DUP9
0x388 PUSH18 0xb7fbfe39ec0f503967886c0029
---
0x36a: STOP 
0x36b: LOG S0 S1 S2
0x36c: V206 = 0x627a7a723058
0x373: V207 = SHA3 0x627a7a723058 S3
0x374: V208 = GASPRICE
0x377: V209 = SHA3 S17 V208
0x378: V210 = CALLCODE V209 V207 S4 S5 S6 S7 S8
0x379: V211 = 0xf7e81a780b65
0x380: V212 = DIFFICULTY
0x381: MISSING 0xf6
0x382: MISSING 0x4d
0x383: MISSING 0xa5
0x384: MISSING 0x4b
0x385: MISSING 0x5e
0x388: V213 = 0xb7fbfe39ec0f503967886c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V212, 0xf7e81a780b65, V210, S9, S10, S11, S12, S13, S14, S15, S16, S7, 0xb7fbfe39ec0f503967886c0029, S7, S4, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x42cb150
Entry block: 0x5c
Exit block: 0x2f7
Body: 0x5c, 0x64, 0x68, 0xca, 0x17a, 0x1d4, 0x1d8, 0x1e4, 0x1e8, 0x1ed, 0x1f7, 0x240, 0x241, 0x2cd, 0x2d1, 0x2dc, 0x2e5, 0x2f7, 0x2fb, 0x31a

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xcc
Exit block: 0xe1
Body: 0xcc, 0xd4, 0xd8, 0xe1, 0x31f

Function 2:
Public function signature: 0xfc0c546a
Entry block: 0x123
Exit block: 0x138
Body: 0x123, 0x12b, 0x12f, 0x138, 0x345

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

