Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x17d7de7c
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x17d7de7c
0x3c: V13 = EQ 0x17d7de7c V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xe1]
---
0x41 DUP1
0x42 PUSH4 0xc47f0027
0x47 EQ
0x48 PUSH2 0xe1
0x4b JUMPI
---
0x42: V15 = 0xc47f0027
0x47: V16 = EQ 0xc47f0027 V11
0x48: V17 = 0xe1
0x4b: JUMPI 0xe1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0x14a]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0x14a
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0x14a
0x65: JUMP 0x14a
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0x8a]
---
Predecessors: [0x1e2]
Successors: [0x8b]
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 MLOAD
0x6a DUP1
0x6b DUP1
0x6c PUSH1 0x20
0x6e ADD
0x6f DUP3
0x70 DUP2
0x71 SUB
0x72 DUP3
0x73 MSTORE
0x74 DUP4
0x75 DUP2
0x76 DUP2
0x77 MLOAD
0x78 DUP2
0x79 MSTORE
0x7a PUSH1 0x20
0x7c ADD
0x7d SWAP2
0x7e POP
0x7f DUP1
0x80 MLOAD
0x81 SWAP1
0x82 PUSH1 0x20
0x84 ADD
0x85 SWAP1
0x86 DUP1
0x87 DUP4
0x88 DUP4
0x89 PUSH1 0x0
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x69: V26 = M[0x40]
0x6c: V27 = 0x20
0x6e: V28 = ADD 0x20 V26
0x71: V29 = SUB V28 V26
0x73: M[V26] = V29
0x77: V30 = M[V118]
0x79: M[V28] = V30
0x7a: V31 = 0x20
0x7c: V32 = ADD 0x20 V28
0x80: V33 = M[V118]
0x82: V34 = 0x20
0x84: V35 = ADD 0x20 V118
0x89: V36 = 0x0
---
Entry stack: [V11, V118]
Stack pops: 1
Stack additions: [S0, V26, V26, V32, V35, V33, V33, V32, V35, 0x0]
Exit stack: [V11, V118, V26, V26, V32, V35, V33, V33, V32, V35, 0x0]

================================

Block 0x8b
[0x8b:0x93]
---
Predecessors: [0x66, 0x94]
Successors: [0x94, 0xa6]
---
0x8b JUMPDEST
0x8c DUP4
0x8d DUP2
0x8e LT
0x8f ISZERO
0x90 PUSH2 0xa6
0x93 JUMPI
---
0x8b: JUMPDEST 
0x8e: V37 = LT S0 V33
0x8f: V38 = ISZERO V37
0x90: V39 = 0xa6
0x93: JUMPI 0xa6 V38
---
Entry stack: [V11, V118, V26, V26, V32, V35, V33, V33, V32, V35, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V118, V26, V26, V32, V35, V33, V33, V32, V35, S0]

================================

Block 0x94
[0x94:0xa5]
---
Predecessors: [0x8b]
Successors: [0x8b]
---
0x94 DUP1
0x95 DUP3
0x96 ADD
0x97 MLOAD
0x98 DUP2
0x99 DUP5
0x9a ADD
0x9b MSTORE
0x9c PUSH1 0x20
0x9e DUP2
0x9f ADD
0xa0 SWAP1
0xa1 POP
0xa2 PUSH2 0x8b
0xa5 JUMP
---
0x96: V40 = ADD V35 S0
0x97: V41 = M[V40]
0x9a: V42 = ADD V32 S0
0x9b: M[V42] = V41
0x9c: V43 = 0x20
0x9f: V44 = ADD S0 0x20
0xa2: V45 = 0x8b
0xa5: JUMP 0x8b
---
Entry stack: [V11, V118, V26, V26, V32, V35, V33, V33, V32, V35, S0]
Stack pops: 3
Stack additions: [S2, S1, V44]
Exit stack: [V11, V118, V26, V26, V32, V35, V33, V33, V32, V35, V44]

================================

Block 0xa6
[0xa6:0xb9]
---
Predecessors: [0x8b]
Successors: [0xba, 0xd3]
---
0xa6 JUMPDEST
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab SWAP1
0xac POP
0xad SWAP1
0xae DUP2
0xaf ADD
0xb0 SWAP1
0xb1 PUSH1 0x1f
0xb3 AND
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xd3
0xb9 JUMPI
---
0xa6: JUMPDEST 
0xaf: V46 = ADD V33 V32
0xb1: V47 = 0x1f
0xb3: V48 = AND 0x1f V33
0xb5: V49 = ISZERO V48
0xb6: V50 = 0xd3
0xb9: JUMPI 0xd3 V49
---
Entry stack: [V11, V118, V26, V26, V32, V35, V33, V33, V32, V35, S0]
Stack pops: 7
Stack additions: [V46, V48]
Exit stack: [V11, V118, V26, V26, V46, V48]

================================

Block 0xba
[0xba:0xd2]
---
Predecessors: [0xa6]
Successors: [0xd3]
---
0xba DUP1
0xbb DUP3
0xbc SUB
0xbd DUP1
0xbe MLOAD
0xbf PUSH1 0x1
0xc1 DUP4
0xc2 PUSH1 0x20
0xc4 SUB
0xc5 PUSH2 0x100
0xc8 EXP
0xc9 SUB
0xca NOT
0xcb AND
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP2
0xd2 POP
---
0xbc: V51 = SUB V46 V48
0xbe: V52 = M[V51]
0xbf: V53 = 0x1
0xc2: V54 = 0x20
0xc4: V55 = SUB 0x20 V48
0xc5: V56 = 0x100
0xc8: V57 = EXP 0x100 V55
0xc9: V58 = SUB V57 0x1
0xca: V59 = NOT V58
0xcb: V60 = AND V59 V52
0xcd: M[V51] = V60
0xce: V61 = 0x20
0xd0: V62 = ADD 0x20 V51
---
Entry stack: [V11, V118, V26, V26, V46, V48]
Stack pops: 2
Stack additions: [V62, S0]
Exit stack: [V11, V118, V26, V26, V62, V48]

================================

Block 0xd3
[0xd3:0xe0]
---
Predecessors: [0xa6, 0xba]
Successors: []
---
0xd3 JUMPDEST
0xd4 POP
0xd5 SWAP3
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd SWAP2
0xde SUB
0xdf SWAP1
0xe0 RETURN
---
0xd3: JUMPDEST 
0xd9: V63 = 0x40
0xdb: V64 = M[0x40]
0xde: V65 = SUB S1 V64
0xe0: RETURN V64 V65
---
Entry stack: [V11, V118, V26, V26, S1, V48]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0x41]
Successors: [0xe9, 0xed]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe1: JUMPDEST 
0xe2: V66 = CALLVALUE
0xe4: V67 = ISZERO V66
0xe5: V68 = 0xed
0xe8: JUMPI 0xed V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe1]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V69 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0xed
[0xed:0x147]
---
Predecessors: [0xe1]
Successors: [0x1ec]
---
0xed JUMPDEST
0xee POP
0xef PUSH2 0x148
0xf2 PUSH1 0x4
0xf4 DUP1
0xf5 CALLDATASIZE
0xf6 SUB
0xf7 DUP2
0xf8 ADD
0xf9 SWAP1
0xfa DUP1
0xfb DUP1
0xfc CALLDATALOAD
0xfd SWAP1
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 DUP3
0x103 ADD
0x104 DUP1
0x105 CALLDATALOAD
0x106 SWAP1
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP1
0x10b DUP1
0x10c DUP1
0x10d PUSH1 0x1f
0x10f ADD
0x110 PUSH1 0x20
0x112 DUP1
0x113 SWAP2
0x114 DIV
0x115 MUL
0x116 PUSH1 0x20
0x118 ADD
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d DUP2
0x11e ADD
0x11f PUSH1 0x40
0x121 MSTORE
0x122 DUP1
0x123 SWAP4
0x124 SWAP3
0x125 SWAP2
0x126 SWAP1
0x127 DUP2
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d DUP4
0x12e DUP4
0x12f DUP1
0x130 DUP3
0x131 DUP5
0x132 CALLDATACOPY
0x133 DUP3
0x134 ADD
0x135 SWAP2
0x136 POP
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c SWAP2
0x13d SWAP3
0x13e SWAP2
0x13f SWAP3
0x140 SWAP1
0x141 POP
0x142 POP
0x143 POP
0x144 PUSH2 0x1ec
0x147 JUMP
---
0xed: JUMPDEST 
0xef: V70 = 0x148
0xf2: V71 = 0x4
0xf5: V72 = CALLDATASIZE
0xf6: V73 = SUB V72 0x4
0xf8: V74 = ADD 0x4 V73
0xfc: V75 = CALLDATALOAD 0x4
0xfe: V76 = 0x20
0x100: V77 = ADD 0x20 0x4
0x103: V78 = ADD 0x4 V75
0x105: V79 = CALLDATALOAD V78
0x107: V80 = 0x20
0x109: V81 = ADD 0x20 V78
0x10d: V82 = 0x1f
0x10f: V83 = ADD 0x1f V79
0x110: V84 = 0x20
0x114: V85 = DIV V83 0x20
0x115: V86 = MUL V85 0x20
0x116: V87 = 0x20
0x118: V88 = ADD 0x20 V86
0x119: V89 = 0x40
0x11b: V90 = M[0x40]
0x11e: V91 = ADD V90 V88
0x11f: V92 = 0x40
0x121: M[0x40] = V91
0x129: M[V90] = V79
0x12a: V93 = 0x20
0x12c: V94 = ADD 0x20 V90
0x132: CALLDATACOPY V94 V81 V79
0x134: V95 = ADD V94 V79
0x144: V96 = 0x1ec
0x147: JUMP 0x1ec
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0x148, V90]
Exit stack: [V11, 0x148, V90]

================================

Block 0x148
[0x148:0x149]
---
Predecessors: [0x202]
Successors: []
---
0x148 JUMPDEST
0x149 STOP
---
0x148: JUMPDEST 
0x149: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14a
[0x14a:0x19b]
---
Predecessors: [0x5d]
Successors: [0x19c, 0x1e2]
---
0x14a JUMPDEST
0x14b PUSH1 0x60
0x14d PUSH1 0x0
0x14f DUP1
0x150 SLOAD
0x151 PUSH1 0x1
0x153 DUP2
0x154 PUSH1 0x1
0x156 AND
0x157 ISZERO
0x158 PUSH2 0x100
0x15b MUL
0x15c SUB
0x15d AND
0x15e PUSH1 0x2
0x160 SWAP1
0x161 DIV
0x162 DUP1
0x163 PUSH1 0x1f
0x165 ADD
0x166 PUSH1 0x20
0x168 DUP1
0x169 SWAP2
0x16a DIV
0x16b MUL
0x16c PUSH1 0x20
0x16e ADD
0x16f PUSH1 0x40
0x171 MLOAD
0x172 SWAP1
0x173 DUP2
0x174 ADD
0x175 PUSH1 0x40
0x177 MSTORE
0x178 DUP1
0x179 SWAP3
0x17a SWAP2
0x17b SWAP1
0x17c DUP2
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 DUP3
0x183 DUP1
0x184 SLOAD
0x185 PUSH1 0x1
0x187 DUP2
0x188 PUSH1 0x1
0x18a AND
0x18b ISZERO
0x18c PUSH2 0x100
0x18f MUL
0x190 SUB
0x191 AND
0x192 PUSH1 0x2
0x194 SWAP1
0x195 DIV
0x196 DUP1
0x197 ISZERO
0x198 PUSH2 0x1e2
0x19b JUMPI
---
0x14a: JUMPDEST 
0x14b: V97 = 0x60
0x14d: V98 = 0x0
0x150: V99 = S[0x0]
0x151: V100 = 0x1
0x154: V101 = 0x1
0x156: V102 = AND 0x1 V99
0x157: V103 = ISZERO V102
0x158: V104 = 0x100
0x15b: V105 = MUL 0x100 V103
0x15c: V106 = SUB V105 0x1
0x15d: V107 = AND V106 V99
0x15e: V108 = 0x2
0x161: V109 = DIV V107 0x2
0x163: V110 = 0x1f
0x165: V111 = ADD 0x1f V109
0x166: V112 = 0x20
0x16a: V113 = DIV V111 0x20
0x16b: V114 = MUL V113 0x20
0x16c: V115 = 0x20
0x16e: V116 = ADD 0x20 V114
0x16f: V117 = 0x40
0x171: V118 = M[0x40]
0x174: V119 = ADD V118 V116
0x175: V120 = 0x40
0x177: M[0x40] = V119
0x17e: M[V118] = V109
0x17f: V121 = 0x20
0x181: V122 = ADD 0x20 V118
0x184: V123 = S[0x0]
0x185: V124 = 0x1
0x188: V125 = 0x1
0x18a: V126 = AND 0x1 V123
0x18b: V127 = ISZERO V126
0x18c: V128 = 0x100
0x18f: V129 = MUL 0x100 V127
0x190: V130 = SUB V129 0x1
0x191: V131 = AND V130 V123
0x192: V132 = 0x2
0x195: V133 = DIV V131 0x2
0x197: V134 = ISZERO V133
0x198: V135 = 0x1e2
0x19b: JUMPI 0x1e2 V134
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: [0x60, V118, 0x0, V109, V122, 0x0, V133]
Exit stack: [V11, 0x66, 0x60, V118, 0x0, V109, V122, 0x0, V133]

================================

Block 0x19c
[0x19c:0x1a3]
---
Predecessors: [0x14a]
Successors: [0x1a4, 0x1b7]
---
0x19c DUP1
0x19d PUSH1 0x1f
0x19f LT
0x1a0 PUSH2 0x1b7
0x1a3 JUMPI
---
0x19d: V136 = 0x1f
0x19f: V137 = LT 0x1f V133
0x1a0: V138 = 0x1b7
0x1a3: JUMPI 0x1b7 V137
---
Entry stack: [V11, 0x66, 0x60, V118, 0x0, V109, V122, 0x0, V133]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x66, 0x60, V118, 0x0, V109, V122, 0x0, V133]

================================

Block 0x1a4
[0x1a4:0x1b6]
---
Predecessors: [0x19c]
Successors: [0x1e2]
---
0x1a4 PUSH2 0x100
0x1a7 DUP1
0x1a8 DUP4
0x1a9 SLOAD
0x1aa DIV
0x1ab MUL
0x1ac DUP4
0x1ad MSTORE
0x1ae SWAP2
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 PUSH2 0x1e2
0x1b6 JUMP
---
0x1a4: V139 = 0x100
0x1a9: V140 = S[0x0]
0x1aa: V141 = DIV V140 0x100
0x1ab: V142 = MUL V141 0x100
0x1ad: M[V122] = V142
0x1af: V143 = 0x20
0x1b1: V144 = ADD 0x20 V122
0x1b3: V145 = 0x1e2
0x1b6: JUMP 0x1e2
---
Entry stack: [V11, 0x66, 0x60, V118, 0x0, V109, V122, 0x0, V133]
Stack pops: 3
Stack additions: [V144, S1, S0]
Exit stack: [V11, 0x66, 0x60, V118, 0x0, V109, V144, 0x0, V133]

================================

Block 0x1b7
[0x1b7:0x1c4]
---
Predecessors: [0x19c]
Successors: [0x1c5]
---
0x1b7 JUMPDEST
0x1b8 DUP3
0x1b9 ADD
0x1ba SWAP2
0x1bb SWAP1
0x1bc PUSH1 0x0
0x1be MSTORE
0x1bf PUSH1 0x20
0x1c1 PUSH1 0x0
0x1c3 SHA3
0x1c4 SWAP1
---
0x1b7: JUMPDEST 
0x1b9: V146 = ADD V122 V133
0x1bc: V147 = 0x0
0x1be: M[0x0] = 0x0
0x1bf: V148 = 0x20
0x1c1: V149 = 0x0
0x1c3: V150 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x66, 0x60, V118, 0x0, V109, V122, 0x0, V133]
Stack pops: 3
Stack additions: [V146, V150, S2]
Exit stack: [V11, 0x66, 0x60, V118, 0x0, V109, V146, V150, V122]

================================

Block 0x1c5
[0x1c5:0x1d8]
---
Predecessors: [0x1b7, 0x1c5]
Successors: [0x1c5, 0x1d9]
---
0x1c5 JUMPDEST
0x1c6 DUP2
0x1c7 SLOAD
0x1c8 DUP2
0x1c9 MSTORE
0x1ca SWAP1
0x1cb PUSH1 0x1
0x1cd ADD
0x1ce SWAP1
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 DUP1
0x1d3 DUP4
0x1d4 GT
0x1d5 PUSH2 0x1c5
0x1d8 JUMPI
---
0x1c5: JUMPDEST 
0x1c7: V151 = S[S1]
0x1c9: M[S0] = V151
0x1cb: V152 = 0x1
0x1cd: V153 = ADD 0x1 S1
0x1cf: V154 = 0x20
0x1d1: V155 = ADD 0x20 S0
0x1d4: V156 = GT V146 V155
0x1d5: V157 = 0x1c5
0x1d8: JUMPI 0x1c5 V156
---
Entry stack: [V11, 0x66, 0x60, V118, 0x0, V109, V146, S1, S0]
Stack pops: 3
Stack additions: [S2, V153, V155]
Exit stack: [V11, 0x66, 0x60, V118, 0x0, V109, V146, V153, V155]

================================

Block 0x1d9
[0x1d9:0x1e1]
---
Predecessors: [0x1c5]
Successors: [0x1e2]
---
0x1d9 DUP3
0x1da SWAP1
0x1db SUB
0x1dc PUSH1 0x1f
0x1de AND
0x1df DUP3
0x1e0 ADD
0x1e1 SWAP2
---
0x1db: V158 = SUB V155 V146
0x1dc: V159 = 0x1f
0x1de: V160 = AND 0x1f V158
0x1e0: V161 = ADD V146 V160
---
Entry stack: [V11, 0x66, 0x60, V118, 0x0, V109, V146, V153, V155]
Stack pops: 3
Stack additions: [V161, S1, S2]
Exit stack: [V11, 0x66, 0x60, V118, 0x0, V109, V161, V153, V146]

================================

Block 0x1e2
[0x1e2:0x1eb]
---
Predecessors: [0x14a, 0x1a4, 0x1d9]
Successors: [0x66]
---
0x1e2 JUMPDEST
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 SWAP1
0x1e9 POP
0x1ea SWAP1
0x1eb JUMP
---
0x1e2: JUMPDEST 
0x1eb: JUMP 0x66
---
Entry stack: [V11, 0x66, 0x60, V118, 0x0, V109, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V118]

================================

Block 0x1ec
[0x1ec:0x201]
---
Predecessors: [0xed]
Successors: [0x206]
---
0x1ec JUMPDEST
0x1ed DUP1
0x1ee PUSH1 0x0
0x1f0 SWAP1
0x1f1 DUP1
0x1f2 MLOAD
0x1f3 SWAP1
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 SWAP1
0x1f8 PUSH2 0x202
0x1fb SWAP3
0x1fc SWAP2
0x1fd SWAP1
0x1fe PUSH2 0x206
0x201 JUMP
---
0x1ec: JUMPDEST 
0x1ee: V162 = 0x0
0x1f2: V163 = M[V90]
0x1f4: V164 = 0x20
0x1f6: V165 = ADD 0x20 V90
0x1f8: V166 = 0x202
0x1fe: V167 = 0x206
0x201: JUMP 0x206
---
Entry stack: [V11, 0x148, V90]
Stack pops: 1
Stack additions: [S0, 0x202, 0x0, V165, V163]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V165, V163]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x282]
Successors: [0x148]
---
0x202 JUMPDEST
0x203 POP
0x204 POP
0x205 JUMP
---
0x202: JUMPDEST 
0x205: JUMP 0x148
---
Entry stack: [V11, 0x148, V90, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x206
[0x206:0x236]
---
Predecessors: [0x1ec]
Successors: [0x237, 0x247]
---
0x206 JUMPDEST
0x207 DUP3
0x208 DUP1
0x209 SLOAD
0x20a PUSH1 0x1
0x20c DUP2
0x20d PUSH1 0x1
0x20f AND
0x210 ISZERO
0x211 PUSH2 0x100
0x214 MUL
0x215 SUB
0x216 AND
0x217 PUSH1 0x2
0x219 SWAP1
0x21a DIV
0x21b SWAP1
0x21c PUSH1 0x0
0x21e MSTORE
0x21f PUSH1 0x20
0x221 PUSH1 0x0
0x223 SHA3
0x224 SWAP1
0x225 PUSH1 0x1f
0x227 ADD
0x228 PUSH1 0x20
0x22a SWAP1
0x22b DIV
0x22c DUP2
0x22d ADD
0x22e SWAP3
0x22f DUP3
0x230 PUSH1 0x1f
0x232 LT
0x233 PUSH2 0x247
0x236 JUMPI
---
0x206: JUMPDEST 
0x209: V168 = S[0x0]
0x20a: V169 = 0x1
0x20d: V170 = 0x1
0x20f: V171 = AND 0x1 V168
0x210: V172 = ISZERO V171
0x211: V173 = 0x100
0x214: V174 = MUL 0x100 V172
0x215: V175 = SUB V174 0x1
0x216: V176 = AND V175 V168
0x217: V177 = 0x2
0x21a: V178 = DIV V176 0x2
0x21c: V179 = 0x0
0x21e: M[0x0] = 0x0
0x21f: V180 = 0x20
0x221: V181 = 0x0
0x223: V182 = SHA3 0x0 0x20
0x225: V183 = 0x1f
0x227: V184 = ADD 0x1f V178
0x228: V185 = 0x20
0x22b: V186 = DIV V184 0x20
0x22d: V187 = ADD V182 V186
0x230: V188 = 0x1f
0x232: V189 = LT 0x1f V163
0x233: V190 = 0x247
0x236: JUMPI 0x247 V189
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V165, V163]
Stack pops: 3
Stack additions: [S2, V187, S0, V182, S1]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187, V163, V182, V165]

================================

Block 0x237
[0x237:0x246]
---
Predecessors: [0x206]
Successors: [0x275]
---
0x237 DUP1
0x238 MLOAD
0x239 PUSH1 0xff
0x23b NOT
0x23c AND
0x23d DUP4
0x23e DUP1
0x23f ADD
0x240 OR
0x241 DUP6
0x242 SSTORE
0x243 PUSH2 0x275
0x246 JUMP
---
0x238: V191 = M[V165]
0x239: V192 = 0xff
0x23b: V193 = NOT 0xff
0x23c: V194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V191
0x23f: V195 = ADD V163 V163
0x240: V196 = OR V195 V194
0x242: S[0x0] = V196
0x243: V197 = 0x275
0x246: JUMP 0x275
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187, V163, V182, V165]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187, V163, V182, V165]

================================

Block 0x247
[0x247:0x255]
---
Predecessors: [0x206]
Successors: [0x256, 0x275]
---
0x247 JUMPDEST
0x248 DUP3
0x249 DUP1
0x24a ADD
0x24b PUSH1 0x1
0x24d ADD
0x24e DUP6
0x24f SSTORE
0x250 DUP3
0x251 ISZERO
0x252 PUSH2 0x275
0x255 JUMPI
---
0x247: JUMPDEST 
0x24a: V198 = ADD V163 V163
0x24b: V199 = 0x1
0x24d: V200 = ADD 0x1 V198
0x24f: S[0x0] = V200
0x251: V201 = ISZERO V163
0x252: V202 = 0x275
0x255: JUMPI 0x275 V201
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187, V163, V182, V165]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187, V163, V182, V165]

================================

Block 0x256
[0x256:0x258]
---
Predecessors: [0x247]
Successors: [0x259]
---
0x256 SWAP2
0x257 DUP3
0x258 ADD
---
0x258: V203 = ADD V165 V163
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187, V163, V182, V165]
Stack pops: 3
Stack additions: [S0, S1, V203]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187, V165, V182, V203]

================================

Block 0x259
[0x259:0x261]
---
Predecessors: [0x256, 0x262]
Successors: [0x262, 0x274]
---
0x259 JUMPDEST
0x25a DUP3
0x25b DUP2
0x25c GT
0x25d ISZERO
0x25e PUSH2 0x274
0x261 JUMPI
---
0x259: JUMPDEST 
0x25c: V204 = GT V203 S2
0x25d: V205 = ISZERO V204
0x25e: V206 = 0x274
0x261: JUMPI 0x274 V205
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187, S2, S1, V203]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187, S2, S1, V203]

================================

Block 0x262
[0x262:0x273]
---
Predecessors: [0x259]
Successors: [0x259]
---
0x262 DUP3
0x263 MLOAD
0x264 DUP3
0x265 SSTORE
0x266 SWAP2
0x267 PUSH1 0x20
0x269 ADD
0x26a SWAP2
0x26b SWAP1
0x26c PUSH1 0x1
0x26e ADD
0x26f SWAP1
0x270 PUSH2 0x259
0x273 JUMP
---
0x263: V207 = M[S2]
0x265: S[S1] = V207
0x267: V208 = 0x20
0x269: V209 = ADD 0x20 S2
0x26c: V210 = 0x1
0x26e: V211 = ADD 0x1 S1
0x270: V212 = 0x259
0x273: JUMP 0x259
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187, S2, S1, V203]
Stack pops: 3
Stack additions: [V209, V211, S0]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187, V209, V211, V203]

================================

Block 0x274
[0x274:0x274]
---
Predecessors: [0x259]
Successors: [0x275]
---
0x274 JUMPDEST
---
0x274: JUMPDEST 
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187, S2, S1, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187, S2, S1, V203]

================================

Block 0x275
[0x275:0x281]
---
Predecessors: [0x237, 0x247, 0x274]
Successors: [0x286]
---
0x275 JUMPDEST
0x276 POP
0x277 SWAP1
0x278 POP
0x279 PUSH2 0x282
0x27c SWAP2
0x27d SWAP1
0x27e PUSH2 0x286
0x281 JUMP
---
0x275: JUMPDEST 
0x279: V213 = 0x282
0x27e: V214 = 0x286
0x281: JUMP 0x286
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187, S2, S1, S0]
Stack pops: 4
Stack additions: [0x282, S3, S1]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, V187, S1]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x2a8]
Successors: [0x202]
---
0x282 JUMPDEST
0x283 POP
0x284 SWAP1
0x285 JUMP
---
0x282: JUMPDEST 
0x285: JUMP 0x202
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, V187]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x148, V90, 0x0]

================================

Block 0x286
[0x286:0x28b]
---
Predecessors: [0x275]
Successors: [0x28c]
---
0x286 JUMPDEST
0x287 PUSH2 0x2a8
0x28a SWAP2
0x28b SWAP1
---
0x286: JUMPDEST 
0x287: V215 = 0x2a8
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, V187, S0]
Stack pops: 2
Stack additions: [0x2a8, S1, S0]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, 0x2a8, V187, S0]

================================

Block 0x28c
[0x28c:0x294]
---
Predecessors: [0x286, 0x295]
Successors: [0x295, 0x2a4]
---
0x28c JUMPDEST
0x28d DUP1
0x28e DUP3
0x28f GT
0x290 ISZERO
0x291 PUSH2 0x2a4
0x294 JUMPI
---
0x28c: JUMPDEST 
0x28f: V216 = GT V187 S0
0x290: V217 = ISZERO V216
0x291: V218 = 0x2a4
0x294: JUMPI 0x2a4 V217
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, 0x2a8, V187, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, 0x2a8, V187, S0]

================================

Block 0x295
[0x295:0x2a3]
---
Predecessors: [0x28c]
Successors: [0x28c]
---
0x295 PUSH1 0x0
0x297 DUP2
0x298 PUSH1 0x0
0x29a SWAP1
0x29b SSTORE
0x29c POP
0x29d PUSH1 0x1
0x29f ADD
0x2a0 PUSH2 0x28c
0x2a3 JUMP
---
0x295: V219 = 0x0
0x298: V220 = 0x0
0x29b: S[S0] = 0x0
0x29d: V221 = 0x1
0x29f: V222 = ADD 0x1 S0
0x2a0: V223 = 0x28c
0x2a3: JUMP 0x28c
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, 0x2a8, V187, S0]
Stack pops: 1
Stack additions: [V222]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, 0x2a8, V187, V222]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x28c]
Successors: [0x2a8]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 SWAP1
0x2a7 JUMP
---
0x2a4: JUMPDEST 
0x2a7: JUMP 0x2a8
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, 0x2a8, V187, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, V187]

================================

Block 0x2a8
[0x2a8:0x2aa]
---
Predecessors: [0x2a4]
Successors: [0x282]
---
0x2a8 JUMPDEST
0x2a9 SWAP1
0x2aa JUMP
---
0x2a8: JUMPDEST 
0x2aa: JUMP 0x282
---
Entry stack: [V11, 0x148, V90, 0x202, 0x0, 0x282, V187]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x148, V90, 0x202, 0x0, V187]

================================

Block 0x2ab
[0x2ab:0x2d8]
---
Predecessors: []
Successors: []
---
0x2ab STOP
0x2ac LOG1
0x2ad PUSH6 0x627a7a723058
0x2b4 SHA3
0x2b5 MISSING 0xf8
0x2b6 MISSING 0xa7
0x2b7 MISSING 0x5c
0x2b8 DUP13
0x2b9 PUSH31 0xd9d0778c57def0df35817a89b160fed3a666e4d565e97cc075f3cf0029
---
0x2ab: STOP 
0x2ac: LOG S0 S1 S2
0x2ad: V224 = 0x627a7a723058
0x2b4: V225 = SHA3 0x627a7a723058 S3
0x2b5: MISSING 0xf8
0x2b6: MISSING 0xa7
0x2b7: MISSING 0x5c
0x2b9: V226 = 0xd9d0778c57def0df35817a89b160fed3a666e4d565e97cc075f3cf0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V225, 0xd9d0778c57def0df35817a89b160fed3a666e4d565e97cc075f3cf0029, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Function 0:
Public function signature: 0x17d7de7c
Entry block: 0x51
Exit block: 0xd3
Body: 0x51, 0x59, 0x5d, 0x66, 0x8b, 0x94, 0xa6, 0xba, 0xd3, 0x14a, 0x19c, 0x1a4, 0x1b7, 0x1c5, 0x1d9, 0x1e2

Function 1:
Public function signature: 0xc47f0027
Entry block: 0xe1
Exit block: 0x148
Body: 0xe1, 0xe9, 0xed, 0x148, 0x1ec, 0x202, 0x206, 0x237, 0x247, 0x256, 0x259, 0x262, 0x274, 0x275, 0x282, 0x286, 0x28c, 0x295, 0x2a4, 0x2a8

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

