Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xf776fb2
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xf776fb2
0x3c: V13 = EQ 0xf776fb2 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x9a]
---
0x41 DUP1
0x42 PUSH4 0x2d3727bf
0x47 EQ
0x48 PUSH2 0x9a
0x4b JUMPI
---
0x42: V15 = 0x2d3727bf
0x47: V16 = EQ 0x2d3727bf V11
0x48: V17 = 0x9a
0x4b: JUMPI 0x9a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb1]
---
0x4c DUP1
0x4d PUSH4 0x45e479f6
0x52 EQ
0x53 PUSH2 0xb1
0x56 JUMPI
---
0x4d: V18 = 0x45e479f6
0x52: V19 = EQ 0x45e479f6 V11
0x53: V20 = 0xb1
0x56: JUMPI 0xb1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xbb]
---
0x57 DUP1
0x58 PUSH4 0xffe8ee35
0x5d EQ
0x5e PUSH2 0xbb
0x61 JUMPI
---
0x58: V21 = 0xffe8ee35
0x5d: V22 = EQ 0xffe8ee35 V11
0x5e: V23 = 0xbb
0x61: JUMPI 0xbb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x97]
---
Predecessors: [0xd]
Successors: [0xe8]
---
0x64 JUMPDEST
0x65 PUSH2 0x98
0x68 PUSH1 0x4
0x6a DUP1
0x6b CALLDATASIZE
0x6c SUB
0x6d DUP2
0x6e ADD
0x6f SWAP1
0x70 DUP1
0x71 DUP1
0x72 CALLDATALOAD
0x73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88 AND
0x89 SWAP1
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP1
0x8e SWAP3
0x8f SWAP2
0x90 SWAP1
0x91 POP
0x92 POP
0x93 POP
0x94 PUSH2 0xe8
0x97 JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x98
0x68: V25 = 0x4
0x6b: V26 = CALLDATASIZE
0x6c: V27 = SUB V26 0x4
0x6e: V28 = ADD 0x4 V27
0x72: V29 = CALLDATALOAD 0x4
0x73: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x88: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x8a: V32 = 0x20
0x8c: V33 = ADD 0x20 0x4
0x94: V34 = 0xe8
0x97: JUMP 0xe8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98, V31]
Exit stack: [V11, 0x98, V31]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: [0x1e6]
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0xa1]
---
Predecessors: [0x41]
Successors: [0xa2, 0xa6]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c DUP1
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x9a: JUMPDEST 
0x9b: V35 = CALLVALUE
0x9d: V36 = ISZERO V35
0x9e: V37 = 0xa6
0xa1: JUMPI 0xa6 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x9a]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V38 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0xa6
[0xa6:0xae]
---
Predecessors: [0x9a]
Successors: [0x1e9]
---
0xa6 JUMPDEST
0xa7 POP
0xa8 PUSH2 0xaf
0xab PUSH2 0x1e9
0xae JUMP
---
0xa6: JUMPDEST 
0xa8: V39 = 0xaf
0xab: V40 = 0x1e9
0xae: JUMP 0x1e9
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0xaf]
Exit stack: [V11, 0xaf]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x2a9]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0x4c]
Successors: [0x2ab]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xb9
0xb5 PUSH2 0x2ab
0xb8 JUMP
---
0xb1: JUMPDEST 
0xb2: V41 = 0xb9
0xb5: V42 = 0x2ab
0xb8: JUMP 0x2ab
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x36d]
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0x57]
Successors: [0xc3, 0xc7]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd DUP1
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbb: JUMPDEST 
0xbc: V43 = CALLVALUE
0xbe: V44 = ISZERO V43
0xbf: V45 = 0xc7
0xc2: JUMPI 0xc7 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbb]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V46 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xc7
[0xc7:0xe5]
---
Predecessors: [0xbb]
Successors: [0x36f]
---
0xc7 JUMPDEST
0xc8 POP
0xc9 PUSH2 0xe6
0xcc PUSH1 0x4
0xce DUP1
0xcf CALLDATASIZE
0xd0 SUB
0xd1 DUP2
0xd2 ADD
0xd3 SWAP1
0xd4 DUP1
0xd5 DUP1
0xd6 CALLDATALOAD
0xd7 SWAP1
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP1
0xdc SWAP3
0xdd SWAP2
0xde SWAP1
0xdf POP
0xe0 POP
0xe1 POP
0xe2 PUSH2 0x36f
0xe5 JUMP
---
0xc7: JUMPDEST 
0xc9: V47 = 0xe6
0xcc: V48 = 0x4
0xcf: V49 = CALLDATASIZE
0xd0: V50 = SUB V49 0x4
0xd2: V51 = ADD 0x4 V50
0xd6: V52 = CALLDATALOAD 0x4
0xd8: V53 = 0x20
0xda: V54 = ADD 0x20 0x4
0xe2: V55 = 0x36f
0xe5: JUMP 0x36f
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xe6, V52]
Exit stack: [V11, 0xe6, V52]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x3cc]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0xff]
---
Predecessors: [0x64]
Successors: [0x100, 0x10d]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x3
0xeb PUSH1 0x0
0xed SWAP1
0xee SLOAD
0xef SWAP1
0xf0 PUSH2 0x100
0xf3 EXP
0xf4 SWAP1
0xf5 DIV
0xf6 PUSH1 0xff
0xf8 AND
0xf9 ISZERO
0xfa DUP1
0xfb ISZERO
0xfc PUSH2 0x10d
0xff JUMPI
---
0xe8: JUMPDEST 
0xe9: V56 = 0x3
0xeb: V57 = 0x0
0xee: V58 = S[0x3]
0xf0: V59 = 0x100
0xf3: V60 = EXP 0x100 0x0
0xf5: V61 = DIV V58 0x1
0xf6: V62 = 0xff
0xf8: V63 = AND 0xff V61
0xf9: V64 = ISZERO V63
0xfb: V65 = ISZERO V64
0xfc: V66 = 0x10d
0xff: JUMPI 0x10d V65
---
Entry stack: [V11, 0x98, V31]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, 0x98, V31, V64]

================================

Block 0x100
[0x100:0x10c]
---
Predecessors: [0xe8]
Successors: [0x10d]
---
0x100 POP
0x101 PUSH8 0x3782dace9d90000
0x10a CALLVALUE
0x10b LT
0x10c ISZERO
---
0x101: V67 = 0x3782dace9d90000
0x10a: V68 = CALLVALUE
0x10b: V69 = LT V68 0x3782dace9d90000
0x10c: V70 = ISZERO V69
---
Entry stack: [V11, 0x98, V31, V64]
Stack pops: 1
Stack additions: [V70]
Exit stack: [V11, 0x98, V31, V70]

================================

Block 0x10d
[0x10d:0x112]
---
Predecessors: [0xe8, 0x100]
Successors: [0x113, 0x14f]
---
0x10d JUMPDEST
0x10e DUP1
0x10f PUSH2 0x14f
0x112 JUMPI
---
0x10d: JUMPDEST 
0x10f: V71 = 0x14f
0x112: JUMPI 0x14f S0
---
Entry stack: [V11, 0x98, V31, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x98, V31, S0]

================================

Block 0x113
[0x113:0x14e]
---
Predecessors: [0x10d]
Successors: [0x14f]
---
0x113 POP
0x114 PUSH1 0x0
0x116 DUP1
0x117 PUSH1 0x0
0x119 SWAP1
0x11a SLOAD
0x11b SWAP1
0x11c PUSH2 0x100
0x11f EXP
0x120 SWAP1
0x121 DIV
0x122 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x137 AND
0x138 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d AND
0x14e EQ
---
0x114: V72 = 0x0
0x117: V73 = 0x0
0x11a: V74 = S[0x0]
0x11c: V75 = 0x100
0x11f: V76 = EXP 0x100 0x0
0x121: V77 = DIV V74 0x1
0x122: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x137: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x138: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x14e: V82 = EQ V81 0x0
---
Entry stack: [V11, 0x98, V31, S0]
Stack pops: 1
Stack additions: [V82]
Exit stack: [V11, 0x98, V31, V82]

================================

Block 0x14f
[0x14f:0x154]
---
Predecessors: [0x10d, 0x113]
Successors: [0x155, 0x1e6]
---
0x14f JUMPDEST
0x150 ISZERO
0x151 PUSH2 0x1e6
0x154 JUMPI
---
0x14f: JUMPDEST 
0x150: V83 = ISZERO S0
0x151: V84 = 0x1e6
0x154: JUMPI 0x1e6 V83
---
Entry stack: [V11, 0x98, V31, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x98, V31]

================================

Block 0x155
[0x155:0x1e5]
---
Predecessors: [0x14f]
Successors: [0x1e6]
---
0x155 CALLER
0x156 PUSH1 0x0
0x158 DUP1
0x159 PUSH2 0x100
0x15c EXP
0x15d DUP2
0x15e SLOAD
0x15f DUP2
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 MUL
0x176 NOT
0x177 AND
0x178 SWAP1
0x179 DUP4
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f AND
0x190 MUL
0x191 OR
0x192 SWAP1
0x193 SSTORE
0x194 POP
0x195 DUP1
0x196 PUSH1 0x1
0x198 PUSH1 0x0
0x19a PUSH2 0x100
0x19d EXP
0x19e DUP2
0x19f SLOAD
0x1a0 DUP2
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 MUL
0x1b7 NOT
0x1b8 AND
0x1b9 SWAP1
0x1ba DUP4
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 MUL
0x1d2 OR
0x1d3 SWAP1
0x1d4 SSTORE
0x1d5 POP
0x1d6 TIMESTAMP
0x1d7 PUSH1 0x2
0x1d9 PUSH1 0x0
0x1db DUP3
0x1dc DUP3
0x1dd SLOAD
0x1de ADD
0x1df SWAP3
0x1e0 POP
0x1e1 POP
0x1e2 DUP2
0x1e3 SWAP1
0x1e4 SSTORE
0x1e5 POP
---
0x155: V85 = CALLER
0x156: V86 = 0x0
0x159: V87 = 0x100
0x15c: V88 = EXP 0x100 0x0
0x15e: V89 = S[0x0]
0x160: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V91 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x176: V92 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x177: V93 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V89
0x17a: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x190: V96 = MUL V95 0x1
0x191: V97 = OR V96 V93
0x193: S[0x0] = V97
0x196: V98 = 0x1
0x198: V99 = 0x0
0x19a: V100 = 0x100
0x19d: V101 = EXP 0x100 0x0
0x19f: V102 = S[0x1]
0x1a1: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V104 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1b7: V105 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V106 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V102
0x1bb: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x1d1: V109 = MUL V108 0x1
0x1d2: V110 = OR V109 V106
0x1d4: S[0x1] = V110
0x1d6: V111 = TIMESTAMP
0x1d7: V112 = 0x2
0x1d9: V113 = 0x0
0x1dd: V114 = S[0x2]
0x1de: V115 = ADD V114 V111
0x1e4: S[0x2] = V115
---
Entry stack: [V11, 0x98, V31]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x98, V31]

================================

Block 0x1e6
[0x1e6:0x1e8]
---
Predecessors: [0x14f, 0x155]
Successors: [0x98]
---
0x1e6 JUMPDEST
0x1e7 POP
0x1e8 JUMP
---
0x1e6: JUMPDEST 
0x1e8: JUMP 0x98
---
Entry stack: [V11, 0x98, V31]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e9
[0x1e9:0x240]
---
Predecessors: [0xa6]
Successors: [0x241, 0x27f]
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x1
0x1ec PUSH1 0x0
0x1ee SWAP1
0x1ef SLOAD
0x1f0 SWAP1
0x1f1 PUSH2 0x100
0x1f4 EXP
0x1f5 SWAP1
0x1f6 DIV
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 AND
0x223 CALLER
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a EQ
0x23b DUP1
0x23c ISZERO
0x23d PUSH2 0x27f
0x240 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V116 = 0x1
0x1ec: V117 = 0x0
0x1ef: V118 = S[0x1]
0x1f1: V119 = 0x100
0x1f4: V120 = EXP 0x100 0x0
0x1f6: V121 = DIV V118 0x1
0x1f7: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x20d: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x223: V126 = CALLER
0x224: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x23a: V129 = EQ V128 V125
0x23c: V130 = ISZERO V129
0x23d: V131 = 0x27f
0x240: JUMPI 0x27f V130
---
Entry stack: [V11, 0xaf]
Stack pops: 0
Stack additions: [V129]
Exit stack: [V11, 0xaf, V129]

================================

Block 0x241
[0x241:0x27e]
---
Predecessors: [0x1e9]
Successors: [0x27f]
---
0x241 POP
0x242 PUSH1 0x0
0x244 PUSH1 0x1
0x246 PUSH1 0x0
0x248 SWAP1
0x249 SLOAD
0x24a SWAP1
0x24b PUSH2 0x100
0x24e EXP
0x24f SWAP1
0x250 DIV
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d EQ
0x27e ISZERO
---
0x242: V132 = 0x0
0x244: V133 = 0x1
0x246: V134 = 0x0
0x249: V135 = S[0x1]
0x24b: V136 = 0x100
0x24e: V137 = EXP 0x100 0x0
0x250: V138 = DIV V135 0x1
0x251: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x267: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x27d: V143 = EQ V142 0x0
0x27e: V144 = ISZERO V143
---
Entry stack: [V11, 0xaf, V129]
Stack pops: 1
Stack additions: [V144]
Exit stack: [V11, 0xaf, V144]

================================

Block 0x27f
[0x27f:0x284]
---
Predecessors: [0x1e9, 0x241]
Successors: [0x285, 0x2a4]
---
0x27f JUMPDEST
0x280 ISZERO
0x281 PUSH2 0x2a4
0x284 JUMPI
---
0x27f: JUMPDEST 
0x280: V145 = ISZERO S0
0x281: V146 = 0x2a4
0x284: JUMPI 0x2a4 V145
---
Entry stack: [V11, 0xaf, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xaf]

================================

Block 0x285
[0x285:0x2a3]
---
Predecessors: [0x27f]
Successors: [0x2a9]
---
0x285 PUSH1 0x1
0x287 PUSH1 0x3
0x289 PUSH1 0x0
0x28b PUSH2 0x100
0x28e EXP
0x28f DUP2
0x290 SLOAD
0x291 DUP2
0x292 PUSH1 0xff
0x294 MUL
0x295 NOT
0x296 AND
0x297 SWAP1
0x298 DUP4
0x299 ISZERO
0x29a ISZERO
0x29b MUL
0x29c OR
0x29d SWAP1
0x29e SSTORE
0x29f POP
0x2a0 PUSH2 0x2a9
0x2a3 JUMP
---
0x285: V147 = 0x1
0x287: V148 = 0x3
0x289: V149 = 0x0
0x28b: V150 = 0x100
0x28e: V151 = EXP 0x100 0x0
0x290: V152 = S[0x3]
0x292: V153 = 0xff
0x294: V154 = MUL 0xff 0x1
0x295: V155 = NOT 0xff
0x296: V156 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V152
0x299: V157 = ISZERO 0x1
0x29a: V158 = ISZERO 0x0
0x29b: V159 = MUL 0x1 0x1
0x29c: V160 = OR 0x1 V156
0x29e: S[0x3] = V160
0x2a0: V161 = 0x2a9
0x2a3: JUMP 0x2a9
---
Entry stack: [V11, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf]

================================

Block 0x2a4
[0x2a4:0x2a8]
---
Predecessors: [0x27f]
Successors: []
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a4: JUMPDEST 
0x2a5: V162 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf]

================================

Block 0x2a9
[0x2a9:0x2aa]
---
Predecessors: [0x285]
Successors: [0xaf]
---
0x2a9 JUMPDEST
0x2aa JUMP
---
0x2a9: JUMPDEST 
0x2aa: JUMP 0xaf
---
Entry stack: [V11, 0xaf]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ab
[0x2ab:0x302]
---
Predecessors: [0xb1]
Successors: [0x303, 0x309]
---
0x2ab JUMPDEST
0x2ac CALLER
0x2ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c2 AND
0x2c3 PUSH1 0x1
0x2c5 PUSH1 0x0
0x2c7 SWAP1
0x2c8 SLOAD
0x2c9 SWAP1
0x2ca PUSH2 0x100
0x2cd EXP
0x2ce SWAP1
0x2cf DIV
0x2d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e5 AND
0x2e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fb AND
0x2fc EQ
0x2fd DUP1
0x2fe ISZERO
0x2ff PUSH2 0x309
0x302 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V163 = CALLER
0x2ad: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2c3: V166 = 0x1
0x2c5: V167 = 0x0
0x2c8: V168 = S[0x1]
0x2ca: V169 = 0x100
0x2cd: V170 = EXP 0x100 0x0
0x2cf: V171 = DIV V168 0x1
0x2d0: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x2e6: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2fc: V176 = EQ V175 V165
0x2fe: V177 = ISZERO V176
0x2ff: V178 = 0x309
0x302: JUMPI 0x309 V177
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: [V176]
Exit stack: [V11, 0xb9, V176]

================================

Block 0x303
[0x303:0x308]
---
Predecessors: [0x2ab]
Successors: [0x309]
---
0x303 POP
0x304 PUSH1 0x2
0x306 SLOAD
0x307 TIMESTAMP
0x308 GT
---
0x304: V179 = 0x2
0x306: V180 = S[0x2]
0x307: V181 = TIMESTAMP
0x308: V182 = GT V181 V180
---
Entry stack: [V11, 0xb9, V176]
Stack pops: 1
Stack additions: [V182]
Exit stack: [V11, 0xb9, V182]

================================

Block 0x309
[0x309:0x30e]
---
Predecessors: [0x2ab, 0x303]
Successors: [0x30f, 0x36d]
---
0x309 JUMPDEST
0x30a ISZERO
0x30b PUSH2 0x36d
0x30e JUMPI
---
0x309: JUMPDEST 
0x30a: V183 = ISZERO S0
0x30b: V184 = 0x36d
0x30e: JUMPI 0x36d V183
---
Entry stack: [V11, 0xb9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x30f
[0x30f:0x361]
---
Predecessors: [0x309]
Successors: [0x362, 0x36b]
---
0x30f CALLER
0x310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x325 AND
0x326 PUSH2 0x8fc
0x329 ADDRESS
0x32a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33f AND
0x340 BALANCE
0x341 SWAP1
0x342 DUP2
0x343 ISZERO
0x344 MUL
0x345 SWAP1
0x346 PUSH1 0x40
0x348 MLOAD
0x349 PUSH1 0x0
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f DUP4
0x350 SUB
0x351 DUP2
0x352 DUP6
0x353 DUP9
0x354 DUP9
0x355 CALL
0x356 SWAP4
0x357 POP
0x358 POP
0x359 POP
0x35a POP
0x35b ISZERO
0x35c DUP1
0x35d ISZERO
0x35e PUSH2 0x36b
0x361 JUMPI
---
0x30f: V185 = CALLER
0x310: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x325: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x326: V188 = 0x8fc
0x329: V189 = ADDRESS
0x32a: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x340: V192 = BALANCE V191
0x343: V193 = ISZERO V192
0x344: V194 = MUL V193 0x8fc
0x346: V195 = 0x40
0x348: V196 = M[0x40]
0x349: V197 = 0x0
0x34b: V198 = 0x40
0x34d: V199 = M[0x40]
0x350: V200 = SUB V196 V199
0x355: V201 = CALL V194 V187 V192 V199 V200 V199 0x0
0x35b: V202 = ISZERO V201
0x35d: V203 = ISZERO V202
0x35e: V204 = 0x36b
0x361: JUMPI 0x36b V203
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: [V202]
Exit stack: [V11, 0xb9, V202]

================================

Block 0x362
[0x362:0x36a]
---
Predecessors: [0x30f]
Successors: []
---
0x362 RETURNDATASIZE
0x363 PUSH1 0x0
0x365 DUP1
0x366 RETURNDATACOPY
0x367 RETURNDATASIZE
0x368 PUSH1 0x0
0x36a REVERT
---
0x362: V205 = RETURNDATASIZE
0x363: V206 = 0x0
0x366: RETURNDATACOPY 0x0 0x0 V205
0x367: V207 = RETURNDATASIZE
0x368: V208 = 0x0
0x36a: REVERT 0x0 V207
---
Entry stack: [V11, 0xb9, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V202]

================================

Block 0x36b
[0x36b:0x36c]
---
Predecessors: [0x30f]
Successors: [0x36d]
---
0x36b JUMPDEST
0x36c POP
---
0x36b: JUMPDEST 
---
Entry stack: [V11, 0xb9, V202]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x36d
[0x36d:0x36e]
---
Predecessors: [0x309, 0x36b]
Successors: [0xb9]
---
0x36d JUMPDEST
0x36e JUMP
---
0x36d: JUMPDEST 
0x36e: JUMP 0xb9
---
Entry stack: [V11, 0xb9]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x36f
[0x36f:0x3c4]
---
Predecessors: [0xc7]
Successors: [0x3c5, 0x3cc]
---
0x36f JUMPDEST
0x370 PUSH1 0x0
0x372 DUP1
0x373 SWAP1
0x374 SLOAD
0x375 SWAP1
0x376 PUSH2 0x100
0x379 EXP
0x37a SWAP1
0x37b DIV
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 AND
0x3a8 CALLER
0x3a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3be AND
0x3bf EQ
0x3c0 ISZERO
0x3c1 PUSH2 0x3cc
0x3c4 JUMPI
---
0x36f: JUMPDEST 
0x370: V209 = 0x0
0x374: V210 = S[0x0]
0x376: V211 = 0x100
0x379: V212 = EXP 0x100 0x0
0x37b: V213 = DIV V210 0x1
0x37c: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x392: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3a8: V218 = CALLER
0x3a9: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3bf: V221 = EQ V220 V217
0x3c0: V222 = ISZERO V221
0x3c1: V223 = 0x3cc
0x3c4: JUMPI 0x3cc V222
---
Entry stack: [V11, 0xe6, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V52]

================================

Block 0x3c5
[0x3c5:0x3cb]
---
Predecessors: [0x36f]
Successors: [0x3cc]
---
0x3c5 DUP1
0x3c6 PUSH1 0x2
0x3c8 DUP2
0x3c9 SWAP1
0x3ca SSTORE
0x3cb POP
---
0x3c6: V224 = 0x2
0x3ca: S[0x2] = V52
---
Entry stack: [V11, 0xe6, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe6, V52]

================================

Block 0x3cc
[0x3cc:0x3ce]
---
Predecessors: [0x36f, 0x3c5]
Successors: [0xe6]
---
0x3cc JUMPDEST
0x3cd POP
0x3ce JUMP
---
0x3cc: JUMPDEST 
0x3ce: JUMP 0xe6
---
Entry stack: [V11, 0xe6, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cf
[0x3cf:0x404]
---
Predecessors: []
Successors: []
---
0x3cf STOP
0x3d0 LOG1
0x3d1 PUSH6 0x627a7a723058
0x3d8 SHA3
0x3d9 MISSING 0xa8
0x3da PUSH8 0xdd8594a944c09ece
0x3e3 MISSING 0x1e
0x3e4 MISSING 0xab
0x3e5 MISSING 0xd7
0x3e6 MISSING 0xf7
0x3e7 DUP12
0x3e8 PUSH28 0x1a09cb9115d09c47178a48dcca9d75760029
---
0x3cf: STOP 
0x3d0: LOG S0 S1 S2
0x3d1: V225 = 0x627a7a723058
0x3d8: V226 = SHA3 0x627a7a723058 S3
0x3d9: MISSING 0xa8
0x3da: V227 = 0xdd8594a944c09ece
0x3e3: MISSING 0x1e
0x3e4: MISSING 0xab
0x3e5: MISSING 0xd7
0x3e6: MISSING 0xf7
0x3e8: V228 = 0x1a09cb9115d09c47178a48dcca9d75760029
---
Entry stack: []
Stack pops: 0
Stack additions: [V226, 0xdd8594a944c09ece, 0x1a09cb9115d09c47178a48dcca9d75760029, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0xf776fb2
Entry block: 0x64
Exit block: 0x98
Body: 0x64, 0x98, 0xe8, 0x100, 0x10d, 0x113, 0x14f, 0x155, 0x1e6

Function 1:
Public function signature: 0x2d3727bf
Entry block: 0x9a
Exit block: 0xaf
Body: 0x9a, 0xa2, 0xa6, 0xaf, 0x1e9, 0x241, 0x27f, 0x285, 0x2a4, 0x2a9

Function 2:
Public function signature: 0x45e479f6
Entry block: 0xb1
Exit block: 0x362
Body: 0xb1, 0xb9, 0x2ab, 0x303, 0x309, 0x30f, 0x362, 0x36b, 0x36d

Function 3:
Public function signature: 0xffe8ee35
Entry block: 0xbb
Exit block: 0xe6
Body: 0xbb, 0xc3, 0xc7, 0xe6, 0x36f, 0x3c5, 0x3cc

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

