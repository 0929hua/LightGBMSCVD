Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x107]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4911d293
0x3c EQ
0x3d PUSH2 0x107
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4911d293
0x3c: V13 = EQ 0x4911d293 V11
0x3d: V14 = 0x107
0x40: JUMPI 0x107 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x52]
---
Predecessors: [0x0, 0xd]
Successors: [0x53, 0x57]
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 PUSH1 0x0
0x47 DUP1
0x48 DUP1
0x49 SLOAD
0x4a SWAP1
0x4b POP
0x4c GT
0x4d ISZERO
0x4e ISZERO
0x4f PUSH2 0x57
0x52 JUMPI
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: V16 = 0x0
0x49: V17 = S[0x0]
0x4c: V18 = GT V17 0x0
0x4d: V19 = ISZERO V18
0x4e: V20 = ISZERO V19
0x4f: V21 = 0x57
0x52: JUMPI 0x57 V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x41]
Successors: []
---
0x53 PUSH1 0x0
0x55 DUP1
0x56 REVERT
---
0x53: V22 = 0x0
0x56: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0x57
[0x57:0x65]
---
Predecessors: [0x41]
Successors: [0x66, 0x67]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b SLOAD
0x5c SWAP1
0x5d POP
0x5e CALLVALUE
0x5f DUP2
0x60 ISZERO
0x61 ISZERO
0x62 PUSH2 0x67
0x65 JUMPI
---
0x57: JUMPDEST 
0x58: V23 = 0x0
0x5b: V24 = S[0x0]
0x5e: V25 = CALLVALUE
0x60: V26 = ISZERO V24
0x61: V27 = ISZERO V26
0x62: V28 = 0x67
0x65: JUMPI 0x67 V27
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: [V24, V25]
Exit stack: [V11, 0x0, 0x0, V24, V25]

================================

Block 0x66
[0x66:0x66]
---
Predecessors: [0x57]
Successors: []
---
0x66 INVALID
---
0x66: INVALID 
---
Entry stack: [V11, 0x0, 0x0, V24, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, V24, V25]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x57]
Successors: [0x6f]
---
0x67 JUMPDEST
0x68 DIV
0x69 SWAP2
0x6a POP
0x6b PUSH1 0x0
0x6d SWAP1
0x6e POP
---
0x67: JUMPDEST 
0x68: V29 = DIV V25 V24
0x6b: V30 = 0x0
---
Entry stack: [V11, 0x0, 0x0, V24, V25]
Stack pops: 4
Stack additions: [V29, 0x0]
Exit stack: [V11, V29, 0x0]

================================

Block 0x6f
[0x6f:0x7c]
---
Predecessors: [0x67, 0xf6]
Successors: [0x7d, 0x103]
---
0x6f JUMPDEST
0x70 PUSH1 0x0
0x72 DUP1
0x73 SLOAD
0x74 SWAP1
0x75 POP
0x76 DUP2
0x77 LT
0x78 ISZERO
0x79 PUSH2 0x103
0x7c JUMPI
---
0x6f: JUMPDEST 
0x70: V31 = 0x0
0x73: V32 = S[0x0]
0x77: V33 = LT S0 V32
0x78: V34 = ISZERO V33
0x79: V35 = 0x103
0x7c: JUMPI 0x103 V34
---
Entry stack: [V11, V29, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, V29, S0]

================================

Block 0x7d
[0x7d:0x89]
---
Predecessors: [0x6f]
Successors: [0x8a, 0x8b]
---
0x7d PUSH1 0x0
0x7f DUP2
0x80 DUP2
0x81 SLOAD
0x82 DUP2
0x83 LT
0x84 ISZERO
0x85 ISZERO
0x86 PUSH2 0x8b
0x89 JUMPI
---
0x7d: V36 = 0x0
0x81: V37 = S[0x0]
0x83: V38 = LT S0 V37
0x84: V39 = ISZERO V38
0x85: V40 = ISZERO V39
0x86: V41 = 0x8b
0x89: JUMPI 0x8b V40
---
Entry stack: [V11, V29, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, V29, S0, 0x0, S0]

================================

Block 0x8a
[0x8a:0x8a]
---
Predecessors: [0x7d]
Successors: []
---
0x8a INVALID
---
0x8a: INVALID 
---
Entry stack: [V11, V29, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V29, S2, 0x0, S0]

================================

Block 0x8b
[0x8b:0xf1]
---
Predecessors: [0x7d]
Successors: [0xf2, 0xf6]
---
0x8b JUMPDEST
0x8c SWAP1
0x8d PUSH1 0x0
0x8f MSTORE
0x90 PUSH1 0x20
0x92 PUSH1 0x0
0x94 SHA3
0x95 SWAP1
0x96 ADD
0x97 PUSH1 0x0
0x99 SWAP1
0x9a SLOAD
0x9b SWAP1
0x9c PUSH2 0x100
0x9f EXP
0xa0 SWAP1
0xa1 DIV
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd AND
0xce PUSH2 0x8fc
0xd1 DUP4
0xd2 SWAP1
0xd3 DUP2
0xd4 ISZERO
0xd5 MUL
0xd6 SWAP1
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda PUSH1 0x0
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 DUP4
0xe1 SUB
0xe2 DUP2
0xe3 DUP6
0xe4 DUP9
0xe5 DUP9
0xe6 CALL
0xe7 SWAP4
0xe8 POP
0xe9 POP
0xea POP
0xeb POP
0xec ISZERO
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0x8b: JUMPDEST 
0x8d: V42 = 0x0
0x8f: M[0x0] = 0x0
0x90: V43 = 0x20
0x92: V44 = 0x0
0x94: V45 = SHA3 0x0 0x20
0x96: V46 = ADD S0 V45
0x97: V47 = 0x0
0x9a: V48 = S[V46]
0x9c: V49 = 0x100
0x9f: V50 = EXP 0x100 0x0
0xa1: V51 = DIV V48 0x1
0xa2: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xb8: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xce: V56 = 0x8fc
0xd4: V57 = ISZERO V29
0xd5: V58 = MUL V57 0x8fc
0xd7: V59 = 0x40
0xd9: V60 = M[0x40]
0xda: V61 = 0x0
0xdc: V62 = 0x40
0xde: V63 = M[0x40]
0xe1: V64 = SUB V60 V63
0xe6: V65 = CALL V58 V55 V29 V63 V64 V63 0x0
0xec: V66 = ISZERO V65
0xed: V67 = ISZERO V66
0xee: V68 = 0xf6
0xf1: JUMPI 0xf6 V67
---
Entry stack: [V11, V29, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V11, V29, S2]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0x8b]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V69 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11, V29, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V29, S0]

================================

Block 0xf6
[0xf6:0x102]
---
Predecessors: [0x8b]
Successors: [0x6f]
---
0xf6 JUMPDEST
0xf7 DUP1
0xf8 DUP1
0xf9 PUSH1 0x1
0xfb ADD
0xfc SWAP2
0xfd POP
0xfe POP
0xff PUSH2 0x6f
0x102 JUMP
---
0xf6: JUMPDEST 
0xf9: V70 = 0x1
0xfb: V71 = ADD 0x1 S0
0xff: V72 = 0x6f
0x102: JUMP 0x6f
---
Entry stack: [V11, V29, S0]
Stack pops: 1
Stack additions: [V71]
Exit stack: [V11, V29, V71]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0x6f]
Successors: []
---
0x103 JUMPDEST
0x104 POP
0x105 POP
0x106 STOP
---
0x103: JUMPDEST 
0x106: STOP 
---
Entry stack: [V11, V29, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0xd]
Successors: [0x10e, 0x112]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V73 = CALLVALUE
0x109: V74 = ISZERO V73
0x10a: V75 = 0x112
0x10d: JUMPI 0x112 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x107]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V76 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x112
[0x112:0x127]
---
Predecessors: [0x107]
Successors: [0x16a]
---
0x112 JUMPDEST
0x113 PUSH2 0x128
0x116 PUSH1 0x4
0x118 DUP1
0x119 DUP1
0x11a CALLDATALOAD
0x11b SWAP1
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 SWAP2
0x121 SWAP1
0x122 POP
0x123 POP
0x124 PUSH2 0x16a
0x127 JUMP
---
0x112: JUMPDEST 
0x113: V77 = 0x128
0x116: V78 = 0x4
0x11a: V79 = CALLDATALOAD 0x4
0x11c: V80 = 0x20
0x11e: V81 = ADD 0x20 0x4
0x124: V82 = 0x16a
0x127: JUMP 0x16a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x128, V79]
Exit stack: [V11, 0x128, V79]

================================

Block 0x128
[0x128:0x169]
---
Predecessors: [0x179]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP1
0x12d DUP3
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP2
0x160 POP
0x161 POP
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 SWAP2
0x167 SUB
0x168 SWAP1
0x169 RETURN
---
0x128: JUMPDEST 
0x129: V83 = 0x40
0x12b: V84 = M[0x40]
0x12e: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x144: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x15b: M[V84] = V88
0x15c: V89 = 0x20
0x15e: V90 = ADD 0x20 V84
0x162: V91 = 0x40
0x164: V92 = M[0x40]
0x167: V93 = SUB V90 V92
0x169: RETURN V92 V93
---
Entry stack: [V11, 0x128, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x128]

================================

Block 0x16a
[0x16a:0x177]
---
Predecessors: [0x112]
Successors: [0x178, 0x179]
---
0x16a JUMPDEST
0x16b PUSH1 0x0
0x16d DUP2
0x16e DUP2
0x16f SLOAD
0x170 DUP2
0x171 LT
0x172 ISZERO
0x173 ISZERO
0x174 PUSH2 0x179
0x177 JUMPI
---
0x16a: JUMPDEST 
0x16b: V94 = 0x0
0x16f: V95 = S[0x0]
0x171: V96 = LT V79 V95
0x172: V97 = ISZERO V96
0x173: V98 = ISZERO V97
0x174: V99 = 0x179
0x177: JUMPI 0x179 V98
---
Entry stack: [V11, 0x128, V79]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0x128, V79, 0x0, V79]

================================

Block 0x178
[0x178:0x178]
---
Predecessors: [0x16a]
Successors: []
---
0x178 INVALID
---
0x178: INVALID 
---
Entry stack: [V11, 0x128, V79, 0x0, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x128, V79, 0x0, V79]

================================

Block 0x179
[0x179:0x1a8]
---
Predecessors: [0x16a]
Successors: [0x128]
---
0x179 JUMPDEST
0x17a SWAP1
0x17b PUSH1 0x0
0x17d MSTORE
0x17e PUSH1 0x20
0x180 PUSH1 0x0
0x182 SHA3
0x183 SWAP1
0x184 ADD
0x185 PUSH1 0x0
0x187 SWAP2
0x188 POP
0x189 SLOAD
0x18a SWAP1
0x18b PUSH2 0x100
0x18e EXP
0x18f SWAP1
0x190 DIV
0x191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6 AND
0x1a7 DUP2
0x1a8 JUMP
---
0x179: JUMPDEST 
0x17b: V100 = 0x0
0x17d: M[0x0] = 0x0
0x17e: V101 = 0x20
0x180: V102 = 0x0
0x182: V103 = SHA3 0x0 0x20
0x184: V104 = ADD V79 V103
0x185: V105 = 0x0
0x189: V106 = S[V104]
0x18b: V107 = 0x100
0x18e: V108 = EXP 0x100 0x0
0x190: V109 = DIV V106 0x1
0x191: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1a8: JUMP 0x128
---
Entry stack: [V11, 0x128, V79, 0x0, V79]
Stack pops: 4
Stack additions: [S3, V111]
Exit stack: [V11, 0x128, V111]

================================

Block 0x1a9
[0x1a9:0x1e8]
---
Predecessors: []
Successors: []
---
0x1a9 STOP
0x1aa LOG1
0x1ab PUSH6 0x627a7a723058
0x1b2 SHA3
0x1b3 SMOD
0x1b4 DUP8
0x1b5 MISSING 0xce
0x1b6 SWAP16
0x1b7 PUSH17 0xe1d1ec65b68727482ece180767c6e63d61
0x1c9 PUSH31 0x2d9b49b85a6c0e08ae0029
---
0x1a9: STOP 
0x1aa: LOG S0 S1 S2
0x1ab: V112 = 0x627a7a723058
0x1b2: V113 = SHA3 0x627a7a723058 S3
0x1b3: V114 = SMOD V113 S4
0x1b5: MISSING 0xce
0x1b7: V115 = 0xe1d1ec65b68727482ece180767c6e63d61
0x1c9: V116 = 0x2d9b49b85a6c0e08ae0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, V114, S5, S6, S7, S8, S9, S10, S11, 0x2d9b49b85a6c0e08ae0029, 0xe1d1ec65b68727482ece180767c6e63d61, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x4911d293
Entry block: 0x107
Exit block: 0x128
Body: 0x107, 0x10e, 0x112, 0x128, 0x16a, 0x178, 0x179

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0xf2
Body: 0x41, 0x53, 0x57, 0x66, 0x67, 0x6f, 0x7d, 0x8a, 0x8b, 0xf2, 0xf6, 0x103

