Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8c
0xa: JUMPI 0x8c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xc4]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1793c314
0x3a EQ
0x3b PUSH2 0xc4
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1793c314
0x3a: V12 = EQ 0x1793c314 V10
0x3b: V13 = 0xc4
0x3e: JUMPI 0xc4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x11c]
---
0x3f DUP1
0x40 PUSH4 0x21e92d49
0x45 EQ
0x46 PUSH2 0x11c
0x49 JUMPI
---
0x40: V14 = 0x21e92d49
0x45: V15 = EQ 0x21e92d49 V10
0x46: V16 = 0x11c
0x49: JUMPI 0x11c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x153]
---
0x4a DUP1
0x4b PUSH4 0x872fe620
0x50 EQ
0x51 PUSH2 0x153
0x54 JUMPI
---
0x4b: V17 = 0x872fe620
0x50: V18 = EQ 0x872fe620 V10
0x51: V19 = 0x153
0x54: JUMPI 0x153 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x168]
---
0x55 DUP1
0x56 PUSH4 0x8da5cb5b
0x5b EQ
0x5c PUSH2 0x168
0x5f JUMPI
---
0x56: V20 = 0x8da5cb5b
0x5b: V21 = EQ 0x8da5cb5b V10
0x5c: V22 = 0x168
0x5f: JUMPI 0x168 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1bd]
---
0x60 DUP1
0x61 PUSH4 0x9066314e
0x66 EQ
0x67 PUSH2 0x1bd
0x6a JUMPI
---
0x61: V23 = 0x9066314e
0x66: V24 = EQ 0x9066314e V10
0x67: V25 = 0x1bd
0x6a: JUMPI 0x1bd V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x1e2]
---
0x6b DUP1
0x6c PUSH4 0xa5bbc423
0x71 EQ
0x72 PUSH2 0x1e2
0x75 JUMPI
---
0x6c: V26 = 0xa5bbc423
0x71: V27 = EQ 0xa5bbc423 V10
0x72: V28 = 0x1e2
0x75: JUMPI 0x1e2 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x23f]
---
0x76 DUP1
0x77 PUSH4 0xc46f3e25
0x7c EQ
0x7d PUSH2 0x23f
0x80 JUMPI
---
0x77: V29 = 0xc46f3e25
0x7c: V30 = EQ 0xc46f3e25 V10
0x7d: V31 = 0x23f
0x80: JUMPI 0x23f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x26c]
---
0x81 DUP1
0x82 PUSH4 0xf341cae8
0x87 EQ
0x88 PUSH2 0x26c
0x8b JUMPI
---
0x82: V32 = 0xf341cae8
0x87: V33 = EQ 0xf341cae8 V10
0x88: V34 = 0x26c
0x8b: JUMPI 0x26c V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x0, 0x81]
Successors: [0x8d]
---
0x8c JUMPDEST
---
0x8c: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x98]
---
Predecessors: [0x8c]
Successors: [0x99, 0x9a]
---
0x8d JUMPDEST
0x8e PUSH1 0x0
0x90 PUSH1 0x2
0x92 DUP2
0x93 GT
0x94 ISZERO
0x95 PUSH2 0x9a
0x98 JUMPI
---
0x8d: JUMPDEST 
0x8e: V35 = 0x0
0x90: V36 = 0x2
0x93: V37 = GT 0x0 0x2
0x94: V38 = ISZERO 0x0
0x95: V39 = 0x9a
0x98: JUMPI 0x9a 0x1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x99
[0x99:0x99]
---
Predecessors: [0x8d]
Successors: []
---
0x99 INVALID
---
0x99: INVALID 
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0x9a
[0x9a:0xb3]
---
Predecessors: [0x8d]
Successors: [0xb4, 0xb5]
---
0x9a JUMPDEST
0x9b PUSH1 0x12
0x9d PUSH1 0x2
0x9f SWAP1
0xa0 SLOAD
0xa1 SWAP1
0xa2 PUSH2 0x100
0xa5 EXP
0xa6 SWAP1
0xa7 DIV
0xa8 PUSH1 0xff
0xaa AND
0xab PUSH1 0x2
0xad DUP2
0xae GT
0xaf ISZERO
0xb0 PUSH2 0xb5
0xb3 JUMPI
---
0x9a: JUMPDEST 
0x9b: V40 = 0x12
0x9d: V41 = 0x2
0xa0: V42 = S[0x12]
0xa2: V43 = 0x100
0xa5: V44 = EXP 0x100 0x2
0xa7: V45 = DIV V42 0x10000
0xa8: V46 = 0xff
0xaa: V47 = AND 0xff V45
0xab: V48 = 0x2
0xae: V49 = GT V47 0x2
0xaf: V50 = ISZERO V49
0xb0: V51 = 0xb5
0xb3: JUMPI 0xb5 V50
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V10, 0x0, V47]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x9a]
Successors: []
---
0xb4 INVALID
---
0xb4: INVALID 
---
Entry stack: [V10, 0x0, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, V47]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0x9a]
Successors: [0xbd, 0xc1]
---
0xb5 JUMPDEST
0xb6 EQ
0xb7 ISZERO
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb5: JUMPDEST 
0xb6: V52 = EQ V47 0x0
0xb7: V53 = ISZERO V52
0xb8: V54 = ISZERO V53
0xb9: V55 = 0xc1
0xbc: JUMPI 0xc1 V54
---
Entry stack: [V10, 0x0, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb5]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V56 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc1
[0xc1:0xc1]
---
Predecessors: [0xb5]
Successors: [0xc2]
---
0xc1 JUMPDEST
---
0xc1: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0xc1]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0xb]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V57 = CALLVALUE
0xc6: V58 = ISZERO V57
0xc7: V59 = 0xcf
0xca: JUMPI 0xcf V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V60 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0x119]
---
Predecessors: [0xc4]
Successors: [0x2a0]
---
0xcf JUMPDEST
0xd0 PUSH2 0x11a
0xd3 PUSH1 0x4
0xd5 DUP1
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee SWAP1
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP1
0xf3 SWAP2
0xf4 SWAP1
0xf5 DUP1
0xf6 CALLDATALOAD
0xf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c AND
0x10d SWAP1
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP1
0x112 SWAP2
0x113 SWAP1
0x114 POP
0x115 POP
0x116 PUSH2 0x2a0
0x119 JUMP
---
0xcf: JUMPDEST 
0xd0: V61 = 0x11a
0xd3: V62 = 0x4
0xd7: V63 = CALLDATALOAD 0x4
0xd8: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xef: V66 = 0x20
0xf1: V67 = ADD 0x20 0x4
0xf6: V68 = CALLDATALOAD 0x24
0xf7: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x10e: V71 = 0x20
0x110: V72 = ADD 0x20 0x24
0x116: V73 = 0x2a0
0x119: JUMP 0x2a0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11a, V65, V70]
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x11a
[0x11a:0x11b]
---
Predecessors: [0x3a1]
Successors: []
---
0x11a JUMPDEST
0x11b STOP
---
0x11a: JUMPDEST 
0x11b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x150]
---
Predecessors: [0x3f]
Successors: [0x3a5]
---
0x11c JUMPDEST
0x11d PUSH2 0x151
0x120 PUSH1 0x4
0x122 DUP1
0x123 DUP1
0x124 CALLDATALOAD
0x125 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13a AND
0x13b SWAP1
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP1
0x140 SWAP2
0x141 SWAP1
0x142 DUP1
0x143 CALLDATALOAD
0x144 SWAP1
0x145 PUSH1 0x20
0x147 ADD
0x148 SWAP1
0x149 SWAP2
0x14a SWAP1
0x14b POP
0x14c POP
0x14d PUSH2 0x3a5
0x150 JUMP
---
0x11c: JUMPDEST 
0x11d: V74 = 0x151
0x120: V75 = 0x4
0x124: V76 = CALLDATALOAD 0x4
0x125: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x13a: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x13c: V79 = 0x20
0x13e: V80 = ADD 0x20 0x4
0x143: V81 = CALLDATALOAD 0x24
0x145: V82 = 0x20
0x147: V83 = ADD 0x20 0x24
0x14d: V84 = 0x3a5
0x150: JUMP 0x3a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x151, V78, V81]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x151
[0x151:0x152]
---
Predecessors: [0x4e0]
Successors: []
---
0x151 JUMPDEST
0x152 STOP
---
0x151: JUMPDEST 
0x152: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x159]
---
Predecessors: [0x4a]
Successors: [0x15a, 0x15e]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x153: JUMPDEST 
0x154: V85 = CALLVALUE
0x155: V86 = ISZERO V85
0x156: V87 = 0x15e
0x159: JUMPI 0x15e V86
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x153]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V88 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15e
[0x15e:0x165]
---
Predecessors: [0x153]
Successors: [0x4e4]
---
0x15e JUMPDEST
0x15f PUSH2 0x166
0x162 PUSH2 0x4e4
0x165 JUMP
---
0x15e: JUMPDEST 
0x15f: V89 = 0x166
0x162: V90 = 0x4e4
0x165: JUMP 0x4e4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V10, 0x166]

================================

Block 0x166
[0x166:0x167]
---
Predecessors: [0x64c]
Successors: []
---
0x166 JUMPDEST
0x167 STOP
---
0x166: JUMPDEST 
0x167: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x55]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V91 = CALLVALUE
0x16a: V92 = ISZERO V91
0x16b: V93 = 0x173
0x16e: JUMPI 0x173 V92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V94 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x168]
Successors: [0x64e]
---
0x173 JUMPDEST
0x174 PUSH2 0x17b
0x177 PUSH2 0x64e
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V95 = 0x17b
0x177: V96 = 0x64e
0x17a: JUMP 0x64e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17b]
Exit stack: [V10, 0x17b]

================================

Block 0x17b
[0x17b:0x1bc]
---
Predecessors: [0x64e]
Successors: []
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP3
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
0x1b4 POP
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 SWAP2
0x1ba SUB
0x1bb SWAP1
0x1bc RETURN
---
0x17b: JUMPDEST 
0x17c: V97 = 0x40
0x17e: V98 = M[0x40]
0x181: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x197: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1ae: M[V98] = V102
0x1af: V103 = 0x20
0x1b1: V104 = ADD 0x20 V98
0x1b5: V105 = 0x40
0x1b7: V106 = M[0x40]
0x1ba: V107 = SUB V104 V106
0x1bc: RETURN V106 V107
---
Entry stack: [V10, 0x17b, V468]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17b]

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x60]
Successors: [0x1c4, 0x1c8]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V108 = CALLVALUE
0x1bf: V109 = ISZERO V108
0x1c0: V110 = 0x1c8
0x1c3: JUMPI 0x1c8 V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V111 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c8
[0x1c8:0x1df]
---
Predecessors: [0x1bd]
Successors: [0x674]
---
0x1c8 JUMPDEST
0x1c9 PUSH2 0x1e0
0x1cc PUSH1 0x4
0x1ce DUP1
0x1cf DUP1
0x1d0 CALLDATALOAD
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 SWAP1
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 SWAP2
0x1d9 SWAP1
0x1da POP
0x1db POP
0x1dc PUSH2 0x674
0x1df JUMP
---
0x1c8: JUMPDEST 
0x1c9: V112 = 0x1e0
0x1cc: V113 = 0x4
0x1d0: V114 = CALLDATALOAD 0x4
0x1d1: V115 = ISZERO V114
0x1d2: V116 = ISZERO V115
0x1d4: V117 = 0x20
0x1d6: V118 = ADD 0x20 0x4
0x1dc: V119 = 0x674
0x1df: JUMP 0x674
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0, V116]
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x1e0
[0x1e0:0x1e1]
---
Predecessors: [0x74a]
Successors: []
---
0x1e0 JUMPDEST
0x1e1 STOP
---
0x1e0: JUMPDEST 
0x1e1: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e2
[0x1e2:0x1e8]
---
Predecessors: [0x6b]
Successors: [0x1e9, 0x1ed]
---
0x1e2 JUMPDEST
0x1e3 CALLVALUE
0x1e4 ISZERO
0x1e5 PUSH2 0x1ed
0x1e8 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V120 = CALLVALUE
0x1e4: V121 = ISZERO V120
0x1e5: V122 = 0x1ed
0x1e8: JUMPI 0x1ed V121
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e9
[0x1e9:0x1ec]
---
Predecessors: [0x1e2]
Successors: []
---
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec REVERT
---
0x1e9: V123 = 0x0
0x1ec: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ed
[0x1ed:0x23c]
---
Predecessors: [0x1e2]
Successors: [0x74d]
---
0x1ed JUMPDEST
0x1ee PUSH2 0x23d
0x1f1 PUSH1 0x4
0x1f3 DUP1
0x1f4 DUP1
0x1f5 CALLDATALOAD
0x1f6 SWAP1
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP1
0x1fb DUP3
0x1fc ADD
0x1fd DUP1
0x1fe CALLDATALOAD
0x1ff SWAP1
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP1
0x204 DUP1
0x205 DUP1
0x206 PUSH1 0x1f
0x208 ADD
0x209 PUSH1 0x20
0x20b DUP1
0x20c SWAP2
0x20d DIV
0x20e MUL
0x20f PUSH1 0x20
0x211 ADD
0x212 PUSH1 0x40
0x214 MLOAD
0x215 SWAP1
0x216 DUP2
0x217 ADD
0x218 PUSH1 0x40
0x21a MSTORE
0x21b DUP1
0x21c SWAP4
0x21d SWAP3
0x21e SWAP2
0x21f SWAP1
0x220 DUP2
0x221 DUP2
0x222 MSTORE
0x223 PUSH1 0x20
0x225 ADD
0x226 DUP4
0x227 DUP4
0x228 DUP1
0x229 DUP3
0x22a DUP5
0x22b CALLDATACOPY
0x22c DUP3
0x22d ADD
0x22e SWAP2
0x22f POP
0x230 POP
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 SWAP2
0x236 SWAP1
0x237 POP
0x238 POP
0x239 PUSH2 0x74d
0x23c JUMP
---
0x1ed: JUMPDEST 
0x1ee: V124 = 0x23d
0x1f1: V125 = 0x4
0x1f5: V126 = CALLDATALOAD 0x4
0x1f7: V127 = 0x20
0x1f9: V128 = ADD 0x20 0x4
0x1fc: V129 = ADD 0x4 V126
0x1fe: V130 = CALLDATALOAD V129
0x200: V131 = 0x20
0x202: V132 = ADD 0x20 V129
0x206: V133 = 0x1f
0x208: V134 = ADD 0x1f V130
0x209: V135 = 0x20
0x20d: V136 = DIV V134 0x20
0x20e: V137 = MUL V136 0x20
0x20f: V138 = 0x20
0x211: V139 = ADD 0x20 V137
0x212: V140 = 0x40
0x214: V141 = M[0x40]
0x217: V142 = ADD V141 V139
0x218: V143 = 0x40
0x21a: M[0x40] = V142
0x222: M[V141] = V130
0x223: V144 = 0x20
0x225: V145 = ADD 0x20 V141
0x22b: CALLDATACOPY V145 V132 V130
0x22d: V146 = ADD V145 V130
0x239: V147 = 0x74d
0x23c: JUMP 0x74d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d, V141]
Exit stack: [V10, 0x23d, V141]

================================

Block 0x23d
[0x23d:0x23e]
---
Predecessors: [0x928]
Successors: []
---
0x23d JUMPDEST
0x23e STOP
---
0x23d: JUMPDEST 
0x23e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23f
[0x23f:0x245]
---
Predecessors: [0x76]
Successors: [0x246, 0x24a]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x23f: JUMPDEST 
0x240: V148 = CALLVALUE
0x241: V149 = ISZERO V148
0x242: V150 = 0x24a
0x245: JUMPI 0x24a V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x23f]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V151 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24a
[0x24a:0x251]
---
Predecessors: [0x23f]
Successors: [0x92c]
---
0x24a JUMPDEST
0x24b PUSH2 0x252
0x24e PUSH2 0x92c
0x251 JUMP
---
0x24a: JUMPDEST 
0x24b: V152 = 0x252
0x24e: V153 = 0x92c
0x251: JUMP 0x92c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x252]
Exit stack: [V10, 0x252]

================================

Block 0x252
[0x252:0x26b]
---
Predecessors: [0x92c]
Successors: []
---
0x252 JUMPDEST
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP1
0x257 DUP3
0x258 ISZERO
0x259 ISZERO
0x25a ISZERO
0x25b ISZERO
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 ADD
0x261 SWAP2
0x262 POP
0x263 POP
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 SWAP2
0x269 SUB
0x26a SWAP1
0x26b RETURN
---
0x252: JUMPDEST 
0x253: V154 = 0x40
0x255: V155 = M[0x40]
0x258: V156 = ISZERO V708
0x259: V157 = ISZERO V156
0x25a: V158 = ISZERO V157
0x25b: V159 = ISZERO V158
0x25d: M[V155] = V159
0x25e: V160 = 0x20
0x260: V161 = ADD 0x20 V155
0x264: V162 = 0x40
0x266: V163 = M[0x40]
0x269: V164 = SUB V161 V163
0x26b: RETURN V163 V164
---
Entry stack: [V10, 0x252, V708]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x252]

================================

Block 0x26c
[0x26c:0x272]
---
Predecessors: [0x81]
Successors: [0x273, 0x277]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x26c: JUMPDEST 
0x26d: V165 = CALLVALUE
0x26e: V166 = ISZERO V165
0x26f: V167 = 0x277
0x272: JUMPI 0x277 V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x26c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V168 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x29d]
---
Predecessors: [0x26c]
Successors: [0x93f]
---
0x277 JUMPDEST
0x278 PUSH2 0x29e
0x27b PUSH1 0x4
0x27d DUP1
0x27e DUP1
0x27f CALLDATALOAD
0x280 PUSH1 0x0
0x282 NOT
0x283 AND
0x284 SWAP1
0x285 PUSH1 0x20
0x287 ADD
0x288 SWAP1
0x289 SWAP2
0x28a SWAP1
0x28b DUP1
0x28c CALLDATALOAD
0x28d PUSH1 0x0
0x28f NOT
0x290 AND
0x291 SWAP1
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 SWAP2
0x297 SWAP1
0x298 POP
0x299 POP
0x29a PUSH2 0x93f
0x29d JUMP
---
0x277: JUMPDEST 
0x278: V169 = 0x29e
0x27b: V170 = 0x4
0x27f: V171 = CALLDATALOAD 0x4
0x280: V172 = 0x0
0x282: V173 = NOT 0x0
0x283: V174 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V171
0x285: V175 = 0x20
0x287: V176 = ADD 0x20 0x4
0x28c: V177 = CALLDATALOAD 0x24
0x28d: V178 = 0x0
0x28f: V179 = NOT 0x0
0x290: V180 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V177
0x292: V181 = 0x20
0x294: V182 = ADD 0x20 0x24
0x29a: V183 = 0x93f
0x29d: JUMP 0x93f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x29e, V174, V180]
Exit stack: [V10, 0x29e, V174, V180]

================================

Block 0x29e
[0x29e:0x29f]
---
Predecessors: [0xa7c]
Successors: []
---
0x29e JUMPDEST
0x29f STOP
---
0x29e: JUMPDEST 
0x29f: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a0
[0x2a0:0x2b6]
---
Predecessors: [0xcf]
Successors: [0x2b7, 0x2c1]
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x12
0x2a3 PUSH1 0x0
0x2a5 SWAP1
0x2a6 SLOAD
0x2a7 SWAP1
0x2a8 PUSH2 0x100
0x2ab EXP
0x2ac SWAP1
0x2ad DIV
0x2ae PUSH1 0xff
0x2b0 AND
0x2b1 ISZERO
0x2b2 DUP1
0x2b3 PUSH2 0x2c1
0x2b6 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V184 = 0x12
0x2a3: V185 = 0x0
0x2a6: V186 = S[0x12]
0x2a8: V187 = 0x100
0x2ab: V188 = EXP 0x100 0x0
0x2ad: V189 = DIV V186 0x1
0x2ae: V190 = 0xff
0x2b0: V191 = AND 0xff V189
0x2b1: V192 = ISZERO V191
0x2b3: V193 = 0x2c1
0x2b6: JUMPI 0x2c1 V192
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V10, 0x11a, V65, V70, V192]

================================

Block 0x2b7
[0x2b7:0x2c0]
---
Predecessors: [0x2a0]
Successors: [0x2c1]
---
0x2b7 POP
0x2b8 PUSH1 0x3c
0x2ba PUSH1 0x11
0x2bc SLOAD
0x2bd ADD
0x2be TIMESTAMP
0x2bf GT
0x2c0 ISZERO
---
0x2b8: V194 = 0x3c
0x2ba: V195 = 0x11
0x2bc: V196 = S[0x11]
0x2bd: V197 = ADD V196 0x3c
0x2be: V198 = TIMESTAMP
0x2bf: V199 = GT V198 V197
0x2c0: V200 = ISZERO V199
---
Entry stack: [V10, 0x11a, V65, V70, V192]
Stack pops: 1
Stack additions: [V200]
Exit stack: [V10, 0x11a, V65, V70, V200]

================================

Block 0x2c1
[0x2c1:0x2c6]
---
Predecessors: [0x2a0, 0x2b7]
Successors: [0x2c7, 0x2cb]
---
0x2c1 JUMPDEST
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V201 = ISZERO S0
0x2c3: V202 = 0x2cb
0x2c6: JUMPI 0x2cb V201
---
Entry stack: [V10, 0x11a, V65, V70, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2c1]
Successors: [0x3a1]
---
0x2c7 PUSH2 0x3a1
0x2ca JUMP
---
0x2c7: V203 = 0x3a1
0x2ca: JUMP 0x3a1
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x2cb
[0x2cb:0x2e0]
---
Predecessors: [0x2c1]
Successors: [0x2e1, 0x349]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x12
0x2ce PUSH1 0x1
0x2d0 SWAP1
0x2d1 SLOAD
0x2d2 SWAP1
0x2d3 PUSH2 0x100
0x2d6 EXP
0x2d7 SWAP1
0x2d8 DIV
0x2d9 PUSH1 0xff
0x2db AND
0x2dc ISZERO
0x2dd PUSH2 0x349
0x2e0 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V204 = 0x12
0x2ce: V205 = 0x1
0x2d1: V206 = S[0x12]
0x2d3: V207 = 0x100
0x2d6: V208 = EXP 0x100 0x1
0x2d8: V209 = DIV V206 0x100
0x2d9: V210 = 0xff
0x2db: V211 = AND 0xff V209
0x2dc: V212 = ISZERO V211
0x2dd: V213 = 0x349
0x2e0: JUMPI 0x349 V212
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x2e1
[0x2e1:0x343]
---
Predecessors: [0x2cb]
Successors: [0x344, 0x348]
---
0x2e1 PUSH1 0x3
0x2e3 SLOAD
0x2e4 PUSH1 0x0
0x2e6 NOT
0x2e7 AND
0x2e8 DUP2
0x2e9 PUSH1 0x40
0x2eb MLOAD
0x2ec DUP1
0x2ed DUP3
0x2ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x303 AND
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 AND
0x31a PUSH13 0x1000000000000000000000000
0x328 MUL
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x14
0x32d ADD
0x32e SWAP2
0x32f POP
0x330 POP
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP1
0x335 SWAP2
0x336 SUB
0x337 SWAP1
0x338 SHA3
0x339 PUSH1 0x0
0x33b NOT
0x33c AND
0x33d EQ
0x33e ISZERO
0x33f ISZERO
0x340 PUSH2 0x348
0x343 JUMPI
---
0x2e1: V214 = 0x3
0x2e3: V215 = S[0x3]
0x2e4: V216 = 0x0
0x2e6: V217 = NOT 0x0
0x2e7: V218 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V215
0x2e9: V219 = 0x40
0x2eb: V220 = M[0x40]
0x2ee: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x303: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x304: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x31a: V225 = 0x1000000000000000000000000
0x328: V226 = MUL 0x1000000000000000000000000 V224
0x32a: M[V220] = V226
0x32b: V227 = 0x14
0x32d: V228 = ADD 0x14 V220
0x331: V229 = 0x40
0x333: V230 = M[0x40]
0x336: V231 = SUB V228 V230
0x338: V232 = SHA3 V230 V231
0x339: V233 = 0x0
0x33b: V234 = NOT 0x0
0x33c: V235 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V232
0x33d: V236 = EQ V235 V218
0x33e: V237 = ISZERO V236
0x33f: V238 = ISZERO V237
0x340: V239 = 0x348
0x343: JUMPI 0x348 V238
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x344
[0x344:0x347]
---
Predecessors: [0x2e1]
Successors: []
---
0x344 PUSH1 0x0
0x346 DUP1
0x347 REVERT
---
0x344: V240 = 0x0
0x347: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x348
[0x348:0x348]
---
Predecessors: [0x2e1]
Successors: [0x349]
---
0x348 JUMPDEST
---
0x348: JUMPDEST 
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x349
[0x349:0x39b]
---
Predecessors: [0x2cb, 0x348]
Successors: [0x39c, 0x3a0]
---
0x349 JUMPDEST
0x34a DUP2
0x34b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x360 AND
0x361 PUSH2 0x8fc
0x364 ADDRESS
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b BALANCE
0x37c SWAP1
0x37d DUP2
0x37e ISZERO
0x37f MUL
0x380 SWAP1
0x381 PUSH1 0x40
0x383 MLOAD
0x384 PUSH1 0x0
0x386 PUSH1 0x40
0x388 MLOAD
0x389 DUP1
0x38a DUP4
0x38b SUB
0x38c DUP2
0x38d DUP6
0x38e DUP9
0x38f DUP9
0x390 CALL
0x391 SWAP4
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 ISZERO
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x349: JUMPDEST 
0x34b: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x360: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x361: V243 = 0x8fc
0x364: V244 = ADDRESS
0x365: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x37b: V247 = BALANCE V246
0x37e: V248 = ISZERO V247
0x37f: V249 = MUL V248 0x8fc
0x381: V250 = 0x40
0x383: V251 = M[0x40]
0x384: V252 = 0x0
0x386: V253 = 0x40
0x388: V254 = M[0x40]
0x38b: V255 = SUB V251 V254
0x390: V256 = CALL V249 V242 V247 V254 V255 V254 0x0
0x396: V257 = ISZERO V256
0x397: V258 = ISZERO V257
0x398: V259 = 0x3a0
0x39b: JUMPI 0x3a0 V258
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x349]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V260 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x3a0
[0x3a0:0x3a0]
---
Predecessors: [0x349]
Successors: [0x3a1]
---
0x3a0 JUMPDEST
---
0x3a0: JUMPDEST 
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x3a1
[0x3a1:0x3a4]
---
Predecessors: [0x2c7, 0x3a0]
Successors: [0x11a]
---
0x3a1 JUMPDEST
0x3a2 POP
0x3a3 POP
0x3a4 JUMP
---
0x3a1: JUMPDEST 
0x3a4: JUMP 0x11a
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a5
[0x3a5:0x3fc]
---
Predecessors: [0x11c]
Successors: [0x3fd, 0x401]
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x2
0x3a8 PUSH1 0x0
0x3aa SWAP1
0x3ab SLOAD
0x3ac SWAP1
0x3ad PUSH2 0x100
0x3b0 EXP
0x3b1 SWAP1
0x3b2 DIV
0x3b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c8 AND
0x3c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3de AND
0x3df CALLER
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 EQ
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V261 = 0x2
0x3a8: V262 = 0x0
0x3ab: V263 = S[0x2]
0x3ad: V264 = 0x100
0x3b0: V265 = EXP 0x100 0x0
0x3b2: V266 = DIV V263 0x1
0x3b3: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x3c9: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x3df: V271 = CALLER
0x3e0: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x3f6: V274 = EQ V273 V270
0x3f7: V275 = ISZERO V274
0x3f8: V276 = ISZERO V275
0x3f9: V277 = 0x401
0x3fc: JUMPI 0x401 V276
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3a5]
Successors: []
---
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 REVERT
---
0x3fd: V278 = 0x0
0x400: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x401
[0x401:0x40c]
---
Predecessors: [0x3a5]
Successors: [0x40d, 0x40e]
---
0x401 JUMPDEST
0x402 PUSH1 0x0
0x404 PUSH1 0x2
0x406 DUP2
0x407 GT
0x408 ISZERO
0x409 PUSH2 0x40e
0x40c JUMPI
---
0x401: JUMPDEST 
0x402: V279 = 0x0
0x404: V280 = 0x2
0x407: V281 = GT 0x0 0x2
0x408: V282 = ISZERO 0x0
0x409: V283 = 0x40e
0x40c: JUMPI 0x40e 0x1
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x151, V78, V81, 0x0]

================================

Block 0x40d
[0x40d:0x40d]
---
Predecessors: [0x401]
Successors: []
---
0x40d INVALID
---
0x40d: INVALID 
---
Entry stack: [V10, 0x151, V78, V81, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81, 0x0]

================================

Block 0x40e
[0x40e:0x427]
---
Predecessors: [0x401]
Successors: [0x428, 0x429]
---
0x40e JUMPDEST
0x40f PUSH1 0x12
0x411 PUSH1 0x2
0x413 SWAP1
0x414 SLOAD
0x415 SWAP1
0x416 PUSH2 0x100
0x419 EXP
0x41a SWAP1
0x41b DIV
0x41c PUSH1 0xff
0x41e AND
0x41f PUSH1 0x2
0x421 DUP2
0x422 GT
0x423 ISZERO
0x424 PUSH2 0x429
0x427 JUMPI
---
0x40e: JUMPDEST 
0x40f: V284 = 0x12
0x411: V285 = 0x2
0x414: V286 = S[0x12]
0x416: V287 = 0x100
0x419: V288 = EXP 0x100 0x2
0x41b: V289 = DIV V286 0x10000
0x41c: V290 = 0xff
0x41e: V291 = AND 0xff V289
0x41f: V292 = 0x2
0x422: V293 = GT V291 0x2
0x423: V294 = ISZERO V293
0x424: V295 = 0x429
0x427: JUMPI 0x429 V294
---
Entry stack: [V10, 0x151, V78, V81, 0x0]
Stack pops: 0
Stack additions: [V291]
Exit stack: [V10, 0x151, V78, V81, 0x0, V291]

================================

Block 0x428
[0x428:0x428]
---
Predecessors: [0x40e]
Successors: []
---
0x428 INVALID
---
0x428: INVALID 
---
Entry stack: [V10, 0x151, V78, V81, 0x0, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81, 0x0, V291]

================================

Block 0x429
[0x429:0x430]
---
Predecessors: [0x40e]
Successors: [0x431, 0x435]
---
0x429 JUMPDEST
0x42a EQ
0x42b ISZERO
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x429: JUMPDEST 
0x42a: V296 = EQ V291 0x0
0x42b: V297 = ISZERO V296
0x42c: V298 = ISZERO V297
0x42d: V299 = 0x435
0x430: JUMPI 0x435 V298
---
Entry stack: [V10, 0x151, V78, V81, 0x0, V291]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x429]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V300 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x435
[0x435:0x456]
---
Predecessors: [0x429]
Successors: [0x457, 0x45b]
---
0x435 JUMPDEST
0x436 ADDRESS
0x437 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44c AND
0x44d BALANCE
0x44e DUP2
0x44f GT
0x450 ISZERO
0x451 ISZERO
0x452 ISZERO
0x453 PUSH2 0x45b
0x456 JUMPI
---
0x435: JUMPDEST 
0x436: V301 = ADDRESS
0x437: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x44d: V304 = BALANCE V303
0x44f: V305 = GT V81 V304
0x450: V306 = ISZERO V305
0x451: V307 = ISZERO V306
0x452: V308 = ISZERO V307
0x453: V309 = 0x45b
0x456: JUMPI 0x45b V308
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x457
[0x457:0x45a]
---
Predecessors: [0x435]
Successors: []
---
0x457 PUSH1 0x0
0x459 DUP1
0x45a REVERT
---
0x457: V310 = 0x0
0x45a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x45b
[0x45b:0x492]
---
Predecessors: [0x435]
Successors: [0x493, 0x497]
---
0x45b JUMPDEST
0x45c PUSH1 0x0
0x45e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x473 AND
0x474 DUP3
0x475 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48a AND
0x48b EQ
0x48c ISZERO
0x48d ISZERO
0x48e ISZERO
0x48f PUSH2 0x497
0x492 JUMPI
---
0x45b: JUMPDEST 
0x45c: V311 = 0x0
0x45e: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x473: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x475: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x48b: V316 = EQ V315 0x0
0x48c: V317 = ISZERO V316
0x48d: V318 = ISZERO V317
0x48e: V319 = ISZERO V318
0x48f: V320 = 0x497
0x492: JUMPI 0x497 V319
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x493
[0x493:0x496]
---
Predecessors: [0x45b]
Successors: []
---
0x493 PUSH1 0x0
0x495 DUP1
0x496 REVERT
---
0x493: V321 = 0x0
0x496: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x497
[0x497:0x4d2]
---
Predecessors: [0x45b]
Successors: [0x4d3, 0x4d7]
---
0x497 JUMPDEST
0x498 DUP2
0x499 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ae AND
0x4af PUSH2 0x8fc
0x4b2 DUP3
0x4b3 SWAP1
0x4b4 DUP2
0x4b5 ISZERO
0x4b6 MUL
0x4b7 SWAP1
0x4b8 PUSH1 0x40
0x4ba MLOAD
0x4bb PUSH1 0x0
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 DUP4
0x4c2 SUB
0x4c3 DUP2
0x4c4 DUP6
0x4c5 DUP9
0x4c6 DUP9
0x4c7 CALL
0x4c8 SWAP4
0x4c9 POP
0x4ca POP
0x4cb POP
0x4cc POP
0x4cd ISZERO
0x4ce ISZERO
0x4cf PUSH2 0x4d7
0x4d2 JUMPI
---
0x497: JUMPDEST 
0x499: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x4af: V324 = 0x8fc
0x4b5: V325 = ISZERO V81
0x4b6: V326 = MUL V325 0x8fc
0x4b8: V327 = 0x40
0x4ba: V328 = M[0x40]
0x4bb: V329 = 0x0
0x4bd: V330 = 0x40
0x4bf: V331 = M[0x40]
0x4c2: V332 = SUB V328 V331
0x4c7: V333 = CALL V326 V323 V81 V331 V332 V331 0x0
0x4cd: V334 = ISZERO V333
0x4ce: V335 = ISZERO V334
0x4cf: V336 = 0x4d7
0x4d2: JUMPI 0x4d7 V335
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4d3
[0x4d3:0x4d6]
---
Predecessors: [0x497]
Successors: []
---
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 REVERT
---
0x4d3: V337 = 0x0
0x4d6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4d7
[0x4d7:0x4de]
---
Predecessors: [0x497]
Successors: [0x4df]
---
0x4d7 JUMPDEST
0x4d8 TIMESTAMP
0x4d9 PUSH1 0x11
0x4db DUP2
0x4dc SWAP1
0x4dd SSTORE
0x4de POP
---
0x4d7: JUMPDEST 
0x4d8: V338 = TIMESTAMP
0x4d9: V339 = 0x11
0x4dd: S[0x11] = V338
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4df
[0x4df:0x4df]
---
Predecessors: [0x4d7]
Successors: [0x4e0]
---
0x4df JUMPDEST
---
0x4df: JUMPDEST 
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4e0
[0x4e0:0x4e3]
---
Predecessors: [0x4df]
Successors: [0x151]
---
0x4e0 JUMPDEST
0x4e1 POP
0x4e2 POP
0x4e3 JUMP
---
0x4e0: JUMPDEST 
0x4e3: JUMP 0x151
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e4
[0x4e4:0x547]
---
Predecessors: [0x15e]
Successors: [0x548, 0x54c]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x3
0x4e7 SLOAD
0x4e8 PUSH1 0x0
0x4ea NOT
0x4eb AND
0x4ec CALLER
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 DUP1
0x4f1 DUP3
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 AND
0x508 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51d AND
0x51e PUSH13 0x1000000000000000000000000
0x52c MUL
0x52d DUP2
0x52e MSTORE
0x52f PUSH1 0x14
0x531 ADD
0x532 SWAP2
0x533 POP
0x534 POP
0x535 PUSH1 0x40
0x537 MLOAD
0x538 DUP1
0x539 SWAP2
0x53a SUB
0x53b SWAP1
0x53c SHA3
0x53d PUSH1 0x0
0x53f NOT
0x540 AND
0x541 EQ
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x54c
0x547 JUMPI
---
0x4e4: JUMPDEST 
0x4e5: V340 = 0x3
0x4e7: V341 = S[0x3]
0x4e8: V342 = 0x0
0x4ea: V343 = NOT 0x0
0x4eb: V344 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V341
0x4ec: V345 = CALLER
0x4ed: V346 = 0x40
0x4ef: V347 = M[0x40]
0x4f2: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x508: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x51d: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x51e: V352 = 0x1000000000000000000000000
0x52c: V353 = MUL 0x1000000000000000000000000 V351
0x52e: M[V347] = V353
0x52f: V354 = 0x14
0x531: V355 = ADD 0x14 V347
0x535: V356 = 0x40
0x537: V357 = M[0x40]
0x53a: V358 = SUB V355 V357
0x53c: V359 = SHA3 V357 V358
0x53d: V360 = 0x0
0x53f: V361 = NOT 0x0
0x540: V362 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V359
0x541: V363 = EQ V362 V344
0x542: V364 = ISZERO V363
0x543: V365 = ISZERO V364
0x544: V366 = 0x54c
0x547: JUMPI 0x54c V365
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x548
[0x548:0x54b]
---
Predecessors: [0x4e4]
Successors: []
---
0x548 PUSH1 0x0
0x54a DUP1
0x54b REVERT
---
0x548: V367 = 0x0
0x54b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x54c
[0x54c:0x557]
---
Predecessors: [0x4e4]
Successors: [0x558, 0x559]
---
0x54c JUMPDEST
0x54d PUSH1 0x1
0x54f PUSH1 0x2
0x551 DUP2
0x552 GT
0x553 ISZERO
0x554 PUSH2 0x559
0x557 JUMPI
---
0x54c: JUMPDEST 
0x54d: V368 = 0x1
0x54f: V369 = 0x2
0x552: V370 = GT 0x1 0x2
0x553: V371 = ISZERO 0x0
0x554: V372 = 0x559
0x557: JUMPI 0x559 0x1
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x558
[0x558:0x558]
---
Predecessors: [0x54c]
Successors: []
---
0x558 INVALID
---
0x558: INVALID 
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x559
[0x559:0x572]
---
Predecessors: [0x54c]
Successors: [0x573, 0x574]
---
0x559 JUMPDEST
0x55a PUSH1 0x12
0x55c PUSH1 0x2
0x55e SWAP1
0x55f SLOAD
0x560 SWAP1
0x561 PUSH2 0x100
0x564 EXP
0x565 SWAP1
0x566 DIV
0x567 PUSH1 0xff
0x569 AND
0x56a PUSH1 0x2
0x56c DUP2
0x56d GT
0x56e ISZERO
0x56f PUSH2 0x574
0x572 JUMPI
---
0x559: JUMPDEST 
0x55a: V373 = 0x12
0x55c: V374 = 0x2
0x55f: V375 = S[0x12]
0x561: V376 = 0x100
0x564: V377 = EXP 0x100 0x2
0x566: V378 = DIV V375 0x10000
0x567: V379 = 0xff
0x569: V380 = AND 0xff V378
0x56a: V381 = 0x2
0x56d: V382 = GT V380 0x2
0x56e: V383 = ISZERO V382
0x56f: V384 = 0x574
0x572: JUMPI 0x574 V383
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: [V380]
Exit stack: [V10, 0x166, 0x1, V380]

================================

Block 0x573
[0x573:0x573]
---
Predecessors: [0x559]
Successors: []
---
0x573 INVALID
---
0x573: INVALID 
---
Entry stack: [V10, 0x166, 0x1, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1, V380]

================================

Block 0x574
[0x574:0x57b]
---
Predecessors: [0x559]
Successors: [0x57c, 0x5ab]
---
0x574 JUMPDEST
0x575 EQ
0x576 ISZERO
0x577 ISZERO
0x578 PUSH2 0x5ab
0x57b JUMPI
---
0x574: JUMPDEST 
0x575: V385 = EQ V380 0x1
0x576: V386 = ISZERO V385
0x577: V387 = ISZERO V386
0x578: V388 = 0x5ab
0x57b: JUMPI 0x5ab V387
---
Entry stack: [V10, 0x166, 0x1, V380]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x57c
[0x57c:0x59f]
---
Predecessors: [0x574]
Successors: [0x5a0, 0x5a1]
---
0x57c TIMESTAMP
0x57d PUSH1 0xf
0x57f DUP2
0x580 SWAP1
0x581 SSTORE
0x582 POP
0x583 PUSH1 0x1
0x585 PUSH1 0x12
0x587 PUSH1 0x2
0x589 PUSH2 0x100
0x58c EXP
0x58d DUP2
0x58e SLOAD
0x58f DUP2
0x590 PUSH1 0xff
0x592 MUL
0x593 NOT
0x594 AND
0x595 SWAP1
0x596 DUP4
0x597 PUSH1 0x2
0x599 DUP2
0x59a GT
0x59b ISZERO
0x59c PUSH2 0x5a1
0x59f JUMPI
---
0x57c: V389 = TIMESTAMP
0x57d: V390 = 0xf
0x581: S[0xf] = V389
0x583: V391 = 0x1
0x585: V392 = 0x12
0x587: V393 = 0x2
0x589: V394 = 0x100
0x58c: V395 = EXP 0x100 0x2
0x58e: V396 = S[0x12]
0x590: V397 = 0xff
0x592: V398 = MUL 0xff 0x10000
0x593: V399 = NOT 0xff0000
0x594: V400 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V396
0x597: V401 = 0x2
0x59a: V402 = GT 0x1 0x2
0x59b: V403 = ISZERO 0x0
0x59c: V404 = 0x5a1
0x59f: JUMPI 0x5a1 0x1
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: [0x1, 0x12, V400, 0x10000, 0x1]
Exit stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]

================================

Block 0x5a0
[0x5a0:0x5a0]
---
Predecessors: [0x57c]
Successors: []
---
0x5a0 INVALID
---
0x5a0: INVALID 
---
Entry stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]

================================

Block 0x5a1
[0x5a1:0x5aa]
---
Predecessors: [0x57c]
Successors: [0x64b]
---
0x5a1 JUMPDEST
0x5a2 MUL
0x5a3 OR
0x5a4 SWAP1
0x5a5 SSTORE
0x5a6 POP
0x5a7 PUSH2 0x64b
0x5aa JUMP
---
0x5a1: JUMPDEST 
0x5a2: V405 = MUL 0x1 0x10000
0x5a3: V406 = OR 0x10000 V400
0x5a5: S[0x12] = V406
0x5a7: V407 = 0x64b
0x5aa: JUMP 0x64b
---
Entry stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5ab
[0x5ab:0x5b9]
---
Predecessors: [0x574]
Successors: [0x5ba, 0x5be]
---
0x5ab JUMPDEST
0x5ac PUSH1 0x3c
0x5ae PUSH1 0xf
0x5b0 SLOAD
0x5b1 ADD
0x5b2 TIMESTAMP
0x5b3 GT
0x5b4 ISZERO
0x5b5 ISZERO
0x5b6 PUSH2 0x5be
0x5b9 JUMPI
---
0x5ab: JUMPDEST 
0x5ac: V408 = 0x3c
0x5ae: V409 = 0xf
0x5b0: V410 = S[0xf]
0x5b1: V411 = ADD V410 0x3c
0x5b2: V412 = TIMESTAMP
0x5b3: V413 = GT V412 V411
0x5b4: V414 = ISZERO V413
0x5b5: V415 = ISZERO V414
0x5b6: V416 = 0x5be
0x5b9: JUMPI 0x5be V415
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5ba
[0x5ba:0x5bd]
---
Predecessors: [0x5ab]
Successors: [0x64b]
---
0x5ba PUSH2 0x64b
0x5bd JUMP
---
0x5ba: V417 = 0x64b
0x5bd: JUMP 0x64b
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5be
[0x5be:0x5be]
---
Predecessors: [0x5ab]
Successors: [0x5bf]
---
0x5be JUMPDEST
---
0x5be: JUMPDEST 
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5bf
[0x5bf:0x5ca]
---
Predecessors: [0x5be]
Successors: [0x5cb, 0x5cc]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0x2
0x5c4 DUP2
0x5c5 GT
0x5c6 ISZERO
0x5c7 PUSH2 0x5cc
0x5ca JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V418 = 0x1
0x5c2: V419 = 0x2
0x5c5: V420 = GT 0x1 0x2
0x5c6: V421 = ISZERO 0x0
0x5c7: V422 = 0x5cc
0x5ca: JUMPI 0x5cc 0x1
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x5cb
[0x5cb:0x5cb]
---
Predecessors: [0x5bf]
Successors: []
---
0x5cb INVALID
---
0x5cb: INVALID 
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x5cc
[0x5cc:0x5e5]
---
Predecessors: [0x5bf]
Successors: [0x5e6, 0x5e7]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x12
0x5cf PUSH1 0x2
0x5d1 SWAP1
0x5d2 SLOAD
0x5d3 SWAP1
0x5d4 PUSH2 0x100
0x5d7 EXP
0x5d8 SWAP1
0x5d9 DIV
0x5da PUSH1 0xff
0x5dc AND
0x5dd PUSH1 0x2
0x5df DUP2
0x5e0 GT
0x5e1 ISZERO
0x5e2 PUSH2 0x5e7
0x5e5 JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V423 = 0x12
0x5cf: V424 = 0x2
0x5d2: V425 = S[0x12]
0x5d4: V426 = 0x100
0x5d7: V427 = EXP 0x100 0x2
0x5d9: V428 = DIV V425 0x10000
0x5da: V429 = 0xff
0x5dc: V430 = AND 0xff V428
0x5dd: V431 = 0x2
0x5e0: V432 = GT V430 0x2
0x5e1: V433 = ISZERO V432
0x5e2: V434 = 0x5e7
0x5e5: JUMPI 0x5e7 V433
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: [V430]
Exit stack: [V10, 0x166, 0x1, V430]

================================

Block 0x5e6
[0x5e6:0x5e6]
---
Predecessors: [0x5cc]
Successors: []
---
0x5e6 INVALID
---
0x5e6: INVALID 
---
Entry stack: [V10, 0x166, 0x1, V430]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1, V430]

================================

Block 0x5e7
[0x5e7:0x5ee]
---
Predecessors: [0x5cc]
Successors: [0x5ef, 0x5f3]
---
0x5e7 JUMPDEST
0x5e8 EQ
0x5e9 ISZERO
0x5ea ISZERO
0x5eb PUSH2 0x5f3
0x5ee JUMPI
---
0x5e7: JUMPDEST 
0x5e8: V435 = EQ V430 0x1
0x5e9: V436 = ISZERO V435
0x5ea: V437 = ISZERO V436
0x5eb: V438 = 0x5f3
0x5ee: JUMPI 0x5f3 V437
---
Entry stack: [V10, 0x166, 0x1, V430]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5ef
[0x5ef:0x5f2]
---
Predecessors: [0x5e7]
Successors: []
---
0x5ef PUSH1 0x0
0x5f1 DUP1
0x5f2 REVERT
---
0x5ef: V439 = 0x0
0x5f2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5f3
[0x5f3:0x645]
---
Predecessors: [0x5e7]
Successors: [0x646, 0x64a]
---
0x5f3 JUMPDEST
0x5f4 CALLER
0x5f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60a AND
0x60b PUSH2 0x8fc
0x60e ADDRESS
0x60f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x624 AND
0x625 BALANCE
0x626 SWAP1
0x627 DUP2
0x628 ISZERO
0x629 MUL
0x62a SWAP1
0x62b PUSH1 0x40
0x62d MLOAD
0x62e PUSH1 0x0
0x630 PUSH1 0x40
0x632 MLOAD
0x633 DUP1
0x634 DUP4
0x635 SUB
0x636 DUP2
0x637 DUP6
0x638 DUP9
0x639 DUP9
0x63a CALL
0x63b SWAP4
0x63c POP
0x63d POP
0x63e POP
0x63f POP
0x640 ISZERO
0x641 ISZERO
0x642 PUSH2 0x64a
0x645 JUMPI
---
0x5f3: JUMPDEST 
0x5f4: V440 = CALLER
0x5f5: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x60a: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x60b: V443 = 0x8fc
0x60e: V444 = ADDRESS
0x60f: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x624: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x625: V447 = BALANCE V446
0x628: V448 = ISZERO V447
0x629: V449 = MUL V448 0x8fc
0x62b: V450 = 0x40
0x62d: V451 = M[0x40]
0x62e: V452 = 0x0
0x630: V453 = 0x40
0x632: V454 = M[0x40]
0x635: V455 = SUB V451 V454
0x63a: V456 = CALL V449 V442 V447 V454 V455 V454 0x0
0x640: V457 = ISZERO V456
0x641: V458 = ISZERO V457
0x642: V459 = 0x64a
0x645: JUMPI 0x64a V458
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x646
[0x646:0x649]
---
Predecessors: [0x5f3]
Successors: []
---
0x646 PUSH1 0x0
0x648 DUP1
0x649 REVERT
---
0x646: V460 = 0x0
0x649: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x64a
[0x64a:0x64a]
---
Predecessors: [0x5f3]
Successors: [0x64b]
---
0x64a JUMPDEST
---
0x64a: JUMPDEST 
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x64b
[0x64b:0x64b]
---
Predecessors: [0x5a1, 0x5ba, 0x64a]
Successors: [0x64c]
---
0x64b JUMPDEST
---
0x64b: JUMPDEST 
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x64c
[0x64c:0x64d]
---
Predecessors: [0x64b]
Successors: [0x166]
---
0x64c JUMPDEST
0x64d JUMP
---
0x64c: JUMPDEST 
0x64d: JUMP 0x166
---
Entry stack: [V10, 0x166]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x64e
[0x64e:0x673]
---
Predecessors: [0x173]
Successors: [0x17b]
---
0x64e JUMPDEST
0x64f PUSH1 0x2
0x651 PUSH1 0x0
0x653 SWAP1
0x654 SLOAD
0x655 SWAP1
0x656 PUSH2 0x100
0x659 EXP
0x65a SWAP1
0x65b DIV
0x65c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x671 AND
0x672 DUP2
0x673 JUMP
---
0x64e: JUMPDEST 
0x64f: V461 = 0x2
0x651: V462 = 0x0
0x654: V463 = S[0x2]
0x656: V464 = 0x100
0x659: V465 = EXP 0x100 0x0
0x65b: V466 = DIV V463 0x1
0x65c: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x671: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x673: JUMP 0x17b
---
Entry stack: [V10, 0x17b]
Stack pops: 1
Stack additions: [S0, V468]
Exit stack: [V10, 0x17b, V468]

================================

Block 0x674
[0x674:0x6cb]
---
Predecessors: [0x1c8]
Successors: [0x6cc, 0x6d0]
---
0x674 JUMPDEST
0x675 PUSH1 0x2
0x677 PUSH1 0x0
0x679 SWAP1
0x67a SLOAD
0x67b SWAP1
0x67c PUSH2 0x100
0x67f EXP
0x680 SWAP1
0x681 DIV
0x682 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x697 AND
0x698 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ad AND
0x6ae CALLER
0x6af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c4 AND
0x6c5 EQ
0x6c6 ISZERO
0x6c7 ISZERO
0x6c8 PUSH2 0x6d0
0x6cb JUMPI
---
0x674: JUMPDEST 
0x675: V469 = 0x2
0x677: V470 = 0x0
0x67a: V471 = S[0x2]
0x67c: V472 = 0x100
0x67f: V473 = EXP 0x100 0x0
0x681: V474 = DIV V471 0x1
0x682: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x697: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x698: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ad: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x6ae: V479 = CALLER
0x6af: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c4: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x6c5: V482 = EQ V481 V478
0x6c6: V483 = ISZERO V482
0x6c7: V484 = ISZERO V483
0x6c8: V485 = 0x6d0
0x6cb: JUMPI 0x6d0 V484
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x6cc
[0x6cc:0x6cf]
---
Predecessors: [0x674]
Successors: []
---
0x6cc PUSH1 0x0
0x6ce DUP1
0x6cf REVERT
---
0x6cc: V486 = 0x0
0x6cf: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x6d0
[0x6d0:0x6db]
---
Predecessors: [0x674]
Successors: [0x6dc, 0x6dd]
---
0x6d0 JUMPDEST
0x6d1 PUSH1 0x0
0x6d3 PUSH1 0x2
0x6d5 DUP2
0x6d6 GT
0x6d7 ISZERO
0x6d8 PUSH2 0x6dd
0x6db JUMPI
---
0x6d0: JUMPDEST 
0x6d1: V487 = 0x0
0x6d3: V488 = 0x2
0x6d6: V489 = GT 0x0 0x2
0x6d7: V490 = ISZERO 0x0
0x6d8: V491 = 0x6dd
0x6db: JUMPI 0x6dd 0x1
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1e0, V116, 0x0]

================================

Block 0x6dc
[0x6dc:0x6dc]
---
Predecessors: [0x6d0]
Successors: []
---
0x6dc INVALID
---
0x6dc: INVALID 
---
Entry stack: [V10, 0x1e0, V116, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116, 0x0]

================================

Block 0x6dd
[0x6dd:0x6f6]
---
Predecessors: [0x6d0]
Successors: [0x6f7, 0x6f8]
---
0x6dd JUMPDEST
0x6de PUSH1 0x12
0x6e0 PUSH1 0x2
0x6e2 SWAP1
0x6e3 SLOAD
0x6e4 SWAP1
0x6e5 PUSH2 0x100
0x6e8 EXP
0x6e9 SWAP1
0x6ea DIV
0x6eb PUSH1 0xff
0x6ed AND
0x6ee PUSH1 0x2
0x6f0 DUP2
0x6f1 GT
0x6f2 ISZERO
0x6f3 PUSH2 0x6f8
0x6f6 JUMPI
---
0x6dd: JUMPDEST 
0x6de: V492 = 0x12
0x6e0: V493 = 0x2
0x6e3: V494 = S[0x12]
0x6e5: V495 = 0x100
0x6e8: V496 = EXP 0x100 0x2
0x6ea: V497 = DIV V494 0x10000
0x6eb: V498 = 0xff
0x6ed: V499 = AND 0xff V497
0x6ee: V500 = 0x2
0x6f1: V501 = GT V499 0x2
0x6f2: V502 = ISZERO V501
0x6f3: V503 = 0x6f8
0x6f6: JUMPI 0x6f8 V502
---
Entry stack: [V10, 0x1e0, V116, 0x0]
Stack pops: 0
Stack additions: [V499]
Exit stack: [V10, 0x1e0, V116, 0x0, V499]

================================

Block 0x6f7
[0x6f7:0x6f7]
---
Predecessors: [0x6dd]
Successors: []
---
0x6f7 INVALID
---
0x6f7: INVALID 
---
Entry stack: [V10, 0x1e0, V116, 0x0, V499]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116, 0x0, V499]

================================

Block 0x6f8
[0x6f8:0x6ff]
---
Predecessors: [0x6dd]
Successors: [0x700, 0x704]
---
0x6f8 JUMPDEST
0x6f9 EQ
0x6fa ISZERO
0x6fb ISZERO
0x6fc PUSH2 0x704
0x6ff JUMPI
---
0x6f8: JUMPDEST 
0x6f9: V504 = EQ V499 0x0
0x6fa: V505 = ISZERO V504
0x6fb: V506 = ISZERO V505
0x6fc: V507 = 0x704
0x6ff: JUMPI 0x704 V506
---
Entry stack: [V10, 0x1e0, V116, 0x0, V499]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x700
[0x700:0x703]
---
Predecessors: [0x6f8]
Successors: []
---
0x700 PUSH1 0x0
0x702 DUP1
0x703 REVERT
---
0x700: V508 = 0x0
0x703: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x704
[0x704:0x748]
---
Predecessors: [0x6f8]
Successors: [0x749]
---
0x704 JUMPDEST
0x705 PUSH1 0x12
0x707 PUSH1 0x0
0x709 SWAP1
0x70a SLOAD
0x70b SWAP1
0x70c PUSH2 0x100
0x70f EXP
0x710 SWAP1
0x711 DIV
0x712 PUSH1 0xff
0x714 AND
0x715 ISZERO
0x716 PUSH1 0x12
0x718 PUSH1 0x0
0x71a PUSH2 0x100
0x71d EXP
0x71e DUP2
0x71f SLOAD
0x720 DUP2
0x721 PUSH1 0xff
0x723 MUL
0x724 NOT
0x725 AND
0x726 SWAP1
0x727 DUP4
0x728 ISZERO
0x729 ISZERO
0x72a MUL
0x72b OR
0x72c SWAP1
0x72d SSTORE
0x72e POP
0x72f DUP1
0x730 PUSH1 0x12
0x732 PUSH1 0x1
0x734 PUSH2 0x100
0x737 EXP
0x738 DUP2
0x739 SLOAD
0x73a DUP2
0x73b PUSH1 0xff
0x73d MUL
0x73e NOT
0x73f AND
0x740 SWAP1
0x741 DUP4
0x742 ISZERO
0x743 ISZERO
0x744 MUL
0x745 OR
0x746 SWAP1
0x747 SSTORE
0x748 POP
---
0x704: JUMPDEST 
0x705: V509 = 0x12
0x707: V510 = 0x0
0x70a: V511 = S[0x12]
0x70c: V512 = 0x100
0x70f: V513 = EXP 0x100 0x0
0x711: V514 = DIV V511 0x1
0x712: V515 = 0xff
0x714: V516 = AND 0xff V514
0x715: V517 = ISZERO V516
0x716: V518 = 0x12
0x718: V519 = 0x0
0x71a: V520 = 0x100
0x71d: V521 = EXP 0x100 0x0
0x71f: V522 = S[0x12]
0x721: V523 = 0xff
0x723: V524 = MUL 0xff 0x1
0x724: V525 = NOT 0xff
0x725: V526 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V522
0x728: V527 = ISZERO V517
0x729: V528 = ISZERO V527
0x72a: V529 = MUL V528 0x1
0x72b: V530 = OR V529 V526
0x72d: S[0x12] = V530
0x730: V531 = 0x12
0x732: V532 = 0x1
0x734: V533 = 0x100
0x737: V534 = EXP 0x100 0x1
0x739: V535 = S[0x12]
0x73b: V536 = 0xff
0x73d: V537 = MUL 0xff 0x100
0x73e: V538 = NOT 0xff00
0x73f: V539 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V535
0x742: V540 = ISZERO V116
0x743: V541 = ISZERO V540
0x744: V542 = MUL V541 0x100
0x745: V543 = OR V542 V539
0x747: S[0x12] = V543
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x749
[0x749:0x749]
---
Predecessors: [0x704]
Successors: [0x74a]
---
0x749 JUMPDEST
---
0x749: JUMPDEST 
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x74a
[0x74a:0x74c]
---
Predecessors: [0x749]
Successors: [0x1e0]
---
0x74a JUMPDEST
0x74b POP
0x74c JUMP
---
0x74a: JUMPDEST 
0x74c: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x74d
[0x74d:0x766]
---
Predecessors: [0x1ed]
Successors: [0x767]
---
0x74d JUMPDEST
0x74e DUP1
0x74f PUSH1 0x0
0x751 SLOAD
0x752 PUSH1 0x0
0x754 NOT
0x755 AND
0x756 DUP2
0x757 CALLER
0x758 PUSH1 0x40
0x75a MLOAD
0x75b DUP1
0x75c DUP4
0x75d DUP1
0x75e MLOAD
0x75f SWAP1
0x760 PUSH1 0x20
0x762 ADD
0x763 SWAP1
0x764 DUP1
0x765 DUP4
0x766 DUP4
---
0x74d: JUMPDEST 
0x74f: V544 = 0x0
0x751: V545 = S[0x0]
0x752: V546 = 0x0
0x754: V547 = NOT 0x0
0x755: V548 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V545
0x757: V549 = CALLER
0x758: V550 = 0x40
0x75a: V551 = M[0x40]
0x75e: V552 = M[V141]
0x760: V553 = 0x20
0x762: V554 = ADD 0x20 V141
---
Entry stack: [V10, 0x23d, V141]
Stack pops: 1
Stack additions: [S0, S0, V548, S0, V549, V551, V551, V554, V552, V552, V551, V554]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, V552, V551, V554]

================================

Block 0x767
[0x767:0x771]
---
Predecessors: [0x74d, 0x776]
Successors: [0x772, 0x78d]
---
0x767 JUMPDEST
0x768 PUSH1 0x20
0x76a DUP4
0x76b LT
0x76c ISZERO
0x76d ISZERO
0x76e PUSH2 0x78d
0x771 JUMPI
---
0x767: JUMPDEST 
0x768: V555 = 0x20
0x76b: V556 = LT S2 0x20
0x76c: V557 = ISZERO V556
0x76d: V558 = ISZERO V557
0x76e: V559 = 0x78d
0x771: JUMPI 0x78d V558
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]

================================

Block 0x772
[0x772:0x775]
---
Predecessors: [0x767]
Successors: [0x776]
---
0x772 DUP1
0x773 MLOAD
0x774 DUP3
0x775 MSTORE
---
0x773: V560 = M[S0]
0x775: M[S1] = V560
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]

================================

Block 0x776
[0x776:0x78c]
---
Predecessors: [0x772]
Successors: [0x767]
---
0x776 JUMPDEST
0x777 PUSH1 0x20
0x779 DUP3
0x77a ADD
0x77b SWAP2
0x77c POP
0x77d PUSH1 0x20
0x77f DUP2
0x780 ADD
0x781 SWAP1
0x782 POP
0x783 PUSH1 0x20
0x785 DUP4
0x786 SUB
0x787 SWAP3
0x788 POP
0x789 PUSH2 0x767
0x78c JUMP
---
0x776: JUMPDEST 
0x777: V561 = 0x20
0x77a: V562 = ADD S1 0x20
0x77d: V563 = 0x20
0x780: V564 = ADD S0 0x20
0x783: V565 = 0x20
0x786: V566 = SUB S2 0x20
0x789: V567 = 0x767
0x78c: JUMP 0x767
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 3
Stack additions: [V566, V562, V564]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, V566, V562, V564]

================================

Block 0x78d
[0x78d:0x807]
---
Predecessors: [0x767]
Successors: [0x808, 0x80c]
---
0x78d JUMPDEST
0x78e PUSH1 0x1
0x790 DUP4
0x791 PUSH1 0x20
0x793 SUB
0x794 PUSH2 0x100
0x797 EXP
0x798 SUB
0x799 DUP1
0x79a NOT
0x79b DUP3
0x79c MLOAD
0x79d AND
0x79e DUP2
0x79f DUP5
0x7a0 MLOAD
0x7a1 AND
0x7a2 DUP1
0x7a3 DUP3
0x7a4 OR
0x7a5 DUP6
0x7a6 MSTORE
0x7a7 POP
0x7a8 POP
0x7a9 POP
0x7aa POP
0x7ab POP
0x7ac POP
0x7ad SWAP1
0x7ae POP
0x7af ADD
0x7b0 DUP3
0x7b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c6 AND
0x7c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dc AND
0x7dd PUSH13 0x1000000000000000000000000
0x7eb MUL
0x7ec DUP2
0x7ed MSTORE
0x7ee PUSH1 0x14
0x7f0 ADD
0x7f1 SWAP3
0x7f2 POP
0x7f3 POP
0x7f4 POP
0x7f5 PUSH1 0x40
0x7f7 MLOAD
0x7f8 DUP1
0x7f9 SWAP2
0x7fa SUB
0x7fb SWAP1
0x7fc SHA3
0x7fd PUSH1 0x0
0x7ff NOT
0x800 AND
0x801 EQ
0x802 ISZERO
0x803 ISZERO
0x804 PUSH2 0x80c
0x807 JUMPI
---
0x78d: JUMPDEST 
0x78e: V568 = 0x1
0x791: V569 = 0x20
0x793: V570 = SUB 0x20 S2
0x794: V571 = 0x100
0x797: V572 = EXP 0x100 V570
0x798: V573 = SUB V572 0x1
0x79a: V574 = NOT V573
0x79c: V575 = M[S0]
0x79d: V576 = AND V575 V574
0x7a0: V577 = M[S1]
0x7a1: V578 = AND V577 V573
0x7a4: V579 = OR V576 V578
0x7a6: M[S1] = V579
0x7af: V580 = ADD V552 V551
0x7b1: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x7c7: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x7dd: V585 = 0x1000000000000000000000000
0x7eb: V586 = MUL 0x1000000000000000000000000 V584
0x7ed: M[V580] = V586
0x7ee: V587 = 0x14
0x7f0: V588 = ADD 0x14 V580
0x7f5: V589 = 0x40
0x7f7: V590 = M[0x40]
0x7fa: V591 = SUB V588 V590
0x7fc: V592 = SHA3 V590 V591
0x7fd: V593 = 0x0
0x7ff: V594 = NOT 0x0
0x800: V595 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V592
0x801: V596 = EQ V595 V548
0x802: V597 = ISZERO V596
0x803: V598 = ISZERO V597
0x804: V599 = 0x80c
0x807: JUMPI 0x80c V598
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x808
[0x808:0x80b]
---
Predecessors: [0x78d]
Successors: []
---
0x808 PUSH1 0x0
0x80a DUP1
0x80b REVERT
---
0x808: V600 = 0x0
0x80b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x80c
[0x80c:0x81c]
---
Predecessors: [0x78d]
Successors: [0x81d, 0x821]
---
0x80c JUMPDEST
0x80d PUSH3 0x15180
0x811 PUSH1 0x10
0x813 SLOAD
0x814 ADD
0x815 TIMESTAMP
0x816 GT
0x817 ISZERO
0x818 ISZERO
0x819 PUSH2 0x821
0x81c JUMPI
---
0x80c: JUMPDEST 
0x80d: V601 = 0x15180
0x811: V602 = 0x10
0x813: V603 = S[0x10]
0x814: V604 = ADD V603 0x15180
0x815: V605 = TIMESTAMP
0x816: V606 = GT V605 V604
0x817: V607 = ISZERO V606
0x818: V608 = ISZERO V607
0x819: V609 = 0x821
0x81c: JUMPI 0x821 V608
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x81d
[0x81d:0x820]
---
Predecessors: [0x80c]
Successors: []
---
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
---
0x81d: V610 = 0x0
0x820: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x821
[0x821:0x838]
---
Predecessors: [0x80c]
Successors: [0x839]
---
0x821 JUMPDEST
0x822 PUSH1 0x4
0x824 SLOAD
0x825 PUSH1 0x0
0x827 NOT
0x828 AND
0x829 DUP3
0x82a PUSH1 0x40
0x82c MLOAD
0x82d DUP1
0x82e DUP3
0x82f DUP1
0x830 MLOAD
0x831 SWAP1
0x832 PUSH1 0x20
0x834 ADD
0x835 SWAP1
0x836 DUP1
0x837 DUP4
0x838 DUP4
---
0x821: JUMPDEST 
0x822: V611 = 0x4
0x824: V612 = S[0x4]
0x825: V613 = 0x0
0x827: V614 = NOT 0x0
0x828: V615 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V612
0x82a: V616 = 0x40
0x82c: V617 = M[0x40]
0x830: V618 = M[V141]
0x832: V619 = 0x20
0x834: V620 = ADD 0x20 V141
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 2
Stack additions: [S1, S0, V615, S1, V617, V617, V620, V618, V618, V617, V620]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, V618, V617, V620]

================================

Block 0x839
[0x839:0x843]
---
Predecessors: [0x821, 0x848]
Successors: [0x844, 0x85f]
---
0x839 JUMPDEST
0x83a PUSH1 0x20
0x83c DUP4
0x83d LT
0x83e ISZERO
0x83f ISZERO
0x840 PUSH2 0x85f
0x843 JUMPI
---
0x839: JUMPDEST 
0x83a: V621 = 0x20
0x83d: V622 = LT S2 0x20
0x83e: V623 = ISZERO V622
0x83f: V624 = ISZERO V623
0x840: V625 = 0x85f
0x843: JUMPI 0x85f V624
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]

================================

Block 0x844
[0x844:0x847]
---
Predecessors: [0x839]
Successors: [0x848]
---
0x844 DUP1
0x845 MLOAD
0x846 DUP3
0x847 MSTORE
---
0x845: V626 = M[S0]
0x847: M[S1] = V626
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]

================================

Block 0x848
[0x848:0x85e]
---
Predecessors: [0x844]
Successors: [0x839]
---
0x848 JUMPDEST
0x849 PUSH1 0x20
0x84b DUP3
0x84c ADD
0x84d SWAP2
0x84e POP
0x84f PUSH1 0x20
0x851 DUP2
0x852 ADD
0x853 SWAP1
0x854 POP
0x855 PUSH1 0x20
0x857 DUP4
0x858 SUB
0x859 SWAP3
0x85a POP
0x85b PUSH2 0x839
0x85e JUMP
---
0x848: JUMPDEST 
0x849: V627 = 0x20
0x84c: V628 = ADD S1 0x20
0x84f: V629 = 0x20
0x852: V630 = ADD S0 0x20
0x855: V631 = 0x20
0x858: V632 = SUB S2 0x20
0x85b: V633 = 0x839
0x85e: JUMP 0x839
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 3
Stack additions: [V632, V628, V630]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, V632, V628, V630]

================================

Block 0x85f
[0x85f:0x897]
---
Predecessors: [0x839]
Successors: [0x898, 0x89c]
---
0x85f JUMPDEST
0x860 PUSH1 0x1
0x862 DUP4
0x863 PUSH1 0x20
0x865 SUB
0x866 PUSH2 0x100
0x869 EXP
0x86a SUB
0x86b DUP1
0x86c NOT
0x86d DUP3
0x86e MLOAD
0x86f AND
0x870 DUP2
0x871 DUP5
0x872 MLOAD
0x873 AND
0x874 DUP1
0x875 DUP3
0x876 OR
0x877 DUP6
0x878 MSTORE
0x879 POP
0x87a POP
0x87b POP
0x87c POP
0x87d POP
0x87e POP
0x87f SWAP1
0x880 POP
0x881 ADD
0x882 SWAP2
0x883 POP
0x884 POP
0x885 PUSH1 0x40
0x887 MLOAD
0x888 DUP1
0x889 SWAP2
0x88a SUB
0x88b SWAP1
0x88c SHA3
0x88d PUSH1 0x0
0x88f NOT
0x890 AND
0x891 EQ
0x892 ISZERO
0x893 ISZERO
0x894 PUSH2 0x89c
0x897 JUMPI
---
0x85f: JUMPDEST 
0x860: V634 = 0x1
0x863: V635 = 0x20
0x865: V636 = SUB 0x20 S2
0x866: V637 = 0x100
0x869: V638 = EXP 0x100 V636
0x86a: V639 = SUB V638 0x1
0x86c: V640 = NOT V639
0x86e: V641 = M[S0]
0x86f: V642 = AND V641 V640
0x872: V643 = M[S1]
0x873: V644 = AND V643 V639
0x876: V645 = OR V642 V644
0x878: M[S1] = V645
0x881: V646 = ADD V618 V617
0x885: V647 = 0x40
0x887: V648 = M[0x40]
0x88a: V649 = SUB V646 V648
0x88c: V650 = SHA3 V648 V649
0x88d: V651 = 0x0
0x88f: V652 = NOT 0x0
0x890: V653 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V650
0x891: V654 = EQ V653 V615
0x892: V655 = ISZERO V654
0x893: V656 = ISZERO V655
0x894: V657 = 0x89c
0x897: JUMPI 0x89c V656
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x898
[0x898:0x89b]
---
Predecessors: [0x85f]
Successors: []
---
0x898 PUSH1 0x0
0x89a DUP1
0x89b REVERT
---
0x898: V658 = 0x0
0x89b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x89c
[0x89c:0x8a6]
---
Predecessors: [0x85f]
Successors: [0x8a7, 0x8a8]
---
0x89c JUMPDEST
0x89d PUSH1 0x2
0x89f DUP1
0x8a0 DUP2
0x8a1 GT
0x8a2 ISZERO
0x8a3 PUSH2 0x8a8
0x8a6 JUMPI
---
0x89c: JUMPDEST 
0x89d: V659 = 0x2
0x8a1: V660 = GT 0x2 0x2
0x8a2: V661 = ISZERO 0x0
0x8a3: V662 = 0x8a8
0x8a6: JUMPI 0x8a8 0x1
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V10, 0x23d, V141, V141, 0x2]

================================

Block 0x8a7
[0x8a7:0x8a7]
---
Predecessors: [0x89c]
Successors: []
---
0x8a7 INVALID
---
0x8a7: INVALID 
---
Entry stack: [V10, 0x23d, V141, V141, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141, 0x2]

================================

Block 0x8a8
[0x8a8:0x8c1]
---
Predecessors: [0x89c]
Successors: [0x8c2, 0x8c3]
---
0x8a8 JUMPDEST
0x8a9 PUSH1 0x12
0x8ab PUSH1 0x2
0x8ad SWAP1
0x8ae SLOAD
0x8af SWAP1
0x8b0 PUSH2 0x100
0x8b3 EXP
0x8b4 SWAP1
0x8b5 DIV
0x8b6 PUSH1 0xff
0x8b8 AND
0x8b9 PUSH1 0x2
0x8bb DUP2
0x8bc GT
0x8bd ISZERO
0x8be PUSH2 0x8c3
0x8c1 JUMPI
---
0x8a8: JUMPDEST 
0x8a9: V663 = 0x12
0x8ab: V664 = 0x2
0x8ae: V665 = S[0x12]
0x8b0: V666 = 0x100
0x8b3: V667 = EXP 0x100 0x2
0x8b5: V668 = DIV V665 0x10000
0x8b6: V669 = 0xff
0x8b8: V670 = AND 0xff V668
0x8b9: V671 = 0x2
0x8bc: V672 = GT V670 0x2
0x8bd: V673 = ISZERO V672
0x8be: V674 = 0x8c3
0x8c1: JUMPI 0x8c3 V673
---
Entry stack: [V10, 0x23d, V141, V141, 0x2]
Stack pops: 0
Stack additions: [V670]
Exit stack: [V10, 0x23d, V141, V141, 0x2, V670]

================================

Block 0x8c2
[0x8c2:0x8c2]
---
Predecessors: [0x8a8]
Successors: []
---
0x8c2 INVALID
---
0x8c2: INVALID 
---
Entry stack: [V10, 0x23d, V141, V141, 0x2, V670]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141, 0x2, V670]

================================

Block 0x8c3
[0x8c3:0x8ca]
---
Predecessors: [0x8a8]
Successors: [0x8cb, 0x8cf]
---
0x8c3 JUMPDEST
0x8c4 EQ
0x8c5 ISZERO
0x8c6 ISZERO
0x8c7 PUSH2 0x8cf
0x8ca JUMPI
---
0x8c3: JUMPDEST 
0x8c4: V675 = EQ V670 0x2
0x8c5: V676 = ISZERO V675
0x8c6: V677 = ISZERO V676
0x8c7: V678 = 0x8cf
0x8ca: JUMPI 0x8cf V677
---
Entry stack: [V10, 0x23d, V141, V141, 0x2, V670]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x8cb
[0x8cb:0x8ce]
---
Predecessors: [0x8c3]
Successors: []
---
0x8cb PUSH1 0x0
0x8cd DUP1
0x8ce REVERT
---
0x8cb: V679 = 0x0
0x8ce: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x8cf
[0x8cf:0x921]
---
Predecessors: [0x8c3]
Successors: [0x922, 0x926]
---
0x8cf JUMPDEST
0x8d0 CALLER
0x8d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e6 AND
0x8e7 PUSH2 0x8fc
0x8ea ADDRESS
0x8eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x900 AND
0x901 BALANCE
0x902 SWAP1
0x903 DUP2
0x904 ISZERO
0x905 MUL
0x906 SWAP1
0x907 PUSH1 0x40
0x909 MLOAD
0x90a PUSH1 0x0
0x90c PUSH1 0x40
0x90e MLOAD
0x90f DUP1
0x910 DUP4
0x911 SUB
0x912 DUP2
0x913 DUP6
0x914 DUP9
0x915 DUP9
0x916 CALL
0x917 SWAP4
0x918 POP
0x919 POP
0x91a POP
0x91b POP
0x91c ISZERO
0x91d ISZERO
0x91e PUSH2 0x926
0x921 JUMPI
---
0x8cf: JUMPDEST 
0x8d0: V680 = CALLER
0x8d1: V681 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e6: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0x8e7: V683 = 0x8fc
0x8ea: V684 = ADDRESS
0x8eb: V685 = 0xffffffffffffffffffffffffffffffffffffffff
0x900: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x901: V687 = BALANCE V686
0x904: V688 = ISZERO V687
0x905: V689 = MUL V688 0x8fc
0x907: V690 = 0x40
0x909: V691 = M[0x40]
0x90a: V692 = 0x0
0x90c: V693 = 0x40
0x90e: V694 = M[0x40]
0x911: V695 = SUB V691 V694
0x916: V696 = CALL V689 V682 V687 V694 V695 V694 0x0
0x91c: V697 = ISZERO V696
0x91d: V698 = ISZERO V697
0x91e: V699 = 0x926
0x921: JUMPI 0x926 V698
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x922
[0x922:0x925]
---
Predecessors: [0x8cf]
Successors: []
---
0x922 PUSH1 0x0
0x924 DUP1
0x925 REVERT
---
0x922: V700 = 0x0
0x925: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x926
[0x926:0x926]
---
Predecessors: [0x8cf]
Successors: [0x927]
---
0x926 JUMPDEST
---
0x926: JUMPDEST 
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x927
[0x927:0x927]
---
Predecessors: [0x926]
Successors: [0x928]
---
0x927 JUMPDEST
---
0x927: JUMPDEST 
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x928
[0x928:0x92b]
---
Predecessors: [0x927]
Successors: [0x23d]
---
0x928 JUMPDEST
0x929 POP
0x92a POP
0x92b JUMP
---
0x928: JUMPDEST 
0x92b: JUMP 0x23d
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x92c
[0x92c:0x93e]
---
Predecessors: [0x24a]
Successors: [0x252]
---
0x92c JUMPDEST
0x92d PUSH1 0x12
0x92f PUSH1 0x0
0x931 SWAP1
0x932 SLOAD
0x933 SWAP1
0x934 PUSH2 0x100
0x937 EXP
0x938 SWAP1
0x939 DIV
0x93a PUSH1 0xff
0x93c AND
0x93d DUP2
0x93e JUMP
---
0x92c: JUMPDEST 
0x92d: V701 = 0x12
0x92f: V702 = 0x0
0x932: V703 = S[0x12]
0x934: V704 = 0x100
0x937: V705 = EXP 0x100 0x0
0x939: V706 = DIV V703 0x1
0x93a: V707 = 0xff
0x93c: V708 = AND 0xff V706
0x93e: JUMP 0x252
---
Entry stack: [V10, 0x252]
Stack pops: 1
Stack additions: [S0, V708]
Exit stack: [V10, 0x252, V708]

================================

Block 0x93f
[0x93f:0x999]
---
Predecessors: [0x277]
Successors: [0x99a, 0x99e]
---
0x93f JUMPDEST
0x940 PUSH1 0x0
0x942 DUP1
0x943 PUSH1 0x1
0x945 PUSH1 0x0
0x947 SWAP1
0x948 SLOAD
0x949 SWAP1
0x94a PUSH2 0x100
0x94d EXP
0x94e SWAP1
0x94f DIV
0x950 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x965 AND
0x966 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97b AND
0x97c CALLER
0x97d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x992 AND
0x993 EQ
0x994 ISZERO
0x995 ISZERO
0x996 PUSH2 0x99e
0x999 JUMPI
---
0x93f: JUMPDEST 
0x940: V709 = 0x0
0x943: V710 = 0x1
0x945: V711 = 0x0
0x948: V712 = S[0x1]
0x94a: V713 = 0x100
0x94d: V714 = EXP 0x100 0x0
0x94f: V715 = DIV V712 0x1
0x950: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0x965: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x966: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0x97b: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0x97c: V720 = CALLER
0x97d: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0x992: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0x993: V723 = EQ V722 V719
0x994: V724 = ISZERO V723
0x995: V725 = ISZERO V724
0x996: V726 = 0x99e
0x999: JUMPI 0x99e V725
---
Entry stack: [V10, 0x29e, V174, V180]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x99a
[0x99a:0x99d]
---
Predecessors: [0x93f]
Successors: []
---
0x99a PUSH1 0x0
0x99c DUP1
0x99d REVERT
---
0x99a: V727 = 0x0
0x99d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x99e
[0x99e:0x9b0]
---
Predecessors: [0x93f]
Successors: [0x9b1, 0x9be]
---
0x99e JUMPDEST
0x99f PUSH1 0x0
0x9a1 PUSH1 0x1
0x9a3 MUL
0x9a4 DUP4
0x9a5 PUSH1 0x0
0x9a7 NOT
0x9a8 AND
0x9a9 EQ
0x9aa ISZERO
0x9ab DUP1
0x9ac ISZERO
0x9ad PUSH2 0x9be
0x9b0 JUMPI
---
0x99e: JUMPDEST 
0x99f: V728 = 0x0
0x9a1: V729 = 0x1
0x9a3: V730 = MUL 0x1 0x0
0x9a5: V731 = 0x0
0x9a7: V732 = NOT 0x0
0x9a8: V733 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V180
0x9a9: V734 = EQ V733 0x0
0x9aa: V735 = ISZERO V734
0x9ac: V736 = ISZERO V735
0x9ad: V737 = 0x9be
0x9b0: JUMPI 0x9be V736
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V735]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0, V735]

================================

Block 0x9b1
[0x9b1:0x9bd]
---
Predecessors: [0x99e]
Successors: [0x9be]
---
0x9b1 POP
0x9b2 PUSH1 0x0
0x9b4 PUSH1 0x1
0x9b6 MUL
0x9b7 DUP5
0x9b8 PUSH1 0x0
0x9ba NOT
0x9bb AND
0x9bc EQ
0x9bd ISZERO
---
0x9b2: V738 = 0x0
0x9b4: V739 = 0x1
0x9b6: V740 = MUL 0x1 0x0
0x9b8: V741 = 0x0
0x9ba: V742 = NOT 0x0
0x9bb: V743 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V174
0x9bc: V744 = EQ V743 0x0
0x9bd: V745 = ISZERO V744
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0, V735]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V745]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0, V745]

================================

Block 0x9be
[0x9be:0x9c4]
---
Predecessors: [0x99e, 0x9b1]
Successors: [0x9c5, 0x9c9]
---
0x9be JUMPDEST
0x9bf ISZERO
0x9c0 ISZERO
0x9c1 PUSH2 0x9c9
0x9c4 JUMPI
---
0x9be: JUMPDEST 
0x9bf: V746 = ISZERO S0
0x9c0: V747 = ISZERO V746
0x9c1: V748 = 0x9c9
0x9c4: JUMPI 0x9c9 V747
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x9c5
[0x9c5:0x9c8]
---
Predecessors: [0x9be]
Successors: []
---
0x9c5 PUSH1 0x0
0x9c7 DUP1
0x9c8 REVERT
---
0x9c5: V749 = 0x0
0x9c8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x9c9
[0x9c9:0x9d1]
---
Predecessors: [0x9be]
Successors: [0x9d2]
---
0x9c9 JUMPDEST
0x9ca PUSH1 0x0
0x9cc SWAP2
0x9cd POP
0x9ce PUSH1 0x0
0x9d0 SWAP1
0x9d1 POP
---
0x9c9: JUMPDEST 
0x9ca: V750 = 0x0
0x9ce: V751 = 0x0
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x9d2
[0x9d2:0x9de]
---
Predecessors: [0x9c9, 0xa2b]
Successors: [0x9df, 0xa38]
---
0x9d2 JUMPDEST
0x9d3 PUSH1 0xa
0x9d5 DUP3
0x9d6 PUSH1 0xff
0x9d8 AND
0x9d9 LT
0x9da ISZERO
0x9db PUSH2 0xa38
0x9de JUMPI
---
0x9d2: JUMPDEST 
0x9d3: V752 = 0xa
0x9d6: V753 = 0xff
0x9d8: V754 = AND 0xff S1
0x9d9: V755 = LT V754 0xa
0x9da: V756 = ISZERO V755
0x9db: V757 = 0xa38
0x9de: JUMPI 0xa38 V756
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x29e, V174, V180, S1, 0x0]

================================

Block 0x9df
[0x9df:0xa10]
---
Predecessors: [0x9d2]
Successors: [0xa11, 0xa12]
---
0x9df DUP3
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 DUP1
0x9e4 DUP3
0x9e5 PUSH1 0x0
0x9e7 NOT
0x9e8 AND
0x9e9 PUSH1 0x0
0x9eb NOT
0x9ec AND
0x9ed DUP2
0x9ee MSTORE
0x9ef PUSH1 0x20
0x9f1 ADD
0x9f2 SWAP2
0x9f3 POP
0x9f4 POP
0x9f5 PUSH1 0x40
0x9f7 MLOAD
0x9f8 DUP1
0x9f9 SWAP2
0x9fa SUB
0x9fb SWAP1
0x9fc SHA3
0x9fd PUSH1 0x0
0x9ff NOT
0xa00 AND
0xa01 PUSH1 0x5
0xa03 DUP4
0xa04 PUSH1 0xff
0xa06 AND
0xa07 PUSH1 0xa
0xa09 DUP2
0xa0a LT
0xa0b ISZERO
0xa0c ISZERO
0xa0d PUSH2 0xa12
0xa10 JUMPI
---
0x9e0: V758 = 0x40
0x9e2: V759 = M[0x40]
0x9e5: V760 = 0x0
0x9e7: V761 = NOT 0x0
0x9e8: V762 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V180
0x9e9: V763 = 0x0
0x9eb: V764 = NOT 0x0
0x9ec: V765 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V762
0x9ee: M[V759] = V765
0x9ef: V766 = 0x20
0x9f1: V767 = ADD 0x20 V759
0x9f5: V768 = 0x40
0x9f7: V769 = M[0x40]
0x9fa: V770 = SUB V767 V769
0x9fc: V771 = SHA3 V769 V770
0x9fd: V772 = 0x0
0x9ff: V773 = NOT 0x0
0xa00: V774 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V771
0xa01: V775 = 0x5
0xa04: V776 = 0xff
0xa06: V777 = AND 0xff S1
0xa07: V778 = 0xa
0xa0a: V779 = LT V777 0xa
0xa0b: V780 = ISZERO V779
0xa0c: V781 = ISZERO V780
0xa0d: V782 = 0xa12
0xa10: JUMPI 0xa12 V781
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V774, 0x5, V777]
Exit stack: [V10, 0x29e, V174, V180, S1, 0x0, V774, 0x5, V777]

================================

Block 0xa11
[0xa11:0xa11]
---
Predecessors: [0x9df]
Successors: []
---
0xa11 INVALID
---
0xa11: INVALID 
---
Entry stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, 0x5, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, 0x5, V777]

================================

Block 0xa12
[0xa12:0xa15]
---
Predecessors: [0x9df]
Successors: [0xa16]
---
0xa12 JUMPDEST
0xa13 ADD
0xa14 PUSH1 0x0
---
0xa12: JUMPDEST 
0xa13: V783 = ADD V777 0x5
0xa14: V784 = 0x0
---
Entry stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, 0x5, V777]
Stack pops: 2
Stack additions: [V783, 0x0]
Exit stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, V783, 0x0]

================================

Block 0xa16
[0xa16:0xa22]
---
Predecessors: [0xa12]
Successors: [0xa23, 0xa2b]
---
0xa16 JUMPDEST
0xa17 POP
0xa18 SLOAD
0xa19 PUSH1 0x0
0xa1b NOT
0xa1c AND
0xa1d EQ
0xa1e ISZERO
0xa1f PUSH2 0xa2b
0xa22 JUMPI
---
0xa16: JUMPDEST 
0xa18: V785 = S[V783]
0xa19: V786 = 0x0
0xa1b: V787 = NOT 0x0
0xa1c: V788 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V785
0xa1d: V789 = EQ V788 V774
0xa1e: V790 = ISZERO V789
0xa1f: V791 = 0xa2b
0xa22: JUMPI 0xa2b V790
---
Entry stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, V783, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S4, 0x0]

================================

Block 0xa23
[0xa23:0xa2a]
---
Predecessors: [0xa16]
Successors: [0xa38]
---
0xa23 PUSH1 0x1
0xa25 SWAP1
0xa26 POP
0xa27 PUSH2 0xa38
0xa2a JUMP
---
0xa23: V792 = 0x1
0xa27: V793 = 0xa38
0xa2a: JUMP 0xa38
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x29e, V174, V180, S1, 0x1]

================================

Block 0xa2b
[0xa2b:0xa37]
---
Predecessors: [0xa16]
Successors: [0x9d2]
---
0xa2b JUMPDEST
0xa2c DUP2
0xa2d DUP1
0xa2e PUSH1 0x1
0xa30 ADD
0xa31 SWAP3
0xa32 POP
0xa33 POP
0xa34 PUSH2 0x9d2
0xa37 JUMP
---
0xa2b: JUMPDEST 
0xa2e: V794 = 0x1
0xa30: V795 = ADD 0x1 S1
0xa34: V796 = 0x9d2
0xa37: JUMP 0x9d2
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 2
Stack additions: [V795, S0]
Exit stack: [V10, 0x29e, V174, V180, V795, 0x0]

================================

Block 0xa38
[0xa38:0xa3f]
---
Predecessors: [0x9d2, 0xa23]
Successors: [0xa40, 0xa44]
---
0xa38 JUMPDEST
0xa39 DUP1
0xa3a ISZERO
0xa3b ISZERO
0xa3c PUSH2 0xa44
0xa3f JUMPI
---
0xa38: JUMPDEST 
0xa3a: V797 = ISZERO {0x0, 0x1}
0xa3b: V798 = ISZERO V797
0xa3c: V799 = 0xa44
0xa3f: JUMPI 0xa44 V798
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]

================================

Block 0xa40
[0xa40:0xa43]
---
Predecessors: [0xa38]
Successors: []
---
0xa40 PUSH1 0x0
0xa42 DUP1
0xa43 REVERT
---
0xa40: V800 = 0x0
0xa43: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]

================================

Block 0xa44
[0xa44:0xa68]
---
Predecessors: [0xa38]
Successors: [0xa69, 0xa6a]
---
0xa44 JUMPDEST
0xa45 TIMESTAMP
0xa46 PUSH1 0x10
0xa48 DUP2
0xa49 SWAP1
0xa4a SSTORE
0xa4b POP
0xa4c PUSH1 0x2
0xa4e PUSH1 0x12
0xa50 PUSH1 0x2
0xa52 PUSH2 0x100
0xa55 EXP
0xa56 DUP2
0xa57 SLOAD
0xa58 DUP2
0xa59 PUSH1 0xff
0xa5b MUL
0xa5c NOT
0xa5d AND
0xa5e SWAP1
0xa5f DUP4
0xa60 PUSH1 0x2
0xa62 DUP2
0xa63 GT
0xa64 ISZERO
0xa65 PUSH2 0xa6a
0xa68 JUMPI
---
0xa44: JUMPDEST 
0xa45: V801 = TIMESTAMP
0xa46: V802 = 0x10
0xa4a: S[0x10] = V801
0xa4c: V803 = 0x2
0xa4e: V804 = 0x12
0xa50: V805 = 0x2
0xa52: V806 = 0x100
0xa55: V807 = EXP 0x100 0x2
0xa57: V808 = S[0x12]
0xa59: V809 = 0xff
0xa5b: V810 = MUL 0xff 0x10000
0xa5c: V811 = NOT 0xff0000
0xa5d: V812 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V808
0xa60: V813 = 0x2
0xa63: V814 = GT 0x2 0x2
0xa64: V815 = ISZERO 0x0
0xa65: V816 = 0xa6a
0xa68: JUMPI 0xa6a 0x1
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x2, 0x12, V812, 0x10000, 0x2]
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]

================================

Block 0xa69
[0xa69:0xa69]
---
Predecessors: [0xa44]
Successors: []
---
0xa69 INVALID
---
0xa69: INVALID 
---
Entry stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]

================================

Block 0xa6a
[0xa6a:0xa7a]
---
Predecessors: [0xa44]
Successors: [0xa7b]
---
0xa6a JUMPDEST
0xa6b MUL
0xa6c OR
0xa6d SWAP1
0xa6e SSTORE
0xa6f POP
0xa70 DUP4
0xa71 PUSH1 0x0
0xa73 DUP2
0xa74 PUSH1 0x0
0xa76 NOT
0xa77 AND
0xa78 SWAP1
0xa79 SSTORE
0xa7a POP
---
0xa6a: JUMPDEST 
0xa6b: V817 = MUL 0x2 0x10000
0xa6c: V818 = OR 0x20000 V812
0xa6e: S[0x12] = V818
0xa71: V819 = 0x0
0xa74: V820 = 0x0
0xa76: V821 = NOT 0x0
0xa77: V822 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V174
0xa79: S[0x0] = V822
---
Entry stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5]
Exit stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}]

================================

Block 0xa7b
[0xa7b:0xa7b]
---
Predecessors: [0xa6a]
Successors: [0xa7c]
---
0xa7b JUMPDEST
---
0xa7b: JUMPDEST 
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]

================================

Block 0xa7c
[0xa7c:0xa81]
---
Predecessors: [0xa7b]
Successors: [0x29e]
---
0xa7c JUMPDEST
0xa7d POP
0xa7e POP
0xa7f POP
0xa80 POP
0xa81 JUMP
---
0xa7c: JUMPDEST 
0xa81: JUMP 0x29e
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0xa82
[0xa82:0xab9]
---
Predecessors: []
Successors: []
---
0xa82 STOP
0xa83 LOG1
0xa84 PUSH6 0x627a7a723058
0xa8b SHA3
0xa8c MLOAD
0xa8d MISSING 0xbe
0xa8e DUP2
0xa8f MISSING 0xba
0xa90 NUMBER
0xa91 MISSING 0x4d
0xa92 MISSING 0x5c
0xa93 MISSING 0xd5
0xa94 PUSH10 0xbe4e9556b449e788fdd4
0xa9f SWAP5
0xaa0 MISSING 0xeb
0xaa1 MISSING 0xee
0xaa2 DUP2
0xaa3 PUSH22 0xc2e54f4ec5447d480029
---
0xa82: STOP 
0xa83: LOG S0 S1 S2
0xa84: V823 = 0x627a7a723058
0xa8b: V824 = SHA3 0x627a7a723058 S3
0xa8c: V825 = M[V824]
0xa8d: MISSING 0xbe
0xa8f: MISSING 0xba
0xa90: V826 = NUMBER
0xa91: MISSING 0x4d
0xa92: MISSING 0x5c
0xa93: MISSING 0xd5
0xa94: V827 = 0xbe4e9556b449e788fdd4
0xaa0: MISSING 0xeb
0xaa1: MISSING 0xee
0xaa3: V828 = 0xc2e54f4ec5447d480029
---
Entry stack: []
Stack pops: 0
Stack additions: [V825, S1, S0, S1, V826, S4, S0, S1, S2, S3, 0xbe4e9556b449e788fdd4, 0xc2e54f4ec5447d480029, S1, S0, S1]
Exit stack: []

================================

Function 0:
Public function signature: 0x1793c314
Entry block: 0xc4
Exit block: 0x39c
Body: 0xc4, 0xcb, 0xcf, 0x11a, 0x2a0, 0x2b7, 0x2c1, 0x2c7, 0x2cb, 0x2e1, 0x344, 0x348, 0x349, 0x39c, 0x3a0, 0x3a1

Function 1:
Public function signature: 0x21e92d49
Entry block: 0x11c
Exit block: 0x151
Body: 0x11c, 0x151, 0x3a5, 0x3fd, 0x401, 0x40d, 0x40e, 0x428, 0x429, 0x431, 0x435, 0x457, 0x45b, 0x493, 0x497, 0x4d3, 0x4d7, 0x4df, 0x4e0

Function 2:
Public function signature: 0x872fe620
Entry block: 0x153
Exit block: 0x646
Body: 0x153, 0x15a, 0x15e, 0x166, 0x4e4, 0x548, 0x54c, 0x558, 0x559, 0x573, 0x574, 0x57c, 0x5a0, 0x5a1, 0x5ab, 0x5ba, 0x5be, 0x5bf, 0x5cb, 0x5cc, 0x5e6, 0x5e7, 0x5ef, 0x5f3, 0x646, 0x64a, 0x64b, 0x64c

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x168
Exit block: 0x17b
Body: 0x168, 0x16f, 0x173, 0x17b, 0x64e

Function 4:
Public function signature: 0x9066314e
Entry block: 0x1bd
Exit block: 0x1e0
Body: 0x1bd, 0x1c4, 0x1c8, 0x1e0, 0x674, 0x6cc, 0x6d0, 0x6dc, 0x6dd, 0x6f7, 0x6f8, 0x700, 0x704, 0x749, 0x74a

Function 5:
Public function signature: 0xa5bbc423
Entry block: 0x1e2
Exit block: 0x23d
Body: 0x1e2, 0x1e9, 0x1ed, 0x23d, 0x74d, 0x767, 0x772, 0x776, 0x78d, 0x808, 0x80c, 0x81d, 0x821, 0x839, 0x844, 0x848, 0x85f, 0x898, 0x89c, 0x8a7, 0x8a8, 0x8c2, 0x8c3, 0x8cb, 0x8cf, 0x922, 0x926, 0x927, 0x928

Function 6:
Public function signature: 0xc46f3e25
Entry block: 0x23f
Exit block: 0x252
Body: 0x23f, 0x246, 0x24a, 0x252, 0x92c

Function 7:
Public function signature: 0xf341cae8
Entry block: 0x26c
Exit block: 0x29e
Body: 0x26c, 0x273, 0x277, 0x29e, 0x93f, 0x99a, 0x99e, 0x9b1, 0x9be, 0x9c5, 0x9c9, 0x9d2, 0x9df, 0xa11, 0xa12, 0xa16, 0xa23, 0xa2b, 0xa38, 0xa40, 0xa44, 0xa69, 0xa6a, 0xa7b, 0xa7c

Function 8:
Public fallback function
Entry block: 0x8c
Exit block: 0xc2
Body: 0x8c, 0x8d, 0x99, 0x9a, 0xb4, 0xb5, 0xbd, 0xc1, 0xc2

