Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x31e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4f817a2a
0x3c EQ
0x3d PUSH2 0x31e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4f817a2a
0x3c: V13 = EQ 0x4f817a2a V11
0x3d: V14 = 0x31e
0x40: JUMPI 0x31e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x375]
---
0x41 DUP1
0x42 PUSH4 0x70a08231
0x47 EQ
0x48 PUSH2 0x375
0x4b JUMPI
---
0x42: V15 = 0x70a08231
0x47: V16 = EQ 0x70a08231 V11
0x48: V17 = 0x375
0x4b: JUMPI 0x375 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x3cc]
---
0x4c DUP1
0x4d PUSH4 0xe5a912c7
0x52 EQ
0x53 PUSH2 0x3cc
0x56 JUMPI
---
0x4d: V18 = 0xe5a912c7
0x52: V19 = EQ 0xe5a912c7 V11
0x53: V20 = 0x3cc
0x56: JUMPI 0x3cc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x11b]
---
Predecessors: [0x0, 0x4c]
Successors: [0x11c, 0x120]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a CALLVALUE
0x5b SWAP1
0x5c POP
0x5d PUSH1 0x0
0x5f DUP1
0x60 SWAP1
0x61 SLOAD
0x62 SWAP1
0x63 PUSH2 0x100
0x66 EXP
0x67 SWAP1
0x68 DIV
0x69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e AND
0x7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94 AND
0x95 PUSH4 0xa9059cbb
0x9a CALLER
0x9b DUP4
0x9c PUSH1 0x40
0x9e MLOAD
0x9f DUP4
0xa0 PUSH4 0xffffffff
0xa5 AND
0xa6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc4 MUL
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x4
0xc9 ADD
0xca DUP1
0xcb DUP4
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd DUP3
0xfe DUP2
0xff MSTORE
0x100 PUSH1 0x20
0x102 ADD
0x103 SWAP3
0x104 POP
0x105 POP
0x106 POP
0x107 PUSH1 0x0
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d DUP4
0x10e SUB
0x10f DUP2
0x110 PUSH1 0x0
0x112 DUP8
0x113 DUP1
0x114 EXTCODESIZE
0x115 ISZERO
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5a: V22 = CALLVALUE
0x5d: V23 = 0x0
0x61: V24 = S[0x0]
0x63: V25 = 0x100
0x66: V26 = EXP 0x100 0x0
0x68: V27 = DIV V24 0x1
0x69: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x7f: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x94: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x95: V32 = 0xa9059cbb
0x9a: V33 = CALLER
0x9c: V34 = 0x40
0x9e: V35 = M[0x40]
0xa0: V36 = 0xffffffff
0xa5: V37 = AND 0xffffffff 0xa9059cbb
0xa6: V38 = 0x100000000000000000000000000000000000000000000000000000000
0xc4: V39 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc6: M[V35] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc7: V40 = 0x4
0xc9: V41 = ADD 0x4 V35
0xcc: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xe2: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xf9: M[V41] = V45
0xfa: V46 = 0x20
0xfc: V47 = ADD 0x20 V41
0xff: M[V47] = V22
0x100: V48 = 0x20
0x102: V49 = ADD 0x20 V47
0x107: V50 = 0x0
0x109: V51 = 0x40
0x10b: V52 = M[0x40]
0x10e: V53 = SUB V49 V52
0x110: V54 = 0x0
0x114: V55 = EXTCODESIZE V31
0x115: V56 = ISZERO V55
0x117: V57 = ISZERO V56
0x118: V58 = 0x120
0x11b: JUMPI 0x120 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22, V31, 0xa9059cbb, V49, 0x0, V52, V53, V52, 0x0, V31, V56]
Exit stack: [V11, V22, V31, 0xa9059cbb, V49, 0x0, V52, V53, V52, 0x0, V31, V56]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x57]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V59 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V11, V22, V31, 0xa9059cbb, V49, 0x0, V52, V53, V52, 0x0, V31, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22, V31, 0xa9059cbb, V49, 0x0, V52, V53, V52, 0x0, V31, V56]

================================

Block 0x120
[0x120:0x12a]
---
Predecessors: [0x57]
Successors: [0x12b, 0x134]
---
0x120 JUMPDEST
0x121 POP
0x122 GAS
0x123 CALL
0x124 ISZERO
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x134
0x12a JUMPI
---
0x120: JUMPDEST 
0x122: V60 = GAS
0x123: V61 = CALL V60 V31 0x0 V52 V53 V52 0x0
0x124: V62 = ISZERO V61
0x126: V63 = ISZERO V62
0x127: V64 = 0x134
0x12a: JUMPI 0x134 V63
---
Entry stack: [V11, V22, V31, 0xa9059cbb, V49, 0x0, V52, V53, V52, 0x0, V31, V56]
Stack pops: 7
Stack additions: [V62]
Exit stack: [V11, V22, V31, 0xa9059cbb, V49, V62]

================================

Block 0x12b
[0x12b:0x133]
---
Predecessors: [0x120]
Successors: []
---
0x12b RETURNDATASIZE
0x12c PUSH1 0x0
0x12e DUP1
0x12f RETURNDATACOPY
0x130 RETURNDATASIZE
0x131 PUSH1 0x0
0x133 REVERT
---
0x12b: V65 = RETURNDATASIZE
0x12c: V66 = 0x0
0x12f: RETURNDATACOPY 0x0 0x0 V65
0x130: V67 = RETURNDATASIZE
0x131: V68 = 0x0
0x133: REVERT 0x0 V67
---
Entry stack: [V11, V22, V31, 0xa9059cbb, V49, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22, V31, 0xa9059cbb, V49, V62]

================================

Block 0x134
[0x134:0x24d]
---
Predecessors: [0x120]
Successors: [0x24e, 0x252]
---
0x134 JUMPDEST
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 PUSH1 0x0
0x13b DUP1
0x13c SWAP1
0x13d SLOAD
0x13e SWAP1
0x13f PUSH2 0x100
0x142 EXP
0x143 SWAP1
0x144 DIV
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 PUSH4 0x23b872dd
0x176 CALLER
0x177 PUSH1 0x2
0x179 PUSH1 0x0
0x17b SWAP1
0x17c SLOAD
0x17d SWAP1
0x17e PUSH2 0x100
0x181 EXP
0x182 SWAP1
0x183 DIV
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a DUP5
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP5
0x19f PUSH4 0xffffffff
0x1a4 AND
0x1a5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1c3 MUL
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x4
0x1c8 ADD
0x1c9 DUP1
0x1ca DUP5
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc DUP4
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 DUP2
0x22a MSTORE
0x22b PUSH1 0x20
0x22d ADD
0x22e DUP3
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 SWAP4
0x235 POP
0x236 POP
0x237 POP
0x238 POP
0x239 PUSH1 0x20
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f DUP4
0x240 SUB
0x241 DUP2
0x242 PUSH1 0x0
0x244 DUP8
0x245 DUP1
0x246 EXTCODESIZE
0x247 ISZERO
0x248 DUP1
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x134: JUMPDEST 
0x139: V69 = 0x0
0x13d: V70 = S[0x0]
0x13f: V71 = 0x100
0x142: V72 = EXP 0x100 0x0
0x144: V73 = DIV V70 0x1
0x145: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x15b: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x171: V78 = 0x23b872dd
0x176: V79 = CALLER
0x177: V80 = 0x2
0x179: V81 = 0x0
0x17c: V82 = S[0x2]
0x17e: V83 = 0x100
0x181: V84 = EXP 0x100 0x0
0x183: V85 = DIV V82 0x1
0x184: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x19b: V88 = 0x40
0x19d: V89 = M[0x40]
0x19f: V90 = 0xffffffff
0x1a4: V91 = AND 0xffffffff 0x23b872dd
0x1a5: V92 = 0x100000000000000000000000000000000000000000000000000000000
0x1c3: V93 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x1c5: M[V89] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1c6: V94 = 0x4
0x1c8: V95 = ADD 0x4 V89
0x1cb: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x1e1: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1f8: M[V95] = V99
0x1f9: V100 = 0x20
0x1fb: V101 = ADD 0x20 V95
0x1fd: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x213: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x22a: M[V101] = V105
0x22b: V106 = 0x20
0x22d: V107 = ADD 0x20 V101
0x230: M[V107] = V22
0x231: V108 = 0x20
0x233: V109 = ADD 0x20 V107
0x239: V110 = 0x20
0x23b: V111 = 0x40
0x23d: V112 = M[0x40]
0x240: V113 = SUB V109 V112
0x242: V114 = 0x0
0x246: V115 = EXTCODESIZE V77
0x247: V116 = ISZERO V115
0x249: V117 = ISZERO V116
0x24a: V118 = 0x252
0x24d: JUMPI 0x252 V117
---
Entry stack: [V11, V22, V31, 0xa9059cbb, V49, V62]
Stack pops: 5
Stack additions: [S4, V77, 0x23b872dd, V109, 0x20, V112, V113, V112, 0x0, V77, V116]
Exit stack: [V11, V22, V77, 0x23b872dd, V109, 0x20, V112, V113, V112, 0x0, V77, V116]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x134]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V119 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V11, V22, V77, 0x23b872dd, V109, 0x20, V112, V113, V112, 0x0, V77, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22, V77, 0x23b872dd, V109, 0x20, V112, V113, V112, 0x0, V77, V116]

================================

Block 0x252
[0x252:0x25c]
---
Predecessors: [0x134]
Successors: [0x25d, 0x266]
---
0x252 JUMPDEST
0x253 POP
0x254 GAS
0x255 CALL
0x256 ISZERO
0x257 DUP1
0x258 ISZERO
0x259 PUSH2 0x266
0x25c JUMPI
---
0x252: JUMPDEST 
0x254: V120 = GAS
0x255: V121 = CALL V120 V77 0x0 V112 V113 V112 0x20
0x256: V122 = ISZERO V121
0x258: V123 = ISZERO V122
0x259: V124 = 0x266
0x25c: JUMPI 0x266 V123
---
Entry stack: [V11, V22, V77, 0x23b872dd, V109, 0x20, V112, V113, V112, 0x0, V77, V116]
Stack pops: 7
Stack additions: [V122]
Exit stack: [V11, V22, V77, 0x23b872dd, V109, V122]

================================

Block 0x25d
[0x25d:0x265]
---
Predecessors: [0x252]
Successors: []
---
0x25d RETURNDATASIZE
0x25e PUSH1 0x0
0x260 DUP1
0x261 RETURNDATACOPY
0x262 RETURNDATASIZE
0x263 PUSH1 0x0
0x265 REVERT
---
0x25d: V125 = RETURNDATASIZE
0x25e: V126 = 0x0
0x261: RETURNDATACOPY 0x0 0x0 V125
0x262: V127 = RETURNDATASIZE
0x263: V128 = 0x0
0x265: REVERT 0x0 V127
---
Entry stack: [V11, V22, V77, 0x23b872dd, V109, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22, V77, 0x23b872dd, V109, V122]

================================

Block 0x266
[0x266:0x277]
---
Predecessors: [0x252]
Successors: [0x278, 0x27c]
---
0x266 JUMPDEST
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b PUSH1 0x40
0x26d MLOAD
0x26e RETURNDATASIZE
0x26f PUSH1 0x20
0x271 DUP2
0x272 LT
0x273 ISZERO
0x274 PUSH2 0x27c
0x277 JUMPI
---
0x266: JUMPDEST 
0x26b: V129 = 0x40
0x26d: V130 = M[0x40]
0x26e: V131 = RETURNDATASIZE
0x26f: V132 = 0x20
0x272: V133 = LT V131 0x20
0x273: V134 = ISZERO V133
0x274: V135 = 0x27c
0x277: JUMPI 0x27c V134
---
Entry stack: [V11, V22, V77, 0x23b872dd, V109, V122]
Stack pops: 4
Stack additions: [V130, V131]
Exit stack: [V11, V22, V130, V131]

================================

Block 0x278
[0x278:0x27b]
---
Predecessors: [0x266]
Successors: []
---
0x278 PUSH1 0x0
0x27a DUP1
0x27b REVERT
---
0x278: V136 = 0x0
0x27b: REVERT 0x0 0x0
---
Entry stack: [V11, V22, V130, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22, V130, V131]

================================

Block 0x27c
[0x27c:0x31d]
---
Predecessors: [0x266]
Successors: []
---
0x27c JUMPDEST
0x27d DUP2
0x27e ADD
0x27f SWAP1
0x280 DUP1
0x281 DUP1
0x282 MLOAD
0x283 SWAP1
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP1
0x288 SWAP3
0x289 SWAP2
0x28a SWAP1
0x28b POP
0x28c POP
0x28d POP
0x28e POP
0x28f PUSH32 0x2ba5dd9653174138784e5d96e6414a4792d581bf8b5622f9a78f2e76d7ee5d1a
0x2b0 PUSH1 0x2
0x2b2 PUSH1 0x0
0x2b4 SWAP1
0x2b5 SLOAD
0x2b6 SWAP1
0x2b7 PUSH2 0x100
0x2ba EXP
0x2bb SWAP1
0x2bc DIV
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 DUP3
0x2d4 PUSH1 0x40
0x2d6 MLOAD
0x2d7 DUP1
0x2d8 DUP4
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x304 AND
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a DUP3
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f ADD
0x310 SWAP3
0x311 POP
0x312 POP
0x313 POP
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 SWAP2
0x319 SUB
0x31a SWAP1
0x31b LOG1
0x31c POP
0x31d STOP
---
0x27c: JUMPDEST 
0x27e: V137 = ADD V130 V131
0x282: V138 = M[V130]
0x284: V139 = 0x20
0x286: V140 = ADD 0x20 V130
0x28f: V141 = 0x2ba5dd9653174138784e5d96e6414a4792d581bf8b5622f9a78f2e76d7ee5d1a
0x2b0: V142 = 0x2
0x2b2: V143 = 0x0
0x2b5: V144 = S[0x2]
0x2b7: V145 = 0x100
0x2ba: V146 = EXP 0x100 0x0
0x2bc: V147 = DIV V144 0x1
0x2bd: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x2d4: V150 = 0x40
0x2d6: V151 = M[0x40]
0x2d9: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2ef: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x304: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x306: M[V151] = V155
0x307: V156 = 0x20
0x309: V157 = ADD 0x20 V151
0x30c: M[V157] = V22
0x30d: V158 = 0x20
0x30f: V159 = ADD 0x20 V157
0x314: V160 = 0x40
0x316: V161 = M[0x40]
0x319: V162 = SUB V159 V161
0x31b: LOG V161 V162 0x2ba5dd9653174138784e5d96e6414a4792d581bf8b5622f9a78f2e76d7ee5d1a
0x31d: STOP 
---
Entry stack: [V11, V22, V130, V131]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x31e
[0x31e:0x325]
---
Predecessors: [0xd]
Successors: [0x326, 0x32a]
---
0x31e JUMPDEST
0x31f CALLVALUE
0x320 DUP1
0x321 ISZERO
0x322 PUSH2 0x32a
0x325 JUMPI
---
0x31e: JUMPDEST 
0x31f: V163 = CALLVALUE
0x321: V164 = ISZERO V163
0x322: V165 = 0x32a
0x325: JUMPI 0x32a V164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V163]
Exit stack: [V11, V163]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x31e]
Successors: []
---
0x326 PUSH1 0x0
0x328 DUP1
0x329 REVERT
---
0x326: V166 = 0x0
0x329: REVERT 0x0 0x0
---
Entry stack: [V11, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V163]

================================

Block 0x32a
[0x32a:0x332]
---
Predecessors: [0x31e]
Successors: [0x423]
---
0x32a JUMPDEST
0x32b POP
0x32c PUSH2 0x333
0x32f PUSH2 0x423
0x332 JUMP
---
0x32a: JUMPDEST 
0x32c: V167 = 0x333
0x32f: V168 = 0x423
0x332: JUMP 0x423
---
Entry stack: [V11, V163]
Stack pops: 1
Stack additions: [0x333]
Exit stack: [V11, 0x333]

================================

Block 0x333
[0x333:0x374]
---
Predecessors: [0x423]
Successors: []
---
0x333 JUMPDEST
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 DUP3
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x20
0x369 ADD
0x36a SWAP2
0x36b POP
0x36c POP
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 SWAP2
0x372 SUB
0x373 SWAP1
0x374 RETURN
---
0x333: JUMPDEST 
0x334: V169 = 0x40
0x336: V170 = M[0x40]
0x339: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x34f: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x366: M[V170] = V174
0x367: V175 = 0x20
0x369: V176 = ADD 0x20 V170
0x36d: V177 = 0x40
0x36f: V178 = M[0x40]
0x372: V179 = SUB V176 V178
0x374: RETURN V178 V179
---
Entry stack: [V11, 0x333, V225]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x333]

================================

Block 0x375
[0x375:0x37c]
---
Predecessors: [0x41]
Successors: [0x37d, 0x381]
---
0x375 JUMPDEST
0x376 CALLVALUE
0x377 DUP1
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x375: JUMPDEST 
0x376: V180 = CALLVALUE
0x378: V181 = ISZERO V180
0x379: V182 = 0x381
0x37c: JUMPI 0x381 V181
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V180]
Exit stack: [V11, V180]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x375]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V183 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V11, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V180]

================================

Block 0x381
[0x381:0x3b5]
---
Predecessors: [0x375]
Successors: [0x448]
---
0x381 JUMPDEST
0x382 POP
0x383 PUSH2 0x3b6
0x386 PUSH1 0x4
0x388 DUP1
0x389 CALLDATASIZE
0x38a SUB
0x38b DUP2
0x38c ADD
0x38d SWAP1
0x38e DUP1
0x38f DUP1
0x390 CALLDATALOAD
0x391 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a6 AND
0x3a7 SWAP1
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab SWAP1
0x3ac SWAP3
0x3ad SWAP2
0x3ae SWAP1
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 PUSH2 0x448
0x3b5 JUMP
---
0x381: JUMPDEST 
0x383: V184 = 0x3b6
0x386: V185 = 0x4
0x389: V186 = CALLDATASIZE
0x38a: V187 = SUB V186 0x4
0x38c: V188 = ADD 0x4 V187
0x390: V189 = CALLDATALOAD 0x4
0x391: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x3a8: V192 = 0x20
0x3aa: V193 = ADD 0x20 0x4
0x3b2: V194 = 0x448
0x3b5: JUMP 0x448
---
Entry stack: [V11, V180]
Stack pops: 1
Stack additions: [0x3b6, V191]
Exit stack: [V11, 0x3b6, V191]

================================

Block 0x3b6
[0x3b6:0x3cb]
---
Predecessors: [0x448]
Successors: []
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba DUP1
0x3bb DUP3
0x3bc DUP2
0x3bd MSTORE
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 SWAP2
0x3c2 POP
0x3c3 POP
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 DUP1
0x3c8 SWAP2
0x3c9 SUB
0x3ca SWAP1
0x3cb RETURN
---
0x3b6: JUMPDEST 
0x3b7: V195 = 0x40
0x3b9: V196 = M[0x40]
0x3bd: M[V196] = V233
0x3be: V197 = 0x20
0x3c0: V198 = ADD 0x20 V196
0x3c4: V199 = 0x40
0x3c6: V200 = M[0x40]
0x3c9: V201 = SUB V198 V200
0x3cb: RETURN V200 V201
---
Entry stack: [V11, 0x3b6, V233]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3b6]

================================

Block 0x3cc
[0x3cc:0x3d3]
---
Predecessors: [0x4c]
Successors: [0x3d4, 0x3d8]
---
0x3cc JUMPDEST
0x3cd CALLVALUE
0x3ce DUP1
0x3cf ISZERO
0x3d0 PUSH2 0x3d8
0x3d3 JUMPI
---
0x3cc: JUMPDEST 
0x3cd: V202 = CALLVALUE
0x3cf: V203 = ISZERO V202
0x3d0: V204 = 0x3d8
0x3d3: JUMPI 0x3d8 V203
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V202]
Exit stack: [V11, V202]

================================

Block 0x3d4
[0x3d4:0x3d7]
---
Predecessors: [0x3cc]
Successors: []
---
0x3d4 PUSH1 0x0
0x3d6 DUP1
0x3d7 REVERT
---
0x3d4: V205 = 0x0
0x3d7: REVERT 0x0 0x0
---
Entry stack: [V11, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V202]

================================

Block 0x3d8
[0x3d8:0x3e0]
---
Predecessors: [0x3cc]
Successors: [0x460]
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da PUSH2 0x3e1
0x3dd PUSH2 0x460
0x3e0 JUMP
---
0x3d8: JUMPDEST 
0x3da: V206 = 0x3e1
0x3dd: V207 = 0x460
0x3e0: JUMP 0x460
---
Entry stack: [V11, V202]
Stack pops: 1
Stack additions: [0x3e1]
Exit stack: [V11, 0x3e1]

================================

Block 0x3e1
[0x3e1:0x422]
---
Predecessors: [0x460]
Successors: []
---
0x3e1 JUMPDEST
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 DUP3
0x3e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fc AND
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x20
0x417 ADD
0x418 SWAP2
0x419 POP
0x41a POP
0x41b PUSH1 0x40
0x41d MLOAD
0x41e DUP1
0x41f SWAP2
0x420 SUB
0x421 SWAP1
0x422 RETURN
---
0x3e1: JUMPDEST 
0x3e2: V208 = 0x40
0x3e4: V209 = M[0x40]
0x3e7: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3fd: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x414: M[V209] = V213
0x415: V214 = 0x20
0x417: V215 = ADD 0x20 V209
0x41b: V216 = 0x40
0x41d: V217 = M[0x40]
0x420: V218 = SUB V215 V217
0x422: RETURN V217 V218
---
Entry stack: [V11, 0x3e1, V241]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3e1]

================================

Block 0x423
[0x423:0x447]
---
Predecessors: [0x32a]
Successors: [0x333]
---
0x423 JUMPDEST
0x424 PUSH1 0x0
0x426 DUP1
0x427 SWAP1
0x428 SLOAD
0x429 SWAP1
0x42a PUSH2 0x100
0x42d EXP
0x42e SWAP1
0x42f DIV
0x430 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x445 AND
0x446 DUP2
0x447 JUMP
---
0x423: JUMPDEST 
0x424: V219 = 0x0
0x428: V220 = S[0x0]
0x42a: V221 = 0x100
0x42d: V222 = EXP 0x100 0x0
0x42f: V223 = DIV V220 0x1
0x430: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x445: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x447: JUMP 0x333
---
Entry stack: [V11, 0x333]
Stack pops: 1
Stack additions: [S0, V225]
Exit stack: [V11, 0x333, V225]

================================

Block 0x448
[0x448:0x45f]
---
Predecessors: [0x381]
Successors: [0x3b6]
---
0x448 JUMPDEST
0x449 PUSH1 0x1
0x44b PUSH1 0x20
0x44d MSTORE
0x44e DUP1
0x44f PUSH1 0x0
0x451 MSTORE
0x452 PUSH1 0x40
0x454 PUSH1 0x0
0x456 SHA3
0x457 PUSH1 0x0
0x459 SWAP2
0x45a POP
0x45b SWAP1
0x45c POP
0x45d SLOAD
0x45e DUP2
0x45f JUMP
---
0x448: JUMPDEST 
0x449: V226 = 0x1
0x44b: V227 = 0x20
0x44d: M[0x20] = 0x1
0x44f: V228 = 0x0
0x451: M[0x0] = V191
0x452: V229 = 0x40
0x454: V230 = 0x0
0x456: V231 = SHA3 0x0 0x40
0x457: V232 = 0x0
0x45d: V233 = S[V231]
0x45f: JUMP 0x3b6
---
Entry stack: [V11, 0x3b6, V191]
Stack pops: 2
Stack additions: [S1, V233]
Exit stack: [V11, 0x3b6, V233]

================================

Block 0x460
[0x460:0x485]
---
Predecessors: [0x3d8]
Successors: [0x3e1]
---
0x460 JUMPDEST
0x461 PUSH1 0x2
0x463 PUSH1 0x0
0x465 SWAP1
0x466 SLOAD
0x467 SWAP1
0x468 PUSH2 0x100
0x46b EXP
0x46c SWAP1
0x46d DIV
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 DUP2
0x485 JUMP
---
0x460: JUMPDEST 
0x461: V234 = 0x2
0x463: V235 = 0x0
0x466: V236 = S[0x2]
0x468: V237 = 0x100
0x46b: V238 = EXP 0x100 0x0
0x46d: V239 = DIV V236 0x1
0x46e: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x485: JUMP 0x3e1
---
Entry stack: [V11, 0x3e1]
Stack pops: 1
Stack additions: [S0, V241]
Exit stack: [V11, 0x3e1, V241]

================================

Block 0x486
[0x486:0x4b1]
---
Predecessors: []
Successors: []
---
0x486 STOP
0x487 LOG1
0x488 PUSH6 0x627a7a723058
0x48f SHA3
0x490 DUP15
0x491 MISSING 0xc9
0x492 MISSING 0x28
0x493 MISSING 0xeb
0x494 MISSING 0x24
0x495 INVALID
0x496 DUP12
0x497 MISSING 0xc0
0x498 MOD
0x499 MISSING 0xae
0x49a MISSING 0xb3
0x49b CODESIZE
0x49c ADD
0x49d MISSING 0xd2
0x49e SWAP14
0x49f MSIZE
0x4a0 PUSH12 0x4c2006aeb85585509b576307
0x4ad RETURN
0x4ae MISSING 0x5c
0x4af MISSING 0xc9
0x4b0 STOP
0x4b1 MISSING 0x29
---
0x486: STOP 
0x487: LOG S0 S1 S2
0x488: V242 = 0x627a7a723058
0x48f: V243 = SHA3 0x627a7a723058 S3
0x491: MISSING 0xc9
0x492: MISSING 0x28
0x493: MISSING 0xeb
0x494: MISSING 0x24
0x495: INVALID 
0x497: MISSING 0xc0
0x498: V244 = MOD S0 S1
0x499: MISSING 0xae
0x49a: MISSING 0xb3
0x49b: V245 = CODESIZE
0x49c: V246 = ADD V245 S0
0x49d: MISSING 0xd2
0x49f: V247 = MSIZE
0x4a0: V248 = 0x4c2006aeb85585509b576307
0x4ad: RETURN 0x4c2006aeb85585509b576307 V247
0x4ae: MISSING 0x5c
0x4af: MISSING 0xc9
0x4b0: STOP 
0x4b1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, V243, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V244, V246, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x4f817a2a
Entry block: 0x31e
Exit block: 0x333
Body: 0x31e, 0x326, 0x32a, 0x333, 0x423

Function 1:
Public function signature: 0x70a08231
Entry block: 0x375
Exit block: 0x3b6
Body: 0x375, 0x37d, 0x381, 0x3b6, 0x448

Function 2:
Public function signature: 0xe5a912c7
Entry block: 0x3cc
Exit block: 0x3e1
Body: 0x3cc, 0x3d4, 0x3d8, 0x3e1, 0x460

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x27c
Body: 0x57, 0x11c, 0x120, 0x12b, 0x134, 0x24e, 0x252, 0x25d, 0x266, 0x278, 0x27c

