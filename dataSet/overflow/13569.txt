Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x79ba5097
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x79ba5097
0x3c: V13 = EQ 0x79ba5097 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7e]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x7e
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x7e
0x4b: JUMPI 0x7e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd5]
---
0x4c DUP1
0x4d PUSH4 0xd4ee1d90
0x52 EQ
0x53 PUSH2 0xd5
0x56 JUMPI
---
0x4d: V18 = 0xd4ee1d90
0x52: V19 = EQ 0xd4ee1d90 V11
0x53: V20 = 0xd5
0x56: JUMPI 0xd5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x12c]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x12c
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x12c
0x61: JUMPI 0x12c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0x7b]
---
Predecessors: [0x67]
Successors: [0x16f]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0x7c
0x78 PUSH2 0x16f
0x7b JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0x7c
0x78: V30 = 0x16f
0x7b: JUMP 0x16f
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x7c]
Exit stack: [V11, 0x7c]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: [0x1cb]
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0x41]
Successors: [0x86, 0x8a]
---
0x7e JUMPDEST
0x7f CALLVALUE
0x80 DUP1
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x7e: JUMPDEST 
0x7f: V31 = CALLVALUE
0x81: V32 = ISZERO V31
0x82: V33 = 0x8a
0x85: JUMPI 0x8a V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7e]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V34 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x8a
[0x8a:0x92]
---
Predecessors: [0x7e]
Successors: [0x30e]
---
0x8a JUMPDEST
0x8b POP
0x8c PUSH2 0x93
0x8f PUSH2 0x30e
0x92 JUMP
---
0x8a: JUMPDEST 
0x8c: V35 = 0x93
0x8f: V36 = 0x30e
0x92: JUMP 0x30e
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0x93]
Exit stack: [V11, 0x93]

================================

Block 0x93
[0x93:0xd4]
---
Predecessors: [0x30e]
Successors: []
---
0x93 JUMPDEST
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 DUP3
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP2
0xcb POP
0xcc POP
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 SWAP2
0xd2 SUB
0xd3 SWAP1
0xd4 RETURN
---
0x93: JUMPDEST 
0x94: V37 = 0x40
0x96: V38 = M[0x40]
0x99: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0xaf: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc6: M[V38] = V42
0xc7: V43 = 0x20
0xc9: V44 = ADD 0x20 V38
0xcd: V45 = 0x40
0xcf: V46 = M[0x40]
0xd2: V47 = SUB V44 V46
0xd4: RETURN V46 V47
---
Entry stack: [V11, 0x93, V163]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x93]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0x4c]
Successors: [0xdd, 0xe1]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 DUP1
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd5: JUMPDEST 
0xd6: V48 = CALLVALUE
0xd8: V49 = ISZERO V48
0xd9: V50 = 0xe1
0xdc: JUMPI 0xe1 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd5]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V51 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xe1
[0xe1:0xe9]
---
Predecessors: [0xd5]
Successors: [0x333]
---
0xe1 JUMPDEST
0xe2 POP
0xe3 PUSH2 0xea
0xe6 PUSH2 0x333
0xe9 JUMP
---
0xe1: JUMPDEST 
0xe3: V52 = 0xea
0xe6: V53 = 0x333
0xe9: JUMP 0x333
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xea]
Exit stack: [V11, 0xea]

================================

Block 0xea
[0xea:0x12b]
---
Predecessors: [0x333]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP2
0x122 POP
0x123 POP
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0xea: JUMPDEST 
0xeb: V54 = 0x40
0xed: V55 = M[0x40]
0xf0: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x106: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x11d: M[V55] = V59
0x11e: V60 = 0x20
0x120: V61 = ADD 0x20 V55
0x124: V62 = 0x40
0x126: V63 = M[0x40]
0x129: V64 = SUB V61 V63
0x12b: RETURN V63 V64
---
Entry stack: [V11, 0xea, V171]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xea]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x57]
Successors: [0x134, 0x138]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12c: JUMPDEST 
0x12d: V65 = CALLVALUE
0x12f: V66 = ISZERO V65
0x130: V67 = 0x138
0x133: JUMPI 0x138 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V65]
Exit stack: [V11, V65]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12c]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V68 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65]

================================

Block 0x138
[0x138:0x16c]
---
Predecessors: [0x12c]
Successors: [0x359]
---
0x138 JUMPDEST
0x139 POP
0x13a PUSH2 0x16d
0x13d PUSH1 0x4
0x13f DUP1
0x140 CALLDATASIZE
0x141 SUB
0x142 DUP2
0x143 ADD
0x144 SWAP1
0x145 DUP1
0x146 DUP1
0x147 CALLDATALOAD
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP3
0x164 SWAP2
0x165 SWAP1
0x166 POP
0x167 POP
0x168 POP
0x169 PUSH2 0x359
0x16c JUMP
---
0x138: JUMPDEST 
0x13a: V69 = 0x16d
0x13d: V70 = 0x4
0x140: V71 = CALLDATASIZE
0x141: V72 = SUB V71 0x4
0x143: V73 = ADD 0x4 V72
0x147: V74 = CALLDATALOAD 0x4
0x148: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15f: V77 = 0x20
0x161: V78 = ADD 0x20 0x4
0x169: V79 = 0x359
0x16c: JUMP 0x359
---
Entry stack: [V11, V65]
Stack pops: 1
Stack additions: [0x16d, V76]
Exit stack: [V11, 0x16d, V76]

================================

Block 0x16d
[0x16d:0x16e]
---
Predecessors: [0x3b4]
Successors: []
---
0x16d JUMPDEST
0x16e STOP
---
0x16d: JUMPDEST 
0x16e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16f
[0x16f:0x1c6]
---
Predecessors: [0x73]
Successors: [0x1c7, 0x1cb]
---
0x16f JUMPDEST
0x170 PUSH1 0x1
0x172 PUSH1 0x0
0x174 SWAP1
0x175 SLOAD
0x176 SWAP1
0x177 PUSH2 0x100
0x17a EXP
0x17b SWAP1
0x17c DIV
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 AND
0x1a9 CALLER
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 EQ
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 PUSH2 0x1cb
0x1c6 JUMPI
---
0x16f: JUMPDEST 
0x170: V80 = 0x1
0x172: V81 = 0x0
0x175: V82 = S[0x1]
0x177: V83 = 0x100
0x17a: V84 = EXP 0x100 0x0
0x17c: V85 = DIV V82 0x1
0x17d: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x193: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1a9: V90 = CALLER
0x1aa: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1c0: V93 = EQ V92 V89
0x1c1: V94 = ISZERO V93
0x1c2: V95 = ISZERO V94
0x1c3: V96 = 0x1cb
0x1c6: JUMPI 0x1cb V95
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x1c7
[0x1c7:0x1ca]
---
Predecessors: [0x16f]
Successors: []
---
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca REVERT
---
0x1c7: V97 = 0x0
0x1ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x1cb
[0x1cb:0x30d]
---
Predecessors: [0x16f]
Successors: [0x7c]
---
0x1cb JUMPDEST
0x1cc PUSH1 0x1
0x1ce PUSH1 0x0
0x1d0 SWAP1
0x1d1 SLOAD
0x1d2 SWAP1
0x1d3 PUSH2 0x100
0x1d6 EXP
0x1d7 SWAP1
0x1d8 DIV
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 PUSH1 0x0
0x207 DUP1
0x208 SWAP1
0x209 SLOAD
0x20a SWAP1
0x20b PUSH2 0x100
0x20e EXP
0x20f SWAP1
0x210 DIV
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23c AND
0x23d PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x25e PUSH1 0x40
0x260 MLOAD
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 SWAP2
0x266 SUB
0x267 SWAP1
0x268 LOG3
0x269 PUSH1 0x1
0x26b PUSH1 0x0
0x26d SWAP1
0x26e SLOAD
0x26f SWAP1
0x270 PUSH2 0x100
0x273 EXP
0x274 SWAP1
0x275 DIV
0x276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28b AND
0x28c PUSH1 0x0
0x28e DUP1
0x28f PUSH2 0x100
0x292 EXP
0x293 DUP2
0x294 SLOAD
0x295 DUP2
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab MUL
0x2ac NOT
0x2ad AND
0x2ae SWAP1
0x2af DUP4
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 MUL
0x2c7 OR
0x2c8 SWAP1
0x2c9 SSTORE
0x2ca POP
0x2cb PUSH1 0x0
0x2cd PUSH1 0x1
0x2cf PUSH1 0x0
0x2d1 PUSH2 0x100
0x2d4 EXP
0x2d5 DUP2
0x2d6 SLOAD
0x2d7 DUP2
0x2d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ed MUL
0x2ee NOT
0x2ef AND
0x2f0 SWAP1
0x2f1 DUP4
0x2f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x307 AND
0x308 MUL
0x309 OR
0x30a SWAP1
0x30b SSTORE
0x30c POP
0x30d JUMP
---
0x1cb: JUMPDEST 
0x1cc: V98 = 0x1
0x1ce: V99 = 0x0
0x1d1: V100 = S[0x1]
0x1d3: V101 = 0x100
0x1d6: V102 = EXP 0x100 0x0
0x1d8: V103 = DIV V100 0x1
0x1d9: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1ef: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x205: V108 = 0x0
0x209: V109 = S[0x0]
0x20b: V110 = 0x100
0x20e: V111 = EXP 0x100 0x0
0x210: V112 = DIV V109 0x1
0x211: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x227: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x23c: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x23d: V117 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x25e: V118 = 0x40
0x260: V119 = M[0x40]
0x261: V120 = 0x40
0x263: V121 = M[0x40]
0x266: V122 = SUB V119 V121
0x268: LOG V121 V122 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V116 V107
0x269: V123 = 0x1
0x26b: V124 = 0x0
0x26e: V125 = S[0x1]
0x270: V126 = 0x100
0x273: V127 = EXP 0x100 0x0
0x275: V128 = DIV V125 0x1
0x276: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x28c: V131 = 0x0
0x28f: V132 = 0x100
0x292: V133 = EXP 0x100 0x0
0x294: V134 = S[0x0]
0x296: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V136 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2ac: V137 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V138 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V134
0x2b0: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x2c6: V141 = MUL V140 0x1
0x2c7: V142 = OR V141 V138
0x2c9: S[0x0] = V142
0x2cb: V143 = 0x0
0x2cd: V144 = 0x1
0x2cf: V145 = 0x0
0x2d1: V146 = 0x100
0x2d4: V147 = EXP 0x100 0x0
0x2d6: V148 = S[0x1]
0x2d8: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V150 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2ee: V151 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2ef: V152 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V148
0x2f2: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x307: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x308: V155 = MUL 0x0 0x1
0x309: V156 = OR 0x0 V152
0x30b: S[0x1] = V156
0x30d: JUMP 0x7c
---
Entry stack: [V11, 0x7c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x30e
[0x30e:0x332]
---
Predecessors: [0x8a]
Successors: [0x93]
---
0x30e JUMPDEST
0x30f PUSH1 0x0
0x311 DUP1
0x312 SWAP1
0x313 SLOAD
0x314 SWAP1
0x315 PUSH2 0x100
0x318 EXP
0x319 SWAP1
0x31a DIV
0x31b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x330 AND
0x331 DUP2
0x332 JUMP
---
0x30e: JUMPDEST 
0x30f: V157 = 0x0
0x313: V158 = S[0x0]
0x315: V159 = 0x100
0x318: V160 = EXP 0x100 0x0
0x31a: V161 = DIV V158 0x1
0x31b: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x330: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x332: JUMP 0x93
---
Entry stack: [V11, 0x93]
Stack pops: 1
Stack additions: [S0, V163]
Exit stack: [V11, 0x93, V163]

================================

Block 0x333
[0x333:0x358]
---
Predecessors: [0xe1]
Successors: [0xea]
---
0x333 JUMPDEST
0x334 PUSH1 0x1
0x336 PUSH1 0x0
0x338 SWAP1
0x339 SLOAD
0x33a SWAP1
0x33b PUSH2 0x100
0x33e EXP
0x33f SWAP1
0x340 DIV
0x341 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x356 AND
0x357 DUP2
0x358 JUMP
---
0x333: JUMPDEST 
0x334: V164 = 0x1
0x336: V165 = 0x0
0x339: V166 = S[0x1]
0x33b: V167 = 0x100
0x33e: V168 = EXP 0x100 0x0
0x340: V169 = DIV V166 0x1
0x341: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x356: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x358: JUMP 0xea
---
Entry stack: [V11, 0xea]
Stack pops: 1
Stack additions: [S0, V171]
Exit stack: [V11, 0xea, V171]

================================

Block 0x359
[0x359:0x3af]
---
Predecessors: [0x138]
Successors: [0x3b0, 0x3b4]
---
0x359 JUMPDEST
0x35a PUSH1 0x0
0x35c DUP1
0x35d SWAP1
0x35e SLOAD
0x35f SWAP1
0x360 PUSH2 0x100
0x363 EXP
0x364 SWAP1
0x365 DIV
0x366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37b AND
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 CALLER
0x393 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a8 AND
0x3a9 EQ
0x3aa ISZERO
0x3ab ISZERO
0x3ac PUSH2 0x3b4
0x3af JUMPI
---
0x359: JUMPDEST 
0x35a: V172 = 0x0
0x35e: V173 = S[0x0]
0x360: V174 = 0x100
0x363: V175 = EXP 0x100 0x0
0x365: V176 = DIV V173 0x1
0x366: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x37c: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x392: V181 = CALLER
0x393: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a8: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x3a9: V184 = EQ V183 V180
0x3aa: V185 = ISZERO V184
0x3ab: V186 = ISZERO V185
0x3ac: V187 = 0x3b4
0x3af: JUMPI 0x3b4 V186
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x3b0
[0x3b0:0x3b3]
---
Predecessors: [0x359]
Successors: []
---
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 REVERT
---
0x3b0: V188 = 0x0
0x3b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x3b4
[0x3b4:0x3f7]
---
Predecessors: [0x359, 0x465]
Successors: [0x16d]
---
0x3b4 JUMPDEST
0x3b5 DUP1
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0x0
0x3ba PUSH2 0x100
0x3bd EXP
0x3be DUP2
0x3bf SLOAD
0x3c0 DUP2
0x3c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d6 MUL
0x3d7 NOT
0x3d8 AND
0x3d9 SWAP1
0x3da DUP4
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 AND
0x3f1 MUL
0x3f2 OR
0x3f3 SWAP1
0x3f4 SSTORE
0x3f5 POP
0x3f6 POP
0x3f7 JUMP
---
0x3b4: JUMPDEST 
0x3b6: V189 = 0x1
0x3b8: V190 = 0x0
0x3ba: V191 = 0x100
0x3bd: V192 = EXP 0x100 0x0
0x3bf: V193 = S[0x1]
0x3c1: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V195 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3d7: V196 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V197 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V193
0x3db: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3f1: V200 = MUL V199 0x1
0x3f2: V201 = OR V200 V197
0x3f4: S[0x1] = V201
0x3f7: JUMP 0x16d
---
Entry stack: [V11, 0x16d, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f8
[0x3f8:0x430]
---
Predecessors: []
Successors: [0x431]
---
0x3f8 STOP
0x3f9 LOG1
0x3fa PUSH6 0x627a7a723058
0x401 SHA3
0x402 MISSING 0x4a
0x403 MISSING 0xfb
0x404 CREATE2
0x405 BALANCE
0x406 PUSH32 0xfe70c88b6690d091e12f5acc110e1eefbe224143a8a8debf6b4a750029608060
0x427 BLOCKHASH
0x428 MSTORE
0x429 PUSH1 0x4
0x42b CALLDATASIZE
0x42c LT
0x42d PUSH2 0xc5
0x430 JUMPI
---
0x3f8: STOP 
0x3f9: LOG S0 S1 S2
0x3fa: V202 = 0x627a7a723058
0x401: V203 = SHA3 0x627a7a723058 S3
0x402: MISSING 0x4a
0x403: MISSING 0xfb
0x404: V204 = CREATE2 S0 S1 S2 S3
0x405: V205 = BALANCE V204
0x406: V206 = 0xfe70c88b6690d091e12f5acc110e1eefbe224143a8a8debf6b4a750029608060
0x427: V207 = BLOCKHASH 0xfe70c88b6690d091e12f5acc110e1eefbe224143a8a8debf6b4a750029608060
0x428: M[V207] = V205
0x429: V208 = 0x4
0x42b: V209 = CALLDATASIZE
0x42c: V210 = LT V209 0x4
0x42d: V211 = 0xc5
0x430: THROWI V210
---
Entry stack: []
Stack pops: 0
Stack additions: [V203]
Exit stack: []

================================

Block 0x431
[0x431:0x464]
---
Predecessors: [0x3f8]
Successors: [0x465]
---
0x431 PUSH1 0x0
0x433 CALLDATALOAD
0x434 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x452 SWAP1
0x453 DIV
0x454 PUSH4 0xffffffff
0x459 AND
0x45a DUP1
0x45b PUSH4 0x430bf08a
0x460 EQ
0x461 PUSH2 0x35d
0x464 JUMPI
---
0x431: V212 = 0x0
0x433: V213 = CALLDATALOAD 0x0
0x434: V214 = 0x100000000000000000000000000000000000000000000000000000000
0x453: V215 = DIV V213 0x100000000000000000000000000000000000000000000000000000000
0x454: V216 = 0xffffffff
0x459: V217 = AND 0xffffffff V215
0x45b: V218 = 0x430bf08a
0x460: V219 = EQ 0x430bf08a V217
0x461: V220 = 0x35d
0x464: THROWI V219
---
Entry stack: []
Stack pops: 0
Stack additions: [V217]
Exit stack: [V217]

================================

Block 0x465
[0x465:0x46f]
---
Predecessors: [0x431]
Successors: [0x3b4, 0x470]
---
0x465 DUP1
0x466 PUSH4 0x55a373d6
0x46b EQ
0x46c PUSH2 0x3b4
0x46f JUMPI
---
0x466: V221 = 0x55a373d6
0x46b: V222 = EQ 0x55a373d6 V217
0x46c: V223 = 0x3b4
0x46f: JUMPI 0x3b4 V222
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x470
[0x470:0x47a]
---
Predecessors: [0x465]
Successors: [0x47b]
---
0x470 DUP1
0x471 PUSH4 0x676c0d77
0x476 EQ
0x477 PUSH2 0x40b
0x47a JUMPI
---
0x471: V224 = 0x676c0d77
0x476: V225 = EQ 0x676c0d77 V217
0x477: V226 = 0x40b
0x47a: THROWI V225
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x47b
[0x47b:0x485]
---
Predecessors: [0x470]
Successors: [0x486]
---
0x47b DUP1
0x47c PUSH4 0x79ba5097
0x481 EQ
0x482 PUSH2 0x438
0x485 JUMPI
---
0x47c: V227 = 0x79ba5097
0x481: V228 = EQ 0x79ba5097 V217
0x482: V229 = 0x438
0x485: THROWI V228
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x486
[0x486:0x490]
---
Predecessors: [0x47b]
Successors: [0x491]
---
0x486 DUP1
0x487 PUSH4 0x7ff9b596
0x48c EQ
0x48d PUSH2 0x44f
0x490 JUMPI
---
0x487: V230 = 0x7ff9b596
0x48c: V231 = EQ 0x7ff9b596 V217
0x48d: V232 = 0x44f
0x490: THROWI V231
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x491
[0x491:0x49b]
---
Predecessors: [0x486]
Successors: [0x49c]
---
0x491 DUP1
0x492 PUSH4 0x85535cc5
0x497 EQ
0x498 PUSH2 0x47a
0x49b JUMPI
---
0x492: V233 = 0x85535cc5
0x497: V234 = EQ 0x85535cc5 V217
0x498: V235 = 0x47a
0x49b: THROWI V234
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x49c
[0x49c:0x4a6]
---
Predecessors: [0x491]
Successors: [0x4a7]
---
0x49c DUP1
0x49d PUSH4 0x8da5cb5b
0x4a2 EQ
0x4a3 PUSH2 0x4bd
0x4a6 JUMPI
---
0x49d: V236 = 0x8da5cb5b
0x4a2: V237 = EQ 0x8da5cb5b V217
0x4a3: V238 = 0x4bd
0x4a6: THROWI V237
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x4a7
[0x4a7:0x4b1]
---
Predecessors: [0x49c]
Successors: [0x4b2]
---
0x4a7 DUP1
0x4a8 PUSH4 0xc2b4ddde
0x4ad EQ
0x4ae PUSH2 0x514
0x4b1 JUMPI
---
0x4a8: V239 = 0xc2b4ddde
0x4ad: V240 = EQ 0xc2b4ddde V217
0x4ae: V241 = 0x514
0x4b1: THROWI V240
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x4b2
[0x4b2:0x4bc]
---
Predecessors: [0x4a7]
Successors: [0x4bd]
---
0x4b2 DUP1
0x4b3 PUSH4 0xd4ee1d90
0x4b8 EQ
0x4b9 PUSH2 0x543
0x4bc JUMPI
---
0x4b3: V242 = 0xd4ee1d90
0x4b8: V243 = EQ 0xd4ee1d90 V217
0x4b9: V244 = 0x543
0x4bc: THROWI V243
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x4bd
[0x4bd:0x4c7]
---
Predecessors: [0x4b2]
Successors: [0x4c8, 0x59a]
---
0x4bd DUP1
0x4be PUSH4 0xdf8de3e7
0x4c3 EQ
0x4c4 PUSH2 0x59a
0x4c7 JUMPI
---
0x4be: V245 = 0xdf8de3e7
0x4c3: V246 = EQ 0xdf8de3e7 V217
0x4c4: V247 = 0x59a
0x4c7: JUMPI 0x59a V246
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x4c8
[0x4c8:0x4d2]
---
Predecessors: [0x4bd]
Successors: [0x4d3]
---
0x4c8 DUP1
0x4c9 PUSH4 0xe10e95c9
0x4ce EQ
0x4cf PUSH2 0x5dd
0x4d2 JUMPI
---
0x4c9: V248 = 0xe10e95c9
0x4ce: V249 = EQ 0xe10e95c9 V217
0x4cf: V250 = 0x5dd
0x4d2: THROWI V249
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x4d3
[0x4d3:0x4dd]
---
Predecessors: [0x4c8]
Successors: [0x4de]
---
0x4d3 DUP1
0x4d4 PUSH4 0xe29eb836
0x4d9 EQ
0x4da PUSH2 0x60c
0x4dd JUMPI
---
0x4d4: V251 = 0xe29eb836
0x4d9: V252 = EQ 0xe29eb836 V217
0x4da: V253 = 0x60c
0x4dd: THROWI V252
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x4de
[0x4de:0x4e8]
---
Predecessors: [0x4d3]
Successors: [0x4e9]
---
0x4de DUP1
0x4df PUSH4 0xf2fde38b
0x4e4 EQ
0x4e5 PUSH2 0x637
0x4e8 JUMPI
---
0x4df: V254 = 0xf2fde38b
0x4e4: V255 = EQ 0xf2fde38b V217
0x4e5: V256 = 0x637
0x4e8: THROWI V255
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217]

================================

Block 0x4e9
[0x4e9:0x501]
---
Predecessors: [0x4de]
Successors: [0x502]
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x0
0x4ec PUSH1 0x3
0x4ee PUSH1 0x14
0x4f0 SWAP1
0x4f1 SLOAD
0x4f2 SWAP1
0x4f3 PUSH2 0x100
0x4f6 EXP
0x4f7 SWAP1
0x4f8 DIV
0x4f9 PUSH1 0xff
0x4fb AND
0x4fc DUP1
0x4fd ISZERO
0x4fe PUSH2 0xe5
0x501 JUMPI
---
0x4e9: JUMPDEST 
0x4ea: V257 = 0x0
0x4ec: V258 = 0x3
0x4ee: V259 = 0x14
0x4f1: V260 = S[0x3]
0x4f3: V261 = 0x100
0x4f6: V262 = EXP 0x100 0x14
0x4f8: V263 = DIV V260 0x10000000000000000000000000000000000000000
0x4f9: V264 = 0xff
0x4fb: V265 = AND 0xff V263
0x4fd: V266 = ISZERO V265
0x4fe: V267 = 0xe5
0x501: THROWI V266
---
Entry stack: [V217]
Stack pops: 0
Stack additions: [0x0, V265]
Exit stack: [V217, 0x0, V265]

================================

Block 0x502
[0x502:0x508]
---
Predecessors: [0x4e9]
Successors: [0x509]
---
0x502 POP
0x503 PUSH1 0x0
0x505 PUSH1 0x5
0x507 SLOAD
0x508 GT
---
0x503: V268 = 0x0
0x505: V269 = 0x5
0x507: V270 = S[0x5]
0x508: V271 = GT V270 0x0
---
Entry stack: [V217, 0x0, V265]
Stack pops: 1
Stack additions: [V271]
Exit stack: [V217, 0x0, V271]

================================

Block 0x509
[0x509:0x50f]
---
Predecessors: [0x502]
Successors: [0x510]
---
0x509 JUMPDEST
0x50a DUP1
0x50b ISZERO
0x50c PUSH2 0xf3
0x50f JUMPI
---
0x509: JUMPDEST 
0x50b: V272 = ISZERO V271
0x50c: V273 = 0xf3
0x50f: THROWI V272
---
Entry stack: [V217, 0x0, V271]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V217, 0x0, V271]

================================

Block 0x510
[0x510:0x516]
---
Predecessors: [0x509]
Successors: [0x517]
---
0x510 POP
0x511 PUSH1 0x5
0x513 SLOAD
0x514 CALLVALUE
0x515 LT
0x516 ISZERO
---
0x511: V274 = 0x5
0x513: V275 = S[0x5]
0x514: V276 = CALLVALUE
0x515: V277 = LT V276 V275
0x516: V278 = ISZERO V277
---
Entry stack: [V217, 0x0, V271]
Stack pops: 1
Stack additions: [V278]
Exit stack: [V217, 0x0, V278]

================================

Block 0x517
[0x517:0x51d]
---
Predecessors: [0x510]
Successors: [0x51e]
---
0x517 JUMPDEST
0x518 ISZERO
0x519 ISZERO
0x51a PUSH2 0xfe
0x51d JUMPI
---
0x517: JUMPDEST 
0x518: V279 = ISZERO V278
0x519: V280 = ISZERO V279
0x51a: V281 = 0xfe
0x51d: THROWI V280
---
Entry stack: [V217, 0x0, V278]
Stack pops: 1
Stack additions: []
Exit stack: [V217, 0x0]

================================

Block 0x51e
[0x51e:0x590]
---
Predecessors: [0x517]
Successors: [0x591]
---
0x51e PUSH1 0x0
0x520 DUP1
0x521 REVERT
0x522 JUMPDEST
0x523 CALLVALUE
0x524 PUSH1 0x4
0x526 PUSH1 0x0
0x528 DUP3
0x529 DUP3
0x52a SLOAD
0x52b ADD
0x52c SWAP3
0x52d POP
0x52e POP
0x52f DUP2
0x530 SWAP1
0x531 SSTORE
0x532 POP
0x533 PUSH1 0x3
0x535 PUSH1 0x0
0x537 SWAP1
0x538 SLOAD
0x539 SWAP1
0x53a PUSH2 0x100
0x53d EXP
0x53e SWAP1
0x53f DIV
0x540 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x555 AND
0x556 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56b AND
0x56c PUSH2 0x8fc
0x56f CALLVALUE
0x570 SWAP1
0x571 DUP2
0x572 ISZERO
0x573 MUL
0x574 SWAP1
0x575 PUSH1 0x40
0x577 MLOAD
0x578 PUSH1 0x0
0x57a PUSH1 0x40
0x57c MLOAD
0x57d DUP1
0x57e DUP4
0x57f SUB
0x580 DUP2
0x581 DUP6
0x582 DUP9
0x583 DUP9
0x584 CALL
0x585 SWAP4
0x586 POP
0x587 POP
0x588 POP
0x589 POP
0x58a ISZERO
0x58b DUP1
0x58c ISZERO
0x58d PUSH2 0x176
0x590 JUMPI
---
0x51e: V282 = 0x0
0x521: REVERT 0x0 0x0
0x522: JUMPDEST 
0x523: V283 = CALLVALUE
0x524: V284 = 0x4
0x526: V285 = 0x0
0x52a: V286 = S[0x4]
0x52b: V287 = ADD V286 V283
0x531: S[0x4] = V287
0x533: V288 = 0x3
0x535: V289 = 0x0
0x538: V290 = S[0x3]
0x53a: V291 = 0x100
0x53d: V292 = EXP 0x100 0x0
0x53f: V293 = DIV V290 0x1
0x540: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x555: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x556: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x56b: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x56c: V298 = 0x8fc
0x56f: V299 = CALLVALUE
0x572: V300 = ISZERO V299
0x573: V301 = MUL V300 0x8fc
0x575: V302 = 0x40
0x577: V303 = M[0x40]
0x578: V304 = 0x0
0x57a: V305 = 0x40
0x57c: V306 = M[0x40]
0x57f: V307 = SUB V303 V306
0x584: V308 = CALL V301 V297 V299 V306 V307 V306 0x0
0x58a: V309 = ISZERO V308
0x58c: V310 = ISZERO V309
0x58d: V311 = 0x176
0x590: THROWI V310
---
Entry stack: [V217, 0x0]
Stack pops: 0
Stack additions: [V309]
Exit stack: []

================================

Block 0x591
[0x591:0x599]
---
Predecessors: [0x51e]
Successors: []
---
0x591 RETURNDATASIZE
0x592 PUSH1 0x0
0x594 DUP1
0x595 RETURNDATACOPY
0x596 RETURNDATASIZE
0x597 PUSH1 0x0
0x599 REVERT
---
0x591: V312 = RETURNDATASIZE
0x592: V313 = 0x0
0x595: RETURNDATACOPY 0x0 0x0 V312
0x596: V314 = RETURNDATASIZE
0x597: V315 = 0x0
0x599: REVERT 0x0 V314
---
Entry stack: [V309]
Stack pops: 0
Stack additions: []
Exit stack: [V309]

================================

Block 0x59a
[0x59a:0x61f]
---
Predecessors: [0x4bd]
Successors: [0x620]
---
0x59a JUMPDEST
0x59b POP
0x59c PUSH1 0x5
0x59e SLOAD
0x59f PUSH1 0x2
0x5a1 PUSH1 0x0
0x5a3 SWAP1
0x5a4 SLOAD
0x5a5 SWAP1
0x5a6 PUSH2 0x100
0x5a9 EXP
0x5aa SWAP1
0x5ab DIV
0x5ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c1 AND
0x5c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d7 AND
0x5d8 PUSH4 0x313ce567
0x5dd PUSH1 0x40
0x5df MLOAD
0x5e0 DUP2
0x5e1 PUSH4 0xffffffff
0x5e6 AND
0x5e7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x605 MUL
0x606 DUP2
0x607 MSTORE
0x608 PUSH1 0x4
0x60a ADD
0x60b PUSH1 0x20
0x60d PUSH1 0x40
0x60f MLOAD
0x610 DUP1
0x611 DUP4
0x612 SUB
0x613 DUP2
0x614 PUSH1 0x0
0x616 DUP8
0x617 DUP1
0x618 EXTCODESIZE
0x619 ISZERO
0x61a DUP1
0x61b ISZERO
0x61c PUSH2 0x200
0x61f JUMPI
---
0x59a: JUMPDEST 
0x59c: V316 = 0x5
0x59e: V317 = S[0x5]
0x59f: V318 = 0x2
0x5a1: V319 = 0x0
0x5a4: V320 = S[0x2]
0x5a6: V321 = 0x100
0x5a9: V322 = EXP 0x100 0x0
0x5ab: V323 = DIV V320 0x1
0x5ac: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c1: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x5c2: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x5d8: V328 = 0x313ce567
0x5dd: V329 = 0x40
0x5df: V330 = M[0x40]
0x5e1: V331 = 0xffffffff
0x5e6: V332 = AND 0xffffffff 0x313ce567
0x5e7: V333 = 0x100000000000000000000000000000000000000000000000000000000
0x605: V334 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x313ce567
0x607: M[V330] = 0x313ce56700000000000000000000000000000000000000000000000000000000
0x608: V335 = 0x4
0x60a: V336 = ADD 0x4 V330
0x60b: V337 = 0x20
0x60d: V338 = 0x40
0x60f: V339 = M[0x40]
0x612: V340 = SUB V336 V339
0x614: V341 = 0x0
0x618: V342 = EXTCODESIZE V327
0x619: V343 = ISZERO V342
0x61b: V344 = ISZERO V343
0x61c: V345 = 0x200
0x61f: THROWI V344
---
Entry stack: [V217]
Stack pops: 1
Stack additions: [V317, V327, 0x313ce567, V336, 0x20, V339, V340, V339, 0x0, V327, V343]
Exit stack: [V317, V327, 0x313ce567, V336, 0x20, V339, V340, V339, 0x0, V327, V343]

================================

Block 0x620
[0x620:0x62e]
---
Predecessors: [0x59a]
Successors: [0x62f]
---
0x620 PUSH1 0x0
0x622 DUP1
0x623 REVERT
0x624 JUMPDEST
0x625 POP
0x626 GAS
0x627 CALL
0x628 ISZERO
0x629 DUP1
0x62a ISZERO
0x62b PUSH2 0x214
0x62e JUMPI
---
0x620: V346 = 0x0
0x623: REVERT 0x0 0x0
0x624: JUMPDEST 
0x626: V347 = GAS
0x627: V348 = CALL V347 S1 S2 S3 S4 S5 S6
0x628: V349 = ISZERO V348
0x62a: V350 = ISZERO V349
0x62b: V351 = 0x214
0x62e: THROWI V350
---
Entry stack: [V317, V327, 0x313ce567, V336, 0x20, V339, V340, V339, 0x0, V327, V343]
Stack pops: 0
Stack additions: [V349]
Exit stack: []

================================

Block 0x62f
[0x62f:0x649]
---
Predecessors: [0x620]
Successors: [0x64a]
---
0x62f RETURNDATASIZE
0x630 PUSH1 0x0
0x632 DUP1
0x633 RETURNDATACOPY
0x634 RETURNDATASIZE
0x635 PUSH1 0x0
0x637 REVERT
0x638 JUMPDEST
0x639 POP
0x63a POP
0x63b POP
0x63c POP
0x63d PUSH1 0x40
0x63f MLOAD
0x640 RETURNDATASIZE
0x641 PUSH1 0x20
0x643 DUP2
0x644 LT
0x645 ISZERO
0x646 PUSH2 0x22a
0x649 JUMPI
---
0x62f: V352 = RETURNDATASIZE
0x630: V353 = 0x0
0x633: RETURNDATACOPY 0x0 0x0 V352
0x634: V354 = RETURNDATASIZE
0x635: V355 = 0x0
0x637: REVERT 0x0 V354
0x638: JUMPDEST 
0x63d: V356 = 0x40
0x63f: V357 = M[0x40]
0x640: V358 = RETURNDATASIZE
0x641: V359 = 0x20
0x644: V360 = LT V358 0x20
0x645: V361 = ISZERO V360
0x646: V362 = 0x22a
0x649: THROWI V361
---
Entry stack: [V349]
Stack pops: 0
Stack additions: [V358, V357]
Exit stack: []

================================

Block 0x64a
[0x64a:0x66e]
---
Predecessors: [0x62f]
Successors: [0x66f]
---
0x64a PUSH1 0x0
0x64c DUP1
0x64d REVERT
0x64e JUMPDEST
0x64f DUP2
0x650 ADD
0x651 SWAP1
0x652 DUP1
0x653 DUP1
0x654 MLOAD
0x655 SWAP1
0x656 PUSH1 0x20
0x658 ADD
0x659 SWAP1
0x65a SWAP3
0x65b SWAP2
0x65c SWAP1
0x65d POP
0x65e POP
0x65f POP
0x660 PUSH1 0xff
0x662 AND
0x663 PUSH1 0xa
0x665 EXP
0x666 CALLVALUE
0x667 MUL
0x668 DUP2
0x669 ISZERO
0x66a ISZERO
0x66b PUSH2 0x24c
0x66e JUMPI
---
0x64a: V363 = 0x0
0x64d: REVERT 0x0 0x0
0x64e: JUMPDEST 
0x650: V364 = ADD S1 S0
0x654: V365 = M[S1]
0x656: V366 = 0x20
0x658: V367 = ADD 0x20 S1
0x660: V368 = 0xff
0x662: V369 = AND 0xff V365
0x663: V370 = 0xa
0x665: V371 = EXP 0xa V369
0x666: V372 = CALLVALUE
0x667: V373 = MUL V372 V371
0x669: V374 = ISZERO S2
0x66a: V375 = ISZERO V374
0x66b: V376 = 0x24c
0x66e: THROWI V375
---
Entry stack: [V357, V358]
Stack pops: 0
Stack additions: [V373, S2]
Exit stack: []

================================

Block 0x66f
[0x66f:0x733]
---
Predecessors: [0x64a]
Successors: [0x734]
---
0x66f INVALID
0x670 JUMPDEST
0x671 DIV
0x672 SWAP1
0x673 POP
0x674 PUSH1 0x2
0x676 PUSH1 0x0
0x678 SWAP1
0x679 SLOAD
0x67a SWAP1
0x67b PUSH2 0x100
0x67e EXP
0x67f SWAP1
0x680 DIV
0x681 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x696 AND
0x697 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ac AND
0x6ad PUSH4 0xa9059cbb
0x6b2 CALLER
0x6b3 DUP4
0x6b4 PUSH1 0x40
0x6b6 MLOAD
0x6b7 DUP4
0x6b8 PUSH4 0xffffffff
0x6bd AND
0x6be PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6dc MUL
0x6dd DUP2
0x6de MSTORE
0x6df PUSH1 0x4
0x6e1 ADD
0x6e2 DUP1
0x6e3 DUP4
0x6e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f9 AND
0x6fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70f AND
0x710 DUP2
0x711 MSTORE
0x712 PUSH1 0x20
0x714 ADD
0x715 DUP3
0x716 DUP2
0x717 MSTORE
0x718 PUSH1 0x20
0x71a ADD
0x71b SWAP3
0x71c POP
0x71d POP
0x71e POP
0x71f PUSH1 0x20
0x721 PUSH1 0x40
0x723 MLOAD
0x724 DUP1
0x725 DUP4
0x726 SUB
0x727 DUP2
0x728 PUSH1 0x0
0x72a DUP8
0x72b DUP1
0x72c EXTCODESIZE
0x72d ISZERO
0x72e DUP1
0x72f ISZERO
0x730 PUSH2 0x314
0x733 JUMPI
---
0x66f: INVALID 
0x670: JUMPDEST 
0x671: V377 = DIV S0 S1
0x674: V378 = 0x2
0x676: V379 = 0x0
0x679: V380 = S[0x2]
0x67b: V381 = 0x100
0x67e: V382 = EXP 0x100 0x0
0x680: V383 = DIV V380 0x1
0x681: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x696: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x697: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x6ad: V388 = 0xa9059cbb
0x6b2: V389 = CALLER
0x6b4: V390 = 0x40
0x6b6: V391 = M[0x40]
0x6b8: V392 = 0xffffffff
0x6bd: V393 = AND 0xffffffff 0xa9059cbb
0x6be: V394 = 0x100000000000000000000000000000000000000000000000000000000
0x6dc: V395 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6de: M[V391] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6df: V396 = 0x4
0x6e1: V397 = ADD 0x4 V391
0x6e4: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f9: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x6fa: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x70f: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x711: M[V397] = V401
0x712: V402 = 0x20
0x714: V403 = ADD 0x20 V397
0x717: M[V403] = V377
0x718: V404 = 0x20
0x71a: V405 = ADD 0x20 V403
0x71f: V406 = 0x20
0x721: V407 = 0x40
0x723: V408 = M[0x40]
0x726: V409 = SUB V405 V408
0x728: V410 = 0x0
0x72c: V411 = EXTCODESIZE V387
0x72d: V412 = ISZERO V411
0x72f: V413 = ISZERO V412
0x730: V414 = 0x314
0x733: THROWI V413
---
Entry stack: [S1, V373]
Stack pops: 0
Stack additions: [V412, V387, 0x0, V408, V409, V408, 0x20, V405, 0xa9059cbb, V387, V377]
Exit stack: []

================================

Block 0x734
[0x734:0x742]
---
Predecessors: [0x66f]
Successors: [0x743]
---
0x734 PUSH1 0x0
0x736 DUP1
0x737 REVERT
0x738 JUMPDEST
0x739 POP
0x73a GAS
0x73b CALL
0x73c ISZERO
0x73d DUP1
0x73e ISZERO
0x73f PUSH2 0x328
0x742 JUMPI
---
0x734: V415 = 0x0
0x737: REVERT 0x0 0x0
0x738: JUMPDEST 
0x73a: V416 = GAS
0x73b: V417 = CALL V416 S1 S2 S3 S4 S5 S6
0x73c: V418 = ISZERO V417
0x73e: V419 = ISZERO V418
0x73f: V420 = 0x328
0x742: THROWI V419
---
Entry stack: [V377, V387, 0xa9059cbb, V405, 0x20, V408, V409, V408, 0x0, V387, V412]
Stack pops: 0
Stack additions: [V418]
Exit stack: []

================================

Block 0x743
[0x743:0x75d]
---
Predecessors: [0x734]
Successors: [0x75e]
---
0x743 RETURNDATASIZE
0x744 PUSH1 0x0
0x746 DUP1
0x747 RETURNDATACOPY
0x748 RETURNDATASIZE
0x749 PUSH1 0x0
0x74b REVERT
0x74c JUMPDEST
0x74d POP
0x74e POP
0x74f POP
0x750 POP
0x751 PUSH1 0x40
0x753 MLOAD
0x754 RETURNDATASIZE
0x755 PUSH1 0x20
0x757 DUP2
0x758 LT
0x759 ISZERO
0x75a PUSH2 0x33e
0x75d JUMPI
---
0x743: V421 = RETURNDATASIZE
0x744: V422 = 0x0
0x747: RETURNDATACOPY 0x0 0x0 V421
0x748: V423 = RETURNDATASIZE
0x749: V424 = 0x0
0x74b: REVERT 0x0 V423
0x74c: JUMPDEST 
0x751: V425 = 0x40
0x753: V426 = M[0x40]
0x754: V427 = RETURNDATASIZE
0x755: V428 = 0x20
0x758: V429 = LT V427 0x20
0x759: V430 = ISZERO V429
0x75a: V431 = 0x33e
0x75d: THROWI V430
---
Entry stack: [V418]
Stack pops: 0
Stack additions: [V427, V426]
Exit stack: []

================================

Block 0x75e
[0x75e:0x779]
---
Predecessors: [0x743]
Successors: [0x77a]
---
0x75e PUSH1 0x0
0x760 DUP1
0x761 REVERT
0x762 JUMPDEST
0x763 DUP2
0x764 ADD
0x765 SWAP1
0x766 DUP1
0x767 DUP1
0x768 MLOAD
0x769 SWAP1
0x76a PUSH1 0x20
0x76c ADD
0x76d SWAP1
0x76e SWAP3
0x76f SWAP2
0x770 SWAP1
0x771 POP
0x772 POP
0x773 POP
0x774 ISZERO
0x775 ISZERO
0x776 PUSH2 0x35a
0x779 JUMPI
---
0x75e: V432 = 0x0
0x761: REVERT 0x0 0x0
0x762: JUMPDEST 
0x764: V433 = ADD S1 S0
0x768: V434 = M[S1]
0x76a: V435 = 0x20
0x76c: V436 = ADD 0x20 S1
0x774: V437 = ISZERO V434
0x775: V438 = ISZERO V437
0x776: V439 = 0x35a
0x779: THROWI V438
---
Entry stack: [V426, V427]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x77a
[0x77a:0x788]
---
Predecessors: [0x75e]
Successors: [0x789]
---
0x77a PUSH1 0x0
0x77c DUP1
0x77d REVERT
0x77e JUMPDEST
0x77f POP
0x780 STOP
0x781 JUMPDEST
0x782 CALLVALUE
0x783 DUP1
0x784 ISZERO
0x785 PUSH2 0x369
0x788 JUMPI
---
0x77a: V440 = 0x0
0x77d: REVERT 0x0 0x0
0x77e: JUMPDEST 
0x780: STOP 
0x781: JUMPDEST 
0x782: V441 = CALLVALUE
0x784: V442 = ISZERO V441
0x785: V443 = 0x369
0x788: THROWI V442
---
Entry stack: []
Stack pops: 0
Stack additions: [V441]
Exit stack: []

================================

Block 0x789
[0x789:0x795]
---
Predecessors: [0x77a]
Successors: []
---
0x789 PUSH1 0x0
0x78b DUP1
0x78c REVERT
0x78d JUMPDEST
0x78e POP
0x78f PUSH2 0x372
0x792 PUSH2 0x67a
0x795 JUMP
---
0x789: V444 = 0x0
0x78c: REVERT 0x0 0x0
0x78d: JUMPDEST 
0x78f: V445 = 0x372
0x792: V446 = 0x67a
0x795: THROW 
---
Entry stack: [V441]
Stack pops: 0
Stack additions: [0x372]
Exit stack: []

================================

Block 0x796
[0x796:0x7df]
---
Predecessors: [0xb50]
Successors: [0x7e0]
---
0x796 JUMPDEST
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b DUP3
0x79c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b1 AND
0x7b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c7 AND
0x7c8 DUP2
0x7c9 MSTORE
0x7ca PUSH1 0x20
0x7cc ADD
0x7cd SWAP2
0x7ce POP
0x7cf POP
0x7d0 PUSH1 0x40
0x7d2 MLOAD
0x7d3 DUP1
0x7d4 SWAP2
0x7d5 SUB
0x7d6 SWAP1
0x7d7 RETURN
0x7d8 JUMPDEST
0x7d9 CALLVALUE
0x7da DUP1
0x7db ISZERO
0x7dc PUSH2 0x3c0
0x7df JUMPI
---
0x796: JUMPDEST 
0x797: V447 = 0x40
0x799: V448 = M[0x40]
0x79c: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b1: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7b2: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c7: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x7c9: M[V448] = V452
0x7ca: V453 = 0x20
0x7cc: V454 = ADD 0x20 V448
0x7d0: V455 = 0x40
0x7d2: V456 = M[0x40]
0x7d5: V457 = SUB V454 V456
0x7d7: RETURN V456 V457
0x7d8: JUMPDEST 
0x7d9: V458 = CALLVALUE
0x7db: V459 = ISZERO V458
0x7dc: V460 = 0x3c0
0x7df: THROWI V459
---
Entry stack: []
Stack pops: 2
Stack additions: [V458]
Exit stack: []

================================

Block 0x7e0
[0x7e0:0x836]
---
Predecessors: [0x796]
Successors: [0x837]
---
0x7e0 PUSH1 0x0
0x7e2 DUP1
0x7e3 REVERT
0x7e4 JUMPDEST
0x7e5 POP
0x7e6 PUSH2 0x3c9
0x7e9 PUSH2 0x6a0
0x7ec JUMP
0x7ed JUMPDEST
0x7ee PUSH1 0x40
0x7f0 MLOAD
0x7f1 DUP1
0x7f2 DUP3
0x7f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x808 AND
0x809 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81e AND
0x81f DUP2
0x820 MSTORE
0x821 PUSH1 0x20
0x823 ADD
0x824 SWAP2
0x825 POP
0x826 POP
0x827 PUSH1 0x40
0x829 MLOAD
0x82a DUP1
0x82b SWAP2
0x82c SUB
0x82d SWAP1
0x82e RETURN
0x82f JUMPDEST
0x830 CALLVALUE
0x831 DUP1
0x832 ISZERO
0x833 PUSH2 0x417
0x836 JUMPI
---
0x7e0: V461 = 0x0
0x7e3: REVERT 0x0 0x0
0x7e4: JUMPDEST 
0x7e6: V462 = 0x3c9
0x7e9: V463 = 0x6a0
0x7ec: THROW 
0x7ed: JUMPDEST 
0x7ee: V464 = 0x40
0x7f0: V465 = M[0x40]
0x7f3: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x808: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x809: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x81e: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x820: M[V465] = V469
0x821: V470 = 0x20
0x823: V471 = ADD 0x20 V465
0x827: V472 = 0x40
0x829: V473 = M[0x40]
0x82c: V474 = SUB V471 V473
0x82e: RETURN V473 V474
0x82f: JUMPDEST 
0x830: V475 = CALLVALUE
0x832: V476 = ISZERO V475
0x833: V477 = 0x417
0x836: THROWI V476
---
Entry stack: [V458]
Stack pops: 0
Stack additions: [0x3c9, V475]
Exit stack: []

================================

Block 0x837
[0x837:0x863]
---
Predecessors: [0x7e0]
Successors: [0x864]
---
0x837 PUSH1 0x0
0x839 DUP1
0x83a REVERT
0x83b JUMPDEST
0x83c POP
0x83d PUSH2 0x436
0x840 PUSH1 0x4
0x842 DUP1
0x843 CALLDATASIZE
0x844 SUB
0x845 DUP2
0x846 ADD
0x847 SWAP1
0x848 DUP1
0x849 DUP1
0x84a CALLDATALOAD
0x84b SWAP1
0x84c PUSH1 0x20
0x84e ADD
0x84f SWAP1
0x850 SWAP3
0x851 SWAP2
0x852 SWAP1
0x853 POP
0x854 POP
0x855 POP
0x856 PUSH2 0x6c6
0x859 JUMP
0x85a JUMPDEST
0x85b STOP
0x85c JUMPDEST
0x85d CALLVALUE
0x85e DUP1
0x85f ISZERO
0x860 PUSH2 0x444
0x863 JUMPI
---
0x837: V478 = 0x0
0x83a: REVERT 0x0 0x0
0x83b: JUMPDEST 
0x83d: V479 = 0x436
0x840: V480 = 0x4
0x843: V481 = CALLDATASIZE
0x844: V482 = SUB V481 0x4
0x846: V483 = ADD 0x4 V482
0x84a: V484 = CALLDATALOAD 0x4
0x84c: V485 = 0x20
0x84e: V486 = ADD 0x20 0x4
0x856: V487 = 0x6c6
0x859: THROW 
0x85a: JUMPDEST 
0x85b: STOP 
0x85c: JUMPDEST 
0x85d: V488 = CALLVALUE
0x85f: V489 = ISZERO V488
0x860: V490 = 0x444
0x863: THROWI V489
---
Entry stack: [V475]
Stack pops: 0
Stack additions: [V484, 0x436, V488]
Exit stack: []

================================

Block 0x864
[0x864:0x87a]
---
Predecessors: [0x837]
Successors: [0x87b]
---
0x864 PUSH1 0x0
0x866 DUP1
0x867 REVERT
0x868 JUMPDEST
0x869 POP
0x86a PUSH2 0x44d
0x86d PUSH2 0x73a
0x870 JUMP
0x871 JUMPDEST
0x872 STOP
0x873 JUMPDEST
0x874 CALLVALUE
0x875 DUP1
0x876 ISZERO
0x877 PUSH2 0x45b
0x87a JUMPI
---
0x864: V491 = 0x0
0x867: REVERT 0x0 0x0
0x868: JUMPDEST 
0x86a: V492 = 0x44d
0x86d: V493 = 0x73a
0x870: THROW 
0x871: JUMPDEST 
0x872: STOP 
0x873: JUMPDEST 
0x874: V494 = CALLVALUE
0x876: V495 = ISZERO V494
0x877: V496 = 0x45b
0x87a: THROWI V495
---
Entry stack: [V488]
Stack pops: 0
Stack additions: [0x44d, V494]
Exit stack: []

================================

Block 0x87b
[0x87b:0x8a5]
---
Predecessors: [0x864]
Successors: [0x8a6]
---
0x87b PUSH1 0x0
0x87d DUP1
0x87e REVERT
0x87f JUMPDEST
0x880 POP
0x881 PUSH2 0x464
0x884 PUSH2 0x8d9
0x887 JUMP
0x888 JUMPDEST
0x889 PUSH1 0x40
0x88b MLOAD
0x88c DUP1
0x88d DUP3
0x88e DUP2
0x88f MSTORE
0x890 PUSH1 0x20
0x892 ADD
0x893 SWAP2
0x894 POP
0x895 POP
0x896 PUSH1 0x40
0x898 MLOAD
0x899 DUP1
0x89a SWAP2
0x89b SUB
0x89c SWAP1
0x89d RETURN
0x89e JUMPDEST
0x89f CALLVALUE
0x8a0 DUP1
0x8a1 ISZERO
0x8a2 PUSH2 0x486
0x8a5 JUMPI
---
0x87b: V497 = 0x0
0x87e: REVERT 0x0 0x0
0x87f: JUMPDEST 
0x881: V498 = 0x464
0x884: V499 = 0x8d9
0x887: THROW 
0x888: JUMPDEST 
0x889: V500 = 0x40
0x88b: V501 = M[0x40]
0x88f: M[V501] = S0
0x890: V502 = 0x20
0x892: V503 = ADD 0x20 V501
0x896: V504 = 0x40
0x898: V505 = M[0x40]
0x89b: V506 = SUB V503 V505
0x89d: RETURN V505 V506
0x89e: JUMPDEST 
0x89f: V507 = CALLVALUE
0x8a1: V508 = ISZERO V507
0x8a2: V509 = 0x486
0x8a5: THROWI V508
---
Entry stack: [V494]
Stack pops: 0
Stack additions: [0x464, V507]
Exit stack: []

================================

Block 0x8a6
[0x8a6:0x8de]
---
Predecessors: [0x87b]
Successors: [0x8df]
---
0x8a6 PUSH1 0x0
0x8a8 DUP1
0x8a9 REVERT
0x8aa JUMPDEST
0x8ab POP
0x8ac PUSH2 0x4bb
0x8af PUSH1 0x4
0x8b1 DUP1
0x8b2 CALLDATASIZE
0x8b3 SUB
0x8b4 DUP2
0x8b5 ADD
0x8b6 SWAP1
0x8b7 DUP1
0x8b8 DUP1
0x8b9 CALLDATALOAD
0x8ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cf AND
0x8d0 SWAP1
0x8d1 PUSH1 0x20
0x8d3 ADD
0x8d4 SWAP1
0x8d5 SWAP3
0x8d6 SWAP2
0x8d7 SWAP1
0x8d8 POP
0x8d9 POP
0x8da POP
0x8db PUSH2 0x8df
0x8de JUMP
---
0x8a6: V510 = 0x0
0x8a9: REVERT 0x0 0x0
0x8aa: JUMPDEST 
0x8ac: V511 = 0x4bb
0x8af: V512 = 0x4
0x8b2: V513 = CALLDATASIZE
0x8b3: V514 = SUB V513 0x4
0x8b5: V515 = ADD 0x4 V514
0x8b9: V516 = CALLDATALOAD 0x4
0x8ba: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cf: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x8d1: V519 = 0x20
0x8d3: V520 = ADD 0x20 0x4
0x8db: V521 = 0x8df
0x8de: JUMP 0x8df
---
Entry stack: [V507]
Stack pops: 0
Stack additions: [V518, 0x4bb]
Exit stack: []

================================

Block 0x8df
[0x8df:0x8e8]
---
Predecessors: [0x8a6]
Successors: [0x8e9]
---
0x8df JUMPDEST
0x8e0 STOP
0x8e1 JUMPDEST
0x8e2 CALLVALUE
0x8e3 DUP1
0x8e4 ISZERO
0x8e5 PUSH2 0x4c9
0x8e8 JUMPI
---
0x8df: JUMPDEST 
0x8e0: STOP 
0x8e1: JUMPDEST 
0x8e2: V522 = CALLVALUE
0x8e4: V523 = ISZERO V522
0x8e5: V524 = 0x4c9
0x8e8: THROWI V523
---
Entry stack: [0x4bb, V518]
Stack pops: 0
Stack additions: [V522]
Exit stack: []

================================

Block 0x8e9
[0x8e9:0x93f]
---
Predecessors: [0x8df]
Successors: [0x940]
---
0x8e9 PUSH1 0x0
0x8eb DUP1
0x8ec REVERT
0x8ed JUMPDEST
0x8ee POP
0x8ef PUSH2 0x4d2
0x8f2 PUSH2 0x97e
0x8f5 JUMP
0x8f6 JUMPDEST
0x8f7 PUSH1 0x40
0x8f9 MLOAD
0x8fa DUP1
0x8fb DUP3
0x8fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x911 AND
0x912 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x927 AND
0x928 DUP2
0x929 MSTORE
0x92a PUSH1 0x20
0x92c ADD
0x92d SWAP2
0x92e POP
0x92f POP
0x930 PUSH1 0x40
0x932 MLOAD
0x933 DUP1
0x934 SWAP2
0x935 SUB
0x936 SWAP1
0x937 RETURN
0x938 JUMPDEST
0x939 CALLVALUE
0x93a DUP1
0x93b ISZERO
0x93c PUSH2 0x520
0x93f JUMPI
---
0x8e9: V525 = 0x0
0x8ec: REVERT 0x0 0x0
0x8ed: JUMPDEST 
0x8ef: V526 = 0x4d2
0x8f2: V527 = 0x97e
0x8f5: THROW 
0x8f6: JUMPDEST 
0x8f7: V528 = 0x40
0x8f9: V529 = M[0x40]
0x8fc: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x911: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x912: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x927: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x929: M[V529] = V533
0x92a: V534 = 0x20
0x92c: V535 = ADD 0x20 V529
0x930: V536 = 0x40
0x932: V537 = M[0x40]
0x935: V538 = SUB V535 V537
0x937: RETURN V537 V538
0x938: JUMPDEST 
0x939: V539 = CALLVALUE
0x93b: V540 = ISZERO V539
0x93c: V541 = 0x520
0x93f: THROWI V540
---
Entry stack: [V522]
Stack pops: 0
Stack additions: [0x4d2, V539]
Exit stack: []

================================

Block 0x940
[0x940:0x96e]
---
Predecessors: [0x8e9]
Successors: [0x96f]
---
0x940 PUSH1 0x0
0x942 DUP1
0x943 REVERT
0x944 JUMPDEST
0x945 POP
0x946 PUSH2 0x541
0x949 PUSH1 0x4
0x94b DUP1
0x94c CALLDATASIZE
0x94d SUB
0x94e DUP2
0x94f ADD
0x950 SWAP1
0x951 DUP1
0x952 DUP1
0x953 CALLDATALOAD
0x954 ISZERO
0x955 ISZERO
0x956 SWAP1
0x957 PUSH1 0x20
0x959 ADD
0x95a SWAP1
0x95b SWAP3
0x95c SWAP2
0x95d SWAP1
0x95e POP
0x95f POP
0x960 POP
0x961 PUSH2 0x9a3
0x964 JUMP
0x965 JUMPDEST
0x966 STOP
0x967 JUMPDEST
0x968 CALLVALUE
0x969 DUP1
0x96a ISZERO
0x96b PUSH2 0x54f
0x96e JUMPI
---
0x940: V542 = 0x0
0x943: REVERT 0x0 0x0
0x944: JUMPDEST 
0x946: V543 = 0x541
0x949: V544 = 0x4
0x94c: V545 = CALLDATASIZE
0x94d: V546 = SUB V545 0x4
0x94f: V547 = ADD 0x4 V546
0x953: V548 = CALLDATALOAD 0x4
0x954: V549 = ISZERO V548
0x955: V550 = ISZERO V549
0x957: V551 = 0x20
0x959: V552 = ADD 0x20 0x4
0x961: V553 = 0x9a3
0x964: THROW 
0x965: JUMPDEST 
0x966: STOP 
0x967: JUMPDEST 
0x968: V554 = CALLVALUE
0x96a: V555 = ISZERO V554
0x96b: V556 = 0x54f
0x96e: THROWI V555
---
Entry stack: [V539]
Stack pops: 0
Stack additions: [V550, 0x541, V554]
Exit stack: []

================================

Block 0x96f
[0x96f:0x9c5]
---
Predecessors: [0x940]
Successors: [0x9c6]
---
0x96f PUSH1 0x0
0x971 DUP1
0x972 REVERT
0x973 JUMPDEST
0x974 POP
0x975 PUSH2 0x558
0x978 PUSH2 0xa1b
0x97b JUMP
0x97c JUMPDEST
0x97d PUSH1 0x40
0x97f MLOAD
0x980 DUP1
0x981 DUP3
0x982 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x997 AND
0x998 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ad AND
0x9ae DUP2
0x9af MSTORE
0x9b0 PUSH1 0x20
0x9b2 ADD
0x9b3 SWAP2
0x9b4 POP
0x9b5 POP
0x9b6 PUSH1 0x40
0x9b8 MLOAD
0x9b9 DUP1
0x9ba SWAP2
0x9bb SUB
0x9bc SWAP1
0x9bd RETURN
0x9be JUMPDEST
0x9bf CALLVALUE
0x9c0 DUP1
0x9c1 ISZERO
0x9c2 PUSH2 0x5a6
0x9c5 JUMPI
---
0x96f: V557 = 0x0
0x972: REVERT 0x0 0x0
0x973: JUMPDEST 
0x975: V558 = 0x558
0x978: V559 = 0xa1b
0x97b: THROW 
0x97c: JUMPDEST 
0x97d: V560 = 0x40
0x97f: V561 = M[0x40]
0x982: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x997: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x998: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ad: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x9af: M[V561] = V565
0x9b0: V566 = 0x20
0x9b2: V567 = ADD 0x20 V561
0x9b6: V568 = 0x40
0x9b8: V569 = M[0x40]
0x9bb: V570 = SUB V567 V569
0x9bd: RETURN V569 V570
0x9be: JUMPDEST 
0x9bf: V571 = CALLVALUE
0x9c1: V572 = ISZERO V571
0x9c2: V573 = 0x5a6
0x9c5: THROWI V572
---
Entry stack: [V554]
Stack pops: 0
Stack additions: [0x558, V571]
Exit stack: []

================================

Block 0x9c6
[0x9c6:0xa08]
---
Predecessors: [0x96f]
Successors: [0xa09]
---
0x9c6 PUSH1 0x0
0x9c8 DUP1
0x9c9 REVERT
0x9ca JUMPDEST
0x9cb POP
0x9cc PUSH2 0x5db
0x9cf PUSH1 0x4
0x9d1 DUP1
0x9d2 CALLDATASIZE
0x9d3 SUB
0x9d4 DUP2
0x9d5 ADD
0x9d6 SWAP1
0x9d7 DUP1
0x9d8 DUP1
0x9d9 CALLDATALOAD
0x9da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ef AND
0x9f0 SWAP1
0x9f1 PUSH1 0x20
0x9f3 ADD
0x9f4 SWAP1
0x9f5 SWAP3
0x9f6 SWAP2
0x9f7 SWAP1
0x9f8 POP
0x9f9 POP
0x9fa POP
0x9fb PUSH2 0xa41
0x9fe JUMP
0x9ff JUMPDEST
0xa00 STOP
0xa01 JUMPDEST
0xa02 CALLVALUE
0xa03 DUP1
0xa04 ISZERO
0xa05 PUSH2 0x5e9
0xa08 JUMPI
---
0x9c6: V574 = 0x0
0x9c9: REVERT 0x0 0x0
0x9ca: JUMPDEST 
0x9cc: V575 = 0x5db
0x9cf: V576 = 0x4
0x9d2: V577 = CALLDATASIZE
0x9d3: V578 = SUB V577 0x4
0x9d5: V579 = ADD 0x4 V578
0x9d9: V580 = CALLDATALOAD 0x4
0x9da: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ef: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x9f1: V583 = 0x20
0x9f3: V584 = ADD 0x20 0x4
0x9fb: V585 = 0xa41
0x9fe: THROW 
0x9ff: JUMPDEST 
0xa00: STOP 
0xa01: JUMPDEST 
0xa02: V586 = CALLVALUE
0xa04: V587 = ISZERO V586
0xa05: V588 = 0x5e9
0xa08: THROWI V587
---
Entry stack: [V571]
Stack pops: 0
Stack additions: [V582, 0x5db, V586]
Exit stack: []

================================

Block 0xa09
[0xa09:0xa37]
---
Predecessors: [0x9c6]
Successors: [0xa38]
---
0xa09 PUSH1 0x0
0xa0b DUP1
0xa0c REVERT
0xa0d JUMPDEST
0xa0e POP
0xa0f PUSH2 0x5f2
0xa12 PUSH2 0xda9
0xa15 JUMP
0xa16 JUMPDEST
0xa17 PUSH1 0x40
0xa19 MLOAD
0xa1a DUP1
0xa1b DUP3
0xa1c ISZERO
0xa1d ISZERO
0xa1e ISZERO
0xa1f ISZERO
0xa20 DUP2
0xa21 MSTORE
0xa22 PUSH1 0x20
0xa24 ADD
0xa25 SWAP2
0xa26 POP
0xa27 POP
0xa28 PUSH1 0x40
0xa2a MLOAD
0xa2b DUP1
0xa2c SWAP2
0xa2d SUB
0xa2e SWAP1
0xa2f RETURN
0xa30 JUMPDEST
0xa31 CALLVALUE
0xa32 DUP1
0xa33 ISZERO
0xa34 PUSH2 0x618
0xa37 JUMPI
---
0xa09: V589 = 0x0
0xa0c: REVERT 0x0 0x0
0xa0d: JUMPDEST 
0xa0f: V590 = 0x5f2
0xa12: V591 = 0xda9
0xa15: THROW 
0xa16: JUMPDEST 
0xa17: V592 = 0x40
0xa19: V593 = M[0x40]
0xa1c: V594 = ISZERO S0
0xa1d: V595 = ISZERO V594
0xa1e: V596 = ISZERO V595
0xa1f: V597 = ISZERO V596
0xa21: M[V593] = V597
0xa22: V598 = 0x20
0xa24: V599 = ADD 0x20 V593
0xa28: V600 = 0x40
0xa2a: V601 = M[0x40]
0xa2d: V602 = SUB V599 V601
0xa2f: RETURN V601 V602
0xa30: JUMPDEST 
0xa31: V603 = CALLVALUE
0xa33: V604 = ISZERO V603
0xa34: V605 = 0x618
0xa37: THROWI V604
---
Entry stack: [V586]
Stack pops: 0
Stack additions: [0x5f2, V603]
Exit stack: []

================================

Block 0xa38
[0xa38:0xa62]
---
Predecessors: [0xa09]
Successors: [0xa63]
---
0xa38 PUSH1 0x0
0xa3a DUP1
0xa3b REVERT
0xa3c JUMPDEST
0xa3d POP
0xa3e PUSH2 0x621
0xa41 PUSH2 0xdbc
0xa44 JUMP
0xa45 JUMPDEST
0xa46 PUSH1 0x40
0xa48 MLOAD
0xa49 DUP1
0xa4a DUP3
0xa4b DUP2
0xa4c MSTORE
0xa4d PUSH1 0x20
0xa4f ADD
0xa50 SWAP2
0xa51 POP
0xa52 POP
0xa53 PUSH1 0x40
0xa55 MLOAD
0xa56 DUP1
0xa57 SWAP2
0xa58 SUB
0xa59 SWAP1
0xa5a RETURN
0xa5b JUMPDEST
0xa5c CALLVALUE
0xa5d DUP1
0xa5e ISZERO
0xa5f PUSH2 0x643
0xa62 JUMPI
---
0xa38: V606 = 0x0
0xa3b: REVERT 0x0 0x0
0xa3c: JUMPDEST 
0xa3e: V607 = 0x621
0xa41: V608 = 0xdbc
0xa44: THROW 
0xa45: JUMPDEST 
0xa46: V609 = 0x40
0xa48: V610 = M[0x40]
0xa4c: M[V610] = S0
0xa4d: V611 = 0x20
0xa4f: V612 = ADD 0x20 V610
0xa53: V613 = 0x40
0xa55: V614 = M[0x40]
0xa58: V615 = SUB V612 V614
0xa5a: RETURN V614 V615
0xa5b: JUMPDEST 
0xa5c: V616 = CALLVALUE
0xa5e: V617 = ISZERO V616
0xa5f: V618 = 0x643
0xa62: THROWI V617
---
Entry stack: [V603]
Stack pops: 0
Stack additions: [0x621, V616]
Exit stack: []

================================

Block 0xa63
[0xa63:0xb40]
---
Predecessors: [0xa38]
Successors: [0xb41]
---
0xa63 PUSH1 0x0
0xa65 DUP1
0xa66 REVERT
0xa67 JUMPDEST
0xa68 POP
0xa69 PUSH2 0x678
0xa6c PUSH1 0x4
0xa6e DUP1
0xa6f CALLDATASIZE
0xa70 SUB
0xa71 DUP2
0xa72 ADD
0xa73 SWAP1
0xa74 DUP1
0xa75 DUP1
0xa76 CALLDATALOAD
0xa77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8c AND
0xa8d SWAP1
0xa8e PUSH1 0x20
0xa90 ADD
0xa91 SWAP1
0xa92 SWAP3
0xa93 SWAP2
0xa94 SWAP1
0xa95 POP
0xa96 POP
0xa97 POP
0xa98 PUSH2 0xdc2
0xa9b JUMP
0xa9c JUMPDEST
0xa9d STOP
0xa9e JUMPDEST
0xa9f PUSH1 0x3
0xaa1 PUSH1 0x0
0xaa3 SWAP1
0xaa4 SLOAD
0xaa5 SWAP1
0xaa6 PUSH2 0x100
0xaa9 EXP
0xaaa SWAP1
0xaab DIV
0xaac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac1 AND
0xac2 DUP2
0xac3 JUMP
0xac4 JUMPDEST
0xac5 PUSH1 0x2
0xac7 PUSH1 0x0
0xac9 SWAP1
0xaca SLOAD
0xacb SWAP1
0xacc PUSH2 0x100
0xacf EXP
0xad0 SWAP1
0xad1 DIV
0xad2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae7 AND
0xae8 DUP2
0xae9 JUMP
0xaea JUMPDEST
0xaeb PUSH1 0x0
0xaed DUP1
0xaee SWAP1
0xaef SLOAD
0xaf0 SWAP1
0xaf1 PUSH2 0x100
0xaf4 EXP
0xaf5 SWAP1
0xaf6 DIV
0xaf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0c AND
0xb0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb22 AND
0xb23 CALLER
0xb24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb39 AND
0xb3a EQ
0xb3b ISZERO
0xb3c ISZERO
0xb3d PUSH2 0x721
0xb40 JUMPI
---
0xa63: V619 = 0x0
0xa66: REVERT 0x0 0x0
0xa67: JUMPDEST 
0xa69: V620 = 0x678
0xa6c: V621 = 0x4
0xa6f: V622 = CALLDATASIZE
0xa70: V623 = SUB V622 0x4
0xa72: V624 = ADD 0x4 V623
0xa76: V625 = CALLDATALOAD 0x4
0xa77: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8c: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0xa8e: V628 = 0x20
0xa90: V629 = ADD 0x20 0x4
0xa98: V630 = 0xdc2
0xa9b: THROW 
0xa9c: JUMPDEST 
0xa9d: STOP 
0xa9e: JUMPDEST 
0xa9f: V631 = 0x3
0xaa1: V632 = 0x0
0xaa4: V633 = S[0x3]
0xaa6: V634 = 0x100
0xaa9: V635 = EXP 0x100 0x0
0xaab: V636 = DIV V633 0x1
0xaac: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xac1: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0xac3: JUMP S0
0xac4: JUMPDEST 
0xac5: V639 = 0x2
0xac7: V640 = 0x0
0xaca: V641 = S[0x2]
0xacc: V642 = 0x100
0xacf: V643 = EXP 0x100 0x0
0xad1: V644 = DIV V641 0x1
0xad2: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0xae7: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0xae9: JUMP S0
0xaea: JUMPDEST 
0xaeb: V647 = 0x0
0xaef: V648 = S[0x0]
0xaf1: V649 = 0x100
0xaf4: V650 = EXP 0x100 0x0
0xaf6: V651 = DIV V648 0x1
0xaf7: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0c: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0xb0d: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xb22: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xb23: V656 = CALLER
0xb24: V657 = 0xffffffffffffffffffffffffffffffffffffffff
0xb39: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0xb3a: V659 = EQ V658 V655
0xb3b: V660 = ISZERO V659
0xb3c: V661 = ISZERO V660
0xb3d: V662 = 0x721
0xb40: THROWI V661
---
Entry stack: [V616]
Stack pops: 0
Stack additions: [V627, 0x678, V638, S0, V646, S0]
Exit stack: []

================================

Block 0xb41
[0xb41:0xb4f]
---
Predecessors: [0xa63]
Successors: [0xb50]
---
0xb41 PUSH1 0x0
0xb43 DUP1
0xb44 REVERT
0xb45 JUMPDEST
0xb46 PUSH1 0x0
0xb48 DUP2
0xb49 GT
0xb4a ISZERO
0xb4b ISZERO
0xb4c PUSH2 0x730
0xb4f JUMPI
---
0xb41: V663 = 0x0
0xb44: REVERT 0x0 0x0
0xb45: JUMPDEST 
0xb46: V664 = 0x0
0xb49: V665 = GT S0 0x0
0xb4a: V666 = ISZERO V665
0xb4b: V667 = ISZERO V666
0xb4c: V668 = 0x730
0xb4f: THROWI V667
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xb50
[0xb50:0xbb5]
---
Predecessors: [0xb41]
Successors: [0x796, 0xbb6]
---
0xb50 PUSH1 0x0
0xb52 DUP1
0xb53 REVERT
0xb54 JUMPDEST
0xb55 DUP1
0xb56 PUSH1 0x5
0xb58 DUP2
0xb59 SWAP1
0xb5a SSTORE
0xb5b POP
0xb5c POP
0xb5d JUMP
0xb5e JUMPDEST
0xb5f PUSH1 0x1
0xb61 PUSH1 0x0
0xb63 SWAP1
0xb64 SLOAD
0xb65 SWAP1
0xb66 PUSH2 0x100
0xb69 EXP
0xb6a SWAP1
0xb6b DIV
0xb6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb81 AND
0xb82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb97 AND
0xb98 CALLER
0xb99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbae AND
0xbaf EQ
0xbb0 ISZERO
0xbb1 ISZERO
0xbb2 PUSH2 0x796
0xbb5 JUMPI
---
0xb50: V669 = 0x0
0xb53: REVERT 0x0 0x0
0xb54: JUMPDEST 
0xb56: V670 = 0x5
0xb5a: S[0x5] = S0
0xb5d: JUMP S1
0xb5e: JUMPDEST 
0xb5f: V671 = 0x1
0xb61: V672 = 0x0
0xb64: V673 = S[0x1]
0xb66: V674 = 0x100
0xb69: V675 = EXP 0x100 0x0
0xb6b: V676 = DIV V673 0x1
0xb6c: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0xb81: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0xb82: V679 = 0xffffffffffffffffffffffffffffffffffffffff
0xb97: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0xb98: V681 = CALLER
0xb99: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xbae: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0xbaf: V684 = EQ V683 V680
0xbb0: V685 = ISZERO V684
0xbb1: V686 = ISZERO V685
0xbb2: V687 = 0x796
0xbb5: JUMPI 0x796 V686
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb6
[0xbb6:0xd59]
---
Predecessors: [0xb50]
Successors: [0xd5a]
---
0xbb6 PUSH1 0x0
0xbb8 DUP1
0xbb9 REVERT
0xbba JUMPDEST
0xbbb PUSH1 0x1
0xbbd PUSH1 0x0
0xbbf SWAP1
0xbc0 SLOAD
0xbc1 SWAP1
0xbc2 PUSH2 0x100
0xbc5 EXP
0xbc6 SWAP1
0xbc7 DIV
0xbc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdd AND
0xbde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf3 AND
0xbf4 PUSH1 0x0
0xbf6 DUP1
0xbf7 SWAP1
0xbf8 SLOAD
0xbf9 SWAP1
0xbfa PUSH2 0x100
0xbfd EXP
0xbfe SWAP1
0xbff DIV
0xc00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc15 AND
0xc16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2b AND
0xc2c PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xc4d PUSH1 0x40
0xc4f MLOAD
0xc50 PUSH1 0x40
0xc52 MLOAD
0xc53 DUP1
0xc54 SWAP2
0xc55 SUB
0xc56 SWAP1
0xc57 LOG3
0xc58 PUSH1 0x1
0xc5a PUSH1 0x0
0xc5c SWAP1
0xc5d SLOAD
0xc5e SWAP1
0xc5f PUSH2 0x100
0xc62 EXP
0xc63 SWAP1
0xc64 DIV
0xc65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7a AND
0xc7b PUSH1 0x0
0xc7d DUP1
0xc7e PUSH2 0x100
0xc81 EXP
0xc82 DUP2
0xc83 SLOAD
0xc84 DUP2
0xc85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9a MUL
0xc9b NOT
0xc9c AND
0xc9d SWAP1
0xc9e DUP4
0xc9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb4 AND
0xcb5 MUL
0xcb6 OR
0xcb7 SWAP1
0xcb8 SSTORE
0xcb9 POP
0xcba PUSH1 0x0
0xcbc PUSH1 0x1
0xcbe PUSH1 0x0
0xcc0 PUSH2 0x100
0xcc3 EXP
0xcc4 DUP2
0xcc5 SLOAD
0xcc6 DUP2
0xcc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcdc MUL
0xcdd NOT
0xcde AND
0xcdf SWAP1
0xce0 DUP4
0xce1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf6 AND
0xcf7 MUL
0xcf8 OR
0xcf9 SWAP1
0xcfa SSTORE
0xcfb POP
0xcfc JUMP
0xcfd JUMPDEST
0xcfe PUSH1 0x5
0xd00 SLOAD
0xd01 DUP2
0xd02 JUMP
0xd03 JUMPDEST
0xd04 PUSH1 0x0
0xd06 DUP1
0xd07 SWAP1
0xd08 SLOAD
0xd09 SWAP1
0xd0a PUSH2 0x100
0xd0d EXP
0xd0e SWAP1
0xd0f DIV
0xd10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd25 AND
0xd26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3b AND
0xd3c CALLER
0xd3d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd52 AND
0xd53 EQ
0xd54 ISZERO
0xd55 ISZERO
0xd56 PUSH2 0x93a
0xd59 JUMPI
---
0xbb6: V688 = 0x0
0xbb9: REVERT 0x0 0x0
0xbba: JUMPDEST 
0xbbb: V689 = 0x1
0xbbd: V690 = 0x0
0xbc0: V691 = S[0x1]
0xbc2: V692 = 0x100
0xbc5: V693 = EXP 0x100 0x0
0xbc7: V694 = DIV V691 0x1
0xbc8: V695 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdd: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V694
0xbde: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf3: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xbf4: V699 = 0x0
0xbf8: V700 = S[0x0]
0xbfa: V701 = 0x100
0xbfd: V702 = EXP 0x100 0x0
0xbff: V703 = DIV V700 0x1
0xc00: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xc15: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xc16: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2b: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0xc2c: V708 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xc4d: V709 = 0x40
0xc4f: V710 = M[0x40]
0xc50: V711 = 0x40
0xc52: V712 = M[0x40]
0xc55: V713 = SUB V710 V712
0xc57: LOG V712 V713 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V707 V698
0xc58: V714 = 0x1
0xc5a: V715 = 0x0
0xc5d: V716 = S[0x1]
0xc5f: V717 = 0x100
0xc62: V718 = EXP 0x100 0x0
0xc64: V719 = DIV V716 0x1
0xc65: V720 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7a: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0xc7b: V722 = 0x0
0xc7e: V723 = 0x100
0xc81: V724 = EXP 0x100 0x0
0xc83: V725 = S[0x0]
0xc85: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9a: V727 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc9b: V728 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc9c: V729 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V725
0xc9f: V730 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb4: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0xcb5: V732 = MUL V731 0x1
0xcb6: V733 = OR V732 V729
0xcb8: S[0x0] = V733
0xcba: V734 = 0x0
0xcbc: V735 = 0x1
0xcbe: V736 = 0x0
0xcc0: V737 = 0x100
0xcc3: V738 = EXP 0x100 0x0
0xcc5: V739 = S[0x1]
0xcc7: V740 = 0xffffffffffffffffffffffffffffffffffffffff
0xcdc: V741 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xcdd: V742 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xcde: V743 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V739
0xce1: V744 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf6: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xcf7: V746 = MUL 0x0 0x1
0xcf8: V747 = OR 0x0 V743
0xcfa: S[0x1] = V747
0xcfc: JUMP S0
0xcfd: JUMPDEST 
0xcfe: V748 = 0x5
0xd00: V749 = S[0x5]
0xd02: JUMP S0
0xd03: JUMPDEST 
0xd04: V750 = 0x0
0xd08: V751 = S[0x0]
0xd0a: V752 = 0x100
0xd0d: V753 = EXP 0x100 0x0
0xd0f: V754 = DIV V751 0x1
0xd10: V755 = 0xffffffffffffffffffffffffffffffffffffffff
0xd25: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0xd26: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3b: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xd3c: V759 = CALLER
0xd3d: V760 = 0xffffffffffffffffffffffffffffffffffffffff
0xd52: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V759
0xd53: V762 = EQ V761 V758
0xd54: V763 = ISZERO V762
0xd55: V764 = ISZERO V763
0xd56: V765 = 0x93a
0xd59: THROWI V764
---
Entry stack: []
Stack pops: 0
Stack additions: [V749, S0]
Exit stack: []

================================

Block 0xd5a
[0xd5a:0xe1d]
---
Predecessors: [0xbb6]
Successors: [0xe1e]
---
0xd5a PUSH1 0x0
0xd5c DUP1
0xd5d REVERT
0xd5e JUMPDEST
0xd5f DUP1
0xd60 PUSH1 0x3
0xd62 PUSH1 0x0
0xd64 PUSH2 0x100
0xd67 EXP
0xd68 DUP2
0xd69 SLOAD
0xd6a DUP2
0xd6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd80 MUL
0xd81 NOT
0xd82 AND
0xd83 SWAP1
0xd84 DUP4
0xd85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9a AND
0xd9b MUL
0xd9c OR
0xd9d SWAP1
0xd9e SSTORE
0xd9f POP
0xda0 POP
0xda1 JUMP
0xda2 JUMPDEST
0xda3 PUSH1 0x0
0xda5 DUP1
0xda6 SWAP1
0xda7 SLOAD
0xda8 SWAP1
0xda9 PUSH2 0x100
0xdac EXP
0xdad SWAP1
0xdae DIV
0xdaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc4 AND
0xdc5 DUP2
0xdc6 JUMP
0xdc7 JUMPDEST
0xdc8 PUSH1 0x0
0xdca DUP1
0xdcb SWAP1
0xdcc SLOAD
0xdcd SWAP1
0xdce PUSH2 0x100
0xdd1 EXP
0xdd2 SWAP1
0xdd3 DIV
0xdd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde9 AND
0xdea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdff AND
0xe00 CALLER
0xe01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe16 AND
0xe17 EQ
0xe18 ISZERO
0xe19 ISZERO
0xe1a PUSH2 0x9fe
0xe1d JUMPI
---
0xd5a: V766 = 0x0
0xd5d: REVERT 0x0 0x0
0xd5e: JUMPDEST 
0xd60: V767 = 0x3
0xd62: V768 = 0x0
0xd64: V769 = 0x100
0xd67: V770 = EXP 0x100 0x0
0xd69: V771 = S[0x3]
0xd6b: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0xd80: V773 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xd81: V774 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd82: V775 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V771
0xd85: V776 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9a: V777 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd9b: V778 = MUL V777 0x1
0xd9c: V779 = OR V778 V775
0xd9e: S[0x3] = V779
0xda1: JUMP S1
0xda2: JUMPDEST 
0xda3: V780 = 0x0
0xda7: V781 = S[0x0]
0xda9: V782 = 0x100
0xdac: V783 = EXP 0x100 0x0
0xdae: V784 = DIV V781 0x1
0xdaf: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc4: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xdc6: JUMP S0
0xdc7: JUMPDEST 
0xdc8: V787 = 0x0
0xdcc: V788 = S[0x0]
0xdce: V789 = 0x100
0xdd1: V790 = EXP 0x100 0x0
0xdd3: V791 = DIV V788 0x1
0xdd4: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xde9: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0xdea: V794 = 0xffffffffffffffffffffffffffffffffffffffff
0xdff: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0xe00: V796 = CALLER
0xe01: V797 = 0xffffffffffffffffffffffffffffffffffffffff
0xe16: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V796
0xe17: V799 = EQ V798 V795
0xe18: V800 = ISZERO V799
0xe19: V801 = ISZERO V800
0xe1a: V802 = 0x9fe
0xe1d: THROWI V801
---
Entry stack: []
Stack pops: 0
Stack additions: [V786, S0]
Exit stack: []

================================

Block 0xe1e
[0xe1e:0xebe]
---
Predecessors: [0xd5a]
Successors: [0xebf]
---
0xe1e PUSH1 0x0
0xe20 DUP1
0xe21 REVERT
0xe22 JUMPDEST
0xe23 DUP1
0xe24 PUSH1 0x3
0xe26 PUSH1 0x14
0xe28 PUSH2 0x100
0xe2b EXP
0xe2c DUP2
0xe2d SLOAD
0xe2e DUP2
0xe2f PUSH1 0xff
0xe31 MUL
0xe32 NOT
0xe33 AND
0xe34 SWAP1
0xe35 DUP4
0xe36 ISZERO
0xe37 ISZERO
0xe38 MUL
0xe39 OR
0xe3a SWAP1
0xe3b SSTORE
0xe3c POP
0xe3d POP
0xe3e JUMP
0xe3f JUMPDEST
0xe40 PUSH1 0x1
0xe42 PUSH1 0x0
0xe44 SWAP1
0xe45 SLOAD
0xe46 SWAP1
0xe47 PUSH2 0x100
0xe4a EXP
0xe4b SWAP1
0xe4c DIV
0xe4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe62 AND
0xe63 DUP2
0xe64 JUMP
0xe65 JUMPDEST
0xe66 PUSH1 0x0
0xe68 DUP1
0xe69 PUSH1 0x0
0xe6b DUP1
0xe6c SWAP1
0xe6d SLOAD
0xe6e SWAP1
0xe6f PUSH2 0x100
0xe72 EXP
0xe73 SWAP1
0xe74 DIV
0xe75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8a AND
0xe8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea0 AND
0xea1 CALLER
0xea2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb7 AND
0xeb8 EQ
0xeb9 ISZERO
0xeba ISZERO
0xebb PUSH2 0xa9f
0xebe JUMPI
---
0xe1e: V803 = 0x0
0xe21: REVERT 0x0 0x0
0xe22: JUMPDEST 
0xe24: V804 = 0x3
0xe26: V805 = 0x14
0xe28: V806 = 0x100
0xe2b: V807 = EXP 0x100 0x14
0xe2d: V808 = S[0x3]
0xe2f: V809 = 0xff
0xe31: V810 = MUL 0xff 0x10000000000000000000000000000000000000000
0xe32: V811 = NOT 0xff0000000000000000000000000000000000000000
0xe33: V812 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V808
0xe36: V813 = ISZERO S0
0xe37: V814 = ISZERO V813
0xe38: V815 = MUL V814 0x10000000000000000000000000000000000000000
0xe39: V816 = OR V815 V812
0xe3b: S[0x3] = V816
0xe3e: JUMP S1
0xe3f: JUMPDEST 
0xe40: V817 = 0x1
0xe42: V818 = 0x0
0xe45: V819 = S[0x1]
0xe47: V820 = 0x100
0xe4a: V821 = EXP 0x100 0x0
0xe4c: V822 = DIV V819 0x1
0xe4d: V823 = 0xffffffffffffffffffffffffffffffffffffffff
0xe62: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0xe64: JUMP S0
0xe65: JUMPDEST 
0xe66: V825 = 0x0
0xe69: V826 = 0x0
0xe6d: V827 = S[0x0]
0xe6f: V828 = 0x100
0xe72: V829 = EXP 0x100 0x0
0xe74: V830 = DIV V827 0x1
0xe75: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8a: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V830
0xe8b: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xea0: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xea1: V835 = CALLER
0xea2: V836 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb7: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff V835
0xeb8: V838 = EQ V837 V834
0xeb9: V839 = ISZERO V838
0xeba: V840 = ISZERO V839
0xebb: V841 = 0xa9f
0xebe: THROWI V840
---
Entry stack: []
Stack pops: 0
Stack additions: [V824, S0, 0x0, 0x0]
Exit stack: []

================================

Block 0xebf
[0xebf:0xee2]
---
Predecessors: [0xe1e]
Successors: [0xee3]
---
0xebf PUSH1 0x0
0xec1 DUP1
0xec2 REVERT
0xec3 JUMPDEST
0xec4 PUSH1 0x0
0xec6 DUP4
0xec7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedc AND
0xedd EQ
0xede ISZERO
0xedf PUSH2 0xb42
0xee2 JUMPI
---
0xebf: V842 = 0x0
0xec2: REVERT 0x0 0x0
0xec3: JUMPDEST 
0xec4: V843 = 0x0
0xec7: V844 = 0xffffffffffffffffffffffffffffffffffffffff
0xedc: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xedd: V846 = EQ V845 0x0
0xede: V847 = ISZERO V846
0xedf: V848 = 0xb42
0xee2: THROWI V847
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xee3
[0xee3:0xf56]
---
Predecessors: [0xebf]
Successors: [0xf57]
---
0xee3 PUSH1 0x0
0xee5 DUP1
0xee6 SWAP1
0xee7 SLOAD
0xee8 SWAP1
0xee9 PUSH2 0x100
0xeec EXP
0xeed SWAP1
0xeee DIV
0xeef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf04 AND
0xf05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1a AND
0xf1b PUSH2 0x8fc
0xf1e ADDRESS
0xf1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf34 AND
0xf35 BALANCE
0xf36 SWAP1
0xf37 DUP2
0xf38 ISZERO
0xf39 MUL
0xf3a SWAP1
0xf3b PUSH1 0x40
0xf3d MLOAD
0xf3e PUSH1 0x0
0xf40 PUSH1 0x40
0xf42 MLOAD
0xf43 DUP1
0xf44 DUP4
0xf45 SUB
0xf46 DUP2
0xf47 DUP6
0xf48 DUP9
0xf49 DUP9
0xf4a CALL
0xf4b SWAP4
0xf4c POP
0xf4d POP
0xf4e POP
0xf4f POP
0xf50 ISZERO
0xf51 DUP1
0xf52 ISZERO
0xf53 PUSH2 0xb3c
0xf56 JUMPI
---
0xee3: V849 = 0x0
0xee7: V850 = S[0x0]
0xee9: V851 = 0x100
0xeec: V852 = EXP 0x100 0x0
0xeee: V853 = DIV V850 0x1
0xeef: V854 = 0xffffffffffffffffffffffffffffffffffffffff
0xf04: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0xf05: V856 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1a: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0xf1b: V858 = 0x8fc
0xf1e: V859 = ADDRESS
0xf1f: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xf34: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0xf35: V862 = BALANCE V861
0xf38: V863 = ISZERO V862
0xf39: V864 = MUL V863 0x8fc
0xf3b: V865 = 0x40
0xf3d: V866 = M[0x40]
0xf3e: V867 = 0x0
0xf40: V868 = 0x40
0xf42: V869 = M[0x40]
0xf45: V870 = SUB V866 V869
0xf4a: V871 = CALL V864 V857 V862 V869 V870 V869 0x0
0xf50: V872 = ISZERO V871
0xf52: V873 = ISZERO V872
0xf53: V874 = 0xb3c
0xf56: THROWI V873
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V872]
Exit stack: [S2, S1, S0, V872]

================================

Block 0xf57
[0xf57:0xfff]
---
Predecessors: [0xee3]
Successors: [0x1000]
---
0xf57 RETURNDATASIZE
0xf58 PUSH1 0x0
0xf5a DUP1
0xf5b RETURNDATACOPY
0xf5c RETURNDATASIZE
0xf5d PUSH1 0x0
0xf5f REVERT
0xf60 JUMPDEST
0xf61 POP
0xf62 PUSH2 0xda4
0xf65 JUMP
0xf66 JUMPDEST
0xf67 DUP3
0xf68 SWAP2
0xf69 POP
0xf6a DUP2
0xf6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf80 AND
0xf81 PUSH4 0x70a08231
0xf86 ADDRESS
0xf87 PUSH1 0x40
0xf89 MLOAD
0xf8a DUP3
0xf8b PUSH4 0xffffffff
0xf90 AND
0xf91 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xfaf MUL
0xfb0 DUP2
0xfb1 MSTORE
0xfb2 PUSH1 0x4
0xfb4 ADD
0xfb5 DUP1
0xfb6 DUP3
0xfb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcc AND
0xfcd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe2 AND
0xfe3 DUP2
0xfe4 MSTORE
0xfe5 PUSH1 0x20
0xfe7 ADD
0xfe8 SWAP2
0xfe9 POP
0xfea POP
0xfeb PUSH1 0x20
0xfed PUSH1 0x40
0xfef MLOAD
0xff0 DUP1
0xff1 DUP4
0xff2 SUB
0xff3 DUP2
0xff4 PUSH1 0x0
0xff6 DUP8
0xff7 DUP1
0xff8 EXTCODESIZE
0xff9 ISZERO
0xffa DUP1
0xffb ISZERO
0xffc PUSH2 0xbe0
0xfff JUMPI
---
0xf57: V875 = RETURNDATASIZE
0xf58: V876 = 0x0
0xf5b: RETURNDATACOPY 0x0 0x0 V875
0xf5c: V877 = RETURNDATASIZE
0xf5d: V878 = 0x0
0xf5f: REVERT 0x0 V877
0xf60: JUMPDEST 
0xf62: V879 = 0xda4
0xf65: THROW 
0xf66: JUMPDEST 
0xf6b: V880 = 0xffffffffffffffffffffffffffffffffffffffff
0xf80: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf81: V882 = 0x70a08231
0xf86: V883 = ADDRESS
0xf87: V884 = 0x40
0xf89: V885 = M[0x40]
0xf8b: V886 = 0xffffffff
0xf90: V887 = AND 0xffffffff 0x70a08231
0xf91: V888 = 0x100000000000000000000000000000000000000000000000000000000
0xfaf: V889 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xfb1: M[V885] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xfb2: V890 = 0x4
0xfb4: V891 = ADD 0x4 V885
0xfb7: V892 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcc: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0xfcd: V894 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe2: V895 = AND 0xffffffffffffffffffffffffffffffffffffffff V893
0xfe4: M[V891] = V895
0xfe5: V896 = 0x20
0xfe7: V897 = ADD 0x20 V891
0xfeb: V898 = 0x20
0xfed: V899 = 0x40
0xfef: V900 = M[0x40]
0xff2: V901 = SUB V897 V900
0xff4: V902 = 0x0
0xff8: V903 = EXTCODESIZE V881
0xff9: V904 = ISZERO V903
0xffb: V905 = ISZERO V904
0xffc: V906 = 0xbe0
0xfff: THROWI V905
---
Entry stack: [S3, S2, S1, V872]
Stack pops: 0
Stack additions: [V904, V881, 0x0, V900, V901, V900, 0x20, V897, 0x70a08231, V881, S0, S2, S2]
Exit stack: []

================================

Block 0x1000
[0x1000:0x100e]
---
Predecessors: [0xf57]
Successors: [0x100f]
---
0x1000 PUSH1 0x0
0x1002 DUP1
0x1003 REVERT
0x1004 JUMPDEST
0x1005 POP
0x1006 GAS
0x1007 CALL
0x1008 ISZERO
0x1009 DUP1
0x100a ISZERO
0x100b PUSH2 0xbf4
0x100e JUMPI
---
0x1000: V907 = 0x0
0x1003: REVERT 0x0 0x0
0x1004: JUMPDEST 
0x1006: V908 = GAS
0x1007: V909 = CALL V908 S1 S2 S3 S4 S5 S6
0x1008: V910 = ISZERO V909
0x100a: V911 = ISZERO V910
0x100b: V912 = 0xbf4
0x100e: THROWI V911
---
Entry stack: [S12, S11, S10, V881, 0x70a08231, V897, 0x20, V900, V901, V900, 0x0, V881, V904]
Stack pops: 0
Stack additions: [V910]
Exit stack: []

================================

Block 0x100f
[0x100f:0x1029]
---
Predecessors: [0x1000]
Successors: [0x102a]
---
0x100f RETURNDATASIZE
0x1010 PUSH1 0x0
0x1012 DUP1
0x1013 RETURNDATACOPY
0x1014 RETURNDATASIZE
0x1015 PUSH1 0x0
0x1017 REVERT
0x1018 JUMPDEST
0x1019 POP
0x101a POP
0x101b POP
0x101c POP
0x101d PUSH1 0x40
0x101f MLOAD
0x1020 RETURNDATASIZE
0x1021 PUSH1 0x20
0x1023 DUP2
0x1024 LT
0x1025 ISZERO
0x1026 PUSH2 0xc0a
0x1029 JUMPI
---
0x100f: V913 = RETURNDATASIZE
0x1010: V914 = 0x0
0x1013: RETURNDATACOPY 0x0 0x0 V913
0x1014: V915 = RETURNDATASIZE
0x1015: V916 = 0x0
0x1017: REVERT 0x0 V915
0x1018: JUMPDEST 
0x101d: V917 = 0x40
0x101f: V918 = M[0x40]
0x1020: V919 = RETURNDATASIZE
0x1021: V920 = 0x20
0x1024: V921 = LT V919 0x20
0x1025: V922 = ISZERO V921
0x1026: V923 = 0xc0a
0x1029: THROWI V922
---
Entry stack: [V910]
Stack pops: 0
Stack additions: [V919, V918]
Exit stack: []

================================

Block 0x102a
[0x102a:0x1100]
---
Predecessors: [0x100f]
Successors: [0x1101]
---
0x102a PUSH1 0x0
0x102c DUP1
0x102d REVERT
0x102e JUMPDEST
0x102f DUP2
0x1030 ADD
0x1031 SWAP1
0x1032 DUP1
0x1033 DUP1
0x1034 MLOAD
0x1035 SWAP1
0x1036 PUSH1 0x20
0x1038 ADD
0x1039 SWAP1
0x103a SWAP3
0x103b SWAP2
0x103c SWAP1
0x103d POP
0x103e POP
0x103f POP
0x1040 SWAP1
0x1041 POP
0x1042 DUP2
0x1043 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1058 AND
0x1059 PUSH4 0xa9059cbb
0x105e PUSH1 0x0
0x1060 DUP1
0x1061 SWAP1
0x1062 SLOAD
0x1063 SWAP1
0x1064 PUSH2 0x100
0x1067 EXP
0x1068 SWAP1
0x1069 DIV
0x106a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107f AND
0x1080 DUP4
0x1081 PUSH1 0x40
0x1083 MLOAD
0x1084 DUP4
0x1085 PUSH4 0xffffffff
0x108a AND
0x108b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10a9 MUL
0x10aa DUP2
0x10ab MSTORE
0x10ac PUSH1 0x4
0x10ae ADD
0x10af DUP1
0x10b0 DUP4
0x10b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c6 AND
0x10c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10dc AND
0x10dd DUP2
0x10de MSTORE
0x10df PUSH1 0x20
0x10e1 ADD
0x10e2 DUP3
0x10e3 DUP2
0x10e4 MSTORE
0x10e5 PUSH1 0x20
0x10e7 ADD
0x10e8 SWAP3
0x10e9 POP
0x10ea POP
0x10eb POP
0x10ec PUSH1 0x20
0x10ee PUSH1 0x40
0x10f0 MLOAD
0x10f1 DUP1
0x10f2 DUP4
0x10f3 SUB
0x10f4 DUP2
0x10f5 PUSH1 0x0
0x10f7 DUP8
0x10f8 DUP1
0x10f9 EXTCODESIZE
0x10fa ISZERO
0x10fb DUP1
0x10fc ISZERO
0x10fd PUSH2 0xce1
0x1100 JUMPI
---
0x102a: V924 = 0x0
0x102d: REVERT 0x0 0x0
0x102e: JUMPDEST 
0x1030: V925 = ADD S1 S0
0x1034: V926 = M[S1]
0x1036: V927 = 0x20
0x1038: V928 = ADD 0x20 S1
0x1043: V929 = 0xffffffffffffffffffffffffffffffffffffffff
0x1058: V930 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1059: V931 = 0xa9059cbb
0x105e: V932 = 0x0
0x1062: V933 = S[0x0]
0x1064: V934 = 0x100
0x1067: V935 = EXP 0x100 0x0
0x1069: V936 = DIV V933 0x1
0x106a: V937 = 0xffffffffffffffffffffffffffffffffffffffff
0x107f: V938 = AND 0xffffffffffffffffffffffffffffffffffffffff V936
0x1081: V939 = 0x40
0x1083: V940 = M[0x40]
0x1085: V941 = 0xffffffff
0x108a: V942 = AND 0xffffffff 0xa9059cbb
0x108b: V943 = 0x100000000000000000000000000000000000000000000000000000000
0x10a9: V944 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x10ab: M[V940] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x10ac: V945 = 0x4
0x10ae: V946 = ADD 0x4 V940
0x10b1: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c6: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V938
0x10c7: V949 = 0xffffffffffffffffffffffffffffffffffffffff
0x10dc: V950 = AND 0xffffffffffffffffffffffffffffffffffffffff V948
0x10de: M[V946] = V950
0x10df: V951 = 0x20
0x10e1: V952 = ADD 0x20 V946
0x10e4: M[V952] = V926
0x10e5: V953 = 0x20
0x10e7: V954 = ADD 0x20 V952
0x10ec: V955 = 0x20
0x10ee: V956 = 0x40
0x10f0: V957 = M[0x40]
0x10f3: V958 = SUB V954 V957
0x10f5: V959 = 0x0
0x10f9: V960 = EXTCODESIZE V930
0x10fa: V961 = ISZERO V960
0x10fc: V962 = ISZERO V961
0x10fd: V963 = 0xce1
0x1100: THROWI V962
---
Entry stack: [V918, V919]
Stack pops: 0
Stack additions: [V961, V930, 0x0, V957, V958, V957, 0x20, V954, 0xa9059cbb, V930, V926, S3]
Exit stack: []

================================

Block 0x1101
[0x1101:0x110f]
---
Predecessors: [0x102a]
Successors: [0x1110]
---
0x1101 PUSH1 0x0
0x1103 DUP1
0x1104 REVERT
0x1105 JUMPDEST
0x1106 POP
0x1107 GAS
0x1108 CALL
0x1109 ISZERO
0x110a DUP1
0x110b ISZERO
0x110c PUSH2 0xcf5
0x110f JUMPI
---
0x1101: V964 = 0x0
0x1104: REVERT 0x0 0x0
0x1105: JUMPDEST 
0x1107: V965 = GAS
0x1108: V966 = CALL V965 S1 S2 S3 S4 S5 S6
0x1109: V967 = ISZERO V966
0x110b: V968 = ISZERO V967
0x110c: V969 = 0xcf5
0x110f: THROWI V968
---
Entry stack: [S11, V926, V930, 0xa9059cbb, V954, 0x20, V957, V958, V957, 0x0, V930, V961]
Stack pops: 0
Stack additions: [V967]
Exit stack: []

================================

Block 0x1110
[0x1110:0x112a]
---
Predecessors: [0x1101]
Successors: [0x112b]
---
0x1110 RETURNDATASIZE
0x1111 PUSH1 0x0
0x1113 DUP1
0x1114 RETURNDATACOPY
0x1115 RETURNDATASIZE
0x1116 PUSH1 0x0
0x1118 REVERT
0x1119 JUMPDEST
0x111a POP
0x111b POP
0x111c POP
0x111d POP
0x111e PUSH1 0x40
0x1120 MLOAD
0x1121 RETURNDATASIZE
0x1122 PUSH1 0x20
0x1124 DUP2
0x1125 LT
0x1126 ISZERO
0x1127 PUSH2 0xd0b
0x112a JUMPI
---
0x1110: V970 = RETURNDATASIZE
0x1111: V971 = 0x0
0x1114: RETURNDATACOPY 0x0 0x0 V970
0x1115: V972 = RETURNDATASIZE
0x1116: V973 = 0x0
0x1118: REVERT 0x0 V972
0x1119: JUMPDEST 
0x111e: V974 = 0x40
0x1120: V975 = M[0x40]
0x1121: V976 = RETURNDATASIZE
0x1122: V977 = 0x20
0x1125: V978 = LT V976 0x20
0x1126: V979 = ISZERO V978
0x1127: V980 = 0xd0b
0x112a: THROWI V979
---
Entry stack: [V967]
Stack pops: 0
Stack additions: [V976, V975]
Exit stack: []

================================

Block 0x112b
[0x112b:0x11c7]
---
Predecessors: [0x1110]
Successors: [0x11c8]
---
0x112b PUSH1 0x0
0x112d DUP1
0x112e REVERT
0x112f JUMPDEST
0x1130 DUP2
0x1131 ADD
0x1132 SWAP1
0x1133 DUP1
0x1134 DUP1
0x1135 MLOAD
0x1136 SWAP1
0x1137 PUSH1 0x20
0x1139 ADD
0x113a SWAP1
0x113b SWAP3
0x113c SWAP2
0x113d SWAP1
0x113e POP
0x113f POP
0x1140 POP
0x1141 POP
0x1142 PUSH1 0x0
0x1144 DUP1
0x1145 SWAP1
0x1146 SLOAD
0x1147 SWAP1
0x1148 PUSH2 0x100
0x114b EXP
0x114c SWAP1
0x114d DIV
0x114e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1163 AND
0x1164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1179 AND
0x117a DUP4
0x117b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1190 AND
0x1191 PUSH32 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c
0x11b2 DUP4
0x11b3 PUSH1 0x40
0x11b5 MLOAD
0x11b6 DUP1
0x11b7 DUP3
0x11b8 DUP2
0x11b9 MSTORE
0x11ba PUSH1 0x20
0x11bc ADD
0x11bd SWAP2
0x11be POP
0x11bf POP
0x11c0 PUSH1 0x40
0x11c2 MLOAD
0x11c3 DUP1
0x11c4 SWAP2
0x11c5 SUB
0x11c6 SWAP1
0x11c7 LOG3
---
0x112b: V981 = 0x0
0x112e: REVERT 0x0 0x0
0x112f: JUMPDEST 
0x1131: V982 = ADD S1 S0
0x1135: V983 = M[S1]
0x1137: V984 = 0x20
0x1139: V985 = ADD 0x20 S1
0x1142: V986 = 0x0
0x1146: V987 = S[0x0]
0x1148: V988 = 0x100
0x114b: V989 = EXP 0x100 0x0
0x114d: V990 = DIV V987 0x1
0x114e: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0x1163: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0x1164: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0x1179: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0x117b: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x1190: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1191: V997 = 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c
0x11b3: V998 = 0x40
0x11b5: V999 = M[0x40]
0x11b9: M[V999] = S2
0x11ba: V1000 = 0x20
0x11bc: V1001 = ADD 0x20 V999
0x11c0: V1002 = 0x40
0x11c2: V1003 = M[0x40]
0x11c5: V1004 = SUB V1001 V1003
0x11c7: LOG V1003 V1004 0xf931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c V996 V994
---
Entry stack: [V975, V976]
Stack pops: 0
Stack additions: [S2, S3, S4]
Exit stack: []

================================

Block 0x11c8
[0x11c8:0x123c]
---
Predecessors: [0x112b]
Successors: [0x123d]
---
0x11c8 JUMPDEST
0x11c9 POP
0x11ca POP
0x11cb POP
0x11cc JUMP
0x11cd JUMPDEST
0x11ce PUSH1 0x3
0x11d0 PUSH1 0x14
0x11d2 SWAP1
0x11d3 SLOAD
0x11d4 SWAP1
0x11d5 PUSH2 0x100
0x11d8 EXP
0x11d9 SWAP1
0x11da DIV
0x11db PUSH1 0xff
0x11dd AND
0x11de DUP2
0x11df JUMP
0x11e0 JUMPDEST
0x11e1 PUSH1 0x4
0x11e3 SLOAD
0x11e4 DUP2
0x11e5 JUMP
0x11e6 JUMPDEST
0x11e7 PUSH1 0x0
0x11e9 DUP1
0x11ea SWAP1
0x11eb SLOAD
0x11ec SWAP1
0x11ed PUSH2 0x100
0x11f0 EXP
0x11f1 SWAP1
0x11f2 DIV
0x11f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1208 AND
0x1209 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121e AND
0x121f CALLER
0x1220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1235 AND
0x1236 EQ
0x1237 ISZERO
0x1238 ISZERO
0x1239 PUSH2 0xe1d
0x123c JUMPI
---
0x11c8: JUMPDEST 
0x11cc: JUMP S3
0x11cd: JUMPDEST 
0x11ce: V1005 = 0x3
0x11d0: V1006 = 0x14
0x11d3: V1007 = S[0x3]
0x11d5: V1008 = 0x100
0x11d8: V1009 = EXP 0x100 0x14
0x11da: V1010 = DIV V1007 0x10000000000000000000000000000000000000000
0x11db: V1011 = 0xff
0x11dd: V1012 = AND 0xff V1010
0x11df: JUMP S0
0x11e0: JUMPDEST 
0x11e1: V1013 = 0x4
0x11e3: V1014 = S[0x4]
0x11e5: JUMP S0
0x11e6: JUMPDEST 
0x11e7: V1015 = 0x0
0x11eb: V1016 = S[0x0]
0x11ed: V1017 = 0x100
0x11f0: V1018 = EXP 0x100 0x0
0x11f2: V1019 = DIV V1016 0x1
0x11f3: V1020 = 0xffffffffffffffffffffffffffffffffffffffff
0x1208: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1019
0x1209: V1022 = 0xffffffffffffffffffffffffffffffffffffffff
0x121e: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V1021
0x121f: V1024 = CALLER
0x1220: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0x1235: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0x1236: V1027 = EQ V1026 V1023
0x1237: V1028 = ISZERO V1027
0x1238: V1029 = ISZERO V1028
0x1239: V1030 = 0xe1d
0x123c: THROWI V1029
---
Entry stack: [S2, S1, S0]
Stack pops: 26
Stack additions: []
Exit stack: []

================================

Block 0x123d
[0x123d:0x12c1]
---
Predecessors: [0x11c8]
Successors: []
---
0x123d PUSH1 0x0
0x123f DUP1
0x1240 REVERT
0x1241 JUMPDEST
0x1242 DUP1
0x1243 PUSH1 0x1
0x1245 PUSH1 0x0
0x1247 PUSH2 0x100
0x124a EXP
0x124b DUP2
0x124c SLOAD
0x124d DUP2
0x124e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1263 MUL
0x1264 NOT
0x1265 AND
0x1266 SWAP1
0x1267 DUP4
0x1268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127d AND
0x127e MUL
0x127f OR
0x1280 SWAP1
0x1281 SSTORE
0x1282 POP
0x1283 POP
0x1284 JUMP
0x1285 STOP
0x1286 LOG1
0x1287 PUSH6 0x627a7a723058
0x128e SHA3
0x128f MISSING 0xe6
0x1290 PUSH3 0x441b3d
0x1294 MISSING 0xe7
0x1295 MISSING 0x5e
0x1296 DIV
0x1297 MISSING 0xbd
0x1298 SWAP10
0x1299 ADDMOD
0x129a LOG1
0x129b CREATE
0x129c MISSING 0xa5
0x129d SELFDESTRUCT
0x129e SWAP4
0x129f DUP1
0x12a0 MISSING 0x23
0x12a1 DUP14
0x12a2 SWAP7
0x12a3 STATICCALL
0x12a4 MISSING 0x22
0x12a5 MSTORE
0x12a6 MISSING 0x5d
0x12a7 DUP15
0x12a8 PUSH25 0xaf4d067c90070029
---
0x123d: V1031 = 0x0
0x1240: REVERT 0x0 0x0
0x1241: JUMPDEST 
0x1243: V1032 = 0x1
0x1245: V1033 = 0x0
0x1247: V1034 = 0x100
0x124a: V1035 = EXP 0x100 0x0
0x124c: V1036 = S[0x1]
0x124e: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0x1263: V1038 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1264: V1039 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1265: V1040 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1036
0x1268: V1041 = 0xffffffffffffffffffffffffffffffffffffffff
0x127d: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x127e: V1043 = MUL V1042 0x1
0x127f: V1044 = OR V1043 V1040
0x1281: S[0x1] = V1044
0x1284: JUMP S1
0x1285: STOP 
0x1286: LOG S0 S1 S2
0x1287: V1045 = 0x627a7a723058
0x128e: V1046 = SHA3 0x627a7a723058 S3
0x128f: MISSING 0xe6
0x1290: V1047 = 0x441b3d
0x1294: MISSING 0xe7
0x1295: MISSING 0x5e
0x1296: V1048 = DIV S0 S1
0x1297: MISSING 0xbd
0x1299: V1049 = ADDMOD S10 S1 S2
0x129a: LOG V1049 S3 S4
0x129b: V1050 = CREATE S5 S6 S7
0x129c: MISSING 0xa5
0x129d: SELFDESTRUCT S0
0x12a0: MISSING 0x23
0x12a3: V1051 = STATICCALL S6 S0 S1 S2 S3 S4
0x12a4: MISSING 0x22
0x12a5: M[S0] = S1
0x12a6: MISSING 0x5d
0x12a8: V1052 = 0xaf4d067c90070029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1046, 0x441b3d, V1048, V1050, S8, S9, S0, S4, S4, S1, S2, S3, S0, V1051, S5, S13, S7, S8, S9, S10, S11, S12, S13, 0xaf4d067c90070029, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x79ba5097
Entry block: 0x67
Exit block: 0x7c
Body: 0x67, 0x6f, 0x73, 0x7c, 0x16f, 0x1c7, 0x1cb

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x7e
Exit block: 0x93
Body: 0x7e, 0x86, 0x8a, 0x93, 0x30e

Function 2:
Public function signature: 0xd4ee1d90
Entry block: 0xd5
Exit block: 0xea
Body: 0xd5, 0xdd, 0xe1, 0xea, 0x333

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x12c
Exit block: 0x16d
Body: 0x12c, 0x134, 0x138, 0x16d, 0x359, 0x3b0, 0x3b4

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

