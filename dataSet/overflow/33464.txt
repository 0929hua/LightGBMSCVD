Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xf2fde38b
0x34 EQ
0x35 PUSH2 0x3e
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xf2fde38b
0x34: V9 = EQ 0xf2fde38b V7
0x35: V10 = 0x3e
0x38: JUMPI 0x3e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3d]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a PUSH1 0x0
0x3c DUP1
0x3d REVERT
---
0x39: JUMPDEST 
0x3a: V11 = 0x0
0x3d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3e
[0x3e:0x44]
---
Predecessors: [0x0]
Successors: [0x45, 0x49]
---
0x3e JUMPDEST
0x3f CALLVALUE
0x40 ISZERO
0x41 PUSH2 0x49
0x44 JUMPI
---
0x3e: JUMPDEST 
0x3f: V12 = CALLVALUE
0x40: V13 = ISZERO V12
0x41: V14 = 0x49
0x44: JUMPI 0x49 V13
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x45
[0x45:0x48]
---
Predecessors: [0x3e]
Successors: []
---
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x45: V15 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0x74]
---
Predecessors: [0x3e, 0x112]
Successors: [0x77]
---
0x49 JUMPDEST
0x4a PUSH2 0x75
0x4d PUSH1 0x4
0x4f DUP1
0x50 DUP1
0x51 CALLDATALOAD
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 SWAP1
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d SWAP2
0x6e SWAP1
0x6f POP
0x70 POP
0x71 PUSH2 0x77
0x74 JUMP
---
0x49: JUMPDEST 
0x4a: V16 = 0x75
0x4d: V17 = 0x4
0x51: V18 = CALLDATALOAD 0x4
0x52: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x69: V21 = 0x20
0x6b: V22 = ADD 0x20 0x4
0x71: V23 = 0x77
0x74: JUMP 0x77
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0x75, V20]
Exit stack: [S0, 0x75, V20]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x10f]
Successors: []
---
0x75 JUMPDEST
0x76 STOP
---
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x77
[0x77:0xcc]
---
Predecessors: [0x49]
Successors: [0xcd, 0x10e]
---
0x77 JUMPDEST
0x78 PUSH1 0x0
0x7a DUP1
0x7b SWAP1
0x7c SLOAD
0x7d SWAP1
0x7e PUSH2 0x100
0x81 EXP
0x82 SWAP1
0x83 DIV
0x84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99 AND
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 CALLER
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 EQ
0xc8 ISZERO
0xc9 PUSH2 0x10e
0xcc JUMPI
---
0x77: JUMPDEST 
0x78: V24 = 0x0
0x7c: V25 = S[0x0]
0x7e: V26 = 0x100
0x81: V27 = EXP 0x100 0x0
0x83: V28 = DIV V25 0x1
0x84: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x99: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x9a: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0xb0: V33 = CALLER
0xb1: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xc7: V36 = EQ V35 V32
0xc8: V37 = ISZERO V36
0xc9: V38 = 0x10e
0xcc: JUMPI 0x10e V37
---
Entry stack: [S2, 0x75, V20]
Stack pops: 0
Stack additions: []
Exit stack: [S2, 0x75, V20]

================================

Block 0xcd
[0xcd:0x10c]
---
Predecessors: [0x77]
Successors: [0x10d]
---
0xcd DUP1
0xce PUSH1 0x0
0xd0 DUP1
0xd1 PUSH2 0x100
0xd4 EXP
0xd5 DUP2
0xd6 SLOAD
0xd7 DUP2
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed MUL
0xee NOT
0xef AND
0xf0 SWAP1
0xf1 DUP4
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 MUL
0x109 OR
0x10a SWAP1
0x10b SSTORE
0x10c POP
---
0xce: V39 = 0x0
0xd1: V40 = 0x100
0xd4: V41 = EXP 0x100 0x0
0xd6: V42 = S[0x0]
0xd8: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V44 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xee: V45 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xef: V46 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V42
0xf2: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x108: V49 = MUL V48 0x1
0x109: V50 = OR V49 V46
0x10b: S[0x0] = V50
---
Entry stack: [S2, 0x75, V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S2, 0x75, V20]

================================

Block 0x10d
[0x10d:0x10d]
---
Predecessors: [0xcd]
Successors: [0x10e]
---
0x10d JUMPDEST
---
0x10d: JUMPDEST 
---
Entry stack: [S2, 0x75, V20]
Stack pops: 0
Stack additions: []
Exit stack: [S2, 0x75, V20]

================================

Block 0x10e
[0x10e:0x10e]
---
Predecessors: [0x77, 0x10d]
Successors: [0x10f]
---
0x10e JUMPDEST
---
0x10e: JUMPDEST 
---
Entry stack: [S2, 0x75, V20]
Stack pops: 0
Stack additions: []
Exit stack: [S2, 0x75, V20]

================================

Block 0x10f
[0x10f:0x111]
---
Predecessors: [0x10e]
Successors: [0x75]
---
0x10f JUMPDEST
0x110 POP
0x111 JUMP
---
0x10f: JUMPDEST 
0x111: JUMP 0x75
---
Entry stack: [S2, 0x75, V20]
Stack pops: 2
Stack additions: []
Exit stack: [S2]

================================

Block 0x112
[0x112:0x176]
---
Predecessors: []
Successors: [0x49, 0x177]
---
0x112 STOP
0x113 LOG1
0x114 PUSH6 0x627a7a723058
0x11b SHA3
0x11c PUSH3 0x7c6a35
0x120 SWAP11
0x121 DUP15
0x122 SWAP13
0x123 LOG3
0x124 MISSING 0xcb
0x125 PUSH10 0x1a7588df4b818dbb12db
0x130 SWAP9
0x131 MISSING 0xb5
0x132 MISSING 0x4b
0x133 MISSING 0x48
0x134 PUSH27 0x6db76ce2aad0a9002960606040526000357c010000000000000000
0x150 STOP
0x151 STOP
0x152 STOP
0x153 STOP
0x154 STOP
0x155 STOP
0x156 STOP
0x157 STOP
0x158 STOP
0x159 STOP
0x15a STOP
0x15b STOP
0x15c STOP
0x15d STOP
0x15e STOP
0x15f STOP
0x160 STOP
0x161 STOP
0x162 STOP
0x163 STOP
0x164 SWAP1
0x165 DIV
0x166 PUSH4 0xffffffff
0x16b AND
0x16c DUP1
0x16d PUSH4 0x223c217b
0x172 EQ
0x173 PUSH2 0x49
0x176 JUMPI
---
0x112: STOP 
0x113: LOG S0 S1 S2
0x114: V51 = 0x627a7a723058
0x11b: V52 = SHA3 0x627a7a723058 S3
0x11c: V53 = 0x7c6a35
0x123: LOG S14 S13 V52 S4 S5
0x124: MISSING 0xcb
0x125: V54 = 0x1a7588df4b818dbb12db
0x131: MISSING 0xb5
0x132: MISSING 0x4b
0x133: MISSING 0x48
0x134: V55 = 0x6db76ce2aad0a9002960606040526000357c010000000000000000
0x150: STOP 
0x151: STOP 
0x152: STOP 
0x153: STOP 
0x154: STOP 
0x155: STOP 
0x156: STOP 
0x157: STOP 
0x158: STOP 
0x159: STOP 
0x15a: STOP 
0x15b: STOP 
0x15c: STOP 
0x15d: STOP 
0x15e: STOP 
0x15f: STOP 
0x160: STOP 
0x161: STOP 
0x162: STOP 
0x163: STOP 
0x165: V56 = DIV S1 S0
0x166: V57 = 0xffffffff
0x16b: V58 = AND 0xffffffff V56
0x16d: V59 = 0x223c217b
0x172: V60 = EQ 0x223c217b V58
0x173: V61 = 0x49
0x176: JUMPI 0x49 V60
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S7, S8, S9, S10, S11, S12, 0x7c6a35, S16, S15, S16, S8, S0, S1, S2, S3, S4, S5, S6, S7, 0x1a7588df4b818dbb12db, 0x6db76ce2aad0a9002960606040526000357c010000000000000000, V58]
Exit stack: []

================================

Block 0x177
[0x177:0x181]
---
Predecessors: [0x112]
Successors: [0x182]
---
0x177 DUP1
0x178 PUSH4 0xf2fde38b
0x17d EQ
0x17e PUSH2 0xc2
0x181 JUMPI
---
0x178: V62 = 0xf2fde38b
0x17d: V63 = EQ 0xf2fde38b V58
0x17e: V64 = 0xc2
0x181: THROWI V63
---
Entry stack: [V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V58]

================================

Block 0x182
[0x182:0x18d]
---
Predecessors: [0x177]
Successors: [0x18e]
---
0x182 JUMPDEST
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
0x187 JUMPDEST
0x188 CALLVALUE
0x189 ISZERO
0x18a PUSH2 0x54
0x18d JUMPI
---
0x182: JUMPDEST 
0x183: V65 = 0x0
0x186: REVERT 0x0 0x0
0x187: JUMPDEST 
0x188: V66 = CALLVALUE
0x189: V67 = ISZERO V66
0x18a: V68 = 0x54
0x18d: THROWI V67
---
Entry stack: [V58]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18e
[0x18e:0x206]
---
Predecessors: [0x182]
Successors: [0x207]
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
0x192 JUMPDEST
0x193 PUSH2 0xa8
0x196 PUSH1 0x4
0x198 DUP1
0x199 DUP1
0x19a CALLDATALOAD
0x19b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b0 AND
0x1b1 SWAP1
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 SWAP1
0x1b6 SWAP2
0x1b7 SWAP1
0x1b8 DUP1
0x1b9 CALLDATALOAD
0x1ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cf AND
0x1d0 SWAP1
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP1
0x1d5 SWAP2
0x1d6 SWAP1
0x1d7 DUP1
0x1d8 CALLDATALOAD
0x1d9 SWAP1
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP1
0x1de SWAP2
0x1df SWAP1
0x1e0 POP
0x1e1 POP
0x1e2 PUSH2 0xfb
0x1e5 JUMP
0x1e6 JUMPDEST
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb DUP3
0x1ec ISZERO
0x1ed ISZERO
0x1ee ISZERO
0x1ef ISZERO
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 SWAP2
0x1f6 POP
0x1f7 POP
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc SWAP2
0x1fd SUB
0x1fe SWAP1
0x1ff RETURN
0x200 JUMPDEST
0x201 CALLVALUE
0x202 ISZERO
0x203 PUSH2 0xcd
0x206 JUMPI
---
0x18e: V69 = 0x0
0x191: REVERT 0x0 0x0
0x192: JUMPDEST 
0x193: V70 = 0xa8
0x196: V71 = 0x4
0x19a: V72 = CALLDATALOAD 0x4
0x19b: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x1b2: V75 = 0x20
0x1b4: V76 = ADD 0x20 0x4
0x1b9: V77 = CALLDATALOAD 0x24
0x1ba: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cf: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x1d1: V80 = 0x20
0x1d3: V81 = ADD 0x20 0x24
0x1d8: V82 = CALLDATALOAD 0x44
0x1da: V83 = 0x20
0x1dc: V84 = ADD 0x20 0x44
0x1e2: V85 = 0xfb
0x1e5: THROW 
0x1e6: JUMPDEST 
0x1e7: V86 = 0x40
0x1e9: V87 = M[0x40]
0x1ec: V88 = ISZERO S0
0x1ed: V89 = ISZERO V88
0x1ee: V90 = ISZERO V89
0x1ef: V91 = ISZERO V90
0x1f1: M[V87] = V91
0x1f2: V92 = 0x20
0x1f4: V93 = ADD 0x20 V87
0x1f8: V94 = 0x40
0x1fa: V95 = M[0x40]
0x1fd: V96 = SUB V93 V95
0x1ff: RETURN V95 V96
0x200: JUMPDEST 
0x201: V97 = CALLVALUE
0x202: V98 = ISZERO V97
0x203: V99 = 0xcd
0x206: THROWI V98
---
Entry stack: []
Stack pops: 0
Stack additions: [V82, V79, V74, 0xa8]
Exit stack: []

================================

Block 0x207
[0x207:0x290]
---
Predecessors: [0x18e]
Successors: [0x291]
---
0x207 PUSH1 0x0
0x209 DUP1
0x20a REVERT
0x20b JUMPDEST
0x20c PUSH2 0xf9
0x20f PUSH1 0x4
0x211 DUP1
0x212 DUP1
0x213 CALLDATALOAD
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a SWAP1
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f SWAP2
0x230 SWAP1
0x231 POP
0x232 POP
0x233 PUSH2 0x23c
0x236 JUMP
0x237 JUMPDEST
0x238 STOP
0x239 JUMPDEST
0x23a PUSH1 0x0
0x23c DUP1
0x23d PUSH1 0x0
0x23f SWAP1
0x240 SLOAD
0x241 SWAP1
0x242 PUSH2 0x100
0x245 EXP
0x246 SWAP1
0x247 DIV
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 CALLER
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b EQ
0x28c ISZERO
0x28d PUSH2 0x234
0x290 JUMPI
---
0x207: V100 = 0x0
0x20a: REVERT 0x0 0x0
0x20b: JUMPDEST 
0x20c: V101 = 0xf9
0x20f: V102 = 0x4
0x213: V103 = CALLDATALOAD 0x4
0x214: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x22b: V106 = 0x20
0x22d: V107 = ADD 0x20 0x4
0x233: V108 = 0x23c
0x236: THROW 
0x237: JUMPDEST 
0x238: STOP 
0x239: JUMPDEST 
0x23a: V109 = 0x0
0x23d: V110 = 0x0
0x240: V111 = S[0x0]
0x242: V112 = 0x100
0x245: V113 = EXP 0x100 0x0
0x247: V114 = DIV V111 0x1
0x248: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x25e: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x274: V119 = CALLER
0x275: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x28b: V122 = EQ V121 V118
0x28c: V123 = ISZERO V122
0x28d: V124 = 0x234
0x290: THROWI V123
---
Entry stack: []
Stack pops: 0
Stack additions: [V105, 0xf9, 0x0]
Exit stack: []

================================

Block 0x291
[0x291:0x370]
---
Predecessors: [0x207]
Successors: [0x371]
---
0x291 DUP4
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 PUSH4 0xa9059cbb
0x2ad PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2cb MUL
0x2cc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2ea SWAP1
0x2eb DIV
0x2ec DUP5
0x2ed DUP5
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 DUP4
0x2f2 PUSH4 0xffffffff
0x2f7 AND
0x2f8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x316 MUL
0x317 DUP2
0x318 MSTORE
0x319 PUSH1 0x4
0x31b ADD
0x31c DUP1
0x31d DUP4
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 AND
0x334 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x349 AND
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0x20
0x34e ADD
0x34f DUP3
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP3
0x356 POP
0x357 POP
0x358 POP
0x359 PUSH1 0x0
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f DUP4
0x360 SUB
0x361 DUP2
0x362 PUSH1 0x0
0x364 DUP8
0x365 PUSH2 0x646e
0x368 GAS
0x369 SUB
0x36a CALL
0x36b SWAP3
0x36c POP
0x36d POP
0x36e POP
0x36f SWAP1
0x370 POP
---
0x292: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x2a8: V127 = 0xa9059cbb
0x2ad: V128 = 0x100000000000000000000000000000000000000000000000000000000
0x2cb: V129 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2cc: V130 = 0x100000000000000000000000000000000000000000000000000000000
0x2eb: V131 = DIV 0xa9059cbb00000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000
0x2ee: V132 = 0x40
0x2f0: V133 = M[0x40]
0x2f2: V134 = 0xffffffff
0x2f7: V135 = AND 0xffffffff 0xa9059cbb
0x2f8: V136 = 0x100000000000000000000000000000000000000000000000000000000
0x316: V137 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x318: M[V133] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x319: V138 = 0x4
0x31b: V139 = ADD 0x4 V133
0x31e: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x334: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x349: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x34b: M[V139] = V143
0x34c: V144 = 0x20
0x34e: V145 = ADD 0x20 V139
0x351: M[V145] = S1
0x352: V146 = 0x20
0x354: V147 = ADD 0x20 V145
0x359: V148 = 0x0
0x35b: V149 = 0x40
0x35d: V150 = M[0x40]
0x360: V151 = SUB V147 V150
0x362: V152 = 0x0
0x365: V153 = 0x646e
0x368: V154 = GAS
0x369: V155 = SUB V154 0x646e
0x36a: V156 = CALL V155 V126 0x0 V150 V151 V150 0x0
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V156]
Exit stack: [S2, S1, S0, V156]

================================

Block 0x371
[0x371:0x371]
---
Predecessors: [0x291]
Successors: [0x372]
---
0x371 JUMPDEST
---
0x371: JUMPDEST 
---
Entry stack: [S3, S2, S1, V156]
Stack pops: 0
Stack additions: []
Exit stack: [S3, S2, S1, V156]

================================

Block 0x372
[0x372:0x372]
---
Predecessors: [0x371]
Successors: [0x373]
---
0x372 JUMPDEST
---
0x372: JUMPDEST 
---
Entry stack: [S3, S2, S1, V156]
Stack pops: 0
Stack additions: []
Exit stack: [S3, S2, S1, V156]

================================

Block 0x373
[0x373:0x3cf]
---
Predecessors: [0x372]
Successors: [0x3d0]
---
0x373 JUMPDEST
0x374 SWAP4
0x375 SWAP3
0x376 POP
0x377 POP
0x378 POP
0x379 JUMP
0x37a JUMPDEST
0x37b PUSH1 0x0
0x37d DUP1
0x37e SWAP1
0x37f SLOAD
0x380 SWAP1
0x381 PUSH2 0x100
0x384 EXP
0x385 SWAP1
0x386 DIV
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 CALLER
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca EQ
0x3cb ISZERO
0x3cc PUSH2 0x2d3
0x3cf JUMPI
---
0x373: JUMPDEST 
0x379: JUMP S4
0x37a: JUMPDEST 
0x37b: V157 = 0x0
0x37f: V158 = S[0x0]
0x381: V159 = 0x100
0x384: V160 = EXP 0x100 0x0
0x386: V161 = DIV V158 0x1
0x387: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x39d: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x3b3: V166 = CALLER
0x3b4: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x3ca: V169 = EQ V168 V165
0x3cb: V170 = ISZERO V169
0x3cc: V171 = 0x2d3
0x3cf: THROWI V170
---
Entry stack: [S3, S2, S1, V156]
Stack pops: 9
Stack additions: []
Exit stack: []

================================

Block 0x3d0
[0x3d0:0x40f]
---
Predecessors: [0x373]
Successors: [0x410]
---
0x3d0 DUP1
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 PUSH2 0x100
0x3d7 EXP
0x3d8 DUP2
0x3d9 SLOAD
0x3da DUP2
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 MUL
0x3f1 NOT
0x3f2 AND
0x3f3 SWAP1
0x3f4 DUP4
0x3f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40a AND
0x40b MUL
0x40c OR
0x40d SWAP1
0x40e SSTORE
0x40f POP
---
0x3d1: V172 = 0x0
0x3d4: V173 = 0x100
0x3d7: V174 = EXP 0x100 0x0
0x3d9: V175 = S[0x0]
0x3db: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V177 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3f1: V178 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: V179 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V175
0x3f5: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x40a: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x40b: V182 = MUL V181 0x1
0x40c: V183 = OR V182 V179
0x40e: S[0x0] = V183
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x3d0]
Successors: [0x411]
---
0x410 JUMPDEST
---
0x410: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x411
[0x411:0x411]
---
Predecessors: [0x410]
Successors: [0x412]
---
0x411 JUMPDEST
---
0x411: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x412
[0x412:0x44b]
---
Predecessors: [0x411]
Successors: [0x44c]
---
0x412 JUMPDEST
0x413 POP
0x414 JUMP
0x415 STOP
0x416 LOG1
0x417 PUSH6 0x627a7a723058
0x41e SHA3
0x41f LOG0
0x420 CALLDATASIZE
0x421 MISSING 0xd0
0x422 MISSING 0x5e
0x423 SWAP8
0x424 MISSING 0xbc
0x425 MISSING 0xab
0x426 AND
0x427 MISSING 0x5e
0x428 MISSING 0xec
0x429 MISSING 0x4a
0x42a AND
0x42b COINBASE
0x42c MISSING 0xba
0x42d SMOD
0x42e MISSING 0x2e
0x42f SGT
0x430 DUP3
0x431 SLT
0x432 MISSING 0xe
0x433 SWAP14
0x434 PUSH17 0xb681e85ae16794fe898d00296060604052
0x446 CALLDATASIZE
0x447 ISZERO
0x448 PUSH2 0xc3
0x44b JUMPI
---
0x412: JUMPDEST 
0x414: JUMP S1
0x415: STOP 
0x416: LOG S0 S1 S2
0x417: V184 = 0x627a7a723058
0x41e: V185 = SHA3 0x627a7a723058 S3
0x41f: LOG V185 S4
0x420: V186 = CALLDATASIZE
0x421: MISSING 0xd0
0x422: MISSING 0x5e
0x424: MISSING 0xbc
0x425: MISSING 0xab
0x426: V187 = AND S0 S1
0x427: MISSING 0x5e
0x428: MISSING 0xec
0x429: MISSING 0x4a
0x42a: V188 = AND S0 S1
0x42b: V189 = COINBASE
0x42c: MISSING 0xba
0x42d: V190 = SMOD S0 S1
0x42e: MISSING 0x2e
0x42f: V191 = SGT S0 S1
0x431: V192 = SLT S3 V191
0x432: MISSING 0xe
0x434: V193 = 0xb681e85ae16794fe898d00296060604052
0x446: V194 = CALLDATASIZE
0x447: V195 = ISZERO V194
0x448: V196 = 0xc3
0x44b: THROWI V195
---
Entry stack: [S0]
Stack pops: 6483
Stack additions: [0xb681e85ae16794fe898d00296060604052, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Block 0x44c
[0x44c:0x47f]
---
Predecessors: [0x412]
Successors: [0x480]
---
0x44c PUSH1 0x0
0x44e CALLDATALOAD
0x44f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x46d SWAP1
0x46e DIV
0x46f PUSH4 0xffffffff
0x474 AND
0x475 DUP1
0x476 PUSH4 0x223c217b
0x47b EQ
0x47c PUSH2 0xcf
0x47f JUMPI
---
0x44c: V197 = 0x0
0x44e: V198 = CALLDATALOAD 0x0
0x44f: V199 = 0x100000000000000000000000000000000000000000000000000000000
0x46e: V200 = DIV V198 0x100000000000000000000000000000000000000000000000000000000
0x46f: V201 = 0xffffffff
0x474: V202 = AND 0xffffffff V200
0x476: V203 = 0x223c217b
0x47b: V204 = EQ 0x223c217b V202
0x47c: V205 = 0xcf
0x47f: THROWI V204
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xb681e85ae16794fe898d00296060604052]
Stack pops: 0
Stack additions: [V202]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x480
[0x480:0x48a]
---
Predecessors: [0x44c]
Successors: [0x48b]
---
0x480 DUP1
0x481 PUSH4 0x3ee2d7c2
0x486 EQ
0x487 PUSH2 0x148
0x48a JUMPI
---
0x481: V206 = 0x3ee2d7c2
0x486: V207 = EQ 0x3ee2d7c2 V202
0x487: V208 = 0x148
0x48a: THROWI V207
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x48b
[0x48b:0x495]
---
Predecessors: [0x480]
Successors: [0x496]
---
0x48b DUP1
0x48c PUSH4 0x41c0e1b5
0x491 EQ
0x492 PUSH2 0x195
0x495 JUMPI
---
0x48c: V209 = 0x41c0e1b5
0x491: V210 = EQ 0x41c0e1b5 V202
0x492: V211 = 0x195
0x495: THROWI V210
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x496
[0x496:0x4a0]
---
Predecessors: [0x48b]
Successors: [0x4a1]
---
0x496 DUP1
0x497 PUSH4 0x893d20e8
0x49c EQ
0x49d PUSH2 0x1aa
0x4a0 JUMPI
---
0x497: V212 = 0x893d20e8
0x49c: V213 = EQ 0x893d20e8 V202
0x49d: V214 = 0x1aa
0x4a0: THROWI V213
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4a1
[0x4a1:0x4ab]
---
Predecessors: [0x496]
Successors: [0x4ac]
---
0x4a1 DUP1
0x4a2 PUSH4 0x8cf49cad
0x4a7 EQ
0x4a8 PUSH2 0x1ff
0x4ab JUMPI
---
0x4a2: V215 = 0x8cf49cad
0x4a7: V216 = EQ 0x8cf49cad V202
0x4a8: V217 = 0x1ff
0x4ab: THROWI V216
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4ac
[0x4ac:0x4b6]
---
Predecessors: [0x4a1]
Successors: [0x4b7]
---
0x4ac DUP1
0x4ad PUSH4 0xbe3eac25
0x4b2 EQ
0x4b3 PUSH2 0x228
0x4b6 JUMPI
---
0x4ad: V218 = 0xbe3eac25
0x4b2: V219 = EQ 0xbe3eac25 V202
0x4b3: V220 = 0x228
0x4b6: THROWI V219
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4b7
[0x4b7:0x4c1]
---
Predecessors: [0x4ac]
Successors: [0x4c2]
---
0x4b7 DUP1
0x4b8 PUSH4 0xc635a9f2
0x4bd EQ
0x4be PUSH2 0x255
0x4c1 JUMPI
---
0x4b8: V221 = 0xc635a9f2
0x4bd: V222 = EQ 0xc635a9f2 V202
0x4be: V223 = 0x255
0x4c1: THROWI V222
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4c2
[0x4c2:0x4cc]
---
Predecessors: [0x4b7]
Successors: [0x4cd]
---
0x4c2 DUP1
0x4c3 PUSH4 0xcfa4f3e8
0x4c8 EQ
0x4c9 PUSH2 0x27e
0x4cc JUMPI
---
0x4c3: V224 = 0xcfa4f3e8
0x4c8: V225 = EQ 0xcfa4f3e8 V202
0x4c9: V226 = 0x27e
0x4cc: THROWI V225
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4cd
[0x4cd:0x4d7]
---
Predecessors: [0x4c2]
Successors: [0x4d8]
---
0x4cd DUP1
0x4ce PUSH4 0xd0e30db0
0x4d3 EQ
0x4d4 PUSH2 0x2a1
0x4d7 JUMPI
---
0x4ce: V227 = 0xd0e30db0
0x4d3: V228 = EQ 0xd0e30db0 V202
0x4d4: V229 = 0x2a1
0x4d7: THROWI V228
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4d8
[0x4d8:0x4e2]
---
Predecessors: [0x4cd]
Successors: [0x4e3]
---
0x4d8 DUP1
0x4d9 PUSH4 0xe1c7392a
0x4de EQ
0x4df PUSH2 0x2ab
0x4e2 JUMPI
---
0x4d9: V230 = 0xe1c7392a
0x4de: V231 = EQ 0xe1c7392a V202
0x4df: V232 = 0x2ab
0x4e2: THROWI V231
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4e3
[0x4e3:0x4ed]
---
Predecessors: [0x4d8]
Successors: [0x4ee]
---
0x4e3 DUP1
0x4e4 PUSH4 0xf2fde38b
0x4e9 EQ
0x4ea PUSH2 0x2b5
0x4ed JUMPI
---
0x4e4: V233 = 0xf2fde38b
0x4e9: V234 = EQ 0xf2fde38b V202
0x4ea: V235 = 0x2b5
0x4ed: THROWI V234
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4ee
[0x4ee:0x4f8]
---
Predecessors: [0x4e3]
Successors: [0x4f9]
---
0x4ee DUP1
0x4ef PUSH4 0xf3fef3a3
0x4f4 EQ
0x4f5 PUSH2 0x2ee
0x4f8 JUMPI
---
0x4ef: V236 = 0xf3fef3a3
0x4f4: V237 = EQ 0xf3fef3a3 V202
0x4f5: V238 = 0x2ee
0x4f8: THROWI V237
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x4f9
[0x4f9:0x503]
---
Predecessors: [0x4ee]
Successors: [0x504]
---
0x4f9 DUP1
0x4fa PUSH4 0xf83d08ba
0x4ff EQ
0x500 PUSH2 0x330
0x503 JUMPI
---
0x4fa: V239 = 0xf83d08ba
0x4ff: V240 = EQ 0xf83d08ba V202
0x500: V241 = 0x330
0x503: THROWI V240
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x504
[0x504:0x504]
---
Predecessors: [0x4f9]
Successors: [0x505]
---
0x504 JUMPDEST
---
0x504: JUMPDEST 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]

================================

Block 0x505
[0x505:0x50d]
---
Predecessors: [0x504]
Successors: [0x50e]
---
0x505 JUMPDEST
0x506 PUSH2 0xcc
0x509 PUSH2 0x345
0x50c JUMP
0x50d JUMPDEST
---
0x505: JUMPDEST 
0x506: V242 = 0xcc
0x509: V243 = 0x345
0x50c: THROW 
0x50d: JUMPDEST 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xb681e85ae16794fe898d00296060604052, V202]
Stack pops: 0
Stack additions: [0xcc]
Exit stack: []

================================

Block 0x50e
[0x50e:0x516]
---
Predecessors: [0x505]
Successors: [0x517]
---
0x50e JUMPDEST
0x50f STOP
0x510 JUMPDEST
0x511 CALLVALUE
0x512 ISZERO
0x513 PUSH2 0xda
0x516 JUMPI
---
0x50e: JUMPDEST 
0x50f: STOP 
0x510: JUMPDEST 
0x511: V244 = CALLVALUE
0x512: V245 = ISZERO V244
0x513: V246 = 0xda
0x516: THROWI V245
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x517
[0x517:0x58f]
---
Predecessors: [0x50e]
Successors: [0x590]
---
0x517 PUSH1 0x0
0x519 DUP1
0x51a REVERT
0x51b JUMPDEST
0x51c PUSH2 0x12e
0x51f PUSH1 0x4
0x521 DUP1
0x522 DUP1
0x523 CALLDATALOAD
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 AND
0x53a SWAP1
0x53b PUSH1 0x20
0x53d ADD
0x53e SWAP1
0x53f SWAP2
0x540 SWAP1
0x541 DUP1
0x542 CALLDATALOAD
0x543 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x558 AND
0x559 SWAP1
0x55a PUSH1 0x20
0x55c ADD
0x55d SWAP1
0x55e SWAP2
0x55f SWAP1
0x560 DUP1
0x561 CALLDATALOAD
0x562 SWAP1
0x563 PUSH1 0x20
0x565 ADD
0x566 SWAP1
0x567 SWAP2
0x568 SWAP1
0x569 POP
0x56a POP
0x56b PUSH2 0x3fe
0x56e JUMP
0x56f JUMPDEST
0x570 PUSH1 0x40
0x572 MLOAD
0x573 DUP1
0x574 DUP3
0x575 ISZERO
0x576 ISZERO
0x577 ISZERO
0x578 ISZERO
0x579 DUP2
0x57a MSTORE
0x57b PUSH1 0x20
0x57d ADD
0x57e SWAP2
0x57f POP
0x580 POP
0x581 PUSH1 0x40
0x583 MLOAD
0x584 DUP1
0x585 SWAP2
0x586 SUB
0x587 SWAP1
0x588 RETURN
0x589 JUMPDEST
0x58a CALLVALUE
0x58b ISZERO
0x58c PUSH2 0x153
0x58f JUMPI
---
0x517: V247 = 0x0
0x51a: REVERT 0x0 0x0
0x51b: JUMPDEST 
0x51c: V248 = 0x12e
0x51f: V249 = 0x4
0x523: V250 = CALLDATALOAD 0x4
0x524: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x539: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x53b: V253 = 0x20
0x53d: V254 = ADD 0x20 0x4
0x542: V255 = CALLDATALOAD 0x24
0x543: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x558: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x55a: V258 = 0x20
0x55c: V259 = ADD 0x20 0x24
0x561: V260 = CALLDATALOAD 0x44
0x563: V261 = 0x20
0x565: V262 = ADD 0x20 0x44
0x56b: V263 = 0x3fe
0x56e: THROW 
0x56f: JUMPDEST 
0x570: V264 = 0x40
0x572: V265 = M[0x40]
0x575: V266 = ISZERO S0
0x576: V267 = ISZERO V266
0x577: V268 = ISZERO V267
0x578: V269 = ISZERO V268
0x57a: M[V265] = V269
0x57b: V270 = 0x20
0x57d: V271 = ADD 0x20 V265
0x581: V272 = 0x40
0x583: V273 = M[0x40]
0x586: V274 = SUB V271 V273
0x588: RETURN V273 V274
0x589: JUMPDEST 
0x58a: V275 = CALLVALUE
0x58b: V276 = ISZERO V275
0x58c: V277 = 0x153
0x58f: THROWI V276
---
Entry stack: []
Stack pops: 0
Stack additions: [V260, V257, V252, 0x12e]
Exit stack: []

================================

Block 0x590
[0x590:0x5dc]
---
Predecessors: [0x517]
Successors: [0x5dd]
---
0x590 PUSH1 0x0
0x592 DUP1
0x593 REVERT
0x594 JUMPDEST
0x595 PUSH2 0x17f
0x598 PUSH1 0x4
0x59a DUP1
0x59b DUP1
0x59c CALLDATALOAD
0x59d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b2 AND
0x5b3 SWAP1
0x5b4 PUSH1 0x20
0x5b6 ADD
0x5b7 SWAP1
0x5b8 SWAP2
0x5b9 SWAP1
0x5ba POP
0x5bb POP
0x5bc PUSH2 0x53f
0x5bf JUMP
0x5c0 JUMPDEST
0x5c1 PUSH1 0x40
0x5c3 MLOAD
0x5c4 DUP1
0x5c5 DUP3
0x5c6 DUP2
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca ADD
0x5cb SWAP2
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 DUP1
0x5d2 SWAP2
0x5d3 SUB
0x5d4 SWAP1
0x5d5 RETURN
0x5d6 JUMPDEST
0x5d7 CALLVALUE
0x5d8 ISZERO
0x5d9 PUSH2 0x1a0
0x5dc JUMPI
---
0x590: V278 = 0x0
0x593: REVERT 0x0 0x0
0x594: JUMPDEST 
0x595: V279 = 0x17f
0x598: V280 = 0x4
0x59c: V281 = CALLDATALOAD 0x4
0x59d: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b2: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x5b4: V284 = 0x20
0x5b6: V285 = ADD 0x20 0x4
0x5bc: V286 = 0x53f
0x5bf: THROW 
0x5c0: JUMPDEST 
0x5c1: V287 = 0x40
0x5c3: V288 = M[0x40]
0x5c7: M[V288] = S0
0x5c8: V289 = 0x20
0x5ca: V290 = ADD 0x20 V288
0x5ce: V291 = 0x40
0x5d0: V292 = M[0x40]
0x5d3: V293 = SUB V290 V292
0x5d5: RETURN V292 V293
0x5d6: JUMPDEST 
0x5d7: V294 = CALLVALUE
0x5d8: V295 = ISZERO V294
0x5d9: V296 = 0x1a0
0x5dc: THROWI V295
---
Entry stack: []
Stack pops: 0
Stack additions: [V283, 0x17f]
Exit stack: []

================================

Block 0x5dd
[0x5dd:0x5f1]
---
Predecessors: [0x590]
Successors: [0x5f2]
---
0x5dd PUSH1 0x0
0x5df DUP1
0x5e0 REVERT
0x5e1 JUMPDEST
0x5e2 PUSH2 0x1a8
0x5e5 PUSH2 0x557
0x5e8 JUMP
0x5e9 JUMPDEST
0x5ea STOP
0x5eb JUMPDEST
0x5ec CALLVALUE
0x5ed ISZERO
0x5ee PUSH2 0x1b5
0x5f1 JUMPI
---
0x5dd: V297 = 0x0
0x5e0: REVERT 0x0 0x0
0x5e1: JUMPDEST 
0x5e2: V298 = 0x1a8
0x5e5: V299 = 0x557
0x5e8: THROW 
0x5e9: JUMPDEST 
0x5ea: STOP 
0x5eb: JUMPDEST 
0x5ec: V300 = CALLVALUE
0x5ed: V301 = ISZERO V300
0x5ee: V302 = 0x1b5
0x5f1: THROWI V301
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a8]
Exit stack: []

================================

Block 0x5f2
[0x5f2:0x646]
---
Predecessors: [0x5dd]
Successors: [0x647]
---
0x5f2 PUSH1 0x0
0x5f4 DUP1
0x5f5 REVERT
0x5f6 JUMPDEST
0x5f7 PUSH2 0x1bd
0x5fa PUSH2 0x5b9
0x5fd JUMP
0x5fe JUMPDEST
0x5ff PUSH1 0x40
0x601 MLOAD
0x602 DUP1
0x603 DUP3
0x604 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x619 AND
0x61a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62f AND
0x630 DUP2
0x631 MSTORE
0x632 PUSH1 0x20
0x634 ADD
0x635 SWAP2
0x636 POP
0x637 POP
0x638 PUSH1 0x40
0x63a MLOAD
0x63b DUP1
0x63c SWAP2
0x63d SUB
0x63e SWAP1
0x63f RETURN
0x640 JUMPDEST
0x641 CALLVALUE
0x642 ISZERO
0x643 PUSH2 0x20a
0x646 JUMPI
---
0x5f2: V303 = 0x0
0x5f5: REVERT 0x0 0x0
0x5f6: JUMPDEST 
0x5f7: V304 = 0x1bd
0x5fa: V305 = 0x5b9
0x5fd: THROW 
0x5fe: JUMPDEST 
0x5ff: V306 = 0x40
0x601: V307 = M[0x40]
0x604: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x619: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x61a: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x631: M[V307] = V311
0x632: V312 = 0x20
0x634: V313 = ADD 0x20 V307
0x638: V314 = 0x40
0x63a: V315 = M[0x40]
0x63d: V316 = SUB V313 V315
0x63f: RETURN V315 V316
0x640: JUMPDEST 
0x641: V317 = CALLVALUE
0x642: V318 = ISZERO V317
0x643: V319 = 0x20a
0x646: THROWI V318
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1bd]
Exit stack: []

================================

Block 0x647
[0x647:0x66f]
---
Predecessors: [0x5f2]
Successors: [0x670]
---
0x647 PUSH1 0x0
0x649 DUP1
0x64a REVERT
0x64b JUMPDEST
0x64c PUSH2 0x212
0x64f PUSH2 0x5e4
0x652 JUMP
0x653 JUMPDEST
0x654 PUSH1 0x40
0x656 MLOAD
0x657 DUP1
0x658 DUP3
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x20
0x65d ADD
0x65e SWAP2
0x65f POP
0x660 POP
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 SWAP2
0x666 SUB
0x667 SWAP1
0x668 RETURN
0x669 JUMPDEST
0x66a CALLVALUE
0x66b ISZERO
0x66c PUSH2 0x233
0x66f JUMPI
---
0x647: V320 = 0x0
0x64a: REVERT 0x0 0x0
0x64b: JUMPDEST 
0x64c: V321 = 0x212
0x64f: V322 = 0x5e4
0x652: THROW 
0x653: JUMPDEST 
0x654: V323 = 0x40
0x656: V324 = M[0x40]
0x65a: M[V324] = S0
0x65b: V325 = 0x20
0x65d: V326 = ADD 0x20 V324
0x661: V327 = 0x40
0x663: V328 = M[0x40]
0x666: V329 = SUB V326 V328
0x668: RETURN V328 V329
0x669: JUMPDEST 
0x66a: V330 = CALLVALUE
0x66b: V331 = ISZERO V330
0x66c: V332 = 0x233
0x66f: THROWI V331
---
Entry stack: []
Stack pops: 0
Stack additions: [0x212]
Exit stack: []

================================

Block 0x670
[0x670:0x69c]
---
Predecessors: [0x647]
Successors: [0x69d]
---
0x670 PUSH1 0x0
0x672 DUP1
0x673 REVERT
0x674 JUMPDEST
0x675 PUSH2 0x23b
0x678 PUSH2 0x5ef
0x67b JUMP
0x67c JUMPDEST
0x67d PUSH1 0x40
0x67f MLOAD
0x680 DUP1
0x681 DUP3
0x682 ISZERO
0x683 ISZERO
0x684 ISZERO
0x685 ISZERO
0x686 DUP2
0x687 MSTORE
0x688 PUSH1 0x20
0x68a ADD
0x68b SWAP2
0x68c POP
0x68d POP
0x68e PUSH1 0x40
0x690 MLOAD
0x691 DUP1
0x692 SWAP2
0x693 SUB
0x694 SWAP1
0x695 RETURN
0x696 JUMPDEST
0x697 CALLVALUE
0x698 ISZERO
0x699 PUSH2 0x260
0x69c JUMPI
---
0x670: V333 = 0x0
0x673: REVERT 0x0 0x0
0x674: JUMPDEST 
0x675: V334 = 0x23b
0x678: V335 = 0x5ef
0x67b: THROW 
0x67c: JUMPDEST 
0x67d: V336 = 0x40
0x67f: V337 = M[0x40]
0x682: V338 = ISZERO S0
0x683: V339 = ISZERO V338
0x684: V340 = ISZERO V339
0x685: V341 = ISZERO V340
0x687: M[V337] = V341
0x688: V342 = 0x20
0x68a: V343 = ADD 0x20 V337
0x68e: V344 = 0x40
0x690: V345 = M[0x40]
0x693: V346 = SUB V343 V345
0x695: RETURN V345 V346
0x696: JUMPDEST 
0x697: V347 = CALLVALUE
0x698: V348 = ISZERO V347
0x699: V349 = 0x260
0x69c: THROWI V348
---
Entry stack: []
Stack pops: 0
Stack additions: [0x23b]
Exit stack: []

================================

Block 0x69d
[0x69d:0x6c5]
---
Predecessors: [0x670]
Successors: [0x6c6]
---
0x69d PUSH1 0x0
0x69f DUP1
0x6a0 REVERT
0x6a1 JUMPDEST
0x6a2 PUSH2 0x268
0x6a5 PUSH2 0x60a
0x6a8 JUMP
0x6a9 JUMPDEST
0x6aa PUSH1 0x40
0x6ac MLOAD
0x6ad DUP1
0x6ae DUP3
0x6af DUP2
0x6b0 MSTORE
0x6b1 PUSH1 0x20
0x6b3 ADD
0x6b4 SWAP2
0x6b5 POP
0x6b6 POP
0x6b7 PUSH1 0x40
0x6b9 MLOAD
0x6ba DUP1
0x6bb SWAP2
0x6bc SUB
0x6bd SWAP1
0x6be RETURN
0x6bf JUMPDEST
0x6c0 CALLVALUE
0x6c1 ISZERO
0x6c2 PUSH2 0x289
0x6c5 JUMPI
---
0x69d: V350 = 0x0
0x6a0: REVERT 0x0 0x0
0x6a1: JUMPDEST 
0x6a2: V351 = 0x268
0x6a5: V352 = 0x60a
0x6a8: THROW 
0x6a9: JUMPDEST 
0x6aa: V353 = 0x40
0x6ac: V354 = M[0x40]
0x6b0: M[V354] = S0
0x6b1: V355 = 0x20
0x6b3: V356 = ADD 0x20 V354
0x6b7: V357 = 0x40
0x6b9: V358 = M[0x40]
0x6bc: V359 = SUB V356 V358
0x6be: RETURN V358 V359
0x6bf: JUMPDEST 
0x6c0: V360 = CALLVALUE
0x6c1: V361 = ISZERO V360
0x6c2: V362 = 0x289
0x6c5: THROWI V361
---
Entry stack: []
Stack pops: 0
Stack additions: [0x268]
Exit stack: []

================================

Block 0x6c6
[0x6c6:0x6fc]
---
Predecessors: [0x69d]
Successors: [0x6fd]
---
0x6c6 PUSH1 0x0
0x6c8 DUP1
0x6c9 REVERT
0x6ca JUMPDEST
0x6cb PUSH2 0x29f
0x6ce PUSH1 0x4
0x6d0 DUP1
0x6d1 DUP1
0x6d2 CALLDATALOAD
0x6d3 SWAP1
0x6d4 PUSH1 0x20
0x6d6 ADD
0x6d7 SWAP1
0x6d8 SWAP2
0x6d9 SWAP1
0x6da POP
0x6db POP
0x6dc PUSH2 0x615
0x6df JUMP
0x6e0 JUMPDEST
0x6e1 STOP
0x6e2 JUMPDEST
0x6e3 PUSH2 0x2a9
0x6e6 PUSH2 0x345
0x6e9 JUMP
0x6ea JUMPDEST
0x6eb STOP
0x6ec JUMPDEST
0x6ed PUSH2 0x2b3
0x6f0 PUSH2 0x659
0x6f3 JUMP
0x6f4 JUMPDEST
0x6f5 STOP
0x6f6 JUMPDEST
0x6f7 CALLVALUE
0x6f8 ISZERO
0x6f9 PUSH2 0x2c0
0x6fc JUMPI
---
0x6c6: V363 = 0x0
0x6c9: REVERT 0x0 0x0
0x6ca: JUMPDEST 
0x6cb: V364 = 0x29f
0x6ce: V365 = 0x4
0x6d2: V366 = CALLDATALOAD 0x4
0x6d4: V367 = 0x20
0x6d6: V368 = ADD 0x20 0x4
0x6dc: V369 = 0x615
0x6df: THROW 
0x6e0: JUMPDEST 
0x6e1: STOP 
0x6e2: JUMPDEST 
0x6e3: V370 = 0x2a9
0x6e6: V371 = 0x345
0x6e9: THROW 
0x6ea: JUMPDEST 
0x6eb: STOP 
0x6ec: JUMPDEST 
0x6ed: V372 = 0x2b3
0x6f0: V373 = 0x659
0x6f3: THROW 
0x6f4: JUMPDEST 
0x6f5: STOP 
0x6f6: JUMPDEST 
0x6f7: V374 = CALLVALUE
0x6f8: V375 = ISZERO V374
0x6f9: V376 = 0x2c0
0x6fc: THROWI V375
---
Entry stack: []
Stack pops: 0
Stack additions: [V366, 0x29f, 0x2a9, 0x2b3]
Exit stack: []

================================

Block 0x6fd
[0x6fd:0x735]
---
Predecessors: [0x6c6]
Successors: [0x736]
---
0x6fd PUSH1 0x0
0x6ff DUP1
0x700 REVERT
0x701 JUMPDEST
0x702 PUSH2 0x2ec
0x705 PUSH1 0x4
0x707 DUP1
0x708 DUP1
0x709 CALLDATALOAD
0x70a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71f AND
0x720 SWAP1
0x721 PUSH1 0x20
0x723 ADD
0x724 SWAP1
0x725 SWAP2
0x726 SWAP1
0x727 POP
0x728 POP
0x729 PUSH2 0x727
0x72c JUMP
0x72d JUMPDEST
0x72e STOP
0x72f JUMPDEST
0x730 CALLVALUE
0x731 ISZERO
0x732 PUSH2 0x2f9
0x735 JUMPI
---
0x6fd: V377 = 0x0
0x700: REVERT 0x0 0x0
0x701: JUMPDEST 
0x702: V378 = 0x2ec
0x705: V379 = 0x4
0x709: V380 = CALLDATALOAD 0x4
0x70a: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x71f: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x721: V383 = 0x20
0x723: V384 = ADD 0x20 0x4
0x729: V385 = 0x727
0x72c: THROW 
0x72d: JUMPDEST 
0x72e: STOP 
0x72f: JUMPDEST 
0x730: V386 = CALLVALUE
0x731: V387 = ISZERO V386
0x732: V388 = 0x2f9
0x735: THROWI V387
---
Entry stack: []
Stack pops: 0
Stack additions: [V382, 0x2ec]
Exit stack: []

================================

Block 0x736
[0x736:0x777]
---
Predecessors: [0x6fd]
Successors: [0x778]
---
0x736 PUSH1 0x0
0x738 DUP1
0x739 REVERT
0x73a JUMPDEST
0x73b PUSH2 0x32e
0x73e PUSH1 0x4
0x740 DUP1
0x741 DUP1
0x742 CALLDATALOAD
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 SWAP1
0x75a PUSH1 0x20
0x75c ADD
0x75d SWAP1
0x75e SWAP2
0x75f SWAP1
0x760 DUP1
0x761 CALLDATALOAD
0x762 SWAP1
0x763 PUSH1 0x20
0x765 ADD
0x766 SWAP1
0x767 SWAP2
0x768 SWAP1
0x769 POP
0x76a POP
0x76b PUSH2 0x7c2
0x76e JUMP
0x76f JUMPDEST
0x770 STOP
0x771 JUMPDEST
0x772 CALLVALUE
0x773 ISZERO
0x774 PUSH2 0x33b
0x777 JUMPI
---
0x736: V389 = 0x0
0x739: REVERT 0x0 0x0
0x73a: JUMPDEST 
0x73b: V390 = 0x32e
0x73e: V391 = 0x4
0x742: V392 = CALLDATALOAD 0x4
0x743: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x75a: V395 = 0x20
0x75c: V396 = ADD 0x20 0x4
0x761: V397 = CALLDATALOAD 0x24
0x763: V398 = 0x20
0x765: V399 = ADD 0x20 0x24
0x76b: V400 = 0x7c2
0x76e: THROW 
0x76f: JUMPDEST 
0x770: STOP 
0x771: JUMPDEST 
0x772: V401 = CALLVALUE
0x773: V402 = ISZERO V401
0x774: V403 = 0x33b
0x777: THROWI V402
---
Entry stack: []
Stack pops: 0
Stack additions: [V397, V394, 0x32e]
Exit stack: []

================================

Block 0x778
[0x778:0x78f]
---
Predecessors: [0x736]
Successors: [0x790]
---
0x778 PUSH1 0x0
0x77a DUP1
0x77b REVERT
0x77c JUMPDEST
0x77d PUSH2 0x343
0x780 PUSH2 0x915
0x783 JUMP
0x784 JUMPDEST
0x785 STOP
0x786 JUMPDEST
0x787 PUSH1 0x0
0x789 CALLVALUE
0x78a GT
0x78b ISZERO
0x78c PUSH2 0x3fb
0x78f JUMPI
---
0x778: V404 = 0x0
0x77b: REVERT 0x0 0x0
0x77c: JUMPDEST 
0x77d: V405 = 0x343
0x780: V406 = 0x915
0x783: THROW 
0x784: JUMPDEST 
0x785: STOP 
0x786: JUMPDEST 
0x787: V407 = 0x0
0x789: V408 = CALLVALUE
0x78a: V409 = GT V408 0x0
0x78b: V410 = ISZERO V409
0x78c: V411 = 0x3fb
0x78f: THROWI V410
---
Entry stack: []
Stack pops: 0
Stack additions: [0x343]
Exit stack: []

================================

Block 0x790
[0x790:0x79f]
---
Predecessors: [0x778]
Successors: [0x7a0]
---
0x790 PUSH2 0x356
0x793 PUSH2 0x60a
0x796 JUMP
0x797 JUMPDEST
0x798 CALLVALUE
0x799 LT
0x79a ISZERO
0x79b ISZERO
0x79c PUSH2 0x3ac
0x79f JUMPI
---
0x790: V412 = 0x356
0x793: V413 = 0x60a
0x796: THROW 
0x797: JUMPDEST 
0x798: V414 = CALLVALUE
0x799: V415 = LT V414 S0
0x79a: V416 = ISZERO V415
0x79b: V417 = ISZERO V416
0x79c: V418 = 0x3ac
0x79f: THROWI V417
---
Entry stack: []
Stack pops: 0
Stack additions: [0x356]
Exit stack: []

================================

Block 0x7a0
[0x7a0:0x7ec]
---
Predecessors: [0x790]
Successors: [0x7ed]
---
0x7a0 CALLVALUE
0x7a1 PUSH1 0x1
0x7a3 PUSH1 0x0
0x7a5 CALLER
0x7a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bb AND
0x7bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d1 AND
0x7d2 DUP2
0x7d3 MSTORE
0x7d4 PUSH1 0x20
0x7d6 ADD
0x7d7 SWAP1
0x7d8 DUP2
0x7d9 MSTORE
0x7da PUSH1 0x20
0x7dc ADD
0x7dd PUSH1 0x0
0x7df SHA3
0x7e0 PUSH1 0x0
0x7e2 DUP3
0x7e3 DUP3
0x7e4 SLOAD
0x7e5 ADD
0x7e6 SWAP3
0x7e7 POP
0x7e8 POP
0x7e9 DUP2
0x7ea SWAP1
0x7eb SSTORE
0x7ec POP
---
0x7a0: V419 = CALLVALUE
0x7a1: V420 = 0x1
0x7a3: V421 = 0x0
0x7a5: V422 = CALLER
0x7a6: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bb: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x7bc: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x7d3: M[0x0] = V426
0x7d4: V427 = 0x20
0x7d6: V428 = ADD 0x20 0x0
0x7d9: M[0x20] = 0x1
0x7da: V429 = 0x20
0x7dc: V430 = ADD 0x20 0x20
0x7dd: V431 = 0x0
0x7df: V432 = SHA3 0x0 0x40
0x7e0: V433 = 0x0
0x7e4: V434 = S[V432]
0x7e5: V435 = ADD V434 V419
0x7eb: S[V432] = V435
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7ed
[0x7ed:0x83b]
---
Predecessors: [0x7a0]
Successors: [0x83c]
---
0x7ed JUMPDEST
0x7ee CALLER
0x7ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x804 AND
0x805 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x826 CALLVALUE
0x827 PUSH1 0x40
0x829 MLOAD
0x82a DUP1
0x82b DUP3
0x82c DUP2
0x82d MSTORE
0x82e PUSH1 0x20
0x830 ADD
0x831 SWAP2
0x832 POP
0x833 POP
0x834 PUSH1 0x40
0x836 MLOAD
0x837 DUP1
0x838 SWAP2
0x839 SUB
0x83a SWAP1
0x83b LOG2
---
0x7ed: JUMPDEST 
0x7ee: V436 = CALLER
0x7ef: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x804: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x805: V439 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x826: V440 = CALLVALUE
0x827: V441 = 0x40
0x829: V442 = M[0x40]
0x82d: M[V442] = V440
0x82e: V443 = 0x20
0x830: V444 = ADD 0x20 V442
0x834: V445 = 0x40
0x836: V446 = M[0x40]
0x839: V447 = SUB V444 V446
0x83b: LOG V446 V447 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V438
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x83c
[0x83c:0x83c]
---
Predecessors: [0x7ed]
Successors: [0x83d]
---
0x83c JUMPDEST
---
0x83c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x83d
[0x83d:0x896]
---
Predecessors: [0x83c]
Successors: [0x897]
---
0x83d JUMPDEST
0x83e JUMP
0x83f JUMPDEST
0x840 PUSH1 0x0
0x842 DUP1
0x843 PUSH1 0x0
0x845 SWAP1
0x846 SLOAD
0x847 SWAP1
0x848 PUSH2 0x100
0x84b EXP
0x84c SWAP1
0x84d DIV
0x84e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x863 AND
0x864 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x879 AND
0x87a CALLER
0x87b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x890 AND
0x891 EQ
0x892 ISZERO
0x893 PUSH2 0x537
0x896 JUMPI
---
0x83d: JUMPDEST 
0x83e: JUMP S0
0x83f: JUMPDEST 
0x840: V448 = 0x0
0x843: V449 = 0x0
0x846: V450 = S[0x0]
0x848: V451 = 0x100
0x84b: V452 = EXP 0x100 0x0
0x84d: V453 = DIV V450 0x1
0x84e: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x863: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x864: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x879: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x87a: V458 = CALLER
0x87b: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x890: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x891: V461 = EQ V460 V457
0x892: V462 = ISZERO V461
0x893: V463 = 0x537
0x896: THROWI V462
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0x897
[0x897:0x976]
---
Predecessors: [0x83d]
Successors: [0x977]
---
0x897 DUP4
0x898 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ad AND
0x8ae PUSH4 0xa9059cbb
0x8b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8d1 MUL
0x8d2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8f0 SWAP1
0x8f1 DIV
0x8f2 DUP5
0x8f3 DUP5
0x8f4 PUSH1 0x40
0x8f6 MLOAD
0x8f7 DUP4
0x8f8 PUSH4 0xffffffff
0x8fd AND
0x8fe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x91c MUL
0x91d DUP2
0x91e MSTORE
0x91f PUSH1 0x4
0x921 ADD
0x922 DUP1
0x923 DUP4
0x924 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x939 AND
0x93a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94f AND
0x950 DUP2
0x951 MSTORE
0x952 PUSH1 0x20
0x954 ADD
0x955 DUP3
0x956 DUP2
0x957 MSTORE
0x958 PUSH1 0x20
0x95a ADD
0x95b SWAP3
0x95c POP
0x95d POP
0x95e POP
0x95f PUSH1 0x0
0x961 PUSH1 0x40
0x963 MLOAD
0x964 DUP1
0x965 DUP4
0x966 SUB
0x967 DUP2
0x968 PUSH1 0x0
0x96a DUP8
0x96b PUSH2 0x646e
0x96e GAS
0x96f SUB
0x970 CALL
0x971 SWAP3
0x972 POP
0x973 POP
0x974 POP
0x975 SWAP1
0x976 POP
---
0x898: V464 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ad: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8ae: V466 = 0xa9059cbb
0x8b3: V467 = 0x100000000000000000000000000000000000000000000000000000000
0x8d1: V468 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x8d2: V469 = 0x100000000000000000000000000000000000000000000000000000000
0x8f1: V470 = DIV 0xa9059cbb00000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000
0x8f4: V471 = 0x40
0x8f6: V472 = M[0x40]
0x8f8: V473 = 0xffffffff
0x8fd: V474 = AND 0xffffffff 0xa9059cbb
0x8fe: V475 = 0x100000000000000000000000000000000000000000000000000000000
0x91c: V476 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x91e: M[V472] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x91f: V477 = 0x4
0x921: V478 = ADD 0x4 V472
0x924: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x939: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x93a: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x94f: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x951: M[V478] = V482
0x952: V483 = 0x20
0x954: V484 = ADD 0x20 V478
0x957: M[V484] = S1
0x958: V485 = 0x20
0x95a: V486 = ADD 0x20 V484
0x95f: V487 = 0x0
0x961: V488 = 0x40
0x963: V489 = M[0x40]
0x966: V490 = SUB V486 V489
0x968: V491 = 0x0
0x96b: V492 = 0x646e
0x96e: V493 = GAS
0x96f: V494 = SUB V493 0x646e
0x970: V495 = CALL V494 V465 0x0 V489 V490 V489 0x0
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V495]
Exit stack: [S2, S1, S0, V495]

================================

Block 0x977
[0x977:0x977]
---
Predecessors: [0x897]
Successors: [0x978]
---
0x977 JUMPDEST
---
0x977: JUMPDEST 
---
Entry stack: [S3, S2, S1, V495]
Stack pops: 0
Stack additions: []
Exit stack: [S3, S2, S1, V495]

================================

Block 0x978
[0x978:0x978]
---
Predecessors: [0x977]
Successors: [0x979]
---
0x978 JUMPDEST
---
0x978: JUMPDEST 
---
Entry stack: [S3, S2, S1, V495]
Stack pops: 0
Stack additions: []
Exit stack: [S3, S2, S1, V495]

================================

Block 0x979
[0x979:0x9b9]
---
Predecessors: [0x978]
Successors: [0x9ba]
---
0x979 JUMPDEST
0x97a SWAP4
0x97b SWAP3
0x97c POP
0x97d POP
0x97e POP
0x97f JUMP
0x980 JUMPDEST
0x981 PUSH1 0x1
0x983 PUSH1 0x20
0x985 MSTORE
0x986 DUP1
0x987 PUSH1 0x0
0x989 MSTORE
0x98a PUSH1 0x40
0x98c PUSH1 0x0
0x98e SHA3
0x98f PUSH1 0x0
0x991 SWAP2
0x992 POP
0x993 SWAP1
0x994 POP
0x995 SLOAD
0x996 DUP2
0x997 JUMP
0x998 JUMPDEST
0x999 PUSH1 0x0
0x99b ADDRESS
0x99c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b1 AND
0x9b2 BALANCE
0x9b3 EQ
0x9b4 ISZERO
0x9b5 ISZERO
0x9b6 PUSH2 0x57d
0x9b9 JUMPI
---
0x979: JUMPDEST 
0x97f: JUMP S4
0x980: JUMPDEST 
0x981: V496 = 0x1
0x983: V497 = 0x20
0x985: M[0x20] = 0x1
0x987: V498 = 0x0
0x989: M[0x0] = S0
0x98a: V499 = 0x40
0x98c: V500 = 0x0
0x98e: V501 = SHA3 0x0 0x40
0x98f: V502 = 0x0
0x995: V503 = S[V501]
0x997: JUMP S1
0x998: JUMPDEST 
0x999: V504 = 0x0
0x99b: V505 = ADDRESS
0x99c: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b1: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x9b2: V508 = BALANCE V507
0x9b3: V509 = EQ V508 0x0
0x9b4: V510 = ISZERO V509
0x9b5: V511 = ISZERO V510
0x9b6: V512 = 0x57d
0x9b9: THROWI V511
---
Entry stack: [S3, S2, S1, V495]
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0x9ba
[0x9ba:0xa21]
---
Predecessors: [0x979]
Successors: [0xa22]
---
0x9ba PUSH1 0x0
0x9bc DUP1
0x9bd REVERT
0x9be JUMPDEST
0x9bf PUSH1 0x0
0x9c1 DUP1
0x9c2 SWAP1
0x9c3 SLOAD
0x9c4 SWAP1
0x9c5 PUSH2 0x100
0x9c8 EXP
0x9c9 SWAP1
0x9ca DIV
0x9cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e0 AND
0x9e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f6 AND
0x9f7 SELFDESTRUCT
0x9f8 JUMPDEST
0x9f9 JUMP
0x9fa JUMPDEST
0x9fb PUSH1 0x0
0x9fd PUSH1 0x5
0x9ff PUSH1 0x0
0xa01 SWAP1
0xa02 SLOAD
0xa03 SWAP1
0xa04 PUSH2 0x100
0xa07 EXP
0xa08 SWAP1
0xa09 DIV
0xa0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1f AND
0xa20 SWAP1
0xa21 POP
---
0x9ba: V513 = 0x0
0x9bd: REVERT 0x0 0x0
0x9be: JUMPDEST 
0x9bf: V514 = 0x0
0x9c3: V515 = S[0x0]
0x9c5: V516 = 0x100
0x9c8: V517 = EXP 0x100 0x0
0x9ca: V518 = DIV V515 0x1
0x9cb: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e0: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x9e1: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f6: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x9f7: SELFDESTRUCT V522
0x9f8: JUMPDEST 
0x9f9: JUMP S0
0x9fa: JUMPDEST 
0x9fb: V523 = 0x0
0x9fd: V524 = 0x5
0x9ff: V525 = 0x0
0xa02: V526 = S[0x5]
0xa04: V527 = 0x100
0xa07: V528 = EXP 0x100 0x0
0xa09: V529 = DIV V526 0x1
0xa0a: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
---
Entry stack: []
Stack pops: 0
Stack additions: [V531]
Exit stack: []

================================

Block 0xa22
[0xa22:0xa2c]
---
Predecessors: [0x9ba]
Successors: [0xa2d]
---
0xa22 JUMPDEST
0xa23 SWAP1
0xa24 JUMP
0xa25 JUMPDEST
0xa26 PUSH1 0x0
0xa28 PUSH1 0x4
0xa2a SLOAD
0xa2b SWAP1
0xa2c POP
---
0xa22: JUMPDEST 
0xa24: JUMP S1
0xa25: JUMPDEST 
0xa26: V532 = 0x0
0xa28: V533 = 0x4
0xa2a: V534 = S[0x4]
---
Entry stack: [V531]
Stack pops: 3
Stack additions: [V534]
Exit stack: []

================================

Block 0xa2d
[0xa2d:0xa3d]
---
Predecessors: [0xa22]
Successors: [0xa3e]
---
0xa2d JUMPDEST
0xa2e SWAP1
0xa2f JUMP
0xa30 JUMPDEST
0xa31 PUSH1 0x0
0xa33 DUP1
0xa34 PUSH1 0x4
0xa36 SLOAD
0xa37 GT
0xa38 DUP1
0xa39 ISZERO
0xa3a PUSH2 0x604
0xa3d JUMPI
---
0xa2d: JUMPDEST 
0xa2f: JUMP S1
0xa30: JUMPDEST 
0xa31: V535 = 0x0
0xa34: V536 = 0x4
0xa36: V537 = S[0x4]
0xa37: V538 = GT V537 0x0
0xa39: V539 = ISZERO V538
0xa3a: V540 = 0x604
0xa3d: THROWI V539
---
Entry stack: [V534]
Stack pops: 3
Stack additions: [V538, 0x0]
Exit stack: []

================================

Block 0xa3e
[0xa3e:0xa44]
---
Predecessors: [0xa2d]
Successors: [0xa45]
---
0xa3e POP
0xa3f TIMESTAMP
0xa40 PUSH1 0x4
0xa42 SLOAD
0xa43 GT
0xa44 ISZERO
---
0xa3f: V541 = TIMESTAMP
0xa40: V542 = 0x4
0xa42: V543 = S[0x4]
0xa43: V544 = GT V543 V541
0xa44: V545 = ISZERO V544
---
Entry stack: [0x0, V538]
Stack pops: 1
Stack additions: [V545]
Exit stack: [0x0, V545]

================================

Block 0xa45
[0xa45:0xa47]
---
Predecessors: [0xa3e]
Successors: [0xa48]
---
0xa45 JUMPDEST
0xa46 SWAP1
0xa47 POP
---
0xa45: JUMPDEST 
---
Entry stack: [0x0, V545]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V545]

================================

Block 0xa48
[0xa48:0xa52]
---
Predecessors: [0xa45]
Successors: [0xa53]
---
0xa48 JUMPDEST
0xa49 SWAP1
0xa4a JUMP
0xa4b JUMPDEST
0xa4c PUSH1 0x0
0xa4e PUSH1 0x2
0xa50 SLOAD
0xa51 SWAP1
0xa52 POP
---
0xa48: JUMPDEST 
0xa4a: JUMP S1
0xa4b: JUMPDEST 
0xa4c: V546 = 0x0
0xa4e: V547 = 0x2
0xa50: V548 = S[0x2]
---
Entry stack: [V545]
Stack pops: 3
Stack additions: [V548]
Exit stack: []

================================

Block 0xa53
[0xa53:0xa96]
---
Predecessors: [0xa48]
Successors: [0xa97]
---
0xa53 JUMPDEST
0xa54 SWAP1
0xa55 JUMP
0xa56 JUMPDEST
0xa57 DUP1
0xa58 PUSH1 0x4
0xa5a DUP2
0xa5b SWAP1
0xa5c SSTORE
0xa5d POP
0xa5e PUSH32 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0xa7f PUSH1 0x4
0xa81 SLOAD
0xa82 PUSH1 0x40
0xa84 MLOAD
0xa85 DUP1
0xa86 DUP3
0xa87 DUP2
0xa88 MSTORE
0xa89 PUSH1 0x20
0xa8b ADD
0xa8c SWAP2
0xa8d POP
0xa8e POP
0xa8f PUSH1 0x40
0xa91 MLOAD
0xa92 DUP1
0xa93 SWAP2
0xa94 SUB
0xa95 SWAP1
0xa96 LOG1
---
0xa53: JUMPDEST 
0xa55: JUMP S1
0xa56: JUMPDEST 
0xa58: V549 = 0x4
0xa5c: S[0x4] = S0
0xa5e: V550 = 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0xa7f: V551 = 0x4
0xa81: V552 = S[0x4]
0xa82: V553 = 0x40
0xa84: V554 = M[0x40]
0xa88: M[V554] = V552
0xa89: V555 = 0x20
0xa8b: V556 = ADD 0x20 V554
0xa8f: V557 = 0x40
0xa91: V558 = M[0x40]
0xa94: V559 = SUB V556 V558
0xa96: LOG V558 V559 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
---
Entry stack: [V548]
Stack pops: 3
Stack additions: [S0]
Exit stack: []

================================

Block 0xa97
[0xa97:0xab0]
---
Predecessors: [0xa53]
Successors: [0xab1]
---
0xa97 JUMPDEST
0xa98 POP
0xa99 JUMP
0xa9a JUMPDEST
0xa9b PUSH1 0x3
0xa9d PUSH1 0x0
0xa9f SWAP1
0xaa0 SLOAD
0xaa1 SWAP1
0xaa2 PUSH2 0x100
0xaa5 EXP
0xaa6 SWAP1
0xaa7 DIV
0xaa8 PUSH1 0xff
0xaaa AND
0xaab ISZERO
0xaac ISZERO
0xaad PUSH2 0x6e3
0xab0 JUMPI
---
0xa97: JUMPDEST 
0xa99: JUMP S1
0xa9a: JUMPDEST 
0xa9b: V560 = 0x3
0xa9d: V561 = 0x0
0xaa0: V562 = S[0x3]
0xaa2: V563 = 0x100
0xaa5: V564 = EXP 0x100 0x0
0xaa7: V565 = DIV V562 0x1
0xaa8: V566 = 0xff
0xaaa: V567 = AND 0xff V565
0xaab: V568 = ISZERO V567
0xaac: V569 = ISZERO V568
0xaad: V570 = 0x6e3
0xab0: THROWI V569
---
Entry stack: [S0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xab1
[0xab1:0xb22]
---
Predecessors: [0xa97]
Successors: [0xb23]
---
0xab1 CALLER
0xab2 PUSH1 0x0
0xab4 DUP1
0xab5 PUSH2 0x100
0xab8 EXP
0xab9 DUP2
0xaba SLOAD
0xabb DUP2
0xabc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad1 MUL
0xad2 NOT
0xad3 AND
0xad4 SWAP1
0xad5 DUP4
0xad6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaeb AND
0xaec MUL
0xaed OR
0xaee SWAP1
0xaef SSTORE
0xaf0 POP
0xaf1 PUSH8 0x6f05b59d3b20000
0xafa PUSH1 0x2
0xafc DUP2
0xafd SWAP1
0xafe SSTORE
0xaff POP
0xb00 PUSH1 0x0
0xb02 PUSH1 0x3
0xb04 PUSH1 0x0
0xb06 PUSH2 0x100
0xb09 EXP
0xb0a DUP2
0xb0b SLOAD
0xb0c DUP2
0xb0d PUSH1 0xff
0xb0f MUL
0xb10 NOT
0xb11 AND
0xb12 SWAP1
0xb13 DUP4
0xb14 ISZERO
0xb15 ISZERO
0xb16 MUL
0xb17 OR
0xb18 SWAP1
0xb19 SSTORE
0xb1a POP
0xb1b PUSH2 0x6e1
0xb1e PUSH2 0x345
0xb21 JUMP
0xb22 JUMPDEST
---
0xab1: V571 = CALLER
0xab2: V572 = 0x0
0xab5: V573 = 0x100
0xab8: V574 = EXP 0x100 0x0
0xaba: V575 = S[0x0]
0xabc: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0xad1: V577 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xad2: V578 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xad3: V579 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V575
0xad6: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0xaeb: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0xaec: V582 = MUL V581 0x1
0xaed: V583 = OR V582 V579
0xaef: S[0x0] = V583
0xaf1: V584 = 0x6f05b59d3b20000
0xafa: V585 = 0x2
0xafe: S[0x2] = 0x6f05b59d3b20000
0xb00: V586 = 0x0
0xb02: V587 = 0x3
0xb04: V588 = 0x0
0xb06: V589 = 0x100
0xb09: V590 = EXP 0x100 0x0
0xb0b: V591 = S[0x3]
0xb0d: V592 = 0xff
0xb0f: V593 = MUL 0xff 0x1
0xb10: V594 = NOT 0xff
0xb11: V595 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V591
0xb14: V596 = ISZERO 0x0
0xb15: V597 = ISZERO 0x1
0xb16: V598 = MUL 0x0 0x1
0xb17: V599 = OR 0x0 V595
0xb19: S[0x3] = V599
0xb1b: V600 = 0x6e1
0xb1e: V601 = 0x345
0xb21: THROW 
0xb22: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6e1]
Exit stack: []

================================

Block 0xb23
[0xb23:0xb23]
---
Predecessors: [0xab1]
Successors: [0xb24]
---
0xb23 JUMPDEST
---
0xb23: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb24
[0xb24:0xb65]
---
Predecessors: [0xb23]
Successors: [0xb66]
---
0xb24 JUMPDEST
0xb25 CALLER
0xb26 PUSH1 0x5
0xb28 PUSH1 0x0
0xb2a PUSH2 0x100
0xb2d EXP
0xb2e DUP2
0xb2f SLOAD
0xb30 DUP2
0xb31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb46 MUL
0xb47 NOT
0xb48 AND
0xb49 SWAP1
0xb4a DUP4
0xb4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb60 AND
0xb61 MUL
0xb62 OR
0xb63 SWAP1
0xb64 SSTORE
0xb65 POP
---
0xb24: JUMPDEST 
0xb25: V602 = CALLER
0xb26: V603 = 0x5
0xb28: V604 = 0x0
0xb2a: V605 = 0x100
0xb2d: V606 = EXP 0x100 0x0
0xb2f: V607 = S[0x5]
0xb31: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0xb46: V609 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xb47: V610 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb48: V611 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V607
0xb4b: V612 = 0xffffffffffffffffffffffffffffffffffffffff
0xb60: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xb61: V614 = MUL V613 0x1
0xb62: V615 = OR V614 V611
0xb64: S[0x5] = V615
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb66
[0xb66:0xbbd]
---
Predecessors: [0xb24]
Successors: [0xbbe]
---
0xb66 JUMPDEST
0xb67 JUMP
0xb68 JUMPDEST
0xb69 PUSH1 0x0
0xb6b DUP1
0xb6c SWAP1
0xb6d SLOAD
0xb6e SWAP1
0xb6f PUSH2 0x100
0xb72 EXP
0xb73 SWAP1
0xb74 DIV
0xb75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8a AND
0xb8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba0 AND
0xba1 CALLER
0xba2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb7 AND
0xbb8 EQ
0xbb9 ISZERO
0xbba PUSH2 0x7be
0xbbd JUMPI
---
0xb66: JUMPDEST 
0xb67: JUMP S0
0xb68: JUMPDEST 
0xb69: V616 = 0x0
0xb6d: V617 = S[0x0]
0xb6f: V618 = 0x100
0xb72: V619 = EXP 0x100 0x0
0xb74: V620 = DIV V617 0x1
0xb75: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8a: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0xb8b: V623 = 0xffffffffffffffffffffffffffffffffffffffff
0xba0: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0xba1: V625 = CALLER
0xba2: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb7: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0xbb8: V628 = EQ V627 V624
0xbb9: V629 = ISZERO V628
0xbba: V630 = 0x7be
0xbbd: THROWI V629
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xbbe
[0xbbe:0xbfd]
---
Predecessors: [0xb66]
Successors: [0xbfe]
---
0xbbe DUP1
0xbbf PUSH1 0x0
0xbc1 DUP1
0xbc2 PUSH2 0x100
0xbc5 EXP
0xbc6 DUP2
0xbc7 SLOAD
0xbc8 DUP2
0xbc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbde MUL
0xbdf NOT
0xbe0 AND
0xbe1 SWAP1
0xbe2 DUP4
0xbe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf8 AND
0xbf9 MUL
0xbfa OR
0xbfb SWAP1
0xbfc SSTORE
0xbfd POP
---
0xbbf: V631 = 0x0
0xbc2: V632 = 0x100
0xbc5: V633 = EXP 0x100 0x0
0xbc7: V634 = S[0x0]
0xbc9: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0xbde: V636 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbdf: V637 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbe0: V638 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V634
0xbe3: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf8: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbf9: V641 = MUL V640 0x1
0xbfa: V642 = OR V641 V638
0xbfc: S[0x0] = V642
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xbfe
[0xbfe:0xbfe]
---
Predecessors: [0xbbe]
Successors: [0xbff]
---
0xbfe JUMPDEST
---
0xbfe: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xbff
[0xbff:0xbff]
---
Predecessors: [0xbfe]
Successors: [0xc00]
---
0xbff JUMPDEST
---
0xbff: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xc00
[0xc00:0xc5a]
---
Predecessors: [0xbff]
Successors: [0xc5b]
---
0xc00 JUMPDEST
0xc01 POP
0xc02 JUMP
0xc03 JUMPDEST
0xc04 PUSH1 0x0
0xc06 DUP1
0xc07 PUSH1 0x0
0xc09 SWAP1
0xc0a SLOAD
0xc0b SWAP1
0xc0c PUSH2 0x100
0xc0f EXP
0xc10 SWAP1
0xc11 DIV
0xc12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc27 AND
0xc28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3d AND
0xc3e CALLER
0xc3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc54 AND
0xc55 EQ
0xc56 ISZERO
0xc57 PUSH2 0x90f
0xc5a JUMPI
---
0xc00: JUMPDEST 
0xc02: JUMP S1
0xc03: JUMPDEST 
0xc04: V643 = 0x0
0xc07: V644 = 0x0
0xc0a: V645 = S[0x0]
0xc0c: V646 = 0x100
0xc0f: V647 = EXP 0x100 0x0
0xc11: V648 = DIV V645 0x1
0xc12: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0xc27: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0xc28: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3d: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0xc3e: V653 = CALLER
0xc3f: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xc54: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xc55: V656 = EQ V655 V652
0xc56: V657 = ISZERO V656
0xc57: V658 = 0x90f
0xc5a: THROWI V657
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [0x0]
Exit stack: []

================================

Block 0xc5b
[0xc5b:0xc67]
---
Predecessors: [0xc00]
Successors: [0xc68]
---
0xc5b PUSH2 0x821
0xc5e PUSH2 0x5ef
0xc61 JUMP
0xc62 JUMPDEST
0xc63 ISZERO
0xc64 PUSH2 0x90d
0xc67 JUMPI
---
0xc5b: V659 = 0x821
0xc5e: V660 = 0x5ef
0xc61: THROW 
0xc62: JUMPDEST 
0xc63: V661 = ISZERO S0
0xc64: V662 = 0x90d
0xc67: THROWI V661
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x821]
Exit stack: []

================================

Block 0xc68
[0xc68:0xcb3]
---
Predecessors: [0xc5b]
Successors: [0xcb4]
---
0xc68 PUSH1 0x1
0xc6a PUSH1 0x0
0xc6c CALLER
0xc6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc82 AND
0xc83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc98 AND
0xc99 DUP2
0xc9a MSTORE
0xc9b PUSH1 0x20
0xc9d ADD
0xc9e SWAP1
0xc9f DUP2
0xca0 MSTORE
0xca1 PUSH1 0x20
0xca3 ADD
0xca4 PUSH1 0x0
0xca6 SHA3
0xca7 SLOAD
0xca8 SWAP1
0xca9 POP
0xcaa PUSH1 0x0
0xcac DUP2
0xcad GT
0xcae DUP1
0xcaf ISZERO
0xcb0 PUSH2 0x878
0xcb3 JUMPI
---
0xc68: V663 = 0x1
0xc6a: V664 = 0x0
0xc6c: V665 = CALLER
0xc6d: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xc82: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0xc83: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xc98: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0xc9a: M[0x0] = V669
0xc9b: V670 = 0x20
0xc9d: V671 = ADD 0x20 0x0
0xca0: M[0x20] = 0x1
0xca1: V672 = 0x20
0xca3: V673 = ADD 0x20 0x20
0xca4: V674 = 0x0
0xca6: V675 = SHA3 0x0 0x40
0xca7: V676 = S[V675]
0xcaa: V677 = 0x0
0xcad: V678 = GT V676 0x0
0xcaf: V679 = ISZERO V678
0xcb0: V680 = 0x878
0xcb3: THROWI V679
---
Entry stack: []
Stack pops: 1
Stack additions: [V676, V678]
Exit stack: [V676, V678]

================================

Block 0xcb4
[0xcb4:0xcb8]
---
Predecessors: [0xc68]
Successors: [0xcb9]
---
0xcb4 POP
0xcb5 DUP1
0xcb6 DUP3
0xcb7 GT
0xcb8 ISZERO
---
0xcb7: V681 = GT S2 V676
0xcb8: V682 = ISZERO V681
---
Entry stack: [V676, V678]
Stack pops: 3
Stack additions: [S2, S1, V682]
Exit stack: [S0, V676, V682]

================================

Block 0xcb9
[0xcb9:0xcbe]
---
Predecessors: [0xcb4]
Successors: [0xcbf]
---
0xcb9 JUMPDEST
0xcba ISZERO
0xcbb PUSH2 0x90c
0xcbe JUMPI
---
0xcb9: JUMPDEST 
0xcba: V683 = ISZERO V682
0xcbb: V684 = 0x90c
0xcbe: THROWI V683
---
Entry stack: [S2, V676, V682]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V676]

================================

Block 0xcbf
[0xcbf:0xcf9]
---
Predecessors: [0xcb9]
Successors: [0xcfa]
---
0xcbf DUP3
0xcc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd5 AND
0xcd6 PUSH2 0x8fc
0xcd9 DUP4
0xcda SWAP1
0xcdb DUP2
0xcdc ISZERO
0xcdd MUL
0xcde SWAP1
0xcdf PUSH1 0x40
0xce1 MLOAD
0xce2 PUSH1 0x0
0xce4 PUSH1 0x40
0xce6 MLOAD
0xce7 DUP1
0xce8 DUP4
0xce9 SUB
0xcea DUP2
0xceb DUP6
0xcec DUP9
0xced DUP9
0xcee CALL
0xcef SWAP4
0xcf0 POP
0xcf1 POP
0xcf2 POP
0xcf3 POP
0xcf4 ISZERO
0xcf5 ISZERO
0xcf6 PUSH2 0x8bd
0xcf9 JUMPI
---
0xcc0: V685 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd5: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xcd6: V687 = 0x8fc
0xcdc: V688 = ISZERO S1
0xcdd: V689 = MUL V688 0x8fc
0xcdf: V690 = 0x40
0xce1: V691 = M[0x40]
0xce2: V692 = 0x0
0xce4: V693 = 0x40
0xce6: V694 = M[0x40]
0xce9: V695 = SUB V691 V694
0xcee: V696 = CALL V689 V686 S1 V694 V695 V694 0x0
0xcf4: V697 = ISZERO V696
0xcf5: V698 = ISZERO V697
0xcf6: V699 = 0x8bd
0xcf9: THROWI V698
---
Entry stack: [S1, V676]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S0, S1, V676]

================================

Block 0xcfa
[0xcfa:0xd4c]
---
Predecessors: [0xcbf]
Successors: [0xd4d]
---
0xcfa PUSH1 0x0
0xcfc DUP1
0xcfd REVERT
0xcfe JUMPDEST
0xcff DUP3
0xd00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd15 AND
0xd16 PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0xd37 DUP4
0xd38 PUSH1 0x40
0xd3a MLOAD
0xd3b DUP1
0xd3c DUP3
0xd3d DUP2
0xd3e MSTORE
0xd3f PUSH1 0x20
0xd41 ADD
0xd42 SWAP2
0xd43 POP
0xd44 POP
0xd45 PUSH1 0x40
0xd47 MLOAD
0xd48 DUP1
0xd49 SWAP2
0xd4a SUB
0xd4b SWAP1
0xd4c LOG2
---
0xcfa: V700 = 0x0
0xcfd: REVERT 0x0 0x0
0xcfe: JUMPDEST 
0xd00: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xd15: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd16: V703 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0xd38: V704 = 0x40
0xd3a: V705 = M[0x40]
0xd3e: M[V705] = S1
0xd3f: V706 = 0x20
0xd41: V707 = ADD 0x20 V705
0xd45: V708 = 0x40
0xd47: V709 = M[0x40]
0xd4a: V710 = SUB V707 V709
0xd4c: LOG V709 V710 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V702
---
Entry stack: [S2, S1, V676]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xd4d
[0xd4d:0xd4d]
---
Predecessors: [0xcfa]
Successors: [0xd4e]
---
0xd4d JUMPDEST
---
0xd4d: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0xd4e
[0xd4e:0xd4e]
---
Predecessors: [0xd4d]
Successors: [0xd4f]
---
0xd4e JUMPDEST
---
0xd4e: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0xd4f
[0xd4f:0xd4f]
---
Predecessors: [0xd4e]
Successors: [0xd50]
---
0xd4f JUMPDEST
---
0xd4f: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0xd50
[0xd50:0xd50]
---
Predecessors: [0xd4f]
Successors: [0xd51]
---
0xd50 JUMPDEST
---
0xd50: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0xd51
[0xd51:0xd71]
---
Predecessors: [0xd50]
Successors: [0xd72]
---
0xd51 JUMPDEST
0xd52 POP
0xd53 POP
0xd54 POP
0xd55 JUMP
0xd56 JUMPDEST
0xd57 PUSH1 0x1
0xd59 PUSH1 0x3
0xd5b PUSH1 0x0
0xd5d PUSH2 0x100
0xd60 EXP
0xd61 DUP2
0xd62 SLOAD
0xd63 DUP2
0xd64 PUSH1 0xff
0xd66 MUL
0xd67 NOT
0xd68 AND
0xd69 SWAP1
0xd6a DUP4
0xd6b ISZERO
0xd6c ISZERO
0xd6d MUL
0xd6e OR
0xd6f SWAP1
0xd70 SSTORE
0xd71 POP
---
0xd51: JUMPDEST 
0xd55: JUMP S3
0xd56: JUMPDEST 
0xd57: V711 = 0x1
0xd59: V712 = 0x3
0xd5b: V713 = 0x0
0xd5d: V714 = 0x100
0xd60: V715 = EXP 0x100 0x0
0xd62: V716 = S[0x3]
0xd64: V717 = 0xff
0xd66: V718 = MUL 0xff 0x1
0xd67: V719 = NOT 0xff
0xd68: V720 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V716
0xd6b: V721 = ISZERO 0x1
0xd6c: V722 = ISZERO 0x0
0xd6d: V723 = MUL 0x1 0x1
0xd6e: V724 = OR 0x1 V720
0xd70: S[0x3] = V724
---
Entry stack: [S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0xd72
[0xd72:0xd8e]
---
Predecessors: [0xd51]
Successors: [0xd8f]
Has unresolved jump.
---
0xd72 JUMPDEST
0xd73 JUMP
0xd74 STOP
0xd75 LOG1
0xd76 PUSH6 0x627a7a723058
0xd7d SHA3
0xd7e MISSING 0x2a
0xd7f MISSING 0xc
0xd80 SAR
0xd81 POP
0xd82 MISSING 0xb8
0xd83 MISSING 0xfb
0xd84 PC
0xd85 MISSING 0xc0
0xd86 MISSING 0x1e
0xd87 MISSING 0xe3
0xd88 MISSING 0xaa
0xd89 ADDMOD
0xd8a MISSING 0xcc
0xd8b CODESIZE
0xd8c CALLDATACOPY
0xd8d MISSING 0xe3
0xd8e JUMPI
---
0xd72: JUMPDEST 
0xd73: JUMP S0
0xd74: STOP 
0xd75: LOG S0 S1 S2
0xd76: V725 = 0x627a7a723058
0xd7d: V726 = SHA3 0x627a7a723058 S3
0xd7e: MISSING 0x2a
0xd7f: MISSING 0xc
0xd80: V727 = SAR S0 S1
0xd82: MISSING 0xb8
0xd83: MISSING 0xfb
0xd84: V728 = PC
0xd85: MISSING 0xc0
0xd86: MISSING 0x1e
0xd87: MISSING 0xe3
0xd88: MISSING 0xaa
0xd89: V729 = ADDMOD S0 S1 S2
0xd8a: MISSING 0xcc
0xd8b: V730 = CODESIZE
0xd8c: CALLDATACOPY V730 S0 S1
0xd8d: MISSING 0xe3
0xd8e: JUMPI S0 S1
---
Entry stack: []
Stack pops: 3550
Stack additions: []
Exit stack: []

================================

Block 0xd8f
[0xd8f:0xda9]
---
Predecessors: [0xd72]
Successors: []
---
0xd8f STOP
0xd90 PUSH25 0xd761c1949ca215cc56f69343910029
---
0xd8f: STOP 
0xd90: V731 = 0xd761c1949ca215cc56f69343910029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd761c1949ca215cc56f69343910029]
Exit stack: []

================================

Function 0:
Public function signature: 0xf2fde38b
Entry block: 0x3e
Exit block: 0x75
Body: 0x3e, 0x45, 0x49, 0x75, 0x77, 0xcd, 0x10d, 0x10e, 0x10f

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

