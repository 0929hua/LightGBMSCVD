Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe4
0xa: JUMPI 0xe4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x331]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x331
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x331
0x3e: JUMPI 0x331 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x3ca]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x3ca
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x3ca
0x49: JUMPI 0x3ca V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x421]
---
0x4a DUP1
0x4b PUSH4 0xdcf4b8f
0x50 EQ
0x51 PUSH2 0x421
0x54 JUMPI
---
0x4b: V17 = 0xdcf4b8f
0x50: V18 = EQ 0xdcf4b8f V10
0x51: V19 = 0x421
0x54: JUMPI 0x421 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x447]
---
0x55 DUP1
0x56 PUSH4 0x18160ddd
0x5b EQ
0x5c PUSH2 0x447
0x5f JUMPI
---
0x56: V20 = 0x18160ddd
0x5b: V21 = EQ 0x18160ddd V10
0x5c: V22 = 0x447
0x5f: JUMPI 0x447 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x46d]
---
0x60 DUP1
0x61 PUSH4 0x23b872dd
0x66 EQ
0x67 PUSH2 0x46d
0x6a JUMPI
---
0x61: V23 = 0x23b872dd
0x66: V24 = EQ 0x23b872dd V10
0x67: V25 = 0x46d
0x6a: JUMPI 0x46d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x4e3]
---
0x6b DUP1
0x6c PUSH4 0x313ce567
0x71 EQ
0x72 PUSH2 0x4e3
0x75 JUMPI
---
0x6c: V26 = 0x313ce567
0x71: V27 = EQ 0x313ce567 V10
0x72: V28 = 0x4e3
0x75: JUMPI 0x4e3 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x50f]
---
0x76 DUP1
0x77 PUSH4 0x64acdb77
0x7c EQ
0x7d PUSH2 0x50f
0x80 JUMPI
---
0x77: V29 = 0x64acdb77
0x7c: V30 = EQ 0x64acdb77 V10
0x7d: V31 = 0x50f
0x80: JUMPI 0x50f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x521]
---
0x81 DUP1
0x82 PUSH4 0x70a08231
0x87 EQ
0x88 PUSH2 0x521
0x8b JUMPI
---
0x82: V32 = 0x70a08231
0x87: V33 = EQ 0x70a08231 V10
0x88: V34 = 0x521
0x8b: JUMPI 0x521 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x56b]
---
0x8c DUP1
0x8d PUSH4 0x8f580996
0x92 EQ
0x93 PUSH2 0x56b
0x96 JUMPI
---
0x8d: V35 = 0x8f580996
0x92: V36 = EQ 0x8f580996 V10
0x93: V37 = 0x56b
0x96: JUMPI 0x56b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x57d]
---
0x97 DUP1
0x98 PUSH4 0x95d89b41
0x9d EQ
0x9e PUSH2 0x57d
0xa1 JUMPI
---
0x98: V38 = 0x95d89b41
0x9d: V39 = EQ 0x95d89b41 V10
0x9e: V40 = 0x57d
0xa1: JUMPI 0x57d V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x616]
---
0xa2 DUP1
0xa3 PUSH4 0xa9059cbb
0xa8 EQ
0xa9 PUSH2 0x616
0xac JUMPI
---
0xa3: V41 = 0xa9059cbb
0xa8: V42 = EQ 0xa9059cbb V10
0xa9: V43 = 0x616
0xac: JUMPI 0x616 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x66d]
---
0xad DUP1
0xae PUSH4 0xc59d4847
0xb3 EQ
0xb4 PUSH2 0x66d
0xb7 JUMPI
---
0xae: V44 = 0xc59d4847
0xb3: V45 = EQ 0xc59d4847 V10
0xb4: V46 = 0x66d
0xb7: JUMPI 0x66d V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x6ac]
---
0xb8 DUP1
0xb9 PUSH4 0xd5abeb01
0xbe EQ
0xbf PUSH2 0x6ac
0xc2 JUMPI
---
0xb9: V47 = 0xd5abeb01
0xbe: V48 = EQ 0xd5abeb01 V10
0xbf: V49 = 0x6ac
0xc2: JUMPI 0x6ac V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce, 0x6d2]
---
0xc3 DUP1
0xc4 PUSH4 0xda040c0f
0xc9 EQ
0xca PUSH2 0x6d2
0xcd JUMPI
---
0xc4: V50 = 0xda040c0f
0xc9: V51 = EQ 0xda040c0f V10
0xca: V52 = 0x6d2
0xcd: JUMPI 0x6d2 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0xd9, 0x6fc]
---
0xce DUP1
0xcf PUSH4 0xdd62ed3e
0xd4 EQ
0xd5 PUSH2 0x6fc
0xd8 JUMPI
---
0xcf: V53 = 0xdd62ed3e
0xd4: V54 = EQ 0xdd62ed3e V10
0xd5: V55 = 0x6fc
0xd8: JUMPI 0x6fc V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xce]
Successors: [0xe4, 0x765]
---
0xd9 DUP1
0xda PUSH4 0xe58fc54c
0xdf EQ
0xe0 PUSH2 0x765
0xe3 JUMPI
---
0xda: V56 = 0xe58fc54c
0xdf: V57 = EQ 0xe58fc54c V10
0xe0: V58 = 0x765
0xe3: JUMPI 0x765 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0x0, 0xd9]
Successors: [0xe8]
---
0xe4 JUMPDEST
0xe5 PUSH2 0x32f
---
0xe4: JUMPDEST 
0xe5: V59 = 0x32f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x32f]
Exit stack: [V10, 0x32f]

================================

Block 0xe8
[0xe8:0x100]
---
Predecessors: [0xe4]
Successors: [0x101, 0x106]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x0
0xeb PUSH1 0x3
0xed PUSH1 0x0
0xef SWAP1
0xf0 SLOAD
0xf1 SWAP1
0xf2 PUSH2 0x100
0xf5 EXP
0xf6 SWAP1
0xf7 DIV
0xf8 PUSH1 0xff
0xfa AND
0xfb ISZERO
0xfc ISZERO
0xfd PUSH2 0x106
0x100 JUMPI
---
0xe8: JUMPDEST 
0xe9: V60 = 0x0
0xeb: V61 = 0x3
0xed: V62 = 0x0
0xf0: V63 = S[0x3]
0xf2: V64 = 0x100
0xf5: V65 = EXP 0x100 0x0
0xf7: V66 = DIV V63 0x1
0xf8: V67 = 0xff
0xfa: V68 = AND 0xff V66
0xfb: V69 = ISZERO V68
0xfc: V70 = ISZERO V69
0xfd: V71 = 0x106
0x100: JUMPI 0x106 V70
---
Entry stack: [V10, 0x32f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x101
[0x101:0x105]
---
Predecessors: [0xe8]
Successors: []
---
0x101 PUSH1 0x0
0x103 PUSH1 0x0
0x105 REVERT
---
0x101: V72 = 0x0
0x103: V73 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x106
[0x106:0x10f]
---
Predecessors: [0xe8]
Successors: [0x110, 0x114]
---
0x106 JUMPDEST
0x107 PUSH1 0x0
0x109 CALLVALUE
0x10a EQ
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x106: JUMPDEST 
0x107: V74 = 0x0
0x109: V75 = CALLVALUE
0x10a: V76 = EQ V75 0x0
0x10b: V77 = ISZERO V76
0x10c: V78 = 0x114
0x10f: JUMPI 0x114 V77
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x106]
Successors: [0x32c]
---
0x110 PUSH2 0x32c
0x113 JUMP
---
0x110: V79 = 0x32c
0x113: JUMP 0x32c
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x114
[0x114:0x121]
---
Predecessors: [0x106]
Successors: [0x122, 0x175]
---
0x114 JUMPDEST
0x115 PUSH1 0x6
0x117 SLOAD
0x118 PUSH1 0x5
0x11a SLOAD
0x11b GT
0x11c DUP1
0x11d ISZERO
0x11e PUSH2 0x175
0x121 JUMPI
---
0x114: JUMPDEST 
0x115: V80 = 0x6
0x117: V81 = S[0x6]
0x118: V82 = 0x5
0x11a: V83 = S[0x5]
0x11b: V84 = GT V83 V81
0x11d: V85 = ISZERO V84
0x11e: V86 = 0x175
0x121: JUMPI 0x175 V85
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V10, 0x32f, 0x0, V84]

================================

Block 0x122
[0x122:0x174]
---
Predecessors: [0x114]
Successors: [0x175]
---
0x122 POP
0x123 PUSH1 0x0
0x125 PUSH1 0x0
0x127 SWAP1
0x128 SLOAD
0x129 SWAP1
0x12a PUSH2 0x100
0x12d EXP
0x12e SWAP1
0x12f DIV
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c CALLER
0x15d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x172 AND
0x173 EQ
0x174 ISZERO
---
0x123: V87 = 0x0
0x125: V88 = 0x0
0x128: V89 = S[0x0]
0x12a: V90 = 0x100
0x12d: V91 = EXP 0x100 0x0
0x12f: V92 = DIV V89 0x1
0x130: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x146: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x15c: V97 = CALLER
0x15d: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x172: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x173: V100 = EQ V99 V96
0x174: V101 = ISZERO V100
---
Entry stack: [V10, 0x32f, 0x0, V84]
Stack pops: 1
Stack additions: [V101]
Exit stack: [V10, 0x32f, 0x0, V101]

================================

Block 0x175
[0x175:0x17a]
---
Predecessors: [0x114, 0x122]
Successors: [0x17b, 0x180]
---
0x175 JUMPDEST
0x176 ISZERO
0x177 PUSH2 0x180
0x17a JUMPI
---
0x175: JUMPDEST 
0x176: V102 = ISZERO S0
0x177: V103 = 0x180
0x17a: JUMPI 0x180 V102
---
Entry stack: [V10, 0x32f, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x17b
[0x17b:0x17f]
---
Predecessors: [0x175]
Successors: []
---
0x17b PUSH1 0x0
0x17d PUSH1 0x0
0x17f REVERT
---
0x17b: V104 = 0x0
0x17d: V105 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x180
[0x180:0x1e0]
---
Predecessors: [0x175]
Successors: [0x1e1, 0x1e2]
---
0x180 JUMPDEST
0x181 PUSH1 0x0
0x183 PUSH1 0x0
0x185 SWAP1
0x186 SLOAD
0x187 SWAP1
0x188 PUSH2 0x100
0x18b EXP
0x18c SWAP1
0x18d DIV
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba PUSH2 0x8fc
0x1bd CALLVALUE
0x1be SWAP1
0x1bf DUP2
0x1c0 ISZERO
0x1c1 MUL
0x1c2 SWAP1
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP1
0x1c8 POP
0x1c9 PUSH1 0x0
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf DUP4
0x1d0 SUB
0x1d1 DUP2
0x1d2 DUP6
0x1d3 DUP9
0x1d4 DUP9
0x1d5 CALL
0x1d6 SWAP4
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db ISZERO
0x1dc ISZERO
0x1dd PUSH2 0x1e2
0x1e0 JUMPI
---
0x180: JUMPDEST 
0x181: V106 = 0x0
0x183: V107 = 0x0
0x186: V108 = S[0x0]
0x188: V109 = 0x100
0x18b: V110 = EXP 0x100 0x0
0x18d: V111 = DIV V108 0x1
0x18e: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1a4: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1ba: V116 = 0x8fc
0x1bd: V117 = CALLVALUE
0x1c0: V118 = ISZERO V117
0x1c1: V119 = MUL V118 0x8fc
0x1c3: V120 = 0x40
0x1c5: V121 = M[0x40]
0x1c9: V122 = 0x0
0x1cb: V123 = 0x40
0x1cd: V124 = M[0x40]
0x1d0: V125 = SUB V121 V124
0x1d5: V126 = CALL V119 V115 V117 V124 V125 V124 0x0
0x1db: V127 = ISZERO V126
0x1dc: V128 = ISZERO V127
0x1dd: V129 = 0x1e2
0x1e0: JUMPI 0x1e2 V128
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x1e1
[0x1e1:0x1e1]
---
Predecessors: [0x180]
Successors: []
---
0x1e1 INVALID
---
0x1e1: INVALID 
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x32f, 0x0]

================================

Block 0x1e2
[0x1e2:0x25e]
---
Predecessors: [0x180]
Successors: [0x25f, 0x279]
---
0x1e2 JUMPDEST
0x1e3 CALLVALUE
0x1e4 PUSH1 0x4
0x1e6 PUSH1 0x0
0x1e8 DUP3
0x1e9 DUP3
0x1ea SLOAD
0x1eb ADD
0x1ec SWAP3
0x1ed POP
0x1ee POP
0x1ef DUP2
0x1f0 SWAP1
0x1f1 SSTORE
0x1f2 POP
0x1f3 PUSH1 0x64
0x1f5 CALLVALUE
0x1f6 MUL
0x1f7 SWAP1
0x1f8 POP
0x1f9 DUP1
0x1fa PUSH1 0x5
0x1fc PUSH1 0x0
0x1fe DUP3
0x1ff DUP3
0x200 SLOAD
0x201 ADD
0x202 SWAP3
0x203 POP
0x204 POP
0x205 DUP2
0x206 SWAP1
0x207 SSTORE
0x208 POP
0x209 PUSH1 0x0
0x20b PUSH1 0x0
0x20d SWAP1
0x20e SLOAD
0x20f SWAP1
0x210 PUSH2 0x100
0x213 EXP
0x214 SWAP1
0x215 DIV
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x241 AND
0x242 CALLER
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 AND
0x259 EQ
0x25a ISZERO
0x25b PUSH2 0x279
0x25e JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V130 = CALLVALUE
0x1e4: V131 = 0x4
0x1e6: V132 = 0x0
0x1ea: V133 = S[0x4]
0x1eb: V134 = ADD V133 V130
0x1f1: S[0x4] = V134
0x1f3: V135 = 0x64
0x1f5: V136 = CALLVALUE
0x1f6: V137 = MUL V136 0x64
0x1fa: V138 = 0x5
0x1fc: V139 = 0x0
0x200: V140 = S[0x5]
0x201: V141 = ADD V140 V137
0x207: S[0x5] = V141
0x209: V142 = 0x0
0x20b: V143 = 0x0
0x20e: V144 = S[0x0]
0x210: V145 = 0x100
0x213: V146 = EXP 0x100 0x0
0x215: V147 = DIV V144 0x1
0x216: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x22c: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x241: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x242: V152 = CALLER
0x243: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x259: V155 = EQ V154 V151
0x25a: V156 = ISZERO V155
0x25b: V157 = 0x279
0x25e: JUMPI 0x279 V156
---
Entry stack: [V10, 0x32f, 0x0]
Stack pops: 1
Stack additions: [V137]
Exit stack: [V10, 0x32f, V137]

================================

Block 0x25f
[0x25f:0x278]
---
Predecessors: [0x1e2]
Successors: [0x279]
---
0x25f PUSH8 0xde0b6b3a7640000
0x268 CALLVALUE
0x269 MUL
0x26a PUSH1 0x6
0x26c PUSH1 0x0
0x26e DUP3
0x26f DUP3
0x270 SLOAD
0x271 ADD
0x272 SWAP3
0x273 POP
0x274 POP
0x275 DUP2
0x276 SWAP1
0x277 SSTORE
0x278 POP
---
0x25f: V158 = 0xde0b6b3a7640000
0x268: V159 = CALLVALUE
0x269: V160 = MUL V159 0xde0b6b3a7640000
0x26a: V161 = 0x6
0x26c: V162 = 0x0
0x270: V163 = S[0x6]
0x271: V164 = ADD V163 V160
0x277: S[0x6] = V164
---
Entry stack: [V10, 0x32f, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x32f, V137]

================================

Block 0x279
[0x279:0x32b]
---
Predecessors: [0x1e2, 0x25f]
Successors: [0x32c]
---
0x279 JUMPDEST
0x27a DUP1
0x27b PUSH1 0x1
0x27d PUSH1 0x0
0x27f CALLER
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac DUP2
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 PUSH1 0x0
0x2b9 SHA3
0x2ba PUSH1 0x0
0x2bc DUP3
0x2bd DUP3
0x2be SLOAD
0x2bf ADD
0x2c0 SWAP3
0x2c1 POP
0x2c2 POP
0x2c3 DUP2
0x2c4 SWAP1
0x2c5 SSTORE
0x2c6 POP
0x2c7 CALLER
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd AND
0x2de ADDRESS
0x2df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f4 AND
0x2f5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x316 DUP4
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b DUP3
0x31c DUP2
0x31d MSTORE
0x31e PUSH1 0x20
0x320 ADD
0x321 SWAP2
0x322 POP
0x323 POP
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 SWAP2
0x329 SUB
0x32a SWAP1
0x32b LOG3
---
0x279: JUMPDEST 
0x27b: V165 = 0x1
0x27d: V166 = 0x0
0x27f: V167 = CALLER
0x280: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x296: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2ad: M[0x0] = V171
0x2ae: V172 = 0x20
0x2b0: V173 = ADD 0x20 0x0
0x2b3: M[0x20] = 0x1
0x2b4: V174 = 0x20
0x2b6: V175 = ADD 0x20 0x20
0x2b7: V176 = 0x0
0x2b9: V177 = SHA3 0x0 0x40
0x2ba: V178 = 0x0
0x2be: V179 = S[V177]
0x2bf: V180 = ADD V179 V137
0x2c5: S[V177] = V180
0x2c7: V181 = CALLER
0x2c8: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2de: V184 = ADDRESS
0x2df: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2f5: V187 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x317: V188 = 0x40
0x319: V189 = M[0x40]
0x31d: M[V189] = V137
0x31e: V190 = 0x20
0x320: V191 = ADD 0x20 V189
0x324: V192 = 0x40
0x326: V193 = M[0x40]
0x329: V194 = SUB V191 V193
0x32b: LOG V193 V194 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V186 V183
---
Entry stack: [V10, 0x32f, V137]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x32f, V137]

================================

Block 0x32c
[0x32c:0x32e]
---
Predecessors: [0x110, 0x279]
Successors: [0x32f]
---
0x32c JUMPDEST
0x32d POP
0x32e JUMP
---
0x32c: JUMPDEST 
0x32e: JUMP 0x32f
---
Entry stack: [V10, 0x32f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x32f
[0x32f:0x330]
---
Predecessors: [0x32c]
Successors: []
---
0x32f JUMPDEST
0x330 STOP
---
0x32f: JUMPDEST 
0x330: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x331
[0x331:0x337]
---
Predecessors: [0xb]
Successors: [0x338, 0x339]
---
0x331 JUMPDEST
0x332 CALLVALUE
0x333 ISZERO
0x334 PUSH2 0x339
0x337 JUMPI
---
0x331: JUMPDEST 
0x332: V195 = CALLVALUE
0x333: V196 = ISZERO V195
0x334: V197 = 0x339
0x337: JUMPI 0x339 V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x338
[0x338:0x338]
---
Predecessors: [0x331]
Successors: []
---
0x338 INVALID
---
0x338: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x339
[0x339:0x340]
---
Predecessors: [0x331]
Successors: [0x7b3]
---
0x339 JUMPDEST
0x33a PUSH2 0x341
0x33d PUSH2 0x7b3
0x340 JUMP
---
0x339: JUMPDEST 
0x33a: V198 = 0x341
0x33d: V199 = 0x7b3
0x340: JUMP 0x7b3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x341]
Exit stack: [V10, 0x341]

================================

Block 0x341
[0x341:0x36b]
---
Predecessors: [0x7f5, 0xe63]
Successors: [0x36c, 0x390]
---
0x341 JUMPDEST
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 DUP1
0x347 PUSH1 0x20
0x349 ADD
0x34a DUP3
0x34b DUP2
0x34c SUB
0x34d DUP3
0x34e MSTORE
0x34f DUP4
0x350 DUP2
0x351 DUP2
0x352 MLOAD
0x353 DUP2
0x354 MSTORE
0x355 PUSH1 0x20
0x357 ADD
0x358 SWAP2
0x359 POP
0x35a DUP1
0x35b MLOAD
0x35c SWAP1
0x35d PUSH1 0x20
0x35f ADD
0x360 SWAP1
0x361 DUP1
0x362 DUP4
0x363 DUP4
0x364 PUSH1 0x0
0x366 DUP4
0x367 EQ
0x368 PUSH2 0x390
0x36b JUMPI
---
0x341: JUMPDEST 
0x342: V200 = 0x40
0x344: V201 = M[0x40]
0x347: V202 = 0x20
0x349: V203 = ADD 0x20 V201
0x34c: V204 = SUB V203 V201
0x34e: M[V201] = V204
0x352: V205 = M[S0]
0x354: M[V203] = V205
0x355: V206 = 0x20
0x357: V207 = ADD 0x20 V203
0x35b: V208 = M[S0]
0x35d: V209 = 0x20
0x35f: V210 = ADD 0x20 S0
0x364: V211 = 0x0
0x367: V212 = EQ V208 0x0
0x368: V213 = 0x390
0x36b: JUMPI 0x390 V212
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V201, V201, V207, V210, V208, V208, V207, V210]
Exit stack: [V10, S0, V201, V201, V207, V210, V208, V208, V207, V210]

================================

Block 0x36c
[0x36c:0x379]
---
Predecessors: [0x341, 0x37a]
Successors: [0x37a, 0x390]
---
0x36c JUMPDEST
0x36d DUP1
0x36e MLOAD
0x36f DUP3
0x370 MSTORE
0x371 PUSH1 0x20
0x373 DUP4
0x374 GT
0x375 ISZERO
0x376 PUSH2 0x390
0x379 JUMPI
---
0x36c: JUMPDEST 
0x36e: V214 = M[S0]
0x370: M[S1] = V214
0x371: V215 = 0x20
0x374: V216 = GT S2 0x20
0x375: V217 = ISZERO V216
0x376: V218 = 0x390
0x379: JUMPI 0x390 V217
---
Entry stack: [V10, S8, V201, V201, V207, V210, V208, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, V201, V201, V207, V210, V208, S2, S1, S0]

================================

Block 0x37a
[0x37a:0x38f]
---
Predecessors: [0x36c]
Successors: [0x36c]
---
0x37a PUSH1 0x20
0x37c DUP3
0x37d ADD
0x37e SWAP2
0x37f POP
0x380 PUSH1 0x20
0x382 DUP2
0x383 ADD
0x384 SWAP1
0x385 POP
0x386 PUSH1 0x20
0x388 DUP4
0x389 SUB
0x38a SWAP3
0x38b POP
0x38c PUSH2 0x36c
0x38f JUMP
---
0x37a: V219 = 0x20
0x37d: V220 = ADD S1 0x20
0x380: V221 = 0x20
0x383: V222 = ADD S0 0x20
0x386: V223 = 0x20
0x389: V224 = SUB S2 0x20
0x38c: V225 = 0x36c
0x38f: JUMP 0x36c
---
Entry stack: [V10, S8, V201, V201, V207, V210, V208, S2, S1, S0]
Stack pops: 3
Stack additions: [V224, V220, V222]
Exit stack: [V10, S8, V201, V201, V207, V210, V208, V224, V220, V222]

================================

Block 0x390
[0x390:0x3a2]
---
Predecessors: [0x341, 0x36c]
Successors: [0x3a3, 0x3bc]
---
0x390 JUMPDEST
0x391 POP
0x392 POP
0x393 POP
0x394 SWAP1
0x395 POP
0x396 SWAP1
0x397 DUP2
0x398 ADD
0x399 SWAP1
0x39a PUSH1 0x1f
0x39c AND
0x39d DUP1
0x39e ISZERO
0x39f PUSH2 0x3bc
0x3a2 JUMPI
---
0x390: JUMPDEST 
0x398: V226 = ADD V208 V207
0x39a: V227 = 0x1f
0x39c: V228 = AND 0x1f V208
0x39e: V229 = ISZERO V228
0x39f: V230 = 0x3bc
0x3a2: JUMPI 0x3bc V229
---
Entry stack: [V10, S8, V201, V201, V207, V210, V208, S2, S1, S0]
Stack pops: 6
Stack additions: [V226, V228]
Exit stack: [V10, S8, V201, V201, V226, V228]

================================

Block 0x3a3
[0x3a3:0x3bb]
---
Predecessors: [0x390]
Successors: [0x3bc]
---
0x3a3 DUP1
0x3a4 DUP3
0x3a5 SUB
0x3a6 DUP1
0x3a7 MLOAD
0x3a8 PUSH1 0x1
0x3aa DUP4
0x3ab PUSH1 0x20
0x3ad SUB
0x3ae PUSH2 0x100
0x3b1 EXP
0x3b2 SUB
0x3b3 NOT
0x3b4 AND
0x3b5 DUP2
0x3b6 MSTORE
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP2
0x3bb POP
---
0x3a5: V231 = SUB V226 V228
0x3a7: V232 = M[V231]
0x3a8: V233 = 0x1
0x3ab: V234 = 0x20
0x3ad: V235 = SUB 0x20 V228
0x3ae: V236 = 0x100
0x3b1: V237 = EXP 0x100 V235
0x3b2: V238 = SUB V237 0x1
0x3b3: V239 = NOT V238
0x3b4: V240 = AND V239 V232
0x3b6: M[V231] = V240
0x3b7: V241 = 0x20
0x3b9: V242 = ADD 0x20 V231
---
Entry stack: [V10, S4, V201, V201, V226, V228]
Stack pops: 2
Stack additions: [V242, S0]
Exit stack: [V10, S4, V201, V201, V242, V228]

================================

Block 0x3bc
[0x3bc:0x3c9]
---
Predecessors: [0x390, 0x3a3]
Successors: []
---
0x3bc JUMPDEST
0x3bd POP
0x3be SWAP3
0x3bf POP
0x3c0 POP
0x3c1 POP
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 SWAP2
0x3c7 SUB
0x3c8 SWAP1
0x3c9 RETURN
---
0x3bc: JUMPDEST 
0x3c2: V243 = 0x40
0x3c4: V244 = M[0x40]
0x3c7: V245 = SUB S1 V244
0x3c9: RETURN V244 V245
---
Entry stack: [V10, S4, V201, V201, S1, V228]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ca
[0x3ca:0x3d0]
---
Predecessors: [0x3f]
Successors: [0x3d1, 0x3d2]
---
0x3ca JUMPDEST
0x3cb CALLVALUE
0x3cc ISZERO
0x3cd PUSH2 0x3d2
0x3d0 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V246 = CALLVALUE
0x3cc: V247 = ISZERO V246
0x3cd: V248 = 0x3d2
0x3d0: JUMPI 0x3d2 V247
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d1
[0x3d1:0x3d1]
---
Predecessors: [0x3ca]
Successors: []
---
0x3d1 INVALID
---
0x3d1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d2
[0x3d2:0x406]
---
Predecessors: [0x3ca]
Successors: [0x7f8]
---
0x3d2 JUMPDEST
0x3d3 PUSH2 0x407
0x3d6 PUSH1 0x4
0x3d8 DUP1
0x3d9 DUP1
0x3da CALLDATALOAD
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 AND
0x3f1 SWAP1
0x3f2 PUSH1 0x20
0x3f4 ADD
0x3f5 SWAP1
0x3f6 SWAP2
0x3f7 SWAP1
0x3f8 DUP1
0x3f9 CALLDATALOAD
0x3fa SWAP1
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe SWAP1
0x3ff SWAP2
0x400 SWAP1
0x401 POP
0x402 POP
0x403 PUSH2 0x7f8
0x406 JUMP
---
0x3d2: JUMPDEST 
0x3d3: V249 = 0x407
0x3d6: V250 = 0x4
0x3da: V251 = CALLDATALOAD 0x4
0x3db: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x3f2: V254 = 0x20
0x3f4: V255 = ADD 0x20 0x4
0x3f9: V256 = CALLDATALOAD 0x24
0x3fb: V257 = 0x20
0x3fd: V258 = ADD 0x20 0x24
0x403: V259 = 0x7f8
0x406: JUMP 0x7f8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x407, V253, V256]
Exit stack: [V10, 0x407, V253, V256]

================================

Block 0x407
[0x407:0x420]
---
Predecessors: [0x981]
Successors: []
---
0x407 JUMPDEST
0x408 PUSH1 0x40
0x40a MLOAD
0x40b DUP1
0x40c DUP3
0x40d ISZERO
0x40e ISZERO
0x40f ISZERO
0x410 ISZERO
0x411 DUP2
0x412 MSTORE
0x413 PUSH1 0x20
0x415 ADD
0x416 SWAP2
0x417 POP
0x418 POP
0x419 PUSH1 0x40
0x41b MLOAD
0x41c DUP1
0x41d SWAP2
0x41e SUB
0x41f SWAP1
0x420 RETURN
---
0x407: JUMPDEST 
0x408: V260 = 0x40
0x40a: V261 = M[0x40]
0x40d: V262 = ISZERO {0x0, 0x1}
0x40e: V263 = ISZERO V262
0x40f: V264 = ISZERO V263
0x410: V265 = ISZERO V264
0x412: M[V261] = V265
0x413: V266 = 0x20
0x415: V267 = ADD 0x20 V261
0x419: V268 = 0x40
0x41b: V269 = M[0x40]
0x41e: V270 = SUB V267 V269
0x420: RETURN V269 V270
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x421
[0x421:0x427]
---
Predecessors: [0x4a]
Successors: [0x428, 0x429]
---
0x421 JUMPDEST
0x422 CALLVALUE
0x423 ISZERO
0x424 PUSH2 0x429
0x427 JUMPI
---
0x421: JUMPDEST 
0x422: V271 = CALLVALUE
0x423: V272 = ISZERO V271
0x424: V273 = 0x429
0x427: JUMPI 0x429 V272
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x428
[0x428:0x428]
---
Predecessors: [0x421]
Successors: []
---
0x428 INVALID
---
0x428: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x429
[0x429:0x430]
---
Predecessors: [0x421]
Successors: [0x987]
---
0x429 JUMPDEST
0x42a PUSH2 0x431
0x42d PUSH2 0x987
0x430 JUMP
---
0x429: JUMPDEST 
0x42a: V274 = 0x431
0x42d: V275 = 0x987
0x430: JUMP 0x987
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x431]
Exit stack: [V10, 0x431]

================================

Block 0x431
[0x431:0x446]
---
Predecessors: [0x987]
Successors: []
---
0x431 JUMPDEST
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 DUP3
0x437 DUP2
0x438 MSTORE
0x439 PUSH1 0x20
0x43b ADD
0x43c SWAP2
0x43d POP
0x43e POP
0x43f PUSH1 0x40
0x441 MLOAD
0x442 DUP1
0x443 SWAP2
0x444 SUB
0x445 SWAP1
0x446 RETURN
---
0x431: JUMPDEST 
0x432: V276 = 0x40
0x434: V277 = M[0x40]
0x438: M[V277] = V628
0x439: V278 = 0x20
0x43b: V279 = ADD 0x20 V277
0x43f: V280 = 0x40
0x441: V281 = M[0x40]
0x444: V282 = SUB V279 V281
0x446: RETURN V281 V282
---
Entry stack: [V10, 0x431, V628]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x431]

================================

Block 0x447
[0x447:0x44d]
---
Predecessors: [0x55]
Successors: [0x44e, 0x44f]
---
0x447 JUMPDEST
0x448 CALLVALUE
0x449 ISZERO
0x44a PUSH2 0x44f
0x44d JUMPI
---
0x447: JUMPDEST 
0x448: V283 = CALLVALUE
0x449: V284 = ISZERO V283
0x44a: V285 = 0x44f
0x44d: JUMPI 0x44f V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44e
[0x44e:0x44e]
---
Predecessors: [0x447]
Successors: []
---
0x44e INVALID
---
0x44e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44f
[0x44f:0x456]
---
Predecessors: [0x447]
Successors: [0x98d]
---
0x44f JUMPDEST
0x450 PUSH2 0x457
0x453 PUSH2 0x98d
0x456 JUMP
---
0x44f: JUMPDEST 
0x450: V286 = 0x457
0x453: V287 = 0x98d
0x456: JUMP 0x98d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x457]
Exit stack: [V10, 0x457]

================================

Block 0x457
[0x457:0x46c]
---
Predecessors: [0x98d]
Successors: []
---
0x457 JUMPDEST
0x458 PUSH1 0x40
0x45a MLOAD
0x45b DUP1
0x45c DUP3
0x45d DUP2
0x45e MSTORE
0x45f PUSH1 0x20
0x461 ADD
0x462 SWAP2
0x463 POP
0x464 POP
0x465 PUSH1 0x40
0x467 MLOAD
0x468 DUP1
0x469 SWAP2
0x46a SUB
0x46b SWAP1
0x46c RETURN
---
0x457: JUMPDEST 
0x458: V288 = 0x40
0x45a: V289 = M[0x40]
0x45e: M[V289] = V630
0x45f: V290 = 0x20
0x461: V291 = ADD 0x20 V289
0x465: V292 = 0x40
0x467: V293 = M[0x40]
0x46a: V294 = SUB V291 V293
0x46c: RETURN V293 V294
---
Entry stack: [V10, 0x457, V630]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x457]

================================

Block 0x46d
[0x46d:0x473]
---
Predecessors: [0x60]
Successors: [0x474, 0x475]
---
0x46d JUMPDEST
0x46e CALLVALUE
0x46f ISZERO
0x470 PUSH2 0x475
0x473 JUMPI
---
0x46d: JUMPDEST 
0x46e: V295 = CALLVALUE
0x46f: V296 = ISZERO V295
0x470: V297 = 0x475
0x473: JUMPI 0x475 V296
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x474
[0x474:0x474]
---
Predecessors: [0x46d]
Successors: []
---
0x474 INVALID
---
0x474: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x475
[0x475:0x4c8]
---
Predecessors: [0x46d]
Successors: [0x993]
---
0x475 JUMPDEST
0x476 PUSH2 0x4c9
0x479 PUSH1 0x4
0x47b DUP1
0x47c DUP1
0x47d CALLDATALOAD
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 SWAP1
0x495 PUSH1 0x20
0x497 ADD
0x498 SWAP1
0x499 SWAP2
0x49a SWAP1
0x49b DUP1
0x49c CALLDATALOAD
0x49d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b2 AND
0x4b3 SWAP1
0x4b4 PUSH1 0x20
0x4b6 ADD
0x4b7 SWAP1
0x4b8 SWAP2
0x4b9 SWAP1
0x4ba DUP1
0x4bb CALLDATALOAD
0x4bc SWAP1
0x4bd PUSH1 0x20
0x4bf ADD
0x4c0 SWAP1
0x4c1 SWAP2
0x4c2 SWAP1
0x4c3 POP
0x4c4 POP
0x4c5 PUSH2 0x993
0x4c8 JUMP
---
0x475: JUMPDEST 
0x476: V298 = 0x4c9
0x479: V299 = 0x4
0x47d: V300 = CALLDATALOAD 0x4
0x47e: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x495: V303 = 0x20
0x497: V304 = ADD 0x20 0x4
0x49c: V305 = CALLDATALOAD 0x24
0x49d: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x4b4: V308 = 0x20
0x4b6: V309 = ADD 0x20 0x24
0x4bb: V310 = CALLDATALOAD 0x44
0x4bd: V311 = 0x20
0x4bf: V312 = ADD 0x20 0x44
0x4c5: V313 = 0x993
0x4c8: JUMP 0x993
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4c9, V302, V307, V310]
Exit stack: [V10, 0x4c9, V302, V307, V310]

================================

Block 0x4c9
[0x4c9:0x4e2]
---
Predecessors: [0xccb]
Successors: []
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd DUP1
0x4ce DUP3
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 ISZERO
0x4d2 ISZERO
0x4d3 DUP2
0x4d4 MSTORE
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 SWAP2
0x4d9 POP
0x4da POP
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de DUP1
0x4df SWAP2
0x4e0 SUB
0x4e1 SWAP1
0x4e2 RETURN
---
0x4c9: JUMPDEST 
0x4ca: V314 = 0x40
0x4cc: V315 = M[0x40]
0x4cf: V316 = ISZERO {0x0, 0x1}
0x4d0: V317 = ISZERO V316
0x4d1: V318 = ISZERO V317
0x4d2: V319 = ISZERO V318
0x4d4: M[V315] = V319
0x4d5: V320 = 0x20
0x4d7: V321 = ADD 0x20 V315
0x4db: V322 = 0x40
0x4dd: V323 = M[0x40]
0x4e0: V324 = SUB V321 V323
0x4e2: RETURN V323 V324
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e3
[0x4e3:0x4e9]
---
Predecessors: [0x6b]
Successors: [0x4ea, 0x4eb]
---
0x4e3 JUMPDEST
0x4e4 CALLVALUE
0x4e5 ISZERO
0x4e6 PUSH2 0x4eb
0x4e9 JUMPI
---
0x4e3: JUMPDEST 
0x4e4: V325 = CALLVALUE
0x4e5: V326 = ISZERO V325
0x4e6: V327 = 0x4eb
0x4e9: JUMPI 0x4eb V326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ea
[0x4ea:0x4ea]
---
Predecessors: [0x4e3]
Successors: []
---
0x4ea INVALID
---
0x4ea: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4eb
[0x4eb:0x4f2]
---
Predecessors: [0x4e3]
Successors: [0xcd7]
---
0x4eb JUMPDEST
0x4ec PUSH2 0x4f3
0x4ef PUSH2 0xcd7
0x4f2 JUMP
---
0x4eb: JUMPDEST 
0x4ec: V328 = 0x4f3
0x4ef: V329 = 0xcd7
0x4f2: JUMP 0xcd7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4f3]
Exit stack: [V10, 0x4f3]

================================

Block 0x4f3
[0x4f3:0x50e]
---
Predecessors: [0xcde]
Successors: []
---
0x4f3 JUMPDEST
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 DUP1
0x4f8 DUP3
0x4f9 PUSH1 0xff
0x4fb AND
0x4fc PUSH1 0xff
0x4fe AND
0x4ff DUP2
0x500 MSTORE
0x501 PUSH1 0x20
0x503 ADD
0x504 SWAP2
0x505 POP
0x506 POP
0x507 PUSH1 0x40
0x509 MLOAD
0x50a DUP1
0x50b SWAP2
0x50c SUB
0x50d SWAP1
0x50e RETURN
---
0x4f3: JUMPDEST 
0x4f4: V330 = 0x40
0x4f6: V331 = M[0x40]
0x4f9: V332 = 0xff
0x4fb: V333 = AND 0xff 0x12
0x4fc: V334 = 0xff
0x4fe: V335 = AND 0xff 0x12
0x500: M[V331] = 0x12
0x501: V336 = 0x20
0x503: V337 = ADD 0x20 V331
0x507: V338 = 0x40
0x509: V339 = M[0x40]
0x50c: V340 = SUB V337 V339
0x50e: RETURN V339 V340
---
Entry stack: [V10, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x50f
[0x50f:0x515]
---
Predecessors: [0x76]
Successors: [0x516, 0x517]
---
0x50f JUMPDEST
0x510 CALLVALUE
0x511 ISZERO
0x512 PUSH2 0x517
0x515 JUMPI
---
0x50f: JUMPDEST 
0x510: V341 = CALLVALUE
0x511: V342 = ISZERO V341
0x512: V343 = 0x517
0x515: JUMPI 0x517 V342
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x516
[0x516:0x516]
---
Predecessors: [0x50f]
Successors: []
---
0x516 INVALID
---
0x516: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x517
[0x517:0x51e]
---
Predecessors: [0x50f]
Successors: [0xce1]
---
0x517 JUMPDEST
0x518 PUSH2 0x51f
0x51b PUSH2 0xce1
0x51e JUMP
---
0x517: JUMPDEST 
0x518: V344 = 0x51f
0x51b: V345 = 0xce1
0x51e: JUMP 0xce1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x51f]
Exit stack: [V10, 0x51f]

================================

Block 0x51f
[0x51f:0x520]
---
Predecessors: [0xd5a]
Successors: []
---
0x51f JUMPDEST
0x520 STOP
---
0x51f: JUMPDEST 
0x520: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x521
[0x521:0x527]
---
Predecessors: [0x81]
Successors: [0x528, 0x529]
---
0x521 JUMPDEST
0x522 CALLVALUE
0x523 ISZERO
0x524 PUSH2 0x529
0x527 JUMPI
---
0x521: JUMPDEST 
0x522: V346 = CALLVALUE
0x523: V347 = ISZERO V346
0x524: V348 = 0x529
0x527: JUMPI 0x529 V347
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x521]
Successors: []
---
0x528 INVALID
---
0x528: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x529
[0x529:0x554]
---
Predecessors: [0x521]
Successors: [0xd5c]
---
0x529 JUMPDEST
0x52a PUSH2 0x555
0x52d PUSH1 0x4
0x52f DUP1
0x530 DUP1
0x531 CALLDATALOAD
0x532 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x547 AND
0x548 SWAP1
0x549 PUSH1 0x20
0x54b ADD
0x54c SWAP1
0x54d SWAP2
0x54e SWAP1
0x54f POP
0x550 POP
0x551 PUSH2 0xd5c
0x554 JUMP
---
0x529: JUMPDEST 
0x52a: V349 = 0x555
0x52d: V350 = 0x4
0x531: V351 = CALLDATALOAD 0x4
0x532: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x547: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x549: V354 = 0x20
0x54b: V355 = ADD 0x20 0x4
0x551: V356 = 0xd5c
0x554: JUMP 0xd5c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x555, V353]
Exit stack: [V10, 0x555, V353]

================================

Block 0x555
[0x555:0x56a]
---
Predecessors: [0xda1]
Successors: []
---
0x555 JUMPDEST
0x556 PUSH1 0x40
0x558 MLOAD
0x559 DUP1
0x55a DUP3
0x55b DUP2
0x55c MSTORE
0x55d PUSH1 0x20
0x55f ADD
0x560 SWAP2
0x561 POP
0x562 POP
0x563 PUSH1 0x40
0x565 MLOAD
0x566 DUP1
0x567 SWAP2
0x568 SUB
0x569 SWAP1
0x56a RETURN
---
0x555: JUMPDEST 
0x556: V357 = 0x40
0x558: V358 = M[0x40]
0x55c: M[V358] = V849
0x55d: V359 = 0x20
0x55f: V360 = ADD 0x20 V358
0x563: V361 = 0x40
0x565: V362 = M[0x40]
0x568: V363 = SUB V360 V362
0x56a: RETURN V362 V363
---
Entry stack: [V10, V849]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x56b
[0x56b:0x571]
---
Predecessors: [0x8c]
Successors: [0x572, 0x573]
---
0x56b JUMPDEST
0x56c CALLVALUE
0x56d ISZERO
0x56e PUSH2 0x573
0x571 JUMPI
---
0x56b: JUMPDEST 
0x56c: V364 = CALLVALUE
0x56d: V365 = ISZERO V364
0x56e: V366 = 0x573
0x571: JUMPI 0x573 V365
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x572
[0x572:0x572]
---
Predecessors: [0x56b]
Successors: []
---
0x572 INVALID
---
0x572: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x573
[0x573:0x57a]
---
Predecessors: [0x56b]
Successors: [0xda6]
---
0x573 JUMPDEST
0x574 PUSH2 0x57b
0x577 PUSH2 0xda6
0x57a JUMP
---
0x573: JUMPDEST 
0x574: V367 = 0x57b
0x577: V368 = 0xda6
0x57a: JUMP 0xda6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x57b]
Exit stack: [V10, 0x57b]

================================

Block 0x57b
[0x57b:0x57c]
---
Predecessors: [0xe1f]
Successors: []
---
0x57b JUMPDEST
0x57c STOP
---
0x57b: JUMPDEST 
0x57c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x57d
[0x57d:0x583]
---
Predecessors: [0x97]
Successors: [0x584, 0x585]
---
0x57d JUMPDEST
0x57e CALLVALUE
0x57f ISZERO
0x580 PUSH2 0x585
0x583 JUMPI
---
0x57d: JUMPDEST 
0x57e: V369 = CALLVALUE
0x57f: V370 = ISZERO V369
0x580: V371 = 0x585
0x583: JUMPI 0x585 V370
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x584
[0x584:0x584]
---
Predecessors: [0x57d]
Successors: []
---
0x584 INVALID
---
0x584: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x585
[0x585:0x58c]
---
Predecessors: [0x57d]
Successors: [0xe21]
---
0x585 JUMPDEST
0x586 PUSH2 0x58d
0x589 PUSH2 0xe21
0x58c JUMP
---
0x585: JUMPDEST 
0x586: V372 = 0x58d
0x589: V373 = 0xe21
0x58c: JUMP 0xe21
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x58d]
Exit stack: [V10, 0x58d]

================================

Block 0x58d
[0x58d:0x5b7]
---
Predecessors: [0x7f5, 0xe63]
Successors: [0x5b8, 0x5dc]
---
0x58d JUMPDEST
0x58e PUSH1 0x40
0x590 MLOAD
0x591 DUP1
0x592 DUP1
0x593 PUSH1 0x20
0x595 ADD
0x596 DUP3
0x597 DUP2
0x598 SUB
0x599 DUP3
0x59a MSTORE
0x59b DUP4
0x59c DUP2
0x59d DUP2
0x59e MLOAD
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x20
0x5a3 ADD
0x5a4 SWAP2
0x5a5 POP
0x5a6 DUP1
0x5a7 MLOAD
0x5a8 SWAP1
0x5a9 PUSH1 0x20
0x5ab ADD
0x5ac SWAP1
0x5ad DUP1
0x5ae DUP4
0x5af DUP4
0x5b0 PUSH1 0x0
0x5b2 DUP4
0x5b3 EQ
0x5b4 PUSH2 0x5dc
0x5b7 JUMPI
---
0x58d: JUMPDEST 
0x58e: V374 = 0x40
0x590: V375 = M[0x40]
0x593: V376 = 0x20
0x595: V377 = ADD 0x20 V375
0x598: V378 = SUB V377 V375
0x59a: M[V375] = V378
0x59e: V379 = M[S0]
0x5a0: M[V377] = V379
0x5a1: V380 = 0x20
0x5a3: V381 = ADD 0x20 V377
0x5a7: V382 = M[S0]
0x5a9: V383 = 0x20
0x5ab: V384 = ADD 0x20 S0
0x5b0: V385 = 0x0
0x5b3: V386 = EQ V382 0x0
0x5b4: V387 = 0x5dc
0x5b7: JUMPI 0x5dc V386
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V375, V375, V381, V384, V382, V382, V381, V384]
Exit stack: [V10, S0, V375, V375, V381, V384, V382, V382, V381, V384]

================================

Block 0x5b8
[0x5b8:0x5c5]
---
Predecessors: [0x58d, 0x5c6]
Successors: [0x5c6, 0x5dc]
---
0x5b8 JUMPDEST
0x5b9 DUP1
0x5ba MLOAD
0x5bb DUP3
0x5bc MSTORE
0x5bd PUSH1 0x20
0x5bf DUP4
0x5c0 GT
0x5c1 ISZERO
0x5c2 PUSH2 0x5dc
0x5c5 JUMPI
---
0x5b8: JUMPDEST 
0x5ba: V388 = M[S0]
0x5bc: M[S1] = V388
0x5bd: V389 = 0x20
0x5c0: V390 = GT S2 0x20
0x5c1: V391 = ISZERO V390
0x5c2: V392 = 0x5dc
0x5c5: JUMPI 0x5dc V391
---
Entry stack: [V10, S8, V375, V375, V381, V384, V382, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, V375, V375, V381, V384, V382, S2, S1, S0]

================================

Block 0x5c6
[0x5c6:0x5db]
---
Predecessors: [0x5b8]
Successors: [0x5b8]
---
0x5c6 PUSH1 0x20
0x5c8 DUP3
0x5c9 ADD
0x5ca SWAP2
0x5cb POP
0x5cc PUSH1 0x20
0x5ce DUP2
0x5cf ADD
0x5d0 SWAP1
0x5d1 POP
0x5d2 PUSH1 0x20
0x5d4 DUP4
0x5d5 SUB
0x5d6 SWAP3
0x5d7 POP
0x5d8 PUSH2 0x5b8
0x5db JUMP
---
0x5c6: V393 = 0x20
0x5c9: V394 = ADD S1 0x20
0x5cc: V395 = 0x20
0x5cf: V396 = ADD S0 0x20
0x5d2: V397 = 0x20
0x5d5: V398 = SUB S2 0x20
0x5d8: V399 = 0x5b8
0x5db: JUMP 0x5b8
---
Entry stack: [V10, S8, V375, V375, V381, V384, V382, S2, S1, S0]
Stack pops: 3
Stack additions: [V398, V394, V396]
Exit stack: [V10, S8, V375, V375, V381, V384, V382, V398, V394, V396]

================================

Block 0x5dc
[0x5dc:0x5ee]
---
Predecessors: [0x58d, 0x5b8]
Successors: [0x5ef, 0x608]
---
0x5dc JUMPDEST
0x5dd POP
0x5de POP
0x5df POP
0x5e0 SWAP1
0x5e1 POP
0x5e2 SWAP1
0x5e3 DUP2
0x5e4 ADD
0x5e5 SWAP1
0x5e6 PUSH1 0x1f
0x5e8 AND
0x5e9 DUP1
0x5ea ISZERO
0x5eb PUSH2 0x608
0x5ee JUMPI
---
0x5dc: JUMPDEST 
0x5e4: V400 = ADD V382 V381
0x5e6: V401 = 0x1f
0x5e8: V402 = AND 0x1f V382
0x5ea: V403 = ISZERO V402
0x5eb: V404 = 0x608
0x5ee: JUMPI 0x608 V403
---
Entry stack: [V10, S8, V375, V375, V381, V384, V382, S2, S1, S0]
Stack pops: 6
Stack additions: [V400, V402]
Exit stack: [V10, S8, V375, V375, V400, V402]

================================

Block 0x5ef
[0x5ef:0x607]
---
Predecessors: [0x5dc]
Successors: [0x608]
---
0x5ef DUP1
0x5f0 DUP3
0x5f1 SUB
0x5f2 DUP1
0x5f3 MLOAD
0x5f4 PUSH1 0x1
0x5f6 DUP4
0x5f7 PUSH1 0x20
0x5f9 SUB
0x5fa PUSH2 0x100
0x5fd EXP
0x5fe SUB
0x5ff NOT
0x600 AND
0x601 DUP2
0x602 MSTORE
0x603 PUSH1 0x20
0x605 ADD
0x606 SWAP2
0x607 POP
---
0x5f1: V405 = SUB V400 V402
0x5f3: V406 = M[V405]
0x5f4: V407 = 0x1
0x5f7: V408 = 0x20
0x5f9: V409 = SUB 0x20 V402
0x5fa: V410 = 0x100
0x5fd: V411 = EXP 0x100 V409
0x5fe: V412 = SUB V411 0x1
0x5ff: V413 = NOT V412
0x600: V414 = AND V413 V406
0x602: M[V405] = V414
0x603: V415 = 0x20
0x605: V416 = ADD 0x20 V405
---
Entry stack: [V10, S4, V375, V375, V400, V402]
Stack pops: 2
Stack additions: [V416, S0]
Exit stack: [V10, S4, V375, V375, V416, V402]

================================

Block 0x608
[0x608:0x615]
---
Predecessors: [0x5dc, 0x5ef]
Successors: []
---
0x608 JUMPDEST
0x609 POP
0x60a SWAP3
0x60b POP
0x60c POP
0x60d POP
0x60e PUSH1 0x40
0x610 MLOAD
0x611 DUP1
0x612 SWAP2
0x613 SUB
0x614 SWAP1
0x615 RETURN
---
0x608: JUMPDEST 
0x60e: V417 = 0x40
0x610: V418 = M[0x40]
0x613: V419 = SUB S1 V418
0x615: RETURN V418 V419
---
Entry stack: [V10, S4, V375, V375, S1, V402]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x616
[0x616:0x61c]
---
Predecessors: [0xa2]
Successors: [0x61d, 0x61e]
---
0x616 JUMPDEST
0x617 CALLVALUE
0x618 ISZERO
0x619 PUSH2 0x61e
0x61c JUMPI
---
0x616: JUMPDEST 
0x617: V420 = CALLVALUE
0x618: V421 = ISZERO V420
0x619: V422 = 0x61e
0x61c: JUMPI 0x61e V421
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61d
[0x61d:0x61d]
---
Predecessors: [0x616]
Successors: []
---
0x61d INVALID
---
0x61d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61e
[0x61e:0x652]
---
Predecessors: [0x616]
Successors: [0xe66]
---
0x61e JUMPDEST
0x61f PUSH2 0x653
0x622 PUSH1 0x4
0x624 DUP1
0x625 DUP1
0x626 CALLDATALOAD
0x627 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63c AND
0x63d SWAP1
0x63e PUSH1 0x20
0x640 ADD
0x641 SWAP1
0x642 SWAP2
0x643 SWAP1
0x644 DUP1
0x645 CALLDATALOAD
0x646 SWAP1
0x647 PUSH1 0x20
0x649 ADD
0x64a SWAP1
0x64b SWAP2
0x64c SWAP1
0x64d POP
0x64e POP
0x64f PUSH2 0xe66
0x652 JUMP
---
0x61e: JUMPDEST 
0x61f: V423 = 0x653
0x622: V424 = 0x4
0x626: V425 = CALLDATALOAD 0x4
0x627: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x63c: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x63e: V428 = 0x20
0x640: V429 = ADD 0x20 0x4
0x645: V430 = CALLDATALOAD 0x24
0x647: V431 = 0x20
0x649: V432 = ADD 0x20 0x24
0x64f: V433 = 0xe66
0x652: JUMP 0xe66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x653, V427, V430]
Exit stack: [V10, 0x653, V427, V430]

================================

Block 0x653
[0x653:0x66c]
---
Predecessors: [0x1082]
Successors: []
---
0x653 JUMPDEST
0x654 PUSH1 0x40
0x656 MLOAD
0x657 DUP1
0x658 DUP3
0x659 ISZERO
0x65a ISZERO
0x65b ISZERO
0x65c ISZERO
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 ADD
0x662 SWAP2
0x663 POP
0x664 POP
0x665 PUSH1 0x40
0x667 MLOAD
0x668 DUP1
0x669 SWAP2
0x66a SUB
0x66b SWAP1
0x66c RETURN
---
0x653: JUMPDEST 
0x654: V434 = 0x40
0x656: V435 = M[0x40]
0x659: V436 = ISZERO {0x0, 0x1}
0x65a: V437 = ISZERO V436
0x65b: V438 = ISZERO V437
0x65c: V439 = ISZERO V438
0x65e: M[V435] = V439
0x65f: V440 = 0x20
0x661: V441 = ADD 0x20 V435
0x665: V442 = 0x40
0x667: V443 = M[0x40]
0x66a: V444 = SUB V441 V443
0x66c: RETURN V443 V444
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x66d
[0x66d:0x673]
---
Predecessors: [0xad]
Successors: [0x674, 0x675]
---
0x66d JUMPDEST
0x66e CALLVALUE
0x66f ISZERO
0x670 PUSH2 0x675
0x673 JUMPI
---
0x66d: JUMPDEST 
0x66e: V445 = CALLVALUE
0x66f: V446 = ISZERO V445
0x670: V447 = 0x675
0x673: JUMPI 0x675 V446
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x674
[0x674:0x674]
---
Predecessors: [0x66d]
Successors: []
---
0x674 INVALID
---
0x674: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x675
[0x675:0x67c]
---
Predecessors: [0x66d]
Successors: [0x108b]
---
0x675 JUMPDEST
0x676 PUSH2 0x67d
0x679 PUSH2 0x108b
0x67c JUMP
---
0x675: JUMPDEST 
0x676: V448 = 0x67d
0x679: V449 = 0x108b
0x67c: JUMP 0x108b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x67d]
Exit stack: [V10, 0x67d]

================================

Block 0x67d
[0x67d:0x6ab]
---
Predecessors: [0x10b5]
Successors: []
---
0x67d JUMPDEST
0x67e PUSH1 0x40
0x680 MLOAD
0x681 DUP1
0x682 DUP6
0x683 DUP2
0x684 MSTORE
0x685 PUSH1 0x20
0x687 ADD
0x688 DUP5
0x689 DUP2
0x68a MSTORE
0x68b PUSH1 0x20
0x68d ADD
0x68e DUP4
0x68f DUP2
0x690 MSTORE
0x691 PUSH1 0x20
0x693 ADD
0x694 DUP3
0x695 ISZERO
0x696 ISZERO
0x697 ISZERO
0x698 ISZERO
0x699 DUP2
0x69a MSTORE
0x69b PUSH1 0x20
0x69d ADD
0x69e SWAP5
0x69f POP
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 POP
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 DUP1
0x6a8 SWAP2
0x6a9 SUB
0x6aa SWAP1
0x6ab RETURN
---
0x67d: JUMPDEST 
0x67e: V450 = 0x40
0x680: V451 = M[0x40]
0x684: M[V451] = V1014
0x685: V452 = 0x20
0x687: V453 = ADD 0x20 V451
0x68a: M[V453] = V1016
0x68b: V454 = 0x20
0x68d: V455 = ADD 0x20 V453
0x690: M[V455] = V1018
0x691: V456 = 0x20
0x693: V457 = ADD 0x20 V455
0x695: V458 = ISZERO V1026
0x696: V459 = ISZERO V458
0x697: V460 = ISZERO V459
0x698: V461 = ISZERO V460
0x69a: M[V457] = V461
0x69b: V462 = 0x20
0x69d: V463 = ADD 0x20 V457
0x6a4: V464 = 0x40
0x6a6: V465 = M[0x40]
0x6a9: V466 = SUB V463 V465
0x6ab: RETURN V465 V466
---
Entry stack: [V10, V1014, V1016, V1018, V1026]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x6ac
[0x6ac:0x6b2]
---
Predecessors: [0xb8]
Successors: [0x6b3, 0x6b4]
---
0x6ac JUMPDEST
0x6ad CALLVALUE
0x6ae ISZERO
0x6af PUSH2 0x6b4
0x6b2 JUMPI
---
0x6ac: JUMPDEST 
0x6ad: V467 = CALLVALUE
0x6ae: V468 = ISZERO V467
0x6af: V469 = 0x6b4
0x6b2: JUMPI 0x6b4 V468
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b3
[0x6b3:0x6b3]
---
Predecessors: [0x6ac]
Successors: []
---
0x6b3 INVALID
---
0x6b3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b4
[0x6b4:0x6bb]
---
Predecessors: [0x6ac]
Successors: [0x10bb]
---
0x6b4 JUMPDEST
0x6b5 PUSH2 0x6bc
0x6b8 PUSH2 0x10bb
0x6bb JUMP
---
0x6b4: JUMPDEST 
0x6b5: V470 = 0x6bc
0x6b8: V471 = 0x10bb
0x6bb: JUMP 0x10bb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6bc]
Exit stack: [V10, 0x6bc]

================================

Block 0x6bc
[0x6bc:0x6d1]
---
Predecessors: [0x10bb]
Successors: []
---
0x6bc JUMPDEST
0x6bd PUSH1 0x40
0x6bf MLOAD
0x6c0 DUP1
0x6c1 DUP3
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x20
0x6c6 ADD
0x6c7 SWAP2
0x6c8 POP
0x6c9 POP
0x6ca PUSH1 0x40
0x6cc MLOAD
0x6cd DUP1
0x6ce SWAP2
0x6cf SUB
0x6d0 SWAP1
0x6d1 RETURN
---
0x6bc: JUMPDEST 
0x6bd: V472 = 0x40
0x6bf: V473 = M[0x40]
0x6c3: M[V473] = V1028
0x6c4: V474 = 0x20
0x6c6: V475 = ADD 0x20 V473
0x6ca: V476 = 0x40
0x6cc: V477 = M[0x40]
0x6cf: V478 = SUB V475 V477
0x6d1: RETURN V477 V478
---
Entry stack: [V10, 0x6bc, V1028]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x6bc]

================================

Block 0x6d2
[0x6d2:0x6d8]
---
Predecessors: [0xc3]
Successors: [0x6d9, 0x6da]
---
0x6d2 JUMPDEST
0x6d3 CALLVALUE
0x6d4 ISZERO
0x6d5 PUSH2 0x6da
0x6d8 JUMPI
---
0x6d2: JUMPDEST 
0x6d3: V479 = CALLVALUE
0x6d4: V480 = ISZERO V479
0x6d5: V481 = 0x6da
0x6d8: JUMPI 0x6da V480
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d9
[0x6d9:0x6d9]
---
Predecessors: [0x6d2]
Successors: []
---
0x6d9 INVALID
---
0x6d9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6da
[0x6da:0x6e1]
---
Predecessors: [0x6d2]
Successors: [0x10c1]
---
0x6da JUMPDEST
0x6db PUSH2 0x6e2
0x6de PUSH2 0x10c1
0x6e1 JUMP
---
0x6da: JUMPDEST 
0x6db: V482 = 0x6e2
0x6de: V483 = 0x10c1
0x6e1: JUMP 0x10c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6e2]
Exit stack: [V10, 0x6e2]

================================

Block 0x6e2
[0x6e2:0x6fb]
---
Predecessors: [0x10c1]
Successors: []
---
0x6e2 JUMPDEST
0x6e3 PUSH1 0x40
0x6e5 MLOAD
0x6e6 DUP1
0x6e7 DUP3
0x6e8 ISZERO
0x6e9 ISZERO
0x6ea ISZERO
0x6eb ISZERO
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x20
0x6f0 ADD
0x6f1 SWAP2
0x6f2 POP
0x6f3 POP
0x6f4 PUSH1 0x40
0x6f6 MLOAD
0x6f7 DUP1
0x6f8 SWAP2
0x6f9 SUB
0x6fa SWAP1
0x6fb RETURN
---
0x6e2: JUMPDEST 
0x6e3: V484 = 0x40
0x6e5: V485 = M[0x40]
0x6e8: V486 = ISZERO V1036
0x6e9: V487 = ISZERO V486
0x6ea: V488 = ISZERO V487
0x6eb: V489 = ISZERO V488
0x6ed: M[V485] = V489
0x6ee: V490 = 0x20
0x6f0: V491 = ADD 0x20 V485
0x6f4: V492 = 0x40
0x6f6: V493 = M[0x40]
0x6f9: V494 = SUB V491 V493
0x6fb: RETURN V493 V494
---
Entry stack: [V10, 0x6e2, V1036]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x6e2]

================================

Block 0x6fc
[0x6fc:0x702]
---
Predecessors: [0xce]
Successors: [0x703, 0x704]
---
0x6fc JUMPDEST
0x6fd CALLVALUE
0x6fe ISZERO
0x6ff PUSH2 0x704
0x702 JUMPI
---
0x6fc: JUMPDEST 
0x6fd: V495 = CALLVALUE
0x6fe: V496 = ISZERO V495
0x6ff: V497 = 0x704
0x702: JUMPI 0x704 V496
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x703
[0x703:0x703]
---
Predecessors: [0x6fc]
Successors: []
---
0x703 INVALID
---
0x703: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x704
[0x704:0x74e]
---
Predecessors: [0x6fc]
Successors: [0x10d4]
---
0x704 JUMPDEST
0x705 PUSH2 0x74f
0x708 PUSH1 0x4
0x70a DUP1
0x70b DUP1
0x70c CALLDATALOAD
0x70d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x722 AND
0x723 SWAP1
0x724 PUSH1 0x20
0x726 ADD
0x727 SWAP1
0x728 SWAP2
0x729 SWAP1
0x72a DUP1
0x72b CALLDATALOAD
0x72c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x741 AND
0x742 SWAP1
0x743 PUSH1 0x20
0x745 ADD
0x746 SWAP1
0x747 SWAP2
0x748 SWAP1
0x749 POP
0x74a POP
0x74b PUSH2 0x10d4
0x74e JUMP
---
0x704: JUMPDEST 
0x705: V498 = 0x74f
0x708: V499 = 0x4
0x70c: V500 = CALLDATALOAD 0x4
0x70d: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x722: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x724: V503 = 0x20
0x726: V504 = ADD 0x20 0x4
0x72b: V505 = CALLDATALOAD 0x24
0x72c: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x741: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x743: V508 = 0x20
0x745: V509 = ADD 0x20 0x24
0x74b: V510 = 0x10d4
0x74e: JUMP 0x10d4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x74f, V502, V507]
Exit stack: [V10, 0x74f, V502, V507]

================================

Block 0x74f
[0x74f:0x764]
---
Predecessors: [0x1156]
Successors: []
---
0x74f JUMPDEST
0x750 PUSH1 0x40
0x752 MLOAD
0x753 DUP1
0x754 DUP3
0x755 DUP2
0x756 MSTORE
0x757 PUSH1 0x20
0x759 ADD
0x75a SWAP2
0x75b POP
0x75c POP
0x75d PUSH1 0x40
0x75f MLOAD
0x760 DUP1
0x761 SWAP2
0x762 SUB
0x763 SWAP1
0x764 RETURN
---
0x74f: JUMPDEST 
0x750: V511 = 0x40
0x752: V512 = M[0x40]
0x756: M[V512] = V1061
0x757: V513 = 0x20
0x759: V514 = ADD 0x20 V512
0x75d: V515 = 0x40
0x75f: V516 = M[0x40]
0x762: V517 = SUB V514 V516
0x764: RETURN V516 V517
---
Entry stack: [V10, V1061]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x765
[0x765:0x76b]
---
Predecessors: [0xd9]
Successors: [0x76c, 0x76d]
---
0x765 JUMPDEST
0x766 CALLVALUE
0x767 ISZERO
0x768 PUSH2 0x76d
0x76b JUMPI
---
0x765: JUMPDEST 
0x766: V518 = CALLVALUE
0x767: V519 = ISZERO V518
0x768: V520 = 0x76d
0x76b: JUMPI 0x76d V519
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x76c
[0x76c:0x76c]
---
Predecessors: [0x765]
Successors: []
---
0x76c INVALID
---
0x76c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x76d
[0x76d:0x798]
---
Predecessors: [0x765]
Successors: [0x115c]
---
0x76d JUMPDEST
0x76e PUSH2 0x799
0x771 PUSH1 0x4
0x773 DUP1
0x774 DUP1
0x775 CALLDATALOAD
0x776 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78b AND
0x78c SWAP1
0x78d PUSH1 0x20
0x78f ADD
0x790 SWAP1
0x791 SWAP2
0x792 SWAP1
0x793 POP
0x794 POP
0x795 PUSH2 0x115c
0x798 JUMP
---
0x76d: JUMPDEST 
0x76e: V521 = 0x799
0x771: V522 = 0x4
0x775: V523 = CALLDATALOAD 0x4
0x776: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x78b: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x78d: V526 = 0x20
0x78f: V527 = ADD 0x20 0x4
0x795: V528 = 0x115c
0x798: JUMP 0x115c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x799, V525]
Exit stack: [V10, 0x799, V525]

================================

Block 0x799
[0x799:0x7b2]
---
Predecessors: [0x135f]
Successors: []
---
0x799 JUMPDEST
0x79a PUSH1 0x40
0x79c MLOAD
0x79d DUP1
0x79e DUP3
0x79f ISZERO
0x7a0 ISZERO
0x7a1 ISZERO
0x7a2 ISZERO
0x7a3 DUP2
0x7a4 MSTORE
0x7a5 PUSH1 0x20
0x7a7 ADD
0x7a8 SWAP2
0x7a9 POP
0x7aa POP
0x7ab PUSH1 0x40
0x7ad MLOAD
0x7ae DUP1
0x7af SWAP2
0x7b0 SUB
0x7b1 SWAP1
0x7b2 RETURN
---
0x799: JUMPDEST 
0x79a: V529 = 0x40
0x79c: V530 = M[0x40]
0x79f: V531 = ISZERO V1176
0x7a0: V532 = ISZERO V531
0x7a1: V533 = ISZERO V532
0x7a2: V534 = ISZERO V533
0x7a4: M[V530] = V534
0x7a5: V535 = 0x20
0x7a7: V536 = ADD 0x20 V530
0x7ab: V537 = 0x40
0x7ad: V538 = M[0x40]
0x7b0: V539 = SUB V536 V538
0x7b2: RETURN V538 V539
---
Entry stack: [V10, V1176]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7b3
[0x7b3:0x7ba]
---
Predecessors: [0x339]
Successors: [0x1366]
---
0x7b3 JUMPDEST
0x7b4 PUSH2 0x7bb
0x7b7 PUSH2 0x1366
0x7ba JUMP
---
0x7b3: JUMPDEST 
0x7b4: V540 = 0x7bb
0x7b7: V541 = 0x1366
0x7ba: JUMP 0x1366
---
Entry stack: [V10, 0x341]
Stack pops: 0
Stack additions: [0x7bb]
Exit stack: [V10, 0x341, 0x7bb]

================================

Block 0x7bb
[0x7bb:0x7f4]
---
Predecessors: [0x1366]
Successors: [0x7f5]
---
0x7bb JUMPDEST
0x7bc PUSH1 0x40
0x7be PUSH1 0x40
0x7c0 MLOAD
0x7c1 SWAP1
0x7c2 DUP2
0x7c3 ADD
0x7c4 PUSH1 0x40
0x7c6 MSTORE
0x7c7 DUP1
0x7c8 PUSH1 0x9
0x7ca DUP2
0x7cb MSTORE
0x7cc PUSH1 0x20
0x7ce ADD
0x7cf PUSH32 0x4c616d626f436f696e0000000000000000000000000000000000000000000000
0x7f0 DUP2
0x7f1 MSTORE
0x7f2 POP
0x7f3 SWAP1
0x7f4 POP
---
0x7bb: JUMPDEST 
0x7bc: V542 = 0x40
0x7be: V543 = 0x40
0x7c0: V544 = M[0x40]
0x7c3: V545 = ADD V544 0x40
0x7c4: V546 = 0x40
0x7c6: M[0x40] = V545
0x7c8: V547 = 0x9
0x7cb: M[V544] = 0x9
0x7cc: V548 = 0x20
0x7ce: V549 = ADD 0x20 V544
0x7cf: V550 = 0x4c616d626f436f696e0000000000000000000000000000000000000000000000
0x7f1: M[V549] = 0x4c616d626f436f696e0000000000000000000000000000000000000000000000
---
Entry stack: [V10, {0x341, 0x58d}, V1179]
Stack pops: 1
Stack additions: [V544]
Exit stack: [V10, {0x341, 0x58d}, V544]

================================

Block 0x7f5
[0x7f5:0x7f7]
---
Predecessors: [0x7bb]
Successors: [0x341, 0x58d]
---
0x7f5 JUMPDEST
0x7f6 SWAP1
0x7f7 JUMP
---
0x7f5: JUMPDEST 
0x7f7: JUMP {0x341, 0x58d}
---
Entry stack: [V10, {0x341, 0x58d}, V544]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V544]

================================

Block 0x7f8
[0x7f8:0x805]
---
Predecessors: [0x3d2]
Successors: [0x806, 0x888]
---
0x7f8 JUMPDEST
0x7f9 PUSH1 0x0
0x7fb PUSH1 0x0
0x7fd DUP3
0x7fe EQ
0x7ff ISZERO
0x800 DUP1
0x801 ISZERO
0x802 PUSH2 0x888
0x805 JUMPI
---
0x7f8: JUMPDEST 
0x7f9: V551 = 0x0
0x7fb: V552 = 0x0
0x7fe: V553 = EQ V256 0x0
0x7ff: V554 = ISZERO V553
0x801: V555 = ISZERO V554
0x802: V556 = 0x888
0x805: JUMPI 0x888 V555
---
Entry stack: [V10, 0x407, V253, V256]
Stack pops: 1
Stack additions: [S0, 0x0, V554]
Exit stack: [V10, 0x407, V253, V256, 0x0, V554]

================================

Block 0x806
[0x806:0x887]
---
Predecessors: [0x7f8]
Successors: [0x888]
---
0x806 POP
0x807 PUSH1 0x0
0x809 PUSH1 0x2
0x80b PUSH1 0x0
0x80d CALLER
0x80e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x823 AND
0x824 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x839 AND
0x83a DUP2
0x83b MSTORE
0x83c PUSH1 0x20
0x83e ADD
0x83f SWAP1
0x840 DUP2
0x841 MSTORE
0x842 PUSH1 0x20
0x844 ADD
0x845 PUSH1 0x0
0x847 SHA3
0x848 PUSH1 0x0
0x84a DUP6
0x84b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x860 AND
0x861 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x876 AND
0x877 DUP2
0x878 MSTORE
0x879 PUSH1 0x20
0x87b ADD
0x87c SWAP1
0x87d DUP2
0x87e MSTORE
0x87f PUSH1 0x20
0x881 ADD
0x882 PUSH1 0x0
0x884 SHA3
0x885 SLOAD
0x886 EQ
0x887 ISZERO
---
0x807: V557 = 0x0
0x809: V558 = 0x2
0x80b: V559 = 0x0
0x80d: V560 = CALLER
0x80e: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x823: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x824: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x839: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x83b: M[0x0] = V564
0x83c: V565 = 0x20
0x83e: V566 = ADD 0x20 0x0
0x841: M[0x20] = 0x2
0x842: V567 = 0x20
0x844: V568 = ADD 0x20 0x20
0x845: V569 = 0x0
0x847: V570 = SHA3 0x0 0x40
0x848: V571 = 0x0
0x84b: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x860: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x861: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x876: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x878: M[0x0] = V575
0x879: V576 = 0x20
0x87b: V577 = ADD 0x20 0x0
0x87e: M[0x20] = V570
0x87f: V578 = 0x20
0x881: V579 = ADD 0x20 0x20
0x882: V580 = 0x0
0x884: V581 = SHA3 0x0 0x40
0x885: V582 = S[V581]
0x886: V583 = EQ V582 0x0
0x887: V584 = ISZERO V583
---
Entry stack: [V10, 0x407, V253, V256, 0x0, V554]
Stack pops: 4
Stack additions: [S3, S2, S1, V584]
Exit stack: [V10, 0x407, V253, V256, 0x0, V584]

================================

Block 0x888
[0x888:0x88d]
---
Predecessors: [0x7f8, 0x806]
Successors: [0x88e, 0x896]
---
0x888 JUMPDEST
0x889 ISZERO
0x88a PUSH2 0x896
0x88d JUMPI
---
0x888: JUMPDEST 
0x889: V585 = ISZERO S0
0x88a: V586 = 0x896
0x88d: JUMPI 0x896 V585
---
Entry stack: [V10, 0x407, V253, V256, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x407, V253, V256, 0x0]

================================

Block 0x88e
[0x88e:0x895]
---
Predecessors: [0x888]
Successors: [0x981]
---
0x88e PUSH1 0x0
0x890 SWAP1
0x891 POP
0x892 PUSH2 0x981
0x895 JUMP
---
0x88e: V587 = 0x0
0x892: V588 = 0x981
0x895: JUMP 0x981
---
Entry stack: [V10, 0x407, V253, V256, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x407, V253, V256, 0x0]

================================

Block 0x896
[0x896:0x980]
---
Predecessors: [0x888]
Successors: [0x981]
---
0x896 JUMPDEST
0x897 DUP2
0x898 PUSH1 0x2
0x89a PUSH1 0x0
0x89c CALLER
0x89d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b2 AND
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 AND
0x8c9 DUP2
0x8ca MSTORE
0x8cb PUSH1 0x20
0x8cd ADD
0x8ce SWAP1
0x8cf DUP2
0x8d0 MSTORE
0x8d1 PUSH1 0x20
0x8d3 ADD
0x8d4 PUSH1 0x0
0x8d6 SHA3
0x8d7 PUSH1 0x0
0x8d9 DUP6
0x8da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ef AND
0x8f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x905 AND
0x906 DUP2
0x907 MSTORE
0x908 PUSH1 0x20
0x90a ADD
0x90b SWAP1
0x90c DUP2
0x90d MSTORE
0x90e PUSH1 0x20
0x910 ADD
0x911 PUSH1 0x0
0x913 SHA3
0x914 DUP2
0x915 SWAP1
0x916 SSTORE
0x917 POP
0x918 DUP3
0x919 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92e AND
0x92f CALLER
0x930 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x945 AND
0x946 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x967 DUP5
0x968 PUSH1 0x40
0x96a MLOAD
0x96b DUP1
0x96c DUP3
0x96d DUP2
0x96e MSTORE
0x96f PUSH1 0x20
0x971 ADD
0x972 SWAP2
0x973 POP
0x974 POP
0x975 PUSH1 0x40
0x977 MLOAD
0x978 DUP1
0x979 SWAP2
0x97a SUB
0x97b SWAP1
0x97c LOG3
0x97d PUSH1 0x1
0x97f SWAP1
0x980 POP
---
0x896: JUMPDEST 
0x898: V589 = 0x2
0x89a: V590 = 0x0
0x89c: V591 = CALLER
0x89d: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x8b3: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x8ca: M[0x0] = V595
0x8cb: V596 = 0x20
0x8cd: V597 = ADD 0x20 0x0
0x8d0: M[0x20] = 0x2
0x8d1: V598 = 0x20
0x8d3: V599 = ADD 0x20 0x20
0x8d4: V600 = 0x0
0x8d6: V601 = SHA3 0x0 0x40
0x8d7: V602 = 0x0
0x8da: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ef: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x8f0: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0x905: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x907: M[0x0] = V606
0x908: V607 = 0x20
0x90a: V608 = ADD 0x20 0x0
0x90d: M[0x20] = V601
0x90e: V609 = 0x20
0x910: V610 = ADD 0x20 0x20
0x911: V611 = 0x0
0x913: V612 = SHA3 0x0 0x40
0x916: S[V612] = V256
0x919: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0x92e: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x92f: V615 = CALLER
0x930: V616 = 0xffffffffffffffffffffffffffffffffffffffff
0x945: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0x946: V618 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x968: V619 = 0x40
0x96a: V620 = M[0x40]
0x96e: M[V620] = V256
0x96f: V621 = 0x20
0x971: V622 = ADD 0x20 V620
0x975: V623 = 0x40
0x977: V624 = M[0x40]
0x97a: V625 = SUB V622 V624
0x97c: LOG V624 V625 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V617 V614
0x97d: V626 = 0x1
---
Entry stack: [V10, 0x407, V253, V256, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x407, V253, V256, 0x1]

================================

Block 0x981
[0x981:0x986]
---
Predecessors: [0x88e, 0x896]
Successors: [0x407]
---
0x981 JUMPDEST
0x982 SWAP3
0x983 SWAP2
0x984 POP
0x985 POP
0x986 JUMP
---
0x981: JUMPDEST 
0x986: JUMP 0x407
---
Entry stack: [V10, 0x407, V253, V256, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x987
[0x987:0x98c]
---
Predecessors: [0x429]
Successors: [0x431]
---
0x987 JUMPDEST
0x988 PUSH1 0x4
0x98a SLOAD
0x98b DUP2
0x98c JUMP
---
0x987: JUMPDEST 
0x988: V627 = 0x4
0x98a: V628 = S[0x4]
0x98c: JUMP 0x431
---
Entry stack: [V10, 0x431]
Stack pops: 1
Stack additions: [S0, V628]
Exit stack: [V10, 0x431, V628]

================================

Block 0x98d
[0x98d:0x992]
---
Predecessors: [0x44f]
Successors: [0x457]
---
0x98d JUMPDEST
0x98e PUSH1 0x5
0x990 SLOAD
0x991 DUP2
0x992 JUMP
---
0x98d: JUMPDEST 
0x98e: V629 = 0x5
0x990: V630 = S[0x5]
0x992: JUMP 0x457
---
Entry stack: [V10, 0x457]
Stack pops: 1
Stack additions: [S0, V630]
Exit stack: [V10, 0x457, V630]

================================

Block 0x993
[0x993:0x9ac]
---
Predecessors: [0x475]
Successors: [0x9ad, 0x9b2]
---
0x993 JUMPDEST
0x994 PUSH1 0x0
0x996 PUSH1 0x0
0x998 PUSH1 0x0
0x99a PUSH1 0x0
0x99c PUSH1 0x0
0x99e PUSH1 0x0
0x9a0 PUSH1 0x64
0x9a2 PUSH1 0x0
0x9a4 CALLDATASIZE
0x9a5 SWAP1
0x9a6 POP
0x9a7 LT
0x9a8 ISZERO
0x9a9 PUSH2 0x9b2
0x9ac JUMPI
---
0x993: JUMPDEST 
0x994: V631 = 0x0
0x996: V632 = 0x0
0x998: V633 = 0x0
0x99a: V634 = 0x0
0x99c: V635 = 0x0
0x99e: V636 = 0x0
0x9a0: V637 = 0x64
0x9a2: V638 = 0x0
0x9a4: V639 = CALLDATASIZE
0x9a7: V640 = LT V639 0x64
0x9a8: V641 = ISZERO V640
0x9a9: V642 = 0x9b2
0x9ac: JUMPI 0x9b2 V641
---
Entry stack: [V10, 0x4c9, V302, V307, V310]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9ad
[0x9ad:0x9b1]
---
Predecessors: [0x993]
Successors: []
---
0x9ad PUSH1 0x0
0x9af PUSH1 0x0
0x9b1 REVERT
---
0x9ad: V643 = 0x0
0x9af: V644 = 0x0
0x9b1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9b2
[0x9b2:0x9bb]
---
Predecessors: [0x993]
Successors: [0x9bc, 0x9c4]
---
0x9b2 JUMPDEST
0x9b3 PUSH1 0x0
0x9b5 DUP8
0x9b6 EQ
0x9b7 ISZERO
0x9b8 PUSH2 0x9c4
0x9bb JUMPI
---
0x9b2: JUMPDEST 
0x9b3: V645 = 0x0
0x9b6: V646 = EQ V310 0x0
0x9b7: V647 = ISZERO V646
0x9b8: V648 = 0x9c4
0x9bb: JUMPI 0x9c4 V647
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9bc
[0x9bc:0x9c3]
---
Predecessors: [0x9b2]
Successors: [0xccb]
---
0x9bc PUSH1 0x0
0x9be SWAP6
0x9bf POP
0x9c0 PUSH2 0xccb
0x9c3 JUMP
---
0x9bc: V649 = 0x0
0x9c0: V650 = 0xccb
0x9c3: JUMP 0xccb
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9c4
[0x9c4:0xb1d]
---
Predecessors: [0x9b2]
Successors: [0xb1e, 0xb20]
---
0x9c4 JUMPDEST
0x9c5 PUSH1 0x1
0x9c7 PUSH1 0x0
0x9c9 DUP11
0x9ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9df AND
0x9e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f5 AND
0x9f6 DUP2
0x9f7 MSTORE
0x9f8 PUSH1 0x20
0x9fa ADD
0x9fb SWAP1
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x20
0xa00 ADD
0xa01 PUSH1 0x0
0xa03 SHA3
0xa04 SLOAD
0xa05 SWAP5
0xa06 POP
0xa07 PUSH1 0x2
0xa09 PUSH1 0x0
0xa0b DUP11
0xa0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa21 AND
0xa22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa37 AND
0xa38 DUP2
0xa39 MSTORE
0xa3a PUSH1 0x20
0xa3c ADD
0xa3d SWAP1
0xa3e DUP2
0xa3f MSTORE
0xa40 PUSH1 0x20
0xa42 ADD
0xa43 PUSH1 0x0
0xa45 SHA3
0xa46 PUSH1 0x0
0xa48 CALLER
0xa49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5e AND
0xa5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa74 AND
0xa75 DUP2
0xa76 MSTORE
0xa77 PUSH1 0x20
0xa79 ADD
0xa7a SWAP1
0xa7b DUP2
0xa7c MSTORE
0xa7d PUSH1 0x20
0xa7f ADD
0xa80 PUSH1 0x0
0xa82 SHA3
0xa83 SLOAD
0xa84 SWAP4
0xa85 POP
0xa86 DUP7
0xa87 DUP6
0xa88 GT
0xa89 ISZERO
0xa8a SWAP3
0xa8b POP
0xa8c DUP7
0xa8d DUP5
0xa8e GT
0xa8f ISZERO
0xa90 SWAP2
0xa91 POP
0xa92 PUSH1 0x1
0xa94 PUSH1 0x0
0xa96 DUP10
0xa97 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaac AND
0xaad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac2 AND
0xac3 DUP2
0xac4 MSTORE
0xac5 PUSH1 0x20
0xac7 ADD
0xac8 SWAP1
0xac9 DUP2
0xaca MSTORE
0xacb PUSH1 0x20
0xacd ADD
0xace PUSH1 0x0
0xad0 SHA3
0xad1 SLOAD
0xad2 DUP8
0xad3 PUSH1 0x1
0xad5 PUSH1 0x0
0xad7 DUP12
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed AND
0xaee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb03 AND
0xb04 DUP2
0xb05 MSTORE
0xb06 PUSH1 0x20
0xb08 ADD
0xb09 SWAP1
0xb0a DUP2
0xb0b MSTORE
0xb0c PUSH1 0x20
0xb0e ADD
0xb0f PUSH1 0x0
0xb11 SHA3
0xb12 SLOAD
0xb13 ADD
0xb14 GT
0xb15 SWAP1
0xb16 POP
0xb17 DUP3
0xb18 DUP1
0xb19 ISZERO
0xb1a PUSH2 0xb20
0xb1d JUMPI
---
0x9c4: JUMPDEST 
0x9c5: V651 = 0x1
0x9c7: V652 = 0x0
0x9ca: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0x9df: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x9e0: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f5: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x9f7: M[0x0] = V656
0x9f8: V657 = 0x20
0x9fa: V658 = ADD 0x20 0x0
0x9fd: M[0x20] = 0x1
0x9fe: V659 = 0x20
0xa00: V660 = ADD 0x20 0x20
0xa01: V661 = 0x0
0xa03: V662 = SHA3 0x0 0x40
0xa04: V663 = S[V662]
0xa07: V664 = 0x2
0xa09: V665 = 0x0
0xa0c: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xa21: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xa22: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xa37: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0xa39: M[0x0] = V669
0xa3a: V670 = 0x20
0xa3c: V671 = ADD 0x20 0x0
0xa3f: M[0x20] = 0x2
0xa40: V672 = 0x20
0xa42: V673 = ADD 0x20 0x20
0xa43: V674 = 0x0
0xa45: V675 = SHA3 0x0 0x40
0xa46: V676 = 0x0
0xa48: V677 = CALLER
0xa49: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5e: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xa5f: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xa74: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xa76: M[0x0] = V681
0xa77: V682 = 0x20
0xa79: V683 = ADD 0x20 0x0
0xa7c: M[0x20] = V675
0xa7d: V684 = 0x20
0xa7f: V685 = ADD 0x20 0x20
0xa80: V686 = 0x0
0xa82: V687 = SHA3 0x0 0x40
0xa83: V688 = S[V687]
0xa88: V689 = GT V663 V310
0xa89: V690 = ISZERO V689
0xa8e: V691 = GT V688 V310
0xa8f: V692 = ISZERO V691
0xa92: V693 = 0x1
0xa94: V694 = 0x0
0xa97: V695 = 0xffffffffffffffffffffffffffffffffffffffff
0xaac: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0xaad: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xac2: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xac4: M[0x0] = V698
0xac5: V699 = 0x20
0xac7: V700 = ADD 0x20 0x0
0xaca: M[0x20] = 0x1
0xacb: V701 = 0x20
0xacd: V702 = ADD 0x20 0x20
0xace: V703 = 0x0
0xad0: V704 = SHA3 0x0 0x40
0xad1: V705 = S[V704]
0xad3: V706 = 0x1
0xad5: V707 = 0x0
0xad8: V708 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0xaee: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0xb03: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0xb05: M[0x0] = V711
0xb06: V712 = 0x20
0xb08: V713 = ADD 0x20 0x0
0xb0b: M[0x20] = 0x1
0xb0c: V714 = 0x20
0xb0e: V715 = ADD 0x20 0x20
0xb0f: V716 = 0x0
0xb11: V717 = SHA3 0x0 0x40
0xb12: V718 = S[V717]
0xb13: V719 = ADD V718 V310
0xb14: V720 = GT V719 V705
0xb19: V721 = ISZERO V690
0xb1a: V722 = 0xb20
0xb1d: JUMPI 0xb20 V721
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V663, V688, V690, V692, V720, V690]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, V690]

================================

Block 0xb1e
[0xb1e:0xb1f]
---
Predecessors: [0x9c4]
Successors: [0xb20]
---
0xb1e POP
0xb1f DUP2
---
0xb1e: NOP 
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, V690]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, V692]

================================

Block 0xb20
[0xb20:0xb26]
---
Predecessors: [0x9c4, 0xb1e]
Successors: [0xb27, 0xb2a]
---
0xb20 JUMPDEST
0xb21 DUP1
0xb22 ISZERO
0xb23 PUSH2 0xb2a
0xb26 JUMPI
---
0xb20: JUMPDEST 
0xb22: V723 = ISZERO S0
0xb23: V724 = 0xb2a
0xb26: JUMPI 0xb2a V723
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, S0]

================================

Block 0xb27
[0xb27:0xb29]
---
Predecessors: [0xb20]
Successors: [0xb2a]
---
0xb27 POP
0xb28 DUP1
0xb29 ISZERO
---
0xb29: V725 = ISZERO V720
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, S0]
Stack pops: 2
Stack additions: [S1, V725]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, V725]

================================

Block 0xb2a
[0xb2a:0xb2f]
---
Predecessors: [0xb20, 0xb27]
Successors: [0xb30, 0xcc1]
---
0xb2a JUMPDEST
0xb2b ISZERO
0xb2c PUSH2 0xcc1
0xb2f JUMPI
---
0xb2a: JUMPDEST 
0xb2b: V726 = ISZERO S0
0xb2c: V727 = 0xcc1
0xb2f: JUMPI 0xcc1 V726
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720]

================================

Block 0xb30
[0xb30:0xcc0]
---
Predecessors: [0xb2a]
Successors: [0xccb]
---
0xb30 DUP7
0xb31 PUSH1 0x1
0xb33 PUSH1 0x0
0xb35 DUP11
0xb36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4b AND
0xb4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb61 AND
0xb62 DUP2
0xb63 MSTORE
0xb64 PUSH1 0x20
0xb66 ADD
0xb67 SWAP1
0xb68 DUP2
0xb69 MSTORE
0xb6a PUSH1 0x20
0xb6c ADD
0xb6d PUSH1 0x0
0xb6f SHA3
0xb70 PUSH1 0x0
0xb72 DUP3
0xb73 DUP3
0xb74 SLOAD
0xb75 ADD
0xb76 SWAP3
0xb77 POP
0xb78 POP
0xb79 DUP2
0xb7a SWAP1
0xb7b SSTORE
0xb7c POP
0xb7d DUP7
0xb7e PUSH1 0x1
0xb80 PUSH1 0x0
0xb82 DUP12
0xb83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb98 AND
0xb99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbae AND
0xbaf DUP2
0xbb0 MSTORE
0xbb1 PUSH1 0x20
0xbb3 ADD
0xbb4 SWAP1
0xbb5 DUP2
0xbb6 MSTORE
0xbb7 PUSH1 0x20
0xbb9 ADD
0xbba PUSH1 0x0
0xbbc SHA3
0xbbd PUSH1 0x0
0xbbf DUP3
0xbc0 DUP3
0xbc1 SLOAD
0xbc2 SUB
0xbc3 SWAP3
0xbc4 POP
0xbc5 POP
0xbc6 DUP2
0xbc7 SWAP1
0xbc8 SSTORE
0xbc9 POP
0xbca DUP7
0xbcb PUSH1 0x2
0xbcd PUSH1 0x0
0xbcf DUP12
0xbd0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe5 AND
0xbe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfb AND
0xbfc DUP2
0xbfd MSTORE
0xbfe PUSH1 0x20
0xc00 ADD
0xc01 SWAP1
0xc02 DUP2
0xc03 MSTORE
0xc04 PUSH1 0x20
0xc06 ADD
0xc07 PUSH1 0x0
0xc09 SHA3
0xc0a PUSH1 0x0
0xc0c CALLER
0xc0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc22 AND
0xc23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc38 AND
0xc39 DUP2
0xc3a MSTORE
0xc3b PUSH1 0x20
0xc3d ADD
0xc3e SWAP1
0xc3f DUP2
0xc40 MSTORE
0xc41 PUSH1 0x20
0xc43 ADD
0xc44 PUSH1 0x0
0xc46 SHA3
0xc47 PUSH1 0x0
0xc49 DUP3
0xc4a DUP3
0xc4b SLOAD
0xc4c SUB
0xc4d SWAP3
0xc4e POP
0xc4f POP
0xc50 DUP2
0xc51 SWAP1
0xc52 SSTORE
0xc53 POP
0xc54 DUP8
0xc55 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6a AND
0xc6b DUP10
0xc6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc81 AND
0xc82 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xca3 DUP10
0xca4 PUSH1 0x40
0xca6 MLOAD
0xca7 DUP1
0xca8 DUP3
0xca9 DUP2
0xcaa MSTORE
0xcab PUSH1 0x20
0xcad ADD
0xcae SWAP2
0xcaf POP
0xcb0 POP
0xcb1 PUSH1 0x40
0xcb3 MLOAD
0xcb4 DUP1
0xcb5 SWAP2
0xcb6 SUB
0xcb7 SWAP1
0xcb8 LOG3
0xcb9 PUSH1 0x1
0xcbb SWAP6
0xcbc POP
0xcbd PUSH2 0xccb
0xcc0 JUMP
---
0xb31: V728 = 0x1
0xb33: V729 = 0x0
0xb36: V730 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4b: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0xb4c: V732 = 0xffffffffffffffffffffffffffffffffffffffff
0xb61: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0xb63: M[0x0] = V733
0xb64: V734 = 0x20
0xb66: V735 = ADD 0x20 0x0
0xb69: M[0x20] = 0x1
0xb6a: V736 = 0x20
0xb6c: V737 = ADD 0x20 0x20
0xb6d: V738 = 0x0
0xb6f: V739 = SHA3 0x0 0x40
0xb70: V740 = 0x0
0xb74: V741 = S[V739]
0xb75: V742 = ADD V741 V310
0xb7b: S[V739] = V742
0xb7e: V743 = 0x1
0xb80: V744 = 0x0
0xb83: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xb98: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xb99: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xbae: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xbb0: M[0x0] = V748
0xbb1: V749 = 0x20
0xbb3: V750 = ADD 0x20 0x0
0xbb6: M[0x20] = 0x1
0xbb7: V751 = 0x20
0xbb9: V752 = ADD 0x20 0x20
0xbba: V753 = 0x0
0xbbc: V754 = SHA3 0x0 0x40
0xbbd: V755 = 0x0
0xbc1: V756 = S[V754]
0xbc2: V757 = SUB V756 V310
0xbc8: S[V754] = V757
0xbcb: V758 = 0x2
0xbcd: V759 = 0x0
0xbd0: V760 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe5: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xbe6: V762 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfb: V763 = AND 0xffffffffffffffffffffffffffffffffffffffff V761
0xbfd: M[0x0] = V763
0xbfe: V764 = 0x20
0xc00: V765 = ADD 0x20 0x0
0xc03: M[0x20] = 0x2
0xc04: V766 = 0x20
0xc06: V767 = ADD 0x20 0x20
0xc07: V768 = 0x0
0xc09: V769 = SHA3 0x0 0x40
0xc0a: V770 = 0x0
0xc0c: V771 = CALLER
0xc0d: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0xc22: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0xc23: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0xc38: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0xc3a: M[0x0] = V775
0xc3b: V776 = 0x20
0xc3d: V777 = ADD 0x20 0x0
0xc40: M[0x20] = V769
0xc41: V778 = 0x20
0xc43: V779 = ADD 0x20 0x20
0xc44: V780 = 0x0
0xc46: V781 = SHA3 0x0 0x40
0xc47: V782 = 0x0
0xc4b: V783 = S[V781]
0xc4c: V784 = SUB V783 V310
0xc52: S[V781] = V784
0xc55: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6a: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0xc6c: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xc81: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0xc82: V789 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xca4: V790 = 0x40
0xca6: V791 = M[0x40]
0xcaa: M[V791] = V310
0xcab: V792 = 0x20
0xcad: V793 = ADD 0x20 V791
0xcb1: V794 = 0x40
0xcb3: V795 = M[0x40]
0xcb6: V796 = SUB V793 V795
0xcb8: LOG V795 V796 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V788 V786
0xcb9: V797 = 0x1
0xcbd: V798 = 0xccb
0xcc0: JUMP 0xccb
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x1, V663, V688, V690, V692, V720]

================================

Block 0xcc1
[0xcc1:0xcc9]
---
Predecessors: [0xb2a]
Successors: [0xccb]
---
0xcc1 JUMPDEST
0xcc2 PUSH1 0x0
0xcc4 SWAP6
0xcc5 POP
0xcc6 PUSH2 0xccb
0xcc9 JUMP
---
0xcc1: JUMPDEST 
0xcc2: V799 = 0x0
0xcc6: V800 = 0xccb
0xcc9: JUMP 0xccb
---
Entry stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x4c9, V302, V307, V310, 0x0, V663, V688, V690, V692, V720]

================================

Block 0xcca
[0xcca:0xcca]
---
Predecessors: []
Successors: [0xccb]
---
0xcca JUMPDEST
---
0xcca: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xccb
[0xccb:0xcd6]
---
Predecessors: [0x9bc, 0xb30, 0xcc1, 0xcca]
Successors: [0x4c9]
---
0xccb JUMPDEST
0xccc POP
0xccd POP
0xcce POP
0xccf POP
0xcd0 POP
0xcd1 SWAP4
0xcd2 SWAP3
0xcd3 POP
0xcd4 POP
0xcd5 POP
0xcd6 JUMP
---
0xccb: JUMPDEST 
0xcd6: JUMP 0x4c9
---
Entry stack: [V10, 0x4c9, V302, V307, V310, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xcd7
[0xcd7:0xcdd]
---
Predecessors: [0x4eb]
Successors: [0xcde]
---
0xcd7 JUMPDEST
0xcd8 PUSH1 0x0
0xcda PUSH1 0x12
0xcdc SWAP1
0xcdd POP
---
0xcd7: JUMPDEST 
0xcd8: V801 = 0x0
0xcda: V802 = 0x12
---
Entry stack: [V10, 0x4f3]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V10, 0x4f3, 0x12]

================================

Block 0xcde
[0xcde:0xce0]
---
Predecessors: [0xcd7]
Successors: [0x4f3]
---
0xcde JUMPDEST
0xcdf SWAP1
0xce0 JUMP
---
0xcde: JUMPDEST 
0xce0: JUMP 0x4f3
---
Entry stack: [V10, 0x4f3, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x12]

================================

Block 0xce1
[0xce1:0xd38]
---
Predecessors: [0x517]
Successors: [0xd39, 0xd3e]
---
0xce1 JUMPDEST
0xce2 PUSH1 0x0
0xce4 PUSH1 0x0
0xce6 SWAP1
0xce7 SLOAD
0xce8 SWAP1
0xce9 PUSH2 0x100
0xcec EXP
0xced SWAP1
0xcee DIV
0xcef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd04 AND
0xd05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1a AND
0xd1b CALLER
0xd1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd31 AND
0xd32 EQ
0xd33 ISZERO
0xd34 ISZERO
0xd35 PUSH2 0xd3e
0xd38 JUMPI
---
0xce1: JUMPDEST 
0xce2: V803 = 0x0
0xce4: V804 = 0x0
0xce7: V805 = S[0x0]
0xce9: V806 = 0x100
0xcec: V807 = EXP 0x100 0x0
0xcee: V808 = DIV V805 0x1
0xcef: V809 = 0xffffffffffffffffffffffffffffffffffffffff
0xd04: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V808
0xd05: V811 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1a: V812 = AND 0xffffffffffffffffffffffffffffffffffffffff V810
0xd1b: V813 = CALLER
0xd1c: V814 = 0xffffffffffffffffffffffffffffffffffffffff
0xd31: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V813
0xd32: V816 = EQ V815 V812
0xd33: V817 = ISZERO V816
0xd34: V818 = ISZERO V817
0xd35: V819 = 0xd3e
0xd38: JUMPI 0xd3e V818
---
Entry stack: [V10, 0x51f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x51f]

================================

Block 0xd39
[0xd39:0xd3d]
---
Predecessors: [0xce1]
Successors: []
---
0xd39 PUSH1 0x0
0xd3b PUSH1 0x0
0xd3d REVERT
---
0xd39: V820 = 0x0
0xd3b: V821 = 0x0
0xd3d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x51f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x51f]

================================

Block 0xd3e
[0xd3e:0xd59]
---
Predecessors: [0xce1]
Successors: [0xd5a]
---
0xd3e JUMPDEST
0xd3f PUSH1 0x0
0xd41 PUSH1 0x3
0xd43 PUSH1 0x0
0xd45 PUSH2 0x100
0xd48 EXP
0xd49 DUP2
0xd4a SLOAD
0xd4b DUP2
0xd4c PUSH1 0xff
0xd4e MUL
0xd4f NOT
0xd50 AND
0xd51 SWAP1
0xd52 DUP4
0xd53 ISZERO
0xd54 ISZERO
0xd55 MUL
0xd56 OR
0xd57 SWAP1
0xd58 SSTORE
0xd59 POP
---
0xd3e: JUMPDEST 
0xd3f: V822 = 0x0
0xd41: V823 = 0x3
0xd43: V824 = 0x0
0xd45: V825 = 0x100
0xd48: V826 = EXP 0x100 0x0
0xd4a: V827 = S[0x3]
0xd4c: V828 = 0xff
0xd4e: V829 = MUL 0xff 0x1
0xd4f: V830 = NOT 0xff
0xd50: V831 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V827
0xd53: V832 = ISZERO 0x0
0xd54: V833 = ISZERO 0x1
0xd55: V834 = MUL 0x0 0x1
0xd56: V835 = OR 0x0 V831
0xd58: S[0x3] = V835
---
Entry stack: [V10, 0x51f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x51f]

================================

Block 0xd5a
[0xd5a:0xd5b]
---
Predecessors: [0xd3e]
Successors: [0x51f]
---
0xd5a JUMPDEST
0xd5b JUMP
---
0xd5a: JUMPDEST 
0xd5b: JUMP 0x51f
---
Entry stack: [V10, 0x51f]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5c
[0xd5c:0xda0]
---
Predecessors: [0x529]
Successors: [0xda1]
---
0xd5c JUMPDEST
0xd5d PUSH1 0x0
0xd5f PUSH1 0x1
0xd61 PUSH1 0x0
0xd63 DUP4
0xd64 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd79 AND
0xd7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8f AND
0xd90 DUP2
0xd91 MSTORE
0xd92 PUSH1 0x20
0xd94 ADD
0xd95 SWAP1
0xd96 DUP2
0xd97 MSTORE
0xd98 PUSH1 0x20
0xd9a ADD
0xd9b PUSH1 0x0
0xd9d SHA3
0xd9e SLOAD
0xd9f SWAP1
0xda0 POP
---
0xd5c: JUMPDEST 
0xd5d: V836 = 0x0
0xd5f: V837 = 0x1
0xd61: V838 = 0x0
0xd64: V839 = 0xffffffffffffffffffffffffffffffffffffffff
0xd79: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0xd7a: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8f: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0xd91: M[0x0] = V842
0xd92: V843 = 0x20
0xd94: V844 = ADD 0x20 0x0
0xd97: M[0x20] = 0x1
0xd98: V845 = 0x20
0xd9a: V846 = ADD 0x20 0x20
0xd9b: V847 = 0x0
0xd9d: V848 = SHA3 0x0 0x40
0xd9e: V849 = S[V848]
---
Entry stack: [V10, 0x555, V353]
Stack pops: 1
Stack additions: [S0, V849]
Exit stack: [V10, 0x555, V353, V849]

================================

Block 0xda1
[0xda1:0xda5]
---
Predecessors: [0xd5c]
Successors: [0x555]
---
0xda1 JUMPDEST
0xda2 SWAP2
0xda3 SWAP1
0xda4 POP
0xda5 JUMP
---
0xda1: JUMPDEST 
0xda5: JUMP 0x555
---
Entry stack: [V10, 0x555, V353, V849]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V849]

================================

Block 0xda6
[0xda6:0xdfd]
---
Predecessors: [0x573]
Successors: [0xdfe, 0xe03]
---
0xda6 JUMPDEST
0xda7 PUSH1 0x0
0xda9 PUSH1 0x0
0xdab SWAP1
0xdac SLOAD
0xdad SWAP1
0xdae PUSH2 0x100
0xdb1 EXP
0xdb2 SWAP1
0xdb3 DIV
0xdb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc9 AND
0xdca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xddf AND
0xde0 CALLER
0xde1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf6 AND
0xdf7 EQ
0xdf8 ISZERO
0xdf9 ISZERO
0xdfa PUSH2 0xe03
0xdfd JUMPI
---
0xda6: JUMPDEST 
0xda7: V850 = 0x0
0xda9: V851 = 0x0
0xdac: V852 = S[0x0]
0xdae: V853 = 0x100
0xdb1: V854 = EXP 0x100 0x0
0xdb3: V855 = DIV V852 0x1
0xdb4: V856 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc9: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0xdca: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0xddf: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xde0: V860 = CALLER
0xde1: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf6: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V860
0xdf7: V863 = EQ V862 V859
0xdf8: V864 = ISZERO V863
0xdf9: V865 = ISZERO V864
0xdfa: V866 = 0xe03
0xdfd: JUMPI 0xe03 V865
---
Entry stack: [V10, 0x57b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x57b]

================================

Block 0xdfe
[0xdfe:0xe02]
---
Predecessors: [0xda6]
Successors: []
---
0xdfe PUSH1 0x0
0xe00 PUSH1 0x0
0xe02 REVERT
---
0xdfe: V867 = 0x0
0xe00: V868 = 0x0
0xe02: REVERT 0x0 0x0
---
Entry stack: [V10, 0x57b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x57b]

================================

Block 0xe03
[0xe03:0xe1e]
---
Predecessors: [0xda6]
Successors: [0xe1f]
---
0xe03 JUMPDEST
0xe04 PUSH1 0x1
0xe06 PUSH1 0x3
0xe08 PUSH1 0x0
0xe0a PUSH2 0x100
0xe0d EXP
0xe0e DUP2
0xe0f SLOAD
0xe10 DUP2
0xe11 PUSH1 0xff
0xe13 MUL
0xe14 NOT
0xe15 AND
0xe16 SWAP1
0xe17 DUP4
0xe18 ISZERO
0xe19 ISZERO
0xe1a MUL
0xe1b OR
0xe1c SWAP1
0xe1d SSTORE
0xe1e POP
---
0xe03: JUMPDEST 
0xe04: V869 = 0x1
0xe06: V870 = 0x3
0xe08: V871 = 0x0
0xe0a: V872 = 0x100
0xe0d: V873 = EXP 0x100 0x0
0xe0f: V874 = S[0x3]
0xe11: V875 = 0xff
0xe13: V876 = MUL 0xff 0x1
0xe14: V877 = NOT 0xff
0xe15: V878 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V874
0xe18: V879 = ISZERO 0x1
0xe19: V880 = ISZERO 0x0
0xe1a: V881 = MUL 0x1 0x1
0xe1b: V882 = OR 0x1 V878
0xe1d: S[0x3] = V882
---
Entry stack: [V10, 0x57b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x57b]

================================

Block 0xe1f
[0xe1f:0xe20]
---
Predecessors: [0xe03]
Successors: [0x57b]
---
0xe1f JUMPDEST
0xe20 JUMP
---
0xe1f: JUMPDEST 
0xe20: JUMP 0x57b
---
Entry stack: [V10, 0x57b]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xe21
[0xe21:0xe28]
---
Predecessors: [0x585]
Successors: [0x1366]
---
0xe21 JUMPDEST
0xe22 PUSH2 0xe29
0xe25 PUSH2 0x1366
0xe28 JUMP
---
0xe21: JUMPDEST 
0xe22: V883 = 0xe29
0xe25: V884 = 0x1366
0xe28: JUMP 0x1366
---
Entry stack: [V10, 0x58d]
Stack pops: 0
Stack additions: [0xe29]
Exit stack: [V10, 0x58d, 0xe29]

================================

Block 0xe29
[0xe29:0xe62]
---
Predecessors: [0x1366]
Successors: [0xe63]
---
0xe29 JUMPDEST
0xe2a PUSH1 0x40
0xe2c PUSH1 0x40
0xe2e MLOAD
0xe2f SWAP1
0xe30 DUP2
0xe31 ADD
0xe32 PUSH1 0x40
0xe34 MSTORE
0xe35 DUP1
0xe36 PUSH1 0x3
0xe38 DUP2
0xe39 MSTORE
0xe3a PUSH1 0x20
0xe3c ADD
0xe3d PUSH32 0x4c42430000000000000000000000000000000000000000000000000000000000
0xe5e DUP2
0xe5f MSTORE
0xe60 POP
0xe61 SWAP1
0xe62 POP
---
0xe29: JUMPDEST 
0xe2a: V885 = 0x40
0xe2c: V886 = 0x40
0xe2e: V887 = M[0x40]
0xe31: V888 = ADD V887 0x40
0xe32: V889 = 0x40
0xe34: M[0x40] = V888
0xe36: V890 = 0x3
0xe39: M[V887] = 0x3
0xe3a: V891 = 0x20
0xe3c: V892 = ADD 0x20 V887
0xe3d: V893 = 0x4c42430000000000000000000000000000000000000000000000000000000000
0xe5f: M[V892] = 0x4c42430000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V10, {0x341, 0x58d}, V1179]
Stack pops: 1
Stack additions: [V887]
Exit stack: [V10, {0x341, 0x58d}, V887]

================================

Block 0xe63
[0xe63:0xe65]
---
Predecessors: [0xe29]
Successors: [0x341, 0x58d]
---
0xe63 JUMPDEST
0xe64 SWAP1
0xe65 JUMP
---
0xe63: JUMPDEST 
0xe65: JUMP {0x341, 0x58d}
---
Entry stack: [V10, {0x341, 0x58d}, V887]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V887]

================================

Block 0xe66
[0xe66:0xe7b]
---
Predecessors: [0x61e]
Successors: [0xe7c, 0xe81]
---
0xe66 JUMPDEST
0xe67 PUSH1 0x0
0xe69 PUSH1 0x0
0xe6b PUSH1 0x0
0xe6d PUSH1 0x0
0xe6f PUSH1 0x44
0xe71 PUSH1 0x0
0xe73 CALLDATASIZE
0xe74 SWAP1
0xe75 POP
0xe76 LT
0xe77 ISZERO
0xe78 PUSH2 0xe81
0xe7b JUMPI
---
0xe66: JUMPDEST 
0xe67: V894 = 0x0
0xe69: V895 = 0x0
0xe6b: V896 = 0x0
0xe6d: V897 = 0x0
0xe6f: V898 = 0x44
0xe71: V899 = 0x0
0xe73: V900 = CALLDATASIZE
0xe76: V901 = LT V900 0x44
0xe77: V902 = ISZERO V901
0xe78: V903 = 0xe81
0xe7b: JUMPI 0xe81 V902
---
Entry stack: [V10, 0x653, V427, V430]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe7c
[0xe7c:0xe80]
---
Predecessors: [0xe66]
Successors: []
---
0xe7c PUSH1 0x0
0xe7e PUSH1 0x0
0xe80 REVERT
---
0xe7c: V904 = 0x0
0xe7e: V905 = 0x0
0xe80: REVERT 0x0 0x0
---
Entry stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe81
[0xe81:0xe8a]
---
Predecessors: [0xe66]
Successors: [0xe8b, 0xe93]
---
0xe81 JUMPDEST
0xe82 PUSH1 0x0
0xe84 DUP6
0xe85 EQ
0xe86 ISZERO
0xe87 PUSH2 0xe93
0xe8a JUMPI
---
0xe81: JUMPDEST 
0xe82: V906 = 0x0
0xe85: V907 = EQ V430 0x0
0xe86: V908 = ISZERO V907
0xe87: V909 = 0xe93
0xe8a: JUMPI 0xe93 V908
---
Entry stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe8b
[0xe8b:0xe92]
---
Predecessors: [0xe81]
Successors: [0x1082]
---
0xe8b PUSH1 0x0
0xe8d SWAP4
0xe8e POP
0xe8f PUSH2 0x1082
0xe92 JUMP
---
0xe8b: V910 = 0x0
0xe8f: V911 = 0x1082
0xe92: JUMP 0x1082
---
Entry stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe93
[0xe93:0xf67]
---
Predecessors: [0xe81]
Successors: [0xf68, 0xf6b]
---
0xe93 JUMPDEST
0xe94 PUSH1 0x1
0xe96 PUSH1 0x0
0xe98 CALLER
0xe99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeae AND
0xeaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec4 AND
0xec5 DUP2
0xec6 MSTORE
0xec7 PUSH1 0x20
0xec9 ADD
0xeca SWAP1
0xecb DUP2
0xecc MSTORE
0xecd PUSH1 0x20
0xecf ADD
0xed0 PUSH1 0x0
0xed2 SHA3
0xed3 SLOAD
0xed4 SWAP3
0xed5 POP
0xed6 DUP5
0xed7 DUP4
0xed8 LT
0xed9 ISZERO
0xeda SWAP2
0xedb POP
0xedc PUSH1 0x1
0xede PUSH1 0x0
0xee0 DUP8
0xee1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef6 AND
0xef7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0c AND
0xf0d DUP2
0xf0e MSTORE
0xf0f PUSH1 0x20
0xf11 ADD
0xf12 SWAP1
0xf13 DUP2
0xf14 MSTORE
0xf15 PUSH1 0x20
0xf17 ADD
0xf18 PUSH1 0x0
0xf1a SHA3
0xf1b SLOAD
0xf1c DUP6
0xf1d PUSH1 0x1
0xf1f PUSH1 0x0
0xf21 DUP10
0xf22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf37 AND
0xf38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4d AND
0xf4e DUP2
0xf4f MSTORE
0xf50 PUSH1 0x20
0xf52 ADD
0xf53 SWAP1
0xf54 DUP2
0xf55 MSTORE
0xf56 PUSH1 0x20
0xf58 ADD
0xf59 PUSH1 0x0
0xf5b SHA3
0xf5c SLOAD
0xf5d ADD
0xf5e LT
0xf5f SWAP1
0xf60 POP
0xf61 DUP2
0xf62 DUP1
0xf63 ISZERO
0xf64 PUSH2 0xf6b
0xf67 JUMPI
---
0xe93: JUMPDEST 
0xe94: V912 = 0x1
0xe96: V913 = 0x0
0xe98: V914 = CALLER
0xe99: V915 = 0xffffffffffffffffffffffffffffffffffffffff
0xeae: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0xeaf: V917 = 0xffffffffffffffffffffffffffffffffffffffff
0xec4: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0xec6: M[0x0] = V918
0xec7: V919 = 0x20
0xec9: V920 = ADD 0x20 0x0
0xecc: M[0x20] = 0x1
0xecd: V921 = 0x20
0xecf: V922 = ADD 0x20 0x20
0xed0: V923 = 0x0
0xed2: V924 = SHA3 0x0 0x40
0xed3: V925 = S[V924]
0xed8: V926 = LT V925 V430
0xed9: V927 = ISZERO V926
0xedc: V928 = 0x1
0xede: V929 = 0x0
0xee1: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0xef6: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0xef7: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0c: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V931
0xf0e: M[0x0] = V933
0xf0f: V934 = 0x20
0xf11: V935 = ADD 0x20 0x0
0xf14: M[0x20] = 0x1
0xf15: V936 = 0x20
0xf17: V937 = ADD 0x20 0x20
0xf18: V938 = 0x0
0xf1a: V939 = SHA3 0x0 0x40
0xf1b: V940 = S[V939]
0xf1d: V941 = 0x1
0xf1f: V942 = 0x0
0xf22: V943 = 0xffffffffffffffffffffffffffffffffffffffff
0xf37: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0xf38: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4d: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V944
0xf4f: M[0x0] = V946
0xf50: V947 = 0x20
0xf52: V948 = ADD 0x20 0x0
0xf55: M[0x20] = 0x1
0xf56: V949 = 0x20
0xf58: V950 = ADD 0x20 0x20
0xf59: V951 = 0x0
0xf5b: V952 = SHA3 0x0 0x40
0xf5c: V953 = S[V952]
0xf5d: V954 = ADD V953 V430
0xf5e: V955 = LT V954 V940
0xf63: V956 = ISZERO V927
0xf64: V957 = 0xf6b
0xf67: JUMPI 0xf6b V956
---
Entry stack: [V10, 0x653, V427, V430, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V925, V927, V955, V927]
Exit stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955, V927]

================================

Block 0xf68
[0xf68:0xf6a]
---
Predecessors: [0xe93]
Successors: [0xf6b]
---
0xf68 POP
0xf69 DUP1
0xf6a ISZERO
---
0xf6a: V958 = ISZERO V955
---
Entry stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955, V927]
Stack pops: 2
Stack additions: [S1, V958]
Exit stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955, V958]

================================

Block 0xf6b
[0xf6b:0xf70]
---
Predecessors: [0xe93, 0xf68]
Successors: [0xf71, 0x1078]
---
0xf6b JUMPDEST
0xf6c ISZERO
0xf6d PUSH2 0x1078
0xf70 JUMPI
---
0xf6b: JUMPDEST 
0xf6c: V959 = ISZERO S0
0xf6d: V960 = 0x1078
0xf70: JUMPI 0x1078 V959
---
Entry stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955]

================================

Block 0xf71
[0xf71:0x1077]
---
Predecessors: [0xf6b]
Successors: [0x1082]
---
0xf71 DUP5
0xf72 PUSH1 0x1
0xf74 PUSH1 0x0
0xf76 CALLER
0xf77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8c AND
0xf8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa2 AND
0xfa3 DUP2
0xfa4 MSTORE
0xfa5 PUSH1 0x20
0xfa7 ADD
0xfa8 SWAP1
0xfa9 DUP2
0xfaa MSTORE
0xfab PUSH1 0x20
0xfad ADD
0xfae PUSH1 0x0
0xfb0 SHA3
0xfb1 PUSH1 0x0
0xfb3 DUP3
0xfb4 DUP3
0xfb5 SLOAD
0xfb6 SUB
0xfb7 SWAP3
0xfb8 POP
0xfb9 POP
0xfba DUP2
0xfbb SWAP1
0xfbc SSTORE
0xfbd POP
0xfbe DUP5
0xfbf PUSH1 0x1
0xfc1 PUSH1 0x0
0xfc3 DUP9
0xfc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd9 AND
0xfda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfef AND
0xff0 DUP2
0xff1 MSTORE
0xff2 PUSH1 0x20
0xff4 ADD
0xff5 SWAP1
0xff6 DUP2
0xff7 MSTORE
0xff8 PUSH1 0x20
0xffa ADD
0xffb PUSH1 0x0
0xffd SHA3
0xffe PUSH1 0x0
0x1000 DUP3
0x1001 DUP3
0x1002 SLOAD
0x1003 ADD
0x1004 SWAP3
0x1005 POP
0x1006 POP
0x1007 DUP2
0x1008 SWAP1
0x1009 SSTORE
0x100a POP
0x100b DUP6
0x100c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1021 AND
0x1022 CALLER
0x1023 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1038 AND
0x1039 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x105a DUP8
0x105b PUSH1 0x40
0x105d MLOAD
0x105e DUP1
0x105f DUP3
0x1060 DUP2
0x1061 MSTORE
0x1062 PUSH1 0x20
0x1064 ADD
0x1065 SWAP2
0x1066 POP
0x1067 POP
0x1068 PUSH1 0x40
0x106a MLOAD
0x106b DUP1
0x106c SWAP2
0x106d SUB
0x106e SWAP1
0x106f LOG3
0x1070 PUSH1 0x1
0x1072 SWAP4
0x1073 POP
0x1074 PUSH2 0x1082
0x1077 JUMP
---
0xf72: V961 = 0x1
0xf74: V962 = 0x0
0xf76: V963 = CALLER
0xf77: V964 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8c: V965 = AND 0xffffffffffffffffffffffffffffffffffffffff V963
0xf8d: V966 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa2: V967 = AND 0xffffffffffffffffffffffffffffffffffffffff V965
0xfa4: M[0x0] = V967
0xfa5: V968 = 0x20
0xfa7: V969 = ADD 0x20 0x0
0xfaa: M[0x20] = 0x1
0xfab: V970 = 0x20
0xfad: V971 = ADD 0x20 0x20
0xfae: V972 = 0x0
0xfb0: V973 = SHA3 0x0 0x40
0xfb1: V974 = 0x0
0xfb5: V975 = S[V973]
0xfb6: V976 = SUB V975 V430
0xfbc: S[V973] = V976
0xfbf: V977 = 0x1
0xfc1: V978 = 0x0
0xfc4: V979 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd9: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0xfda: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0xfef: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V980
0xff1: M[0x0] = V982
0xff2: V983 = 0x20
0xff4: V984 = ADD 0x20 0x0
0xff7: M[0x20] = 0x1
0xff8: V985 = 0x20
0xffa: V986 = ADD 0x20 0x20
0xffb: V987 = 0x0
0xffd: V988 = SHA3 0x0 0x40
0xffe: V989 = 0x0
0x1002: V990 = S[V988]
0x1003: V991 = ADD V990 V430
0x1009: S[V988] = V991
0x100c: V992 = 0xffffffffffffffffffffffffffffffffffffffff
0x1021: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x1022: V994 = CALLER
0x1023: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0x1038: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0x1039: V997 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x105b: V998 = 0x40
0x105d: V999 = M[0x40]
0x1061: M[V999] = V430
0x1062: V1000 = 0x20
0x1064: V1001 = ADD 0x20 V999
0x1068: V1002 = 0x40
0x106a: V1003 = M[0x40]
0x106d: V1004 = SUB V1001 V1003
0x106f: LOG V1003 V1004 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V996 V993
0x1070: V1005 = 0x1
0x1074: V1006 = 0x1082
0x1077: JUMP 0x1082
---
Entry stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V10, 0x653, V427, V430, 0x1, V925, V927, V955]

================================

Block 0x1078
[0x1078:0x1080]
---
Predecessors: [0xf6b]
Successors: [0x1082]
---
0x1078 JUMPDEST
0x1079 PUSH1 0x0
0x107b SWAP4
0x107c POP
0x107d PUSH2 0x1082
0x1080 JUMP
---
0x1078: JUMPDEST 
0x1079: V1007 = 0x0
0x107d: V1008 = 0x1082
0x1080: JUMP 0x1082
---
Entry stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x653, V427, V430, 0x0, V925, V927, V955]

================================

Block 0x1081
[0x1081:0x1081]
---
Predecessors: []
Successors: [0x1082]
---
0x1081 JUMPDEST
---
0x1081: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1082
[0x1082:0x108a]
---
Predecessors: [0xe8b, 0xf71, 0x1078, 0x1081]
Successors: [0x653]
---
0x1082 JUMPDEST
0x1083 POP
0x1084 POP
0x1085 POP
0x1086 SWAP3
0x1087 SWAP2
0x1088 POP
0x1089 POP
0x108a JUMP
---
0x1082: JUMPDEST 
0x108a: JUMP 0x653
---
Entry stack: [V10, 0x653, V427, V430, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x108b
[0x108b:0x10b4]
---
Predecessors: [0x675]
Successors: [0x10b5]
---
0x108b JUMPDEST
0x108c PUSH1 0x0
0x108e PUSH1 0x0
0x1090 PUSH1 0x0
0x1092 PUSH1 0x0
0x1094 PUSH1 0x4
0x1096 SLOAD
0x1097 PUSH1 0x5
0x1099 SLOAD
0x109a PUSH1 0x6
0x109c SLOAD
0x109d PUSH1 0x3
0x109f PUSH1 0x0
0x10a1 SWAP1
0x10a2 SLOAD
0x10a3 SWAP1
0x10a4 PUSH2 0x100
0x10a7 EXP
0x10a8 SWAP1
0x10a9 DIV
0x10aa PUSH1 0xff
0x10ac AND
0x10ad SWAP4
0x10ae POP
0x10af SWAP4
0x10b0 POP
0x10b1 SWAP4
0x10b2 POP
0x10b3 SWAP4
0x10b4 POP
---
0x108b: JUMPDEST 
0x108c: V1009 = 0x0
0x108e: V1010 = 0x0
0x1090: V1011 = 0x0
0x1092: V1012 = 0x0
0x1094: V1013 = 0x4
0x1096: V1014 = S[0x4]
0x1097: V1015 = 0x5
0x1099: V1016 = S[0x5]
0x109a: V1017 = 0x6
0x109c: V1018 = S[0x6]
0x109d: V1019 = 0x3
0x109f: V1020 = 0x0
0x10a2: V1021 = S[0x3]
0x10a4: V1022 = 0x100
0x10a7: V1023 = EXP 0x100 0x0
0x10a9: V1024 = DIV V1021 0x1
0x10aa: V1025 = 0xff
0x10ac: V1026 = AND 0xff V1024
---
Entry stack: [V10, 0x67d]
Stack pops: 0
Stack additions: [V1014, V1016, V1018, V1026]
Exit stack: [V10, 0x67d, V1014, V1016, V1018, V1026]

================================

Block 0x10b5
[0x10b5:0x10ba]
---
Predecessors: [0x108b]
Successors: [0x67d]
---
0x10b5 JUMPDEST
0x10b6 SWAP1
0x10b7 SWAP2
0x10b8 SWAP3
0x10b9 SWAP4
0x10ba JUMP
---
0x10b5: JUMPDEST 
0x10ba: JUMP 0x67d
---
Entry stack: [V10, 0x67d, V1014, V1016, V1018, V1026]
Stack pops: 5
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, V1014, V1016, V1018, V1026]

================================

Block 0x10bb
[0x10bb:0x10c0]
---
Predecessors: [0x6b4]
Successors: [0x6bc]
---
0x10bb JUMPDEST
0x10bc PUSH1 0x6
0x10be SLOAD
0x10bf DUP2
0x10c0 JUMP
---
0x10bb: JUMPDEST 
0x10bc: V1027 = 0x6
0x10be: V1028 = S[0x6]
0x10c0: JUMP 0x6bc
---
Entry stack: [V10, 0x6bc]
Stack pops: 1
Stack additions: [S0, V1028]
Exit stack: [V10, 0x6bc, V1028]

================================

Block 0x10c1
[0x10c1:0x10d3]
---
Predecessors: [0x6da]
Successors: [0x6e2]
---
0x10c1 JUMPDEST
0x10c2 PUSH1 0x3
0x10c4 PUSH1 0x0
0x10c6 SWAP1
0x10c7 SLOAD
0x10c8 SWAP1
0x10c9 PUSH2 0x100
0x10cc EXP
0x10cd SWAP1
0x10ce DIV
0x10cf PUSH1 0xff
0x10d1 AND
0x10d2 DUP2
0x10d3 JUMP
---
0x10c1: JUMPDEST 
0x10c2: V1029 = 0x3
0x10c4: V1030 = 0x0
0x10c7: V1031 = S[0x3]
0x10c9: V1032 = 0x100
0x10cc: V1033 = EXP 0x100 0x0
0x10ce: V1034 = DIV V1031 0x1
0x10cf: V1035 = 0xff
0x10d1: V1036 = AND 0xff V1034
0x10d3: JUMP 0x6e2
---
Entry stack: [V10, 0x6e2]
Stack pops: 1
Stack additions: [S0, V1036]
Exit stack: [V10, 0x6e2, V1036]

================================

Block 0x10d4
[0x10d4:0x1155]
---
Predecessors: [0x704]
Successors: [0x1156]
---
0x10d4 JUMPDEST
0x10d5 PUSH1 0x0
0x10d7 PUSH1 0x2
0x10d9 PUSH1 0x0
0x10db DUP5
0x10dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f1 AND
0x10f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1107 AND
0x1108 DUP2
0x1109 MSTORE
0x110a PUSH1 0x20
0x110c ADD
0x110d SWAP1
0x110e DUP2
0x110f MSTORE
0x1110 PUSH1 0x20
0x1112 ADD
0x1113 PUSH1 0x0
0x1115 SHA3
0x1116 PUSH1 0x0
0x1118 DUP4
0x1119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112e AND
0x112f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1144 AND
0x1145 DUP2
0x1146 MSTORE
0x1147 PUSH1 0x20
0x1149 ADD
0x114a SWAP1
0x114b DUP2
0x114c MSTORE
0x114d PUSH1 0x20
0x114f ADD
0x1150 PUSH1 0x0
0x1152 SHA3
0x1153 SLOAD
0x1154 SWAP1
0x1155 POP
---
0x10d4: JUMPDEST 
0x10d5: V1037 = 0x0
0x10d7: V1038 = 0x2
0x10d9: V1039 = 0x0
0x10dc: V1040 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f1: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x10f2: V1042 = 0xffffffffffffffffffffffffffffffffffffffff
0x1107: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff V1041
0x1109: M[0x0] = V1043
0x110a: V1044 = 0x20
0x110c: V1045 = ADD 0x20 0x0
0x110f: M[0x20] = 0x2
0x1110: V1046 = 0x20
0x1112: V1047 = ADD 0x20 0x20
0x1113: V1048 = 0x0
0x1115: V1049 = SHA3 0x0 0x40
0x1116: V1050 = 0x0
0x1119: V1051 = 0xffffffffffffffffffffffffffffffffffffffff
0x112e: V1052 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x112f: V1053 = 0xffffffffffffffffffffffffffffffffffffffff
0x1144: V1054 = AND 0xffffffffffffffffffffffffffffffffffffffff V1052
0x1146: M[0x0] = V1054
0x1147: V1055 = 0x20
0x1149: V1056 = ADD 0x20 0x0
0x114c: M[0x20] = V1049
0x114d: V1057 = 0x20
0x114f: V1058 = ADD 0x20 0x20
0x1150: V1059 = 0x0
0x1152: V1060 = SHA3 0x0 0x40
0x1153: V1061 = S[V1060]
---
Entry stack: [V10, 0x74f, V502, V507]
Stack pops: 2
Stack additions: [S1, S0, V1061]
Exit stack: [V10, 0x74f, V502, V507, V1061]

================================

Block 0x1156
[0x1156:0x115b]
---
Predecessors: [0x10d4]
Successors: [0x74f]
---
0x1156 JUMPDEST
0x1157 SWAP3
0x1158 SWAP2
0x1159 POP
0x115a POP
0x115b JUMP
---
0x1156: JUMPDEST 
0x115b: JUMP 0x74f
---
Entry stack: [V10, 0x74f, V502, V507, V1061]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V1061]

================================

Block 0x115c
[0x115c:0x11b9]
---
Predecessors: [0x76d]
Successors: [0x11ba, 0x11bf]
---
0x115c JUMPDEST
0x115d PUSH1 0x0
0x115f PUSH1 0x0
0x1161 PUSH1 0x0
0x1163 PUSH1 0x0
0x1165 PUSH1 0x0
0x1167 SWAP1
0x1168 SLOAD
0x1169 SWAP1
0x116a PUSH2 0x100
0x116d EXP
0x116e SWAP1
0x116f DIV
0x1170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1185 AND
0x1186 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119b AND
0x119c CALLER
0x119d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b2 AND
0x11b3 EQ
0x11b4 ISZERO
0x11b5 ISZERO
0x11b6 PUSH2 0x11bf
0x11b9 JUMPI
---
0x115c: JUMPDEST 
0x115d: V1062 = 0x0
0x115f: V1063 = 0x0
0x1161: V1064 = 0x0
0x1163: V1065 = 0x0
0x1165: V1066 = 0x0
0x1168: V1067 = S[0x0]
0x116a: V1068 = 0x100
0x116d: V1069 = EXP 0x100 0x0
0x116f: V1070 = DIV V1067 0x1
0x1170: V1071 = 0xffffffffffffffffffffffffffffffffffffffff
0x1185: V1072 = AND 0xffffffffffffffffffffffffffffffffffffffff V1070
0x1186: V1073 = 0xffffffffffffffffffffffffffffffffffffffff
0x119b: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0x119c: V1075 = CALLER
0x119d: V1076 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b2: V1077 = AND 0xffffffffffffffffffffffffffffffffffffffff V1075
0x11b3: V1078 = EQ V1077 V1074
0x11b4: V1079 = ISZERO V1078
0x11b5: V1080 = ISZERO V1079
0x11b6: V1081 = 0x11bf
0x11b9: JUMPI 0x11bf V1080
---
Entry stack: [V10, 0x799, V525]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x799, V525, 0x0, 0x0, 0x0]

================================

Block 0x11ba
[0x11ba:0x11be]
---
Predecessors: [0x115c]
Successors: []
---
0x11ba PUSH1 0x0
0x11bc PUSH1 0x0
0x11be REVERT
---
0x11ba: V1082 = 0x0
0x11bc: V1083 = 0x0
0x11be: REVERT 0x0 0x0
---
Entry stack: [V10, 0x799, V525, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x799, V525, 0x0, 0x0, 0x0]

================================

Block 0x11bf
[0x11bf:0x1260]
---
Predecessors: [0x115c]
Successors: [0x1261, 0x1262]
---
0x11bf JUMPDEST
0x11c0 DUP4
0x11c1 SWAP2
0x11c2 POP
0x11c3 DUP2
0x11c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d9 AND
0x11da PUSH4 0x70a08231
0x11df ADDRESS
0x11e0 PUSH1 0x0
0x11e2 PUSH1 0x40
0x11e4 MLOAD
0x11e5 PUSH1 0x20
0x11e7 ADD
0x11e8 MSTORE
0x11e9 PUSH1 0x40
0x11eb MLOAD
0x11ec DUP3
0x11ed PUSH4 0xffffffff
0x11f2 AND
0x11f3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1211 MUL
0x1212 DUP2
0x1213 MSTORE
0x1214 PUSH1 0x4
0x1216 ADD
0x1217 DUP1
0x1218 DUP3
0x1219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122e AND
0x122f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1244 AND
0x1245 DUP2
0x1246 MSTORE
0x1247 PUSH1 0x20
0x1249 ADD
0x124a SWAP2
0x124b POP
0x124c POP
0x124d PUSH1 0x20
0x124f PUSH1 0x40
0x1251 MLOAD
0x1252 DUP1
0x1253 DUP4
0x1254 SUB
0x1255 DUP2
0x1256 PUSH1 0x0
0x1258 DUP8
0x1259 DUP1
0x125a EXTCODESIZE
0x125b ISZERO
0x125c ISZERO
0x125d PUSH2 0x1262
0x1260 JUMPI
---
0x11bf: JUMPDEST 
0x11c4: V1084 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d9: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x11da: V1086 = 0x70a08231
0x11df: V1087 = ADDRESS
0x11e0: V1088 = 0x0
0x11e2: V1089 = 0x40
0x11e4: V1090 = M[0x40]
0x11e5: V1091 = 0x20
0x11e7: V1092 = ADD 0x20 V1090
0x11e8: M[V1092] = 0x0
0x11e9: V1093 = 0x40
0x11eb: V1094 = M[0x40]
0x11ed: V1095 = 0xffffffff
0x11f2: V1096 = AND 0xffffffff 0x70a08231
0x11f3: V1097 = 0x100000000000000000000000000000000000000000000000000000000
0x1211: V1098 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1213: M[V1094] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1214: V1099 = 0x4
0x1216: V1100 = ADD 0x4 V1094
0x1219: V1101 = 0xffffffffffffffffffffffffffffffffffffffff
0x122e: V1102 = AND 0xffffffffffffffffffffffffffffffffffffffff V1087
0x122f: V1103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1244: V1104 = AND 0xffffffffffffffffffffffffffffffffffffffff V1102
0x1246: M[V1100] = V1104
0x1247: V1105 = 0x20
0x1249: V1106 = ADD 0x20 V1100
0x124d: V1107 = 0x20
0x124f: V1108 = 0x40
0x1251: V1109 = M[0x40]
0x1254: V1110 = SUB V1106 V1109
0x1256: V1111 = 0x0
0x125a: V1112 = EXTCODESIZE V1085
0x125b: V1113 = ISZERO V1112
0x125c: V1114 = ISZERO V1113
0x125d: V1115 = 0x1262
0x1260: JUMPI 0x1262 V1114
---
Entry stack: [V10, 0x799, V525, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1085, 0x70a08231, V1106, 0x20, V1109, V1110, V1109, 0x0, V1085]
Exit stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106, 0x20, V1109, V1110, V1109, 0x0, V1085]

================================

Block 0x1261
[0x1261:0x1261]
---
Predecessors: [0x11bf]
Successors: []
---
0x1261 INVALID
---
0x1261: INVALID 
---
Entry stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106, 0x20, V1109, V1110, V1109, 0x0, V1085]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106, 0x20, V1109, V1110, V1109, 0x0, V1085]

================================

Block 0x1262
[0x1262:0x126d]
---
Predecessors: [0x11bf]
Successors: [0x126e, 0x126f]
---
0x1262 JUMPDEST
0x1263 PUSH1 0x32
0x1265 GAS
0x1266 SUB
0x1267 CALL
0x1268 ISZERO
0x1269 ISZERO
0x126a PUSH2 0x126f
0x126d JUMPI
---
0x1262: JUMPDEST 
0x1263: V1116 = 0x32
0x1265: V1117 = GAS
0x1266: V1118 = SUB V1117 0x32
0x1267: V1119 = CALL V1118 V1085 0x0 V1109 V1110 V1109 0x20
0x1268: V1120 = ISZERO V1119
0x1269: V1121 = ISZERO V1120
0x126a: V1122 = 0x126f
0x126d: JUMPI 0x126f V1121
---
Entry stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106, 0x20, V1109, V1110, V1109, 0x0, V1085]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106]

================================

Block 0x126e
[0x126e:0x126e]
---
Predecessors: [0x1262]
Successors: []
---
0x126e INVALID
---
0x126e: INVALID 
---
Entry stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106]

================================

Block 0x126f
[0x126f:0x1343]
---
Predecessors: [0x1262]
Successors: [0x1344, 0x1345]
---
0x126f JUMPDEST
0x1270 POP
0x1271 POP
0x1272 POP
0x1273 PUSH1 0x40
0x1275 MLOAD
0x1276 DUP1
0x1277 MLOAD
0x1278 SWAP1
0x1279 POP
0x127a SWAP1
0x127b POP
0x127c DUP2
0x127d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1292 AND
0x1293 PUSH4 0xa9059cbb
0x1298 PUSH1 0x0
0x129a PUSH1 0x0
0x129c SWAP1
0x129d SLOAD
0x129e SWAP1
0x129f PUSH2 0x100
0x12a2 EXP
0x12a3 SWAP1
0x12a4 DIV
0x12a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ba AND
0x12bb DUP4
0x12bc PUSH1 0x0
0x12be PUSH1 0x40
0x12c0 MLOAD
0x12c1 PUSH1 0x20
0x12c3 ADD
0x12c4 MSTORE
0x12c5 PUSH1 0x40
0x12c7 MLOAD
0x12c8 DUP4
0x12c9 PUSH4 0xffffffff
0x12ce AND
0x12cf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12ed MUL
0x12ee DUP2
0x12ef MSTORE
0x12f0 PUSH1 0x4
0x12f2 ADD
0x12f3 DUP1
0x12f4 DUP4
0x12f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130a AND
0x130b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1320 AND
0x1321 DUP2
0x1322 MSTORE
0x1323 PUSH1 0x20
0x1325 ADD
0x1326 DUP3
0x1327 DUP2
0x1328 MSTORE
0x1329 PUSH1 0x20
0x132b ADD
0x132c SWAP3
0x132d POP
0x132e POP
0x132f POP
0x1330 PUSH1 0x20
0x1332 PUSH1 0x40
0x1334 MLOAD
0x1335 DUP1
0x1336 DUP4
0x1337 SUB
0x1338 DUP2
0x1339 PUSH1 0x0
0x133b DUP8
0x133c DUP1
0x133d EXTCODESIZE
0x133e ISZERO
0x133f ISZERO
0x1340 PUSH2 0x1345
0x1343 JUMPI
---
0x126f: JUMPDEST 
0x1273: V1123 = 0x40
0x1275: V1124 = M[0x40]
0x1277: V1125 = M[V1124]
0x127d: V1126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1292: V1127 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x1293: V1128 = 0xa9059cbb
0x1298: V1129 = 0x0
0x129a: V1130 = 0x0
0x129d: V1131 = S[0x0]
0x129f: V1132 = 0x100
0x12a2: V1133 = EXP 0x100 0x0
0x12a4: V1134 = DIV V1131 0x1
0x12a5: V1135 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ba: V1136 = AND 0xffffffffffffffffffffffffffffffffffffffff V1134
0x12bc: V1137 = 0x0
0x12be: V1138 = 0x40
0x12c0: V1139 = M[0x40]
0x12c1: V1140 = 0x20
0x12c3: V1141 = ADD 0x20 V1139
0x12c4: M[V1141] = 0x0
0x12c5: V1142 = 0x40
0x12c7: V1143 = M[0x40]
0x12c9: V1144 = 0xffffffff
0x12ce: V1145 = AND 0xffffffff 0xa9059cbb
0x12cf: V1146 = 0x100000000000000000000000000000000000000000000000000000000
0x12ed: V1147 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x12ef: M[V1143] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x12f0: V1148 = 0x4
0x12f2: V1149 = ADD 0x4 V1143
0x12f5: V1150 = 0xffffffffffffffffffffffffffffffffffffffff
0x130a: V1151 = AND 0xffffffffffffffffffffffffffffffffffffffff V1136
0x130b: V1152 = 0xffffffffffffffffffffffffffffffffffffffff
0x1320: V1153 = AND 0xffffffffffffffffffffffffffffffffffffffff V1151
0x1322: M[V1149] = V1153
0x1323: V1154 = 0x20
0x1325: V1155 = ADD 0x20 V1149
0x1328: M[V1155] = V1125
0x1329: V1156 = 0x20
0x132b: V1157 = ADD 0x20 V1155
0x1330: V1158 = 0x20
0x1332: V1159 = 0x40
0x1334: V1160 = M[0x40]
0x1337: V1161 = SUB V1157 V1160
0x1339: V1162 = 0x0
0x133d: V1163 = EXTCODESIZE V1127
0x133e: V1164 = ISZERO V1163
0x133f: V1165 = ISZERO V1164
0x1340: V1166 = 0x1345
0x1343: JUMPI 0x1345 V1165
---
Entry stack: [V10, 0x799, V525, 0x0, V525, 0x0, V1085, 0x70a08231, V1106]
Stack pops: 5
Stack additions: [S4, V1125, V1127, 0xa9059cbb, V1157, 0x20, V1160, V1161, V1160, 0x0, V1127]
Exit stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157, 0x20, V1160, V1161, V1160, 0x0, V1127]

================================

Block 0x1344
[0x1344:0x1344]
---
Predecessors: [0x126f]
Successors: []
---
0x1344 INVALID
---
0x1344: INVALID 
---
Entry stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157, 0x20, V1160, V1161, V1160, 0x0, V1127]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157, 0x20, V1160, V1161, V1160, 0x0, V1127]

================================

Block 0x1345
[0x1345:0x1350]
---
Predecessors: [0x126f]
Successors: [0x1351, 0x1352]
---
0x1345 JUMPDEST
0x1346 PUSH1 0x32
0x1348 GAS
0x1349 SUB
0x134a CALL
0x134b ISZERO
0x134c ISZERO
0x134d PUSH2 0x1352
0x1350 JUMPI
---
0x1345: JUMPDEST 
0x1346: V1167 = 0x32
0x1348: V1168 = GAS
0x1349: V1169 = SUB V1168 0x32
0x134a: V1170 = CALL V1169 V1127 0x0 V1160 V1161 V1160 0x20
0x134b: V1171 = ISZERO V1170
0x134c: V1172 = ISZERO V1171
0x134d: V1173 = 0x1352
0x1350: JUMPI 0x1352 V1172
---
Entry stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157, 0x20, V1160, V1161, V1160, 0x0, V1127]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157]

================================

Block 0x1351
[0x1351:0x1351]
---
Predecessors: [0x1345]
Successors: []
---
0x1351 INVALID
---
0x1351: INVALID 
---
Entry stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157]

================================

Block 0x1352
[0x1352:0x135e]
---
Predecessors: [0x1345]
Successors: [0x135f]
---
0x1352 JUMPDEST
0x1353 POP
0x1354 POP
0x1355 POP
0x1356 PUSH1 0x40
0x1358 MLOAD
0x1359 DUP1
0x135a MLOAD
0x135b SWAP1
0x135c POP
0x135d SWAP3
0x135e POP
---
0x1352: JUMPDEST 
0x1356: V1174 = 0x40
0x1358: V1175 = M[0x40]
0x135a: V1176 = M[V1175]
---
Entry stack: [V10, 0x799, V525, 0x0, V525, V1125, V1127, 0xa9059cbb, V1157]
Stack pops: 6
Stack additions: [V1176, S4, S3]
Exit stack: [V10, 0x799, V525, V1176, V525, V1125]

================================

Block 0x135f
[0x135f:0x1365]
---
Predecessors: [0x1352]
Successors: [0x799]
---
0x135f JUMPDEST
0x1360 POP
0x1361 POP
0x1362 SWAP2
0x1363 SWAP1
0x1364 POP
0x1365 JUMP
---
0x135f: JUMPDEST 
0x1365: JUMP 0x799
---
Entry stack: [V10, 0x799, V525, V1176, V525, V1125]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V1176]

================================

Block 0x1366
[0x1366:0x1379]
---
Predecessors: [0x7b3, 0xe21]
Successors: [0x7bb, 0xe29]
---
0x1366 JUMPDEST
0x1367 PUSH1 0x20
0x1369 PUSH1 0x40
0x136b MLOAD
0x136c SWAP1
0x136d DUP2
0x136e ADD
0x136f PUSH1 0x40
0x1371 MSTORE
0x1372 DUP1
0x1373 PUSH1 0x0
0x1375 DUP2
0x1376 MSTORE
0x1377 POP
0x1378 SWAP1
0x1379 JUMP
---
0x1366: JUMPDEST 
0x1367: V1177 = 0x20
0x1369: V1178 = 0x40
0x136b: V1179 = M[0x40]
0x136e: V1180 = ADD V1179 0x20
0x136f: V1181 = 0x40
0x1371: M[0x40] = V1180
0x1373: V1182 = 0x0
0x1376: M[V1179] = 0x0
0x1379: JUMP {0x7bb, 0xe29}
---
Entry stack: [V10, {0x341, 0x58d}, {0x7bb, 0xe29}]
Stack pops: 1
Stack additions: [V1179]
Exit stack: [V10, {0x341, 0x58d}, V1179]

================================

Block 0x137a
[0x137a:0x13a5]
---
Predecessors: []
Successors: []
---
0x137a STOP
0x137b LOG1
0x137c PUSH6 0x627a7a723058
0x1383 SHA3
0x1384 MISSING 0xd2
0x1385 PUSH9 0x363d6fb9ceba32b322
0x138f SMOD
0x1390 PUSH4 0x600d9cd6
0x1395 SLT
0x1396 PUSH4 0x995ff89a
0x139b EXP
0x139c DUP7
0x139d MISSING 0xa5
0x139e EQ
0x139f SHL
0x13a0 SHL
0x13a1 MISSING 0xe1
0x13a2 BYTE
0x13a3 MISSING 0x5f
0x13a4 STOP
0x13a5 MISSING 0x29
---
0x137a: STOP 
0x137b: LOG S0 S1 S2
0x137c: V1183 = 0x627a7a723058
0x1383: V1184 = SHA3 0x627a7a723058 S3
0x1384: MISSING 0xd2
0x1385: V1185 = 0x363d6fb9ceba32b322
0x138f: V1186 = SMOD 0x363d6fb9ceba32b322 S0
0x1390: V1187 = 0x600d9cd6
0x1395: V1188 = SLT 0x600d9cd6 V1186
0x1396: V1189 = 0x995ff89a
0x139b: V1190 = EXP 0x995ff89a V1188
0x139d: MISSING 0xa5
0x139e: V1191 = EQ S0 S1
0x139f: V1192 = SHL V1191 S2
0x13a0: V1193 = SHL V1192 S3
0x13a1: MISSING 0xe1
0x13a2: V1194 = BYTE S0 S1
0x13a3: MISSING 0x5f
0x13a4: STOP 
0x13a5: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1184, S6, V1190, S1, S2, S3, S4, S5, S6, V1193, V1194]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x331
Exit block: 0x608
Body: 0x331, 0x338, 0x339, 0x341, 0x36c, 0x37a, 0x390, 0x3a3, 0x3bc, 0x58d, 0x5b8, 0x5c6, 0x5dc, 0x5ef, 0x608, 0x7b3, 0x7bb, 0x7f5

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x3ca
Exit block: 0x407
Body: 0x3ca, 0x3d1, 0x3d2, 0x407, 0x7f8, 0x806, 0x888, 0x88e, 0x896, 0x981

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x421
Exit block: 0x431
Body: 0x421, 0x428, 0x429, 0x431, 0x987

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x447
Exit block: 0x457
Body: 0x447, 0x44e, 0x44f, 0x457, 0x98d

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x46d
Exit block: 0x4c9
Body: 0x46d, 0x474, 0x475, 0x4c9, 0x993, 0x9ad, 0x9b2, 0x9bc, 0x9c4, 0xb1e, 0xb20, 0xb27, 0xb2a, 0xb30, 0xcc1, 0xccb

Function 5:
Public function signature: 0x313ce567
Entry block: 0x4e3
Exit block: 0x4f3
Body: 0x4e3, 0x4ea, 0x4eb, 0x4f3, 0xcd7, 0xcde

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x50f
Exit block: 0x51f
Body: 0x50f, 0x516, 0x517, 0x51f, 0xce1, 0xd39, 0xd3e, 0xd5a

Function 7:
Public function signature: 0x70a08231
Entry block: 0x521
Exit block: 0x555
Body: 0x521, 0x528, 0x529, 0x555, 0xd5c, 0xda1

Function 8:
Public function signature: 0x8f580996
Entry block: 0x56b
Exit block: 0x57b
Body: 0x56b, 0x572, 0x573, 0x57b, 0xda6, 0xdfe, 0xe03, 0xe1f

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x57d
Exit block: 0x608
Body: 0x341, 0x36c, 0x37a, 0x390, 0x3a3, 0x3bc, 0x57d, 0x584, 0x585, 0x58d, 0x5b8, 0x5c6, 0x5dc, 0x5ef, 0x608, 0xe21, 0xe29, 0xe63

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x616
Exit block: 0x653
Body: 0x616, 0x61d, 0x61e, 0x653, 0xe66, 0xe7c, 0xe81, 0xe8b, 0xe93, 0xf68, 0xf6b, 0xf71, 0x1078, 0x1082

Function 11:
Public function signature: 0xc59d4847
Entry block: 0x66d
Exit block: 0x67d
Body: 0x66d, 0x674, 0x675, 0x67d, 0x108b, 0x10b5

Function 12:
Public function signature: 0xd5abeb01
Entry block: 0x6ac
Exit block: 0x6bc
Body: 0x6ac, 0x6b3, 0x6b4, 0x6bc, 0x10bb

Function 13:
Public function signature: 0xda040c0f
Entry block: 0x6d2
Exit block: 0x6e2
Body: 0x6d2, 0x6d9, 0x6da, 0x6e2, 0x10c1

Function 14:
Public function signature: 0xdd62ed3e
Entry block: 0x6fc
Exit block: 0x74f
Body: 0x6fc, 0x703, 0x704, 0x74f, 0x10d4, 0x1156

Function 15:
Public function signature: 0xe58fc54c
Entry block: 0x765
Exit block: 0x799
Body: 0x765, 0x76c, 0x76d, 0x799, 0x115c, 0x11ba, 0x11bf, 0x1261, 0x1262, 0x126e, 0x126f, 0x1344, 0x1345, 0x1351, 0x1352, 0x135f

Function 16:
Public fallback function
Entry block: 0xe4
Exit block: 0x1e1
Body: 0xe4, 0xe8, 0x101, 0x106, 0x110, 0x114, 0x122, 0x175, 0x17b, 0x180, 0x1e1, 0x1e2, 0x25f, 0x279, 0x32c, 0x32f

