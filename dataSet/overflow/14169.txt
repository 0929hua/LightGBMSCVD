Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x2404608f
0x34 EQ
0x35 PUSH2 0x54
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x2404608f
0x34: V9 = EQ 0x2404608f V7
0x35: V10 = 0x54
0x38: JUMPI 0x54 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x107]
---
0x39 DUP1
0x3a PUSH4 0x48e9657d
0x3f EQ
0x40 PUSH2 0x107
0x43 JUMPI
---
0x3a: V11 = 0x48e9657d
0x3f: V12 = EQ 0x48e9657d V7
0x40: V13 = 0x107
0x43: JUMPI 0x107 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x1ad]
---
0x44 DUP1
0x45 PUSH4 0x79d6348d
0x4a EQ
0x4b PUSH2 0x1ad
0x4e JUMPI
---
0x45: V14 = 0x79d6348d
0x4a: V15 = EQ 0x79d6348d V7
0x4b: V16 = 0x1ad
0x4e: JUMPI 0x1ad V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x53]
---
Predecessors: [0x44]
Successors: []
---
0x4f JUMPDEST
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x4f: JUMPDEST 
0x50: V17 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5a]
---
Predecessors: [0x0]
Successors: [0x5b, 0x5f]
---
0x54 JUMPDEST
0x55 CALLVALUE
0x56 ISZERO
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x54: JUMPDEST 
0x55: V18 = CALLVALUE
0x56: V19 = ISZERO V18
0x57: V20 = 0x5f
0x5a: JUMPI 0x5f V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x54]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V21 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0xae]
---
Predecessors: [0x54]
Successors: [0x20a]
---
0x5f JUMPDEST
0x60 PUSH2 0xaf
0x63 PUSH1 0x4
0x65 DUP1
0x66 DUP1
0x67 CALLDATALOAD
0x68 SWAP1
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d DUP3
0x6e ADD
0x6f DUP1
0x70 CALLDATALOAD
0x71 SWAP1
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP1
0x76 DUP1
0x77 DUP1
0x78 PUSH1 0x1f
0x7a ADD
0x7b PUSH1 0x20
0x7d DUP1
0x7e SWAP2
0x7f DIV
0x80 MUL
0x81 PUSH1 0x20
0x83 ADD
0x84 PUSH1 0x40
0x86 MLOAD
0x87 SWAP1
0x88 DUP2
0x89 ADD
0x8a PUSH1 0x40
0x8c MSTORE
0x8d DUP1
0x8e SWAP4
0x8f SWAP3
0x90 SWAP2
0x91 SWAP1
0x92 DUP2
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 DUP4
0x99 DUP4
0x9a DUP1
0x9b DUP3
0x9c DUP5
0x9d CALLDATACOPY
0x9e DUP3
0x9f ADD
0xa0 SWAP2
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 POP
0xa6 POP
0xa7 SWAP2
0xa8 SWAP1
0xa9 POP
0xaa POP
0xab PUSH2 0x20a
0xae JUMP
---
0x5f: JUMPDEST 
0x60: V22 = 0xaf
0x63: V23 = 0x4
0x67: V24 = CALLDATALOAD 0x4
0x69: V25 = 0x20
0x6b: V26 = ADD 0x20 0x4
0x6e: V27 = ADD 0x4 V24
0x70: V28 = CALLDATALOAD V27
0x72: V29 = 0x20
0x74: V30 = ADD 0x20 V27
0x78: V31 = 0x1f
0x7a: V32 = ADD 0x1f V28
0x7b: V33 = 0x20
0x7f: V34 = DIV V32 0x20
0x80: V35 = MUL V34 0x20
0x81: V36 = 0x20
0x83: V37 = ADD 0x20 V35
0x84: V38 = 0x40
0x86: V39 = M[0x40]
0x89: V40 = ADD V39 V37
0x8a: V41 = 0x40
0x8c: M[0x40] = V40
0x94: M[V39] = V28
0x95: V42 = 0x20
0x97: V43 = ADD 0x20 V39
0x9d: CALLDATACOPY V43 V30 V28
0x9f: V44 = ADD V43 V28
0xab: V45 = 0x20a
0xae: JUMP 0x20a
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xaf, V39]
Exit stack: [V7, 0xaf, V39]

================================

Block 0xaf
[0xaf:0xd6]
---
Predecessors: [0x306]
Successors: [0xd7]
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 DUP1
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 DUP3
0xb9 DUP2
0xba SUB
0xbb DUP3
0xbc MSTORE
0xbd DUP4
0xbe DUP2
0xbf DUP2
0xc0 MLOAD
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 DUP1
0xc9 MLOAD
0xca SWAP1
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf PUSH1 0x20
0xd1 MUL
0xd2 DUP1
0xd3 DUP4
0xd4 DUP4
0xd5 PUSH1 0x0
---
0xaf: JUMPDEST 
0xb0: V46 = 0x40
0xb2: V47 = M[0x40]
0xb5: V48 = 0x20
0xb7: V49 = ADD 0x20 V47
0xba: V50 = SUB V49 V47
0xbc: M[V47] = V50
0xc0: V51 = M[V189]
0xc2: M[V49] = V51
0xc3: V52 = 0x20
0xc5: V53 = ADD 0x20 V49
0xc9: V54 = M[V189]
0xcb: V55 = 0x20
0xcd: V56 = ADD 0x20 V189
0xcf: V57 = 0x20
0xd1: V58 = MUL 0x20 V54
0xd5: V59 = 0x0
---
Entry stack: [V7, V189]
Stack pops: 1
Stack additions: [S0, V47, V47, V53, V56, V58, V58, V53, V56, 0x0]
Exit stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, 0x0]

================================

Block 0xd7
[0xd7:0xdf]
---
Predecessors: [0xaf, 0xe8]
Successors: [0xe0, 0xf3]
---
0xd7 JUMPDEST
0xd8 DUP4
0xd9 DUP2
0xda LT
0xdb ISZERO
0xdc PUSH2 0xf3
0xdf JUMPI
---
0xd7: JUMPDEST 
0xda: V60 = LT S0 V58
0xdb: V61 = ISZERO V60
0xdc: V62 = 0xf3
0xdf: JUMPI 0xf3 V61
---
Entry stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, S0]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0xd7]
Successors: [0xe8]
---
0xe0 DUP1
0xe1 DUP3
0xe2 ADD
0xe3 MLOAD
0xe4 DUP2
0xe5 DUP5
0xe6 ADD
0xe7 MSTORE
---
0xe2: V63 = ADD V56 S0
0xe3: V64 = M[V63]
0xe6: V65 = ADD V53 S0
0xe7: M[V65] = V64
---
Entry stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, S0]

================================

Block 0xe8
[0xe8:0xf2]
---
Predecessors: [0xe0]
Successors: [0xd7]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x20
0xeb DUP2
0xec ADD
0xed SWAP1
0xee POP
0xef PUSH2 0xd7
0xf2 JUMP
---
0xe8: JUMPDEST 
0xe9: V66 = 0x20
0xec: V67 = ADD S0 0x20
0xef: V68 = 0xd7
0xf2: JUMP 0xd7
---
Entry stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, S0]
Stack pops: 1
Stack additions: [V67]
Exit stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, V67]

================================

Block 0xf3
[0xf3:0x106]
---
Predecessors: [0xd7]
Successors: []
---
0xf3 JUMPDEST
0xf4 POP
0xf5 POP
0xf6 POP
0xf7 POP
0xf8 SWAP1
0xf9 POP
0xfa ADD
0xfb SWAP3
0xfc POP
0xfd POP
0xfe POP
0xff PUSH1 0x40
0x101 MLOAD
0x102 DUP1
0x103 SWAP2
0x104 SUB
0x105 SWAP1
0x106 RETURN
---
0xf3: JUMPDEST 
0xfa: V69 = ADD V58 V53
0xff: V70 = 0x40
0x101: V71 = M[0x40]
0x104: V72 = SUB V69 V71
0x106: RETURN V71 V72
---
Entry stack: [V7, V189, V47, V47, V53, V56, V58, V58, V53, V56, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V7]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0x39]
Successors: [0x10e, 0x112]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V73 = CALLVALUE
0x109: V74 = ISZERO V73
0x10a: V75 = 0x112
0x10d: JUMPI 0x112 V74
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x107]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V76 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x112
[0x112:0x16a]
---
Predecessors: [0x107]
Successors: [0x30b]
---
0x112 JUMPDEST
0x113 PUSH2 0x16b
0x116 PUSH1 0x4
0x118 DUP1
0x119 DUP1
0x11a CALLDATALOAD
0x11b SWAP1
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 DUP3
0x121 ADD
0x122 DUP1
0x123 CALLDATALOAD
0x124 SWAP1
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 DUP1
0x12a DUP1
0x12b PUSH1 0x1f
0x12d ADD
0x12e PUSH1 0x20
0x130 DUP1
0x131 SWAP2
0x132 DIV
0x133 MUL
0x134 PUSH1 0x20
0x136 ADD
0x137 PUSH1 0x40
0x139 MLOAD
0x13a SWAP1
0x13b DUP2
0x13c ADD
0x13d PUSH1 0x40
0x13f MSTORE
0x140 DUP1
0x141 SWAP4
0x142 SWAP3
0x143 SWAP2
0x144 SWAP1
0x145 DUP2
0x146 DUP2
0x147 MSTORE
0x148 PUSH1 0x20
0x14a ADD
0x14b DUP4
0x14c DUP4
0x14d DUP1
0x14e DUP3
0x14f DUP5
0x150 CALLDATACOPY
0x151 DUP3
0x152 ADD
0x153 SWAP2
0x154 POP
0x155 POP
0x156 POP
0x157 POP
0x158 POP
0x159 POP
0x15a SWAP2
0x15b SWAP1
0x15c DUP1
0x15d CALLDATALOAD
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP2
0x164 SWAP1
0x165 POP
0x166 POP
0x167 PUSH2 0x30b
0x16a JUMP
---
0x112: JUMPDEST 
0x113: V77 = 0x16b
0x116: V78 = 0x4
0x11a: V79 = CALLDATALOAD 0x4
0x11c: V80 = 0x20
0x11e: V81 = ADD 0x20 0x4
0x121: V82 = ADD 0x4 V79
0x123: V83 = CALLDATALOAD V82
0x125: V84 = 0x20
0x127: V85 = ADD 0x20 V82
0x12b: V86 = 0x1f
0x12d: V87 = ADD 0x1f V83
0x12e: V88 = 0x20
0x132: V89 = DIV V87 0x20
0x133: V90 = MUL V89 0x20
0x134: V91 = 0x20
0x136: V92 = ADD 0x20 V90
0x137: V93 = 0x40
0x139: V94 = M[0x40]
0x13c: V95 = ADD V94 V92
0x13d: V96 = 0x40
0x13f: M[0x40] = V95
0x147: M[V94] = V83
0x148: V97 = 0x20
0x14a: V98 = ADD 0x20 V94
0x150: CALLDATACOPY V98 V85 V83
0x152: V99 = ADD V98 V83
0x15d: V100 = CALLDATALOAD 0x24
0x15f: V101 = 0x20
0x161: V102 = ADD 0x20 0x24
0x167: V103 = 0x30b
0x16a: JUMP 0x30b
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x16b, V94, V100]
Exit stack: [V7, 0x16b, V94, V100]

================================

Block 0x16b
[0x16b:0x1ac]
---
Predecessors: [0x3b5]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 DUP3
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 SWAP2
0x1a3 POP
0x1a4 POP
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 SWAP2
0x1aa SUB
0x1ab SWAP1
0x1ac RETURN
---
0x16b: JUMPDEST 
0x16c: V104 = 0x40
0x16e: V105 = M[0x40]
0x171: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x187: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x19e: M[V105] = V109
0x19f: V110 = 0x20
0x1a1: V111 = ADD 0x20 V105
0x1a5: V112 = 0x40
0x1a7: V113 = M[0x40]
0x1aa: V114 = SUB V111 V113
0x1ac: RETURN V113 V114
---
Entry stack: [V7, V273]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x44]
Successors: [0x1b4, 0x1b8]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V115 = CALLVALUE
0x1af: V116 = ISZERO V115
0x1b0: V117 = 0x1b8
0x1b3: JUMPI 0x1b8 V116
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V118 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x1b8
[0x1b8:0x207]
---
Predecessors: [0x1ad]
Successors: [0x3bb]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x208
0x1bc PUSH1 0x4
0x1be DUP1
0x1bf DUP1
0x1c0 CALLDATALOAD
0x1c1 SWAP1
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 SWAP1
0x1c6 DUP3
0x1c7 ADD
0x1c8 DUP1
0x1c9 CALLDATALOAD
0x1ca SWAP1
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP1
0x1cf DUP1
0x1d0 DUP1
0x1d1 PUSH1 0x1f
0x1d3 ADD
0x1d4 PUSH1 0x20
0x1d6 DUP1
0x1d7 SWAP2
0x1d8 DIV
0x1d9 MUL
0x1da PUSH1 0x20
0x1dc ADD
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 ADD
0x1e3 PUSH1 0x40
0x1e5 MSTORE
0x1e6 DUP1
0x1e7 SWAP4
0x1e8 SWAP3
0x1e9 SWAP2
0x1ea SWAP1
0x1eb DUP2
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 DUP4
0x1f2 DUP4
0x1f3 DUP1
0x1f4 DUP3
0x1f5 DUP5
0x1f6 CALLDATACOPY
0x1f7 DUP3
0x1f8 ADD
0x1f9 SWAP2
0x1fa POP
0x1fb POP
0x1fc POP
0x1fd POP
0x1fe POP
0x1ff POP
0x200 SWAP2
0x201 SWAP1
0x202 POP
0x203 POP
0x204 PUSH2 0x3bb
0x207 JUMP
---
0x1b8: JUMPDEST 
0x1b9: V119 = 0x208
0x1bc: V120 = 0x4
0x1c0: V121 = CALLDATALOAD 0x4
0x1c2: V122 = 0x20
0x1c4: V123 = ADD 0x20 0x4
0x1c7: V124 = ADD 0x4 V121
0x1c9: V125 = CALLDATALOAD V124
0x1cb: V126 = 0x20
0x1cd: V127 = ADD 0x20 V124
0x1d1: V128 = 0x1f
0x1d3: V129 = ADD 0x1f V125
0x1d4: V130 = 0x20
0x1d8: V131 = DIV V129 0x20
0x1d9: V132 = MUL V131 0x20
0x1da: V133 = 0x20
0x1dc: V134 = ADD 0x20 V132
0x1dd: V135 = 0x40
0x1df: V136 = M[0x40]
0x1e2: V137 = ADD V136 V134
0x1e3: V138 = 0x40
0x1e5: M[0x40] = V137
0x1ed: M[V136] = V125
0x1ee: V139 = 0x20
0x1f0: V140 = ADD 0x20 V136
0x1f6: CALLDATACOPY V140 V127 V125
0x1f8: V141 = ADD V140 V125
0x204: V142 = 0x3bb
0x207: JUMP 0x3bb
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x208, V136]
Exit stack: [V7, 0x208, V136]

================================

Block 0x208
[0x208:0x209]
---
Predecessors: [0x48a]
Successors: []
---
0x208 JUMPDEST
0x209 STOP
---
0x208: JUMPDEST 
0x209: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x20a
[0x20a:0x211]
---
Predecessors: [0x5f]
Successors: [0x48d]
---
0x20a JUMPDEST
0x20b PUSH2 0x212
0x20e PUSH2 0x48d
0x211 JUMP
---
0x20a: JUMPDEST 
0x20b: V143 = 0x212
0x20e: V144 = 0x48d
0x211: JUMP 0x48d
---
Entry stack: [V7, 0xaf, V39]
Stack pops: 0
Stack additions: [0x212]
Exit stack: [V7, 0xaf, V39, 0x212]

================================

Block 0x212
[0x212:0x224]
---
Predecessors: [0x48d]
Successors: [0x225]
---
0x212 JUMPDEST
0x213 PUSH1 0x0
0x215 DUP3
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a DUP3
0x21b DUP1
0x21c MLOAD
0x21d SWAP1
0x21e PUSH1 0x20
0x220 ADD
0x221 SWAP1
0x222 DUP1
0x223 DUP4
0x224 DUP4
---
0x212: JUMPDEST 
0x213: V145 = 0x0
0x216: V146 = 0x40
0x218: V147 = M[0x40]
0x21c: V148 = M[V39]
0x21e: V149 = 0x20
0x220: V150 = ADD 0x20 V39
---
Entry stack: [V7, 0xaf, V39, V337]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, V147, V147, V150, V148, V148, V147, V150]
Exit stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, V148, V147, V150]

================================

Block 0x225
[0x225:0x22f]
---
Predecessors: [0x212, 0x234]
Successors: [0x230, 0x24b]
---
0x225 JUMPDEST
0x226 PUSH1 0x20
0x228 DUP4
0x229 LT
0x22a ISZERO
0x22b ISZERO
0x22c PUSH2 0x24b
0x22f JUMPI
---
0x225: JUMPDEST 
0x226: V151 = 0x20
0x229: V152 = LT S2 0x20
0x22a: V153 = ISZERO V152
0x22b: V154 = ISZERO V153
0x22c: V155 = 0x24b
0x22f: JUMPI 0x24b V154
---
Entry stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, S2, S1, S0]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x225]
Successors: [0x234]
---
0x230 DUP1
0x231 MLOAD
0x232 DUP3
0x233 MSTORE
---
0x231: V156 = M[S0]
0x233: M[S1] = V156
---
Entry stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, S2, S1, S0]

================================

Block 0x234
[0x234:0x24a]
---
Predecessors: [0x230]
Successors: [0x225]
---
0x234 JUMPDEST
0x235 PUSH1 0x20
0x237 DUP3
0x238 ADD
0x239 SWAP2
0x23a POP
0x23b PUSH1 0x20
0x23d DUP2
0x23e ADD
0x23f SWAP1
0x240 POP
0x241 PUSH1 0x20
0x243 DUP4
0x244 SUB
0x245 SWAP3
0x246 POP
0x247 PUSH2 0x225
0x24a JUMP
---
0x234: JUMPDEST 
0x235: V157 = 0x20
0x238: V158 = ADD S1 0x20
0x23b: V159 = 0x20
0x23e: V160 = ADD S0 0x20
0x241: V161 = 0x20
0x244: V162 = SUB S2 0x20
0x247: V163 = 0x225
0x24a: JUMP 0x225
---
Entry stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 3
Stack additions: [V162, V158, V160]
Exit stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, V162, V158, V160]

================================

Block 0x24b
[0x24b:0x2a3]
---
Predecessors: [0x225]
Successors: [0x2a4, 0x2fe]
---
0x24b JUMPDEST
0x24c PUSH1 0x1
0x24e DUP4
0x24f PUSH1 0x20
0x251 SUB
0x252 PUSH2 0x100
0x255 EXP
0x256 SUB
0x257 DUP1
0x258 NOT
0x259 DUP3
0x25a MLOAD
0x25b AND
0x25c DUP2
0x25d DUP5
0x25e MLOAD
0x25f AND
0x260 DUP1
0x261 DUP3
0x262 OR
0x263 DUP6
0x264 MSTORE
0x265 POP
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b SWAP1
0x26c POP
0x26d ADD
0x26e SWAP2
0x26f POP
0x270 POP
0x271 SWAP1
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b SWAP2
0x27c SUB
0x27d SWAP1
0x27e SHA3
0x27f DUP1
0x280 SLOAD
0x281 DUP1
0x282 PUSH1 0x20
0x284 MUL
0x285 PUSH1 0x20
0x287 ADD
0x288 PUSH1 0x40
0x28a MLOAD
0x28b SWAP1
0x28c DUP2
0x28d ADD
0x28e PUSH1 0x40
0x290 MSTORE
0x291 DUP1
0x292 SWAP3
0x293 SWAP2
0x294 SWAP1
0x295 DUP2
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b DUP3
0x29c DUP1
0x29d SLOAD
0x29e DUP1
0x29f ISZERO
0x2a0 PUSH2 0x2fe
0x2a3 JUMPI
---
0x24b: JUMPDEST 
0x24c: V164 = 0x1
0x24f: V165 = 0x20
0x251: V166 = SUB 0x20 S2
0x252: V167 = 0x100
0x255: V168 = EXP 0x100 V166
0x256: V169 = SUB V168 0x1
0x258: V170 = NOT V169
0x25a: V171 = M[S0]
0x25b: V172 = AND V171 V170
0x25e: V173 = M[S1]
0x25f: V174 = AND V173 V169
0x262: V175 = OR V172 V174
0x264: M[S1] = V175
0x26d: V176 = ADD V148 V147
0x273: M[V176] = 0x0
0x274: V177 = 0x20
0x276: V178 = ADD 0x20 V176
0x277: V179 = 0x40
0x279: V180 = M[0x40]
0x27c: V181 = SUB V178 V180
0x27e: V182 = SHA3 V180 V181
0x280: V183 = S[V182]
0x282: V184 = 0x20
0x284: V185 = MUL 0x20 V183
0x285: V186 = 0x20
0x287: V187 = ADD 0x20 V185
0x288: V188 = 0x40
0x28a: V189 = M[0x40]
0x28d: V190 = ADD V189 V187
0x28e: V191 = 0x40
0x290: M[0x40] = V190
0x297: M[V189] = V183
0x298: V192 = 0x20
0x29a: V193 = ADD 0x20 V189
0x29d: V194 = S[V182]
0x29f: V195 = ISZERO V194
0x2a0: V196 = 0x2fe
0x2a3: JUMPI 0x2fe V195
---
Entry stack: [V7, 0xaf, V39, V337, 0x0, V39, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 9
Stack additions: [V189, V182, V183, V193, V182, V194]
Exit stack: [V7, 0xaf, V39, V337, V189, V182, V183, V193, V182, V194]

================================

Block 0x2a4
[0x2a4:0x2b3]
---
Predecessors: [0x24b]
Successors: [0x2b4]
---
0x2a4 PUSH1 0x20
0x2a6 MUL
0x2a7 DUP3
0x2a8 ADD
0x2a9 SWAP2
0x2aa SWAP1
0x2ab PUSH1 0x0
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 PUSH1 0x0
0x2b2 SHA3
0x2b3 SWAP1
---
0x2a4: V197 = 0x20
0x2a6: V198 = MUL 0x20 V194
0x2a8: V199 = ADD V193 V198
0x2ab: V200 = 0x0
0x2ad: M[0x0] = V182
0x2ae: V201 = 0x20
0x2b0: V202 = 0x0
0x2b2: V203 = SHA3 0x0 0x20
---
Entry stack: [V7, 0xaf, V39, V337, V189, V182, V183, V193, V182, V194]
Stack pops: 3
Stack additions: [V199, V203, S2]
Exit stack: [V7, 0xaf, V39, V337, V189, V182, V183, V199, V203, V193]

================================

Block 0x2b4
[0x2b4:0x2fd]
---
Predecessors: [0x2a4, 0x2b4]
Successors: [0x2b4, 0x2fe]
---
0x2b4 JUMPDEST
0x2b5 DUP2
0x2b6 PUSH1 0x0
0x2b8 SWAP1
0x2b9 SLOAD
0x2ba SWAP1
0x2bb PUSH2 0x100
0x2be EXP
0x2bf SWAP1
0x2c0 DIV
0x2c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d6 AND
0x2d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ec AND
0x2ed DUP2
0x2ee MSTORE
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 SWAP1
0x2f3 PUSH1 0x1
0x2f5 ADD
0x2f6 SWAP1
0x2f7 DUP1
0x2f8 DUP4
0x2f9 GT
0x2fa PUSH2 0x2b4
0x2fd JUMPI
---
0x2b4: JUMPDEST 
0x2b6: V204 = 0x0
0x2b9: V205 = S[S1]
0x2bb: V206 = 0x100
0x2be: V207 = EXP 0x100 0x0
0x2c0: V208 = DIV V205 0x1
0x2c1: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x2d7: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ec: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x2ee: M[S0] = V212
0x2ef: V213 = 0x20
0x2f1: V214 = ADD 0x20 S0
0x2f3: V215 = 0x1
0x2f5: V216 = ADD 0x1 S1
0x2f9: V217 = GT V199 V214
0x2fa: V218 = 0x2b4
0x2fd: JUMPI 0x2b4 V217
---
Entry stack: [V7, 0xaf, V39, V337, V189, V182, V183, V199, S1, S0]
Stack pops: 3
Stack additions: [S2, V216, V214]
Exit stack: [V7, 0xaf, V39, V337, V189, V182, V183, V199, V216, V214]

================================

Block 0x2fe
[0x2fe:0x305]
---
Predecessors: [0x24b, 0x2b4]
Successors: [0x306]
---
0x2fe JUMPDEST
0x2ff POP
0x300 POP
0x301 POP
0x302 POP
0x303 POP
0x304 SWAP1
0x305 POP
---
0x2fe: JUMPDEST 
---
Entry stack: [V7, 0xaf, V39, V337, V189, V182, V183, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V7, 0xaf, V39, V189]

================================

Block 0x306
[0x306:0x30a]
---
Predecessors: [0x2fe]
Successors: [0xaf]
---
0x306 JUMPDEST
0x307 SWAP2
0x308 SWAP1
0x309 POP
0x30a JUMP
---
0x306: JUMPDEST 
0x30a: JUMP 0xaf
---
Entry stack: [V7, 0xaf, V39, V189]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V7, V189]

================================

Block 0x30b
[0x30b:0x31e]
---
Predecessors: [0x112]
Successors: [0x31f]
---
0x30b JUMPDEST
0x30c PUSH1 0x0
0x30e DUP1
0x30f DUP4
0x310 PUSH1 0x40
0x312 MLOAD
0x313 DUP1
0x314 DUP3
0x315 DUP1
0x316 MLOAD
0x317 SWAP1
0x318 PUSH1 0x20
0x31a ADD
0x31b SWAP1
0x31c DUP1
0x31d DUP4
0x31e DUP4
---
0x30b: JUMPDEST 
0x30c: V219 = 0x0
0x310: V220 = 0x40
0x312: V221 = M[0x40]
0x316: V222 = M[V94]
0x318: V223 = 0x20
0x31a: V224 = ADD 0x20 V94
---
Entry stack: [V7, 0x16b, V94, V100]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S1, V221, V221, V224, V222, V222, V221, V224]
Exit stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, V222, V221, V224]

================================

Block 0x31f
[0x31f:0x329]
---
Predecessors: [0x30b, 0x32e]
Successors: [0x32a, 0x345]
---
0x31f JUMPDEST
0x320 PUSH1 0x20
0x322 DUP4
0x323 LT
0x324 ISZERO
0x325 ISZERO
0x326 PUSH2 0x345
0x329 JUMPI
---
0x31f: JUMPDEST 
0x320: V225 = 0x20
0x323: V226 = LT S2 0x20
0x324: V227 = ISZERO V226
0x325: V228 = ISZERO V227
0x326: V229 = 0x345
0x329: JUMPI 0x345 V228
---
Entry stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, S2, S1, S0]

================================

Block 0x32a
[0x32a:0x32d]
---
Predecessors: [0x31f]
Successors: [0x32e]
---
0x32a DUP1
0x32b MLOAD
0x32c DUP3
0x32d MSTORE
---
0x32b: V230 = M[S0]
0x32d: M[S1] = V230
---
Entry stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, S2, S1, S0]

================================

Block 0x32e
[0x32e:0x344]
---
Predecessors: [0x32a]
Successors: [0x31f]
---
0x32e JUMPDEST
0x32f PUSH1 0x20
0x331 DUP3
0x332 ADD
0x333 SWAP2
0x334 POP
0x335 PUSH1 0x20
0x337 DUP2
0x338 ADD
0x339 SWAP1
0x33a POP
0x33b PUSH1 0x20
0x33d DUP4
0x33e SUB
0x33f SWAP3
0x340 POP
0x341 PUSH2 0x31f
0x344 JUMP
---
0x32e: JUMPDEST 
0x32f: V231 = 0x20
0x332: V232 = ADD S1 0x20
0x335: V233 = 0x20
0x338: V234 = ADD S0 0x20
0x33b: V235 = 0x20
0x33e: V236 = SUB S2 0x20
0x341: V237 = 0x31f
0x344: JUMP 0x31f
---
Entry stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, S2, S1, S0]
Stack pops: 3
Stack additions: [V236, V232, V234]
Exit stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, V236, V232, V234]

================================

Block 0x345
[0x345:0x383]
---
Predecessors: [0x31f]
Successors: [0x384, 0x385]
---
0x345 JUMPDEST
0x346 PUSH1 0x1
0x348 DUP4
0x349 PUSH1 0x20
0x34b SUB
0x34c PUSH2 0x100
0x34f EXP
0x350 SUB
0x351 DUP1
0x352 NOT
0x353 DUP3
0x354 MLOAD
0x355 AND
0x356 DUP2
0x357 DUP5
0x358 MLOAD
0x359 AND
0x35a DUP1
0x35b DUP3
0x35c OR
0x35d DUP6
0x35e MSTORE
0x35f POP
0x360 POP
0x361 POP
0x362 POP
0x363 POP
0x364 POP
0x365 SWAP1
0x366 POP
0x367 ADD
0x368 SWAP2
0x369 POP
0x36a POP
0x36b SWAP1
0x36c DUP2
0x36d MSTORE
0x36e PUSH1 0x20
0x370 ADD
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 SWAP2
0x376 SUB
0x377 SWAP1
0x378 SHA3
0x379 DUP3
0x37a DUP2
0x37b SLOAD
0x37c DUP2
0x37d LT
0x37e ISZERO
0x37f ISZERO
0x380 PUSH2 0x385
0x383 JUMPI
---
0x345: JUMPDEST 
0x346: V238 = 0x1
0x349: V239 = 0x20
0x34b: V240 = SUB 0x20 S2
0x34c: V241 = 0x100
0x34f: V242 = EXP 0x100 V240
0x350: V243 = SUB V242 0x1
0x352: V244 = NOT V243
0x354: V245 = M[S0]
0x355: V246 = AND V245 V244
0x358: V247 = M[S1]
0x359: V248 = AND V247 V243
0x35c: V249 = OR V246 V248
0x35e: M[S1] = V249
0x367: V250 = ADD V222 V221
0x36d: M[V250] = 0x0
0x36e: V251 = 0x20
0x370: V252 = ADD 0x20 V250
0x371: V253 = 0x40
0x373: V254 = M[0x40]
0x376: V255 = SUB V252 V254
0x378: V256 = SHA3 V254 V255
0x37b: V257 = S[V256]
0x37d: V258 = LT V100 V257
0x37e: V259 = ISZERO V258
0x37f: V260 = ISZERO V259
0x380: V261 = 0x385
0x383: JUMPI 0x385 V260
---
Entry stack: [V7, 0x16b, V94, V100, 0x0, 0x0, V94, V221, V221, V224, V222, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V256, S10]
Exit stack: [V7, 0x16b, V94, V100, 0x0, V256, V100]

================================

Block 0x384
[0x384:0x384]
---
Predecessors: [0x345]
Successors: []
---
0x384 INVALID
---
0x384: INVALID 
---
Entry stack: [V7, 0x16b, V94, V100, 0x0, V256, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x16b, V94, V100, 0x0, V256, V100]

================================

Block 0x385
[0x385:0x392]
---
Predecessors: [0x345]
Successors: [0x393]
---
0x385 JUMPDEST
0x386 SWAP1
0x387 PUSH1 0x0
0x389 MSTORE
0x38a PUSH1 0x20
0x38c PUSH1 0x0
0x38e SHA3
0x38f SWAP1
0x390 ADD
0x391 PUSH1 0x0
---
0x385: JUMPDEST 
0x387: V262 = 0x0
0x389: M[0x0] = V256
0x38a: V263 = 0x20
0x38c: V264 = 0x0
0x38e: V265 = SHA3 0x0 0x20
0x390: V266 = ADD V100 V265
0x391: V267 = 0x0
---
Entry stack: [V7, 0x16b, V94, V100, 0x0, V256, V100]
Stack pops: 2
Stack additions: [V266, 0x0]
Exit stack: [V7, 0x16b, V94, V100, 0x0, V266, 0x0]

================================

Block 0x393
[0x393:0x3b4]
---
Predecessors: [0x385]
Successors: [0x3b5]
---
0x393 JUMPDEST
0x394 SWAP1
0x395 SLOAD
0x396 SWAP1
0x397 PUSH2 0x100
0x39a EXP
0x39b SWAP1
0x39c DIV
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 SWAP1
0x3b4 POP
---
0x393: JUMPDEST 
0x395: V268 = S[V266]
0x397: V269 = 0x100
0x39a: V270 = EXP 0x100 0x0
0x39c: V271 = DIV V268 0x1
0x39d: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
---
Entry stack: [V7, 0x16b, V94, V100, 0x0, V266, 0x0]
Stack pops: 3
Stack additions: [V273]
Exit stack: [V7, 0x16b, V94, V100, V273]

================================

Block 0x3b5
[0x3b5:0x3ba]
---
Predecessors: [0x393]
Successors: [0x16b]
---
0x3b5 JUMPDEST
0x3b6 SWAP3
0x3b7 SWAP2
0x3b8 POP
0x3b9 POP
0x3ba JUMP
---
0x3b5: JUMPDEST 
0x3ba: JUMP 0x16b
---
Entry stack: [V7, 0x16b, V94, V100, V273]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V7, V273]

================================

Block 0x3bb
[0x3bb:0x3cd]
---
Predecessors: [0x1b8]
Successors: [0x3ce]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x0
0x3be DUP2
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 DUP3
0x3c4 DUP1
0x3c5 MLOAD
0x3c6 SWAP1
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP1
0x3cb DUP1
0x3cc DUP4
0x3cd DUP4
---
0x3bb: JUMPDEST 
0x3bc: V274 = 0x0
0x3bf: V275 = 0x40
0x3c1: V276 = M[0x40]
0x3c5: V277 = M[V136]
0x3c7: V278 = 0x20
0x3c9: V279 = ADD 0x20 V136
---
Entry stack: [V7, 0x208, V136]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V276, V276, V279, V277, V277, V276, V279]
Exit stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, V277, V276, V279]

================================

Block 0x3ce
[0x3ce:0x3d8]
---
Predecessors: [0x3bb, 0x3dd]
Successors: [0x3d9, 0x3f4]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x20
0x3d1 DUP4
0x3d2 LT
0x3d3 ISZERO
0x3d4 ISZERO
0x3d5 PUSH2 0x3f4
0x3d8 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V280 = 0x20
0x3d2: V281 = LT S2 0x20
0x3d3: V282 = ISZERO V281
0x3d4: V283 = ISZERO V282
0x3d5: V284 = 0x3f4
0x3d8: JUMPI 0x3f4 V283
---
Entry stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, S2, S1, S0]

================================

Block 0x3d9
[0x3d9:0x3dc]
---
Predecessors: [0x3ce]
Successors: [0x3dd]
---
0x3d9 DUP1
0x3da MLOAD
0x3db DUP3
0x3dc MSTORE
---
0x3da: V285 = M[S0]
0x3dc: M[S1] = V285
---
Entry stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, S2, S1, S0]

================================

Block 0x3dd
[0x3dd:0x3f3]
---
Predecessors: [0x3d9]
Successors: [0x3ce]
---
0x3dd JUMPDEST
0x3de PUSH1 0x20
0x3e0 DUP3
0x3e1 ADD
0x3e2 SWAP2
0x3e3 POP
0x3e4 PUSH1 0x20
0x3e6 DUP2
0x3e7 ADD
0x3e8 SWAP1
0x3e9 POP
0x3ea PUSH1 0x20
0x3ec DUP4
0x3ed SUB
0x3ee SWAP3
0x3ef POP
0x3f0 PUSH2 0x3ce
0x3f3 JUMP
---
0x3dd: JUMPDEST 
0x3de: V286 = 0x20
0x3e1: V287 = ADD S1 0x20
0x3e4: V288 = 0x20
0x3e7: V289 = ADD S0 0x20
0x3ea: V290 = 0x20
0x3ed: V291 = SUB S2 0x20
0x3f0: V292 = 0x3ce
0x3f3: JUMP 0x3ce
---
Entry stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, S2, S1, S0]
Stack pops: 3
Stack additions: [V291, V287, V289]
Exit stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, V291, V287, V289]

================================

Block 0x3f4
[0x3f4:0x438]
---
Predecessors: [0x3ce]
Successors: [0x4a1]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x1
0x3f7 DUP4
0x3f8 PUSH1 0x20
0x3fa SUB
0x3fb PUSH2 0x100
0x3fe EXP
0x3ff SUB
0x400 DUP1
0x401 NOT
0x402 DUP3
0x403 MLOAD
0x404 AND
0x405 DUP2
0x406 DUP5
0x407 MLOAD
0x408 AND
0x409 DUP1
0x40a DUP3
0x40b OR
0x40c DUP6
0x40d MSTORE
0x40e POP
0x40f POP
0x410 POP
0x411 POP
0x412 POP
0x413 POP
0x414 SWAP1
0x415 POP
0x416 ADD
0x417 SWAP2
0x418 POP
0x419 POP
0x41a SWAP1
0x41b DUP2
0x41c MSTORE
0x41d PUSH1 0x20
0x41f ADD
0x420 PUSH1 0x40
0x422 MLOAD
0x423 DUP1
0x424 SWAP2
0x425 SUB
0x426 SWAP1
0x427 SHA3
0x428 DUP1
0x429 SLOAD
0x42a DUP1
0x42b PUSH1 0x1
0x42d ADD
0x42e DUP3
0x42f DUP2
0x430 PUSH2 0x439
0x433 SWAP2
0x434 SWAP1
0x435 PUSH2 0x4a1
0x438 JUMP
---
0x3f4: JUMPDEST 
0x3f5: V293 = 0x1
0x3f8: V294 = 0x20
0x3fa: V295 = SUB 0x20 S2
0x3fb: V296 = 0x100
0x3fe: V297 = EXP 0x100 V295
0x3ff: V298 = SUB V297 0x1
0x401: V299 = NOT V298
0x403: V300 = M[S0]
0x404: V301 = AND V300 V299
0x407: V302 = M[S1]
0x408: V303 = AND V302 V298
0x40b: V304 = OR V301 V303
0x40d: M[S1] = V304
0x416: V305 = ADD V277 V276
0x41c: M[V305] = 0x0
0x41d: V306 = 0x20
0x41f: V307 = ADD 0x20 V305
0x420: V308 = 0x40
0x422: V309 = M[0x40]
0x425: V310 = SUB V307 V309
0x427: V311 = SHA3 V309 V310
0x429: V312 = S[V311]
0x42b: V313 = 0x1
0x42d: V314 = ADD 0x1 V312
0x430: V315 = 0x439
0x435: V316 = 0x4a1
0x438: JUMP 0x4a1
---
Entry stack: [V7, 0x208, V136, 0x0, V136, V276, V276, V279, V277, S2, S1, S0]
Stack pops: 9
Stack additions: [V311, V312, V314, 0x439, V311, V314]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314]

================================

Block 0x439
[0x439:0x446]
---
Predecessors: [0x4c8]
Successors: [0x447]
---
0x439 JUMPDEST
0x43a SWAP2
0x43b PUSH1 0x0
0x43d MSTORE
0x43e PUSH1 0x20
0x440 PUSH1 0x0
0x442 SHA3
0x443 SWAP1
0x444 ADD
0x445 PUSH1 0x0
---
0x439: JUMPDEST 
0x43b: V317 = 0x0
0x43d: M[0x0] = V311
0x43e: V318 = 0x20
0x440: V319 = 0x0
0x442: V320 = SHA3 0x0 0x20
0x444: V321 = ADD V312 V320
0x445: V322 = 0x0
---
Entry stack: [V7, 0x208, V136, V311, V312, V314]
Stack pops: 3
Stack additions: [S0, V321, 0x0]
Exit stack: [V7, 0x208, V136, V314, V321, 0x0]

================================

Block 0x447
[0x447:0x489]
---
Predecessors: [0x439]
Successors: [0x48a]
---
0x447 JUMPDEST
0x448 CALLER
0x449 SWAP1
0x44a SWAP2
0x44b SWAP1
0x44c SWAP2
0x44d PUSH2 0x100
0x450 EXP
0x451 DUP2
0x452 SLOAD
0x453 DUP2
0x454 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x469 MUL
0x46a NOT
0x46b AND
0x46c SWAP1
0x46d DUP4
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 MUL
0x485 OR
0x486 SWAP1
0x487 SSTORE
0x488 POP
0x489 POP
---
0x447: JUMPDEST 
0x448: V323 = CALLER
0x44d: V324 = 0x100
0x450: V325 = EXP 0x100 0x0
0x452: V326 = S[V321]
0x454: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x469: V328 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x46a: V329 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V330 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V326
0x46e: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x484: V333 = MUL V332 0x1
0x485: V334 = OR V333 V330
0x487: S[V321] = V334
---
Entry stack: [V7, 0x208, V136, V314, V321, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x208, V136]

================================

Block 0x48a
[0x48a:0x48c]
---
Predecessors: [0x447]
Successors: [0x208]
---
0x48a JUMPDEST
0x48b POP
0x48c JUMP
---
0x48a: JUMPDEST 
0x48c: JUMP 0x208
---
Entry stack: [V7, 0x208, V136]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x48d
[0x48d:0x4a0]
---
Predecessors: [0x20a]
Successors: [0x212]
---
0x48d JUMPDEST
0x48e PUSH1 0x20
0x490 PUSH1 0x40
0x492 MLOAD
0x493 SWAP1
0x494 DUP2
0x495 ADD
0x496 PUSH1 0x40
0x498 MSTORE
0x499 DUP1
0x49a PUSH1 0x0
0x49c DUP2
0x49d MSTORE
0x49e POP
0x49f SWAP1
0x4a0 JUMP
---
0x48d: JUMPDEST 
0x48e: V335 = 0x20
0x490: V336 = 0x40
0x492: V337 = M[0x40]
0x495: V338 = ADD V337 0x20
0x496: V339 = 0x40
0x498: M[0x40] = V338
0x49a: V340 = 0x0
0x49d: M[V337] = 0x0
0x4a0: JUMP 0x212
---
Entry stack: [V7, 0xaf, V39, 0x212]
Stack pops: 1
Stack additions: [V337]
Exit stack: [V7, 0xaf, V39, V337]

================================

Block 0x4a1
[0x4a1:0x4ae]
---
Predecessors: [0x3f4]
Successors: [0x4af, 0x4c8]
---
0x4a1 JUMPDEST
0x4a2 DUP2
0x4a3 SLOAD
0x4a4 DUP2
0x4a5 DUP4
0x4a6 SSTORE
0x4a7 DUP2
0x4a8 DUP2
0x4a9 ISZERO
0x4aa GT
0x4ab PUSH2 0x4c8
0x4ae JUMPI
---
0x4a1: JUMPDEST 
0x4a3: V341 = S[V311]
0x4a6: S[V311] = V314
0x4a9: V342 = ISZERO V341
0x4aa: V343 = GT V342 V314
0x4ab: V344 = 0x4c8
0x4ae: JUMPI 0x4c8 V343
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314]
Stack pops: 2
Stack additions: [S1, S0, V341]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, V341]

================================

Block 0x4af
[0x4af:0x4c6]
---
Predecessors: [0x4a1]
Successors: [0x4cd]
---
0x4af DUP2
0x4b0 DUP4
0x4b1 PUSH1 0x0
0x4b3 MSTORE
0x4b4 PUSH1 0x20
0x4b6 PUSH1 0x0
0x4b8 SHA3
0x4b9 SWAP2
0x4ba DUP3
0x4bb ADD
0x4bc SWAP2
0x4bd ADD
0x4be PUSH2 0x4c7
0x4c1 SWAP2
0x4c2 SWAP1
0x4c3 PUSH2 0x4cd
0x4c6 JUMP
---
0x4b1: V345 = 0x0
0x4b3: M[0x0] = V311
0x4b4: V346 = 0x20
0x4b6: V347 = 0x0
0x4b8: V348 = SHA3 0x0 0x20
0x4bb: V349 = ADD V348 V341
0x4bd: V350 = ADD V348 V314
0x4be: V351 = 0x4c7
0x4c3: V352 = 0x4cd
0x4c6: JUMP 0x4cd
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, V341]
Stack pops: 3
Stack additions: [S2, S1, 0x4c7, V349, V350]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, V349, V350]

================================

Block 0x4c7
[0x4c7:0x4c7]
---
Predecessors: [0x4ef]
Successors: [0x4c8]
---
0x4c7 JUMPDEST
---
0x4c7: JUMPDEST 
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, V349]

================================

Block 0x4c8
[0x4c8:0x4cc]
---
Predecessors: [0x4a1, 0x4c7]
Successors: [0x439]
---
0x4c8 JUMPDEST
0x4c9 POP
0x4ca POP
0x4cb POP
0x4cc JUMP
---
0x4c8: JUMPDEST 
0x4cc: JUMP 0x439
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V7, 0x208, V136, V311, V312, V314]

================================

Block 0x4cd
[0x4cd:0x4d2]
---
Predecessors: [0x4af]
Successors: [0x4d3]
---
0x4cd JUMPDEST
0x4ce PUSH2 0x4ef
0x4d1 SWAP2
0x4d2 SWAP1
---
0x4cd: JUMPDEST 
0x4ce: V353 = 0x4ef
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, V349, V350]
Stack pops: 2
Stack additions: [0x4ef, S1, S0]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, 0x4ef, V349, V350]

================================

Block 0x4d3
[0x4d3:0x4db]
---
Predecessors: [0x4cd, 0x4dc]
Successors: [0x4dc, 0x4eb]
---
0x4d3 JUMPDEST
0x4d4 DUP1
0x4d5 DUP3
0x4d6 GT
0x4d7 ISZERO
0x4d8 PUSH2 0x4eb
0x4db JUMPI
---
0x4d3: JUMPDEST 
0x4d6: V354 = GT V349 S0
0x4d7: V355 = ISZERO V354
0x4d8: V356 = 0x4eb
0x4db: JUMPI 0x4eb V355
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, 0x4ef, V349, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, 0x4ef, V349, S0]

================================

Block 0x4dc
[0x4dc:0x4ea]
---
Predecessors: [0x4d3]
Successors: [0x4d3]
---
0x4dc PUSH1 0x0
0x4de DUP2
0x4df PUSH1 0x0
0x4e1 SWAP1
0x4e2 SSTORE
0x4e3 POP
0x4e4 PUSH1 0x1
0x4e6 ADD
0x4e7 PUSH2 0x4d3
0x4ea JUMP
---
0x4dc: V357 = 0x0
0x4df: V358 = 0x0
0x4e2: S[S0] = 0x0
0x4e4: V359 = 0x1
0x4e6: V360 = ADD 0x1 S0
0x4e7: V361 = 0x4d3
0x4ea: JUMP 0x4d3
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, 0x4ef, V349, S0]
Stack pops: 1
Stack additions: [V360]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, 0x4ef, V349, V360]

================================

Block 0x4eb
[0x4eb:0x4ee]
---
Predecessors: [0x4d3]
Successors: [0x4ef]
---
0x4eb JUMPDEST
0x4ec POP
0x4ed SWAP1
0x4ee JUMP
---
0x4eb: JUMPDEST 
0x4ee: JUMP 0x4ef
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, 0x4ef, V349, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, V349]

================================

Block 0x4ef
[0x4ef:0x4f1]
---
Predecessors: [0x4eb]
Successors: [0x4c7]
---
0x4ef JUMPDEST
0x4f0 SWAP1
0x4f1 JUMP
---
0x4ef: JUMPDEST 
0x4f1: JUMP 0x4c7
---
Entry stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, 0x4c7, V349]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x208, V136, V311, V312, V314, 0x439, V311, V314, V349]

================================

Block 0x4f2
[0x4f2:0x52d]
---
Predecessors: []
Successors: []
---
0x4f2 STOP
0x4f3 LOG1
0x4f4 PUSH6 0x627a7a723058
0x4fb SHA3
0x4fc MISSING 0x4e
0x4fd JUMP
0x4fe MISSING 0xcb
0x4ff PUSH18 0x518107918fb0f49819b74dc591cdcbcc7aeb
0x512 MISSING 0xdd
0x513 PUSH26 0xb2178f23dcdabbf70029
---
0x4f2: STOP 
0x4f3: LOG S0 S1 S2
0x4f4: V362 = 0x627a7a723058
0x4fb: V363 = SHA3 0x627a7a723058 S3
0x4fc: MISSING 0x4e
0x4fd: JUMP S0
0x4fe: MISSING 0xcb
0x4ff: V364 = 0x518107918fb0f49819b74dc591cdcbcc7aeb
0x512: MISSING 0xdd
0x513: V365 = 0xb2178f23dcdabbf70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V363, 0x518107918fb0f49819b74dc591cdcbcc7aeb, 0xb2178f23dcdabbf70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2404608f
Entry block: 0x54
Exit block: 0xf3
Body: 0x54, 0x5b, 0x5f, 0xaf, 0xd7, 0xe0, 0xe8, 0xf3, 0x20a, 0x212, 0x225, 0x230, 0x234, 0x24b, 0x2a4, 0x2b4, 0x2fe, 0x306, 0x48d

Function 1:
Public function signature: 0x48e9657d
Entry block: 0x107
Exit block: 0x16b
Body: 0x107, 0x10e, 0x112, 0x16b, 0x30b, 0x31f, 0x32a, 0x32e, 0x345, 0x384, 0x385, 0x393, 0x3b5

Function 2:
Public function signature: 0x79d6348d
Entry block: 0x1ad
Exit block: 0x208
Body: 0x1ad, 0x1b4, 0x1b8, 0x208, 0x3bb, 0x3ce, 0x3d9, 0x3dd, 0x3f4, 0x439, 0x447, 0x48a, 0x4a1, 0x4af, 0x4c7, 0x4c8, 0x4cd, 0x4d3, 0x4dc, 0x4eb, 0x4ef

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

