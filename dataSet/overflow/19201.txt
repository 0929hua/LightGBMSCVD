Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3971ee42
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3971ee42
0x3c: V13 = EQ 0x3971ee42 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x54]
---
Predecessors: [0xd]
Successors: [0x55, 0x59]
---
0x4e JUMPDEST
0x4f CALLVALUE
0x50 ISZERO
0x51 PUSH2 0x59
0x54 JUMPI
---
0x4e: JUMPDEST 
0x4f: V18 = CALLVALUE
0x50: V19 = ISZERO V18
0x51: V20 = 0x59
0x54: JUMPI 0x59 V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x55
[0x55:0x58]
---
Predecessors: [0x4e]
Successors: []
---
0x55 PUSH1 0x0
0x57 DUP1
0x58 REVERT
---
0x55: V21 = 0x0
0x58: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0xa5]
---
Predecessors: [0x4e]
Successors: [0xfd]
---
0x59 JUMPDEST
0x5a PUSH2 0xa6
0x5d PUSH1 0x4
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 SWAP1
0x63 PUSH1 0x20
0x65 ADD
0x66 SWAP1
0x67 DUP3
0x68 ADD
0x69 DUP1
0x6a CALLDATALOAD
0x6b SWAP1
0x6c PUSH1 0x20
0x6e ADD
0x6f SWAP1
0x70 DUP1
0x71 DUP1
0x72 PUSH1 0x20
0x74 MUL
0x75 PUSH1 0x20
0x77 ADD
0x78 PUSH1 0x40
0x7a MLOAD
0x7b SWAP1
0x7c DUP2
0x7d ADD
0x7e PUSH1 0x40
0x80 MSTORE
0x81 DUP1
0x82 SWAP4
0x83 SWAP3
0x84 SWAP2
0x85 SWAP1
0x86 DUP2
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b ADD
0x8c DUP4
0x8d DUP4
0x8e PUSH1 0x20
0x90 MUL
0x91 DUP1
0x92 DUP3
0x93 DUP5
0x94 CALLDATACOPY
0x95 DUP3
0x96 ADD
0x97 SWAP2
0x98 POP
0x99 POP
0x9a POP
0x9b POP
0x9c POP
0x9d POP
0x9e SWAP2
0x9f SWAP1
0xa0 POP
0xa1 POP
0xa2 PUSH2 0xfd
0xa5 JUMP
---
0x59: JUMPDEST 
0x5a: V22 = 0xa6
0x5d: V23 = 0x4
0x61: V24 = CALLDATALOAD 0x4
0x63: V25 = 0x20
0x65: V26 = ADD 0x20 0x4
0x68: V27 = ADD 0x4 V24
0x6a: V28 = CALLDATALOAD V27
0x6c: V29 = 0x20
0x6e: V30 = ADD 0x20 V27
0x72: V31 = 0x20
0x74: V32 = MUL 0x20 V28
0x75: V33 = 0x20
0x77: V34 = ADD 0x20 V32
0x78: V35 = 0x40
0x7a: V36 = M[0x40]
0x7d: V37 = ADD V36 V34
0x7e: V38 = 0x40
0x80: M[0x40] = V37
0x88: M[V36] = V28
0x89: V39 = 0x20
0x8b: V40 = ADD 0x20 V36
0x8e: V41 = 0x20
0x90: V42 = MUL 0x20 V28
0x94: CALLDATACOPY V40 V30 V42
0x96: V43 = ADD V40 V42
0xa2: V44 = 0xfd
0xa5: JUMP 0xfd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa6, V36]
Exit stack: [V11, 0xa6, V36]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: [0x252]
Successors: []
---
0xa6 JUMPDEST
0xa7 STOP
---
0xa6: JUMPDEST 
0xa7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xae]
---
Predecessors: [0x41]
Successors: [0xaf, 0xb3]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0xa8: JUMPDEST 
0xa9: V45 = CALLVALUE
0xaa: V46 = ISZERO V45
0xab: V47 = 0xb3
0xae: JUMPI 0xb3 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0xa8]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V48 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0xa8]
Successors: [0x256]
---
0xb3 JUMPDEST
0xb4 PUSH2 0xbb
0xb7 PUSH2 0x256
0xba JUMP
---
0xb3: JUMPDEST 
0xb4: V49 = 0xbb
0xb7: V50 = 0x256
0xba: JUMP 0x256
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbb]
Exit stack: [V11, 0xbb]

================================

Block 0xbb
[0xbb:0xfc]
---
Predecessors: [0x256]
Successors: []
---
0xbb JUMPDEST
0xbc PUSH1 0x40
0xbe MLOAD
0xbf DUP1
0xc0 DUP3
0xc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6 AND
0xd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec AND
0xed DUP2
0xee MSTORE
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP2
0xf3 POP
0xf4 POP
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 DUP1
0xf9 SWAP2
0xfa SUB
0xfb SWAP1
0xfc RETURN
---
0xbb: JUMPDEST 
0xbc: V51 = 0x40
0xbe: V52 = M[0x40]
0xc1: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0xd7: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xec: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xee: M[V52] = V56
0xef: V57 = 0x20
0xf1: V58 = ADD 0x20 V52
0xf5: V59 = 0x40
0xf7: V60 = M[0x40]
0xfa: V61 = SUB V58 V60
0xfc: RETURN V60 V61
---
Entry stack: [V11, 0xbb, V147]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbb]

================================

Block 0xfd
[0xfd:0x155]
---
Predecessors: [0x59]
Successors: [0x156, 0x15a]
---
0xfd JUMPDEST
0xfe PUSH1 0x0
0x100 DUP1
0x101 PUSH1 0x0
0x103 SWAP1
0x104 SLOAD
0x105 SWAP1
0x106 PUSH2 0x100
0x109 EXP
0x10a SWAP1
0x10b DIV
0x10c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121 AND
0x122 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x137 AND
0x138 CALLER
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f EQ
0x150 ISZERO
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0xfd: JUMPDEST 
0xfe: V62 = 0x0
0x101: V63 = 0x0
0x104: V64 = S[0x0]
0x106: V65 = 0x100
0x109: V66 = EXP 0x100 0x0
0x10b: V67 = DIV V64 0x1
0x10c: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x121: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x122: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x137: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x138: V72 = CALLER
0x139: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x14f: V75 = EQ V74 V71
0x150: V76 = ISZERO V75
0x151: V77 = ISZERO V76
0x152: V78 = 0x15a
0x155: JUMPI 0x15a V77
---
Entry stack: [V11, 0xa6, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa6, V36, 0x0]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0xfd]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V79 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa6, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V36, 0x0]

================================

Block 0x15a
[0x15a:0x15e]
---
Predecessors: [0xfd]
Successors: [0x15f]
---
0x15a JUMPDEST
0x15b PUSH1 0x0
0x15d SWAP1
0x15e POP
---
0x15a: JUMPDEST 
0x15b: V80 = 0x0
---
Entry stack: [V11, 0xa6, V36, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xa6, V36, 0x0]

================================

Block 0x15f
[0x15f:0x168]
---
Predecessors: [0x15a, 0x1d2]
Successors: [0x169, 0x252]
---
0x15f JUMPDEST
0x160 DUP2
0x161 MLOAD
0x162 DUP2
0x163 LT
0x164 ISZERO
0x165 PUSH2 0x252
0x168 JUMPI
---
0x15f: JUMPDEST 
0x161: V81 = M[V36]
0x163: V82 = LT S0 V81
0x164: V83 = ISZERO V82
0x165: V84 = 0x252
0x168: JUMPI 0x252 V83
---
Entry stack: [V11, 0xa6, V36, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa6, V36, S0]

================================

Block 0x169
[0x169:0x174]
---
Predecessors: [0x15f]
Successors: [0x175, 0x176]
---
0x169 DUP2
0x16a DUP2
0x16b DUP2
0x16c MLOAD
0x16d DUP2
0x16e LT
0x16f ISZERO
0x170 ISZERO
0x171 PUSH2 0x176
0x174 JUMPI
---
0x16c: V85 = M[V36]
0x16e: V86 = LT S0 V85
0x16f: V87 = ISZERO V86
0x170: V88 = ISZERO V87
0x171: V89 = 0x176
0x174: JUMPI 0x176 V88
---
Entry stack: [V11, 0xa6, V36, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V11, 0xa6, V36, S0, V36, S0]

================================

Block 0x175
[0x175:0x175]
---
Predecessors: [0x169]
Successors: []
---
0x175 INVALID
---
0x175: INVALID 
---
Entry stack: [V11, 0xa6, V36, S2, V36, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V36, S2, V36, S0]

================================

Block 0x176
[0x176:0x1bf]
---
Predecessors: [0x169]
Successors: [0x1c0, 0x1c4]
---
0x176 JUMPDEST
0x177 SWAP1
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP1
0x17c PUSH1 0x20
0x17e MUL
0x17f ADD
0x180 MLOAD
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH2 0x8fc
0x19a PUSH5 0x1cf977871
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 ISZERO
0x1a3 MUL
0x1a4 SWAP1
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 PUSH1 0x0
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad DUP1
0x1ae DUP4
0x1af SUB
0x1b0 DUP2
0x1b1 DUP6
0x1b2 DUP9
0x1b3 DUP9
0x1b4 CALL
0x1b5 SWAP4
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 POP
0x1ba ISZERO
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x176: JUMPDEST 
0x178: V90 = 0x20
0x17a: V91 = ADD 0x20 V36
0x17c: V92 = 0x20
0x17e: V93 = MUL 0x20 S0
0x17f: V94 = ADD V93 V91
0x180: V95 = M[V94]
0x181: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x197: V98 = 0x8fc
0x19a: V99 = 0x1cf977871
0x1a2: V100 = ISZERO 0x1cf977871
0x1a3: V101 = MUL 0x0 0x8fc
0x1a5: V102 = 0x40
0x1a7: V103 = M[0x40]
0x1a8: V104 = 0x0
0x1aa: V105 = 0x40
0x1ac: V106 = M[0x40]
0x1af: V107 = SUB V103 V106
0x1b4: V108 = CALL 0x0 V97 0x1cf977871 V106 V107 V106 0x0
0x1ba: V109 = ISZERO V108
0x1bb: V110 = ISZERO V109
0x1bc: V111 = 0x1c4
0x1bf: JUMPI 0x1c4 V110
---
Entry stack: [V11, 0xa6, V36, S2, V36, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa6, V36, S2]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x176]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V112 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa6, V36, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V36, S0]

================================

Block 0x1c4
[0x1c4:0x1d0]
---
Predecessors: [0x176]
Successors: [0x1d1, 0x1d2]
---
0x1c4 JUMPDEST
0x1c5 DUP2
0x1c6 DUP2
0x1c7 DUP2
0x1c8 MLOAD
0x1c9 DUP2
0x1ca LT
0x1cb ISZERO
0x1cc ISZERO
0x1cd PUSH2 0x1d2
0x1d0 JUMPI
---
0x1c4: JUMPDEST 
0x1c8: V113 = M[V36]
0x1ca: V114 = LT S0 V113
0x1cb: V115 = ISZERO V114
0x1cc: V116 = ISZERO V115
0x1cd: V117 = 0x1d2
0x1d0: JUMPI 0x1d2 V116
---
Entry stack: [V11, 0xa6, V36, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V11, 0xa6, V36, S0, V36, S0]

================================

Block 0x1d1
[0x1d1:0x1d1]
---
Predecessors: [0x1c4]
Successors: []
---
0x1d1 INVALID
---
0x1d1: INVALID 
---
Entry stack: [V11, 0xa6, V36, S2, V36, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V36, S2, V36, S0]

================================

Block 0x1d2
[0x1d2:0x251]
---
Predecessors: [0x1c4]
Successors: [0x15f]
---
0x1d2 JUMPDEST
0x1d3 SWAP1
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 PUSH1 0x20
0x1da MUL
0x1db ADD
0x1dc MLOAD
0x1dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f2 AND
0x1f3 ADDRESS
0x1f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x209 AND
0x20a PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x22b PUSH5 0x121beab471
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP1
0x235 DUP3
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b SWAP2
0x23c POP
0x23d POP
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 SWAP2
0x243 SUB
0x244 SWAP1
0x245 LOG3
0x246 DUP1
0x247 DUP1
0x248 PUSH1 0x1
0x24a ADD
0x24b SWAP2
0x24c POP
0x24d POP
0x24e PUSH2 0x15f
0x251 JUMP
---
0x1d2: JUMPDEST 
0x1d4: V118 = 0x20
0x1d6: V119 = ADD 0x20 V36
0x1d8: V120 = 0x20
0x1da: V121 = MUL 0x20 S0
0x1db: V122 = ADD V121 V119
0x1dc: V123 = M[V122]
0x1dd: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1f3: V126 = ADDRESS
0x1f4: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x209: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x20a: V129 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x22b: V130 = 0x121beab471
0x231: V131 = 0x40
0x233: V132 = M[0x40]
0x237: M[V132] = 0x121beab471
0x238: V133 = 0x20
0x23a: V134 = ADD 0x20 V132
0x23e: V135 = 0x40
0x240: V136 = M[0x40]
0x243: V137 = SUB V134 V136
0x245: LOG V136 V137 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V128 V125
0x248: V138 = 0x1
0x24a: V139 = ADD 0x1 S2
0x24e: V140 = 0x15f
0x251: JUMP 0x15f
---
Entry stack: [V11, 0xa6, V36, S2, V36, S0]
Stack pops: 3
Stack additions: [V139]
Exit stack: [V11, 0xa6, V36, V139]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x15f]
Successors: [0xa6]
---
0x252 JUMPDEST
0x253 POP
0x254 POP
0x255 JUMP
---
0x252: JUMPDEST 
0x255: JUMP 0xa6
---
Entry stack: [V11, 0xa6, V36, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x256
[0x256:0x27a]
---
Predecessors: [0xb3]
Successors: [0xbb]
---
0x256 JUMPDEST
0x257 PUSH1 0x0
0x259 DUP1
0x25a SWAP1
0x25b SLOAD
0x25c SWAP1
0x25d PUSH2 0x100
0x260 EXP
0x261 SWAP1
0x262 DIV
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 DUP2
0x27a JUMP
---
0x256: JUMPDEST 
0x257: V141 = 0x0
0x25b: V142 = S[0x0]
0x25d: V143 = 0x100
0x260: V144 = EXP 0x100 0x0
0x262: V145 = DIV V142 0x1
0x263: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x27a: JUMP 0xbb
---
Entry stack: [V11, 0xbb]
Stack pops: 1
Stack additions: [S0, V147]
Exit stack: [V11, 0xbb, V147]

================================

Block 0x27b
[0x27b:0x2a6]
---
Predecessors: []
Successors: []
---
0x27b STOP
0x27c LOG1
0x27d PUSH6 0x627a7a723058
0x284 SHA3
0x285 MISSING 0x26
0x286 MISSING 0xd7
0x287 SWAP12
0x288 DUP1
0x289 DUP14
0x28a SAR
0x28b DUP13
0x28c SWAP1
0x28d MISSING 0xb4
0x28e DUP11
0x28f BYTE
0x290 MISSING 0xb1
0x291 SHL
0x292 MISSING 0xd1
0x293 MISSING 0x25
0x294 MISSING 0xc6
0x295 PUSH17 0xafff57fdfc22832dd0d0a0bc63cb270029
---
0x27b: STOP 
0x27c: LOG S0 S1 S2
0x27d: V148 = 0x627a7a723058
0x284: V149 = SHA3 0x627a7a723058 S3
0x285: MISSING 0x26
0x286: MISSING 0xd7
0x28a: V150 = SAR S0 S12
0x28d: MISSING 0xb4
0x28f: V151 = BYTE S10 S0
0x290: MISSING 0xb1
0x291: V152 = SHL S0 S1
0x292: MISSING 0xd1
0x293: MISSING 0x25
0x294: MISSING 0xc6
0x295: V153 = 0xafff57fdfc22832dd0d0a0bc63cb270029
---
Entry stack: []
Stack pops: 0
Stack additions: [V149, V150, S11, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V151, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V152, 0xafff57fdfc22832dd0d0a0bc63cb270029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3971ee42
Entry block: 0x4e
Exit block: 0x1d1
Body: 0x4e, 0x55, 0x59, 0xa6, 0xfd, 0x156, 0x15a, 0x15f, 0x169, 0x175, 0x176, 0x1c0, 0x1c4, 0x1d1, 0x1d2, 0x252

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xa8
Exit block: 0xbb
Body: 0xa8, 0xaf, 0xb3, 0xbb, 0x256

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

