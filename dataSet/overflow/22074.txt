Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xb1]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3fe43822
0x3c EQ
0x3d PUSH2 0xb1
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3fe43822
0x3c: V13 = EQ 0x3fe43822 V11
0x3d: V14 = 0xb1
0x40: JUMPI 0xb1 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc9]
---
0x41 DUP1
0x42 PUSH4 0x50e72f61
0x47 EQ
0x48 PUSH2 0xc9
0x4b JUMPI
---
0x42: V15 = 0x50e72f61
0x47: V16 = EQ 0x50e72f61 V11
0x48: V17 = 0xc9
0x4b: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd3]
---
0x4c DUP1
0x4d PUSH4 0x72fbc155
0x52 EQ
0x53 PUSH2 0xd3
0x56 JUMPI
---
0x4d: V18 = 0x72fbc155
0x52: V19 = EQ 0x72fbc155 V11
0x53: V20 = 0xd3
0x56: JUMPI 0xd3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x120]
---
0x57 DUP1
0x58 PUSH4 0xc2808d1a
0x5d EQ
0x5e PUSH2 0x120
0x61 JUMPI
---
0x58: V21 = 0xc2808d1a
0x5d: V22 = EQ 0xc2808d1a V11
0x5e: V23 = 0x120
0x61: JUMPI 0x120 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0xb0]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 CALLVALUE
0x64 PUSH1 0x1
0x66 PUSH1 0x0
0x68 CALLER
0x69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e AND
0x7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94 AND
0x95 DUP2
0x96 MSTORE
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b DUP2
0x9c MSTORE
0x9d PUSH1 0x20
0x9f ADD
0xa0 PUSH1 0x0
0xa2 SHA3
0xa3 PUSH1 0x0
0xa5 DUP3
0xa6 DUP3
0xa7 SLOAD
0xa8 ADD
0xa9 SWAP3
0xaa POP
0xab POP
0xac DUP2
0xad SWAP1
0xae SSTORE
0xaf POP
0xb0 STOP
---
0x62: JUMPDEST 
0x63: V24 = CALLVALUE
0x64: V25 = 0x1
0x66: V26 = 0x0
0x68: V27 = CALLER
0x69: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x7f: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x94: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x96: M[0x0] = V31
0x97: V32 = 0x20
0x99: V33 = ADD 0x20 0x0
0x9c: M[0x20] = 0x1
0x9d: V34 = 0x20
0x9f: V35 = ADD 0x20 0x20
0xa0: V36 = 0x0
0xa2: V37 = SHA3 0x0 0x40
0xa3: V38 = 0x0
0xa7: V39 = S[V37]
0xa8: V40 = ADD V39 V24
0xae: S[V37] = V40
0xb0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xc6]
---
Predecessors: [0xd]
Successors: [0x149]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xc7
0xb5 PUSH1 0x4
0xb7 DUP1
0xb8 DUP1
0xb9 CALLDATALOAD
0xba SWAP1
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf SWAP2
0xc0 SWAP1
0xc1 POP
0xc2 POP
0xc3 PUSH2 0x149
0xc6 JUMP
---
0xb1: JUMPDEST 
0xb2: V41 = 0xc7
0xb5: V42 = 0x4
0xb9: V43 = CALLDATALOAD 0x4
0xbb: V44 = 0x20
0xbd: V45 = ADD 0x20 0x4
0xc3: V46 = 0x149
0xc6: JUMP 0x149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7, V43]
Exit stack: [V11, 0xc7, V43]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: [0x22c]
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x41]
Successors: [0x22f]
---
0xc9 JUMPDEST
0xca PUSH2 0xd1
0xcd PUSH2 0x22f
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V47 = 0xd1
0xcd: V48 = 0x22f
0xd0: JUMP 0x22f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V11, 0xd1]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: [0x2c2]
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0x4c]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V49 = CALLVALUE
0xd5: V50 = ISZERO V49
0xd6: V51 = 0xde
0xd9: JUMPI 0xde V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V52 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0x109]
---
Predecessors: [0xd3]
Successors: [0x2c4]
---
0xde JUMPDEST
0xdf PUSH2 0x10a
0xe2 PUSH1 0x4
0xe4 DUP1
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd SWAP1
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 SWAP2
0x103 SWAP1
0x104 POP
0x105 POP
0x106 PUSH2 0x2c4
0x109 JUMP
---
0xde: JUMPDEST 
0xdf: V53 = 0x10a
0xe2: V54 = 0x4
0xe6: V55 = CALLDATALOAD 0x4
0xe7: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xfe: V58 = 0x20
0x100: V59 = ADD 0x20 0x4
0x106: V60 = 0x2c4
0x109: JUMP 0x2c4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10a, V57]
Exit stack: [V11, 0x10a, V57]

================================

Block 0x10a
[0x10a:0x11f]
---
Predecessors: [0x2c4]
Successors: []
---
0x10a JUMPDEST
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f DUP3
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP2
0x116 POP
0x117 POP
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x10a: JUMPDEST 
0x10b: V61 = 0x40
0x10d: V62 = M[0x40]
0x111: M[V62] = V170
0x112: V63 = 0x20
0x114: V64 = ADD 0x20 V62
0x118: V65 = 0x40
0x11a: V66 = M[0x40]
0x11d: V67 = SUB V64 V66
0x11f: RETURN V66 V67
---
Entry stack: [V11, 0x10a, V170]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x10a]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x57]
Successors: [0x127, 0x12b]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V68 = CALLVALUE
0x122: V69 = ISZERO V68
0x123: V70 = 0x12b
0x126: JUMPI 0x12b V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x120]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V71 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12b
[0x12b:0x132]
---
Predecessors: [0x120]
Successors: [0x2dc]
---
0x12b JUMPDEST
0x12c PUSH2 0x133
0x12f PUSH2 0x2dc
0x132 JUMP
---
0x12b: JUMPDEST 
0x12c: V72 = 0x133
0x12f: V73 = 0x2dc
0x132: JUMP 0x2dc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x133]
Exit stack: [V11, 0x133]

================================

Block 0x133
[0x133:0x148]
---
Predecessors: [0x2dc]
Successors: []
---
0x133 JUMPDEST
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 DUP3
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP2
0x13f POP
0x140 POP
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 RETURN
---
0x133: JUMPDEST 
0x134: V74 = 0x40
0x136: V75 = M[0x40]
0x13a: M[V75] = V172
0x13b: V76 = 0x20
0x13d: V77 = ADD 0x20 V75
0x141: V78 = 0x40
0x143: V79 = M[0x40]
0x146: V80 = SUB V77 V79
0x148: RETURN V79 V80
---
Entry stack: [V11, 0x133, V172]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x133]

================================

Block 0x149
[0x149:0x194]
---
Predecessors: [0xb1]
Successors: [0x195, 0x1d9]
---
0x149 JUMPDEST
0x14a PUSH1 0x2
0x14c SLOAD
0x14d PUSH1 0x1
0x14f PUSH1 0x0
0x151 CALLER
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP1
0x184 DUP2
0x185 MSTORE
0x186 PUSH1 0x20
0x188 ADD
0x189 PUSH1 0x0
0x18b SHA3
0x18c SLOAD
0x18d LT
0x18e ISZERO
0x18f DUP1
0x190 ISZERO
0x191 PUSH2 0x1d9
0x194 JUMPI
---
0x149: JUMPDEST 
0x14a: V81 = 0x2
0x14c: V82 = S[0x2]
0x14d: V83 = 0x1
0x14f: V84 = 0x0
0x151: V85 = CALLER
0x152: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x168: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x17f: M[0x0] = V89
0x180: V90 = 0x20
0x182: V91 = ADD 0x20 0x0
0x185: M[0x20] = 0x1
0x186: V92 = 0x20
0x188: V93 = ADD 0x20 0x20
0x189: V94 = 0x0
0x18b: V95 = SHA3 0x0 0x40
0x18c: V96 = S[V95]
0x18d: V97 = LT V96 V82
0x18e: V98 = ISZERO V97
0x190: V99 = ISZERO V98
0x191: V100 = 0x1d9
0x194: JUMPI 0x1d9 V99
---
Entry stack: [V11, 0xc7, V43]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V11, 0xc7, V43, V98]

================================

Block 0x195
[0x195:0x1d8]
---
Predecessors: [0x149]
Successors: [0x1d9]
---
0x195 POP
0x196 PUSH1 0x1
0x198 PUSH1 0x0
0x19a CALLER
0x19b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b0 AND
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 PUSH1 0x0
0x1d4 SHA3
0x1d5 SLOAD
0x1d6 DUP2
0x1d7 GT
0x1d8 ISZERO
---
0x196: V101 = 0x1
0x198: V102 = 0x0
0x19a: V103 = CALLER
0x19b: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1b1: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1c8: M[0x0] = V107
0x1c9: V108 = 0x20
0x1cb: V109 = ADD 0x20 0x0
0x1ce: M[0x20] = 0x1
0x1cf: V110 = 0x20
0x1d1: V111 = ADD 0x20 0x20
0x1d2: V112 = 0x0
0x1d4: V113 = SHA3 0x0 0x40
0x1d5: V114 = S[V113]
0x1d7: V115 = GT V43 V114
0x1d8: V116 = ISZERO V115
---
Entry stack: [V11, 0xc7, V43, V98]
Stack pops: 2
Stack additions: [S1, V116]
Exit stack: [V11, 0xc7, V43, V116]

================================

Block 0x1d9
[0x1d9:0x1de]
---
Predecessors: [0x149, 0x195]
Successors: [0x1df, 0x22c]
---
0x1d9 JUMPDEST
0x1da ISZERO
0x1db PUSH2 0x22c
0x1de JUMPI
---
0x1d9: JUMPDEST 
0x1da: V117 = ISZERO S0
0x1db: V118 = 0x22c
0x1de: JUMPI 0x22c V117
---
Entry stack: [V11, 0xc7, V43, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc7, V43]

================================

Block 0x1df
[0x1df:0x22b]
---
Predecessors: [0x1d9]
Successors: [0x22c]
---
0x1df DUP1
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0x0
0x1e4 CALLER
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 AND
0x211 DUP2
0x212 MSTORE
0x213 PUSH1 0x20
0x215 ADD
0x216 SWAP1
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c PUSH1 0x0
0x21e SHA3
0x21f PUSH1 0x0
0x221 DUP3
0x222 DUP3
0x223 SLOAD
0x224 SUB
0x225 SWAP3
0x226 POP
0x227 POP
0x228 DUP2
0x229 SWAP1
0x22a SSTORE
0x22b POP
---
0x1e0: V119 = 0x1
0x1e2: V120 = 0x0
0x1e4: V121 = CALLER
0x1e5: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1fb: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x210: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x212: M[0x0] = V125
0x213: V126 = 0x20
0x215: V127 = ADD 0x20 0x0
0x218: M[0x20] = 0x1
0x219: V128 = 0x20
0x21b: V129 = ADD 0x20 0x20
0x21c: V130 = 0x0
0x21e: V131 = SHA3 0x0 0x40
0x21f: V132 = 0x0
0x223: V133 = S[V131]
0x224: V134 = SUB V133 V43
0x22a: S[V131] = V134
---
Entry stack: [V11, 0xc7, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc7, V43]

================================

Block 0x22c
[0x22c:0x22e]
---
Predecessors: [0x1d9, 0x1df]
Successors: [0xc7]
---
0x22c JUMPDEST
0x22d POP
0x22e JUMP
---
0x22c: JUMPDEST 
0x22e: JUMP 0xc7
---
Entry stack: [V11, 0xc7, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x22f
[0x22f:0x285]
---
Predecessors: [0xc9]
Successors: [0x286, 0x2a4]
---
0x22f JUMPDEST
0x230 PUSH1 0x0
0x232 DUP1
0x233 SWAP1
0x234 SLOAD
0x235 SWAP1
0x236 PUSH2 0x100
0x239 EXP
0x23a SWAP1
0x23b DIV
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 AND
0x268 CALLER
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e AND
0x27f EQ
0x280 DUP1
0x281 ISZERO
0x282 PUSH2 0x2a4
0x285 JUMPI
---
0x22f: JUMPDEST 
0x230: V135 = 0x0
0x234: V136 = S[0x0]
0x236: V137 = 0x100
0x239: V138 = EXP 0x100 0x0
0x23b: V139 = DIV V136 0x1
0x23c: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x252: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x268: V144 = CALLER
0x269: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x27f: V147 = EQ V146 V143
0x281: V148 = ISZERO V147
0x282: V149 = 0x2a4
0x285: JUMPI 0x2a4 V148
---
Entry stack: [V11, 0xd1]
Stack pops: 0
Stack additions: [V147]
Exit stack: [V11, 0xd1, V147]

================================

Block 0x286
[0x286:0x2a3]
---
Predecessors: [0x22f]
Successors: [0x2a4]
---
0x286 POP
0x287 PUSH1 0x2
0x289 SLOAD
0x28a ADDRESS
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 BALANCE
0x2a2 LT
0x2a3 ISZERO
---
0x287: V150 = 0x2
0x289: V151 = S[0x2]
0x28a: V152 = ADDRESS
0x28b: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2a1: V155 = BALANCE V154
0x2a2: V156 = LT V155 V151
0x2a3: V157 = ISZERO V156
---
Entry stack: [V11, 0xd1, V147]
Stack pops: 1
Stack additions: [V157]
Exit stack: [V11, 0xd1, V157]

================================

Block 0x2a4
[0x2a4:0x2a9]
---
Predecessors: [0x22f, 0x286]
Successors: [0x2aa, 0x2c2]
---
0x2a4 JUMPDEST
0x2a5 ISZERO
0x2a6 PUSH2 0x2c2
0x2a9 JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V158 = ISZERO S0
0x2a6: V159 = 0x2c2
0x2a9: JUMPI 0x2c2 V158
---
Entry stack: [V11, 0xd1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd1]

================================

Block 0x2aa
[0x2aa:0x2c1]
---
Predecessors: [0x2a4]
Successors: []
---
0x2aa CALLER
0x2ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c0 AND
0x2c1 SELFDESTRUCT
---
0x2aa: V160 = CALLER
0x2ab: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c0: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x2c1: SELFDESTRUCT V162
---
Entry stack: [V11, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1]

================================

Block 0x2c2
[0x2c2:0x2c3]
---
Predecessors: [0x2a4]
Successors: [0xd1]
---
0x2c2 JUMPDEST
0x2c3 JUMP
---
0x2c2: JUMPDEST 
0x2c3: JUMP 0xd1
---
Entry stack: [V11, 0xd1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c4
[0x2c4:0x2db]
---
Predecessors: [0xde]
Successors: [0x10a]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0x20
0x2c9 MSTORE
0x2ca DUP1
0x2cb PUSH1 0x0
0x2cd MSTORE
0x2ce PUSH1 0x40
0x2d0 PUSH1 0x0
0x2d2 SHA3
0x2d3 PUSH1 0x0
0x2d5 SWAP2
0x2d6 POP
0x2d7 SWAP1
0x2d8 POP
0x2d9 SLOAD
0x2da DUP2
0x2db JUMP
---
0x2c4: JUMPDEST 
0x2c5: V163 = 0x1
0x2c7: V164 = 0x20
0x2c9: M[0x20] = 0x1
0x2cb: V165 = 0x0
0x2cd: M[0x0] = V57
0x2ce: V166 = 0x40
0x2d0: V167 = 0x0
0x2d2: V168 = SHA3 0x0 0x40
0x2d3: V169 = 0x0
0x2d9: V170 = S[V168]
0x2db: JUMP 0x10a
---
Entry stack: [V11, 0x10a, V57]
Stack pops: 2
Stack additions: [S1, V170]
Exit stack: [V11, 0x10a, V170]

================================

Block 0x2dc
[0x2dc:0x2e1]
---
Predecessors: [0x12b]
Successors: [0x133]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x2
0x2df SLOAD
0x2e0 DUP2
0x2e1 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V171 = 0x2
0x2df: V172 = S[0x2]
0x2e1: JUMP 0x133
---
Entry stack: [V11, 0x133]
Stack pops: 1
Stack additions: [S0, V172]
Exit stack: [V11, 0x133, V172]

================================

Block 0x2e2
[0x2e2:0x30d]
---
Predecessors: []
Successors: []
---
0x2e2 STOP
0x2e3 LOG1
0x2e4 PUSH6 0x627a7a723058
0x2eb SHA3
0x2ec MISSING 0xa9
0x2ed DUP3
0x2ee MISSING 0xd2
0x2ef MISSING 0xed
0x2f0 MISSING 0xf7
0x2f1 PUSH9 0x96bb9d0573223693a6
0x2fb CODECOPY
0x2fc MISSING 0xaa
0x2fd MISSING 0xc2
0x2fe DUP7
0x2ff GAS
0x300 SWAP7
0x301 MISSING 0xc3
0x302 DIFFICULTY
0x303 PUSH2 0x9c47
0x306 CALLDATASIZE
0x307 GAS
0x308 DUP11
0x309 LOG4
0x30a MISSING 0xc6
0x30b DUP16
0x30c STOP
0x30d MISSING 0x29
---
0x2e2: STOP 
0x2e3: LOG S0 S1 S2
0x2e4: V173 = 0x627a7a723058
0x2eb: V174 = SHA3 0x627a7a723058 S3
0x2ec: MISSING 0xa9
0x2ee: MISSING 0xd2
0x2ef: MISSING 0xed
0x2f0: MISSING 0xf7
0x2f1: V175 = 0x96bb9d0573223693a6
0x2fb: CODECOPY 0x96bb9d0573223693a6 S0 S1
0x2fc: MISSING 0xaa
0x2fd: MISSING 0xc2
0x2ff: V176 = GAS
0x301: MISSING 0xc3
0x302: V177 = DIFFICULTY
0x303: V178 = 0x9c47
0x306: V179 = CALLDATASIZE
0x307: V180 = GAS
0x309: LOG S6 V180 V179 0x9c47 V177 S0
0x30a: MISSING 0xc6
0x30c: STOP 
0x30d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V174, S2, S0, S1, S2, S5, S6, S0, S1, S2, S3, S4, V176, S6, S1, S2, S3, S4, S5, S6, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15]
Exit stack: []

================================

Function 0:
Public function signature: 0x3fe43822
Entry block: 0xb1
Exit block: 0xc7
Body: 0xb1, 0xc7, 0x149, 0x195, 0x1d9, 0x1df, 0x22c

Function 1:
Public function signature: 0x50e72f61
Entry block: 0xc9
Exit block: 0xd1
Body: 0xc9, 0xd1, 0x22f, 0x286, 0x2a4, 0x2aa, 0x2c2

Function 2:
Public function signature: 0x72fbc155
Entry block: 0xd3
Exit block: 0x10a
Body: 0xd3, 0xda, 0xde, 0x10a, 0x2c4

Function 3:
Public function signature: 0xc2808d1a
Entry block: 0x120
Exit block: 0x133
Body: 0x120, 0x127, 0x12b, 0x133, 0x2dc

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

