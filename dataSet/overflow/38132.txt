Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x9c]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x9c
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x9c
0x3e: JUMPI 0x9c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x12b]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x12b
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x12b
0x49: JUMPI 0x12b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x185]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x185
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x185
0x54: JUMPI 0x185 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1ae]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1ae
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1ae
0x5f: JUMPI 0x1ae V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x227]
---
0x60 DUP1
0x61 PUSH4 0x313ce567
0x66 EQ
0x67 PUSH2 0x227
0x6a JUMPI
---
0x61: V23 = 0x313ce567
0x66: V24 = EQ 0x313ce567 V10
0x67: V25 = 0x227
0x6a: JUMPI 0x227 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x256]
---
0x6b DUP1
0x6c PUSH4 0x70a08231
0x71 EQ
0x72 PUSH2 0x256
0x75 JUMPI
---
0x6c: V26 = 0x70a08231
0x71: V27 = EQ 0x70a08231 V10
0x72: V28 = 0x256
0x75: JUMPI 0x256 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2a3]
---
0x76 DUP1
0x77 PUSH4 0x95d89b41
0x7c EQ
0x7d PUSH2 0x2a3
0x80 JUMPI
---
0x77: V29 = 0x95d89b41
0x7c: V30 = EQ 0x95d89b41 V10
0x7d: V31 = 0x2a3
0x80: JUMPI 0x2a3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x332]
---
0x81 DUP1
0x82 PUSH4 0xa9059cbb
0x87 EQ
0x88 PUSH2 0x332
0x8b JUMPI
---
0x82: V32 = 0xa9059cbb
0x87: V33 = EQ 0xa9059cbb V10
0x88: V34 = 0x332
0x8b: JUMPI 0x332 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x38c]
---
0x8c DUP1
0x8d PUSH4 0xdd62ed3e
0x92 EQ
0x93 PUSH2 0x38c
0x96 JUMPI
---
0x8d: V35 = 0xdd62ed3e
0x92: V36 = EQ 0xdd62ed3e V10
0x93: V37 = 0x38c
0x96: JUMPI 0x38c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9b]
---
Predecessors: [0x0, 0x8c]
Successors: []
---
0x97 JUMPDEST
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x97: JUMPDEST 
0x98: V38 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0xb]
Successors: [0xa3, 0xa7]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V39 = CALLVALUE
0x9e: V40 = ISZERO V39
0x9f: V41 = 0xa7
0xa2: JUMPI 0xa7 V40
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V42 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x9c]
Successors: [0x3f8]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xaf
0xab PUSH2 0x3f8
0xae JUMP
---
0xa7: JUMPDEST 
0xa8: V43 = 0xaf
0xab: V44 = 0x3f8
0xae: JUMP 0x3f8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V10, 0xaf]

================================

Block 0xaf
[0xaf:0xd3]
---
Predecessors: [0x3f8]
Successors: [0xd4]
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 DUP1
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 DUP3
0xb9 DUP2
0xba SUB
0xbb DUP3
0xbc MSTORE
0xbd DUP4
0xbe DUP2
0xbf DUP2
0xc0 MLOAD
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 DUP1
0xc9 MLOAD
0xca SWAP1
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf DUP1
0xd0 DUP4
0xd1 DUP4
0xd2 PUSH1 0x0
---
0xaf: JUMPDEST 
0xb0: V45 = 0x40
0xb2: V46 = M[0x40]
0xb5: V47 = 0x20
0xb7: V48 = ADD 0x20 V46
0xba: V49 = SUB V48 V46
0xbc: M[V46] = V49
0xc0: V50 = M[V290]
0xc2: M[V48] = V50
0xc3: V51 = 0x20
0xc5: V52 = ADD 0x20 V48
0xc9: V53 = M[V290]
0xcb: V54 = 0x20
0xcd: V55 = ADD 0x20 V290
0xd2: V56 = 0x0
---
Entry stack: [V10, 0xaf, V290]
Stack pops: 1
Stack additions: [S0, V46, V46, V52, V55, V53, V53, V52, V55, 0x0]
Exit stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, 0x0]

================================

Block 0xd4
[0xd4:0xdc]
---
Predecessors: [0xaf, 0xe5]
Successors: [0xdd, 0xf0]
---
0xd4 JUMPDEST
0xd5 DUP4
0xd6 DUP2
0xd7 LT
0xd8 ISZERO
0xd9 PUSH2 0xf0
0xdc JUMPI
---
0xd4: JUMPDEST 
0xd7: V57 = LT S0 V53
0xd8: V58 = ISZERO V57
0xd9: V59 = 0xf0
0xdc: JUMPI 0xf0 V58
---
Entry stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, S0]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd4]
Successors: [0xe5]
---
0xdd DUP1
0xde DUP3
0xdf ADD
0xe0 MLOAD
0xe1 DUP2
0xe2 DUP5
0xe3 ADD
0xe4 MSTORE
---
0xdf: V60 = ADD V55 S0
0xe0: V61 = M[V60]
0xe3: V62 = ADD V52 S0
0xe4: M[V62] = V61
---
Entry stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, S0]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xdd]
Successors: [0xd4]
---
0xe5 JUMPDEST
0xe6 PUSH1 0x20
0xe8 DUP2
0xe9 ADD
0xea SWAP1
0xeb POP
0xec PUSH2 0xd4
0xef JUMP
---
0xe5: JUMPDEST 
0xe6: V63 = 0x20
0xe9: V64 = ADD S0 0x20
0xec: V65 = 0xd4
0xef: JUMP 0xd4
---
Entry stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 1
Stack additions: [V64]
Exit stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, V64]

================================

Block 0xf0
[0xf0:0x103]
---
Predecessors: [0xd4]
Successors: [0x104, 0x11d]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 SWAP1
0xf6 POP
0xf7 SWAP1
0xf8 DUP2
0xf9 ADD
0xfa SWAP1
0xfb PUSH1 0x1f
0xfd AND
0xfe DUP1
0xff ISZERO
0x100 PUSH2 0x11d
0x103 JUMPI
---
0xf0: JUMPDEST 
0xf9: V66 = ADD V53 V52
0xfb: V67 = 0x1f
0xfd: V68 = AND 0x1f V53
0xff: V69 = ISZERO V68
0x100: V70 = 0x11d
0x103: JUMPI 0x11d V69
---
Entry stack: [V10, 0xaf, V290, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 7
Stack additions: [V66, V68]
Exit stack: [V10, 0xaf, V290, V46, V46, V66, V68]

================================

Block 0x104
[0x104:0x11c]
---
Predecessors: [0xf0]
Successors: [0x11d]
---
0x104 DUP1
0x105 DUP3
0x106 SUB
0x107 DUP1
0x108 MLOAD
0x109 PUSH1 0x1
0x10b DUP4
0x10c PUSH1 0x20
0x10e SUB
0x10f PUSH2 0x100
0x112 EXP
0x113 SUB
0x114 NOT
0x115 AND
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
---
0x106: V71 = SUB V66 V68
0x108: V72 = M[V71]
0x109: V73 = 0x1
0x10c: V74 = 0x20
0x10e: V75 = SUB 0x20 V68
0x10f: V76 = 0x100
0x112: V77 = EXP 0x100 V75
0x113: V78 = SUB V77 0x1
0x114: V79 = NOT V78
0x115: V80 = AND V79 V72
0x117: M[V71] = V80
0x118: V81 = 0x20
0x11a: V82 = ADD 0x20 V71
---
Entry stack: [V10, 0xaf, V290, V46, V46, V66, V68]
Stack pops: 2
Stack additions: [V82, S0]
Exit stack: [V10, 0xaf, V290, V46, V46, V82, V68]

================================

Block 0x11d
[0x11d:0x12a]
---
Predecessors: [0xf0, 0x104]
Successors: []
---
0x11d JUMPDEST
0x11e POP
0x11f SWAP3
0x120 POP
0x121 POP
0x122 POP
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 SWAP2
0x128 SUB
0x129 SWAP1
0x12a RETURN
---
0x11d: JUMPDEST 
0x123: V83 = 0x40
0x125: V84 = M[0x40]
0x128: V85 = SUB S1 V84
0x12a: RETURN V84 V85
---
Entry stack: [V10, 0xaf, V290, V46, V46, S1, V68]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xaf]

================================

Block 0x12b
[0x12b:0x131]
---
Predecessors: [0x3f]
Successors: [0x132, 0x136]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x12b: JUMPDEST 
0x12c: V86 = CALLVALUE
0x12d: V87 = ISZERO V86
0x12e: V88 = 0x136
0x131: JUMPI 0x136 V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x12b]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V89 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x136
[0x136:0x16a]
---
Predecessors: [0x12b]
Successors: [0x431]
---
0x136 JUMPDEST
0x137 PUSH2 0x16b
0x13a PUSH1 0x4
0x13c DUP1
0x13d DUP1
0x13e CALLDATALOAD
0x13f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x154 AND
0x155 SWAP1
0x156 PUSH1 0x20
0x158 ADD
0x159 SWAP1
0x15a SWAP2
0x15b SWAP1
0x15c DUP1
0x15d CALLDATALOAD
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP2
0x164 SWAP1
0x165 POP
0x166 POP
0x167 PUSH2 0x431
0x16a JUMP
---
0x136: JUMPDEST 
0x137: V90 = 0x16b
0x13a: V91 = 0x4
0x13e: V92 = CALLDATALOAD 0x4
0x13f: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x154: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x156: V95 = 0x20
0x158: V96 = ADD 0x20 0x4
0x15d: V97 = CALLDATALOAD 0x24
0x15f: V98 = 0x20
0x161: V99 = ADD 0x20 0x24
0x167: V100 = 0x431
0x16a: JUMP 0x431
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16b, V94, V97]
Exit stack: [V10, 0x16b, V94, V97]

================================

Block 0x16b
[0x16b:0x184]
---
Predecessors: [0x5b3]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 DUP3
0x171 ISZERO
0x172 ISZERO
0x173 ISZERO
0x174 ISZERO
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b POP
0x17c POP
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 SWAP2
0x182 SUB
0x183 SWAP1
0x184 RETURN
---
0x16b: JUMPDEST 
0x16c: V101 = 0x40
0x16e: V102 = M[0x40]
0x171: V103 = ISZERO 0x1
0x172: V104 = ISZERO 0x0
0x173: V105 = ISZERO 0x1
0x174: V106 = ISZERO 0x0
0x176: M[V102] = 0x1
0x177: V107 = 0x20
0x179: V108 = ADD 0x20 V102
0x17d: V109 = 0x40
0x17f: V110 = M[0x40]
0x182: V111 = SUB V108 V110
0x184: RETURN V110 V111
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x185
[0x185:0x18b]
---
Predecessors: [0x4a]
Successors: [0x18c, 0x190]
---
0x185 JUMPDEST
0x186 CALLVALUE
0x187 ISZERO
0x188 PUSH2 0x190
0x18b JUMPI
---
0x185: JUMPDEST 
0x186: V112 = CALLVALUE
0x187: V113 = ISZERO V112
0x188: V114 = 0x190
0x18b: JUMPI 0x190 V113
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18c
[0x18c:0x18f]
---
Predecessors: [0x185]
Successors: []
---
0x18c PUSH1 0x0
0x18e DUP1
0x18f REVERT
---
0x18c: V115 = 0x0
0x18f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x190
[0x190:0x197]
---
Predecessors: [0x185]
Successors: [0x5b9]
---
0x190 JUMPDEST
0x191 PUSH2 0x198
0x194 PUSH2 0x5b9
0x197 JUMP
---
0x190: JUMPDEST 
0x191: V116 = 0x198
0x194: V117 = 0x5b9
0x197: JUMP 0x5b9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x198]
Exit stack: [V10, 0x198]

================================

Block 0x198
[0x198:0x1ad]
---
Predecessors: [0x5b9]
Successors: []
---
0x198 JUMPDEST
0x199 PUSH1 0x40
0x19b MLOAD
0x19c DUP1
0x19d DUP3
0x19e DUP2
0x19f MSTORE
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP2
0x1a4 POP
0x1a5 POP
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa SWAP2
0x1ab SUB
0x1ac SWAP1
0x1ad RETURN
---
0x198: JUMPDEST 
0x199: V118 = 0x40
0x19b: V119 = M[0x40]
0x19f: M[V119] = V370
0x1a0: V120 = 0x20
0x1a2: V121 = ADD 0x20 V119
0x1a6: V122 = 0x40
0x1a8: V123 = M[0x40]
0x1ab: V124 = SUB V121 V123
0x1ad: RETURN V123 V124
---
Entry stack: [V10, 0x198, V370]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x198]

================================

Block 0x1ae
[0x1ae:0x1b4]
---
Predecessors: [0x55]
Successors: [0x1b5, 0x1b9]
---
0x1ae JUMPDEST
0x1af CALLVALUE
0x1b0 ISZERO
0x1b1 PUSH2 0x1b9
0x1b4 JUMPI
---
0x1ae: JUMPDEST 
0x1af: V125 = CALLVALUE
0x1b0: V126 = ISZERO V125
0x1b1: V127 = 0x1b9
0x1b4: JUMPI 0x1b9 V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x1ae]
Successors: []
---
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 REVERT
---
0x1b5: V128 = 0x0
0x1b8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b9
[0x1b9:0x20c]
---
Predecessors: [0x1ae]
Successors: [0x5bf]
---
0x1b9 JUMPDEST
0x1ba PUSH2 0x20d
0x1bd PUSH1 0x4
0x1bf DUP1
0x1c0 DUP1
0x1c1 CALLDATALOAD
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 SWAP1
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc SWAP1
0x1dd SWAP2
0x1de SWAP1
0x1df DUP1
0x1e0 CALLDATALOAD
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 SWAP1
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb SWAP1
0x1fc SWAP2
0x1fd SWAP1
0x1fe DUP1
0x1ff CALLDATALOAD
0x200 SWAP1
0x201 PUSH1 0x20
0x203 ADD
0x204 SWAP1
0x205 SWAP2
0x206 SWAP1
0x207 POP
0x208 POP
0x209 PUSH2 0x5bf
0x20c JUMP
---
0x1b9: JUMPDEST 
0x1ba: V129 = 0x20d
0x1bd: V130 = 0x4
0x1c1: V131 = CALLDATALOAD 0x4
0x1c2: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x1d9: V134 = 0x20
0x1db: V135 = ADD 0x20 0x4
0x1e0: V136 = CALLDATALOAD 0x24
0x1e1: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x1f8: V139 = 0x20
0x1fa: V140 = ADD 0x20 0x24
0x1ff: V141 = CALLDATALOAD 0x44
0x201: V142 = 0x20
0x203: V143 = ADD 0x20 0x44
0x209: V144 = 0x5bf
0x20c: JUMP 0x5bf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20d, V133, V138, V141]
Exit stack: [V10, 0x20d, V133, V138, V141]

================================

Block 0x20d
[0x20d:0x226]
---
Predecessors: [0x8c4]
Successors: []
---
0x20d JUMPDEST
0x20e PUSH1 0x40
0x210 MLOAD
0x211 DUP1
0x212 DUP3
0x213 ISZERO
0x214 ISZERO
0x215 ISZERO
0x216 ISZERO
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP2
0x21d POP
0x21e POP
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 SWAP2
0x224 SUB
0x225 SWAP1
0x226 RETURN
---
0x20d: JUMPDEST 
0x20e: V145 = 0x40
0x210: V146 = M[0x40]
0x213: V147 = ISZERO {0x0, 0x1}
0x214: V148 = ISZERO V147
0x215: V149 = ISZERO V148
0x216: V150 = ISZERO V149
0x218: M[V146] = V150
0x219: V151 = 0x20
0x21b: V152 = ADD 0x20 V146
0x21f: V153 = 0x40
0x221: V154 = M[0x40]
0x224: V155 = SUB V152 V154
0x226: RETURN V154 V155
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x227
[0x227:0x22d]
---
Predecessors: [0x60]
Successors: [0x22e, 0x232]
---
0x227 JUMPDEST
0x228 CALLVALUE
0x229 ISZERO
0x22a PUSH2 0x232
0x22d JUMPI
---
0x227: JUMPDEST 
0x228: V156 = CALLVALUE
0x229: V157 = ISZERO V156
0x22a: V158 = 0x232
0x22d: JUMPI 0x232 V157
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22e
[0x22e:0x231]
---
Predecessors: [0x227]
Successors: []
---
0x22e PUSH1 0x0
0x230 DUP1
0x231 REVERT
---
0x22e: V159 = 0x0
0x231: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x227]
Successors: [0x8cb]
---
0x232 JUMPDEST
0x233 PUSH2 0x23a
0x236 PUSH2 0x8cb
0x239 JUMP
---
0x232: JUMPDEST 
0x233: V160 = 0x23a
0x236: V161 = 0x8cb
0x239: JUMP 0x8cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23a]
Exit stack: [V10, 0x23a]

================================

Block 0x23a
[0x23a:0x255]
---
Predecessors: [0x8cb]
Successors: []
---
0x23a JUMPDEST
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f DUP3
0x240 PUSH1 0xff
0x242 AND
0x243 PUSH1 0xff
0x245 AND
0x246 DUP2
0x247 MSTORE
0x248 PUSH1 0x20
0x24a ADD
0x24b SWAP2
0x24c POP
0x24d POP
0x24e PUSH1 0x40
0x250 MLOAD
0x251 DUP1
0x252 SWAP2
0x253 SUB
0x254 SWAP1
0x255 RETURN
---
0x23a: JUMPDEST 
0x23b: V162 = 0x40
0x23d: V163 = M[0x40]
0x240: V164 = 0xff
0x242: V165 = AND 0xff 0x12
0x243: V166 = 0xff
0x245: V167 = AND 0xff 0x12
0x247: M[V163] = 0x12
0x248: V168 = 0x20
0x24a: V169 = ADD 0x20 V163
0x24e: V170 = 0x40
0x250: V171 = M[0x40]
0x253: V172 = SUB V169 V171
0x255: RETURN V171 V172
---
Entry stack: [V10, 0x23a, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x23a]

================================

Block 0x256
[0x256:0x25c]
---
Predecessors: [0x6b]
Successors: [0x25d, 0x261]
---
0x256 JUMPDEST
0x257 CALLVALUE
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x256: JUMPDEST 
0x257: V173 = CALLVALUE
0x258: V174 = ISZERO V173
0x259: V175 = 0x261
0x25c: JUMPI 0x261 V174
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x256]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V176 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x261
[0x261:0x28c]
---
Predecessors: [0x256]
Successors: [0x8d0]
---
0x261 JUMPDEST
0x262 PUSH2 0x28d
0x265 PUSH1 0x4
0x267 DUP1
0x268 DUP1
0x269 CALLDATALOAD
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 SWAP1
0x281 PUSH1 0x20
0x283 ADD
0x284 SWAP1
0x285 SWAP2
0x286 SWAP1
0x287 POP
0x288 POP
0x289 PUSH2 0x8d0
0x28c JUMP
---
0x261: JUMPDEST 
0x262: V177 = 0x28d
0x265: V178 = 0x4
0x269: V179 = CALLDATALOAD 0x4
0x26a: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x281: V182 = 0x20
0x283: V183 = ADD 0x20 0x4
0x289: V184 = 0x8d0
0x28c: JUMP 0x8d0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x28d, V181]
Exit stack: [V10, 0x28d, V181]

================================

Block 0x28d
[0x28d:0x2a2]
---
Predecessors: [0x915]
Successors: []
---
0x28d JUMPDEST
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 DUP3
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP2
0x299 POP
0x29a POP
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x28d: JUMPDEST 
0x28e: V185 = 0x40
0x290: V186 = M[0x40]
0x294: M[V186] = V539
0x295: V187 = 0x20
0x297: V188 = ADD 0x20 V186
0x29b: V189 = 0x40
0x29d: V190 = M[0x40]
0x2a0: V191 = SUB V188 V190
0x2a2: RETURN V190 V191
---
Entry stack: [V10, V539]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x76]
Successors: [0x2aa, 0x2ae]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V192 = CALLVALUE
0x2a5: V193 = ISZERO V192
0x2a6: V194 = 0x2ae
0x2a9: JUMPI 0x2ae V193
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V195 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ae
[0x2ae:0x2b5]
---
Predecessors: [0x2a3]
Successors: [0x91a]
---
0x2ae JUMPDEST
0x2af PUSH2 0x2b6
0x2b2 PUSH2 0x91a
0x2b5 JUMP
---
0x2ae: JUMPDEST 
0x2af: V196 = 0x2b6
0x2b2: V197 = 0x91a
0x2b5: JUMP 0x91a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b6]
Exit stack: [V10, 0x2b6]

================================

Block 0x2b6
[0x2b6:0x2da]
---
Predecessors: [0x91a]
Successors: [0x2db]
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb DUP1
0x2bc PUSH1 0x20
0x2be ADD
0x2bf DUP3
0x2c0 DUP2
0x2c1 SUB
0x2c2 DUP3
0x2c3 MSTORE
0x2c4 DUP4
0x2c5 DUP2
0x2c6 DUP2
0x2c7 MLOAD
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP2
0x2ce POP
0x2cf DUP1
0x2d0 MLOAD
0x2d1 SWAP1
0x2d2 PUSH1 0x20
0x2d4 ADD
0x2d5 SWAP1
0x2d6 DUP1
0x2d7 DUP4
0x2d8 DUP4
0x2d9 PUSH1 0x0
---
0x2b6: JUMPDEST 
0x2b7: V198 = 0x40
0x2b9: V199 = M[0x40]
0x2bc: V200 = 0x20
0x2be: V201 = ADD 0x20 V199
0x2c1: V202 = SUB V201 V199
0x2c3: M[V199] = V202
0x2c7: V203 = M[V541]
0x2c9: M[V201] = V203
0x2ca: V204 = 0x20
0x2cc: V205 = ADD 0x20 V201
0x2d0: V206 = M[V541]
0x2d2: V207 = 0x20
0x2d4: V208 = ADD 0x20 V541
0x2d9: V209 = 0x0
---
Entry stack: [V10, 0x2b6, V541]
Stack pops: 1
Stack additions: [S0, V199, V199, V205, V208, V206, V206, V205, V208, 0x0]
Exit stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, 0x0]

================================

Block 0x2db
[0x2db:0x2e3]
---
Predecessors: [0x2b6, 0x2ec]
Successors: [0x2e4, 0x2f7]
---
0x2db JUMPDEST
0x2dc DUP4
0x2dd DUP2
0x2de LT
0x2df ISZERO
0x2e0 PUSH2 0x2f7
0x2e3 JUMPI
---
0x2db: JUMPDEST 
0x2de: V210 = LT S0 V206
0x2df: V211 = ISZERO V210
0x2e0: V212 = 0x2f7
0x2e3: JUMPI 0x2f7 V211
---
Entry stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, S0]

================================

Block 0x2e4
[0x2e4:0x2eb]
---
Predecessors: [0x2db]
Successors: [0x2ec]
---
0x2e4 DUP1
0x2e5 DUP3
0x2e6 ADD
0x2e7 MLOAD
0x2e8 DUP2
0x2e9 DUP5
0x2ea ADD
0x2eb MSTORE
---
0x2e6: V213 = ADD V208 S0
0x2e7: V214 = M[V213]
0x2ea: V215 = ADD V205 S0
0x2eb: M[V215] = V214
---
Entry stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, S0]

================================

Block 0x2ec
[0x2ec:0x2f6]
---
Predecessors: [0x2e4]
Successors: [0x2db]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x20
0x2ef DUP2
0x2f0 ADD
0x2f1 SWAP1
0x2f2 POP
0x2f3 PUSH2 0x2db
0x2f6 JUMP
---
0x2ec: JUMPDEST 
0x2ed: V216 = 0x20
0x2f0: V217 = ADD S0 0x20
0x2f3: V218 = 0x2db
0x2f6: JUMP 0x2db
---
Entry stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, S0]
Stack pops: 1
Stack additions: [V217]
Exit stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, V217]

================================

Block 0x2f7
[0x2f7:0x30a]
---
Predecessors: [0x2db]
Successors: [0x30b, 0x324]
---
0x2f7 JUMPDEST
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc SWAP1
0x2fd POP
0x2fe SWAP1
0x2ff DUP2
0x300 ADD
0x301 SWAP1
0x302 PUSH1 0x1f
0x304 AND
0x305 DUP1
0x306 ISZERO
0x307 PUSH2 0x324
0x30a JUMPI
---
0x2f7: JUMPDEST 
0x300: V219 = ADD V206 V205
0x302: V220 = 0x1f
0x304: V221 = AND 0x1f V206
0x306: V222 = ISZERO V221
0x307: V223 = 0x324
0x30a: JUMPI 0x324 V222
---
Entry stack: [V10, 0x2b6, V541, V199, V199, V205, V208, V206, V206, V205, V208, S0]
Stack pops: 7
Stack additions: [V219, V221]
Exit stack: [V10, 0x2b6, V541, V199, V199, V219, V221]

================================

Block 0x30b
[0x30b:0x323]
---
Predecessors: [0x2f7]
Successors: [0x324]
---
0x30b DUP1
0x30c DUP3
0x30d SUB
0x30e DUP1
0x30f MLOAD
0x310 PUSH1 0x1
0x312 DUP4
0x313 PUSH1 0x20
0x315 SUB
0x316 PUSH2 0x100
0x319 EXP
0x31a SUB
0x31b NOT
0x31c AND
0x31d DUP2
0x31e MSTORE
0x31f PUSH1 0x20
0x321 ADD
0x322 SWAP2
0x323 POP
---
0x30d: V224 = SUB V219 V221
0x30f: V225 = M[V224]
0x310: V226 = 0x1
0x313: V227 = 0x20
0x315: V228 = SUB 0x20 V221
0x316: V229 = 0x100
0x319: V230 = EXP 0x100 V228
0x31a: V231 = SUB V230 0x1
0x31b: V232 = NOT V231
0x31c: V233 = AND V232 V225
0x31e: M[V224] = V233
0x31f: V234 = 0x20
0x321: V235 = ADD 0x20 V224
---
Entry stack: [V10, 0x2b6, V541, V199, V199, V219, V221]
Stack pops: 2
Stack additions: [V235, S0]
Exit stack: [V10, 0x2b6, V541, V199, V199, V235, V221]

================================

Block 0x324
[0x324:0x331]
---
Predecessors: [0x2f7, 0x30b]
Successors: []
---
0x324 JUMPDEST
0x325 POP
0x326 SWAP3
0x327 POP
0x328 POP
0x329 POP
0x32a PUSH1 0x40
0x32c MLOAD
0x32d DUP1
0x32e SWAP2
0x32f SUB
0x330 SWAP1
0x331 RETURN
---
0x324: JUMPDEST 
0x32a: V236 = 0x40
0x32c: V237 = M[0x40]
0x32f: V238 = SUB S1 V237
0x331: RETURN V237 V238
---
Entry stack: [V10, 0x2b6, V541, V199, V199, S1, V221]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x2b6]

================================

Block 0x332
[0x332:0x338]
---
Predecessors: [0x81]
Successors: [0x339, 0x33d]
---
0x332 JUMPDEST
0x333 CALLVALUE
0x334 ISZERO
0x335 PUSH2 0x33d
0x338 JUMPI
---
0x332: JUMPDEST 
0x333: V239 = CALLVALUE
0x334: V240 = ISZERO V239
0x335: V241 = 0x33d
0x338: JUMPI 0x33d V240
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x339
[0x339:0x33c]
---
Predecessors: [0x332]
Successors: []
---
0x339 PUSH1 0x0
0x33b DUP1
0x33c REVERT
---
0x339: V242 = 0x0
0x33c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33d
[0x33d:0x371]
---
Predecessors: [0x332]
Successors: [0x953]
---
0x33d JUMPDEST
0x33e PUSH2 0x372
0x341 PUSH1 0x4
0x343 DUP1
0x344 DUP1
0x345 CALLDATALOAD
0x346 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35b AND
0x35c SWAP1
0x35d PUSH1 0x20
0x35f ADD
0x360 SWAP1
0x361 SWAP2
0x362 SWAP1
0x363 DUP1
0x364 CALLDATALOAD
0x365 SWAP1
0x366 PUSH1 0x20
0x368 ADD
0x369 SWAP1
0x36a SWAP2
0x36b SWAP1
0x36c POP
0x36d POP
0x36e PUSH2 0x953
0x371 JUMP
---
0x33d: JUMPDEST 
0x33e: V243 = 0x372
0x341: V244 = 0x4
0x345: V245 = CALLDATALOAD 0x4
0x346: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x35d: V248 = 0x20
0x35f: V249 = ADD 0x20 0x4
0x364: V250 = CALLDATALOAD 0x24
0x366: V251 = 0x20
0x368: V252 = ADD 0x20 0x24
0x36e: V253 = 0x953
0x371: JUMP 0x953
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x372, V247, V250]
Exit stack: [V10, 0x372, V247, V250]

================================

Block 0x372
[0x372:0x38b]
---
Predecessors: [0xb46]
Successors: []
---
0x372 JUMPDEST
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 DUP3
0x378 ISZERO
0x379 ISZERO
0x37a ISZERO
0x37b ISZERO
0x37c DUP2
0x37d MSTORE
0x37e PUSH1 0x20
0x380 ADD
0x381 SWAP2
0x382 POP
0x383 POP
0x384 PUSH1 0x40
0x386 MLOAD
0x387 DUP1
0x388 SWAP2
0x389 SUB
0x38a SWAP1
0x38b RETURN
---
0x372: JUMPDEST 
0x373: V254 = 0x40
0x375: V255 = M[0x40]
0x378: V256 = ISZERO {0x0, 0x1}
0x379: V257 = ISZERO V256
0x37a: V258 = ISZERO V257
0x37b: V259 = ISZERO V258
0x37d: M[V255] = V259
0x37e: V260 = 0x20
0x380: V261 = ADD 0x20 V255
0x384: V262 = 0x40
0x386: V263 = M[0x40]
0x389: V264 = SUB V261 V263
0x38b: RETURN V263 V264
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x38c
[0x38c:0x392]
---
Predecessors: [0x8c]
Successors: [0x393, 0x397]
---
0x38c JUMPDEST
0x38d CALLVALUE
0x38e ISZERO
0x38f PUSH2 0x397
0x392 JUMPI
---
0x38c: JUMPDEST 
0x38d: V265 = CALLVALUE
0x38e: V266 = ISZERO V265
0x38f: V267 = 0x397
0x392: JUMPI 0x397 V266
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x393
[0x393:0x396]
---
Predecessors: [0x38c]
Successors: []
---
0x393 PUSH1 0x0
0x395 DUP1
0x396 REVERT
---
0x393: V268 = 0x0
0x396: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x397
[0x397:0x3e1]
---
Predecessors: [0x38c]
Successors: [0xb4c]
---
0x397 JUMPDEST
0x398 PUSH2 0x3e2
0x39b PUSH1 0x4
0x39d DUP1
0x39e DUP1
0x39f CALLDATALOAD
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 SWAP1
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP1
0x3bb SWAP2
0x3bc SWAP1
0x3bd DUP1
0x3be CALLDATALOAD
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 AND
0x3d5 SWAP1
0x3d6 PUSH1 0x20
0x3d8 ADD
0x3d9 SWAP1
0x3da SWAP2
0x3db SWAP1
0x3dc POP
0x3dd POP
0x3de PUSH2 0xb4c
0x3e1 JUMP
---
0x397: JUMPDEST 
0x398: V269 = 0x3e2
0x39b: V270 = 0x4
0x39f: V271 = CALLDATALOAD 0x4
0x3a0: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x3b7: V274 = 0x20
0x3b9: V275 = ADD 0x20 0x4
0x3be: V276 = CALLDATALOAD 0x24
0x3bf: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x3d6: V279 = 0x20
0x3d8: V280 = ADD 0x20 0x24
0x3de: V281 = 0xb4c
0x3e1: JUMP 0xb4c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3e2, V273, V278]
Exit stack: [V10, 0x3e2, V273, V278]

================================

Block 0x3e2
[0x3e2:0x3f7]
---
Predecessors: [0xbce]
Successors: []
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 DUP3
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP2
0x3ee POP
0x3ef POP
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 SWAP2
0x3f5 SUB
0x3f6 SWAP1
0x3f7 RETURN
---
0x3e2: JUMPDEST 
0x3e3: V282 = 0x40
0x3e5: V283 = M[0x40]
0x3e9: M[V283] = V673
0x3ea: V284 = 0x20
0x3ec: V285 = ADD 0x20 V283
0x3f0: V286 = 0x40
0x3f2: V287 = M[0x40]
0x3f5: V288 = SUB V285 V287
0x3f7: RETURN V287 V288
---
Entry stack: [V10, V673]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f8
[0x3f8:0x430]
---
Predecessors: [0xa7]
Successors: [0xaf]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x40
0x3fb DUP1
0x3fc MLOAD
0x3fd SWAP1
0x3fe DUP2
0x3ff ADD
0x400 PUSH1 0x40
0x402 MSTORE
0x403 DUP1
0x404 PUSH1 0x9
0x406 DUP2
0x407 MSTORE
0x408 PUSH1 0x20
0x40a ADD
0x40b PUSH32 0x414d4c20546f6b656e0000000000000000000000000000000000000000000000
0x42c DUP2
0x42d MSTORE
0x42e POP
0x42f DUP2
0x430 JUMP
---
0x3f8: JUMPDEST 
0x3f9: V289 = 0x40
0x3fc: V290 = M[0x40]
0x3ff: V291 = ADD V290 0x40
0x400: V292 = 0x40
0x402: M[0x40] = V291
0x404: V293 = 0x9
0x407: M[V290] = 0x9
0x408: V294 = 0x20
0x40a: V295 = ADD 0x20 V290
0x40b: V296 = 0x414d4c20546f6b656e0000000000000000000000000000000000000000000000
0x42d: M[V295] = 0x414d4c20546f6b656e0000000000000000000000000000000000000000000000
0x430: JUMP 0xaf
---
Entry stack: [V10, 0xaf]
Stack pops: 1
Stack additions: [S0, V290]
Exit stack: [V10, 0xaf, V290]

================================

Block 0x431
[0x431:0x43b]
---
Predecessors: [0x136]
Successors: [0x43c, 0x4bd]
---
0x431 JUMPDEST
0x432 PUSH1 0x0
0x434 DUP1
0x435 DUP3
0x436 EQ
0x437 DUP1
0x438 PUSH2 0x4bd
0x43b JUMPI
---
0x431: JUMPDEST 
0x432: V297 = 0x0
0x436: V298 = EQ V97 0x0
0x438: V299 = 0x4bd
0x43b: JUMPI 0x4bd V298
---
Entry stack: [V10, 0x16b, V94, V97]
Stack pops: 1
Stack additions: [S0, 0x0, V298]
Exit stack: [V10, 0x16b, V94, V97, 0x0, V298]

================================

Block 0x43c
[0x43c:0x4bc]
---
Predecessors: [0x431]
Successors: [0x4bd]
---
0x43c POP
0x43d PUSH1 0x0
0x43f PUSH1 0x2
0x441 PUSH1 0x0
0x443 CALLER
0x444 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x459 AND
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 DUP2
0x471 MSTORE
0x472 PUSH1 0x20
0x474 ADD
0x475 SWAP1
0x476 DUP2
0x477 MSTORE
0x478 PUSH1 0x20
0x47a ADD
0x47b PUSH1 0x0
0x47d SHA3
0x47e PUSH1 0x0
0x480 DUP6
0x481 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x496 AND
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad DUP2
0x4ae MSTORE
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 SWAP1
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 PUSH1 0x20
0x4b7 ADD
0x4b8 PUSH1 0x0
0x4ba SHA3
0x4bb SLOAD
0x4bc EQ
---
0x43d: V300 = 0x0
0x43f: V301 = 0x2
0x441: V302 = 0x0
0x443: V303 = CALLER
0x444: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x459: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x45a: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x471: M[0x0] = V307
0x472: V308 = 0x20
0x474: V309 = ADD 0x20 0x0
0x477: M[0x20] = 0x2
0x478: V310 = 0x20
0x47a: V311 = ADD 0x20 0x20
0x47b: V312 = 0x0
0x47d: V313 = SHA3 0x0 0x40
0x47e: V314 = 0x0
0x481: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x496: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x497: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x4ae: M[0x0] = V318
0x4af: V319 = 0x20
0x4b1: V320 = ADD 0x20 0x0
0x4b4: M[0x20] = V313
0x4b5: V321 = 0x20
0x4b7: V322 = ADD 0x20 0x20
0x4b8: V323 = 0x0
0x4ba: V324 = SHA3 0x0 0x40
0x4bb: V325 = S[V324]
0x4bc: V326 = EQ V325 0x0
---
Entry stack: [V10, 0x16b, V94, V97, 0x0, V298]
Stack pops: 4
Stack additions: [S3, S2, S1, V326]
Exit stack: [V10, 0x16b, V94, V97, 0x0, V326]

================================

Block 0x4bd
[0x4bd:0x4c3]
---
Predecessors: [0x431, 0x43c]
Successors: [0x4c4, 0x4c8]
---
0x4bd JUMPDEST
0x4be ISZERO
0x4bf ISZERO
0x4c0 PUSH2 0x4c8
0x4c3 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V327 = ISZERO S0
0x4bf: V328 = ISZERO V327
0x4c0: V329 = 0x4c8
0x4c3: JUMPI 0x4c8 V328
---
Entry stack: [V10, 0x16b, V94, V97, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x16b, V94, V97, 0x0]

================================

Block 0x4c4
[0x4c4:0x4c7]
---
Predecessors: [0x4bd]
Successors: []
---
0x4c4 PUSH1 0x0
0x4c6 DUP1
0x4c7 REVERT
---
0x4c4: V330 = 0x0
0x4c7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x16b, V94, V97, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x16b, V94, V97, 0x0]

================================

Block 0x4c8
[0x4c8:0x5b2]
---
Predecessors: [0x4bd]
Successors: [0x5b3]
---
0x4c8 JUMPDEST
0x4c9 DUP2
0x4ca PUSH1 0x2
0x4cc PUSH1 0x0
0x4ce CALLER
0x4cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e4 AND
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb DUP2
0x4fc MSTORE
0x4fd PUSH1 0x20
0x4ff ADD
0x500 SWAP1
0x501 DUP2
0x502 MSTORE
0x503 PUSH1 0x20
0x505 ADD
0x506 PUSH1 0x0
0x508 SHA3
0x509 PUSH1 0x0
0x50b DUP6
0x50c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x521 AND
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 DUP2
0x539 MSTORE
0x53a PUSH1 0x20
0x53c ADD
0x53d SWAP1
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x20
0x542 ADD
0x543 PUSH1 0x0
0x545 SHA3
0x546 DUP2
0x547 SWAP1
0x548 SSTORE
0x549 POP
0x54a DUP3
0x54b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x560 AND
0x561 CALLER
0x562 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x577 AND
0x578 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x599 DUP5
0x59a PUSH1 0x40
0x59c MLOAD
0x59d DUP1
0x59e DUP3
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x20
0x5a3 ADD
0x5a4 SWAP2
0x5a5 POP
0x5a6 POP
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa DUP1
0x5ab SWAP2
0x5ac SUB
0x5ad SWAP1
0x5ae LOG3
0x5af PUSH1 0x1
0x5b1 SWAP1
0x5b2 POP
---
0x4c8: JUMPDEST 
0x4ca: V331 = 0x2
0x4cc: V332 = 0x0
0x4ce: V333 = CALLER
0x4cf: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e4: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x4e5: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x4fc: M[0x0] = V337
0x4fd: V338 = 0x20
0x4ff: V339 = ADD 0x20 0x0
0x502: M[0x20] = 0x2
0x503: V340 = 0x20
0x505: V341 = ADD 0x20 0x20
0x506: V342 = 0x0
0x508: V343 = SHA3 0x0 0x40
0x509: V344 = 0x0
0x50c: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x521: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x522: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x539: M[0x0] = V348
0x53a: V349 = 0x20
0x53c: V350 = ADD 0x20 0x0
0x53f: M[0x20] = V343
0x540: V351 = 0x20
0x542: V352 = ADD 0x20 0x20
0x543: V353 = 0x0
0x545: V354 = SHA3 0x0 0x40
0x548: S[V354] = V97
0x54b: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x560: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x561: V357 = CALLER
0x562: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x577: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x578: V360 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x59a: V361 = 0x40
0x59c: V362 = M[0x40]
0x5a0: M[V362] = V97
0x5a1: V363 = 0x20
0x5a3: V364 = ADD 0x20 V362
0x5a7: V365 = 0x40
0x5a9: V366 = M[0x40]
0x5ac: V367 = SUB V364 V366
0x5ae: LOG V366 V367 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V359 V356
0x5af: V368 = 0x1
---
Entry stack: [V10, 0x16b, V94, V97, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x16b, V94, V97, 0x1]

================================

Block 0x5b3
[0x5b3:0x5b8]
---
Predecessors: [0x4c8]
Successors: [0x16b]
---
0x5b3 JUMPDEST
0x5b4 SWAP3
0x5b5 SWAP2
0x5b6 POP
0x5b7 POP
0x5b8 JUMP
---
0x5b3: JUMPDEST 
0x5b8: JUMP 0x16b
---
Entry stack: [V10, 0x16b, V94, V97, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x5b9
[0x5b9:0x5be]
---
Predecessors: [0x190]
Successors: [0x198]
---
0x5b9 JUMPDEST
0x5ba PUSH1 0x0
0x5bc SLOAD
0x5bd DUP2
0x5be JUMP
---
0x5b9: JUMPDEST 
0x5ba: V369 = 0x0
0x5bc: V370 = S[0x0]
0x5be: JUMP 0x198
---
Entry stack: [V10, 0x198]
Stack pops: 1
Stack additions: [S0, V370]
Exit stack: [V10, 0x198, V370]

================================

Block 0x5bf
[0x5bf:0x60a]
---
Predecessors: [0x1b9]
Successors: [0x60b, 0x68c]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x0
0x5c2 DUP2
0x5c3 PUSH1 0x1
0x5c5 PUSH1 0x0
0x5c7 DUP7
0x5c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dd AND
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 AND
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 PUSH1 0x20
0x5f8 ADD
0x5f9 SWAP1
0x5fa DUP2
0x5fb MSTORE
0x5fc PUSH1 0x20
0x5fe ADD
0x5ff PUSH1 0x0
0x601 SHA3
0x602 SLOAD
0x603 LT
0x604 ISZERO
0x605 DUP1
0x606 ISZERO
0x607 PUSH2 0x68c
0x60a JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V371 = 0x0
0x5c3: V372 = 0x1
0x5c5: V373 = 0x0
0x5c8: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x5de: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x5f5: M[0x0] = V377
0x5f6: V378 = 0x20
0x5f8: V379 = ADD 0x20 0x0
0x5fb: M[0x20] = 0x1
0x5fc: V380 = 0x20
0x5fe: V381 = ADD 0x20 0x20
0x5ff: V382 = 0x0
0x601: V383 = SHA3 0x0 0x40
0x602: V384 = S[V383]
0x603: V385 = LT V384 V141
0x604: V386 = ISZERO V385
0x606: V387 = ISZERO V386
0x607: V388 = 0x68c
0x60a: JUMPI 0x68c V387
---
Entry stack: [V10, 0x20d, V133, V138, V141]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V386]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0, V386]

================================

Block 0x60b
[0x60b:0x68b]
---
Predecessors: [0x5bf]
Successors: [0x68c]
---
0x60b POP
0x60c DUP2
0x60d PUSH1 0x2
0x60f PUSH1 0x0
0x611 DUP7
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63d AND
0x63e DUP2
0x63f MSTORE
0x640 PUSH1 0x20
0x642 ADD
0x643 SWAP1
0x644 DUP2
0x645 MSTORE
0x646 PUSH1 0x20
0x648 ADD
0x649 PUSH1 0x0
0x64b SHA3
0x64c PUSH1 0x0
0x64e CALLER
0x64f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x664 AND
0x665 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67a AND
0x67b DUP2
0x67c MSTORE
0x67d PUSH1 0x20
0x67f ADD
0x680 SWAP1
0x681 DUP2
0x682 MSTORE
0x683 PUSH1 0x20
0x685 ADD
0x686 PUSH1 0x0
0x688 SHA3
0x689 SLOAD
0x68a LT
0x68b ISZERO
---
0x60d: V389 = 0x2
0x60f: V390 = 0x0
0x612: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x628: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x63f: M[0x0] = V394
0x640: V395 = 0x20
0x642: V396 = ADD 0x20 0x0
0x645: M[0x20] = 0x2
0x646: V397 = 0x20
0x648: V398 = ADD 0x20 0x20
0x649: V399 = 0x0
0x64b: V400 = SHA3 0x0 0x40
0x64c: V401 = 0x0
0x64e: V402 = CALLER
0x64f: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x664: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x665: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x67c: M[0x0] = V406
0x67d: V407 = 0x20
0x67f: V408 = ADD 0x20 0x0
0x682: M[0x20] = V400
0x683: V409 = 0x20
0x685: V410 = ADD 0x20 0x20
0x686: V411 = 0x0
0x688: V412 = SHA3 0x0 0x40
0x689: V413 = S[V412]
0x68a: V414 = LT V413 V141
0x68b: V415 = ISZERO V414
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0, V386]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V415]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0, V415]

================================

Block 0x68c
[0x68c:0x692]
---
Predecessors: [0x5bf, 0x60b]
Successors: [0x693, 0x698]
---
0x68c JUMPDEST
0x68d DUP1
0x68e ISZERO
0x68f PUSH2 0x698
0x692 JUMPI
---
0x68c: JUMPDEST 
0x68e: V416 = ISZERO S0
0x68f: V417 = 0x698
0x692: JUMPI 0x698 V416
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0, S0]

================================

Block 0x693
[0x693:0x697]
---
Predecessors: [0x68c]
Successors: [0x698]
---
0x693 POP
0x694 PUSH1 0x0
0x696 DUP3
0x697 GT
---
0x694: V418 = 0x0
0x697: V419 = GT V141 0x0
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V419]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0, V419]

================================

Block 0x698
[0x698:0x69e]
---
Predecessors: [0x68c, 0x693]
Successors: [0x69f, 0x723]
---
0x698 JUMPDEST
0x699 DUP1
0x69a ISZERO
0x69b PUSH2 0x723
0x69e JUMPI
---
0x698: JUMPDEST 
0x69a: V420 = ISZERO S0
0x69b: V421 = 0x723
0x69e: JUMPI 0x723 V420
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0, S0]

================================

Block 0x69f
[0x69f:0x722]
---
Predecessors: [0x698]
Successors: [0x723]
---
0x69f POP
0x6a0 PUSH1 0x1
0x6a2 PUSH1 0x0
0x6a4 DUP5
0x6a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ba AND
0x6bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d0 AND
0x6d1 DUP2
0x6d2 MSTORE
0x6d3 PUSH1 0x20
0x6d5 ADD
0x6d6 SWAP1
0x6d7 DUP2
0x6d8 MSTORE
0x6d9 PUSH1 0x20
0x6db ADD
0x6dc PUSH1 0x0
0x6de SHA3
0x6df SLOAD
0x6e0 DUP3
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0x0
0x6e5 DUP7
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x711 AND
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x20
0x716 ADD
0x717 SWAP1
0x718 DUP2
0x719 MSTORE
0x71a PUSH1 0x20
0x71c ADD
0x71d PUSH1 0x0
0x71f SHA3
0x720 SLOAD
0x721 ADD
0x722 GT
---
0x6a0: V422 = 0x1
0x6a2: V423 = 0x0
0x6a5: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ba: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x6bb: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d0: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x6d2: M[0x0] = V427
0x6d3: V428 = 0x20
0x6d5: V429 = ADD 0x20 0x0
0x6d8: M[0x20] = 0x1
0x6d9: V430 = 0x20
0x6db: V431 = ADD 0x20 0x20
0x6dc: V432 = 0x0
0x6de: V433 = SHA3 0x0 0x40
0x6df: V434 = S[V433]
0x6e1: V435 = 0x1
0x6e3: V436 = 0x0
0x6e6: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x6fc: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x711: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x713: M[0x0] = V440
0x714: V441 = 0x20
0x716: V442 = ADD 0x20 0x0
0x719: M[0x20] = 0x1
0x71a: V443 = 0x20
0x71c: V444 = ADD 0x20 0x20
0x71d: V445 = 0x0
0x71f: V446 = SHA3 0x0 0x40
0x720: V447 = S[V446]
0x721: V448 = ADD V447 V141
0x722: V449 = GT V448 V434
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V449]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0, V449]

================================

Block 0x723
[0x723:0x728]
---
Predecessors: [0x698, 0x69f]
Successors: [0x729, 0x8ba]
---
0x723 JUMPDEST
0x724 ISZERO
0x725 PUSH2 0x8ba
0x728 JUMPI
---
0x723: JUMPDEST 
0x724: V450 = ISZERO S0
0x725: V451 = 0x8ba
0x728: JUMPI 0x8ba V450
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0]

================================

Block 0x729
[0x729:0x8b9]
---
Predecessors: [0x723]
Successors: [0x8c4]
---
0x729 DUP2
0x72a PUSH1 0x1
0x72c PUSH1 0x0
0x72e DUP7
0x72f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x744 AND
0x745 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75a AND
0x75b DUP2
0x75c MSTORE
0x75d PUSH1 0x20
0x75f ADD
0x760 SWAP1
0x761 DUP2
0x762 MSTORE
0x763 PUSH1 0x20
0x765 ADD
0x766 PUSH1 0x0
0x768 SHA3
0x769 PUSH1 0x0
0x76b DUP3
0x76c DUP3
0x76d SLOAD
0x76e SUB
0x76f SWAP3
0x770 POP
0x771 POP
0x772 DUP2
0x773 SWAP1
0x774 SSTORE
0x775 POP
0x776 DUP2
0x777 PUSH1 0x2
0x779 PUSH1 0x0
0x77b DUP7
0x77c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x791 AND
0x792 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a7 AND
0x7a8 DUP2
0x7a9 MSTORE
0x7aa PUSH1 0x20
0x7ac ADD
0x7ad SWAP1
0x7ae DUP2
0x7af MSTORE
0x7b0 PUSH1 0x20
0x7b2 ADD
0x7b3 PUSH1 0x0
0x7b5 SHA3
0x7b6 PUSH1 0x0
0x7b8 CALLER
0x7b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ce AND
0x7cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e4 AND
0x7e5 DUP2
0x7e6 MSTORE
0x7e7 PUSH1 0x20
0x7e9 ADD
0x7ea SWAP1
0x7eb DUP2
0x7ec MSTORE
0x7ed PUSH1 0x20
0x7ef ADD
0x7f0 PUSH1 0x0
0x7f2 SHA3
0x7f3 PUSH1 0x0
0x7f5 DUP3
0x7f6 DUP3
0x7f7 SLOAD
0x7f8 SUB
0x7f9 SWAP3
0x7fa POP
0x7fb POP
0x7fc DUP2
0x7fd SWAP1
0x7fe SSTORE
0x7ff POP
0x800 DUP2
0x801 PUSH1 0x1
0x803 PUSH1 0x0
0x805 DUP6
0x806 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81b AND
0x81c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x831 AND
0x832 DUP2
0x833 MSTORE
0x834 PUSH1 0x20
0x836 ADD
0x837 SWAP1
0x838 DUP2
0x839 MSTORE
0x83a PUSH1 0x20
0x83c ADD
0x83d PUSH1 0x0
0x83f SHA3
0x840 PUSH1 0x0
0x842 DUP3
0x843 DUP3
0x844 SLOAD
0x845 ADD
0x846 SWAP3
0x847 POP
0x848 POP
0x849 DUP2
0x84a SWAP1
0x84b SSTORE
0x84c POP
0x84d DUP3
0x84e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x863 AND
0x864 DUP5
0x865 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87a AND
0x87b PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x89c DUP5
0x89d PUSH1 0x40
0x89f MLOAD
0x8a0 DUP1
0x8a1 DUP3
0x8a2 DUP2
0x8a3 MSTORE
0x8a4 PUSH1 0x20
0x8a6 ADD
0x8a7 SWAP2
0x8a8 POP
0x8a9 POP
0x8aa PUSH1 0x40
0x8ac MLOAD
0x8ad DUP1
0x8ae SWAP2
0x8af SUB
0x8b0 SWAP1
0x8b1 LOG3
0x8b2 PUSH1 0x1
0x8b4 SWAP1
0x8b5 POP
0x8b6 PUSH2 0x8c4
0x8b9 JUMP
---
0x72a: V452 = 0x1
0x72c: V453 = 0x0
0x72f: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x744: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x745: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x75a: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x75c: M[0x0] = V457
0x75d: V458 = 0x20
0x75f: V459 = ADD 0x20 0x0
0x762: M[0x20] = 0x1
0x763: V460 = 0x20
0x765: V461 = ADD 0x20 0x20
0x766: V462 = 0x0
0x768: V463 = SHA3 0x0 0x40
0x769: V464 = 0x0
0x76d: V465 = S[V463]
0x76e: V466 = SUB V465 V141
0x774: S[V463] = V466
0x777: V467 = 0x2
0x779: V468 = 0x0
0x77c: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x791: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x792: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a7: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x7a9: M[0x0] = V472
0x7aa: V473 = 0x20
0x7ac: V474 = ADD 0x20 0x0
0x7af: M[0x20] = 0x2
0x7b0: V475 = 0x20
0x7b2: V476 = ADD 0x20 0x20
0x7b3: V477 = 0x0
0x7b5: V478 = SHA3 0x0 0x40
0x7b6: V479 = 0x0
0x7b8: V480 = CALLER
0x7b9: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ce: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x7cf: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e4: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x7e6: M[0x0] = V484
0x7e7: V485 = 0x20
0x7e9: V486 = ADD 0x20 0x0
0x7ec: M[0x20] = V478
0x7ed: V487 = 0x20
0x7ef: V488 = ADD 0x20 0x20
0x7f0: V489 = 0x0
0x7f2: V490 = SHA3 0x0 0x40
0x7f3: V491 = 0x0
0x7f7: V492 = S[V490]
0x7f8: V493 = SUB V492 V141
0x7fe: S[V490] = V493
0x801: V494 = 0x1
0x803: V495 = 0x0
0x806: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x81b: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x81c: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x831: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x833: M[0x0] = V499
0x834: V500 = 0x20
0x836: V501 = ADD 0x20 0x0
0x839: M[0x20] = 0x1
0x83a: V502 = 0x20
0x83c: V503 = ADD 0x20 0x20
0x83d: V504 = 0x0
0x83f: V505 = SHA3 0x0 0x40
0x840: V506 = 0x0
0x844: V507 = S[V505]
0x845: V508 = ADD V507 V141
0x84b: S[V505] = V508
0x84e: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x863: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x865: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x87b: V513 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x89d: V514 = 0x40
0x89f: V515 = M[0x40]
0x8a3: M[V515] = V141
0x8a4: V516 = 0x20
0x8a6: V517 = ADD 0x20 V515
0x8aa: V518 = 0x40
0x8ac: V519 = M[0x40]
0x8af: V520 = SUB V517 V519
0x8b1: LOG V519 V520 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V512 V510
0x8b2: V521 = 0x1
0x8b6: V522 = 0x8c4
0x8b9: JUMP 0x8c4
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x1]

================================

Block 0x8ba
[0x8ba:0x8c2]
---
Predecessors: [0x723]
Successors: [0x8c4]
---
0x8ba JUMPDEST
0x8bb PUSH1 0x0
0x8bd SWAP1
0x8be POP
0x8bf PUSH2 0x8c4
0x8c2 JUMP
---
0x8ba: JUMPDEST 
0x8bb: V523 = 0x0
0x8bf: V524 = 0x8c4
0x8c2: JUMP 0x8c4
---
Entry stack: [V10, 0x20d, V133, V138, V141, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x20d, V133, V138, V141, 0x0]

================================

Block 0x8c3
[0x8c3:0x8c3]
---
Predecessors: []
Successors: [0x8c4]
---
0x8c3 JUMPDEST
---
0x8c3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8c4
[0x8c4:0x8ca]
---
Predecessors: [0x729, 0x8ba, 0x8c3]
Successors: [0x20d]
---
0x8c4 JUMPDEST
0x8c5 SWAP4
0x8c6 SWAP3
0x8c7 POP
0x8c8 POP
0x8c9 POP
0x8ca JUMP
---
0x8c4: JUMPDEST 
0x8ca: JUMP 0x20d
---
Entry stack: [V10, 0x20d, V133, V138, V141, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x8cb
[0x8cb:0x8cf]
---
Predecessors: [0x232]
Successors: [0x23a]
---
0x8cb JUMPDEST
0x8cc PUSH1 0x12
0x8ce DUP2
0x8cf JUMP
---
0x8cb: JUMPDEST 
0x8cc: V525 = 0x12
0x8cf: JUMP 0x23a
---
Entry stack: [V10, 0x23a]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x23a, 0x12]

================================

Block 0x8d0
[0x8d0:0x914]
---
Predecessors: [0x261]
Successors: [0x915]
---
0x8d0 JUMPDEST
0x8d1 PUSH1 0x0
0x8d3 PUSH1 0x1
0x8d5 PUSH1 0x0
0x8d7 DUP4
0x8d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ed AND
0x8ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x903 AND
0x904 DUP2
0x905 MSTORE
0x906 PUSH1 0x20
0x908 ADD
0x909 SWAP1
0x90a DUP2
0x90b MSTORE
0x90c PUSH1 0x20
0x90e ADD
0x90f PUSH1 0x0
0x911 SHA3
0x912 SLOAD
0x913 SWAP1
0x914 POP
---
0x8d0: JUMPDEST 
0x8d1: V526 = 0x0
0x8d3: V527 = 0x1
0x8d5: V528 = 0x0
0x8d8: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ed: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x8ee: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x903: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x905: M[0x0] = V532
0x906: V533 = 0x20
0x908: V534 = ADD 0x20 0x0
0x90b: M[0x20] = 0x1
0x90c: V535 = 0x20
0x90e: V536 = ADD 0x20 0x20
0x90f: V537 = 0x0
0x911: V538 = SHA3 0x0 0x40
0x912: V539 = S[V538]
---
Entry stack: [V10, 0x28d, V181]
Stack pops: 1
Stack additions: [S0, V539]
Exit stack: [V10, 0x28d, V181, V539]

================================

Block 0x915
[0x915:0x919]
---
Predecessors: [0x8d0]
Successors: [0x28d]
---
0x915 JUMPDEST
0x916 SWAP2
0x917 SWAP1
0x918 POP
0x919 JUMP
---
0x915: JUMPDEST 
0x919: JUMP 0x28d
---
Entry stack: [V10, 0x28d, V181, V539]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V539]

================================

Block 0x91a
[0x91a:0x952]
---
Predecessors: [0x2ae]
Successors: [0x2b6]
---
0x91a JUMPDEST
0x91b PUSH1 0x40
0x91d DUP1
0x91e MLOAD
0x91f SWAP1
0x920 DUP2
0x921 ADD
0x922 PUSH1 0x40
0x924 MSTORE
0x925 DUP1
0x926 PUSH1 0x3
0x928 DUP2
0x929 MSTORE
0x92a PUSH1 0x20
0x92c ADD
0x92d PUSH32 0x414d4c0000000000000000000000000000000000000000000000000000000000
0x94e DUP2
0x94f MSTORE
0x950 POP
0x951 DUP2
0x952 JUMP
---
0x91a: JUMPDEST 
0x91b: V540 = 0x40
0x91e: V541 = M[0x40]
0x921: V542 = ADD V541 0x40
0x922: V543 = 0x40
0x924: M[0x40] = V542
0x926: V544 = 0x3
0x929: M[V541] = 0x3
0x92a: V545 = 0x20
0x92c: V546 = ADD 0x20 V541
0x92d: V547 = 0x414d4c0000000000000000000000000000000000000000000000000000000000
0x94f: M[V546] = 0x414d4c0000000000000000000000000000000000000000000000000000000000
0x952: JUMP 0x2b6
---
Entry stack: [V10, 0x2b6]
Stack pops: 1
Stack additions: [S0, V541]
Exit stack: [V10, 0x2b6, V541]

================================

Block 0x953
[0x953:0x99e]
---
Predecessors: [0x33d]
Successors: [0x99f, 0x9a4]
---
0x953 JUMPDEST
0x954 PUSH1 0x0
0x956 DUP2
0x957 PUSH1 0x1
0x959 PUSH1 0x0
0x95b CALLER
0x95c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x971 AND
0x972 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x987 AND
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x20
0x98c ADD
0x98d SWAP1
0x98e DUP2
0x98f MSTORE
0x990 PUSH1 0x20
0x992 ADD
0x993 PUSH1 0x0
0x995 SHA3
0x996 SLOAD
0x997 LT
0x998 ISZERO
0x999 DUP1
0x99a ISZERO
0x99b PUSH2 0x9a4
0x99e JUMPI
---
0x953: JUMPDEST 
0x954: V548 = 0x0
0x957: V549 = 0x1
0x959: V550 = 0x0
0x95b: V551 = CALLER
0x95c: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x971: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x972: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x987: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x989: M[0x0] = V555
0x98a: V556 = 0x20
0x98c: V557 = ADD 0x20 0x0
0x98f: M[0x20] = 0x1
0x990: V558 = 0x20
0x992: V559 = ADD 0x20 0x20
0x993: V560 = 0x0
0x995: V561 = SHA3 0x0 0x40
0x996: V562 = S[V561]
0x997: V563 = LT V562 V250
0x998: V564 = ISZERO V563
0x99a: V565 = ISZERO V564
0x99b: V566 = 0x9a4
0x99e: JUMPI 0x9a4 V565
---
Entry stack: [V10, 0x372, V247, V250]
Stack pops: 1
Stack additions: [S0, 0x0, V564]
Exit stack: [V10, 0x372, V247, V250, 0x0, V564]

================================

Block 0x99f
[0x99f:0x9a3]
---
Predecessors: [0x953]
Successors: [0x9a4]
---
0x99f POP
0x9a0 PUSH1 0x0
0x9a2 DUP3
0x9a3 GT
---
0x9a0: V567 = 0x0
0x9a3: V568 = GT V250 0x0
---
Entry stack: [V10, 0x372, V247, V250, 0x0, V564]
Stack pops: 3
Stack additions: [S2, S1, V568]
Exit stack: [V10, 0x372, V247, V250, 0x0, V568]

================================

Block 0x9a4
[0x9a4:0x9aa]
---
Predecessors: [0x953, 0x99f]
Successors: [0x9ab, 0xa2f]
---
0x9a4 JUMPDEST
0x9a5 DUP1
0x9a6 ISZERO
0x9a7 PUSH2 0xa2f
0x9aa JUMPI
---
0x9a4: JUMPDEST 
0x9a6: V569 = ISZERO S0
0x9a7: V570 = 0xa2f
0x9aa: JUMPI 0xa2f V569
---
Entry stack: [V10, 0x372, V247, V250, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x372, V247, V250, 0x0, S0]

================================

Block 0x9ab
[0x9ab:0xa2e]
---
Predecessors: [0x9a4]
Successors: [0xa2f]
---
0x9ab POP
0x9ac PUSH1 0x1
0x9ae PUSH1 0x0
0x9b0 DUP5
0x9b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c6 AND
0x9c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9dc AND
0x9dd DUP2
0x9de MSTORE
0x9df PUSH1 0x20
0x9e1 ADD
0x9e2 SWAP1
0x9e3 DUP2
0x9e4 MSTORE
0x9e5 PUSH1 0x20
0x9e7 ADD
0x9e8 PUSH1 0x0
0x9ea SHA3
0x9eb SLOAD
0x9ec DUP3
0x9ed PUSH1 0x1
0x9ef PUSH1 0x0
0x9f1 DUP7
0x9f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa07 AND
0xa08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1d AND
0xa1e DUP2
0xa1f MSTORE
0xa20 PUSH1 0x20
0xa22 ADD
0xa23 SWAP1
0xa24 DUP2
0xa25 MSTORE
0xa26 PUSH1 0x20
0xa28 ADD
0xa29 PUSH1 0x0
0xa2b SHA3
0xa2c SLOAD
0xa2d ADD
0xa2e GT
---
0x9ac: V571 = 0x1
0x9ae: V572 = 0x0
0x9b1: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c6: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x9c7: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0x9dc: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x9de: M[0x0] = V576
0x9df: V577 = 0x20
0x9e1: V578 = ADD 0x20 0x0
0x9e4: M[0x20] = 0x1
0x9e5: V579 = 0x20
0x9e7: V580 = ADD 0x20 0x20
0x9e8: V581 = 0x0
0x9ea: V582 = SHA3 0x0 0x40
0x9eb: V583 = S[V582]
0x9ed: V584 = 0x1
0x9ef: V585 = 0x0
0x9f2: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0xa07: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0xa08: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1d: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0xa1f: M[0x0] = V589
0xa20: V590 = 0x20
0xa22: V591 = ADD 0x20 0x0
0xa25: M[0x20] = 0x1
0xa26: V592 = 0x20
0xa28: V593 = ADD 0x20 0x20
0xa29: V594 = 0x0
0xa2b: V595 = SHA3 0x0 0x40
0xa2c: V596 = S[V595]
0xa2d: V597 = ADD V596 V250
0xa2e: V598 = GT V597 V583
---
Entry stack: [V10, 0x372, V247, V250, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V598]
Exit stack: [V10, 0x372, V247, V250, 0x0, V598]

================================

Block 0xa2f
[0xa2f:0xa34]
---
Predecessors: [0x9a4, 0x9ab]
Successors: [0xa35, 0xb3c]
---
0xa2f JUMPDEST
0xa30 ISZERO
0xa31 PUSH2 0xb3c
0xa34 JUMPI
---
0xa2f: JUMPDEST 
0xa30: V599 = ISZERO S0
0xa31: V600 = 0xb3c
0xa34: JUMPI 0xb3c V599
---
Entry stack: [V10, 0x372, V247, V250, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x372, V247, V250, 0x0]

================================

Block 0xa35
[0xa35:0xb3b]
---
Predecessors: [0xa2f]
Successors: [0xb46]
---
0xa35 DUP2
0xa36 PUSH1 0x1
0xa38 PUSH1 0x0
0xa3a CALLER
0xa3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa50 AND
0xa51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa66 AND
0xa67 DUP2
0xa68 MSTORE
0xa69 PUSH1 0x20
0xa6b ADD
0xa6c SWAP1
0xa6d DUP2
0xa6e MSTORE
0xa6f PUSH1 0x20
0xa71 ADD
0xa72 PUSH1 0x0
0xa74 SHA3
0xa75 PUSH1 0x0
0xa77 DUP3
0xa78 DUP3
0xa79 SLOAD
0xa7a SUB
0xa7b SWAP3
0xa7c POP
0xa7d POP
0xa7e DUP2
0xa7f SWAP1
0xa80 SSTORE
0xa81 POP
0xa82 DUP2
0xa83 PUSH1 0x1
0xa85 PUSH1 0x0
0xa87 DUP6
0xa88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9d AND
0xa9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab3 AND
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x20
0xab8 ADD
0xab9 SWAP1
0xaba DUP2
0xabb MSTORE
0xabc PUSH1 0x20
0xabe ADD
0xabf PUSH1 0x0
0xac1 SHA3
0xac2 PUSH1 0x0
0xac4 DUP3
0xac5 DUP3
0xac6 SLOAD
0xac7 ADD
0xac8 SWAP3
0xac9 POP
0xaca POP
0xacb DUP2
0xacc SWAP1
0xacd SSTORE
0xace POP
0xacf DUP3
0xad0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae5 AND
0xae6 CALLER
0xae7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xafc AND
0xafd PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb1e DUP5
0xb1f PUSH1 0x40
0xb21 MLOAD
0xb22 DUP1
0xb23 DUP3
0xb24 DUP2
0xb25 MSTORE
0xb26 PUSH1 0x20
0xb28 ADD
0xb29 SWAP2
0xb2a POP
0xb2b POP
0xb2c PUSH1 0x40
0xb2e MLOAD
0xb2f DUP1
0xb30 SWAP2
0xb31 SUB
0xb32 SWAP1
0xb33 LOG3
0xb34 PUSH1 0x1
0xb36 SWAP1
0xb37 POP
0xb38 PUSH2 0xb46
0xb3b JUMP
---
0xa36: V601 = 0x1
0xa38: V602 = 0x0
0xa3a: V603 = CALLER
0xa3b: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0xa50: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0xa51: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0xa66: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0xa68: M[0x0] = V607
0xa69: V608 = 0x20
0xa6b: V609 = ADD 0x20 0x0
0xa6e: M[0x20] = 0x1
0xa6f: V610 = 0x20
0xa71: V611 = ADD 0x20 0x20
0xa72: V612 = 0x0
0xa74: V613 = SHA3 0x0 0x40
0xa75: V614 = 0x0
0xa79: V615 = S[V613]
0xa7a: V616 = SUB V615 V250
0xa80: S[V613] = V616
0xa83: V617 = 0x1
0xa85: V618 = 0x0
0xa88: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9d: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0xa9e: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0xab3: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0xab5: M[0x0] = V622
0xab6: V623 = 0x20
0xab8: V624 = ADD 0x20 0x0
0xabb: M[0x20] = 0x1
0xabc: V625 = 0x20
0xabe: V626 = ADD 0x20 0x20
0xabf: V627 = 0x0
0xac1: V628 = SHA3 0x0 0x40
0xac2: V629 = 0x0
0xac6: V630 = S[V628]
0xac7: V631 = ADD V630 V250
0xacd: S[V628] = V631
0xad0: V632 = 0xffffffffffffffffffffffffffffffffffffffff
0xae5: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0xae6: V634 = CALLER
0xae7: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0xafc: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0xafd: V637 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb1f: V638 = 0x40
0xb21: V639 = M[0x40]
0xb25: M[V639] = V250
0xb26: V640 = 0x20
0xb28: V641 = ADD 0x20 V639
0xb2c: V642 = 0x40
0xb2e: V643 = M[0x40]
0xb31: V644 = SUB V641 V643
0xb33: LOG V643 V644 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V636 V633
0xb34: V645 = 0x1
0xb38: V646 = 0xb46
0xb3b: JUMP 0xb46
---
Entry stack: [V10, 0x372, V247, V250, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x372, V247, V250, 0x1]

================================

Block 0xb3c
[0xb3c:0xb44]
---
Predecessors: [0xa2f]
Successors: [0xb46]
---
0xb3c JUMPDEST
0xb3d PUSH1 0x0
0xb3f SWAP1
0xb40 POP
0xb41 PUSH2 0xb46
0xb44 JUMP
---
0xb3c: JUMPDEST 
0xb3d: V647 = 0x0
0xb41: V648 = 0xb46
0xb44: JUMP 0xb46
---
Entry stack: [V10, 0x372, V247, V250, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x372, V247, V250, 0x0]

================================

Block 0xb45
[0xb45:0xb45]
---
Predecessors: []
Successors: [0xb46]
---
0xb45 JUMPDEST
---
0xb45: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb46
[0xb46:0xb4b]
---
Predecessors: [0xa35, 0xb3c, 0xb45]
Successors: [0x372]
---
0xb46 JUMPDEST
0xb47 SWAP3
0xb48 SWAP2
0xb49 POP
0xb4a POP
0xb4b JUMP
---
0xb46: JUMPDEST 
0xb4b: JUMP 0x372
---
Entry stack: [V10, 0x372, V247, V250, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xb4c
[0xb4c:0xbcd]
---
Predecessors: [0x397]
Successors: [0xbce]
---
0xb4c JUMPDEST
0xb4d PUSH1 0x0
0xb4f PUSH1 0x2
0xb51 PUSH1 0x0
0xb53 DUP5
0xb54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb69 AND
0xb6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7f AND
0xb80 DUP2
0xb81 MSTORE
0xb82 PUSH1 0x20
0xb84 ADD
0xb85 SWAP1
0xb86 DUP2
0xb87 MSTORE
0xb88 PUSH1 0x20
0xb8a ADD
0xb8b PUSH1 0x0
0xb8d SHA3
0xb8e PUSH1 0x0
0xb90 DUP4
0xb91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba6 AND
0xba7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbc AND
0xbbd DUP2
0xbbe MSTORE
0xbbf PUSH1 0x20
0xbc1 ADD
0xbc2 SWAP1
0xbc3 DUP2
0xbc4 MSTORE
0xbc5 PUSH1 0x20
0xbc7 ADD
0xbc8 PUSH1 0x0
0xbca SHA3
0xbcb SLOAD
0xbcc SWAP1
0xbcd POP
---
0xb4c: JUMPDEST 
0xb4d: V649 = 0x0
0xb4f: V650 = 0x2
0xb51: V651 = 0x0
0xb54: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xb69: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0xb6a: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7f: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xb81: M[0x0] = V655
0xb82: V656 = 0x20
0xb84: V657 = ADD 0x20 0x0
0xb87: M[0x20] = 0x2
0xb88: V658 = 0x20
0xb8a: V659 = ADD 0x20 0x20
0xb8b: V660 = 0x0
0xb8d: V661 = SHA3 0x0 0x40
0xb8e: V662 = 0x0
0xb91: V663 = 0xffffffffffffffffffffffffffffffffffffffff
0xba6: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0xba7: V665 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbc: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xbbe: M[0x0] = V666
0xbbf: V667 = 0x20
0xbc1: V668 = ADD 0x20 0x0
0xbc4: M[0x20] = V661
0xbc5: V669 = 0x20
0xbc7: V670 = ADD 0x20 0x20
0xbc8: V671 = 0x0
0xbca: V672 = SHA3 0x0 0x40
0xbcb: V673 = S[V672]
---
Entry stack: [V10, 0x3e2, V273, V278]
Stack pops: 2
Stack additions: [S1, S0, V673]
Exit stack: [V10, 0x3e2, V273, V278, V673]

================================

Block 0xbce
[0xbce:0xbd3]
---
Predecessors: [0xb4c]
Successors: [0x3e2]
---
0xbce JUMPDEST
0xbcf SWAP3
0xbd0 SWAP2
0xbd1 POP
0xbd2 POP
0xbd3 JUMP
---
0xbce: JUMPDEST 
0xbd3: JUMP 0x3e2
---
Entry stack: [V10, 0x3e2, V273, V278, V673]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V673]

================================

Block 0xbd4
[0xbd4:0xbff]
---
Predecessors: []
Successors: []
---
0xbd4 STOP
0xbd5 LOG1
0xbd6 PUSH6 0x627a7a723058
0xbdd SHA3
0xbde ADD
0xbdf ORIGIN
0xbe0 DUP14
0xbe1 MISSING 0xed
0xbe2 MISSING 0xe8
0xbe3 MISSING 0xbc
0xbe4 MISSING 0xab
0xbe5 PUSH17 0xbce736fc98bacaa1867b5ee8ffbcbf0544
0xbf7 SWAP14
0xbf8 SIGNEXTEND
0xbf9 MISSING 0xcf
0xbfa MSTORE8
0xbfb MISSING 0xc2
0xbfc EXTCODESIZE
0xbfd LOG4
0xbfe STOP
0xbff MISSING 0x29
---
0xbd4: STOP 
0xbd5: LOG S0 S1 S2
0xbd6: V674 = 0x627a7a723058
0xbdd: V675 = SHA3 0x627a7a723058 S3
0xbde: V676 = ADD V675 S4
0xbdf: V677 = ORIGIN
0xbe1: MISSING 0xed
0xbe2: MISSING 0xe8
0xbe3: MISSING 0xbc
0xbe4: MISSING 0xab
0xbe5: V678 = 0xbce736fc98bacaa1867b5ee8ffbcbf0544
0xbf8: V679 = SIGNEXTEND S13 S0
0xbf9: MISSING 0xcf
0xbfa: M8[S0] = S1
0xbfb: MISSING 0xc2
0xbfc: V680 = EXTCODESIZE S0
0xbfd: LOG V680 S1 S2 S3 S4 S5
0xbfe: STOP 
0xbff: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S16, V677, V676, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V679, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, 0xbce736fc98bacaa1867b5ee8ffbcbf0544]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x9c
Exit block: 0x11d
Body: 0x9c, 0xa3, 0xa7, 0xaf, 0xd4, 0xdd, 0xe5, 0xf0, 0x104, 0x11d, 0x3f8

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x12b
Exit block: 0x16b
Body: 0x12b, 0x132, 0x136, 0x16b, 0x431, 0x43c, 0x4bd, 0x4c4, 0x4c8, 0x5b3

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x185
Exit block: 0x198
Body: 0x185, 0x18c, 0x190, 0x198, 0x5b9

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1ae
Exit block: 0x20d
Body: 0x1ae, 0x1b5, 0x1b9, 0x20d, 0x5bf, 0x60b, 0x68c, 0x693, 0x698, 0x69f, 0x723, 0x729, 0x8ba, 0x8c4

Function 4:
Public function signature: 0x313ce567
Entry block: 0x227
Exit block: 0x23a
Body: 0x227, 0x22e, 0x232, 0x23a, 0x8cb

Function 5:
Public function signature: 0x70a08231
Entry block: 0x256
Exit block: 0x28d
Body: 0x256, 0x25d, 0x261, 0x28d, 0x8d0, 0x915

Function 6:
Public function signature: 0x95d89b41
Entry block: 0x2a3
Exit block: 0x324
Body: 0x2a3, 0x2aa, 0x2ae, 0x2b6, 0x2db, 0x2e4, 0x2ec, 0x2f7, 0x30b, 0x324, 0x91a

Function 7:
Public function signature: 0xa9059cbb
Entry block: 0x332
Exit block: 0x372
Body: 0x332, 0x339, 0x33d, 0x372, 0x953, 0x99f, 0x9a4, 0x9ab, 0xa2f, 0xa35, 0xb3c, 0xb46

Function 8:
Public function signature: 0xdd62ed3e
Entry block: 0x38c
Exit block: 0x3e2
Body: 0x38c, 0x393, 0x397, 0x3e2, 0xb4c, 0xbce

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x97
Body: 0x97

