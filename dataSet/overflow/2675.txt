Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb1]
---
0x41 DUP1
0x42 PUSH4 0xad8733ca
0x47 EQ
0x48 PUSH2 0xb1
0x4b JUMPI
---
0x42: V15 = 0xad8733ca
0x47: V16 = EQ 0xad8733ca V11
0x48: V17 = 0xb1
0x4b: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x17e]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0x17e
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0x17e
0x56: JUMPI 0x17e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd, 0x495]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x1b7]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x1b7
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x1b7
0x6e: JUMP 0x1b7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0xb0]
---
Predecessors: [0x1b7]
Successors: []
---
0x6f JUMPDEST
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP3
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x6f: JUMPDEST 
0x70: V28 = 0x40
0x72: V29 = M[0x40]
0x75: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x8b: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa2: M[V29] = V33
0xa3: V34 = 0x20
0xa5: V35 = ADD 0x20 V29
0xa9: V36 = 0x40
0xab: V37 = M[0x40]
0xae: V38 = SUB V35 V37
0xb0: RETURN V37 V38
---
Entry stack: [V11, 0x6f, V116]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x41, 0x4a1]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V39 = CALLVALUE
0xb3: V40 = ISZERO V39
0xb4: V41 = 0xbc
0xb7: JUMPI 0xbc V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V42 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0x167]
---
Predecessors: [0xb1]
Successors: [0x1dc]
---
0xbc JUMPDEST
0xbd PUSH2 0x168
0xc0 PUSH1 0x4
0xc2 DUP1
0xc3 DUP1
0xc4 CALLDATALOAD
0xc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda AND
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 SWAP2
0xe1 SWAP1
0xe2 DUP1
0xe3 CALLDATALOAD
0xe4 SWAP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 DUP3
0xea ADD
0xeb DUP1
0xec CALLDATALOAD
0xed SWAP1
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 DUP1
0xf3 DUP1
0xf4 PUSH1 0x20
0xf6 MUL
0xf7 PUSH1 0x20
0xf9 ADD
0xfa PUSH1 0x40
0xfc MLOAD
0xfd SWAP1
0xfe DUP2
0xff ADD
0x100 PUSH1 0x40
0x102 MSTORE
0x103 DUP1
0x104 SWAP4
0x105 SWAP3
0x106 SWAP2
0x107 SWAP1
0x108 DUP2
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e DUP4
0x10f DUP4
0x110 PUSH1 0x20
0x112 MUL
0x113 DUP1
0x114 DUP3
0x115 DUP5
0x116 CALLDATACOPY
0x117 DUP3
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c POP
0x11d POP
0x11e POP
0x11f POP
0x120 SWAP2
0x121 SWAP1
0x122 DUP1
0x123 CALLDATALOAD
0x124 SWAP1
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 DUP3
0x12a ADD
0x12b DUP1
0x12c CALLDATALOAD
0x12d SWAP1
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 DUP1
0x133 DUP1
0x134 PUSH1 0x20
0x136 MUL
0x137 PUSH1 0x20
0x139 ADD
0x13a PUSH1 0x40
0x13c MLOAD
0x13d SWAP1
0x13e DUP2
0x13f ADD
0x140 PUSH1 0x40
0x142 MSTORE
0x143 DUP1
0x144 SWAP4
0x145 SWAP3
0x146 SWAP2
0x147 SWAP1
0x148 DUP2
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x20
0x14d ADD
0x14e DUP4
0x14f DUP4
0x150 PUSH1 0x20
0x152 MUL
0x153 DUP1
0x154 DUP3
0x155 DUP5
0x156 CALLDATACOPY
0x157 DUP3
0x158 ADD
0x159 SWAP2
0x15a POP
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f POP
0x160 SWAP2
0x161 SWAP1
0x162 POP
0x163 POP
0x164 PUSH2 0x1dc
0x167 JUMP
---
0xbc: JUMPDEST 
0xbd: V43 = 0x168
0xc0: V44 = 0x4
0xc4: V45 = CALLDATALOAD 0x4
0xc5: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xda: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xdc: V48 = 0x20
0xde: V49 = ADD 0x20 0x4
0xe3: V50 = CALLDATALOAD 0x24
0xe5: V51 = 0x20
0xe7: V52 = ADD 0x20 0x24
0xea: V53 = ADD 0x4 V50
0xec: V54 = CALLDATALOAD V53
0xee: V55 = 0x20
0xf0: V56 = ADD 0x20 V53
0xf4: V57 = 0x20
0xf6: V58 = MUL 0x20 V54
0xf7: V59 = 0x20
0xf9: V60 = ADD 0x20 V58
0xfa: V61 = 0x40
0xfc: V62 = M[0x40]
0xff: V63 = ADD V62 V60
0x100: V64 = 0x40
0x102: M[0x40] = V63
0x10a: M[V62] = V54
0x10b: V65 = 0x20
0x10d: V66 = ADD 0x20 V62
0x110: V67 = 0x20
0x112: V68 = MUL 0x20 V54
0x116: CALLDATACOPY V66 V56 V68
0x118: V69 = ADD V66 V68
0x123: V70 = CALLDATALOAD 0x44
0x125: V71 = 0x20
0x127: V72 = ADD 0x20 0x44
0x12a: V73 = ADD 0x4 V70
0x12c: V74 = CALLDATALOAD V73
0x12e: V75 = 0x20
0x130: V76 = ADD 0x20 V73
0x134: V77 = 0x20
0x136: V78 = MUL 0x20 V74
0x137: V79 = 0x20
0x139: V80 = ADD 0x20 V78
0x13a: V81 = 0x40
0x13c: V82 = M[0x40]
0x13f: V83 = ADD V82 V80
0x140: V84 = 0x40
0x142: M[0x40] = V83
0x14a: M[V82] = V74
0x14b: V85 = 0x20
0x14d: V86 = ADD 0x20 V82
0x150: V87 = 0x20
0x152: V88 = MUL 0x20 V74
0x156: CALLDATACOPY V86 V76 V88
0x158: V89 = ADD V86 V88
0x164: V90 = 0x1dc
0x167: JUMP 0x1dc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x168, V47, V62, V82]
Exit stack: [V11, 0x168, V47, V62, V82]

================================

Block 0x168
[0x168:0x17d]
---
Predecessors: [0x33d]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP3
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP2
0x174 POP
0x175 POP
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a SWAP2
0x17b SUB
0x17c SWAP1
0x17d RETURN
---
0x168: JUMPDEST 
0x169: V91 = 0x40
0x16b: V92 = M[0x40]
0x16f: M[V92] = S0
0x170: V93 = 0x20
0x172: V94 = ADD 0x20 V92
0x176: V95 = 0x40
0x178: V96 = M[0x40]
0x17b: V97 = SUB V94 V96
0x17d: RETURN V96 V97
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0x4c]
Successors: [0x185, 0x189]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x17e: JUMPDEST 
0x17f: V98 = CALLVALUE
0x180: V99 = ISZERO V98
0x181: V100 = 0x189
0x184: JUMPI 0x189 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x17e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V101 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x1b4]
---
Predecessors: [0x17e]
Successors: [0x348]
---
0x189 JUMPDEST
0x18a PUSH2 0x1b5
0x18d PUSH1 0x4
0x18f DUP1
0x190 DUP1
0x191 CALLDATALOAD
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 SWAP1
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP1
0x1ad SWAP2
0x1ae SWAP1
0x1af POP
0x1b0 POP
0x1b1 PUSH2 0x348
0x1b4 JUMP
---
0x189: JUMPDEST 
0x18a: V102 = 0x1b5
0x18d: V103 = 0x4
0x191: V104 = CALLDATALOAD 0x4
0x192: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1a9: V107 = 0x20
0x1ab: V108 = ADD 0x20 0x4
0x1b1: V109 = 0x348
0x1b4: JUMP 0x348
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1b5, V106]
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x1b5
[0x1b5:0x1b6]
---
Predecessors: [0x41a]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 STOP
---
0x1b5: JUMPDEST 
0x1b6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b7
[0x1b7:0x1db]
---
Predecessors: [0x67]
Successors: [0x6f]
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb SWAP1
0x1bc SLOAD
0x1bd SWAP1
0x1be PUSH2 0x100
0x1c1 EXP
0x1c2 SWAP1
0x1c3 DIV
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da DUP2
0x1db JUMP
---
0x1b7: JUMPDEST 
0x1b8: V110 = 0x0
0x1bc: V111 = S[0x0]
0x1be: V112 = 0x100
0x1c1: V113 = EXP 0x100 0x0
0x1c3: V114 = DIV V111 0x1
0x1c4: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1db: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: [S0, V116]
Exit stack: [V11, 0x6f, V116]

================================

Block 0x1dc
[0x1dc:0x235]
---
Predecessors: [0xbc]
Successors: [0x236, 0x23a]
---
0x1dc JUMPDEST
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 SWAP1
0x1e4 SLOAD
0x1e5 SWAP1
0x1e6 PUSH2 0x100
0x1e9 EXP
0x1ea SWAP1
0x1eb DIV
0x1ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x201 AND
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 CALLER
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f EQ
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V117 = 0x0
0x1e0: V118 = 0x0
0x1e4: V119 = S[0x0]
0x1e6: V120 = 0x100
0x1e9: V121 = EXP 0x100 0x0
0x1eb: V122 = DIV V119 0x1
0x1ec: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x201: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x202: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x218: V127 = CALLER
0x219: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x22f: V130 = EQ V129 V126
0x230: V131 = ISZERO V130
0x231: V132 = ISZERO V131
0x232: V133 = 0x23a
0x235: JUMPI 0x23a V132
---
Entry stack: [V11, 0x168, V47, V62, V82]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x1dc]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V134 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]

================================

Block 0x23a
[0x23a:0x242]
---
Predecessors: [0x1dc]
Successors: [0x243]
---
0x23a JUMPDEST
0x23b PUSH1 0x0
0x23d SWAP1
0x23e POP
0x23f PUSH1 0x0
0x241 SWAP1
0x242 POP
---
0x23a: JUMPDEST 
0x23b: V135 = 0x0
0x23f: V136 = 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]

================================

Block 0x243
[0x243:0x24c]
---
Predecessors: [0x23a, 0x32d]
Successors: [0x24d, 0x33d]
---
0x243 JUMPDEST
0x244 DUP4
0x245 MLOAD
0x246 DUP2
0x247 LT
0x248 ISZERO
0x249 PUSH2 0x33d
0x24c JUMPI
---
0x243: JUMPDEST 
0x245: V137 = M[V62]
0x247: V138 = LT S0 V137
0x248: V139 = ISZERO V138
0x249: V140 = 0x33d
0x24c: JUMPI 0x33d V139
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S0]

================================

Block 0x24d
[0x24d:0x274]
---
Predecessors: [0x243]
Successors: [0x275, 0x276]
---
0x24d DUP5
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 PUSH4 0xa9059cbb
0x269 DUP6
0x26a DUP4
0x26b DUP2
0x26c MLOAD
0x26d DUP2
0x26e LT
0x26f ISZERO
0x270 ISZERO
0x271 PUSH2 0x276
0x274 JUMPI
---
0x24e: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x264: V143 = 0xa9059cbb
0x26c: V144 = M[V62]
0x26e: V145 = LT S0 V144
0x26f: V146 = ISZERO V145
0x270: V147 = ISZERO V146
0x271: V148 = 0x276
0x274: JUMPI 0x276 V147
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V142, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S0, V142, 0xa9059cbb, V62, S0]

================================

Block 0x275
[0x275:0x275]
---
Predecessors: [0x24d]
Successors: []
---
0x275 INVALID
---
0x275: INVALID 
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V142, 0xa9059cbb, V62, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V142, 0xa9059cbb, V62, S0]

================================

Block 0x276
[0x276:0x28c]
---
Predecessors: [0x24d]
Successors: [0x28d, 0x28e]
---
0x276 JUMPDEST
0x277 SWAP1
0x278 PUSH1 0x20
0x27a ADD
0x27b SWAP1
0x27c PUSH1 0x20
0x27e MUL
0x27f ADD
0x280 MLOAD
0x281 DUP6
0x282 DUP5
0x283 DUP2
0x284 MLOAD
0x285 DUP2
0x286 LT
0x287 ISZERO
0x288 ISZERO
0x289 PUSH2 0x28e
0x28c JUMPI
---
0x276: JUMPDEST 
0x278: V149 = 0x20
0x27a: V150 = ADD 0x20 V62
0x27c: V151 = 0x20
0x27e: V152 = MUL 0x20 S0
0x27f: V153 = ADD V152 V150
0x280: V154 = M[V153]
0x284: V155 = M[V82]
0x286: V156 = LT S4 V155
0x287: V157 = ISZERO V156
0x288: V158 = ISZERO V157
0x289: V159 = 0x28e
0x28c: JUMPI 0x28e V158
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V142, 0xa9059cbb, V62, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V154, S6, S4]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V142, 0xa9059cbb, V154, V82, S4]

================================

Block 0x28d
[0x28d:0x28d]
---
Predecessors: [0x276]
Successors: []
---
0x28d INVALID
---
0x28d: INVALID 
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V142, 0xa9059cbb, V154, V82, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V142, 0xa9059cbb, V154, V82, S0]

================================

Block 0x28e
[0x28e:0x317]
---
Predecessors: [0x276]
Successors: [0x318, 0x31c]
---
0x28e JUMPDEST
0x28f SWAP1
0x290 PUSH1 0x20
0x292 ADD
0x293 SWAP1
0x294 PUSH1 0x20
0x296 MUL
0x297 ADD
0x298 MLOAD
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP4
0x29d PUSH4 0xffffffff
0x2a2 AND
0x2a3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c1 MUL
0x2c2 DUP2
0x2c3 MSTORE
0x2c4 PUSH1 0x4
0x2c6 ADD
0x2c7 DUP1
0x2c8 DUP4
0x2c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2de AND
0x2df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f4 AND
0x2f5 DUP2
0x2f6 MSTORE
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa DUP3
0x2fb DUP2
0x2fc MSTORE
0x2fd PUSH1 0x20
0x2ff ADD
0x300 SWAP3
0x301 POP
0x302 POP
0x303 POP
0x304 PUSH1 0x0
0x306 PUSH1 0x40
0x308 MLOAD
0x309 DUP1
0x30a DUP4
0x30b SUB
0x30c DUP2
0x30d PUSH1 0x0
0x30f DUP8
0x310 DUP1
0x311 EXTCODESIZE
0x312 ISZERO
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x28e: JUMPDEST 
0x290: V160 = 0x20
0x292: V161 = ADD 0x20 V82
0x294: V162 = 0x20
0x296: V163 = MUL 0x20 S0
0x297: V164 = ADD V163 V161
0x298: V165 = M[V164]
0x299: V166 = 0x40
0x29b: V167 = M[0x40]
0x29d: V168 = 0xffffffff
0x2a2: V169 = AND 0xffffffff 0xa9059cbb
0x2a3: V170 = 0x100000000000000000000000000000000000000000000000000000000
0x2c1: V171 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2c3: M[V167] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2c4: V172 = 0x4
0x2c6: V173 = ADD 0x4 V167
0x2c9: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x2df: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2f6: M[V173] = V177
0x2f7: V178 = 0x20
0x2f9: V179 = ADD 0x20 V173
0x2fc: M[V179] = V165
0x2fd: V180 = 0x20
0x2ff: V181 = ADD 0x20 V179
0x304: V182 = 0x0
0x306: V183 = 0x40
0x308: V184 = M[0x40]
0x30b: V185 = SUB V181 V184
0x30d: V186 = 0x0
0x311: V187 = EXTCODESIZE V142
0x312: V188 = ISZERO V187
0x313: V189 = ISZERO V188
0x314: V190 = 0x31c
0x317: JUMPI 0x31c V189
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V142, 0xa9059cbb, V154, V82, S0]
Stack pops: 5
Stack additions: [S4, S3, V181, 0x0, V184, V185, V184, 0x0, S4]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V142, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V142]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x28e]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V191 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V142, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V142, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V142]

================================

Block 0x31c
[0x31c:0x328]
---
Predecessors: [0x28e]
Successors: [0x329, 0x32d]
---
0x31c JUMPDEST
0x31d PUSH2 0x2c6
0x320 GAS
0x321 SUB
0x322 CALL
0x323 ISZERO
0x324 ISZERO
0x325 PUSH2 0x32d
0x328 JUMPI
---
0x31c: JUMPDEST 
0x31d: V192 = 0x2c6
0x320: V193 = GAS
0x321: V194 = SUB V193 0x2c6
0x322: V195 = CALL V194 V142 0x0 V184 V185 V184 0x0
0x323: V196 = ISZERO V195
0x324: V197 = ISZERO V196
0x325: V198 = 0x32d
0x328: JUMPI 0x32d V197
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V142, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V142]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V142, 0xa9059cbb, V181]

================================

Block 0x329
[0x329:0x32c]
---
Predecessors: [0x31c]
Successors: []
---
0x329 PUSH1 0x0
0x32b DUP1
0x32c REVERT
---
0x329: V199 = 0x0
0x32c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S3, V142, 0xa9059cbb, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S3, V142, 0xa9059cbb, V181]

================================

Block 0x32d
[0x32d:0x33c]
---
Predecessors: [0x31c]
Successors: [0x243]
---
0x32d JUMPDEST
0x32e POP
0x32f POP
0x330 POP
0x331 DUP1
0x332 DUP1
0x333 PUSH1 0x1
0x335 ADD
0x336 SWAP2
0x337 POP
0x338 POP
0x339 PUSH2 0x243
0x33c JUMP
---
0x32d: JUMPDEST 
0x333: V200 = 0x1
0x335: V201 = ADD 0x1 S3
0x339: V202 = 0x243
0x33c: JUMP 0x243
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S3, V142, 0xa9059cbb, V181]
Stack pops: 4
Stack additions: [V201]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, V201]

================================

Block 0x33d
[0x33d:0x347]
---
Predecessors: [0x243]
Successors: [0x168]
---
0x33d JUMPDEST
0x33e DUP1
0x33f SWAP2
0x340 POP
0x341 POP
0x342 SWAP4
0x343 SWAP3
0x344 POP
0x345 POP
0x346 POP
0x347 JUMP
---
0x33d: JUMPDEST 
0x347: JUMP 0x168
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x348
[0x348:0x39e]
---
Predecessors: [0x189]
Successors: [0x39f, 0x3a3]
---
0x348 JUMPDEST
0x349 PUSH1 0x0
0x34b DUP1
0x34c SWAP1
0x34d SLOAD
0x34e SWAP1
0x34f PUSH2 0x100
0x352 EXP
0x353 SWAP1
0x354 DIV
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x380 AND
0x381 CALLER
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 EQ
0x399 ISZERO
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x348: JUMPDEST 
0x349: V203 = 0x0
0x34d: V204 = S[0x0]
0x34f: V205 = 0x100
0x352: V206 = EXP 0x100 0x0
0x354: V207 = DIV V204 0x1
0x355: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x36b: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x380: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x381: V212 = CALLER
0x382: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x398: V215 = EQ V214 V211
0x399: V216 = ISZERO V215
0x39a: V217 = ISZERO V216
0x39b: V218 = 0x3a3
0x39e: JUMPI 0x3a3 V217
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x348]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V219 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x3a3
[0x3a3:0x3d9]
---
Predecessors: [0x348]
Successors: [0x3da, 0x41a]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x0
0x3a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bb AND
0x3bc DUP2
0x3bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d2 AND
0x3d3 EQ
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 PUSH2 0x41a
0x3d9 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V220 = 0x0
0x3a6: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bb: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3bd: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x3d3: V225 = EQ V224 0x0
0x3d4: V226 = ISZERO V225
0x3d5: V227 = ISZERO V226
0x3d6: V228 = 0x41a
0x3d9: JUMPI 0x41a V227
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x3da
[0x3da:0x419]
---
Predecessors: [0x3a3]
Successors: [0x41a]
---
0x3da DUP1
0x3db PUSH1 0x0
0x3dd DUP1
0x3de PUSH2 0x100
0x3e1 EXP
0x3e2 DUP2
0x3e3 SLOAD
0x3e4 DUP2
0x3e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fa MUL
0x3fb NOT
0x3fc AND
0x3fd SWAP1
0x3fe DUP4
0x3ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x414 AND
0x415 MUL
0x416 OR
0x417 SWAP1
0x418 SSTORE
0x419 POP
---
0x3db: V229 = 0x0
0x3de: V230 = 0x100
0x3e1: V231 = EXP 0x100 0x0
0x3e3: V232 = S[0x0]
0x3e5: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fa: V234 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3fb: V235 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V236 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V232
0x3ff: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x414: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x415: V239 = MUL V238 0x1
0x416: V240 = OR V239 V236
0x418: S[0x0] = V240
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x41a
[0x41a:0x41c]
---
Predecessors: [0x3a3, 0x3da]
Successors: [0x1b5]
---
0x41a JUMPDEST
0x41b POP
0x41c JUMP
---
0x41a: JUMPDEST 
0x41c: JUMP 0x1b5
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x41d
[0x41d:0x455]
---
Predecessors: []
Successors: [0x456]
---
0x41d STOP
0x41e LOG1
0x41f PUSH6 0x627a7a723058
0x426 SHA3
0x427 PUSH14 0xc5c6ca94792afcbf72699e0cbbc9
0x436 LOG0
0x437 CALLDATASIZE
0x438 PUSH22 0x3c73429dbc60f1ffd1ab8d1a72200029606060405260
0x44f DIV
0x450 CALLDATASIZE
0x451 LT
0x452 PUSH2 0x4c
0x455 JUMPI
---
0x41d: STOP 
0x41e: LOG S0 S1 S2
0x41f: V241 = 0x627a7a723058
0x426: V242 = SHA3 0x627a7a723058 S3
0x427: V243 = 0xc5c6ca94792afcbf72699e0cbbc9
0x436: LOG 0xc5c6ca94792afcbf72699e0cbbc9 V242
0x437: V244 = CALLDATASIZE
0x438: V245 = 0x3c73429dbc60f1ffd1ab8d1a72200029606060405260
0x44f: V246 = DIV 0x3c73429dbc60f1ffd1ab8d1a72200029606060405260 V244
0x450: V247 = CALLDATASIZE
0x451: V248 = LT V247 V246
0x452: V249 = 0x4c
0x455: THROWI V248
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x456
[0x456:0x489]
---
Predecessors: [0x41d]
Successors: [0x48a]
---
0x456 PUSH1 0x0
0x458 CALLDATALOAD
0x459 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x477 SWAP1
0x478 DIV
0x479 PUSH4 0xffffffff
0x47e AND
0x47f DUP1
0x480 PUSH4 0x8da5cb5b
0x485 EQ
0x486 PUSH2 0x51
0x489 JUMPI
---
0x456: V250 = 0x0
0x458: V251 = CALLDATALOAD 0x0
0x459: V252 = 0x100000000000000000000000000000000000000000000000000000000
0x478: V253 = DIV V251 0x100000000000000000000000000000000000000000000000000000000
0x479: V254 = 0xffffffff
0x47e: V255 = AND 0xffffffff V253
0x480: V256 = 0x8da5cb5b
0x485: V257 = EQ 0x8da5cb5b V255
0x486: V258 = 0x51
0x489: THROWI V257
---
Entry stack: []
Stack pops: 0
Stack additions: [V255]
Exit stack: [V255]

================================

Block 0x48a
[0x48a:0x494]
---
Predecessors: [0x456]
Successors: [0x495]
---
0x48a DUP1
0x48b PUSH4 0xf2fde38b
0x490 EQ
0x491 PUSH2 0xa6
0x494 JUMPI
---
0x48b: V259 = 0xf2fde38b
0x490: V260 = EQ 0xf2fde38b V255
0x491: V261 = 0xa6
0x494: THROWI V260
---
Entry stack: [V255]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V255]

================================

Block 0x495
[0x495:0x4a0]
---
Predecessors: [0x48a]
Successors: [0x5c, 0x4a1]
---
0x495 JUMPDEST
0x496 PUSH1 0x0
0x498 DUP1
0x499 REVERT
0x49a JUMPDEST
0x49b CALLVALUE
0x49c ISZERO
0x49d PUSH2 0x5c
0x4a0 JUMPI
---
0x495: JUMPDEST 
0x496: V262 = 0x0
0x499: REVERT 0x0 0x0
0x49a: JUMPDEST 
0x49b: V263 = CALLVALUE
0x49c: V264 = ISZERO V263
0x49d: V265 = 0x5c
0x4a0: JUMPI 0x5c V264
---
Entry stack: [V255]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4a1
[0x4a1:0x4f5]
---
Predecessors: [0x495]
Successors: [0xb1, 0x4f6]
---
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 REVERT
0x4a5 JUMPDEST
0x4a6 PUSH2 0x64
0x4a9 PUSH2 0xdf
0x4ac JUMP
0x4ad JUMPDEST
0x4ae PUSH1 0x40
0x4b0 MLOAD
0x4b1 DUP1
0x4b2 DUP3
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 AND
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df DUP2
0x4e0 MSTORE
0x4e1 PUSH1 0x20
0x4e3 ADD
0x4e4 SWAP2
0x4e5 POP
0x4e6 POP
0x4e7 PUSH1 0x40
0x4e9 MLOAD
0x4ea DUP1
0x4eb SWAP2
0x4ec SUB
0x4ed SWAP1
0x4ee RETURN
0x4ef JUMPDEST
0x4f0 CALLVALUE
0x4f1 ISZERO
0x4f2 PUSH2 0xb1
0x4f5 JUMPI
---
0x4a1: V266 = 0x0
0x4a4: REVERT 0x0 0x0
0x4a5: JUMPDEST 
0x4a6: V267 = 0x64
0x4a9: V268 = 0xdf
0x4ac: THROW 
0x4ad: JUMPDEST 
0x4ae: V269 = 0x40
0x4b0: V270 = M[0x40]
0x4b3: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4c9: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x4e0: M[V270] = V274
0x4e1: V275 = 0x20
0x4e3: V276 = ADD 0x20 V270
0x4e7: V277 = 0x40
0x4e9: V278 = M[0x40]
0x4ec: V279 = SUB V276 V278
0x4ee: RETURN V278 V279
0x4ef: JUMPDEST 
0x4f0: V280 = CALLVALUE
0x4f1: V281 = ISZERO V280
0x4f2: V282 = 0xb1
0x4f5: JUMPI 0xb1 V281
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x4f6
[0x4f6:0x5a3]
---
Predecessors: [0x4a1]
Successors: [0x5a4]
---
0x4f6 PUSH1 0x0
0x4f8 DUP1
0x4f9 REVERT
0x4fa JUMPDEST
0x4fb PUSH2 0xdd
0x4fe PUSH1 0x4
0x500 DUP1
0x501 DUP1
0x502 CALLDATALOAD
0x503 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x518 AND
0x519 SWAP1
0x51a PUSH1 0x20
0x51c ADD
0x51d SWAP1
0x51e SWAP2
0x51f SWAP1
0x520 POP
0x521 POP
0x522 PUSH2 0x104
0x525 JUMP
0x526 JUMPDEST
0x527 STOP
0x528 JUMPDEST
0x529 PUSH1 0x0
0x52b DUP1
0x52c SWAP1
0x52d SLOAD
0x52e SWAP1
0x52f PUSH2 0x100
0x532 EXP
0x533 SWAP1
0x534 DIV
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b DUP2
0x54c JUMP
0x54d JUMPDEST
0x54e PUSH1 0x0
0x550 DUP1
0x551 SWAP1
0x552 SLOAD
0x553 SWAP1
0x554 PUSH2 0x100
0x557 EXP
0x558 SWAP1
0x559 DIV
0x55a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56f AND
0x570 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x585 AND
0x586 CALLER
0x587 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59c AND
0x59d EQ
0x59e ISZERO
0x59f ISZERO
0x5a0 PUSH2 0x15f
0x5a3 JUMPI
---
0x4f6: V283 = 0x0
0x4f9: REVERT 0x0 0x0
0x4fa: JUMPDEST 
0x4fb: V284 = 0xdd
0x4fe: V285 = 0x4
0x502: V286 = CALLDATALOAD 0x4
0x503: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x518: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x51a: V289 = 0x20
0x51c: V290 = ADD 0x20 0x4
0x522: V291 = 0x104
0x525: THROW 
0x526: JUMPDEST 
0x527: STOP 
0x528: JUMPDEST 
0x529: V292 = 0x0
0x52d: V293 = S[0x0]
0x52f: V294 = 0x100
0x532: V295 = EXP 0x100 0x0
0x534: V296 = DIV V293 0x1
0x535: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x54c: JUMP S0
0x54d: JUMPDEST 
0x54e: V299 = 0x0
0x552: V300 = S[0x0]
0x554: V301 = 0x100
0x557: V302 = EXP 0x100 0x0
0x559: V303 = DIV V300 0x1
0x55a: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x56f: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x570: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x585: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x586: V308 = CALLER
0x587: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x59c: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x59d: V311 = EQ V310 V307
0x59e: V312 = ISZERO V311
0x59f: V313 = ISZERO V312
0x5a0: V314 = 0x15f
0x5a3: THROWI V313
---
Entry stack: []
Stack pops: 0
Stack additions: [V288, 0xdd, V298, S0]
Exit stack: []

================================

Block 0x5a4
[0x5a4:0x5de]
---
Predecessors: [0x4f6]
Successors: [0x5df]
---
0x5a4 PUSH1 0x0
0x5a6 DUP1
0x5a7 REVERT
0x5a8 JUMPDEST
0x5a9 PUSH1 0x0
0x5ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c0 AND
0x5c1 DUP2
0x5c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d7 AND
0x5d8 EQ
0x5d9 ISZERO
0x5da ISZERO
0x5db PUSH2 0x1d6
0x5de JUMPI
---
0x5a4: V315 = 0x0
0x5a7: REVERT 0x0 0x0
0x5a8: JUMPDEST 
0x5a9: V316 = 0x0
0x5ab: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c0: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5c2: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5d8: V321 = EQ V320 0x0
0x5d9: V322 = ISZERO V321
0x5da: V323 = ISZERO V322
0x5db: V324 = 0x1d6
0x5de: THROWI V323
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x5df
[0x5df:0x61e]
---
Predecessors: [0x5a4]
Successors: [0x61f]
---
0x5df DUP1
0x5e0 PUSH1 0x0
0x5e2 DUP1
0x5e3 PUSH2 0x100
0x5e6 EXP
0x5e7 DUP2
0x5e8 SLOAD
0x5e9 DUP2
0x5ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ff MUL
0x600 NOT
0x601 AND
0x602 SWAP1
0x603 DUP4
0x604 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x619 AND
0x61a MUL
0x61b OR
0x61c SWAP1
0x61d SSTORE
0x61e POP
---
0x5e0: V325 = 0x0
0x5e3: V326 = 0x100
0x5e6: V327 = EXP 0x100 0x0
0x5e8: V328 = S[0x0]
0x5ea: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ff: V330 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x600: V331 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x601: V332 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V328
0x604: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x619: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x61a: V335 = MUL V334 0x1
0x61b: V336 = OR V335 V332
0x61d: S[0x0] = V336
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x61f
[0x61f:0x64d]
---
Predecessors: [0x5df]
Successors: []
---
0x61f JUMPDEST
0x620 POP
0x621 JUMP
0x622 STOP
0x623 LOG1
0x624 PUSH6 0x627a7a723058
0x62b SHA3
0x62c MISSING 0xc4
0x62d MISSING 0xc8
0x62e MISSING 0x5c
0x62f PUSH5 0x6d412d7e2
0x635 MISSING 0xef
0x636 MISSING 0xaf
0x637 MISSING 0xa5
0x638 MISSING 0xe7
0x639 POP
0x63a DELEGATECALL
0x63b MISSING 0x2f
0x63c ADD
0x63d SWAP12
0x63e MISSING 0x4c
0x63f MISSING 0x21
0x640 MISSING 0x2b
0x641 EXTCODESIZE
0x642 MISSING 0xfc
0x643 NUMBER
0x644 SUB
0x645 MISSING 0xb1
0x646 POP
0x647 ADDMOD
0x648 SWAP6
0x649 AND
0x64a MISSING 0xb3
0x64b MISSING 0xb0
0x64c STOP
0x64d MISSING 0x29
---
0x61f: JUMPDEST 
0x621: JUMP S1
0x622: STOP 
0x623: LOG S0 S1 S2
0x624: V337 = 0x627a7a723058
0x62b: V338 = SHA3 0x627a7a723058 S3
0x62c: MISSING 0xc4
0x62d: MISSING 0xc8
0x62e: MISSING 0x5c
0x62f: V339 = 0x6d412d7e2
0x635: MISSING 0xef
0x636: MISSING 0xaf
0x637: MISSING 0xa5
0x638: MISSING 0xe7
0x63a: V340 = DELEGATECALL S1 S2 S3 S4 S5 S6
0x63b: MISSING 0x2f
0x63c: V341 = ADD S0 S1
0x63e: MISSING 0x4c
0x63f: MISSING 0x21
0x640: MISSING 0x2b
0x641: V342 = EXTCODESIZE S0
0x642: MISSING 0xfc
0x643: V343 = NUMBER
0x644: V344 = SUB V343 S0
0x645: MISSING 0xb1
0x647: V345 = ADDMOD S1 S2 S3
0x649: V346 = AND S9 S4
0x64a: MISSING 0xb3
0x64b: MISSING 0xb0
0x64c: STOP 
0x64d: MISSING 0x29
---
Entry stack: [S0]
Stack pops: 485456
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x1b7

Function 1:
Public function signature: 0xad8733ca
Entry block: 0xb1
Exit block: 0x329
Body: 0xb1, 0xb8, 0xbc, 0x168, 0x1dc, 0x236, 0x23a, 0x243, 0x24d, 0x275, 0x276, 0x28d, 0x28e, 0x318, 0x31c, 0x329, 0x32d, 0x33d

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x17e
Exit block: 0x1b5
Body: 0x17e, 0x185, 0x189, 0x1b5, 0x348, 0x39f, 0x3a3, 0x3da, 0x41a

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

