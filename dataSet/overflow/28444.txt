Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ce0a093
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ce0a093
0x3c: V13 = EQ 0x3ce0a093 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x113]
---
0x41 DUP1
0x42 PUSH4 0x796c5e5b
0x47 EQ
0x48 PUSH2 0x113
0x4b JUMPI
---
0x42: V15 = 0x796c5e5b
0x47: V16 = EQ 0x796c5e5b V11
0x48: V17 = 0x113
0x4b: JUMPI 0x113 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x194]
---
0x4c DUP1
0x4d PUSH4 0xa6f9dae1
0x52 EQ
0x53 PUSH2 0x194
0x56 JUMPI
---
0x4d: V18 = 0xa6f9dae1
0x52: V19 = EQ 0xa6f9dae1 V11
0x53: V20 = 0x194
0x56: JUMPI 0x194 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x97]
---
Predecessors: [0x5c]
Successors: [0x1cd]
---
0x67 JUMPDEST
0x68 PUSH2 0x98
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x89 NOT
0x8a AND
0x8b SWAP1
0x8c PUSH1 0x20
0x8e ADD
0x8f SWAP1
0x90 SWAP2
0x91 SWAP1
0x92 POP
0x93 POP
0x94 PUSH2 0x1cd
0x97 JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x98
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x70: V29 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x89: V30 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x8a: V31 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V28
0x8c: V32 = 0x20
0x8e: V33 = ADD 0x20 0x4
0x94: V34 = 0x1cd
0x97: JUMP 0x1cd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98, V31]
Exit stack: [V11, 0x98, V31]

================================

Block 0x98
[0x98:0xbc]
---
Predecessors: [0x31f]
Successors: [0xbd]
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d DUP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 DUP3
0xa2 DUP2
0xa3 SUB
0xa4 DUP3
0xa5 MSTORE
0xa6 DUP4
0xa7 DUP2
0xa8 DUP2
0xa9 MLOAD
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf SWAP2
0xb0 POP
0xb1 DUP1
0xb2 MLOAD
0xb3 SWAP1
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP1
0xb8 DUP1
0xb9 DUP4
0xba DUP4
0xbb PUSH1 0x0
---
0x98: JUMPDEST 
0x99: V35 = 0x40
0x9b: V36 = M[0x40]
0x9e: V37 = 0x20
0xa0: V38 = ADD 0x20 V36
0xa3: V39 = SUB V38 V36
0xa5: M[V36] = V39
0xa9: V40 = M[V189]
0xab: M[V38] = V40
0xac: V41 = 0x20
0xae: V42 = ADD 0x20 V38
0xb2: V43 = M[V189]
0xb4: V44 = 0x20
0xb6: V45 = ADD 0x20 V189
0xbb: V46 = 0x0
---
Entry stack: [V11, V189]
Stack pops: 1
Stack additions: [S0, V36, V36, V42, V45, V43, V43, V42, V45, 0x0]
Exit stack: [V11, V189, V36, V36, V42, V45, V43, V43, V42, V45, 0x0]

================================

Block 0xbd
[0xbd:0xc5]
---
Predecessors: [0x98, 0xc6]
Successors: [0xc6, 0xd8]
---
0xbd JUMPDEST
0xbe DUP4
0xbf DUP2
0xc0 LT
0xc1 ISZERO
0xc2 PUSH2 0xd8
0xc5 JUMPI
---
0xbd: JUMPDEST 
0xc0: V47 = LT S0 V43
0xc1: V48 = ISZERO V47
0xc2: V49 = 0xd8
0xc5: JUMPI 0xd8 V48
---
Entry stack: [V11, V189, V36, V36, V42, V45, V43, V43, V42, V45, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V189, V36, V36, V42, V45, V43, V43, V42, V45, S0]

================================

Block 0xc6
[0xc6:0xd7]
---
Predecessors: [0xbd]
Successors: [0xbd]
---
0xc6 DUP1
0xc7 DUP3
0xc8 ADD
0xc9 MLOAD
0xca DUP2
0xcb DUP5
0xcc ADD
0xcd MSTORE
0xce PUSH1 0x20
0xd0 DUP2
0xd1 ADD
0xd2 SWAP1
0xd3 POP
0xd4 PUSH2 0xbd
0xd7 JUMP
---
0xc8: V50 = ADD V45 S0
0xc9: V51 = M[V50]
0xcc: V52 = ADD V42 S0
0xcd: M[V52] = V51
0xce: V53 = 0x20
0xd1: V54 = ADD S0 0x20
0xd4: V55 = 0xbd
0xd7: JUMP 0xbd
---
Entry stack: [V11, V189, V36, V36, V42, V45, V43, V43, V42, V45, S0]
Stack pops: 3
Stack additions: [S2, S1, V54]
Exit stack: [V11, V189, V36, V36, V42, V45, V43, V43, V42, V45, V54]

================================

Block 0xd8
[0xd8:0xeb]
---
Predecessors: [0xbd]
Successors: [0xec, 0x105]
---
0xd8 JUMPDEST
0xd9 POP
0xda POP
0xdb POP
0xdc POP
0xdd SWAP1
0xde POP
0xdf SWAP1
0xe0 DUP2
0xe1 ADD
0xe2 SWAP1
0xe3 PUSH1 0x1f
0xe5 AND
0xe6 DUP1
0xe7 ISZERO
0xe8 PUSH2 0x105
0xeb JUMPI
---
0xd8: JUMPDEST 
0xe1: V56 = ADD V43 V42
0xe3: V57 = 0x1f
0xe5: V58 = AND 0x1f V43
0xe7: V59 = ISZERO V58
0xe8: V60 = 0x105
0xeb: JUMPI 0x105 V59
---
Entry stack: [V11, V189, V36, V36, V42, V45, V43, V43, V42, V45, S0]
Stack pops: 7
Stack additions: [V56, V58]
Exit stack: [V11, V189, V36, V36, V56, V58]

================================

Block 0xec
[0xec:0x104]
---
Predecessors: [0xd8]
Successors: [0x105]
---
0xec DUP1
0xed DUP3
0xee SUB
0xef DUP1
0xf0 MLOAD
0xf1 PUSH1 0x1
0xf3 DUP4
0xf4 PUSH1 0x20
0xf6 SUB
0xf7 PUSH2 0x100
0xfa EXP
0xfb SUB
0xfc NOT
0xfd AND
0xfe DUP2
0xff MSTORE
0x100 PUSH1 0x20
0x102 ADD
0x103 SWAP2
0x104 POP
---
0xee: V61 = SUB V56 V58
0xf0: V62 = M[V61]
0xf1: V63 = 0x1
0xf4: V64 = 0x20
0xf6: V65 = SUB 0x20 V58
0xf7: V66 = 0x100
0xfa: V67 = EXP 0x100 V65
0xfb: V68 = SUB V67 0x1
0xfc: V69 = NOT V68
0xfd: V70 = AND V69 V62
0xff: M[V61] = V70
0x100: V71 = 0x20
0x102: V72 = ADD 0x20 V61
---
Entry stack: [V11, V189, V36, V36, V56, V58]
Stack pops: 2
Stack additions: [V72, S0]
Exit stack: [V11, V189, V36, V36, V72, V58]

================================

Block 0x105
[0x105:0x112]
---
Predecessors: [0xd8, 0xec]
Successors: []
---
0x105 JUMPDEST
0x106 POP
0x107 SWAP3
0x108 POP
0x109 POP
0x10a POP
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f SWAP2
0x110 SUB
0x111 SWAP1
0x112 RETURN
---
0x105: JUMPDEST 
0x10b: V73 = 0x40
0x10d: V74 = M[0x40]
0x110: V75 = SUB S1 V74
0x112: RETURN V74 V75
---
Entry stack: [V11, V189, V36, V36, S1, V58]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x41]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V76 = CALLVALUE
0x115: V77 = ISZERO V76
0x116: V78 = 0x11e
0x119: JUMPI 0x11e V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V79 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11e
[0x11e:0x191]
---
Predecessors: [0x113]
Successors: [0x32b]
---
0x11e JUMPDEST
0x11f PUSH2 0x192
0x122 PUSH1 0x4
0x124 DUP1
0x125 DUP1
0x126 CALLDATALOAD
0x127 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x140 NOT
0x141 AND
0x142 SWAP1
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP1
0x147 SWAP2
0x148 SWAP1
0x149 DUP1
0x14a CALLDATALOAD
0x14b SWAP1
0x14c PUSH1 0x20
0x14e ADD
0x14f SWAP1
0x150 DUP3
0x151 ADD
0x152 DUP1
0x153 CALLDATALOAD
0x154 SWAP1
0x155 PUSH1 0x20
0x157 ADD
0x158 SWAP1
0x159 DUP1
0x15a DUP1
0x15b PUSH1 0x1f
0x15d ADD
0x15e PUSH1 0x20
0x160 DUP1
0x161 SWAP2
0x162 DIV
0x163 MUL
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH1 0x40
0x169 MLOAD
0x16a SWAP1
0x16b DUP2
0x16c ADD
0x16d PUSH1 0x40
0x16f MSTORE
0x170 DUP1
0x171 SWAP4
0x172 SWAP3
0x173 SWAP2
0x174 SWAP1
0x175 DUP2
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b DUP4
0x17c DUP4
0x17d DUP1
0x17e DUP3
0x17f DUP5
0x180 CALLDATACOPY
0x181 DUP3
0x182 ADD
0x183 SWAP2
0x184 POP
0x185 POP
0x186 POP
0x187 POP
0x188 POP
0x189 POP
0x18a SWAP2
0x18b SWAP1
0x18c POP
0x18d POP
0x18e PUSH2 0x32b
0x191 JUMP
---
0x11e: JUMPDEST 
0x11f: V80 = 0x192
0x122: V81 = 0x4
0x126: V82 = CALLDATALOAD 0x4
0x127: V83 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x140: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x141: V85 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V82
0x143: V86 = 0x20
0x145: V87 = ADD 0x20 0x4
0x14a: V88 = CALLDATALOAD 0x24
0x14c: V89 = 0x20
0x14e: V90 = ADD 0x20 0x24
0x151: V91 = ADD 0x4 V88
0x153: V92 = CALLDATALOAD V91
0x155: V93 = 0x20
0x157: V94 = ADD 0x20 V91
0x15b: V95 = 0x1f
0x15d: V96 = ADD 0x1f V92
0x15e: V97 = 0x20
0x162: V98 = DIV V96 0x20
0x163: V99 = MUL V98 0x20
0x164: V100 = 0x20
0x166: V101 = ADD 0x20 V99
0x167: V102 = 0x40
0x169: V103 = M[0x40]
0x16c: V104 = ADD V103 V101
0x16d: V105 = 0x40
0x16f: M[0x40] = V104
0x177: M[V103] = V92
0x178: V106 = 0x20
0x17a: V107 = ADD 0x20 V103
0x180: CALLDATACOPY V107 V94 V92
0x182: V108 = ADD V107 V92
0x18e: V109 = 0x32b
0x191: JUMP 0x32b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x192, V85, V103]
Exit stack: [V11, 0x192, V85, V103]

================================

Block 0x192
[0x192:0x193]
---
Predecessors: [0x44f]
Successors: []
---
0x192 JUMPDEST
0x193 STOP
---
0x192: JUMPDEST 
0x193: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x194
[0x194:0x19a]
---
Predecessors: [0x4c]
Successors: [0x19b, 0x19f]
---
0x194 JUMPDEST
0x195 CALLVALUE
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x194: JUMPDEST 
0x195: V110 = CALLVALUE
0x196: V111 = ISZERO V110
0x197: V112 = 0x19f
0x19a: JUMPI 0x19f V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x194]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V113 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19f
[0x19f:0x1ca]
---
Predecessors: [0x194]
Successors: [0x454]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x1cb
0x1a3 PUSH1 0x4
0x1a5 DUP1
0x1a6 DUP1
0x1a7 CALLDATALOAD
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be SWAP1
0x1bf PUSH1 0x20
0x1c1 ADD
0x1c2 SWAP1
0x1c3 SWAP2
0x1c4 SWAP1
0x1c5 POP
0x1c6 POP
0x1c7 PUSH2 0x454
0x1ca JUMP
---
0x19f: JUMPDEST 
0x1a0: V114 = 0x1cb
0x1a3: V115 = 0x4
0x1a7: V116 = CALLDATALOAD 0x4
0x1a8: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1bf: V119 = 0x20
0x1c1: V120 = ADD 0x20 0x4
0x1c7: V121 = 0x454
0x1ca: JUMP 0x454
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1cb, V118]
Exit stack: [V11, 0x1cb, V118]

================================

Block 0x1cb
[0x1cb:0x1cc]
---
Predecessors: [0x4af]
Successors: []
---
0x1cb JUMPDEST
0x1cc STOP
---
0x1cb: JUMPDEST 
0x1cc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x67]
Successors: [0x4f2]
---
0x1cd JUMPDEST
0x1ce PUSH2 0x1d5
0x1d1 PUSH2 0x4f2
0x1d4 JUMP
---
0x1cd: JUMPDEST 
0x1ce: V122 = 0x1d5
0x1d1: V123 = 0x4f2
0x1d4: JUMP 0x4f2
---
Entry stack: [V11, 0x98, V31]
Stack pops: 0
Stack additions: [0x1d5]
Exit stack: [V11, 0x98, V31, 0x1d5]

================================

Block 0x1d5
[0x1d5:0x23d]
---
Predecessors: [0x4f2]
Successors: [0x23e, 0x242]
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x0
0x1d8 PUSH1 0x1
0x1da PUSH1 0x0
0x1dc DUP5
0x1dd PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x1f6 NOT
0x1f7 AND
0x1f8 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x211 NOT
0x212 AND
0x213 DUP2
0x214 MSTORE
0x215 PUSH1 0x20
0x217 ADD
0x218 SWAP1
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x20
0x21d ADD
0x21e PUSH1 0x0
0x220 SHA3
0x221 DUP1
0x222 SLOAD
0x223 PUSH1 0x1
0x225 DUP2
0x226 PUSH1 0x1
0x228 AND
0x229 ISZERO
0x22a PUSH2 0x100
0x22d MUL
0x22e SUB
0x22f AND
0x230 PUSH1 0x2
0x232 SWAP1
0x233 DIV
0x234 SWAP1
0x235 POP
0x236 EQ
0x237 ISZERO
0x238 ISZERO
0x239 ISZERO
0x23a PUSH2 0x242
0x23d JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V124 = 0x0
0x1d8: V125 = 0x1
0x1da: V126 = 0x0
0x1dd: V127 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x1f6: V128 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x1f7: V129 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V31
0x1f8: V130 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x211: V131 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x212: V132 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V129
0x214: M[0x0] = V132
0x215: V133 = 0x20
0x217: V134 = ADD 0x20 0x0
0x21a: M[0x20] = 0x1
0x21b: V135 = 0x20
0x21d: V136 = ADD 0x20 0x20
0x21e: V137 = 0x0
0x220: V138 = SHA3 0x0 0x40
0x222: V139 = S[V138]
0x223: V140 = 0x1
0x226: V141 = 0x1
0x228: V142 = AND 0x1 V139
0x229: V143 = ISZERO V142
0x22a: V144 = 0x100
0x22d: V145 = MUL 0x100 V143
0x22e: V146 = SUB V145 0x1
0x22f: V147 = AND V146 V139
0x230: V148 = 0x2
0x233: V149 = DIV V147 0x2
0x236: V150 = EQ V149 0x0
0x237: V151 = ISZERO V150
0x238: V152 = ISZERO V151
0x239: V153 = ISZERO V152
0x23a: V154 = 0x242
0x23d: JUMPI 0x242 V153
---
Entry stack: [V11, 0x98, V31, V331]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x98, V31, V331]

================================

Block 0x23e
[0x23e:0x241]
---
Predecessors: [0x1d5]
Successors: []
---
0x23e PUSH1 0x0
0x240 DUP1
0x241 REVERT
---
0x23e: V155 = 0x0
0x241: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V31, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V31, V331]

================================

Block 0x242
[0x242:0x2d8]
---
Predecessors: [0x1d5]
Successors: [0x2d9, 0x31f]
---
0x242 JUMPDEST
0x243 PUSH1 0x1
0x245 PUSH1 0x0
0x247 DUP4
0x248 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x261 NOT
0x262 AND
0x263 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x27c NOT
0x27d AND
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x20
0x282 ADD
0x283 SWAP1
0x284 DUP2
0x285 MSTORE
0x286 PUSH1 0x20
0x288 ADD
0x289 PUSH1 0x0
0x28b SHA3
0x28c DUP1
0x28d SLOAD
0x28e PUSH1 0x1
0x290 DUP2
0x291 PUSH1 0x1
0x293 AND
0x294 ISZERO
0x295 PUSH2 0x100
0x298 MUL
0x299 SUB
0x29a AND
0x29b PUSH1 0x2
0x29d SWAP1
0x29e DIV
0x29f DUP1
0x2a0 PUSH1 0x1f
0x2a2 ADD
0x2a3 PUSH1 0x20
0x2a5 DUP1
0x2a6 SWAP2
0x2a7 DIV
0x2a8 MUL
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af SWAP1
0x2b0 DUP2
0x2b1 ADD
0x2b2 PUSH1 0x40
0x2b4 MSTORE
0x2b5 DUP1
0x2b6 SWAP3
0x2b7 SWAP2
0x2b8 SWAP1
0x2b9 DUP2
0x2ba DUP2
0x2bb MSTORE
0x2bc PUSH1 0x20
0x2be ADD
0x2bf DUP3
0x2c0 DUP1
0x2c1 SLOAD
0x2c2 PUSH1 0x1
0x2c4 DUP2
0x2c5 PUSH1 0x1
0x2c7 AND
0x2c8 ISZERO
0x2c9 PUSH2 0x100
0x2cc MUL
0x2cd SUB
0x2ce AND
0x2cf PUSH1 0x2
0x2d1 SWAP1
0x2d2 DIV
0x2d3 DUP1
0x2d4 ISZERO
0x2d5 PUSH2 0x31f
0x2d8 JUMPI
---
0x242: JUMPDEST 
0x243: V156 = 0x1
0x245: V157 = 0x0
0x248: V158 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x261: V159 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x262: V160 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V31
0x263: V161 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x27c: V162 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x27d: V163 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V160
0x27f: M[0x0] = V163
0x280: V164 = 0x20
0x282: V165 = ADD 0x20 0x0
0x285: M[0x20] = 0x1
0x286: V166 = 0x20
0x288: V167 = ADD 0x20 0x20
0x289: V168 = 0x0
0x28b: V169 = SHA3 0x0 0x40
0x28d: V170 = S[V169]
0x28e: V171 = 0x1
0x291: V172 = 0x1
0x293: V173 = AND 0x1 V170
0x294: V174 = ISZERO V173
0x295: V175 = 0x100
0x298: V176 = MUL 0x100 V174
0x299: V177 = SUB V176 0x1
0x29a: V178 = AND V177 V170
0x29b: V179 = 0x2
0x29e: V180 = DIV V178 0x2
0x2a0: V181 = 0x1f
0x2a2: V182 = ADD 0x1f V180
0x2a3: V183 = 0x20
0x2a7: V184 = DIV V182 0x20
0x2a8: V185 = MUL V184 0x20
0x2a9: V186 = 0x20
0x2ab: V187 = ADD 0x20 V185
0x2ac: V188 = 0x40
0x2ae: V189 = M[0x40]
0x2b1: V190 = ADD V189 V187
0x2b2: V191 = 0x40
0x2b4: M[0x40] = V190
0x2bb: M[V189] = V180
0x2bc: V192 = 0x20
0x2be: V193 = ADD 0x20 V189
0x2c1: V194 = S[V169]
0x2c2: V195 = 0x1
0x2c5: V196 = 0x1
0x2c7: V197 = AND 0x1 V194
0x2c8: V198 = ISZERO V197
0x2c9: V199 = 0x100
0x2cc: V200 = MUL 0x100 V198
0x2cd: V201 = SUB V200 0x1
0x2ce: V202 = AND V201 V194
0x2cf: V203 = 0x2
0x2d2: V204 = DIV V202 0x2
0x2d4: V205 = ISZERO V204
0x2d5: V206 = 0x31f
0x2d8: JUMPI 0x31f V205
---
Entry stack: [V11, 0x98, V31, V331]
Stack pops: 2
Stack additions: [S1, S0, V189, V169, V180, V193, V169, V204]
Exit stack: [V11, 0x98, V31, V331, V189, V169, V180, V193, V169, V204]

================================

Block 0x2d9
[0x2d9:0x2e0]
---
Predecessors: [0x242]
Successors: [0x2e1, 0x2f4]
---
0x2d9 DUP1
0x2da PUSH1 0x1f
0x2dc LT
0x2dd PUSH2 0x2f4
0x2e0 JUMPI
---
0x2da: V207 = 0x1f
0x2dc: V208 = LT 0x1f V204
0x2dd: V209 = 0x2f4
0x2e0: JUMPI 0x2f4 V208
---
Entry stack: [V11, 0x98, V31, V331, V189, V169, V180, V193, V169, V204]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x98, V31, V331, V189, V169, V180, V193, V169, V204]

================================

Block 0x2e1
[0x2e1:0x2f3]
---
Predecessors: [0x2d9]
Successors: [0x31f]
---
0x2e1 PUSH2 0x100
0x2e4 DUP1
0x2e5 DUP4
0x2e6 SLOAD
0x2e7 DIV
0x2e8 MUL
0x2e9 DUP4
0x2ea MSTORE
0x2eb SWAP2
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP2
0x2f0 PUSH2 0x31f
0x2f3 JUMP
---
0x2e1: V210 = 0x100
0x2e6: V211 = S[V169]
0x2e7: V212 = DIV V211 0x100
0x2e8: V213 = MUL V212 0x100
0x2ea: M[V193] = V213
0x2ec: V214 = 0x20
0x2ee: V215 = ADD 0x20 V193
0x2f0: V216 = 0x31f
0x2f3: JUMP 0x31f
---
Entry stack: [V11, 0x98, V31, V331, V189, V169, V180, V193, V169, V204]
Stack pops: 3
Stack additions: [V215, S1, S0]
Exit stack: [V11, 0x98, V31, V331, V189, V169, V180, V215, V169, V204]

================================

Block 0x2f4
[0x2f4:0x301]
---
Predecessors: [0x2d9]
Successors: [0x302]
---
0x2f4 JUMPDEST
0x2f5 DUP3
0x2f6 ADD
0x2f7 SWAP2
0x2f8 SWAP1
0x2f9 PUSH1 0x0
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe PUSH1 0x0
0x300 SHA3
0x301 SWAP1
---
0x2f4: JUMPDEST 
0x2f6: V217 = ADD V193 V204
0x2f9: V218 = 0x0
0x2fb: M[0x0] = V169
0x2fc: V219 = 0x20
0x2fe: V220 = 0x0
0x300: V221 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x98, V31, V331, V189, V169, V180, V193, V169, V204]
Stack pops: 3
Stack additions: [V217, V221, S2]
Exit stack: [V11, 0x98, V31, V331, V189, V169, V180, V217, V221, V193]

================================

Block 0x302
[0x302:0x315]
---
Predecessors: [0x2f4, 0x302]
Successors: [0x302, 0x316]
---
0x302 JUMPDEST
0x303 DUP2
0x304 SLOAD
0x305 DUP2
0x306 MSTORE
0x307 SWAP1
0x308 PUSH1 0x1
0x30a ADD
0x30b SWAP1
0x30c PUSH1 0x20
0x30e ADD
0x30f DUP1
0x310 DUP4
0x311 GT
0x312 PUSH2 0x302
0x315 JUMPI
---
0x302: JUMPDEST 
0x304: V222 = S[S1]
0x306: M[S0] = V222
0x308: V223 = 0x1
0x30a: V224 = ADD 0x1 S1
0x30c: V225 = 0x20
0x30e: V226 = ADD 0x20 S0
0x311: V227 = GT V217 V226
0x312: V228 = 0x302
0x315: JUMPI 0x302 V227
---
Entry stack: [V11, 0x98, V31, V331, V189, V169, V180, V217, S1, S0]
Stack pops: 3
Stack additions: [S2, V224, V226]
Exit stack: [V11, 0x98, V31, V331, V189, V169, V180, V217, V224, V226]

================================

Block 0x316
[0x316:0x31e]
---
Predecessors: [0x302]
Successors: [0x31f]
---
0x316 DUP3
0x317 SWAP1
0x318 SUB
0x319 PUSH1 0x1f
0x31b AND
0x31c DUP3
0x31d ADD
0x31e SWAP2
---
0x318: V229 = SUB V226 V217
0x319: V230 = 0x1f
0x31b: V231 = AND 0x1f V229
0x31d: V232 = ADD V217 V231
---
Entry stack: [V11, 0x98, V31, V331, V189, V169, V180, V217, V224, V226]
Stack pops: 3
Stack additions: [V232, S1, S2]
Exit stack: [V11, 0x98, V31, V331, V189, V169, V180, V232, V224, V217]

================================

Block 0x31f
[0x31f:0x32a]
---
Predecessors: [0x242, 0x2e1, 0x316]
Successors: [0x98]
---
0x31f JUMPDEST
0x320 POP
0x321 POP
0x322 POP
0x323 POP
0x324 POP
0x325 SWAP1
0x326 POP
0x327 SWAP2
0x328 SWAP1
0x329 POP
0x32a JUMP
---
0x31f: JUMPDEST 
0x32a: JUMP 0x98
---
Entry stack: [V11, 0x98, V31, V331, V189, V169, V180, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V11, V189]

================================

Block 0x32b
[0x32b:0x381]
---
Predecessors: [0x11e]
Successors: [0x382, 0x386]
---
0x32b JUMPDEST
0x32c CALLER
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 PUSH1 0x0
0x345 DUP1
0x346 SWAP1
0x347 SLOAD
0x348 SWAP1
0x349 PUSH2 0x100
0x34c EXP
0x34d SWAP1
0x34e DIV
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b EQ
0x37c ISZERO
0x37d ISZERO
0x37e PUSH2 0x386
0x381 JUMPI
---
0x32b: JUMPDEST 
0x32c: V233 = CALLER
0x32d: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x343: V236 = 0x0
0x347: V237 = S[0x0]
0x349: V238 = 0x100
0x34c: V239 = EXP 0x100 0x0
0x34e: V240 = DIV V237 0x1
0x34f: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x365: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x37b: V245 = EQ V244 V235
0x37c: V246 = ISZERO V245
0x37d: V247 = ISZERO V246
0x37e: V248 = 0x386
0x381: JUMPI 0x386 V247
---
Entry stack: [V11, 0x192, V85, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192, V85, V103]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x32b]
Successors: []
---
0x382 PUSH1 0x0
0x384 DUP1
0x385 REVERT
---
0x382: V249 = 0x0
0x385: REVERT 0x0 0x0
---
Entry stack: [V11, 0x192, V85, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192, V85, V103]

================================

Block 0x386
[0x386:0x3ed]
---
Predecessors: [0x32b]
Successors: [0x3ee, 0x3f2]
---
0x386 JUMPDEST
0x387 PUSH1 0x0
0x389 PUSH1 0x1
0x38b PUSH1 0x0
0x38d DUP5
0x38e PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3a7 NOT
0x3a8 AND
0x3a9 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3c2 NOT
0x3c3 AND
0x3c4 DUP2
0x3c5 MSTORE
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP1
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf PUSH1 0x0
0x3d1 SHA3
0x3d2 DUP1
0x3d3 SLOAD
0x3d4 PUSH1 0x1
0x3d6 DUP2
0x3d7 PUSH1 0x1
0x3d9 AND
0x3da ISZERO
0x3db PUSH2 0x100
0x3de MUL
0x3df SUB
0x3e0 AND
0x3e1 PUSH1 0x2
0x3e3 SWAP1
0x3e4 DIV
0x3e5 SWAP1
0x3e6 POP
0x3e7 EQ
0x3e8 ISZERO
0x3e9 ISZERO
0x3ea PUSH2 0x3f2
0x3ed JUMPI
---
0x386: JUMPDEST 
0x387: V250 = 0x0
0x389: V251 = 0x1
0x38b: V252 = 0x0
0x38e: V253 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3a7: V254 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3a8: V255 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V85
0x3a9: V256 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3c2: V257 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3c3: V258 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V255
0x3c5: M[0x0] = V258
0x3c6: V259 = 0x20
0x3c8: V260 = ADD 0x20 0x0
0x3cb: M[0x20] = 0x1
0x3cc: V261 = 0x20
0x3ce: V262 = ADD 0x20 0x20
0x3cf: V263 = 0x0
0x3d1: V264 = SHA3 0x0 0x40
0x3d3: V265 = S[V264]
0x3d4: V266 = 0x1
0x3d7: V267 = 0x1
0x3d9: V268 = AND 0x1 V265
0x3da: V269 = ISZERO V268
0x3db: V270 = 0x100
0x3de: V271 = MUL 0x100 V269
0x3df: V272 = SUB V271 0x1
0x3e0: V273 = AND V272 V265
0x3e1: V274 = 0x2
0x3e4: V275 = DIV V273 0x2
0x3e7: V276 = EQ V275 0x0
0x3e8: V277 = ISZERO V276
0x3e9: V278 = ISZERO V277
0x3ea: V279 = 0x3f2
0x3ed: JUMPI 0x3f2 V278
---
Entry stack: [V11, 0x192, V85, V103]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x192, V85, V103]

================================

Block 0x3ee
[0x3ee:0x3f1]
---
Predecessors: [0x386]
Successors: []
---
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 REVERT
---
0x3ee: V280 = 0x0
0x3f1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x192, V85, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192, V85, V103]

================================

Block 0x3f2
[0x3f2:0x44e]
---
Predecessors: [0x386]
Successors: [0x506]
---
0x3f2 JUMPDEST
0x3f3 DUP1
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0x0
0x3f8 DUP5
0x3f9 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x412 NOT
0x413 AND
0x414 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x42d NOT
0x42e AND
0x42f DUP2
0x430 MSTORE
0x431 PUSH1 0x20
0x433 ADD
0x434 SWAP1
0x435 DUP2
0x436 MSTORE
0x437 PUSH1 0x20
0x439 ADD
0x43a PUSH1 0x0
0x43c SHA3
0x43d SWAP1
0x43e DUP1
0x43f MLOAD
0x440 SWAP1
0x441 PUSH1 0x20
0x443 ADD
0x444 SWAP1
0x445 PUSH2 0x44f
0x448 SWAP3
0x449 SWAP2
0x44a SWAP1
0x44b PUSH2 0x506
0x44e JUMP
---
0x3f2: JUMPDEST 
0x3f4: V281 = 0x1
0x3f6: V282 = 0x0
0x3f9: V283 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x412: V284 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x413: V285 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V85
0x414: V286 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x42d: V287 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x42e: V288 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V285
0x430: M[0x0] = V288
0x431: V289 = 0x20
0x433: V290 = ADD 0x20 0x0
0x436: M[0x20] = 0x1
0x437: V291 = 0x20
0x439: V292 = ADD 0x20 0x20
0x43a: V293 = 0x0
0x43c: V294 = SHA3 0x0 0x40
0x43f: V295 = M[V103]
0x441: V296 = 0x20
0x443: V297 = ADD 0x20 V103
0x445: V298 = 0x44f
0x44b: V299 = 0x506
0x44e: JUMP 0x506
---
Entry stack: [V11, 0x192, V85, V103]
Stack pops: 2
Stack additions: [S1, S0, 0x44f, V294, V297, V295]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V297, V295]

================================

Block 0x44f
[0x44f:0x453]
---
Predecessors: [0x582]
Successors: [0x192]
---
0x44f JUMPDEST
0x450 POP
0x451 POP
0x452 POP
0x453 JUMP
---
0x44f: JUMPDEST 
0x453: JUMP 0x192
---
Entry stack: [V11, 0x192, V85, V103, V294]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x454
[0x454:0x4aa]
---
Predecessors: [0x19f]
Successors: [0x4ab, 0x4af]
---
0x454 JUMPDEST
0x455 CALLER
0x456 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46b AND
0x46c PUSH1 0x0
0x46e DUP1
0x46f SWAP1
0x470 SLOAD
0x471 SWAP1
0x472 PUSH2 0x100
0x475 EXP
0x476 SWAP1
0x477 DIV
0x478 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48d AND
0x48e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a3 AND
0x4a4 EQ
0x4a5 ISZERO
0x4a6 ISZERO
0x4a7 PUSH2 0x4af
0x4aa JUMPI
---
0x454: JUMPDEST 
0x455: V300 = CALLER
0x456: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x46c: V303 = 0x0
0x470: V304 = S[0x0]
0x472: V305 = 0x100
0x475: V306 = EXP 0x100 0x0
0x477: V307 = DIV V304 0x1
0x478: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x48e: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x4a4: V312 = EQ V311 V302
0x4a5: V313 = ISZERO V312
0x4a6: V314 = ISZERO V313
0x4a7: V315 = 0x4af
0x4aa: JUMPI 0x4af V314
---
Entry stack: [V11, 0x1cb, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V118]

================================

Block 0x4ab
[0x4ab:0x4ae]
---
Predecessors: [0x454]
Successors: []
---
0x4ab PUSH1 0x0
0x4ad DUP1
0x4ae REVERT
---
0x4ab: V316 = 0x0
0x4ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1cb, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, V118]

================================

Block 0x4af
[0x4af:0x4f1]
---
Predecessors: [0x454]
Successors: [0x1cb]
---
0x4af JUMPDEST
0x4b0 DUP1
0x4b1 PUSH1 0x0
0x4b3 DUP1
0x4b4 PUSH2 0x100
0x4b7 EXP
0x4b8 DUP2
0x4b9 SLOAD
0x4ba DUP2
0x4bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d0 MUL
0x4d1 NOT
0x4d2 AND
0x4d3 SWAP1
0x4d4 DUP4
0x4d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ea AND
0x4eb MUL
0x4ec OR
0x4ed SWAP1
0x4ee SSTORE
0x4ef POP
0x4f0 POP
0x4f1 JUMP
---
0x4af: JUMPDEST 
0x4b1: V317 = 0x0
0x4b4: V318 = 0x100
0x4b7: V319 = EXP 0x100 0x0
0x4b9: V320 = S[0x0]
0x4bb: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V322 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4d1: V323 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4d2: V324 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V320
0x4d5: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x4eb: V327 = MUL V326 0x1
0x4ec: V328 = OR V327 V324
0x4ee: S[0x0] = V328
0x4f1: JUMP 0x1cb
---
Entry stack: [V11, 0x1cb, V118]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f2
[0x4f2:0x505]
---
Predecessors: [0x1cd]
Successors: [0x1d5]
---
0x4f2 JUMPDEST
0x4f3 PUSH1 0x20
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 SWAP1
0x4f9 DUP2
0x4fa ADD
0x4fb PUSH1 0x40
0x4fd MSTORE
0x4fe DUP1
0x4ff PUSH1 0x0
0x501 DUP2
0x502 MSTORE
0x503 POP
0x504 SWAP1
0x505 JUMP
---
0x4f2: JUMPDEST 
0x4f3: V329 = 0x20
0x4f5: V330 = 0x40
0x4f7: V331 = M[0x40]
0x4fa: V332 = ADD V331 0x20
0x4fb: V333 = 0x40
0x4fd: M[0x40] = V332
0x4ff: V334 = 0x0
0x502: M[V331] = 0x0
0x505: JUMP 0x1d5
---
Entry stack: [V11, 0x98, V31, 0x1d5]
Stack pops: 1
Stack additions: [V331]
Exit stack: [V11, 0x98, V31, V331]

================================

Block 0x506
[0x506:0x536]
---
Predecessors: [0x3f2]
Successors: [0x537, 0x547]
---
0x506 JUMPDEST
0x507 DUP3
0x508 DUP1
0x509 SLOAD
0x50a PUSH1 0x1
0x50c DUP2
0x50d PUSH1 0x1
0x50f AND
0x510 ISZERO
0x511 PUSH2 0x100
0x514 MUL
0x515 SUB
0x516 AND
0x517 PUSH1 0x2
0x519 SWAP1
0x51a DIV
0x51b SWAP1
0x51c PUSH1 0x0
0x51e MSTORE
0x51f PUSH1 0x20
0x521 PUSH1 0x0
0x523 SHA3
0x524 SWAP1
0x525 PUSH1 0x1f
0x527 ADD
0x528 PUSH1 0x20
0x52a SWAP1
0x52b DIV
0x52c DUP2
0x52d ADD
0x52e SWAP3
0x52f DUP3
0x530 PUSH1 0x1f
0x532 LT
0x533 PUSH2 0x547
0x536 JUMPI
---
0x506: JUMPDEST 
0x509: V335 = S[V294]
0x50a: V336 = 0x1
0x50d: V337 = 0x1
0x50f: V338 = AND 0x1 V335
0x510: V339 = ISZERO V338
0x511: V340 = 0x100
0x514: V341 = MUL 0x100 V339
0x515: V342 = SUB V341 0x1
0x516: V343 = AND V342 V335
0x517: V344 = 0x2
0x51a: V345 = DIV V343 0x2
0x51c: V346 = 0x0
0x51e: M[0x0] = V294
0x51f: V347 = 0x20
0x521: V348 = 0x0
0x523: V349 = SHA3 0x0 0x20
0x525: V350 = 0x1f
0x527: V351 = ADD 0x1f V345
0x528: V352 = 0x20
0x52b: V353 = DIV V351 0x20
0x52d: V354 = ADD V349 V353
0x530: V355 = 0x1f
0x532: V356 = LT 0x1f V295
0x533: V357 = 0x547
0x536: JUMPI 0x547 V356
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V297, V295]
Stack pops: 3
Stack additions: [S2, V354, S0, V349, S1]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V295, V349, V297]

================================

Block 0x537
[0x537:0x546]
---
Predecessors: [0x506]
Successors: [0x575]
---
0x537 DUP1
0x538 MLOAD
0x539 PUSH1 0xff
0x53b NOT
0x53c AND
0x53d DUP4
0x53e DUP1
0x53f ADD
0x540 OR
0x541 DUP6
0x542 SSTORE
0x543 PUSH2 0x575
0x546 JUMP
---
0x538: V358 = M[V297]
0x539: V359 = 0xff
0x53b: V360 = NOT 0xff
0x53c: V361 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V358
0x53f: V362 = ADD V295 V295
0x540: V363 = OR V362 V361
0x542: S[V294] = V363
0x543: V364 = 0x575
0x546: JUMP 0x575
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V295, V349, V297]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V295, V349, V297]

================================

Block 0x547
[0x547:0x555]
---
Predecessors: [0x506]
Successors: [0x556, 0x575]
---
0x547 JUMPDEST
0x548 DUP3
0x549 DUP1
0x54a ADD
0x54b PUSH1 0x1
0x54d ADD
0x54e DUP6
0x54f SSTORE
0x550 DUP3
0x551 ISZERO
0x552 PUSH2 0x575
0x555 JUMPI
---
0x547: JUMPDEST 
0x54a: V365 = ADD V295 V295
0x54b: V366 = 0x1
0x54d: V367 = ADD 0x1 V365
0x54f: S[V294] = V367
0x551: V368 = ISZERO V295
0x552: V369 = 0x575
0x555: JUMPI 0x575 V368
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V295, V349, V297]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V295, V349, V297]

================================

Block 0x556
[0x556:0x558]
---
Predecessors: [0x547]
Successors: [0x559]
---
0x556 SWAP2
0x557 DUP3
0x558 ADD
---
0x558: V370 = ADD V297 V295
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V295, V349, V297]
Stack pops: 3
Stack additions: [S0, S1, V370]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V297, V349, V370]

================================

Block 0x559
[0x559:0x561]
---
Predecessors: [0x556, 0x562]
Successors: [0x562, 0x574]
---
0x559 JUMPDEST
0x55a DUP3
0x55b DUP2
0x55c GT
0x55d ISZERO
0x55e PUSH2 0x574
0x561 JUMPI
---
0x559: JUMPDEST 
0x55c: V371 = GT V370 S2
0x55d: V372 = ISZERO V371
0x55e: V373 = 0x574
0x561: JUMPI 0x574 V372
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, S2, S1, V370]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, S2, S1, V370]

================================

Block 0x562
[0x562:0x573]
---
Predecessors: [0x559]
Successors: [0x559]
---
0x562 DUP3
0x563 MLOAD
0x564 DUP3
0x565 SSTORE
0x566 SWAP2
0x567 PUSH1 0x20
0x569 ADD
0x56a SWAP2
0x56b SWAP1
0x56c PUSH1 0x1
0x56e ADD
0x56f SWAP1
0x570 PUSH2 0x559
0x573 JUMP
---
0x563: V374 = M[S2]
0x565: S[S1] = V374
0x567: V375 = 0x20
0x569: V376 = ADD 0x20 S2
0x56c: V377 = 0x1
0x56e: V378 = ADD 0x1 S1
0x570: V379 = 0x559
0x573: JUMP 0x559
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, S2, S1, V370]
Stack pops: 3
Stack additions: [V376, V378, S0]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, V376, V378, V370]

================================

Block 0x574
[0x574:0x574]
---
Predecessors: [0x559]
Successors: [0x575]
---
0x574 JUMPDEST
---
0x574: JUMPDEST 
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, S2, S1, V370]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, S2, S1, V370]

================================

Block 0x575
[0x575:0x581]
---
Predecessors: [0x537, 0x547, 0x574]
Successors: [0x586]
---
0x575 JUMPDEST
0x576 POP
0x577 SWAP1
0x578 POP
0x579 PUSH2 0x582
0x57c SWAP2
0x57d SWAP1
0x57e PUSH2 0x586
0x581 JUMP
---
0x575: JUMPDEST 
0x579: V380 = 0x582
0x57e: V381 = 0x586
0x581: JUMP 0x586
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354, S2, S1, S0]
Stack pops: 4
Stack additions: [0x582, S3, S1]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, V354, S1]

================================

Block 0x582
[0x582:0x585]
---
Predecessors: [0x5a8]
Successors: [0x44f]
---
0x582 JUMPDEST
0x583 POP
0x584 SWAP1
0x585 JUMP
---
0x582: JUMPDEST 
0x585: JUMP 0x44f
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, V354]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x192, V85, V103, V294]

================================

Block 0x586
[0x586:0x58b]
---
Predecessors: [0x575]
Successors: [0x58c]
---
0x586 JUMPDEST
0x587 PUSH2 0x5a8
0x58a SWAP2
0x58b SWAP1
---
0x586: JUMPDEST 
0x587: V382 = 0x5a8
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, V354, S0]
Stack pops: 2
Stack additions: [0x5a8, S1, S0]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, 0x5a8, V354, S0]

================================

Block 0x58c
[0x58c:0x594]
---
Predecessors: [0x586, 0x595]
Successors: [0x595, 0x5a4]
---
0x58c JUMPDEST
0x58d DUP1
0x58e DUP3
0x58f GT
0x590 ISZERO
0x591 PUSH2 0x5a4
0x594 JUMPI
---
0x58c: JUMPDEST 
0x58f: V383 = GT V354 S0
0x590: V384 = ISZERO V383
0x591: V385 = 0x5a4
0x594: JUMPI 0x5a4 V384
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, 0x5a8, V354, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, 0x5a8, V354, S0]

================================

Block 0x595
[0x595:0x5a3]
---
Predecessors: [0x58c]
Successors: [0x58c]
---
0x595 PUSH1 0x0
0x597 DUP2
0x598 PUSH1 0x0
0x59a SWAP1
0x59b SSTORE
0x59c POP
0x59d PUSH1 0x1
0x59f ADD
0x5a0 PUSH2 0x58c
0x5a3 JUMP
---
0x595: V386 = 0x0
0x598: V387 = 0x0
0x59b: S[S0] = 0x0
0x59d: V388 = 0x1
0x59f: V389 = ADD 0x1 S0
0x5a0: V390 = 0x58c
0x5a3: JUMP 0x58c
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, 0x5a8, V354, S0]
Stack pops: 1
Stack additions: [V389]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, 0x5a8, V354, V389]

================================

Block 0x5a4
[0x5a4:0x5a7]
---
Predecessors: [0x58c]
Successors: [0x5a8]
---
0x5a4 JUMPDEST
0x5a5 POP
0x5a6 SWAP1
0x5a7 JUMP
---
0x5a4: JUMPDEST 
0x5a7: JUMP 0x5a8
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, 0x5a8, V354, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, V354]

================================

Block 0x5a8
[0x5a8:0x5aa]
---
Predecessors: [0x5a4]
Successors: [0x582]
---
0x5a8 JUMPDEST
0x5a9 SWAP1
0x5aa JUMP
---
0x5a8: JUMPDEST 
0x5aa: JUMP 0x582
---
Entry stack: [V11, 0x192, V85, V103, 0x44f, V294, 0x582, V354]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x192, V85, V103, 0x44f, V294, V354]

================================

Block 0x5ab
[0x5ab:0x5e3]
---
Predecessors: []
Successors: []
---
0x5ab STOP
0x5ac LOG1
0x5ad PUSH6 0x627a7a723058
0x5b4 SHA3
0x5b5 MISSING 0x4e
0x5b6 REVERT
0x5b7 SWAP9
0x5b8 STOP
0x5b9 PUSH21 0x994815674a649357a3ae591c22613882aa8e22e242
0x5cf SWAP5
0x5d0 PUSH19 0x15d8c5b50029
---
0x5ab: STOP 
0x5ac: LOG S0 S1 S2
0x5ad: V391 = 0x627a7a723058
0x5b4: V392 = SHA3 0x627a7a723058 S3
0x5b5: MISSING 0x4e
0x5b6: REVERT S0 S1
0x5b8: STOP 
0x5b9: V393 = 0x994815674a649357a3ae591c22613882aa8e22e242
0x5d0: V394 = 0x15d8c5b50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V392, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, 0x15d8c5b50029, S4, S0, S1, S2, S3, 0x994815674a649357a3ae591c22613882aa8e22e242]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ce0a093
Entry block: 0x5c
Exit block: 0x105
Body: 0x5c, 0x63, 0x67, 0x98, 0xbd, 0xc6, 0xd8, 0xec, 0x105, 0x1cd, 0x1d5, 0x23e, 0x242, 0x2d9, 0x2e1, 0x2f4, 0x302, 0x316, 0x31f, 0x4f2

Function 1:
Public function signature: 0x796c5e5b
Entry block: 0x113
Exit block: 0x192
Body: 0x113, 0x11a, 0x11e, 0x192, 0x32b, 0x382, 0x386, 0x3ee, 0x3f2, 0x44f, 0x506, 0x537, 0x547, 0x556, 0x559, 0x562, 0x574, 0x575, 0x582, 0x586, 0x58c, 0x595, 0x5a4, 0x5a8

Function 2:
Public function signature: 0xa6f9dae1
Entry block: 0x194
Exit block: 0x1cb
Body: 0x194, 0x19b, 0x19f, 0x1cb, 0x454, 0x4ab, 0x4af

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

