Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xd2]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb591195
0x3c EQ
0x3d PUSH2 0xd2
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb591195
0x3c: V13 = EQ 0xb591195 V11
0x3d: V14 = 0xd2
0x40: JUMPI 0xd2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xfb]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xfb
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xfb
0x4b: JUMPI 0xfb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x110]
---
0x4c DUP1
0x4d PUSH4 0x59c39094
0x52 EQ
0x53 PUSH2 0x110
0x56 JUMPI
---
0x4d: V18 = 0x59c39094
0x52: V19 = EQ 0x59c39094 V11
0x53: V20 = 0x110
0x56: JUMPI 0x110 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x139]
---
0x57 DUP1
0x58 PUSH4 0x688263d7
0x5d EQ
0x5e PUSH2 0x139
0x61 JUMPI
---
0x58: V21 = 0x688263d7
0x5d: V22 = EQ 0x688263d7 V11
0x5e: V23 = 0x139
0x61: JUMPI 0x139 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x18e]
---
0x62 DUP1
0x63 PUSH4 0x8da5cb5b
0x68 EQ
0x69 PUSH2 0x18e
0x6c JUMPI
---
0x63: V24 = 0x8da5cb5b
0x68: V25 = EQ 0x8da5cb5b V11
0x69: V26 = 0x18e
0x6c: JUMPI 0x18e V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x78]
---
Predecessors: [0x0, 0x62]
Successors: [0x79, 0x7d]
---
0x6d JUMPDEST
0x6e CALLVALUE
0x6f PUSH1 0x2
0x71 SLOAD
0x72 LT
0x73 ISZERO
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x6d: JUMPDEST 
0x6e: V27 = CALLVALUE
0x6f: V28 = 0x2
0x71: V29 = S[0x2]
0x72: V30 = LT V29 V27
0x73: V31 = ISZERO V30
0x74: V32 = ISZERO V31
0x75: V33 = 0x7d
0x78: JUMPI 0x7d V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x6d]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V34 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0xd1]
---
Predecessors: [0x6d]
Successors: []
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f PUSH1 0x2
0x81 DUP2
0x82 SWAP1
0x83 SSTORE
0x84 POP
0x85 PUSH3 0x2a300
0x89 TIMESTAMP
0x8a ADD
0x8b PUSH1 0x3
0x8d DUP2
0x8e SWAP1
0x8f SSTORE
0x90 POP
0x91 CALLER
0x92 PUSH1 0x0
0x94 DUP1
0x95 PUSH2 0x100
0x98 EXP
0x99 DUP2
0x9a SLOAD
0x9b DUP2
0x9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1 MUL
0xb2 NOT
0xb3 AND
0xb4 SWAP1
0xb5 DUP4
0xb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb AND
0xcc MUL
0xcd OR
0xce SWAP1
0xcf SSTORE
0xd0 POP
0xd1 STOP
---
0x7d: JUMPDEST 
0x7e: V35 = CALLVALUE
0x7f: V36 = 0x2
0x83: S[0x2] = V35
0x85: V37 = 0x2a300
0x89: V38 = TIMESTAMP
0x8a: V39 = ADD V38 0x2a300
0x8b: V40 = 0x3
0x8f: S[0x3] = V39
0x91: V41 = CALLER
0x92: V42 = 0x0
0x95: V43 = 0x100
0x98: V44 = EXP 0x100 0x0
0x9a: V45 = S[0x0]
0x9c: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V47 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xb2: V48 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb3: V49 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V45
0xb6: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xcc: V52 = MUL V51 0x1
0xcd: V53 = OR V52 V49
0xcf: S[0x0] = V53
0xd1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V54 = CALLVALUE
0xd4: V55 = ISZERO V54
0xd5: V56 = 0xdd
0xd8: JUMPI 0xdd V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V57 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x1e3]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x1e3
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V58 = 0xe5
0xe1: V59 = 0x1e3
0xe4: JUMP 0x1e3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V11, 0xe5]

================================

Block 0xe5
[0xe5:0xfa]
---
Predecessors: [0x1e3]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP2
0xf1 POP
0xf2 POP
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP1
0xf7 SWAP2
0xf8 SUB
0xf9 SWAP1
0xfa RETURN
---
0xe5: JUMPDEST 
0xe6: V60 = 0x40
0xe8: V61 = M[0x40]
0xec: M[V61] = V121
0xed: V62 = 0x20
0xef: V63 = ADD 0x20 V61
0xf3: V64 = 0x40
0xf5: V65 = M[0x40]
0xf8: V66 = SUB V63 V65
0xfa: RETURN V65 V66
---
Entry stack: [V11, 0xe5, V121]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0x41]
Successors: [0x102, 0x106]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V67 = CALLVALUE
0xfd: V68 = ISZERO V67
0xfe: V69 = 0x106
0x101: JUMPI 0x106 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfb]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V70 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x106
[0x106:0x10d]
---
Predecessors: [0xfb]
Successors: [0x1e9]
---
0x106 JUMPDEST
0x107 PUSH2 0x10e
0x10a PUSH2 0x1e9
0x10d JUMP
---
0x106: JUMPDEST 
0x107: V71 = 0x10e
0x10a: V72 = 0x1e9
0x10d: JUMP 0x1e9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V11, 0x10e]

================================

Block 0x10e
[0x10e:0x10f]
---
Predecessors: [0x302]
Successors: []
---
0x10e JUMPDEST
0x10f STOP
---
0x10e: JUMPDEST 
0x10f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x110
[0x110:0x116]
---
Predecessors: [0x4c]
Successors: [0x117, 0x11b]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x110: JUMPDEST 
0x111: V73 = CALLVALUE
0x112: V74 = ISZERO V73
0x113: V75 = 0x11b
0x116: JUMPI 0x11b V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x110]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V76 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x110]
Successors: [0x345]
---
0x11b JUMPDEST
0x11c PUSH2 0x123
0x11f PUSH2 0x345
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V77 = 0x123
0x11f: V78 = 0x345
0x122: JUMP 0x345
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V11, 0x123]

================================

Block 0x123
[0x123:0x138]
---
Predecessors: [0x345]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 DUP3
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP2
0x12f POP
0x130 POP
0x131 PUSH1 0x40
0x133 MLOAD
0x134 DUP1
0x135 SWAP2
0x136 SUB
0x137 SWAP1
0x138 RETURN
---
0x123: JUMPDEST 
0x124: V79 = 0x40
0x126: V80 = M[0x40]
0x12a: M[V80] = V209
0x12b: V81 = 0x20
0x12d: V82 = ADD 0x20 V80
0x131: V83 = 0x40
0x133: V84 = M[0x40]
0x136: V85 = SUB V82 V84
0x138: RETURN V84 V85
---
Entry stack: [V11, 0x123, V209]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x123]

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x57]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V86 = CALLVALUE
0x13b: V87 = ISZERO V86
0x13c: V88 = 0x144
0x13f: JUMPI 0x144 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V89 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x139]
Successors: [0x34b]
---
0x144 JUMPDEST
0x145 PUSH2 0x14c
0x148 PUSH2 0x34b
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V90 = 0x14c
0x148: V91 = 0x34b
0x14b: JUMP 0x34b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V11, 0x14c]

================================

Block 0x14c
[0x14c:0x18d]
---
Predecessors: [0x34b]
Successors: []
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 DUP3
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP2
0x184 POP
0x185 POP
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d RETURN
---
0x14c: JUMPDEST 
0x14d: V92 = 0x40
0x14f: V93 = M[0x40]
0x152: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x168: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x17f: M[V93] = V97
0x180: V98 = 0x20
0x182: V99 = ADD 0x20 V93
0x186: V100 = 0x40
0x188: V101 = M[0x40]
0x18b: V102 = SUB V99 V101
0x18d: RETURN V101 V102
---
Entry stack: [V11, 0x14c, V216]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14c]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x62]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V103 = CALLVALUE
0x190: V104 = ISZERO V103
0x191: V105 = 0x199
0x194: JUMPI 0x199 V104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V106 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x18e]
Successors: [0x370]
---
0x199 JUMPDEST
0x19a PUSH2 0x1a1
0x19d PUSH2 0x370
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V107 = 0x1a1
0x19d: V108 = 0x370
0x1a0: JUMP 0x370
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V11, 0x1a1]

================================

Block 0x1a1
[0x1a1:0x1e2]
---
Predecessors: [0x370]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 DUP3
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP2
0x1d9 POP
0x1da POP
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de DUP1
0x1df SWAP2
0x1e0 SUB
0x1e1 SWAP1
0x1e2 RETURN
---
0x1a1: JUMPDEST 
0x1a2: V109 = 0x40
0x1a4: V110 = M[0x40]
0x1a7: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x1bd: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1d4: M[V110] = V114
0x1d5: V115 = 0x20
0x1d7: V116 = ADD 0x20 V110
0x1db: V117 = 0x40
0x1dd: V118 = M[0x40]
0x1e0: V119 = SUB V116 V118
0x1e2: RETURN V118 V119
---
Entry stack: [V11, 0x1a1, V224]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a1]

================================

Block 0x1e3
[0x1e3:0x1e8]
---
Predecessors: [0xdd]
Successors: [0xe5]
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x2
0x1e6 SLOAD
0x1e7 DUP2
0x1e8 JUMP
---
0x1e3: JUMPDEST 
0x1e4: V120 = 0x2
0x1e6: V121 = S[0x2]
0x1e8: JUMP 0xe5
---
Entry stack: [V11, 0xe5]
Stack pops: 1
Stack additions: [S0, V121]
Exit stack: [V11, 0xe5, V121]

================================

Block 0x1e9
[0x1e9:0x1f5]
---
Predecessors: [0x106]
Successors: [0x1f6, 0x1fa]
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x3
0x1ec SLOAD
0x1ed TIMESTAMP
0x1ee LT
0x1ef ISZERO
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V122 = 0x3
0x1ec: V123 = S[0x3]
0x1ed: V124 = TIMESTAMP
0x1ee: V125 = LT V124 V123
0x1ef: V126 = ISZERO V125
0x1f0: V127 = ISZERO V126
0x1f1: V128 = ISZERO V127
0x1f2: V129 = 0x1fa
0x1f5: JUMPI 0x1fa V128
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V130 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x1fa
[0x1fa:0x262]
---
Predecessors: [0x1e9]
Successors: [0x263, 0x264]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x0
0x1fd PUSH1 0x2
0x1ff DUP2
0x200 SWAP1
0x201 SSTORE
0x202 POP
0x203 PUSH1 0x1
0x205 PUSH1 0x0
0x207 SWAP1
0x208 SLOAD
0x209 SWAP1
0x20a PUSH2 0x100
0x20d EXP
0x20e SWAP1
0x20f DIV
0x210 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x225 AND
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c PUSH2 0x8fc
0x23f PUSH1 0x64
0x241 PUSH1 0x3
0x243 ADDRESS
0x244 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x259 AND
0x25a BALANCE
0x25b MUL
0x25c DUP2
0x25d ISZERO
0x25e ISZERO
0x25f PUSH2 0x264
0x262 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V131 = 0x0
0x1fd: V132 = 0x2
0x201: S[0x2] = 0x0
0x203: V133 = 0x1
0x205: V134 = 0x0
0x208: V135 = S[0x1]
0x20a: V136 = 0x100
0x20d: V137 = EXP 0x100 0x0
0x20f: V138 = DIV V135 0x1
0x210: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x225: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x226: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x23c: V143 = 0x8fc
0x23f: V144 = 0x64
0x241: V145 = 0x3
0x243: V146 = ADDRESS
0x244: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x259: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x25a: V149 = BALANCE V148
0x25b: V150 = MUL V149 0x3
0x25d: V151 = ISZERO 0x64
0x25e: V152 = ISZERO 0x0
0x25f: V153 = 0x264
0x262: JUMPI 0x264 0x1
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: [V142, 0x8fc, 0x64, V150]
Exit stack: [V11, 0x10e, V142, 0x8fc, 0x64, V150]

================================

Block 0x263
[0x263:0x263]
---
Predecessors: [0x1fa]
Successors: []
---
0x263 INVALID
---
0x263: INVALID 
---
Entry stack: [V11, 0x10e, V142, 0x8fc, 0x64, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e, V142, 0x8fc, 0x64, V150]

================================

Block 0x264
[0x264:0x285]
---
Predecessors: [0x1fa]
Successors: [0x286, 0x28a]
---
0x264 JUMPDEST
0x265 DIV
0x266 SWAP1
0x267 DUP2
0x268 ISZERO
0x269 MUL
0x26a SWAP1
0x26b PUSH1 0x40
0x26d MLOAD
0x26e PUSH1 0x0
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 DUP4
0x275 SUB
0x276 DUP2
0x277 DUP6
0x278 DUP9
0x279 DUP9
0x27a CALL
0x27b SWAP4
0x27c POP
0x27d POP
0x27e POP
0x27f POP
0x280 ISZERO
0x281 ISZERO
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x264: JUMPDEST 
0x265: V154 = DIV V150 0x64
0x268: V155 = ISZERO V154
0x269: V156 = MUL V155 0x8fc
0x26b: V157 = 0x40
0x26d: V158 = M[0x40]
0x26e: V159 = 0x0
0x270: V160 = 0x40
0x272: V161 = M[0x40]
0x275: V162 = SUB V158 V161
0x27a: V163 = CALL V156 V142 V154 V161 V162 V161 0x0
0x280: V164 = ISZERO V163
0x281: V165 = ISZERO V164
0x282: V166 = 0x28a
0x285: JUMPI 0x28a V165
---
Entry stack: [V11, 0x10e, V142, 0x8fc, 0x64, V150]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x264]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V167 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x28a
[0x28a:0x2fd]
---
Predecessors: [0x264]
Successors: [0x2fe, 0x302]
---
0x28a JUMPDEST
0x28b PUSH1 0x0
0x28d DUP1
0x28e SWAP1
0x28f SLOAD
0x290 SWAP1
0x291 PUSH2 0x100
0x294 EXP
0x295 SWAP1
0x296 DIV
0x297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ac AND
0x2ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c2 AND
0x2c3 PUSH2 0x8fc
0x2c6 ADDRESS
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd BALANCE
0x2de SWAP1
0x2df DUP2
0x2e0 ISZERO
0x2e1 MUL
0x2e2 SWAP1
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 PUSH1 0x0
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP4
0x2ed SUB
0x2ee DUP2
0x2ef DUP6
0x2f0 DUP9
0x2f1 DUP9
0x2f2 CALL
0x2f3 SWAP4
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x28a: JUMPDEST 
0x28b: V168 = 0x0
0x28f: V169 = S[0x0]
0x291: V170 = 0x100
0x294: V171 = EXP 0x100 0x0
0x296: V172 = DIV V169 0x1
0x297: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ac: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2ad: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x2c3: V177 = 0x8fc
0x2c6: V178 = ADDRESS
0x2c7: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2dd: V181 = BALANCE V180
0x2e0: V182 = ISZERO V181
0x2e1: V183 = MUL V182 0x8fc
0x2e3: V184 = 0x40
0x2e5: V185 = M[0x40]
0x2e6: V186 = 0x0
0x2e8: V187 = 0x40
0x2ea: V188 = M[0x40]
0x2ed: V189 = SUB V185 V188
0x2f2: V190 = CALL V183 V176 V181 V188 V189 V188 0x0
0x2f8: V191 = ISZERO V190
0x2f9: V192 = ISZERO V191
0x2fa: V193 = 0x302
0x2fd: JUMPI 0x302 V192
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x28a]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V194 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x302
[0x302:0x344]
---
Predecessors: [0x28a]
Successors: [0x10e]
---
0x302 JUMPDEST
0x303 PUSH1 0x0
0x305 DUP1
0x306 PUSH1 0x0
0x308 PUSH2 0x100
0x30b EXP
0x30c DUP2
0x30d SLOAD
0x30e DUP2
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 MUL
0x325 NOT
0x326 AND
0x327 SWAP1
0x328 DUP4
0x329 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33e AND
0x33f MUL
0x340 OR
0x341 SWAP1
0x342 SSTORE
0x343 POP
0x344 JUMP
---
0x302: JUMPDEST 
0x303: V195 = 0x0
0x306: V196 = 0x0
0x308: V197 = 0x100
0x30b: V198 = EXP 0x100 0x0
0x30d: V199 = S[0x0]
0x30f: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V201 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x325: V202 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x326: V203 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V199
0x329: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x33e: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x33f: V206 = MUL 0x0 0x1
0x340: V207 = OR 0x0 V203
0x342: S[0x0] = V207
0x344: JUMP 0x10e
---
Entry stack: [V11, 0x10e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x345
[0x345:0x34a]
---
Predecessors: [0x11b]
Successors: [0x123]
---
0x345 JUMPDEST
0x346 PUSH1 0x3
0x348 SLOAD
0x349 DUP2
0x34a JUMP
---
0x345: JUMPDEST 
0x346: V208 = 0x3
0x348: V209 = S[0x3]
0x34a: JUMP 0x123
---
Entry stack: [V11, 0x123]
Stack pops: 1
Stack additions: [S0, V209]
Exit stack: [V11, 0x123, V209]

================================

Block 0x34b
[0x34b:0x36f]
---
Predecessors: [0x144]
Successors: [0x14c]
---
0x34b JUMPDEST
0x34c PUSH1 0x0
0x34e DUP1
0x34f SWAP1
0x350 SLOAD
0x351 SWAP1
0x352 PUSH2 0x100
0x355 EXP
0x356 SWAP1
0x357 DIV
0x358 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36d AND
0x36e DUP2
0x36f JUMP
---
0x34b: JUMPDEST 
0x34c: V210 = 0x0
0x350: V211 = S[0x0]
0x352: V212 = 0x100
0x355: V213 = EXP 0x100 0x0
0x357: V214 = DIV V211 0x1
0x358: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x36f: JUMP 0x14c
---
Entry stack: [V11, 0x14c]
Stack pops: 1
Stack additions: [S0, V216]
Exit stack: [V11, 0x14c, V216]

================================

Block 0x370
[0x370:0x395]
---
Predecessors: [0x199]
Successors: [0x1a1]
---
0x370 JUMPDEST
0x371 PUSH1 0x1
0x373 PUSH1 0x0
0x375 SWAP1
0x376 SLOAD
0x377 SWAP1
0x378 PUSH2 0x100
0x37b EXP
0x37c SWAP1
0x37d DIV
0x37e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x393 AND
0x394 DUP2
0x395 JUMP
---
0x370: JUMPDEST 
0x371: V217 = 0x1
0x373: V218 = 0x0
0x376: V219 = S[0x1]
0x378: V220 = 0x100
0x37b: V221 = EXP 0x100 0x0
0x37d: V222 = DIV V219 0x1
0x37e: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x393: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x395: JUMP 0x1a1
---
Entry stack: [V11, 0x1a1]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V11, 0x1a1, V224]

================================

Block 0x396
[0x396:0x3c1]
---
Predecessors: []
Successors: []
---
0x396 STOP
0x397 LOG1
0x398 PUSH6 0x627a7a723058
0x39f SHA3
0x3a0 SLOAD
0x3a1 MISSING 0x5e
0x3a2 DUP2
0x3a3 MISSING 0xe
0x3a4 PUSH25 0xb32f7ec71054742c13bdda98a8225a4073ae88e2e41b018f7
0x3be MISSING 0xdd
0x3bf MISSING 0xcd
0x3c0 STOP
0x3c1 MISSING 0x29
---
0x396: STOP 
0x397: LOG S0 S1 S2
0x398: V225 = 0x627a7a723058
0x39f: V226 = SHA3 0x627a7a723058 S3
0x3a0: V227 = S[V226]
0x3a1: MISSING 0x5e
0x3a3: MISSING 0xe
0x3a4: V228 = 0xb32f7ec71054742c13bdda98a8225a4073ae88e2e41b018f7
0x3be: MISSING 0xdd
0x3bf: MISSING 0xcd
0x3c0: STOP 
0x3c1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V227, S1, S0, S1, 0xb32f7ec71054742c13bdda98a8225a4073ae88e2e41b018f7]
Exit stack: []

================================

Function 0:
Public function signature: 0xb591195
Entry block: 0xd2
Exit block: 0xe5
Body: 0xd2, 0xd9, 0xdd, 0xe5, 0x1e3

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xfb
Exit block: 0x10e
Body: 0xfb, 0x102, 0x106, 0x10e, 0x1e9, 0x1f6, 0x1fa, 0x263, 0x264, 0x286, 0x28a, 0x2fe, 0x302

Function 2:
Public function signature: 0x59c39094
Entry block: 0x110
Exit block: 0x123
Body: 0x110, 0x117, 0x11b, 0x123, 0x345

Function 3:
Public function signature: 0x688263d7
Entry block: 0x139
Exit block: 0x14c
Body: 0x139, 0x140, 0x144, 0x14c, 0x34b

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x18e
Exit block: 0x1a1
Body: 0x18e, 0x195, 0x199, 0x1a1, 0x370

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x7d
Body: 0x6d, 0x79, 0x7d

