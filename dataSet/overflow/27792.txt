Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xa6fbb05
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xa6fbb05
0x3c: V13 = EQ 0xa6fbb05 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x80]
---
0x41 DUP1
0x42 PUSH4 0x181ffc5f
0x47 EQ
0x48 PUSH2 0x80
0x4b JUMPI
---
0x42: V15 = 0x181ffc5f
0x47: V16 = EQ 0x181ffc5f V11
0x48: V17 = 0x80
0x4b: JUMPI 0x80 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd2]
---
0x4c DUP1
0x4d PUSH4 0x87f24484
0x52 EQ
0x53 PUSH2 0xd2
0x56 JUMPI
---
0x4d: V18 = 0x87f24484
0x52: V19 = EQ 0x87f24484 V11
0x53: V20 = 0xd2
0x56: JUMPI 0xd2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x103]
---
0x57 DUP1
0x58 PUSH4 0xb456ecc5
0x5d EQ
0x5e PUSH2 0x103
0x61 JUMPI
---
0x58: V21 = 0xb456ecc5
0x5d: V22 = EQ 0xb456ecc5 V11
0x5e: V23 = 0x103
0x61: JUMPI 0x103 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x7d]
---
Predecessors: [0xd]
Successors: [0x17c]
---
0x64 JUMPDEST
0x65 PUSH2 0x7e
0x68 PUSH1 0x4
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH1 0x0
0x6f NOT
0x70 AND
0x71 SWAP1
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP1
0x76 SWAP2
0x77 SWAP1
0x78 POP
0x79 POP
0x7a PUSH2 0x17c
0x7d JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x7e
0x68: V25 = 0x4
0x6c: V26 = CALLDATALOAD 0x4
0x6d: V27 = 0x0
0x6f: V28 = NOT 0x0
0x70: V29 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V26
0x72: V30 = 0x20
0x74: V31 = ADD 0x20 0x4
0x7a: V32 = 0x17c
0x7d: JUMP 0x17c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7e, V29]
Exit stack: [V11, 0x7e, V29]

================================

Block 0x7e
[0x7e:0x7f]
---
Predecessors: [0x199]
Successors: []
---
0x7e JUMPDEST
0x7f STOP
---
0x7e: JUMPDEST 
0x7f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x80
[0x80:0xcf]
---
Predecessors: [0x41]
Successors: [0x19c]
---
0x80 JUMPDEST
0x81 PUSH2 0xd0
0x84 PUSH1 0x4
0x86 DUP1
0x87 DUP1
0x88 CALLDATALOAD
0x89 SWAP1
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP1
0x8e DUP3
0x8f ADD
0x90 DUP1
0x91 CALLDATALOAD
0x92 SWAP1
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 DUP1
0x98 DUP1
0x99 PUSH1 0x1f
0x9b ADD
0x9c PUSH1 0x20
0x9e DUP1
0x9f SWAP2
0xa0 DIV
0xa1 MUL
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 SWAP1
0xa9 DUP2
0xaa ADD
0xab PUSH1 0x40
0xad MSTORE
0xae DUP1
0xaf SWAP4
0xb0 SWAP3
0xb1 SWAP2
0xb2 SWAP1
0xb3 DUP2
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 DUP4
0xba DUP4
0xbb DUP1
0xbc DUP3
0xbd DUP5
0xbe CALLDATACOPY
0xbf DUP3
0xc0 ADD
0xc1 SWAP2
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 SWAP2
0xc9 SWAP1
0xca POP
0xcb POP
0xcc PUSH2 0x19c
0xcf JUMP
---
0x80: JUMPDEST 
0x81: V33 = 0xd0
0x84: V34 = 0x4
0x88: V35 = CALLDATALOAD 0x4
0x8a: V36 = 0x20
0x8c: V37 = ADD 0x20 0x4
0x8f: V38 = ADD 0x4 V35
0x91: V39 = CALLDATALOAD V38
0x93: V40 = 0x20
0x95: V41 = ADD 0x20 V38
0x99: V42 = 0x1f
0x9b: V43 = ADD 0x1f V39
0x9c: V44 = 0x20
0xa0: V45 = DIV V43 0x20
0xa1: V46 = MUL V45 0x20
0xa2: V47 = 0x20
0xa4: V48 = ADD 0x20 V46
0xa5: V49 = 0x40
0xa7: V50 = M[0x40]
0xaa: V51 = ADD V50 V48
0xab: V52 = 0x40
0xad: M[0x40] = V51
0xb5: M[V50] = V39
0xb6: V53 = 0x20
0xb8: V54 = ADD 0x20 V50
0xbe: CALLDATACOPY V54 V41 V39
0xc0: V55 = ADD V54 V39
0xcc: V56 = 0x19c
0xcf: JUMP 0x19c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd0, V50]
Exit stack: [V11, 0xd0, V50]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0x320]
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0x4c]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V57 = CALLVALUE
0xd4: V58 = ISZERO V57
0xd5: V59 = 0xdd
0xd8: JUMPI 0xdd V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V60 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x323]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x323
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V61 = 0xe5
0xe1: V62 = 0x323
0xe4: JUMP 0x323
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V11, 0xe5]

================================

Block 0xe5
[0xe5:0x102]
---
Predecessors: [0x323]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb PUSH1 0x0
0xed NOT
0xee AND
0xef PUSH1 0x0
0xf1 NOT
0xf2 AND
0xf3 DUP2
0xf4 MSTORE
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP2
0xf9 POP
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff SWAP2
0x100 SUB
0x101 SWAP1
0x102 RETURN
---
0xe5: JUMPDEST 
0xe6: V63 = 0x40
0xe8: V64 = M[0x40]
0xeb: V65 = 0x0
0xed: V66 = NOT 0x0
0xee: V67 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V236
0xef: V68 = 0x0
0xf1: V69 = NOT 0x0
0xf2: V70 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V67
0xf4: M[V64] = V70
0xf5: V71 = 0x20
0xf7: V72 = ADD 0x20 V64
0xfb: V73 = 0x40
0xfd: V74 = M[0x40]
0x100: V75 = SUB V72 V74
0x102: RETURN V74 V75
---
Entry stack: [V11, 0xe5, V236]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x103
[0x103:0x109]
---
Predecessors: [0x57]
Successors: [0x10a, 0x10e]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 ISZERO
0x106 PUSH2 0x10e
0x109 JUMPI
---
0x103: JUMPDEST 
0x104: V76 = CALLVALUE
0x105: V77 = ISZERO V76
0x106: V78 = 0x10e
0x109: JUMPI 0x10e V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0x103]
Successors: []
---
0x10a PUSH1 0x0
0x10c DUP1
0x10d REVERT
---
0x10a: V79 = 0x0
0x10d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10e
[0x10e:0x15d]
---
Predecessors: [0x103]
Successors: [0x329]
---
0x10e JUMPDEST
0x10f PUSH2 0x15e
0x112 PUSH1 0x4
0x114 DUP1
0x115 DUP1
0x116 CALLDATALOAD
0x117 SWAP1
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP1
0x11c DUP3
0x11d ADD
0x11e DUP1
0x11f CALLDATALOAD
0x120 SWAP1
0x121 PUSH1 0x20
0x123 ADD
0x124 SWAP1
0x125 DUP1
0x126 DUP1
0x127 PUSH1 0x1f
0x129 ADD
0x12a PUSH1 0x20
0x12c DUP1
0x12d SWAP2
0x12e DIV
0x12f MUL
0x130 PUSH1 0x20
0x132 ADD
0x133 PUSH1 0x40
0x135 MLOAD
0x136 SWAP1
0x137 DUP2
0x138 ADD
0x139 PUSH1 0x40
0x13b MSTORE
0x13c DUP1
0x13d SWAP4
0x13e SWAP3
0x13f SWAP2
0x140 SWAP1
0x141 DUP2
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x20
0x146 ADD
0x147 DUP4
0x148 DUP4
0x149 DUP1
0x14a DUP3
0x14b DUP5
0x14c CALLDATACOPY
0x14d DUP3
0x14e ADD
0x14f SWAP2
0x150 POP
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 POP
0x156 SWAP2
0x157 SWAP1
0x158 POP
0x159 POP
0x15a PUSH2 0x329
0x15d JUMP
---
0x10e: JUMPDEST 
0x10f: V80 = 0x15e
0x112: V81 = 0x4
0x116: V82 = CALLDATALOAD 0x4
0x118: V83 = 0x20
0x11a: V84 = ADD 0x20 0x4
0x11d: V85 = ADD 0x4 V82
0x11f: V86 = CALLDATALOAD V85
0x121: V87 = 0x20
0x123: V88 = ADD 0x20 V85
0x127: V89 = 0x1f
0x129: V90 = ADD 0x1f V86
0x12a: V91 = 0x20
0x12e: V92 = DIV V90 0x20
0x12f: V93 = MUL V92 0x20
0x130: V94 = 0x20
0x132: V95 = ADD 0x20 V93
0x133: V96 = 0x40
0x135: V97 = M[0x40]
0x138: V98 = ADD V97 V95
0x139: V99 = 0x40
0x13b: M[0x40] = V98
0x143: M[V97] = V86
0x144: V100 = 0x20
0x146: V101 = ADD 0x20 V97
0x14c: CALLDATACOPY V101 V88 V86
0x14e: V102 = ADD V101 V86
0x15a: V103 = 0x329
0x15d: JUMP 0x329
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15e, V97]
Exit stack: [V11, 0x15e, V97]

================================

Block 0x15e
[0x15e:0x17b]
---
Predecessors: [0x361]
Successors: []
---
0x15e JUMPDEST
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 DUP3
0x164 PUSH1 0x0
0x166 NOT
0x167 AND
0x168 PUSH1 0x0
0x16a NOT
0x16b AND
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP2
0x172 POP
0x173 POP
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 SWAP2
0x179 SUB
0x17a SWAP1
0x17b RETURN
---
0x15e: JUMPDEST 
0x15f: V104 = 0x40
0x161: V105 = M[0x40]
0x164: V106 = 0x0
0x166: V107 = NOT 0x0
0x167: V108 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V272
0x168: V109 = 0x0
0x16a: V110 = NOT 0x0
0x16b: V111 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V108
0x16d: M[V105] = V111
0x16e: V112 = 0x20
0x170: V113 = ADD 0x20 V105
0x174: V114 = 0x40
0x176: V115 = M[0x40]
0x179: V116 = SUB V113 V115
0x17b: RETURN V115 V116
---
Entry stack: [V11, V272]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x17c
[0x17c:0x18d]
---
Predecessors: [0x64]
Successors: [0x18e, 0x199]
---
0x17c JUMPDEST
0x17d PUSH8 0xde0b6b3a7640000
0x186 CALLVALUE
0x187 LT
0x188 ISZERO
0x189 ISZERO
0x18a PUSH2 0x199
0x18d JUMPI
---
0x17c: JUMPDEST 
0x17d: V117 = 0xde0b6b3a7640000
0x186: V118 = CALLVALUE
0x187: V119 = LT V118 0xde0b6b3a7640000
0x188: V120 = ISZERO V119
0x189: V121 = ISZERO V120
0x18a: V122 = 0x199
0x18d: JUMPI 0x199 V121
---
Entry stack: [V11, 0x7e, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7e, V29]

================================

Block 0x18e
[0x18e:0x198]
---
Predecessors: [0x17c]
Successors: [0x199]
---
0x18e DUP1
0x18f PUSH1 0x1
0x191 DUP2
0x192 PUSH1 0x0
0x194 NOT
0x195 AND
0x196 SWAP1
0x197 SSTORE
0x198 POP
---
0x18f: V123 = 0x1
0x192: V124 = 0x0
0x194: V125 = NOT 0x0
0x195: V126 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V29
0x197: S[0x1] = V126
---
Entry stack: [V11, 0x7e, V29]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7e, V29]

================================

Block 0x199
[0x199:0x19b]
---
Predecessors: [0x17c, 0x18e]
Successors: [0x7e]
---
0x199 JUMPDEST
0x19a POP
0x19b JUMP
---
0x199: JUMPDEST 
0x19b: JUMP 0x7e
---
Entry stack: [V11, 0x7e, V29]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x19c
[0x19c:0x1f1]
---
Predecessors: [0x80]
Successors: [0x1f2, 0x249]
---
0x19c JUMPDEST
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 SWAP1
0x1a1 SLOAD
0x1a2 SWAP1
0x1a3 PUSH2 0x100
0x1a6 EXP
0x1a7 SWAP1
0x1a8 DIV
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 CALLER
0x1d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1eb AND
0x1ec EQ
0x1ed ISZERO
0x1ee PUSH2 0x249
0x1f1 JUMPI
---
0x19c: JUMPDEST 
0x19d: V127 = 0x0
0x1a1: V128 = S[0x0]
0x1a3: V129 = 0x100
0x1a6: V130 = EXP 0x100 0x0
0x1a8: V131 = DIV V128 0x1
0x1a9: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x1bf: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x1d5: V136 = CALLER
0x1d6: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x1ec: V139 = EQ V138 V135
0x1ed: V140 = ISZERO V139
0x1ee: V141 = 0x249
0x1f1: JUMPI 0x249 V140
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x1f2
[0x1f2:0x243]
---
Predecessors: [0x19c]
Successors: [0x244, 0x248]
---
0x1f2 CALLER
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 PUSH2 0x8fc
0x20c ADDRESS
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 AND
0x223 BALANCE
0x224 SWAP1
0x225 DUP2
0x226 ISZERO
0x227 MUL
0x228 SWAP1
0x229 PUSH1 0x40
0x22b MLOAD
0x22c PUSH1 0x0
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 DUP4
0x233 SUB
0x234 DUP2
0x235 DUP6
0x236 DUP9
0x237 DUP9
0x238 CALL
0x239 SWAP4
0x23a POP
0x23b POP
0x23c POP
0x23d POP
0x23e ISZERO
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x1f2: V142 = CALLER
0x1f3: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x209: V145 = 0x8fc
0x20c: V146 = ADDRESS
0x20d: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x223: V149 = BALANCE V148
0x226: V150 = ISZERO V149
0x227: V151 = MUL V150 0x8fc
0x229: V152 = 0x40
0x22b: V153 = M[0x40]
0x22c: V154 = 0x0
0x22e: V155 = 0x40
0x230: V156 = M[0x40]
0x233: V157 = SUB V153 V156
0x238: V158 = CALL V151 V144 V149 V156 V157 V156 0x0
0x23e: V159 = ISZERO V158
0x23f: V160 = ISZERO V159
0x240: V161 = 0x248
0x243: JUMPI 0x248 V160
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x1f2]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V162 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x248
[0x248:0x248]
---
Predecessors: [0x1f2]
Successors: [0x249]
---
0x248 JUMPDEST
---
0x248: JUMPDEST 
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x249
[0x249:0x253]
---
Predecessors: [0x19c, 0x248]
Successors: [0x254, 0x320]
---
0x249 JUMPDEST
0x24a PUSH1 0x2
0x24c PUSH1 0x1
0x24e EQ
0x24f ISZERO
0x250 PUSH2 0x320
0x253 JUMPI
---
0x249: JUMPDEST 
0x24a: V163 = 0x2
0x24c: V164 = 0x1
0x24e: V165 = EQ 0x1 0x2
0x24f: V166 = ISZERO 0x0
0x250: V167 = 0x320
0x253: JUMPI 0x320 0x1
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x254
[0x254:0x263]
---
Predecessors: [0x249]
Successors: [0x264]
---
0x254 DUP1
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 DUP3
0x25a DUP1
0x25b MLOAD
0x25c SWAP1
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP1
0x261 DUP1
0x262 DUP4
0x263 DUP4
---
0x255: V168 = 0x40
0x257: V169 = M[0x40]
0x25b: V170 = M[V50]
0x25d: V171 = 0x20
0x25f: V172 = ADD 0x20 V50
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 1
Stack additions: [S0, S0, V169, V169, V172, V170, V170, V169, V172]
Exit stack: [V11, 0xd0, V50, V50, V169, V169, V172, V170, V170, V169, V172]

================================

Block 0x264
[0x264:0x26e]
---
Predecessors: [0x254, 0x26f]
Successors: [0x26f, 0x289]
---
0x264 JUMPDEST
0x265 PUSH1 0x20
0x267 DUP4
0x268 LT
0x269 ISZERO
0x26a ISZERO
0x26b PUSH2 0x289
0x26e JUMPI
---
0x264: JUMPDEST 
0x265: V173 = 0x20
0x268: V174 = LT S2 0x20
0x269: V175 = ISZERO V174
0x26a: V176 = ISZERO V175
0x26b: V177 = 0x289
0x26e: JUMPI 0x289 V176
---
Entry stack: [V11, 0xd0, V50, V50, V169, V169, V172, V170, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xd0, V50, V50, V169, V169, V172, V170, S2, S1, S0]

================================

Block 0x26f
[0x26f:0x288]
---
Predecessors: [0x264]
Successors: [0x264]
---
0x26f DUP1
0x270 MLOAD
0x271 DUP3
0x272 MSTORE
0x273 PUSH1 0x20
0x275 DUP3
0x276 ADD
0x277 SWAP2
0x278 POP
0x279 PUSH1 0x20
0x27b DUP2
0x27c ADD
0x27d SWAP1
0x27e POP
0x27f PUSH1 0x20
0x281 DUP4
0x282 SUB
0x283 SWAP3
0x284 POP
0x285 PUSH2 0x264
0x288 JUMP
---
0x270: V178 = M[S0]
0x272: M[S1] = V178
0x273: V179 = 0x20
0x276: V180 = ADD S1 0x20
0x279: V181 = 0x20
0x27c: V182 = ADD S0 0x20
0x27f: V183 = 0x20
0x282: V184 = SUB S2 0x20
0x285: V185 = 0x264
0x288: JUMP 0x264
---
Entry stack: [V11, 0xd0, V50, V50, V169, V169, V172, V170, S2, S1, S0]
Stack pops: 3
Stack additions: [V184, V180, V182]
Exit stack: [V11, 0xd0, V50, V50, V169, V169, V172, V170, V184, V180, V182]

================================

Block 0x289
[0x289:0x2c7]
---
Predecessors: [0x264]
Successors: [0x2c8, 0x31f]
---
0x289 JUMPDEST
0x28a PUSH1 0x1
0x28c DUP4
0x28d PUSH1 0x20
0x28f SUB
0x290 PUSH2 0x100
0x293 EXP
0x294 SUB
0x295 DUP1
0x296 NOT
0x297 DUP3
0x298 MLOAD
0x299 AND
0x29a DUP2
0x29b DUP5
0x29c MLOAD
0x29d AND
0x29e DUP1
0x29f DUP3
0x2a0 OR
0x2a1 DUP6
0x2a2 MSTORE
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 POP
0x2a9 SWAP1
0x2aa POP
0x2ab ADD
0x2ac SWAP2
0x2ad POP
0x2ae POP
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 SWAP2
0x2b4 SUB
0x2b5 SWAP1
0x2b6 SHA3
0x2b7 PUSH1 0x0
0x2b9 NOT
0x2ba AND
0x2bb PUSH1 0x1
0x2bd SLOAD
0x2be PUSH1 0x0
0x2c0 NOT
0x2c1 AND
0x2c2 EQ
0x2c3 ISZERO
0x2c4 PUSH2 0x31f
0x2c7 JUMPI
---
0x289: JUMPDEST 
0x28a: V186 = 0x1
0x28d: V187 = 0x20
0x28f: V188 = SUB 0x20 S2
0x290: V189 = 0x100
0x293: V190 = EXP 0x100 V188
0x294: V191 = SUB V190 0x1
0x296: V192 = NOT V191
0x298: V193 = M[S0]
0x299: V194 = AND V193 V192
0x29c: V195 = M[S1]
0x29d: V196 = AND V195 V191
0x2a0: V197 = OR V194 V196
0x2a2: M[S1] = V197
0x2ab: V198 = ADD V170 V169
0x2af: V199 = 0x40
0x2b1: V200 = M[0x40]
0x2b4: V201 = SUB V198 V200
0x2b6: V202 = SHA3 V200 V201
0x2b7: V203 = 0x0
0x2b9: V204 = NOT 0x0
0x2ba: V205 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V202
0x2bb: V206 = 0x1
0x2bd: V207 = S[0x1]
0x2be: V208 = 0x0
0x2c0: V209 = NOT 0x0
0x2c1: V210 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V207
0x2c2: V211 = EQ V210 V205
0x2c3: V212 = ISZERO V211
0x2c4: V213 = 0x31f
0x2c7: JUMPI 0x31f V212
---
Entry stack: [V11, 0xd0, V50, V50, V169, V169, V172, V170, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x2c8
[0x2c8:0x319]
---
Predecessors: [0x289]
Successors: [0x31a, 0x31e]
---
0x2c8 CALLER
0x2c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2de AND
0x2df PUSH2 0x8fc
0x2e2 ADDRESS
0x2e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f8 AND
0x2f9 BALANCE
0x2fa SWAP1
0x2fb DUP2
0x2fc ISZERO
0x2fd MUL
0x2fe SWAP1
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 PUSH1 0x0
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 DUP4
0x309 SUB
0x30a DUP2
0x30b DUP6
0x30c DUP9
0x30d DUP9
0x30e CALL
0x30f SWAP4
0x310 POP
0x311 POP
0x312 POP
0x313 POP
0x314 ISZERO
0x315 ISZERO
0x316 PUSH2 0x31e
0x319 JUMPI
---
0x2c8: V214 = CALLER
0x2c9: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x2df: V217 = 0x8fc
0x2e2: V218 = ADDRESS
0x2e3: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x2f9: V221 = BALANCE V220
0x2fc: V222 = ISZERO V221
0x2fd: V223 = MUL V222 0x8fc
0x2ff: V224 = 0x40
0x301: V225 = M[0x40]
0x302: V226 = 0x0
0x304: V227 = 0x40
0x306: V228 = M[0x40]
0x309: V229 = SUB V225 V228
0x30e: V230 = CALL V223 V216 V221 V228 V229 V228 0x0
0x314: V231 = ISZERO V230
0x315: V232 = ISZERO V231
0x316: V233 = 0x31e
0x319: JUMPI 0x31e V232
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x31a
[0x31a:0x31d]
---
Predecessors: [0x2c8]
Successors: []
---
0x31a PUSH1 0x0
0x31c DUP1
0x31d REVERT
---
0x31a: V234 = 0x0
0x31d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x31e
[0x31e:0x31e]
---
Predecessors: [0x2c8]
Successors: [0x31f]
---
0x31e JUMPDEST
---
0x31e: JUMPDEST 
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x31f
[0x31f:0x31f]
---
Predecessors: [0x289, 0x31e]
Successors: [0x320]
---
0x31f JUMPDEST
---
0x31f: JUMPDEST 
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0, V50]

================================

Block 0x320
[0x320:0x322]
---
Predecessors: [0x249, 0x31f]
Successors: [0xd0]
---
0x320 JUMPDEST
0x321 POP
0x322 JUMP
---
0x320: JUMPDEST 
0x322: JUMP 0xd0
---
Entry stack: [V11, 0xd0, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x323
[0x323:0x328]
---
Predecessors: [0xdd]
Successors: [0xe5]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
0x326 SLOAD
0x327 DUP2
0x328 JUMP
---
0x323: JUMPDEST 
0x324: V235 = 0x1
0x326: V236 = S[0x1]
0x328: JUMP 0xe5
---
Entry stack: [V11, 0xe5]
Stack pops: 1
Stack additions: [S0, V236]
Exit stack: [V11, 0xe5, V236]

================================

Block 0x329
[0x329:0x33b]
---
Predecessors: [0x10e]
Successors: [0x33c]
---
0x329 JUMPDEST
0x32a PUSH1 0x0
0x32c DUP2
0x32d PUSH1 0x40
0x32f MLOAD
0x330 DUP1
0x331 DUP3
0x332 DUP1
0x333 MLOAD
0x334 SWAP1
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP1
0x339 DUP1
0x33a DUP4
0x33b DUP4
---
0x329: JUMPDEST 
0x32a: V237 = 0x0
0x32d: V238 = 0x40
0x32f: V239 = M[0x40]
0x333: V240 = M[V97]
0x335: V241 = 0x20
0x337: V242 = ADD 0x20 V97
---
Entry stack: [V11, 0x15e, V97]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V239, V239, V242, V240, V240, V239, V242]
Exit stack: [V11, 0x15e, V97, 0x0, V97, V239, V239, V242, V240, V240, V239, V242]

================================

Block 0x33c
[0x33c:0x346]
---
Predecessors: [0x329, 0x347]
Successors: [0x347, 0x361]
---
0x33c JUMPDEST
0x33d PUSH1 0x20
0x33f DUP4
0x340 LT
0x341 ISZERO
0x342 ISZERO
0x343 PUSH2 0x361
0x346 JUMPI
---
0x33c: JUMPDEST 
0x33d: V243 = 0x20
0x340: V244 = LT S2 0x20
0x341: V245 = ISZERO V244
0x342: V246 = ISZERO V245
0x343: V247 = 0x361
0x346: JUMPI 0x361 V246
---
Entry stack: [V11, 0x15e, V97, 0x0, V97, V239, V239, V242, V240, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x15e, V97, 0x0, V97, V239, V239, V242, V240, S2, S1, S0]

================================

Block 0x347
[0x347:0x360]
---
Predecessors: [0x33c]
Successors: [0x33c]
---
0x347 DUP1
0x348 MLOAD
0x349 DUP3
0x34a MSTORE
0x34b PUSH1 0x20
0x34d DUP3
0x34e ADD
0x34f SWAP2
0x350 POP
0x351 PUSH1 0x20
0x353 DUP2
0x354 ADD
0x355 SWAP1
0x356 POP
0x357 PUSH1 0x20
0x359 DUP4
0x35a SUB
0x35b SWAP3
0x35c POP
0x35d PUSH2 0x33c
0x360 JUMP
---
0x348: V248 = M[S0]
0x34a: M[S1] = V248
0x34b: V249 = 0x20
0x34e: V250 = ADD S1 0x20
0x351: V251 = 0x20
0x354: V252 = ADD S0 0x20
0x357: V253 = 0x20
0x35a: V254 = SUB S2 0x20
0x35d: V255 = 0x33c
0x360: JUMP 0x33c
---
Entry stack: [V11, 0x15e, V97, 0x0, V97, V239, V239, V242, V240, S2, S1, S0]
Stack pops: 3
Stack additions: [V254, V250, V252]
Exit stack: [V11, 0x15e, V97, 0x0, V97, V239, V239, V242, V240, V254, V250, V252]

================================

Block 0x361
[0x361:0x394]
---
Predecessors: [0x33c]
Successors: [0x15e]
---
0x361 JUMPDEST
0x362 PUSH1 0x1
0x364 DUP4
0x365 PUSH1 0x20
0x367 SUB
0x368 PUSH2 0x100
0x36b EXP
0x36c SUB
0x36d DUP1
0x36e NOT
0x36f DUP3
0x370 MLOAD
0x371 AND
0x372 DUP2
0x373 DUP5
0x374 MLOAD
0x375 AND
0x376 DUP1
0x377 DUP3
0x378 OR
0x379 DUP6
0x37a MSTORE
0x37b POP
0x37c POP
0x37d POP
0x37e POP
0x37f POP
0x380 POP
0x381 SWAP1
0x382 POP
0x383 ADD
0x384 SWAP2
0x385 POP
0x386 POP
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b SWAP2
0x38c SUB
0x38d SWAP1
0x38e SHA3
0x38f SWAP1
0x390 POP
0x391 SWAP2
0x392 SWAP1
0x393 POP
0x394 JUMP
---
0x361: JUMPDEST 
0x362: V256 = 0x1
0x365: V257 = 0x20
0x367: V258 = SUB 0x20 S2
0x368: V259 = 0x100
0x36b: V260 = EXP 0x100 V258
0x36c: V261 = SUB V260 0x1
0x36e: V262 = NOT V261
0x370: V263 = M[S0]
0x371: V264 = AND V263 V262
0x374: V265 = M[S1]
0x375: V266 = AND V265 V261
0x378: V267 = OR V264 V266
0x37a: M[S1] = V267
0x383: V268 = ADD V240 V239
0x387: V269 = 0x40
0x389: V270 = M[0x40]
0x38c: V271 = SUB V268 V270
0x38e: V272 = SHA3 V270 V271
0x394: JUMP 0x15e
---
Entry stack: [V11, 0x15e, V97, 0x0, V97, V239, V239, V242, V240, S2, S1, S0]
Stack pops: 11
Stack additions: [V272]
Exit stack: [V11, V272]

================================

Block 0x395
[0x395:0x3c1]
---
Predecessors: []
Successors: []
---
0x395 STOP
0x396 LOG1
0x397 PUSH6 0x627a7a723058
0x39e SHA3
0x39f DUP13
0x3a0 CALLDATACOPY
0x3a1 DUP6
0x3a2 EXTCODECOPY
0x3a3 MISSING 0x27
0x3a4 CALLDATACOPY
0x3a5 MISSING 0xde
0x3a6 CALLDATASIZE
0x3a7 MISSING 0xe9
0x3a8 PUSH25 0x4315237295a89fe7e28adb3f4885c5a467d152db3d830029
---
0x395: STOP 
0x396: LOG S0 S1 S2
0x397: V273 = 0x627a7a723058
0x39e: V274 = SHA3 0x627a7a723058 S3
0x3a0: CALLDATACOPY S15 V274 S4
0x3a2: EXTCODECOPY S10 S5 S6 S7
0x3a3: MISSING 0x27
0x3a4: CALLDATACOPY S0 S1 S2
0x3a5: MISSING 0xde
0x3a6: V275 = CALLDATASIZE
0x3a7: MISSING 0xe9
0x3a8: V276 = 0x4315237295a89fe7e28adb3f4885c5a467d152db3d830029
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, S9, S10, S11, S12, S13, S14, S15, V275, 0x4315237295a89fe7e28adb3f4885c5a467d152db3d830029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x64
Exit block: 0x7e
Body: 0x64, 0x7e, 0x17c, 0x18e, 0x199

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x80
Exit block: 0x31a
Body: 0x80, 0xd0, 0x19c, 0x1f2, 0x244, 0x248, 0x249, 0x254, 0x264, 0x26f, 0x289, 0x2c8, 0x31a, 0x31e, 0x31f, 0x320

Function 2:
Public function signature: 0x87f24484
Entry block: 0xd2
Exit block: 0xe5
Body: 0xd2, 0xd9, 0xdd, 0xe5, 0x323

Function 3:
Public function signature: 0xb456ecc5
Entry block: 0x103
Exit block: 0x15e
Body: 0x103, 0x10a, 0x10e, 0x15e, 0x329, 0x33c, 0x347, 0x361

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

