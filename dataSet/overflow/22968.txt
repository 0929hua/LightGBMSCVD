Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xd0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xd0
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xd0
0xc: JUMPI 0xd0 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xd5]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xd5
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xd5
0x40: JUMPI 0xd5 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x163]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x163
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x163
0x4b: JUMPI 0x163 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1bd]
---
0x4c DUP1
0x4d PUSH4 0x156c2e82
0x52 EQ
0x53 PUSH2 0x1bd
0x56 JUMPI
---
0x4d: V18 = 0x156c2e82
0x52: V19 = EQ 0x156c2e82 V11
0x53: V20 = 0x1bd
0x56: JUMPI 0x1bd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x20e]
---
0x57 DUP1
0x58 PUSH4 0x18160ddd
0x5d EQ
0x5e PUSH2 0x20e
0x61 JUMPI
---
0x58: V21 = 0x18160ddd
0x5d: V22 = EQ 0x18160ddd V11
0x5e: V23 = 0x20e
0x61: JUMPI 0x20e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x237]
---
0x62 DUP1
0x63 PUSH4 0x23b872dd
0x68 EQ
0x69 PUSH2 0x237
0x6c JUMPI
---
0x63: V24 = 0x23b872dd
0x68: V25 = EQ 0x23b872dd V11
0x69: V26 = 0x237
0x6c: JUMPI 0x237 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x2b0]
---
0x6d DUP1
0x6e PUSH4 0x313ce567
0x73 EQ
0x74 PUSH2 0x2b0
0x77 JUMPI
---
0x6e: V27 = 0x313ce567
0x73: V28 = EQ 0x313ce567 V11
0x74: V29 = 0x2b0
0x77: JUMPI 0x2b0 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2df]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x2df
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x2df
0x82: JUMPI 0x2df V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x32c]
---
0x83 DUP1
0x84 PUSH4 0x95d89b41
0x89 EQ
0x8a PUSH2 0x32c
0x8d JUMPI
---
0x84: V33 = 0x95d89b41
0x89: V34 = EQ 0x95d89b41 V11
0x8a: V35 = 0x32c
0x8d: JUMPI 0x32c V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x3ba]
---
0x8e DUP1
0x8f PUSH4 0x9b1cbccc
0x94 EQ
0x95 PUSH2 0x3ba
0x98 JUMPI
---
0x8f: V36 = 0x9b1cbccc
0x94: V37 = EQ 0x9b1cbccc V11
0x95: V38 = 0x3ba
0x98: JUMPI 0x3ba V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x3e7]
---
0x99 DUP1
0x9a PUSH4 0xa9059cbb
0x9f EQ
0xa0 PUSH2 0x3e7
0xa3 JUMPI
---
0x9a: V39 = 0xa9059cbb
0x9f: V40 = EQ 0xa9059cbb V11
0xa0: V41 = 0x3e7
0xa3: JUMPI 0x3e7 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x441]
---
0xa4 DUP1
0xa5 PUSH4 0xa9c7648f
0xaa EQ
0xab PUSH2 0x441
0xae JUMPI
---
0xa5: V42 = 0xa9c7648f
0xaa: V43 = EQ 0xa9c7648f V11
0xab: V44 = 0x441
0xae: JUMPI 0x441 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x4a4]
---
0xaf DUP1
0xb0 PUSH4 0xc108d542
0xb5 EQ
0xb6 PUSH2 0x4a4
0xb9 JUMPI
---
0xb0: V45 = 0xc108d542
0xb5: V46 = EQ 0xc108d542 V11
0xb6: V47 = 0x4a4
0xb9: JUMPI 0x4a4 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x4d1]
---
0xba DUP1
0xbb PUSH4 0xdd62ed3e
0xc0 EQ
0xc1 PUSH2 0x4d1
0xc4 JUMPI
---
0xbb: V48 = 0xdd62ed3e
0xc0: V49 = EQ 0xdd62ed3e V11
0xc1: V50 = 0x4d1
0xc4: JUMPI 0x4d1 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x53d]
---
0xc5 DUP1
0xc6 PUSH4 0xf2fde38b
0xcb EQ
0xcc PUSH2 0x53d
0xcf JUMPI
---
0xc6: V51 = 0xf2fde38b
0xcb: V52 = EQ 0xf2fde38b V11
0xcc: V53 = 0x53d
0xcf: JUMPI 0x53d V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xd4]
---
Predecessors: [0x0, 0xc5]
Successors: []
---
0xd0 JUMPDEST
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd0: JUMPDEST 
0xd1: V54 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xdb]
---
Predecessors: [0xd]
Successors: [0xdc, 0xe0]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd5: JUMPDEST 
0xd6: V55 = CALLVALUE
0xd7: V56 = ISZERO V55
0xd8: V57 = 0xe0
0xdb: JUMPI 0xe0 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd5]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V58 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0xd5]
Successors: [0x576]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xe8
0xe4 PUSH2 0x576
0xe7 JUMP
---
0xe0: JUMPDEST 
0xe1: V59 = 0xe8
0xe4: V60 = 0x576
0xe7: JUMP 0x576
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V11, 0xe8]

================================

Block 0xe8
[0xe8:0x10c]
---
Predecessors: [0x57e, 0xcd9]
Successors: [0x10d]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed DUP1
0xee PUSH1 0x20
0xf0 ADD
0xf1 DUP3
0xf2 DUP2
0xf3 SUB
0xf4 DUP3
0xf5 MSTORE
0xf6 DUP4
0xf7 DUP2
0xf8 DUP2
0xf9 MLOAD
0xfa DUP2
0xfb MSTORE
0xfc PUSH1 0x20
0xfe ADD
0xff SWAP2
0x100 POP
0x101 DUP1
0x102 MLOAD
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 DUP1
0x109 DUP4
0x10a DUP4
0x10b PUSH1 0x0
---
0xe8: JUMPDEST 
0xe9: V61 = 0x40
0xeb: V62 = M[0x40]
0xee: V63 = 0x20
0xf0: V64 = ADD 0x20 V62
0xf3: V65 = SUB V64 V62
0xf5: M[V62] = V65
0xf9: V66 = M[S0]
0xfb: M[V64] = V66
0xfc: V67 = 0x20
0xfe: V68 = ADD 0x20 V64
0x102: V69 = M[S0]
0x104: V70 = 0x20
0x106: V71 = ADD 0x20 S0
0x10b: V72 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V62, V62, V68, V71, V69, V69, V68, V71, 0x0]
Exit stack: [V11, S0, V62, V62, V68, V71, V69, V69, V68, V71, 0x0]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0xe8, 0x116]
Successors: [0x116, 0x128]
---
0x10d JUMPDEST
0x10e DUP4
0x10f DUP2
0x110 LT
0x111 ISZERO
0x112 PUSH2 0x128
0x115 JUMPI
---
0x10d: JUMPDEST 
0x110: V73 = LT S0 V69
0x111: V74 = ISZERO V73
0x112: V75 = 0x128
0x115: JUMPI 0x128 V74
---
Entry stack: [V11, S9, V62, V62, V68, V71, V69, V69, V68, V71, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V62, V62, V68, V71, V69, V69, V68, V71, S0]

================================

Block 0x116
[0x116:0x127]
---
Predecessors: [0x10d]
Successors: [0x10d]
---
0x116 DUP1
0x117 DUP3
0x118 ADD
0x119 MLOAD
0x11a DUP2
0x11b DUP5
0x11c ADD
0x11d MSTORE
0x11e PUSH1 0x20
0x120 DUP2
0x121 ADD
0x122 SWAP1
0x123 POP
0x124 PUSH2 0x10d
0x127 JUMP
---
0x118: V76 = ADD V71 S0
0x119: V77 = M[V76]
0x11c: V78 = ADD V68 S0
0x11d: M[V78] = V77
0x11e: V79 = 0x20
0x121: V80 = ADD S0 0x20
0x124: V81 = 0x10d
0x127: JUMP 0x10d
---
Entry stack: [V11, S9, V62, V62, V68, V71, V69, V69, V68, V71, S0]
Stack pops: 3
Stack additions: [S2, S1, V80]
Exit stack: [V11, S9, V62, V62, V68, V71, V69, V69, V68, V71, V80]

================================

Block 0x128
[0x128:0x13b]
---
Predecessors: [0x10d]
Successors: [0x13c, 0x155]
---
0x128 JUMPDEST
0x129 POP
0x12a POP
0x12b POP
0x12c POP
0x12d SWAP1
0x12e POP
0x12f SWAP1
0x130 DUP2
0x131 ADD
0x132 SWAP1
0x133 PUSH1 0x1f
0x135 AND
0x136 DUP1
0x137 ISZERO
0x138 PUSH2 0x155
0x13b JUMPI
---
0x128: JUMPDEST 
0x131: V82 = ADD V69 V68
0x133: V83 = 0x1f
0x135: V84 = AND 0x1f V69
0x137: V85 = ISZERO V84
0x138: V86 = 0x155
0x13b: JUMPI 0x155 V85
---
Entry stack: [V11, S9, V62, V62, V68, V71, V69, V69, V68, V71, S0]
Stack pops: 7
Stack additions: [V82, V84]
Exit stack: [V11, S9, V62, V62, V82, V84]

================================

Block 0x13c
[0x13c:0x154]
---
Predecessors: [0x128]
Successors: [0x155]
---
0x13c DUP1
0x13d DUP3
0x13e SUB
0x13f DUP1
0x140 MLOAD
0x141 PUSH1 0x1
0x143 DUP4
0x144 PUSH1 0x20
0x146 SUB
0x147 PUSH2 0x100
0x14a EXP
0x14b SUB
0x14c NOT
0x14d AND
0x14e DUP2
0x14f MSTORE
0x150 PUSH1 0x20
0x152 ADD
0x153 SWAP2
0x154 POP
---
0x13e: V87 = SUB V82 V84
0x140: V88 = M[V87]
0x141: V89 = 0x1
0x144: V90 = 0x20
0x146: V91 = SUB 0x20 V84
0x147: V92 = 0x100
0x14a: V93 = EXP 0x100 V91
0x14b: V94 = SUB V93 0x1
0x14c: V95 = NOT V94
0x14d: V96 = AND V95 V88
0x14f: M[V87] = V96
0x150: V97 = 0x20
0x152: V98 = ADD 0x20 V87
---
Entry stack: [V11, S4, V62, V62, V82, V84]
Stack pops: 2
Stack additions: [V98, S0]
Exit stack: [V11, S4, V62, V62, V98, V84]

================================

Block 0x155
[0x155:0x162]
---
Predecessors: [0x128, 0x13c]
Successors: []
---
0x155 JUMPDEST
0x156 POP
0x157 SWAP3
0x158 POP
0x159 POP
0x15a POP
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f SWAP2
0x160 SUB
0x161 SWAP1
0x162 RETURN
---
0x155: JUMPDEST 
0x15b: V99 = 0x40
0x15d: V100 = M[0x40]
0x160: V101 = SUB S1 V100
0x162: RETURN V100 V101
---
Entry stack: [V11, S4, V62, V62, S1, V84]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x169]
---
Predecessors: [0x41]
Successors: [0x16a, 0x16e]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x163: JUMPDEST 
0x164: V102 = CALLVALUE
0x165: V103 = ISZERO V102
0x166: V104 = 0x16e
0x169: JUMPI 0x16e V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x163]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V105 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16e
[0x16e:0x1a2]
---
Predecessors: [0x163]
Successors: [0x5b9]
---
0x16e JUMPDEST
0x16f PUSH2 0x1a3
0x172 PUSH1 0x4
0x174 DUP1
0x175 DUP1
0x176 CALLDATALOAD
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d SWAP1
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP1
0x192 SWAP2
0x193 SWAP1
0x194 DUP1
0x195 CALLDATALOAD
0x196 SWAP1
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP1
0x19b SWAP2
0x19c SWAP1
0x19d POP
0x19e POP
0x19f PUSH2 0x5b9
0x1a2 JUMP
---
0x16e: JUMPDEST 
0x16f: V106 = 0x1a3
0x172: V107 = 0x4
0x176: V108 = CALLDATALOAD 0x4
0x177: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x18e: V111 = 0x20
0x190: V112 = ADD 0x20 0x4
0x195: V113 = CALLDATALOAD 0x24
0x197: V114 = 0x20
0x199: V115 = ADD 0x20 0x24
0x19f: V116 = 0x5b9
0x1a2: JUMP 0x5b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a3, V110, V113]
Exit stack: [V11, 0x1a3, V110, V113]

================================

Block 0x1a3
[0x1a3:0x1bc]
---
Predecessors: [0x741]
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 DUP3
0x1a9 ISZERO
0x1aa ISZERO
0x1ab ISZERO
0x1ac ISZERO
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
0x1b4 POP
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 SWAP2
0x1ba SUB
0x1bb SWAP1
0x1bc RETURN
---
0x1a3: JUMPDEST 
0x1a4: V117 = 0x40
0x1a6: V118 = M[0x40]
0x1a9: V119 = ISZERO {0x0, 0x1}
0x1aa: V120 = ISZERO V119
0x1ab: V121 = ISZERO V120
0x1ac: V122 = ISZERO V121
0x1ae: M[V118] = V122
0x1af: V123 = 0x20
0x1b1: V124 = ADD 0x20 V118
0x1b5: V125 = 0x40
0x1b7: V126 = M[0x40]
0x1ba: V127 = SUB V124 V126
0x1bc: RETURN V126 V127
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x4c]
Successors: [0x1c4, 0x1c8]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V128 = CALLVALUE
0x1bf: V129 = ISZERO V128
0x1c0: V130 = 0x1c8
0x1c3: JUMPI 0x1c8 V129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V131 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c8
[0x1c8:0x1f3]
---
Predecessors: [0x1bd]
Successors: [0x747]
---
0x1c8 JUMPDEST
0x1c9 PUSH2 0x1f4
0x1cc PUSH1 0x4
0x1ce DUP1
0x1cf DUP1
0x1d0 CALLDATALOAD
0x1d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e6 AND
0x1e7 SWAP1
0x1e8 PUSH1 0x20
0x1ea ADD
0x1eb SWAP1
0x1ec SWAP2
0x1ed SWAP1
0x1ee POP
0x1ef POP
0x1f0 PUSH2 0x747
0x1f3 JUMP
---
0x1c8: JUMPDEST 
0x1c9: V132 = 0x1f4
0x1cc: V133 = 0x4
0x1d0: V134 = CALLDATALOAD 0x4
0x1d1: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1e8: V137 = 0x20
0x1ea: V138 = ADD 0x20 0x4
0x1f0: V139 = 0x747
0x1f3: JUMP 0x747
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1f4, V136]
Exit stack: [V11, 0x1f4, V136]

================================

Block 0x1f4
[0x1f4:0x20d]
---
Predecessors: [0x949]
Successors: []
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 DUP3
0x1fa ISZERO
0x1fb ISZERO
0x1fc ISZERO
0x1fd ISZERO
0x1fe DUP2
0x1ff MSTORE
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP2
0x204 POP
0x205 POP
0x206 PUSH1 0x40
0x208 MLOAD
0x209 DUP1
0x20a SWAP2
0x20b SUB
0x20c SWAP1
0x20d RETURN
---
0x1f4: JUMPDEST 
0x1f5: V140 = 0x40
0x1f7: V141 = M[0x40]
0x1fa: V142 = ISZERO V605
0x1fb: V143 = ISZERO V142
0x1fc: V144 = ISZERO V143
0x1fd: V145 = ISZERO V144
0x1ff: M[V141] = V145
0x200: V146 = 0x20
0x202: V147 = ADD 0x20 V141
0x206: V148 = 0x40
0x208: V149 = M[0x40]
0x20b: V150 = SUB V147 V149
0x20d: RETURN V149 V150
---
Entry stack: [V11, V605]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x57]
Successors: [0x215, 0x219]
---
0x20e JUMPDEST
0x20f CALLVALUE
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x20e: JUMPDEST 
0x20f: V151 = CALLVALUE
0x210: V152 = ISZERO V151
0x211: V153 = 0x219
0x214: JUMPI 0x219 V152
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x20e]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V154 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x219
[0x219:0x220]
---
Predecessors: [0x20e]
Successors: [0x95c]
---
0x219 JUMPDEST
0x21a PUSH2 0x221
0x21d PUSH2 0x95c
0x220 JUMP
---
0x219: JUMPDEST 
0x21a: V155 = 0x221
0x21d: V156 = 0x95c
0x220: JUMP 0x95c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x221]
Exit stack: [V11, 0x221]

================================

Block 0x221
[0x221:0x236]
---
Predecessors: [0x95c]
Successors: []
---
0x221 JUMPDEST
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 DUP3
0x227 DUP2
0x228 MSTORE
0x229 PUSH1 0x20
0x22b ADD
0x22c SWAP2
0x22d POP
0x22e POP
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 SWAP2
0x234 SUB
0x235 SWAP1
0x236 RETURN
---
0x221: JUMPDEST 
0x222: V157 = 0x40
0x224: V158 = M[0x40]
0x228: M[V158] = V607
0x229: V159 = 0x20
0x22b: V160 = ADD 0x20 V158
0x22f: V161 = 0x40
0x231: V162 = M[0x40]
0x234: V163 = SUB V160 V162
0x236: RETURN V162 V163
---
Entry stack: [V11, 0x221, V607]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x221]

================================

Block 0x237
[0x237:0x23d]
---
Predecessors: [0x62]
Successors: [0x23e, 0x242]
---
0x237 JUMPDEST
0x238 CALLVALUE
0x239 ISZERO
0x23a PUSH2 0x242
0x23d JUMPI
---
0x237: JUMPDEST 
0x238: V164 = CALLVALUE
0x239: V165 = ISZERO V164
0x23a: V166 = 0x242
0x23d: JUMPI 0x242 V165
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x23e
[0x23e:0x241]
---
Predecessors: [0x237]
Successors: []
---
0x23e PUSH1 0x0
0x240 DUP1
0x241 REVERT
---
0x23e: V167 = 0x0
0x241: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x242
[0x242:0x295]
---
Predecessors: [0x237]
Successors: [0x962]
---
0x242 JUMPDEST
0x243 PUSH2 0x296
0x246 PUSH1 0x4
0x248 DUP1
0x249 DUP1
0x24a CALLDATALOAD
0x24b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x260 AND
0x261 SWAP1
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP1
0x266 SWAP2
0x267 SWAP1
0x268 DUP1
0x269 CALLDATALOAD
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 SWAP1
0x281 PUSH1 0x20
0x283 ADD
0x284 SWAP1
0x285 SWAP2
0x286 SWAP1
0x287 DUP1
0x288 CALLDATALOAD
0x289 SWAP1
0x28a PUSH1 0x20
0x28c ADD
0x28d SWAP1
0x28e SWAP2
0x28f SWAP1
0x290 POP
0x291 POP
0x292 PUSH2 0x962
0x295 JUMP
---
0x242: JUMPDEST 
0x243: V168 = 0x296
0x246: V169 = 0x4
0x24a: V170 = CALLDATALOAD 0x4
0x24b: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x260: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x262: V173 = 0x20
0x264: V174 = ADD 0x20 0x4
0x269: V175 = CALLDATALOAD 0x24
0x26a: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x281: V178 = 0x20
0x283: V179 = ADD 0x20 0x24
0x288: V180 = CALLDATALOAD 0x44
0x28a: V181 = 0x20
0x28c: V182 = ADD 0x20 0x44
0x292: V183 = 0x962
0x295: JUMP 0x962
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x296, V172, V177, V180]
Exit stack: [V11, 0x296, V172, V177, V180]

================================

Block 0x296
[0x296:0x2af]
---
Predecessors: [0xc77]
Successors: []
---
0x296 JUMPDEST
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP1
0x29b DUP3
0x29c ISZERO
0x29d ISZERO
0x29e ISZERO
0x29f ISZERO
0x2a0 DUP2
0x2a1 MSTORE
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 SWAP2
0x2a6 POP
0x2a7 POP
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac SWAP2
0x2ad SUB
0x2ae SWAP1
0x2af RETURN
---
0x296: JUMPDEST 
0x297: V184 = 0x40
0x299: V185 = M[0x40]
0x29c: V186 = ISZERO {0x0, 0x1}
0x29d: V187 = ISZERO V186
0x29e: V188 = ISZERO V187
0x29f: V189 = ISZERO V188
0x2a1: M[V185] = V189
0x2a2: V190 = 0x20
0x2a4: V191 = ADD 0x20 V185
0x2a8: V192 = 0x40
0x2aa: V193 = M[0x40]
0x2ad: V194 = SUB V191 V193
0x2af: RETURN V193 V194
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b0
[0x2b0:0x2b6]
---
Predecessors: [0x6d]
Successors: [0x2b7, 0x2bb]
---
0x2b0 JUMPDEST
0x2b1 CALLVALUE
0x2b2 ISZERO
0x2b3 PUSH2 0x2bb
0x2b6 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V195 = CALLVALUE
0x2b2: V196 = ISZERO V195
0x2b3: V197 = 0x2bb
0x2b6: JUMPI 0x2bb V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x2b0]
Successors: []
---
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba REVERT
---
0x2b7: V198 = 0x0
0x2ba: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bb
[0x2bb:0x2c2]
---
Predecessors: [0x2b0]
Successors: [0xc7f]
---
0x2bb JUMPDEST
0x2bc PUSH2 0x2c3
0x2bf PUSH2 0xc7f
0x2c2 JUMP
---
0x2bb: JUMPDEST 
0x2bc: V199 = 0x2c3
0x2bf: V200 = 0xc7f
0x2c2: JUMP 0xc7f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2c3]
Exit stack: [V11, 0x2c3]

================================

Block 0x2c3
[0x2c3:0x2de]
---
Predecessors: [0xc7f]
Successors: []
---
0x2c3 JUMPDEST
0x2c4 PUSH1 0x40
0x2c6 MLOAD
0x2c7 DUP1
0x2c8 DUP3
0x2c9 PUSH1 0xff
0x2cb AND
0x2cc PUSH1 0xff
0x2ce AND
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x20
0x2d3 ADD
0x2d4 SWAP2
0x2d5 POP
0x2d6 POP
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da DUP1
0x2db SWAP2
0x2dc SUB
0x2dd SWAP1
0x2de RETURN
---
0x2c3: JUMPDEST 
0x2c4: V201 = 0x40
0x2c6: V202 = M[0x40]
0x2c9: V203 = 0xff
0x2cb: V204 = AND 0xff 0x12
0x2cc: V205 = 0xff
0x2ce: V206 = AND 0xff 0x12
0x2d0: M[V202] = 0x12
0x2d1: V207 = 0x20
0x2d3: V208 = ADD 0x20 V202
0x2d7: V209 = 0x40
0x2d9: V210 = M[0x40]
0x2dc: V211 = SUB V208 V210
0x2de: RETURN V210 V211
---
Entry stack: [V11, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2df
[0x2df:0x2e5]
---
Predecessors: [0x78]
Successors: [0x2e6, 0x2ea]
---
0x2df JUMPDEST
0x2e0 CALLVALUE
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V212 = CALLVALUE
0x2e1: V213 = ISZERO V212
0x2e2: V214 = 0x2ea
0x2e5: JUMPI 0x2ea V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2df]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V215 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ea
[0x2ea:0x315]
---
Predecessors: [0x2df]
Successors: [0xc88]
---
0x2ea JUMPDEST
0x2eb PUSH2 0x316
0x2ee PUSH1 0x4
0x2f0 DUP1
0x2f1 DUP1
0x2f2 CALLDATALOAD
0x2f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x308 AND
0x309 SWAP1
0x30a PUSH1 0x20
0x30c ADD
0x30d SWAP1
0x30e SWAP2
0x30f SWAP1
0x310 POP
0x311 POP
0x312 PUSH2 0xc88
0x315 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V216 = 0x316
0x2ee: V217 = 0x4
0x2f2: V218 = CALLDATALOAD 0x4
0x2f3: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x308: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x30a: V221 = 0x20
0x30c: V222 = ADD 0x20 0x4
0x312: V223 = 0xc88
0x315: JUMP 0xc88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x316, V220]
Exit stack: [V11, 0x316, V220]

================================

Block 0x316
[0x316:0x32b]
---
Predecessors: [0xc88]
Successors: []
---
0x316 JUMPDEST
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b DUP3
0x31c DUP2
0x31d MSTORE
0x31e PUSH1 0x20
0x320 ADD
0x321 SWAP2
0x322 POP
0x323 POP
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 SWAP2
0x329 SUB
0x32a SWAP1
0x32b RETURN
---
0x316: JUMPDEST 
0x317: V224 = 0x40
0x319: V225 = M[0x40]
0x31d: M[V225] = V786
0x31e: V226 = 0x20
0x320: V227 = ADD 0x20 V225
0x324: V228 = 0x40
0x326: V229 = M[0x40]
0x329: V230 = SUB V227 V229
0x32b: RETURN V229 V230
---
Entry stack: [V11, V786]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x32c
[0x32c:0x332]
---
Predecessors: [0x83]
Successors: [0x333, 0x337]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x32c: JUMPDEST 
0x32d: V231 = CALLVALUE
0x32e: V232 = ISZERO V231
0x32f: V233 = 0x337
0x332: JUMPI 0x337 V232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x32c]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V234 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x337
[0x337:0x33e]
---
Predecessors: [0x32c]
Successors: [0xcd1]
---
0x337 JUMPDEST
0x338 PUSH2 0x33f
0x33b PUSH2 0xcd1
0x33e JUMP
---
0x337: JUMPDEST 
0x338: V235 = 0x33f
0x33b: V236 = 0xcd1
0x33e: JUMP 0xcd1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x33f]
Exit stack: [V11, 0x33f]

================================

Block 0x33f
[0x33f:0x363]
---
Predecessors: [0x57e, 0xcd9]
Successors: [0x364]
---
0x33f JUMPDEST
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 DUP1
0x345 PUSH1 0x20
0x347 ADD
0x348 DUP3
0x349 DUP2
0x34a SUB
0x34b DUP3
0x34c MSTORE
0x34d DUP4
0x34e DUP2
0x34f DUP2
0x350 MLOAD
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 SWAP2
0x357 POP
0x358 DUP1
0x359 MLOAD
0x35a SWAP1
0x35b PUSH1 0x20
0x35d ADD
0x35e SWAP1
0x35f DUP1
0x360 DUP4
0x361 DUP4
0x362 PUSH1 0x0
---
0x33f: JUMPDEST 
0x340: V237 = 0x40
0x342: V238 = M[0x40]
0x345: V239 = 0x20
0x347: V240 = ADD 0x20 V238
0x34a: V241 = SUB V240 V238
0x34c: M[V238] = V241
0x350: V242 = M[S0]
0x352: M[V240] = V242
0x353: V243 = 0x20
0x355: V244 = ADD 0x20 V240
0x359: V245 = M[S0]
0x35b: V246 = 0x20
0x35d: V247 = ADD 0x20 S0
0x362: V248 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V238, V238, V244, V247, V245, V245, V244, V247, 0x0]
Exit stack: [V11, S0, V238, V238, V244, V247, V245, V245, V244, V247, 0x0]

================================

Block 0x364
[0x364:0x36c]
---
Predecessors: [0x33f, 0x36d]
Successors: [0x36d, 0x37f]
---
0x364 JUMPDEST
0x365 DUP4
0x366 DUP2
0x367 LT
0x368 ISZERO
0x369 PUSH2 0x37f
0x36c JUMPI
---
0x364: JUMPDEST 
0x367: V249 = LT S0 V245
0x368: V250 = ISZERO V249
0x369: V251 = 0x37f
0x36c: JUMPI 0x37f V250
---
Entry stack: [V11, S9, V238, V238, V244, V247, V245, V245, V244, V247, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V238, V238, V244, V247, V245, V245, V244, V247, S0]

================================

Block 0x36d
[0x36d:0x37e]
---
Predecessors: [0x364]
Successors: [0x364]
---
0x36d DUP1
0x36e DUP3
0x36f ADD
0x370 MLOAD
0x371 DUP2
0x372 DUP5
0x373 ADD
0x374 MSTORE
0x375 PUSH1 0x20
0x377 DUP2
0x378 ADD
0x379 SWAP1
0x37a POP
0x37b PUSH2 0x364
0x37e JUMP
---
0x36f: V252 = ADD V247 S0
0x370: V253 = M[V252]
0x373: V254 = ADD V244 S0
0x374: M[V254] = V253
0x375: V255 = 0x20
0x378: V256 = ADD S0 0x20
0x37b: V257 = 0x364
0x37e: JUMP 0x364
---
Entry stack: [V11, S9, V238, V238, V244, V247, V245, V245, V244, V247, S0]
Stack pops: 3
Stack additions: [S2, S1, V256]
Exit stack: [V11, S9, V238, V238, V244, V247, V245, V245, V244, V247, V256]

================================

Block 0x37f
[0x37f:0x392]
---
Predecessors: [0x364]
Successors: [0x393, 0x3ac]
---
0x37f JUMPDEST
0x380 POP
0x381 POP
0x382 POP
0x383 POP
0x384 SWAP1
0x385 POP
0x386 SWAP1
0x387 DUP2
0x388 ADD
0x389 SWAP1
0x38a PUSH1 0x1f
0x38c AND
0x38d DUP1
0x38e ISZERO
0x38f PUSH2 0x3ac
0x392 JUMPI
---
0x37f: JUMPDEST 
0x388: V258 = ADD V245 V244
0x38a: V259 = 0x1f
0x38c: V260 = AND 0x1f V245
0x38e: V261 = ISZERO V260
0x38f: V262 = 0x3ac
0x392: JUMPI 0x3ac V261
---
Entry stack: [V11, S9, V238, V238, V244, V247, V245, V245, V244, V247, S0]
Stack pops: 7
Stack additions: [V258, V260]
Exit stack: [V11, S9, V238, V238, V258, V260]

================================

Block 0x393
[0x393:0x3ab]
---
Predecessors: [0x37f]
Successors: [0x3ac]
---
0x393 DUP1
0x394 DUP3
0x395 SUB
0x396 DUP1
0x397 MLOAD
0x398 PUSH1 0x1
0x39a DUP4
0x39b PUSH1 0x20
0x39d SUB
0x39e PUSH2 0x100
0x3a1 EXP
0x3a2 SUB
0x3a3 NOT
0x3a4 AND
0x3a5 DUP2
0x3a6 MSTORE
0x3a7 PUSH1 0x20
0x3a9 ADD
0x3aa SWAP2
0x3ab POP
---
0x395: V263 = SUB V258 V260
0x397: V264 = M[V263]
0x398: V265 = 0x1
0x39b: V266 = 0x20
0x39d: V267 = SUB 0x20 V260
0x39e: V268 = 0x100
0x3a1: V269 = EXP 0x100 V267
0x3a2: V270 = SUB V269 0x1
0x3a3: V271 = NOT V270
0x3a4: V272 = AND V271 V264
0x3a6: M[V263] = V272
0x3a7: V273 = 0x20
0x3a9: V274 = ADD 0x20 V263
---
Entry stack: [V11, S4, V238, V238, V258, V260]
Stack pops: 2
Stack additions: [V274, S0]
Exit stack: [V11, S4, V238, V238, V274, V260]

================================

Block 0x3ac
[0x3ac:0x3b9]
---
Predecessors: [0x37f, 0x393]
Successors: []
---
0x3ac JUMPDEST
0x3ad POP
0x3ae SWAP3
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 PUSH1 0x40
0x3b4 MLOAD
0x3b5 DUP1
0x3b6 SWAP2
0x3b7 SUB
0x3b8 SWAP1
0x3b9 RETURN
---
0x3ac: JUMPDEST 
0x3b2: V275 = 0x40
0x3b4: V276 = M[0x40]
0x3b7: V277 = SUB S1 V276
0x3b9: RETURN V276 V277
---
Entry stack: [V11, S4, V238, V238, S1, V260]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ba
[0x3ba:0x3c0]
---
Predecessors: [0x8e]
Successors: [0x3c1, 0x3c5]
---
0x3ba JUMPDEST
0x3bb CALLVALUE
0x3bc ISZERO
0x3bd PUSH2 0x3c5
0x3c0 JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V278 = CALLVALUE
0x3bc: V279 = ISZERO V278
0x3bd: V280 = 0x3c5
0x3c0: JUMPI 0x3c5 V279
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c1
[0x3c1:0x3c4]
---
Predecessors: [0x3ba]
Successors: []
---
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 REVERT
---
0x3c1: V281 = 0x0
0x3c4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c5
[0x3c5:0x3cc]
---
Predecessors: [0x3ba]
Successors: [0xd14]
---
0x3c5 JUMPDEST
0x3c6 PUSH2 0x3cd
0x3c9 PUSH2 0xd14
0x3cc JUMP
---
0x3c5: JUMPDEST 
0x3c6: V282 = 0x3cd
0x3c9: V283 = 0xd14
0x3cc: JUMP 0xd14
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3cd]
Exit stack: [V11, 0x3cd]

================================

Block 0x3cd
[0x3cd:0x3e6]
---
Predecessors: [0xd72]
Successors: []
---
0x3cd JUMPDEST
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP1
0x3d2 DUP3
0x3d3 ISZERO
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 ISZERO
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x20
0x3db ADD
0x3dc SWAP2
0x3dd POP
0x3de POP
0x3df PUSH1 0x40
0x3e1 MLOAD
0x3e2 DUP1
0x3e3 SWAP2
0x3e4 SUB
0x3e5 SWAP1
0x3e6 RETURN
---
0x3cd: JUMPDEST 
0x3ce: V284 = 0x40
0x3d0: V285 = M[0x40]
0x3d3: V286 = ISZERO 0x1
0x3d4: V287 = ISZERO 0x0
0x3d5: V288 = ISZERO 0x1
0x3d6: V289 = ISZERO 0x0
0x3d8: M[V285] = 0x1
0x3d9: V290 = 0x20
0x3db: V291 = ADD 0x20 V285
0x3df: V292 = 0x40
0x3e1: V293 = M[0x40]
0x3e4: V294 = SUB V291 V293
0x3e6: RETURN V293 V294
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e7
[0x3e7:0x3ed]
---
Predecessors: [0x99]
Successors: [0x3ee, 0x3f2]
---
0x3e7 JUMPDEST
0x3e8 CALLVALUE
0x3e9 ISZERO
0x3ea PUSH2 0x3f2
0x3ed JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V295 = CALLVALUE
0x3e9: V296 = ISZERO V295
0x3ea: V297 = 0x3f2
0x3ed: JUMPI 0x3f2 V296
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ee
[0x3ee:0x3f1]
---
Predecessors: [0x3e7]
Successors: []
---
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 REVERT
---
0x3ee: V298 = 0x0
0x3f1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f2
[0x3f2:0x426]
---
Predecessors: [0x3e7]
Successors: [0xdc0]
---
0x3f2 JUMPDEST
0x3f3 PUSH2 0x427
0x3f6 PUSH1 0x4
0x3f8 DUP1
0x3f9 DUP1
0x3fa CALLDATALOAD
0x3fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x410 AND
0x411 SWAP1
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP1
0x416 SWAP2
0x417 SWAP1
0x418 DUP1
0x419 CALLDATALOAD
0x41a SWAP1
0x41b PUSH1 0x20
0x41d ADD
0x41e SWAP1
0x41f SWAP2
0x420 SWAP1
0x421 POP
0x422 POP
0x423 PUSH2 0xdc0
0x426 JUMP
---
0x3f2: JUMPDEST 
0x3f3: V299 = 0x427
0x3f6: V300 = 0x4
0x3fa: V301 = CALLDATALOAD 0x4
0x3fb: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x410: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x412: V304 = 0x20
0x414: V305 = ADD 0x20 0x4
0x419: V306 = CALLDATALOAD 0x24
0x41b: V307 = 0x20
0x41d: V308 = ADD 0x20 0x24
0x423: V309 = 0xdc0
0x426: JUMP 0xdc0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x427, V303, V306]
Exit stack: [V11, 0x427, V303, V306]

================================

Block 0x427
[0x427:0x440]
---
Predecessors: [0xfc3]
Successors: []
---
0x427 JUMPDEST
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c DUP3
0x42d ISZERO
0x42e ISZERO
0x42f ISZERO
0x430 ISZERO
0x431 DUP2
0x432 MSTORE
0x433 PUSH1 0x20
0x435 ADD
0x436 SWAP2
0x437 POP
0x438 POP
0x439 PUSH1 0x40
0x43b MLOAD
0x43c DUP1
0x43d SWAP2
0x43e SUB
0x43f SWAP1
0x440 RETURN
---
0x427: JUMPDEST 
0x428: V310 = 0x40
0x42a: V311 = M[0x40]
0x42d: V312 = ISZERO {0x0, 0x1}
0x42e: V313 = ISZERO V312
0x42f: V314 = ISZERO V313
0x430: V315 = ISZERO V314
0x432: M[V311] = V315
0x433: V316 = 0x20
0x435: V317 = ADD 0x20 V311
0x439: V318 = 0x40
0x43b: V319 = M[0x40]
0x43e: V320 = SUB V317 V319
0x440: RETURN V319 V320
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x441
[0x441:0x447]
---
Predecessors: [0xa4]
Successors: [0x448, 0x44c]
---
0x441 JUMPDEST
0x442 CALLVALUE
0x443 ISZERO
0x444 PUSH2 0x44c
0x447 JUMPI
---
0x441: JUMPDEST 
0x442: V321 = CALLVALUE
0x443: V322 = ISZERO V321
0x444: V323 = 0x44c
0x447: JUMPI 0x44c V322
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x441]
Successors: []
---
0x448 PUSH1 0x0
0x44a DUP1
0x44b REVERT
---
0x448: V324 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44c
[0x44c:0x4a1]
---
Predecessors: [0x441]
Successors: [0xfca]
---
0x44c JUMPDEST
0x44d PUSH2 0x4a2
0x450 PUSH1 0x4
0x452 DUP1
0x453 DUP1
0x454 CALLDATALOAD
0x455 SWAP1
0x456 PUSH1 0x20
0x458 ADD
0x459 SWAP1
0x45a DUP3
0x45b ADD
0x45c DUP1
0x45d CALLDATALOAD
0x45e SWAP1
0x45f PUSH1 0x20
0x461 ADD
0x462 SWAP1
0x463 DUP1
0x464 DUP1
0x465 PUSH1 0x20
0x467 MUL
0x468 PUSH1 0x20
0x46a ADD
0x46b PUSH1 0x40
0x46d MLOAD
0x46e SWAP1
0x46f DUP2
0x470 ADD
0x471 PUSH1 0x40
0x473 MSTORE
0x474 DUP1
0x475 SWAP4
0x476 SWAP3
0x477 SWAP2
0x478 SWAP1
0x479 DUP2
0x47a DUP2
0x47b MSTORE
0x47c PUSH1 0x20
0x47e ADD
0x47f DUP4
0x480 DUP4
0x481 PUSH1 0x20
0x483 MUL
0x484 DUP1
0x485 DUP3
0x486 DUP5
0x487 CALLDATACOPY
0x488 DUP3
0x489 ADD
0x48a SWAP2
0x48b POP
0x48c POP
0x48d POP
0x48e POP
0x48f POP
0x490 POP
0x491 SWAP2
0x492 SWAP1
0x493 DUP1
0x494 CALLDATALOAD
0x495 SWAP1
0x496 PUSH1 0x20
0x498 ADD
0x499 SWAP1
0x49a SWAP2
0x49b SWAP1
0x49c POP
0x49d POP
0x49e PUSH2 0xfca
0x4a1 JUMP
---
0x44c: JUMPDEST 
0x44d: V325 = 0x4a2
0x450: V326 = 0x4
0x454: V327 = CALLDATALOAD 0x4
0x456: V328 = 0x20
0x458: V329 = ADD 0x20 0x4
0x45b: V330 = ADD 0x4 V327
0x45d: V331 = CALLDATALOAD V330
0x45f: V332 = 0x20
0x461: V333 = ADD 0x20 V330
0x465: V334 = 0x20
0x467: V335 = MUL 0x20 V331
0x468: V336 = 0x20
0x46a: V337 = ADD 0x20 V335
0x46b: V338 = 0x40
0x46d: V339 = M[0x40]
0x470: V340 = ADD V339 V337
0x471: V341 = 0x40
0x473: M[0x40] = V340
0x47b: M[V339] = V331
0x47c: V342 = 0x20
0x47e: V343 = ADD 0x20 V339
0x481: V344 = 0x20
0x483: V345 = MUL 0x20 V331
0x487: CALLDATACOPY V343 V333 V345
0x489: V346 = ADD V343 V345
0x494: V347 = CALLDATALOAD 0x24
0x496: V348 = 0x20
0x498: V349 = ADD 0x20 0x24
0x49e: V350 = 0xfca
0x4a1: JUMP 0xfca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4a2, V339, V347]
Exit stack: [V11, 0x4a2, V339, V347]

================================

Block 0x4a2
[0x4a2:0x4a3]
---
Predecessors: [0x11b4]
Successors: []
---
0x4a2 JUMPDEST
0x4a3 STOP
---
0x4a2: JUMPDEST 
0x4a3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a4
[0x4a4:0x4aa]
---
Predecessors: [0xaf]
Successors: [0x4ab, 0x4af]
---
0x4a4 JUMPDEST
0x4a5 CALLVALUE
0x4a6 ISZERO
0x4a7 PUSH2 0x4af
0x4aa JUMPI
---
0x4a4: JUMPDEST 
0x4a5: V351 = CALLVALUE
0x4a6: V352 = ISZERO V351
0x4a7: V353 = 0x4af
0x4aa: JUMPI 0x4af V352
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ab
[0x4ab:0x4ae]
---
Predecessors: [0x4a4]
Successors: []
---
0x4ab PUSH1 0x0
0x4ad DUP1
0x4ae REVERT
---
0x4ab: V354 = 0x0
0x4ae: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4af
[0x4af:0x4b6]
---
Predecessors: [0x4a4]
Successors: [0x11b9]
---
0x4af JUMPDEST
0x4b0 PUSH2 0x4b7
0x4b3 PUSH2 0x11b9
0x4b6 JUMP
---
0x4af: JUMPDEST 
0x4b0: V355 = 0x4b7
0x4b3: V356 = 0x11b9
0x4b6: JUMP 0x11b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4b7]
Exit stack: [V11, 0x4b7]

================================

Block 0x4b7
[0x4b7:0x4d0]
---
Predecessors: [0x11b9]
Successors: []
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x40
0x4ba MLOAD
0x4bb DUP1
0x4bc DUP3
0x4bd ISZERO
0x4be ISZERO
0x4bf ISZERO
0x4c0 ISZERO
0x4c1 DUP2
0x4c2 MSTORE
0x4c3 PUSH1 0x20
0x4c5 ADD
0x4c6 SWAP2
0x4c7 POP
0x4c8 POP
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP1
0x4cd SWAP2
0x4ce SUB
0x4cf SWAP1
0x4d0 RETURN
---
0x4b7: JUMPDEST 
0x4b8: V357 = 0x40
0x4ba: V358 = M[0x40]
0x4bd: V359 = ISZERO V1061
0x4be: V360 = ISZERO V359
0x4bf: V361 = ISZERO V360
0x4c0: V362 = ISZERO V361
0x4c2: M[V358] = V362
0x4c3: V363 = 0x20
0x4c5: V364 = ADD 0x20 V358
0x4c9: V365 = 0x40
0x4cb: V366 = M[0x40]
0x4ce: V367 = SUB V364 V366
0x4d0: RETURN V366 V367
---
Entry stack: [V11, 0x4b7, V1061]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4b7]

================================

Block 0x4d1
[0x4d1:0x4d7]
---
Predecessors: [0xba]
Successors: [0x4d8, 0x4dc]
---
0x4d1 JUMPDEST
0x4d2 CALLVALUE
0x4d3 ISZERO
0x4d4 PUSH2 0x4dc
0x4d7 JUMPI
---
0x4d1: JUMPDEST 
0x4d2: V368 = CALLVALUE
0x4d3: V369 = ISZERO V368
0x4d4: V370 = 0x4dc
0x4d7: JUMPI 0x4dc V369
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d8
[0x4d8:0x4db]
---
Predecessors: [0x4d1]
Successors: []
---
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db REVERT
---
0x4d8: V371 = 0x0
0x4db: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4dc
[0x4dc:0x526]
---
Predecessors: [0x4d1]
Successors: [0x11cc]
---
0x4dc JUMPDEST
0x4dd PUSH2 0x527
0x4e0 PUSH1 0x4
0x4e2 DUP1
0x4e3 DUP1
0x4e4 CALLDATALOAD
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb SWAP1
0x4fc PUSH1 0x20
0x4fe ADD
0x4ff SWAP1
0x500 SWAP2
0x501 SWAP1
0x502 DUP1
0x503 CALLDATALOAD
0x504 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x519 AND
0x51a SWAP1
0x51b PUSH1 0x20
0x51d ADD
0x51e SWAP1
0x51f SWAP2
0x520 SWAP1
0x521 POP
0x522 POP
0x523 PUSH2 0x11cc
0x526 JUMP
---
0x4dc: JUMPDEST 
0x4dd: V372 = 0x527
0x4e0: V373 = 0x4
0x4e4: V374 = CALLDATALOAD 0x4
0x4e5: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x4fc: V377 = 0x20
0x4fe: V378 = ADD 0x20 0x4
0x503: V379 = CALLDATALOAD 0x24
0x504: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x519: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x51b: V382 = 0x20
0x51d: V383 = ADD 0x20 0x24
0x523: V384 = 0x11cc
0x526: JUMP 0x11cc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x527, V376, V381]
Exit stack: [V11, 0x527, V376, V381]

================================

Block 0x527
[0x527:0x53c]
---
Predecessors: [0x11cc]
Successors: []
---
0x527 JUMPDEST
0x528 PUSH1 0x40
0x52a MLOAD
0x52b DUP1
0x52c DUP3
0x52d DUP2
0x52e MSTORE
0x52f PUSH1 0x20
0x531 ADD
0x532 SWAP2
0x533 POP
0x534 POP
0x535 PUSH1 0x40
0x537 MLOAD
0x538 DUP1
0x539 SWAP2
0x53a SUB
0x53b SWAP1
0x53c RETURN
---
0x527: JUMPDEST 
0x528: V385 = 0x40
0x52a: V386 = M[0x40]
0x52e: M[V386] = V1086
0x52f: V387 = 0x20
0x531: V388 = ADD 0x20 V386
0x535: V389 = 0x40
0x537: V390 = M[0x40]
0x53a: V391 = SUB V388 V390
0x53c: RETURN V390 V391
---
Entry stack: [V11, V1086]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x53d
[0x53d:0x543]
---
Predecessors: [0xc5]
Successors: [0x544, 0x548]
---
0x53d JUMPDEST
0x53e CALLVALUE
0x53f ISZERO
0x540 PUSH2 0x548
0x543 JUMPI
---
0x53d: JUMPDEST 
0x53e: V392 = CALLVALUE
0x53f: V393 = ISZERO V392
0x540: V394 = 0x548
0x543: JUMPI 0x548 V393
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x544
[0x544:0x547]
---
Predecessors: [0x53d]
Successors: []
---
0x544 PUSH1 0x0
0x546 DUP1
0x547 REVERT
---
0x544: V395 = 0x0
0x547: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x548
[0x548:0x573]
---
Predecessors: [0x53d]
Successors: [0x1253]
---
0x548 JUMPDEST
0x549 PUSH2 0x574
0x54c PUSH1 0x4
0x54e DUP1
0x54f DUP1
0x550 CALLDATALOAD
0x551 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x566 AND
0x567 SWAP1
0x568 PUSH1 0x20
0x56a ADD
0x56b SWAP1
0x56c SWAP2
0x56d SWAP1
0x56e POP
0x56f POP
0x570 PUSH2 0x1253
0x573 JUMP
---
0x548: JUMPDEST 
0x549: V396 = 0x574
0x54c: V397 = 0x4
0x550: V398 = CALLDATALOAD 0x4
0x551: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x566: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x568: V401 = 0x20
0x56a: V402 = ADD 0x20 0x4
0x570: V403 = 0x1253
0x573: JUMP 0x1253
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x574, V400]
Exit stack: [V11, 0x574, V400]

================================

Block 0x574
[0x574:0x575]
---
Predecessors: [0x12af]
Successors: []
---
0x574 JUMPDEST
0x575 STOP
---
0x574: JUMPDEST 
0x575: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x576
[0x576:0x57d]
---
Predecessors: [0xe0]
Successors: [0x12f3]
---
0x576 JUMPDEST
0x577 PUSH2 0x57e
0x57a PUSH2 0x12f3
0x57d JUMP
---
0x576: JUMPDEST 
0x577: V404 = 0x57e
0x57a: V405 = 0x12f3
0x57d: JUMP 0x12f3
---
Entry stack: [V11, 0xe8]
Stack pops: 0
Stack additions: [0x57e]
Exit stack: [V11, 0xe8, 0x57e]

================================

Block 0x57e
[0x57e:0x5b8]
---
Predecessors: [0x12f3]
Successors: [0xe8, 0x33f]
---
0x57e JUMPDEST
0x57f PUSH1 0x40
0x581 DUP1
0x582 MLOAD
0x583 SWAP1
0x584 DUP2
0x585 ADD
0x586 PUSH1 0x40
0x588 MSTORE
0x589 DUP1
0x58a PUSH1 0x8
0x58c DUP2
0x58d MSTORE
0x58e PUSH1 0x20
0x590 ADD
0x591 PUSH32 0x414e494d41544958000000000000000000000000000000000000000000000000
0x5b2 DUP2
0x5b3 MSTORE
0x5b4 POP
0x5b5 SWAP1
0x5b6 POP
0x5b7 SWAP1
0x5b8 JUMP
---
0x57e: JUMPDEST 
0x57f: V406 = 0x40
0x582: V407 = M[0x40]
0x585: V408 = ADD V407 0x40
0x586: V409 = 0x40
0x588: M[0x40] = V408
0x58a: V410 = 0x8
0x58d: M[V407] = 0x8
0x58e: V411 = 0x20
0x590: V412 = ADD 0x20 V407
0x591: V413 = 0x414e494d41544958000000000000000000000000000000000000000000000000
0x5b3: M[V412] = 0x414e494d41544958000000000000000000000000000000000000000000000000
0x5b8: JUMP {0xe8, 0x33f}
---
Entry stack: [V11, {0xe8, 0x33f}, V1120]
Stack pops: 2
Stack additions: [V407]
Exit stack: [V11, V407]

================================

Block 0x5b9
[0x5b9:0x5c5]
---
Predecessors: [0x16e]
Successors: [0x5c6, 0x648]
---
0x5b9 JUMPDEST
0x5ba PUSH1 0x0
0x5bc DUP1
0x5bd DUP3
0x5be EQ
0x5bf ISZERO
0x5c0 DUP1
0x5c1 ISZERO
0x5c2 PUSH2 0x648
0x5c5 JUMPI
---
0x5b9: JUMPDEST 
0x5ba: V414 = 0x0
0x5be: V415 = EQ V113 0x0
0x5bf: V416 = ISZERO V415
0x5c1: V417 = ISZERO V416
0x5c2: V418 = 0x648
0x5c5: JUMPI 0x648 V417
---
Entry stack: [V11, 0x1a3, V110, V113]
Stack pops: 1
Stack additions: [S0, 0x0, V416]
Exit stack: [V11, 0x1a3, V110, V113, 0x0, V416]

================================

Block 0x5c6
[0x5c6:0x647]
---
Predecessors: [0x5b9]
Successors: [0x648]
---
0x5c6 POP
0x5c7 PUSH1 0x0
0x5c9 PUSH1 0x3
0x5cb PUSH1 0x0
0x5cd CALLER
0x5ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e3 AND
0x5e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f9 AND
0x5fa DUP2
0x5fb MSTORE
0x5fc PUSH1 0x20
0x5fe ADD
0x5ff SWAP1
0x600 DUP2
0x601 MSTORE
0x602 PUSH1 0x20
0x604 ADD
0x605 PUSH1 0x0
0x607 SHA3
0x608 PUSH1 0x0
0x60a DUP6
0x60b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x620 AND
0x621 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x636 AND
0x637 DUP2
0x638 MSTORE
0x639 PUSH1 0x20
0x63b ADD
0x63c SWAP1
0x63d DUP2
0x63e MSTORE
0x63f PUSH1 0x20
0x641 ADD
0x642 PUSH1 0x0
0x644 SHA3
0x645 SLOAD
0x646 EQ
0x647 ISZERO
---
0x5c7: V419 = 0x0
0x5c9: V420 = 0x3
0x5cb: V421 = 0x0
0x5cd: V422 = CALLER
0x5ce: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x5e4: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x5fb: M[0x0] = V426
0x5fc: V427 = 0x20
0x5fe: V428 = ADD 0x20 0x0
0x601: M[0x20] = 0x3
0x602: V429 = 0x20
0x604: V430 = ADD 0x20 0x20
0x605: V431 = 0x0
0x607: V432 = SHA3 0x0 0x40
0x608: V433 = 0x0
0x60b: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x620: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x621: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x636: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x638: M[0x0] = V437
0x639: V438 = 0x20
0x63b: V439 = ADD 0x20 0x0
0x63e: M[0x20] = V432
0x63f: V440 = 0x20
0x641: V441 = ADD 0x20 0x20
0x642: V442 = 0x0
0x644: V443 = SHA3 0x0 0x40
0x645: V444 = S[V443]
0x646: V445 = EQ V444 0x0
0x647: V446 = ISZERO V445
---
Entry stack: [V11, 0x1a3, V110, V113, 0x0, V416]
Stack pops: 4
Stack additions: [S3, S2, S1, V446]
Exit stack: [V11, 0x1a3, V110, V113, 0x0, V446]

================================

Block 0x648
[0x648:0x64d]
---
Predecessors: [0x5b9, 0x5c6]
Successors: [0x64e, 0x656]
---
0x648 JUMPDEST
0x649 ISZERO
0x64a PUSH2 0x656
0x64d JUMPI
---
0x648: JUMPDEST 
0x649: V447 = ISZERO S0
0x64a: V448 = 0x656
0x64d: JUMPI 0x656 V447
---
Entry stack: [V11, 0x1a3, V110, V113, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a3, V110, V113, 0x0]

================================

Block 0x64e
[0x64e:0x655]
---
Predecessors: [0x648]
Successors: [0x741]
---
0x64e PUSH1 0x0
0x650 SWAP1
0x651 POP
0x652 PUSH2 0x741
0x655 JUMP
---
0x64e: V449 = 0x0
0x652: V450 = 0x741
0x655: JUMP 0x741
---
Entry stack: [V11, 0x1a3, V110, V113, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a3, V110, V113, 0x0]

================================

Block 0x656
[0x656:0x740]
---
Predecessors: [0x648]
Successors: [0x741]
---
0x656 JUMPDEST
0x657 DUP2
0x658 PUSH1 0x3
0x65a PUSH1 0x0
0x65c CALLER
0x65d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x672 AND
0x673 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x688 AND
0x689 DUP2
0x68a MSTORE
0x68b PUSH1 0x20
0x68d ADD
0x68e SWAP1
0x68f DUP2
0x690 MSTORE
0x691 PUSH1 0x20
0x693 ADD
0x694 PUSH1 0x0
0x696 SHA3
0x697 PUSH1 0x0
0x699 DUP6
0x69a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6af AND
0x6b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c5 AND
0x6c6 DUP2
0x6c7 MSTORE
0x6c8 PUSH1 0x20
0x6ca ADD
0x6cb SWAP1
0x6cc DUP2
0x6cd MSTORE
0x6ce PUSH1 0x20
0x6d0 ADD
0x6d1 PUSH1 0x0
0x6d3 SHA3
0x6d4 DUP2
0x6d5 SWAP1
0x6d6 SSTORE
0x6d7 POP
0x6d8 DUP3
0x6d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ee AND
0x6ef CALLER
0x6f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x705 AND
0x706 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x727 DUP5
0x728 PUSH1 0x40
0x72a MLOAD
0x72b DUP1
0x72c DUP3
0x72d DUP2
0x72e MSTORE
0x72f PUSH1 0x20
0x731 ADD
0x732 SWAP2
0x733 POP
0x734 POP
0x735 PUSH1 0x40
0x737 MLOAD
0x738 DUP1
0x739 SWAP2
0x73a SUB
0x73b SWAP1
0x73c LOG3
0x73d PUSH1 0x1
0x73f SWAP1
0x740 POP
---
0x656: JUMPDEST 
0x658: V451 = 0x3
0x65a: V452 = 0x0
0x65c: V453 = CALLER
0x65d: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x672: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x673: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x688: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x68a: M[0x0] = V457
0x68b: V458 = 0x20
0x68d: V459 = ADD 0x20 0x0
0x690: M[0x20] = 0x3
0x691: V460 = 0x20
0x693: V461 = ADD 0x20 0x20
0x694: V462 = 0x0
0x696: V463 = SHA3 0x0 0x40
0x697: V464 = 0x0
0x69a: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x6af: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x6b0: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c5: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x6c7: M[0x0] = V468
0x6c8: V469 = 0x20
0x6ca: V470 = ADD 0x20 0x0
0x6cd: M[0x20] = V463
0x6ce: V471 = 0x20
0x6d0: V472 = ADD 0x20 0x20
0x6d1: V473 = 0x0
0x6d3: V474 = SHA3 0x0 0x40
0x6d6: S[V474] = V113
0x6d9: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ee: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x6ef: V477 = CALLER
0x6f0: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x705: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x706: V480 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x728: V481 = 0x40
0x72a: V482 = M[0x40]
0x72e: M[V482] = V113
0x72f: V483 = 0x20
0x731: V484 = ADD 0x20 V482
0x735: V485 = 0x40
0x737: V486 = M[0x40]
0x73a: V487 = SUB V484 V486
0x73c: LOG V486 V487 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V479 V476
0x73d: V488 = 0x1
---
Entry stack: [V11, 0x1a3, V110, V113, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V11, 0x1a3, V110, V113, 0x1]

================================

Block 0x741
[0x741:0x746]
---
Predecessors: [0x64e, 0x656]
Successors: [0x1a3]
---
0x741 JUMPDEST
0x742 SWAP3
0x743 SWAP2
0x744 POP
0x745 POP
0x746 JUMP
---
0x741: JUMPDEST 
0x746: JUMP 0x1a3
---
Entry stack: [V11, 0x1a3, V110, V113, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x747
[0x747:0x7a3]
---
Predecessors: [0x1c8]
Successors: [0x7a4, 0x7a8]
---
0x747 JUMPDEST
0x748 PUSH1 0x0
0x74a DUP1
0x74b PUSH1 0x0
0x74d PUSH1 0x1
0x74f PUSH1 0x0
0x751 SWAP1
0x752 SLOAD
0x753 SWAP1
0x754 PUSH2 0x100
0x757 EXP
0x758 SWAP1
0x759 DIV
0x75a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76f AND
0x770 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x785 AND
0x786 CALLER
0x787 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79c AND
0x79d EQ
0x79e ISZERO
0x79f ISZERO
0x7a0 PUSH2 0x7a8
0x7a3 JUMPI
---
0x747: JUMPDEST 
0x748: V489 = 0x0
0x74b: V490 = 0x0
0x74d: V491 = 0x1
0x74f: V492 = 0x0
0x752: V493 = S[0x1]
0x754: V494 = 0x100
0x757: V495 = EXP 0x100 0x0
0x759: V496 = DIV V493 0x1
0x75a: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x76f: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x770: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x785: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x786: V501 = CALLER
0x787: V502 = 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x79d: V504 = EQ V503 V500
0x79e: V505 = ISZERO V504
0x79f: V506 = ISZERO V505
0x7a0: V507 = 0x7a8
0x7a3: JUMPI 0x7a8 V506
---
Entry stack: [V11, 0x1f4, V136]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x1f4, V136, 0x0, 0x0, 0x0]

================================

Block 0x7a4
[0x7a4:0x7a7]
---
Predecessors: [0x747]
Successors: []
---
0x7a4 PUSH1 0x0
0x7a6 DUP1
0x7a7 REVERT
---
0x7a4: V508 = 0x0
0x7a7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V136, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V136, 0x0, 0x0, 0x0]

================================

Block 0x7a8
[0x7a8:0x849]
---
Predecessors: [0x747]
Successors: [0x84a, 0x84e]
---
0x7a8 JUMPDEST
0x7a9 DUP4
0x7aa SWAP2
0x7ab POP
0x7ac DUP2
0x7ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c2 AND
0x7c3 PUSH4 0x70a08231
0x7c8 ADDRESS
0x7c9 PUSH1 0x0
0x7cb PUSH1 0x40
0x7cd MLOAD
0x7ce PUSH1 0x20
0x7d0 ADD
0x7d1 MSTORE
0x7d2 PUSH1 0x40
0x7d4 MLOAD
0x7d5 DUP3
0x7d6 PUSH4 0xffffffff
0x7db AND
0x7dc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7fa MUL
0x7fb DUP2
0x7fc MSTORE
0x7fd PUSH1 0x4
0x7ff ADD
0x800 DUP1
0x801 DUP3
0x802 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x817 AND
0x818 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82d AND
0x82e DUP2
0x82f MSTORE
0x830 PUSH1 0x20
0x832 ADD
0x833 SWAP2
0x834 POP
0x835 POP
0x836 PUSH1 0x20
0x838 PUSH1 0x40
0x83a MLOAD
0x83b DUP1
0x83c DUP4
0x83d SUB
0x83e DUP2
0x83f PUSH1 0x0
0x841 DUP8
0x842 DUP1
0x843 EXTCODESIZE
0x844 ISZERO
0x845 ISZERO
0x846 PUSH2 0x84e
0x849 JUMPI
---
0x7a8: JUMPDEST 
0x7ad: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x7c3: V511 = 0x70a08231
0x7c8: V512 = ADDRESS
0x7c9: V513 = 0x0
0x7cb: V514 = 0x40
0x7cd: V515 = M[0x40]
0x7ce: V516 = 0x20
0x7d0: V517 = ADD 0x20 V515
0x7d1: M[V517] = 0x0
0x7d2: V518 = 0x40
0x7d4: V519 = M[0x40]
0x7d6: V520 = 0xffffffff
0x7db: V521 = AND 0xffffffff 0x70a08231
0x7dc: V522 = 0x100000000000000000000000000000000000000000000000000000000
0x7fa: V523 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x7fc: M[V519] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7fd: V524 = 0x4
0x7ff: V525 = ADD 0x4 V519
0x802: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x817: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V512
0x818: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x82d: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x82f: M[V525] = V529
0x830: V530 = 0x20
0x832: V531 = ADD 0x20 V525
0x836: V532 = 0x20
0x838: V533 = 0x40
0x83a: V534 = M[0x40]
0x83d: V535 = SUB V531 V534
0x83f: V536 = 0x0
0x843: V537 = EXTCODESIZE V510
0x844: V538 = ISZERO V537
0x845: V539 = ISZERO V538
0x846: V540 = 0x84e
0x849: JUMPI 0x84e V539
---
Entry stack: [V11, 0x1f4, V136, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V510, 0x70a08231, V531, 0x20, V534, V535, V534, 0x0, V510]
Exit stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531, 0x20, V534, V535, V534, 0x0, V510]

================================

Block 0x84a
[0x84a:0x84d]
---
Predecessors: [0x7a8]
Successors: []
---
0x84a PUSH1 0x0
0x84c DUP1
0x84d REVERT
---
0x84a: V541 = 0x0
0x84d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531, 0x20, V534, V535, V534, 0x0, V510]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531, 0x20, V534, V535, V534, 0x0, V510]

================================

Block 0x84e
[0x84e:0x85a]
---
Predecessors: [0x7a8]
Successors: [0x85b, 0x85f]
---
0x84e JUMPDEST
0x84f PUSH2 0x2c6
0x852 GAS
0x853 SUB
0x854 CALL
0x855 ISZERO
0x856 ISZERO
0x857 PUSH2 0x85f
0x85a JUMPI
---
0x84e: JUMPDEST 
0x84f: V542 = 0x2c6
0x852: V543 = GAS
0x853: V544 = SUB V543 0x2c6
0x854: V545 = CALL V544 V510 0x0 V534 V535 V534 0x20
0x855: V546 = ISZERO V545
0x856: V547 = ISZERO V546
0x857: V548 = 0x85f
0x85a: JUMPI 0x85f V547
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531, 0x20, V534, V535, V534, 0x0, V510]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531]

================================

Block 0x85b
[0x85b:0x85e]
---
Predecessors: [0x84e]
Successors: []
---
0x85b PUSH1 0x0
0x85d DUP1
0x85e REVERT
---
0x85b: V549 = 0x0
0x85e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531]

================================

Block 0x85f
[0x85f:0x933]
---
Predecessors: [0x84e]
Successors: [0x934, 0x938]
---
0x85f JUMPDEST
0x860 POP
0x861 POP
0x862 POP
0x863 PUSH1 0x40
0x865 MLOAD
0x866 DUP1
0x867 MLOAD
0x868 SWAP1
0x869 POP
0x86a SWAP1
0x86b POP
0x86c DUP2
0x86d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x882 AND
0x883 PUSH4 0xa9059cbb
0x888 PUSH1 0x1
0x88a PUSH1 0x0
0x88c SWAP1
0x88d SLOAD
0x88e SWAP1
0x88f PUSH2 0x100
0x892 EXP
0x893 SWAP1
0x894 DIV
0x895 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8aa AND
0x8ab DUP4
0x8ac PUSH1 0x0
0x8ae PUSH1 0x40
0x8b0 MLOAD
0x8b1 PUSH1 0x20
0x8b3 ADD
0x8b4 MSTORE
0x8b5 PUSH1 0x40
0x8b7 MLOAD
0x8b8 DUP4
0x8b9 PUSH4 0xffffffff
0x8be AND
0x8bf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8dd MUL
0x8de DUP2
0x8df MSTORE
0x8e0 PUSH1 0x4
0x8e2 ADD
0x8e3 DUP1
0x8e4 DUP4
0x8e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fa AND
0x8fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x910 AND
0x911 DUP2
0x912 MSTORE
0x913 PUSH1 0x20
0x915 ADD
0x916 DUP3
0x917 DUP2
0x918 MSTORE
0x919 PUSH1 0x20
0x91b ADD
0x91c SWAP3
0x91d POP
0x91e POP
0x91f POP
0x920 PUSH1 0x20
0x922 PUSH1 0x40
0x924 MLOAD
0x925 DUP1
0x926 DUP4
0x927 SUB
0x928 DUP2
0x929 PUSH1 0x0
0x92b DUP8
0x92c DUP1
0x92d EXTCODESIZE
0x92e ISZERO
0x92f ISZERO
0x930 PUSH2 0x938
0x933 JUMPI
---
0x85f: JUMPDEST 
0x863: V550 = 0x40
0x865: V551 = M[0x40]
0x867: V552 = M[V551]
0x86d: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x882: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x883: V555 = 0xa9059cbb
0x888: V556 = 0x1
0x88a: V557 = 0x0
0x88d: V558 = S[0x1]
0x88f: V559 = 0x100
0x892: V560 = EXP 0x100 0x0
0x894: V561 = DIV V558 0x1
0x895: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x8aa: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x8ac: V564 = 0x0
0x8ae: V565 = 0x40
0x8b0: V566 = M[0x40]
0x8b1: V567 = 0x20
0x8b3: V568 = ADD 0x20 V566
0x8b4: M[V568] = 0x0
0x8b5: V569 = 0x40
0x8b7: V570 = M[0x40]
0x8b9: V571 = 0xffffffff
0x8be: V572 = AND 0xffffffff 0xa9059cbb
0x8bf: V573 = 0x100000000000000000000000000000000000000000000000000000000
0x8dd: V574 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x8df: M[V570] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8e0: V575 = 0x4
0x8e2: V576 = ADD 0x4 V570
0x8e5: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fa: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x8fb: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0x910: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V578
0x912: M[V576] = V580
0x913: V581 = 0x20
0x915: V582 = ADD 0x20 V576
0x918: M[V582] = V552
0x919: V583 = 0x20
0x91b: V584 = ADD 0x20 V582
0x920: V585 = 0x20
0x922: V586 = 0x40
0x924: V587 = M[0x40]
0x927: V588 = SUB V584 V587
0x929: V589 = 0x0
0x92d: V590 = EXTCODESIZE V554
0x92e: V591 = ISZERO V590
0x92f: V592 = ISZERO V591
0x930: V593 = 0x938
0x933: JUMPI 0x938 V592
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, 0x0, V510, 0x70a08231, V531]
Stack pops: 5
Stack additions: [S4, V552, V554, 0xa9059cbb, V584, 0x20, V587, V588, V587, 0x0, V554]
Exit stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584, 0x20, V587, V588, V587, 0x0, V554]

================================

Block 0x934
[0x934:0x937]
---
Predecessors: [0x85f]
Successors: []
---
0x934 PUSH1 0x0
0x936 DUP1
0x937 REVERT
---
0x934: V594 = 0x0
0x937: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584, 0x20, V587, V588, V587, 0x0, V554]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584, 0x20, V587, V588, V587, 0x0, V554]

================================

Block 0x938
[0x938:0x944]
---
Predecessors: [0x85f]
Successors: [0x945, 0x949]
---
0x938 JUMPDEST
0x939 PUSH2 0x2c6
0x93c GAS
0x93d SUB
0x93e CALL
0x93f ISZERO
0x940 ISZERO
0x941 PUSH2 0x949
0x944 JUMPI
---
0x938: JUMPDEST 
0x939: V595 = 0x2c6
0x93c: V596 = GAS
0x93d: V597 = SUB V596 0x2c6
0x93e: V598 = CALL V597 V554 0x0 V587 V588 V587 0x20
0x93f: V599 = ISZERO V598
0x940: V600 = ISZERO V599
0x941: V601 = 0x949
0x944: JUMPI 0x949 V600
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584, 0x20, V587, V588, V587, 0x0, V554]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584]

================================

Block 0x945
[0x945:0x948]
---
Predecessors: [0x938]
Successors: []
---
0x945 PUSH1 0x0
0x947 DUP1
0x948 REVERT
---
0x945: V602 = 0x0
0x948: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584]

================================

Block 0x949
[0x949:0x95b]
---
Predecessors: [0x938]
Successors: [0x1f4]
---
0x949 JUMPDEST
0x94a POP
0x94b POP
0x94c POP
0x94d PUSH1 0x40
0x94f MLOAD
0x950 DUP1
0x951 MLOAD
0x952 SWAP1
0x953 POP
0x954 SWAP3
0x955 POP
0x956 POP
0x957 POP
0x958 SWAP2
0x959 SWAP1
0x95a POP
0x95b JUMP
---
0x949: JUMPDEST 
0x94d: V603 = 0x40
0x94f: V604 = M[0x40]
0x951: V605 = M[V604]
0x95b: JUMP 0x1f4
---
Entry stack: [V11, 0x1f4, V136, 0x0, V136, V552, V554, 0xa9059cbb, V584]
Stack pops: 8
Stack additions: [V605]
Exit stack: [V11, V605]

================================

Block 0x95c
[0x95c:0x961]
---
Predecessors: [0x219]
Successors: [0x221]
---
0x95c JUMPDEST
0x95d PUSH1 0x4
0x95f SLOAD
0x960 DUP2
0x961 JUMP
---
0x95c: JUMPDEST 
0x95d: V606 = 0x4
0x95f: V607 = S[0x4]
0x961: JUMP 0x221
---
Entry stack: [V11, 0x221]
Stack pops: 1
Stack additions: [S0, V607]
Exit stack: [V11, 0x221, V607]

================================

Block 0x962
[0x962:0x977]
---
Predecessors: [0x242]
Successors: [0x978, 0x979]
---
0x962 JUMPDEST
0x963 PUSH1 0x0
0x965 PUSH1 0x60
0x967 PUSH1 0x4
0x969 DUP2
0x96a ADD
0x96b PUSH1 0x0
0x96d CALLDATASIZE
0x96e SWAP1
0x96f POP
0x970 LT
0x971 ISZERO
0x972 ISZERO
0x973 ISZERO
0x974 PUSH2 0x979
0x977 JUMPI
---
0x962: JUMPDEST 
0x963: V608 = 0x0
0x965: V609 = 0x60
0x967: V610 = 0x4
0x96a: V611 = ADD 0x60 0x4
0x96b: V612 = 0x0
0x96d: V613 = CALLDATASIZE
0x970: V614 = LT V613 0x64
0x971: V615 = ISZERO V614
0x972: V616 = ISZERO V615
0x973: V617 = ISZERO V616
0x974: V618 = 0x979
0x977: JUMPI 0x979 V617
---
Entry stack: [V11, 0x296, V172, V177, V180]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]

================================

Block 0x978
[0x978:0x978]
---
Predecessors: [0x962]
Successors: []
---
0x978 INVALID
---
0x978: INVALID 
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]

================================

Block 0x979
[0x979:0x9c2]
---
Predecessors: [0x962]
Successors: [0x9c3, 0xa44]
---
0x979 JUMPDEST
0x97a DUP3
0x97b PUSH1 0x2
0x97d PUSH1 0x0
0x97f DUP8
0x980 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x995 AND
0x996 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ab AND
0x9ac DUP2
0x9ad MSTORE
0x9ae PUSH1 0x20
0x9b0 ADD
0x9b1 SWAP1
0x9b2 DUP2
0x9b3 MSTORE
0x9b4 PUSH1 0x20
0x9b6 ADD
0x9b7 PUSH1 0x0
0x9b9 SHA3
0x9ba SLOAD
0x9bb LT
0x9bc ISZERO
0x9bd DUP1
0x9be ISZERO
0x9bf PUSH2 0xa44
0x9c2 JUMPI
---
0x979: JUMPDEST 
0x97b: V619 = 0x2
0x97d: V620 = 0x0
0x980: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x995: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x996: V623 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ab: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x9ad: M[0x0] = V624
0x9ae: V625 = 0x20
0x9b0: V626 = ADD 0x20 0x0
0x9b3: M[0x20] = 0x2
0x9b4: V627 = 0x20
0x9b6: V628 = ADD 0x20 0x20
0x9b7: V629 = 0x0
0x9b9: V630 = SHA3 0x0 0x40
0x9ba: V631 = S[V630]
0x9bb: V632 = LT V631 V180
0x9bc: V633 = ISZERO V632
0x9be: V634 = ISZERO V633
0x9bf: V635 = 0xa44
0x9c2: JUMPI 0xa44 V634
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V633]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, V633]

================================

Block 0x9c3
[0x9c3:0xa43]
---
Predecessors: [0x979]
Successors: [0xa44]
---
0x9c3 POP
0x9c4 DUP3
0x9c5 PUSH1 0x3
0x9c7 PUSH1 0x0
0x9c9 DUP8
0x9ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9df AND
0x9e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f5 AND
0x9f6 DUP2
0x9f7 MSTORE
0x9f8 PUSH1 0x20
0x9fa ADD
0x9fb SWAP1
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x20
0xa00 ADD
0xa01 PUSH1 0x0
0xa03 SHA3
0xa04 PUSH1 0x0
0xa06 CALLER
0xa07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1c AND
0xa1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa32 AND
0xa33 DUP2
0xa34 MSTORE
0xa35 PUSH1 0x20
0xa37 ADD
0xa38 SWAP1
0xa39 DUP2
0xa3a MSTORE
0xa3b PUSH1 0x20
0xa3d ADD
0xa3e PUSH1 0x0
0xa40 SHA3
0xa41 SLOAD
0xa42 LT
0xa43 ISZERO
---
0x9c5: V636 = 0x3
0x9c7: V637 = 0x0
0x9ca: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x9df: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x9e0: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f5: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x9f7: M[0x0] = V641
0x9f8: V642 = 0x20
0x9fa: V643 = ADD 0x20 0x0
0x9fd: M[0x20] = 0x3
0x9fe: V644 = 0x20
0xa00: V645 = ADD 0x20 0x20
0xa01: V646 = 0x0
0xa03: V647 = SHA3 0x0 0x40
0xa04: V648 = 0x0
0xa06: V649 = CALLER
0xa07: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1c: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0xa1d: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xa32: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0xa34: M[0x0] = V653
0xa35: V654 = 0x20
0xa37: V655 = ADD 0x20 0x0
0xa3a: M[0x20] = V647
0xa3b: V656 = 0x20
0xa3d: V657 = ADD 0x20 0x20
0xa3e: V658 = 0x0
0xa40: V659 = SHA3 0x0 0x40
0xa41: V660 = S[V659]
0xa42: V661 = LT V660 V180
0xa43: V662 = ISZERO V661
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, V633]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V662]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, V662]

================================

Block 0xa44
[0xa44:0xa4a]
---
Predecessors: [0x979, 0x9c3]
Successors: [0xa4b, 0xa50]
---
0xa44 JUMPDEST
0xa45 DUP1
0xa46 ISZERO
0xa47 PUSH2 0xa50
0xa4a JUMPI
---
0xa44: JUMPDEST 
0xa46: V663 = ISZERO S0
0xa47: V664 = 0xa50
0xa4a: JUMPI 0xa50 V663
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, S0]

================================

Block 0xa4b
[0xa4b:0xa4f]
---
Predecessors: [0xa44]
Successors: [0xa50]
---
0xa4b POP
0xa4c PUSH1 0x0
0xa4e DUP4
0xa4f GT
---
0xa4c: V665 = 0x0
0xa4f: V666 = GT V180 0x0
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V666]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, V666]

================================

Block 0xa50
[0xa50:0xa56]
---
Predecessors: [0xa44, 0xa4b]
Successors: [0xa57, 0xadb]
---
0xa50 JUMPDEST
0xa51 DUP1
0xa52 ISZERO
0xa53 PUSH2 0xadb
0xa56 JUMPI
---
0xa50: JUMPDEST 
0xa52: V667 = ISZERO S0
0xa53: V668 = 0xadb
0xa56: JUMPI 0xadb V667
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, S0]

================================

Block 0xa57
[0xa57:0xada]
---
Predecessors: [0xa50]
Successors: [0xadb]
---
0xa57 POP
0xa58 PUSH1 0x2
0xa5a PUSH1 0x0
0xa5c DUP6
0xa5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa72 AND
0xa73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa88 AND
0xa89 DUP2
0xa8a MSTORE
0xa8b PUSH1 0x20
0xa8d ADD
0xa8e SWAP1
0xa8f DUP2
0xa90 MSTORE
0xa91 PUSH1 0x20
0xa93 ADD
0xa94 PUSH1 0x0
0xa96 SHA3
0xa97 SLOAD
0xa98 DUP4
0xa99 PUSH1 0x2
0xa9b PUSH1 0x0
0xa9d DUP8
0xa9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab3 AND
0xab4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac9 AND
0xaca DUP2
0xacb MSTORE
0xacc PUSH1 0x20
0xace ADD
0xacf SWAP1
0xad0 DUP2
0xad1 MSTORE
0xad2 PUSH1 0x20
0xad4 ADD
0xad5 PUSH1 0x0
0xad7 SHA3
0xad8 SLOAD
0xad9 ADD
0xada GT
---
0xa58: V669 = 0x2
0xa5a: V670 = 0x0
0xa5d: V671 = 0xffffffffffffffffffffffffffffffffffffffff
0xa72: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0xa73: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xa88: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0xa8a: M[0x0] = V674
0xa8b: V675 = 0x20
0xa8d: V676 = ADD 0x20 0x0
0xa90: M[0x20] = 0x2
0xa91: V677 = 0x20
0xa93: V678 = ADD 0x20 0x20
0xa94: V679 = 0x0
0xa96: V680 = SHA3 0x0 0x40
0xa97: V681 = S[V680]
0xa99: V682 = 0x2
0xa9b: V683 = 0x0
0xa9e: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xab3: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0xab4: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xac9: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0xacb: M[0x0] = V687
0xacc: V688 = 0x20
0xace: V689 = ADD 0x20 0x0
0xad1: M[0x20] = 0x2
0xad2: V690 = 0x20
0xad4: V691 = ADD 0x20 0x20
0xad5: V692 = 0x0
0xad7: V693 = SHA3 0x0 0x40
0xad8: V694 = S[V693]
0xad9: V695 = ADD V694 V180
0xada: V696 = GT V695 V681
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V696]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, V696]

================================

Block 0xadb
[0xadb:0xae0]
---
Predecessors: [0xa50, 0xa57]
Successors: [0xae1, 0xc72]
---
0xadb JUMPDEST
0xadc ISZERO
0xadd PUSH2 0xc72
0xae0 JUMPI
---
0xadb: JUMPDEST 
0xadc: V697 = ISZERO S0
0xadd: V698 = 0xc72
0xae0: JUMPI 0xc72 V697
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]

================================

Block 0xae1
[0xae1:0xc71]
---
Predecessors: [0xadb]
Successors: [0xc77]
---
0xae1 DUP3
0xae2 PUSH1 0x2
0xae4 PUSH1 0x0
0xae6 DUP8
0xae7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xafc AND
0xafd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb12 AND
0xb13 DUP2
0xb14 MSTORE
0xb15 PUSH1 0x20
0xb17 ADD
0xb18 SWAP1
0xb19 DUP2
0xb1a MSTORE
0xb1b PUSH1 0x20
0xb1d ADD
0xb1e PUSH1 0x0
0xb20 SHA3
0xb21 PUSH1 0x0
0xb23 DUP3
0xb24 DUP3
0xb25 SLOAD
0xb26 SUB
0xb27 SWAP3
0xb28 POP
0xb29 POP
0xb2a DUP2
0xb2b SWAP1
0xb2c SSTORE
0xb2d POP
0xb2e DUP3
0xb2f PUSH1 0x3
0xb31 PUSH1 0x0
0xb33 DUP8
0xb34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb49 AND
0xb4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5f AND
0xb60 DUP2
0xb61 MSTORE
0xb62 PUSH1 0x20
0xb64 ADD
0xb65 SWAP1
0xb66 DUP2
0xb67 MSTORE
0xb68 PUSH1 0x20
0xb6a ADD
0xb6b PUSH1 0x0
0xb6d SHA3
0xb6e PUSH1 0x0
0xb70 CALLER
0xb71 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb86 AND
0xb87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9c AND
0xb9d DUP2
0xb9e MSTORE
0xb9f PUSH1 0x20
0xba1 ADD
0xba2 SWAP1
0xba3 DUP2
0xba4 MSTORE
0xba5 PUSH1 0x20
0xba7 ADD
0xba8 PUSH1 0x0
0xbaa SHA3
0xbab PUSH1 0x0
0xbad DUP3
0xbae DUP3
0xbaf SLOAD
0xbb0 SUB
0xbb1 SWAP3
0xbb2 POP
0xbb3 POP
0xbb4 DUP2
0xbb5 SWAP1
0xbb6 SSTORE
0xbb7 POP
0xbb8 DUP3
0xbb9 PUSH1 0x2
0xbbb PUSH1 0x0
0xbbd DUP7
0xbbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd3 AND
0xbd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe9 AND
0xbea DUP2
0xbeb MSTORE
0xbec PUSH1 0x20
0xbee ADD
0xbef SWAP1
0xbf0 DUP2
0xbf1 MSTORE
0xbf2 PUSH1 0x20
0xbf4 ADD
0xbf5 PUSH1 0x0
0xbf7 SHA3
0xbf8 PUSH1 0x0
0xbfa DUP3
0xbfb DUP3
0xbfc SLOAD
0xbfd ADD
0xbfe SWAP3
0xbff POP
0xc00 POP
0xc01 DUP2
0xc02 SWAP1
0xc03 SSTORE
0xc04 POP
0xc05 DUP4
0xc06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1b AND
0xc1c DUP6
0xc1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc32 AND
0xc33 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc54 DUP6
0xc55 PUSH1 0x40
0xc57 MLOAD
0xc58 DUP1
0xc59 DUP3
0xc5a DUP2
0xc5b MSTORE
0xc5c PUSH1 0x20
0xc5e ADD
0xc5f SWAP2
0xc60 POP
0xc61 POP
0xc62 PUSH1 0x40
0xc64 MLOAD
0xc65 DUP1
0xc66 SWAP2
0xc67 SUB
0xc68 SWAP1
0xc69 LOG3
0xc6a PUSH1 0x1
0xc6c SWAP2
0xc6d POP
0xc6e PUSH2 0xc77
0xc71 JUMP
---
0xae2: V699 = 0x2
0xae4: V700 = 0x0
0xae7: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xafc: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0xafd: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xb12: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0xb14: M[0x0] = V704
0xb15: V705 = 0x20
0xb17: V706 = ADD 0x20 0x0
0xb1a: M[0x20] = 0x2
0xb1b: V707 = 0x20
0xb1d: V708 = ADD 0x20 0x20
0xb1e: V709 = 0x0
0xb20: V710 = SHA3 0x0 0x40
0xb21: V711 = 0x0
0xb25: V712 = S[V710]
0xb26: V713 = SUB V712 V180
0xb2c: S[V710] = V713
0xb2f: V714 = 0x3
0xb31: V715 = 0x0
0xb34: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0xb49: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0xb4a: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5f: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0xb61: M[0x0] = V719
0xb62: V720 = 0x20
0xb64: V721 = ADD 0x20 0x0
0xb67: M[0x20] = 0x3
0xb68: V722 = 0x20
0xb6a: V723 = ADD 0x20 0x20
0xb6b: V724 = 0x0
0xb6d: V725 = SHA3 0x0 0x40
0xb6e: V726 = 0x0
0xb70: V727 = CALLER
0xb71: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xb86: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0xb87: V730 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9c: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0xb9e: M[0x0] = V731
0xb9f: V732 = 0x20
0xba1: V733 = ADD 0x20 0x0
0xba4: M[0x20] = V725
0xba5: V734 = 0x20
0xba7: V735 = ADD 0x20 0x20
0xba8: V736 = 0x0
0xbaa: V737 = SHA3 0x0 0x40
0xbab: V738 = 0x0
0xbaf: V739 = S[V737]
0xbb0: V740 = SUB V739 V180
0xbb6: S[V737] = V740
0xbb9: V741 = 0x2
0xbbb: V742 = 0x0
0xbbe: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd3: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0xbd4: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe9: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0xbeb: M[0x0] = V746
0xbec: V747 = 0x20
0xbee: V748 = ADD 0x20 0x0
0xbf1: M[0x20] = 0x2
0xbf2: V749 = 0x20
0xbf4: V750 = ADD 0x20 0x20
0xbf5: V751 = 0x0
0xbf7: V752 = SHA3 0x0 0x40
0xbf8: V753 = 0x0
0xbfc: V754 = S[V752]
0xbfd: V755 = ADD V754 V180
0xc03: S[V752] = V755
0xc06: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1b: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0xc1d: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xc32: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0xc33: V760 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc55: V761 = 0x40
0xc57: V762 = M[0x40]
0xc5b: M[V762] = V180
0xc5c: V763 = 0x20
0xc5e: V764 = ADD 0x20 V762
0xc62: V765 = 0x40
0xc64: V766 = M[0x40]
0xc67: V767 = SUB V764 V766
0xc69: LOG V766 V767 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V759 V757
0xc6a: V768 = 0x1
0xc6e: V769 = 0xc77
0xc71: JUMP 0xc77
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, 0x1, S0]
Exit stack: [V11, 0x296, V172, V177, V180, 0x1, 0x60]

================================

Block 0xc72
[0xc72:0xc76]
---
Predecessors: [0xadb]
Successors: [0xc77]
---
0xc72 JUMPDEST
0xc73 PUSH1 0x0
0xc75 SWAP2
0xc76 POP
---
0xc72: JUMPDEST 
0xc73: V770 = 0x0
---
Entry stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x296, V172, V177, V180, 0x0, 0x60]

================================

Block 0xc77
[0xc77:0xc7e]
---
Predecessors: [0xae1, 0xc72]
Successors: [0x296]
---
0xc77 JUMPDEST
0xc78 POP
0xc79 SWAP4
0xc7a SWAP3
0xc7b POP
0xc7c POP
0xc7d POP
0xc7e JUMP
---
0xc77: JUMPDEST 
0xc7e: JUMP 0x296
---
Entry stack: [V11, 0x296, V172, V177, V180, {0x0, 0x1}, 0x60]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xc7f
[0xc7f:0xc87]
---
Predecessors: [0x2bb]
Successors: [0x2c3]
---
0xc7f JUMPDEST
0xc80 PUSH1 0x0
0xc82 PUSH1 0x12
0xc84 SWAP1
0xc85 POP
0xc86 SWAP1
0xc87 JUMP
---
0xc7f: JUMPDEST 
0xc80: V771 = 0x0
0xc82: V772 = 0x12
0xc87: JUMP 0x2c3
---
Entry stack: [V11, 0x2c3]
Stack pops: 1
Stack additions: [0x12]
Exit stack: [V11, 0x12]

================================

Block 0xc88
[0xc88:0xcd0]
---
Predecessors: [0x2ea]
Successors: [0x316]
---
0xc88 JUMPDEST
0xc89 PUSH1 0x0
0xc8b PUSH1 0x2
0xc8d PUSH1 0x0
0xc8f DUP4
0xc90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca5 AND
0xca6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbb AND
0xcbc DUP2
0xcbd MSTORE
0xcbe PUSH1 0x20
0xcc0 ADD
0xcc1 SWAP1
0xcc2 DUP2
0xcc3 MSTORE
0xcc4 PUSH1 0x20
0xcc6 ADD
0xcc7 PUSH1 0x0
0xcc9 SHA3
0xcca SLOAD
0xccb SWAP1
0xccc POP
0xccd SWAP2
0xcce SWAP1
0xccf POP
0xcd0 JUMP
---
0xc88: JUMPDEST 
0xc89: V773 = 0x0
0xc8b: V774 = 0x2
0xc8d: V775 = 0x0
0xc90: V776 = 0xffffffffffffffffffffffffffffffffffffffff
0xca5: V777 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0xca6: V778 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbb: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0xcbd: M[0x0] = V779
0xcbe: V780 = 0x20
0xcc0: V781 = ADD 0x20 0x0
0xcc3: M[0x20] = 0x2
0xcc4: V782 = 0x20
0xcc6: V783 = ADD 0x20 0x20
0xcc7: V784 = 0x0
0xcc9: V785 = SHA3 0x0 0x40
0xcca: V786 = S[V785]
0xcd0: JUMP 0x316
---
Entry stack: [V11, 0x316, V220]
Stack pops: 2
Stack additions: [V786]
Exit stack: [V11, V786]

================================

Block 0xcd1
[0xcd1:0xcd8]
---
Predecessors: [0x337]
Successors: [0x12f3]
---
0xcd1 JUMPDEST
0xcd2 PUSH2 0xcd9
0xcd5 PUSH2 0x12f3
0xcd8 JUMP
---
0xcd1: JUMPDEST 
0xcd2: V787 = 0xcd9
0xcd5: V788 = 0x12f3
0xcd8: JUMP 0x12f3
---
Entry stack: [V11, 0x33f]
Stack pops: 0
Stack additions: [0xcd9]
Exit stack: [V11, 0x33f, 0xcd9]

================================

Block 0xcd9
[0xcd9:0xd13]
---
Predecessors: [0x12f3]
Successors: [0xe8, 0x33f]
---
0xcd9 JUMPDEST
0xcda PUSH1 0x40
0xcdc DUP1
0xcdd MLOAD
0xcde SWAP1
0xcdf DUP2
0xce0 ADD
0xce1 PUSH1 0x40
0xce3 MSTORE
0xce4 DUP1
0xce5 PUSH1 0x3
0xce7 DUP2
0xce8 MSTORE
0xce9 PUSH1 0x20
0xceb ADD
0xcec PUSH32 0x414d580000000000000000000000000000000000000000000000000000000000
0xd0d DUP2
0xd0e MSTORE
0xd0f POP
0xd10 SWAP1
0xd11 POP
0xd12 SWAP1
0xd13 JUMP
---
0xcd9: JUMPDEST 
0xcda: V789 = 0x40
0xcdd: V790 = M[0x40]
0xce0: V791 = ADD V790 0x40
0xce1: V792 = 0x40
0xce3: M[0x40] = V791
0xce5: V793 = 0x3
0xce8: M[V790] = 0x3
0xce9: V794 = 0x20
0xceb: V795 = ADD 0x20 V790
0xcec: V796 = 0x414d580000000000000000000000000000000000000000000000000000000000
0xd0e: M[V795] = 0x414d580000000000000000000000000000000000000000000000000000000000
0xd13: JUMP {0xe8, 0x33f}
---
Entry stack: [V11, {0xe8, 0x33f}, V1120]
Stack pops: 2
Stack additions: [V790]
Exit stack: [V11, V790]

================================

Block 0xd14
[0xd14:0xd6d]
---
Predecessors: [0x3c5]
Successors: [0xd6e, 0xd72]
---
0xd14 JUMPDEST
0xd15 PUSH1 0x0
0xd17 PUSH1 0x1
0xd19 PUSH1 0x0
0xd1b SWAP1
0xd1c SLOAD
0xd1d SWAP1
0xd1e PUSH2 0x100
0xd21 EXP
0xd22 SWAP1
0xd23 DIV
0xd24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd39 AND
0xd3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4f AND
0xd50 CALLER
0xd51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd66 AND
0xd67 EQ
0xd68 ISZERO
0xd69 ISZERO
0xd6a PUSH2 0xd72
0xd6d JUMPI
---
0xd14: JUMPDEST 
0xd15: V797 = 0x0
0xd17: V798 = 0x1
0xd19: V799 = 0x0
0xd1c: V800 = S[0x1]
0xd1e: V801 = 0x100
0xd21: V802 = EXP 0x100 0x0
0xd23: V803 = DIV V800 0x1
0xd24: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xd39: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0xd3a: V806 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4f: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0xd50: V808 = CALLER
0xd51: V809 = 0xffffffffffffffffffffffffffffffffffffffff
0xd66: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V808
0xd67: V811 = EQ V810 V807
0xd68: V812 = ISZERO V811
0xd69: V813 = ISZERO V812
0xd6a: V814 = 0xd72
0xd6d: JUMPI 0xd72 V813
---
Entry stack: [V11, 0x3cd]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x3cd, 0x0]

================================

Block 0xd6e
[0xd6e:0xd71]
---
Predecessors: [0xd14]
Successors: []
---
0xd6e PUSH1 0x0
0xd70 DUP1
0xd71 REVERT
---
0xd6e: V815 = 0x0
0xd71: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3cd, 0x0]

================================

Block 0xd72
[0xd72:0xdbf]
---
Predecessors: [0xd14]
Successors: [0x3cd]
---
0xd72 JUMPDEST
0xd73 PUSH1 0x1
0xd75 PUSH1 0x5
0xd77 PUSH1 0x0
0xd79 PUSH2 0x100
0xd7c EXP
0xd7d DUP2
0xd7e SLOAD
0xd7f DUP2
0xd80 PUSH1 0xff
0xd82 MUL
0xd83 NOT
0xd84 AND
0xd85 SWAP1
0xd86 DUP4
0xd87 ISZERO
0xd88 ISZERO
0xd89 MUL
0xd8a OR
0xd8b SWAP1
0xd8c SSTORE
0xd8d POP
0xd8e PUSH32 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xdaf PUSH1 0x40
0xdb1 MLOAD
0xdb2 PUSH1 0x40
0xdb4 MLOAD
0xdb5 DUP1
0xdb6 SWAP2
0xdb7 SUB
0xdb8 SWAP1
0xdb9 LOG1
0xdba PUSH1 0x1
0xdbc SWAP1
0xdbd POP
0xdbe SWAP1
0xdbf JUMP
---
0xd72: JUMPDEST 
0xd73: V816 = 0x1
0xd75: V817 = 0x5
0xd77: V818 = 0x0
0xd79: V819 = 0x100
0xd7c: V820 = EXP 0x100 0x0
0xd7e: V821 = S[0x5]
0xd80: V822 = 0xff
0xd82: V823 = MUL 0xff 0x1
0xd83: V824 = NOT 0xff
0xd84: V825 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V821
0xd87: V826 = ISZERO 0x1
0xd88: V827 = ISZERO 0x0
0xd89: V828 = MUL 0x1 0x1
0xd8a: V829 = OR 0x1 V825
0xd8c: S[0x5] = V829
0xd8e: V830 = 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xdaf: V831 = 0x40
0xdb1: V832 = M[0x40]
0xdb2: V833 = 0x40
0xdb4: V834 = M[0x40]
0xdb7: V835 = SUB V832 V834
0xdb9: LOG V834 V835 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xdba: V836 = 0x1
0xdbf: JUMP 0x3cd
---
Entry stack: [V11, 0x3cd, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xdc0
[0xdc0:0xdd5]
---
Predecessors: [0x3f2]
Successors: [0xdd6, 0xdd7]
---
0xdc0 JUMPDEST
0xdc1 PUSH1 0x0
0xdc3 PUSH1 0x40
0xdc5 PUSH1 0x4
0xdc7 DUP2
0xdc8 ADD
0xdc9 PUSH1 0x0
0xdcb CALLDATASIZE
0xdcc SWAP1
0xdcd POP
0xdce LT
0xdcf ISZERO
0xdd0 ISZERO
0xdd1 ISZERO
0xdd2 PUSH2 0xdd7
0xdd5 JUMPI
---
0xdc0: JUMPDEST 
0xdc1: V837 = 0x0
0xdc3: V838 = 0x40
0xdc5: V839 = 0x4
0xdc8: V840 = ADD 0x40 0x4
0xdc9: V841 = 0x0
0xdcb: V842 = CALLDATASIZE
0xdce: V843 = LT V842 0x44
0xdcf: V844 = ISZERO V843
0xdd0: V845 = ISZERO V844
0xdd1: V846 = ISZERO V845
0xdd2: V847 = 0xdd7
0xdd5: JUMPI 0xdd7 V846
---
Entry stack: [V11, 0x427, V303, V306]
Stack pops: 0
Stack additions: [0x0, 0x40]
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40]

================================

Block 0xdd6
[0xdd6:0xdd6]
---
Predecessors: [0xdc0]
Successors: []
---
0xdd6 INVALID
---
0xdd6: INVALID 
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40]

================================

Block 0xdd7
[0xdd7:0xe20]
---
Predecessors: [0xdc0]
Successors: [0xe21, 0xe26]
---
0xdd7 JUMPDEST
0xdd8 DUP3
0xdd9 PUSH1 0x2
0xddb PUSH1 0x0
0xddd CALLER
0xdde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf3 AND
0xdf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe09 AND
0xe0a DUP2
0xe0b MSTORE
0xe0c PUSH1 0x20
0xe0e ADD
0xe0f SWAP1
0xe10 DUP2
0xe11 MSTORE
0xe12 PUSH1 0x20
0xe14 ADD
0xe15 PUSH1 0x0
0xe17 SHA3
0xe18 SLOAD
0xe19 LT
0xe1a ISZERO
0xe1b DUP1
0xe1c ISZERO
0xe1d PUSH2 0xe26
0xe20 JUMPI
---
0xdd7: JUMPDEST 
0xdd9: V848 = 0x2
0xddb: V849 = 0x0
0xddd: V850 = CALLER
0xdde: V851 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf3: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff V850
0xdf4: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xe09: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0xe0b: M[0x0] = V854
0xe0c: V855 = 0x20
0xe0e: V856 = ADD 0x20 0x0
0xe11: M[0x20] = 0x2
0xe12: V857 = 0x20
0xe14: V858 = ADD 0x20 0x20
0xe15: V859 = 0x0
0xe17: V860 = SHA3 0x0 0x40
0xe18: V861 = S[V860]
0xe19: V862 = LT V861 V306
0xe1a: V863 = ISZERO V862
0xe1c: V864 = ISZERO V863
0xe1d: V865 = 0xe26
0xe20: JUMPI 0xe26 V864
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0, V863]
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40, V863]

================================

Block 0xe21
[0xe21:0xe25]
---
Predecessors: [0xdd7]
Successors: [0xe26]
---
0xe21 POP
0xe22 PUSH1 0x0
0xe24 DUP4
0xe25 GT
---
0xe22: V866 = 0x0
0xe25: V867 = GT V306 0x0
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40, V863]
Stack pops: 4
Stack additions: [S3, S2, S1, V867]
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40, V867]

================================

Block 0xe26
[0xe26:0xe2c]
---
Predecessors: [0xdd7, 0xe21]
Successors: [0xe2d, 0xeb1]
---
0xe26 JUMPDEST
0xe27 DUP1
0xe28 ISZERO
0xe29 PUSH2 0xeb1
0xe2c JUMPI
---
0xe26: JUMPDEST 
0xe28: V868 = ISZERO S0
0xe29: V869 = 0xeb1
0xe2c: JUMPI 0xeb1 V868
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40, S0]

================================

Block 0xe2d
[0xe2d:0xeb0]
---
Predecessors: [0xe26]
Successors: [0xeb1]
---
0xe2d POP
0xe2e PUSH1 0x2
0xe30 PUSH1 0x0
0xe32 DUP6
0xe33 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe48 AND
0xe49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5e AND
0xe5f DUP2
0xe60 MSTORE
0xe61 PUSH1 0x20
0xe63 ADD
0xe64 SWAP1
0xe65 DUP2
0xe66 MSTORE
0xe67 PUSH1 0x20
0xe69 ADD
0xe6a PUSH1 0x0
0xe6c SHA3
0xe6d SLOAD
0xe6e DUP4
0xe6f PUSH1 0x2
0xe71 PUSH1 0x0
0xe73 DUP8
0xe74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe89 AND
0xe8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9f AND
0xea0 DUP2
0xea1 MSTORE
0xea2 PUSH1 0x20
0xea4 ADD
0xea5 SWAP1
0xea6 DUP2
0xea7 MSTORE
0xea8 PUSH1 0x20
0xeaa ADD
0xeab PUSH1 0x0
0xead SHA3
0xeae SLOAD
0xeaf ADD
0xeb0 GT
---
0xe2e: V870 = 0x2
0xe30: V871 = 0x0
0xe33: V872 = 0xffffffffffffffffffffffffffffffffffffffff
0xe48: V873 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0xe49: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5e: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xe60: M[0x0] = V875
0xe61: V876 = 0x20
0xe63: V877 = ADD 0x20 0x0
0xe66: M[0x20] = 0x2
0xe67: V878 = 0x20
0xe69: V879 = ADD 0x20 0x20
0xe6a: V880 = 0x0
0xe6c: V881 = SHA3 0x0 0x40
0xe6d: V882 = S[V881]
0xe6f: V883 = 0x2
0xe71: V884 = 0x0
0xe74: V885 = 0xffffffffffffffffffffffffffffffffffffffff
0xe89: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0xe8a: V887 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9f: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0xea1: M[0x0] = V888
0xea2: V889 = 0x20
0xea4: V890 = ADD 0x20 0x0
0xea7: M[0x20] = 0x2
0xea8: V891 = 0x20
0xeaa: V892 = ADD 0x20 0x20
0xeab: V893 = 0x0
0xead: V894 = SHA3 0x0 0x40
0xeae: V895 = S[V894]
0xeaf: V896 = ADD V895 V306
0xeb0: V897 = GT V896 V882
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V897]
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40, V897]

================================

Block 0xeb1
[0xeb1:0xeb6]
---
Predecessors: [0xe26, 0xe2d]
Successors: [0xeb7, 0xfbe]
---
0xeb1 JUMPDEST
0xeb2 ISZERO
0xeb3 PUSH2 0xfbe
0xeb6 JUMPI
---
0xeb1: JUMPDEST 
0xeb2: V898 = ISZERO S0
0xeb3: V899 = 0xfbe
0xeb6: JUMPI 0xfbe V898
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40]

================================

Block 0xeb7
[0xeb7:0xfbd]
---
Predecessors: [0xeb1]
Successors: [0xfc3]
---
0xeb7 DUP3
0xeb8 PUSH1 0x2
0xeba PUSH1 0x0
0xebc CALLER
0xebd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed2 AND
0xed3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee8 AND
0xee9 DUP2
0xeea MSTORE
0xeeb PUSH1 0x20
0xeed ADD
0xeee SWAP1
0xeef DUP2
0xef0 MSTORE
0xef1 PUSH1 0x20
0xef3 ADD
0xef4 PUSH1 0x0
0xef6 SHA3
0xef7 PUSH1 0x0
0xef9 DUP3
0xefa DUP3
0xefb SLOAD
0xefc SUB
0xefd SWAP3
0xefe POP
0xeff POP
0xf00 DUP2
0xf01 SWAP1
0xf02 SSTORE
0xf03 POP
0xf04 DUP3
0xf05 PUSH1 0x2
0xf07 PUSH1 0x0
0xf09 DUP7
0xf0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1f AND
0xf20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf35 AND
0xf36 DUP2
0xf37 MSTORE
0xf38 PUSH1 0x20
0xf3a ADD
0xf3b SWAP1
0xf3c DUP2
0xf3d MSTORE
0xf3e PUSH1 0x20
0xf40 ADD
0xf41 PUSH1 0x0
0xf43 SHA3
0xf44 PUSH1 0x0
0xf46 DUP3
0xf47 DUP3
0xf48 SLOAD
0xf49 ADD
0xf4a SWAP3
0xf4b POP
0xf4c POP
0xf4d DUP2
0xf4e SWAP1
0xf4f SSTORE
0xf50 POP
0xf51 DUP4
0xf52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf67 AND
0xf68 CALLER
0xf69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7e AND
0xf7f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xfa0 DUP6
0xfa1 PUSH1 0x40
0xfa3 MLOAD
0xfa4 DUP1
0xfa5 DUP3
0xfa6 DUP2
0xfa7 MSTORE
0xfa8 PUSH1 0x20
0xfaa ADD
0xfab SWAP2
0xfac POP
0xfad POP
0xfae PUSH1 0x40
0xfb0 MLOAD
0xfb1 DUP1
0xfb2 SWAP2
0xfb3 SUB
0xfb4 SWAP1
0xfb5 LOG3
0xfb6 PUSH1 0x1
0xfb8 SWAP2
0xfb9 POP
0xfba PUSH2 0xfc3
0xfbd JUMP
---
0xeb8: V900 = 0x2
0xeba: V901 = 0x0
0xebc: V902 = CALLER
0xebd: V903 = 0xffffffffffffffffffffffffffffffffffffffff
0xed2: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0xed3: V905 = 0xffffffffffffffffffffffffffffffffffffffff
0xee8: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0xeea: M[0x0] = V906
0xeeb: V907 = 0x20
0xeed: V908 = ADD 0x20 0x0
0xef0: M[0x20] = 0x2
0xef1: V909 = 0x20
0xef3: V910 = ADD 0x20 0x20
0xef4: V911 = 0x0
0xef6: V912 = SHA3 0x0 0x40
0xef7: V913 = 0x0
0xefb: V914 = S[V912]
0xefc: V915 = SUB V914 V306
0xf02: S[V912] = V915
0xf05: V916 = 0x2
0xf07: V917 = 0x0
0xf0a: V918 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1f: V919 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0xf20: V920 = 0xffffffffffffffffffffffffffffffffffffffff
0xf35: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V919
0xf37: M[0x0] = V921
0xf38: V922 = 0x20
0xf3a: V923 = ADD 0x20 0x0
0xf3d: M[0x20] = 0x2
0xf3e: V924 = 0x20
0xf40: V925 = ADD 0x20 0x20
0xf41: V926 = 0x0
0xf43: V927 = SHA3 0x0 0x40
0xf44: V928 = 0x0
0xf48: V929 = S[V927]
0xf49: V930 = ADD V929 V306
0xf4f: S[V927] = V930
0xf52: V931 = 0xffffffffffffffffffffffffffffffffffffffff
0xf67: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0xf68: V933 = CALLER
0xf69: V934 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7e: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V933
0xf7f: V936 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xfa1: V937 = 0x40
0xfa3: V938 = M[0x40]
0xfa7: M[V938] = V306
0xfa8: V939 = 0x20
0xfaa: V940 = ADD 0x20 V938
0xfae: V941 = 0x40
0xfb0: V942 = M[0x40]
0xfb3: V943 = SUB V940 V942
0xfb5: LOG V942 V943 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V935 V932
0xfb6: V944 = 0x1
0xfba: V945 = 0xfc3
0xfbd: JUMP 0xfc3
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40]
Stack pops: 4
Stack additions: [S3, S2, 0x1, S0]
Exit stack: [V11, 0x427, V303, V306, 0x1, 0x40]

================================

Block 0xfbe
[0xfbe:0xfc2]
---
Predecessors: [0xeb1]
Successors: [0xfc3]
---
0xfbe JUMPDEST
0xfbf PUSH1 0x0
0xfc1 SWAP2
0xfc2 POP
---
0xfbe: JUMPDEST 
0xfbf: V946 = 0x0
---
Entry stack: [V11, 0x427, V303, V306, 0x0, 0x40]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x427, V303, V306, 0x0, 0x40]

================================

Block 0xfc3
[0xfc3:0xfc9]
---
Predecessors: [0xeb7, 0xfbe]
Successors: [0x427]
---
0xfc3 JUMPDEST
0xfc4 POP
0xfc5 SWAP3
0xfc6 SWAP2
0xfc7 POP
0xfc8 POP
0xfc9 JUMP
---
0xfc3: JUMPDEST 
0xfc9: JUMP 0x427
---
Entry stack: [V11, 0x427, V303, V306, {0x0, 0x1}, 0x40]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xfca
[0xfca:0x1023]
---
Predecessors: [0x44c]
Successors: [0x1024, 0x1028]
---
0xfca JUMPDEST
0xfcb PUSH1 0x0
0xfcd PUSH1 0x1
0xfcf PUSH1 0x0
0xfd1 SWAP1
0xfd2 SLOAD
0xfd3 SWAP1
0xfd4 PUSH2 0x100
0xfd7 EXP
0xfd8 SWAP1
0xfd9 DIV
0xfda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfef AND
0xff0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1005 AND
0x1006 CALLER
0x1007 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101c AND
0x101d EQ
0x101e ISZERO
0x101f ISZERO
0x1020 PUSH2 0x1028
0x1023 JUMPI
---
0xfca: JUMPDEST 
0xfcb: V947 = 0x0
0xfcd: V948 = 0x1
0xfcf: V949 = 0x0
0xfd2: V950 = S[0x1]
0xfd4: V951 = 0x100
0xfd7: V952 = EXP 0x100 0x0
0xfd9: V953 = DIV V950 0x1
0xfda: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0xfef: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0xff0: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0x1005: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V955
0x1006: V958 = CALLER
0x1007: V959 = 0xffffffffffffffffffffffffffffffffffffffff
0x101c: V960 = AND 0xffffffffffffffffffffffffffffffffffffffff V958
0x101d: V961 = EQ V960 V957
0x101e: V962 = ISZERO V961
0x101f: V963 = ISZERO V962
0x1020: V964 = 0x1028
0x1023: JUMPI 0x1028 V963
---
Entry stack: [V11, 0x4a2, V339, V347]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x4a2, V339, V347, 0x0]

================================

Block 0x1024
[0x1024:0x1027]
---
Predecessors: [0xfca]
Successors: []
---
0x1024 PUSH1 0x0
0x1026 DUP1
0x1027 REVERT
---
0x1024: V965 = 0x0
0x1027: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4a2, V339, V347, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4a2, V339, V347, 0x0]

================================

Block 0x1028
[0x1028:0x102c]
---
Predecessors: [0xfca]
Successors: [0x102d]
---
0x1028 JUMPDEST
0x1029 PUSH1 0x0
0x102b SWAP1
0x102c POP
---
0x1028: JUMPDEST 
0x1029: V966 = 0x0
---
Entry stack: [V11, 0x4a2, V339, V347, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x4a2, V339, V347, 0x0]

================================

Block 0x102d
[0x102d:0x1036]
---
Predecessors: [0x1028, 0x1117]
Successors: [0x1037, 0x11b4]
---
0x102d JUMPDEST
0x102e DUP3
0x102f MLOAD
0x1030 DUP2
0x1031 LT
0x1032 ISZERO
0x1033 PUSH2 0x11b4
0x1036 JUMPI
---
0x102d: JUMPDEST 
0x102f: V967 = M[V339]
0x1031: V968 = LT S0 V967
0x1032: V969 = ISZERO V968
0x1033: V970 = 0x11b4
0x1036: JUMPI 0x11b4 V969
---
Entry stack: [V11, 0x4a2, V339, V347, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x4a2, V339, V347, S0]

================================

Block 0x1037
[0x1037:0x10b6]
---
Predecessors: [0x102d]
Successors: [0x10b7, 0x10b8]
---
0x1037 DUP2
0x1038 PUSH1 0x2
0x103a PUSH1 0x0
0x103c PUSH1 0x1
0x103e PUSH1 0x0
0x1040 SWAP1
0x1041 SLOAD
0x1042 SWAP1
0x1043 PUSH2 0x100
0x1046 EXP
0x1047 SWAP1
0x1048 DIV
0x1049 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105e AND
0x105f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1074 AND
0x1075 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108a AND
0x108b DUP2
0x108c MSTORE
0x108d PUSH1 0x20
0x108f ADD
0x1090 SWAP1
0x1091 DUP2
0x1092 MSTORE
0x1093 PUSH1 0x20
0x1095 ADD
0x1096 PUSH1 0x0
0x1098 SHA3
0x1099 PUSH1 0x0
0x109b DUP3
0x109c DUP3
0x109d SLOAD
0x109e SUB
0x109f SWAP3
0x10a0 POP
0x10a1 POP
0x10a2 DUP2
0x10a3 SWAP1
0x10a4 SSTORE
0x10a5 POP
0x10a6 DUP2
0x10a7 PUSH1 0x2
0x10a9 PUSH1 0x0
0x10ab DUP6
0x10ac DUP5
0x10ad DUP2
0x10ae MLOAD
0x10af DUP2
0x10b0 LT
0x10b1 ISZERO
0x10b2 ISZERO
0x10b3 PUSH2 0x10b8
0x10b6 JUMPI
---
0x1038: V971 = 0x2
0x103a: V972 = 0x0
0x103c: V973 = 0x1
0x103e: V974 = 0x0
0x1041: V975 = S[0x1]
0x1043: V976 = 0x100
0x1046: V977 = EXP 0x100 0x0
0x1048: V978 = DIV V975 0x1
0x1049: V979 = 0xffffffffffffffffffffffffffffffffffffffff
0x105e: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V978
0x105f: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0x1074: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V980
0x1075: V983 = 0xffffffffffffffffffffffffffffffffffffffff
0x108a: V984 = AND 0xffffffffffffffffffffffffffffffffffffffff V982
0x108c: M[0x0] = V984
0x108d: V985 = 0x20
0x108f: V986 = ADD 0x20 0x0
0x1092: M[0x20] = 0x2
0x1093: V987 = 0x20
0x1095: V988 = ADD 0x20 0x20
0x1096: V989 = 0x0
0x1098: V990 = SHA3 0x0 0x40
0x1099: V991 = 0x0
0x109d: V992 = S[V990]
0x109e: V993 = SUB V992 V347
0x10a4: S[V990] = V993
0x10a7: V994 = 0x2
0x10a9: V995 = 0x0
0x10ae: V996 = M[V339]
0x10b0: V997 = LT S0 V996
0x10b1: V998 = ISZERO V997
0x10b2: V999 = ISZERO V998
0x10b3: V1000 = 0x10b8
0x10b6: JUMPI 0x10b8 V999
---
Entry stack: [V11, 0x4a2, V339, V347, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S1, 0x2, 0x0, S2, S0]
Exit stack: [V11, 0x4a2, V339, V347, S0, V347, 0x2, 0x0, V339, S0]

================================

Block 0x10b7
[0x10b7:0x10b7]
---
Predecessors: [0x1037]
Successors: []
---
0x10b7 INVALID
---
0x10b7: INVALID 
---
Entry stack: [V11, 0x4a2, V339, V347, S5, V347, 0x2, 0x0, V339, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4a2, V339, V347, S5, V347, 0x2, 0x0, V339, S0]

================================

Block 0x10b8
[0x10b8:0x1115]
---
Predecessors: [0x1037]
Successors: [0x1116, 0x1117]
---
0x10b8 JUMPDEST
0x10b9 SWAP1
0x10ba PUSH1 0x20
0x10bc ADD
0x10bd SWAP1
0x10be PUSH1 0x20
0x10c0 MUL
0x10c1 ADD
0x10c2 MLOAD
0x10c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d8 AND
0x10d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ee AND
0x10ef DUP2
0x10f0 MSTORE
0x10f1 PUSH1 0x20
0x10f3 ADD
0x10f4 SWAP1
0x10f5 DUP2
0x10f6 MSTORE
0x10f7 PUSH1 0x20
0x10f9 ADD
0x10fa PUSH1 0x0
0x10fc SHA3
0x10fd PUSH1 0x0
0x10ff DUP3
0x1100 DUP3
0x1101 SLOAD
0x1102 ADD
0x1103 SWAP3
0x1104 POP
0x1105 POP
0x1106 DUP2
0x1107 SWAP1
0x1108 SSTORE
0x1109 POP
0x110a DUP3
0x110b DUP2
0x110c DUP2
0x110d MLOAD
0x110e DUP2
0x110f LT
0x1110 ISZERO
0x1111 ISZERO
0x1112 PUSH2 0x1117
0x1115 JUMPI
---
0x10b8: JUMPDEST 
0x10ba: V1001 = 0x20
0x10bc: V1002 = ADD 0x20 V339
0x10be: V1003 = 0x20
0x10c0: V1004 = MUL 0x20 S0
0x10c1: V1005 = ADD V1004 V1002
0x10c2: V1006 = M[V1005]
0x10c3: V1007 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d8: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V1006
0x10d9: V1009 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ee: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0x10f0: M[0x0] = V1010
0x10f1: V1011 = 0x20
0x10f3: V1012 = ADD 0x20 0x0
0x10f6: M[0x20] = 0x2
0x10f7: V1013 = 0x20
0x10f9: V1014 = ADD 0x20 0x20
0x10fa: V1015 = 0x0
0x10fc: V1016 = SHA3 0x0 0x40
0x10fd: V1017 = 0x0
0x1101: V1018 = S[V1016]
0x1102: V1019 = ADD V1018 V347
0x1108: S[V1016] = V1019
0x110d: V1020 = M[V339]
0x110f: V1021 = LT S5 V1020
0x1110: V1022 = ISZERO V1021
0x1111: V1023 = ISZERO V1022
0x1112: V1024 = 0x1117
0x1115: JUMPI 0x1117 V1023
---
Entry stack: [V11, 0x4a2, V339, V347, S5, V347, 0x2, 0x0, V339, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S7, S5]
Exit stack: [V11, 0x4a2, V339, V347, S5, V339, S5]

================================

Block 0x1116
[0x1116:0x1116]
---
Predecessors: [0x10b8]
Successors: []
---
0x1116 INVALID
---
0x1116: INVALID 
---
Entry stack: [V11, 0x4a2, V339, V347, S2, V339, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4a2, V339, V347, S2, V339, S0]

================================

Block 0x1117
[0x1117:0x11b3]
---
Predecessors: [0x10b8]
Successors: [0x102d]
---
0x1117 JUMPDEST
0x1118 SWAP1
0x1119 PUSH1 0x20
0x111b ADD
0x111c SWAP1
0x111d PUSH1 0x20
0x111f MUL
0x1120 ADD
0x1121 MLOAD
0x1122 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1137 AND
0x1138 PUSH1 0x1
0x113a PUSH1 0x0
0x113c SWAP1
0x113d SLOAD
0x113e SWAP1
0x113f PUSH2 0x100
0x1142 EXP
0x1143 SWAP1
0x1144 DIV
0x1145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115a AND
0x115b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1170 AND
0x1171 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1192 DUP5
0x1193 PUSH1 0x40
0x1195 MLOAD
0x1196 DUP1
0x1197 DUP3
0x1198 DUP2
0x1199 MSTORE
0x119a PUSH1 0x20
0x119c ADD
0x119d SWAP2
0x119e POP
0x119f POP
0x11a0 PUSH1 0x40
0x11a2 MLOAD
0x11a3 DUP1
0x11a4 SWAP2
0x11a5 SUB
0x11a6 SWAP1
0x11a7 LOG3
0x11a8 DUP1
0x11a9 DUP1
0x11aa PUSH1 0x1
0x11ac ADD
0x11ad SWAP2
0x11ae POP
0x11af POP
0x11b0 PUSH2 0x102d
0x11b3 JUMP
---
0x1117: JUMPDEST 
0x1119: V1025 = 0x20
0x111b: V1026 = ADD 0x20 V339
0x111d: V1027 = 0x20
0x111f: V1028 = MUL 0x20 S0
0x1120: V1029 = ADD V1028 V1026
0x1121: V1030 = M[V1029]
0x1122: V1031 = 0xffffffffffffffffffffffffffffffffffffffff
0x1137: V1032 = AND 0xffffffffffffffffffffffffffffffffffffffff V1030
0x1138: V1033 = 0x1
0x113a: V1034 = 0x0
0x113d: V1035 = S[0x1]
0x113f: V1036 = 0x100
0x1142: V1037 = EXP 0x100 0x0
0x1144: V1038 = DIV V1035 0x1
0x1145: V1039 = 0xffffffffffffffffffffffffffffffffffffffff
0x115a: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1038
0x115b: V1041 = 0xffffffffffffffffffffffffffffffffffffffff
0x1170: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff V1040
0x1171: V1043 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1193: V1044 = 0x40
0x1195: V1045 = M[0x40]
0x1199: M[V1045] = V347
0x119a: V1046 = 0x20
0x119c: V1047 = ADD 0x20 V1045
0x11a0: V1048 = 0x40
0x11a2: V1049 = M[0x40]
0x11a5: V1050 = SUB V1047 V1049
0x11a7: LOG V1049 V1050 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1042 V1032
0x11aa: V1051 = 0x1
0x11ac: V1052 = ADD 0x1 S2
0x11b0: V1053 = 0x102d
0x11b3: JUMP 0x102d
---
Entry stack: [V11, 0x4a2, V339, V347, S2, V339, S0]
Stack pops: 4
Stack additions: [S3, V1052]
Exit stack: [V11, 0x4a2, V339, V347, V1052]

================================

Block 0x11b4
[0x11b4:0x11b8]
---
Predecessors: [0x102d]
Successors: [0x4a2]
---
0x11b4 JUMPDEST
0x11b5 POP
0x11b6 POP
0x11b7 POP
0x11b8 JUMP
---
0x11b4: JUMPDEST 
0x11b8: JUMP 0x4a2
---
Entry stack: [V11, 0x4a2, V339, V347, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b9
[0x11b9:0x11cb]
---
Predecessors: [0x4af]
Successors: [0x4b7]
---
0x11b9 JUMPDEST
0x11ba PUSH1 0x5
0x11bc PUSH1 0x0
0x11be SWAP1
0x11bf SLOAD
0x11c0 SWAP1
0x11c1 PUSH2 0x100
0x11c4 EXP
0x11c5 SWAP1
0x11c6 DIV
0x11c7 PUSH1 0xff
0x11c9 AND
0x11ca DUP2
0x11cb JUMP
---
0x11b9: JUMPDEST 
0x11ba: V1054 = 0x5
0x11bc: V1055 = 0x0
0x11bf: V1056 = S[0x5]
0x11c1: V1057 = 0x100
0x11c4: V1058 = EXP 0x100 0x0
0x11c6: V1059 = DIV V1056 0x1
0x11c7: V1060 = 0xff
0x11c9: V1061 = AND 0xff V1059
0x11cb: JUMP 0x4b7
---
Entry stack: [V11, 0x4b7]
Stack pops: 1
Stack additions: [S0, V1061]
Exit stack: [V11, 0x4b7, V1061]

================================

Block 0x11cc
[0x11cc:0x1252]
---
Predecessors: [0x4dc]
Successors: [0x527]
---
0x11cc JUMPDEST
0x11cd PUSH1 0x0
0x11cf PUSH1 0x3
0x11d1 PUSH1 0x0
0x11d3 DUP5
0x11d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e9 AND
0x11ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ff AND
0x1200 DUP2
0x1201 MSTORE
0x1202 PUSH1 0x20
0x1204 ADD
0x1205 SWAP1
0x1206 DUP2
0x1207 MSTORE
0x1208 PUSH1 0x20
0x120a ADD
0x120b PUSH1 0x0
0x120d SHA3
0x120e PUSH1 0x0
0x1210 DUP4
0x1211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1226 AND
0x1227 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123c AND
0x123d DUP2
0x123e MSTORE
0x123f PUSH1 0x20
0x1241 ADD
0x1242 SWAP1
0x1243 DUP2
0x1244 MSTORE
0x1245 PUSH1 0x20
0x1247 ADD
0x1248 PUSH1 0x0
0x124a SHA3
0x124b SLOAD
0x124c SWAP1
0x124d POP
0x124e SWAP3
0x124f SWAP2
0x1250 POP
0x1251 POP
0x1252 JUMP
---
0x11cc: JUMPDEST 
0x11cd: V1062 = 0x0
0x11cf: V1063 = 0x3
0x11d1: V1064 = 0x0
0x11d4: V1065 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e9: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x11ea: V1067 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ff: V1068 = AND 0xffffffffffffffffffffffffffffffffffffffff V1066
0x1201: M[0x0] = V1068
0x1202: V1069 = 0x20
0x1204: V1070 = ADD 0x20 0x0
0x1207: M[0x20] = 0x3
0x1208: V1071 = 0x20
0x120a: V1072 = ADD 0x20 0x20
0x120b: V1073 = 0x0
0x120d: V1074 = SHA3 0x0 0x40
0x120e: V1075 = 0x0
0x1211: V1076 = 0xffffffffffffffffffffffffffffffffffffffff
0x1226: V1077 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x1227: V1078 = 0xffffffffffffffffffffffffffffffffffffffff
0x123c: V1079 = AND 0xffffffffffffffffffffffffffffffffffffffff V1077
0x123e: M[0x0] = V1079
0x123f: V1080 = 0x20
0x1241: V1081 = ADD 0x20 0x0
0x1244: M[0x20] = V1074
0x1245: V1082 = 0x20
0x1247: V1083 = ADD 0x20 0x20
0x1248: V1084 = 0x0
0x124a: V1085 = SHA3 0x0 0x40
0x124b: V1086 = S[V1085]
0x1252: JUMP 0x527
---
Entry stack: [V11, 0x527, V376, V381]
Stack pops: 3
Stack additions: [V1086]
Exit stack: [V11, V1086]

================================

Block 0x1253
[0x1253:0x12aa]
---
Predecessors: [0x548]
Successors: [0x12ab, 0x12af]
---
0x1253 JUMPDEST
0x1254 PUSH1 0x1
0x1256 PUSH1 0x0
0x1258 SWAP1
0x1259 SLOAD
0x125a SWAP1
0x125b PUSH2 0x100
0x125e EXP
0x125f SWAP1
0x1260 DIV
0x1261 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1276 AND
0x1277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128c AND
0x128d CALLER
0x128e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a3 AND
0x12a4 EQ
0x12a5 ISZERO
0x12a6 ISZERO
0x12a7 PUSH2 0x12af
0x12aa JUMPI
---
0x1253: JUMPDEST 
0x1254: V1087 = 0x1
0x1256: V1088 = 0x0
0x1259: V1089 = S[0x1]
0x125b: V1090 = 0x100
0x125e: V1091 = EXP 0x100 0x0
0x1260: V1092 = DIV V1089 0x1
0x1261: V1093 = 0xffffffffffffffffffffffffffffffffffffffff
0x1276: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffff V1092
0x1277: V1095 = 0xffffffffffffffffffffffffffffffffffffffff
0x128c: V1096 = AND 0xffffffffffffffffffffffffffffffffffffffff V1094
0x128d: V1097 = CALLER
0x128e: V1098 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a3: V1099 = AND 0xffffffffffffffffffffffffffffffffffffffff V1097
0x12a4: V1100 = EQ V1099 V1096
0x12a5: V1101 = ISZERO V1100
0x12a6: V1102 = ISZERO V1101
0x12a7: V1103 = 0x12af
0x12aa: JUMPI 0x12af V1102
---
Entry stack: [V11, 0x574, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x574, V400]

================================

Block 0x12ab
[0x12ab:0x12ae]
---
Predecessors: [0x1253]
Successors: []
---
0x12ab PUSH1 0x0
0x12ad DUP1
0x12ae REVERT
---
0x12ab: V1104 = 0x0
0x12ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x574, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x574, V400]

================================

Block 0x12af
[0x12af:0x12f2]
---
Predecessors: [0x1253]
Successors: [0x574]
---
0x12af JUMPDEST
0x12b0 DUP1
0x12b1 PUSH1 0x1
0x12b3 PUSH1 0x0
0x12b5 PUSH2 0x100
0x12b8 EXP
0x12b9 DUP2
0x12ba SLOAD
0x12bb DUP2
0x12bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d1 MUL
0x12d2 NOT
0x12d3 AND
0x12d4 SWAP1
0x12d5 DUP4
0x12d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12eb AND
0x12ec MUL
0x12ed OR
0x12ee SWAP1
0x12ef SSTORE
0x12f0 POP
0x12f1 POP
0x12f2 JUMP
---
0x12af: JUMPDEST 
0x12b1: V1105 = 0x1
0x12b3: V1106 = 0x0
0x12b5: V1107 = 0x100
0x12b8: V1108 = EXP 0x100 0x0
0x12ba: V1109 = S[0x1]
0x12bc: V1110 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d1: V1111 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x12d2: V1112 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x12d3: V1113 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1109
0x12d6: V1114 = 0xffffffffffffffffffffffffffffffffffffffff
0x12eb: V1115 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x12ec: V1116 = MUL V1115 0x1
0x12ed: V1117 = OR V1116 V1113
0x12ef: S[0x1] = V1117
0x12f2: JUMP 0x574
---
Entry stack: [V11, 0x574, V400]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f3
[0x12f3:0x1306]
---
Predecessors: [0x576, 0xcd1]
Successors: [0x57e, 0xcd9]
---
0x12f3 JUMPDEST
0x12f4 PUSH1 0x20
0x12f6 PUSH1 0x40
0x12f8 MLOAD
0x12f9 SWAP1
0x12fa DUP2
0x12fb ADD
0x12fc PUSH1 0x40
0x12fe MSTORE
0x12ff DUP1
0x1300 PUSH1 0x0
0x1302 DUP2
0x1303 MSTORE
0x1304 POP
0x1305 SWAP1
0x1306 JUMP
---
0x12f3: JUMPDEST 
0x12f4: V1118 = 0x20
0x12f6: V1119 = 0x40
0x12f8: V1120 = M[0x40]
0x12fb: V1121 = ADD V1120 0x20
0x12fc: V1122 = 0x40
0x12fe: M[0x40] = V1121
0x1300: V1123 = 0x0
0x1303: M[V1120] = 0x0
0x1306: JUMP {0x57e, 0xcd9}
---
Entry stack: [V11, {0xe8, 0x33f}, {0x57e, 0xcd9}]
Stack pops: 1
Stack additions: [V1120]
Exit stack: [V11, {0xe8, 0x33f}, V1120]

================================

Block 0x1307
[0x1307:0x131e]
---
Predecessors: []
Successors: [0x131f]
Has unresolved jump.
---
0x1307 STOP
0x1308 LOG1
0x1309 PUSH6 0x627a7a723058
0x1310 SHA3
0x1311 PUSH11 0x1cb25e8569119dd49d714c
0x131d ADD
0x131e JUMPI
---
0x1307: STOP 
0x1308: LOG S0 S1 S2
0x1309: V1124 = 0x627a7a723058
0x1310: V1125 = SHA3 0x627a7a723058 S3
0x1311: V1126 = 0x1cb25e8569119dd49d714c
0x131d: V1127 = ADD 0x1cb25e8569119dd49d714c V1125
0x131e: JUMPI V1127 S4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x131f
[0x131f:0x1332]
---
Predecessors: [0x1307]
Successors: []
---
0x131f SIGNEXTEND
0x1320 CALLCODE
0x1321 SSTORE
0x1322 MISSING 0xc9
0x1323 DUP11
0x1324 MISSING 0xc1
0x1325 DIFFICULTY
0x1326 MISSING 0xbe
0x1327 ADD
0x1328 MISSING 0xdd
0x1329 LOG4
0x132a CALLCODE
0x132b PUSH6 0x51c766d34800
0x1332 MISSING 0x29
---
0x131f: V1128 = SIGNEXTEND S0 S1
0x1320: V1129 = CALLCODE V1128 S2 S3 S4 S5 S6 S7
0x1321: S[V1129] = S8
0x1322: MISSING 0xc9
0x1324: MISSING 0xc1
0x1325: V1130 = DIFFICULTY
0x1326: MISSING 0xbe
0x1327: V1131 = ADD S0 S1
0x1328: MISSING 0xdd
0x1329: LOG S0 S1 S2 S3 S4 S5
0x132a: V1132 = CALLCODE S6 S7 S8 S9 S10 S11 S12
0x132b: V1133 = 0x51c766d34800
0x1332: MISSING 0x29
---
Entry stack: []
Stack pops: 93
Stack additions: [0x51c766d34800, V1132]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xd5
Exit block: 0x3ac
Body: 0xd5, 0xdc, 0xe0, 0xe8, 0x10d, 0x116, 0x128, 0x13c, 0x155, 0x33f, 0x364, 0x36d, 0x37f, 0x393, 0x3ac, 0x576, 0x57e

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x163
Exit block: 0x1a3
Body: 0x163, 0x16a, 0x16e, 0x1a3, 0x5b9, 0x5c6, 0x648, 0x64e, 0x656, 0x741

Function 2:
Public function signature: 0x156c2e82
Entry block: 0x1bd
Exit block: 0x1f4
Body: 0x1bd, 0x1c4, 0x1c8, 0x1f4, 0x747, 0x7a4, 0x7a8, 0x84a, 0x84e, 0x85b, 0x85f, 0x934, 0x938, 0x945, 0x949

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x20e
Exit block: 0x221
Body: 0x20e, 0x215, 0x219, 0x221, 0x95c

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x237
Exit block: 0x296
Body: 0x237, 0x23e, 0x242, 0x296, 0x962, 0x978, 0x979, 0x9c3, 0xa44, 0xa4b, 0xa50, 0xa57, 0xadb, 0xae1, 0xc72, 0xc77

Function 5:
Public function signature: 0x313ce567
Entry block: 0x2b0
Exit block: 0x2c3
Body: 0x2b0, 0x2b7, 0x2bb, 0x2c3, 0xc7f

Function 6:
Public function signature: 0x70a08231
Entry block: 0x2df
Exit block: 0x316
Body: 0x2df, 0x2e6, 0x2ea, 0x316, 0xc88

Function 7:
Public function signature: 0x95d89b41
Entry block: 0x32c
Exit block: 0x3ac
Body: 0xe8, 0x10d, 0x116, 0x128, 0x13c, 0x155, 0x32c, 0x333, 0x337, 0x33f, 0x364, 0x36d, 0x37f, 0x393, 0x3ac, 0xcd1, 0xcd9

Function 8:
Public function signature: 0x9b1cbccc
Entry block: 0x3ba
Exit block: 0x3cd
Body: 0x3ba, 0x3c1, 0x3c5, 0x3cd, 0xd14, 0xd6e, 0xd72

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x3e7
Exit block: 0x427
Body: 0x3e7, 0x3ee, 0x3f2, 0x427, 0xdc0, 0xdd6, 0xdd7, 0xe21, 0xe26, 0xe2d, 0xeb1, 0xeb7, 0xfbe, 0xfc3

Function 10:
Public function signature: 0xa9c7648f
Entry block: 0x441
Exit block: 0x1116
Body: 0x441, 0x448, 0x44c, 0x4a2, 0xfca, 0x1024, 0x1028, 0x102d, 0x1037, 0x10b7, 0x10b8, 0x1116, 0x1117, 0x11b4

Function 11:
Public function signature: 0xc108d542
Entry block: 0x4a4
Exit block: 0x4b7
Body: 0x4a4, 0x4ab, 0x4af, 0x4b7, 0x11b9

Function 12:
Public function signature: 0xdd62ed3e
Entry block: 0x4d1
Exit block: 0x527
Body: 0x4d1, 0x4d8, 0x4dc, 0x527, 0x11cc

Function 13:
Public function signature: 0xf2fde38b
Entry block: 0x53d
Exit block: 0x574
Body: 0x53d, 0x544, 0x548, 0x574, 0x1253, 0x12ab, 0x12af

Function 14:
Public fallback function
Entry block: 0xd0
Exit block: 0xd0
Body: 0xd0

