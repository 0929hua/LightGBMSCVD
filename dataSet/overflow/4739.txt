Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x93]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1441a5a9
0x3c EQ
0x3d PUSH2 0x93
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1441a5a9
0x3c: V13 = EQ 0x1441a5a9 V11
0x3d: V14 = 0x93
0x40: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xe8]
---
0x41 DUP1
0x42 PUSH4 0x68447c93
0x47 EQ
0x48 PUSH2 0xe8
0x4b JUMPI
---
0x42: V15 = 0x68447c93
0x47: V16 = EQ 0x68447c93 V11
0x48: V17 = 0xe8
0x4b: JUMPI 0xe8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x13d]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x13d
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x13d
0x56: JUMPI 0x13d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x192]
---
0x57 DUP1
0x58 PUSH4 0x969295ae
0x5d EQ
0x5e PUSH2 0x192
0x61 JUMPI
---
0x58: V21 = 0x969295ae
0x5d: V22 = EQ 0x969295ae V11
0x5e: V23 = 0x192
0x61: JUMPI 0x192 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1cb]
---
0x62 DUP1
0x63 PUSH4 0xbc8aa899
0x68 EQ
0x69 PUSH2 0x1cb
0x6c JUMPI
---
0x63: V24 = 0xbc8aa899
0x68: V25 = EQ 0xbc8aa899 V11
0x69: V26 = 0x1cb
0x6c: JUMPI 0x1cb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x220]
---
0x6d DUP1
0x6e PUSH4 0xbd97ce3a
0x73 EQ
0x74 PUSH2 0x220
0x77 JUMPI
---
0x6e: V27 = 0xbd97ce3a
0x73: V28 = EQ 0xbd97ce3a V11
0x74: V29 = 0x220
0x77: JUMPI 0x220 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x259]
---
0x78 DUP1
0x79 PUSH4 0xc0ee0b8a
0x7e EQ
0x7f PUSH2 0x259
0x82 JUMPI
---
0x79: V30 = 0xc0ee0b8a
0x7e: V31 = EQ 0xc0ee0b8a V11
0x7f: V32 = 0x259
0x82: JUMPI 0x259 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2de]
---
0x83 DUP1
0x84 PUSH4 0xf2fde38b
0x89 EQ
0x8a PUSH2 0x2de
0x8d JUMPI
---
0x84: V33 = 0xf2fde38b
0x89: V34 = EQ 0xf2fde38b V11
0x8a: V35 = 0x2de
0x8d: JUMPI 0x2de V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x92]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x99]
---
Predecessors: [0xd]
Successors: [0x9a, 0x9e]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x95: V38 = ISZERO V37
0x96: V39 = 0x9e
0x99: JUMPI 0x9e V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x93]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V40 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xa5]
---
Predecessors: [0x93]
Successors: [0x317]
---
0x9e JUMPDEST
0x9f PUSH2 0xa6
0xa2 PUSH2 0x317
0xa5 JUMP
---
0x9e: JUMPDEST 
0x9f: V41 = 0xa6
0xa2: V42 = 0x317
0xa5: JUMP 0x317
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa6]
Exit stack: [V11, 0xa6]

================================

Block 0xa6
[0xa6:0xe7]
---
Predecessors: [0x317]
Successors: []
---
0xa6 JUMPDEST
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab DUP3
0xac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1 AND
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 DUP2
0xd9 MSTORE
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP2
0xde POP
0xdf POP
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 DUP1
0xe4 SWAP2
0xe5 SUB
0xe6 SWAP1
0xe7 RETURN
---
0xa6: JUMPDEST 
0xa7: V43 = 0x40
0xa9: V44 = M[0x40]
0xac: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0xc2: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xd9: M[V44] = V48
0xda: V49 = 0x20
0xdc: V50 = ADD 0x20 V44
0xe0: V51 = 0x40
0xe2: V52 = M[0x40]
0xe5: V53 = SUB V50 V52
0xe7: RETURN V52 V53
---
Entry stack: [V11, 0xa6, V183]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa6]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x41]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V54 = CALLVALUE
0xea: V55 = ISZERO V54
0xeb: V56 = 0xf3
0xee: JUMPI 0xf3 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V57 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xe8]
Successors: [0x33c]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfb
0xf7 PUSH2 0x33c
0xfa JUMP
---
0xf3: JUMPDEST 
0xf4: V58 = 0xfb
0xf7: V59 = 0x33c
0xfa: JUMP 0x33c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V11, 0xfb]

================================

Block 0xfb
[0xfb:0x13c]
---
Predecessors: [0x33c]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 DUP3
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP2
0x133 POP
0x134 POP
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0xfb: JUMPDEST 
0xfc: V60 = 0x40
0xfe: V61 = M[0x40]
0x101: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x117: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x12e: M[V61] = V65
0x12f: V66 = 0x20
0x131: V67 = ADD 0x20 V61
0x135: V68 = 0x40
0x137: V69 = M[0x40]
0x13a: V70 = SUB V67 V69
0x13c: RETURN V69 V70
---
Entry stack: [V11, 0xfb, V191]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfb]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x4c]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V71 = CALLVALUE
0x13f: V72 = ISZERO V71
0x140: V73 = 0x148
0x143: JUMPI 0x148 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V74 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x13d]
Successors: [0x362]
---
0x148 JUMPDEST
0x149 PUSH2 0x150
0x14c PUSH2 0x362
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V75 = 0x150
0x14c: V76 = 0x362
0x14f: JUMP 0x362
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V11, 0x150]

================================

Block 0x150
[0x150:0x191]
---
Predecessors: [0x362]
Successors: []
---
0x150 JUMPDEST
0x151 PUSH1 0x40
0x153 MLOAD
0x154 DUP1
0x155 DUP3
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP2
0x188 POP
0x189 POP
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e SWAP2
0x18f SUB
0x190 SWAP1
0x191 RETURN
---
0x150: JUMPDEST 
0x151: V77 = 0x40
0x153: V78 = M[0x40]
0x156: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x16c: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x181: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x183: M[V78] = V82
0x184: V83 = 0x20
0x186: V84 = ADD 0x20 V78
0x18a: V85 = 0x40
0x18c: V86 = M[0x40]
0x18f: V87 = SUB V84 V86
0x191: RETURN V86 V87
---
Entry stack: [V11, 0x150, V199]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x150]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x57]
Successors: [0x199, 0x19d]
---
0x192 JUMPDEST
0x193 CALLVALUE
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x192: JUMPDEST 
0x193: V88 = CALLVALUE
0x194: V89 = ISZERO V88
0x195: V90 = 0x19d
0x198: JUMPI 0x19d V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x192]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V91 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19d
[0x19d:0x1c8]
---
Predecessors: [0x192]
Successors: [0x388]
---
0x19d JUMPDEST
0x19e PUSH2 0x1c9
0x1a1 PUSH1 0x4
0x1a3 DUP1
0x1a4 DUP1
0x1a5 CALLDATALOAD
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc SWAP1
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP1
0x1c1 SWAP2
0x1c2 SWAP1
0x1c3 POP
0x1c4 POP
0x1c5 PUSH2 0x388
0x1c8 JUMP
---
0x19d: JUMPDEST 
0x19e: V92 = 0x1c9
0x1a1: V93 = 0x4
0x1a5: V94 = CALLDATALOAD 0x4
0x1a6: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1bd: V97 = 0x20
0x1bf: V98 = ADD 0x20 0x4
0x1c5: V99 = 0x388
0x1c8: JUMP 0x388
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c9, V96]
Exit stack: [V11, 0x1c9, V96]

================================

Block 0x1c9
[0x1c9:0x1ca]
---
Predecessors: [0x3e4]
Successors: []
---
0x1c9 JUMPDEST
0x1ca STOP
---
0x1c9: JUMPDEST 
0x1ca: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x62]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V100 = CALLVALUE
0x1cd: V101 = ISZERO V100
0x1ce: V102 = 0x1d6
0x1d1: JUMPI 0x1d6 V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V103 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x427]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x1de
0x1da PUSH2 0x427
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V104 = 0x1de
0x1da: V105 = 0x427
0x1dd: JUMP 0x427
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V11, 0x1de]

================================

Block 0x1de
[0x1de:0x21f]
---
Predecessors: [0x427]
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 DUP3
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20f AND
0x210 DUP2
0x211 MSTORE
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP2
0x216 POP
0x217 POP
0x218 PUSH1 0x40
0x21a MLOAD
0x21b DUP1
0x21c SWAP2
0x21d SUB
0x21e SWAP1
0x21f RETURN
---
0x1de: JUMPDEST 
0x1df: V106 = 0x40
0x1e1: V107 = M[0x40]
0x1e4: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x1fa: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x20f: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x211: M[V107] = V111
0x212: V112 = 0x20
0x214: V113 = ADD 0x20 V107
0x218: V114 = 0x40
0x21a: V115 = M[0x40]
0x21d: V116 = SUB V113 V115
0x21f: RETURN V115 V116
---
Entry stack: [V11, 0x1de, V237]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1de]

================================

Block 0x220
[0x220:0x226]
---
Predecessors: [0x6d]
Successors: [0x227, 0x22b]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x220: JUMPDEST 
0x221: V117 = CALLVALUE
0x222: V118 = ISZERO V117
0x223: V119 = 0x22b
0x226: JUMPI 0x22b V118
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x220]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V120 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22b
[0x22b:0x256]
---
Predecessors: [0x220]
Successors: [0x44d]
---
0x22b JUMPDEST
0x22c PUSH2 0x257
0x22f PUSH1 0x4
0x231 DUP1
0x232 DUP1
0x233 CALLDATALOAD
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a SWAP1
0x24b PUSH1 0x20
0x24d ADD
0x24e SWAP1
0x24f SWAP2
0x250 SWAP1
0x251 POP
0x252 POP
0x253 PUSH2 0x44d
0x256 JUMP
---
0x22b: JUMPDEST 
0x22c: V121 = 0x257
0x22f: V122 = 0x4
0x233: V123 = CALLDATALOAD 0x4
0x234: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x24b: V126 = 0x20
0x24d: V127 = ADD 0x20 0x4
0x253: V128 = 0x44d
0x256: JUMP 0x44d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x257, V125]
Exit stack: [V11, 0x257, V125]

================================

Block 0x257
[0x257:0x258]
---
Predecessors: [0x4a9]
Successors: []
---
0x257 JUMPDEST
0x258 STOP
---
0x257: JUMPDEST 
0x258: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0x78]
Successors: [0x260, 0x264]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V129 = CALLVALUE
0x25b: V130 = ISZERO V129
0x25c: V131 = 0x264
0x25f: JUMPI 0x264 V130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x259]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V132 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x264
[0x264:0x2db]
---
Predecessors: [0x259]
Successors: [0x4ed]
---
0x264 JUMPDEST
0x265 PUSH2 0x2dc
0x268 PUSH1 0x4
0x26a DUP1
0x26b DUP1
0x26c CALLDATALOAD
0x26d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x282 AND
0x283 SWAP1
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP1
0x288 SWAP2
0x289 SWAP1
0x28a DUP1
0x28b CALLDATALOAD
0x28c SWAP1
0x28d PUSH1 0x20
0x28f ADD
0x290 SWAP1
0x291 SWAP2
0x292 SWAP1
0x293 DUP1
0x294 CALLDATALOAD
0x295 SWAP1
0x296 PUSH1 0x20
0x298 ADD
0x299 SWAP1
0x29a DUP3
0x29b ADD
0x29c DUP1
0x29d CALLDATALOAD
0x29e SWAP1
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 SWAP1
0x2a3 DUP1
0x2a4 DUP1
0x2a5 PUSH1 0x1f
0x2a7 ADD
0x2a8 PUSH1 0x20
0x2aa DUP1
0x2ab SWAP2
0x2ac DIV
0x2ad MUL
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 ADD
0x2b7 PUSH1 0x40
0x2b9 MSTORE
0x2ba DUP1
0x2bb SWAP4
0x2bc SWAP3
0x2bd SWAP2
0x2be SWAP1
0x2bf DUP2
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x20
0x2c4 ADD
0x2c5 DUP4
0x2c6 DUP4
0x2c7 DUP1
0x2c8 DUP3
0x2c9 DUP5
0x2ca CALLDATACOPY
0x2cb DUP3
0x2cc ADD
0x2cd SWAP2
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 SWAP2
0x2d5 SWAP1
0x2d6 POP
0x2d7 POP
0x2d8 PUSH2 0x4ed
0x2db JUMP
---
0x264: JUMPDEST 
0x265: V133 = 0x2dc
0x268: V134 = 0x4
0x26c: V135 = CALLDATALOAD 0x4
0x26d: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x282: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x284: V138 = 0x20
0x286: V139 = ADD 0x20 0x4
0x28b: V140 = CALLDATALOAD 0x24
0x28d: V141 = 0x20
0x28f: V142 = ADD 0x20 0x24
0x294: V143 = CALLDATALOAD 0x44
0x296: V144 = 0x20
0x298: V145 = ADD 0x20 0x44
0x29b: V146 = ADD 0x4 V143
0x29d: V147 = CALLDATALOAD V146
0x29f: V148 = 0x20
0x2a1: V149 = ADD 0x20 V146
0x2a5: V150 = 0x1f
0x2a7: V151 = ADD 0x1f V147
0x2a8: V152 = 0x20
0x2ac: V153 = DIV V151 0x20
0x2ad: V154 = MUL V153 0x20
0x2ae: V155 = 0x20
0x2b0: V156 = ADD 0x20 V154
0x2b1: V157 = 0x40
0x2b3: V158 = M[0x40]
0x2b6: V159 = ADD V158 V156
0x2b7: V160 = 0x40
0x2b9: M[0x40] = V159
0x2c1: M[V158] = V147
0x2c2: V161 = 0x20
0x2c4: V162 = ADD 0x20 V158
0x2ca: CALLDATACOPY V162 V149 V147
0x2cc: V163 = ADD V162 V147
0x2d8: V164 = 0x4ed
0x2db: JUMP 0x4ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2dc, V137, V140, V158]
Exit stack: [V11, 0x2dc, V137, V140, V158]

================================

Block 0x2dc
[0x2dc:0x2dd]
---
Predecessors: [0x71f]
Successors: []
---
0x2dc JUMPDEST
0x2dd STOP
---
0x2dc: JUMPDEST 
0x2dd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2de
[0x2de:0x2e4]
---
Predecessors: [0x83]
Successors: [0x2e5, 0x2e9]
---
0x2de JUMPDEST
0x2df CALLVALUE
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2de: JUMPDEST 
0x2df: V165 = CALLVALUE
0x2e0: V166 = ISZERO V165
0x2e1: V167 = 0x2e9
0x2e4: JUMPI 0x2e9 V166
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2de]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V168 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e9
[0x2e9:0x314]
---
Predecessors: [0x2de]
Successors: [0x72f]
---
0x2e9 JUMPDEST
0x2ea PUSH2 0x315
0x2ed PUSH1 0x4
0x2ef DUP1
0x2f0 DUP1
0x2f1 CALLDATALOAD
0x2f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x307 AND
0x308 SWAP1
0x309 PUSH1 0x20
0x30b ADD
0x30c SWAP1
0x30d SWAP2
0x30e SWAP1
0x30f POP
0x310 POP
0x311 PUSH2 0x72f
0x314 JUMP
---
0x2e9: JUMPDEST 
0x2ea: V169 = 0x315
0x2ed: V170 = 0x4
0x2f1: V171 = CALLDATALOAD 0x4
0x2f2: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x307: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x309: V174 = 0x20
0x30b: V175 = ADD 0x20 0x4
0x311: V176 = 0x72f
0x314: JUMP 0x72f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x315, V173]
Exit stack: [V11, 0x315, V173]

================================

Block 0x315
[0x315:0x316]
---
Predecessors: [0x803]
Successors: []
---
0x315 JUMPDEST
0x316 STOP
---
0x315: JUMPDEST 
0x316: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x317
[0x317:0x33b]
---
Predecessors: [0x9e]
Successors: [0xa6]
---
0x317 JUMPDEST
0x318 PUSH1 0x0
0x31a DUP1
0x31b SWAP1
0x31c SLOAD
0x31d SWAP1
0x31e PUSH2 0x100
0x321 EXP
0x322 SWAP1
0x323 DIV
0x324 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x339 AND
0x33a DUP2
0x33b JUMP
---
0x317: JUMPDEST 
0x318: V177 = 0x0
0x31c: V178 = S[0x0]
0x31e: V179 = 0x100
0x321: V180 = EXP 0x100 0x0
0x323: V181 = DIV V178 0x1
0x324: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x339: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x33b: JUMP 0xa6
---
Entry stack: [V11, 0xa6]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V11, 0xa6, V183]

================================

Block 0x33c
[0x33c:0x361]
---
Predecessors: [0xf3]
Successors: [0xfb]
---
0x33c JUMPDEST
0x33d PUSH1 0x1
0x33f PUSH1 0x0
0x341 SWAP1
0x342 SLOAD
0x343 SWAP1
0x344 PUSH2 0x100
0x347 EXP
0x348 SWAP1
0x349 DIV
0x34a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35f AND
0x360 DUP2
0x361 JUMP
---
0x33c: JUMPDEST 
0x33d: V184 = 0x1
0x33f: V185 = 0x0
0x342: V186 = S[0x1]
0x344: V187 = 0x100
0x347: V188 = EXP 0x100 0x0
0x349: V189 = DIV V186 0x1
0x34a: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x361: JUMP 0xfb
---
Entry stack: [V11, 0xfb]
Stack pops: 1
Stack additions: [S0, V191]
Exit stack: [V11, 0xfb, V191]

================================

Block 0x362
[0x362:0x387]
---
Predecessors: [0x148]
Successors: [0x150]
---
0x362 JUMPDEST
0x363 PUSH1 0x2
0x365 PUSH1 0x0
0x367 SWAP1
0x368 SLOAD
0x369 SWAP1
0x36a PUSH2 0x100
0x36d EXP
0x36e SWAP1
0x36f DIV
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 AND
0x386 DUP2
0x387 JUMP
---
0x362: JUMPDEST 
0x363: V192 = 0x2
0x365: V193 = 0x0
0x368: V194 = S[0x2]
0x36a: V195 = 0x100
0x36d: V196 = EXP 0x100 0x0
0x36f: V197 = DIV V194 0x1
0x370: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x387: JUMP 0x150
---
Entry stack: [V11, 0x150]
Stack pops: 1
Stack additions: [S0, V199]
Exit stack: [V11, 0x150, V199]

================================

Block 0x388
[0x388:0x3df]
---
Predecessors: [0x19d]
Successors: [0x3e0, 0x3e4]
---
0x388 JUMPDEST
0x389 PUSH1 0x2
0x38b PUSH1 0x0
0x38d SWAP1
0x38e SLOAD
0x38f SWAP1
0x390 PUSH2 0x100
0x393 EXP
0x394 SWAP1
0x395 DIV
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 CALLER
0x3c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d8 AND
0x3d9 EQ
0x3da ISZERO
0x3db ISZERO
0x3dc PUSH2 0x3e4
0x3df JUMPI
---
0x388: JUMPDEST 
0x389: V200 = 0x2
0x38b: V201 = 0x0
0x38e: V202 = S[0x2]
0x390: V203 = 0x100
0x393: V204 = EXP 0x100 0x0
0x395: V205 = DIV V202 0x1
0x396: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x3ac: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3c2: V210 = CALLER
0x3c3: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x3d9: V213 = EQ V212 V209
0x3da: V214 = ISZERO V213
0x3db: V215 = ISZERO V214
0x3dc: V216 = 0x3e4
0x3df: JUMPI 0x3e4 V215
---
Entry stack: [V11, 0x1c9, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V96]

================================

Block 0x3e0
[0x3e0:0x3e3]
---
Predecessors: [0x388]
Successors: []
---
0x3e0 PUSH1 0x0
0x3e2 DUP1
0x3e3 REVERT
---
0x3e0: V217 = 0x0
0x3e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V96]

================================

Block 0x3e4
[0x3e4:0x426]
---
Predecessors: [0x388]
Successors: [0x1c9]
---
0x3e4 JUMPDEST
0x3e5 DUP1
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 PUSH2 0x100
0x3ec EXP
0x3ed DUP2
0x3ee SLOAD
0x3ef DUP2
0x3f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x405 MUL
0x406 NOT
0x407 AND
0x408 SWAP1
0x409 DUP4
0x40a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41f AND
0x420 MUL
0x421 OR
0x422 SWAP1
0x423 SSTORE
0x424 POP
0x425 POP
0x426 JUMP
---
0x3e4: JUMPDEST 
0x3e6: V218 = 0x0
0x3e9: V219 = 0x100
0x3ec: V220 = EXP 0x100 0x0
0x3ee: V221 = S[0x0]
0x3f0: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x405: V223 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x406: V224 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x407: V225 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V221
0x40a: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x420: V228 = MUL V227 0x1
0x421: V229 = OR V228 V225
0x423: S[0x0] = V229
0x426: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9, V96]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x427
[0x427:0x44c]
---
Predecessors: [0x1d6]
Successors: [0x1de]
---
0x427 JUMPDEST
0x428 PUSH1 0x3
0x42a PUSH1 0x0
0x42c SWAP1
0x42d SLOAD
0x42e SWAP1
0x42f PUSH2 0x100
0x432 EXP
0x433 SWAP1
0x434 DIV
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b DUP2
0x44c JUMP
---
0x427: JUMPDEST 
0x428: V230 = 0x3
0x42a: V231 = 0x0
0x42d: V232 = S[0x3]
0x42f: V233 = 0x100
0x432: V234 = EXP 0x100 0x0
0x434: V235 = DIV V232 0x1
0x435: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x44c: JUMP 0x1de
---
Entry stack: [V11, 0x1de]
Stack pops: 1
Stack additions: [S0, V237]
Exit stack: [V11, 0x1de, V237]

================================

Block 0x44d
[0x44d:0x4a4]
---
Predecessors: [0x22b]
Successors: [0x4a5, 0x4a9]
---
0x44d JUMPDEST
0x44e PUSH1 0x2
0x450 PUSH1 0x0
0x452 SWAP1
0x453 SLOAD
0x454 SWAP1
0x455 PUSH2 0x100
0x458 EXP
0x459 SWAP1
0x45a DIV
0x45b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x470 AND
0x471 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x486 AND
0x487 CALLER
0x488 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49d AND
0x49e EQ
0x49f ISZERO
0x4a0 ISZERO
0x4a1 PUSH2 0x4a9
0x4a4 JUMPI
---
0x44d: JUMPDEST 
0x44e: V238 = 0x2
0x450: V239 = 0x0
0x453: V240 = S[0x2]
0x455: V241 = 0x100
0x458: V242 = EXP 0x100 0x0
0x45a: V243 = DIV V240 0x1
0x45b: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x470: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x471: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x486: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x487: V248 = CALLER
0x488: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x49d: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x49e: V251 = EQ V250 V247
0x49f: V252 = ISZERO V251
0x4a0: V253 = ISZERO V252
0x4a1: V254 = 0x4a9
0x4a4: JUMPI 0x4a9 V253
---
Entry stack: [V11, 0x257, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x257, V125]

================================

Block 0x4a5
[0x4a5:0x4a8]
---
Predecessors: [0x44d]
Successors: []
---
0x4a5 PUSH1 0x0
0x4a7 DUP1
0x4a8 REVERT
---
0x4a5: V255 = 0x0
0x4a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x257, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x257, V125]

================================

Block 0x4a9
[0x4a9:0x4ec]
---
Predecessors: [0x44d]
Successors: [0x257]
---
0x4a9 JUMPDEST
0x4aa DUP1
0x4ab PUSH1 0x1
0x4ad PUSH1 0x0
0x4af PUSH2 0x100
0x4b2 EXP
0x4b3 DUP2
0x4b4 SLOAD
0x4b5 DUP2
0x4b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cb MUL
0x4cc NOT
0x4cd AND
0x4ce SWAP1
0x4cf DUP4
0x4d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e5 AND
0x4e6 MUL
0x4e7 OR
0x4e8 SWAP1
0x4e9 SSTORE
0x4ea POP
0x4eb POP
0x4ec JUMP
---
0x4a9: JUMPDEST 
0x4ab: V256 = 0x1
0x4ad: V257 = 0x0
0x4af: V258 = 0x100
0x4b2: V259 = EXP 0x100 0x0
0x4b4: V260 = S[0x1]
0x4b6: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cb: V262 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4cc: V263 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V264 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V260
0x4d0: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x4e6: V267 = MUL V266 0x1
0x4e7: V268 = OR V267 V264
0x4e9: S[0x1] = V268
0x4ec: JUMP 0x257
---
Entry stack: [V11, 0x257, V125]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ed
[0x4ed:0x55b]
---
Predecessors: [0x264]
Successors: [0x806]
---
0x4ed JUMPDEST
0x4ee PUSH1 0x3
0x4f0 PUSH1 0x0
0x4f2 SWAP1
0x4f3 SLOAD
0x4f4 SWAP1
0x4f5 PUSH2 0x100
0x4f8 EXP
0x4f9 SWAP1
0x4fa DIV
0x4fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x510 AND
0x511 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x526 AND
0x527 PUSH4 0xa9059cbb
0x52c PUSH1 0x1
0x52e PUSH1 0x0
0x530 SWAP1
0x531 SLOAD
0x532 SWAP1
0x533 PUSH2 0x100
0x536 EXP
0x537 SWAP1
0x538 DIV
0x539 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54e AND
0x54f PUSH2 0x563
0x552 PUSH2 0x55c
0x555 DUP7
0x556 PUSH1 0x19
0x558 PUSH2 0x806
0x55b JUMP
---
0x4ed: JUMPDEST 
0x4ee: V269 = 0x3
0x4f0: V270 = 0x0
0x4f3: V271 = S[0x3]
0x4f5: V272 = 0x100
0x4f8: V273 = EXP 0x100 0x0
0x4fa: V274 = DIV V271 0x1
0x4fb: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x510: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x511: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x526: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x527: V279 = 0xa9059cbb
0x52c: V280 = 0x1
0x52e: V281 = 0x0
0x531: V282 = S[0x1]
0x533: V283 = 0x100
0x536: V284 = EXP 0x100 0x0
0x538: V285 = DIV V282 0x1
0x539: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x54f: V288 = 0x563
0x552: V289 = 0x55c
0x556: V290 = 0x19
0x558: V291 = 0x806
0x55b: JUMP 0x806
---
Entry stack: [V11, 0x2dc, V137, V140, V158]
Stack pops: 2
Stack additions: [S1, S0, V278, 0xa9059cbb, V287, 0x563, 0x55c, S1, 0x19]
Exit stack: [V11, 0x2dc, V137, V140, V158, V278, 0xa9059cbb, V287, 0x563, 0x55c, V140, 0x19]

================================

Block 0x55c
[0x55c:0x562]
---
Predecessors: [0x82f]
Successors: [0x839]
---
0x55c JUMPDEST
0x55d PUSH1 0x64
0x55f PUSH2 0x839
0x562 JUMP
---
0x55c: JUMPDEST 
0x55d: V292 = 0x64
0x55f: V293 = 0x839
0x562: JUMP 0x839
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S4, 0xa9059cbb, S2, {0x563, 0x681}, S0]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x2dc, V137, V140, V158, S4, 0xa9059cbb, S2, {0x563, 0x681}, S0, 0x64]

================================

Block 0x563
[0x563:0x5eb]
---
Predecessors: [0x870]
Successors: [0x5ec, 0x5f0]
---
0x563 JUMPDEST
0x564 PUSH1 0x0
0x566 PUSH1 0x40
0x568 MLOAD
0x569 PUSH1 0x20
0x56b ADD
0x56c MSTORE
0x56d PUSH1 0x40
0x56f MLOAD
0x570 DUP4
0x571 PUSH4 0xffffffff
0x576 AND
0x577 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x595 MUL
0x596 DUP2
0x597 MSTORE
0x598 PUSH1 0x4
0x59a ADD
0x59b DUP1
0x59c DUP4
0x59d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b2 AND
0x5b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c8 AND
0x5c9 DUP2
0x5ca MSTORE
0x5cb PUSH1 0x20
0x5cd ADD
0x5ce DUP3
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 SWAP3
0x5d5 POP
0x5d6 POP
0x5d7 POP
0x5d8 PUSH1 0x20
0x5da PUSH1 0x40
0x5dc MLOAD
0x5dd DUP1
0x5de DUP4
0x5df SUB
0x5e0 DUP2
0x5e1 PUSH1 0x0
0x5e3 DUP8
0x5e4 DUP1
0x5e5 EXTCODESIZE
0x5e6 ISZERO
0x5e7 ISZERO
0x5e8 PUSH2 0x5f0
0x5eb JUMPI
---
0x563: JUMPDEST 
0x564: V294 = 0x0
0x566: V295 = 0x40
0x568: V296 = M[0x40]
0x569: V297 = 0x20
0x56b: V298 = ADD 0x20 V296
0x56c: M[V298] = 0x0
0x56d: V299 = 0x40
0x56f: V300 = M[0x40]
0x571: V301 = 0xffffffff
0x576: V302 = AND 0xffffffff 0xa9059cbb
0x577: V303 = 0x100000000000000000000000000000000000000000000000000000000
0x595: V304 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x597: M[V300] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x598: V305 = 0x4
0x59a: V306 = ADD 0x4 V300
0x59d: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b2: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x5b3: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x5ca: M[V306] = V310
0x5cb: V311 = 0x20
0x5cd: V312 = ADD 0x20 V306
0x5d0: M[V312] = S0
0x5d1: V313 = 0x20
0x5d3: V314 = ADD 0x20 V312
0x5d8: V315 = 0x20
0x5da: V316 = 0x40
0x5dc: V317 = M[0x40]
0x5df: V318 = SUB V314 V317
0x5e1: V319 = 0x0
0x5e5: V320 = EXTCODESIZE S3
0x5e6: V321 = ISZERO V320
0x5e7: V322 = ISZERO V321
0x5e8: V323 = 0x5f0
0x5eb: JUMPI 0x5f0 V322
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S3, 0xa9059cbb, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, V314, 0x20, V317, V318, V317, 0x0, S3]
Exit stack: [V11, 0x2dc, V137, V140, V158, S3, 0xa9059cbb, V314, 0x20, V317, V318, V317, 0x0, S3]

================================

Block 0x5ec
[0x5ec:0x5ef]
---
Predecessors: [0x563]
Successors: []
---
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef REVERT
---
0x5ec: V324 = 0x0
0x5ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V314, 0x20, V317, V318, V317, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V314, 0x20, V317, V318, V317, 0x0, S0]

================================

Block 0x5f0
[0x5f0:0x5fc]
---
Predecessors: [0x563]
Successors: [0x5fd, 0x601]
---
0x5f0 JUMPDEST
0x5f1 PUSH2 0x2c6
0x5f4 GAS
0x5f5 SUB
0x5f6 CALL
0x5f7 ISZERO
0x5f8 ISZERO
0x5f9 PUSH2 0x601
0x5fc JUMPI
---
0x5f0: JUMPDEST 
0x5f1: V325 = 0x2c6
0x5f4: V326 = GAS
0x5f5: V327 = SUB V326 0x2c6
0x5f6: V328 = CALL V327 S0 0x0 V317 V318 V317 0x20
0x5f7: V329 = ISZERO V328
0x5f8: V330 = ISZERO V329
0x5f9: V331 = 0x601
0x5fc: JUMPI 0x601 V330
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V314, 0x20, V317, V318, V317, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V314]

================================

Block 0x5fd
[0x5fd:0x600]
---
Predecessors: [0x5f0]
Successors: []
---
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 REVERT
---
0x5fd: V332 = 0x0
0x600: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S2, 0xa9059cbb, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S2, 0xa9059cbb, V314]

================================

Block 0x601
[0x601:0x679]
---
Predecessors: [0x5f0]
Successors: [0x806]
---
0x601 JUMPDEST
0x602 POP
0x603 POP
0x604 POP
0x605 PUSH1 0x40
0x607 MLOAD
0x608 DUP1
0x609 MLOAD
0x60a SWAP1
0x60b POP
0x60c POP
0x60d PUSH1 0x3
0x60f PUSH1 0x0
0x611 SWAP1
0x612 SLOAD
0x613 SWAP1
0x614 PUSH2 0x100
0x617 EXP
0x618 SWAP1
0x619 DIV
0x61a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62f AND
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 PUSH4 0xa9059cbb
0x64b PUSH1 0x0
0x64d DUP1
0x64e SWAP1
0x64f SLOAD
0x650 SWAP1
0x651 PUSH2 0x100
0x654 EXP
0x655 SWAP1
0x656 DIV
0x657 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66c AND
0x66d PUSH2 0x681
0x670 PUSH2 0x67a
0x673 DUP7
0x674 PUSH1 0x4b
0x676 PUSH2 0x806
0x679 JUMP
---
0x601: JUMPDEST 
0x605: V333 = 0x40
0x607: V334 = M[0x40]
0x609: V335 = M[V334]
0x60d: V336 = 0x3
0x60f: V337 = 0x0
0x612: V338 = S[0x3]
0x614: V339 = 0x100
0x617: V340 = EXP 0x100 0x0
0x619: V341 = DIV V338 0x1
0x61a: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x630: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x646: V346 = 0xa9059cbb
0x64b: V347 = 0x0
0x64f: V348 = S[0x0]
0x651: V349 = 0x100
0x654: V350 = EXP 0x100 0x0
0x656: V351 = DIV V348 0x1
0x657: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x66c: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x66d: V354 = 0x681
0x670: V355 = 0x67a
0x674: V356 = 0x4b
0x676: V357 = 0x806
0x679: JUMP 0x806
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S2, 0xa9059cbb, V314]
Stack pops: 5
Stack additions: [S4, S3, V345, 0xa9059cbb, V353, 0x681, 0x67a, S4, 0x4b]
Exit stack: [V11, 0x2dc, V137, V140, V158, V345, 0xa9059cbb, V353, 0x681, 0x67a, V140, 0x4b]

================================

Block 0x67a
[0x67a:0x680]
---
Predecessors: [0x82f]
Successors: [0x839]
---
0x67a JUMPDEST
0x67b PUSH1 0x64
0x67d PUSH2 0x839
0x680 JUMP
---
0x67a: JUMPDEST 
0x67b: V358 = 0x64
0x67d: V359 = 0x839
0x680: JUMP 0x839
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S4, 0xa9059cbb, S2, {0x563, 0x681}, S0]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x2dc, V137, V140, V158, S4, 0xa9059cbb, S2, {0x563, 0x681}, S0, 0x64]

================================

Block 0x681
[0x681:0x709]
---
Predecessors: [0x870]
Successors: [0x70a, 0x70e]
---
0x681 JUMPDEST
0x682 PUSH1 0x0
0x684 PUSH1 0x40
0x686 MLOAD
0x687 PUSH1 0x20
0x689 ADD
0x68a MSTORE
0x68b PUSH1 0x40
0x68d MLOAD
0x68e DUP4
0x68f PUSH4 0xffffffff
0x694 AND
0x695 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6b3 MUL
0x6b4 DUP2
0x6b5 MSTORE
0x6b6 PUSH1 0x4
0x6b8 ADD
0x6b9 DUP1
0x6ba DUP4
0x6bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d0 AND
0x6d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e6 AND
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 PUSH1 0x20
0x6eb ADD
0x6ec DUP3
0x6ed DUP2
0x6ee MSTORE
0x6ef PUSH1 0x20
0x6f1 ADD
0x6f2 SWAP3
0x6f3 POP
0x6f4 POP
0x6f5 POP
0x6f6 PUSH1 0x20
0x6f8 PUSH1 0x40
0x6fa MLOAD
0x6fb DUP1
0x6fc DUP4
0x6fd SUB
0x6fe DUP2
0x6ff PUSH1 0x0
0x701 DUP8
0x702 DUP1
0x703 EXTCODESIZE
0x704 ISZERO
0x705 ISZERO
0x706 PUSH2 0x70e
0x709 JUMPI
---
0x681: JUMPDEST 
0x682: V360 = 0x0
0x684: V361 = 0x40
0x686: V362 = M[0x40]
0x687: V363 = 0x20
0x689: V364 = ADD 0x20 V362
0x68a: M[V364] = 0x0
0x68b: V365 = 0x40
0x68d: V366 = M[0x40]
0x68f: V367 = 0xffffffff
0x694: V368 = AND 0xffffffff 0xa9059cbb
0x695: V369 = 0x100000000000000000000000000000000000000000000000000000000
0x6b3: V370 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6b5: M[V366] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6b6: V371 = 0x4
0x6b8: V372 = ADD 0x4 V366
0x6bb: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d0: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6d1: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e6: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x6e8: M[V372] = V376
0x6e9: V377 = 0x20
0x6eb: V378 = ADD 0x20 V372
0x6ee: M[V378] = S0
0x6ef: V379 = 0x20
0x6f1: V380 = ADD 0x20 V378
0x6f6: V381 = 0x20
0x6f8: V382 = 0x40
0x6fa: V383 = M[0x40]
0x6fd: V384 = SUB V380 V383
0x6ff: V385 = 0x0
0x703: V386 = EXTCODESIZE S3
0x704: V387 = ISZERO V386
0x705: V388 = ISZERO V387
0x706: V389 = 0x70e
0x709: JUMPI 0x70e V388
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S3, 0xa9059cbb, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, V380, 0x20, V383, V384, V383, 0x0, S3]
Exit stack: [V11, 0x2dc, V137, V140, V158, S3, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, S3]

================================

Block 0x70a
[0x70a:0x70d]
---
Predecessors: [0x681]
Successors: []
---
0x70a PUSH1 0x0
0x70c DUP1
0x70d REVERT
---
0x70a: V390 = 0x0
0x70d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, S0]

================================

Block 0x70e
[0x70e:0x71a]
---
Predecessors: [0x681]
Successors: [0x71b, 0x71f]
---
0x70e JUMPDEST
0x70f PUSH2 0x2c6
0x712 GAS
0x713 SUB
0x714 CALL
0x715 ISZERO
0x716 ISZERO
0x717 PUSH2 0x71f
0x71a JUMPI
---
0x70e: JUMPDEST 
0x70f: V391 = 0x2c6
0x712: V392 = GAS
0x713: V393 = SUB V392 0x2c6
0x714: V394 = CALL V393 S0 0x0 V383 V384 V383 0x20
0x715: V395 = ISZERO V394
0x716: V396 = ISZERO V395
0x717: V397 = 0x71f
0x71a: JUMPI 0x71f V396
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, V380]

================================

Block 0x71b
[0x71b:0x71e]
---
Predecessors: [0x70e]
Successors: []
---
0x71b PUSH1 0x0
0x71d DUP1
0x71e REVERT
---
0x71b: V398 = 0x0
0x71e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S2, 0xa9059cbb, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S2, 0xa9059cbb, V380]

================================

Block 0x71f
[0x71f:0x72e]
---
Predecessors: [0x70e]
Successors: [0x2dc]
---
0x71f JUMPDEST
0x720 POP
0x721 POP
0x722 POP
0x723 PUSH1 0x40
0x725 MLOAD
0x726 DUP1
0x727 MLOAD
0x728 SWAP1
0x729 POP
0x72a POP
0x72b POP
0x72c POP
0x72d POP
0x72e JUMP
---
0x71f: JUMPDEST 
0x723: V399 = 0x40
0x725: V400 = M[0x40]
0x727: V401 = M[V400]
0x72e: JUMP 0x2dc
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S2, 0xa9059cbb, V380]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x72f
[0x72f:0x786]
---
Predecessors: [0x2e9]
Successors: [0x787, 0x78b]
---
0x72f JUMPDEST
0x730 PUSH1 0x2
0x732 PUSH1 0x0
0x734 SWAP1
0x735 SLOAD
0x736 SWAP1
0x737 PUSH2 0x100
0x73a EXP
0x73b SWAP1
0x73c DIV
0x73d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x752 AND
0x753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x768 AND
0x769 CALLER
0x76a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77f AND
0x780 EQ
0x781 ISZERO
0x782 ISZERO
0x783 PUSH2 0x78b
0x786 JUMPI
---
0x72f: JUMPDEST 
0x730: V402 = 0x2
0x732: V403 = 0x0
0x735: V404 = S[0x2]
0x737: V405 = 0x100
0x73a: V406 = EXP 0x100 0x0
0x73c: V407 = DIV V404 0x1
0x73d: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x752: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x753: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x768: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x769: V412 = CALLER
0x76a: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x77f: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x780: V415 = EQ V414 V411
0x781: V416 = ISZERO V415
0x782: V417 = ISZERO V416
0x783: V418 = 0x78b
0x786: JUMPI 0x78b V417
---
Entry stack: [V11, 0x315, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x315, V173]

================================

Block 0x787
[0x787:0x78a]
---
Predecessors: [0x72f]
Successors: []
---
0x787 PUSH1 0x0
0x789 DUP1
0x78a REVERT
---
0x787: V419 = 0x0
0x78a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x315, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x315, V173]

================================

Block 0x78b
[0x78b:0x7c1]
---
Predecessors: [0x72f]
Successors: [0x7c2, 0x803]
---
0x78b JUMPDEST
0x78c PUSH1 0x0
0x78e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a3 AND
0x7a4 DUP2
0x7a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ba AND
0x7bb EQ
0x7bc ISZERO
0x7bd ISZERO
0x7be PUSH2 0x803
0x7c1 JUMPI
---
0x78b: JUMPDEST 
0x78c: V420 = 0x0
0x78e: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a3: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7a5: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ba: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x7bb: V425 = EQ V424 0x0
0x7bc: V426 = ISZERO V425
0x7bd: V427 = ISZERO V426
0x7be: V428 = 0x803
0x7c1: JUMPI 0x803 V427
---
Entry stack: [V11, 0x315, V173]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x315, V173]

================================

Block 0x7c2
[0x7c2:0x802]
---
Predecessors: [0x78b]
Successors: [0x803]
---
0x7c2 DUP1
0x7c3 PUSH1 0x2
0x7c5 PUSH1 0x0
0x7c7 PUSH2 0x100
0x7ca EXP
0x7cb DUP2
0x7cc SLOAD
0x7cd DUP2
0x7ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e3 MUL
0x7e4 NOT
0x7e5 AND
0x7e6 SWAP1
0x7e7 DUP4
0x7e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fd AND
0x7fe MUL
0x7ff OR
0x800 SWAP1
0x801 SSTORE
0x802 POP
---
0x7c3: V429 = 0x2
0x7c5: V430 = 0x0
0x7c7: V431 = 0x100
0x7ca: V432 = EXP 0x100 0x0
0x7cc: V433 = S[0x2]
0x7ce: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e3: V435 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x7e4: V436 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V437 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V433
0x7e8: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fd: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x7fe: V440 = MUL V439 0x1
0x7ff: V441 = OR V440 V437
0x801: S[0x2] = V441
---
Entry stack: [V11, 0x315, V173]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x315, V173]

================================

Block 0x803
[0x803:0x805]
---
Predecessors: [0x78b, 0x7c2]
Successors: [0x315]
---
0x803 JUMPDEST
0x804 POP
0x805 JUMP
---
0x803: JUMPDEST 
0x805: JUMP 0x315
---
Entry stack: [V11, 0x315, V173]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x806
[0x806:0x817]
---
Predecessors: [0x4ed, 0x601]
Successors: [0x818, 0x827]
---
0x806 JUMPDEST
0x807 PUSH1 0x0
0x809 DUP1
0x80a DUP3
0x80b DUP5
0x80c MUL
0x80d SWAP1
0x80e POP
0x80f PUSH1 0x0
0x811 DUP5
0x812 EQ
0x813 DUP1
0x814 PUSH2 0x827
0x817 JUMPI
---
0x806: JUMPDEST 
0x807: V442 = 0x0
0x80c: V443 = MUL V140 {0x19, 0x4b}
0x80f: V444 = 0x0
0x812: V445 = EQ V140 0x0
0x814: V446 = 0x827
0x817: JUMPI 0x827 V445
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S6, 0xa9059cbb, S4, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V443, V445]
Exit stack: [V11, 0x2dc, V137, V140, V158, S6, 0xa9059cbb, S4, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, V443, V445]

================================

Block 0x818
[0x818:0x822]
---
Predecessors: [0x806]
Successors: [0x823, 0x824]
---
0x818 POP
0x819 DUP3
0x81a DUP5
0x81b DUP3
0x81c DUP2
0x81d ISZERO
0x81e ISZERO
0x81f PUSH2 0x824
0x822 JUMPI
---
0x81d: V447 = ISZERO V140
0x81e: V448 = ISZERO V447
0x81f: V449 = 0x824
0x822: JUMPI 0x824 V448
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, V443, V445]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, V443, {0x19, 0x4b}, V140, V443]

================================

Block 0x823
[0x823:0x823]
---
Predecessors: [0x818]
Successors: []
---
0x823 INVALID
---
0x823: INVALID 
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S11, 0xa9059cbb, S9, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, V443, {0x19, 0x4b}, V140, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S11, 0xa9059cbb, S9, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, V443, {0x19, 0x4b}, V140, V443]

================================

Block 0x824
[0x824:0x826]
---
Predecessors: [0x818]
Successors: [0x827]
---
0x824 JUMPDEST
0x825 DIV
0x826 EQ
---
0x824: JUMPDEST 
0x825: V450 = DIV V443 V140
0x826: V451 = EQ V450 {0x19, 0x4b}
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S11, 0xa9059cbb, S9, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, V443, {0x19, 0x4b}, V140, V443]
Stack pops: 3
Stack additions: [V451]
Exit stack: [V11, 0x2dc, V137, V140, V158, S11, 0xa9059cbb, S9, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, V443, V451]

================================

Block 0x827
[0x827:0x82d]
---
Predecessors: [0x806, 0x824]
Successors: [0x82e, 0x82f]
---
0x827 JUMPDEST
0x828 ISZERO
0x829 ISZERO
0x82a PUSH2 0x82f
0x82d JUMPI
---
0x827: JUMPDEST 
0x828: V452 = ISZERO S0
0x829: V453 = ISZERO V452
0x82a: V454 = 0x82f
0x82d: JUMPI 0x82f V453
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, S1]

================================

Block 0x82e
[0x82e:0x82e]
---
Predecessors: [0x827]
Successors: []
---
0x82e INVALID
---
0x82e: INVALID 
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, S6, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, S6, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, S0]

================================

Block 0x82f
[0x82f:0x838]
---
Predecessors: [0x827]
Successors: [0x55c, 0x67a]
---
0x82f JUMPDEST
0x830 DUP1
0x831 SWAP2
0x832 POP
0x833 POP
0x834 SWAP3
0x835 SWAP2
0x836 POP
0x837 POP
0x838 JUMP
---
0x82f: JUMPDEST 
0x838: JUMP {0x55c, 0x67a}
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, S6, {0x563, 0x681}, {0x55c, 0x67a}, V140, {0x19, 0x4b}, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x2dc, V137, V140, V158, S8, 0xa9059cbb, S6, {0x563, 0x681}, S0]

================================

Block 0x839
[0x839:0x846]
---
Predecessors: [0x55c, 0x67a]
Successors: [0x847, 0x848]
---
0x839 JUMPDEST
0x83a PUSH1 0x0
0x83c DUP1
0x83d PUSH1 0x0
0x83f DUP4
0x840 GT
0x841 ISZERO
0x842 ISZERO
0x843 PUSH2 0x848
0x846 JUMPI
---
0x839: JUMPDEST 
0x83a: V455 = 0x0
0x83d: V456 = 0x0
0x840: V457 = GT 0x64 0x0
0x841: V458 = ISZERO 0x1
0x842: V459 = ISZERO 0x0
0x843: V460 = 0x848
0x846: JUMPI 0x848 0x1
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S5, 0xa9059cbb, S3, {0x563, 0x681}, S1, 0x64]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V11, 0x2dc, V137, V140, V158, S5, 0xa9059cbb, S3, {0x563, 0x681}, S1, 0x64, 0x0, 0x0]

================================

Block 0x847
[0x847:0x847]
---
Predecessors: [0x839]
Successors: []
---
0x847 INVALID
---
0x847: INVALID 
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, {0x563, 0x681}, S3, 0x64, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, {0x563, 0x681}, S3, 0x64, 0x0, 0x0]

================================

Block 0x848
[0x848:0x851]
---
Predecessors: [0x839]
Successors: [0x852, 0x853]
---
0x848 JUMPDEST
0x849 DUP3
0x84a DUP5
0x84b DUP2
0x84c ISZERO
0x84d ISZERO
0x84e PUSH2 0x853
0x851 JUMPI
---
0x848: JUMPDEST 
0x84c: V461 = ISZERO 0x64
0x84d: V462 = ISZERO 0x0
0x84e: V463 = 0x853
0x851: JUMPI 0x853 0x1
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, {0x563, 0x681}, S3, 0x64, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, S3]
Exit stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, {0x563, 0x681}, S3, 0x64, 0x0, 0x0, 0x64, S3]

================================

Block 0x852
[0x852:0x852]
---
Predecessors: [0x848]
Successors: []
---
0x852 INVALID
---
0x852: INVALID 
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, 0x0, 0x64, S0]

================================

Block 0x853
[0x853:0x85f]
---
Predecessors: [0x848]
Successors: [0x860, 0x861]
---
0x853 JUMPDEST
0x854 DIV
0x855 SWAP1
0x856 POP
0x857 DUP3
0x858 DUP5
0x859 DUP2
0x85a ISZERO
0x85b ISZERO
0x85c PUSH2 0x861
0x85f JUMPI
---
0x853: JUMPDEST 
0x854: V464 = DIV S0 0x64
0x85a: V465 = ISZERO 0x64
0x85b: V466 = ISZERO 0x0
0x85c: V467 = 0x861
0x85f: JUMPI 0x861 0x1
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V464, S4, S5]
Exit stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, V464, 0x64, S5]

================================

Block 0x860
[0x860:0x860]
---
Predecessors: [0x853]
Successors: []
---
0x860 INVALID
---
0x860: INVALID 
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, V464, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, V464, 0x64, S0]

================================

Block 0x861
[0x861:0x86e]
---
Predecessors: [0x853]
Successors: [0x86f, 0x870]
---
0x861 JUMPDEST
0x862 MOD
0x863 DUP2
0x864 DUP5
0x865 MUL
0x866 ADD
0x867 DUP5
0x868 EQ
0x869 ISZERO
0x86a ISZERO
0x86b PUSH2 0x870
0x86e JUMPI
---
0x861: JUMPDEST 
0x862: V468 = MOD S0 0x64
0x865: V469 = MUL 0x64 V464
0x866: V470 = ADD V469 V468
0x868: V471 = EQ S5 V470
0x869: V472 = ISZERO V471
0x86a: V473 = ISZERO V472
0x86b: V474 = 0x870
0x86e: JUMPI 0x870 V473
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, V464, 0x64, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2]
Exit stack: [V11, 0x2dc, V137, V140, V158, S9, 0xa9059cbb, S7, {0x563, 0x681}, S5, 0x64, 0x0, V464]

================================

Block 0x86f
[0x86f:0x86f]
---
Predecessors: [0x861]
Successors: []
---
0x86f INVALID
---
0x86f: INVALID 
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, {0x563, 0x681}, S3, 0x64, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, {0x563, 0x681}, S3, 0x64, 0x0, S0]

================================

Block 0x870
[0x870:0x879]
---
Predecessors: [0x861]
Successors: [0x563, 0x681]
---
0x870 JUMPDEST
0x871 DUP1
0x872 SWAP2
0x873 POP
0x874 POP
0x875 SWAP3
0x876 SWAP2
0x877 POP
0x878 POP
0x879 JUMP
---
0x870: JUMPDEST 
0x879: JUMP {0x563, 0x681}
---
Entry stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, {0x563, 0x681}, S3, 0x64, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x2dc, V137, V140, V158, S7, 0xa9059cbb, S5, S0]

================================

Block 0x87a
[0x87a:0x8a5]
---
Predecessors: []
Successors: []
---
0x87a STOP
0x87b LOG1
0x87c PUSH6 0x627a7a723058
0x883 SHA3
0x884 MISSING 0x1f
0x885 MISSING 0xf8
0x886 SWAP2
0x887 MISSING 0xb4
0x888 SWAP3
0x889 XOR
0x88a EXTCODEHASH
0x88b MISSING 0xdc
0x88c MISSING 0xdc
0x88d MISSING 0x5e
0x88e SWAP13
0x88f MISSING 0xca
0x890 MISSING 0x1e
0x891 MSTORE
0x892 MISSING 0xc1
0x893 ADDMOD
0x894 DUP12
0x895 MISSING 0x5e
0x896 POP
0x897 PUSH1 0x58
0x899 SAR
0x89a MISSING 0xe
0x89b MISSING 0x1f
0x89c LOG4
0x89d PUSH2 0xbf4e
0x8a0 MISSING 0xc7
0x8a1 MISSING 0xce
0x8a2 MLOAD
0x8a3 LOG4
0x8a4 STOP
0x8a5 MISSING 0x29
---
0x87a: STOP 
0x87b: LOG S0 S1 S2
0x87c: V475 = 0x627a7a723058
0x883: V476 = SHA3 0x627a7a723058 S3
0x884: MISSING 0x1f
0x885: MISSING 0xf8
0x887: MISSING 0xb4
0x889: V477 = XOR S3 S1
0x88a: V478 = EXTCODEHASH V477
0x88b: MISSING 0xdc
0x88c: MISSING 0xdc
0x88d: MISSING 0x5e
0x88f: MISSING 0xca
0x890: MISSING 0x1e
0x891: M[S0] = S1
0x892: MISSING 0xc1
0x893: V479 = ADDMOD S0 S1 S2
0x895: MISSING 0x5e
0x897: V480 = 0x58
0x899: V481 = SAR 0x58 S1
0x89a: MISSING 0xe
0x89b: MISSING 0x1f
0x89c: LOG S0 S1 S2 S3 S4 S5
0x89d: V482 = 0xbf4e
0x8a0: MISSING 0xc7
0x8a1: MISSING 0xce
0x8a2: V483 = M[S0]
0x8a3: LOG V483 S1 S2 S3 S4 S5
0x8a4: STOP 
0x8a5: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V476, S2, S1, S0, V478, S2, S0, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S13, V479, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V481, 0xbf4e]
Exit stack: []

================================

Function 0:
Public function signature: 0x1441a5a9
Entry block: 0x93
Exit block: 0xa6
Body: 0x93, 0x9a, 0x9e, 0xa6, 0x317

Function 1:
Public function signature: 0x68447c93
Entry block: 0xe8
Exit block: 0xfb
Body: 0xe8, 0xef, 0xf3, 0xfb, 0x33c

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x13d
Exit block: 0x150
Body: 0x13d, 0x144, 0x148, 0x150, 0x362

Function 3:
Public function signature: 0x969295ae
Entry block: 0x192
Exit block: 0x1c9
Body: 0x192, 0x199, 0x19d, 0x1c9, 0x388, 0x3e0, 0x3e4

Function 4:
Public function signature: 0xbc8aa899
Entry block: 0x1cb
Exit block: 0x1de
Body: 0x1cb, 0x1d2, 0x1d6, 0x1de, 0x427

Function 5:
Public function signature: 0xbd97ce3a
Entry block: 0x220
Exit block: 0x257
Body: 0x220, 0x227, 0x22b, 0x257, 0x44d, 0x4a5, 0x4a9

Function 6:
Public function signature: 0xc0ee0b8a
Entry block: 0x259
Exit block: 0x2dc
Body: 0x259, 0x260, 0x264, 0x2dc, 0x4ed, 0x55c, 0x563, 0x5ec, 0x5f0, 0x5fd, 0x601, 0x67a, 0x681, 0x70a, 0x70e, 0x71b, 0x71f, 0x839, 0x847, 0x848, 0x852, 0x853, 0x860, 0x861, 0x86f, 0x870

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x2de
Exit block: 0x315
Body: 0x2de, 0x2e5, 0x2e9, 0x315, 0x72f, 0x787, 0x78b, 0x7c2, 0x803

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

Function 9:
Private function
Entry block: 0x806
Exit block: 0x82f
Body: 0x806, 0x818, 0x824, 0x827, 0x82f

