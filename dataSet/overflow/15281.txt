Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xa6fbb05
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xa6fbb05
0x3c: V13 = EQ 0xa6fbb05 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa1]
---
0x41 DUP1
0x42 PUSH4 0x181ffc5f
0x47 EQ
0x48 PUSH2 0xa1
0x4b JUMPI
---
0x42: V15 = 0x181ffc5f
0x47: V16 = EQ 0x181ffc5f V11
0x48: V17 = 0xa1
0x4b: JUMPI 0xa1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc4]
---
0x4c DUP1
0x4d PUSH4 0x31fd725a
0x52 EQ
0x53 PUSH2 0xc4
0x56 JUMPI
---
0x4d: V18 = 0x31fd725a
0x52: V19 = EQ 0x31fd725a V11
0x53: V20 = 0xc4
0x56: JUMPI 0xc4 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xeb]
---
0x57 DUP1
0x58 PUSH4 0x410c8005
0x5d EQ
0x5e PUSH2 0xeb
0x61 JUMPI
---
0x58: V21 = 0x410c8005
0x5d: V22 = EQ 0x410c8005 V11
0x5e: V23 = 0xeb
0x61: JUMPI 0xeb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x124]
---
0x62 DUP1
0x63 PUSH4 0xb456ecc5
0x68 EQ
0x69 PUSH2 0x124
0x6c JUMPI
---
0x63: V24 = 0xb456ecc5
0x68: V25 = EQ 0xb456ecc5 V11
0x69: V26 = 0x124
0x6c: JUMPI 0x124 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x19d]
---
0x6d DUP1
0x6e PUSH4 0xbea948c8
0x73 EQ
0x74 PUSH2 0x19d
0x77 JUMPI
---
0x6e: V27 = 0xbea948c8
0x73: V28 = EQ 0xbea948c8 V11
0x74: V29 = 0x19d
0x77: JUMPI 0x19d V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1a7]
---
0x78 DUP1
0x79 PUSH4 0xdac47a71
0x7e EQ
0x7f PUSH2 0x1a7
0x82 JUMPI
---
0x79: V30 = 0xdac47a71
0x7e: V31 = EQ 0xdac47a71 V11
0x7f: V32 = 0x1a7
0x82: JUMPI 0x1a7 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x9e]
---
Predecessors: [0xd]
Successors: [0x1ca]
---
0x85 JUMPDEST
0x86 PUSH2 0x9f
0x89 PUSH1 0x4
0x8b DUP1
0x8c DUP1
0x8d CALLDATALOAD
0x8e PUSH1 0x0
0x90 NOT
0x91 AND
0x92 SWAP1
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 SWAP2
0x98 SWAP1
0x99 POP
0x9a POP
0x9b PUSH2 0x1ca
0x9e JUMP
---
0x85: JUMPDEST 
0x86: V33 = 0x9f
0x89: V34 = 0x4
0x8d: V35 = CALLDATALOAD 0x4
0x8e: V36 = 0x0
0x90: V37 = NOT 0x0
0x91: V38 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V35
0x93: V39 = 0x20
0x95: V40 = ADD 0x20 0x4
0x9b: V41 = 0x1ca
0x9e: JUMP 0x1ca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9f, V38]
Exit stack: [V11, 0x9f, V38]

================================

Block 0x9f
[0x9f:0xa0]
---
Predecessors: [0x25a]
Successors: []
---
0x9f JUMPDEST
0xa0 STOP
---
0x9f: JUMPDEST 
0xa0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa1
[0xa1:0xc1]
---
Predecessors: [0x41]
Successors: [0x25d]
---
0xa1 JUMPDEST
0xa2 PUSH2 0xc2
0xa5 PUSH1 0x4
0xa7 DUP1
0xa8 DUP1
0xa9 CALLDATALOAD
0xaa SWAP1
0xab PUSH1 0x20
0xad ADD
0xae SWAP1
0xaf DUP3
0xb0 ADD
0xb1 DUP1
0xb2 CALLDATALOAD
0xb3 SWAP1
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP2
0xb8 SWAP1
0xb9 SWAP2
0xba SWAP3
0xbb SWAP1
0xbc POP
0xbd POP
0xbe PUSH2 0x25d
0xc1 JUMP
---
0xa1: JUMPDEST 
0xa2: V42 = 0xc2
0xa5: V43 = 0x4
0xa9: V44 = CALLDATALOAD 0x4
0xab: V45 = 0x20
0xad: V46 = ADD 0x20 0x4
0xb0: V47 = ADD 0x4 V44
0xb2: V48 = CALLDATALOAD V47
0xb4: V49 = 0x20
0xb6: V50 = ADD 0x20 V47
0xbe: V51 = 0x25d
0xc1: JUMP 0x25d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc2, V50, V48]
Exit stack: [V11, 0xc2, V50, V48]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0x2f0]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0x4c]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V52 = CALLVALUE
0xc6: V53 = ISZERO V52
0xc7: V54 = 0xcf
0xca: JUMPI 0xcf V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V55 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xe8]
---
Predecessors: [0xc4]
Successors: [0x2f4]
---
0xcf JUMPDEST
0xd0 PUSH2 0xe9
0xd3 PUSH1 0x4
0xd5 DUP1
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 PUSH1 0x0
0xda NOT
0xdb AND
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 SWAP2
0xe2 SWAP1
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x2f4
0xe8 JUMP
---
0xcf: JUMPDEST 
0xd0: V56 = 0xe9
0xd3: V57 = 0x4
0xd7: V58 = CALLDATALOAD 0x4
0xd8: V59 = 0x0
0xda: V60 = NOT 0x0
0xdb: V61 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V58
0xdd: V62 = 0x20
0xdf: V63 = ADD 0x20 0x4
0xe5: V64 = 0x2f4
0xe8: JUMP 0x2f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe9, V61]
Exit stack: [V11, 0xe9, V61]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x379]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x57]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V65 = CALLVALUE
0xed: V66 = ISZERO V65
0xee: V67 = 0xf6
0xf1: JUMPI 0xf6 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V68 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0x121]
---
Predecessors: [0xeb]
Successors: [0x37c]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x122
0xfa PUSH1 0x4
0xfc DUP1
0xfd DUP1
0xfe CALLDATALOAD
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 SWAP1
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP1
0x11a SWAP2
0x11b SWAP1
0x11c POP
0x11d POP
0x11e PUSH2 0x37c
0x121 JUMP
---
0xf6: JUMPDEST 
0xf7: V69 = 0x122
0xfa: V70 = 0x4
0xfe: V71 = CALLDATALOAD 0x4
0xff: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x116: V74 = 0x20
0x118: V75 = ADD 0x20 0x4
0x11e: V76 = 0x37c
0x121: JUMP 0x37c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x122, V73]
Exit stack: [V11, 0x122, V73]

================================

Block 0x122
[0x122:0x123]
---
Predecessors: [0x413]
Successors: []
---
0x122 JUMPDEST
0x123 STOP
---
0x122: JUMPDEST 
0x123: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x62]
Successors: [0x12b, 0x12f]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V77 = CALLVALUE
0x126: V78 = ISZERO V77
0x127: V79 = 0x12f
0x12a: JUMPI 0x12f V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x124]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V80 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x17e]
---
Predecessors: [0x124]
Successors: [0x416]
---
0x12f JUMPDEST
0x130 PUSH2 0x17f
0x133 PUSH1 0x4
0x135 DUP1
0x136 DUP1
0x137 CALLDATALOAD
0x138 SWAP1
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP1
0x13d DUP3
0x13e ADD
0x13f DUP1
0x140 CALLDATALOAD
0x141 SWAP1
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP1
0x146 DUP1
0x147 DUP1
0x148 PUSH1 0x1f
0x14a ADD
0x14b PUSH1 0x20
0x14d DUP1
0x14e SWAP2
0x14f DIV
0x150 MUL
0x151 PUSH1 0x20
0x153 ADD
0x154 PUSH1 0x40
0x156 MLOAD
0x157 SWAP1
0x158 DUP2
0x159 ADD
0x15a PUSH1 0x40
0x15c MSTORE
0x15d DUP1
0x15e SWAP4
0x15f SWAP3
0x160 SWAP2
0x161 SWAP1
0x162 DUP2
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 DUP4
0x169 DUP4
0x16a DUP1
0x16b DUP3
0x16c DUP5
0x16d CALLDATACOPY
0x16e DUP3
0x16f ADD
0x170 SWAP2
0x171 POP
0x172 POP
0x173 POP
0x174 POP
0x175 POP
0x176 POP
0x177 SWAP2
0x178 SWAP1
0x179 POP
0x17a POP
0x17b PUSH2 0x416
0x17e JUMP
---
0x12f: JUMPDEST 
0x130: V81 = 0x17f
0x133: V82 = 0x4
0x137: V83 = CALLDATALOAD 0x4
0x139: V84 = 0x20
0x13b: V85 = ADD 0x20 0x4
0x13e: V86 = ADD 0x4 V83
0x140: V87 = CALLDATALOAD V86
0x142: V88 = 0x20
0x144: V89 = ADD 0x20 V86
0x148: V90 = 0x1f
0x14a: V91 = ADD 0x1f V87
0x14b: V92 = 0x20
0x14f: V93 = DIV V91 0x20
0x150: V94 = MUL V93 0x20
0x151: V95 = 0x20
0x153: V96 = ADD 0x20 V94
0x154: V97 = 0x40
0x156: V98 = M[0x40]
0x159: V99 = ADD V98 V96
0x15a: V100 = 0x40
0x15c: M[0x40] = V99
0x164: M[V98] = V87
0x165: V101 = 0x20
0x167: V102 = ADD 0x20 V98
0x16d: CALLDATACOPY V102 V89 V87
0x16f: V103 = ADD V102 V87
0x17b: V104 = 0x416
0x17e: JUMP 0x416
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17f, V98]
Exit stack: [V11, 0x17f, V98]

================================

Block 0x17f
[0x17f:0x19c]
---
Predecessors: [0x44e]
Successors: []
---
0x17f JUMPDEST
0x180 PUSH1 0x40
0x182 MLOAD
0x183 DUP1
0x184 DUP3
0x185 PUSH1 0x0
0x187 NOT
0x188 AND
0x189 PUSH1 0x0
0x18b NOT
0x18c AND
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 ADD
0x192 SWAP2
0x193 POP
0x194 POP
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 SWAP2
0x19a SUB
0x19b SWAP1
0x19c RETURN
---
0x17f: JUMPDEST 
0x180: V105 = 0x40
0x182: V106 = M[0x40]
0x185: V107 = 0x0
0x187: V108 = NOT 0x0
0x188: V109 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V322
0x189: V110 = 0x0
0x18b: V111 = NOT 0x0
0x18c: V112 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V109
0x18e: M[V106] = V112
0x18f: V113 = 0x20
0x191: V114 = ADD 0x20 V106
0x195: V115 = 0x40
0x197: V116 = M[0x40]
0x19a: V117 = SUB V114 V116
0x19c: RETURN V116 V117
---
Entry stack: [V11, V322]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x19d
[0x19d:0x1a4]
---
Predecessors: [0x6d]
Successors: [0x482]
---
0x19d JUMPDEST
0x19e PUSH2 0x1a5
0x1a1 PUSH2 0x482
0x1a4 JUMP
---
0x19d: JUMPDEST 
0x19e: V118 = 0x1a5
0x1a1: V119 = 0x482
0x1a4: JUMP 0x482
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V11, 0x1a5]

================================

Block 0x1a5
[0x1a5:0x1a6]
---
Predecessors: [0x53d]
Successors: []
---
0x1a5 JUMPDEST
0x1a6 STOP
---
0x1a5: JUMPDEST 
0x1a6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0x78]
Successors: [0x1ae, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V120 = CALLVALUE
0x1a9: V121 = ISZERO V120
0x1aa: V122 = 0x1b2
0x1ad: JUMPI 0x1b2 V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V123 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b2
[0x1b2:0x1c7]
---
Predecessors: [0x1a7]
Successors: [0x53f]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x1c8
0x1b6 PUSH1 0x4
0x1b8 DUP1
0x1b9 DUP1
0x1ba CALLDATALOAD
0x1bb SWAP1
0x1bc PUSH1 0x20
0x1be ADD
0x1bf SWAP1
0x1c0 SWAP2
0x1c1 SWAP1
0x1c2 POP
0x1c3 POP
0x1c4 PUSH2 0x53f
0x1c7 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V124 = 0x1c8
0x1b6: V125 = 0x4
0x1ba: V126 = CALLDATALOAD 0x4
0x1bc: V127 = 0x20
0x1be: V128 = ADD 0x20 0x4
0x1c4: V129 = 0x53f
0x1c7: JUMP 0x53f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c8, V126]
Exit stack: [V11, 0x1c8, V126]

================================

Block 0x1c8
[0x1c8:0x1c9]
---
Predecessors: [0x59c]
Successors: []
---
0x1c8 JUMPDEST
0x1c9 STOP
---
0x1c8: JUMPDEST 
0x1c9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ca
[0x1ca:0x1e1]
---
Predecessors: [0x85]
Successors: [0x1e2, 0x1ee]
---
0x1ca JUMPDEST
0x1cb PUSH1 0x1
0x1cd PUSH1 0x0
0x1cf SWAP1
0x1d0 SLOAD
0x1d1 SWAP1
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 SWAP1
0x1d7 DIV
0x1d8 PUSH1 0xff
0x1da AND
0x1db ISZERO
0x1dc DUP1
0x1dd ISZERO
0x1de PUSH2 0x1ee
0x1e1 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V130 = 0x1
0x1cd: V131 = 0x0
0x1d0: V132 = S[0x1]
0x1d2: V133 = 0x100
0x1d5: V134 = EXP 0x100 0x0
0x1d7: V135 = DIV V132 0x1
0x1d8: V136 = 0xff
0x1da: V137 = AND 0xff V135
0x1db: V138 = ISZERO V137
0x1dd: V139 = ISZERO V138
0x1de: V140 = 0x1ee
0x1e1: JUMPI 0x1ee V139
---
Entry stack: [V11, 0x9f, V38]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V11, 0x9f, V38, V138]

================================

Block 0x1e2
[0x1e2:0x1ed]
---
Predecessors: [0x1ca]
Successors: [0x1ee]
---
0x1e2 POP
0x1e3 PUSH8 0xde0b6b3a7640000
0x1ec CALLVALUE
0x1ed GT
---
0x1e3: V141 = 0xde0b6b3a7640000
0x1ec: V142 = CALLVALUE
0x1ed: V143 = GT V142 0xde0b6b3a7640000
---
Entry stack: [V11, 0x9f, V38, V138]
Stack pops: 1
Stack additions: [V143]
Exit stack: [V11, 0x9f, V38, V143]

================================

Block 0x1ee
[0x1ee:0x1f3]
---
Predecessors: [0x1ca, 0x1e2]
Successors: [0x1f4, 0x202]
---
0x1ee JUMPDEST
0x1ef DUP1
0x1f0 PUSH2 0x202
0x1f3 JUMPI
---
0x1ee: JUMPDEST 
0x1f0: V144 = 0x202
0x1f3: JUMPI 0x202 S0
---
Entry stack: [V11, 0x9f, V38, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x9f, V38, S0]

================================

Block 0x1f4
[0x1f4:0x201]
---
Predecessors: [0x1ee]
Successors: [0x202]
---
0x1f4 POP
0x1f5 PUSH1 0x0
0x1f7 PUSH1 0x1
0x1f9 MUL
0x1fa PUSH1 0x0
0x1fc SLOAD
0x1fd PUSH1 0x0
0x1ff NOT
0x200 AND
0x201 EQ
---
0x1f5: V145 = 0x0
0x1f7: V146 = 0x1
0x1f9: V147 = MUL 0x1 0x0
0x1fa: V148 = 0x0
0x1fc: V149 = S[0x0]
0x1fd: V150 = 0x0
0x1ff: V151 = NOT 0x0
0x200: V152 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V149
0x201: V153 = EQ V152 0x0
---
Entry stack: [V11, 0x9f, V38, S0]
Stack pops: 1
Stack additions: [V153]
Exit stack: [V11, 0x9f, V38, V153]

================================

Block 0x202
[0x202:0x207]
---
Predecessors: [0x1ee, 0x1f4]
Successors: [0x208, 0x25a]
---
0x202 JUMPDEST
0x203 ISZERO
0x204 PUSH2 0x25a
0x207 JUMPI
---
0x202: JUMPDEST 
0x203: V154 = ISZERO S0
0x204: V155 = 0x25a
0x207: JUMPI 0x25a V154
---
Entry stack: [V11, 0x9f, V38, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x9f, V38]

================================

Block 0x208
[0x208:0x259]
---
Predecessors: [0x202]
Successors: [0x25a]
---
0x208 DUP1
0x209 PUSH1 0x0
0x20b DUP2
0x20c PUSH1 0x0
0x20e NOT
0x20f AND
0x210 SWAP1
0x211 SSTORE
0x212 POP
0x213 CALLER
0x214 PUSH1 0x1
0x216 DUP1
0x217 PUSH2 0x100
0x21a EXP
0x21b DUP2
0x21c SLOAD
0x21d DUP2
0x21e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x233 MUL
0x234 NOT
0x235 AND
0x236 SWAP1
0x237 DUP4
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e MUL
0x24f OR
0x250 SWAP1
0x251 SSTORE
0x252 POP
0x253 TIMESTAMP
0x254 PUSH1 0x3
0x256 DUP2
0x257 SWAP1
0x258 SSTORE
0x259 POP
---
0x209: V156 = 0x0
0x20c: V157 = 0x0
0x20e: V158 = NOT 0x0
0x20f: V159 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V38
0x211: S[0x0] = V159
0x213: V160 = CALLER
0x214: V161 = 0x1
0x217: V162 = 0x100
0x21a: V163 = EXP 0x100 0x1
0x21c: V164 = S[0x1]
0x21e: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x233: V166 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x100
0x234: V167 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x235: V168 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V164
0x238: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x24e: V171 = MUL V170 0x100
0x24f: V172 = OR V171 V168
0x251: S[0x1] = V172
0x253: V173 = TIMESTAMP
0x254: V174 = 0x3
0x258: S[0x3] = V173
---
Entry stack: [V11, 0x9f, V38]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x9f, V38]

================================

Block 0x25a
[0x25a:0x25c]
---
Predecessors: [0x202, 0x208]
Successors: [0x9f]
---
0x25a JUMPDEST
0x25b POP
0x25c JUMP
---
0x25a: JUMPDEST 
0x25c: JUMP 0x9f
---
Entry stack: [V11, 0x9f, V38]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x25d
[0x25d:0x28c]
---
Predecessors: [0xa1]
Successors: [0x28d, 0x293]
---
0x25d JUMPDEST
0x25e DUP2
0x25f DUP2
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP1
0x264 DUP4
0x265 DUP4
0x266 DUP1
0x267 DUP3
0x268 DUP5
0x269 CALLDATACOPY
0x26a DUP3
0x26b ADD
0x26c SWAP2
0x26d POP
0x26e POP
0x26f SWAP3
0x270 POP
0x271 POP
0x272 POP
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 SWAP2
0x278 SUB
0x279 SWAP1
0x27a SHA3
0x27b PUSH1 0x0
0x27d NOT
0x27e AND
0x27f PUSH1 0x0
0x281 SLOAD
0x282 PUSH1 0x0
0x284 NOT
0x285 AND
0x286 EQ
0x287 DUP1
0x288 ISZERO
0x289 PUSH2 0x293
0x28c JUMPI
---
0x25d: JUMPDEST 
0x260: V175 = 0x40
0x262: V176 = M[0x40]
0x269: CALLDATACOPY V176 V50 V48
0x26b: V177 = ADD V176 V48
0x273: V178 = 0x40
0x275: V179 = M[0x40]
0x278: V180 = SUB V177 V179
0x27a: V181 = SHA3 V179 V180
0x27b: V182 = 0x0
0x27d: V183 = NOT 0x0
0x27e: V184 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V181
0x27f: V185 = 0x0
0x281: V186 = S[0x0]
0x282: V187 = 0x0
0x284: V188 = NOT 0x0
0x285: V189 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V186
0x286: V190 = EQ V189 V184
0x288: V191 = ISZERO V190
0x289: V192 = 0x293
0x28c: JUMPI 0x293 V191
---
Entry stack: [V11, 0xc2, V50, V48]
Stack pops: 2
Stack additions: [S1, S0, V190]
Exit stack: [V11, 0xc2, V50, V48, V190]

================================

Block 0x28d
[0x28d:0x292]
---
Predecessors: [0x25d]
Successors: [0x293]
---
0x28d POP
0x28e PUSH1 0x3
0x290 SLOAD
0x291 TIMESTAMP
0x292 GT
---
0x28e: V193 = 0x3
0x290: V194 = S[0x3]
0x291: V195 = TIMESTAMP
0x292: V196 = GT V195 V194
---
Entry stack: [V11, 0xc2, V50, V48, V190]
Stack pops: 1
Stack additions: [V196]
Exit stack: [V11, 0xc2, V50, V48, V196]

================================

Block 0x293
[0x293:0x298]
---
Predecessors: [0x25d, 0x28d]
Successors: [0x299, 0x2f0]
---
0x293 JUMPDEST
0x294 ISZERO
0x295 PUSH2 0x2f0
0x298 JUMPI
---
0x293: JUMPDEST 
0x294: V197 = ISZERO S0
0x295: V198 = 0x2f0
0x298: JUMPI 0x2f0 V197
---
Entry stack: [V11, 0xc2, V50, V48, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc2, V50, V48]

================================

Block 0x299
[0x299:0x2ea]
---
Predecessors: [0x293]
Successors: [0x2eb, 0x2ef]
---
0x299 CALLER
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 PUSH2 0x8fc
0x2b3 ADDRESS
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca BALANCE
0x2cb SWAP1
0x2cc DUP2
0x2cd ISZERO
0x2ce MUL
0x2cf SWAP1
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 PUSH1 0x0
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 DUP4
0x2da SUB
0x2db DUP2
0x2dc DUP6
0x2dd DUP9
0x2de DUP9
0x2df CALL
0x2e0 SWAP4
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 ISZERO
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x299: V199 = CALLER
0x29a: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x2b0: V202 = 0x8fc
0x2b3: V203 = ADDRESS
0x2b4: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x2ca: V206 = BALANCE V205
0x2cd: V207 = ISZERO V206
0x2ce: V208 = MUL V207 0x8fc
0x2d0: V209 = 0x40
0x2d2: V210 = M[0x40]
0x2d3: V211 = 0x0
0x2d5: V212 = 0x40
0x2d7: V213 = M[0x40]
0x2da: V214 = SUB V210 V213
0x2df: V215 = CALL V208 V201 V206 V213 V214 V213 0x0
0x2e5: V216 = ISZERO V215
0x2e6: V217 = ISZERO V216
0x2e7: V218 = 0x2ef
0x2ea: JUMPI 0x2ef V217
---
Entry stack: [V11, 0xc2, V50, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc2, V50, V48]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x299]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V219 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc2, V50, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc2, V50, V48]

================================

Block 0x2ef
[0x2ef:0x2ef]
---
Predecessors: [0x299]
Successors: [0x2f0]
---
0x2ef JUMPDEST
---
0x2ef: JUMPDEST 
---
Entry stack: [V11, 0xc2, V50, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc2, V50, V48]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x293, 0x2ef]
Successors: [0xc2]
---
0x2f0 JUMPDEST
0x2f1 POP
0x2f2 POP
0x2f3 JUMP
---
0x2f0: JUMPDEST 
0x2f3: JUMP 0xc2
---
Entry stack: [V11, 0xc2, V50, V48]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f4
[0x2f4:0x307]
---
Predecessors: [0xcf]
Successors: [0x308, 0x359]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x0
0x2f7 SLOAD
0x2f8 PUSH1 0x0
0x2fa NOT
0x2fb AND
0x2fc DUP2
0x2fd PUSH1 0x0
0x2ff NOT
0x300 AND
0x301 EQ
0x302 DUP1
0x303 ISZERO
0x304 PUSH2 0x359
0x307 JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V220 = 0x0
0x2f7: V221 = S[0x0]
0x2f8: V222 = 0x0
0x2fa: V223 = NOT 0x0
0x2fb: V224 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V221
0x2fd: V225 = 0x0
0x2ff: V226 = NOT 0x0
0x300: V227 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V61
0x301: V228 = EQ V227 V224
0x303: V229 = ISZERO V228
0x304: V230 = 0x359
0x307: JUMPI 0x359 V229
---
Entry stack: [V11, 0xe9, V61]
Stack pops: 1
Stack additions: [S0, V228]
Exit stack: [V11, 0xe9, V61, V228]

================================

Block 0x308
[0x308:0x358]
---
Predecessors: [0x2f4]
Successors: [0x359]
---
0x308 POP
0x309 PUSH1 0x1
0x30b DUP1
0x30c SWAP1
0x30d SLOAD
0x30e SWAP1
0x30f PUSH2 0x100
0x312 EXP
0x313 SWAP1
0x314 DIV
0x315 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32a AND
0x32b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x340 AND
0x341 CALLER
0x342 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x357 AND
0x358 EQ
---
0x309: V231 = 0x1
0x30d: V232 = S[0x1]
0x30f: V233 = 0x100
0x312: V234 = EXP 0x100 0x1
0x314: V235 = DIV V232 0x100
0x315: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x32b: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x340: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x341: V240 = CALLER
0x342: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x357: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x358: V243 = EQ V242 V239
---
Entry stack: [V11, 0xe9, V61, V228]
Stack pops: 1
Stack additions: [V243]
Exit stack: [V11, 0xe9, V61, V243]

================================

Block 0x359
[0x359:0x35e]
---
Predecessors: [0x2f4, 0x308]
Successors: [0x35f, 0x379]
---
0x359 JUMPDEST
0x35a ISZERO
0x35b PUSH2 0x379
0x35e JUMPI
---
0x359: JUMPDEST 
0x35a: V244 = ISZERO S0
0x35b: V245 = 0x379
0x35e: JUMPI 0x379 V244
---
Entry stack: [V11, 0xe9, V61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe9, V61]

================================

Block 0x35f
[0x35f:0x378]
---
Predecessors: [0x359]
Successors: [0x379]
---
0x35f PUSH1 0x1
0x361 DUP1
0x362 PUSH1 0x0
0x364 PUSH2 0x100
0x367 EXP
0x368 DUP2
0x369 SLOAD
0x36a DUP2
0x36b PUSH1 0xff
0x36d MUL
0x36e NOT
0x36f AND
0x370 SWAP1
0x371 DUP4
0x372 ISZERO
0x373 ISZERO
0x374 MUL
0x375 OR
0x376 SWAP1
0x377 SSTORE
0x378 POP
---
0x35f: V246 = 0x1
0x362: V247 = 0x0
0x364: V248 = 0x100
0x367: V249 = EXP 0x100 0x0
0x369: V250 = S[0x1]
0x36b: V251 = 0xff
0x36d: V252 = MUL 0xff 0x1
0x36e: V253 = NOT 0xff
0x36f: V254 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V250
0x372: V255 = ISZERO 0x1
0x373: V256 = ISZERO 0x0
0x374: V257 = MUL 0x1 0x1
0x375: V258 = OR 0x1 V254
0x377: S[0x1] = V258
---
Entry stack: [V11, 0xe9, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V61]

================================

Block 0x379
[0x379:0x37b]
---
Predecessors: [0x359, 0x35f]
Successors: [0xe9]
---
0x379 JUMPDEST
0x37a POP
0x37b JUMP
---
0x379: JUMPDEST 
0x37b: JUMP 0xe9
---
Entry stack: [V11, 0xe9, V61]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x37c
[0x37c:0x3d1]
---
Predecessors: [0xf6]
Successors: [0x3d2, 0x413]
---
0x37c JUMPDEST
0x37d PUSH1 0x1
0x37f DUP1
0x380 SWAP1
0x381 SLOAD
0x382 SWAP1
0x383 PUSH2 0x100
0x386 EXP
0x387 SWAP1
0x388 DIV
0x389 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39e AND
0x39f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b4 AND
0x3b5 CALLER
0x3b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cb AND
0x3cc EQ
0x3cd ISZERO
0x3ce PUSH2 0x413
0x3d1 JUMPI
---
0x37c: JUMPDEST 
0x37d: V259 = 0x1
0x381: V260 = S[0x1]
0x383: V261 = 0x100
0x386: V262 = EXP 0x100 0x1
0x388: V263 = DIV V260 0x100
0x389: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x39f: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x3b5: V268 = CALLER
0x3b6: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x3cc: V271 = EQ V270 V267
0x3cd: V272 = ISZERO V271
0x3ce: V273 = 0x413
0x3d1: JUMPI 0x413 V272
---
Entry stack: [V11, 0x122, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x122, V73]

================================

Block 0x3d2
[0x3d2:0x412]
---
Predecessors: [0x37c]
Successors: [0x413]
---
0x3d2 DUP1
0x3d3 PUSH1 0x2
0x3d5 PUSH1 0x0
0x3d7 PUSH2 0x100
0x3da EXP
0x3db DUP2
0x3dc SLOAD
0x3dd DUP2
0x3de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f3 MUL
0x3f4 NOT
0x3f5 AND
0x3f6 SWAP1
0x3f7 DUP4
0x3f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40d AND
0x40e MUL
0x40f OR
0x410 SWAP1
0x411 SSTORE
0x412 POP
---
0x3d3: V274 = 0x2
0x3d5: V275 = 0x0
0x3d7: V276 = 0x100
0x3da: V277 = EXP 0x100 0x0
0x3dc: V278 = S[0x2]
0x3de: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f3: V280 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3f4: V281 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V282 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V278
0x3f8: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x40e: V285 = MUL V284 0x1
0x40f: V286 = OR V285 V282
0x411: S[0x2] = V286
---
Entry stack: [V11, 0x122, V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x122, V73]

================================

Block 0x413
[0x413:0x415]
---
Predecessors: [0x37c, 0x3d2]
Successors: [0x122]
---
0x413 JUMPDEST
0x414 POP
0x415 JUMP
---
0x413: JUMPDEST 
0x415: JUMP 0x122
---
Entry stack: [V11, 0x122, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x416
[0x416:0x428]
---
Predecessors: [0x12f]
Successors: [0x429]
---
0x416 JUMPDEST
0x417 PUSH1 0x0
0x419 DUP2
0x41a PUSH1 0x40
0x41c MLOAD
0x41d DUP1
0x41e DUP3
0x41f DUP1
0x420 MLOAD
0x421 SWAP1
0x422 PUSH1 0x20
0x424 ADD
0x425 SWAP1
0x426 DUP1
0x427 DUP4
0x428 DUP4
---
0x416: JUMPDEST 
0x417: V287 = 0x0
0x41a: V288 = 0x40
0x41c: V289 = M[0x40]
0x420: V290 = M[V98]
0x422: V291 = 0x20
0x424: V292 = ADD 0x20 V98
---
Entry stack: [V11, 0x17f, V98]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V289, V289, V292, V290, V290, V289, V292]
Exit stack: [V11, 0x17f, V98, 0x0, V98, V289, V289, V292, V290, V290, V289, V292]

================================

Block 0x429
[0x429:0x433]
---
Predecessors: [0x416, 0x434]
Successors: [0x434, 0x44e]
---
0x429 JUMPDEST
0x42a PUSH1 0x20
0x42c DUP4
0x42d LT
0x42e ISZERO
0x42f ISZERO
0x430 PUSH2 0x44e
0x433 JUMPI
---
0x429: JUMPDEST 
0x42a: V293 = 0x20
0x42d: V294 = LT S2 0x20
0x42e: V295 = ISZERO V294
0x42f: V296 = ISZERO V295
0x430: V297 = 0x44e
0x433: JUMPI 0x44e V296
---
Entry stack: [V11, 0x17f, V98, 0x0, V98, V289, V289, V292, V290, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x17f, V98, 0x0, V98, V289, V289, V292, V290, S2, S1, S0]

================================

Block 0x434
[0x434:0x44d]
---
Predecessors: [0x429]
Successors: [0x429]
---
0x434 DUP1
0x435 MLOAD
0x436 DUP3
0x437 MSTORE
0x438 PUSH1 0x20
0x43a DUP3
0x43b ADD
0x43c SWAP2
0x43d POP
0x43e PUSH1 0x20
0x440 DUP2
0x441 ADD
0x442 SWAP1
0x443 POP
0x444 PUSH1 0x20
0x446 DUP4
0x447 SUB
0x448 SWAP3
0x449 POP
0x44a PUSH2 0x429
0x44d JUMP
---
0x435: V298 = M[S0]
0x437: M[S1] = V298
0x438: V299 = 0x20
0x43b: V300 = ADD S1 0x20
0x43e: V301 = 0x20
0x441: V302 = ADD S0 0x20
0x444: V303 = 0x20
0x447: V304 = SUB S2 0x20
0x44a: V305 = 0x429
0x44d: JUMP 0x429
---
Entry stack: [V11, 0x17f, V98, 0x0, V98, V289, V289, V292, V290, S2, S1, S0]
Stack pops: 3
Stack additions: [V304, V300, V302]
Exit stack: [V11, 0x17f, V98, 0x0, V98, V289, V289, V292, V290, V304, V300, V302]

================================

Block 0x44e
[0x44e:0x481]
---
Predecessors: [0x429]
Successors: [0x17f]
---
0x44e JUMPDEST
0x44f PUSH1 0x1
0x451 DUP4
0x452 PUSH1 0x20
0x454 SUB
0x455 PUSH2 0x100
0x458 EXP
0x459 SUB
0x45a DUP1
0x45b NOT
0x45c DUP3
0x45d MLOAD
0x45e AND
0x45f DUP2
0x460 DUP5
0x461 MLOAD
0x462 AND
0x463 DUP1
0x464 DUP3
0x465 OR
0x466 DUP6
0x467 MSTORE
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c POP
0x46d POP
0x46e SWAP1
0x46f POP
0x470 ADD
0x471 SWAP2
0x472 POP
0x473 POP
0x474 PUSH1 0x40
0x476 MLOAD
0x477 DUP1
0x478 SWAP2
0x479 SUB
0x47a SWAP1
0x47b SHA3
0x47c SWAP1
0x47d POP
0x47e SWAP2
0x47f SWAP1
0x480 POP
0x481 JUMP
---
0x44e: JUMPDEST 
0x44f: V306 = 0x1
0x452: V307 = 0x20
0x454: V308 = SUB 0x20 S2
0x455: V309 = 0x100
0x458: V310 = EXP 0x100 V308
0x459: V311 = SUB V310 0x1
0x45b: V312 = NOT V311
0x45d: V313 = M[S0]
0x45e: V314 = AND V313 V312
0x461: V315 = M[S1]
0x462: V316 = AND V315 V311
0x465: V317 = OR V314 V316
0x467: M[S1] = V317
0x470: V318 = ADD V290 V289
0x474: V319 = 0x40
0x476: V320 = M[0x40]
0x479: V321 = SUB V318 V320
0x47b: V322 = SHA3 V320 V321
0x481: JUMP 0x17f
---
Entry stack: [V11, 0x17f, V98, 0x0, V98, V289, V289, V292, V290, S2, S1, S0]
Stack pops: 11
Stack additions: [V322]
Exit stack: [V11, V322]

================================

Block 0x482
[0x482:0x4d9]
---
Predecessors: [0x19d]
Successors: [0x4da, 0x4e0]
---
0x482 JUMPDEST
0x483 PUSH1 0x2
0x485 PUSH1 0x0
0x487 SWAP1
0x488 SLOAD
0x489 SWAP1
0x48a PUSH2 0x100
0x48d EXP
0x48e SWAP1
0x48f DIV
0x490 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a5 AND
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc CALLER
0x4bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d2 AND
0x4d3 EQ
0x4d4 DUP1
0x4d5 ISZERO
0x4d6 PUSH2 0x4e0
0x4d9 JUMPI
---
0x482: JUMPDEST 
0x483: V323 = 0x2
0x485: V324 = 0x0
0x488: V325 = S[0x2]
0x48a: V326 = 0x100
0x48d: V327 = EXP 0x100 0x0
0x48f: V328 = DIV V325 0x1
0x490: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a5: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x4a6: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x4bc: V333 = CALLER
0x4bd: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d2: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x4d3: V336 = EQ V335 V332
0x4d5: V337 = ISZERO V336
0x4d6: V338 = 0x4e0
0x4d9: JUMPI 0x4e0 V337
---
Entry stack: [V11, 0x1a5]
Stack pops: 0
Stack additions: [V336]
Exit stack: [V11, 0x1a5, V336]

================================

Block 0x4da
[0x4da:0x4df]
---
Predecessors: [0x482]
Successors: [0x4e0]
---
0x4da POP
0x4db PUSH1 0x3
0x4dd SLOAD
0x4de TIMESTAMP
0x4df GT
---
0x4db: V339 = 0x3
0x4dd: V340 = S[0x3]
0x4de: V341 = TIMESTAMP
0x4df: V342 = GT V341 V340
---
Entry stack: [V11, 0x1a5, V336]
Stack pops: 1
Stack additions: [V342]
Exit stack: [V11, 0x1a5, V342]

================================

Block 0x4e0
[0x4e0:0x4e5]
---
Predecessors: [0x482, 0x4da]
Successors: [0x4e6, 0x53d]
---
0x4e0 JUMPDEST
0x4e1 ISZERO
0x4e2 PUSH2 0x53d
0x4e5 JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V343 = ISZERO S0
0x4e2: V344 = 0x53d
0x4e5: JUMPI 0x53d V343
---
Entry stack: [V11, 0x1a5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a5]

================================

Block 0x4e6
[0x4e6:0x537]
---
Predecessors: [0x4e0]
Successors: [0x538, 0x53c]
---
0x4e6 CALLER
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd PUSH2 0x8fc
0x500 ADDRESS
0x501 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x516 AND
0x517 BALANCE
0x518 SWAP1
0x519 DUP2
0x51a ISZERO
0x51b MUL
0x51c SWAP1
0x51d PUSH1 0x40
0x51f MLOAD
0x520 PUSH1 0x0
0x522 PUSH1 0x40
0x524 MLOAD
0x525 DUP1
0x526 DUP4
0x527 SUB
0x528 DUP2
0x529 DUP6
0x52a DUP9
0x52b DUP9
0x52c CALL
0x52d SWAP4
0x52e POP
0x52f POP
0x530 POP
0x531 POP
0x532 ISZERO
0x533 ISZERO
0x534 PUSH2 0x53c
0x537 JUMPI
---
0x4e6: V345 = CALLER
0x4e7: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x4fd: V348 = 0x8fc
0x500: V349 = ADDRESS
0x501: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x516: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x517: V352 = BALANCE V351
0x51a: V353 = ISZERO V352
0x51b: V354 = MUL V353 0x8fc
0x51d: V355 = 0x40
0x51f: V356 = M[0x40]
0x520: V357 = 0x0
0x522: V358 = 0x40
0x524: V359 = M[0x40]
0x527: V360 = SUB V356 V359
0x52c: V361 = CALL V354 V347 V352 V359 V360 V359 0x0
0x532: V362 = ISZERO V361
0x533: V363 = ISZERO V362
0x534: V364 = 0x53c
0x537: JUMPI 0x53c V363
---
Entry stack: [V11, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a5]

================================

Block 0x538
[0x538:0x53b]
---
Predecessors: [0x4e6]
Successors: []
---
0x538 PUSH1 0x0
0x53a DUP1
0x53b REVERT
---
0x538: V365 = 0x0
0x53b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a5]

================================

Block 0x53c
[0x53c:0x53c]
---
Predecessors: [0x4e6]
Successors: [0x53d]
---
0x53c JUMPDEST
---
0x53c: JUMPDEST 
---
Entry stack: [V11, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a5]

================================

Block 0x53d
[0x53d:0x53e]
---
Predecessors: [0x4e0, 0x53c]
Successors: [0x1a5]
---
0x53d JUMPDEST
0x53e JUMP
---
0x53d: JUMPDEST 
0x53e: JUMP 0x1a5
---
Entry stack: [V11, 0x1a5]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x53f
[0x53f:0x594]
---
Predecessors: [0x1b2]
Successors: [0x595, 0x59c]
---
0x53f JUMPDEST
0x540 PUSH1 0x1
0x542 DUP1
0x543 SWAP1
0x544 SLOAD
0x545 SWAP1
0x546 PUSH2 0x100
0x549 EXP
0x54a SWAP1
0x54b DIV
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x577 AND
0x578 CALLER
0x579 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58e AND
0x58f EQ
0x590 ISZERO
0x591 PUSH2 0x59c
0x594 JUMPI
---
0x53f: JUMPDEST 
0x540: V366 = 0x1
0x544: V367 = S[0x1]
0x546: V368 = 0x100
0x549: V369 = EXP 0x100 0x1
0x54b: V370 = DIV V367 0x100
0x54c: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x562: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x577: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x578: V375 = CALLER
0x579: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x58f: V378 = EQ V377 V374
0x590: V379 = ISZERO V378
0x591: V380 = 0x59c
0x594: JUMPI 0x59c V379
---
Entry stack: [V11, 0x1c8, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c8, V126]

================================

Block 0x595
[0x595:0x59b]
---
Predecessors: [0x53f]
Successors: [0x59c]
---
0x595 DUP1
0x596 PUSH1 0x3
0x598 DUP2
0x599 SWAP1
0x59a SSTORE
0x59b POP
---
0x596: V381 = 0x3
0x59a: S[0x3] = V126
---
Entry stack: [V11, 0x1c8, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1c8, V126]

================================

Block 0x59c
[0x59c:0x59e]
---
Predecessors: [0x53f, 0x595]
Successors: [0x1c8]
---
0x59c JUMPDEST
0x59d POP
0x59e JUMP
---
0x59c: JUMPDEST 
0x59e: JUMP 0x1c8
---
Entry stack: [V11, 0x1c8, V126]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x59f
[0x59f:0x5bd]
---
Predecessors: []
Successors: [0x5be]
Has unresolved jump.
---
0x59f STOP
0x5a0 LOG1
0x5a1 PUSH6 0x627a7a723058
0x5a8 SHA3
0x5a9 MISSING 0x4f
0x5aa MISSING 0xa7
0x5ab DUP2
0x5ac MISSING 0xb8
0x5ad MISSING 0xcd
0x5ae SIGNEXTEND
0x5af MISSING 0xe
0x5b0 MISSING 0xb6
0x5b1 CREATE
0x5b2 EXTCODESIZE
0x5b3 MISSING 0xe3
0x5b4 PC
0x5b5 MISSING 0x2c
0x5b6 MOD
0x5b7 MISSING 0xca
0x5b8 MISSING 0xfc
0x5b9 MISSING 0x48
0x5ba MISSING 0xec
0x5bb MISSING 0x5e
0x5bc JUMP
0x5bd JUMPI
---
0x59f: STOP 
0x5a0: LOG S0 S1 S2
0x5a1: V382 = 0x627a7a723058
0x5a8: V383 = SHA3 0x627a7a723058 S3
0x5a9: MISSING 0x4f
0x5aa: MISSING 0xa7
0x5ac: MISSING 0xb8
0x5ad: MISSING 0xcd
0x5ae: V384 = SIGNEXTEND S0 S1
0x5af: MISSING 0xe
0x5b0: MISSING 0xb6
0x5b1: V385 = CREATE S0 S1 S2
0x5b2: V386 = EXTCODESIZE V385
0x5b3: MISSING 0xe3
0x5b4: V387 = PC
0x5b5: MISSING 0x2c
0x5b6: V388 = MOD S0 S1
0x5b7: MISSING 0xca
0x5b8: MISSING 0xfc
0x5b9: MISSING 0x48
0x5ba: MISSING 0xec
0x5bb: MISSING 0x5e
0x5bc: JUMP S0
0x5bd: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V383, S1, S0, S1, V384, V386, V387, V388]
Exit stack: []

================================

Block 0x5be
[0x5be:0x5ce]
---
Predecessors: [0x59f]
Successors: []
---
0x5be SSTORE
0x5bf MISSING 0xbd
0x5c0 MISSING 0xd2
0x5c1 BLOCKHASH
0x5c2 MISSING 0xea
0x5c3 PUSH11 0xc301ebf5df0029
---
0x5be: S[S0] = S1
0x5bf: MISSING 0xbd
0x5c0: MISSING 0xd2
0x5c1: V389 = BLOCKHASH S0
0x5c2: MISSING 0xea
0x5c3: V390 = 0xc301ebf5df0029
---
Entry stack: []
Stack pops: 15
Stack additions: [0xc301ebf5df0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x85
Exit block: 0x9f
Body: 0x85, 0x9f, 0x1ca, 0x1e2, 0x1ee, 0x1f4, 0x202, 0x208, 0x25a

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0xa1
Exit block: 0xc2
Body: 0xa1, 0xc2, 0x25d, 0x28d, 0x293, 0x299, 0x2eb, 0x2ef, 0x2f0

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xc4
Exit block: 0xe9
Body: 0xc4, 0xcb, 0xcf, 0xe9, 0x2f4, 0x308, 0x359, 0x35f, 0x379

Function 3:
Public function signature: 0x410c8005
Entry block: 0xeb
Exit block: 0x122
Body: 0xeb, 0xf2, 0xf6, 0x122, 0x37c, 0x3d2, 0x413

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x124
Exit block: 0x17f
Body: 0x124, 0x12b, 0x12f, 0x17f, 0x416, 0x429, 0x434, 0x44e

Function 5:
Public function signature: 0xbea948c8
Entry block: 0x19d
Exit block: 0x538
Body: 0x19d, 0x1a5, 0x482, 0x4da, 0x4e0, 0x4e6, 0x538, 0x53c, 0x53d

Function 6:
Public function signature: 0xdac47a71
Entry block: 0x1a7
Exit block: 0x1c8
Body: 0x1a7, 0x1ae, 0x1b2, 0x1c8, 0x53f, 0x595, 0x59c

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

