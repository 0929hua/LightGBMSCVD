Block 0x0
[0x0:0x1f]
---
Predecessors: []
Successors: []
---
0x0 PUSH20 0x0
0x15 ADDRESS
0x16 EQ
0x17 PUSH1 0x80
0x19 PUSH1 0x40
0x1b MSTORE
0x1c PUSH1 0x0
0x1e DUP1
0x1f REVERT
---
0x0: V0 = 0x0
0x15: V1 = ADDRESS
0x16: V2 = EQ V1 0x0
0x17: V3 = 0x80
0x19: V4 = 0x40
0x1b: M[0x40] = 0x80
0x1c: V5 = 0x0
0x1f: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0x20
[0x20:0x58]
---
Predecessors: []
Successors: [0x59]
---
0x20 STOP
0x21 LOG1
0x22 PUSH6 0x627a7a723058
0x29 SHA3
0x2a ADDMOD
0x2b MISSING 0x5f
0x2c EQ
0x2d MISSING 0xdf
0x2e EXTCODECOPY
0x2f MISSING 0xe6
0x30 DUP3
0x31 EXP
0x32 MISSING 0x28
0x33 PUSH21 0x755712f9f36316809ccf79feabb480e5bcbc32be70
0x49 PUSH9 0x2960806040526004
0x53 CALLDATASIZE
0x54 LT
0x55 PUSH2 0x83
0x58 JUMPI
---
0x20: STOP 
0x21: LOG S0 S1 S2
0x22: V6 = 0x627a7a723058
0x29: V7 = SHA3 0x627a7a723058 S3
0x2a: V8 = ADDMOD V7 S4 S5
0x2b: MISSING 0x5f
0x2c: V9 = EQ S0 S1
0x2d: MISSING 0xdf
0x2e: EXTCODECOPY S0 S1 S2 S3
0x2f: MISSING 0xe6
0x31: V10 = EXP S2 S0
0x32: MISSING 0x28
0x33: V11 = 0x755712f9f36316809ccf79feabb480e5bcbc32be70
0x49: V12 = 0x2960806040526004
0x53: V13 = CALLDATASIZE
0x54: V14 = LT V13 0x2960806040526004
0x55: V15 = 0x83
0x58: THROWI V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V8, V9, V10, S1, S2, 0x755712f9f36316809ccf79feabb480e5bcbc32be70]
Exit stack: []

================================

Block 0x59
[0x59:0x8c]
---
Predecessors: [0x20]
Successors: [0x8d]
---
0x59 PUSH1 0x0
0x5b CALLDATALOAD
0x5c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a SWAP1
0x7b DIV
0x7c PUSH4 0xffffffff
0x81 AND
0x82 DUP1
0x83 PUSH4 0x12065fe0
0x88 EQ
0x89 PUSH2 0x88
0x8c JUMPI
---
0x59: V16 = 0x0
0x5b: V17 = CALLDATALOAD 0x0
0x5c: V18 = 0x100000000000000000000000000000000000000000000000000000000
0x7b: V19 = DIV V17 0x100000000000000000000000000000000000000000000000000000000
0x7c: V20 = 0xffffffff
0x81: V21 = AND 0xffffffff V19
0x83: V22 = 0x12065fe0
0x88: V23 = EQ 0x12065fe0 V21
0x89: V24 = 0x88
0x8c: THROWI V23
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70]
Stack pops: 0
Stack additions: [V21]
Exit stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x59]
Successors: [0x98]
---
0x8d DUP1
0x8e PUSH4 0x1b338710
0x93 EQ
0x94 PUSH2 0xb3
0x97 JUMPI
---
0x8e: V25 = 0x1b338710
0x93: V26 = EQ 0x1b338710 V21
0x94: V27 = 0xb3
0x97: THROWI V26
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3]
---
0x98 DUP1
0x99 PUSH4 0x3ccfd60b
0x9e EQ
0x9f PUSH2 0xf4
0xa2 JUMPI
---
0x99: V28 = 0x3ccfd60b
0x9e: V29 = EQ 0x3ccfd60b V21
0x9f: V30 = 0xf4
0xa2: THROWI V29
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x10b]
---
0xa3 DUP1
0xa4 PUSH4 0x72d475db
0xa9 EQ
0xaa PUSH2 0x10b
0xad JUMPI
---
0xa4: V31 = 0x72d475db
0xa9: V32 = EQ 0x72d475db V21
0xaa: V33 = 0x10b
0xad: JUMPI 0x10b V32
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x14c]
---
0xae DUP1
0xaf PUSH4 0x82ab890a
0xb4 EQ
0xb5 PUSH2 0x14c
0xb8 JUMPI
---
0xaf: V34 = 0x82ab890a
0xb4: V35 = EQ 0x82ab890a V21
0xb5: V36 = 0x14c
0xb8: JUMPI 0x14c V35
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4]
---
0xb9 DUP1
0xba PUSH4 0xcd68100c
0xbf EQ
0xc0 PUSH2 0x16c
0xc3 JUMPI
---
0xba: V37 = 0xcd68100c
0xbf: V38 = EQ 0xcd68100c V21
0xc0: V39 = 0x16c
0xc3: THROWI V38
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf]
---
0xc4 DUP1
0xc5 PUSH4 0xce606ee0
0xca EQ
0xcb PUSH2 0x1c3
0xce JUMPI
---
0xc5: V40 = 0xce606ee0
0xca: V41 = EQ 0xce606ee0 V21
0xcb: V42 = 0x1c3
0xce: THROWI V41
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]

================================

Block 0xcf
[0xcf:0xdb]
---
Predecessors: [0xc4]
Successors: [0xdc]
---
0xcf JUMPDEST
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 DUP1
0xd7 ISZERO
0xd8 PUSH2 0x94
0xdb JUMPI
---
0xcf: JUMPDEST 
0xd0: V43 = 0x0
0xd3: REVERT 0x0 0x0
0xd4: JUMPDEST 
0xd5: V44 = CALLVALUE
0xd7: V45 = ISZERO V44
0xd8: V46 = 0x94
0xdb: THROWI V45
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 0
Stack additions: [V44]
Exit stack: []

================================

Block 0xdc
[0xdc:0x106]
---
Predecessors: [0xcf]
Successors: [0x107]
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
0xe0 JUMPDEST
0xe1 POP
0xe2 PUSH2 0x9d
0xe5 PUSH2 0x21a
0xe8 JUMP
0xe9 JUMPDEST
0xea PUSH1 0x40
0xec MLOAD
0xed DUP1
0xee DUP3
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP2
0xf5 POP
0xf6 POP
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa DUP1
0xfb SWAP2
0xfc SUB
0xfd SWAP1
0xfe RETURN
0xff JUMPDEST
0x100 CALLVALUE
0x101 DUP1
0x102 ISZERO
0x103 PUSH2 0xbf
0x106 JUMPI
---
0xdc: V47 = 0x0
0xdf: REVERT 0x0 0x0
0xe0: JUMPDEST 
0xe2: V48 = 0x9d
0xe5: V49 = 0x21a
0xe8: THROW 
0xe9: JUMPDEST 
0xea: V50 = 0x40
0xec: V51 = M[0x40]
0xf0: M[V51] = S0
0xf1: V52 = 0x20
0xf3: V53 = ADD 0x20 V51
0xf7: V54 = 0x40
0xf9: V55 = M[0x40]
0xfc: V56 = SUB V53 V55
0xfe: RETURN V55 V56
0xff: JUMPDEST 
0x100: V57 = CALLVALUE
0x102: V58 = ISZERO V57
0x103: V59 = 0xbf
0x106: THROWI V58
---
Entry stack: [V44]
Stack pops: 0
Stack additions: [0x9d, V57]
Exit stack: []

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0xdc]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V60 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V57]
Stack pops: 0
Stack additions: []
Exit stack: [V57]

================================

Block 0x10b
[0x10b:0x147]
---
Predecessors: [0xa3]
Successors: [0x148]
---
0x10b JUMPDEST
0x10c POP
0x10d PUSH2 0xde
0x110 PUSH1 0x4
0x112 DUP1
0x113 CALLDATASIZE
0x114 SUB
0x115 DUP2
0x116 ADD
0x117 SWAP1
0x118 DUP1
0x119 DUP1
0x11a CALLDATALOAD
0x11b SWAP1
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 SWAP3
0x121 SWAP2
0x122 SWAP1
0x123 POP
0x124 POP
0x125 POP
0x126 PUSH2 0x239
0x129 JUMP
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP3
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP2
0x136 POP
0x137 POP
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c SWAP2
0x13d SUB
0x13e SWAP1
0x13f RETURN
0x140 JUMPDEST
0x141 CALLVALUE
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x100
0x147 JUMPI
---
0x10b: JUMPDEST 
0x10d: V61 = 0xde
0x110: V62 = 0x4
0x113: V63 = CALLDATASIZE
0x114: V64 = SUB V63 0x4
0x116: V65 = ADD 0x4 V64
0x11a: V66 = CALLDATALOAD 0x4
0x11c: V67 = 0x20
0x11e: V68 = ADD 0x20 0x4
0x126: V69 = 0x239
0x129: THROW 
0x12a: JUMPDEST 
0x12b: V70 = 0x40
0x12d: V71 = M[0x40]
0x131: M[V71] = S0
0x132: V72 = 0x20
0x134: V73 = ADD 0x20 V71
0x138: V74 = 0x40
0x13a: V75 = M[0x40]
0x13d: V76 = SUB V73 V75
0x13f: RETURN V75 V76
0x140: JUMPDEST 
0x141: V77 = CALLVALUE
0x143: V78 = ISZERO V77
0x144: V79 = 0x100
0x147: THROWI V78
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 1
Stack additions: [V77]
Exit stack: []

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x10b]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V80 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V77]
Stack pops: 0
Stack additions: []
Exit stack: [V77]

================================

Block 0x14c
[0x14c:0x15e]
---
Predecessors: [0xae]
Successors: [0x15f]
---
0x14c JUMPDEST
0x14d POP
0x14e PUSH2 0x109
0x151 PUSH2 0x251
0x154 JUMP
0x155 JUMPDEST
0x156 STOP
0x157 JUMPDEST
0x158 CALLVALUE
0x159 DUP1
0x15a ISZERO
0x15b PUSH2 0x117
0x15e JUMPI
---
0x14c: JUMPDEST 
0x14e: V81 = 0x109
0x151: V82 = 0x251
0x154: THROW 
0x155: JUMPDEST 
0x156: STOP 
0x157: JUMPDEST 
0x158: V83 = CALLVALUE
0x15a: V84 = ISZERO V83
0x15b: V85 = 0x117
0x15e: THROWI V84
---
Entry stack: [0x755712f9f36316809ccf79feabb480e5bcbc32be70, V21]
Stack pops: 2
Stack additions: [V83]
Exit stack: []

================================

Block 0x15f
[0x15f:0x1bf]
---
Predecessors: [0x14c]
Successors: [0x1c0]
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
0x163 JUMPDEST
0x164 POP
0x165 PUSH2 0x136
0x168 PUSH1 0x4
0x16a DUP1
0x16b CALLDATASIZE
0x16c SUB
0x16d DUP2
0x16e ADD
0x16f SWAP1
0x170 DUP1
0x171 DUP1
0x172 CALLDATALOAD
0x173 SWAP1
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP1
0x178 SWAP3
0x179 SWAP2
0x17a SWAP1
0x17b POP
0x17c POP
0x17d POP
0x17e PUSH2 0x32d
0x181 JUMP
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 MLOAD
0x186 DUP1
0x187 DUP3
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP2
0x18e POP
0x18f POP
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 SWAP2
0x195 SUB
0x196 SWAP1
0x197 RETURN
0x198 JUMPDEST
0x199 PUSH2 0x16a
0x19c PUSH1 0x4
0x19e DUP1
0x19f CALLDATASIZE
0x1a0 SUB
0x1a1 DUP2
0x1a2 ADD
0x1a3 SWAP1
0x1a4 DUP1
0x1a5 DUP1
0x1a6 CALLDATALOAD
0x1a7 SWAP1
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab SWAP1
0x1ac SWAP3
0x1ad SWAP2
0x1ae SWAP1
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 PUSH2 0x34a
0x1b5 JUMP
0x1b6 JUMPDEST
0x1b7 STOP
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba DUP1
0x1bb ISZERO
0x1bc PUSH2 0x178
0x1bf JUMPI
---
0x15f: V86 = 0x0
0x162: REVERT 0x0 0x0
0x163: JUMPDEST 
0x165: V87 = 0x136
0x168: V88 = 0x4
0x16b: V89 = CALLDATASIZE
0x16c: V90 = SUB V89 0x4
0x16e: V91 = ADD 0x4 V90
0x172: V92 = CALLDATALOAD 0x4
0x174: V93 = 0x20
0x176: V94 = ADD 0x20 0x4
0x17e: V95 = 0x32d
0x181: THROW 
0x182: JUMPDEST 
0x183: V96 = 0x40
0x185: V97 = M[0x40]
0x189: M[V97] = S0
0x18a: V98 = 0x20
0x18c: V99 = ADD 0x20 V97
0x190: V100 = 0x40
0x192: V101 = M[0x40]
0x195: V102 = SUB V99 V101
0x197: RETURN V101 V102
0x198: JUMPDEST 
0x199: V103 = 0x16a
0x19c: V104 = 0x4
0x19f: V105 = CALLDATASIZE
0x1a0: V106 = SUB V105 0x4
0x1a2: V107 = ADD 0x4 V106
0x1a6: V108 = CALLDATALOAD 0x4
0x1a8: V109 = 0x20
0x1aa: V110 = ADD 0x20 0x4
0x1b2: V111 = 0x34a
0x1b5: THROW 
0x1b6: JUMPDEST 
0x1b7: STOP 
0x1b8: JUMPDEST 
0x1b9: V112 = CALLVALUE
0x1bb: V113 = ISZERO V112
0x1bc: V114 = 0x178
0x1bf: THROWI V113
---
Entry stack: [V83]
Stack pops: 0
Stack additions: [V92, 0x136, V108, 0x16a, V112]
Exit stack: []

================================

Block 0x1c0
[0x1c0:0x216]
---
Predecessors: [0x15f]
Successors: [0x217]
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 PUSH2 0x181
0x1c9 PUSH2 0x44c
0x1cc JUMP
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 DUP3
0x1d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e8 AND
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 SWAP2
0x205 POP
0x206 POP
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b SWAP2
0x20c SUB
0x20d SWAP1
0x20e RETURN
0x20f JUMPDEST
0x210 CALLVALUE
0x211 DUP1
0x212 ISZERO
0x213 PUSH2 0x1cf
0x216 JUMPI
---
0x1c0: V115 = 0x0
0x1c3: REVERT 0x0 0x0
0x1c4: JUMPDEST 
0x1c6: V116 = 0x181
0x1c9: V117 = 0x44c
0x1cc: THROW 
0x1cd: JUMPDEST 
0x1ce: V118 = 0x40
0x1d0: V119 = M[0x40]
0x1d3: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1e9: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x200: M[V119] = V123
0x201: V124 = 0x20
0x203: V125 = ADD 0x20 V119
0x207: V126 = 0x40
0x209: V127 = M[0x40]
0x20c: V128 = SUB V125 V127
0x20e: RETURN V127 V128
0x20f: JUMPDEST 
0x210: V129 = CALLVALUE
0x212: V130 = ISZERO V129
0x213: V131 = 0x1cf
0x216: THROWI V130
---
Entry stack: [V112]
Stack pops: 0
Stack additions: [0x181, V129]
Exit stack: []

================================

Block 0x217
[0x217:0x2f3]
---
Predecessors: [0x1c0]
Successors: [0x2f4]
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
0x21b JUMPDEST
0x21c POP
0x21d PUSH2 0x1d8
0x220 PUSH2 0x472
0x223 JUMP
0x224 JUMPDEST
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP1
0x229 DUP3
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 AND
0x256 DUP2
0x257 MSTORE
0x258 PUSH1 0x20
0x25a ADD
0x25b SWAP2
0x25c POP
0x25d POP
0x25e PUSH1 0x40
0x260 MLOAD
0x261 DUP1
0x262 SWAP2
0x263 SUB
0x264 SWAP1
0x265 RETURN
0x266 JUMPDEST
0x267 PUSH1 0x0
0x269 ADDRESS
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 BALANCE
0x281 SWAP1
0x282 POP
0x283 SWAP1
0x284 JUMP
0x285 JUMPDEST
0x286 PUSH1 0x2
0x288 PUSH1 0x20
0x28a MSTORE
0x28b DUP1
0x28c PUSH1 0x0
0x28e MSTORE
0x28f PUSH1 0x40
0x291 PUSH1 0x0
0x293 SHA3
0x294 PUSH1 0x0
0x296 SWAP2
0x297 POP
0x298 SWAP1
0x299 POP
0x29a SLOAD
0x29b DUP2
0x29c JUMP
0x29d JUMPDEST
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 SWAP1
0x2a2 SLOAD
0x2a3 SWAP1
0x2a4 PUSH2 0x100
0x2a7 EXP
0x2a8 SWAP1
0x2a9 DIV
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d5 AND
0x2d6 CALLER
0x2d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ec AND
0x2ed EQ
0x2ee ISZERO
0x2ef ISZERO
0x2f0 PUSH2 0x2ac
0x2f3 JUMPI
---
0x217: V132 = 0x0
0x21a: REVERT 0x0 0x0
0x21b: JUMPDEST 
0x21d: V133 = 0x1d8
0x220: V134 = 0x472
0x223: THROW 
0x224: JUMPDEST 
0x225: V135 = 0x40
0x227: V136 = M[0x40]
0x22a: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x240: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x257: M[V136] = V140
0x258: V141 = 0x20
0x25a: V142 = ADD 0x20 V136
0x25e: V143 = 0x40
0x260: V144 = M[0x40]
0x263: V145 = SUB V142 V144
0x265: RETURN V144 V145
0x266: JUMPDEST 
0x267: V146 = 0x0
0x269: V147 = ADDRESS
0x26a: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x280: V150 = BALANCE V149
0x284: JUMP S0
0x285: JUMPDEST 
0x286: V151 = 0x2
0x288: V152 = 0x20
0x28a: M[0x20] = 0x2
0x28c: V153 = 0x0
0x28e: M[0x0] = S0
0x28f: V154 = 0x40
0x291: V155 = 0x0
0x293: V156 = SHA3 0x0 0x40
0x294: V157 = 0x0
0x29a: V158 = S[V156]
0x29c: JUMP S1
0x29d: JUMPDEST 
0x29e: V159 = 0x0
0x2a2: V160 = S[0x0]
0x2a4: V161 = 0x100
0x2a7: V162 = EXP 0x100 0x0
0x2a9: V163 = DIV V160 0x1
0x2aa: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2c0: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2d6: V168 = CALLER
0x2d7: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ec: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2ed: V171 = EQ V170 V167
0x2ee: V172 = ISZERO V171
0x2ef: V173 = ISZERO V172
0x2f0: V174 = 0x2ac
0x2f3: THROWI V173
---
Entry stack: [V129]
Stack pops: 0
Stack additions: [0x1d8, V150, V158, S1]
Exit stack: []

================================

Block 0x2f4
[0x2f4:0x36c]
---
Predecessors: [0x217]
Successors: [0x36d]
---
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 REVERT
0x2f8 JUMPDEST
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc SWAP1
0x2fd SLOAD
0x2fe SWAP1
0x2ff PUSH2 0x100
0x302 EXP
0x303 SWAP1
0x304 DIV
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a AND
0x31b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x330 AND
0x331 PUSH2 0x8fc
0x334 ADDRESS
0x335 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34a AND
0x34b BALANCE
0x34c SWAP1
0x34d DUP2
0x34e ISZERO
0x34f MUL
0x350 SWAP1
0x351 PUSH1 0x40
0x353 MLOAD
0x354 PUSH1 0x0
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP1
0x35a DUP4
0x35b SUB
0x35c DUP2
0x35d DUP6
0x35e DUP9
0x35f DUP9
0x360 CALL
0x361 SWAP4
0x362 POP
0x363 POP
0x364 POP
0x365 POP
0x366 ISZERO
0x367 DUP1
0x368 ISZERO
0x369 PUSH2 0x32a
0x36c JUMPI
---
0x2f4: V175 = 0x0
0x2f7: REVERT 0x0 0x0
0x2f8: JUMPDEST 
0x2f9: V176 = 0x0
0x2fd: V177 = S[0x0]
0x2ff: V178 = 0x100
0x302: V179 = EXP 0x100 0x0
0x304: V180 = DIV V177 0x1
0x305: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x31b: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x330: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x331: V185 = 0x8fc
0x334: V186 = ADDRESS
0x335: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x34b: V189 = BALANCE V188
0x34e: V190 = ISZERO V189
0x34f: V191 = MUL V190 0x8fc
0x351: V192 = 0x40
0x353: V193 = M[0x40]
0x354: V194 = 0x0
0x356: V195 = 0x40
0x358: V196 = M[0x40]
0x35b: V197 = SUB V193 V196
0x360: V198 = CALL V191 V184 V189 V196 V197 V196 0x0
0x366: V199 = ISZERO V198
0x368: V200 = ISZERO V199
0x369: V201 = 0x32a
0x36c: THROWI V200
---
Entry stack: []
Stack pops: 0
Stack additions: [V199]
Exit stack: []

================================

Block 0x36d
[0x36d:0x3a6]
---
Predecessors: [0x2f4]
Successors: [0x3a7]
---
0x36d RETURNDATASIZE
0x36e PUSH1 0x0
0x370 DUP1
0x371 RETURNDATACOPY
0x372 RETURNDATASIZE
0x373 PUSH1 0x0
0x375 REVERT
0x376 JUMPDEST
0x377 POP
0x378 JUMP
0x379 JUMPDEST
0x37a PUSH1 0x0
0x37c PUSH1 0x2
0x37e PUSH1 0x0
0x380 DUP4
0x381 DUP2
0x382 MSTORE
0x383 PUSH1 0x20
0x385 ADD
0x386 SWAP1
0x387 DUP2
0x388 MSTORE
0x389 PUSH1 0x20
0x38b ADD
0x38c PUSH1 0x0
0x38e SHA3
0x38f SLOAD
0x390 SWAP1
0x391 POP
0x392 SWAP2
0x393 SWAP1
0x394 POP
0x395 JUMP
0x396 JUMPDEST
0x397 PUSH7 0x6c00a3912c000
0x39f CALLVALUE
0x3a0 GT
0x3a1 ISZERO
0x3a2 ISZERO
0x3a3 PUSH2 0x35f
0x3a6 JUMPI
---
0x36d: V202 = RETURNDATASIZE
0x36e: V203 = 0x0
0x371: RETURNDATACOPY 0x0 0x0 V202
0x372: V204 = RETURNDATASIZE
0x373: V205 = 0x0
0x375: REVERT 0x0 V204
0x376: JUMPDEST 
0x378: JUMP S1
0x379: JUMPDEST 
0x37a: V206 = 0x0
0x37c: V207 = 0x2
0x37e: V208 = 0x0
0x382: M[0x0] = S0
0x383: V209 = 0x20
0x385: V210 = ADD 0x20 0x0
0x388: M[0x20] = 0x2
0x389: V211 = 0x20
0x38b: V212 = ADD 0x20 0x20
0x38c: V213 = 0x0
0x38e: V214 = SHA3 0x0 0x40
0x38f: V215 = S[V214]
0x395: JUMP S1
0x396: JUMPDEST 
0x397: V216 = 0x6c00a3912c000
0x39f: V217 = CALLVALUE
0x3a0: V218 = GT V217 0x6c00a3912c000
0x3a1: V219 = ISZERO V218
0x3a2: V220 = ISZERO V219
0x3a3: V221 = 0x35f
0x3a6: THROWI V220
---
Entry stack: [V199]
Stack pops: 0
Stack additions: [V215]
Exit stack: []

================================

Block 0x3a7
[0x3a7:0x449]
---
Predecessors: [0x36d]
Successors: [0x44a]
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
0x3ab JUMPDEST
0x3ac CALLVALUE
0x3ad PUSH1 0x2
0x3af PUSH1 0x0
0x3b1 DUP4
0x3b2 DUP2
0x3b3 MSTORE
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP1
0x3b8 DUP2
0x3b9 MSTORE
0x3ba PUSH1 0x20
0x3bc ADD
0x3bd PUSH1 0x0
0x3bf SHA3
0x3c0 SLOAD
0x3c1 ADD
0x3c2 PUSH1 0x2
0x3c4 PUSH1 0x0
0x3c6 DUP4
0x3c7 DUP2
0x3c8 MSTORE
0x3c9 PUSH1 0x20
0x3cb ADD
0x3cc SWAP1
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 PUSH1 0x0
0x3d4 SHA3
0x3d5 DUP2
0x3d6 SWAP1
0x3d7 SSTORE
0x3d8 POP
0x3d9 PUSH1 0x1
0x3db PUSH1 0x0
0x3dd SWAP1
0x3de SLOAD
0x3df SWAP1
0x3e0 PUSH2 0x100
0x3e3 EXP
0x3e4 SWAP1
0x3e5 DIV
0x3e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fb AND
0x3fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x411 AND
0x412 PUSH2 0x8fc
0x415 PUSH2 0x3dc
0x418 PUSH1 0x2
0x41a CALLVALUE
0x41b PUSH2 0x497
0x41e SWAP1
0x41f SWAP2
0x420 SWAP1
0x421 PUSH4 0xffffffff
0x426 AND
0x427 JUMP
0x428 JUMPDEST
0x429 SWAP1
0x42a DUP2
0x42b ISZERO
0x42c MUL
0x42d SWAP1
0x42e PUSH1 0x40
0x430 MLOAD
0x431 PUSH1 0x0
0x433 PUSH1 0x40
0x435 MLOAD
0x436 DUP1
0x437 DUP4
0x438 SUB
0x439 DUP2
0x43a DUP6
0x43b DUP9
0x43c DUP9
0x43d CALL
0x43e SWAP4
0x43f POP
0x440 POP
0x441 POP
0x442 POP
0x443 ISZERO
0x444 DUP1
0x445 ISZERO
0x446 PUSH2 0x407
0x449 JUMPI
---
0x3a7: V222 = 0x0
0x3aa: REVERT 0x0 0x0
0x3ab: JUMPDEST 
0x3ac: V223 = CALLVALUE
0x3ad: V224 = 0x2
0x3af: V225 = 0x0
0x3b3: M[0x0] = S0
0x3b4: V226 = 0x20
0x3b6: V227 = ADD 0x20 0x0
0x3b9: M[0x20] = 0x2
0x3ba: V228 = 0x20
0x3bc: V229 = ADD 0x20 0x20
0x3bd: V230 = 0x0
0x3bf: V231 = SHA3 0x0 0x40
0x3c0: V232 = S[V231]
0x3c1: V233 = ADD V232 V223
0x3c2: V234 = 0x2
0x3c4: V235 = 0x0
0x3c8: M[0x0] = S0
0x3c9: V236 = 0x20
0x3cb: V237 = ADD 0x20 0x0
0x3ce: M[0x20] = 0x2
0x3cf: V238 = 0x20
0x3d1: V239 = ADD 0x20 0x20
0x3d2: V240 = 0x0
0x3d4: V241 = SHA3 0x0 0x40
0x3d7: S[V241] = V233
0x3d9: V242 = 0x1
0x3db: V243 = 0x0
0x3de: V244 = S[0x1]
0x3e0: V245 = 0x100
0x3e3: V246 = EXP 0x100 0x0
0x3e5: V247 = DIV V244 0x1
0x3e6: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fb: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x3fc: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x411: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x412: V252 = 0x8fc
0x415: V253 = 0x3dc
0x418: V254 = 0x2
0x41a: V255 = CALLVALUE
0x41b: V256 = 0x497
0x421: V257 = 0xffffffff
0x426: V258 = AND 0xffffffff 0x497
0x427: THROW 
0x428: JUMPDEST 
0x42b: V259 = ISZERO S0
0x42c: V260 = MUL V259 S1
0x42e: V261 = 0x40
0x430: V262 = M[0x40]
0x431: V263 = 0x0
0x433: V264 = 0x40
0x435: V265 = M[0x40]
0x438: V266 = SUB V262 V265
0x43d: V267 = CALL V260 S2 S0 V265 V266 V265 0x0
0x443: V268 = ISZERO V267
0x445: V269 = ISZERO V268
0x446: V270 = 0x407
0x449: THROWI V269
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2, V255, 0x3dc, 0x8fc, V251, S0, V268]
Exit stack: []

================================

Block 0x44a
[0x44a:0x4ee]
---
Predecessors: [0x3a7]
Successors: [0x4ef]
---
0x44a RETURNDATASIZE
0x44b PUSH1 0x0
0x44d DUP1
0x44e RETURNDATACOPY
0x44f RETURNDATASIZE
0x450 PUSH1 0x0
0x452 REVERT
0x453 JUMPDEST
0x454 POP
0x455 CALLER
0x456 PUSH1 0x1
0x458 PUSH1 0x0
0x45a PUSH2 0x100
0x45d EXP
0x45e DUP2
0x45f SLOAD
0x460 DUP2
0x461 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x476 MUL
0x477 NOT
0x478 AND
0x479 SWAP1
0x47a DUP4
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 MUL
0x492 OR
0x493 SWAP1
0x494 SSTORE
0x495 POP
0x496 POP
0x497 JUMP
0x498 JUMPDEST
0x499 PUSH1 0x1
0x49b PUSH1 0x0
0x49d SWAP1
0x49e SLOAD
0x49f SWAP1
0x4a0 PUSH2 0x100
0x4a3 EXP
0x4a4 SWAP1
0x4a5 DIV
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc DUP2
0x4bd JUMP
0x4be JUMPDEST
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 SWAP1
0x4c3 SLOAD
0x4c4 SWAP1
0x4c5 PUSH2 0x100
0x4c8 EXP
0x4c9 SWAP1
0x4ca DIV
0x4cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e0 AND
0x4e1 DUP2
0x4e2 JUMP
0x4e3 JUMPDEST
0x4e4 PUSH1 0x0
0x4e6 DUP2
0x4e7 DUP4
0x4e8 DUP2
0x4e9 ISZERO
0x4ea ISZERO
0x4eb PUSH2 0x4a4
0x4ee JUMPI
---
0x44a: V271 = RETURNDATASIZE
0x44b: V272 = 0x0
0x44e: RETURNDATACOPY 0x0 0x0 V271
0x44f: V273 = RETURNDATASIZE
0x450: V274 = 0x0
0x452: REVERT 0x0 V273
0x453: JUMPDEST 
0x455: V275 = CALLER
0x456: V276 = 0x1
0x458: V277 = 0x0
0x45a: V278 = 0x100
0x45d: V279 = EXP 0x100 0x0
0x45f: V280 = S[0x1]
0x461: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x476: V282 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x477: V283 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x478: V284 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V280
0x47b: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x491: V287 = MUL V286 0x1
0x492: V288 = OR V287 V284
0x494: S[0x1] = V288
0x497: JUMP S2
0x498: JUMPDEST 
0x499: V289 = 0x1
0x49b: V290 = 0x0
0x49e: V291 = S[0x1]
0x4a0: V292 = 0x100
0x4a3: V293 = EXP 0x100 0x0
0x4a5: V294 = DIV V291 0x1
0x4a6: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x4bd: JUMP S0
0x4be: JUMPDEST 
0x4bf: V297 = 0x0
0x4c3: V298 = S[0x0]
0x4c5: V299 = 0x100
0x4c8: V300 = EXP 0x100 0x0
0x4ca: V301 = DIV V298 0x1
0x4cb: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e0: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x4e2: JUMP S0
0x4e3: JUMPDEST 
0x4e4: V304 = 0x0
0x4e9: V305 = ISZERO S0
0x4ea: V306 = ISZERO V305
0x4eb: V307 = 0x4a4
0x4ee: THROWI V306
---
Entry stack: [V268]
Stack pops: 0
Stack additions: [V296, S0, V303, S0, S1, S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x4ef
[0x4ef:0x530]
---
Predecessors: [0x44a]
Successors: []
---
0x4ef INVALID
0x4f0 JUMPDEST
0x4f1 DIV
0x4f2 SWAP1
0x4f3 POP
0x4f4 SWAP3
0x4f5 SWAP2
0x4f6 POP
0x4f7 POP
0x4f8 JUMP
0x4f9 STOP
0x4fa LOG1
0x4fb PUSH6 0x627a7a723058
0x502 SHA3
0x503 SWAP16
0x504 MISSING 0xbd
0x505 MISSING 0xaf
0x506 MISSING 0xe2
0x507 CALLVALUE
0x508 PUSH20 0x25cf6ce1ceed76dd018fa9a217a661b079dfbd77
0x51d MISSING 0xdb
0x51e MISSING 0x2e
0x51f MISSING 0x2a
0x520 PUSH16 0x47f60029
---
0x4ef: INVALID 
0x4f0: JUMPDEST 
0x4f1: V308 = DIV S0 S1
0x4f8: JUMP S5
0x4f9: STOP 
0x4fa: LOG S0 S1 S2
0x4fb: V309 = 0x627a7a723058
0x502: V310 = SHA3 0x627a7a723058 S3
0x504: MISSING 0xbd
0x505: MISSING 0xaf
0x506: MISSING 0xe2
0x507: V311 = CALLVALUE
0x508: V312 = 0x25cf6ce1ceed76dd018fa9a217a661b079dfbd77
0x51d: MISSING 0xdb
0x51e: MISSING 0x2e
0x51f: MISSING 0x2a
0x520: V313 = 0x47f60029
---
Entry stack: [S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V308, S19, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V310, 0x25cf6ce1ceed76dd018fa9a217a661b079dfbd77, V311, 0x47f60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x72d475db
Entry block: 0x10b
Exit block: 0x148
Body: 0x10b, 0x148

Function 1:
Public function signature: 0x82ab890a
Entry block: 0x14c
Exit block: 0x4ef
Body: 0x14c, 0x15f, 0x1c0, 0x217, 0x2f4, 0x36d, 0x3a7, 0x44a, 0x4ef

Function 2:
Public function signature: 0xce606ee0
Entry block: 0xcf
Exit block: 0x107
Body: 0xcf, 0xdc, 0x107

Function 3:
Public fallback function
Entry block: 0xcf
Exit block: 0xcf
Body: 0xcf

