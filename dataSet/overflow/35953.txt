Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x4fb2e45d
0x34 EQ
0x35 PUSH2 0x49
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x4fb2e45d
0x34: V9 = EQ 0x4fb2e45d V7
0x35: V10 = 0x49
0x38: JUMPI 0x49 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x82]
---
0x39 DUP1
0x3a PUSH4 0xb4a99a4e
0x3f EQ
0x40 PUSH2 0x82
0x43 JUMPI
---
0x3a: V11 = 0xb4a99a4e
0x3f: V12 = EQ 0xb4a99a4e V7
0x40: V13 = 0x82
0x43: JUMPI 0x82 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x48]
---
Predecessors: [0x39]
Successors: []
---
0x44 JUMPDEST
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x44: JUMPDEST 
0x45: V14 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0x4f]
---
Predecessors: [0x0]
Successors: [0x50, 0x54]
---
0x49 JUMPDEST
0x4a CALLVALUE
0x4b ISZERO
0x4c PUSH2 0x54
0x4f JUMPI
---
0x49: JUMPDEST 
0x4a: V15 = CALLVALUE
0x4b: V16 = ISZERO V15
0x4c: V17 = 0x54
0x4f: JUMPI 0x54 V16
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x50
[0x50:0x53]
---
Predecessors: [0x49]
Successors: []
---
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x50: V18 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x7f]
---
Predecessors: [0x49]
Successors: [0xd7]
---
0x54 JUMPDEST
0x55 PUSH2 0x80
0x58 PUSH1 0x4
0x5a DUP1
0x5b DUP1
0x5c CALLDATALOAD
0x5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72 AND
0x73 SWAP1
0x74 PUSH1 0x20
0x76 ADD
0x77 SWAP1
0x78 SWAP2
0x79 SWAP1
0x7a POP
0x7b POP
0x7c PUSH2 0xd7
0x7f JUMP
---
0x54: JUMPDEST 
0x55: V19 = 0x80
0x58: V20 = 0x4
0x5c: V21 = CALLDATALOAD 0x4
0x5d: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x72: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x74: V24 = 0x20
0x76: V25 = ADD 0x20 0x4
0x7c: V26 = 0xd7
0x7f: JUMP 0xd7
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x80, V23]
Exit stack: [V7, 0x80, V23]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: [0x190]
Successors: []
---
0x80 JUMPDEST
0x81 STOP
---
0x80: JUMPDEST 
0x81: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x39]
Successors: [0x89, 0x8d]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V27 = CALLVALUE
0x84: V28 = ISZERO V27
0x85: V29 = 0x8d
0x88: JUMPI 0x8d V28
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x82]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V30 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x82]
Successors: [0x193]
---
0x8d JUMPDEST
0x8e PUSH2 0x95
0x91 PUSH2 0x193
0x94 JUMP
---
0x8d: JUMPDEST 
0x8e: V31 = 0x95
0x91: V32 = 0x193
0x94: JUMP 0x193
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x95]
Exit stack: [V7, 0x95]

================================

Block 0x95
[0x95:0xd6]
---
Predecessors: [0x193]
Successors: []
---
0x95 JUMPDEST
0x96 PUSH1 0x40
0x98 MLOAD
0x99 DUP1
0x9a DUP3
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc SWAP2
0xcd POP
0xce POP
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 RETURN
---
0x95: JUMPDEST 
0x96: V33 = 0x40
0x98: V34 = M[0x40]
0x9b: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0xb1: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xc8: M[V34] = V38
0xc9: V39 = 0x20
0xcb: V40 = ADD 0x20 V34
0xcf: V41 = 0x40
0xd1: V42 = M[0x40]
0xd4: V43 = SUB V40 V42
0xd6: RETURN V42 V43
---
Entry stack: [V7, 0x95, V85]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x95]

================================

Block 0xd7
[0xd7:0x12c]
---
Predecessors: [0x54]
Successors: [0x12d, 0x18f]
---
0xd7 JUMPDEST
0xd8 CALLER
0xd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee AND
0xef PUSH1 0x0
0xf1 DUP1
0xf2 SWAP1
0xf3 SLOAD
0xf4 SWAP1
0xf5 PUSH2 0x100
0xf8 EXP
0xf9 SWAP1
0xfa DIV
0xfb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110 AND
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 EQ
0x128 ISZERO
0x129 PUSH2 0x18f
0x12c JUMPI
---
0xd7: JUMPDEST 
0xd8: V44 = CALLER
0xd9: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xee: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xef: V47 = 0x0
0xf3: V48 = S[0x0]
0xf5: V49 = 0x100
0xf8: V50 = EXP 0x100 0x0
0xfa: V51 = DIV V48 0x1
0xfb: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0x110: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x111: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x127: V56 = EQ V55 V46
0x128: V57 = ISZERO V56
0x129: V58 = 0x18f
0x12c: JUMPI 0x18f V57
---
Entry stack: [V7, 0x80, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x80, V23]

================================

Block 0x12d
[0x12d:0x14c]
---
Predecessors: [0xd7]
Successors: [0x14d, 0x18d]
---
0x12d PUSH1 0x0
0x12f ADDRESS
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 BALANCE
0x147 EQ
0x148 ISZERO
0x149 PUSH2 0x18d
0x14c JUMPI
---
0x12d: V59 = 0x0
0x12f: V60 = ADDRESS
0x130: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x146: V63 = BALANCE V62
0x147: V64 = EQ V63 0x0
0x148: V65 = ISZERO V64
0x149: V66 = 0x18d
0x14c: JUMPI 0x18d V65
---
Entry stack: [V7, 0x80, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x80, V23]

================================

Block 0x14d
[0x14d:0x18c]
---
Predecessors: [0x12d]
Successors: [0x18d]
---
0x14d DUP1
0x14e PUSH1 0x0
0x150 DUP1
0x151 PUSH2 0x100
0x154 EXP
0x155 DUP2
0x156 SLOAD
0x157 DUP2
0x158 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16d MUL
0x16e NOT
0x16f AND
0x170 SWAP1
0x171 DUP4
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 MUL
0x189 OR
0x18a SWAP1
0x18b SSTORE
0x18c POP
---
0x14e: V67 = 0x0
0x151: V68 = 0x100
0x154: V69 = EXP 0x100 0x0
0x156: V70 = S[0x0]
0x158: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V72 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x16e: V73 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V74 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V70
0x172: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x188: V77 = MUL V76 0x1
0x189: V78 = OR V77 V74
0x18b: S[0x0] = V78
---
Entry stack: [V7, 0x80, V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x80, V23]

================================

Block 0x18d
[0x18d:0x18d]
---
Predecessors: [0x12d, 0x14d]
Successors: [0x18e]
---
0x18d JUMPDEST
---
0x18d: JUMPDEST 
---
Entry stack: [V7, 0x80, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x80, V23]

================================

Block 0x18e
[0x18e:0x18e]
---
Predecessors: [0x18d]
Successors: [0x18f]
---
0x18e JUMPDEST
---
0x18e: JUMPDEST 
---
Entry stack: [V7, 0x80, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x80, V23]

================================

Block 0x18f
[0x18f:0x18f]
---
Predecessors: [0xd7, 0x18e]
Successors: [0x190]
---
0x18f JUMPDEST
---
0x18f: JUMPDEST 
---
Entry stack: [V7, 0x80, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x80, V23]

================================

Block 0x190
[0x190:0x192]
---
Predecessors: [0x18f]
Successors: [0x80]
---
0x190 JUMPDEST
0x191 POP
0x192 JUMP
---
0x190: JUMPDEST 
0x192: JUMP 0x80
---
Entry stack: [V7, 0x80, V23]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x193
[0x193:0x1b7]
---
Predecessors: [0x8d]
Successors: [0x95]
---
0x193 JUMPDEST
0x194 PUSH1 0x0
0x196 DUP1
0x197 SWAP1
0x198 SLOAD
0x199 SWAP1
0x19a PUSH2 0x100
0x19d EXP
0x19e SWAP1
0x19f DIV
0x1a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b5 AND
0x1b6 DUP2
0x1b7 JUMP
---
0x193: JUMPDEST 
0x194: V79 = 0x0
0x198: V80 = S[0x0]
0x19a: V81 = 0x100
0x19d: V82 = EXP 0x100 0x0
0x19f: V83 = DIV V80 0x1
0x1a0: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1b7: JUMP 0x95
---
Entry stack: [V7, 0x95]
Stack pops: 1
Stack additions: [S0, V85]
Exit stack: [V7, 0x95, V85]

================================

Block 0x1b8
[0x1b8:0x222]
---
Predecessors: []
Successors: [0x223]
---
0x1b8 STOP
0x1b9 LOG1
0x1ba PUSH6 0x627a7a723058
0x1c1 SHA3
0x1c2 MISSING 0x4f
0x1c3 SSTORE
0x1c4 MISSING 0xe6
0x1c5 MISSING 0xee
0x1c6 NOT
0x1c7 MISSING 0xcf
0x1c8 MISSING 0xc8
0x1c9 MISSING 0x29
0x1ca SWAP4
0x1cb MSTORE8
0x1cc MISSING 0xc1
0x1cd MISSING 0xb1
0x1ce MISSING 0xdf
0x1cf DUP10
0x1d0 MISSING 0x2a
0x1d1 SIGNEXTEND
0x1d2 MISSING 0xe5
0x1d3 CODECOPY
0x1d4 SGT
0x1d5 PUSH31 0x1dcc5dc052ef98e21c82461400296060604052361561008c576000357c0100
0x1f5 STOP
0x1f6 STOP
0x1f7 STOP
0x1f8 STOP
0x1f9 STOP
0x1fa STOP
0x1fb STOP
0x1fc STOP
0x1fd STOP
0x1fe STOP
0x1ff STOP
0x200 STOP
0x201 STOP
0x202 STOP
0x203 STOP
0x204 STOP
0x205 STOP
0x206 STOP
0x207 STOP
0x208 STOP
0x209 STOP
0x20a STOP
0x20b STOP
0x20c STOP
0x20d STOP
0x20e STOP
0x20f STOP
0x210 SWAP1
0x211 DIV
0x212 PUSH4 0xffffffff
0x217 AND
0x218 DUP1
0x219 PUSH4 0x2e1a7d4d
0x21e EQ
0x21f PUSH2 0x98
0x222 JUMPI
---
0x1b8: STOP 
0x1b9: LOG S0 S1 S2
0x1ba: V86 = 0x627a7a723058
0x1c1: V87 = SHA3 0x627a7a723058 S3
0x1c2: MISSING 0x4f
0x1c3: S[S0] = S1
0x1c4: MISSING 0xe6
0x1c5: MISSING 0xee
0x1c6: V88 = NOT S0
0x1c7: MISSING 0xcf
0x1c8: MISSING 0xc8
0x1c9: MISSING 0x29
0x1cb: M8[S4] = S1
0x1cc: MISSING 0xc1
0x1cd: MISSING 0xb1
0x1ce: MISSING 0xdf
0x1d0: MISSING 0x2a
0x1d1: V89 = SIGNEXTEND S0 S1
0x1d2: MISSING 0xe5
0x1d3: CODECOPY S0 S1 S2
0x1d4: V90 = SGT S3 S4
0x1d5: V91 = 0x1dcc5dc052ef98e21c82461400296060604052361561008c576000357c0100
0x1f5: STOP 
0x1f6: STOP 
0x1f7: STOP 
0x1f8: STOP 
0x1f9: STOP 
0x1fa: STOP 
0x1fb: STOP 
0x1fc: STOP 
0x1fd: STOP 
0x1fe: STOP 
0x1ff: STOP 
0x200: STOP 
0x201: STOP 
0x202: STOP 
0x203: STOP 
0x204: STOP 
0x205: STOP 
0x206: STOP 
0x207: STOP 
0x208: STOP 
0x209: STOP 
0x20a: STOP 
0x20b: STOP 
0x20c: STOP 
0x20d: STOP 
0x20e: STOP 
0x20f: STOP 
0x211: V92 = DIV S1 S0
0x212: V93 = 0xffffffff
0x217: V94 = AND 0xffffffff V92
0x219: V95 = 0x2e1a7d4d
0x21e: V96 = EQ 0x2e1a7d4d V94
0x21f: V97 = 0x98
0x222: THROWI V96
---
Entry stack: []
Stack pops: 0
Stack additions: [V87, V88, S2, S3, S0, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V89, 0x1dcc5dc052ef98e21c82461400296060604052361561008c576000357c0100, V90, V94]
Exit stack: []

================================

Block 0x223
[0x223:0x22d]
---
Predecessors: [0x1b8]
Successors: [0x22e]
---
0x223 DUP1
0x224 PUSH4 0x41c0e1b5
0x229 EQ
0x22a PUSH2 0xb0
0x22d JUMPI
---
0x224: V98 = 0x41c0e1b5
0x229: V99 = EQ 0x41c0e1b5 V94
0x22a: V100 = 0xb0
0x22d: THROWI V99
---
Entry stack: [V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V94]

================================

Block 0x22e
[0x22e:0x238]
---
Predecessors: [0x223]
Successors: [0x239]
---
0x22e DUP1
0x22f PUSH4 0x4fb2e45d
0x234 EQ
0x235 PUSH2 0xc5
0x238 JUMPI
---
0x22f: V101 = 0x4fb2e45d
0x234: V102 = EQ 0x4fb2e45d V94
0x235: V103 = 0xc5
0x238: THROWI V102
---
Entry stack: [V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V94]

================================

Block 0x239
[0x239:0x243]
---
Predecessors: [0x22e]
Successors: [0x244]
---
0x239 DUP1
0x23a PUSH4 0xb4a99a4e
0x23f EQ
0x240 PUSH2 0xfe
0x243 JUMPI
---
0x23a: V104 = 0xb4a99a4e
0x23f: V105 = EQ 0xb4a99a4e V94
0x240: V106 = 0xfe
0x243: THROWI V105
---
Entry stack: [V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V94]

================================

Block 0x244
[0x244:0x24e]
---
Predecessors: [0x239]
Successors: [0x24f]
---
0x244 DUP1
0x245 PUSH4 0xb7f9c4f6
0x24a EQ
0x24b PUSH2 0x153
0x24e JUMPI
---
0x245: V107 = 0xb7f9c4f6
0x24a: V108 = EQ 0xb7f9c4f6 V94
0x24b: V109 = 0x153
0x24e: THROWI V108
---
Entry stack: [V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V94]

================================

Block 0x24f
[0x24f:0x259]
---
Predecessors: [0x244]
Successors: [0x25a]
---
0x24f DUP1
0x250 PUSH4 0xd0e30db0
0x255 EQ
0x256 PUSH2 0x176
0x259 JUMPI
---
0x250: V110 = 0xd0e30db0
0x255: V111 = EQ 0xd0e30db0 V94
0x256: V112 = 0x176
0x259: THROWI V111
---
Entry stack: [V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V94]

================================

Block 0x25a
[0x25a:0x264]
---
Predecessors: [0x24f]
Successors: [0x265]
---
0x25a DUP1
0x25b PUSH4 0xec8cb281
0x260 EQ
0x261 PUSH2 0x180
0x264 JUMPI
---
0x25b: V113 = 0xec8cb281
0x260: V114 = EQ 0xec8cb281 V94
0x261: V115 = 0x180
0x264: THROWI V114
---
Entry stack: [V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V94]

================================

Block 0x265
[0x265:0x26f]
---
Predecessors: [0x25a]
Successors: [0x270]
---
0x265 DUP1
0x266 PUSH4 0xfc7e286d
0x26b EQ
0x26c PUSH2 0x1a9
0x26f JUMPI
---
0x266: V116 = 0xfc7e286d
0x26b: V117 = EQ 0xfc7e286d V94
0x26c: V118 = 0x1a9
0x26f: THROWI V117
---
Entry stack: [V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V94]

================================

Block 0x270
[0x270:0x270]
---
Predecessors: [0x265]
Successors: [0x271]
---
0x270 JUMPDEST
---
0x270: JUMPDEST 
---
Entry stack: [V94]
Stack pops: 0
Stack additions: []
Exit stack: [V94]

================================

Block 0x271
[0x271:0x279]
---
Predecessors: [0x270]
Successors: [0x27a]
---
0x271 JUMPDEST
0x272 PUSH2 0x95
0x275 PUSH2 0x1f6
0x278 JUMP
0x279 JUMPDEST
---
0x271: JUMPDEST 
0x272: V119 = 0x95
0x275: V120 = 0x1f6
0x278: THROW 
0x279: JUMPDEST 
---
Entry stack: [V94]
Stack pops: 0
Stack additions: [0x95]
Exit stack: []

================================

Block 0x27a
[0x27a:0x29a]
---
Predecessors: [0x271]
Successors: [0x29b]
---
0x27a JUMPDEST
0x27b STOP
0x27c JUMPDEST
0x27d PUSH2 0xae
0x280 PUSH1 0x4
0x282 DUP1
0x283 DUP1
0x284 CALLDATALOAD
0x285 SWAP1
0x286 PUSH1 0x20
0x288 ADD
0x289 SWAP1
0x28a SWAP2
0x28b SWAP1
0x28c POP
0x28d POP
0x28e PUSH2 0x2af
0x291 JUMP
0x292 JUMPDEST
0x293 STOP
0x294 JUMPDEST
0x295 CALLVALUE
0x296 ISZERO
0x297 PUSH2 0xbb
0x29a JUMPI
---
0x27a: JUMPDEST 
0x27b: STOP 
0x27c: JUMPDEST 
0x27d: V121 = 0xae
0x280: V122 = 0x4
0x284: V123 = CALLDATALOAD 0x4
0x286: V124 = 0x20
0x288: V125 = ADD 0x20 0x4
0x28e: V126 = 0x2af
0x291: THROW 
0x292: JUMPDEST 
0x293: STOP 
0x294: JUMPDEST 
0x295: V127 = CALLVALUE
0x296: V128 = ISZERO V127
0x297: V129 = 0xbb
0x29a: THROWI V128
---
Entry stack: []
Stack pops: 0
Stack additions: [V123, 0xae]
Exit stack: []

================================

Block 0x29b
[0x29b:0x2a6]
---
Predecessors: [0x27a]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
0x29f JUMPDEST
0x2a0 PUSH2 0xc3
0x2a3 PUSH2 0x3f5
0x2a6 JUMP
---
0x29b: V130 = 0x0
0x29e: REVERT 0x0 0x0
0x29f: JUMPDEST 
0x2a0: V131 = 0xc3
0x2a3: V132 = 0x3f5
0x2a6: THROW 
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc3]
Exit stack: []

================================

Block 0x2a7
[0x2a7:0x2af]
---
Predecessors: [0x394]
Successors: [0x2b0]
---
0x2a7 JUMPDEST
0x2a8 STOP
0x2a9 JUMPDEST
0x2aa CALLVALUE
0x2ab ISZERO
0x2ac PUSH2 0xd0
0x2af JUMPI
---
0x2a7: JUMPDEST 
0x2a8: STOP 
0x2a9: JUMPDEST 
0x2aa: V133 = CALLVALUE
0x2ab: V134 = ISZERO V133
0x2ac: V135 = 0xd0
0x2af: THROWI V134
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b0
[0x2b0:0x2e8]
---
Predecessors: [0x2a7]
Successors: [0x2e9]
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
0x2b4 JUMPDEST
0x2b5 PUSH2 0xfc
0x2b8 PUSH1 0x4
0x2ba DUP1
0x2bb DUP1
0x2bc CALLDATALOAD
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 SWAP1
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 SWAP1
0x2d8 SWAP2
0x2d9 SWAP1
0x2da POP
0x2db POP
0x2dc PUSH2 0x488
0x2df JUMP
0x2e0 JUMPDEST
0x2e1 STOP
0x2e2 JUMPDEST
0x2e3 CALLVALUE
0x2e4 ISZERO
0x2e5 PUSH2 0x109
0x2e8 JUMPI
---
0x2b0: V136 = 0x0
0x2b3: REVERT 0x0 0x0
0x2b4: JUMPDEST 
0x2b5: V137 = 0xfc
0x2b8: V138 = 0x4
0x2bc: V139 = CALLDATALOAD 0x4
0x2bd: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x2d4: V142 = 0x20
0x2d6: V143 = ADD 0x20 0x4
0x2dc: V144 = 0x488
0x2df: THROW 
0x2e0: JUMPDEST 
0x2e1: STOP 
0x2e2: JUMPDEST 
0x2e3: V145 = CALLVALUE
0x2e4: V146 = ISZERO V145
0x2e5: V147 = 0x109
0x2e8: THROWI V146
---
Entry stack: []
Stack pops: 0
Stack additions: [V141, 0xfc]
Exit stack: []

================================

Block 0x2e9
[0x2e9:0x33d]
---
Predecessors: [0x2b0]
Successors: [0x33e]
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
0x2ed JUMPDEST
0x2ee PUSH2 0x111
0x2f1 PUSH2 0x544
0x2f4 JUMP
0x2f5 JUMPDEST
0x2f6 PUSH1 0x40
0x2f8 MLOAD
0x2f9 DUP1
0x2fa DUP3
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 DUP2
0x328 MSTORE
0x329 PUSH1 0x20
0x32b ADD
0x32c SWAP2
0x32d POP
0x32e POP
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 SWAP2
0x334 SUB
0x335 SWAP1
0x336 RETURN
0x337 JUMPDEST
0x338 CALLVALUE
0x339 ISZERO
0x33a PUSH2 0x15e
0x33d JUMPI
---
0x2e9: V148 = 0x0
0x2ec: REVERT 0x0 0x0
0x2ed: JUMPDEST 
0x2ee: V149 = 0x111
0x2f1: V150 = 0x544
0x2f4: THROW 
0x2f5: JUMPDEST 
0x2f6: V151 = 0x40
0x2f8: V152 = M[0x40]
0x2fb: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x311: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x328: M[V152] = V156
0x329: V157 = 0x20
0x32b: V158 = ADD 0x20 V152
0x32f: V159 = 0x40
0x331: V160 = M[0x40]
0x334: V161 = SUB V158 V160
0x336: RETURN V160 V161
0x337: JUMPDEST 
0x338: V162 = CALLVALUE
0x339: V163 = ISZERO V162
0x33a: V164 = 0x15e
0x33d: THROWI V163
---
Entry stack: []
Stack pops: 0
Stack additions: [0x111]
Exit stack: []

================================

Block 0x33e
[0x33e:0x36a]
---
Predecessors: [0x2e9]
Successors: [0x36b]
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
0x342 JUMPDEST
0x343 PUSH2 0x174
0x346 PUSH1 0x4
0x348 DUP1
0x349 DUP1
0x34a CALLDATALOAD
0x34b SWAP1
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP1
0x350 SWAP2
0x351 SWAP1
0x352 POP
0x353 POP
0x354 PUSH2 0x56a
0x357 JUMP
0x358 JUMPDEST
0x359 STOP
0x35a JUMPDEST
0x35b PUSH2 0x17e
0x35e PUSH2 0x1f6
0x361 JUMP
0x362 JUMPDEST
0x363 STOP
0x364 JUMPDEST
0x365 CALLVALUE
0x366 ISZERO
0x367 PUSH2 0x18b
0x36a JUMPI
---
0x33e: V165 = 0x0
0x341: REVERT 0x0 0x0
0x342: JUMPDEST 
0x343: V166 = 0x174
0x346: V167 = 0x4
0x34a: V168 = CALLDATALOAD 0x4
0x34c: V169 = 0x20
0x34e: V170 = ADD 0x20 0x4
0x354: V171 = 0x56a
0x357: THROW 
0x358: JUMPDEST 
0x359: STOP 
0x35a: JUMPDEST 
0x35b: V172 = 0x17e
0x35e: V173 = 0x1f6
0x361: THROW 
0x362: JUMPDEST 
0x363: STOP 
0x364: JUMPDEST 
0x365: V174 = CALLVALUE
0x366: V175 = ISZERO V174
0x367: V176 = 0x18b
0x36a: THROWI V175
---
Entry stack: []
Stack pops: 0
Stack additions: [V168, 0x174, 0x17e]
Exit stack: []

================================

Block 0x36b
[0x36b:0x393]
---
Predecessors: [0x33e]
Successors: [0x394]
---
0x36b PUSH1 0x0
0x36d DUP1
0x36e REVERT
0x36f JUMPDEST
0x370 PUSH2 0x193
0x373 PUSH2 0x628
0x376 JUMP
0x377 JUMPDEST
0x378 PUSH1 0x40
0x37a MLOAD
0x37b DUP1
0x37c DUP3
0x37d DUP2
0x37e MSTORE
0x37f PUSH1 0x20
0x381 ADD
0x382 SWAP2
0x383 POP
0x384 POP
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 SWAP2
0x38a SUB
0x38b SWAP1
0x38c RETURN
0x38d JUMPDEST
0x38e CALLVALUE
0x38f ISZERO
0x390 PUSH2 0x1b4
0x393 JUMPI
---
0x36b: V177 = 0x0
0x36e: REVERT 0x0 0x0
0x36f: JUMPDEST 
0x370: V178 = 0x193
0x373: V179 = 0x628
0x376: THROW 
0x377: JUMPDEST 
0x378: V180 = 0x40
0x37a: V181 = M[0x40]
0x37e: M[V181] = S0
0x37f: V182 = 0x20
0x381: V183 = ADD 0x20 V181
0x385: V184 = 0x40
0x387: V185 = M[0x40]
0x38a: V186 = SUB V183 V185
0x38c: RETURN V185 V186
0x38d: JUMPDEST 
0x38e: V187 = CALLVALUE
0x38f: V188 = ISZERO V187
0x390: V189 = 0x1b4
0x393: THROWI V188
---
Entry stack: []
Stack pops: 0
Stack additions: [0x193]
Exit stack: []

================================

Block 0x394
[0x394:0x3eb]
---
Predecessors: [0x36b]
Successors: [0x2a7, 0x3ec]
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
0x398 JUMPDEST
0x399 PUSH2 0x1e0
0x39c PUSH1 0x4
0x39e DUP1
0x39f DUP1
0x3a0 CALLDATALOAD
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 SWAP1
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb SWAP1
0x3bc SWAP2
0x3bd SWAP1
0x3be POP
0x3bf POP
0x3c0 PUSH2 0x62e
0x3c3 JUMP
0x3c4 JUMPDEST
0x3c5 PUSH1 0x40
0x3c7 MLOAD
0x3c8 DUP1
0x3c9 DUP3
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf SWAP2
0x3d0 POP
0x3d1 POP
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 SWAP2
0x3d7 SUB
0x3d8 SWAP1
0x3d9 RETURN
0x3da JUMPDEST
0x3db PUSH8 0x6f05b59d3b20000
0x3e4 CALLVALUE
0x3e5 LT
0x3e6 ISZERO
0x3e7 ISZERO
0x3e8 PUSH2 0x2a7
0x3eb JUMPI
---
0x394: V190 = 0x0
0x397: REVERT 0x0 0x0
0x398: JUMPDEST 
0x399: V191 = 0x1e0
0x39c: V192 = 0x4
0x3a0: V193 = CALLDATALOAD 0x4
0x3a1: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x3b8: V196 = 0x20
0x3ba: V197 = ADD 0x20 0x4
0x3c0: V198 = 0x62e
0x3c3: THROW 
0x3c4: JUMPDEST 
0x3c5: V199 = 0x40
0x3c7: V200 = M[0x40]
0x3cb: M[V200] = S0
0x3cc: V201 = 0x20
0x3ce: V202 = ADD 0x20 V200
0x3d2: V203 = 0x40
0x3d4: V204 = M[0x40]
0x3d7: V205 = SUB V202 V204
0x3d9: RETURN V204 V205
0x3da: JUMPDEST 
0x3db: V206 = 0x6f05b59d3b20000
0x3e4: V207 = CALLVALUE
0x3e5: V208 = LT V207 0x6f05b59d3b20000
0x3e6: V209 = ISZERO V208
0x3e7: V210 = ISZERO V209
0x3e8: V211 = 0x2a7
0x3eb: JUMPI 0x2a7 V210
---
Entry stack: []
Stack pops: 0
Stack additions: [V195, 0x1e0]
Exit stack: []

================================

Block 0x3ec
[0x3ec:0x490]
---
Predecessors: [0x394]
Successors: [0x491]
---
0x3ec CALLVALUE
0x3ed PUSH1 0x2
0x3ef PUSH1 0x0
0x3f1 CALLER
0x3f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x407 AND
0x408 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41d AND
0x41e DUP2
0x41f MSTORE
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP1
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 PUSH1 0x0
0x42b SHA3
0x42c PUSH1 0x0
0x42e DUP3
0x42f DUP3
0x430 SLOAD
0x431 ADD
0x432 SWAP3
0x433 POP
0x434 POP
0x435 DUP2
0x436 SWAP1
0x437 SSTORE
0x438 POP
0x439 CALLER
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x471 CALLVALUE
0x472 PUSH1 0x40
0x474 MLOAD
0x475 DUP1
0x476 DUP3
0x477 DUP2
0x478 MSTORE
0x479 PUSH1 0x20
0x47b ADD
0x47c SWAP2
0x47d POP
0x47e POP
0x47f PUSH1 0x40
0x481 MLOAD
0x482 DUP1
0x483 SWAP2
0x484 SUB
0x485 SWAP1
0x486 LOG2
0x487 PUSH2 0x2ac
0x48a JUMP
0x48b JUMPDEST
0x48c PUSH1 0x0
0x48e DUP1
0x48f REVERT
0x490 JUMPDEST
---
0x3ec: V212 = CALLVALUE
0x3ed: V213 = 0x2
0x3ef: V214 = 0x0
0x3f1: V215 = CALLER
0x3f2: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x407: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x408: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x41d: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x41f: M[0x0] = V219
0x420: V220 = 0x20
0x422: V221 = ADD 0x20 0x0
0x425: M[0x20] = 0x2
0x426: V222 = 0x20
0x428: V223 = ADD 0x20 0x20
0x429: V224 = 0x0
0x42b: V225 = SHA3 0x0 0x40
0x42c: V226 = 0x0
0x430: V227 = S[V225]
0x431: V228 = ADD V227 V212
0x437: S[V225] = V228
0x439: V229 = CALLER
0x43a: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x450: V232 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x471: V233 = CALLVALUE
0x472: V234 = 0x40
0x474: V235 = M[0x40]
0x478: M[V235] = V233
0x479: V236 = 0x20
0x47b: V237 = ADD 0x20 V235
0x47f: V238 = 0x40
0x481: V239 = M[0x40]
0x484: V240 = SUB V237 V239
0x486: LOG V239 V240 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V231
0x487: V241 = 0x2ac
0x48a: THROW 
0x48b: JUMPDEST 
0x48c: V242 = 0x0
0x48f: REVERT 0x0 0x0
0x490: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x491
[0x491:0x4ea]
---
Predecessors: [0x3ec]
Successors: [0x4eb]
---
0x491 JUMPDEST
0x492 JUMP
0x493 JUMPDEST
0x494 PUSH1 0x0
0x496 CALLER
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 SWAP1
0x4b1 SLOAD
0x4b2 SWAP1
0x4b3 PUSH2 0x100
0x4b6 EXP
0x4b7 SWAP1
0x4b8 DIV
0x4b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ce AND
0x4cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e4 AND
0x4e5 EQ
0x4e6 ISZERO
0x4e7 PUSH2 0x3f0
0x4ea JUMPI
---
0x491: JUMPDEST 
0x492: JUMP S0
0x493: JUMPDEST 
0x494: V243 = 0x0
0x496: V244 = CALLER
0x497: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x4ad: V247 = 0x0
0x4b1: V248 = S[0x0]
0x4b3: V249 = 0x100
0x4b6: V250 = EXP 0x100 0x0
0x4b8: V251 = DIV V248 0x1
0x4b9: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ce: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x4cf: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e4: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x4e5: V256 = EQ V255 V246
0x4e6: V257 = ISZERO V256
0x4e7: V258 = 0x3f0
0x4ea: THROWI V257
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0x4eb
[0x4eb:0x4f5]
---
Predecessors: [0x491]
Successors: [0x4f6]
---
0x4eb PUSH1 0x3
0x4ed SLOAD
0x4ee TIMESTAMP
0x4ef LT
0x4f0 ISZERO
0x4f1 ISZERO
0x4f2 PUSH2 0x3ee
0x4f5 JUMPI
---
0x4eb: V259 = 0x3
0x4ed: V260 = S[0x3]
0x4ee: V261 = TIMESTAMP
0x4ef: V262 = LT V261 V260
0x4f0: V263 = ISZERO V262
0x4f1: V264 = ISZERO V263
0x4f2: V265 = 0x3ee
0x4f5: THROWI V264
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x0]

================================

Block 0x4f6
[0x4f6:0x541]
---
Predecessors: [0x4eb]
Successors: [0x542]
---
0x4f6 PUSH1 0x2
0x4f8 PUSH1 0x0
0x4fa CALLER
0x4fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x510 AND
0x511 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x526 AND
0x527 DUP2
0x528 MSTORE
0x529 PUSH1 0x20
0x52b ADD
0x52c SWAP1
0x52d DUP2
0x52e MSTORE
0x52f PUSH1 0x20
0x531 ADD
0x532 PUSH1 0x0
0x534 SHA3
0x535 SLOAD
0x536 SWAP1
0x537 POP
0x538 DUP1
0x539 DUP3
0x53a GT
0x53b ISZERO
0x53c DUP1
0x53d ISZERO
0x53e PUSH2 0x363
0x541 JUMPI
---
0x4f6: V266 = 0x2
0x4f8: V267 = 0x0
0x4fa: V268 = CALLER
0x4fb: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x510: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x511: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x526: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x528: M[0x0] = V272
0x529: V273 = 0x20
0x52b: V274 = ADD 0x20 0x0
0x52e: M[0x20] = 0x2
0x52f: V275 = 0x20
0x531: V276 = ADD 0x20 0x20
0x532: V277 = 0x0
0x534: V278 = SHA3 0x0 0x40
0x535: V279 = S[V278]
0x53a: V280 = GT S1 V279
0x53b: V281 = ISZERO V280
0x53d: V282 = ISZERO V281
0x53e: V283 = 0x363
0x541: THROWI V282
---
Entry stack: [0x0]
Stack pops: 2
Stack additions: [S1, V279, V281]
Exit stack: [S0, V279, V281]

================================

Block 0x542
[0x542:0x546]
---
Predecessors: [0x4f6]
Successors: [0x547]
---
0x542 POP
0x543 PUSH1 0x0
0x545 DUP2
0x546 GT
---
0x543: V284 = 0x0
0x546: V285 = GT V279 0x0
---
Entry stack: [S2, V279, V281]
Stack pops: 2
Stack additions: [S1, V285]
Exit stack: [S2, V279, V285]

================================

Block 0x547
[0x547:0x54c]
---
Predecessors: [0x542]
Successors: [0x54d]
---
0x547 JUMPDEST
0x548 ISZERO
0x549 PUSH2 0x3ed
0x54c JUMPI
---
0x547: JUMPDEST 
0x548: V286 = ISZERO V285
0x549: V287 = 0x3ed
0x54c: THROWI V286
---
Entry stack: [S2, V279, V285]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V279]

================================

Block 0x54d
[0x54d:0x5d0]
---
Predecessors: [0x547]
Successors: [0x5d1]
---
0x54d CALLER
0x54e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x563 AND
0x564 PUSH2 0x8fc
0x567 DUP4
0x568 SWAP1
0x569 DUP2
0x56a ISZERO
0x56b MUL
0x56c SWAP1
0x56d PUSH1 0x40
0x56f MLOAD
0x570 PUSH1 0x0
0x572 PUSH1 0x40
0x574 MLOAD
0x575 DUP1
0x576 DUP4
0x577 SUB
0x578 DUP2
0x579 DUP6
0x57a DUP9
0x57b DUP9
0x57c CALL
0x57d SWAP4
0x57e POP
0x57f POP
0x580 POP
0x581 POP
0x582 POP
0x583 CALLER
0x584 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x599 AND
0x59a PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x5bb DUP4
0x5bc PUSH1 0x40
0x5be MLOAD
0x5bf DUP1
0x5c0 DUP3
0x5c1 DUP2
0x5c2 MSTORE
0x5c3 PUSH1 0x20
0x5c5 ADD
0x5c6 SWAP2
0x5c7 POP
0x5c8 POP
0x5c9 PUSH1 0x40
0x5cb MLOAD
0x5cc DUP1
0x5cd SWAP2
0x5ce SUB
0x5cf SWAP1
0x5d0 LOG2
---
0x54d: V288 = CALLER
0x54e: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x563: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x564: V291 = 0x8fc
0x56a: V292 = ISZERO S1
0x56b: V293 = MUL V292 0x8fc
0x56d: V294 = 0x40
0x56f: V295 = M[0x40]
0x570: V296 = 0x0
0x572: V297 = 0x40
0x574: V298 = M[0x40]
0x577: V299 = SUB V295 V298
0x57c: V300 = CALL V293 V290 S1 V298 V299 V298 0x0
0x583: V301 = CALLER
0x584: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x599: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x59a: V304 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x5bc: V305 = 0x40
0x5be: V306 = M[0x40]
0x5c2: M[V306] = S1
0x5c3: V307 = 0x20
0x5c5: V308 = ADD 0x20 V306
0x5c9: V309 = 0x40
0x5cb: V310 = M[0x40]
0x5ce: V311 = SUB V308 V310
0x5d0: LOG V310 V311 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V303
---
Entry stack: [S1, V279]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, V279]

================================

Block 0x5d1
[0x5d1:0x5d1]
---
Predecessors: [0x54d]
Successors: [0x5d2]
---
0x5d1 JUMPDEST
---
0x5d1: JUMPDEST 
---
Entry stack: [S1, V279]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V279]

================================

Block 0x5d2
[0x5d2:0x5d2]
---
Predecessors: [0x5d1]
Successors: [0x5d3]
---
0x5d2 JUMPDEST
---
0x5d2: JUMPDEST 
---
Entry stack: [S1, V279]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V279]

================================

Block 0x5d3
[0x5d3:0x5d3]
---
Predecessors: [0x5d2]
Successors: [0x5d4]
---
0x5d3 JUMPDEST
---
0x5d3: JUMPDEST 
---
Entry stack: [S1, V279]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V279]

================================

Block 0x5d4
[0x5d4:0x5d4]
---
Predecessors: [0x5d3]
Successors: [0x5d5]
---
0x5d4 JUMPDEST
---
0x5d4: JUMPDEST 
---
Entry stack: [S1, V279]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V279]

================================

Block 0x5d5
[0x5d5:0x62e]
---
Predecessors: [0x5d4]
Successors: [0x62f]
---
0x5d5 JUMPDEST
0x5d6 POP
0x5d7 POP
0x5d8 JUMP
0x5d9 JUMPDEST
0x5da CALLER
0x5db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f0 AND
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 SWAP1
0x5f5 SLOAD
0x5f6 SWAP1
0x5f7 PUSH2 0x100
0x5fa EXP
0x5fb SWAP1
0x5fc DIV
0x5fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x612 AND
0x613 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x628 AND
0x629 EQ
0x62a ISZERO
0x62b PUSH2 0x485
0x62e JUMPI
---
0x5d5: JUMPDEST 
0x5d8: JUMP S2
0x5d9: JUMPDEST 
0x5da: V312 = CALLER
0x5db: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x5f1: V315 = 0x0
0x5f5: V316 = S[0x0]
0x5f7: V317 = 0x100
0x5fa: V318 = EXP 0x100 0x0
0x5fc: V319 = DIV V316 0x1
0x5fd: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x612: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x613: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x628: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x629: V324 = EQ V323 V314
0x62a: V325 = ISZERO V324
0x62b: V326 = 0x485
0x62e: THROWI V325
---
Entry stack: [S1, V279]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x62f
[0x62f:0x64e]
---
Predecessors: [0x5d5]
Successors: [0x64f]
---
0x62f PUSH1 0x0
0x631 ADDRESS
0x632 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x647 AND
0x648 BALANCE
0x649 EQ
0x64a ISZERO
0x64b PUSH2 0x483
0x64e JUMPI
---
0x62f: V327 = 0x0
0x631: V328 = ADDRESS
0x632: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x647: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x648: V331 = BALANCE V330
0x649: V332 = EQ V331 0x0
0x64a: V333 = ISZERO V332
0x64b: V334 = 0x483
0x64e: THROWI V333
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x64f
[0x64f:0x667]
---
Predecessors: [0x62f]
Successors: [0x668]
---
0x64f CALLER
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 SELFDESTRUCT
0x667 JUMPDEST
---
0x64f: V335 = CALLER
0x650: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x666: SELFDESTRUCT V337
0x667: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x668
[0x668:0x668]
---
Predecessors: [0x64f]
Successors: [0x669]
---
0x668 JUMPDEST
---
0x668: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x669
[0x669:0x669]
---
Predecessors: [0x668]
Successors: [0x66a]
---
0x669 JUMPDEST
---
0x669: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66a
[0x66a:0x6c1]
---
Predecessors: [0x669]
Successors: [0x6c2]
---
0x66a JUMPDEST
0x66b JUMP
0x66c JUMPDEST
0x66d CALLER
0x66e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x683 AND
0x684 PUSH1 0x0
0x686 DUP1
0x687 SWAP1
0x688 SLOAD
0x689 SWAP1
0x68a PUSH2 0x100
0x68d EXP
0x68e SWAP1
0x68f DIV
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc EQ
0x6bd ISZERO
0x6be PUSH2 0x540
0x6c1 JUMPI
---
0x66a: JUMPDEST 
0x66b: JUMP S0
0x66c: JUMPDEST 
0x66d: V338 = CALLER
0x66e: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x683: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x684: V341 = 0x0
0x688: V342 = S[0x0]
0x68a: V343 = 0x100
0x68d: V344 = EXP 0x100 0x0
0x68f: V345 = DIV V342 0x1
0x690: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x6a6: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x6bc: V350 = EQ V349 V340
0x6bd: V351 = ISZERO V350
0x6be: V352 = 0x540
0x6c1: THROWI V351
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x6c2
[0x6c2:0x6e1]
---
Predecessors: [0x66a]
Successors: [0x6e2]
---
0x6c2 PUSH1 0x0
0x6c4 ADDRESS
0x6c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6da AND
0x6db BALANCE
0x6dc EQ
0x6dd ISZERO
0x6de PUSH2 0x53e
0x6e1 JUMPI
---
0x6c2: V353 = 0x0
0x6c4: V354 = ADDRESS
0x6c5: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x6da: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x6db: V357 = BALANCE V356
0x6dc: V358 = EQ V357 0x0
0x6dd: V359 = ISZERO V358
0x6de: V360 = 0x53e
0x6e1: THROWI V359
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6e2
[0x6e2:0x721]
---
Predecessors: [0x6c2]
Successors: [0x722]
---
0x6e2 DUP1
0x6e3 PUSH1 0x0
0x6e5 DUP1
0x6e6 PUSH2 0x100
0x6e9 EXP
0x6ea DUP2
0x6eb SLOAD
0x6ec DUP2
0x6ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x702 MUL
0x703 NOT
0x704 AND
0x705 SWAP1
0x706 DUP4
0x707 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71c AND
0x71d MUL
0x71e OR
0x71f SWAP1
0x720 SSTORE
0x721 POP
---
0x6e3: V361 = 0x0
0x6e6: V362 = 0x100
0x6e9: V363 = EXP 0x100 0x0
0x6eb: V364 = S[0x0]
0x6ed: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x702: V366 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x703: V367 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x704: V368 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V364
0x707: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x71d: V371 = MUL V370 0x1
0x71e: V372 = OR V371 V368
0x720: S[0x0] = V372
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x722
[0x722:0x722]
---
Predecessors: [0x6e2]
Successors: [0x723]
---
0x722 JUMPDEST
---
0x722: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x723
[0x723:0x723]
---
Predecessors: [0x722]
Successors: [0x724]
---
0x723 JUMPDEST
---
0x723: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x724
[0x724:0x724]
---
Predecessors: [0x723]
Successors: [0x725]
---
0x724 JUMPDEST
---
0x724: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x725
[0x725:0x808]
---
Predecessors: [0x724]
Successors: [0x809]
---
0x725 JUMPDEST
0x726 POP
0x727 JUMP
0x728 JUMPDEST
0x729 PUSH1 0x1
0x72b PUSH1 0x0
0x72d SWAP1
0x72e SLOAD
0x72f SWAP1
0x730 PUSH2 0x100
0x733 EXP
0x734 SWAP1
0x735 DIV
0x736 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74b AND
0x74c DUP2
0x74d JUMP
0x74e JUMPDEST
0x74f CALLER
0x750 PUSH1 0x1
0x752 PUSH1 0x0
0x754 PUSH2 0x100
0x757 EXP
0x758 DUP2
0x759 SLOAD
0x75a DUP2
0x75b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x770 MUL
0x771 NOT
0x772 AND
0x773 SWAP1
0x774 DUP4
0x775 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78a AND
0x78b MUL
0x78c OR
0x78d SWAP1
0x78e SSTORE
0x78f POP
0x790 DUP1
0x791 PUSH1 0x3
0x793 DUP2
0x794 SWAP1
0x795 SSTORE
0x796 POP
0x797 PUSH1 0x1
0x799 PUSH1 0x0
0x79b SWAP1
0x79c SLOAD
0x79d SWAP1
0x79e PUSH2 0x100
0x7a1 EXP
0x7a2 SWAP1
0x7a3 DIV
0x7a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b9 AND
0x7ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cf AND
0x7d0 PUSH32 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x7f1 PUSH1 0x3
0x7f3 SLOAD
0x7f4 PUSH1 0x40
0x7f6 MLOAD
0x7f7 DUP1
0x7f8 DUP3
0x7f9 DUP2
0x7fa MSTORE
0x7fb PUSH1 0x20
0x7fd ADD
0x7fe SWAP2
0x7ff POP
0x800 POP
0x801 PUSH1 0x40
0x803 MLOAD
0x804 DUP1
0x805 SWAP2
0x806 SUB
0x807 SWAP1
0x808 LOG2
---
0x725: JUMPDEST 
0x727: JUMP S1
0x728: JUMPDEST 
0x729: V373 = 0x1
0x72b: V374 = 0x0
0x72e: V375 = S[0x1]
0x730: V376 = 0x100
0x733: V377 = EXP 0x100 0x0
0x735: V378 = DIV V375 0x1
0x736: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x74d: JUMP S0
0x74e: JUMPDEST 
0x74f: V381 = CALLER
0x750: V382 = 0x1
0x752: V383 = 0x0
0x754: V384 = 0x100
0x757: V385 = EXP 0x100 0x0
0x759: V386 = S[0x1]
0x75b: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x770: V388 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x771: V389 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x772: V390 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V386
0x775: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x78b: V393 = MUL V392 0x1
0x78c: V394 = OR V393 V390
0x78e: S[0x1] = V394
0x791: V395 = 0x3
0x795: S[0x3] = S0
0x797: V396 = 0x1
0x799: V397 = 0x0
0x79c: V398 = S[0x1]
0x79e: V399 = 0x100
0x7a1: V400 = EXP 0x100 0x0
0x7a3: V401 = DIV V398 0x1
0x7a4: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b9: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x7ba: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cf: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x7d0: V406 = 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x7f1: V407 = 0x3
0x7f3: V408 = S[0x3]
0x7f4: V409 = 0x40
0x7f6: V410 = M[0x40]
0x7fa: M[V410] = V408
0x7fb: V411 = 0x20
0x7fd: V412 = ADD 0x20 V410
0x801: V413 = 0x40
0x803: V414 = M[0x40]
0x806: V415 = SUB V412 V414
0x808: LOG V414 V415 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79 V405
---
Entry stack: [S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: []

================================

Block 0x809
[0x809:0x855]
---
Predecessors: [0x725]
Successors: []
---
0x809 JUMPDEST
0x80a POP
0x80b JUMP
0x80c JUMPDEST
0x80d PUSH1 0x3
0x80f SLOAD
0x810 DUP2
0x811 JUMP
0x812 JUMPDEST
0x813 PUSH1 0x2
0x815 PUSH1 0x20
0x817 MSTORE
0x818 DUP1
0x819 PUSH1 0x0
0x81b MSTORE
0x81c PUSH1 0x40
0x81e PUSH1 0x0
0x820 SHA3
0x821 PUSH1 0x0
0x823 SWAP2
0x824 POP
0x825 SWAP1
0x826 POP
0x827 SLOAD
0x828 DUP2
0x829 JUMP
0x82a STOP
0x82b LOG1
0x82c PUSH6 0x627a7a723058
0x833 SHA3
0x834 GT
0x835 PUSH13 0xb495ead779ec5c50b14e6e41e8
0x843 MISSING 0x2b
0x844 ORIGIN
0x845 MSTORE
0x846 BYTE
0x847 MISSING 0x5d
0x848 PUSH4 0x7e1ffd79
0x84d MISSING 0xa8
0x84e PUSH7 0x2be697b7820029
---
0x809: JUMPDEST 
0x80b: JUMP S1
0x80c: JUMPDEST 
0x80d: V416 = 0x3
0x80f: V417 = S[0x3]
0x811: JUMP S0
0x812: JUMPDEST 
0x813: V418 = 0x2
0x815: V419 = 0x20
0x817: M[0x20] = 0x2
0x819: V420 = 0x0
0x81b: M[0x0] = S0
0x81c: V421 = 0x40
0x81e: V422 = 0x0
0x820: V423 = SHA3 0x0 0x40
0x821: V424 = 0x0
0x827: V425 = S[V423]
0x829: JUMP S1
0x82a: STOP 
0x82b: LOG S0 S1 S2
0x82c: V426 = 0x627a7a723058
0x833: V427 = SHA3 0x627a7a723058 S3
0x834: V428 = GT V427 S4
0x835: V429 = 0xb495ead779ec5c50b14e6e41e8
0x843: MISSING 0x2b
0x844: V430 = ORIGIN
0x845: M[V430] = S0
0x846: V431 = BYTE S1 S2
0x847: MISSING 0x5d
0x848: V432 = 0x7e1ffd79
0x84d: MISSING 0xa8
0x84e: V433 = 0x2be697b7820029
---
Entry stack: [S0]
Stack pops: 149
Stack additions: [0x2be697b7820029]
Exit stack: []

================================

Function 0:
Public function signature: 0x4fb2e45d
Entry block: 0x49
Exit block: 0x80
Body: 0x49, 0x50, 0x54, 0x80, 0xd7, 0x12d, 0x14d, 0x18d, 0x18e, 0x18f, 0x190

Function 1:
Public function signature: 0xb4a99a4e
Entry block: 0x82
Exit block: 0x95
Body: 0x82, 0x89, 0x8d, 0x95, 0x193

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x44
Body: 0x44

