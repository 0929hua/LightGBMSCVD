Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2d2c44f2
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2d2c44f2
0x3c: V13 = EQ 0x2d2c44f2 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8f]
---
0x41 DUP1
0x42 PUSH4 0x2e1a7d4d
0x47 EQ
0x48 PUSH2 0x8f
0x4b JUMPI
---
0x42: V15 = 0x2e1a7d4d
0x47: V16 = EQ 0x2e1a7d4d V11
0x48: V17 = 0x8f
0x4b: JUMPI 0x8f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbc]
---
0x4c DUP1
0x4d PUSH4 0x3ee2d7c2
0x52 EQ
0x53 PUSH2 0xbc
0x56 JUMPI
---
0x4d: V18 = 0x3ee2d7c2
0x52: V19 = EQ 0x3ee2d7c2 V11
0x53: V20 = 0xbc
0x56: JUMPI 0xbc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x113]
---
0x57 DUP1
0x58 PUSH4 0x4fb2e45d
0x5d EQ
0x5e PUSH2 0x113
0x61 JUMPI
---
0x58: V21 = 0x4fb2e45d
0x5d: V22 = EQ 0x4fb2e45d V11
0x5e: V23 = 0x113
0x61: JUMPI 0x113 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x156]
---
0x62 DUP1
0x63 PUSH4 0xb4a99a4e
0x68 EQ
0x69 PUSH2 0x156
0x6c JUMPI
---
0x63: V24 = 0xb4a99a4e
0x68: V25 = EQ 0xb4a99a4e V11
0x69: V26 = 0x156
0x6c: JUMPI 0x156 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1ad]
---
0x6d DUP1
0x6e PUSH4 0xbe6d055a
0x73 EQ
0x74 PUSH2 0x1ad
0x77 JUMPI
---
0x6e: V27 = 0xbe6d055a
0x73: V28 = EQ 0xbe6d055a V11
0x74: V29 = 0x1ad
0x77: JUMPI 0x1ad V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x229]
---
0x78 DUP1
0x79 PUSH4 0xd0e30db0
0x7e EQ
0x7f PUSH2 0x229
0x82 JUMPI
---
0x79: V30 = 0xd0e30db0
0x7e: V31 = EQ 0xd0e30db0 V11
0x7f: V32 = 0x229
0x82: JUMPI 0x229 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0xd]
Successors: [0x233]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x233
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V33 = 0x8d
0x89: V34 = 0x233
0x8c: JUMP 0x233
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x2b1]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0x41]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V35 = CALLVALUE
0x92: V36 = ISZERO V35
0x93: V37 = 0x9b
0x96: JUMPI 0x9b V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V38 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0x9b
[0x9b:0xb9]
---
Predecessors: [0x8f]
Successors: [0x2b3]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0xba
0xa0 PUSH1 0x4
0xa2 DUP1
0xa3 CALLDATASIZE
0xa4 SUB
0xa5 DUP2
0xa6 ADD
0xa7 SWAP1
0xa8 DUP1
0xa9 DUP1
0xaa CALLDATALOAD
0xab SWAP1
0xac PUSH1 0x20
0xae ADD
0xaf SWAP1
0xb0 SWAP3
0xb1 SWAP2
0xb2 SWAP1
0xb3 POP
0xb4 POP
0xb5 POP
0xb6 PUSH2 0x2b3
0xb9 JUMP
---
0x9b: JUMPDEST 
0x9d: V39 = 0xba
0xa0: V40 = 0x4
0xa3: V41 = CALLDATASIZE
0xa4: V42 = SUB V41 0x4
0xa6: V43 = ADD 0x4 V42
0xaa: V44 = CALLDATALOAD 0x4
0xac: V45 = 0x20
0xae: V46 = ADD 0x20 0x4
0xb6: V47 = 0x2b3
0xb9: JUMP 0x2b3
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0xba, V44]
Exit stack: [V11, 0xba, V44]

================================

Block 0xba
[0xba:0xbb]
---
Predecessors: [0x3a5]
Successors: []
---
0xba JUMPDEST
0xbb STOP
---
0xba: JUMPDEST 
0xbb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0x4c]
Successors: [0xc4, 0xc8]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe DUP1
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbc: JUMPDEST 
0xbd: V48 = CALLVALUE
0xbf: V49 = ISZERO V48
0xc0: V50 = 0xc8
0xc3: JUMPI 0xc8 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbc]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V51 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xc8
[0xc8:0xfc]
---
Predecessors: [0xbc]
Successors: [0x3a8]
---
0xc8 JUMPDEST
0xc9 POP
0xca PUSH2 0xfd
0xcd PUSH1 0x4
0xcf DUP1
0xd0 CALLDATASIZE
0xd1 SUB
0xd2 DUP2
0xd3 ADD
0xd4 SWAP1
0xd5 DUP1
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee SWAP1
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP1
0xf3 SWAP3
0xf4 SWAP2
0xf5 SWAP1
0xf6 POP
0xf7 POP
0xf8 POP
0xf9 PUSH2 0x3a8
0xfc JUMP
---
0xc8: JUMPDEST 
0xca: V52 = 0xfd
0xcd: V53 = 0x4
0xd0: V54 = CALLDATASIZE
0xd1: V55 = SUB V54 0x4
0xd3: V56 = ADD 0x4 V55
0xd7: V57 = CALLDATALOAD 0x4
0xd8: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xef: V60 = 0x20
0xf1: V61 = ADD 0x20 0x4
0xf9: V62 = 0x3a8
0xfc: JUMP 0x3a8
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xfd, V59]
Exit stack: [V11, 0xfd, V59]

================================

Block 0xfd
[0xfd:0x112]
---
Predecessors: [0x3a8]
Successors: []
---
0xfd JUMPDEST
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 DUP3
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP2
0x109 POP
0x10a POP
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f SWAP2
0x110 SUB
0x111 SWAP1
0x112 RETURN
---
0xfd: JUMPDEST 
0xfe: V63 = 0x40
0x100: V64 = M[0x40]
0x104: M[V64] = V225
0x105: V65 = 0x20
0x107: V66 = ADD 0x20 V64
0x10b: V67 = 0x40
0x10d: V68 = M[0x40]
0x110: V69 = SUB V66 V68
0x112: RETURN V68 V69
---
Entry stack: [V11, 0xfd, V225]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfd]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x57]
Successors: [0x11b, 0x11f]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x113: JUMPDEST 
0x114: V70 = CALLVALUE
0x116: V71 = ISZERO V70
0x117: V72 = 0x11f
0x11a: JUMPI 0x11f V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V11, V70]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x113]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V73 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V11, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70]

================================

Block 0x11f
[0x11f:0x153]
---
Predecessors: [0x113]
Successors: [0x3c0]
---
0x11f JUMPDEST
0x120 POP
0x121 PUSH2 0x154
0x124 PUSH1 0x4
0x126 DUP1
0x127 CALLDATASIZE
0x128 SUB
0x129 DUP2
0x12a ADD
0x12b SWAP1
0x12c DUP1
0x12d DUP1
0x12e CALLDATALOAD
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 SWAP1
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a SWAP3
0x14b SWAP2
0x14c SWAP1
0x14d POP
0x14e POP
0x14f POP
0x150 PUSH2 0x3c0
0x153 JUMP
---
0x11f: JUMPDEST 
0x121: V74 = 0x154
0x124: V75 = 0x4
0x127: V76 = CALLDATASIZE
0x128: V77 = SUB V76 0x4
0x12a: V78 = ADD 0x4 V77
0x12e: V79 = CALLDATALOAD 0x4
0x12f: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x146: V82 = 0x20
0x148: V83 = ADD 0x20 0x4
0x150: V84 = 0x3c0
0x153: JUMP 0x3c0
---
Entry stack: [V11, V70]
Stack pops: 1
Stack additions: [0x154, V81]
Exit stack: [V11, 0x154, V81]

================================

Block 0x154
[0x154:0x155]
---
Predecessors: [0x456]
Successors: []
---
0x154 JUMPDEST
0x155 STOP
---
0x154: JUMPDEST 
0x155: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x15d]
---
Predecessors: [0x62]
Successors: [0x15e, 0x162]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 DUP1
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x156: JUMPDEST 
0x157: V85 = CALLVALUE
0x159: V86 = ISZERO V85
0x15a: V87 = 0x162
0x15d: JUMPI 0x162 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x156]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V88 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x162
[0x162:0x16a]
---
Predecessors: [0x156]
Successors: [0x459]
---
0x162 JUMPDEST
0x163 POP
0x164 PUSH2 0x16b
0x167 PUSH2 0x459
0x16a JUMP
---
0x162: JUMPDEST 
0x164: V89 = 0x16b
0x167: V90 = 0x459
0x16a: JUMP 0x459
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x16b]
Exit stack: [V11, 0x16b]

================================

Block 0x16b
[0x16b:0x1ac]
---
Predecessors: [0x459]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 DUP3
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 SWAP2
0x1a3 POP
0x1a4 POP
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 SWAP2
0x1aa SUB
0x1ab SWAP1
0x1ac RETURN
---
0x16b: JUMPDEST 
0x16c: V91 = 0x40
0x16e: V92 = M[0x40]
0x171: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x187: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x19e: M[V92] = V96
0x19f: V97 = 0x20
0x1a1: V98 = ADD 0x20 V92
0x1a5: V99 = 0x40
0x1a7: V100 = M[0x40]
0x1aa: V101 = SUB V98 V100
0x1ac: RETURN V100 V101
---
Entry stack: [V11, 0x16b, V260]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x16b]

================================

Block 0x1ad
[0x1ad:0x226]
---
Predecessors: [0x6d]
Successors: [0x47f]
---
0x1ad JUMPDEST
0x1ae PUSH2 0x227
0x1b1 PUSH1 0x4
0x1b3 DUP1
0x1b4 CALLDATASIZE
0x1b5 SUB
0x1b6 DUP2
0x1b7 ADD
0x1b8 SWAP1
0x1b9 DUP1
0x1ba DUP1
0x1bb CALLDATALOAD
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 SWAP1
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP1
0x1d7 SWAP3
0x1d8 SWAP2
0x1d9 SWAP1
0x1da DUP1
0x1db CALLDATALOAD
0x1dc SWAP1
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP1
0x1e1 DUP3
0x1e2 ADD
0x1e3 DUP1
0x1e4 CALLDATALOAD
0x1e5 SWAP1
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP1
0x1ea DUP1
0x1eb DUP1
0x1ec PUSH1 0x1f
0x1ee ADD
0x1ef PUSH1 0x20
0x1f1 DUP1
0x1f2 SWAP2
0x1f3 DIV
0x1f4 MUL
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd ADD
0x1fe PUSH1 0x40
0x200 MSTORE
0x201 DUP1
0x202 SWAP4
0x203 SWAP3
0x204 SWAP2
0x205 SWAP1
0x206 DUP2
0x207 DUP2
0x208 MSTORE
0x209 PUSH1 0x20
0x20b ADD
0x20c DUP4
0x20d DUP4
0x20e DUP1
0x20f DUP3
0x210 DUP5
0x211 CALLDATACOPY
0x212 DUP3
0x213 ADD
0x214 SWAP2
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b SWAP2
0x21c SWAP3
0x21d SWAP2
0x21e SWAP3
0x21f SWAP1
0x220 POP
0x221 POP
0x222 POP
0x223 PUSH2 0x47f
0x226 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V102 = 0x227
0x1b1: V103 = 0x4
0x1b4: V104 = CALLDATASIZE
0x1b5: V105 = SUB V104 0x4
0x1b7: V106 = ADD 0x4 V105
0x1bb: V107 = CALLDATALOAD 0x4
0x1bc: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1d3: V110 = 0x20
0x1d5: V111 = ADD 0x20 0x4
0x1db: V112 = CALLDATALOAD 0x24
0x1dd: V113 = 0x20
0x1df: V114 = ADD 0x20 0x24
0x1e2: V115 = ADD 0x4 V112
0x1e4: V116 = CALLDATALOAD V115
0x1e6: V117 = 0x20
0x1e8: V118 = ADD 0x20 V115
0x1ec: V119 = 0x1f
0x1ee: V120 = ADD 0x1f V116
0x1ef: V121 = 0x20
0x1f3: V122 = DIV V120 0x20
0x1f4: V123 = MUL V122 0x20
0x1f5: V124 = 0x20
0x1f7: V125 = ADD 0x20 V123
0x1f8: V126 = 0x40
0x1fa: V127 = M[0x40]
0x1fd: V128 = ADD V127 V125
0x1fe: V129 = 0x40
0x200: M[0x40] = V128
0x208: M[V127] = V116
0x209: V130 = 0x20
0x20b: V131 = ADD 0x20 V127
0x211: CALLDATACOPY V131 V118 V116
0x213: V132 = ADD V131 V116
0x223: V133 = 0x47f
0x226: JUMP 0x47f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x227, V109, V127]
Exit stack: [V11, 0x227, V109, V127]

================================

Block 0x227
[0x227:0x228]
---
Predecessors: [0x4f2]
Successors: []
---
0x227 JUMPDEST
0x228 STOP
---
0x227: JUMPDEST 
0x228: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x229
[0x229:0x230]
---
Predecessors: [0x78]
Successors: [0x50c]
---
0x229 JUMPDEST
0x22a PUSH2 0x231
0x22d PUSH2 0x50c
0x230 JUMP
---
0x229: JUMPDEST 
0x22a: V134 = 0x231
0x22d: V135 = 0x50c
0x230: JUMP 0x50c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x231]
Exit stack: [V11, 0x231]

================================

Block 0x231
[0x231:0x232]
---
Predecessors: [0x56a]
Successors: []
---
0x231 JUMPDEST
0x232 STOP
---
0x231: JUMPDEST 
0x232: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x233
[0x233:0x267]
---
Predecessors: [0x85]
Successors: [0x268, 0x2b1]
---
0x233 JUMPDEST
0x234 ORIGIN
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b CALLER
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 EQ
0x263 ISZERO
0x264 PUSH2 0x2b1
0x267 JUMPI
---
0x233: JUMPDEST 
0x234: V136 = ORIGIN
0x235: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x24b: V139 = CALLER
0x24c: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x262: V142 = EQ V141 V138
0x263: V143 = ISZERO V142
0x264: V144 = 0x2b1
0x267: JUMPI 0x2b1 V143
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x268
[0x268:0x2af]
---
Predecessors: [0x233]
Successors: [0x50c]
---
0x268 CALLER
0x269 PUSH1 0x1
0x26b PUSH1 0x0
0x26d PUSH2 0x100
0x270 EXP
0x271 DUP2
0x272 SLOAD
0x273 DUP2
0x274 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x289 MUL
0x28a NOT
0x28b AND
0x28c SWAP1
0x28d DUP4
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 MUL
0x2a5 OR
0x2a6 SWAP1
0x2a7 SSTORE
0x2a8 POP
0x2a9 PUSH2 0x2b0
0x2ac PUSH2 0x50c
0x2af JUMP
---
0x268: V145 = CALLER
0x269: V146 = 0x1
0x26b: V147 = 0x0
0x26d: V148 = 0x100
0x270: V149 = EXP 0x100 0x0
0x272: V150 = S[0x1]
0x274: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x289: V152 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x28a: V153 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V154 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V150
0x28e: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2a4: V157 = MUL V156 0x1
0x2a5: V158 = OR V157 V154
0x2a7: S[0x1] = V158
0x2a9: V159 = 0x2b0
0x2ac: V160 = 0x50c
0x2af: JUMP 0x50c
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x2b0]
Exit stack: [V11, 0x8d, 0x2b0]

================================

Block 0x2b0
[0x2b0:0x2b0]
---
Predecessors: [0x56a]
Successors: [0x2b1]
---
0x2b0 JUMPDEST
---
0x2b0: JUMPDEST 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x2b1
[0x2b1:0x2b2]
---
Predecessors: [0x233, 0x2b0]
Successors: [0x8d]
---
0x2b1 JUMPDEST
0x2b2 JUMP
---
0x2b1: JUMPDEST 
0x2b2: JUMP S0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b3
[0x2b3:0x308]
---
Predecessors: [0x9b]
Successors: [0x309, 0x3a5]
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 SWAP1
0x2b8 SLOAD
0x2b9 SWAP1
0x2ba PUSH2 0x100
0x2bd EXP
0x2be SWAP1
0x2bf DIV
0x2c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d5 AND
0x2d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2eb AND
0x2ec CALLER
0x2ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x302 AND
0x303 EQ
0x304 ISZERO
0x305 PUSH2 0x3a5
0x308 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V161 = 0x0
0x2b8: V162 = S[0x0]
0x2ba: V163 = 0x100
0x2bd: V164 = EXP 0x100 0x0
0x2bf: V165 = DIV V162 0x1
0x2c0: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2d6: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2ec: V170 = CALLER
0x2ed: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x302: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x303: V173 = EQ V172 V169
0x304: V174 = ISZERO V173
0x305: V175 = 0x3a5
0x308: JUMPI 0x3a5 V174
---
Entry stack: [V11, 0xba, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba, V44]

================================

Block 0x309
[0x309:0x312]
---
Predecessors: [0x2b3]
Successors: [0x313, 0x357]
---
0x309 PUSH1 0x0
0x30b DUP2
0x30c GT
0x30d DUP1
0x30e ISZERO
0x30f PUSH2 0x357
0x312 JUMPI
---
0x309: V176 = 0x0
0x30c: V177 = GT V44 0x0
0x30e: V178 = ISZERO V177
0x30f: V179 = 0x357
0x312: JUMPI 0x357 V178
---
Entry stack: [V11, 0xba, V44]
Stack pops: 1
Stack additions: [S0, V177]
Exit stack: [V11, 0xba, V44, V177]

================================

Block 0x313
[0x313:0x356]
---
Predecessors: [0x309]
Successors: [0x357]
---
0x313 POP
0x314 DUP1
0x315 PUSH1 0x2
0x317 PUSH1 0x0
0x319 CALLER
0x31a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32f AND
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x20
0x34a ADD
0x34b SWAP1
0x34c DUP2
0x34d MSTORE
0x34e PUSH1 0x20
0x350 ADD
0x351 PUSH1 0x0
0x353 SHA3
0x354 SLOAD
0x355 LT
0x356 ISZERO
---
0x315: V180 = 0x2
0x317: V181 = 0x0
0x319: V182 = CALLER
0x31a: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x330: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x347: M[0x0] = V186
0x348: V187 = 0x20
0x34a: V188 = ADD 0x20 0x0
0x34d: M[0x20] = 0x2
0x34e: V189 = 0x20
0x350: V190 = ADD 0x20 0x20
0x351: V191 = 0x0
0x353: V192 = SHA3 0x0 0x40
0x354: V193 = S[V192]
0x355: V194 = LT V193 V44
0x356: V195 = ISZERO V194
---
Entry stack: [V11, 0xba, V44, V177]
Stack pops: 2
Stack additions: [S1, V195]
Exit stack: [V11, 0xba, V44, V195]

================================

Block 0x357
[0x357:0x35c]
---
Predecessors: [0x309, 0x313]
Successors: [0x35d, 0x3a4]
---
0x357 JUMPDEST
0x358 ISZERO
0x359 PUSH2 0x3a4
0x35c JUMPI
---
0x357: JUMPDEST 
0x358: V196 = ISZERO S0
0x359: V197 = 0x3a4
0x35c: JUMPI 0x3a4 V196
---
Entry stack: [V11, 0xba, V44, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xba, V44]

================================

Block 0x35d
[0x35d:0x398]
---
Predecessors: [0x357]
Successors: [0x399, 0x3a2]
---
0x35d CALLER
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 AND
0x374 PUSH2 0x8fc
0x377 DUP3
0x378 SWAP1
0x379 DUP2
0x37a ISZERO
0x37b MUL
0x37c SWAP1
0x37d PUSH1 0x40
0x37f MLOAD
0x380 PUSH1 0x0
0x382 PUSH1 0x40
0x384 MLOAD
0x385 DUP1
0x386 DUP4
0x387 SUB
0x388 DUP2
0x389 DUP6
0x38a DUP9
0x38b DUP9
0x38c CALL
0x38d SWAP4
0x38e POP
0x38f POP
0x390 POP
0x391 POP
0x392 ISZERO
0x393 DUP1
0x394 ISZERO
0x395 PUSH2 0x3a2
0x398 JUMPI
---
0x35d: V198 = CALLER
0x35e: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x374: V201 = 0x8fc
0x37a: V202 = ISZERO V44
0x37b: V203 = MUL V202 0x8fc
0x37d: V204 = 0x40
0x37f: V205 = M[0x40]
0x380: V206 = 0x0
0x382: V207 = 0x40
0x384: V208 = M[0x40]
0x387: V209 = SUB V205 V208
0x38c: V210 = CALL V203 V200 V44 V208 V209 V208 0x0
0x392: V211 = ISZERO V210
0x394: V212 = ISZERO V211
0x395: V213 = 0x3a2
0x398: JUMPI 0x3a2 V212
---
Entry stack: [V11, 0xba, V44]
Stack pops: 1
Stack additions: [S0, V211]
Exit stack: [V11, 0xba, V44, V211]

================================

Block 0x399
[0x399:0x3a1]
---
Predecessors: [0x35d]
Successors: []
---
0x399 RETURNDATASIZE
0x39a PUSH1 0x0
0x39c DUP1
0x39d RETURNDATACOPY
0x39e RETURNDATASIZE
0x39f PUSH1 0x0
0x3a1 REVERT
---
0x399: V214 = RETURNDATASIZE
0x39a: V215 = 0x0
0x39d: RETURNDATACOPY 0x0 0x0 V214
0x39e: V216 = RETURNDATASIZE
0x39f: V217 = 0x0
0x3a1: REVERT 0x0 V216
---
Entry stack: [V11, 0xba, V44, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba, V44, V211]

================================

Block 0x3a2
[0x3a2:0x3a3]
---
Predecessors: [0x35d]
Successors: [0x3a4]
---
0x3a2 JUMPDEST
0x3a3 POP
---
0x3a2: JUMPDEST 
---
Entry stack: [V11, 0xba, V44, V211]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xba, V44]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x357, 0x3a2]
Successors: [0x3a5]
---
0x3a4 JUMPDEST
---
0x3a4: JUMPDEST 
---
Entry stack: [V11, 0xba, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba, V44]

================================

Block 0x3a5
[0x3a5:0x3a7]
---
Predecessors: [0x2b3, 0x3a4]
Successors: [0xba]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 JUMP
---
0x3a5: JUMPDEST 
0x3a7: JUMP 0xba
---
Entry stack: [V11, 0xba, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a8
[0x3a8:0x3bf]
---
Predecessors: [0xc8]
Successors: [0xfd]
---
0x3a8 JUMPDEST
0x3a9 PUSH1 0x2
0x3ab PUSH1 0x20
0x3ad MSTORE
0x3ae DUP1
0x3af PUSH1 0x0
0x3b1 MSTORE
0x3b2 PUSH1 0x40
0x3b4 PUSH1 0x0
0x3b6 SHA3
0x3b7 PUSH1 0x0
0x3b9 SWAP2
0x3ba POP
0x3bb SWAP1
0x3bc POP
0x3bd SLOAD
0x3be DUP2
0x3bf JUMP
---
0x3a8: JUMPDEST 
0x3a9: V218 = 0x2
0x3ab: V219 = 0x20
0x3ad: M[0x20] = 0x2
0x3af: V220 = 0x0
0x3b1: M[0x0] = V59
0x3b2: V221 = 0x40
0x3b4: V222 = 0x0
0x3b6: V223 = SHA3 0x0 0x40
0x3b7: V224 = 0x0
0x3bd: V225 = S[V223]
0x3bf: JUMP 0xfd
---
Entry stack: [V11, 0xfd, V59]
Stack pops: 2
Stack additions: [S1, V225]
Exit stack: [V11, 0xfd, V225]

================================

Block 0x3c0
[0x3c0:0x415]
---
Predecessors: [0x11f]
Successors: [0x416, 0x456]
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 SWAP1
0x3c5 SLOAD
0x3c6 SWAP1
0x3c7 PUSH2 0x100
0x3ca EXP
0x3cb SWAP1
0x3cc DIV
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 CALLER
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 EQ
0x411 ISZERO
0x412 PUSH2 0x456
0x415 JUMPI
---
0x3c0: JUMPDEST 
0x3c1: V226 = 0x0
0x3c5: V227 = S[0x0]
0x3c7: V228 = 0x100
0x3ca: V229 = EXP 0x100 0x0
0x3cc: V230 = DIV V227 0x1
0x3cd: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x3e3: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x3f9: V235 = CALLER
0x3fa: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x410: V238 = EQ V237 V234
0x411: V239 = ISZERO V238
0x412: V240 = 0x456
0x415: JUMPI 0x456 V239
---
Entry stack: [V11, 0x154, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x154, V81]

================================

Block 0x416
[0x416:0x455]
---
Predecessors: [0x3c0]
Successors: [0x456]
---
0x416 DUP1
0x417 PUSH1 0x0
0x419 DUP1
0x41a PUSH2 0x100
0x41d EXP
0x41e DUP2
0x41f SLOAD
0x420 DUP2
0x421 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x436 MUL
0x437 NOT
0x438 AND
0x439 SWAP1
0x43a DUP4
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 MUL
0x452 OR
0x453 SWAP1
0x454 SSTORE
0x455 POP
---
0x417: V241 = 0x0
0x41a: V242 = 0x100
0x41d: V243 = EXP 0x100 0x0
0x41f: V244 = S[0x0]
0x421: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x436: V246 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x437: V247 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x438: V248 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V244
0x43b: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x451: V251 = MUL V250 0x1
0x452: V252 = OR V251 V248
0x454: S[0x0] = V252
---
Entry stack: [V11, 0x154, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x154, V81]

================================

Block 0x456
[0x456:0x458]
---
Predecessors: [0x3c0, 0x416]
Successors: [0x154]
---
0x456 JUMPDEST
0x457 POP
0x458 JUMP
---
0x456: JUMPDEST 
0x458: JUMP 0x154
---
Entry stack: [V11, 0x154, V81]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x459
[0x459:0x47e]
---
Predecessors: [0x162]
Successors: [0x16b]
---
0x459 JUMPDEST
0x45a PUSH1 0x1
0x45c PUSH1 0x0
0x45e SWAP1
0x45f SLOAD
0x460 SWAP1
0x461 PUSH2 0x100
0x464 EXP
0x465 SWAP1
0x466 DIV
0x467 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47c AND
0x47d DUP2
0x47e JUMP
---
0x459: JUMPDEST 
0x45a: V253 = 0x1
0x45c: V254 = 0x0
0x45f: V255 = S[0x1]
0x461: V256 = 0x100
0x464: V257 = EXP 0x100 0x0
0x466: V258 = DIV V255 0x1
0x467: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x47e: JUMP 0x16b
---
Entry stack: [V11, 0x16b]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V11, 0x16b, V260]

================================

Block 0x47f
[0x47f:0x4a9]
---
Predecessors: [0x1ad]
Successors: [0x4aa]
---
0x47f JUMPDEST
0x480 DUP2
0x481 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x496 AND
0x497 CALLVALUE
0x498 DUP3
0x499 PUSH1 0x40
0x49b MLOAD
0x49c DUP1
0x49d DUP3
0x49e DUP1
0x49f MLOAD
0x4a0 SWAP1
0x4a1 PUSH1 0x20
0x4a3 ADD
0x4a4 SWAP1
0x4a5 DUP1
0x4a6 DUP4
0x4a7 DUP4
0x4a8 PUSH1 0x0
---
0x47f: JUMPDEST 
0x481: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x496: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x497: V263 = CALLVALUE
0x499: V264 = 0x40
0x49b: V265 = M[0x40]
0x49f: V266 = M[V127]
0x4a1: V267 = 0x20
0x4a3: V268 = ADD 0x20 V127
0x4a8: V269 = 0x0
---
Entry stack: [V11, 0x227, V109, V127]
Stack pops: 2
Stack additions: [S1, S0, V262, V263, S0, V265, V265, V268, V266, V266, V265, V268, 0x0]
Exit stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V265, V268, V266, V266, V265, V268, 0x0]

================================

Block 0x4aa
[0x4aa:0x4b2]
---
Predecessors: [0x47f, 0x4b3]
Successors: [0x4b3, 0x4c5]
---
0x4aa JUMPDEST
0x4ab DUP4
0x4ac DUP2
0x4ad LT
0x4ae ISZERO
0x4af PUSH2 0x4c5
0x4b2 JUMPI
---
0x4aa: JUMPDEST 
0x4ad: V270 = LT S0 V266
0x4ae: V271 = ISZERO V270
0x4af: V272 = 0x4c5
0x4b2: JUMPI 0x4c5 V271
---
Entry stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V265, V268, V266, V266, V265, V268, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V265, V268, V266, V266, V265, V268, S0]

================================

Block 0x4b3
[0x4b3:0x4c4]
---
Predecessors: [0x4aa]
Successors: [0x4aa]
---
0x4b3 DUP1
0x4b4 DUP3
0x4b5 ADD
0x4b6 MLOAD
0x4b7 DUP2
0x4b8 DUP5
0x4b9 ADD
0x4ba MSTORE
0x4bb PUSH1 0x20
0x4bd DUP2
0x4be ADD
0x4bf SWAP1
0x4c0 POP
0x4c1 PUSH2 0x4aa
0x4c4 JUMP
---
0x4b5: V273 = ADD V268 S0
0x4b6: V274 = M[V273]
0x4b9: V275 = ADD V265 S0
0x4ba: M[V275] = V274
0x4bb: V276 = 0x20
0x4be: V277 = ADD S0 0x20
0x4c1: V278 = 0x4aa
0x4c4: JUMP 0x4aa
---
Entry stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V265, V268, V266, V266, V265, V268, S0]
Stack pops: 3
Stack additions: [S2, S1, V277]
Exit stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V265, V268, V266, V266, V265, V268, V277]

================================

Block 0x4c5
[0x4c5:0x4d8]
---
Predecessors: [0x4aa]
Successors: [0x4d9, 0x4f2]
---
0x4c5 JUMPDEST
0x4c6 POP
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca SWAP1
0x4cb POP
0x4cc SWAP1
0x4cd DUP2
0x4ce ADD
0x4cf SWAP1
0x4d0 PUSH1 0x1f
0x4d2 AND
0x4d3 DUP1
0x4d4 ISZERO
0x4d5 PUSH2 0x4f2
0x4d8 JUMPI
---
0x4c5: JUMPDEST 
0x4ce: V279 = ADD V266 V265
0x4d0: V280 = 0x1f
0x4d2: V281 = AND 0x1f V266
0x4d4: V282 = ISZERO V281
0x4d5: V283 = 0x4f2
0x4d8: JUMPI 0x4f2 V282
---
Entry stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V265, V268, V266, V266, V265, V268, S0]
Stack pops: 7
Stack additions: [V279, V281]
Exit stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V279, V281]

================================

Block 0x4d9
[0x4d9:0x4f1]
---
Predecessors: [0x4c5]
Successors: [0x4f2]
---
0x4d9 DUP1
0x4da DUP3
0x4db SUB
0x4dc DUP1
0x4dd MLOAD
0x4de PUSH1 0x1
0x4e0 DUP4
0x4e1 PUSH1 0x20
0x4e3 SUB
0x4e4 PUSH2 0x100
0x4e7 EXP
0x4e8 SUB
0x4e9 NOT
0x4ea AND
0x4eb DUP2
0x4ec MSTORE
0x4ed PUSH1 0x20
0x4ef ADD
0x4f0 SWAP2
0x4f1 POP
---
0x4db: V284 = SUB V279 V281
0x4dd: V285 = M[V284]
0x4de: V286 = 0x1
0x4e1: V287 = 0x20
0x4e3: V288 = SUB 0x20 V281
0x4e4: V289 = 0x100
0x4e7: V290 = EXP 0x100 V288
0x4e8: V291 = SUB V290 0x1
0x4e9: V292 = NOT V291
0x4ea: V293 = AND V292 V285
0x4ec: M[V284] = V293
0x4ed: V294 = 0x20
0x4ef: V295 = ADD 0x20 V284
---
Entry stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V279, V281]
Stack pops: 2
Stack additions: [V295, S0]
Exit stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, V295, V281]

================================

Block 0x4f2
[0x4f2:0x50b]
---
Predecessors: [0x4c5, 0x4d9]
Successors: [0x227]
---
0x4f2 JUMPDEST
0x4f3 POP
0x4f4 SWAP2
0x4f5 POP
0x4f6 POP
0x4f7 PUSH1 0x0
0x4f9 PUSH1 0x40
0x4fb MLOAD
0x4fc DUP1
0x4fd DUP4
0x4fe SUB
0x4ff DUP2
0x500 DUP6
0x501 DUP8
0x502 GAS
0x503 CALL
0x504 SWAP3
0x505 POP
0x506 POP
0x507 POP
0x508 POP
0x509 POP
0x50a POP
0x50b JUMP
---
0x4f2: JUMPDEST 
0x4f7: V296 = 0x0
0x4f9: V297 = 0x40
0x4fb: V298 = M[0x40]
0x4fe: V299 = SUB S1 V298
0x502: V300 = GAS
0x503: V301 = CALL V300 V262 V263 V298 V299 V298 0x0
0x50b: JUMP 0x227
---
Entry stack: [V11, 0x227, V109, V127, V262, V263, V127, V265, S1, V281]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x50c
[0x50c:0x51c]
---
Predecessors: [0x229, 0x268]
Successors: [0x51d, 0x56a]
---
0x50c JUMPDEST
0x50d PUSH8 0x6f05b59d3b20000
0x516 CALLVALUE
0x517 GT
0x518 ISZERO
0x519 PUSH2 0x56a
0x51c JUMPI
---
0x50c: JUMPDEST 
0x50d: V302 = 0x6f05b59d3b20000
0x516: V303 = CALLVALUE
0x517: V304 = GT V303 0x6f05b59d3b20000
0x518: V305 = ISZERO V304
0x519: V306 = 0x56a
0x51c: JUMPI 0x56a V305
---
Entry stack: [V11, S1, {0x231, 0x2b0}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x231, 0x2b0}]

================================

Block 0x51d
[0x51d:0x569]
---
Predecessors: [0x50c]
Successors: [0x56a]
---
0x51d CALLVALUE
0x51e PUSH1 0x2
0x520 PUSH1 0x0
0x522 CALLER
0x523 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x538 AND
0x539 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54e AND
0x54f DUP2
0x550 MSTORE
0x551 PUSH1 0x20
0x553 ADD
0x554 SWAP1
0x555 DUP2
0x556 MSTORE
0x557 PUSH1 0x20
0x559 ADD
0x55a PUSH1 0x0
0x55c SHA3
0x55d PUSH1 0x0
0x55f DUP3
0x560 DUP3
0x561 SLOAD
0x562 ADD
0x563 SWAP3
0x564 POP
0x565 POP
0x566 DUP2
0x567 SWAP1
0x568 SSTORE
0x569 POP
---
0x51d: V307 = CALLVALUE
0x51e: V308 = 0x2
0x520: V309 = 0x0
0x522: V310 = CALLER
0x523: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x538: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x539: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x550: M[0x0] = V314
0x551: V315 = 0x20
0x553: V316 = ADD 0x20 0x0
0x556: M[0x20] = 0x2
0x557: V317 = 0x20
0x559: V318 = ADD 0x20 0x20
0x55a: V319 = 0x0
0x55c: V320 = SHA3 0x0 0x40
0x55d: V321 = 0x0
0x561: V322 = S[V320]
0x562: V323 = ADD V322 V307
0x568: S[V320] = V323
---
Entry stack: [V11, S1, {0x231, 0x2b0}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x231, 0x2b0}]

================================

Block 0x56a
[0x56a:0x56b]
---
Predecessors: [0x50c, 0x51d]
Successors: [0x231, 0x2b0]
---
0x56a JUMPDEST
0x56b JUMP
---
0x56a: JUMPDEST 
0x56b: JUMP {0x231, 0x2b0}
---
Entry stack: [V11, S1, {0x231, 0x2b0}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x56c
[0x56c:0x5a4]
---
Predecessors: []
Successors: [0x5a5]
---
0x56c STOP
0x56d LOG1
0x56e PUSH6 0x627a7a723058
0x575 SHA3
0x576 SWAP14
0x577 CALLER
0x578 MISSING 0xa5
0x579 PUSH31 0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960
0x599 DUP1
0x59a PUSH1 0x40
0x59c MSTORE
0x59d PUSH1 0x4
0x59f CALLDATASIZE
0x5a0 LT
0x5a1 PUSH2 0x4c
0x5a4 JUMPI
---
0x56c: STOP 
0x56d: LOG S0 S1 S2
0x56e: V324 = 0x627a7a723058
0x575: V325 = SHA3 0x627a7a723058 S3
0x577: V326 = CALLER
0x578: MISSING 0xa5
0x579: V327 = 0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960
0x59a: V328 = 0x40
0x59c: M[0x40] = 0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960
0x59d: V329 = 0x4
0x59f: V330 = CALLDATASIZE
0x5a0: V331 = LT V330 0x4
0x5a1: V332 = 0x4c
0x5a4: THROWI V331
---
Entry stack: []
Stack pops: 0
Stack additions: [V326, S17, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V325, 0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960]
Exit stack: []

================================

Block 0x5a5
[0x5a5:0x5d8]
---
Predecessors: [0x56c]
Successors: [0x5d9]
---
0x5a5 PUSH1 0x0
0x5a7 CALLDATALOAD
0x5a8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5c6 SWAP1
0x5c7 DIV
0x5c8 PUSH4 0xffffffff
0x5cd AND
0x5ce DUP1
0x5cf PUSH4 0x4fb2e45d
0x5d4 EQ
0x5d5 PUSH2 0x51
0x5d8 JUMPI
---
0x5a5: V333 = 0x0
0x5a7: V334 = CALLDATALOAD 0x0
0x5a8: V335 = 0x100000000000000000000000000000000000000000000000000000000
0x5c7: V336 = DIV V334 0x100000000000000000000000000000000000000000000000000000000
0x5c8: V337 = 0xffffffff
0x5cd: V338 = AND 0xffffffff V336
0x5cf: V339 = 0x4fb2e45d
0x5d4: V340 = EQ 0x4fb2e45d V338
0x5d5: V341 = 0x51
0x5d8: THROWI V340
---
Entry stack: [0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960]
Stack pops: 0
Stack additions: [V338]
Exit stack: [0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960, V338]

================================

Block 0x5d9
[0x5d9:0x5e3]
---
Predecessors: [0x5a5]
Successors: [0x5e4]
---
0x5d9 DUP1
0x5da PUSH4 0xbe6d055a
0x5df EQ
0x5e0 PUSH2 0x94
0x5e3 JUMPI
---
0x5da: V342 = 0xbe6d055a
0x5df: V343 = EQ 0xbe6d055a V338
0x5e0: V344 = 0x94
0x5e3: THROWI V343
---
Entry stack: [0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960, V338]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960, V338]

================================

Block 0x5e4
[0x5e4:0x5f0]
---
Predecessors: [0x5d9]
Successors: [0x5f1]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x0
0x5e7 DUP1
0x5e8 REVERT
0x5e9 JUMPDEST
0x5ea CALLVALUE
0x5eb DUP1
0x5ec ISZERO
0x5ed PUSH2 0x5d
0x5f0 JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V345 = 0x0
0x5e8: REVERT 0x0 0x0
0x5e9: JUMPDEST 
0x5ea: V346 = CALLVALUE
0x5ec: V347 = ISZERO V346
0x5ed: V348 = 0x5d
0x5f0: THROWI V347
---
Entry stack: [0x11687bcf9d64fb0427fb76a28a96f606e15163f40c2d8e1421272ff4002960, V338]
Stack pops: 0
Stack additions: [V346]
Exit stack: []

================================

Block 0x5f1
[0x5f1:0x6fd]
---
Predecessors: [0x5e4]
Successors: [0x6fe]
---
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 REVERT
0x5f5 JUMPDEST
0x5f6 POP
0x5f7 PUSH2 0x92
0x5fa PUSH1 0x4
0x5fc DUP1
0x5fd CALLDATASIZE
0x5fe SUB
0x5ff DUP2
0x600 ADD
0x601 SWAP1
0x602 DUP1
0x603 DUP1
0x604 CALLDATALOAD
0x605 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61a AND
0x61b SWAP1
0x61c PUSH1 0x20
0x61e ADD
0x61f SWAP1
0x620 SWAP3
0x621 SWAP2
0x622 SWAP1
0x623 POP
0x624 POP
0x625 POP
0x626 PUSH2 0x110
0x629 JUMP
0x62a JUMPDEST
0x62b STOP
0x62c JUMPDEST
0x62d PUSH2 0x10e
0x630 PUSH1 0x4
0x632 DUP1
0x633 CALLDATASIZE
0x634 SUB
0x635 DUP2
0x636 ADD
0x637 SWAP1
0x638 DUP1
0x639 DUP1
0x63a CALLDATALOAD
0x63b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x650 AND
0x651 SWAP1
0x652 PUSH1 0x20
0x654 ADD
0x655 SWAP1
0x656 SWAP3
0x657 SWAP2
0x658 SWAP1
0x659 DUP1
0x65a CALLDATALOAD
0x65b SWAP1
0x65c PUSH1 0x20
0x65e ADD
0x65f SWAP1
0x660 DUP3
0x661 ADD
0x662 DUP1
0x663 CALLDATALOAD
0x664 SWAP1
0x665 PUSH1 0x20
0x667 ADD
0x668 SWAP1
0x669 DUP1
0x66a DUP1
0x66b PUSH1 0x1f
0x66d ADD
0x66e PUSH1 0x20
0x670 DUP1
0x671 SWAP2
0x672 DIV
0x673 MUL
0x674 PUSH1 0x20
0x676 ADD
0x677 PUSH1 0x40
0x679 MLOAD
0x67a SWAP1
0x67b DUP2
0x67c ADD
0x67d PUSH1 0x40
0x67f MSTORE
0x680 DUP1
0x681 SWAP4
0x682 SWAP3
0x683 SWAP2
0x684 SWAP1
0x685 DUP2
0x686 DUP2
0x687 MSTORE
0x688 PUSH1 0x20
0x68a ADD
0x68b DUP4
0x68c DUP4
0x68d DUP1
0x68e DUP3
0x68f DUP5
0x690 CALLDATACOPY
0x691 DUP3
0x692 ADD
0x693 SWAP2
0x694 POP
0x695 POP
0x696 POP
0x697 POP
0x698 POP
0x699 POP
0x69a SWAP2
0x69b SWAP3
0x69c SWAP2
0x69d SWAP3
0x69e SWAP1
0x69f POP
0x6a0 POP
0x6a1 POP
0x6a2 PUSH2 0x1a9
0x6a5 JUMP
0x6a6 JUMPDEST
0x6a7 STOP
0x6a8 JUMPDEST
0x6a9 PUSH1 0x0
0x6ab DUP1
0x6ac SWAP1
0x6ad SLOAD
0x6ae SWAP1
0x6af PUSH2 0x100
0x6b2 EXP
0x6b3 SWAP1
0x6b4 DIV
0x6b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ca AND
0x6cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e0 AND
0x6e1 CALLER
0x6e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f7 AND
0x6f8 EQ
0x6f9 ISZERO
0x6fa PUSH2 0x1a6
0x6fd JUMPI
---
0x5f1: V349 = 0x0
0x5f4: REVERT 0x0 0x0
0x5f5: JUMPDEST 
0x5f7: V350 = 0x92
0x5fa: V351 = 0x4
0x5fd: V352 = CALLDATASIZE
0x5fe: V353 = SUB V352 0x4
0x600: V354 = ADD 0x4 V353
0x604: V355 = CALLDATALOAD 0x4
0x605: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x61a: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x61c: V358 = 0x20
0x61e: V359 = ADD 0x20 0x4
0x626: V360 = 0x110
0x629: THROW 
0x62a: JUMPDEST 
0x62b: STOP 
0x62c: JUMPDEST 
0x62d: V361 = 0x10e
0x630: V362 = 0x4
0x633: V363 = CALLDATASIZE
0x634: V364 = SUB V363 0x4
0x636: V365 = ADD 0x4 V364
0x63a: V366 = CALLDATALOAD 0x4
0x63b: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x650: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x652: V369 = 0x20
0x654: V370 = ADD 0x20 0x4
0x65a: V371 = CALLDATALOAD 0x24
0x65c: V372 = 0x20
0x65e: V373 = ADD 0x20 0x24
0x661: V374 = ADD 0x4 V371
0x663: V375 = CALLDATALOAD V374
0x665: V376 = 0x20
0x667: V377 = ADD 0x20 V374
0x66b: V378 = 0x1f
0x66d: V379 = ADD 0x1f V375
0x66e: V380 = 0x20
0x672: V381 = DIV V379 0x20
0x673: V382 = MUL V381 0x20
0x674: V383 = 0x20
0x676: V384 = ADD 0x20 V382
0x677: V385 = 0x40
0x679: V386 = M[0x40]
0x67c: V387 = ADD V386 V384
0x67d: V388 = 0x40
0x67f: M[0x40] = V387
0x687: M[V386] = V375
0x688: V389 = 0x20
0x68a: V390 = ADD 0x20 V386
0x690: CALLDATACOPY V390 V377 V375
0x692: V391 = ADD V390 V375
0x6a2: V392 = 0x1a9
0x6a5: THROW 
0x6a6: JUMPDEST 
0x6a7: STOP 
0x6a8: JUMPDEST 
0x6a9: V393 = 0x0
0x6ad: V394 = S[0x0]
0x6af: V395 = 0x100
0x6b2: V396 = EXP 0x100 0x0
0x6b4: V397 = DIV V394 0x1
0x6b5: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ca: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x6cb: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x6e1: V402 = CALLER
0x6e2: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x6f8: V405 = EQ V404 V401
0x6f9: V406 = ISZERO V405
0x6fa: V407 = 0x1a6
0x6fd: THROWI V406
---
Entry stack: [V346]
Stack pops: 0
Stack additions: [V357, 0x92, V386, V368, 0x10e]
Exit stack: []

================================

Block 0x6fe
[0x6fe:0x73d]
---
Predecessors: [0x5f1]
Successors: [0x73e]
---
0x6fe DUP1
0x6ff PUSH1 0x0
0x701 DUP1
0x702 PUSH2 0x100
0x705 EXP
0x706 DUP2
0x707 SLOAD
0x708 DUP2
0x709 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71e MUL
0x71f NOT
0x720 AND
0x721 SWAP1
0x722 DUP4
0x723 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x738 AND
0x739 MUL
0x73a OR
0x73b SWAP1
0x73c SSTORE
0x73d POP
---
0x6ff: V408 = 0x0
0x702: V409 = 0x100
0x705: V410 = EXP 0x100 0x0
0x707: V411 = S[0x0]
0x709: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x71e: V413 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x71f: V414 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x720: V415 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V411
0x723: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x738: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x739: V418 = MUL V417 0x1
0x73a: V419 = OR V418 V415
0x73c: S[0x0] = V419
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x73e
[0x73e:0x76b]
---
Predecessors: [0x6fe]
Successors: [0x76c]
---
0x73e JUMPDEST
0x73f POP
0x740 JUMP
0x741 JUMPDEST
0x742 DUP2
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 CALLVALUE
0x75a DUP3
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP1
0x75f DUP3
0x760 DUP1
0x761 MLOAD
0x762 SWAP1
0x763 PUSH1 0x20
0x765 ADD
0x766 SWAP1
0x767 DUP1
0x768 DUP4
0x769 DUP4
0x76a PUSH1 0x0
---
0x73e: JUMPDEST 
0x740: JUMP S1
0x741: JUMPDEST 
0x743: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x759: V422 = CALLVALUE
0x75b: V423 = 0x40
0x75d: V424 = M[0x40]
0x761: V425 = M[S0]
0x763: V426 = 0x20
0x765: V427 = ADD 0x20 S0
0x76a: V428 = 0x0
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [0x0, V427, V424, V425, V425, V427, V424, V424, S0, V422, V421, S0, S1]
Exit stack: []

================================

Block 0x76c
[0x76c:0x774]
---
Predecessors: [0x73e]
Successors: [0x775]
---
0x76c JUMPDEST
0x76d DUP4
0x76e DUP2
0x76f LT
0x770 ISZERO
0x771 PUSH2 0x1ef
0x774 JUMPI
---
0x76c: JUMPDEST 
0x76f: V429 = LT 0x0 V425
0x770: V430 = ISZERO V429
0x771: V431 = 0x1ef
0x774: THROWI V430
---
Entry stack: [S12, S11, V421, V422, S8, V424, V424, V427, V425, V425, V424, V427, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S12, S11, V421, V422, S8, V424, V424, V427, V425, V425, V424, V427, 0x0]

================================

Block 0x775
[0x775:0x79a]
---
Predecessors: [0x76c]
Successors: [0x79b]
---
0x775 DUP1
0x776 DUP3
0x777 ADD
0x778 MLOAD
0x779 DUP2
0x77a DUP5
0x77b ADD
0x77c MSTORE
0x77d PUSH1 0x20
0x77f DUP2
0x780 ADD
0x781 SWAP1
0x782 POP
0x783 PUSH2 0x1d4
0x786 JUMP
0x787 JUMPDEST
0x788 POP
0x789 POP
0x78a POP
0x78b POP
0x78c SWAP1
0x78d POP
0x78e SWAP1
0x78f DUP2
0x790 ADD
0x791 SWAP1
0x792 PUSH1 0x1f
0x794 AND
0x795 DUP1
0x796 ISZERO
0x797 PUSH2 0x21c
0x79a JUMPI
---
0x777: V432 = ADD V427 0x0
0x778: V433 = M[V432]
0x77b: V434 = ADD V424 0x0
0x77c: M[V434] = V433
0x77d: V435 = 0x20
0x780: V436 = ADD 0x0 0x20
0x783: V437 = 0x1d4
0x786: THROW 
0x787: JUMPDEST 
0x790: V438 = ADD S4 S6
0x792: V439 = 0x1f
0x794: V440 = AND 0x1f S4
0x796: V441 = ISZERO V440
0x797: V442 = 0x21c
0x79a: THROWI V441
---
Entry stack: [S12, S11, V421, V422, S8, V424, V424, V427, V425, V425, V424, V427, 0x0]
Stack pops: 3
Stack additions: [V440, V438]
Exit stack: []

================================

Block 0x79b
[0x79b:0x7b3]
---
Predecessors: [0x775]
Successors: [0x7b4]
---
0x79b DUP1
0x79c DUP3
0x79d SUB
0x79e DUP1
0x79f MLOAD
0x7a0 PUSH1 0x1
0x7a2 DUP4
0x7a3 PUSH1 0x20
0x7a5 SUB
0x7a6 PUSH2 0x100
0x7a9 EXP
0x7aa SUB
0x7ab NOT
0x7ac AND
0x7ad DUP2
0x7ae MSTORE
0x7af PUSH1 0x20
0x7b1 ADD
0x7b2 SWAP2
0x7b3 POP
---
0x79d: V443 = SUB V438 V440
0x79f: V444 = M[V443]
0x7a0: V445 = 0x1
0x7a3: V446 = 0x20
0x7a5: V447 = SUB 0x20 V440
0x7a6: V448 = 0x100
0x7a9: V449 = EXP 0x100 V447
0x7aa: V450 = SUB V449 0x1
0x7ab: V451 = NOT V450
0x7ac: V452 = AND V451 V444
0x7ae: M[V443] = V452
0x7af: V453 = 0x20
0x7b1: V454 = ADD 0x20 V443
---
Entry stack: [V438, V440]
Stack pops: 2
Stack additions: [V454, S0]
Exit stack: [V454, V440]

================================

Block 0x7b4
[0x7b4:0x7f9]
---
Predecessors: [0x79b]
Successors: []
---
0x7b4 JUMPDEST
0x7b5 POP
0x7b6 SWAP2
0x7b7 POP
0x7b8 POP
0x7b9 PUSH1 0x0
0x7bb PUSH1 0x40
0x7bd MLOAD
0x7be DUP1
0x7bf DUP4
0x7c0 SUB
0x7c1 DUP2
0x7c2 DUP6
0x7c3 DUP8
0x7c4 GAS
0x7c5 CALL
0x7c6 SWAP3
0x7c7 POP
0x7c8 POP
0x7c9 POP
0x7ca POP
0x7cb POP
0x7cc POP
0x7cd JUMP
0x7ce STOP
0x7cf LOG1
0x7d0 PUSH6 0x627a7a723058
0x7d7 SHA3
0x7d8 PUSH8 0x5f323552874a33f5
0x7e1 MISSING 0xa6
0x7e2 PUSH22 0x974bf191b6fb13e3724c0e4daa7fcacc0129c7999d00
0x7f9 MISSING 0x29
---
0x7b4: JUMPDEST 
0x7b9: V455 = 0x0
0x7bb: V456 = 0x40
0x7bd: V457 = M[0x40]
0x7c0: V458 = SUB V454 V457
0x7c4: V459 = GAS
0x7c5: V460 = CALL V459 S5 S4 V457 V458 V457 0x0
0x7cd: JUMP S8
0x7ce: STOP 
0x7cf: LOG S0 S1 S2
0x7d0: V461 = 0x627a7a723058
0x7d7: V462 = SHA3 0x627a7a723058 S3
0x7d8: V463 = 0x5f323552874a33f5
0x7e1: MISSING 0xa6
0x7e2: V464 = 0x974bf191b6fb13e3724c0e4daa7fcacc0129c7999d00
0x7f9: MISSING 0x29
---
Entry stack: [V454, V440]
Stack pops: 70
Stack additions: [0x974bf191b6fb13e3724c0e4daa7fcacc0129c7999d00]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d2c44f2
Entry block: 0x85
Exit block: 0x8d
Body: 0x85, 0x8d, 0x233, 0x268, 0x2b0, 0x2b1

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x8f
Exit block: 0x399
Body: 0x8f, 0x97, 0x9b, 0xba, 0x2b3, 0x309, 0x313, 0x357, 0x35d, 0x399, 0x3a2, 0x3a4, 0x3a5

Function 2:
Public function signature: 0x3ee2d7c2
Entry block: 0xbc
Exit block: 0xfd
Body: 0xbc, 0xc4, 0xc8, 0xfd, 0x3a8

Function 3:
Public function signature: 0x4fb2e45d
Entry block: 0x113
Exit block: 0x154
Body: 0x113, 0x11b, 0x11f, 0x154, 0x3c0, 0x416, 0x456

Function 4:
Public function signature: 0xb4a99a4e
Entry block: 0x156
Exit block: 0x16b
Body: 0x156, 0x15e, 0x162, 0x16b, 0x459

Function 5:
Public function signature: 0xbe6d055a
Entry block: 0x1ad
Exit block: 0x227
Body: 0x1ad, 0x227, 0x47f, 0x4aa, 0x4b3, 0x4c5, 0x4d9, 0x4f2

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x229
Exit block: 0x231
Body: 0x229, 0x231

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

Function 8:
Private function
Entry block: 0x50c
Exit block: 0x56a
Body: 0x50c, 0x51d, 0x56a

