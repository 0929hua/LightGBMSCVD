Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x271]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x38af3eed
0x3a EQ
0x3b PUSH2 0x271
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x38af3eed
0x3a: V12 = EQ 0x38af3eed V10
0x3b: V13 = 0x271
0x3e: JUMPI 0x271 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2c6]
---
0x3f DUP1
0x40 PUSH4 0x52c700ea
0x45 EQ
0x46 PUSH2 0x2c6
0x49 JUMPI
---
0x40: V14 = 0x52c700ea
0x45: V15 = EQ 0x52c700ea V10
0x46: V16 = 0x2c6
0x49: JUMPI 0x2c6 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x2db]
---
0x4a DUP1
0x4b PUSH4 0x5f56b6fe
0x50 EQ
0x51 PUSH2 0x2db
0x54 JUMPI
---
0x4b: V17 = 0x5f56b6fe
0x50: V18 = EQ 0x5f56b6fe V10
0x51: V19 = 0x2db
0x54: JUMPI 0x2db V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x2fe]
---
0x55 DUP1
0x56 PUSH4 0x6e66f6e9
0x5b EQ
0x5c PUSH2 0x2fe
0x5f JUMPI
---
0x56: V20 = 0x6e66f6e9
0x5b: V21 = EQ 0x6e66f6e9 V10
0x5c: V22 = 0x2fe
0x5f: JUMPI 0x2fe V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x353]
---
0x60 DUP1
0x61 PUSH4 0x70a08231
0x66 EQ
0x67 PUSH2 0x353
0x6a JUMPI
---
0x61: V23 = 0x70a08231
0x66: V24 = EQ 0x70a08231 V10
0x67: V25 = 0x353
0x6a: JUMPI 0x353 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x3a0]
---
0x6b DUP1
0x6c PUSH4 0x795ff8aa
0x71 EQ
0x72 PUSH2 0x3a0
0x75 JUMPI
---
0x6c: V26 = 0x795ff8aa
0x71: V27 = EQ 0x795ff8aa V10
0x72: V28 = 0x3a0
0x75: JUMPI 0x3a0 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x3c3]
---
0x76 DUP1
0x77 PUSH4 0xa035b1fe
0x7c EQ
0x7d PUSH2 0x3c3
0x80 JUMPI
---
0x77: V29 = 0xa035b1fe
0x7c: V30 = EQ 0xa035b1fe V10
0x7d: V31 = 0x3c3
0x80: JUMPI 0x3c3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x3ec]
---
0x81 DUP1
0x82 PUSH4 0xa2b40d19
0x87 EQ
0x88 PUSH2 0x3ec
0x8b JUMPI
---
0x82: V32 = 0xa2b40d19
0x87: V33 = EQ 0xa2b40d19 V10
0x88: V34 = 0x3ec
0x8b: JUMPI 0x3ec V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x40f]
---
0x8c DUP1
0x8d PUSH4 0xcc3bb31a
0x92 EQ
0x93 PUSH2 0x40f
0x96 JUMPI
---
0x8d: V35 = 0xcc3bb31a
0x92: V36 = EQ 0xcc3bb31a V10
0x93: V37 = 0x40f
0x96: JUMPI 0x40f V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x97]
---
Predecessors: [0x0, 0x8c]
Successors: [0x98]
---
0x97 JUMPDEST
---
0x97: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x98
[0x98:0xb1]
---
Predecessors: [0x97]
Successors: [0xb2, 0xb6]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b PUSH1 0x2
0x9d PUSH1 0x0
0x9f SWAP1
0xa0 SLOAD
0xa1 SWAP1
0xa2 PUSH2 0x100
0xa5 EXP
0xa6 SWAP1
0xa7 DIV
0xa8 PUSH1 0xff
0xaa AND
0xab ISZERO
0xac ISZERO
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0x98: JUMPDEST 
0x99: V38 = 0x0
0x9b: V39 = 0x2
0x9d: V40 = 0x0
0xa0: V41 = S[0x2]
0xa2: V42 = 0x100
0xa5: V43 = EXP 0x100 0x0
0xa7: V44 = DIV V41 0x1
0xa8: V45 = 0xff
0xaa: V46 = AND 0xff V44
0xab: V47 = ISZERO V46
0xac: V48 = ISZERO V47
0xad: V49 = ISZERO V48
0xae: V50 = 0xb6
0xb1: JUMPI 0xb6 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0x98]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V51 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xb6
[0xb6:0x15a]
---
Predecessors: [0x98]
Successors: [0x15b, 0x15c]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 SWAP1
0xb9 POP
0xba DUP1
0xbb PUSH1 0x3
0xbd PUSH1 0x0
0xbf CALLER
0xc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5 AND
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb AND
0xec DUP2
0xed MSTORE
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 DUP2
0xf3 MSTORE
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 PUSH1 0x0
0xf9 SHA3
0xfa PUSH1 0x0
0xfc DUP3
0xfd DUP3
0xfe SLOAD
0xff ADD
0x100 SWAP3
0x101 POP
0x102 POP
0x103 DUP2
0x104 SWAP1
0x105 SSTORE
0x106 POP
0x107 PUSH1 0x2
0x109 PUSH1 0x1
0x10b SWAP1
0x10c SLOAD
0x10d SWAP1
0x10e PUSH2 0x100
0x111 EXP
0x112 SWAP1
0x113 DIV
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 AND
0x12a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f AND
0x140 PUSH4 0xa9059cbb
0x145 CALLER
0x146 PUSH1 0x1
0x148 SLOAD
0x149 PUSH8 0xde0b6b3a7640000
0x152 DUP6
0x153 MUL
0x154 DUP2
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15c
0x15a JUMPI
---
0xb6: JUMPDEST 
0xb7: V52 = CALLVALUE
0xbb: V53 = 0x3
0xbd: V54 = 0x0
0xbf: V55 = CALLER
0xc0: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xd6: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xed: M[0x0] = V59
0xee: V60 = 0x20
0xf0: V61 = ADD 0x20 0x0
0xf3: M[0x20] = 0x3
0xf4: V62 = 0x20
0xf6: V63 = ADD 0x20 0x20
0xf7: V64 = 0x0
0xf9: V65 = SHA3 0x0 0x40
0xfa: V66 = 0x0
0xfe: V67 = S[V65]
0xff: V68 = ADD V67 V52
0x105: S[V65] = V68
0x107: V69 = 0x2
0x109: V70 = 0x1
0x10c: V71 = S[0x2]
0x10e: V72 = 0x100
0x111: V73 = EXP 0x100 0x1
0x113: V74 = DIV V71 0x100
0x114: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x12a: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x140: V79 = 0xa9059cbb
0x145: V80 = CALLER
0x146: V81 = 0x1
0x148: V82 = S[0x1]
0x149: V83 = 0xde0b6b3a7640000
0x153: V84 = MUL V52 0xde0b6b3a7640000
0x155: V85 = ISZERO V82
0x156: V86 = ISZERO V85
0x157: V87 = 0x15c
0x15a: JUMPI 0x15c V86
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V52, V78, 0xa9059cbb, V80, V82, V84]
Exit stack: [V10, V52, V78, 0xa9059cbb, V80, V82, V84]

================================

Block 0x15b
[0x15b:0x15b]
---
Predecessors: [0xb6]
Successors: []
---
0x15b INVALID
---
0x15b: INVALID 
---
Entry stack: [V10, V52, V78, 0xa9059cbb, V80, V82, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, V78, 0xa9059cbb, V80, V82, V84]

================================

Block 0x15c
[0x15c:0x1dc]
---
Predecessors: [0xb6]
Successors: [0x1dd, 0x1e1]
---
0x15c JUMPDEST
0x15d DIV
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP4
0x162 PUSH4 0xffffffff
0x167 AND
0x168 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x186 MUL
0x187 DUP2
0x188 MSTORE
0x189 PUSH1 0x4
0x18b ADD
0x18c DUP1
0x18d DUP4
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba DUP2
0x1bb MSTORE
0x1bc PUSH1 0x20
0x1be ADD
0x1bf DUP3
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 SWAP3
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 PUSH1 0x0
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf DUP4
0x1d0 SUB
0x1d1 DUP2
0x1d2 PUSH1 0x0
0x1d4 DUP8
0x1d5 DUP1
0x1d6 EXTCODESIZE
0x1d7 ISZERO
0x1d8 ISZERO
0x1d9 PUSH2 0x1e1
0x1dc JUMPI
---
0x15c: JUMPDEST 
0x15d: V88 = DIV V84 V82
0x15e: V89 = 0x40
0x160: V90 = M[0x40]
0x162: V91 = 0xffffffff
0x167: V92 = AND 0xffffffff 0xa9059cbb
0x168: V93 = 0x100000000000000000000000000000000000000000000000000000000
0x186: V94 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x188: M[V90] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x189: V95 = 0x4
0x18b: V96 = ADD 0x4 V90
0x18e: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x1a4: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1bb: M[V96] = V100
0x1bc: V101 = 0x20
0x1be: V102 = ADD 0x20 V96
0x1c1: M[V102] = V88
0x1c2: V103 = 0x20
0x1c4: V104 = ADD 0x20 V102
0x1c9: V105 = 0x0
0x1cb: V106 = 0x40
0x1cd: V107 = M[0x40]
0x1d0: V108 = SUB V104 V107
0x1d2: V109 = 0x0
0x1d6: V110 = EXTCODESIZE V78
0x1d7: V111 = ISZERO V110
0x1d8: V112 = ISZERO V111
0x1d9: V113 = 0x1e1
0x1dc: JUMPI 0x1e1 V112
---
Entry stack: [V10, V52, V78, 0xa9059cbb, V80, V82, V84]
Stack pops: 5
Stack additions: [S4, S3, V104, 0x0, V107, V108, V107, 0x0, S4]
Exit stack: [V10, V52, V78, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V78]

================================

Block 0x1dd
[0x1dd:0x1e0]
---
Predecessors: [0x15c]
Successors: []
---
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 REVERT
---
0x1dd: V114 = 0x0
0x1e0: REVERT 0x0 0x0
---
Entry stack: [V10, V52, V78, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, V78, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V78]

================================

Block 0x1e1
[0x1e1:0x1ed]
---
Predecessors: [0x15c]
Successors: [0x1ee, 0x1f2]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0x2c6
0x1e5 GAS
0x1e6 SUB
0x1e7 CALL
0x1e8 ISZERO
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e1: JUMPDEST 
0x1e2: V115 = 0x2c6
0x1e5: V116 = GAS
0x1e6: V117 = SUB V116 0x2c6
0x1e7: V118 = CALL V117 V78 0x0 V107 V108 V107 0x0
0x1e8: V119 = ISZERO V118
0x1e9: V120 = ISZERO V119
0x1ea: V121 = 0x1f2
0x1ed: JUMPI 0x1f2 V120
---
Entry stack: [V10, V52, V78, 0xa9059cbb, V104, 0x0, V107, V108, V107, 0x0, V78]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V52, V78, 0xa9059cbb, V104]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e1]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V122 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V10, V52, V78, 0xa9059cbb, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V52, V78, 0xa9059cbb, V104]

================================

Block 0x1f2
[0x1f2:0x26d]
---
Predecessors: [0x1e1]
Successors: [0x26e]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x217 CALLER
0x218 DUP3
0x219 PUSH1 0x1
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f DUP5
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 DUP4
0x252 DUP2
0x253 MSTORE
0x254 PUSH1 0x20
0x256 ADD
0x257 DUP3
0x258 ISZERO
0x259 ISZERO
0x25a ISZERO
0x25b ISZERO
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 ADD
0x261 SWAP4
0x262 POP
0x263 POP
0x264 POP
0x265 POP
0x266 PUSH1 0x40
0x268 MLOAD
0x269 DUP1
0x26a SWAP2
0x26b SUB
0x26c SWAP1
0x26d LOG1
---
0x1f2: JUMPDEST 
0x1f6: V123 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x217: V124 = CALLER
0x219: V125 = 0x1
0x21b: V126 = 0x40
0x21d: V127 = M[0x40]
0x220: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x236: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x24d: M[V127] = V131
0x24e: V132 = 0x20
0x250: V133 = ADD 0x20 V127
0x253: M[V133] = V52
0x254: V134 = 0x20
0x256: V135 = ADD 0x20 V133
0x258: V136 = ISZERO 0x1
0x259: V137 = ISZERO 0x0
0x25a: V138 = ISZERO 0x1
0x25b: V139 = ISZERO 0x0
0x25d: M[V135] = 0x1
0x25e: V140 = 0x20
0x260: V141 = ADD 0x20 V135
0x266: V142 = 0x40
0x268: V143 = M[0x40]
0x26b: V144 = SUB V141 V143
0x26d: LOG V143 V144 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, V52, V78, 0xa9059cbb, V104]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, V52]

================================

Block 0x26e
[0x26e:0x270]
---
Predecessors: [0x1f2]
Successors: []
---
0x26e JUMPDEST
0x26f POP
0x270 STOP
---
0x26e: JUMPDEST 
0x270: STOP 
---
Entry stack: [V10, V52]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x271
[0x271:0x277]
---
Predecessors: [0xb]
Successors: [0x278, 0x27c]
---
0x271 JUMPDEST
0x272 CALLVALUE
0x273 ISZERO
0x274 PUSH2 0x27c
0x277 JUMPI
---
0x271: JUMPDEST 
0x272: V145 = CALLVALUE
0x273: V146 = ISZERO V145
0x274: V147 = 0x27c
0x277: JUMPI 0x27c V146
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x278
[0x278:0x27b]
---
Predecessors: [0x271]
Successors: []
---
0x278 PUSH1 0x0
0x27a DUP1
0x27b REVERT
---
0x278: V148 = 0x0
0x27b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27c
[0x27c:0x283]
---
Predecessors: [0x271]
Successors: [0x424]
---
0x27c JUMPDEST
0x27d PUSH2 0x284
0x280 PUSH2 0x424
0x283 JUMP
---
0x27c: JUMPDEST 
0x27d: V149 = 0x284
0x280: V150 = 0x424
0x283: JUMP 0x424
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x284]
Exit stack: [V10, 0x284]

================================

Block 0x284
[0x284:0x2c5]
---
Predecessors: [0x424]
Successors: []
---
0x284 JUMPDEST
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 DUP3
0x28a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29f AND
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 DUP2
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb SWAP2
0x2bc POP
0x2bd POP
0x2be PUSH1 0x40
0x2c0 MLOAD
0x2c1 DUP1
0x2c2 SWAP2
0x2c3 SUB
0x2c4 SWAP1
0x2c5 RETURN
---
0x284: JUMPDEST 
0x285: V151 = 0x40
0x287: V152 = M[0x40]
0x28a: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2a0: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x2b7: M[V152] = V156
0x2b8: V157 = 0x20
0x2ba: V158 = ADD 0x20 V152
0x2be: V159 = 0x40
0x2c0: V160 = M[0x40]
0x2c3: V161 = SUB V158 V160
0x2c5: RETURN V160 V161
---
Entry stack: [V10, 0x284, V259]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x284]

================================

Block 0x2c6
[0x2c6:0x2cc]
---
Predecessors: [0x3f]
Successors: [0x2cd, 0x2d1]
---
0x2c6 JUMPDEST
0x2c7 CALLVALUE
0x2c8 ISZERO
0x2c9 PUSH2 0x2d1
0x2cc JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V162 = CALLVALUE
0x2c8: V163 = ISZERO V162
0x2c9: V164 = 0x2d1
0x2cc: JUMPI 0x2d1 V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cd
[0x2cd:0x2d0]
---
Predecessors: [0x2c6]
Successors: []
---
0x2cd PUSH1 0x0
0x2cf DUP1
0x2d0 REVERT
---
0x2cd: V165 = 0x0
0x2d0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d1
[0x2d1:0x2d8]
---
Predecessors: [0x2c6]
Successors: [0x449]
---
0x2d1 JUMPDEST
0x2d2 PUSH2 0x2d9
0x2d5 PUSH2 0x449
0x2d8 JUMP
---
0x2d1: JUMPDEST 
0x2d2: V166 = 0x2d9
0x2d5: V167 = 0x449
0x2d8: JUMP 0x449
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d9]
Exit stack: [V10, 0x2d9]

================================

Block 0x2d9
[0x2d9:0x2da]
---
Predecessors: [0x4bb]
Successors: []
---
0x2d9 JUMPDEST
0x2da STOP
---
0x2d9: JUMPDEST 
0x2da: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2db
[0x2db:0x2e1]
---
Predecessors: [0x4a]
Successors: [0x2e2, 0x2e6]
---
0x2db JUMPDEST
0x2dc CALLVALUE
0x2dd ISZERO
0x2de PUSH2 0x2e6
0x2e1 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V168 = CALLVALUE
0x2dd: V169 = ISZERO V168
0x2de: V170 = 0x2e6
0x2e1: JUMPI 0x2e6 V169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e2
[0x2e2:0x2e5]
---
Predecessors: [0x2db]
Successors: []
---
0x2e2 PUSH1 0x0
0x2e4 DUP1
0x2e5 REVERT
---
0x2e2: V171 = 0x0
0x2e5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e6
[0x2e6:0x2fb]
---
Predecessors: [0x2db]
Successors: [0x4bd]
---
0x2e6 JUMPDEST
0x2e7 PUSH2 0x2fc
0x2ea PUSH1 0x4
0x2ec DUP1
0x2ed DUP1
0x2ee CALLDATALOAD
0x2ef SWAP1
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 SWAP1
0x2f4 SWAP2
0x2f5 SWAP1
0x2f6 POP
0x2f7 POP
0x2f8 PUSH2 0x4bd
0x2fb JUMP
---
0x2e6: JUMPDEST 
0x2e7: V172 = 0x2fc
0x2ea: V173 = 0x4
0x2ee: V174 = CALLDATALOAD 0x4
0x2f0: V175 = 0x20
0x2f2: V176 = ADD 0x20 0x4
0x2f8: V177 = 0x4bd
0x2fb: JUMP 0x4bd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2fc, V174]
Exit stack: [V10, 0x2fc, V174]

================================

Block 0x2fc
[0x2fc:0x2fd]
---
Predecessors: [0x609]
Successors: []
---
0x2fc JUMPDEST
0x2fd STOP
---
0x2fc: JUMPDEST 
0x2fd: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fe
[0x2fe:0x304]
---
Predecessors: [0x55]
Successors: [0x305, 0x309]
---
0x2fe JUMPDEST
0x2ff CALLVALUE
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V178 = CALLVALUE
0x300: V179 = ISZERO V178
0x301: V180 = 0x309
0x304: JUMPI 0x309 V179
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2fe]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V181 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x309
[0x309:0x310]
---
Predecessors: [0x2fe]
Successors: [0x60c]
---
0x309 JUMPDEST
0x30a PUSH2 0x311
0x30d PUSH2 0x60c
0x310 JUMP
---
0x309: JUMPDEST 
0x30a: V182 = 0x311
0x30d: V183 = 0x60c
0x310: JUMP 0x60c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x311]
Exit stack: [V10, 0x311]

================================

Block 0x311
[0x311:0x352]
---
Predecessors: [0x60c]
Successors: []
---
0x311 JUMPDEST
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 DUP3
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP2
0x349 POP
0x34a POP
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 RETURN
---
0x311: JUMPDEST 
0x312: V184 = 0x40
0x314: V185 = M[0x40]
0x317: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x32d: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x344: M[V185] = V189
0x345: V190 = 0x20
0x347: V191 = ADD 0x20 V185
0x34b: V192 = 0x40
0x34d: V193 = M[0x40]
0x350: V194 = SUB V191 V193
0x352: RETURN V193 V194
---
Entry stack: [V10, 0x311, V360]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x311]

================================

Block 0x353
[0x353:0x359]
---
Predecessors: [0x60]
Successors: [0x35a, 0x35e]
---
0x353 JUMPDEST
0x354 CALLVALUE
0x355 ISZERO
0x356 PUSH2 0x35e
0x359 JUMPI
---
0x353: JUMPDEST 
0x354: V195 = CALLVALUE
0x355: V196 = ISZERO V195
0x356: V197 = 0x35e
0x359: JUMPI 0x35e V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35a
[0x35a:0x35d]
---
Predecessors: [0x353]
Successors: []
---
0x35a PUSH1 0x0
0x35c DUP1
0x35d REVERT
---
0x35a: V198 = 0x0
0x35d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35e
[0x35e:0x389]
---
Predecessors: [0x353]
Successors: [0x632]
---
0x35e JUMPDEST
0x35f PUSH2 0x38a
0x362 PUSH1 0x4
0x364 DUP1
0x365 DUP1
0x366 CALLDATALOAD
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d SWAP1
0x37e PUSH1 0x20
0x380 ADD
0x381 SWAP1
0x382 SWAP2
0x383 SWAP1
0x384 POP
0x385 POP
0x386 PUSH2 0x632
0x389 JUMP
---
0x35e: JUMPDEST 
0x35f: V199 = 0x38a
0x362: V200 = 0x4
0x366: V201 = CALLDATALOAD 0x4
0x367: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x37e: V204 = 0x20
0x380: V205 = ADD 0x20 0x4
0x386: V206 = 0x632
0x389: JUMP 0x632
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x38a, V203]
Exit stack: [V10, 0x38a, V203]

================================

Block 0x38a
[0x38a:0x39f]
---
Predecessors: [0x632]
Successors: []
---
0x38a JUMPDEST
0x38b PUSH1 0x40
0x38d MLOAD
0x38e DUP1
0x38f DUP3
0x390 DUP2
0x391 MSTORE
0x392 PUSH1 0x20
0x394 ADD
0x395 SWAP2
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b DUP1
0x39c SWAP2
0x39d SUB
0x39e SWAP1
0x39f RETURN
---
0x38a: JUMPDEST 
0x38b: V207 = 0x40
0x38d: V208 = M[0x40]
0x391: M[V208] = V368
0x392: V209 = 0x20
0x394: V210 = ADD 0x20 V208
0x398: V211 = 0x40
0x39a: V212 = M[0x40]
0x39d: V213 = SUB V210 V212
0x39f: RETURN V212 V213
---
Entry stack: [V10, 0x38a, V368]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x38a]

================================

Block 0x3a0
[0x3a0:0x3a6]
---
Predecessors: [0x6b]
Successors: [0x3a7, 0x3ab]
---
0x3a0 JUMPDEST
0x3a1 CALLVALUE
0x3a2 ISZERO
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V214 = CALLVALUE
0x3a2: V215 = ISZERO V214
0x3a3: V216 = 0x3ab
0x3a6: JUMPI 0x3ab V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x3a0]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V217 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ab
[0x3ab:0x3c0]
---
Predecessors: [0x3a0]
Successors: [0x64a]
---
0x3ab JUMPDEST
0x3ac PUSH2 0x3c1
0x3af PUSH1 0x4
0x3b1 DUP1
0x3b2 DUP1
0x3b3 CALLDATALOAD
0x3b4 SWAP1
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 SWAP1
0x3b9 SWAP2
0x3ba SWAP1
0x3bb POP
0x3bc POP
0x3bd PUSH2 0x64a
0x3c0 JUMP
---
0x3ab: JUMPDEST 
0x3ac: V218 = 0x3c1
0x3af: V219 = 0x4
0x3b3: V220 = CALLDATALOAD 0x4
0x3b5: V221 = 0x20
0x3b7: V222 = ADD 0x20 0x4
0x3bd: V223 = 0x64a
0x3c0: JUMP 0x64a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3c1, V220]
Exit stack: [V10, 0x3c1, V220]

================================

Block 0x3c1
[0x3c1:0x3c2]
---
Predecessors: [0x779]
Successors: []
---
0x3c1 JUMPDEST
0x3c2 STOP
---
0x3c1: JUMPDEST 
0x3c2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c3
[0x3c3:0x3c9]
---
Predecessors: [0x76]
Successors: [0x3ca, 0x3ce]
---
0x3c3 JUMPDEST
0x3c4 CALLVALUE
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V224 = CALLVALUE
0x3c5: V225 = ISZERO V224
0x3c6: V226 = 0x3ce
0x3c9: JUMPI 0x3ce V225
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3c3]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V227 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ce
[0x3ce:0x3d5]
---
Predecessors: [0x3c3]
Successors: [0x77c]
---
0x3ce JUMPDEST
0x3cf PUSH2 0x3d6
0x3d2 PUSH2 0x77c
0x3d5 JUMP
---
0x3ce: JUMPDEST 
0x3cf: V228 = 0x3d6
0x3d2: V229 = 0x77c
0x3d5: JUMP 0x77c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3d6]
Exit stack: [V10, 0x3d6]

================================

Block 0x3d6
[0x3d6:0x3eb]
---
Predecessors: [0x77c]
Successors: []
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x40
0x3d9 MLOAD
0x3da DUP1
0x3db DUP3
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 SWAP2
0x3e2 POP
0x3e3 POP
0x3e4 PUSH1 0x40
0x3e6 MLOAD
0x3e7 DUP1
0x3e8 SWAP2
0x3e9 SUB
0x3ea SWAP1
0x3eb RETURN
---
0x3d6: JUMPDEST 
0x3d7: V230 = 0x40
0x3d9: V231 = M[0x40]
0x3dd: M[V231] = V431
0x3de: V232 = 0x20
0x3e0: V233 = ADD 0x20 V231
0x3e4: V234 = 0x40
0x3e6: V235 = M[0x40]
0x3e9: V236 = SUB V233 V235
0x3eb: RETURN V235 V236
---
Entry stack: [V10, 0x3d6, V431]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3d6]

================================

Block 0x3ec
[0x3ec:0x3f2]
---
Predecessors: [0x81]
Successors: [0x3f3, 0x3f7]
---
0x3ec JUMPDEST
0x3ed CALLVALUE
0x3ee ISZERO
0x3ef PUSH2 0x3f7
0x3f2 JUMPI
---
0x3ec: JUMPDEST 
0x3ed: V237 = CALLVALUE
0x3ee: V238 = ISZERO V237
0x3ef: V239 = 0x3f7
0x3f2: JUMPI 0x3f7 V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f3
[0x3f3:0x3f6]
---
Predecessors: [0x3ec]
Successors: []
---
0x3f3 PUSH1 0x0
0x3f5 DUP1
0x3f6 REVERT
---
0x3f3: V240 = 0x0
0x3f6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f7
[0x3f7:0x40c]
---
Predecessors: [0x3ec]
Successors: [0x782]
---
0x3f7 JUMPDEST
0x3f8 PUSH2 0x40d
0x3fb PUSH1 0x4
0x3fd DUP1
0x3fe DUP1
0x3ff CALLDATALOAD
0x400 SWAP1
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP1
0x405 SWAP2
0x406 SWAP1
0x407 POP
0x408 POP
0x409 PUSH2 0x782
0x40c JUMP
---
0x3f7: JUMPDEST 
0x3f8: V241 = 0x40d
0x3fb: V242 = 0x4
0x3ff: V243 = CALLDATALOAD 0x4
0x401: V244 = 0x20
0x403: V245 = ADD 0x20 0x4
0x409: V246 = 0x782
0x40c: JUMP 0x782
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x40d, V243]
Exit stack: [V10, 0x40d, V243]

================================

Block 0x40d
[0x40d:0x40e]
---
Predecessors: [0x7e0]
Successors: []
---
0x40d JUMPDEST
0x40e STOP
---
0x40d: JUMPDEST 
0x40e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40f
[0x40f:0x415]
---
Predecessors: [0x8c]
Successors: [0x416, 0x41a]
---
0x40f JUMPDEST
0x410 CALLVALUE
0x411 ISZERO
0x412 PUSH2 0x41a
0x415 JUMPI
---
0x40f: JUMPDEST 
0x410: V247 = CALLVALUE
0x411: V248 = ISZERO V247
0x412: V249 = 0x41a
0x415: JUMPI 0x41a V248
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x40f]
Successors: []
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 REVERT
---
0x416: V250 = 0x0
0x419: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41a
[0x41a:0x421]
---
Predecessors: [0x40f]
Successors: [0x7e3]
---
0x41a JUMPDEST
0x41b PUSH2 0x422
0x41e PUSH2 0x7e3
0x421 JUMP
---
0x41a: JUMPDEST 
0x41b: V251 = 0x422
0x41e: V252 = 0x7e3
0x421: JUMP 0x7e3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x422]
Exit stack: [V10, 0x422]

================================

Block 0x422
[0x422:0x423]
---
Predecessors: [0x855]
Successors: []
---
0x422 JUMPDEST
0x423 STOP
---
0x422: JUMPDEST 
0x423: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x424
[0x424:0x448]
---
Predecessors: [0x27c]
Successors: [0x284]
---
0x424 JUMPDEST
0x425 PUSH1 0x0
0x427 DUP1
0x428 SWAP1
0x429 SLOAD
0x42a SWAP1
0x42b PUSH2 0x100
0x42e EXP
0x42f SWAP1
0x430 DIV
0x431 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x446 AND
0x447 DUP2
0x448 JUMP
---
0x424: JUMPDEST 
0x425: V253 = 0x0
0x429: V254 = S[0x0]
0x42b: V255 = 0x100
0x42e: V256 = EXP 0x100 0x0
0x430: V257 = DIV V254 0x1
0x431: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x446: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x448: JUMP 0x284
---
Entry stack: [V10, 0x284]
Stack pops: 1
Stack additions: [S0, V259]
Exit stack: [V10, 0x284, V259]

================================

Block 0x449
[0x449:0x49e]
---
Predecessors: [0x2d1]
Successors: [0x49f, 0x4ba]
---
0x449 JUMPDEST
0x44a CALLER
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 PUSH1 0x0
0x463 DUP1
0x464 SWAP1
0x465 SLOAD
0x466 SWAP1
0x467 PUSH2 0x100
0x46a EXP
0x46b SWAP1
0x46c DIV
0x46d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x482 AND
0x483 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x498 AND
0x499 EQ
0x49a ISZERO
0x49b PUSH2 0x4ba
0x49e JUMPI
---
0x449: JUMPDEST 
0x44a: V260 = CALLER
0x44b: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x461: V263 = 0x0
0x465: V264 = S[0x0]
0x467: V265 = 0x100
0x46a: V266 = EXP 0x100 0x0
0x46c: V267 = DIV V264 0x1
0x46d: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x482: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x483: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x498: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x499: V272 = EQ V271 V262
0x49a: V273 = ISZERO V272
0x49b: V274 = 0x4ba
0x49e: JUMPI 0x4ba V273
---
Entry stack: [V10, 0x2d9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2d9]

================================

Block 0x49f
[0x49f:0x4b9]
---
Predecessors: [0x449]
Successors: [0x4ba]
---
0x49f PUSH1 0x1
0x4a1 PUSH1 0x2
0x4a3 PUSH1 0x0
0x4a5 PUSH2 0x100
0x4a8 EXP
0x4a9 DUP2
0x4aa SLOAD
0x4ab DUP2
0x4ac PUSH1 0xff
0x4ae MUL
0x4af NOT
0x4b0 AND
0x4b1 SWAP1
0x4b2 DUP4
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 MUL
0x4b6 OR
0x4b7 SWAP1
0x4b8 SSTORE
0x4b9 POP
---
0x49f: V275 = 0x1
0x4a1: V276 = 0x2
0x4a3: V277 = 0x0
0x4a5: V278 = 0x100
0x4a8: V279 = EXP 0x100 0x0
0x4aa: V280 = S[0x2]
0x4ac: V281 = 0xff
0x4ae: V282 = MUL 0xff 0x1
0x4af: V283 = NOT 0xff
0x4b0: V284 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V280
0x4b3: V285 = ISZERO 0x1
0x4b4: V286 = ISZERO 0x0
0x4b5: V287 = MUL 0x1 0x1
0x4b6: V288 = OR 0x1 V284
0x4b8: S[0x2] = V288
---
Entry stack: [V10, 0x2d9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2d9]

================================

Block 0x4ba
[0x4ba:0x4ba]
---
Predecessors: [0x449, 0x49f]
Successors: [0x4bb]
---
0x4ba JUMPDEST
---
0x4ba: JUMPDEST 
---
Entry stack: [V10, 0x2d9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2d9]

================================

Block 0x4bb
[0x4bb:0x4bc]
---
Predecessors: [0x4ba]
Successors: [0x2d9]
---
0x4bb JUMPDEST
0x4bc JUMP
---
0x4bb: JUMPDEST 
0x4bc: JUMP 0x2d9
---
Entry stack: [V10, 0x2d9]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4bd
[0x4bd:0x512]
---
Predecessors: [0x2e6]
Successors: [0x513, 0x608]
---
0x4bd JUMPDEST
0x4be CALLER
0x4bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d4 AND
0x4d5 PUSH1 0x0
0x4d7 DUP1
0x4d8 SWAP1
0x4d9 SLOAD
0x4da SWAP1
0x4db PUSH2 0x100
0x4de EXP
0x4df SWAP1
0x4e0 DIV
0x4e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f6 AND
0x4f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50c AND
0x50d EQ
0x50e ISZERO
0x50f PUSH2 0x608
0x512 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V289 = CALLER
0x4bf: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x4d5: V292 = 0x0
0x4d9: V293 = S[0x0]
0x4db: V294 = 0x100
0x4de: V295 = EXP 0x100 0x0
0x4e0: V296 = DIV V293 0x1
0x4e1: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f6: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x4f7: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x50d: V301 = EQ V300 V291
0x50e: V302 = ISZERO V301
0x50f: V303 = 0x608
0x512: JUMPI 0x608 V302
---
Entry stack: [V10, 0x2fc, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2fc, V174]

================================

Block 0x513
[0x513:0x56d]
---
Predecessors: [0x4bd]
Successors: [0x56e, 0x607]
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 SWAP1
0x517 SLOAD
0x518 SWAP1
0x519 PUSH2 0x100
0x51c EXP
0x51d SWAP1
0x51e DIV
0x51f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x534 AND
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b PUSH2 0x8fc
0x54e DUP3
0x54f SWAP1
0x550 DUP2
0x551 ISZERO
0x552 MUL
0x553 SWAP1
0x554 PUSH1 0x40
0x556 MLOAD
0x557 PUSH1 0x0
0x559 PUSH1 0x40
0x55b MLOAD
0x55c DUP1
0x55d DUP4
0x55e SUB
0x55f DUP2
0x560 DUP6
0x561 DUP9
0x562 DUP9
0x563 CALL
0x564 SWAP4
0x565 POP
0x566 POP
0x567 POP
0x568 POP
0x569 ISZERO
0x56a PUSH2 0x607
0x56d JUMPI
---
0x513: V304 = 0x0
0x517: V305 = S[0x0]
0x519: V306 = 0x100
0x51c: V307 = EXP 0x100 0x0
0x51e: V308 = DIV V305 0x1
0x51f: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x534: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x535: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x54b: V313 = 0x8fc
0x551: V314 = ISZERO V174
0x552: V315 = MUL V314 0x8fc
0x554: V316 = 0x40
0x556: V317 = M[0x40]
0x557: V318 = 0x0
0x559: V319 = 0x40
0x55b: V320 = M[0x40]
0x55e: V321 = SUB V317 V320
0x563: V322 = CALL V315 V312 V174 V320 V321 V320 0x0
0x569: V323 = ISZERO V322
0x56a: V324 = 0x607
0x56d: JUMPI 0x607 V323
---
Entry stack: [V10, 0x2fc, V174]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2fc, V174]

================================

Block 0x56e
[0x56e:0x606]
---
Predecessors: [0x513]
Successors: [0x607]
---
0x56e PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x58f PUSH1 0x0
0x591 DUP1
0x592 SWAP1
0x593 SLOAD
0x594 SWAP1
0x595 PUSH2 0x100
0x598 EXP
0x599 SWAP1
0x59a DIV
0x59b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b0 AND
0x5b1 DUP3
0x5b2 PUSH1 0x0
0x5b4 PUSH1 0x40
0x5b6 MLOAD
0x5b7 DUP1
0x5b8 DUP5
0x5b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ce AND
0x5cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e4 AND
0x5e5 DUP2
0x5e6 MSTORE
0x5e7 PUSH1 0x20
0x5e9 ADD
0x5ea DUP4
0x5eb DUP2
0x5ec MSTORE
0x5ed PUSH1 0x20
0x5ef ADD
0x5f0 DUP3
0x5f1 ISZERO
0x5f2 ISZERO
0x5f3 ISZERO
0x5f4 ISZERO
0x5f5 DUP2
0x5f6 MSTORE
0x5f7 PUSH1 0x20
0x5f9 ADD
0x5fa SWAP4
0x5fb POP
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff PUSH1 0x40
0x601 MLOAD
0x602 DUP1
0x603 SWAP2
0x604 SUB
0x605 SWAP1
0x606 LOG1
---
0x56e: V325 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x58f: V326 = 0x0
0x593: V327 = S[0x0]
0x595: V328 = 0x100
0x598: V329 = EXP 0x100 0x0
0x59a: V330 = DIV V327 0x1
0x59b: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b0: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x5b2: V333 = 0x0
0x5b4: V334 = 0x40
0x5b6: V335 = M[0x40]
0x5b9: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ce: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x5cf: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e4: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x5e6: M[V335] = V339
0x5e7: V340 = 0x20
0x5e9: V341 = ADD 0x20 V335
0x5ec: M[V341] = V174
0x5ed: V342 = 0x20
0x5ef: V343 = ADD 0x20 V341
0x5f1: V344 = ISZERO 0x0
0x5f2: V345 = ISZERO 0x1
0x5f3: V346 = ISZERO 0x0
0x5f4: V347 = ISZERO 0x1
0x5f6: M[V343] = 0x0
0x5f7: V348 = 0x20
0x5f9: V349 = ADD 0x20 V343
0x5ff: V350 = 0x40
0x601: V351 = M[0x40]
0x604: V352 = SUB V349 V351
0x606: LOG V351 V352 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x2fc, V174]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2fc, V174]

================================

Block 0x607
[0x607:0x607]
---
Predecessors: [0x513, 0x56e]
Successors: [0x608]
---
0x607 JUMPDEST
---
0x607: JUMPDEST 
---
Entry stack: [V10, 0x2fc, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2fc, V174]

================================

Block 0x608
[0x608:0x608]
---
Predecessors: [0x4bd, 0x607]
Successors: [0x609]
---
0x608 JUMPDEST
---
0x608: JUMPDEST 
---
Entry stack: [V10, 0x2fc, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2fc, V174]

================================

Block 0x609
[0x609:0x60b]
---
Predecessors: [0x608]
Successors: [0x2fc]
---
0x609 JUMPDEST
0x60a POP
0x60b JUMP
---
0x609: JUMPDEST 
0x60b: JUMP 0x2fc
---
Entry stack: [V10, 0x2fc, V174]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x60c
[0x60c:0x631]
---
Predecessors: [0x309]
Successors: [0x311]
---
0x60c JUMPDEST
0x60d PUSH1 0x2
0x60f PUSH1 0x1
0x611 SWAP1
0x612 SLOAD
0x613 SWAP1
0x614 PUSH2 0x100
0x617 EXP
0x618 SWAP1
0x619 DIV
0x61a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62f AND
0x630 DUP2
0x631 JUMP
---
0x60c: JUMPDEST 
0x60d: V353 = 0x2
0x60f: V354 = 0x1
0x612: V355 = S[0x2]
0x614: V356 = 0x100
0x617: V357 = EXP 0x100 0x1
0x619: V358 = DIV V355 0x100
0x61a: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x631: JUMP 0x311
---
Entry stack: [V10, 0x311]
Stack pops: 1
Stack additions: [S0, V360]
Exit stack: [V10, 0x311, V360]

================================

Block 0x632
[0x632:0x649]
---
Predecessors: [0x35e]
Successors: [0x38a]
---
0x632 JUMPDEST
0x633 PUSH1 0x3
0x635 PUSH1 0x20
0x637 MSTORE
0x638 DUP1
0x639 PUSH1 0x0
0x63b MSTORE
0x63c PUSH1 0x40
0x63e PUSH1 0x0
0x640 SHA3
0x641 PUSH1 0x0
0x643 SWAP2
0x644 POP
0x645 SWAP1
0x646 POP
0x647 SLOAD
0x648 DUP2
0x649 JUMP
---
0x632: JUMPDEST 
0x633: V361 = 0x3
0x635: V362 = 0x20
0x637: M[0x20] = 0x3
0x639: V363 = 0x0
0x63b: M[0x0] = V203
0x63c: V364 = 0x40
0x63e: V365 = 0x0
0x640: V366 = SHA3 0x0 0x40
0x641: V367 = 0x0
0x647: V368 = S[V366]
0x649: JUMP 0x38a
---
Entry stack: [V10, 0x38a, V203]
Stack pops: 2
Stack additions: [S1, V368]
Exit stack: [V10, 0x38a, V368]

================================

Block 0x64a
[0x64a:0x69f]
---
Predecessors: [0x3ab]
Successors: [0x6a0, 0x778]
---
0x64a JUMPDEST
0x64b CALLER
0x64c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x661 AND
0x662 PUSH1 0x0
0x664 DUP1
0x665 SWAP1
0x666 SLOAD
0x667 SWAP1
0x668 PUSH2 0x100
0x66b EXP
0x66c SWAP1
0x66d DIV
0x66e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x683 AND
0x684 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x699 AND
0x69a EQ
0x69b ISZERO
0x69c PUSH2 0x778
0x69f JUMPI
---
0x64a: JUMPDEST 
0x64b: V369 = CALLER
0x64c: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x661: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x662: V372 = 0x0
0x666: V373 = S[0x0]
0x668: V374 = 0x100
0x66b: V375 = EXP 0x100 0x0
0x66d: V376 = DIV V373 0x1
0x66e: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x683: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x684: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x699: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x69a: V381 = EQ V380 V371
0x69b: V382 = ISZERO V381
0x69c: V383 = 0x778
0x69f: JUMPI 0x778 V382
---
Entry stack: [V10, 0x3c1, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3c1, V220]

================================

Block 0x6a0
[0x6a0:0x75e]
---
Predecessors: [0x64a]
Successors: [0x75f, 0x763]
---
0x6a0 PUSH1 0x2
0x6a2 PUSH1 0x1
0x6a4 SWAP1
0x6a5 SLOAD
0x6a6 SWAP1
0x6a7 PUSH2 0x100
0x6aa EXP
0x6ab SWAP1
0x6ac DIV
0x6ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c2 AND
0x6c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d8 AND
0x6d9 PUSH4 0xa9059cbb
0x6de CALLER
0x6df DUP4
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 DUP4
0x6e4 PUSH4 0xffffffff
0x6e9 AND
0x6ea PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x708 MUL
0x709 DUP2
0x70a MSTORE
0x70b PUSH1 0x4
0x70d ADD
0x70e DUP1
0x70f DUP4
0x710 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x725 AND
0x726 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73b AND
0x73c DUP2
0x73d MSTORE
0x73e PUSH1 0x20
0x740 ADD
0x741 DUP3
0x742 DUP2
0x743 MSTORE
0x744 PUSH1 0x20
0x746 ADD
0x747 SWAP3
0x748 POP
0x749 POP
0x74a POP
0x74b PUSH1 0x0
0x74d PUSH1 0x40
0x74f MLOAD
0x750 DUP1
0x751 DUP4
0x752 SUB
0x753 DUP2
0x754 PUSH1 0x0
0x756 DUP8
0x757 DUP1
0x758 EXTCODESIZE
0x759 ISZERO
0x75a ISZERO
0x75b PUSH2 0x763
0x75e JUMPI
---
0x6a0: V384 = 0x2
0x6a2: V385 = 0x1
0x6a5: V386 = S[0x2]
0x6a7: V387 = 0x100
0x6aa: V388 = EXP 0x100 0x1
0x6ac: V389 = DIV V386 0x100
0x6ad: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c2: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x6c3: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d8: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x6d9: V394 = 0xa9059cbb
0x6de: V395 = CALLER
0x6e0: V396 = 0x40
0x6e2: V397 = M[0x40]
0x6e4: V398 = 0xffffffff
0x6e9: V399 = AND 0xffffffff 0xa9059cbb
0x6ea: V400 = 0x100000000000000000000000000000000000000000000000000000000
0x708: V401 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x70a: M[V397] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x70b: V402 = 0x4
0x70d: V403 = ADD 0x4 V397
0x710: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x725: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x726: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x73b: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x73d: M[V403] = V407
0x73e: V408 = 0x20
0x740: V409 = ADD 0x20 V403
0x743: M[V409] = V220
0x744: V410 = 0x20
0x746: V411 = ADD 0x20 V409
0x74b: V412 = 0x0
0x74d: V413 = 0x40
0x74f: V414 = M[0x40]
0x752: V415 = SUB V411 V414
0x754: V416 = 0x0
0x758: V417 = EXTCODESIZE V393
0x759: V418 = ISZERO V417
0x75a: V419 = ISZERO V418
0x75b: V420 = 0x763
0x75e: JUMPI 0x763 V419
---
Entry stack: [V10, 0x3c1, V220]
Stack pops: 1
Stack additions: [S0, V393, 0xa9059cbb, V411, 0x0, V414, V415, V414, 0x0, V393]
Exit stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411, 0x0, V414, V415, V414, 0x0, V393]

================================

Block 0x75f
[0x75f:0x762]
---
Predecessors: [0x6a0]
Successors: []
---
0x75f PUSH1 0x0
0x761 DUP1
0x762 REVERT
---
0x75f: V421 = 0x0
0x762: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411, 0x0, V414, V415, V414, 0x0, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411, 0x0, V414, V415, V414, 0x0, V393]

================================

Block 0x763
[0x763:0x76f]
---
Predecessors: [0x6a0]
Successors: [0x770, 0x774]
---
0x763 JUMPDEST
0x764 PUSH2 0x2c6
0x767 GAS
0x768 SUB
0x769 CALL
0x76a ISZERO
0x76b ISZERO
0x76c PUSH2 0x774
0x76f JUMPI
---
0x763: JUMPDEST 
0x764: V422 = 0x2c6
0x767: V423 = GAS
0x768: V424 = SUB V423 0x2c6
0x769: V425 = CALL V424 V393 0x0 V414 V415 V414 0x0
0x76a: V426 = ISZERO V425
0x76b: V427 = ISZERO V426
0x76c: V428 = 0x774
0x76f: JUMPI 0x774 V427
---
Entry stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411, 0x0, V414, V415, V414, 0x0, V393]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411]

================================

Block 0x770
[0x770:0x773]
---
Predecessors: [0x763]
Successors: []
---
0x770 PUSH1 0x0
0x772 DUP1
0x773 REVERT
---
0x770: V429 = 0x0
0x773: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411]

================================

Block 0x774
[0x774:0x777]
---
Predecessors: [0x763]
Successors: [0x778]
---
0x774 JUMPDEST
0x775 POP
0x776 POP
0x777 POP
---
0x774: JUMPDEST 
---
Entry stack: [V10, 0x3c1, V220, V393, 0xa9059cbb, V411]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x3c1, V220]

================================

Block 0x778
[0x778:0x778]
---
Predecessors: [0x64a, 0x774]
Successors: [0x779]
---
0x778 JUMPDEST
---
0x778: JUMPDEST 
---
Entry stack: [V10, 0x3c1, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3c1, V220]

================================

Block 0x779
[0x779:0x77b]
---
Predecessors: [0x778]
Successors: [0x3c1]
---
0x779 JUMPDEST
0x77a POP
0x77b JUMP
---
0x779: JUMPDEST 
0x77b: JUMP 0x3c1
---
Entry stack: [V10, 0x3c1, V220]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x77c
[0x77c:0x781]
---
Predecessors: [0x3ce]
Successors: [0x3d6]
---
0x77c JUMPDEST
0x77d PUSH1 0x1
0x77f SLOAD
0x780 DUP2
0x781 JUMP
---
0x77c: JUMPDEST 
0x77d: V430 = 0x1
0x77f: V431 = S[0x1]
0x781: JUMP 0x3d6
---
Entry stack: [V10, 0x3d6]
Stack pops: 1
Stack additions: [S0, V431]
Exit stack: [V10, 0x3d6, V431]

================================

Block 0x782
[0x782:0x7d7]
---
Predecessors: [0x3f7]
Successors: [0x7d8, 0x7df]
---
0x782 JUMPDEST
0x783 CALLER
0x784 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x799 AND
0x79a PUSH1 0x0
0x79c DUP1
0x79d SWAP1
0x79e SLOAD
0x79f SWAP1
0x7a0 PUSH2 0x100
0x7a3 EXP
0x7a4 SWAP1
0x7a5 DIV
0x7a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bb AND
0x7bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d1 AND
0x7d2 EQ
0x7d3 ISZERO
0x7d4 PUSH2 0x7df
0x7d7 JUMPI
---
0x782: JUMPDEST 
0x783: V432 = CALLER
0x784: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x799: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x79a: V435 = 0x0
0x79e: V436 = S[0x0]
0x7a0: V437 = 0x100
0x7a3: V438 = EXP 0x100 0x0
0x7a5: V439 = DIV V436 0x1
0x7a6: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bb: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x7bc: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x7d2: V444 = EQ V443 V434
0x7d3: V445 = ISZERO V444
0x7d4: V446 = 0x7df
0x7d7: JUMPI 0x7df V445
---
Entry stack: [V10, 0x40d, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x40d, V243]

================================

Block 0x7d8
[0x7d8:0x7de]
---
Predecessors: [0x782]
Successors: [0x7df]
---
0x7d8 DUP1
0x7d9 PUSH1 0x1
0x7db DUP2
0x7dc SWAP1
0x7dd SSTORE
0x7de POP
---
0x7d9: V447 = 0x1
0x7dd: S[0x1] = V243
---
Entry stack: [V10, 0x40d, V243]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x40d, V243]

================================

Block 0x7df
[0x7df:0x7df]
---
Predecessors: [0x782, 0x7d8]
Successors: [0x7e0]
---
0x7df JUMPDEST
---
0x7df: JUMPDEST 
---
Entry stack: [V10, 0x40d, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x40d, V243]

================================

Block 0x7e0
[0x7e0:0x7e2]
---
Predecessors: [0x7df]
Successors: [0x40d]
---
0x7e0 JUMPDEST
0x7e1 POP
0x7e2 JUMP
---
0x7e0: JUMPDEST 
0x7e2: JUMP 0x40d
---
Entry stack: [V10, 0x40d, V243]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x7e3
[0x7e3:0x838]
---
Predecessors: [0x41a]
Successors: [0x839, 0x854]
---
0x7e3 JUMPDEST
0x7e4 CALLER
0x7e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fa AND
0x7fb PUSH1 0x0
0x7fd DUP1
0x7fe SWAP1
0x7ff SLOAD
0x800 SWAP1
0x801 PUSH2 0x100
0x804 EXP
0x805 SWAP1
0x806 DIV
0x807 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81c AND
0x81d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x832 AND
0x833 EQ
0x834 ISZERO
0x835 PUSH2 0x854
0x838 JUMPI
---
0x7e3: JUMPDEST 
0x7e4: V448 = CALLER
0x7e5: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fa: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x7fb: V451 = 0x0
0x7ff: V452 = S[0x0]
0x801: V453 = 0x100
0x804: V454 = EXP 0x100 0x0
0x806: V455 = DIV V452 0x1
0x807: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x81c: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x81d: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x832: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x833: V460 = EQ V459 V450
0x834: V461 = ISZERO V460
0x835: V462 = 0x854
0x838: JUMPI 0x854 V461
---
Entry stack: [V10, 0x422]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x422]

================================

Block 0x839
[0x839:0x853]
---
Predecessors: [0x7e3]
Successors: [0x854]
---
0x839 PUSH1 0x0
0x83b PUSH1 0x2
0x83d PUSH1 0x0
0x83f PUSH2 0x100
0x842 EXP
0x843 DUP2
0x844 SLOAD
0x845 DUP2
0x846 PUSH1 0xff
0x848 MUL
0x849 NOT
0x84a AND
0x84b SWAP1
0x84c DUP4
0x84d ISZERO
0x84e ISZERO
0x84f MUL
0x850 OR
0x851 SWAP1
0x852 SSTORE
0x853 POP
---
0x839: V463 = 0x0
0x83b: V464 = 0x2
0x83d: V465 = 0x0
0x83f: V466 = 0x100
0x842: V467 = EXP 0x100 0x0
0x844: V468 = S[0x2]
0x846: V469 = 0xff
0x848: V470 = MUL 0xff 0x1
0x849: V471 = NOT 0xff
0x84a: V472 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V468
0x84d: V473 = ISZERO 0x0
0x84e: V474 = ISZERO 0x1
0x84f: V475 = MUL 0x0 0x1
0x850: V476 = OR 0x0 V472
0x852: S[0x2] = V476
---
Entry stack: [V10, 0x422]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x422]

================================

Block 0x854
[0x854:0x854]
---
Predecessors: [0x7e3, 0x839]
Successors: [0x855]
---
0x854 JUMPDEST
---
0x854: JUMPDEST 
---
Entry stack: [V10, 0x422]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x422]

================================

Block 0x855
[0x855:0x856]
---
Predecessors: [0x854]
Successors: [0x422]
---
0x855 JUMPDEST
0x856 JUMP
---
0x855: JUMPDEST 
0x856: JUMP 0x422
---
Entry stack: [V10, 0x422]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x857
[0x857:0x88f]
---
Predecessors: []
Successors: []
---
0x857 STOP
0x858 LOG1
0x859 PUSH6 0x627a7a723058
0x860 SHA3
0x861 MISSING 0x47
0x862 MISSING 0xd2
0x863 STOP
0x864 MISSING 0xea
0x865 MISSING 0x1f
0x866 MISSING 0xb2
0x867 LOG3
0x868 RETURNDATASIZE
0x869 MISSING 0xf7
0x86a SHL
0x86b PUSH10 0x83bd3ebc84fc7bc51cf0
0x876 JUMP
0x877 MISSING 0xc5
0x878 MISSING 0x4b
0x879 SAR
0x87a SWAP15
0x87b MISSING 0xac
0x87c PUSH19 0xe6c30e3b0029
---
0x857: STOP 
0x858: LOG S0 S1 S2
0x859: V477 = 0x627a7a723058
0x860: V478 = SHA3 0x627a7a723058 S3
0x861: MISSING 0x47
0x862: MISSING 0xd2
0x863: STOP 
0x864: MISSING 0xea
0x865: MISSING 0x1f
0x866: MISSING 0xb2
0x867: LOG S0 S1 S2 S3 S4
0x868: V479 = RETURNDATASIZE
0x869: MISSING 0xf7
0x86a: V480 = SHL S0 S1
0x86b: V481 = 0x83bd3ebc84fc7bc51cf0
0x876: THROW 
0x877: MISSING 0xc5
0x878: MISSING 0x4b
0x879: V482 = SAR S0 S1
0x87b: MISSING 0xac
0x87c: V483 = 0xe6c30e3b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V478, V479, V480, S16, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V482, 0xe6c30e3b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0x271
Exit block: 0x284
Body: 0x271, 0x278, 0x27c, 0x284, 0x424

Function 1:
Public function signature: 0x52c700ea
Entry block: 0x2c6
Exit block: 0x2d9
Body: 0x2c6, 0x2cd, 0x2d1, 0x2d9, 0x449, 0x49f, 0x4ba, 0x4bb

Function 2:
Public function signature: 0x5f56b6fe
Entry block: 0x2db
Exit block: 0x2fc
Body: 0x2db, 0x2e2, 0x2e6, 0x2fc, 0x4bd, 0x513, 0x56e, 0x607, 0x608, 0x609

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x2fe
Exit block: 0x311
Body: 0x2fe, 0x305, 0x309, 0x311, 0x60c

Function 4:
Public function signature: 0x70a08231
Entry block: 0x353
Exit block: 0x38a
Body: 0x353, 0x35a, 0x35e, 0x38a, 0x632

Function 5:
Public function signature: 0x795ff8aa
Entry block: 0x3a0
Exit block: 0x770
Body: 0x3a0, 0x3a7, 0x3ab, 0x3c1, 0x64a, 0x6a0, 0x75f, 0x763, 0x770, 0x774, 0x778, 0x779

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x3c3
Exit block: 0x3d6
Body: 0x3c3, 0x3ca, 0x3ce, 0x3d6, 0x77c

Function 7:
Public function signature: 0xa2b40d19
Entry block: 0x3ec
Exit block: 0x40d
Body: 0x3ec, 0x3f3, 0x3f7, 0x40d, 0x782, 0x7d8, 0x7df, 0x7e0

Function 8:
Public function signature: 0xcc3bb31a
Entry block: 0x40f
Exit block: 0x422
Body: 0x40f, 0x416, 0x41a, 0x422, 0x7e3, 0x839, 0x854, 0x855

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x26e
Body: 0x97, 0x98, 0xb2, 0xb6, 0x15b, 0x15c, 0x1dd, 0x1e1, 0x1ee, 0x1f2, 0x26e

