Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x88]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x779afe6
0x3c EQ
0x3d PUSH2 0x88
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x779afe6
0x3c: V13 = EQ 0x779afe6 V11
0x3d: V14 = 0x88
0x40: JUMPI 0x88 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xf5]
---
0x41 DUP1
0x42 PUSH4 0x1ca0076c
0x47 EQ
0x48 PUSH2 0xf5
0x4b JUMPI
---
0x42: V15 = 0x1ca0076c
0x47: V16 = EQ 0x1ca0076c V11
0x48: V17 = 0xf5
0x4b: JUMPI 0xf5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1f2]
---
0x4c DUP1
0x4d PUSH4 0x3ccfd60b
0x52 EQ
0x53 PUSH2 0x1f2
0x56 JUMPI
---
0x4d: V18 = 0x3ccfd60b
0x52: V19 = EQ 0x3ccfd60b V11
0x53: V20 = 0x1f2
0x56: JUMPI 0x1f2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x209]
---
0x57 DUP1
0x58 PUSH4 0x8071aa05
0x5d EQ
0x5e PUSH2 0x209
0x61 JUMPI
---
0x58: V21 = 0x8071aa05
0x5d: V22 = EQ 0x8071aa05 V11
0x5e: V23 = 0x209
0x61: JUMPI 0x209 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x38f]
---
0x62 DUP1
0x63 PUSH4 0x8da5cb5b
0x68 EQ
0x69 PUSH2 0x38f
0x6c JUMPI
---
0x63: V24 = 0x8da5cb5b
0x68: V25 = EQ 0x8da5cb5b V11
0x69: V26 = 0x38f
0x6c: JUMPI 0x38f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x3e6]
---
0x6d DUP1
0x6e PUSH4 0xad8733ca
0x73 EQ
0x74 PUSH2 0x3e6
0x77 JUMPI
---
0x6e: V27 = 0xad8733ca
0x73: V28 = EQ 0xad8733ca V11
0x74: V29 = 0x3e6
0x77: JUMPI 0x3e6 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x4c3]
---
0x78 DUP1
0x79 PUSH4 0xf2fde38b
0x7e EQ
0x7f PUSH2 0x4c3
0x82 JUMPI
---
0x79: V30 = 0xf2fde38b
0x7e: V31 = EQ 0xf2fde38b V11
0x7f: V32 = 0x4c3
0x82: JUMPI 0x4c3 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x87]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x83: JUMPDEST 
0x84: V33 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0xd]
Successors: [0x90, 0x94]
---
0x88 JUMPDEST
0x89 CALLVALUE
0x8a DUP1
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x88: JUMPDEST 
0x89: V34 = CALLVALUE
0x8b: V35 = ISZERO V34
0x8c: V36 = 0x94
0x8f: JUMPI 0x94 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x88]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V37 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x94
[0x94:0xf2]
---
Predecessors: [0x88]
Successors: [0x506]
---
0x94 JUMPDEST
0x95 POP
0x96 PUSH2 0xf3
0x99 PUSH1 0x4
0x9b DUP1
0x9c CALLDATASIZE
0x9d SUB
0x9e DUP2
0x9f ADD
0xa0 SWAP1
0xa1 DUP1
0xa2 DUP1
0xa3 CALLDATALOAD
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba SWAP1
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf SWAP3
0xc0 SWAP2
0xc1 SWAP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP1
0xe2 DUP1
0xe3 CALLDATALOAD
0xe4 SWAP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 SWAP3
0xea SWAP2
0xeb SWAP1
0xec POP
0xed POP
0xee POP
0xef PUSH2 0x506
0xf2 JUMP
---
0x94: JUMPDEST 
0x96: V38 = 0xf3
0x99: V39 = 0x4
0x9c: V40 = CALLDATASIZE
0x9d: V41 = SUB V40 0x4
0x9f: V42 = ADD 0x4 V41
0xa3: V43 = CALLDATALOAD 0x4
0xa4: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xbb: V46 = 0x20
0xbd: V47 = ADD 0x20 0x4
0xc3: V48 = CALLDATALOAD 0x24
0xc4: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xdb: V51 = 0x20
0xdd: V52 = ADD 0x20 0x24
0xe3: V53 = CALLDATALOAD 0x44
0xe5: V54 = 0x20
0xe7: V55 = ADD 0x20 0x44
0xef: V56 = 0x506
0xf2: JUMP 0x506
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0xf3, V45, V50, V53]
Exit stack: [V11, 0xf3, V45, V50, V53]

================================

Block 0xf3
[0xf3:0xf4]
---
Predecessors: [0x618]
Successors: []
---
0xf3 JUMPDEST
0xf4 STOP
---
0xf3: JUMPDEST 
0xf4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0x41]
Successors: [0xfd, 0x101]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf5: JUMPDEST 
0xf6: V57 = CALLVALUE
0xf8: V58 = ISZERO V57
0xf9: V59 = 0x101
0xfc: JUMPI 0x101 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf5]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V60 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0x101
[0x101:0x1db]
---
Predecessors: [0xf5]
Successors: [0x621]
---
0x101 JUMPDEST
0x102 POP
0x103 PUSH2 0x1dc
0x106 PUSH1 0x4
0x108 DUP1
0x109 CALLDATASIZE
0x10a SUB
0x10b DUP2
0x10c ADD
0x10d SWAP1
0x10e DUP1
0x10f DUP1
0x110 CALLDATALOAD
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 SWAP1
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c SWAP3
0x12d SWAP2
0x12e SWAP1
0x12f DUP1
0x130 CALLDATALOAD
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 SWAP1
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP1
0x14c SWAP3
0x14d SWAP2
0x14e SWAP1
0x14f DUP1
0x150 CALLDATALOAD
0x151 SWAP1
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP1
0x156 DUP3
0x157 ADD
0x158 DUP1
0x159 CALLDATALOAD
0x15a SWAP1
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP1
0x15f DUP1
0x160 DUP1
0x161 PUSH1 0x20
0x163 MUL
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH1 0x40
0x169 MLOAD
0x16a SWAP1
0x16b DUP2
0x16c ADD
0x16d PUSH1 0x40
0x16f MSTORE
0x170 DUP1
0x171 SWAP4
0x172 SWAP3
0x173 SWAP2
0x174 SWAP1
0x175 DUP2
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b DUP4
0x17c DUP4
0x17d PUSH1 0x20
0x17f MUL
0x180 DUP1
0x181 DUP3
0x182 DUP5
0x183 CALLDATACOPY
0x184 DUP3
0x185 ADD
0x186 SWAP2
0x187 POP
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c POP
0x18d SWAP2
0x18e SWAP3
0x18f SWAP2
0x190 SWAP3
0x191 SWAP1
0x192 DUP1
0x193 CALLDATALOAD
0x194 SWAP1
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 DUP3
0x19a ADD
0x19b DUP1
0x19c CALLDATALOAD
0x19d SWAP1
0x19e PUSH1 0x20
0x1a0 ADD
0x1a1 SWAP1
0x1a2 DUP1
0x1a3 DUP1
0x1a4 PUSH1 0x20
0x1a6 MUL
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad SWAP1
0x1ae DUP2
0x1af ADD
0x1b0 PUSH1 0x40
0x1b2 MSTORE
0x1b3 DUP1
0x1b4 SWAP4
0x1b5 SWAP3
0x1b6 SWAP2
0x1b7 SWAP1
0x1b8 DUP2
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x20
0x1bd ADD
0x1be DUP4
0x1bf DUP4
0x1c0 PUSH1 0x20
0x1c2 MUL
0x1c3 DUP1
0x1c4 DUP3
0x1c5 DUP5
0x1c6 CALLDATACOPY
0x1c7 DUP3
0x1c8 ADD
0x1c9 SWAP2
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 SWAP2
0x1d1 SWAP3
0x1d2 SWAP2
0x1d3 SWAP3
0x1d4 SWAP1
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 PUSH2 0x621
0x1db JUMP
---
0x101: JUMPDEST 
0x103: V61 = 0x1dc
0x106: V62 = 0x4
0x109: V63 = CALLDATASIZE
0x10a: V64 = SUB V63 0x4
0x10c: V65 = ADD 0x4 V64
0x110: V66 = CALLDATALOAD 0x4
0x111: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x128: V69 = 0x20
0x12a: V70 = ADD 0x20 0x4
0x130: V71 = CALLDATALOAD 0x24
0x131: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x148: V74 = 0x20
0x14a: V75 = ADD 0x20 0x24
0x150: V76 = CALLDATALOAD 0x44
0x152: V77 = 0x20
0x154: V78 = ADD 0x20 0x44
0x157: V79 = ADD 0x4 V76
0x159: V80 = CALLDATALOAD V79
0x15b: V81 = 0x20
0x15d: V82 = ADD 0x20 V79
0x161: V83 = 0x20
0x163: V84 = MUL 0x20 V80
0x164: V85 = 0x20
0x166: V86 = ADD 0x20 V84
0x167: V87 = 0x40
0x169: V88 = M[0x40]
0x16c: V89 = ADD V88 V86
0x16d: V90 = 0x40
0x16f: M[0x40] = V89
0x177: M[V88] = V80
0x178: V91 = 0x20
0x17a: V92 = ADD 0x20 V88
0x17d: V93 = 0x20
0x17f: V94 = MUL 0x20 V80
0x183: CALLDATACOPY V92 V82 V94
0x185: V95 = ADD V92 V94
0x193: V96 = CALLDATALOAD 0x64
0x195: V97 = 0x20
0x197: V98 = ADD 0x20 0x64
0x19a: V99 = ADD 0x4 V96
0x19c: V100 = CALLDATALOAD V99
0x19e: V101 = 0x20
0x1a0: V102 = ADD 0x20 V99
0x1a4: V103 = 0x20
0x1a6: V104 = MUL 0x20 V100
0x1a7: V105 = 0x20
0x1a9: V106 = ADD 0x20 V104
0x1aa: V107 = 0x40
0x1ac: V108 = M[0x40]
0x1af: V109 = ADD V108 V106
0x1b0: V110 = 0x40
0x1b2: M[0x40] = V109
0x1ba: M[V108] = V100
0x1bb: V111 = 0x20
0x1bd: V112 = ADD 0x20 V108
0x1c0: V113 = 0x20
0x1c2: V114 = MUL 0x20 V100
0x1c6: CALLDATACOPY V112 V102 V114
0x1c8: V115 = ADD V112 V114
0x1d8: V116 = 0x621
0x1db: JUMP 0x621
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x1dc, V68, V73, V88, V108]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108]

================================

Block 0x1dc
[0x1dc:0x1f1]
---
Predecessors: [0x86d]
Successors: []
---
0x1dc JUMPDEST
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 DUP3
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 SWAP2
0x1e8 POP
0x1e9 POP
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
---
0x1dc: JUMPDEST 
0x1dd: V117 = 0x40
0x1df: V118 = M[0x40]
0x1e3: M[V118] = S0
0x1e4: V119 = 0x20
0x1e6: V120 = ADD 0x20 V118
0x1ea: V121 = 0x40
0x1ec: V122 = M[0x40]
0x1ef: V123 = SUB V120 V122
0x1f1: RETURN V122 V123
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f2
[0x1f2:0x1f9]
---
Predecessors: [0x4c]
Successors: [0x1fa, 0x1fe]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 DUP1
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V124 = CALLVALUE
0x1f5: V125 = ISZERO V124
0x1f6: V126 = 0x1fe
0x1f9: JUMPI 0x1fe V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1f2]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V127 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x1fe
[0x1fe:0x206]
---
Predecessors: [0x1f2]
Successors: [0x879]
---
0x1fe JUMPDEST
0x1ff POP
0x200 PUSH2 0x207
0x203 PUSH2 0x879
0x206 JUMP
---
0x1fe: JUMPDEST 
0x200: V128 = 0x207
0x203: V129 = 0x879
0x206: JUMP 0x879
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0x207]
Exit stack: [V11, 0x207]

================================

Block 0x207
[0x207:0x208]
---
Predecessors: [0x931]
Successors: []
---
0x207 JUMPDEST
0x208 STOP
---
0x207: JUMPDEST 
0x208: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x57]
Successors: [0x211, 0x215]
---
0x209 JUMPDEST
0x20a CALLVALUE
0x20b DUP1
0x20c ISZERO
0x20d PUSH2 0x215
0x210 JUMPI
---
0x209: JUMPDEST 
0x20a: V130 = CALLVALUE
0x20c: V131 = ISZERO V130
0x20d: V132 = 0x215
0x210: JUMPI 0x215 V131
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, V130]

================================

Block 0x211
[0x211:0x214]
---
Predecessors: [0x209]
Successors: []
---
0x211 PUSH1 0x0
0x213 DUP1
0x214 REVERT
---
0x211: V133 = 0x0
0x214: REVERT 0x0 0x0
---
Entry stack: [V11, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V130]

================================

Block 0x215
[0x215:0x378]
---
Predecessors: [0x209]
Successors: [0x934]
---
0x215 JUMPDEST
0x216 POP
0x217 PUSH2 0x379
0x21a PUSH1 0x4
0x21c DUP1
0x21d CALLDATASIZE
0x21e SUB
0x21f DUP2
0x220 ADD
0x221 SWAP1
0x222 DUP1
0x223 DUP1
0x224 CALLDATALOAD
0x225 SWAP1
0x226 PUSH1 0x20
0x228 ADD
0x229 SWAP1
0x22a DUP3
0x22b ADD
0x22c DUP1
0x22d CALLDATALOAD
0x22e SWAP1
0x22f PUSH1 0x20
0x231 ADD
0x232 SWAP1
0x233 DUP1
0x234 DUP1
0x235 PUSH1 0x20
0x237 MUL
0x238 PUSH1 0x20
0x23a ADD
0x23b PUSH1 0x40
0x23d MLOAD
0x23e SWAP1
0x23f DUP2
0x240 ADD
0x241 PUSH1 0x40
0x243 MSTORE
0x244 DUP1
0x245 SWAP4
0x246 SWAP3
0x247 SWAP2
0x248 SWAP1
0x249 DUP2
0x24a DUP2
0x24b MSTORE
0x24c PUSH1 0x20
0x24e ADD
0x24f DUP4
0x250 DUP4
0x251 PUSH1 0x20
0x253 MUL
0x254 DUP1
0x255 DUP3
0x256 DUP5
0x257 CALLDATACOPY
0x258 DUP3
0x259 ADD
0x25a SWAP2
0x25b POP
0x25c POP
0x25d POP
0x25e POP
0x25f POP
0x260 POP
0x261 SWAP2
0x262 SWAP3
0x263 SWAP2
0x264 SWAP3
0x265 SWAP1
0x266 DUP1
0x267 CALLDATALOAD
0x268 SWAP1
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP1
0x26d DUP3
0x26e ADD
0x26f DUP1
0x270 CALLDATALOAD
0x271 SWAP1
0x272 PUSH1 0x20
0x274 ADD
0x275 SWAP1
0x276 DUP1
0x277 DUP1
0x278 PUSH1 0x20
0x27a MUL
0x27b PUSH1 0x20
0x27d ADD
0x27e PUSH1 0x40
0x280 MLOAD
0x281 SWAP1
0x282 DUP2
0x283 ADD
0x284 PUSH1 0x40
0x286 MSTORE
0x287 DUP1
0x288 SWAP4
0x289 SWAP3
0x28a SWAP2
0x28b SWAP1
0x28c DUP2
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x20
0x291 ADD
0x292 DUP4
0x293 DUP4
0x294 PUSH1 0x20
0x296 MUL
0x297 DUP1
0x298 DUP3
0x299 DUP5
0x29a CALLDATACOPY
0x29b DUP3
0x29c ADD
0x29d SWAP2
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 SWAP2
0x2a5 SWAP3
0x2a6 SWAP2
0x2a7 SWAP3
0x2a8 SWAP1
0x2a9 DUP1
0x2aa CALLDATALOAD
0x2ab SWAP1
0x2ac PUSH1 0x20
0x2ae ADD
0x2af SWAP1
0x2b0 DUP3
0x2b1 ADD
0x2b2 DUP1
0x2b3 CALLDATALOAD
0x2b4 SWAP1
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 SWAP1
0x2b9 DUP1
0x2ba DUP1
0x2bb PUSH1 0x20
0x2bd MUL
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 SWAP1
0x2c5 DUP2
0x2c6 ADD
0x2c7 PUSH1 0x40
0x2c9 MSTORE
0x2ca DUP1
0x2cb SWAP4
0x2cc SWAP3
0x2cd SWAP2
0x2ce SWAP1
0x2cf DUP2
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 PUSH1 0x20
0x2d4 ADD
0x2d5 DUP4
0x2d6 DUP4
0x2d7 PUSH1 0x20
0x2d9 MUL
0x2da DUP1
0x2db DUP3
0x2dc DUP5
0x2dd CALLDATACOPY
0x2de DUP3
0x2df ADD
0x2e0 SWAP2
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 POP
0x2e7 SWAP2
0x2e8 SWAP3
0x2e9 SWAP2
0x2ea SWAP3
0x2eb SWAP1
0x2ec DUP1
0x2ed CALLDATALOAD
0x2ee SWAP1
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 SWAP1
0x2f3 DUP3
0x2f4 ADD
0x2f5 DUP1
0x2f6 CALLDATALOAD
0x2f7 SWAP1
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP1
0x2fc DUP1
0x2fd DUP1
0x2fe PUSH1 0x20
0x300 MUL
0x301 PUSH1 0x20
0x303 ADD
0x304 PUSH1 0x40
0x306 MLOAD
0x307 SWAP1
0x308 DUP2
0x309 ADD
0x30a PUSH1 0x40
0x30c MSTORE
0x30d DUP1
0x30e SWAP4
0x30f SWAP3
0x310 SWAP2
0x311 SWAP1
0x312 DUP2
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 ADD
0x318 DUP4
0x319 DUP4
0x31a PUSH1 0x20
0x31c MUL
0x31d DUP1
0x31e DUP3
0x31f DUP5
0x320 CALLDATACOPY
0x321 DUP3
0x322 ADD
0x323 SWAP2
0x324 POP
0x325 POP
0x326 POP
0x327 POP
0x328 POP
0x329 POP
0x32a SWAP2
0x32b SWAP3
0x32c SWAP2
0x32d SWAP3
0x32e SWAP1
0x32f DUP1
0x330 CALLDATALOAD
0x331 SWAP1
0x332 PUSH1 0x20
0x334 ADD
0x335 SWAP1
0x336 DUP3
0x337 ADD
0x338 DUP1
0x339 CALLDATALOAD
0x33a SWAP1
0x33b PUSH1 0x20
0x33d ADD
0x33e SWAP1
0x33f DUP1
0x340 DUP1
0x341 PUSH1 0x20
0x343 MUL
0x344 PUSH1 0x20
0x346 ADD
0x347 PUSH1 0x40
0x349 MLOAD
0x34a SWAP1
0x34b DUP2
0x34c ADD
0x34d PUSH1 0x40
0x34f MSTORE
0x350 DUP1
0x351 SWAP4
0x352 SWAP3
0x353 SWAP2
0x354 SWAP1
0x355 DUP2
0x356 DUP2
0x357 MSTORE
0x358 PUSH1 0x20
0x35a ADD
0x35b DUP4
0x35c DUP4
0x35d PUSH1 0x20
0x35f MUL
0x360 DUP1
0x361 DUP3
0x362 DUP5
0x363 CALLDATACOPY
0x364 DUP3
0x365 ADD
0x366 SWAP2
0x367 POP
0x368 POP
0x369 POP
0x36a POP
0x36b POP
0x36c POP
0x36d SWAP2
0x36e SWAP3
0x36f SWAP2
0x370 SWAP3
0x371 SWAP1
0x372 POP
0x373 POP
0x374 POP
0x375 PUSH2 0x934
0x378 JUMP
---
0x215: JUMPDEST 
0x217: V134 = 0x379
0x21a: V135 = 0x4
0x21d: V136 = CALLDATASIZE
0x21e: V137 = SUB V136 0x4
0x220: V138 = ADD 0x4 V137
0x224: V139 = CALLDATALOAD 0x4
0x226: V140 = 0x20
0x228: V141 = ADD 0x20 0x4
0x22b: V142 = ADD 0x4 V139
0x22d: V143 = CALLDATALOAD V142
0x22f: V144 = 0x20
0x231: V145 = ADD 0x20 V142
0x235: V146 = 0x20
0x237: V147 = MUL 0x20 V143
0x238: V148 = 0x20
0x23a: V149 = ADD 0x20 V147
0x23b: V150 = 0x40
0x23d: V151 = M[0x40]
0x240: V152 = ADD V151 V149
0x241: V153 = 0x40
0x243: M[0x40] = V152
0x24b: M[V151] = V143
0x24c: V154 = 0x20
0x24e: V155 = ADD 0x20 V151
0x251: V156 = 0x20
0x253: V157 = MUL 0x20 V143
0x257: CALLDATACOPY V155 V145 V157
0x259: V158 = ADD V155 V157
0x267: V159 = CALLDATALOAD 0x24
0x269: V160 = 0x20
0x26b: V161 = ADD 0x20 0x24
0x26e: V162 = ADD 0x4 V159
0x270: V163 = CALLDATALOAD V162
0x272: V164 = 0x20
0x274: V165 = ADD 0x20 V162
0x278: V166 = 0x20
0x27a: V167 = MUL 0x20 V163
0x27b: V168 = 0x20
0x27d: V169 = ADD 0x20 V167
0x27e: V170 = 0x40
0x280: V171 = M[0x40]
0x283: V172 = ADD V171 V169
0x284: V173 = 0x40
0x286: M[0x40] = V172
0x28e: M[V171] = V163
0x28f: V174 = 0x20
0x291: V175 = ADD 0x20 V171
0x294: V176 = 0x20
0x296: V177 = MUL 0x20 V163
0x29a: CALLDATACOPY V175 V165 V177
0x29c: V178 = ADD V175 V177
0x2aa: V179 = CALLDATALOAD 0x44
0x2ac: V180 = 0x20
0x2ae: V181 = ADD 0x20 0x44
0x2b1: V182 = ADD 0x4 V179
0x2b3: V183 = CALLDATALOAD V182
0x2b5: V184 = 0x20
0x2b7: V185 = ADD 0x20 V182
0x2bb: V186 = 0x20
0x2bd: V187 = MUL 0x20 V183
0x2be: V188 = 0x20
0x2c0: V189 = ADD 0x20 V187
0x2c1: V190 = 0x40
0x2c3: V191 = M[0x40]
0x2c6: V192 = ADD V191 V189
0x2c7: V193 = 0x40
0x2c9: M[0x40] = V192
0x2d1: M[V191] = V183
0x2d2: V194 = 0x20
0x2d4: V195 = ADD 0x20 V191
0x2d7: V196 = 0x20
0x2d9: V197 = MUL 0x20 V183
0x2dd: CALLDATACOPY V195 V185 V197
0x2df: V198 = ADD V195 V197
0x2ed: V199 = CALLDATALOAD 0x64
0x2ef: V200 = 0x20
0x2f1: V201 = ADD 0x20 0x64
0x2f4: V202 = ADD 0x4 V199
0x2f6: V203 = CALLDATALOAD V202
0x2f8: V204 = 0x20
0x2fa: V205 = ADD 0x20 V202
0x2fe: V206 = 0x20
0x300: V207 = MUL 0x20 V203
0x301: V208 = 0x20
0x303: V209 = ADD 0x20 V207
0x304: V210 = 0x40
0x306: V211 = M[0x40]
0x309: V212 = ADD V211 V209
0x30a: V213 = 0x40
0x30c: M[0x40] = V212
0x314: M[V211] = V203
0x315: V214 = 0x20
0x317: V215 = ADD 0x20 V211
0x31a: V216 = 0x20
0x31c: V217 = MUL 0x20 V203
0x320: CALLDATACOPY V215 V205 V217
0x322: V218 = ADD V215 V217
0x330: V219 = CALLDATALOAD 0x84
0x332: V220 = 0x20
0x334: V221 = ADD 0x20 0x84
0x337: V222 = ADD 0x4 V219
0x339: V223 = CALLDATALOAD V222
0x33b: V224 = 0x20
0x33d: V225 = ADD 0x20 V222
0x341: V226 = 0x20
0x343: V227 = MUL 0x20 V223
0x344: V228 = 0x20
0x346: V229 = ADD 0x20 V227
0x347: V230 = 0x40
0x349: V231 = M[0x40]
0x34c: V232 = ADD V231 V229
0x34d: V233 = 0x40
0x34f: M[0x40] = V232
0x357: M[V231] = V223
0x358: V234 = 0x20
0x35a: V235 = ADD 0x20 V231
0x35d: V236 = 0x20
0x35f: V237 = MUL 0x20 V223
0x363: CALLDATACOPY V235 V225 V237
0x365: V238 = ADD V235 V237
0x375: V239 = 0x934
0x378: JUMP 0x934
---
Entry stack: [V11, V130]
Stack pops: 1
Stack additions: [0x379, V151, V171, V191, V211, V231]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231]

================================

Block 0x379
[0x379:0x38e]
---
Predecessors: [0xb1f]
Successors: []
---
0x379 JUMPDEST
0x37a PUSH1 0x40
0x37c MLOAD
0x37d DUP1
0x37e DUP3
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x20
0x383 ADD
0x384 SWAP2
0x385 POP
0x386 POP
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b SWAP2
0x38c SUB
0x38d SWAP1
0x38e RETURN
---
0x379: JUMPDEST 
0x37a: V240 = 0x40
0x37c: V241 = M[0x40]
0x380: M[V241] = 0x0
0x381: V242 = 0x20
0x383: V243 = ADD 0x20 V241
0x387: V244 = 0x40
0x389: V245 = M[0x40]
0x38c: V246 = SUB V243 V245
0x38e: RETURN V245 V246
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x38f
[0x38f:0x396]
---
Predecessors: [0x62]
Successors: [0x397, 0x39b]
---
0x38f JUMPDEST
0x390 CALLVALUE
0x391 DUP1
0x392 ISZERO
0x393 PUSH2 0x39b
0x396 JUMPI
---
0x38f: JUMPDEST 
0x390: V247 = CALLVALUE
0x392: V248 = ISZERO V247
0x393: V249 = 0x39b
0x396: JUMPI 0x39b V248
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V247]
Exit stack: [V11, V247]

================================

Block 0x397
[0x397:0x39a]
---
Predecessors: [0x38f]
Successors: []
---
0x397 PUSH1 0x0
0x399 DUP1
0x39a REVERT
---
0x397: V250 = 0x0
0x39a: REVERT 0x0 0x0
---
Entry stack: [V11, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V247]

================================

Block 0x39b
[0x39b:0x3a3]
---
Predecessors: [0x38f]
Successors: [0xb30]
---
0x39b JUMPDEST
0x39c POP
0x39d PUSH2 0x3a4
0x3a0 PUSH2 0xb30
0x3a3 JUMP
---
0x39b: JUMPDEST 
0x39d: V251 = 0x3a4
0x3a0: V252 = 0xb30
0x3a3: JUMP 0xb30
---
Entry stack: [V11, V247]
Stack pops: 1
Stack additions: [0x3a4]
Exit stack: [V11, 0x3a4]

================================

Block 0x3a4
[0x3a4:0x3e5]
---
Predecessors: [0xb30]
Successors: []
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 DUP1
0x3a9 DUP3
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf AND
0x3c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d5 AND
0x3d6 DUP2
0x3d7 MSTORE
0x3d8 PUSH1 0x20
0x3da ADD
0x3db SWAP2
0x3dc POP
0x3dd POP
0x3de PUSH1 0x40
0x3e0 MLOAD
0x3e1 DUP1
0x3e2 SWAP2
0x3e3 SUB
0x3e4 SWAP1
0x3e5 RETURN
---
0x3a4: JUMPDEST 
0x3a5: V253 = 0x40
0x3a7: V254 = M[0x40]
0x3aa: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0x3c0: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x3d7: M[V254] = V258
0x3d8: V259 = 0x20
0x3da: V260 = ADD 0x20 V254
0x3de: V261 = 0x40
0x3e0: V262 = M[0x40]
0x3e3: V263 = SUB V260 V262
0x3e5: RETURN V262 V263
---
Entry stack: [V11, 0x3a4, V726]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3a4]

================================

Block 0x3e6
[0x3e6:0x3ed]
---
Predecessors: [0x6d]
Successors: [0x3ee, 0x3f2]
---
0x3e6 JUMPDEST
0x3e7 CALLVALUE
0x3e8 DUP1
0x3e9 ISZERO
0x3ea PUSH2 0x3f2
0x3ed JUMPI
---
0x3e6: JUMPDEST 
0x3e7: V264 = CALLVALUE
0x3e9: V265 = ISZERO V264
0x3ea: V266 = 0x3f2
0x3ed: JUMPI 0x3f2 V265
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V264]
Exit stack: [V11, V264]

================================

Block 0x3ee
[0x3ee:0x3f1]
---
Predecessors: [0x3e6]
Successors: []
---
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 REVERT
---
0x3ee: V267 = 0x0
0x3f1: REVERT 0x0 0x0
---
Entry stack: [V11, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V264]

================================

Block 0x3f2
[0x3f2:0x4ac]
---
Predecessors: [0x3e6]
Successors: [0xb55]
---
0x3f2 JUMPDEST
0x3f3 POP
0x3f4 PUSH2 0x4ad
0x3f7 PUSH1 0x4
0x3f9 DUP1
0x3fa CALLDATASIZE
0x3fb SUB
0x3fc DUP2
0x3fd ADD
0x3fe SWAP1
0x3ff DUP1
0x400 DUP1
0x401 CALLDATALOAD
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 AND
0x418 SWAP1
0x419 PUSH1 0x20
0x41b ADD
0x41c SWAP1
0x41d SWAP3
0x41e SWAP2
0x41f SWAP1
0x420 DUP1
0x421 CALLDATALOAD
0x422 SWAP1
0x423 PUSH1 0x20
0x425 ADD
0x426 SWAP1
0x427 DUP3
0x428 ADD
0x429 DUP1
0x42a CALLDATALOAD
0x42b SWAP1
0x42c PUSH1 0x20
0x42e ADD
0x42f SWAP1
0x430 DUP1
0x431 DUP1
0x432 PUSH1 0x20
0x434 MUL
0x435 PUSH1 0x20
0x437 ADD
0x438 PUSH1 0x40
0x43a MLOAD
0x43b SWAP1
0x43c DUP2
0x43d ADD
0x43e PUSH1 0x40
0x440 MSTORE
0x441 DUP1
0x442 SWAP4
0x443 SWAP3
0x444 SWAP2
0x445 SWAP1
0x446 DUP2
0x447 DUP2
0x448 MSTORE
0x449 PUSH1 0x20
0x44b ADD
0x44c DUP4
0x44d DUP4
0x44e PUSH1 0x20
0x450 MUL
0x451 DUP1
0x452 DUP3
0x453 DUP5
0x454 CALLDATACOPY
0x455 DUP3
0x456 ADD
0x457 SWAP2
0x458 POP
0x459 POP
0x45a POP
0x45b POP
0x45c POP
0x45d POP
0x45e SWAP2
0x45f SWAP3
0x460 SWAP2
0x461 SWAP3
0x462 SWAP1
0x463 DUP1
0x464 CALLDATALOAD
0x465 SWAP1
0x466 PUSH1 0x20
0x468 ADD
0x469 SWAP1
0x46a DUP3
0x46b ADD
0x46c DUP1
0x46d CALLDATALOAD
0x46e SWAP1
0x46f PUSH1 0x20
0x471 ADD
0x472 SWAP1
0x473 DUP1
0x474 DUP1
0x475 PUSH1 0x20
0x477 MUL
0x478 PUSH1 0x20
0x47a ADD
0x47b PUSH1 0x40
0x47d MLOAD
0x47e SWAP1
0x47f DUP2
0x480 ADD
0x481 PUSH1 0x40
0x483 MSTORE
0x484 DUP1
0x485 SWAP4
0x486 SWAP3
0x487 SWAP2
0x488 SWAP1
0x489 DUP2
0x48a DUP2
0x48b MSTORE
0x48c PUSH1 0x20
0x48e ADD
0x48f DUP4
0x490 DUP4
0x491 PUSH1 0x20
0x493 MUL
0x494 DUP1
0x495 DUP3
0x496 DUP5
0x497 CALLDATACOPY
0x498 DUP3
0x499 ADD
0x49a SWAP2
0x49b POP
0x49c POP
0x49d POP
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 SWAP2
0x4a2 SWAP3
0x4a3 SWAP2
0x4a4 SWAP3
0x4a5 SWAP1
0x4a6 POP
0x4a7 POP
0x4a8 POP
0x4a9 PUSH2 0xb55
0x4ac JUMP
---
0x3f2: JUMPDEST 
0x3f4: V268 = 0x4ad
0x3f7: V269 = 0x4
0x3fa: V270 = CALLDATASIZE
0x3fb: V271 = SUB V270 0x4
0x3fd: V272 = ADD 0x4 V271
0x401: V273 = CALLDATALOAD 0x4
0x402: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x419: V276 = 0x20
0x41b: V277 = ADD 0x20 0x4
0x421: V278 = CALLDATALOAD 0x24
0x423: V279 = 0x20
0x425: V280 = ADD 0x20 0x24
0x428: V281 = ADD 0x4 V278
0x42a: V282 = CALLDATALOAD V281
0x42c: V283 = 0x20
0x42e: V284 = ADD 0x20 V281
0x432: V285 = 0x20
0x434: V286 = MUL 0x20 V282
0x435: V287 = 0x20
0x437: V288 = ADD 0x20 V286
0x438: V289 = 0x40
0x43a: V290 = M[0x40]
0x43d: V291 = ADD V290 V288
0x43e: V292 = 0x40
0x440: M[0x40] = V291
0x448: M[V290] = V282
0x449: V293 = 0x20
0x44b: V294 = ADD 0x20 V290
0x44e: V295 = 0x20
0x450: V296 = MUL 0x20 V282
0x454: CALLDATACOPY V294 V284 V296
0x456: V297 = ADD V294 V296
0x464: V298 = CALLDATALOAD 0x44
0x466: V299 = 0x20
0x468: V300 = ADD 0x20 0x44
0x46b: V301 = ADD 0x4 V298
0x46d: V302 = CALLDATALOAD V301
0x46f: V303 = 0x20
0x471: V304 = ADD 0x20 V301
0x475: V305 = 0x20
0x477: V306 = MUL 0x20 V302
0x478: V307 = 0x20
0x47a: V308 = ADD 0x20 V306
0x47b: V309 = 0x40
0x47d: V310 = M[0x40]
0x480: V311 = ADD V310 V308
0x481: V312 = 0x40
0x483: M[0x40] = V311
0x48b: M[V310] = V302
0x48c: V313 = 0x20
0x48e: V314 = ADD 0x20 V310
0x491: V315 = 0x20
0x493: V316 = MUL 0x20 V302
0x497: CALLDATACOPY V314 V304 V316
0x499: V317 = ADD V314 V316
0x4a9: V318 = 0xb55
0x4ac: JUMP 0xb55
---
Entry stack: [V11, V264]
Stack pops: 1
Stack additions: [0x4ad, V275, V290, V310]
Exit stack: [V11, 0x4ad, V275, V290, V310]

================================

Block 0x4ad
[0x4ad:0x4c2]
---
Predecessors: [0xcb5]
Successors: []
---
0x4ad JUMPDEST
0x4ae PUSH1 0x40
0x4b0 MLOAD
0x4b1 DUP1
0x4b2 DUP3
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 PUSH1 0x20
0x4b7 ADD
0x4b8 SWAP2
0x4b9 POP
0x4ba POP
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be DUP1
0x4bf SWAP2
0x4c0 SUB
0x4c1 SWAP1
0x4c2 RETURN
---
0x4ad: JUMPDEST 
0x4ae: V319 = 0x40
0x4b0: V320 = M[0x40]
0x4b4: M[V320] = S0
0x4b5: V321 = 0x20
0x4b7: V322 = ADD 0x20 V320
0x4bb: V323 = 0x40
0x4bd: V324 = M[0x40]
0x4c0: V325 = SUB V322 V324
0x4c2: RETURN V324 V325
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c3
[0x4c3:0x4ca]
---
Predecessors: [0x78]
Successors: [0x4cb, 0x4cf]
---
0x4c3 JUMPDEST
0x4c4 CALLVALUE
0x4c5 DUP1
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x4c3: JUMPDEST 
0x4c4: V326 = CALLVALUE
0x4c6: V327 = ISZERO V326
0x4c7: V328 = 0x4cf
0x4ca: JUMPI 0x4cf V327
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V326]
Exit stack: [V11, V326]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x4c3]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V329 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V11, V326]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V326]

================================

Block 0x4cf
[0x4cf:0x503]
---
Predecessors: [0x4c3]
Successors: [0xcc0]
---
0x4cf JUMPDEST
0x4d0 POP
0x4d1 PUSH2 0x504
0x4d4 PUSH1 0x4
0x4d6 DUP1
0x4d7 CALLDATASIZE
0x4d8 SUB
0x4d9 DUP2
0x4da ADD
0x4db SWAP1
0x4dc DUP1
0x4dd DUP1
0x4de CALLDATALOAD
0x4df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f4 AND
0x4f5 SWAP1
0x4f6 PUSH1 0x20
0x4f8 ADD
0x4f9 SWAP1
0x4fa SWAP3
0x4fb SWAP2
0x4fc SWAP1
0x4fd POP
0x4fe POP
0x4ff POP
0x500 PUSH2 0xcc0
0x503 JUMP
---
0x4cf: JUMPDEST 
0x4d1: V330 = 0x504
0x4d4: V331 = 0x4
0x4d7: V332 = CALLDATASIZE
0x4d8: V333 = SUB V332 0x4
0x4da: V334 = ADD 0x4 V333
0x4de: V335 = CALLDATALOAD 0x4
0x4df: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x4f6: V338 = 0x20
0x4f8: V339 = ADD 0x20 0x4
0x500: V340 = 0xcc0
0x503: JUMP 0xcc0
---
Entry stack: [V11, V326]
Stack pops: 1
Stack additions: [0x504, V337]
Exit stack: [V11, 0x504, V337]

================================

Block 0x504
[0x504:0x505]
---
Predecessors: [0xd92]
Successors: []
---
0x504 JUMPDEST
0x505 STOP
---
0x504: JUMPDEST 
0x505: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x506
[0x506:0x55c]
---
Predecessors: [0x94]
Successors: [0x55d, 0x561]
---
0x506 JUMPDEST
0x507 PUSH1 0x0
0x509 DUP1
0x50a SWAP1
0x50b SLOAD
0x50c SWAP1
0x50d PUSH2 0x100
0x510 EXP
0x511 SWAP1
0x512 DIV
0x513 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x528 AND
0x529 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53e AND
0x53f CALLER
0x540 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x555 AND
0x556 EQ
0x557 ISZERO
0x558 ISZERO
0x559 PUSH2 0x561
0x55c JUMPI
---
0x506: JUMPDEST 
0x507: V341 = 0x0
0x50b: V342 = S[0x0]
0x50d: V343 = 0x100
0x510: V344 = EXP 0x100 0x0
0x512: V345 = DIV V342 0x1
0x513: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x528: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x529: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x53f: V350 = CALLER
0x540: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x555: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x556: V353 = EQ V352 V349
0x557: V354 = ISZERO V353
0x558: V355 = ISZERO V354
0x559: V356 = 0x561
0x55c: JUMPI 0x561 V355
---
Entry stack: [V11, 0xf3, V45, V50, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V45, V50, V53]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x506]
Successors: []
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
---
0x55d: V357 = 0x0
0x560: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, V45, V50, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V45, V50, V53]

================================

Block 0x561
[0x561:0x5ff]
---
Predecessors: [0x506]
Successors: [0x600, 0x604]
---
0x561 JUMPDEST
0x562 DUP3
0x563 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x578 AND
0x579 PUSH4 0xa9059cbb
0x57e DUP4
0x57f DUP4
0x580 PUSH1 0x40
0x582 MLOAD
0x583 DUP4
0x584 PUSH4 0xffffffff
0x589 AND
0x58a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5a8 MUL
0x5a9 DUP2
0x5aa MSTORE
0x5ab PUSH1 0x4
0x5ad ADD
0x5ae DUP1
0x5af DUP4
0x5b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c5 AND
0x5c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5db AND
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 DUP3
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 SWAP3
0x5e8 POP
0x5e9 POP
0x5ea POP
0x5eb PUSH1 0x0
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP1
0x5f1 DUP4
0x5f2 SUB
0x5f3 DUP2
0x5f4 PUSH1 0x0
0x5f6 DUP8
0x5f7 DUP1
0x5f8 EXTCODESIZE
0x5f9 ISZERO
0x5fa DUP1
0x5fb ISZERO
0x5fc PUSH2 0x604
0x5ff JUMPI
---
0x561: JUMPDEST 
0x563: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x578: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x579: V360 = 0xa9059cbb
0x580: V361 = 0x40
0x582: V362 = M[0x40]
0x584: V363 = 0xffffffff
0x589: V364 = AND 0xffffffff 0xa9059cbb
0x58a: V365 = 0x100000000000000000000000000000000000000000000000000000000
0x5a8: V366 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x5aa: M[V362] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5ab: V367 = 0x4
0x5ad: V368 = ADD 0x4 V362
0x5b0: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x5c6: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x5db: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x5dd: M[V368] = V372
0x5de: V373 = 0x20
0x5e0: V374 = ADD 0x20 V368
0x5e3: M[V374] = V53
0x5e4: V375 = 0x20
0x5e6: V376 = ADD 0x20 V374
0x5eb: V377 = 0x0
0x5ed: V378 = 0x40
0x5ef: V379 = M[0x40]
0x5f2: V380 = SUB V376 V379
0x5f4: V381 = 0x0
0x5f8: V382 = EXTCODESIZE V359
0x5f9: V383 = ISZERO V382
0x5fb: V384 = ISZERO V383
0x5fc: V385 = 0x604
0x5ff: JUMPI 0x604 V384
---
Entry stack: [V11, 0xf3, V45, V50, V53]
Stack pops: 3
Stack additions: [S2, S1, S0, V359, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V359, V383]
Exit stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V359, V383]

================================

Block 0x600
[0x600:0x603]
---
Predecessors: [0x561]
Successors: []
---
0x600 PUSH1 0x0
0x602 DUP1
0x603 REVERT
---
0x600: V386 = 0x0
0x603: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V359, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V359, V383]

================================

Block 0x604
[0x604:0x60e]
---
Predecessors: [0x561]
Successors: [0x60f, 0x618]
---
0x604 JUMPDEST
0x605 POP
0x606 GAS
0x607 CALL
0x608 ISZERO
0x609 DUP1
0x60a ISZERO
0x60b PUSH2 0x618
0x60e JUMPI
---
0x604: JUMPDEST 
0x606: V387 = GAS
0x607: V388 = CALL V387 V359 0x0 V379 V380 V379 0x0
0x608: V389 = ISZERO V388
0x60a: V390 = ISZERO V389
0x60b: V391 = 0x618
0x60e: JUMPI 0x618 V390
---
Entry stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V359, V383]
Stack pops: 7
Stack additions: [V389]
Exit stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, V389]

================================

Block 0x60f
[0x60f:0x617]
---
Predecessors: [0x604]
Successors: []
---
0x60f RETURNDATASIZE
0x610 PUSH1 0x0
0x612 DUP1
0x613 RETURNDATACOPY
0x614 RETURNDATASIZE
0x615 PUSH1 0x0
0x617 REVERT
---
0x60f: V392 = RETURNDATASIZE
0x610: V393 = 0x0
0x613: RETURNDATACOPY 0x0 0x0 V392
0x614: V394 = RETURNDATASIZE
0x615: V395 = 0x0
0x617: REVERT 0x0 V394
---
Entry stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, V389]

================================

Block 0x618
[0x618:0x620]
---
Predecessors: [0x604]
Successors: [0xf3]
---
0x618 JUMPDEST
0x619 POP
0x61a POP
0x61b POP
0x61c POP
0x61d POP
0x61e POP
0x61f POP
0x620 JUMP
---
0x618: JUMPDEST 
0x620: JUMP 0xf3
---
Entry stack: [V11, 0xf3, V45, V50, V53, V359, 0xa9059cbb, V376, V389]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x621
[0x621:0x67a]
---
Predecessors: [0x101]
Successors: [0x67b, 0x67f]
---
0x621 JUMPDEST
0x622 PUSH1 0x0
0x624 DUP1
0x625 PUSH1 0x0
0x627 DUP1
0x628 SWAP1
0x629 SLOAD
0x62a SWAP1
0x62b PUSH2 0x100
0x62e EXP
0x62f SWAP1
0x630 DIV
0x631 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x646 AND
0x647 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65c AND
0x65d CALLER
0x65e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x673 AND
0x674 EQ
0x675 ISZERO
0x676 ISZERO
0x677 PUSH2 0x67f
0x67a JUMPI
---
0x621: JUMPDEST 
0x622: V396 = 0x0
0x625: V397 = 0x0
0x629: V398 = S[0x0]
0x62b: V399 = 0x100
0x62e: V400 = EXP 0x100 0x0
0x630: V401 = DIV V398 0x1
0x631: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x646: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x647: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x65d: V406 = CALLER
0x65e: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x673: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x674: V409 = EQ V408 V405
0x675: V410 = ISZERO V409
0x676: V411 = ISZERO V410
0x677: V412 = 0x67f
0x67a: JUMPI 0x67f V411
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, 0x0]

================================

Block 0x67b
[0x67b:0x67e]
---
Predecessors: [0x621]
Successors: []
---
0x67b PUSH1 0x0
0x67d DUP1
0x67e REVERT
---
0x67b: V413 = 0x0
0x67e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, 0x0]

================================

Block 0x67f
[0x67f:0x683]
---
Predecessors: [0x621]
Successors: [0x684]
---
0x67f JUMPDEST
0x680 PUSH1 0x0
0x682 SWAP1
0x683 POP
---
0x67f: JUMPDEST 
0x680: V414 = 0x0
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, 0x0]

================================

Block 0x684
[0x684:0x68d]
---
Predecessors: [0x67f, 0x85e]
Successors: [0x68e, 0x86d]
---
0x684 JUMPDEST
0x685 DUP4
0x686 MLOAD
0x687 DUP2
0x688 LT
0x689 ISZERO
0x68a PUSH2 0x86d
0x68d JUMPI
---
0x684: JUMPDEST 
0x686: V415 = M[V88]
0x688: V416 = LT S0 V415
0x689: V417 = ISZERO V416
0x68a: V418 = 0x86d
0x68d: JUMPI 0x86d V417
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S0]

================================

Block 0x68e
[0x68e:0x6b5]
---
Predecessors: [0x684]
Successors: [0x6b6, 0x6b7]
---
0x68e DUP6
0x68f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a4 AND
0x6a5 PUSH4 0xa9059cbb
0x6aa DUP6
0x6ab DUP4
0x6ac DUP2
0x6ad MLOAD
0x6ae DUP2
0x6af LT
0x6b0 ISZERO
0x6b1 ISZERO
0x6b2 PUSH2 0x6b7
0x6b5 JUMPI
---
0x68f: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x6a5: V421 = 0xa9059cbb
0x6ad: V422 = M[V88]
0x6af: V423 = LT S0 V422
0x6b0: V424 = ISZERO V423
0x6b1: V425 = ISZERO V424
0x6b2: V426 = 0x6b7
0x6b5: JUMPI 0x6b7 V425
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V420, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S0, V420, 0xa9059cbb, V88, S0]

================================

Block 0x6b6
[0x6b6:0x6b6]
---
Predecessors: [0x68e]
Successors: []
---
0x6b6 INVALID
---
0x6b6: INVALID 
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V420, 0xa9059cbb, V88, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V420, 0xa9059cbb, V88, S0]

================================

Block 0x6b7
[0x6b7:0x6cd]
---
Predecessors: [0x68e]
Successors: [0x6ce, 0x6cf]
---
0x6b7 JUMPDEST
0x6b8 SWAP1
0x6b9 PUSH1 0x20
0x6bb ADD
0x6bc SWAP1
0x6bd PUSH1 0x20
0x6bf MUL
0x6c0 ADD
0x6c1 MLOAD
0x6c2 DUP6
0x6c3 DUP5
0x6c4 DUP2
0x6c5 MLOAD
0x6c6 DUP2
0x6c7 LT
0x6c8 ISZERO
0x6c9 ISZERO
0x6ca PUSH2 0x6cf
0x6cd JUMPI
---
0x6b7: JUMPDEST 
0x6b9: V427 = 0x20
0x6bb: V428 = ADD 0x20 V88
0x6bd: V429 = 0x20
0x6bf: V430 = MUL 0x20 S0
0x6c0: V431 = ADD V430 V428
0x6c1: V432 = M[V431]
0x6c5: V433 = M[V108]
0x6c7: V434 = LT S4 V433
0x6c8: V435 = ISZERO V434
0x6c9: V436 = ISZERO V435
0x6ca: V437 = 0x6cf
0x6cd: JUMPI 0x6cf V436
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V420, 0xa9059cbb, V88, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V432, S6, S4]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V420, 0xa9059cbb, V432, V108, S4]

================================

Block 0x6ce
[0x6ce:0x6ce]
---
Predecessors: [0x6b7]
Successors: []
---
0x6ce INVALID
---
0x6ce: INVALID 
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V420, 0xa9059cbb, V432, V108, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V420, 0xa9059cbb, V432, V108, S0]

================================

Block 0x6cf
[0x6cf:0x759]
---
Predecessors: [0x6b7]
Successors: [0x75a, 0x75e]
---
0x6cf JUMPDEST
0x6d0 SWAP1
0x6d1 PUSH1 0x20
0x6d3 ADD
0x6d4 SWAP1
0x6d5 PUSH1 0x20
0x6d7 MUL
0x6d8 ADD
0x6d9 MLOAD
0x6da PUSH1 0x40
0x6dc MLOAD
0x6dd DUP4
0x6de PUSH4 0xffffffff
0x6e3 AND
0x6e4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x702 MUL
0x703 DUP2
0x704 MSTORE
0x705 PUSH1 0x4
0x707 ADD
0x708 DUP1
0x709 DUP4
0x70a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71f AND
0x720 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x735 AND
0x736 DUP2
0x737 MSTORE
0x738 PUSH1 0x20
0x73a ADD
0x73b DUP3
0x73c DUP2
0x73d MSTORE
0x73e PUSH1 0x20
0x740 ADD
0x741 SWAP3
0x742 POP
0x743 POP
0x744 POP
0x745 PUSH1 0x0
0x747 PUSH1 0x40
0x749 MLOAD
0x74a DUP1
0x74b DUP4
0x74c SUB
0x74d DUP2
0x74e PUSH1 0x0
0x750 DUP8
0x751 DUP1
0x752 EXTCODESIZE
0x753 ISZERO
0x754 DUP1
0x755 ISZERO
0x756 PUSH2 0x75e
0x759 JUMPI
---
0x6cf: JUMPDEST 
0x6d1: V438 = 0x20
0x6d3: V439 = ADD 0x20 V108
0x6d5: V440 = 0x20
0x6d7: V441 = MUL 0x20 S0
0x6d8: V442 = ADD V441 V439
0x6d9: V443 = M[V442]
0x6da: V444 = 0x40
0x6dc: V445 = M[0x40]
0x6de: V446 = 0xffffffff
0x6e3: V447 = AND 0xffffffff 0xa9059cbb
0x6e4: V448 = 0x100000000000000000000000000000000000000000000000000000000
0x702: V449 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x704: M[V445] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x705: V450 = 0x4
0x707: V451 = ADD 0x4 V445
0x70a: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x71f: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x720: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x735: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x737: M[V451] = V455
0x738: V456 = 0x20
0x73a: V457 = ADD 0x20 V451
0x73d: M[V457] = V443
0x73e: V458 = 0x20
0x740: V459 = ADD 0x20 V457
0x745: V460 = 0x0
0x747: V461 = 0x40
0x749: V462 = M[0x40]
0x74c: V463 = SUB V459 V462
0x74e: V464 = 0x0
0x752: V465 = EXTCODESIZE V420
0x753: V466 = ISZERO V465
0x755: V467 = ISZERO V466
0x756: V468 = 0x75e
0x759: JUMPI 0x75e V467
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V420, 0xa9059cbb, V432, V108, S0]
Stack pops: 5
Stack additions: [S4, S3, V459, 0x0, V462, V463, V462, 0x0, S4, V466]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V420, 0xa9059cbb, V459, 0x0, V462, V463, V462, 0x0, V420, V466]

================================

Block 0x75a
[0x75a:0x75d]
---
Predecessors: [0x6cf]
Successors: []
---
0x75a PUSH1 0x0
0x75c DUP1
0x75d REVERT
---
0x75a: V469 = 0x0
0x75d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V420, 0xa9059cbb, V459, 0x0, V462, V463, V462, 0x0, V420, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V420, 0xa9059cbb, V459, 0x0, V462, V463, V462, 0x0, V420, V466]

================================

Block 0x75e
[0x75e:0x768]
---
Predecessors: [0x6cf]
Successors: [0x769, 0x772]
---
0x75e JUMPDEST
0x75f POP
0x760 GAS
0x761 CALL
0x762 ISZERO
0x763 DUP1
0x764 ISZERO
0x765 PUSH2 0x772
0x768 JUMPI
---
0x75e: JUMPDEST 
0x760: V470 = GAS
0x761: V471 = CALL V470 V420 0x0 V462 V463 V462 0x0
0x762: V472 = ISZERO V471
0x764: V473 = ISZERO V472
0x765: V474 = 0x772
0x768: JUMPI 0x772 V473
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V420, 0xa9059cbb, V459, 0x0, V462, V463, V462, 0x0, V420, V466]
Stack pops: 7
Stack additions: [V472]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V420, 0xa9059cbb, V459, V472]

================================

Block 0x769
[0x769:0x771]
---
Predecessors: [0x75e]
Successors: []
---
0x769 RETURNDATASIZE
0x76a PUSH1 0x0
0x76c DUP1
0x76d RETURNDATACOPY
0x76e RETURNDATASIZE
0x76f PUSH1 0x0
0x771 REVERT
---
0x769: V475 = RETURNDATASIZE
0x76a: V476 = 0x0
0x76d: RETURNDATACOPY 0x0 0x0 V475
0x76e: V477 = RETURNDATASIZE
0x76f: V478 = 0x0
0x771: REVERT 0x0 V477
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V420, 0xa9059cbb, V459, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V420, 0xa9059cbb, V459, V472]

================================

Block 0x772
[0x772:0x79e]
---
Predecessors: [0x75e]
Successors: [0x79f, 0x7a0]
---
0x772 JUMPDEST
0x773 POP
0x774 POP
0x775 POP
0x776 POP
0x777 DUP5
0x778 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78d AND
0x78e PUSH4 0xa9059cbb
0x793 DUP6
0x794 DUP4
0x795 DUP2
0x796 MLOAD
0x797 DUP2
0x798 LT
0x799 ISZERO
0x79a ISZERO
0x79b PUSH2 0x7a0
0x79e JUMPI
---
0x772: JUMPDEST 
0x778: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x78d: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x78e: V481 = 0xa9059cbb
0x796: V482 = M[V88]
0x798: V483 = LT S4 V482
0x799: V484 = ISZERO V483
0x79a: V485 = ISZERO V484
0x79b: V486 = 0x7a0
0x79e: JUMPI 0x7a0 V485
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V420, 0xa9059cbb, V459, V472]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V480, 0xa9059cbb, S7, S4]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V88, S4]

================================

Block 0x79f
[0x79f:0x79f]
---
Predecessors: [0x772]
Successors: []
---
0x79f INVALID
---
0x79f: INVALID 
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V88, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V88, S0]

================================

Block 0x7a0
[0x7a0:0x7b6]
---
Predecessors: [0x772]
Successors: [0x7b7, 0x7b8]
---
0x7a0 JUMPDEST
0x7a1 SWAP1
0x7a2 PUSH1 0x20
0x7a4 ADD
0x7a5 SWAP1
0x7a6 PUSH1 0x20
0x7a8 MUL
0x7a9 ADD
0x7aa MLOAD
0x7ab DUP6
0x7ac DUP5
0x7ad DUP2
0x7ae MLOAD
0x7af DUP2
0x7b0 LT
0x7b1 ISZERO
0x7b2 ISZERO
0x7b3 PUSH2 0x7b8
0x7b6 JUMPI
---
0x7a0: JUMPDEST 
0x7a2: V487 = 0x20
0x7a4: V488 = ADD 0x20 V88
0x7a6: V489 = 0x20
0x7a8: V490 = MUL 0x20 S0
0x7a9: V491 = ADD V490 V488
0x7aa: V492 = M[V491]
0x7ae: V493 = M[V108]
0x7b0: V494 = LT S4 V493
0x7b1: V495 = ISZERO V494
0x7b2: V496 = ISZERO V495
0x7b3: V497 = 0x7b8
0x7b6: JUMPI 0x7b8 V496
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V88, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V492, S6, S4]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V492, V108, S4]

================================

Block 0x7b7
[0x7b7:0x7b7]
---
Predecessors: [0x7a0]
Successors: []
---
0x7b7 INVALID
---
0x7b7: INVALID 
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V480, 0xa9059cbb, V492, V108, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V480, 0xa9059cbb, V492, V108, S0]

================================

Block 0x7b8
[0x7b8:0x845]
---
Predecessors: [0x7a0]
Successors: [0x846, 0x84a]
---
0x7b8 JUMPDEST
0x7b9 SWAP1
0x7ba PUSH1 0x20
0x7bc ADD
0x7bd SWAP1
0x7be PUSH1 0x20
0x7c0 MUL
0x7c1 ADD
0x7c2 MLOAD
0x7c3 PUSH1 0x4
0x7c5 MUL
0x7c6 PUSH1 0x40
0x7c8 MLOAD
0x7c9 DUP4
0x7ca PUSH4 0xffffffff
0x7cf AND
0x7d0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7ee MUL
0x7ef DUP2
0x7f0 MSTORE
0x7f1 PUSH1 0x4
0x7f3 ADD
0x7f4 DUP1
0x7f5 DUP4
0x7f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80b AND
0x80c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x821 AND
0x822 DUP2
0x823 MSTORE
0x824 PUSH1 0x20
0x826 ADD
0x827 DUP3
0x828 DUP2
0x829 MSTORE
0x82a PUSH1 0x20
0x82c ADD
0x82d SWAP3
0x82e POP
0x82f POP
0x830 POP
0x831 PUSH1 0x0
0x833 PUSH1 0x40
0x835 MLOAD
0x836 DUP1
0x837 DUP4
0x838 SUB
0x839 DUP2
0x83a PUSH1 0x0
0x83c DUP8
0x83d DUP1
0x83e EXTCODESIZE
0x83f ISZERO
0x840 DUP1
0x841 ISZERO
0x842 PUSH2 0x84a
0x845 JUMPI
---
0x7b8: JUMPDEST 
0x7ba: V498 = 0x20
0x7bc: V499 = ADD 0x20 V108
0x7be: V500 = 0x20
0x7c0: V501 = MUL 0x20 S0
0x7c1: V502 = ADD V501 V499
0x7c2: V503 = M[V502]
0x7c3: V504 = 0x4
0x7c5: V505 = MUL 0x4 V503
0x7c6: V506 = 0x40
0x7c8: V507 = M[0x40]
0x7ca: V508 = 0xffffffff
0x7cf: V509 = AND 0xffffffff 0xa9059cbb
0x7d0: V510 = 0x100000000000000000000000000000000000000000000000000000000
0x7ee: V511 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x7f0: M[V507] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f1: V512 = 0x4
0x7f3: V513 = ADD 0x4 V507
0x7f6: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x80b: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x80c: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x821: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x823: M[V513] = V517
0x824: V518 = 0x20
0x826: V519 = ADD 0x20 V513
0x829: M[V519] = V505
0x82a: V520 = 0x20
0x82c: V521 = ADD 0x20 V519
0x831: V522 = 0x0
0x833: V523 = 0x40
0x835: V524 = M[0x40]
0x838: V525 = SUB V521 V524
0x83a: V526 = 0x0
0x83e: V527 = EXTCODESIZE V480
0x83f: V528 = ISZERO V527
0x841: V529 = ISZERO V528
0x842: V530 = 0x84a
0x845: JUMPI 0x84a V529
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V480, 0xa9059cbb, V492, V108, S0]
Stack pops: 5
Stack additions: [S4, S3, V521, 0x0, V524, V525, V524, 0x0, S4, V528]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S5, V480, 0xa9059cbb, V521, 0x0, V524, V525, V524, 0x0, V480, V528]

================================

Block 0x846
[0x846:0x849]
---
Predecessors: [0x7b8]
Successors: []
---
0x846 PUSH1 0x0
0x848 DUP1
0x849 REVERT
---
0x846: V531 = 0x0
0x849: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V480, 0xa9059cbb, V521, 0x0, V524, V525, V524, 0x0, V480, V528]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V480, 0xa9059cbb, V521, 0x0, V524, V525, V524, 0x0, V480, V528]

================================

Block 0x84a
[0x84a:0x854]
---
Predecessors: [0x7b8]
Successors: [0x855, 0x85e]
---
0x84a JUMPDEST
0x84b POP
0x84c GAS
0x84d CALL
0x84e ISZERO
0x84f DUP1
0x850 ISZERO
0x851 PUSH2 0x85e
0x854 JUMPI
---
0x84a: JUMPDEST 
0x84c: V532 = GAS
0x84d: V533 = CALL V532 V480 0x0 V524 V525 V524 0x0
0x84e: V534 = ISZERO V533
0x850: V535 = ISZERO V534
0x851: V536 = 0x85e
0x854: JUMPI 0x85e V535
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V480, 0xa9059cbb, V521, 0x0, V524, V525, V524, 0x0, V480, V528]
Stack pops: 7
Stack additions: [V534]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S10, V480, 0xa9059cbb, V521, V534]

================================

Block 0x855
[0x855:0x85d]
---
Predecessors: [0x84a]
Successors: []
---
0x855 RETURNDATASIZE
0x856 PUSH1 0x0
0x858 DUP1
0x859 RETURNDATACOPY
0x85a RETURNDATASIZE
0x85b PUSH1 0x0
0x85d REVERT
---
0x855: V537 = RETURNDATASIZE
0x856: V538 = 0x0
0x859: RETURNDATACOPY 0x0 0x0 V537
0x85a: V539 = RETURNDATASIZE
0x85b: V540 = 0x0
0x85d: REVERT 0x0 V539
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V521, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V521, V534]

================================

Block 0x85e
[0x85e:0x86c]
---
Predecessors: [0x84a]
Successors: [0x684]
---
0x85e JUMPDEST
0x85f POP
0x860 POP
0x861 POP
0x862 POP
0x863 PUSH1 0x1
0x865 DUP2
0x866 ADD
0x867 SWAP1
0x868 POP
0x869 PUSH2 0x684
0x86c JUMP
---
0x85e: JUMPDEST 
0x863: V541 = 0x1
0x866: V542 = ADD S4 0x1
0x869: V543 = 0x684
0x86c: JUMP 0x684
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S4, V480, 0xa9059cbb, V521, V534]
Stack pops: 5
Stack additions: [V542]
Exit stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, V542]

================================

Block 0x86d
[0x86d:0x878]
---
Predecessors: [0x684]
Successors: [0x1dc]
---
0x86d JUMPDEST
0x86e DUP1
0x86f SWAP2
0x870 POP
0x871 POP
0x872 SWAP5
0x873 SWAP4
0x874 POP
0x875 POP
0x876 POP
0x877 POP
0x878 JUMP
---
0x86d: JUMPDEST 
0x878: JUMP 0x1dc
---
Entry stack: [V11, 0x1dc, V68, V73, V88, V108, 0x0, S0]
Stack pops: 7
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x879
[0x879:0x8cf]
---
Predecessors: [0x1fe]
Successors: [0x8d0, 0x8d4]
---
0x879 JUMPDEST
0x87a PUSH1 0x0
0x87c DUP1
0x87d SWAP1
0x87e SLOAD
0x87f SWAP1
0x880 PUSH2 0x100
0x883 EXP
0x884 SWAP1
0x885 DIV
0x886 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89b AND
0x89c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b1 AND
0x8b2 CALLER
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 AND
0x8c9 EQ
0x8ca ISZERO
0x8cb ISZERO
0x8cc PUSH2 0x8d4
0x8cf JUMPI
---
0x879: JUMPDEST 
0x87a: V544 = 0x0
0x87e: V545 = S[0x0]
0x880: V546 = 0x100
0x883: V547 = EXP 0x100 0x0
0x885: V548 = DIV V545 0x1
0x886: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x89b: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x89c: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b1: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x8b2: V553 = CALLER
0x8b3: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x8c9: V556 = EQ V555 V552
0x8ca: V557 = ISZERO V556
0x8cb: V558 = ISZERO V557
0x8cc: V559 = 0x8d4
0x8cf: JUMPI 0x8d4 V558
---
Entry stack: [V11, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207]

================================

Block 0x8d0
[0x8d0:0x8d3]
---
Predecessors: [0x879]
Successors: []
---
0x8d0 PUSH1 0x0
0x8d2 DUP1
0x8d3 REVERT
---
0x8d0: V560 = 0x0
0x8d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207]

================================

Block 0x8d4
[0x8d4:0x927]
---
Predecessors: [0x879]
Successors: [0x928, 0x931]
---
0x8d4 JUMPDEST
0x8d5 CALLER
0x8d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8eb AND
0x8ec PUSH2 0x8fc
0x8ef ADDRESS
0x8f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x905 AND
0x906 BALANCE
0x907 SWAP1
0x908 DUP2
0x909 ISZERO
0x90a MUL
0x90b SWAP1
0x90c PUSH1 0x40
0x90e MLOAD
0x90f PUSH1 0x0
0x911 PUSH1 0x40
0x913 MLOAD
0x914 DUP1
0x915 DUP4
0x916 SUB
0x917 DUP2
0x918 DUP6
0x919 DUP9
0x91a DUP9
0x91b CALL
0x91c SWAP4
0x91d POP
0x91e POP
0x91f POP
0x920 POP
0x921 ISZERO
0x922 DUP1
0x923 ISZERO
0x924 PUSH2 0x931
0x927 JUMPI
---
0x8d4: JUMPDEST 
0x8d5: V561 = CALLER
0x8d6: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x8ec: V564 = 0x8fc
0x8ef: V565 = ADDRESS
0x8f0: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x905: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x906: V568 = BALANCE V567
0x909: V569 = ISZERO V568
0x90a: V570 = MUL V569 0x8fc
0x90c: V571 = 0x40
0x90e: V572 = M[0x40]
0x90f: V573 = 0x0
0x911: V574 = 0x40
0x913: V575 = M[0x40]
0x916: V576 = SUB V572 V575
0x91b: V577 = CALL V570 V563 V568 V575 V576 V575 0x0
0x921: V578 = ISZERO V577
0x923: V579 = ISZERO V578
0x924: V580 = 0x931
0x927: JUMPI 0x931 V579
---
Entry stack: [V11, 0x207]
Stack pops: 0
Stack additions: [V578]
Exit stack: [V11, 0x207, V578]

================================

Block 0x928
[0x928:0x930]
---
Predecessors: [0x8d4]
Successors: []
---
0x928 RETURNDATASIZE
0x929 PUSH1 0x0
0x92b DUP1
0x92c RETURNDATACOPY
0x92d RETURNDATASIZE
0x92e PUSH1 0x0
0x930 REVERT
---
0x928: V581 = RETURNDATASIZE
0x929: V582 = 0x0
0x92c: RETURNDATACOPY 0x0 0x0 V581
0x92d: V583 = RETURNDATASIZE
0x92e: V584 = 0x0
0x930: REVERT 0x0 V583
---
Entry stack: [V11, 0x207, V578]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x207, V578]

================================

Block 0x931
[0x931:0x933]
---
Predecessors: [0x8d4]
Successors: [0x207]
---
0x931 JUMPDEST
0x932 POP
0x933 JUMP
---
0x931: JUMPDEST 
0x933: JUMP 0x207
---
Entry stack: [V11, 0x207, V578]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x934
[0x934:0x993]
---
Predecessors: [0x215]
Successors: [0x994, 0x998]
---
0x934 JUMPDEST
0x935 PUSH1 0x0
0x937 DUP1
0x938 PUSH1 0x0
0x93a DUP1
0x93b PUSH1 0x0
0x93d DUP1
0x93e PUSH1 0x0
0x940 DUP1
0x941 SWAP1
0x942 SLOAD
0x943 SWAP1
0x944 PUSH2 0x100
0x947 EXP
0x948 SWAP1
0x949 DIV
0x94a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95f AND
0x960 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x975 AND
0x976 CALLER
0x977 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98c AND
0x98d EQ
0x98e ISZERO
0x98f ISZERO
0x990 PUSH2 0x998
0x993 JUMPI
---
0x934: JUMPDEST 
0x935: V585 = 0x0
0x938: V586 = 0x0
0x93b: V587 = 0x0
0x93e: V588 = 0x0
0x942: V589 = S[0x0]
0x944: V590 = 0x100
0x947: V591 = EXP 0x100 0x0
0x949: V592 = DIV V589 0x1
0x94a: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x95f: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x960: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x975: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x976: V597 = CALLER
0x977: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0x98c: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x98d: V600 = EQ V599 V596
0x98e: V601 = ISZERO V600
0x98f: V602 = ISZERO V601
0x990: V603 = 0x998
0x993: JUMPI 0x998 V602
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x994
[0x994:0x997]
---
Predecessors: [0x934]
Successors: []
---
0x994 PUSH1 0x0
0x996 DUP1
0x997 REVERT
---
0x994: V604 = 0x0
0x997: REVERT 0x0 0x0
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x998
[0x998:0x99c]
---
Predecessors: [0x934]
Successors: [0x99d]
---
0x998 JUMPDEST
0x999 PUSH1 0x0
0x99b SWAP5
0x99c POP
---
0x998: JUMPDEST 
0x999: V605 = 0x0
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x99d
[0x99d:0x9a6]
---
Predecessors: [0x998, 0xb1a]
Successors: [0x9a7, 0xb1f]
---
0x99d JUMPDEST
0x99e DUP11
0x99f MLOAD
0x9a0 DUP6
0x9a1 LT
0x9a2 ISZERO
0x9a3 PUSH2 0xb1f
0x9a6 JUMPI
---
0x99d: JUMPDEST 
0x99f: V606 = M[V151]
0x9a1: V607 = LT 0x0 V606
0x9a2: V608 = ISZERO V607
0x9a3: V609 = 0xb1f
0x9a6: JUMPI 0xb1f V608
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, S2, S1, S0]

================================

Block 0x9a7
[0x9a7:0x9b6]
---
Predecessors: [0x99d]
Successors: [0x9b7, 0x9b8]
---
0x9a7 PUSH1 0x0
0x9a9 SWAP4
0x9aa POP
0x9ab DUP11
0x9ac DUP6
0x9ad DUP2
0x9ae MLOAD
0x9af DUP2
0x9b0 LT
0x9b1 ISZERO
0x9b2 ISZERO
0x9b3 PUSH2 0x9b8
0x9b6 JUMPI
---
0x9a7: V610 = 0x0
0x9ae: V611 = M[V151]
0x9b0: V612 = LT 0x0 V611
0x9b1: V613 = ISZERO V612
0x9b2: V614 = ISZERO V613
0x9b3: V615 = 0x9b8
0x9b6: JUMPI 0x9b8 V614
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0, S10, S4]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, S2, S1, S0, V151, 0x0]

================================

Block 0x9b7
[0x9b7:0x9b7]
---
Predecessors: [0x9a7]
Successors: []
---
0x9b7 INVALID
---
0x9b7: INVALID 
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, S4, S3, S2, V151, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, S4, S3, S2, V151, 0x0]

================================

Block 0x9b8
[0x9b8:0x9d0]
---
Predecessors: [0x9a7]
Successors: [0x9d1, 0x9d2]
---
0x9b8 JUMPDEST
0x9b9 SWAP1
0x9ba PUSH1 0x20
0x9bc ADD
0x9bd SWAP1
0x9be PUSH1 0x20
0x9c0 MUL
0x9c1 ADD
0x9c2 MLOAD
0x9c3 SWAP3
0x9c4 POP
0x9c5 DUP10
0x9c6 DUP6
0x9c7 DUP2
0x9c8 MLOAD
0x9c9 DUP2
0x9ca LT
0x9cb ISZERO
0x9cc ISZERO
0x9cd PUSH2 0x9d2
0x9d0 JUMPI
---
0x9b8: JUMPDEST 
0x9ba: V616 = 0x20
0x9bc: V617 = ADD 0x20 V151
0x9be: V618 = 0x20
0x9c0: V619 = MUL 0x20 0x0
0x9c1: V620 = ADD 0x0 V617
0x9c2: V621 = M[V620]
0x9c8: V622 = M[V171]
0x9ca: V623 = LT 0x0 V622
0x9cb: V624 = ISZERO V623
0x9cc: V625 = ISZERO V624
0x9cd: V626 = 0x9d2
0x9d0: JUMPI 0x9d2 V625
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, S4, S3, S2, V151, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, V621, S3, S2, S11, S6]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, S3, S2, V171, 0x0]

================================

Block 0x9d1
[0x9d1:0x9d1]
---
Predecessors: [0x9b8]
Successors: []
---
0x9d1 INVALID
---
0x9d1: INVALID 
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, S3, S2, V171, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, S3, S2, V171, 0x0]

================================

Block 0x9d2
[0x9d2:0x9ea]
---
Predecessors: [0x9b8]
Successors: [0x9eb, 0x9ec]
---
0x9d2 JUMPDEST
0x9d3 SWAP1
0x9d4 PUSH1 0x20
0x9d6 ADD
0x9d7 SWAP1
0x9d8 PUSH1 0x20
0x9da MUL
0x9db ADD
0x9dc MLOAD
0x9dd SWAP2
0x9de POP
0x9df DUP9
0x9e0 DUP6
0x9e1 DUP2
0x9e2 MLOAD
0x9e3 DUP2
0x9e4 LT
0x9e5 ISZERO
0x9e6 ISZERO
0x9e7 PUSH2 0x9ec
0x9ea JUMPI
---
0x9d2: JUMPDEST 
0x9d4: V627 = 0x20
0x9d6: V628 = ADD 0x20 V171
0x9d8: V629 = 0x20
0x9da: V630 = MUL 0x20 0x0
0x9db: V631 = ADD 0x0 V628
0x9dc: V632 = M[V631]
0x9e2: V633 = M[V191]
0x9e4: V634 = LT 0x0 V633
0x9e5: V635 = ISZERO V634
0x9e6: V636 = ISZERO V635
0x9e7: V637 = 0x9ec
0x9ea: JUMPI 0x9ec V636
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, S3, S2, V171, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, V632, S2, S10, S6]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, V632, S2, V191, 0x0]

================================

Block 0x9eb
[0x9eb:0x9eb]
---
Predecessors: [0x9d2]
Successors: []
---
0x9eb INVALID
---
0x9eb: INVALID 
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, V632, S2, V191, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, V632, S2, V191, 0x0]

================================

Block 0x9ec
[0x9ec:0x9f8]
---
Predecessors: [0x9d2]
Successors: [0x9f9]
---
0x9ec JUMPDEST
0x9ed SWAP1
0x9ee PUSH1 0x20
0x9f0 ADD
0x9f1 SWAP1
0x9f2 PUSH1 0x20
0x9f4 MUL
0x9f5 ADD
0x9f6 MLOAD
0x9f7 SWAP1
0x9f8 POP
---
0x9ec: JUMPDEST 
0x9ee: V638 = 0x20
0x9f0: V639 = ADD 0x20 V191
0x9f2: V640 = 0x20
0x9f4: V641 = MUL 0x20 0x0
0x9f5: V642 = ADD 0x0 V639
0x9f6: V643 = M[V642]
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, V632, S2, V191, 0x0]
Stack pops: 3
Stack additions: [V643]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, 0x0, V621, V632, V643]

================================

Block 0x9f9
[0x9f9:0xa02]
---
Predecessors: [0x9ec, 0xb0b]
Successors: [0xa03, 0xb1a]
---
0x9f9 JUMPDEST
0x9fa DUP8
0x9fb MLOAD
0x9fc DUP5
0x9fd LT
0x9fe ISZERO
0x9ff PUSH2 0xb1a
0xa02 JUMPI
---
0x9f9: JUMPDEST 
0x9fb: V644 = M[V211]
0x9fd: V645 = LT S3 V644
0x9fe: V646 = ISZERO V645
0x9ff: V647 = 0xb1a
0xa02: JUMPI 0xb1a V646
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, V621, V632, V643]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, V621, V632, V643]

================================

Block 0xa03
[0xa03:0xa2a]
---
Predecessors: [0x9f9]
Successors: [0xa2b, 0xa2c]
---
0xa03 DUP3
0xa04 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa19 AND
0xa1a PUSH4 0xa9059cbb
0xa1f DUP10
0xa20 DUP7
0xa21 DUP2
0xa22 MLOAD
0xa23 DUP2
0xa24 LT
0xa25 ISZERO
0xa26 ISZERO
0xa27 PUSH2 0xa2c
0xa2a JUMPI
---
0xa04: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0xa19: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0xa1a: V650 = 0xa9059cbb
0xa22: V651 = M[V211]
0xa24: V652 = LT S3 V651
0xa25: V653 = ISZERO V652
0xa26: V654 = ISZERO V653
0xa27: V655 = 0xa2c
0xa2a: JUMPI 0xa2c V654
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, V621, V632, V643]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V649, 0xa9059cbb, S7, S3]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, V621, V632, V643, V649, 0xa9059cbb, V211, S3]

================================

Block 0xa2b
[0xa2b:0xa2b]
---
Predecessors: [0xa03]
Successors: []
---
0xa2b INVALID
---
0xa2b: INVALID 
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V211, S0]

================================

Block 0xa2c
[0xa2c:0xa49]
---
Predecessors: [0xa03]
Successors: [0xa4a, 0xa4b]
---
0xa2c JUMPDEST
0xa2d SWAP1
0xa2e PUSH1 0x20
0xa30 ADD
0xa31 SWAP1
0xa32 PUSH1 0x20
0xa34 MUL
0xa35 ADD
0xa36 MLOAD
0xa37 PUSH2 0xa72
0xa3a DUP5
0xa3b PUSH2 0xa64
0xa3e DUP13
0xa3f DUP11
0xa40 DUP2
0xa41 MLOAD
0xa42 DUP2
0xa43 LT
0xa44 ISZERO
0xa45 ISZERO
0xa46 PUSH2 0xa4b
0xa49 JUMPI
---
0xa2c: JUMPDEST 
0xa2e: V656 = 0x20
0xa30: V657 = ADD 0x20 V211
0xa32: V658 = 0x20
0xa34: V659 = MUL 0x20 S0
0xa35: V660 = ADD V659 V657
0xa36: V661 = M[V660]
0xa37: V662 = 0xa72
0xa3b: V663 = 0xa64
0xa41: V664 = M[V231]
0xa43: V665 = LT S7 V664
0xa44: V666 = ISZERO V665
0xa45: V667 = ISZERO V666
0xa46: V668 = 0xa4b
0xa49: JUMPI 0xa4b V667
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V211, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V661, 0xa72, S4, 0xa64, S10, S7]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V231, S7]

================================

Block 0xa4a
[0xa4a:0xa4a]
---
Predecessors: [0xa2c]
Successors: []
---
0xa4a INVALID
---
0xa4a: INVALID 
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S11, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S11, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V231, S0]

================================

Block 0xa4b
[0xa4b:0xa63]
---
Predecessors: [0xa2c]
Successors: [0xd95]
---
0xa4b JUMPDEST
0xa4c SWAP1
0xa4d PUSH1 0x20
0xa4f ADD
0xa50 SWAP1
0xa51 PUSH1 0x20
0xa53 MUL
0xa54 ADD
0xa55 MLOAD
0xa56 DUP9
0xa57 PUSH2 0xd95
0xa5a SWAP1
0xa5b SWAP2
0xa5c SWAP1
0xa5d PUSH4 0xffffffff
0xa62 AND
0xa63 JUMP
---
0xa4b: JUMPDEST 
0xa4d: V669 = 0x20
0xa4f: V670 = ADD 0x20 V231
0xa51: V671 = 0x20
0xa53: V672 = MUL 0x20 S0
0xa54: V673 = ADD V672 V670
0xa55: V674 = M[V673]
0xa57: V675 = 0xd95
0xa5d: V676 = 0xffffffff
0xa62: V677 = AND 0xffffffff 0xd95
0xa63: JUMP 0xd95
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S11, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V231, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S9, V674]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S11, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674]

================================

Block 0xa64
[0xa64:0xa71]
---
Predecessors: [0xdc0]
Successors: [0xdc6]
---
0xa64 JUMPDEST
0xa65 PUSH2 0xdc6
0xa68 SWAP1
0xa69 SWAP2
0xa6a SWAP1
0xa6b PUSH4 0xffffffff
0xa70 AND
0xa71 JUMP
---
0xa64: JUMPDEST 
0xa65: V678 = 0xdc6
0xa6b: V679 = 0xffffffff
0xa70: V680 = AND 0xffffffff 0xdc6
0xa71: JUMP 0xdc6
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S9, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, V852]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S9, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643]

================================

Block 0xa72
[0xa72:0xaf2]
---
Predecessors: [0xde1]
Successors: [0xaf3, 0xaf7]
---
0xa72 JUMPDEST
0xa73 PUSH1 0x40
0xa75 MLOAD
0xa76 DUP4
0xa77 PUSH4 0xffffffff
0xa7c AND
0xa7d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa9b MUL
0xa9c DUP2
0xa9d MSTORE
0xa9e PUSH1 0x4
0xaa0 ADD
0xaa1 DUP1
0xaa2 DUP4
0xaa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab8 AND
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf DUP2
0xad0 MSTORE
0xad1 PUSH1 0x20
0xad3 ADD
0xad4 DUP3
0xad5 DUP2
0xad6 MSTORE
0xad7 PUSH1 0x20
0xad9 ADD
0xada SWAP3
0xadb POP
0xadc POP
0xadd POP
0xade PUSH1 0x0
0xae0 PUSH1 0x40
0xae2 MLOAD
0xae3 DUP1
0xae4 DUP4
0xae5 SUB
0xae6 DUP2
0xae7 PUSH1 0x0
0xae9 DUP8
0xaea DUP1
0xaeb EXTCODESIZE
0xaec ISZERO
0xaed DUP1
0xaee ISZERO
0xaef PUSH2 0xaf7
0xaf2 JUMPI
---
0xa72: JUMPDEST 
0xa73: V681 = 0x40
0xa75: V682 = M[0x40]
0xa77: V683 = 0xffffffff
0xa7c: V684 = AND 0xffffffff 0xa9059cbb
0xa7d: V685 = 0x100000000000000000000000000000000000000000000000000000000
0xa9b: V686 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xa9d: M[V682] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa9e: V687 = 0x4
0xaa0: V688 = ADD 0x4 V682
0xaa3: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0xab8: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0xab9: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0xad0: M[V688] = V692
0xad1: V693 = 0x20
0xad3: V694 = ADD 0x20 V688
0xad6: M[V694] = V874
0xad7: V695 = 0x20
0xad9: V696 = ADD 0x20 V694
0xade: V697 = 0x0
0xae0: V698 = 0x40
0xae2: V699 = M[0x40]
0xae5: V700 = SUB V696 V699
0xae7: V701 = 0x0
0xaeb: V702 = EXTCODESIZE V649
0xaec: V703 = ISZERO V702
0xaee: V704 = ISZERO V703
0xaef: V705 = 0xaf7
0xaf2: JUMPI 0xaf7 V704
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V661, V874]
Stack pops: 4
Stack additions: [S3, S2, V696, 0x0, V699, V700, V699, 0x0, S3, V703]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V696, 0x0, V699, V700, V699, 0x0, V649, V703]

================================

Block 0xaf3
[0xaf3:0xaf6]
---
Predecessors: [0xa72]
Successors: []
---
0xaf3 PUSH1 0x0
0xaf5 DUP1
0xaf6 REVERT
---
0xaf3: V706 = 0x0
0xaf6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V696, 0x0, V699, V700, V699, 0x0, V649, V703]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V696, 0x0, V699, V700, V699, 0x0, V649, V703]

================================

Block 0xaf7
[0xaf7:0xb01]
---
Predecessors: [0xa72]
Successors: [0xb02, 0xb0b]
---
0xaf7 JUMPDEST
0xaf8 POP
0xaf9 GAS
0xafa CALL
0xafb ISZERO
0xafc DUP1
0xafd ISZERO
0xafe PUSH2 0xb0b
0xb01 JUMPI
---
0xaf7: JUMPDEST 
0xaf9: V707 = GAS
0xafa: V708 = CALL V707 V649 0x0 V699 V700 V699 0x0
0xafb: V709 = ISZERO V708
0xafd: V710 = ISZERO V709
0xafe: V711 = 0xb0b
0xb01: JUMPI 0xb0b V710
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V696, 0x0, V699, V700, V699, 0x0, V649, V703]
Stack pops: 7
Stack additions: [V709]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V696, V709]

================================

Block 0xb02
[0xb02:0xb0a]
---
Predecessors: [0xaf7]
Successors: []
---
0xb02 RETURNDATASIZE
0xb03 PUSH1 0x0
0xb05 DUP1
0xb06 RETURNDATACOPY
0xb07 RETURNDATASIZE
0xb08 PUSH1 0x0
0xb0a REVERT
---
0xb02: V712 = RETURNDATASIZE
0xb03: V713 = 0x0
0xb06: RETURNDATACOPY 0x0 0x0 V712
0xb07: V714 = RETURNDATASIZE
0xb08: V715 = 0x0
0xb0a: REVERT 0x0 V714
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V696, V709]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V696, V709]

================================

Block 0xb0b
[0xb0b:0xb19]
---
Predecessors: [0xaf7]
Successors: [0x9f9]
---
0xb0b JUMPDEST
0xb0c POP
0xb0d POP
0xb0e POP
0xb0f POP
0xb10 PUSH1 0x1
0xb12 DUP5
0xb13 ADD
0xb14 SWAP4
0xb15 POP
0xb16 PUSH2 0x9f9
0xb19 JUMP
---
0xb0b: JUMPDEST 
0xb10: V716 = 0x1
0xb13: V717 = ADD S7 0x1
0xb16: V718 = 0x9f9
0xb19: JUMP 0x9f9
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S7, V621, V632, V643, V649, 0xa9059cbb, V696, V709]
Stack pops: 8
Stack additions: [V717, S6, S5, S4]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, V717, V621, V632, V643]

================================

Block 0xb1a
[0xb1a:0xb1e]
---
Predecessors: [0x9f9]
Successors: [0x99d]
---
0xb1a JUMPDEST
0xb1b PUSH2 0x99d
0xb1e JUMP
---
0xb1a: JUMPDEST 
0xb1b: V719 = 0x99d
0xb1e: JUMP 0x99d
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, V621, V632, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, V621, V632, V643]

================================

Block 0xb1f
[0xb1f:0xb2f]
---
Predecessors: [0x99d]
Successors: [0x379]
---
0xb1f JUMPDEST
0xb20 DUP5
0xb21 SWAP6
0xb22 POP
0xb23 POP
0xb24 POP
0xb25 POP
0xb26 POP
0xb27 POP
0xb28 SWAP6
0xb29 SWAP5
0xb2a POP
0xb2b POP
0xb2c POP
0xb2d POP
0xb2e POP
0xb2f JUMP
---
0xb1f: JUMPDEST 
0xb2f: JUMP 0x379
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S4]
Exit stack: [V11, 0x0]

================================

Block 0xb30
[0xb30:0xb54]
---
Predecessors: [0x39b]
Successors: [0x3a4]
---
0xb30 JUMPDEST
0xb31 PUSH1 0x0
0xb33 DUP1
0xb34 SWAP1
0xb35 SLOAD
0xb36 SWAP1
0xb37 PUSH2 0x100
0xb3a EXP
0xb3b SWAP1
0xb3c DIV
0xb3d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb52 AND
0xb53 DUP2
0xb54 JUMP
---
0xb30: JUMPDEST 
0xb31: V720 = 0x0
0xb35: V721 = S[0x0]
0xb37: V722 = 0x100
0xb3a: V723 = EXP 0x100 0x0
0xb3c: V724 = DIV V721 0x1
0xb3d: V725 = 0xffffffffffffffffffffffffffffffffffffffff
0xb52: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0xb54: JUMP 0x3a4
---
Entry stack: [V11, 0x3a4]
Stack pops: 1
Stack additions: [S0, V726]
Exit stack: [V11, 0x3a4, V726]

================================

Block 0xb55
[0xb55:0xbae]
---
Predecessors: [0x3f2]
Successors: [0xbaf, 0xbb3]
---
0xb55 JUMPDEST
0xb56 PUSH1 0x0
0xb58 DUP1
0xb59 PUSH1 0x0
0xb5b DUP1
0xb5c SWAP1
0xb5d SLOAD
0xb5e SWAP1
0xb5f PUSH2 0x100
0xb62 EXP
0xb63 SWAP1
0xb64 DIV
0xb65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7a AND
0xb7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb90 AND
0xb91 CALLER
0xb92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba7 AND
0xba8 EQ
0xba9 ISZERO
0xbaa ISZERO
0xbab PUSH2 0xbb3
0xbae JUMPI
---
0xb55: JUMPDEST 
0xb56: V727 = 0x0
0xb59: V728 = 0x0
0xb5d: V729 = S[0x0]
0xb5f: V730 = 0x100
0xb62: V731 = EXP 0x100 0x0
0xb64: V732 = DIV V729 0x1
0xb65: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7a: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0xb7b: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xb90: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0xb91: V737 = CALLER
0xb92: V738 = 0xffffffffffffffffffffffffffffffffffffffff
0xba7: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V737
0xba8: V740 = EQ V739 V736
0xba9: V741 = ISZERO V740
0xbaa: V742 = ISZERO V741
0xbab: V743 = 0xbb3
0xbae: JUMPI 0xbb3 V742
---
Entry stack: [V11, 0x4ad, V275, V290, V310]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, 0x0]

================================

Block 0xbaf
[0xbaf:0xbb2]
---
Predecessors: [0xb55]
Successors: []
---
0xbaf PUSH1 0x0
0xbb1 DUP1
0xbb2 REVERT
---
0xbaf: V744 = 0x0
0xbb2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, 0x0]

================================

Block 0xbb3
[0xbb3:0xbb7]
---
Predecessors: [0xb55]
Successors: [0xbb8]
---
0xbb3 JUMPDEST
0xbb4 PUSH1 0x0
0xbb6 SWAP1
0xbb7 POP
---
0xbb3: JUMPDEST 
0xbb4: V745 = 0x0
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, 0x0]

================================

Block 0xbb8
[0xbb8:0xbc1]
---
Predecessors: [0xbb3, 0xca6]
Successors: [0xbc2, 0xcb5]
---
0xbb8 JUMPDEST
0xbb9 DUP4
0xbba MLOAD
0xbbb DUP2
0xbbc LT
0xbbd ISZERO
0xbbe PUSH2 0xcb5
0xbc1 JUMPI
---
0xbb8: JUMPDEST 
0xbba: V746 = M[V290]
0xbbc: V747 = LT S0 V746
0xbbd: V748 = ISZERO V747
0xbbe: V749 = 0xcb5
0xbc1: JUMPI 0xcb5 V748
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S0]

================================

Block 0xbc2
[0xbc2:0xbe9]
---
Predecessors: [0xbb8]
Successors: [0xbea, 0xbeb]
---
0xbc2 DUP5
0xbc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd8 AND
0xbd9 PUSH4 0xa9059cbb
0xbde DUP6
0xbdf DUP4
0xbe0 DUP2
0xbe1 MLOAD
0xbe2 DUP2
0xbe3 LT
0xbe4 ISZERO
0xbe5 ISZERO
0xbe6 PUSH2 0xbeb
0xbe9 JUMPI
---
0xbc3: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd8: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0xbd9: V752 = 0xa9059cbb
0xbe1: V753 = M[V290]
0xbe3: V754 = LT S0 V753
0xbe4: V755 = ISZERO V754
0xbe5: V756 = ISZERO V755
0xbe6: V757 = 0xbeb
0xbe9: JUMPI 0xbeb V756
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V751, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S0, V751, 0xa9059cbb, V290, S0]

================================

Block 0xbea
[0xbea:0xbea]
---
Predecessors: [0xbc2]
Successors: []
---
0xbea INVALID
---
0xbea: INVALID 
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S4, V751, 0xa9059cbb, V290, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S4, V751, 0xa9059cbb, V290, S0]

================================

Block 0xbeb
[0xbeb:0xc01]
---
Predecessors: [0xbc2]
Successors: [0xc02, 0xc03]
---
0xbeb JUMPDEST
0xbec SWAP1
0xbed PUSH1 0x20
0xbef ADD
0xbf0 SWAP1
0xbf1 PUSH1 0x20
0xbf3 MUL
0xbf4 ADD
0xbf5 MLOAD
0xbf6 DUP6
0xbf7 DUP5
0xbf8 DUP2
0xbf9 MLOAD
0xbfa DUP2
0xbfb LT
0xbfc ISZERO
0xbfd ISZERO
0xbfe PUSH2 0xc03
0xc01 JUMPI
---
0xbeb: JUMPDEST 
0xbed: V758 = 0x20
0xbef: V759 = ADD 0x20 V290
0xbf1: V760 = 0x20
0xbf3: V761 = MUL 0x20 S0
0xbf4: V762 = ADD V761 V759
0xbf5: V763 = M[V762]
0xbf9: V764 = M[V310]
0xbfb: V765 = LT S4 V764
0xbfc: V766 = ISZERO V765
0xbfd: V767 = ISZERO V766
0xbfe: V768 = 0xc03
0xc01: JUMPI 0xc03 V767
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S4, V751, 0xa9059cbb, V290, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V763, S6, S4]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S4, V751, 0xa9059cbb, V763, V310, S4]

================================

Block 0xc02
[0xc02:0xc02]
---
Predecessors: [0xbeb]
Successors: []
---
0xc02 INVALID
---
0xc02: INVALID 
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S5, V751, 0xa9059cbb, V763, V310, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S5, V751, 0xa9059cbb, V763, V310, S0]

================================

Block 0xc03
[0xc03:0xc8d]
---
Predecessors: [0xbeb]
Successors: [0xc8e, 0xc92]
---
0xc03 JUMPDEST
0xc04 SWAP1
0xc05 PUSH1 0x20
0xc07 ADD
0xc08 SWAP1
0xc09 PUSH1 0x20
0xc0b MUL
0xc0c ADD
0xc0d MLOAD
0xc0e PUSH1 0x40
0xc10 MLOAD
0xc11 DUP4
0xc12 PUSH4 0xffffffff
0xc17 AND
0xc18 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc36 MUL
0xc37 DUP2
0xc38 MSTORE
0xc39 PUSH1 0x4
0xc3b ADD
0xc3c DUP1
0xc3d DUP4
0xc3e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc53 AND
0xc54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc69 AND
0xc6a DUP2
0xc6b MSTORE
0xc6c PUSH1 0x20
0xc6e ADD
0xc6f DUP3
0xc70 DUP2
0xc71 MSTORE
0xc72 PUSH1 0x20
0xc74 ADD
0xc75 SWAP3
0xc76 POP
0xc77 POP
0xc78 POP
0xc79 PUSH1 0x0
0xc7b PUSH1 0x40
0xc7d MLOAD
0xc7e DUP1
0xc7f DUP4
0xc80 SUB
0xc81 DUP2
0xc82 PUSH1 0x0
0xc84 DUP8
0xc85 DUP1
0xc86 EXTCODESIZE
0xc87 ISZERO
0xc88 DUP1
0xc89 ISZERO
0xc8a PUSH2 0xc92
0xc8d JUMPI
---
0xc03: JUMPDEST 
0xc05: V769 = 0x20
0xc07: V770 = ADD 0x20 V310
0xc09: V771 = 0x20
0xc0b: V772 = MUL 0x20 S0
0xc0c: V773 = ADD V772 V770
0xc0d: V774 = M[V773]
0xc0e: V775 = 0x40
0xc10: V776 = M[0x40]
0xc12: V777 = 0xffffffff
0xc17: V778 = AND 0xffffffff 0xa9059cbb
0xc18: V779 = 0x100000000000000000000000000000000000000000000000000000000
0xc36: V780 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc38: M[V776] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc39: V781 = 0x4
0xc3b: V782 = ADD 0x4 V776
0xc3e: V783 = 0xffffffffffffffffffffffffffffffffffffffff
0xc53: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0xc54: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xc69: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xc6b: M[V782] = V786
0xc6c: V787 = 0x20
0xc6e: V788 = ADD 0x20 V782
0xc71: M[V788] = V774
0xc72: V789 = 0x20
0xc74: V790 = ADD 0x20 V788
0xc79: V791 = 0x0
0xc7b: V792 = 0x40
0xc7d: V793 = M[0x40]
0xc80: V794 = SUB V790 V793
0xc82: V795 = 0x0
0xc86: V796 = EXTCODESIZE V751
0xc87: V797 = ISZERO V796
0xc89: V798 = ISZERO V797
0xc8a: V799 = 0xc92
0xc8d: JUMPI 0xc92 V798
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S5, V751, 0xa9059cbb, V763, V310, S0]
Stack pops: 5
Stack additions: [S4, S3, V790, 0x0, V793, V794, V793, 0x0, S4, V797]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S5, V751, 0xa9059cbb, V790, 0x0, V793, V794, V793, 0x0, V751, V797]

================================

Block 0xc8e
[0xc8e:0xc91]
---
Predecessors: [0xc03]
Successors: []
---
0xc8e PUSH1 0x0
0xc90 DUP1
0xc91 REVERT
---
0xc8e: V800 = 0x0
0xc91: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S10, V751, 0xa9059cbb, V790, 0x0, V793, V794, V793, 0x0, V751, V797]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S10, V751, 0xa9059cbb, V790, 0x0, V793, V794, V793, 0x0, V751, V797]

================================

Block 0xc92
[0xc92:0xc9c]
---
Predecessors: [0xc03]
Successors: [0xc9d, 0xca6]
---
0xc92 JUMPDEST
0xc93 POP
0xc94 GAS
0xc95 CALL
0xc96 ISZERO
0xc97 DUP1
0xc98 ISZERO
0xc99 PUSH2 0xca6
0xc9c JUMPI
---
0xc92: JUMPDEST 
0xc94: V801 = GAS
0xc95: V802 = CALL V801 V751 0x0 V793 V794 V793 0x0
0xc96: V803 = ISZERO V802
0xc98: V804 = ISZERO V803
0xc99: V805 = 0xca6
0xc9c: JUMPI 0xca6 V804
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S10, V751, 0xa9059cbb, V790, 0x0, V793, V794, V793, 0x0, V751, V797]
Stack pops: 7
Stack additions: [V803]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S10, V751, 0xa9059cbb, V790, V803]

================================

Block 0xc9d
[0xc9d:0xca5]
---
Predecessors: [0xc92]
Successors: []
---
0xc9d RETURNDATASIZE
0xc9e PUSH1 0x0
0xca0 DUP1
0xca1 RETURNDATACOPY
0xca2 RETURNDATASIZE
0xca3 PUSH1 0x0
0xca5 REVERT
---
0xc9d: V806 = RETURNDATASIZE
0xc9e: V807 = 0x0
0xca1: RETURNDATACOPY 0x0 0x0 V806
0xca2: V808 = RETURNDATASIZE
0xca3: V809 = 0x0
0xca5: REVERT 0x0 V808
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S4, V751, 0xa9059cbb, V790, V803]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, S4, V751, 0xa9059cbb, V790, V803]

================================

Block 0xca6
[0xca6:0xcb4]
---
Predecessors: [0xc92]
Successors: [0xbb8]
---
0xca6 JUMPDEST
0xca7 POP
0xca8 POP
0xca9 POP
0xcaa POP
0xcab PUSH1 0x1
0xcad DUP2
0xcae ADD
0xcaf SWAP1
0xcb0 POP
0xcb1 PUSH2 0xbb8
0xcb4 JUMP
---
0xca6: JUMPDEST 
0xcab: V810 = 0x1
0xcae: V811 = ADD S4 0x1
0xcb1: V812 = 0xbb8
0xcb4: JUMP 0xbb8
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S4, V751, 0xa9059cbb, V790, V803]
Stack pops: 5
Stack additions: [V811]
Exit stack: [V11, 0x4ad, V275, V290, V310, 0x0, V811]

================================

Block 0xcb5
[0xcb5:0xcbf]
---
Predecessors: [0xbb8]
Successors: [0x4ad]
---
0xcb5 JUMPDEST
0xcb6 DUP1
0xcb7 SWAP2
0xcb8 POP
0xcb9 POP
0xcba SWAP4
0xcbb SWAP3
0xcbc POP
0xcbd POP
0xcbe POP
0xcbf JUMP
---
0xcb5: JUMPDEST 
0xcbf: JUMP 0x4ad
---
Entry stack: [V11, 0x4ad, V275, V290, V310, 0x0, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0xcc0
[0xcc0:0xd16]
---
Predecessors: [0x4cf]
Successors: [0xd17, 0xd1b]
---
0xcc0 JUMPDEST
0xcc1 PUSH1 0x0
0xcc3 DUP1
0xcc4 SWAP1
0xcc5 SLOAD
0xcc6 SWAP1
0xcc7 PUSH2 0x100
0xcca EXP
0xccb SWAP1
0xccc DIV
0xccd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce2 AND
0xce3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf8 AND
0xcf9 CALLER
0xcfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0f AND
0xd10 EQ
0xd11 ISZERO
0xd12 ISZERO
0xd13 PUSH2 0xd1b
0xd16 JUMPI
---
0xcc0: JUMPDEST 
0xcc1: V813 = 0x0
0xcc5: V814 = S[0x0]
0xcc7: V815 = 0x100
0xcca: V816 = EXP 0x100 0x0
0xccc: V817 = DIV V814 0x1
0xccd: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0xce2: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0xce3: V820 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf8: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff V819
0xcf9: V822 = CALLER
0xcfa: V823 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0f: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0xd10: V825 = EQ V824 V821
0xd11: V826 = ISZERO V825
0xd12: V827 = ISZERO V826
0xd13: V828 = 0xd1b
0xd16: JUMPI 0xd1b V827
---
Entry stack: [V11, 0x504, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x504, V337]

================================

Block 0xd17
[0xd17:0xd1a]
---
Predecessors: [0xcc0]
Successors: []
---
0xd17 PUSH1 0x0
0xd19 DUP1
0xd1a REVERT
---
0xd17: V829 = 0x0
0xd1a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x504, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x504, V337]

================================

Block 0xd1b
[0xd1b:0xd51]
---
Predecessors: [0xcc0]
Successors: [0xd52, 0xd92]
---
0xd1b JUMPDEST
0xd1c PUSH1 0x0
0xd1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd33 AND
0xd34 DUP2
0xd35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4a AND
0xd4b EQ
0xd4c ISZERO
0xd4d ISZERO
0xd4e PUSH2 0xd92
0xd51 JUMPI
---
0xd1b: JUMPDEST 
0xd1c: V830 = 0x0
0xd1e: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xd33: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xd35: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4a: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0xd4b: V835 = EQ V834 0x0
0xd4c: V836 = ISZERO V835
0xd4d: V837 = ISZERO V836
0xd4e: V838 = 0xd92
0xd51: JUMPI 0xd92 V837
---
Entry stack: [V11, 0x504, V337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x504, V337]

================================

Block 0xd52
[0xd52:0xd91]
---
Predecessors: [0xd1b]
Successors: [0xd92]
---
0xd52 DUP1
0xd53 PUSH1 0x0
0xd55 DUP1
0xd56 PUSH2 0x100
0xd59 EXP
0xd5a DUP2
0xd5b SLOAD
0xd5c DUP2
0xd5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd72 MUL
0xd73 NOT
0xd74 AND
0xd75 SWAP1
0xd76 DUP4
0xd77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8c AND
0xd8d MUL
0xd8e OR
0xd8f SWAP1
0xd90 SSTORE
0xd91 POP
---
0xd53: V839 = 0x0
0xd56: V840 = 0x100
0xd59: V841 = EXP 0x100 0x0
0xd5b: V842 = S[0x0]
0xd5d: V843 = 0xffffffffffffffffffffffffffffffffffffffff
0xd72: V844 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xd73: V845 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd74: V846 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V842
0xd77: V847 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8c: V848 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0xd8d: V849 = MUL V848 0x1
0xd8e: V850 = OR V849 V846
0xd90: S[0x0] = V850
---
Entry stack: [V11, 0x504, V337]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x504, V337]

================================

Block 0xd92
[0xd92:0xd94]
---
Predecessors: [0xd1b, 0xd52]
Successors: [0x504]
---
0xd92 JUMPDEST
0xd93 POP
0xd94 JUMP
---
0xd92: JUMPDEST 
0xd94: JUMP 0x504
---
Entry stack: [V11, 0x504, V337]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xd95
[0xd95:0xda5]
---
Predecessors: [0xa4b]
Successors: [0xda6, 0xdb5]
---
0xd95 JUMPDEST
0xd96 PUSH1 0x0
0xd98 DUP2
0xd99 DUP4
0xd9a MUL
0xd9b SWAP1
0xd9c POP
0xd9d PUSH1 0x0
0xd9f DUP4
0xda0 EQ
0xda1 DUP1
0xda2 PUSH2 0xdb5
0xda5 JUMPI
---
0xd95: JUMPDEST 
0xd96: V851 = 0x0
0xd9a: V852 = MUL V632 V674
0xd9d: V853 = 0x0
0xda0: V854 = EQ V632 0x0
0xda2: V855 = 0xdb5
0xda5: JUMPI 0xdb5 V854
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S11, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674]
Stack pops: 2
Stack additions: [S1, S0, V852, V854]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S11, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, V854]

================================

Block 0xda6
[0xda6:0xdb0]
---
Predecessors: [0xd95]
Successors: [0xdb1, 0xdb2]
---
0xda6 POP
0xda7 DUP2
0xda8 DUP4
0xda9 DUP3
0xdaa DUP2
0xdab ISZERO
0xdac ISZERO
0xdad PUSH2 0xdb2
0xdb0 JUMPI
---
0xdab: V856 = ISZERO V632
0xdac: V857 = ISZERO V856
0xdad: V858 = 0xdb2
0xdb0: JUMPI 0xdb2 V857
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, V854]
Stack pops: 4
Stack additions: [S3, S2, S1, S2, S3, S1]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, V674, V632, V852]

================================

Block 0xdb1
[0xdb1:0xdb1]
---
Predecessors: [0xda6]
Successors: []
---
0xdb1 INVALID
---
0xdb1: INVALID 
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S15, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, V674, V632, V852]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S15, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, V674, V632, V852]

================================

Block 0xdb2
[0xdb2:0xdb4]
---
Predecessors: [0xda6]
Successors: [0xdb5]
---
0xdb2 JUMPDEST
0xdb3 DIV
0xdb4 EQ
---
0xdb2: JUMPDEST 
0xdb3: V859 = DIV V852 V632
0xdb4: V860 = EQ V859 V674
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S15, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, V674, V632, V852]
Stack pops: 3
Stack additions: [V860]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S15, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, V860]

================================

Block 0xdb5
[0xdb5:0xdbb]
---
Predecessors: [0xd95, 0xdb2]
Successors: [0xdbc, 0xdc0]
---
0xdb5 JUMPDEST
0xdb6 ISZERO
0xdb7 ISZERO
0xdb8 PUSH2 0xdc0
0xdbb JUMPI
---
0xdb5: JUMPDEST 
0xdb6: V861 = ISZERO S0
0xdb7: V862 = ISZERO V861
0xdb8: V863 = 0xdc0
0xdbb: JUMPI 0xdc0 V862
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S13, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852]

================================

Block 0xdbc
[0xdbc:0xdbf]
---
Predecessors: [0xdb5]
Successors: []
---
0xdbc PUSH1 0x0
0xdbe DUP1
0xdbf REVERT
---
0xdbc: V864 = 0x0
0xdbf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852]

================================

Block 0xdc0
[0xdc0:0xdc5]
---
Predecessors: [0xdb5]
Successors: [0xa64]
---
0xdc0 JUMPDEST
0xdc1 SWAP3
0xdc2 SWAP2
0xdc3 POP
0xdc4 POP
0xdc5 JUMP
---
0xdc0: JUMPDEST 
0xdc5: JUMP 0xa64
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, 0xa64, V632, V674, V852]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V643, V852]

================================

Block 0xdc6
[0xdc6:0xdd1]
---
Predecessors: [0xa64]
Successors: [0xdd2, 0xdd6]
---
0xdc6 JUMPDEST
0xdc7 PUSH1 0x0
0xdc9 DUP1
0xdca DUP3
0xdcb GT
0xdcc ISZERO
0xdcd ISZERO
0xdce PUSH2 0xdd6
0xdd1 JUMPI
---
0xdc6: JUMPDEST 
0xdc7: V865 = 0x0
0xdcb: V866 = GT V643 0x0
0xdcc: V867 = ISZERO V866
0xdcd: V868 = ISZERO V867
0xdce: V869 = 0xdd6
0xdd1: JUMPI 0xdd6 V868
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S9, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S9, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0]

================================

Block 0xdd2
[0xdd2:0xdd5]
---
Predecessors: [0xdc6]
Successors: []
---
0xdd2 PUSH1 0x0
0xdd4 DUP1
0xdd5 REVERT
---
0xdd2: V870 = 0x0
0xdd5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S10, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S10, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0]

================================

Block 0xdd6
[0xdd6:0xddf]
---
Predecessors: [0xdc6]
Successors: [0xde0, 0xde1]
---
0xdd6 JUMPDEST
0xdd7 DUP2
0xdd8 DUP4
0xdd9 DUP2
0xdda ISZERO
0xddb ISZERO
0xddc PUSH2 0xde1
0xddf JUMPI
---
0xdd6: JUMPDEST 
0xdda: V871 = ISZERO V643
0xddb: V872 = ISZERO V871
0xddc: V873 = 0xde1
0xddf: JUMPI 0xde1 V872
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S10, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S1, S2]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S10, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0, V643, V852]

================================

Block 0xde0
[0xde0:0xde0]
---
Predecessors: [0xdd6]
Successors: []
---
0xde0 INVALID
---
0xde0: INVALID 
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0, V643, V852]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0, V643, V852]

================================

Block 0xde1
[0xde1:0xde9]
---
Predecessors: [0xdd6]
Successors: [0xa72]
---
0xde1 JUMPDEST
0xde2 DIV
0xde3 SWAP1
0xde4 POP
0xde5 SWAP3
0xde6 SWAP2
0xde7 POP
0xde8 POP
0xde9 JUMP
---
0xde1: JUMPDEST 
0xde2: V874 = DIV V852 V643
0xde9: JUMP 0xa72
---
Entry stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, 0xa72, V852, V643, 0x0, V643, V852]
Stack pops: 6
Stack additions: [V874]
Exit stack: [V11, 0x379, V151, V171, V191, V211, V231, 0x0, 0x0, S12, V621, V632, V643, V649, 0xa9059cbb, V661, V874]

================================

Block 0xdea
[0xdea:0xe22]
---
Predecessors: []
Successors: [0xe23]
---
0xdea STOP
0xdeb LOG1
0xdec PUSH6 0x627a7a723058
0xdf3 SHA3
0xdf4 SLT
0xdf5 BLOCKHASH
0xdf6 SWAP10
0xdf7 DUP4
0xdf8 PUSH25 0xdd4f6686482bc7a964eae13bda02c294397b0aa151ff27101b
0xe12 MISSING 0xb2
0xe13 RETURN
0xe14 STOP
0xe15 MISSING 0x29
0xe16 PUSH1 0x80
0xe18 PUSH1 0x40
0xe1a MSTORE
0xe1b PUSH1 0x4
0xe1d CALLDATASIZE
0xe1e LT
0xe1f PUSH2 0x4c
0xe22 JUMPI
---
0xdea: STOP 
0xdeb: LOG S0 S1 S2
0xdec: V875 = 0x627a7a723058
0xdf3: V876 = SHA3 0x627a7a723058 S3
0xdf4: V877 = SLT V876 S4
0xdf5: V878 = BLOCKHASH V877
0xdf8: V879 = 0xdd4f6686482bc7a964eae13bda02c294397b0aa151ff27101b
0xe12: MISSING 0xb2
0xe13: RETURN S0 S1
0xe14: STOP 
0xe15: MISSING 0x29
0xe16: V880 = 0x80
0xe18: V881 = 0x40
0xe1a: M[0x40] = 0x80
0xe1b: V882 = 0x4
0xe1d: V883 = CALLDATASIZE
0xe1e: V884 = LT V883 0x4
0xe1f: V885 = 0x4c
0xe22: THROWI V884
---
Entry stack: []
Stack pops: 0
Stack additions: [0xdd4f6686482bc7a964eae13bda02c294397b0aa151ff27101b, S7, S14, S5, S6, S7, S8, S9, S10, S11, S12, S13, V878]
Exit stack: []

================================

Block 0xe23
[0xe23:0xe56]
---
Predecessors: [0xdea]
Successors: [0xe57]
---
0xe23 PUSH1 0x0
0xe25 CALLDATALOAD
0xe26 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe44 SWAP1
0xe45 DIV
0xe46 PUSH4 0xffffffff
0xe4b AND
0xe4c DUP1
0xe4d PUSH4 0x8da5cb5b
0xe52 EQ
0xe53 PUSH2 0x51
0xe56 JUMPI
---
0xe23: V886 = 0x0
0xe25: V887 = CALLDATALOAD 0x0
0xe26: V888 = 0x100000000000000000000000000000000000000000000000000000000
0xe45: V889 = DIV V887 0x100000000000000000000000000000000000000000000000000000000
0xe46: V890 = 0xffffffff
0xe4b: V891 = AND 0xffffffff V889
0xe4d: V892 = 0x8da5cb5b
0xe52: V893 = EQ 0x8da5cb5b V891
0xe53: V894 = 0x51
0xe56: THROWI V893
---
Entry stack: []
Stack pops: 0
Stack additions: [V891]
Exit stack: [V891]

================================

Block 0xe57
[0xe57:0xe61]
---
Predecessors: [0xe23]
Successors: [0xe62]
---
0xe57 DUP1
0xe58 PUSH4 0xf2fde38b
0xe5d EQ
0xe5e PUSH2 0xa8
0xe61 JUMPI
---
0xe58: V895 = 0xf2fde38b
0xe5d: V896 = EQ 0xf2fde38b V891
0xe5e: V897 = 0xa8
0xe61: THROWI V896
---
Entry stack: [V891]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V891]

================================

Block 0xe62
[0xe62:0xe6e]
---
Predecessors: [0xe57]
Successors: [0xe6f]
---
0xe62 JUMPDEST
0xe63 PUSH1 0x0
0xe65 DUP1
0xe66 REVERT
0xe67 JUMPDEST
0xe68 CALLVALUE
0xe69 DUP1
0xe6a ISZERO
0xe6b PUSH2 0x5d
0xe6e JUMPI
---
0xe62: JUMPDEST 
0xe63: V898 = 0x0
0xe66: REVERT 0x0 0x0
0xe67: JUMPDEST 
0xe68: V899 = CALLVALUE
0xe6a: V900 = ISZERO V899
0xe6b: V901 = 0x5d
0xe6e: THROWI V900
---
Entry stack: [V891]
Stack pops: 0
Stack additions: [V899]
Exit stack: []

================================

Block 0xe6f
[0xe6f:0xec5]
---
Predecessors: [0xe62]
Successors: [0xec6]
---
0xe6f PUSH1 0x0
0xe71 DUP1
0xe72 REVERT
0xe73 JUMPDEST
0xe74 POP
0xe75 PUSH2 0x66
0xe78 PUSH2 0xeb
0xe7b JUMP
0xe7c JUMPDEST
0xe7d PUSH1 0x40
0xe7f MLOAD
0xe80 DUP1
0xe81 DUP3
0xe82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe97 AND
0xe98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xead AND
0xeae DUP2
0xeaf MSTORE
0xeb0 PUSH1 0x20
0xeb2 ADD
0xeb3 SWAP2
0xeb4 POP
0xeb5 POP
0xeb6 PUSH1 0x40
0xeb8 MLOAD
0xeb9 DUP1
0xeba SWAP2
0xebb SUB
0xebc SWAP1
0xebd RETURN
0xebe JUMPDEST
0xebf CALLVALUE
0xec0 DUP1
0xec1 ISZERO
0xec2 PUSH2 0xb4
0xec5 JUMPI
---
0xe6f: V902 = 0x0
0xe72: REVERT 0x0 0x0
0xe73: JUMPDEST 
0xe75: V903 = 0x66
0xe78: V904 = 0xeb
0xe7b: THROW 
0xe7c: JUMPDEST 
0xe7d: V905 = 0x40
0xe7f: V906 = M[0x40]
0xe82: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0xe97: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe98: V909 = 0xffffffffffffffffffffffffffffffffffffffff
0xead: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0xeaf: M[V906] = V910
0xeb0: V911 = 0x20
0xeb2: V912 = ADD 0x20 V906
0xeb6: V913 = 0x40
0xeb8: V914 = M[0x40]
0xebb: V915 = SUB V912 V914
0xebd: RETURN V914 V915
0xebe: JUMPDEST 
0xebf: V916 = CALLVALUE
0xec1: V917 = ISZERO V916
0xec2: V918 = 0xb4
0xec5: THROWI V917
---
Entry stack: [V899]
Stack pops: 0
Stack additions: [0x66, V916]
Exit stack: []

================================

Block 0xec6
[0xec6:0xf7c]
---
Predecessors: [0xe6f]
Successors: [0xf7d]
---
0xec6 PUSH1 0x0
0xec8 DUP1
0xec9 REVERT
0xeca JUMPDEST
0xecb POP
0xecc PUSH2 0xe9
0xecf PUSH1 0x4
0xed1 DUP1
0xed2 CALLDATASIZE
0xed3 SUB
0xed4 DUP2
0xed5 ADD
0xed6 SWAP1
0xed7 DUP1
0xed8 DUP1
0xed9 CALLDATALOAD
0xeda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeef AND
0xef0 SWAP1
0xef1 PUSH1 0x20
0xef3 ADD
0xef4 SWAP1
0xef5 SWAP3
0xef6 SWAP2
0xef7 SWAP1
0xef8 POP
0xef9 POP
0xefa POP
0xefb PUSH2 0x110
0xefe JUMP
0xeff JUMPDEST
0xf00 STOP
0xf01 JUMPDEST
0xf02 PUSH1 0x0
0xf04 DUP1
0xf05 SWAP1
0xf06 SLOAD
0xf07 SWAP1
0xf08 PUSH2 0x100
0xf0b EXP
0xf0c SWAP1
0xf0d DIV
0xf0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf23 AND
0xf24 DUP2
0xf25 JUMP
0xf26 JUMPDEST
0xf27 PUSH1 0x0
0xf29 DUP1
0xf2a SWAP1
0xf2b SLOAD
0xf2c SWAP1
0xf2d PUSH2 0x100
0xf30 EXP
0xf31 SWAP1
0xf32 DIV
0xf33 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf48 AND
0xf49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5e AND
0xf5f CALLER
0xf60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf75 AND
0xf76 EQ
0xf77 ISZERO
0xf78 ISZERO
0xf79 PUSH2 0x16b
0xf7c JUMPI
---
0xec6: V919 = 0x0
0xec9: REVERT 0x0 0x0
0xeca: JUMPDEST 
0xecc: V920 = 0xe9
0xecf: V921 = 0x4
0xed2: V922 = CALLDATASIZE
0xed3: V923 = SUB V922 0x4
0xed5: V924 = ADD 0x4 V923
0xed9: V925 = CALLDATALOAD 0x4
0xeda: V926 = 0xffffffffffffffffffffffffffffffffffffffff
0xeef: V927 = AND 0xffffffffffffffffffffffffffffffffffffffff V925
0xef1: V928 = 0x20
0xef3: V929 = ADD 0x20 0x4
0xefb: V930 = 0x110
0xefe: THROW 
0xeff: JUMPDEST 
0xf00: STOP 
0xf01: JUMPDEST 
0xf02: V931 = 0x0
0xf06: V932 = S[0x0]
0xf08: V933 = 0x100
0xf0b: V934 = EXP 0x100 0x0
0xf0d: V935 = DIV V932 0x1
0xf0e: V936 = 0xffffffffffffffffffffffffffffffffffffffff
0xf23: V937 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0xf25: JUMP S0
0xf26: JUMPDEST 
0xf27: V938 = 0x0
0xf2b: V939 = S[0x0]
0xf2d: V940 = 0x100
0xf30: V941 = EXP 0x100 0x0
0xf32: V942 = DIV V939 0x1
0xf33: V943 = 0xffffffffffffffffffffffffffffffffffffffff
0xf48: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V942
0xf49: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5e: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V944
0xf5f: V947 = CALLER
0xf60: V948 = 0xffffffffffffffffffffffffffffffffffffffff
0xf75: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0xf76: V950 = EQ V949 V946
0xf77: V951 = ISZERO V950
0xf78: V952 = ISZERO V951
0xf79: V953 = 0x16b
0xf7c: THROWI V952
---
Entry stack: [V916]
Stack pops: 0
Stack additions: [V927, 0xe9, V937, S0]
Exit stack: []

================================

Block 0xf7d
[0xf7d:0xfb7]
---
Predecessors: [0xec6]
Successors: [0xfb8]
---
0xf7d PUSH1 0x0
0xf7f DUP1
0xf80 REVERT
0xf81 JUMPDEST
0xf82 PUSH1 0x0
0xf84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf99 AND
0xf9a DUP2
0xf9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb0 AND
0xfb1 EQ
0xfb2 ISZERO
0xfb3 ISZERO
0xfb4 PUSH2 0x1e2
0xfb7 JUMPI
---
0xf7d: V954 = 0x0
0xf80: REVERT 0x0 0x0
0xf81: JUMPDEST 
0xf82: V955 = 0x0
0xf84: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0xf99: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xf9b: V958 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb0: V959 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xfb1: V960 = EQ V959 0x0
0xfb2: V961 = ISZERO V960
0xfb3: V962 = ISZERO V961
0xfb4: V963 = 0x1e2
0xfb7: THROWI V962
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xfb8
[0xfb8:0xff7]
---
Predecessors: [0xf7d]
Successors: [0xff8]
---
0xfb8 DUP1
0xfb9 PUSH1 0x0
0xfbb DUP1
0xfbc PUSH2 0x100
0xfbf EXP
0xfc0 DUP2
0xfc1 SLOAD
0xfc2 DUP2
0xfc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd8 MUL
0xfd9 NOT
0xfda AND
0xfdb SWAP1
0xfdc DUP4
0xfdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff2 AND
0xff3 MUL
0xff4 OR
0xff5 SWAP1
0xff6 SSTORE
0xff7 POP
---
0xfb9: V964 = 0x0
0xfbc: V965 = 0x100
0xfbf: V966 = EXP 0x100 0x0
0xfc1: V967 = S[0x0]
0xfc3: V968 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd8: V969 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xfd9: V970 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfda: V971 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V967
0xfdd: V972 = 0xffffffffffffffffffffffffffffffffffffffff
0xff2: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xff3: V974 = MUL V973 0x1
0xff4: V975 = OR V974 V971
0xff6: S[0x0] = V975
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xff8
[0xff8:0x1079]
---
Predecessors: [0xfb8]
Successors: []
---
0xff8 JUMPDEST
0xff9 POP
0xffa JUMP
0xffb STOP
0xffc LOG1
0xffd PUSH6 0x627a7a723058
0x1004 SHA3
0x1005 MISSING 0x25
0x1006 SLT
0x1007 EXP
0x1008 MISSING 0xdf
0x1009 PUSH16 0xdc969551ee5e4be02a00880f0ffcd14a
0x101a PUSH5 0xb4c0d7ef16
0x1020 MISSING 0xbf
0x1021 MISSING 0xbf
0x1022 MISSING 0xf
0x1023 DUP7
0x1024 DUP14
0x1025 STOP
0x1026 MISSING 0x29
0x1027 PUSH20 0x0
0x103c ADDRESS
0x103d EQ
0x103e PUSH1 0x80
0x1040 PUSH1 0x40
0x1042 MSTORE
0x1043 PUSH1 0x0
0x1045 DUP1
0x1046 REVERT
0x1047 STOP
0x1048 LOG1
0x1049 PUSH6 0x627a7a723058
0x1050 SHA3
0x1051 PUSH12 0x6f7a86d177f9a3c9e4410e96
0x105e MISSING 0xf8
0x105f SUB
0x1060 MISSING 0x22
0x1061 LOG4
0x1062 PUSH23 0x23f9a1ae10a27da22b82d1ff067e0029
---
0xff8: JUMPDEST 
0xffa: JUMP S1
0xffb: STOP 
0xffc: LOG S0 S1 S2
0xffd: V976 = 0x627a7a723058
0x1004: V977 = SHA3 0x627a7a723058 S3
0x1005: MISSING 0x25
0x1006: V978 = SLT S0 S1
0x1007: V979 = EXP V978 S2
0x1008: MISSING 0xdf
0x1009: V980 = 0xdc969551ee5e4be02a00880f0ffcd14a
0x101a: V981 = 0xb4c0d7ef16
0x1020: MISSING 0xbf
0x1021: MISSING 0xbf
0x1022: MISSING 0xf
0x1025: STOP 
0x1026: MISSING 0x29
0x1027: V982 = 0x0
0x103c: V983 = ADDRESS
0x103d: V984 = EQ V983 0x0
0x103e: V985 = 0x80
0x1040: V986 = 0x40
0x1042: M[0x40] = 0x80
0x1043: V987 = 0x0
0x1046: REVERT 0x0 0x0
0x1047: STOP 
0x1048: LOG S0 S1 S2
0x1049: V988 = 0x627a7a723058
0x1050: V989 = SHA3 0x627a7a723058 S3
0x1051: V990 = 0x6f7a86d177f9a3c9e4410e96
0x105e: MISSING 0xf8
0x105f: V991 = SUB S0 S1
0x1060: MISSING 0x22
0x1061: LOG S0 S1 S2 S3 S4 S5
0x1062: V992 = 0x23f9a1ae10a27da22b82d1ff067e0029
---
Entry stack: [S0]
Stack pops: 13843
Stack additions: [0x23f9a1ae10a27da22b82d1ff067e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x779afe6
Entry block: 0x88
Exit block: 0xf3
Body: 0x88, 0x90, 0x94, 0xf3, 0x506, 0x55d, 0x561, 0x600, 0x604, 0x60f, 0x618

Function 1:
Public function signature: 0x1ca0076c
Entry block: 0xf5
Exit block: 0x855
Body: 0xf5, 0xfd, 0x101, 0x1dc, 0x621, 0x67b, 0x67f, 0x684, 0x68e, 0x6b6, 0x6b7, 0x6ce, 0x6cf, 0x75a, 0x75e, 0x769, 0x772, 0x79f, 0x7a0, 0x7b7, 0x7b8, 0x846, 0x84a, 0x855, 0x85e, 0x86d

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x1f2
Exit block: 0x207
Body: 0x1f2, 0x1fa, 0x1fe, 0x207, 0x879, 0x8d0, 0x8d4, 0x928, 0x931

Function 3:
Public function signature: 0x8071aa05
Entry block: 0x209
Exit block: 0xb02
Body: 0x209, 0x211, 0x215, 0x379, 0x934, 0x994, 0x998, 0x99d, 0x9a7, 0x9b7, 0x9b8, 0x9d1, 0x9d2, 0x9eb, 0x9ec, 0x9f9, 0xa03, 0xa2b, 0xa2c, 0xa4a, 0xa4b, 0xa64, 0xa72, 0xaf3, 0xaf7, 0xb02, 0xb0b, 0xb1a, 0xb1f, 0xd95, 0xda6, 0xdb1, 0xdb2, 0xdb5, 0xdbc, 0xdc0, 0xdc6, 0xdd2, 0xdd6, 0xde0, 0xde1

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x38f
Exit block: 0x3a4
Body: 0x38f, 0x397, 0x39b, 0x3a4, 0xb30

Function 5:
Public function signature: 0xad8733ca
Entry block: 0x3e6
Exit block: 0xc9d
Body: 0x3e6, 0x3ee, 0x3f2, 0x4ad, 0xb55, 0xbaf, 0xbb3, 0xbb8, 0xbc2, 0xbea, 0xbeb, 0xc02, 0xc03, 0xc8e, 0xc92, 0xc9d, 0xca6, 0xcb5

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x4c3
Exit block: 0x504
Body: 0x4c3, 0x4cb, 0x4cf, 0x504, 0xcc0, 0xd17, 0xd1b, 0xd52, 0xd92

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

