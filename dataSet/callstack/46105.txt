Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x66]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28 PUSH1 0x0
0x2a CALLDATALOAD
0x2b DIV
0x2c AND
0x2d PUSH4 0x155897cc
0x32 DUP2
0x33 EQ
0x34 PUSH2 0x66
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0x100000000000000000000000000000000000000000000000000000000
0x28: V4 = 0x0
0x2a: V5 = CALLDATALOAD 0x0
0x2b: V6 = DIV V5 0x100000000000000000000000000000000000000000000000000000000
0x2c: V7 = AND V6 0xffffffff
0x2d: V8 = 0x155897cc
0x33: V9 = EQ V7 0x155897cc
0x34: V10 = 0x66
0x37: JUMPI 0x66 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x42]
---
Predecessors: [0x0]
Successors: [0x43, 0x84]
---
0x38 DUP1
0x39 PUSH4 0x1833b7c6
0x3e EQ
0x3f PUSH2 0x84
0x42 JUMPI
---
0x39: V11 = 0x1833b7c6
0x3e: V12 = EQ 0x1833b7c6 V7
0x3f: V13 = 0x84
0x42: JUMPI 0x84 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x43
[0x43:0x4d]
---
Predecessors: [0x38]
Successors: [0x4e, 0xa2]
---
0x43 DUP1
0x44 PUSH4 0x412a5a6d
0x49 EQ
0x4a PUSH2 0xa2
0x4d JUMPI
---
0x44: V14 = 0x412a5a6d
0x49: V15 = EQ 0x412a5a6d V7
0x4a: V16 = 0xa2
0x4d: JUMPI 0xa2 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4e
[0x4e:0x58]
---
Predecessors: [0x43]
Successors: [0x59, 0xb4]
---
0x4e DUP1
0x4f PUSH4 0x62c06767
0x54 EQ
0x55 PUSH2 0xb4
0x58 JUMPI
---
0x4f: V17 = 0x62c06767
0x54: V18 = EQ 0x62c06767 V7
0x55: V19 = 0xb4
0x58: JUMPI 0xb4 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x59
[0x59:0x63]
---
Predecessors: [0x4e]
Successors: [0x64, 0xdb]
---
0x59 DUP1
0x5a PUSH4 0xd554f8b4
0x5f EQ
0x60 PUSH2 0xdb
0x63 JUMPI
---
0x5a: V20 = 0xd554f8b4
0x5f: V21 = EQ 0xd554f8b4 V7
0x60: V22 = 0xdb
0x63: JUMPI 0xdb V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x64
[0x64:0x65]
---
Predecessors: [0x59]
Successors: []
---
0x64 JUMPDEST
0x65 INVALID
---
0x64: JUMPDEST 
0x65: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x66
[0x66:0x6c]
---
Predecessors: [0x0]
Successors: [0x6d, 0x6e]
---
0x66 JUMPDEST
0x67 CALLVALUE
0x68 ISZERO
0x69 PUSH2 0x6e
0x6c JUMPI
---
0x66: JUMPDEST 
0x67: V23 = CALLVALUE
0x68: V24 = ISZERO V23
0x69: V25 = 0x6e
0x6c: JUMPI 0x6e V24
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6d
[0x6d:0x6d]
---
Predecessors: [0x66]
Successors: []
---
0x6d INVALID
---
0x6d: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6e
[0x6e:0x81]
---
Predecessors: [0x66]
Successors: [0xf9]
---
0x6e JUMPDEST
0x6f PUSH2 0x82
0x72 PUSH1 0x1
0x74 PUSH1 0xa0
0x76 PUSH1 0x2
0x78 EXP
0x79 SUB
0x7a PUSH1 0x4
0x7c CALLDATALOAD
0x7d AND
0x7e PUSH2 0xf9
0x81 JUMP
---
0x6e: JUMPDEST 
0x6f: V26 = 0x82
0x72: V27 = 0x1
0x74: V28 = 0xa0
0x76: V29 = 0x2
0x78: V30 = EXP 0x2 0xa0
0x79: V31 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a: V32 = 0x4
0x7c: V33 = CALLDATALOAD 0x4
0x7d: V34 = AND V33 0xffffffffffffffffffffffffffffffffffffffff
0x7e: V35 = 0xf9
0x81: JUMP 0xf9
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x82, V34]
Exit stack: [V7, 0x82, V34]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x15a, 0x1a3, 0x23d, 0x37a, 0x3e1]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0x38]
Successors: [0x8b, 0x8c]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8c
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V36 = CALLVALUE
0x86: V37 = ISZERO V36
0x87: V38 = 0x8c
0x8a: JUMPI 0x8c V37
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x84]
Successors: []
---
0x8b INVALID
---
0x8b: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8c
[0x8c:0x9f]
---
Predecessors: [0x84]
Successors: [0x15d]
---
0x8c JUMPDEST
0x8d PUSH2 0x82
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 PUSH1 0x4
0x9a CALLDATALOAD
0x9b AND
0x9c PUSH2 0x15d
0x9f JUMP
---
0x8c: JUMPDEST 
0x8d: V39 = 0x82
0x90: V40 = 0x1
0x92: V41 = 0xa0
0x94: V42 = 0x2
0x96: V43 = EXP 0x2 0xa0
0x97: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98: V45 = 0x4
0x9a: V46 = CALLDATALOAD 0x4
0x9b: V47 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V48 = 0x15d
0x9f: JUMP 0x15d
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x82, V47]
Exit stack: [V7, 0x82, V47]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: []
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa2
[0xa2:0xa8]
---
Predecessors: [0x43]
Successors: [0xa9, 0xaa]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 ISZERO
0xa5 PUSH2 0xaa
0xa8 JUMPI
---
0xa2: JUMPDEST 
0xa3: V49 = CALLVALUE
0xa4: V50 = ISZERO V49
0xa5: V51 = 0xaa
0xa8: JUMPI 0xaa V50
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xa9
[0xa9:0xa9]
---
Predecessors: [0xa2]
Successors: []
---
0xa9 INVALID
---
0xa9: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0xa2]
Successors: [0x1a6]
---
0xaa JUMPDEST
0xab PUSH2 0x82
0xae PUSH2 0x1a6
0xb1 JUMP
---
0xaa: JUMPDEST 
0xab: V52 = 0x82
0xae: V53 = 0x1a6
0xb1: JUMP 0x1a6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V7, 0x82]

================================

Block 0xb2
[0xb2:0xb3]
---
Predecessors: []
Successors: []
---
0xb2 JUMPDEST
0xb3 STOP
---
0xb2: JUMPDEST 
0xb3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb4
[0xb4:0xba]
---
Predecessors: [0x4e]
Successors: [0xbb, 0xbc]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 ISZERO
0xb7 PUSH2 0xbc
0xba JUMPI
---
0xb4: JUMPDEST 
0xb5: V54 = CALLVALUE
0xb6: V55 = ISZERO V54
0xb7: V56 = 0xbc
0xba: JUMPI 0xbc V55
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xbb
[0xbb:0xbb]
---
Predecessors: [0xb4]
Successors: []
---
0xbb INVALID
---
0xbb: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xbc
[0xbc:0xd8]
---
Predecessors: [0xb4]
Successors: [0x240]
---
0xbc JUMPDEST
0xbd PUSH2 0x82
0xc0 PUSH1 0x1
0xc2 PUSH1 0xa0
0xc4 PUSH1 0x2
0xc6 EXP
0xc7 SUB
0xc8 PUSH1 0x4
0xca CALLDATALOAD
0xcb DUP2
0xcc AND
0xcd SWAP1
0xce PUSH1 0x24
0xd0 CALLDATALOAD
0xd1 AND
0xd2 PUSH1 0x44
0xd4 CALLDATALOAD
0xd5 PUSH2 0x240
0xd8 JUMP
---
0xbc: JUMPDEST 
0xbd: V57 = 0x82
0xc0: V58 = 0x1
0xc2: V59 = 0xa0
0xc4: V60 = 0x2
0xc6: V61 = EXP 0x2 0xa0
0xc7: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8: V63 = 0x4
0xca: V64 = CALLDATALOAD 0x4
0xcc: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xce: V66 = 0x24
0xd0: V67 = CALLDATALOAD 0x24
0xd1: V68 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V69 = 0x44
0xd4: V70 = CALLDATALOAD 0x44
0xd5: V71 = 0x240
0xd8: JUMP 0x240
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x82, V65, V68, V70]
Exit stack: [V7, 0x82, V65, V68, V70]

================================

Block 0xd9
[0xd9:0xda]
---
Predecessors: []
Successors: []
---
0xd9 JUMPDEST
0xda STOP
---
0xd9: JUMPDEST 
0xda: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdb
[0xdb:0xe1]
---
Predecessors: [0x59]
Successors: [0xe2, 0xe3]
---
0xdb JUMPDEST
0xdc CALLVALUE
0xdd ISZERO
0xde PUSH2 0xe3
0xe1 JUMPI
---
0xdb: JUMPDEST 
0xdc: V72 = CALLVALUE
0xdd: V73 = ISZERO V72
0xde: V74 = 0xe3
0xe1: JUMPI 0xe3 V73
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe2
[0xe2:0xe2]
---
Predecessors: [0xdb]
Successors: []
---
0xe2 INVALID
---
0xe2: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe3
[0xe3:0xf6]
---
Predecessors: [0xdb]
Successors: [0x380]
---
0xe3 JUMPDEST
0xe4 PUSH2 0x82
0xe7 PUSH1 0x1
0xe9 PUSH1 0xa0
0xeb PUSH1 0x2
0xed EXP
0xee SUB
0xef PUSH1 0x4
0xf1 CALLDATALOAD
0xf2 AND
0xf3 PUSH2 0x380
0xf6 JUMP
---
0xe3: JUMPDEST 
0xe4: V75 = 0x82
0xe7: V76 = 0x1
0xe9: V77 = 0xa0
0xeb: V78 = 0x2
0xed: V79 = EXP 0x2 0xa0
0xee: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef: V81 = 0x4
0xf1: V82 = CALLDATALOAD 0x4
0xf2: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V84 = 0x380
0xf6: JUMP 0x380
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x82, V83]
Exit stack: [V7, 0x82, V83]

================================

Block 0xf7
[0xf7:0xf8]
---
Predecessors: []
Successors: []
---
0xf7 JUMPDEST
0xf8 STOP
---
0xf7: JUMPDEST 
0xf8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf9
[0xf9:0x110]
---
Predecessors: [0x6e]
Successors: [0x111, 0x124]
---
0xf9 JUMPDEST
0xfa PUSH1 0x0
0xfc SLOAD
0xfd CALLER
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 DUP2
0x108 AND
0x109 SWAP2
0x10a AND
0x10b EQ
0x10c DUP1
0x10d PUSH2 0x124
0x110 JUMPI
---
0xf9: JUMPDEST 
0xfa: V85 = 0x0
0xfc: V86 = S[0x0]
0xfd: V87 = CALLER
0xfe: V88 = 0x1
0x100: V89 = 0xa0
0x102: V90 = 0x2
0x104: V91 = EXP 0x2 0xa0
0x105: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x10a: V94 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V95 = EQ V94 V93
0x10d: V96 = 0x124
0x110: JUMPI 0x124 V95
---
Entry stack: [V7, 0x82, V34]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V7, 0x82, V34, V95]

================================

Block 0x111
[0x111:0x123]
---
Predecessors: [0xf9]
Successors: [0x124]
---
0x111 POP
0x112 PUSH1 0x1
0x114 SLOAD
0x115 CALLER
0x116 PUSH1 0x1
0x118 PUSH1 0xa0
0x11a PUSH1 0x2
0x11c EXP
0x11d SUB
0x11e SWAP1
0x11f DUP2
0x120 AND
0x121 SWAP2
0x122 AND
0x123 EQ
---
0x112: V97 = 0x1
0x114: V98 = S[0x1]
0x115: V99 = CALLER
0x116: V100 = 0x1
0x118: V101 = 0xa0
0x11a: V102 = 0x2
0x11c: V103 = EXP 0x2 0xa0
0x11d: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x120: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x122: V106 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x123: V107 = EQ V106 V105
---
Entry stack: [V7, 0x82, V34, V95]
Stack pops: 1
Stack additions: [V107]
Exit stack: [V7, 0x82, V34, V107]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0xf9, 0x111]
Successors: [0x12b, 0x130]
---
0x124 JUMPDEST
0x125 ISZERO
0x126 ISZERO
0x127 PUSH2 0x130
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V108 = ISZERO S0
0x126: V109 = ISZERO V108
0x127: V110 = 0x130
0x12a: JUMPI 0x130 V109
---
Entry stack: [V7, 0x82, V34, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x82, V34]

================================

Block 0x12b
[0x12b:0x12f]
---
Predecessors: [0x124]
Successors: []
---
0x12b PUSH1 0x0
0x12d PUSH1 0x0
0x12f REVERT
---
0x12b: V111 = 0x0
0x12d: V112 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V7, 0x82, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V34]

================================

Block 0x130
[0x130:0x158]
---
Predecessors: [0x124]
Successors: [0x159]
---
0x130 JUMPDEST
0x131 PUSH1 0x1
0x133 DUP1
0x134 SLOAD
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a NOT
0x14b AND
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 DUP4
0x155 AND
0x156 OR
0x157 SWAP1
0x158 SSTORE
---
0x130: JUMPDEST 
0x131: V113 = 0x1
0x134: V114 = S[0x1]
0x135: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V116 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V117 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V114
0x14c: V118 = 0x1
0x14e: V119 = 0xa0
0x150: V120 = 0x2
0x152: V121 = EXP 0x2 0xa0
0x153: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V123 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x156: V124 = OR V123 V117
0x158: S[0x1] = V124
---
Entry stack: [V7, 0x82, V34]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x82, V34]

================================

Block 0x159
[0x159:0x159]
---
Predecessors: [0x130]
Successors: [0x15a]
---
0x159 JUMPDEST
---
0x159: JUMPDEST 
---
Entry stack: [V7, 0x82, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V34]

================================

Block 0x15a
[0x15a:0x15c]
---
Predecessors: [0x159]
Successors: [0x82]
---
0x15a JUMPDEST
0x15b POP
0x15c JUMP
---
0x15a: JUMPDEST 
0x15c: JUMP 0x82
---
Entry stack: [V7, 0x82, V34]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x15d
[0x15d:0x173]
---
Predecessors: [0x8c]
Successors: [0x174, 0x179]
---
0x15d JUMPDEST
0x15e PUSH1 0x0
0x160 SLOAD
0x161 CALLER
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a SWAP1
0x16b DUP2
0x16c AND
0x16d SWAP2
0x16e AND
0x16f EQ
0x170 PUSH2 0x179
0x173 JUMPI
---
0x15d: JUMPDEST 
0x15e: V125 = 0x0
0x160: V126 = S[0x0]
0x161: V127 = CALLER
0x162: V128 = 0x1
0x164: V129 = 0xa0
0x166: V130 = 0x2
0x168: V131 = EXP 0x2 0xa0
0x169: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x16e: V134 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V135 = EQ V134 V133
0x170: V136 = 0x179
0x173: JUMPI 0x179 V135
---
Entry stack: [V7, 0x82, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V47]

================================

Block 0x174
[0x174:0x178]
---
Predecessors: [0x15d]
Successors: []
---
0x174 PUSH1 0x0
0x176 PUSH1 0x0
0x178 REVERT
---
0x174: V137 = 0x0
0x176: V138 = 0x0
0x178: REVERT 0x0 0x0
---
Entry stack: [V7, 0x82, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V47]

================================

Block 0x179
[0x179:0x1a1]
---
Predecessors: [0x15d]
Successors: [0x1a2]
---
0x179 JUMPDEST
0x17a PUSH1 0x0
0x17c DUP1
0x17d SLOAD
0x17e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x193 NOT
0x194 AND
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d DUP4
0x19e AND
0x19f OR
0x1a0 SWAP1
0x1a1 SSTORE
---
0x179: JUMPDEST 
0x17a: V139 = 0x0
0x17d: V140 = S[0x0]
0x17e: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x193: V142 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x194: V143 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V140
0x195: V144 = 0x1
0x197: V145 = 0xa0
0x199: V146 = 0x2
0x19b: V147 = EXP 0x2 0xa0
0x19c: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19e: V149 = AND V47 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V150 = OR V149 V143
0x1a1: S[0x0] = V150
---
Entry stack: [V7, 0x82, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x82, V47]

================================

Block 0x1a2
[0x1a2:0x1a2]
---
Predecessors: [0x179]
Successors: [0x1a3]
---
0x1a2 JUMPDEST
---
0x1a2: JUMPDEST 
---
Entry stack: [V7, 0x82, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V47]

================================

Block 0x1a3
[0x1a3:0x1a5]
---
Predecessors: [0x1a2]
Successors: [0x82]
---
0x1a3 JUMPDEST
0x1a4 POP
0x1a5 JUMP
---
0x1a3: JUMPDEST 
0x1a5: JUMP 0x82
---
Entry stack: [V7, 0x82, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x1a6
[0x1a6:0x1bf]
---
Predecessors: [0xaa]
Successors: [0x1c0, 0x1c5]
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x1
0x1a9 SLOAD
0x1aa PUSH1 0x0
0x1ac SWAP1
0x1ad CALLER
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 SWAP1
0x1b7 DUP2
0x1b8 AND
0x1b9 SWAP2
0x1ba AND
0x1bb EQ
0x1bc PUSH2 0x1c5
0x1bf JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V151 = 0x1
0x1a9: V152 = S[0x1]
0x1aa: V153 = 0x0
0x1ad: V154 = CALLER
0x1ae: V155 = 0x1
0x1b0: V156 = 0xa0
0x1b2: V157 = 0x2
0x1b4: V158 = EXP 0x2 0xa0
0x1b5: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1ba: V161 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V162 = EQ V161 V160
0x1bc: V163 = 0x1c5
0x1bf: JUMPI 0x1c5 V162
---
Entry stack: [V7, 0x82]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V7, 0x82, 0x0]

================================

Block 0x1c0
[0x1c0:0x1c4]
---
Predecessors: [0x1a6]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 PUSH1 0x0
0x1c4 REVERT
---
0x1c0: V164 = 0x0
0x1c2: V165 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V7, 0x82, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, 0x0]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0x1a6]
Successors: [0x3e4]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0x1cd
0x1c9 PUSH2 0x3e4
0x1cc JUMP
---
0x1c5: JUMPDEST 
0x1c6: V166 = 0x1cd
0x1c9: V167 = 0x3e4
0x1cc: JUMP 0x3e4
---
Entry stack: [V7, 0x82, 0x0]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V7, 0x82, 0x0, 0x1cd]

================================

Block 0x1cd
[0x1cd:0x1df]
---
Predecessors: [0x3e4]
Successors: [0x1e0, 0x1e1]
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 SWAP1
0x1d4 SUB
0x1d5 SWAP1
0x1d6 PUSH1 0x0
0x1d8 CREATE
0x1d9 DUP1
0x1da ISZERO
0x1db ISZERO
0x1dc PUSH2 0x1e1
0x1df JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V168 = 0x40
0x1d0: V169 = M[0x40]
0x1d4: V170 = SUB V345 V169
0x1d6: V171 = 0x0
0x1d8: V172 = CREATE 0x0 V169 V170
0x1da: V173 = ISZERO V172
0x1db: V174 = ISZERO V173
0x1dc: V175 = 0x1e1
0x1df: JUMPI 0x1e1 V174
---
Entry stack: [V7, 0x82, 0x0, V345]
Stack pops: 1
Stack additions: [V172]
Exit stack: [V7, 0x82, 0x0, V172]

================================

Block 0x1e0
[0x1e0:0x1e0]
---
Predecessors: [0x1cd]
Successors: []
---
0x1e0 INVALID
---
0x1e0: INVALID 
---
Entry stack: [V7, 0x82, 0x0, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, 0x0, V172]

================================

Block 0x1e1
[0x1e1:0x23b]
---
Predecessors: [0x1cd]
Successors: [0x23c]
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea DUP2
0x1eb AND
0x1ec PUSH1 0x0
0x1ee DUP2
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x3
0x1f3 PUSH1 0x20
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 MSTORE
0x1f8 PUSH1 0x40
0x1fa SWAP2
0x1fb DUP3
0x1fc SWAP1
0x1fd SHA3
0x1fe DUP1
0x1ff SLOAD
0x200 PUSH1 0xff
0x202 NOT
0x203 AND
0x204 PUSH1 0x1
0x206 OR
0x207 SWAP1
0x208 SSTORE
0x209 DUP2
0x20a MLOAD
0x20b SWAP3
0x20c DUP4
0x20d MSTORE
0x20e SWAP1
0x20f MLOAD
0x210 SWAP3
0x211 SWAP4
0x212 POP
0x213 PUSH32 0xcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312
0x234 SWAP3
0x235 SWAP2
0x236 DUP3
0x237 SWAP1
0x238 SUB
0x239 ADD
0x23a SWAP1
0x23b LOG1
---
0x1e1: JUMPDEST 
0x1e2: V176 = 0x1
0x1e4: V177 = 0xa0
0x1e6: V178 = 0x2
0x1e8: V179 = EXP 0x2 0xa0
0x1e9: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V181 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V182 = 0x0
0x1f0: M[0x0] = V181
0x1f1: V183 = 0x3
0x1f3: V184 = 0x20
0x1f7: M[0x20] = 0x3
0x1f8: V185 = 0x40
0x1fd: V186 = SHA3 0x0 0x40
0x1ff: V187 = S[V186]
0x200: V188 = 0xff
0x202: V189 = NOT 0xff
0x203: V190 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V187
0x204: V191 = 0x1
0x206: V192 = OR 0x1 V190
0x208: S[V186] = V192
0x20a: V193 = M[0x40]
0x20d: M[V193] = V181
0x20f: V194 = M[0x40]
0x213: V195 = 0xcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312
0x238: V196 = SUB V193 V194
0x239: V197 = ADD V196 0x20
0x23b: LOG V194 V197 0xcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312
---
Entry stack: [V7, 0x82, 0x0, V172]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x82, V172]

================================

Block 0x23c
[0x23c:0x23c]
---
Predecessors: [0x1e1]
Successors: [0x23d]
---
0x23c JUMPDEST
---
0x23c: JUMPDEST 
---
Entry stack: [V7, 0x82, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V172]

================================

Block 0x23d
[0x23d:0x23f]
---
Predecessors: [0x23c]
Successors: [0x82]
---
0x23d JUMPDEST
0x23e POP
0x23f JUMP
---
0x23d: JUMPDEST 
0x23f: JUMP 0x82
---
Entry stack: [V7, 0x82, V172]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x240
[0x240:0x259]
---
Predecessors: [0xbc]
Successors: [0x25a, 0x25f]
---
0x240 JUMPDEST
0x241 PUSH1 0x1
0x243 SLOAD
0x244 PUSH1 0x0
0x246 SWAP1
0x247 CALLER
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 SWAP1
0x251 DUP2
0x252 AND
0x253 SWAP2
0x254 AND
0x255 EQ
0x256 PUSH2 0x25f
0x259 JUMPI
---
0x240: JUMPDEST 
0x241: V198 = 0x1
0x243: V199 = S[0x1]
0x244: V200 = 0x0
0x247: V201 = CALLER
0x248: V202 = 0x1
0x24a: V203 = 0xa0
0x24c: V204 = 0x2
0x24e: V205 = EXP 0x2 0xa0
0x24f: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x252: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x254: V208 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x255: V209 = EQ V208 V207
0x256: V210 = 0x25f
0x259: JUMPI 0x25f V209
---
Entry stack: [V7, 0x82, V65, V68, V70]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V7, 0x82, V65, V68, V70, 0x0]

================================

Block 0x25a
[0x25a:0x25e]
---
Predecessors: [0x240]
Successors: []
---
0x25a PUSH1 0x0
0x25c PUSH1 0x0
0x25e REVERT
---
0x25a: V211 = 0x0
0x25c: V212 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V65, V68, V70, 0x0]

================================

Block 0x25f
[0x25f:0x281]
---
Predecessors: [0x240]
Successors: [0x282, 0x287]
---
0x25f JUMPDEST
0x260 PUSH1 0x1
0x262 PUSH1 0xa0
0x264 PUSH1 0x2
0x266 EXP
0x267 SUB
0x268 DUP5
0x269 AND
0x26a PUSH1 0x0
0x26c SWAP1
0x26d DUP2
0x26e MSTORE
0x26f PUSH1 0x3
0x271 PUSH1 0x20
0x273 MSTORE
0x274 PUSH1 0x40
0x276 SWAP1
0x277 SHA3
0x278 SLOAD
0x279 PUSH1 0xff
0x27b AND
0x27c ISZERO
0x27d ISZERO
0x27e PUSH2 0x287
0x281 JUMPI
---
0x25f: JUMPDEST 
0x260: V213 = 0x1
0x262: V214 = 0xa0
0x264: V215 = 0x2
0x266: V216 = EXP 0x2 0xa0
0x267: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x269: V218 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V219 = 0x0
0x26e: M[0x0] = V218
0x26f: V220 = 0x3
0x271: V221 = 0x20
0x273: M[0x20] = 0x3
0x274: V222 = 0x40
0x277: V223 = SHA3 0x0 0x40
0x278: V224 = S[V223]
0x279: V225 = 0xff
0x27b: V226 = AND 0xff V224
0x27c: V227 = ISZERO V226
0x27d: V228 = ISZERO V227
0x27e: V229 = 0x287
0x281: JUMPI 0x287 V228
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x82, V65, V68, V70, 0x0]

================================

Block 0x282
[0x282:0x286]
---
Predecessors: [0x25f]
Successors: []
---
0x282 PUSH1 0x0
0x284 PUSH1 0x0
0x286 REVERT
---
0x282: V230 = 0x0
0x284: V231 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V65, V68, V70, 0x0]

================================

Block 0x287
[0x287:0x300]
---
Predecessors: [0x25f]
Successors: [0x301, 0x302]
---
0x287 JUMPDEST
0x288 PUSH1 0x2
0x28a SLOAD
0x28b PUSH1 0x40
0x28d DUP1
0x28e MLOAD
0x28f PUSH1 0x0
0x291 PUSH1 0x20
0x293 SWAP2
0x294 DUP3
0x295 ADD
0x296 DUP2
0x297 SWAP1
0x298 MSTORE
0x299 DUP3
0x29a MLOAD
0x29b PUSH32 0x62c0676700000000000000000000000000000000000000000000000000000000
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 DUP9
0x2c7 DUP2
0x2c8 AND
0x2c9 PUSH1 0x4
0x2cb DUP4
0x2cc ADD
0x2cd MSTORE
0x2ce SWAP5
0x2cf DUP6
0x2d0 AND
0x2d1 PUSH1 0x24
0x2d3 DUP3
0x2d4 ADD
0x2d5 MSTORE
0x2d6 PUSH1 0x44
0x2d8 DUP2
0x2d9 ADD
0x2da DUP8
0x2db SWAP1
0x2dc MSTORE
0x2dd SWAP3
0x2de MLOAD
0x2df SWAP4
0x2e0 DUP9
0x2e1 AND
0x2e2 SWAP4
0x2e3 PUSH4 0x62c06767
0x2e8 SWAP4
0x2e9 PUSH1 0x64
0x2eb DUP1
0x2ec DUP3
0x2ed ADD
0x2ee SWAP5
0x2ef SWAP4
0x2f0 SWAP2
0x2f1 DUP4
0x2f2 SWAP1
0x2f3 SUB
0x2f4 ADD
0x2f5 SWAP1
0x2f6 DUP3
0x2f7 SWAP1
0x2f8 DUP8
0x2f9 DUP1
0x2fa EXTCODESIZE
0x2fb ISZERO
0x2fc ISZERO
0x2fd PUSH2 0x302
0x300 JUMPI
---
0x287: JUMPDEST 
0x288: V232 = 0x2
0x28a: V233 = S[0x2]
0x28b: V234 = 0x40
0x28e: V235 = M[0x40]
0x28f: V236 = 0x0
0x291: V237 = 0x20
0x295: V238 = ADD 0x20 V235
0x298: M[V238] = 0x0
0x29a: V239 = M[0x40]
0x29b: V240 = 0x62c0676700000000000000000000000000000000000000000000000000000000
0x2bd: M[V239] = 0x62c0676700000000000000000000000000000000000000000000000000000000
0x2be: V241 = 0x1
0x2c0: V242 = 0xa0
0x2c2: V243 = 0x2
0x2c4: V244 = EXP 0x2 0xa0
0x2c5: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x2c9: V247 = 0x4
0x2cc: V248 = ADD V239 0x4
0x2cd: M[V248] = V246
0x2d0: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x2d1: V250 = 0x24
0x2d4: V251 = ADD V239 0x24
0x2d5: M[V251] = V249
0x2d6: V252 = 0x44
0x2d9: V253 = ADD V239 0x44
0x2dc: M[V253] = V70
0x2de: V254 = M[0x40]
0x2e1: V255 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V256 = 0x62c06767
0x2e9: V257 = 0x64
0x2ed: V258 = ADD V239 0x64
0x2f3: V259 = SUB V239 V254
0x2f4: V260 = ADD V259 0x64
0x2fa: V261 = EXTCODESIZE V255
0x2fb: V262 = ISZERO V261
0x2fc: V263 = ISZERO V262
0x2fd: V264 = 0x302
0x300: JUMPI 0x302 V263
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V255, 0x62c06767, V258, 0x20, V254, V260, V254, 0x0, V255]
Exit stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258, 0x20, V254, V260, V254, 0x0, V255]

================================

Block 0x301
[0x301:0x301]
---
Predecessors: [0x287]
Successors: []
---
0x301 INVALID
---
0x301: INVALID 
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258, 0x20, V254, V260, V254, 0x0, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258, 0x20, V254, V260, V254, 0x0, V255]

================================

Block 0x302
[0x302:0x30e]
---
Predecessors: [0x287]
Successors: [0x30f, 0x310]
---
0x302 JUMPDEST
0x303 PUSH2 0x2c6
0x306 GAS
0x307 SUB
0x308 CALL
0x309 ISZERO
0x30a ISZERO
0x30b PUSH2 0x310
0x30e JUMPI
---
0x302: JUMPDEST 
0x303: V265 = 0x2c6
0x306: V266 = GAS
0x307: V267 = SUB V266 0x2c6
0x308: V268 = CALL V267 V255 0x0 V254 V260 V254 0x20
0x309: V269 = ISZERO V268
0x30a: V270 = ISZERO V269
0x30b: V271 = 0x310
0x30e: JUMPI 0x310 V270
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258, 0x20, V254, V260, V254, 0x0, V255]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258]

================================

Block 0x30f
[0x30f:0x30f]
---
Predecessors: [0x302]
Successors: []
---
0x30f INVALID
---
0x30f: INVALID 
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258]

================================

Block 0x310
[0x310:0x322]
---
Predecessors: [0x302]
Successors: [0x323, 0x378]
---
0x310 JUMPDEST
0x311 POP
0x312 POP
0x313 PUSH1 0x40
0x315 MLOAD
0x316 MLOAD
0x317 SWAP2
0x318 POP
0x319 POP
0x31a PUSH1 0x0
0x31c DUP2
0x31d GT
0x31e ISZERO
0x31f PUSH2 0x378
0x322 JUMPI
---
0x310: JUMPDEST 
0x313: V272 = 0x40
0x315: V273 = M[0x40]
0x316: V274 = M[V273]
0x31a: V275 = 0x0
0x31d: V276 = GT V274 0x0
0x31e: V277 = ISZERO V276
0x31f: V278 = 0x378
0x322: JUMPI 0x378 V277
---
Entry stack: [V7, 0x82, V65, V68, V70, 0x0, V255, 0x62c06767, V258]
Stack pops: 4
Stack additions: [V274]
Exit stack: [V7, 0x82, V65, V68, V70, V274]

================================

Block 0x323
[0x323:0x377]
---
Predecessors: [0x310]
Successors: [0x378]
---
0x323 PUSH1 0x2
0x325 SLOAD
0x326 PUSH1 0x40
0x328 DUP1
0x329 MLOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 DUP1
0x333 DUP9
0x334 AND
0x335 DUP3
0x336 MSTORE
0x337 SWAP3
0x338 DUP4
0x339 AND
0x33a PUSH1 0x20
0x33c DUP3
0x33d ADD
0x33e MSTORE
0x33f SWAP2
0x340 DUP6
0x341 AND
0x342 DUP3
0x343 DUP3
0x344 ADD
0x345 MSTORE
0x346 PUSH1 0x60
0x348 DUP3
0x349 ADD
0x34a DUP4
0x34b SWAP1
0x34c MSTORE
0x34d MLOAD
0x34e PUSH32 0x4174a9435a04d04d274c76779cad136a41fde6937c56241c09ab9d3c7064a1a9
0x36f SWAP2
0x370 DUP2
0x371 SWAP1
0x372 SUB
0x373 PUSH1 0x80
0x375 ADD
0x376 SWAP1
0x377 LOG1
---
0x323: V279 = 0x2
0x325: V280 = S[0x2]
0x326: V281 = 0x40
0x329: V282 = M[0x40]
0x32a: V283 = 0x1
0x32c: V284 = 0xa0
0x32e: V285 = 0x2
0x330: V286 = EXP 0x2 0xa0
0x331: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x334: V288 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0x336: M[V282] = V288
0x339: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x33a: V290 = 0x20
0x33d: V291 = ADD V282 0x20
0x33e: M[V291] = V289
0x341: V292 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0x344: V293 = ADD 0x40 V282
0x345: M[V293] = V292
0x346: V294 = 0x60
0x349: V295 = ADD V282 0x60
0x34c: M[V295] = V274
0x34d: V296 = M[0x40]
0x34e: V297 = 0x4174a9435a04d04d274c76779cad136a41fde6937c56241c09ab9d3c7064a1a9
0x372: V298 = SUB V282 V296
0x373: V299 = 0x80
0x375: V300 = ADD 0x80 V298
0x377: LOG V296 V300 0x4174a9435a04d04d274c76779cad136a41fde6937c56241c09ab9d3c7064a1a9
---
Entry stack: [V7, 0x82, V65, V68, V70, V274]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x82, V65, V68, V70, V274]

================================

Block 0x378
[0x378:0x378]
---
Predecessors: [0x310, 0x323]
Successors: [0x379]
---
0x378 JUMPDEST
---
0x378: JUMPDEST 
---
Entry stack: [V7, 0x82, V65, V68, V70, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V65, V68, V70, V274]

================================

Block 0x379
[0x379:0x379]
---
Predecessors: [0x378]
Successors: [0x37a]
---
0x379 JUMPDEST
---
0x379: JUMPDEST 
---
Entry stack: [V7, 0x82, V65, V68, V70, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V65, V68, V70, V274]

================================

Block 0x37a
[0x37a:0x37f]
---
Predecessors: [0x379]
Successors: [0x82]
---
0x37a JUMPDEST
0x37b POP
0x37c POP
0x37d POP
0x37e POP
0x37f JUMP
---
0x37a: JUMPDEST 
0x37f: JUMP 0x82
---
Entry stack: [V7, 0x82, V65, V68, V70, V274]
Stack pops: 5
Stack additions: []
Exit stack: [V7]

================================

Block 0x380
[0x380:0x397]
---
Predecessors: [0xe3]
Successors: [0x398, 0x3ab]
---
0x380 JUMPDEST
0x381 PUSH1 0x0
0x383 SLOAD
0x384 CALLER
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP1
0x38e DUP2
0x38f AND
0x390 SWAP2
0x391 AND
0x392 EQ
0x393 DUP1
0x394 PUSH2 0x3ab
0x397 JUMPI
---
0x380: JUMPDEST 
0x381: V301 = 0x0
0x383: V302 = S[0x0]
0x384: V303 = CALLER
0x385: V304 = 0x1
0x387: V305 = 0xa0
0x389: V306 = 0x2
0x38b: V307 = EXP 0x2 0xa0
0x38c: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x391: V310 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x392: V311 = EQ V310 V309
0x394: V312 = 0x3ab
0x397: JUMPI 0x3ab V311
---
Entry stack: [V7, 0x82, V83]
Stack pops: 0
Stack additions: [V311]
Exit stack: [V7, 0x82, V83, V311]

================================

Block 0x398
[0x398:0x3aa]
---
Predecessors: [0x380]
Successors: [0x3ab]
---
0x398 POP
0x399 PUSH1 0x1
0x39b SLOAD
0x39c CALLER
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP1
0x3a6 DUP2
0x3a7 AND
0x3a8 SWAP2
0x3a9 AND
0x3aa EQ
---
0x399: V313 = 0x1
0x39b: V314 = S[0x1]
0x39c: V315 = CALLER
0x39d: V316 = 0x1
0x39f: V317 = 0xa0
0x3a1: V318 = 0x2
0x3a3: V319 = EXP 0x2 0xa0
0x3a4: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x3a9: V322 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V323 = EQ V322 V321
---
Entry stack: [V7, 0x82, V83, V311]
Stack pops: 1
Stack additions: [V323]
Exit stack: [V7, 0x82, V83, V323]

================================

Block 0x3ab
[0x3ab:0x3b1]
---
Predecessors: [0x380, 0x398]
Successors: [0x3b2, 0x3b7]
---
0x3ab JUMPDEST
0x3ac ISZERO
0x3ad ISZERO
0x3ae PUSH2 0x3b7
0x3b1 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V324 = ISZERO S0
0x3ad: V325 = ISZERO V324
0x3ae: V326 = 0x3b7
0x3b1: JUMPI 0x3b7 V325
---
Entry stack: [V7, 0x82, V83, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x82, V83]

================================

Block 0x3b2
[0x3b2:0x3b6]
---
Predecessors: [0x3ab]
Successors: []
---
0x3b2 PUSH1 0x0
0x3b4 PUSH1 0x0
0x3b6 REVERT
---
0x3b2: V327 = 0x0
0x3b4: V328 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V7, 0x82, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V83]

================================

Block 0x3b7
[0x3b7:0x3df]
---
Predecessors: [0x3ab]
Successors: [0x3e0]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x2
0x3ba DUP1
0x3bb SLOAD
0x3bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d1 NOT
0x3d2 AND
0x3d3 PUSH1 0x1
0x3d5 PUSH1 0xa0
0x3d7 PUSH1 0x2
0x3d9 EXP
0x3da SUB
0x3db DUP4
0x3dc AND
0x3dd OR
0x3de SWAP1
0x3df SSTORE
---
0x3b7: JUMPDEST 
0x3b8: V329 = 0x2
0x3bb: V330 = S[0x2]
0x3bc: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V332 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V333 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V330
0x3d3: V334 = 0x1
0x3d5: V335 = 0xa0
0x3d7: V336 = 0x2
0x3d9: V337 = EXP 0x2 0xa0
0x3da: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V339 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V340 = OR V339 V333
0x3df: S[0x2] = V340
---
Entry stack: [V7, 0x82, V83]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x82, V83]

================================

Block 0x3e0
[0x3e0:0x3e0]
---
Predecessors: [0x3b7]
Successors: [0x3e1]
---
0x3e0 JUMPDEST
---
0x3e0: JUMPDEST 
---
Entry stack: [V7, 0x82, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x82, V83]

================================

Block 0x3e1
[0x3e1:0x3e3]
---
Predecessors: [0x3e0]
Successors: [0x82]
---
0x3e1 JUMPDEST
0x3e2 POP
0x3e3 JUMP
---
0x3e1: JUMPDEST 
0x3e3: JUMP 0x82
---
Entry stack: [V7, 0x82, V83]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x3e4
[0x3e4:0x3f3]
---
Predecessors: [0x1c5]
Successors: [0x1cd]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x40
0x3e7 MLOAD
0x3e8 PUSH2 0x27c
0x3eb DUP1
0x3ec PUSH2 0x3f5
0x3ef DUP4
0x3f0 CODECOPY
0x3f1 ADD
0x3f2 SWAP1
0x3f3 JUMP
---
0x3e4: JUMPDEST 
0x3e5: V341 = 0x40
0x3e7: V342 = M[0x40]
0x3e8: V343 = 0x27c
0x3ec: V344 = 0x3f5
0x3f0: CODECOPY V342 0x3f5 0x27c
0x3f1: V345 = ADD 0x27c V342
0x3f3: JUMP 0x1cd
---
Entry stack: [V7, 0x82, 0x0, 0x1cd]
Stack pops: 1
Stack additions: [V345]
Exit stack: [V7, 0x82, 0x0, V345]

================================

Block 0x3f4
[0x3f4:0x3ff]
---
Predecessors: []
Successors: [0x400]
---
0x3f4 STOP
0x3f5 PUSH1 0x60
0x3f7 PUSH1 0x40
0x3f9 MSTORE
0x3fa CALLVALUE
0x3fb ISZERO
0x3fc PUSH2 0xc
0x3ff JUMPI
---
0x3f4: STOP 
0x3f5: V346 = 0x60
0x3f7: V347 = 0x40
0x3f9: M[0x40] = 0x60
0x3fa: V348 = CALLVALUE
0x3fb: V349 = ISZERO V348
0x3fc: V350 = 0xc
0x3ff: THROWI V349
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x400
[0x400:0x401]
---
Predecessors: [0x3f4]
Successors: [0x402]
---
0x400 INVALID
0x401 JUMPDEST
---
0x400: INVALID 
0x401: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x402
[0x402:0x41d]
---
Predecessors: [0x400]
Successors: [0x41e]
---
0x402 JUMPDEST
0x403 PUSH1 0x0
0x405 DUP1
0x406 SLOAD
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f NOT
0x410 AND
0x411 CALLER
0x412 PUSH1 0x1
0x414 PUSH1 0xa0
0x416 PUSH1 0x2
0x418 EXP
0x419 SUB
0x41a AND
0x41b OR
0x41c SWAP1
0x41d SSTORE
---
0x402: JUMPDEST 
0x403: V351 = 0x0
0x406: V352 = S[0x0]
0x407: V353 = 0x1
0x409: V354 = 0xa0
0x40b: V355 = 0x2
0x40d: V356 = EXP 0x2 0xa0
0x40e: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40f: V358 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x410: V359 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V352
0x411: V360 = CALLER
0x412: V361 = 0x1
0x414: V362 = 0xa0
0x416: V363 = 0x2
0x418: V364 = EXP 0x2 0xa0
0x419: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41a: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x41b: V367 = OR V366 V359
0x41d: S[0x0] = V367
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x41e
[0x41e:0x41e]
---
Predecessors: [0x402]
Successors: [0x41f]
---
0x41e JUMPDEST
---
0x41e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x41f
[0x41f:0x438]
---
Predecessors: [0x41e]
Successors: [0x439]
---
0x41f JUMPDEST
0x420 PUSH2 0x243
0x423 DUP1
0x424 PUSH2 0x39
0x427 PUSH1 0x0
0x429 CODECOPY
0x42a PUSH1 0x0
0x42c RETURN
0x42d STOP
0x42e PUSH1 0x60
0x430 PUSH1 0x40
0x432 MSTORE
0x433 CALLDATASIZE
0x434 ISZERO
0x435 PUSH2 0x25
0x438 JUMPI
---
0x41f: JUMPDEST 
0x420: V368 = 0x243
0x424: V369 = 0x39
0x427: V370 = 0x0
0x429: CODECOPY 0x0 0x39 0x243
0x42a: V371 = 0x0
0x42c: RETURN 0x0 0x243
0x42d: STOP 
0x42e: V372 = 0x60
0x430: V373 = 0x40
0x432: M[0x40] = 0x60
0x433: V374 = CALLDATASIZE
0x434: V375 = ISZERO V374
0x435: V376 = 0x25
0x438: THROWI V375
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x439
[0x439:0x452]
---
Predecessors: [0x41f]
Successors: [0x453]
---
0x439 PUSH4 0xffffffff
0x43e PUSH1 0xe0
0x440 PUSH1 0x2
0x442 EXP
0x443 PUSH1 0x0
0x445 CALLDATALOAD
0x446 DIV
0x447 AND
0x448 PUSH4 0x62c06767
0x44d DUP2
0x44e EQ
0x44f PUSH2 0x2e
0x452 JUMPI
---
0x439: V377 = 0xffffffff
0x43e: V378 = 0xe0
0x440: V379 = 0x2
0x442: V380 = EXP 0x2 0xe0
0x443: V381 = 0x0
0x445: V382 = CALLDATALOAD 0x0
0x446: V383 = DIV V382 0x100000000000000000000000000000000000000000000000000000000
0x447: V384 = AND V383 0xffffffff
0x448: V385 = 0x62c06767
0x44e: V386 = EQ V384 0x62c06767
0x44f: V387 = 0x2e
0x452: THROWI V386
---
Entry stack: []
Stack pops: 0
Stack additions: [V384]
Exit stack: [V384]

================================

Block 0x453
[0x453:0x456]
---
Predecessors: [0x439]
Successors: [0x457]
---
0x453 JUMPDEST
0x454 PUSH2 0x2c
---
0x453: JUMPDEST 
0x454: V388 = 0x2c
---
Entry stack: [V384]
Stack pops: 0
Stack additions: [0x2c]
Exit stack: [V384, 0x2c]

================================

Block 0x457
[0x457:0x457]
---
Predecessors: [0x453]
Successors: [0x458]
---
0x457 JUMPDEST
---
0x457: JUMPDEST 
---
Entry stack: [V384, 0x2c]
Stack pops: 0
Stack additions: []
Exit stack: [V384, 0x2c]

================================

Block 0x458
[0x458:0x462]
---
Predecessors: [0x457]
Successors: [0x463]
---
0x458 JUMPDEST
0x459 JUMP
0x45a JUMPDEST
0x45b STOP
0x45c JUMPDEST
0x45d CALLVALUE
0x45e ISZERO
0x45f PUSH2 0x36
0x462 JUMPI
---
0x458: JUMPDEST 
0x459: THROW 
0x45a: JUMPDEST 
0x45b: STOP 
0x45c: JUMPDEST 
0x45d: V389 = CALLVALUE
0x45e: V390 = ISZERO V389
0x45f: V391 = 0x36
0x462: THROWI V390
---
Entry stack: [V384, 0x2c]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x463
[0x463:0x4ae]
---
Predecessors: [0x458]
Successors: [0x4af]
---
0x463 INVALID
0x464 JUMPDEST
0x465 PUSH2 0x53
0x468 PUSH1 0x1
0x46a PUSH1 0xa0
0x46c PUSH1 0x2
0x46e EXP
0x46f SUB
0x470 PUSH1 0x4
0x472 CALLDATALOAD
0x473 DUP2
0x474 AND
0x475 SWAP1
0x476 PUSH1 0x24
0x478 CALLDATALOAD
0x479 AND
0x47a PUSH1 0x44
0x47c CALLDATALOAD
0x47d PUSH2 0x65
0x480 JUMP
0x481 JUMPDEST
0x482 PUSH1 0x40
0x484 DUP1
0x485 MLOAD
0x486 SWAP2
0x487 DUP3
0x488 MSTORE
0x489 MLOAD
0x48a SWAP1
0x48b DUP2
0x48c SWAP1
0x48d SUB
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP1
0x492 RETURN
0x493 JUMPDEST
0x494 PUSH1 0x0
0x496 DUP1
0x497 SLOAD
0x498 DUP2
0x499 SWAP1
0x49a DUP2
0x49b SWAP1
0x49c CALLER
0x49d PUSH1 0x1
0x49f PUSH1 0xa0
0x4a1 PUSH1 0x2
0x4a3 EXP
0x4a4 SUB
0x4a5 SWAP1
0x4a6 DUP2
0x4a7 AND
0x4a8 SWAP2
0x4a9 AND
0x4aa EQ
0x4ab PUSH2 0x86
0x4ae JUMPI
---
0x463: INVALID 
0x464: JUMPDEST 
0x465: V392 = 0x53
0x468: V393 = 0x1
0x46a: V394 = 0xa0
0x46c: V395 = 0x2
0x46e: V396 = EXP 0x2 0xa0
0x46f: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x470: V398 = 0x4
0x472: V399 = CALLDATALOAD 0x4
0x474: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x476: V401 = 0x24
0x478: V402 = CALLDATALOAD 0x24
0x479: V403 = AND V402 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V404 = 0x44
0x47c: V405 = CALLDATALOAD 0x44
0x47d: V406 = 0x65
0x480: THROW 
0x481: JUMPDEST 
0x482: V407 = 0x40
0x485: V408 = M[0x40]
0x488: M[V408] = S0
0x489: V409 = M[0x40]
0x48d: V410 = SUB V408 V409
0x48e: V411 = 0x20
0x490: V412 = ADD 0x20 V410
0x492: RETURN V409 V412
0x493: JUMPDEST 
0x494: V413 = 0x0
0x497: V414 = S[0x0]
0x49c: V415 = CALLER
0x49d: V416 = 0x1
0x49f: V417 = 0xa0
0x4a1: V418 = 0x2
0x4a3: V419 = EXP 0x2 0xa0
0x4a4: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a7: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x4a9: V422 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0x4aa: V423 = EQ V422 V421
0x4ab: V424 = 0x86
0x4ae: THROWI V423
---
Entry stack: []
Stack pops: 0
Stack additions: [V405, V403, V400, 0x53, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x4af
[0x4af:0x4c4]
---
Predecessors: [0x463]
Successors: [0x4c5]
---
0x4af PUSH1 0x0
0x4b1 PUSH1 0x0
0x4b3 REVERT
0x4b4 JUMPDEST
0x4b5 PUSH1 0x1
0x4b7 PUSH1 0xa0
0x4b9 PUSH1 0x2
0x4bb EXP
0x4bc SUB
0x4bd DUP7
0x4be AND
0x4bf ISZERO
0x4c0 ISZERO
0x4c1 PUSH2 0xf3
0x4c4 JUMPI
---
0x4af: V425 = 0x0
0x4b1: V426 = 0x0
0x4b3: REVERT 0x0 0x0
0x4b4: JUMPDEST 
0x4b5: V427 = 0x1
0x4b7: V428 = 0xa0
0x4b9: V429 = 0x2
0x4bb: V430 = EXP 0x2 0xa0
0x4bc: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V432 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V433 = ISZERO V432
0x4c0: V434 = ISZERO V433
0x4c1: V435 = 0xf3
0x4c4: THROWI V434
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x4c5
[0x4c5:0x4d8]
---
Predecessors: [0x4af]
Successors: [0x4d9]
---
0x4c5 POP
0x4c6 PUSH1 0x1
0x4c8 PUSH1 0xa0
0x4ca PUSH1 0x2
0x4cc EXP
0x4cd SUB
0x4ce ADDRESS
0x4cf AND
0x4d0 BALANCE
0x4d1 DUP1
0x4d2 DUP5
0x4d3 GT
0x4d4 ISZERO
0x4d5 PUSH2 0xb3
0x4d8 JUMPI
---
0x4c6: V436 = 0x1
0x4c8: V437 = 0xa0
0x4ca: V438 = 0x2
0x4cc: V439 = EXP 0x2 0xa0
0x4cd: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ce: V441 = ADDRESS
0x4cf: V442 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V443 = BALANCE V442
0x4d3: V444 = GT S3 V443
0x4d4: V445 = ISZERO V444
0x4d5: V446 = 0xb3
0x4d8: THROWI V445
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V443]
Exit stack: [S5, S4, S3, S2, S1, V443]

================================

Block 0x4d9
[0x4d9:0x511]
---
Predecessors: [0x4c5]
Successors: [0x512]
---
0x4d9 PUSH1 0x0
0x4db SWAP3
0x4dc POP
0x4dd PUSH2 0x20c
0x4e0 JUMP
0x4e1 JUMPDEST
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed DUP1
0x4ee DUP8
0x4ef AND
0x4f0 SWAP2
0x4f1 ADDRESS
0x4f2 SWAP1
0x4f3 SWAP2
0x4f4 AND
0x4f5 BALANCE
0x4f6 DUP1
0x4f7 ISZERO
0x4f8 PUSH2 0x8fc
0x4fb MUL
0x4fc SWAP2
0x4fd PUSH1 0x0
0x4ff DUP2
0x500 DUP2
0x501 DUP2
0x502 DUP6
0x503 DUP9
0x504 DUP9
0x505 CALL
0x506 SWAP4
0x507 POP
0x508 POP
0x509 POP
0x50a POP
0x50b SWAP2
0x50c POP
0x50d DUP2
0x50e PUSH2 0xea
0x511 JUMPI
---
0x4d9: V447 = 0x0
0x4dd: V448 = 0x20c
0x4e0: THROW 
0x4e1: JUMPDEST 
0x4e2: V449 = 0x40
0x4e4: V450 = M[0x40]
0x4e5: V451 = 0x1
0x4e7: V452 = 0xa0
0x4e9: V453 = 0x2
0x4eb: V454 = EXP 0x2 0xa0
0x4ec: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ef: V456 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V457 = ADDRESS
0x4f4: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x4f5: V459 = BALANCE V458
0x4f7: V460 = ISZERO V459
0x4f8: V461 = 0x8fc
0x4fb: V462 = MUL 0x8fc V460
0x4fd: V463 = 0x0
0x505: V464 = CALL V462 V456 V459 V450 0x0 V450 0x0
0x50e: V465 = 0xea
0x511: THROWI V464
---
Entry stack: [S5, S4, S3, S2, S1, V443]
Stack pops: 3
Stack additions: [S0, V464, S2, S3, S4]
Exit stack: []

================================

Block 0x512
[0x512:0x519]
---
Predecessors: [0x4d9]
Successors: [0x51a]
---
0x512 PUSH1 0x0
0x514 PUSH2 0xec
0x517 JUMP
0x518 JUMPDEST
0x519 DUP1
---
0x512: V466 = 0x0
0x514: V467 = 0xec
0x517: THROW 
0x518: JUMPDEST 
---
Entry stack: [S4, S3, S2, V464, S0]
Stack pops: 0
Stack additions: [0x0, S0, S0]
Exit stack: []

================================

Block 0x51a
[0x51a:0x57f]
---
Predecessors: [0x512]
Successors: [0x580]
---
0x51a JUMPDEST
0x51b SWAP3
0x51c POP
0x51d PUSH2 0x20c
0x520 JUMP
0x521 JUMPDEST
0x522 DUP6
0x523 PUSH1 0x1
0x525 PUSH1 0xa0
0x527 PUSH1 0x2
0x529 EXP
0x52a SUB
0x52b AND
0x52c PUSH4 0x70a08231
0x531 ADDRESS
0x532 PUSH1 0x0
0x534 PUSH1 0x40
0x536 MLOAD
0x537 PUSH1 0x20
0x539 ADD
0x53a MSTORE
0x53b PUSH1 0x40
0x53d MLOAD
0x53e DUP3
0x53f PUSH4 0xffffffff
0x544 AND
0x545 PUSH1 0xe0
0x547 PUSH1 0x2
0x549 EXP
0x54a MUL
0x54b DUP2
0x54c MSTORE
0x54d PUSH1 0x4
0x54f ADD
0x550 DUP1
0x551 DUP3
0x552 PUSH1 0x1
0x554 PUSH1 0xa0
0x556 PUSH1 0x2
0x558 EXP
0x559 SUB
0x55a AND
0x55b PUSH1 0x1
0x55d PUSH1 0xa0
0x55f PUSH1 0x2
0x561 EXP
0x562 SUB
0x563 AND
0x564 DUP2
0x565 MSTORE
0x566 PUSH1 0x20
0x568 ADD
0x569 SWAP2
0x56a POP
0x56b POP
0x56c PUSH1 0x20
0x56e PUSH1 0x40
0x570 MLOAD
0x571 DUP1
0x572 DUP4
0x573 SUB
0x574 DUP2
0x575 PUSH1 0x0
0x577 DUP8
0x578 DUP1
0x579 EXTCODESIZE
0x57a ISZERO
0x57b ISZERO
0x57c PUSH2 0x153
0x57f JUMPI
---
0x51a: JUMPDEST 
0x51d: V468 = 0x20c
0x520: THROW 
0x521: JUMPDEST 
0x523: V469 = 0x1
0x525: V470 = 0xa0
0x527: V471 = 0x2
0x529: V472 = EXP 0x2 0xa0
0x52a: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52b: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x52c: V475 = 0x70a08231
0x531: V476 = ADDRESS
0x532: V477 = 0x0
0x534: V478 = 0x40
0x536: V479 = M[0x40]
0x537: V480 = 0x20
0x539: V481 = ADD 0x20 V479
0x53a: M[V481] = 0x0
0x53b: V482 = 0x40
0x53d: V483 = M[0x40]
0x53f: V484 = 0xffffffff
0x544: V485 = AND 0xffffffff 0x70a08231
0x545: V486 = 0xe0
0x547: V487 = 0x2
0x549: V488 = EXP 0x2 0xe0
0x54a: V489 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x54c: M[V483] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x54d: V490 = 0x4
0x54f: V491 = ADD 0x4 V483
0x552: V492 = 0x1
0x554: V493 = 0xa0
0x556: V494 = 0x2
0x558: V495 = EXP 0x2 0xa0
0x559: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55a: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x55b: V498 = 0x1
0x55d: V499 = 0xa0
0x55f: V500 = 0x2
0x561: V501 = EXP 0x2 0xa0
0x562: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x563: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x565: M[V491] = V503
0x566: V504 = 0x20
0x568: V505 = ADD 0x20 V491
0x56c: V506 = 0x20
0x56e: V507 = 0x40
0x570: V508 = M[0x40]
0x573: V509 = SUB V505 V508
0x575: V510 = 0x0
0x579: V511 = EXTCODESIZE V474
0x57a: V512 = ISZERO V511
0x57b: V513 = ISZERO V512
0x57c: V514 = 0x153
0x57f: THROWI V513
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [V474, 0x0, V508, V509, V508, 0x20, V505, 0x70a08231, V474, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x580
[0x580:0x58d]
---
Predecessors: [0x51a]
Successors: [0x58e]
---
0x580 INVALID
0x581 JUMPDEST
0x582 PUSH2 0x2c6
0x585 GAS
0x586 SUB
0x587 CALL
0x588 ISZERO
0x589 ISZERO
0x58a PUSH2 0x161
0x58d JUMPI
---
0x580: INVALID 
0x581: JUMPDEST 
0x582: V515 = 0x2c6
0x585: V516 = GAS
0x586: V517 = SUB V516 0x2c6
0x587: V518 = CALL V517 S0 S1 S2 S3 S4 S5
0x588: V519 = ISZERO V518
0x589: V520 = ISZERO V519
0x58a: V521 = 0x161
0x58d: THROWI V520
---
Entry stack: [S14, S13, S12, S11, S10, S9, V474, 0x70a08231, V505, 0x20, V508, V509, V508, 0x0, V474]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x58e
[0x58e:0x5a0]
---
Predecessors: [0x580]
Successors: [0x5a1]
---
0x58e INVALID
0x58f JUMPDEST
0x590 POP
0x591 POP
0x592 PUSH1 0x40
0x594 MLOAD
0x595 MLOAD
0x596 SWAP2
0x597 POP
0x598 POP
0x599 DUP1
0x59a DUP5
0x59b GT
0x59c ISZERO
0x59d PUSH2 0x17b
0x5a0 JUMPI
---
0x58e: INVALID 
0x58f: JUMPDEST 
0x592: V522 = 0x40
0x594: V523 = M[0x40]
0x595: V524 = M[V523]
0x59b: V525 = GT S6 V524
0x59c: V526 = ISZERO V525
0x59d: V527 = 0x17b
0x5a0: THROWI V526
---
Entry stack: []
Stack pops: 0
Stack additions: [V524, S4, S5, S6]
Exit stack: []

================================

Block 0x5a1
[0x5a1:0x60f]
---
Predecessors: [0x58e]
Successors: [0x610]
---
0x5a1 PUSH1 0x0
0x5a3 SWAP3
0x5a4 POP
0x5a5 PUSH2 0x20c
0x5a8 JUMP
0x5a9 JUMPDEST
0x5aa DUP6
0x5ab PUSH1 0x1
0x5ad PUSH1 0xa0
0x5af PUSH1 0x2
0x5b1 EXP
0x5b2 SUB
0x5b3 AND
0x5b4 PUSH4 0xa9059cbb
0x5b9 DUP7
0x5ba DUP4
0x5bb PUSH1 0x0
0x5bd PUSH1 0x40
0x5bf MLOAD
0x5c0 PUSH1 0x20
0x5c2 ADD
0x5c3 MSTORE
0x5c4 PUSH1 0x40
0x5c6 MLOAD
0x5c7 DUP4
0x5c8 PUSH4 0xffffffff
0x5cd AND
0x5ce PUSH1 0xe0
0x5d0 PUSH1 0x2
0x5d2 EXP
0x5d3 MUL
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x4
0x5d8 ADD
0x5d9 DUP1
0x5da DUP4
0x5db PUSH1 0x1
0x5dd PUSH1 0xa0
0x5df PUSH1 0x2
0x5e1 EXP
0x5e2 SUB
0x5e3 AND
0x5e4 PUSH1 0x1
0x5e6 PUSH1 0xa0
0x5e8 PUSH1 0x2
0x5ea EXP
0x5eb SUB
0x5ec AND
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 DUP3
0x5f3 DUP2
0x5f4 MSTORE
0x5f5 PUSH1 0x20
0x5f7 ADD
0x5f8 SWAP3
0x5f9 POP
0x5fa POP
0x5fb POP
0x5fc PUSH1 0x20
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 DUP1
0x602 DUP4
0x603 SUB
0x604 DUP2
0x605 PUSH1 0x0
0x607 DUP8
0x608 DUP1
0x609 EXTCODESIZE
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x1e3
0x60f JUMPI
---
0x5a1: V528 = 0x0
0x5a5: V529 = 0x20c
0x5a8: THROW 
0x5a9: JUMPDEST 
0x5ab: V530 = 0x1
0x5ad: V531 = 0xa0
0x5af: V532 = 0x2
0x5b1: V533 = EXP 0x2 0xa0
0x5b2: V534 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b3: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x5b4: V536 = 0xa9059cbb
0x5bb: V537 = 0x0
0x5bd: V538 = 0x40
0x5bf: V539 = M[0x40]
0x5c0: V540 = 0x20
0x5c2: V541 = ADD 0x20 V539
0x5c3: M[V541] = 0x0
0x5c4: V542 = 0x40
0x5c6: V543 = M[0x40]
0x5c8: V544 = 0xffffffff
0x5cd: V545 = AND 0xffffffff 0xa9059cbb
0x5ce: V546 = 0xe0
0x5d0: V547 = 0x2
0x5d2: V548 = EXP 0x2 0xe0
0x5d3: V549 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x5d5: M[V543] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5d6: V550 = 0x4
0x5d8: V551 = ADD 0x4 V543
0x5db: V552 = 0x1
0x5dd: V553 = 0xa0
0x5df: V554 = 0x2
0x5e1: V555 = EXP 0x2 0xa0
0x5e2: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e3: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x5e4: V558 = 0x1
0x5e6: V559 = 0xa0
0x5e8: V560 = 0x2
0x5ea: V561 = EXP 0x2 0xa0
0x5eb: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ec: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x5ee: M[V551] = V563
0x5ef: V564 = 0x20
0x5f1: V565 = ADD 0x20 V551
0x5f4: M[V565] = S0
0x5f5: V566 = 0x20
0x5f7: V567 = ADD 0x20 V565
0x5fc: V568 = 0x20
0x5fe: V569 = 0x40
0x600: V570 = M[0x40]
0x603: V571 = SUB V567 V570
0x605: V572 = 0x0
0x609: V573 = EXTCODESIZE V535
0x60a: V574 = ISZERO V573
0x60b: V575 = ISZERO V574
0x60c: V576 = 0x1e3
0x60f: THROWI V575
---
Entry stack: [S3, S2, S1, V524]
Stack pops: 3
Stack additions: [V535, 0x0, V570, V571, V570, 0x20, V567, 0xa9059cbb, V535, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x610
[0x610:0x61d]
---
Predecessors: [0x5a1]
Successors: [0x61e]
---
0x610 INVALID
0x611 JUMPDEST
0x612 PUSH2 0x2c6
0x615 GAS
0x616 SUB
0x617 CALL
0x618 ISZERO
0x619 ISZERO
0x61a PUSH2 0x1f1
0x61d JUMPI
---
0x610: INVALID 
0x611: JUMPDEST 
0x612: V577 = 0x2c6
0x615: V578 = GAS
0x616: V579 = SUB V578 0x2c6
0x617: V580 = CALL V579 S0 S1 S2 S3 S4 S5
0x618: V581 = ISZERO V580
0x619: V582 = ISZERO V581
0x61a: V583 = 0x1f1
0x61d: THROWI V582
---
Entry stack: [S14, S13, S12, S11, S10, S9, V535, 0xa9059cbb, V567, 0x20, V570, V571, V570, 0x0, V535]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x61e
[0x61e:0x62e]
---
Predecessors: [0x610]
Successors: [0x62f]
---
0x61e INVALID
0x61f JUMPDEST
0x620 POP
0x621 POP
0x622 PUSH1 0x40
0x624 MLOAD
0x625 MLOAD
0x626 SWAP3
0x627 POP
0x628 DUP3
0x629 SWAP1
0x62a POP
0x62b PUSH2 0xea
0x62e JUMPI
---
0x61e: INVALID 
0x61f: JUMPDEST 
0x622: V584 = 0x40
0x624: V585 = M[0x40]
0x625: V586 = M[V585]
0x62b: V587 = 0xea
0x62e: THROWI V586
---
Entry stack: []
Stack pops: 0
Stack additions: [S3, V586]
Exit stack: []

================================

Block 0x62f
[0x62f:0x636]
---
Predecessors: [0x61e]
Successors: [0x637]
---
0x62f PUSH1 0x0
0x631 PUSH2 0xec
0x634 JUMP
0x635 JUMPDEST
0x636 DUP1
---
0x62f: V588 = 0x0
0x631: V589 = 0xec
0x634: THROW 
0x635: JUMPDEST 
---
Entry stack: [V586, S0]
Stack pops: 0
Stack additions: [0x0, S0, S0]
Exit stack: []

================================

Block 0x637
[0x637:0x639]
---
Predecessors: [0x62f]
Successors: [0x63a]
---
0x637 JUMPDEST
0x638 SWAP3
0x639 POP
---
0x637: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [S0, S0, S1]

================================

Block 0x63a
[0x63a:0x63a]
---
Predecessors: [0x637]
Successors: [0x63b]
---
0x63a JUMPDEST
---
0x63a: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x63b
[0x63b:0x63b]
---
Predecessors: [0x63a]
Successors: [0x63c]
---
0x63b JUMPDEST
---
0x63b: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x63c
[0x63c:0x6a1]
---
Predecessors: [0x63b]
Successors: []
---
0x63c JUMPDEST
0x63d POP
0x63e POP
0x63f SWAP4
0x640 SWAP3
0x641 POP
0x642 POP
0x643 POP
0x644 JUMP
0x645 STOP
0x646 LOG1
0x647 PUSH6 0x627a7a723058
0x64e SHA3
0x64f XOR
0x650 PUSH32 0xee6410d3785fb9be334bd49cdb3b210aa78d55e7889ef858a0c18bb08a520029
0x671 LOG1
0x672 PUSH6 0x627a7a723058
0x679 SHA3
0x67a SMOD
0x67b CALLDATACOPY
0x67c MISSING 0xec
0x67d SWAP10
0x67e MISSING 0x5f
0x67f CALLDATACOPY
0x680 MISSING 0xc6
0x681 MISSING 0x4e
0x682 DUP4
0x683 ADDMOD
0x684 SWAP12
0x685 EQ
0x686 MSTORE8
0x687 MISSING 0x29
0x688 LOG4
0x689 BYTE
0x68a EXTCODESIZE
0x68b EXTCODEHASH
0x68c MISSING 0x24
0x68d MISSING 0xde
0x68e MUL
0x68f DUP9
0x690 MISSING 0x4a
0x691 SGT
0x692 PUSH15 0xfbaec520c1d5940029
---
0x63c: JUMPDEST 
0x644: JUMP S6
0x645: STOP 
0x646: LOG S0 S1 S2
0x647: V590 = 0x627a7a723058
0x64e: V591 = SHA3 0x627a7a723058 S3
0x64f: V592 = XOR V591 S4
0x650: V593 = 0xee6410d3785fb9be334bd49cdb3b210aa78d55e7889ef858a0c18bb08a520029
0x671: LOG 0xee6410d3785fb9be334bd49cdb3b210aa78d55e7889ef858a0c18bb08a520029 V592 S5
0x672: V594 = 0x627a7a723058
0x679: V595 = SHA3 0x627a7a723058 S6
0x67a: V596 = SMOD V595 S7
0x67b: CALLDATACOPY V596 S8 S9
0x67c: MISSING 0xec
0x67e: MISSING 0x5f
0x67f: CALLDATACOPY S0 S1 S2
0x680: MISSING 0xc6
0x681: MISSING 0x4e
0x683: V597 = ADDMOD S3 S0 S1
0x685: V598 = EQ S13 S2
0x686: M8[V598] = S3
0x687: MISSING 0x29
0x688: LOG S0 S1 S2 S3 S4 S5
0x689: V599 = BYTE S6 S7
0x68a: V600 = EXTCODESIZE V599
0x68b: V601 = EXTCODEHASH V600
0x68c: MISSING 0x24
0x68d: MISSING 0xde
0x68e: V602 = MUL S0 S1
0x690: MISSING 0x4a
0x691: V603 = SGT S0 S1
0x692: V604 = 0xfbaec520c1d5940029
---
Entry stack: [S2, S1, S0]
Stack pops: 5858
Stack additions: [0xfbaec520c1d5940029, V603]
Exit stack: []

================================

Function 0:
Public function signature: 0x155897cc
Entry block: 0x66
Exit block: 0x82
Body: 0x66, 0x6d, 0x6e, 0x82, 0xf9, 0x111, 0x124, 0x12b, 0x130, 0x159, 0x15a

Function 1:
Public function signature: 0x1833b7c6
Entry block: 0x84
Exit block: 0x82
Body: 0x82, 0x84, 0x8b, 0x8c, 0x15d, 0x174, 0x179, 0x1a2, 0x1a3

Function 2:
Public function signature: 0x412a5a6d
Entry block: 0xa2
Exit block: 0x82
Body: 0x82, 0xa2, 0xa9, 0xaa, 0x1a6, 0x1c0, 0x1c5, 0x1cd, 0x1e0, 0x1e1, 0x23c, 0x23d, 0x3e4

Function 3:
Public function signature: 0x62c06767
Entry block: 0xb4
Exit block: 0x82
Body: 0x82, 0xb4, 0xbb, 0xbc, 0x240, 0x25a, 0x25f, 0x282, 0x287, 0x301, 0x302, 0x30f, 0x310, 0x323, 0x378, 0x379, 0x37a

Function 4:
Public function signature: 0xd554f8b4
Entry block: 0xdb
Exit block: 0x82
Body: 0x82, 0xdb, 0xe2, 0xe3, 0x380, 0x398, 0x3ab, 0x3b2, 0x3b7, 0x3e0, 0x3e1

Function 5:
Public fallback function
Entry block: 0x64
Exit block: 0x64
Body: 0x64

