Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x56]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xaa8c217c
0x34 EQ
0x35 PUSH2 0x56
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xaa8c217c
0x34: V10 = EQ 0xaa8c217c V8
0x35: V11 = 0x56
0x38: JUMPI 0x56 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x82]
---
0x39 DUP1
0x3a PUSH4 0xeaaf5a17
0x3f EQ
0x40 PUSH2 0x82
0x43 JUMPI
---
0x3a: V12 = 0xeaaf5a17
0x3f: V13 = EQ 0xeaaf5a17 V8
0x40: V14 = 0x82
0x43: JUMPI 0x82 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4d]
---
Predecessors: [0x0, 0x44]
Successors: [0x4e]
---
0x48 JUMPDEST
0x49 CALLVALUE
0x4a PUSH2 0x2
0x4d JUMPI
---
0x48: JUMPDEST 
0x49: V16 = CALLVALUE
0x4a: V17 = 0x2
0x4d: THROWI V16
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x4e
[0x4e:0x50]
---
Predecessors: [0x48]
Successors: [0x51]
---
0x4e PUSH2 0x54
---
0x4e: V18 = 0x54
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x54]
Exit stack: [V8, 0x54]

================================

Block 0x51
[0x51:0x51]
---
Predecessors: [0x4e]
Successors: [0x52]
---
0x51 JUMPDEST
---
0x51: JUMPDEST 
---
Entry stack: [V8, 0x54]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x54]

================================

Block 0x52
[0x52:0x53]
---
Predecessors: [0x51]
Successors: [0x54]
---
0x52 JUMPDEST
0x53 JUMP
---
0x52: JUMPDEST 
0x53: JUMP 0x54
---
Entry stack: [V8, 0x54]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x54
[0x54:0x55]
---
Predecessors: [0x52]
Successors: []
---
0x54 JUMPDEST
0x55 STOP
---
0x54: JUMPDEST 
0x55: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x56
[0x56:0x5b]
---
Predecessors: [0xb]
Successors: [0x5c]
---
0x56 JUMPDEST
0x57 CALLVALUE
0x58 PUSH2 0x2
0x5b JUMPI
---
0x56: JUMPDEST 
0x57: V19 = CALLVALUE
0x58: V20 = 0x2
0x5b: THROWI V19
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x5c
[0x5c:0x67]
---
Predecessors: [0x56]
Successors: [0xf3]
---
0x5c PUSH2 0x68
0x5f PUSH1 0x4
0x61 DUP1
0x62 POP
0x63 POP
0x64 PUSH2 0xf3
0x67 JUMP
---
0x5c: V21 = 0x68
0x5f: V22 = 0x4
0x64: V23 = 0xf3
0x67: JUMP 0xf3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V8, 0x68]

================================

Block 0x68
[0x68:0x81]
---
Predecessors: [0xf3]
Successors: []
---
0x68 JUMPDEST
0x69 PUSH1 0x40
0x6b MLOAD
0x6c DUP1
0x6d DUP3
0x6e PUSH1 0x0
0x70 NOT
0x71 AND
0x72 DUP2
0x73 MSTORE
0x74 PUSH1 0x20
0x76 ADD
0x77 SWAP2
0x78 POP
0x79 POP
0x7a PUSH1 0x40
0x7c MLOAD
0x7d DUP1
0x7e SWAP2
0x7f SUB
0x80 SWAP1
0x81 RETURN
---
0x68: JUMPDEST 
0x69: V24 = 0x40
0x6b: V25 = M[0x40]
0x6e: V26 = 0x0
0x70: V27 = NOT 0x0
0x71: V28 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V71
0x73: M[V25] = V28
0x74: V29 = 0x20
0x76: V30 = ADD 0x20 V25
0x7a: V31 = 0x40
0x7c: V32 = M[0x40]
0x7f: V33 = SUB V30 V32
0x81: RETURN V32 V33
---
Entry stack: [V8, 0x68, V71]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x68]

================================

Block 0x82
[0x82:0x87]
---
Predecessors: [0x39]
Successors: [0x88]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 PUSH2 0x2
0x87 JUMPI
---
0x82: JUMPDEST 
0x83: V34 = CALLVALUE
0x84: V35 = 0x2
0x87: THROWI V34
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x88
[0x88:0xda]
---
Predecessors: [0x82]
Successors: [0xfc]
---
0x88 PUSH2 0xdb
0x8b PUSH1 0x4
0x8d DUP1
0x8e DUP1
0x8f CALLDATALOAD
0x90 SWAP1
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP1
0x95 DUP3
0x96 ADD
0x97 DUP1
0x98 CALLDATALOAD
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP2
0x9e SWAP2
0x9f SWAP1
0xa0 DUP1
0xa1 DUP1
0xa2 PUSH1 0x1f
0xa4 ADD
0xa5 PUSH1 0x20
0xa7 DUP1
0xa8 SWAP2
0xa9 DIV
0xaa MUL
0xab PUSH1 0x20
0xad ADD
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 SWAP1
0xb2 DUP2
0xb3 ADD
0xb4 PUSH1 0x40
0xb6 MSTORE
0xb7 DUP1
0xb8 SWAP4
0xb9 SWAP3
0xba SWAP2
0xbb SWAP1
0xbc DUP2
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 ADD
0xc2 DUP4
0xc3 DUP4
0xc4 DUP1
0xc5 DUP3
0xc6 DUP5
0xc7 CALLDATACOPY
0xc8 DUP3
0xc9 ADD
0xca SWAP2
0xcb POP
0xcc POP
0xcd POP
0xce POP
0xcf POP
0xd0 POP
0xd1 SWAP1
0xd2 SWAP1
0xd3 SWAP2
0xd4 SWAP1
0xd5 POP
0xd6 POP
0xd7 PUSH2 0xfc
0xda JUMP
---
0x88: V36 = 0xdb
0x8b: V37 = 0x4
0x8f: V38 = CALLDATALOAD 0x4
0x91: V39 = 0x20
0x93: V40 = ADD 0x20 0x4
0x96: V41 = ADD 0x4 V38
0x98: V42 = CALLDATALOAD V41
0x9a: V43 = 0x20
0x9c: V44 = ADD 0x20 V41
0xa2: V45 = 0x1f
0xa4: V46 = ADD 0x1f V42
0xa5: V47 = 0x20
0xa9: V48 = DIV V46 0x20
0xaa: V49 = MUL V48 0x20
0xab: V50 = 0x20
0xad: V51 = ADD 0x20 V49
0xae: V52 = 0x40
0xb0: V53 = M[0x40]
0xb3: V54 = ADD V53 V51
0xb4: V55 = 0x40
0xb6: M[0x40] = V54
0xbe: M[V53] = V42
0xbf: V56 = 0x20
0xc1: V57 = ADD 0x20 V53
0xc7: CALLDATACOPY V57 V44 V42
0xc9: V58 = ADD V57 V42
0xd7: V59 = 0xfc
0xda: JUMP 0xfc
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdb, V53]
Exit stack: [V8, 0xdb, V53]

================================

Block 0xdb
[0xdb:0xf2]
---
Predecessors: [0x1d6]
Successors: []
---
0xdb JUMPDEST
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 DUP3
0xe1 ISZERO
0xe2 ISZERO
0xe3 DUP2
0xe4 MSTORE
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP2
0xe9 POP
0xea POP
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef SWAP2
0xf0 SUB
0xf1 SWAP1
0xf2 RETURN
---
0xdb: JUMPDEST 
0xdc: V60 = 0x40
0xde: V61 = M[0x40]
0xe1: V62 = ISZERO {0x0, 0x1}
0xe2: V63 = ISZERO V62
0xe4: M[V61] = V63
0xe5: V64 = 0x20
0xe7: V65 = ADD 0x20 V61
0xeb: V66 = 0x40
0xed: V67 = M[0x40]
0xf0: V68 = SUB V65 V67
0xf2: RETURN V67 V68
---
Entry stack: [V8, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xf3
[0xf3:0xfb]
---
Predecessors: [0x5c]
Successors: [0x68]
---
0xf3 JUMPDEST
0xf4 PUSH1 0x0
0xf6 PUSH1 0x0
0xf8 POP
0xf9 SLOAD
0xfa DUP2
0xfb JUMP
---
0xf3: JUMPDEST 
0xf4: V69 = 0x0
0xf6: V70 = 0x0
0xf9: V71 = S[0x0]
0xfb: JUMP 0x68
---
Entry stack: [V8, 0x68]
Stack pops: 1
Stack additions: [S0, V71]
Exit stack: [V8, 0x68, V71]

================================

Block 0xfc
[0xfc:0x155]
---
Predecessors: [0x88]
Successors: [0x156]
---
0xfc JUMPDEST
0xfd PUSH1 0x0
0xff PUSH1 0x0
0x101 PUSH1 0x0
0x103 POP
0x104 SLOAD
0x105 PUSH1 0x0
0x107 NOT
0x108 AND
0x109 PUSH1 0x2
0x10b DUP4
0x10c PUSH1 0x0
0x10e PUSH1 0x40
0x110 MLOAD
0x111 PUSH1 0x20
0x113 ADD
0x114 MSTORE
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 DUP3
0x11a DUP1
0x11b MLOAD
0x11c SWAP1
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 DUP1
0x122 DUP4
0x123 DUP4
0x124 DUP3
0x125 SWAP1
0x126 PUSH1 0x0
0x128 PUSH1 0x4
0x12a PUSH1 0x20
0x12c DUP5
0x12d PUSH1 0x1f
0x12f ADD
0x130 DIV
0x131 PUSH1 0x3
0x133 MUL
0x134 PUSH1 0xf
0x136 ADD
0x137 CALL
0x138 POP
0x139 SWAP1
0x13a POP
0x13b ADD
0x13c SWAP2
0x13d POP
0x13e POP
0x13f PUSH1 0x20
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 DUP4
0x146 SUB
0x147 DUP2
0x148 PUSH1 0x0
0x14a DUP7
0x14b PUSH2 0x61da
0x14e GAS
0x14f SUB
0x150 CALL
0x151 ISZERO
0x152 PUSH2 0x2
0x155 JUMPI
---
0xfc: JUMPDEST 
0xfd: V72 = 0x0
0xff: V73 = 0x0
0x101: V74 = 0x0
0x104: V75 = S[0x0]
0x105: V76 = 0x0
0x107: V77 = NOT 0x0
0x108: V78 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V75
0x109: V79 = 0x2
0x10c: V80 = 0x0
0x10e: V81 = 0x40
0x110: V82 = M[0x40]
0x111: V83 = 0x20
0x113: V84 = ADD 0x20 V82
0x114: M[V84] = 0x0
0x115: V85 = 0x40
0x117: V86 = M[0x40]
0x11b: V87 = M[V53]
0x11d: V88 = 0x20
0x11f: V89 = ADD 0x20 V53
0x126: V90 = 0x0
0x128: V91 = 0x4
0x12a: V92 = 0x20
0x12d: V93 = 0x1f
0x12f: V94 = ADD 0x1f V87
0x130: V95 = DIV V94 0x20
0x131: V96 = 0x3
0x133: V97 = MUL 0x3 V95
0x134: V98 = 0xf
0x136: V99 = ADD 0xf V97
0x137: V100 = CALL V99 0x4 0x0 V89 V87 V86 V87
0x13b: V101 = ADD V87 V86
0x13f: V102 = 0x20
0x141: V103 = 0x40
0x143: V104 = M[0x40]
0x146: V105 = SUB V101 V104
0x148: V106 = 0x0
0x14b: V107 = 0x61da
0x14e: V108 = GAS
0x14f: V109 = SUB V108 0x61da
0x150: V110 = CALL V109 0x2 0x0 V104 V105 V104 0x20
0x151: V111 = ISZERO V110
0x152: V112 = 0x2
0x155: THROWI V111
---
Entry stack: [V8, 0xdb, V53]
Stack pops: 1
Stack additions: [S0, 0x0, V78, 0x2, V101]
Exit stack: [V8, 0xdb, V53, 0x0, V78, 0x2, V101]

================================

Block 0x156
[0x156:0x16b]
---
Predecessors: [0xfc]
Successors: [0x16c, 0x1cc]
---
0x156 POP
0x157 POP
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c MLOAD
0x15d SWAP1
0x15e PUSH1 0x20
0x160 ADD
0x161 POP
0x162 PUSH1 0x0
0x164 NOT
0x165 AND
0x166 EQ
0x167 ISZERO
0x168 PUSH2 0x1cc
0x16b JUMPI
---
0x158: V113 = 0x40
0x15a: V114 = M[0x40]
0x15c: V115 = M[V114]
0x15e: V116 = 0x20
0x160: V117 = ADD 0x20 V114
0x162: V118 = 0x0
0x164: V119 = NOT 0x0
0x165: V120 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V115
0x166: V121 = EQ V120 V78
0x167: V122 = ISZERO V121
0x168: V123 = 0x1cc
0x16b: JUMPI 0x1cc V122
---
Entry stack: [V8, 0xdb, V53, 0x0, V78, 0x2, V101]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0xdb, V53, 0x0]

================================

Block 0x16c
[0x16c:0x1c7]
---
Predecessors: [0x156]
Successors: [0x1d6]
---
0x16c CALLER
0x16d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182 AND
0x183 PUSH2 0x8fc
0x186 PUSH2 0x59d8
0x189 ADDRESS
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 BALANCE
0x1a1 SUB
0x1a2 SWAP1
0x1a3 DUP2
0x1a4 ISZERO
0x1a5 MUL
0x1a6 SWAP1
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa DUP1
0x1ab SWAP1
0x1ac POP
0x1ad PUSH1 0x0
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 DUP4
0x1b4 SUB
0x1b5 DUP2
0x1b6 DUP6
0x1b7 DUP9
0x1b8 DUP9
0x1b9 CALL
0x1ba SWAP4
0x1bb POP
0x1bc POP
0x1bd POP
0x1be POP
0x1bf POP
0x1c0 PUSH1 0x1
0x1c2 SWAP1
0x1c3 POP
0x1c4 PUSH2 0x1d6
0x1c7 JUMP
---
0x16c: V124 = CALLER
0x16d: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x182: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x183: V127 = 0x8fc
0x186: V128 = 0x59d8
0x189: V129 = ADDRESS
0x18a: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x1a0: V132 = BALANCE V131
0x1a1: V133 = SUB V132 0x59d8
0x1a4: V134 = ISZERO V133
0x1a5: V135 = MUL V134 0x8fc
0x1a7: V136 = 0x40
0x1a9: V137 = M[0x40]
0x1ad: V138 = 0x0
0x1af: V139 = 0x40
0x1b1: V140 = M[0x40]
0x1b4: V141 = SUB V137 V140
0x1b9: V142 = CALL V135 V126 V133 V140 V141 V140 0x0
0x1c0: V143 = 0x1
0x1c4: V144 = 0x1d6
0x1c7: JUMP 0x1d6
---
Entry stack: [V8, 0xdb, V53, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V8, 0xdb, V53, 0x1]

================================

Block 0x1c8
[0x1c8:0x1cb]
---
Predecessors: []
Successors: [0x1d5]
---
0x1c8 PUSH2 0x1d5
0x1cb JUMP
---
0x1c8: V145 = 0x1d5
0x1cb: JUMP 0x1d5
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1cc
[0x1cc:0x1d4]
---
Predecessors: [0x156]
Successors: [0x1d6]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x0
0x1cf SWAP1
0x1d0 POP
0x1d1 PUSH2 0x1d6
0x1d4 JUMP
---
0x1cc: JUMPDEST 
0x1cd: V146 = 0x0
0x1d1: V147 = 0x1d6
0x1d4: JUMP 0x1d6
---
Entry stack: [V8, 0xdb, V53, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V8, 0xdb, V53, 0x0]

================================

Block 0x1d5
[0x1d5:0x1d5]
---
Predecessors: [0x1c8]
Successors: [0x1d6]
---
0x1d5 JUMPDEST
---
0x1d5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d6
[0x1d6:0x1da]
---
Predecessors: [0x16c, 0x1cc, 0x1d5]
Successors: [0xdb]
---
0x1d6 JUMPDEST
0x1d7 SWAP2
0x1d8 SWAP1
0x1d9 POP
0x1da JUMP
---
0x1d6: JUMPDEST 
0x1da: JUMP 0xdb
---
Entry stack: [V8, 0xdb, V53, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V8, {0x0, 0x1}]

================================

Function 0:
Public function signature: 0xaa8c217c
Entry block: 0x56
Exit block: 0x68
Body: 0x56, 0x5c, 0x68, 0xf3

Function 1:
Public function signature: 0xeaaf5a17
Entry block: 0x82
Exit block: 0xdb
Body: 0x82, 0x88, 0xdb, 0xfc, 0x156, 0x16c, 0x1cc, 0x1d6

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x54
Body: 0x44, 0x48, 0x4e, 0x51, 0x52, 0x54

