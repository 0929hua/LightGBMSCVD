Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6b
0xa: JUMPI 0x6b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x154]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x146ca531
0x3a EQ
0x3b PUSH2 0x154
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x146ca531
0x3a: V12 = EQ 0x146ca531 V10
0x3b: V13 = 0x154
0x3e: JUMPI 0x154 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x17a]
---
0x3f DUP1
0x40 PUSH4 0x50f956db
0x45 EQ
0x46 PUSH2 0x17a
0x49 JUMPI
---
0x40: V14 = 0x50f956db
0x45: V15 = EQ 0x50f956db V10
0x46: V16 = 0x17a
0x49: JUMPI 0x17a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1a0]
---
0x4a DUP1
0x4b PUSH4 0x544f113b
0x50 EQ
0x51 PUSH2 0x1a0
0x54 JUMPI
---
0x4b: V17 = 0x544f113b
0x50: V18 = EQ 0x544f113b V10
0x51: V19 = 0x1a0
0x54: JUMPI 0x1a0 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1c6]
---
0x55 DUP1
0x56 PUSH4 0x8ea95cbc
0x5b EQ
0x5c PUSH2 0x1c6
0x5f JUMPI
---
0x56: V20 = 0x8ea95cbc
0x5b: V21 = EQ 0x8ea95cbc V10
0x5c: V22 = 0x1c6
0x5f: JUMPI 0x1c6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1ec]
---
0x60 DUP1
0x61 PUSH4 0xfd9f6856
0x66 EQ
0x67 PUSH2 0x1ec
0x6a JUMPI
---
0x61: V23 = 0xfd9f6856
0x66: V24 = EQ 0xfd9f6856 V10
0x67: V25 = 0x1ec
0x6a: JUMPI 0x1ec V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x0, 0x60]
Successors: [0x6f]
---
0x6b JUMPDEST
0x6c PUSH2 0x152
---
0x6b: JUMPDEST 
0x6c: V26 = 0x152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V10, 0x152]

================================

Block 0x6f
[0x6f:0x7a]
---
Predecessors: [0x6b]
Successors: [0x7b, 0x90]
---
0x6f JUMPDEST
0x70 PUSH1 0x1
0x72 PUSH1 0x0
0x74 SLOAD
0x75 EQ
0x76 ISZERO
0x77 PUSH2 0x90
0x7a JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = 0x1
0x72: V28 = 0x0
0x74: V29 = S[0x0]
0x75: V30 = EQ V29 0x1
0x76: V31 = ISZERO V30
0x77: V32 = 0x90
0x7a: JUMPI 0x90 V31
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x6f]
Successors: [0x86, 0x8b]
---
0x7b PUSH1 0x3
0x7d SLOAD
0x7e CALLVALUE
0x7f EQ
0x80 ISZERO
0x81 ISZERO
0x82 PUSH2 0x8b
0x85 JUMPI
---
0x7b: V33 = 0x3
0x7d: V34 = S[0x3]
0x7e: V35 = CALLVALUE
0x7f: V36 = EQ V35 V34
0x80: V37 = ISZERO V36
0x81: V38 = ISZERO V37
0x82: V39 = 0x8b
0x85: JUMPI 0x8b V38
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0x86
[0x86:0x8a]
---
Predecessors: [0x7b]
Successors: []
---
0x86 PUSH1 0x0
0x88 PUSH1 0x0
0x8a REVERT
---
0x86: V40 = 0x0
0x88: V41 = 0x0
0x8a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0x8b
[0x8b:0x8f]
---
Predecessors: [0x7b]
Successors: [0xf5]
---
0x8b JUMPDEST
0x8c PUSH2 0xf5
0x8f JUMP
---
0x8b: JUMPDEST 
0x8c: V42 = 0xf5
0x8f: JUMP 0xf5
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0x90
[0x90:0x98]
---
Predecessors: [0x6f]
Successors: [0x23e]
---
0x90 JUMPDEST
0x91 PUSH2 0x99
0x94 CALLVALUE
0x95 PUSH2 0x23e
0x98 JUMP
---
0x90: JUMPDEST 
0x91: V43 = 0x99
0x94: V44 = CALLVALUE
0x95: V45 = 0x23e
0x98: JUMP 0x23e
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: [0x99, V44]
Exit stack: [V10, 0x152, 0x99, V44]

================================

Block 0x99
[0x99:0xf4]
---
Predecessors: [0x253]
Successors: [0xf5]
---
0x99 JUMPDEST
0x9a PUSH1 0x1
0x9c PUSH1 0x0
0x9e SWAP1
0x9f SLOAD
0xa0 SWAP1
0xa1 PUSH2 0x100
0xa4 EXP
0xa5 SWAP1
0xa6 DIV
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2 AND
0xd3 PUSH2 0x8fc
0xd6 CALLVALUE
0xd7 SWAP1
0xd8 DUP2
0xd9 ISZERO
0xda MUL
0xdb SWAP1
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 SWAP1
0xe1 POP
0xe2 PUSH1 0x0
0xe4 PUSH1 0x40
0xe6 MLOAD
0xe7 DUP1
0xe8 DUP4
0xe9 SUB
0xea DUP2
0xeb DUP6
0xec DUP9
0xed DUP9
0xee CALL
0xef SWAP4
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
---
0x99: JUMPDEST 
0x9a: V46 = 0x1
0x9c: V47 = 0x0
0x9f: V48 = S[0x1]
0xa1: V49 = 0x100
0xa4: V50 = EXP 0x100 0x0
0xa6: V51 = DIV V48 0x1
0xa7: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xbd: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xd3: V56 = 0x8fc
0xd6: V57 = CALLVALUE
0xd9: V58 = ISZERO V57
0xda: V59 = MUL V58 0x8fc
0xdc: V60 = 0x40
0xde: V61 = M[0x40]
0xe2: V62 = 0x0
0xe4: V63 = 0x40
0xe6: V64 = M[0x40]
0xe9: V65 = SUB V61 V64
0xee: V66 = CALL V59 V55 V57 V64 V65 V64 0x0
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0xf5
[0xf5:0x14e]
---
Predecessors: [0x8b, 0x99]
Successors: [0x256]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 PUSH1 0x2
0xf9 DUP2
0xfa SWAP1
0xfb SSTORE
0xfc POP
0xfd CALLER
0xfe PUSH1 0x1
0x100 PUSH1 0x0
0x102 PUSH2 0x100
0x105 EXP
0x106 DUP2
0x107 SLOAD
0x108 DUP2
0x109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e MUL
0x11f NOT
0x120 AND
0x121 SWAP1
0x122 DUP4
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 MUL
0x13a OR
0x13b SWAP1
0x13c SSTORE
0x13d POP
0x13e PUSH1 0x2
0x140 CALLVALUE
0x141 MUL
0x142 PUSH1 0x4
0x144 DUP2
0x145 SWAP1
0x146 SSTORE
0x147 POP
0x148 PUSH2 0x14f
0x14b PUSH2 0x256
0x14e JUMP
---
0xf5: JUMPDEST 
0xf6: V67 = CALLVALUE
0xf7: V68 = 0x2
0xfb: S[0x2] = V67
0xfd: V69 = CALLER
0xfe: V70 = 0x1
0x100: V71 = 0x0
0x102: V72 = 0x100
0x105: V73 = EXP 0x100 0x0
0x107: V74 = S[0x1]
0x109: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V76 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x11f: V77 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x120: V78 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V74
0x123: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x139: V81 = MUL V80 0x1
0x13a: V82 = OR V81 V78
0x13c: S[0x1] = V82
0x13e: V83 = 0x2
0x140: V84 = CALLVALUE
0x141: V85 = MUL V84 0x2
0x142: V86 = 0x4
0x146: S[0x4] = V85
0x148: V87 = 0x14f
0x14b: V88 = 0x256
0x14e: JUMP 0x256
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: [0x14f]
Exit stack: [V10, 0x152, 0x14f]

================================

Block 0x14f
[0x14f:0x14f]
---
Predecessors: [0x263]
Successors: [0x150]
---
0x14f JUMPDEST
---
0x14f: JUMPDEST 
---
Entry stack: [V10, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0x150
[0x150:0x151]
---
Predecessors: [0x14f]
Successors: [0x152]
---
0x150 JUMPDEST
0x151 JUMP
---
0x150: JUMPDEST 
0x151: JUMP 0x152
---
Entry stack: [V10, 0x152]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x152
[0x152:0x153]
---
Predecessors: [0x150]
Successors: []
---
0x152 JUMPDEST
0x153 STOP
---
0x152: JUMPDEST 
0x153: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0xb]
Successors: [0x15b, 0x15c]
---
0x154 JUMPDEST
0x155 CALLVALUE
0x156 ISZERO
0x157 PUSH2 0x15c
0x15a JUMPI
---
0x154: JUMPDEST 
0x155: V89 = CALLVALUE
0x156: V90 = ISZERO V89
0x157: V91 = 0x15c
0x15a: JUMPI 0x15c V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15b
[0x15b:0x15b]
---
Predecessors: [0x154]
Successors: []
---
0x15b INVALID
---
0x15b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x154]
Successors: [0x265]
---
0x15c JUMPDEST
0x15d PUSH2 0x164
0x160 PUSH2 0x265
0x163 JUMP
---
0x15c: JUMPDEST 
0x15d: V92 = 0x164
0x160: V93 = 0x265
0x163: JUMP 0x265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x164]
Exit stack: [V10, 0x164]

================================

Block 0x164
[0x164:0x179]
---
Predecessors: [0x265]
Successors: []
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 DUP3
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP2
0x170 POP
0x171 POP
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 SWAP2
0x177 SUB
0x178 SWAP1
0x179 RETURN
---
0x164: JUMPDEST 
0x165: V94 = 0x40
0x167: V95 = M[0x40]
0x16b: M[V95] = V169
0x16c: V96 = 0x20
0x16e: V97 = ADD 0x20 V95
0x172: V98 = 0x40
0x174: V99 = M[0x40]
0x177: V100 = SUB V97 V99
0x179: RETURN V99 V100
---
Entry stack: [V10, 0x164, V169]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x164]

================================

Block 0x17a
[0x17a:0x180]
---
Predecessors: [0x3f]
Successors: [0x181, 0x182]
---
0x17a JUMPDEST
0x17b CALLVALUE
0x17c ISZERO
0x17d PUSH2 0x182
0x180 JUMPI
---
0x17a: JUMPDEST 
0x17b: V101 = CALLVALUE
0x17c: V102 = ISZERO V101
0x17d: V103 = 0x182
0x180: JUMPI 0x182 V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x181
[0x181:0x181]
---
Predecessors: [0x17a]
Successors: []
---
0x181 INVALID
---
0x181: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x182
[0x182:0x189]
---
Predecessors: [0x17a]
Successors: [0x26b]
---
0x182 JUMPDEST
0x183 PUSH2 0x18a
0x186 PUSH2 0x26b
0x189 JUMP
---
0x182: JUMPDEST 
0x183: V104 = 0x18a
0x186: V105 = 0x26b
0x189: JUMP 0x26b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18a]
Exit stack: [V10, 0x18a]

================================

Block 0x18a
[0x18a:0x19f]
---
Predecessors: [0x26b]
Successors: []
---
0x18a JUMPDEST
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f DUP3
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
0x197 POP
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c SWAP2
0x19d SUB
0x19e SWAP1
0x19f RETURN
---
0x18a: JUMPDEST 
0x18b: V106 = 0x40
0x18d: V107 = M[0x40]
0x191: M[V107] = V171
0x192: V108 = 0x20
0x194: V109 = ADD 0x20 V107
0x198: V110 = 0x40
0x19a: V111 = M[0x40]
0x19d: V112 = SUB V109 V111
0x19f: RETURN V111 V112
---
Entry stack: [V10, 0x18a, V171]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x18a]

================================

Block 0x1a0
[0x1a0:0x1a6]
---
Predecessors: [0x4a]
Successors: [0x1a7, 0x1a8]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 ISZERO
0x1a3 PUSH2 0x1a8
0x1a6 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V113 = CALLVALUE
0x1a2: V114 = ISZERO V113
0x1a3: V115 = 0x1a8
0x1a6: JUMPI 0x1a8 V114
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a7
[0x1a7:0x1a7]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a7 INVALID
---
0x1a7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a8
[0x1a8:0x1af]
---
Predecessors: [0x1a0]
Successors: [0x271]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x1b0
0x1ac PUSH2 0x271
0x1af JUMP
---
0x1a8: JUMPDEST 
0x1a9: V116 = 0x1b0
0x1ac: V117 = 0x271
0x1af: JUMP 0x271
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V10, 0x1b0]

================================

Block 0x1b0
[0x1b0:0x1c5]
---
Predecessors: [0x271]
Successors: []
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 DUP3
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP2
0x1bc POP
0x1bd POP
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 RETURN
---
0x1b0: JUMPDEST 
0x1b1: V118 = 0x40
0x1b3: V119 = M[0x40]
0x1b7: M[V119] = V173
0x1b8: V120 = 0x20
0x1ba: V121 = ADD 0x20 V119
0x1be: V122 = 0x40
0x1c0: V123 = M[0x40]
0x1c3: V124 = SUB V121 V123
0x1c5: RETURN V123 V124
---
Entry stack: [V10, 0x1b0, V173]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b0]

================================

Block 0x1c6
[0x1c6:0x1cc]
---
Predecessors: [0x55]
Successors: [0x1cd, 0x1ce]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x1ce
0x1cc JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V125 = CALLVALUE
0x1c8: V126 = ISZERO V125
0x1c9: V127 = 0x1ce
0x1cc: JUMPI 0x1ce V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cd
[0x1cd:0x1cd]
---
Predecessors: [0x1c6]
Successors: []
---
0x1cd INVALID
---
0x1cd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x1c6]
Successors: [0x277]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x1d6
0x1d2 PUSH2 0x277
0x1d5 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V128 = 0x1d6
0x1d2: V129 = 0x277
0x1d5: JUMP 0x277
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d6]
Exit stack: [V10, 0x1d6]

================================

Block 0x1d6
[0x1d6:0x1eb]
---
Predecessors: [0x277]
Successors: []
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db DUP3
0x1dc DUP2
0x1dd MSTORE
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 SWAP2
0x1e2 POP
0x1e3 POP
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 SWAP2
0x1e9 SUB
0x1ea SWAP1
0x1eb RETURN
---
0x1d6: JUMPDEST 
0x1d7: V130 = 0x40
0x1d9: V131 = M[0x40]
0x1dd: M[V131] = V175
0x1de: V132 = 0x20
0x1e0: V133 = ADD 0x20 V131
0x1e4: V134 = 0x40
0x1e6: V135 = M[0x40]
0x1e9: V136 = SUB V133 V135
0x1eb: RETURN V135 V136
---
Entry stack: [V10, 0x1d6, V175]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d6]

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x60]
Successors: [0x1f3, 0x1f4]
---
0x1ec JUMPDEST
0x1ed CALLVALUE
0x1ee ISZERO
0x1ef PUSH2 0x1f4
0x1f2 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V137 = CALLVALUE
0x1ee: V138 = ISZERO V137
0x1ef: V139 = 0x1f4
0x1f2: JUMPI 0x1f4 V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f3
[0x1f3:0x1f3]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f3 INVALID
---
0x1f3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1ec]
Successors: [0x27d]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x1fc
0x1f8 PUSH2 0x27d
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V140 = 0x1fc
0x1f8: V141 = 0x27d
0x1fb: JUMP 0x27d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V10, 0x1fc]

================================

Block 0x1fc
[0x1fc:0x23d]
---
Predecessors: [0x27d]
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP1
0x201 DUP3
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d AND
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 SWAP2
0x234 POP
0x235 POP
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a SWAP2
0x23b SUB
0x23c SWAP1
0x23d RETURN
---
0x1fc: JUMPDEST 
0x1fd: V142 = 0x40
0x1ff: V143 = M[0x40]
0x202: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x218: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x22f: M[V143] = V147
0x230: V148 = 0x20
0x232: V149 = ADD 0x20 V143
0x236: V150 = 0x40
0x238: V151 = M[0x40]
0x23b: V152 = SUB V149 V151
0x23d: RETURN V151 V152
---
Entry stack: [V10, 0x1fc, V183]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fc]

================================

Block 0x23e
[0x23e:0x24c]
---
Predecessors: [0x90]
Successors: [0x24d, 0x252]
---
0x23e JUMPDEST
0x23f PUSH1 0x2
0x241 PUSH1 0x2
0x243 SLOAD
0x244 MUL
0x245 DUP2
0x246 EQ
0x247 ISZERO
0x248 ISZERO
0x249 PUSH2 0x252
0x24c JUMPI
---
0x23e: JUMPDEST 
0x23f: V153 = 0x2
0x241: V154 = 0x2
0x243: V155 = S[0x2]
0x244: V156 = MUL V155 0x2
0x246: V157 = EQ V44 V156
0x247: V158 = ISZERO V157
0x248: V159 = ISZERO V158
0x249: V160 = 0x252
0x24c: JUMPI 0x252 V159
---
Entry stack: [V10, 0x152, 0x99, V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x152, 0x99, V44]

================================

Block 0x24d
[0x24d:0x251]
---
Predecessors: [0x23e]
Successors: []
---
0x24d PUSH1 0x0
0x24f PUSH1 0x0
0x251 REVERT
---
0x24d: V161 = 0x0
0x24f: V162 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V10, 0x152, 0x99, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152, 0x99, V44]

================================

Block 0x252
[0x252:0x252]
---
Predecessors: [0x23e]
Successors: [0x253]
---
0x252 JUMPDEST
---
0x252: JUMPDEST 
---
Entry stack: [V10, 0x152, 0x99, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152, 0x99, V44]

================================

Block 0x253
[0x253:0x255]
---
Predecessors: [0x252]
Successors: [0x99]
---
0x253 JUMPDEST
0x254 POP
0x255 JUMP
---
0x253: JUMPDEST 
0x255: JUMP 0x99
---
Entry stack: [V10, 0x152, 0x99, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0x256
[0x256:0x262]
---
Predecessors: [0xf5]
Successors: [0x263]
---
0x256 JUMPDEST
0x257 PUSH1 0x1
0x259 PUSH1 0x0
0x25b SLOAD
0x25c ADD
0x25d PUSH1 0x0
0x25f DUP2
0x260 SWAP1
0x261 SSTORE
0x262 POP
---
0x256: JUMPDEST 
0x257: V163 = 0x1
0x259: V164 = 0x0
0x25b: V165 = S[0x0]
0x25c: V166 = ADD V165 0x1
0x25d: V167 = 0x0
0x261: S[0x0] = V166
---
Entry stack: [V10, 0x152, 0x14f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x152, 0x14f]

================================

Block 0x263
[0x263:0x264]
---
Predecessors: [0x256]
Successors: [0x14f]
---
0x263 JUMPDEST
0x264 JUMP
---
0x263: JUMPDEST 
0x264: JUMP 0x14f
---
Entry stack: [V10, 0x152, 0x14f]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x152]

================================

Block 0x265
[0x265:0x26a]
---
Predecessors: [0x15c]
Successors: [0x164]
---
0x265 JUMPDEST
0x266 PUSH1 0x0
0x268 SLOAD
0x269 DUP2
0x26a JUMP
---
0x265: JUMPDEST 
0x266: V168 = 0x0
0x268: V169 = S[0x0]
0x26a: JUMP 0x164
---
Entry stack: [V10, 0x164]
Stack pops: 1
Stack additions: [S0, V169]
Exit stack: [V10, 0x164, V169]

================================

Block 0x26b
[0x26b:0x270]
---
Predecessors: [0x182]
Successors: [0x18a]
---
0x26b JUMPDEST
0x26c PUSH1 0x4
0x26e SLOAD
0x26f DUP2
0x270 JUMP
---
0x26b: JUMPDEST 
0x26c: V170 = 0x4
0x26e: V171 = S[0x4]
0x270: JUMP 0x18a
---
Entry stack: [V10, 0x18a]
Stack pops: 1
Stack additions: [S0, V171]
Exit stack: [V10, 0x18a, V171]

================================

Block 0x271
[0x271:0x276]
---
Predecessors: [0x1a8]
Successors: [0x1b0]
---
0x271 JUMPDEST
0x272 PUSH1 0x3
0x274 SLOAD
0x275 DUP2
0x276 JUMP
---
0x271: JUMPDEST 
0x272: V172 = 0x3
0x274: V173 = S[0x3]
0x276: JUMP 0x1b0
---
Entry stack: [V10, 0x1b0]
Stack pops: 1
Stack additions: [S0, V173]
Exit stack: [V10, 0x1b0, V173]

================================

Block 0x277
[0x277:0x27c]
---
Predecessors: [0x1ce]
Successors: [0x1d6]
---
0x277 JUMPDEST
0x278 PUSH1 0x2
0x27a SLOAD
0x27b DUP2
0x27c JUMP
---
0x277: JUMPDEST 
0x278: V174 = 0x2
0x27a: V175 = S[0x2]
0x27c: JUMP 0x1d6
---
Entry stack: [V10, 0x1d6]
Stack pops: 1
Stack additions: [S0, V175]
Exit stack: [V10, 0x1d6, V175]

================================

Block 0x27d
[0x27d:0x2a2]
---
Predecessors: [0x1f4]
Successors: [0x1fc]
---
0x27d JUMPDEST
0x27e PUSH1 0x1
0x280 PUSH1 0x0
0x282 SWAP1
0x283 SLOAD
0x284 SWAP1
0x285 PUSH2 0x100
0x288 EXP
0x289 SWAP1
0x28a DIV
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 DUP2
0x2a2 JUMP
---
0x27d: JUMPDEST 
0x27e: V176 = 0x1
0x280: V177 = 0x0
0x283: V178 = S[0x1]
0x285: V179 = 0x100
0x288: V180 = EXP 0x100 0x0
0x28a: V181 = DIV V178 0x1
0x28b: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2a2: JUMP 0x1fc
---
Entry stack: [V10, 0x1fc]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V10, 0x1fc, V183]

================================

Block 0x2a3
[0x2a3:0x2e7]
---
Predecessors: []
Successors: []
---
0x2a3 STOP
0x2a4 LOG1
0x2a5 PUSH6 0x627a7a723058
0x2ac SHA3
0x2ad AND
0x2ae LOG4
0x2af PUSH15 0x69ec3de3ed9c2ee527c313b4fa8a84
0x2bf MISSING 0x5c
0x2c0 MISSING 0xdd
0x2c1 SHL
0x2c2 MISSING 0xf
0x2c3 MISSING 0xdf
0x2c4 MISSING 0xbb
0x2c5 CODESIZE
0x2c6 DUP8
0x2c7 MISSING 0xae
0x2c8 PUSH31 0x335a8b190029
---
0x2a3: STOP 
0x2a4: LOG S0 S1 S2
0x2a5: V184 = 0x627a7a723058
0x2ac: V185 = SHA3 0x627a7a723058 S3
0x2ad: V186 = AND V185 S4
0x2ae: LOG V186 S5 S6 S7 S8 S9
0x2af: V187 = 0x69ec3de3ed9c2ee527c313b4fa8a84
0x2bf: MISSING 0x5c
0x2c0: MISSING 0xdd
0x2c1: V188 = SHL S0 S1
0x2c2: MISSING 0xf
0x2c3: MISSING 0xdf
0x2c4: MISSING 0xbb
0x2c5: V189 = CODESIZE
0x2c7: MISSING 0xae
0x2c8: V190 = 0x335a8b190029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x69ec3de3ed9c2ee527c313b4fa8a84, V188, S6, V189, S0, S1, S2, S3, S4, S5, S6, 0x335a8b190029]
Exit stack: []

================================

Function 0:
Public function signature: 0x146ca531
Entry block: 0x154
Exit block: 0x164
Body: 0x154, 0x15b, 0x15c, 0x164, 0x265

Function 1:
Public function signature: 0x50f956db
Entry block: 0x17a
Exit block: 0x18a
Body: 0x17a, 0x181, 0x182, 0x18a, 0x26b

Function 2:
Public function signature: 0x544f113b
Entry block: 0x1a0
Exit block: 0x1b0
Body: 0x1a0, 0x1a7, 0x1a8, 0x1b0, 0x271

Function 3:
Public function signature: 0x8ea95cbc
Entry block: 0x1c6
Exit block: 0x1d6
Body: 0x1c6, 0x1cd, 0x1ce, 0x1d6, 0x277

Function 4:
Public function signature: 0xfd9f6856
Entry block: 0x1ec
Exit block: 0x1fc
Body: 0x1ec, 0x1f3, 0x1f4, 0x1fc, 0x27d

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x152
Body: 0x6b, 0x6f, 0x7b, 0x86, 0x8b, 0x90, 0x99, 0xf5, 0x14f, 0x150, 0x152, 0x23e, 0x24d, 0x252, 0x253, 0x256, 0x263

