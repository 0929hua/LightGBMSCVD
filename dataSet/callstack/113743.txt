Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x56
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x56
0xa: JUMPI 0x56 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x61]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13af4035
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x61
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13af4035
0x1a: V12 = EQ V10 0x13af4035
0x1b: V13 = 0x61
0x1e: JUMPI 0x61 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa3]
---
0x1f DUP1
0x20 PUSH4 0x41c0e1b5
0x25 EQ
0x26 PUSH2 0xa3
0x29 JUMPI
---
0x20: V14 = 0x41c0e1b5
0x25: V15 = EQ 0x41c0e1b5 V10
0x26: V16 = 0xa3
0x29: JUMPI 0xa3 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xcd]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xcd
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xcd
0x34: JUMPI 0xcd V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xdf]
---
0x35 DUP1
0x36 PUSH4 0xb69ef8a8
0x3b EQ
0x3c PUSH2 0xdf
0x3f JUMPI
---
0x36: V20 = 0xb69ef8a8
0x3b: V21 = EQ 0xb69ef8a8 V10
0x3c: V22 = 0xdf
0x3f: JUMPI 0xdf V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xe8]
---
0x40 DUP1
0x41 PUSH4 0xddca3f43
0x46 EQ
0x47 PUSH2 0xe8
0x4a JUMPI
---
0x41: V23 = 0xddca3f43
0x46: V24 = EQ 0xddca3f43 V10
0x47: V25 = 0xe8
0x4a: JUMPI 0xe8 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xf1]
---
0x4b DUP1
0x4c PUSH4 0xe97dcb62
0x51 EQ
0x52 PUSH2 0xf1
0x55 JUMPI
---
0x4c: V26 = 0xe97dcb62
0x51: V27 = EQ 0xe97dcb62 V10
0x52: V28 = 0xf1
0x55: JUMPI 0xf1 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x0, 0x4b]
Successors: [0xf5]
---
0x56 JUMPDEST
0x57 PUSH2 0x127
0x5a PUSH2 0x129
0x5d PUSH2 0xf5
0x60 JUMP
---
0x56: JUMPDEST 
0x57: V29 = 0x127
0x5a: V30 = 0x129
0x5d: V31 = 0xf5
0x60: JUMP 0xf5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127, 0x129]
Exit stack: [V10, 0x127, 0x129]

================================

Block 0x61
[0x61:0x80]
---
Predecessors: [0xb]
Successors: [0x81, 0xa0]
---
0x61 JUMPDEST
0x62 PUSH2 0x127
0x65 PUSH1 0x4
0x67 CALLDATALOAD
0x68 PUSH1 0x2
0x6a SLOAD
0x6b PUSH1 0x1
0x6d PUSH1 0xa0
0x6f PUSH1 0x2
0x71 EXP
0x72 SUB
0x73 SWAP1
0x74 DUP2
0x75 AND
0x76 CALLER
0x77 SWAP2
0x78 SWAP1
0x79 SWAP2
0x7a AND
0x7b EQ
0x7c ISZERO
0x7d PUSH2 0xa0
0x80 JUMPI
---
0x61: JUMPDEST 
0x62: V32 = 0x127
0x65: V33 = 0x4
0x67: V34 = CALLDATALOAD 0x4
0x68: V35 = 0x2
0x6a: V36 = S[0x2]
0x6b: V37 = 0x1
0x6d: V38 = 0xa0
0x6f: V39 = 0x2
0x71: V40 = EXP 0x2 0xa0
0x72: V41 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x76: V43 = CALLER
0x7a: V44 = AND V43 0xffffffffffffffffffffffffffffffffffffffff
0x7b: V45 = EQ V44 V42
0x7c: V46 = ISZERO V45
0x7d: V47 = 0xa0
0x80: JUMPI 0xa0 V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127, V34]
Exit stack: [V10, 0x127, V34]

================================

Block 0x81
[0x81:0x9f]
---
Predecessors: [0x61]
Successors: [0xa0]
---
0x81 PUSH1 0x2
0x83 DUP1
0x84 SLOAD
0x85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a NOT
0x9b AND
0x9c DUP3
0x9d OR
0x9e SWAP1
0x9f SSTORE
---
0x81: V48 = 0x2
0x84: V49 = S[0x2]
0x85: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a: V51 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V52 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V49
0x9d: V53 = OR V34 V52
0x9f: S[0x2] = V53
---
Entry stack: [V10, 0x127, V34]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x127, V34]

================================

Block 0xa0
[0xa0:0xa2]
---
Predecessors: [0x61, 0x81]
Successors: [0x127]
---
0xa0 JUMPDEST
0xa1 POP
0xa2 JUMP
---
0xa0: JUMPDEST 
0xa2: JUMP 0x127
---
Entry stack: [V10, 0x127, V34]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xbf]
---
Predecessors: [0x1f]
Successors: [0xc0, 0x129]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x127
0xa7 PUSH1 0x2
0xa9 SLOAD
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 SWAP1
0xb3 DUP2
0xb4 AND
0xb5 CALLER
0xb6 SWAP2
0xb7 SWAP1
0xb8 SWAP2
0xb9 AND
0xba EQ
0xbb ISZERO
0xbc PUSH2 0x129
0xbf JUMPI
---
0xa3: JUMPDEST 
0xa4: V54 = 0x127
0xa7: V55 = 0x2
0xa9: V56 = S[0x2]
0xaa: V57 = 0x1
0xac: V58 = 0xa0
0xae: V59 = 0x2
0xb0: V60 = EXP 0x2 0xa0
0xb1: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xb5: V63 = CALLER
0xb9: V64 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xba: V65 = EQ V64 V62
0xbb: V66 = ISZERO V65
0xbc: V67 = 0x129
0xbf: JUMPI 0x129 V66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V10, 0x127]

================================

Block 0xc0
[0xc0:0xcc]
---
Predecessors: [0xa3]
Successors: []
---
0xc0 PUSH1 0x2
0xc2 SLOAD
0xc3 PUSH1 0x1
0xc5 PUSH1 0xa0
0xc7 PUSH1 0x2
0xc9 EXP
0xca SUB
0xcb AND
0xcc SELFDESTRUCT
---
0xc0: V68 = 0x2
0xc2: V69 = S[0x2]
0xc3: V70 = 0x1
0xc5: V71 = 0xa0
0xc7: V72 = 0x2
0xc9: V73 = EXP 0x2 0xa0
0xca: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xcc: SELFDESTRUCT V75
---
Entry stack: [V10, 0x127]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x127]

================================

Block 0xcd
[0xcd:0xde]
---
Predecessors: [0x2a]
Successors: [0x12b]
---
0xcd JUMPDEST
0xce PUSH2 0x12b
0xd1 PUSH1 0x2
0xd3 SLOAD
0xd4 PUSH1 0x1
0xd6 PUSH1 0xa0
0xd8 PUSH1 0x2
0xda EXP
0xdb SUB
0xdc AND
0xdd DUP2
0xde JUMP
---
0xcd: JUMPDEST 
0xce: V76 = 0x12b
0xd1: V77 = 0x2
0xd3: V78 = S[0x2]
0xd4: V79 = 0x1
0xd6: V80 = 0xa0
0xd8: V81 = 0x2
0xda: V82 = EXP 0x2 0xa0
0xdb: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0xde: JUMP 0x12b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12b, V84]
Exit stack: [V10, 0x12b, V84]

================================

Block 0xdf
[0xdf:0xe7]
---
Predecessors: [0x35]
Successors: [0x148]
---
0xdf JUMPDEST
0xe0 PUSH2 0x148
0xe3 PUSH1 0x1
0xe5 SLOAD
0xe6 DUP2
0xe7 JUMP
---
0xdf: JUMPDEST 
0xe0: V85 = 0x148
0xe3: V86 = 0x1
0xe5: V87 = S[0x1]
0xe7: JUMP 0x148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x148, V87]
Exit stack: [V10, 0x148, V87]

================================

Block 0xe8
[0xe8:0xf0]
---
Predecessors: [0x40]
Successors: [0x148]
---
0xe8 JUMPDEST
0xe9 PUSH2 0x148
0xec PUSH1 0x0
0xee SLOAD
0xef DUP2
0xf0 JUMP
---
0xe8: JUMPDEST 
0xe9: V88 = 0x148
0xec: V89 = 0x0
0xee: V90 = S[0x0]
0xf0: JUMP 0x148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x148, V90]
Exit stack: [V10, 0x148, V90]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0x4b]
Successors: [0xf5]
---
0xf1 JUMPDEST
0xf2 PUSH2 0x127
---
0xf1: JUMPDEST 
0xf2: V91 = 0x127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V10, 0x127]

================================

Block 0xf5
[0xf5:0x102]
---
Predecessors: [0x56, 0xf1]
Successors: [0x103, 0x15a]
---
0xf5 JUMPDEST
0xf6 PUSH1 0x0
0xf8 PUSH1 0x0
0xfa PUSH1 0x0
0xfc CALLVALUE
0xfd LT
0xfe ISZERO
0xff PUSH2 0x15a
0x102 JUMPI
---
0xf5: JUMPDEST 
0xf6: V92 = 0x0
0xf8: V93 = 0x0
0xfa: V94 = 0x0
0xfc: V95 = CALLVALUE
0xfd: V96 = LT V95 0x0
0xfe: V97 = ISZERO V96
0xff: V98 = 0x15a
0x102: JUMPI 0x15a V97
---
Entry stack: [V10, S1, {0x127, 0x129}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, S1, {0x127, 0x129}, 0x0, 0x0]

================================

Block 0x103
[0x103:0x126]
---
Predecessors: [0xf5]
Successors: [0x1ce]
---
0x103 PUSH1 0x40
0x105 MLOAD
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e CALLER
0x10f AND
0x110 SWAP1
0x111 DUP3
0x112 SWAP1
0x113 CALLVALUE
0x114 SWAP1
0x115 DUP3
0x116 DUP2
0x117 DUP2
0x118 DUP2
0x119 DUP6
0x11a DUP9
0x11b DUP4
0x11c CALL
0x11d SWAP4
0x11e POP
0x11f POP
0x120 POP
0x121 POP
0x122 POP
0x123 PUSH2 0x1ce
0x126 JUMP
---
0x103: V99 = 0x40
0x105: V100 = M[0x40]
0x106: V101 = 0x1
0x108: V102 = 0xa0
0x10a: V103 = 0x2
0x10c: V104 = EXP 0x2 0xa0
0x10d: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V106 = CALLER
0x10f: V107 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x113: V108 = CALLVALUE
0x11c: V109 = CALL 0x0 V107 V108 V100 0x0 V100 0x0
0x123: V110 = 0x1ce
0x126: JUMP 0x1ce
---
Entry stack: [V10, S3, {0x127, 0x129}, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S3, {0x127, 0x129}, 0x0, 0x0]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: [0xa0, 0x129, 0x1ce]
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x129
[0x129:0x12a]
---
Predecessors: [0xa3, 0x1ce]
Successors: [0x127]
---
0x129 JUMPDEST
0x12a JUMP
---
0x129: JUMPDEST 
0x12a: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x147]
---
Predecessors: [0xcd]
Successors: []
---
0x12b JUMPDEST
0x12c PUSH1 0x40
0x12e DUP1
0x12f MLOAD
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 SWAP3
0x139 SWAP1
0x13a SWAP3
0x13b AND
0x13c DUP3
0x13d MSTORE
0x13e MLOAD
0x13f SWAP1
0x140 DUP2
0x141 SWAP1
0x142 SUB
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP1
0x147 RETURN
---
0x12b: JUMPDEST 
0x12c: V111 = 0x40
0x12f: V112 = M[0x40]
0x130: V113 = 0x1
0x132: V114 = 0xa0
0x134: V115 = 0x2
0x136: V116 = EXP 0x2 0xa0
0x137: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13b: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x13d: M[V112] = V118
0x13e: V119 = M[0x40]
0x142: V120 = SUB V112 V119
0x143: V121 = 0x20
0x145: V122 = ADD 0x20 V120
0x147: RETURN V119 V122
---
Entry stack: [V10, 0x12b, V84]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12b]

================================

Block 0x148
[0x148:0x159]
---
Predecessors: [0xdf, 0xe8]
Successors: []
---
0x148 JUMPDEST
0x149 PUSH1 0x40
0x14b DUP1
0x14c MLOAD
0x14d SWAP2
0x14e DUP3
0x14f MSTORE
0x150 MLOAD
0x151 SWAP1
0x152 DUP2
0x153 SWAP1
0x154 SUB
0x155 PUSH1 0x20
0x157 ADD
0x158 SWAP1
0x159 RETURN
---
0x148: JUMPDEST 
0x149: V123 = 0x40
0x14c: V124 = M[0x40]
0x14f: M[V124] = S0
0x150: V125 = M[0x40]
0x154: V126 = SUB V124 V125
0x155: V127 = 0x20
0x157: V128 = ADD 0x20 V126
0x159: RETURN V125 V128
---
Entry stack: [V10, 0x148, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x148]

================================

Block 0x15a
[0x15a:0x18d]
---
Predecessors: [0xf5]
Successors: [0x18e]
---
0x15a JUMPDEST
0x15b PUSH1 0xa
0x15d CALLVALUE
0x15e DIV
0x15f PUSH1 0x0
0x161 DUP2
0x162 DUP2
0x163 SSTORE
0x164 PUSH1 0x2
0x166 SLOAD
0x167 PUSH1 0x40
0x169 MLOAD
0x16a PUSH1 0x1
0x16c PUSH1 0xa0
0x16e PUSH1 0x2
0x170 EXP
0x171 SUB
0x172 SWAP2
0x173 SWAP1
0x174 SWAP2
0x175 AND
0x176 SWAP3
0x177 SWAP1
0x178 DUP3
0x179 DUP2
0x17a DUP2
0x17b DUP2
0x17c DUP6
0x17d DUP9
0x17e DUP4
0x17f CALL
0x180 POP
0x181 POP
0x182 POP
0x183 DUP1
0x184 DUP1
0x185 SSTORE
0x186 SWAP3
0x187 POP
0x188 PUSH2 0x18e
0x18b SWAP1
0x18c POP
0x18d JUMP
---
0x15a: JUMPDEST 
0x15b: V129 = 0xa
0x15d: V130 = CALLVALUE
0x15e: V131 = DIV V130 0xa
0x15f: V132 = 0x0
0x163: S[0x0] = V131
0x164: V133 = 0x2
0x166: V134 = S[0x2]
0x167: V135 = 0x40
0x169: V136 = M[0x40]
0x16a: V137 = 0x1
0x16c: V138 = 0xa0
0x16e: V139 = 0x2
0x170: V140 = EXP 0x2 0xa0
0x171: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x17f: V143 = CALL 0x0 V142 V131 V136 0x0 V136 0x0
0x185: S[0x0] = 0x0
0x188: V144 = 0x18e
0x18d: JUMP 0x18e
---
Entry stack: [V10, S3, {0x127, 0x129}, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, S3, {0x127, 0x129}, 0x0, 0x0]

================================

Block 0x18e
[0x18e:0x19c]
---
Predecessors: [0x15a]
Successors: [0x19d, 0x1c5]
---
0x18e JUMPDEST
0x18f POP
0x190 TIMESTAMP
0x191 PUSH1 0x2
0x193 DUP2
0x194 MOD
0x195 PUSH1 0x0
0x197 EQ
0x198 ISZERO
0x199 PUSH2 0x1c5
0x19c JUMPI
---
0x18e: JUMPDEST 
0x190: V145 = TIMESTAMP
0x191: V146 = 0x2
0x194: V147 = MOD V145 0x2
0x195: V148 = 0x0
0x197: V149 = EQ 0x0 V147
0x198: V150 = ISZERO V149
0x199: V151 = 0x1c5
0x19c: JUMPI 0x1c5 V150
---
Entry stack: [V10, S3, {0x127, 0x129}, 0x0, 0x0]
Stack pops: 1
Stack additions: [V145]
Exit stack: [V10, S3, {0x127, 0x129}, 0x0, V145]

================================

Block 0x19d
[0x19d:0x1c4]
---
Predecessors: [0x18e]
Successors: [0x1ce]
---
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 CALLER
0x1a9 AND
0x1aa SWAP1
0x1ab PUSH1 0x0
0x1ad SWAP1
0x1ae PUSH1 0x2
0x1b0 DUP6
0x1b1 MUL
0x1b2 SWAP1
0x1b3 DUP3
0x1b4 DUP2
0x1b5 DUP2
0x1b6 DUP2
0x1b7 DUP6
0x1b8 DUP9
0x1b9 DUP4
0x1ba CALL
0x1bb SWAP4
0x1bc POP
0x1bd POP
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 PUSH2 0x1ce
0x1c4 JUMP
---
0x19d: V152 = 0x40
0x19f: V153 = M[0x40]
0x1a0: V154 = 0x1
0x1a2: V155 = 0xa0
0x1a4: V156 = 0x2
0x1a6: V157 = EXP 0x2 0xa0
0x1a7: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V159 = CALLER
0x1a9: V160 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V161 = 0x0
0x1ae: V162 = 0x2
0x1b1: V163 = MUL 0x0 0x2
0x1ba: V164 = CALL 0x0 V160 0x0 V153 0x0 V153 0x0
0x1c1: V165 = 0x1ce
0x1c4: JUMP 0x1ce
---
Entry stack: [V10, S3, {0x127, 0x129}, 0x0, V145]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S3, {0x127, 0x129}, 0x0, V145]

================================

Block 0x1c5
[0x1c5:0x1cd]
---
Predecessors: [0x18e]
Successors: [0x1ce]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x1
0x1c8 DUP1
0x1c9 SLOAD
0x1ca DUP4
0x1cb ADD
0x1cc SWAP1
0x1cd SSTORE
---
0x1c5: JUMPDEST 
0x1c6: V166 = 0x1
0x1c9: V167 = S[0x1]
0x1cb: V168 = ADD 0x0 V167
0x1cd: S[0x1] = V168
---
Entry stack: [V10, S3, {0x127, 0x129}, 0x0, V145]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S3, {0x127, 0x129}, 0x0, V145]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x103, 0x19d, 0x1c5]
Successors: [0x127, 0x129]
---
0x1ce JUMPDEST
0x1cf POP
0x1d0 POP
0x1d1 JUMP
---
0x1ce: JUMPDEST 
0x1d1: JUMP {0x127, 0x129}
---
Entry stack: [V10, S3, {0x127, 0x129}, 0x0, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x61
Exit block: 0x127
Body: 0x61, 0x81, 0xa0, 0x127

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xa3
Exit block: 0x127
Body: 0xa3, 0xc0, 0x127, 0x129

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xcd
Exit block: 0x12b
Body: 0xcd, 0x12b

Function 3:
Public function signature: 0xb69ef8a8
Entry block: 0xdf
Exit block: 0x148
Body: 0xdf, 0x148

Function 4:
Public function signature: 0xddca3f43
Entry block: 0xe8
Exit block: 0x148
Body: 0xe8, 0x148

Function 5:
Public function signature: 0xe97dcb62
Entry block: 0xf1
Exit block: 0x127
Body: 0xf1, 0xf5, 0x103, 0x127, 0x129, 0x15a, 0x18e, 0x19d, 0x1c5, 0x1ce

Function 6:
Public fallback function
Entry block: 0x56
Exit block: 0x127
Body: 0x56, 0xf5, 0x103, 0x127, 0x129, 0x15a, 0x18e, 0x19d, 0x1c5, 0x1ce

