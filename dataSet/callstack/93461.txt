Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x31]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x1f445355
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x31
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x1f445355
0x14: V9 = EQ V7 0x1f445355
0x15: V10 = 0x31
0x18: JUMPI 0x31 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0xdc]
---
0x19 DUP1
0x1a PUSH4 0x41c0e1b5
0x1f EQ
0x20 PUSH2 0xdc
0x23 JUMPI
---
0x1a: V11 = 0x41c0e1b5
0x1f: V12 = EQ 0x41c0e1b5 V7
0x20: V13 = 0xdc
0x23: JUMPI 0xdc V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x104]
---
0x24 DUP1
0x25 PUSH4 0xb5aebc80
0x2a EQ
0x2b PUSH2 0x104
0x2e JUMPI
---
0x25: V14 = 0xb5aebc80
0x2a: V15 = EQ 0xb5aebc80 V7
0x2b: V16 = 0x104
0x2e: JUMPI 0x104 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x30]
---
Predecessors: [0x24, 0xda, 0x246]
Successors: []
---
0x2f JUMPDEST
0x30 STOP
---
0x2f: JUMPDEST 
0x30: STOP 
---
Entry stack: [V7, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, S4, S3, S2, S1, S0]

================================

Block 0x31
[0x31:0xd9]
---
Predecessors: [0x0]
Successors: [0xda]
---
0x31 JUMPDEST
0x32 PUSH2 0x2f
0x35 PUSH1 0x40
0x37 DUP1
0x38 MLOAD
0x39 PUSH1 0x20
0x3b DUP1
0x3c DUP3
0x3d MSTORE
0x3e PUSH1 0x2a
0x40 SWAP1
0x41 DUP3
0x42 ADD
0x43 MSTORE
0x44 PUSH32 0x4162206a65747a742077657264656e205370656e64656e20656e74676567656e
0x65 DUP2
0x66 DUP4
0x67 ADD
0x68 MSTORE
0x69 PUSH32 0x2067656e6f6d6d656e2100000000000000000000000000000000000000000000
0x8a PUSH1 0x60
0x8c DUP3
0x8d ADD
0x8e MSTORE
0x8f SWAP1
0x90 MLOAD
0x91 PUSH32 0x9a6401321b790afb55949e7b9fcb852e8968c0a00f4360381e2ee1196b14d5b4
0xb2 SWAP2
0xb3 DUP2
0xb4 SWAP1
0xb5 SUB
0xb6 PUSH1 0x80
0xb8 ADD
0xb9 SWAP1
0xba LOG1
0xbb PUSH1 0x0
0xbd DUP1
0xbe SLOAD
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 NOT
0xd5 AND
0xd6 CALLER
0xd7 OR
0xd8 SWAP1
0xd9 SSTORE
---
0x31: JUMPDEST 
0x32: V17 = 0x2f
0x35: V18 = 0x40
0x38: V19 = M[0x40]
0x39: V20 = 0x20
0x3d: M[V19] = 0x20
0x3e: V21 = 0x2a
0x42: V22 = ADD V19 0x20
0x43: M[V22] = 0x2a
0x44: V23 = 0x4162206a65747a742077657264656e205370656e64656e20656e74676567656e
0x67: V24 = ADD 0x40 V19
0x68: M[V24] = 0x4162206a65747a742077657264656e205370656e64656e20656e74676567656e
0x69: V25 = 0x2067656e6f6d6d656e2100000000000000000000000000000000000000000000
0x8a: V26 = 0x60
0x8d: V27 = ADD V19 0x60
0x8e: M[V27] = 0x2067656e6f6d6d656e2100000000000000000000000000000000000000000000
0x90: V28 = M[0x40]
0x91: V29 = 0x9a6401321b790afb55949e7b9fcb852e8968c0a00f4360381e2ee1196b14d5b4
0xb5: V30 = SUB V19 V28
0xb6: V31 = 0x80
0xb8: V32 = ADD 0x80 V30
0xba: LOG V28 V32 0x9a6401321b790afb55949e7b9fcb852e8968c0a00f4360381e2ee1196b14d5b4
0xbb: V33 = 0x0
0xbe: V34 = S[0x0]
0xbf: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V36 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V37 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V34
0xd6: V38 = CALLER
0xd7: V39 = OR V38 V37
0xd9: S[0x0] = V39
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2f]
Exit stack: [V7, 0x2f]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: [0x31, 0xdc]
Successors: [0x2f]
---
0xda JUMPDEST
0xdb JUMP
---
0xda: JUMPDEST 
0xdb: JUMP 0x2f
---
Entry stack: [V7, 0x2f]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xdc
[0xdc:0xf6]
---
Predecessors: [0x19]
Successors: [0xda, 0xf7]
---
0xdc JUMPDEST
0xdd PUSH2 0x2f
0xe0 PUSH1 0x0
0xe2 SLOAD
0xe3 CALLER
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec SWAP1
0xed DUP2
0xee AND
0xef SWAP2
0xf0 AND
0xf1 EQ
0xf2 ISZERO
0xf3 PUSH2 0xda
0xf6 JUMPI
---
0xdc: JUMPDEST 
0xdd: V40 = 0x2f
0xe0: V41 = 0x0
0xe2: V42 = S[0x0]
0xe3: V43 = CALLER
0xe4: V44 = 0x1
0xe6: V45 = 0xa0
0xe8: V46 = 0x2
0xea: V47 = EXP 0x2 0xa0
0xeb: V48 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xf0: V50 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V51 = EQ V50 V49
0xf2: V52 = ISZERO V51
0xf3: V53 = 0xda
0xf6: JUMPI 0xda V52
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2f]
Exit stack: [V7, 0x2f]

================================

Block 0xf7
[0xf7:0x103]
---
Predecessors: [0xdc]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 SLOAD
0xfa PUSH1 0x1
0xfc PUSH1 0xa0
0xfe PUSH1 0x2
0x100 EXP
0x101 SUB
0x102 AND
0x103 SELFDESTRUCT
---
0xf7: V54 = 0x0
0xf9: V55 = S[0x0]
0xfa: V56 = 0x1
0xfc: V57 = 0xa0
0xfe: V58 = 0x2
0x100: V59 = EXP 0x2 0xa0
0x101: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0x102: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x103: SELFDESTRUCT V61
---
Entry stack: [V7, 0x2f]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x2f]

================================

Block 0x104
[0x104:0x1e8]
---
Predecessors: [0x24]
Successors: [0x1e9, 0x202]
---
0x104 JUMPDEST
0x105 PUSH2 0x2f
0x108 PUSH1 0x4
0x10a DUP1
0x10b DUP1
0x10c CALLDATALOAD
0x10d SWAP1
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP1
0x112 DUP3
0x113 ADD
0x114 DUP1
0x115 CALLDATALOAD
0x116 SWAP1
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP2
0x11b SWAP2
0x11c SWAP1
0x11d DUP1
0x11e DUP1
0x11f PUSH1 0x1f
0x121 ADD
0x122 PUSH1 0x20
0x124 DUP1
0x125 SWAP2
0x126 DIV
0x127 MUL
0x128 PUSH1 0x20
0x12a ADD
0x12b PUSH1 0x40
0x12d MLOAD
0x12e SWAP1
0x12f DUP2
0x130 ADD
0x131 PUSH1 0x40
0x133 MSTORE
0x134 DUP1
0x135 SWAP4
0x136 SWAP3
0x137 SWAP2
0x138 SWAP1
0x139 DUP2
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f DUP4
0x140 DUP4
0x141 DUP1
0x142 DUP3
0x143 DUP5
0x144 CALLDATACOPY
0x145 POP
0x146 SWAP5
0x147 SWAP7
0x148 POP
0x149 POP
0x14a POP
0x14b POP
0x14c POP
0x14d POP
0x14e POP
0x14f PUSH1 0x1
0x151 SLOAD
0x152 PUSH1 0x40
0x154 MLOAD
0x155 PUSH1 0x5f
0x157 PUSH1 0x64
0x159 CALLVALUE
0x15a DIV
0x15b MUL
0x15c SWAP2
0x15d PUSH1 0x1
0x15f PUSH1 0xa0
0x161 PUSH1 0x2
0x163 EXP
0x164 SUB
0x165 AND
0x166 SWAP1
0x167 PUSH1 0x0
0x169 SWAP1
0x16a DUP4
0x16b SWAP1
0x16c DUP3
0x16d DUP2
0x16e DUP2
0x16f DUP2
0x170 DUP6
0x171 DUP9
0x172 DUP4
0x173 CALL
0x174 SWAP4
0x175 POP
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a PUSH32 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31
0x19b DUP3
0x19c DUP3
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 DUP1
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 DUP4
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab DUP3
0x1ac DUP2
0x1ad SUB
0x1ae DUP3
0x1af MSTORE
0x1b0 DUP5
0x1b1 DUP2
0x1b2 DUP2
0x1b3 MLOAD
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 SWAP2
0x1ba POP
0x1bb DUP1
0x1bc MLOAD
0x1bd SWAP1
0x1be PUSH1 0x20
0x1c0 ADD
0x1c1 SWAP1
0x1c2 DUP1
0x1c3 DUP4
0x1c4 DUP4
0x1c5 DUP3
0x1c6 SWAP1
0x1c7 PUSH1 0x0
0x1c9 PUSH1 0x4
0x1cb PUSH1 0x20
0x1cd DUP5
0x1ce PUSH1 0x1f
0x1d0 ADD
0x1d1 DIV
0x1d2 PUSH1 0xf
0x1d4 MUL
0x1d5 PUSH1 0x3
0x1d7 ADD
0x1d8 CALL
0x1d9 POP
0x1da SWAP1
0x1db POP
0x1dc SWAP1
0x1dd DUP2
0x1de ADD
0x1df SWAP1
0x1e0 PUSH1 0x1f
0x1e2 AND
0x1e3 DUP1
0x1e4 ISZERO
0x1e5 PUSH2 0x202
0x1e8 JUMPI
---
0x104: JUMPDEST 
0x105: V62 = 0x2f
0x108: V63 = 0x4
0x10c: V64 = CALLDATALOAD 0x4
0x10e: V65 = 0x20
0x110: V66 = ADD 0x20 0x4
0x113: V67 = ADD 0x4 V64
0x115: V68 = CALLDATALOAD V67
0x117: V69 = 0x20
0x119: V70 = ADD 0x20 V67
0x11f: V71 = 0x1f
0x121: V72 = ADD 0x1f V68
0x122: V73 = 0x20
0x126: V74 = DIV V72 0x20
0x127: V75 = MUL V74 0x20
0x128: V76 = 0x20
0x12a: V77 = ADD 0x20 V75
0x12b: V78 = 0x40
0x12d: V79 = M[0x40]
0x130: V80 = ADD V79 V77
0x131: V81 = 0x40
0x133: M[0x40] = V80
0x13b: M[V79] = V68
0x13c: V82 = 0x20
0x13e: V83 = ADD 0x20 V79
0x144: CALLDATACOPY V83 V70 V68
0x14f: V84 = 0x1
0x151: V85 = S[0x1]
0x152: V86 = 0x40
0x154: V87 = M[0x40]
0x155: V88 = 0x5f
0x157: V89 = 0x64
0x159: V90 = CALLVALUE
0x15a: V91 = DIV V90 0x64
0x15b: V92 = MUL V91 0x5f
0x15d: V93 = 0x1
0x15f: V94 = 0xa0
0x161: V95 = 0x2
0x163: V96 = EXP 0x2 0xa0
0x164: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x165: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x167: V99 = 0x0
0x173: V100 = CALL 0x0 V98 V92 V87 0x0 V87 0x0
0x17a: V101 = 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31
0x19d: V102 = 0x40
0x19f: V103 = M[0x40]
0x1a2: V104 = 0x20
0x1a4: V105 = ADD 0x20 V103
0x1a7: M[V105] = V92
0x1a8: V106 = 0x20
0x1aa: V107 = ADD 0x20 V105
0x1ad: V108 = SUB V107 V103
0x1af: M[V103] = V108
0x1b3: V109 = M[V79]
0x1b5: M[V107] = V109
0x1b6: V110 = 0x20
0x1b8: V111 = ADD 0x20 V107
0x1bc: V112 = M[V79]
0x1be: V113 = 0x20
0x1c0: V114 = ADD 0x20 V79
0x1c7: V115 = 0x0
0x1c9: V116 = 0x4
0x1cb: V117 = 0x20
0x1ce: V118 = 0x1f
0x1d0: V119 = ADD 0x1f V112
0x1d1: V120 = DIV V119 0x20
0x1d2: V121 = 0xf
0x1d4: V122 = MUL 0xf V120
0x1d5: V123 = 0x3
0x1d7: V124 = ADD 0x3 V122
0x1d8: V125 = CALL V124 0x4 0x0 V114 V112 V111 V112
0x1de: V126 = ADD V112 V111
0x1e0: V127 = 0x1f
0x1e2: V128 = AND 0x1f V112
0x1e4: V129 = ISZERO V128
0x1e5: V130 = 0x202
0x1e8: JUMPI 0x202 V129
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2f, V79, V92, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V79, V92, V103, V103, V126, V128]
Exit stack: [V7, 0x2f, V79, V92, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V79, V92, V103, V103, V126, V128]

================================

Block 0x1e9
[0x1e9:0x201]
---
Predecessors: [0x104]
Successors: [0x202]
---
0x1e9 DUP1
0x1ea DUP3
0x1eb SUB
0x1ec DUP1
0x1ed MLOAD
0x1ee PUSH1 0x1
0x1f0 DUP4
0x1f1 PUSH1 0x20
0x1f3 SUB
0x1f4 PUSH2 0x100
0x1f7 EXP
0x1f8 SUB
0x1f9 NOT
0x1fa AND
0x1fb DUP2
0x1fc MSTORE
0x1fd PUSH1 0x20
0x1ff ADD
0x200 SWAP2
0x201 POP
---
0x1eb: V131 = SUB V126 V128
0x1ed: V132 = M[V131]
0x1ee: V133 = 0x1
0x1f1: V134 = 0x20
0x1f3: V135 = SUB 0x20 V128
0x1f4: V136 = 0x100
0x1f7: V137 = EXP 0x100 V135
0x1f8: V138 = SUB V137 0x1
0x1f9: V139 = NOT V138
0x1fa: V140 = AND V139 V132
0x1fc: M[V131] = V140
0x1fd: V141 = 0x20
0x1ff: V142 = ADD 0x20 V131
---
Entry stack: [V7, 0x2f, V79, V92, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V79, V92, V103, V103, V126, V128]
Stack pops: 2
Stack additions: [V142, S0]
Exit stack: [V7, 0x2f, V79, V92, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V79, V92, V103, V103, V142, V128]

================================

Block 0x202
[0x202:0x227]
---
Predecessors: [0x104, 0x1e9]
Successors: [0x228, 0x25c]
---
0x202 JUMPDEST
0x203 POP
0x204 SWAP4
0x205 POP
0x206 POP
0x207 POP
0x208 POP
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d SWAP2
0x20e SUB
0x20f SWAP1
0x210 LOG1
0x211 PUSH1 0x2
0x213 DUP1
0x214 SLOAD
0x215 PUSH1 0x1
0x217 DUP2
0x218 ADD
0x219 DUP1
0x21a DUP4
0x21b SSTORE
0x21c DUP3
0x21d DUP2
0x21e DUP4
0x21f DUP1
0x220 ISZERO
0x221 DUP3
0x222 SWAP1
0x223 GT
0x224 PUSH2 0x25c
0x227 JUMPI
---
0x202: JUMPDEST 
0x209: V143 = 0x40
0x20b: V144 = M[0x40]
0x20e: V145 = SUB S1 V144
0x210: LOG V144 V145 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31
0x211: V146 = 0x2
0x214: V147 = S[0x2]
0x215: V148 = 0x1
0x218: V149 = ADD V147 0x1
0x21b: S[0x2] = V149
0x220: V150 = ISZERO V147
0x223: V151 = GT V150 V149
0x224: V152 = 0x25c
0x227: JUMPI 0x25c V151
---
Entry stack: [V7, 0x2f, V79, V92, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V79, V92, V103, V103, S1, V128]
Stack pops: 7
Stack additions: [0x2, V147, V149, 0x2, V149, V147]
Exit stack: [V7, 0x2f, V79, V92, 0x2, V147, V149, 0x2, V149, V147]

================================

Block 0x228
[0x228:0x245]
---
Predecessors: [0x202]
Successors: [0x2eb]
---
0x228 PUSH1 0x2
0x22a MUL
0x22b DUP2
0x22c PUSH1 0x2
0x22e MUL
0x22f DUP4
0x230 PUSH1 0x0
0x232 MSTORE
0x233 PUSH1 0x20
0x235 PUSH1 0x0
0x237 SHA3
0x238 SWAP2
0x239 DUP3
0x23a ADD
0x23b SWAP2
0x23c ADD
0x23d PUSH2 0x25c
0x240 SWAP2
0x241 SWAP1
0x242 PUSH2 0x2eb
0x245 JUMP
---
0x228: V153 = 0x2
0x22a: V154 = MUL 0x2 V147
0x22c: V155 = 0x2
0x22e: V156 = MUL 0x2 V149
0x230: V157 = 0x0
0x232: M[0x0] = 0x2
0x233: V158 = 0x20
0x235: V159 = 0x0
0x237: V160 = SHA3 0x0 0x20
0x23a: V161 = ADD V160 V154
0x23c: V162 = ADD V160 V156
0x23d: V163 = 0x25c
0x242: V164 = 0x2eb
0x245: JUMP 0x2eb
---
Entry stack: [V7, 0x2f, V79, V92, 0x2, V147, V149, 0x2, V149, V147]
Stack pops: 3
Stack additions: [S2, S1, 0x25c, V161, V162]
Exit stack: [V7, 0x2f, V79, V92, 0x2, V147, V149, 0x2, V149, 0x25c, V161, V162]

================================

Block 0x246
[0x246:0x25b]
---
Predecessors: [0x34f]
Successors: [0x2f]
---
0x246 JUMPDEST
0x247 POP
0x248 POP
0x249 PUSH1 0x20
0x24b DUP3
0x24c ADD
0x24d MLOAD
0x24e DUP2
0x24f PUSH1 0x1
0x251 ADD
0x252 PUSH1 0x0
0x254 POP
0x255 SSTORE
0x256 POP
0x257 POP
0x258 POP
0x259 POP
0x25a POP
0x25b JUMP
---
0x246: JUMPDEST 
0x249: V165 = 0x20
0x24c: V166 = ADD S3 0x20
0x24d: V167 = M[V166]
0x24f: V168 = 0x1
0x251: V169 = ADD 0x1 S2
0x252: V170 = 0x0
0x255: S[V169] = V167
0x25b: JUMP S7
---
Entry stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V7, S12, S11, S10, S9, S8]

================================

Block 0x25c
[0x25c:0x2c4]
---
Predecessors: [0x202, 0x34f]
Successors: [0x2c5, 0x353]
---
0x25c JUMPDEST
0x25d POP
0x25e POP
0x25f POP
0x260 SWAP2
0x261 SWAP1
0x262 SWAP1
0x263 PUSH1 0x0
0x265 MSTORE
0x266 PUSH1 0x20
0x268 PUSH1 0x0
0x26a SHA3
0x26b SWAP1
0x26c PUSH1 0x2
0x26e MUL
0x26f ADD
0x270 PUSH1 0x0
0x272 POP
0x273 PUSH1 0x40
0x275 DUP1
0x276 MLOAD
0x277 DUP1
0x278 DUP3
0x279 ADD
0x27a SWAP1
0x27b SWAP2
0x27c MSTORE
0x27d DUP5
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x20
0x282 DUP2
0x283 DUP2
0x284 ADD
0x285 DUP6
0x286 SWAP1
0x287 MSTORE
0x288 DUP6
0x289 MLOAD
0x28a DUP4
0x28b SLOAD
0x28c PUSH1 0x0
0x28e DUP6
0x28f DUP2
0x290 MSTORE
0x291 DUP4
0x292 SWAP1
0x293 SHA3
0x294 SWAP4
0x295 SWAP5
0x296 SWAP4
0x297 DUP5
0x298 SWAP4
0x299 PUSH1 0x2
0x29b PUSH1 0x1
0x29d DUP5
0x29e AND
0x29f ISZERO
0x2a0 PUSH2 0x100
0x2a3 MUL
0x2a4 PUSH1 0x0
0x2a6 NOT
0x2a7 ADD
0x2a8 SWAP1
0x2a9 SWAP4
0x2aa AND
0x2ab SWAP3
0x2ac SWAP1
0x2ad SWAP3
0x2ae DIV
0x2af PUSH1 0x1f
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 ADD
0x2b4 DUP4
0x2b5 SWAP1
0x2b6 DIV
0x2b7 DUP3
0x2b8 ADD
0x2b9 SWAP4
0x2ba SWAP3
0x2bb DUP11
0x2bc ADD
0x2bd SWAP1
0x2be DUP4
0x2bf SWAP1
0x2c0 LT
0x2c1 PUSH2 0x353
0x2c4 JUMPI
---
0x25c: JUMPDEST 
0x263: V171 = 0x0
0x265: M[0x0] = S5
0x266: V172 = 0x20
0x268: V173 = 0x0
0x26a: V174 = SHA3 0x0 0x20
0x26c: V175 = 0x2
0x26e: V176 = MUL 0x2 S4
0x26f: V177 = ADD V176 V174
0x270: V178 = 0x0
0x273: V179 = 0x40
0x276: V180 = M[0x40]
0x279: V181 = ADD 0x40 V180
0x27c: M[0x40] = V181
0x27f: M[V180] = S7
0x280: V182 = 0x20
0x284: V183 = ADD 0x20 V180
0x287: M[V183] = S6
0x289: V184 = M[S7]
0x28b: V185 = S[V177]
0x28c: V186 = 0x0
0x290: M[0x0] = V177
0x293: V187 = SHA3 0x0 0x20
0x299: V188 = 0x2
0x29b: V189 = 0x1
0x29e: V190 = AND V185 0x1
0x29f: V191 = ISZERO V190
0x2a0: V192 = 0x100
0x2a3: V193 = MUL 0x100 V191
0x2a4: V194 = 0x0
0x2a6: V195 = NOT 0x0
0x2a7: V196 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V193
0x2aa: V197 = AND V185 V196
0x2ae: V198 = DIV V197 0x2
0x2af: V199 = 0x1f
0x2b3: V200 = ADD 0x1f V198
0x2b6: V201 = DIV V200 0x20
0x2b8: V202 = ADD V187 V201
0x2bc: V203 = ADD S7 0x20
0x2c0: V204 = LT 0x1f V184
0x2c1: V205 = 0x353
0x2c4: JUMPI 0x353 V204
---
Entry stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S3, V180, V177, V177, V202, V184, V187, V203]
Exit stack: [V7, S12, S11, S10, S9, S8, S7, S6, S3, V180, V177, V177, V202, V184, V187, V203]

================================

Block 0x2c5
[0x2c5:0x2d0]
---
Predecessors: [0x25c]
Successors: [0x2d1]
---
0x2c5 DUP1
0x2c6 MLOAD
0x2c7 PUSH1 0xff
0x2c9 NOT
0x2ca AND
0x2cb DUP4
0x2cc DUP1
0x2cd ADD
0x2ce OR
0x2cf DUP6
0x2d0 SSTORE
---
0x2c6: V206 = M[V203]
0x2c7: V207 = 0xff
0x2c9: V208 = NOT 0xff
0x2ca: V209 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V206
0x2cd: V210 = ADD V184 V184
0x2ce: V211 = OR V210 V209
0x2d0: S[V177] = V211
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, V184, V187, V203]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, V184, V187, V203]

================================

Block 0x2d1
[0x2d1:0x2dc]
---
Predecessors: [0x2c5, 0x353, 0x365]
Successors: [0x33b]
---
0x2d1 JUMPDEST
0x2d2 POP
0x2d3 PUSH2 0x246
0x2d6 SWAP3
0x2d7 SWAP2
0x2d8 POP
0x2d9 PUSH2 0x33b
0x2dc JUMP
---
0x2d1: JUMPDEST 
0x2d3: V212 = 0x246
0x2d9: V213 = 0x33b
0x2dc: JUMP 0x33b
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, S2, S1, S0]
Stack pops: 4
Stack additions: [0x246, S3, S1]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, 0x246, V202, S1]

================================

Block 0x2dd
[0x2dd:0x2ea]
---
Predecessors: [0x31c, 0x34f]
Successors: [0x2eb]
---
0x2dd JUMPDEST
0x2de POP
0x2df POP
0x2e0 PUSH1 0x0
0x2e2 PUSH1 0x1
0x2e4 SWAP2
0x2e5 SWAP1
0x2e6 SWAP2
0x2e7 ADD
0x2e8 SWAP1
0x2e9 DUP2
0x2ea SSTORE
---
0x2dd: JUMPDEST 
0x2e0: V214 = 0x0
0x2e2: V215 = 0x1
0x2e7: V216 = ADD 0x1 S2
0x2ea: S[V216] = 0x0
---
Entry stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V216]
Exit stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V216]

================================

Block 0x2eb
[0x2eb:0x2f3]
---
Predecessors: [0x228, 0x2dd]
Successors: [0x2f4, 0x34f]
---
0x2eb JUMPDEST
0x2ec DUP1
0x2ed DUP3
0x2ee GT
0x2ef ISZERO
0x2f0 PUSH2 0x34f
0x2f3 JUMPI
---
0x2eb: JUMPDEST 
0x2ee: V217 = GT S1 S0
0x2ef: V218 = ISZERO V217
0x2f0: V219 = 0x34f
0x2f3: JUMPI 0x34f V218
---
Entry stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2f4
[0x2f4:0x31b]
---
Predecessors: [0x2eb]
Successors: [0x31c, 0x321]
---
0x2f4 PUSH1 0x0
0x2f6 PUSH1 0x0
0x2f8 DUP3
0x2f9 ADD
0x2fa PUSH1 0x0
0x2fc POP
0x2fd DUP1
0x2fe SLOAD
0x2ff PUSH1 0x1
0x301 DUP2
0x302 PUSH1 0x1
0x304 AND
0x305 ISZERO
0x306 PUSH2 0x100
0x309 MUL
0x30a SUB
0x30b AND
0x30c PUSH1 0x2
0x30e SWAP1
0x30f DIV
0x310 PUSH1 0x0
0x312 DUP3
0x313 SSTORE
0x314 DUP1
0x315 PUSH1 0x1f
0x317 LT
0x318 PUSH2 0x321
0x31b JUMPI
---
0x2f4: V220 = 0x0
0x2f6: V221 = 0x0
0x2f9: V222 = ADD S0 0x0
0x2fa: V223 = 0x0
0x2fe: V224 = S[V222]
0x2ff: V225 = 0x1
0x302: V226 = 0x1
0x304: V227 = AND 0x1 V224
0x305: V228 = ISZERO V227
0x306: V229 = 0x100
0x309: V230 = MUL 0x100 V228
0x30a: V231 = SUB V230 0x1
0x30b: V232 = AND V231 V224
0x30c: V233 = 0x2
0x30f: V234 = DIV V232 0x2
0x310: V235 = 0x0
0x313: S[V222] = 0x0
0x315: V236 = 0x1f
0x317: V237 = LT 0x1f V234
0x318: V238 = 0x321
0x31b: JUMPI 0x321 V237
---
Entry stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V222, V234]
Exit stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V222, V234]

================================

Block 0x31c
[0x31c:0x320]
---
Predecessors: [0x2f4]
Successors: [0x2dd]
---
0x31c POP
0x31d PUSH2 0x2dd
0x320 JUMP
---
0x31d: V239 = 0x2dd
0x320: JUMP 0x2dd
---
Entry stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V222, V234]
Stack pops: 1
Stack additions: []
Exit stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V222]

================================

Block 0x321
[0x321:0x33a]
---
Predecessors: [0x2f4]
Successors: [0x33b]
---
0x321 JUMPDEST
0x322 PUSH1 0x1f
0x324 ADD
0x325 PUSH1 0x20
0x327 SWAP1
0x328 DIV
0x329 SWAP1
0x32a PUSH1 0x0
0x32c MSTORE
0x32d PUSH1 0x20
0x32f PUSH1 0x0
0x331 SHA3
0x332 SWAP1
0x333 DUP2
0x334 ADD
0x335 SWAP1
0x336 PUSH2 0x2dd
0x339 SWAP2
0x33a SWAP1
---
0x321: JUMPDEST 
0x322: V240 = 0x1f
0x324: V241 = ADD 0x1f V234
0x325: V242 = 0x20
0x328: V243 = DIV V241 0x20
0x32a: V244 = 0x0
0x32c: M[0x0] = V222
0x32d: V245 = 0x20
0x32f: V246 = 0x0
0x331: V247 = SHA3 0x0 0x20
0x334: V248 = ADD V247 V243
0x336: V249 = 0x2dd
---
Entry stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V222, V234]
Stack pops: 2
Stack additions: [0x2dd, V248, V247]
Exit stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x2dd, V248, V247]

================================

Block 0x33b
[0x33b:0x343]
---
Predecessors: [0x2d1, 0x321, 0x344]
Successors: [0x344, 0x34f]
---
0x33b JUMPDEST
0x33c DUP1
0x33d DUP3
0x33e GT
0x33f ISZERO
0x340 PUSH2 0x34f
0x343 JUMPI
---
0x33b: JUMPDEST 
0x33e: V250 = GT S1 S0
0x33f: V251 = ISZERO V250
0x340: V252 = 0x34f
0x343: JUMPI 0x34f V251
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x246, 0x2dd}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x246, 0x2dd}, S1, S0]

================================

Block 0x344
[0x344:0x34e]
---
Predecessors: [0x33b]
Successors: [0x33b]
---
0x344 PUSH1 0x0
0x346 DUP2
0x347 SSTORE
0x348 PUSH1 0x1
0x34a ADD
0x34b PUSH2 0x33b
0x34e JUMP
---
0x344: V253 = 0x0
0x347: S[S0] = 0x0
0x348: V254 = 0x1
0x34a: V255 = ADD 0x1 S0
0x34b: V256 = 0x33b
0x34e: JUMP 0x33b
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x246, 0x2dd}, S1, S0]
Stack pops: 1
Stack additions: [V255]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x246, 0x2dd}, S1, V255]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x2eb, 0x33b]
Successors: [0x246, 0x25c, 0x2dd]
---
0x34f JUMPDEST
0x350 POP
0x351 SWAP1
0x352 JUMP
---
0x34f: JUMPDEST 
0x352: JUMP S2
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x353
[0x353:0x361]
---
Predecessors: [0x25c]
Successors: [0x2d1, 0x362]
---
0x353 JUMPDEST
0x354 DUP3
0x355 DUP1
0x356 ADD
0x357 PUSH1 0x1
0x359 ADD
0x35a DUP6
0x35b SSTORE
0x35c DUP3
0x35d ISZERO
0x35e PUSH2 0x2d1
0x361 JUMPI
---
0x353: JUMPDEST 
0x356: V257 = ADD V184 V184
0x357: V258 = 0x1
0x359: V259 = ADD 0x1 V257
0x35b: S[V177] = V259
0x35d: V260 = ISZERO V184
0x35e: V261 = 0x2d1
0x361: JUMPI 0x2d1 V260
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, V184, V187, V203]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, V184, V187, V203]

================================

Block 0x362
[0x362:0x364]
---
Predecessors: [0x353]
Successors: [0x365]
---
0x362 SWAP2
0x363 DUP3
0x364 ADD
---
0x364: V262 = ADD V203 V184
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, V184, V187, V203]
Stack pops: 3
Stack additions: [S0, S1, V262]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, V203, V187, V262]

================================

Block 0x365
[0x365:0x36d]
---
Predecessors: [0x362, 0x36e]
Successors: [0x2d1, 0x36e]
---
0x365 JUMPDEST
0x366 DUP3
0x367 DUP2
0x368 GT
0x369 ISZERO
0x36a PUSH2 0x2d1
0x36d JUMPI
---
0x365: JUMPDEST 
0x368: V263 = GT V262 S2
0x369: V264 = ISZERO V263
0x36a: V265 = 0x2d1
0x36d: JUMPI 0x2d1 V264
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, S2, S1, V262]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, S2, S1, V262]

================================

Block 0x36e
[0x36e:0x382]
---
Predecessors: [0x365]
Successors: [0x365]
---
0x36e DUP3
0x36f MLOAD
0x370 DUP3
0x371 PUSH1 0x0
0x373 POP
0x374 SSTORE
0x375 SWAP2
0x376 PUSH1 0x20
0x378 ADD
0x379 SWAP2
0x37a SWAP1
0x37b PUSH1 0x1
0x37d ADD
0x37e SWAP1
0x37f PUSH2 0x365
0x382 JUMP
---
0x36f: V266 = M[S2]
0x371: V267 = 0x0
0x374: S[S1] = V266
0x376: V268 = 0x20
0x378: V269 = ADD 0x20 S2
0x37b: V270 = 0x1
0x37d: V271 = ADD 0x1 S1
0x37f: V272 = 0x365
0x382: JUMP 0x365
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, S2, S1, V262]
Stack pops: 3
Stack additions: [V269, V271, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V180, V177, V177, V202, V269, V271, V262]

================================

Function 0:
Public function signature: 0x1f445355
Entry block: 0x31
Exit block: 0x2f
Body: 0x2f, 0x31

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xdc
Exit block: 0x2f
Body: 0x2f, 0xdc

Function 2:
Public function signature: 0xb5aebc80
Entry block: 0x104
Exit block: 0x2f
Body: 0x2f, 0x104, 0x1e9, 0x202, 0x228, 0x2dd, 0x2eb, 0x2f4, 0x31c, 0x321

Function 3:
Public fallback function
Entry block: 0x2f
Exit block: 0x2f
Body: 0x2f

Function 4:
Private function
Entry block: 0x33b
Exit block: 0x34f
Body: 0x246, 0x25c, 0x2c5, 0x2d1, 0x2d1, 0x2d1, 0x33b, 0x344, 0x34f, 0x353, 0x362, 0x365, 0x36e

