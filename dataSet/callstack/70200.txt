Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa2]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x193b135b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa2
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x193b135b
0x3b: V13 = EQ V11 0x193b135b
0x3c: V14 = 0xa2
0x3f: JUMPI 0xa2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc3]
---
0x40 DUP1
0x41 PUSH4 0x1c02708d
0x46 EQ
0x47 PUSH2 0xc3
0x4a JUMPI
---
0x41: V15 = 0x1c02708d
0x46: V16 = EQ 0x1c02708d V11
0x47: V17 = 0xc3
0x4a: JUMPI 0xc3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xd8]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0xd8
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0xd8
0x55: JUMPI 0xd8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xed]
---
0x56 DUP1
0x57 PUSH4 0x5e572df6
0x5c EQ
0x5d PUSH2 0xed
0x60 JUMPI
---
0x57: V21 = 0x5e572df6
0x5c: V22 = EQ 0x5e572df6 V11
0x5d: V23 = 0xed
0x60: JUMPI 0xed V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x98]
---
0x61 DUP1
0x62 PUSH4 0xaa6ca808
0x67 EQ
0x68 PUSH2 0x98
0x6b JUMPI
---
0x62: V24 = 0xaa6ca808
0x67: V25 = EQ 0xaa6ca808 V11
0x68: V26 = 0x98
0x6b: JUMPI 0x98 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x105]
---
0x6c DUP1
0x6d PUSH4 0xbd814b78
0x72 EQ
0x73 PUSH2 0x105
0x76 JUMPI
---
0x6d: V27 = 0xbd814b78
0x72: V28 = EQ 0xbd814b78 V11
0x73: V29 = 0x105
0x76: JUMPI 0x105 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x126]
---
0x77 DUP1
0x78 PUSH4 0xcae539ce
0x7d EQ
0x7e PUSH2 0x126
0x81 JUMPI
---
0x78: V30 = 0xcae539ce
0x7d: V31 = EQ 0xcae539ce V11
0x7e: V32 = 0x126
0x81: JUMPI 0x126 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x13e]
---
0x82 DUP1
0x83 PUSH4 0xe58fc54c
0x88 EQ
0x89 PUSH2 0x13e
0x8c JUMPI
---
0x83: V33 = 0xe58fc54c
0x88: V34 = EQ 0xe58fc54c V11
0x89: V35 = 0x13e
0x8c: JUMPI 0x13e V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x173]
---
0x8d DUP1
0x8e PUSH4 0xf2fde38b
0x93 EQ
0x94 PUSH2 0x173
0x97 JUMPI
---
0x8e: V36 = 0xf2fde38b
0x93: V37 = EQ 0xf2fde38b V11
0x94: V38 = 0x173
0x97: JUMPI 0x173 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x0, 0x61, 0x8d]
Successors: [0x194]
---
0x98 JUMPDEST
0x99 PUSH2 0xa0
0x9c PUSH2 0x194
0x9f JUMP
---
0x98: JUMPDEST 
0x99: V39 = 0xa0
0x9c: V40 = 0x194
0x9f: JUMP 0x194
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: [0x26b, 0x288, 0x326, 0x341, 0x35d, 0x3a3, 0x54b]
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0xd]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V41 = CALLVALUE
0xa5: V42 = ISZERO V41
0xa6: V43 = 0xae
0xa9: JUMPI 0xae V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V44 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0xae
[0xae:0xc2]
---
Predecessors: [0xa2]
Successors: [0x271]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xa0
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb PUSH1 0x4
0xbd CALLDATALOAD
0xbe AND
0xbf PUSH2 0x271
0xc2 JUMP
---
0xae: JUMPDEST 
0xb0: V45 = 0xa0
0xb3: V46 = 0x1
0xb5: V47 = 0xa0
0xb7: V48 = 0x2
0xb9: V49 = EXP 0x2 0xa0
0xba: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V51 = 0x4
0xbd: V52 = CALLDATALOAD 0x4
0xbe: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V54 = 0x271
0xc2: JUMP 0x271
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0xa0, V53]
Exit stack: [V11, 0xa0, V53]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0x40]
Successors: [0xcb, 0xcf]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 DUP1
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc3: JUMPDEST 
0xc4: V55 = CALLVALUE
0xc6: V56 = ISZERO V55
0xc7: V57 = 0xcf
0xca: JUMPI 0xcf V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc3]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V58 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xcf
[0xcf:0xd7]
---
Predecessors: [0xc3]
Successors: [0x2b7]
---
0xcf JUMPDEST
0xd0 POP
0xd1 PUSH2 0xa0
0xd4 PUSH2 0x2b7
0xd7 JUMP
---
0xcf: JUMPDEST 
0xd1: V59 = 0xa0
0xd4: V60 = 0x2b7
0xd7: JUMP 0x2b7
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0x4b]
Successors: [0xe0, 0xe4]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda DUP1
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd8: JUMPDEST 
0xd9: V61 = CALLVALUE
0xdb: V62 = ISZERO V61
0xdc: V63 = 0xe4
0xdf: JUMPI 0xe4 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd8]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V64 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xe4
[0xe4:0xec]
---
Predecessors: [0xd8]
Successors: [0x2d1]
---
0xe4 JUMPDEST
0xe5 POP
0xe6 PUSH2 0xa0
0xe9 PUSH2 0x2d1
0xec JUMP
---
0xe4: JUMPDEST 
0xe6: V65 = 0xa0
0xe9: V66 = 0x2d1
0xec: JUMP 0x2d1
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0x56]
Successors: [0xf5, 0xf9]
---
0xed JUMPDEST
0xee CALLVALUE
0xef DUP1
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xed: JUMPDEST 
0xee: V67 = CALLVALUE
0xf0: V68 = ISZERO V67
0xf1: V69 = 0xf9
0xf4: JUMPI 0xf9 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xed]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V70 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xf9
[0xf9:0x104]
---
Predecessors: [0xed]
Successors: [0x32a]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH2 0xa0
0xfe PUSH1 0x4
0x100 CALLDATALOAD
0x101 PUSH2 0x32a
0x104 JUMP
---
0xf9: JUMPDEST 
0xfb: V71 = 0xa0
0xfe: V72 = 0x4
0x100: V73 = CALLDATALOAD 0x4
0x101: V74 = 0x32a
0x104: JUMP 0x32a
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0xa0, V73]
Exit stack: [V11, 0xa0, V73]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x6c]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V75 = CALLVALUE
0x108: V76 = ISZERO V75
0x109: V77 = 0x111
0x10c: JUMPI 0x111 V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V11, V75]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V78 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75]

================================

Block 0x111
[0x111:0x125]
---
Predecessors: [0x105]
Successors: [0x346]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0xa0
0x116 PUSH1 0x1
0x118 PUSH1 0xa0
0x11a PUSH1 0x2
0x11c EXP
0x11d SUB
0x11e PUSH1 0x4
0x120 CALLDATALOAD
0x121 AND
0x122 PUSH2 0x346
0x125 JUMP
---
0x111: JUMPDEST 
0x113: V79 = 0xa0
0x116: V80 = 0x1
0x118: V81 = 0xa0
0x11a: V82 = 0x2
0x11c: V83 = EXP 0x2 0xa0
0x11d: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V85 = 0x4
0x120: V86 = CALLDATALOAD 0x4
0x121: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x122: V88 = 0x346
0x125: JUMP 0x346
---
Entry stack: [V11, V75]
Stack pops: 1
Stack additions: [0xa0, V87]
Exit stack: [V11, 0xa0, V87]

================================

Block 0x126
[0x126:0x12d]
---
Predecessors: [0x77]
Successors: [0x12e, 0x132]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 DUP1
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x126: JUMPDEST 
0x127: V89 = CALLVALUE
0x129: V90 = ISZERO V89
0x12a: V91 = 0x132
0x12d: JUMPI 0x132 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x126]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V92 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x132
[0x132:0x13d]
---
Predecessors: [0x126]
Successors: [0x38c]
---
0x132 JUMPDEST
0x133 POP
0x134 PUSH2 0xa0
0x137 PUSH1 0x4
0x139 CALLDATALOAD
0x13a PUSH2 0x38c
0x13d JUMP
---
0x132: JUMPDEST 
0x134: V93 = 0xa0
0x137: V94 = 0x4
0x139: V95 = CALLDATALOAD 0x4
0x13a: V96 = 0x38c
0x13d: JUMP 0x38c
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0xa0, V95]
Exit stack: [V11, 0xa0, V95]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x82]
Successors: [0x146, 0x14a]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 DUP1
0x141 ISZERO
0x142 PUSH2 0x14a
0x145 JUMPI
---
0x13e: JUMPDEST 
0x13f: V97 = CALLVALUE
0x141: V98 = ISZERO V97
0x142: V99 = 0x14a
0x145: JUMPI 0x14a V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V97]
Exit stack: [V11, V97]

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0x13e]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V100 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V11, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V97]

================================

Block 0x14a
[0x14a:0x15e]
---
Predecessors: [0x13e]
Successors: [0x3a8]
---
0x14a JUMPDEST
0x14b POP
0x14c PUSH2 0x15f
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 PUSH1 0x4
0x159 CALLDATALOAD
0x15a AND
0x15b PUSH2 0x3a8
0x15e JUMP
---
0x14a: JUMPDEST 
0x14c: V101 = 0x15f
0x14f: V102 = 0x1
0x151: V103 = 0xa0
0x153: V104 = 0x2
0x155: V105 = EXP 0x2 0xa0
0x156: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V107 = 0x4
0x159: V108 = CALLDATALOAD 0x4
0x15a: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V110 = 0x3a8
0x15e: JUMP 0x3a8
---
Entry stack: [V11, V97]
Stack pops: 1
Stack additions: [0x15f, V109]
Exit stack: [V11, 0x15f, V109]

================================

Block 0x15f
[0x15f:0x172]
---
Predecessors: [0x4f2]
Successors: []
---
0x15f JUMPDEST
0x160 PUSH1 0x40
0x162 DUP1
0x163 MLOAD
0x164 SWAP2
0x165 ISZERO
0x166 ISZERO
0x167 DUP3
0x168 MSTORE
0x169 MLOAD
0x16a SWAP1
0x16b DUP2
0x16c SWAP1
0x16d SUB
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 RETURN
---
0x15f: JUMPDEST 
0x160: V111 = 0x40
0x163: V112 = M[0x40]
0x165: V113 = ISZERO V443
0x166: V114 = ISZERO V113
0x168: M[V112] = V114
0x169: V115 = M[0x40]
0x16d: V116 = SUB V112 V115
0x16e: V117 = 0x20
0x170: V118 = ADD 0x20 V116
0x172: RETURN V115 V118
---
Entry stack: [V11, V443]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x8d]
Successors: [0x17b, 0x17f]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 DUP1
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x173: JUMPDEST 
0x174: V119 = CALLVALUE
0x176: V120 = ISZERO V119
0x177: V121 = 0x17f
0x17a: JUMPI 0x17f V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, V119]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x173]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V122 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119]

================================

Block 0x17f
[0x17f:0x193]
---
Predecessors: [0x173]
Successors: [0x4fc]
---
0x17f JUMPDEST
0x180 POP
0x181 PUSH2 0xa0
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c PUSH1 0x4
0x18e CALLDATALOAD
0x18f AND
0x190 PUSH2 0x4fc
0x193 JUMP
---
0x17f: JUMPDEST 
0x181: V123 = 0xa0
0x184: V124 = 0x1
0x186: V125 = 0xa0
0x188: V126 = 0x2
0x18a: V127 = EXP 0x2 0xa0
0x18b: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V129 = 0x4
0x18e: V130 = CALLDATALOAD 0x4
0x18f: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x190: V132 = 0x4fc
0x193: JUMP 0x4fc
---
Entry stack: [V11, V119]
Stack pops: 1
Stack additions: [0xa0, V131]
Exit stack: [V11, 0xa0, V131]

================================

Block 0x194
[0x194:0x199]
---
Predecessors: [0x98]
Successors: [0x19a]
---
0x194 JUMPDEST
0x195 PUSH1 0x0
0x197 DUP1
0x198 DUP1
0x199 DUP1
---
0x194: JUMPDEST 
0x195: V133 = 0x0
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xa0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x19a
[0x19a:0x1a4]
---
Predecessors: [0x194, 0x1f2]
Successors: [0x1a5, 0x200]
---
0x19a JUMPDEST
0x19b PUSH1 0x4
0x19d SLOAD
0x19e DUP5
0x19f LT
0x1a0 ISZERO
0x1a1 PUSH2 0x200
0x1a4 JUMPI
---
0x19a: JUMPDEST 
0x19b: V134 = 0x4
0x19d: V135 = S[0x4]
0x19f: V136 = LT S3 V135
0x1a0: V137 = ISZERO V136
0x1a1: V138 = 0x200
0x1a4: JUMPI 0x200 V137
---
Entry stack: [V11, 0xa0, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa0, S3, S2, 0x0, 0x0]

================================

Block 0x1a5
[0x1a5:0x1be]
---
Predecessors: [0x19a]
Successors: [0x54e]
---
0x1a5 PUSH1 0x2
0x1a7 SLOAD
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab PUSH1 0x1
0x1ad PUSH1 0xa0
0x1af PUSH1 0x2
0x1b1 EXP
0x1b2 SUB
0x1b3 SWAP2
0x1b4 DUP3
0x1b5 AND
0x1b6 SWAP2
0x1b7 AND
0x1b8 PUSH2 0x1bf
0x1bb PUSH2 0x54e
0x1be JUMP
---
0x1a5: V139 = 0x2
0x1a7: V140 = S[0x2]
0x1a8: V141 = 0x1
0x1aa: V142 = S[0x1]
0x1ab: V143 = 0x1
0x1ad: V144 = 0xa0
0x1af: V145 = 0x2
0x1b1: V146 = EXP 0x2 0xa0
0x1b2: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1b7: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x1b8: V150 = 0x1bf
0x1bb: V151 = 0x54e
0x1be: JUMP 0x54e
---
Entry stack: [V11, 0xa0, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [V148, V149, 0x1bf]
Exit stack: [V11, 0xa0, S3, S2, 0x0, 0x0, V148, V149, 0x1bf]

================================

Block 0x1bf
[0x1bf:0x1e8]
---
Predecessors: [0x54e]
Successors: [0x1e9, 0x1f2]
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 SWAP3
0x1c9 DUP4
0x1ca AND
0x1cb DUP2
0x1cc MSTORE
0x1cd SWAP2
0x1ce AND
0x1cf PUSH1 0x20
0x1d1 DUP3
0x1d2 ADD
0x1d3 MSTORE
0x1d4 PUSH1 0x40
0x1d6 DUP1
0x1d7 MLOAD
0x1d8 SWAP2
0x1d9 DUP3
0x1da SWAP1
0x1db SUB
0x1dc ADD
0x1dd SWAP1
0x1de PUSH1 0x0
0x1e0 CREATE
0x1e1 DUP1
0x1e2 ISZERO
0x1e3 DUP1
0x1e4 ISZERO
0x1e5 PUSH2 0x1f2
0x1e8 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V152 = 0x1
0x1c2: V153 = 0xa0
0x1c4: V154 = 0x2
0x1c6: V155 = EXP 0x2 0xa0
0x1c7: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ca: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1cc: M[V480] = V157
0x1ce: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x1cf: V159 = 0x20
0x1d2: V160 = ADD V480 0x20
0x1d3: M[V160] = V158
0x1d4: V161 = 0x40
0x1d7: V162 = M[0x40]
0x1db: V163 = SUB V480 V162
0x1dc: V164 = ADD V163 0x40
0x1de: V165 = 0x0
0x1e0: V166 = CREATE 0x0 V162 V164
0x1e2: V167 = ISZERO V166
0x1e4: V168 = ISZERO V167
0x1e5: V169 = 0x1f2
0x1e8: JUMPI 0x1f2 V168
---
Entry stack: [V11, 0xa0, S6, S5, 0x0, 0x0, V148, V149, V480]
Stack pops: 3
Stack additions: [V166, V167]
Exit stack: [V11, 0xa0, S6, S5, 0x0, 0x0, V166, V167]

================================

Block 0x1e9
[0x1e9:0x1f1]
---
Predecessors: [0x1bf]
Successors: []
---
0x1e9 RETURNDATASIZE
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed RETURNDATACOPY
0x1ee RETURNDATASIZE
0x1ef PUSH1 0x0
0x1f1 REVERT
---
0x1e9: V170 = RETURNDATASIZE
0x1ea: V171 = 0x0
0x1ed: RETURNDATACOPY 0x0 0x0 V170
0x1ee: V172 = RETURNDATASIZE
0x1ef: V173 = 0x0
0x1f1: REVERT 0x0 V172
---
Entry stack: [V11, 0xa0, S5, S4, 0x0, 0x0, V166, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, S5, S4, 0x0, 0x0, V166, V167]

================================

Block 0x1f2
[0x1f2:0x1ff]
---
Predecessors: [0x1bf]
Successors: [0x19a]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 PUSH1 0x1
0x1f6 SWAP1
0x1f7 SWAP5
0x1f8 ADD
0x1f9 SWAP4
0x1fa SWAP3
0x1fb POP
0x1fc PUSH2 0x19a
0x1ff JUMP
---
0x1f2: JUMPDEST 
0x1f4: V174 = 0x1
0x1f8: V175 = ADD S5 0x1
0x1fc: V176 = 0x19a
0x1ff: JUMP 0x19a
---
Entry stack: [V11, 0xa0, S5, S4, 0x0, 0x0, V166, V167]
Stack pops: 6
Stack additions: [V175, S1, S3, S2]
Exit stack: [V11, 0xa0, V175, V166, 0x0, 0x0]

================================

Block 0x200
[0x200:0x204]
---
Predecessors: [0x19a]
Successors: [0x205]
---
0x200 JUMPDEST
0x201 PUSH1 0x0
0x203 SWAP2
0x204 POP
---
0x200: JUMPDEST 
0x201: V177 = 0x0
---
Entry stack: [V11, 0xa0, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0xa0, S3, S2, 0x0, 0x0]

================================

Block 0x205
[0x205:0x20f]
---
Predecessors: [0x200, 0x25d]
Successors: [0x210, 0x26b]
---
0x205 JUMPDEST
0x206 PUSH1 0x3
0x208 SLOAD
0x209 DUP3
0x20a LT
0x20b ISZERO
0x20c PUSH2 0x26b
0x20f JUMPI
---
0x205: JUMPDEST 
0x206: V178 = 0x3
0x208: V179 = S[0x3]
0x20a: V180 = LT S1 V179
0x20b: V181 = ISZERO V180
0x20c: V182 = 0x26b
0x20f: JUMPI 0x26b V181
---
Entry stack: [V11, 0xa0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa0, S3, S2, S1, S0]

================================

Block 0x210
[0x210:0x229]
---
Predecessors: [0x205]
Successors: [0x55e]
---
0x210 PUSH1 0x2
0x212 SLOAD
0x213 PUSH1 0x1
0x215 SLOAD
0x216 PUSH1 0x1
0x218 PUSH1 0xa0
0x21a PUSH1 0x2
0x21c EXP
0x21d SUB
0x21e SWAP2
0x21f DUP3
0x220 AND
0x221 SWAP2
0x222 AND
0x223 PUSH2 0x22a
0x226 PUSH2 0x55e
0x229 JUMP
---
0x210: V183 = 0x2
0x212: V184 = S[0x2]
0x213: V185 = 0x1
0x215: V186 = S[0x1]
0x216: V187 = 0x1
0x218: V188 = 0xa0
0x21a: V189 = 0x2
0x21c: V190 = EXP 0x2 0xa0
0x21d: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x222: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x223: V194 = 0x22a
0x226: V195 = 0x55e
0x229: JUMP 0x55e
---
Entry stack: [V11, 0xa0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V192, V193, 0x22a]
Exit stack: [V11, 0xa0, S3, S2, S1, S0, V192, V193, 0x22a]

================================

Block 0x22a
[0x22a:0x253]
---
Predecessors: [0x55e]
Successors: [0x254, 0x25d]
---
0x22a JUMPDEST
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 SWAP3
0x234 DUP4
0x235 AND
0x236 DUP2
0x237 MSTORE
0x238 SWAP2
0x239 AND
0x23a PUSH1 0x20
0x23c DUP3
0x23d ADD
0x23e MSTORE
0x23f PUSH1 0x40
0x241 DUP1
0x242 MLOAD
0x243 SWAP2
0x244 DUP3
0x245 SWAP1
0x246 SUB
0x247 ADD
0x248 SWAP1
0x249 PUSH1 0x0
0x24b CREATE
0x24c DUP1
0x24d ISZERO
0x24e DUP1
0x24f ISZERO
0x250 PUSH2 0x25d
0x253 JUMPI
---
0x22a: JUMPDEST 
0x22b: V196 = 0x1
0x22d: V197 = 0xa0
0x22f: V198 = 0x2
0x231: V199 = EXP 0x2 0xa0
0x232: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x237: M[V485] = V201
0x239: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x23a: V203 = 0x20
0x23d: V204 = ADD V485 0x20
0x23e: M[V204] = V202
0x23f: V205 = 0x40
0x242: V206 = M[0x40]
0x246: V207 = SUB V485 V206
0x247: V208 = ADD V207 0x40
0x249: V209 = 0x0
0x24b: V210 = CREATE 0x0 V206 V208
0x24d: V211 = ISZERO V210
0x24f: V212 = ISZERO V211
0x250: V213 = 0x25d
0x253: JUMPI 0x25d V212
---
Entry stack: [V11, 0xa0, S6, S5, S4, S3, V192, V193, V485]
Stack pops: 3
Stack additions: [V210, V211]
Exit stack: [V11, 0xa0, S6, S5, S4, S3, V210, V211]

================================

Block 0x254
[0x254:0x25c]
---
Predecessors: [0x22a]
Successors: []
---
0x254 RETURNDATASIZE
0x255 PUSH1 0x0
0x257 DUP1
0x258 RETURNDATACOPY
0x259 RETURNDATASIZE
0x25a PUSH1 0x0
0x25c REVERT
---
0x254: V214 = RETURNDATASIZE
0x255: V215 = 0x0
0x258: RETURNDATACOPY 0x0 0x0 V214
0x259: V216 = RETURNDATASIZE
0x25a: V217 = 0x0
0x25c: REVERT 0x0 V216
---
Entry stack: [V11, 0xa0, S5, S4, S3, S2, V210, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, S5, S4, S3, S2, V210, V211]

================================

Block 0x25d
[0x25d:0x26a]
---
Predecessors: [0x22a]
Successors: [0x205]
---
0x25d JUMPDEST
0x25e POP
0x25f PUSH1 0x1
0x261 SWAP1
0x262 SWAP3
0x263 ADD
0x264 SWAP2
0x265 SWAP1
0x266 POP
0x267 PUSH2 0x205
0x26a JUMP
---
0x25d: JUMPDEST 
0x25f: V218 = 0x1
0x263: V219 = ADD S3 0x1
0x267: V220 = 0x205
0x26a: JUMP 0x205
---
Entry stack: [V11, 0xa0, S5, S4, S3, S2, V210, V211]
Stack pops: 4
Stack additions: [V219, S1]
Exit stack: [V11, 0xa0, S5, S4, V219, V210]

================================

Block 0x26b
[0x26b:0x270]
---
Predecessors: [0x205]
Successors: [0xa0]
---
0x26b JUMPDEST
0x26c POP
0x26d POP
0x26e POP
0x26f POP
0x270 JUMP
---
0x26b: JUMPDEST 
0x270: JUMP 0xa0
---
Entry stack: [V11, 0xa0, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x271
[0x271:0x283]
---
Predecessors: [0xae]
Successors: [0x284, 0x288]
---
0x271 JUMPDEST
0x272 PUSH1 0x0
0x274 SLOAD
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d AND
0x27e CALLER
0x27f EQ
0x280 PUSH2 0x288
0x283 JUMPI
---
0x271: JUMPDEST 
0x272: V221 = 0x0
0x274: V222 = S[0x0]
0x275: V223 = 0x1
0x277: V224 = 0xa0
0x279: V225 = 0x2
0x27b: V226 = EXP 0x2 0xa0
0x27c: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x27e: V229 = CALLER
0x27f: V230 = EQ V229 V228
0x280: V231 = 0x288
0x283: JUMPI 0x288 V230
---
Entry stack: [V11, 0xa0, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V53]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x271]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V232 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V53]

================================

Block 0x288
[0x288:0x2b6]
---
Predecessors: [0x271]
Successors: [0xa0]
---
0x288 JUMPDEST
0x289 PUSH1 0x2
0x28b DUP1
0x28c SLOAD
0x28d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a2 NOT
0x2a3 AND
0x2a4 PUSH1 0x1
0x2a6 PUSH1 0xa0
0x2a8 PUSH1 0x2
0x2aa EXP
0x2ab SUB
0x2ac SWAP3
0x2ad SWAP1
0x2ae SWAP3
0x2af AND
0x2b0 SWAP2
0x2b1 SWAP1
0x2b2 SWAP2
0x2b3 OR
0x2b4 SWAP1
0x2b5 SSTORE
0x2b6 JUMP
---
0x288: JUMPDEST 
0x289: V233 = 0x2
0x28c: V234 = S[0x2]
0x28d: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V236 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V237 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V234
0x2a4: V238 = 0x1
0x2a6: V239 = 0xa0
0x2a8: V240 = 0x2
0x2aa: V241 = EXP 0x2 0xa0
0x2ab: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x2b3: V244 = OR V243 V237
0x2b5: S[0x2] = V244
0x2b6: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V53]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b7
[0x2b7:0x2c9]
---
Predecessors: [0xcf]
Successors: [0x2ca, 0x2ce]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba SLOAD
0x2bb PUSH1 0x1
0x2bd PUSH1 0xa0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 SUB
0x2c3 AND
0x2c4 CALLER
0x2c5 EQ
0x2c6 PUSH2 0x2ce
0x2c9 JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V245 = 0x0
0x2ba: V246 = S[0x0]
0x2bb: V247 = 0x1
0x2bd: V248 = 0xa0
0x2bf: V249 = 0x2
0x2c1: V250 = EXP 0x2 0xa0
0x2c2: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c3: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x2c4: V253 = CALLER
0x2c5: V254 = EQ V253 V252
0x2c6: V255 = 0x2ce
0x2c9: JUMPI 0x2ce V254
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x2b7]
Successors: []
---
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd REVERT
---
0x2ca: V256 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x2ce
[0x2ce:0x2d0]
---
Predecessors: [0x2b7]
Successors: []
---
0x2ce JUMPDEST
0x2cf CALLER
0x2d0 SELFDESTRUCT
---
0x2ce: JUMPDEST 
0x2cf: V257 = CALLER
0x2d0: SELFDESTRUCT V257
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x2d1
[0x2d1:0x2e4]
---
Predecessors: [0xe4]
Successors: [0x2e5, 0x2e9]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 SLOAD
0x2d6 PUSH1 0x1
0x2d8 PUSH1 0xa0
0x2da PUSH1 0x2
0x2dc EXP
0x2dd SUB
0x2de AND
0x2df CALLER
0x2e0 EQ
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V258 = 0x0
0x2d5: V259 = S[0x0]
0x2d6: V260 = 0x1
0x2d8: V261 = 0xa0
0x2da: V262 = 0x2
0x2dc: V263 = EXP 0x2 0xa0
0x2dd: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2de: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2df: V266 = CALLER
0x2e0: V267 = EQ V266 V265
0x2e1: V268 = 0x2e9
0x2e4: JUMPI 0x2e9 V267
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa0, 0x0]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2d1]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V269 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, 0x0]

================================

Block 0x2e9
[0x2e9:0x31c]
---
Predecessors: [0x2d1]
Successors: [0x31d, 0x326]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee SLOAD
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 ADDRESS
0x2f3 BALANCE
0x2f4 SWAP3
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd SWAP1
0x2fe SWAP3
0x2ff AND
0x300 SWAP2
0x301 PUSH2 0x8fc
0x304 DUP5
0x305 ISZERO
0x306 MUL
0x307 SWAP2
0x308 DUP5
0x309 SWAP2
0x30a DUP2
0x30b DUP2
0x30c DUP2
0x30d DUP6
0x30e DUP9
0x30f DUP9
0x310 CALL
0x311 SWAP4
0x312 POP
0x313 POP
0x314 POP
0x315 POP
0x316 ISZERO
0x317 DUP1
0x318 ISZERO
0x319 PUSH2 0x326
0x31c JUMPI
---
0x2e9: JUMPDEST 
0x2eb: V270 = 0x0
0x2ee: V271 = S[0x0]
0x2ef: V272 = 0x40
0x2f1: V273 = M[0x40]
0x2f2: V274 = ADDRESS
0x2f3: V275 = BALANCE V274
0x2f5: V276 = 0x1
0x2f7: V277 = 0xa0
0x2f9: V278 = 0x2
0x2fb: V279 = EXP 0x2 0xa0
0x2fc: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V281 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x301: V282 = 0x8fc
0x305: V283 = ISZERO V275
0x306: V284 = MUL V283 0x8fc
0x310: V285 = CALL V284 V281 V275 V273 0x0 V273 0x0
0x316: V286 = ISZERO V285
0x318: V287 = ISZERO V286
0x319: V288 = 0x326
0x31c: JUMPI 0x326 V287
---
Entry stack: [V11, 0xa0, 0x0]
Stack pops: 1
Stack additions: [V275, V286]
Exit stack: [V11, 0xa0, V275, V286]

================================

Block 0x31d
[0x31d:0x325]
---
Predecessors: [0x2e9]
Successors: []
---
0x31d RETURNDATASIZE
0x31e PUSH1 0x0
0x320 DUP1
0x321 RETURNDATACOPY
0x322 RETURNDATASIZE
0x323 PUSH1 0x0
0x325 REVERT
---
0x31d: V289 = RETURNDATASIZE
0x31e: V290 = 0x0
0x321: RETURNDATACOPY 0x0 0x0 V289
0x322: V291 = RETURNDATASIZE
0x323: V292 = 0x0
0x325: REVERT 0x0 V291
---
Entry stack: [V11, 0xa0, V275, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V275, V286]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x2e9]
Successors: [0xa0]
---
0x326 JUMPDEST
0x327 POP
0x328 POP
0x329 JUMP
---
0x326: JUMPDEST 
0x329: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V275, V286]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x32a
[0x32a:0x33c]
---
Predecessors: [0xf9]
Successors: [0x33d, 0x341]
---
0x32a JUMPDEST
0x32b PUSH1 0x0
0x32d SLOAD
0x32e PUSH1 0x1
0x330 PUSH1 0xa0
0x332 PUSH1 0x2
0x334 EXP
0x335 SUB
0x336 AND
0x337 CALLER
0x338 EQ
0x339 PUSH2 0x341
0x33c JUMPI
---
0x32a: JUMPDEST 
0x32b: V293 = 0x0
0x32d: V294 = S[0x0]
0x32e: V295 = 0x1
0x330: V296 = 0xa0
0x332: V297 = 0x2
0x334: V298 = EXP 0x2 0xa0
0x335: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x336: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x337: V301 = CALLER
0x338: V302 = EQ V301 V300
0x339: V303 = 0x341
0x33c: JUMPI 0x341 V302
---
Entry stack: [V11, 0xa0, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V73]

================================

Block 0x33d
[0x33d:0x340]
---
Predecessors: [0x32a]
Successors: []
---
0x33d PUSH1 0x0
0x33f DUP1
0x340 REVERT
---
0x33d: V304 = 0x0
0x340: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V73]

================================

Block 0x341
[0x341:0x345]
---
Predecessors: [0x32a]
Successors: [0xa0]
---
0x341 JUMPDEST
0x342 PUSH1 0x4
0x344 SSTORE
0x345 JUMP
---
0x341: JUMPDEST 
0x342: V305 = 0x4
0x344: S[0x4] = V73
0x345: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x346
[0x346:0x358]
---
Predecessors: [0x111]
Successors: [0x359, 0x35d]
---
0x346 JUMPDEST
0x347 PUSH1 0x0
0x349 SLOAD
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 AND
0x353 CALLER
0x354 EQ
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x346: JUMPDEST 
0x347: V306 = 0x0
0x349: V307 = S[0x0]
0x34a: V308 = 0x1
0x34c: V309 = 0xa0
0x34e: V310 = 0x2
0x350: V311 = EXP 0x2 0xa0
0x351: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x353: V314 = CALLER
0x354: V315 = EQ V314 V313
0x355: V316 = 0x35d
0x358: JUMPI 0x35d V315
---
Entry stack: [V11, 0xa0, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V87]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x346]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V317 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V87]

================================

Block 0x35d
[0x35d:0x38b]
---
Predecessors: [0x346]
Successors: [0xa0]
---
0x35d JUMPDEST
0x35e PUSH1 0x1
0x360 DUP1
0x361 SLOAD
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 NOT
0x378 AND
0x379 PUSH1 0x1
0x37b PUSH1 0xa0
0x37d PUSH1 0x2
0x37f EXP
0x380 SUB
0x381 SWAP3
0x382 SWAP1
0x383 SWAP3
0x384 AND
0x385 SWAP2
0x386 SWAP1
0x387 SWAP2
0x388 OR
0x389 SWAP1
0x38a SSTORE
0x38b JUMP
---
0x35d: JUMPDEST 
0x35e: V318 = 0x1
0x361: V319 = S[0x1]
0x362: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V321 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x378: V322 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V319
0x379: V323 = 0x1
0x37b: V324 = 0xa0
0x37d: V325 = 0x2
0x37f: V326 = EXP 0x2 0xa0
0x380: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x384: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x388: V329 = OR V328 V322
0x38a: S[0x1] = V329
0x38b: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V87]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x38c
[0x38c:0x39e]
---
Predecessors: [0x132]
Successors: [0x39f, 0x3a3]
---
0x38c JUMPDEST
0x38d PUSH1 0x0
0x38f SLOAD
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 AND
0x399 CALLER
0x39a EQ
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x38c: JUMPDEST 
0x38d: V330 = 0x0
0x38f: V331 = S[0x0]
0x390: V332 = 0x1
0x392: V333 = 0xa0
0x394: V334 = 0x2
0x396: V335 = EXP 0x2 0xa0
0x397: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x399: V338 = CALLER
0x39a: V339 = EQ V338 V337
0x39b: V340 = 0x3a3
0x39e: JUMPI 0x3a3 V339
---
Entry stack: [V11, 0xa0, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V95]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x38c]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V341 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V95]

================================

Block 0x3a3
[0x3a3:0x3a7]
---
Predecessors: [0x38c]
Successors: [0xa0]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x3
0x3a6 SSTORE
0x3a7 JUMP
---
0x3a3: JUMPDEST 
0x3a4: V342 = 0x3
0x3a6: S[0x3] = V95
0x3a7: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V95]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a8
[0x3a8:0x3bf]
---
Predecessors: [0x14a]
Successors: [0x3c0, 0x3c4]
---
0x3a8 JUMPDEST
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac SLOAD
0x3ad DUP2
0x3ae SWAP1
0x3af DUP2
0x3b0 SWAP1
0x3b1 PUSH1 0x1
0x3b3 PUSH1 0xa0
0x3b5 PUSH1 0x2
0x3b7 EXP
0x3b8 SUB
0x3b9 AND
0x3ba CALLER
0x3bb EQ
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V343 = 0x0
0x3ac: V344 = S[0x0]
0x3b1: V345 = 0x1
0x3b3: V346 = 0xa0
0x3b5: V347 = 0x2
0x3b7: V348 = EXP 0x2 0xa0
0x3b8: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b9: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x3ba: V351 = CALLER
0x3bb: V352 = EQ V351 V350
0x3bc: V353 = 0x3c4
0x3bf: JUMPI 0x3c4 V352
---
Entry stack: [V11, 0x15f, V109]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x3a8]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V354 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]

================================

Block 0x3c4
[0x3c4:0x423]
---
Predecessors: [0x3a8]
Successors: [0x424, 0x428]
---
0x3c4 JUMPDEST
0x3c5 PUSH1 0x40
0x3c7 DUP1
0x3c8 MLOAD
0x3c9 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3ea DUP2
0x3eb MSTORE
0x3ec ADDRESS
0x3ed PUSH1 0x4
0x3ef DUP3
0x3f0 ADD
0x3f1 MSTORE
0x3f2 SWAP1
0x3f3 MLOAD
0x3f4 DUP6
0x3f5 SWAP4
0x3f6 POP
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0xa0
0x3fb PUSH1 0x2
0x3fd EXP
0x3fe SUB
0x3ff DUP5
0x400 AND
0x401 SWAP2
0x402 PUSH4 0x70a08231
0x407 SWAP2
0x408 PUSH1 0x24
0x40a DUP1
0x40b DUP4
0x40c ADD
0x40d SWAP3
0x40e PUSH1 0x20
0x410 SWAP3
0x411 SWAP2
0x412 SWAP1
0x413 DUP3
0x414 SWAP1
0x415 SUB
0x416 ADD
0x417 DUP2
0x418 PUSH1 0x0
0x41a DUP8
0x41b DUP1
0x41c EXTCODESIZE
0x41d ISZERO
0x41e DUP1
0x41f ISZERO
0x420 PUSH2 0x428
0x423 JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V355 = 0x40
0x3c8: V356 = M[0x40]
0x3c9: V357 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3eb: M[V356] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3ec: V358 = ADDRESS
0x3ed: V359 = 0x4
0x3f0: V360 = ADD V356 0x4
0x3f1: M[V360] = V358
0x3f3: V361 = M[0x40]
0x3f7: V362 = 0x1
0x3f9: V363 = 0xa0
0x3fb: V364 = 0x2
0x3fd: V365 = EXP 0x2 0xa0
0x3fe: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V367 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x402: V368 = 0x70a08231
0x408: V369 = 0x24
0x40c: V370 = ADD V356 0x24
0x40e: V371 = 0x20
0x415: V372 = SUB V356 V361
0x416: V373 = ADD V372 0x24
0x418: V374 = 0x0
0x41c: V375 = EXTCODESIZE V367
0x41d: V376 = ISZERO V375
0x41f: V377 = ISZERO V376
0x420: V378 = 0x428
0x423: JUMPI 0x428 V377
---
Entry stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V367, 0x70a08231, V370, 0x20, V361, V373, V361, 0x0, V367, V376]
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, 0x20, V361, V373, V361, 0x0, V367, V376]

================================

Block 0x424
[0x424:0x427]
---
Predecessors: [0x3c4]
Successors: []
---
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
---
0x424: V379 = 0x0
0x427: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, 0x20, V361, V373, V361, 0x0, V367, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, 0x20, V361, V373, V361, 0x0, V367, V376]

================================

Block 0x428
[0x428:0x432]
---
Predecessors: [0x3c4]
Successors: [0x433, 0x43c]
---
0x428 JUMPDEST
0x429 POP
0x42a GAS
0x42b CALL
0x42c ISZERO
0x42d DUP1
0x42e ISZERO
0x42f PUSH2 0x43c
0x432 JUMPI
---
0x428: JUMPDEST 
0x42a: V380 = GAS
0x42b: V381 = CALL V380 V367 0x0 V361 V373 V361 0x20
0x42c: V382 = ISZERO V381
0x42e: V383 = ISZERO V382
0x42f: V384 = 0x43c
0x432: JUMPI 0x43c V383
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, 0x20, V361, V373, V361, 0x0, V367, V376]
Stack pops: 7
Stack additions: [V382]
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, V382]

================================

Block 0x433
[0x433:0x43b]
---
Predecessors: [0x428]
Successors: []
---
0x433 RETURNDATASIZE
0x434 PUSH1 0x0
0x436 DUP1
0x437 RETURNDATACOPY
0x438 RETURNDATASIZE
0x439 PUSH1 0x0
0x43b REVERT
---
0x433: V385 = RETURNDATASIZE
0x434: V386 = 0x0
0x437: RETURNDATACOPY 0x0 0x0 V385
0x438: V387 = RETURNDATASIZE
0x439: V388 = 0x0
0x43b: REVERT 0x0 V387
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, V382]

================================

Block 0x43c
[0x43c:0x44d]
---
Predecessors: [0x428]
Successors: [0x44e, 0x452]
---
0x43c JUMPDEST
0x43d POP
0x43e POP
0x43f POP
0x440 POP
0x441 PUSH1 0x40
0x443 MLOAD
0x444 RETURNDATASIZE
0x445 PUSH1 0x20
0x447 DUP2
0x448 LT
0x449 ISZERO
0x44a PUSH2 0x452
0x44d JUMPI
---
0x43c: JUMPDEST 
0x441: V389 = 0x40
0x443: V390 = M[0x40]
0x444: V391 = RETURNDATASIZE
0x445: V392 = 0x20
0x448: V393 = LT V391 0x20
0x449: V394 = ISZERO V393
0x44a: V395 = 0x452
0x44d: JUMPI 0x452 V394
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V367, 0x70a08231, V370, V382]
Stack pops: 4
Stack additions: [V390, V391]
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V390, V391]

================================

Block 0x44e
[0x44e:0x451]
---
Predecessors: [0x43c]
Successors: []
---
0x44e PUSH1 0x0
0x450 DUP1
0x451 REVERT
---
0x44e: V396 = 0x0
0x451: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V390, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V390, V391]

================================

Block 0x452
[0x452:0x4c3]
---
Predecessors: [0x43c]
Successors: [0x4c4, 0x4c8]
---
0x452 JUMPDEST
0x453 POP
0x454 MLOAD
0x455 PUSH1 0x0
0x457 DUP1
0x458 SLOAD
0x459 PUSH1 0x40
0x45b DUP1
0x45c MLOAD
0x45d PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x47e DUP2
0x47f MSTORE
0x480 PUSH1 0x1
0x482 PUSH1 0xa0
0x484 PUSH1 0x2
0x486 EXP
0x487 SUB
0x488 SWAP3
0x489 DUP4
0x48a AND
0x48b PUSH1 0x4
0x48d DUP3
0x48e ADD
0x48f MSTORE
0x490 PUSH1 0x24
0x492 DUP2
0x493 ADD
0x494 DUP6
0x495 SWAP1
0x496 MSTORE
0x497 SWAP1
0x498 MLOAD
0x499 SWAP4
0x49a SWAP5
0x49b POP
0x49c SWAP1
0x49d DUP6
0x49e AND
0x49f SWAP3
0x4a0 PUSH4 0xa9059cbb
0x4a5 SWAP3
0x4a6 PUSH1 0x44
0x4a8 DUP1
0x4a9 DUP5
0x4aa ADD
0x4ab SWAP4
0x4ac PUSH1 0x20
0x4ae SWAP4
0x4af SWAP3
0x4b0 SWAP1
0x4b1 DUP4
0x4b2 SWAP1
0x4b3 SUB
0x4b4 SWAP1
0x4b5 SWAP2
0x4b6 ADD
0x4b7 SWAP1
0x4b8 DUP3
0x4b9 SWAP1
0x4ba DUP8
0x4bb DUP1
0x4bc EXTCODESIZE
0x4bd ISZERO
0x4be DUP1
0x4bf ISZERO
0x4c0 PUSH2 0x4c8
0x4c3 JUMPI
---
0x452: JUMPDEST 
0x454: V397 = M[V390]
0x455: V398 = 0x0
0x458: V399 = S[0x0]
0x459: V400 = 0x40
0x45c: V401 = M[0x40]
0x45d: V402 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x47f: M[V401] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x480: V403 = 0x1
0x482: V404 = 0xa0
0x484: V405 = 0x2
0x486: V406 = EXP 0x2 0xa0
0x487: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48a: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x48b: V409 = 0x4
0x48e: V410 = ADD V401 0x4
0x48f: M[V410] = V408
0x490: V411 = 0x24
0x493: V412 = ADD V401 0x24
0x496: M[V412] = V397
0x498: V413 = M[0x40]
0x49e: V414 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V415 = 0xa9059cbb
0x4a6: V416 = 0x44
0x4aa: V417 = ADD V401 0x44
0x4ac: V418 = 0x20
0x4b3: V419 = SUB V401 V413
0x4b6: V420 = ADD 0x44 V419
0x4bc: V421 = EXTCODESIZE V414
0x4bd: V422 = ISZERO V421
0x4bf: V423 = ISZERO V422
0x4c0: V424 = 0x4c8
0x4c3: JUMPI 0x4c8 V423
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V390, V391]
Stack pops: 4
Stack additions: [S3, V397, V414, 0xa9059cbb, V417, 0x20, V413, V420, V413, 0x0, V414, V422]
Exit stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, 0x20, V413, V420, V413, 0x0, V414, V422]

================================

Block 0x4c4
[0x4c4:0x4c7]
---
Predecessors: [0x452]
Successors: []
---
0x4c4 PUSH1 0x0
0x4c6 DUP1
0x4c7 REVERT
---
0x4c4: V425 = 0x0
0x4c7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, 0x20, V413, V420, V413, 0x0, V414, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, 0x20, V413, V420, V413, 0x0, V414, V422]

================================

Block 0x4c8
[0x4c8:0x4d2]
---
Predecessors: [0x452]
Successors: [0x4d3, 0x4dc]
---
0x4c8 JUMPDEST
0x4c9 POP
0x4ca GAS
0x4cb CALL
0x4cc ISZERO
0x4cd DUP1
0x4ce ISZERO
0x4cf PUSH2 0x4dc
0x4d2 JUMPI
---
0x4c8: JUMPDEST 
0x4ca: V426 = GAS
0x4cb: V427 = CALL V426 V414 0x0 V413 V420 V413 0x20
0x4cc: V428 = ISZERO V427
0x4ce: V429 = ISZERO V428
0x4cf: V430 = 0x4dc
0x4d2: JUMPI 0x4dc V429
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, 0x20, V413, V420, V413, 0x0, V414, V422]
Stack pops: 7
Stack additions: [V428]
Exit stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, V428]

================================

Block 0x4d3
[0x4d3:0x4db]
---
Predecessors: [0x4c8]
Successors: []
---
0x4d3 RETURNDATASIZE
0x4d4 PUSH1 0x0
0x4d6 DUP1
0x4d7 RETURNDATACOPY
0x4d8 RETURNDATASIZE
0x4d9 PUSH1 0x0
0x4db REVERT
---
0x4d3: V431 = RETURNDATASIZE
0x4d4: V432 = 0x0
0x4d7: RETURNDATACOPY 0x0 0x0 V431
0x4d8: V433 = RETURNDATASIZE
0x4d9: V434 = 0x0
0x4db: REVERT 0x0 V433
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, V428]

================================

Block 0x4dc
[0x4dc:0x4ed]
---
Predecessors: [0x4c8]
Successors: [0x4ee, 0x4f2]
---
0x4dc JUMPDEST
0x4dd POP
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 PUSH1 0x40
0x4e3 MLOAD
0x4e4 RETURNDATASIZE
0x4e5 PUSH1 0x20
0x4e7 DUP2
0x4e8 LT
0x4e9 ISZERO
0x4ea PUSH2 0x4f2
0x4ed JUMPI
---
0x4dc: JUMPDEST 
0x4e1: V435 = 0x40
0x4e3: V436 = M[0x40]
0x4e4: V437 = RETURNDATASIZE
0x4e5: V438 = 0x20
0x4e8: V439 = LT V437 0x20
0x4e9: V440 = ISZERO V439
0x4ea: V441 = 0x4f2
0x4ed: JUMPI 0x4f2 V440
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V397, V414, 0xa9059cbb, V417, V428]
Stack pops: 4
Stack additions: [V436, V437]
Exit stack: [V11, 0x15f, V109, 0x0, V109, V397, V436, V437]

================================

Block 0x4ee
[0x4ee:0x4f1]
---
Predecessors: [0x4dc]
Successors: []
---
0x4ee PUSH1 0x0
0x4f0 DUP1
0x4f1 REVERT
---
0x4ee: V442 = 0x0
0x4f1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V397, V436, V437]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, V397, V436, V437]

================================

Block 0x4f2
[0x4f2:0x4fb]
---
Predecessors: [0x4dc]
Successors: [0x15f]
---
0x4f2 JUMPDEST
0x4f3 POP
0x4f4 MLOAD
0x4f5 SWAP5
0x4f6 SWAP4
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa POP
0x4fb JUMP
---
0x4f2: JUMPDEST 
0x4f4: V443 = M[V436]
0x4fb: JUMP 0x15f
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V397, V436, V437]
Stack pops: 7
Stack additions: [V443]
Exit stack: [V11, V443]

================================

Block 0x4fc
[0x4fc:0x50e]
---
Predecessors: [0x17f]
Successors: [0x50f, 0x513]
---
0x4fc JUMPDEST
0x4fd PUSH1 0x0
0x4ff SLOAD
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 AND
0x509 CALLER
0x50a EQ
0x50b PUSH2 0x513
0x50e JUMPI
---
0x4fc: JUMPDEST 
0x4fd: V444 = 0x0
0x4ff: V445 = S[0x0]
0x500: V446 = 0x1
0x502: V447 = 0xa0
0x504: V448 = 0x2
0x506: V449 = EXP 0x2 0xa0
0x507: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x509: V452 = CALLER
0x50a: V453 = EQ V452 V451
0x50b: V454 = 0x513
0x50e: JUMPI 0x513 V453
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V131]

================================

Block 0x50f
[0x50f:0x512]
---
Predecessors: [0x4fc]
Successors: []
---
0x50f PUSH1 0x0
0x511 DUP1
0x512 REVERT
---
0x50f: V455 = 0x0
0x512: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V131]

================================

Block 0x513
[0x513:0x522]
---
Predecessors: [0x4fc]
Successors: [0x523, 0x54b]
---
0x513 JUMPDEST
0x514 PUSH1 0x1
0x516 PUSH1 0xa0
0x518 PUSH1 0x2
0x51a EXP
0x51b SUB
0x51c DUP2
0x51d AND
0x51e ISZERO
0x51f PUSH2 0x54b
0x522 JUMPI
---
0x513: JUMPDEST 
0x514: V456 = 0x1
0x516: V457 = 0xa0
0x518: V458 = 0x2
0x51a: V459 = EXP 0x2 0xa0
0x51b: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51d: V461 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x51e: V462 = ISZERO V461
0x51f: V463 = 0x54b
0x522: JUMPI 0x54b V462
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa0, V131]

================================

Block 0x523
[0x523:0x54a]
---
Predecessors: [0x513]
Successors: [0x54b]
---
0x523 PUSH1 0x0
0x525 DUP1
0x526 SLOAD
0x527 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53c NOT
0x53d AND
0x53e PUSH1 0x1
0x540 PUSH1 0xa0
0x542 PUSH1 0x2
0x544 EXP
0x545 SUB
0x546 DUP4
0x547 AND
0x548 OR
0x549 SWAP1
0x54a SSTORE
---
0x523: V464 = 0x0
0x526: V465 = S[0x0]
0x527: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x53c: V467 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x53d: V468 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V465
0x53e: V469 = 0x1
0x540: V470 = 0xa0
0x542: V471 = 0x2
0x544: V472 = EXP 0x2 0xa0
0x545: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x547: V474 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x548: V475 = OR V474 V468
0x54a: S[0x0] = V475
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa0, V131]

================================

Block 0x54b
[0x54b:0x54d]
---
Predecessors: [0x513, 0x523]
Successors: [0xa0]
---
0x54b JUMPDEST
0x54c POP
0x54d JUMP
---
0x54b: JUMPDEST 
0x54d: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x54e
[0x54e:0x55d]
---
Predecessors: [0x1a5]
Successors: [0x1bf]
---
0x54e JUMPDEST
0x54f PUSH1 0x40
0x551 MLOAD
0x552 PUSH2 0x19e
0x555 DUP1
0x556 PUSH2 0x56f
0x559 DUP4
0x55a CODECOPY
0x55b ADD
0x55c SWAP1
0x55d JUMP
---
0x54e: JUMPDEST 
0x54f: V476 = 0x40
0x551: V477 = M[0x40]
0x552: V478 = 0x19e
0x556: V479 = 0x56f
0x55a: CODECOPY V477 0x56f 0x19e
0x55b: V480 = ADD 0x19e V477
0x55d: JUMP 0x1bf
---
Entry stack: [V11, 0xa0, S6, S5, 0x0, 0x0, V148, V149, 0x1bf]
Stack pops: 1
Stack additions: [V480]
Exit stack: [V11, 0xa0, S6, S5, 0x0, 0x0, V148, V149, V480]

================================

Block 0x55e
[0x55e:0x56d]
---
Predecessors: [0x210]
Successors: [0x22a]
---
0x55e JUMPDEST
0x55f PUSH1 0x40
0x561 MLOAD
0x562 PUSH2 0x19e
0x565 DUP1
0x566 PUSH2 0x70d
0x569 DUP4
0x56a CODECOPY
0x56b ADD
0x56c SWAP1
0x56d JUMP
---
0x55e: JUMPDEST 
0x55f: V481 = 0x40
0x561: V482 = M[0x40]
0x562: V483 = 0x19e
0x566: V484 = 0x70d
0x56a: CODECOPY V482 0x70d 0x19e
0x56b: V485 = ADD 0x19e V482
0x56d: JUMP 0x22a
---
Entry stack: [V11, 0xa0, S6, S5, S4, S3, V192, V193, 0x22a]
Stack pops: 1
Stack additions: [V485]
Exit stack: [V11, 0xa0, S6, S5, S4, S3, V192, V193, V485]

================================

Block 0x56e
[0x56e:0x671]
---
Predecessors: []
Successors: [0x672]
---
0x56e STOP
0x56f PUSH1 0x80
0x571 PUSH1 0x40
0x573 DUP2
0x574 DUP2
0x575 MSTORE
0x576 DUP1
0x577 PUSH2 0x19e
0x57a DUP4
0x57b CODECOPY
0x57c DUP2
0x57d ADD
0x57e PUSH1 0x40
0x580 DUP2
0x581 SWAP1
0x582 MSTORE
0x583 DUP2
0x584 MLOAD
0x585 PUSH1 0x20
0x587 SWAP1
0x588 SWAP3
0x589 ADD
0x58a MLOAD
0x58b SWAP1
0x58c PUSH20 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x5a1 SWAP1
0x5a2 PUSH1 0x1
0x5a4 PUSH1 0xa0
0x5a6 PUSH1 0x2
0x5a8 EXP
0x5a9 SUB
0x5aa DUP4
0x5ab AND
0x5ac SWAP1
0x5ad PUSH2 0x61a8
0x5b0 SWAP1
0x5b1 CALLVALUE
0x5b2 SWAP1
0x5b3 PUSH1 0x0
0x5b5 DUP2
0x5b6 DUP2
0x5b7 DUP2
0x5b8 DUP6
0x5b9 DUP9
0x5ba DUP9
0x5bb CALL
0x5bc POP
0x5bd POP
0x5be PUSH1 0x40
0x5c0 DUP1
0x5c1 MLOAD
0x5c2 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5e3 DUP2
0x5e4 MSTORE
0x5e5 DUP2
0x5e6 MLOAD
0x5e7 SWAP1
0x5e8 DUP2
0x5e9 SWAP1
0x5ea SUB
0x5eb PUSH1 0x19
0x5ed ADD
0x5ee DUP2
0x5ef SHA3
0x5f0 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x611 DUP3
0x612 MSTORE
0x613 ADDRESS
0x614 PUSH1 0x4
0x616 DUP4
0x617 ADD
0x618 MSTORE
0x619 SWAP2
0x61a MLOAD
0x61b PUSH1 0x1
0x61d PUSH1 0xa0
0x61f PUSH1 0x2
0x621 EXP
0x622 SUB
0x623 DUP10
0x624 AND
0x625 SWAP6
0x626 POP
0x627 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x645 SWAP1
0x646 SWAP3
0x647 DIV
0x648 SWAP4
0x649 POP
0x64a CALLER
0x64b SWAP3
0x64c POP
0x64d DUP5
0x64e SWAP2
0x64f PUSH4 0x70a08231
0x654 SWAP2
0x655 PUSH1 0x24
0x657 DUP1
0x658 DUP3
0x659 ADD
0x65a SWAP3
0x65b PUSH1 0x20
0x65d SWAP3
0x65e SWAP1
0x65f SWAP2
0x660 SWAP1
0x661 DUP3
0x662 SWAP1
0x663 SUB
0x664 ADD
0x665 DUP2
0x666 PUSH1 0x0
0x668 DUP8
0x669 DUP1
0x66a EXTCODESIZE
0x66b ISZERO
0x66c DUP1
0x66d ISZERO
0x66e PUSH2 0x107
0x671 JUMPI
---
0x56e: STOP 
0x56f: V486 = 0x80
0x571: V487 = 0x40
0x575: M[0x40] = 0x80
0x577: V488 = 0x19e
0x57b: CODECOPY 0x80 0x19e 0x40
0x57d: V489 = ADD 0x80 0x40
0x57e: V490 = 0x40
0x582: M[0x40] = 0xc0
0x584: V491 = M[0x80]
0x585: V492 = 0x20
0x589: V493 = ADD 0x80 0x20
0x58a: V494 = M[0xa0]
0x58c: V495 = 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x5a2: V496 = 0x1
0x5a4: V497 = 0xa0
0x5a6: V498 = 0x2
0x5a8: V499 = EXP 0x2 0xa0
0x5a9: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V501 = AND V494 0xffffffffffffffffffffffffffffffffffffffff
0x5ad: V502 = 0x61a8
0x5b1: V503 = CALLVALUE
0x5b3: V504 = 0x0
0x5bb: V505 = CALL 0x61a8 V501 V503 0xc0 0x0 0xc0 0x0
0x5be: V506 = 0x40
0x5c1: V507 = M[0x40]
0x5c2: V508 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5e4: M[V507] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5e6: V509 = M[0x40]
0x5ea: V510 = SUB V507 V509
0x5eb: V511 = 0x19
0x5ed: V512 = ADD 0x19 V510
0x5ef: V513 = SHA3 V509 V512
0x5f0: V514 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x612: M[V509] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x613: V515 = ADDRESS
0x614: V516 = 0x4
0x617: V517 = ADD V509 0x4
0x618: M[V517] = V515
0x61a: V518 = M[0x40]
0x61b: V519 = 0x1
0x61d: V520 = 0xa0
0x61f: V521 = 0x2
0x621: V522 = EXP 0x2 0xa0
0x622: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V524 = AND V491 0xffffffffffffffffffffffffffffffffffffffff
0x627: V525 = 0x100000000000000000000000000000000000000000000000000000000
0x647: V526 = DIV V513 0x100000000000000000000000000000000000000000000000000000000
0x64a: V527 = CALLER
0x64f: V528 = 0x70a08231
0x655: V529 = 0x24
0x659: V530 = ADD V509 0x24
0x65b: V531 = 0x20
0x663: V532 = SUB V509 V518
0x664: V533 = ADD V532 0x24
0x666: V534 = 0x0
0x66a: V535 = EXTCODESIZE V524
0x66b: V536 = ISZERO V535
0x66d: V537 = ISZERO V536
0x66e: V538 = 0x107
0x671: THROWI V537
---
Entry stack: []
Stack pops: 0
Stack additions: [V536, V524, 0x0, V518, V533, V518, 0x20, V530, 0x70a08231, V524, V527, V526, V524, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V494, V491]
Exit stack: []

================================

Block 0x672
[0x672:0x680]
---
Predecessors: [0x56e]
Successors: [0x681]
---
0x672 PUSH1 0x0
0x674 DUP1
0x675 REVERT
0x676 JUMPDEST
0x677 POP
0x678 GAS
0x679 CALL
0x67a ISZERO
0x67b DUP1
0x67c ISZERO
0x67d PUSH2 0x11b
0x680 JUMPI
---
0x672: V539 = 0x0
0x675: REVERT 0x0 0x0
0x676: JUMPDEST 
0x678: V540 = GAS
0x679: V541 = CALL V540 S1 S2 S3 S4 S5 S6
0x67a: V542 = ISZERO V541
0x67c: V543 = ISZERO V542
0x67d: V544 = 0x11b
0x680: THROWI V543
---
Entry stack: [V491, V494, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V524, V526, V527, V524, 0x70a08231, V530, 0x20, V518, V533, V518, 0x0, V524, V536]
Stack pops: 0
Stack additions: [V542]
Exit stack: []

================================

Block 0x681
[0x681:0x69b]
---
Predecessors: [0x672]
Successors: [0x69c]
---
0x681 RETURNDATASIZE
0x682 PUSH1 0x0
0x684 DUP1
0x685 RETURNDATACOPY
0x686 RETURNDATASIZE
0x687 PUSH1 0x0
0x689 REVERT
0x68a JUMPDEST
0x68b POP
0x68c POP
0x68d POP
0x68e POP
0x68f PUSH1 0x40
0x691 MLOAD
0x692 RETURNDATASIZE
0x693 PUSH1 0x20
0x695 DUP2
0x696 LT
0x697 ISZERO
0x698 PUSH2 0x131
0x69b JUMPI
---
0x681: V545 = RETURNDATASIZE
0x682: V546 = 0x0
0x685: RETURNDATACOPY 0x0 0x0 V545
0x686: V547 = RETURNDATASIZE
0x687: V548 = 0x0
0x689: REVERT 0x0 V547
0x68a: JUMPDEST 
0x68f: V549 = 0x40
0x691: V550 = M[0x40]
0x692: V551 = RETURNDATASIZE
0x693: V552 = 0x20
0x696: V553 = LT V551 0x20
0x697: V554 = ISZERO V553
0x698: V555 = 0x131
0x69b: THROWI V554
---
Entry stack: [V542]
Stack pops: 0
Stack additions: [V551, V550]
Exit stack: []

================================

Block 0x69c
[0x69c:0x80f]
---
Predecessors: [0x681]
Successors: [0x810]
---
0x69c PUSH1 0x0
0x69e DUP1
0x69f REVERT
0x6a0 JUMPDEST
0x6a1 POP
0x6a2 MLOAD
0x6a3 PUSH1 0x40
0x6a5 DUP1
0x6a6 MLOAD
0x6a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6c5 PUSH4 0xffffffff
0x6ca DUP7
0x6cb AND
0x6cc MUL
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x1
0x6d1 PUSH1 0xa0
0x6d3 PUSH1 0x2
0x6d5 EXP
0x6d6 SUB
0x6d7 SWAP1
0x6d8 SWAP4
0x6d9 AND
0x6da PUSH1 0x4
0x6dc DUP5
0x6dd ADD
0x6de MSTORE
0x6df PUSH1 0x24
0x6e1 DUP4
0x6e2 ADD
0x6e3 SWAP2
0x6e4 SWAP1
0x6e5 SWAP2
0x6e6 MSTORE
0x6e7 MLOAD
0x6e8 PUSH1 0x44
0x6ea DUP1
0x6eb DUP4
0x6ec ADD
0x6ed SWAP3
0x6ee PUSH1 0x0
0x6f0 SWAP3
0x6f1 SWAP2
0x6f2 SWAP1
0x6f3 DUP3
0x6f4 SWAP1
0x6f5 SUB
0x6f6 ADD
0x6f7 DUP2
0x6f8 DUP4
0x6f9 DUP8
0x6fa GAS
0x6fb CALL
0x6fc SWAP3
0x6fd POP
0x6fe POP
0x6ff POP
0x700 POP
0x701 DUP1
0x702 PUSH1 0x1
0x704 PUSH1 0xa0
0x706 PUSH1 0x2
0x708 EXP
0x709 SUB
0x70a AND
0x70b SELFDESTRUCT
0x70c STOP
0x70d PUSH1 0x80
0x70f PUSH1 0x40
0x711 DUP2
0x712 DUP2
0x713 MSTORE
0x714 DUP1
0x715 PUSH2 0x19e
0x718 DUP4
0x719 CODECOPY
0x71a DUP2
0x71b ADD
0x71c PUSH1 0x40
0x71e DUP2
0x71f SWAP1
0x720 MSTORE
0x721 DUP2
0x722 MLOAD
0x723 PUSH1 0x20
0x725 SWAP1
0x726 SWAP3
0x727 ADD
0x728 MLOAD
0x729 SWAP1
0x72a PUSH20 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x73f SWAP1
0x740 PUSH1 0x1
0x742 PUSH1 0xa0
0x744 PUSH1 0x2
0x746 EXP
0x747 SUB
0x748 DUP4
0x749 AND
0x74a SWAP1
0x74b PUSH2 0x61a8
0x74e SWAP1
0x74f CALLVALUE
0x750 SWAP1
0x751 PUSH1 0x0
0x753 DUP2
0x754 DUP2
0x755 DUP2
0x756 DUP6
0x757 DUP9
0x758 DUP9
0x759 CALL
0x75a POP
0x75b POP
0x75c PUSH1 0x40
0x75e DUP1
0x75f MLOAD
0x760 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x781 DUP2
0x782 MSTORE
0x783 DUP2
0x784 MLOAD
0x785 SWAP1
0x786 DUP2
0x787 SWAP1
0x788 SUB
0x789 PUSH1 0x19
0x78b ADD
0x78c DUP2
0x78d SHA3
0x78e PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7af DUP3
0x7b0 MSTORE
0x7b1 ADDRESS
0x7b2 PUSH1 0x4
0x7b4 DUP4
0x7b5 ADD
0x7b6 MSTORE
0x7b7 SWAP2
0x7b8 MLOAD
0x7b9 PUSH1 0x1
0x7bb PUSH1 0xa0
0x7bd PUSH1 0x2
0x7bf EXP
0x7c0 SUB
0x7c1 DUP10
0x7c2 AND
0x7c3 SWAP6
0x7c4 POP
0x7c5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7e3 SWAP1
0x7e4 SWAP3
0x7e5 DIV
0x7e6 SWAP4
0x7e7 POP
0x7e8 DUP6
0x7e9 SWAP3
0x7ea POP
0x7eb DUP5
0x7ec SWAP2
0x7ed PUSH4 0x70a08231
0x7f2 SWAP2
0x7f3 PUSH1 0x24
0x7f5 DUP1
0x7f6 DUP3
0x7f7 ADD
0x7f8 SWAP3
0x7f9 PUSH1 0x20
0x7fb SWAP3
0x7fc SWAP1
0x7fd SWAP2
0x7fe SWAP1
0x7ff DUP3
0x800 SWAP1
0x801 SUB
0x802 ADD
0x803 DUP2
0x804 PUSH1 0x0
0x806 DUP8
0x807 DUP1
0x808 EXTCODESIZE
0x809 ISZERO
0x80a DUP1
0x80b ISZERO
0x80c PUSH2 0x107
0x80f JUMPI
---
0x69c: V556 = 0x0
0x69f: REVERT 0x0 0x0
0x6a0: JUMPDEST 
0x6a2: V557 = M[S1]
0x6a3: V558 = 0x40
0x6a6: V559 = M[0x40]
0x6a7: V560 = 0x100000000000000000000000000000000000000000000000000000000
0x6c5: V561 = 0xffffffff
0x6cb: V562 = AND S3 0xffffffff
0x6cc: V563 = MUL V562 0x100000000000000000000000000000000000000000000000000000000
0x6ce: M[V559] = V563
0x6cf: V564 = 0x1
0x6d1: V565 = 0xa0
0x6d3: V566 = 0x2
0x6d5: V567 = EXP 0x2 0xa0
0x6d6: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d9: V569 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x6da: V570 = 0x4
0x6dd: V571 = ADD V559 0x4
0x6de: M[V571] = V569
0x6df: V572 = 0x24
0x6e2: V573 = ADD V559 0x24
0x6e6: M[V573] = V557
0x6e7: V574 = M[0x40]
0x6e8: V575 = 0x44
0x6ec: V576 = ADD V559 0x44
0x6ee: V577 = 0x0
0x6f5: V578 = SUB V559 V574
0x6f6: V579 = ADD V578 0x44
0x6fa: V580 = GAS
0x6fb: V581 = CALL V580 S4 0x0 V574 V579 V574 0x0
0x702: V582 = 0x1
0x704: V583 = 0xa0
0x706: V584 = 0x2
0x708: V585 = EXP 0x2 0xa0
0x709: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x70b: SELFDESTRUCT V587
0x70c: STOP 
0x70d: V588 = 0x80
0x70f: V589 = 0x40
0x713: M[0x40] = 0x80
0x715: V590 = 0x19e
0x719: CODECOPY 0x80 0x19e 0x40
0x71b: V591 = ADD 0x80 0x40
0x71c: V592 = 0x40
0x720: M[0x40] = 0xc0
0x722: V593 = M[0x80]
0x723: V594 = 0x20
0x727: V595 = ADD 0x80 0x20
0x728: V596 = M[0xa0]
0x72a: V597 = 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x740: V598 = 0x1
0x742: V599 = 0xa0
0x744: V600 = 0x2
0x746: V601 = EXP 0x2 0xa0
0x747: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x749: V603 = AND V596 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V604 = 0x61a8
0x74f: V605 = CALLVALUE
0x751: V606 = 0x0
0x759: V607 = CALL 0x61a8 V603 V605 0xc0 0x0 0xc0 0x0
0x75c: V608 = 0x40
0x75f: V609 = M[0x40]
0x760: V610 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x782: M[V609] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x784: V611 = M[0x40]
0x788: V612 = SUB V609 V611
0x789: V613 = 0x19
0x78b: V614 = ADD 0x19 V612
0x78d: V615 = SHA3 V611 V614
0x78e: V616 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7b0: M[V611] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7b1: V617 = ADDRESS
0x7b2: V618 = 0x4
0x7b5: V619 = ADD V611 0x4
0x7b6: M[V619] = V617
0x7b8: V620 = M[0x40]
0x7b9: V621 = 0x1
0x7bb: V622 = 0xa0
0x7bd: V623 = 0x2
0x7bf: V624 = EXP 0x2 0xa0
0x7c0: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c2: V626 = AND V593 0xffffffffffffffffffffffffffffffffffffffff
0x7c5: V627 = 0x100000000000000000000000000000000000000000000000000000000
0x7e5: V628 = DIV V615 0x100000000000000000000000000000000000000000000000000000000
0x7ed: V629 = 0x70a08231
0x7f3: V630 = 0x24
0x7f7: V631 = ADD V611 0x24
0x7f9: V632 = 0x20
0x801: V633 = SUB V611 V620
0x802: V634 = ADD V633 0x24
0x804: V635 = 0x0
0x808: V636 = EXTCODESIZE V626
0x809: V637 = ISZERO V636
0x80b: V638 = ISZERO V637
0x80c: V639 = 0x107
0x80f: THROWI V638
---
Entry stack: [V550, V551]
Stack pops: 0
Stack additions: [S5, V637, V626, 0x0, V620, V634, V620, 0x20, V631, 0x70a08231, V626, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V628, V626, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V596, V593]
Exit stack: []

================================

Block 0x810
[0x810:0x81e]
---
Predecessors: [0x69c]
Successors: [0x81f]
---
0x810 PUSH1 0x0
0x812 DUP1
0x813 REVERT
0x814 JUMPDEST
0x815 POP
0x816 GAS
0x817 CALL
0x818 ISZERO
0x819 DUP1
0x81a ISZERO
0x81b PUSH2 0x11b
0x81e JUMPI
---
0x810: V640 = 0x0
0x813: REVERT 0x0 0x0
0x814: JUMPDEST 
0x816: V641 = GAS
0x817: V642 = CALL V641 S1 S2 S3 S4 S5 S6
0x818: V643 = ISZERO V642
0x81a: V644 = ISZERO V643
0x81b: V645 = 0x11b
0x81e: THROWI V644
---
Entry stack: [V593, V596, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V626, V628, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V626, 0x70a08231, V631, 0x20, V620, V634, V620, 0x0, V626, V637]
Stack pops: 0
Stack additions: [V643]
Exit stack: []

================================

Block 0x81f
[0x81f:0x839]
---
Predecessors: [0x810]
Successors: [0x83a]
---
0x81f RETURNDATASIZE
0x820 PUSH1 0x0
0x822 DUP1
0x823 RETURNDATACOPY
0x824 RETURNDATASIZE
0x825 PUSH1 0x0
0x827 REVERT
0x828 JUMPDEST
0x829 POP
0x82a POP
0x82b POP
0x82c POP
0x82d PUSH1 0x40
0x82f MLOAD
0x830 RETURNDATASIZE
0x831 PUSH1 0x20
0x833 DUP2
0x834 LT
0x835 ISZERO
0x836 PUSH2 0x131
0x839 JUMPI
---
0x81f: V646 = RETURNDATASIZE
0x820: V647 = 0x0
0x823: RETURNDATACOPY 0x0 0x0 V646
0x824: V648 = RETURNDATASIZE
0x825: V649 = 0x0
0x827: REVERT 0x0 V648
0x828: JUMPDEST 
0x82d: V650 = 0x40
0x82f: V651 = M[0x40]
0x830: V652 = RETURNDATASIZE
0x831: V653 = 0x20
0x834: V654 = LT V652 0x20
0x835: V655 = ISZERO V654
0x836: V656 = 0x131
0x839: THROWI V655
---
Entry stack: [V643]
Stack pops: 0
Stack additions: [V652, V651]
Exit stack: []

================================

Block 0x83a
[0x83a:0x8d5]
---
Predecessors: [0x81f]
Successors: []
---
0x83a PUSH1 0x0
0x83c DUP1
0x83d REVERT
0x83e JUMPDEST
0x83f POP
0x840 MLOAD
0x841 PUSH1 0x40
0x843 DUP1
0x844 MLOAD
0x845 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x863 PUSH4 0xffffffff
0x868 DUP7
0x869 AND
0x86a MUL
0x86b DUP2
0x86c MSTORE
0x86d PUSH1 0x1
0x86f PUSH1 0xa0
0x871 PUSH1 0x2
0x873 EXP
0x874 SUB
0x875 SWAP1
0x876 SWAP4
0x877 AND
0x878 PUSH1 0x4
0x87a DUP5
0x87b ADD
0x87c MSTORE
0x87d PUSH1 0x24
0x87f DUP4
0x880 ADD
0x881 SWAP2
0x882 SWAP1
0x883 SWAP2
0x884 MSTORE
0x885 MLOAD
0x886 PUSH1 0x44
0x888 DUP1
0x889 DUP4
0x88a ADD
0x88b SWAP3
0x88c PUSH1 0x0
0x88e SWAP3
0x88f SWAP2
0x890 SWAP1
0x891 DUP3
0x892 SWAP1
0x893 SUB
0x894 ADD
0x895 DUP2
0x896 DUP4
0x897 DUP8
0x898 GAS
0x899 CALL
0x89a SWAP3
0x89b POP
0x89c POP
0x89d POP
0x89e POP
0x89f DUP1
0x8a0 PUSH1 0x1
0x8a2 PUSH1 0xa0
0x8a4 PUSH1 0x2
0x8a6 EXP
0x8a7 SUB
0x8a8 AND
0x8a9 SELFDESTRUCT
0x8aa STOP
0x8ab LOG1
0x8ac PUSH6 0x627a7a723058
0x8b3 SHA3
0x8b4 MISSING 0xdf
0x8b5 PUSH13 0xe539a1d4e13e55962fd42ee3e1
0x8c3 MISSING 0x21
0x8c4 MISSING 0xf8
0x8c5 SGT
0x8c6 MISSING 0x26
0x8c7 LOG0
0x8c8 REVERT
0x8c9 SAR
0x8ca MISSING 0xbc
0x8cb RETURN
0x8cc SWAP12
0x8cd SWAP3
0x8ce MISSING 0xde
0x8cf MISSING 0xb8
0x8d0 MISSING 0xdf
0x8d1 MISSING 0xb6
0x8d2 CALLDATALOAD
0x8d3 MISSING 0xfc
0x8d4 STOP
0x8d5 MISSING 0x29
---
0x83a: V657 = 0x0
0x83d: REVERT 0x0 0x0
0x83e: JUMPDEST 
0x840: V658 = M[S1]
0x841: V659 = 0x40
0x844: V660 = M[0x40]
0x845: V661 = 0x100000000000000000000000000000000000000000000000000000000
0x863: V662 = 0xffffffff
0x869: V663 = AND S3 0xffffffff
0x86a: V664 = MUL V663 0x100000000000000000000000000000000000000000000000000000000
0x86c: M[V660] = V664
0x86d: V665 = 0x1
0x86f: V666 = 0xa0
0x871: V667 = 0x2
0x873: V668 = EXP 0x2 0xa0
0x874: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x877: V670 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x878: V671 = 0x4
0x87b: V672 = ADD V660 0x4
0x87c: M[V672] = V670
0x87d: V673 = 0x24
0x880: V674 = ADD V660 0x24
0x884: M[V674] = V658
0x885: V675 = M[0x40]
0x886: V676 = 0x44
0x88a: V677 = ADD V660 0x44
0x88c: V678 = 0x0
0x893: V679 = SUB V660 V675
0x894: V680 = ADD V679 0x44
0x898: V681 = GAS
0x899: V682 = CALL V681 S4 0x0 V675 V680 V675 0x0
0x8a0: V683 = 0x1
0x8a2: V684 = 0xa0
0x8a4: V685 = 0x2
0x8a6: V686 = EXP 0x2 0xa0
0x8a7: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a8: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x8a9: SELFDESTRUCT V688
0x8aa: STOP 
0x8ab: LOG S0 S1 S2
0x8ac: V689 = 0x627a7a723058
0x8b3: V690 = SHA3 0x627a7a723058 S3
0x8b4: MISSING 0xdf
0x8b5: V691 = 0xe539a1d4e13e55962fd42ee3e1
0x8c3: MISSING 0x21
0x8c4: MISSING 0xf8
0x8c5: V692 = SGT S0 S1
0x8c6: MISSING 0x26
0x8c7: LOG S0 S1
0x8c8: REVERT S2 S3
0x8c9: V693 = SAR S0 S1
0x8ca: MISSING 0xbc
0x8cb: RETURN S0 S1
0x8ce: MISSING 0xde
0x8cf: MISSING 0xb8
0x8d0: MISSING 0xdf
0x8d1: MISSING 0xb6
0x8d2: V694 = CALLDATALOAD S0
0x8d3: MISSING 0xfc
0x8d4: STOP 
0x8d5: MISSING 0x29
---
Entry stack: [V651, V652]
Stack pops: 0
Stack additions: [S5, V690, 0xe539a1d4e13e55962fd42ee3e1, V692, V693, S3, S1, S2, S12, S4, S5, S6, S7, S8, S9, S10, S11, S0, V694]
Exit stack: []

================================

Function 0:
Public function signature: 0x193b135b
Entry block: 0xa2
Exit block: 0xa0
Body: 0xa0, 0xa2, 0xaa, 0xae, 0x271, 0x284, 0x288

Function 1:
Public function signature: 0x1c02708d
Entry block: 0xc3
Exit block: 0x2ca
Body: 0xc3, 0xcb, 0xcf, 0x2b7, 0x2ca, 0x2ce

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xd8
Exit block: 0xa0
Body: 0xa0, 0xd8, 0xe0, 0xe4, 0x2d1, 0x2e5, 0x2e9, 0x31d, 0x326

Function 3:
Public function signature: 0x5e572df6
Entry block: 0xed
Exit block: 0xa0
Body: 0xa0, 0xed, 0xf5, 0xf9, 0x32a, 0x33d, 0x341

Function 4:
Public function signature: 0xaa6ca808
Entry block: 0x98
Exit block: 0x254
Body: 0x98, 0xa0, 0x194, 0x19a, 0x1a5, 0x1bf, 0x1e9, 0x1f2, 0x200, 0x205, 0x210, 0x22a, 0x254, 0x25d, 0x26b, 0x54e, 0x55e

Function 5:
Public function signature: 0xbd814b78
Entry block: 0x105
Exit block: 0xa0
Body: 0xa0, 0x105, 0x10d, 0x111, 0x346, 0x359, 0x35d

Function 6:
Public function signature: 0xcae539ce
Entry block: 0x126
Exit block: 0xa0
Body: 0xa0, 0x126, 0x12e, 0x132, 0x38c, 0x39f, 0x3a3

Function 7:
Public function signature: 0xe58fc54c
Entry block: 0x13e
Exit block: 0x15f
Body: 0x13e, 0x146, 0x14a, 0x15f, 0x3a8, 0x3c0, 0x3c4, 0x424, 0x428, 0x433, 0x43c, 0x44e, 0x452, 0x4c4, 0x4c8, 0x4d3, 0x4dc, 0x4ee, 0x4f2

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x173
Exit block: 0xa0
Body: 0xa0, 0x173, 0x17b, 0x17f, 0x4fc, 0x50f, 0x513, 0x523, 0x54b

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x254
Body: 0x98, 0xa0, 0x194, 0x19a, 0x1a5, 0x1bf, 0x1e9, 0x1f2, 0x200, 0x205, 0x210, 0x22a, 0x254, 0x25d, 0x26b, 0x54e, 0x55e

