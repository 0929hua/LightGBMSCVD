Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x87]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x19ab453c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x87
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x19ab453c
0x3b: V13 = EQ V11 0x19ab453c
0x3c: V14 = 0x87
0x3f: JUMPI 0x87 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xaa]
---
0x40 DUP1
0x41 PUSH4 0x2d0335ab
0x46 EQ
0x47 PUSH2 0xaa
0x4a JUMPI
---
0x41: V15 = 0x2d0335ab
0x46: V16 = EQ 0x2d0335ab V11
0x47: V17 = 0xaa
0x4a: JUMPI 0xaa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xdd]
---
0x4b DUP1
0x4c PUSH4 0x5a1db8c4
0x51 EQ
0x52 PUSH2 0xdd
0x55 JUMPI
---
0x4c: V18 = 0x5a1db8c4
0x51: V19 = EQ 0x5a1db8c4 V11
0x52: V20 = 0xdd
0x55: JUMPI 0xdd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x104]
---
0x56 DUP1
0x57 PUSH4 0x99a88ec4
0x5c EQ
0x5d PUSH2 0x104
0x60 JUMPI
---
0x57: V21 = 0x99a88ec4
0x5c: V22 = EQ 0x99a88ec4 V11
0x5d: V23 = 0x104
0x60: JUMPI 0x104 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x12b]
---
0x61 DUP1
0x62 PUSH4 0x9be65a60
0x67 EQ
0x68 PUSH2 0x12b
0x6b JUMPI
---
0x62: V24 = 0x9be65a60
0x67: V25 = EQ 0x9be65a60 V11
0x68: V26 = 0x12b
0x6b: JUMPI 0x12b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x14c]
---
0x6c DUP1
0x6d PUSH4 0xaacaaf88
0x72 EQ
0x73 PUSH2 0x14c
0x76 JUMPI
---
0x6d: V27 = 0xaacaaf88
0x72: V28 = EQ 0xaacaaf88 V11
0x73: V29 = 0x14c
0x76: JUMPI 0x14c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1a3]
---
0x77 DUP1
0x78 PUSH4 0xc9b5ef8e
0x7d EQ
0x7e PUSH2 0x1a3
0x81 JUMPI
---
0x78: V30 = 0xc9b5ef8e
0x7d: V31 = EQ 0xc9b5ef8e V11
0x7e: V32 = 0x1a3
0x81: JUMPI 0x1a3 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x86]
---
Predecessors: [0x0, 0x77]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x82: JUMPDEST 
0x83: V33 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0xd]
Successors: [0x8f, 0x93]
---
0x87 JUMPDEST
0x88 CALLVALUE
0x89 DUP1
0x8a ISZERO
0x8b PUSH2 0x93
0x8e JUMPI
---
0x87: JUMPDEST 
0x88: V34 = CALLVALUE
0x8a: V35 = ISZERO V34
0x8b: V36 = 0x93
0x8e: JUMPI 0x93 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x87]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V37 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x93
[0x93:0xa7]
---
Predecessors: [0x87]
Successors: [0x1c4]
---
0x93 JUMPDEST
0x94 POP
0x95 PUSH2 0xa8
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 PUSH1 0x4
0xa2 CALLDATALOAD
0xa3 AND
0xa4 PUSH2 0x1c4
0xa7 JUMP
---
0x93: JUMPDEST 
0x95: V38 = 0xa8
0x98: V39 = 0x1
0x9a: V40 = 0xa0
0x9c: V41 = 0x2
0x9e: V42 = EXP 0x2 0xa0
0x9f: V43 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V44 = 0x4
0xa2: V45 = CALLDATALOAD 0x4
0xa3: V46 = AND V45 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V47 = 0x1c4
0xa7: JUMP 0x1c4
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0xa8, V46]
Exit stack: [V11, 0xa8, V46]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x22a, 0x48b, 0x9e9, 0xb1f]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V11, 0x18f, V128, V131, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0x40]
Successors: [0xb2, 0xb6]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac DUP1
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xaa: JUMPDEST 
0xab: V48 = CALLVALUE
0xad: V49 = ISZERO V48
0xae: V50 = 0xb6
0xb1: JUMPI 0xb6 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xaa]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V51 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xb6
[0xb6:0xca]
---
Predecessors: [0xaa]
Successors: [0x26a]
---
0xb6 JUMPDEST
0xb7 POP
0xb8 PUSH2 0xcb
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 PUSH1 0x4
0xc5 CALLDATALOAD
0xc6 AND
0xc7 PUSH2 0x26a
0xca JUMP
---
0xb6: JUMPDEST 
0xb8: V52 = 0xcb
0xbb: V53 = 0x1
0xbd: V54 = 0xa0
0xbf: V55 = 0x2
0xc1: V56 = EXP 0x2 0xa0
0xc2: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3: V58 = 0x4
0xc5: V59 = CALLDATALOAD 0x4
0xc6: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V61 = 0x26a
0xca: JUMP 0x26a
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xcb, V60]
Exit stack: [V11, 0xcb, V60]

================================

Block 0xcb
[0xcb:0xdc]
---
Predecessors: [0x26a, 0xef6]
Successors: []
---
0xcb JUMPDEST
0xcc PUSH1 0x40
0xce DUP1
0xcf MLOAD
0xd0 SWAP2
0xd1 DUP3
0xd2 MSTORE
0xd3 MLOAD
0xd4 SWAP1
0xd5 DUP2
0xd6 SWAP1
0xd7 SUB
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP1
0xdc RETURN
---
0xcb: JUMPDEST 
0xcc: V62 = 0x40
0xcf: V63 = M[0x40]
0xd2: M[V63] = S0
0xd3: V64 = M[0x40]
0xd7: V65 = SUB V63 V64
0xd8: V66 = 0x20
0xda: V67 = ADD 0x20 V65
0xdc: RETURN V64 V67
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0x4b]
Successors: [0xe5, 0xe9]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf DUP1
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xdd: JUMPDEST 
0xde: V68 = CALLVALUE
0xe0: V69 = ISZERO V68
0xe1: V70 = 0xe9
0xe4: JUMPI 0xe9 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, V68]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xdd]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V71 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0xe9
[0xe9:0x103]
---
Predecessors: [0xdd]
Successors: [0x285]
---
0xe9 JUMPDEST
0xea POP
0xeb PUSH2 0xa8
0xee PUSH1 0x1
0xf0 PUSH1 0xa0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 PUSH1 0x4
0xf8 CALLDATALOAD
0xf9 DUP2
0xfa AND
0xfb SWAP1
0xfc PUSH1 0x24
0xfe CALLDATALOAD
0xff AND
0x100 PUSH2 0x285
0x103 JUMP
---
0xe9: JUMPDEST 
0xeb: V72 = 0xa8
0xee: V73 = 0x1
0xf0: V74 = 0xa0
0xf2: V75 = 0x2
0xf4: V76 = EXP 0x2 0xa0
0xf5: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6: V78 = 0x4
0xf8: V79 = CALLDATALOAD 0x4
0xfa: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0xfc: V81 = 0x24
0xfe: V82 = CALLDATALOAD 0x24
0xff: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0x100: V84 = 0x285
0x103: JUMP 0x285
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: [0xa8, V80, V83]
Exit stack: [V11, 0xa8, V80, V83]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0x56]
Successors: [0x10c, 0x110]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 DUP1
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x104: JUMPDEST 
0x105: V85 = CALLVALUE
0x107: V86 = ISZERO V85
0x108: V87 = 0x110
0x10b: JUMPI 0x110 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x104]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V88 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x110
[0x110:0x12a]
---
Predecessors: [0x104]
Successors: [0x494]
---
0x110 JUMPDEST
0x111 POP
0x112 PUSH2 0xa8
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d PUSH1 0x4
0x11f CALLDATALOAD
0x120 DUP2
0x121 AND
0x122 SWAP1
0x123 PUSH1 0x24
0x125 CALLDATALOAD
0x126 AND
0x127 PUSH2 0x494
0x12a JUMP
---
0x110: JUMPDEST 
0x112: V89 = 0xa8
0x115: V90 = 0x1
0x117: V91 = 0xa0
0x119: V92 = 0x2
0x11b: V93 = EXP 0x2 0xa0
0x11c: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V95 = 0x4
0x11f: V96 = CALLDATALOAD 0x4
0x121: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x123: V98 = 0x24
0x125: V99 = CALLDATALOAD 0x24
0x126: V100 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x127: V101 = 0x494
0x12a: JUMP 0x494
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0xa8, V97, V100]
Exit stack: [V11, 0xa8, V97, V100]

================================

Block 0x12b
[0x12b:0x132]
---
Predecessors: [0x61]
Successors: [0x133, 0x137]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d DUP1
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x12b: JUMPDEST 
0x12c: V102 = CALLVALUE
0x12e: V103 = ISZERO V102
0x12f: V104 = 0x137
0x132: JUMPI 0x137 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x12b]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V105 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x137
[0x137:0x14b]
---
Predecessors: [0x12b]
Successors: [0x9f1]
---
0x137 JUMPDEST
0x138 POP
0x139 PUSH2 0xa8
0x13c PUSH1 0x1
0x13e PUSH1 0xa0
0x140 PUSH1 0x2
0x142 EXP
0x143 SUB
0x144 PUSH1 0x4
0x146 CALLDATALOAD
0x147 AND
0x148 PUSH2 0x9f1
0x14b JUMP
---
0x137: JUMPDEST 
0x139: V106 = 0xa8
0x13c: V107 = 0x1
0x13e: V108 = 0xa0
0x140: V109 = 0x2
0x142: V110 = EXP 0x2 0xa0
0x143: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144: V112 = 0x4
0x146: V113 = CALLDATALOAD 0x4
0x147: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x148: V115 = 0x9f1
0x14b: JUMP 0x9f1
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0xa8, V114]
Exit stack: [V11, 0xa8, V114]

================================

Block 0x14c
[0x14c:0x153]
---
Predecessors: [0x6c]
Successors: [0x154, 0x158]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e DUP1
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14c: JUMPDEST 
0x14d: V116 = CALLVALUE
0x14f: V117 = ISZERO V116
0x150: V118 = 0x158
0x153: JUMPI 0x158 V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14c]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V119 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x158
[0x158:0x18e]
---
Predecessors: [0x14c]
Successors: [0xb25]
---
0x158 JUMPDEST
0x159 POP
0x15a PUSH2 0x18f
0x15d PUSH1 0x4
0x15f DUP1
0x160 CALLDATALOAD
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 AND
0x16a SWAP1
0x16b PUSH1 0x24
0x16d DUP1
0x16e CALLDATALOAD
0x16f DUP1
0x170 DUP3
0x171 ADD
0x172 SWAP3
0x173 SWAP1
0x174 DUP2
0x175 ADD
0x176 CALLDATALOAD
0x177 SWAP2
0x178 PUSH1 0x44
0x17a CALLDATALOAD
0x17b SWAP2
0x17c PUSH1 0x64
0x17e CALLDATALOAD
0x17f SWAP2
0x180 DUP3
0x181 ADD
0x182 SWAP2
0x183 ADD
0x184 CALLDATALOAD
0x185 PUSH1 0x84
0x187 CALLDATALOAD
0x188 PUSH1 0xa4
0x18a CALLDATALOAD
0x18b PUSH2 0xb25
0x18e JUMP
---
0x158: JUMPDEST 
0x15a: V120 = 0x18f
0x15d: V121 = 0x4
0x160: V122 = CALLDATALOAD 0x4
0x161: V123 = 0x1
0x163: V124 = 0xa0
0x165: V125 = 0x2
0x167: V126 = EXP 0x2 0xa0
0x168: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x16b: V129 = 0x24
0x16e: V130 = CALLDATALOAD 0x24
0x171: V131 = ADD 0x24 V130
0x175: V132 = ADD 0x4 V130
0x176: V133 = CALLDATALOAD V132
0x178: V134 = 0x44
0x17a: V135 = CALLDATALOAD 0x44
0x17c: V136 = 0x64
0x17e: V137 = CALLDATALOAD 0x64
0x181: V138 = ADD V137 0x24
0x183: V139 = ADD V137 0x4
0x184: V140 = CALLDATALOAD V139
0x185: V141 = 0x84
0x187: V142 = CALLDATALOAD 0x84
0x188: V143 = 0xa4
0x18a: V144 = CALLDATALOAD 0xa4
0x18b: V145 = 0xb25
0x18e: JUMP 0xb25
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x18f, V128, V131, V133, V135, V138, V140, V142, V144]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144]

================================

Block 0x18f
[0x18f:0x1a2]
---
Predecessors: [0xee7]
Successors: []
---
0x18f JUMPDEST
0x190 PUSH1 0x40
0x192 DUP1
0x193 MLOAD
0x194 SWAP2
0x195 ISZERO
0x196 ISZERO
0x197 DUP3
0x198 MSTORE
0x199 MLOAD
0x19a SWAP1
0x19b DUP2
0x19c SWAP1
0x19d SUB
0x19e PUSH1 0x20
0x1a0 ADD
0x1a1 SWAP1
0x1a2 RETURN
---
0x18f: JUMPDEST 
0x190: V146 = 0x40
0x193: V147 = M[0x40]
0x195: V148 = ISZERO S0
0x196: V149 = ISZERO V148
0x198: M[V147] = V149
0x199: V150 = M[0x40]
0x19d: V151 = SUB V147 V150
0x19e: V152 = 0x20
0x1a0: V153 = ADD 0x20 V151
0x1a2: RETURN V150 V153
---
Entry stack: [V11, 0x18f, V128, V131, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, S3, S2, S1]

================================

Block 0x1a3
[0x1a3:0x1aa]
---
Predecessors: [0x77]
Successors: [0x1ab, 0x1af]
---
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 DUP1
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V154 = CALLVALUE
0x1a6: V155 = ISZERO V154
0x1a7: V156 = 0x1af
0x1aa: JUMPI 0x1af V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a3]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V157 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x1af
[0x1af:0x1c3]
---
Predecessors: [0x1a3]
Successors: [0xef6]
---
0x1af JUMPDEST
0x1b0 POP
0x1b1 PUSH2 0xcb
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc PUSH1 0x4
0x1be CALLDATALOAD
0x1bf AND
0x1c0 PUSH2 0xef6
0x1c3 JUMP
---
0x1af: JUMPDEST 
0x1b1: V158 = 0xcb
0x1b4: V159 = 0x1
0x1b6: V160 = 0xa0
0x1b8: V161 = 0x2
0x1ba: V162 = EXP 0x2 0xa0
0x1bb: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bc: V164 = 0x4
0x1be: V165 = CALLDATALOAD 0x4
0x1bf: V166 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V167 = 0xef6
0x1c3: JUMP 0xef6
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0xcb, V166]
Exit stack: [V11, 0xcb, V166]

================================

Block 0x1c4
[0x1c4:0x1d5]
---
Predecessors: [0x93]
Successors: [0x1d6, 0x22a]
---
0x1c4 JUMPDEST
0x1c5 DUP1
0x1c6 CALLER
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf DUP3
0x1d0 AND
0x1d1 EQ
0x1d2 PUSH2 0x22a
0x1d5 JUMPI
---
0x1c4: JUMPDEST 
0x1c6: V168 = CALLER
0x1c7: V169 = 0x1
0x1c9: V170 = 0xa0
0x1cb: V171 = 0x2
0x1cd: V172 = EXP 0x2 0xa0
0x1ce: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V174 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V175 = EQ V174 V168
0x1d2: V176 = 0x22a
0x1d5: JUMPI 0x22a V175
---
Entry stack: [V11, 0xa8, V46]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V11, 0xa8, V46, V46]

================================

Block 0x1d6
[0x1d6:0x229]
---
Predecessors: [0x1c4]
Successors: []
---
0x1d6 PUSH1 0x40
0x1d8 DUP1
0x1d9 MLOAD
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd MLOAD
0x1de PUSH1 0x20
0x1e0 PUSH2 0x1608
0x1e3 DUP4
0x1e4 CODECOPY
0x1e5 DUP2
0x1e6 MLOAD
0x1e7 SWAP2
0x1e8 MSTORE
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed PUSH1 0x4
0x1ef DUP3
0x1f0 ADD
0x1f1 MSTORE
0x1f2 PUSH1 0x19
0x1f4 PUSH1 0x24
0x1f6 DUP3
0x1f7 ADD
0x1f8 MSTORE
0x1f9 PUSH32 0x424d3a2063616c6c6572206d7573742062652077616c6c657400000000000000
0x21a PUSH1 0x44
0x21c DUP3
0x21d ADD
0x21e MSTORE
0x21f SWAP1
0x220 MLOAD
0x221 SWAP1
0x222 DUP2
0x223 SWAP1
0x224 SUB
0x225 PUSH1 0x64
0x227 ADD
0x228 SWAP1
0x229 REVERT
---
0x1d6: V177 = 0x40
0x1d9: V178 = M[0x40]
0x1da: V179 = 0x0
0x1dd: V180 = M[0x0]
0x1de: V181 = 0x20
0x1e0: V182 = 0x1608
0x1e4: CODECOPY 0x0 0x1608 0x20
0x1e6: V183 = M[0x0]
0x1e8: M[0x0] = V180
0x1ea: M[V178] = V183
0x1eb: V184 = 0x20
0x1ed: V185 = 0x4
0x1f0: V186 = ADD V178 0x4
0x1f1: M[V186] = 0x20
0x1f2: V187 = 0x19
0x1f4: V188 = 0x24
0x1f7: V189 = ADD V178 0x24
0x1f8: M[V189] = 0x19
0x1f9: V190 = 0x424d3a2063616c6c6572206d7573742062652077616c6c657400000000000000
0x21a: V191 = 0x44
0x21d: V192 = ADD V178 0x44
0x21e: M[V192] = 0x424d3a2063616c6c6572206d7573742062652077616c6c657400000000000000
0x220: V193 = M[0x40]
0x224: V194 = SUB V178 V193
0x225: V195 = 0x64
0x227: V196 = ADD 0x64 V194
0x229: REVERT V193 V196
---
Entry stack: [V11, 0xa8, V46, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V46, V46]

================================

Block 0x22a
[0x22a:0x269]
---
Predecessors: [0x1c4]
Successors: [0xa8]
---
0x22a JUMPDEST
0x22b PUSH1 0x40
0x22d DUP1
0x22e MLOAD
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 DUP5
0x238 AND
0x239 DUP2
0x23a MSTORE
0x23b SWAP1
0x23c MLOAD
0x23d PUSH32 0x9fcca3f73f85397e2bf03647abf243c20b753bd54463ff3cae74de2971c112fa
0x25e SWAP2
0x25f DUP2
0x260 SWAP1
0x261 SUB
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP1
0x266 LOG1
0x267 POP
0x268 POP
0x269 JUMP
---
0x22a: JUMPDEST 
0x22b: V197 = 0x40
0x22e: V198 = M[0x40]
0x22f: V199 = 0x1
0x231: V200 = 0xa0
0x233: V201 = 0x2
0x235: V202 = EXP 0x2 0xa0
0x236: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x238: V204 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0x23a: M[V198] = V204
0x23c: V205 = M[0x40]
0x23d: V206 = 0x9fcca3f73f85397e2bf03647abf243c20b753bd54463ff3cae74de2971c112fa
0x261: V207 = SUB V198 V205
0x262: V208 = 0x20
0x264: V209 = ADD 0x20 V207
0x266: LOG V205 V209 0x9fcca3f73f85397e2bf03647abf243c20b753bd54463ff3cae74de2971c112fa
0x269: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V46, V46]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x26a
[0x26a:0x284]
---
Predecessors: [0xb6]
Successors: [0xcb]
---
0x26a JUMPDEST
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 AND
0x274 PUSH1 0x0
0x276 SWAP1
0x277 DUP2
0x278 MSTORE
0x279 PUSH1 0x1
0x27b PUSH1 0x20
0x27d MSTORE
0x27e PUSH1 0x40
0x280 SWAP1
0x281 SHA3
0x282 SLOAD
0x283 SWAP1
0x284 JUMP
---
0x26a: JUMPDEST 
0x26b: V210 = 0x1
0x26d: V211 = 0xa0
0x26f: V212 = 0x2
0x271: V213 = EXP 0x2 0xa0
0x272: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x273: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x274: V216 = 0x0
0x278: M[0x0] = V215
0x279: V217 = 0x1
0x27b: V218 = 0x20
0x27d: M[0x20] = 0x1
0x27e: V219 = 0x40
0x281: V220 = SHA3 0x0 0x40
0x282: V221 = S[V220]
0x284: JUMP 0xcb
---
Entry stack: [V11, 0xcb, V60]
Stack pops: 2
Stack additions: [V221]
Exit stack: [V11, V221]

================================

Block 0x285
[0x285:0x28e]
---
Predecessors: [0xe9]
Successors: [0x28f, 0x299]
---
0x285 JUMPDEST
0x286 DUP2
0x287 CALLER
0x288 ADDRESS
0x289 EQ
0x28a DUP1
0x28b PUSH2 0x299
0x28e JUMPI
---
0x285: JUMPDEST 
0x287: V222 = CALLER
0x288: V223 = ADDRESS
0x289: V224 = EQ V223 V222
0x28b: V225 = 0x299
0x28e: JUMPI 0x299 V224
---
Entry stack: [V11, 0xa8, V80, V83]
Stack pops: 2
Stack additions: [S1, S0, S1, V224]
Exit stack: [V11, 0xa8, V80, V83, V80, V224]

================================

Block 0x28f
[0x28f:0x298]
---
Predecessors: [0x285]
Successors: [0xf08]
---
0x28f POP
0x290 PUSH2 0x299
0x293 DUP2
0x294 CALLER
0x295 PUSH2 0xf08
0x298 JUMP
---
0x290: V226 = 0x299
0x294: V227 = CALLER
0x295: V228 = 0xf08
0x298: JUMP 0xf08
---
Entry stack: [V11, 0xa8, V80, V83, V80, V224]
Stack pops: 2
Stack additions: [S1, 0x299, S1, V227]
Exit stack: [V11, 0xa8, V80, V83, V80, 0x299, V80, V227]

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0x285, 0xf95]
Successors: [0x2a0, 0x31a]
---
0x299 JUMPDEST
0x29a ISZERO
0x29b ISZERO
0x29c PUSH2 0x31a
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V229 = ISZERO S0
0x29b: V230 = ISZERO V229
0x29c: V231 = 0x31a
0x29f: JUMPI 0x31a V230
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2a0
[0x2a0:0x319]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 PUSH1 0x40
0x2a2 DUP1
0x2a3 MLOAD
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 MLOAD
0x2a8 PUSH1 0x20
0x2aa PUSH2 0x1608
0x2ad DUP4
0x2ae CODECOPY
0x2af DUP2
0x2b0 MLOAD
0x2b1 SWAP2
0x2b2 MSTORE
0x2b3 DUP2
0x2b4 MSTORE
0x2b5 PUSH1 0x20
0x2b7 PUSH1 0x4
0x2b9 DUP3
0x2ba ADD
0x2bb MSTORE
0x2bc PUSH1 0x23
0x2be PUSH1 0x24
0x2c0 DUP3
0x2c1 ADD
0x2c2 MSTORE
0x2c3 PUSH32 0x424d3a206d75737420626520616e206f776e657220666f72207468652077616c
0x2e4 PUSH1 0x44
0x2e6 DUP3
0x2e7 ADD
0x2e8 MSTORE
0x2e9 PUSH32 0x6c65740000000000000000000000000000000000000000000000000000000000
0x30a PUSH1 0x64
0x30c DUP3
0x30d ADD
0x30e MSTORE
0x30f SWAP1
0x310 MLOAD
0x311 SWAP1
0x312 DUP2
0x313 SWAP1
0x314 SUB
0x315 PUSH1 0x84
0x317 ADD
0x318 SWAP1
0x319 REVERT
---
0x2a0: V232 = 0x40
0x2a3: V233 = M[0x40]
0x2a4: V234 = 0x0
0x2a7: V235 = M[0x0]
0x2a8: V236 = 0x20
0x2aa: V237 = 0x1608
0x2ae: CODECOPY 0x0 0x1608 0x20
0x2b0: V238 = M[0x0]
0x2b2: M[0x0] = V235
0x2b4: M[V233] = V238
0x2b5: V239 = 0x20
0x2b7: V240 = 0x4
0x2ba: V241 = ADD V233 0x4
0x2bb: M[V241] = 0x20
0x2bc: V242 = 0x23
0x2be: V243 = 0x24
0x2c1: V244 = ADD V233 0x24
0x2c2: M[V244] = 0x23
0x2c3: V245 = 0x424d3a206d75737420626520616e206f776e657220666f72207468652077616c
0x2e4: V246 = 0x44
0x2e7: V247 = ADD V233 0x44
0x2e8: M[V247] = 0x424d3a206d75737420626520616e206f776e657220666f72207468652077616c
0x2e9: V248 = 0x6c65740000000000000000000000000000000000000000000000000000000000
0x30a: V249 = 0x64
0x30d: V250 = ADD V233 0x64
0x30e: M[V250] = 0x6c65740000000000000000000000000000000000000000000000000000000000
0x310: V251 = M[0x40]
0x314: V252 = SUB V233 V251
0x315: V253 = 0x84
0x317: V254 = ADD 0x84 V252
0x319: REVERT V251 V254
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x31a
[0x31a:0x380]
---
Predecessors: [0x299]
Successors: [0x381, 0x385]
---
0x31a JUMPDEST
0x31b PUSH1 0x0
0x31d DUP1
0x31e SLOAD
0x31f PUSH1 0x40
0x321 DUP1
0x322 MLOAD
0x323 PUSH32 0xbcd4ebb00000000000000000000000000000000000000000000000000000000
0x344 DUP2
0x345 MSTORE
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e DUP7
0x34f DUP2
0x350 AND
0x351 PUSH1 0x4
0x353 DUP4
0x354 ADD
0x355 MSTORE
0x356 SWAP2
0x357 MLOAD
0x358 SWAP2
0x359 SWAP1
0x35a SWAP3
0x35b AND
0x35c SWAP3
0x35d PUSH4 0xbcd4ebb
0x362 SWAP3
0x363 PUSH1 0x24
0x365 DUP1
0x366 DUP3
0x367 ADD
0x368 SWAP4
0x369 PUSH1 0x20
0x36b SWAP4
0x36c SWAP1
0x36d SWAP3
0x36e DUP4
0x36f SWAP1
0x370 SUB
0x371 SWAP1
0x372 SWAP2
0x373 ADD
0x374 SWAP1
0x375 DUP3
0x376 SWAP1
0x377 DUP8
0x378 DUP1
0x379 EXTCODESIZE
0x37a ISZERO
0x37b DUP1
0x37c ISZERO
0x37d PUSH2 0x385
0x380 JUMPI
---
0x31a: JUMPDEST 
0x31b: V255 = 0x0
0x31e: V256 = S[0x0]
0x31f: V257 = 0x40
0x322: V258 = M[0x40]
0x323: V259 = 0xbcd4ebb00000000000000000000000000000000000000000000000000000000
0x345: M[V258] = 0xbcd4ebb00000000000000000000000000000000000000000000000000000000
0x346: V260 = 0x1
0x348: V261 = 0xa0
0x34a: V262 = 0x2
0x34c: V263 = EXP 0x2 0xa0
0x34d: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x351: V266 = 0x4
0x354: V267 = ADD V258 0x4
0x355: M[V267] = V265
0x357: V268 = M[0x40]
0x35b: V269 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x35d: V270 = 0xbcd4ebb
0x363: V271 = 0x24
0x367: V272 = ADD V258 0x24
0x369: V273 = 0x20
0x370: V274 = SUB V258 V268
0x373: V275 = ADD 0x24 V274
0x379: V276 = EXTCODESIZE V269
0x37a: V277 = ISZERO V276
0x37c: V278 = ISZERO V277
0x37d: V279 = 0x385
0x380: JUMPI 0x385 V278
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V269, 0xbcd4ebb, V272, 0x20, V268, V275, V268, 0x0, V269, V277]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0, V269, 0xbcd4ebb, V272, 0x20, V268, V275, V268, 0x0, V269, V277]

================================

Block 0x381
[0x381:0x384]
---
Predecessors: [0x31a]
Successors: []
---
0x381 PUSH1 0x0
0x383 DUP1
0x384 REVERT
---
0x381: V280 = 0x0
0x384: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V269, 0xbcd4ebb, V272, 0x20, V268, V275, V268, 0x0, V269, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V269, 0xbcd4ebb, V272, 0x20, V268, V275, V268, 0x0, V269, V277]

================================

Block 0x385
[0x385:0x38f]
---
Predecessors: [0x31a]
Successors: [0x390, 0x399]
---
0x385 JUMPDEST
0x386 POP
0x387 GAS
0x388 CALL
0x389 ISZERO
0x38a DUP1
0x38b ISZERO
0x38c PUSH2 0x399
0x38f JUMPI
---
0x385: JUMPDEST 
0x387: V281 = GAS
0x388: V282 = CALL V281 V269 0x0 V268 V275 V268 0x20
0x389: V283 = ISZERO V282
0x38b: V284 = ISZERO V283
0x38c: V285 = 0x399
0x38f: JUMPI 0x399 V284
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V269, 0xbcd4ebb, V272, 0x20, V268, V275, V268, 0x0, V269, V277]
Stack pops: 7
Stack additions: [V283]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V269, 0xbcd4ebb, V272, V283]

================================

Block 0x390
[0x390:0x398]
---
Predecessors: [0x385]
Successors: []
---
0x390 RETURNDATASIZE
0x391 PUSH1 0x0
0x393 DUP1
0x394 RETURNDATACOPY
0x395 RETURNDATASIZE
0x396 PUSH1 0x0
0x398 REVERT
---
0x390: V286 = RETURNDATASIZE
0x391: V287 = 0x0
0x394: RETURNDATACOPY 0x0 0x0 V286
0x395: V288 = RETURNDATASIZE
0x396: V289 = 0x0
0x398: REVERT 0x0 V288
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V269, 0xbcd4ebb, V272, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V269, 0xbcd4ebb, V272, V283]

================================

Block 0x399
[0x399:0x3aa]
---
Predecessors: [0x385]
Successors: [0x3ab, 0x3af]
---
0x399 JUMPDEST
0x39a POP
0x39b POP
0x39c POP
0x39d POP
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 RETURNDATASIZE
0x3a2 PUSH1 0x20
0x3a4 DUP2
0x3a5 LT
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x399: JUMPDEST 
0x39e: V290 = 0x40
0x3a0: V291 = M[0x40]
0x3a1: V292 = RETURNDATASIZE
0x3a2: V293 = 0x20
0x3a5: V294 = LT V292 0x20
0x3a6: V295 = ISZERO V294
0x3a7: V296 = 0x3af
0x3aa: JUMPI 0x3af V295
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V269, 0xbcd4ebb, V272, V283]
Stack pops: 4
Stack additions: [V291, V292]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V291, V292]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x399]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V297 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V291, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V291, V292]

================================

Block 0x3af
[0x3af:0x3b7]
---
Predecessors: [0x399]
Successors: [0x3b8, 0x40c]
---
0x3af JUMPDEST
0x3b0 POP
0x3b1 MLOAD
0x3b2 ISZERO
0x3b3 ISZERO
0x3b4 PUSH2 0x40c
0x3b7 JUMPI
---
0x3af: JUMPDEST 
0x3b1: V298 = M[V291]
0x3b2: V299 = ISZERO V298
0x3b3: V300 = ISZERO V299
0x3b4: V301 = 0x40c
0x3b7: JUMPI 0x40c V300
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V291, V292]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x3b8
[0x3b8:0x40b]
---
Predecessors: [0x3af]
Successors: []
---
0x3b8 PUSH1 0x40
0x3ba DUP1
0x3bb MLOAD
0x3bc PUSH1 0x0
0x3be DUP1
0x3bf MLOAD
0x3c0 PUSH1 0x20
0x3c2 PUSH2 0x1608
0x3c5 DUP4
0x3c6 CODECOPY
0x3c7 DUP2
0x3c8 MLOAD
0x3c9 SWAP2
0x3ca MSTORE
0x3cb DUP2
0x3cc MSTORE
0x3cd PUSH1 0x20
0x3cf PUSH1 0x4
0x3d1 DUP3
0x3d2 ADD
0x3d3 MSTORE
0x3d4 PUSH1 0x1c
0x3d6 PUSH1 0x24
0x3d8 DUP3
0x3d9 ADD
0x3da MSTORE
0x3db PUSH32 0x424d3a206d6f64756c65206973206e6f74207265676973746572656400000000
0x3fc PUSH1 0x44
0x3fe DUP3
0x3ff ADD
0x400 MSTORE
0x401 SWAP1
0x402 MLOAD
0x403 SWAP1
0x404 DUP2
0x405 SWAP1
0x406 SUB
0x407 PUSH1 0x64
0x409 ADD
0x40a SWAP1
0x40b REVERT
---
0x3b8: V302 = 0x40
0x3bb: V303 = M[0x40]
0x3bc: V304 = 0x0
0x3bf: V305 = M[0x0]
0x3c0: V306 = 0x20
0x3c2: V307 = 0x1608
0x3c6: CODECOPY 0x0 0x1608 0x20
0x3c8: V308 = M[0x0]
0x3ca: M[0x0] = V305
0x3cc: M[V303] = V308
0x3cd: V309 = 0x20
0x3cf: V310 = 0x4
0x3d2: V311 = ADD V303 0x4
0x3d3: M[V311] = 0x20
0x3d4: V312 = 0x1c
0x3d6: V313 = 0x24
0x3d9: V314 = ADD V303 0x24
0x3da: M[V314] = 0x1c
0x3db: V315 = 0x424d3a206d6f64756c65206973206e6f74207265676973746572656400000000
0x3fc: V316 = 0x44
0x3ff: V317 = ADD V303 0x44
0x400: M[V317] = 0x424d3a206d6f64756c65206973206e6f74207265676973746572656400000000
0x402: V318 = M[0x40]
0x406: V319 = SUB V303 V318
0x407: V320 = 0x64
0x409: V321 = ADD 0x64 V319
0x40b: REVERT V318 V321
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x40c
[0x40c:0x472]
---
Predecessors: [0x3af]
Successors: [0x473, 0x477]
---
0x40c JUMPDEST
0x40d PUSH1 0x40
0x40f DUP1
0x410 MLOAD
0x411 PUSH32 0x1f17732d00000000000000000000000000000000000000000000000000000000
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x1
0x436 PUSH1 0xa0
0x438 PUSH1 0x2
0x43a EXP
0x43b SUB
0x43c DUP5
0x43d DUP2
0x43e AND
0x43f PUSH1 0x4
0x441 DUP4
0x442 ADD
0x443 MSTORE
0x444 PUSH1 0x1
0x446 PUSH1 0x24
0x448 DUP4
0x449 ADD
0x44a MSTORE
0x44b SWAP2
0x44c MLOAD
0x44d SWAP2
0x44e DUP6
0x44f AND
0x450 SWAP2
0x451 PUSH4 0x1f17732d
0x456 SWAP2
0x457 PUSH1 0x44
0x459 DUP1
0x45a DUP3
0x45b ADD
0x45c SWAP3
0x45d PUSH1 0x0
0x45f SWAP3
0x460 SWAP1
0x461 SWAP2
0x462 SWAP1
0x463 DUP3
0x464 SWAP1
0x465 SUB
0x466 ADD
0x467 DUP2
0x468 DUP4
0x469 DUP8
0x46a DUP1
0x46b EXTCODESIZE
0x46c ISZERO
0x46d DUP1
0x46e ISZERO
0x46f PUSH2 0x477
0x472 JUMPI
---
0x40c: JUMPDEST 
0x40d: V322 = 0x40
0x410: V323 = M[0x40]
0x411: V324 = 0x1f17732d00000000000000000000000000000000000000000000000000000000
0x433: M[V323] = 0x1f17732d00000000000000000000000000000000000000000000000000000000
0x434: V325 = 0x1
0x436: V326 = 0xa0
0x438: V327 = 0x2
0x43a: V328 = EXP 0x2 0xa0
0x43b: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43e: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x43f: V331 = 0x4
0x442: V332 = ADD V323 0x4
0x443: M[V332] = V330
0x444: V333 = 0x1
0x446: V334 = 0x24
0x449: V335 = ADD V323 0x24
0x44a: M[V335] = 0x1
0x44c: V336 = M[0x40]
0x44f: V337 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x451: V338 = 0x1f17732d
0x457: V339 = 0x44
0x45b: V340 = ADD V323 0x44
0x45d: V341 = 0x0
0x465: V342 = SUB V323 V336
0x466: V343 = ADD V342 0x44
0x46b: V344 = EXTCODESIZE V337
0x46c: V345 = ISZERO V344
0x46e: V346 = ISZERO V345
0x46f: V347 = 0x477
0x472: JUMPI 0x477 V346
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V337, 0x1f17732d, V340, 0x0, V336, V343, V336, 0x0, V337, V345]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0, V337, 0x1f17732d, V340, 0x0, V336, V343, V336, 0x0, V337, V345]

================================

Block 0x473
[0x473:0x476]
---
Predecessors: [0x40c]
Successors: []
---
0x473 PUSH1 0x0
0x475 DUP1
0x476 REVERT
---
0x473: V348 = 0x0
0x476: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V337, 0x1f17732d, V340, 0x0, V336, V343, V336, 0x0, V337, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V337, 0x1f17732d, V340, 0x0, V336, V343, V336, 0x0, V337, V345]

================================

Block 0x477
[0x477:0x481]
---
Predecessors: [0x40c]
Successors: [0x482, 0x48b]
---
0x477 JUMPDEST
0x478 POP
0x479 GAS
0x47a CALL
0x47b ISZERO
0x47c DUP1
0x47d ISZERO
0x47e PUSH2 0x48b
0x481 JUMPI
---
0x477: JUMPDEST 
0x479: V349 = GAS
0x47a: V350 = CALL V349 V337 0x0 V336 V343 V336 0x0
0x47b: V351 = ISZERO V350
0x47d: V352 = ISZERO V351
0x47e: V353 = 0x48b
0x481: JUMPI 0x48b V352
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V337, 0x1f17732d, V340, 0x0, V336, V343, V336, 0x0, V337, V345]
Stack pops: 7
Stack additions: [V351]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V337, 0x1f17732d, V340, V351]

================================

Block 0x482
[0x482:0x48a]
---
Predecessors: [0x477]
Successors: []
---
0x482 RETURNDATASIZE
0x483 PUSH1 0x0
0x485 DUP1
0x486 RETURNDATACOPY
0x487 RETURNDATASIZE
0x488 PUSH1 0x0
0x48a REVERT
---
0x482: V354 = RETURNDATASIZE
0x483: V355 = 0x0
0x486: RETURNDATACOPY 0x0 0x0 V354
0x487: V356 = RETURNDATASIZE
0x488: V357 = 0x0
0x48a: REVERT 0x0 V356
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V337, 0x1f17732d, V340, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V337, 0x1f17732d, V340, V351]

================================

Block 0x48b
[0x48b:0x493]
---
Predecessors: [0x477, 0x1452]
Successors: [0xa8, 0xee7]
---
0x48b JUMPDEST
0x48c POP
0x48d POP
0x48e POP
0x48f POP
0x490 POP
0x491 POP
0x492 POP
0x493 JUMP
---
0x48b: JUMPDEST 
0x493: JUMP S7
---
Entry stack: [V11, 0x18f, V128, V131, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8]

================================

Block 0x494
[0x494:0x4a1]
---
Predecessors: [0x110]
Successors: [0x4a2, 0x4ac]
---
0x494 JUMPDEST
0x495 PUSH1 0x60
0x497 DUP1
0x498 DUP1
0x499 DUP5
0x49a CALLER
0x49b ADDRESS
0x49c EQ
0x49d DUP1
0x49e PUSH2 0x4ac
0x4a1 JUMPI
---
0x494: JUMPDEST 
0x495: V358 = 0x60
0x49a: V359 = CALLER
0x49b: V360 = ADDRESS
0x49c: V361 = EQ V360 V359
0x49e: V362 = 0x4ac
0x4a1: JUMPI 0x4ac V361
---
Entry stack: [V11, 0xa8, V97, V100]
Stack pops: 2
Stack additions: [S1, S0, 0x60, 0x60, 0x60, S1, V361]
Exit stack: [V11, 0xa8, V97, V100, 0x60, 0x60, 0x60, V97, V361]

================================

Block 0x4a2
[0x4a2:0x4ab]
---
Predecessors: [0x494]
Successors: [0xf08]
---
0x4a2 POP
0x4a3 PUSH2 0x4ac
0x4a6 DUP2
0x4a7 CALLER
0x4a8 PUSH2 0xf08
0x4ab JUMP
---
0x4a3: V363 = 0x4ac
0x4a7: V364 = CALLER
0x4a8: V365 = 0xf08
0x4ab: JUMP 0xf08
---
Entry stack: [V11, 0xa8, V97, V100, 0x60, 0x60, 0x60, V97, V361]
Stack pops: 2
Stack additions: [S1, 0x4ac, S1, V364]
Exit stack: [V11, 0xa8, V97, V100, 0x60, 0x60, 0x60, V97, 0x4ac, V97, V364]

================================

Block 0x4ac
[0x4ac:0x4b2]
---
Predecessors: [0x494, 0xf95]
Successors: [0x4b3, 0x52d]
---
0x4ac JUMPDEST
0x4ad ISZERO
0x4ae ISZERO
0x4af PUSH2 0x52d
0x4b2 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V366 = ISZERO S0
0x4ae: V367 = ISZERO V366
0x4af: V368 = 0x52d
0x4b2: JUMPI 0x52d V367
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x4b3
[0x4b3:0x52c]
---
Predecessors: [0x4ac]
Successors: []
---
0x4b3 PUSH1 0x40
0x4b5 DUP1
0x4b6 MLOAD
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba MLOAD
0x4bb PUSH1 0x20
0x4bd PUSH2 0x1608
0x4c0 DUP4
0x4c1 CODECOPY
0x4c2 DUP2
0x4c3 MLOAD
0x4c4 SWAP2
0x4c5 MSTORE
0x4c6 DUP2
0x4c7 MSTORE
0x4c8 PUSH1 0x20
0x4ca PUSH1 0x4
0x4cc DUP3
0x4cd ADD
0x4ce MSTORE
0x4cf PUSH1 0x23
0x4d1 PUSH1 0x24
0x4d3 DUP3
0x4d4 ADD
0x4d5 MSTORE
0x4d6 PUSH32 0x424d3a206d75737420626520616e206f776e657220666f72207468652077616c
0x4f7 PUSH1 0x44
0x4f9 DUP3
0x4fa ADD
0x4fb MSTORE
0x4fc PUSH32 0x6c65740000000000000000000000000000000000000000000000000000000000
0x51d PUSH1 0x64
0x51f DUP3
0x520 ADD
0x521 MSTORE
0x522 SWAP1
0x523 MLOAD
0x524 SWAP1
0x525 DUP2
0x526 SWAP1
0x527 SUB
0x528 PUSH1 0x84
0x52a ADD
0x52b SWAP1
0x52c REVERT
---
0x4b3: V369 = 0x40
0x4b6: V370 = M[0x40]
0x4b7: V371 = 0x0
0x4ba: V372 = M[0x0]
0x4bb: V373 = 0x20
0x4bd: V374 = 0x1608
0x4c1: CODECOPY 0x0 0x1608 0x20
0x4c3: V375 = M[0x0]
0x4c5: M[0x0] = V372
0x4c7: M[V370] = V375
0x4c8: V376 = 0x20
0x4ca: V377 = 0x4
0x4cd: V378 = ADD V370 0x4
0x4ce: M[V378] = 0x20
0x4cf: V379 = 0x23
0x4d1: V380 = 0x24
0x4d4: V381 = ADD V370 0x24
0x4d5: M[V381] = 0x23
0x4d6: V382 = 0x424d3a206d75737420626520616e206f776e657220666f72207468652077616c
0x4f7: V383 = 0x44
0x4fa: V384 = ADD V370 0x44
0x4fb: M[V384] = 0x424d3a206d75737420626520616e206f776e657220666f72207468652077616c
0x4fc: V385 = 0x6c65740000000000000000000000000000000000000000000000000000000000
0x51d: V386 = 0x64
0x520: V387 = ADD V370 0x64
0x521: M[V387] = 0x6c65740000000000000000000000000000000000000000000000000000000000
0x523: V388 = M[0x40]
0x527: V389 = SUB V370 V388
0x528: V390 = 0x84
0x52a: V391 = ADD 0x84 V389
0x52c: REVERT V388 V391
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x52d
[0x52d:0x593]
---
Predecessors: [0x4ac]
Successors: [0x594, 0x598]
---
0x52d JUMPDEST
0x52e PUSH1 0x0
0x530 DUP1
0x531 SLOAD
0x532 PUSH1 0x40
0x534 DUP1
0x535 MLOAD
0x536 PUSH32 0x63047bd800000000000000000000000000000000000000000000000000000000
0x557 DUP2
0x558 MSTORE
0x559 PUSH1 0x1
0x55b PUSH1 0xa0
0x55d PUSH1 0x2
0x55f EXP
0x560 SUB
0x561 DUP10
0x562 DUP2
0x563 AND
0x564 PUSH1 0x4
0x566 DUP4
0x567 ADD
0x568 MSTORE
0x569 SWAP2
0x56a MLOAD
0x56b SWAP2
0x56c SWAP1
0x56d SWAP3
0x56e AND
0x56f SWAP3
0x570 PUSH4 0x63047bd8
0x575 SWAP3
0x576 PUSH1 0x24
0x578 DUP1
0x579 DUP3
0x57a ADD
0x57b SWAP4
0x57c PUSH1 0x20
0x57e SWAP4
0x57f SWAP1
0x580 SWAP3
0x581 DUP4
0x582 SWAP1
0x583 SUB
0x584 SWAP1
0x585 SWAP2
0x586 ADD
0x587 SWAP1
0x588 DUP3
0x589 SWAP1
0x58a DUP8
0x58b DUP1
0x58c EXTCODESIZE
0x58d ISZERO
0x58e DUP1
0x58f ISZERO
0x590 PUSH2 0x598
0x593 JUMPI
---
0x52d: JUMPDEST 
0x52e: V392 = 0x0
0x531: V393 = S[0x0]
0x532: V394 = 0x40
0x535: V395 = M[0x40]
0x536: V396 = 0x63047bd800000000000000000000000000000000000000000000000000000000
0x558: M[V395] = 0x63047bd800000000000000000000000000000000000000000000000000000000
0x559: V397 = 0x1
0x55b: V398 = 0xa0
0x55d: V399 = 0x2
0x55f: V400 = EXP 0x2 0xa0
0x560: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x563: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x564: V403 = 0x4
0x567: V404 = ADD V395 0x4
0x568: M[V404] = V402
0x56a: V405 = M[0x40]
0x56e: V406 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x570: V407 = 0x63047bd8
0x576: V408 = 0x24
0x57a: V409 = ADD V395 0x24
0x57c: V410 = 0x20
0x583: V411 = SUB V395 V405
0x586: V412 = ADD 0x24 V411
0x58c: V413 = EXTCODESIZE V406
0x58d: V414 = ISZERO V413
0x58f: V415 = ISZERO V414
0x590: V416 = 0x598
0x593: JUMPI 0x598 V415
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V406, 0x63047bd8, V409, 0x20, V405, V412, V405, 0x0, V406, V414]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0, V406, 0x63047bd8, V409, 0x20, V405, V412, V405, 0x0, V406, V414]

================================

Block 0x594
[0x594:0x597]
---
Predecessors: [0x52d]
Successors: []
---
0x594 PUSH1 0x0
0x596 DUP1
0x597 REVERT
---
0x594: V417 = 0x0
0x597: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V406, 0x63047bd8, V409, 0x20, V405, V412, V405, 0x0, V406, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V406, 0x63047bd8, V409, 0x20, V405, V412, V405, 0x0, V406, V414]

================================

Block 0x598
[0x598:0x5a2]
---
Predecessors: [0x52d]
Successors: [0x5a3, 0x5ac]
---
0x598 JUMPDEST
0x599 POP
0x59a GAS
0x59b CALL
0x59c ISZERO
0x59d DUP1
0x59e ISZERO
0x59f PUSH2 0x5ac
0x5a2 JUMPI
---
0x598: JUMPDEST 
0x59a: V418 = GAS
0x59b: V419 = CALL V418 V406 0x0 V405 V412 V405 0x20
0x59c: V420 = ISZERO V419
0x59e: V421 = ISZERO V420
0x59f: V422 = 0x5ac
0x5a2: JUMPI 0x5ac V421
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V406, 0x63047bd8, V409, 0x20, V405, V412, V405, 0x0, V406, V414]
Stack pops: 7
Stack additions: [V420]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V406, 0x63047bd8, V409, V420]

================================

Block 0x5a3
[0x5a3:0x5ab]
---
Predecessors: [0x598]
Successors: []
---
0x5a3 RETURNDATASIZE
0x5a4 PUSH1 0x0
0x5a6 DUP1
0x5a7 RETURNDATACOPY
0x5a8 RETURNDATASIZE
0x5a9 PUSH1 0x0
0x5ab REVERT
---
0x5a3: V423 = RETURNDATASIZE
0x5a4: V424 = 0x0
0x5a7: RETURNDATACOPY 0x0 0x0 V423
0x5a8: V425 = RETURNDATASIZE
0x5a9: V426 = 0x0
0x5ab: REVERT 0x0 V425
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V406, 0x63047bd8, V409, V420]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V406, 0x63047bd8, V409, V420]

================================

Block 0x5ac
[0x5ac:0x5bd]
---
Predecessors: [0x598]
Successors: [0x5be, 0x5c2]
---
0x5ac JUMPDEST
0x5ad POP
0x5ae POP
0x5af POP
0x5b0 POP
0x5b1 PUSH1 0x40
0x5b3 MLOAD
0x5b4 RETURNDATASIZE
0x5b5 PUSH1 0x20
0x5b7 DUP2
0x5b8 LT
0x5b9 ISZERO
0x5ba PUSH2 0x5c2
0x5bd JUMPI
---
0x5ac: JUMPDEST 
0x5b1: V427 = 0x40
0x5b3: V428 = M[0x40]
0x5b4: V429 = RETURNDATASIZE
0x5b5: V430 = 0x20
0x5b8: V431 = LT V429 0x20
0x5b9: V432 = ISZERO V431
0x5ba: V433 = 0x5c2
0x5bd: JUMPI 0x5c2 V432
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V406, 0x63047bd8, V409, V420]
Stack pops: 4
Stack additions: [V428, V429]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V428, V429]

================================

Block 0x5be
[0x5be:0x5c1]
---
Predecessors: [0x5ac]
Successors: []
---
0x5be PUSH1 0x0
0x5c0 DUP1
0x5c1 REVERT
---
0x5be: V434 = 0x0
0x5c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V428, V429]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V428, V429]

================================

Block 0x5c2
[0x5c2:0x5ca]
---
Predecessors: [0x5ac]
Successors: [0x5cb, 0x61f]
---
0x5c2 JUMPDEST
0x5c3 POP
0x5c4 MLOAD
0x5c5 ISZERO
0x5c6 ISZERO
0x5c7 PUSH2 0x61f
0x5ca JUMPI
---
0x5c2: JUMPDEST 
0x5c4: V435 = M[V428]
0x5c5: V436 = ISZERO V435
0x5c6: V437 = ISZERO V436
0x5c7: V438 = 0x61f
0x5ca: JUMPI 0x61f V437
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V428, V429]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x5cb
[0x5cb:0x61e]
---
Predecessors: [0x5c2]
Successors: []
---
0x5cb PUSH1 0x40
0x5cd DUP1
0x5ce MLOAD
0x5cf PUSH1 0x0
0x5d1 DUP1
0x5d2 MLOAD
0x5d3 PUSH1 0x20
0x5d5 PUSH2 0x1608
0x5d8 DUP4
0x5d9 CODECOPY
0x5da DUP2
0x5db MLOAD
0x5dc SWAP2
0x5dd MSTORE
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH1 0x20
0x5e2 PUSH1 0x4
0x5e4 DUP3
0x5e5 ADD
0x5e6 MSTORE
0x5e7 PUSH1 0x1e
0x5e9 PUSH1 0x24
0x5eb DUP3
0x5ec ADD
0x5ed MSTORE
0x5ee PUSH32 0x4d4d3a207570677261646572206973206e6f7420726567697374657265640000
0x60f PUSH1 0x44
0x611 DUP3
0x612 ADD
0x613 MSTORE
0x614 SWAP1
0x615 MLOAD
0x616 SWAP1
0x617 DUP2
0x618 SWAP1
0x619 SUB
0x61a PUSH1 0x64
0x61c ADD
0x61d SWAP1
0x61e REVERT
---
0x5cb: V439 = 0x40
0x5ce: V440 = M[0x40]
0x5cf: V441 = 0x0
0x5d2: V442 = M[0x0]
0x5d3: V443 = 0x20
0x5d5: V444 = 0x1608
0x5d9: CODECOPY 0x0 0x1608 0x20
0x5db: V445 = M[0x0]
0x5dd: M[0x0] = V442
0x5df: M[V440] = V445
0x5e0: V446 = 0x20
0x5e2: V447 = 0x4
0x5e5: V448 = ADD V440 0x4
0x5e6: M[V448] = 0x20
0x5e7: V449 = 0x1e
0x5e9: V450 = 0x24
0x5ec: V451 = ADD V440 0x24
0x5ed: M[V451] = 0x1e
0x5ee: V452 = 0x4d4d3a207570677261646572206973206e6f7420726567697374657265640000
0x60f: V453 = 0x44
0x612: V454 = ADD V440 0x44
0x613: M[V454] = 0x4d4d3a207570677261646572206973206e6f7420726567697374657265640000
0x615: V455 = M[0x40]
0x619: V456 = SUB V440 V455
0x61a: V457 = 0x64
0x61c: V458 = ADD 0x64 V456
0x61e: REVERT V455 V458
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x61f
[0x61f:0x671]
---
Predecessors: [0x5c2]
Successors: [0x672, 0x676]
---
0x61f JUMPDEST
0x620 DUP5
0x621 PUSH1 0x1
0x623 PUSH1 0xa0
0x625 PUSH1 0x2
0x627 EXP
0x628 SUB
0x629 AND
0x62a PUSH4 0xe79e0840
0x62f PUSH1 0x40
0x631 MLOAD
0x632 DUP2
0x633 PUSH4 0xffffffff
0x638 AND
0x639 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x657 MUL
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x4
0x65c ADD
0x65d PUSH1 0x0
0x65f PUSH1 0x40
0x661 MLOAD
0x662 DUP1
0x663 DUP4
0x664 SUB
0x665 DUP2
0x666 PUSH1 0x0
0x668 DUP8
0x669 DUP1
0x66a EXTCODESIZE
0x66b ISZERO
0x66c DUP1
0x66d ISZERO
0x66e PUSH2 0x676
0x671 JUMPI
---
0x61f: JUMPDEST 
0x621: V459 = 0x1
0x623: V460 = 0xa0
0x625: V461 = 0x2
0x627: V462 = EXP 0x2 0xa0
0x628: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x629: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x62a: V465 = 0xe79e0840
0x62f: V466 = 0x40
0x631: V467 = M[0x40]
0x633: V468 = 0xffffffff
0x638: V469 = AND 0xffffffff 0xe79e0840
0x639: V470 = 0x100000000000000000000000000000000000000000000000000000000
0x657: V471 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe79e0840
0x659: M[V467] = 0xe79e084000000000000000000000000000000000000000000000000000000000
0x65a: V472 = 0x4
0x65c: V473 = ADD 0x4 V467
0x65d: V474 = 0x0
0x65f: V475 = 0x40
0x661: V476 = M[0x40]
0x664: V477 = SUB V473 V476
0x666: V478 = 0x0
0x66a: V479 = EXTCODESIZE V464
0x66b: V480 = ISZERO V479
0x66d: V481 = ISZERO V480
0x66e: V482 = 0x676
0x671: JUMPI 0x676 V481
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V464, 0xe79e0840, V473, 0x0, V476, V477, V476, 0x0, V464, V480]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0, V464, 0xe79e0840, V473, 0x0, V476, V477, V476, 0x0, V464, V480]

================================

Block 0x672
[0x672:0x675]
---
Predecessors: [0x61f]
Successors: []
---
0x672 PUSH1 0x0
0x674 DUP1
0x675 REVERT
---
0x672: V483 = 0x0
0x675: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V464, 0xe79e0840, V473, 0x0, V476, V477, V476, 0x0, V464, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V464, 0xe79e0840, V473, 0x0, V476, V477, V476, 0x0, V464, V480]

================================

Block 0x676
[0x676:0x680]
---
Predecessors: [0x61f]
Successors: [0x681, 0x68a]
---
0x676 JUMPDEST
0x677 POP
0x678 GAS
0x679 CALL
0x67a ISZERO
0x67b DUP1
0x67c ISZERO
0x67d PUSH2 0x68a
0x680 JUMPI
---
0x676: JUMPDEST 
0x678: V484 = GAS
0x679: V485 = CALL V484 V464 0x0 V476 V477 V476 0x0
0x67a: V486 = ISZERO V485
0x67c: V487 = ISZERO V486
0x67d: V488 = 0x68a
0x680: JUMPI 0x68a V487
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V464, 0xe79e0840, V473, 0x0, V476, V477, V476, 0x0, V464, V480]
Stack pops: 7
Stack additions: [V486]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, S13, S12, S11, S10, V464, 0xe79e0840, V473, V486]

================================

Block 0x681
[0x681:0x689]
---
Predecessors: [0x676]
Successors: []
---
0x681 RETURNDATASIZE
0x682 PUSH1 0x0
0x684 DUP1
0x685 RETURNDATACOPY
0x686 RETURNDATASIZE
0x687 PUSH1 0x0
0x689 REVERT
---
0x681: V489 = RETURNDATASIZE
0x682: V490 = 0x0
0x685: RETURNDATACOPY 0x0 0x0 V489
0x686: V491 = RETURNDATASIZE
0x687: V492 = 0x0
0x689: REVERT 0x0 V491
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V464, 0xe79e0840, V473, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V464, 0xe79e0840, V473, V486]

================================

Block 0x68a
[0x68a:0x6ae]
---
Predecessors: [0x676]
Successors: [0x6af, 0x6b3]
---
0x68a JUMPDEST
0x68b POP
0x68c POP
0x68d POP
0x68e POP
0x68f PUSH1 0x40
0x691 MLOAD
0x692 RETURNDATASIZE
0x693 PUSH1 0x0
0x695 DUP3
0x696 RETURNDATACOPY
0x697 PUSH1 0x1f
0x699 RETURNDATASIZE
0x69a SWAP1
0x69b DUP2
0x69c ADD
0x69d PUSH1 0x1f
0x69f NOT
0x6a0 AND
0x6a1 DUP3
0x6a2 ADD
0x6a3 PUSH1 0x40
0x6a5 MSTORE
0x6a6 PUSH1 0x20
0x6a8 DUP2
0x6a9 LT
0x6aa ISZERO
0x6ab PUSH2 0x6b3
0x6ae JUMPI
---
0x68a: JUMPDEST 
0x68f: V493 = 0x40
0x691: V494 = M[0x40]
0x692: V495 = RETURNDATASIZE
0x693: V496 = 0x0
0x696: RETURNDATACOPY V494 0x0 V495
0x697: V497 = 0x1f
0x699: V498 = RETURNDATASIZE
0x69c: V499 = ADD V498 0x1f
0x69d: V500 = 0x1f
0x69f: V501 = NOT 0x1f
0x6a0: V502 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V499
0x6a2: V503 = ADD V494 V502
0x6a3: V504 = 0x40
0x6a5: M[0x40] = V503
0x6a6: V505 = 0x20
0x6a9: V506 = LT V498 0x20
0x6aa: V507 = ISZERO V506
0x6ab: V508 = 0x6b3
0x6ae: JUMPI 0x6b3 V507
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V464, 0xe79e0840, V473, V486]
Stack pops: 4
Stack additions: [V494, V498]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V494, V498]

================================

Block 0x6af
[0x6af:0x6b2]
---
Predecessors: [0x68a]
Successors: []
---
0x6af PUSH1 0x0
0x6b1 DUP1
0x6b2 REVERT
---
0x6af: V509 = 0x0
0x6b2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V494, V498]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V494, V498]

================================

Block 0x6b3
[0x6b3:0x6c6]
---
Predecessors: [0x68a]
Successors: [0x6c7, 0x6cb]
---
0x6b3 JUMPDEST
0x6b4 DUP2
0x6b5 ADD
0x6b6 SWAP1
0x6b7 DUP1
0x6b8 DUP1
0x6b9 MLOAD
0x6ba PUSH5 0x100000000
0x6c0 DUP2
0x6c1 GT
0x6c2 ISZERO
0x6c3 PUSH2 0x6cb
0x6c6 JUMPI
---
0x6b3: JUMPDEST 
0x6b5: V510 = ADD V494 V498
0x6b9: V511 = M[V494]
0x6ba: V512 = 0x100000000
0x6c1: V513 = GT V511 0x100000000
0x6c2: V514 = ISZERO V513
0x6c3: V515 = 0x6cb
0x6c6: JUMPI 0x6cb V514
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V494, V498]
Stack pops: 2
Stack additions: [V510, S1, S1, V511]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, S5, S4, S3, S2, V510, V494, V494, V511]

================================

Block 0x6c7
[0x6c7:0x6ca]
---
Predecessors: [0x6b3]
Successors: []
---
0x6c7 PUSH1 0x0
0x6c9 DUP1
0x6ca REVERT
---
0x6c7: V516 = 0x0
0x6ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V510, V494, V494, V511]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V510, V494, V494, V511]

================================

Block 0x6cb
[0x6cb:0x6d9]
---
Predecessors: [0x6b3]
Successors: [0x6da, 0x6de]
---
0x6cb JUMPDEST
0x6cc DUP3
0x6cd ADD
0x6ce PUSH1 0x20
0x6d0 DUP2
0x6d1 ADD
0x6d2 DUP5
0x6d3 DUP2
0x6d4 GT
0x6d5 ISZERO
0x6d6 PUSH2 0x6de
0x6d9 JUMPI
---
0x6cb: JUMPDEST 
0x6cd: V517 = ADD V494 V511
0x6ce: V518 = 0x20
0x6d1: V519 = ADD V517 0x20
0x6d4: V520 = GT V519 V510
0x6d5: V521 = ISZERO V520
0x6d6: V522 = 0x6de
0x6d9: JUMPI 0x6de V521
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V510, V494, V494, V511]
Stack pops: 4
Stack additions: [S3, S2, S1, V517, V519]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, S7, S6, S5, S4, V510, V494, V494, V517, V519]

================================

Block 0x6da
[0x6da:0x6dd]
---
Predecessors: [0x6cb]
Successors: []
---
0x6da PUSH1 0x0
0x6dc DUP1
0x6dd REVERT
---
0x6da: V523 = 0x0
0x6dd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, S8, S7, S6, S5, V510, V494, V494, V517, V519]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, S8, S7, S6, S5, V510, V494, V494, V517, V519]

================================

Block 0x6de
[0x6de:0x6f6]
---
Predecessors: [0x6cb]
Successors: [0x6f7, 0x6fb]
---
0x6de JUMPDEST
0x6df DUP2
0x6e0 MLOAD
0x6e1 DUP6
0x6e2 PUSH1 0x20
0x6e4 DUP3
0x6e5 MUL
0x6e6 DUP4
0x6e7 ADD
0x6e8 GT
0x6e9 PUSH5 0x100000000
0x6ef DUP3
0x6f0 GT
0x6f1 OR
0x6f2 ISZERO
0x6f3 PUSH2 0x6fb
0x6f6 JUMPI
---
0x6de: JUMPDEST 
0x6e0: V524 = M[V517]
0x6e2: V525 = 0x20
0x6e5: V526 = MUL V524 0x20
0x6e7: V527 = ADD V519 V526
0x6e8: V528 = GT V527 V510
0x6e9: V529 = 0x100000000
0x6f0: V530 = GT V524 0x100000000
0x6f1: V531 = OR V530 V528
0x6f2: V532 = ISZERO V531
0x6f3: V533 = 0x6fb
0x6f6: JUMPI 0x6fb V532
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, S8, S7, S6, S5, V510, V494, V494, V517, V519]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V524]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, S8, S7, S6, S5, V510, V494, V494, V517, V519, V524]

================================

Block 0x6f7
[0x6f7:0x6fa]
---
Predecessors: [0x6de]
Successors: []
---
0x6f7 PUSH1 0x0
0x6f9 DUP1
0x6fa REVERT
---
0x6f7: V534 = 0x0
0x6fa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, S9, S8, S7, S6, V510, V494, V494, V517, V519, V524]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, S9, S8, S7, S6, V510, V494, V494, V517, V519, V524]

================================

Block 0x6fb
[0x6fb:0x757]
---
Predecessors: [0x6de]
Successors: [0x758, 0x75c]
---
0x6fb JUMPDEST
0x6fc POP
0x6fd POP
0x6fe SWAP3
0x6ff SWAP2
0x700 SWAP1
0x701 POP
0x702 POP
0x703 POP
0x704 SWAP4
0x705 POP
0x706 DUP5
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f AND
0x710 PUSH4 0x4c3ea4fe
0x715 PUSH1 0x40
0x717 MLOAD
0x718 DUP2
0x719 PUSH4 0xffffffff
0x71e AND
0x71f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x73d MUL
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x4
0x742 ADD
0x743 PUSH1 0x0
0x745 PUSH1 0x40
0x747 MLOAD
0x748 DUP1
0x749 DUP4
0x74a SUB
0x74b DUP2
0x74c PUSH1 0x0
0x74e DUP8
0x74f DUP1
0x750 EXTCODESIZE
0x751 ISZERO
0x752 DUP1
0x753 ISZERO
0x754 PUSH2 0x75c
0x757 JUMPI
---
0x6fb: JUMPDEST 
0x707: V535 = 0x1
0x709: V536 = 0xa0
0x70b: V537 = 0x2
0x70d: V538 = EXP 0x2 0xa0
0x70e: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70f: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x710: V541 = 0x4c3ea4fe
0x715: V542 = 0x40
0x717: V543 = M[0x40]
0x719: V544 = 0xffffffff
0x71e: V545 = AND 0xffffffff 0x4c3ea4fe
0x71f: V546 = 0x100000000000000000000000000000000000000000000000000000000
0x73d: V547 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c3ea4fe
0x73f: M[V543] = 0x4c3ea4fe00000000000000000000000000000000000000000000000000000000
0x740: V548 = 0x4
0x742: V549 = ADD 0x4 V543
0x743: V550 = 0x0
0x745: V551 = 0x40
0x747: V552 = M[0x40]
0x74a: V553 = SUB V549 V552
0x74c: V554 = 0x0
0x750: V555 = EXTCODESIZE V540
0x751: V556 = ISZERO V555
0x753: V557 = ISZERO V556
0x754: V558 = 0x75c
0x757: JUMPI 0x75c V557
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, S9, S8, S7, S6, V510, V494, V494, V517, V519, V524]
Stack pops: 11
Stack additions: [S10, S2, S8, S7, S6, V540, 0x4c3ea4fe, V549, 0x0, V552, V553, V552, 0x0, V540, V556]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, V517, S8, S7, S6, V540, 0x4c3ea4fe, V549, 0x0, V552, V553, V552, 0x0, V540, V556]

================================

Block 0x758
[0x758:0x75b]
---
Predecessors: [0x6fb]
Successors: []
---
0x758 PUSH1 0x0
0x75a DUP1
0x75b REVERT
---
0x758: V559 = 0x0
0x75b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, S12, S11, S10, V540, 0x4c3ea4fe, V549, 0x0, V552, V553, V552, 0x0, V540, V556]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, S12, S11, S10, V540, 0x4c3ea4fe, V549, 0x0, V552, V553, V552, 0x0, V540, V556]

================================

Block 0x75c
[0x75c:0x766]
---
Predecessors: [0x6fb]
Successors: [0x767, 0x770]
---
0x75c JUMPDEST
0x75d POP
0x75e GAS
0x75f CALL
0x760 ISZERO
0x761 DUP1
0x762 ISZERO
0x763 PUSH2 0x770
0x766 JUMPI
---
0x75c: JUMPDEST 
0x75e: V560 = GAS
0x75f: V561 = CALL V560 V540 0x0 V552 V553 V552 0x0
0x760: V562 = ISZERO V561
0x762: V563 = ISZERO V562
0x763: V564 = 0x770
0x766: JUMPI 0x770 V563
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, S12, S11, S10, V540, 0x4c3ea4fe, V549, 0x0, V552, V553, V552, 0x0, V540, V556]
Stack pops: 7
Stack additions: [V562]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, S12, S11, S10, V540, 0x4c3ea4fe, V549, V562]

================================

Block 0x767
[0x767:0x76f]
---
Predecessors: [0x75c]
Successors: []
---
0x767 RETURNDATASIZE
0x768 PUSH1 0x0
0x76a DUP1
0x76b RETURNDATACOPY
0x76c RETURNDATASIZE
0x76d PUSH1 0x0
0x76f REVERT
---
0x767: V565 = RETURNDATASIZE
0x768: V566 = 0x0
0x76b: RETURNDATACOPY 0x0 0x0 V565
0x76c: V567 = RETURNDATASIZE
0x76d: V568 = 0x0
0x76f: REVERT 0x0 V567
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V540, 0x4c3ea4fe, V549, V562]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V540, 0x4c3ea4fe, V549, V562]

================================

Block 0x770
[0x770:0x794]
---
Predecessors: [0x75c]
Successors: [0x795, 0x799]
---
0x770 JUMPDEST
0x771 POP
0x772 POP
0x773 POP
0x774 POP
0x775 PUSH1 0x40
0x777 MLOAD
0x778 RETURNDATASIZE
0x779 PUSH1 0x0
0x77b DUP3
0x77c RETURNDATACOPY
0x77d PUSH1 0x1f
0x77f RETURNDATASIZE
0x780 SWAP1
0x781 DUP2
0x782 ADD
0x783 PUSH1 0x1f
0x785 NOT
0x786 AND
0x787 DUP3
0x788 ADD
0x789 PUSH1 0x40
0x78b MSTORE
0x78c PUSH1 0x20
0x78e DUP2
0x78f LT
0x790 ISZERO
0x791 PUSH2 0x799
0x794 JUMPI
---
0x770: JUMPDEST 
0x775: V569 = 0x40
0x777: V570 = M[0x40]
0x778: V571 = RETURNDATASIZE
0x779: V572 = 0x0
0x77c: RETURNDATACOPY V570 0x0 V571
0x77d: V573 = 0x1f
0x77f: V574 = RETURNDATASIZE
0x782: V575 = ADD V574 0x1f
0x783: V576 = 0x1f
0x785: V577 = NOT 0x1f
0x786: V578 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V575
0x788: V579 = ADD V570 V578
0x789: V580 = 0x40
0x78b: M[0x40] = V579
0x78c: V581 = 0x20
0x78f: V582 = LT V574 0x20
0x790: V583 = ISZERO V582
0x791: V584 = 0x799
0x794: JUMPI 0x799 V583
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V540, 0x4c3ea4fe, V549, V562]
Stack pops: 4
Stack additions: [V570, V574]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V570, V574]

================================

Block 0x795
[0x795:0x798]
---
Predecessors: [0x770]
Successors: []
---
0x795 PUSH1 0x0
0x797 DUP1
0x798 REVERT
---
0x795: V585 = 0x0
0x798: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, V517, S4, S3, S2, V570, V574]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, V517, S4, S3, S2, V570, V574]

================================

Block 0x799
[0x799:0x7ac]
---
Predecessors: [0x770]
Successors: [0x7ad, 0x7b1]
---
0x799 JUMPDEST
0x79a DUP2
0x79b ADD
0x79c SWAP1
0x79d DUP1
0x79e DUP1
0x79f MLOAD
0x7a0 PUSH5 0x100000000
0x7a6 DUP2
0x7a7 GT
0x7a8 ISZERO
0x7a9 PUSH2 0x7b1
0x7ac JUMPI
---
0x799: JUMPDEST 
0x79b: V586 = ADD V570 V574
0x79f: V587 = M[V570]
0x7a0: V588 = 0x100000000
0x7a7: V589 = GT V587 0x100000000
0x7a8: V590 = ISZERO V589
0x7a9: V591 = 0x7b1
0x7ac: JUMPI 0x7b1 V590
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, V517, S4, S3, S2, V570, V574]
Stack pops: 2
Stack additions: [V586, S1, S1, V587]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S9, S8, S7, S6, V517, S4, S3, S2, V586, V570, V570, V587]

================================

Block 0x7ad
[0x7ad:0x7b0]
---
Predecessors: [0x799]
Successors: []
---
0x7ad PUSH1 0x0
0x7af DUP1
0x7b0 REVERT
---
0x7ad: V592 = 0x0
0x7b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V586, V570, V570, V587]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V586, V570, V570, V587]

================================

Block 0x7b1
[0x7b1:0x7bf]
---
Predecessors: [0x799]
Successors: [0x7c0, 0x7c4]
---
0x7b1 JUMPDEST
0x7b2 DUP3
0x7b3 ADD
0x7b4 PUSH1 0x20
0x7b6 DUP2
0x7b7 ADD
0x7b8 DUP5
0x7b9 DUP2
0x7ba GT
0x7bb ISZERO
0x7bc PUSH2 0x7c4
0x7bf JUMPI
---
0x7b1: JUMPDEST 
0x7b3: V593 = ADD V570 V587
0x7b4: V594 = 0x20
0x7b7: V595 = ADD V593 0x20
0x7ba: V596 = GT V595 V586
0x7bb: V597 = ISZERO V596
0x7bc: V598 = 0x7c4
0x7bf: JUMPI 0x7c4 V597
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V586, V570, V570, V587]
Stack pops: 4
Stack additions: [S3, S2, S1, V593, V595]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S11, S10, S9, S8, V517, S6, S5, S4, V586, V570, V570, V593, V595]

================================

Block 0x7c0
[0x7c0:0x7c3]
---
Predecessors: [0x7b1]
Successors: []
---
0x7c0 PUSH1 0x0
0x7c2 DUP1
0x7c3 REVERT
---
0x7c0: V599 = 0x0
0x7c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, S7, S6, S5, V586, V570, V570, V593, V595]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, S7, S6, S5, V586, V570, V570, V593, V595]

================================

Block 0x7c4
[0x7c4:0x7dc]
---
Predecessors: [0x7b1]
Successors: [0x7dd, 0x7e1]
---
0x7c4 JUMPDEST
0x7c5 DUP2
0x7c6 MLOAD
0x7c7 DUP6
0x7c8 PUSH1 0x20
0x7ca DUP3
0x7cb MUL
0x7cc DUP4
0x7cd ADD
0x7ce GT
0x7cf PUSH5 0x100000000
0x7d5 DUP3
0x7d6 GT
0x7d7 OR
0x7d8 ISZERO
0x7d9 PUSH2 0x7e1
0x7dc JUMPI
---
0x7c4: JUMPDEST 
0x7c6: V600 = M[V593]
0x7c8: V601 = 0x20
0x7cb: V602 = MUL V600 0x20
0x7cd: V603 = ADD V595 V602
0x7ce: V604 = GT V603 V586
0x7cf: V605 = 0x100000000
0x7d6: V606 = GT V600 0x100000000
0x7d7: V607 = OR V606 V604
0x7d8: V608 = ISZERO V607
0x7d9: V609 = 0x7e1
0x7dc: JUMPI 0x7e1 V608
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, S7, S6, S5, V586, V570, V570, V593, V595]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V600]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, S7, S6, S5, V586, V570, V570, V593, V595, V600]

================================

Block 0x7dd
[0x7dd:0x7e0]
---
Predecessors: [0x7c4]
Successors: []
---
0x7dd PUSH1 0x0
0x7df DUP1
0x7e0 REVERT
---
0x7dd: V610 = 0x0
0x7e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, V517, S8, S7, S6, V586, V570, V570, V593, V595, V600]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, V517, S8, S7, S6, V586, V570, V570, V593, V595, V600]

================================

Block 0x7e1
[0x7e1:0x834]
---
Predecessors: [0x7c4]
Successors: [0x835]
---
0x7e1 JUMPDEST
0x7e2 POP
0x7e3 POP
0x7e4 SWAP3
0x7e5 SWAP2
0x7e6 SWAP1
0x7e7 POP
0x7e8 POP
0x7e9 POP
0x7ea SWAP3
0x7eb POP
0x7ec DUP6
0x7ed DUP5
0x7ee DUP5
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 PUSH1 0x24
0x7f4 ADD
0x7f5 DUP1
0x7f6 DUP5
0x7f7 PUSH1 0x1
0x7f9 PUSH1 0xa0
0x7fb PUSH1 0x2
0x7fd EXP
0x7fe SUB
0x7ff AND
0x800 PUSH1 0x1
0x802 PUSH1 0xa0
0x804 PUSH1 0x2
0x806 EXP
0x807 SUB
0x808 AND
0x809 DUP2
0x80a MSTORE
0x80b PUSH1 0x20
0x80d ADD
0x80e DUP1
0x80f PUSH1 0x20
0x811 ADD
0x812 DUP1
0x813 PUSH1 0x20
0x815 ADD
0x816 DUP4
0x817 DUP2
0x818 SUB
0x819 DUP4
0x81a MSTORE
0x81b DUP6
0x81c DUP2
0x81d DUP2
0x81e MLOAD
0x81f DUP2
0x820 MSTORE
0x821 PUSH1 0x20
0x823 ADD
0x824 SWAP2
0x825 POP
0x826 DUP1
0x827 MLOAD
0x828 SWAP1
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP1
0x82d PUSH1 0x20
0x82f MUL
0x830 DUP1
0x831 DUP4
0x832 DUP4
0x833 PUSH1 0x0
---
0x7e1: JUMPDEST 
0x7ef: V611 = 0x40
0x7f1: V612 = M[0x40]
0x7f2: V613 = 0x24
0x7f4: V614 = ADD 0x24 V612
0x7f7: V615 = 0x1
0x7f9: V616 = 0xa0
0x7fb: V617 = 0x2
0x7fd: V618 = EXP 0x2 0xa0
0x7fe: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ff: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x800: V621 = 0x1
0x802: V622 = 0xa0
0x804: V623 = 0x2
0x806: V624 = EXP 0x2 0xa0
0x807: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x808: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x80a: M[V614] = V626
0x80b: V627 = 0x20
0x80d: V628 = ADD 0x20 V614
0x80f: V629 = 0x20
0x811: V630 = ADD 0x20 V628
0x813: V631 = 0x20
0x815: V632 = ADD 0x20 V630
0x818: V633 = SUB V632 V614
0x81a: M[V628] = V633
0x81e: V634 = M[V517]
0x820: M[V632] = V634
0x821: V635 = 0x20
0x823: V636 = ADD 0x20 V632
0x827: V637 = M[V517]
0x829: V638 = 0x20
0x82b: V639 = ADD 0x20 V517
0x82d: V640 = 0x20
0x82f: V641 = MUL 0x20 V637
0x833: V642 = 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, V517, S8, S7, S6, V586, V570, V570, V593, V595, V600]
Stack pops: 12
Stack additions: [S11, S10, S9, S2, S7, S6, S11, S9, S2, V614, V628, V630, V636, V639, V641, V641, V636, V639, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S13, S12, S11, S10, V517, V593, S7, S6, S11, V517, V593, V614, V628, V630, V636, V639, V641, V641, V636, V639, 0x0]

================================

Block 0x835
[0x835:0x83d]
---
Predecessors: [0x7e1, 0x83e]
Successors: [0x83e, 0x84d]
---
0x835 JUMPDEST
0x836 DUP4
0x837 DUP2
0x838 LT
0x839 ISZERO
0x83a PUSH2 0x84d
0x83d JUMPI
---
0x835: JUMPDEST 
0x838: V643 = LT S0 V641
0x839: V644 = ISZERO V643
0x83a: V645 = 0x84d
0x83d: JUMPI 0x84d V644
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V636, V639, V641, V641, V636, V639, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V636, V639, V641, V641, V636, V639, S0]

================================

Block 0x83e
[0x83e:0x84c]
---
Predecessors: [0x835]
Successors: [0x835]
---
0x83e DUP2
0x83f DUP2
0x840 ADD
0x841 MLOAD
0x842 DUP4
0x843 DUP3
0x844 ADD
0x845 MSTORE
0x846 PUSH1 0x20
0x848 ADD
0x849 PUSH2 0x835
0x84c JUMP
---
0x840: V646 = ADD S0 V639
0x841: V647 = M[V646]
0x844: V648 = ADD S0 V636
0x845: M[V648] = V647
0x846: V649 = 0x20
0x848: V650 = ADD 0x20 S0
0x849: V651 = 0x835
0x84c: JUMP 0x835
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V636, V639, V641, V641, V636, V639, S0]
Stack pops: 3
Stack additions: [S2, S1, V650]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V636, V639, V641, V641, V636, V639, V650]

================================

Block 0x84d
[0x84d:0x873]
---
Predecessors: [0x835]
Successors: [0x874]
---
0x84d JUMPDEST
0x84e POP
0x84f POP
0x850 POP
0x851 POP
0x852 SWAP1
0x853 POP
0x854 ADD
0x855 DUP4
0x856 DUP2
0x857 SUB
0x858 DUP3
0x859 MSTORE
0x85a DUP5
0x85b DUP2
0x85c DUP2
0x85d MLOAD
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 SWAP2
0x864 POP
0x865 DUP1
0x866 MLOAD
0x867 SWAP1
0x868 PUSH1 0x20
0x86a ADD
0x86b SWAP1
0x86c PUSH1 0x20
0x86e MUL
0x86f DUP1
0x870 DUP4
0x871 DUP4
0x872 PUSH1 0x0
---
0x84d: JUMPDEST 
0x854: V652 = ADD V641 V636
0x857: V653 = SUB V652 V614
0x859: M[V630] = V653
0x85d: V654 = M[V593]
0x85f: M[V652] = V654
0x860: V655 = 0x20
0x862: V656 = ADD 0x20 V652
0x866: V657 = M[V593]
0x868: V658 = 0x20
0x86a: V659 = ADD 0x20 V593
0x86c: V660 = 0x20
0x86e: V661 = MUL 0x20 V657
0x872: V662 = 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V636, V639, V641, V641, V636, V639, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, V656, V659, V661, V661, V656, V659, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V656, V659, V661, V661, V656, V659, 0x0]

================================

Block 0x874
[0x874:0x87c]
---
Predecessors: [0x84d, 0x87d]
Successors: [0x87d, 0x88c]
---
0x874 JUMPDEST
0x875 DUP4
0x876 DUP2
0x877 LT
0x878 ISZERO
0x879 PUSH2 0x88c
0x87c JUMPI
---
0x874: JUMPDEST 
0x877: V663 = LT S0 V661
0x878: V664 = ISZERO V663
0x879: V665 = 0x88c
0x87c: JUMPI 0x88c V664
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V656, V659, V661, V661, V656, V659, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V656, V659, V661, V661, V656, V659, S0]

================================

Block 0x87d
[0x87d:0x88b]
---
Predecessors: [0x874]
Successors: [0x874]
---
0x87d DUP2
0x87e DUP2
0x87f ADD
0x880 MLOAD
0x881 DUP4
0x882 DUP3
0x883 ADD
0x884 MSTORE
0x885 PUSH1 0x20
0x887 ADD
0x888 PUSH2 0x874
0x88b JUMP
---
0x87f: V666 = ADD S0 V659
0x880: V667 = M[V666]
0x883: V668 = ADD S0 V656
0x884: M[V668] = V667
0x885: V669 = 0x20
0x887: V670 = ADD 0x20 S0
0x888: V671 = 0x874
0x88b: JUMP 0x874
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V656, V659, V661, V661, V656, V659, S0]
Stack pops: 3
Stack additions: [S2, S1, V670]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V656, V659, V661, V661, V656, V659, V670]

================================

Block 0x88c
[0x88c:0x935]
---
Predecessors: [0x874]
Successors: [0x936]
---
0x88c JUMPDEST
0x88d POP
0x88e POP
0x88f POP
0x890 POP
0x891 SWAP1
0x892 POP
0x893 ADD
0x894 SWAP6
0x895 POP
0x896 POP
0x897 POP
0x898 POP
0x899 POP
0x89a POP
0x89b PUSH1 0x40
0x89d MLOAD
0x89e PUSH1 0x20
0x8a0 DUP2
0x8a1 DUP4
0x8a2 SUB
0x8a3 SUB
0x8a4 DUP2
0x8a5 MSTORE
0x8a6 SWAP1
0x8a7 PUSH1 0x40
0x8a9 MSTORE
0x8aa PUSH32 0xaa4f95ea00000000000000000000000000000000000000000000000000000000
0x8cb PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8e8 NOT
0x8e9 AND
0x8ea PUSH1 0x20
0x8ec DUP3
0x8ed ADD
0x8ee DUP1
0x8ef MLOAD
0x8f0 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x90d DUP4
0x90e DUP2
0x90f DUP4
0x910 AND
0x911 OR
0x912 DUP4
0x913 MSTORE
0x914 POP
0x915 POP
0x916 POP
0x917 POP
0x918 SWAP2
0x919 POP
0x91a DUP5
0x91b PUSH1 0x1
0x91d PUSH1 0xa0
0x91f PUSH1 0x2
0x921 EXP
0x922 SUB
0x923 AND
0x924 DUP3
0x925 PUSH1 0x40
0x927 MLOAD
0x928 DUP1
0x929 DUP3
0x92a DUP1
0x92b MLOAD
0x92c SWAP1
0x92d PUSH1 0x20
0x92f ADD
0x930 SWAP1
0x931 DUP1
0x932 DUP4
0x933 DUP4
0x934 PUSH1 0x0
---
0x88c: JUMPDEST 
0x893: V672 = ADD V661 V656
0x89b: V673 = 0x40
0x89d: V674 = M[0x40]
0x89e: V675 = 0x20
0x8a2: V676 = SUB V672 V674
0x8a3: V677 = SUB V676 0x20
0x8a5: M[V674] = V677
0x8a7: V678 = 0x40
0x8a9: M[0x40] = V672
0x8aa: V679 = 0xaa4f95ea00000000000000000000000000000000000000000000000000000000
0x8cb: V680 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8e8: V681 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8e9: V682 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0xaa4f95ea00000000000000000000000000000000000000000000000000000000
0x8ea: V683 = 0x20
0x8ed: V684 = ADD V674 0x20
0x8ef: V685 = M[V684]
0x8f0: V686 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x910: V687 = AND V685 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x911: V688 = OR V687 0xaa4f95ea00000000000000000000000000000000000000000000000000000000
0x913: M[V684] = V688
0x91b: V689 = 0x1
0x91d: V690 = 0xa0
0x91f: V691 = 0x2
0x921: V692 = EXP 0x2 0xa0
0x922: V693 = SUB 0x10000000000000000000000000000000000000000 0x1
0x923: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff S17
0x925: V695 = 0x40
0x927: V696 = M[0x40]
0x92b: V697 = M[V674]
0x92d: V698 = 0x20
0x92f: V699 = ADD 0x20 V674
0x934: V700 = 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, S14, S13, S12, V517, V593, V614, V628, V630, V656, V659, V661, V661, V656, V659, S0]
Stack pops: 18
Stack additions: [S17, S16, S15, V674, S13, V694, V674, V696, V696, V699, V697, V697, V696, V699, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S20, S19, S18, S17, V517, V593, V674, S13, V694, V674, V696, V696, V699, V697, V697, V696, V699, 0x0]

================================

Block 0x936
[0x936:0x93e]
---
Predecessors: [0x88c, 0x93f]
Successors: [0x93f, 0x94e]
---
0x936 JUMPDEST
0x937 DUP4
0x938 DUP2
0x939 LT
0x93a ISZERO
0x93b PUSH2 0x94e
0x93e JUMPI
---
0x936: JUMPDEST 
0x939: V701 = LT S0 V697
0x93a: V702 = ISZERO V701
0x93b: V703 = 0x94e
0x93e: JUMPI 0x94e V702
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, V593, V674, S10, V694, V674, V696, V696, V699, V697, V697, V696, V699, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, V593, V674, S10, V694, V674, V696, V696, V699, V697, V697, V696, V699, S0]

================================

Block 0x93f
[0x93f:0x94d]
---
Predecessors: [0x936]
Successors: [0x936]
---
0x93f DUP2
0x940 DUP2
0x941 ADD
0x942 MLOAD
0x943 DUP4
0x944 DUP3
0x945 ADD
0x946 MSTORE
0x947 PUSH1 0x20
0x949 ADD
0x94a PUSH2 0x936
0x94d JUMP
---
0x941: V704 = ADD S0 V699
0x942: V705 = M[V704]
0x945: V706 = ADD S0 V696
0x946: M[V706] = V705
0x947: V707 = 0x20
0x949: V708 = ADD 0x20 S0
0x94a: V709 = 0x936
0x94d: JUMP 0x936
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, V593, V674, S10, V694, V674, V696, V696, V699, V697, V697, V696, V699, S0]
Stack pops: 3
Stack additions: [S2, S1, V708]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, V593, V674, S10, V694, V674, V696, V696, V699, V697, V697, V696, V699, V708]

================================

Block 0x94e
[0x94e:0x961]
---
Predecessors: [0x936]
Successors: [0x962, 0x97b]
---
0x94e JUMPDEST
0x94f POP
0x950 POP
0x951 POP
0x952 POP
0x953 SWAP1
0x954 POP
0x955 SWAP1
0x956 DUP2
0x957 ADD
0x958 SWAP1
0x959 PUSH1 0x1f
0x95b AND
0x95c DUP1
0x95d ISZERO
0x95e PUSH2 0x97b
0x961 JUMPI
---
0x94e: JUMPDEST 
0x957: V710 = ADD V697 V696
0x959: V711 = 0x1f
0x95b: V712 = AND 0x1f V697
0x95d: V713 = ISZERO V712
0x95e: V714 = 0x97b
0x961: JUMPI 0x97b V713
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, V593, V674, S10, V694, V674, V696, V696, V699, V697, V697, V696, V699, S0]
Stack pops: 7
Stack additions: [V710, V712]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S17, S16, S15, S14, V517, V593, V674, S10, V694, V674, V696, V710, V712]

================================

Block 0x962
[0x962:0x97a]
---
Predecessors: [0x94e]
Successors: [0x97b]
---
0x962 DUP1
0x963 DUP3
0x964 SUB
0x965 DUP1
0x966 MLOAD
0x967 PUSH1 0x1
0x969 DUP4
0x96a PUSH1 0x20
0x96c SUB
0x96d PUSH2 0x100
0x970 EXP
0x971 SUB
0x972 NOT
0x973 AND
0x974 DUP2
0x975 MSTORE
0x976 PUSH1 0x20
0x978 ADD
0x979 SWAP2
0x97a POP
---
0x964: V715 = SUB V710 V712
0x966: V716 = M[V715]
0x967: V717 = 0x1
0x96a: V718 = 0x20
0x96c: V719 = SUB 0x20 V712
0x96d: V720 = 0x100
0x970: V721 = EXP 0x100 V719
0x971: V722 = SUB V721 0x1
0x972: V723 = NOT V722
0x973: V724 = AND V723 V716
0x975: M[V715] = V724
0x976: V725 = 0x20
0x978: V726 = ADD 0x20 V715
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, V593, V674, S5, V694, V674, V696, V710, V712]
Stack pops: 2
Stack additions: [V726, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, V593, V674, S5, V694, V674, V696, V726, V712]

================================

Block 0x97b
[0x97b:0x994]
---
Predecessors: [0x94e, 0x962]
Successors: [0x995, 0x9e9]
---
0x97b JUMPDEST
0x97c POP
0x97d SWAP2
0x97e POP
0x97f POP
0x980 PUSH1 0x0
0x982 PUSH1 0x40
0x984 MLOAD
0x985 DUP1
0x986 DUP4
0x987 SUB
0x988 DUP2
0x989 DUP6
0x98a GAS
0x98b DELEGATECALL
0x98c SWAP2
0x98d POP
0x98e POP
0x98f ISZERO
0x990 ISZERO
0x991 PUSH2 0x9e9
0x994 JUMPI
---
0x97b: JUMPDEST 
0x980: V727 = 0x0
0x982: V728 = 0x40
0x984: V729 = M[0x40]
0x987: V730 = SUB S1 V729
0x98a: V731 = GAS
0x98b: V732 = DELEGATECALL V731 V694 V729 V730 V729 0x0
0x98f: V733 = ISZERO V732
0x990: V734 = ISZERO V733
0x991: V735 = 0x9e9
0x994: JUMPI 0x9e9 V734
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, V593, V674, S5, V694, V674, V696, S1, V712]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S12, S11, S10, S9, V517, V593, V674, S5]

================================

Block 0x995
[0x995:0x9e8]
---
Predecessors: [0x97b]
Successors: []
---
0x995 PUSH1 0x40
0x997 DUP1
0x998 MLOAD
0x999 PUSH1 0x0
0x99b DUP1
0x99c MLOAD
0x99d PUSH1 0x20
0x99f PUSH2 0x1608
0x9a2 DUP4
0x9a3 CODECOPY
0x9a4 DUP2
0x9a5 MLOAD
0x9a6 SWAP2
0x9a7 MSTORE
0x9a8 DUP2
0x9a9 MSTORE
0x9aa PUSH1 0x20
0x9ac PUSH1 0x4
0x9ae DUP3
0x9af ADD
0x9b0 MSTORE
0x9b1 PUSH1 0x12
0x9b3 PUSH1 0x24
0x9b5 DUP3
0x9b6 ADD
0x9b7 MSTORE
0x9b8 PUSH32 0x4d4d3a2075706772616465206661696c65640000000000000000000000000000
0x9d9 PUSH1 0x44
0x9db DUP3
0x9dc ADD
0x9dd MSTORE
0x9de SWAP1
0x9df MLOAD
0x9e0 SWAP1
0x9e1 DUP2
0x9e2 SWAP1
0x9e3 SUB
0x9e4 PUSH1 0x64
0x9e6 ADD
0x9e7 SWAP1
0x9e8 REVERT
---
0x995: V736 = 0x40
0x998: V737 = M[0x40]
0x999: V738 = 0x0
0x99c: V739 = M[0x0]
0x99d: V740 = 0x20
0x99f: V741 = 0x1608
0x9a3: CODECOPY 0x0 0x1608 0x20
0x9a5: V742 = M[0x0]
0x9a7: M[0x0] = V739
0x9a9: M[V737] = V742
0x9aa: V743 = 0x20
0x9ac: V744 = 0x4
0x9af: V745 = ADD V737 0x4
0x9b0: M[V745] = 0x20
0x9b1: V746 = 0x12
0x9b3: V747 = 0x24
0x9b6: V748 = ADD V737 0x24
0x9b7: M[V748] = 0x12
0x9b8: V749 = 0x4d4d3a2075706772616465206661696c65640000000000000000000000000000
0x9d9: V750 = 0x44
0x9dc: V751 = ADD V737 0x44
0x9dd: M[V751] = 0x4d4d3a2075706772616465206661696c65640000000000000000000000000000
0x9df: V752 = M[0x40]
0x9e3: V753 = SUB V737 V752
0x9e4: V754 = 0x64
0x9e6: V755 = ADD 0x64 V753
0x9e8: REVERT V752 V755
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, V517, V593, V674, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, V517, V593, V674, S0]

================================

Block 0x9e9
[0x9e9:0x9f0]
---
Predecessors: [0x97b]
Successors: [0xa8]
---
0x9e9 JUMPDEST
0x9ea POP
0x9eb POP
0x9ec POP
0x9ed POP
0x9ee POP
0x9ef POP
0x9f0 JUMP
---
0x9e9: JUMPDEST 
0x9f0: JUMP S6
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, V517, V593, V674, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7]

================================

Block 0x9f1
[0x9f1:0xa50]
---
Predecessors: [0x137]
Successors: [0xa51, 0xa55]
---
0x9f1 JUMPDEST
0x9f2 PUSH1 0x40
0x9f4 DUP1
0x9f5 MLOAD
0x9f6 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa17 DUP2
0xa18 MSTORE
0xa19 ADDRESS
0xa1a PUSH1 0x4
0xa1c DUP3
0xa1d ADD
0xa1e MSTORE
0xa1f SWAP1
0xa20 MLOAD
0xa21 PUSH1 0x0
0xa23 SWAP2
0xa24 PUSH1 0x1
0xa26 PUSH1 0xa0
0xa28 PUSH1 0x2
0xa2a EXP
0xa2b SUB
0xa2c DUP5
0xa2d AND
0xa2e SWAP2
0xa2f PUSH4 0x70a08231
0xa34 SWAP2
0xa35 PUSH1 0x24
0xa37 DUP1
0xa38 DUP3
0xa39 ADD
0xa3a SWAP3
0xa3b PUSH1 0x20
0xa3d SWAP3
0xa3e SWAP1
0xa3f SWAP2
0xa40 SWAP1
0xa41 DUP3
0xa42 SWAP1
0xa43 SUB
0xa44 ADD
0xa45 DUP2
0xa46 DUP8
0xa47 DUP8
0xa48 DUP1
0xa49 EXTCODESIZE
0xa4a ISZERO
0xa4b DUP1
0xa4c ISZERO
0xa4d PUSH2 0xa55
0xa50 JUMPI
---
0x9f1: JUMPDEST 
0x9f2: V756 = 0x40
0x9f5: V757 = M[0x40]
0x9f6: V758 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa18: M[V757] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa19: V759 = ADDRESS
0xa1a: V760 = 0x4
0xa1d: V761 = ADD V757 0x4
0xa1e: M[V761] = V759
0xa20: V762 = M[0x40]
0xa21: V763 = 0x0
0xa24: V764 = 0x1
0xa26: V765 = 0xa0
0xa28: V766 = 0x2
0xa2a: V767 = EXP 0x2 0xa0
0xa2b: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2d: V769 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0xa2f: V770 = 0x70a08231
0xa35: V771 = 0x24
0xa39: V772 = ADD V757 0x24
0xa3b: V773 = 0x20
0xa43: V774 = SUB V757 V762
0xa44: V775 = ADD V774 0x24
0xa49: V776 = EXTCODESIZE V769
0xa4a: V777 = ISZERO V776
0xa4c: V778 = ISZERO V777
0xa4d: V779 = 0xa55
0xa50: JUMPI 0xa55 V778
---
Entry stack: [V11, 0xa8, V114]
Stack pops: 1
Stack additions: [S0, 0x0, V769, 0x70a08231, V772, 0x20, V762, V775, V762, 0x0, V769, V777]
Exit stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, 0x20, V762, V775, V762, 0x0, V769, V777]

================================

Block 0xa51
[0xa51:0xa54]
---
Predecessors: [0x9f1]
Successors: []
---
0xa51 PUSH1 0x0
0xa53 DUP1
0xa54 REVERT
---
0xa51: V780 = 0x0
0xa54: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, 0x20, V762, V775, V762, 0x0, V769, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, 0x20, V762, V775, V762, 0x0, V769, V777]

================================

Block 0xa55
[0xa55:0xa5f]
---
Predecessors: [0x9f1]
Successors: [0xa60, 0xa69]
---
0xa55 JUMPDEST
0xa56 POP
0xa57 GAS
0xa58 CALL
0xa59 ISZERO
0xa5a DUP1
0xa5b ISZERO
0xa5c PUSH2 0xa69
0xa5f JUMPI
---
0xa55: JUMPDEST 
0xa57: V781 = GAS
0xa58: V782 = CALL V781 V769 0x0 V762 V775 V762 0x20
0xa59: V783 = ISZERO V782
0xa5b: V784 = ISZERO V783
0xa5c: V785 = 0xa69
0xa5f: JUMPI 0xa69 V784
---
Entry stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, 0x20, V762, V775, V762, 0x0, V769, V777]
Stack pops: 7
Stack additions: [V783]
Exit stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, V783]

================================

Block 0xa60
[0xa60:0xa68]
---
Predecessors: [0xa55]
Successors: []
---
0xa60 RETURNDATASIZE
0xa61 PUSH1 0x0
0xa63 DUP1
0xa64 RETURNDATACOPY
0xa65 RETURNDATASIZE
0xa66 PUSH1 0x0
0xa68 REVERT
---
0xa60: V786 = RETURNDATASIZE
0xa61: V787 = 0x0
0xa64: RETURNDATACOPY 0x0 0x0 V786
0xa65: V788 = RETURNDATASIZE
0xa66: V789 = 0x0
0xa68: REVERT 0x0 V788
---
Entry stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, V783]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, V783]

================================

Block 0xa69
[0xa69:0xa7a]
---
Predecessors: [0xa55]
Successors: [0xa7b, 0xa7f]
---
0xa69 JUMPDEST
0xa6a POP
0xa6b POP
0xa6c POP
0xa6d POP
0xa6e PUSH1 0x40
0xa70 MLOAD
0xa71 RETURNDATASIZE
0xa72 PUSH1 0x20
0xa74 DUP2
0xa75 LT
0xa76 ISZERO
0xa77 PUSH2 0xa7f
0xa7a JUMPI
---
0xa69: JUMPDEST 
0xa6e: V790 = 0x40
0xa70: V791 = M[0x40]
0xa71: V792 = RETURNDATASIZE
0xa72: V793 = 0x20
0xa75: V794 = LT V792 0x20
0xa76: V795 = ISZERO V794
0xa77: V796 = 0xa7f
0xa7a: JUMPI 0xa7f V795
---
Entry stack: [V11, 0xa8, V114, 0x0, V769, 0x70a08231, V772, V783]
Stack pops: 4
Stack additions: [V791, V792]
Exit stack: [V11, 0xa8, V114, 0x0, V791, V792]

================================

Block 0xa7b
[0xa7b:0xa7e]
---
Predecessors: [0xa69]
Successors: []
---
0xa7b PUSH1 0x0
0xa7d DUP1
0xa7e REVERT
---
0xa7b: V797 = 0x0
0xa7e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V114, 0x0, V791, V792]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V114, 0x0, V791, V792]

================================

Block 0xa7f
[0xa7f:0xaf0]
---
Predecessors: [0xa69]
Successors: [0xaf1, 0xaf5]
---
0xa7f JUMPDEST
0xa80 POP
0xa81 MLOAD
0xa82 PUSH1 0x0
0xa84 DUP1
0xa85 SLOAD
0xa86 PUSH1 0x40
0xa88 DUP1
0xa89 MLOAD
0xa8a PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xaab DUP2
0xaac MSTORE
0xaad PUSH1 0x1
0xaaf PUSH1 0xa0
0xab1 PUSH1 0x2
0xab3 EXP
0xab4 SUB
0xab5 SWAP3
0xab6 DUP4
0xab7 AND
0xab8 PUSH1 0x4
0xaba DUP3
0xabb ADD
0xabc MSTORE
0xabd PUSH1 0x24
0xabf DUP2
0xac0 ADD
0xac1 DUP6
0xac2 SWAP1
0xac3 MSTORE
0xac4 SWAP1
0xac5 MLOAD
0xac6 SWAP4
0xac7 SWAP5
0xac8 POP
0xac9 SWAP1
0xaca DUP6
0xacb AND
0xacc SWAP3
0xacd PUSH4 0xa9059cbb
0xad2 SWAP3
0xad3 PUSH1 0x44
0xad5 DUP1
0xad6 DUP5
0xad7 ADD
0xad8 SWAP4
0xad9 PUSH1 0x20
0xadb SWAP4
0xadc SWAP3
0xadd SWAP1
0xade DUP4
0xadf SWAP1
0xae0 SUB
0xae1 SWAP1
0xae2 SWAP2
0xae3 ADD
0xae4 SWAP1
0xae5 DUP3
0xae6 SWAP1
0xae7 DUP8
0xae8 DUP1
0xae9 EXTCODESIZE
0xaea ISZERO
0xaeb DUP1
0xaec ISZERO
0xaed PUSH2 0xaf5
0xaf0 JUMPI
---
0xa7f: JUMPDEST 
0xa81: V798 = M[V791]
0xa82: V799 = 0x0
0xa85: V800 = S[0x0]
0xa86: V801 = 0x40
0xa89: V802 = M[0x40]
0xa8a: V803 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xaac: M[V802] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xaad: V804 = 0x1
0xaaf: V805 = 0xa0
0xab1: V806 = 0x2
0xab3: V807 = EXP 0x2 0xa0
0xab4: V808 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab7: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0xab8: V810 = 0x4
0xabb: V811 = ADD V802 0x4
0xabc: M[V811] = V809
0xabd: V812 = 0x24
0xac0: V813 = ADD V802 0x24
0xac3: M[V813] = V798
0xac5: V814 = M[0x40]
0xacb: V815 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0xacd: V816 = 0xa9059cbb
0xad3: V817 = 0x44
0xad7: V818 = ADD V802 0x44
0xad9: V819 = 0x20
0xae0: V820 = SUB V802 V814
0xae3: V821 = ADD 0x44 V820
0xae9: V822 = EXTCODESIZE V815
0xaea: V823 = ISZERO V822
0xaec: V824 = ISZERO V823
0xaed: V825 = 0xaf5
0xaf0: JUMPI 0xaf5 V824
---
Entry stack: [V11, 0xa8, V114, 0x0, V791, V792]
Stack pops: 4
Stack additions: [S3, V798, V815, 0xa9059cbb, V818, 0x20, V814, V821, V814, 0x0, V815, V823]
Exit stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, 0x20, V814, V821, V814, 0x0, V815, V823]

================================

Block 0xaf1
[0xaf1:0xaf4]
---
Predecessors: [0xa7f]
Successors: []
---
0xaf1 PUSH1 0x0
0xaf3 DUP1
0xaf4 REVERT
---
0xaf1: V826 = 0x0
0xaf4: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, 0x20, V814, V821, V814, 0x0, V815, V823]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, 0x20, V814, V821, V814, 0x0, V815, V823]

================================

Block 0xaf5
[0xaf5:0xaff]
---
Predecessors: [0xa7f]
Successors: [0xb00, 0xb09]
---
0xaf5 JUMPDEST
0xaf6 POP
0xaf7 GAS
0xaf8 CALL
0xaf9 ISZERO
0xafa DUP1
0xafb ISZERO
0xafc PUSH2 0xb09
0xaff JUMPI
---
0xaf5: JUMPDEST 
0xaf7: V827 = GAS
0xaf8: V828 = CALL V827 V815 0x0 V814 V821 V814 0x20
0xaf9: V829 = ISZERO V828
0xafb: V830 = ISZERO V829
0xafc: V831 = 0xb09
0xaff: JUMPI 0xb09 V830
---
Entry stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, 0x20, V814, V821, V814, 0x0, V815, V823]
Stack pops: 7
Stack additions: [V829]
Exit stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, V829]

================================

Block 0xb00
[0xb00:0xb08]
---
Predecessors: [0xaf5]
Successors: []
---
0xb00 RETURNDATASIZE
0xb01 PUSH1 0x0
0xb03 DUP1
0xb04 RETURNDATACOPY
0xb05 RETURNDATASIZE
0xb06 PUSH1 0x0
0xb08 REVERT
---
0xb00: V832 = RETURNDATASIZE
0xb01: V833 = 0x0
0xb04: RETURNDATACOPY 0x0 0x0 V832
0xb05: V834 = RETURNDATASIZE
0xb06: V835 = 0x0
0xb08: REVERT 0x0 V834
---
Entry stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, V829]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, V829]

================================

Block 0xb09
[0xb09:0xb1a]
---
Predecessors: [0xaf5]
Successors: [0xb1b, 0xb1f]
---
0xb09 JUMPDEST
0xb0a POP
0xb0b POP
0xb0c POP
0xb0d POP
0xb0e PUSH1 0x40
0xb10 MLOAD
0xb11 RETURNDATASIZE
0xb12 PUSH1 0x20
0xb14 DUP2
0xb15 LT
0xb16 ISZERO
0xb17 PUSH2 0xb1f
0xb1a JUMPI
---
0xb09: JUMPDEST 
0xb0e: V836 = 0x40
0xb10: V837 = M[0x40]
0xb11: V838 = RETURNDATASIZE
0xb12: V839 = 0x20
0xb15: V840 = LT V838 0x20
0xb16: V841 = ISZERO V840
0xb17: V842 = 0xb1f
0xb1a: JUMPI 0xb1f V841
---
Entry stack: [V11, 0xa8, V114, V798, V815, 0xa9059cbb, V818, V829]
Stack pops: 4
Stack additions: [V837, V838]
Exit stack: [V11, 0xa8, V114, V798, V837, V838]

================================

Block 0xb1b
[0xb1b:0xb1e]
---
Predecessors: [0xb09]
Successors: []
---
0xb1b PUSH1 0x0
0xb1d DUP1
0xb1e REVERT
---
0xb1b: V843 = 0x0
0xb1e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V114, V798, V837, V838]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V114, V798, V837, V838]

================================

Block 0xb1f
[0xb1f:0xb24]
---
Predecessors: [0xb09]
Successors: [0xa8]
---
0xb1f JUMPDEST
0xb20 POP
0xb21 POP
0xb22 POP
0xb23 POP
0xb24 JUMP
---
0xb1f: JUMPDEST 
0xb24: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V114, V798, V837, V838]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xb25
[0xb25:0xb67]
---
Predecessors: [0x158]
Successors: [0xfa8]
---
0xb25 JUMPDEST
0xb26 PUSH1 0x0
0xb28 DUP1
0xb29 PUSH1 0x0
0xb2b DUP1
0xb2c GAS
0xb2d SWAP3
0xb2e POP
0xb2f PUSH2 0xb68
0xb32 DUP13
0xb33 DUP13
0xb34 DUP13
0xb35 DUP1
0xb36 DUP1
0xb37 PUSH1 0x1f
0xb39 ADD
0xb3a PUSH1 0x20
0xb3c DUP1
0xb3d SWAP2
0xb3e DIV
0xb3f MUL
0xb40 PUSH1 0x20
0xb42 ADD
0xb43 PUSH1 0x40
0xb45 MLOAD
0xb46 SWAP1
0xb47 DUP2
0xb48 ADD
0xb49 PUSH1 0x40
0xb4b MSTORE
0xb4c DUP1
0xb4d SWAP4
0xb4e SWAP3
0xb4f SWAP2
0xb50 SWAP1
0xb51 DUP2
0xb52 DUP2
0xb53 MSTORE
0xb54 PUSH1 0x20
0xb56 ADD
0xb57 DUP4
0xb58 DUP4
0xb59 DUP1
0xb5a DUP3
0xb5b DUP5
0xb5c CALLDATACOPY
0xb5d POP
0xb5e PUSH2 0xfa8
0xb61 SWAP5
0xb62 POP
0xb63 POP
0xb64 POP
0xb65 POP
0xb66 POP
0xb67 JUMP
---
0xb25: JUMPDEST 
0xb26: V844 = 0x0
0xb29: V845 = 0x0
0xb2c: V846 = GAS
0xb2f: V847 = 0xb68
0xb37: V848 = 0x1f
0xb39: V849 = ADD 0x1f V133
0xb3a: V850 = 0x20
0xb3e: V851 = DIV V849 0x20
0xb3f: V852 = MUL V851 0x20
0xb40: V853 = 0x20
0xb42: V854 = ADD 0x20 V852
0xb43: V855 = 0x40
0xb45: V856 = M[0x40]
0xb48: V857 = ADD V856 V854
0xb49: V858 = 0x40
0xb4b: M[0x40] = V857
0xb53: M[V856] = V133
0xb54: V859 = 0x20
0xb56: V860 = ADD 0x20 V856
0xb5c: CALLDATACOPY V860 V131 V133
0xb5e: V861 = 0xfa8
0xb67: JUMP 0xfa8
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V846, 0x0, 0x0, 0xb68, S7, V856]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x0, 0x0, 0xb68, V128, V856]

================================

Block 0xb68
[0xb68:0xb74]
---
Predecessors: [0xfa8]
Successors: [0xb75, 0xbc9]
---
0xb68 JUMPDEST
0xb69 SWAP2
0xb6a POP
0xb6b PUSH1 0x41
0xb6d DUP3
0xb6e MUL
0xb6f DUP8
0xb70 EQ
0xb71 PUSH2 0xbc9
0xb74 JUMPI
---
0xb68: JUMPDEST 
0xb6b: V862 = 0x41
0xb6e: V863 = MUL 0x1 0x41
0xb70: V864 = EQ V140 0x41
0xb71: V865 = 0xbc9
0xb74: JUMPI 0xbc9 V864
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x0, 0x0, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S0, S1]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0]

================================

Block 0xb75
[0xb75:0xbc8]
---
Predecessors: [0xb68]
Successors: []
---
0xb75 PUSH1 0x40
0xb77 DUP1
0xb78 MLOAD
0xb79 PUSH1 0x0
0xb7b DUP1
0xb7c MLOAD
0xb7d PUSH1 0x20
0xb7f PUSH2 0x1608
0xb82 DUP4
0xb83 CODECOPY
0xb84 DUP2
0xb85 MLOAD
0xb86 SWAP2
0xb87 MSTORE
0xb88 DUP2
0xb89 MSTORE
0xb8a PUSH1 0x20
0xb8c PUSH1 0x4
0xb8e DUP3
0xb8f ADD
0xb90 MSTORE
0xb91 PUSH1 0x1e
0xb93 PUSH1 0x24
0xb95 DUP3
0xb96 ADD
0xb97 MSTORE
0xb98 PUSH32 0x524d3a2077726f6e67206e756d626572206f66207369676e6174757265730000
0xbb9 PUSH1 0x44
0xbbb DUP3
0xbbc ADD
0xbbd MSTORE
0xbbe SWAP1
0xbbf MLOAD
0xbc0 SWAP1
0xbc1 DUP2
0xbc2 SWAP1
0xbc3 SUB
0xbc4 PUSH1 0x64
0xbc6 ADD
0xbc7 SWAP1
0xbc8 REVERT
---
0xb75: V866 = 0x40
0xb78: V867 = M[0x40]
0xb79: V868 = 0x0
0xb7c: V869 = M[0x0]
0xb7d: V870 = 0x20
0xb7f: V871 = 0x1608
0xb83: CODECOPY 0x0 0x1608 0x20
0xb85: V872 = M[0x0]
0xb87: M[0x0] = V869
0xb89: M[V867] = V872
0xb8a: V873 = 0x20
0xb8c: V874 = 0x4
0xb8f: V875 = ADD V867 0x4
0xb90: M[V875] = 0x20
0xb91: V876 = 0x1e
0xb93: V877 = 0x24
0xb96: V878 = ADD V867 0x24
0xb97: M[V878] = 0x1e
0xb98: V879 = 0x524d3a2077726f6e67206e756d626572206f66207369676e6174757265730000
0xbb9: V880 = 0x44
0xbbc: V881 = ADD V867 0x44
0xbbd: M[V881] = 0x524d3a2077726f6e67206e756d626572206f66207369676e6174757265730000
0xbbf: V882 = M[0x40]
0xbc3: V883 = SUB V867 V882
0xbc4: V884 = 0x64
0xbc6: V885 = ADD 0x64 V883
0xbc8: REVERT V882 V885
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0]

================================

Block 0xbc9
[0xbc9:0xbd4]
---
Predecessors: [0xb68]
Successors: [0xfb0]
---
0xbc9 JUMPDEST
0xbca PUSH2 0xbd5
0xbcd DUP13
0xbce DUP7
0xbcf DUP9
0xbd0 DUP6
0xbd1 PUSH2 0xfb0
0xbd4 JUMP
---
0xbc9: JUMPDEST 
0xbca: V886 = 0xbd5
0xbd1: V887 = 0xfb0
0xbd4: JUMP 0xfb0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xbd5, S11, S4, S5, S1]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1]

================================

Block 0xbd5
[0xbd5:0xbdb]
---
Predecessors: [0xfe9]
Successors: [0xbdc, 0xc56]
---
0xbd5 JUMPDEST
0xbd6 ISZERO
0xbd7 ISZERO
0xbd8 PUSH2 0xc56
0xbdb JUMPI
---
0xbd5: JUMPDEST 
0xbd6: V888 = ISZERO {0x0, 0x1}
0xbd7: V889 = ISZERO V888
0xbd8: V890 = 0xc56
0xbdb: JUMPI 0xc56 V889
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xbdc
[0xbdc:0xc55]
---
Predecessors: [0xbd5]
Successors: []
---
0xbdc PUSH1 0x40
0xbde DUP1
0xbdf MLOAD
0xbe0 PUSH1 0x0
0xbe2 DUP1
0xbe3 MLOAD
0xbe4 PUSH1 0x20
0xbe6 PUSH2 0x1608
0xbe9 DUP4
0xbea CODECOPY
0xbeb DUP2
0xbec MLOAD
0xbed SWAP2
0xbee MSTORE
0xbef DUP2
0xbf0 MSTORE
0xbf1 PUSH1 0x20
0xbf3 PUSH1 0x4
0xbf5 DUP3
0xbf6 ADD
0xbf7 MSTORE
0xbf8 PUSH1 0x26
0xbfa PUSH1 0x24
0xbfc DUP3
0xbfd ADD
0xbfe MSTORE
0xbff PUSH32 0x524d3a206e6f7420656e6f7567682066756e647320746f20726566756e642072
0xc20 PUSH1 0x44
0xc22 DUP3
0xc23 ADD
0xc24 MSTORE
0xc25 PUSH32 0x656c617965720000000000000000000000000000000000000000000000000000
0xc46 PUSH1 0x64
0xc48 DUP3
0xc49 ADD
0xc4a MSTORE
0xc4b SWAP1
0xc4c MLOAD
0xc4d SWAP1
0xc4e DUP2
0xc4f SWAP1
0xc50 SUB
0xc51 PUSH1 0x84
0xc53 ADD
0xc54 SWAP1
0xc55 REVERT
---
0xbdc: V891 = 0x40
0xbdf: V892 = M[0x40]
0xbe0: V893 = 0x0
0xbe3: V894 = M[0x0]
0xbe4: V895 = 0x20
0xbe6: V896 = 0x1608
0xbea: CODECOPY 0x0 0x1608 0x20
0xbec: V897 = M[0x0]
0xbee: M[0x0] = V894
0xbf0: M[V892] = V897
0xbf1: V898 = 0x20
0xbf3: V899 = 0x4
0xbf6: V900 = ADD V892 0x4
0xbf7: M[V900] = 0x20
0xbf8: V901 = 0x26
0xbfa: V902 = 0x24
0xbfd: V903 = ADD V892 0x24
0xbfe: M[V903] = 0x26
0xbff: V904 = 0x524d3a206e6f7420656e6f7567682066756e647320746f20726566756e642072
0xc20: V905 = 0x44
0xc23: V906 = ADD V892 0x44
0xc24: M[V906] = 0x524d3a206e6f7420656e6f7567682066756e647320746f20726566756e642072
0xc25: V907 = 0x656c617965720000000000000000000000000000000000000000000000000000
0xc46: V908 = 0x64
0xc49: V909 = ADD V892 0x64
0xc4a: M[V909] = 0x656c617965720000000000000000000000000000000000000000000000000000
0xc4c: V910 = M[0x40]
0xc50: V911 = SUB V892 V910
0xc51: V912 = 0x84
0xc53: V913 = ADD 0x84 V911
0xc55: REVERT V910 V913
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc56
[0xc56:0xc8f]
---
Predecessors: [0xbd5]
Successors: [0xff1]
---
0xc56 JUMPDEST
0xc57 PUSH2 0xc90
0xc5a DUP13
0xc5b DUP13
0xc5c DUP13
0xc5d DUP1
0xc5e DUP1
0xc5f PUSH1 0x1f
0xc61 ADD
0xc62 PUSH1 0x20
0xc64 DUP1
0xc65 SWAP2
0xc66 DIV
0xc67 MUL
0xc68 PUSH1 0x20
0xc6a ADD
0xc6b PUSH1 0x40
0xc6d MLOAD
0xc6e SWAP1
0xc6f DUP2
0xc70 ADD
0xc71 PUSH1 0x40
0xc73 MSTORE
0xc74 DUP1
0xc75 SWAP4
0xc76 SWAP3
0xc77 SWAP2
0xc78 SWAP1
0xc79 DUP2
0xc7a DUP2
0xc7b MSTORE
0xc7c PUSH1 0x20
0xc7e ADD
0xc7f DUP4
0xc80 DUP4
0xc81 DUP1
0xc82 DUP3
0xc83 DUP5
0xc84 CALLDATACOPY
0xc85 POP
0xc86 PUSH2 0xff1
0xc89 SWAP5
0xc8a POP
0xc8b POP
0xc8c POP
0xc8d POP
0xc8e POP
0xc8f JUMP
---
0xc56: JUMPDEST 
0xc57: V914 = 0xc90
0xc5f: V915 = 0x1f
0xc61: V916 = ADD 0x1f V133
0xc62: V917 = 0x20
0xc66: V918 = DIV V916 0x20
0xc67: V919 = MUL V918 0x20
0xc68: V920 = 0x20
0xc6a: V921 = ADD 0x20 V919
0xc6b: V922 = 0x40
0xc6d: V923 = M[0x40]
0xc70: V924 = ADD V923 V921
0xc71: V925 = 0x40
0xc73: M[0x40] = V924
0xc7b: M[V923] = V133
0xc7c: V926 = 0x20
0xc7e: V927 = ADD 0x20 V923
0xc84: CALLDATACOPY V927 V131 V133
0xc86: V928 = 0xff1
0xc8f: JUMP 0xff1
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xc90, S11, V923]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0, 0xc90, V128, V923]

================================

Block 0xc90
[0xc90:0xc96]
---
Predecessors: [0x1074]
Successors: [0xc97, 0xd37]
---
0xc90 JUMPDEST
0xc91 ISZERO
0xc92 ISZERO
0xc93 PUSH2 0xd37
0xc96 JUMPI
---
0xc90: JUMPDEST 
0xc91: V929 = ISZERO S0
0xc92: V930 = ISZERO V929
0xc93: V931 = 0xd37
0xc96: JUMPI 0xd37 V930
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1]

================================

Block 0xc97
[0xc97:0xd36]
---
Predecessors: [0xc90]
Successors: []
---
0xc97 PUSH1 0x40
0xc99 DUP1
0xc9a MLOAD
0xc9b PUSH1 0x0
0xc9d DUP1
0xc9e MLOAD
0xc9f PUSH1 0x20
0xca1 PUSH2 0x1608
0xca4 DUP4
0xca5 CODECOPY
0xca6 DUP2
0xca7 MLOAD
0xca8 SWAP2
0xca9 MSTORE
0xcaa DUP2
0xcab MSTORE
0xcac PUSH1 0x20
0xcae PUSH1 0x4
0xcb0 DUP3
0xcb1 ADD
0xcb2 MSTORE
0xcb3 PUSH1 0x4a
0xcb5 PUSH1 0x24
0xcb7 DUP3
0xcb8 ADD
0xcb9 MSTORE
0xcba PUSH32 0x524d3a207468652077616c6c657420617574686f72697a656420697320646966
0xcdb PUSH1 0x44
0xcdd DUP3
0xcde ADD
0xcdf MSTORE
0xce0 PUSH32 0x666572656e74207468656e2074686520746172676574206f6620746865207265
0xd01 PUSH1 0x64
0xd03 DUP3
0xd04 ADD
0xd05 MSTORE
0xd06 PUSH32 0x6c61796564206461746100000000000000000000000000000000000000000000
0xd27 PUSH1 0x84
0xd29 DUP3
0xd2a ADD
0xd2b MSTORE
0xd2c SWAP1
0xd2d MLOAD
0xd2e SWAP1
0xd2f DUP2
0xd30 SWAP1
0xd31 SUB
0xd32 PUSH1 0xa4
0xd34 ADD
0xd35 SWAP1
0xd36 REVERT
---
0xc97: V932 = 0x40
0xc9a: V933 = M[0x40]
0xc9b: V934 = 0x0
0xc9e: V935 = M[0x0]
0xc9f: V936 = 0x20
0xca1: V937 = 0x1608
0xca5: CODECOPY 0x0 0x1608 0x20
0xca7: V938 = M[0x0]
0xca9: M[0x0] = V935
0xcab: M[V933] = V938
0xcac: V939 = 0x20
0xcae: V940 = 0x4
0xcb1: V941 = ADD V933 0x4
0xcb2: M[V941] = 0x20
0xcb3: V942 = 0x4a
0xcb5: V943 = 0x24
0xcb8: V944 = ADD V933 0x24
0xcb9: M[V944] = 0x4a
0xcba: V945 = 0x524d3a207468652077616c6c657420617574686f72697a656420697320646966
0xcdb: V946 = 0x44
0xcde: V947 = ADD V933 0x44
0xcdf: M[V947] = 0x524d3a207468652077616c6c657420617574686f72697a656420697320646966
0xce0: V948 = 0x666572656e74207468656e2074686520746172676574206f6620746865207265
0xd01: V949 = 0x64
0xd04: V950 = ADD V933 0x64
0xd05: M[V950] = 0x666572656e74207468656e2074686520746172676574206f6620746865207265
0xd06: V951 = 0x6c61796564206461746100000000000000000000000000000000000000000000
0xd27: V952 = 0x84
0xd2a: V953 = ADD V933 0x84
0xd2b: M[V953] = 0x6c61796564206461746100000000000000000000000000000000000000000000
0xd2d: V954 = M[0x40]
0xd31: V955 = SUB V933 V954
0xd32: V956 = 0xa4
0xd34: V957 = ADD 0xa4 V955
0xd36: REVERT V954 V957
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0xd37
[0xd37:0xd40]
---
Predecessors: [0xc90]
Successors: [0xd41, 0xe59]
---
0xd37 JUMPDEST
0xd38 PUSH1 0x0
0xd3a DUP3
0xd3b GT
0xd3c ISZERO
0xd3d PUSH2 0xe59
0xd40 JUMPI
---
0xd37: JUMPDEST 
0xd38: V958 = 0x0
0xd3b: V959 = GT 0x1 0x0
0xd3c: V960 = ISZERO 0x1
0xd3d: V961 = 0xe59
0xd40: JUMPI 0xe59 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0xd41
[0xd41:0xd81]
---
Predecessors: [0xd37]
Successors: [0x107b]
---
0xd41 PUSH2 0xd82
0xd44 ADDRESS
0xd45 DUP14
0xd46 PUSH1 0x0
0xd48 DUP15
0xd49 DUP15
0xd4a DUP1
0xd4b DUP1
0xd4c PUSH1 0x1f
0xd4e ADD
0xd4f PUSH1 0x20
0xd51 DUP1
0xd52 SWAP2
0xd53 DIV
0xd54 MUL
0xd55 PUSH1 0x20
0xd57 ADD
0xd58 PUSH1 0x40
0xd5a MLOAD
0xd5b SWAP1
0xd5c DUP2
0xd5d ADD
0xd5e PUSH1 0x40
0xd60 MSTORE
0xd61 DUP1
0xd62 SWAP4
0xd63 SWAP3
0xd64 SWAP2
0xd65 SWAP1
0xd66 DUP2
0xd67 DUP2
0xd68 MSTORE
0xd69 PUSH1 0x20
0xd6b ADD
0xd6c DUP4
0xd6d DUP4
0xd6e DUP1
0xd6f DUP3
0xd70 DUP5
0xd71 CALLDATACOPY
0xd72 DUP3
0xd73 ADD
0xd74 SWAP2
0xd75 POP
0xd76 POP
0xd77 POP
0xd78 POP
0xd79 POP
0xd7a POP
0xd7b DUP14
0xd7c DUP12
0xd7d DUP12
0xd7e PUSH2 0x107b
0xd81 JUMP
---
0xd41: V962 = 0xd82
0xd44: V963 = ADDRESS
0xd46: V964 = 0x0
0xd4c: V965 = 0x1f
0xd4e: V966 = ADD 0x1f S9
0xd4f: V967 = 0x20
0xd53: V968 = DIV V966 0x20
0xd54: V969 = MUL V968 0x20
0xd55: V970 = 0x20
0xd57: V971 = ADD 0x20 V969
0xd58: V972 = 0x40
0xd5a: V973 = M[0x40]
0xd5d: V974 = ADD V973 V971
0xd5e: V975 = 0x40
0xd60: M[0x40] = V974
0xd68: M[V973] = S9
0xd69: V976 = 0x20
0xd6b: V977 = ADD 0x20 V973
0xd71: CALLDATACOPY V977 S10 S9
0xd73: V978 = ADD V977 S9
0xd7e: V979 = 0x107b
0xd81: JUMP 0x107b
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xd82, V963, S11, 0x0, V973, S8, S5, S4]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0, 0xd82, V963, S11, 0x0, V973, S8, S5, S4]

================================

Block 0xd82
[0xd82:0xd8f]
---
Predecessors: [0x1237]
Successors: [0x126f]
---
0xd82 JUMPDEST
0xd83 SWAP1
0xd84 POP
0xd85 PUSH2 0xd90
0xd88 DUP13
0xd89 DUP11
0xd8a DUP4
0xd8b DUP6
0xd8c PUSH2 0x126f
0xd8f JUMP
---
0xd82: JUMPDEST 
0xd85: V980 = 0xd90
0xd8c: V981 = 0x126f
0xd8f: JUMP 0x126f
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, 0x0, V1345]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, 0xd90, S12, S9, S0, S2]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, V1345, 0xd90, S12, S9, V1345, 0x1]

================================

Block 0xd90
[0xd90:0xd96]
---
Predecessors: [0xfe9, 0x1306]
Successors: [0xd97, 0xdeb]
---
0xd90 JUMPDEST
0xd91 ISZERO
0xd92 ISZERO
0xd93 PUSH2 0xdeb
0xd96 JUMPI
---
0xd90: JUMPDEST 
0xd91: V982 = ISZERO {0x0, 0x1}
0xd92: V983 = ISZERO V982
0xd93: V984 = 0xdeb
0xd96: JUMPI 0xdeb V983
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xd97
[0xd97:0xdea]
---
Predecessors: [0xd90]
Successors: []
---
0xd97 PUSH1 0x40
0xd99 DUP1
0xd9a MLOAD
0xd9b PUSH1 0x0
0xd9d DUP1
0xd9e MLOAD
0xd9f PUSH1 0x20
0xda1 PUSH2 0x1608
0xda4 DUP4
0xda5 CODECOPY
0xda6 DUP2
0xda7 MLOAD
0xda8 SWAP2
0xda9 MSTORE
0xdaa DUP2
0xdab MSTORE
0xdac PUSH1 0x20
0xdae PUSH1 0x4
0xdb0 DUP3
0xdb1 ADD
0xdb2 MSTORE
0xdb3 PUSH1 0x15
0xdb5 PUSH1 0x24
0xdb7 DUP3
0xdb8 ADD
0xdb9 MSTORE
0xdba PUSH32 0x524d3a204475706c696361746520726571756573740000000000000000000000
0xddb PUSH1 0x44
0xddd DUP3
0xdde ADD
0xddf MSTORE
0xde0 SWAP1
0xde1 MLOAD
0xde2 SWAP1
0xde3 DUP2
0xde4 SWAP1
0xde5 SUB
0xde6 PUSH1 0x64
0xde8 ADD
0xde9 SWAP1
0xdea REVERT
---
0xd97: V985 = 0x40
0xd9a: V986 = M[0x40]
0xd9b: V987 = 0x0
0xd9e: V988 = M[0x0]
0xd9f: V989 = 0x20
0xda1: V990 = 0x1608
0xda5: CODECOPY 0x0 0x1608 0x20
0xda7: V991 = M[0x0]
0xda9: M[0x0] = V988
0xdab: M[V986] = V991
0xdac: V992 = 0x20
0xdae: V993 = 0x4
0xdb1: V994 = ADD V986 0x4
0xdb2: M[V994] = 0x20
0xdb3: V995 = 0x15
0xdb5: V996 = 0x24
0xdb8: V997 = ADD V986 0x24
0xdb9: M[V997] = 0x15
0xdba: V998 = 0x524d3a204475706c696361746520726571756573740000000000000000000000
0xddb: V999 = 0x44
0xdde: V1000 = ADD V986 0x44
0xddf: M[V1000] = 0x524d3a204475706c696361746520726571756573740000000000000000000000
0xde1: V1001 = M[0x40]
0xde5: V1002 = SUB V986 V1001
0xde6: V1003 = 0x64
0xde8: V1004 = ADD 0x64 V1002
0xdea: REVERT V1001 V1004
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdeb
[0xdeb:0xe58]
---
Predecessors: [0xd90]
Successors: [0x133e]
---
0xdeb JUMPDEST
0xdec PUSH2 0xe59
0xdef DUP13
0xdf0 DUP13
0xdf1 DUP13
0xdf2 DUP1
0xdf3 DUP1
0xdf4 PUSH1 0x1f
0xdf6 ADD
0xdf7 PUSH1 0x20
0xdf9 DUP1
0xdfa SWAP2
0xdfb DIV
0xdfc MUL
0xdfd PUSH1 0x20
0xdff ADD
0xe00 PUSH1 0x40
0xe02 MLOAD
0xe03 SWAP1
0xe04 DUP2
0xe05 ADD
0xe06 PUSH1 0x40
0xe08 MSTORE
0xe09 DUP1
0xe0a SWAP4
0xe0b SWAP3
0xe0c SWAP2
0xe0d SWAP1
0xe0e DUP2
0xe0f DUP2
0xe10 MSTORE
0xe11 PUSH1 0x20
0xe13 ADD
0xe14 DUP4
0xe15 DUP4
0xe16 DUP1
0xe17 DUP3
0xe18 DUP5
0xe19 CALLDATACOPY
0xe1a DUP3
0xe1b ADD
0xe1c SWAP2
0xe1d POP
0xe1e POP
0xe1f POP
0xe20 POP
0xe21 POP
0xe22 POP
0xe23 DUP4
0xe24 DUP12
0xe25 DUP12
0xe26 DUP1
0xe27 DUP1
0xe28 PUSH1 0x1f
0xe2a ADD
0xe2b PUSH1 0x20
0xe2d DUP1
0xe2e SWAP2
0xe2f DIV
0xe30 MUL
0xe31 PUSH1 0x20
0xe33 ADD
0xe34 PUSH1 0x40
0xe36 MLOAD
0xe37 SWAP1
0xe38 DUP2
0xe39 ADD
0xe3a PUSH1 0x40
0xe3c MSTORE
0xe3d DUP1
0xe3e SWAP4
0xe3f SWAP3
0xe40 SWAP2
0xe41 SWAP1
0xe42 DUP2
0xe43 DUP2
0xe44 MSTORE
0xe45 PUSH1 0x20
0xe47 ADD
0xe48 DUP4
0xe49 DUP4
0xe4a DUP1
0xe4b DUP3
0xe4c DUP5
0xe4d CALLDATACOPY
0xe4e POP
0xe4f PUSH2 0x133e
0xe52 SWAP5
0xe53 POP
0xe54 POP
0xe55 POP
0xe56 POP
0xe57 POP
0xe58 JUMP
---
0xdeb: JUMPDEST 
0xdec: V1005 = 0xe59
0xdf4: V1006 = 0x1f
0xdf6: V1007 = ADD 0x1f V133
0xdf7: V1008 = 0x20
0xdfb: V1009 = DIV V1007 0x20
0xdfc: V1010 = MUL V1009 0x20
0xdfd: V1011 = 0x20
0xdff: V1012 = ADD 0x20 V1010
0xe00: V1013 = 0x40
0xe02: V1014 = M[0x40]
0xe05: V1015 = ADD V1014 V1012
0xe06: V1016 = 0x40
0xe08: M[0x40] = V1015
0xe10: M[V1014] = V133
0xe11: V1017 = 0x20
0xe13: V1018 = ADD 0x20 V1014
0xe19: CALLDATACOPY V1018 V131 V133
0xe1b: V1019 = ADD V1018 V133
0xe28: V1020 = 0x1f
0xe2a: V1021 = ADD 0x1f S6
0xe2b: V1022 = 0x20
0xe2f: V1023 = DIV V1021 0x20
0xe30: V1024 = MUL V1023 0x20
0xe31: V1025 = 0x20
0xe33: V1026 = ADD 0x20 V1024
0xe34: V1027 = 0x40
0xe36: V1028 = M[0x40]
0xe39: V1029 = ADD V1028 V1026
0xe3a: V1030 = 0x40
0xe3c: M[0x40] = V1029
0xe44: M[V1028] = S6
0xe45: V1031 = 0x20
0xe47: V1032 = ADD 0x20 V1028
0xe4d: CALLDATACOPY V1032 S7 S6
0xe4f: V1033 = 0x133e
0xe58: JUMP 0x133e
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xe59, S11, V1014, S0, V1028]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S7, S6, S5, S4, S3, S2, S1, S0, 0xe59, V128, V1014, S0, V1028]

================================

Block 0xe59
[0xe59:0xee6]
---
Predecessors: [0xd37, 0x13b3]
Successors: [0x13ba]
---
0xe59 JUMPDEST
0xe5a ADDRESS
0xe5b PUSH1 0x1
0xe5d PUSH1 0xa0
0xe5f PUSH1 0x2
0xe61 EXP
0xe62 SUB
0xe63 AND
0xe64 DUP12
0xe65 DUP12
0xe66 PUSH1 0x40
0xe68 MLOAD
0xe69 DUP1
0xe6a DUP4
0xe6b DUP4
0xe6c DUP1
0xe6d DUP3
0xe6e DUP5
0xe6f CALLDATACOPY
0xe70 DUP3
0xe71 ADD
0xe72 SWAP2
0xe73 POP
0xe74 POP
0xe75 SWAP3
0xe76 POP
0xe77 POP
0xe78 POP
0xe79 PUSH1 0x0
0xe7b PUSH1 0x40
0xe7d MLOAD
0xe7e DUP1
0xe7f DUP4
0xe80 SUB
0xe81 DUP2
0xe82 PUSH1 0x0
0xe84 DUP7
0xe85 GAS
0xe86 CALL
0xe87 SWAP2
0xe88 POP
0xe89 POP
0xe8a SWAP4
0xe8b POP
0xe8c DUP4
0xe8d ISZERO
0xe8e ISZERO
0xe8f DUP13
0xe90 PUSH1 0x1
0xe92 PUSH1 0xa0
0xe94 PUSH1 0x2
0xe96 EXP
0xe97 SUB
0xe98 AND
0xe99 PUSH32 0x6bb0b384ce772133df63560651bc8c727c53306cec1d51e2cbf8ea35fb8f2ec1
0xeba DUP4
0xebb PUSH1 0x40
0xebd MLOAD
0xebe DUP1
0xebf DUP3
0xec0 PUSH1 0x0
0xec2 NOT
0xec3 AND
0xec4 PUSH1 0x0
0xec6 NOT
0xec7 AND
0xec8 DUP2
0xec9 MSTORE
0xeca PUSH1 0x20
0xecc ADD
0xecd SWAP2
0xece POP
0xecf POP
0xed0 PUSH1 0x40
0xed2 MLOAD
0xed3 DUP1
0xed4 SWAP2
0xed5 SUB
0xed6 SWAP1
0xed7 LOG3
0xed8 PUSH2 0xee7
0xedb DUP13
0xedc GAS
0xedd DUP6
0xede SUB
0xedf DUP9
0xee0 DUP9
0xee1 DUP7
0xee2 CALLER
0xee3 PUSH2 0x13ba
0xee6 JUMP
---
0xe59: JUMPDEST 
0xe5a: V1034 = ADDRESS
0xe5b: V1035 = 0x1
0xe5d: V1036 = 0xa0
0xe5f: V1037 = 0x2
0xe61: V1038 = EXP 0x2 0xa0
0xe62: V1039 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe63: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0xe66: V1041 = 0x40
0xe68: V1042 = M[0x40]
0xe6f: CALLDATACOPY V1042 S10 S9
0xe71: V1043 = ADD V1042 S9
0xe79: V1044 = 0x0
0xe7b: V1045 = 0x40
0xe7d: V1046 = M[0x40]
0xe80: V1047 = SUB V1043 V1046
0xe82: V1048 = 0x0
0xe85: V1049 = GAS
0xe86: V1050 = CALL V1049 V1040 0x0 V1046 V1047 V1046 0x0
0xe8d: V1051 = ISZERO V1050
0xe8e: V1052 = ISZERO V1051
0xe90: V1053 = 0x1
0xe92: V1054 = 0xa0
0xe94: V1055 = 0x2
0xe96: V1056 = EXP 0x2 0xa0
0xe97: V1057 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe98: V1058 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xe99: V1059 = 0x6bb0b384ce772133df63560651bc8c727c53306cec1d51e2cbf8ea35fb8f2ec1
0xebb: V1060 = 0x40
0xebd: V1061 = M[0x40]
0xec0: V1062 = 0x0
0xec2: V1063 = NOT 0x0
0xec3: V1064 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0xec4: V1065 = 0x0
0xec6: V1066 = NOT 0x0
0xec7: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1064
0xec9: M[V1061] = V1067
0xeca: V1068 = 0x20
0xecc: V1069 = ADD 0x20 V1061
0xed0: V1070 = 0x40
0xed2: V1071 = M[0x40]
0xed5: V1072 = SUB V1069 V1071
0xed7: LOG V1071 V1072 0x6bb0b384ce772133df63560651bc8c727c53306cec1d51e2cbf8ea35fb8f2ec1 V1058 V1052
0xed8: V1073 = 0xee7
0xedc: V1074 = GAS
0xede: V1075 = SUB S2 V1074
0xee2: V1076 = CALLER
0xee3: V1077 = 0x13ba
0xee6: JUMP 0x13ba
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, V1050, S2, S1, S0, 0xee7, S11, V1075, S5, S4, S1, V1076]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1050, S2, S1, S0, 0xee7, S11, V1075, S5, S4, S1, V1076]

================================

Block 0xee7
[0xee7:0xef5]
---
Predecessors: [0x48b, 0x14f3]
Successors: [0x18f]
---
0xee7 JUMPDEST
0xee8 POP
0xee9 POP
0xeea POP
0xeeb SWAP9
0xeec SWAP8
0xeed POP
0xeee POP
0xeef POP
0xef0 POP
0xef1 POP
0xef2 POP
0xef3 POP
0xef4 POP
0xef5 JUMP
---
0xee7: JUMPDEST 
0xef5: JUMP S12
---
Entry stack: [V11, 0x18f, V128, V131, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: [S3]
Exit stack: [V11, 0x18f, V128, V131, S15, S14, S13, S3]

================================

Block 0xef6
[0xef6:0xf07]
---
Predecessors: [0x1af]
Successors: [0xcb]
---
0xef6 JUMPDEST
0xef7 PUSH1 0x1
0xef9 PUSH1 0x20
0xefb MSTORE
0xefc PUSH1 0x0
0xefe SWAP1
0xeff DUP2
0xf00 MSTORE
0xf01 PUSH1 0x40
0xf03 SWAP1
0xf04 SHA3
0xf05 SLOAD
0xf06 DUP2
0xf07 JUMP
---
0xef6: JUMPDEST 
0xef7: V1078 = 0x1
0xef9: V1079 = 0x20
0xefb: M[0x20] = 0x1
0xefc: V1080 = 0x0
0xf00: M[0x0] = V166
0xf01: V1081 = 0x40
0xf04: V1082 = SHA3 0x0 0x40
0xf05: V1083 = S[V1082]
0xf07: JUMP 0xcb
---
Entry stack: [V11, 0xcb, V166]
Stack pops: 2
Stack additions: [S1, V1083]
Exit stack: [V11, 0xcb, V1083]

================================

Block 0xf08
[0xf08:0xf66]
---
Predecessors: [0x28f, 0x4a2, 0x134c]
Successors: [0xf67, 0xf6b]
---
0xf08 JUMPDEST
0xf09 PUSH1 0x0
0xf0b DUP2
0xf0c PUSH1 0x1
0xf0e PUSH1 0xa0
0xf10 PUSH1 0x2
0xf12 EXP
0xf13 SUB
0xf14 AND
0xf15 DUP4
0xf16 PUSH1 0x1
0xf18 PUSH1 0xa0
0xf1a PUSH1 0x2
0xf1c EXP
0xf1d SUB
0xf1e AND
0xf1f PUSH4 0x8da5cb5b
0xf24 PUSH1 0x40
0xf26 MLOAD
0xf27 DUP2
0xf28 PUSH4 0xffffffff
0xf2d AND
0xf2e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf4c MUL
0xf4d DUP2
0xf4e MSTORE
0xf4f PUSH1 0x4
0xf51 ADD
0xf52 PUSH1 0x20
0xf54 PUSH1 0x40
0xf56 MLOAD
0xf57 DUP1
0xf58 DUP4
0xf59 SUB
0xf5a DUP2
0xf5b PUSH1 0x0
0xf5d DUP8
0xf5e DUP1
0xf5f EXTCODESIZE
0xf60 ISZERO
0xf61 DUP1
0xf62 ISZERO
0xf63 PUSH2 0xf6b
0xf66 JUMPI
---
0xf08: JUMPDEST 
0xf09: V1084 = 0x0
0xf0c: V1085 = 0x1
0xf0e: V1086 = 0xa0
0xf10: V1087 = 0x2
0xf12: V1088 = EXP 0x2 0xa0
0xf13: V1089 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf14: V1090 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xf16: V1091 = 0x1
0xf18: V1092 = 0xa0
0xf1a: V1093 = 0x2
0xf1c: V1094 = EXP 0x2 0xa0
0xf1d: V1095 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf1e: V1096 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf1f: V1097 = 0x8da5cb5b
0xf24: V1098 = 0x40
0xf26: V1099 = M[0x40]
0xf28: V1100 = 0xffffffff
0xf2d: V1101 = AND 0xffffffff 0x8da5cb5b
0xf2e: V1102 = 0x100000000000000000000000000000000000000000000000000000000
0xf4c: V1103 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xf4e: M[V1099] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xf4f: V1104 = 0x4
0xf51: V1105 = ADD 0x4 V1099
0xf52: V1106 = 0x20
0xf54: V1107 = 0x40
0xf56: V1108 = M[0x40]
0xf59: V1109 = SUB V1105 V1108
0xf5b: V1110 = 0x0
0xf5f: V1111 = EXTCODESIZE V1096
0xf60: V1112 = ISZERO V1111
0xf62: V1113 = ISZERO V1112
0xf63: V1114 = 0xf6b
0xf66: JUMPI 0xf6b V1113
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S10, S9, S8, S7, S6, S5, S4, S3, {0x299, 0x4ac, 0x1358}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1090, V1096, 0x8da5cb5b, V1105, 0x20, V1108, V1109, V1108, 0x0, V1096, V1112]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S10, S9, S8, S7, S6, S5, S4, S3, {0x299, 0x4ac, 0x1358}, S1, S0, 0x0, V1090, V1096, 0x8da5cb5b, V1105, 0x20, V1108, V1109, V1108, 0x0, V1096, V1112]

================================

Block 0xf67
[0xf67:0xf6a]
---
Predecessors: [0xf08]
Successors: []
---
0xf67 PUSH1 0x0
0xf69 DUP1
0xf6a REVERT
---
0xf67: V1115 = 0x0
0xf6a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S22, S21, S20, S19, S18, S17, S16, S15, {0x299, 0x4ac, 0x1358}, S13, S12, 0x0, V1090, V1096, 0x8da5cb5b, V1105, 0x20, V1108, V1109, V1108, 0x0, V1096, V1112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S22, S21, S20, S19, S18, S17, S16, S15, {0x299, 0x4ac, 0x1358}, S13, S12, 0x0, V1090, V1096, 0x8da5cb5b, V1105, 0x20, V1108, V1109, V1108, 0x0, V1096, V1112]

================================

Block 0xf6b
[0xf6b:0xf75]
---
Predecessors: [0xf08]
Successors: [0xf76, 0xf7f]
---
0xf6b JUMPDEST
0xf6c POP
0xf6d GAS
0xf6e CALL
0xf6f ISZERO
0xf70 DUP1
0xf71 ISZERO
0xf72 PUSH2 0xf7f
0xf75 JUMPI
---
0xf6b: JUMPDEST 
0xf6d: V1116 = GAS
0xf6e: V1117 = CALL V1116 V1096 0x0 V1108 V1109 V1108 0x20
0xf6f: V1118 = ISZERO V1117
0xf71: V1119 = ISZERO V1118
0xf72: V1120 = 0xf7f
0xf75: JUMPI 0xf7f V1119
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S22, S21, S20, S19, S18, S17, S16, S15, {0x299, 0x4ac, 0x1358}, S13, S12, 0x0, V1090, V1096, 0x8da5cb5b, V1105, 0x20, V1108, V1109, V1108, 0x0, V1096, V1112]
Stack pops: 7
Stack additions: [V1118]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S22, S21, S20, S19, S18, S17, S16, S15, {0x299, 0x4ac, 0x1358}, S13, S12, 0x0, V1090, V1096, 0x8da5cb5b, V1105, V1118]

================================

Block 0xf76
[0xf76:0xf7e]
---
Predecessors: [0xf6b]
Successors: []
---
0xf76 RETURNDATASIZE
0xf77 PUSH1 0x0
0xf79 DUP1
0xf7a RETURNDATACOPY
0xf7b RETURNDATASIZE
0xf7c PUSH1 0x0
0xf7e REVERT
---
0xf76: V1121 = RETURNDATASIZE
0xf77: V1122 = 0x0
0xf7a: RETURNDATACOPY 0x0 0x0 V1121
0xf7b: V1123 = RETURNDATASIZE
0xf7c: V1124 = 0x0
0xf7e: REVERT 0x0 V1123
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S16, S15, S14, S13, S12, S11, S10, S9, {0x299, 0x4ac, 0x1358}, S7, S6, 0x0, S4, S3, 0x8da5cb5b, S1, V1118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S16, S15, S14, S13, S12, S11, S10, S9, {0x299, 0x4ac, 0x1358}, S7, S6, 0x0, S4, S3, 0x8da5cb5b, S1, V1118]

================================

Block 0xf7f
[0xf7f:0xf90]
---
Predecessors: [0xf6b]
Successors: [0xf91, 0xf95]
---
0xf7f JUMPDEST
0xf80 POP
0xf81 POP
0xf82 POP
0xf83 POP
0xf84 PUSH1 0x40
0xf86 MLOAD
0xf87 RETURNDATASIZE
0xf88 PUSH1 0x20
0xf8a DUP2
0xf8b LT
0xf8c ISZERO
0xf8d PUSH2 0xf95
0xf90 JUMPI
---
0xf7f: JUMPDEST 
0xf84: V1125 = 0x40
0xf86: V1126 = M[0x40]
0xf87: V1127 = RETURNDATASIZE
0xf88: V1128 = 0x20
0xf8b: V1129 = LT V1127 0x20
0xf8c: V1130 = ISZERO V1129
0xf8d: V1131 = 0xf95
0xf90: JUMPI 0xf95 V1130
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S16, S15, S14, S13, S12, S11, S10, S9, {0x299, 0x4ac, 0x1358}, S7, S6, 0x0, S4, S3, 0x8da5cb5b, S1, V1118]
Stack pops: 4
Stack additions: [V1126, V1127]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S16, S15, S14, S13, S12, S11, S10, S9, {0x299, 0x4ac, 0x1358}, S7, S6, 0x0, S4, V1126, V1127]

================================

Block 0xf91
[0xf91:0xf94]
---
Predecessors: [0xf7f]
Successors: []
---
0xf91 PUSH1 0x0
0xf93 DUP1
0xf94 REVERT
---
0xf91: V1132 = 0x0
0xf94: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S14, S13, S12, S11, S10, S9, S8, S7, {0x299, 0x4ac, 0x1358}, S5, S4, 0x0, S2, V1126, V1127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S14, S13, S12, S11, S10, S9, S8, S7, {0x299, 0x4ac, 0x1358}, S5, S4, 0x0, S2, V1126, V1127]

================================

Block 0xf95
[0xf95:0xfa7]
---
Predecessors: [0xf7f]
Successors: [0x299, 0x4ac, 0x1358]
---
0xf95 JUMPDEST
0xf96 POP
0xf97 MLOAD
0xf98 PUSH1 0x1
0xf9a PUSH1 0xa0
0xf9c PUSH1 0x2
0xf9e EXP
0xf9f SUB
0xfa0 AND
0xfa1 EQ
0xfa2 SWAP4
0xfa3 SWAP3
0xfa4 POP
0xfa5 POP
0xfa6 POP
0xfa7 JUMP
---
0xf95: JUMPDEST 
0xf97: V1133 = M[V1126]
0xf98: V1134 = 0x1
0xf9a: V1135 = 0xa0
0xf9c: V1136 = 0x2
0xf9e: V1137 = EXP 0x2 0xa0
0xf9f: V1138 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa0: V1139 = AND 0xffffffffffffffffffffffffffffffffffffffff V1133
0xfa1: V1140 = EQ V1139 S2
0xfa7: JUMP {0x299, 0x4ac, 0x1358}
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S14, S13, S12, S11, S10, S9, S8, S7, {0x299, 0x4ac, 0x1358}, S5, S4, 0x0, S2, V1126, V1127]
Stack pops: 7
Stack additions: [V1140]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S14, S13, S12, S11, S10, S9, S8, S7, V1140]

================================

Block 0xfa8
[0xfa8:0xfaf]
---
Predecessors: [0xb25]
Successors: [0xb68]
---
0xfa8 JUMPDEST
0xfa9 PUSH1 0x1
0xfab SWAP3
0xfac SWAP2
0xfad POP
0xfae POP
0xfaf JUMP
---
0xfa8: JUMPDEST 
0xfa9: V1141 = 0x1
0xfaf: JUMP 0xb68
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x0, 0x0, 0xb68, V128, V856]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x0, 0x0, 0x1]

================================

Block 0xfb0
[0xfb0:0xfbb]
---
Predecessors: [0xbc9]
Successors: [0xfbc, 0xfc1]
---
0xfb0 JUMPDEST
0xfb1 PUSH1 0x0
0xfb3 DUP1
0xfb4 DUP4
0xfb5 GT
0xfb6 DUP1
0xfb7 ISZERO
0xfb8 PUSH2 0xfc1
0xfbb JUMPI
---
0xfb0: JUMPDEST 
0xfb1: V1142 = 0x0
0xfb5: V1143 = GT V142 0x0
0xfb7: V1144 = ISZERO V1143
0xfb8: V1145 = 0xfc1
0xfbb: JUMPI 0xfc1 V1144
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1143]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, V1143]

================================

Block 0xfbc
[0xfbc:0xfc0]
---
Predecessors: [0xfb0]
Successors: [0xfc1]
---
0xfbc POP
0xfbd PUSH1 0x1
0xfbf DUP3
0xfc0 GT
---
0xfbd: V1146 = 0x1
0xfc0: V1147 = GT 0x1 0x1
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, V1143]
Stack pops: 3
Stack additions: [S2, S1, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, 0x0]

================================

Block 0xfc1
[0xfc1:0xfc7]
---
Predecessors: [0xfb0, 0xfbc]
Successors: [0xfc8, 0xfd8]
---
0xfc1 JUMPDEST
0xfc2 DUP1
0xfc3 ISZERO
0xfc4 PUSH2 0xfd8
0xfc7 JUMPI
---
0xfc1: JUMPDEST 
0xfc3: V1148 = ISZERO S0
0xfc4: V1149 = 0xfd8
0xfc7: JUMPI 0xfd8 V1148
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, S0]

================================

Block 0xfc8
[0xfc8:0xfd7]
---
Predecessors: [0xfc1]
Successors: [0xfd8]
---
0xfc8 POP
0xfc9 DUP3
0xfca DUP5
0xfcb MUL
0xfcc DUP6
0xfcd PUSH1 0x1
0xfcf PUSH1 0xa0
0xfd1 PUSH1 0x2
0xfd3 EXP
0xfd4 SUB
0xfd5 AND
0xfd6 BALANCE
0xfd7 LT
---
0xfcb: V1150 = MUL V144 V142
0xfcd: V1151 = 0x1
0xfcf: V1152 = 0xa0
0xfd1: V1153 = 0x2
0xfd3: V1154 = EXP 0x2 0xa0
0xfd4: V1155 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd5: V1156 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0xfd6: V1157 = BALANCE V1156
0xfd7: V1158 = LT V1157 V1150
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V1158]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, V1158]

================================

Block 0xfd8
[0xfd8:0xfdd]
---
Predecessors: [0xfc1, 0xfc8]
Successors: [0xfde, 0xfe5]
---
0xfd8 JUMPDEST
0xfd9 ISZERO
0xfda PUSH2 0xfe5
0xfdd JUMPI
---
0xfd8: JUMPDEST 
0xfd9: V1159 = ISZERO S0
0xfda: V1160 = 0xfe5
0xfdd: JUMPI 0xfe5 V1159
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0]

================================

Block 0xfde
[0xfde:0xfe4]
---
Predecessors: [0xfd8]
Successors: [0xfe9]
---
0xfde POP
0xfdf PUSH1 0x0
0xfe1 PUSH2 0xfe9
0xfe4 JUMP
---
0xfdf: V1161 = 0x0
0xfe1: V1162 = 0xfe9
0xfe4: JUMP 0xfe9
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, 0x0, 0xbd5, V128, V144, V142, 0x1, 0x0]

================================

Block 0xfe5
[0xfe5:0xfe8]
---
Predecessors: [0xfd8, 0x12ac]
Successors: [0xfe9]
---
0xfe5 JUMPDEST
0xfe6 POP
0xfe7 PUSH1 0x1
---
0xfe5: JUMPDEST 
0xfe7: V1163 = 0x1
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, 0x1]

================================

Block 0xfe9
[0xfe9:0xff0]
---
Predecessors: [0xfde, 0xfe5, 0x12a5, 0x12ff]
Successors: [0xbd5, 0xd90]
---
0xfe9 JUMPDEST
0xfea SWAP5
0xfeb SWAP4
0xfec POP
0xfed POP
0xfee POP
0xfef POP
0xff0 JUMP
---
0xfe9: JUMPDEST 
0xff0: JUMP S5
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, {0x0, 0x1}]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}]

================================

Block 0xff1
[0xff1:0x1000]
---
Predecessors: [0xc56]
Successors: [0x1001, 0x1055]
---
0xff1 JUMPDEST
0xff2 PUSH1 0x0
0xff4 DUP1
0xff5 PUSH1 0x24
0xff7 DUP4
0xff8 MLOAD
0xff9 LT
0xffa ISZERO
0xffb ISZERO
0xffc ISZERO
0xffd PUSH2 0x1055
0x1000 JUMPI
---
0xff1: JUMPDEST 
0xff2: V1164 = 0x0
0xff5: V1165 = 0x24
0xff8: V1166 = M[V923]
0xff9: V1167 = LT V1166 0x24
0xffa: V1168 = ISZERO V1167
0xffb: V1169 = ISZERO V1168
0xffc: V1170 = ISZERO V1169
0xffd: V1171 = 0x1055
0x1000: JUMPI 0x1055 V1170
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S10, S9, S8, S7, S6, S5, S4, S3, 0xc90, V128, V923]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S10, S9, S8, S7, S6, S5, S4, S3, 0xc90, V128, V923, 0x0, 0x0]

================================

Block 0x1001
[0x1001:0x1054]
---
Predecessors: [0xff1]
Successors: []
---
0x1001 PUSH1 0x40
0x1003 DUP1
0x1004 MLOAD
0x1005 PUSH1 0x0
0x1007 DUP1
0x1008 MLOAD
0x1009 PUSH1 0x20
0x100b PUSH2 0x1608
0x100e DUP4
0x100f CODECOPY
0x1010 DUP2
0x1011 MLOAD
0x1012 SWAP2
0x1013 MSTORE
0x1014 DUP2
0x1015 MSTORE
0x1016 PUSH1 0x20
0x1018 PUSH1 0x4
0x101a DUP3
0x101b ADD
0x101c MSTORE
0x101d PUSH1 0x16
0x101f PUSH1 0x24
0x1021 DUP3
0x1022 ADD
0x1023 MSTORE
0x1024 PUSH32 0x524d3a20496e76616c6964206461746157616c6c657400000000000000000000
0x1045 PUSH1 0x44
0x1047 DUP3
0x1048 ADD
0x1049 MSTORE
0x104a SWAP1
0x104b MLOAD
0x104c SWAP1
0x104d DUP2
0x104e SWAP1
0x104f SUB
0x1050 PUSH1 0x64
0x1052 ADD
0x1053 SWAP1
0x1054 REVERT
---
0x1001: V1172 = 0x40
0x1004: V1173 = M[0x40]
0x1005: V1174 = 0x0
0x1008: V1175 = M[0x0]
0x1009: V1176 = 0x20
0x100b: V1177 = 0x1608
0x100f: CODECOPY 0x0 0x1608 0x20
0x1011: V1178 = M[0x0]
0x1013: M[0x0] = V1175
0x1015: M[V1173] = V1178
0x1016: V1179 = 0x20
0x1018: V1180 = 0x4
0x101b: V1181 = ADD V1173 0x4
0x101c: M[V1181] = 0x20
0x101d: V1182 = 0x16
0x101f: V1183 = 0x24
0x1022: V1184 = ADD V1173 0x24
0x1023: M[V1184] = 0x16
0x1024: V1185 = 0x524d3a20496e76616c6964206461746157616c6c657400000000000000000000
0x1045: V1186 = 0x44
0x1048: V1187 = ADD V1173 0x44
0x1049: M[V1187] = 0x524d3a20496e76616c6964206461746157616c6c657400000000000000000000
0x104b: V1188 = M[0x40]
0x104f: V1189 = SUB V1173 V1188
0x1050: V1190 = 0x64
0x1052: V1191 = ADD 0x64 V1189
0x1054: REVERT V1188 V1191
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S12, S11, S10, S9, S8, S7, S6, S5, 0xc90, V128, V923, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S12, S11, S10, S9, S8, S7, S6, S5, 0xc90, V128, V923, 0x0, 0x0]

================================

Block 0x1055
[0x1055:0x1073]
---
Predecessors: [0xff1]
Successors: [0x1074]
---
0x1055 JUMPDEST
0x1056 PUSH1 0x24
0x1058 DUP4
0x1059 ADD
0x105a MLOAD
0x105b SWAP1
0x105c POP
0x105d DUP4
0x105e PUSH1 0x1
0x1060 PUSH1 0xa0
0x1062 PUSH1 0x2
0x1064 EXP
0x1065 SUB
0x1066 AND
0x1067 DUP2
0x1068 PUSH1 0x1
0x106a PUSH1 0xa0
0x106c PUSH1 0x2
0x106e EXP
0x106f SUB
0x1070 AND
0x1071 EQ
0x1072 SWAP2
0x1073 POP
---
0x1055: JUMPDEST 
0x1056: V1192 = 0x24
0x1059: V1193 = ADD V923 0x24
0x105a: V1194 = M[V1193]
0x105e: V1195 = 0x1
0x1060: V1196 = 0xa0
0x1062: V1197 = 0x2
0x1064: V1198 = EXP 0x2 0xa0
0x1065: V1199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1066: V1200 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1068: V1201 = 0x1
0x106a: V1202 = 0xa0
0x106c: V1203 = 0x2
0x106e: V1204 = EXP 0x2 0xa0
0x106f: V1205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1070: V1206 = AND 0xffffffffffffffffffffffffffffffffffffffff V1194
0x1071: V1207 = EQ V1206 V1200
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S12, S11, S10, S9, S8, S7, S6, S5, 0xc90, V128, V923, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V1207, V1194]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S12, S11, S10, S9, S8, S7, S6, S5, 0xc90, V128, V923, V1207, V1194]

================================

Block 0x1074
[0x1074:0x107a]
---
Predecessors: [0x1055, 0x150b, 0x1548]
Successors: [0xc90, 0x129e]
---
0x1074 JUMPDEST
0x1075 POP
0x1076 SWAP3
0x1077 SWAP2
0x1078 POP
0x1079 POP
0x107a JUMP
---
0x1074: JUMPDEST 
0x107a: JUMP {0xc90, 0x129e}
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xc90, 0x129e}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x107b
[0x107b:0x1101]
---
Predecessors: [0xd41]
Successors: [0x1102]
---
0x107b JUMPDEST
0x107c PUSH1 0x40
0x107e MLOAD
0x107f PUSH32 0x1900000000000000000000000000000000000000000000000000000000000000
0x10a0 PUSH1 0x20
0x10a2 DUP1
0x10a3 DUP4
0x10a4 ADD
0x10a5 DUP3
0x10a6 DUP2
0x10a7 MSTORE
0x10a8 PUSH1 0x0
0x10aa PUSH1 0x21
0x10ac DUP6
0x10ad ADD
0x10ae DUP2
0x10af SWAP1
0x10b0 MSTORE
0x10b1 PUSH13 0x1000000000000000000000000
0x10bf PUSH1 0x1
0x10c1 PUSH1 0xa0
0x10c3 PUSH1 0x2
0x10c5 EXP
0x10c6 SUB
0x10c7 DUP1
0x10c8 DUP15
0x10c9 AND
0x10ca DUP3
0x10cb MUL
0x10cc PUSH1 0x22
0x10ce DUP9
0x10cf ADD
0x10d0 MSTORE
0x10d1 DUP13
0x10d2 AND
0x10d3 MUL
0x10d4 PUSH1 0x36
0x10d6 DUP7
0x10d7 ADD
0x10d8 MSTORE
0x10d9 PUSH1 0x4a
0x10db DUP6
0x10dc ADD
0x10dd DUP11
0x10de SWAP1
0x10df MSTORE
0x10e0 DUP9
0x10e1 MLOAD
0x10e2 SWAP1
0x10e3 SWAP5
0x10e4 DUP6
0x10e5 SWAP4
0x10e6 DUP14
0x10e7 SWAP4
0x10e8 DUP14
0x10e9 SWAP4
0x10ea DUP14
0x10eb SWAP4
0x10ec DUP14
0x10ed SWAP4
0x10ee DUP14
0x10ef SWAP4
0x10f0 DUP14
0x10f1 SWAP4
0x10f2 DUP14
0x10f3 SWAP4
0x10f4 SWAP2
0x10f5 SWAP3
0x10f6 PUSH1 0x6a
0x10f8 SWAP1
0x10f9 SWAP3
0x10fa ADD
0x10fb SWAP2
0x10fc DUP8
0x10fd ADD
0x10fe SWAP1
0x10ff DUP1
0x1100 DUP4
0x1101 DUP4
---
0x107b: JUMPDEST 
0x107c: V1208 = 0x40
0x107e: V1209 = M[0x40]
0x107f: V1210 = 0x1900000000000000000000000000000000000000000000000000000000000000
0x10a0: V1211 = 0x20
0x10a4: V1212 = ADD V1209 0x20
0x10a7: M[V1212] = 0x1900000000000000000000000000000000000000000000000000000000000000
0x10a8: V1213 = 0x0
0x10aa: V1214 = 0x21
0x10ad: V1215 = ADD V1209 0x21
0x10b0: M[V1215] = 0x0
0x10b1: V1216 = 0x1000000000000000000000000
0x10bf: V1217 = 0x1
0x10c1: V1218 = 0xa0
0x10c3: V1219 = 0x2
0x10c5: V1220 = EXP 0x2 0xa0
0x10c6: V1221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c9: V1222 = AND V963 0xffffffffffffffffffffffffffffffffffffffff
0x10cb: V1223 = MUL 0x1000000000000000000000000 V1222
0x10cc: V1224 = 0x22
0x10cf: V1225 = ADD V1209 0x22
0x10d0: M[V1225] = V1223
0x10d2: V1226 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x10d3: V1227 = MUL V1226 0x1000000000000000000000000
0x10d4: V1228 = 0x36
0x10d7: V1229 = ADD V1209 0x36
0x10d8: M[V1229] = V1227
0x10d9: V1230 = 0x4a
0x10dc: V1231 = ADD V1209 0x4a
0x10df: M[V1231] = 0x0
0x10e1: V1232 = M[V973]
0x10f6: V1233 = 0x6a
0x10fa: V1234 = ADD V1209 0x6a
0x10fd: V1235 = ADD V973 0x20
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x1, S8, 0xd82, V963, S5, 0x0, V973, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, 0x1900000000000000000000000000000000000000000000000000000000000000, 0x0, S6, S5, S4, S3, S2, S1, S0, V1212, V1234, V1235, V1232, V1232, V1234, V1235]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x1, S8, 0xd82, V963, S5, 0x0, V973, S2, S1, S0, 0x0, 0x1900000000000000000000000000000000000000000000000000000000000000, 0x0, V963, S5, 0x0, V973, S2, S1, S0, V1212, V1234, V1235, V1232, V1232, V1234, V1235]

================================

Block 0x1102
[0x1102:0x110a]
---
Predecessors: [0x107b, 0x110b]
Successors: [0x110b, 0x1121]
---
0x1102 JUMPDEST
0x1103 PUSH1 0x20
0x1105 DUP4
0x1106 LT
0x1107 PUSH2 0x1121
0x110a JUMPI
---
0x1102: JUMPDEST 
0x1103: V1236 = 0x20
0x1106: V1237 = LT S2 0x20
0x1107: V1238 = 0x1121
0x110a: JUMPI 0x1121 V1237
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, 0x1, S25, 0xd82, V963, S22, 0x0, V973, S19, S18, S17, 0x0, 0x1900000000000000000000000000000000000000000000000000000000000000, 0x0, V963, S12, 0x0, V973, S9, S8, S7, V1212, V1234, V1235, V1232, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, 0x1, S25, 0xd82, V963, S22, 0x0, V973, S19, S18, S17, 0x0, 0x1900000000000000000000000000000000000000000000000000000000000000, 0x0, V963, S12, 0x0, V973, S9, S8, S7, V1212, V1234, V1235, V1232, S2, S1, S0]

================================

Block 0x110b
[0x110b:0x1120]
---
Predecessors: [0x1102]
Successors: [0x1102]
---
0x110b DUP1
0x110c MLOAD
0x110d DUP3
0x110e MSTORE
0x110f PUSH1 0x1f
0x1111 NOT
0x1112 SWAP1
0x1113 SWAP3
0x1114 ADD
0x1115 SWAP2
0x1116 PUSH1 0x20
0x1118 SWAP2
0x1119 DUP3
0x111a ADD
0x111b SWAP2
0x111c ADD
0x111d PUSH2 0x1102
0x1120 JUMP
---
0x110c: V1239 = M[S0]
0x110e: M[S1] = V1239
0x110f: V1240 = 0x1f
0x1111: V1241 = NOT 0x1f
0x1114: V1242 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1116: V1243 = 0x20
0x111a: V1244 = ADD 0x20 S1
0x111c: V1245 = ADD 0x20 S0
0x111d: V1246 = 0x1102
0x1120: JUMP 0x1102
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, 0x1, S25, 0xd82, V963, S22, 0x0, V973, S19, S18, S17, 0x0, 0x1900000000000000000000000000000000000000000000000000000000000000, 0x0, V963, S12, 0x0, V973, S9, S8, S7, V1212, V1234, V1235, V1232, S2, S1, S0]
Stack pops: 3
Stack additions: [V1242, V1244, V1245]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, 0x1, S25, 0xd82, V963, S22, 0x0, V973, S19, S18, S17, 0x0, 0x1900000000000000000000000000000000000000000000000000000000000000, 0x0, V963, S12, 0x0, V973, S9, S8, S7, V1212, V1234, V1235, V1232, V1242, V1244, V1245]

================================

Block 0x1121
[0x1121:0x117e]
---
Predecessors: [0x1102]
Successors: [0x117f]
---
0x1121 JUMPDEST
0x1122 PUSH1 0x1
0x1124 DUP4
0x1125 PUSH1 0x20
0x1127 SUB
0x1128 PUSH2 0x100
0x112b EXP
0x112c SUB
0x112d DUP1
0x112e NOT
0x112f DUP3
0x1130 MLOAD
0x1131 AND
0x1132 DUP2
0x1133 DUP5
0x1134 MLOAD
0x1135 AND
0x1136 DUP1
0x1137 DUP3
0x1138 OR
0x1139 DUP6
0x113a MSTORE
0x113b POP
0x113c POP
0x113d POP
0x113e POP
0x113f POP
0x1140 POP
0x1141 SWAP1
0x1142 POP
0x1143 ADD
0x1144 DUP5
0x1145 DUP2
0x1146 MSTORE
0x1147 PUSH1 0x20
0x1149 ADD
0x114a DUP4
0x114b DUP2
0x114c MSTORE
0x114d PUSH1 0x20
0x114f ADD
0x1150 DUP3
0x1151 DUP2
0x1152 MSTORE
0x1153 PUSH1 0x20
0x1155 ADD
0x1156 SWAP10
0x1157 POP
0x1158 POP
0x1159 POP
0x115a POP
0x115b POP
0x115c POP
0x115d POP
0x115e POP
0x115f POP
0x1160 POP
0x1161 PUSH1 0x40
0x1163 MLOAD
0x1164 PUSH1 0x20
0x1166 DUP2
0x1167 DUP4
0x1168 SUB
0x1169 SUB
0x116a DUP2
0x116b MSTORE
0x116c SWAP1
0x116d PUSH1 0x40
0x116f MSTORE
0x1170 PUSH1 0x40
0x1172 MLOAD
0x1173 DUP1
0x1174 DUP3
0x1175 DUP1
0x1176 MLOAD
0x1177 SWAP1
0x1178 PUSH1 0x20
0x117a ADD
0x117b SWAP1
0x117c DUP1
0x117d DUP4
0x117e DUP4
---
0x1121: JUMPDEST 
0x1122: V1247 = 0x1
0x1125: V1248 = 0x20
0x1127: V1249 = SUB 0x20 S2
0x1128: V1250 = 0x100
0x112b: V1251 = EXP 0x100 V1249
0x112c: V1252 = SUB V1251 0x1
0x112e: V1253 = NOT V1252
0x1130: V1254 = M[S0]
0x1131: V1255 = AND V1254 V1253
0x1134: V1256 = M[S1]
0x1135: V1257 = AND V1256 V1252
0x1138: V1258 = OR V1255 V1257
0x113a: M[S1] = V1258
0x1143: V1259 = ADD V1232 V1234
0x1146: M[V1259] = S9
0x1147: V1260 = 0x20
0x1149: V1261 = ADD 0x20 V1259
0x114c: M[V1261] = S8
0x114d: V1262 = 0x20
0x114f: V1263 = ADD 0x20 V1261
0x1152: M[V1263] = S7
0x1153: V1264 = 0x20
0x1155: V1265 = ADD 0x20 V1263
0x1161: V1266 = 0x40
0x1163: V1267 = M[0x40]
0x1164: V1268 = 0x20
0x1168: V1269 = SUB V1265 V1267
0x1169: V1270 = SUB V1269 0x20
0x116b: M[V1267] = V1270
0x116d: V1271 = 0x40
0x116f: M[0x40] = V1265
0x1170: V1272 = 0x40
0x1172: V1273 = M[0x40]
0x1176: V1274 = M[V1267]
0x1178: V1275 = 0x20
0x117a: V1276 = ADD 0x20 V1267
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, 0x1, S25, 0xd82, V963, S22, 0x0, V973, S19, S18, S17, 0x0, 0x1900000000000000000000000000000000000000000000000000000000000000, 0x0, V963, S12, 0x0, V973, S9, S8, S7, V1212, V1234, V1235, V1232, S2, S1, S0]
Stack pops: 16
Stack additions: [V1267, V1273, V1273, V1276, V1274, V1274, V1273, V1276]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, 0x1, S25, 0xd82, V963, S22, 0x0, V973, S19, S18, S17, 0x0, V1267, V1273, V1273, V1276, V1274, V1274, V1273, V1276]

================================

Block 0x117f
[0x117f:0x1187]
---
Predecessors: [0x1121, 0x1188]
Successors: [0x1188, 0x119e]
---
0x117f JUMPDEST
0x1180 PUSH1 0x20
0x1182 DUP4
0x1183 LT
0x1184 PUSH2 0x119e
0x1187 JUMPI
---
0x117f: JUMPDEST 
0x1180: V1277 = 0x20
0x1183: V1278 = LT S2 0x20
0x1184: V1279 = 0x119e
0x1187: JUMPI 0x119e V1278
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1267, V1273, V1273, V1276, V1274, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1267, V1273, V1273, V1276, V1274, S2, S1, S0]

================================

Block 0x1188
[0x1188:0x119d]
---
Predecessors: [0x117f]
Successors: [0x117f]
---
0x1188 DUP1
0x1189 MLOAD
0x118a DUP3
0x118b MSTORE
0x118c PUSH1 0x1f
0x118e NOT
0x118f SWAP1
0x1190 SWAP3
0x1191 ADD
0x1192 SWAP2
0x1193 PUSH1 0x20
0x1195 SWAP2
0x1196 DUP3
0x1197 ADD
0x1198 SWAP2
0x1199 ADD
0x119a PUSH2 0x117f
0x119d JUMP
---
0x1189: V1280 = M[S0]
0x118b: M[S1] = V1280
0x118c: V1281 = 0x1f
0x118e: V1282 = NOT 0x1f
0x1191: V1283 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1193: V1284 = 0x20
0x1197: V1285 = ADD 0x20 S1
0x1199: V1286 = ADD 0x20 S0
0x119a: V1287 = 0x117f
0x119d: JUMP 0x117f
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1267, V1273, V1273, V1276, V1274, S2, S1, S0]
Stack pops: 3
Stack additions: [V1283, V1285, V1286]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1267, V1273, V1273, V1276, V1274, V1283, V1285, V1286]

================================

Block 0x119e
[0x119e:0x1217]
---
Predecessors: [0x117f]
Successors: [0x1218]
---
0x119e JUMPDEST
0x119f MLOAD
0x11a0 DUP2
0x11a1 MLOAD
0x11a2 PUSH1 0x20
0x11a4 SWAP4
0x11a5 DUP5
0x11a6 SUB
0x11a7 PUSH2 0x100
0x11aa EXP
0x11ab PUSH1 0x0
0x11ad NOT
0x11ae ADD
0x11af DUP1
0x11b0 NOT
0x11b1 SWAP1
0x11b2 SWAP3
0x11b3 AND
0x11b4 SWAP2
0x11b5 AND
0x11b6 OR
0x11b7 SWAP1
0x11b8 MSTORE
0x11b9 PUSH1 0x40
0x11bb DUP1
0x11bc MLOAD
0x11bd SWAP3
0x11be SWAP1
0x11bf SWAP5
0x11c0 ADD
0x11c1 DUP3
0x11c2 SWAP1
0x11c3 SUB
0x11c4 DUP3
0x11c5 SHA3
0x11c6 PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x11e7 DUP4
0x11e8 DUP4
0x11e9 ADD
0x11ea MSTORE
0x11eb PUSH1 0x3c
0x11ed DUP1
0x11ee DUP5
0x11ef ADD
0x11f0 SWAP2
0x11f1 SWAP1
0x11f2 SWAP2
0x11f3 MSTORE
0x11f4 DUP5
0x11f5 MLOAD
0x11f6 DUP1
0x11f7 DUP5
0x11f8 SUB
0x11f9 SWAP1
0x11fa SWAP2
0x11fb ADD
0x11fc DUP2
0x11fd MSTORE
0x11fe PUSH1 0x5c
0x1200 SWAP1
0x1201 SWAP3
0x1202 ADD
0x1203 SWAP4
0x1204 DUP5
0x1205 SWAP1
0x1206 MSTORE
0x1207 DUP2
0x1208 MLOAD
0x1209 SWAP2
0x120a SWAP6
0x120b POP
0x120c SWAP3
0x120d SWAP4
0x120e POP
0x120f DUP4
0x1210 SWAP3
0x1211 DUP6
0x1212 ADD
0x1213 SWAP2
0x1214 POP
0x1215 DUP1
0x1216 DUP4
0x1217 DUP4
---
0x119e: JUMPDEST 
0x119f: V1288 = M[S0]
0x11a1: V1289 = M[S1]
0x11a2: V1290 = 0x20
0x11a6: V1291 = SUB 0x20 S2
0x11a7: V1292 = 0x100
0x11aa: V1293 = EXP 0x100 V1291
0x11ab: V1294 = 0x0
0x11ad: V1295 = NOT 0x0
0x11ae: V1296 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1293
0x11b0: V1297 = NOT V1296
0x11b3: V1298 = AND V1288 V1297
0x11b5: V1299 = AND V1296 V1289
0x11b6: V1300 = OR V1299 V1298
0x11b8: M[S1] = V1300
0x11b9: V1301 = 0x40
0x11bc: V1302 = M[0x40]
0x11c0: V1303 = ADD V1273 V1274
0x11c3: V1304 = SUB V1303 V1302
0x11c5: V1305 = SHA3 V1302 V1304
0x11c6: V1306 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x11e9: V1307 = ADD 0x20 V1302
0x11ea: M[V1307] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x11eb: V1308 = 0x3c
0x11ef: V1309 = ADD V1302 0x3c
0x11f3: M[V1309] = V1305
0x11f5: V1310 = M[0x40]
0x11f8: V1311 = SUB V1302 V1310
0x11fb: V1312 = ADD 0x3c V1311
0x11fd: M[V1310] = V1312
0x11fe: V1313 = 0x5c
0x1202: V1314 = ADD V1302 0x5c
0x1206: M[0x40] = V1314
0x1208: V1315 = M[V1310]
0x1212: V1316 = ADD V1310 0x20
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1267, V1273, V1273, V1276, V1274, S2, S1, S0]
Stack pops: 8
Stack additions: [V1310, V1314, V1314, V1316, V1315, V1315, V1314, V1316]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1310, V1314, V1314, V1316, V1315, V1315, V1314, V1316]

================================

Block 0x1218
[0x1218:0x1220]
---
Predecessors: [0x119e, 0x1221]
Successors: [0x1221, 0x1237]
---
0x1218 JUMPDEST
0x1219 PUSH1 0x20
0x121b DUP4
0x121c LT
0x121d PUSH2 0x1237
0x1220 JUMPI
---
0x1218: JUMPDEST 
0x1219: V1317 = 0x20
0x121c: V1318 = LT S2 0x20
0x121d: V1319 = 0x1237
0x1220: JUMPI 0x1237 V1318
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1310, V1314, V1314, V1316, V1315, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1310, V1314, V1314, V1316, V1315, S2, S1, S0]

================================

Block 0x1221
[0x1221:0x1236]
---
Predecessors: [0x1218]
Successors: [0x1218]
---
0x1221 DUP1
0x1222 MLOAD
0x1223 DUP3
0x1224 MSTORE
0x1225 PUSH1 0x1f
0x1227 NOT
0x1228 SWAP1
0x1229 SWAP3
0x122a ADD
0x122b SWAP2
0x122c PUSH1 0x20
0x122e SWAP2
0x122f DUP3
0x1230 ADD
0x1231 SWAP2
0x1232 ADD
0x1233 PUSH2 0x1218
0x1236 JUMP
---
0x1222: V1320 = M[S0]
0x1224: M[S1] = V1320
0x1225: V1321 = 0x1f
0x1227: V1322 = NOT 0x1f
0x122a: V1323 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x122c: V1324 = 0x20
0x1230: V1325 = ADD 0x20 S1
0x1232: V1326 = ADD 0x20 S0
0x1233: V1327 = 0x1218
0x1236: JUMP 0x1218
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1310, V1314, V1314, V1316, V1315, S2, S1, S0]
Stack pops: 3
Stack additions: [V1323, V1325, V1326]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1310, V1314, V1314, V1316, V1315, V1323, V1325, V1326]

================================

Block 0x1237
[0x1237:0x126e]
---
Predecessors: [0x1218]
Successors: [0xd82]
---
0x1237 JUMPDEST
0x1238 MLOAD
0x1239 DUP2
0x123a MLOAD
0x123b PUSH1 0x20
0x123d SWAP4
0x123e SWAP1
0x123f SWAP4
0x1240 SUB
0x1241 PUSH2 0x100
0x1244 EXP
0x1245 PUSH1 0x0
0x1247 NOT
0x1248 ADD
0x1249 DUP1
0x124a NOT
0x124b SWAP1
0x124c SWAP2
0x124d AND
0x124e SWAP3
0x124f AND
0x1250 SWAP2
0x1251 SWAP1
0x1252 SWAP2
0x1253 OR
0x1254 SWAP1
0x1255 MSTORE
0x1256 PUSH1 0x40
0x1258 MLOAD
0x1259 SWAP3
0x125a ADD
0x125b DUP3
0x125c SWAP1
0x125d SUB
0x125e SWAP1
0x125f SWAP2
0x1260 SHA3
0x1261 SWAP12
0x1262 SWAP11
0x1263 POP
0x1264 POP
0x1265 POP
0x1266 POP
0x1267 POP
0x1268 POP
0x1269 POP
0x126a POP
0x126b POP
0x126c POP
0x126d POP
0x126e JUMP
---
0x1237: JUMPDEST 
0x1238: V1328 = M[S0]
0x123a: V1329 = M[S1]
0x123b: V1330 = 0x20
0x1240: V1331 = SUB 0x20 S2
0x1241: V1332 = 0x100
0x1244: V1333 = EXP 0x100 V1331
0x1245: V1334 = 0x0
0x1247: V1335 = NOT 0x0
0x1248: V1336 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1333
0x124a: V1337 = NOT V1336
0x124d: V1338 = AND V1328 V1337
0x124f: V1339 = AND V1329 V1336
0x1253: V1340 = OR V1339 V1338
0x1255: M[S1] = V1340
0x1256: V1341 = 0x40
0x1258: V1342 = M[0x40]
0x125a: V1343 = ADD V1314 V1315
0x125d: V1344 = SUB V1343 V1342
0x1260: V1345 = SHA3 V1342 V1344
0x126e: JUMP 0xd82
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, 0xd82, V963, S14, 0x0, V973, S11, S10, S9, 0x0, V1310, V1314, V1314, V1316, V1315, S2, S1, S0]
Stack pops: 17
Stack additions: [V1345]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x1, S17, V1345]

================================

Block 0x126f
[0x126f:0x127a]
---
Predecessors: [0xd82]
Successors: [0x127b, 0x12cc]
---
0x126f JUMPDEST
0x1270 PUSH1 0x0
0x1272 DUP2
0x1273 PUSH1 0x1
0x1275 EQ
0x1276 ISZERO
0x1277 PUSH2 0x12cc
0x127a JUMPI
---
0x126f: JUMPDEST 
0x1270: V1346 = 0x0
0x1273: V1347 = 0x1
0x1275: V1348 = EQ 0x1 0x1
0x1276: V1349 = ISZERO 0x1
0x1277: V1350 = 0x12cc
0x127a: JUMPI 0x12cc 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x1, V1345, 0xd90, S3, S2, V1345, 0x1]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x1, V1345, 0xd90, S3, S2, V1345, 0x1, 0x0]

================================

Block 0x127b
[0x127b:0x129d]
---
Predecessors: [0x126f]
Successors: [0x1500]
---
0x127b PUSH1 0x1
0x127d PUSH1 0xa0
0x127f PUSH1 0x2
0x1281 EXP
0x1282 SUB
0x1283 DUP6
0x1284 AND
0x1285 PUSH1 0x0
0x1287 SWAP1
0x1288 DUP2
0x1289 MSTORE
0x128a PUSH1 0x1
0x128c PUSH1 0x20
0x128e MSTORE
0x128f PUSH1 0x40
0x1291 SWAP1
0x1292 SHA3
0x1293 SLOAD
0x1294 PUSH2 0x129e
0x1297 SWAP1
0x1298 DUP6
0x1299 SWAP1
0x129a PUSH2 0x1500
0x129d JUMP
---
0x127b: V1351 = 0x1
0x127d: V1352 = 0xa0
0x127f: V1353 = 0x2
0x1281: V1354 = EXP 0x2 0xa0
0x1282: V1355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1284: V1356 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x1285: V1357 = 0x0
0x1289: M[0x0] = V1356
0x128a: V1358 = 0x1
0x128c: V1359 = 0x20
0x128e: M[0x20] = 0x1
0x128f: V1360 = 0x40
0x1292: V1361 = SHA3 0x0 0x40
0x1293: V1362 = S[V1361]
0x1294: V1363 = 0x129e
0x129a: V1364 = 0x1500
0x129d: JUMP 0x1500
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0xd90, S4, S3, V1345, 0x1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x129e, S3, V1362]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0xd90, S4, S3, V1345, 0x1, 0x0, 0x129e, S3, V1362]

================================

Block 0x129e
[0x129e:0x12a4]
---
Predecessors: [0x1074, 0x1550]
Successors: [0x12a5, 0x12ac]
---
0x129e JUMPDEST
0x129f ISZERO
0x12a0 ISZERO
0x12a1 PUSH2 0x12ac
0x12a4 JUMPI
---
0x129e: JUMPDEST 
0x129f: V1365 = ISZERO S0
0x12a0: V1366 = ISZERO V1365
0x12a1: V1367 = 0x12ac
0x12a4: JUMPI 0x12ac V1366
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x12a5
[0x12a5:0x12ab]
---
Predecessors: [0x129e]
Successors: [0xfe9]
---
0x12a5 POP
0x12a6 PUSH1 0x0
0x12a8 PUSH2 0xfe9
0x12ab JUMP
---
0x12a6: V1368 = 0x0
0x12a8: V1369 = 0xfe9
0x12ab: JUMP 0xfe9
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, 0x0]

================================

Block 0x12ac
[0x12ac:0x12cb]
---
Predecessors: [0x129e]
Successors: [0xfe5]
---
0x12ac JUMPDEST
0x12ad PUSH1 0x1
0x12af PUSH1 0xa0
0x12b1 PUSH1 0x2
0x12b3 EXP
0x12b4 SUB
0x12b5 DUP6
0x12b6 AND
0x12b7 PUSH1 0x0
0x12b9 SWAP1
0x12ba DUP2
0x12bb MSTORE
0x12bc PUSH1 0x1
0x12be PUSH1 0x20
0x12c0 MSTORE
0x12c1 PUSH1 0x40
0x12c3 SWAP1
0x12c4 SHA3
0x12c5 DUP5
0x12c6 SWAP1
0x12c7 SSTORE
0x12c8 PUSH2 0xfe5
0x12cb JUMP
---
0x12ac: JUMPDEST 
0x12ad: V1370 = 0x1
0x12af: V1371 = 0xa0
0x12b1: V1372 = 0x2
0x12b3: V1373 = EXP 0x2 0xa0
0x12b4: V1374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b6: V1375 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x12b7: V1376 = 0x0
0x12bb: M[0x0] = V1375
0x12bc: V1377 = 0x1
0x12be: V1378 = 0x20
0x12c0: M[0x20] = 0x1
0x12c1: V1379 = 0x40
0x12c4: V1380 = SHA3 0x0 0x40
0x12c7: S[V1380] = S3
0x12c8: V1381 = 0xfe5
0x12cb: JUMP 0xfe5
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0x12cc
[0x12cc:0x12fe]
---
Predecessors: [0x126f]
Successors: [0x12ff, 0x1306]
---
0x12cc JUMPDEST
0x12cd PUSH1 0x1
0x12cf PUSH1 0xa0
0x12d1 PUSH1 0x2
0x12d3 EXP
0x12d4 SUB
0x12d5 DUP6
0x12d6 AND
0x12d7 PUSH1 0x0
0x12d9 SWAP1
0x12da DUP2
0x12db MSTORE
0x12dc PUSH1 0x1
0x12de PUSH1 0x20
0x12e0 DUP2
0x12e1 DUP2
0x12e2 MSTORE
0x12e3 PUSH1 0x40
0x12e5 DUP1
0x12e6 DUP5
0x12e7 SHA3
0x12e8 DUP8
0x12e9 DUP6
0x12ea MSTORE
0x12eb DUP4
0x12ec ADD
0x12ed SWAP1
0x12ee SWAP2
0x12ef MSTORE
0x12f0 SWAP1
0x12f1 SWAP2
0x12f2 SHA3
0x12f3 SLOAD
0x12f4 PUSH1 0xff
0x12f6 AND
0x12f7 ISZERO
0x12f8 ISZERO
0x12f9 EQ
0x12fa ISZERO
0x12fb PUSH2 0x1306
0x12fe JUMPI
---
0x12cc: JUMPDEST 
0x12cd: V1382 = 0x1
0x12cf: V1383 = 0xa0
0x12d1: V1384 = 0x2
0x12d3: V1385 = EXP 0x2 0xa0
0x12d4: V1386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d6: V1387 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x12d7: V1388 = 0x0
0x12db: M[0x0] = V1387
0x12dc: V1389 = 0x1
0x12de: V1390 = 0x20
0x12e2: M[0x20] = 0x1
0x12e3: V1391 = 0x40
0x12e7: V1392 = SHA3 0x0 0x40
0x12ea: M[0x0] = V1345
0x12ec: V1393 = ADD 0x1 V1392
0x12ef: M[0x20] = V1393
0x12f2: V1394 = SHA3 0x0 0x40
0x12f3: V1395 = S[V1394]
0x12f4: V1396 = 0xff
0x12f6: V1397 = AND 0xff V1395
0x12f7: V1398 = ISZERO V1397
0x12f8: V1399 = ISZERO V1398
0x12f9: V1400 = EQ V1399 0x1
0x12fa: V1401 = ISZERO V1400
0x12fb: V1402 = 0x1306
0x12fe: JUMPI 0x1306 V1401
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0xd90, S4, S3, V1345, 0x1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0xd90, S4, S3, V1345, 0x1, 0x0]

================================

Block 0x12ff
[0x12ff:0x1305]
---
Predecessors: [0x12cc]
Successors: [0xfe9]
---
0x12ff POP
0x1300 PUSH1 0x0
0x1302 PUSH2 0xfe9
0x1305 JUMP
---
0x1300: V1403 = 0x0
0x1302: V1404 = 0xfe9
0x1305: JUMP 0xfe9
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0xd90, S4, S3, V1345, 0x1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0xd90, S4, S3, V1345, 0x1, 0x0]

================================

Block 0x1306
[0x1306:0x133d]
---
Predecessors: [0x12cc]
Successors: [0xd90]
---
0x1306 JUMPDEST
0x1307 POP
0x1308 POP
0x1309 PUSH1 0x1
0x130b PUSH1 0xa0
0x130d PUSH1 0x2
0x130f EXP
0x1310 SUB
0x1311 SWAP3
0x1312 SWAP1
0x1313 SWAP3
0x1314 AND
0x1315 PUSH1 0x0
0x1317 SWAP1
0x1318 DUP2
0x1319 MSTORE
0x131a PUSH1 0x1
0x131c PUSH1 0x20
0x131e DUP2
0x131f DUP2
0x1320 MSTORE
0x1321 PUSH1 0x40
0x1323 DUP1
0x1324 DUP5
0x1325 SHA3
0x1326 SWAP6
0x1327 DUP5
0x1328 MSTORE
0x1329 SWAP5
0x132a DUP3
0x132b ADD
0x132c SWAP1
0x132d MSTORE
0x132e SWAP3
0x132f SWAP1
0x1330 SHA3
0x1331 DUP1
0x1332 SLOAD
0x1333 PUSH1 0xff
0x1335 NOT
0x1336 AND
0x1337 DUP4
0x1338 OR
0x1339 SWAP1
0x133a SSTORE
0x133b POP
0x133c SWAP1
0x133d JUMP
---
0x1306: JUMPDEST 
0x1309: V1405 = 0x1
0x130b: V1406 = 0xa0
0x130d: V1407 = 0x2
0x130f: V1408 = EXP 0x2 0xa0
0x1310: V1409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1314: V1410 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1315: V1411 = 0x0
0x1319: M[0x0] = V1410
0x131a: V1412 = 0x1
0x131c: V1413 = 0x20
0x1320: M[0x20] = 0x1
0x1321: V1414 = 0x40
0x1325: V1415 = SHA3 0x0 0x40
0x1328: M[0x0] = V1345
0x132b: V1416 = ADD 0x1 V1415
0x132d: M[0x20] = V1416
0x1330: V1417 = SHA3 0x0 0x40
0x1332: V1418 = S[V1417]
0x1333: V1419 = 0xff
0x1335: V1420 = NOT 0xff
0x1336: V1421 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1418
0x1338: V1422 = OR 0x1 V1421
0x133a: S[V1417] = V1422
0x133d: JUMP 0xd90
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0xd90, S4, S3, V1345, 0x1, 0x0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x1, V1345, 0x1]

================================

Block 0x133e
[0x133e:0x134b]
---
Predecessors: [0xdeb]
Successors: [0x155a]
---
0x133e JUMPDEST
0x133f PUSH1 0x0
0x1341 PUSH2 0x134c
0x1344 DUP4
0x1345 DUP4
0x1346 PUSH1 0x0
0x1348 PUSH2 0x155a
0x134b JUMP
---
0x133e: JUMPDEST 
0x133f: V1423 = 0x0
0x1341: V1424 = 0x134c
0x1346: V1425 = 0x0
0x1348: V1426 = 0x155a
0x134b: JUMP 0x155a
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S12, S11, S10, S9, S8, S7, S6, S5, 0xe59, V128, V1014, S1, V1028]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x134c, S1, S0, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S12, S11, S10, S9, S8, S7, S6, S5, 0xe59, V128, V1014, S1, V1028, 0x0, 0x134c, S1, V1028, 0x0]

================================

Block 0x134c
[0x134c:0x1357]
---
Predecessors: [0x15f1]
Successors: [0xf08]
---
0x134c JUMPDEST
0x134d SWAP1
0x134e POP
0x134f PUSH2 0x1358
0x1352 DUP6
0x1353 DUP3
0x1354 PUSH2 0xf08
0x1357 JUMP
---
0x134c: JUMPDEST 
0x134f: V1427 = 0x1358
0x1354: V1428 = 0xf08
0x1357: JUMP 0xf08
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, S7, 0xe59, V128, V1014, S3, V1028, 0x0, V1615]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S0, 0x1358, S5, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, 0x1, S7, 0xe59, V128, V1014, S3, V1028, V1615, 0x1358, V128, V1615]

================================

Block 0x1358
[0x1358:0x135e]
---
Predecessors: [0xf95]
Successors: [0x135f, 0x13b3]
---
0x1358 JUMPDEST
0x1359 ISZERO
0x135a ISZERO
0x135b PUSH2 0x13b3
0x135e JUMPI
---
0x1358: JUMPDEST 
0x1359: V1429 = ISZERO V1140
0x135a: V1430 = ISZERO V1429
0x135b: V1431 = 0x13b3
0x135e: JUMPI 0x13b3 V1430
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S8, S7, S6, S5, S4, S3, S2, S1, V1140]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x135f
[0x135f:0x13b2]
---
Predecessors: [0x1358]
Successors: []
---
0x135f PUSH1 0x40
0x1361 DUP1
0x1362 MLOAD
0x1363 PUSH1 0x0
0x1365 DUP1
0x1366 MLOAD
0x1367 PUSH1 0x20
0x1369 PUSH2 0x1608
0x136c DUP4
0x136d CODECOPY
0x136e DUP2
0x136f MLOAD
0x1370 SWAP2
0x1371 MSTORE
0x1372 DUP2
0x1373 MSTORE
0x1374 PUSH1 0x20
0x1376 PUSH1 0x4
0x1378 DUP3
0x1379 ADD
0x137a MSTORE
0x137b PUSH1 0x19
0x137d PUSH1 0x24
0x137f DUP3
0x1380 ADD
0x1381 MSTORE
0x1382 PUSH32 0x4f4f4d3a207369676e6572206d757374206265206f776e657200000000000000
0x13a3 PUSH1 0x44
0x13a5 DUP3
0x13a6 ADD
0x13a7 MSTORE
0x13a8 SWAP1
0x13a9 MLOAD
0x13aa SWAP1
0x13ab DUP2
0x13ac SWAP1
0x13ad SUB
0x13ae PUSH1 0x64
0x13b0 ADD
0x13b1 SWAP1
0x13b2 REVERT
---
0x135f: V1432 = 0x40
0x1362: V1433 = M[0x40]
0x1363: V1434 = 0x0
0x1366: V1435 = M[0x0]
0x1367: V1436 = 0x20
0x1369: V1437 = 0x1608
0x136d: CODECOPY 0x0 0x1608 0x20
0x136f: V1438 = M[0x0]
0x1371: M[0x0] = V1435
0x1373: M[V1433] = V1438
0x1374: V1439 = 0x20
0x1376: V1440 = 0x4
0x1379: V1441 = ADD V1433 0x4
0x137a: M[V1441] = 0x20
0x137b: V1442 = 0x19
0x137d: V1443 = 0x24
0x1380: V1444 = ADD V1433 0x24
0x1381: M[V1444] = 0x19
0x1382: V1445 = 0x4f4f4d3a207369676e6572206d757374206265206f776e657200000000000000
0x13a3: V1446 = 0x44
0x13a6: V1447 = ADD V1433 0x44
0x13a7: M[V1447] = 0x4f4f4d3a207369676e6572206d757374206265206f776e657200000000000000
0x13a9: V1448 = M[0x40]
0x13ad: V1449 = SUB V1433 V1448
0x13ae: V1450 = 0x64
0x13b0: V1451 = ADD 0x64 V1449
0x13b2: REVERT V1448 V1451
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x13b3
[0x13b3:0x13b9]
---
Predecessors: [0x1358]
Successors: [0xe59]
---
0x13b3 JUMPDEST
0x13b4 POP
0x13b5 POP
0x13b6 POP
0x13b7 POP
0x13b8 POP
0x13b9 JUMP
---
0x13b3: JUMPDEST 
0x13b9: JUMP S5
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, 0x0, V846, S7, S6]

================================

Block 0x13ba
[0x13ba:0x13c7]
---
Predecessors: [0xe59]
Successors: [0x13c8, 0x1442]
---
0x13ba JUMPDEST
0x13bb PUSH2 0x6fcc
0x13be DUP6
0x13bf ADD
0x13c0 DUP4
0x13c1 DUP2
0x13c2 GT
0x13c3 ISZERO
0x13c4 PUSH2 0x1442
0x13c7 JUMPI
---
0x13ba: JUMPDEST 
0x13bb: V1452 = 0x6fcc
0x13bf: V1453 = ADD V1075 0x6fcc
0x13c2: V1454 = GT V1453 S2
0x13c3: V1455 = ISZERO V1454
0x13c4: V1456 = 0x1442
0x13c7: JUMPI 0x1442 V1455
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V1050, S9, S8, S7, 0xee7, S5, V1075, S3, S2, S1, V1076]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1453]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V1050, S9, S8, S7, 0xee7, S5, V1075, S3, S2, S1, V1076, V1453]

================================

Block 0x13c8
[0x13c8:0x1441]
---
Predecessors: [0x13ba]
Successors: []
---
0x13c8 PUSH1 0x40
0x13ca DUP1
0x13cb MLOAD
0x13cc PUSH1 0x0
0x13ce DUP1
0x13cf MLOAD
0x13d0 PUSH1 0x20
0x13d2 PUSH2 0x1608
0x13d5 DUP4
0x13d6 CODECOPY
0x13d7 DUP2
0x13d8 MLOAD
0x13d9 SWAP2
0x13da MSTORE
0x13db DUP2
0x13dc MSTORE
0x13dd PUSH1 0x20
0x13df PUSH1 0x4
0x13e1 DUP3
0x13e2 ADD
0x13e3 MSTORE
0x13e4 PUSH1 0x29
0x13e6 PUSH1 0x24
0x13e8 DUP3
0x13e9 ADD
0x13ea MSTORE
0x13eb PUSH32 0x524d3a20746865207472616e73616374696f6e20636f6e73756d656420746f6f
0x140c PUSH1 0x44
0x140e DUP3
0x140f ADD
0x1410 MSTORE
0x1411 PUSH32 0x206d756368206761730000000000000000000000000000000000000000000000
0x1432 PUSH1 0x64
0x1434 DUP3
0x1435 ADD
0x1436 MSTORE
0x1437 SWAP1
0x1438 MLOAD
0x1439 SWAP1
0x143a DUP2
0x143b SWAP1
0x143c SUB
0x143d PUSH1 0x84
0x143f ADD
0x1440 SWAP1
0x1441 REVERT
---
0x13c8: V1457 = 0x40
0x13cb: V1458 = M[0x40]
0x13cc: V1459 = 0x0
0x13cf: V1460 = M[0x0]
0x13d0: V1461 = 0x20
0x13d2: V1462 = 0x1608
0x13d6: CODECOPY 0x0 0x1608 0x20
0x13d8: V1463 = M[0x0]
0x13da: M[0x0] = V1460
0x13dc: M[V1458] = V1463
0x13dd: V1464 = 0x20
0x13df: V1465 = 0x4
0x13e2: V1466 = ADD V1458 0x4
0x13e3: M[V1466] = 0x20
0x13e4: V1467 = 0x29
0x13e6: V1468 = 0x24
0x13e9: V1469 = ADD V1458 0x24
0x13ea: M[V1469] = 0x29
0x13eb: V1470 = 0x524d3a20746865207472616e73616374696f6e20636f6e73756d656420746f6f
0x140c: V1471 = 0x44
0x140f: V1472 = ADD V1458 0x44
0x1410: M[V1472] = 0x524d3a20746865207472616e73616374696f6e20636f6e73756d656420746f6f
0x1411: V1473 = 0x206d756368206761730000000000000000000000000000000000000000000000
0x1432: V1474 = 0x64
0x1435: V1475 = ADD V1458 0x64
0x1436: M[V1475] = 0x206d756368206761730000000000000000000000000000000000000000000000
0x1438: V1476 = M[0x40]
0x143c: V1477 = SUB V1458 V1476
0x143d: V1478 = 0x84
0x143f: V1479 = ADD 0x84 V1477
0x1441: REVERT V1476 V1479
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453]

================================

Block 0x1442
[0x1442:0x144c]
---
Predecessors: [0x13ba]
Successors: [0x144d, 0x1452]
---
0x1442 JUMPDEST
0x1443 PUSH1 0x0
0x1445 DUP6
0x1446 GT
0x1447 DUP1
0x1448 ISZERO
0x1449 PUSH2 0x1452
0x144c JUMPI
---
0x1442: JUMPDEST 
0x1443: V1480 = 0x0
0x1446: V1481 = GT S4 0x0
0x1448: V1482 = ISZERO V1481
0x1449: V1483 = 0x1452
0x144c: JUMPI 0x1452 V1482
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1481]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453, V1481]

================================

Block 0x144d
[0x144d:0x1451]
---
Predecessors: [0x1442]
Successors: [0x1452]
---
0x144d POP
0x144e PUSH1 0x1
0x1450 DUP4
0x1451 GT
---
0x144e: V1484 = 0x1
0x1451: V1485 = GT S3 0x1
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V1050, S11, S10, S9, 0xee7, S7, V1075, S5, S4, S3, V1076, V1453, V1481]
Stack pops: 4
Stack additions: [S3, S2, S1, V1485]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V1050, S11, S10, S9, 0xee7, S7, V1075, S5, S4, S3, V1076, V1453, V1485]

================================

Block 0x1452
[0x1452:0x1457]
---
Predecessors: [0x1442, 0x144d]
Successors: [0x48b, 0x1458]
---
0x1452 JUMPDEST
0x1453 ISZERO
0x1454 PUSH2 0x48b
0x1457 JUMPI
---
0x1452: JUMPDEST 
0x1453: V1486 = ISZERO S0
0x1454: V1487 = 0x48b
0x1457: JUMPI 0x48b V1486
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V1050, S11, S10, S9, 0xee7, S7, V1075, S5, S4, S3, V1076, V1453, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V1050, S11, S10, S9, 0xee7, S7, V1075, S5, S4, S3, V1076, V1453]

================================

Block 0x1458
[0x1458:0x145f]
---
Predecessors: [0x1452]
Successors: [0x1460, 0x1466]
---
0x1458 GASPRICE
0x1459 DUP6
0x145a GT
0x145b ISZERO
0x145c PUSH2 0x1466
0x145f JUMPI
---
0x1458: V1488 = GASPRICE
0x145a: V1489 = GT S4 V1488
0x145b: V1490 = ISZERO V1489
0x145c: V1491 = 0x1466
0x145f: JUMPI 0x1466 V1490
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453]

================================

Block 0x1460
[0x1460:0x1465]
---
Predecessors: [0x1458]
Successors: [0x1469]
---
0x1460 GASPRICE
0x1461 MUL
0x1462 PUSH2 0x1469
0x1465 JUMP
---
0x1460: V1492 = GASPRICE
0x1461: V1493 = MUL V1492 V1453
0x1462: V1494 = 0x1469
0x1465: JUMP 0x1469
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453]
Stack pops: 1
Stack additions: [V1493]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1493]

================================

Block 0x1466
[0x1466:0x1468]
---
Predecessors: [0x1458]
Successors: [0x1469]
---
0x1466 JUMPDEST
0x1467 DUP5
0x1468 MUL
---
0x1466: JUMPDEST 
0x1468: V1495 = MUL S4 V1453
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1453]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1495]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, V1495]

================================

Block 0x1469
[0x1469:0x14da]
---
Predecessors: [0x1460, 0x1466]
Successors: [0x14db, 0x14df]
---
0x1469 JUMPDEST
0x146a PUSH1 0x40
0x146c DUP1
0x146d MLOAD
0x146e PUSH32 0x8f6f033200000000000000000000000000000000000000000000000000000000
0x148f DUP2
0x1490 MSTORE
0x1491 PUSH1 0x1
0x1493 PUSH1 0xa0
0x1495 PUSH1 0x2
0x1497 EXP
0x1498 SUB
0x1499 DUP5
0x149a DUP2
0x149b AND
0x149c PUSH1 0x4
0x149e DUP4
0x149f ADD
0x14a0 MSTORE
0x14a1 PUSH1 0x24
0x14a3 DUP3
0x14a4 ADD
0x14a5 DUP5
0x14a6 SWAP1
0x14a7 MSTORE
0x14a8 PUSH1 0x60
0x14aa PUSH1 0x44
0x14ac DUP4
0x14ad ADD
0x14ae MSTORE
0x14af PUSH1 0x0
0x14b1 PUSH1 0x64
0x14b3 DUP4
0x14b4 ADD
0x14b5 DUP2
0x14b6 SWAP1
0x14b7 MSTORE
0x14b8 SWAP3
0x14b9 MLOAD
0x14ba SWAP1
0x14bb DUP11
0x14bc AND
0x14bd SWAP3
0x14be PUSH4 0x8f6f0332
0x14c3 SWAP3
0x14c4 PUSH1 0xa4
0x14c6 DUP1
0x14c7 DUP3
0x14c8 ADD
0x14c9 SWAP4
0x14ca SWAP2
0x14cb DUP3
0x14cc SWAP1
0x14cd SUB
0x14ce ADD
0x14cf DUP2
0x14d0 DUP4
0x14d1 DUP8
0x14d2 DUP1
0x14d3 EXTCODESIZE
0x14d4 ISZERO
0x14d5 DUP1
0x14d6 ISZERO
0x14d7 PUSH2 0x14df
0x14da JUMPI
---
0x1469: JUMPDEST 
0x146a: V1496 = 0x40
0x146d: V1497 = M[0x40]
0x146e: V1498 = 0x8f6f033200000000000000000000000000000000000000000000000000000000
0x1490: M[V1497] = 0x8f6f033200000000000000000000000000000000000000000000000000000000
0x1491: V1499 = 0x1
0x1493: V1500 = 0xa0
0x1495: V1501 = 0x2
0x1497: V1502 = EXP 0x2 0xa0
0x1498: V1503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149b: V1504 = AND 0xffffffffffffffffffffffffffffffffffffffff V1076
0x149c: V1505 = 0x4
0x149f: V1506 = ADD V1497 0x4
0x14a0: M[V1506] = V1504
0x14a1: V1507 = 0x24
0x14a4: V1508 = ADD V1497 0x24
0x14a7: M[V1508] = S0
0x14a8: V1509 = 0x60
0x14aa: V1510 = 0x44
0x14ad: V1511 = ADD V1497 0x44
0x14ae: M[V1511] = 0x60
0x14af: V1512 = 0x0
0x14b1: V1513 = 0x64
0x14b4: V1514 = ADD V1497 0x64
0x14b7: M[V1514] = 0x0
0x14b9: V1515 = M[0x40]
0x14bc: V1516 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x14be: V1517 = 0x8f6f0332
0x14c4: V1518 = 0xa4
0x14c8: V1519 = ADD V1497 0xa4
0x14cd: V1520 = SUB V1497 V1515
0x14ce: V1521 = ADD V1520 0xa4
0x14d3: V1522 = EXTCODESIZE V1516
0x14d4: V1523 = ISZERO V1522
0x14d6: V1524 = ISZERO V1523
0x14d7: V1525 = 0x14df
0x14da: JUMPI 0x14df V1524
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V1516, 0x8f6f0332, V1519, 0x0, V1515, V1521, V1515, 0x0, V1516, V1523]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1050, S10, S9, S8, 0xee7, S6, V1075, S4, S3, S2, V1076, S0, V1516, 0x8f6f0332, V1519, 0x0, V1515, V1521, V1515, 0x0, V1516, V1523]

================================

Block 0x14db
[0x14db:0x14de]
---
Predecessors: [0x1469]
Successors: []
---
0x14db PUSH1 0x0
0x14dd DUP1
0x14de REVERT
---
0x14db: V1526 = 0x0
0x14de: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, V1050, S20, 0x1, S18, 0xee7, S16, V1075, S14, S13, 0x1, V1076, S10, V1516, 0x8f6f0332, V1519, 0x0, V1515, V1521, V1515, 0x0, V1516, V1523]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, V1050, S20, 0x1, S18, 0xee7, S16, V1075, S14, S13, 0x1, V1076, S10, V1516, 0x8f6f0332, V1519, 0x0, V1515, V1521, V1515, 0x0, V1516, V1523]

================================

Block 0x14df
[0x14df:0x14e9]
---
Predecessors: [0x1469]
Successors: [0x14ea, 0x14f3]
---
0x14df JUMPDEST
0x14e0 POP
0x14e1 GAS
0x14e2 CALL
0x14e3 ISZERO
0x14e4 DUP1
0x14e5 ISZERO
0x14e6 PUSH2 0x14f3
0x14e9 JUMPI
---
0x14df: JUMPDEST 
0x14e1: V1527 = GAS
0x14e2: V1528 = CALL V1527 V1516 0x0 V1515 V1521 V1515 0x0
0x14e3: V1529 = ISZERO V1528
0x14e5: V1530 = ISZERO V1529
0x14e6: V1531 = 0x14f3
0x14e9: JUMPI 0x14f3 V1530
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, V1050, S20, 0x1, S18, 0xee7, S16, V1075, S14, S13, 0x1, V1076, S10, V1516, 0x8f6f0332, V1519, 0x0, V1515, V1521, V1515, 0x0, V1516, V1523]
Stack pops: 7
Stack additions: [V1529]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, V1050, S20, 0x1, S18, 0xee7, S16, V1075, S14, S13, 0x1, V1076, S10, V1516, 0x8f6f0332, V1519, V1529]

================================

Block 0x14ea
[0x14ea:0x14f2]
---
Predecessors: [0x14df]
Successors: []
---
0x14ea RETURNDATASIZE
0x14eb PUSH1 0x0
0x14ed DUP1
0x14ee RETURNDATACOPY
0x14ef RETURNDATASIZE
0x14f0 PUSH1 0x0
0x14f2 REVERT
---
0x14ea: V1532 = RETURNDATASIZE
0x14eb: V1533 = 0x0
0x14ee: RETURNDATACOPY 0x0 0x0 V1532
0x14ef: V1534 = RETURNDATASIZE
0x14f0: V1535 = 0x0
0x14f2: REVERT 0x0 V1534
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, V1050, V846, 0x1, S12, 0xee7, V128, V1075, V142, V144, 0x1, V1076, S4, S3, 0x8f6f0332, S1, V1529]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, V1050, V846, 0x1, S12, 0xee7, V128, V1075, V142, V144, 0x1, V1076, S4, S3, 0x8f6f0332, S1, V1529]

================================

Block 0x14f3
[0x14f3:0x14ff]
---
Predecessors: [0x14df]
Successors: [0xee7]
---
0x14f3 JUMPDEST
0x14f4 POP
0x14f5 POP
0x14f6 POP
0x14f7 POP
0x14f8 POP
0x14f9 POP
0x14fa POP
0x14fb POP
0x14fc POP
0x14fd POP
0x14fe POP
0x14ff JUMP
---
0x14f3: JUMPDEST 
0x14ff: JUMP 0xee7
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, V1050, V846, 0x1, S12, 0xee7, V128, V1075, V142, V144, 0x1, V1076, S4, S3, 0x8f6f0332, S1, V1529]
Stack pops: 12
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, V138, V140, V142, V144, V1050, V846, 0x1, S12]

================================

Block 0x1500
[0x1500:0x150a]
---
Predecessors: [0x127b]
Successors: [0x150b, 0x1513]
---
0x1500 JUMPDEST
0x1501 PUSH1 0x0
0x1503 DUP1
0x1504 DUP3
0x1505 DUP5
0x1506 GT
0x1507 PUSH2 0x1513
0x150a JUMPI
---
0x1500: JUMPDEST 
0x1501: V1536 = 0x0
0x1506: V1537 = GT S1 V1362
0x1507: V1538 = 0x1513
0x150a: JUMPI 0x1513 V1537
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x1, V1345, 0xd90, S7, S6, V1345, 0x1, 0x0, 0x129e, S1, V1362]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x1, V1345, 0xd90, S7, S6, V1345, 0x1, 0x0, 0x129e, S1, V1362, 0x0, 0x0]

================================

Block 0x150b
[0x150b:0x1512]
---
Predecessors: [0x1500]
Successors: [0x1074]
---
0x150b PUSH1 0x0
0x150d SWAP2
0x150e POP
0x150f PUSH2 0x1074
0x1512 JUMP
---
0x150b: V1539 = 0x0
0x150f: V1540 = 0x1074
0x1512: JUMP 0x1074
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x129e, S3, V1362, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x129e, S3, V1362, 0x0, 0x0]

================================

Block 0x1513
[0x1513:0x1547]
---
Predecessors: [0x1500]
Successors: [0x1548, 0x1550]
---
0x1513 JUMPDEST
0x1514 POP
0x1515 PUSH17 0x100000000000000000000000000000000
0x1527 PUSH16 0xffffffffffffffffffffffffffffffff
0x1538 NOT
0x1539 DUP5
0x153a AND
0x153b DIV
0x153c NUMBER
0x153d PUSH2 0x2710
0x1540 ADD
0x1541 DUP2
0x1542 GT
0x1543 ISZERO
0x1544 PUSH2 0x1550
0x1547 JUMPI
---
0x1513: JUMPDEST 
0x1515: V1541 = 0x100000000000000000000000000000000
0x1527: V1542 = 0xffffffffffffffffffffffffffffffff
0x1538: V1543 = NOT 0xffffffffffffffffffffffffffffffff
0x153a: V1544 = AND S3 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000
0x153b: V1545 = DIV V1544 0x100000000000000000000000000000000
0x153c: V1546 = NUMBER
0x153d: V1547 = 0x2710
0x1540: V1548 = ADD 0x2710 V1546
0x1542: V1549 = GT V1545 V1548
0x1543: V1550 = ISZERO V1549
0x1544: V1551 = 0x1550
0x1547: JUMPI 0x1550 V1550
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x129e, S3, V1362, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1545]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x129e, S3, V1362, 0x0, V1545]

================================

Block 0x1548
[0x1548:0x154f]
---
Predecessors: [0x1513]
Successors: [0x1074]
---
0x1548 PUSH1 0x0
0x154a SWAP2
0x154b POP
0x154c PUSH2 0x1074
0x154f JUMP
---
0x1548: V1552 = 0x0
0x154c: V1553 = 0x1074
0x154f: JUMP 0x1074
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x129e, S3, V1362, 0x0, V1545]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x129e, S3, V1362, 0x0, V1545]

================================

Block 0x1550
[0x1550:0x1559]
---
Predecessors: [0x1513]
Successors: [0x129e]
---
0x1550 JUMPDEST
0x1551 POP
0x1552 PUSH1 0x1
0x1554 SWAP4
0x1555 SWAP3
0x1556 POP
0x1557 POP
0x1558 POP
0x1559 JUMP
---
0x1550: JUMPDEST 
0x1552: V1554 = 0x1
0x1559: JUMP 0x129e
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x129e, S3, V1362, 0x0, V1545]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x1, V1345, 0xd90, S9, S8, V1345, 0x1, 0x0, 0x1]

================================

Block 0x155a
[0x155a:0x1583]
---
Predecessors: [0x133e]
Successors: [0x1584, 0x158c]
---
0x155a JUMPDEST
0x155b PUSH1 0x41
0x155d DUP1
0x155e DUP3
0x155f MUL
0x1560 DUP4
0x1561 ADD
0x1562 PUSH1 0x20
0x1564 DUP2
0x1565 ADD
0x1566 MLOAD
0x1567 PUSH1 0x40
0x1569 DUP3
0x156a ADD
0x156b MLOAD
0x156c SWAP2
0x156d SWAP1
0x156e SWAP3
0x156f ADD
0x1570 MLOAD
0x1571 PUSH1 0x0
0x1573 SWAP3
0x1574 PUSH1 0xff
0x1576 SWAP2
0x1577 SWAP1
0x1578 SWAP2
0x1579 AND
0x157a SWAP2
0x157b PUSH1 0x1b
0x157d DUP4
0x157e EQ
0x157f DUP1
0x1580 PUSH2 0x158c
0x1583 JUMPI
---
0x155a: JUMPDEST 
0x155b: V1555 = 0x41
0x155f: V1556 = MUL 0x0 0x41
0x1561: V1557 = ADD V1028 0x0
0x1562: V1558 = 0x20
0x1565: V1559 = ADD V1557 0x20
0x1566: V1560 = M[V1559]
0x1567: V1561 = 0x40
0x156a: V1562 = ADD V1557 0x40
0x156b: V1563 = M[V1562]
0x156f: V1564 = ADD 0x41 V1557
0x1570: V1565 = M[V1564]
0x1571: V1566 = 0x0
0x1574: V1567 = 0xff
0x1579: V1568 = AND 0xff V1565
0x157b: V1569 = 0x1b
0x157e: V1570 = EQ V1568 0x1b
0x1580: V1571 = 0x158c
0x1583: JUMPI 0x158c V1570
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S17, S16, S15, S14, S13, S12, S11, S10, 0xe59, V128, V1014, S6, V1028, 0x0, 0x134c, S2, V1028, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1568, V1560, V1563, V1570]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S17, S16, S15, S14, S13, S12, S11, S10, 0xe59, V128, V1014, S6, V1028, 0x0, 0x134c, S2, V1028, 0x0, 0x0, V1568, V1560, V1563, V1570]

================================

Block 0x1584
[0x1584:0x158b]
---
Predecessors: [0x155a]
Successors: [0x158c]
---
0x1584 POP
0x1585 DUP3
0x1586 PUSH1 0xff
0x1588 AND
0x1589 PUSH1 0x1c
0x158b EQ
---
0x1586: V1572 = 0xff
0x1588: V1573 = AND 0xff V1568
0x1589: V1574 = 0x1c
0x158b: V1575 = EQ 0x1c V1573
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, 0xe59, V128, V1014, S11, V1028, 0x0, 0x134c, S7, V1028, 0x0, 0x0, V1568, V1560, V1563, V1570]
Stack pops: 4
Stack additions: [S3, S2, S1, V1575]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, 0xe59, V128, V1014, S11, V1028, 0x0, 0x134c, S7, V1028, 0x0, 0x0, V1568, V1560, V1563, V1575]

================================

Block 0x158c
[0x158c:0x1592]
---
Predecessors: [0x155a, 0x1584]
Successors: [0x1593, 0x1597]
---
0x158c JUMPDEST
0x158d ISZERO
0x158e ISZERO
0x158f PUSH2 0x1597
0x1592 JUMPI
---
0x158c: JUMPDEST 
0x158d: V1576 = ISZERO S0
0x158e: V1577 = ISZERO V1576
0x158f: V1578 = 0x1597
0x1592: JUMPI 0x1597 V1577
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, 0xe59, V128, V1014, S11, V1028, 0x0, 0x134c, S7, V1028, 0x0, 0x0, V1568, V1560, V1563, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S22, S21, S20, S19, S18, S17, S16, S15, 0xe59, V128, V1014, S11, V1028, 0x0, 0x134c, S7, V1028, 0x0, 0x0, V1568, V1560, V1563]

================================

Block 0x1593
[0x1593:0x1596]
---
Predecessors: [0x158c]
Successors: []
---
0x1593 PUSH1 0x0
0x1595 DUP1
0x1596 REVERT
---
0x1593: V1579 = 0x0
0x1596: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, 0xe59, V128, V1014, S10, V1028, 0x0, 0x134c, S6, V1028, 0x0, 0x0, V1568, V1560, V1563]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, 0xe59, V128, V1014, S10, V1028, 0x0, 0x134c, S6, V1028, 0x0, 0x0, V1568, V1560, V1563]

================================

Block 0x1597
[0x1597:0x15e7]
---
Predecessors: [0x158c]
Successors: [0x15e8, 0x15f1]
---
0x1597 JUMPDEST
0x1598 PUSH1 0x40
0x159a DUP1
0x159b MLOAD
0x159c PUSH1 0x0
0x159e DUP1
0x159f DUP3
0x15a0 MSTORE
0x15a1 PUSH1 0x20
0x15a3 DUP1
0x15a4 DUP4
0x15a5 ADD
0x15a6 DUP1
0x15a7 DUP6
0x15a8 MSTORE
0x15a9 DUP12
0x15aa SWAP1
0x15ab MSTORE
0x15ac PUSH1 0xff
0x15ae DUP8
0x15af AND
0x15b0 DUP4
0x15b1 DUP6
0x15b2 ADD
0x15b3 MSTORE
0x15b4 PUSH1 0x60
0x15b6 DUP4
0x15b7 ADD
0x15b8 DUP7
0x15b9 SWAP1
0x15ba MSTORE
0x15bb PUSH1 0x80
0x15bd DUP4
0x15be ADD
0x15bf DUP6
0x15c0 SWAP1
0x15c1 MSTORE
0x15c2 SWAP3
0x15c3 MLOAD
0x15c4 PUSH1 0x1
0x15c6 SWAP4
0x15c7 PUSH1 0xa0
0x15c9 DUP1
0x15ca DUP6
0x15cb ADD
0x15cc SWAP5
0x15cd SWAP2
0x15ce SWAP4
0x15cf PUSH1 0x1f
0x15d1 NOT
0x15d2 DUP5
0x15d3 ADD
0x15d4 SWAP4
0x15d5 SWAP3
0x15d6 DUP4
0x15d7 SWAP1
0x15d8 SUB
0x15d9 SWAP1
0x15da SWAP2
0x15db ADD
0x15dc SWAP2
0x15dd SWAP1
0x15de DUP7
0x15df GAS
0x15e0 CALL
0x15e1 ISZERO
0x15e2 DUP1
0x15e3 ISZERO
0x15e4 PUSH2 0x15f1
0x15e7 JUMPI
---
0x1597: JUMPDEST 
0x1598: V1580 = 0x40
0x159b: V1581 = M[0x40]
0x159c: V1582 = 0x0
0x15a0: M[V1581] = 0x0
0x15a1: V1583 = 0x20
0x15a5: V1584 = ADD V1581 0x20
0x15a8: M[0x40] = V1584
0x15ab: M[V1584] = S6
0x15ac: V1585 = 0xff
0x15af: V1586 = AND V1568 0xff
0x15b2: V1587 = ADD 0x40 V1581
0x15b3: M[V1587] = V1586
0x15b4: V1588 = 0x60
0x15b7: V1589 = ADD V1581 0x60
0x15ba: M[V1589] = V1560
0x15bb: V1590 = 0x80
0x15be: V1591 = ADD V1581 0x80
0x15c1: M[V1591] = V1563
0x15c3: V1592 = M[0x40]
0x15c4: V1593 = 0x1
0x15c7: V1594 = 0xa0
0x15cb: V1595 = ADD V1581 0xa0
0x15cf: V1596 = 0x1f
0x15d1: V1597 = NOT 0x1f
0x15d3: V1598 = ADD V1592 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x15d8: V1599 = SUB V1581 V1592
0x15db: V1600 = ADD 0xa0 V1599
0x15df: V1601 = GAS
0x15e0: V1602 = CALL V1601 0x1 0x0 V1592 V1600 V1598 0x20
0x15e1: V1603 = ISZERO V1602
0x15e3: V1604 = ISZERO V1603
0x15e4: V1605 = 0x15f1
0x15e7: JUMPI 0x15f1 V1604
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, 0xe59, V128, V1014, S10, V1028, 0x0, 0x134c, S6, V1028, 0x0, 0x0, V1568, V1560, V1563]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x1, V1595, V1603]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S21, S20, S19, S18, S17, S16, S15, S14, 0xe59, V128, V1014, S10, V1028, 0x0, 0x134c, S6, V1028, 0x0, 0x0, V1568, V1560, V1563, 0x1, V1595, V1603]

================================

Block 0x15e8
[0x15e8:0x15f0]
---
Predecessors: [0x1597]
Successors: []
---
0x15e8 RETURNDATASIZE
0x15e9 PUSH1 0x0
0x15eb DUP1
0x15ec RETURNDATACOPY
0x15ed RETURNDATASIZE
0x15ee PUSH1 0x0
0x15f0 REVERT
---
0x15e8: V1606 = RETURNDATASIZE
0x15e9: V1607 = 0x0
0x15ec: RETURNDATACOPY 0x0 0x0 V1606
0x15ed: V1608 = RETURNDATASIZE
0x15ee: V1609 = 0x0
0x15f0: REVERT 0x0 V1608
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, 0xe59, V128, V1014, S13, V1028, 0x0, 0x134c, S9, V1028, 0x0, 0x0, V1568, V1560, V1563, 0x1, V1595, V1603]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, 0xe59, V128, V1014, S13, V1028, 0x0, 0x134c, S9, V1028, 0x0, 0x0, V1568, V1560, V1563, 0x1, V1595, V1603]

================================

Block 0x15f1
[0x15f1:0x1606]
---
Predecessors: [0x1597]
Successors: [0x134c]
---
0x15f1 JUMPDEST
0x15f2 POP
0x15f3 POP
0x15f4 PUSH1 0x40
0x15f6 MLOAD
0x15f7 PUSH1 0x1f
0x15f9 NOT
0x15fa ADD
0x15fb MLOAD
0x15fc SWAP9
0x15fd SWAP8
0x15fe POP
0x15ff POP
0x1600 POP
0x1601 POP
0x1602 POP
0x1603 POP
0x1604 POP
0x1605 POP
0x1606 JUMP
---
0x15f1: JUMPDEST 
0x15f4: V1610 = 0x40
0x15f6: V1611 = M[0x40]
0x15f7: V1612 = 0x1f
0x15f9: V1613 = NOT 0x1f
0x15fa: V1614 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V1611
0x15fb: V1615 = M[V1614]
0x1606: JUMP 0x134c
---
Entry stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, 0xe59, V128, V1014, S13, V1028, 0x0, 0x134c, S9, V1028, 0x0, 0x0, V1568, V1560, V1563, 0x1, V1595, V1603]
Stack pops: 11
Stack additions: [V1615]
Exit stack: [V11, 0x18f, V128, V131, V133, V135, S24, S23, S22, S21, S20, S19, S18, S17, 0xe59, V128, V1014, S13, V1028, 0x0, V1615]

================================

Block 0x1607
[0x1607:0x1652]
---
Predecessors: []
Successors: []
---
0x1607 STOP
0x1608 ADDMOD
0x1609 MISSING 0xc3
0x160a PUSH26 0xa000000000000000000000000000000000000000000000000000
0x1625 STOP
0x1626 STOP
0x1627 STOP
0x1628 LOG1
0x1629 PUSH6 0x627a7a723058
0x1630 SHA3
0x1631 CALLDATACOPY
0x1632 PUSH16 0xa813df1e30fd2c992dee9d96e776fe2b
0x1643 CALLDATALOAD
0x1644 PUSH4 0x94abdc25
0x1649 MISSING 0x2c
0x164a GAS
0x164b MISSING 0xd7
0x164c SWAP3
0x164d MISSING 0xc3
0x164e MISSING 0xca
0x164f SLOAD
0x1650 TIMESTAMP
0x1651 STOP
0x1652 MISSING 0x29
---
0x1607: STOP 
0x1608: V1616 = ADDMOD S0 S1 S2
0x1609: MISSING 0xc3
0x160a: V1617 = 0xa000000000000000000000000000000000000000000000000000
0x1625: STOP 
0x1626: STOP 
0x1627: STOP 
0x1628: LOG S0 S1 S2
0x1629: V1618 = 0x627a7a723058
0x1630: V1619 = SHA3 0x627a7a723058 S3
0x1631: CALLDATACOPY V1619 S4 S5
0x1632: V1620 = 0xa813df1e30fd2c992dee9d96e776fe2b
0x1643: V1621 = CALLDATALOAD 0xa813df1e30fd2c992dee9d96e776fe2b
0x1644: V1622 = 0x94abdc25
0x1649: MISSING 0x2c
0x164a: V1623 = GAS
0x164b: MISSING 0xd7
0x164d: MISSING 0xc3
0x164e: MISSING 0xca
0x164f: V1624 = S[S0]
0x1650: V1625 = TIMESTAMP
0x1651: STOP 
0x1652: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1616, 0xa000000000000000000000000000000000000000000000000000, 0x94abdc25, V1621, V1623, S3, S1, S2, S0, V1625, V1624]
Exit stack: []

================================

Function 0:
Public function signature: 0x19ab453c
Entry block: 0x87
Exit block: 0xa8
Body: 0x87, 0x8f, 0x93, 0xa8, 0x1c4, 0x1d6, 0x22a

Function 1:
Public function signature: 0x2d0335ab
Entry block: 0xaa
Exit block: 0xcb
Body: 0xaa, 0xb2, 0xb6, 0xcb, 0x26a

Function 2:
Public function signature: 0x5a1db8c4
Entry block: 0xdd
Exit block: 0x18f
Body: 0xa8, 0xdd, 0xe5, 0xe9, 0x18f, 0x285, 0x28f, 0x299, 0x2a0, 0x31a, 0x381, 0x385, 0x390, 0x399, 0x3ab, 0x3af, 0x3b8, 0x40c, 0x473, 0x477, 0x482, 0x48b, 0xee7

Function 3:
Public function signature: 0x99a88ec4
Entry block: 0x104
Exit block: 0xa8
Body: 0xa8, 0x104, 0x10c, 0x110, 0x494, 0x4a2, 0x4ac, 0x4b3, 0x52d, 0x594, 0x598, 0x5a3, 0x5ac, 0x5be, 0x5c2, 0x5cb, 0x61f, 0x672, 0x676, 0x681, 0x68a, 0x6af, 0x6b3, 0x6c7, 0x6cb, 0x6da, 0x6de, 0x6f7, 0x6fb, 0x758, 0x75c, 0x767, 0x770, 0x795, 0x799, 0x7ad, 0x7b1, 0x7c0, 0x7c4, 0x7dd, 0x7e1, 0x835, 0x83e, 0x84d, 0x874, 0x87d, 0x88c, 0x936, 0x93f, 0x94e, 0x962, 0x97b, 0x995, 0x9e9

Function 4:
Public function signature: 0x9be65a60
Entry block: 0x12b
Exit block: 0xa8
Body: 0xa8, 0x12b, 0x133, 0x137, 0x9f1, 0xa51, 0xa55, 0xa60, 0xa69, 0xa7b, 0xa7f, 0xaf1, 0xaf5, 0xb00, 0xb09, 0xb1b, 0xb1f

Function 5:
Public function signature: 0xaacaaf88
Entry block: 0x14c
Exit block: 0x14ea
Body: 0xa8, 0x14c, 0x154, 0x158, 0x18f, 0x48b, 0xb25, 0xb68, 0xb75, 0xbc9, 0xbd5, 0xbdc, 0xc56, 0xc90, 0xc97, 0xd37, 0xd41, 0xd82, 0xd90, 0xd97, 0xdeb, 0xe59, 0xee7, 0xfa8, 0xfb0, 0xfbc, 0xfc1, 0xfc8, 0xfd8, 0xfde, 0xfe5, 0xfe9, 0xff1, 0x1001, 0x1055, 0x1074, 0x107b, 0x1102, 0x110b, 0x1121, 0x117f, 0x1188, 0x119e, 0x1218, 0x1221, 0x1237, 0x126f, 0x127b, 0x129e, 0x12a5, 0x12ac, 0x12cc, 0x12ff, 0x1306, 0x133e, 0x134c, 0x1358, 0x135f, 0x13b3, 0x13ba, 0x13c8, 0x1442, 0x144d, 0x1452, 0x1458, 0x1460, 0x1466, 0x1469, 0x14db, 0x14df, 0x14ea, 0x14f3, 0x1500, 0x150b, 0x1513, 0x1548, 0x1550, 0x155a, 0x1584, 0x158c, 0x1593, 0x1597, 0x15e8, 0x15f1

Function 6:
Public function signature: 0xc9b5ef8e
Entry block: 0x1a3
Exit block: 0xcb
Body: 0xcb, 0x1a3, 0x1ab, 0x1af, 0xef6

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

Function 8:
Private function
Entry block: 0xf08
Exit block: 0xf95
Body: 0xf08, 0xf6b, 0xf7f, 0xf95

