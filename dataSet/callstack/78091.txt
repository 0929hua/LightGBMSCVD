Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x298]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x770b80b6
0x3c EQ
0x3d PUSH2 0x298
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x770b80b6
0x3c: V13 = EQ 0x770b80b6 V11
0x3d: V14 = 0x298
0x40: JUMPI 0x298 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x2a2]
---
0x41 DUP1
0x42 PUSH4 0xd6cd4a02
0x47 EQ
0x48 PUSH2 0x2a2
0x4b JUMPI
---
0x42: V15 = 0xd6cd4a02
0x47: V16 = EQ 0xd6cd4a02 V11
0x48: V17 = 0x2a2
0x4b: JUMPI 0x2a2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x30c]
---
0x4c DUP1
0x4d PUSH4 0xf00e6a2a
0x52 EQ
0x53 PUSH2 0x30c
0x56 JUMPI
---
0x4d: V18 = 0xf00e6a2a
0x52: V19 = EQ 0xf00e6a2a V11
0x53: V20 = 0x30c
0x56: JUMPI 0x30c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x6e]
---
Predecessors: [0x0, 0x4c]
Successors: [0x6f, 0x70]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b PUSH1 0x0
0x5d DUP1
0x5e PUSH1 0x0
0x60 CALLVALUE
0x61 SWAP5
0x62 POP
0x63 PUSH2 0x2710
0x66 DUP6
0x67 LT
0x68 ISZERO
0x69 ISZERO
0x6a ISZERO
0x6b PUSH2 0x70
0x6e JUMPI
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: V22 = 0x0
0x5e: V23 = 0x0
0x60: V24 = CALLVALUE
0x63: V25 = 0x2710
0x67: V26 = LT V24 0x2710
0x68: V27 = ISZERO V26
0x69: V28 = ISZERO V27
0x6a: V29 = ISZERO V28
0x6b: V30 = 0x70
0x6e: JUMPI 0x70 V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x6f
[0x6f:0x6f]
---
Predecessors: [0x57]
Successors: []
---
0x6f INVALID
---
0x6f: INVALID 
---
Entry stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x70
[0x70:0x77]
---
Predecessors: [0x57]
Successors: [0x78]
---
0x70 JUMPDEST
0x71 CALLVALUE
0x72 SWAP4
0x73 POP
0x74 PUSH1 0x0
0x76 SWAP3
0x77 POP
---
0x70: JUMPDEST 
0x71: V31 = CALLVALUE
0x74: V32 = 0x0
---
Entry stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V31, 0x0, S1, S0]
Exit stack: [V11, V24, V31, 0x0, 0x0, 0x0]

================================

Block 0x78
[0x78:0x85]
---
Predecessors: [0x70, 0x193]
Successors: [0x86, 0x1a0]
---
0x78 JUMPDEST
0x79 PUSH1 0x3
0x7b DUP1
0x7c SLOAD
0x7d SWAP1
0x7e POP
0x7f DUP4
0x80 LT
0x81 ISZERO
0x82 PUSH2 0x1a0
0x85 JUMPI
---
0x78: JUMPDEST 
0x79: V33 = 0x3
0x7c: V34 = S[0x3]
0x80: V35 = LT S2 V34
0x81: V36 = ISZERO V35
0x82: V37 = 0x1a0
0x85: JUMPI 0x1a0 V36
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x86
[0x86:0x96]
---
Predecessors: [0x78]
Successors: [0x97, 0x98]
---
0x86 PUSH1 0x2
0x88 PUSH1 0x0
0x8a PUSH1 0x3
0x8c DUP6
0x8d DUP2
0x8e SLOAD
0x8f DUP2
0x90 LT
0x91 ISZERO
0x92 ISZERO
0x93 PUSH2 0x98
0x96 JUMPI
---
0x86: V38 = 0x2
0x88: V39 = 0x0
0x8a: V40 = 0x3
0x8e: V41 = S[0x3]
0x90: V42 = LT S2 V41
0x91: V43 = ISZERO V42
0x92: V44 = ISZERO V43
0x93: V45 = 0x98
0x96: JUMPI 0x98 V44
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x2, 0x0, 0x3, S2]
Exit stack: [V11, V24, S3, S2, S1, S0, 0x2, 0x0, 0x3, S2]

================================

Block 0x97
[0x97:0x97]
---
Predecessors: [0x86]
Successors: []
---
0x97 INVALID
---
0x97: INVALID 
---
Entry stack: [V11, V24, S7, S6, S5, S4, 0x2, 0x0, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S7, S6, S5, S4, 0x2, 0x0, 0x3, S0]

================================

Block 0x98
[0x98:0x10e]
---
Predecessors: [0x86]
Successors: [0x10f, 0x110]
---
0x98 JUMPDEST
0x99 SWAP1
0x9a PUSH1 0x0
0x9c MSTORE
0x9d PUSH1 0x20
0x9f PUSH1 0x0
0xa1 SHA3
0xa2 SWAP1
0xa3 ADD
0xa4 PUSH1 0x0
0xa6 SWAP1
0xa7 SLOAD
0xa8 SWAP1
0xa9 PUSH2 0x100
0xac EXP
0xad SWAP1
0xae DIV
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda AND
0xdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0 AND
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP1
0xf7 DUP2
0xf8 MSTORE
0xf9 PUSH1 0x20
0xfb ADD
0xfc PUSH1 0x0
0xfe SHA3
0xff SLOAD
0x100 SWAP2
0x101 POP
0x102 PUSH2 0x2710
0x105 DUP3
0x106 DUP7
0x107 MUL
0x108 DUP2
0x109 ISZERO
0x10a ISZERO
0x10b PUSH2 0x110
0x10e JUMPI
---
0x98: JUMPDEST 
0x9a: V46 = 0x0
0x9c: M[0x0] = 0x3
0x9d: V47 = 0x20
0x9f: V48 = 0x0
0xa1: V49 = SHA3 0x0 0x20
0xa3: V50 = ADD S0 V49
0xa4: V51 = 0x0
0xa7: V52 = S[V50]
0xa9: V53 = 0x100
0xac: V54 = EXP 0x100 0x0
0xae: V55 = DIV V52 0x1
0xaf: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xc5: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xda: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xdb: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xf2: M[0x0] = V61
0xf3: V62 = 0x20
0xf5: V63 = ADD 0x20 0x0
0xf8: M[0x20] = 0x2
0xf9: V64 = 0x20
0xfb: V65 = ADD 0x20 0x20
0xfc: V66 = 0x0
0xfe: V67 = SHA3 0x0 0x40
0xff: V68 = S[V67]
0x102: V69 = 0x2710
0x107: V70 = MUL V24 V68
0x109: V71 = ISZERO 0x2710
0x10a: V72 = ISZERO 0x0
0x10b: V73 = 0x110
0x10e: JUMPI 0x110 0x1
---
Entry stack: [V11, V24, S7, S6, S5, S4, 0x2, 0x0, 0x3, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, V68, S4, 0x2710, V70]
Exit stack: [V11, V24, S7, S6, V68, S4, 0x2710, V70]

================================

Block 0x10f
[0x10f:0x10f]
---
Predecessors: [0x98]
Successors: []
---
0x10f INVALID
---
0x10f: INVALID 
---
Entry stack: [V11, V24, S5, S4, V68, S2, 0x2710, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S5, S4, V68, S2, 0x2710, V70]

================================

Block 0x110
[0x110:0x125]
---
Predecessors: [0x98]
Successors: [0x126, 0x127]
---
0x110 JUMPDEST
0x111 DIV
0x112 SWAP1
0x113 POP
0x114 DUP1
0x115 DUP5
0x116 SUB
0x117 SWAP4
0x118 POP
0x119 PUSH1 0x3
0x11b DUP4
0x11c DUP2
0x11d SLOAD
0x11e DUP2
0x11f LT
0x120 ISZERO
0x121 ISZERO
0x122 PUSH2 0x127
0x125 JUMPI
---
0x110: JUMPDEST 
0x111: V74 = DIV V70 0x2710
0x116: V75 = SUB S5 V74
0x119: V76 = 0x3
0x11d: V77 = S[0x3]
0x11f: V78 = LT S4 V77
0x120: V79 = ISZERO V78
0x121: V80 = ISZERO V79
0x122: V81 = 0x127
0x125: JUMPI 0x127 V80
---
Entry stack: [V11, V24, S5, S4, V68, S2, 0x2710, V70]
Stack pops: 6
Stack additions: [V75, S4, S3, V74, 0x3, S4]
Exit stack: [V11, V24, V75, S4, V68, V74, 0x3, S4]

================================

Block 0x126
[0x126:0x126]
---
Predecessors: [0x110]
Successors: []
---
0x126 INVALID
---
0x126: INVALID 
---
Entry stack: [V11, V24, V75, S4, V68, V74, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, V75, S4, V68, V74, 0x3, S0]

================================

Block 0x127
[0x127:0x18d]
---
Predecessors: [0x110]
Successors: [0x18e, 0x193]
---
0x127 JUMPDEST
0x128 SWAP1
0x129 PUSH1 0x0
0x12b MSTORE
0x12c PUSH1 0x20
0x12e PUSH1 0x0
0x130 SHA3
0x131 SWAP1
0x132 ADD
0x133 PUSH1 0x0
0x135 SWAP1
0x136 SLOAD
0x137 SWAP1
0x138 PUSH2 0x100
0x13b EXP
0x13c SWAP1
0x13d DIV
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a PUSH2 0x8fc
0x16d DUP3
0x16e SWAP1
0x16f DUP2
0x170 ISZERO
0x171 MUL
0x172 SWAP1
0x173 PUSH1 0x40
0x175 MLOAD
0x176 PUSH1 0x0
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c DUP4
0x17d SUB
0x17e DUP2
0x17f DUP6
0x180 DUP9
0x181 DUP9
0x182 CALL
0x183 SWAP4
0x184 POP
0x185 POP
0x186 POP
0x187 POP
0x188 ISZERO
0x189 ISZERO
0x18a PUSH2 0x193
0x18d JUMPI
---
0x127: JUMPDEST 
0x129: V82 = 0x0
0x12b: M[0x0] = 0x3
0x12c: V83 = 0x20
0x12e: V84 = 0x0
0x130: V85 = SHA3 0x0 0x20
0x132: V86 = ADD S0 V85
0x133: V87 = 0x0
0x136: V88 = S[V86]
0x138: V89 = 0x100
0x13b: V90 = EXP 0x100 0x0
0x13d: V91 = DIV V88 0x1
0x13e: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x154: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x16a: V96 = 0x8fc
0x170: V97 = ISZERO V74
0x171: V98 = MUL V97 0x8fc
0x173: V99 = 0x40
0x175: V100 = M[0x40]
0x176: V101 = 0x0
0x178: V102 = 0x40
0x17a: V103 = M[0x40]
0x17d: V104 = SUB V100 V103
0x182: V105 = CALL V98 V95 V74 V103 V104 V103 0x0
0x188: V106 = ISZERO V105
0x189: V107 = ISZERO V106
0x18a: V108 = 0x193
0x18d: JUMPI 0x193 V107
---
Entry stack: [V11, V24, V75, S4, V68, V74, 0x3, S0]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V11, V24, V75, S4, V68, V74]

================================

Block 0x18e
[0x18e:0x192]
---
Predecessors: [0x127]
Successors: [0x193]
---
0x18e DUP1
0x18f DUP5
0x190 ADD
0x191 SWAP4
0x192 POP
---
0x190: V109 = ADD V75 V74
---
Entry stack: [V11, V24, V75, S2, V68, V74]
Stack pops: 4
Stack additions: [V109, S2, S1, S0]
Exit stack: [V11, V24, V109, S2, V68, V74]

================================

Block 0x193
[0x193:0x19f]
---
Predecessors: [0x127, 0x18e]
Successors: [0x78]
---
0x193 JUMPDEST
0x194 DUP3
0x195 DUP1
0x196 PUSH1 0x1
0x198 ADD
0x199 SWAP4
0x19a POP
0x19b POP
0x19c PUSH2 0x78
0x19f JUMP
---
0x193: JUMPDEST 
0x196: V110 = 0x1
0x198: V111 = ADD 0x1 S2
0x19c: V112 = 0x78
0x19f: JUMP 0x78
---
Entry stack: [V11, V24, S3, S2, V68, V74]
Stack pops: 3
Stack additions: [V111, S1, S0]
Exit stack: [V11, V24, S3, V111, V68, V74]

================================

Block 0x1a0
[0x1a0:0x1fd]
---
Predecessors: [0x78]
Successors: [0x1fe, 0x291]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0x0
0x1a5 SWAP1
0x1a6 SLOAD
0x1a7 SWAP1
0x1a8 PUSH2 0x100
0x1ab EXP
0x1ac SWAP1
0x1ad DIV
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da PUSH2 0x8fc
0x1dd DUP6
0x1de SWAP1
0x1df DUP2
0x1e0 ISZERO
0x1e1 MUL
0x1e2 SWAP1
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 PUSH1 0x0
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec DUP4
0x1ed SUB
0x1ee DUP2
0x1ef DUP6
0x1f0 DUP9
0x1f1 DUP9
0x1f2 CALL
0x1f3 SWAP4
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 ISZERO
0x1f9 ISZERO
0x1fa PUSH2 0x291
0x1fd JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V113 = 0x1
0x1a3: V114 = 0x0
0x1a6: V115 = S[0x1]
0x1a8: V116 = 0x100
0x1ab: V117 = EXP 0x100 0x0
0x1ad: V118 = DIV V115 0x1
0x1ae: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1c4: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1da: V123 = 0x8fc
0x1e0: V124 = ISZERO S3
0x1e1: V125 = MUL V124 0x8fc
0x1e3: V126 = 0x40
0x1e5: V127 = M[0x40]
0x1e6: V128 = 0x0
0x1e8: V129 = 0x40
0x1ea: V130 = M[0x40]
0x1ed: V131 = SUB V127 V130
0x1f2: V132 = CALL V125 V122 S3 V130 V131 V130 0x0
0x1f8: V133 = ISZERO V132
0x1f9: V134 = ISZERO V133
0x1fa: V135 = 0x291
0x1fd: JUMPI 0x291 V134
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x1fe
[0x1fe:0x238]
---
Predecessors: [0x1a0]
Successors: [0x239, 0x290]
---
0x1fe CALLER
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 AND
0x215 PUSH2 0x8fc
0x218 DUP6
0x219 SWAP1
0x21a DUP2
0x21b ISZERO
0x21c MUL
0x21d SWAP1
0x21e PUSH1 0x40
0x220 MLOAD
0x221 PUSH1 0x0
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 DUP4
0x228 SUB
0x229 DUP2
0x22a DUP6
0x22b DUP9
0x22c DUP9
0x22d CALL
0x22e SWAP4
0x22f POP
0x230 POP
0x231 POP
0x232 POP
0x233 ISZERO
0x234 ISZERO
0x235 PUSH2 0x290
0x238 JUMPI
---
0x1fe: V136 = CALLER
0x1ff: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x215: V139 = 0x8fc
0x21b: V140 = ISZERO S3
0x21c: V141 = MUL V140 0x8fc
0x21e: V142 = 0x40
0x220: V143 = M[0x40]
0x221: V144 = 0x0
0x223: V145 = 0x40
0x225: V146 = M[0x40]
0x228: V147 = SUB V143 V146
0x22d: V148 = CALL V141 V138 S3 V146 V147 V146 0x0
0x233: V149 = ISZERO V148
0x234: V150 = ISZERO V149
0x235: V151 = 0x290
0x238: JUMPI 0x290 V150
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x239
[0x239:0x28f]
---
Predecessors: [0x1fe]
Successors: [0x290]
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c SWAP1
0x23d SLOAD
0x23e SWAP1
0x23f PUSH2 0x100
0x242 EXP
0x243 SWAP1
0x244 DIV
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a AND
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 PUSH2 0x8fc
0x274 DUP6
0x275 SWAP1
0x276 DUP2
0x277 ISZERO
0x278 MUL
0x279 SWAP1
0x27a PUSH1 0x40
0x27c MLOAD
0x27d PUSH1 0x0
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 DUP4
0x284 SUB
0x285 DUP2
0x286 DUP6
0x287 DUP9
0x288 DUP9
0x289 CALL
0x28a SWAP4
0x28b POP
0x28c POP
0x28d POP
0x28e POP
0x28f POP
---
0x239: V152 = 0x0
0x23d: V153 = S[0x0]
0x23f: V154 = 0x100
0x242: V155 = EXP 0x100 0x0
0x244: V156 = DIV V153 0x1
0x245: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x25b: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x271: V161 = 0x8fc
0x277: V162 = ISZERO S3
0x278: V163 = MUL V162 0x8fc
0x27a: V164 = 0x40
0x27c: V165 = M[0x40]
0x27d: V166 = 0x0
0x27f: V167 = 0x40
0x281: V168 = M[0x40]
0x284: V169 = SUB V165 V168
0x289: V170 = CALL V163 V160 S3 V168 V169 V168 0x0
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x1fe, 0x239]
Successors: [0x291]
---
0x290 JUMPDEST
---
0x290: JUMPDEST 
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x291
[0x291:0x297]
---
Predecessors: [0x1a0, 0x290]
Successors: []
---
0x291 JUMPDEST
0x292 POP
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 STOP
---
0x291: JUMPDEST 
0x297: STOP 
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0xd]
Successors: [0x361]
---
0x298 JUMPDEST
0x299 PUSH2 0x2a0
0x29c PUSH2 0x361
0x29f JUMP
---
0x298: JUMPDEST 
0x299: V171 = 0x2a0
0x29c: V172 = 0x361
0x29f: JUMP 0x361
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a0]
Exit stack: [V11, 0x2a0]

================================

Block 0x2a0
[0x2a0:0x2a1]
---
Predecessors: [0x49c]
Successors: []
---
0x2a0 JUMPDEST
0x2a1 STOP
---
0x2a0: JUMPDEST 
0x2a1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a2
[0x2a2:0x2a8]
---
Predecessors: [0x41]
Successors: [0x2a9, 0x2ad]
---
0x2a2 JUMPDEST
0x2a3 CALLVALUE
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V173 = CALLVALUE
0x2a4: V174 = ISZERO V173
0x2a5: V175 = 0x2ad
0x2a8: JUMPI 0x2ad V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x2a2]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V176 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ad
[0x2ad:0x2b4]
---
Predecessors: [0x2a2]
Successors: [0x49e]
---
0x2ad JUMPDEST
0x2ae PUSH2 0x2b5
0x2b1 PUSH2 0x49e
0x2b4 JUMP
---
0x2ad: JUMPDEST 
0x2ae: V177 = 0x2b5
0x2b1: V178 = 0x49e
0x2b4: JUMP 0x49e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2b5]
Exit stack: [V11, 0x2b5]

================================

Block 0x2b5
[0x2b5:0x2dc]
---
Predecessors: [0x580]
Successors: [0x2dd]
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba DUP1
0x2bb PUSH1 0x20
0x2bd ADD
0x2be DUP3
0x2bf DUP2
0x2c0 SUB
0x2c1 DUP3
0x2c2 MSTORE
0x2c3 DUP4
0x2c4 DUP2
0x2c5 DUP2
0x2c6 MLOAD
0x2c7 DUP2
0x2c8 MSTORE
0x2c9 PUSH1 0x20
0x2cb ADD
0x2cc SWAP2
0x2cd POP
0x2ce DUP1
0x2cf MLOAD
0x2d0 SWAP1
0x2d1 PUSH1 0x20
0x2d3 ADD
0x2d4 SWAP1
0x2d5 PUSH1 0x20
0x2d7 MUL
0x2d8 DUP1
0x2d9 DUP4
0x2da DUP4
0x2db PUSH1 0x0
---
0x2b5: JUMPDEST 
0x2b6: V179 = 0x40
0x2b8: V180 = M[0x40]
0x2bb: V181 = 0x20
0x2bd: V182 = ADD 0x20 V180
0x2c0: V183 = SUB V182 V180
0x2c2: M[V180] = V183
0x2c6: V184 = M[V314]
0x2c8: M[V182] = V184
0x2c9: V185 = 0x20
0x2cb: V186 = ADD 0x20 V182
0x2cf: V187 = M[V314]
0x2d1: V188 = 0x20
0x2d3: V189 = ADD 0x20 V314
0x2d5: V190 = 0x20
0x2d7: V191 = MUL 0x20 V187
0x2db: V192 = 0x0
---
Entry stack: [V11, V314]
Stack pops: 1
Stack additions: [S0, V180, V180, V186, V189, V191, V191, V186, V189, 0x0]
Exit stack: [V11, V314, V180, V180, V186, V189, V191, V191, V186, V189, 0x0]

================================

Block 0x2dd
[0x2dd:0x2e5]
---
Predecessors: [0x2b5, 0x2e6]
Successors: [0x2e6, 0x2f8]
---
0x2dd JUMPDEST
0x2de DUP4
0x2df DUP2
0x2e0 LT
0x2e1 ISZERO
0x2e2 PUSH2 0x2f8
0x2e5 JUMPI
---
0x2dd: JUMPDEST 
0x2e0: V193 = LT S0 V191
0x2e1: V194 = ISZERO V193
0x2e2: V195 = 0x2f8
0x2e5: JUMPI 0x2f8 V194
---
Entry stack: [V11, V314, V180, V180, V186, V189, V191, V191, V186, V189, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V314, V180, V180, V186, V189, V191, V191, V186, V189, S0]

================================

Block 0x2e6
[0x2e6:0x2f7]
---
Predecessors: [0x2dd]
Successors: [0x2dd]
---
0x2e6 DUP1
0x2e7 DUP3
0x2e8 ADD
0x2e9 MLOAD
0x2ea DUP2
0x2eb DUP5
0x2ec ADD
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 DUP2
0x2f1 ADD
0x2f2 SWAP1
0x2f3 POP
0x2f4 PUSH2 0x2dd
0x2f7 JUMP
---
0x2e8: V196 = ADD V189 S0
0x2e9: V197 = M[V196]
0x2ec: V198 = ADD V186 S0
0x2ed: M[V198] = V197
0x2ee: V199 = 0x20
0x2f1: V200 = ADD S0 0x20
0x2f4: V201 = 0x2dd
0x2f7: JUMP 0x2dd
---
Entry stack: [V11, V314, V180, V180, V186, V189, V191, V191, V186, V189, S0]
Stack pops: 3
Stack additions: [S2, S1, V200]
Exit stack: [V11, V314, V180, V180, V186, V189, V191, V191, V186, V189, V200]

================================

Block 0x2f8
[0x2f8:0x30b]
---
Predecessors: [0x2dd]
Successors: []
---
0x2f8 JUMPDEST
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd SWAP1
0x2fe POP
0x2ff ADD
0x300 SWAP3
0x301 POP
0x302 POP
0x303 POP
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 SWAP2
0x309 SUB
0x30a SWAP1
0x30b RETURN
---
0x2f8: JUMPDEST 
0x2ff: V202 = ADD V191 V186
0x304: V203 = 0x40
0x306: V204 = M[0x40]
0x309: V205 = SUB V202 V204
0x30b: RETURN V204 V205
---
Entry stack: [V11, V314, V180, V180, V186, V189, V191, V191, V186, V189, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x30c
[0x30c:0x312]
---
Predecessors: [0x4c]
Successors: [0x313, 0x317]
---
0x30c JUMPDEST
0x30d CALLVALUE
0x30e ISZERO
0x30f PUSH2 0x317
0x312 JUMPI
---
0x30c: JUMPDEST 
0x30d: V206 = CALLVALUE
0x30e: V207 = ISZERO V206
0x30f: V208 = 0x317
0x312: JUMPI 0x317 V207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x313
[0x313:0x316]
---
Predecessors: [0x30c]
Successors: []
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
---
0x313: V209 = 0x0
0x316: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x317
[0x317:0x31e]
---
Predecessors: [0x30c]
Successors: [0x58a]
---
0x317 JUMPDEST
0x318 PUSH2 0x31f
0x31b PUSH2 0x58a
0x31e JUMP
---
0x317: JUMPDEST 
0x318: V210 = 0x31f
0x31b: V211 = 0x58a
0x31e: JUMP 0x58a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x31f]
Exit stack: [V11, 0x31f]

================================

Block 0x31f
[0x31f:0x360]
---
Predecessors: [0x5e4]
Successors: []
---
0x31f JUMPDEST
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP1
0x324 DUP3
0x325 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33a AND
0x33b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x350 AND
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 SWAP2
0x357 POP
0x358 POP
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d SWAP2
0x35e SUB
0x35f SWAP1
0x360 RETURN
---
0x31f: JUMPDEST 
0x320: V212 = 0x40
0x322: V213 = M[0x40]
0x325: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x33a: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x33b: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x350: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x352: M[V213] = V217
0x353: V218 = 0x20
0x355: V219 = ADD 0x20 V213
0x359: V220 = 0x40
0x35b: V221 = M[0x40]
0x35e: V222 = SUB V219 V221
0x360: RETURN V221 V222
---
Entry stack: [V11, V368]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x361
[0x361:0x3b7]
---
Predecessors: [0x298]
Successors: [0x3b8, 0x3b9]
---
0x361 JUMPDEST
0x362 PUSH1 0x0
0x364 DUP1
0x365 SWAP1
0x366 SLOAD
0x367 SWAP1
0x368 PUSH2 0x100
0x36b EXP
0x36c SWAP1
0x36d DIV
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a CALLER
0x39b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b0 AND
0x3b1 EQ
0x3b2 ISZERO
0x3b3 ISZERO
0x3b4 PUSH2 0x3b9
0x3b7 JUMPI
---
0x361: JUMPDEST 
0x362: V223 = 0x0
0x366: V224 = S[0x0]
0x368: V225 = 0x100
0x36b: V226 = EXP 0x100 0x0
0x36d: V227 = DIV V224 0x1
0x36e: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x384: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x39a: V232 = CALLER
0x39b: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b0: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x3b1: V235 = EQ V234 V231
0x3b2: V236 = ISZERO V235
0x3b3: V237 = ISZERO V236
0x3b4: V238 = 0x3b9
0x3b7: JUMPI 0x3b9 V237
---
Entry stack: [V11, 0x2a0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2a0]

================================

Block 0x3b8
[0x3b8:0x3b8]
---
Predecessors: [0x361]
Successors: []
---
0x3b8 INVALID
---
0x3b8: INVALID 
---
Entry stack: [V11, 0x2a0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2a0]

================================

Block 0x3b9
[0x3b9:0x42d]
---
Predecessors: [0x361]
Successors: [0x42e, 0x49c]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x1
0x3bc PUSH1 0x0
0x3be SWAP1
0x3bf SLOAD
0x3c0 SWAP1
0x3c1 PUSH2 0x100
0x3c4 EXP
0x3c5 SWAP1
0x3c6 DIV
0x3c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dc AND
0x3dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f2 AND
0x3f3 PUSH2 0x8fc
0x3f6 ADDRESS
0x3f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40c AND
0x40d BALANCE
0x40e SWAP1
0x40f DUP2
0x410 ISZERO
0x411 MUL
0x412 SWAP1
0x413 PUSH1 0x40
0x415 MLOAD
0x416 PUSH1 0x0
0x418 PUSH1 0x40
0x41a MLOAD
0x41b DUP1
0x41c DUP4
0x41d SUB
0x41e DUP2
0x41f DUP6
0x420 DUP9
0x421 DUP9
0x422 CALL
0x423 SWAP4
0x424 POP
0x425 POP
0x426 POP
0x427 POP
0x428 ISZERO
0x429 ISZERO
0x42a PUSH2 0x49c
0x42d JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V239 = 0x1
0x3bc: V240 = 0x0
0x3bf: V241 = S[0x1]
0x3c1: V242 = 0x100
0x3c4: V243 = EXP 0x100 0x0
0x3c6: V244 = DIV V241 0x1
0x3c7: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3dd: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x3f3: V249 = 0x8fc
0x3f6: V250 = ADDRESS
0x3f7: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x40d: V253 = BALANCE V252
0x410: V254 = ISZERO V253
0x411: V255 = MUL V254 0x8fc
0x413: V256 = 0x40
0x415: V257 = M[0x40]
0x416: V258 = 0x0
0x418: V259 = 0x40
0x41a: V260 = M[0x40]
0x41d: V261 = SUB V257 V260
0x422: V262 = CALL V255 V248 V253 V260 V261 V260 0x0
0x428: V263 = ISZERO V262
0x429: V264 = ISZERO V263
0x42a: V265 = 0x49c
0x42d: JUMPI 0x49c V264
---
Entry stack: [V11, 0x2a0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2a0]

================================

Block 0x42e
[0x42e:0x49b]
---
Predecessors: [0x3b9]
Successors: [0x49c]
---
0x42e PUSH1 0x0
0x430 DUP1
0x431 SWAP1
0x432 SLOAD
0x433 SWAP1
0x434 PUSH2 0x100
0x437 EXP
0x438 SWAP1
0x439 DIV
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x465 AND
0x466 PUSH2 0x8fc
0x469 ADDRESS
0x46a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47f AND
0x480 BALANCE
0x481 SWAP1
0x482 DUP2
0x483 ISZERO
0x484 MUL
0x485 SWAP1
0x486 PUSH1 0x40
0x488 MLOAD
0x489 PUSH1 0x0
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f DUP4
0x490 SUB
0x491 DUP2
0x492 DUP6
0x493 DUP9
0x494 DUP9
0x495 CALL
0x496 SWAP4
0x497 POP
0x498 POP
0x499 POP
0x49a POP
0x49b POP
---
0x42e: V266 = 0x0
0x432: V267 = S[0x0]
0x434: V268 = 0x100
0x437: V269 = EXP 0x100 0x0
0x439: V270 = DIV V267 0x1
0x43a: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x450: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x465: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x466: V275 = 0x8fc
0x469: V276 = ADDRESS
0x46a: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x480: V279 = BALANCE V278
0x483: V280 = ISZERO V279
0x484: V281 = MUL V280 0x8fc
0x486: V282 = 0x40
0x488: V283 = M[0x40]
0x489: V284 = 0x0
0x48b: V285 = 0x40
0x48d: V286 = M[0x40]
0x490: V287 = SUB V283 V286
0x495: V288 = CALL V281 V274 V279 V286 V287 V286 0x0
---
Entry stack: [V11, 0x2a0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2a0]

================================

Block 0x49c
[0x49c:0x49d]
---
Predecessors: [0x3b9, 0x42e]
Successors: [0x2a0]
---
0x49c JUMPDEST
0x49d JUMP
---
0x49c: JUMPDEST 
0x49d: JUMP 0x2a0
---
Entry stack: [V11, 0x2a0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x49e
[0x49e:0x4a5]
---
Predecessors: [0x2ad]
Successors: [0x60c]
---
0x49e JUMPDEST
0x49f PUSH2 0x4a6
0x4a2 PUSH2 0x60c
0x4a5 JUMP
---
0x49e: JUMPDEST 
0x49f: V289 = 0x4a6
0x4a2: V290 = 0x60c
0x4a5: JUMP 0x60c
---
Entry stack: [V11, 0x2b5]
Stack pops: 0
Stack additions: [0x4a6]
Exit stack: [V11, 0x2b5, 0x4a6]

================================

Block 0x4a6
[0x4a6:0x4fc]
---
Predecessors: [0x60c]
Successors: [0x4fd, 0x4fe]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa SWAP1
0x4ab SLOAD
0x4ac SWAP1
0x4ad PUSH2 0x100
0x4b0 EXP
0x4b1 SWAP1
0x4b2 DIV
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 AND
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df CALLER
0x4e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f5 AND
0x4f6 EQ
0x4f7 ISZERO
0x4f8 ISZERO
0x4f9 PUSH2 0x4fe
0x4fc JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V291 = 0x0
0x4ab: V292 = S[0x0]
0x4ad: V293 = 0x100
0x4b0: V294 = EXP 0x100 0x0
0x4b2: V295 = DIV V292 0x1
0x4b3: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x4c9: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x4df: V300 = CALLER
0x4e0: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f5: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x4f6: V303 = EQ V302 V299
0x4f7: V304 = ISZERO V303
0x4f8: V305 = ISZERO V304
0x4f9: V306 = 0x4fe
0x4fc: JUMPI 0x4fe V305
---
Entry stack: [V11, 0x2b5, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b5, V371]

================================

Block 0x4fd
[0x4fd:0x4fd]
---
Predecessors: [0x4a6]
Successors: []
---
0x4fd INVALID
---
0x4fd: INVALID 
---
Entry stack: [V11, 0x2b5, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b5, V371]

================================

Block 0x4fe
[0x4fe:0x525]
---
Predecessors: [0x4a6]
Successors: [0x526, 0x580]
---
0x4fe JUMPDEST
0x4ff PUSH1 0x3
0x501 DUP1
0x502 SLOAD
0x503 DUP1
0x504 PUSH1 0x20
0x506 MUL
0x507 PUSH1 0x20
0x509 ADD
0x50a PUSH1 0x40
0x50c MLOAD
0x50d SWAP1
0x50e DUP2
0x50f ADD
0x510 PUSH1 0x40
0x512 MSTORE
0x513 DUP1
0x514 SWAP3
0x515 SWAP2
0x516 SWAP1
0x517 DUP2
0x518 DUP2
0x519 MSTORE
0x51a PUSH1 0x20
0x51c ADD
0x51d DUP3
0x51e DUP1
0x51f SLOAD
0x520 DUP1
0x521 ISZERO
0x522 PUSH2 0x580
0x525 JUMPI
---
0x4fe: JUMPDEST 
0x4ff: V307 = 0x3
0x502: V308 = S[0x3]
0x504: V309 = 0x20
0x506: V310 = MUL 0x20 V308
0x507: V311 = 0x20
0x509: V312 = ADD 0x20 V310
0x50a: V313 = 0x40
0x50c: V314 = M[0x40]
0x50f: V315 = ADD V314 V312
0x510: V316 = 0x40
0x512: M[0x40] = V315
0x519: M[V314] = V308
0x51a: V317 = 0x20
0x51c: V318 = ADD 0x20 V314
0x51f: V319 = S[0x3]
0x521: V320 = ISZERO V319
0x522: V321 = 0x580
0x525: JUMPI 0x580 V320
---
Entry stack: [V11, 0x2b5, V371]
Stack pops: 0
Stack additions: [V314, 0x3, V308, V318, 0x3, V319]
Exit stack: [V11, 0x2b5, V371, V314, 0x3, V308, V318, 0x3, V319]

================================

Block 0x526
[0x526:0x535]
---
Predecessors: [0x4fe]
Successors: [0x536]
---
0x526 PUSH1 0x20
0x528 MUL
0x529 DUP3
0x52a ADD
0x52b SWAP2
0x52c SWAP1
0x52d PUSH1 0x0
0x52f MSTORE
0x530 PUSH1 0x20
0x532 PUSH1 0x0
0x534 SHA3
0x535 SWAP1
---
0x526: V322 = 0x20
0x528: V323 = MUL 0x20 V319
0x52a: V324 = ADD V318 V323
0x52d: V325 = 0x0
0x52f: M[0x0] = 0x3
0x530: V326 = 0x20
0x532: V327 = 0x0
0x534: V328 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x2b5, V371, V314, 0x3, V308, V318, 0x3, V319]
Stack pops: 3
Stack additions: [V324, V328, S2]
Exit stack: [V11, 0x2b5, V371, V314, 0x3, V308, V324, V328, V318]

================================

Block 0x536
[0x536:0x57f]
---
Predecessors: [0x526, 0x536]
Successors: [0x536, 0x580]
---
0x536 JUMPDEST
0x537 DUP2
0x538 PUSH1 0x0
0x53a SWAP1
0x53b SLOAD
0x53c SWAP1
0x53d PUSH2 0x100
0x540 EXP
0x541 SWAP1
0x542 DIV
0x543 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x558 AND
0x559 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56e AND
0x56f DUP2
0x570 MSTORE
0x571 PUSH1 0x20
0x573 ADD
0x574 SWAP1
0x575 PUSH1 0x1
0x577 ADD
0x578 SWAP1
0x579 DUP1
0x57a DUP4
0x57b GT
0x57c PUSH2 0x536
0x57f JUMPI
---
0x536: JUMPDEST 
0x538: V329 = 0x0
0x53b: V330 = S[S1]
0x53d: V331 = 0x100
0x540: V332 = EXP 0x100 0x0
0x542: V333 = DIV V330 0x1
0x543: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x558: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x559: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x56e: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x570: M[S0] = V337
0x571: V338 = 0x20
0x573: V339 = ADD 0x20 S0
0x575: V340 = 0x1
0x577: V341 = ADD 0x1 S1
0x57b: V342 = GT V324 V339
0x57c: V343 = 0x536
0x57f: JUMPI 0x536 V342
---
Entry stack: [V11, 0x2b5, V371, V314, 0x3, V308, V324, S1, S0]
Stack pops: 3
Stack additions: [S2, V341, V339]
Exit stack: [V11, 0x2b5, V371, V314, 0x3, V308, V324, V341, V339]

================================

Block 0x580
[0x580:0x589]
---
Predecessors: [0x4fe, 0x536]
Successors: [0x2b5]
---
0x580 JUMPDEST
0x581 POP
0x582 POP
0x583 POP
0x584 POP
0x585 POP
0x586 SWAP1
0x587 POP
0x588 SWAP1
0x589 JUMP
---
0x580: JUMPDEST 
0x589: JUMP 0x2b5
---
Entry stack: [V11, 0x2b5, V371, V314, 0x3, V308, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V314]

================================

Block 0x58a
[0x58a:0x5e2]
---
Predecessors: [0x317]
Successors: [0x5e3, 0x5e4]
---
0x58a JUMPDEST
0x58b PUSH1 0x0
0x58d DUP1
0x58e PUSH1 0x0
0x590 SWAP1
0x591 SLOAD
0x592 SWAP1
0x593 PUSH2 0x100
0x596 EXP
0x597 SWAP1
0x598 DIV
0x599 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ae AND
0x5af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c4 AND
0x5c5 CALLER
0x5c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5db AND
0x5dc EQ
0x5dd ISZERO
0x5de ISZERO
0x5df PUSH2 0x5e4
0x5e2 JUMPI
---
0x58a: JUMPDEST 
0x58b: V344 = 0x0
0x58e: V345 = 0x0
0x591: V346 = S[0x0]
0x593: V347 = 0x100
0x596: V348 = EXP 0x100 0x0
0x598: V349 = DIV V346 0x1
0x599: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x5af: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c4: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x5c5: V354 = CALLER
0x5c6: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x5db: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x5dc: V357 = EQ V356 V353
0x5dd: V358 = ISZERO V357
0x5de: V359 = ISZERO V358
0x5df: V360 = 0x5e4
0x5e2: JUMPI 0x5e4 V359
---
Entry stack: [V11, 0x31f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x31f, 0x0]

================================

Block 0x5e3
[0x5e3:0x5e3]
---
Predecessors: [0x58a]
Successors: []
---
0x5e3 INVALID
---
0x5e3: INVALID 
---
Entry stack: [V11, 0x31f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x31f, 0x0]

================================

Block 0x5e4
[0x5e4:0x60b]
---
Predecessors: [0x58a]
Successors: [0x31f]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x1
0x5e7 PUSH1 0x0
0x5e9 SWAP1
0x5ea SLOAD
0x5eb SWAP1
0x5ec PUSH2 0x100
0x5ef EXP
0x5f0 SWAP1
0x5f1 DIV
0x5f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x607 AND
0x608 SWAP1
0x609 POP
0x60a SWAP1
0x60b JUMP
---
0x5e4: JUMPDEST 
0x5e5: V361 = 0x1
0x5e7: V362 = 0x0
0x5ea: V363 = S[0x1]
0x5ec: V364 = 0x100
0x5ef: V365 = EXP 0x100 0x0
0x5f1: V366 = DIV V363 0x1
0x5f2: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x607: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x60b: JUMP 0x31f
---
Entry stack: [V11, 0x31f, 0x0]
Stack pops: 2
Stack additions: [V368]
Exit stack: [V11, V368]

================================

Block 0x60c
[0x60c:0x61f]
---
Predecessors: [0x49e]
Successors: [0x4a6]
---
0x60c JUMPDEST
0x60d PUSH1 0x20
0x60f PUSH1 0x40
0x611 MLOAD
0x612 SWAP1
0x613 DUP2
0x614 ADD
0x615 PUSH1 0x40
0x617 MSTORE
0x618 DUP1
0x619 PUSH1 0x0
0x61b DUP2
0x61c MSTORE
0x61d POP
0x61e SWAP1
0x61f JUMP
---
0x60c: JUMPDEST 
0x60d: V369 = 0x20
0x60f: V370 = 0x40
0x611: V371 = M[0x40]
0x614: V372 = ADD V371 0x20
0x615: V373 = 0x40
0x617: M[0x40] = V372
0x619: V374 = 0x0
0x61c: M[V371] = 0x0
0x61f: JUMP 0x4a6
---
Entry stack: [V11, 0x2b5, 0x4a6]
Stack pops: 1
Stack additions: [V371]
Exit stack: [V11, 0x2b5, V371]

================================

Block 0x620
[0x620:0x653]
---
Predecessors: []
Successors: []
---
0x620 STOP
0x621 LOG1
0x622 PUSH6 0x627a7a723058
0x629 SHA3
0x62a SIGNEXTEND
0x62b MISSING 0xdb
0x62c MISSING 0xc0
0x62d SIGNEXTEND
0x62e DIV
0x62f SAR
0x630 MISSING 0xad
0x631 PUSH2 0x3ccb
0x634 MISSING 0xc6
0x635 MISSING 0xdf
0x636 PUSH5 0xcd4aabf44a
0x63c MISSING 0x4f
0x63d PUSH22 0x50e674dbbb9ffbcc35bf61cb0029
---
0x620: STOP 
0x621: LOG S0 S1 S2
0x622: V375 = 0x627a7a723058
0x629: V376 = SHA3 0x627a7a723058 S3
0x62a: V377 = SIGNEXTEND V376 S4
0x62b: MISSING 0xdb
0x62c: MISSING 0xc0
0x62d: V378 = SIGNEXTEND S0 S1
0x62e: V379 = DIV V378 S2
0x62f: V380 = SAR V379 S3
0x630: MISSING 0xad
0x631: V381 = 0x3ccb
0x634: MISSING 0xc6
0x635: MISSING 0xdf
0x636: V382 = 0xcd4aabf44a
0x63c: MISSING 0x4f
0x63d: V383 = 0x50e674dbbb9ffbcc35bf61cb0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V377, V380, 0x3ccb, 0xcd4aabf44a, 0x50e674dbbb9ffbcc35bf61cb0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x770b80b6
Entry block: 0x298
Exit block: 0x2a0
Body: 0x298, 0x2a0, 0x361, 0x3b8, 0x3b9, 0x42e, 0x49c

Function 1:
Public function signature: 0xd6cd4a02
Entry block: 0x2a2
Exit block: 0x2f8
Body: 0x2a2, 0x2a9, 0x2ad, 0x2b5, 0x2dd, 0x2e6, 0x2f8, 0x49e, 0x4a6, 0x4fd, 0x4fe, 0x526, 0x536, 0x580, 0x60c

Function 2:
Public function signature: 0xf00e6a2a
Entry block: 0x30c
Exit block: 0x31f
Body: 0x30c, 0x313, 0x317, 0x31f, 0x58a, 0x5e3, 0x5e4

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x126
Body: 0x57, 0x6f, 0x70, 0x78, 0x86, 0x97, 0x98, 0x10f, 0x110, 0x126, 0x127, 0x18e, 0x193, 0x1a0, 0x1fe, 0x239, 0x290, 0x291

