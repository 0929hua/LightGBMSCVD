Block 0x0
[0x0:0x31]
---
Predecessors: []
Successors: [0x32, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0xb547aeda
0x2e EQ
0x2f PUSH1 0x41
0x31 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0xb547aeda
0x2e: V7 = EQ 0xb547aeda V5
0x2f: V8 = 0x41
0x31: JUMPI 0x41 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x32
[0x32:0x3b]
---
Predecessors: [0x0]
Successors: [0x3c, 0x78]
---
0x32 DUP1
0x33 PUSH4 0xb8368615
0x38 EQ
0x39 PUSH1 0x78
0x3b JUMPI
---
0x33: V9 = 0xb8368615
0x38: V10 = EQ 0xb8368615 V5
0x39: V11 = 0x78
0x3b: JUMPI 0x78 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3c
[0x3c:0x3e]
---
Predecessors: [0x32]
Successors: [0x3f]
---
0x3c PUSH1 0x3f
0x3e JUMP
---
0x3c: V12 = 0x3f
0x3e: JUMP 0x3f
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x3f
[0x3f:0x40]
---
Predecessors: [0x3c]
Successors: []
---
0x3f JUMPDEST
0x40 STOP
---
0x3f: JUMPDEST 
0x40: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x0]
Successors: [0xaf]
---
0x41 JUMPDEST
0x42 PUSH1 0x4c
0x44 PUSH1 0x4
0x46 DUP1
0x47 POP
0x48 POP
0x49 PUSH1 0xaf
0x4b JUMP
---
0x41: JUMPDEST 
0x42: V13 = 0x4c
0x44: V14 = 0x4
0x49: V15 = 0xaf
0x4b: JUMP 0xaf
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x4c]
Exit stack: [V5, 0x4c]

================================

Block 0x4c
[0x4c:0x77]
---
Predecessors: [0xd6]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x40
0x4f MLOAD
0x50 DUP1
0x51 DUP3
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 DUP2
0x69 MSTORE
0x6a PUSH1 0x20
0x6c ADD
0x6d SWAP2
0x6e POP
0x6f POP
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 SWAP2
0x75 SUB
0x76 SWAP1
0x77 RETURN
---
0x4c: JUMPDEST 
0x4d: V16 = 0x40
0x4f: V17 = M[0x40]
0x52: V18 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V19 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x69: M[V17] = V19
0x6a: V20 = 0x20
0x6c: V21 = ADD 0x20 V17
0x70: V22 = 0x40
0x72: V23 = M[0x40]
0x75: V24 = SUB V21 V23
0x77: RETURN V23 V24
---
Entry stack: [V5, V47]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x32]
Successors: [0xd9]
---
0x78 JUMPDEST
0x79 PUSH1 0x83
0x7b PUSH1 0x4
0x7d DUP1
0x7e POP
0x7f POP
0x80 PUSH1 0xd9
0x82 JUMP
---
0x78: JUMPDEST 
0x79: V25 = 0x83
0x7b: V26 = 0x4
0x80: V27 = 0xd9
0x82: JUMP 0xd9
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x83]
Exit stack: [V5, 0x83]

================================

Block 0x83
[0x83:0xae]
---
Predecessors: [0xe2]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x40
0x86 MLOAD
0x87 DUP1
0x88 DUP3
0x89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e AND
0x9f DUP2
0xa0 MSTORE
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP2
0xa5 POP
0xa6 POP
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab SWAP2
0xac SUB
0xad SWAP1
0xae RETURN
---
0x83: JUMPDEST 
0x84: V28 = 0x40
0x86: V29 = M[0x40]
0x89: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xa0: M[V29] = 0x0
0xa1: V32 = 0x20
0xa3: V33 = ADD 0x20 V29
0xa7: V34 = 0x40
0xa9: V35 = M[0x40]
0xac: V36 = SUB V33 V35
0xae: RETURN V35 V36
---
Entry stack: [V5, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0xaf
[0xaf:0xd5]
---
Predecessors: [0x41]
Successors: [0xd6]
---
0xaf JUMPDEST
0xb0 PUSH1 0x0
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 PUSH2 0x472
0xb8 DUP1
0xb9 PUSH2 0xe5
0xbc DUP4
0xbd CODECOPY
0xbe ADD
0xbf DUP1
0xc0 SWAP1
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 PUSH1 0x0
0xcb CREATE
0xcc SWAP1
0xcd POP
0xce DUP1
0xcf POP
0xd0 DUP1
0xd1 SWAP1
0xd2 POP
0xd3 PUSH1 0xd6
0xd5 JUMP
---
0xaf: JUMPDEST 
0xb0: V37 = 0x0
0xb2: V38 = 0x40
0xb4: V39 = M[0x40]
0xb5: V40 = 0x472
0xb9: V41 = 0xe5
0xbd: CODECOPY V39 0xe5 0x472
0xbe: V42 = ADD 0x472 V39
0xc2: V43 = 0x40
0xc4: V44 = M[0x40]
0xc7: V45 = SUB V42 V44
0xc9: V46 = 0x0
0xcb: V47 = CREATE 0x0 V44 V45
0xd3: V48 = 0xd6
0xd5: JUMP 0xd6
---
Entry stack: [V5, 0x4c]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V5, 0x4c, V47]

================================

Block 0xd6
[0xd6:0xd8]
---
Predecessors: [0xaf]
Successors: [0x4c]
---
0xd6 JUMPDEST
0xd7 SWAP1
0xd8 JUMP
---
0xd6: JUMPDEST 
0xd8: JUMP 0x4c
---
Entry stack: [V5, 0x4c, V47]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V5, V47]

================================

Block 0xd9
[0xd9:0xe1]
---
Predecessors: [0x78]
Successors: [0xe2]
---
0xd9 JUMPDEST
0xda PUSH1 0x0
0xdc DUP1
0xdd SWAP1
0xde POP
0xdf PUSH1 0xe2
0xe1 JUMP
---
0xd9: JUMPDEST 
0xda: V49 = 0x0
0xdf: V50 = 0xe2
0xe1: JUMP 0xe2
---
Entry stack: [V5, 0x83]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V5, 0x83, 0x0]

================================

Block 0xe2
[0xe2:0xe4]
---
Predecessors: [0xd9]
Successors: [0x83]
---
0xe2 JUMPDEST
0xe3 SWAP1
0xe4 JUMP
---
0xe2: JUMPDEST 
0xe4: JUMP 0x83
---
Entry stack: [V5, 0x83, 0x0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V5, 0x0]

================================

Block 0xe5
[0xe5:0xe9]
---
Predecessors: []
Successors: [0xea]
---
0xe5 PUSH1 0x60
0xe7 PUSH1 0x40
0xe9 MSTORE
---
0xe5: V51 = 0x60
0xe7: V52 = 0x40
0xe9: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xea
[0xea:0x115]
---
Predecessors: [0xe5]
Successors: [0x116]
---
0xea JUMPDEST
0xeb CALLER
0xec PUSH1 0x0
0xee PUSH1 0x0
0xf0 PUSH2 0x100
0xf3 EXP
0xf4 DUP2
0xf5 SLOAD
0xf6 DUP2
0xf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c MUL
0x10d NOT
0x10e AND
0x10f SWAP1
0x110 DUP4
0x111 MUL
0x112 OR
0x113 SWAP1
0x114 SSTORE
0x115 POP
---
0xea: JUMPDEST 
0xeb: V53 = CALLER
0xec: V54 = 0x0
0xee: V55 = 0x0
0xf0: V56 = 0x100
0xf3: V57 = EXP 0x100 0x0
0xf5: V58 = S[0x0]
0xf7: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c: V60 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x10d: V61 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V62 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V58
0x111: V63 = MUL V53 0x1
0x112: V64 = OR V63 V62
0x114: S[0x0] = V64
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x116
[0x116:0x12e]
---
Predecessors: [0xea]
Successors: [0x12f]
---
0x116 JUMPDEST
0x117 PUSH2 0x433
0x11a DUP1
0x11b PUSH2 0x3f
0x11e PUSH1 0x0
0x120 CODECOPY
0x121 PUSH1 0x0
0x123 RETURN
0x124 PUSH1 0x60
0x126 PUSH1 0x40
0x128 MSTORE
0x129 CALLDATASIZE
0x12a ISZERO
0x12b PUSH2 0x69
0x12e JUMPI
---
0x116: JUMPDEST 
0x117: V65 = 0x433
0x11b: V66 = 0x3f
0x11e: V67 = 0x0
0x120: CODECOPY 0x0 0x3f 0x433
0x121: V68 = 0x0
0x123: RETURN 0x0 0x433
0x124: V69 = 0x60
0x126: V70 = 0x40
0x128: M[0x40] = 0x60
0x129: V71 = CALLDATASIZE
0x12a: V72 = ISZERO V71
0x12b: V73 = 0x69
0x12e: THROWI V72
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12f
[0x12f:0x15c]
---
Predecessors: [0x116]
Successors: [0x15d]
---
0x12f PUSH1 0x0
0x131 CALLDATALOAD
0x132 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x150 SWAP1
0x151 DIV
0x152 DUP1
0x153 PUSH4 0x232a3060
0x158 EQ
0x159 PUSH2 0xd8
0x15c JUMPI
---
0x12f: V74 = 0x0
0x131: V75 = CALLDATALOAD 0x0
0x132: V76 = 0x100000000000000000000000000000000000000000000000000000000
0x151: V77 = DIV V75 0x100000000000000000000000000000000000000000000000000000000
0x153: V78 = 0x232a3060
0x158: V79 = EQ 0x232a3060 V77
0x159: V80 = 0xd8
0x15c: THROWI V79
---
Entry stack: []
Stack pops: 0
Stack additions: [V77]
Exit stack: [V77]

================================

Block 0x15d
[0x15d:0x167]
---
Predecessors: [0x12f]
Successors: [0x168]
---
0x15d DUP1
0x15e PUSH4 0x6c7113e4
0x163 EQ
0x164 PUSH2 0xf0
0x167 JUMPI
---
0x15e: V81 = 0x6c7113e4
0x163: V82 = EQ 0x6c7113e4 V77
0x164: V83 = 0xf0
0x167: THROWI V82
---
Entry stack: [V77]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V77]

================================

Block 0x168
[0x168:0x172]
---
Predecessors: [0x15d]
Successors: [0x173]
---
0x168 DUP1
0x169 PUSH4 0x9d735286
0x16e EQ
0x16f PUSH2 0x129
0x172 JUMPI
---
0x169: V84 = 0x9d735286
0x16e: V85 = EQ 0x9d735286 V77
0x16f: V86 = 0x129
0x172: THROWI V85
---
Entry stack: [V77]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V77]

================================

Block 0x173
[0x173:0x17d]
---
Predecessors: [0x168]
Successors: [0x17e]
---
0x173 DUP1
0x174 PUSH4 0xa6f9dae1
0x179 EQ
0x17a PUSH2 0x138
0x17d JUMPI
---
0x174: V87 = 0xa6f9dae1
0x179: V88 = EQ 0xa6f9dae1 V77
0x17a: V89 = 0x138
0x17d: THROWI V88
---
Entry stack: [V77]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V77]

================================

Block 0x17e
[0x17e:0x188]
---
Predecessors: [0x173]
Successors: [0x189]
---
0x17e DUP1
0x17f PUSH4 0xfa89401a
0x184 EQ
0x185 PUSH2 0x150
0x188 JUMPI
---
0x17f: V90 = 0xfa89401a
0x184: V91 = EQ 0xfa89401a V77
0x185: V92 = 0x150
0x188: THROWI V91
---
Entry stack: [V77]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V77]

================================

Block 0x189
[0x189:0x190]
---
Predecessors: [0x17e]
Successors: [0x191]
---
0x189 PUSH2 0x69
0x18c JUMP
0x18d JUMPDEST
0x18e PUSH2 0xd6
---
0x189: V93 = 0x69
0x18c: THROW 
0x18d: JUMPDEST 
0x18e: V94 = 0xd6
---
Entry stack: [V77]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: []

================================

Block 0x191
[0x191:0x1f6]
---
Predecessors: [0x189]
Successors: []
---
0x191 JUMPDEST
0x192 NUMBER
0x193 PUSH32 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x1b4 CALLER
0x1b5 CALLVALUE
0x1b6 TIMESTAMP
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba DUP1
0x1bb DUP5
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 DUP4
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x20
0x1dc ADD
0x1dd DUP3
0x1de DUP2
0x1df MSTORE
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 SWAP4
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec SWAP2
0x1ed SUB
0x1ee SWAP1
0x1ef LOG2
0x1f0 PUSH2 0xd3
0x1f3 PUSH2 0x2f3
0x1f6 JUMP
---
0x191: JUMPDEST 
0x192: V95 = NUMBER
0x193: V96 = 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x1b4: V97 = CALLER
0x1b5: V98 = CALLVALUE
0x1b6: V99 = TIMESTAMP
0x1b7: V100 = 0x40
0x1b9: V101 = M[0x40]
0x1bc: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1d3: M[V101] = V103
0x1d4: V104 = 0x20
0x1d6: V105 = ADD 0x20 V101
0x1d9: M[V105] = V98
0x1da: V106 = 0x20
0x1dc: V107 = ADD 0x20 V105
0x1df: M[V107] = V99
0x1e0: V108 = 0x20
0x1e2: V109 = ADD 0x20 V107
0x1e8: V110 = 0x40
0x1ea: V111 = M[0x40]
0x1ed: V112 = SUB V109 V111
0x1ef: LOG V111 V112 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db V95
0x1f0: V113 = 0xd3
0x1f3: V114 = 0x2f3
0x1f6: THROW 
---
Entry stack: [0xd6]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [0xd6, 0xd3]

================================

Block 0x1f7
[0x1f7:0x1f7]
---
Predecessors: [0x1f8]
Successors: [0x1f8]
---
0x1f7 JUMPDEST
---
0x1f7: JUMPDEST 
---
Entry stack: [0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [0xfd]

================================

Block 0x1f8
[0x1f8:0x220]
---
Predecessors: [0x1f7]
Successors: [0x1f7]
---
0x1f8 JUMPDEST
0x1f9 JUMP
0x1fa JUMPDEST
0x1fb STOP
0x1fc JUMPDEST
0x1fd PUSH2 0xee
0x200 PUSH1 0x4
0x202 DUP1
0x203 DUP1
0x204 CALLDATALOAD
0x205 SWAP1
0x206 PUSH1 0x20
0x208 ADD
0x209 SWAP1
0x20a SWAP2
0x20b SWAP1
0x20c POP
0x20d POP
0x20e PUSH2 0x168
0x211 JUMP
0x212 JUMPDEST
0x213 STOP
0x214 JUMPDEST
0x215 PUSH2 0xfd
0x218 PUSH1 0x4
0x21a DUP1
0x21b POP
0x21c POP
0x21d PUSH2 0x1f7
0x220 JUMP
---
0x1f8: JUMPDEST 
0x1f9: THROW 
0x1fa: JUMPDEST 
0x1fb: STOP 
0x1fc: JUMPDEST 
0x1fd: V115 = 0xee
0x200: V116 = 0x4
0x204: V117 = CALLDATALOAD 0x4
0x206: V118 = 0x20
0x208: V119 = ADD 0x20 0x4
0x20e: V120 = 0x168
0x211: THROW 
0x212: JUMPDEST 
0x213: STOP 
0x214: JUMPDEST 
0x215: V121 = 0xfd
0x218: V122 = 0x4
0x21d: V123 = 0x1f7
0x220: JUMP 0x1f7
---
Entry stack: [0xfd]
Stack pops: 12
Stack additions: [0xfd]
Exit stack: []

================================

Block 0x221
[0x221:0x2e2]
---
Predecessors: []
Successors: [0x2e3]
---
0x221 JUMPDEST
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 DUP3
0x227 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23c AND
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 SWAP2
0x243 POP
0x244 POP
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 SWAP2
0x24a SUB
0x24b SWAP1
0x24c RETURN
0x24d JUMPDEST
0x24e PUSH2 0x136
0x251 PUSH1 0x4
0x253 DUP1
0x254 POP
0x255 POP
0x256 PUSH2 0x2f3
0x259 JUMP
0x25a JUMPDEST
0x25b STOP
0x25c JUMPDEST
0x25d PUSH2 0x14e
0x260 PUSH1 0x4
0x262 DUP1
0x263 DUP1
0x264 CALLDATALOAD
0x265 SWAP1
0x266 PUSH1 0x20
0x268 ADD
0x269 SWAP1
0x26a SWAP2
0x26b SWAP1
0x26c POP
0x26d POP
0x26e PUSH2 0x264
0x271 JUMP
0x272 JUMPDEST
0x273 STOP
0x274 JUMPDEST
0x275 PUSH2 0x166
0x278 PUSH1 0x4
0x27a DUP1
0x27b DUP1
0x27c CALLDATALOAD
0x27d SWAP1
0x27e PUSH1 0x20
0x280 ADD
0x281 SWAP1
0x282 SWAP2
0x283 SWAP1
0x284 POP
0x285 POP
0x286 PUSH2 0x362
0x289 JUMP
0x28a JUMPDEST
0x28b STOP
0x28c JUMPDEST
0x28d PUSH1 0x0
0x28f PUSH1 0x0
0x291 SWAP1
0x292 SLOAD
0x293 SWAP1
0x294 PUSH2 0x100
0x297 EXP
0x298 SWAP1
0x299 DIV
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 CALLER
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd EQ
0x2de ISZERO
0x2df PUSH2 0x1ee
0x2e2 JUMPI
---
0x221: JUMPDEST 
0x222: V124 = 0x40
0x224: V125 = M[0x40]
0x227: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x23c: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x23e: M[V125] = V127
0x23f: V128 = 0x20
0x241: V129 = ADD 0x20 V125
0x245: V130 = 0x40
0x247: V131 = M[0x40]
0x24a: V132 = SUB V129 V131
0x24c: RETURN V131 V132
0x24d: JUMPDEST 
0x24e: V133 = 0x136
0x251: V134 = 0x4
0x256: V135 = 0x2f3
0x259: THROW 
0x25a: JUMPDEST 
0x25b: STOP 
0x25c: JUMPDEST 
0x25d: V136 = 0x14e
0x260: V137 = 0x4
0x264: V138 = CALLDATALOAD 0x4
0x266: V139 = 0x20
0x268: V140 = ADD 0x20 0x4
0x26e: V141 = 0x264
0x271: THROW 
0x272: JUMPDEST 
0x273: STOP 
0x274: JUMPDEST 
0x275: V142 = 0x166
0x278: V143 = 0x4
0x27c: V144 = CALLDATALOAD 0x4
0x27e: V145 = 0x20
0x280: V146 = ADD 0x20 0x4
0x286: V147 = 0x362
0x289: THROW 
0x28a: JUMPDEST 
0x28b: STOP 
0x28c: JUMPDEST 
0x28d: V148 = 0x0
0x28f: V149 = 0x0
0x292: V150 = S[0x0]
0x294: V151 = 0x100
0x297: V152 = EXP 0x100 0x0
0x299: V153 = DIV V150 0x1
0x29a: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2b0: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2c6: V158 = CALLER
0x2c7: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2dd: V161 = EQ V160 V157
0x2de: V162 = ISZERO V161
0x2df: V163 = 0x1ee
0x2e2: THROWI V162
---
Entry stack: []
Stack pops: 76
Stack additions: []
Exit stack: []

================================

Block 0x2e3
[0x2e3:0x317]
---
Predecessors: [0x221]
Successors: [0x318]
---
0x2e3 DUP1
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0x0
0x2e8 PUSH2 0x100
0x2eb EXP
0x2ec DUP2
0x2ed SLOAD
0x2ee DUP2
0x2ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x304 MUL
0x305 NOT
0x306 AND
0x307 SWAP1
0x308 DUP4
0x309 MUL
0x30a OR
0x30b SWAP1
0x30c SSTORE
0x30d POP
0x30e PUSH2 0x1f3
0x311 JUMP
0x312 JUMPDEST
0x313 PUSH2 0x2
0x316 JUMP
0x317 JUMPDEST
---
0x2e4: V164 = 0x1
0x2e6: V165 = 0x0
0x2e8: V166 = 0x100
0x2eb: V167 = EXP 0x100 0x0
0x2ed: V168 = S[0x1]
0x2ef: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x304: V170 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x305: V171 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x306: V172 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V168
0x309: V173 = MUL S0 0x1
0x30a: V174 = OR V173 V172
0x30c: S[0x1] = V174
0x30e: V175 = 0x1f3
0x311: THROW 
0x312: JUMPDEST 
0x313: V176 = 0x2
0x316: THROW 
0x317: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x318
[0x318:0x373]
---
Predecessors: [0x2e3]
Successors: [0x374]
---
0x318 JUMPDEST
0x319 POP
0x31a JUMP
0x31b JUMPDEST
0x31c PUSH1 0x0
0x31e PUSH1 0x0
0x320 PUSH1 0x0
0x322 SWAP1
0x323 SLOAD
0x324 SWAP1
0x325 PUSH2 0x100
0x328 EXP
0x329 SWAP1
0x32a DIV
0x32b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x340 AND
0x341 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x356 AND
0x357 CALLER
0x358 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36d AND
0x36e EQ
0x36f ISZERO
0x370 PUSH2 0x25b
0x373 JUMPI
---
0x318: JUMPDEST 
0x31a: JUMP S1
0x31b: JUMPDEST 
0x31c: V177 = 0x0
0x31e: V178 = 0x0
0x320: V179 = 0x0
0x323: V180 = S[0x0]
0x325: V181 = 0x100
0x328: V182 = EXP 0x100 0x0
0x32a: V183 = DIV V180 0x1
0x32b: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x340: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x341: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x356: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x357: V188 = CALLER
0x358: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x36e: V191 = EQ V190 V187
0x36f: V192 = ISZERO V191
0x370: V193 = 0x25b
0x373: THROWI V192
---
Entry stack: []
Stack pops: 4
Stack additions: [0x0]
Exit stack: []

================================

Block 0x374
[0x374:0x384]
---
Predecessors: [0x318]
Successors: [0x385]
---
0x374 DUP1
0x375 SWAP1
0x376 POP
0x377 PUSH2 0x261
0x37a JUMP
0x37b PUSH2 0x260
0x37e JUMP
0x37f JUMPDEST
0x380 PUSH2 0x2
0x383 JUMP
0x384 JUMPDEST
---
0x377: V194 = 0x261
0x37a: THROW 
0x37b: V195 = 0x260
0x37e: THROW 
0x37f: JUMPDEST 
0x380: V196 = 0x2
0x383: THROW 
0x384: JUMPDEST 
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x385
[0x385:0x3de]
---
Predecessors: [0x374]
Successors: [0x3df]
---
0x385 JUMPDEST
0x386 SWAP1
0x387 JUMP
0x388 JUMPDEST
0x389 PUSH1 0x0
0x38b PUSH1 0x0
0x38d SWAP1
0x38e SLOAD
0x38f SWAP1
0x390 PUSH2 0x100
0x393 EXP
0x394 SWAP1
0x395 DIV
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 CALLER
0x3c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d8 AND
0x3d9 EQ
0x3da ISZERO
0x3db PUSH2 0x2ea
0x3de JUMPI
---
0x385: JUMPDEST 
0x387: JUMP S1
0x388: JUMPDEST 
0x389: V197 = 0x0
0x38b: V198 = 0x0
0x38e: V199 = S[0x0]
0x390: V200 = 0x100
0x393: V201 = EXP 0x100 0x0
0x395: V202 = DIV V199 0x1
0x396: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x3ac: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3c2: V207 = CALLER
0x3c3: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3d9: V210 = EQ V209 V206
0x3da: V211 = ISZERO V210
0x3db: V212 = 0x2ea
0x3de: THROWI V211
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x3df
[0x3df:0x413]
---
Predecessors: [0x385]
Successors: [0x414]
---
0x3df DUP1
0x3e0 PUSH1 0x0
0x3e2 PUSH1 0x0
0x3e4 PUSH2 0x100
0x3e7 EXP
0x3e8 DUP2
0x3e9 SLOAD
0x3ea DUP2
0x3eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x400 MUL
0x401 NOT
0x402 AND
0x403 SWAP1
0x404 DUP4
0x405 MUL
0x406 OR
0x407 SWAP1
0x408 SSTORE
0x409 POP
0x40a PUSH2 0x2ef
0x40d JUMP
0x40e JUMPDEST
0x40f PUSH2 0x2
0x412 JUMP
0x413 JUMPDEST
---
0x3e0: V213 = 0x0
0x3e2: V214 = 0x0
0x3e4: V215 = 0x100
0x3e7: V216 = EXP 0x100 0x0
0x3e9: V217 = S[0x0]
0x3eb: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x400: V219 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x401: V220 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x402: V221 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V217
0x405: V222 = MUL S0 0x1
0x406: V223 = OR V222 V221
0x408: S[0x0] = V223
0x40a: V224 = 0x2ef
0x40d: THROW 
0x40e: JUMPDEST 
0x40f: V225 = 0x2
0x412: THROW 
0x413: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x414
[0x414:0x483]
---
Predecessors: [0x3df]
Successors: [0x484]
---
0x414 JUMPDEST
0x415 POP
0x416 JUMP
0x417 JUMPDEST
0x418 PUSH1 0x1
0x41a PUSH1 0x0
0x41c SWAP1
0x41d SLOAD
0x41e SWAP1
0x41f PUSH2 0x100
0x422 EXP
0x423 SWAP1
0x424 DIV
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 PUSH1 0x0
0x453 ADDRESS
0x454 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x469 AND
0x46a BALANCE
0x46b PUSH1 0x40
0x46d MLOAD
0x46e DUP1
0x46f SWAP1
0x470 POP
0x471 PUSH1 0x0
0x473 PUSH1 0x40
0x475 MLOAD
0x476 DUP1
0x477 DUP4
0x478 SUB
0x479 DUP2
0x47a DUP6
0x47b DUP9
0x47c DUP9
0x47d CALL
0x47e SWAP4
0x47f POP
0x480 POP
0x481 POP
0x482 POP
0x483 POP
---
0x414: JUMPDEST 
0x416: JUMP S1
0x417: JUMPDEST 
0x418: V226 = 0x1
0x41a: V227 = 0x0
0x41d: V228 = S[0x1]
0x41f: V229 = 0x100
0x422: V230 = EXP 0x100 0x0
0x424: V231 = DIV V228 0x1
0x425: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x43b: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x451: V236 = 0x0
0x453: V237 = ADDRESS
0x454: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x469: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x46a: V240 = BALANCE V239
0x46b: V241 = 0x40
0x46d: V242 = M[0x40]
0x471: V243 = 0x0
0x473: V244 = 0x40
0x475: V245 = M[0x40]
0x478: V246 = SUB V242 V245
0x47d: V247 = CALL 0x0 V235 V240 V245 V246 V245 0x0
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x484
[0x484:0x4dc]
---
Predecessors: [0x414]
Successors: [0x4dd]
---
0x484 JUMPDEST
0x485 JUMP
0x486 JUMPDEST
0x487 PUSH1 0x0
0x489 PUSH1 0x0
0x48b SWAP1
0x48c SLOAD
0x48d SWAP1
0x48e PUSH2 0x100
0x491 EXP
0x492 SWAP1
0x493 DIV
0x494 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a9 AND
0x4aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bf AND
0x4c0 CALLER
0x4c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d6 AND
0x4d7 EQ
0x4d8 ISZERO
0x4d9 PUSH2 0x42a
0x4dc JUMPI
---
0x484: JUMPDEST 
0x485: JUMP S0
0x486: JUMPDEST 
0x487: V248 = 0x0
0x489: V249 = 0x0
0x48c: V250 = S[0x0]
0x48e: V251 = 0x100
0x491: V252 = EXP 0x100 0x0
0x493: V253 = DIV V250 0x1
0x494: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x4aa: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4c0: V258 = CALLER
0x4c1: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x4d7: V261 = EQ V260 V257
0x4d8: V262 = ISZERO V261
0x4d9: V263 = 0x42a
0x4dc: THROWI V262
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x4dd
[0x4dd:0x553]
---
Predecessors: [0x484]
Successors: [0x554]
---
0x4dd PUSH32 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x4fe ADDRESS
0x4ff TIMESTAMP
0x500 PUSH1 0x40
0x502 MLOAD
0x503 DUP1
0x504 DUP4
0x505 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51a AND
0x51b DUP2
0x51c MSTORE
0x51d PUSH1 0x20
0x51f ADD
0x520 DUP3
0x521 DUP2
0x522 MSTORE
0x523 PUSH1 0x20
0x525 ADD
0x526 SWAP3
0x527 POP
0x528 POP
0x529 POP
0x52a PUSH1 0x40
0x52c MLOAD
0x52d DUP1
0x52e SWAP2
0x52f SUB
0x530 SWAP1
0x531 LOG1
0x532 DUP1
0x533 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x548 AND
0x549 SELFDESTRUCT
0x54a PUSH2 0x42f
0x54d JUMP
0x54e JUMPDEST
0x54f PUSH2 0x2
0x552 JUMP
0x553 JUMPDEST
---
0x4dd: V264 = 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x4fe: V265 = ADDRESS
0x4ff: V266 = TIMESTAMP
0x500: V267 = 0x40
0x502: V268 = M[0x40]
0x505: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x51c: M[V268] = V270
0x51d: V271 = 0x20
0x51f: V272 = ADD 0x20 V268
0x522: M[V272] = V266
0x523: V273 = 0x20
0x525: V274 = ADD 0x20 V272
0x52a: V275 = 0x40
0x52c: V276 = M[0x40]
0x52f: V277 = SUB V274 V276
0x531: LOG V276 V277 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x533: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x548: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x549: SELFDESTRUCT V279
0x54a: V280 = 0x42f
0x54d: THROW 
0x54e: JUMPDEST 
0x54f: V281 = 0x2
0x552: THROW 
0x553: JUMPDEST 
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x554
[0x554:0x556]
---
Predecessors: [0x4dd]
Successors: []
Has unresolved jump.
---
0x554 JUMPDEST
0x555 POP
0x556 JUMP
---
0x554: JUMPDEST 
0x556: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xb547aeda
Entry block: 0x41
Exit block: 0x4c
Body: 0x41, 0x4c, 0xaf, 0xd6

Function 1:
Public function signature: 0xb8368615
Entry block: 0x78
Exit block: 0x83
Body: 0x78, 0x83, 0xd9, 0xe2

Function 2:
Public fallback function
Entry block: 0x3c
Exit block: 0x3f
Body: 0x3c, 0x3f

