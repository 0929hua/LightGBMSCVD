Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb61d27f6
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb61d27f6
0x3c: V13 = EQ 0xb61d27f6 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xe1]
---
0x41 DUP1
0x42 PUSH4 0xf77c4791
0x47 EQ
0x48 PUSH2 0xe1
0x4b JUMPI
---
0x42: V15 = 0xf77c4791
0x47: V16 = EQ 0xf77c4791 V11
0x48: V17 = 0xe1
0x4b: JUMPI 0xe1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x55]
---
Predecessors: [0xd]
Successors: [0x56, 0x5a]
---
0x4e JUMPDEST
0x4f CALLVALUE
0x50 DUP1
0x51 ISZERO
0x52 PUSH2 0x5a
0x55 JUMPI
---
0x4e: JUMPDEST 
0x4f: V18 = CALLVALUE
0x51: V19 = ISZERO V18
0x52: V20 = 0x5a
0x55: JUMPI 0x5a V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V18]
Exit stack: [V11, V18]

================================

Block 0x56
[0x56:0x59]
---
Predecessors: [0x4e]
Successors: []
---
0x56 PUSH1 0x0
0x58 DUP1
0x59 REVERT
---
0x56: V21 = 0x0
0x59: REVERT 0x0 0x0
---
Entry stack: [V11, V18]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V18]

================================

Block 0x5a
[0x5a:0xde]
---
Predecessors: [0x4e]
Successors: [0x138]
---
0x5a JUMPDEST
0x5b POP
0x5c PUSH2 0xdf
0x5f PUSH1 0x4
0x61 DUP1
0x62 CALLDATASIZE
0x63 SUB
0x64 DUP2
0x65 ADD
0x66 SWAP1
0x67 DUP1
0x68 DUP1
0x69 CALLDATALOAD
0x6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f AND
0x80 SWAP1
0x81 PUSH1 0x20
0x83 ADD
0x84 SWAP1
0x85 SWAP3
0x86 SWAP2
0x87 SWAP1
0x88 DUP1
0x89 CALLDATALOAD
0x8a SWAP1
0x8b PUSH1 0x20
0x8d ADD
0x8e SWAP1
0x8f SWAP3
0x90 SWAP2
0x91 SWAP1
0x92 DUP1
0x93 CALLDATALOAD
0x94 SWAP1
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP1
0x99 DUP3
0x9a ADD
0x9b DUP1
0x9c CALLDATALOAD
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 DUP1
0xa3 DUP1
0xa4 PUSH1 0x1f
0xa6 ADD
0xa7 PUSH1 0x20
0xa9 DUP1
0xaa SWAP2
0xab DIV
0xac MUL
0xad PUSH1 0x20
0xaf ADD
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 SWAP1
0xb4 DUP2
0xb5 ADD
0xb6 PUSH1 0x40
0xb8 MSTORE
0xb9 DUP1
0xba SWAP4
0xbb SWAP3
0xbc SWAP2
0xbd SWAP1
0xbe DUP2
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 DUP4
0xc5 DUP4
0xc6 DUP1
0xc7 DUP3
0xc8 DUP5
0xc9 CALLDATACOPY
0xca DUP3
0xcb ADD
0xcc SWAP2
0xcd POP
0xce POP
0xcf POP
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 SWAP2
0xd4 SWAP3
0xd5 SWAP2
0xd6 SWAP3
0xd7 SWAP1
0xd8 POP
0xd9 POP
0xda POP
0xdb PUSH2 0x138
0xde JUMP
---
0x5a: JUMPDEST 
0x5c: V22 = 0xdf
0x5f: V23 = 0x4
0x62: V24 = CALLDATASIZE
0x63: V25 = SUB V24 0x4
0x65: V26 = ADD 0x4 V25
0x69: V27 = CALLDATALOAD 0x4
0x6a: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x81: V30 = 0x20
0x83: V31 = ADD 0x20 0x4
0x89: V32 = CALLDATALOAD 0x24
0x8b: V33 = 0x20
0x8d: V34 = ADD 0x20 0x24
0x93: V35 = CALLDATALOAD 0x44
0x95: V36 = 0x20
0x97: V37 = ADD 0x20 0x44
0x9a: V38 = ADD 0x4 V35
0x9c: V39 = CALLDATALOAD V38
0x9e: V40 = 0x20
0xa0: V41 = ADD 0x20 V38
0xa4: V42 = 0x1f
0xa6: V43 = ADD 0x1f V39
0xa7: V44 = 0x20
0xab: V45 = DIV V43 0x20
0xac: V46 = MUL V45 0x20
0xad: V47 = 0x20
0xaf: V48 = ADD 0x20 V46
0xb0: V49 = 0x40
0xb2: V50 = M[0x40]
0xb5: V51 = ADD V50 V48
0xb6: V52 = 0x40
0xb8: M[0x40] = V51
0xc0: M[V50] = V39
0xc1: V53 = 0x20
0xc3: V54 = ADD 0x20 V50
0xc9: CALLDATACOPY V54 V41 V39
0xcb: V55 = ADD V54 V39
0xdb: V56 = 0x138
0xde: JUMP 0x138
---
Entry stack: [V11, V18]
Stack pops: 1
Stack additions: [0xdf, V29, V32, V50]
Exit stack: [V11, 0xdf, V29, V32, V50]

================================

Block 0xdf
[0xdf:0xe0]
---
Predecessors: [0x356]
Successors: []
---
0xdf JUMPDEST
0xe0 STOP
---
0xdf: JUMPDEST 
0xe0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0x41]
Successors: [0xe9, 0xed]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe1: JUMPDEST 
0xe2: V57 = CALLVALUE
0xe4: V58 = ISZERO V57
0xe5: V59 = 0xed
0xe8: JUMPI 0xed V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe1]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V60 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xed
[0xed:0xf5]
---
Predecessors: [0xe1]
Successors: [0x371]
---
0xed JUMPDEST
0xee POP
0xef PUSH2 0xf6
0xf2 PUSH2 0x371
0xf5 JUMP
---
0xed: JUMPDEST 
0xef: V61 = 0xf6
0xf2: V62 = 0x371
0xf5: JUMP 0x371
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V11, 0xf6]

================================

Block 0xf6
[0xf6:0x137]
---
Predecessors: [0x371]
Successors: []
---
0xf6 JUMPDEST
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa DUP1
0xfb DUP3
0xfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111 AND
0x112 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127 AND
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP2
0x12e POP
0x12f POP
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 SWAP2
0x135 SUB
0x136 SWAP1
0x137 RETURN
---
0xf6: JUMPDEST 
0xf7: V63 = 0x40
0xf9: V64 = M[0x40]
0xfc: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x111: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x112: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x127: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x129: M[V64] = V68
0x12a: V69 = 0x20
0x12c: V70 = ADD 0x20 V64
0x130: V71 = 0x40
0x132: V72 = M[0x40]
0x135: V73 = SUB V70 V72
0x137: RETURN V72 V73
---
Entry stack: [V11, 0xf6, V224]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf6]

================================

Block 0x138
[0x138:0x232]
---
Predecessors: [0x5a]
Successors: [0x233]
---
0x138 JUMPDEST
0x139 PUSH1 0x0
0x13b DUP1
0x13c SWAP1
0x13d SLOAD
0x13e SWAP1
0x13f PUSH2 0x100
0x142 EXP
0x143 SWAP1
0x144 DIV
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 PUSH4 0xe9b1a792
0x176 CALLER
0x177 DUP6
0x178 DUP6
0x179 DUP6
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP6
0x17e PUSH4 0xffffffff
0x183 AND
0x184 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1a2 MUL
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x4
0x1a7 ADD
0x1a8 DUP1
0x1a9 DUP6
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d5 AND
0x1d6 DUP2
0x1d7 MSTORE
0x1d8 PUSH1 0x20
0x1da ADD
0x1db DUP5
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 AND
0x208 DUP2
0x209 MSTORE
0x20a PUSH1 0x20
0x20c ADD
0x20d DUP4
0x20e DUP2
0x20f MSTORE
0x210 PUSH1 0x20
0x212 ADD
0x213 DUP1
0x214 PUSH1 0x20
0x216 ADD
0x217 DUP3
0x218 DUP2
0x219 SUB
0x21a DUP3
0x21b MSTORE
0x21c DUP4
0x21d DUP2
0x21e DUP2
0x21f MLOAD
0x220 DUP2
0x221 MSTORE
0x222 PUSH1 0x20
0x224 ADD
0x225 SWAP2
0x226 POP
0x227 DUP1
0x228 MLOAD
0x229 SWAP1
0x22a PUSH1 0x20
0x22c ADD
0x22d SWAP1
0x22e DUP1
0x22f DUP4
0x230 DUP4
0x231 PUSH1 0x0
---
0x138: JUMPDEST 
0x139: V74 = 0x0
0x13d: V75 = S[0x0]
0x13f: V76 = 0x100
0x142: V77 = EXP 0x100 0x0
0x144: V78 = DIV V75 0x1
0x145: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x15b: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x171: V83 = 0xe9b1a792
0x176: V84 = CALLER
0x17a: V85 = 0x40
0x17c: V86 = M[0x40]
0x17e: V87 = 0xffffffff
0x183: V88 = AND 0xffffffff 0xe9b1a792
0x184: V89 = 0x100000000000000000000000000000000000000000000000000000000
0x1a2: V90 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe9b1a792
0x1a4: M[V86] = 0xe9b1a79200000000000000000000000000000000000000000000000000000000
0x1a5: V91 = 0x4
0x1a7: V92 = ADD 0x4 V86
0x1aa: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1c0: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1d7: M[V92] = V96
0x1d8: V97 = 0x20
0x1da: V98 = ADD 0x20 V92
0x1dc: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x1f2: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x209: M[V98] = V102
0x20a: V103 = 0x20
0x20c: V104 = ADD 0x20 V98
0x20f: M[V104] = V32
0x210: V105 = 0x20
0x212: V106 = ADD 0x20 V104
0x214: V107 = 0x20
0x216: V108 = ADD 0x20 V106
0x219: V109 = SUB V108 V92
0x21b: M[V106] = V109
0x21f: V110 = M[V50]
0x221: M[V108] = V110
0x222: V111 = 0x20
0x224: V112 = ADD 0x20 V108
0x228: V113 = M[V50]
0x22a: V114 = 0x20
0x22c: V115 = ADD 0x20 V50
0x231: V116 = 0x0
---
Entry stack: [V11, 0xdf, V29, V32, V50]
Stack pops: 3
Stack additions: [S2, S1, S0, V82, 0xe9b1a792, V84, S2, S1, S0, V92, V106, V112, V115, V113, V113, V112, V115, 0x0]
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V112, V115, V113, V113, V112, V115, 0x0]

================================

Block 0x233
[0x233:0x23b]
---
Predecessors: [0x138, 0x23c]
Successors: [0x23c, 0x24e]
---
0x233 JUMPDEST
0x234 DUP4
0x235 DUP2
0x236 LT
0x237 ISZERO
0x238 PUSH2 0x24e
0x23b JUMPI
---
0x233: JUMPDEST 
0x236: V117 = LT S0 V113
0x237: V118 = ISZERO V117
0x238: V119 = 0x24e
0x23b: JUMPI 0x24e V118
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V112, V115, V113, V113, V112, V115, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V112, V115, V113, V113, V112, V115, S0]

================================

Block 0x23c
[0x23c:0x24d]
---
Predecessors: [0x233]
Successors: [0x233]
---
0x23c DUP1
0x23d DUP3
0x23e ADD
0x23f MLOAD
0x240 DUP2
0x241 DUP5
0x242 ADD
0x243 MSTORE
0x244 PUSH1 0x20
0x246 DUP2
0x247 ADD
0x248 SWAP1
0x249 POP
0x24a PUSH2 0x233
0x24d JUMP
---
0x23e: V120 = ADD V115 S0
0x23f: V121 = M[V120]
0x242: V122 = ADD V112 S0
0x243: M[V122] = V121
0x244: V123 = 0x20
0x247: V124 = ADD S0 0x20
0x24a: V125 = 0x233
0x24d: JUMP 0x233
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V112, V115, V113, V113, V112, V115, S0]
Stack pops: 3
Stack additions: [S2, S1, V124]
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V112, V115, V113, V113, V112, V115, V124]

================================

Block 0x24e
[0x24e:0x261]
---
Predecessors: [0x233]
Successors: [0x262, 0x27b]
---
0x24e JUMPDEST
0x24f POP
0x250 POP
0x251 POP
0x252 POP
0x253 SWAP1
0x254 POP
0x255 SWAP1
0x256 DUP2
0x257 ADD
0x258 SWAP1
0x259 PUSH1 0x1f
0x25b AND
0x25c DUP1
0x25d ISZERO
0x25e PUSH2 0x27b
0x261 JUMPI
---
0x24e: JUMPDEST 
0x257: V126 = ADD V113 V112
0x259: V127 = 0x1f
0x25b: V128 = AND 0x1f V113
0x25d: V129 = ISZERO V128
0x25e: V130 = 0x27b
0x261: JUMPI 0x27b V129
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V112, V115, V113, V113, V112, V115, S0]
Stack pops: 7
Stack additions: [V126, V128]
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V126, V128]

================================

Block 0x262
[0x262:0x27a]
---
Predecessors: [0x24e]
Successors: [0x27b]
---
0x262 DUP1
0x263 DUP3
0x264 SUB
0x265 DUP1
0x266 MLOAD
0x267 PUSH1 0x1
0x269 DUP4
0x26a PUSH1 0x20
0x26c SUB
0x26d PUSH2 0x100
0x270 EXP
0x271 SUB
0x272 NOT
0x273 AND
0x274 DUP2
0x275 MSTORE
0x276 PUSH1 0x20
0x278 ADD
0x279 SWAP2
0x27a POP
---
0x264: V131 = SUB V126 V128
0x266: V132 = M[V131]
0x267: V133 = 0x1
0x26a: V134 = 0x20
0x26c: V135 = SUB 0x20 V128
0x26d: V136 = 0x100
0x270: V137 = EXP 0x100 V135
0x271: V138 = SUB V137 0x1
0x272: V139 = NOT V138
0x273: V140 = AND V139 V132
0x275: M[V131] = V140
0x276: V141 = 0x20
0x278: V142 = ADD 0x20 V131
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V126, V128]
Stack pops: 2
Stack additions: [V142, S0]
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, V142, V128]

================================

Block 0x27b
[0x27b:0x298]
---
Predecessors: [0x24e, 0x262]
Successors: [0x299, 0x29d]
---
0x27b JUMPDEST
0x27c POP
0x27d SWAP6
0x27e POP
0x27f POP
0x280 POP
0x281 POP
0x282 POP
0x283 POP
0x284 PUSH1 0x20
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a DUP4
0x28b SUB
0x28c DUP2
0x28d PUSH1 0x0
0x28f DUP8
0x290 DUP1
0x291 EXTCODESIZE
0x292 ISZERO
0x293 DUP1
0x294 ISZERO
0x295 PUSH2 0x29d
0x298 JUMPI
---
0x27b: JUMPDEST 
0x284: V143 = 0x20
0x286: V144 = 0x40
0x288: V145 = M[0x40]
0x28b: V146 = SUB S1 V145
0x28d: V147 = 0x0
0x291: V148 = EXTCODESIZE V82
0x292: V149 = ISZERO V148
0x294: V150 = ISZERO V149
0x295: V151 = 0x29d
0x298: JUMPI 0x29d V150
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, V84, V29, V32, V50, V92, V106, S1, V128]
Stack pops: 10
Stack additions: [S9, S8, S1, 0x20, V145, V146, V145, 0x0, S9, V149]
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S1, 0x20, V145, V146, V145, 0x0, V82, V149]

================================

Block 0x299
[0x299:0x29c]
---
Predecessors: [0x27b]
Successors: []
---
0x299 PUSH1 0x0
0x29b DUP1
0x29c REVERT
---
0x299: V152 = 0x0
0x29c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S7, 0x20, V145, V146, V145, 0x0, V82, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S7, 0x20, V145, V146, V145, 0x0, V82, V149]

================================

Block 0x29d
[0x29d:0x2a7]
---
Predecessors: [0x27b]
Successors: [0x2a8, 0x2b1]
---
0x29d JUMPDEST
0x29e POP
0x29f GAS
0x2a0 CALL
0x2a1 ISZERO
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2b1
0x2a7 JUMPI
---
0x29d: JUMPDEST 
0x29f: V153 = GAS
0x2a0: V154 = CALL V153 V82 0x0 V145 V146 V145 0x20
0x2a1: V155 = ISZERO V154
0x2a3: V156 = ISZERO V155
0x2a4: V157 = 0x2b1
0x2a7: JUMPI 0x2b1 V156
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S7, 0x20, V145, V146, V145, 0x0, V82, V149]
Stack pops: 7
Stack additions: [V155]
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S7, V155]

================================

Block 0x2a8
[0x2a8:0x2b0]
---
Predecessors: [0x29d]
Successors: []
---
0x2a8 RETURNDATASIZE
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac RETURNDATACOPY
0x2ad RETURNDATASIZE
0x2ae PUSH1 0x0
0x2b0 REVERT
---
0x2a8: V158 = RETURNDATASIZE
0x2a9: V159 = 0x0
0x2ac: RETURNDATACOPY 0x0 0x0 V158
0x2ad: V160 = RETURNDATASIZE
0x2ae: V161 = 0x0
0x2b0: REVERT 0x0 V160
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S1, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S1, V155]

================================

Block 0x2b1
[0x2b1:0x2c2]
---
Predecessors: [0x29d]
Successors: [0x2c3, 0x2c7]
---
0x2b1 JUMPDEST
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 RETURNDATASIZE
0x2ba PUSH1 0x20
0x2bc DUP2
0x2bd LT
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2b1: JUMPDEST 
0x2b6: V162 = 0x40
0x2b8: V163 = M[0x40]
0x2b9: V164 = RETURNDATASIZE
0x2ba: V165 = 0x20
0x2bd: V166 = LT V164 0x20
0x2be: V167 = ISZERO V166
0x2bf: V168 = 0x2c7
0x2c2: JUMPI 0x2c7 V167
---
Entry stack: [V11, 0xdf, V29, V32, V50, V82, 0xe9b1a792, S1, V155]
Stack pops: 4
Stack additions: [V163, V164]
Exit stack: [V11, 0xdf, V29, V32, V50, V163, V164]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2b1]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V169 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V29, V32, V50, V163, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V29, V32, V50, V163, V164]

================================

Block 0x2c7
[0x2c7:0x2de]
---
Predecessors: [0x2b1]
Successors: [0x2df, 0x2e3]
---
0x2c7 JUMPDEST
0x2c8 DUP2
0x2c9 ADD
0x2ca SWAP1
0x2cb DUP1
0x2cc DUP1
0x2cd MLOAD
0x2ce SWAP1
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 SWAP1
0x2d3 SWAP3
0x2d4 SWAP2
0x2d5 SWAP1
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 ISZERO
0x2da ISZERO
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x2c7: JUMPDEST 
0x2c9: V170 = ADD V163 V164
0x2cd: V171 = M[V163]
0x2cf: V172 = 0x20
0x2d1: V173 = ADD 0x20 V163
0x2d9: V174 = ISZERO V171
0x2da: V175 = ISZERO V174
0x2db: V176 = 0x2e3
0x2de: JUMPI 0x2e3 V175
---
Entry stack: [V11, 0xdf, V29, V32, V50, V163, V164]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xdf, V29, V32, V50]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x2c7]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V177 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdf, V29, V32, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdf, V29, V32, V50]

================================

Block 0x2e3
[0x2e3:0x30d]
---
Predecessors: [0x2c7]
Successors: [0x30e]
---
0x2e3 JUMPDEST
0x2e4 DUP3
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb DUP3
0x2fc DUP3
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 DUP1
0x301 DUP3
0x302 DUP1
0x303 MLOAD
0x304 SWAP1
0x305 PUSH1 0x20
0x307 ADD
0x308 SWAP1
0x309 DUP1
0x30a DUP4
0x30b DUP4
0x30c PUSH1 0x0
---
0x2e3: JUMPDEST 
0x2e5: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x2fd: V180 = 0x40
0x2ff: V181 = M[0x40]
0x303: V182 = M[V50]
0x305: V183 = 0x20
0x307: V184 = ADD 0x20 V50
0x30c: V185 = 0x0
---
Entry stack: [V11, 0xdf, V29, V32, V50]
Stack pops: 3
Stack additions: [S2, S1, S0, V179, S1, S0, V181, V181, V184, V182, V182, V181, V184, 0x0]
Exit stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V181, V184, V182, V182, V181, V184, 0x0]

================================

Block 0x30e
[0x30e:0x316]
---
Predecessors: [0x2e3, 0x317]
Successors: [0x317, 0x329]
---
0x30e JUMPDEST
0x30f DUP4
0x310 DUP2
0x311 LT
0x312 ISZERO
0x313 PUSH2 0x329
0x316 JUMPI
---
0x30e: JUMPDEST 
0x311: V186 = LT S0 V182
0x312: V187 = ISZERO V186
0x313: V188 = 0x329
0x316: JUMPI 0x329 V187
---
Entry stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V181, V184, V182, V182, V181, V184, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V181, V184, V182, V182, V181, V184, S0]

================================

Block 0x317
[0x317:0x328]
---
Predecessors: [0x30e]
Successors: [0x30e]
---
0x317 DUP1
0x318 DUP3
0x319 ADD
0x31a MLOAD
0x31b DUP2
0x31c DUP5
0x31d ADD
0x31e MSTORE
0x31f PUSH1 0x20
0x321 DUP2
0x322 ADD
0x323 SWAP1
0x324 POP
0x325 PUSH2 0x30e
0x328 JUMP
---
0x319: V189 = ADD V184 S0
0x31a: V190 = M[V189]
0x31d: V191 = ADD V181 S0
0x31e: M[V191] = V190
0x31f: V192 = 0x20
0x322: V193 = ADD S0 0x20
0x325: V194 = 0x30e
0x328: JUMP 0x30e
---
Entry stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V181, V184, V182, V182, V181, V184, S0]
Stack pops: 3
Stack additions: [S2, S1, V193]
Exit stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V181, V184, V182, V182, V181, V184, V193]

================================

Block 0x329
[0x329:0x33c]
---
Predecessors: [0x30e]
Successors: [0x33d, 0x356]
---
0x329 JUMPDEST
0x32a POP
0x32b POP
0x32c POP
0x32d POP
0x32e SWAP1
0x32f POP
0x330 SWAP1
0x331 DUP2
0x332 ADD
0x333 SWAP1
0x334 PUSH1 0x1f
0x336 AND
0x337 DUP1
0x338 ISZERO
0x339 PUSH2 0x356
0x33c JUMPI
---
0x329: JUMPDEST 
0x332: V195 = ADD V182 V181
0x334: V196 = 0x1f
0x336: V197 = AND 0x1f V182
0x338: V198 = ISZERO V197
0x339: V199 = 0x356
0x33c: JUMPI 0x356 V198
---
Entry stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V181, V184, V182, V182, V181, V184, S0]
Stack pops: 7
Stack additions: [V195, V197]
Exit stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V195, V197]

================================

Block 0x33d
[0x33d:0x355]
---
Predecessors: [0x329]
Successors: [0x356]
---
0x33d DUP1
0x33e DUP3
0x33f SUB
0x340 DUP1
0x341 MLOAD
0x342 PUSH1 0x1
0x344 DUP4
0x345 PUSH1 0x20
0x347 SUB
0x348 PUSH2 0x100
0x34b EXP
0x34c SUB
0x34d NOT
0x34e AND
0x34f DUP2
0x350 MSTORE
0x351 PUSH1 0x20
0x353 ADD
0x354 SWAP2
0x355 POP
---
0x33f: V200 = SUB V195 V197
0x341: V201 = M[V200]
0x342: V202 = 0x1
0x345: V203 = 0x20
0x347: V204 = SUB 0x20 V197
0x348: V205 = 0x100
0x34b: V206 = EXP 0x100 V204
0x34c: V207 = SUB V206 0x1
0x34d: V208 = NOT V207
0x34e: V209 = AND V208 V201
0x350: M[V200] = V209
0x351: V210 = 0x20
0x353: V211 = ADD 0x20 V200
---
Entry stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V195, V197]
Stack pops: 2
Stack additions: [V211, S0]
Exit stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, V211, V197]

================================

Block 0x356
[0x356:0x370]
---
Predecessors: [0x329, 0x33d]
Successors: [0xdf]
---
0x356 JUMPDEST
0x357 POP
0x358 SWAP2
0x359 POP
0x35a POP
0x35b PUSH1 0x0
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP1
0x361 DUP4
0x362 SUB
0x363 DUP2
0x364 DUP6
0x365 DUP8
0x366 GAS
0x367 CALL
0x368 SWAP3
0x369 POP
0x36a POP
0x36b POP
0x36c POP
0x36d POP
0x36e POP
0x36f POP
0x370 JUMP
---
0x356: JUMPDEST 
0x35b: V212 = 0x0
0x35d: V213 = 0x40
0x35f: V214 = M[0x40]
0x362: V215 = SUB S1 V214
0x366: V216 = GAS
0x367: V217 = CALL V216 V179 V32 V214 V215 V214 0x0
0x370: JUMP 0xdf
---
Entry stack: [V11, 0xdf, V29, V32, V50, V179, V32, V50, V181, S1, V197]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x371
[0x371:0x395]
---
Predecessors: [0xed]
Successors: [0xf6]
---
0x371 JUMPDEST
0x372 PUSH1 0x0
0x374 DUP1
0x375 SWAP1
0x376 SLOAD
0x377 SWAP1
0x378 PUSH2 0x100
0x37b EXP
0x37c SWAP1
0x37d DIV
0x37e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x393 AND
0x394 DUP2
0x395 JUMP
---
0x371: JUMPDEST 
0x372: V218 = 0x0
0x376: V219 = S[0x0]
0x378: V220 = 0x100
0x37b: V221 = EXP 0x100 0x0
0x37d: V222 = DIV V219 0x1
0x37e: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x393: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x395: JUMP 0xf6
---
Entry stack: [V11, 0xf6]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V11, 0xf6, V224]

================================

Block 0x396
[0x396:0x3c5]
---
Predecessors: []
Successors: []
---
0x396 STOP
0x397 LOG1
0x398 PUSH6 0x627a7a723058
0x39f SHA3
0x3a0 OR
0x3a1 LOG0
0x3a2 MISSING 0xed
0x3a3 MISSING 0xb8
0x3a4 MISSING 0x2e
0x3a5 DELEGATECALL
0x3a6 MISSING 0xd9
0x3a7 MISSING 0x1f
0x3a8 SWAP13
0x3a9 MISSING 0xf9
0x3aa MISSING 0x4f
0x3ab MISSING 0xf8
0x3ac POP
0x3ad MISSING 0xce
0x3ae ADDRESS
0x3af ADDRESS
0x3b0 CALLVALUE
0x3b1 PC
0x3b2 PUSH19 0xe36734e2615cf63bf65775e40c0029
---
0x396: STOP 
0x397: LOG S0 S1 S2
0x398: V225 = 0x627a7a723058
0x39f: V226 = SHA3 0x627a7a723058 S3
0x3a0: V227 = OR V226 S4
0x3a1: LOG V227 S5
0x3a2: MISSING 0xed
0x3a3: MISSING 0xb8
0x3a4: MISSING 0x2e
0x3a5: V228 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x3a6: MISSING 0xd9
0x3a7: MISSING 0x1f
0x3a9: MISSING 0xf9
0x3aa: MISSING 0x4f
0x3ab: MISSING 0xf8
0x3ad: MISSING 0xce
0x3ae: V229 = ADDRESS
0x3af: V230 = ADDRESS
0x3b0: V231 = CALLVALUE
0x3b1: V232 = PC
0x3b2: V233 = 0xe36734e2615cf63bf65775e40c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V228, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, 0xe36734e2615cf63bf65775e40c0029, V232, V231, V230, V229]
Exit stack: []

================================

Function 0:
Public function signature: 0xb61d27f6
Entry block: 0x4e
Exit block: 0xdf
Body: 0x4e, 0x56, 0x5a, 0xdf, 0x138, 0x233, 0x23c, 0x24e, 0x262, 0x27b, 0x299, 0x29d, 0x2a8, 0x2b1, 0x2c3, 0x2c7, 0x2df, 0x2e3, 0x30e, 0x317, 0x329, 0x33d, 0x356

Function 1:
Public function signature: 0xf77c4791
Entry block: 0xe1
Exit block: 0xf6
Body: 0xe1, 0xe9, 0xed, 0xf6, 0x371

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

