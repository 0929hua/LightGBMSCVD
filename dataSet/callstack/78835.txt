Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x5d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x5de01497
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x5d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x5de01497
0x1a: V12 = EQ V10 0x5de01497
0x1b: V13 = 0x5d
0x1e: JUMPI 0x5d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x84]
---
0x1f DUP1
0x20 PUSH4 0x63a9c3d7
0x25 EQ
0x26 PUSH2 0x84
0x29 JUMPI
---
0x20: V14 = 0x63a9c3d7
0x25: V15 = EQ 0x63a9c3d7 V10
0x26: V16 = 0x84
0x29: JUMPI 0x84 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xd5]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xd5
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xd5
0x34: JUMPI 0xd5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xfe]
---
0x35 DUP1
0x36 PUSH4 0xc5e412e5
0x3b EQ
0x3c PUSH2 0xfe
0x3f JUMPI
---
0x36: V20 = 0xc5e412e5
0x3b: V21 = EQ 0xc5e412e5 V10
0x3c: V22 = 0xfe
0x3f: JUMPI 0xfe V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x133]
---
0x40 DUP1
0x41 PUSH4 0xf2fde38b
0x46 EQ
0x47 PUSH2 0x133
0x4a JUMPI
---
0x41: V23 = 0xf2fde38b
0x46: V24 = EQ 0xf2fde38b V10
0x47: V25 = 0x133
0x4a: JUMPI 0x133 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x50]
---
Predecessors: [0x0, 0x40]
Successors: [0x51]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d PUSH2 0x0
0x50 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = CALLVALUE
0x4d: V27 = 0x0
0x50: THROWI V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51
[0x51:0x53]
---
Predecessors: [0x4b]
Successors: [0x54]
---
0x51 PUSH2 0x5b
---
0x51: V28 = 0x5b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b]
Exit stack: [V10, 0x5b]

================================

Block 0x54
[0x54:0x58]
---
Predecessors: [0x51]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH2 0x0
0x58 JUMP
---
0x54: JUMPDEST 
0x55: V29 = 0x0
0x58: THROW 
---
Entry stack: [V10, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x59 JUMPDEST
0x5a JUMP
---
0x59: JUMPDEST 
0x5a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x5fc]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x62]
---
Predecessors: [0xb]
Successors: [0x63]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f PUSH2 0x0
0x62 JUMPI
---
0x5d: JUMPDEST 
0x5e: V30 = CALLVALUE
0x5f: V31 = 0x0
0x62: THROWI V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x6f]
---
Predecessors: [0x5d]
Successors: [0x145]
---
0x63 PUSH2 0x70
0x66 PUSH1 0x4
0x68 CALLDATALOAD
0x69 PUSH1 0x24
0x6b CALLDATALOAD
0x6c PUSH2 0x145
0x6f JUMP
---
0x63: V32 = 0x70
0x66: V33 = 0x4
0x68: V34 = CALLDATALOAD 0x4
0x69: V35 = 0x24
0x6b: V36 = CALLDATALOAD 0x24
0x6c: V37 = 0x145
0x6f: JUMP 0x145
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x70, V34, V36]
Exit stack: [V10, 0x70, V34, V36]

================================

Block 0x70
[0x70:0x83]
---
Predecessors: [0x22a]
Successors: []
---
0x70 JUMPDEST
0x71 PUSH1 0x40
0x73 DUP1
0x74 MLOAD
0x75 SWAP2
0x76 ISZERO
0x77 ISZERO
0x78 DUP3
0x79 MSTORE
0x7a MLOAD
0x7b SWAP1
0x7c DUP2
0x7d SWAP1
0x7e SUB
0x7f PUSH1 0x20
0x81 ADD
0x82 SWAP1
0x83 RETURN
---
0x70: JUMPDEST 
0x71: V38 = 0x40
0x74: V39 = M[0x40]
0x76: V40 = ISZERO V187
0x77: V41 = ISZERO V40
0x79: M[V39] = V41
0x7a: V42 = M[0x40]
0x7e: V43 = SUB V39 V42
0x7f: V44 = 0x20
0x81: V45 = ADD 0x20 V43
0x83: RETURN V42 V45
---
Entry stack: [V10, V187]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x84
[0x84:0x89]
---
Predecessors: [0x1f]
Successors: [0x8a]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 PUSH2 0x0
0x89 JUMPI
---
0x84: JUMPDEST 
0x85: V46 = CALLVALUE
0x86: V47 = 0x0
0x89: THROWI V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8a
[0x8a:0x93]
---
Predecessors: [0x84]
Successors: [0x230]
---
0x8a PUSH2 0x94
0x8d PUSH1 0x4
0x8f CALLDATALOAD
0x90 PUSH2 0x230
0x93 JUMP
---
0x8a: V48 = 0x94
0x8d: V49 = 0x4
0x8f: V50 = CALLDATALOAD 0x4
0x90: V51 = 0x230
0x93: JUMP 0x230
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x94, V50]
Exit stack: [V10, 0x94, V50]

================================

Block 0x94
[0x94:0xd4]
---
Predecessors: [0x405]
Successors: []
---
0x94 JUMPDEST
0x95 PUSH1 0x40
0x97 DUP1
0x98 MLOAD
0x99 SWAP7
0x9a ISZERO
0x9b ISZERO
0x9c DUP8
0x9d MSTORE
0x9e PUSH1 0x1
0xa0 PUSH1 0xa0
0xa2 PUSH1 0x2
0xa4 EXP
0xa5 SUB
0xa6 SWAP6
0xa7 DUP7
0xa8 AND
0xa9 PUSH1 0x20
0xab DUP9
0xac ADD
0xad MSTORE
0xae SWAP4
0xaf SWAP1
0xb0 SWAP5
0xb1 AND
0xb2 DUP6
0xb3 DUP5
0xb4 ADD
0xb5 MSTORE
0xb6 PUSH1 0x60
0xb8 DUP6
0xb9 ADD
0xba SWAP2
0xbb SWAP1
0xbc SWAP2
0xbd MSTORE
0xbe PUSH1 0x80
0xc0 DUP5
0xc1 ADD
0xc2 MSTORE
0xc3 SWAP1
0xc4 ISZERO
0xc5 ISZERO
0xc6 PUSH1 0xa0
0xc8 DUP4
0xc9 ADD
0xca MSTORE
0xcb MLOAD
0xcc SWAP1
0xcd DUP2
0xce SWAP1
0xcf SUB
0xd0 PUSH1 0xc0
0xd2 ADD
0xd3 SWAP1
0xd4 RETURN
---
0x94: JUMPDEST 
0x95: V52 = 0x40
0x98: V53 = M[0x40]
0x9a: V54 = ISZERO V201
0x9b: V55 = ISZERO V54
0x9d: M[V53] = V55
0x9e: V56 = 0x1
0xa0: V57 = 0xa0
0xa2: V58 = 0x2
0xa4: V59 = EXP 0x2 0xa0
0xa5: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xa9: V62 = 0x20
0xac: V63 = ADD V53 0x20
0xad: M[V63] = V61
0xb1: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb4: V65 = ADD 0x40 V53
0xb5: M[V65] = V64
0xb6: V66 = 0x60
0xb9: V67 = ADD V53 0x60
0xbd: M[V67] = S2
0xbe: V68 = 0x80
0xc1: V69 = ADD V53 0x80
0xc2: M[V69] = S1
0xc4: V70 = ISZERO S0
0xc5: V71 = ISZERO V70
0xc6: V72 = 0xa0
0xc9: V73 = ADD V53 0xa0
0xca: M[V73] = V71
0xcb: V74 = M[0x40]
0xcf: V75 = SUB V53 V74
0xd0: V76 = 0xc0
0xd2: V77 = ADD 0xc0 V75
0xd4: RETURN V74 V77
---
Entry stack: [V10, V201, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5
[0xd5:0xda]
---
Predecessors: [0x2a]
Successors: [0xdb]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 PUSH2 0x0
0xda JUMPI
---
0xd5: JUMPDEST 
0xd6: V78 = CALLVALUE
0xd7: V79 = 0x0
0xda: THROWI V78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xe1]
---
Predecessors: [0xd5]
Successors: [0x40f]
---
0xdb PUSH2 0xe2
0xde PUSH2 0x40f
0xe1 JUMP
---
0xdb: V80 = 0xe2
0xde: V81 = 0x40f
0xe1: JUMP 0x40f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V10, 0xe2]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x40f, 0x56e]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 DUP1
0xe6 MLOAD
0xe7 PUSH1 0x1
0xe9 PUSH1 0xa0
0xeb PUSH1 0x2
0xed EXP
0xee SUB
0xef SWAP1
0xf0 SWAP3
0xf1 AND
0xf2 DUP3
0xf3 MSTORE
0xf4 MLOAD
0xf5 SWAP1
0xf6 DUP2
0xf7 SWAP1
0xf8 SUB
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP1
0xfd RETURN
---
0xe2: JUMPDEST 
0xe3: V82 = 0x40
0xe6: V83 = M[0x40]
0xe7: V84 = 0x1
0xe9: V85 = 0xa0
0xeb: V86 = 0x2
0xed: V87 = EXP 0x2 0xa0
0xee: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf1: V89 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf3: M[V83] = V89
0xf4: V90 = M[0x40]
0xf8: V91 = SUB V83 V90
0xf9: V92 = 0x20
0xfb: V93 = ADD 0x20 V91
0xfd: RETURN V90 V93
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xfe
[0xfe:0x103]
---
Predecessors: [0x35]
Successors: [0x104]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 PUSH2 0x0
0x103 JUMPI
---
0xfe: JUMPDEST 
0xff: V94 = CALLVALUE
0x100: V95 = 0x0
0x103: THROWI V94
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x104
[0x104:0x116]
---
Predecessors: [0xfe]
Successors: [0x41e]
---
0x104 PUSH2 0xe2
0x107 PUSH1 0x4
0x109 CALLDATALOAD
0x10a PUSH1 0x24
0x10c CALLDATALOAD
0x10d PUSH1 0x44
0x10f CALLDATALOAD
0x110 PUSH1 0x64
0x112 CALLDATALOAD
0x113 PUSH2 0x41e
0x116 JUMP
---
0x104: V96 = 0xe2
0x107: V97 = 0x4
0x109: V98 = CALLDATALOAD 0x4
0x10a: V99 = 0x24
0x10c: V100 = CALLDATALOAD 0x24
0x10d: V101 = 0x44
0x10f: V102 = CALLDATALOAD 0x44
0x110: V103 = 0x64
0x112: V104 = CALLDATALOAD 0x64
0x113: V105 = 0x41e
0x116: JUMP 0x41e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe2, V98, V100, V102, V104]
Exit stack: [V10, 0xe2, V98, V100, V102, V104]

================================

Block 0x117
[0x117:0x132]
---
Predecessors: []
Successors: []
---
0x117 JUMPDEST
0x118 PUSH1 0x40
0x11a DUP1
0x11b MLOAD
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 SWAP1
0x125 SWAP3
0x126 AND
0x127 DUP3
0x128 MSTORE
0x129 MLOAD
0x12a SWAP1
0x12b DUP2
0x12c SWAP1
0x12d SUB
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 RETURN
---
0x117: JUMPDEST 
0x118: V106 = 0x40
0x11b: V107 = M[0x40]
0x11c: V108 = 0x1
0x11e: V109 = 0xa0
0x120: V110 = 0x2
0x122: V111 = EXP 0x2 0xa0
0x123: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x126: V113 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x128: M[V107] = V113
0x129: V114 = M[0x40]
0x12d: V115 = SUB V107 V114
0x12e: V116 = 0x20
0x130: V117 = ADD 0x20 V115
0x132: RETURN V114 V117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x133
[0x133:0x138]
---
Predecessors: [0x40]
Successors: [0x139]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 PUSH2 0x0
0x138 JUMPI
---
0x133: JUMPDEST 
0x134: V118 = CALLVALUE
0x135: V119 = 0x0
0x138: THROWI V118
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x139
[0x139:0x142]
---
Predecessors: [0x133]
Successors: [0x576]
---
0x139 PUSH2 0x5b
0x13c PUSH1 0x4
0x13e CALLDATALOAD
0x13f PUSH2 0x576
0x142 JUMP
---
0x139: V120 = 0x5b
0x13c: V121 = 0x4
0x13e: V122 = CALLDATALOAD 0x4
0x13f: V123 = 0x576
0x142: JUMP 0x576
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b, V122]
Exit stack: [V10, 0x5b, V122]

================================

Block 0x143
[0x143:0x144]
---
Predecessors: []
Successors: []
---
0x143 JUMPDEST
0x144 STOP
---
0x143: JUMPDEST 
0x144: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x145
[0x145:0x15c]
---
Predecessors: [0x63]
Successors: [0x15d, 0x161]
---
0x145 JUMPDEST
0x146 PUSH1 0x0
0x148 DUP1
0x149 SLOAD
0x14a CALLER
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 DUP2
0x155 AND
0x156 SWAP2
0x157 AND
0x158 EQ
0x159 PUSH2 0x161
0x15c JUMPI
---
0x145: JUMPDEST 
0x146: V124 = 0x0
0x149: V125 = S[0x0]
0x14a: V126 = CALLER
0x14b: V127 = 0x1
0x14d: V128 = 0xa0
0x14f: V129 = 0x2
0x151: V130 = EXP 0x2 0xa0
0x152: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x157: V133 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x158: V134 = EQ V133 V132
0x159: V135 = 0x161
0x15c: JUMPI 0x161 V134
---
Entry stack: [V10, 0x70, V34, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x70, V34, V36, 0x0]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x145]
Successors: []
---
0x15d PUSH2 0x0
0x160 JUMP
---
0x15d: V136 = 0x0
0x160: THROW 
---
Entry stack: [V10, 0x70, V34, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70, V34, V36, 0x0]

================================

Block 0x161
[0x161:0x215]
---
Predecessors: [0x145]
Successors: [0x216]
---
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 DUP1
0x165 MLOAD
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e DUP6
0x16f AND
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x20
0x174 DUP2
0x175 ADD
0x176 DUP5
0x177 SWAP1
0x178 MSTORE
0x179 DUP2
0x17a MLOAD
0x17b PUSH32 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x19c SWAP3
0x19d SWAP2
0x19e DUP2
0x19f SWAP1
0x1a0 SUB
0x1a1 SWAP1
0x1a2 SWAP2
0x1a3 ADD
0x1a4 SWAP1
0x1a5 LOG1
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 SLOAD
0x1aa PUSH1 0x40
0x1ac DUP1
0x1ad MLOAD
0x1ae PUSH1 0x20
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 ADD
0x1b3 DUP5
0x1b4 SWAP1
0x1b5 MSTORE
0x1b6 DUP2
0x1b7 MLOAD
0x1b8 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 SWAP4
0x1e4 DUP5
0x1e5 AND
0x1e6 PUSH1 0x4
0x1e8 DUP3
0x1e9 ADD
0x1ea MSTORE
0x1eb PUSH1 0x24
0x1ed DUP2
0x1ee ADD
0x1ef DUP8
0x1f0 SWAP1
0x1f1 MSTORE
0x1f2 SWAP2
0x1f3 MLOAD
0x1f4 SWAP3
0x1f5 DUP8
0x1f6 AND
0x1f7 SWAP4
0x1f8 PUSH4 0xa9059cbb
0x1fd SWAP4
0x1fe PUSH1 0x44
0x200 DUP1
0x201 DUP6
0x202 ADD
0x203 SWAP5
0x204 SWAP2
0x205 SWAP3
0x206 SWAP2
0x207 DUP4
0x208 SWAP1
0x209 SUB
0x20a ADD
0x20b SWAP1
0x20c DUP3
0x20d SWAP1
0x20e DUP8
0x20f DUP1
0x210 EXTCODESIZE
0x211 ISZERO
0x212 PUSH2 0x0
0x215 JUMPI
---
0x161: JUMPDEST 
0x162: V137 = 0x40
0x165: V138 = M[0x40]
0x166: V139 = 0x1
0x168: V140 = 0xa0
0x16a: V141 = 0x2
0x16c: V142 = EXP 0x2 0xa0
0x16d: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V144 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x171: M[V138] = V144
0x172: V145 = 0x20
0x175: V146 = ADD V138 0x20
0x178: M[V146] = V36
0x17a: V147 = M[0x40]
0x17b: V148 = 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x1a0: V149 = SUB V138 V147
0x1a3: V150 = ADD 0x40 V149
0x1a5: LOG V147 V150 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x1a6: V151 = 0x0
0x1a9: V152 = S[0x0]
0x1aa: V153 = 0x40
0x1ad: V154 = M[0x40]
0x1ae: V155 = 0x20
0x1b2: V156 = ADD 0x20 V154
0x1b5: M[V156] = 0x0
0x1b7: V157 = M[0x40]
0x1b8: V158 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1da: M[V157] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1db: V159 = 0x1
0x1dd: V160 = 0xa0
0x1df: V161 = 0x2
0x1e1: V162 = EXP 0x2 0xa0
0x1e2: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x1e6: V165 = 0x4
0x1e9: V166 = ADD V157 0x4
0x1ea: M[V166] = V164
0x1eb: V167 = 0x24
0x1ee: V168 = ADD V157 0x24
0x1f1: M[V168] = V36
0x1f3: V169 = M[0x40]
0x1f6: V170 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V171 = 0xa9059cbb
0x1fe: V172 = 0x44
0x202: V173 = ADD V157 0x44
0x209: V174 = SUB V157 V169
0x20a: V175 = ADD V174 0x44
0x210: V176 = EXTCODESIZE V170
0x211: V177 = ISZERO V176
0x212: V178 = 0x0
0x215: THROWI V177
---
Entry stack: [V10, 0x70, V34, V36, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V170, 0xa9059cbb, V173, 0x20, V169, V175, V169, 0x0, V170]
Exit stack: [V10, 0x70, V34, V36, 0x0, V170, 0xa9059cbb, V173, 0x20, V169, V175, V169, 0x0, V170]

================================

Block 0x216
[0x216:0x21f]
---
Predecessors: [0x161]
Successors: [0x220]
---
0x216 PUSH1 0x32
0x218 GAS
0x219 SUB
0x21a CALL
0x21b ISZERO
0x21c PUSH2 0x0
0x21f JUMPI
---
0x216: V179 = 0x32
0x218: V180 = GAS
0x219: V181 = SUB V180 0x32
0x21a: V182 = CALL V181 V170 0x0 V169 V175 V169 0x20
0x21b: V183 = ISZERO V182
0x21c: V184 = 0x0
0x21f: THROWI V183
---
Entry stack: [V10, 0x70, V34, V36, 0x0, V170, 0xa9059cbb, V173, 0x20, V169, V175, V169, 0x0, V170]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x70, V34, V36, 0x0, V170, 0xa9059cbb, V173]

================================

Block 0x220
[0x220:0x228]
---
Predecessors: [0x216]
Successors: [0x229]
---
0x220 POP
0x221 POP
0x222 PUSH1 0x40
0x224 MLOAD
0x225 MLOAD
0x226 SWAP2
0x227 POP
0x228 POP
---
0x222: V185 = 0x40
0x224: V186 = M[0x40]
0x225: V187 = M[V186]
---
Entry stack: [V10, 0x70, V34, V36, 0x0, V170, 0xa9059cbb, V173]
Stack pops: 4
Stack additions: [V187]
Exit stack: [V10, 0x70, V34, V36, V187]

================================

Block 0x229
[0x229:0x229]
---
Predecessors: [0x220]
Successors: [0x22a]
---
0x229 JUMPDEST
---
0x229: JUMPDEST 
---
Entry stack: [V10, 0x70, V34, V36, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70, V34, V36, V187]

================================

Block 0x22a
[0x22a:0x22f]
---
Predecessors: [0x229]
Successors: [0x70]
---
0x22a JUMPDEST
0x22b SWAP3
0x22c SWAP2
0x22d POP
0x22e POP
0x22f JUMP
---
0x22a: JUMPDEST 
0x22f: JUMP 0x70
---
Entry stack: [V10, 0x70, V34, V36, V187]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V187]

================================

Block 0x230
[0x230:0x258]
---
Predecessors: [0x8a]
Successors: [0x259, 0x404]
---
0x230 JUMPDEST
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 DUP2
0x23a AND
0x23b PUSH1 0x0
0x23d SWAP1
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x1
0x242 PUSH1 0x20
0x244 MSTORE
0x245 PUSH1 0x40
0x247 DUP2
0x248 SHA3
0x249 SLOAD
0x24a PUSH1 0xff
0x24c AND
0x24d SWAP1
0x24e DUP1
0x24f DUP1
0x250 DUP1
0x251 DUP1
0x252 DUP1
0x253 DUP7
0x254 ISZERO
0x255 PUSH2 0x404
0x258 JUMPI
---
0x230: JUMPDEST 
0x231: V188 = 0x1
0x233: V189 = 0xa0
0x235: V190 = 0x2
0x237: V191 = EXP 0x2 0xa0
0x238: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V193 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V194 = 0x0
0x23f: M[0x0] = V193
0x240: V195 = 0x1
0x242: V196 = 0x20
0x244: M[0x20] = 0x1
0x245: V197 = 0x40
0x248: V198 = SHA3 0x0 0x40
0x249: V199 = S[V198]
0x24a: V200 = 0xff
0x24c: V201 = AND 0xff V199
0x254: V202 = ISZERO V201
0x255: V203 = 0x404
0x258: JUMPI 0x404 V202
---
Entry stack: [V10, 0x94, V50]
Stack pops: 1
Stack additions: [S0, V201, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x94, V50, V201, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x259
[0x259:0x298]
---
Predecessors: [0x230]
Successors: [0x299]
---
0x259 DUP8
0x25a SWAP1
0x25b POP
0x25c DUP1
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 AND
0x266 PUSH4 0x8da5cb5b
0x26b PUSH1 0x0
0x26d PUSH1 0x40
0x26f MLOAD
0x270 PUSH1 0x20
0x272 ADD
0x273 MSTORE
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP2
0x278 PUSH1 0xe0
0x27a PUSH1 0x2
0x27c EXP
0x27d MUL
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x4
0x282 ADD
0x283 DUP1
0x284 SWAP1
0x285 POP
0x286 PUSH1 0x20
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c DUP4
0x28d SUB
0x28e DUP2
0x28f PUSH1 0x0
0x291 DUP8
0x292 DUP1
0x293 EXTCODESIZE
0x294 ISZERO
0x295 PUSH2 0x0
0x298 JUMPI
---
0x25d: V204 = 0x1
0x25f: V205 = 0xa0
0x261: V206 = 0x2
0x263: V207 = EXP 0x2 0xa0
0x264: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x266: V210 = 0x8da5cb5b
0x26b: V211 = 0x0
0x26d: V212 = 0x40
0x26f: V213 = M[0x40]
0x270: V214 = 0x20
0x272: V215 = ADD 0x20 V213
0x273: M[V215] = 0x0
0x274: V216 = 0x40
0x276: V217 = M[0x40]
0x278: V218 = 0xe0
0x27a: V219 = 0x2
0x27c: V220 = EXP 0x2 0xe0
0x27d: V221 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x27f: M[V217] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x280: V222 = 0x4
0x282: V223 = ADD 0x4 V217
0x286: V224 = 0x20
0x288: V225 = 0x40
0x28a: V226 = M[0x40]
0x28d: V227 = SUB V223 V226
0x28f: V228 = 0x0
0x293: V229 = EXTCODESIZE V209
0x294: V230 = ISZERO V229
0x295: V231 = 0x0
0x298: THROWI V230
---
Entry stack: [V10, 0x94, V50, V201, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S7, V209, 0x8da5cb5b, V223, 0x20, V226, V227, V226, 0x0, V209]
Exit stack: [V10, 0x94, V50, V201, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V209, 0x8da5cb5b, V223, 0x20, V226, V227, V226, 0x0, V209]

================================

Block 0x299
[0x299:0x2a2]
---
Predecessors: [0x259]
Successors: [0x2a3]
---
0x299 PUSH1 0x32
0x29b GAS
0x29c SUB
0x29d CALL
0x29e ISZERO
0x29f PUSH2 0x0
0x2a2 JUMPI
---
0x299: V232 = 0x32
0x29b: V233 = GAS
0x29c: V234 = SUB V233 0x32
0x29d: V235 = CALL V234 V209 0x0 V226 V227 V226 0x20
0x29e: V236 = ISZERO V235
0x29f: V237 = 0x0
0x2a2: THROWI V236
---
Entry stack: [V10, 0x94, V50, V201, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V209, 0x8da5cb5b, V223, 0x20, V226, V227, V226, 0x0, V209]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V201, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V209, 0x8da5cb5b, V223]

================================

Block 0x2a3
[0x2a3:0x2ee]
---
Predecessors: [0x299]
Successors: [0x2ef]
---
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 DUP1
0x2aa MLOAD
0x2ab SWAP1
0x2ac PUSH1 0x20
0x2ae ADD
0x2af POP
0x2b0 SWAP6
0x2b1 POP
0x2b2 DUP1
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb AND
0x2bc PUSH4 0x38d52e0f
0x2c1 PUSH1 0x0
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 MSTORE
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP2
0x2ce PUSH1 0xe0
0x2d0 PUSH1 0x2
0x2d2 EXP
0x2d3 MUL
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 PUSH1 0x4
0x2d8 ADD
0x2d9 DUP1
0x2da SWAP1
0x2db POP
0x2dc PUSH1 0x20
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 DUP1
0x2e2 DUP4
0x2e3 SUB
0x2e4 DUP2
0x2e5 PUSH1 0x0
0x2e7 DUP8
0x2e8 DUP1
0x2e9 EXTCODESIZE
0x2ea ISZERO
0x2eb PUSH2 0x0
0x2ee JUMPI
---
0x2a6: V238 = 0x40
0x2a8: V239 = M[0x40]
0x2aa: V240 = M[V239]
0x2ac: V241 = 0x20
0x2ae: V242 = ADD 0x20 V239
0x2b3: V243 = 0x1
0x2b5: V244 = 0xa0
0x2b7: V245 = 0x2
0x2b9: V246 = EXP 0x2 0xa0
0x2ba: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x2bc: V249 = 0x38d52e0f
0x2c1: V250 = 0x0
0x2c3: V251 = 0x40
0x2c5: V252 = M[0x40]
0x2c6: V253 = 0x20
0x2c8: V254 = ADD 0x20 V252
0x2c9: M[V254] = 0x0
0x2ca: V255 = 0x40
0x2cc: V256 = M[0x40]
0x2ce: V257 = 0xe0
0x2d0: V258 = 0x2
0x2d2: V259 = EXP 0x2 0xe0
0x2d3: V260 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x2d5: M[V256] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x2d6: V261 = 0x4
0x2d8: V262 = ADD 0x4 V256
0x2dc: V263 = 0x20
0x2de: V264 = 0x40
0x2e0: V265 = M[0x40]
0x2e3: V266 = SUB V262 V265
0x2e5: V267 = 0x0
0x2e9: V268 = EXTCODESIZE V248
0x2ea: V269 = ISZERO V268
0x2eb: V270 = 0x0
0x2ee: THROWI V269
---
Entry stack: [V10, 0x94, V50, V201, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V209, 0x8da5cb5b, V223]
Stack pops: 9
Stack additions: [V240, S7, S6, S5, S4, S3, V248, 0x38d52e0f, V262, 0x20, V265, V266, V265, 0x0, V248]
Exit stack: [V10, 0x94, V50, V201, V240, 0x0, 0x0, 0x0, 0x0, V50, V248, 0x38d52e0f, V262, 0x20, V265, V266, V265, 0x0, V248]

================================

Block 0x2ef
[0x2ef:0x2f8]
---
Predecessors: [0x2a3]
Successors: [0x2f9]
---
0x2ef PUSH1 0x32
0x2f1 GAS
0x2f2 SUB
0x2f3 CALL
0x2f4 ISZERO
0x2f5 PUSH2 0x0
0x2f8 JUMPI
---
0x2ef: V271 = 0x32
0x2f1: V272 = GAS
0x2f2: V273 = SUB V272 0x32
0x2f3: V274 = CALL V273 V248 0x0 V265 V266 V265 0x20
0x2f4: V275 = ISZERO V274
0x2f5: V276 = 0x0
0x2f8: THROWI V275
---
Entry stack: [V10, 0x94, V50, V201, V240, 0x0, 0x0, 0x0, 0x0, V50, V248, 0x38d52e0f, V262, 0x20, V265, V266, V265, 0x0, V248]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V201, V240, 0x0, 0x0, 0x0, 0x0, V50, V248, 0x38d52e0f, V262]

================================

Block 0x2f9
[0x2f9:0x344]
---
Predecessors: [0x2ef]
Successors: [0x345]
---
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff DUP1
0x300 MLOAD
0x301 SWAP1
0x302 PUSH1 0x20
0x304 ADD
0x305 POP
0x306 SWAP5
0x307 POP
0x308 DUP1
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 AND
0x312 PUSH4 0x4b750334
0x317 PUSH1 0x0
0x319 PUSH1 0x40
0x31b MLOAD
0x31c PUSH1 0x20
0x31e ADD
0x31f MSTORE
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP2
0x324 PUSH1 0xe0
0x326 PUSH1 0x2
0x328 EXP
0x329 MUL
0x32a DUP2
0x32b MSTORE
0x32c PUSH1 0x4
0x32e ADD
0x32f DUP1
0x330 SWAP1
0x331 POP
0x332 PUSH1 0x20
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 DUP4
0x339 SUB
0x33a DUP2
0x33b PUSH1 0x0
0x33d DUP8
0x33e DUP1
0x33f EXTCODESIZE
0x340 ISZERO
0x341 PUSH2 0x0
0x344 JUMPI
---
0x2fc: V277 = 0x40
0x2fe: V278 = M[0x40]
0x300: V279 = M[V278]
0x302: V280 = 0x20
0x304: V281 = ADD 0x20 V278
0x309: V282 = 0x1
0x30b: V283 = 0xa0
0x30d: V284 = 0x2
0x30f: V285 = EXP 0x2 0xa0
0x310: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x311: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x312: V288 = 0x4b750334
0x317: V289 = 0x0
0x319: V290 = 0x40
0x31b: V291 = M[0x40]
0x31c: V292 = 0x20
0x31e: V293 = ADD 0x20 V291
0x31f: M[V293] = 0x0
0x320: V294 = 0x40
0x322: V295 = M[0x40]
0x324: V296 = 0xe0
0x326: V297 = 0x2
0x328: V298 = EXP 0x2 0xe0
0x329: V299 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4b750334
0x32b: M[V295] = 0x4b75033400000000000000000000000000000000000000000000000000000000
0x32c: V300 = 0x4
0x32e: V301 = ADD 0x4 V295
0x332: V302 = 0x20
0x334: V303 = 0x40
0x336: V304 = M[0x40]
0x339: V305 = SUB V301 V304
0x33b: V306 = 0x0
0x33f: V307 = EXTCODESIZE V287
0x340: V308 = ISZERO V307
0x341: V309 = 0x0
0x344: THROWI V308
---
Entry stack: [V10, 0x94, V50, V201, V240, 0x0, 0x0, 0x0, 0x0, V50, V248, 0x38d52e0f, V262]
Stack pops: 8
Stack additions: [V279, S6, S5, S4, S3, V287, 0x4b750334, V301, 0x20, V304, V305, V304, 0x0, V287]
Exit stack: [V10, 0x94, V50, V201, V240, V279, 0x0, 0x0, 0x0, V50, V287, 0x4b750334, V301, 0x20, V304, V305, V304, 0x0, V287]

================================

Block 0x345
[0x345:0x34e]
---
Predecessors: [0x2f9]
Successors: [0x34f]
---
0x345 PUSH1 0x32
0x347 GAS
0x348 SUB
0x349 CALL
0x34a ISZERO
0x34b PUSH2 0x0
0x34e JUMPI
---
0x345: V310 = 0x32
0x347: V311 = GAS
0x348: V312 = SUB V311 0x32
0x349: V313 = CALL V312 V287 0x0 V304 V305 V304 0x20
0x34a: V314 = ISZERO V313
0x34b: V315 = 0x0
0x34e: THROWI V314
---
Entry stack: [V10, 0x94, V50, V201, V240, V279, 0x0, 0x0, 0x0, V50, V287, 0x4b750334, V301, 0x20, V304, V305, V304, 0x0, V287]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V201, V240, V279, 0x0, 0x0, 0x0, V50, V287, 0x4b750334, V301]

================================

Block 0x34f
[0x34f:0x39a]
---
Predecessors: [0x345]
Successors: [0x39b]
---
0x34f POP
0x350 POP
0x351 POP
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 MLOAD
0x357 SWAP1
0x358 PUSH1 0x20
0x35a ADD
0x35b POP
0x35c SWAP4
0x35d POP
0x35e DUP1
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 AND
0x368 PUSH4 0x976a8435
0x36d PUSH1 0x0
0x36f PUSH1 0x40
0x371 MLOAD
0x372 PUSH1 0x20
0x374 ADD
0x375 MSTORE
0x376 PUSH1 0x40
0x378 MLOAD
0x379 DUP2
0x37a PUSH1 0xe0
0x37c PUSH1 0x2
0x37e EXP
0x37f MUL
0x380 DUP2
0x381 MSTORE
0x382 PUSH1 0x4
0x384 ADD
0x385 DUP1
0x386 SWAP1
0x387 POP
0x388 PUSH1 0x20
0x38a PUSH1 0x40
0x38c MLOAD
0x38d DUP1
0x38e DUP4
0x38f SUB
0x390 DUP2
0x391 PUSH1 0x0
0x393 DUP8
0x394 DUP1
0x395 EXTCODESIZE
0x396 ISZERO
0x397 PUSH2 0x0
0x39a JUMPI
---
0x352: V316 = 0x40
0x354: V317 = M[0x40]
0x356: V318 = M[V317]
0x358: V319 = 0x20
0x35a: V320 = ADD 0x20 V317
0x35f: V321 = 0x1
0x361: V322 = 0xa0
0x363: V323 = 0x2
0x365: V324 = EXP 0x2 0xa0
0x366: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x368: V327 = 0x976a8435
0x36d: V328 = 0x0
0x36f: V329 = 0x40
0x371: V330 = M[0x40]
0x372: V331 = 0x20
0x374: V332 = ADD 0x20 V330
0x375: M[V332] = 0x0
0x376: V333 = 0x40
0x378: V334 = M[0x40]
0x37a: V335 = 0xe0
0x37c: V336 = 0x2
0x37e: V337 = EXP 0x2 0xe0
0x37f: V338 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x976a8435
0x381: M[V334] = 0x976a843500000000000000000000000000000000000000000000000000000000
0x382: V339 = 0x4
0x384: V340 = ADD 0x4 V334
0x388: V341 = 0x20
0x38a: V342 = 0x40
0x38c: V343 = M[0x40]
0x38f: V344 = SUB V340 V343
0x391: V345 = 0x0
0x395: V346 = EXTCODESIZE V326
0x396: V347 = ISZERO V346
0x397: V348 = 0x0
0x39a: THROWI V347
---
Entry stack: [V10, 0x94, V50, V201, V240, V279, 0x0, 0x0, 0x0, V50, V287, 0x4b750334, V301]
Stack pops: 7
Stack additions: [V318, S5, S4, S3, V326, 0x976a8435, V340, 0x20, V343, V344, V343, 0x0, V326]
Exit stack: [V10, 0x94, V50, V201, V240, V279, V318, 0x0, 0x0, V50, V326, 0x976a8435, V340, 0x20, V343, V344, V343, 0x0, V326]

================================

Block 0x39b
[0x39b:0x3a4]
---
Predecessors: [0x34f]
Successors: [0x3a5]
---
0x39b PUSH1 0x32
0x39d GAS
0x39e SUB
0x39f CALL
0x3a0 ISZERO
0x3a1 PUSH2 0x0
0x3a4 JUMPI
---
0x39b: V349 = 0x32
0x39d: V350 = GAS
0x39e: V351 = SUB V350 0x32
0x39f: V352 = CALL V351 V326 0x0 V343 V344 V343 0x20
0x3a0: V353 = ISZERO V352
0x3a1: V354 = 0x0
0x3a4: THROWI V353
---
Entry stack: [V10, 0x94, V50, V201, V240, V279, V318, 0x0, 0x0, V50, V326, 0x976a8435, V340, 0x20, V343, V344, V343, 0x0, V326]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V201, V240, V279, V318, 0x0, 0x0, V50, V326, 0x976a8435, V340]

================================

Block 0x3a5
[0x3a5:0x3f0]
---
Predecessors: [0x39b]
Successors: [0x3f1]
---
0x3a5 POP
0x3a6 POP
0x3a7 POP
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab DUP1
0x3ac MLOAD
0x3ad SWAP1
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 POP
0x3b2 SWAP3
0x3b3 POP
0x3b4 DUP1
0x3b5 PUSH1 0x1
0x3b7 PUSH1 0xa0
0x3b9 PUSH1 0x2
0x3bb EXP
0x3bc SUB
0x3bd AND
0x3be PUSH4 0x4ca50f59
0x3c3 PUSH1 0x0
0x3c5 PUSH1 0x40
0x3c7 MLOAD
0x3c8 PUSH1 0x20
0x3ca ADD
0x3cb MSTORE
0x3cc PUSH1 0x40
0x3ce MLOAD
0x3cf DUP2
0x3d0 PUSH1 0xe0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 MUL
0x3d6 DUP2
0x3d7 MSTORE
0x3d8 PUSH1 0x4
0x3da ADD
0x3db DUP1
0x3dc SWAP1
0x3dd POP
0x3de PUSH1 0x20
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 DUP4
0x3e5 SUB
0x3e6 DUP2
0x3e7 PUSH1 0x0
0x3e9 DUP8
0x3ea DUP1
0x3eb EXTCODESIZE
0x3ec ISZERO
0x3ed PUSH2 0x0
0x3f0 JUMPI
---
0x3a8: V355 = 0x40
0x3aa: V356 = M[0x40]
0x3ac: V357 = M[V356]
0x3ae: V358 = 0x20
0x3b0: V359 = ADD 0x20 V356
0x3b5: V360 = 0x1
0x3b7: V361 = 0xa0
0x3b9: V362 = 0x2
0x3bb: V363 = EXP 0x2 0xa0
0x3bc: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x3be: V366 = 0x4ca50f59
0x3c3: V367 = 0x0
0x3c5: V368 = 0x40
0x3c7: V369 = M[0x40]
0x3c8: V370 = 0x20
0x3ca: V371 = ADD 0x20 V369
0x3cb: M[V371] = 0x0
0x3cc: V372 = 0x40
0x3ce: V373 = M[0x40]
0x3d0: V374 = 0xe0
0x3d2: V375 = 0x2
0x3d4: V376 = EXP 0x2 0xe0
0x3d5: V377 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4ca50f59
0x3d7: M[V373] = 0x4ca50f5900000000000000000000000000000000000000000000000000000000
0x3d8: V378 = 0x4
0x3da: V379 = ADD 0x4 V373
0x3de: V380 = 0x20
0x3e0: V381 = 0x40
0x3e2: V382 = M[0x40]
0x3e5: V383 = SUB V379 V382
0x3e7: V384 = 0x0
0x3eb: V385 = EXTCODESIZE V365
0x3ec: V386 = ISZERO V385
0x3ed: V387 = 0x0
0x3f0: THROWI V386
---
Entry stack: [V10, 0x94, V50, V201, V240, V279, V318, 0x0, 0x0, V50, V326, 0x976a8435, V340]
Stack pops: 6
Stack additions: [V357, S4, S3, V365, 0x4ca50f59, V379, 0x20, V382, V383, V382, 0x0, V365]
Exit stack: [V10, 0x94, V50, V201, V240, V279, V318, V357, 0x0, V50, V365, 0x4ca50f59, V379, 0x20, V382, V383, V382, 0x0, V365]

================================

Block 0x3f1
[0x3f1:0x3fa]
---
Predecessors: [0x3a5]
Successors: [0x3fb]
---
0x3f1 PUSH1 0x32
0x3f3 GAS
0x3f4 SUB
0x3f5 CALL
0x3f6 ISZERO
0x3f7 PUSH2 0x0
0x3fa JUMPI
---
0x3f1: V388 = 0x32
0x3f3: V389 = GAS
0x3f4: V390 = SUB V389 0x32
0x3f5: V391 = CALL V390 V365 0x0 V382 V383 V382 0x20
0x3f6: V392 = ISZERO V391
0x3f7: V393 = 0x0
0x3fa: THROWI V392
---
Entry stack: [V10, 0x94, V50, V201, V240, V279, V318, V357, 0x0, V50, V365, 0x4ca50f59, V379, 0x20, V382, V383, V382, 0x0, V365]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V201, V240, V279, V318, V357, 0x0, V50, V365, 0x4ca50f59, V379]

================================

Block 0x3fb
[0x3fb:0x403]
---
Predecessors: [0x3f1]
Successors: [0x404]
---
0x3fb POP
0x3fc POP
0x3fd PUSH1 0x40
0x3ff MLOAD
0x400 MLOAD
0x401 SWAP3
0x402 POP
0x403 POP
---
0x3fd: V394 = 0x40
0x3ff: V395 = M[0x40]
0x400: V396 = M[V395]
---
Entry stack: [V10, 0x94, V50, V201, V240, V279, V318, V357, 0x0, V50, V365, 0x4ca50f59, V379]
Stack pops: 5
Stack additions: [V396, S3]
Exit stack: [V10, 0x94, V50, V201, V240, V279, V318, V357, V396, V50]

================================

Block 0x404
[0x404:0x404]
---
Predecessors: [0x230, 0x3fb]
Successors: [0x405]
---
0x404 JUMPDEST
---
0x404: JUMPDEST 
---
Entry stack: [V10, 0x94, V50, V201, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V50, V201, S5, S4, S3, S2, S1, S0]

================================

Block 0x405
[0x405:0x40e]
---
Predecessors: [0x404]
Successors: [0x94]
---
0x405 JUMPDEST
0x406 POP
0x407 SWAP2
0x408 SWAP4
0x409 SWAP6
0x40a POP
0x40b SWAP2
0x40c SWAP4
0x40d SWAP6
0x40e JUMP
---
0x405: JUMPDEST 
0x40e: JUMP 0x94
---
Entry stack: [V10, 0x94, V50, V201, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V10, V201, S5, S4, S3, S2, S1]

================================

Block 0x40f
[0x40f:0x41d]
---
Predecessors: [0xdb]
Successors: [0xe2]
---
0x40f JUMPDEST
0x410 PUSH1 0x0
0x412 SLOAD
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b AND
0x41c DUP2
0x41d JUMP
---
0x40f: JUMPDEST 
0x410: V397 = 0x0
0x412: V398 = S[0x0]
0x413: V399 = 0x1
0x415: V400 = 0xa0
0x417: V401 = 0x2
0x419: V402 = EXP 0x2 0xa0
0x41a: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41b: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x41d: JUMP 0xe2
---
Entry stack: [V10, 0xe2]
Stack pops: 1
Stack additions: [S0, V404]
Exit stack: [V10, 0xe2, V404]

================================

Block 0x41e
[0x41e:0x429]
---
Predecessors: [0x104]
Successors: [0x42a, 0x42e]
---
0x41e JUMPDEST
0x41f PUSH1 0x0
0x421 PUSH1 0x0
0x423 DUP5
0x424 LT
0x425 ISZERO
0x426 PUSH2 0x42e
0x429 JUMPI
---
0x41e: JUMPDEST 
0x41f: V405 = 0x0
0x421: V406 = 0x0
0x424: V407 = LT V100 0x0
0x425: V408 = ISZERO V407
0x426: V409 = 0x42e
0x429: JUMPI 0x42e V408
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x42a
[0x42a:0x42d]
---
Predecessors: [0x41e]
Successors: []
---
0x42a PUSH2 0x0
0x42d JUMP
---
0x42a: V410 = 0x0
0x42d: THROW 
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x42e
[0x42e:0x436]
---
Predecessors: [0x41e]
Successors: [0x437, 0x43b]
---
0x42e JUMPDEST
0x42f PUSH1 0x0
0x431 DUP4
0x432 GT
0x433 PUSH2 0x43b
0x436 JUMPI
---
0x42e: JUMPDEST 
0x42f: V411 = 0x0
0x432: V412 = GT V102 0x0
0x433: V413 = 0x43b
0x436: JUMPI 0x43b V412
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x437
[0x437:0x43a]
---
Predecessors: [0x42e]
Successors: []
---
0x437 PUSH2 0x0
0x43a JUMP
---
0x437: V414 = 0x0
0x43a: THROW 
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x43b
[0x43b:0x486]
---
Predecessors: [0x42e]
Successors: [0x487]
---
0x43b JUMPDEST
0x43c DUP5
0x43d DUP5
0x43e DUP5
0x43f DUP5
0x440 PUSH1 0x40
0x442 MLOAD
0x443 PUSH2 0x86a
0x446 DUP1
0x447 PUSH2 0x5ff
0x44a DUP4
0x44b CODECOPY
0x44c ADD
0x44d DUP1
0x44e DUP6
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 AND
0x458 DUP2
0x459 MSTORE
0x45a PUSH1 0x20
0x45c ADD
0x45d DUP5
0x45e DUP2
0x45f MSTORE
0x460 PUSH1 0x20
0x462 ADD
0x463 DUP4
0x464 DUP2
0x465 MSTORE
0x466 PUSH1 0x20
0x468 ADD
0x469 DUP3
0x46a ISZERO
0x46b ISZERO
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 SWAP5
0x472 POP
0x473 POP
0x474 POP
0x475 POP
0x476 POP
0x477 PUSH1 0x40
0x479 MLOAD
0x47a DUP1
0x47b SWAP2
0x47c SUB
0x47d SWAP1
0x47e PUSH1 0x0
0x480 CREATE
0x481 DUP1
0x482 ISZERO
0x483 PUSH2 0x0
0x486 JUMPI
---
0x43b: JUMPDEST 
0x440: V415 = 0x40
0x442: V416 = M[0x40]
0x443: V417 = 0x86a
0x447: V418 = 0x5ff
0x44b: CODECOPY V416 0x5ff 0x86a
0x44c: V419 = ADD 0x86a V416
0x44f: V420 = 0x1
0x451: V421 = 0xa0
0x453: V422 = 0x2
0x455: V423 = EXP 0x2 0xa0
0x456: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x459: M[V419] = V425
0x45a: V426 = 0x20
0x45c: V427 = ADD 0x20 V419
0x45f: M[V427] = V100
0x460: V428 = 0x20
0x462: V429 = ADD 0x20 V427
0x465: M[V429] = V102
0x466: V430 = 0x20
0x468: V431 = ADD 0x20 V429
0x46a: V432 = ISZERO V104
0x46b: V433 = ISZERO V432
0x46d: M[V431] = V433
0x46e: V434 = 0x20
0x470: V435 = ADD 0x20 V431
0x477: V436 = 0x40
0x479: V437 = M[0x40]
0x47c: V438 = SUB V435 V437
0x47e: V439 = 0x0
0x480: V440 = CREATE 0x0 V437 V438
0x482: V441 = ISZERO V440
0x483: V442 = 0x0
0x486: THROWI V441
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V440]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0, V440]

================================

Block 0x487
[0x487:0x4fe]
---
Predecessors: [0x43b]
Successors: [0x4ff]
---
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f DUP1
0x490 DUP3
0x491 AND
0x492 PUSH1 0x0
0x494 DUP2
0x495 DUP2
0x496 MSTORE
0x497 PUSH1 0x1
0x499 PUSH1 0x20
0x49b DUP2
0x49c SWAP1
0x49d MSTORE
0x49e PUSH1 0x40
0x4a0 DUP1
0x4a1 DUP4
0x4a2 SHA3
0x4a3 DUP1
0x4a4 SLOAD
0x4a5 PUSH1 0xff
0x4a7 NOT
0x4a8 AND
0x4a9 SWAP1
0x4aa SWAP3
0x4ab OR
0x4ac SWAP1
0x4ad SWAP2
0x4ae SSTORE
0x4af DUP1
0x4b0 MLOAD
0x4b1 PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 CALLER
0x4d5 SWAP1
0x4d6 SWAP5
0x4d7 AND
0x4d8 PUSH1 0x4
0x4da DUP6
0x4db ADD
0x4dc MSTORE
0x4dd MLOAD
0x4de SWAP4
0x4df SWAP5
0x4e0 POP
0x4e1 SWAP1
0x4e2 SWAP3
0x4e3 PUSH4 0xf2fde38b
0x4e8 SWAP3
0x4e9 PUSH1 0x24
0x4eb DUP1
0x4ec DUP3
0x4ed ADD
0x4ee SWAP4
0x4ef SWAP3
0x4f0 SWAP2
0x4f1 DUP3
0x4f2 SWAP1
0x4f3 SUB
0x4f4 ADD
0x4f5 DUP2
0x4f6 DUP4
0x4f7 DUP8
0x4f8 DUP1
0x4f9 EXTCODESIZE
0x4fa ISZERO
0x4fb PUSH2 0x0
0x4fe JUMPI
---
0x487: V443 = 0x1
0x489: V444 = 0xa0
0x48b: V445 = 0x2
0x48d: V446 = EXP 0x2 0xa0
0x48e: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V448 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x492: V449 = 0x0
0x496: M[0x0] = V448
0x497: V450 = 0x1
0x499: V451 = 0x20
0x49d: M[0x20] = 0x1
0x49e: V452 = 0x40
0x4a2: V453 = SHA3 0x0 0x40
0x4a4: V454 = S[V453]
0x4a5: V455 = 0xff
0x4a7: V456 = NOT 0xff
0x4a8: V457 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V454
0x4ab: V458 = OR 0x1 V457
0x4ae: S[V453] = V458
0x4b0: V459 = M[0x40]
0x4b1: V460 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4d3: M[V459] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4d4: V461 = CALLER
0x4d7: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x4d8: V463 = 0x4
0x4db: V464 = ADD V459 0x4
0x4dc: M[V464] = V462
0x4dd: V465 = M[0x40]
0x4e3: V466 = 0xf2fde38b
0x4e9: V467 = 0x24
0x4ed: V468 = ADD V459 0x24
0x4f3: V469 = SUB V459 V465
0x4f4: V470 = ADD V469 0x24
0x4f9: V471 = EXTCODESIZE V448
0x4fa: V472 = ISZERO V471
0x4fb: V473 = 0x0
0x4fe: THROWI V472
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0, V440]
Stack pops: 2
Stack additions: [S0, V448, 0xf2fde38b, V468, 0x0, V465, V470, V465, 0x0, V448]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, V440, V448, 0xf2fde38b, V468, 0x0, V465, V470, V465, 0x0, V448]

================================

Block 0x4ff
[0x4ff:0x508]
---
Predecessors: [0x487]
Successors: [0x509]
---
0x4ff PUSH1 0x32
0x501 GAS
0x502 SUB
0x503 CALL
0x504 ISZERO
0x505 PUSH2 0x0
0x508 JUMPI
---
0x4ff: V474 = 0x32
0x501: V475 = GAS
0x502: V476 = SUB V475 0x32
0x503: V477 = CALL V476 V448 0x0 V465 V470 V465 0x0
0x504: V478 = ISZERO V477
0x505: V479 = 0x0
0x508: THROWI V478
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, V440, V448, 0xf2fde38b, V468, 0x0, V465, V470, V465, 0x0, V448]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xe2, V98, V100, V102, V104, V440, V448, 0xf2fde38b, V468]

================================

Block 0x509
[0x509:0x56d]
---
Predecessors: [0x4ff]
Successors: [0x56e]
---
0x509 POP
0x50a POP
0x50b PUSH1 0x40
0x50d DUP1
0x50e MLOAD
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 CALLER
0x518 DUP2
0x519 AND
0x51a DUP3
0x51b MSTORE
0x51c DUP1
0x51d DUP6
0x51e AND
0x51f PUSH1 0x20
0x521 DUP4
0x522 ADD
0x523 MSTORE
0x524 DUP9
0x525 AND
0x526 DUP2
0x527 DUP4
0x528 ADD
0x529 MSTORE
0x52a PUSH1 0x60
0x52c DUP2
0x52d ADD
0x52e DUP8
0x52f SWAP1
0x530 MSTORE
0x531 PUSH1 0x80
0x533 DUP2
0x534 ADD
0x535 DUP7
0x536 SWAP1
0x537 MSTORE
0x538 DUP5
0x539 ISZERO
0x53a ISZERO
0x53b PUSH1 0xa0
0x53d DUP3
0x53e ADD
0x53f MSTORE
0x540 SWAP1
0x541 MLOAD
0x542 PUSH32 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5
0x563 SWAP3
0x564 POP
0x565 SWAP1
0x566 DUP2
0x567 SWAP1
0x568 SUB
0x569 PUSH1 0xc0
0x56b ADD
0x56c SWAP1
0x56d LOG1
---
0x50b: V480 = 0x40
0x50e: V481 = M[0x40]
0x50f: V482 = 0x1
0x511: V483 = 0xa0
0x513: V484 = 0x2
0x515: V485 = EXP 0x2 0xa0
0x516: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V487 = CALLER
0x519: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x51b: M[V481] = V488
0x51e: V489 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V490 = 0x20
0x522: V491 = ADD V481 0x20
0x523: M[V491] = V489
0x525: V492 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x528: V493 = ADD 0x40 V481
0x529: M[V493] = V492
0x52a: V494 = 0x60
0x52d: V495 = ADD V481 0x60
0x530: M[V495] = V100
0x531: V496 = 0x80
0x534: V497 = ADD V481 0x80
0x537: M[V497] = V102
0x539: V498 = ISZERO V104
0x53a: V499 = ISZERO V498
0x53b: V500 = 0xa0
0x53e: V501 = ADD V481 0xa0
0x53f: M[V501] = V499
0x541: V502 = M[0x40]
0x542: V503 = 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5
0x568: V504 = SUB V481 V502
0x569: V505 = 0xc0
0x56b: V506 = ADD 0xc0 V504
0x56d: LOG V502 V506 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, V440, V448, 0xf2fde38b, V468]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, V440]

================================

Block 0x56e
[0x56e:0x575]
---
Predecessors: [0x509]
Successors: [0xe2]
---
0x56e JUMPDEST
0x56f SWAP5
0x570 SWAP4
0x571 POP
0x572 POP
0x573 POP
0x574 POP
0x575 JUMP
---
0x56e: JUMPDEST 
0x575: JUMP 0xe2
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, V440]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V10, V440]

================================

Block 0x576
[0x576:0x58c]
---
Predecessors: [0x139]
Successors: [0x58d, 0x591]
---
0x576 JUMPDEST
0x577 PUSH1 0x0
0x579 SLOAD
0x57a CALLER
0x57b PUSH1 0x1
0x57d PUSH1 0xa0
0x57f PUSH1 0x2
0x581 EXP
0x582 SUB
0x583 SWAP1
0x584 DUP2
0x585 AND
0x586 SWAP2
0x587 AND
0x588 EQ
0x589 PUSH2 0x591
0x58c JUMPI
---
0x576: JUMPDEST 
0x577: V507 = 0x0
0x579: V508 = S[0x0]
0x57a: V509 = CALLER
0x57b: V510 = 0x1
0x57d: V511 = 0xa0
0x57f: V512 = 0x2
0x581: V513 = EXP 0x2 0xa0
0x582: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x587: V516 = AND V508 0xffffffffffffffffffffffffffffffffffffffff
0x588: V517 = EQ V516 V515
0x589: V518 = 0x591
0x58c: JUMPI 0x591 V517
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V122]

================================

Block 0x58d
[0x58d:0x590]
---
Predecessors: [0x576]
Successors: []
---
0x58d PUSH2 0x0
0x590 JUMP
---
0x58d: V519 = 0x0
0x590: THROW 
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V122]

================================

Block 0x591
[0x591:0x5fa]
---
Predecessors: [0x576]
Successors: [0x5fb]
---
0x591 JUMPDEST
0x592 PUSH1 0x0
0x594 DUP1
0x595 SLOAD
0x596 PUSH1 0x40
0x598 MLOAD
0x599 PUSH1 0x1
0x59b PUSH1 0xa0
0x59d PUSH1 0x2
0x59f EXP
0x5a0 SUB
0x5a1 DUP1
0x5a2 DUP6
0x5a3 AND
0x5a4 SWAP4
0x5a5 SWAP3
0x5a6 AND
0x5a7 SWAP2
0x5a8 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5c9 SWAP2
0x5ca LOG3
0x5cb PUSH1 0x0
0x5cd DUP1
0x5ce SLOAD
0x5cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e4 NOT
0x5e5 AND
0x5e6 PUSH13 0x1000000000000000000000000
0x5f4 DUP4
0x5f5 DUP2
0x5f6 MUL
0x5f7 DIV
0x5f8 OR
0x5f9 SWAP1
0x5fa SSTORE
---
0x591: JUMPDEST 
0x592: V520 = 0x0
0x595: V521 = S[0x0]
0x596: V522 = 0x40
0x598: V523 = M[0x40]
0x599: V524 = 0x1
0x59b: V525 = 0xa0
0x59d: V526 = 0x2
0x59f: V527 = EXP 0x2 0xa0
0x5a0: V528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V529 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x5a6: V530 = AND V521 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V531 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5ca: LOG V523 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V530 V529
0x5cb: V532 = 0x0
0x5ce: V533 = S[0x0]
0x5cf: V534 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e4: V535 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5e5: V536 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V533
0x5e6: V537 = 0x1000000000000000000000000
0x5f6: V538 = MUL 0x1000000000000000000000000 V122
0x5f7: V539 = DIV V538 0x1000000000000000000000000
0x5f8: V540 = OR V539 V536
0x5fa: S[0x0] = V540
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5b, V122]

================================

Block 0x5fb
[0x5fb:0x5fb]
---
Predecessors: [0x591]
Successors: [0x5fc]
---
0x5fb JUMPDEST
---
0x5fb: JUMPDEST 
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V122]

================================

Block 0x5fc
[0x5fc:0x5fe]
---
Predecessors: [0x5fb]
Successors: [0x5b]
---
0x5fc JUMPDEST
0x5fd POP
0x5fe JUMP
---
0x5fc: JUMPDEST 
0x5fe: JUMP 0x5b
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x5ff
[0x5ff:0x608]
---
Predecessors: []
Successors: [0x609]
---
0x5ff PUSH1 0x60
0x601 PUSH1 0x40
0x603 MSTORE
0x604 CALLVALUE
0x605 PUSH2 0x0
0x608 JUMPI
---
0x5ff: V541 = 0x60
0x601: V542 = 0x40
0x603: M[0x40] = 0x60
0x604: V543 = CALLVALUE
0x605: V544 = 0x0
0x608: THROWI V543
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x609
[0x609:0x62e]
---
Predecessors: [0x5ff]
Successors: [0x62f]
---
0x609 PUSH1 0x40
0x60b MLOAD
0x60c PUSH1 0x80
0x60e DUP1
0x60f PUSH2 0x86a
0x612 DUP4
0x613 CODECOPY
0x614 DUP2
0x615 ADD
0x616 PUSH1 0x40
0x618 SWAP1
0x619 DUP2
0x61a MSTORE
0x61b DUP2
0x61c MLOAD
0x61d PUSH1 0x20
0x61f DUP4
0x620 ADD
0x621 MLOAD
0x622 SWAP2
0x623 DUP4
0x624 ADD
0x625 MLOAD
0x626 PUSH1 0x60
0x628 SWAP1
0x629 SWAP4
0x62a ADD
0x62b MLOAD
0x62c SWAP1
0x62d SWAP3
0x62e SWAP1
---
0x609: V545 = 0x40
0x60b: V546 = M[0x40]
0x60c: V547 = 0x80
0x60f: V548 = 0x86a
0x613: CODECOPY V546 0x86a 0x80
0x615: V549 = ADD V546 0x80
0x616: V550 = 0x40
0x61a: M[0x40] = V549
0x61c: V551 = M[V546]
0x61d: V552 = 0x20
0x620: V553 = ADD V546 0x20
0x621: V554 = M[V553]
0x624: V555 = ADD V546 0x40
0x625: V556 = M[V555]
0x626: V557 = 0x60
0x62a: V558 = ADD V546 0x60
0x62b: V559 = M[V558]
---
Entry stack: []
Stack pops: 0
Stack additions: [V551, V554, V556, V559]
Exit stack: [V551, V554, V556, V559]

================================

Block 0x62f
[0x62f:0x62f]
---
Predecessors: [0x609]
Successors: [0x630]
---
0x62f JUMPDEST
---
0x62f: JUMPDEST 
---
Entry stack: [V551, V554, V556, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V551, V554, V556, V559]

================================

Block 0x630
[0x630:0x653]
---
Predecessors: [0x62f]
Successors: [0x654]
---
0x630 JUMPDEST
0x631 PUSH1 0x0
0x633 DUP1
0x634 SLOAD
0x635 PUSH1 0x1
0x637 PUSH1 0xa0
0x639 PUSH1 0x2
0x63b EXP
0x63c SUB
0x63d NOT
0x63e AND
0x63f PUSH13 0x1000000000000000000000000
0x64d CALLER
0x64e DUP2
0x64f MUL
0x650 DIV
0x651 OR
0x652 SWAP1
0x653 SSTORE
---
0x630: JUMPDEST 
0x631: V560 = 0x0
0x634: V561 = S[0x0]
0x635: V562 = 0x1
0x637: V563 = 0xa0
0x639: V564 = 0x2
0x63b: V565 = EXP 0x2 0xa0
0x63c: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63d: V567 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x63e: V568 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V561
0x63f: V569 = 0x1000000000000000000000000
0x64d: V570 = CALLER
0x64f: V571 = MUL 0x1000000000000000000000000 V570
0x650: V572 = DIV V571 0x1000000000000000000000000
0x651: V573 = OR V572 V568
0x653: S[0x0] = V573
---
Entry stack: [V551, V554, V556, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V551, V554, V556, V559]

================================

Block 0x654
[0x654:0x6ec]
---
Predecessors: [0x630]
Successors: [0x6ed]
---
0x654 JUMPDEST
0x655 PUSH1 0x1
0x657 DUP1
0x658 SLOAD
0x659 PUSH1 0x1
0x65b PUSH1 0xa0
0x65d PUSH1 0x2
0x65f EXP
0x660 SUB
0x661 NOT
0x662 AND
0x663 PUSH13 0x1000000000000000000000000
0x671 DUP7
0x672 DUP2
0x673 MUL
0x674 DIV
0x675 OR
0x676 SWAP1
0x677 SSTORE
0x678 PUSH1 0x2
0x67a DUP4
0x67b SWAP1
0x67c SSTORE
0x67d PUSH1 0x3
0x67f DUP3
0x680 SWAP1
0x681 SSTORE
0x682 PUSH1 0x4
0x684 DUP1
0x685 SLOAD
0x686 PUSH1 0xff
0x688 NOT
0x689 AND
0x68a PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x6ab DUP4
0x6ac DUP2
0x6ad MUL
0x6ae DIV
0x6af OR
0x6b0 SWAP1
0x6b1 DUP2
0x6b2 SWAP1
0x6b3 SSTORE
0x6b4 PUSH1 0x40
0x6b6 DUP1
0x6b7 MLOAD
0x6b8 PUSH1 0xff
0x6ba SWAP1
0x6bb SWAP3
0x6bc AND
0x6bd ISZERO
0x6be ISZERO
0x6bf DUP3
0x6c0 MSTORE
0x6c1 MLOAD
0x6c2 PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6e3 SWAP2
0x6e4 PUSH1 0x20
0x6e6 SWAP1
0x6e7 DUP3
0x6e8 SWAP1
0x6e9 SUB
0x6ea ADD
0x6eb SWAP1
0x6ec LOG1
---
0x654: JUMPDEST 
0x655: V574 = 0x1
0x658: V575 = S[0x1]
0x659: V576 = 0x1
0x65b: V577 = 0xa0
0x65d: V578 = 0x2
0x65f: V579 = EXP 0x2 0xa0
0x660: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x661: V581 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x662: V582 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V575
0x663: V583 = 0x1000000000000000000000000
0x673: V584 = MUL 0x1000000000000000000000000 V551
0x674: V585 = DIV V584 0x1000000000000000000000000
0x675: V586 = OR V585 V582
0x677: S[0x1] = V586
0x678: V587 = 0x2
0x67c: S[0x2] = V554
0x67d: V588 = 0x3
0x681: S[0x3] = V556
0x682: V589 = 0x4
0x685: V590 = S[0x4]
0x686: V591 = 0xff
0x688: V592 = NOT 0xff
0x689: V593 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V590
0x68a: V594 = 0x100000000000000000000000000000000000000000000000000000000000000
0x6ad: V595 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V559
0x6ae: V596 = DIV V595 0x100000000000000000000000000000000000000000000000000000000000000
0x6af: V597 = OR V596 V593
0x6b3: S[0x4] = V597
0x6b4: V598 = 0x40
0x6b7: V599 = M[0x40]
0x6b8: V600 = 0xff
0x6bc: V601 = AND V597 0xff
0x6bd: V602 = ISZERO V601
0x6be: V603 = ISZERO V602
0x6c0: M[V599] = V603
0x6c1: V604 = M[0x40]
0x6c2: V605 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6e4: V606 = 0x20
0x6e9: V607 = SUB V599 V604
0x6ea: V608 = ADD V607 0x20
0x6ec: LOG V604 V608 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
---
Entry stack: [V551, V554, V556, V559]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V551, V554, V556, V559]

================================

Block 0x6ed
[0x6ed:0x6f1]
---
Predecessors: [0x654]
Successors: [0x6f2]
---
0x6ed JUMPDEST
0x6ee POP
0x6ef POP
0x6f0 POP
0x6f1 POP
---
0x6ed: JUMPDEST 
---
Entry stack: [V551, V554, V556, V559]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x6f2
[0x6f2:0x70a]
---
Predecessors: [0x6ed]
Successors: [0x70b]
---
0x6f2 JUMPDEST
0x6f3 PUSH2 0x769
0x6f6 DUP1
0x6f7 PUSH2 0x101
0x6fa PUSH1 0x0
0x6fc CODECOPY
0x6fd PUSH1 0x0
0x6ff RETURN
0x700 PUSH1 0x60
0x702 PUSH1 0x40
0x704 MSTORE
0x705 CALLDATASIZE
0x706 ISZERO
0x707 PUSH2 0x8d
0x70a JUMPI
---
0x6f2: JUMPDEST 
0x6f3: V609 = 0x769
0x6f7: V610 = 0x101
0x6fa: V611 = 0x0
0x6fc: CODECOPY 0x0 0x101 0x769
0x6fd: V612 = 0x0
0x6ff: RETURN 0x0 0x769
0x700: V613 = 0x60
0x702: V614 = 0x40
0x704: M[0x40] = 0x60
0x705: V615 = CALLDATASIZE
0x706: V616 = ISZERO V615
0x707: V617 = 0x8d
0x70a: THROWI V616
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x70b
[0x70b:0x71e]
---
Predecessors: [0x6f2]
Successors: [0x71f]
---
0x70b PUSH1 0xe0
0x70d PUSH1 0x2
0x70f EXP
0x710 PUSH1 0x0
0x712 CALLDATALOAD
0x713 DIV
0x714 PUSH4 0x2170ebf7
0x719 DUP2
0x71a EQ
0x71b PUSH2 0x9e
0x71e JUMPI
---
0x70b: V618 = 0xe0
0x70d: V619 = 0x2
0x70f: V620 = EXP 0x2 0xe0
0x710: V621 = 0x0
0x712: V622 = CALLDATALOAD 0x0
0x713: V623 = DIV V622 0x100000000000000000000000000000000000000000000000000000000
0x714: V624 = 0x2170ebf7
0x71a: V625 = EQ V623 0x2170ebf7
0x71b: V626 = 0x9e
0x71e: THROWI V625
---
Entry stack: []
Stack pops: 0
Stack additions: [V623]
Exit stack: [V623]

================================

Block 0x71f
[0x71f:0x729]
---
Predecessors: [0x70b]
Successors: [0x72a]
---
0x71f DUP1
0x720 PUSH4 0x38d52e0f
0x725 EQ
0x726 PUSH2 0xc2
0x729 JUMPI
---
0x720: V627 = 0x38d52e0f
0x725: V628 = EQ 0x38d52e0f V623
0x726: V629 = 0xc2
0x729: THROWI V628
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x72a
[0x72a:0x734]
---
Predecessors: [0x71f]
Successors: [0x735]
---
0x72a DUP1
0x72b PUSH4 0x4b750334
0x730 EQ
0x731 PUSH2 0xeb
0x734 JUMPI
---
0x72b: V630 = 0x4b750334
0x730: V631 = EQ 0x4b750334 V623
0x731: V632 = 0xeb
0x734: THROWI V631
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x735
[0x735:0x73f]
---
Predecessors: [0x72a]
Successors: [0x740]
---
0x735 DUP1
0x736 PUSH4 0x4ca50f59
0x73b EQ
0x73c PUSH2 0x10a
0x73f JUMPI
---
0x736: V633 = 0x4ca50f59
0x73b: V634 = EQ 0x4ca50f59 V623
0x73c: V635 = 0x10a
0x73f: THROWI V634
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x740
[0x740:0x74a]
---
Predecessors: [0x735]
Successors: [0x74b]
---
0x740 DUP1
0x741 PUSH4 0x8da5cb5b
0x746 EQ
0x747 PUSH2 0x12b
0x74a JUMPI
---
0x741: V636 = 0x8da5cb5b
0x746: V637 = EQ 0x8da5cb5b V623
0x747: V638 = 0x12b
0x74a: THROWI V637
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x74b
[0x74b:0x755]
---
Predecessors: [0x740]
Successors: [0x756]
---
0x74b DUP1
0x74c PUSH4 0x976a8435
0x751 EQ
0x752 PUSH2 0x154
0x755 JUMPI
---
0x74c: V639 = 0x976a8435
0x751: V640 = EQ 0x976a8435 V623
0x752: V641 = 0x154
0x755: THROWI V640
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x756
[0x756:0x760]
---
Predecessors: [0x74b]
Successors: [0x761]
---
0x756 DUP1
0x757 PUSH4 0xc34764cf
0x75c EQ
0x75d PUSH2 0x173
0x760 JUMPI
---
0x757: V642 = 0xc34764cf
0x75c: V643 = EQ 0xc34764cf V623
0x75d: V644 = 0x173
0x760: THROWI V643
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x761
[0x761:0x76b]
---
Predecessors: [0x756]
Successors: [0x76c]
---
0x761 DUP1
0x762 PUSH4 0xc60ccb0e
0x767 EQ
0x768 PUSH2 0x19a
0x76b JUMPI
---
0x762: V645 = 0xc60ccb0e
0x767: V646 = EQ 0xc60ccb0e V623
0x768: V647 = 0x19a
0x76b: THROWI V646
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x76c
[0x76c:0x776]
---
Predecessors: [0x761]
Successors: [0x777]
---
0x76c DUP1
0x76d PUSH4 0xcd53a3b7
0x772 EQ
0x773 PUSH2 0x1a4
0x776 JUMPI
---
0x76d: V648 = 0xcd53a3b7
0x772: V649 = EQ 0xcd53a3b7 V623
0x773: V650 = 0x1a4
0x776: THROWI V649
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x777
[0x777:0x781]
---
Predecessors: [0x76c]
Successors: [0x782]
---
0x777 DUP1
0x778 PUSH4 0xce5e84a3
0x77d EQ
0x77e PUSH2 0x1c8
0x781 JUMPI
---
0x778: V651 = 0xce5e84a3
0x77d: V652 = EQ 0xce5e84a3 V623
0x77e: V653 = 0x1c8
0x781: THROWI V652
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x782
[0x782:0x78c]
---
Predecessors: [0x777]
Successors: [0x78d]
---
0x782 DUP1
0x783 PUSH4 0xf2fde38b
0x788 EQ
0x789 PUSH2 0x1da
0x78c JUMPI
---
0x783: V654 = 0xf2fde38b
0x788: V655 = EQ 0xf2fde38b V623
0x789: V656 = 0x1da
0x78c: THROWI V655
---
Entry stack: [V623]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V623]

================================

Block 0x78d
[0x78d:0x790]
---
Predecessors: [0x782]
Successors: [0x791]
---
0x78d JUMPDEST
0x78e PUSH2 0x9c
---
0x78d: JUMPDEST 
0x78e: V657 = 0x9c
---
Entry stack: [V623]
Stack pops: 0
Stack additions: [0x9c]
Exit stack: [V623, 0x9c]

================================

Block 0x791
[0x791:0x799]
---
Predecessors: [0x78d]
Successors: [0x79a]
---
0x791 JUMPDEST
0x792 PUSH2 0x99
0x795 PUSH2 0x1ec
0x798 JUMP
0x799 JUMPDEST
---
0x791: JUMPDEST 
0x792: V658 = 0x99
0x795: V659 = 0x1ec
0x798: THROW 
0x799: JUMPDEST 
---
Entry stack: [V623, 0x9c]
Stack pops: 0
Stack additions: [0x99]
Exit stack: []

================================

Block 0x79a
[0x79a:0x7a3]
---
Predecessors: [0x791]
Successors: [0x7a4]
---
0x79a JUMPDEST
0x79b JUMP
0x79c JUMPDEST
0x79d STOP
0x79e JUMPDEST
0x79f CALLVALUE
0x7a0 PUSH2 0x0
0x7a3 JUMPI
---
0x79a: JUMPDEST 
0x79b: JUMP S0
0x79c: JUMPDEST 
0x79d: STOP 
0x79e: JUMPDEST 
0x79f: V660 = CALLVALUE
0x7a0: V661 = 0x0
0x7a3: THROWI V660
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x7a4
[0x7a4:0x7c7]
---
Predecessors: [0x79a]
Successors: [0x7c8]
---
0x7a4 PUSH2 0xae
0x7a7 PUSH1 0x4
0x7a9 CALLDATALOAD
0x7aa PUSH2 0x411
0x7ad JUMP
0x7ae JUMPDEST
0x7af PUSH1 0x40
0x7b1 DUP1
0x7b2 MLOAD
0x7b3 SWAP2
0x7b4 ISZERO
0x7b5 ISZERO
0x7b6 DUP3
0x7b7 MSTORE
0x7b8 MLOAD
0x7b9 SWAP1
0x7ba DUP2
0x7bb SWAP1
0x7bc SUB
0x7bd PUSH1 0x20
0x7bf ADD
0x7c0 SWAP1
0x7c1 RETURN
0x7c2 JUMPDEST
0x7c3 CALLVALUE
0x7c4 PUSH2 0x0
0x7c7 JUMPI
---
0x7a4: V662 = 0xae
0x7a7: V663 = 0x4
0x7a9: V664 = CALLDATALOAD 0x4
0x7aa: V665 = 0x411
0x7ad: THROW 
0x7ae: JUMPDEST 
0x7af: V666 = 0x40
0x7b2: V667 = M[0x40]
0x7b4: V668 = ISZERO S0
0x7b5: V669 = ISZERO V668
0x7b7: M[V667] = V669
0x7b8: V670 = M[0x40]
0x7bc: V671 = SUB V667 V670
0x7bd: V672 = 0x20
0x7bf: V673 = ADD 0x20 V671
0x7c1: RETURN V670 V673
0x7c2: JUMPDEST 
0x7c3: V674 = CALLVALUE
0x7c4: V675 = 0x0
0x7c7: THROWI V674
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae, V664]
Exit stack: []

================================

Block 0x7c8
[0x7c8:0x7f0]
---
Predecessors: [0x7a4]
Successors: [0x7f1]
---
0x7c8 PUSH2 0xcf
0x7cb PUSH2 0x4a3
0x7ce JUMP
0x7cf JUMPDEST
0x7d0 PUSH1 0x40
0x7d2 DUP1
0x7d3 MLOAD
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0xa0
0x7d8 PUSH1 0x2
0x7da EXP
0x7db SUB
0x7dc SWAP1
0x7dd SWAP3
0x7de AND
0x7df DUP3
0x7e0 MSTORE
0x7e1 MLOAD
0x7e2 SWAP1
0x7e3 DUP2
0x7e4 SWAP1
0x7e5 SUB
0x7e6 PUSH1 0x20
0x7e8 ADD
0x7e9 SWAP1
0x7ea RETURN
0x7eb JUMPDEST
0x7ec CALLVALUE
0x7ed PUSH2 0x0
0x7f0 JUMPI
---
0x7c8: V676 = 0xcf
0x7cb: V677 = 0x4a3
0x7ce: THROW 
0x7cf: JUMPDEST 
0x7d0: V678 = 0x40
0x7d3: V679 = M[0x40]
0x7d4: V680 = 0x1
0x7d6: V681 = 0xa0
0x7d8: V682 = 0x2
0x7da: V683 = EXP 0x2 0xa0
0x7db: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7de: V685 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7e0: M[V679] = V685
0x7e1: V686 = M[0x40]
0x7e5: V687 = SUB V679 V686
0x7e6: V688 = 0x20
0x7e8: V689 = ADD 0x20 V687
0x7ea: RETURN V686 V689
0x7eb: JUMPDEST 
0x7ec: V690 = CALLVALUE
0x7ed: V691 = 0x0
0x7f0: THROWI V690
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcf]
Exit stack: []

================================

Block 0x7f1
[0x7f1:0x80f]
---
Predecessors: [0x7c8]
Successors: [0x810]
---
0x7f1 PUSH2 0xf8
0x7f4 PUSH2 0x4b2
0x7f7 JUMP
0x7f8 JUMPDEST
0x7f9 PUSH1 0x40
0x7fb DUP1
0x7fc MLOAD
0x7fd SWAP2
0x7fe DUP3
0x7ff MSTORE
0x800 MLOAD
0x801 SWAP1
0x802 DUP2
0x803 SWAP1
0x804 SUB
0x805 PUSH1 0x20
0x807 ADD
0x808 SWAP1
0x809 RETURN
0x80a JUMPDEST
0x80b CALLVALUE
0x80c PUSH2 0x0
0x80f JUMPI
---
0x7f1: V692 = 0xf8
0x7f4: V693 = 0x4b2
0x7f7: THROW 
0x7f8: JUMPDEST 
0x7f9: V694 = 0x40
0x7fc: V695 = M[0x40]
0x7ff: M[V695] = S0
0x800: V696 = M[0x40]
0x804: V697 = SUB V695 V696
0x805: V698 = 0x20
0x807: V699 = ADD 0x20 V697
0x809: RETURN V696 V699
0x80a: JUMPDEST 
0x80b: V700 = CALLVALUE
0x80c: V701 = 0x0
0x80f: THROWI V700
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf8]
Exit stack: []

================================

Block 0x810
[0x810:0x830]
---
Predecessors: [0x7f1]
Successors: [0x831]
---
0x810 PUSH2 0xae
0x813 PUSH2 0x4b8
0x816 JUMP
0x817 JUMPDEST
0x818 PUSH1 0x40
0x81a DUP1
0x81b MLOAD
0x81c SWAP2
0x81d ISZERO
0x81e ISZERO
0x81f DUP3
0x820 MSTORE
0x821 MLOAD
0x822 SWAP1
0x823 DUP2
0x824 SWAP1
0x825 SUB
0x826 PUSH1 0x20
0x828 ADD
0x829 SWAP1
0x82a RETURN
0x82b JUMPDEST
0x82c CALLVALUE
0x82d PUSH2 0x0
0x830 JUMPI
---
0x810: V702 = 0xae
0x813: V703 = 0x4b8
0x816: THROW 
0x817: JUMPDEST 
0x818: V704 = 0x40
0x81b: V705 = M[0x40]
0x81d: V706 = ISZERO S0
0x81e: V707 = ISZERO V706
0x820: M[V705] = V707
0x821: V708 = M[0x40]
0x825: V709 = SUB V705 V708
0x826: V710 = 0x20
0x828: V711 = ADD 0x20 V709
0x82a: RETURN V708 V711
0x82b: JUMPDEST 
0x82c: V712 = CALLVALUE
0x82d: V713 = 0x0
0x830: THROWI V712
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae]
Exit stack: []

================================

Block 0x831
[0x831:0x859]
---
Predecessors: [0x810]
Successors: [0x85a]
---
0x831 PUSH2 0xcf
0x834 PUSH2 0x4c1
0x837 JUMP
0x838 JUMPDEST
0x839 PUSH1 0x40
0x83b DUP1
0x83c MLOAD
0x83d PUSH1 0x1
0x83f PUSH1 0xa0
0x841 PUSH1 0x2
0x843 EXP
0x844 SUB
0x845 SWAP1
0x846 SWAP3
0x847 AND
0x848 DUP3
0x849 MSTORE
0x84a MLOAD
0x84b SWAP1
0x84c DUP2
0x84d SWAP1
0x84e SUB
0x84f PUSH1 0x20
0x851 ADD
0x852 SWAP1
0x853 RETURN
0x854 JUMPDEST
0x855 CALLVALUE
0x856 PUSH2 0x0
0x859 JUMPI
---
0x831: V714 = 0xcf
0x834: V715 = 0x4c1
0x837: THROW 
0x838: JUMPDEST 
0x839: V716 = 0x40
0x83c: V717 = M[0x40]
0x83d: V718 = 0x1
0x83f: V719 = 0xa0
0x841: V720 = 0x2
0x843: V721 = EXP 0x2 0xa0
0x844: V722 = SUB 0x10000000000000000000000000000000000000000 0x1
0x847: V723 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x849: M[V717] = V723
0x84a: V724 = M[0x40]
0x84e: V725 = SUB V717 V724
0x84f: V726 = 0x20
0x851: V727 = ADD 0x20 V725
0x853: RETURN V724 V727
0x854: JUMPDEST 
0x855: V728 = CALLVALUE
0x856: V729 = 0x0
0x859: THROWI V728
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcf]
Exit stack: []

================================

Block 0x85a
[0x85a:0x878]
---
Predecessors: [0x831]
Successors: [0x879]
---
0x85a PUSH2 0xf8
0x85d PUSH2 0x4d0
0x860 JUMP
0x861 JUMPDEST
0x862 PUSH1 0x40
0x864 DUP1
0x865 MLOAD
0x866 SWAP2
0x867 DUP3
0x868 MSTORE
0x869 MLOAD
0x86a SWAP1
0x86b DUP2
0x86c SWAP1
0x86d SUB
0x86e PUSH1 0x20
0x870 ADD
0x871 SWAP1
0x872 RETURN
0x873 JUMPDEST
0x874 CALLVALUE
0x875 PUSH2 0x0
0x878 JUMPI
---
0x85a: V730 = 0xf8
0x85d: V731 = 0x4d0
0x860: THROW 
0x861: JUMPDEST 
0x862: V732 = 0x40
0x865: V733 = M[0x40]
0x868: M[V733] = S0
0x869: V734 = M[0x40]
0x86d: V735 = SUB V733 V734
0x86e: V736 = 0x20
0x870: V737 = ADD 0x20 V735
0x872: RETURN V734 V737
0x873: JUMPDEST 
0x874: V738 = CALLVALUE
0x875: V739 = 0x0
0x878: THROWI V738
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf8]
Exit stack: []

================================

Block 0x879
[0x879:0x8a9]
---
Predecessors: [0x85a]
Successors: [0x8aa]
---
0x879 PUSH2 0xae
0x87c PUSH1 0x4
0x87e CALLDATALOAD
0x87f PUSH1 0x24
0x881 CALLDATALOAD
0x882 PUSH2 0x4d6
0x885 JUMP
0x886 JUMPDEST
0x887 PUSH1 0x40
0x889 DUP1
0x88a MLOAD
0x88b SWAP2
0x88c ISZERO
0x88d ISZERO
0x88e DUP3
0x88f MSTORE
0x890 MLOAD
0x891 SWAP1
0x892 DUP2
0x893 SWAP1
0x894 SUB
0x895 PUSH1 0x20
0x897 ADD
0x898 SWAP1
0x899 RETURN
0x89a JUMPDEST
0x89b PUSH2 0x9c
0x89e PUSH2 0x1ec
0x8a1 JUMP
0x8a2 JUMPDEST
0x8a3 STOP
0x8a4 JUMPDEST
0x8a5 CALLVALUE
0x8a6 PUSH2 0x0
0x8a9 JUMPI
---
0x879: V740 = 0xae
0x87c: V741 = 0x4
0x87e: V742 = CALLDATALOAD 0x4
0x87f: V743 = 0x24
0x881: V744 = CALLDATALOAD 0x24
0x882: V745 = 0x4d6
0x885: THROW 
0x886: JUMPDEST 
0x887: V746 = 0x40
0x88a: V747 = M[0x40]
0x88c: V748 = ISZERO S0
0x88d: V749 = ISZERO V748
0x88f: M[V747] = V749
0x890: V750 = M[0x40]
0x894: V751 = SUB V747 V750
0x895: V752 = 0x20
0x897: V753 = ADD 0x20 V751
0x899: RETURN V750 V753
0x89a: JUMPDEST 
0x89b: V754 = 0x9c
0x89e: V755 = 0x1ec
0x8a1: THROW 
0x8a2: JUMPDEST 
0x8a3: STOP 
0x8a4: JUMPDEST 
0x8a5: V756 = CALLVALUE
0x8a6: V757 = 0x0
0x8a9: THROWI V756
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae, V742, V744, 0x9c]
Exit stack: []

================================

Block 0x8aa
[0x8aa:0x8cd]
---
Predecessors: [0x879]
Successors: [0x8ce]
---
0x8aa PUSH2 0xae
0x8ad PUSH1 0x4
0x8af CALLDATALOAD
0x8b0 PUSH2 0x5ab
0x8b3 JUMP
0x8b4 JUMPDEST
0x8b5 PUSH1 0x40
0x8b7 DUP1
0x8b8 MLOAD
0x8b9 SWAP2
0x8ba ISZERO
0x8bb ISZERO
0x8bc DUP3
0x8bd MSTORE
0x8be MLOAD
0x8bf SWAP1
0x8c0 DUP2
0x8c1 SWAP1
0x8c2 SUB
0x8c3 PUSH1 0x20
0x8c5 ADD
0x8c6 SWAP1
0x8c7 RETURN
0x8c8 JUMPDEST
0x8c9 CALLVALUE
0x8ca PUSH2 0x0
0x8cd JUMPI
---
0x8aa: V758 = 0xae
0x8ad: V759 = 0x4
0x8af: V760 = CALLDATALOAD 0x4
0x8b0: V761 = 0x5ab
0x8b3: THROW 
0x8b4: JUMPDEST 
0x8b5: V762 = 0x40
0x8b8: V763 = M[0x40]
0x8ba: V764 = ISZERO S0
0x8bb: V765 = ISZERO V764
0x8bd: M[V763] = V765
0x8be: V766 = M[0x40]
0x8c2: V767 = SUB V763 V766
0x8c3: V768 = 0x20
0x8c5: V769 = ADD 0x20 V767
0x8c7: RETURN V766 V769
0x8c8: JUMPDEST 
0x8c9: V770 = CALLVALUE
0x8ca: V771 = 0x0
0x8cd: THROWI V770
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae, V760]
Exit stack: []

================================

Block 0x8ce
[0x8ce:0x8df]
---
Predecessors: [0x8aa]
Successors: [0x8e0]
---
0x8ce PUSH2 0x9c
0x8d1 PUSH1 0x4
0x8d3 CALLDATALOAD
0x8d4 PUSH2 0x671
0x8d7 JUMP
0x8d8 JUMPDEST
0x8d9 STOP
0x8da JUMPDEST
0x8db CALLVALUE
0x8dc PUSH2 0x0
0x8df JUMPI
---
0x8ce: V772 = 0x9c
0x8d1: V773 = 0x4
0x8d3: V774 = CALLDATALOAD 0x4
0x8d4: V775 = 0x671
0x8d7: THROW 
0x8d8: JUMPDEST 
0x8d9: STOP 
0x8da: JUMPDEST 
0x8db: V776 = CALLVALUE
0x8dc: V777 = 0x0
0x8df: THROWI V776
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9c, V774]
Exit stack: []

================================

Block 0x8e0
[0x8e0:0x8fe]
---
Predecessors: [0x8ce]
Successors: [0x8ff]
---
0x8e0 PUSH2 0x9c
0x8e3 PUSH1 0x4
0x8e5 CALLDATALOAD
0x8e6 PUSH2 0x6e0
0x8e9 JUMP
0x8ea JUMPDEST
0x8eb STOP
0x8ec JUMPDEST
0x8ed PUSH1 0x4
0x8ef SLOAD
0x8f0 PUSH1 0x0
0x8f2 SWAP1
0x8f3 DUP2
0x8f4 SWAP1
0x8f5 DUP2
0x8f6 SWAP1
0x8f7 PUSH1 0xff
0x8f9 AND
0x8fa DUP1
0x8fb PUSH2 0x212
0x8fe JUMPI
---
0x8e0: V778 = 0x9c
0x8e3: V779 = 0x4
0x8e5: V780 = CALLDATALOAD 0x4
0x8e6: V781 = 0x6e0
0x8e9: THROW 
0x8ea: JUMPDEST 
0x8eb: STOP 
0x8ec: JUMPDEST 
0x8ed: V782 = 0x4
0x8ef: V783 = S[0x4]
0x8f0: V784 = 0x0
0x8f7: V785 = 0xff
0x8f9: V786 = AND 0xff V783
0x8fb: V787 = 0x212
0x8fe: THROWI V786
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9c, V780, V786, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x8ff
[0x8ff:0x911]
---
Predecessors: [0x8e0]
Successors: [0x912]
---
0x8ff POP
0x900 PUSH1 0x0
0x902 SLOAD
0x903 CALLER
0x904 PUSH1 0x1
0x906 PUSH1 0xa0
0x908 PUSH1 0x2
0x90a EXP
0x90b SUB
0x90c SWAP1
0x90d DUP2
0x90e AND
0x90f SWAP2
0x910 AND
0x911 EQ
---
0x900: V788 = 0x0
0x902: V789 = S[0x0]
0x903: V790 = CALLER
0x904: V791 = 0x1
0x906: V792 = 0xa0
0x908: V793 = 0x2
0x90a: V794 = EXP 0x2 0xa0
0x90b: V795 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90e: V796 = AND 0xffffffffffffffffffffffffffffffffffffffff V790
0x910: V797 = AND V789 0xffffffffffffffffffffffffffffffffffffffff
0x911: V798 = EQ V797 V796
---
Entry stack: [0x0, 0x0, 0x0, V786]
Stack pops: 1
Stack additions: [V798]
Exit stack: [0x0, 0x0, 0x0, V798]

================================

Block 0x912
[0x912:0x917]
---
Predecessors: [0x8ff]
Successors: [0x918]
---
0x912 JUMPDEST
0x913 ISZERO
0x914 PUSH2 0x3db
0x917 JUMPI
---
0x912: JUMPDEST 
0x913: V799 = ISZERO V798
0x914: V800 = 0x3db
0x917: THROWI V799
---
Entry stack: [0x0, 0x0, 0x0, V798]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0, 0x0]

================================

Block 0x918
[0x918:0x921]
---
Predecessors: [0x912]
Successors: [0x922]
---
0x918 PUSH1 0x2
0x91a SLOAD
0x91b CALLVALUE
0x91c DUP2
0x91d ISZERO
0x91e PUSH2 0x0
0x921 JUMPI
---
0x918: V801 = 0x2
0x91a: V802 = S[0x2]
0x91b: V803 = CALLVALUE
0x91d: V804 = ISZERO V802
0x91e: V805 = 0x0
0x921: THROWI V804
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V802, V803]
Exit stack: [0x0, 0x0, 0x0, V802, V803]

================================

Block 0x922
[0x922:0x98a]
---
Predecessors: [0x918]
Successors: [0x98b]
---
0x922 DIV
0x923 SWAP3
0x924 POP
0x925 PUSH1 0x3
0x927 SLOAD
0x928 PUSH1 0x1
0x92a PUSH1 0x0
0x92c SWAP1
0x92d SLOAD
0x92e SWAP1
0x92f PUSH2 0x100
0x932 EXP
0x933 SWAP1
0x934 DIV
0x935 PUSH1 0x1
0x937 PUSH1 0xa0
0x939 PUSH1 0x2
0x93b EXP
0x93c SUB
0x93d AND
0x93e PUSH1 0x1
0x940 PUSH1 0xa0
0x942 PUSH1 0x2
0x944 EXP
0x945 SUB
0x946 AND
0x947 PUSH4 0x70a08231
0x94c ADDRESS
0x94d PUSH1 0x0
0x94f PUSH1 0x40
0x951 MLOAD
0x952 PUSH1 0x20
0x954 ADD
0x955 MSTORE
0x956 PUSH1 0x40
0x958 MLOAD
0x959 DUP3
0x95a PUSH1 0xe0
0x95c PUSH1 0x2
0x95e EXP
0x95f MUL
0x960 DUP2
0x961 MSTORE
0x962 PUSH1 0x4
0x964 ADD
0x965 DUP1
0x966 DUP3
0x967 PUSH1 0x1
0x969 PUSH1 0xa0
0x96b PUSH1 0x2
0x96d EXP
0x96e SUB
0x96f AND
0x970 DUP2
0x971 MSTORE
0x972 PUSH1 0x20
0x974 ADD
0x975 SWAP2
0x976 POP
0x977 POP
0x978 PUSH1 0x20
0x97a PUSH1 0x40
0x97c MLOAD
0x97d DUP1
0x97e DUP4
0x97f SUB
0x980 DUP2
0x981 PUSH1 0x0
0x983 DUP8
0x984 DUP1
0x985 EXTCODESIZE
0x986 ISZERO
0x987 PUSH2 0x0
0x98a JUMPI
---
0x922: V806 = DIV V803 V802
0x925: V807 = 0x3
0x927: V808 = S[0x3]
0x928: V809 = 0x1
0x92a: V810 = 0x0
0x92d: V811 = S[0x1]
0x92f: V812 = 0x100
0x932: V813 = EXP 0x100 0x0
0x934: V814 = DIV V811 0x1
0x935: V815 = 0x1
0x937: V816 = 0xa0
0x939: V817 = 0x2
0x93b: V818 = EXP 0x2 0xa0
0x93c: V819 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93d: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0x93e: V821 = 0x1
0x940: V822 = 0xa0
0x942: V823 = 0x2
0x944: V824 = EXP 0x2 0xa0
0x945: V825 = SUB 0x10000000000000000000000000000000000000000 0x1
0x946: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0x947: V827 = 0x70a08231
0x94c: V828 = ADDRESS
0x94d: V829 = 0x0
0x94f: V830 = 0x40
0x951: V831 = M[0x40]
0x952: V832 = 0x20
0x954: V833 = ADD 0x20 V831
0x955: M[V833] = 0x0
0x956: V834 = 0x40
0x958: V835 = M[0x40]
0x95a: V836 = 0xe0
0x95c: V837 = 0x2
0x95e: V838 = EXP 0x2 0xe0
0x95f: V839 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x961: M[V835] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x962: V840 = 0x4
0x964: V841 = ADD 0x4 V835
0x967: V842 = 0x1
0x969: V843 = 0xa0
0x96b: V844 = 0x2
0x96d: V845 = EXP 0x2 0xa0
0x96e: V846 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96f: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V828
0x971: M[V841] = V847
0x972: V848 = 0x20
0x974: V849 = ADD 0x20 V841
0x978: V850 = 0x20
0x97a: V851 = 0x40
0x97c: V852 = M[0x40]
0x97f: V853 = SUB V849 V852
0x981: V854 = 0x0
0x985: V855 = EXTCODESIZE V826
0x986: V856 = ISZERO V855
0x987: V857 = 0x0
0x98a: THROWI V856
---
Entry stack: [0x0, 0x0, 0x0, V802, V803]
Stack pops: 5
Stack additions: [V806, S3, S2, V808, V826, 0x70a08231, V849, 0x20, V852, V853, V852, 0x0, V826]
Exit stack: [V806, 0x0, 0x0, V808, V826, 0x70a08231, V849, 0x20, V852, V853, V852, 0x0, V826]

================================

Block 0x98b
[0x98b:0x994]
---
Predecessors: [0x922]
Successors: [0x995]
---
0x98b PUSH1 0x32
0x98d GAS
0x98e SUB
0x98f CALL
0x990 ISZERO
0x991 PUSH2 0x0
0x994 JUMPI
---
0x98b: V858 = 0x32
0x98d: V859 = GAS
0x98e: V860 = SUB V859 0x32
0x98f: V861 = CALL V860 V826 0x0 V852 V853 V852 0x20
0x990: V862 = ISZERO V861
0x991: V863 = 0x0
0x994: THROWI V862
---
Entry stack: [V806, 0x0, 0x0, V808, V826, 0x70a08231, V849, 0x20, V852, V853, V852, 0x0, V826]
Stack pops: 6
Stack additions: []
Exit stack: [V806, 0x0, 0x0, V808, V826, 0x70a08231, V849]

================================

Block 0x995
[0x995:0x9a2]
---
Predecessors: [0x98b]
Successors: [0x9a3]
---
0x995 POP
0x996 POP
0x997 PUSH1 0x40
0x999 MLOAD
0x99a MLOAD
0x99b SWAP1
0x99c POP
0x99d DUP2
0x99e ISZERO
0x99f PUSH2 0x0
0x9a2 JUMPI
---
0x997: V864 = 0x40
0x999: V865 = M[0x40]
0x99a: V866 = M[V865]
0x99e: V867 = ISZERO V808
0x99f: V868 = 0x0
0x9a2: THROWI V867
---
Entry stack: [V806, 0x0, 0x0, V808, V826, 0x70a08231, V849]
Stack pops: 4
Stack additions: [S3, V866]
Exit stack: [V806, 0x0, 0x0, V808, V866]

================================

Block 0x9a3
[0x9a3:0x9b1]
---
Predecessors: [0x995]
Successors: [0x9b2]
---
0x9a3 DIV
0x9a4 SWAP2
0x9a5 POP
0x9a6 PUSH1 0x0
0x9a8 SWAP1
0x9a9 POP
0x9aa DUP2
0x9ab DUP4
0x9ac GT
0x9ad ISZERO
0x9ae PUSH2 0x2f0
0x9b1 JUMPI
---
0x9a3: V869 = DIV V866 V808
0x9a6: V870 = 0x0
0x9ac: V871 = GT V806 V869
0x9ad: V872 = ISZERO V871
0x9ae: V873 = 0x2f0
0x9b1: THROWI V872
---
Entry stack: [V806, 0x0, 0x0, V808, V866]
Stack pops: 5
Stack additions: [S4, V869, 0x0]
Exit stack: [V806, V869, 0x0]

================================

Block 0x9b2
[0x9b2:0x9eb]
---
Predecessors: [0x9a3]
Successors: [0x9ec]
---
0x9b2 POP
0x9b3 PUSH1 0x2
0x9b5 SLOAD
0x9b6 PUSH1 0x40
0x9b8 MLOAD
0x9b9 SWAP2
0x9ba SWAP3
0x9bb POP
0x9bc DUP3
0x9bd SWAP2
0x9be SWAP1
0x9bf DUP3
0x9c0 MUL
0x9c1 CALLVALUE
0x9c2 SUB
0x9c3 SWAP1
0x9c4 PUSH1 0x1
0x9c6 PUSH1 0xa0
0x9c8 PUSH1 0x2
0x9ca EXP
0x9cb SUB
0x9cc CALLER
0x9cd AND
0x9ce SWAP1
0x9cf DUP3
0x9d0 ISZERO
0x9d1 PUSH2 0x8fc
0x9d4 MUL
0x9d5 SWAP1
0x9d6 DUP4
0x9d7 SWAP1
0x9d8 PUSH1 0x0
0x9da DUP2
0x9db DUP2
0x9dc DUP2
0x9dd DUP6
0x9de DUP9
0x9df DUP9
0x9e0 CALL
0x9e1 SWAP4
0x9e2 POP
0x9e3 POP
0x9e4 POP
0x9e5 POP
0x9e6 ISZERO
0x9e7 ISZERO
0x9e8 PUSH2 0x2f0
0x9eb JUMPI
---
0x9b3: V874 = 0x2
0x9b5: V875 = S[0x2]
0x9b6: V876 = 0x40
0x9b8: V877 = M[0x40]
0x9c0: V878 = MUL V869 V875
0x9c1: V879 = CALLVALUE
0x9c2: V880 = SUB V879 V878
0x9c4: V881 = 0x1
0x9c6: V882 = 0xa0
0x9c8: V883 = 0x2
0x9ca: V884 = EXP 0x2 0xa0
0x9cb: V885 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cc: V886 = CALLER
0x9cd: V887 = AND V886 0xffffffffffffffffffffffffffffffffffffffff
0x9d0: V888 = ISZERO V880
0x9d1: V889 = 0x8fc
0x9d4: V890 = MUL 0x8fc V888
0x9d8: V891 = 0x0
0x9e0: V892 = CALL V890 V887 V880 V877 0x0 V877 0x0
0x9e6: V893 = ISZERO V892
0x9e7: V894 = ISZERO V893
0x9e8: V895 = 0x2f0
0x9eb: THROWI V894
---
Entry stack: [V806, V869, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V880]
Exit stack: [V869, V869, V880]

================================

Block 0x9ec
[0x9ec:0x9f0]
---
Predecessors: [0x9b2]
Successors: [0x9f1]
---
0x9ec PUSH2 0x0
0x9ef JUMP
0x9f0 JUMPDEST
---
0x9ec: V896 = 0x0
0x9ef: THROW 
0x9f0: JUMPDEST 
---
Entry stack: [V869, V869, V880]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9f1
[0x9f1:0x9fa]
---
Predecessors: [0x9ec]
Successors: [0x9fb]
---
0x9f1 JUMPDEST
0x9f2 PUSH1 0x0
0x9f4 DUP4
0x9f5 GT
0x9f6 ISZERO
0x9f7 PUSH2 0x386
0x9fa JUMPI
---
0x9f1: JUMPDEST 
0x9f2: V897 = 0x0
0x9f5: V898 = GT S2 0x0
0x9f6: V899 = ISZERO V898
0x9f7: V900 = 0x386
0x9fa: THROWI V899
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0x9fb
[0x9fb:0xa69]
---
Predecessors: [0x9f1]
Successors: [0xa6a]
---
0x9fb PUSH1 0x1
0x9fd PUSH1 0x0
0x9ff SWAP1
0xa00 SLOAD
0xa01 SWAP1
0xa02 PUSH2 0x100
0xa05 EXP
0xa06 SWAP1
0xa07 DIV
0xa08 PUSH1 0x1
0xa0a PUSH1 0xa0
0xa0c PUSH1 0x2
0xa0e EXP
0xa0f SUB
0xa10 AND
0xa11 PUSH1 0x1
0xa13 PUSH1 0xa0
0xa15 PUSH1 0x2
0xa17 EXP
0xa18 SUB
0xa19 AND
0xa1a PUSH4 0xa9059cbb
0xa1f CALLER
0xa20 PUSH1 0x3
0xa22 SLOAD
0xa23 DUP7
0xa24 MUL
0xa25 PUSH1 0x0
0xa27 PUSH1 0x40
0xa29 MLOAD
0xa2a PUSH1 0x20
0xa2c ADD
0xa2d MSTORE
0xa2e PUSH1 0x40
0xa30 MLOAD
0xa31 DUP4
0xa32 PUSH1 0xe0
0xa34 PUSH1 0x2
0xa36 EXP
0xa37 MUL
0xa38 DUP2
0xa39 MSTORE
0xa3a PUSH1 0x4
0xa3c ADD
0xa3d DUP1
0xa3e DUP4
0xa3f PUSH1 0x1
0xa41 PUSH1 0xa0
0xa43 PUSH1 0x2
0xa45 EXP
0xa46 SUB
0xa47 AND
0xa48 DUP2
0xa49 MSTORE
0xa4a PUSH1 0x20
0xa4c ADD
0xa4d DUP3
0xa4e DUP2
0xa4f MSTORE
0xa50 PUSH1 0x20
0xa52 ADD
0xa53 SWAP3
0xa54 POP
0xa55 POP
0xa56 POP
0xa57 PUSH1 0x20
0xa59 PUSH1 0x40
0xa5b MLOAD
0xa5c DUP1
0xa5d DUP4
0xa5e SUB
0xa5f DUP2
0xa60 PUSH1 0x0
0xa62 DUP8
0xa63 DUP1
0xa64 EXTCODESIZE
0xa65 ISZERO
0xa66 PUSH2 0x0
0xa69 JUMPI
---
0x9fb: V901 = 0x1
0x9fd: V902 = 0x0
0xa00: V903 = S[0x1]
0xa02: V904 = 0x100
0xa05: V905 = EXP 0x100 0x0
0xa07: V906 = DIV V903 0x1
0xa08: V907 = 0x1
0xa0a: V908 = 0xa0
0xa0c: V909 = 0x2
0xa0e: V910 = EXP 0x2 0xa0
0xa0f: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa10: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xa11: V913 = 0x1
0xa13: V914 = 0xa0
0xa15: V915 = 0x2
0xa17: V916 = EXP 0x2 0xa0
0xa18: V917 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa19: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xa1a: V919 = 0xa9059cbb
0xa1f: V920 = CALLER
0xa20: V921 = 0x3
0xa22: V922 = S[0x3]
0xa24: V923 = MUL S2 V922
0xa25: V924 = 0x0
0xa27: V925 = 0x40
0xa29: V926 = M[0x40]
0xa2a: V927 = 0x20
0xa2c: V928 = ADD 0x20 V926
0xa2d: M[V928] = 0x0
0xa2e: V929 = 0x40
0xa30: V930 = M[0x40]
0xa32: V931 = 0xe0
0xa34: V932 = 0x2
0xa36: V933 = EXP 0x2 0xe0
0xa37: V934 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xa39: M[V930] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa3a: V935 = 0x4
0xa3c: V936 = ADD 0x4 V930
0xa3f: V937 = 0x1
0xa41: V938 = 0xa0
0xa43: V939 = 0x2
0xa45: V940 = EXP 0x2 0xa0
0xa46: V941 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa47: V942 = AND 0xffffffffffffffffffffffffffffffffffffffff V920
0xa49: M[V936] = V942
0xa4a: V943 = 0x20
0xa4c: V944 = ADD 0x20 V936
0xa4f: M[V944] = V923
0xa50: V945 = 0x20
0xa52: V946 = ADD 0x20 V944
0xa57: V947 = 0x20
0xa59: V948 = 0x40
0xa5b: V949 = M[0x40]
0xa5e: V950 = SUB V946 V949
0xa60: V951 = 0x0
0xa64: V952 = EXTCODESIZE V918
0xa65: V953 = ISZERO V952
0xa66: V954 = 0x0
0xa69: THROWI V953
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V918, 0xa9059cbb, V946, 0x20, V949, V950, V949, 0x0, V918]
Exit stack: [S2, S1, S0, V918, 0xa9059cbb, V946, 0x20, V949, V950, V949, 0x0, V918]

================================

Block 0xa6a
[0xa6a:0xa73]
---
Predecessors: [0x9fb]
Successors: [0xa74]
---
0xa6a PUSH1 0x32
0xa6c GAS
0xa6d SUB
0xa6e CALL
0xa6f ISZERO
0xa70 PUSH2 0x0
0xa73 JUMPI
---
0xa6a: V955 = 0x32
0xa6c: V956 = GAS
0xa6d: V957 = SUB V956 0x32
0xa6e: V958 = CALL V957 V918 0x0 V949 V950 V949 0x20
0xa6f: V959 = ISZERO V958
0xa70: V960 = 0x0
0xa73: THROWI V959
---
Entry stack: [S11, S10, S9, V918, 0xa9059cbb, V946, 0x20, V949, V950, V949, 0x0, V918]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V918, 0xa9059cbb, V946]

================================

Block 0xa74
[0xa74:0xa81]
---
Predecessors: [0xa6a]
Successors: [0xa82]
---
0xa74 POP
0xa75 POP
0xa76 PUSH1 0x40
0xa78 MLOAD
0xa79 MLOAD
0xa7a ISZERO
0xa7b ISZERO
0xa7c SWAP1
0xa7d POP
0xa7e PUSH2 0x386
0xa81 JUMPI
---
0xa76: V961 = 0x40
0xa78: V962 = M[0x40]
0xa79: V963 = M[V962]
0xa7a: V964 = ISZERO V963
0xa7b: V965 = ISZERO V964
0xa7e: V966 = 0x386
0xa81: THROWI V965
---
Entry stack: [S5, S4, S3, V918, 0xa9059cbb, V946]
Stack pops: 3
Stack additions: []
Exit stack: [S5, S4, S3]

================================

Block 0xa82
[0xa82:0xa86]
---
Predecessors: [0xa74]
Successors: [0xa87]
---
0xa82 PUSH2 0x0
0xa85 JUMP
0xa86 JUMPDEST
---
0xa82: V967 = 0x0
0xa85: THROW 
0xa86: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa87
[0xa87:0xb05]
---
Predecessors: [0xa82]
Successors: [0xb06]
---
0xa87 JUMPDEST
0xa88 PUSH1 0x3
0xa8a SLOAD
0xa8b PUSH1 0x40
0xa8d DUP1
0xa8e MLOAD
0xa8f CALLVALUE
0xa90 DUP2
0xa91 MSTORE
0xa92 SWAP2
0xa93 DUP6
0xa94 MUL
0xa95 PUSH1 0x20
0xa97 DUP4
0xa98 ADD
0xa99 MSTORE
0xa9a DUP2
0xa9b DUP2
0xa9c ADD
0xa9d DUP4
0xa9e SWAP1
0xa9f MSTORE
0xaa0 MLOAD
0xaa1 PUSH1 0x1
0xaa3 PUSH1 0xa0
0xaa5 PUSH1 0x2
0xaa7 EXP
0xaa8 SUB
0xaa9 CALLER
0xaaa AND
0xaab SWAP2
0xaac PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xacd SWAP2
0xace SWAP1
0xacf DUP2
0xad0 SWAP1
0xad1 SUB
0xad2 PUSH1 0x60
0xad4 ADD
0xad5 SWAP1
0xad6 LOG2
0xad7 PUSH2 0x40a
0xada JUMP
0xadb JUMPDEST
0xadc PUSH1 0x40
0xade MLOAD
0xadf PUSH1 0x1
0xae1 PUSH1 0xa0
0xae3 PUSH1 0x2
0xae5 EXP
0xae6 SUB
0xae7 CALLER
0xae8 AND
0xae9 SWAP1
0xaea CALLVALUE
0xaeb DUP1
0xaec ISZERO
0xaed PUSH2 0x8fc
0xaf0 MUL
0xaf1 SWAP2
0xaf2 PUSH1 0x0
0xaf4 DUP2
0xaf5 DUP2
0xaf6 DUP2
0xaf7 DUP6
0xaf8 DUP9
0xaf9 DUP9
0xafa CALL
0xafb SWAP4
0xafc POP
0xafd POP
0xafe POP
0xaff POP
0xb00 ISZERO
0xb01 ISZERO
0xb02 PUSH2 0x40a
0xb05 JUMPI
---
0xa87: JUMPDEST 
0xa88: V968 = 0x3
0xa8a: V969 = S[0x3]
0xa8b: V970 = 0x40
0xa8e: V971 = M[0x40]
0xa8f: V972 = CALLVALUE
0xa91: M[V971] = V972
0xa94: V973 = MUL S2 V969
0xa95: V974 = 0x20
0xa98: V975 = ADD V971 0x20
0xa99: M[V975] = V973
0xa9c: V976 = ADD 0x40 V971
0xa9f: M[V976] = S0
0xaa0: V977 = M[0x40]
0xaa1: V978 = 0x1
0xaa3: V979 = 0xa0
0xaa5: V980 = 0x2
0xaa7: V981 = EXP 0x2 0xa0
0xaa8: V982 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa9: V983 = CALLER
0xaaa: V984 = AND V983 0xffffffffffffffffffffffffffffffffffffffff
0xaac: V985 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xad1: V986 = SUB V971 V977
0xad2: V987 = 0x60
0xad4: V988 = ADD 0x60 V986
0xad6: LOG V977 V988 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V984
0xad7: V989 = 0x40a
0xada: THROW 
0xadb: JUMPDEST 
0xadc: V990 = 0x40
0xade: V991 = M[0x40]
0xadf: V992 = 0x1
0xae1: V993 = 0xa0
0xae3: V994 = 0x2
0xae5: V995 = EXP 0x2 0xa0
0xae6: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae7: V997 = CALLER
0xae8: V998 = AND V997 0xffffffffffffffffffffffffffffffffffffffff
0xaea: V999 = CALLVALUE
0xaec: V1000 = ISZERO V999
0xaed: V1001 = 0x8fc
0xaf0: V1002 = MUL 0x8fc V1000
0xaf2: V1003 = 0x0
0xafa: V1004 = CALL V1002 V998 V999 V991 0x0 V991 0x0
0xb00: V1005 = ISZERO V1004
0xb01: V1006 = ISZERO V1005
0xb02: V1007 = 0x40a
0xb05: THROWI V1006
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xb06
[0xb06:0xb0a]
---
Predecessors: [0xa87]
Successors: [0xb0b]
---
0xb06 PUSH2 0x0
0xb09 JUMP
0xb0a JUMPDEST
---
0xb06: V1008 = 0x0
0xb09: THROW 
0xb0a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0b
[0xb0b:0xb0b]
---
Predecessors: [0xb06]
Successors: [0xb0c]
---
0xb0b JUMPDEST
---
0xb0b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0c
[0xb0c:0xb28]
---
Predecessors: [0xb0b]
Successors: [0xb29]
---
0xb0c JUMPDEST
0xb0d POP
0xb0e POP
0xb0f POP
0xb10 JUMP
0xb11 JUMPDEST
0xb12 PUSH1 0x0
0xb14 DUP1
0xb15 SLOAD
0xb16 CALLER
0xb17 PUSH1 0x1
0xb19 PUSH1 0xa0
0xb1b PUSH1 0x2
0xb1d EXP
0xb1e SUB
0xb1f SWAP1
0xb20 DUP2
0xb21 AND
0xb22 SWAP2
0xb23 AND
0xb24 EQ
0xb25 PUSH2 0x42d
0xb28 JUMPI
---
0xb0c: JUMPDEST 
0xb10: JUMP S3
0xb11: JUMPDEST 
0xb12: V1009 = 0x0
0xb15: V1010 = S[0x0]
0xb16: V1011 = CALLER
0xb17: V1012 = 0x1
0xb19: V1013 = 0xa0
0xb1b: V1014 = 0x2
0xb1d: V1015 = EXP 0x2 0xa0
0xb1e: V1016 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb21: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffff V1011
0xb23: V1018 = AND V1010 0xffffffffffffffffffffffffffffffffffffffff
0xb24: V1019 = EQ V1018 V1017
0xb25: V1020 = 0x42d
0xb28: THROWI V1019
---
Entry stack: []
Stack pops: 8
Stack additions: [0x0]
Exit stack: []

================================

Block 0xb29
[0xb29:0xb3f]
---
Predecessors: [0xb0c]
Successors: [0xb40]
---
0xb29 PUSH2 0x0
0xb2c JUMP
0xb2d JUMPDEST
0xb2e PUSH1 0x1
0xb30 PUSH1 0xa0
0xb32 PUSH1 0x2
0xb34 EXP
0xb35 SUB
0xb36 ADDRESS
0xb37 AND
0xb38 BALANCE
0xb39 DUP3
0xb3a SWAP1
0xb3b LT
0xb3c PUSH2 0x49c
0xb3f JUMPI
---
0xb29: V1021 = 0x0
0xb2c: THROW 
0xb2d: JUMPDEST 
0xb2e: V1022 = 0x1
0xb30: V1023 = 0xa0
0xb32: V1024 = 0x2
0xb34: V1025 = EXP 0x2 0xa0
0xb35: V1026 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb36: V1027 = ADDRESS
0xb37: V1028 = AND V1027 0xffffffffffffffffffffffffffffffffffffffff
0xb38: V1029 = BALANCE V1028
0xb3b: V1030 = LT V1029 S1
0xb3c: V1031 = 0x49c
0xb3f: THROWI V1030
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xb40
[0xb40:0xb9b]
---
Predecessors: [0xb29]
Successors: [0xb9c]
---
0xb40 PUSH1 0x40
0xb42 DUP1
0xb43 MLOAD
0xb44 DUP4
0xb45 DUP2
0xb46 MSTORE
0xb47 SWAP1
0xb48 MLOAD
0xb49 PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb6a SWAP2
0xb6b DUP2
0xb6c SWAP1
0xb6d SUB
0xb6e PUSH1 0x20
0xb70 ADD
0xb71 SWAP1
0xb72 LOG1
0xb73 PUSH1 0x0
0xb75 DUP1
0xb76 SLOAD
0xb77 PUSH1 0x40
0xb79 MLOAD
0xb7a PUSH1 0x1
0xb7c PUSH1 0xa0
0xb7e PUSH1 0x2
0xb80 EXP
0xb81 SUB
0xb82 SWAP1
0xb83 SWAP2
0xb84 AND
0xb85 SWAP2
0xb86 DUP5
0xb87 ISZERO
0xb88 PUSH2 0x8fc
0xb8b MUL
0xb8c SWAP2
0xb8d DUP6
0xb8e SWAP2
0xb8f DUP2
0xb90 DUP2
0xb91 DUP2
0xb92 DUP6
0xb93 DUP9
0xb94 DUP9
0xb95 CALL
0xb96 SWAP5
0xb97 POP
0xb98 POP
0xb99 POP
0xb9a POP
0xb9b POP
---
0xb40: V1032 = 0x40
0xb43: V1033 = M[0x40]
0xb46: M[V1033] = S1
0xb48: V1034 = M[0x40]
0xb49: V1035 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb6d: V1036 = SUB V1033 V1034
0xb6e: V1037 = 0x20
0xb70: V1038 = ADD 0x20 V1036
0xb72: LOG V1034 V1038 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb73: V1039 = 0x0
0xb76: V1040 = S[0x0]
0xb77: V1041 = 0x40
0xb79: V1042 = M[0x40]
0xb7a: V1043 = 0x1
0xb7c: V1044 = 0xa0
0xb7e: V1045 = 0x2
0xb80: V1046 = EXP 0x2 0xa0
0xb81: V1047 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb84: V1048 = AND V1040 0xffffffffffffffffffffffffffffffffffffffff
0xb87: V1049 = ISZERO S1
0xb88: V1050 = 0x8fc
0xb8b: V1051 = MUL 0x8fc V1049
0xb95: V1052 = CALL V1051 V1048 S1 V1042 0x0 V1042 0x0
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, V1052]
Exit stack: [S1, V1052]

================================

Block 0xb9c
[0xb9c:0xb9c]
---
Predecessors: [0xb40]
Successors: [0xb9d]
---
0xb9c JUMPDEST
---
0xb9c: JUMPDEST 
---
Entry stack: [S1, V1052]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1052]

================================

Block 0xb9d
[0xb9d:0xb9d]
---
Predecessors: [0xb9c]
Successors: [0xb9e]
---
0xb9d JUMPDEST
---
0xb9d: JUMPDEST 
---
Entry stack: [S1, V1052]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1052]

================================

Block 0xb9e
[0xb9e:0xbed]
---
Predecessors: [0xb9d]
Successors: [0xbee]
---
0xb9e JUMPDEST
0xb9f SWAP2
0xba0 SWAP1
0xba1 POP
0xba2 JUMP
0xba3 JUMPDEST
0xba4 PUSH1 0x1
0xba6 SLOAD
0xba7 PUSH1 0x1
0xba9 PUSH1 0xa0
0xbab PUSH1 0x2
0xbad EXP
0xbae SUB
0xbaf AND
0xbb0 DUP2
0xbb1 JUMP
0xbb2 JUMPDEST
0xbb3 PUSH1 0x2
0xbb5 SLOAD
0xbb6 DUP2
0xbb7 JUMP
0xbb8 JUMPDEST
0xbb9 PUSH1 0x4
0xbbb SLOAD
0xbbc PUSH1 0xff
0xbbe AND
0xbbf DUP2
0xbc0 JUMP
0xbc1 JUMPDEST
0xbc2 PUSH1 0x0
0xbc4 SLOAD
0xbc5 PUSH1 0x1
0xbc7 PUSH1 0xa0
0xbc9 PUSH1 0x2
0xbcb EXP
0xbcc SUB
0xbcd AND
0xbce DUP2
0xbcf JUMP
0xbd0 JUMPDEST
0xbd1 PUSH1 0x3
0xbd3 SLOAD
0xbd4 DUP2
0xbd5 JUMP
0xbd6 JUMPDEST
0xbd7 PUSH1 0x0
0xbd9 DUP1
0xbda SLOAD
0xbdb CALLER
0xbdc PUSH1 0x1
0xbde PUSH1 0xa0
0xbe0 PUSH1 0x2
0xbe2 EXP
0xbe3 SUB
0xbe4 SWAP1
0xbe5 DUP2
0xbe6 AND
0xbe7 SWAP2
0xbe8 AND
0xbe9 EQ
0xbea PUSH2 0x4f2
0xbed JUMPI
---
0xb9e: JUMPDEST 
0xba2: JUMP S2
0xba3: JUMPDEST 
0xba4: V1053 = 0x1
0xba6: V1054 = S[0x1]
0xba7: V1055 = 0x1
0xba9: V1056 = 0xa0
0xbab: V1057 = 0x2
0xbad: V1058 = EXP 0x2 0xa0
0xbae: V1059 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbaf: V1060 = AND 0xffffffffffffffffffffffffffffffffffffffff V1054
0xbb1: JUMP S0
0xbb2: JUMPDEST 
0xbb3: V1061 = 0x2
0xbb5: V1062 = S[0x2]
0xbb7: JUMP S0
0xbb8: JUMPDEST 
0xbb9: V1063 = 0x4
0xbbb: V1064 = S[0x4]
0xbbc: V1065 = 0xff
0xbbe: V1066 = AND 0xff V1064
0xbc0: JUMP S0
0xbc1: JUMPDEST 
0xbc2: V1067 = 0x0
0xbc4: V1068 = S[0x0]
0xbc5: V1069 = 0x1
0xbc7: V1070 = 0xa0
0xbc9: V1071 = 0x2
0xbcb: V1072 = EXP 0x2 0xa0
0xbcc: V1073 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcd: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1068
0xbcf: JUMP S0
0xbd0: JUMPDEST 
0xbd1: V1075 = 0x3
0xbd3: V1076 = S[0x3]
0xbd5: JUMP S0
0xbd6: JUMPDEST 
0xbd7: V1077 = 0x0
0xbda: V1078 = S[0x0]
0xbdb: V1079 = CALLER
0xbdc: V1080 = 0x1
0xbde: V1081 = 0xa0
0xbe0: V1082 = 0x2
0xbe2: V1083 = EXP 0x2 0xa0
0xbe3: V1084 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe6: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff V1079
0xbe8: V1086 = AND V1078 0xffffffffffffffffffffffffffffffffffffffff
0xbe9: V1087 = EQ V1086 V1085
0xbea: V1088 = 0x4f2
0xbed: THROWI V1087
---
Entry stack: [S1, V1052]
Stack pops: 98
Stack additions: [0x0]
Exit stack: []

================================

Block 0xbee
[0xbee:0xc90]
---
Predecessors: [0xb9e]
Successors: [0xc91]
---
0xbee PUSH2 0x0
0xbf1 JUMP
0xbf2 JUMPDEST
0xbf3 PUSH1 0x40
0xbf5 DUP1
0xbf6 MLOAD
0xbf7 PUSH1 0x1
0xbf9 PUSH1 0xa0
0xbfb PUSH1 0x2
0xbfd EXP
0xbfe SUB
0xbff DUP6
0xc00 AND
0xc01 DUP2
0xc02 MSTORE
0xc03 PUSH1 0x20
0xc05 DUP2
0xc06 ADD
0xc07 DUP5
0xc08 SWAP1
0xc09 MSTORE
0xc0a DUP2
0xc0b MLOAD
0xc0c PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc2d SWAP3
0xc2e SWAP2
0xc2f DUP2
0xc30 SWAP1
0xc31 SUB
0xc32 SWAP1
0xc33 SWAP2
0xc34 ADD
0xc35 SWAP1
0xc36 LOG1
0xc37 PUSH1 0x0
0xc39 DUP1
0xc3a SLOAD
0xc3b PUSH1 0x40
0xc3d DUP1
0xc3e MLOAD
0xc3f PUSH1 0x20
0xc41 SWAP1
0xc42 DUP2
0xc43 ADD
0xc44 DUP5
0xc45 SWAP1
0xc46 MSTORE
0xc47 DUP2
0xc48 MLOAD
0xc49 PUSH1 0xe0
0xc4b PUSH1 0x2
0xc4d EXP
0xc4e PUSH4 0xa9059cbb
0xc53 MUL
0xc54 DUP2
0xc55 MSTORE
0xc56 PUSH1 0x1
0xc58 PUSH1 0xa0
0xc5a PUSH1 0x2
0xc5c EXP
0xc5d SUB
0xc5e SWAP4
0xc5f DUP5
0xc60 AND
0xc61 PUSH1 0x4
0xc63 DUP3
0xc64 ADD
0xc65 MSTORE
0xc66 PUSH1 0x24
0xc68 DUP2
0xc69 ADD
0xc6a DUP8
0xc6b SWAP1
0xc6c MSTORE
0xc6d SWAP2
0xc6e MLOAD
0xc6f SWAP3
0xc70 DUP8
0xc71 AND
0xc72 SWAP4
0xc73 PUSH4 0xa9059cbb
0xc78 SWAP4
0xc79 PUSH1 0x44
0xc7b DUP1
0xc7c DUP6
0xc7d ADD
0xc7e SWAP5
0xc7f SWAP2
0xc80 SWAP3
0xc81 SWAP2
0xc82 DUP4
0xc83 SWAP1
0xc84 SUB
0xc85 ADD
0xc86 SWAP1
0xc87 DUP3
0xc88 SWAP1
0xc89 DUP8
0xc8a DUP1
0xc8b EXTCODESIZE
0xc8c ISZERO
0xc8d PUSH2 0x0
0xc90 JUMPI
---
0xbee: V1089 = 0x0
0xbf1: THROW 
0xbf2: JUMPDEST 
0xbf3: V1090 = 0x40
0xbf6: V1091 = M[0x40]
0xbf7: V1092 = 0x1
0xbf9: V1093 = 0xa0
0xbfb: V1094 = 0x2
0xbfd: V1095 = EXP 0x2 0xa0
0xbfe: V1096 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc00: V1097 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc02: M[V1091] = V1097
0xc03: V1098 = 0x20
0xc06: V1099 = ADD V1091 0x20
0xc09: M[V1099] = S1
0xc0b: V1100 = M[0x40]
0xc0c: V1101 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc31: V1102 = SUB V1091 V1100
0xc34: V1103 = ADD 0x40 V1102
0xc36: LOG V1100 V1103 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc37: V1104 = 0x0
0xc3a: V1105 = S[0x0]
0xc3b: V1106 = 0x40
0xc3e: V1107 = M[0x40]
0xc3f: V1108 = 0x20
0xc43: V1109 = ADD 0x20 V1107
0xc46: M[V1109] = 0x0
0xc48: V1110 = M[0x40]
0xc49: V1111 = 0xe0
0xc4b: V1112 = 0x2
0xc4d: V1113 = EXP 0x2 0xe0
0xc4e: V1114 = 0xa9059cbb
0xc53: V1115 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc55: M[V1110] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc56: V1116 = 0x1
0xc58: V1117 = 0xa0
0xc5a: V1118 = 0x2
0xc5c: V1119 = EXP 0x2 0xa0
0xc5d: V1120 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc60: V1121 = AND 0xffffffffffffffffffffffffffffffffffffffff V1105
0xc61: V1122 = 0x4
0xc64: V1123 = ADD V1110 0x4
0xc65: M[V1123] = V1121
0xc66: V1124 = 0x24
0xc69: V1125 = ADD V1110 0x24
0xc6c: M[V1125] = S1
0xc6e: V1126 = M[0x40]
0xc71: V1127 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc73: V1128 = 0xa9059cbb
0xc79: V1129 = 0x44
0xc7d: V1130 = ADD V1110 0x44
0xc84: V1131 = SUB V1110 V1126
0xc85: V1132 = ADD V1131 0x44
0xc8b: V1133 = EXTCODESIZE V1127
0xc8c: V1134 = ISZERO V1133
0xc8d: V1135 = 0x0
0xc90: THROWI V1134
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1127, 0x0, V1126, V1132, V1126, 0x20, V1130, 0xa9059cbb, V1127, S0, S1, S2]
Exit stack: []

================================

Block 0xc91
[0xc91:0xc9a]
---
Predecessors: [0xbee]
Successors: [0xc9b]
---
0xc91 PUSH1 0x32
0xc93 GAS
0xc94 SUB
0xc95 CALL
0xc96 ISZERO
0xc97 PUSH2 0x0
0xc9a JUMPI
---
0xc91: V1136 = 0x32
0xc93: V1137 = GAS
0xc94: V1138 = SUB V1137 0x32
0xc95: V1139 = CALL V1138 V1127 0x0 V1126 V1132 V1126 0x20
0xc96: V1140 = ISZERO V1139
0xc97: V1141 = 0x0
0xc9a: THROWI V1140
---
Entry stack: [S11, S10, S9, V1127, 0xa9059cbb, V1130, 0x20, V1126, V1132, V1126, 0x0, V1127]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1127, 0xa9059cbb, V1130]

================================

Block 0xc9b
[0xc9b:0xca3]
---
Predecessors: [0xc91]
Successors: [0xca4]
---
0xc9b POP
0xc9c POP
0xc9d PUSH1 0x40
0xc9f MLOAD
0xca0 MLOAD
0xca1 SWAP2
0xca2 POP
0xca3 POP
---
0xc9d: V1142 = 0x40
0xc9f: V1143 = M[0x40]
0xca0: V1144 = M[V1143]
---
Entry stack: [S5, S4, S3, V1127, 0xa9059cbb, V1130]
Stack pops: 4
Stack additions: [V1144]
Exit stack: [S5, S4, V1144]

================================

Block 0xca4
[0xca4:0xca4]
---
Predecessors: [0xc9b]
Successors: [0xca5]
---
0xca4 JUMPDEST
---
0xca4: JUMPDEST 
---
Entry stack: [S2, S1, V1144]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, V1144]

================================

Block 0xca5
[0xca5:0xcc2]
---
Predecessors: [0xca4]
Successors: [0xcc3]
---
0xca5 JUMPDEST
0xca6 SWAP3
0xca7 SWAP2
0xca8 POP
0xca9 POP
0xcaa JUMP
0xcab JUMPDEST
0xcac PUSH1 0x0
0xcae DUP1
0xcaf SLOAD
0xcb0 CALLER
0xcb1 PUSH1 0x1
0xcb3 PUSH1 0xa0
0xcb5 PUSH1 0x2
0xcb7 EXP
0xcb8 SUB
0xcb9 SWAP1
0xcba DUP2
0xcbb AND
0xcbc SWAP2
0xcbd AND
0xcbe EQ
0xcbf PUSH2 0x5c7
0xcc2 JUMPI
---
0xca5: JUMPDEST 
0xcaa: JUMP S3
0xcab: JUMPDEST 
0xcac: V1145 = 0x0
0xcaf: V1146 = S[0x0]
0xcb0: V1147 = CALLER
0xcb1: V1148 = 0x1
0xcb3: V1149 = 0xa0
0xcb5: V1150 = 0x2
0xcb7: V1151 = EXP 0x2 0xa0
0xcb8: V1152 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcbb: V1153 = AND 0xffffffffffffffffffffffffffffffffffffffff V1147
0xcbd: V1154 = AND V1146 0xffffffffffffffffffffffffffffffffffffffff
0xcbe: V1155 = EQ V1154 V1153
0xcbf: V1156 = 0x5c7
0xcc2: THROWI V1155
---
Entry stack: [S2, S1, V1144]
Stack pops: 7
Stack additions: [0x0]
Exit stack: []

================================

Block 0xcc3
[0xcc3:0xd57]
---
Predecessors: [0xca5]
Successors: [0xd58]
---
0xcc3 PUSH2 0x0
0xcc6 JUMP
0xcc7 JUMPDEST
0xcc8 PUSH1 0x40
0xcca DUP1
0xccb MLOAD
0xccc DUP4
0xccd DUP2
0xcce MSTORE
0xccf SWAP1
0xcd0 MLOAD
0xcd1 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xcf2 SWAP2
0xcf3 DUP2
0xcf4 SWAP1
0xcf5 SUB
0xcf6 PUSH1 0x20
0xcf8 ADD
0xcf9 SWAP1
0xcfa LOG1
0xcfb PUSH1 0x1
0xcfd SLOAD
0xcfe PUSH1 0x0
0xd00 DUP1
0xd01 SLOAD
0xd02 PUSH1 0x40
0xd04 DUP1
0xd05 MLOAD
0xd06 PUSH1 0x20
0xd08 SWAP1
0xd09 DUP2
0xd0a ADD
0xd0b DUP5
0xd0c SWAP1
0xd0d MSTORE
0xd0e DUP2
0xd0f MLOAD
0xd10 PUSH1 0xe0
0xd12 PUSH1 0x2
0xd14 EXP
0xd15 PUSH4 0xa9059cbb
0xd1a MUL
0xd1b DUP2
0xd1c MSTORE
0xd1d PUSH1 0x1
0xd1f PUSH1 0xa0
0xd21 PUSH1 0x2
0xd23 EXP
0xd24 SUB
0xd25 SWAP4
0xd26 DUP5
0xd27 AND
0xd28 PUSH1 0x4
0xd2a DUP3
0xd2b ADD
0xd2c MSTORE
0xd2d PUSH1 0x24
0xd2f DUP2
0xd30 ADD
0xd31 DUP9
0xd32 SWAP1
0xd33 MSTORE
0xd34 SWAP2
0xd35 MLOAD
0xd36 SWAP3
0xd37 SWAP1
0xd38 SWAP5
0xd39 AND
0xd3a SWAP4
0xd3b PUSH4 0xa9059cbb
0xd40 SWAP4
0xd41 PUSH1 0x44
0xd43 DUP1
0xd44 DUP5
0xd45 ADD
0xd46 SWAP5
0xd47 SWAP3
0xd48 SWAP4
0xd49 DUP4
0xd4a SWAP1
0xd4b SUB
0xd4c ADD
0xd4d SWAP1
0xd4e DUP3
0xd4f SWAP1
0xd50 DUP8
0xd51 DUP1
0xd52 EXTCODESIZE
0xd53 ISZERO
0xd54 PUSH2 0x0
0xd57 JUMPI
---
0xcc3: V1157 = 0x0
0xcc6: THROW 
0xcc7: JUMPDEST 
0xcc8: V1158 = 0x40
0xccb: V1159 = M[0x40]
0xcce: M[V1159] = S1
0xcd0: V1160 = M[0x40]
0xcd1: V1161 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xcf5: V1162 = SUB V1159 V1160
0xcf6: V1163 = 0x20
0xcf8: V1164 = ADD 0x20 V1162
0xcfa: LOG V1160 V1164 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xcfb: V1165 = 0x1
0xcfd: V1166 = S[0x1]
0xcfe: V1167 = 0x0
0xd01: V1168 = S[0x0]
0xd02: V1169 = 0x40
0xd05: V1170 = M[0x40]
0xd06: V1171 = 0x20
0xd0a: V1172 = ADD 0x20 V1170
0xd0d: M[V1172] = 0x0
0xd0f: V1173 = M[0x40]
0xd10: V1174 = 0xe0
0xd12: V1175 = 0x2
0xd14: V1176 = EXP 0x2 0xe0
0xd15: V1177 = 0xa9059cbb
0xd1a: V1178 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xd1c: M[V1173] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd1d: V1179 = 0x1
0xd1f: V1180 = 0xa0
0xd21: V1181 = 0x2
0xd23: V1182 = EXP 0x2 0xa0
0xd24: V1183 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd27: V1184 = AND 0xffffffffffffffffffffffffffffffffffffffff V1168
0xd28: V1185 = 0x4
0xd2b: V1186 = ADD V1173 0x4
0xd2c: M[V1186] = V1184
0xd2d: V1187 = 0x24
0xd30: V1188 = ADD V1173 0x24
0xd33: M[V1188] = S1
0xd35: V1189 = M[0x40]
0xd39: V1190 = AND V1166 0xffffffffffffffffffffffffffffffffffffffff
0xd3b: V1191 = 0xa9059cbb
0xd41: V1192 = 0x44
0xd45: V1193 = ADD V1173 0x44
0xd4b: V1194 = SUB V1173 V1189
0xd4c: V1195 = ADD V1194 0x44
0xd52: V1196 = EXTCODESIZE V1190
0xd53: V1197 = ISZERO V1196
0xd54: V1198 = 0x0
0xd57: THROWI V1197
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1190, 0x0, V1189, V1195, V1189, 0x20, V1193, 0xa9059cbb, V1190, S0, S1]
Exit stack: []

================================

Block 0xd58
[0xd58:0xd61]
---
Predecessors: [0xcc3]
Successors: [0xd62]
---
0xd58 PUSH1 0x32
0xd5a GAS
0xd5b SUB
0xd5c CALL
0xd5d ISZERO
0xd5e PUSH2 0x0
0xd61 JUMPI
---
0xd58: V1199 = 0x32
0xd5a: V1200 = GAS
0xd5b: V1201 = SUB V1200 0x32
0xd5c: V1202 = CALL V1201 V1190 0x0 V1189 V1195 V1189 0x20
0xd5d: V1203 = ISZERO V1202
0xd5e: V1204 = 0x0
0xd61: THROWI V1203
---
Entry stack: [S10, S9, V1190, 0xa9059cbb, V1193, 0x20, V1189, V1195, V1189, 0x0, V1190]
Stack pops: 6
Stack additions: []
Exit stack: [S10, S9, V1190, 0xa9059cbb, V1193]

================================

Block 0xd62
[0xd62:0xd6a]
---
Predecessors: [0xd58]
Successors: [0xd6b]
---
0xd62 POP
0xd63 POP
0xd64 PUSH1 0x40
0xd66 MLOAD
0xd67 MLOAD
0xd68 SWAP2
0xd69 POP
0xd6a POP
---
0xd64: V1205 = 0x40
0xd66: V1206 = M[0x40]
0xd67: V1207 = M[V1206]
---
Entry stack: [S4, S3, V1190, 0xa9059cbb, V1193]
Stack pops: 4
Stack additions: [V1207]
Exit stack: [S4, V1207]

================================

Block 0xd6b
[0xd6b:0xd6b]
---
Predecessors: [0xd62]
Successors: [0xd6c]
---
0xd6b JUMPDEST
---
0xd6b: JUMPDEST 
---
Entry stack: [S1, V1207]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1207]

================================

Block 0xd6c
[0xd6c:0xd87]
---
Predecessors: [0xd6b]
Successors: [0xd88]
---
0xd6c JUMPDEST
0xd6d SWAP2
0xd6e SWAP1
0xd6f POP
0xd70 JUMP
0xd71 JUMPDEST
0xd72 PUSH1 0x0
0xd74 SLOAD
0xd75 CALLER
0xd76 PUSH1 0x1
0xd78 PUSH1 0xa0
0xd7a PUSH1 0x2
0xd7c EXP
0xd7d SUB
0xd7e SWAP1
0xd7f DUP2
0xd80 AND
0xd81 SWAP2
0xd82 AND
0xd83 EQ
0xd84 PUSH2 0x68c
0xd87 JUMPI
---
0xd6c: JUMPDEST 
0xd70: JUMP S2
0xd71: JUMPDEST 
0xd72: V1208 = 0x0
0xd74: V1209 = S[0x0]
0xd75: V1210 = CALLER
0xd76: V1211 = 0x1
0xd78: V1212 = 0xa0
0xd7a: V1213 = 0x2
0xd7c: V1214 = EXP 0x2 0xa0
0xd7d: V1215 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd80: V1216 = AND 0xffffffffffffffffffffffffffffffffffffffff V1210
0xd82: V1217 = AND V1209 0xffffffffffffffffffffffffffffffffffffffff
0xd83: V1218 = EQ V1217 V1216
0xd84: V1219 = 0x68c
0xd87: THROWI V1218
---
Entry stack: [S1, V1207]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xd88
[0xd88:0xddb]
---
Predecessors: [0xd6c]
Successors: [0xddc]
---
0xd88 PUSH2 0x0
0xd8b JUMP
0xd8c JUMPDEST
0xd8d PUSH1 0x4
0xd8f DUP1
0xd90 SLOAD
0xd91 PUSH1 0xff
0xd93 NOT
0xd94 AND
0xd95 PUSH1 0xf8
0xd97 PUSH1 0x2
0xd99 EXP
0xd9a DUP4
0xd9b DUP2
0xd9c MUL
0xd9d DIV
0xd9e OR
0xd9f SWAP1
0xda0 DUP2
0xda1 SWAP1
0xda2 SSTORE
0xda3 PUSH1 0x40
0xda5 DUP1
0xda6 MLOAD
0xda7 PUSH1 0xff
0xda9 SWAP1
0xdaa SWAP3
0xdab AND
0xdac ISZERO
0xdad ISZERO
0xdae DUP3
0xdaf MSTORE
0xdb0 MLOAD
0xdb1 PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0xdd2 SWAP2
0xdd3 PUSH1 0x20
0xdd5 SWAP1
0xdd6 DUP3
0xdd7 SWAP1
0xdd8 SUB
0xdd9 ADD
0xdda SWAP1
0xddb LOG1
---
0xd88: V1220 = 0x0
0xd8b: THROW 
0xd8c: JUMPDEST 
0xd8d: V1221 = 0x4
0xd90: V1222 = S[0x4]
0xd91: V1223 = 0xff
0xd93: V1224 = NOT 0xff
0xd94: V1225 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1222
0xd95: V1226 = 0xf8
0xd97: V1227 = 0x2
0xd99: V1228 = EXP 0x2 0xf8
0xd9c: V1229 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S0
0xd9d: V1230 = DIV V1229 0x100000000000000000000000000000000000000000000000000000000000000
0xd9e: V1231 = OR V1230 V1225
0xda2: S[0x4] = V1231
0xda3: V1232 = 0x40
0xda6: V1233 = M[0x40]
0xda7: V1234 = 0xff
0xdab: V1235 = AND V1231 0xff
0xdac: V1236 = ISZERO V1235
0xdad: V1237 = ISZERO V1236
0xdaf: M[V1233] = V1237
0xdb0: V1238 = M[0x40]
0xdb1: V1239 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0xdd3: V1240 = 0x20
0xdd8: V1241 = SUB V1233 V1238
0xdd9: V1242 = ADD V1241 0x20
0xddb: LOG V1238 V1242 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xddc
[0xddc:0xddc]
---
Predecessors: [0xd88]
Successors: [0xddd]
---
0xddc JUMPDEST
---
0xddc: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xddd
[0xddd:0xdf6]
---
Predecessors: [0xddc]
Successors: [0xdf7]
---
0xddd JUMPDEST
0xdde POP
0xddf JUMP
0xde0 JUMPDEST
0xde1 PUSH1 0x0
0xde3 SLOAD
0xde4 CALLER
0xde5 PUSH1 0x1
0xde7 PUSH1 0xa0
0xde9 PUSH1 0x2
0xdeb EXP
0xdec SUB
0xded SWAP1
0xdee DUP2
0xdef AND
0xdf0 SWAP2
0xdf1 AND
0xdf2 EQ
0xdf3 PUSH2 0x6fb
0xdf6 JUMPI
---
0xddd: JUMPDEST 
0xddf: JUMP S1
0xde0: JUMPDEST 
0xde1: V1243 = 0x0
0xde3: V1244 = S[0x0]
0xde4: V1245 = CALLER
0xde5: V1246 = 0x1
0xde7: V1247 = 0xa0
0xde9: V1248 = 0x2
0xdeb: V1249 = EXP 0x2 0xa0
0xdec: V1250 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdef: V1251 = AND 0xffffffffffffffffffffffffffffffffffffffff V1245
0xdf1: V1252 = AND V1244 0xffffffffffffffffffffffffffffffffffffffff
0xdf2: V1253 = EQ V1252 V1251
0xdf3: V1254 = 0x6fb
0xdf6: THROWI V1253
---
Entry stack: [S0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xdf7
[0xdf7:0xe64]
---
Predecessors: [0xddd]
Successors: [0xe65]
---
0xdf7 PUSH2 0x0
0xdfa JUMP
0xdfb JUMPDEST
0xdfc PUSH1 0x0
0xdfe DUP1
0xdff SLOAD
0xe00 PUSH1 0x40
0xe02 MLOAD
0xe03 PUSH1 0x1
0xe05 PUSH1 0xa0
0xe07 PUSH1 0x2
0xe09 EXP
0xe0a SUB
0xe0b DUP1
0xe0c DUP6
0xe0d AND
0xe0e SWAP4
0xe0f SWAP3
0xe10 AND
0xe11 SWAP2
0xe12 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe33 SWAP2
0xe34 LOG3
0xe35 PUSH1 0x0
0xe37 DUP1
0xe38 SLOAD
0xe39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4e NOT
0xe4f AND
0xe50 PUSH13 0x1000000000000000000000000
0xe5e DUP4
0xe5f DUP2
0xe60 MUL
0xe61 DIV
0xe62 OR
0xe63 SWAP1
0xe64 SSTORE
---
0xdf7: V1255 = 0x0
0xdfa: THROW 
0xdfb: JUMPDEST 
0xdfc: V1256 = 0x0
0xdff: V1257 = S[0x0]
0xe00: V1258 = 0x40
0xe02: V1259 = M[0x40]
0xe03: V1260 = 0x1
0xe05: V1261 = 0xa0
0xe07: V1262 = 0x2
0xe09: V1263 = EXP 0x2 0xa0
0xe0a: V1264 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0d: V1265 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe10: V1266 = AND V1257 0xffffffffffffffffffffffffffffffffffffffff
0xe12: V1267 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe34: LOG V1259 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1266 V1265
0xe35: V1268 = 0x0
0xe38: V1269 = S[0x0]
0xe39: V1270 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4e: V1271 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe4f: V1272 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1269
0xe50: V1273 = 0x1000000000000000000000000
0xe60: V1274 = MUL 0x1000000000000000000000000 S0
0xe61: V1275 = DIV V1274 0x1000000000000000000000000
0xe62: V1276 = OR V1275 V1272
0xe64: S[0x0] = V1276
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xe65
[0xe65:0xe65]
---
Predecessors: [0xdf7]
Successors: [0xe66]
---
0xe65 JUMPDEST
---
0xe65: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xe66
[0xe66:0xe68]
---
Predecessors: [0xe65]
Successors: []
Has unresolved jump.
---
0xe66 JUMPDEST
0xe67 POP
0xe68 JUMP
---
0xe66: JUMPDEST 
0xe68: JUMP S1
---
Entry stack: [S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x5de01497
Entry block: 0x5d
Exit block: 0x70
Body: 0x5d, 0x63, 0x70, 0x145, 0x15d, 0x161, 0x216, 0x220, 0x229, 0x22a

Function 1:
Public function signature: 0x63a9c3d7
Entry block: 0x84
Exit block: 0x94
Body: 0x84, 0x8a, 0x94, 0x230, 0x259, 0x299, 0x2a3, 0x2ef, 0x2f9, 0x345, 0x34f, 0x39b, 0x3a5, 0x3f1, 0x3fb, 0x404, 0x405

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xd5
Exit block: 0xe2
Body: 0xd5, 0xdb, 0xe2, 0x40f

Function 3:
Public function signature: 0xc5e412e5
Entry block: 0xfe
Exit block: 0xe2
Body: 0xe2, 0xfe, 0x104, 0x41e, 0x42a, 0x42e, 0x437, 0x43b, 0x487, 0x4ff, 0x509, 0x56e

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x133
Exit block: 0x5b
Body: 0x5b, 0x133, 0x139, 0x576, 0x58d, 0x591, 0x5fb, 0x5fc

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x54
Body: 0x4b, 0x51, 0x54

