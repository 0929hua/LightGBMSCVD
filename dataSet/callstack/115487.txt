Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0x5bd74afe
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0x5bd74afe
0x47: V16 = EQ 0x5bd74afe V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe8]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0xe8
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0xe8
0x56: JUMPI 0xe8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x13d]
---
0x57 DUP1
0x58 PUSH4 0xfe4ce35a
0x5d EQ
0x5e PUSH2 0x13d
0x61 JUMPI
---
0x58: V21 = 0xfe4ce35a
0x5d: V22 = EQ 0xfe4ce35a V11
0x5e: V23 = 0x13d
0x61: JUMPI 0x13d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x174]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x174
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x6c
0x68: V25 = 0x174
0x6b: JUMP 0x174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x1ec]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0xe5]
---
Predecessors: [0x41]
Successors: [0x1ee]
---
0x6e JUMPDEST
0x6f PUSH2 0xe6
0x72 PUSH1 0x4
0x74 DUP1
0x75 DUP1
0x76 CALLDATALOAD
0x77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c AND
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 SWAP2
0x93 SWAP1
0x94 DUP1
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b DUP3
0x9c ADD
0x9d DUP1
0x9e CALLDATALOAD
0x9f SWAP1
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP1
0xa4 DUP1
0xa5 DUP1
0xa6 PUSH1 0x1f
0xa8 ADD
0xa9 PUSH1 0x20
0xab DUP1
0xac SWAP2
0xad DIV
0xae MUL
0xaf PUSH1 0x20
0xb1 ADD
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 SWAP1
0xb6 DUP2
0xb7 ADD
0xb8 PUSH1 0x40
0xba MSTORE
0xbb DUP1
0xbc SWAP4
0xbd SWAP3
0xbe SWAP2
0xbf SWAP1
0xc0 DUP2
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 DUP4
0xc7 DUP4
0xc8 DUP1
0xc9 DUP3
0xca DUP5
0xcb CALLDATACOPY
0xcc DUP3
0xcd ADD
0xce SWAP2
0xcf POP
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 SWAP2
0xd6 SWAP1
0xd7 DUP1
0xd8 CALLDATALOAD
0xd9 SWAP1
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP1
0xde SWAP2
0xdf SWAP1
0xe0 POP
0xe1 POP
0xe2 PUSH2 0x1ee
0xe5 JUMP
---
0x6e: JUMPDEST 
0x6f: V26 = 0xe6
0x72: V27 = 0x4
0x76: V28 = CALLDATALOAD 0x4
0x77: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x8e: V31 = 0x20
0x90: V32 = ADD 0x20 0x4
0x95: V33 = CALLDATALOAD 0x24
0x97: V34 = 0x20
0x99: V35 = ADD 0x20 0x24
0x9c: V36 = ADD 0x4 V33
0x9e: V37 = CALLDATALOAD V36
0xa0: V38 = 0x20
0xa2: V39 = ADD 0x20 V36
0xa6: V40 = 0x1f
0xa8: V41 = ADD 0x1f V37
0xa9: V42 = 0x20
0xad: V43 = DIV V41 0x20
0xae: V44 = MUL V43 0x20
0xaf: V45 = 0x20
0xb1: V46 = ADD 0x20 V44
0xb2: V47 = 0x40
0xb4: V48 = M[0x40]
0xb7: V49 = ADD V48 V46
0xb8: V50 = 0x40
0xba: M[0x40] = V49
0xc2: M[V48] = V37
0xc3: V51 = 0x20
0xc5: V52 = ADD 0x20 V48
0xcb: CALLDATACOPY V52 V39 V37
0xcd: V53 = ADD V52 V37
0xd8: V54 = CALLDATALOAD 0x44
0xda: V55 = 0x20
0xdc: V56 = ADD 0x20 0x44
0xe2: V57 = 0x1ee
0xe5: JUMP 0x1ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe6, V30, V48, V54]
Exit stack: [V11, 0xe6, V30, V48, V54]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x2bc]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x4c]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V58 = CALLVALUE
0xea: V59 = ISZERO V58
0xeb: V60 = 0xf3
0xee: JUMPI 0xf3 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V61 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xe8]
Successors: [0x2db]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfb
0xf7 PUSH2 0x2db
0xfa JUMP
---
0xf3: JUMPDEST 
0xf4: V62 = 0xfb
0xf7: V63 = 0x2db
0xfa: JUMP 0x2db
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V11, 0xfb]

================================

Block 0xfb
[0xfb:0x13c]
---
Predecessors: [0x2db]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 DUP3
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP2
0x133 POP
0x134 POP
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0xfb: JUMPDEST 
0xfc: V64 = 0x40
0xfe: V65 = M[0x40]
0x101: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x117: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x12e: M[V65] = V69
0x12f: V70 = 0x20
0x131: V71 = ADD 0x20 V65
0x135: V72 = 0x40
0x137: V73 = M[0x40]
0x13a: V74 = SUB V71 V73
0x13c: RETURN V73 V74
---
Entry stack: [V11, 0xfb, V178]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfb]

================================

Block 0x13d
[0x13d:0x171]
---
Predecessors: [0x57]
Successors: [0x300]
---
0x13d JUMPDEST
0x13e PUSH2 0x172
0x141 PUSH1 0x4
0x143 DUP1
0x144 DUP1
0x145 CALLDATALOAD
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c SWAP1
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 SWAP2
0x162 SWAP1
0x163 DUP1
0x164 CALLDATALOAD
0x165 SWAP1
0x166 PUSH1 0x20
0x168 ADD
0x169 SWAP1
0x16a SWAP2
0x16b SWAP1
0x16c POP
0x16d POP
0x16e PUSH2 0x300
0x171 JUMP
---
0x13d: JUMPDEST 
0x13e: V75 = 0x172
0x141: V76 = 0x4
0x145: V77 = CALLDATALOAD 0x4
0x146: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x15d: V80 = 0x20
0x15f: V81 = ADD 0x20 0x4
0x164: V82 = CALLDATALOAD 0x24
0x166: V83 = 0x20
0x168: V84 = ADD 0x20 0x24
0x16e: V85 = 0x300
0x171: JUMP 0x300
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x172, V79, V82]
Exit stack: [V11, 0x172, V79, V82]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: [0x5ea]
Successors: []
---
0x172 JUMPDEST
0x173 STOP
---
0x172: JUMPDEST 
0x173: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x174
[0x174:0x1e7]
---
Predecessors: [0x64]
Successors: [0x1e8, 0x1ec]
---
0x174 JUMPDEST
0x175 PUSH1 0x0
0x177 DUP1
0x178 SWAP1
0x179 SLOAD
0x17a SWAP1
0x17b PUSH2 0x100
0x17e EXP
0x17f SWAP1
0x180 DIV
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad PUSH2 0x8fc
0x1b0 ADDRESS
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 BALANCE
0x1c8 SWAP1
0x1c9 DUP2
0x1ca ISZERO
0x1cb MUL
0x1cc SWAP1
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 PUSH1 0x0
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 DUP4
0x1d7 SUB
0x1d8 DUP2
0x1d9 DUP6
0x1da DUP9
0x1db DUP9
0x1dc CALL
0x1dd SWAP4
0x1de POP
0x1df POP
0x1e0 POP
0x1e1 POP
0x1e2 ISZERO
0x1e3 ISZERO
0x1e4 PUSH2 0x1ec
0x1e7 JUMPI
---
0x174: JUMPDEST 
0x175: V86 = 0x0
0x179: V87 = S[0x0]
0x17b: V88 = 0x100
0x17e: V89 = EXP 0x100 0x0
0x180: V90 = DIV V87 0x1
0x181: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x197: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1ad: V95 = 0x8fc
0x1b0: V96 = ADDRESS
0x1b1: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1c7: V99 = BALANCE V98
0x1ca: V100 = ISZERO V99
0x1cb: V101 = MUL V100 0x8fc
0x1cd: V102 = 0x40
0x1cf: V103 = M[0x40]
0x1d0: V104 = 0x0
0x1d2: V105 = 0x40
0x1d4: V106 = M[0x40]
0x1d7: V107 = SUB V103 V106
0x1dc: V108 = CALL V101 V94 V99 V106 V107 V106 0x0
0x1e2: V109 = ISZERO V108
0x1e3: V110 = ISZERO V109
0x1e4: V111 = 0x1ec
0x1e7: JUMPI 0x1ec V110
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x174]
Successors: []
---
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb REVERT
---
0x1e8: V112 = 0x0
0x1eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x1ec
[0x1ec:0x1ed]
---
Predecessors: [0x174]
Successors: [0x6c]
---
0x1ec JUMPDEST
0x1ed JUMP
---
0x1ec: JUMPDEST 
0x1ed: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ee
[0x1ee:0x244]
---
Predecessors: [0x6e]
Successors: [0x245, 0x249]
---
0x1ee JUMPDEST
0x1ef CALLER
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 PUSH1 0x0
0x208 DUP1
0x209 SWAP1
0x20a SLOAD
0x20b SWAP1
0x20c PUSH2 0x100
0x20f EXP
0x210 SWAP1
0x211 DIV
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 AND
0x228 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23d AND
0x23e EQ
0x23f ISZERO
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V113 = CALLER
0x1f0: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x206: V116 = 0x0
0x20a: V117 = S[0x0]
0x20c: V118 = 0x100
0x20f: V119 = EXP 0x100 0x0
0x211: V120 = DIV V117 0x1
0x212: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x228: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x23e: V125 = EQ V124 V115
0x23f: V126 = ISZERO V125
0x240: V127 = ISZERO V126
0x241: V128 = 0x249
0x244: JUMPI 0x249 V127
---
Entry stack: [V11, 0xe6, V30, V48, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V30, V48, V54]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x1ee]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V129 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe6, V30, V48, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V30, V48, V54]

================================

Block 0x249
[0x249:0x273]
---
Predecessors: [0x1ee]
Successors: [0x274]
---
0x249 JUMPDEST
0x24a DUP3
0x24b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x260 AND
0x261 DUP2
0x262 DUP4
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 DUP3
0x268 DUP1
0x269 MLOAD
0x26a SWAP1
0x26b PUSH1 0x20
0x26d ADD
0x26e SWAP1
0x26f DUP1
0x270 DUP4
0x271 DUP4
0x272 PUSH1 0x0
---
0x249: JUMPDEST 
0x24b: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x260: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x263: V132 = 0x40
0x265: V133 = M[0x40]
0x269: V134 = M[V48]
0x26b: V135 = 0x20
0x26d: V136 = ADD 0x20 V48
0x272: V137 = 0x0
---
Entry stack: [V11, 0xe6, V30, V48, V54]
Stack pops: 3
Stack additions: [S2, S1, S0, V131, S0, S1, V133, V133, V136, V134, V134, V133, V136, 0x0]
Exit stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V133, V136, V134, V134, V133, V136, 0x0]

================================

Block 0x274
[0x274:0x27c]
---
Predecessors: [0x249, 0x27d]
Successors: [0x27d, 0x28f]
---
0x274 JUMPDEST
0x275 DUP4
0x276 DUP2
0x277 LT
0x278 ISZERO
0x279 PUSH2 0x28f
0x27c JUMPI
---
0x274: JUMPDEST 
0x277: V138 = LT S0 V134
0x278: V139 = ISZERO V138
0x279: V140 = 0x28f
0x27c: JUMPI 0x28f V139
---
Entry stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V133, V136, V134, V134, V133, V136, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V133, V136, V134, V134, V133, V136, S0]

================================

Block 0x27d
[0x27d:0x28e]
---
Predecessors: [0x274]
Successors: [0x274]
---
0x27d DUP1
0x27e DUP3
0x27f ADD
0x280 MLOAD
0x281 DUP2
0x282 DUP5
0x283 ADD
0x284 MSTORE
0x285 PUSH1 0x20
0x287 DUP2
0x288 ADD
0x289 SWAP1
0x28a POP
0x28b PUSH2 0x274
0x28e JUMP
---
0x27f: V141 = ADD V136 S0
0x280: V142 = M[V141]
0x283: V143 = ADD V133 S0
0x284: M[V143] = V142
0x285: V144 = 0x20
0x288: V145 = ADD S0 0x20
0x28b: V146 = 0x274
0x28e: JUMP 0x274
---
Entry stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V133, V136, V134, V134, V133, V136, S0]
Stack pops: 3
Stack additions: [S2, S1, V145]
Exit stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V133, V136, V134, V134, V133, V136, V145]

================================

Block 0x28f
[0x28f:0x2a2]
---
Predecessors: [0x274]
Successors: [0x2a3, 0x2bc]
---
0x28f JUMPDEST
0x290 POP
0x291 POP
0x292 POP
0x293 POP
0x294 SWAP1
0x295 POP
0x296 SWAP1
0x297 DUP2
0x298 ADD
0x299 SWAP1
0x29a PUSH1 0x1f
0x29c AND
0x29d DUP1
0x29e ISZERO
0x29f PUSH2 0x2bc
0x2a2 JUMPI
---
0x28f: JUMPDEST 
0x298: V147 = ADD V134 V133
0x29a: V148 = 0x1f
0x29c: V149 = AND 0x1f V134
0x29e: V150 = ISZERO V149
0x29f: V151 = 0x2bc
0x2a2: JUMPI 0x2bc V150
---
Entry stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V133, V136, V134, V134, V133, V136, S0]
Stack pops: 7
Stack additions: [V147, V149]
Exit stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V147, V149]

================================

Block 0x2a3
[0x2a3:0x2bb]
---
Predecessors: [0x28f]
Successors: [0x2bc]
---
0x2a3 DUP1
0x2a4 DUP3
0x2a5 SUB
0x2a6 DUP1
0x2a7 MLOAD
0x2a8 PUSH1 0x1
0x2aa DUP4
0x2ab PUSH1 0x20
0x2ad SUB
0x2ae PUSH2 0x100
0x2b1 EXP
0x2b2 SUB
0x2b3 NOT
0x2b4 AND
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba SWAP2
0x2bb POP
---
0x2a5: V152 = SUB V147 V149
0x2a7: V153 = M[V152]
0x2a8: V154 = 0x1
0x2ab: V155 = 0x20
0x2ad: V156 = SUB 0x20 V149
0x2ae: V157 = 0x100
0x2b1: V158 = EXP 0x100 V156
0x2b2: V159 = SUB V158 0x1
0x2b3: V160 = NOT V159
0x2b4: V161 = AND V160 V153
0x2b6: M[V152] = V161
0x2b7: V162 = 0x20
0x2b9: V163 = ADD 0x20 V152
---
Entry stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V147, V149]
Stack pops: 2
Stack additions: [V163, S0]
Exit stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, V163, V149]

================================

Block 0x2bc
[0x2bc:0x2da]
---
Predecessors: [0x28f, 0x2a3]
Successors: [0xe6]
---
0x2bc JUMPDEST
0x2bd POP
0x2be SWAP2
0x2bf POP
0x2c0 POP
0x2c1 PUSH1 0x0
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 DUP4
0x2c8 SUB
0x2c9 DUP2
0x2ca DUP6
0x2cb DUP8
0x2cc PUSH2 0x8796
0x2cf GAS
0x2d0 SUB
0x2d1 CALL
0x2d2 SWAP3
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da JUMP
---
0x2bc: JUMPDEST 
0x2c1: V164 = 0x0
0x2c3: V165 = 0x40
0x2c5: V166 = M[0x40]
0x2c8: V167 = SUB S1 V166
0x2cc: V168 = 0x8796
0x2cf: V169 = GAS
0x2d0: V170 = SUB V169 0x8796
0x2d1: V171 = CALL V170 V131 V54 V166 V167 V166 0x0
0x2da: JUMP 0xe6
---
Entry stack: [V11, 0xe6, V30, V48, V54, V131, V54, V48, V133, S1, V149]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x2db
[0x2db:0x2ff]
---
Predecessors: [0xf3]
Successors: [0xfb]
---
0x2db JUMPDEST
0x2dc PUSH1 0x0
0x2de DUP1
0x2df SWAP1
0x2e0 SLOAD
0x2e1 SWAP1
0x2e2 PUSH2 0x100
0x2e5 EXP
0x2e6 SWAP1
0x2e7 DIV
0x2e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fd AND
0x2fe DUP2
0x2ff JUMP
---
0x2db: JUMPDEST 
0x2dc: V172 = 0x0
0x2e0: V173 = S[0x0]
0x2e2: V174 = 0x100
0x2e5: V175 = EXP 0x100 0x0
0x2e7: V176 = DIV V173 0x1
0x2e8: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2ff: JUMP 0xfb
---
Entry stack: [V11, 0xfb]
Stack pops: 1
Stack additions: [S0, V178]
Exit stack: [V11, 0xfb, V178]

================================

Block 0x300
[0x300:0x358]
---
Predecessors: [0x13d]
Successors: [0x359, 0x35d]
---
0x300 JUMPDEST
0x301 PUSH1 0x0
0x303 CALLER
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 AND
0x31a PUSH1 0x0
0x31c DUP1
0x31d SWAP1
0x31e SLOAD
0x31f SWAP1
0x320 PUSH2 0x100
0x323 EXP
0x324 SWAP1
0x325 DIV
0x326 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33b AND
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 EQ
0x353 ISZERO
0x354 ISZERO
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x300: JUMPDEST 
0x301: V179 = 0x0
0x303: V180 = CALLER
0x304: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x31a: V183 = 0x0
0x31e: V184 = S[0x0]
0x320: V185 = 0x100
0x323: V186 = EXP 0x100 0x0
0x325: V187 = DIV V184 0x1
0x326: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x33b: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x33c: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x352: V192 = EQ V191 V182
0x353: V193 = ISZERO V192
0x354: V194 = ISZERO V193
0x355: V195 = 0x35d
0x358: JUMPI 0x35d V194
---
Entry stack: [V11, 0x172, V79, V82]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x172, V79, V82, 0x0]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x300]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V196 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x172, V79, V82, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x172, V79, V82, 0x0]

================================

Block 0x35d
[0x35d:0x5e5]
---
Predecessors: [0x300]
Successors: [0x5e6, 0x5ea]
---
0x35d JUMPDEST
0x35e ADDRESS
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 BALANCE
0x376 SWAP1
0x377 POP
0x378 DUP3
0x379 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38e AND
0x38f CALLVALUE
0x390 DUP4
0x391 SWAP1
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 DUP1
0x397 PUSH32 0x696e766573742829000000000000000000000000000000000000000000000000
0x3b8 DUP2
0x3b9 MSTORE
0x3ba POP
0x3bb PUSH1 0x8
0x3bd ADD
0x3be SWAP1
0x3bf POP
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 DUP1
0x3c4 SWAP2
0x3c5 SUB
0x3c6 SWAP1
0x3c7 SHA3
0x3c8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3e6 SWAP1
0x3e7 DIV
0x3e8 SWAP2
0x3e9 SWAP1
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP4
0x3ee PUSH4 0xffffffff
0x3f3 AND
0x3f4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x412 MUL
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x4
0x417 ADD
0x418 PUSH1 0x0
0x41a PUSH1 0x40
0x41c MLOAD
0x41d DUP1
0x41e DUP4
0x41f SUB
0x420 DUP2
0x421 DUP6
0x422 DUP10
0x423 DUP9
0x424 CALL
0x425 SWAP5
0x426 POP
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b POP
0x42c DUP3
0x42d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x442 AND
0x443 PUSH1 0x0
0x445 DUP4
0x446 SWAP1
0x447 PUSH1 0x40
0x449 MLOAD
0x44a DUP1
0x44b DUP1
0x44c PUSH32 0x6469766573742875696e74323536290000000000000000000000000000000000
0x46d DUP2
0x46e MSTORE
0x46f POP
0x470 PUSH1 0xf
0x472 ADD
0x473 SWAP1
0x474 POP
0x475 PUSH1 0x40
0x477 MLOAD
0x478 DUP1
0x479 SWAP2
0x47a SUB
0x47b SWAP1
0x47c SHA3
0x47d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x49b SWAP1
0x49c DIV
0x49d SWAP2
0x49e SWAP1
0x49f PUSH1 0x1
0x4a1 CALLVALUE
0x4a2 ADD
0x4a3 PUSH1 0x40
0x4a5 MLOAD
0x4a6 DUP5
0x4a7 PUSH4 0xffffffff
0x4ac AND
0x4ad PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4cb MUL
0x4cc DUP2
0x4cd MSTORE
0x4ce PUSH1 0x4
0x4d0 ADD
0x4d1 DUP1
0x4d2 DUP3
0x4d3 DUP2
0x4d4 MSTORE
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 SWAP2
0x4d9 POP
0x4da POP
0x4db PUSH1 0x0
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 DUP1
0x4e1 DUP4
0x4e2 SUB
0x4e3 DUP2
0x4e4 DUP6
0x4e5 DUP10
0x4e6 DUP9
0x4e7 CALL
0x4e8 SWAP5
0x4e9 POP
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee POP
0x4ef DUP3
0x4f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x505 AND
0x506 PUSH1 0x0
0x508 DUP4
0x509 SWAP1
0x50a PUSH1 0x40
0x50c MLOAD
0x50d DUP1
0x50e DUP1
0x50f PUSH32 0x6469766573742875696e74323536290000000000000000000000000000000000
0x530 DUP2
0x531 MSTORE
0x532 POP
0x533 PUSH1 0xf
0x535 ADD
0x536 SWAP1
0x537 POP
0x538 PUSH1 0x40
0x53a MLOAD
0x53b DUP1
0x53c SWAP2
0x53d SUB
0x53e SWAP1
0x53f SHA3
0x540 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x55e SWAP1
0x55f DIV
0x560 SWAP2
0x561 SWAP1
0x562 DUP7
0x563 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x578 AND
0x579 BALANCE
0x57a PUSH1 0x40
0x57c MLOAD
0x57d DUP5
0x57e PUSH4 0xffffffff
0x583 AND
0x584 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5a2 MUL
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x4
0x5a7 ADD
0x5a8 DUP1
0x5a9 DUP3
0x5aa DUP2
0x5ab MSTORE
0x5ac PUSH1 0x20
0x5ae ADD
0x5af SWAP2
0x5b0 POP
0x5b1 POP
0x5b2 PUSH1 0x0
0x5b4 PUSH1 0x40
0x5b6 MLOAD
0x5b7 DUP1
0x5b8 DUP4
0x5b9 SUB
0x5ba DUP2
0x5bb DUP6
0x5bc DUP10
0x5bd DUP9
0x5be CALL
0x5bf SWAP5
0x5c0 POP
0x5c1 POP
0x5c2 POP
0x5c3 POP
0x5c4 POP
0x5c5 POP
0x5c6 DUP1
0x5c7 ADDRESS
0x5c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dd AND
0x5de BALANCE
0x5df GT
0x5e0 ISZERO
0x5e1 ISZERO
0x5e2 PUSH2 0x5ea
0x5e5 JUMPI
---
0x35d: JUMPDEST 
0x35e: V197 = ADDRESS
0x35f: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x375: V200 = BALANCE V199
0x379: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x38e: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x38f: V203 = CALLVALUE
0x392: V204 = 0x40
0x394: V205 = M[0x40]
0x397: V206 = 0x696e766573742829000000000000000000000000000000000000000000000000
0x3b9: M[V205] = 0x696e766573742829000000000000000000000000000000000000000000000000
0x3bb: V207 = 0x8
0x3bd: V208 = ADD 0x8 V205
0x3c0: V209 = 0x40
0x3c2: V210 = M[0x40]
0x3c5: V211 = SUB V208 V210
0x3c7: V212 = SHA3 V210 V211
0x3c8: V213 = 0x100000000000000000000000000000000000000000000000000000000
0x3e7: V214 = DIV V212 0x100000000000000000000000000000000000000000000000000000000
0x3ea: V215 = 0x40
0x3ec: V216 = M[0x40]
0x3ee: V217 = 0xffffffff
0x3f3: V218 = AND 0xffffffff V214
0x3f4: V219 = 0x100000000000000000000000000000000000000000000000000000000
0x412: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000 V218
0x414: M[V216] = V220
0x415: V221 = 0x4
0x417: V222 = ADD 0x4 V216
0x418: V223 = 0x0
0x41a: V224 = 0x40
0x41c: V225 = M[0x40]
0x41f: V226 = SUB V222 V225
0x424: V227 = CALL V82 V202 V203 V225 V226 V225 0x0
0x42d: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x442: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x443: V230 = 0x0
0x447: V231 = 0x40
0x449: V232 = M[0x40]
0x44c: V233 = 0x6469766573742875696e74323536290000000000000000000000000000000000
0x46e: M[V232] = 0x6469766573742875696e74323536290000000000000000000000000000000000
0x470: V234 = 0xf
0x472: V235 = ADD 0xf V232
0x475: V236 = 0x40
0x477: V237 = M[0x40]
0x47a: V238 = SUB V235 V237
0x47c: V239 = SHA3 V237 V238
0x47d: V240 = 0x100000000000000000000000000000000000000000000000000000000
0x49c: V241 = DIV V239 0x100000000000000000000000000000000000000000000000000000000
0x49f: V242 = 0x1
0x4a1: V243 = CALLVALUE
0x4a2: V244 = ADD V243 0x1
0x4a3: V245 = 0x40
0x4a5: V246 = M[0x40]
0x4a7: V247 = 0xffffffff
0x4ac: V248 = AND 0xffffffff V241
0x4ad: V249 = 0x100000000000000000000000000000000000000000000000000000000
0x4cb: V250 = MUL 0x100000000000000000000000000000000000000000000000000000000 V248
0x4cd: M[V246] = V250
0x4ce: V251 = 0x4
0x4d0: V252 = ADD 0x4 V246
0x4d4: M[V252] = V244
0x4d5: V253 = 0x20
0x4d7: V254 = ADD 0x20 V252
0x4db: V255 = 0x0
0x4dd: V256 = 0x40
0x4df: V257 = M[0x40]
0x4e2: V258 = SUB V254 V257
0x4e7: V259 = CALL V82 V229 0x0 V257 V258 V257 0x0
0x4f0: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x505: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x506: V262 = 0x0
0x50a: V263 = 0x40
0x50c: V264 = M[0x40]
0x50f: V265 = 0x6469766573742875696e74323536290000000000000000000000000000000000
0x531: M[V264] = 0x6469766573742875696e74323536290000000000000000000000000000000000
0x533: V266 = 0xf
0x535: V267 = ADD 0xf V264
0x538: V268 = 0x40
0x53a: V269 = M[0x40]
0x53d: V270 = SUB V267 V269
0x53f: V271 = SHA3 V269 V270
0x540: V272 = 0x100000000000000000000000000000000000000000000000000000000
0x55f: V273 = DIV V271 0x100000000000000000000000000000000000000000000000000000000
0x563: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x578: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x579: V276 = BALANCE V275
0x57a: V277 = 0x40
0x57c: V278 = M[0x40]
0x57e: V279 = 0xffffffff
0x583: V280 = AND 0xffffffff V273
0x584: V281 = 0x100000000000000000000000000000000000000000000000000000000
0x5a2: V282 = MUL 0x100000000000000000000000000000000000000000000000000000000 V280
0x5a4: M[V278] = V282
0x5a5: V283 = 0x4
0x5a7: V284 = ADD 0x4 V278
0x5ab: M[V284] = V276
0x5ac: V285 = 0x20
0x5ae: V286 = ADD 0x20 V284
0x5b2: V287 = 0x0
0x5b4: V288 = 0x40
0x5b6: V289 = M[0x40]
0x5b9: V290 = SUB V286 V289
0x5be: V291 = CALL V82 V261 0x0 V289 V290 V289 0x0
0x5c7: V292 = ADDRESS
0x5c8: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x5de: V295 = BALANCE V294
0x5df: V296 = GT V295 V200
0x5e0: V297 = ISZERO V296
0x5e1: V298 = ISZERO V297
0x5e2: V299 = 0x5ea
0x5e5: JUMPI 0x5ea V298
---
Entry stack: [V11, 0x172, V79, V82, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V200]
Exit stack: [V11, 0x172, V79, V82, V200]

================================

Block 0x5e6
[0x5e6:0x5e9]
---
Predecessors: [0x35d]
Successors: []
---
0x5e6 PUSH1 0x0
0x5e8 DUP1
0x5e9 REVERT
---
0x5e6: V300 = 0x0
0x5e9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x172, V79, V82, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x172, V79, V82, V200]

================================

Block 0x5ea
[0x5ea:0x5ee]
---
Predecessors: [0x35d]
Successors: [0x172]
---
0x5ea JUMPDEST
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee JUMP
---
0x5ea: JUMPDEST 
0x5ee: JUMP 0x172
---
Entry stack: [V11, 0x172, V79, V82, V200]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x5ef
[0x5ef:0x61a]
---
Predecessors: []
Successors: []
---
0x5ef STOP
0x5f0 LOG1
0x5f1 PUSH6 0x627a7a723058
0x5f8 SHA3
0x5f9 PUSH9 0xf97fb853546fcc3cb1
0x603 PUSH11 0x2ee09c83ae0cb450649fbe
0x60f MISSING 0xe0
0x610 LOG1
0x611 MISSING 0x47
0x612 LOG2
0x613 MISSING 0xbe
0x614 DUP11
0x615 MISSING 0xb6
0x616 MISSING 0xe1
0x617 SAR
0x618 POP
0x619 STOP
0x61a MISSING 0x29
---
0x5ef: STOP 
0x5f0: LOG S0 S1 S2
0x5f1: V301 = 0x627a7a723058
0x5f8: V302 = SHA3 0x627a7a723058 S3
0x5f9: V303 = 0xf97fb853546fcc3cb1
0x603: V304 = 0x2ee09c83ae0cb450649fbe
0x60f: MISSING 0xe0
0x610: LOG S0 S1 S2
0x611: MISSING 0x47
0x612: LOG S0 S1 S2 S3
0x613: MISSING 0xbe
0x615: MISSING 0xb6
0x616: MISSING 0xe1
0x617: V305 = SAR S0 S1
0x619: STOP 
0x61a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2ee09c83ae0cb450649fbe, 0xf97fb853546fcc3cb1, V302, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x64
Exit block: 0x6c
Body: 0x64, 0x6c, 0x174, 0x1e8, 0x1ec

Function 1:
Public function signature: 0x5bd74afe
Entry block: 0x6e
Exit block: 0xe6
Body: 0x6e, 0xe6, 0x1ee, 0x245, 0x249, 0x274, 0x27d, 0x28f, 0x2a3, 0x2bc

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0xe8
Exit block: 0xfb
Body: 0xe8, 0xef, 0xf3, 0xfb, 0x2db

Function 3:
Public function signature: 0xfe4ce35a
Entry block: 0x13d
Exit block: 0x172
Body: 0x13d, 0x172, 0x300, 0x359, 0x35d, 0x5e6, 0x5ea

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

