Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x35f51847
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x35f51847
0x3c: V13 = EQ 0x35f51847 V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x134]
---
0x41 DUP1
0x42 PUSH4 0x7ab62d5a
0x47 EQ
0x48 PUSH2 0x134
0x4b JUMPI
---
0x42: V15 = 0x7ab62d5a
0x47: V16 = EQ 0x7ab62d5a V11
0x48: V17 = 0x134
0x4b: JUMPI 0x134 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x14b]
---
0x4c DUP1
0x4d PUSH4 0x7c3f1ac7
0x52 EQ
0x53 PUSH2 0x14b
0x56 JUMPI
---
0x4d: V18 = 0x7c3f1ac7
0x52: V19 = EQ 0x7c3f1ac7 V11
0x53: V20 = 0x14b
0x56: JUMPI 0x14b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1c7]
---
0x57 DUP1
0x58 PUSH4 0xc3b80730
0x5d EQ
0x5e PUSH2 0x1c7
0x61 JUMPI
---
0x58: V21 = 0xc3b80730
0x5d: V22 = EQ 0xc3b80730 V11
0x5e: V23 = 0x1c7
0x61: JUMPI 0x1c7 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1fd]
---
0x62 DUP1
0x63 PUSH4 0xd58c7faa
0x68 EQ
0x69 PUSH2 0x1fd
0x6c JUMPI
---
0x63: V24 = 0xd58c7faa
0x68: V25 = EQ 0xd58c7faa V11
0x69: V26 = 0x1fd
0x6c: JUMPI 0x1fd V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x131]
---
Predecessors: [0xd]
Successors: [0x286]
---
0x72 JUMPDEST
0x73 PUSH2 0x132
0x76 PUSH1 0x4
0x78 DUP1
0x79 CALLDATASIZE
0x7a SUB
0x7b DUP2
0x7c ADD
0x7d SWAP1
0x7e DUP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 SWAP1
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c SWAP3
0x9d SWAP2
0x9e SWAP1
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 SWAP1
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP1
0xa6 DUP3
0xa7 ADD
0xa8 DUP1
0xa9 CALLDATALOAD
0xaa SWAP1
0xab PUSH1 0x20
0xad ADD
0xae SWAP1
0xaf DUP1
0xb0 DUP1
0xb1 PUSH1 0x1f
0xb3 ADD
0xb4 PUSH1 0x20
0xb6 DUP1
0xb7 SWAP2
0xb8 DIV
0xb9 MUL
0xba PUSH1 0x20
0xbc ADD
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 ADD
0xc3 PUSH1 0x40
0xc5 MSTORE
0xc6 DUP1
0xc7 SWAP4
0xc8 SWAP3
0xc9 SWAP2
0xca SWAP1
0xcb DUP2
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x20
0xd0 ADD
0xd1 DUP4
0xd2 DUP4
0xd3 DUP1
0xd4 DUP3
0xd5 DUP5
0xd6 CALLDATACOPY
0xd7 DUP3
0xd8 ADD
0xd9 SWAP2
0xda POP
0xdb POP
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 SWAP2
0xe1 SWAP3
0xe2 SWAP2
0xe3 SWAP3
0xe4 SWAP1
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 SWAP1
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec DUP3
0xed ADD
0xee DUP1
0xef CALLDATALOAD
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 DUP1
0xf6 DUP1
0xf7 PUSH1 0x1f
0xf9 ADD
0xfa PUSH1 0x20
0xfc DUP1
0xfd SWAP2
0xfe DIV
0xff MUL
0x100 PUSH1 0x20
0x102 ADD
0x103 PUSH1 0x40
0x105 MLOAD
0x106 SWAP1
0x107 DUP2
0x108 ADD
0x109 PUSH1 0x40
0x10b MSTORE
0x10c DUP1
0x10d SWAP4
0x10e SWAP3
0x10f SWAP2
0x110 SWAP1
0x111 DUP2
0x112 DUP2
0x113 MSTORE
0x114 PUSH1 0x20
0x116 ADD
0x117 DUP4
0x118 DUP4
0x119 DUP1
0x11a DUP3
0x11b DUP5
0x11c CALLDATACOPY
0x11d DUP3
0x11e ADD
0x11f SWAP2
0x120 POP
0x121 POP
0x122 POP
0x123 POP
0x124 POP
0x125 POP
0x126 SWAP2
0x127 SWAP3
0x128 SWAP2
0x129 SWAP3
0x12a SWAP1
0x12b POP
0x12c POP
0x12d POP
0x12e PUSH2 0x286
0x131 JUMP
---
0x72: JUMPDEST 
0x73: V28 = 0x132
0x76: V29 = 0x4
0x79: V30 = CALLDATASIZE
0x7a: V31 = SUB V30 0x4
0x7c: V32 = ADD 0x4 V31
0x80: V33 = CALLDATALOAD 0x4
0x81: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x98: V36 = 0x20
0x9a: V37 = ADD 0x20 0x4
0xa0: V38 = CALLDATALOAD 0x24
0xa2: V39 = 0x20
0xa4: V40 = ADD 0x20 0x24
0xa7: V41 = ADD 0x4 V38
0xa9: V42 = CALLDATALOAD V41
0xab: V43 = 0x20
0xad: V44 = ADD 0x20 V41
0xb1: V45 = 0x1f
0xb3: V46 = ADD 0x1f V42
0xb4: V47 = 0x20
0xb8: V48 = DIV V46 0x20
0xb9: V49 = MUL V48 0x20
0xba: V50 = 0x20
0xbc: V51 = ADD 0x20 V49
0xbd: V52 = 0x40
0xbf: V53 = M[0x40]
0xc2: V54 = ADD V53 V51
0xc3: V55 = 0x40
0xc5: M[0x40] = V54
0xcd: M[V53] = V42
0xce: V56 = 0x20
0xd0: V57 = ADD 0x20 V53
0xd6: CALLDATACOPY V57 V44 V42
0xd8: V58 = ADD V57 V42
0xe6: V59 = CALLDATALOAD 0x44
0xe8: V60 = 0x20
0xea: V61 = ADD 0x20 0x44
0xed: V62 = ADD 0x4 V59
0xef: V63 = CALLDATALOAD V62
0xf1: V64 = 0x20
0xf3: V65 = ADD 0x20 V62
0xf7: V66 = 0x1f
0xf9: V67 = ADD 0x1f V63
0xfa: V68 = 0x20
0xfe: V69 = DIV V67 0x20
0xff: V70 = MUL V69 0x20
0x100: V71 = 0x20
0x102: V72 = ADD 0x20 V70
0x103: V73 = 0x40
0x105: V74 = M[0x40]
0x108: V75 = ADD V74 V72
0x109: V76 = 0x40
0x10b: M[0x40] = V75
0x113: M[V74] = V63
0x114: V77 = 0x20
0x116: V78 = ADD 0x20 V74
0x11c: CALLDATACOPY V78 V65 V63
0x11e: V79 = ADD V78 V63
0x12e: V80 = 0x286
0x131: JUMP 0x286
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x132, V35, V53, V74]
Exit stack: [V11, 0x132, V35, V53, V74]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x431]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x41]
Successors: [0x13c, 0x140]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 DUP1
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x134: JUMPDEST 
0x135: V81 = CALLVALUE
0x137: V82 = ISZERO V81
0x138: V83 = 0x140
0x13b: JUMPI 0x140 V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x134]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V84 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V11, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81]

================================

Block 0x140
[0x140:0x148]
---
Predecessors: [0x134]
Successors: [0x44f]
---
0x140 JUMPDEST
0x141 POP
0x142 PUSH2 0x149
0x145 PUSH2 0x44f
0x148 JUMP
---
0x140: JUMPDEST 
0x142: V85 = 0x149
0x145: V86 = 0x44f
0x148: JUMP 0x44f
---
Entry stack: [V11, V81]
Stack pops: 1
Stack additions: [0x149]
Exit stack: [V11, 0x149]

================================

Block 0x149
[0x149:0x14a]
---
Predecessors: [0x524]
Successors: []
---
0x149 JUMPDEST
0x14a STOP
---
0x149: JUMPDEST 
0x14a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14b
[0x14b:0x1c4]
---
Predecessors: [0x4c]
Successors: [0x526]
---
0x14b JUMPDEST
0x14c PUSH2 0x1c5
0x14f PUSH1 0x4
0x151 DUP1
0x152 CALLDATASIZE
0x153 SUB
0x154 DUP2
0x155 ADD
0x156 SWAP1
0x157 DUP1
0x158 DUP1
0x159 CALLDATALOAD
0x15a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f AND
0x170 SWAP1
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 SWAP3
0x176 SWAP2
0x177 SWAP1
0x178 DUP1
0x179 CALLDATALOAD
0x17a SWAP1
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP1
0x17f DUP3
0x180 ADD
0x181 DUP1
0x182 CALLDATALOAD
0x183 SWAP1
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP1
0x188 DUP1
0x189 DUP1
0x18a PUSH1 0x1f
0x18c ADD
0x18d PUSH1 0x20
0x18f DUP1
0x190 SWAP2
0x191 DIV
0x192 MUL
0x193 PUSH1 0x20
0x195 ADD
0x196 PUSH1 0x40
0x198 MLOAD
0x199 SWAP1
0x19a DUP2
0x19b ADD
0x19c PUSH1 0x40
0x19e MSTORE
0x19f DUP1
0x1a0 SWAP4
0x1a1 SWAP3
0x1a2 SWAP2
0x1a3 SWAP1
0x1a4 DUP2
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa DUP4
0x1ab DUP4
0x1ac DUP1
0x1ad DUP3
0x1ae DUP5
0x1af CALLDATACOPY
0x1b0 DUP3
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
0x1b4 POP
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 SWAP2
0x1ba SWAP3
0x1bb SWAP2
0x1bc SWAP3
0x1bd SWAP1
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 PUSH2 0x526
0x1c4 JUMP
---
0x14b: JUMPDEST 
0x14c: V87 = 0x1c5
0x14f: V88 = 0x4
0x152: V89 = CALLDATASIZE
0x153: V90 = SUB V89 0x4
0x155: V91 = ADD 0x4 V90
0x159: V92 = CALLDATALOAD 0x4
0x15a: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x171: V95 = 0x20
0x173: V96 = ADD 0x20 0x4
0x179: V97 = CALLDATALOAD 0x24
0x17b: V98 = 0x20
0x17d: V99 = ADD 0x20 0x24
0x180: V100 = ADD 0x4 V97
0x182: V101 = CALLDATALOAD V100
0x184: V102 = 0x20
0x186: V103 = ADD 0x20 V100
0x18a: V104 = 0x1f
0x18c: V105 = ADD 0x1f V101
0x18d: V106 = 0x20
0x191: V107 = DIV V105 0x20
0x192: V108 = MUL V107 0x20
0x193: V109 = 0x20
0x195: V110 = ADD 0x20 V108
0x196: V111 = 0x40
0x198: V112 = M[0x40]
0x19b: V113 = ADD V112 V110
0x19c: V114 = 0x40
0x19e: M[0x40] = V113
0x1a6: M[V112] = V101
0x1a7: V115 = 0x20
0x1a9: V116 = ADD 0x20 V112
0x1af: CALLDATACOPY V116 V103 V101
0x1b1: V117 = ADD V116 V101
0x1c1: V118 = 0x526
0x1c4: JUMP 0x526
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c5, V94, V112]
Exit stack: [V11, 0x1c5, V94, V112]

================================

Block 0x1c5
[0x1c5:0x1c6]
---
Predecessors: [0x679]
Successors: []
---
0x1c5 JUMPDEST
0x1c6 STOP
---
0x1c5: JUMPDEST 
0x1c6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c7
[0x1c7:0x1fa]
---
Predecessors: [0x57]
Successors: [0x695]
---
0x1c7 JUMPDEST
0x1c8 PUSH2 0x1fb
0x1cb PUSH1 0x4
0x1cd DUP1
0x1ce CALLDATASIZE
0x1cf SUB
0x1d0 DUP2
0x1d1 ADD
0x1d2 SWAP1
0x1d3 DUP1
0x1d4 DUP1
0x1d5 CALLDATALOAD
0x1d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1eb AND
0x1ec SWAP1
0x1ed PUSH1 0x20
0x1ef ADD
0x1f0 SWAP1
0x1f1 SWAP3
0x1f2 SWAP2
0x1f3 SWAP1
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 PUSH2 0x695
0x1fa JUMP
---
0x1c7: JUMPDEST 
0x1c8: V119 = 0x1fb
0x1cb: V120 = 0x4
0x1ce: V121 = CALLDATASIZE
0x1cf: V122 = SUB V121 0x4
0x1d1: V123 = ADD 0x4 V122
0x1d5: V124 = CALLDATALOAD 0x4
0x1d6: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1ed: V127 = 0x20
0x1ef: V128 = ADD 0x20 0x4
0x1f7: V129 = 0x695
0x1fa: JUMP 0x695
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1fb, V126]
Exit stack: [V11, 0x1fb, V126]

================================

Block 0x1fb
[0x1fb:0x1fc]
---
Predecessors: [0x6f0]
Successors: []
---
0x1fb JUMPDEST
0x1fc STOP
---
0x1fb: JUMPDEST 
0x1fc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x62]
Successors: [0x205, 0x209]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff DUP1
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V130 = CALLVALUE
0x200: V131 = ISZERO V130
0x201: V132 = 0x209
0x204: JUMPI 0x209 V131
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, V130]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fd]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V133 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V11, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V130]

================================

Block 0x209
[0x209:0x283]
---
Predecessors: [0x1fd]
Successors: [0x7a7]
---
0x209 JUMPDEST
0x20a POP
0x20b PUSH2 0x284
0x20e PUSH1 0x4
0x210 DUP1
0x211 CALLDATASIZE
0x212 SUB
0x213 DUP2
0x214 ADD
0x215 SWAP1
0x216 DUP1
0x217 DUP1
0x218 CALLDATALOAD
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f SWAP1
0x230 PUSH1 0x20
0x232 ADD
0x233 SWAP1
0x234 SWAP3
0x235 SWAP2
0x236 SWAP1
0x237 DUP1
0x238 CALLDATALOAD
0x239 SWAP1
0x23a PUSH1 0x20
0x23c ADD
0x23d SWAP1
0x23e DUP3
0x23f ADD
0x240 DUP1
0x241 CALLDATALOAD
0x242 SWAP1
0x243 PUSH1 0x20
0x245 ADD
0x246 SWAP1
0x247 DUP1
0x248 DUP1
0x249 PUSH1 0x1f
0x24b ADD
0x24c PUSH1 0x20
0x24e DUP1
0x24f SWAP2
0x250 DIV
0x251 MUL
0x252 PUSH1 0x20
0x254 ADD
0x255 PUSH1 0x40
0x257 MLOAD
0x258 SWAP1
0x259 DUP2
0x25a ADD
0x25b PUSH1 0x40
0x25d MSTORE
0x25e DUP1
0x25f SWAP4
0x260 SWAP3
0x261 SWAP2
0x262 SWAP1
0x263 DUP2
0x264 DUP2
0x265 MSTORE
0x266 PUSH1 0x20
0x268 ADD
0x269 DUP4
0x26a DUP4
0x26b DUP1
0x26c DUP3
0x26d DUP5
0x26e CALLDATACOPY
0x26f DUP3
0x270 ADD
0x271 SWAP2
0x272 POP
0x273 POP
0x274 POP
0x275 POP
0x276 POP
0x277 POP
0x278 SWAP2
0x279 SWAP3
0x27a SWAP2
0x27b SWAP3
0x27c SWAP1
0x27d POP
0x27e POP
0x27f POP
0x280 PUSH2 0x7a7
0x283 JUMP
---
0x209: JUMPDEST 
0x20b: V134 = 0x284
0x20e: V135 = 0x4
0x211: V136 = CALLDATASIZE
0x212: V137 = SUB V136 0x4
0x214: V138 = ADD 0x4 V137
0x218: V139 = CALLDATALOAD 0x4
0x219: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x230: V142 = 0x20
0x232: V143 = ADD 0x20 0x4
0x238: V144 = CALLDATALOAD 0x24
0x23a: V145 = 0x20
0x23c: V146 = ADD 0x20 0x24
0x23f: V147 = ADD 0x4 V144
0x241: V148 = CALLDATALOAD V147
0x243: V149 = 0x20
0x245: V150 = ADD 0x20 V147
0x249: V151 = 0x1f
0x24b: V152 = ADD 0x1f V148
0x24c: V153 = 0x20
0x250: V154 = DIV V152 0x20
0x251: V155 = MUL V154 0x20
0x252: V156 = 0x20
0x254: V157 = ADD 0x20 V155
0x255: V158 = 0x40
0x257: V159 = M[0x40]
0x25a: V160 = ADD V159 V157
0x25b: V161 = 0x40
0x25d: M[0x40] = V160
0x265: M[V159] = V148
0x266: V162 = 0x20
0x268: V163 = ADD 0x20 V159
0x26e: CALLDATACOPY V163 V150 V148
0x270: V164 = ADD V163 V148
0x280: V165 = 0x7a7
0x283: JUMP 0x7a7
---
Entry stack: [V11, V130]
Stack pops: 1
Stack additions: [0x284, V141, V159]
Exit stack: [V11, 0x284, V141, V159]

================================

Block 0x284
[0x284:0x285]
---
Predecessors: [0x802]
Successors: []
---
0x284 JUMPDEST
0x285 STOP
---
0x284: JUMPDEST 
0x285: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x286
[0x286:0x2dc]
---
Predecessors: [0x72]
Successors: [0x2dd, 0x2e1]
---
0x286 JUMPDEST
0x287 PUSH1 0x0
0x289 DUP1
0x28a SWAP1
0x28b SLOAD
0x28c SWAP1
0x28d PUSH2 0x100
0x290 EXP
0x291 SWAP1
0x292 DIV
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2be AND
0x2bf CALLER
0x2c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d5 AND
0x2d6 EQ
0x2d7 ISZERO
0x2d8 ISZERO
0x2d9 PUSH2 0x2e1
0x2dc JUMPI
---
0x286: JUMPDEST 
0x287: V166 = 0x0
0x28b: V167 = S[0x0]
0x28d: V168 = 0x100
0x290: V169 = EXP 0x100 0x0
0x292: V170 = DIV V167 0x1
0x293: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2a9: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2bf: V175 = CALLER
0x2c0: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2d6: V178 = EQ V177 V174
0x2d7: V179 = ISZERO V178
0x2d8: V180 = ISZERO V179
0x2d9: V181 = 0x2e1
0x2dc: JUMPI 0x2e1 V180
---
Entry stack: [V11, 0x132, V35, V53, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V35, V53, V74]

================================

Block 0x2dd
[0x2dd:0x2e0]
---
Predecessors: [0x286]
Successors: []
---
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 REVERT
---
0x2dd: V182 = 0x0
0x2e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V35, V53, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V35, V53, V74]

================================

Block 0x2e1
[0x2e1:0x391]
---
Predecessors: [0x286]
Successors: [0x392]
---
0x2e1 JUMPDEST
0x2e2 DUP3
0x2e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f8 AND
0x2f9 PUSH3 0x493e0
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 DUP1
0x301 DUP1
0x302 PUSH32 0x537461727447616d6528737472696e672c737472696e67290000000000000000
0x323 DUP2
0x324 MSTORE
0x325 POP
0x326 PUSH1 0x18
0x328 ADD
0x329 SWAP1
0x32a POP
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f SWAP2
0x330 SUB
0x331 SWAP1
0x332 SHA3
0x333 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x351 SWAP1
0x352 DIV
0x353 SWAP1
0x354 DUP5
0x355 DUP5
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP5
0x35a PUSH4 0xffffffff
0x35f AND
0x360 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x37e MUL
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x4
0x383 ADD
0x384 DUP1
0x385 DUP4
0x386 DUP1
0x387 MLOAD
0x388 SWAP1
0x389 PUSH1 0x20
0x38b ADD
0x38c SWAP1
0x38d DUP1
0x38e DUP4
0x38f DUP4
0x390 PUSH1 0x0
---
0x2e1: JUMPDEST 
0x2e3: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x2f9: V185 = 0x493e0
0x2fd: V186 = 0x40
0x2ff: V187 = M[0x40]
0x302: V188 = 0x537461727447616d6528737472696e672c737472696e67290000000000000000
0x324: M[V187] = 0x537461727447616d6528737472696e672c737472696e67290000000000000000
0x326: V189 = 0x18
0x328: V190 = ADD 0x18 V187
0x32b: V191 = 0x40
0x32d: V192 = M[0x40]
0x330: V193 = SUB V190 V192
0x332: V194 = SHA3 V192 V193
0x333: V195 = 0x100000000000000000000000000000000000000000000000000000000
0x352: V196 = DIV V194 0x100000000000000000000000000000000000000000000000000000000
0x356: V197 = 0x40
0x358: V198 = M[0x40]
0x35a: V199 = 0xffffffff
0x35f: V200 = AND 0xffffffff V196
0x360: V201 = 0x100000000000000000000000000000000000000000000000000000000
0x37e: V202 = MUL 0x100000000000000000000000000000000000000000000000000000000 V200
0x380: M[V198] = V202
0x381: V203 = 0x4
0x383: V204 = ADD 0x4 V198
0x387: V205 = M[V53]
0x389: V206 = 0x20
0x38b: V207 = ADD 0x20 V53
0x390: V208 = 0x0
---
Entry stack: [V11, 0x132, V35, V53, V74]
Stack pops: 3
Stack additions: [S2, S1, S0, V184, V196, 0x493e0, S1, S0, V204, V204, V207, V205, V205, V204, V207, 0x0]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V204, V207, V205, V205, V204, V207, 0x0]

================================

Block 0x392
[0x392:0x39a]
---
Predecessors: [0x2e1, 0x39b]
Successors: [0x39b, 0x3ad]
---
0x392 JUMPDEST
0x393 DUP4
0x394 DUP2
0x395 LT
0x396 ISZERO
0x397 PUSH2 0x3ad
0x39a JUMPI
---
0x392: JUMPDEST 
0x395: V209 = LT S0 V205
0x396: V210 = ISZERO V209
0x397: V211 = 0x3ad
0x39a: JUMPI 0x3ad V210
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V204, V207, V205, V205, V204, V207, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V204, V207, V205, V205, V204, V207, S0]

================================

Block 0x39b
[0x39b:0x3ac]
---
Predecessors: [0x392]
Successors: [0x392]
---
0x39b DUP1
0x39c DUP3
0x39d ADD
0x39e MLOAD
0x39f DUP2
0x3a0 DUP5
0x3a1 ADD
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 DUP2
0x3a6 ADD
0x3a7 SWAP1
0x3a8 POP
0x3a9 PUSH2 0x392
0x3ac JUMP
---
0x39d: V212 = ADD V207 S0
0x39e: V213 = M[V212]
0x3a1: V214 = ADD V204 S0
0x3a2: M[V214] = V213
0x3a3: V215 = 0x20
0x3a6: V216 = ADD S0 0x20
0x3a9: V217 = 0x392
0x3ac: JUMP 0x392
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V204, V207, V205, V205, V204, V207, S0]
Stack pops: 3
Stack additions: [S2, S1, V216]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V204, V207, V205, V205, V204, V207, V216]

================================

Block 0x3ad
[0x3ad:0x3c0]
---
Predecessors: [0x392]
Successors: [0x3c1, 0x3da]
---
0x3ad JUMPDEST
0x3ae POP
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 SWAP1
0x3b3 POP
0x3b4 SWAP1
0x3b5 DUP2
0x3b6 ADD
0x3b7 SWAP1
0x3b8 PUSH1 0x1f
0x3ba AND
0x3bb DUP1
0x3bc ISZERO
0x3bd PUSH2 0x3da
0x3c0 JUMPI
---
0x3ad: JUMPDEST 
0x3b6: V218 = ADD V205 V204
0x3b8: V219 = 0x1f
0x3ba: V220 = AND 0x1f V205
0x3bc: V221 = ISZERO V220
0x3bd: V222 = 0x3da
0x3c0: JUMPI 0x3da V221
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V204, V207, V205, V205, V204, V207, S0]
Stack pops: 7
Stack additions: [V218, V220]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V218, V220]

================================

Block 0x3c1
[0x3c1:0x3d9]
---
Predecessors: [0x3ad]
Successors: [0x3da]
---
0x3c1 DUP1
0x3c2 DUP3
0x3c3 SUB
0x3c4 DUP1
0x3c5 MLOAD
0x3c6 PUSH1 0x1
0x3c8 DUP4
0x3c9 PUSH1 0x20
0x3cb SUB
0x3cc PUSH2 0x100
0x3cf EXP
0x3d0 SUB
0x3d1 NOT
0x3d2 AND
0x3d3 DUP2
0x3d4 MSTORE
0x3d5 PUSH1 0x20
0x3d7 ADD
0x3d8 SWAP2
0x3d9 POP
---
0x3c3: V223 = SUB V218 V220
0x3c5: V224 = M[V223]
0x3c6: V225 = 0x1
0x3c9: V226 = 0x20
0x3cb: V227 = SUB 0x20 V220
0x3cc: V228 = 0x100
0x3cf: V229 = EXP 0x100 V227
0x3d0: V230 = SUB V229 0x1
0x3d1: V231 = NOT V230
0x3d2: V232 = AND V231 V224
0x3d4: M[V223] = V232
0x3d5: V233 = 0x20
0x3d7: V234 = ADD 0x20 V223
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V218, V220]
Stack pops: 2
Stack additions: [V234, S0]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V234, V220]

================================

Block 0x3da
[0x3da:0x3e8]
---
Predecessors: [0x3ad, 0x3c1]
Successors: [0x3e9]
---
0x3da JUMPDEST
0x3db POP
0x3dc DUP3
0x3dd DUP1
0x3de MLOAD
0x3df SWAP1
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 SWAP1
0x3e4 DUP1
0x3e5 DUP4
0x3e6 DUP4
0x3e7 PUSH1 0x0
---
0x3da: JUMPDEST 
0x3de: V235 = M[V74]
0x3e0: V236 = 0x20
0x3e2: V237 = ADD 0x20 V74
0x3e7: V238 = 0x0
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S1, V220]
Stack pops: 4
Stack additions: [S3, S2, S1, V237, V235, V235, S1, V237, 0x0]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S1, V237, V235, V235, S1, V237, 0x0]

================================

Block 0x3e9
[0x3e9:0x3f1]
---
Predecessors: [0x3da, 0x3f2]
Successors: [0x3f2, 0x404]
---
0x3e9 JUMPDEST
0x3ea DUP4
0x3eb DUP2
0x3ec LT
0x3ed ISZERO
0x3ee PUSH2 0x404
0x3f1 JUMPI
---
0x3e9: JUMPDEST 
0x3ec: V239 = LT S0 V235
0x3ed: V240 = ISZERO V239
0x3ee: V241 = 0x404
0x3f1: JUMPI 0x404 V240
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S6, V237, V235, V235, S2, V237, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S6, V237, V235, V235, S2, V237, S0]

================================

Block 0x3f2
[0x3f2:0x403]
---
Predecessors: [0x3e9]
Successors: [0x3e9]
---
0x3f2 DUP1
0x3f3 DUP3
0x3f4 ADD
0x3f5 MLOAD
0x3f6 DUP2
0x3f7 DUP5
0x3f8 ADD
0x3f9 MSTORE
0x3fa PUSH1 0x20
0x3fc DUP2
0x3fd ADD
0x3fe SWAP1
0x3ff POP
0x400 PUSH2 0x3e9
0x403 JUMP
---
0x3f4: V242 = ADD V237 S0
0x3f5: V243 = M[V242]
0x3f8: V244 = ADD S2 S0
0x3f9: M[V244] = V243
0x3fa: V245 = 0x20
0x3fd: V246 = ADD S0 0x20
0x400: V247 = 0x3e9
0x403: JUMP 0x3e9
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S6, V237, V235, V235, S2, V237, S0]
Stack pops: 3
Stack additions: [S2, S1, V246]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S6, V237, V235, V235, S2, V237, V246]

================================

Block 0x404
[0x404:0x417]
---
Predecessors: [0x3e9]
Successors: [0x418, 0x431]
---
0x404 JUMPDEST
0x405 POP
0x406 POP
0x407 POP
0x408 POP
0x409 SWAP1
0x40a POP
0x40b SWAP1
0x40c DUP2
0x40d ADD
0x40e SWAP1
0x40f PUSH1 0x1f
0x411 AND
0x412 DUP1
0x413 ISZERO
0x414 PUSH2 0x431
0x417 JUMPI
---
0x404: JUMPDEST 
0x40d: V248 = ADD V235 S6
0x40f: V249 = 0x1f
0x411: V250 = AND 0x1f V235
0x413: V251 = ISZERO V250
0x414: V252 = 0x431
0x417: JUMPI 0x431 V251
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S6, V237, V235, V235, S2, V237, S0]
Stack pops: 7
Stack additions: [V248, V250]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V248, V250]

================================

Block 0x418
[0x418:0x430]
---
Predecessors: [0x404]
Successors: [0x431]
---
0x418 DUP1
0x419 DUP3
0x41a SUB
0x41b DUP1
0x41c MLOAD
0x41d PUSH1 0x1
0x41f DUP4
0x420 PUSH1 0x20
0x422 SUB
0x423 PUSH2 0x100
0x426 EXP
0x427 SUB
0x428 NOT
0x429 AND
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x20
0x42e ADD
0x42f SWAP2
0x430 POP
---
0x41a: V253 = SUB V248 V250
0x41c: V254 = M[V253]
0x41d: V255 = 0x1
0x420: V256 = 0x20
0x422: V257 = SUB 0x20 V250
0x423: V258 = 0x100
0x426: V259 = EXP 0x100 V257
0x427: V260 = SUB V259 0x1
0x428: V261 = NOT V260
0x429: V262 = AND V261 V254
0x42b: M[V253] = V262
0x42c: V263 = 0x20
0x42e: V264 = ADD 0x20 V253
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V248, V250]
Stack pops: 2
Stack additions: [V264, S0]
Exit stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, V264, V250]

================================

Block 0x431
[0x431:0x44e]
---
Predecessors: [0x404, 0x418]
Successors: [0x132]
---
0x431 JUMPDEST
0x432 POP
0x433 SWAP3
0x434 POP
0x435 POP
0x436 POP
0x437 PUSH1 0x0
0x439 PUSH1 0x40
0x43b MLOAD
0x43c DUP1
0x43d DUP4
0x43e SUB
0x43f DUP2
0x440 PUSH1 0x0
0x442 DUP9
0x443 DUP8
0x444 CALL
0x445 SWAP4
0x446 POP
0x447 POP
0x448 POP
0x449 POP
0x44a POP
0x44b POP
0x44c POP
0x44d POP
0x44e JUMP
---
0x431: JUMPDEST 
0x437: V265 = 0x0
0x439: V266 = 0x40
0x43b: V267 = M[0x40]
0x43e: V268 = SUB S1 V267
0x440: V269 = 0x0
0x444: V270 = CALL 0x493e0 V184 0x0 V267 V268 V267 0x0
0x44e: JUMP 0x132
---
Entry stack: [V11, 0x132, V35, V53, V74, V184, V196, 0x493e0, V53, V74, V204, S1, V250]
Stack pops: 12
Stack additions: []
Exit stack: [V11]

================================

Block 0x44f
[0x44f:0x4a4]
---
Predecessors: [0x140]
Successors: [0x4a5, 0x524]
---
0x44f JUMPDEST
0x450 PUSH1 0x0
0x452 DUP1
0x453 SWAP1
0x454 SLOAD
0x455 SWAP1
0x456 PUSH2 0x100
0x459 EXP
0x45a SWAP1
0x45b DIV
0x45c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x471 AND
0x472 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x487 AND
0x488 CALLER
0x489 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49e AND
0x49f EQ
0x4a0 ISZERO
0x4a1 PUSH2 0x524
0x4a4 JUMPI
---
0x44f: JUMPDEST 
0x450: V271 = 0x0
0x454: V272 = S[0x0]
0x456: V273 = 0x100
0x459: V274 = EXP 0x100 0x0
0x45b: V275 = DIV V272 0x1
0x45c: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x471: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x472: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x487: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x488: V280 = CALLER
0x489: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x49f: V283 = EQ V282 V279
0x4a0: V284 = ISZERO V283
0x4a1: V285 = 0x524
0x4a4: JUMPI 0x524 V284
---
Entry stack: [V11, 0x149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x149]

================================

Block 0x4a5
[0x4a5:0x518]
---
Predecessors: [0x44f]
Successors: [0x519, 0x522]
---
0x4a5 PUSH1 0x0
0x4a7 DUP1
0x4a8 SWAP1
0x4a9 SLOAD
0x4aa SWAP1
0x4ab PUSH2 0x100
0x4ae EXP
0x4af SWAP1
0x4b0 DIV
0x4b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c6 AND
0x4c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4dc AND
0x4dd PUSH2 0x8fc
0x4e0 ADDRESS
0x4e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f6 AND
0x4f7 BALANCE
0x4f8 SWAP1
0x4f9 DUP2
0x4fa ISZERO
0x4fb MUL
0x4fc SWAP1
0x4fd PUSH1 0x40
0x4ff MLOAD
0x500 PUSH1 0x0
0x502 PUSH1 0x40
0x504 MLOAD
0x505 DUP1
0x506 DUP4
0x507 SUB
0x508 DUP2
0x509 DUP6
0x50a DUP9
0x50b DUP9
0x50c CALL
0x50d SWAP4
0x50e POP
0x50f POP
0x510 POP
0x511 POP
0x512 ISZERO
0x513 DUP1
0x514 ISZERO
0x515 PUSH2 0x522
0x518 JUMPI
---
0x4a5: V286 = 0x0
0x4a9: V287 = S[0x0]
0x4ab: V288 = 0x100
0x4ae: V289 = EXP 0x100 0x0
0x4b0: V290 = DIV V287 0x1
0x4b1: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x4c7: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x4dc: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x4dd: V295 = 0x8fc
0x4e0: V296 = ADDRESS
0x4e1: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f6: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x4f7: V299 = BALANCE V298
0x4fa: V300 = ISZERO V299
0x4fb: V301 = MUL V300 0x8fc
0x4fd: V302 = 0x40
0x4ff: V303 = M[0x40]
0x500: V304 = 0x0
0x502: V305 = 0x40
0x504: V306 = M[0x40]
0x507: V307 = SUB V303 V306
0x50c: V308 = CALL V301 V294 V299 V306 V307 V306 0x0
0x512: V309 = ISZERO V308
0x514: V310 = ISZERO V309
0x515: V311 = 0x522
0x518: JUMPI 0x522 V310
---
Entry stack: [V11, 0x149]
Stack pops: 0
Stack additions: [V309]
Exit stack: [V11, 0x149, V309]

================================

Block 0x519
[0x519:0x521]
---
Predecessors: [0x4a5]
Successors: []
---
0x519 RETURNDATASIZE
0x51a PUSH1 0x0
0x51c DUP1
0x51d RETURNDATACOPY
0x51e RETURNDATASIZE
0x51f PUSH1 0x0
0x521 REVERT
---
0x519: V312 = RETURNDATASIZE
0x51a: V313 = 0x0
0x51d: RETURNDATACOPY 0x0 0x0 V312
0x51e: V314 = RETURNDATASIZE
0x51f: V315 = 0x0
0x521: REVERT 0x0 V314
---
Entry stack: [V11, 0x149, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x149, V309]

================================

Block 0x522
[0x522:0x523]
---
Predecessors: [0x4a5]
Successors: [0x524]
---
0x522 JUMPDEST
0x523 POP
---
0x522: JUMPDEST 
---
Entry stack: [V11, 0x149, V309]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x149]

================================

Block 0x524
[0x524:0x525]
---
Predecessors: [0x44f, 0x522]
Successors: [0x149]
---
0x524 JUMPDEST
0x525 JUMP
---
0x524: JUMPDEST 
0x525: JUMP 0x149
---
Entry stack: [V11, 0x149]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x526
[0x526:0x57c]
---
Predecessors: [0x14b]
Successors: [0x57d, 0x581]
---
0x526 JUMPDEST
0x527 PUSH1 0x0
0x529 DUP1
0x52a SWAP1
0x52b SLOAD
0x52c SWAP1
0x52d PUSH2 0x100
0x530 EXP
0x531 SWAP1
0x532 DIV
0x533 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x548 AND
0x549 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55e AND
0x55f CALLER
0x560 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x575 AND
0x576 EQ
0x577 ISZERO
0x578 ISZERO
0x579 PUSH2 0x581
0x57c JUMPI
---
0x526: JUMPDEST 
0x527: V316 = 0x0
0x52b: V317 = S[0x0]
0x52d: V318 = 0x100
0x530: V319 = EXP 0x100 0x0
0x532: V320 = DIV V317 0x1
0x533: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x548: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x549: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x55e: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x55f: V325 = CALLER
0x560: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x575: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x576: V328 = EQ V327 V324
0x577: V329 = ISZERO V328
0x578: V330 = ISZERO V329
0x579: V331 = 0x581
0x57c: JUMPI 0x581 V330
---
Entry stack: [V11, 0x1c5, V94, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5, V94, V112]

================================

Block 0x57d
[0x57d:0x580]
---
Predecessors: [0x526]
Successors: []
---
0x57d PUSH1 0x0
0x57f DUP1
0x580 REVERT
---
0x57d: V332 = 0x0
0x580: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c5, V94, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5, V94, V112]

================================

Block 0x581
[0x581:0x630]
---
Predecessors: [0x526]
Successors: [0x631]
---
0x581 JUMPDEST
0x582 DUP2
0x583 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x598 AND
0x599 PUSH3 0x493e0
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP1
0x5a1 DUP1
0x5a2 PUSH32 0x506c617928737472696e67290000000000000000000000000000000000000000
0x5c3 DUP2
0x5c4 MSTORE
0x5c5 POP
0x5c6 PUSH1 0xc
0x5c8 ADD
0x5c9 SWAP1
0x5ca POP
0x5cb PUSH1 0x40
0x5cd MLOAD
0x5ce DUP1
0x5cf SWAP2
0x5d0 SUB
0x5d1 SWAP1
0x5d2 SHA3
0x5d3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5f1 SWAP1
0x5f2 DIV
0x5f3 SWAP1
0x5f4 DUP4
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 DUP4
0x5f9 PUSH4 0xffffffff
0x5fe AND
0x5ff PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x61d MUL
0x61e DUP2
0x61f MSTORE
0x620 PUSH1 0x4
0x622 ADD
0x623 DUP1
0x624 DUP3
0x625 DUP1
0x626 MLOAD
0x627 SWAP1
0x628 PUSH1 0x20
0x62a ADD
0x62b SWAP1
0x62c DUP1
0x62d DUP4
0x62e DUP4
0x62f PUSH1 0x0
---
0x581: JUMPDEST 
0x583: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x598: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x599: V335 = 0x493e0
0x59d: V336 = 0x40
0x59f: V337 = M[0x40]
0x5a2: V338 = 0x506c617928737472696e67290000000000000000000000000000000000000000
0x5c4: M[V337] = 0x506c617928737472696e67290000000000000000000000000000000000000000
0x5c6: V339 = 0xc
0x5c8: V340 = ADD 0xc V337
0x5cb: V341 = 0x40
0x5cd: V342 = M[0x40]
0x5d0: V343 = SUB V340 V342
0x5d2: V344 = SHA3 V342 V343
0x5d3: V345 = 0x100000000000000000000000000000000000000000000000000000000
0x5f2: V346 = DIV V344 0x100000000000000000000000000000000000000000000000000000000
0x5f5: V347 = 0x40
0x5f7: V348 = M[0x40]
0x5f9: V349 = 0xffffffff
0x5fe: V350 = AND 0xffffffff V346
0x5ff: V351 = 0x100000000000000000000000000000000000000000000000000000000
0x61d: V352 = MUL 0x100000000000000000000000000000000000000000000000000000000 V350
0x61f: M[V348] = V352
0x620: V353 = 0x4
0x622: V354 = ADD 0x4 V348
0x626: V355 = M[V112]
0x628: V356 = 0x20
0x62a: V357 = ADD 0x20 V112
0x62f: V358 = 0x0
---
Entry stack: [V11, 0x1c5, V94, V112]
Stack pops: 2
Stack additions: [S1, S0, V334, V346, 0x493e0, S0, V354, V354, V357, V355, V355, V354, V357, 0x0]
Exit stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V354, V357, V355, V355, V354, V357, 0x0]

================================

Block 0x631
[0x631:0x639]
---
Predecessors: [0x581, 0x63a]
Successors: [0x63a, 0x64c]
---
0x631 JUMPDEST
0x632 DUP4
0x633 DUP2
0x634 LT
0x635 ISZERO
0x636 PUSH2 0x64c
0x639 JUMPI
---
0x631: JUMPDEST 
0x634: V359 = LT S0 V355
0x635: V360 = ISZERO V359
0x636: V361 = 0x64c
0x639: JUMPI 0x64c V360
---
Entry stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V354, V357, V355, V355, V354, V357, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V354, V357, V355, V355, V354, V357, S0]

================================

Block 0x63a
[0x63a:0x64b]
---
Predecessors: [0x631]
Successors: [0x631]
---
0x63a DUP1
0x63b DUP3
0x63c ADD
0x63d MLOAD
0x63e DUP2
0x63f DUP5
0x640 ADD
0x641 MSTORE
0x642 PUSH1 0x20
0x644 DUP2
0x645 ADD
0x646 SWAP1
0x647 POP
0x648 PUSH2 0x631
0x64b JUMP
---
0x63c: V362 = ADD V357 S0
0x63d: V363 = M[V362]
0x640: V364 = ADD V354 S0
0x641: M[V364] = V363
0x642: V365 = 0x20
0x645: V366 = ADD S0 0x20
0x648: V367 = 0x631
0x64b: JUMP 0x631
---
Entry stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V354, V357, V355, V355, V354, V357, S0]
Stack pops: 3
Stack additions: [S2, S1, V366]
Exit stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V354, V357, V355, V355, V354, V357, V366]

================================

Block 0x64c
[0x64c:0x65f]
---
Predecessors: [0x631]
Successors: [0x660, 0x679]
---
0x64c JUMPDEST
0x64d POP
0x64e POP
0x64f POP
0x650 POP
0x651 SWAP1
0x652 POP
0x653 SWAP1
0x654 DUP2
0x655 ADD
0x656 SWAP1
0x657 PUSH1 0x1f
0x659 AND
0x65a DUP1
0x65b ISZERO
0x65c PUSH2 0x679
0x65f JUMPI
---
0x64c: JUMPDEST 
0x655: V368 = ADD V355 V354
0x657: V369 = 0x1f
0x659: V370 = AND 0x1f V355
0x65b: V371 = ISZERO V370
0x65c: V372 = 0x679
0x65f: JUMPI 0x679 V371
---
Entry stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V354, V357, V355, V355, V354, V357, S0]
Stack pops: 7
Stack additions: [V368, V370]
Exit stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V368, V370]

================================

Block 0x660
[0x660:0x678]
---
Predecessors: [0x64c]
Successors: [0x679]
---
0x660 DUP1
0x661 DUP3
0x662 SUB
0x663 DUP1
0x664 MLOAD
0x665 PUSH1 0x1
0x667 DUP4
0x668 PUSH1 0x20
0x66a SUB
0x66b PUSH2 0x100
0x66e EXP
0x66f SUB
0x670 NOT
0x671 AND
0x672 DUP2
0x673 MSTORE
0x674 PUSH1 0x20
0x676 ADD
0x677 SWAP2
0x678 POP
---
0x662: V373 = SUB V368 V370
0x664: V374 = M[V373]
0x665: V375 = 0x1
0x668: V376 = 0x20
0x66a: V377 = SUB 0x20 V370
0x66b: V378 = 0x100
0x66e: V379 = EXP 0x100 V377
0x66f: V380 = SUB V379 0x1
0x670: V381 = NOT V380
0x671: V382 = AND V381 V374
0x673: M[V373] = V382
0x674: V383 = 0x20
0x676: V384 = ADD 0x20 V373
---
Entry stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V368, V370]
Stack pops: 2
Stack additions: [V384, S0]
Exit stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, V384, V370]

================================

Block 0x679
[0x679:0x694]
---
Predecessors: [0x64c, 0x660]
Successors: [0x1c5]
---
0x679 JUMPDEST
0x67a POP
0x67b SWAP2
0x67c POP
0x67d POP
0x67e PUSH1 0x0
0x680 PUSH1 0x40
0x682 MLOAD
0x683 DUP1
0x684 DUP4
0x685 SUB
0x686 DUP2
0x687 PUSH1 0x0
0x689 DUP9
0x68a DUP8
0x68b CALL
0x68c SWAP4
0x68d POP
0x68e POP
0x68f POP
0x690 POP
0x691 POP
0x692 POP
0x693 POP
0x694 JUMP
---
0x679: JUMPDEST 
0x67e: V385 = 0x0
0x680: V386 = 0x40
0x682: V387 = M[0x40]
0x685: V388 = SUB S1 V387
0x687: V389 = 0x0
0x68b: V390 = CALL 0x493e0 V334 0x0 V387 V388 V387 0x0
0x694: JUMP 0x1c5
---
Entry stack: [V11, 0x1c5, V94, V112, V334, V346, 0x493e0, V112, V354, S1, V370]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x695
[0x695:0x6eb]
---
Predecessors: [0x1c7]
Successors: [0x6ec, 0x6f0]
---
0x695 JUMPDEST
0x696 PUSH1 0x0
0x698 DUP1
0x699 SWAP1
0x69a SLOAD
0x69b SWAP1
0x69c PUSH2 0x100
0x69f EXP
0x6a0 SWAP1
0x6a1 DIV
0x6a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b7 AND
0x6b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cd AND
0x6ce CALLER
0x6cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e4 AND
0x6e5 EQ
0x6e6 ISZERO
0x6e7 ISZERO
0x6e8 PUSH2 0x6f0
0x6eb JUMPI
---
0x695: JUMPDEST 
0x696: V391 = 0x0
0x69a: V392 = S[0x0]
0x69c: V393 = 0x100
0x69f: V394 = EXP 0x100 0x0
0x6a1: V395 = DIV V392 0x1
0x6a2: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x6b8: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cd: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x6ce: V400 = CALLER
0x6cf: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e4: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x6e5: V403 = EQ V402 V399
0x6e6: V404 = ISZERO V403
0x6e7: V405 = ISZERO V404
0x6e8: V406 = 0x6f0
0x6eb: JUMPI 0x6f0 V405
---
Entry stack: [V11, 0x1fb, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb, V126]

================================

Block 0x6ec
[0x6ec:0x6ef]
---
Predecessors: [0x695]
Successors: []
---
0x6ec PUSH1 0x0
0x6ee DUP1
0x6ef REVERT
---
0x6ec: V407 = 0x0
0x6ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1fb, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb, V126]

================================

Block 0x6f0
[0x6f0:0x7a6]
---
Predecessors: [0x695]
Successors: [0x1fb]
---
0x6f0 JUMPDEST
0x6f1 DUP1
0x6f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x707 AND
0x708 PUSH3 0x493e0
0x70c PUSH1 0x40
0x70e MLOAD
0x70f DUP1
0x710 DUP1
0x711 PUSH32 0x53746f7047616d65282900000000000000000000000000000000000000000000
0x732 DUP2
0x733 MSTORE
0x734 POP
0x735 PUSH1 0xa
0x737 ADD
0x738 SWAP1
0x739 POP
0x73a PUSH1 0x40
0x73c MLOAD
0x73d DUP1
0x73e SWAP2
0x73f SUB
0x740 SWAP1
0x741 SHA3
0x742 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x760 SWAP1
0x761 DIV
0x762 SWAP1
0x763 PUSH1 0x40
0x765 MLOAD
0x766 DUP3
0x767 PUSH4 0xffffffff
0x76c AND
0x76d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x78b MUL
0x78c DUP2
0x78d MSTORE
0x78e PUSH1 0x4
0x790 ADD
0x791 PUSH1 0x0
0x793 PUSH1 0x40
0x795 MLOAD
0x796 DUP1
0x797 DUP4
0x798 SUB
0x799 DUP2
0x79a PUSH1 0x0
0x79c DUP9
0x79d DUP8
0x79e CALL
0x79f SWAP4
0x7a0 POP
0x7a1 POP
0x7a2 POP
0x7a3 POP
0x7a4 POP
0x7a5 POP
0x7a6 JUMP
---
0x6f0: JUMPDEST 
0x6f2: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x707: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x708: V410 = 0x493e0
0x70c: V411 = 0x40
0x70e: V412 = M[0x40]
0x711: V413 = 0x53746f7047616d65282900000000000000000000000000000000000000000000
0x733: M[V412] = 0x53746f7047616d65282900000000000000000000000000000000000000000000
0x735: V414 = 0xa
0x737: V415 = ADD 0xa V412
0x73a: V416 = 0x40
0x73c: V417 = M[0x40]
0x73f: V418 = SUB V415 V417
0x741: V419 = SHA3 V417 V418
0x742: V420 = 0x100000000000000000000000000000000000000000000000000000000
0x761: V421 = DIV V419 0x100000000000000000000000000000000000000000000000000000000
0x763: V422 = 0x40
0x765: V423 = M[0x40]
0x767: V424 = 0xffffffff
0x76c: V425 = AND 0xffffffff V421
0x76d: V426 = 0x100000000000000000000000000000000000000000000000000000000
0x78b: V427 = MUL 0x100000000000000000000000000000000000000000000000000000000 V425
0x78d: M[V423] = V427
0x78e: V428 = 0x4
0x790: V429 = ADD 0x4 V423
0x791: V430 = 0x0
0x793: V431 = 0x40
0x795: V432 = M[0x40]
0x798: V433 = SUB V429 V432
0x79a: V434 = 0x0
0x79e: V435 = CALL 0x493e0 V409 0x0 V432 V433 V432 0x0
0x7a6: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb, V126]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a7
[0x7a7:0x7fd]
---
Predecessors: [0x209]
Successors: [0x7fe, 0x802]
---
0x7a7 JUMPDEST
0x7a8 PUSH1 0x0
0x7aa DUP1
0x7ab SWAP1
0x7ac SLOAD
0x7ad SWAP1
0x7ae PUSH2 0x100
0x7b1 EXP
0x7b2 SWAP1
0x7b3 DIV
0x7b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c9 AND
0x7ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7df AND
0x7e0 CALLER
0x7e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f6 AND
0x7f7 EQ
0x7f8 ISZERO
0x7f9 ISZERO
0x7fa PUSH2 0x802
0x7fd JUMPI
---
0x7a7: JUMPDEST 
0x7a8: V436 = 0x0
0x7ac: V437 = S[0x0]
0x7ae: V438 = 0x100
0x7b1: V439 = EXP 0x100 0x0
0x7b3: V440 = DIV V437 0x1
0x7b4: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c9: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x7ca: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x7df: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x7e0: V445 = CALLER
0x7e1: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f6: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x7f7: V448 = EQ V447 V444
0x7f8: V449 = ISZERO V448
0x7f9: V450 = ISZERO V449
0x7fa: V451 = 0x802
0x7fd: JUMPI 0x802 V450
---
Entry stack: [V11, 0x284, V141, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x284, V141, V159]

================================

Block 0x7fe
[0x7fe:0x801]
---
Predecessors: [0x7a7]
Successors: []
---
0x7fe PUSH1 0x0
0x800 DUP1
0x801 REVERT
---
0x7fe: V452 = 0x0
0x801: REVERT 0x0 0x0
---
Entry stack: [V11, 0x284, V141, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x284, V141, V159]

================================

Block 0x802
[0x802:0x805]
---
Predecessors: [0x7a7]
Successors: [0x284]
---
0x802 JUMPDEST
0x803 POP
0x804 POP
0x805 JUMP
---
0x802: JUMPDEST 
0x805: JUMP 0x284
---
Entry stack: [V11, 0x284, V141, V159]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x806
[0x806:0x83d]
---
Predecessors: []
Successors: []
---
0x806 STOP
0x807 LOG1
0x808 PUSH6 0x627a7a723058
0x80f SHA3
0x810 SWAP16
0x811 MISSING 0xaa
0x812 PUSH28 0x5a20b2bbf00273f1b3c6949bd28ae2ad877f411f3dec7c993961d7c0
0x82f PUSH14 0x29
---
0x806: STOP 
0x807: LOG S0 S1 S2
0x808: V453 = 0x627a7a723058
0x80f: V454 = SHA3 0x627a7a723058 S3
0x811: MISSING 0xaa
0x812: V455 = 0x5a20b2bbf00273f1b3c6949bd28ae2ad877f411f3dec7c993961d7c0
0x82f: V456 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S19, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V454, 0x29, 0x5a20b2bbf00273f1b3c6949bd28ae2ad877f411f3dec7c993961d7c0]
Exit stack: []

================================

Function 0:
Public function signature: 0x35f51847
Entry block: 0x72
Exit block: 0x132
Body: 0x72, 0x132, 0x286, 0x2dd, 0x2e1, 0x392, 0x39b, 0x3ad, 0x3c1, 0x3da, 0x3e9, 0x3f2, 0x404, 0x418, 0x431

Function 1:
Public function signature: 0x7ab62d5a
Entry block: 0x134
Exit block: 0x519
Body: 0x134, 0x13c, 0x140, 0x149, 0x44f, 0x4a5, 0x519, 0x522, 0x524

Function 2:
Public function signature: 0x7c3f1ac7
Entry block: 0x14b
Exit block: 0x1c5
Body: 0x14b, 0x1c5, 0x526, 0x57d, 0x581, 0x631, 0x63a, 0x64c, 0x660, 0x679

Function 3:
Public function signature: 0xc3b80730
Entry block: 0x1c7
Exit block: 0x1fb
Body: 0x1c7, 0x1fb, 0x695, 0x6ec, 0x6f0

Function 4:
Public function signature: 0xd58c7faa
Entry block: 0x1fd
Exit block: 0x284
Body: 0x1fd, 0x205, 0x209, 0x284, 0x7a7, 0x7fe, 0x802

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

