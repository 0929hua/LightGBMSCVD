Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x55]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x55
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x55
0xa: JUMPI 0x55 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x6ea]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x3ccfd60b
0x3a EQ
0x3b PUSH2 0x6ea
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x3ccfd60b
0x3a: V12 = EQ 0x3ccfd60b V10
0x3b: V13 = 0x6ea
0x3e: JUMPI 0x6ea V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x6fc]
---
0x3f DUP1
0x40 PUSH4 0x8da5cb5b
0x45 EQ
0x46 PUSH2 0x6fc
0x49 JUMPI
---
0x40: V14 = 0x8da5cb5b
0x45: V15 = EQ 0x8da5cb5b V10
0x46: V16 = 0x6fc
0x49: JUMPI 0x6fc V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x74e]
---
0x4a DUP1
0x4b PUSH4 0xe90dfdfa
0x50 EQ
0x51 PUSH2 0x74e
0x54 JUMPI
---
0x4b: V17 = 0xe90dfdfa
0x50: V18 = EQ 0xe90dfdfa V10
0x51: V19 = 0x74e
0x54: JUMPI 0x74e V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x58]
---
Predecessors: [0x0, 0x4a]
Successors: [0x59]
---
0x55 JUMPDEST
0x56 PUSH2 0x6e8
---
0x55: JUMPDEST 
0x56: V20 = 0x6e8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6e8]
Exit stack: [V10, 0x6e8]

================================

Block 0x59
[0x59:0xeb]
---
Predecessors: [0x55]
Successors: [0xec, 0xed]
---
0x59 JUMPDEST
0x5a PUSH1 0x0
0x5c PUSH1 0x0
0x5e ISZERO
0x5f ISZERO
0x60 PUSH1 0x1
0x62 PUSH1 0x0
0x64 SWAP1
0x65 SLOAD
0x66 SWAP1
0x67 PUSH2 0x100
0x6a EXP
0x6b SWAP1
0x6c DIV
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 PUSH4 0x331e7280
0x9e PUSH1 0x0
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 MSTORE
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP2
0xab PUSH4 0xffffffff
0xb0 AND
0xb1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xcf MUL
0xd0 DUP2
0xd1 MSTORE
0xd2 PUSH1 0x4
0xd4 ADD
0xd5 DUP1
0xd6 SWAP1
0xd7 POP
0xd8 PUSH1 0x20
0xda PUSH1 0x40
0xdc MLOAD
0xdd DUP1
0xde DUP4
0xdf SUB
0xe0 DUP2
0xe1 PUSH1 0x0
0xe3 DUP8
0xe4 DUP1
0xe5 EXTCODESIZE
0xe6 ISZERO
0xe7 ISZERO
0xe8 PUSH2 0xed
0xeb JUMPI
---
0x59: JUMPDEST 
0x5a: V21 = 0x0
0x5c: V22 = 0x0
0x5e: V23 = ISZERO 0x0
0x5f: V24 = ISZERO 0x1
0x60: V25 = 0x1
0x62: V26 = 0x0
0x65: V27 = S[0x1]
0x67: V28 = 0x100
0x6a: V29 = EXP 0x100 0x0
0x6c: V30 = DIV V27 0x1
0x6d: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x83: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x99: V35 = 0x331e7280
0x9e: V36 = 0x0
0xa0: V37 = 0x40
0xa2: V38 = M[0x40]
0xa3: V39 = 0x20
0xa5: V40 = ADD 0x20 V38
0xa6: M[V40] = 0x0
0xa7: V41 = 0x40
0xa9: V42 = M[0x40]
0xab: V43 = 0xffffffff
0xb0: V44 = AND 0xffffffff 0x331e7280
0xb1: V45 = 0x100000000000000000000000000000000000000000000000000000000
0xcf: V46 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x331e7280
0xd1: M[V42] = 0x331e728000000000000000000000000000000000000000000000000000000000
0xd2: V47 = 0x4
0xd4: V48 = ADD 0x4 V42
0xd8: V49 = 0x20
0xda: V50 = 0x40
0xdc: V51 = M[0x40]
0xdf: V52 = SUB V48 V51
0xe1: V53 = 0x0
0xe5: V54 = EXTCODESIZE V34
0xe6: V55 = ISZERO V54
0xe7: V56 = ISZERO V55
0xe8: V57 = 0xed
0xeb: JUMPI 0xed V56
---
Entry stack: [V10, 0x6e8]
Stack pops: 0
Stack additions: [0x0, 0x0, V34, 0x331e7280, V48, 0x20, V51, V52, V51, 0x0, V34]
Exit stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48, 0x20, V51, V52, V51, 0x0, V34]

================================

Block 0xec
[0xec:0xec]
---
Predecessors: [0x59]
Successors: []
---
0xec INVALID
---
0xec: INVALID 
---
Entry stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48, 0x20, V51, V52, V51, 0x0, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48, 0x20, V51, V52, V51, 0x0, V34]

================================

Block 0xed
[0xed:0xf9]
---
Predecessors: [0x59]
Successors: [0xfa, 0xfb]
---
0xed JUMPDEST
0xee PUSH2 0x2c6
0xf1 GAS
0xf2 SUB
0xf3 CALL
0xf4 ISZERO
0xf5 ISZERO
0xf6 PUSH2 0xfb
0xf9 JUMPI
---
0xed: JUMPDEST 
0xee: V58 = 0x2c6
0xf1: V59 = GAS
0xf2: V60 = SUB V59 0x2c6
0xf3: V61 = CALL V60 V34 0x0 V51 V52 V51 0x20
0xf4: V62 = ISZERO V61
0xf5: V63 = ISZERO V62
0xf6: V64 = 0xfb
0xf9: JUMPI 0xfb V63
---
Entry stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48, 0x20, V51, V52, V51, 0x0, V34]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48]

================================

Block 0xfa
[0xfa:0xfa]
---
Predecessors: [0xed]
Successors: []
---
0xfa INVALID
---
0xfa: INVALID 
---
Entry stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48]

================================

Block 0xfb
[0xfb:0x10d]
---
Predecessors: [0xed]
Successors: [0x10e, 0x113]
---
0xfb JUMPDEST
0xfc POP
0xfd POP
0xfe POP
0xff PUSH1 0x40
0x101 MLOAD
0x102 DUP1
0x103 MLOAD
0x104 SWAP1
0x105 POP
0x106 ISZERO
0x107 ISZERO
0x108 EQ
0x109 ISZERO
0x10a PUSH2 0x113
0x10d JUMPI
---
0xfb: JUMPDEST 
0xff: V65 = 0x40
0x101: V66 = M[0x40]
0x103: V67 = M[V66]
0x106: V68 = ISZERO V67
0x107: V69 = ISZERO V68
0x108: V70 = EQ V69 0x0
0x109: V71 = ISZERO V70
0x10a: V72 = 0x113
0x10d: JUMPI 0x113 V71
---
Entry stack: [V10, 0x6e8, 0x0, 0x0, V34, 0x331e7280, V48]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x6e8, 0x0]

================================

Block 0x10e
[0x10e:0x112]
---
Predecessors: [0xfb]
Successors: []
---
0x10e PUSH1 0x0
0x110 PUSH1 0x0
0x112 REVERT
---
0x10e: V73 = 0x0
0x110: V74 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6e8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, 0x0]

================================

Block 0x113
[0x113:0x1a2]
---
Predecessors: [0xfb]
Successors: [0x1a3, 0x1a4]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 SWAP1
0x116 POP
0x117 PUSH1 0x1
0x119 PUSH1 0x0
0x11b SWAP1
0x11c SLOAD
0x11d SWAP1
0x11e PUSH2 0x100
0x121 EXP
0x122 SWAP1
0x123 DIV
0x124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139 AND
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 PUSH4 0xa5609597
0x155 PUSH1 0x0
0x157 PUSH1 0x40
0x159 MLOAD
0x15a PUSH1 0x20
0x15c ADD
0x15d MSTORE
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP2
0x162 PUSH4 0xffffffff
0x167 AND
0x168 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x186 MUL
0x187 DUP2
0x188 MSTORE
0x189 PUSH1 0x4
0x18b ADD
0x18c DUP1
0x18d SWAP1
0x18e POP
0x18f PUSH1 0x20
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP4
0x196 SUB
0x197 DUP2
0x198 PUSH1 0x0
0x19a DUP8
0x19b DUP1
0x19c EXTCODESIZE
0x19d ISZERO
0x19e ISZERO
0x19f PUSH2 0x1a4
0x1a2 JUMPI
---
0x113: JUMPDEST 
0x114: V75 = CALLVALUE
0x117: V76 = 0x1
0x119: V77 = 0x0
0x11c: V78 = S[0x1]
0x11e: V79 = 0x100
0x121: V80 = EXP 0x100 0x0
0x123: V81 = DIV V78 0x1
0x124: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x139: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x13a: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x150: V86 = 0xa5609597
0x155: V87 = 0x0
0x157: V88 = 0x40
0x159: V89 = M[0x40]
0x15a: V90 = 0x20
0x15c: V91 = ADD 0x20 V89
0x15d: M[V91] = 0x0
0x15e: V92 = 0x40
0x160: V93 = M[0x40]
0x162: V94 = 0xffffffff
0x167: V95 = AND 0xffffffff 0xa5609597
0x168: V96 = 0x100000000000000000000000000000000000000000000000000000000
0x186: V97 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa5609597
0x188: M[V93] = 0xa560959700000000000000000000000000000000000000000000000000000000
0x189: V98 = 0x4
0x18b: V99 = ADD 0x4 V93
0x18f: V100 = 0x20
0x191: V101 = 0x40
0x193: V102 = M[0x40]
0x196: V103 = SUB V99 V102
0x198: V104 = 0x0
0x19c: V105 = EXTCODESIZE V85
0x19d: V106 = ISZERO V105
0x19e: V107 = ISZERO V106
0x19f: V108 = 0x1a4
0x1a2: JUMPI 0x1a4 V107
---
Entry stack: [V10, 0x6e8, 0x0]
Stack pops: 1
Stack additions: [V75, V85, 0xa5609597, V99, 0x20, V102, V103, V102, 0x0, V85]
Exit stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99, 0x20, V102, V103, V102, 0x0, V85]

================================

Block 0x1a3
[0x1a3:0x1a3]
---
Predecessors: [0x113]
Successors: []
---
0x1a3 INVALID
---
0x1a3: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99, 0x20, V102, V103, V102, 0x0, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99, 0x20, V102, V103, V102, 0x0, V85]

================================

Block 0x1a4
[0x1a4:0x1b0]
---
Predecessors: [0x113]
Successors: [0x1b1, 0x1b2]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0x2c6
0x1a8 GAS
0x1a9 SUB
0x1aa CALL
0x1ab ISZERO
0x1ac ISZERO
0x1ad PUSH2 0x1b2
0x1b0 JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V109 = 0x2c6
0x1a8: V110 = GAS
0x1a9: V111 = SUB V110 0x2c6
0x1aa: V112 = CALL V111 V85 0x0 V102 V103 V102 0x20
0x1ab: V113 = ISZERO V112
0x1ac: V114 = ISZERO V113
0x1ad: V115 = 0x1b2
0x1b0: JUMPI 0x1b2 V114
---
Entry stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99, 0x20, V102, V103, V102, 0x0, V85]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99]

================================

Block 0x1b1
[0x1b1:0x1b1]
---
Predecessors: [0x1a4]
Successors: []
---
0x1b1 INVALID
---
0x1b1: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99]

================================

Block 0x1b2
[0x1b2:0x1e8]
---
Predecessors: [0x1a4]
Successors: [0x784]
---
0x1b2 JUMPDEST
0x1b3 POP
0x1b4 POP
0x1b5 POP
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 DUP1
0x1ba MLOAD
0x1bb SWAP1
0x1bc POP
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 PUSH2 0x8fc
0x1d6 PUSH2 0x1e9
0x1d9 PUSH1 0x5
0x1db DUP5
0x1dc PUSH2 0x784
0x1df SWAP1
0x1e0 SWAP2
0x1e1 SWAP1
0x1e2 PUSH4 0xffffffff
0x1e7 AND
0x1e8 JUMP
---
0x1b2: JUMPDEST 
0x1b6: V116 = 0x40
0x1b8: V117 = M[0x40]
0x1ba: V118 = M[V117]
0x1bd: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1d3: V121 = 0x8fc
0x1d6: V122 = 0x1e9
0x1d9: V123 = 0x5
0x1dc: V124 = 0x784
0x1e2: V125 = 0xffffffff
0x1e7: V126 = AND 0xffffffff 0x784
0x1e8: JUMP 0x784
---
Entry stack: [V10, 0x6e8, V75, V85, 0xa5609597, V99]
Stack pops: 4
Stack additions: [S3, V120, 0x8fc, 0x1e9, S3, 0x5]
Exit stack: [V10, 0x6e8, V75, V120, 0x8fc, 0x1e9, V75, 0x5]

================================

Block 0x1e9
[0x1e9:0x293]
---
Predecessors: [0x79a]
Successors: [0x294, 0x295]
---
0x1e9 JUMPDEST
0x1ea SWAP1
0x1eb DUP2
0x1ec ISZERO
0x1ed MUL
0x1ee SWAP1
0x1ef PUSH1 0x40
0x1f1 MLOAD
0x1f2 DUP1
0x1f3 SWAP1
0x1f4 POP
0x1f5 PUSH1 0x0
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb DUP4
0x1fc SUB
0x1fd DUP2
0x1fe DUP6
0x1ff DUP9
0x200 DUP9
0x201 CALL
0x202 SWAP4
0x203 POP
0x204 POP
0x205 POP
0x206 POP
0x207 POP
0x208 PUSH1 0x1
0x20a PUSH1 0x0
0x20c SWAP1
0x20d SLOAD
0x20e SWAP1
0x20f PUSH2 0x100
0x212 EXP
0x213 SWAP1
0x214 DIV
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 PUSH4 0xe0b376d8
0x246 PUSH1 0x0
0x248 PUSH1 0x40
0x24a MLOAD
0x24b PUSH1 0x20
0x24d ADD
0x24e MSTORE
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP2
0x253 PUSH4 0xffffffff
0x258 AND
0x259 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x277 MUL
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x4
0x27c ADD
0x27d DUP1
0x27e SWAP1
0x27f POP
0x280 PUSH1 0x20
0x282 PUSH1 0x40
0x284 MLOAD
0x285 DUP1
0x286 DUP4
0x287 SUB
0x288 DUP2
0x289 PUSH1 0x0
0x28b DUP8
0x28c DUP1
0x28d EXTCODESIZE
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x295
0x293 JUMPI
---
0x1e9: JUMPDEST 
0x1ec: V127 = ISZERO S0
0x1ed: V128 = MUL V127 0x8fc
0x1ef: V129 = 0x40
0x1f1: V130 = M[0x40]
0x1f5: V131 = 0x0
0x1f7: V132 = 0x40
0x1f9: V133 = M[0x40]
0x1fc: V134 = SUB V130 V133
0x201: V135 = CALL V128 S2 S0 V133 V134 V133 0x0
0x208: V136 = 0x1
0x20a: V137 = 0x0
0x20d: V138 = S[0x1]
0x20f: V139 = 0x100
0x212: V140 = EXP 0x100 0x0
0x214: V141 = DIV V138 0x1
0x215: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x22b: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x241: V146 = 0xe0b376d8
0x246: V147 = 0x0
0x248: V148 = 0x40
0x24a: V149 = M[0x40]
0x24b: V150 = 0x20
0x24d: V151 = ADD 0x20 V149
0x24e: M[V151] = 0x0
0x24f: V152 = 0x40
0x251: V153 = M[0x40]
0x253: V154 = 0xffffffff
0x258: V155 = AND 0xffffffff 0xe0b376d8
0x259: V156 = 0x100000000000000000000000000000000000000000000000000000000
0x277: V157 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe0b376d8
0x279: M[V153] = 0xe0b376d800000000000000000000000000000000000000000000000000000000
0x27a: V158 = 0x4
0x27c: V159 = ADD 0x4 V153
0x280: V160 = 0x20
0x282: V161 = 0x40
0x284: V162 = M[0x40]
0x287: V163 = SUB V159 V162
0x289: V164 = 0x0
0x28d: V165 = EXTCODESIZE V145
0x28e: V166 = ISZERO V165
0x28f: V167 = ISZERO V166
0x290: V168 = 0x295
0x293: JUMPI 0x295 V167
---
Entry stack: [V10, 0x6e8, V75, S2, 0x8fc, S0]
Stack pops: 3
Stack additions: [V145, 0xe0b376d8, V159, 0x20, V162, V163, V162, 0x0, V145]
Exit stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159, 0x20, V162, V163, V162, 0x0, V145]

================================

Block 0x294
[0x294:0x294]
---
Predecessors: [0x1e9]
Successors: []
---
0x294 INVALID
---
0x294: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159, 0x20, V162, V163, V162, 0x0, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159, 0x20, V162, V163, V162, 0x0, V145]

================================

Block 0x295
[0x295:0x2a1]
---
Predecessors: [0x1e9]
Successors: [0x2a2, 0x2a3]
---
0x295 JUMPDEST
0x296 PUSH2 0x2c6
0x299 GAS
0x29a SUB
0x29b CALL
0x29c ISZERO
0x29d ISZERO
0x29e PUSH2 0x2a3
0x2a1 JUMPI
---
0x295: JUMPDEST 
0x296: V169 = 0x2c6
0x299: V170 = GAS
0x29a: V171 = SUB V170 0x2c6
0x29b: V172 = CALL V171 V145 0x0 V162 V163 V162 0x20
0x29c: V173 = ISZERO V172
0x29d: V174 = ISZERO V173
0x29e: V175 = 0x2a3
0x2a1: JUMPI 0x2a3 V174
---
Entry stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159, 0x20, V162, V163, V162, 0x0, V145]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159]

================================

Block 0x2a2
[0x2a2:0x2a2]
---
Predecessors: [0x295]
Successors: []
---
0x2a2 INVALID
---
0x2a2: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159]

================================

Block 0x2a3
[0x2a3:0x2d9]
---
Predecessors: [0x295]
Successors: [0x784]
---
0x2a3 JUMPDEST
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab MLOAD
0x2ac SWAP1
0x2ad POP
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 AND
0x2c4 PUSH2 0x8fc
0x2c7 PUSH2 0x2da
0x2ca PUSH1 0x5
0x2cc DUP5
0x2cd PUSH2 0x784
0x2d0 SWAP1
0x2d1 SWAP2
0x2d2 SWAP1
0x2d3 PUSH4 0xffffffff
0x2d8 AND
0x2d9 JUMP
---
0x2a3: JUMPDEST 
0x2a7: V176 = 0x40
0x2a9: V177 = M[0x40]
0x2ab: V178 = M[V177]
0x2ae: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2c4: V181 = 0x8fc
0x2c7: V182 = 0x2da
0x2ca: V183 = 0x5
0x2cd: V184 = 0x784
0x2d3: V185 = 0xffffffff
0x2d8: V186 = AND 0xffffffff 0x784
0x2d9: JUMP 0x784
---
Entry stack: [V10, 0x6e8, V75, V145, 0xe0b376d8, V159]
Stack pops: 4
Stack additions: [S3, V180, 0x8fc, 0x2da, S3, 0x5]
Exit stack: [V10, 0x6e8, V75, V180, 0x8fc, 0x2da, V75, 0x5]

================================

Block 0x2da
[0x2da:0x384]
---
Predecessors: [0x79a]
Successors: [0x385, 0x386]
---
0x2da JUMPDEST
0x2db SWAP1
0x2dc DUP2
0x2dd ISZERO
0x2de MUL
0x2df SWAP1
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 DUP1
0x2e4 SWAP1
0x2e5 POP
0x2e6 PUSH1 0x0
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP4
0x2ed SUB
0x2ee DUP2
0x2ef DUP6
0x2f0 DUP9
0x2f1 DUP9
0x2f2 CALL
0x2f3 SWAP4
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x1
0x2fb PUSH1 0x0
0x2fd SWAP1
0x2fe SLOAD
0x2ff SWAP1
0x300 PUSH2 0x100
0x303 EXP
0x304 SWAP1
0x305 DIV
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 AND
0x332 PUSH4 0x6cf9cec7
0x337 PUSH1 0x0
0x339 PUSH1 0x40
0x33b MLOAD
0x33c PUSH1 0x20
0x33e ADD
0x33f MSTORE
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP2
0x344 PUSH4 0xffffffff
0x349 AND
0x34a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x368 MUL
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x4
0x36d ADD
0x36e DUP1
0x36f SWAP1
0x370 POP
0x371 PUSH1 0x20
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 DUP4
0x378 SUB
0x379 DUP2
0x37a PUSH1 0x0
0x37c DUP8
0x37d DUP1
0x37e EXTCODESIZE
0x37f ISZERO
0x380 ISZERO
0x381 PUSH2 0x386
0x384 JUMPI
---
0x2da: JUMPDEST 
0x2dd: V187 = ISZERO S0
0x2de: V188 = MUL V187 0x8fc
0x2e0: V189 = 0x40
0x2e2: V190 = M[0x40]
0x2e6: V191 = 0x0
0x2e8: V192 = 0x40
0x2ea: V193 = M[0x40]
0x2ed: V194 = SUB V190 V193
0x2f2: V195 = CALL V188 S2 S0 V193 V194 V193 0x0
0x2f9: V196 = 0x1
0x2fb: V197 = 0x0
0x2fe: V198 = S[0x1]
0x300: V199 = 0x100
0x303: V200 = EXP 0x100 0x0
0x305: V201 = DIV V198 0x1
0x306: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x31c: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x332: V206 = 0x6cf9cec7
0x337: V207 = 0x0
0x339: V208 = 0x40
0x33b: V209 = M[0x40]
0x33c: V210 = 0x20
0x33e: V211 = ADD 0x20 V209
0x33f: M[V211] = 0x0
0x340: V212 = 0x40
0x342: V213 = M[0x40]
0x344: V214 = 0xffffffff
0x349: V215 = AND 0xffffffff 0x6cf9cec7
0x34a: V216 = 0x100000000000000000000000000000000000000000000000000000000
0x368: V217 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6cf9cec7
0x36a: M[V213] = 0x6cf9cec700000000000000000000000000000000000000000000000000000000
0x36b: V218 = 0x4
0x36d: V219 = ADD 0x4 V213
0x371: V220 = 0x20
0x373: V221 = 0x40
0x375: V222 = M[0x40]
0x378: V223 = SUB V219 V222
0x37a: V224 = 0x0
0x37e: V225 = EXTCODESIZE V205
0x37f: V226 = ISZERO V225
0x380: V227 = ISZERO V226
0x381: V228 = 0x386
0x384: JUMPI 0x386 V227
---
Entry stack: [V10, 0x6e8, V75, S2, 0x8fc, S0]
Stack pops: 3
Stack additions: [V205, 0x6cf9cec7, V219, 0x20, V222, V223, V222, 0x0, V205]
Exit stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219, 0x20, V222, V223, V222, 0x0, V205]

================================

Block 0x385
[0x385:0x385]
---
Predecessors: [0x2da]
Successors: []
---
0x385 INVALID
---
0x385: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219, 0x20, V222, V223, V222, 0x0, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219, 0x20, V222, V223, V222, 0x0, V205]

================================

Block 0x386
[0x386:0x392]
---
Predecessors: [0x2da]
Successors: [0x393, 0x394]
---
0x386 JUMPDEST
0x387 PUSH2 0x2c6
0x38a GAS
0x38b SUB
0x38c CALL
0x38d ISZERO
0x38e ISZERO
0x38f PUSH2 0x394
0x392 JUMPI
---
0x386: JUMPDEST 
0x387: V229 = 0x2c6
0x38a: V230 = GAS
0x38b: V231 = SUB V230 0x2c6
0x38c: V232 = CALL V231 V205 0x0 V222 V223 V222 0x20
0x38d: V233 = ISZERO V232
0x38e: V234 = ISZERO V233
0x38f: V235 = 0x394
0x392: JUMPI 0x394 V234
---
Entry stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219, 0x20, V222, V223, V222, 0x0, V205]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219]

================================

Block 0x393
[0x393:0x393]
---
Predecessors: [0x386]
Successors: []
---
0x393 INVALID
---
0x393: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219]

================================

Block 0x394
[0x394:0x3ca]
---
Predecessors: [0x386]
Successors: [0x784]
---
0x394 JUMPDEST
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b DUP1
0x39c MLOAD
0x39d SWAP1
0x39e POP
0x39f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b4 AND
0x3b5 PUSH2 0x8fc
0x3b8 PUSH2 0x3cb
0x3bb PUSH1 0x5
0x3bd DUP5
0x3be PUSH2 0x784
0x3c1 SWAP1
0x3c2 SWAP2
0x3c3 SWAP1
0x3c4 PUSH4 0xffffffff
0x3c9 AND
0x3ca JUMP
---
0x394: JUMPDEST 
0x398: V236 = 0x40
0x39a: V237 = M[0x40]
0x39c: V238 = M[V237]
0x39f: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x3b5: V241 = 0x8fc
0x3b8: V242 = 0x3cb
0x3bb: V243 = 0x5
0x3be: V244 = 0x784
0x3c4: V245 = 0xffffffff
0x3c9: V246 = AND 0xffffffff 0x784
0x3ca: JUMP 0x784
---
Entry stack: [V10, 0x6e8, V75, V205, 0x6cf9cec7, V219]
Stack pops: 4
Stack additions: [S3, V240, 0x8fc, 0x3cb, S3, 0x5]
Exit stack: [V10, 0x6e8, V75, V240, 0x8fc, 0x3cb, V75, 0x5]

================================

Block 0x3cb
[0x3cb:0x475]
---
Predecessors: [0x79a]
Successors: [0x476, 0x477]
---
0x3cb JUMPDEST
0x3cc SWAP1
0x3cd DUP2
0x3ce ISZERO
0x3cf MUL
0x3d0 SWAP1
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 DUP1
0x3d5 SWAP1
0x3d6 POP
0x3d7 PUSH1 0x0
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd DUP4
0x3de SUB
0x3df DUP2
0x3e0 DUP6
0x3e1 DUP9
0x3e2 DUP9
0x3e3 CALL
0x3e4 SWAP4
0x3e5 POP
0x3e6 POP
0x3e7 POP
0x3e8 POP
0x3e9 POP
0x3ea PUSH1 0x1
0x3ec PUSH1 0x0
0x3ee SWAP1
0x3ef SLOAD
0x3f0 SWAP1
0x3f1 PUSH2 0x100
0x3f4 EXP
0x3f5 SWAP1
0x3f6 DIV
0x3f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40c AND
0x40d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x422 AND
0x423 PUSH4 0x4faea5d0
0x428 PUSH1 0x0
0x42a PUSH1 0x40
0x42c MLOAD
0x42d PUSH1 0x20
0x42f ADD
0x430 MSTORE
0x431 PUSH1 0x40
0x433 MLOAD
0x434 DUP2
0x435 PUSH4 0xffffffff
0x43a AND
0x43b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x459 MUL
0x45a DUP2
0x45b MSTORE
0x45c PUSH1 0x4
0x45e ADD
0x45f DUP1
0x460 SWAP1
0x461 POP
0x462 PUSH1 0x20
0x464 PUSH1 0x40
0x466 MLOAD
0x467 DUP1
0x468 DUP4
0x469 SUB
0x46a DUP2
0x46b PUSH1 0x0
0x46d DUP8
0x46e DUP1
0x46f EXTCODESIZE
0x470 ISZERO
0x471 ISZERO
0x472 PUSH2 0x477
0x475 JUMPI
---
0x3cb: JUMPDEST 
0x3ce: V247 = ISZERO S0
0x3cf: V248 = MUL V247 0x8fc
0x3d1: V249 = 0x40
0x3d3: V250 = M[0x40]
0x3d7: V251 = 0x0
0x3d9: V252 = 0x40
0x3db: V253 = M[0x40]
0x3de: V254 = SUB V250 V253
0x3e3: V255 = CALL V248 S2 S0 V253 V254 V253 0x0
0x3ea: V256 = 0x1
0x3ec: V257 = 0x0
0x3ef: V258 = S[0x1]
0x3f1: V259 = 0x100
0x3f4: V260 = EXP 0x100 0x0
0x3f6: V261 = DIV V258 0x1
0x3f7: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x40d: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x422: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x423: V266 = 0x4faea5d0
0x428: V267 = 0x0
0x42a: V268 = 0x40
0x42c: V269 = M[0x40]
0x42d: V270 = 0x20
0x42f: V271 = ADD 0x20 V269
0x430: M[V271] = 0x0
0x431: V272 = 0x40
0x433: V273 = M[0x40]
0x435: V274 = 0xffffffff
0x43a: V275 = AND 0xffffffff 0x4faea5d0
0x43b: V276 = 0x100000000000000000000000000000000000000000000000000000000
0x459: V277 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4faea5d0
0x45b: M[V273] = 0x4faea5d000000000000000000000000000000000000000000000000000000000
0x45c: V278 = 0x4
0x45e: V279 = ADD 0x4 V273
0x462: V280 = 0x20
0x464: V281 = 0x40
0x466: V282 = M[0x40]
0x469: V283 = SUB V279 V282
0x46b: V284 = 0x0
0x46f: V285 = EXTCODESIZE V265
0x470: V286 = ISZERO V285
0x471: V287 = ISZERO V286
0x472: V288 = 0x477
0x475: JUMPI 0x477 V287
---
Entry stack: [V10, 0x6e8, V75, S2, 0x8fc, S0]
Stack pops: 3
Stack additions: [V265, 0x4faea5d0, V279, 0x20, V282, V283, V282, 0x0, V265]
Exit stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279, 0x20, V282, V283, V282, 0x0, V265]

================================

Block 0x476
[0x476:0x476]
---
Predecessors: [0x3cb]
Successors: []
---
0x476 INVALID
---
0x476: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279, 0x20, V282, V283, V282, 0x0, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279, 0x20, V282, V283, V282, 0x0, V265]

================================

Block 0x477
[0x477:0x483]
---
Predecessors: [0x3cb]
Successors: [0x484, 0x485]
---
0x477 JUMPDEST
0x478 PUSH2 0x2c6
0x47b GAS
0x47c SUB
0x47d CALL
0x47e ISZERO
0x47f ISZERO
0x480 PUSH2 0x485
0x483 JUMPI
---
0x477: JUMPDEST 
0x478: V289 = 0x2c6
0x47b: V290 = GAS
0x47c: V291 = SUB V290 0x2c6
0x47d: V292 = CALL V291 V265 0x0 V282 V283 V282 0x20
0x47e: V293 = ISZERO V292
0x47f: V294 = ISZERO V293
0x480: V295 = 0x485
0x483: JUMPI 0x485 V294
---
Entry stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279, 0x20, V282, V283, V282, 0x0, V265]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279]

================================

Block 0x484
[0x484:0x484]
---
Predecessors: [0x477]
Successors: []
---
0x484 INVALID
---
0x484: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279]

================================

Block 0x485
[0x485:0x4bb]
---
Predecessors: [0x477]
Successors: [0x784]
---
0x485 JUMPDEST
0x486 POP
0x487 POP
0x488 POP
0x489 PUSH1 0x40
0x48b MLOAD
0x48c DUP1
0x48d MLOAD
0x48e SWAP1
0x48f POP
0x490 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a5 AND
0x4a6 PUSH2 0x8fc
0x4a9 PUSH2 0x4bc
0x4ac PUSH1 0x5
0x4ae DUP5
0x4af PUSH2 0x784
0x4b2 SWAP1
0x4b3 SWAP2
0x4b4 SWAP1
0x4b5 PUSH4 0xffffffff
0x4ba AND
0x4bb JUMP
---
0x485: JUMPDEST 
0x489: V296 = 0x40
0x48b: V297 = M[0x40]
0x48d: V298 = M[V297]
0x490: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a5: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x4a6: V301 = 0x8fc
0x4a9: V302 = 0x4bc
0x4ac: V303 = 0x5
0x4af: V304 = 0x784
0x4b5: V305 = 0xffffffff
0x4ba: V306 = AND 0xffffffff 0x784
0x4bb: JUMP 0x784
---
Entry stack: [V10, 0x6e8, V75, V265, 0x4faea5d0, V279]
Stack pops: 4
Stack additions: [S3, V300, 0x8fc, 0x4bc, S3, 0x5]
Exit stack: [V10, 0x6e8, V75, V300, 0x8fc, 0x4bc, V75, 0x5]

================================

Block 0x4bc
[0x4bc:0x566]
---
Predecessors: [0x79a]
Successors: [0x567, 0x568]
---
0x4bc JUMPDEST
0x4bd SWAP1
0x4be DUP2
0x4bf ISZERO
0x4c0 MUL
0x4c1 SWAP1
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP1
0x4c7 POP
0x4c8 PUSH1 0x0
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd DUP1
0x4ce DUP4
0x4cf SUB
0x4d0 DUP2
0x4d1 DUP6
0x4d2 DUP9
0x4d3 DUP9
0x4d4 CALL
0x4d5 SWAP4
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da POP
0x4db PUSH1 0x1
0x4dd PUSH1 0x0
0x4df SWAP1
0x4e0 SLOAD
0x4e1 SWAP1
0x4e2 PUSH2 0x100
0x4e5 EXP
0x4e6 SWAP1
0x4e7 DIV
0x4e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fd AND
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 PUSH4 0x66db33a7
0x519 PUSH1 0x0
0x51b PUSH1 0x40
0x51d MLOAD
0x51e PUSH1 0x20
0x520 ADD
0x521 MSTORE
0x522 PUSH1 0x40
0x524 MLOAD
0x525 DUP2
0x526 PUSH4 0xffffffff
0x52b AND
0x52c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x54a MUL
0x54b DUP2
0x54c MSTORE
0x54d PUSH1 0x4
0x54f ADD
0x550 DUP1
0x551 SWAP1
0x552 POP
0x553 PUSH1 0x20
0x555 PUSH1 0x40
0x557 MLOAD
0x558 DUP1
0x559 DUP4
0x55a SUB
0x55b DUP2
0x55c PUSH1 0x0
0x55e DUP8
0x55f DUP1
0x560 EXTCODESIZE
0x561 ISZERO
0x562 ISZERO
0x563 PUSH2 0x568
0x566 JUMPI
---
0x4bc: JUMPDEST 
0x4bf: V307 = ISZERO S0
0x4c0: V308 = MUL V307 0x8fc
0x4c2: V309 = 0x40
0x4c4: V310 = M[0x40]
0x4c8: V311 = 0x0
0x4ca: V312 = 0x40
0x4cc: V313 = M[0x40]
0x4cf: V314 = SUB V310 V313
0x4d4: V315 = CALL V308 S2 S0 V313 V314 V313 0x0
0x4db: V316 = 0x1
0x4dd: V317 = 0x0
0x4e0: V318 = S[0x1]
0x4e2: V319 = 0x100
0x4e5: V320 = EXP 0x100 0x0
0x4e7: V321 = DIV V318 0x1
0x4e8: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fd: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x4fe: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x514: V326 = 0x66db33a7
0x519: V327 = 0x0
0x51b: V328 = 0x40
0x51d: V329 = M[0x40]
0x51e: V330 = 0x20
0x520: V331 = ADD 0x20 V329
0x521: M[V331] = 0x0
0x522: V332 = 0x40
0x524: V333 = M[0x40]
0x526: V334 = 0xffffffff
0x52b: V335 = AND 0xffffffff 0x66db33a7
0x52c: V336 = 0x100000000000000000000000000000000000000000000000000000000
0x54a: V337 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x66db33a7
0x54c: M[V333] = 0x66db33a700000000000000000000000000000000000000000000000000000000
0x54d: V338 = 0x4
0x54f: V339 = ADD 0x4 V333
0x553: V340 = 0x20
0x555: V341 = 0x40
0x557: V342 = M[0x40]
0x55a: V343 = SUB V339 V342
0x55c: V344 = 0x0
0x560: V345 = EXTCODESIZE V325
0x561: V346 = ISZERO V345
0x562: V347 = ISZERO V346
0x563: V348 = 0x568
0x566: JUMPI 0x568 V347
---
Entry stack: [V10, 0x6e8, V75, S2, 0x8fc, S0]
Stack pops: 3
Stack additions: [V325, 0x66db33a7, V339, 0x20, V342, V343, V342, 0x0, V325]
Exit stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339, 0x20, V342, V343, V342, 0x0, V325]

================================

Block 0x567
[0x567:0x567]
---
Predecessors: [0x4bc]
Successors: []
---
0x567 INVALID
---
0x567: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339, 0x20, V342, V343, V342, 0x0, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339, 0x20, V342, V343, V342, 0x0, V325]

================================

Block 0x568
[0x568:0x574]
---
Predecessors: [0x4bc]
Successors: [0x575, 0x576]
---
0x568 JUMPDEST
0x569 PUSH2 0x2c6
0x56c GAS
0x56d SUB
0x56e CALL
0x56f ISZERO
0x570 ISZERO
0x571 PUSH2 0x576
0x574 JUMPI
---
0x568: JUMPDEST 
0x569: V349 = 0x2c6
0x56c: V350 = GAS
0x56d: V351 = SUB V350 0x2c6
0x56e: V352 = CALL V351 V325 0x0 V342 V343 V342 0x20
0x56f: V353 = ISZERO V352
0x570: V354 = ISZERO V353
0x571: V355 = 0x576
0x574: JUMPI 0x576 V354
---
Entry stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339, 0x20, V342, V343, V342, 0x0, V325]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339]

================================

Block 0x575
[0x575:0x575]
---
Predecessors: [0x568]
Successors: []
---
0x575 INVALID
---
0x575: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339]

================================

Block 0x576
[0x576:0x5ac]
---
Predecessors: [0x568]
Successors: [0x784]
---
0x576 JUMPDEST
0x577 POP
0x578 POP
0x579 POP
0x57a PUSH1 0x40
0x57c MLOAD
0x57d DUP1
0x57e MLOAD
0x57f SWAP1
0x580 POP
0x581 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x596 AND
0x597 PUSH2 0x8fc
0x59a PUSH2 0x5ad
0x59d PUSH1 0x5
0x59f DUP5
0x5a0 PUSH2 0x784
0x5a3 SWAP1
0x5a4 SWAP2
0x5a5 SWAP1
0x5a6 PUSH4 0xffffffff
0x5ab AND
0x5ac JUMP
---
0x576: JUMPDEST 
0x57a: V356 = 0x40
0x57c: V357 = M[0x40]
0x57e: V358 = M[V357]
0x581: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x596: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x597: V361 = 0x8fc
0x59a: V362 = 0x5ad
0x59d: V363 = 0x5
0x5a0: V364 = 0x784
0x5a6: V365 = 0xffffffff
0x5ab: V366 = AND 0xffffffff 0x784
0x5ac: JUMP 0x784
---
Entry stack: [V10, 0x6e8, V75, V325, 0x66db33a7, V339]
Stack pops: 4
Stack additions: [S3, V360, 0x8fc, 0x5ad, S3, 0x5]
Exit stack: [V10, 0x6e8, V75, V360, 0x8fc, 0x5ad, V75, 0x5]

================================

Block 0x5ad
[0x5ad:0x68a]
---
Predecessors: [0x79a]
Successors: [0x68b, 0x68c]
---
0x5ad JUMPDEST
0x5ae SWAP1
0x5af DUP2
0x5b0 ISZERO
0x5b1 MUL
0x5b2 SWAP1
0x5b3 PUSH1 0x40
0x5b5 MLOAD
0x5b6 DUP1
0x5b7 SWAP1
0x5b8 POP
0x5b9 PUSH1 0x0
0x5bb PUSH1 0x40
0x5bd MLOAD
0x5be DUP1
0x5bf DUP4
0x5c0 SUB
0x5c1 DUP2
0x5c2 DUP6
0x5c3 DUP9
0x5c4 DUP9
0x5c5 CALL
0x5c6 SWAP4
0x5c7 POP
0x5c8 POP
0x5c9 POP
0x5ca POP
0x5cb POP
0x5cc PUSH1 0x1
0x5ce PUSH1 0x0
0x5d0 SWAP1
0x5d1 SLOAD
0x5d2 SWAP1
0x5d3 PUSH2 0x100
0x5d6 EXP
0x5d7 SWAP1
0x5d8 DIV
0x5d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ee AND
0x5ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x604 AND
0x605 PUSH4 0xd1aa94a3
0x60a CALLER
0x60b CALLVALUE
0x60c PUSH1 0x40
0x60e MLOAD
0x60f DUP4
0x610 PUSH4 0xffffffff
0x615 AND
0x616 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x634 MUL
0x635 DUP2
0x636 MSTORE
0x637 PUSH1 0x4
0x639 ADD
0x63a DUP1
0x63b DUP4
0x63c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x651 AND
0x652 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x667 AND
0x668 DUP2
0x669 MSTORE
0x66a PUSH1 0x20
0x66c ADD
0x66d DUP3
0x66e DUP2
0x66f MSTORE
0x670 PUSH1 0x20
0x672 ADD
0x673 SWAP3
0x674 POP
0x675 POP
0x676 POP
0x677 PUSH1 0x0
0x679 PUSH1 0x40
0x67b MLOAD
0x67c DUP1
0x67d DUP4
0x67e SUB
0x67f DUP2
0x680 PUSH1 0x0
0x682 DUP8
0x683 DUP1
0x684 EXTCODESIZE
0x685 ISZERO
0x686 ISZERO
0x687 PUSH2 0x68c
0x68a JUMPI
---
0x5ad: JUMPDEST 
0x5b0: V367 = ISZERO S0
0x5b1: V368 = MUL V367 0x8fc
0x5b3: V369 = 0x40
0x5b5: V370 = M[0x40]
0x5b9: V371 = 0x0
0x5bb: V372 = 0x40
0x5bd: V373 = M[0x40]
0x5c0: V374 = SUB V370 V373
0x5c5: V375 = CALL V368 S2 S0 V373 V374 V373 0x0
0x5cc: V376 = 0x1
0x5ce: V377 = 0x0
0x5d1: V378 = S[0x1]
0x5d3: V379 = 0x100
0x5d6: V380 = EXP 0x100 0x0
0x5d8: V381 = DIV V378 0x1
0x5d9: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x5ef: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x604: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x605: V386 = 0xd1aa94a3
0x60a: V387 = CALLER
0x60b: V388 = CALLVALUE
0x60c: V389 = 0x40
0x60e: V390 = M[0x40]
0x610: V391 = 0xffffffff
0x615: V392 = AND 0xffffffff 0xd1aa94a3
0x616: V393 = 0x100000000000000000000000000000000000000000000000000000000
0x634: V394 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd1aa94a3
0x636: M[V390] = 0xd1aa94a300000000000000000000000000000000000000000000000000000000
0x637: V395 = 0x4
0x639: V396 = ADD 0x4 V390
0x63c: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x651: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x652: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x667: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x669: M[V396] = V400
0x66a: V401 = 0x20
0x66c: V402 = ADD 0x20 V396
0x66f: M[V402] = V388
0x670: V403 = 0x20
0x672: V404 = ADD 0x20 V402
0x677: V405 = 0x0
0x679: V406 = 0x40
0x67b: V407 = M[0x40]
0x67e: V408 = SUB V404 V407
0x680: V409 = 0x0
0x684: V410 = EXTCODESIZE V385
0x685: V411 = ISZERO V410
0x686: V412 = ISZERO V411
0x687: V413 = 0x68c
0x68a: JUMPI 0x68c V412
---
Entry stack: [V10, 0x6e8, V75, S2, 0x8fc, S0]
Stack pops: 3
Stack additions: [V385, 0xd1aa94a3, V404, 0x0, V407, V408, V407, 0x0, V385]
Exit stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404, 0x0, V407, V408, V407, 0x0, V385]

================================

Block 0x68b
[0x68b:0x68b]
---
Predecessors: [0x5ad]
Successors: []
---
0x68b INVALID
---
0x68b: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404, 0x0, V407, V408, V407, 0x0, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404, 0x0, V407, V408, V407, 0x0, V385]

================================

Block 0x68c
[0x68c:0x698]
---
Predecessors: [0x5ad]
Successors: [0x699, 0x69a]
---
0x68c JUMPDEST
0x68d PUSH2 0x2c6
0x690 GAS
0x691 SUB
0x692 CALL
0x693 ISZERO
0x694 ISZERO
0x695 PUSH2 0x69a
0x698 JUMPI
---
0x68c: JUMPDEST 
0x68d: V414 = 0x2c6
0x690: V415 = GAS
0x691: V416 = SUB V415 0x2c6
0x692: V417 = CALL V416 V385 0x0 V407 V408 V407 0x0
0x693: V418 = ISZERO V417
0x694: V419 = ISZERO V418
0x695: V420 = 0x69a
0x698: JUMPI 0x69a V419
---
Entry stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404, 0x0, V407, V408, V407, 0x0, V385]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404]

================================

Block 0x699
[0x699:0x699]
---
Predecessors: [0x68c]
Successors: []
---
0x699 INVALID
---
0x699: INVALID 
---
Entry stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404]

================================

Block 0x69a
[0x69a:0x6e4]
---
Predecessors: [0x68c]
Successors: [0x6e5]
---
0x69a JUMPDEST
0x69b POP
0x69c POP
0x69d POP
0x69e CALLVALUE
0x69f CALLER
0x6a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b5 AND
0x6b6 PUSH32 0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da DUP1
0x6db SWAP1
0x6dc POP
0x6dd PUSH1 0x40
0x6df MLOAD
0x6e0 DUP1
0x6e1 SWAP2
0x6e2 SUB
0x6e3 SWAP1
0x6e4 LOG3
---
0x69a: JUMPDEST 
0x69e: V421 = CALLVALUE
0x69f: V422 = CALLER
0x6a0: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b5: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x6b6: V425 = 0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e
0x6d7: V426 = 0x40
0x6d9: V427 = M[0x40]
0x6dd: V428 = 0x40
0x6df: V429 = M[0x40]
0x6e2: V430 = SUB V427 V429
0x6e4: LOG V429 V430 0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e V424 V421
---
Entry stack: [V10, 0x6e8, V75, V385, 0xd1aa94a3, V404]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x6e8, V75]

================================

Block 0x6e5
[0x6e5:0x6e7]
---
Predecessors: [0x69a]
Successors: [0x6e8]
---
0x6e5 JUMPDEST
0x6e6 POP
0x6e7 JUMP
---
0x6e5: JUMPDEST 
0x6e7: JUMP 0x6e8
---
Entry stack: [V10, 0x6e8, V75]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e8
[0x6e8:0x6e9]
---
Predecessors: [0x6e5]
Successors: []
---
0x6e8 JUMPDEST
0x6e9 STOP
---
0x6e8: JUMPDEST 
0x6e9: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6ea
[0x6ea:0x6f0]
---
Predecessors: [0xb]
Successors: [0x6f1, 0x6f2]
---
0x6ea JUMPDEST
0x6eb CALLVALUE
0x6ec ISZERO
0x6ed PUSH2 0x6f2
0x6f0 JUMPI
---
0x6ea: JUMPDEST 
0x6eb: V431 = CALLVALUE
0x6ec: V432 = ISZERO V431
0x6ed: V433 = 0x6f2
0x6f0: JUMPI 0x6f2 V432
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6f1
[0x6f1:0x6f1]
---
Predecessors: [0x6ea]
Successors: []
---
0x6f1 INVALID
---
0x6f1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6f2
[0x6f2:0x6f9]
---
Predecessors: [0x6ea]
Successors: [0x7a1]
---
0x6f2 JUMPDEST
0x6f3 PUSH2 0x6fa
0x6f6 PUSH2 0x7a1
0x6f9 JUMP
---
0x6f2: JUMPDEST 
0x6f3: V434 = 0x6fa
0x6f6: V435 = 0x7a1
0x6f9: JUMP 0x7a1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6fa]
Exit stack: [V10, 0x6fa]

================================

Block 0x6fa
[0x6fa:0x6fb]
---
Predecessors: [0x872]
Successors: []
---
0x6fa JUMPDEST
0x6fb STOP
---
0x6fa: JUMPDEST 
0x6fb: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6fc
[0x6fc:0x702]
---
Predecessors: [0x3f]
Successors: [0x703, 0x704]
---
0x6fc JUMPDEST
0x6fd CALLVALUE
0x6fe ISZERO
0x6ff PUSH2 0x704
0x702 JUMPI
---
0x6fc: JUMPDEST 
0x6fd: V436 = CALLVALUE
0x6fe: V437 = ISZERO V436
0x6ff: V438 = 0x704
0x702: JUMPI 0x704 V437
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x703
[0x703:0x703]
---
Predecessors: [0x6fc]
Successors: []
---
0x703 INVALID
---
0x703: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x704
[0x704:0x70b]
---
Predecessors: [0x6fc]
Successors: [0x874]
---
0x704 JUMPDEST
0x705 PUSH2 0x70c
0x708 PUSH2 0x874
0x70b JUMP
---
0x704: JUMPDEST 
0x705: V439 = 0x70c
0x708: V440 = 0x874
0x70b: JUMP 0x874
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x70c]
Exit stack: [V10, 0x70c]

================================

Block 0x70c
[0x70c:0x74d]
---
Predecessors: [0x874]
Successors: []
---
0x70c JUMPDEST
0x70d PUSH1 0x40
0x70f MLOAD
0x710 DUP1
0x711 DUP3
0x712 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x727 AND
0x728 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73d AND
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 ADD
0x743 SWAP2
0x744 POP
0x745 POP
0x746 PUSH1 0x40
0x748 MLOAD
0x749 DUP1
0x74a SWAP2
0x74b SUB
0x74c SWAP1
0x74d RETURN
---
0x70c: JUMPDEST 
0x70d: V441 = 0x40
0x70f: V442 = M[0x40]
0x712: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x727: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x728: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x73f: M[V442] = V446
0x740: V447 = 0x20
0x742: V448 = ADD 0x20 V442
0x746: V449 = 0x40
0x748: V450 = M[0x40]
0x74b: V451 = SUB V448 V450
0x74d: RETURN V450 V451
---
Entry stack: [V10, 0x70c, V519]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x70c]

================================

Block 0x74e
[0x74e:0x754]
---
Predecessors: [0x4a]
Successors: [0x755, 0x756]
---
0x74e JUMPDEST
0x74f CALLVALUE
0x750 ISZERO
0x751 PUSH2 0x756
0x754 JUMPI
---
0x74e: JUMPDEST 
0x74f: V452 = CALLVALUE
0x750: V453 = ISZERO V452
0x751: V454 = 0x756
0x754: JUMPI 0x756 V453
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x755
[0x755:0x755]
---
Predecessors: [0x74e]
Successors: []
---
0x755 INVALID
---
0x755: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x756
[0x756:0x781]
---
Predecessors: [0x74e]
Successors: [0x89a]
---
0x756 JUMPDEST
0x757 PUSH2 0x782
0x75a PUSH1 0x4
0x75c DUP1
0x75d DUP1
0x75e CALLDATALOAD
0x75f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x774 AND
0x775 SWAP1
0x776 PUSH1 0x20
0x778 ADD
0x779 SWAP1
0x77a SWAP2
0x77b SWAP1
0x77c POP
0x77d POP
0x77e PUSH2 0x89a
0x781 JUMP
---
0x756: JUMPDEST 
0x757: V455 = 0x782
0x75a: V456 = 0x4
0x75e: V457 = CALLDATALOAD 0x4
0x75f: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x774: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x776: V460 = 0x20
0x778: V461 = ADD 0x20 0x4
0x77e: V462 = 0x89a
0x781: JUMP 0x89a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x782, V459]
Exit stack: [V10, 0x782, V459]

================================

Block 0x782
[0x782:0x783]
---
Predecessors: [0x93a]
Successors: []
---
0x782 JUMPDEST
0x783 STOP
---
0x782: JUMPDEST 
0x783: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x784
[0x784:0x791]
---
Predecessors: [0x1b2, 0x2a3, 0x394, 0x485, 0x576]
Successors: [0x792, 0x793]
---
0x784 JUMPDEST
0x785 PUSH1 0x0
0x787 PUSH1 0x0
0x789 DUP3
0x78a DUP5
0x78b DUP2
0x78c ISZERO
0x78d ISZERO
0x78e PUSH2 0x793
0x791 JUMPI
---
0x784: JUMPDEST 
0x785: V463 = 0x0
0x787: V464 = 0x0
0x78c: V465 = ISZERO 0x5
0x78d: V466 = ISZERO 0x0
0x78e: V467 = 0x793
0x791: JUMPI 0x793 0x1
---
Entry stack: [V10, 0x6e8, V75, S4, 0x8fc, {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}, V75, 0x5]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V10, 0x6e8, V75, S4, 0x8fc, {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}, V75, 0x5, 0x0, 0x0, 0x5, V75]

================================

Block 0x792
[0x792:0x792]
---
Predecessors: [0x784]
Successors: []
---
0x792 INVALID
---
0x792: INVALID 
---
Entry stack: [V10, 0x6e8, V75, S8, 0x8fc, {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}, V75, 0x5, 0x0, 0x0, 0x5, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6e8, V75, S8, 0x8fc, {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}, V75, 0x5, 0x0, 0x0, 0x5, V75]

================================

Block 0x793
[0x793:0x799]
---
Predecessors: [0x784]
Successors: [0x79a]
---
0x793 JUMPDEST
0x794 DIV
0x795 SWAP1
0x796 POP
0x797 DUP1
0x798 SWAP2
0x799 POP
---
0x793: JUMPDEST 
0x794: V468 = DIV V75 0x5
---
Entry stack: [V10, 0x6e8, V75, S8, 0x8fc, {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}, V75, 0x5, 0x0, 0x0, 0x5, V75]
Stack pops: 4
Stack additions: [V468, V468]
Exit stack: [V10, 0x6e8, V75, S8, 0x8fc, {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}, V75, 0x5, V468, V468]

================================

Block 0x79a
[0x79a:0x7a0]
---
Predecessors: [0x793]
Successors: [0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad]
---
0x79a JUMPDEST
0x79b POP
0x79c SWAP3
0x79d SWAP2
0x79e POP
0x79f POP
0x7a0 JUMP
---
0x79a: JUMPDEST 
0x7a0: JUMP {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}
---
Entry stack: [V10, 0x6e8, V75, S6, 0x8fc, {0x1e9, 0x2da, 0x3cb, 0x4bc, 0x5ad}, V75, 0x5, V468, V468]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x6e8, V75, S6, 0x8fc, V468]

================================

Block 0x7a1
[0x7a1:0x7f8]
---
Predecessors: [0x6f2]
Successors: [0x7f9, 0x7fe]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x0
0x7a4 PUSH1 0x0
0x7a6 SWAP1
0x7a7 SLOAD
0x7a8 SWAP1
0x7a9 PUSH2 0x100
0x7ac EXP
0x7ad SWAP1
0x7ae DIV
0x7af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c4 AND
0x7c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7da AND
0x7db CALLER
0x7dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f1 AND
0x7f2 EQ
0x7f3 ISZERO
0x7f4 ISZERO
0x7f5 PUSH2 0x7fe
0x7f8 JUMPI
---
0x7a1: JUMPDEST 
0x7a2: V469 = 0x0
0x7a4: V470 = 0x0
0x7a7: V471 = S[0x0]
0x7a9: V472 = 0x100
0x7ac: V473 = EXP 0x100 0x0
0x7ae: V474 = DIV V471 0x1
0x7af: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c4: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x7c5: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x7da: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x7db: V479 = CALLER
0x7dc: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f1: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x7f2: V482 = EQ V481 V478
0x7f3: V483 = ISZERO V482
0x7f4: V484 = ISZERO V483
0x7f5: V485 = 0x7fe
0x7f8: JUMPI 0x7fe V484
---
Entry stack: [V10, 0x6fa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6fa]

================================

Block 0x7f9
[0x7f9:0x7fd]
---
Predecessors: [0x7a1]
Successors: []
---
0x7f9 PUSH1 0x0
0x7fb PUSH1 0x0
0x7fd REVERT
---
0x7f9: V486 = 0x0
0x7fb: V487 = 0x0
0x7fd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6fa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6fa]

================================

Block 0x7fe
[0x7fe:0x870]
---
Predecessors: [0x7a1]
Successors: [0x871]
---
0x7fe JUMPDEST
0x7ff PUSH1 0x0
0x801 PUSH1 0x0
0x803 SWAP1
0x804 SLOAD
0x805 SWAP1
0x806 PUSH2 0x100
0x809 EXP
0x80a SWAP1
0x80b DIV
0x80c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x821 AND
0x822 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x837 AND
0x838 PUSH2 0x8fc
0x83b ADDRESS
0x83c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x851 AND
0x852 BALANCE
0x853 SWAP1
0x854 DUP2
0x855 ISZERO
0x856 MUL
0x857 SWAP1
0x858 PUSH1 0x40
0x85a MLOAD
0x85b DUP1
0x85c SWAP1
0x85d POP
0x85e PUSH1 0x0
0x860 PUSH1 0x40
0x862 MLOAD
0x863 DUP1
0x864 DUP4
0x865 SUB
0x866 DUP2
0x867 DUP6
0x868 DUP9
0x869 DUP9
0x86a CALL
0x86b SWAP4
0x86c POP
0x86d POP
0x86e POP
0x86f POP
0x870 POP
---
0x7fe: JUMPDEST 
0x7ff: V488 = 0x0
0x801: V489 = 0x0
0x804: V490 = S[0x0]
0x806: V491 = 0x100
0x809: V492 = EXP 0x100 0x0
0x80b: V493 = DIV V490 0x1
0x80c: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x821: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x822: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x837: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x838: V498 = 0x8fc
0x83b: V499 = ADDRESS
0x83c: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x851: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x852: V502 = BALANCE V501
0x855: V503 = ISZERO V502
0x856: V504 = MUL V503 0x8fc
0x858: V505 = 0x40
0x85a: V506 = M[0x40]
0x85e: V507 = 0x0
0x860: V508 = 0x40
0x862: V509 = M[0x40]
0x865: V510 = SUB V506 V509
0x86a: V511 = CALL V504 V497 V502 V509 V510 V509 0x0
---
Entry stack: [V10, 0x6fa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6fa]

================================

Block 0x871
[0x871:0x871]
---
Predecessors: [0x7fe]
Successors: [0x872]
---
0x871 JUMPDEST
---
0x871: JUMPDEST 
---
Entry stack: [V10, 0x6fa]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6fa]

================================

Block 0x872
[0x872:0x873]
---
Predecessors: [0x871]
Successors: [0x6fa]
---
0x872 JUMPDEST
0x873 JUMP
---
0x872: JUMPDEST 
0x873: JUMP 0x6fa
---
Entry stack: [V10, 0x6fa]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x874
[0x874:0x899]
---
Predecessors: [0x704]
Successors: [0x70c]
---
0x874 JUMPDEST
0x875 PUSH1 0x0
0x877 PUSH1 0x0
0x879 SWAP1
0x87a SLOAD
0x87b SWAP1
0x87c PUSH2 0x100
0x87f EXP
0x880 SWAP1
0x881 DIV
0x882 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x897 AND
0x898 DUP2
0x899 JUMP
---
0x874: JUMPDEST 
0x875: V512 = 0x0
0x877: V513 = 0x0
0x87a: V514 = S[0x0]
0x87c: V515 = 0x100
0x87f: V516 = EXP 0x100 0x0
0x881: V517 = DIV V514 0x1
0x882: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x897: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x899: JUMP 0x70c
---
Entry stack: [V10, 0x70c]
Stack pops: 1
Stack additions: [S0, V519]
Exit stack: [V10, 0x70c, V519]

================================

Block 0x89a
[0x89a:0x8f1]
---
Predecessors: [0x756]
Successors: [0x8f2, 0x8f7]
---
0x89a JUMPDEST
0x89b PUSH1 0x0
0x89d PUSH1 0x0
0x89f SWAP1
0x8a0 SLOAD
0x8a1 SWAP1
0x8a2 PUSH2 0x100
0x8a5 EXP
0x8a6 SWAP1
0x8a7 DIV
0x8a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bd AND
0x8be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d3 AND
0x8d4 CALLER
0x8d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ea AND
0x8eb EQ
0x8ec ISZERO
0x8ed ISZERO
0x8ee PUSH2 0x8f7
0x8f1 JUMPI
---
0x89a: JUMPDEST 
0x89b: V520 = 0x0
0x89d: V521 = 0x0
0x8a0: V522 = S[0x0]
0x8a2: V523 = 0x100
0x8a5: V524 = EXP 0x100 0x0
0x8a7: V525 = DIV V522 0x1
0x8a8: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bd: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x8be: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d3: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x8d4: V530 = CALLER
0x8d5: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ea: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x8eb: V533 = EQ V532 V529
0x8ec: V534 = ISZERO V533
0x8ed: V535 = ISZERO V534
0x8ee: V536 = 0x8f7
0x8f1: JUMPI 0x8f7 V535
---
Entry stack: [V10, 0x782, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x782, V459]

================================

Block 0x8f2
[0x8f2:0x8f6]
---
Predecessors: [0x89a]
Successors: []
---
0x8f2 PUSH1 0x0
0x8f4 PUSH1 0x0
0x8f6 REVERT
---
0x8f2: V537 = 0x0
0x8f4: V538 = 0x0
0x8f6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x782, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x782, V459]

================================

Block 0x8f7
[0x8f7:0x938]
---
Predecessors: [0x89a]
Successors: [0x939]
---
0x8f7 JUMPDEST
0x8f8 DUP1
0x8f9 PUSH1 0x1
0x8fb PUSH1 0x0
0x8fd PUSH2 0x100
0x900 EXP
0x901 DUP2
0x902 SLOAD
0x903 DUP2
0x904 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x919 MUL
0x91a NOT
0x91b AND
0x91c SWAP1
0x91d DUP4
0x91e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x933 AND
0x934 MUL
0x935 OR
0x936 SWAP1
0x937 SSTORE
0x938 POP
---
0x8f7: JUMPDEST 
0x8f9: V539 = 0x1
0x8fb: V540 = 0x0
0x8fd: V541 = 0x100
0x900: V542 = EXP 0x100 0x0
0x902: V543 = S[0x1]
0x904: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x919: V545 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x91a: V546 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x91b: V547 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V543
0x91e: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x933: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x934: V550 = MUL V549 0x1
0x935: V551 = OR V550 V547
0x937: S[0x1] = V551
---
Entry stack: [V10, 0x782, V459]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x782, V459]

================================

Block 0x939
[0x939:0x939]
---
Predecessors: [0x8f7]
Successors: [0x93a]
---
0x939 JUMPDEST
---
0x939: JUMPDEST 
---
Entry stack: [V10, 0x782, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x782, V459]

================================

Block 0x93a
[0x93a:0x93c]
---
Predecessors: [0x939]
Successors: [0x782]
---
0x93a JUMPDEST
0x93b POP
0x93c JUMP
---
0x93a: JUMPDEST 
0x93c: JUMP 0x782
---
Entry stack: [V10, 0x782, V459]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x93d
[0x93d:0x968]
---
Predecessors: []
Successors: []
---
0x93d STOP
0x93e LOG1
0x93f PUSH6 0x627a7a723058
0x946 SHA3
0x947 CODECOPY
0x948 MISSING 0xe6
0x949 MISSING 0x4e
0x94a MISSING 0x5f
0x94b PUSH22 0x8e346779260b08e1bbaff6a145254213bd78cbbd8768
0x962 OR
0x963 DUP6
0x964 MISSING 0x28
0x965 MISSING 0xb5
0x966 MISSING 0xec
0x967 STOP
0x968 MISSING 0x29
---
0x93d: STOP 
0x93e: LOG S0 S1 S2
0x93f: V552 = 0x627a7a723058
0x946: V553 = SHA3 0x627a7a723058 S3
0x947: CODECOPY V553 S4 S5
0x948: MISSING 0xe6
0x949: MISSING 0x4e
0x94a: MISSING 0x5f
0x94b: V554 = 0x8e346779260b08e1bbaff6a145254213bd78cbbd8768
0x962: V555 = OR 0x8e346779260b08e1bbaff6a145254213bd78cbbd8768 S0
0x964: MISSING 0x28
0x965: MISSING 0xb5
0x966: MISSING 0xec
0x967: STOP 
0x968: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, V555, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x6ea
Exit block: 0x6fa
Body: 0x6ea, 0x6f1, 0x6f2, 0x6fa, 0x7a1, 0x7f9, 0x7fe, 0x871, 0x872

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x6fc
Exit block: 0x70c
Body: 0x6fc, 0x703, 0x704, 0x70c, 0x874

Function 2:
Public function signature: 0xe90dfdfa
Entry block: 0x74e
Exit block: 0x782
Body: 0x74e, 0x755, 0x756, 0x782, 0x89a, 0x8f2, 0x8f7, 0x939, 0x93a

Function 3:
Public fallback function
Entry block: 0x55
Exit block: 0x6e8
Body: 0x55, 0x59, 0xec, 0xed, 0xfa, 0xfb, 0x10e, 0x113, 0x1a3, 0x1a4, 0x1b1, 0x1b2, 0x1e9, 0x294, 0x295, 0x2a2, 0x2a3, 0x2da, 0x385, 0x386, 0x393, 0x394, 0x3cb, 0x476, 0x477, 0x484, 0x485, 0x4bc, 0x567, 0x568, 0x575, 0x576, 0x5ad, 0x68b, 0x68c, 0x699, 0x69a, 0x6e5, 0x6e8

Function 4:
Private function
Entry block: 0x784
Exit block: 0x79a
Body: 0x784, 0x793, 0x79a

