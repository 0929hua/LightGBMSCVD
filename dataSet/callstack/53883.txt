Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x6c]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x2fb0c5e
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x6c
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x2fb0c5e
0x1a: V12 = EQ V10 0x2fb0c5e
0x1b: V13 = 0x6c
0x1e: JUMPI 0x6c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x75]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0x75
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0x75
0x29: JUMPI 0x75 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xa9]
---
0x2a DUP1
0x2b PUSH4 0x41c0e1b5
0x30 EQ
0x31 PUSH2 0xa9
0x34 JUMPI
---
0x2b: V17 = 0x41c0e1b5
0x30: V18 = EQ 0x41c0e1b5 V10
0x31: V19 = 0xa9
0x34: JUMPI 0xa9 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xd8]
---
0x35 DUP1
0x36 PUSH4 0x7873bc61
0x3b EQ
0x3c PUSH2 0xd8
0x3f JUMPI
---
0x36: V20 = 0x7873bc61
0x3b: V21 = EQ 0x7873bc61 V10
0x3c: V22 = 0xd8
0x3f: JUMPI 0xd8 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x10b]
---
0x40 DUP1
0x41 PUSH4 0x8da5cb5b
0x46 EQ
0x47 PUSH2 0x10b
0x4a JUMPI
---
0x41: V23 = 0x8da5cb5b
0x46: V24 = EQ 0x8da5cb5b V10
0x47: V25 = 0x10b
0x4a: JUMPI 0x10b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x11d]
---
0x4b DUP1
0x4c PUSH4 0xdaf1af19
0x51 EQ
0x52 PUSH2 0x11d
0x55 JUMPI
---
0x4c: V26 = 0xdaf1af19
0x51: V27 = EQ 0xdaf1af19 V10
0x52: V28 = 0x11d
0x55: JUMPI 0x11d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x126]
---
0x56 DUP1
0x57 PUSH4 0xe97dcb62
0x5c EQ
0x5d PUSH2 0x126
0x60 JUMPI
---
0x57: V29 = 0xe97dcb62
0x5c: V30 = EQ 0xe97dcb62 V10
0x5d: V31 = 0x126
0x60: JUMPI 0x126 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x0, 0x56]
Successors: [0x12a]
---
0x61 JUMPDEST
0x62 PUSH2 0x160
0x65 PUSH2 0x162
0x68 PUSH2 0x12a
0x6b JUMP
---
0x61: JUMPDEST 
0x62: V32 = 0x160
0x65: V33 = 0x162
0x68: V34 = 0x12a
0x6b: JUMP 0x12a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x160, 0x162]
Exit stack: [V10, 0x160, 0x162]

================================

Block 0x6c
[0x6c:0x74]
---
Predecessors: [0xb]
Successors: [0x164]
---
0x6c JUMPDEST
0x6d PUSH2 0x164
0x70 PUSH1 0x3
0x72 SLOAD
0x73 DUP2
0x74 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x164
0x70: V36 = 0x3
0x72: V37 = S[0x3]
0x74: JUMP 0x164
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x164, V37]
Exit stack: [V10, 0x164, V37]

================================

Block 0x75
[0x75:0x94]
---
Predecessors: [0x1f]
Successors: [0x95, 0x1da]
---
0x75 JUMPDEST
0x76 PUSH2 0x160
0x79 PUSH1 0x4
0x7b CALLDATALOAD
0x7c PUSH1 0x5
0x7e SLOAD
0x7f PUSH1 0x1
0x81 PUSH1 0xa0
0x83 PUSH1 0x2
0x85 EXP
0x86 SUB
0x87 SWAP1
0x88 DUP2
0x89 AND
0x8a CALLER
0x8b SWAP2
0x8c SWAP1
0x8d SWAP2
0x8e AND
0x8f EQ
0x90 ISZERO
0x91 PUSH2 0x1da
0x94 JUMPI
---
0x75: JUMPDEST 
0x76: V38 = 0x160
0x79: V39 = 0x4
0x7b: V40 = CALLDATALOAD 0x4
0x7c: V41 = 0x5
0x7e: V42 = S[0x5]
0x7f: V43 = 0x1
0x81: V44 = 0xa0
0x83: V45 = 0x2
0x85: V46 = EXP 0x2 0xa0
0x86: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x8a: V49 = CALLER
0x8e: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x8f: V51 = EQ V50 V48
0x90: V52 = ISZERO V51
0x91: V53 = 0x1da
0x94: JUMPI 0x1da V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x160, V40]
Exit stack: [V10, 0x160, V40]

================================

Block 0x95
[0x95:0xa8]
---
Predecessors: [0x75]
Successors: [0x160]
---
0x95 PUSH1 0x5
0x97 DUP1
0x98 SLOAD
0x99 PUSH1 0x1
0x9b PUSH1 0xa0
0x9d PUSH1 0x2
0x9f EXP
0xa0 SUB
0xa1 NOT
0xa2 AND
0xa3 DUP3
0xa4 OR
0xa5 SWAP1
0xa6 SSTORE
0xa7 POP
0xa8 JUMP
---
0x95: V54 = 0x5
0x98: V55 = S[0x5]
0x99: V56 = 0x1
0x9b: V57 = 0xa0
0x9d: V58 = 0x2
0x9f: V59 = EXP 0x2 0xa0
0xa0: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1: V61 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V62 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xa4: V63 = OR V40 V62
0xa6: S[0x5] = V63
0xa8: JUMP 0x160
---
Entry stack: [V10, 0x160, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xa9
[0xa9:0xc5]
---
Predecessors: [0x2a]
Successors: [0xc6, 0x162]
---
0xa9 JUMPDEST
0xaa PUSH2 0x160
0xad PUSH1 0x5
0xaf SLOAD
0xb0 PUSH1 0x1
0xb2 PUSH1 0xa0
0xb4 PUSH1 0x2
0xb6 EXP
0xb7 SUB
0xb8 SWAP1
0xb9 DUP2
0xba AND
0xbb CALLER
0xbc SWAP2
0xbd SWAP1
0xbe SWAP2
0xbf AND
0xc0 EQ
0xc1 ISZERO
0xc2 PUSH2 0x162
0xc5 JUMPI
---
0xa9: JUMPDEST 
0xaa: V64 = 0x160
0xad: V65 = 0x5
0xaf: V66 = S[0x5]
0xb0: V67 = 0x1
0xb2: V68 = 0xa0
0xb4: V69 = 0x2
0xb6: V70 = EXP 0x2 0xa0
0xb7: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xbb: V73 = CALLER
0xbf: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V75 = EQ V74 V72
0xc1: V76 = ISZERO V75
0xc2: V77 = 0x162
0xc5: JUMPI 0x162 V76
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V10, 0x160]

================================

Block 0xc6
[0xc6:0xd7]
---
Predecessors: [0xa9]
Successors: []
---
0xc6 PUSH1 0x5
0xc8 SLOAD
0xc9 PUSH1 0x0
0xcb PUSH1 0x3
0xcd SSTORE
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 AND
0xd7 SELFDESTRUCT
---
0xc6: V78 = 0x5
0xc8: V79 = S[0x5]
0xc9: V80 = 0x0
0xcb: V81 = 0x3
0xcd: S[0x3] = 0x0
0xce: V82 = 0x1
0xd0: V83 = 0xa0
0xd2: V84 = 0x2
0xd4: V85 = EXP 0x2 0xa0
0xd5: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0xd7: SELFDESTRUCT V87
---
Entry stack: [V10, 0x160]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x160]

================================

Block 0xd8
[0xd8:0xeb]
---
Predecessors: [0x35]
Successors: [0xec]
---
0xd8 JUMPDEST
0xd9 PUSH2 0x176
0xdc PUSH1 0x4
0xde CALLDATALOAD
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 SLOAD
0xe3 DUP3
0xe4 SWAP1
0xe5 DUP2
0xe6 LT
0xe7 ISZERO
0xe8 PUSH2 0x2
0xeb JUMPI
---
0xd8: JUMPDEST 
0xd9: V88 = 0x176
0xdc: V89 = 0x4
0xde: V90 = CALLDATALOAD 0x4
0xdf: V91 = 0x0
0xe2: V92 = S[0x0]
0xe6: V93 = LT V90 V92
0xe7: V94 = ISZERO V93
0xe8: V95 = 0x2
0xeb: THROWI V94
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x176, V90, 0x0, V90]
Exit stack: [V10, 0x176, V90, 0x0, V90]

================================

Block 0xec
[0xec:0x10a]
---
Predecessors: [0xd8]
Successors: [0x176]
---
0xec POP
0xed DUP1
0xee MSTORE
0xef PUSH1 0x0
0xf1 DUP1
0xf2 MLOAD
0xf3 PUSH1 0x20
0xf5 PUSH2 0x34b
0xf8 DUP4
0xf9 CODECOPY
0xfa DUP2
0xfb MLOAD
0xfc SWAP2
0xfd MSTORE
0xfe ADD
0xff SLOAD
0x100 PUSH1 0x1
0x102 PUSH1 0xa0
0x104 PUSH1 0x2
0x106 EXP
0x107 SUB
0x108 AND
0x109 DUP2
0x10a JUMP
---
0xee: M[0x0] = 0x0
0xef: V96 = 0x0
0xf2: V97 = M[0x0]
0xf3: V98 = 0x20
0xf5: V99 = 0x34b
0xf9: CODECOPY 0x0 0x34b 0x20
0xfb: V100 = M[0x0]
0xfd: M[0x0] = V97
0xfe: V101 = ADD V100 V90
0xff: V102 = S[V101]
0x100: V103 = 0x1
0x102: V104 = 0xa0
0x104: V105 = 0x2
0x106: V106 = EXP 0x2 0xa0
0x107: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x10a: JUMP 0x176
---
Entry stack: [V10, 0x176, V90, 0x0, V90]
Stack pops: 4
Stack additions: [S3, V108]
Exit stack: [V10, 0x176, V108]

================================

Block 0x10b
[0x10b:0x11c]
---
Predecessors: [0x40]
Successors: [0x176]
---
0x10b JUMPDEST
0x10c PUSH2 0x176
0x10f PUSH1 0x5
0x111 SLOAD
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a AND
0x11b DUP2
0x11c JUMP
---
0x10b: JUMPDEST 
0x10c: V109 = 0x176
0x10f: V110 = 0x5
0x111: V111 = S[0x5]
0x112: V112 = 0x1
0x114: V113 = 0xa0
0x116: V114 = 0x2
0x118: V115 = EXP 0x2 0xa0
0x119: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x11c: JUMP 0x176
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x176, V117]
Exit stack: [V10, 0x176, V117]

================================

Block 0x11d
[0x11d:0x125]
---
Predecessors: [0x4b]
Successors: [0x164]
---
0x11d JUMPDEST
0x11e PUSH2 0x164
0x121 PUSH1 0x4
0x123 SLOAD
0x124 DUP2
0x125 JUMP
---
0x11d: JUMPDEST 
0x11e: V118 = 0x164
0x121: V119 = 0x4
0x123: V120 = S[0x4]
0x125: JUMP 0x164
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x164, V120]
Exit stack: [V10, 0x164, V120]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x56]
Successors: [0x12a]
---
0x126 JUMPDEST
0x127 PUSH2 0x160
---
0x126: JUMPDEST 
0x127: V121 = 0x160
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V10, 0x160]

================================

Block 0x12a
[0x12a:0x13b]
---
Predecessors: [0x61, 0x126]
Successors: [0x13c, 0x1dd]
---
0x12a JUMPDEST
0x12b PUSH1 0x0
0x12d PUSH8 0xde0b6b3a7640000
0x136 CALLVALUE
0x137 EQ
0x138 PUSH2 0x1dd
0x13b JUMPI
---
0x12a: JUMPDEST 
0x12b: V122 = 0x0
0x12d: V123 = 0xde0b6b3a7640000
0x136: V124 = CALLVALUE
0x137: V125 = EQ V124 0xde0b6b3a7640000
0x138: V126 = 0x1dd
0x13b: JUMPI 0x1dd V125
---
Entry stack: [V10, S1, {0x160, 0x162}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, S1, {0x160, 0x162}, 0x0]

================================

Block 0x13c
[0x13c:0x15f]
---
Predecessors: [0x12a]
Successors: [0x1da]
---
0x13c PUSH1 0x40
0x13e MLOAD
0x13f PUSH1 0x1
0x141 PUSH1 0xa0
0x143 PUSH1 0x2
0x145 EXP
0x146 SUB
0x147 CALLER
0x148 AND
0x149 SWAP1
0x14a DUP3
0x14b SWAP1
0x14c CALLVALUE
0x14d SWAP1
0x14e DUP3
0x14f DUP2
0x150 DUP2
0x151 DUP2
0x152 DUP6
0x153 DUP9
0x154 DUP4
0x155 CALL
0x156 SWAP4
0x157 POP
0x158 POP
0x159 POP
0x15a POP
0x15b POP
0x15c PUSH2 0x1da
0x15f JUMP
---
0x13c: V127 = 0x40
0x13e: V128 = M[0x40]
0x13f: V129 = 0x1
0x141: V130 = 0xa0
0x143: V131 = 0x2
0x145: V132 = EXP 0x2 0xa0
0x146: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V134 = CALLER
0x148: V135 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V136 = CALLVALUE
0x155: V137 = CALL 0x0 V135 V136 V128 0x0 V128 0x0
0x15c: V138 = 0x1da
0x15f: JUMP 0x1da
---
Entry stack: [V10, S2, {0x160, 0x162}, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S2, {0x160, 0x162}, 0x0]

================================

Block 0x160
[0x160:0x161]
---
Predecessors: [0x95, 0x162, 0x1da]
Successors: []
---
0x160 JUMPDEST
0x161 STOP
---
0x160: JUMPDEST 
0x161: STOP 
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x162
[0x162:0x163]
---
Predecessors: [0xa9, 0x1da]
Successors: [0x160]
---
0x162 JUMPDEST
0x163 JUMP
---
0x162: JUMPDEST 
0x163: JUMP S0
---
Entry stack: [S13, S12, {0x0, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, S3, {0x0, 0x160, 0x162}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S13, S12, {0x0, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, S3, {0x0, 0x160, 0x162}, S1]

================================

Block 0x164
[0x164:0x175]
---
Predecessors: [0x6c, 0x11d]
Successors: []
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 DUP1
0x168 MLOAD
0x169 SWAP2
0x16a DUP3
0x16b MSTORE
0x16c MLOAD
0x16d SWAP1
0x16e DUP2
0x16f SWAP1
0x170 SUB
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 RETURN
---
0x164: JUMPDEST 
0x165: V139 = 0x40
0x168: V140 = M[0x40]
0x16b: M[V140] = S0
0x16c: V141 = M[0x40]
0x170: V142 = SUB V140 V141
0x171: V143 = 0x20
0x173: V144 = ADD 0x20 V142
0x175: RETURN V141 V144
---
Entry stack: [V10, 0x164, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x164]

================================

Block 0x176
[0x176:0x192]
---
Predecessors: [0xec, 0x10b]
Successors: []
---
0x176 JUMPDEST
0x177 PUSH1 0x40
0x179 DUP1
0x17a MLOAD
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 SWAP3
0x184 SWAP1
0x185 SWAP3
0x186 AND
0x187 DUP3
0x188 MSTORE
0x189 MLOAD
0x18a SWAP1
0x18b DUP2
0x18c SWAP1
0x18d SUB
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP1
0x192 RETURN
---
0x176: JUMPDEST 
0x177: V145 = 0x40
0x17a: V146 = M[0x40]
0x17b: V147 = 0x1
0x17d: V148 = 0xa0
0x17f: V149 = 0x2
0x181: V150 = EXP 0x2 0xa0
0x182: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x188: M[V146] = V152
0x189: V153 = M[0x40]
0x18d: V154 = SUB V146 V153
0x18e: V155 = 0x20
0x190: V156 = ADD 0x20 V154
0x192: RETURN V153 V156
---
Entry stack: [V10, 0x176, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x176]

================================

Block 0x193
[0x193:0x1a7]
---
Predecessors: [0x2cc, 0x341]
Successors: [0x1a8]
---
0x193 JUMPDEST
0x194 POP
0x195 POP
0x196 POP
0x197 POP
0x198 CALLER
0x199 PUSH1 0x0
0x19b PUSH1 0x0
0x19d POP
0x19e DUP3
0x19f DUP2
0x1a0 SLOAD
0x1a1 DUP2
0x1a2 LT
0x1a3 ISZERO
0x1a4 PUSH2 0x2
0x1a7 JUMPI
---
0x193: JUMPDEST 
0x198: V157 = CALLER
0x199: V158 = 0x0
0x19b: V159 = 0x0
0x1a0: V160 = S[0x0]
0x1a2: V161 = LT S4 V160
0x1a3: V162 = ISZERO V161
0x1a4: V163 = 0x2
0x1a7: THROWI V162
---
Entry stack: [S19, S18, {0x0, 0x162}, S16, S15, {0x0, 0x160, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, S3, {0x0, 0x160, 0x162}, S1, S0]
Stack pops: 5
Stack additions: [S4, V157, 0x0, S4]
Exit stack: [S19, S18, {0x0, 0x162}, S16, S15, {0x0, 0x160, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, V157, 0x0, S4]

================================

Block 0x1a8
[0x1a8:0x1d9]
---
Predecessors: [0x193]
Successors: [0x1da]
---
0x1a8 SWAP1
0x1a9 DUP1
0x1aa MSTORE
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae MLOAD
0x1af PUSH1 0x20
0x1b1 PUSH2 0x34b
0x1b4 DUP4
0x1b5 CODECOPY
0x1b6 DUP2
0x1b7 MLOAD
0x1b8 SWAP2
0x1b9 MSTORE
0x1ba ADD
0x1bb DUP1
0x1bc SLOAD
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 NOT
0x1c6 AND
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 OR
0x1ca SWAP1
0x1cb SSTORE
0x1cc ADDRESS
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 AND
0x1d6 BALANCE
0x1d7 PUSH1 0x4
0x1d9 SSTORE
---
0x1aa: M[0x0] = 0x0
0x1ab: V164 = 0x0
0x1ae: V165 = M[0x0]
0x1af: V166 = 0x20
0x1b1: V167 = 0x34b
0x1b5: CODECOPY 0x0 0x34b 0x20
0x1b7: V168 = M[0x0]
0x1b9: M[0x0] = V165
0x1ba: V169 = ADD V168 S0
0x1bc: V170 = S[V169]
0x1bd: V171 = 0x1
0x1bf: V172 = 0xa0
0x1c1: V173 = 0x2
0x1c3: V174 = EXP 0x2 0xa0
0x1c4: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V176 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V177 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V170
0x1c9: V178 = OR V157 V177
0x1cb: S[V169] = V178
0x1cc: V179 = ADDRESS
0x1cd: V180 = 0x1
0x1cf: V181 = 0xa0
0x1d1: V182 = 0x2
0x1d3: V183 = EXP 0x2 0xa0
0x1d4: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d5: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x1d6: V186 = BALANCE V185
0x1d7: V187 = 0x4
0x1d9: S[0x4] = V186
---
Entry stack: [S18, S17, {0x0, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, V157, 0x0, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S18, S17, {0x0, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3]

================================

Block 0x1da
[0x1da:0x1dc]
---
Predecessors: [0x75, 0x13c, 0x1a8, 0x22b]
Successors: [0x160, 0x162]
---
0x1da JUMPDEST
0x1db POP
0x1dc JUMP
---
0x1da: JUMPDEST 
0x1dc: JUMP {0x0, 0x160, 0x162}
---
Entry stack: [S15, S14, {0x0, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, S2, {0x0, 0x160, 0x162}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S15, S14, {0x0, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, S2]

================================

Block 0x1dd
[0x1dd:0x215]
---
Predecessors: [0x12a]
Successors: [0x216, 0x225]
---
0x1dd JUMPDEST
0x1de PUSH1 0x5
0x1e0 SLOAD
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec SWAP2
0x1ed SWAP1
0x1ee SWAP2
0x1ef AND
0x1f0 SWAP1
0x1f1 PUSH1 0x0
0x1f3 SWAP1
0x1f4 PUSH1 0xa
0x1f6 CALLVALUE
0x1f7 DIV
0x1f8 SWAP1
0x1f9 DUP3
0x1fa DUP2
0x1fb DUP2
0x1fc DUP2
0x1fd DUP6
0x1fe DUP9
0x1ff DUP4
0x200 CALL
0x201 POP
0x202 POP
0x203 TIMESTAMP
0x204 PUSH1 0x2
0x206 SSTORE
0x207 POP
0x208 DUP1
0x209 SLOAD
0x20a SWAP3
0x20b POP
0x20c DUP3
0x20d EQ
0x20e SWAP1
0x20f POP
0x210 DUP1
0x211 ISZERO
0x212 PUSH2 0x225
0x215 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V188 = 0x5
0x1e0: V189 = S[0x5]
0x1e1: V190 = 0x40
0x1e3: V191 = M[0x40]
0x1e4: V192 = 0x1
0x1e6: V193 = 0xa0
0x1e8: V194 = 0x2
0x1ea: V195 = EXP 0x2 0xa0
0x1eb: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x1f1: V198 = 0x0
0x1f4: V199 = 0xa
0x1f6: V200 = CALLVALUE
0x1f7: V201 = DIV V200 0xa
0x200: V202 = CALL 0x0 V197 V201 V191 0x0 V191 0x0
0x203: V203 = TIMESTAMP
0x204: V204 = 0x2
0x206: S[0x2] = V203
0x209: V205 = S[0x0]
0x20d: V206 = EQ V205 0x0
0x211: V207 = ISZERO V206
0x212: V208 = 0x225
0x215: JUMPI 0x225 V207
---
Entry stack: [V10, S2, {0x160, 0x162}, 0x0]
Stack pops: 1
Stack additions: [V205, V206]
Exit stack: [V10, S2, {0x160, 0x162}, V205, V206]

================================

Block 0x216
[0x216:0x224]
---
Predecessors: [0x1dd]
Successors: [0x225]
---
0x216 POP
0x217 ADDRESS
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 AND
0x221 BALANCE
0x222 PUSH1 0x0
0x224 EQ
---
0x217: V209 = ADDRESS
0x218: V210 = 0x1
0x21a: V211 = 0xa0
0x21c: V212 = 0x2
0x21e: V213 = EXP 0x2 0xa0
0x21f: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x221: V216 = BALANCE V215
0x222: V217 = 0x0
0x224: V218 = EQ 0x0 V216
---
Entry stack: [V10, S3, {0x160, 0x162}, V205, V206]
Stack pops: 1
Stack additions: [V218]
Exit stack: [V10, S3, {0x160, 0x162}, V205, V218]

================================

Block 0x225
[0x225:0x22a]
---
Predecessors: [0x1dd, 0x216]
Successors: [0x22b, 0x233]
---
0x225 JUMPDEST
0x226 ISZERO
0x227 PUSH2 0x233
0x22a JUMPI
---
0x225: JUMPDEST 
0x226: V219 = ISZERO S0
0x227: V220 = 0x233
0x22a: JUMPI 0x233 V219
---
Entry stack: [V10, S3, {0x160, 0x162}, V205, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, {0x160, 0x162}, V205]

================================

Block 0x22b
[0x22b:0x232]
---
Predecessors: [0x225]
Successors: [0x1da]
---
0x22b TIMESTAMP
0x22c PUSH1 0x1
0x22e SSTORE
0x22f PUSH2 0x1da
0x232 JUMP
---
0x22b: V221 = TIMESTAMP
0x22c: V222 = 0x1
0x22e: S[0x1] = V221
0x22f: V223 = 0x1da
0x232: JUMP 0x1da
---
Entry stack: [V10, S2, {0x160, 0x162}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x160, 0x162}, S0]

================================

Block 0x233
[0x233:0x244]
---
Predecessors: [0x225]
Successors: [0x245, 0x2c5]
---
0x233 JUMPDEST
0x234 PUSH1 0x1
0x236 SLOAD
0x237 PUSH1 0x2
0x239 SLOAD
0x23a PUSH1 0xb4
0x23c SWAP2
0x23d SWAP1
0x23e SUB
0x23f GT
0x240 ISZERO
0x241 PUSH2 0x2c5
0x244 JUMPI
---
0x233: JUMPDEST 
0x234: V224 = 0x1
0x236: V225 = S[0x1]
0x237: V226 = 0x2
0x239: V227 = S[0x2]
0x23a: V228 = 0xb4
0x23e: V229 = SUB V227 V225
0x23f: V230 = GT V229 0xb4
0x240: V231 = ISZERO V230
0x241: V232 = 0x2c5
0x244: JUMPI 0x2c5 V231
---
Entry stack: [V10, S2, {0x160, 0x162}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x160, 0x162}, S0]

================================

Block 0x245
[0x245:0x251]
---
Predecessors: [0x233]
Successors: [0x252]
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 SLOAD
0x249 DUP3
0x24a SWAP1
0x24b DUP2
0x24c LT
0x24d ISZERO
0x24e PUSH2 0x2
0x251 JUMPI
---
0x245: V233 = 0x0
0x248: V234 = S[0x0]
0x24c: V235 = LT S0 V234
0x24d: V236 = ISZERO V235
0x24e: V237 = 0x2
0x251: THROWI V236
---
Entry stack: [V10, S2, {0x160, 0x162}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V10, S2, {0x160, 0x162}, S0, 0x0, S0]

================================

Block 0x252
[0x252:0x2ac]
---
Predecessors: [0x245]
Successors: [0x2ad, 0x2fd]
---
0x252 DUP2
0x253 DUP1
0x254 MSTORE
0x255 PUSH1 0x0
0x257 DUP1
0x258 MLOAD
0x259 PUSH1 0x20
0x25b PUSH2 0x34b
0x25e DUP4
0x25f CODECOPY
0x260 DUP2
0x261 MLOAD
0x262 SWAP2
0x263 MSTORE
0x264 ADD
0x265 SWAP1
0x266 POP
0x267 PUSH1 0x40
0x269 MLOAD
0x26a SWAP1
0x26b SLOAD
0x26c PUSH1 0x1
0x26e PUSH1 0xa0
0x270 PUSH1 0x2
0x272 EXP
0x273 SUB
0x274 SWAP1
0x275 DUP2
0x276 AND
0x277 SWAP2
0x278 PUSH1 0x0
0x27a SWAP2
0x27b ADDRESS
0x27c AND
0x27d BALANCE
0x27e PUSH8 0x4563918244f3ffff
0x287 NOT
0x288 ADD
0x289 SWAP1
0x28a DUP3
0x28b DUP2
0x28c DUP2
0x28d DUP2
0x28e DUP6
0x28f DUP9
0x290 DUP4
0x291 CALL
0x292 SWAP4
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 PUSH1 0x0
0x29a PUSH1 0x0
0x29c PUSH1 0x0
0x29e POP
0x29f DUP2
0x2a0 DUP2
0x2a1 SLOAD
0x2a2 DUP2
0x2a3 DUP4
0x2a4 SSTORE
0x2a5 DUP2
0x2a6 DUP2
0x2a7 ISZERO
0x2a8 GT
0x2a9 PUSH2 0x2fd
0x2ac JUMPI
---
0x254: M[0x0] = 0x0
0x255: V238 = 0x0
0x258: V239 = M[0x0]
0x259: V240 = 0x20
0x25b: V241 = 0x34b
0x25f: CODECOPY 0x0 0x34b 0x20
0x261: V242 = M[0x0]
0x263: M[0x0] = V239
0x264: V243 = ADD V242 S0
0x267: V244 = 0x40
0x269: V245 = M[0x40]
0x26b: V246 = S[V243]
0x26c: V247 = 0x1
0x26e: V248 = 0xa0
0x270: V249 = 0x2
0x272: V250 = EXP 0x2 0xa0
0x273: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x276: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x278: V253 = 0x0
0x27b: V254 = ADDRESS
0x27c: V255 = AND V254 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V256 = BALANCE V255
0x27e: V257 = 0x4563918244f3ffff
0x287: V258 = NOT 0x4563918244f3ffff
0x288: V259 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffba9c6e7dbb0c0000 V256
0x291: V260 = CALL 0x0 V252 V259 V245 0x0 V245 0x0
0x298: V261 = 0x0
0x29a: V262 = 0x0
0x29c: V263 = 0x0
0x2a1: V264 = S[0x0]
0x2a4: S[0x0] = 0x0
0x2a7: V265 = ISZERO V264
0x2a8: V266 = GT V265 0x0
0x2a9: V267 = 0x2fd
0x2ac: JUMPI 0x2fd V266
---
Entry stack: [V10, S4, {0x160, 0x162}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, 0x0, 0x0, V264]
Exit stack: [V10, S4, {0x160, 0x162}, S2, 0x0, 0x0, 0x0, V264]

================================

Block 0x2ad
[0x2ad:0x2c4]
---
Predecessors: [0x252]
Successors: [0x323]
---
0x2ad DUP2
0x2ae DUP4
0x2af PUSH1 0x0
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 PUSH1 0x0
0x2b6 SHA3
0x2b7 SWAP2
0x2b8 DUP3
0x2b9 ADD
0x2ba SWAP2
0x2bb ADD
0x2bc PUSH2 0x2fd
0x2bf SWAP2
0x2c0 SWAP1
0x2c1 PUSH2 0x323
0x2c4 JUMP
---
0x2af: V268 = 0x0
0x2b1: M[0x0] = 0x0
0x2b2: V269 = 0x20
0x2b4: V270 = 0x0
0x2b6: V271 = SHA3 0x0 0x20
0x2b9: V272 = ADD V271 V264
0x2bb: V273 = ADD V271 0x0
0x2bc: V274 = 0x2fd
0x2c1: V275 = 0x323
0x2c4: JUMP 0x323
---
Entry stack: [V10, S6, {0x160, 0x162}, S4, 0x0, 0x0, 0x0, V264]
Stack pops: 3
Stack additions: [S2, S1, 0x2fd, V272, V273]
Exit stack: [V10, S6, {0x160, 0x162}, S4, 0x0, 0x0, 0x0, 0x2fd, V272, V273]

================================

Block 0x2c5
[0x2c5:0x2cb]
---
Predecessors: [0x233]
Successors: [0x2cc]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x2
0x2c8 SLOAD
0x2c9 PUSH1 0x1
0x2cb SSTORE
---
0x2c5: JUMPDEST 
0x2c6: V276 = 0x2
0x2c8: V277 = S[0x2]
0x2c9: V278 = 0x1
0x2cb: S[0x1] = V277
---
Entry stack: [V10, S2, {0x160, 0x162}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x160, 0x162}, S0]

================================

Block 0x2cc
[0x2cc:0x2e4]
---
Predecessors: [0x2c5, 0x345]
Successors: [0x193, 0x2e5]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x0
0x2cf DUP1
0x2d0 SLOAD
0x2d1 PUSH1 0x1
0x2d3 DUP2
0x2d4 ADD
0x2d5 DUP1
0x2d6 DUP4
0x2d7 SSTORE
0x2d8 SWAP2
0x2d9 SWAP1
0x2da DUP3
0x2db SWAP1
0x2dc DUP1
0x2dd ISZERO
0x2de DUP3
0x2df SWAP1
0x2e0 GT
0x2e1 PUSH2 0x193
0x2e4 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V279 = 0x0
0x2d0: V280 = S[0x0]
0x2d1: V281 = 0x1
0x2d4: V282 = ADD V280 0x1
0x2d7: S[0x0] = V282
0x2dd: V283 = ISZERO V280
0x2e0: V284 = GT V283 V282
0x2e1: V285 = 0x193
0x2e4: JUMPI 0x193 V284
---
Entry stack: [S15, S14, {0x0, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, S2, {0x0, 0x160, 0x162}, S0]
Stack pops: 0
Stack additions: [V282, 0x0, V282, V280]
Exit stack: [S15, S14, {0x0, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, S2, {0x0, 0x160, 0x162}, S0, V282, 0x0, V282, V280]

================================

Block 0x2e5
[0x2e5:0x2fc]
---
Predecessors: [0x2cc]
Successors: [0x323]
---
0x2e5 DUP2
0x2e6 DUP4
0x2e7 PUSH1 0x0
0x2e9 MSTORE
0x2ea PUSH1 0x20
0x2ec PUSH1 0x0
0x2ee SHA3
0x2ef SWAP2
0x2f0 DUP3
0x2f1 ADD
0x2f2 SWAP2
0x2f3 ADD
0x2f4 PUSH2 0x193
0x2f7 SWAP2
0x2f8 SWAP1
0x2f9 PUSH2 0x323
0x2fc JUMP
---
0x2e7: V286 = 0x0
0x2e9: M[0x0] = 0x0
0x2ea: V287 = 0x20
0x2ec: V288 = 0x0
0x2ee: V289 = SHA3 0x0 0x20
0x2f1: V290 = ADD V289 V280
0x2f3: V291 = ADD V289 V282
0x2f4: V292 = 0x193
0x2f9: V293 = 0x323
0x2fc: JUMP 0x323
---
Entry stack: [S19, S18, {0x0, 0x162}, S16, S15, {0x0, 0x160, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, V282, 0x0, V282, V280]
Stack pops: 3
Stack additions: [S2, S1, 0x193, V290, V291]
Exit stack: [S19, S18, {0x0, 0x162}, S16, S15, {0x0, 0x160, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, V282, 0x0, V282, 0x193, V290, V291]

================================

Block 0x2fd
[0x2fd:0x322]
---
Predecessors: [0x252, 0x341]
Successors: [0x323]
---
0x2fd JUMPDEST
0x2fe POP
0x2ff POP
0x300 PUSH1 0x0
0x302 DUP1
0x303 SLOAD
0x304 DUP2
0x305 DUP1
0x306 SSTORE
0x307 SWAP1
0x308 DUP1
0x309 MSTORE
0x30a PUSH2 0x345
0x30d SWAP3
0x30e POP
0x30f PUSH1 0x0
0x311 DUP1
0x312 MLOAD
0x313 PUSH1 0x20
0x315 PUSH2 0x34b
0x318 DUP4
0x319 CODECOPY
0x31a DUP2
0x31b MLOAD
0x31c SWAP2
0x31d MSTORE
0x31e SWAP1
0x31f DUP2
0x320 ADD
0x321 SWAP2
0x322 POP
---
0x2fd: JUMPDEST 
0x300: V294 = 0x0
0x303: V295 = S[0x0]
0x306: S[0x0] = 0x0
0x309: M[0x0] = 0x0
0x30a: V296 = 0x345
0x30f: V297 = 0x0
0x312: V298 = M[0x0]
0x313: V299 = 0x20
0x315: V300 = 0x34b
0x319: CODECOPY 0x0 0x34b 0x20
0x31b: V301 = M[0x0]
0x31d: M[0x0] = V298
0x320: V302 = ADD V301 V295
---
Entry stack: [S16, S15, {0x0, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, S3, {0x0, 0x160, 0x162}, S1, S0]
Stack pops: 4
Stack additions: [0x345, V302, V301]
Exit stack: [S16, S15, {0x0, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, 0x345, V302, V301]

================================

Block 0x323
[0x323:0x32b]
---
Predecessors: [0x2ad, 0x2e5, 0x2fd, 0x32c]
Successors: [0x32c, 0x341]
---
0x323 JUMPDEST
0x324 DUP1
0x325 DUP3
0x326 GT
0x327 ISZERO
0x328 PUSH2 0x341
0x32b JUMPI
---
0x323: JUMPDEST 
0x326: V303 = GT S1 S0
0x327: V304 = ISZERO V303
0x328: V305 = 0x341
0x32b: JUMPI 0x341 V304
---
Entry stack: [S21, S20, {0x0, 0x162}, S18, S17, {0x0, 0x160, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, {0x193, 0x2fd, 0x345}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S21, S20, {0x0, 0x162}, S18, S17, {0x0, 0x160, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, {0x193, 0x2fd, 0x345}, S1, S0]

================================

Block 0x32c
[0x32c:0x340]
---
Predecessors: [0x323]
Successors: [0x323]
---
0x32c DUP1
0x32d SLOAD
0x32e PUSH1 0x1
0x330 PUSH1 0xa0
0x332 PUSH1 0x2
0x334 EXP
0x335 SUB
0x336 NOT
0x337 AND
0x338 DUP2
0x339 SSTORE
0x33a PUSH1 0x1
0x33c ADD
0x33d PUSH2 0x323
0x340 JUMP
---
0x32d: V306 = S[S0]
0x32e: V307 = 0x1
0x330: V308 = 0xa0
0x332: V309 = 0x2
0x334: V310 = EXP 0x2 0xa0
0x335: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x336: V312 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x337: V313 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V306
0x339: S[S0] = V313
0x33a: V314 = 0x1
0x33c: V315 = ADD 0x1 S0
0x33d: V316 = 0x323
0x340: JUMP 0x323
---
Entry stack: [S18, S17, {0x0, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, {0x193, 0x2fd, 0x345}, S1, S0]
Stack pops: 1
Stack additions: [V315]
Exit stack: [S18, S17, {0x0, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, {0x193, 0x2fd, 0x345}, S1, V315]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x323]
Successors: [0x193, 0x2fd, 0x345]
---
0x341 JUMPDEST
0x342 POP
0x343 SWAP1
0x344 JUMP
---
0x341: JUMPDEST 
0x344: JUMP {0x193, 0x2fd, 0x345}
---
Entry stack: [S18, S17, {0x0, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, {0x193, 0x2fd, 0x345}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [S18, S17, {0x0, 0x162}, S15, S14, {0x0, 0x160, 0x162}, S12, S11, {0x0, 0x160, 0x162}, S9, S8, {0x0, 0x160, 0x162}, S6, S5, {0x0, 0x160, 0x162}, S3, S1]

================================

Block 0x345
[0x345:0x34a]
---
Predecessors: [0x341]
Successors: [0x2cc]
---
0x345 JUMPDEST
0x346 POP
0x347 PUSH2 0x2cc
0x34a JUMP
---
0x345: JUMPDEST 
0x347: V317 = 0x2cc
0x34a: JUMP 0x2cc
---
Entry stack: [S16, S15, {0x0, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, S3, {0x0, 0x160, 0x162}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S16, S15, {0x0, 0x162}, S13, S12, {0x0, 0x160, 0x162}, S10, S9, {0x0, 0x160, 0x162}, S7, S6, {0x0, 0x160, 0x162}, S4, S3, {0x0, 0x160, 0x162}, S1]

================================

Block 0x34b
[0x34b:0x36e]
---
Predecessors: []
Successors: []
---
0x34b MISSING 0x29
0x34c MISSING 0xd
0x34d MISSING 0xec
0x34e MISSING 0xd9
0x34f SLOAD
0x350 DUP12
0x351 PUSH3 0xa8d603
0x355 GASLIMIT
0x356 MISSING 0xa9
0x357 DUP9
0x358 CODESIZE
0x359 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x36a PUSH4 0x0
---
0x34b: MISSING 0x29
0x34c: MISSING 0xd
0x34d: MISSING 0xec
0x34e: MISSING 0xd9
0x34f: V318 = S[S0]
0x351: V319 = 0xa8d603
0x355: V320 = GASLIMIT
0x356: MISSING 0xa9
0x358: V321 = CODESIZE
0x359: V322 = 0xc84ba6bc95484008f6362f93160ef3e5
0x36a: V323 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V320, 0xa8d603, S11, V318, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V321, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x2fb0c5e
Entry block: 0x6c
Exit block: 0x164
Body: 0x6c, 0x164

Function 1:
Public function signature: 0x13af4035
Entry block: 0x75
Exit block: 0x160
Body: 0x75, 0x95, 0x160, 0x162, 0x1da

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xa9
Exit block: 0x160
Body: 0xa9, 0xc6, 0x160, 0x162

Function 3:
Public function signature: 0x7873bc61
Entry block: 0xd8
Exit block: 0x176
Body: 0xd8, 0xec, 0x176

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x10b
Exit block: 0x176
Body: 0x10b, 0x176

Function 5:
Public function signature: 0xdaf1af19
Entry block: 0x11d
Exit block: 0x164
Body: 0x11d, 0x164

Function 6:
Public function signature: 0xe97dcb62
Entry block: 0x126
Exit block: 0x160
Body: 0x126, 0x12a, 0x13c, 0x160, 0x162, 0x193, 0x1a8, 0x1da, 0x1dd, 0x216, 0x225, 0x22b, 0x233, 0x245, 0x252, 0x2ad, 0x2c5, 0x2cc, 0x2e5, 0x2fd, 0x345

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x160
Body: 0x61, 0x12a, 0x13c, 0x160, 0x162, 0x193, 0x1a8, 0x1da, 0x1dd, 0x216, 0x225, 0x22b, 0x233, 0x245, 0x252, 0x2ad, 0x2c5, 0x2cc, 0x2e5, 0x2fd, 0x345

Function 8:
Private function
Entry block: 0x323
Exit block: 0x341
Body: 0x323, 0x32c, 0x341

