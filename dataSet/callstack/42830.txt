Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x6e]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1974d303
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x6e
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1974d303
0x1a: V12 = EQ V10 0x1974d303
0x1b: V13 = 0x6e
0x1e: JUMPI 0x6e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x104]
---
0x1f DUP1
0x20 PUSH4 0x5646a3e2
0x25 EQ
0x26 PUSH2 0x104
0x29 JUMPI
---
0x20: V14 = 0x5646a3e2
0x25: V15 = EQ 0x5646a3e2 V10
0x26: V16 = 0x104
0x29: JUMPI 0x104 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x173]
---
0x2a DUP1
0x2b PUSH4 0x5e8ea25a
0x30 EQ
0x31 PUSH2 0x173
0x34 JUMPI
---
0x2b: V17 = 0x5e8ea25a
0x30: V18 = EQ 0x5e8ea25a V10
0x31: V19 = 0x173
0x34: JUMPI 0x173 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x1bf]
---
0x35 DUP1
0x36 PUSH4 0x6d4ce63c
0x3b EQ
0x3c PUSH2 0x1bf
0x3f JUMPI
---
0x36: V20 = 0x6d4ce63c
0x3b: V21 = EQ 0x6d4ce63c V10
0x3c: V22 = 0x1bf
0x3f: JUMPI 0x1bf V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x1c6]
---
0x40 DUP1
0x41 PUSH4 0xb7f3f5c6
0x46 EQ
0x47 PUSH2 0x1c6
0x4a JUMPI
---
0x41: V23 = 0xb7f3f5c6
0x46: V24 = EQ 0xb7f3f5c6 V10
0x47: V25 = 0x1c6
0x4a: JUMPI 0x1c6 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1cf]
---
0x4b DUP1
0x4c PUSH4 0xc01778d7
0x51 EQ
0x52 PUSH2 0x1cf
0x55 JUMPI
---
0x4c: V26 = 0xc01778d7
0x51: V27 = EQ 0xc01778d7 V10
0x52: V28 = 0x1cf
0x55: JUMPI 0x1cf V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x22f]
---
0x56 DUP1
0x57 PUSH4 0xe53f8286
0x5c EQ
0x5d PUSH2 0x22f
0x60 JUMPI
---
0x57: V29 = 0xe53f8286
0x5c: V30 = EQ 0xe53f8286 V10
0x5d: V31 = 0x22f
0x60: JUMPI 0x22f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x238]
---
0x61 DUP1
0x62 PUSH4 0xff31c389
0x67 EQ
0x68 PUSH2 0x238
0x6b JUMPI
---
0x62: V32 = 0xff31c389
0x67: V33 = EQ 0xff31c389 V10
0x68: V34 = 0x238
0x6b: JUMPI 0x238 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e
[0x6e:0x94]
---
Predecessors: [0xb]
Successors: [0x95, 0xfd]
---
0x6e JUMPDEST
0x6f PUSH2 0x169
0x72 PUSH1 0x4
0x74 CALLDATALOAD
0x75 PUSH1 0x0
0x77 DUP2
0x78 DUP2
0x79 MSTORE
0x7a PUSH1 0x2
0x7c PUSH1 0x20
0x7e DUP2
0x7f SWAP1
0x80 MSTORE
0x81 PUSH1 0x40
0x83 DUP3
0x84 SHA3
0x85 SWAP1
0x86 DUP2
0x87 ADD
0x88 SLOAD
0x89 PUSH1 0x6
0x8b DUP3
0x8c ADD
0x8d SLOAD
0x8e DUP4
0x8f SWAP2
0x90 GT
0x91 PUSH2 0xfd
0x94 JUMPI
---
0x6e: JUMPDEST 
0x6f: V35 = 0x169
0x72: V36 = 0x4
0x74: V37 = CALLDATALOAD 0x4
0x75: V38 = 0x0
0x79: M[0x0] = V37
0x7a: V39 = 0x2
0x7c: V40 = 0x20
0x80: M[0x20] = 0x2
0x81: V41 = 0x40
0x84: V42 = SHA3 0x0 0x40
0x87: V43 = ADD V42 0x2
0x88: V44 = S[V43]
0x89: V45 = 0x6
0x8c: V46 = ADD V42 0x6
0x8d: V47 = S[V46]
0x90: V48 = GT V44 V47
0x91: V49 = 0xfd
0x94: JUMPI 0xfd V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x169, V37, 0x0, V42, 0x0]
Exit stack: [V10, 0x169, V37, 0x0, V42, 0x0]

================================

Block 0x95
[0x95:0xfc]
---
Predecessors: [0x6e]
Successors: [0xfd]
---
0x95 POP
0x96 PUSH1 0x1
0x98 DUP1
0x99 SLOAD
0x9a DUP1
0x9b DUP3
0x9c ADD
0x9d DUP3
0x9e SSTORE
0x9f DUP1
0xa0 DUP5
0xa1 MSTORE
0xa2 PUSH1 0x7
0xa4 DUP4
0xa5 ADD
0xa6 PUSH1 0x20
0xa8 MSTORE
0xa9 PUSH1 0x40
0xab SWAP1
0xac SWAP4
0xad SHA3
0xae DUP1
0xaf SLOAD
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 NOT
0xc6 AND
0xc7 CALLER
0xc8 OR
0xc9 DUP2
0xca SSTORE
0xcb SWAP1
0xcc DUP2
0xcd ADD
0xce DUP1
0xcf SLOAD
0xd0 CALLVALUE
0xd1 ADD
0xd2 SWAP1
0xd3 DUP2
0xd4 SWAP1
0xd5 SSTORE
0xd6 PUSH1 0x2
0xd8 DUP3
0xd9 ADD
0xda DUP1
0xdb SLOAD
0xdc PUSH1 0xff
0xde NOT
0xdf AND
0xe0 SWAP1
0xe1 SSTORE
0xe2 PUSH1 0x5
0xe4 DUP4
0xe5 ADD
0xe6 DUP1
0xe7 SLOAD
0xe8 SWAP1
0xe9 SWAP2
0xea ADD
0xeb SWAP1
0xec SSTORE
0xed PUSH1 0x3
0xef DUP3
0xf0 ADD
0xf1 SLOAD
0xf2 PUSH1 0x6
0xf4 DUP4
0xf5 ADD
0xf6 DUP1
0xf7 SLOAD
0xf8 SWAP1
0xf9 SWAP2
0xfa ADD
0xfb SWAP1
0xfc SSTORE
---
0x96: V50 = 0x1
0x99: V51 = S[0x1]
0x9c: V52 = ADD 0x1 V51
0x9e: S[0x1] = V52
0xa1: M[0x0] = V51
0xa2: V53 = 0x7
0xa5: V54 = ADD V42 0x7
0xa6: V55 = 0x20
0xa8: M[0x20] = V54
0xa9: V56 = 0x40
0xad: V57 = SHA3 0x0 0x40
0xaf: V58 = S[V57]
0xb0: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V60 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V61 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V58
0xc7: V62 = CALLER
0xc8: V63 = OR V62 V61
0xca: S[V57] = V63
0xcd: V64 = ADD V57 0x1
0xcf: V65 = S[V64]
0xd0: V66 = CALLVALUE
0xd1: V67 = ADD V66 V65
0xd5: S[V64] = V67
0xd6: V68 = 0x2
0xd9: V69 = ADD V57 0x2
0xdb: V70 = S[V69]
0xdc: V71 = 0xff
0xde: V72 = NOT 0xff
0xdf: V73 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V70
0xe1: S[V69] = V73
0xe2: V74 = 0x5
0xe5: V75 = ADD V42 0x5
0xe7: V76 = S[V75]
0xea: V77 = ADD V67 V76
0xec: S[V75] = V77
0xed: V78 = 0x3
0xf0: V79 = ADD V42 0x3
0xf1: V80 = S[V79]
0xf2: V81 = 0x6
0xf5: V82 = ADD V42 0x6
0xf7: V83 = S[V82]
0xfa: V84 = ADD V80 V83
0xfc: S[V82] = V84
---
Entry stack: [V10, 0x169, V37, 0x0, V42, 0x0]
Stack pops: 3
Stack additions: [V51, S1, V57]
Exit stack: [V10, 0x169, V37, V51, V42, V57]

================================

Block 0xfd
[0xfd:0x103]
---
Predecessors: [0x6e, 0x95]
Successors: [0x169]
---
0xfd JUMPDEST
0xfe POP
0xff POP
0x100 SWAP2
0x101 SWAP1
0x102 POP
0x103 JUMP
---
0xfd: JUMPDEST 
0x103: JUMP 0x169
---
Entry stack: [V10, 0x169, V37, S2, V42, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, S2]

================================

Block 0x104
[0x104:0x168]
---
Predecessors: [0x1f]
Successors: [0x169]
---
0x104 JUMPDEST
0x105 PUSH1 0x0
0x107 DUP1
0x108 SLOAD
0x109 PUSH1 0x1
0x10b DUP2
0x10c DUP2
0x10d ADD
0x10e DUP4
0x10f SSTORE
0x110 DUP2
0x111 DUP4
0x112 MSTORE
0x113 PUSH1 0x2
0x115 PUSH1 0x20
0x117 DUP2
0x118 SWAP1
0x119 MSTORE
0x11a PUSH1 0x40
0x11c DUP5
0x11d SHA3
0x11e DUP1
0x11f SLOAD
0x120 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x135 NOT
0x136 SWAP1
0x137 DUP2
0x138 AND
0x139 CALLER
0x13a OR
0x13b DUP3
0x13c SSTORE
0x13d CALLVALUE
0x13e SWAP3
0x13f DUP3
0x140 ADD
0x141 SWAP3
0x142 SWAP1
0x143 SWAP3
0x144 SSTORE
0x145 PUSH1 0x4
0x147 CALLDATALOAD
0x148 PUSH1 0x3
0x14a DUP3
0x14b ADD
0x14c SSTORE
0x14d SWAP2
0x14e DUP3
0x14f ADD
0x150 DUP1
0x151 SLOAD
0x152 SWAP1
0x153 SWAP2
0x154 AND
0x155 PUSH1 0x24
0x157 CALLDATALOAD
0x158 OR
0x159 SWAP1
0x15a SSTORE
0x15b PUSH1 0x6
0x15d DUP2
0x15e ADD
0x15f DUP4
0x160 SWAP1
0x161 SSTORE
0x162 PUSH1 0x5
0x164 ADD
0x165 SWAP2
0x166 SWAP1
0x167 SWAP2
0x168 SSTORE
---
0x104: JUMPDEST 
0x105: V85 = 0x0
0x108: V86 = S[0x0]
0x109: V87 = 0x1
0x10d: V88 = ADD 0x1 V86
0x10f: S[0x0] = V88
0x112: M[0x0] = V86
0x113: V89 = 0x2
0x115: V90 = 0x20
0x119: M[0x20] = 0x2
0x11a: V91 = 0x40
0x11d: V92 = SHA3 0x0 0x40
0x11f: V93 = S[V92]
0x120: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x135: V95 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x138: V96 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V93
0x139: V97 = CALLER
0x13a: V98 = OR V97 V96
0x13c: S[V92] = V98
0x13d: V99 = CALLVALUE
0x140: V100 = ADD V92 0x2
0x144: S[V100] = V99
0x145: V101 = 0x4
0x147: V102 = CALLDATALOAD 0x4
0x148: V103 = 0x3
0x14b: V104 = ADD V92 0x3
0x14c: S[V104] = V102
0x14f: V105 = ADD V92 0x1
0x151: V106 = S[V105]
0x154: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V106
0x155: V108 = 0x24
0x157: V109 = CALLDATALOAD 0x24
0x158: V110 = OR V109 V107
0x15a: S[V105] = V110
0x15b: V111 = 0x6
0x15e: V112 = ADD V92 0x6
0x161: S[V112] = 0x0
0x162: V113 = 0x5
0x164: V114 = ADD 0x5 V92
0x168: S[V114] = 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V10, V86]

================================

Block 0x169
[0x169:0x172]
---
Predecessors: [0xfd, 0x104, 0x1bf, 0x1c6, 0x22f]
Successors: []
---
0x169 JUMPDEST
0x16a PUSH1 0x60
0x16c SWAP1
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 SWAP1
0x172 RETURN
---
0x169: JUMPDEST 
0x16a: V115 = 0x60
0x16e: M[0x60] = S0
0x16f: V116 = 0x20
0x172: RETURN 0x60 0x20
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x173
[0x173:0x1be]
---
Predecessors: [0x2a]
Successors: [0x301]
---
0x173 JUMPDEST
0x174 PUSH1 0x2
0x176 PUSH1 0x20
0x178 DUP2
0x179 SWAP1
0x17a MSTORE
0x17b PUSH1 0x4
0x17d DUP1
0x17e CALLDATALOAD
0x17f PUSH1 0x0
0x181 SWAP1
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x40
0x186 SWAP1
0x187 SHA3
0x188 DUP1
0x189 SLOAD
0x18a SWAP3
0x18b DUP2
0x18c ADD
0x18d SLOAD
0x18e PUSH1 0x5
0x190 DUP3
0x191 ADD
0x192 SLOAD
0x193 PUSH1 0x1
0x195 DUP4
0x196 ADD
0x197 SLOAD
0x198 PUSH1 0x3
0x19a DUP5
0x19b ADD
0x19c SLOAD
0x19d SWAP5
0x19e DUP5
0x19f ADD
0x1a0 SLOAD
0x1a1 PUSH1 0x6
0x1a3 SWAP1
0x1a4 SWAP5
0x1a5 ADD
0x1a6 SLOAD
0x1a7 PUSH2 0x301
0x1aa SWAP7
0x1ab PUSH1 0x1
0x1ad PUSH1 0xa0
0x1af PUSH1 0x2
0x1b1 EXP
0x1b2 SUB
0x1b3 SWAP1
0x1b4 DUP2
0x1b5 AND
0x1b6 SWAP7
0x1b7 SWAP3
0x1b8 AND
0x1b9 SWAP5
0x1ba SWAP2
0x1bb SWAP3
0x1bc SWAP1
0x1bd DUP8
0x1be JUMP
---
0x173: JUMPDEST 
0x174: V117 = 0x2
0x176: V118 = 0x20
0x17a: M[0x20] = 0x2
0x17b: V119 = 0x4
0x17e: V120 = CALLDATALOAD 0x4
0x17f: V121 = 0x0
0x183: M[0x0] = V120
0x184: V122 = 0x40
0x187: V123 = SHA3 0x0 0x40
0x189: V124 = S[V123]
0x18c: V125 = ADD V123 0x2
0x18d: V126 = S[V125]
0x18e: V127 = 0x5
0x191: V128 = ADD V123 0x5
0x192: V129 = S[V128]
0x193: V130 = 0x1
0x196: V131 = ADD V123 0x1
0x197: V132 = S[V131]
0x198: V133 = 0x3
0x19b: V134 = ADD V123 0x3
0x19c: V135 = S[V134]
0x19f: V136 = ADD V123 0x4
0x1a0: V137 = S[V136]
0x1a1: V138 = 0x6
0x1a5: V139 = ADD V123 0x6
0x1a6: V140 = S[V139]
0x1a7: V141 = 0x301
0x1ab: V142 = 0x1
0x1ad: V143 = 0xa0
0x1af: V144 = 0x2
0x1b1: V145 = EXP 0x2 0xa0
0x1b2: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1b8: V148 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x1be: JUMP 0x301
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x301, V147, V148, V126, V135, V137, V129, V140]
Exit stack: [V10, 0x301, V147, V148, V126, V135, V137, V129, V140]

================================

Block 0x1bf
[0x1bf:0x1c5]
---
Predecessors: [0x35]
Successors: [0x169]
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x0
0x1c2 PUSH2 0x169
0x1c5 JUMP
---
0x1bf: JUMPDEST 
0x1c0: V149 = 0x0
0x1c2: V150 = 0x169
0x1c5: JUMP 0x169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x1c6
[0x1c6:0x1ce]
---
Predecessors: [0x40]
Successors: [0x169]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x169
0x1ca PUSH1 0x0
0x1cc SLOAD
0x1cd DUP2
0x1ce JUMP
---
0x1c6: JUMPDEST 
0x1c7: V151 = 0x169
0x1ca: V152 = 0x0
0x1cc: V153 = S[0x0]
0x1ce: JUMP 0x169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x169, V153]
Exit stack: [V10, 0x169, V153]

================================

Block 0x1cf
[0x1cf:0x1fa]
---
Predecessors: [0x4b]
Successors: [0x1fb, 0x226]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x32e
0x1d3 PUSH1 0x4
0x1d5 CALLDATALOAD
0x1d6 PUSH1 0x0
0x1d8 DUP2
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x2
0x1dd PUSH1 0x20
0x1df MSTORE
0x1e0 PUSH1 0x40
0x1e2 DUP2
0x1e3 SHA3
0x1e4 DUP1
0x1e5 SLOAD
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee SWAP1
0x1ef DUP2
0x1f0 AND
0x1f1 CALLER
0x1f2 SWAP1
0x1f3 SWAP2
0x1f4 AND
0x1f5 EQ
0x1f6 ISZERO
0x1f7 PUSH2 0x226
0x1fa JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V154 = 0x32e
0x1d3: V155 = 0x4
0x1d5: V156 = CALLDATALOAD 0x4
0x1d6: V157 = 0x0
0x1da: M[0x0] = V156
0x1db: V158 = 0x2
0x1dd: V159 = 0x20
0x1df: M[0x20] = 0x2
0x1e0: V160 = 0x40
0x1e3: V161 = SHA3 0x0 0x40
0x1e5: V162 = S[V161]
0x1e6: V163 = 0x1
0x1e8: V164 = 0xa0
0x1ea: V165 = 0x2
0x1ec: V166 = EXP 0x2 0xa0
0x1ed: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x1f1: V169 = CALLER
0x1f4: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1f5: V171 = EQ V170 V168
0x1f6: V172 = ISZERO V171
0x1f7: V173 = 0x226
0x1fa: JUMPI 0x226 V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x32e, V156, 0x0, V161]
Exit stack: [V10, 0x32e, V156, 0x0, V161]

================================

Block 0x1fb
[0x1fb:0x225]
---
Predecessors: [0x1cf]
Successors: [0x226]
---
0x1fb DUP1
0x1fc SLOAD
0x1fd PUSH1 0x2
0x1ff DUP3
0x200 ADD
0x201 SLOAD
0x202 PUSH1 0x5
0x204 DUP4
0x205 ADD
0x206 SLOAD
0x207 PUSH1 0x1
0x209 PUSH1 0xa0
0x20b PUSH1 0x2
0x20d EXP
0x20e SUB
0x20f SWAP3
0x210 SWAP1
0x211 SWAP3
0x212 AND
0x213 SWAP2
0x214 DUP5
0x215 SWAP2
0x216 ADD
0x217 PUSH1 0x60
0x219 DUP3
0x21a DUP2
0x21b DUP2
0x21c DUP2
0x21d DUP6
0x21e DUP9
0x21f DUP4
0x220 CALL
0x221 POP
0x222 POP
0x223 POP
0x224 POP
0x225 POP
---
0x1fc: V174 = S[V161]
0x1fd: V175 = 0x2
0x200: V176 = ADD V161 0x2
0x201: V177 = S[V176]
0x202: V178 = 0x5
0x205: V179 = ADD V161 0x5
0x206: V180 = S[V179]
0x207: V181 = 0x1
0x209: V182 = 0xa0
0x20b: V183 = 0x2
0x20d: V184 = EXP 0x2 0xa0
0x20e: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x212: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x216: V187 = ADD V177 V180
0x217: V188 = 0x60
0x220: V189 = CALL 0x0 V186 V187 0x60 0x0 0x60 0x0
---
Entry stack: [V10, 0x32e, V156, 0x0, V161]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x32e, V156, 0x0, V161]

================================

Block 0x226
[0x226:0x22e]
---
Predecessors: [0x1cf, 0x1fb]
Successors: [0x32e]
---
0x226 JUMPDEST
0x227 POP
0x228 PUSH1 0x1
0x22a SWAP3
0x22b SWAP2
0x22c POP
0x22d POP
0x22e JUMP
---
0x226: JUMPDEST 
0x228: V190 = 0x1
0x22e: JUMP 0x32e
---
Entry stack: [V10, 0x32e, V156, 0x0, V161]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x22f
[0x22f:0x237]
---
Predecessors: [0x56]
Successors: [0x169]
---
0x22f JUMPDEST
0x230 PUSH2 0x169
0x233 PUSH1 0x1
0x235 SLOAD
0x236 DUP2
0x237 JUMP
---
0x22f: JUMPDEST 
0x230: V191 = 0x169
0x233: V192 = 0x1
0x235: V193 = S[0x1]
0x237: JUMP 0x169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x169, V193]
Exit stack: [V10, 0x169, V193]

================================

Block 0x238
[0x238:0x27a]
---
Predecessors: [0x61]
Successors: [0x27b, 0x2f5]
---
0x238 JUMPDEST
0x239 PUSH2 0x32e
0x23c PUSH1 0x4
0x23e CALLDATALOAD
0x23f PUSH1 0x24
0x241 CALLDATALOAD
0x242 PUSH1 0x44
0x244 CALLDATALOAD
0x245 PUSH1 0x0
0x247 DUP2
0x248 DUP2
0x249 MSTORE
0x24a PUSH1 0x2
0x24c PUSH1 0x20
0x24e SWAP1
0x24f DUP2
0x250 MSTORE
0x251 PUSH1 0x40
0x253 DUP1
0x254 DUP4
0x255 SHA3
0x256 DUP6
0x257 DUP5
0x258 MSTORE
0x259 PUSH1 0x7
0x25b DUP2
0x25c ADD
0x25d SWAP1
0x25e SWAP3
0x25f MSTORE
0x260 DUP3
0x261 SHA3
0x262 PUSH1 0x1
0x264 DUP3
0x265 ADD
0x266 SLOAD
0x267 CALLER
0x268 PUSH1 0x1
0x26a PUSH1 0xa0
0x26c PUSH1 0x2
0x26e EXP
0x26f SUB
0x270 SWAP1
0x271 DUP2
0x272 AND
0x273 SWAP2
0x274 AND
0x275 EQ
0x276 ISZERO
0x277 PUSH2 0x2f5
0x27a JUMPI
---
0x238: JUMPDEST 
0x239: V194 = 0x32e
0x23c: V195 = 0x4
0x23e: V196 = CALLDATALOAD 0x4
0x23f: V197 = 0x24
0x241: V198 = CALLDATALOAD 0x24
0x242: V199 = 0x44
0x244: V200 = CALLDATALOAD 0x44
0x245: V201 = 0x0
0x249: M[0x0] = V200
0x24a: V202 = 0x2
0x24c: V203 = 0x20
0x250: M[0x20] = 0x2
0x251: V204 = 0x40
0x255: V205 = SHA3 0x0 0x40
0x258: M[0x0] = V198
0x259: V206 = 0x7
0x25c: V207 = ADD V205 0x7
0x25f: M[0x20] = V207
0x261: V208 = SHA3 0x0 0x40
0x262: V209 = 0x1
0x265: V210 = ADD V205 0x1
0x266: V211 = S[V210]
0x267: V212 = CALLER
0x268: V213 = 0x1
0x26a: V214 = 0xa0
0x26c: V215 = 0x2
0x26e: V216 = EXP 0x2 0xa0
0x26f: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x274: V219 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x275: V220 = EQ V219 V218
0x276: V221 = ISZERO V220
0x277: V222 = 0x2f5
0x27a: JUMPI 0x2f5 V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x32e, V196, V198, V200, 0x0, V205, V208]
Exit stack: [V10, 0x32e, V196, V198, V200, 0x0, V205, V208]

================================

Block 0x27b
[0x27b:0x2f4]
---
Predecessors: [0x238]
Successors: [0x2f5]
---
0x27b DUP1
0x27c PUSH1 0x0
0x27e ADD
0x27f PUSH1 0x0
0x281 SWAP1
0x282 SLOAD
0x283 SWAP1
0x284 PUSH2 0x100
0x287 EXP
0x288 SWAP1
0x289 DIV
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 AND
0x293 PUSH1 0x1
0x295 PUSH1 0xa0
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b AND
0x29c PUSH1 0x0
0x29e DUP4
0x29f PUSH1 0x3
0x2a1 ADD
0x2a2 PUSH1 0x0
0x2a4 POP
0x2a5 SLOAD
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 DUP1
0x2aa SWAP1
0x2ab POP
0x2ac PUSH1 0x0
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 DUP1
0x2b2 DUP4
0x2b3 SUB
0x2b4 DUP2
0x2b5 DUP6
0x2b6 DUP9
0x2b7 DUP9
0x2b8 CALL
0x2b9 SWAP4
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd POP
0x2be POP
0x2bf PUSH1 0x1
0x2c1 DUP2
0x2c2 PUSH1 0x2
0x2c4 ADD
0x2c5 PUSH1 0x0
0x2c7 PUSH2 0x100
0x2ca EXP
0x2cb DUP2
0x2cc SLOAD
0x2cd DUP2
0x2ce PUSH1 0xff
0x2d0 MUL
0x2d1 NOT
0x2d2 AND
0x2d3 SWAP1
0x2d4 DUP4
0x2d5 MUL
0x2d6 OR
0x2d7 SWAP1
0x2d8 SSTORE
0x2d9 POP
0x2da DUP2
0x2db PUSH1 0x3
0x2dd ADD
0x2de PUSH1 0x0
0x2e0 POP
0x2e1 SLOAD
0x2e2 DUP3
0x2e3 PUSH1 0x2
0x2e5 ADD
0x2e6 PUSH1 0x0
0x2e8 DUP3
0x2e9 DUP3
0x2ea DUP3
0x2eb POP
0x2ec SLOAD
0x2ed SUB
0x2ee SWAP3
0x2ef POP
0x2f0 POP
0x2f1 DUP2
0x2f2 SWAP1
0x2f3 SSTORE
0x2f4 POP
---
0x27c: V223 = 0x0
0x27e: V224 = ADD 0x0 V208
0x27f: V225 = 0x0
0x282: V226 = S[V224]
0x284: V227 = 0x100
0x287: V228 = EXP 0x100 0x0
0x289: V229 = DIV V226 0x1
0x28a: V230 = 0x1
0x28c: V231 = 0xa0
0x28e: V232 = 0x2
0x290: V233 = EXP 0x2 0xa0
0x291: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x293: V236 = 0x1
0x295: V237 = 0xa0
0x297: V238 = 0x2
0x299: V239 = EXP 0x2 0xa0
0x29a: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29b: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x29c: V242 = 0x0
0x29f: V243 = 0x3
0x2a1: V244 = ADD 0x3 V205
0x2a2: V245 = 0x0
0x2a5: V246 = S[V244]
0x2a6: V247 = 0x40
0x2a8: V248 = M[0x40]
0x2ac: V249 = 0x0
0x2ae: V250 = 0x40
0x2b0: V251 = M[0x40]
0x2b3: V252 = SUB V248 V251
0x2b8: V253 = CALL 0x0 V241 V246 V251 V252 V251 0x0
0x2bf: V254 = 0x1
0x2c2: V255 = 0x2
0x2c4: V256 = ADD 0x2 V208
0x2c5: V257 = 0x0
0x2c7: V258 = 0x100
0x2ca: V259 = EXP 0x100 0x0
0x2cc: V260 = S[V256]
0x2ce: V261 = 0xff
0x2d0: V262 = MUL 0xff 0x1
0x2d1: V263 = NOT 0xff
0x2d2: V264 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V260
0x2d5: V265 = MUL 0x1 0x1
0x2d6: V266 = OR 0x1 V264
0x2d8: S[V256] = V266
0x2db: V267 = 0x3
0x2dd: V268 = ADD 0x3 V205
0x2de: V269 = 0x0
0x2e1: V270 = S[V268]
0x2e3: V271 = 0x2
0x2e5: V272 = ADD 0x2 V205
0x2e6: V273 = 0x0
0x2ec: V274 = S[V272]
0x2ed: V275 = SUB V274 V270
0x2f3: S[V272] = V275
---
Entry stack: [V10, 0x32e, V196, V198, V200, 0x0, V205, V208]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x32e, V196, V198, V200, 0x0, V205, V208]

================================

Block 0x2f5
[0x2f5:0x300]
---
Predecessors: [0x238, 0x27b]
Successors: [0x32e]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 PUSH1 0x1
0x2f9 SWAP6
0x2fa SWAP5
0x2fb POP
0x2fc POP
0x2fd POP
0x2fe POP
0x2ff POP
0x300 JUMP
---
0x2f5: JUMPDEST 
0x2f7: V276 = 0x1
0x300: JUMP 0x32e
---
Entry stack: [V10, 0x32e, V196, V198, V200, 0x0, V205, V208]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x301
[0x301:0x32d]
---
Predecessors: [0x173]
Successors: []
---
0x301 JUMPDEST
0x302 PUSH1 0x60
0x304 SWAP7
0x305 DUP8
0x306 MSTORE
0x307 PUSH1 0x80
0x309 SWAP6
0x30a SWAP1
0x30b SWAP6
0x30c MSTORE
0x30d PUSH1 0xa0
0x30f SWAP4
0x310 SWAP1
0x311 SWAP4
0x312 MSTORE
0x313 PUSH1 0xc0
0x315 SWAP2
0x316 SWAP1
0x317 SWAP2
0x318 MSTORE
0x319 PUSH1 0xe0
0x31b SWAP1
0x31c DUP2
0x31d MSTORE
0x31e PUSH2 0x100
0x321 SWAP2
0x322 SWAP1
0x323 SWAP2
0x324 MSTORE
0x325 PUSH2 0x120
0x328 SWAP2
0x329 SWAP1
0x32a SWAP2
0x32b MSTORE
0x32c SWAP1
0x32d RETURN
---
0x301: JUMPDEST 
0x302: V277 = 0x60
0x306: M[0x60] = V147
0x307: V278 = 0x80
0x30c: M[0x80] = V148
0x30d: V279 = 0xa0
0x312: M[0xa0] = V126
0x313: V280 = 0xc0
0x318: M[0xc0] = V135
0x319: V281 = 0xe0
0x31d: M[0xe0] = V137
0x31e: V282 = 0x100
0x324: M[0x100] = V129
0x325: V283 = 0x120
0x32b: M[0x120] = V140
0x32d: RETURN 0x60 0xe0
---
Entry stack: [V10, 0x301, V147, V148, V126, V135, V137, V129, V140]
Stack pops: 7
Stack additions: []
Exit stack: [V10, 0x301]

================================

Block 0x32e
[0x32e:0x33f]
---
Predecessors: [0x226, 0x2f5]
Successors: []
---
0x32e JUMPDEST
0x32f PUSH1 0x40
0x331 DUP1
0x332 MLOAD
0x333 SWAP2
0x334 DUP3
0x335 MSTORE
0x336 MLOAD
0x337 SWAP1
0x338 DUP2
0x339 SWAP1
0x33a SUB
0x33b PUSH1 0x20
0x33d ADD
0x33e SWAP1
0x33f RETURN
---
0x32e: JUMPDEST 
0x32f: V284 = 0x40
0x332: V285 = M[0x40]
0x335: M[V285] = 0x1
0x336: V286 = M[0x40]
0x33a: V287 = SUB V285 V286
0x33b: V288 = 0x20
0x33d: V289 = ADD 0x20 V287
0x33f: RETURN V286 V289
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x1974d303
Entry block: 0x6e
Exit block: 0x169
Body: 0x6e, 0x95, 0xfd, 0x169

Function 1:
Public function signature: 0x5646a3e2
Entry block: 0x104
Exit block: 0x169
Body: 0x104, 0x169

Function 2:
Public function signature: 0x5e8ea25a
Entry block: 0x173
Exit block: 0x301
Body: 0x173, 0x301

Function 3:
Public function signature: 0x6d4ce63c
Entry block: 0x1bf
Exit block: 0x169
Body: 0x169, 0x1bf

Function 4:
Public function signature: 0xb7f3f5c6
Entry block: 0x1c6
Exit block: 0x169
Body: 0x169, 0x1c6

Function 5:
Public function signature: 0xc01778d7
Entry block: 0x1cf
Exit block: 0x32e
Body: 0x1cf, 0x1fb, 0x226, 0x32e

Function 6:
Public function signature: 0xe53f8286
Entry block: 0x22f
Exit block: 0x169
Body: 0x169, 0x22f

Function 7:
Public function signature: 0xff31c389
Entry block: 0x238
Exit block: 0x32e
Body: 0x238, 0x27b, 0x2f5, 0x32e

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

