Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x74]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x74
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x74
0xa: JUMPI 0x74 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x76]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xefafd01
0x34 EQ
0x35 PUSH2 0x76
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xefafd01
0x34: V10 = EQ 0xefafd01 V8
0x35: V11 = 0x76
0x38: JUMPI 0x76 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x97]
---
0x39 DUP1
0x3a PUSH4 0x25d8dcf2
0x3f EQ
0x40 PUSH2 0x97
0x43 JUMPI
---
0x3a: V12 = 0x25d8dcf2
0x3f: V13 = EQ 0x25d8dcf2 V8
0x40: V14 = 0x97
0x43: JUMPI 0x97 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xa4]
---
0x44 DUP1
0x45 PUSH4 0x41c0e1b5
0x4a EQ
0x4b PUSH2 0xa4
0x4e JUMPI
---
0x45: V15 = 0x41c0e1b5
0x4a: V16 = EQ 0x41c0e1b5 V8
0x4b: V17 = 0xa4
0x4e: JUMPI 0xa4 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xb1]
---
0x4f DUP1
0x50 PUSH4 0x5acce36b
0x55 EQ
0x56 PUSH2 0xb1
0x59 JUMPI
---
0x50: V18 = 0x5acce36b
0x55: V19 = EQ 0x5acce36b V8
0x56: V20 = 0xb1
0x59: JUMPI 0xb1 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0xd2]
---
0x5a DUP1
0x5b PUSH4 0x94c3fa2e
0x60 EQ
0x61 PUSH2 0xd2
0x64 JUMPI
---
0x5b: V21 = 0x94c3fa2e
0x60: V22 = EQ 0x94c3fa2e V8
0x61: V23 = 0xd2
0x64: JUMPI 0xd2 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0xf3]
---
0x65 DUP1
0x66 PUSH4 0xcee6f93c
0x6b EQ
0x6c PUSH2 0xf3
0x6f JUMPI
---
0x66: V24 = 0xcee6f93c
0x6b: V25 = EQ 0xcee6f93c V8
0x6c: V26 = 0xf3
0x6f: JUMPI 0xf3 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x65]
Successors: [0x74]
---
0x70 PUSH2 0x74
0x73 JUMP
---
0x70: V27 = 0x74
0x73: JUMP 0x74
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x0, 0x70]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0xb]
Successors: [0x7aa]
---
0x76 JUMPDEST
0x77 PUSH2 0x81
0x7a PUSH1 0x4
0x7c POP
0x7d PUSH2 0x7aa
0x80 JUMP
---
0x76: JUMPDEST 
0x77: V28 = 0x81
0x7a: V29 = 0x4
0x7d: V30 = 0x7aa
0x80: JUMP 0x7aa
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x81]
Exit stack: [V8, 0x81]

================================

Block 0x81
[0x81:0x96]
---
Predecessors: [0x7b9]
Successors: []
---
0x81 JUMPDEST
0x82 PUSH1 0x40
0x84 MLOAD
0x85 DUP1
0x86 DUP3
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP2
0x8d POP
0x8e POP
0x8f PUSH1 0x40
0x91 MLOAD
0x92 DUP1
0x93 SWAP2
0x94 SUB
0x95 SWAP1
0x96 RETURN
---
0x81: JUMPDEST 
0x82: V31 = 0x40
0x84: V32 = M[0x40]
0x88: M[V32] = V523
0x89: V33 = 0x20
0x8b: V34 = ADD 0x20 V32
0x8f: V35 = 0x40
0x91: V36 = M[0x40]
0x94: V37 = SUB V34 V36
0x96: RETURN V36 V37
---
Entry stack: [V8, V523]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x39]
Successors: [0x190]
---
0x97 JUMPDEST
0x98 PUSH2 0xa2
0x9b PUSH1 0x4
0x9d POP
0x9e PUSH2 0x190
0xa1 JUMP
---
0x97: JUMPDEST 
0x98: V38 = 0xa2
0x9b: V39 = 0x4
0x9e: V40 = 0x190
0xa1: JUMP 0x190
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xa2]
Exit stack: [V8, 0xa2]

================================

Block 0xa2
[0xa2:0xa3]
---
Predecessors: [0x716]
Successors: []
---
0xa2 JUMPDEST
0xa3 STOP
---
0xa2: JUMPDEST 
0xa3: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x44]
Successors: [0x7bc]
---
0xa4 JUMPDEST
0xa5 PUSH2 0xaf
0xa8 PUSH1 0x4
0xaa POP
0xab PUSH2 0x7bc
0xae JUMP
---
0xa4: JUMPDEST 
0xa5: V41 = 0xaf
0xa8: V42 = 0x4
0xab: V43 = 0x7bc
0xae: JUMP 0x7bc
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V8, 0xaf]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x84e]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xb1
[0xb1:0xbb]
---
Predecessors: [0x4f]
Successors: [0x16c]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xbc
0xb5 PUSH1 0x4
0xb7 POP
0xb8 PUSH2 0x16c
0xbb JUMP
---
0xb1: JUMPDEST 
0xb2: V44 = 0xbc
0xb5: V45 = 0x4
0xb8: V46 = 0x16c
0xbb: JUMP 0x16c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xbc]
Exit stack: [V8, 0xbc]

================================

Block 0xbc
[0xbc:0xd1]
---
Predecessors: [0x18d]
Successors: []
---
0xbc JUMPDEST
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 DUP3
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP2
0xc8 POP
0xc9 POP
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce SWAP2
0xcf SUB
0xd0 SWAP1
0xd1 RETURN
---
0xbc: JUMPDEST 
0xbd: V47 = 0x40
0xbf: V48 = M[0x40]
0xc3: M[V48] = V113
0xc4: V49 = 0x20
0xc6: V50 = ADD 0x20 V48
0xca: V51 = 0x40
0xcc: V52 = M[0x40]
0xcf: V53 = SUB V50 V52
0xd1: RETURN V52 V53
---
Entry stack: [V8, V113]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xd2
[0xd2:0xdc]
---
Predecessors: [0x5a]
Successors: [0x71a]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xdd
0xd6 PUSH1 0x4
0xd8 POP
0xd9 PUSH2 0x71a
0xdc JUMP
---
0xd2: JUMPDEST 
0xd3: V54 = 0xdd
0xd6: V55 = 0x4
0xd9: V56 = 0x71a
0xdc: JUMP 0x71a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V8, 0xdd]

================================

Block 0xdd
[0xdd:0xf2]
---
Predecessors: [0x729]
Successors: []
---
0xdd JUMPDEST
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP3
0xe3 DUP2
0xe4 MSTORE
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP2
0xe9 POP
0xea POP
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef SWAP2
0xf0 SUB
0xf1 SWAP1
0xf2 RETURN
---
0xdd: JUMPDEST 
0xde: V57 = 0x40
0xe0: V58 = M[0x40]
0xe4: M[V58] = V474
0xe5: V59 = 0x20
0xe7: V60 = ADD 0x20 V58
0xeb: V61 = 0x40
0xed: V62 = M[0x40]
0xf0: V63 = SUB V60 V62
0xf2: RETURN V62 V63
---
Entry stack: [V8, V474]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xf3
[0xf3:0xfd]
---
Predecessors: [0x65]
Successors: [0x72c]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfe
0xf7 PUSH1 0x4
0xf9 POP
0xfa PUSH2 0x72c
0xfd JUMP
---
0xf3: JUMPDEST 
0xf4: V64 = 0xfe
0xf7: V65 = 0x4
0xfa: V66 = 0x72c
0xfd: JUMP 0x72c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V8, 0xfe]

================================

Block 0xfe
[0xfe:0x144]
---
Predecessors: [0x7a7]
Successors: [0x145, 0x15e]
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 MLOAD
0x102 DUP1
0x103 DUP1
0x104 PUSH1 0x20
0x106 ADD
0x107 DUP3
0x108 DUP2
0x109 SUB
0x10a DUP3
0x10b MSTORE
0x10c DUP4
0x10d DUP2
0x10e DUP2
0x10f MLOAD
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP2
0x116 POP
0x117 DUP1
0x118 MLOAD
0x119 SWAP1
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e DUP1
0x11f DUP4
0x120 DUP4
0x121 DUP3
0x122 SWAP1
0x123 PUSH1 0x0
0x125 PUSH1 0x4
0x127 PUSH1 0x20
0x129 DUP5
0x12a PUSH1 0x1f
0x12c ADD
0x12d DIV
0x12e PUSH1 0x3
0x130 MUL
0x131 PUSH1 0xf
0x133 ADD
0x134 CALL
0x135 POP
0x136 SWAP1
0x137 POP
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b SWAP1
0x13c PUSH1 0x1f
0x13e AND
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x15e
0x144 JUMPI
---
0xfe: JUMPDEST 
0xff: V67 = 0x40
0x101: V68 = M[0x40]
0x104: V69 = 0x20
0x106: V70 = ADD 0x20 V68
0x109: V71 = SUB V70 V68
0x10b: M[V68] = V71
0x10f: V72 = M[V495]
0x111: M[V70] = V72
0x112: V73 = 0x20
0x114: V74 = ADD 0x20 V70
0x118: V75 = M[V495]
0x11a: V76 = 0x20
0x11c: V77 = ADD 0x20 V495
0x123: V78 = 0x0
0x125: V79 = 0x4
0x127: V80 = 0x20
0x12a: V81 = 0x1f
0x12c: V82 = ADD 0x1f V75
0x12d: V83 = DIV V82 0x20
0x12e: V84 = 0x3
0x130: V85 = MUL 0x3 V83
0x131: V86 = 0xf
0x133: V87 = ADD 0xf V85
0x134: V88 = CALL V87 0x4 0x0 V77 V75 V74 V75
0x13a: V89 = ADD V75 V74
0x13c: V90 = 0x1f
0x13e: V91 = AND 0x1f V75
0x140: V92 = ISZERO V91
0x141: V93 = 0x15e
0x144: JUMPI 0x15e V92
---
Entry stack: [V8, V495]
Stack pops: 1
Stack additions: [S0, V68, V68, V89, V91]
Exit stack: [V8, V495, V68, V68, V89, V91]

================================

Block 0x145
[0x145:0x15d]
---
Predecessors: [0xfe]
Successors: [0x15e]
---
0x145 DUP1
0x146 DUP3
0x147 SUB
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x1
0x14c DUP4
0x14d PUSH1 0x20
0x14f SUB
0x150 PUSH2 0x100
0x153 EXP
0x154 SUB
0x155 NOT
0x156 AND
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c SWAP2
0x15d POP
---
0x147: V94 = SUB V89 V91
0x149: V95 = M[V94]
0x14a: V96 = 0x1
0x14d: V97 = 0x20
0x14f: V98 = SUB 0x20 V91
0x150: V99 = 0x100
0x153: V100 = EXP 0x100 V98
0x154: V101 = SUB V100 0x1
0x155: V102 = NOT V101
0x156: V103 = AND V102 V95
0x158: M[V94] = V103
0x159: V104 = 0x20
0x15b: V105 = ADD 0x20 V94
---
Entry stack: [V8, V495, V68, V68, V89, V91]
Stack pops: 2
Stack additions: [V105, S0]
Exit stack: [V8, V495, V68, V68, V105, V91]

================================

Block 0x15e
[0x15e:0x16b]
---
Predecessors: [0xfe, 0x145]
Successors: []
---
0x15e JUMPDEST
0x15f POP
0x160 SWAP3
0x161 POP
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x15e: JUMPDEST 
0x164: V106 = 0x40
0x166: V107 = M[0x40]
0x169: V108 = SUB S1 V107
0x16b: RETURN V107 V108
---
Entry stack: [V8, V495, V68, V68, S1, V91]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x16c
[0x16c:0x18c]
---
Predecessors: [0xb1]
Successors: [0x18d]
---
0x16c JUMPDEST
0x16d PUSH1 0x0
0x16f ADDRESS
0x170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x185 AND
0x186 BALANCE
0x187 SWAP1
0x188 POP
0x189 PUSH2 0x18d
0x18c JUMP
---
0x16c: JUMPDEST 
0x16d: V109 = 0x0
0x16f: V110 = ADDRESS
0x170: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x185: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x186: V113 = BALANCE V112
0x189: V114 = 0x18d
0x18c: JUMP 0x18d
---
Entry stack: [V8, 0xbc]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V8, 0xbc, V113]

================================

Block 0x18d
[0x18d:0x18f]
---
Predecessors: [0x16c]
Successors: [0xbc]
---
0x18d JUMPDEST
0x18e SWAP1
0x18f JUMP
---
0x18d: JUMPDEST 
0x18f: JUMP 0xbc
---
Entry stack: [V8, 0xbc, V113]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V113]

================================

Block 0x190
[0x190:0x1b7]
---
Predecessors: [0x97]
Successors: [0x1b8, 0x2b5]
---
0x190 JUMPDEST
0x191 PUSH1 0x0
0x193 PUSH1 0x0
0x195 PUSH1 0x0
0x197 PUSH1 0x4
0x199 PUSH1 0x0
0x19b POP
0x19c DUP2
0x19d SWAP1
0x19e SSTORE
0x19f POP
0x1a0 PUSH16 0xffffffffffffffffffffffffffffffff
0x1b1 CALLVALUE
0x1b2 GT
0x1b3 ISZERO
0x1b4 PUSH2 0x2b5
0x1b7 JUMPI
---
0x190: JUMPDEST 
0x191: V115 = 0x0
0x193: V116 = 0x0
0x195: V117 = 0x0
0x197: V118 = 0x4
0x199: V119 = 0x0
0x19e: S[0x4] = 0x0
0x1a0: V120 = 0xffffffffffffffffffffffffffffffff
0x1b1: V121 = CALLVALUE
0x1b2: V122 = GT V121 0xffffffffffffffffffffffffffffffff
0x1b3: V123 = ISZERO V122
0x1b4: V124 = 0x2b5
0x1b7: JUMPI 0x2b5 V123
---
Entry stack: [V8, 0xa2]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x1b8
[0x1b8:0x21e]
---
Predecessors: [0x190]
Successors: [0x21f, 0x241]
---
0x1b8 PUSH1 0x40
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd SWAP1
0x1be DUP2
0x1bf ADD
0x1c0 PUSH1 0x40
0x1c2 MSTORE
0x1c3 DUP1
0x1c4 PUSH1 0xf
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb PUSH32 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 POP
0x1f2 PUSH1 0x3
0x1f4 PUSH1 0x0
0x1f6 POP
0x1f7 SWAP1
0x1f8 DUP1
0x1f9 MLOAD
0x1fa SWAP1
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe SWAP1
0x1ff DUP3
0x200 DUP1
0x201 SLOAD
0x202 DUP3
0x203 DUP3
0x204 SSTORE
0x205 SWAP1
0x206 PUSH1 0x0
0x208 MSTORE
0x209 PUSH1 0x20
0x20b PUSH1 0x0
0x20d SHA3
0x20e SWAP1
0x20f PUSH1 0x1f
0x211 ADD
0x212 PUSH1 0x20
0x214 SWAP1
0x215 DIV
0x216 DUP2
0x217 ADD
0x218 SWAP3
0x219 DUP3
0x21a ISZERO
0x21b PUSH2 0x241
0x21e JUMPI
---
0x1b8: V125 = 0x40
0x1ba: V126 = 0x40
0x1bc: V127 = M[0x40]
0x1bf: V128 = ADD V127 0x40
0x1c0: V129 = 0x40
0x1c2: M[0x40] = V128
0x1c4: V130 = 0xf
0x1c7: M[V127] = 0xf
0x1c8: V131 = 0x20
0x1ca: V132 = ADD 0x20 V127
0x1cb: V133 = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x1ed: M[V132] = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x1ee: V134 = 0x20
0x1f0: V135 = ADD 0x20 V132
0x1f2: V136 = 0x3
0x1f4: V137 = 0x0
0x1f9: V138 = M[V127]
0x1fb: V139 = 0x20
0x1fd: V140 = ADD 0x20 V127
0x201: V141 = S[0x3]
0x204: S[0x3] = V138
0x206: V142 = 0x0
0x208: M[0x0] = 0x3
0x209: V143 = 0x20
0x20b: V144 = 0x0
0x20d: V145 = SHA3 0x0 0x20
0x20f: V146 = 0x1f
0x211: V147 = ADD 0x1f V141
0x212: V148 = 0x20
0x215: V149 = DIV V147 0x20
0x217: V150 = ADD V145 V149
0x21a: V151 = ISZERO V138
0x21b: V152 = 0x241
0x21e: JUMPI 0x241 V151
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V150, V138, V145, V140]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, V138, V145, V140]

================================

Block 0x21f
[0x21f:0x221]
---
Predecessors: [0x1b8]
Successors: [0x222]
---
0x21f SWAP2
0x220 DUP3
0x221 ADD
---
0x221: V153 = ADD V140 V138
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, V138, V145, V140]
Stack pops: 3
Stack additions: [S0, S1, V153]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, V140, V145, V153]

================================

Block 0x222
[0x222:0x22a]
---
Predecessors: [0x21f, 0x22b]
Successors: [0x22b, 0x240]
---
0x222 JUMPDEST
0x223 DUP3
0x224 DUP2
0x225 GT
0x226 ISZERO
0x227 PUSH2 0x240
0x22a JUMPI
---
0x222: JUMPDEST 
0x225: V154 = GT V153 S2
0x226: V155 = ISZERO V154
0x227: V156 = 0x240
0x22a: JUMPI 0x240 V155
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, S2, S1, V153]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, S2, S1, V153]

================================

Block 0x22b
[0x22b:0x23f]
---
Predecessors: [0x222]
Successors: [0x222]
---
0x22b DUP3
0x22c MLOAD
0x22d DUP3
0x22e PUSH1 0x0
0x230 POP
0x231 SSTORE
0x232 SWAP2
0x233 PUSH1 0x20
0x235 ADD
0x236 SWAP2
0x237 SWAP1
0x238 PUSH1 0x1
0x23a ADD
0x23b SWAP1
0x23c PUSH2 0x222
0x23f JUMP
---
0x22c: V157 = M[S2]
0x22e: V158 = 0x0
0x231: S[S1] = V157
0x233: V159 = 0x20
0x235: V160 = ADD 0x20 S2
0x238: V161 = 0x1
0x23a: V162 = ADD 0x1 S1
0x23c: V163 = 0x222
0x23f: JUMP 0x222
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, S2, S1, V153]
Stack pops: 3
Stack additions: [V160, V162, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, V160, V162, V153]

================================

Block 0x240
[0x240:0x240]
---
Predecessors: [0x222]
Successors: [0x241]
---
0x240 JUMPDEST
---
0x240: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, S2, S1, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, S2, S1, V153]

================================

Block 0x241
[0x241:0x24d]
---
Predecessors: [0x1b8, 0x240]
Successors: [0x24e]
---
0x241 JUMPDEST
0x242 POP
0x243 SWAP1
0x244 POP
0x245 PUSH2 0x26c
0x248 SWAP2
0x249 SWAP1
0x24a PUSH2 0x24e
0x24d JUMP
---
0x241: JUMPDEST 
0x245: V164 = 0x26c
0x24a: V165 = 0x24e
0x24d: JUMP 0x24e
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150, S2, S1, S0]
Stack pops: 4
Stack additions: [0x26c, S3, S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x26c, V150, S1]

================================

Block 0x24e
[0x24e:0x256]
---
Predecessors: [0x241, 0x257]
Successors: [0x257, 0x268]
---
0x24e JUMPDEST
0x24f DUP1
0x250 DUP3
0x251 GT
0x252 ISZERO
0x253 PUSH2 0x268
0x256 JUMPI
---
0x24e: JUMPDEST 
0x251: V166 = GT V150 S0
0x252: V167 = ISZERO V166
0x253: V168 = 0x268
0x256: JUMPI 0x268 V167
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x26c, V150, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x26c, V150, S0]

================================

Block 0x257
[0x257:0x267]
---
Predecessors: [0x24e]
Successors: [0x24e]
---
0x257 PUSH1 0x0
0x259 DUP2
0x25a DUP2
0x25b POP
0x25c PUSH1 0x0
0x25e SWAP1
0x25f SSTORE
0x260 POP
0x261 PUSH1 0x1
0x263 ADD
0x264 PUSH2 0x24e
0x267 JUMP
---
0x257: V169 = 0x0
0x25c: V170 = 0x0
0x25f: S[S0] = 0x0
0x261: V171 = 0x1
0x263: V172 = ADD 0x1 S0
0x264: V173 = 0x24e
0x267: JUMP 0x24e
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x26c, V150, S0]
Stack pops: 1
Stack additions: [V172]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x26c, V150, V172]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x24e]
Successors: [0x26c]
---
0x268 JUMPDEST
0x269 POP
0x26a SWAP1
0x26b JUMP
---
0x268: JUMPDEST 
0x26b: JUMP 0x26c
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x26c, V150, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150]

================================

Block 0x26c
[0x26c:0x2b0]
---
Predecessors: [0x268]
Successors: [0x716]
---
0x26c JUMPDEST
0x26d POP
0x26e POP
0x26f PUSH1 0x0
0x271 PUSH1 0x2
0x273 PUSH1 0x0
0x275 POP
0x276 DUP2
0x277 SWAP1
0x278 SSTORE
0x279 POP
0x27a CALLER
0x27b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x290 AND
0x291 PUSH1 0x0
0x293 CALLVALUE
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 SWAP1
0x299 POP
0x29a PUSH1 0x0
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 DUP4
0x2a1 SUB
0x2a2 DUP2
0x2a3 DUP6
0x2a4 DUP9
0x2a5 DUP9
0x2a6 CALL
0x2a7 SWAP4
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH2 0x716
0x2b0 JUMP
---
0x26c: JUMPDEST 
0x26f: V174 = 0x0
0x271: V175 = 0x2
0x273: V176 = 0x0
0x278: S[0x2] = 0x0
0x27a: V177 = CALLER
0x27b: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x290: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x291: V180 = 0x0
0x293: V181 = CALLVALUE
0x294: V182 = 0x40
0x296: V183 = M[0x40]
0x29a: V184 = 0x0
0x29c: V185 = 0x40
0x29e: V186 = M[0x40]
0x2a1: V187 = SUB V183 V186
0x2a6: V188 = CALL 0x0 V179 V181 V186 V187 V186 0x0
0x2ad: V189 = 0x716
0x2b0: JUMP 0x716
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V150]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: []
Successors: [0x4cd]
---
0x2b1 PUSH2 0x4cd
0x2b4 JUMP
---
0x2b1: V190 = 0x4cd
0x2b4: JUMP 0x4cd
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b5
[0x2b5:0x2d7]
---
Predecessors: [0x190]
Successors: [0x2d8, 0x3fb]
---
0x2b5 JUMPDEST
0x2b6 ADDRESS
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc AND
0x2cd BALANCE
0x2ce PUSH1 0x2
0x2d0 CALLVALUE
0x2d1 MUL
0x2d2 GT
0x2d3 ISZERO
0x2d4 PUSH2 0x3fb
0x2d7 JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V191 = ADDRESS
0x2b7: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x2cd: V194 = BALANCE V193
0x2ce: V195 = 0x2
0x2d0: V196 = CALLVALUE
0x2d1: V197 = MUL V196 0x2
0x2d2: V198 = GT V197 V194
0x2d3: V199 = ISZERO V198
0x2d4: V200 = 0x3fb
0x2d7: JUMPI 0x3fb V199
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x2d8
[0x2d8:0x364]
---
Predecessors: [0x2b5]
Successors: [0x365, 0x387]
---
0x2d8 PUSH1 0x60
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd SWAP1
0x2de DUP2
0x2df ADD
0x2e0 PUSH1 0x40
0x2e2 MSTORE
0x2e3 DUP1
0x2e4 PUSH1 0x2b
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb PUSH32 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 PUSH32 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x332 DUP2
0x333 MSTORE
0x334 PUSH1 0x20
0x336 ADD
0x337 POP
0x338 PUSH1 0x3
0x33a PUSH1 0x0
0x33c POP
0x33d SWAP1
0x33e DUP1
0x33f MLOAD
0x340 SWAP1
0x341 PUSH1 0x20
0x343 ADD
0x344 SWAP1
0x345 DUP3
0x346 DUP1
0x347 SLOAD
0x348 DUP3
0x349 DUP3
0x34a SSTORE
0x34b SWAP1
0x34c PUSH1 0x0
0x34e MSTORE
0x34f PUSH1 0x20
0x351 PUSH1 0x0
0x353 SHA3
0x354 SWAP1
0x355 PUSH1 0x1f
0x357 ADD
0x358 PUSH1 0x20
0x35a SWAP1
0x35b DIV
0x35c DUP2
0x35d ADD
0x35e SWAP3
0x35f DUP3
0x360 ISZERO
0x361 PUSH2 0x387
0x364 JUMPI
---
0x2d8: V201 = 0x60
0x2da: V202 = 0x40
0x2dc: V203 = M[0x40]
0x2df: V204 = ADD V203 0x60
0x2e0: V205 = 0x40
0x2e2: M[0x40] = V204
0x2e4: V206 = 0x2b
0x2e7: M[V203] = 0x2b
0x2e8: V207 = 0x20
0x2ea: V208 = ADD 0x20 V203
0x2eb: V209 = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x30d: M[V208] = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x30e: V210 = 0x20
0x310: V211 = ADD 0x20 V208
0x311: V212 = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x333: M[V211] = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x334: V213 = 0x20
0x336: V214 = ADD 0x20 V211
0x338: V215 = 0x3
0x33a: V216 = 0x0
0x33f: V217 = M[V203]
0x341: V218 = 0x20
0x343: V219 = ADD 0x20 V203
0x347: V220 = S[0x3]
0x34a: S[0x3] = V217
0x34c: V221 = 0x0
0x34e: M[0x0] = 0x3
0x34f: V222 = 0x20
0x351: V223 = 0x0
0x353: V224 = SHA3 0x0 0x20
0x355: V225 = 0x1f
0x357: V226 = ADD 0x1f V220
0x358: V227 = 0x20
0x35b: V228 = DIV V226 0x20
0x35d: V229 = ADD V224 V228
0x360: V230 = ISZERO V217
0x361: V231 = 0x387
0x364: JUMPI 0x387 V230
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V229, V217, V224, V219]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, V217, V224, V219]

================================

Block 0x365
[0x365:0x367]
---
Predecessors: [0x2d8]
Successors: [0x368]
---
0x365 SWAP2
0x366 DUP3
0x367 ADD
---
0x367: V232 = ADD V219 V217
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, V217, V224, V219]
Stack pops: 3
Stack additions: [S0, S1, V232]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, V219, V224, V232]

================================

Block 0x368
[0x368:0x370]
---
Predecessors: [0x365, 0x371]
Successors: [0x371, 0x386]
---
0x368 JUMPDEST
0x369 DUP3
0x36a DUP2
0x36b GT
0x36c ISZERO
0x36d PUSH2 0x386
0x370 JUMPI
---
0x368: JUMPDEST 
0x36b: V233 = GT V232 S2
0x36c: V234 = ISZERO V233
0x36d: V235 = 0x386
0x370: JUMPI 0x386 V234
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, S2, S1, V232]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, S2, S1, V232]

================================

Block 0x371
[0x371:0x385]
---
Predecessors: [0x368]
Successors: [0x368]
---
0x371 DUP3
0x372 MLOAD
0x373 DUP3
0x374 PUSH1 0x0
0x376 POP
0x377 SSTORE
0x378 SWAP2
0x379 PUSH1 0x20
0x37b ADD
0x37c SWAP2
0x37d SWAP1
0x37e PUSH1 0x1
0x380 ADD
0x381 SWAP1
0x382 PUSH2 0x368
0x385 JUMP
---
0x372: V236 = M[S2]
0x374: V237 = 0x0
0x377: S[S1] = V236
0x379: V238 = 0x20
0x37b: V239 = ADD 0x20 S2
0x37e: V240 = 0x1
0x380: V241 = ADD 0x1 S1
0x382: V242 = 0x368
0x385: JUMP 0x368
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, S2, S1, V232]
Stack pops: 3
Stack additions: [V239, V241, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, V239, V241, V232]

================================

Block 0x386
[0x386:0x386]
---
Predecessors: [0x368]
Successors: [0x387]
---
0x386 JUMPDEST
---
0x386: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, S2, S1, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, S2, S1, V232]

================================

Block 0x387
[0x387:0x393]
---
Predecessors: [0x2d8, 0x386]
Successors: [0x394]
---
0x387 JUMPDEST
0x388 POP
0x389 SWAP1
0x38a POP
0x38b PUSH2 0x3b2
0x38e SWAP2
0x38f SWAP1
0x390 PUSH2 0x394
0x393 JUMP
---
0x387: JUMPDEST 
0x38b: V243 = 0x3b2
0x390: V244 = 0x394
0x393: JUMP 0x394
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3b2, S3, S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3b2, V229, S1]

================================

Block 0x394
[0x394:0x39c]
---
Predecessors: [0x387, 0x39d]
Successors: [0x39d, 0x3ae]
---
0x394 JUMPDEST
0x395 DUP1
0x396 DUP3
0x397 GT
0x398 ISZERO
0x399 PUSH2 0x3ae
0x39c JUMPI
---
0x394: JUMPDEST 
0x397: V245 = GT V229 S0
0x398: V246 = ISZERO V245
0x399: V247 = 0x3ae
0x39c: JUMPI 0x3ae V246
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3b2, V229, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3b2, V229, S0]

================================

Block 0x39d
[0x39d:0x3ad]
---
Predecessors: [0x394]
Successors: [0x394]
---
0x39d PUSH1 0x0
0x39f DUP2
0x3a0 DUP2
0x3a1 POP
0x3a2 PUSH1 0x0
0x3a4 SWAP1
0x3a5 SSTORE
0x3a6 POP
0x3a7 PUSH1 0x1
0x3a9 ADD
0x3aa PUSH2 0x394
0x3ad JUMP
---
0x39d: V248 = 0x0
0x3a2: V249 = 0x0
0x3a5: S[S0] = 0x0
0x3a7: V250 = 0x1
0x3a9: V251 = ADD 0x1 S0
0x3aa: V252 = 0x394
0x3ad: JUMP 0x394
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3b2, V229, S0]
Stack pops: 1
Stack additions: [V251]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3b2, V229, V251]

================================

Block 0x3ae
[0x3ae:0x3b1]
---
Predecessors: [0x394]
Successors: [0x3b2]
---
0x3ae JUMPDEST
0x3af POP
0x3b0 SWAP1
0x3b1 JUMP
---
0x3ae: JUMPDEST 
0x3b1: JUMP 0x3b2
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3b2, V229, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229]

================================

Block 0x3b2
[0x3b2:0x3f6]
---
Predecessors: [0x3ae]
Successors: [0x716]
---
0x3b2 JUMPDEST
0x3b3 POP
0x3b4 POP
0x3b5 PUSH1 0x0
0x3b7 PUSH1 0x2
0x3b9 PUSH1 0x0
0x3bb POP
0x3bc DUP2
0x3bd SWAP1
0x3be SSTORE
0x3bf POP
0x3c0 CALLER
0x3c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d6 AND
0x3d7 PUSH1 0x0
0x3d9 CALLVALUE
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de SWAP1
0x3df POP
0x3e0 PUSH1 0x0
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 DUP4
0x3e7 SUB
0x3e8 DUP2
0x3e9 DUP6
0x3ea DUP9
0x3eb DUP9
0x3ec CALL
0x3ed SWAP4
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 PUSH2 0x716
0x3f6 JUMP
---
0x3b2: JUMPDEST 
0x3b5: V253 = 0x0
0x3b7: V254 = 0x2
0x3b9: V255 = 0x0
0x3be: S[0x2] = 0x0
0x3c0: V256 = CALLER
0x3c1: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x3d7: V259 = 0x0
0x3d9: V260 = CALLVALUE
0x3da: V261 = 0x40
0x3dc: V262 = M[0x40]
0x3e0: V263 = 0x0
0x3e2: V264 = 0x40
0x3e4: V265 = M[0x40]
0x3e7: V266 = SUB V262 V265
0x3ec: V267 = CALL 0x0 V258 V260 V265 V266 V265 0x0
0x3f3: V268 = 0x716
0x3f6: JUMP 0x716
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V229]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x3f7
[0x3f7:0x3fa]
---
Predecessors: []
Successors: [0x4cc]
---
0x3f7 PUSH2 0x4cc
0x3fa JUMP
---
0x3f7: V269 = 0x4cc
0x3fa: JUMP 0x4cc
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fb
[0x3fb:0x404]
---
Predecessors: [0x2b5]
Successors: [0x405, 0x4cb]
---
0x3fb JUMPDEST
0x3fc PUSH1 0x0
0x3fe CALLVALUE
0x3ff EQ
0x400 ISZERO
0x401 PUSH2 0x4cb
0x404 JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V270 = 0x0
0x3fe: V271 = CALLVALUE
0x3ff: V272 = EQ V271 0x0
0x400: V273 = ISZERO V272
0x401: V274 = 0x4cb
0x404: JUMPI 0x4cb V273
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x405
[0x405:0x46b]
---
Predecessors: [0x3fb]
Successors: [0x46c, 0x48e]
---
0x405 PUSH1 0x40
0x407 PUSH1 0x40
0x409 MLOAD
0x40a SWAP1
0x40b DUP2
0x40c ADD
0x40d PUSH1 0x40
0x40f MSTORE
0x410 DUP1
0x411 PUSH1 0xe
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x20
0x417 ADD
0x418 PUSH32 0x776167657220776173207a65726f000000000000000000000000000000000000
0x439 DUP2
0x43a MSTORE
0x43b PUSH1 0x20
0x43d ADD
0x43e POP
0x43f PUSH1 0x3
0x441 PUSH1 0x0
0x443 POP
0x444 SWAP1
0x445 DUP1
0x446 MLOAD
0x447 SWAP1
0x448 PUSH1 0x20
0x44a ADD
0x44b SWAP1
0x44c DUP3
0x44d DUP1
0x44e SLOAD
0x44f DUP3
0x450 DUP3
0x451 SSTORE
0x452 SWAP1
0x453 PUSH1 0x0
0x455 MSTORE
0x456 PUSH1 0x20
0x458 PUSH1 0x0
0x45a SHA3
0x45b SWAP1
0x45c PUSH1 0x1f
0x45e ADD
0x45f PUSH1 0x20
0x461 SWAP1
0x462 DIV
0x463 DUP2
0x464 ADD
0x465 SWAP3
0x466 DUP3
0x467 ISZERO
0x468 PUSH2 0x48e
0x46b JUMPI
---
0x405: V275 = 0x40
0x407: V276 = 0x40
0x409: V277 = M[0x40]
0x40c: V278 = ADD V277 0x40
0x40d: V279 = 0x40
0x40f: M[0x40] = V278
0x411: V280 = 0xe
0x414: M[V277] = 0xe
0x415: V281 = 0x20
0x417: V282 = ADD 0x20 V277
0x418: V283 = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x43a: M[V282] = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x43b: V284 = 0x20
0x43d: V285 = ADD 0x20 V282
0x43f: V286 = 0x3
0x441: V287 = 0x0
0x446: V288 = M[V277]
0x448: V289 = 0x20
0x44a: V290 = ADD 0x20 V277
0x44e: V291 = S[0x3]
0x451: S[0x3] = V288
0x453: V292 = 0x0
0x455: M[0x0] = 0x3
0x456: V293 = 0x20
0x458: V294 = 0x0
0x45a: V295 = SHA3 0x0 0x20
0x45c: V296 = 0x1f
0x45e: V297 = ADD 0x1f V291
0x45f: V298 = 0x20
0x462: V299 = DIV V297 0x20
0x464: V300 = ADD V295 V299
0x467: V301 = ISZERO V288
0x468: V302 = 0x48e
0x46b: JUMPI 0x48e V301
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V300, V288, V295, V290]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, V288, V295, V290]

================================

Block 0x46c
[0x46c:0x46e]
---
Predecessors: [0x405]
Successors: [0x46f]
---
0x46c SWAP2
0x46d DUP3
0x46e ADD
---
0x46e: V303 = ADD V290 V288
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, V288, V295, V290]
Stack pops: 3
Stack additions: [S0, S1, V303]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, V290, V295, V303]

================================

Block 0x46f
[0x46f:0x477]
---
Predecessors: [0x46c, 0x478]
Successors: [0x478, 0x48d]
---
0x46f JUMPDEST
0x470 DUP3
0x471 DUP2
0x472 GT
0x473 ISZERO
0x474 PUSH2 0x48d
0x477 JUMPI
---
0x46f: JUMPDEST 
0x472: V304 = GT V303 S2
0x473: V305 = ISZERO V304
0x474: V306 = 0x48d
0x477: JUMPI 0x48d V305
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, S2, S1, V303]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, S2, S1, V303]

================================

Block 0x478
[0x478:0x48c]
---
Predecessors: [0x46f]
Successors: [0x46f]
---
0x478 DUP3
0x479 MLOAD
0x47a DUP3
0x47b PUSH1 0x0
0x47d POP
0x47e SSTORE
0x47f SWAP2
0x480 PUSH1 0x20
0x482 ADD
0x483 SWAP2
0x484 SWAP1
0x485 PUSH1 0x1
0x487 ADD
0x488 SWAP1
0x489 PUSH2 0x46f
0x48c JUMP
---
0x479: V307 = M[S2]
0x47b: V308 = 0x0
0x47e: S[S1] = V307
0x480: V309 = 0x20
0x482: V310 = ADD 0x20 S2
0x485: V311 = 0x1
0x487: V312 = ADD 0x1 S1
0x489: V313 = 0x46f
0x48c: JUMP 0x46f
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, S2, S1, V303]
Stack pops: 3
Stack additions: [V310, V312, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, V310, V312, V303]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x46f]
Successors: [0x48e]
---
0x48d JUMPDEST
---
0x48d: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, S2, S1, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, S2, S1, V303]

================================

Block 0x48e
[0x48e:0x49a]
---
Predecessors: [0x405, 0x48d]
Successors: [0x49b]
---
0x48e JUMPDEST
0x48f POP
0x490 SWAP1
0x491 POP
0x492 PUSH2 0x4b9
0x495 SWAP2
0x496 SWAP1
0x497 PUSH2 0x49b
0x49a JUMP
---
0x48e: JUMPDEST 
0x492: V314 = 0x4b9
0x497: V315 = 0x49b
0x49a: JUMP 0x49b
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4b9, S3, S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x4b9, V300, S1]

================================

Block 0x49b
[0x49b:0x4a3]
---
Predecessors: [0x48e, 0x4a4]
Successors: [0x4a4, 0x4b5]
---
0x49b JUMPDEST
0x49c DUP1
0x49d DUP3
0x49e GT
0x49f ISZERO
0x4a0 PUSH2 0x4b5
0x4a3 JUMPI
---
0x49b: JUMPDEST 
0x49e: V316 = GT V300 S0
0x49f: V317 = ISZERO V316
0x4a0: V318 = 0x4b5
0x4a3: JUMPI 0x4b5 V317
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x4b9, V300, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x4b9, V300, S0]

================================

Block 0x4a4
[0x4a4:0x4b4]
---
Predecessors: [0x49b]
Successors: [0x49b]
---
0x4a4 PUSH1 0x0
0x4a6 DUP2
0x4a7 DUP2
0x4a8 POP
0x4a9 PUSH1 0x0
0x4ab SWAP1
0x4ac SSTORE
0x4ad POP
0x4ae PUSH1 0x1
0x4b0 ADD
0x4b1 PUSH2 0x49b
0x4b4 JUMP
---
0x4a4: V319 = 0x0
0x4a9: V320 = 0x0
0x4ac: S[S0] = 0x0
0x4ae: V321 = 0x1
0x4b0: V322 = ADD 0x1 S0
0x4b1: V323 = 0x49b
0x4b4: JUMP 0x49b
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x4b9, V300, S0]
Stack pops: 1
Stack additions: [V322]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x4b9, V300, V322]

================================

Block 0x4b5
[0x4b5:0x4b8]
---
Predecessors: [0x49b]
Successors: [0x4b9]
---
0x4b5 JUMPDEST
0x4b6 POP
0x4b7 SWAP1
0x4b8 JUMP
---
0x4b5: JUMPDEST 
0x4b8: JUMP 0x4b9
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x4b9, V300, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300]

================================

Block 0x4b9
[0x4b9:0x4ca]
---
Predecessors: [0x4b5]
Successors: [0x716]
---
0x4b9 JUMPDEST
0x4ba POP
0x4bb POP
0x4bc PUSH1 0x0
0x4be PUSH1 0x2
0x4c0 PUSH1 0x0
0x4c2 POP
0x4c3 DUP2
0x4c4 SWAP1
0x4c5 SSTORE
0x4c6 POP
0x4c7 PUSH2 0x716
0x4ca JUMP
---
0x4b9: JUMPDEST 
0x4bc: V324 = 0x0
0x4be: V325 = 0x2
0x4c0: V326 = 0x0
0x4c5: S[0x2] = 0x0
0x4c7: V327 = 0x716
0x4ca: JUMP 0x716
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V300]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x4cb
[0x4cb:0x4cb]
---
Predecessors: [0x3fb]
Successors: [0x4cc]
---
0x4cb JUMPDEST
---
0x4cb: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x4cc
[0x4cc:0x4cc]
---
Predecessors: [0x3f7, 0x4cb]
Successors: [0x4cd]
---
0x4cc JUMPDEST
---
0x4cc: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x4cd
[0x4cd:0x4ec]
---
Predecessors: [0x2b1, 0x4cc]
Successors: [0x850]
---
0x4cd JUMPDEST
0x4ce CALLVALUE
0x4cf SWAP2
0x4d0 POP
0x4d1 NUMBER
0x4d2 BLOCKHASH
0x4d3 PUSH1 0x1
0x4d5 SWAP1
0x4d6 DIV
0x4d7 PUSH1 0x4
0x4d9 PUSH1 0x0
0x4db POP
0x4dc DUP2
0x4dd SWAP1
0x4de SSTORE
0x4df POP
0x4e0 PUSH2 0x4ed
0x4e3 PUSH1 0x4
0x4e5 PUSH1 0x0
0x4e7 POP
0x4e8 SLOAD
0x4e9 PUSH2 0x850
0x4ec JUMP
---
0x4cd: JUMPDEST 
0x4ce: V328 = CALLVALUE
0x4d1: V329 = NUMBER
0x4d2: V330 = BLOCKHASH V329
0x4d3: V331 = 0x1
0x4d6: V332 = DIV V330 0x1
0x4d7: V333 = 0x4
0x4d9: V334 = 0x0
0x4de: S[0x4] = V332
0x4e0: V335 = 0x4ed
0x4e3: V336 = 0x4
0x4e5: V337 = 0x0
0x4e8: V338 = S[0x4]
0x4e9: V339 = 0x850
0x4ec: JUMP 0x850
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V328, S0, 0x4ed, V338]
Exit stack: [V8, 0xa2, V328, 0x0, 0x4ed, V338]

================================

Block 0x4ed
[0x4ed:0x4fb]
---
Predecessors: [0x873]
Successors: [0x4fc, 0x5f9]
---
0x4ed JUMPDEST
0x4ee SWAP1
0x4ef POP
0x4f0 PUSH1 0x0
0x4f2 PUSH1 0x2
0x4f4 DUP3
0x4f5 MOD
0x4f6 EQ
0x4f7 ISZERO
0x4f8 PUSH2 0x5f9
0x4fb JUMPI
---
0x4ed: JUMPDEST 
0x4f0: V340 = 0x0
0x4f2: V341 = 0x2
0x4f5: V342 = MOD V561 0x2
0x4f6: V343 = EQ V342 0x0
0x4f7: V344 = ISZERO V343
0x4f8: V345 = 0x5f9
0x4fb: JUMPI 0x5f9 V344
---
Entry stack: [V8, 0xa2, V328, 0x0, V561]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, 0xa2, V328, V561]

================================

Block 0x4fc
[0x4fc:0x5a0]
---
Predecessors: [0x4ed]
Successors: [0x5a1, 0x5c3]
---
0x4fc PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x51d DUP3
0x51e PUSH16 0xffffffffffffffffffffffffffffffff
0x52f AND
0x530 MUL
0x531 PUSH1 0x2
0x533 PUSH1 0x0
0x535 POP
0x536 DUP2
0x537 SWAP1
0x538 SSTORE
0x539 POP
0x53a PUSH1 0x40
0x53c PUSH1 0x40
0x53e MLOAD
0x53f SWAP1
0x540 DUP2
0x541 ADD
0x542 PUSH1 0x40
0x544 MSTORE
0x545 DUP1
0x546 PUSH1 0x4
0x548 DUP2
0x549 MSTORE
0x54a PUSH1 0x20
0x54c ADD
0x54d PUSH32 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x56e DUP2
0x56f MSTORE
0x570 PUSH1 0x20
0x572 ADD
0x573 POP
0x574 PUSH1 0x3
0x576 PUSH1 0x0
0x578 POP
0x579 SWAP1
0x57a DUP1
0x57b MLOAD
0x57c SWAP1
0x57d PUSH1 0x20
0x57f ADD
0x580 SWAP1
0x581 DUP3
0x582 DUP1
0x583 SLOAD
0x584 DUP3
0x585 DUP3
0x586 SSTORE
0x587 SWAP1
0x588 PUSH1 0x0
0x58a MSTORE
0x58b PUSH1 0x20
0x58d PUSH1 0x0
0x58f SHA3
0x590 SWAP1
0x591 PUSH1 0x1f
0x593 ADD
0x594 PUSH1 0x20
0x596 SWAP1
0x597 DIV
0x598 DUP2
0x599 ADD
0x59a SWAP3
0x59b DUP3
0x59c ISZERO
0x59d PUSH2 0x5c3
0x5a0 JUMPI
---
0x4fc: V346 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x51e: V347 = 0xffffffffffffffffffffffffffffffff
0x52f: V348 = AND 0xffffffffffffffffffffffffffffffff V328
0x530: V349 = MUL V348 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x531: V350 = 0x2
0x533: V351 = 0x0
0x538: S[0x2] = V349
0x53a: V352 = 0x40
0x53c: V353 = 0x40
0x53e: V354 = M[0x40]
0x541: V355 = ADD V354 0x40
0x542: V356 = 0x40
0x544: M[0x40] = V355
0x546: V357 = 0x4
0x549: M[V354] = 0x4
0x54a: V358 = 0x20
0x54c: V359 = ADD 0x20 V354
0x54d: V360 = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x56f: M[V359] = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x570: V361 = 0x20
0x572: V362 = ADD 0x20 V359
0x574: V363 = 0x3
0x576: V364 = 0x0
0x57b: V365 = M[V354]
0x57d: V366 = 0x20
0x57f: V367 = ADD 0x20 V354
0x583: V368 = S[0x3]
0x586: S[0x3] = V365
0x588: V369 = 0x0
0x58a: M[0x0] = 0x3
0x58b: V370 = 0x20
0x58d: V371 = 0x0
0x58f: V372 = SHA3 0x0 0x20
0x591: V373 = 0x1f
0x593: V374 = ADD 0x1f V368
0x594: V375 = 0x20
0x597: V376 = DIV V374 0x20
0x599: V377 = ADD V372 V376
0x59c: V378 = ISZERO V365
0x59d: V379 = 0x5c3
0x5a0: JUMPI 0x5c3 V378
---
Entry stack: [V8, 0xa2, V328, V561]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V377, V365, V372, V367]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V377, V365, V372, V367]

================================

Block 0x5a1
[0x5a1:0x5a3]
---
Predecessors: [0x4fc]
Successors: [0x5a4]
---
0x5a1 SWAP2
0x5a2 DUP3
0x5a3 ADD
---
0x5a3: V380 = ADD V367 V365
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V377, V365, V372, V367]
Stack pops: 3
Stack additions: [S0, S1, V380]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V377, V367, V372, V380]

================================

Block 0x5a4
[0x5a4:0x5ac]
---
Predecessors: [0x5a1, 0x5ad]
Successors: [0x5ad, 0x5c2]
---
0x5a4 JUMPDEST
0x5a5 DUP3
0x5a6 DUP2
0x5a7 GT
0x5a8 ISZERO
0x5a9 PUSH2 0x5c2
0x5ac JUMPI
---
0x5a4: JUMPDEST 
0x5a7: V381 = GT V380 S2
0x5a8: V382 = ISZERO V381
0x5a9: V383 = 0x5c2
0x5ac: JUMPI 0x5c2 V382
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V377, S2, S1, V380]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V377, S2, S1, V380]

================================

Block 0x5ad
[0x5ad:0x5c1]
---
Predecessors: [0x5a4]
Successors: [0x5a4]
---
0x5ad DUP3
0x5ae MLOAD
0x5af DUP3
0x5b0 PUSH1 0x0
0x5b2 POP
0x5b3 SSTORE
0x5b4 SWAP2
0x5b5 PUSH1 0x20
0x5b7 ADD
0x5b8 SWAP2
0x5b9 SWAP1
0x5ba PUSH1 0x1
0x5bc ADD
0x5bd SWAP1
0x5be PUSH2 0x5a4
0x5c1 JUMP
---
0x5ae: V384 = M[S2]
0x5b0: V385 = 0x0
0x5b3: S[S1] = V384
0x5b5: V386 = 0x20
0x5b7: V387 = ADD 0x20 S2
0x5ba: V388 = 0x1
0x5bc: V389 = ADD 0x1 S1
0x5be: V390 = 0x5a4
0x5c1: JUMP 0x5a4
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V377, S2, S1, V380]
Stack pops: 3
Stack additions: [V387, V389, S0]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V377, V387, V389, V380]

================================

Block 0x5c2
[0x5c2:0x5c2]
---
Predecessors: [0x5a4]
Successors: [0x5c3]
---
0x5c2 JUMPDEST
---
0x5c2: JUMPDEST 
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V377, S2, S1, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V328, V561, 0x3, V377, S2, S1, V380]

================================

Block 0x5c3
[0x5c3:0x5cf]
---
Predecessors: [0x4fc, 0x5c2]
Successors: [0x5d0]
---
0x5c3 JUMPDEST
0x5c4 POP
0x5c5 SWAP1
0x5c6 POP
0x5c7 PUSH2 0x5ee
0x5ca SWAP2
0x5cb SWAP1
0x5cc PUSH2 0x5d0
0x5cf JUMP
---
0x5c3: JUMPDEST 
0x5c7: V391 = 0x5ee
0x5cc: V392 = 0x5d0
0x5cf: JUMP 0x5d0
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V377, S2, S1, S0]
Stack pops: 4
Stack additions: [0x5ee, S3, S1]
Exit stack: [V8, 0xa2, V328, V561, 0x3, 0x5ee, V377, S1]

================================

Block 0x5d0
[0x5d0:0x5d8]
---
Predecessors: [0x5c3, 0x5d9]
Successors: [0x5d9, 0x5ea]
---
0x5d0 JUMPDEST
0x5d1 DUP1
0x5d2 DUP3
0x5d3 GT
0x5d4 ISZERO
0x5d5 PUSH2 0x5ea
0x5d8 JUMPI
---
0x5d0: JUMPDEST 
0x5d3: V393 = GT V377 S0
0x5d4: V394 = ISZERO V393
0x5d5: V395 = 0x5ea
0x5d8: JUMPI 0x5ea V394
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, 0x5ee, V377, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, V328, V561, 0x3, 0x5ee, V377, S0]

================================

Block 0x5d9
[0x5d9:0x5e9]
---
Predecessors: [0x5d0]
Successors: [0x5d0]
---
0x5d9 PUSH1 0x0
0x5db DUP2
0x5dc DUP2
0x5dd POP
0x5de PUSH1 0x0
0x5e0 SWAP1
0x5e1 SSTORE
0x5e2 POP
0x5e3 PUSH1 0x1
0x5e5 ADD
0x5e6 PUSH2 0x5d0
0x5e9 JUMP
---
0x5d9: V396 = 0x0
0x5de: V397 = 0x0
0x5e1: S[S0] = 0x0
0x5e3: V398 = 0x1
0x5e5: V399 = ADD 0x1 S0
0x5e6: V400 = 0x5d0
0x5e9: JUMP 0x5d0
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, 0x5ee, V377, S0]
Stack pops: 1
Stack additions: [V399]
Exit stack: [V8, 0xa2, V328, V561, 0x3, 0x5ee, V377, V399]

================================

Block 0x5ea
[0x5ea:0x5ed]
---
Predecessors: [0x5d0]
Successors: [0x5ee]
---
0x5ea JUMPDEST
0x5eb POP
0x5ec SWAP1
0x5ed JUMP
---
0x5ea: JUMPDEST 
0x5ed: JUMP 0x5ee
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, 0x5ee, V377, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V377]

================================

Block 0x5ee
[0x5ee:0x5f4]
---
Predecessors: [0x5ea]
Successors: [0x716]
---
0x5ee JUMPDEST
0x5ef POP
0x5f0 POP
0x5f1 PUSH2 0x716
0x5f4 JUMP
---
0x5ee: JUMPDEST 
0x5f1: V401 = 0x716
0x5f4: JUMP 0x716
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V377]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xa2, V328, V561]

================================

Block 0x5f5
[0x5f5:0x5f8]
---
Predecessors: []
Successors: [0x715]
---
0x5f5 PUSH2 0x715
0x5f8 JUMP
---
0x5f5: V402 = 0x715
0x5f8: JUMP 0x715
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5f9
[0x5f9:0x67c]
---
Predecessors: [0x4ed]
Successors: [0x67d, 0x69f]
---
0x5f9 JUMPDEST
0x5fa DUP2
0x5fb PUSH16 0xffffffffffffffffffffffffffffffff
0x60c AND
0x60d PUSH1 0x2
0x60f PUSH1 0x0
0x611 POP
0x612 DUP2
0x613 SWAP1
0x614 SSTORE
0x615 POP
0x616 PUSH1 0x40
0x618 PUSH1 0x40
0x61a MLOAD
0x61b SWAP1
0x61c DUP2
0x61d ADD
0x61e PUSH1 0x40
0x620 MSTORE
0x621 DUP1
0x622 PUSH1 0x3
0x624 DUP2
0x625 MSTORE
0x626 PUSH1 0x20
0x628 ADD
0x629 PUSH32 0x77696e0000000000000000000000000000000000000000000000000000000000
0x64a DUP2
0x64b MSTORE
0x64c PUSH1 0x20
0x64e ADD
0x64f POP
0x650 PUSH1 0x3
0x652 PUSH1 0x0
0x654 POP
0x655 SWAP1
0x656 DUP1
0x657 MLOAD
0x658 SWAP1
0x659 PUSH1 0x20
0x65b ADD
0x65c SWAP1
0x65d DUP3
0x65e DUP1
0x65f SLOAD
0x660 DUP3
0x661 DUP3
0x662 SSTORE
0x663 SWAP1
0x664 PUSH1 0x0
0x666 MSTORE
0x667 PUSH1 0x20
0x669 PUSH1 0x0
0x66b SHA3
0x66c SWAP1
0x66d PUSH1 0x1f
0x66f ADD
0x670 PUSH1 0x20
0x672 SWAP1
0x673 DIV
0x674 DUP2
0x675 ADD
0x676 SWAP3
0x677 DUP3
0x678 ISZERO
0x679 PUSH2 0x69f
0x67c JUMPI
---
0x5f9: JUMPDEST 
0x5fb: V403 = 0xffffffffffffffffffffffffffffffff
0x60c: V404 = AND 0xffffffffffffffffffffffffffffffff V328
0x60d: V405 = 0x2
0x60f: V406 = 0x0
0x614: S[0x2] = V404
0x616: V407 = 0x40
0x618: V408 = 0x40
0x61a: V409 = M[0x40]
0x61d: V410 = ADD V409 0x40
0x61e: V411 = 0x40
0x620: M[0x40] = V410
0x622: V412 = 0x3
0x625: M[V409] = 0x3
0x626: V413 = 0x20
0x628: V414 = ADD 0x20 V409
0x629: V415 = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x64b: M[V414] = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x64c: V416 = 0x20
0x64e: V417 = ADD 0x20 V414
0x650: V418 = 0x3
0x652: V419 = 0x0
0x657: V420 = M[V409]
0x659: V421 = 0x20
0x65b: V422 = ADD 0x20 V409
0x65f: V423 = S[0x3]
0x662: S[0x3] = V420
0x664: V424 = 0x0
0x666: M[0x0] = 0x3
0x667: V425 = 0x20
0x669: V426 = 0x0
0x66b: V427 = SHA3 0x0 0x20
0x66d: V428 = 0x1f
0x66f: V429 = ADD 0x1f V423
0x670: V430 = 0x20
0x673: V431 = DIV V429 0x20
0x675: V432 = ADD V427 V431
0x678: V433 = ISZERO V420
0x679: V434 = 0x69f
0x67c: JUMPI 0x69f V433
---
Entry stack: [V8, 0xa2, V328, V561]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V432, V420, V427, V422]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V432, V420, V427, V422]

================================

Block 0x67d
[0x67d:0x67f]
---
Predecessors: [0x5f9]
Successors: [0x680]
---
0x67d SWAP2
0x67e DUP3
0x67f ADD
---
0x67f: V435 = ADD V422 V420
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V432, V420, V427, V422]
Stack pops: 3
Stack additions: [S0, S1, V435]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V432, V422, V427, V435]

================================

Block 0x680
[0x680:0x688]
---
Predecessors: [0x67d, 0x689]
Successors: [0x689, 0x69e]
---
0x680 JUMPDEST
0x681 DUP3
0x682 DUP2
0x683 GT
0x684 ISZERO
0x685 PUSH2 0x69e
0x688 JUMPI
---
0x680: JUMPDEST 
0x683: V436 = GT V435 S2
0x684: V437 = ISZERO V436
0x685: V438 = 0x69e
0x688: JUMPI 0x69e V437
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V432, S2, S1, V435]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V432, S2, S1, V435]

================================

Block 0x689
[0x689:0x69d]
---
Predecessors: [0x680]
Successors: [0x680]
---
0x689 DUP3
0x68a MLOAD
0x68b DUP3
0x68c PUSH1 0x0
0x68e POP
0x68f SSTORE
0x690 SWAP2
0x691 PUSH1 0x20
0x693 ADD
0x694 SWAP2
0x695 SWAP1
0x696 PUSH1 0x1
0x698 ADD
0x699 SWAP1
0x69a PUSH2 0x680
0x69d JUMP
---
0x68a: V439 = M[S2]
0x68c: V440 = 0x0
0x68f: S[S1] = V439
0x691: V441 = 0x20
0x693: V442 = ADD 0x20 S2
0x696: V443 = 0x1
0x698: V444 = ADD 0x1 S1
0x69a: V445 = 0x680
0x69d: JUMP 0x680
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V432, S2, S1, V435]
Stack pops: 3
Stack additions: [V442, V444, S0]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V432, V442, V444, V435]

================================

Block 0x69e
[0x69e:0x69e]
---
Predecessors: [0x680]
Successors: [0x69f]
---
0x69e JUMPDEST
---
0x69e: JUMPDEST 
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V432, S2, S1, V435]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V328, V561, 0x3, V432, S2, S1, V435]

================================

Block 0x69f
[0x69f:0x6ab]
---
Predecessors: [0x5f9, 0x69e]
Successors: [0x6ac]
---
0x69f JUMPDEST
0x6a0 POP
0x6a1 SWAP1
0x6a2 POP
0x6a3 PUSH2 0x6ca
0x6a6 SWAP2
0x6a7 SWAP1
0x6a8 PUSH2 0x6ac
0x6ab JUMP
---
0x69f: JUMPDEST 
0x6a3: V446 = 0x6ca
0x6a8: V447 = 0x6ac
0x6ab: JUMP 0x6ac
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V432, S2, S1, S0]
Stack pops: 4
Stack additions: [0x6ca, S3, S1]
Exit stack: [V8, 0xa2, V328, V561, 0x3, 0x6ca, V432, S1]

================================

Block 0x6ac
[0x6ac:0x6b4]
---
Predecessors: [0x69f, 0x6b5]
Successors: [0x6b5, 0x6c6]
---
0x6ac JUMPDEST
0x6ad DUP1
0x6ae DUP3
0x6af GT
0x6b0 ISZERO
0x6b1 PUSH2 0x6c6
0x6b4 JUMPI
---
0x6ac: JUMPDEST 
0x6af: V448 = GT V432 S0
0x6b0: V449 = ISZERO V448
0x6b1: V450 = 0x6c6
0x6b4: JUMPI 0x6c6 V449
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, 0x6ca, V432, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, V328, V561, 0x3, 0x6ca, V432, S0]

================================

Block 0x6b5
[0x6b5:0x6c5]
---
Predecessors: [0x6ac]
Successors: [0x6ac]
---
0x6b5 PUSH1 0x0
0x6b7 DUP2
0x6b8 DUP2
0x6b9 POP
0x6ba PUSH1 0x0
0x6bc SWAP1
0x6bd SSTORE
0x6be POP
0x6bf PUSH1 0x1
0x6c1 ADD
0x6c2 PUSH2 0x6ac
0x6c5 JUMP
---
0x6b5: V451 = 0x0
0x6ba: V452 = 0x0
0x6bd: S[S0] = 0x0
0x6bf: V453 = 0x1
0x6c1: V454 = ADD 0x1 S0
0x6c2: V455 = 0x6ac
0x6c5: JUMP 0x6ac
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, 0x6ca, V432, S0]
Stack pops: 1
Stack additions: [V454]
Exit stack: [V8, 0xa2, V328, V561, 0x3, 0x6ca, V432, V454]

================================

Block 0x6c6
[0x6c6:0x6c9]
---
Predecessors: [0x6ac]
Successors: [0x6ca]
---
0x6c6 JUMPDEST
0x6c7 POP
0x6c8 SWAP1
0x6c9 JUMP
---
0x6c6: JUMPDEST 
0x6c9: JUMP 0x6ca
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, 0x6ca, V432, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, V328, V561, 0x3, V432]

================================

Block 0x6ca
[0x6ca:0x714]
---
Predecessors: [0x6c6]
Successors: [0x715]
---
0x6ca JUMPDEST
0x6cb POP
0x6cc POP
0x6cd CALLER
0x6ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e3 AND
0x6e4 PUSH1 0x0
0x6e6 PUSH1 0x2
0x6e8 DUP5
0x6e9 MUL
0x6ea PUSH16 0xffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc PUSH1 0x40
0x6fe MLOAD
0x6ff DUP1
0x700 SWAP1
0x701 POP
0x702 PUSH1 0x0
0x704 PUSH1 0x40
0x706 MLOAD
0x707 DUP1
0x708 DUP4
0x709 SUB
0x70a DUP2
0x70b DUP6
0x70c DUP9
0x70d DUP9
0x70e CALL
0x70f SWAP4
0x710 POP
0x711 POP
0x712 POP
0x713 POP
0x714 POP
---
0x6ca: JUMPDEST 
0x6cd: V456 = CALLER
0x6ce: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e3: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x6e4: V459 = 0x0
0x6e6: V460 = 0x2
0x6e9: V461 = MUL V328 0x2
0x6ea: V462 = 0xffffffffffffffffffffffffffffffff
0x6fb: V463 = AND 0xffffffffffffffffffffffffffffffff V461
0x6fc: V464 = 0x40
0x6fe: V465 = M[0x40]
0x702: V466 = 0x0
0x704: V467 = 0x40
0x706: V468 = M[0x40]
0x709: V469 = SUB V465 V468
0x70e: V470 = CALL 0x0 V458 V463 V468 V469 V468 0x0
---
Entry stack: [V8, 0xa2, V328, V561, 0x3, V432]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V8, 0xa2, V328, V561]

================================

Block 0x715
[0x715:0x715]
---
Predecessors: [0x5f5, 0x6ca]
Successors: [0x716]
---
0x715 JUMPDEST
---
0x715: JUMPDEST 
---
Entry stack: [V8, 0xa2, V328, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V328, V561]

================================

Block 0x716
[0x716:0x719]
---
Predecessors: [0x26c, 0x3b2, 0x4b9, 0x5ee, 0x715]
Successors: [0xa2]
---
0x716 JUMPDEST
0x717 POP
0x718 POP
0x719 JUMP
---
0x716: JUMPDEST 
0x719: JUMP 0xa2
---
Entry stack: [V8, 0xa2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Block 0x71a
[0x71a:0x728]
---
Predecessors: [0xd2]
Successors: [0x729]
---
0x71a JUMPDEST
0x71b PUSH1 0x0
0x71d PUSH1 0x4
0x71f PUSH1 0x0
0x721 POP
0x722 SLOAD
0x723 SWAP1
0x724 POP
0x725 PUSH2 0x729
0x728 JUMP
---
0x71a: JUMPDEST 
0x71b: V471 = 0x0
0x71d: V472 = 0x4
0x71f: V473 = 0x0
0x722: V474 = S[0x4]
0x725: V475 = 0x729
0x728: JUMP 0x729
---
Entry stack: [V8, 0xdd]
Stack pops: 0
Stack additions: [V474]
Exit stack: [V8, 0xdd, V474]

================================

Block 0x729
[0x729:0x72b]
---
Predecessors: [0x71a]
Successors: [0xdd]
---
0x729 JUMPDEST
0x72a SWAP1
0x72b JUMP
---
0x729: JUMPDEST 
0x72b: JUMP 0xdd
---
Entry stack: [V8, 0xdd, V474]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V474]

================================

Block 0x72c
[0x72c:0x770]
---
Predecessors: [0xf3]
Successors: [0x771, 0x79b]
---
0x72c JUMPDEST
0x72d PUSH1 0x20
0x72f PUSH1 0x40
0x731 MLOAD
0x732 SWAP1
0x733 DUP2
0x734 ADD
0x735 PUSH1 0x40
0x737 MSTORE
0x738 DUP1
0x739 PUSH1 0x0
0x73b DUP2
0x73c MSTORE
0x73d PUSH1 0x20
0x73f ADD
0x740 POP
0x741 PUSH1 0x3
0x743 PUSH1 0x0
0x745 POP
0x746 DUP1
0x747 SLOAD
0x748 DUP1
0x749 PUSH1 0x1f
0x74b ADD
0x74c PUSH1 0x20
0x74e DUP1
0x74f SWAP2
0x750 DIV
0x751 MUL
0x752 PUSH1 0x20
0x754 ADD
0x755 PUSH1 0x40
0x757 MLOAD
0x758 SWAP1
0x759 DUP2
0x75a ADD
0x75b PUSH1 0x40
0x75d MSTORE
0x75e DUP1
0x75f SWAP3
0x760 SWAP2
0x761 SWAP1
0x762 DUP2
0x763 DUP2
0x764 MSTORE
0x765 PUSH1 0x20
0x767 ADD
0x768 DUP3
0x769 DUP1
0x76a SLOAD
0x76b DUP1
0x76c ISZERO
0x76d PUSH2 0x79b
0x770 JUMPI
---
0x72c: JUMPDEST 
0x72d: V476 = 0x20
0x72f: V477 = 0x40
0x731: V478 = M[0x40]
0x734: V479 = ADD V478 0x20
0x735: V480 = 0x40
0x737: M[0x40] = V479
0x739: V481 = 0x0
0x73c: M[V478] = 0x0
0x73d: V482 = 0x20
0x73f: V483 = ADD 0x20 V478
0x741: V484 = 0x3
0x743: V485 = 0x0
0x747: V486 = S[0x3]
0x749: V487 = 0x1f
0x74b: V488 = ADD 0x1f V486
0x74c: V489 = 0x20
0x750: V490 = DIV V488 0x20
0x751: V491 = MUL V490 0x20
0x752: V492 = 0x20
0x754: V493 = ADD 0x20 V491
0x755: V494 = 0x40
0x757: V495 = M[0x40]
0x75a: V496 = ADD V495 V493
0x75b: V497 = 0x40
0x75d: M[0x40] = V496
0x764: M[V495] = V486
0x765: V498 = 0x20
0x767: V499 = ADD 0x20 V495
0x76a: V500 = S[0x3]
0x76c: V501 = ISZERO V500
0x76d: V502 = 0x79b
0x770: JUMPI 0x79b V501
---
Entry stack: [V8, 0xfe]
Stack pops: 0
Stack additions: [V478, V495, 0x3, V486, V499, 0x3, V500]
Exit stack: [V8, 0xfe, V478, V495, 0x3, V486, V499, 0x3, V500]

================================

Block 0x771
[0x771:0x77d]
---
Predecessors: [0x72c]
Successors: [0x77e]
---
0x771 DUP3
0x772 ADD
0x773 SWAP2
0x774 SWAP1
0x775 PUSH1 0x0
0x777 MSTORE
0x778 PUSH1 0x20
0x77a PUSH1 0x0
0x77c SHA3
0x77d SWAP1
---
0x772: V503 = ADD V499 V500
0x775: V504 = 0x0
0x777: M[0x0] = 0x3
0x778: V505 = 0x20
0x77a: V506 = 0x0
0x77c: V507 = SHA3 0x0 0x20
---
Entry stack: [V8, 0xfe, V478, V495, 0x3, V486, V499, 0x3, V500]
Stack pops: 3
Stack additions: [V503, V507, S2]
Exit stack: [V8, 0xfe, V478, V495, 0x3, V486, V503, V507, V499]

================================

Block 0x77e
[0x77e:0x791]
---
Predecessors: [0x771, 0x77e]
Successors: [0x77e, 0x792]
---
0x77e JUMPDEST
0x77f DUP2
0x780 SLOAD
0x781 DUP2
0x782 MSTORE
0x783 SWAP1
0x784 PUSH1 0x1
0x786 ADD
0x787 SWAP1
0x788 PUSH1 0x20
0x78a ADD
0x78b DUP1
0x78c DUP4
0x78d GT
0x78e PUSH2 0x77e
0x791 JUMPI
---
0x77e: JUMPDEST 
0x780: V508 = S[S1]
0x782: M[S0] = V508
0x784: V509 = 0x1
0x786: V510 = ADD 0x1 S1
0x788: V511 = 0x20
0x78a: V512 = ADD 0x20 S0
0x78d: V513 = GT V503 V512
0x78e: V514 = 0x77e
0x791: JUMPI 0x77e V513
---
Entry stack: [V8, 0xfe, V478, V495, 0x3, V486, V503, S1, S0]
Stack pops: 3
Stack additions: [S2, V510, V512]
Exit stack: [V8, 0xfe, V478, V495, 0x3, V486, V503, V510, V512]

================================

Block 0x792
[0x792:0x79a]
---
Predecessors: [0x77e]
Successors: [0x79b]
---
0x792 DUP3
0x793 SWAP1
0x794 SUB
0x795 PUSH1 0x1f
0x797 AND
0x798 DUP3
0x799 ADD
0x79a SWAP2
---
0x794: V515 = SUB V512 V503
0x795: V516 = 0x1f
0x797: V517 = AND 0x1f V515
0x799: V518 = ADD V503 V517
---
Entry stack: [V8, 0xfe, V478, V495, 0x3, V486, V503, V510, V512]
Stack pops: 3
Stack additions: [V518, S1, S2]
Exit stack: [V8, 0xfe, V478, V495, 0x3, V486, V518, V510, V503]

================================

Block 0x79b
[0x79b:0x7a6]
---
Predecessors: [0x72c, 0x792]
Successors: [0x7a7]
---
0x79b JUMPDEST
0x79c POP
0x79d POP
0x79e POP
0x79f POP
0x7a0 POP
0x7a1 SWAP1
0x7a2 POP
0x7a3 PUSH2 0x7a7
0x7a6 JUMP
---
0x79b: JUMPDEST 
0x7a3: V519 = 0x7a7
0x7a6: JUMP 0x7a7
---
Entry stack: [V8, 0xfe, V478, V495, 0x3, V486, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V8, 0xfe, V495]

================================

Block 0x7a7
[0x7a7:0x7a9]
---
Predecessors: [0x79b]
Successors: [0xfe]
---
0x7a7 JUMPDEST
0x7a8 SWAP1
0x7a9 JUMP
---
0x7a7: JUMPDEST 
0x7a9: JUMP 0xfe
---
Entry stack: [V8, 0xfe, V495]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V495]

================================

Block 0x7aa
[0x7aa:0x7b8]
---
Predecessors: [0x76]
Successors: [0x7b9]
---
0x7aa JUMPDEST
0x7ab PUSH1 0x0
0x7ad PUSH1 0x2
0x7af PUSH1 0x0
0x7b1 POP
0x7b2 SLOAD
0x7b3 SWAP1
0x7b4 POP
0x7b5 PUSH2 0x7b9
0x7b8 JUMP
---
0x7aa: JUMPDEST 
0x7ab: V520 = 0x0
0x7ad: V521 = 0x2
0x7af: V522 = 0x0
0x7b2: V523 = S[0x2]
0x7b5: V524 = 0x7b9
0x7b8: JUMP 0x7b9
---
Entry stack: [V8, 0x81]
Stack pops: 0
Stack additions: [V523]
Exit stack: [V8, 0x81, V523]

================================

Block 0x7b9
[0x7b9:0x7bb]
---
Predecessors: [0x7aa]
Successors: [0x81]
---
0x7b9 JUMPDEST
0x7ba SWAP1
0x7bb JUMP
---
0x7b9: JUMPDEST 
0x7bb: JUMP 0x81
---
Entry stack: [V8, 0x81, V523]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V523]

================================

Block 0x7bc
[0x7bc:0x812]
---
Predecessors: [0xa4]
Successors: [0x813, 0x84d]
---
0x7bc JUMPDEST
0x7bd PUSH1 0x0
0x7bf PUSH1 0x0
0x7c1 SWAP1
0x7c2 SLOAD
0x7c3 SWAP1
0x7c4 PUSH2 0x100
0x7c7 EXP
0x7c8 SWAP1
0x7c9 DIV
0x7ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7df AND
0x7e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f5 AND
0x7f6 CALLER
0x7f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80c AND
0x80d EQ
0x80e ISZERO
0x80f PUSH2 0x84d
0x812 JUMPI
---
0x7bc: JUMPDEST 
0x7bd: V525 = 0x0
0x7bf: V526 = 0x0
0x7c2: V527 = S[0x0]
0x7c4: V528 = 0x100
0x7c7: V529 = EXP 0x100 0x0
0x7c9: V530 = DIV V527 0x1
0x7ca: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x7df: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x7e0: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f5: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x7f6: V535 = CALLER
0x7f7: V536 = 0xffffffffffffffffffffffffffffffffffffffff
0x80c: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x80d: V538 = EQ V537 V534
0x80e: V539 = ISZERO V538
0x80f: V540 = 0x84d
0x812: JUMPI 0x84d V539
---
Entry stack: [V8, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaf]

================================

Block 0x813
[0x813:0x84c]
---
Predecessors: [0x7bc]
Successors: []
---
0x813 PUSH1 0x0
0x815 PUSH1 0x0
0x817 SWAP1
0x818 SLOAD
0x819 SWAP1
0x81a PUSH2 0x100
0x81d EXP
0x81e SWAP1
0x81f DIV
0x820 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x835 AND
0x836 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84b AND
0x84c SELFDESTRUCT
---
0x813: V541 = 0x0
0x815: V542 = 0x0
0x818: V543 = S[0x0]
0x81a: V544 = 0x100
0x81d: V545 = EXP 0x100 0x0
0x81f: V546 = DIV V543 0x1
0x820: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x835: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x836: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x84b: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x84c: SELFDESTRUCT V550
---
Entry stack: [V8, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaf]

================================

Block 0x84d
[0x84d:0x84d]
---
Predecessors: [0x7bc]
Successors: [0x84e]
---
0x84d JUMPDEST
---
0x84d: JUMPDEST 
---
Entry stack: [V8, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaf]

================================

Block 0x84e
[0x84e:0x84f]
---
Predecessors: [0x84d]
Successors: [0xaf]
---
0x84e JUMPDEST
0x84f JUMP
---
0x84e: JUMPDEST 
0x84f: JUMP 0xaf
---
Entry stack: [V8, 0xaf]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x850
[0x850:0x872]
---
Predecessors: [0x4cd]
Successors: [0x873]
---
0x850 JUMPDEST
0x851 PUSH1 0x0
0x853 DUP2
0x854 PUSH1 0x40
0x856 MLOAD
0x857 DUP1
0x858 DUP3
0x859 DUP2
0x85a MSTORE
0x85b PUSH1 0x20
0x85d ADD
0x85e SWAP2
0x85f POP
0x860 POP
0x861 PUSH1 0x40
0x863 MLOAD
0x864 DUP1
0x865 SWAP2
0x866 SUB
0x867 SWAP1
0x868 SHA3
0x869 PUSH1 0x1
0x86b SWAP1
0x86c DIV
0x86d SWAP1
0x86e POP
0x86f PUSH2 0x873
0x872 JUMP
---
0x850: JUMPDEST 
0x851: V551 = 0x0
0x854: V552 = 0x40
0x856: V553 = M[0x40]
0x85a: M[V553] = V338
0x85b: V554 = 0x20
0x85d: V555 = ADD 0x20 V553
0x861: V556 = 0x40
0x863: V557 = M[0x40]
0x866: V558 = SUB V555 V557
0x868: V559 = SHA3 V557 V558
0x869: V560 = 0x1
0x86c: V561 = DIV V559 0x1
0x86f: V562 = 0x873
0x872: JUMP 0x873
---
Entry stack: [V8, 0xa2, V328, 0x0, 0x4ed, V338]
Stack pops: 1
Stack additions: [S0, V561]
Exit stack: [V8, 0xa2, V328, 0x0, 0x4ed, V338, V561]

================================

Block 0x873
[0x873:0x877]
---
Predecessors: [0x850]
Successors: [0x4ed]
---
0x873 JUMPDEST
0x874 SWAP2
0x875 SWAP1
0x876 POP
0x877 JUMP
---
0x873: JUMPDEST 
0x877: JUMP 0x4ed
---
Entry stack: [V8, 0xa2, V328, 0x0, 0x4ed, V338, V561]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V8, 0xa2, V328, 0x0, V561]

================================

Function 0:
Public function signature: 0xefafd01
Entry block: 0x76
Exit block: 0x81
Body: 0x76, 0x81, 0x7aa, 0x7b9

Function 1:
Public function signature: 0x25d8dcf2
Entry block: 0x97
Exit block: 0xa2
Body: 0x97, 0xa2, 0x190, 0x1b8, 0x21f, 0x222, 0x22b, 0x240, 0x241, 0x24e, 0x257, 0x268, 0x26c, 0x2b5, 0x2d8, 0x365, 0x368, 0x371, 0x386, 0x387, 0x394, 0x39d, 0x3ae, 0x3b2, 0x3fb, 0x405, 0x46c, 0x46f, 0x478, 0x48d, 0x48e, 0x49b, 0x4a4, 0x4b5, 0x4b9, 0x4cb, 0x4cc, 0x4cd, 0x4ed, 0x4fc, 0x5a1, 0x5a4, 0x5ad, 0x5c2, 0x5c3, 0x5d0, 0x5d9, 0x5ea, 0x5ee, 0x5f9, 0x67d, 0x680, 0x689, 0x69e, 0x69f, 0x6ac, 0x6b5, 0x6c6, 0x6ca, 0x715, 0x716, 0x850, 0x873

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xa4
Exit block: 0xaf
Body: 0xa4, 0xaf, 0x7bc, 0x813, 0x84d, 0x84e

Function 3:
Public function signature: 0x5acce36b
Entry block: 0xb1
Exit block: 0xbc
Body: 0xb1, 0xbc, 0x16c, 0x18d

Function 4:
Public function signature: 0x94c3fa2e
Entry block: 0xd2
Exit block: 0xdd
Body: 0xd2, 0xdd, 0x71a, 0x729

Function 5:
Public function signature: 0xcee6f93c
Entry block: 0xf3
Exit block: 0x15e
Body: 0xf3, 0xfe, 0x145, 0x15e, 0x72c, 0x771, 0x77e, 0x792, 0x79b, 0x7a7

Function 6:
Public fallback function
Entry block: 0x70
Exit block: 0x74
Body: 0x70, 0x74

