Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x8b3cba7b
0x34 EQ
0x35 PUSH2 0x3e
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x8b3cba7b
0x34: V9 = EQ 0x8b3cba7b V7
0x35: V10 = 0x3e
0x38: JUMPI 0x3e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3d]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a PUSH1 0x0
0x3c DUP1
0x3d REVERT
---
0x39: JUMPDEST 
0x3a: V11 = 0x0
0x3d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3e
[0x3e:0xb2]
---
Predecessors: [0x0]
Successors: [0xb5]
---
0x3e JUMPDEST
0x3f PUSH2 0xb3
0x42 PUSH1 0x4
0x44 DUP1
0x45 DUP1
0x46 CALLDATALOAD
0x47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c AND
0x5d SWAP1
0x5e PUSH1 0x20
0x60 ADD
0x61 SWAP1
0x62 SWAP2
0x63 SWAP1
0x64 DUP1
0x65 CALLDATALOAD
0x66 SWAP1
0x67 PUSH1 0x20
0x69 ADD
0x6a SWAP1
0x6b DUP3
0x6c ADD
0x6d DUP1
0x6e CALLDATALOAD
0x6f SWAP1
0x70 PUSH1 0x20
0x72 ADD
0x73 SWAP1
0x74 DUP1
0x75 DUP1
0x76 PUSH1 0x20
0x78 MUL
0x79 PUSH1 0x20
0x7b ADD
0x7c PUSH1 0x40
0x7e MLOAD
0x7f SWAP1
0x80 DUP2
0x81 ADD
0x82 PUSH1 0x40
0x84 MSTORE
0x85 DUP1
0x86 SWAP4
0x87 SWAP3
0x88 SWAP2
0x89 SWAP1
0x8a DUP2
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x20
0x8f ADD
0x90 DUP4
0x91 DUP4
0x92 PUSH1 0x20
0x94 MUL
0x95 DUP1
0x96 DUP3
0x97 DUP5
0x98 CALLDATACOPY
0x99 DUP3
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 SWAP2
0xa3 SWAP1
0xa4 DUP1
0xa5 CALLDATALOAD
0xa6 SWAP1
0xa7 PUSH1 0x20
0xa9 ADD
0xaa SWAP1
0xab SWAP2
0xac SWAP1
0xad POP
0xae POP
0xaf PUSH2 0xb5
0xb2 JUMP
---
0x3e: JUMPDEST 
0x3f: V12 = 0xb3
0x42: V13 = 0x4
0x46: V14 = CALLDATALOAD 0x4
0x47: V15 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c: V16 = AND 0xffffffffffffffffffffffffffffffffffffffff V14
0x5e: V17 = 0x20
0x60: V18 = ADD 0x20 0x4
0x65: V19 = CALLDATALOAD 0x24
0x67: V20 = 0x20
0x69: V21 = ADD 0x20 0x24
0x6c: V22 = ADD 0x4 V19
0x6e: V23 = CALLDATALOAD V22
0x70: V24 = 0x20
0x72: V25 = ADD 0x20 V22
0x76: V26 = 0x20
0x78: V27 = MUL 0x20 V23
0x79: V28 = 0x20
0x7b: V29 = ADD 0x20 V27
0x7c: V30 = 0x40
0x7e: V31 = M[0x40]
0x81: V32 = ADD V31 V29
0x82: V33 = 0x40
0x84: M[0x40] = V32
0x8c: M[V31] = V23
0x8d: V34 = 0x20
0x8f: V35 = ADD 0x20 V31
0x92: V36 = 0x20
0x94: V37 = MUL 0x20 V23
0x98: CALLDATACOPY V35 V25 V37
0x9a: V38 = ADD V35 V37
0xa5: V39 = CALLDATALOAD 0x44
0xa7: V40 = 0x20
0xa9: V41 = ADD 0x20 0x44
0xaf: V42 = 0xb5
0xb2: JUMP 0xb5
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xb3, V16, V31, V39]
Exit stack: [V7, 0xb3, V16, V31, V39]

================================

Block 0xb3
[0xb3:0xb4]
---
Predecessors: [0x1a8]
Successors: []
---
0xb3 JUMPDEST
0xb4 STOP
---
0xb3: JUMPDEST 
0xb4: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb5
[0xb5:0x165]
---
Predecessors: [0x3e]
Successors: [0x166]
---
0xb5 JUMPDEST
0xb6 DUP3
0xb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc AND
0xcd CALLVALUE
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP1
0xd2 DUP1
0xd3 PUSH32 0x696e69744d756c74696f776e656428616464726573735b5d2c2075696e742900
0xf4 DUP2
0xf5 MSTORE
0xf6 POP
0xf7 PUSH1 0x1f
0xf9 ADD
0xfa SWAP1
0xfb POP
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 SWAP2
0x101 SUB
0x102 SWAP1
0x103 SHA3
0x104 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x122 SWAP1
0x123 DIV
0x124 SWAP1
0x125 DUP5
0x126 DUP5
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP5
0x12b PUSH4 0xffffffff
0x130 AND
0x131 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x14f MUL
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x4
0x154 ADD
0x155 DUP1
0x156 DUP4
0x157 DUP1
0x158 MLOAD
0x159 SWAP1
0x15a PUSH1 0x20
0x15c ADD
0x15d SWAP1
0x15e PUSH1 0x20
0x160 MUL
0x161 DUP1
0x162 DUP4
0x163 DUP4
0x164 PUSH1 0x0
---
0xb5: JUMPDEST 
0xb7: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V16
0xcd: V45 = CALLVALUE
0xce: V46 = 0x40
0xd0: V47 = M[0x40]
0xd3: V48 = 0x696e69744d756c74696f776e656428616464726573735b5d2c2075696e742900
0xf5: M[V47] = 0x696e69744d756c74696f776e656428616464726573735b5d2c2075696e742900
0xf7: V49 = 0x1f
0xf9: V50 = ADD 0x1f V47
0xfc: V51 = 0x40
0xfe: V52 = M[0x40]
0x101: V53 = SUB V50 V52
0x103: V54 = SHA3 V52 V53
0x104: V55 = 0x100000000000000000000000000000000000000000000000000000000
0x123: V56 = DIV V54 0x100000000000000000000000000000000000000000000000000000000
0x127: V57 = 0x40
0x129: V58 = M[0x40]
0x12b: V59 = 0xffffffff
0x130: V60 = AND 0xffffffff V56
0x131: V61 = 0x100000000000000000000000000000000000000000000000000000000
0x14f: V62 = MUL 0x100000000000000000000000000000000000000000000000000000000 V60
0x151: M[V58] = V62
0x152: V63 = 0x4
0x154: V64 = ADD 0x4 V58
0x158: V65 = M[V31]
0x15a: V66 = 0x20
0x15c: V67 = ADD 0x20 V31
0x15e: V68 = 0x20
0x160: V69 = MUL 0x20 V65
0x164: V70 = 0x0
---
Entry stack: [V7, 0xb3, V16, V31, V39]
Stack pops: 3
Stack additions: [S2, S1, S0, V44, V56, V45, S1, S0, V64, V64, V67, V69, V69, V64, V67, 0x0]
Exit stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, 0x0]

================================

Block 0x166
[0x166:0x16e]
---
Predecessors: [0xb5, 0x177]
Successors: [0x16f, 0x182]
---
0x166 JUMPDEST
0x167 DUP4
0x168 DUP2
0x169 LT
0x16a ISZERO
0x16b PUSH2 0x182
0x16e JUMPI
---
0x166: JUMPDEST 
0x169: V71 = LT S0 V69
0x16a: V72 = ISZERO V71
0x16b: V73 = 0x182
0x16e: JUMPI 0x182 V72
---
Entry stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, S0]

================================

Block 0x16f
[0x16f:0x176]
---
Predecessors: [0x166]
Successors: [0x177]
---
0x16f DUP1
0x170 DUP3
0x171 ADD
0x172 MLOAD
0x173 DUP2
0x174 DUP5
0x175 ADD
0x176 MSTORE
---
0x171: V74 = ADD V67 S0
0x172: V75 = M[V74]
0x175: V76 = ADD V64 S0
0x176: M[V76] = V75
---
Entry stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, S0]

================================

Block 0x177
[0x177:0x181]
---
Predecessors: [0x16f]
Successors: [0x166]
---
0x177 JUMPDEST
0x178 PUSH1 0x20
0x17a DUP2
0x17b ADD
0x17c SWAP1
0x17d POP
0x17e PUSH2 0x166
0x181 JUMP
---
0x177: JUMPDEST 
0x178: V77 = 0x20
0x17b: V78 = ADD S0 0x20
0x17e: V79 = 0x166
0x181: JUMP 0x166
---
Entry stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, S0]
Stack pops: 1
Stack additions: [V78]
Exit stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, V78]

================================

Block 0x182
[0x182:0x1a7]
---
Predecessors: [0x166]
Successors: [0x1a8]
---
0x182 JUMPDEST
0x183 POP
0x184 POP
0x185 POP
0x186 POP
0x187 SWAP1
0x188 POP
0x189 ADD
0x18a DUP3
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x20
0x18f ADD
0x190 SWAP3
0x191 POP
0x192 POP
0x193 POP
0x194 PUSH1 0x0
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a DUP4
0x19b SUB
0x19c DUP2
0x19d PUSH1 0x0
0x19f DUP9
0x1a0 DUP8
0x1a1 CALL
0x1a2 SWAP4
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 POP
---
0x182: JUMPDEST 
0x189: V80 = ADD V69 V64
0x18c: M[V80] = V39
0x18d: V81 = 0x20
0x18f: V82 = ADD 0x20 V80
0x194: V83 = 0x0
0x196: V84 = 0x40
0x198: V85 = M[0x40]
0x19b: V86 = SUB V82 V85
0x19d: V87 = 0x0
0x1a1: V88 = CALL V45 V44 0x0 V85 V86 V85 0x0
---
Entry stack: [V7, 0xb3, V16, V31, V39, V44, V56, V45, V31, V39, V64, V64, V67, V69, V69, V64, V67, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V7, 0xb3, V16, V31, V39]

================================

Block 0x1a8
[0x1a8:0x1ac]
---
Predecessors: [0x182]
Successors: [0xb3]
---
0x1a8 JUMPDEST
0x1a9 POP
0x1aa POP
0x1ab POP
0x1ac JUMP
---
0x1a8: JUMPDEST 
0x1ac: JUMP 0xb3
---
Entry stack: [V7, 0xb3, V16, V31, V39]
Stack pops: 4
Stack additions: []
Exit stack: [V7]

================================

Block 0x1ad
[0x1ad:0x1da]
---
Predecessors: []
Successors: []
---
0x1ad STOP
0x1ae LOG1
0x1af PUSH6 0x627a7a723058
0x1b6 SHA3
0x1b7 MISSING 0xdc
0x1b8 MISSING 0xbe
0x1b9 DUP1
0x1ba PUSH32 0xe168a66cc58a97b1f0eb4a3ccc93d9f811109fd41094054347a9919f0029
---
0x1ad: STOP 
0x1ae: LOG S0 S1 S2
0x1af: V89 = 0x627a7a723058
0x1b6: V90 = SHA3 0x627a7a723058 S3
0x1b7: MISSING 0xdc
0x1b8: MISSING 0xbe
0x1ba: V91 = 0xe168a66cc58a97b1f0eb4a3ccc93d9f811109fd41094054347a9919f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V90, 0xe168a66cc58a97b1f0eb4a3ccc93d9f811109fd41094054347a9919f0029, S0, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x8b3cba7b
Entry block: 0x3e
Exit block: 0xb3
Body: 0x3e, 0xb3, 0xb5, 0x166, 0x16f, 0x177, 0x182, 0x1a8

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

