Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x5e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28 PUSH1 0x0
0x2a CALLDATALOAD
0x2b DIV
0x2c AND
0x2d PUSH4 0xac298dc
0x32 DUP2
0x33 EQ
0x34 PUSH2 0x5e
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0x100000000000000000000000000000000000000000000000000000000
0x28: V4 = 0x0
0x2a: V5 = CALLDATALOAD 0x0
0x2b: V6 = DIV V5 0x100000000000000000000000000000000000000000000000000000000
0x2c: V7 = AND V6 0xffffffff
0x2d: V8 = 0xac298dc
0x33: V9 = EQ V7 0xac298dc
0x34: V10 = 0x5e
0x37: JUMPI 0x5e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x42]
---
Predecessors: [0x0]
Successors: [0x43, 0x8d]
---
0x38 DUP1
0x39 PUSH4 0x253c8bd4
0x3e EQ
0x3f PUSH2 0x8d
0x42 JUMPI
---
0x39: V11 = 0x253c8bd4
0x3e: V12 = EQ 0x253c8bd4 V7
0x3f: V13 = 0x8d
0x42: JUMPI 0x8d V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x43
[0x43:0x4d]
---
Predecessors: [0x38]
Successors: [0x4e, 0xae]
---
0x43 DUP1
0x44 PUSH4 0x3e58c58c
0x49 EQ
0x4a PUSH2 0xae
0x4d JUMPI
---
0x44: V14 = 0x3e58c58c
0x49: V15 = EQ 0x3e58c58c V7
0x4a: V16 = 0xae
0x4d: JUMPI 0xae V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4e
[0x4e:0x58]
---
Predecessors: [0x43]
Successors: [0x59, 0xe1]
---
0x4e DUP1
0x4f PUSH4 0xb61d27f6
0x54 EQ
0x55 PUSH2 0xe1
0x58 JUMPI
---
0x4f: V17 = 0xb61d27f6
0x54: V18 = EQ 0xb61d27f6 V7
0x55: V19 = 0xe1
0x58: JUMPI 0xe1 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x59
[0x59:0x5d]
---
Predecessors: [0x4e]
Successors: []
---
0x59 JUMPDEST
0x5a PUSH1 0x0
0x5c DUP1
0x5d REVERT
---
0x59: JUMPDEST 
0x5a: V20 = 0x0
0x5d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5e
[0x5e:0x64]
---
Predecessors: [0x0]
Successors: [0x65, 0x69]
---
0x5e JUMPDEST
0x5f CALLVALUE
0x60 ISZERO
0x61 PUSH2 0x69
0x64 JUMPI
---
0x5e: JUMPDEST 
0x5f: V21 = CALLVALUE
0x60: V22 = ISZERO V21
0x61: V23 = 0x69
0x64: JUMPI 0x69 V22
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x5e]
Successors: []
---
0x65 PUSH1 0x0
0x67 DUP1
0x68 REVERT
---
0x65: V24 = 0x0
0x68: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x69
[0x69:0x70]
---
Predecessors: [0x5e]
Successors: [0x124]
---
0x69 JUMPDEST
0x6a PUSH2 0x71
0x6d PUSH2 0x124
0x70 JUMP
---
0x69: JUMPDEST 
0x6a: V25 = 0x71
0x6d: V26 = 0x124
0x70: JUMP 0x124
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x71]
Exit stack: [V7, 0x71]

================================

Block 0x71
[0x71:0x8c]
---
Predecessors: [0x131]
Successors: []
---
0x71 JUMPDEST
0x72 PUSH1 0x40
0x74 MLOAD
0x75 PUSH1 0x1
0x77 PUSH1 0xa0
0x79 PUSH1 0x2
0x7b EXP
0x7c SUB
0x7d SWAP1
0x7e SWAP2
0x7f AND
0x80 DUP2
0x81 MSTORE
0x82 PUSH1 0x20
0x84 ADD
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 SWAP2
0x8a SUB
0x8b SWAP1
0x8c RETURN
---
0x71: JUMPDEST 
0x72: V27 = 0x40
0x74: V28 = M[0x40]
0x75: V29 = 0x1
0x77: V30 = 0xa0
0x79: V31 = 0x2
0x7b: V32 = EXP 0x2 0xa0
0x7c: V33 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f: V34 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x81: M[V28] = V34
0x82: V35 = 0x20
0x84: V36 = ADD 0x20 V28
0x85: V37 = 0x40
0x87: V38 = M[0x40]
0x8a: V39 = SUB V36 V38
0x8c: RETURN V38 V39
---
Entry stack: [V7, V114]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0x38]
Successors: [0x94, 0x98]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8e: V40 = CALLVALUE
0x8f: V41 = ISZERO V40
0x90: V42 = 0x98
0x93: JUMPI 0x98 V41
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8d]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V43 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x98
[0x98:0xab]
---
Predecessors: [0x8d]
Successors: [0x134]
---
0x98 JUMPDEST
0x99 PUSH2 0xac
0x9c PUSH1 0x1
0x9e PUSH1 0xa0
0xa0 PUSH1 0x2
0xa2 EXP
0xa3 SUB
0xa4 PUSH1 0x4
0xa6 CALLDATALOAD
0xa7 AND
0xa8 PUSH2 0x134
0xab JUMP
---
0x98: JUMPDEST 
0x99: V44 = 0xac
0x9c: V45 = 0x1
0x9e: V46 = 0xa0
0xa0: V47 = 0x2
0xa2: V48 = EXP 0x2 0xa0
0xa3: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4: V50 = 0x4
0xa6: V51 = CALLDATALOAD 0x4
0xa7: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V53 = 0x134
0xab: JUMP 0x134
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xac, V52]
Exit stack: [V7, 0xac, V52]

================================

Block 0xac
[0xac:0xad]
---
Predecessors: [0x176]
Successors: []
---
0xac JUMPDEST
0xad STOP
---
0xac: JUMPDEST 
0xad: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x43]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V54 = CALLVALUE
0xb0: V55 = ISZERO V54
0xb1: V56 = 0xb9
0xb4: JUMPI 0xb9 V55
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V57 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb9
[0xb9:0xcc]
---
Predecessors: [0xae]
Successors: [0x179]
---
0xb9 JUMPDEST
0xba PUSH2 0xcd
0xbd PUSH1 0x1
0xbf PUSH1 0xa0
0xc1 PUSH1 0x2
0xc3 EXP
0xc4 SUB
0xc5 PUSH1 0x4
0xc7 CALLDATALOAD
0xc8 AND
0xc9 PUSH2 0x179
0xcc JUMP
---
0xb9: JUMPDEST 
0xba: V58 = 0xcd
0xbd: V59 = 0x1
0xbf: V60 = 0xa0
0xc1: V61 = 0x2
0xc3: V62 = EXP 0x2 0xa0
0xc4: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V64 = 0x4
0xc7: V65 = CALLDATALOAD 0x4
0xc8: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V67 = 0x179
0xcc: JUMP 0x179
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xcd, V66]
Exit stack: [V7, 0xcd, V66]

================================

Block 0xcd
[0xcd:0xe0]
---
Predecessors: [0x1bc, 0x212]
Successors: []
---
0xcd JUMPDEST
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 SWAP1
0xd2 ISZERO
0xd3 ISZERO
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd SWAP2
0xde SUB
0xdf SWAP1
0xe0 RETURN
---
0xcd: JUMPDEST 
0xce: V68 = 0x40
0xd0: V69 = M[0x40]
0xd2: V70 = ISZERO S0
0xd3: V71 = ISZERO V70
0xd5: M[V69] = V71
0xd6: V72 = 0x20
0xd8: V73 = ADD 0x20 V69
0xd9: V74 = 0x40
0xdb: V75 = M[0x40]
0xde: V76 = SUB V73 V75
0xe0: RETURN V75 V76
---
Entry stack: [V7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xe1
[0xe1:0xe7]
---
Predecessors: [0x4e]
Successors: [0xe8, 0xec]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe1: JUMPDEST 
0xe2: V77 = CALLVALUE
0xe3: V78 = ISZERO V77
0xe4: V79 = 0xec
0xe7: JUMPI 0xec V78
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe1]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V80 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xec
[0xec:0x10f]
---
Predecessors: [0xe1]
Successors: [0x1c1]
---
0xec JUMPDEST
0xed PUSH2 0xcd
0xf0 PUSH1 0x4
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc AND
0xfd SWAP1
0xfe PUSH1 0x24
0x100 DUP1
0x101 CALLDATALOAD
0x102 SWAP2
0x103 PUSH1 0x44
0x105 CALLDATALOAD
0x106 SWAP2
0x107 DUP3
0x108 ADD
0x109 SWAP2
0x10a ADD
0x10b CALLDATALOAD
0x10c PUSH2 0x1c1
0x10f JUMP
---
0xec: JUMPDEST 
0xed: V81 = 0xcd
0xf0: V82 = 0x4
0xf3: V83 = CALLDATALOAD 0x4
0xf4: V84 = 0x1
0xf6: V85 = 0xa0
0xf8: V86 = 0x2
0xfa: V87 = EXP 0x2 0xa0
0xfb: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xfe: V90 = 0x24
0x101: V91 = CALLDATALOAD 0x24
0x103: V92 = 0x44
0x105: V93 = CALLDATALOAD 0x44
0x108: V94 = ADD V93 0x24
0x10a: V95 = ADD V93 0x4
0x10b: V96 = CALLDATALOAD V95
0x10c: V97 = 0x1c1
0x10f: JUMP 0x1c1
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xcd, V89, V91, V94, V96]
Exit stack: [V7, 0xcd, V89, V91, V94, V96]

================================

Block 0x110
[0x110:0x123]
---
Predecessors: []
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x40
0x113 MLOAD
0x114 SWAP1
0x115 ISZERO
0x116 ISZERO
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0x110: JUMPDEST 
0x111: V98 = 0x40
0x113: V99 = M[0x40]
0x115: V100 = ISZERO S0
0x116: V101 = ISZERO V100
0x118: M[V99] = V101
0x119: V102 = 0x20
0x11b: V103 = ADD 0x20 V99
0x11c: V104 = 0x40
0x11e: V105 = M[0x40]
0x121: V106 = SUB V103 V105
0x123: RETURN V105 V106
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x124
[0x124:0x130]
---
Predecessors: [0x69]
Successors: [0x131]
---
0x124 JUMPDEST
0x125 PUSH1 0x0
0x127 SLOAD
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 AND
---
0x124: JUMPDEST 
0x125: V107 = 0x0
0x127: V108 = S[0x0]
0x128: V109 = 0x1
0x12a: V110 = 0xa0
0x12c: V111 = 0x2
0x12e: V112 = EXP 0x2 0xa0
0x12f: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
---
Entry stack: [V7, 0x71]
Stack pops: 0
Stack additions: [V114]
Exit stack: [V7, 0x71, V114]

================================

Block 0x131
[0x131:0x133]
---
Predecessors: [0x124]
Successors: [0x71]
---
0x131 JUMPDEST
0x132 SWAP1
0x133 JUMP
---
0x131: JUMPDEST 
0x133: JUMP 0x71
---
Entry stack: [V7, 0x71, V114]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V114]

================================

Block 0x134
[0x134:0x14b]
---
Predecessors: [0x98]
Successors: [0x14c, 0x174]
---
0x134 JUMPDEST
0x135 PUSH1 0x0
0x137 SLOAD
0x138 CALLER
0x139 PUSH1 0x1
0x13b PUSH1 0xa0
0x13d PUSH1 0x2
0x13f EXP
0x140 SUB
0x141 SWAP1
0x142 DUP2
0x143 AND
0x144 SWAP2
0x145 AND
0x146 EQ
0x147 ISZERO
0x148 PUSH2 0x174
0x14b JUMPI
---
0x134: JUMPDEST 
0x135: V115 = 0x0
0x137: V116 = S[0x0]
0x138: V117 = CALLER
0x139: V118 = 0x1
0x13b: V119 = 0xa0
0x13d: V120 = 0x2
0x13f: V121 = EXP 0x2 0xa0
0x140: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x145: V124 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x146: V125 = EQ V124 V123
0x147: V126 = ISZERO V125
0x148: V127 = 0x174
0x14b: JUMPI 0x174 V126
---
Entry stack: [V7, 0xac, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xac, V52]

================================

Block 0x14c
[0x14c:0x173]
---
Predecessors: [0x134]
Successors: [0x174]
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f SLOAD
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 NOT
0x166 AND
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f DUP4
0x170 AND
0x171 OR
0x172 SWAP1
0x173 SSTORE
---
0x14c: V128 = 0x0
0x14f: V129 = S[0x0]
0x150: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V131 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x166: V132 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V129
0x167: V133 = 0x1
0x169: V134 = 0xa0
0x16b: V135 = 0x2
0x16d: V136 = EXP 0x2 0xa0
0x16e: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V138 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x171: V139 = OR V138 V132
0x173: S[0x0] = V139
---
Entry stack: [V7, 0xac, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xac, V52]

================================

Block 0x174
[0x174:0x174]
---
Predecessors: [0x134, 0x14c]
Successors: [0x175]
---
0x174 JUMPDEST
---
0x174: JUMPDEST 
---
Entry stack: [V7, 0xac, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xac, V52]

================================

Block 0x175
[0x175:0x175]
---
Predecessors: [0x174]
Successors: [0x176]
---
0x175 JUMPDEST
---
0x175: JUMPDEST 
---
Entry stack: [V7, 0xac, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xac, V52]

================================

Block 0x176
[0x176:0x178]
---
Predecessors: [0x175]
Successors: [0xac]
---
0x176 JUMPDEST
0x177 POP
0x178 JUMP
---
0x176: JUMPDEST 
0x178: JUMP 0xac
---
Entry stack: [V7, 0xac, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x179
[0x179:0x191]
---
Predecessors: [0xb9]
Successors: [0x192, 0x1ba]
---
0x179 JUMPDEST
0x17a PUSH1 0x0
0x17c DUP1
0x17d SLOAD
0x17e CALLER
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 SWAP1
0x188 DUP2
0x189 AND
0x18a SWAP2
0x18b AND
0x18c EQ
0x18d ISZERO
0x18e PUSH2 0x1ba
0x191 JUMPI
---
0x179: JUMPDEST 
0x17a: V140 = 0x0
0x17d: V141 = S[0x0]
0x17e: V142 = CALLER
0x17f: V143 = 0x1
0x181: V144 = 0xa0
0x183: V145 = 0x2
0x185: V146 = EXP 0x2 0xa0
0x186: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x18b: V149 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V150 = EQ V149 V148
0x18d: V151 = ISZERO V150
0x18e: V152 = 0x1ba
0x191: JUMPI 0x1ba V151
---
Entry stack: [V7, 0xcd, V66]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V7, 0xcd, V66, 0x0]

================================

Block 0x192
[0x192:0x1b9]
---
Predecessors: [0x179]
Successors: [0x1ba]
---
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a DUP3
0x19b AND
0x19c CALLVALUE
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x8fc
0x1a2 MUL
0x1a3 SWAP1
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 PUSH1 0x0
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad DUP4
0x1ae SUB
0x1af DUP2
0x1b0 DUP6
0x1b1 DUP9
0x1b2 DUP9
0x1b3 CALL
0x1b4 SWAP5
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 POP
---
0x192: V153 = 0x1
0x194: V154 = 0xa0
0x196: V155 = 0x2
0x198: V156 = EXP 0x2 0xa0
0x199: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V158 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V159 = CALLVALUE
0x19e: V160 = ISZERO V159
0x19f: V161 = 0x8fc
0x1a2: V162 = MUL 0x8fc V160
0x1a4: V163 = 0x40
0x1a6: V164 = M[0x40]
0x1a7: V165 = 0x0
0x1a9: V166 = 0x40
0x1ab: V167 = M[0x40]
0x1ae: V168 = SUB V164 V167
0x1b3: V169 = CALL V162 V158 V159 V167 V168 V167 0x0
---
Entry stack: [V7, 0xcd, V66, 0x0]
Stack pops: 2
Stack additions: [S1, V169]
Exit stack: [V7, 0xcd, V66, V169]

================================

Block 0x1ba
[0x1ba:0x1ba]
---
Predecessors: [0x179, 0x192]
Successors: [0x1bb]
---
0x1ba JUMPDEST
---
0x1ba: JUMPDEST 
---
Entry stack: [V7, 0xcd, V66, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xcd, V66, S0]

================================

Block 0x1bb
[0x1bb:0x1bb]
---
Predecessors: [0x1ba]
Successors: [0x1bc]
---
0x1bb JUMPDEST
---
0x1bb: JUMPDEST 
---
Entry stack: [V7, 0xcd, V66, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xcd, V66, S0]

================================

Block 0x1bc
[0x1bc:0x1c0]
---
Predecessors: [0x1bb]
Successors: [0xcd]
---
0x1bc JUMPDEST
0x1bd SWAP2
0x1be SWAP1
0x1bf POP
0x1c0 JUMP
---
0x1bc: JUMPDEST 
0x1c0: JUMP 0xcd
---
Entry stack: [V7, 0xcd, V66, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V7, S0]

================================

Block 0x1c1
[0x1c1:0x1d9]
---
Predecessors: [0xec]
Successors: [0x1da, 0x210]
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 SLOAD
0x1c6 CALLER
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf SWAP1
0x1d0 DUP2
0x1d1 AND
0x1d2 SWAP2
0x1d3 AND
0x1d4 EQ
0x1d5 ISZERO
0x1d6 PUSH2 0x210
0x1d9 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V170 = 0x0
0x1c5: V171 = S[0x0]
0x1c6: V172 = CALLER
0x1c7: V173 = 0x1
0x1c9: V174 = 0xa0
0x1cb: V175 = 0x2
0x1cd: V176 = EXP 0x2 0xa0
0x1ce: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x1d3: V179 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V180 = EQ V179 V178
0x1d5: V181 = ISZERO V180
0x1d6: V182 = 0x210
0x1d9: JUMPI 0x210 V181
---
Entry stack: [V7, 0xcd, V89, V91, V94, V96]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V7, 0xcd, V89, V91, V94, V96, 0x0]

================================

Block 0x1da
[0x1da:0x20f]
---
Predecessors: [0x1c1]
Successors: [0x210]
---
0x1da DUP5
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 AND
0x1e4 DUP5
0x1e5 DUP5
0x1e6 DUP5
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb DUP4
0x1ec DUP4
0x1ed DUP1
0x1ee DUP3
0x1ef DUP5
0x1f0 CALLDATACOPY
0x1f1 DUP3
0x1f2 ADD
0x1f3 SWAP2
0x1f4 POP
0x1f5 POP
0x1f6 SWAP3
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa PUSH1 0x0
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 DUP4
0x201 SUB
0x202 DUP2
0x203 DUP6
0x204 DUP8
0x205 PUSH2 0x8796
0x208 GAS
0x209 SUB
0x20a CALL
0x20b SWAP4
0x20c POP
0x20d POP
0x20e POP
0x20f POP
---
0x1db: V183 = 0x1
0x1dd: V184 = 0xa0
0x1df: V185 = 0x2
0x1e1: V186 = EXP 0x2 0xa0
0x1e2: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e3: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1e7: V189 = 0x40
0x1e9: V190 = M[0x40]
0x1f0: CALLDATACOPY V190 V94 V96
0x1f2: V191 = ADD V190 V96
0x1fa: V192 = 0x0
0x1fc: V193 = 0x40
0x1fe: V194 = M[0x40]
0x201: V195 = SUB V191 V194
0x205: V196 = 0x8796
0x208: V197 = GAS
0x209: V198 = SUB V197 0x8796
0x20a: V199 = CALL V198 V188 V91 V194 V195 V194 0x0
---
Entry stack: [V7, 0xcd, V89, V91, V94, V96, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V199]
Exit stack: [V7, 0xcd, V89, V91, V94, V96, V199]

================================

Block 0x210
[0x210:0x210]
---
Predecessors: [0x1c1, 0x1da]
Successors: [0x211]
---
0x210 JUMPDEST
---
0x210: JUMPDEST 
---
Entry stack: [V7, 0xcd, V89, V91, V94, V96, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xcd, V89, V91, V94, V96, S0]

================================

Block 0x211
[0x211:0x211]
---
Predecessors: [0x210]
Successors: [0x212]
---
0x211 JUMPDEST
---
0x211: JUMPDEST 
---
Entry stack: [V7, 0xcd, V89, V91, V94, V96, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xcd, V89, V91, V94, V96, S0]

================================

Block 0x212
[0x212:0x219]
---
Predecessors: [0x211]
Successors: [0xcd]
---
0x212 JUMPDEST
0x213 SWAP5
0x214 SWAP4
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 JUMP
---
0x212: JUMPDEST 
0x219: JUMP 0xcd
---
Entry stack: [V7, 0xcd, V89, V91, V94, V96, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V7, S0]

================================

Block 0x21a
[0x21a:0x25a]
---
Predecessors: []
Successors: []
---
0x21a STOP
0x21b LOG1
0x21c PUSH6 0x627a7a723058
0x223 SHA3
0x224 POP
0x225 AND
0x226 MISSING 0xa5
0x227 MISSING 0x23
0x228 DUP12
0x229 MISSING 0xc3
0x22a RETURNDATACOPY
0x22b MISSING 0xe0
0x22c PUSH12 0x9ff823fa5ed6afa5d850a159
0x239 MISSING 0x22
0x23a BYTE
0x23b MISSING 0xc7
0x23c MISSING 0x1f
0x23d MISSING 0xe8
0x23e SGT
0x23f MULMOD
0x240 MISSING 0xd7
0x241 DUP3
0x242 PUSH24 0x580029
---
0x21a: STOP 
0x21b: LOG S0 S1 S2
0x21c: V200 = 0x627a7a723058
0x223: V201 = SHA3 0x627a7a723058 S3
0x225: V202 = AND S4 S5
0x226: MISSING 0xa5
0x227: MISSING 0x23
0x229: MISSING 0xc3
0x22a: RETURNDATACOPY S0 S1 S2
0x22b: MISSING 0xe0
0x22c: V203 = 0x9ff823fa5ed6afa5d850a159
0x239: MISSING 0x22
0x23a: V204 = BYTE S0 S1
0x23b: MISSING 0xc7
0x23c: MISSING 0x1f
0x23d: MISSING 0xe8
0x23e: V205 = SGT S0 S1
0x23f: V206 = MULMOD V205 S2 S3
0x240: MISSING 0xd7
0x242: V207 = 0x580029
---
Entry stack: []
Stack pops: 0
Stack additions: [V202, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x9ff823fa5ed6afa5d850a159, V204, V206, 0x580029, S2, S0, S1, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0xac298dc
Entry block: 0x5e
Exit block: 0x71
Body: 0x5e, 0x65, 0x69, 0x71, 0x124, 0x131

Function 1:
Public function signature: 0x253c8bd4
Entry block: 0x8d
Exit block: 0xac
Body: 0x8d, 0x94, 0x98, 0xac, 0x134, 0x14c, 0x174, 0x175, 0x176

Function 2:
Public function signature: 0x3e58c58c
Entry block: 0xae
Exit block: 0xcd
Body: 0xae, 0xb5, 0xb9, 0xcd, 0x179, 0x192, 0x1ba, 0x1bb, 0x1bc

Function 3:
Public function signature: 0xb61d27f6
Entry block: 0xe1
Exit block: 0xcd
Body: 0xcd, 0xe1, 0xe8, 0xec, 0x1c1, 0x1da, 0x210, 0x211, 0x212

Function 4:
Public fallback function
Entry block: 0x59
Exit block: 0x59
Body: 0x59

