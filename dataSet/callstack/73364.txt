Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x74]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x74
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x74
0xa: JUMPI 0x74 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x76]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xefafd01
0x34 EQ
0x35 PUSH2 0x76
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xefafd01
0x34: V10 = EQ 0xefafd01 V8
0x35: V11 = 0x76
0x38: JUMPI 0x76 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x97]
---
0x39 DUP1
0x3a PUSH4 0x25d8dcf2
0x3f EQ
0x40 PUSH2 0x97
0x43 JUMPI
---
0x3a: V12 = 0x25d8dcf2
0x3f: V13 = EQ 0x25d8dcf2 V8
0x40: V14 = 0x97
0x43: JUMPI 0x97 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xa4]
---
0x44 DUP1
0x45 PUSH4 0x41c0e1b5
0x4a EQ
0x4b PUSH2 0xa4
0x4e JUMPI
---
0x45: V15 = 0x41c0e1b5
0x4a: V16 = EQ 0x41c0e1b5 V8
0x4b: V17 = 0xa4
0x4e: JUMPI 0xa4 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xb1]
---
0x4f DUP1
0x50 PUSH4 0x5acce36b
0x55 EQ
0x56 PUSH2 0xb1
0x59 JUMPI
---
0x50: V18 = 0x5acce36b
0x55: V19 = EQ 0x5acce36b V8
0x56: V20 = 0xb1
0x59: JUMPI 0xb1 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0xd2]
---
0x5a DUP1
0x5b PUSH4 0x6c6f1d93
0x60 EQ
0x61 PUSH2 0xd2
0x64 JUMPI
---
0x5b: V21 = 0x6c6f1d93
0x60: V22 = EQ 0x6c6f1d93 V8
0x61: V23 = 0xd2
0x64: JUMPI 0xd2 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0xf3]
---
0x65 DUP1
0x66 PUSH4 0xfdb7ecd5
0x6b EQ
0x6c PUSH2 0xf3
0x6f JUMPI
---
0x66: V24 = 0xfdb7ecd5
0x6b: V25 = EQ 0xfdb7ecd5 V8
0x6c: V26 = 0xf3
0x6f: JUMPI 0xf3 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x65]
Successors: [0x74]
---
0x70 PUSH2 0x74
0x73 JUMP
---
0x70: V27 = 0x74
0x73: JUMP 0x74
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x0, 0x70]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0xb]
Successors: [0x6c9]
---
0x76 JUMPDEST
0x77 PUSH2 0x81
0x7a PUSH1 0x4
0x7c POP
0x7d PUSH2 0x6c9
0x80 JUMP
---
0x76: JUMPDEST 
0x77: V28 = 0x81
0x7a: V29 = 0x4
0x7d: V30 = 0x6c9
0x80: JUMP 0x6c9
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x81]
Exit stack: [V8, 0x81]

================================

Block 0x81
[0x81:0x96]
---
Predecessors: [0x6d8]
Successors: []
---
0x81 JUMPDEST
0x82 PUSH1 0x40
0x84 MLOAD
0x85 DUP1
0x86 DUP3
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP2
0x8d POP
0x8e POP
0x8f PUSH1 0x40
0x91 MLOAD
0x92 DUP1
0x93 SWAP2
0x94 SUB
0x95 SWAP1
0x96 RETURN
---
0x81: JUMPDEST 
0x82: V31 = 0x40
0x84: V32 = M[0x40]
0x88: M[V32] = V458
0x89: V33 = 0x20
0x8b: V34 = ADD 0x20 V32
0x8f: V35 = 0x40
0x91: V36 = M[0x40]
0x94: V37 = SUB V34 V36
0x96: RETURN V36 V37
---
Entry stack: [V8, V458]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x39]
Successors: [0x200]
---
0x97 JUMPDEST
0x98 PUSH2 0xa2
0x9b PUSH1 0x4
0x9d POP
0x9e PUSH2 0x200
0xa1 JUMP
---
0x97: JUMPDEST 
0x98: V38 = 0xa2
0x9b: V39 = 0x4
0x9e: V40 = 0x200
0xa1: JUMP 0x200
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xa2]
Exit stack: [V8, 0xa2]

================================

Block 0xa2
[0xa2:0xa3]
---
Predecessors: [0x647]
Successors: []
---
0xa2 JUMPDEST
0xa3 STOP
---
0xa2: JUMPDEST 
0xa3: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x44]
Successors: [0x16c]
---
0xa4 JUMPDEST
0xa5 PUSH2 0xaf
0xa8 PUSH1 0x4
0xaa POP
0xab PUSH2 0x16c
0xae JUMP
---
0xa4: JUMPDEST 
0xa5: V41 = 0xaf
0xa8: V42 = 0x4
0xab: V43 = 0x16c
0xae: JUMP 0x16c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V8, 0xaf]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x1fe]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xb1
[0xb1:0xbb]
---
Predecessors: [0x4f]
Successors: [0x6ed]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xbc
0xb5 PUSH1 0x4
0xb7 POP
0xb8 PUSH2 0x6ed
0xbb JUMP
---
0xb1: JUMPDEST 
0xb2: V44 = 0xbc
0xb5: V45 = 0x4
0xb8: V46 = 0x6ed
0xbb: JUMP 0x6ed
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xbc]
Exit stack: [V8, 0xbc]

================================

Block 0xbc
[0xbc:0xd1]
---
Predecessors: [0x70e]
Successors: []
---
0xbc JUMPDEST
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 DUP3
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP2
0xc8 POP
0xc9 POP
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce SWAP2
0xcf SUB
0xd0 SWAP1
0xd1 RETURN
---
0xbc: JUMPDEST 
0xbd: V47 = 0x40
0xbf: V48 = M[0x40]
0xc3: M[V48] = V469
0xc4: V49 = 0x20
0xc6: V50 = ADD 0x20 V48
0xca: V51 = 0x40
0xcc: V52 = M[0x40]
0xcf: V53 = SUB V50 V52
0xd1: RETURN V52 V53
---
Entry stack: [V8, V469]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xd2
[0xd2:0xdc]
---
Predecessors: [0x5a]
Successors: [0x6db]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xdd
0xd6 PUSH1 0x4
0xd8 POP
0xd9 PUSH2 0x6db
0xdc JUMP
---
0xd2: JUMPDEST 
0xd3: V54 = 0xdd
0xd6: V55 = 0x4
0xd9: V56 = 0x6db
0xdc: JUMP 0x6db
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V8, 0xdd]

================================

Block 0xdd
[0xdd:0xf2]
---
Predecessors: [0x6ea]
Successors: []
---
0xdd JUMPDEST
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP3
0xe3 DUP2
0xe4 MSTORE
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP2
0xe9 POP
0xea POP
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef SWAP2
0xf0 SUB
0xf1 SWAP1
0xf2 RETURN
---
0xdd: JUMPDEST 
0xde: V57 = 0x40
0xe0: V58 = M[0x40]
0xe4: M[V58] = V463
0xe5: V59 = 0x20
0xe7: V60 = ADD 0x20 V58
0xeb: V61 = 0x40
0xed: V62 = M[0x40]
0xf0: V63 = SUB V60 V62
0xf2: RETURN V62 V63
---
Entry stack: [V8, V463]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xf3
[0xf3:0xfd]
---
Predecessors: [0x65]
Successors: [0x64b]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfe
0xf7 PUSH1 0x4
0xf9 POP
0xfa PUSH2 0x64b
0xfd JUMP
---
0xf3: JUMPDEST 
0xf4: V64 = 0xfe
0xf7: V65 = 0x4
0xfa: V66 = 0x64b
0xfd: JUMP 0x64b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V8, 0xfe]

================================

Block 0xfe
[0xfe:0x144]
---
Predecessors: [0x6c6]
Successors: [0x145, 0x15e]
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 MLOAD
0x102 DUP1
0x103 DUP1
0x104 PUSH1 0x20
0x106 ADD
0x107 DUP3
0x108 DUP2
0x109 SUB
0x10a DUP3
0x10b MSTORE
0x10c DUP4
0x10d DUP2
0x10e DUP2
0x10f MLOAD
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP2
0x116 POP
0x117 DUP1
0x118 MLOAD
0x119 SWAP1
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e DUP1
0x11f DUP4
0x120 DUP4
0x121 DUP3
0x122 SWAP1
0x123 PUSH1 0x0
0x125 PUSH1 0x4
0x127 PUSH1 0x20
0x129 DUP5
0x12a PUSH1 0x1f
0x12c ADD
0x12d DIV
0x12e PUSH1 0x3
0x130 MUL
0x131 PUSH1 0xf
0x133 ADD
0x134 CALL
0x135 POP
0x136 SWAP1
0x137 POP
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b SWAP1
0x13c PUSH1 0x1f
0x13e AND
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x15e
0x144 JUMPI
---
0xfe: JUMPDEST 
0xff: V67 = 0x40
0x101: V68 = M[0x40]
0x104: V69 = 0x20
0x106: V70 = ADD 0x20 V68
0x109: V71 = SUB V70 V68
0x10b: M[V68] = V71
0x10f: V72 = M[V430]
0x111: M[V70] = V72
0x112: V73 = 0x20
0x114: V74 = ADD 0x20 V70
0x118: V75 = M[V430]
0x11a: V76 = 0x20
0x11c: V77 = ADD 0x20 V430
0x123: V78 = 0x0
0x125: V79 = 0x4
0x127: V80 = 0x20
0x12a: V81 = 0x1f
0x12c: V82 = ADD 0x1f V75
0x12d: V83 = DIV V82 0x20
0x12e: V84 = 0x3
0x130: V85 = MUL 0x3 V83
0x131: V86 = 0xf
0x133: V87 = ADD 0xf V85
0x134: V88 = CALL V87 0x4 0x0 V77 V75 V74 V75
0x13a: V89 = ADD V75 V74
0x13c: V90 = 0x1f
0x13e: V91 = AND 0x1f V75
0x140: V92 = ISZERO V91
0x141: V93 = 0x15e
0x144: JUMPI 0x15e V92
---
Entry stack: [V8, V430]
Stack pops: 1
Stack additions: [S0, V68, V68, V89, V91]
Exit stack: [V8, V430, V68, V68, V89, V91]

================================

Block 0x145
[0x145:0x15d]
---
Predecessors: [0xfe]
Successors: [0x15e]
---
0x145 DUP1
0x146 DUP3
0x147 SUB
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x1
0x14c DUP4
0x14d PUSH1 0x20
0x14f SUB
0x150 PUSH2 0x100
0x153 EXP
0x154 SUB
0x155 NOT
0x156 AND
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c SWAP2
0x15d POP
---
0x147: V94 = SUB V89 V91
0x149: V95 = M[V94]
0x14a: V96 = 0x1
0x14d: V97 = 0x20
0x14f: V98 = SUB 0x20 V91
0x150: V99 = 0x100
0x153: V100 = EXP 0x100 V98
0x154: V101 = SUB V100 0x1
0x155: V102 = NOT V101
0x156: V103 = AND V102 V95
0x158: M[V94] = V103
0x159: V104 = 0x20
0x15b: V105 = ADD 0x20 V94
---
Entry stack: [V8, V430, V68, V68, V89, V91]
Stack pops: 2
Stack additions: [V105, S0]
Exit stack: [V8, V430, V68, V68, V105, V91]

================================

Block 0x15e
[0x15e:0x16b]
---
Predecessors: [0xfe, 0x145]
Successors: []
---
0x15e JUMPDEST
0x15f POP
0x160 SWAP3
0x161 POP
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x15e: JUMPDEST 
0x164: V106 = 0x40
0x166: V107 = M[0x40]
0x169: V108 = SUB S1 V107
0x16b: RETURN V107 V108
---
Entry stack: [V8, V430, V68, V68, S1, V91]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x16c
[0x16c:0x1c2]
---
Predecessors: [0xa4]
Successors: [0x1c3, 0x1fd]
---
0x16c JUMPDEST
0x16d PUSH1 0x0
0x16f PUSH1 0x0
0x171 SWAP1
0x172 SLOAD
0x173 SWAP1
0x174 PUSH2 0x100
0x177 EXP
0x178 SWAP1
0x179 DIV
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f AND
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 CALLER
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd EQ
0x1be ISZERO
0x1bf PUSH2 0x1fd
0x1c2 JUMPI
---
0x16c: JUMPDEST 
0x16d: V109 = 0x0
0x16f: V110 = 0x0
0x172: V111 = S[0x0]
0x174: V112 = 0x100
0x177: V113 = EXP 0x100 0x0
0x179: V114 = DIV V111 0x1
0x17a: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x190: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1a6: V119 = CALLER
0x1a7: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1bd: V122 = EQ V121 V118
0x1be: V123 = ISZERO V122
0x1bf: V124 = 0x1fd
0x1c2: JUMPI 0x1fd V123
---
Entry stack: [V8, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaf]

================================

Block 0x1c3
[0x1c3:0x1fc]
---
Predecessors: [0x16c]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 PUSH1 0x0
0x1c7 SWAP1
0x1c8 SLOAD
0x1c9 SWAP1
0x1ca PUSH2 0x100
0x1cd EXP
0x1ce SWAP1
0x1cf DIV
0x1d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e5 AND
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc SELFDESTRUCT
---
0x1c3: V125 = 0x0
0x1c5: V126 = 0x0
0x1c8: V127 = S[0x0]
0x1ca: V128 = 0x100
0x1cd: V129 = EXP 0x100 0x0
0x1cf: V130 = DIV V127 0x1
0x1d0: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1e6: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x1fc: SELFDESTRUCT V134
---
Entry stack: [V8, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaf]

================================

Block 0x1fd
[0x1fd:0x1fd]
---
Predecessors: [0x16c]
Successors: [0x1fe]
---
0x1fd JUMPDEST
---
0x1fd: JUMPDEST 
---
Entry stack: [V8, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaf]

================================

Block 0x1fe
[0x1fe:0x1ff]
---
Predecessors: [0x1fd]
Successors: [0xaf]
---
0x1fe JUMPDEST
0x1ff JUMP
---
0x1fe: JUMPDEST 
0x1ff: JUMP 0xaf
---
Entry stack: [V8, 0xaf]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x200
[0x200:0x21c]
---
Predecessors: [0x97]
Successors: [0x21d, 0x23b]
---
0x200 JUMPDEST
0x201 PUSH1 0x0
0x203 PUSH1 0x0
0x205 PUSH16 0xffffffffffffffffffffffffffffffff
0x216 CALLVALUE
0x217 GT
0x218 DUP1
0x219 PUSH2 0x23b
0x21c JUMPI
---
0x200: JUMPDEST 
0x201: V135 = 0x0
0x203: V136 = 0x0
0x205: V137 = 0xffffffffffffffffffffffffffffffff
0x216: V138 = CALLVALUE
0x217: V139 = GT V138 0xffffffffffffffffffffffffffffffff
0x219: V140 = 0x23b
0x21c: JUMPI 0x23b V139
---
Entry stack: [V8, 0xa2]
Stack pops: 0
Stack additions: [0x0, 0x0, V139]
Exit stack: [V8, 0xa2, 0x0, 0x0, V139]

================================

Block 0x21d
[0x21d:0x23a]
---
Predecessors: [0x200]
Successors: [0x23b]
---
0x21d POP
0x21e PUSH1 0x2
0x220 ADDRESS
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 BALANCE
0x238 MUL
0x239 CALLVALUE
0x23a GT
---
0x21e: V141 = 0x2
0x220: V142 = ADDRESS
0x221: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x237: V145 = BALANCE V144
0x238: V146 = MUL V145 0x2
0x239: V147 = CALLVALUE
0x23a: V148 = GT V147 V146
---
Entry stack: [V8, 0xa2, 0x0, 0x0, V139]
Stack pops: 1
Stack additions: [V148]
Exit stack: [V8, 0xa2, 0x0, 0x0, V148]

================================

Block 0x23b
[0x23b:0x240]
---
Predecessors: [0x200, 0x21d]
Successors: [0x241, 0x33e]
---
0x23b JUMPDEST
0x23c ISZERO
0x23d PUSH2 0x33e
0x240 JUMPI
---
0x23b: JUMPDEST 
0x23c: V149 = ISZERO S0
0x23d: V150 = 0x33e
0x240: JUMPI 0x33e V149
---
Entry stack: [V8, 0xa2, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x241
[0x241:0x2da]
---
Predecessors: [0x23b]
Successors: [0x2db, 0x2fd]
---
0x241 CALLER
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 PUSH1 0x0
0x25a CALLVALUE
0x25b PUSH1 0x40
0x25d MLOAD
0x25e DUP1
0x25f SWAP1
0x260 POP
0x261 PUSH1 0x0
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 DUP4
0x268 SUB
0x269 DUP2
0x26a DUP6
0x26b DUP9
0x26c DUP9
0x26d CALL
0x26e SWAP4
0x26f POP
0x270 POP
0x271 POP
0x272 POP
0x273 POP
0x274 PUSH1 0x40
0x276 PUSH1 0x40
0x278 MLOAD
0x279 SWAP1
0x27a DUP2
0x27b ADD
0x27c PUSH1 0x40
0x27e MSTORE
0x27f DUP1
0x280 PUSH1 0xf
0x282 DUP2
0x283 MSTORE
0x284 PUSH1 0x20
0x286 ADD
0x287 PUSH32 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x2a8 DUP2
0x2a9 MSTORE
0x2aa PUSH1 0x20
0x2ac ADD
0x2ad POP
0x2ae PUSH1 0x3
0x2b0 PUSH1 0x0
0x2b2 POP
0x2b3 SWAP1
0x2b4 DUP1
0x2b5 MLOAD
0x2b6 SWAP1
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba SWAP1
0x2bb DUP3
0x2bc DUP1
0x2bd SLOAD
0x2be DUP3
0x2bf DUP3
0x2c0 SSTORE
0x2c1 SWAP1
0x2c2 PUSH1 0x0
0x2c4 MSTORE
0x2c5 PUSH1 0x20
0x2c7 PUSH1 0x0
0x2c9 SHA3
0x2ca SWAP1
0x2cb PUSH1 0x1f
0x2cd ADD
0x2ce PUSH1 0x20
0x2d0 SWAP1
0x2d1 DIV
0x2d2 DUP2
0x2d3 ADD
0x2d4 SWAP3
0x2d5 DUP3
0x2d6 ISZERO
0x2d7 PUSH2 0x2fd
0x2da JUMPI
---
0x241: V151 = CALLER
0x242: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x258: V154 = 0x0
0x25a: V155 = CALLVALUE
0x25b: V156 = 0x40
0x25d: V157 = M[0x40]
0x261: V158 = 0x0
0x263: V159 = 0x40
0x265: V160 = M[0x40]
0x268: V161 = SUB V157 V160
0x26d: V162 = CALL 0x0 V153 V155 V160 V161 V160 0x0
0x274: V163 = 0x40
0x276: V164 = 0x40
0x278: V165 = M[0x40]
0x27b: V166 = ADD V165 0x40
0x27c: V167 = 0x40
0x27e: M[0x40] = V166
0x280: V168 = 0xf
0x283: M[V165] = 0xf
0x284: V169 = 0x20
0x286: V170 = ADD 0x20 V165
0x287: V171 = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x2a9: M[V170] = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x2aa: V172 = 0x20
0x2ac: V173 = ADD 0x20 V170
0x2ae: V174 = 0x3
0x2b0: V175 = 0x0
0x2b5: V176 = M[V165]
0x2b7: V177 = 0x20
0x2b9: V178 = ADD 0x20 V165
0x2bd: V179 = S[0x3]
0x2c0: S[0x3] = V176
0x2c2: V180 = 0x0
0x2c4: M[0x0] = 0x3
0x2c5: V181 = 0x20
0x2c7: V182 = 0x0
0x2c9: V183 = SHA3 0x0 0x20
0x2cb: V184 = 0x1f
0x2cd: V185 = ADD 0x1f V179
0x2ce: V186 = 0x20
0x2d1: V187 = DIV V185 0x20
0x2d3: V188 = ADD V183 V187
0x2d6: V189 = ISZERO V176
0x2d7: V190 = 0x2fd
0x2da: JUMPI 0x2fd V189
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V188, V176, V183, V178]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, V176, V183, V178]

================================

Block 0x2db
[0x2db:0x2dd]
---
Predecessors: [0x241]
Successors: [0x2de]
---
0x2db SWAP2
0x2dc DUP3
0x2dd ADD
---
0x2dd: V191 = ADD V178 V176
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, V176, V183, V178]
Stack pops: 3
Stack additions: [S0, S1, V191]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, V178, V183, V191]

================================

Block 0x2de
[0x2de:0x2e6]
---
Predecessors: [0x2db, 0x2e7]
Successors: [0x2e7, 0x2fc]
---
0x2de JUMPDEST
0x2df DUP3
0x2e0 DUP2
0x2e1 GT
0x2e2 ISZERO
0x2e3 PUSH2 0x2fc
0x2e6 JUMPI
---
0x2de: JUMPDEST 
0x2e1: V192 = GT V191 S2
0x2e2: V193 = ISZERO V192
0x2e3: V194 = 0x2fc
0x2e6: JUMPI 0x2fc V193
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, S2, S1, V191]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, S2, S1, V191]

================================

Block 0x2e7
[0x2e7:0x2fb]
---
Predecessors: [0x2de]
Successors: [0x2de]
---
0x2e7 DUP3
0x2e8 MLOAD
0x2e9 DUP3
0x2ea PUSH1 0x0
0x2ec POP
0x2ed SSTORE
0x2ee SWAP2
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 SWAP2
0x2f3 SWAP1
0x2f4 PUSH1 0x1
0x2f6 ADD
0x2f7 SWAP1
0x2f8 PUSH2 0x2de
0x2fb JUMP
---
0x2e8: V195 = M[S2]
0x2ea: V196 = 0x0
0x2ed: S[S1] = V195
0x2ef: V197 = 0x20
0x2f1: V198 = ADD 0x20 S2
0x2f4: V199 = 0x1
0x2f6: V200 = ADD 0x1 S1
0x2f8: V201 = 0x2de
0x2fb: JUMP 0x2de
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, S2, S1, V191]
Stack pops: 3
Stack additions: [V198, V200, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, V198, V200, V191]

================================

Block 0x2fc
[0x2fc:0x2fc]
---
Predecessors: [0x2de]
Successors: [0x2fd]
---
0x2fc JUMPDEST
---
0x2fc: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, S2, S1, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, S2, S1, V191]

================================

Block 0x2fd
[0x2fd:0x309]
---
Predecessors: [0x241, 0x2fc]
Successors: [0x30a]
---
0x2fd JUMPDEST
0x2fe POP
0x2ff SWAP1
0x300 POP
0x301 PUSH2 0x328
0x304 SWAP2
0x305 SWAP1
0x306 PUSH2 0x30a
0x309 JUMP
---
0x2fd: JUMPDEST 
0x301: V202 = 0x328
0x306: V203 = 0x30a
0x309: JUMP 0x30a
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188, S2, S1, S0]
Stack pops: 4
Stack additions: [0x328, S3, S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x328, V188, S1]

================================

Block 0x30a
[0x30a:0x312]
---
Predecessors: [0x2fd, 0x313]
Successors: [0x313, 0x324]
---
0x30a JUMPDEST
0x30b DUP1
0x30c DUP3
0x30d GT
0x30e ISZERO
0x30f PUSH2 0x324
0x312 JUMPI
---
0x30a: JUMPDEST 
0x30d: V204 = GT V188 S0
0x30e: V205 = ISZERO V204
0x30f: V206 = 0x324
0x312: JUMPI 0x324 V205
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x328, V188, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x328, V188, S0]

================================

Block 0x313
[0x313:0x323]
---
Predecessors: [0x30a]
Successors: [0x30a]
---
0x313 PUSH1 0x0
0x315 DUP2
0x316 DUP2
0x317 POP
0x318 PUSH1 0x0
0x31a SWAP1
0x31b SSTORE
0x31c POP
0x31d PUSH1 0x1
0x31f ADD
0x320 PUSH2 0x30a
0x323 JUMP
---
0x313: V207 = 0x0
0x318: V208 = 0x0
0x31b: S[S0] = 0x0
0x31d: V209 = 0x1
0x31f: V210 = ADD 0x1 S0
0x320: V211 = 0x30a
0x323: JUMP 0x30a
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x328, V188, S0]
Stack pops: 1
Stack additions: [V210]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x328, V188, V210]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x30a]
Successors: [0x328]
---
0x324 JUMPDEST
0x325 POP
0x326 SWAP1
0x327 JUMP
---
0x324: JUMPDEST 
0x327: JUMP 0x328
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x328, V188, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188]

================================

Block 0x328
[0x328:0x339]
---
Predecessors: [0x324]
Successors: [0x647]
---
0x328 JUMPDEST
0x329 POP
0x32a POP
0x32b PUSH1 0x0
0x32d PUSH1 0x2
0x32f PUSH1 0x0
0x331 POP
0x332 DUP2
0x333 SWAP1
0x334 SSTORE
0x335 POP
0x336 PUSH2 0x647
0x339 JUMP
---
0x328: JUMPDEST 
0x32b: V212 = 0x0
0x32d: V213 = 0x2
0x32f: V214 = 0x0
0x334: S[0x2] = 0x0
0x336: V215 = 0x647
0x339: JUMP 0x647
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V188]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: []
Successors: [0x40f]
---
0x33a PUSH2 0x40f
0x33d JUMP
---
0x33a: V216 = 0x40f
0x33d: JUMP 0x40f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x33e
[0x33e:0x347]
---
Predecessors: [0x23b]
Successors: [0x348, 0x40e]
---
0x33e JUMPDEST
0x33f PUSH1 0x0
0x341 CALLVALUE
0x342 EQ
0x343 ISZERO
0x344 PUSH2 0x40e
0x347 JUMPI
---
0x33e: JUMPDEST 
0x33f: V217 = 0x0
0x341: V218 = CALLVALUE
0x342: V219 = EQ V218 0x0
0x343: V220 = ISZERO V219
0x344: V221 = 0x40e
0x347: JUMPI 0x40e V220
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x348
[0x348:0x3ae]
---
Predecessors: [0x33e]
Successors: [0x3af, 0x3d1]
---
0x348 PUSH1 0x40
0x34a PUSH1 0x40
0x34c MLOAD
0x34d SWAP1
0x34e DUP2
0x34f ADD
0x350 PUSH1 0x40
0x352 MSTORE
0x353 DUP1
0x354 PUSH1 0xe
0x356 DUP2
0x357 MSTORE
0x358 PUSH1 0x20
0x35a ADD
0x35b PUSH32 0x776167657220776173207a65726f000000000000000000000000000000000000
0x37c DUP2
0x37d MSTORE
0x37e PUSH1 0x20
0x380 ADD
0x381 POP
0x382 PUSH1 0x3
0x384 PUSH1 0x0
0x386 POP
0x387 SWAP1
0x388 DUP1
0x389 MLOAD
0x38a SWAP1
0x38b PUSH1 0x20
0x38d ADD
0x38e SWAP1
0x38f DUP3
0x390 DUP1
0x391 SLOAD
0x392 DUP3
0x393 DUP3
0x394 SSTORE
0x395 SWAP1
0x396 PUSH1 0x0
0x398 MSTORE
0x399 PUSH1 0x20
0x39b PUSH1 0x0
0x39d SHA3
0x39e SWAP1
0x39f PUSH1 0x1f
0x3a1 ADD
0x3a2 PUSH1 0x20
0x3a4 SWAP1
0x3a5 DIV
0x3a6 DUP2
0x3a7 ADD
0x3a8 SWAP3
0x3a9 DUP3
0x3aa ISZERO
0x3ab PUSH2 0x3d1
0x3ae JUMPI
---
0x348: V222 = 0x40
0x34a: V223 = 0x40
0x34c: V224 = M[0x40]
0x34f: V225 = ADD V224 0x40
0x350: V226 = 0x40
0x352: M[0x40] = V225
0x354: V227 = 0xe
0x357: M[V224] = 0xe
0x358: V228 = 0x20
0x35a: V229 = ADD 0x20 V224
0x35b: V230 = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x37d: M[V229] = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x37e: V231 = 0x20
0x380: V232 = ADD 0x20 V229
0x382: V233 = 0x3
0x384: V234 = 0x0
0x389: V235 = M[V224]
0x38b: V236 = 0x20
0x38d: V237 = ADD 0x20 V224
0x391: V238 = S[0x3]
0x394: S[0x3] = V235
0x396: V239 = 0x0
0x398: M[0x0] = 0x3
0x399: V240 = 0x20
0x39b: V241 = 0x0
0x39d: V242 = SHA3 0x0 0x20
0x39f: V243 = 0x1f
0x3a1: V244 = ADD 0x1f V238
0x3a2: V245 = 0x20
0x3a5: V246 = DIV V244 0x20
0x3a7: V247 = ADD V242 V246
0x3aa: V248 = ISZERO V235
0x3ab: V249 = 0x3d1
0x3ae: JUMPI 0x3d1 V248
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V247, V235, V242, V237]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, V235, V242, V237]

================================

Block 0x3af
[0x3af:0x3b1]
---
Predecessors: [0x348]
Successors: [0x3b2]
---
0x3af SWAP2
0x3b0 DUP3
0x3b1 ADD
---
0x3b1: V250 = ADD V237 V235
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, V235, V242, V237]
Stack pops: 3
Stack additions: [S0, S1, V250]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, V237, V242, V250]

================================

Block 0x3b2
[0x3b2:0x3ba]
---
Predecessors: [0x3af, 0x3bb]
Successors: [0x3bb, 0x3d0]
---
0x3b2 JUMPDEST
0x3b3 DUP3
0x3b4 DUP2
0x3b5 GT
0x3b6 ISZERO
0x3b7 PUSH2 0x3d0
0x3ba JUMPI
---
0x3b2: JUMPDEST 
0x3b5: V251 = GT V250 S2
0x3b6: V252 = ISZERO V251
0x3b7: V253 = 0x3d0
0x3ba: JUMPI 0x3d0 V252
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, S2, S1, V250]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, S2, S1, V250]

================================

Block 0x3bb
[0x3bb:0x3cf]
---
Predecessors: [0x3b2]
Successors: [0x3b2]
---
0x3bb DUP3
0x3bc MLOAD
0x3bd DUP3
0x3be PUSH1 0x0
0x3c0 POP
0x3c1 SSTORE
0x3c2 SWAP2
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 SWAP2
0x3c7 SWAP1
0x3c8 PUSH1 0x1
0x3ca ADD
0x3cb SWAP1
0x3cc PUSH2 0x3b2
0x3cf JUMP
---
0x3bc: V254 = M[S2]
0x3be: V255 = 0x0
0x3c1: S[S1] = V254
0x3c3: V256 = 0x20
0x3c5: V257 = ADD 0x20 S2
0x3c8: V258 = 0x1
0x3ca: V259 = ADD 0x1 S1
0x3cc: V260 = 0x3b2
0x3cf: JUMP 0x3b2
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, S2, S1, V250]
Stack pops: 3
Stack additions: [V257, V259, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, V257, V259, V250]

================================

Block 0x3d0
[0x3d0:0x3d0]
---
Predecessors: [0x3b2]
Successors: [0x3d1]
---
0x3d0 JUMPDEST
---
0x3d0: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, S2, S1, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, S2, S1, V250]

================================

Block 0x3d1
[0x3d1:0x3dd]
---
Predecessors: [0x348, 0x3d0]
Successors: [0x3de]
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 SWAP1
0x3d4 POP
0x3d5 PUSH2 0x3fc
0x3d8 SWAP2
0x3d9 SWAP1
0x3da PUSH2 0x3de
0x3dd JUMP
---
0x3d1: JUMPDEST 
0x3d5: V261 = 0x3fc
0x3da: V262 = 0x3de
0x3dd: JUMP 0x3de
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3fc, S3, S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3fc, V247, S1]

================================

Block 0x3de
[0x3de:0x3e6]
---
Predecessors: [0x3d1, 0x3e7]
Successors: [0x3e7, 0x3f8]
---
0x3de JUMPDEST
0x3df DUP1
0x3e0 DUP3
0x3e1 GT
0x3e2 ISZERO
0x3e3 PUSH2 0x3f8
0x3e6 JUMPI
---
0x3de: JUMPDEST 
0x3e1: V263 = GT V247 S0
0x3e2: V264 = ISZERO V263
0x3e3: V265 = 0x3f8
0x3e6: JUMPI 0x3f8 V264
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3fc, V247, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3fc, V247, S0]

================================

Block 0x3e7
[0x3e7:0x3f7]
---
Predecessors: [0x3de]
Successors: [0x3de]
---
0x3e7 PUSH1 0x0
0x3e9 DUP2
0x3ea DUP2
0x3eb POP
0x3ec PUSH1 0x0
0x3ee SWAP1
0x3ef SSTORE
0x3f0 POP
0x3f1 PUSH1 0x1
0x3f3 ADD
0x3f4 PUSH2 0x3de
0x3f7 JUMP
---
0x3e7: V266 = 0x0
0x3ec: V267 = 0x0
0x3ef: S[S0] = 0x0
0x3f1: V268 = 0x1
0x3f3: V269 = ADD 0x1 S0
0x3f4: V270 = 0x3de
0x3f7: JUMP 0x3de
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3fc, V247, S0]
Stack pops: 1
Stack additions: [V269]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3fc, V247, V269]

================================

Block 0x3f8
[0x3f8:0x3fb]
---
Predecessors: [0x3de]
Successors: [0x3fc]
---
0x3f8 JUMPDEST
0x3f9 POP
0x3fa SWAP1
0x3fb JUMP
---
0x3f8: JUMPDEST 
0x3fb: JUMP 0x3fc
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, 0x3fc, V247, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247]

================================

Block 0x3fc
[0x3fc:0x40d]
---
Predecessors: [0x3f8]
Successors: [0x647]
---
0x3fc JUMPDEST
0x3fd POP
0x3fe POP
0x3ff PUSH1 0x0
0x401 PUSH1 0x2
0x403 PUSH1 0x0
0x405 POP
0x406 DUP2
0x407 SWAP1
0x408 SSTORE
0x409 POP
0x40a PUSH2 0x647
0x40d JUMP
---
0x3fc: JUMPDEST 
0x3ff: V271 = 0x0
0x401: V272 = 0x2
0x403: V273 = 0x0
0x408: S[0x2] = 0x0
0x40a: V274 = 0x647
0x40d: JUMP 0x647
---
Entry stack: [V8, 0xa2, 0x0, 0x0, 0x3, V247]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x40e
[0x40e:0x40e]
---
Predecessors: [0x33e]
Successors: [0x40f]
---
0x40e JUMPDEST
---
0x40e: JUMPDEST 
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, 0x0, 0x0]

================================

Block 0x40f
[0x40f:0x41a]
---
Predecessors: [0x33a, 0x40e]
Successors: [0x711]
---
0x40f JUMPDEST
0x410 CALLVALUE
0x411 SWAP2
0x412 POP
0x413 PUSH2 0x41b
0x416 DUP3
0x417 PUSH2 0x711
0x41a JUMP
---
0x40f: JUMPDEST 
0x410: V275 = CALLVALUE
0x413: V276 = 0x41b
0x417: V277 = 0x711
0x41a: JUMP 0x711
---
Entry stack: [V8, 0xa2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V275, S0, 0x41b, V275]
Exit stack: [V8, 0xa2, V275, 0x0, 0x41b, V275]

================================

Block 0x41b
[0x41b:0x429]
---
Predecessors: [0x796]
Successors: [0x42a, 0x527]
---
0x41b JUMPDEST
0x41c SWAP1
0x41d POP
0x41e PUSH1 0x0
0x420 PUSH1 0x2
0x422 DUP3
0x423 MOD
0x424 EQ
0x425 ISZERO
0x426 PUSH2 0x527
0x429 JUMPI
---
0x41b: JUMPDEST 
0x41e: V278 = 0x0
0x420: V279 = 0x2
0x423: V280 = MOD V498 0x2
0x424: V281 = EQ V280 0x0
0x425: V282 = ISZERO V281
0x426: V283 = 0x527
0x429: JUMPI 0x527 V282
---
Entry stack: [V8, 0xa2, V275, 0x0, V498]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, 0xa2, V275, V498]

================================

Block 0x42a
[0x42a:0x4ce]
---
Predecessors: [0x41b]
Successors: [0x4cf, 0x4f1]
---
0x42a PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x44b DUP3
0x44c PUSH16 0xffffffffffffffffffffffffffffffff
0x45d AND
0x45e MUL
0x45f PUSH1 0x2
0x461 PUSH1 0x0
0x463 POP
0x464 DUP2
0x465 SWAP1
0x466 SSTORE
0x467 POP
0x468 PUSH1 0x40
0x46a PUSH1 0x40
0x46c MLOAD
0x46d SWAP1
0x46e DUP2
0x46f ADD
0x470 PUSH1 0x40
0x472 MSTORE
0x473 DUP1
0x474 PUSH1 0x4
0x476 DUP2
0x477 MSTORE
0x478 PUSH1 0x20
0x47a ADD
0x47b PUSH32 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x49c DUP2
0x49d MSTORE
0x49e PUSH1 0x20
0x4a0 ADD
0x4a1 POP
0x4a2 PUSH1 0x3
0x4a4 PUSH1 0x0
0x4a6 POP
0x4a7 SWAP1
0x4a8 DUP1
0x4a9 MLOAD
0x4aa SWAP1
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae SWAP1
0x4af DUP3
0x4b0 DUP1
0x4b1 SLOAD
0x4b2 DUP3
0x4b3 DUP3
0x4b4 SSTORE
0x4b5 SWAP1
0x4b6 PUSH1 0x0
0x4b8 MSTORE
0x4b9 PUSH1 0x20
0x4bb PUSH1 0x0
0x4bd SHA3
0x4be SWAP1
0x4bf PUSH1 0x1f
0x4c1 ADD
0x4c2 PUSH1 0x20
0x4c4 SWAP1
0x4c5 DIV
0x4c6 DUP2
0x4c7 ADD
0x4c8 SWAP3
0x4c9 DUP3
0x4ca ISZERO
0x4cb PUSH2 0x4f1
0x4ce JUMPI
---
0x42a: V284 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x44c: V285 = 0xffffffffffffffffffffffffffffffff
0x45d: V286 = AND 0xffffffffffffffffffffffffffffffff V275
0x45e: V287 = MUL V286 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x45f: V288 = 0x2
0x461: V289 = 0x0
0x466: S[0x2] = V287
0x468: V290 = 0x40
0x46a: V291 = 0x40
0x46c: V292 = M[0x40]
0x46f: V293 = ADD V292 0x40
0x470: V294 = 0x40
0x472: M[0x40] = V293
0x474: V295 = 0x4
0x477: M[V292] = 0x4
0x478: V296 = 0x20
0x47a: V297 = ADD 0x20 V292
0x47b: V298 = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x49d: M[V297] = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x49e: V299 = 0x20
0x4a0: V300 = ADD 0x20 V297
0x4a2: V301 = 0x3
0x4a4: V302 = 0x0
0x4a9: V303 = M[V292]
0x4ab: V304 = 0x20
0x4ad: V305 = ADD 0x20 V292
0x4b1: V306 = S[0x3]
0x4b4: S[0x3] = V303
0x4b6: V307 = 0x0
0x4b8: M[0x0] = 0x3
0x4b9: V308 = 0x20
0x4bb: V309 = 0x0
0x4bd: V310 = SHA3 0x0 0x20
0x4bf: V311 = 0x1f
0x4c1: V312 = ADD 0x1f V306
0x4c2: V313 = 0x20
0x4c5: V314 = DIV V312 0x20
0x4c7: V315 = ADD V310 V314
0x4ca: V316 = ISZERO V303
0x4cb: V317 = 0x4f1
0x4ce: JUMPI 0x4f1 V316
---
Entry stack: [V8, 0xa2, V275, V498]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V315, V303, V310, V305]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V315, V303, V310, V305]

================================

Block 0x4cf
[0x4cf:0x4d1]
---
Predecessors: [0x42a]
Successors: [0x4d2]
---
0x4cf SWAP2
0x4d0 DUP3
0x4d1 ADD
---
0x4d1: V318 = ADD V305 V303
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V315, V303, V310, V305]
Stack pops: 3
Stack additions: [S0, S1, V318]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V315, V305, V310, V318]

================================

Block 0x4d2
[0x4d2:0x4da]
---
Predecessors: [0x4cf, 0x4db]
Successors: [0x4db, 0x4f0]
---
0x4d2 JUMPDEST
0x4d3 DUP3
0x4d4 DUP2
0x4d5 GT
0x4d6 ISZERO
0x4d7 PUSH2 0x4f0
0x4da JUMPI
---
0x4d2: JUMPDEST 
0x4d5: V319 = GT V318 S2
0x4d6: V320 = ISZERO V319
0x4d7: V321 = 0x4f0
0x4da: JUMPI 0x4f0 V320
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V315, S2, S1, V318]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V315, S2, S1, V318]

================================

Block 0x4db
[0x4db:0x4ef]
---
Predecessors: [0x4d2]
Successors: [0x4d2]
---
0x4db DUP3
0x4dc MLOAD
0x4dd DUP3
0x4de PUSH1 0x0
0x4e0 POP
0x4e1 SSTORE
0x4e2 SWAP2
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 SWAP2
0x4e7 SWAP1
0x4e8 PUSH1 0x1
0x4ea ADD
0x4eb SWAP1
0x4ec PUSH2 0x4d2
0x4ef JUMP
---
0x4dc: V322 = M[S2]
0x4de: V323 = 0x0
0x4e1: S[S1] = V322
0x4e3: V324 = 0x20
0x4e5: V325 = ADD 0x20 S2
0x4e8: V326 = 0x1
0x4ea: V327 = ADD 0x1 S1
0x4ec: V328 = 0x4d2
0x4ef: JUMP 0x4d2
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V315, S2, S1, V318]
Stack pops: 3
Stack additions: [V325, V327, S0]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V315, V325, V327, V318]

================================

Block 0x4f0
[0x4f0:0x4f0]
---
Predecessors: [0x4d2]
Successors: [0x4f1]
---
0x4f0 JUMPDEST
---
0x4f0: JUMPDEST 
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V315, S2, S1, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V275, V498, 0x3, V315, S2, S1, V318]

================================

Block 0x4f1
[0x4f1:0x4fd]
---
Predecessors: [0x42a, 0x4f0]
Successors: [0x4fe]
---
0x4f1 JUMPDEST
0x4f2 POP
0x4f3 SWAP1
0x4f4 POP
0x4f5 PUSH2 0x51c
0x4f8 SWAP2
0x4f9 SWAP1
0x4fa PUSH2 0x4fe
0x4fd JUMP
---
0x4f1: JUMPDEST 
0x4f5: V329 = 0x51c
0x4fa: V330 = 0x4fe
0x4fd: JUMP 0x4fe
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V315, S2, S1, S0]
Stack pops: 4
Stack additions: [0x51c, S3, S1]
Exit stack: [V8, 0xa2, V275, V498, 0x3, 0x51c, V315, S1]

================================

Block 0x4fe
[0x4fe:0x506]
---
Predecessors: [0x4f1, 0x507]
Successors: [0x507, 0x518]
---
0x4fe JUMPDEST
0x4ff DUP1
0x500 DUP3
0x501 GT
0x502 ISZERO
0x503 PUSH2 0x518
0x506 JUMPI
---
0x4fe: JUMPDEST 
0x501: V331 = GT V315 S0
0x502: V332 = ISZERO V331
0x503: V333 = 0x518
0x506: JUMPI 0x518 V332
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, 0x51c, V315, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, V275, V498, 0x3, 0x51c, V315, S0]

================================

Block 0x507
[0x507:0x517]
---
Predecessors: [0x4fe]
Successors: [0x4fe]
---
0x507 PUSH1 0x0
0x509 DUP2
0x50a DUP2
0x50b POP
0x50c PUSH1 0x0
0x50e SWAP1
0x50f SSTORE
0x510 POP
0x511 PUSH1 0x1
0x513 ADD
0x514 PUSH2 0x4fe
0x517 JUMP
---
0x507: V334 = 0x0
0x50c: V335 = 0x0
0x50f: S[S0] = 0x0
0x511: V336 = 0x1
0x513: V337 = ADD 0x1 S0
0x514: V338 = 0x4fe
0x517: JUMP 0x4fe
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, 0x51c, V315, S0]
Stack pops: 1
Stack additions: [V337]
Exit stack: [V8, 0xa2, V275, V498, 0x3, 0x51c, V315, V337]

================================

Block 0x518
[0x518:0x51b]
---
Predecessors: [0x4fe]
Successors: [0x51c]
---
0x518 JUMPDEST
0x519 POP
0x51a SWAP1
0x51b JUMP
---
0x518: JUMPDEST 
0x51b: JUMP 0x51c
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, 0x51c, V315, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V315]

================================

Block 0x51c
[0x51c:0x522]
---
Predecessors: [0x518]
Successors: [0x647]
---
0x51c JUMPDEST
0x51d POP
0x51e POP
0x51f PUSH2 0x647
0x522 JUMP
---
0x51c: JUMPDEST 
0x51f: V339 = 0x647
0x522: JUMP 0x647
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V315]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xa2, V275, V498]

================================

Block 0x523
[0x523:0x526]
---
Predecessors: []
Successors: [0x646]
---
0x523 PUSH2 0x646
0x526 JUMP
---
0x523: V340 = 0x646
0x526: JUMP 0x646
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x527
[0x527:0x5ad]
---
Predecessors: [0x41b]
Successors: [0x5ae, 0x5d0]
---
0x527 JUMPDEST
0x528 PUSH1 0x2
0x52a DUP3
0x52b MUL
0x52c PUSH16 0xffffffffffffffffffffffffffffffff
0x53d AND
0x53e PUSH1 0x2
0x540 PUSH1 0x0
0x542 POP
0x543 DUP2
0x544 SWAP1
0x545 SSTORE
0x546 POP
0x547 PUSH1 0x40
0x549 PUSH1 0x40
0x54b MLOAD
0x54c SWAP1
0x54d DUP2
0x54e ADD
0x54f PUSH1 0x40
0x551 MSTORE
0x552 DUP1
0x553 PUSH1 0x3
0x555 DUP2
0x556 MSTORE
0x557 PUSH1 0x20
0x559 ADD
0x55a PUSH32 0x77696e0000000000000000000000000000000000000000000000000000000000
0x57b DUP2
0x57c MSTORE
0x57d PUSH1 0x20
0x57f ADD
0x580 POP
0x581 PUSH1 0x3
0x583 PUSH1 0x0
0x585 POP
0x586 SWAP1
0x587 DUP1
0x588 MLOAD
0x589 SWAP1
0x58a PUSH1 0x20
0x58c ADD
0x58d SWAP1
0x58e DUP3
0x58f DUP1
0x590 SLOAD
0x591 DUP3
0x592 DUP3
0x593 SSTORE
0x594 SWAP1
0x595 PUSH1 0x0
0x597 MSTORE
0x598 PUSH1 0x20
0x59a PUSH1 0x0
0x59c SHA3
0x59d SWAP1
0x59e PUSH1 0x1f
0x5a0 ADD
0x5a1 PUSH1 0x20
0x5a3 SWAP1
0x5a4 DIV
0x5a5 DUP2
0x5a6 ADD
0x5a7 SWAP3
0x5a8 DUP3
0x5a9 ISZERO
0x5aa PUSH2 0x5d0
0x5ad JUMPI
---
0x527: JUMPDEST 
0x528: V341 = 0x2
0x52b: V342 = MUL V275 0x2
0x52c: V343 = 0xffffffffffffffffffffffffffffffff
0x53d: V344 = AND 0xffffffffffffffffffffffffffffffff V342
0x53e: V345 = 0x2
0x540: V346 = 0x0
0x545: S[0x2] = V344
0x547: V347 = 0x40
0x549: V348 = 0x40
0x54b: V349 = M[0x40]
0x54e: V350 = ADD V349 0x40
0x54f: V351 = 0x40
0x551: M[0x40] = V350
0x553: V352 = 0x3
0x556: M[V349] = 0x3
0x557: V353 = 0x20
0x559: V354 = ADD 0x20 V349
0x55a: V355 = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x57c: M[V354] = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x57d: V356 = 0x20
0x57f: V357 = ADD 0x20 V354
0x581: V358 = 0x3
0x583: V359 = 0x0
0x588: V360 = M[V349]
0x58a: V361 = 0x20
0x58c: V362 = ADD 0x20 V349
0x590: V363 = S[0x3]
0x593: S[0x3] = V360
0x595: V364 = 0x0
0x597: M[0x0] = 0x3
0x598: V365 = 0x20
0x59a: V366 = 0x0
0x59c: V367 = SHA3 0x0 0x20
0x59e: V368 = 0x1f
0x5a0: V369 = ADD 0x1f V363
0x5a1: V370 = 0x20
0x5a4: V371 = DIV V369 0x20
0x5a6: V372 = ADD V367 V371
0x5a9: V373 = ISZERO V360
0x5aa: V374 = 0x5d0
0x5ad: JUMPI 0x5d0 V373
---
Entry stack: [V8, 0xa2, V275, V498]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V372, V360, V367, V362]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V372, V360, V367, V362]

================================

Block 0x5ae
[0x5ae:0x5b0]
---
Predecessors: [0x527]
Successors: [0x5b1]
---
0x5ae SWAP2
0x5af DUP3
0x5b0 ADD
---
0x5b0: V375 = ADD V362 V360
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V372, V360, V367, V362]
Stack pops: 3
Stack additions: [S0, S1, V375]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V372, V362, V367, V375]

================================

Block 0x5b1
[0x5b1:0x5b9]
---
Predecessors: [0x5ae, 0x5ba]
Successors: [0x5ba, 0x5cf]
---
0x5b1 JUMPDEST
0x5b2 DUP3
0x5b3 DUP2
0x5b4 GT
0x5b5 ISZERO
0x5b6 PUSH2 0x5cf
0x5b9 JUMPI
---
0x5b1: JUMPDEST 
0x5b4: V376 = GT V375 S2
0x5b5: V377 = ISZERO V376
0x5b6: V378 = 0x5cf
0x5b9: JUMPI 0x5cf V377
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V372, S2, S1, V375]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V372, S2, S1, V375]

================================

Block 0x5ba
[0x5ba:0x5ce]
---
Predecessors: [0x5b1]
Successors: [0x5b1]
---
0x5ba DUP3
0x5bb MLOAD
0x5bc DUP3
0x5bd PUSH1 0x0
0x5bf POP
0x5c0 SSTORE
0x5c1 SWAP2
0x5c2 PUSH1 0x20
0x5c4 ADD
0x5c5 SWAP2
0x5c6 SWAP1
0x5c7 PUSH1 0x1
0x5c9 ADD
0x5ca SWAP1
0x5cb PUSH2 0x5b1
0x5ce JUMP
---
0x5bb: V379 = M[S2]
0x5bd: V380 = 0x0
0x5c0: S[S1] = V379
0x5c2: V381 = 0x20
0x5c4: V382 = ADD 0x20 S2
0x5c7: V383 = 0x1
0x5c9: V384 = ADD 0x1 S1
0x5cb: V385 = 0x5b1
0x5ce: JUMP 0x5b1
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V372, S2, S1, V375]
Stack pops: 3
Stack additions: [V382, V384, S0]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V372, V382, V384, V375]

================================

Block 0x5cf
[0x5cf:0x5cf]
---
Predecessors: [0x5b1]
Successors: [0x5d0]
---
0x5cf JUMPDEST
---
0x5cf: JUMPDEST 
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V372, S2, S1, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V275, V498, 0x3, V372, S2, S1, V375]

================================

Block 0x5d0
[0x5d0:0x5dc]
---
Predecessors: [0x527, 0x5cf]
Successors: [0x5dd]
---
0x5d0 JUMPDEST
0x5d1 POP
0x5d2 SWAP1
0x5d3 POP
0x5d4 PUSH2 0x5fb
0x5d7 SWAP2
0x5d8 SWAP1
0x5d9 PUSH2 0x5dd
0x5dc JUMP
---
0x5d0: JUMPDEST 
0x5d4: V386 = 0x5fb
0x5d9: V387 = 0x5dd
0x5dc: JUMP 0x5dd
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V372, S2, S1, S0]
Stack pops: 4
Stack additions: [0x5fb, S3, S1]
Exit stack: [V8, 0xa2, V275, V498, 0x3, 0x5fb, V372, S1]

================================

Block 0x5dd
[0x5dd:0x5e5]
---
Predecessors: [0x5d0, 0x5e6]
Successors: [0x5e6, 0x5f7]
---
0x5dd JUMPDEST
0x5de DUP1
0x5df DUP3
0x5e0 GT
0x5e1 ISZERO
0x5e2 PUSH2 0x5f7
0x5e5 JUMPI
---
0x5dd: JUMPDEST 
0x5e0: V388 = GT V372 S0
0x5e1: V389 = ISZERO V388
0x5e2: V390 = 0x5f7
0x5e5: JUMPI 0x5f7 V389
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, 0x5fb, V372, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xa2, V275, V498, 0x3, 0x5fb, V372, S0]

================================

Block 0x5e6
[0x5e6:0x5f6]
---
Predecessors: [0x5dd]
Successors: [0x5dd]
---
0x5e6 PUSH1 0x0
0x5e8 DUP2
0x5e9 DUP2
0x5ea POP
0x5eb PUSH1 0x0
0x5ed SWAP1
0x5ee SSTORE
0x5ef POP
0x5f0 PUSH1 0x1
0x5f2 ADD
0x5f3 PUSH2 0x5dd
0x5f6 JUMP
---
0x5e6: V391 = 0x0
0x5eb: V392 = 0x0
0x5ee: S[S0] = 0x0
0x5f0: V393 = 0x1
0x5f2: V394 = ADD 0x1 S0
0x5f3: V395 = 0x5dd
0x5f6: JUMP 0x5dd
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, 0x5fb, V372, S0]
Stack pops: 1
Stack additions: [V394]
Exit stack: [V8, 0xa2, V275, V498, 0x3, 0x5fb, V372, V394]

================================

Block 0x5f7
[0x5f7:0x5fa]
---
Predecessors: [0x5dd]
Successors: [0x5fb]
---
0x5f7 JUMPDEST
0x5f8 POP
0x5f9 SWAP1
0x5fa JUMP
---
0x5f7: JUMPDEST 
0x5fa: JUMP 0x5fb
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, 0x5fb, V372, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xa2, V275, V498, 0x3, V372]

================================

Block 0x5fb
[0x5fb:0x645]
---
Predecessors: [0x5f7]
Successors: [0x646]
---
0x5fb JUMPDEST
0x5fc POP
0x5fd POP
0x5fe CALLER
0x5ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x614 AND
0x615 PUSH1 0x0
0x617 PUSH1 0x2
0x619 DUP5
0x61a MUL
0x61b PUSH16 0xffffffffffffffffffffffffffffffff
0x62c AND
0x62d PUSH1 0x40
0x62f MLOAD
0x630 DUP1
0x631 SWAP1
0x632 POP
0x633 PUSH1 0x0
0x635 PUSH1 0x40
0x637 MLOAD
0x638 DUP1
0x639 DUP4
0x63a SUB
0x63b DUP2
0x63c DUP6
0x63d DUP9
0x63e DUP9
0x63f CALL
0x640 SWAP4
0x641 POP
0x642 POP
0x643 POP
0x644 POP
0x645 POP
---
0x5fb: JUMPDEST 
0x5fe: V396 = CALLER
0x5ff: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x614: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x615: V399 = 0x0
0x617: V400 = 0x2
0x61a: V401 = MUL V275 0x2
0x61b: V402 = 0xffffffffffffffffffffffffffffffff
0x62c: V403 = AND 0xffffffffffffffffffffffffffffffff V401
0x62d: V404 = 0x40
0x62f: V405 = M[0x40]
0x633: V406 = 0x0
0x635: V407 = 0x40
0x637: V408 = M[0x40]
0x63a: V409 = SUB V405 V408
0x63f: V410 = CALL 0x0 V398 V403 V408 V409 V408 0x0
---
Entry stack: [V8, 0xa2, V275, V498, 0x3, V372]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V8, 0xa2, V275, V498]

================================

Block 0x646
[0x646:0x646]
---
Predecessors: [0x523, 0x5fb]
Successors: [0x647]
---
0x646 JUMPDEST
---
0x646: JUMPDEST 
---
Entry stack: [V8, 0xa2, V275, V498]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V275, V498]

================================

Block 0x647
[0x647:0x64a]
---
Predecessors: [0x328, 0x3fc, 0x51c, 0x646]
Successors: [0xa2]
---
0x647 JUMPDEST
0x648 POP
0x649 POP
0x64a JUMP
---
0x647: JUMPDEST 
0x64a: JUMP 0xa2
---
Entry stack: [V8, 0xa2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Block 0x64b
[0x64b:0x68f]
---
Predecessors: [0xf3]
Successors: [0x690, 0x6ba]
---
0x64b JUMPDEST
0x64c PUSH1 0x20
0x64e PUSH1 0x40
0x650 MLOAD
0x651 SWAP1
0x652 DUP2
0x653 ADD
0x654 PUSH1 0x40
0x656 MSTORE
0x657 DUP1
0x658 PUSH1 0x0
0x65a DUP2
0x65b MSTORE
0x65c PUSH1 0x20
0x65e ADD
0x65f POP
0x660 PUSH1 0x3
0x662 PUSH1 0x0
0x664 POP
0x665 DUP1
0x666 SLOAD
0x667 DUP1
0x668 PUSH1 0x1f
0x66a ADD
0x66b PUSH1 0x20
0x66d DUP1
0x66e SWAP2
0x66f DIV
0x670 MUL
0x671 PUSH1 0x20
0x673 ADD
0x674 PUSH1 0x40
0x676 MLOAD
0x677 SWAP1
0x678 DUP2
0x679 ADD
0x67a PUSH1 0x40
0x67c MSTORE
0x67d DUP1
0x67e SWAP3
0x67f SWAP2
0x680 SWAP1
0x681 DUP2
0x682 DUP2
0x683 MSTORE
0x684 PUSH1 0x20
0x686 ADD
0x687 DUP3
0x688 DUP1
0x689 SLOAD
0x68a DUP1
0x68b ISZERO
0x68c PUSH2 0x6ba
0x68f JUMPI
---
0x64b: JUMPDEST 
0x64c: V411 = 0x20
0x64e: V412 = 0x40
0x650: V413 = M[0x40]
0x653: V414 = ADD V413 0x20
0x654: V415 = 0x40
0x656: M[0x40] = V414
0x658: V416 = 0x0
0x65b: M[V413] = 0x0
0x65c: V417 = 0x20
0x65e: V418 = ADD 0x20 V413
0x660: V419 = 0x3
0x662: V420 = 0x0
0x666: V421 = S[0x3]
0x668: V422 = 0x1f
0x66a: V423 = ADD 0x1f V421
0x66b: V424 = 0x20
0x66f: V425 = DIV V423 0x20
0x670: V426 = MUL V425 0x20
0x671: V427 = 0x20
0x673: V428 = ADD 0x20 V426
0x674: V429 = 0x40
0x676: V430 = M[0x40]
0x679: V431 = ADD V430 V428
0x67a: V432 = 0x40
0x67c: M[0x40] = V431
0x683: M[V430] = V421
0x684: V433 = 0x20
0x686: V434 = ADD 0x20 V430
0x689: V435 = S[0x3]
0x68b: V436 = ISZERO V435
0x68c: V437 = 0x6ba
0x68f: JUMPI 0x6ba V436
---
Entry stack: [V8, 0xfe]
Stack pops: 0
Stack additions: [V413, V430, 0x3, V421, V434, 0x3, V435]
Exit stack: [V8, 0xfe, V413, V430, 0x3, V421, V434, 0x3, V435]

================================

Block 0x690
[0x690:0x69c]
---
Predecessors: [0x64b]
Successors: [0x69d]
---
0x690 DUP3
0x691 ADD
0x692 SWAP2
0x693 SWAP1
0x694 PUSH1 0x0
0x696 MSTORE
0x697 PUSH1 0x20
0x699 PUSH1 0x0
0x69b SHA3
0x69c SWAP1
---
0x691: V438 = ADD V434 V435
0x694: V439 = 0x0
0x696: M[0x0] = 0x3
0x697: V440 = 0x20
0x699: V441 = 0x0
0x69b: V442 = SHA3 0x0 0x20
---
Entry stack: [V8, 0xfe, V413, V430, 0x3, V421, V434, 0x3, V435]
Stack pops: 3
Stack additions: [V438, V442, S2]
Exit stack: [V8, 0xfe, V413, V430, 0x3, V421, V438, V442, V434]

================================

Block 0x69d
[0x69d:0x6b0]
---
Predecessors: [0x690, 0x69d]
Successors: [0x69d, 0x6b1]
---
0x69d JUMPDEST
0x69e DUP2
0x69f SLOAD
0x6a0 DUP2
0x6a1 MSTORE
0x6a2 SWAP1
0x6a3 PUSH1 0x1
0x6a5 ADD
0x6a6 SWAP1
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa DUP1
0x6ab DUP4
0x6ac GT
0x6ad PUSH2 0x69d
0x6b0 JUMPI
---
0x69d: JUMPDEST 
0x69f: V443 = S[S1]
0x6a1: M[S0] = V443
0x6a3: V444 = 0x1
0x6a5: V445 = ADD 0x1 S1
0x6a7: V446 = 0x20
0x6a9: V447 = ADD 0x20 S0
0x6ac: V448 = GT V438 V447
0x6ad: V449 = 0x69d
0x6b0: JUMPI 0x69d V448
---
Entry stack: [V8, 0xfe, V413, V430, 0x3, V421, V438, S1, S0]
Stack pops: 3
Stack additions: [S2, V445, V447]
Exit stack: [V8, 0xfe, V413, V430, 0x3, V421, V438, V445, V447]

================================

Block 0x6b1
[0x6b1:0x6b9]
---
Predecessors: [0x69d]
Successors: [0x6ba]
---
0x6b1 DUP3
0x6b2 SWAP1
0x6b3 SUB
0x6b4 PUSH1 0x1f
0x6b6 AND
0x6b7 DUP3
0x6b8 ADD
0x6b9 SWAP2
---
0x6b3: V450 = SUB V447 V438
0x6b4: V451 = 0x1f
0x6b6: V452 = AND 0x1f V450
0x6b8: V453 = ADD V438 V452
---
Entry stack: [V8, 0xfe, V413, V430, 0x3, V421, V438, V445, V447]
Stack pops: 3
Stack additions: [V453, S1, S2]
Exit stack: [V8, 0xfe, V413, V430, 0x3, V421, V453, V445, V438]

================================

Block 0x6ba
[0x6ba:0x6c5]
---
Predecessors: [0x64b, 0x6b1]
Successors: [0x6c6]
---
0x6ba JUMPDEST
0x6bb POP
0x6bc POP
0x6bd POP
0x6be POP
0x6bf POP
0x6c0 SWAP1
0x6c1 POP
0x6c2 PUSH2 0x6c6
0x6c5 JUMP
---
0x6ba: JUMPDEST 
0x6c2: V454 = 0x6c6
0x6c5: JUMP 0x6c6
---
Entry stack: [V8, 0xfe, V413, V430, 0x3, V421, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V8, 0xfe, V430]

================================

Block 0x6c6
[0x6c6:0x6c8]
---
Predecessors: [0x6ba]
Successors: [0xfe]
---
0x6c6 JUMPDEST
0x6c7 SWAP1
0x6c8 JUMP
---
0x6c6: JUMPDEST 
0x6c8: JUMP 0xfe
---
Entry stack: [V8, 0xfe, V430]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V430]

================================

Block 0x6c9
[0x6c9:0x6d7]
---
Predecessors: [0x76]
Successors: [0x6d8]
---
0x6c9 JUMPDEST
0x6ca PUSH1 0x0
0x6cc PUSH1 0x2
0x6ce PUSH1 0x0
0x6d0 POP
0x6d1 SLOAD
0x6d2 SWAP1
0x6d3 POP
0x6d4 PUSH2 0x6d8
0x6d7 JUMP
---
0x6c9: JUMPDEST 
0x6ca: V455 = 0x0
0x6cc: V456 = 0x2
0x6ce: V457 = 0x0
0x6d1: V458 = S[0x2]
0x6d4: V459 = 0x6d8
0x6d7: JUMP 0x6d8
---
Entry stack: [V8, 0x81]
Stack pops: 0
Stack additions: [V458]
Exit stack: [V8, 0x81, V458]

================================

Block 0x6d8
[0x6d8:0x6da]
---
Predecessors: [0x6c9]
Successors: [0x81]
---
0x6d8 JUMPDEST
0x6d9 SWAP1
0x6da JUMP
---
0x6d8: JUMPDEST 
0x6da: JUMP 0x81
---
Entry stack: [V8, 0x81, V458]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V458]

================================

Block 0x6db
[0x6db:0x6e9]
---
Predecessors: [0xd2]
Successors: [0x6ea]
---
0x6db JUMPDEST
0x6dc PUSH1 0x0
0x6de PUSH1 0x1
0x6e0 PUSH1 0x0
0x6e2 POP
0x6e3 SLOAD
0x6e4 SWAP1
0x6e5 POP
0x6e6 PUSH2 0x6ea
0x6e9 JUMP
---
0x6db: JUMPDEST 
0x6dc: V460 = 0x0
0x6de: V461 = 0x1
0x6e0: V462 = 0x0
0x6e3: V463 = S[0x1]
0x6e6: V464 = 0x6ea
0x6e9: JUMP 0x6ea
---
Entry stack: [V8, 0xdd]
Stack pops: 0
Stack additions: [V463]
Exit stack: [V8, 0xdd, V463]

================================

Block 0x6ea
[0x6ea:0x6ec]
---
Predecessors: [0x6db]
Successors: [0xdd]
---
0x6ea JUMPDEST
0x6eb SWAP1
0x6ec JUMP
---
0x6ea: JUMPDEST 
0x6ec: JUMP 0xdd
---
Entry stack: [V8, 0xdd, V463]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V463]

================================

Block 0x6ed
[0x6ed:0x70d]
---
Predecessors: [0xb1]
Successors: [0x70e]
---
0x6ed JUMPDEST
0x6ee PUSH1 0x0
0x6f0 ADDRESS
0x6f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x706 AND
0x707 BALANCE
0x708 SWAP1
0x709 POP
0x70a PUSH2 0x70e
0x70d JUMP
---
0x6ed: JUMPDEST 
0x6ee: V465 = 0x0
0x6f0: V466 = ADDRESS
0x6f1: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x706: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x707: V469 = BALANCE V468
0x70a: V470 = 0x70e
0x70d: JUMP 0x70e
---
Entry stack: [V8, 0xbc]
Stack pops: 0
Stack additions: [V469]
Exit stack: [V8, 0xbc, V469]

================================

Block 0x70e
[0x70e:0x710]
---
Predecessors: [0x6ed]
Successors: [0xbc]
---
0x70e JUMPDEST
0x70f SWAP1
0x710 JUMP
---
0x70e: JUMPDEST 
0x710: JUMP 0xbc
---
Entry stack: [V8, 0xbc, V469]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V469]

================================

Block 0x711
[0x711:0x795]
---
Predecessors: [0x40f]
Successors: [0x796]
---
0x711 JUMPDEST
0x712 PUSH1 0x0
0x714 DIFFICULTY
0x715 COINBASE
0x716 TIMESTAMP
0x717 DUP5
0x718 PUSH1 0x40
0x71a MLOAD
0x71b DUP1
0x71c DUP6
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x20
0x721 ADD
0x722 DUP5
0x723 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x738 AND
0x739 PUSH13 0x1000000000000000000000000
0x747 MUL
0x748 DUP2
0x749 MSTORE
0x74a PUSH1 0x14
0x74c ADD
0x74d DUP4
0x74e DUP2
0x74f MSTORE
0x750 PUSH1 0x20
0x752 ADD
0x753 DUP3
0x754 PUSH16 0xffffffffffffffffffffffffffffffff
0x765 AND
0x766 PUSH17 0x100000000000000000000000000000000
0x778 MUL
0x779 DUP2
0x77a MSTORE
0x77b PUSH1 0x10
0x77d ADD
0x77e SWAP5
0x77f POP
0x780 POP
0x781 POP
0x782 POP
0x783 POP
0x784 PUSH1 0x40
0x786 MLOAD
0x787 DUP1
0x788 SWAP2
0x789 SUB
0x78a SWAP1
0x78b SHA3
0x78c PUSH1 0x1
0x78e SWAP1
0x78f DIV
0x790 SWAP1
0x791 POP
0x792 PUSH2 0x796
0x795 JUMP
---
0x711: JUMPDEST 
0x712: V471 = 0x0
0x714: V472 = DIFFICULTY
0x715: V473 = COINBASE
0x716: V474 = TIMESTAMP
0x718: V475 = 0x40
0x71a: V476 = M[0x40]
0x71e: M[V476] = V472
0x71f: V477 = 0x20
0x721: V478 = ADD 0x20 V476
0x723: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x738: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x739: V481 = 0x1000000000000000000000000
0x747: V482 = MUL 0x1000000000000000000000000 V480
0x749: M[V478] = V482
0x74a: V483 = 0x14
0x74c: V484 = ADD 0x14 V478
0x74f: M[V484] = V474
0x750: V485 = 0x20
0x752: V486 = ADD 0x20 V484
0x754: V487 = 0xffffffffffffffffffffffffffffffff
0x765: V488 = AND 0xffffffffffffffffffffffffffffffff V275
0x766: V489 = 0x100000000000000000000000000000000
0x778: V490 = MUL 0x100000000000000000000000000000000 V488
0x77a: M[V486] = V490
0x77b: V491 = 0x10
0x77d: V492 = ADD 0x10 V486
0x784: V493 = 0x40
0x786: V494 = M[0x40]
0x789: V495 = SUB V492 V494
0x78b: V496 = SHA3 V494 V495
0x78c: V497 = 0x1
0x78f: V498 = DIV V496 0x1
0x792: V499 = 0x796
0x795: JUMP 0x796
---
Entry stack: [V8, 0xa2, V275, 0x0, 0x41b, V275]
Stack pops: 1
Stack additions: [S0, V498]
Exit stack: [V8, 0xa2, V275, 0x0, 0x41b, V275, V498]

================================

Block 0x796
[0x796:0x79a]
---
Predecessors: [0x711]
Successors: [0x41b]
---
0x796 JUMPDEST
0x797 SWAP2
0x798 SWAP1
0x799 POP
0x79a JUMP
---
0x796: JUMPDEST 
0x79a: JUMP 0x41b
---
Entry stack: [V8, 0xa2, V275, 0x0, 0x41b, V275, V498]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V8, 0xa2, V275, 0x0, V498]

================================

Function 0:
Public function signature: 0xefafd01
Entry block: 0x76
Exit block: 0x81
Body: 0x76, 0x81, 0x6c9, 0x6d8

Function 1:
Public function signature: 0x25d8dcf2
Entry block: 0x97
Exit block: 0xa2
Body: 0x97, 0xa2, 0x200, 0x21d, 0x23b, 0x241, 0x2db, 0x2de, 0x2e7, 0x2fc, 0x2fd, 0x30a, 0x313, 0x324, 0x328, 0x33e, 0x348, 0x3af, 0x3b2, 0x3bb, 0x3d0, 0x3d1, 0x3de, 0x3e7, 0x3f8, 0x3fc, 0x40e, 0x40f, 0x41b, 0x42a, 0x4cf, 0x4d2, 0x4db, 0x4f0, 0x4f1, 0x4fe, 0x507, 0x518, 0x51c, 0x527, 0x5ae, 0x5b1, 0x5ba, 0x5cf, 0x5d0, 0x5dd, 0x5e6, 0x5f7, 0x5fb, 0x646, 0x647, 0x711, 0x796

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xa4
Exit block: 0xaf
Body: 0xa4, 0xaf, 0x16c, 0x1c3, 0x1fd, 0x1fe

Function 3:
Public function signature: 0x5acce36b
Entry block: 0xb1
Exit block: 0xbc
Body: 0xb1, 0xbc, 0x6ed, 0x70e

Function 4:
Public function signature: 0x6c6f1d93
Entry block: 0xd2
Exit block: 0xdd
Body: 0xd2, 0xdd, 0x6db, 0x6ea

Function 5:
Public function signature: 0xfdb7ecd5
Entry block: 0xf3
Exit block: 0x15e
Body: 0xf3, 0xfe, 0x145, 0x15e, 0x64b, 0x690, 0x69d, 0x6b1, 0x6ba, 0x6c6

Function 6:
Public fallback function
Entry block: 0x70
Exit block: 0x74
Body: 0x70, 0x74

