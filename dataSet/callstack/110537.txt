Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb7
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb7
0xa: JUMPI 0xb7 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xbc]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1962df71
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xbc
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1962df71
0x39: V12 = EQ V10 0x1962df71
0x3a: V13 = 0xbc
0x3d: JUMPI 0xbc V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x15a]
---
0x3e DUP1
0x3f PUSH4 0x19ab453c
0x44 EQ
0x45 PUSH2 0x15a
0x48 JUMPI
---
0x3f: V14 = 0x19ab453c
0x44: V15 = EQ 0x19ab453c V10
0x45: V16 = 0x15a
0x48: JUMPI 0x15a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x19a]
---
0x49 DUP1
0x4a PUSH4 0x7609c5a9
0x4f EQ
0x50 PUSH2 0x19a
0x53 JUMPI
---
0x4a: V17 = 0x7609c5a9
0x4f: V18 = EQ 0x7609c5a9 V10
0x50: V19 = 0x19a
0x53: JUMPI 0x19a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x21c]
---
0x54 DUP1
0x55 PUSH4 0x81d434e9
0x5a EQ
0x5b PUSH2 0x21c
0x5e JUMPI
---
0x55: V20 = 0x81d434e9
0x5a: V21 = EQ 0x81d434e9 V10
0x5b: V22 = 0x21c
0x5e: JUMPI 0x21c V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x283]
---
0x5f DUP1
0x60 PUSH4 0x84c5c34d
0x65 EQ
0x66 PUSH2 0x283
0x69 JUMPI
---
0x60: V23 = 0x84c5c34d
0x65: V24 = EQ 0x84c5c34d V10
0x66: V25 = 0x283
0x69: JUMPI 0x283 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x34e]
---
0x6a DUP1
0x6b PUSH4 0x9ab253cc
0x70 EQ
0x71 PUSH2 0x34e
0x74 JUMPI
---
0x6b: V26 = 0x9ab253cc
0x70: V27 = EQ 0x9ab253cc V10
0x71: V28 = 0x34e
0x74: JUMPI 0x34e V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x3fe]
---
0x75 DUP1
0x76 PUSH4 0xc10796df
0x7b EQ
0x7c PUSH2 0x3fe
0x7f JUMPI
---
0x76: V29 = 0xc10796df
0x7b: V30 = EQ 0xc10796df V10
0x7c: V31 = 0x3fe
0x7f: JUMPI 0x3fe V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x486]
---
0x80 DUP1
0x81 PUSH4 0xcca97025
0x86 EQ
0x87 PUSH2 0x486
0x8a JUMPI
---
0x81: V32 = 0xcca97025
0x86: V33 = EQ 0xcca97025 V10
0x87: V34 = 0x486
0x8a: JUMPI 0x486 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x52b]
---
0x8b DUP1
0x8c PUSH4 0xdb00b848
0x91 EQ
0x92 PUSH2 0x52b
0x95 JUMPI
---
0x8c: V35 = 0xdb00b848
0x91: V36 = EQ 0xdb00b848 V10
0x92: V37 = 0x52b
0x95: JUMPI 0x52b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x58b]
---
0x96 DUP1
0x97 PUSH4 0xe34f7137
0x9c EQ
0x9d PUSH2 0x58b
0xa0 JUMPI
---
0x97: V38 = 0xe34f7137
0x9c: V39 = EQ 0xe34f7137 V10
0x9d: V40 = 0x58b
0xa0: JUMPI 0x58b V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x5d5]
---
0xa1 DUP1
0xa2 PUSH4 0xeb58705b
0xa7 EQ
0xa8 PUSH2 0x5d5
0xab JUMPI
---
0xa2: V41 = 0xeb58705b
0xa7: V42 = EQ 0xeb58705b V10
0xa8: V43 = 0x5d5
0xab: JUMPI 0x5d5 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x676]
---
0xac DUP1
0xad PUSH4 0xec556889
0xb2 EQ
0xb3 PUSH2 0x676
0xb6 JUMPI
---
0xad: V44 = 0xec556889
0xb2: V45 = EQ 0xec556889 V10
0xb3: V46 = 0x676
0xb6: JUMPI 0x676 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xbb]
---
Predecessors: [0x0, 0xac]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb7: JUMPDEST 
0xb8: V47 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0xb]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V48 = CALLVALUE
0xbe: V49 = ISZERO V48
0xbf: V50 = 0xc7
0xc2: JUMPI 0xc7 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V51 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc7
[0xc7:0x145]
---
Predecessors: [0xbc]
Successors: [0x6b2]
---
0xc7 JUMPDEST
0xc8 PUSH2 0x146
0xcb PUSH1 0x4
0xcd DUP1
0xce CALLDATALOAD
0xcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4 AND
0xe5 SWAP1
0xe6 PUSH1 0x24
0xe8 DUP1
0xe9 CALLDATALOAD
0xea SWAP2
0xeb SWAP1
0xec PUSH1 0x64
0xee SWAP1
0xef PUSH1 0x44
0xf1 CALLDATALOAD
0xf2 SWAP1
0xf3 DUP2
0xf4 ADD
0xf5 SWAP1
0xf6 DUP4
0xf7 ADD
0xf8 CALLDATALOAD
0xf9 DUP1
0xfa PUSH1 0x20
0xfc PUSH1 0x1f
0xfe DUP3
0xff ADD
0x100 DUP2
0x101 SWAP1
0x102 DIV
0x103 DUP2
0x104 MUL
0x105 ADD
0x106 PUSH1 0x40
0x108 MLOAD
0x109 SWAP1
0x10a DUP2
0x10b ADD
0x10c PUSH1 0x40
0x10e MSTORE
0x10f DUP2
0x110 DUP2
0x111 MSTORE
0x112 SWAP3
0x113 SWAP2
0x114 SWAP1
0x115 PUSH1 0x20
0x117 DUP5
0x118 ADD
0x119 DUP4
0x11a DUP4
0x11b DUP1
0x11c DUP3
0x11d DUP5
0x11e CALLDATACOPY
0x11f POP
0x120 SWAP5
0x121 SWAP7
0x122 POP
0x123 POP
0x124 POP
0x125 SWAP3
0x126 CALLDATALOAD
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d SWAP3
0x13e POP
0x13f PUSH2 0x6b2
0x142 SWAP2
0x143 POP
0x144 POP
0x145 JUMP
---
0xc7: JUMPDEST 
0xc8: V52 = 0x146
0xcb: V53 = 0x4
0xce: V54 = CALLDATALOAD 0x4
0xcf: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xe6: V57 = 0x24
0xe9: V58 = CALLDATALOAD 0x24
0xec: V59 = 0x64
0xef: V60 = 0x44
0xf1: V61 = CALLDATALOAD 0x44
0xf4: V62 = ADD V61 0x24
0xf7: V63 = ADD 0x4 V61
0xf8: V64 = CALLDATALOAD V63
0xfa: V65 = 0x20
0xfc: V66 = 0x1f
0xff: V67 = ADD V64 0x1f
0x102: V68 = DIV V67 0x20
0x104: V69 = MUL 0x20 V68
0x105: V70 = ADD V69 0x20
0x106: V71 = 0x40
0x108: V72 = M[0x40]
0x10b: V73 = ADD V72 V70
0x10c: V74 = 0x40
0x10e: M[0x40] = V73
0x111: M[V72] = V64
0x115: V75 = 0x20
0x118: V76 = ADD V72 0x20
0x11e: CALLDATACOPY V76 V62 V64
0x126: V77 = CALLDATALOAD 0x64
0x127: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x13f: V80 = 0x6b2
0x145: JUMP 0x6b2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V56, V58, V72, V79]
Exit stack: [V10, 0x146, V56, V58, V72, V79]

================================

Block 0x146
[0x146:0x159]
---
Predecessors: [0x6e8, 0x75b, 0x77f, 0x86f]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 MLOAD
0x14a SWAP1
0x14b ISZERO
0x14c ISZERO
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x20
0x151 ADD
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 SWAP2
0x157 SUB
0x158 SWAP1
0x159 RETURN
---
0x146: JUMPDEST 
0x147: V81 = 0x40
0x149: V82 = M[0x40]
0x14b: V83 = ISZERO S0
0x14c: V84 = ISZERO V83
0x14e: M[V82] = V84
0x14f: V85 = 0x20
0x151: V86 = ADD 0x20 V82
0x152: V87 = 0x40
0x154: V88 = M[0x40]
0x157: V89 = SUB V86 V88
0x159: RETURN V88 V89
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x15a
[0x15a:0x160]
---
Predecessors: [0x3e]
Successors: [0x161, 0x165]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x15a: JUMPDEST 
0x15b: V90 = CALLVALUE
0x15c: V91 = ISZERO V90
0x15d: V92 = 0x165
0x160: JUMPI 0x165 V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x15a]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V93 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x165
[0x165:0x185]
---
Predecessors: [0x15a]
Successors: [0x6f0]
---
0x165 JUMPDEST
0x166 PUSH2 0x146
0x169 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17e PUSH1 0x4
0x180 CALLDATALOAD
0x181 AND
0x182 PUSH2 0x6f0
0x185 JUMP
---
0x165: JUMPDEST 
0x166: V94 = 0x146
0x169: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V96 = 0x4
0x180: V97 = CALLDATALOAD 0x4
0x181: V98 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x182: V99 = 0x6f0
0x185: JUMP 0x6f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V98]
Exit stack: [V10, 0x146, V98]

================================

Block 0x186
[0x186:0x199]
---
Predecessors: []
Successors: []
---
0x186 JUMPDEST
0x187 PUSH1 0x40
0x189 MLOAD
0x18a SWAP1
0x18b ISZERO
0x18c ISZERO
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 ADD
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 SWAP2
0x197 SUB
0x198 SWAP1
0x199 RETURN
---
0x186: JUMPDEST 
0x187: V100 = 0x40
0x189: V101 = M[0x40]
0x18b: V102 = ISZERO S0
0x18c: V103 = ISZERO V102
0x18e: M[V101] = V103
0x18f: V104 = 0x20
0x191: V105 = ADD 0x20 V101
0x192: V106 = 0x40
0x194: V107 = M[0x40]
0x197: V108 = SUB V105 V107
0x199: RETURN V107 V108
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x49]
Successors: [0x1a1, 0x1a5]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a5
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V109 = CALLVALUE
0x19c: V110 = ISZERO V109
0x19d: V111 = 0x1a5
0x1a0: JUMPI 0x1a5 V110
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 REVERT
---
0x1a1: V112 = 0x0
0x1a4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x207]
---
Predecessors: [0x19a]
Successors: [0x760]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x146
0x1a9 PUSH1 0x4
0x1ab DUP1
0x1ac CALLDATALOAD
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 SWAP1
0x1c4 PUSH1 0x44
0x1c6 PUSH1 0x24
0x1c8 DUP1
0x1c9 CALLDATALOAD
0x1ca SWAP1
0x1cb DUP2
0x1cc ADD
0x1cd SWAP1
0x1ce DUP4
0x1cf ADD
0x1d0 CALLDATALOAD
0x1d1 DUP1
0x1d2 PUSH1 0x20
0x1d4 PUSH1 0x1f
0x1d6 DUP3
0x1d7 ADD
0x1d8 DUP2
0x1d9 SWAP1
0x1da DIV
0x1db DUP2
0x1dc MUL
0x1dd ADD
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 SWAP1
0x1e2 DUP2
0x1e3 ADD
0x1e4 PUSH1 0x40
0x1e6 MSTORE
0x1e7 DUP2
0x1e8 DUP2
0x1e9 MSTORE
0x1ea SWAP3
0x1eb SWAP2
0x1ec SWAP1
0x1ed PUSH1 0x20
0x1ef DUP5
0x1f0 ADD
0x1f1 DUP4
0x1f2 DUP4
0x1f3 DUP1
0x1f4 DUP3
0x1f5 DUP5
0x1f6 CALLDATACOPY
0x1f7 POP
0x1f8 SWAP5
0x1f9 SWAP7
0x1fa POP
0x1fb POP
0x1fc SWAP4
0x1fd CALLDATALOAD
0x1fe SWAP4
0x1ff POP
0x200 PUSH2 0x760
0x203 SWAP3
0x204 POP
0x205 POP
0x206 POP
0x207 JUMP
---
0x1a5: JUMPDEST 
0x1a6: V113 = 0x146
0x1a9: V114 = 0x4
0x1ac: V115 = CALLDATALOAD 0x4
0x1ad: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1c4: V118 = 0x44
0x1c6: V119 = 0x24
0x1c9: V120 = CALLDATALOAD 0x24
0x1cc: V121 = ADD V120 0x24
0x1cf: V122 = ADD 0x4 V120
0x1d0: V123 = CALLDATALOAD V122
0x1d2: V124 = 0x20
0x1d4: V125 = 0x1f
0x1d7: V126 = ADD V123 0x1f
0x1da: V127 = DIV V126 0x20
0x1dc: V128 = MUL 0x20 V127
0x1dd: V129 = ADD V128 0x20
0x1de: V130 = 0x40
0x1e0: V131 = M[0x40]
0x1e3: V132 = ADD V131 V129
0x1e4: V133 = 0x40
0x1e6: M[0x40] = V132
0x1e9: M[V131] = V123
0x1ed: V134 = 0x20
0x1f0: V135 = ADD V131 0x20
0x1f6: CALLDATACOPY V135 V121 V123
0x1fd: V136 = CALLDATALOAD 0x44
0x200: V137 = 0x760
0x207: JUMP 0x760
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V117, V131, V136]
Exit stack: [V10, 0x146, V117, V131, V136]

================================

Block 0x208
[0x208:0x21b]
---
Predecessors: []
Successors: []
---
0x208 JUMPDEST
0x209 PUSH1 0x40
0x20b MLOAD
0x20c SWAP1
0x20d ISZERO
0x20e ISZERO
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 ADD
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 SWAP2
0x219 SUB
0x21a SWAP1
0x21b RETURN
---
0x208: JUMPDEST 
0x209: V138 = 0x40
0x20b: V139 = M[0x40]
0x20d: V140 = ISZERO S0
0x20e: V141 = ISZERO V140
0x210: M[V139] = V141
0x211: V142 = 0x20
0x213: V143 = ADD 0x20 V139
0x214: V144 = 0x40
0x216: V145 = M[0x40]
0x219: V146 = SUB V143 V145
0x21b: RETURN V145 V146
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x21c
[0x21c:0x222]
---
Predecessors: [0x54]
Successors: [0x223, 0x227]
---
0x21c JUMPDEST
0x21d CALLVALUE
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x21c: JUMPDEST 
0x21d: V147 = CALLVALUE
0x21e: V148 = ISZERO V147
0x21f: V149 = 0x227
0x222: JUMPI 0x227 V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x21c]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V150 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x227
[0x227:0x26e]
---
Predecessors: [0x21c]
Successors: [0x786]
---
0x227 JUMPDEST
0x228 PUSH2 0x146
0x22b PUSH1 0x4
0x22d PUSH1 0x24
0x22f DUP2
0x230 CALLDATALOAD
0x231 DUP2
0x232 DUP2
0x233 ADD
0x234 SWAP1
0x235 DUP4
0x236 ADD
0x237 CALLDATALOAD
0x238 DUP1
0x239 PUSH1 0x20
0x23b PUSH1 0x1f
0x23d DUP3
0x23e ADD
0x23f DUP2
0x240 SWAP1
0x241 DIV
0x242 DUP2
0x243 MUL
0x244 ADD
0x245 PUSH1 0x40
0x247 MLOAD
0x248 SWAP1
0x249 DUP2
0x24a ADD
0x24b PUSH1 0x40
0x24d MSTORE
0x24e DUP2
0x24f DUP2
0x250 MSTORE
0x251 SWAP3
0x252 SWAP2
0x253 SWAP1
0x254 PUSH1 0x20
0x256 DUP5
0x257 ADD
0x258 DUP4
0x259 DUP4
0x25a DUP1
0x25b DUP3
0x25c DUP5
0x25d CALLDATACOPY
0x25e POP
0x25f SWAP5
0x260 SWAP7
0x261 POP
0x262 POP
0x263 SWAP4
0x264 CALLDATALOAD
0x265 SWAP4
0x266 POP
0x267 PUSH2 0x786
0x26a SWAP3
0x26b POP
0x26c POP
0x26d POP
0x26e JUMP
---
0x227: JUMPDEST 
0x228: V151 = 0x146
0x22b: V152 = 0x4
0x22d: V153 = 0x24
0x230: V154 = CALLDATALOAD 0x4
0x233: V155 = ADD V154 0x24
0x236: V156 = ADD 0x4 V154
0x237: V157 = CALLDATALOAD V156
0x239: V158 = 0x20
0x23b: V159 = 0x1f
0x23e: V160 = ADD V157 0x1f
0x241: V161 = DIV V160 0x20
0x243: V162 = MUL 0x20 V161
0x244: V163 = ADD V162 0x20
0x245: V164 = 0x40
0x247: V165 = M[0x40]
0x24a: V166 = ADD V165 V163
0x24b: V167 = 0x40
0x24d: M[0x40] = V166
0x250: M[V165] = V157
0x254: V168 = 0x20
0x257: V169 = ADD V165 0x20
0x25d: CALLDATACOPY V169 V155 V157
0x264: V170 = CALLDATALOAD 0x24
0x267: V171 = 0x786
0x26e: JUMP 0x786
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V165, V170]
Exit stack: [V10, 0x146, V165, V170]

================================

Block 0x26f
[0x26f:0x282]
---
Predecessors: []
Successors: []
---
0x26f JUMPDEST
0x270 PUSH1 0x40
0x272 MLOAD
0x273 SWAP1
0x274 ISZERO
0x275 ISZERO
0x276 DUP2
0x277 MSTORE
0x278 PUSH1 0x20
0x27a ADD
0x27b PUSH1 0x40
0x27d MLOAD
0x27e DUP1
0x27f SWAP2
0x280 SUB
0x281 SWAP1
0x282 RETURN
---
0x26f: JUMPDEST 
0x270: V172 = 0x40
0x272: V173 = M[0x40]
0x274: V174 = ISZERO S0
0x275: V175 = ISZERO V174
0x277: M[V173] = V175
0x278: V176 = 0x20
0x27a: V177 = ADD 0x20 V173
0x27b: V178 = 0x40
0x27d: V179 = M[0x40]
0x280: V180 = SUB V177 V179
0x282: RETURN V179 V180
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x283
[0x283:0x289]
---
Predecessors: [0x5f]
Successors: [0x28a, 0x28e]
---
0x283 JUMPDEST
0x284 CALLVALUE
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x283: JUMPDEST 
0x284: V181 = CALLVALUE
0x285: V182 = ISZERO V181
0x286: V183 = 0x28e
0x289: JUMPI 0x28e V182
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x283]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V184 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x28e
[0x28e:0x339]
---
Predecessors: [0x283]
Successors: [0x7aa]
---
0x28e JUMPDEST
0x28f PUSH2 0x146
0x292 PUSH1 0x4
0x294 DUP1
0x295 CALLDATALOAD
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac SWAP1
0x2ad PUSH1 0x44
0x2af PUSH1 0x24
0x2b1 DUP1
0x2b2 CALLDATALOAD
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 ADD
0x2b6 SWAP1
0x2b7 DUP4
0x2b8 ADD
0x2b9 CALLDATALOAD
0x2ba DUP1
0x2bb PUSH1 0x20
0x2bd PUSH1 0x1f
0x2bf DUP3
0x2c0 ADD
0x2c1 DUP2
0x2c2 SWAP1
0x2c3 DIV
0x2c4 DUP2
0x2c5 MUL
0x2c6 ADD
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca SWAP1
0x2cb DUP2
0x2cc ADD
0x2cd PUSH1 0x40
0x2cf MSTORE
0x2d0 DUP2
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 SWAP3
0x2d4 SWAP2
0x2d5 SWAP1
0x2d6 PUSH1 0x20
0x2d8 DUP5
0x2d9 ADD
0x2da DUP4
0x2db DUP4
0x2dc DUP1
0x2dd DUP3
0x2de DUP5
0x2df CALLDATACOPY
0x2e0 DUP3
0x2e1 ADD
0x2e2 SWAP2
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 SWAP2
0x2ea SWAP1
0x2eb DUP1
0x2ec CALLDATALOAD
0x2ed SWAP1
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 SWAP1
0x2f2 SWAP2
0x2f3 SWAP1
0x2f4 DUP1
0x2f5 CALLDATALOAD
0x2f6 SWAP1
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa SWAP1
0x2fb DUP3
0x2fc ADD
0x2fd DUP1
0x2fe CALLDATALOAD
0x2ff SWAP1
0x300 PUSH1 0x20
0x302 ADD
0x303 SWAP1
0x304 DUP1
0x305 DUP1
0x306 PUSH1 0x1f
0x308 ADD
0x309 PUSH1 0x20
0x30b DUP1
0x30c SWAP2
0x30d DIV
0x30e MUL
0x30f PUSH1 0x20
0x311 ADD
0x312 PUSH1 0x40
0x314 MLOAD
0x315 SWAP1
0x316 DUP2
0x317 ADD
0x318 PUSH1 0x40
0x31a MSTORE
0x31b DUP2
0x31c DUP2
0x31d MSTORE
0x31e SWAP3
0x31f SWAP2
0x320 SWAP1
0x321 PUSH1 0x20
0x323 DUP5
0x324 ADD
0x325 DUP4
0x326 DUP4
0x327 DUP1
0x328 DUP3
0x329 DUP5
0x32a CALLDATACOPY
0x32b POP
0x32c SWAP5
0x32d SWAP7
0x32e POP
0x32f PUSH2 0x7aa
0x332 SWAP6
0x333 POP
0x334 POP
0x335 POP
0x336 POP
0x337 POP
0x338 POP
0x339 JUMP
---
0x28e: JUMPDEST 
0x28f: V185 = 0x146
0x292: V186 = 0x4
0x295: V187 = CALLDATALOAD 0x4
0x296: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x2ad: V190 = 0x44
0x2af: V191 = 0x24
0x2b2: V192 = CALLDATALOAD 0x24
0x2b5: V193 = ADD V192 0x24
0x2b8: V194 = ADD 0x4 V192
0x2b9: V195 = CALLDATALOAD V194
0x2bb: V196 = 0x20
0x2bd: V197 = 0x1f
0x2c0: V198 = ADD V195 0x1f
0x2c3: V199 = DIV V198 0x20
0x2c5: V200 = MUL 0x20 V199
0x2c6: V201 = ADD V200 0x20
0x2c7: V202 = 0x40
0x2c9: V203 = M[0x40]
0x2cc: V204 = ADD V203 V201
0x2cd: V205 = 0x40
0x2cf: M[0x40] = V204
0x2d2: M[V203] = V195
0x2d6: V206 = 0x20
0x2d9: V207 = ADD V203 0x20
0x2df: CALLDATACOPY V207 V193 V195
0x2e1: V208 = ADD V207 V195
0x2ec: V209 = CALLDATALOAD 0x44
0x2ee: V210 = 0x20
0x2f0: V211 = ADD 0x20 0x44
0x2f5: V212 = CALLDATALOAD 0x64
0x2f7: V213 = 0x20
0x2f9: V214 = ADD 0x20 0x64
0x2fc: V215 = ADD 0x4 V212
0x2fe: V216 = CALLDATALOAD V215
0x300: V217 = 0x20
0x302: V218 = ADD 0x20 V215
0x306: V219 = 0x1f
0x308: V220 = ADD 0x1f V216
0x309: V221 = 0x20
0x30d: V222 = DIV V220 0x20
0x30e: V223 = MUL V222 0x20
0x30f: V224 = 0x20
0x311: V225 = ADD 0x20 V223
0x312: V226 = 0x40
0x314: V227 = M[0x40]
0x317: V228 = ADD V227 V225
0x318: V229 = 0x40
0x31a: M[0x40] = V228
0x31d: M[V227] = V216
0x321: V230 = 0x20
0x324: V231 = ADD V227 0x20
0x32a: CALLDATACOPY V231 V218 V216
0x32f: V232 = 0x7aa
0x339: JUMP 0x7aa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V189, V203, V209, V227]
Exit stack: [V10, 0x146, V189, V203, V209, V227]

================================

Block 0x33a
[0x33a:0x34d]
---
Predecessors: []
Successors: []
---
0x33a JUMPDEST
0x33b PUSH1 0x40
0x33d MLOAD
0x33e SWAP1
0x33f ISZERO
0x340 ISZERO
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x20
0x345 ADD
0x346 PUSH1 0x40
0x348 MLOAD
0x349 DUP1
0x34a SWAP2
0x34b SUB
0x34c SWAP1
0x34d RETURN
---
0x33a: JUMPDEST 
0x33b: V233 = 0x40
0x33d: V234 = M[0x40]
0x33f: V235 = ISZERO S0
0x340: V236 = ISZERO V235
0x342: M[V234] = V236
0x343: V237 = 0x20
0x345: V238 = ADD 0x20 V234
0x346: V239 = 0x40
0x348: V240 = M[0x40]
0x34b: V241 = SUB V238 V240
0x34d: RETURN V240 V241
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x34e
[0x34e:0x354]
---
Predecessors: [0x6a]
Successors: [0x355, 0x359]
---
0x34e JUMPDEST
0x34f CALLVALUE
0x350 ISZERO
0x351 PUSH2 0x359
0x354 JUMPI
---
0x34e: JUMPDEST 
0x34f: V242 = CALLVALUE
0x350: V243 = ISZERO V242
0x351: V244 = 0x359
0x354: JUMPI 0x359 V243
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x34e]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V245 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x359
[0x359:0x3e9]
---
Predecessors: [0x34e]
Successors: [0x7d3]
---
0x359 JUMPDEST
0x35a PUSH2 0x146
0x35d PUSH1 0x4
0x35f PUSH1 0x24
0x361 DUP2
0x362 CALLDATALOAD
0x363 DUP2
0x364 DUP2
0x365 ADD
0x366 SWAP1
0x367 DUP4
0x368 ADD
0x369 CALLDATALOAD
0x36a DUP1
0x36b PUSH1 0x20
0x36d PUSH1 0x1f
0x36f DUP3
0x370 ADD
0x371 DUP2
0x372 SWAP1
0x373 DIV
0x374 DUP2
0x375 MUL
0x376 ADD
0x377 PUSH1 0x40
0x379 MLOAD
0x37a SWAP1
0x37b DUP2
0x37c ADD
0x37d PUSH1 0x40
0x37f MSTORE
0x380 DUP2
0x381 DUP2
0x382 MSTORE
0x383 SWAP3
0x384 SWAP2
0x385 SWAP1
0x386 PUSH1 0x20
0x388 DUP5
0x389 ADD
0x38a DUP4
0x38b DUP4
0x38c DUP1
0x38d DUP3
0x38e DUP5
0x38f CALLDATACOPY
0x390 DUP3
0x391 ADD
0x392 SWAP2
0x393 POP
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 POP
0x399 SWAP2
0x39a SWAP1
0x39b DUP1
0x39c CALLDATALOAD
0x39d SWAP1
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 SWAP1
0x3a2 SWAP2
0x3a3 SWAP1
0x3a4 DUP1
0x3a5 CALLDATALOAD
0x3a6 SWAP1
0x3a7 PUSH1 0x20
0x3a9 ADD
0x3aa SWAP1
0x3ab DUP3
0x3ac ADD
0x3ad DUP1
0x3ae CALLDATALOAD
0x3af SWAP1
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 SWAP1
0x3b4 DUP1
0x3b5 DUP1
0x3b6 PUSH1 0x1f
0x3b8 ADD
0x3b9 PUSH1 0x20
0x3bb DUP1
0x3bc SWAP2
0x3bd DIV
0x3be MUL
0x3bf PUSH1 0x20
0x3c1 ADD
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 SWAP1
0x3c6 DUP2
0x3c7 ADD
0x3c8 PUSH1 0x40
0x3ca MSTORE
0x3cb DUP2
0x3cc DUP2
0x3cd MSTORE
0x3ce SWAP3
0x3cf SWAP2
0x3d0 SWAP1
0x3d1 PUSH1 0x20
0x3d3 DUP5
0x3d4 ADD
0x3d5 DUP4
0x3d6 DUP4
0x3d7 DUP1
0x3d8 DUP3
0x3d9 DUP5
0x3da CALLDATACOPY
0x3db POP
0x3dc SWAP5
0x3dd SWAP7
0x3de POP
0x3df PUSH2 0x7d3
0x3e2 SWAP6
0x3e3 POP
0x3e4 POP
0x3e5 POP
0x3e6 POP
0x3e7 POP
0x3e8 POP
0x3e9 JUMP
---
0x359: JUMPDEST 
0x35a: V246 = 0x146
0x35d: V247 = 0x4
0x35f: V248 = 0x24
0x362: V249 = CALLDATALOAD 0x4
0x365: V250 = ADD V249 0x24
0x368: V251 = ADD 0x4 V249
0x369: V252 = CALLDATALOAD V251
0x36b: V253 = 0x20
0x36d: V254 = 0x1f
0x370: V255 = ADD V252 0x1f
0x373: V256 = DIV V255 0x20
0x375: V257 = MUL 0x20 V256
0x376: V258 = ADD V257 0x20
0x377: V259 = 0x40
0x379: V260 = M[0x40]
0x37c: V261 = ADD V260 V258
0x37d: V262 = 0x40
0x37f: M[0x40] = V261
0x382: M[V260] = V252
0x386: V263 = 0x20
0x389: V264 = ADD V260 0x20
0x38f: CALLDATACOPY V264 V250 V252
0x391: V265 = ADD V264 V252
0x39c: V266 = CALLDATALOAD 0x24
0x39e: V267 = 0x20
0x3a0: V268 = ADD 0x20 0x24
0x3a5: V269 = CALLDATALOAD 0x44
0x3a7: V270 = 0x20
0x3a9: V271 = ADD 0x20 0x44
0x3ac: V272 = ADD 0x4 V269
0x3ae: V273 = CALLDATALOAD V272
0x3b0: V274 = 0x20
0x3b2: V275 = ADD 0x20 V272
0x3b6: V276 = 0x1f
0x3b8: V277 = ADD 0x1f V273
0x3b9: V278 = 0x20
0x3bd: V279 = DIV V277 0x20
0x3be: V280 = MUL V279 0x20
0x3bf: V281 = 0x20
0x3c1: V282 = ADD 0x20 V280
0x3c2: V283 = 0x40
0x3c4: V284 = M[0x40]
0x3c7: V285 = ADD V284 V282
0x3c8: V286 = 0x40
0x3ca: M[0x40] = V285
0x3cd: M[V284] = V273
0x3d1: V287 = 0x20
0x3d4: V288 = ADD V284 0x20
0x3da: CALLDATACOPY V288 V275 V273
0x3df: V289 = 0x7d3
0x3e9: JUMP 0x7d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V260, V266, V284]
Exit stack: [V10, 0x146, V260, V266, V284]

================================

Block 0x3ea
[0x3ea:0x3fd]
---
Predecessors: []
Successors: []
---
0x3ea JUMPDEST
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee SWAP1
0x3ef ISZERO
0x3f0 ISZERO
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 PUSH1 0x40
0x3f8 MLOAD
0x3f9 DUP1
0x3fa SWAP2
0x3fb SUB
0x3fc SWAP1
0x3fd RETURN
---
0x3ea: JUMPDEST 
0x3eb: V290 = 0x40
0x3ed: V291 = M[0x40]
0x3ef: V292 = ISZERO S0
0x3f0: V293 = ISZERO V292
0x3f2: M[V291] = V293
0x3f3: V294 = 0x20
0x3f5: V295 = ADD 0x20 V291
0x3f6: V296 = 0x40
0x3f8: V297 = M[0x40]
0x3fb: V298 = SUB V295 V297
0x3fd: RETURN V297 V298
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3fe
[0x3fe:0x404]
---
Predecessors: [0x75]
Successors: [0x405, 0x409]
---
0x3fe JUMPDEST
0x3ff CALLVALUE
0x400 ISZERO
0x401 PUSH2 0x409
0x404 JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V299 = CALLVALUE
0x400: V300 = ISZERO V299
0x401: V301 = 0x409
0x404: JUMPI 0x409 V300
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x405
[0x405:0x408]
---
Predecessors: [0x3fe]
Successors: []
---
0x405 PUSH1 0x0
0x407 DUP1
0x408 REVERT
---
0x405: V302 = 0x0
0x408: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x409
[0x409:0x471]
---
Predecessors: [0x3fe]
Successors: [0x7fa]
---
0x409 JUMPDEST
0x40a PUSH2 0x146
0x40d PUSH1 0x4
0x40f DUP1
0x410 CALLDATALOAD
0x411 SWAP1
0x412 PUSH1 0x24
0x414 DUP1
0x415 CALLDATALOAD
0x416 SWAP2
0x417 SWAP1
0x418 PUSH1 0x64
0x41a SWAP1
0x41b PUSH1 0x44
0x41d CALLDATALOAD
0x41e SWAP1
0x41f DUP2
0x420 ADD
0x421 SWAP1
0x422 DUP4
0x423 ADD
0x424 CALLDATALOAD
0x425 DUP1
0x426 PUSH1 0x20
0x428 PUSH1 0x1f
0x42a DUP3
0x42b ADD
0x42c DUP2
0x42d SWAP1
0x42e DIV
0x42f DUP2
0x430 MUL
0x431 ADD
0x432 PUSH1 0x40
0x434 MLOAD
0x435 SWAP1
0x436 DUP2
0x437 ADD
0x438 PUSH1 0x40
0x43a MSTORE
0x43b DUP2
0x43c DUP2
0x43d MSTORE
0x43e SWAP3
0x43f SWAP2
0x440 SWAP1
0x441 PUSH1 0x20
0x443 DUP5
0x444 ADD
0x445 DUP4
0x446 DUP4
0x447 DUP1
0x448 DUP3
0x449 DUP5
0x44a CALLDATACOPY
0x44b POP
0x44c SWAP5
0x44d SWAP7
0x44e POP
0x44f POP
0x450 POP
0x451 SWAP3
0x452 CALLDATALOAD
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 SWAP3
0x46a POP
0x46b PUSH2 0x7fa
0x46e SWAP2
0x46f POP
0x470 POP
0x471 JUMP
---
0x409: JUMPDEST 
0x40a: V303 = 0x146
0x40d: V304 = 0x4
0x410: V305 = CALLDATALOAD 0x4
0x412: V306 = 0x24
0x415: V307 = CALLDATALOAD 0x24
0x418: V308 = 0x64
0x41b: V309 = 0x44
0x41d: V310 = CALLDATALOAD 0x44
0x420: V311 = ADD V310 0x24
0x423: V312 = ADD 0x4 V310
0x424: V313 = CALLDATALOAD V312
0x426: V314 = 0x20
0x428: V315 = 0x1f
0x42b: V316 = ADD V313 0x1f
0x42e: V317 = DIV V316 0x20
0x430: V318 = MUL 0x20 V317
0x431: V319 = ADD V318 0x20
0x432: V320 = 0x40
0x434: V321 = M[0x40]
0x437: V322 = ADD V321 V319
0x438: V323 = 0x40
0x43a: M[0x40] = V322
0x43d: M[V321] = V313
0x441: V324 = 0x20
0x444: V325 = ADD V321 0x20
0x44a: CALLDATACOPY V325 V311 V313
0x452: V326 = CALLDATALOAD 0x64
0x453: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x46b: V329 = 0x7fa
0x471: JUMP 0x7fa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V305, V307, V321, V328]
Exit stack: [V10, 0x146, V305, V307, V321, V328]

================================

Block 0x472
[0x472:0x485]
---
Predecessors: []
Successors: []
---
0x472 JUMPDEST
0x473 PUSH1 0x40
0x475 MLOAD
0x476 SWAP1
0x477 ISZERO
0x478 ISZERO
0x479 DUP2
0x47a MSTORE
0x47b PUSH1 0x20
0x47d ADD
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 SWAP2
0x483 SUB
0x484 SWAP1
0x485 RETURN
---
0x472: JUMPDEST 
0x473: V330 = 0x40
0x475: V331 = M[0x40]
0x477: V332 = ISZERO S0
0x478: V333 = ISZERO V332
0x47a: M[V331] = V333
0x47b: V334 = 0x20
0x47d: V335 = ADD 0x20 V331
0x47e: V336 = 0x40
0x480: V337 = M[0x40]
0x483: V338 = SUB V335 V337
0x485: RETURN V337 V338
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x486
[0x486:0x48c]
---
Predecessors: [0x80]
Successors: [0x48d, 0x491]
---
0x486 JUMPDEST
0x487 CALLVALUE
0x488 ISZERO
0x489 PUSH2 0x491
0x48c JUMPI
---
0x486: JUMPDEST 
0x487: V339 = CALLVALUE
0x488: V340 = ISZERO V339
0x489: V341 = 0x491
0x48c: JUMPI 0x491 V340
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48d
[0x48d:0x490]
---
Predecessors: [0x486]
Successors: []
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
---
0x48d: V342 = 0x0
0x490: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x491
[0x491:0x516]
---
Predecessors: [0x486]
Successors: [0x838]
---
0x491 JUMPDEST
0x492 PUSH2 0x146
0x495 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4aa PUSH1 0x4
0x4ac DUP1
0x4ad CALLDATALOAD
0x4ae DUP3
0x4af AND
0x4b0 SWAP2
0x4b1 PUSH1 0x24
0x4b3 DUP1
0x4b4 CALLDATALOAD
0x4b5 SWAP1
0x4b6 SWAP2
0x4b7 AND
0x4b8 SWAP2
0x4b9 PUSH1 0x44
0x4bb CALLDATALOAD
0x4bc SWAP2
0x4bd PUSH1 0x84
0x4bf SWAP1
0x4c0 PUSH1 0x64
0x4c2 CALLDATALOAD
0x4c3 SWAP1
0x4c4 DUP2
0x4c5 ADD
0x4c6 SWAP1
0x4c7 DUP4
0x4c8 ADD
0x4c9 CALLDATALOAD
0x4ca DUP1
0x4cb PUSH1 0x20
0x4cd PUSH1 0x1f
0x4cf DUP3
0x4d0 ADD
0x4d1 DUP2
0x4d2 SWAP1
0x4d3 DIV
0x4d4 DUP2
0x4d5 MUL
0x4d6 ADD
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da SWAP1
0x4db DUP2
0x4dc ADD
0x4dd PUSH1 0x40
0x4df MSTORE
0x4e0 DUP2
0x4e1 DUP2
0x4e2 MSTORE
0x4e3 SWAP3
0x4e4 SWAP2
0x4e5 SWAP1
0x4e6 PUSH1 0x20
0x4e8 DUP5
0x4e9 ADD
0x4ea DUP4
0x4eb DUP4
0x4ec DUP1
0x4ed DUP3
0x4ee DUP5
0x4ef CALLDATACOPY
0x4f0 POP
0x4f1 SWAP5
0x4f2 SWAP7
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 SWAP3
0x4f7 CALLDATALOAD
0x4f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50d AND
0x50e SWAP3
0x50f POP
0x510 PUSH2 0x838
0x513 SWAP2
0x514 POP
0x515 POP
0x516 JUMP
---
0x491: JUMPDEST 
0x492: V343 = 0x146
0x495: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x4aa: V345 = 0x4
0x4ad: V346 = CALLDATALOAD 0x4
0x4af: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x4b1: V348 = 0x24
0x4b4: V349 = CALLDATALOAD 0x24
0x4b7: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x4b9: V351 = 0x44
0x4bb: V352 = CALLDATALOAD 0x44
0x4bd: V353 = 0x84
0x4c0: V354 = 0x64
0x4c2: V355 = CALLDATALOAD 0x64
0x4c5: V356 = ADD V355 0x24
0x4c8: V357 = ADD 0x4 V355
0x4c9: V358 = CALLDATALOAD V357
0x4cb: V359 = 0x20
0x4cd: V360 = 0x1f
0x4d0: V361 = ADD V358 0x1f
0x4d3: V362 = DIV V361 0x20
0x4d5: V363 = MUL 0x20 V362
0x4d6: V364 = ADD V363 0x20
0x4d7: V365 = 0x40
0x4d9: V366 = M[0x40]
0x4dc: V367 = ADD V366 V364
0x4dd: V368 = 0x40
0x4df: M[0x40] = V367
0x4e2: M[V366] = V358
0x4e6: V369 = 0x20
0x4e9: V370 = ADD V366 0x20
0x4ef: CALLDATACOPY V370 V356 V358
0x4f7: V371 = CALLDATALOAD 0x84
0x4f8: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x50d: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x510: V374 = 0x838
0x516: JUMP 0x838
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V347, V350, V352, V366, V373]
Exit stack: [V10, 0x146, V347, V350, V352, V366, V373]

================================

Block 0x517
[0x517:0x52a]
---
Predecessors: []
Successors: []
---
0x517 JUMPDEST
0x518 PUSH1 0x40
0x51a MLOAD
0x51b SWAP1
0x51c ISZERO
0x51d ISZERO
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x20
0x522 ADD
0x523 PUSH1 0x40
0x525 MLOAD
0x526 DUP1
0x527 SWAP2
0x528 SUB
0x529 SWAP1
0x52a RETURN
---
0x517: JUMPDEST 
0x518: V375 = 0x40
0x51a: V376 = M[0x40]
0x51c: V377 = ISZERO S0
0x51d: V378 = ISZERO V377
0x51f: M[V376] = V378
0x520: V379 = 0x20
0x522: V380 = ADD 0x20 V376
0x523: V381 = 0x40
0x525: V382 = M[0x40]
0x528: V383 = SUB V380 V382
0x52a: RETURN V382 V383
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x52b
[0x52b:0x588]
---
Predecessors: [0x8b]
Successors: [0x878]
---
0x52b JUMPDEST
0x52c PUSH2 0x589
0x52f PUSH1 0x4
0x531 PUSH1 0x24
0x533 DUP2
0x534 CALLDATALOAD
0x535 DUP2
0x536 DUP2
0x537 ADD
0x538 SWAP1
0x539 DUP4
0x53a ADD
0x53b CALLDATALOAD
0x53c DUP1
0x53d PUSH1 0x20
0x53f PUSH1 0x1f
0x541 DUP3
0x542 ADD
0x543 DUP2
0x544 SWAP1
0x545 DIV
0x546 DUP2
0x547 MUL
0x548 ADD
0x549 PUSH1 0x40
0x54b MLOAD
0x54c SWAP1
0x54d DUP2
0x54e ADD
0x54f PUSH1 0x40
0x551 MSTORE
0x552 DUP2
0x553 DUP2
0x554 MSTORE
0x555 SWAP3
0x556 SWAP2
0x557 SWAP1
0x558 PUSH1 0x20
0x55a DUP5
0x55b ADD
0x55c DUP4
0x55d DUP4
0x55e DUP1
0x55f DUP3
0x560 DUP5
0x561 CALLDATACOPY
0x562 POP
0x563 SWAP5
0x564 SWAP7
0x565 POP
0x566 POP
0x567 POP
0x568 SWAP3
0x569 CALLDATALOAD
0x56a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57f AND
0x580 SWAP3
0x581 POP
0x582 PUSH2 0x878
0x585 SWAP2
0x586 POP
0x587 POP
0x588 JUMP
---
0x52b: JUMPDEST 
0x52c: V384 = 0x589
0x52f: V385 = 0x4
0x531: V386 = 0x24
0x534: V387 = CALLDATALOAD 0x4
0x537: V388 = ADD V387 0x24
0x53a: V389 = ADD 0x4 V387
0x53b: V390 = CALLDATALOAD V389
0x53d: V391 = 0x20
0x53f: V392 = 0x1f
0x542: V393 = ADD V390 0x1f
0x545: V394 = DIV V393 0x20
0x547: V395 = MUL 0x20 V394
0x548: V396 = ADD V395 0x20
0x549: V397 = 0x40
0x54b: V398 = M[0x40]
0x54e: V399 = ADD V398 V396
0x54f: V400 = 0x40
0x551: M[0x40] = V399
0x554: M[V398] = V390
0x558: V401 = 0x20
0x55b: V402 = ADD V398 0x20
0x561: CALLDATACOPY V402 V388 V390
0x569: V403 = CALLDATALOAD 0x24
0x56a: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x57f: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x582: V406 = 0x878
0x588: JUMP 0x878
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x589, V398, V405]
Exit stack: [V10, 0x589, V398, V405]

================================

Block 0x589
[0x589:0x58a]
---
Predecessors: [0x8aa]
Successors: []
---
0x589 JUMPDEST
0x58a STOP
---
0x589: JUMPDEST 
0x58a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x58b
[0x58b:0x591]
---
Predecessors: [0x96]
Successors: [0x592, 0x596]
---
0x58b JUMPDEST
0x58c CALLVALUE
0x58d ISZERO
0x58e PUSH2 0x596
0x591 JUMPI
---
0x58b: JUMPDEST 
0x58c: V407 = CALLVALUE
0x58d: V408 = ISZERO V407
0x58e: V409 = 0x596
0x591: JUMPI 0x596 V408
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x592
[0x592:0x595]
---
Predecessors: [0x58b]
Successors: []
---
0x592 PUSH1 0x0
0x594 DUP1
0x595 REVERT
---
0x592: V410 = 0x0
0x595: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x596
[0x596:0x5c0]
---
Predecessors: [0x58b]
Successors: [0x8ae]
---
0x596 JUMPDEST
0x597 PUSH2 0x146
0x59a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5af PUSH1 0x4
0x5b1 CALLDATALOAD
0x5b2 DUP2
0x5b3 AND
0x5b4 SWAP1
0x5b5 PUSH1 0x24
0x5b7 CALLDATALOAD
0x5b8 SWAP1
0x5b9 PUSH1 0x44
0x5bb CALLDATALOAD
0x5bc AND
0x5bd PUSH2 0x8ae
0x5c0 JUMP
---
0x596: JUMPDEST 
0x597: V411 = 0x146
0x59a: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x5af: V413 = 0x4
0x5b1: V414 = CALLDATALOAD 0x4
0x5b3: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x5b5: V416 = 0x24
0x5b7: V417 = CALLDATALOAD 0x24
0x5b9: V418 = 0x44
0x5bb: V419 = CALLDATALOAD 0x44
0x5bc: V420 = AND V419 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V421 = 0x8ae
0x5c0: JUMP 0x8ae
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V415, V417, V420]
Exit stack: [V10, 0x146, V415, V417, V420]

================================

Block 0x5c1
[0x5c1:0x5d4]
---
Predecessors: []
Successors: []
---
0x5c1 JUMPDEST
0x5c2 PUSH1 0x40
0x5c4 MLOAD
0x5c5 SWAP1
0x5c6 ISZERO
0x5c7 ISZERO
0x5c8 DUP2
0x5c9 MSTORE
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 DUP1
0x5d1 SWAP2
0x5d2 SUB
0x5d3 SWAP1
0x5d4 RETURN
---
0x5c1: JUMPDEST 
0x5c2: V422 = 0x40
0x5c4: V423 = M[0x40]
0x5c6: V424 = ISZERO S0
0x5c7: V425 = ISZERO V424
0x5c9: M[V423] = V425
0x5ca: V426 = 0x20
0x5cc: V427 = ADD 0x20 V423
0x5cd: V428 = 0x40
0x5cf: V429 = M[0x40]
0x5d2: V430 = SUB V427 V429
0x5d4: RETURN V429 V430
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5d5
[0x5d5:0x5db]
---
Predecessors: [0xa1]
Successors: [0x5dc, 0x5e0]
---
0x5d5 JUMPDEST
0x5d6 CALLVALUE
0x5d7 ISZERO
0x5d8 PUSH2 0x5e0
0x5db JUMPI
---
0x5d5: JUMPDEST 
0x5d6: V431 = CALLVALUE
0x5d7: V432 = ISZERO V431
0x5d8: V433 = 0x5e0
0x5db: JUMPI 0x5e0 V432
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5dc
[0x5dc:0x5df]
---
Predecessors: [0x5d5]
Successors: []
---
0x5dc PUSH1 0x0
0x5de DUP1
0x5df REVERT
---
0x5dc: V434 = 0x0
0x5df: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5e0
[0x5e0:0x661]
---
Predecessors: [0x5d5]
Successors: [0x8ea]
---
0x5e0 JUMPDEST
0x5e1 PUSH2 0x146
0x5e4 PUSH1 0x4
0x5e6 DUP1
0x5e7 CALLDATALOAD
0x5e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fd AND
0x5fe SWAP1
0x5ff PUSH1 0x24
0x601 DUP1
0x602 CALLDATALOAD
0x603 SWAP2
0x604 PUSH1 0x44
0x606 CALLDATALOAD
0x607 SWAP2
0x608 PUSH1 0x84
0x60a SWAP1
0x60b PUSH1 0x64
0x60d CALLDATALOAD
0x60e SWAP1
0x60f DUP2
0x610 ADD
0x611 SWAP1
0x612 DUP4
0x613 ADD
0x614 CALLDATALOAD
0x615 DUP1
0x616 PUSH1 0x20
0x618 PUSH1 0x1f
0x61a DUP3
0x61b ADD
0x61c DUP2
0x61d SWAP1
0x61e DIV
0x61f DUP2
0x620 MUL
0x621 ADD
0x622 PUSH1 0x40
0x624 MLOAD
0x625 SWAP1
0x626 DUP2
0x627 ADD
0x628 PUSH1 0x40
0x62a MSTORE
0x62b DUP2
0x62c DUP2
0x62d MSTORE
0x62e SWAP3
0x62f SWAP2
0x630 SWAP1
0x631 PUSH1 0x20
0x633 DUP5
0x634 ADD
0x635 DUP4
0x636 DUP4
0x637 DUP1
0x638 DUP3
0x639 DUP5
0x63a CALLDATACOPY
0x63b POP
0x63c SWAP5
0x63d SWAP7
0x63e POP
0x63f POP
0x640 POP
0x641 SWAP3
0x642 CALLDATALOAD
0x643 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x658 AND
0x659 SWAP3
0x65a POP
0x65b PUSH2 0x8ea
0x65e SWAP2
0x65f POP
0x660 POP
0x661 JUMP
---
0x5e0: JUMPDEST 
0x5e1: V435 = 0x146
0x5e4: V436 = 0x4
0x5e7: V437 = CALLDATALOAD 0x4
0x5e8: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x5ff: V440 = 0x24
0x602: V441 = CALLDATALOAD 0x24
0x604: V442 = 0x44
0x606: V443 = CALLDATALOAD 0x44
0x608: V444 = 0x84
0x60b: V445 = 0x64
0x60d: V446 = CALLDATALOAD 0x64
0x610: V447 = ADD V446 0x24
0x613: V448 = ADD 0x4 V446
0x614: V449 = CALLDATALOAD V448
0x616: V450 = 0x20
0x618: V451 = 0x1f
0x61b: V452 = ADD V449 0x1f
0x61e: V453 = DIV V452 0x20
0x620: V454 = MUL 0x20 V453
0x621: V455 = ADD V454 0x20
0x622: V456 = 0x40
0x624: V457 = M[0x40]
0x627: V458 = ADD V457 V455
0x628: V459 = 0x40
0x62a: M[0x40] = V458
0x62d: M[V457] = V449
0x631: V460 = 0x20
0x634: V461 = ADD V457 0x20
0x63a: CALLDATACOPY V461 V447 V449
0x642: V462 = CALLDATALOAD 0x84
0x643: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x658: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x65b: V465 = 0x8ea
0x661: JUMP 0x8ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146, V439, V441, V443, V457, V464]
Exit stack: [V10, 0x146, V439, V441, V443, V457, V464]

================================

Block 0x662
[0x662:0x675]
---
Predecessors: []
Successors: []
---
0x662 JUMPDEST
0x663 PUSH1 0x40
0x665 MLOAD
0x666 SWAP1
0x667 ISZERO
0x668 ISZERO
0x669 DUP2
0x66a MSTORE
0x66b PUSH1 0x20
0x66d ADD
0x66e PUSH1 0x40
0x670 MLOAD
0x671 DUP1
0x672 SWAP2
0x673 SUB
0x674 SWAP1
0x675 RETURN
---
0x662: JUMPDEST 
0x663: V466 = 0x40
0x665: V467 = M[0x40]
0x667: V468 = ISZERO S0
0x668: V469 = ISZERO V468
0x66a: M[V467] = V469
0x66b: V470 = 0x20
0x66d: V471 = ADD 0x20 V467
0x66e: V472 = 0x40
0x670: V473 = M[0x40]
0x673: V474 = SUB V471 V473
0x675: RETURN V473 V474
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x676
[0x676:0x67c]
---
Predecessors: [0xac]
Successors: [0x67d, 0x681]
---
0x676 JUMPDEST
0x677 CALLVALUE
0x678 ISZERO
0x679 PUSH2 0x681
0x67c JUMPI
---
0x676: JUMPDEST 
0x677: V475 = CALLVALUE
0x678: V476 = ISZERO V475
0x679: V477 = 0x681
0x67c: JUMPI 0x681 V476
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: [0x676]
Successors: []
---
0x67d PUSH1 0x0
0x67f DUP1
0x680 REVERT
---
0x67d: V478 = 0x0
0x680: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x681
[0x681:0x688]
---
Predecessors: [0x676]
Successors: [0x92a]
---
0x681 JUMPDEST
0x682 PUSH2 0x689
0x685 PUSH2 0x92a
0x688 JUMP
---
0x681: JUMPDEST 
0x682: V479 = 0x689
0x685: V480 = 0x92a
0x688: JUMP 0x92a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x689]
Exit stack: [V10, 0x689]

================================

Block 0x689
[0x689:0x6b1]
---
Predecessors: [0x92a]
Successors: []
---
0x689 JUMPDEST
0x68a PUSH1 0x40
0x68c MLOAD
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 SWAP1
0x6a3 SWAP2
0x6a4 AND
0x6a5 DUP2
0x6a6 MSTORE
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa PUSH1 0x40
0x6ac MLOAD
0x6ad DUP1
0x6ae SWAP2
0x6af SUB
0x6b0 SWAP1
0x6b1 RETURN
---
0x689: JUMPDEST 
0x68a: V481 = 0x40
0x68c: V482 = M[0x40]
0x68d: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V484 = AND V608 0xffffffffffffffffffffffffffffffffffffffff
0x6a6: M[V482] = V484
0x6a7: V485 = 0x20
0x6a9: V486 = ADD 0x20 V482
0x6aa: V487 = 0x40
0x6ac: V488 = M[0x40]
0x6af: V489 = SUB V486 V488
0x6b1: RETURN V488 V489
---
Entry stack: [V10, 0x689, V608]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x689]

================================

Block 0x6b2
[0x6b2:0x6d7]
---
Predecessors: [0xc7]
Successors: [0x6d8, 0x6e6]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x0
0x6b5 DUP1
0x6b6 SLOAD
0x6b7 CALLER
0x6b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cd SWAP1
0x6ce DUP2
0x6cf AND
0x6d0 SWAP2
0x6d1 AND
0x6d2 EQ
0x6d3 ISZERO
0x6d4 PUSH2 0x6e6
0x6d7 JUMPI
---
0x6b2: JUMPDEST 
0x6b3: V490 = 0x0
0x6b6: V491 = S[0x0]
0x6b7: V492 = CALLER
0x6b8: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cf: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x6d1: V495 = AND V491 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V496 = EQ V495 V494
0x6d3: V497 = ISZERO V496
0x6d4: V498 = 0x6e6
0x6d7: JUMPI 0x6e6 V497
---
Entry stack: [V10, 0x146, V56, V58, V72, V79]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x146, V56, V58, V72, V79, 0x0]

================================

Block 0x6d8
[0x6d8:0x6e2]
---
Predecessors: [0x6b2]
Successors: [0x946]
---
0x6d8 PUSH2 0x6e3
0x6db DUP6
0x6dc DUP6
0x6dd DUP6
0x6de DUP6
0x6df PUSH2 0x946
0x6e2 JUMP
---
0x6d8: V499 = 0x6e3
0x6df: V500 = 0x946
0x6e2: JUMP 0x946
---
Entry stack: [V10, 0x146, V56, V58, V72, V79, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x6e3, S4, S3, S2, S1]
Exit stack: [V10, 0x146, V56, V58, V72, V79, 0x0, 0x6e3, V56, V58, V72, V79]

================================

Block 0x6e3
[0x6e3:0x6e5]
---
Predecessors: [0xa7e, 0xc27]
Successors: [0x6e6]
---
0x6e3 JUMPDEST
0x6e4 SWAP1
0x6e5 POP
---
0x6e3: JUMPDEST 
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x6e6
[0x6e6:0x6e6]
---
Predecessors: [0x6b2, 0x6e3, 0x7fa]
Successors: [0x6e7]
---
0x6e6 JUMPDEST
---
0x6e6: JUMPDEST 
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e7
[0x6e7:0x6e7]
---
Predecessors: [0x6e6]
Successors: [0x6e8]
---
0x6e7 JUMPDEST
---
0x6e7: JUMPDEST 
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e8
[0x6e8:0x6ef]
---
Predecessors: [0x6e7]
Successors: [0x146, 0x77c]
---
0x6e8 JUMPDEST
0x6e9 SWAP5
0x6ea SWAP4
0x6eb POP
0x6ec POP
0x6ed POP
0x6ee POP
0x6ef JUMP
---
0x6e8: JUMPDEST 
0x6ef: JUMP S5
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S0]

================================

Block 0x6f0
[0x6f0:0x70f]
---
Predecessors: [0x165]
Successors: [0x710, 0x717]
---
0x6f0 JUMPDEST
0x6f1 PUSH1 0x0
0x6f3 DUP1
0x6f4 SLOAD
0x6f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70a AND
0x70b ISZERO
0x70c PUSH2 0x717
0x70f JUMPI
---
0x6f0: JUMPDEST 
0x6f1: V501 = 0x0
0x6f4: V502 = S[0x0]
0x6f5: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x70a: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x70b: V505 = ISZERO V504
0x70c: V506 = 0x717
0x70f: JUMPI 0x717 V505
---
Entry stack: [V10, 0x146, V98]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x146, V98, 0x0]

================================

Block 0x710
[0x710:0x716]
---
Predecessors: [0x6f0]
Successors: [0x75b]
---
0x710 POP
0x711 PUSH1 0x0
0x713 PUSH2 0x75b
0x716 JUMP
---
0x711: V507 = 0x0
0x713: V508 = 0x75b
0x716: JUMP 0x75b
---
Entry stack: [V10, 0x146, V98, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x146, V98, 0x0]

================================

Block 0x717
[0x717:0x75a]
---
Predecessors: [0x6f0]
Successors: [0x75b]
---
0x717 JUMPDEST
0x718 POP
0x719 PUSH1 0x0
0x71b DUP1
0x71c SLOAD
0x71d PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x73e AND
0x73f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x754 DUP4
0x755 AND
0x756 OR
0x757 SWAP1
0x758 SSTORE
0x759 PUSH1 0x1
---
0x717: JUMPDEST 
0x719: V509 = 0x0
0x71c: V510 = S[0x0]
0x71d: V511 = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x73e: V512 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V510
0x73f: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x755: V514 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x756: V515 = OR V514 V512
0x758: S[0x0] = V515
0x759: V516 = 0x1
---
Entry stack: [V10, 0x146, V98, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x146, V98, 0x1]

================================

Block 0x75b
[0x75b:0x75f]
---
Predecessors: [0x710, 0x717]
Successors: [0x146]
---
0x75b JUMPDEST
0x75c SWAP2
0x75d SWAP1
0x75e POP
0x75f JUMP
---
0x75b: JUMPDEST 
0x75f: JUMP 0x146
---
Entry stack: [V10, 0x146, V98, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x760
[0x760:0x77b]
---
Predecessors: [0x1a5]
Successors: [0x7aa]
---
0x760 JUMPDEST
0x761 PUSH1 0x0
0x763 PUSH2 0x77c
0x766 DUP5
0x767 DUP5
0x768 DUP5
0x769 PUSH1 0x20
0x76b PUSH1 0x40
0x76d MLOAD
0x76e SWAP1
0x76f DUP2
0x770 ADD
0x771 PUSH1 0x40
0x773 MSTORE
0x774 PUSH1 0x0
0x776 DUP2
0x777 MSTORE
0x778 PUSH2 0x7aa
0x77b JUMP
---
0x760: JUMPDEST 
0x761: V517 = 0x0
0x763: V518 = 0x77c
0x769: V519 = 0x20
0x76b: V520 = 0x40
0x76d: V521 = M[0x40]
0x770: V522 = ADD V521 0x20
0x771: V523 = 0x40
0x773: M[0x40] = V522
0x774: V524 = 0x0
0x777: M[V521] = 0x0
0x778: V525 = 0x7aa
0x77b: JUMP 0x7aa
---
Entry stack: [V10, 0x146, V117, V131, V136]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x77c, S2, S1, S0, V521]
Exit stack: [V10, 0x146, V117, V131, V136, 0x0, 0x77c, V117, V131, V136, V521]

================================

Block 0x77c
[0x77c:0x77e]
---
Predecessors: [0x6e8, 0xa7e, 0x1016]
Successors: [0x77f]
---
0x77c JUMPDEST
0x77d SWAP1
0x77e POP
---
0x77c: JUMPDEST 
---
Entry stack: [V10, 0x146, V117, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x77f
[0x77f:0x785]
---
Predecessors: [0x77c, 0x8ae]
Successors: [0x146, 0x7a1]
---
0x77f JUMPDEST
0x780 SWAP4
0x781 SWAP3
0x782 POP
0x783 POP
0x784 POP
0x785 JUMP
---
0x77f: JUMPDEST 
0x785: JUMP S4
---
Entry stack: [V10, 0x146, V117, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S9, S8, S7, S6, S5, S0]

================================

Block 0x786
[0x786:0x7a0]
---
Predecessors: [0x227]
Successors: [0x7d3]
---
0x786 JUMPDEST
0x787 PUSH1 0x0
0x789 PUSH2 0x7a1
0x78c DUP4
0x78d DUP4
0x78e PUSH1 0x20
0x790 PUSH1 0x40
0x792 MLOAD
0x793 SWAP1
0x794 DUP2
0x795 ADD
0x796 PUSH1 0x40
0x798 MSTORE
0x799 PUSH1 0x0
0x79b DUP2
0x79c MSTORE
0x79d PUSH2 0x7d3
0x7a0 JUMP
---
0x786: JUMPDEST 
0x787: V526 = 0x0
0x789: V527 = 0x7a1
0x78e: V528 = 0x20
0x790: V529 = 0x40
0x792: V530 = M[0x40]
0x795: V531 = ADD V530 0x20
0x796: V532 = 0x40
0x798: M[0x40] = V531
0x799: V533 = 0x0
0x79c: M[V530] = 0x0
0x79d: V534 = 0x7d3
0x7a0: JUMP 0x7d3
---
Entry stack: [V10, 0x146, V165, V170]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x7a1, S1, S0, V530]
Exit stack: [V10, 0x146, V165, V170, 0x0, 0x7a1, V165, V170, V530]

================================

Block 0x7a1
[0x7a1:0x7a3]
---
Predecessors: [0x77f]
Successors: [0x7a4]
---
0x7a1 JUMPDEST
0x7a2 SWAP1
0x7a3 POP
---
0x7a1: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x7a4
[0x7a4:0x7a9]
---
Predecessors: [0x7a1]
Successors: []
Has unresolved jump.
---
0x7a4 JUMPDEST
0x7a5 SWAP3
0x7a6 SWAP2
0x7a7 POP
0x7a8 POP
0x7a9 JUMP
---
0x7a4: JUMPDEST 
0x7a9: JUMP S3
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x7aa
[0x7aa:0x7b8]
---
Predecessors: [0x28e, 0x760]
Successors: [0xa86]
---
0x7aa JUMPDEST
0x7ab PUSH1 0x0
0x7ad PUSH2 0x6e3
0x7b0 DUP6
0x7b1 PUSH2 0x7b9
0x7b4 DUP7
0x7b5 PUSH2 0xa86
0x7b8 JUMP
---
0x7aa: JUMPDEST 
0x7ab: V535 = 0x0
0x7ad: V536 = 0x6e3
0x7b1: V537 = 0x7b9
0x7b5: V538 = 0xa86
0x7b8: JUMP 0xa86
---
Entry stack: [V10, 0x146, V117, V131, V136, S5, {0x146, 0x77c}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x6e3, S3, 0x7b9, S2]
Exit stack: [V10, 0x146, V117, V131, V136, S5, {0x146, 0x77c}, S3, S2, S1, S0, 0x0, 0x6e3, S3, 0x7b9, S2]

================================

Block 0x7b9
[0x7b9:0x7c2]
---
Predecessors: [0xa90]
Successors: [0xa95]
---
0x7b9 JUMPDEST
0x7ba DUP6
0x7bb DUP6
0x7bc PUSH2 0x7c3
0x7bf PUSH2 0xa95
0x7c2 JUMP
---
0x7b9: JUMPDEST 
0x7bc: V539 = 0x7c3
0x7bf: V540 = 0xa95
0x7c2: JUMP 0xa95
---
Entry stack: [V10, 0x146, V117, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6e3}, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, S4, 0x7c3]
Exit stack: [V10, 0x146, V117, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6e3}, S1, S0, S5, S4, 0x7c3]

================================

Block 0x7c3
[0x7c3:0x7c7]
---
Predecessors: [0xaed]
Successors: [0xaf0]
---
0x7c3 JUMPDEST
0x7c4 PUSH2 0xaf0
0x7c7 JUMP
---
0x7c3: JUMPDEST 
0x7c4: V541 = 0xaf0
0x7c7: JUMP 0xaf0
---
Entry stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, S0]

================================

Block 0x7c8
[0x7c8:0x7ca]
---
Predecessors: []
Successors: [0x7cb]
---
0x7c8 JUMPDEST
0x7c9 SWAP1
0x7ca POP
---
0x7c8: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x7cb
[0x7cb:0x7d2]
---
Predecessors: [0x7c8]
Successors: []
Has unresolved jump.
---
0x7cb JUMPDEST
0x7cc SWAP5
0x7cd SWAP4
0x7ce POP
0x7cf POP
0x7d0 POP
0x7d1 POP
0x7d2 JUMP
---
0x7cb: JUMPDEST 
0x7d2: JUMP S5
---
Entry stack: [S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x7d3
[0x7d3:0x7e0]
---
Predecessors: [0x359, 0x786]
Successors: [0xa86]
---
0x7d3 JUMPDEST
0x7d4 PUSH1 0x0
0x7d6 PUSH2 0x77c
0x7d9 PUSH2 0x7e1
0x7dc DUP6
0x7dd PUSH2 0xa86
0x7e0 JUMP
---
0x7d3: JUMPDEST 
0x7d4: V542 = 0x0
0x7d6: V543 = 0x77c
0x7d9: V544 = 0x7e1
0x7dd: V545 = 0xa86
0x7e0: JUMP 0xa86
---
Entry stack: [V10, 0x146, V165, V170, S4, {0x146, 0x7a1}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x77c, 0x7e1, S2]
Exit stack: [V10, 0x146, V165, V170, S4, {0x146, 0x7a1}, S2, S1, S0, 0x0, 0x77c, 0x7e1, S2]

================================

Block 0x7e1
[0x7e1:0x7ea]
---
Predecessors: [0xa90]
Successors: [0xa95]
---
0x7e1 JUMPDEST
0x7e2 DUP5
0x7e3 DUP5
0x7e4 PUSH2 0x7eb
0x7e7 PUSH2 0xa95
0x7ea JUMP
---
0x7e1: JUMPDEST 
0x7e4: V546 = 0x7eb
0x7e7: V547 = 0xa95
0x7ea: JUMP 0xa95
---
Entry stack: [V10, 0x146, V117, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6e3}, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3, 0x7eb]
Exit stack: [V10, 0x146, V117, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6e3}, S1, S0, S4, S3, 0x7eb]

================================

Block 0x7eb
[0x7eb:0x7ef]
---
Predecessors: [0xaed]
Successors: [0xc30]
---
0x7eb JUMPDEST
0x7ec PUSH2 0xc30
0x7ef JUMP
---
0x7eb: JUMPDEST 
0x7ec: V548 = 0xc30
0x7ef: JUMP 0xc30
---
Entry stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, S0]

================================

Block 0x7f0
[0x7f0:0x7f2]
---
Predecessors: []
Successors: [0x7f3]
---
0x7f0 JUMPDEST
0x7f1 SWAP1
0x7f2 POP
---
0x7f0: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x7f3
[0x7f3:0x7f9]
---
Predecessors: [0x7f0]
Successors: []
Has unresolved jump.
---
0x7f3 JUMPDEST
0x7f4 SWAP4
0x7f5 SWAP3
0x7f6 POP
0x7f7 POP
0x7f8 POP
0x7f9 JUMP
---
0x7f3: JUMPDEST 
0x7f9: JUMP S4
---
Entry stack: [S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x7fa
[0x7fa:0x81f]
---
Predecessors: [0x409]
Successors: [0x6e6, 0x820]
---
0x7fa JUMPDEST
0x7fb PUSH1 0x0
0x7fd DUP1
0x7fe SLOAD
0x7ff CALLER
0x800 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x815 SWAP1
0x816 DUP2
0x817 AND
0x818 SWAP2
0x819 AND
0x81a EQ
0x81b ISZERO
0x81c PUSH2 0x6e6
0x81f JUMPI
---
0x7fa: JUMPDEST 
0x7fb: V549 = 0x0
0x7fe: V550 = S[0x0]
0x7ff: V551 = CALLER
0x800: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x817: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x819: V554 = AND V550 0xffffffffffffffffffffffffffffffffffffffff
0x81a: V555 = EQ V554 V553
0x81b: V556 = ISZERO V555
0x81c: V557 = 0x6e6
0x81f: JUMPI 0x6e6 V556
---
Entry stack: [V10, 0x146, V305, V307, V321, V328]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x146, V305, V307, V321, V328, 0x0]

================================

Block 0x820
[0x820:0x82a]
---
Predecessors: [0x7fa]
Successors: [0xc30]
---
0x820 PUSH2 0x6e3
0x823 DUP6
0x824 DUP6
0x825 DUP6
0x826 DUP6
0x827 PUSH2 0xc30
0x82a JUMP
---
0x820: V558 = 0x6e3
0x827: V559 = 0xc30
0x82a: JUMP 0xc30
---
Entry stack: [V10, 0x146, V305, V307, V321, V328, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x6e3, S4, S3, S2, S1]
Exit stack: [V10, 0x146, V305, V307, V321, V328, 0x0, 0x6e3, V305, V307, V321, V328]

================================

Block 0x82b
[0x82b:0x82d]
---
Predecessors: []
Successors: [0x82e]
---
0x82b JUMPDEST
0x82c SWAP1
0x82d POP
---
0x82b: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x82e
[0x82e:0x82e]
---
Predecessors: [0x82b]
Successors: [0x82f]
---
0x82e JUMPDEST
---
0x82e: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x82f
[0x82f:0x82f]
---
Predecessors: [0x82e]
Successors: [0x830]
---
0x82f JUMPDEST
---
0x82f: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x830
[0x830:0x837]
---
Predecessors: [0x82f]
Successors: []
Has unresolved jump.
---
0x830 JUMPDEST
0x831 SWAP5
0x832 SWAP4
0x833 POP
0x834 POP
0x835 POP
0x836 POP
0x837 JUMP
---
0x830: JUMPDEST 
0x837: JUMP S5
---
Entry stack: [S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x838
[0x838:0x85d]
---
Predecessors: [0x491]
Successors: [0x85e, 0x86d]
---
0x838 JUMPDEST
0x839 PUSH1 0x0
0x83b DUP1
0x83c SLOAD
0x83d CALLER
0x83e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x853 SWAP1
0x854 DUP2
0x855 AND
0x856 SWAP2
0x857 AND
0x858 EQ
0x859 ISZERO
0x85a PUSH2 0x86d
0x85d JUMPI
---
0x838: JUMPDEST 
0x839: V560 = 0x0
0x83c: V561 = S[0x0]
0x83d: V562 = CALLER
0x83e: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x855: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x857: V565 = AND V561 0xffffffffffffffffffffffffffffffffffffffff
0x858: V566 = EQ V565 V564
0x859: V567 = ISZERO V566
0x85a: V568 = 0x86d
0x85d: JUMPI 0x86d V567
---
Entry stack: [V10, 0x146, V347, V350, V352, V366, V373]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0]

================================

Block 0x85e
[0x85e:0x869]
---
Predecessors: [0x838]
Successors: [0xd6f]
---
0x85e PUSH2 0x86a
0x861 DUP7
0x862 DUP7
0x863 DUP7
0x864 DUP7
0x865 DUP7
0x866 PUSH2 0xd6f
0x869 JUMP
---
0x85e: V569 = 0x86a
0x866: V570 = 0xd6f
0x869: JUMP 0xd6f
---
Entry stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x86a, S5, S4, S3, S2, S1]
Exit stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373]

================================

Block 0x86a
[0x86a:0x86c]
---
Predecessors: [0xc27]
Successors: [0x86d]
---
0x86a JUMPDEST
0x86b SWAP1
0x86c POP
---
0x86a: JUMPDEST 
---
Entry stack: [V10, 0x146, V117, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x86d
[0x86d:0x86d]
---
Predecessors: [0x838, 0x86a, 0x8ea]
Successors: [0x86e]
---
0x86d JUMPDEST
---
0x86d: JUMPDEST 
---
Entry stack: [V10, 0x146, V117, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x86e
[0x86e:0x86e]
---
Predecessors: [0x86d]
Successors: [0x86f]
---
0x86e JUMPDEST
---
0x86e: JUMPDEST 
---
Entry stack: [V10, 0x146, V117, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x86f
[0x86f:0x877]
---
Predecessors: [0x86e]
Successors: [0x146]
---
0x86f JUMPDEST
0x870 SWAP6
0x871 SWAP5
0x872 POP
0x873 POP
0x874 POP
0x875 POP
0x876 POP
0x877 JUMP
---
0x86f: JUMPDEST 
0x877: JUMP S6
---
Entry stack: [V10, 0x146, V117, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S8, S7, S0]

================================

Block 0x878
[0x878:0x89c]
---
Predecessors: [0x52b]
Successors: [0x89d, 0x8a7]
---
0x878 JUMPDEST
0x879 PUSH1 0x0
0x87b SLOAD
0x87c CALLER
0x87d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x892 SWAP1
0x893 DUP2
0x894 AND
0x895 SWAP2
0x896 AND
0x897 EQ
0x898 ISZERO
0x899 PUSH2 0x8a7
0x89c JUMPI
---
0x878: JUMPDEST 
0x879: V571 = 0x0
0x87b: V572 = S[0x0]
0x87c: V573 = CALLER
0x87d: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x894: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x896: V576 = AND V572 0xffffffffffffffffffffffffffffffffffffffff
0x897: V577 = EQ V576 V575
0x898: V578 = ISZERO V577
0x899: V579 = 0x8a7
0x89c: JUMPI 0x8a7 V578
---
Entry stack: [V10, 0x589, V398, V405]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x589, V398, V405]

================================

Block 0x89d
[0x89d:0x8a6]
---
Predecessors: [0x878]
Successors: [0xeb0]
---
0x89d PUSH2 0x8a7
0x8a0 DUP3
0x8a1 CALLVALUE
0x8a2 DUP4
0x8a3 PUSH2 0xeb0
0x8a6 JUMP
---
0x89d: V580 = 0x8a7
0x8a1: V581 = CALLVALUE
0x8a3: V582 = 0xeb0
0x8a6: JUMP 0xeb0
---
Entry stack: [V10, 0x589, V398, V405]
Stack pops: 2
Stack additions: [S1, S0, 0x8a7, S1, V581, S0]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405]

================================

Block 0x8a7
[0x8a7:0x8a7]
---
Predecessors: [0x878]
Successors: [0x8a8]
---
0x8a7 JUMPDEST
---
0x8a7: JUMPDEST 
---
Entry stack: [V10, 0x589, V398, V405]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x589, V398, V405]

================================

Block 0x8a8
[0x8a8:0x8a8]
---
Predecessors: [0x8a7]
Successors: [0x8a9]
---
0x8a8 JUMPDEST
---
0x8a8: JUMPDEST 
---
Entry stack: [V10, 0x589, V398, V405]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x589, V398, V405]

================================

Block 0x8a9
[0x8a9:0x8a9]
---
Predecessors: [0x8a8]
Successors: [0x8aa]
---
0x8a9 JUMPDEST
---
0x8a9: JUMPDEST 
---
Entry stack: [V10, 0x589, V398, V405]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x589, V398, V405]

================================

Block 0x8aa
[0x8aa:0x8ad]
---
Predecessors: [0x8a9]
Successors: [0x589]
---
0x8aa JUMPDEST
0x8ab POP
0x8ac POP
0x8ad JUMP
---
0x8aa: JUMPDEST 
0x8ad: JUMP 0x589
---
Entry stack: [V10, 0x589, V398, V405]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x8ae
[0x8ae:0x8d3]
---
Predecessors: [0x596]
Successors: [0x77f, 0x8d4]
---
0x8ae JUMPDEST
0x8af PUSH1 0x0
0x8b1 DUP1
0x8b2 SLOAD
0x8b3 CALLER
0x8b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c9 SWAP1
0x8ca DUP2
0x8cb AND
0x8cc SWAP2
0x8cd AND
0x8ce EQ
0x8cf ISZERO
0x8d0 PUSH2 0x77f
0x8d3 JUMPI
---
0x8ae: JUMPDEST 
0x8af: V583 = 0x0
0x8b2: V584 = S[0x0]
0x8b3: V585 = CALLER
0x8b4: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cb: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x8cd: V588 = AND V584 0xffffffffffffffffffffffffffffffffffffffff
0x8ce: V589 = EQ V588 V587
0x8cf: V590 = ISZERO V589
0x8d0: V591 = 0x77f
0x8d3: JUMPI 0x77f V590
---
Entry stack: [V10, 0x146, V415, V417, V420]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x146, V415, V417, V420, 0x0]

================================

Block 0x8d4
[0x8d4:0x8dd]
---
Predecessors: [0x8ae]
Successors: [0xf5b]
---
0x8d4 PUSH2 0x77c
0x8d7 DUP5
0x8d8 DUP5
0x8d9 DUP5
0x8da PUSH2 0xf5b
0x8dd JUMP
---
0x8d4: V592 = 0x77c
0x8da: V593 = 0xf5b
0x8dd: JUMP 0xf5b
---
Entry stack: [V10, 0x146, V415, V417, V420, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x77c, S3, S2, S1]
Exit stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420]

================================

Block 0x8de
[0x8de:0x8e0]
---
Predecessors: []
Successors: [0x8e1]
---
0x8de JUMPDEST
0x8df SWAP1
0x8e0 POP
---
0x8de: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x8e1
[0x8e1:0x8e1]
---
Predecessors: [0x8de]
Successors: [0x8e2]
---
0x8e1 JUMPDEST
---
0x8e1: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x8e2
[0x8e2:0x8e2]
---
Predecessors: [0x8e1]
Successors: [0x8e3]
---
0x8e2 JUMPDEST
---
0x8e2: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x8e3
[0x8e3:0x8e9]
---
Predecessors: [0x8e2]
Successors: []
Has unresolved jump.
---
0x8e3 JUMPDEST
0x8e4 SWAP4
0x8e5 SWAP3
0x8e6 POP
0x8e7 POP
0x8e8 POP
0x8e9 JUMP
---
0x8e3: JUMPDEST 
0x8e9: JUMP S4
---
Entry stack: [S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x8ea
[0x8ea:0x90f]
---
Predecessors: [0x5e0]
Successors: [0x86d, 0x910]
---
0x8ea JUMPDEST
0x8eb PUSH1 0x0
0x8ed DUP1
0x8ee SLOAD
0x8ef CALLER
0x8f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x905 SWAP1
0x906 DUP2
0x907 AND
0x908 SWAP2
0x909 AND
0x90a EQ
0x90b ISZERO
0x90c PUSH2 0x86d
0x90f JUMPI
---
0x8ea: JUMPDEST 
0x8eb: V594 = 0x0
0x8ee: V595 = S[0x0]
0x8ef: V596 = CALLER
0x8f0: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0x907: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x909: V599 = AND V595 0xffffffffffffffffffffffffffffffffffffffff
0x90a: V600 = EQ V599 V598
0x90b: V601 = ISZERO V600
0x90c: V602 = 0x86d
0x90f: JUMPI 0x86d V601
---
Entry stack: [V10, 0x146, V439, V441, V443, V457, V464]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x146, V439, V441, V443, V457, V464, 0x0]

================================

Block 0x910
[0x910:0x91b]
---
Predecessors: [0x8ea]
Successors: [0xaf0]
---
0x910 PUSH2 0x86a
0x913 DUP7
0x914 DUP7
0x915 DUP7
0x916 DUP7
0x917 DUP7
0x918 PUSH2 0xaf0
0x91b JUMP
---
0x910: V603 = 0x86a
0x918: V604 = 0xaf0
0x91b: JUMP 0xaf0
---
Entry stack: [V10, 0x146, V439, V441, V443, V457, V464, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x86a, S5, S4, S3, S2, S1]
Exit stack: [V10, 0x146, V439, V441, V443, V457, V464, 0x0, 0x86a, V439, V441, V443, V457, V464]

================================

Block 0x91c
[0x91c:0x91e]
---
Predecessors: []
Successors: [0x91f]
---
0x91c JUMPDEST
0x91d SWAP1
0x91e POP
---
0x91c: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x91f
[0x91f:0x91f]
---
Predecessors: [0x91c]
Successors: [0x920]
---
0x91f JUMPDEST
---
0x91f: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x920
[0x920:0x920]
---
Predecessors: [0x91f]
Successors: [0x921]
---
0x920 JUMPDEST
---
0x920: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x921
[0x921:0x929]
---
Predecessors: [0x920]
Successors: []
Has unresolved jump.
---
0x921 JUMPDEST
0x922 SWAP6
0x923 SWAP5
0x924 POP
0x925 POP
0x926 POP
0x927 POP
0x928 POP
0x929 JUMP
---
0x921: JUMPDEST 
0x929: JUMP S6
---
Entry stack: [S0]
Stack pops: 7
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x92a
[0x92a:0x945]
---
Predecessors: [0x681]
Successors: [0x689]
---
0x92a JUMPDEST
0x92b PUSH1 0x0
0x92d SLOAD
0x92e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x943 AND
0x944 DUP2
0x945 JUMP
---
0x92a: JUMPDEST 
0x92b: V605 = 0x0
0x92d: V606 = S[0x0]
0x92e: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x943: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x945: JUMP 0x689
---
Entry stack: [V10, 0x689]
Stack pops: 1
Stack additions: [S0, V608]
Exit stack: [V10, 0x689, V608]

================================

Block 0x946
[0x946:0x9f8]
---
Predecessors: [0x6d8]
Successors: [0x9f9]
---
0x946 JUMPDEST
0x947 PUSH1 0x0
0x949 DUP1
0x94a SLOAD
0x94b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x960 AND
0x961 PUSH4 0x14cba002
0x966 DUP4
0x967 DUP8
0x968 DUP8
0x969 DUP8
0x96a DUP4
0x96b DUP8
0x96c PUSH1 0x40
0x96e MLOAD
0x96f PUSH1 0x20
0x971 ADD
0x972 MSTORE
0x973 PUSH1 0x40
0x975 MLOAD
0x976 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x994 PUSH4 0xffffffff
0x999 DUP9
0x99a AND
0x99b MUL
0x99c DUP2
0x99d MSTORE
0x99e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b3 DUP1
0x9b4 DUP8
0x9b5 AND
0x9b6 PUSH1 0x4
0x9b8 DUP4
0x9b9 ADD
0x9ba SWAP1
0x9bb DUP2
0x9bc MSTORE
0x9bd DUP7
0x9be DUP3
0x9bf AND
0x9c0 PUSH1 0x24
0x9c2 DUP5
0x9c3 ADD
0x9c4 MSTORE
0x9c5 PUSH1 0x44
0x9c7 DUP4
0x9c8 ADD
0x9c9 DUP7
0x9ca SWAP1
0x9cb MSTORE
0x9cc SWAP1
0x9cd DUP4
0x9ce AND
0x9cf PUSH1 0x84
0x9d1 DUP4
0x9d2 ADD
0x9d3 MSTORE
0x9d4 PUSH1 0xa0
0x9d6 PUSH1 0x64
0x9d8 DUP4
0x9d9 ADD
0x9da SWAP1
0x9db DUP2
0x9dc MSTORE
0x9dd SWAP1
0x9de SWAP2
0x9df PUSH1 0xa4
0x9e1 ADD
0x9e2 DUP5
0x9e3 DUP2
0x9e4 DUP2
0x9e5 MLOAD
0x9e6 DUP2
0x9e7 MSTORE
0x9e8 PUSH1 0x20
0x9ea ADD
0x9eb SWAP2
0x9ec POP
0x9ed DUP1
0x9ee MLOAD
0x9ef SWAP1
0x9f0 PUSH1 0x20
0x9f2 ADD
0x9f3 SWAP1
0x9f4 DUP1
0x9f5 DUP4
0x9f6 DUP4
0x9f7 PUSH1 0x0
---
0x946: JUMPDEST 
0x947: V609 = 0x0
0x94a: V610 = S[0x0]
0x94b: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x960: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x961: V613 = 0x14cba002
0x96c: V614 = 0x40
0x96e: V615 = M[0x40]
0x96f: V616 = 0x20
0x971: V617 = ADD 0x20 V615
0x972: M[V617] = 0x0
0x973: V618 = 0x40
0x975: V619 = M[0x40]
0x976: V620 = 0x100000000000000000000000000000000000000000000000000000000
0x994: V621 = 0xffffffff
0x99a: V622 = AND 0x14cba002 0xffffffff
0x99b: V623 = MUL 0x14cba002 0x100000000000000000000000000000000000000000000000000000000
0x99d: M[V619] = 0x14cba00200000000000000000000000000000000000000000000000000000000
0x99e: V624 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b5: V625 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0x9b6: V626 = 0x4
0x9b9: V627 = ADD V619 0x4
0x9bc: M[V627] = V625
0x9bf: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x9c0: V629 = 0x24
0x9c3: V630 = ADD V619 0x24
0x9c4: M[V630] = V628
0x9c5: V631 = 0x44
0x9c8: V632 = ADD V619 0x44
0x9cb: M[V632] = V58
0x9ce: V633 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0x9cf: V634 = 0x84
0x9d2: V635 = ADD V619 0x84
0x9d3: M[V635] = V633
0x9d4: V636 = 0xa0
0x9d6: V637 = 0x64
0x9d9: V638 = ADD V619 0x64
0x9dc: M[V638] = 0xa0
0x9df: V639 = 0xa4
0x9e1: V640 = ADD 0xa4 V619
0x9e5: V641 = M[V72]
0x9e7: M[V640] = V641
0x9e8: V642 = 0x20
0x9ea: V643 = ADD 0x20 V640
0x9ee: V644 = M[V72]
0x9f0: V645 = 0x20
0x9f2: V646 = ADD 0x20 V72
0x9f7: V647 = 0x0
---
Entry stack: [V10, 0x146, V56, V58, V72, V79, 0x0, 0x6e3, V56, V58, V72, V79]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, V612, 0x14cba002, S0, S3, S2, S1, S0, V627, V638, V643, V646, V644, V644, V643, V646, 0x0]
Exit stack: [V10, 0x146, V56, V58, V72, V79, 0x0, 0x6e3, V56, V58, V72, V79, 0x0, V612, 0x14cba002, V79, V56, V58, V72, V79, V627, V638, V643, V646, V644, V644, V643, V646, 0x0]

================================

Block 0x9f9
[0x9f9:0xa01]
---
Predecessors: [0x946, 0xa0a, 0xcf3]
Successors: [0xa02, 0xa12]
---
0x9f9 JUMPDEST
0x9fa DUP4
0x9fb DUP2
0x9fc LT
0x9fd ISZERO
0x9fe PUSH2 0xa12
0xa01 JUMPI
---
0x9f9: JUMPDEST 
0x9fc: V648 = LT S0 S3
0x9fd: V649 = ISZERO V648
0x9fe: V650 = 0xa12
0xa01: JUMPI 0xa12 V649
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa02
[0xa02:0xa09]
---
Predecessors: [0x9f9]
Successors: [0xa0a]
---
0xa02 DUP1
0xa03 DUP3
0xa04 ADD
0xa05 MLOAD
0xa06 DUP2
0xa07 DUP5
0xa08 ADD
0xa09 MSTORE
---
0xa04: V651 = ADD S1 S0
0xa05: V652 = M[V651]
0xa08: V653 = ADD S2 S0
0xa09: M[V653] = V652
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa0a
[0xa0a:0xa11]
---
Predecessors: [0xa02]
Successors: [0x9f9]
---
0xa0a JUMPDEST
0xa0b PUSH1 0x20
0xa0d ADD
0xa0e PUSH2 0x9f9
0xa11 JUMP
---
0xa0a: JUMPDEST 
0xa0b: V654 = 0x20
0xa0d: V655 = ADD 0x20 S0
0xa0e: V656 = 0x9f9
0xa11: JUMP 0x9f9
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V655]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V655]

================================

Block 0xa12
[0xa12:0xa25]
---
Predecessors: [0x9f9, 0xce2]
Successors: [0xa26, 0xa3f]
---
0xa12 JUMPDEST
0xa13 POP
0xa14 POP
0xa15 POP
0xa16 POP
0xa17 SWAP1
0xa18 POP
0xa19 SWAP1
0xa1a DUP2
0xa1b ADD
0xa1c SWAP1
0xa1d PUSH1 0x1f
0xa1f AND
0xa20 DUP1
0xa21 ISZERO
0xa22 PUSH2 0xa3f
0xa25 JUMPI
---
0xa12: JUMPDEST 
0xa1b: V657 = ADD S4 S6
0xa1d: V658 = 0x1f
0xa1f: V659 = AND 0x1f S4
0xa21: V660 = ISZERO V659
0xa22: V661 = 0xa3f
0xa25: JUMPI 0xa3f V660
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V657, V659]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, V657, V659]

================================

Block 0xa26
[0xa26:0xa3e]
---
Predecessors: [0xa12]
Successors: [0xa3f]
---
0xa26 DUP1
0xa27 DUP3
0xa28 SUB
0xa29 DUP1
0xa2a MLOAD
0xa2b PUSH1 0x1
0xa2d DUP4
0xa2e PUSH1 0x20
0xa30 SUB
0xa31 PUSH2 0x100
0xa34 EXP
0xa35 SUB
0xa36 NOT
0xa37 AND
0xa38 DUP2
0xa39 MSTORE
0xa3a PUSH1 0x20
0xa3c ADD
0xa3d SWAP2
0xa3e POP
---
0xa28: V662 = SUB V657 V659
0xa2a: V663 = M[V662]
0xa2b: V664 = 0x1
0xa2e: V665 = 0x20
0xa30: V666 = SUB 0x20 V659
0xa31: V667 = 0x100
0xa34: V668 = EXP 0x100 V666
0xa35: V669 = SUB V668 0x1
0xa36: V670 = NOT V669
0xa37: V671 = AND V670 V663
0xa39: M[V662] = V671
0xa3a: V672 = 0x20
0xa3c: V673 = ADD 0x20 V662
---
Entry stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S8, S7, S6, S5, S4, S3, S2, V657, V659]
Stack pops: 2
Stack additions: [V673, S0]
Exit stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S8, S7, S6, S5, S4, S3, S2, V673, V659]

================================

Block 0xa3f
[0xa3f:0xa5c]
---
Predecessors: [0xa12, 0xa26, 0xcfb]
Successors: [0xa5d, 0xa61]
---
0xa3f JUMPDEST
0xa40 POP
0xa41 SWAP7
0xa42 POP
0xa43 POP
0xa44 POP
0xa45 POP
0xa46 POP
0xa47 POP
0xa48 POP
0xa49 PUSH1 0x20
0xa4b PUSH1 0x40
0xa4d MLOAD
0xa4e DUP1
0xa4f DUP4
0xa50 SUB
0xa51 DUP2
0xa52 PUSH1 0x0
0xa54 DUP8
0xa55 DUP1
0xa56 EXTCODESIZE
0xa57 ISZERO
0xa58 ISZERO
0xa59 PUSH2 0xa61
0xa5c JUMPI
---
0xa3f: JUMPDEST 
0xa49: V674 = 0x20
0xa4b: V675 = 0x40
0xa4d: V676 = M[0x40]
0xa50: V677 = SUB S1 V676
0xa52: V678 = 0x0
0xa56: V679 = EXTCODESIZE S10
0xa57: V680 = ISZERO V679
0xa58: V681 = ISZERO V680
0xa59: V682 = 0xa61
0xa5c: JUMPI 0xa61 V681
---
Entry stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S1, 0x20, V676, V677, V676, 0x0, S10]
Exit stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S1, 0x20, V676, V677, V676, 0x0, S10]

================================

Block 0xa5d
[0xa5d:0xa60]
---
Predecessors: [0xa3f]
Successors: []
---
0xa5d PUSH1 0x0
0xa5f DUP1
0xa60 REVERT
---
0xa5d: V683 = 0x0
0xa60: REVERT 0x0 0x0
---
Entry stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3}, S14, S13, S12, S11, S10, 0x0, S8, {0x14cba002, 0x9b487f3f}, S6, 0x20, V676, V677, V676, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3}, S14, S13, S12, S11, S10, 0x0, S8, {0x14cba002, 0x9b487f3f}, S6, 0x20, V676, V677, V676, 0x0, S0]

================================

Block 0xa61
[0xa61:0xa6d]
---
Predecessors: [0xa3f, 0xd28]
Successors: [0xa6e, 0xa72]
---
0xa61 JUMPDEST
0xa62 PUSH2 0x2c6
0xa65 GAS
0xa66 SUB
0xa67 CALL
0xa68 ISZERO
0xa69 ISZERO
0xa6a PUSH2 0xa72
0xa6d JUMPI
---
0xa61: JUMPDEST 
0xa62: V684 = 0x2c6
0xa65: V685 = GAS
0xa66: V686 = SUB V685 0x2c6
0xa67: V687 = CALL V686 S0 0x0 S2 S3 S4 0x20
0xa68: V688 = ISZERO V687
0xa69: V689 = ISZERO V688
0xa6a: V690 = 0xa72
0xa6d: JUMPI 0xa72 V689
---
Entry stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3}, S14, S13, S12, S11, S10, 0x0, S8, S7, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3}, S14, S13, S12, S11, S10, 0x0, S8, S7, S6]

================================

Block 0xa6e
[0xa6e:0xa71]
---
Predecessors: [0xa61]
Successors: []
---
0xa6e PUSH1 0x0
0xa70 DUP1
0xa71 REVERT
---
0xa6e: V691 = 0x0
0xa71: REVERT 0x0 0x0
---
Entry stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3}, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3}, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0xa72
[0xa72:0xa7d]
---
Predecessors: [0xa61, 0xd46]
Successors: [0xa7e]
---
0xa72 JUMPDEST
0xa73 POP
0xa74 POP
0xa75 POP
0xa76 PUSH1 0x40
0xa78 MLOAD
0xa79 DUP1
0xa7a MLOAD
0xa7b SWAP2
0xa7c POP
0xa7d POP
---
0xa72: JUMPDEST 
0xa76: V692 = 0x40
0xa78: V693 = M[0x40]
0xa7a: V694 = M[V693]
---
Entry stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3}, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [V694]
Exit stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3}, S8, S7, S6, S5, S4, V694]

================================

Block 0xa7e
[0xa7e:0xa85]
---
Predecessors: [0xa72]
Successors: [0x6e3, 0x77c]
---
0xa7e JUMPDEST
0xa7f SWAP5
0xa80 SWAP4
0xa81 POP
0xa82 POP
0xa83 POP
0xa84 POP
0xa85 JUMP
---
0xa7e: JUMPDEST 
0xa85: JUMP S5
---
Entry stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, S5, S4, S3, S2, S1, V694]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, V694]

================================

Block 0xa86
[0xa86:0xa8f]
---
Predecessors: [0x7aa, 0x7d3]
Successors: [0xa90]
---
0xa86 JUMPDEST
0xa87 PUSH1 0x0
0xa89 PUSH1 0x20
0xa8b DUP3
0xa8c ADD
0xa8d MLOAD
0xa8e SWAP1
0xa8f POP
---
0xa86: JUMPDEST 
0xa87: V695 = 0x0
0xa89: V696 = 0x20
0xa8c: V697 = ADD S0 0x20
0xa8d: V698 = M[V697]
---
Entry stack: [V10, 0x146, V117, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x6e3}, S2, {0x7b9, 0x7e1}, S0]
Stack pops: 1
Stack additions: [S0, V698]
Exit stack: [V10, 0x146, V117, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x6e3}, S2, {0x7b9, 0x7e1}, S0, V698]

================================

Block 0xa90
[0xa90:0xa94]
---
Predecessors: [0xa86]
Successors: [0x7b9, 0x7e1]
---
0xa90 JUMPDEST
0xa91 SWAP2
0xa92 SWAP1
0xa93 POP
0xa94 JUMP
---
0xa90: JUMPDEST 
0xa94: JUMP {0x7b9, 0x7e1}
---
Entry stack: [V10, 0x146, V117, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x6e3}, S3, {0x7b9, 0x7e1}, S1, V698]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x6e3}, S3, V698]

================================

Block 0xa95
[0xa95:0xaca]
---
Predecessors: [0x7b9, 0x7e1]
Successors: [0xacb, 0xad0]
---
0xa95 JUMPDEST
0xa96 PUSH1 0x0
0xa98 CALLER
0xa99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaae AND
0xaaf ADDRESS
0xab0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac5 AND
0xac6 EQ
0xac7 PUSH2 0xad0
0xaca JUMPI
---
0xa95: JUMPDEST 
0xa96: V699 = 0x0
0xa98: V700 = CALLER
0xa99: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xaae: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0xaaf: V703 = ADDRESS
0xab0: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xac5: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xac6: V706 = EQ V705 V702
0xac7: V707 = 0xad0
0xaca: JUMPI 0xad0 V706
---
Entry stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, {0x7c3, 0x7eb}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, {0x7c3, 0x7eb}, 0x0]

================================

Block 0xacb
[0xacb:0xacf]
---
Predecessors: [0xa95]
Successors: [0xaea]
---
0xacb CALLER
0xacc PUSH2 0xaea
0xacf JUMP
---
0xacb: V708 = CALLER
0xacc: V709 = 0xaea
0xacf: JUMP 0xaea
---
Entry stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, S5, S4, S3, S2, {0x7c3, 0x7eb}, 0x0]
Stack pops: 0
Stack additions: [V708]
Exit stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, S5, S4, S3, S2, {0x7c3, 0x7eb}, 0x0, V708]

================================

Block 0xad0
[0xad0:0xae9]
---
Predecessors: [0xa95]
Successors: [0xaea]
---
0xad0 JUMPDEST
0xad1 PUSH1 0x1
0xad3 SLOAD
0xad4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae9 AND
---
0xad0: JUMPDEST 
0xad1: V710 = 0x1
0xad3: V711 = S[0x1]
0xad4: V712 = 0xffffffffffffffffffffffffffffffffffffffff
0xae9: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
---
Entry stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, S5, S4, S3, S2, {0x7c3, 0x7eb}, 0x0]
Stack pops: 0
Stack additions: [V713]
Exit stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, S5, S4, S3, S2, {0x7c3, 0x7eb}, 0x0, V713]

================================

Block 0xaea
[0xaea:0xaec]
---
Predecessors: [0xacb, 0xad0]
Successors: [0xaed]
---
0xaea JUMPDEST
0xaeb SWAP1
0xaec POP
---
0xaea: JUMPDEST 
---
Entry stack: [V10, 0x146, V117, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x6e3}, S6, S5, S4, S3, {0x7c3, 0x7eb}, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x6e3}, S6, S5, S4, S3, {0x7c3, 0x7eb}, S0]

================================

Block 0xaed
[0xaed:0xaef]
---
Predecessors: [0xaea]
Successors: [0x7c3, 0x7eb]
---
0xaed JUMPDEST
0xaee SWAP1
0xaef JUMP
---
0xaed: JUMPDEST 
0xaef: JUMP {0x7c3, 0x7eb}
---
Entry stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, S5, S4, S3, S2, {0x7c3, 0x7eb}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3}, S5, S4, S3, S2, S0]

================================

Block 0xaf0
[0xaf0:0xba1]
---
Predecessors: [0x7c3, 0x910]
Successors: [0xba2]
---
0xaf0 JUMPDEST
0xaf1 PUSH1 0x0
0xaf3 DUP1
0xaf4 SLOAD
0xaf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0a AND
0xb0b PUSH4 0x9b487f3f
0xb10 DUP8
0xb11 DUP8
0xb12 DUP8
0xb13 DUP8
0xb14 DUP8
0xb15 DUP8
0xb16 PUSH1 0x40
0xb18 MLOAD
0xb19 PUSH1 0x20
0xb1b ADD
0xb1c MSTORE
0xb1d PUSH1 0x40
0xb1f MLOAD
0xb20 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb3e PUSH4 0xffffffff
0xb43 DUP9
0xb44 AND
0xb45 MUL
0xb46 DUP2
0xb47 MSTORE
0xb48 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5d DUP1
0xb5e DUP8
0xb5f AND
0xb60 PUSH1 0x4
0xb62 DUP4
0xb63 ADD
0xb64 SWAP1
0xb65 DUP2
0xb66 MSTORE
0xb67 PUSH1 0x24
0xb69 DUP4
0xb6a ADD
0xb6b DUP8
0xb6c SWAP1
0xb6d MSTORE
0xb6e PUSH1 0x44
0xb70 DUP4
0xb71 ADD
0xb72 DUP7
0xb73 SWAP1
0xb74 MSTORE
0xb75 SWAP1
0xb76 DUP4
0xb77 AND
0xb78 PUSH1 0x84
0xb7a DUP4
0xb7b ADD
0xb7c MSTORE
0xb7d PUSH1 0xa0
0xb7f PUSH1 0x64
0xb81 DUP4
0xb82 ADD
0xb83 SWAP1
0xb84 DUP2
0xb85 MSTORE
0xb86 SWAP1
0xb87 SWAP2
0xb88 PUSH1 0xa4
0xb8a ADD
0xb8b DUP5
0xb8c DUP2
0xb8d DUP2
0xb8e MLOAD
0xb8f DUP2
0xb90 MSTORE
0xb91 PUSH1 0x20
0xb93 ADD
0xb94 SWAP2
0xb95 POP
0xb96 DUP1
0xb97 MLOAD
0xb98 SWAP1
0xb99 PUSH1 0x20
0xb9b ADD
0xb9c SWAP1
0xb9d DUP1
0xb9e DUP4
0xb9f DUP4
0xba0 PUSH1 0x0
---
0xaf0: JUMPDEST 
0xaf1: V714 = 0x0
0xaf4: V715 = S[0x0]
0xaf5: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0a: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0xb0b: V718 = 0x9b487f3f
0xb16: V719 = 0x40
0xb18: V720 = M[0x40]
0xb19: V721 = 0x20
0xb1b: V722 = ADD 0x20 V720
0xb1c: M[V722] = 0x0
0xb1d: V723 = 0x40
0xb1f: V724 = M[0x40]
0xb20: V725 = 0x100000000000000000000000000000000000000000000000000000000
0xb3e: V726 = 0xffffffff
0xb44: V727 = AND 0x9b487f3f 0xffffffff
0xb45: V728 = MUL 0x9b487f3f 0x100000000000000000000000000000000000000000000000000000000
0xb47: M[V724] = 0x9b487f3f00000000000000000000000000000000000000000000000000000000
0xb48: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5f: V730 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb60: V731 = 0x4
0xb63: V732 = ADD V724 0x4
0xb66: M[V732] = V730
0xb67: V733 = 0x24
0xb6a: V734 = ADD V724 0x24
0xb6d: M[V734] = S3
0xb6e: V735 = 0x44
0xb71: V736 = ADD V724 0x44
0xb74: M[V736] = S2
0xb77: V737 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb78: V738 = 0x84
0xb7b: V739 = ADD V724 0x84
0xb7c: M[V739] = V737
0xb7d: V740 = 0xa0
0xb7f: V741 = 0x64
0xb82: V742 = ADD V724 0x64
0xb85: M[V742] = 0xa0
0xb88: V743 = 0xa4
0xb8a: V744 = ADD 0xa4 V724
0xb8e: V745 = M[S1]
0xb90: M[V744] = V745
0xb91: V746 = 0x20
0xb93: V747 = ADD 0x20 V744
0xb97: V748 = M[S1]
0xb99: V749 = 0x20
0xb9b: V750 = ADD 0x20 S1
0xba0: V751 = 0x0
---
Entry stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3, 0x86a}, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, V717, 0x9b487f3f, S4, S3, S2, S1, S0, V732, V742, V747, V750, V748, V748, V747, V750, 0x0]
Exit stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3, 0x86a}, S4, S3, S2, S1, S0, 0x0, V717, 0x9b487f3f, S4, S3, S2, S1, S0, V732, V742, V747, V750, V748, V748, V747, V750, 0x0]

================================

Block 0xba2
[0xba2:0xbaa]
---
Predecessors: [0xaf0, 0xbb3, 0xe33]
Successors: [0xbab, 0xbbb]
---
0xba2 JUMPDEST
0xba3 DUP4
0xba4 DUP2
0xba5 LT
0xba6 ISZERO
0xba7 PUSH2 0xbbb
0xbaa JUMPI
---
0xba2: JUMPDEST 
0xba5: V752 = LT S0 S3
0xba6: V753 = ISZERO V752
0xba7: V754 = 0xbbb
0xbaa: JUMPI 0xbbb V753
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbab
[0xbab:0xbb2]
---
Predecessors: [0xba2]
Successors: [0xbb3]
---
0xbab DUP1
0xbac DUP3
0xbad ADD
0xbae MLOAD
0xbaf DUP2
0xbb0 DUP5
0xbb1 ADD
0xbb2 MSTORE
---
0xbad: V755 = ADD S1 S0
0xbae: V756 = M[V755]
0xbb1: V757 = ADD S2 S0
0xbb2: M[V757] = V756
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbb3
[0xbb3:0xbba]
---
Predecessors: [0xbab]
Successors: [0xba2]
---
0xbb3 JUMPDEST
0xbb4 PUSH1 0x20
0xbb6 ADD
0xbb7 PUSH2 0xba2
0xbba JUMP
---
0xbb3: JUMPDEST 
0xbb4: V758 = 0x20
0xbb6: V759 = ADD 0x20 S0
0xbb7: V760 = 0xba2
0xbba: JUMP 0xba2
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V759]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V759]

================================

Block 0xbbb
[0xbbb:0xbce]
---
Predecessors: [0xba2, 0xe22]
Successors: [0xbcf, 0xbe8]
---
0xbbb JUMPDEST
0xbbc POP
0xbbd POP
0xbbe POP
0xbbf POP
0xbc0 SWAP1
0xbc1 POP
0xbc2 SWAP1
0xbc3 DUP2
0xbc4 ADD
0xbc5 SWAP1
0xbc6 PUSH1 0x1f
0xbc8 AND
0xbc9 DUP1
0xbca ISZERO
0xbcb PUSH2 0xbe8
0xbce JUMPI
---
0xbbb: JUMPDEST 
0xbc4: V761 = ADD S4 S6
0xbc6: V762 = 0x1f
0xbc8: V763 = AND 0x1f S4
0xbca: V764 = ISZERO V763
0xbcb: V765 = 0xbe8
0xbce: JUMPI 0xbe8 V764
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V761, V763]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3, 0x86a}, S21, S20, S19, S18, S17, 0x0, S15, {0x14cba002, 0x9b487f3f}, S13, S12, S11, S10, S9, S8, S7, V761, V763]

================================

Block 0xbcf
[0xbcf:0xbe7]
---
Predecessors: [0xbbb]
Successors: [0xbe8]
---
0xbcf DUP1
0xbd0 DUP3
0xbd1 SUB
0xbd2 DUP1
0xbd3 MLOAD
0xbd4 PUSH1 0x1
0xbd6 DUP4
0xbd7 PUSH1 0x20
0xbd9 SUB
0xbda PUSH2 0x100
0xbdd EXP
0xbde SUB
0xbdf NOT
0xbe0 AND
0xbe1 DUP2
0xbe2 MSTORE
0xbe3 PUSH1 0x20
0xbe5 ADD
0xbe6 SWAP2
0xbe7 POP
---
0xbd1: V766 = SUB V761 V763
0xbd3: V767 = M[V766]
0xbd4: V768 = 0x1
0xbd7: V769 = 0x20
0xbd9: V770 = SUB 0x20 V763
0xbda: V771 = 0x100
0xbdd: V772 = EXP 0x100 V770
0xbde: V773 = SUB V772 0x1
0xbdf: V774 = NOT V773
0xbe0: V775 = AND V774 V767
0xbe2: M[V766] = V775
0xbe3: V776 = 0x20
0xbe5: V777 = ADD 0x20 V766
---
Entry stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3, 0x86a}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S8, S7, S6, S5, S4, S3, S2, V761, V763]
Stack pops: 2
Stack additions: [V777, S0]
Exit stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3, 0x86a}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S8, S7, S6, S5, S4, S3, S2, V777, V763]

================================

Block 0xbe8
[0xbe8:0xc05]
---
Predecessors: [0xbbb, 0xbcf, 0xe3b]
Successors: [0xc06, 0xc0a]
---
0xbe8 JUMPDEST
0xbe9 POP
0xbea SWAP7
0xbeb POP
0xbec POP
0xbed POP
0xbee POP
0xbef POP
0xbf0 POP
0xbf1 POP
0xbf2 PUSH1 0x20
0xbf4 PUSH1 0x40
0xbf6 MLOAD
0xbf7 DUP1
0xbf8 DUP4
0xbf9 SUB
0xbfa DUP2
0xbfb PUSH1 0x0
0xbfd DUP8
0xbfe DUP1
0xbff EXTCODESIZE
0xc00 ISZERO
0xc01 ISZERO
0xc02 PUSH2 0xc0a
0xc05 JUMPI
---
0xbe8: JUMPDEST 
0xbf2: V778 = 0x20
0xbf4: V779 = 0x40
0xbf6: V780 = M[0x40]
0xbf9: V781 = SUB S1 V780
0xbfb: V782 = 0x0
0xbff: V783 = EXTCODESIZE S10
0xc00: V784 = ISZERO V783
0xc01: V785 = ISZERO V784
0xc02: V786 = 0xc0a
0xc05: JUMPI 0xc0a V785
---
Entry stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3, 0x86a}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S1, 0x20, V780, V781, V780, 0x0, S10]
Exit stack: [V10, 0x146, V117, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x0, 0x6e3, 0x86a}, S16, S15, S14, S13, S12, 0x0, S10, {0x14cba002, 0x9b487f3f}, S1, 0x20, V780, V781, V780, 0x0, S10]

================================

Block 0xc06
[0xc06:0xc09]
---
Predecessors: [0xbe8]
Successors: []
---
0xc06 PUSH1 0x0
0xc08 DUP1
0xc09 REVERT
---
0xc06: V787 = 0x0
0xc09: REVERT 0x0 0x0
---
Entry stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3, 0x86a}, S14, S13, S12, S11, S10, 0x0, S8, {0x14cba002, 0x9b487f3f}, S6, 0x20, V780, V781, V780, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3, 0x86a}, S14, S13, S12, S11, S10, 0x0, S8, {0x14cba002, 0x9b487f3f}, S6, 0x20, V780, V781, V780, 0x0, S0]

================================

Block 0xc0a
[0xc0a:0xc16]
---
Predecessors: [0xbe8, 0xe68]
Successors: [0xc17, 0xc1b]
---
0xc0a JUMPDEST
0xc0b PUSH2 0x2c6
0xc0e GAS
0xc0f SUB
0xc10 CALL
0xc11 ISZERO
0xc12 ISZERO
0xc13 PUSH2 0xc1b
0xc16 JUMPI
---
0xc0a: JUMPDEST 
0xc0b: V788 = 0x2c6
0xc0e: V789 = GAS
0xc0f: V790 = SUB V789 0x2c6
0xc10: V791 = CALL V790 S0 0x0 S2 S3 S4 0x20
0xc11: V792 = ISZERO V791
0xc12: V793 = ISZERO V792
0xc13: V794 = 0xc1b
0xc16: JUMPI 0xc1b V793
---
Entry stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3, 0x86a}, S14, S13, S12, S11, S10, 0x0, S8, S7, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x146, V117, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x0, 0x6e3, 0x86a}, S14, S13, S12, S11, S10, 0x0, S8, S7, S6]

================================

Block 0xc17
[0xc17:0xc1a]
---
Predecessors: [0xc0a]
Successors: []
---
0xc17 PUSH1 0x0
0xc19 DUP1
0xc1a REVERT
---
0xc17: V795 = 0x0
0xc1a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3, 0x86a}, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3, 0x86a}, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0xc1b
[0xc1b:0xc26]
---
Predecessors: [0xc0a, 0xe86]
Successors: [0xc27]
---
0xc1b JUMPDEST
0xc1c POP
0xc1d POP
0xc1e POP
0xc1f PUSH1 0x40
0xc21 MLOAD
0xc22 DUP1
0xc23 MLOAD
0xc24 SWAP2
0xc25 POP
0xc26 POP
---
0xc1b: JUMPDEST 
0xc1f: V796 = 0x40
0xc21: V797 = M[0x40]
0xc23: V798 = M[V797]
---
Entry stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3, 0x86a}, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [V798]
Exit stack: [V10, 0x146, V117, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x0, 0x6e3, 0x86a}, S8, S7, S6, S5, S4, V798]

================================

Block 0xc27
[0xc27:0xc2f]
---
Predecessors: [0xc1b]
Successors: [0x6e3, 0x86a]
---
0xc27 JUMPDEST
0xc28 SWAP6
0xc29 SWAP5
0xc2a POP
0xc2b POP
0xc2c POP
0xc2d POP
0xc2e POP
0xc2f JUMP
---
0xc27: JUMPDEST 
0xc2f: JUMP {0x0, 0x6e3, 0x86a}
---
Entry stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6e3, 0x86a}, S5, S4, S3, S2, S1, V798]
Stack pops: 7
Stack additions: [S0]
Exit stack: [V10, 0x146, V117, S15, S14, S13, S12, S11, S10, S9, S8, S7, V798]

================================

Block 0xc30
[0xc30:0xce1]
---
Predecessors: [0x7eb, 0x820]
Successors: [0xce2]
---
0xc30 JUMPDEST
0xc31 PUSH1 0x0
0xc33 DUP1
0xc34 SLOAD
0xc35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4a AND
0xc4b PUSH4 0x9b487f3f
0xc50 DUP4
0xc51 DUP8
0xc52 DUP8
0xc53 DUP8
0xc54 DUP4
0xc55 DUP8
0xc56 PUSH1 0x40
0xc58 MLOAD
0xc59 PUSH1 0x20
0xc5b ADD
0xc5c MSTORE
0xc5d PUSH1 0x40
0xc5f MLOAD
0xc60 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc7e PUSH4 0xffffffff
0xc83 DUP9
0xc84 AND
0xc85 MUL
0xc86 DUP2
0xc87 MSTORE
0xc88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9d DUP1
0xc9e DUP8
0xc9f AND
0xca0 PUSH1 0x4
0xca2 DUP4
0xca3 ADD
0xca4 SWAP1
0xca5 DUP2
0xca6 MSTORE
0xca7 PUSH1 0x24
0xca9 DUP4
0xcaa ADD
0xcab DUP8
0xcac SWAP1
0xcad MSTORE
0xcae PUSH1 0x44
0xcb0 DUP4
0xcb1 ADD
0xcb2 DUP7
0xcb3 SWAP1
0xcb4 MSTORE
0xcb5 SWAP1
0xcb6 DUP4
0xcb7 AND
0xcb8 PUSH1 0x84
0xcba DUP4
0xcbb ADD
0xcbc MSTORE
0xcbd PUSH1 0xa0
0xcbf PUSH1 0x64
0xcc1 DUP4
0xcc2 ADD
0xcc3 SWAP1
0xcc4 DUP2
0xcc5 MSTORE
0xcc6 SWAP1
0xcc7 SWAP2
0xcc8 PUSH1 0xa4
0xcca ADD
0xccb DUP5
0xccc DUP2
0xccd DUP2
0xcce MLOAD
0xccf DUP2
0xcd0 MSTORE
0xcd1 PUSH1 0x20
0xcd3 ADD
0xcd4 SWAP2
0xcd5 POP
0xcd6 DUP1
0xcd7 MLOAD
0xcd8 SWAP1
0xcd9 PUSH1 0x20
0xcdb ADD
0xcdc SWAP1
0xcdd DUP1
0xcde DUP4
0xcdf DUP4
0xce0 PUSH1 0x0
---
0xc30: JUMPDEST 
0xc31: V799 = 0x0
0xc34: V800 = S[0x0]
0xc35: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4a: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0xc4b: V803 = 0x9b487f3f
0xc56: V804 = 0x40
0xc58: V805 = M[0x40]
0xc59: V806 = 0x20
0xc5b: V807 = ADD 0x20 V805
0xc5c: M[V807] = 0x0
0xc5d: V808 = 0x40
0xc5f: V809 = M[0x40]
0xc60: V810 = 0x100000000000000000000000000000000000000000000000000000000
0xc7e: V811 = 0xffffffff
0xc84: V812 = AND 0x9b487f3f 0xffffffff
0xc85: V813 = MUL 0x9b487f3f 0x100000000000000000000000000000000000000000000000000000000
0xc87: M[V809] = 0x9b487f3f00000000000000000000000000000000000000000000000000000000
0xc88: V814 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9f: V815 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xca0: V816 = 0x4
0xca3: V817 = ADD V809 0x4
0xca6: M[V817] = V815
0xca7: V818 = 0x24
0xcaa: V819 = ADD V809 0x24
0xcad: M[V819] = S3
0xcae: V820 = 0x44
0xcb1: V821 = ADD V809 0x44
0xcb4: M[V821] = S2
0xcb7: V822 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xcb8: V823 = 0x84
0xcbb: V824 = ADD V809 0x84
0xcbc: M[V824] = V822
0xcbd: V825 = 0xa0
0xcbf: V826 = 0x64
0xcc2: V827 = ADD V809 0x64
0xcc5: M[V827] = 0xa0
0xcc8: V828 = 0xa4
0xcca: V829 = ADD 0xa4 V809
0xcce: V830 = M[S1]
0xcd0: M[V829] = V830
0xcd1: V831 = 0x20
0xcd3: V832 = ADD 0x20 V829
0xcd7: V833 = M[S1]
0xcd9: V834 = 0x20
0xcdb: V835 = ADD 0x20 S1
0xce0: V836 = 0x0
---
Entry stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, V802, 0x9b487f3f, S0, S3, S2, S1, S0, V817, V827, V832, V835, V833, V833, V832, V835, 0x0]
Exit stack: [V10, 0x146, V117, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x6e3}, S4, S3, S2, S1, S0, 0x0, V802, 0x9b487f3f, S0, S3, S2, S1, S0, V817, V827, V832, V835, V833, V833, V832, V835, 0x0]

================================

Block 0xce2
[0xce2:0xcea]
---
Predecessors: [0xc30]
Successors: [0xa12, 0xceb]
---
0xce2 JUMPDEST
0xce3 DUP4
0xce4 DUP2
0xce5 LT
0xce6 ISZERO
0xce7 PUSH2 0xa12
0xcea JUMPI
---
0xce2: JUMPDEST 
0xce5: V837 = LT 0x0 V833
0xce6: V838 = ISZERO V837
0xce7: V839 = 0xa12
0xcea: JUMPI 0xa12 V838
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, V802, 0x9b487f3f, S13, S12, S11, S10, S9, V817, V827, V832, V835, V833, V833, V832, V835, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, V802, 0x9b487f3f, S13, S12, S11, S10, S9, V817, V827, V832, V835, V833, V833, V832, V835, 0x0]

================================

Block 0xceb
[0xceb:0xcf2]
---
Predecessors: [0xce2]
Successors: [0xcf3]
---
0xceb DUP1
0xcec DUP3
0xced ADD
0xcee MLOAD
0xcef DUP2
0xcf0 DUP5
0xcf1 ADD
0xcf2 MSTORE
---
0xced: V840 = ADD V835 0x0
0xcee: V841 = M[V840]
0xcf1: V842 = ADD V832 0x0
0xcf2: M[V842] = V841
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, V802, 0x9b487f3f, S13, S12, S11, S10, S9, V817, V827, V832, V835, V833, V833, V832, V835, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, V802, 0x9b487f3f, S13, S12, S11, S10, S9, V817, V827, V832, V835, V833, V833, V832, V835, 0x0]

================================

Block 0xcf3
[0xcf3:0xcfa]
---
Predecessors: [0xceb]
Successors: [0x9f9]
---
0xcf3 JUMPDEST
0xcf4 PUSH1 0x20
0xcf6 ADD
0xcf7 PUSH2 0x9f9
0xcfa JUMP
---
0xcf3: JUMPDEST 
0xcf4: V843 = 0x20
0xcf6: V844 = ADD 0x20 0x0
0xcf7: V845 = 0x9f9
0xcfa: JUMP 0x9f9
---
Entry stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, V802, 0x9b487f3f, S13, S12, S11, S10, S9, V817, V827, V832, V835, V833, V833, V832, V835, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [V10, 0x146, V117, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x0, 0x6e3}, S21, S20, S19, S18, S17, 0x0, V802, 0x9b487f3f, S13, S12, S11, S10, S9, V817, V827, V832, V835, V833, V833, V832, V835, 0x20]

================================

Block 0xcfb
[0xcfb:0xd0e]
---
Predecessors: []
Successors: [0xa3f, 0xd0f]
---
0xcfb JUMPDEST
0xcfc POP
0xcfd POP
0xcfe POP
0xcff POP
0xd00 SWAP1
0xd01 POP
0xd02 SWAP1
0xd03 DUP2
0xd04 ADD
0xd05 SWAP1
0xd06 PUSH1 0x1f
0xd08 AND
0xd09 DUP1
0xd0a ISZERO
0xd0b PUSH2 0xa3f
0xd0e JUMPI
---
0xcfb: JUMPDEST 
0xd04: V846 = ADD S4 S6
0xd06: V847 = 0x1f
0xd08: V848 = AND 0x1f S4
0xd0a: V849 = ISZERO V848
0xd0b: V850 = 0xa3f
0xd0e: JUMPI 0xa3f V849
---
Entry stack: []
Stack pops: 7
Stack additions: [V846, V848]
Exit stack: [V846, V848]

================================

Block 0xd0f
[0xd0f:0xd27]
---
Predecessors: [0xcfb]
Successors: [0xd28]
---
0xd0f DUP1
0xd10 DUP3
0xd11 SUB
0xd12 DUP1
0xd13 MLOAD
0xd14 PUSH1 0x1
0xd16 DUP4
0xd17 PUSH1 0x20
0xd19 SUB
0xd1a PUSH2 0x100
0xd1d EXP
0xd1e SUB
0xd1f NOT
0xd20 AND
0xd21 DUP2
0xd22 MSTORE
0xd23 PUSH1 0x20
0xd25 ADD
0xd26 SWAP2
0xd27 POP
---
0xd11: V851 = SUB V846 V848
0xd13: V852 = M[V851]
0xd14: V853 = 0x1
0xd17: V854 = 0x20
0xd19: V855 = SUB 0x20 V848
0xd1a: V856 = 0x100
0xd1d: V857 = EXP 0x100 V855
0xd1e: V858 = SUB V857 0x1
0xd1f: V859 = NOT V858
0xd20: V860 = AND V859 V852
0xd22: M[V851] = V860
0xd23: V861 = 0x20
0xd25: V862 = ADD 0x20 V851
---
Entry stack: [V846, V848]
Stack pops: 2
Stack additions: [V862, S0]
Exit stack: [V862, V848]

================================

Block 0xd28
[0xd28:0xd45]
---
Predecessors: [0xd0f]
Successors: [0xa61, 0xd46]
---
0xd28 JUMPDEST
0xd29 POP
0xd2a SWAP7
0xd2b POP
0xd2c POP
0xd2d POP
0xd2e POP
0xd2f POP
0xd30 POP
0xd31 POP
0xd32 PUSH1 0x20
0xd34 PUSH1 0x40
0xd36 MLOAD
0xd37 DUP1
0xd38 DUP4
0xd39 SUB
0xd3a DUP2
0xd3b PUSH1 0x0
0xd3d DUP8
0xd3e DUP1
0xd3f EXTCODESIZE
0xd40 ISZERO
0xd41 ISZERO
0xd42 PUSH2 0xa61
0xd45 JUMPI
---
0xd28: JUMPDEST 
0xd32: V863 = 0x20
0xd34: V864 = 0x40
0xd36: V865 = M[0x40]
0xd39: V866 = SUB V862 V865
0xd3b: V867 = 0x0
0xd3f: V868 = EXTCODESIZE S10
0xd40: V869 = ISZERO V868
0xd41: V870 = ISZERO V869
0xd42: V871 = 0xa61
0xd45: JUMPI 0xa61 V870
---
Entry stack: [V862, V848]
Stack pops: 11
Stack additions: [S10, S9, S1, 0x20, V865, V866, V865, 0x0, S10]
Exit stack: [S8, S7, V862, 0x20, V865, V866, V865, 0x0, S8]

================================

Block 0xd46
[0xd46:0xd56]
---
Predecessors: [0xd28]
Successors: [0xa72, 0xd57]
---
0xd46 PUSH1 0x0
0xd48 DUP1
0xd49 REVERT
0xd4a JUMPDEST
0xd4b PUSH2 0x2c6
0xd4e GAS
0xd4f SUB
0xd50 CALL
0xd51 ISZERO
0xd52 ISZERO
0xd53 PUSH2 0xa72
0xd56 JUMPI
---
0xd46: V872 = 0x0
0xd49: REVERT 0x0 0x0
0xd4a: JUMPDEST 
0xd4b: V873 = 0x2c6
0xd4e: V874 = GAS
0xd4f: V875 = SUB V874 0x2c6
0xd50: V876 = CALL V875 S0 S1 S2 S3 S4 S5
0xd51: V877 = ISZERO V876
0xd52: V878 = ISZERO V877
0xd53: V879 = 0xa72
0xd56: JUMPI 0xa72 V878
---
Entry stack: [S8, S7, V862, 0x20, V865, V866, V865, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd57
[0xd57:0xd66]
---
Predecessors: [0xd46]
Successors: [0xd67]
---
0xd57 PUSH1 0x0
0xd59 DUP1
0xd5a REVERT
0xd5b JUMPDEST
0xd5c POP
0xd5d POP
0xd5e POP
0xd5f PUSH1 0x40
0xd61 MLOAD
0xd62 DUP1
0xd63 MLOAD
0xd64 SWAP2
0xd65 POP
0xd66 POP
---
0xd57: V880 = 0x0
0xd5a: REVERT 0x0 0x0
0xd5b: JUMPDEST 
0xd5f: V881 = 0x40
0xd61: V882 = M[0x40]
0xd63: V883 = M[V882]
---
Entry stack: []
Stack pops: 0
Stack additions: [V883]
Exit stack: []

================================

Block 0xd67
[0xd67:0xd6e]
---
Predecessors: [0xd57]
Successors: []
Has unresolved jump.
---
0xd67 JUMPDEST
0xd68 SWAP5
0xd69 SWAP4
0xd6a POP
0xd6b POP
0xd6c POP
0xd6d POP
0xd6e JUMP
---
0xd67: JUMPDEST 
0xd6e: JUMP S5
---
Entry stack: [V883]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V883]

================================

Block 0xd6f
[0xd6f:0xe21]
---
Predecessors: [0x85e]
Successors: [0xe22]
---
0xd6f JUMPDEST
0xd70 PUSH1 0x0
0xd72 DUP1
0xd73 SLOAD
0xd74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd89 AND
0xd8a PUSH4 0x14cba002
0xd8f DUP8
0xd90 DUP8
0xd91 DUP8
0xd92 DUP8
0xd93 DUP8
0xd94 DUP8
0xd95 PUSH1 0x40
0xd97 MLOAD
0xd98 PUSH1 0x20
0xd9a ADD
0xd9b MSTORE
0xd9c PUSH1 0x40
0xd9e MLOAD
0xd9f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdbd PUSH4 0xffffffff
0xdc2 DUP9
0xdc3 AND
0xdc4 MUL
0xdc5 DUP2
0xdc6 MSTORE
0xdc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xddc DUP1
0xddd DUP8
0xdde AND
0xddf PUSH1 0x4
0xde1 DUP4
0xde2 ADD
0xde3 SWAP1
0xde4 DUP2
0xde5 MSTORE
0xde6 DUP7
0xde7 DUP3
0xde8 AND
0xde9 PUSH1 0x24
0xdeb DUP5
0xdec ADD
0xded MSTORE
0xdee PUSH1 0x44
0xdf0 DUP4
0xdf1 ADD
0xdf2 DUP7
0xdf3 SWAP1
0xdf4 MSTORE
0xdf5 SWAP1
0xdf6 DUP4
0xdf7 AND
0xdf8 PUSH1 0x84
0xdfa DUP4
0xdfb ADD
0xdfc MSTORE
0xdfd PUSH1 0xa0
0xdff PUSH1 0x64
0xe01 DUP4
0xe02 ADD
0xe03 SWAP1
0xe04 DUP2
0xe05 MSTORE
0xe06 SWAP1
0xe07 SWAP2
0xe08 PUSH1 0xa4
0xe0a ADD
0xe0b DUP5
0xe0c DUP2
0xe0d DUP2
0xe0e MLOAD
0xe0f DUP2
0xe10 MSTORE
0xe11 PUSH1 0x20
0xe13 ADD
0xe14 SWAP2
0xe15 POP
0xe16 DUP1
0xe17 MLOAD
0xe18 SWAP1
0xe19 PUSH1 0x20
0xe1b ADD
0xe1c SWAP1
0xe1d DUP1
0xe1e DUP4
0xe1f DUP4
0xe20 PUSH1 0x0
---
0xd6f: JUMPDEST 
0xd70: V884 = 0x0
0xd73: V885 = S[0x0]
0xd74: V886 = 0xffffffffffffffffffffffffffffffffffffffff
0xd89: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0xd8a: V888 = 0x14cba002
0xd95: V889 = 0x40
0xd97: V890 = M[0x40]
0xd98: V891 = 0x20
0xd9a: V892 = ADD 0x20 V890
0xd9b: M[V892] = 0x0
0xd9c: V893 = 0x40
0xd9e: V894 = M[0x40]
0xd9f: V895 = 0x100000000000000000000000000000000000000000000000000000000
0xdbd: V896 = 0xffffffff
0xdc3: V897 = AND 0x14cba002 0xffffffff
0xdc4: V898 = MUL 0x14cba002 0x100000000000000000000000000000000000000000000000000000000
0xdc6: M[V894] = 0x14cba00200000000000000000000000000000000000000000000000000000000
0xdc7: V899 = 0xffffffffffffffffffffffffffffffffffffffff
0xdde: V900 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0xddf: V901 = 0x4
0xde2: V902 = ADD V894 0x4
0xde5: M[V902] = V900
0xde8: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0xde9: V904 = 0x24
0xdec: V905 = ADD V894 0x24
0xded: M[V905] = V903
0xdee: V906 = 0x44
0xdf1: V907 = ADD V894 0x44
0xdf4: M[V907] = V352
0xdf7: V908 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0xdf8: V909 = 0x84
0xdfb: V910 = ADD V894 0x84
0xdfc: M[V910] = V908
0xdfd: V911 = 0xa0
0xdff: V912 = 0x64
0xe02: V913 = ADD V894 0x64
0xe05: M[V913] = 0xa0
0xe08: V914 = 0xa4
0xe0a: V915 = ADD 0xa4 V894
0xe0e: V916 = M[V366]
0xe10: M[V915] = V916
0xe11: V917 = 0x20
0xe13: V918 = ADD 0x20 V915
0xe17: V919 = M[V366]
0xe19: V920 = 0x20
0xe1b: V921 = ADD 0x20 V366
0xe20: V922 = 0x0
---
Entry stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, V887, 0x14cba002, S4, S3, S2, S1, S0, V902, V913, V918, V921, V919, V919, V918, V921, 0x0]
Exit stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373, 0x0, V887, 0x14cba002, V347, V350, V352, V366, V373, V902, V913, V918, V921, V919, V919, V918, V921, 0x0]

================================

Block 0xe22
[0xe22:0xe2a]
---
Predecessors: [0xd6f]
Successors: [0xbbb, 0xe2b]
---
0xe22 JUMPDEST
0xe23 DUP4
0xe24 DUP2
0xe25 LT
0xe26 ISZERO
0xe27 PUSH2 0xbbb
0xe2a JUMPI
---
0xe22: JUMPDEST 
0xe25: V923 = LT 0x0 V919
0xe26: V924 = ISZERO V923
0xe27: V925 = 0xbbb
0xe2a: JUMPI 0xbbb V924
---
Entry stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373, 0x0, V887, 0x14cba002, V347, V350, V352, V366, V373, V902, V913, V918, V921, V919, V919, V918, V921, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373, 0x0, V887, 0x14cba002, V347, V350, V352, V366, V373, V902, V913, V918, V921, V919, V919, V918, V921, 0x0]

================================

Block 0xe2b
[0xe2b:0xe32]
---
Predecessors: [0xe22]
Successors: [0xe33]
---
0xe2b DUP1
0xe2c DUP3
0xe2d ADD
0xe2e MLOAD
0xe2f DUP2
0xe30 DUP5
0xe31 ADD
0xe32 MSTORE
---
0xe2d: V926 = ADD V921 0x0
0xe2e: V927 = M[V926]
0xe31: V928 = ADD V918 0x0
0xe32: M[V928] = V927
---
Entry stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373, 0x0, V887, 0x14cba002, V347, V350, V352, V366, V373, V902, V913, V918, V921, V919, V919, V918, V921, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373, 0x0, V887, 0x14cba002, V347, V350, V352, V366, V373, V902, V913, V918, V921, V919, V919, V918, V921, 0x0]

================================

Block 0xe33
[0xe33:0xe3a]
---
Predecessors: [0xe2b]
Successors: [0xba2]
---
0xe33 JUMPDEST
0xe34 PUSH1 0x20
0xe36 ADD
0xe37 PUSH2 0xba2
0xe3a JUMP
---
0xe33: JUMPDEST 
0xe34: V929 = 0x20
0xe36: V930 = ADD 0x20 0x0
0xe37: V931 = 0xba2
0xe3a: JUMP 0xba2
---
Entry stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373, 0x0, V887, 0x14cba002, V347, V350, V352, V366, V373, V902, V913, V918, V921, V919, V919, V918, V921, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [V10, 0x146, V347, V350, V352, V366, V373, 0x0, 0x86a, V347, V350, V352, V366, V373, 0x0, V887, 0x14cba002, V347, V350, V352, V366, V373, V902, V913, V918, V921, V919, V919, V918, V921, 0x20]

================================

Block 0xe3b
[0xe3b:0xe4e]
---
Predecessors: []
Successors: [0xbe8, 0xe4f]
---
0xe3b JUMPDEST
0xe3c POP
0xe3d POP
0xe3e POP
0xe3f POP
0xe40 SWAP1
0xe41 POP
0xe42 SWAP1
0xe43 DUP2
0xe44 ADD
0xe45 SWAP1
0xe46 PUSH1 0x1f
0xe48 AND
0xe49 DUP1
0xe4a ISZERO
0xe4b PUSH2 0xbe8
0xe4e JUMPI
---
0xe3b: JUMPDEST 
0xe44: V932 = ADD S4 S6
0xe46: V933 = 0x1f
0xe48: V934 = AND 0x1f S4
0xe4a: V935 = ISZERO V934
0xe4b: V936 = 0xbe8
0xe4e: JUMPI 0xbe8 V935
---
Entry stack: []
Stack pops: 7
Stack additions: [V932, V934]
Exit stack: [V932, V934]

================================

Block 0xe4f
[0xe4f:0xe67]
---
Predecessors: [0xe3b]
Successors: [0xe68]
---
0xe4f DUP1
0xe50 DUP3
0xe51 SUB
0xe52 DUP1
0xe53 MLOAD
0xe54 PUSH1 0x1
0xe56 DUP4
0xe57 PUSH1 0x20
0xe59 SUB
0xe5a PUSH2 0x100
0xe5d EXP
0xe5e SUB
0xe5f NOT
0xe60 AND
0xe61 DUP2
0xe62 MSTORE
0xe63 PUSH1 0x20
0xe65 ADD
0xe66 SWAP2
0xe67 POP
---
0xe51: V937 = SUB V932 V934
0xe53: V938 = M[V937]
0xe54: V939 = 0x1
0xe57: V940 = 0x20
0xe59: V941 = SUB 0x20 V934
0xe5a: V942 = 0x100
0xe5d: V943 = EXP 0x100 V941
0xe5e: V944 = SUB V943 0x1
0xe5f: V945 = NOT V944
0xe60: V946 = AND V945 V938
0xe62: M[V937] = V946
0xe63: V947 = 0x20
0xe65: V948 = ADD 0x20 V937
---
Entry stack: [V932, V934]
Stack pops: 2
Stack additions: [V948, S0]
Exit stack: [V948, V934]

================================

Block 0xe68
[0xe68:0xe85]
---
Predecessors: [0xe4f]
Successors: [0xc0a, 0xe86]
---
0xe68 JUMPDEST
0xe69 POP
0xe6a SWAP7
0xe6b POP
0xe6c POP
0xe6d POP
0xe6e POP
0xe6f POP
0xe70 POP
0xe71 POP
0xe72 PUSH1 0x20
0xe74 PUSH1 0x40
0xe76 MLOAD
0xe77 DUP1
0xe78 DUP4
0xe79 SUB
0xe7a DUP2
0xe7b PUSH1 0x0
0xe7d DUP8
0xe7e DUP1
0xe7f EXTCODESIZE
0xe80 ISZERO
0xe81 ISZERO
0xe82 PUSH2 0xc0a
0xe85 JUMPI
---
0xe68: JUMPDEST 
0xe72: V949 = 0x20
0xe74: V950 = 0x40
0xe76: V951 = M[0x40]
0xe79: V952 = SUB V948 V951
0xe7b: V953 = 0x0
0xe7f: V954 = EXTCODESIZE S10
0xe80: V955 = ISZERO V954
0xe81: V956 = ISZERO V955
0xe82: V957 = 0xc0a
0xe85: JUMPI 0xc0a V956
---
Entry stack: [V948, V934]
Stack pops: 11
Stack additions: [S10, S9, S1, 0x20, V951, V952, V951, 0x0, S10]
Exit stack: [S8, S7, V948, 0x20, V951, V952, V951, 0x0, S8]

================================

Block 0xe86
[0xe86:0xe96]
---
Predecessors: [0xe68]
Successors: [0xc1b, 0xe97]
---
0xe86 PUSH1 0x0
0xe88 DUP1
0xe89 REVERT
0xe8a JUMPDEST
0xe8b PUSH2 0x2c6
0xe8e GAS
0xe8f SUB
0xe90 CALL
0xe91 ISZERO
0xe92 ISZERO
0xe93 PUSH2 0xc1b
0xe96 JUMPI
---
0xe86: V958 = 0x0
0xe89: REVERT 0x0 0x0
0xe8a: JUMPDEST 
0xe8b: V959 = 0x2c6
0xe8e: V960 = GAS
0xe8f: V961 = SUB V960 0x2c6
0xe90: V962 = CALL V961 S0 S1 S2 S3 S4 S5
0xe91: V963 = ISZERO V962
0xe92: V964 = ISZERO V963
0xe93: V965 = 0xc1b
0xe96: JUMPI 0xc1b V964
---
Entry stack: [S8, S7, V948, 0x20, V951, V952, V951, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe97
[0xe97:0xea6]
---
Predecessors: [0xe86]
Successors: [0xea7]
---
0xe97 PUSH1 0x0
0xe99 DUP1
0xe9a REVERT
0xe9b JUMPDEST
0xe9c POP
0xe9d POP
0xe9e POP
0xe9f PUSH1 0x40
0xea1 MLOAD
0xea2 DUP1
0xea3 MLOAD
0xea4 SWAP2
0xea5 POP
0xea6 POP
---
0xe97: V966 = 0x0
0xe9a: REVERT 0x0 0x0
0xe9b: JUMPDEST 
0xe9f: V967 = 0x40
0xea1: V968 = M[0x40]
0xea3: V969 = M[V968]
---
Entry stack: []
Stack pops: 0
Stack additions: [V969]
Exit stack: []

================================

Block 0xea7
[0xea7:0xeaf]
---
Predecessors: [0xe97]
Successors: []
Has unresolved jump.
---
0xea7 JUMPDEST
0xea8 SWAP6
0xea9 SWAP5
0xeaa POP
0xeab POP
0xeac POP
0xead POP
0xeae POP
0xeaf JUMP
---
0xea7: JUMPDEST 
0xeaf: JUMP S6
---
Entry stack: [V969]
Stack pops: 7
Stack additions: [S0]
Exit stack: [V969]

================================

Block 0xeb0
[0xeb0:0xed1]
---
Predecessors: [0x89d]
Successors: [0xed2, 0xed6]
---
0xeb0 JUMPDEST
0xeb1 PUSH1 0x1
0xeb3 SLOAD
0xeb4 PUSH1 0x0
0xeb6 SWAP1
0xeb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xecc AND
0xecd ISZERO
0xece PUSH2 0xed6
0xed1 JUMPI
---
0xeb0: JUMPDEST 
0xeb1: V970 = 0x1
0xeb3: V971 = S[0x1]
0xeb4: V972 = 0x0
0xeb7: V973 = 0xffffffffffffffffffffffffffffffffffffffff
0xecc: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V971
0xecd: V975 = ISZERO V974
0xece: V976 = 0xed6
0xed1: JUMPI 0xed6 V975
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0]

================================

Block 0xed2
[0xed2:0xed5]
---
Predecessors: [0xeb0]
Successors: []
---
0xed2 PUSH1 0x0
0xed4 DUP1
0xed5 REVERT
---
0xed2: V977 = 0x0
0xed5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0]

================================

Block 0xed6
[0xed6:0xf20]
---
Predecessors: [0xeb0]
Successors: [0x101d]
---
0xed6 JUMPDEST
0xed7 PUSH1 0x1
0xed9 DUP1
0xeda SLOAD
0xedb PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xefc AND
0xefd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf12 DUP5
0xf13 AND
0xf14 OR
0xf15 SWAP1
0xf16 SSTORE
0xf17 PUSH2 0xf21
0xf1a ADDRESS
0xf1b DUP5
0xf1c DUP7
0xf1d PUSH2 0x101d
0xf20 JUMP
---
0xed6: JUMPDEST 
0xed7: V978 = 0x1
0xeda: V979 = S[0x1]
0xedb: V980 = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xefc: V981 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V979
0xefd: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0xf13: V983 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0xf14: V984 = OR V983 V981
0xf16: S[0x1] = V984
0xf17: V985 = 0xf21
0xf1a: V986 = ADDRESS
0xf1d: V987 = 0x101d
0xf20: JUMP 0x101d
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xf21, V986, S2, S3]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0, 0xf21, V986, V581, V398]

================================

Block 0xf21
[0xf21:0xf53]
---
Predecessors: [0x1035]
Successors: [0x103c]
---
0xf21 JUMPDEST
0xf22 PUSH1 0x1
0xf24 DUP1
0xf25 SLOAD
0xf26 PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xf47 AND
0xf48 SWAP1
0xf49 SSTORE
0xf4a SWAP1
0xf4b POP
0xf4c PUSH2 0xf54
0xf4f DUP2
0xf50 PUSH2 0x103c
0xf53 JUMP
---
0xf21: JUMPDEST 
0xf22: V988 = 0x1
0xf25: V989 = S[0x1]
0xf26: V990 = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xf47: V991 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V989
0xf49: S[0x1] = V991
0xf4c: V992 = 0xf54
0xf50: V993 = 0x103c
0xf53: JUMP 0x103c
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0, V1051]
Stack pops: 2
Stack additions: [S0, 0xf54, S0]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, V1051, 0xf54, V1051]

================================

Block 0xf54
[0xf54:0xf54]
---
Predecessors: []
Successors: [0xf55]
---
0xf54 JUMPDEST
---
0xf54: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf55
[0xf55:0xf5a]
---
Predecessors: [0xf54]
Successors: []
Has unresolved jump.
---
0xf55 JUMPDEST
0xf56 POP
0xf57 POP
0xf58 POP
0xf59 POP
0xf5a JUMP
---
0xf55: JUMPDEST 
0xf5a: JUMP S4
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xf5b
[0xf5b:0xff4]
---
Predecessors: [0x8d4]
Successors: [0xff5, 0xff9]
---
0xf5b JUMPDEST
0xf5c PUSH1 0x0
0xf5e DUP1
0xf5f SLOAD
0xf60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf75 AND
0xf76 PUSH4 0x7bcdc2f0
0xf7b DUP6
0xf7c DUP6
0xf7d DUP6
0xf7e DUP6
0xf7f PUSH1 0x40
0xf81 MLOAD
0xf82 PUSH1 0x20
0xf84 ADD
0xf85 MSTORE
0xf86 PUSH1 0x40
0xf88 MLOAD
0xf89 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xfa7 PUSH4 0xffffffff
0xfac DUP7
0xfad AND
0xfae MUL
0xfaf DUP2
0xfb0 MSTORE
0xfb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc6 SWAP4
0xfc7 DUP5
0xfc8 AND
0xfc9 PUSH1 0x4
0xfcb DUP3
0xfcc ADD
0xfcd MSTORE
0xfce PUSH1 0x24
0xfd0 DUP2
0xfd1 ADD
0xfd2 SWAP3
0xfd3 SWAP1
0xfd4 SWAP3
0xfd5 MSTORE
0xfd6 SWAP1
0xfd7 SWAP2
0xfd8 AND
0xfd9 PUSH1 0x44
0xfdb DUP3
0xfdc ADD
0xfdd MSTORE
0xfde PUSH1 0x64
0xfe0 ADD
0xfe1 PUSH1 0x20
0xfe3 PUSH1 0x40
0xfe5 MLOAD
0xfe6 DUP1
0xfe7 DUP4
0xfe8 SUB
0xfe9 DUP2
0xfea PUSH1 0x0
0xfec DUP8
0xfed DUP1
0xfee EXTCODESIZE
0xfef ISZERO
0xff0 ISZERO
0xff1 PUSH2 0xff9
0xff4 JUMPI
---
0xf5b: JUMPDEST 
0xf5c: V994 = 0x0
0xf5f: V995 = S[0x0]
0xf60: V996 = 0xffffffffffffffffffffffffffffffffffffffff
0xf75: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0xf76: V998 = 0x7bcdc2f0
0xf7f: V999 = 0x40
0xf81: V1000 = M[0x40]
0xf82: V1001 = 0x20
0xf84: V1002 = ADD 0x20 V1000
0xf85: M[V1002] = 0x0
0xf86: V1003 = 0x40
0xf88: V1004 = M[0x40]
0xf89: V1005 = 0x100000000000000000000000000000000000000000000000000000000
0xfa7: V1006 = 0xffffffff
0xfad: V1007 = AND 0x7bcdc2f0 0xffffffff
0xfae: V1008 = MUL 0x7bcdc2f0 0x100000000000000000000000000000000000000000000000000000000
0xfb0: M[V1004] = 0x7bcdc2f000000000000000000000000000000000000000000000000000000000
0xfb1: V1009 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc8: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0xfc9: V1011 = 0x4
0xfcc: V1012 = ADD V1004 0x4
0xfcd: M[V1012] = V1010
0xfce: V1013 = 0x24
0xfd1: V1014 = ADD V1004 0x24
0xfd5: M[V1014] = V417
0xfd8: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0xfd9: V1016 = 0x44
0xfdc: V1017 = ADD V1004 0x44
0xfdd: M[V1017] = V1015
0xfde: V1018 = 0x64
0xfe0: V1019 = ADD 0x64 V1004
0xfe1: V1020 = 0x20
0xfe3: V1021 = 0x40
0xfe5: V1022 = M[0x40]
0xfe8: V1023 = SUB V1019 V1022
0xfea: V1024 = 0x0
0xfee: V1025 = EXTCODESIZE V997
0xfef: V1026 = ISZERO V1025
0xff0: V1027 = ISZERO V1026
0xff1: V1028 = 0xff9
0xff4: JUMPI 0xff9 V1027
---
Entry stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V997, 0x7bcdc2f0, V1019, 0x20, V1022, V1023, V1022, 0x0, V997]
Exit stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019, 0x20, V1022, V1023, V1022, 0x0, V997]

================================

Block 0xff5
[0xff5:0xff8]
---
Predecessors: [0xf5b]
Successors: []
---
0xff5 PUSH1 0x0
0xff7 DUP1
0xff8 REVERT
---
0xff5: V1029 = 0x0
0xff8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019, 0x20, V1022, V1023, V1022, 0x0, V997]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019, 0x20, V1022, V1023, V1022, 0x0, V997]

================================

Block 0xff9
[0xff9:0x1005]
---
Predecessors: [0xf5b]
Successors: [0x1006, 0x100a]
---
0xff9 JUMPDEST
0xffa PUSH2 0x2c6
0xffd GAS
0xffe SUB
0xfff CALL
0x1000 ISZERO
0x1001 ISZERO
0x1002 PUSH2 0x100a
0x1005 JUMPI
---
0xff9: JUMPDEST 
0xffa: V1030 = 0x2c6
0xffd: V1031 = GAS
0xffe: V1032 = SUB V1031 0x2c6
0xfff: V1033 = CALL V1032 V997 0x0 V1022 V1023 V1022 0x20
0x1000: V1034 = ISZERO V1033
0x1001: V1035 = ISZERO V1034
0x1002: V1036 = 0x100a
0x1005: JUMPI 0x100a V1035
---
Entry stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019, 0x20, V1022, V1023, V1022, 0x0, V997]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019]

================================

Block 0x1006
[0x1006:0x1009]
---
Predecessors: [0xff9]
Successors: []
---
0x1006 PUSH1 0x0
0x1008 DUP1
0x1009 REVERT
---
0x1006: V1037 = 0x0
0x1009: REVERT 0x0 0x0
---
Entry stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019]

================================

Block 0x100a
[0x100a:0x1015]
---
Predecessors: [0xff9]
Successors: [0x1016]
---
0x100a JUMPDEST
0x100b POP
0x100c POP
0x100d POP
0x100e PUSH1 0x40
0x1010 MLOAD
0x1011 DUP1
0x1012 MLOAD
0x1013 SWAP2
0x1014 POP
0x1015 POP
---
0x100a: JUMPDEST 
0x100e: V1038 = 0x40
0x1010: V1039 = M[0x40]
0x1012: V1040 = M[V1039]
---
Entry stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, 0x0, V997, 0x7bcdc2f0, V1019]
Stack pops: 4
Stack additions: [V1040]
Exit stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, V1040]

================================

Block 0x1016
[0x1016:0x101c]
---
Predecessors: [0x100a]
Successors: [0x77c]
---
0x1016 JUMPDEST
0x1017 SWAP4
0x1018 SWAP3
0x1019 POP
0x101a POP
0x101b POP
0x101c JUMP
---
0x1016: JUMPDEST 
0x101c: JUMP 0x77c
---
Entry stack: [V10, 0x146, V415, V417, V420, 0x0, 0x77c, V415, V417, V420, V1040]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x146, V415, V417, V420, 0x0, V1040]

================================

Block 0x101d
[0x101d:0x1034]
---
Predecessors: [0xed6]
Successors: [0x1035]
---
0x101d JUMPDEST
0x101e PUSH1 0x0
0x1020 DUP1
0x1021 PUSH1 0x0
0x1023 DUP4
0x1024 MLOAD
0x1025 PUSH1 0x20
0x1027 DUP6
0x1028 ADD
0x1029 DUP7
0x102a DUP9
0x102b PUSH1 0x40
0x102d PUSH1 0x3f
0x102f GAS
0x1030 MUL
0x1031 DIV
0x1032 CALL
0x1033 SWAP1
0x1034 POP
---
0x101d: JUMPDEST 
0x101e: V1041 = 0x0
0x1021: V1042 = 0x0
0x1024: V1043 = M[V398]
0x1025: V1044 = 0x20
0x1028: V1045 = ADD V398 0x20
0x102b: V1046 = 0x40
0x102d: V1047 = 0x3f
0x102f: V1048 = GAS
0x1030: V1049 = MUL V1048 0x3f
0x1031: V1050 = DIV V1049 0x40
0x1032: V1051 = CALL V1050 V986 V581 V1045 V1043 0x0 0x0
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0, 0xf21, V986, V581, V398]
Stack pops: 3
Stack additions: [S2, S1, S0, V1051]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0, 0xf21, V986, V581, V398, V1051]

================================

Block 0x1035
[0x1035:0x103b]
---
Predecessors: [0x101d]
Successors: [0xf21]
---
0x1035 JUMPDEST
0x1036 SWAP4
0x1037 SWAP3
0x1038 POP
0x1039 POP
0x103a POP
0x103b JUMP
---
0x1035: JUMPDEST 
0x103b: JUMP 0xf21
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0, 0xf21, V986, V581, V398, V1051]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, 0x0, V1051]

================================

Block 0x103c
[0x103c:0x104f]
---
Predecessors: [0xf21]
Successors: [0x1050, 0x1053]
---
0x103c JUMPDEST
0x103d MSIZE
0x103e RETURNDATASIZE
0x103f DUP2
0x1040 ADD
0x1041 PUSH1 0x40
0x1043 MSTORE
0x1044 RETURNDATASIZE
0x1045 PUSH1 0x0
0x1047 DUP3
0x1048 RETURNDATACOPY
0x1049 DUP2
0x104a DUP1
0x104b ISZERO
0x104c PUSH2 0x1053
0x104f JUMPI
---
0x103c: JUMPDEST 
0x103d: V1052 = MSIZE
0x103e: V1053 = RETURNDATASIZE
0x1040: V1054 = ADD V1052 V1053
0x1041: V1055 = 0x40
0x1043: M[0x40] = V1054
0x1044: V1056 = RETURNDATASIZE
0x1045: V1057 = 0x0
0x1048: RETURNDATACOPY V1052 0x0 V1056
0x104b: V1058 = ISZERO V1051
0x104c: V1059 = 0x1053
0x104f: JUMPI 0x1053 V1058
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, V1051, 0xf54, V1051]
Stack pops: 1
Stack additions: [S0, V1052, S0]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, V1051, 0xf54, V1051, V1052, V1051]

================================

Block 0x1050
[0x1050:0x1052]
---
Predecessors: [0x103c]
Successors: []
---
0x1050 RETURNDATASIZE
0x1051 DUP3
0x1052 RETURN
---
0x1050: V1060 = RETURNDATASIZE
0x1052: RETURN V1052 V1060
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, V1051, 0xf54, V1051, V1052, V1051]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, V1051, 0xf54, V1051, V1052, V1051]

================================

Block 0x1053
[0x1053:0x1056]
---
Predecessors: [0x103c]
Successors: []
---
0x1053 JUMPDEST
0x1054 RETURNDATASIZE
0x1055 DUP3
0x1056 REVERT
---
0x1053: JUMPDEST 
0x1054: V1061 = RETURNDATASIZE
0x1056: REVERT V1052 V1061
---
Entry stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, V1051, 0xf54, V1051, V1052, V1051]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x589, V398, V405, 0x8a7, V398, V581, V405, V1051, 0xf54, V1051, V1052, V1051]

================================

Block 0x1057
[0x1057:0x1059]
---
Predecessors: []
Successors: [0x105a]
---
0x1057 JUMPDEST
0x1058 POP
0x1059 POP
---
0x1057: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x105a
[0x105a:0x1088]
---
Predecessors: [0x1057]
Successors: []
---
0x105a JUMPDEST
0x105b POP
0x105c JUMP
0x105d STOP
0x105e LOG1
0x105f PUSH6 0x627a7a723058
0x1066 SHA3
0x1067 PUSH6 0x3254c2279ec2
0x106e PUSH20 0x8953b9d066039ff18579755e3c70588c18daa3a1
0x1083 SWAP16
0x1084 SWAP8
0x1085 MISSING 0x28
0x1086 MISSING 0xf8
0x1087 STOP
0x1088 MISSING 0x29
---
0x105a: JUMPDEST 
0x105c: JUMP S1
0x105d: STOP 
0x105e: LOG S0 S1 S2
0x105f: V1062 = 0x627a7a723058
0x1066: V1063 = SHA3 0x627a7a723058 S3
0x1067: V1064 = 0x3254c2279ec2
0x106e: V1065 = 0x8953b9d066039ff18579755e3c70588c18daa3a1
0x1085: MISSING 0x28
0x1086: MISSING 0xf8
0x1087: STOP 
0x1088: MISSING 0x29
---
Entry stack: []
Stack pops: 15
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x1962df71
Entry block: 0xbc
Exit block: 0x7a4
Body: 0xbc, 0xc3, 0xc7, 0x6b2, 0x6d8, 0x7a4, 0x946

Function 1:
Public function signature: 0x19ab453c
Entry block: 0x15a
Exit block: 0x146
Body: 0x146, 0x15a, 0x161, 0x165, 0x6f0, 0x710, 0x717, 0x75b

Function 2:
Public function signature: 0x7609c5a9
Entry block: 0x19a
Exit block: 0x7a4
Body: 0x19a, 0x1a1, 0x1a5, 0x760, 0x77c, 0x7a4

Function 3:
Public function signature: 0x81d434e9
Entry block: 0x21c
Exit block: 0x7a4
Body: 0x21c, 0x223, 0x227, 0x786, 0x7a1, 0x7a4

Function 4:
Public function signature: 0x84c5c34d
Entry block: 0x283
Exit block: 0x146
Body: 0x146, 0x283, 0x28a, 0x28e

Function 5:
Public function signature: 0x9ab253cc
Entry block: 0x34e
Exit block: 0x146
Body: 0x146, 0x34e, 0x355, 0x359

Function 6:
Public function signature: 0xc10796df
Entry block: 0x3fe
Exit block: 0x7a4
Body: 0x3fe, 0x405, 0x409, 0x7a4, 0x7fa, 0x820

Function 7:
Public function signature: 0xcca97025
Entry block: 0x486
Exit block: 0x146
Body: 0x146, 0x486, 0x48d, 0x491, 0x838, 0x85e, 0xd6f, 0xe22, 0xe2b, 0xe33

Function 8:
Public function signature: 0xdb00b848
Entry block: 0x52b
Exit block: 0x1050
Body: 0x52b, 0x589, 0x878, 0x89d, 0x8a7, 0x8a8, 0x8a9, 0x8aa, 0xeb0, 0xed2, 0xed6, 0xf21, 0x101d, 0x1035, 0x103c, 0x1050, 0x1053

Function 9:
Public function signature: 0xe34f7137
Entry block: 0x58b
Exit block: 0x7a4
Body: 0x58b, 0x592, 0x596, 0x7a4, 0x8ae, 0x8d4, 0xf5b, 0xff5, 0xff9, 0x1006, 0x100a, 0x1016

Function 10:
Public function signature: 0xeb58705b
Entry block: 0x5d5
Exit block: 0x146
Body: 0x146, 0x5d5, 0x5dc, 0x5e0, 0x8ea, 0x910

Function 11:
Public function signature: 0xec556889
Entry block: 0x676
Exit block: 0x689
Body: 0x676, 0x67d, 0x681, 0x689, 0x92a

Function 12:
Public fallback function
Entry block: 0xb7
Exit block: 0xb7
Body: 0xb7

Function 13:
Private function
Entry block: 0xa95
Exit block: 0xaed
Body: 0xa95, 0xacb, 0xad0, 0xaea, 0xaed

Function 14:
Private function
Entry block: 0xa86
Exit block: 0xa90
Body: 0xa86, 0xa90

Function 15:
Private function
Entry block: 0x7d3
Exit block: 0x77f
Body: 0x6e3, 0x6e6, 0x6e7, 0x6e8, 0x77c, 0x77f, 0x7c3, 0x7d3, 0x7e1, 0x7eb, 0x86a, 0x86d, 0x86e, 0x86f, 0x9f9, 0xa02, 0xa0a, 0xa12, 0xa26, 0xa3f, 0xa61, 0xa72, 0xa7e, 0xa95, 0xacb, 0xad0, 0xaea, 0xaed, 0xaf0, 0xba2, 0xbab, 0xbb3, 0xbbb, 0xbcf, 0xbe8, 0xc0a, 0xc1b, 0xc27, 0xc30, 0xce2, 0xceb, 0xcf3

Function 16:
Private function
Entry block: 0x7aa
Exit block: 0x6e8
Body: 0x6e3, 0x6e6, 0x6e7, 0x6e8, 0x7aa, 0x7b9, 0x7c3, 0x7eb, 0x86a, 0x86d, 0x86e, 0x86f, 0x9f9, 0xa02, 0xa0a, 0xa12, 0xa26, 0xa3f, 0xa61, 0xa72, 0xa7e, 0xa95, 0xacb, 0xad0, 0xaea, 0xaed, 0xaf0, 0xba2, 0xbab, 0xbb3, 0xbbb, 0xbcf, 0xbe8, 0xc0a, 0xc1b, 0xc27, 0xc30, 0xce2, 0xceb, 0xcf3

