Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x5e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x5e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x5e
0xc: JUMPI 0x5e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x60]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3ccfd60b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x60
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3ccfd60b
0x22: V15 = EQ V13 0x3ccfd60b
0x23: V16 = 0x60
0x26: JUMPI 0x60 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x75]
---
0x27 DUP1
0x28 PUSH4 0x69dc9ff3
0x2d EQ
0x2e PUSH2 0x75
0x31 JUMPI
---
0x28: V17 = 0x69dc9ff3
0x2d: V18 = EQ 0x69dc9ff3 V13
0x2e: V19 = 0x75
0x31: JUMPI 0x75 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xa8]
---
0x32 DUP1
0x33 PUSH4 0x8892170a
0x38 EQ
0x39 PUSH2 0xa8
0x3c JUMPI
---
0x33: V20 = 0x8892170a
0x38: V21 = EQ 0x8892170a V13
0x39: V22 = 0xa8
0x3c: JUMPI 0xa8 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xd9]
---
0x3d DUP1
0x3e PUSH4 0xaffed0e0
0x43 EQ
0x44 PUSH2 0xd9
0x47 JUMPI
---
0x3e: V23 = 0xaffed0e0
0x43: V24 = EQ 0xaffed0e0 V13
0x44: V25 = 0xd9
0x47: JUMPI 0xd9 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xee]
---
0x48 DUP1
0x49 PUSH4 0xb11524c5
0x4e EQ
0x4f PUSH2 0xee
0x52 JUMPI
---
0x49: V26 = 0xb11524c5
0x4e: V27 = EQ 0xb11524c5 V13
0x4f: V28 = 0xee
0x52: JUMPI 0xee V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x122]
---
0x53 DUP1
0x54 PUSH4 0xf4109d12
0x59 EQ
0x5a PUSH2 0x122
0x5d JUMPI
---
0x54: V29 = 0xf4109d12
0x59: V30 = EQ 0xf4109d12 V13
0x5a: V31 = 0x122
0x5d: JUMPI 0x122 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x5f]
---
Predecessors: [0x0, 0x53, 0x18c, 0x959]
Successors: []
---
0x5e JUMPDEST
0x5f STOP
---
0x5e: JUMPDEST 
0x5f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x60
[0x60:0x67]
---
Predecessors: [0xd]
Successors: [0x68, 0x6c]
---
0x60 JUMPDEST
0x61 CALLVALUE
0x62 DUP1
0x63 ISZERO
0x64 PUSH2 0x6c
0x67 JUMPI
---
0x60: JUMPDEST 
0x61: V32 = CALLVALUE
0x63: V33 = ISZERO V32
0x64: V34 = 0x6c
0x67: JUMPI 0x6c V33
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V32]
Exit stack: [V13, V32]

================================

Block 0x68
[0x68:0x6b]
---
Predecessors: [0x60]
Successors: []
---
0x68 PUSH1 0x0
0x6a DUP1
0x6b REVERT
---
0x68: V35 = 0x0
0x6b: REVERT 0x0 0x0
---
Entry stack: [V13, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V32]

================================

Block 0x6c
[0x6c:0x74]
---
Predecessors: [0x60]
Successors: [0x13a]
---
0x6c JUMPDEST
0x6d POP
0x6e PUSH2 0x5e
0x71 PUSH2 0x13a
0x74 JUMP
---
0x6c: JUMPDEST 
0x6e: V36 = 0x5e
0x71: V37 = 0x13a
0x74: JUMP 0x13a
---
Entry stack: [V13, V32]
Stack pops: 1
Stack additions: [0x5e]
Exit stack: [V13, 0x5e]

================================

Block 0x75
[0x75:0x7c]
---
Predecessors: [0x27]
Successors: [0x7d, 0x81]
---
0x75 JUMPDEST
0x76 CALLVALUE
0x77 DUP1
0x78 ISZERO
0x79 PUSH2 0x81
0x7c JUMPI
---
0x75: JUMPDEST 
0x76: V38 = CALLVALUE
0x78: V39 = ISZERO V38
0x79: V40 = 0x81
0x7c: JUMPI 0x81 V39
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V13, V38]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x75]
Successors: []
---
0x7d PUSH1 0x0
0x7f DUP1
0x80 REVERT
---
0x7d: V41 = 0x0
0x80: REVERT 0x0 0x0
---
Entry stack: [V13, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V38]

================================

Block 0x81
[0x81:0x95]
---
Predecessors: [0x75]
Successors: [0x18f]
---
0x81 JUMPDEST
0x82 POP
0x83 PUSH2 0x96
0x86 PUSH1 0x1
0x88 PUSH1 0xa0
0x8a PUSH1 0x2
0x8c EXP
0x8d SUB
0x8e PUSH1 0x4
0x90 CALLDATALOAD
0x91 AND
0x92 PUSH2 0x18f
0x95 JUMP
---
0x81: JUMPDEST 
0x83: V42 = 0x96
0x86: V43 = 0x1
0x88: V44 = 0xa0
0x8a: V45 = 0x2
0x8c: V46 = EXP 0x2 0xa0
0x8d: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e: V48 = 0x4
0x90: V49 = CALLDATALOAD 0x4
0x91: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x92: V51 = 0x18f
0x95: JUMP 0x18f
---
Entry stack: [V13, V38]
Stack pops: 1
Stack additions: [0x96, V50]
Exit stack: [V13, 0x96, V50]

================================

Block 0x96
[0x96:0xa7]
---
Predecessors: [0x18f, 0x768]
Successors: []
---
0x96 JUMPDEST
0x97 PUSH1 0x40
0x99 DUP1
0x9a MLOAD
0x9b SWAP2
0x9c DUP3
0x9d MSTORE
0x9e MLOAD
0x9f SWAP1
0xa0 DUP2
0xa1 SWAP1
0xa2 SUB
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 RETURN
---
0x96: JUMPDEST 
0x97: V52 = 0x40
0x9a: V53 = M[0x40]
0x9d: M[V53] = S0
0x9e: V54 = M[0x40]
0xa2: V55 = SUB V53 V54
0xa3: V56 = 0x20
0xa5: V57 = ADD 0x20 V55
0xa7: RETURN V54 V57
---
Entry stack: [V13, 0x96, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x96]

================================

Block 0xa8
[0xa8:0xc4]
---
Predecessors: [0x32]
Successors: [0x1a1]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xc5
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 PUSH1 0x4
0xb6 CALLDATALOAD
0xb7 DUP2
0xb8 AND
0xb9 SWAP1
0xba PUSH1 0x24
0xbc CALLDATALOAD
0xbd AND
0xbe PUSH1 0x44
0xc0 CALLDATALOAD
0xc1 PUSH2 0x1a1
0xc4 JUMP
---
0xa8: JUMPDEST 
0xa9: V58 = 0xc5
0xac: V59 = 0x1
0xae: V60 = 0xa0
0xb0: V61 = 0x2
0xb2: V62 = EXP 0x2 0xa0
0xb3: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V64 = 0x4
0xb6: V65 = CALLDATALOAD 0x4
0xb8: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xba: V67 = 0x24
0xbc: V68 = CALLDATALOAD 0x24
0xbd: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V70 = 0x44
0xc0: V71 = CALLDATALOAD 0x44
0xc1: V72 = 0x1a1
0xc4: JUMP 0x1a1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc5, V66, V69, V71]
Exit stack: [V13, 0xc5, V66, V69, V71]

================================

Block 0xc5
[0xc5:0xd8]
---
Predecessors: [0x759]
Successors: []
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 DUP1
0xc9 MLOAD
0xca SWAP2
0xcb ISZERO
0xcc ISZERO
0xcd DUP3
0xce MSTORE
0xcf MLOAD
0xd0 SWAP1
0xd1 DUP2
0xd2 SWAP1
0xd3 SUB
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 SWAP1
0xd8 RETURN
---
0xc5: JUMPDEST 
0xc6: V73 = 0x40
0xc9: V74 = M[0x40]
0xcb: V75 = ISZERO {0x0, 0x1}
0xcc: V76 = ISZERO V75
0xce: M[V74] = V76
0xcf: V77 = M[0x40]
0xd3: V78 = SUB V74 V77
0xd4: V79 = 0x20
0xd6: V80 = ADD 0x20 V78
0xd8: RETURN V77 V80
---
Entry stack: [V13, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x3d]
Successors: [0xe1, 0xe5]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb DUP1
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xd9: JUMPDEST 
0xda: V81 = CALLVALUE
0xdc: V82 = ISZERO V81
0xdd: V83 = 0xe5
0xe0: JUMPI 0xe5 V82
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V13, V81]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xd9]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V84 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V13, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V81]

================================

Block 0xe5
[0xe5:0xed]
---
Predecessors: [0xd9]
Successors: [0x768]
---
0xe5 JUMPDEST
0xe6 POP
0xe7 PUSH2 0x96
0xea PUSH2 0x768
0xed JUMP
---
0xe5: JUMPDEST 
0xe7: V85 = 0x96
0xea: V86 = 0x768
0xed: JUMP 0x768
---
Entry stack: [V13, V81]
Stack pops: 1
Stack additions: [0x96]
Exit stack: [V13, 0x96]

================================

Block 0xee
[0xee:0xf5]
---
Predecessors: [0x48]
Successors: [0xf6, 0xfa]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 DUP1
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xee: JUMPDEST 
0xef: V87 = CALLVALUE
0xf1: V88 = ISZERO V87
0xf2: V89 = 0xfa
0xf5: JUMPI 0xfa V88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V13, V87]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xee]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V90 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V13, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V87]

================================

Block 0xfa
[0xfa:0x105]
---
Predecessors: [0xee]
Successors: [0x76e]
---
0xfa JUMPDEST
0xfb POP
0xfc PUSH2 0x106
0xff PUSH1 0x4
0x101 CALLDATALOAD
0x102 PUSH2 0x76e
0x105 JUMP
---
0xfa: JUMPDEST 
0xfc: V91 = 0x106
0xff: V92 = 0x4
0x101: V93 = CALLDATALOAD 0x4
0x102: V94 = 0x76e
0x105: JUMP 0x76e
---
Entry stack: [V13, V87]
Stack pops: 1
Stack additions: [0x106, V93]
Exit stack: [V13, 0x106, V93]

================================

Block 0x106
[0x106:0x121]
---
Predecessors: [0x76e]
Successors: []
---
0x106 JUMPDEST
0x107 PUSH1 0x40
0x109 DUP1
0x10a MLOAD
0x10b PUSH1 0x1
0x10d PUSH1 0xa0
0x10f PUSH1 0x2
0x111 EXP
0x112 SUB
0x113 SWAP1
0x114 SWAP3
0x115 AND
0x116 DUP3
0x117 MSTORE
0x118 MLOAD
0x119 SWAP1
0x11a DUP2
0x11b SWAP1
0x11c SUB
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 RETURN
---
0x106: JUMPDEST 
0x107: V95 = 0x40
0x10a: V96 = M[0x40]
0x10b: V97 = 0x1
0x10d: V98 = 0xa0
0x10f: V99 = 0x2
0x111: V100 = EXP 0x2 0xa0
0x112: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x115: V102 = AND V637 0xffffffffffffffffffffffffffffffffffffffff
0x117: M[V96] = V102
0x118: V103 = M[0x40]
0x11c: V104 = SUB V96 V103
0x11d: V105 = 0x20
0x11f: V106 = ADD 0x20 V104
0x121: RETURN V103 V106
---
Entry stack: [V13, 0x106, V637]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x106]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x53, 0xa5d]
Successors: [0x12a, 0x12e]
---
0x122 JUMPDEST
0x123 CALLVALUE
0x124 DUP1
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0x122: JUMPDEST 
0x123: V107 = CALLVALUE
0x125: V108 = ISZERO V107
0x126: V109 = 0x12e
0x129: JUMPI 0x12e V108
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V13, V107]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0x122]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V110 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V13, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V107]

================================

Block 0x12e
[0x12e:0x139]
---
Predecessors: [0x122]
Successors: [0x789]
---
0x12e JUMPDEST
0x12f POP
0x130 PUSH2 0x5e
0x133 PUSH1 0x4
0x135 CALLDATALOAD
0x136 PUSH2 0x789
0x139 JUMP
---
0x12e: JUMPDEST 
0x130: V111 = 0x5e
0x133: V112 = 0x4
0x135: V113 = CALLDATALOAD 0x4
0x136: V114 = 0x789
0x139: JUMP 0x789
---
Entry stack: [V13, V107]
Stack pops: 1
Stack additions: [0x5e, V113]
Exit stack: [V13, 0x5e, V113]

================================

Block 0x13a
[0x13a:0x14c]
---
Predecessors: [0x6c]
Successors: [0x14d, 0x151]
---
0x13a JUMPDEST
0x13b PUSH1 0x0
0x13d SLOAD
0x13e PUSH1 0x1
0x140 PUSH1 0xa0
0x142 PUSH1 0x2
0x144 EXP
0x145 SUB
0x146 AND
0x147 CALLER
0x148 EQ
0x149 PUSH2 0x151
0x14c JUMPI
---
0x13a: JUMPDEST 
0x13b: V115 = 0x0
0x13d: V116 = S[0x0]
0x13e: V117 = 0x1
0x140: V118 = 0xa0
0x142: V119 = 0x2
0x144: V120 = EXP 0x2 0xa0
0x145: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x146: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x147: V123 = CALLER
0x148: V124 = EQ V123 V122
0x149: V125 = 0x151
0x14c: JUMPI 0x151 V124
---
Entry stack: [V13, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x13a]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V126 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e]

================================

Block 0x151
[0x151:0x182]
---
Predecessors: [0x13a]
Successors: [0x183, 0x18c]
---
0x151 JUMPDEST
0x152 PUSH1 0x0
0x154 DUP1
0x155 SLOAD
0x156 PUSH1 0x40
0x158 MLOAD
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 SWAP1
0x162 SWAP2
0x163 AND
0x164 SWAP2
0x165 ADDRESS
0x166 BALANCE
0x167 DUP1
0x168 ISZERO
0x169 PUSH2 0x8fc
0x16c MUL
0x16d SWAP3
0x16e SWAP1
0x16f SWAP2
0x170 DUP2
0x171 DUP2
0x172 DUP2
0x173 DUP6
0x174 DUP9
0x175 DUP9
0x176 CALL
0x177 SWAP4
0x178 POP
0x179 POP
0x17a POP
0x17b POP
0x17c ISZERO
0x17d DUP1
0x17e ISZERO
0x17f PUSH2 0x18c
0x182 JUMPI
---
0x151: JUMPDEST 
0x152: V127 = 0x0
0x155: V128 = S[0x0]
0x156: V129 = 0x40
0x158: V130 = M[0x40]
0x159: V131 = 0x1
0x15b: V132 = 0xa0
0x15d: V133 = 0x2
0x15f: V134 = EXP 0x2 0xa0
0x160: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x163: V136 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x165: V137 = ADDRESS
0x166: V138 = BALANCE V137
0x168: V139 = ISZERO V138
0x169: V140 = 0x8fc
0x16c: V141 = MUL 0x8fc V139
0x176: V142 = CALL V141 V136 V138 V130 0x0 V130 0x0
0x17c: V143 = ISZERO V142
0x17e: V144 = ISZERO V143
0x17f: V145 = 0x18c
0x182: JUMPI 0x18c V144
---
Entry stack: [V13, 0x5e]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V13, 0x5e, V143]

================================

Block 0x183
[0x183:0x18b]
---
Predecessors: [0x151]
Successors: []
---
0x183 RETURNDATASIZE
0x184 PUSH1 0x0
0x186 DUP1
0x187 RETURNDATACOPY
0x188 RETURNDATASIZE
0x189 PUSH1 0x0
0x18b REVERT
---
0x183: V146 = RETURNDATASIZE
0x184: V147 = 0x0
0x187: RETURNDATACOPY 0x0 0x0 V146
0x188: V148 = RETURNDATASIZE
0x189: V149 = 0x0
0x18b: REVERT 0x0 V148
---
Entry stack: [V13, 0x5e, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V143]

================================

Block 0x18c
[0x18c:0x18e]
---
Predecessors: [0x151]
Successors: [0x5e]
---
0x18c JUMPDEST
0x18d POP
0x18e JUMP
---
0x18c: JUMPDEST 
0x18e: JUMP 0x5e
---
Entry stack: [V13, 0x5e, V143]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x18f
[0x18f:0x1a0]
---
Predecessors: [0x81]
Successors: [0x96]
---
0x18f JUMPDEST
0x190 PUSH1 0x1
0x192 PUSH1 0x20
0x194 MSTORE
0x195 PUSH1 0x0
0x197 SWAP1
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x40
0x19c SWAP1
0x19d SHA3
0x19e SLOAD
0x19f DUP2
0x1a0 JUMP
---
0x18f: JUMPDEST 
0x190: V150 = 0x1
0x192: V151 = 0x20
0x194: M[0x20] = 0x1
0x195: V152 = 0x0
0x199: M[0x0] = V50
0x19a: V153 = 0x40
0x19d: V154 = SHA3 0x0 0x40
0x19e: V155 = S[V154]
0x1a0: JUMP 0x96
---
Entry stack: [V13, 0x96, V50]
Stack pops: 2
Stack additions: [S1, V155]
Exit stack: [V13, 0x96, V155]

================================

Block 0x1a1
[0x1a1:0x1f4]
---
Predecessors: [0xa8]
Successors: [0x1f5, 0x1f9]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae PUSH1 0x0
0x1b0 DUP12
0x1b1 SWAP8
0x1b2 POP
0x1b3 PUSH8 0x58d15e176280000
0x1bc DUP9
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 AND
0x1c6 PUSH4 0xd87574e0
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP2
0x1cf PUSH4 0xffffffff
0x1d4 AND
0x1d5 PUSH1 0xe0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da MUL
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x4
0x1df ADD
0x1e0 PUSH1 0x20
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 DUP1
0x1e6 DUP4
0x1e7 SUB
0x1e8 DUP2
0x1e9 PUSH1 0x0
0x1eb DUP8
0x1ec DUP1
0x1ed EXTCODESIZE
0x1ee ISZERO
0x1ef DUP1
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V156 = 0x0
0x1a5: V157 = 0x0
0x1a8: V158 = 0x0
0x1ab: V159 = 0x0
0x1ae: V160 = 0x0
0x1b3: V161 = 0x58d15e176280000
0x1bd: V162 = 0x1
0x1bf: V163 = 0xa0
0x1c1: V164 = 0x2
0x1c3: V165 = EXP 0x2 0xa0
0x1c4: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x1c6: V168 = 0xd87574e0
0x1cb: V169 = 0x40
0x1cd: V170 = M[0x40]
0x1cf: V171 = 0xffffffff
0x1d4: V172 = AND 0xffffffff 0xd87574e0
0x1d5: V173 = 0xe0
0x1d7: V174 = 0x2
0x1d9: V175 = EXP 0x2 0xe0
0x1da: V176 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x1dc: M[V170] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x1dd: V177 = 0x4
0x1df: V178 = ADD 0x4 V170
0x1e0: V179 = 0x20
0x1e2: V180 = 0x40
0x1e4: V181 = M[0x40]
0x1e7: V182 = SUB V178 V181
0x1e9: V183 = 0x0
0x1ed: V184 = EXTCODESIZE V167
0x1ee: V185 = ISZERO V184
0x1f0: V186 = ISZERO V185
0x1f1: V187 = 0x1f9
0x1f4: JUMPI 0x1f9 V186
---
Entry stack: [V13, 0xc5, V66, V69, V71]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, 0x20, V181, V182, V181, 0x0, V167, V185]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, 0x20, V181, V182, V181, 0x0, V167, V185]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1a1]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V188 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, 0x20, V181, V182, V181, 0x0, V167, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, 0x20, V181, V182, V181, 0x0, V167, V185]

================================

Block 0x1f9
[0x1f9:0x203]
---
Predecessors: [0x1a1]
Successors: [0x204, 0x20d]
---
0x1f9 JUMPDEST
0x1fa POP
0x1fb GAS
0x1fc CALL
0x1fd ISZERO
0x1fe DUP1
0x1ff ISZERO
0x200 PUSH2 0x20d
0x203 JUMPI
---
0x1f9: JUMPDEST 
0x1fb: V189 = GAS
0x1fc: V190 = CALL V189 V167 0x0 V181 V182 V181 0x20
0x1fd: V191 = ISZERO V190
0x1ff: V192 = ISZERO V191
0x200: V193 = 0x20d
0x203: JUMPI 0x20d V192
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, 0x20, V181, V182, V181, 0x0, V167, V185]
Stack pops: 7
Stack additions: [V191]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, V191]

================================

Block 0x204
[0x204:0x20c]
---
Predecessors: [0x1f9]
Successors: []
---
0x204 RETURNDATASIZE
0x205 PUSH1 0x0
0x207 DUP1
0x208 RETURNDATACOPY
0x209 RETURNDATASIZE
0x20a PUSH1 0x0
0x20c REVERT
---
0x204: V194 = RETURNDATASIZE
0x205: V195 = 0x0
0x208: RETURNDATACOPY 0x0 0x0 V194
0x209: V196 = RETURNDATASIZE
0x20a: V197 = 0x0
0x20c: REVERT 0x0 V196
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, V191]

================================

Block 0x20d
[0x20d:0x21e]
---
Predecessors: [0x1f9]
Successors: [0x21f, 0x223]
---
0x20d JUMPDEST
0x20e POP
0x20f POP
0x210 POP
0x211 POP
0x212 PUSH1 0x40
0x214 MLOAD
0x215 RETURNDATASIZE
0x216 PUSH1 0x20
0x218 DUP2
0x219 LT
0x21a ISZERO
0x21b PUSH2 0x223
0x21e JUMPI
---
0x20d: JUMPDEST 
0x212: V198 = 0x40
0x214: V199 = M[0x40]
0x215: V200 = RETURNDATASIZE
0x216: V201 = 0x20
0x219: V202 = LT V200 0x20
0x21a: V203 = ISZERO V202
0x21b: V204 = 0x223
0x21e: JUMPI 0x223 V203
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V167, 0xd87574e0, V178, V191]
Stack pops: 4
Stack additions: [V199, V200]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V199, V200]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x20d]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V205 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V199, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V199, V200]

================================

Block 0x223
[0x223:0x22a]
---
Predecessors: [0x20d]
Successors: [0x22b, 0x22f]
---
0x223 JUMPDEST
0x224 POP
0x225 MLOAD
0x226 GT
0x227 PUSH2 0x22f
0x22a JUMPI
---
0x223: JUMPDEST 
0x225: V206 = M[V199]
0x226: V207 = GT V206 0x58d15e176280000
0x227: V208 = 0x22f
0x22a: JUMPI 0x22f V207
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58d15e176280000, V199, V200]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x22b
[0x22b:0x22e]
---
Predecessors: [0x223]
Successors: []
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
---
0x22b: V209 = 0x0
0x22e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x22f
[0x22f:0x268]
---
Predecessors: [0x223]
Successors: [0x269, 0x26d]
---
0x22f JUMPDEST
0x230 DUP8
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 AND
0x23a PUSH4 0x11a09ae7
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP2
0x243 PUSH4 0xffffffff
0x248 AND
0x249 PUSH1 0xe0
0x24b PUSH1 0x2
0x24d EXP
0x24e MUL
0x24f DUP2
0x250 MSTORE
0x251 PUSH1 0x4
0x253 ADD
0x254 PUSH1 0x20
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a DUP4
0x25b SUB
0x25c DUP2
0x25d PUSH1 0x0
0x25f DUP8
0x260 DUP1
0x261 EXTCODESIZE
0x262 ISZERO
0x263 DUP1
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x22f: JUMPDEST 
0x231: V210 = 0x1
0x233: V211 = 0xa0
0x235: V212 = 0x2
0x237: V213 = EXP 0x2 0xa0
0x238: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x23a: V216 = 0x11a09ae7
0x23f: V217 = 0x40
0x241: V218 = M[0x40]
0x243: V219 = 0xffffffff
0x248: V220 = AND 0xffffffff 0x11a09ae7
0x249: V221 = 0xe0
0x24b: V222 = 0x2
0x24d: V223 = EXP 0x2 0xe0
0x24e: V224 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x250: M[V218] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x251: V225 = 0x4
0x253: V226 = ADD 0x4 V218
0x254: V227 = 0x20
0x256: V228 = 0x40
0x258: V229 = M[0x40]
0x25b: V230 = SUB V226 V229
0x25d: V231 = 0x0
0x261: V232 = EXTCODESIZE V215
0x262: V233 = ISZERO V232
0x264: V234 = ISZERO V233
0x265: V235 = 0x26d
0x268: JUMPI 0x26d V234
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V215, 0x11a09ae7, V226, 0x20, V229, V230, V229, 0x0, V215, V233]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, 0x20, V229, V230, V229, 0x0, V215, V233]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x22f]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V236 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, 0x20, V229, V230, V229, 0x0, V215, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, 0x20, V229, V230, V229, 0x0, V215, V233]

================================

Block 0x26d
[0x26d:0x277]
---
Predecessors: [0x22f]
Successors: [0x278, 0x281]
---
0x26d JUMPDEST
0x26e POP
0x26f GAS
0x270 CALL
0x271 ISZERO
0x272 DUP1
0x273 ISZERO
0x274 PUSH2 0x281
0x277 JUMPI
---
0x26d: JUMPDEST 
0x26f: V237 = GAS
0x270: V238 = CALL V237 V215 0x0 V229 V230 V229 0x20
0x271: V239 = ISZERO V238
0x273: V240 = ISZERO V239
0x274: V241 = 0x281
0x277: JUMPI 0x281 V240
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, 0x20, V229, V230, V229, 0x0, V215, V233]
Stack pops: 7
Stack additions: [V239]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, V239]

================================

Block 0x278
[0x278:0x280]
---
Predecessors: [0x26d]
Successors: []
---
0x278 RETURNDATASIZE
0x279 PUSH1 0x0
0x27b DUP1
0x27c RETURNDATACOPY
0x27d RETURNDATASIZE
0x27e PUSH1 0x0
0x280 REVERT
---
0x278: V242 = RETURNDATASIZE
0x279: V243 = 0x0
0x27c: RETURNDATACOPY 0x0 0x0 V242
0x27d: V244 = RETURNDATASIZE
0x27e: V245 = 0x0
0x280: REVERT 0x0 V244
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, V239]

================================

Block 0x281
[0x281:0x292]
---
Predecessors: [0x26d]
Successors: [0x293, 0x297]
---
0x281 JUMPDEST
0x282 POP
0x283 POP
0x284 POP
0x285 POP
0x286 PUSH1 0x40
0x288 MLOAD
0x289 RETURNDATASIZE
0x28a PUSH1 0x20
0x28c DUP2
0x28d LT
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x281: JUMPDEST 
0x286: V246 = 0x40
0x288: V247 = M[0x40]
0x289: V248 = RETURNDATASIZE
0x28a: V249 = 0x20
0x28d: V250 = LT V248 0x20
0x28e: V251 = ISZERO V250
0x28f: V252 = 0x297
0x292: JUMPI 0x297 V251
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V215, 0x11a09ae7, V226, V239]
Stack pops: 4
Stack additions: [V247, V248]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V247, V248]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x281]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V253 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V247, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V247, V248]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x281]
Successors: [0x2a0]
---
0x297 JUMPDEST
0x298 POP
0x299 MLOAD
0x29a SWAP7
0x29b POP
0x29c PUSH1 0x1
0x29e SWAP6
0x29f POP
---
0x297: JUMPDEST 
0x299: V254 = M[V247]
0x29c: V255 = 0x1
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V247, V248]
Stack pops: 9
Stack additions: [V254, 0x1, S6, S5, S4, S3, S2]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2a0
[0x2a0:0x2aa]
---
Predecessors: [0x297, 0x749]
Successors: [0x2ab, 0x754]
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x3
0x2a3 SLOAD
0x2a4 DUP7
0x2a5 LT
0x2a6 ISZERO
0x2a7 PUSH2 0x754
0x2aa JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V256 = 0x3
0x2a3: V257 = S[0x3]
0x2a5: V258 = LT S5 V257
0x2a6: V259 = ISZERO V258
0x2a7: V260 = 0x754
0x2aa: JUMPI 0x754 V259
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x2ab
[0x2ab:0x3a4]
---
Predecessors: [0x2a0]
Successors: [0x3a5]
---
0x2ab PUSH1 0x0
0x2ad DUP7
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0x2
0x2b2 PUSH1 0x20
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x40
0x2b9 DUP1
0x2ba DUP4
0x2bb SHA3
0x2bc SLOAD
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 AND
0x2c6 DUP1
0x2c7 DUP5
0x2c8 MSTORE
0x2c9 PUSH1 0x1
0x2cb DUP4
0x2cc MSTORE
0x2cd SWAP3
0x2ce DUP2
0x2cf SWAP1
0x2d0 SHA3
0x2d1 SLOAD
0x2d2 DUP2
0x2d3 MLOAD
0x2d4 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x2f5 DUP2
0x2f6 DUP6
0x2f7 ADD
0x2f8 MSTORE
0x2f9 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x31a PUSH1 0x21
0x31c DUP3
0x31d ADD
0x31e MSTORE
0x31f PUSH13 0x1000000000000000000000000
0x32d DUP6
0x32e MUL
0x32f PUSH1 0x22
0x331 DUP3
0x332 ADD
0x333 MSTORE
0x334 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x355 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x376 DUP4
0x377 MUL
0x378 AND
0x379 PUSH1 0x36
0x37b DUP3
0x37c ADD
0x37d MSTORE
0x37e DUP3
0x37f MLOAD
0x380 PUSH1 0x17
0x382 DUP2
0x383 DUP4
0x384 SUB
0x385 ADD
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x37
0x38a SWAP1
0x38b SWAP2
0x38c ADD
0x38d SWAP3
0x38e DUP4
0x38f SWAP1
0x390 MSTORE
0x391 DUP1
0x392 MLOAD
0x393 SWAP5
0x394 SWAP9
0x395 POP
0x396 SWAP1
0x397 SWAP7
0x398 POP
0x399 SWAP3
0x39a SWAP1
0x39b SWAP2
0x39c DUP3
0x39d SWAP2
0x39e SWAP1
0x39f DUP5
0x3a0 ADD
0x3a1 SWAP1
0x3a2 DUP1
0x3a3 DUP4
0x3a4 DUP4
---
0x2ab: V261 = 0x0
0x2af: M[0x0] = S5
0x2b0: V262 = 0x2
0x2b2: V263 = 0x20
0x2b6: M[0x20] = 0x2
0x2b7: V264 = 0x40
0x2bb: V265 = SHA3 0x0 0x40
0x2bc: V266 = S[V265]
0x2bd: V267 = 0x1
0x2bf: V268 = 0xa0
0x2c1: V269 = 0x2
0x2c3: V270 = EXP 0x2 0xa0
0x2c4: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x2c8: M[0x0] = V272
0x2c9: V273 = 0x1
0x2cc: M[0x20] = 0x1
0x2d0: V274 = SHA3 0x0 0x40
0x2d1: V275 = S[V274]
0x2d3: V276 = M[0x40]
0x2d4: V277 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x2f7: V278 = ADD 0x20 V276
0x2f8: M[V278] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x2f9: V279 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x31a: V280 = 0x21
0x31d: V281 = ADD V276 0x21
0x31e: M[V281] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x31f: V282 = 0x1000000000000000000000000
0x32e: V283 = MUL V272 0x1000000000000000000000000
0x32f: V284 = 0x22
0x332: V285 = ADD V276 0x22
0x333: M[V285] = V283
0x334: V286 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x355: V287 = 0x100000000000000000000000000000000000000000000000000000000000000
0x377: V288 = MUL V275 0x100000000000000000000000000000000000000000000000000000000000000
0x378: V289 = AND V288 0xff00000000000000000000000000000000000000000000000000000000000000
0x379: V290 = 0x36
0x37c: V291 = ADD V276 0x36
0x37d: M[V291] = V289
0x37f: V292 = M[0x40]
0x380: V293 = 0x17
0x384: V294 = SUB V276 V292
0x385: V295 = ADD V294 0x17
0x387: M[V292] = V295
0x388: V296 = 0x37
0x38c: V297 = ADD V276 0x37
0x390: M[0x40] = V297
0x392: V298 = M[V292]
0x3a0: V299 = ADD V292 0x20
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, V272, V275, S1, S0, V292, V297, V297, V299, V298, V298, V297, V299]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, S4, V272, V275, S1, 0x0, V292, V297, V297, V299, V298, V298, V297, V299]

================================

Block 0x3a5
[0x3a5:0x3ad]
---
Predecessors: [0x2ab, 0x3ae]
Successors: [0x3ae, 0x3c4]
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x20
0x3a8 DUP4
0x3a9 LT
0x3aa PUSH2 0x3c4
0x3ad JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V300 = 0x20
0x3a9: V301 = LT S2 0x20
0x3aa: V302 = 0x3c4
0x3ad: JUMPI 0x3c4 V301
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, S9, 0x0, V292, V297, V297, V299, V298, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, S9, 0x0, V292, V297, V297, V299, V298, S2, S1, S0]

================================

Block 0x3ae
[0x3ae:0x3c3]
---
Predecessors: [0x3a5]
Successors: [0x3a5]
---
0x3ae DUP1
0x3af MLOAD
0x3b0 DUP3
0x3b1 MSTORE
0x3b2 PUSH1 0x1f
0x3b4 NOT
0x3b5 SWAP1
0x3b6 SWAP3
0x3b7 ADD
0x3b8 SWAP2
0x3b9 PUSH1 0x20
0x3bb SWAP2
0x3bc DUP3
0x3bd ADD
0x3be SWAP2
0x3bf ADD
0x3c0 PUSH2 0x3a5
0x3c3 JUMP
---
0x3af: V303 = M[S0]
0x3b1: M[S1] = V303
0x3b2: V304 = 0x1f
0x3b4: V305 = NOT 0x1f
0x3b7: V306 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3b9: V307 = 0x20
0x3bd: V308 = ADD 0x20 S1
0x3bf: V309 = ADD 0x20 S0
0x3c0: V310 = 0x3a5
0x3c3: JUMP 0x3a5
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, S9, 0x0, V292, V297, V297, V299, V298, S2, S1, S0]
Stack pops: 3
Stack additions: [V306, V308, V309]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, S9, 0x0, V292, V297, V297, V299, V298, V306, V308, V309]

================================

Block 0x3c4
[0x3c4:0x433]
---
Predecessors: [0x3a5, 0xd05]
Successors: [0x434]
---
0x3c4 JUMPDEST
0x3c5 MLOAD
0x3c6 DUP2
0x3c7 MLOAD
0x3c8 PUSH1 0x20
0x3ca SWAP4
0x3cb DUP5
0x3cc SUB
0x3cd PUSH2 0x100
0x3d0 EXP
0x3d1 PUSH1 0x0
0x3d3 NOT
0x3d4 ADD
0x3d5 DUP1
0x3d6 NOT
0x3d7 SWAP1
0x3d8 SWAP3
0x3d9 AND
0x3da SWAP2
0x3db AND
0x3dc OR
0x3dd SWAP1
0x3de MSTORE
0x3df PUSH1 0x40
0x3e1 DUP1
0x3e2 MLOAD
0x3e3 SWAP3
0x3e4 SWAP1
0x3e5 SWAP5
0x3e6 ADD
0x3e7 DUP3
0x3e8 SWAP1
0x3e9 SUB
0x3ea DUP3
0x3eb SHA3
0x3ec PUSH1 0x1
0x3ee PUSH1 0xa0
0x3f0 PUSH1 0x2
0x3f2 EXP
0x3f3 SUB
0x3f4 DUP2
0x3f5 AND
0x3f6 PUSH13 0x1000000000000000000000000
0x404 MUL
0x405 DUP4
0x406 DUP4
0x407 ADD
0x408 MSTORE
0x409 DUP5
0x40a MLOAD
0x40b PUSH1 0x14
0x40d DUP2
0x40e DUP6
0x40f SUB
0x410 ADD
0x411 DUP2
0x412 MSTORE
0x413 PUSH1 0x34
0x415 SWAP1
0x416 SWAP4
0x417 ADD
0x418 SWAP5
0x419 DUP6
0x41a SWAP1
0x41b MSTORE
0x41c DUP3
0x41d MLOAD
0x41e SWAP1
0x41f SWAP9
0x420 POP
0x421 NUMBER
0x422 SWAP7
0x423 POP
0x424 TIMESTAMP
0x425 SWAP6
0x426 POP
0x427 SWAP2
0x428 SWAP4
0x429 SWAP3
0x42a POP
0x42b DUP3
0x42c SWAP2
0x42d SWAP1
0x42e DUP5
0x42f ADD
0x430 SWAP1
0x431 DUP1
0x432 DUP4
0x433 DUP4
---
0x3c4: JUMPDEST 
0x3c5: V311 = M[S0]
0x3c7: V312 = M[S1]
0x3c8: V313 = 0x20
0x3cc: V314 = SUB 0x20 S2
0x3cd: V315 = 0x100
0x3d0: V316 = EXP 0x100 V314
0x3d1: V317 = 0x0
0x3d3: V318 = NOT 0x0
0x3d4: V319 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V316
0x3d6: V320 = NOT V319
0x3d9: V321 = AND V311 V320
0x3db: V322 = AND V319 V312
0x3dc: V323 = OR V322 V321
0x3de: M[S1] = V323
0x3df: V324 = 0x40
0x3e2: V325 = M[0x40]
0x3e6: V326 = ADD V297 V298
0x3e9: V327 = SUB V326 V325
0x3eb: V328 = SHA3 V325 V327
0x3ec: V329 = 0x1
0x3ee: V330 = 0xa0
0x3f0: V331 = 0x2
0x3f2: V332 = EXP 0x2 0xa0
0x3f3: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V334 = AND V328 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V335 = 0x1000000000000000000000000
0x404: V336 = MUL 0x1000000000000000000000000 V334
0x407: V337 = ADD 0x20 V325
0x408: M[V337] = V336
0x40a: V338 = M[0x40]
0x40b: V339 = 0x14
0x40f: V340 = SUB V325 V338
0x410: V341 = ADD V340 0x14
0x412: M[V338] = V341
0x413: V342 = 0x34
0x417: V343 = ADD V325 0x34
0x41b: M[0x40] = V343
0x41d: V344 = M[V338]
0x421: V345 = NUMBER
0x424: V346 = TIMESTAMP
0x42f: V347 = ADD V338 0x20
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, S9, 0x0, V292, V297, V297, V299, V298, S2, S1, S0]
Stack pops: 10
Stack additions: [V328, S8, V345, V346, V338, V343, V343, V347, V344, V344, V343, V347]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, V328, 0x0, V345, V346, V338, V343, V343, V347, V344, V344, V343, V347]

================================

Block 0x434
[0x434:0x43c]
---
Predecessors: [0x3c4, 0x43d]
Successors: [0x43d, 0x453]
---
0x434 JUMPDEST
0x435 PUSH1 0x20
0x437 DUP4
0x438 LT
0x439 PUSH2 0x453
0x43c JUMPI
---
0x434: JUMPDEST 
0x435: V348 = 0x20
0x438: V349 = LT S2 0x20
0x439: V350 = 0x453
0x43c: JUMPI 0x453 V349
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, S14, V272, V275, V328, 0x0, V345, V346, V338, V343, V343, V347, V344, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, S14, V272, V275, V328, 0x0, V345, V346, V338, V343, V343, V347, V344, S2, S1, S0]

================================

Block 0x43d
[0x43d:0x452]
---
Predecessors: [0x434]
Successors: [0x434]
---
0x43d DUP1
0x43e MLOAD
0x43f DUP3
0x440 MSTORE
0x441 PUSH1 0x1f
0x443 NOT
0x444 SWAP1
0x445 SWAP3
0x446 ADD
0x447 SWAP2
0x448 PUSH1 0x20
0x44a SWAP2
0x44b DUP3
0x44c ADD
0x44d SWAP2
0x44e ADD
0x44f PUSH2 0x434
0x452 JUMP
---
0x43e: V351 = M[S0]
0x440: M[S1] = V351
0x441: V352 = 0x1f
0x443: V353 = NOT 0x1f
0x446: V354 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x448: V355 = 0x20
0x44c: V356 = ADD 0x20 S1
0x44e: V357 = ADD 0x20 S0
0x44f: V358 = 0x434
0x452: JUMP 0x434
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, S14, V272, V275, V328, 0x0, V345, V346, V338, V343, V343, V347, V344, S2, S1, S0]
Stack pops: 3
Stack additions: [V354, V356, V357]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, S14, V272, V275, V328, 0x0, V345, V346, V338, V343, V343, V347, V344, V354, V356, V357]

================================

Block 0x453
[0x453:0x487]
---
Predecessors: [0x434]
Successors: [0x488, 0x489]
---
0x453 JUMPDEST
0x454 MLOAD
0x455 DUP2
0x456 MLOAD
0x457 PUSH1 0x20
0x459 SWAP4
0x45a SWAP1
0x45b SWAP4
0x45c SUB
0x45d PUSH2 0x100
0x460 EXP
0x461 PUSH1 0x0
0x463 NOT
0x464 ADD
0x465 DUP1
0x466 NOT
0x467 SWAP1
0x468 SWAP2
0x469 AND
0x46a SWAP3
0x46b AND
0x46c SWAP2
0x46d SWAP1
0x46e SWAP2
0x46f OR
0x470 SWAP1
0x471 MSTORE
0x472 PUSH1 0x40
0x474 MLOAD
0x475 SWAP3
0x476 ADD
0x477 DUP3
0x478 SWAP1
0x479 SUB
0x47a SWAP1
0x47b SWAP2
0x47c SHA3
0x47d SWAP3
0x47e POP
0x47f POP
0x480 POP
0x481 DUP2
0x482 ISZERO
0x483 ISZERO
0x484 PUSH2 0x489
0x487 JUMPI
---
0x453: JUMPDEST 
0x454: V359 = M[S0]
0x456: V360 = M[S1]
0x457: V361 = 0x20
0x45c: V362 = SUB 0x20 S2
0x45d: V363 = 0x100
0x460: V364 = EXP 0x100 V362
0x461: V365 = 0x0
0x463: V366 = NOT 0x0
0x464: V367 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V364
0x466: V368 = NOT V367
0x469: V369 = AND V359 V368
0x46b: V370 = AND V360 V367
0x46f: V371 = OR V370 V369
0x471: M[S1] = V371
0x472: V372 = 0x40
0x474: V373 = M[0x40]
0x476: V374 = ADD V343 V344
0x479: V375 = SUB V374 V373
0x47c: V376 = SHA3 V373 V375
0x482: V377 = ISZERO V346
0x483: V378 = ISZERO V377
0x484: V379 = 0x489
0x487: JUMPI 0x489 V378
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, S14, V272, V275, V328, 0x0, V345, V346, V338, V343, V343, V347, V344, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V376]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, S14, V272, V275, V328, 0x0, V345, V346, V376]

================================

Block 0x488
[0x488:0x488]
---
Predecessors: [0x453]
Successors: []
---
0x488 INVALID
---
0x488: INVALID 
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S8, S7, V272, V275, V328, 0x0, V345, V346, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S8, S7, V272, V275, V328, 0x0, V345, V346, V376]

================================

Block 0x489
[0x489:0x4dc]
---
Predecessors: [0x453]
Successors: [0x4dd]
---
0x489 JUMPDEST
0x48a DIV
0x48b GASLIMIT
0x48c TIMESTAMP
0x48d COINBASE
0x48e PUSH1 0x40
0x490 MLOAD
0x491 PUSH1 0x20
0x493 ADD
0x494 DUP1
0x495 DUP3
0x496 PUSH1 0x1
0x498 PUSH1 0xa0
0x49a PUSH1 0x2
0x49c EXP
0x49d SUB
0x49e AND
0x49f PUSH1 0x1
0x4a1 PUSH1 0xa0
0x4a3 PUSH1 0x2
0x4a5 EXP
0x4a6 SUB
0x4a7 AND
0x4a8 PUSH13 0x1000000000000000000000000
0x4b6 MUL
0x4b7 DUP2
0x4b8 MSTORE
0x4b9 PUSH1 0x14
0x4bb ADD
0x4bc SWAP2
0x4bd POP
0x4be POP
0x4bf PUSH1 0x40
0x4c1 MLOAD
0x4c2 PUSH1 0x20
0x4c4 DUP2
0x4c5 DUP4
0x4c6 SUB
0x4c7 SUB
0x4c8 DUP2
0x4c9 MSTORE
0x4ca SWAP1
0x4cb PUSH1 0x40
0x4cd MSTORE
0x4ce PUSH1 0x40
0x4d0 MLOAD
0x4d1 DUP1
0x4d2 DUP3
0x4d3 DUP1
0x4d4 MLOAD
0x4d5 SWAP1
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 SWAP1
0x4da DUP1
0x4db DUP4
0x4dc DUP4
---
0x489: JUMPDEST 
0x48a: V380 = DIV V376 V346
0x48b: V381 = GASLIMIT
0x48c: V382 = TIMESTAMP
0x48d: V383 = COINBASE
0x48e: V384 = 0x40
0x490: V385 = M[0x40]
0x491: V386 = 0x20
0x493: V387 = ADD 0x20 V385
0x496: V388 = 0x1
0x498: V389 = 0xa0
0x49a: V390 = 0x2
0x49c: V391 = EXP 0x2 0xa0
0x49d: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49e: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x49f: V394 = 0x1
0x4a1: V395 = 0xa0
0x4a3: V396 = 0x2
0x4a5: V397 = EXP 0x2 0xa0
0x4a6: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a7: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x4a8: V400 = 0x1000000000000000000000000
0x4b6: V401 = MUL 0x1000000000000000000000000 V399
0x4b8: M[V387] = V401
0x4b9: V402 = 0x14
0x4bb: V403 = ADD 0x14 V387
0x4bf: V404 = 0x40
0x4c1: V405 = M[0x40]
0x4c2: V406 = 0x20
0x4c6: V407 = SUB V403 V405
0x4c7: V408 = SUB V407 0x20
0x4c9: M[V405] = V408
0x4cb: V409 = 0x40
0x4cd: M[0x40] = V403
0x4ce: V410 = 0x40
0x4d0: V411 = M[0x40]
0x4d4: V412 = M[V405]
0x4d6: V413 = 0x20
0x4d8: V414 = ADD 0x20 V405
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S8, S7, V272, V275, V328, 0x0, V345, V346, V376]
Stack pops: 2
Stack additions: [V380, V381, V382, V405, V411, V411, V414, V412, V412, V411, V414]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S8, S7, V272, V275, V328, 0x0, V345, V380, V381, V382, V405, V411, V411, V414, V412, V412, V411, V414]

================================

Block 0x4dd
[0x4dd:0x4e5]
---
Predecessors: [0x489, 0x4e6]
Successors: [0x4e6, 0x4fc]
---
0x4dd JUMPDEST
0x4de PUSH1 0x20
0x4e0 DUP4
0x4e1 LT
0x4e2 PUSH2 0x4fc
0x4e5 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V415 = 0x20
0x4e1: V416 = LT S2 0x20
0x4e2: V417 = 0x4fc
0x4e5: JUMPI 0x4fc V416
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S17, S16, V272, V275, V328, 0x0, V345, V380, V381, V382, V405, V411, V411, V414, V412, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S17, S16, V272, V275, V328, 0x0, V345, V380, V381, V382, V405, V411, V411, V414, V412, S2, S1, S0]

================================

Block 0x4e6
[0x4e6:0x4fb]
---
Predecessors: [0x4dd]
Successors: [0x4dd]
---
0x4e6 DUP1
0x4e7 MLOAD
0x4e8 DUP3
0x4e9 MSTORE
0x4ea PUSH1 0x1f
0x4ec NOT
0x4ed SWAP1
0x4ee SWAP3
0x4ef ADD
0x4f0 SWAP2
0x4f1 PUSH1 0x20
0x4f3 SWAP2
0x4f4 DUP3
0x4f5 ADD
0x4f6 SWAP2
0x4f7 ADD
0x4f8 PUSH2 0x4dd
0x4fb JUMP
---
0x4e7: V418 = M[S0]
0x4e9: M[S1] = V418
0x4ea: V419 = 0x1f
0x4ec: V420 = NOT 0x1f
0x4ef: V421 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4f1: V422 = 0x20
0x4f5: V423 = ADD 0x20 S1
0x4f7: V424 = ADD 0x20 S0
0x4f8: V425 = 0x4dd
0x4fb: JUMP 0x4dd
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S17, S16, V272, V275, V328, 0x0, V345, V380, V381, V382, V405, V411, V411, V414, V412, S2, S1, S0]
Stack pops: 3
Stack additions: [V421, V423, V424]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S17, S16, V272, V275, V328, 0x0, V345, V380, V381, V382, V405, V411, V411, V414, V412, V421, V423, V424]

================================

Block 0x4fc
[0x4fc:0x530]
---
Predecessors: [0x4dd]
Successors: [0x531, 0x532]
---
0x4fc JUMPDEST
0x4fd MLOAD
0x4fe DUP2
0x4ff MLOAD
0x500 PUSH1 0x20
0x502 SWAP4
0x503 SWAP1
0x504 SWAP4
0x505 SUB
0x506 PUSH2 0x100
0x509 EXP
0x50a PUSH1 0x0
0x50c NOT
0x50d ADD
0x50e DUP1
0x50f NOT
0x510 SWAP1
0x511 SWAP2
0x512 AND
0x513 SWAP3
0x514 AND
0x515 SWAP2
0x516 SWAP1
0x517 SWAP2
0x518 OR
0x519 SWAP1
0x51a MSTORE
0x51b PUSH1 0x40
0x51d MLOAD
0x51e SWAP3
0x51f ADD
0x520 DUP3
0x521 SWAP1
0x522 SUB
0x523 SWAP1
0x524 SWAP2
0x525 SHA3
0x526 SWAP3
0x527 POP
0x528 POP
0x529 POP
0x52a DUP2
0x52b ISZERO
0x52c ISZERO
0x52d PUSH2 0x532
0x530 JUMPI
---
0x4fc: JUMPDEST 
0x4fd: V426 = M[S0]
0x4ff: V427 = M[S1]
0x500: V428 = 0x20
0x505: V429 = SUB 0x20 S2
0x506: V430 = 0x100
0x509: V431 = EXP 0x100 V429
0x50a: V432 = 0x0
0x50c: V433 = NOT 0x0
0x50d: V434 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V431
0x50f: V435 = NOT V434
0x512: V436 = AND V426 V435
0x514: V437 = AND V427 V434
0x518: V438 = OR V437 V436
0x51a: M[S1] = V438
0x51b: V439 = 0x40
0x51d: V440 = M[0x40]
0x51f: V441 = ADD V411 V412
0x522: V442 = SUB V441 V440
0x525: V443 = SHA3 V440 V442
0x52b: V444 = ISZERO V382
0x52c: V445 = ISZERO V444
0x52d: V446 = 0x532
0x530: JUMPI 0x532 V445
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S17, S16, V272, V275, V328, 0x0, V345, V380, V381, V382, V405, V411, V411, V414, V412, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V443]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S17, S16, V272, V275, V328, 0x0, V345, V380, V381, V382, V443]

================================

Block 0x531
[0x531:0x531]
---
Predecessors: [0x4fc]
Successors: []
---
0x531 INVALID
---
0x531: INVALID 
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S10, S9, V272, V275, V328, 0x0, V345, V380, V381, V382, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S10, S9, V272, V275, V328, 0x0, V345, V380, V381, V382, V443]

================================

Block 0x532
[0x532:0x568]
---
Predecessors: [0x4fc]
Successors: [0x569]
---
0x532 JUMPDEST
0x533 DIV
0x534 DIFFICULTY
0x535 TIMESTAMP
0x536 ADD
0x537 ADD
0x538 ADD
0x539 ADD
0x53a ADD
0x53b PUSH1 0x40
0x53d MLOAD
0x53e PUSH1 0x20
0x540 ADD
0x541 DUP1
0x542 DUP3
0x543 DUP2
0x544 MSTORE
0x545 PUSH1 0x20
0x547 ADD
0x548 SWAP2
0x549 POP
0x54a POP
0x54b PUSH1 0x40
0x54d MLOAD
0x54e PUSH1 0x20
0x550 DUP2
0x551 DUP4
0x552 SUB
0x553 SUB
0x554 DUP2
0x555 MSTORE
0x556 SWAP1
0x557 PUSH1 0x40
0x559 MSTORE
0x55a PUSH1 0x40
0x55c MLOAD
0x55d DUP1
0x55e DUP3
0x55f DUP1
0x560 MLOAD
0x561 SWAP1
0x562 PUSH1 0x20
0x564 ADD
0x565 SWAP1
0x566 DUP1
0x567 DUP4
0x568 DUP4
---
0x532: JUMPDEST 
0x533: V447 = DIV V443 V382
0x534: V448 = DIFFICULTY
0x535: V449 = TIMESTAMP
0x536: V450 = ADD V449 V448
0x537: V451 = ADD V450 V447
0x538: V452 = ADD V451 V381
0x539: V453 = ADD V452 V380
0x53a: V454 = ADD V453 V345
0x53b: V455 = 0x40
0x53d: V456 = M[0x40]
0x53e: V457 = 0x20
0x540: V458 = ADD 0x20 V456
0x544: M[V458] = V454
0x545: V459 = 0x20
0x547: V460 = ADD 0x20 V458
0x54b: V461 = 0x40
0x54d: V462 = M[0x40]
0x54e: V463 = 0x20
0x552: V464 = SUB V460 V462
0x553: V465 = SUB V464 0x20
0x555: M[V462] = V465
0x557: V466 = 0x40
0x559: M[0x40] = V460
0x55a: V467 = 0x40
0x55c: V468 = M[0x40]
0x560: V469 = M[V462]
0x562: V470 = 0x20
0x564: V471 = ADD 0x20 V462
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S10, S9, V272, V275, V328, 0x0, V345, V380, V381, V382, V443]
Stack pops: 5
Stack additions: [V462, V468, V468, V471, V469, V469, V468, V471]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S10, S9, V272, V275, V328, 0x0, V462, V468, V468, V471, V469, V469, V468, V471]

================================

Block 0x569
[0x569:0x571]
---
Predecessors: [0x532, 0x572]
Successors: [0x572, 0x588]
---
0x569 JUMPDEST
0x56a PUSH1 0x20
0x56c DUP4
0x56d LT
0x56e PUSH2 0x588
0x571 JUMPI
---
0x569: JUMPDEST 
0x56a: V472 = 0x20
0x56d: V473 = LT S2 0x20
0x56e: V474 = 0x588
0x571: JUMPI 0x588 V473
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, V328, 0x0, V462, V468, V468, V471, V469, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, V328, 0x0, V462, V468, V468, V471, V469, S2, S1, S0]

================================

Block 0x572
[0x572:0x587]
---
Predecessors: [0x569]
Successors: [0x569]
---
0x572 DUP1
0x573 MLOAD
0x574 DUP3
0x575 MSTORE
0x576 PUSH1 0x1f
0x578 NOT
0x579 SWAP1
0x57a SWAP3
0x57b ADD
0x57c SWAP2
0x57d PUSH1 0x20
0x57f SWAP2
0x580 DUP3
0x581 ADD
0x582 SWAP2
0x583 ADD
0x584 PUSH2 0x569
0x587 JUMP
---
0x573: V475 = M[S0]
0x575: M[S1] = V475
0x576: V476 = 0x1f
0x578: V477 = NOT 0x1f
0x57b: V478 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x57d: V479 = 0x20
0x581: V480 = ADD 0x20 S1
0x583: V481 = ADD 0x20 S0
0x584: V482 = 0x569
0x587: JUMP 0x569
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, V328, 0x0, V462, V468, V468, V471, V469, S2, S1, S0]
Stack pops: 3
Stack additions: [V478, V480, V481]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, V328, 0x0, V462, V468, V468, V471, V469, V478, V480, V481]

================================

Block 0x588
[0x588:0x5cb]
---
Predecessors: [0x569]
Successors: [0x5cc, 0x749]
---
0x588 JUMPDEST
0x589 MLOAD
0x58a DUP2
0x58b MLOAD
0x58c PUSH1 0x20
0x58e SWAP4
0x58f SWAP1
0x590 SWAP4
0x591 SUB
0x592 PUSH2 0x100
0x595 EXP
0x596 PUSH1 0x0
0x598 NOT
0x599 ADD
0x59a DUP1
0x59b NOT
0x59c SWAP1
0x59d SWAP2
0x59e AND
0x59f SWAP3
0x5a0 AND
0x5a1 SWAP2
0x5a2 SWAP1
0x5a3 SWAP2
0x5a4 OR
0x5a5 SWAP1
0x5a6 MSTORE
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa SWAP3
0x5ab ADD
0x5ac DUP3
0x5ad SWAP1
0x5ae SUB
0x5af SWAP1
0x5b0 SWAP2
0x5b1 SHA3
0x5b2 SWAP8
0x5b3 POP
0x5b4 DUP10
0x5b5 SWAP3
0x5b6 POP
0x5b7 PUSH2 0x3e8
0x5ba SWAP2
0x5bb POP
0x5bc DUP8
0x5bd SWAP1
0x5be POP
0x5bf DIV
0x5c0 PUSH2 0x3e8
0x5c3 MUL
0x5c4 DUP7
0x5c5 SUB
0x5c6 LT
0x5c7 ISZERO
0x5c8 PUSH2 0x749
0x5cb JUMPI
---
0x588: JUMPDEST 
0x589: V483 = M[S0]
0x58b: V484 = M[S1]
0x58c: V485 = 0x20
0x591: V486 = SUB 0x20 S2
0x592: V487 = 0x100
0x595: V488 = EXP 0x100 V486
0x596: V489 = 0x0
0x598: V490 = NOT 0x0
0x599: V491 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V488
0x59b: V492 = NOT V491
0x59e: V493 = AND V483 V492
0x5a0: V494 = AND V484 V491
0x5a4: V495 = OR V494 V493
0x5a6: M[S1] = V495
0x5a7: V496 = 0x40
0x5a9: V497 = M[0x40]
0x5ab: V498 = ADD V468 V469
0x5ae: V499 = SUB V498 V497
0x5b1: V500 = SHA3 V497 V499
0x5b7: V501 = 0x3e8
0x5bf: V502 = DIV V500 0x3e8
0x5c0: V503 = 0x3e8
0x5c3: V504 = MUL 0x3e8 V502
0x5c5: V505 = SUB V500 V504
0x5c6: V506 = LT V505 V254
0x5c7: V507 = ISZERO V506
0x5c8: V508 = 0x749
0x5cb: JUMPI 0x749 V507
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, S12, V272, V275, V328, 0x0, V462, V468, V468, V471, V469, S2, S1, S0]
Stack pops: 15
Stack additions: [S14, S13, V500, S11, S10, S9, S8]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S13, V500, V272, V275, V328, 0x0]

================================

Block 0x5cc
[0x5cc:0x5fd]
---
Predecessors: [0x588]
Successors: [0x5fe, 0x607]
---
0x5cc POP
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 DUP4
0x5d1 SWAP1
0x5d2 PUSH1 0x1
0x5d4 PUSH1 0xa0
0x5d6 PUSH1 0x2
0x5d8 EXP
0x5d9 SUB
0x5da DUP3
0x5db AND
0x5dc SWAP1
0x5dd PUSH1 0x0
0x5df SWAP1
0x5e0 PUSH8 0x16345785d8a0000
0x5e9 SWAP1
0x5ea DUP3
0x5eb DUP2
0x5ec DUP2
0x5ed DUP2
0x5ee DUP6
0x5ef DUP9
0x5f0 DUP4
0x5f1 CALL
0x5f2 SWAP4
0x5f3 POP
0x5f4 POP
0x5f5 POP
0x5f6 POP
0x5f7 ISZERO
0x5f8 DUP1
0x5f9 ISZERO
0x5fa PUSH2 0x607
0x5fd JUMPI
---
0x5cd: V509 = 0x40
0x5cf: V510 = M[0x40]
0x5d2: V511 = 0x1
0x5d4: V512 = 0xa0
0x5d6: V513 = 0x2
0x5d8: V514 = EXP 0x2 0xa0
0x5d9: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5db: V516 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V517 = 0x0
0x5e0: V518 = 0x16345785d8a0000
0x5f1: V519 = CALL 0x0 V516 0x16345785d8a0000 V510 0x0 V510 0x0
0x5f7: V520 = ISZERO V519
0x5f9: V521 = ISZERO V520
0x5fa: V522 = 0x607
0x5fd: JUMPI 0x607 V521
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, V500, V272, V275, V328, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V520]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, V500, V272, V275, V328, V272, V520]

================================

Block 0x5fe
[0x5fe:0x606]
---
Predecessors: [0x5cc]
Successors: []
---
0x5fe RETURNDATASIZE
0x5ff PUSH1 0x0
0x601 DUP1
0x602 RETURNDATACOPY
0x603 RETURNDATASIZE
0x604 PUSH1 0x0
0x606 REVERT
---
0x5fe: V523 = RETURNDATASIZE
0x5ff: V524 = 0x0
0x602: RETURNDATACOPY 0x0 0x0 V523
0x603: V525 = RETURNDATASIZE
0x604: V526 = 0x0
0x606: REVERT 0x0 V525
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S6, V500, V272, V275, V328, V272, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S6, V500, V272, V275, V328, V272, V520]

================================

Block 0x607
[0x607:0x67e]
---
Predecessors: [0x5cc]
Successors: [0x67f, 0x683]
---
0x607 JUMPDEST
0x608 POP
0x609 PUSH1 0x40
0x60b DUP1
0x60c MLOAD
0x60d PUSH32 0xfec16d6c00000000000000000000000000000000000000000000000000000000
0x62e DUP2
0x62f MSTORE
0x630 PUSH1 0x4
0x632 DUP2
0x633 ADD
0x634 DUP6
0x635 SWAP1
0x636 MSTORE
0x637 PUSH1 0x1
0x639 PUSH1 0xa0
0x63b PUSH1 0x2
0x63d EXP
0x63e SUB
0x63f DUP15
0x640 DUP2
0x641 AND
0x642 PUSH1 0x24
0x644 DUP4
0x645 ADD
0x646 MSTORE
0x647 DUP14
0x648 DUP2
0x649 AND
0x64a PUSH1 0x44
0x64c DUP4
0x64d ADD
0x64e MSTORE
0x64f PUSH1 0x64
0x651 DUP3
0x652 ADD
0x653 DUP14
0x654 SWAP1
0x655 MSTORE
0x656 SWAP2
0x657 MLOAD
0x658 SWAP2
0x659 DUP4
0x65a AND
0x65b SWAP2
0x65c PUSH4 0xfec16d6c
0x661 SWAP2
0x662 PUSH1 0x84
0x664 DUP1
0x665 DUP3
0x666 ADD
0x667 SWAP3
0x668 PUSH1 0x20
0x66a SWAP3
0x66b SWAP1
0x66c SWAP2
0x66d SWAP1
0x66e DUP3
0x66f SWAP1
0x670 SUB
0x671 ADD
0x672 DUP2
0x673 PUSH1 0x0
0x675 DUP8
0x676 DUP1
0x677 EXTCODESIZE
0x678 ISZERO
0x679 DUP1
0x67a ISZERO
0x67b PUSH2 0x683
0x67e JUMPI
---
0x607: JUMPDEST 
0x609: V527 = 0x40
0x60c: V528 = M[0x40]
0x60d: V529 = 0xfec16d6c00000000000000000000000000000000000000000000000000000000
0x62f: M[V528] = 0xfec16d6c00000000000000000000000000000000000000000000000000000000
0x630: V530 = 0x4
0x633: V531 = ADD V528 0x4
0x636: M[V531] = V275
0x637: V532 = 0x1
0x639: V533 = 0xa0
0x63b: V534 = 0x2
0x63d: V535 = EXP 0x2 0xa0
0x63e: V536 = SUB 0x10000000000000000000000000000000000000000 0x1
0x641: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x642: V538 = 0x24
0x645: V539 = ADD V528 0x24
0x646: M[V539] = V537
0x649: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x64a: V541 = 0x44
0x64d: V542 = ADD V528 0x44
0x64e: M[V542] = V540
0x64f: V543 = 0x64
0x652: V544 = ADD V528 0x64
0x655: M[V544] = V71
0x657: V545 = M[0x40]
0x65a: V546 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V547 = 0xfec16d6c
0x662: V548 = 0x84
0x666: V549 = ADD V528 0x84
0x668: V550 = 0x20
0x670: V551 = SUB V528 V545
0x671: V552 = ADD V551 0x84
0x673: V553 = 0x0
0x677: V554 = EXTCODESIZE V546
0x678: V555 = ISZERO V554
0x67a: V556 = ISZERO V555
0x67b: V557 = 0x683
0x67e: JUMPI 0x683 V556
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S6, V500, V272, V275, V328, V272, V520]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V546, 0xfec16d6c, V549, 0x20, V545, V552, V545, 0x0, V546, V555]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S6, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, 0x20, V545, V552, V545, 0x0, V546, V555]

================================

Block 0x67f
[0x67f:0x682]
---
Predecessors: [0x607]
Successors: []
---
0x67f PUSH1 0x0
0x681 DUP1
0x682 REVERT
---
0x67f: V558 = 0x0
0x682: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, 0x20, V545, V552, V545, 0x0, V546, V555]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, 0x20, V545, V552, V545, 0x0, V546, V555]

================================

Block 0x683
[0x683:0x68d]
---
Predecessors: [0x607]
Successors: [0x68e, 0x697]
---
0x683 JUMPDEST
0x684 POP
0x685 GAS
0x686 CALL
0x687 ISZERO
0x688 DUP1
0x689 ISZERO
0x68a PUSH2 0x697
0x68d JUMPI
---
0x683: JUMPDEST 
0x685: V559 = GAS
0x686: V560 = CALL V559 V546 0x0 V545 V552 V545 0x20
0x687: V561 = ISZERO V560
0x689: V562 = ISZERO V561
0x68a: V563 = 0x697
0x68d: JUMPI 0x697 V562
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, 0x20, V545, V552, V545, 0x0, V546, V555]
Stack pops: 7
Stack additions: [V561]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, V561]

================================

Block 0x68e
[0x68e:0x696]
---
Predecessors: [0x683]
Successors: []
---
0x68e RETURNDATASIZE
0x68f PUSH1 0x0
0x691 DUP1
0x692 RETURNDATACOPY
0x693 RETURNDATASIZE
0x694 PUSH1 0x0
0x696 REVERT
---
0x68e: V564 = RETURNDATASIZE
0x68f: V565 = 0x0
0x692: RETURNDATACOPY 0x0 0x0 V564
0x693: V566 = RETURNDATASIZE
0x694: V567 = 0x0
0x696: REVERT 0x0 V566
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S9, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S9, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, V561]

================================

Block 0x697
[0x697:0x6a8]
---
Predecessors: [0x683]
Successors: [0x6a9, 0x6ad]
---
0x697 JUMPDEST
0x698 POP
0x699 POP
0x69a POP
0x69b POP
0x69c PUSH1 0x40
0x69e MLOAD
0x69f RETURNDATASIZE
0x6a0 PUSH1 0x20
0x6a2 DUP2
0x6a3 LT
0x6a4 ISZERO
0x6a5 PUSH2 0x6ad
0x6a8 JUMPI
---
0x697: JUMPDEST 
0x69c: V568 = 0x40
0x69e: V569 = M[0x40]
0x69f: V570 = RETURNDATASIZE
0x6a0: V571 = 0x20
0x6a3: V572 = LT V570 0x20
0x6a4: V573 = ISZERO V572
0x6a5: V574 = 0x6ad
0x6a8: JUMPI 0x6ad V573
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S9, V500, V272, V275, V328, V272, V546, 0xfec16d6c, V549, V561]
Stack pops: 4
Stack additions: [V569, V570]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S9, V500, V272, V275, V328, V272, V569, V570]

================================

Block 0x6a9
[0x6a9:0x6ac]
---
Predecessors: [0x697]
Successors: []
---
0x6a9 PUSH1 0x0
0x6ab DUP1
0x6ac REVERT
---
0x6a9: V575 = 0x0
0x6ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S7, V500, V272, V275, V328, V272, V569, V570]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S7, V500, V272, V275, V328, V272, V569, V570]

================================

Block 0x6ad
[0x6ad:0x704]
---
Predecessors: [0x697]
Successors: [0x705, 0x709]
---
0x6ad JUMPDEST
0x6ae POP
0x6af POP
0x6b0 PUSH1 0x40
0x6b2 DUP1
0x6b3 MLOAD
0x6b4 PUSH32 0xeffc73a400000000000000000000000000000000000000000000000000000000
0x6d5 DUP2
0x6d6 MSTORE
0x6d7 SWAP1
0x6d8 MLOAD
0x6d9 PUSH1 0x1
0x6db PUSH1 0xa0
0x6dd PUSH1 0x2
0x6df EXP
0x6e0 SUB
0x6e1 DUP4
0x6e2 AND
0x6e3 SWAP2
0x6e4 PUSH4 0xeffc73a4
0x6e9 SWAP2
0x6ea PUSH1 0x4
0x6ec DUP1
0x6ed DUP4
0x6ee ADD
0x6ef SWAP3
0x6f0 PUSH1 0x0
0x6f2 SWAP3
0x6f3 SWAP2
0x6f4 SWAP1
0x6f5 DUP3
0x6f6 SWAP1
0x6f7 SUB
0x6f8 ADD
0x6f9 DUP2
0x6fa DUP4
0x6fb DUP8
0x6fc DUP1
0x6fd EXTCODESIZE
0x6fe ISZERO
0x6ff DUP1
0x700 ISZERO
0x701 PUSH2 0x709
0x704 JUMPI
---
0x6ad: JUMPDEST 
0x6b0: V576 = 0x40
0x6b3: V577 = M[0x40]
0x6b4: V578 = 0xeffc73a400000000000000000000000000000000000000000000000000000000
0x6d6: M[V577] = 0xeffc73a400000000000000000000000000000000000000000000000000000000
0x6d8: V579 = M[0x40]
0x6d9: V580 = 0x1
0x6db: V581 = 0xa0
0x6dd: V582 = 0x2
0x6df: V583 = EXP 0x2 0xa0
0x6e0: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e2: V585 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x6e4: V586 = 0xeffc73a4
0x6ea: V587 = 0x4
0x6ee: V588 = ADD V577 0x4
0x6f0: V589 = 0x0
0x6f7: V590 = SUB V577 V579
0x6f8: V591 = ADD V590 0x4
0x6fd: V592 = EXTCODESIZE V585
0x6fe: V593 = ISZERO V592
0x700: V594 = ISZERO V593
0x701: V595 = 0x709
0x704: JUMPI 0x709 V594
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S7, V500, V272, V275, V328, V272, V569, V570]
Stack pops: 3
Stack additions: [S2, V585, 0xeffc73a4, V588, 0x0, V579, V591, V579, 0x0, V585, V593]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S7, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, 0x0, V579, V591, V579, 0x0, V585, V593]

================================

Block 0x705
[0x705:0x708]
---
Predecessors: [0x6ad]
Successors: []
---
0x705 PUSH1 0x0
0x707 DUP1
0x708 REVERT
---
0x705: V596 = 0x0
0x708: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, 0x0, V579, V591, V579, 0x0, V585, V593]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, 0x0, V579, V591, V579, 0x0, V585, V593]

================================

Block 0x709
[0x709:0x713]
---
Predecessors: [0x6ad]
Successors: [0x714, 0x71d]
---
0x709 JUMPDEST
0x70a POP
0x70b GAS
0x70c CALL
0x70d ISZERO
0x70e DUP1
0x70f ISZERO
0x710 PUSH2 0x71d
0x713 JUMPI
---
0x709: JUMPDEST 
0x70b: V597 = GAS
0x70c: V598 = CALL V597 V585 0x0 V579 V591 V579 0x0
0x70d: V599 = ISZERO V598
0x70f: V600 = ISZERO V599
0x710: V601 = 0x71d
0x713: JUMPI 0x71d V600
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, 0x0, V579, V591, V579, 0x0, V585, V593]
Stack pops: 7
Stack additions: [V599]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S15, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, V599]

================================

Block 0x714
[0x714:0x71c]
---
Predecessors: [0x709]
Successors: []
---
0x714 RETURNDATASIZE
0x715 PUSH1 0x0
0x717 DUP1
0x718 RETURNDATACOPY
0x719 RETURNDATASIZE
0x71a PUSH1 0x0
0x71c REVERT
---
0x714: V602 = RETURNDATASIZE
0x715: V603 = 0x0
0x718: RETURNDATACOPY 0x0 0x0 V602
0x719: V604 = RETURNDATASIZE
0x71a: V605 = 0x0
0x71c: REVERT 0x0 V604
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S9, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, V599]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S9, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, V599]

================================

Block 0x71d
[0x71d:0x748]
---
Predecessors: [0x709]
Successors: [0x759]
---
0x71d JUMPDEST
0x71e POP
0x71f POP
0x720 POP
0x721 POP
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a DUP5
0x72b AND
0x72c PUSH1 0x0
0x72e SWAP1
0x72f DUP2
0x730 MSTORE
0x731 PUSH1 0x1
0x733 PUSH1 0x20
0x735 DUP2
0x736 SWAP1
0x737 MSTORE
0x738 PUSH1 0x40
0x73a SWAP1
0x73b SWAP2
0x73c SHA3
0x73d DUP1
0x73e SLOAD
0x73f DUP3
0x740 ADD
0x741 SWAP1
0x742 SSTORE
0x743 SWAP9
0x744 POP
0x745 PUSH2 0x759
0x748 JUMP
---
0x71d: JUMPDEST 
0x722: V606 = 0x1
0x724: V607 = 0xa0
0x726: V608 = 0x2
0x728: V609 = EXP 0x2 0xa0
0x729: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72b: V611 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x72c: V612 = 0x0
0x730: M[0x0] = V611
0x731: V613 = 0x1
0x733: V614 = 0x20
0x737: M[0x20] = 0x1
0x738: V615 = 0x40
0x73c: V616 = SHA3 0x0 0x40
0x73e: V617 = S[V616]
0x740: V618 = ADD 0x1 V617
0x742: S[V616] = V618
0x745: V619 = 0x759
0x748: JUMP 0x759
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S9, V500, V272, V275, V328, V272, V585, 0xeffc73a4, V588, V599]
Stack pops: 13
Stack additions: [0x1, S11, S10, S9, S8, S7, S6, S5, S4]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x1, V66, V254, S9, V500, V272, V275, V328, V272]

================================

Block 0x749
[0x749:0x753]
---
Predecessors: [0x588]
Successors: [0x2a0]
---
0x749 JUMPDEST
0x74a PUSH1 0x1
0x74c SWAP1
0x74d SWAP6
0x74e ADD
0x74f SWAP5
0x750 PUSH2 0x2a0
0x753 JUMP
---
0x749: JUMPDEST 
0x74a: V620 = 0x1
0x74e: V621 = ADD S5 0x1
0x750: V622 = 0x2a0
0x753: JUMP 0x2a0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, V500, V272, V275, V328, 0x0]
Stack pops: 6
Stack additions: [V621, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, V621, V500, V272, V275, V328, 0x0]

================================

Block 0x754
[0x754:0x758]
---
Predecessors: [0x2a0]
Successors: [0x759]
---
0x754 JUMPDEST
0x755 PUSH1 0x0
0x757 SWAP9
0x758 POP
---
0x754: JUMPDEST 
0x755: V623 = 0x0
---
Entry stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, S4, S3, S2, S1, 0x0]
Stack pops: 9
Stack additions: [0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xc5, V66, V69, V71, 0x0, V66, V254, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x759
[0x759:0x767]
---
Predecessors: [0x71d, 0x754]
Successors: [0xc5]
---
0x759 JUMPDEST
0x75a POP
0x75b POP
0x75c POP
0x75d POP
0x75e POP
0x75f POP
0x760 POP
0x761 POP
0x762 SWAP4
0x763 SWAP3
0x764 POP
0x765 POP
0x766 POP
0x767 JUMP
---
0x759: JUMPDEST 
0x767: JUMP 0xc5
---
Entry stack: [V13, 0xc5, V66, V69, V71, {0x0, 0x1}, V66, V254, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: [S8]
Exit stack: [V13, {0x0, 0x1}]

================================

Block 0x768
[0x768:0x76d]
---
Predecessors: [0xe5]
Successors: [0x96]
---
0x768 JUMPDEST
0x769 PUSH1 0x3
0x76b SLOAD
0x76c DUP2
0x76d JUMP
---
0x768: JUMPDEST 
0x769: V624 = 0x3
0x76b: V625 = S[0x3]
0x76d: JUMP 0x96
---
Entry stack: [V13, 0x96]
Stack pops: 1
Stack additions: [S0, V625]
Exit stack: [V13, 0x96, V625]

================================

Block 0x76e
[0x76e:0x788]
---
Predecessors: [0xfa]
Successors: [0x106]
---
0x76e JUMPDEST
0x76f PUSH1 0x2
0x771 PUSH1 0x20
0x773 MSTORE
0x774 PUSH1 0x0
0x776 SWAP1
0x777 DUP2
0x778 MSTORE
0x779 PUSH1 0x40
0x77b SWAP1
0x77c SHA3
0x77d SLOAD
0x77e PUSH1 0x1
0x780 PUSH1 0xa0
0x782 PUSH1 0x2
0x784 EXP
0x785 SUB
0x786 AND
0x787 DUP2
0x788 JUMP
---
0x76e: JUMPDEST 
0x76f: V626 = 0x2
0x771: V627 = 0x20
0x773: M[0x20] = 0x2
0x774: V628 = 0x0
0x778: M[0x0] = V93
0x779: V629 = 0x40
0x77c: V630 = SHA3 0x0 0x40
0x77d: V631 = S[V630]
0x77e: V632 = 0x1
0x780: V633 = 0xa0
0x782: V634 = 0x2
0x784: V635 = EXP 0x2 0xa0
0x785: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x786: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x788: JUMP 0x106
---
Entry stack: [V13, 0x106, V93]
Stack pops: 2
Stack additions: [S1, V637]
Exit stack: [V13, 0x106, V637]

================================

Block 0x789
[0x789:0x79e]
---
Predecessors: [0x12e]
Successors: [0x79f, 0x7a3]
---
0x789 JUMPDEST
0x78a PUSH1 0x0
0x78c DUP1
0x78d SLOAD
0x78e DUP2
0x78f SWAP1
0x790 PUSH1 0x1
0x792 PUSH1 0xa0
0x794 PUSH1 0x2
0x796 EXP
0x797 SUB
0x798 AND
0x799 CALLER
0x79a EQ
0x79b PUSH2 0x7a3
0x79e JUMPI
---
0x789: JUMPDEST 
0x78a: V638 = 0x0
0x78d: V639 = S[0x0]
0x790: V640 = 0x1
0x792: V641 = 0xa0
0x794: V642 = 0x2
0x796: V643 = EXP 0x2 0xa0
0x797: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x798: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x799: V646 = CALLER
0x79a: V647 = EQ V646 V645
0x79b: V648 = 0x7a3
0x79e: JUMPI 0x7a3 V647
---
Entry stack: [V13, 0x5e, V113]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x5e, V113, 0x0, 0x0]

================================

Block 0x79f
[0x79f:0x7a2]
---
Predecessors: [0x789]
Successors: []
---
0x79f PUSH1 0x0
0x7a1 DUP1
0x7a2 REVERT
---
0x79f: V649 = 0x0
0x7a2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V113, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V113, 0x0, 0x0]

================================

Block 0x7a3
[0x7a3:0x7aa]
---
Predecessors: [0x789]
Successors: [0x7ab]
---
0x7a3 JUMPDEST
0x7a4 PUSH1 0x3
0x7a6 SLOAD
0x7a7 DUP4
0x7a8 ADD
0x7a9 SWAP2
0x7aa POP
---
0x7a3: JUMPDEST 
0x7a4: V650 = 0x3
0x7a6: V651 = S[0x3]
0x7a8: V652 = ADD V113 V651
---
Entry stack: [V13, 0x5e, V113, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V652, S0]
Exit stack: [V13, 0x5e, V113, V652, 0x0]

================================

Block 0x7ab
[0x7ab:0x7b5]
---
Predecessors: [0x7a3, 0x900]
Successors: [0x7b6, 0x959]
---
0x7ab JUMPDEST
0x7ac DUP2
0x7ad PUSH1 0x3
0x7af SLOAD
0x7b0 LT
0x7b1 ISZERO
0x7b2 PUSH2 0x959
0x7b5 JUMPI
---
0x7ab: JUMPDEST 
0x7ad: V653 = 0x3
0x7af: V654 = S[0x3]
0x7b0: V655 = LT V654 V652
0x7b1: V656 = ISZERO V655
0x7b2: V657 = 0x959
0x7b5: JUMPI 0x959 V656
---
Entry stack: [V13, 0x5e, V113, V652, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x5e, V113, V652, S0]

================================

Block 0x7b6
[0x7b6:0x88c]
---
Predecessors: [0x7ab]
Successors: [0x88d]
---
0x7b6 PUSH1 0x3
0x7b8 SLOAD
0x7b9 PUSH1 0x40
0x7bb DUP1
0x7bc MLOAD
0x7bd PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x7de PUSH1 0x20
0x7e0 DUP1
0x7e1 DUP4
0x7e2 ADD
0x7e3 SWAP2
0x7e4 SWAP1
0x7e5 SWAP2
0x7e6 MSTORE
0x7e7 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x808 PUSH1 0x21
0x80a DUP4
0x80b ADD
0x80c MSTORE
0x80d ADDRESS
0x80e PUSH13 0x1000000000000000000000000
0x81c MUL
0x81d PUSH1 0x22
0x81f DUP4
0x820 ADD
0x821 MSTORE
0x822 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x843 SWAP1
0x844 SWAP4
0x845 MUL
0x846 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x867 AND
0x868 PUSH1 0x36
0x86a DUP3
0x86b ADD
0x86c MSTORE
0x86d DUP2
0x86e MLOAD
0x86f DUP1
0x870 DUP3
0x871 SUB
0x872 PUSH1 0x17
0x874 ADD
0x875 DUP2
0x876 MSTORE
0x877 PUSH1 0x37
0x879 SWAP1
0x87a SWAP2
0x87b ADD
0x87c SWAP2
0x87d DUP3
0x87e SWAP1
0x87f MSTORE
0x880 DUP1
0x881 MLOAD
0x882 SWAP1
0x883 SWAP3
0x884 DUP3
0x885 SWAP2
0x886 SWAP1
0x887 DUP5
0x888 ADD
0x889 SWAP1
0x88a DUP1
0x88b DUP4
0x88c DUP4
---
0x7b6: V658 = 0x3
0x7b8: V659 = S[0x3]
0x7b9: V660 = 0x40
0x7bc: V661 = M[0x40]
0x7bd: V662 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x7de: V663 = 0x20
0x7e2: V664 = ADD V661 0x20
0x7e6: M[V664] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x7e7: V665 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x808: V666 = 0x21
0x80b: V667 = ADD V661 0x21
0x80c: M[V667] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x80d: V668 = ADDRESS
0x80e: V669 = 0x1000000000000000000000000
0x81c: V670 = MUL 0x1000000000000000000000000 V668
0x81d: V671 = 0x22
0x820: V672 = ADD V661 0x22
0x821: M[V672] = V670
0x822: V673 = 0x100000000000000000000000000000000000000000000000000000000000000
0x845: V674 = MUL V659 0x100000000000000000000000000000000000000000000000000000000000000
0x846: V675 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x867: V676 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V674
0x868: V677 = 0x36
0x86b: V678 = ADD V661 0x36
0x86c: M[V678] = V676
0x86e: V679 = M[0x40]
0x871: V680 = SUB V661 V679
0x872: V681 = 0x17
0x874: V682 = ADD 0x17 V680
0x876: M[V679] = V682
0x877: V683 = 0x37
0x87b: V684 = ADD V661 0x37
0x87f: M[0x40] = V684
0x881: V685 = M[V679]
0x888: V686 = ADD V679 0x20
---
Entry stack: [V13, 0x5e, V113, V652, S0]
Stack pops: 0
Stack additions: [V679, V684, V684, V686, V685, V685, V684, V686]
Exit stack: [V13, 0x5e, V113, V652, S0, V679, V684, V684, V686, V685, V685, V684, V686]

================================

Block 0x88d
[0x88d:0x895]
---
Predecessors: [0x7b6, 0x896]
Successors: [0x896, 0x8ac]
---
0x88d JUMPDEST
0x88e PUSH1 0x20
0x890 DUP4
0x891 LT
0x892 PUSH2 0x8ac
0x895 JUMPI
---
0x88d: JUMPDEST 
0x88e: V687 = 0x20
0x891: V688 = LT S2 0x20
0x892: V689 = 0x8ac
0x895: JUMPI 0x8ac V688
---
Entry stack: [V13, 0x5e, V113, V652, S8, V679, V684, V684, V686, V685, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x5e, V113, V652, S8, V679, V684, V684, V686, V685, S2, S1, S0]

================================

Block 0x896
[0x896:0x8ab]
---
Predecessors: [0x88d]
Successors: [0x88d]
---
0x896 DUP1
0x897 MLOAD
0x898 DUP3
0x899 MSTORE
0x89a PUSH1 0x1f
0x89c NOT
0x89d SWAP1
0x89e SWAP3
0x89f ADD
0x8a0 SWAP2
0x8a1 PUSH1 0x20
0x8a3 SWAP2
0x8a4 DUP3
0x8a5 ADD
0x8a6 SWAP2
0x8a7 ADD
0x8a8 PUSH2 0x88d
0x8ab JUMP
---
0x897: V690 = M[S0]
0x899: M[S1] = V690
0x89a: V691 = 0x1f
0x89c: V692 = NOT 0x1f
0x89f: V693 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x8a1: V694 = 0x20
0x8a5: V695 = ADD 0x20 S1
0x8a7: V696 = ADD 0x20 S0
0x8a8: V697 = 0x88d
0x8ab: JUMP 0x88d
---
Entry stack: [V13, 0x5e, V113, V652, S8, V679, V684, V684, V686, V685, S2, S1, S0]
Stack pops: 3
Stack additions: [V693, V695, V696]
Exit stack: [V13, 0x5e, V113, V652, S8, V679, V684, V684, V686, V685, V693, V695, V696]

================================

Block 0x8ac
[0x8ac:0x8e3]
---
Predecessors: [0x88d]
Successors: [0x95e]
---
0x8ac JUMPDEST
0x8ad MLOAD
0x8ae DUP2
0x8af MLOAD
0x8b0 PUSH1 0x20
0x8b2 SWAP4
0x8b3 SWAP1
0x8b4 SWAP4
0x8b5 SUB
0x8b6 PUSH2 0x100
0x8b9 EXP
0x8ba PUSH1 0x0
0x8bc NOT
0x8bd ADD
0x8be DUP1
0x8bf NOT
0x8c0 SWAP1
0x8c1 SWAP2
0x8c2 AND
0x8c3 SWAP3
0x8c4 AND
0x8c5 SWAP2
0x8c6 SWAP1
0x8c7 SWAP2
0x8c8 OR
0x8c9 SWAP1
0x8ca MSTORE
0x8cb PUSH1 0x40
0x8cd MLOAD
0x8ce SWAP3
0x8cf ADD
0x8d0 DUP3
0x8d1 SWAP1
0x8d2 SUB
0x8d3 SWAP1
0x8d4 SWAP2
0x8d5 SHA3
0x8d6 SWAP4
0x8d7 POP
0x8d8 PUSH2 0x8e4
0x8db SWAP3
0x8dc POP
0x8dd PUSH2 0x95e
0x8e0 SWAP2
0x8e1 POP
0x8e2 POP
0x8e3 JUMP
---
0x8ac: JUMPDEST 
0x8ad: V698 = M[S0]
0x8af: V699 = M[S1]
0x8b0: V700 = 0x20
0x8b5: V701 = SUB 0x20 S2
0x8b6: V702 = 0x100
0x8b9: V703 = EXP 0x100 V701
0x8ba: V704 = 0x0
0x8bc: V705 = NOT 0x0
0x8bd: V706 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V703
0x8bf: V707 = NOT V706
0x8c2: V708 = AND V698 V707
0x8c4: V709 = AND V699 V706
0x8c8: V710 = OR V709 V708
0x8ca: M[S1] = V710
0x8cb: V711 = 0x40
0x8cd: V712 = M[0x40]
0x8cf: V713 = ADD V684 V685
0x8d2: V714 = SUB V713 V712
0x8d5: V715 = SHA3 V712 V714
0x8d8: V716 = 0x8e4
0x8dd: V717 = 0x95e
0x8e3: JUMP 0x95e
---
Entry stack: [V13, 0x5e, V113, V652, S8, V679, V684, V684, V686, V685, S2, S1, S0]
Stack pops: 9
Stack additions: [V715, 0x8e4]
Exit stack: [V13, 0x5e, V113, V652, V715, 0x8e4]

================================

Block 0x8e4
[0x8e4:0x8f6]
---
Predecessors: [0x95e]
Successors: [0x8f7, 0x900]
---
0x8e4 JUMPDEST
0x8e5 PUSH1 0x40
0x8e7 MLOAD
0x8e8 DUP1
0x8e9 SWAP2
0x8ea SUB
0x8eb SWAP1
0x8ec PUSH1 0x0
0x8ee CREATE
0x8ef DUP1
0x8f0 ISZERO
0x8f1 DUP1
0x8f2 ISZERO
0x8f3 PUSH2 0x900
0x8f6 JUMPI
---
0x8e4: JUMPDEST 
0x8e5: V718 = 0x40
0x8e7: V719 = M[0x40]
0x8ea: V720 = SUB V757 V719
0x8ec: V721 = 0x0
0x8ee: V722 = CREATE 0x0 V719 V720
0x8f0: V723 = ISZERO V722
0x8f2: V724 = ISZERO V723
0x8f3: V725 = 0x900
0x8f6: JUMPI 0x900 V724
---
Entry stack: [V13, 0x5e, V113, V652, V715, V757]
Stack pops: 1
Stack additions: [V722, V723]
Exit stack: [V13, 0x5e, V113, V652, V715, V722, V723]

================================

Block 0x8f7
[0x8f7:0x8ff]
---
Predecessors: [0x8e4]
Successors: []
---
0x8f7 RETURNDATASIZE
0x8f8 PUSH1 0x0
0x8fa DUP1
0x8fb RETURNDATACOPY
0x8fc RETURNDATASIZE
0x8fd PUSH1 0x0
0x8ff REVERT
---
0x8f7: V726 = RETURNDATASIZE
0x8f8: V727 = 0x0
0x8fb: RETURNDATACOPY 0x0 0x0 V726
0x8fc: V728 = RETURNDATASIZE
0x8fd: V729 = 0x0
0x8ff: REVERT 0x0 V728
---
Entry stack: [V13, 0x5e, V113, V652, V715, V722, V723]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V113, V652, V715, V722, V723]

================================

Block 0x900
[0x900:0x958]
---
Predecessors: [0x8e4]
Successors: [0x7ab]
---
0x900 JUMPDEST
0x901 POP
0x902 POP
0x903 PUSH1 0x1
0x905 PUSH1 0xa0
0x907 PUSH1 0x2
0x909 EXP
0x90a SUB
0x90b DUP2
0x90c AND
0x90d PUSH1 0x0
0x90f DUP2
0x910 DUP2
0x911 MSTORE
0x912 PUSH1 0x1
0x914 PUSH1 0x20
0x916 DUP2
0x917 DUP2
0x918 MSTORE
0x919 PUSH1 0x40
0x91b DUP1
0x91c DUP5
0x91d SHA3
0x91e DUP4
0x91f SWAP1
0x920 SSTORE
0x921 PUSH1 0x3
0x923 DUP1
0x924 SLOAD
0x925 DUP6
0x926 MSTORE
0x927 PUSH1 0x2
0x929 SWAP1
0x92a SWAP3
0x92b MSTORE
0x92c SWAP1
0x92d SWAP3
0x92e SHA3
0x92f DUP1
0x930 SLOAD
0x931 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x946 NOT
0x947 AND
0x948 SWAP1
0x949 SWAP4
0x94a OR
0x94b SWAP1
0x94c SWAP3
0x94d SSTORE
0x94e DUP1
0x94f SLOAD
0x950 SWAP1
0x951 SWAP2
0x952 ADD
0x953 SWAP1
0x954 SSTORE
0x955 PUSH2 0x7ab
0x958 JUMP
---
0x900: JUMPDEST 
0x903: V730 = 0x1
0x905: V731 = 0xa0
0x907: V732 = 0x2
0x909: V733 = EXP 0x2 0xa0
0x90a: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90c: V735 = AND V715 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V736 = 0x0
0x911: M[0x0] = V735
0x912: V737 = 0x1
0x914: V738 = 0x20
0x918: M[0x20] = 0x1
0x919: V739 = 0x40
0x91d: V740 = SHA3 0x0 0x40
0x920: S[V740] = 0x1
0x921: V741 = 0x3
0x924: V742 = S[0x3]
0x926: M[0x0] = V742
0x927: V743 = 0x2
0x92b: M[0x20] = 0x2
0x92e: V744 = SHA3 0x0 0x40
0x930: V745 = S[V744]
0x931: V746 = 0xffffffffffffffffffffffffffffffffffffffff
0x946: V747 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x947: V748 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V745
0x94a: V749 = OR V735 V748
0x94d: S[V744] = V749
0x94f: V750 = S[0x3]
0x952: V751 = ADD 0x1 V750
0x954: S[0x3] = V751
0x955: V752 = 0x7ab
0x958: JUMP 0x7ab
---
Entry stack: [V13, 0x5e, V113, V652, V715, V722, V723]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V13, 0x5e, V113, V652, V715]

================================

Block 0x959
[0x959:0x95d]
---
Predecessors: [0x7ab]
Successors: [0x5e]
---
0x959 JUMPDEST
0x95a POP
0x95b POP
0x95c POP
0x95d JUMP
---
0x959: JUMPDEST 
0x95d: JUMP 0x5e
---
Entry stack: [V13, 0x5e, V113, V652, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x95e
[0x95e:0x96d]
---
Predecessors: [0x8ac]
Successors: [0x8e4]
---
0x95e JUMPDEST
0x95f PUSH1 0x40
0x961 MLOAD
0x962 PUSH2 0x5be
0x965 DUP1
0x966 PUSH2 0x96f
0x969 DUP4
0x96a CODECOPY
0x96b ADD
0x96c SWAP1
0x96d JUMP
---
0x95e: JUMPDEST 
0x95f: V753 = 0x40
0x961: V754 = M[0x40]
0x962: V755 = 0x5be
0x966: V756 = 0x96f
0x96a: CODECOPY V754 0x96f 0x5be
0x96b: V757 = ADD 0x5be V754
0x96d: JUMP 0x8e4
---
Entry stack: [V13, 0x5e, V113, V652, V715, 0x8e4]
Stack pops: 1
Stack additions: [V757]
Exit stack: [V13, 0x5e, V113, V652, V715, V757]

================================

Block 0x96e
[0x96e:0x97a]
---
Predecessors: []
Successors: [0x97b]
---
0x96e STOP
0x96f PUSH1 0x80
0x971 PUSH1 0x40
0x973 MSTORE
0x974 CALLVALUE
0x975 DUP1
0x976 ISZERO
0x977 PUSH2 0x10
0x97a JUMPI
---
0x96e: STOP 
0x96f: V758 = 0x80
0x971: V759 = 0x40
0x973: M[0x40] = 0x80
0x974: V760 = CALLVALUE
0x976: V761 = ISZERO V760
0x977: V762 = 0x10
0x97a: THROWI V761
---
Entry stack: []
Stack pops: 0
Stack additions: [V760]
Exit stack: []

================================

Block 0x97b
[0x97b:0x9ad]
---
Predecessors: [0x96e]
Successors: [0x9ae]
---
0x97b PUSH1 0x0
0x97d DUP1
0x97e REVERT
0x97f JUMPDEST
0x980 POP
0x981 PUSH1 0x0
0x983 DUP1
0x984 SLOAD
0x985 PUSH1 0x1
0x987 PUSH1 0xa0
0x989 PUSH1 0x2
0x98b EXP
0x98c SUB
0x98d NOT
0x98e AND
0x98f CALLER
0x990 OR
0x991 SWAP1
0x992 SSTORE
0x993 PUSH2 0x58c
0x996 DUP1
0x997 PUSH2 0x32
0x99a PUSH1 0x0
0x99c CODECOPY
0x99d PUSH1 0x0
0x99f RETURN
0x9a0 STOP
0x9a1 PUSH1 0x80
0x9a3 PUSH1 0x40
0x9a5 MSTORE
0x9a6 PUSH1 0x4
0x9a8 CALLDATASIZE
0x9a9 LT
0x9aa PUSH2 0x61
0x9ad JUMPI
---
0x97b: V763 = 0x0
0x97e: REVERT 0x0 0x0
0x97f: JUMPDEST 
0x981: V764 = 0x0
0x984: V765 = S[0x0]
0x985: V766 = 0x1
0x987: V767 = 0xa0
0x989: V768 = 0x2
0x98b: V769 = EXP 0x2 0xa0
0x98c: V770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98d: V771 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x98e: V772 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V765
0x98f: V773 = CALLER
0x990: V774 = OR V773 V772
0x992: S[0x0] = V774
0x993: V775 = 0x58c
0x997: V776 = 0x32
0x99a: V777 = 0x0
0x99c: CODECOPY 0x0 0x32 0x58c
0x99d: V778 = 0x0
0x99f: RETURN 0x0 0x58c
0x9a0: STOP 
0x9a1: V779 = 0x80
0x9a3: V780 = 0x40
0x9a5: M[0x40] = 0x80
0x9a6: V781 = 0x4
0x9a8: V782 = CALLDATASIZE
0x9a9: V783 = LT V782 0x4
0x9aa: V784 = 0x61
0x9ad: THROWI V783
---
Entry stack: [V760]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9ae
[0x9ae:0x9e0]
---
Predecessors: [0x97b]
Successors: [0x9e1]
---
0x9ae PUSH4 0xffffffff
0x9b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9d1 PUSH1 0x0
0x9d3 CALLDATALOAD
0x9d4 DIV
0x9d5 AND
0x9d6 PUSH4 0xa6622798
0x9db DUP2
0x9dc EQ
0x9dd PUSH2 0x63
0x9e0 JUMPI
---
0x9ae: V785 = 0xffffffff
0x9b3: V786 = 0x100000000000000000000000000000000000000000000000000000000
0x9d1: V787 = 0x0
0x9d3: V788 = CALLDATALOAD 0x0
0x9d4: V789 = DIV V788 0x100000000000000000000000000000000000000000000000000000000
0x9d5: V790 = AND V789 0xffffffff
0x9d6: V791 = 0xa6622798
0x9dc: V792 = EQ V790 0xa6622798
0x9dd: V793 = 0x63
0x9e0: THROWI V792
---
Entry stack: []
Stack pops: 0
Stack additions: [V790]
Exit stack: [V790]

================================

Block 0x9e1
[0x9e1:0x9eb]
---
Predecessors: [0x9ae]
Successors: [0x9ec]
---
0x9e1 DUP1
0x9e2 PUSH4 0xb69ef8a8
0x9e7 EQ
0x9e8 PUSH2 0x78
0x9eb JUMPI
---
0x9e2: V794 = 0xb69ef8a8
0x9e7: V795 = EQ 0xb69ef8a8 V790
0x9e8: V796 = 0x78
0x9eb: THROWI V795
---
Entry stack: [V790]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V790]

================================

Block 0x9ec
[0x9ec:0x9f6]
---
Predecessors: [0x9e1]
Successors: [0x9f7]
---
0x9ec DUP1
0x9ed PUSH4 0xeffc73a4
0x9f2 EQ
0x9f3 PUSH2 0x9f
0x9f6 JUMPI
---
0x9ed: V797 = 0xeffc73a4
0x9f2: V798 = EQ 0xeffc73a4 V790
0x9f3: V799 = 0x9f
0x9f6: THROWI V798
---
Entry stack: [V790]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V790]

================================

Block 0x9f7
[0x9f7:0xa01]
---
Predecessors: [0x9ec]
Successors: [0xa02]
---
0x9f7 DUP1
0x9f8 PUSH4 0xfec16d6c
0x9fd EQ
0x9fe PUSH2 0xb4
0xa01 JUMPI
---
0x9f8: V800 = 0xfec16d6c
0x9fd: V801 = EQ 0xfec16d6c V790
0x9fe: V802 = 0xb4
0xa01: THROWI V801
---
Entry stack: [V790]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V790]

================================

Block 0xa02
[0xa02:0xa0b]
---
Predecessors: [0x9f7]
Successors: [0xa0c]
---
0xa02 JUMPDEST
0xa03 STOP
0xa04 JUMPDEST
0xa05 CALLVALUE
0xa06 DUP1
0xa07 ISZERO
0xa08 PUSH2 0x6f
0xa0b JUMPI
---
0xa02: JUMPDEST 
0xa03: STOP 
0xa04: JUMPDEST 
0xa05: V803 = CALLVALUE
0xa07: V804 = ISZERO V803
0xa08: V805 = 0x6f
0xa0b: THROWI V804
---
Entry stack: [V790]
Stack pops: 0
Stack additions: [V803]
Exit stack: []

================================

Block 0xa0c
[0xa0c:0xa20]
---
Predecessors: [0xa02]
Successors: [0xa21]
---
0xa0c PUSH1 0x0
0xa0e DUP1
0xa0f REVERT
0xa10 JUMPDEST
0xa11 POP
0xa12 PUSH2 0x61
0xa15 PUSH2 0x102
0xa18 JUMP
0xa19 JUMPDEST
0xa1a CALLVALUE
0xa1b DUP1
0xa1c ISZERO
0xa1d PUSH2 0x84
0xa20 JUMPI
---
0xa0c: V806 = 0x0
0xa0f: REVERT 0x0 0x0
0xa10: JUMPDEST 
0xa12: V807 = 0x61
0xa15: V808 = 0x102
0xa18: THROW 
0xa19: JUMPDEST 
0xa1a: V809 = CALLVALUE
0xa1c: V810 = ISZERO V809
0xa1d: V811 = 0x84
0xa20: THROWI V810
---
Entry stack: [V803]
Stack pops: 0
Stack additions: [0x61, V809]
Exit stack: []

================================

Block 0xa21
[0xa21:0xa47]
---
Predecessors: [0xa0c]
Successors: [0xa48]
---
0xa21 PUSH1 0x0
0xa23 DUP1
0xa24 REVERT
0xa25 JUMPDEST
0xa26 POP
0xa27 PUSH2 0x8d
0xa2a PUSH2 0x16b
0xa2d JUMP
0xa2e JUMPDEST
0xa2f PUSH1 0x40
0xa31 DUP1
0xa32 MLOAD
0xa33 SWAP2
0xa34 DUP3
0xa35 MSTORE
0xa36 MLOAD
0xa37 SWAP1
0xa38 DUP2
0xa39 SWAP1
0xa3a SUB
0xa3b PUSH1 0x20
0xa3d ADD
0xa3e SWAP1
0xa3f RETURN
0xa40 JUMPDEST
0xa41 CALLVALUE
0xa42 DUP1
0xa43 ISZERO
0xa44 PUSH2 0xab
0xa47 JUMPI
---
0xa21: V812 = 0x0
0xa24: REVERT 0x0 0x0
0xa25: JUMPDEST 
0xa27: V813 = 0x8d
0xa2a: V814 = 0x16b
0xa2d: THROW 
0xa2e: JUMPDEST 
0xa2f: V815 = 0x40
0xa32: V816 = M[0x40]
0xa35: M[V816] = S0
0xa36: V817 = M[0x40]
0xa3a: V818 = SUB V816 V817
0xa3b: V819 = 0x20
0xa3d: V820 = ADD 0x20 V818
0xa3f: RETURN V817 V820
0xa40: JUMPDEST 
0xa41: V821 = CALLVALUE
0xa43: V822 = ISZERO V821
0xa44: V823 = 0xab
0xa47: THROWI V822
---
Entry stack: [V809]
Stack pops: 0
Stack additions: [0x8d, V821]
Exit stack: []

================================

Block 0xa48
[0xa48:0xa5c]
---
Predecessors: [0xa21]
Successors: [0xa5d]
---
0xa48 PUSH1 0x0
0xa4a DUP1
0xa4b REVERT
0xa4c JUMPDEST
0xa4d POP
0xa4e PUSH2 0x61
0xa51 PUSH2 0x171
0xa54 JUMP
0xa55 JUMPDEST
0xa56 CALLVALUE
0xa57 DUP1
0xa58 ISZERO
0xa59 PUSH2 0xc0
0xa5c JUMPI
---
0xa48: V824 = 0x0
0xa4b: REVERT 0x0 0x0
0xa4c: JUMPDEST 
0xa4e: V825 = 0x61
0xa51: V826 = 0x171
0xa54: THROW 
0xa55: JUMPDEST 
0xa56: V827 = CALLVALUE
0xa58: V828 = ISZERO V827
0xa59: V829 = 0xc0
0xa5c: THROWI V828
---
Entry stack: [V821]
Stack pops: 0
Stack additions: [0x61, V827]
Exit stack: []

================================

Block 0xa5d
[0xa5d:0xabe]
---
Predecessors: [0xa48]
Successors: [0x122, 0xabf]
---
0xa5d PUSH1 0x0
0xa5f DUP1
0xa60 REVERT
0xa61 JUMPDEST
0xa62 POP
0xa63 PUSH2 0xee
0xa66 PUSH1 0x4
0xa68 CALLDATALOAD
0xa69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7e PUSH1 0x24
0xa80 CALLDATALOAD
0xa81 DUP2
0xa82 AND
0xa83 SWAP1
0xa84 PUSH1 0x44
0xa86 CALLDATALOAD
0xa87 AND
0xa88 PUSH1 0x64
0xa8a CALLDATALOAD
0xa8b PUSH2 0x1e3
0xa8e JUMP
0xa8f JUMPDEST
0xa90 PUSH1 0x40
0xa92 DUP1
0xa93 MLOAD
0xa94 SWAP2
0xa95 ISZERO
0xa96 ISZERO
0xa97 DUP3
0xa98 MSTORE
0xa99 MLOAD
0xa9a SWAP1
0xa9b DUP2
0xa9c SWAP1
0xa9d SUB
0xa9e PUSH1 0x20
0xaa0 ADD
0xaa1 SWAP1
0xaa2 RETURN
0xaa3 JUMPDEST
0xaa4 CALLER
0xaa5 PUSH20 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0xaba EQ
0xabb PUSH2 0x122
0xabe JUMPI
---
0xa5d: V830 = 0x0
0xa60: REVERT 0x0 0x0
0xa61: JUMPDEST 
0xa63: V831 = 0xee
0xa66: V832 = 0x4
0xa68: V833 = CALLDATALOAD 0x4
0xa69: V834 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7e: V835 = 0x24
0xa80: V836 = CALLDATALOAD 0x24
0xa82: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff V836
0xa84: V838 = 0x44
0xa86: V839 = CALLDATALOAD 0x44
0xa87: V840 = AND V839 0xffffffffffffffffffffffffffffffffffffffff
0xa88: V841 = 0x64
0xa8a: V842 = CALLDATALOAD 0x64
0xa8b: V843 = 0x1e3
0xa8e: THROW 
0xa8f: JUMPDEST 
0xa90: V844 = 0x40
0xa93: V845 = M[0x40]
0xa95: V846 = ISZERO S0
0xa96: V847 = ISZERO V846
0xa98: M[V845] = V847
0xa99: V848 = M[0x40]
0xa9d: V849 = SUB V845 V848
0xa9e: V850 = 0x20
0xaa0: V851 = ADD 0x20 V849
0xaa2: RETURN V848 V851
0xaa3: JUMPDEST 
0xaa4: V852 = CALLER
0xaa5: V853 = 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0xaba: V854 = EQ 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87 V852
0xabb: V855 = 0x122
0xabe: JUMPI 0x122 V854
---
Entry stack: [V827]
Stack pops: 0
Stack additions: [V842, V840, V837, V833, 0xee]
Exit stack: []

================================

Block 0xabf
[0xabf:0xaff]
---
Predecessors: [0xa5d]
Successors: [0xb00]
---
0xabf PUSH1 0x0
0xac1 DUP1
0xac2 REVERT
0xac3 JUMPDEST
0xac4 ADDRESS
0xac5 BALANCE
0xac6 PUSH1 0x1
0xac8 DUP2
0xac9 SWAP1
0xaca SSTORE
0xacb PUSH1 0x40
0xacd MLOAD
0xace PUSH20 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0xae3 SWAP2
0xae4 DUP1
0xae5 ISZERO
0xae6 PUSH2 0x8fc
0xae9 MUL
0xaea SWAP2
0xaeb PUSH1 0x0
0xaed DUP2
0xaee DUP2
0xaef DUP2
0xaf0 DUP6
0xaf1 DUP9
0xaf2 DUP9
0xaf3 CALL
0xaf4 SWAP4
0xaf5 POP
0xaf6 POP
0xaf7 POP
0xaf8 POP
0xaf9 ISZERO
0xafa DUP1
0xafb ISZERO
0xafc PUSH2 0x168
0xaff JUMPI
---
0xabf: V856 = 0x0
0xac2: REVERT 0x0 0x0
0xac3: JUMPDEST 
0xac4: V857 = ADDRESS
0xac5: V858 = BALANCE V857
0xac6: V859 = 0x1
0xaca: S[0x1] = V858
0xacb: V860 = 0x40
0xacd: V861 = M[0x40]
0xace: V862 = 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0xae5: V863 = ISZERO V858
0xae6: V864 = 0x8fc
0xae9: V865 = MUL 0x8fc V863
0xaeb: V866 = 0x0
0xaf3: V867 = CALL V865 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87 V858 V861 0x0 V861 0x0
0xaf9: V868 = ISZERO V867
0xafb: V869 = ISZERO V868
0xafc: V870 = 0x168
0xaff: THROWI V869
---
Entry stack: []
Stack pops: 0
Stack additions: [V868]
Exit stack: []

================================

Block 0xb00
[0xb00:0xb31]
---
Predecessors: [0xabf]
Successors: [0xb32]
---
0xb00 RETURNDATASIZE
0xb01 PUSH1 0x0
0xb03 DUP1
0xb04 RETURNDATACOPY
0xb05 RETURNDATASIZE
0xb06 PUSH1 0x0
0xb08 REVERT
0xb09 JUMPDEST
0xb0a POP
0xb0b JUMP
0xb0c JUMPDEST
0xb0d PUSH1 0x1
0xb0f SLOAD
0xb10 DUP2
0xb11 JUMP
0xb12 JUMPDEST
0xb13 PUSH1 0x0
0xb15 SLOAD
0xb16 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2b AND
0xb2c CALLER
0xb2d EQ
0xb2e PUSH2 0x195
0xb31 JUMPI
---
0xb00: V871 = RETURNDATASIZE
0xb01: V872 = 0x0
0xb04: RETURNDATACOPY 0x0 0x0 V871
0xb05: V873 = RETURNDATASIZE
0xb06: V874 = 0x0
0xb08: REVERT 0x0 V873
0xb09: JUMPDEST 
0xb0b: JUMP S1
0xb0c: JUMPDEST 
0xb0d: V875 = 0x1
0xb0f: V876 = S[0x1]
0xb11: JUMP S0
0xb12: JUMPDEST 
0xb13: V877 = 0x0
0xb15: V878 = S[0x0]
0xb16: V879 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2b: V880 = AND 0xffffffffffffffffffffffffffffffffffffffff V878
0xb2c: V881 = CALLER
0xb2d: V882 = EQ V881 V880
0xb2e: V883 = 0x195
0xb31: THROWI V882
---
Entry stack: [V868]
Stack pops: 0
Stack additions: [V876, S0]
Exit stack: []

================================

Block 0xb32
[0xb32:0xb7a]
---
Predecessors: [0xb00]
Successors: [0xb7b]
---
0xb32 PUSH1 0x0
0xb34 DUP1
0xb35 REVERT
0xb36 JUMPDEST
0xb37 ADDRESS
0xb38 BALANCE
0xb39 PUSH1 0x1
0xb3b DUP2
0xb3c SWAP1
0xb3d SSTORE
0xb3e PUSH1 0x0
0xb40 DUP1
0xb41 SLOAD
0xb42 PUSH1 0x40
0xb44 MLOAD
0xb45 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5a SWAP1
0xb5b SWAP2
0xb5c AND
0xb5d SWAP3
0xb5e PUSH2 0x8fc
0xb61 DUP2
0xb62 ISZERO
0xb63 MUL
0xb64 SWAP3
0xb65 SWAP1
0xb66 SWAP2
0xb67 SWAP1
0xb68 DUP2
0xb69 DUP2
0xb6a DUP2
0xb6b DUP6
0xb6c DUP9
0xb6d DUP9
0xb6e CALL
0xb6f SWAP4
0xb70 POP
0xb71 POP
0xb72 POP
0xb73 POP
0xb74 ISZERO
0xb75 DUP1
0xb76 ISZERO
0xb77 PUSH2 0x168
0xb7a JUMPI
---
0xb32: V884 = 0x0
0xb35: REVERT 0x0 0x0
0xb36: JUMPDEST 
0xb37: V885 = ADDRESS
0xb38: V886 = BALANCE V885
0xb39: V887 = 0x1
0xb3d: S[0x1] = V886
0xb3e: V888 = 0x0
0xb41: V889 = S[0x0]
0xb42: V890 = 0x40
0xb44: V891 = M[0x40]
0xb45: V892 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5c: V893 = AND V889 0xffffffffffffffffffffffffffffffffffffffff
0xb5e: V894 = 0x8fc
0xb62: V895 = ISZERO V886
0xb63: V896 = MUL V895 0x8fc
0xb6e: V897 = CALL V896 V893 V886 V891 0x0 V891 0x0
0xb74: V898 = ISZERO V897
0xb76: V899 = ISZERO V898
0xb77: V900 = 0x168
0xb7a: THROWI V899
---
Entry stack: []
Stack pops: 0
Stack additions: [V898]
Exit stack: []

================================

Block 0xb7b
[0xb7b:0xba6]
---
Predecessors: [0xb32]
Successors: [0xba7]
---
0xb7b RETURNDATASIZE
0xb7c PUSH1 0x0
0xb7e DUP1
0xb7f RETURNDATACOPY
0xb80 RETURNDATASIZE
0xb81 PUSH1 0x0
0xb83 REVERT
0xb84 JUMPDEST
0xb85 PUSH1 0x0
0xb87 DUP1
0xb88 SLOAD
0xb89 DUP2
0xb8a SWAP1
0xb8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba0 AND
0xba1 CALLER
0xba2 EQ
0xba3 PUSH2 0x20a
0xba6 JUMPI
---
0xb7b: V901 = RETURNDATASIZE
0xb7c: V902 = 0x0
0xb7f: RETURNDATACOPY 0x0 0x0 V901
0xb80: V903 = RETURNDATASIZE
0xb81: V904 = 0x0
0xb83: REVERT 0x0 V903
0xb84: JUMPDEST 
0xb85: V905 = 0x0
0xb88: V906 = S[0x0]
0xb8b: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0xba0: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xba1: V909 = CALLER
0xba2: V910 = EQ V909 V908
0xba3: V911 = 0x20a
0xba6: THROWI V910
---
Entry stack: [V898]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: []

================================

Block 0xba7
[0xba7:0xc7e]
---
Predecessors: [0xb7b]
Successors: [0xc7f]
---
0xba7 PUSH1 0x0
0xba9 DUP1
0xbaa REVERT
0xbab JUMPDEST
0xbac PUSH1 0x40
0xbae DUP1
0xbaf MLOAD
0xbb0 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0xbd1 PUSH1 0x20
0xbd3 DUP1
0xbd4 DUP4
0xbd5 ADD
0xbd6 SWAP2
0xbd7 SWAP1
0xbd8 SWAP2
0xbd9 MSTORE
0xbda PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0xbfb PUSH1 0x21
0xbfd DUP4
0xbfe ADD
0xbff MSTORE
0xc00 PUSH13 0x1000000000000000000000000
0xc0e ADDRESS
0xc0f MUL
0xc10 PUSH1 0x22
0xc12 DUP4
0xc13 ADD
0xc14 MSTORE
0xc15 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0xc36 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xc57 DUP11
0xc58 MUL
0xc59 AND
0xc5a PUSH1 0x36
0xc5c DUP4
0xc5d ADD
0xc5e MSTORE
0xc5f DUP3
0xc60 MLOAD
0xc61 PUSH1 0x17
0xc63 DUP2
0xc64 DUP5
0xc65 SUB
0xc66 ADD
0xc67 DUP2
0xc68 MSTORE
0xc69 PUSH1 0x37
0xc6b SWAP1
0xc6c SWAP3
0xc6d ADD
0xc6e SWAP3
0xc6f DUP4
0xc70 SWAP1
0xc71 MSTORE
0xc72 DUP2
0xc73 MLOAD
0xc74 SWAP2
0xc75 SWAP3
0xc76 SWAP2
0xc77 DUP3
0xc78 SWAP2
0xc79 DUP5
0xc7a ADD
0xc7b SWAP1
0xc7c DUP1
0xc7d DUP4
0xc7e DUP4
---
0xba7: V912 = 0x0
0xbaa: REVERT 0x0 0x0
0xbab: JUMPDEST 
0xbac: V913 = 0x40
0xbaf: V914 = M[0x40]
0xbb0: V915 = 0xd600000000000000000000000000000000000000000000000000000000000000
0xbd1: V916 = 0x20
0xbd5: V917 = ADD V914 0x20
0xbd9: M[V917] = 0xd600000000000000000000000000000000000000000000000000000000000000
0xbda: V918 = 0x9400000000000000000000000000000000000000000000000000000000000000
0xbfb: V919 = 0x21
0xbfe: V920 = ADD V914 0x21
0xbff: M[V920] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xc00: V921 = 0x1000000000000000000000000
0xc0e: V922 = ADDRESS
0xc0f: V923 = MUL V922 0x1000000000000000000000000
0xc10: V924 = 0x22
0xc13: V925 = ADD V914 0x22
0xc14: M[V925] = V923
0xc15: V926 = 0xff00000000000000000000000000000000000000000000000000000000000000
0xc36: V927 = 0x100000000000000000000000000000000000000000000000000000000000000
0xc58: V928 = MUL S5 0x100000000000000000000000000000000000000000000000000000000000000
0xc59: V929 = AND V928 0xff00000000000000000000000000000000000000000000000000000000000000
0xc5a: V930 = 0x36
0xc5d: V931 = ADD V914 0x36
0xc5e: M[V931] = V929
0xc60: V932 = M[0x40]
0xc61: V933 = 0x17
0xc65: V934 = SUB V914 V932
0xc66: V935 = ADD V934 0x17
0xc68: M[V932] = V935
0xc69: V936 = 0x37
0xc6d: V937 = ADD V914 0x37
0xc71: M[0x40] = V937
0xc73: V938 = M[V932]
0xc7a: V939 = ADD V932 0x20
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V939, V937, V938, V938, V939, V937, V937, V932, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0xc7f
[0xc7f:0xc87]
---
Predecessors: [0xba7]
Successors: [0xc88]
---
0xc7f JUMPDEST
0xc80 PUSH1 0x20
0xc82 DUP4
0xc83 LT
0xc84 PUSH2 0x2fd
0xc87 JUMPI
---
0xc7f: JUMPDEST 
0xc80: V940 = 0x20
0xc83: V941 = LT V938 0x20
0xc84: V942 = 0x2fd
0xc87: THROWI V941
---
Entry stack: [S13, S12, S11, S10, S9, S8, V932, V937, V937, V939, V938, V938, V937, V939]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S13, S12, S11, S10, S9, S8, V932, V937, V937, V939, V938, V938, V937, V939]

================================

Block 0xc88
[0xc88:0xd04]
---
Predecessors: [0xc7f]
Successors: [0xd05]
---
0xc88 DUP1
0xc89 MLOAD
0xc8a DUP3
0xc8b MSTORE
0xc8c PUSH1 0x1f
0xc8e NOT
0xc8f SWAP1
0xc90 SWAP3
0xc91 ADD
0xc92 SWAP2
0xc93 PUSH1 0x20
0xc95 SWAP2
0xc96 DUP3
0xc97 ADD
0xc98 SWAP2
0xc99 ADD
0xc9a PUSH2 0x2de
0xc9d JUMP
0xc9e JUMPDEST
0xc9f MLOAD
0xca0 DUP2
0xca1 MLOAD
0xca2 PUSH1 0x20
0xca4 SWAP4
0xca5 SWAP1
0xca6 SWAP4
0xca7 SUB
0xca8 PUSH2 0x100
0xcab EXP
0xcac PUSH1 0x0
0xcae NOT
0xcaf ADD
0xcb0 DUP1
0xcb1 NOT
0xcb2 SWAP1
0xcb3 SWAP2
0xcb4 AND
0xcb5 SWAP3
0xcb6 AND
0xcb7 SWAP2
0xcb8 SWAP1
0xcb9 SWAP2
0xcba OR
0xcbb SWAP1
0xcbc MSTORE
0xcbd PUSH1 0x40
0xcbf MLOAD
0xcc0 SWAP3
0xcc1 ADD
0xcc2 DUP3
0xcc3 SWAP1
0xcc4 SUB
0xcc5 DUP3
0xcc6 SHA3
0xcc7 SWAP5
0xcc8 POP
0xcc9 POP
0xcca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcdf DUP5
0xce0 AND
0xce1 SWAP3
0xce2 POP
0xce3 PUSH1 0x0
0xce5 SWAP2
0xce6 POP
0xce7 PUSH8 0x16345785d8a0000
0xcf0 SWAP1
0xcf1 DUP3
0xcf2 DUP2
0xcf3 DUP2
0xcf4 DUP2
0xcf5 DUP6
0xcf6 DUP9
0xcf7 DUP4
0xcf8 CALL
0xcf9 SWAP4
0xcfa POP
0xcfb POP
0xcfc POP
0xcfd POP
0xcfe ISZERO
0xcff DUP1
0xd00 ISZERO
0xd01 PUSH2 0x36d
0xd04 JUMPI
---
0xc89: V943 = M[V939]
0xc8b: M[V937] = V943
0xc8c: V944 = 0x1f
0xc8e: V945 = NOT 0x1f
0xc91: V946 = ADD V938 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xc93: V947 = 0x20
0xc97: V948 = ADD 0x20 V937
0xc99: V949 = ADD 0x20 V939
0xc9a: V950 = 0x2de
0xc9d: THROW 
0xc9e: JUMPDEST 
0xc9f: V951 = M[S0]
0xca1: V952 = M[S1]
0xca2: V953 = 0x20
0xca7: V954 = SUB 0x20 S2
0xca8: V955 = 0x100
0xcab: V956 = EXP 0x100 V954
0xcac: V957 = 0x0
0xcae: V958 = NOT 0x0
0xcaf: V959 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V956
0xcb1: V960 = NOT V959
0xcb4: V961 = AND V951 V960
0xcb6: V962 = AND V952 V959
0xcba: V963 = OR V962 V961
0xcbc: M[S1] = V963
0xcbd: V964 = 0x40
0xcbf: V965 = M[0x40]
0xcc1: V966 = ADD S5 S3
0xcc4: V967 = SUB V966 V965
0xcc6: V968 = SHA3 V965 V967
0xcca: V969 = 0xffffffffffffffffffffffffffffffffffffffff
0xce0: V970 = AND V968 0xffffffffffffffffffffffffffffffffffffffff
0xce3: V971 = 0x0
0xce7: V972 = 0x16345785d8a0000
0xcf8: V973 = CALL 0x0 V970 0x16345785d8a0000 V965 0x0 V965 0x0
0xcfe: V974 = ISZERO V973
0xd00: V975 = ISZERO V974
0xd01: V976 = 0x36d
0xd04: THROWI V975
---
Entry stack: [S13, S12, S11, S10, S9, S8, V932, V937, V937, V939, V938, V938, V937, V939]
Stack pops: 3
Stack additions: [V974, V968]
Exit stack: []

================================

Block 0xd05
[0xd05:0xd5b]
---
Predecessors: [0xc88]
Successors: [0x3c4, 0xd5c]
---
0xd05 RETURNDATASIZE
0xd06 PUSH1 0x0
0xd08 DUP1
0xd09 RETURNDATACOPY
0xd0a RETURNDATASIZE
0xd0b PUSH1 0x0
0xd0d REVERT
0xd0e JUMPDEST
0xd0f POP
0xd10 DUP5
0xd11 DUP5
0xd12 DUP5
0xd13 PUSH2 0x379
0xd16 PUSH2 0x3d2
0xd19 JUMP
0xd1a JUMPDEST
0xd1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd30 SWAP4
0xd31 DUP5
0xd32 AND
0xd33 DUP2
0xd34 MSTORE
0xd35 SWAP2
0xd36 SWAP1
0xd37 SWAP3
0xd38 AND
0xd39 PUSH1 0x20
0xd3b DUP3
0xd3c ADD
0xd3d MSTORE
0xd3e PUSH1 0x40
0xd40 DUP1
0xd41 DUP3
0xd42 ADD
0xd43 SWAP3
0xd44 SWAP1
0xd45 SWAP3
0xd46 MSTORE
0xd47 SWAP1
0xd48 MLOAD
0xd49 SWAP1
0xd4a DUP2
0xd4b SWAP1
0xd4c SUB
0xd4d PUSH1 0x60
0xd4f ADD
0xd50 SWAP1
0xd51 PUSH1 0x0
0xd53 CREATE
0xd54 DUP1
0xd55 ISZERO
0xd56 DUP1
0xd57 ISZERO
0xd58 PUSH2 0x3c4
0xd5b JUMPI
---
0xd05: V977 = RETURNDATASIZE
0xd06: V978 = 0x0
0xd09: RETURNDATACOPY 0x0 0x0 V977
0xd0a: V979 = RETURNDATASIZE
0xd0b: V980 = 0x0
0xd0d: REVERT 0x0 V979
0xd0e: JUMPDEST 
0xd13: V981 = 0x379
0xd16: V982 = 0x3d2
0xd19: THROW 
0xd1a: JUMPDEST 
0xd1b: V983 = 0xffffffffffffffffffffffffffffffffffffffff
0xd32: V984 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd34: M[S0] = V984
0xd38: V985 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd39: V986 = 0x20
0xd3c: V987 = ADD S0 0x20
0xd3d: M[V987] = V985
0xd3e: V988 = 0x40
0xd42: V989 = ADD S0 0x40
0xd46: M[V989] = S1
0xd48: V990 = M[0x40]
0xd4c: V991 = SUB S0 V990
0xd4d: V992 = 0x60
0xd4f: V993 = ADD 0x60 V991
0xd51: V994 = 0x0
0xd53: V995 = CREATE 0x0 V990 V993
0xd55: V996 = ISZERO V995
0xd57: V997 = ISZERO V996
0xd58: V998 = 0x3c4
0xd5b: JUMPI 0x3c4 V997
---
Entry stack: [V968, V974]
Stack pops: 0
Stack additions: [0x379, S3, S4, S5, S1, S2, S3, S4, S5, V996, V995]
Exit stack: []

================================

Block 0xd5c
[0xd5c:0xd8f]
---
Predecessors: [0xd05]
Successors: [0xd90]
---
0xd5c RETURNDATASIZE
0xd5d PUSH1 0x0
0xd5f DUP1
0xd60 RETURNDATACOPY
0xd61 RETURNDATASIZE
0xd62 PUSH1 0x0
0xd64 REVERT
0xd65 JUMPDEST
0xd66 POP
0xd67 PUSH1 0x1
0xd69 SWAP8
0xd6a SWAP7
0xd6b POP
0xd6c POP
0xd6d POP
0xd6e POP
0xd6f POP
0xd70 POP
0xd71 POP
0xd72 JUMP
0xd73 JUMPDEST
0xd74 PUSH1 0x40
0xd76 MLOAD
0xd77 PUSH2 0x17e
0xd7a DUP1
0xd7b PUSH2 0x3e3
0xd7e DUP4
0xd7f CODECOPY
0xd80 ADD
0xd81 SWAP1
0xd82 JUMP
0xd83 STOP
0xd84 PUSH1 0x80
0xd86 PUSH1 0x40
0xd88 MSTORE
0xd89 CALLVALUE
0xd8a DUP1
0xd8b ISZERO
0xd8c PUSH2 0x10
0xd8f JUMPI
---
0xd5c: V999 = RETURNDATASIZE
0xd5d: V1000 = 0x0
0xd60: RETURNDATACOPY 0x0 0x0 V999
0xd61: V1001 = RETURNDATASIZE
0xd62: V1002 = 0x0
0xd64: REVERT 0x0 V1001
0xd65: JUMPDEST 
0xd67: V1003 = 0x1
0xd72: JUMP S8
0xd73: JUMPDEST 
0xd74: V1004 = 0x40
0xd76: V1005 = M[0x40]
0xd77: V1006 = 0x17e
0xd7b: V1007 = 0x3e3
0xd7f: CODECOPY V1005 0x3e3 0x17e
0xd80: V1008 = ADD 0x17e V1005
0xd82: JUMP S0
0xd83: STOP 
0xd84: V1009 = 0x80
0xd86: V1010 = 0x40
0xd88: M[0x40] = 0x80
0xd89: V1011 = CALLVALUE
0xd8b: V1012 = ISZERO V1011
0xd8c: V1013 = 0x10
0xd8f: THROWI V1012
---
Entry stack: [V995, V996]
Stack pops: 0
Stack additions: [0x1, V1008, V1011]
Exit stack: []

================================

Block 0xd90
[0xd90:0xf57]
---
Predecessors: [0xd5c]
Successors: []
---
0xd90 PUSH1 0x0
0xd92 DUP1
0xd93 REVERT
0xd94 JUMPDEST
0xd95 POP
0xd96 PUSH1 0x40
0xd98 MLOAD
0xd99 PUSH1 0x60
0xd9b DUP1
0xd9c PUSH2 0x17e
0xd9f DUP4
0xda0 CODECOPY
0xda1 DUP2
0xda2 ADD
0xda3 PUSH1 0x40
0xda5 DUP2
0xda6 DUP2
0xda7 MSTORE
0xda8 DUP3
0xda9 MLOAD
0xdaa PUSH1 0x20
0xdac DUP5
0xdad ADD
0xdae MLOAD
0xdaf SWAP4
0xdb0 DUP3
0xdb1 ADD
0xdb2 MLOAD
0xdb3 PUSH32 0x627579586164647228616464726573732c75696e743235362900000000000000
0xdd4 DUP5
0xdd5 MSTORE
0xdd6 DUP3
0xdd7 MLOAD
0xdd8 SWAP4
0xdd9 DUP5
0xdda SWAP1
0xddb SUB
0xddc PUSH1 0x19
0xdde ADD
0xddf DUP5
0xde0 SHA3
0xde1 PUSH4 0xffffffff
0xde6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe04 SWAP2
0xe05 DUP3
0xe06 SWAP1
0xe07 DIV
0xe08 SWAP1
0xe09 DUP2
0xe0a AND
0xe0b SWAP1
0xe0c SWAP2
0xe0d MUL
0xe0e DUP6
0xe0f MSTORE
0xe10 PUSH1 0x1
0xe12 PUSH1 0xa0
0xe14 PUSH1 0x2
0xe16 EXP
0xe17 SUB
0xe18 DUP1
0xe19 DUP8
0xe1a AND
0xe1b PUSH1 0x4
0xe1d DUP8
0xe1e ADD
0xe1f MSTORE
0xe20 PUSH1 0x24
0xe22 DUP7
0xe23 ADD
0xe24 DUP4
0xe25 SWAP1
0xe26 MSTORE
0xe27 SWAP4
0xe28 MLOAD
0xe29 SWAP3
0xe2a SWAP6
0xe2b SWAP5
0xe2c SWAP2
0xe2d SWAP4
0xe2e DUP7
0xe2f AND
0xe30 SWAP3
0xe31 SWAP1
0xe32 SWAP2
0xe33 PUSH3 0x52080
0xe37 SWAP2
0xe38 PUSH8 0x16345785d8a0000
0xe41 SWAP2
0xe42 PUSH1 0x44
0xe44 DUP1
0xe45 DUP3
0xe46 ADD
0xe47 SWAP3
0xe48 PUSH1 0x0
0xe4a SWAP3
0xe4b SWAP1
0xe4c SWAP2
0xe4d SWAP1
0xe4e DUP3
0xe4f SWAP1
0xe50 SUB
0xe51 ADD
0xe52 DUP2
0xe53 DUP6
0xe54 DUP10
0xe55 DUP9
0xe56 CALL
0xe57 SWAP5
0xe58 POP
0xe59 POP
0xe5a POP
0xe5b POP
0xe5c POP
0xe5d POP
0xe5e DUP3
0xe5f PUSH1 0x1
0xe61 PUSH1 0xa0
0xe63 PUSH1 0x2
0xe65 EXP
0xe66 SUB
0xe67 AND
0xe68 PUSH1 0x40
0xe6a MLOAD
0xe6b DUP1
0xe6c DUP1
0xe6d PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0xe8e DUP2
0xe8f MSTORE
0xe90 POP
0xe91 PUSH1 0xa
0xe93 ADD
0xe94 SWAP1
0xe95 POP
0xe96 PUSH1 0x40
0xe98 MLOAD
0xe99 DUP1
0xe9a SWAP2
0xe9b SUB
0xe9c SWAP1
0xe9d SHA3
0xe9e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xebc SWAP1
0xebd DIV
0xebe PUSH1 0x40
0xec0 MLOAD
0xec1 DUP2
0xec2 PUSH4 0xffffffff
0xec7 AND
0xec8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xee6 MUL
0xee7 DUP2
0xee8 MSTORE
0xee9 PUSH1 0x4
0xeeb ADD
0xeec PUSH1 0x0
0xeee PUSH1 0x40
0xef0 MLOAD
0xef1 DUP1
0xef2 DUP4
0xef3 SUB
0xef4 DUP2
0xef5 PUSH1 0x0
0xef7 DUP8
0xef8 GAS
0xef9 CALL
0xefa POP
0xefb CALLER
0xefc SWAP3
0xefd POP
0xefe POP
0xeff POP
0xf00 SELFDESTRUCT
0xf01 STOP
0xf02 LOG1
0xf03 PUSH6 0x627a7a723058
0xf0a SHA3
0xf0b MISSING 0xba
0xf0c SSTORE
0xf0d MISSING 0xeb
0xf0e PUSH26 0x19ffd72bcb7684856b0936646ca983e447e7089b2c95d804b997
0xf29 SMOD
0xf2a MISSING 0x2c
0xf2b STOP
0xf2c MISSING 0x29
0xf2d LOG1
0xf2e PUSH6 0x627a7a723058
0xf35 SHA3
0xf36 SWAP9
0xf37 CREATE
0xf38 DUP7
0xf39 MISSING 0xd1
0xf3a NOT
0xf3b MISSING 0xa8
0xf3c MISSING 0xc4
0xf3d INVALID
0xf3e SLT
0xf3f MISSING 0x28
0xf40 DUP6
0xf41 NOT
0xf42 MISSING 0xcd
0xf43 SWAP4
0xf44 MISSING 0xe0
0xf45 MISSING 0xf8
0xf46 CALLVALUE
0xf47 MISSING 0xec
0xf48 DUP14
0xf49 PUSH2 0xbbcd
0xf4c XOR
0xf4d MISSING 0xe
0xf4e DUP5
0xf4f MISSING 0xbe
0xf50 DUP15
0xf51 BYTE
0xf52 MISSING 0xb8
0xf53 MISSING 0x2b
0xf54 SELFDESTRUCT
0xf55 MISSING 0xcf
0xf56 STOP
0xf57 MISSING 0x29
---
0xd90: V1014 = 0x0
0xd93: REVERT 0x0 0x0
0xd94: JUMPDEST 
0xd96: V1015 = 0x40
0xd98: V1016 = M[0x40]
0xd99: V1017 = 0x60
0xd9c: V1018 = 0x17e
0xda0: CODECOPY V1016 0x17e 0x60
0xda2: V1019 = ADD V1016 0x60
0xda3: V1020 = 0x40
0xda7: M[0x40] = V1019
0xda9: V1021 = M[V1016]
0xdaa: V1022 = 0x20
0xdad: V1023 = ADD V1016 0x20
0xdae: V1024 = M[V1023]
0xdb1: V1025 = ADD 0x40 V1016
0xdb2: V1026 = M[V1025]
0xdb3: V1027 = 0x627579586164647228616464726573732c75696e743235362900000000000000
0xdd5: M[V1019] = 0x627579586164647228616464726573732c75696e743235362900000000000000
0xdd7: V1028 = M[0x40]
0xddb: V1029 = SUB V1019 V1028
0xddc: V1030 = 0x19
0xdde: V1031 = ADD 0x19 V1029
0xde0: V1032 = SHA3 V1028 V1031
0xde1: V1033 = 0xffffffff
0xde6: V1034 = 0x100000000000000000000000000000000000000000000000000000000
0xe07: V1035 = DIV V1032 0x100000000000000000000000000000000000000000000000000000000
0xe0a: V1036 = AND V1035 0xffffffff
0xe0d: V1037 = MUL 0x100000000000000000000000000000000000000000000000000000000 V1036
0xe0f: M[V1028] = V1037
0xe10: V1038 = 0x1
0xe12: V1039 = 0xa0
0xe14: V1040 = 0x2
0xe16: V1041 = EXP 0x2 0xa0
0xe17: V1042 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1a: V1043 = AND V1024 0xffffffffffffffffffffffffffffffffffffffff
0xe1b: V1044 = 0x4
0xe1e: V1045 = ADD V1028 0x4
0xe1f: M[V1045] = V1043
0xe20: V1046 = 0x24
0xe23: V1047 = ADD V1028 0x24
0xe26: M[V1047] = V1026
0xe28: V1048 = M[0x40]
0xe2f: V1049 = AND V1021 0xffffffffffffffffffffffffffffffffffffffff
0xe33: V1050 = 0x52080
0xe38: V1051 = 0x16345785d8a0000
0xe42: V1052 = 0x44
0xe46: V1053 = ADD V1028 0x44
0xe48: V1054 = 0x0
0xe50: V1055 = SUB V1028 V1048
0xe51: V1056 = ADD V1055 0x44
0xe56: V1057 = CALL 0x52080 V1049 0x16345785d8a0000 V1048 V1056 V1048 0x0
0xe5f: V1058 = 0x1
0xe61: V1059 = 0xa0
0xe63: V1060 = 0x2
0xe65: V1061 = EXP 0x2 0xa0
0xe66: V1062 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe67: V1063 = AND 0xffffffffffffffffffffffffffffffffffffffff V1021
0xe68: V1064 = 0x40
0xe6a: V1065 = M[0x40]
0xe6d: V1066 = 0x7769746864726177282900000000000000000000000000000000000000000000
0xe8f: M[V1065] = 0x7769746864726177282900000000000000000000000000000000000000000000
0xe91: V1067 = 0xa
0xe93: V1068 = ADD 0xa V1065
0xe96: V1069 = 0x40
0xe98: V1070 = M[0x40]
0xe9b: V1071 = SUB V1068 V1070
0xe9d: V1072 = SHA3 V1070 V1071
0xe9e: V1073 = 0x100000000000000000000000000000000000000000000000000000000
0xebd: V1074 = DIV V1072 0x100000000000000000000000000000000000000000000000000000000
0xebe: V1075 = 0x40
0xec0: V1076 = M[0x40]
0xec2: V1077 = 0xffffffff
0xec7: V1078 = AND 0xffffffff V1074
0xec8: V1079 = 0x100000000000000000000000000000000000000000000000000000000
0xee6: V1080 = MUL 0x100000000000000000000000000000000000000000000000000000000 V1078
0xee8: M[V1076] = V1080
0xee9: V1081 = 0x4
0xeeb: V1082 = ADD 0x4 V1076
0xeec: V1083 = 0x0
0xeee: V1084 = 0x40
0xef0: V1085 = M[0x40]
0xef3: V1086 = SUB V1082 V1085
0xef5: V1087 = 0x0
0xef8: V1088 = GAS
0xef9: V1089 = CALL V1088 V1063 0x0 V1085 V1086 V1085 0x0
0xefb: V1090 = CALLER
0xf00: SELFDESTRUCT V1090
0xf01: STOP 
0xf02: LOG S0 S1 S2
0xf03: V1091 = 0x627a7a723058
0xf0a: V1092 = SHA3 0x627a7a723058 S3
0xf0b: MISSING 0xba
0xf0c: S[S0] = S1
0xf0d: MISSING 0xeb
0xf0e: V1093 = 0x19ffd72bcb7684856b0936646ca983e447e7089b2c95d804b997
0xf29: V1094 = SMOD 0x19ffd72bcb7684856b0936646ca983e447e7089b2c95d804b997 S0
0xf2a: MISSING 0x2c
0xf2b: STOP 
0xf2c: MISSING 0x29
0xf2d: LOG S0 S1 S2
0xf2e: V1095 = 0x627a7a723058
0xf35: V1096 = SHA3 0x627a7a723058 S3
0xf37: V1097 = CREATE S12 S4 S5
0xf39: MISSING 0xd1
0xf3a: V1098 = NOT S0
0xf3b: MISSING 0xa8
0xf3c: MISSING 0xc4
0xf3d: INVALID 
0xf3e: V1099 = SLT S0 S1
0xf3f: MISSING 0x28
0xf41: V1100 = NOT S5
0xf42: MISSING 0xcd
0xf44: MISSING 0xe0
0xf45: MISSING 0xf8
0xf46: V1101 = CALLVALUE
0xf47: MISSING 0xec
0xf49: V1102 = 0xbbcd
0xf4c: V1103 = XOR 0xbbcd S13
0xf4d: MISSING 0xe
0xf4f: MISSING 0xbe
0xf51: V1104 = BYTE S14 S0
0xf52: MISSING 0xb8
0xf53: MISSING 0x2b
0xf54: SELFDESTRUCT S0
0xf55: MISSING 0xcf
0xf56: STOP 
0xf57: MISSING 0x29
---
Entry stack: [V1011]
Stack pops: 0
Stack additions: [V1026, V1024, V1021, V1092, V1094, S11, V1097, S6, S7, S8, S9, S10, S11, V1096, V1098, V1099, V1100, S0, S1, S2, S3, S4, S5, S4, S1, S2, S3, S0, V1101, V1103, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S4, S0, S1, S2, S3, S4, V1104, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x60
Exit block: 0x5e
Body: 0x5e, 0x60, 0x68, 0x6c, 0x13a, 0x14d, 0x151, 0x183, 0x18c

Function 1:
Public function signature: 0x69dc9ff3
Entry block: 0x75
Exit block: 0x96
Body: 0x75, 0x7d, 0x81, 0x96, 0x18f

Function 2:
Public function signature: 0x8892170a
Entry block: 0xa8
Exit block: 0x714
Body: 0xa8, 0xc5, 0x1a1, 0x1f5, 0x1f9, 0x204, 0x20d, 0x21f, 0x223, 0x22b, 0x22f, 0x269, 0x26d, 0x278, 0x281, 0x293, 0x297, 0x2a0, 0x2ab, 0x3a5, 0x3ae, 0x3c4, 0x434, 0x43d, 0x453, 0x488, 0x489, 0x4dd, 0x4e6, 0x4fc, 0x531, 0x532, 0x569, 0x572, 0x588, 0x5cc, 0x5fe, 0x607, 0x67f, 0x683, 0x68e, 0x697, 0x6a9, 0x6ad, 0x705, 0x709, 0x714, 0x71d, 0x749, 0x754, 0x759

Function 3:
Public function signature: 0xaffed0e0
Entry block: 0xd9
Exit block: 0x96
Body: 0x96, 0xd9, 0xe1, 0xe5, 0x768

Function 4:
Public function signature: 0xb11524c5
Entry block: 0xee
Exit block: 0x106
Body: 0xee, 0xf6, 0xfa, 0x106, 0x76e

Function 5:
Public function signature: 0xf4109d12
Entry block: 0x122
Exit block: 0x8f7
Body: 0x5e, 0x122, 0x12a, 0x12e, 0x789, 0x79f, 0x7a3, 0x7ab, 0x7b6, 0x88d, 0x896, 0x8ac, 0x8e4, 0x8f7, 0x900, 0x959, 0x95e

Function 6:
Public fallback function
Entry block: 0x5e
Exit block: 0x5e
Body: 0x5e

