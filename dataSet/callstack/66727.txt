Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x68]
---
0x41 DUP1
0x42 PUSH4 0xc2381296
0x47 EQ
0x48 PUSH2 0x68
0x4b JUMPI
---
0x42: V15 = 0xc2381296
0x47: V16 = EQ 0xc2381296 V11
0x48: V17 = 0x68
0x4b: JUMPI 0x68 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0x7f]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0x7f
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0x7f
0x65: JUMP 0x7f
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0x15a]
Successors: []
---
0x66 JUMPDEST
0x67 STOP
---
0x66: JUMPDEST 
0x67: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x68
[0x68:0x6f]
---
Predecessors: [0x41]
Successors: [0x70, 0x74]
---
0x68 JUMPDEST
0x69 CALLVALUE
0x6a DUP1
0x6b ISZERO
0x6c PUSH2 0x74
0x6f JUMPI
---
0x68: JUMPDEST 
0x69: V25 = CALLVALUE
0x6b: V26 = ISZERO V25
0x6c: V27 = 0x74
0x6f: JUMPI 0x74 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x68]
Successors: []
---
0x70 PUSH1 0x0
0x72 DUP1
0x73 REVERT
---
0x70: V28 = 0x0
0x73: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x74
[0x74:0x7c]
---
Predecessors: [0x68]
Successors: [0x15d]
---
0x74 JUMPDEST
0x75 POP
0x76 PUSH2 0x7d
0x79 PUSH2 0x15d
0x7c JUMP
---
0x74: JUMPDEST 
0x76: V29 = 0x7d
0x79: V30 = 0x15d
0x7c: JUMP 0x15d
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x7d]
Exit stack: [V11, 0x7d]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x1f1]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0xd6]
---
Predecessors: [0x5d]
Successors: [0xd7, 0xdb]
---
0x7f JUMPDEST
0x80 PUSH1 0x1
0x82 PUSH1 0x0
0x84 SWAP1
0x85 SLOAD
0x86 SWAP1
0x87 PUSH2 0x100
0x8a EXP
0x8b SWAP1
0x8c DIV
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 CALLER
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 EQ
0xd1 ISZERO
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0x7f: JUMPDEST 
0x80: V31 = 0x1
0x82: V32 = 0x0
0x85: V33 = S[0x1]
0x87: V34 = 0x100
0x8a: V35 = EXP 0x100 0x0
0x8c: V36 = DIV V33 0x1
0x8d: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa3: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xb9: V41 = CALLER
0xba: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xd0: V44 = EQ V43 V40
0xd1: V45 = ISZERO V44
0xd2: V46 = ISZERO V45
0xd3: V47 = 0xdb
0xd6: JUMPI 0xdb V46
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0x7f]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V48 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xdb
[0xdb:0x150]
---
Predecessors: [0x7f]
Successors: [0x151, 0x15a]
---
0xdb JUMPDEST
0xdc PUSH1 0x1
0xde PUSH1 0x0
0xe0 SWAP1
0xe1 SLOAD
0xe2 SWAP1
0xe3 PUSH2 0x100
0xe6 EXP
0xe7 SWAP1
0xe8 DIV
0xe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe AND
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 PUSH2 0x8fc
0x118 ADDRESS
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f BALANCE
0x130 SWAP1
0x131 DUP2
0x132 ISZERO
0x133 MUL
0x134 SWAP1
0x135 PUSH1 0x40
0x137 MLOAD
0x138 PUSH1 0x0
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e DUP4
0x13f SUB
0x140 DUP2
0x141 DUP6
0x142 DUP9
0x143 DUP9
0x144 CALL
0x145 SWAP4
0x146 POP
0x147 POP
0x148 POP
0x149 POP
0x14a ISZERO
0x14b DUP1
0x14c ISZERO
0x14d PUSH2 0x15a
0x150 JUMPI
---
0xdb: JUMPDEST 
0xdc: V49 = 0x1
0xde: V50 = 0x0
0xe1: V51 = S[0x1]
0xe3: V52 = 0x100
0xe6: V53 = EXP 0x100 0x0
0xe8: V54 = DIV V51 0x1
0xe9: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xff: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x115: V59 = 0x8fc
0x118: V60 = ADDRESS
0x119: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x12f: V63 = BALANCE V62
0x132: V64 = ISZERO V63
0x133: V65 = MUL V64 0x8fc
0x135: V66 = 0x40
0x137: V67 = M[0x40]
0x138: V68 = 0x0
0x13a: V69 = 0x40
0x13c: V70 = M[0x40]
0x13f: V71 = SUB V67 V70
0x144: V72 = CALL V65 V58 V63 V70 V71 V70 0x0
0x14a: V73 = ISZERO V72
0x14c: V74 = ISZERO V73
0x14d: V75 = 0x15a
0x150: JUMPI 0x15a V74
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, 0x66, V73]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0xdb]
Successors: []
---
0x151 RETURNDATASIZE
0x152 PUSH1 0x0
0x154 DUP1
0x155 RETURNDATACOPY
0x156 RETURNDATASIZE
0x157 PUSH1 0x0
0x159 REVERT
---
0x151: V76 = RETURNDATASIZE
0x152: V77 = 0x0
0x155: RETURNDATACOPY 0x0 0x0 V76
0x156: V78 = RETURNDATASIZE
0x157: V79 = 0x0
0x159: REVERT 0x0 V78
---
Entry stack: [V11, 0x66, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, V73]

================================

Block 0x15a
[0x15a:0x15c]
---
Predecessors: [0xdb]
Successors: [0x66]
---
0x15a JUMPDEST
0x15b POP
0x15c JUMP
---
0x15a: JUMPDEST 
0x15c: JUMP 0x66
---
Entry stack: [V11, 0x66, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x15d
[0x15d:0x1b9]
---
Predecessors: [0x74]
Successors: [0x1ba, 0x1be]
---
0x15d JUMPDEST
0x15e PUSH1 0x0
0x160 DUP1
0x161 PUSH1 0x0
0x163 PUSH1 0x1
0x165 PUSH1 0x0
0x167 SWAP1
0x168 SLOAD
0x169 SWAP1
0x16a PUSH2 0x100
0x16d EXP
0x16e SWAP1
0x16f DIV
0x170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x185 AND
0x186 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19b AND
0x19c CALLER
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 EQ
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 PUSH2 0x1be
0x1b9 JUMPI
---
0x15d: JUMPDEST 
0x15e: V80 = 0x0
0x161: V81 = 0x0
0x163: V82 = 0x1
0x165: V83 = 0x0
0x168: V84 = S[0x1]
0x16a: V85 = 0x100
0x16d: V86 = EXP 0x100 0x0
0x16f: V87 = DIV V84 0x1
0x170: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x185: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x186: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x19c: V92 = CALLER
0x19d: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1b3: V95 = EQ V94 V91
0x1b4: V96 = ISZERO V95
0x1b5: V97 = ISZERO V96
0x1b6: V98 = 0x1be
0x1b9: JUMPI 0x1be V97
---
Entry stack: [V11, 0x7d]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0]

================================

Block 0x1ba
[0x1ba:0x1bd]
---
Predecessors: [0x15d]
Successors: []
---
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd REVERT
---
0x1ba: V99 = 0x0
0x1bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0]

================================

Block 0x1be
[0x1be:0x1c5]
---
Predecessors: [0x15d]
Successors: [0x1f6]
---
0x1be JUMPDEST
0x1bf PUSH2 0x1c6
0x1c2 PUSH2 0x1f6
0x1c5 JUMP
---
0x1be: JUMPDEST 
0x1bf: V100 = 0x1c6
0x1c2: V101 = 0x1f6
0x1c5: JUMP 0x1f6
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x1c6]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6]

================================

Block 0x1c6
[0x1c6:0x1e6]
---
Predecessors: [0x7df]
Successors: [0x1e7, 0x1f1]
---
0x1c6 JUMPDEST
0x1c7 DUP1
0x1c8 SWAP4
0x1c9 POP
0x1ca DUP2
0x1cb SWAP5
0x1cc POP
0x1cd DUP3
0x1ce SWAP6
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x8
0x1d5 SLOAD
0x1d6 PUSH8 0x16345785d8a0000
0x1df DUP5
0x1e0 ADD
0x1e1 LT
0x1e2 ISZERO
0x1e3 PUSH2 0x1f1
0x1e6 JUMPI
---
0x1c6: JUMPDEST 
0x1d3: V102 = 0x8
0x1d5: V103 = S[0x8]
0x1d6: V104 = 0x16345785d8a0000
0x1e0: V105 = ADD S2 0x16345785d8a0000
0x1e1: V106 = LT V105 V103
0x1e2: V107 = ISZERO V106
0x1e3: V108 = 0x1f1
0x1e6: JUMPI 0x1f1 V107
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, S2, S1, S0]

================================

Block 0x1e7
[0x1e7:0x1ef]
---
Predecessors: [0x1c6]
Successors: [0x7f3]
---
0x1e7 PUSH2 0x1f0
0x1ea DUP3
0x1eb DUP3
0x1ec PUSH2 0x7f3
0x1ef JUMP
---
0x1e7: V109 = 0x1f0
0x1ec: V110 = 0x7f3
0x1ef: JUMP 0x7f3
---
Entry stack: [V11, 0x7d, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1f0, S1, S0]
Exit stack: [V11, 0x7d, S2, S1, S0, 0x1f0, S1, S0]

================================

Block 0x1f0
[0x1f0:0x1f0]
---
Predecessors: [0x89b]
Successors: [0x1f1]
---
0x1f0 JUMPDEST
---
0x1f0: JUMPDEST 
---
Entry stack: [V11, 0x7d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, S2, S1, S0]

================================

Block 0x1f1
[0x1f1:0x1f5]
---
Predecessors: [0x1c6, 0x1f0]
Successors: [0x7d]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 JUMP
---
0x1f1: JUMPDEST 
0x1f5: JUMP 0x7d
---
Entry stack: [V11, 0x7d, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f6
[0x1f6:0x2f8]
---
Predecessors: [0x1be]
Successors: [0x2f9]
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 PUSH1 0x0
0x202 DUP1
0x203 PUSH1 0x0
0x205 PUSH1 0xd6
0x207 PUSH1 0x94
0x209 ADDRESS
0x20a PUSH1 0x1
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x20
0x211 ADD
0x212 DUP1
0x213 DUP6
0x214 PUSH1 0xff
0x216 AND
0x217 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x238 MUL
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x1
0x23d ADD
0x23e DUP5
0x23f PUSH1 0xff
0x241 AND
0x242 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x263 MUL
0x264 DUP2
0x265 MSTORE
0x266 PUSH1 0x1
0x268 ADD
0x269 DUP4
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 PUSH13 0x1000000000000000000000000
0x2a4 MUL
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x14
0x2a9 ADD
0x2aa DUP3
0x2ab PUSH1 0xff
0x2ad AND
0x2ae PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x2cf MUL
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 PUSH1 0x1
0x2d4 ADD
0x2d5 SWAP5
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da POP
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de PUSH1 0x20
0x2e0 DUP2
0x2e1 DUP4
0x2e2 SUB
0x2e3 SUB
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 SWAP1
0x2e7 PUSH1 0x40
0x2e9 MSTORE
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee DUP3
0x2ef DUP1
0x2f0 MLOAD
0x2f1 SWAP1
0x2f2 PUSH1 0x20
0x2f4 ADD
0x2f5 SWAP1
0x2f6 DUP1
0x2f7 DUP4
0x2f8 DUP4
---
0x1f6: JUMPDEST 
0x1f7: V111 = 0x0
0x1fa: V112 = 0x0
0x1fd: V113 = 0x0
0x200: V114 = 0x0
0x203: V115 = 0x0
0x205: V116 = 0xd6
0x207: V117 = 0x94
0x209: V118 = ADDRESS
0x20a: V119 = 0x1
0x20c: V120 = 0x40
0x20e: V121 = M[0x40]
0x20f: V122 = 0x20
0x211: V123 = ADD 0x20 V121
0x214: V124 = 0xff
0x216: V125 = AND 0xff 0xd6
0x217: V126 = 0x100000000000000000000000000000000000000000000000000000000000000
0x238: V127 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x23a: M[V123] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x23b: V128 = 0x1
0x23d: V129 = ADD 0x1 V123
0x23f: V130 = 0xff
0x241: V131 = AND 0xff 0x94
0x242: V132 = 0x100000000000000000000000000000000000000000000000000000000000000
0x263: V133 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x265: M[V129] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x266: V134 = 0x1
0x268: V135 = ADD 0x1 V129
0x26a: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x280: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x296: V140 = 0x1000000000000000000000000
0x2a4: V141 = MUL 0x1000000000000000000000000 V139
0x2a6: M[V135] = V141
0x2a7: V142 = 0x14
0x2a9: V143 = ADD 0x14 V135
0x2ab: V144 = 0xff
0x2ad: V145 = AND 0xff 0x1
0x2ae: V146 = 0x100000000000000000000000000000000000000000000000000000000000000
0x2cf: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x2d1: M[V143] = 0x100000000000000000000000000000000000000000000000000000000000000
0x2d2: V148 = 0x1
0x2d4: V149 = ADD 0x1 V143
0x2db: V150 = 0x40
0x2dd: V151 = M[0x40]
0x2de: V152 = 0x20
0x2e2: V153 = SUB V149 V151
0x2e3: V154 = SUB V153 0x20
0x2e5: M[V151] = V154
0x2e7: V155 = 0x40
0x2e9: M[0x40] = V149
0x2ea: V156 = 0x40
0x2ec: V157 = M[0x40]
0x2f0: V158 = M[V151]
0x2f2: V159 = 0x20
0x2f4: V160 = ADD 0x20 V151
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V151, V157, V157, V160, V158, V158, V157, V160]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V151, V157, V157, V160, V158, V158, V157, V160]

================================

Block 0x2f9
[0x2f9:0x303]
---
Predecessors: [0x1f6, 0x304]
Successors: [0x304, 0x31e]
---
0x2f9 JUMPDEST
0x2fa PUSH1 0x20
0x2fc DUP4
0x2fd LT
0x2fe ISZERO
0x2ff ISZERO
0x300 PUSH2 0x31e
0x303 JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V161 = 0x20
0x2fd: V162 = LT S2 0x20
0x2fe: V163 = ISZERO V162
0x2ff: V164 = ISZERO V163
0x300: V165 = 0x31e
0x303: JUMPI 0x31e V164
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V151, V157, V157, V160, V158, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V151, V157, V157, V160, V158, S2, S1, S0]

================================

Block 0x304
[0x304:0x31d]
---
Predecessors: [0x2f9]
Successors: [0x2f9]
---
0x304 DUP1
0x305 MLOAD
0x306 DUP3
0x307 MSTORE
0x308 PUSH1 0x20
0x30a DUP3
0x30b ADD
0x30c SWAP2
0x30d POP
0x30e PUSH1 0x20
0x310 DUP2
0x311 ADD
0x312 SWAP1
0x313 POP
0x314 PUSH1 0x20
0x316 DUP4
0x317 SUB
0x318 SWAP3
0x319 POP
0x31a PUSH2 0x2f9
0x31d JUMP
---
0x305: V166 = M[S0]
0x307: M[S1] = V166
0x308: V167 = 0x20
0x30b: V168 = ADD S1 0x20
0x30e: V169 = 0x20
0x311: V170 = ADD S0 0x20
0x314: V171 = 0x20
0x317: V172 = SUB S2 0x20
0x31a: V173 = 0x2f9
0x31d: JUMP 0x2f9
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V151, V157, V157, V160, V158, S2, S1, S0]
Stack pops: 3
Stack additions: [V172, V168, V170]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V151, V157, V157, V160, V158, V172, V168, V170]

================================

Block 0x31e
[0x31e:0x3dd]
---
Predecessors: [0x2f9]
Successors: [0x3de, 0x3e2]
---
0x31e JUMPDEST
0x31f PUSH1 0x1
0x321 DUP4
0x322 PUSH1 0x20
0x324 SUB
0x325 PUSH2 0x100
0x328 EXP
0x329 SUB
0x32a DUP1
0x32b NOT
0x32c DUP3
0x32d MLOAD
0x32e AND
0x32f DUP2
0x330 DUP5
0x331 MLOAD
0x332 AND
0x333 DUP1
0x334 DUP3
0x335 OR
0x336 DUP6
0x337 MSTORE
0x338 POP
0x339 POP
0x33a POP
0x33b POP
0x33c POP
0x33d POP
0x33e SWAP1
0x33f POP
0x340 ADD
0x341 SWAP2
0x342 POP
0x343 POP
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 SWAP2
0x349 SUB
0x34a SWAP1
0x34b SHA3
0x34c PUSH1 0x1
0x34e SWAP1
0x34f DIV
0x350 SWAP6
0x351 POP
0x352 PUSH1 0x0
0x354 SWAP5
0x355 POP
0x356 PUSH1 0x0
0x358 SWAP4
0x359 POP
0x35a PUSH1 0x0
0x35c SWAP3
0x35d POP
0x35e PUSH1 0x0
0x360 DUP1
0x361 SWAP1
0x362 SLOAD
0x363 SWAP1
0x364 PUSH2 0x100
0x367 EXP
0x368 SWAP1
0x369 DIV
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 PUSH4 0x11a09ae7
0x39b PUSH1 0x40
0x39d MLOAD
0x39e DUP2
0x39f PUSH4 0xffffffff
0x3a4 AND
0x3a5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3c3 MUL
0x3c4 DUP2
0x3c5 MSTORE
0x3c6 PUSH1 0x4
0x3c8 ADD
0x3c9 PUSH1 0x20
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce DUP1
0x3cf DUP4
0x3d0 SUB
0x3d1 DUP2
0x3d2 PUSH1 0x0
0x3d4 DUP8
0x3d5 DUP1
0x3d6 EXTCODESIZE
0x3d7 ISZERO
0x3d8 DUP1
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x31e: JUMPDEST 
0x31f: V174 = 0x1
0x322: V175 = 0x20
0x324: V176 = SUB 0x20 S2
0x325: V177 = 0x100
0x328: V178 = EXP 0x100 V176
0x329: V179 = SUB V178 0x1
0x32b: V180 = NOT V179
0x32d: V181 = M[S0]
0x32e: V182 = AND V181 V180
0x331: V183 = M[S1]
0x332: V184 = AND V183 V179
0x335: V185 = OR V182 V184
0x337: M[S1] = V185
0x340: V186 = ADD V158 V157
0x344: V187 = 0x40
0x346: V188 = M[0x40]
0x349: V189 = SUB V186 V188
0x34b: V190 = SHA3 V188 V189
0x34c: V191 = 0x1
0x34f: V192 = DIV V190 0x1
0x352: V193 = 0x0
0x356: V194 = 0x0
0x35a: V195 = 0x0
0x35e: V196 = 0x0
0x362: V197 = S[0x0]
0x364: V198 = 0x100
0x367: V199 = EXP 0x100 0x0
0x369: V200 = DIV V197 0x1
0x36a: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x380: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x396: V205 = 0x11a09ae7
0x39b: V206 = 0x40
0x39d: V207 = M[0x40]
0x39f: V208 = 0xffffffff
0x3a4: V209 = AND 0xffffffff 0x11a09ae7
0x3a5: V210 = 0x100000000000000000000000000000000000000000000000000000000
0x3c3: V211 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x3c5: M[V207] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x3c6: V212 = 0x4
0x3c8: V213 = ADD 0x4 V207
0x3c9: V214 = 0x20
0x3cb: V215 = 0x40
0x3cd: V216 = M[0x40]
0x3d0: V217 = SUB V213 V216
0x3d2: V218 = 0x0
0x3d6: V219 = EXTCODESIZE V204
0x3d7: V220 = ISZERO V219
0x3d9: V221 = ISZERO V220
0x3da: V222 = 0x3e2
0x3dd: JUMPI 0x3e2 V221
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V151, V157, V157, V160, V158, S2, S1, S0]
Stack pops: 14
Stack additions: [V192, 0x0, 0x0, 0x0, S9, S8, V204, 0x11a09ae7, V213, 0x20, V216, V217, V216, 0x0, V204, V220]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, 0x20, V216, V217, V216, 0x0, V204, V220]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x31e]
Successors: []
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
---
0x3de: V223 = 0x0
0x3e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, 0x20, V216, V217, V216, 0x0, V204, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, 0x20, V216, V217, V216, 0x0, V204, V220]

================================

Block 0x3e2
[0x3e2:0x3ec]
---
Predecessors: [0x31e]
Successors: [0x3ed, 0x3f6]
---
0x3e2 JUMPDEST
0x3e3 POP
0x3e4 GAS
0x3e5 CALL
0x3e6 ISZERO
0x3e7 DUP1
0x3e8 ISZERO
0x3e9 PUSH2 0x3f6
0x3ec JUMPI
---
0x3e2: JUMPDEST 
0x3e4: V224 = GAS
0x3e5: V225 = CALL V224 V204 0x0 V216 V217 V216 0x20
0x3e6: V226 = ISZERO V225
0x3e8: V227 = ISZERO V226
0x3e9: V228 = 0x3f6
0x3ec: JUMPI 0x3f6 V227
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, 0x20, V216, V217, V216, 0x0, V204, V220]
Stack pops: 7
Stack additions: [V226]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, V226]

================================

Block 0x3ed
[0x3ed:0x3f5]
---
Predecessors: [0x3e2]
Successors: []
---
0x3ed RETURNDATASIZE
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 RETURNDATACOPY
0x3f2 RETURNDATASIZE
0x3f3 PUSH1 0x0
0x3f5 REVERT
---
0x3ed: V229 = RETURNDATASIZE
0x3ee: V230 = 0x0
0x3f1: RETURNDATACOPY 0x0 0x0 V229
0x3f2: V231 = RETURNDATASIZE
0x3f3: V232 = 0x0
0x3f5: REVERT 0x0 V231
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, V226]

================================

Block 0x3f6
[0x3f6:0x407]
---
Predecessors: [0x3e2]
Successors: [0x408, 0x40c]
---
0x3f6 JUMPDEST
0x3f7 POP
0x3f8 POP
0x3f9 POP
0x3fa POP
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe RETURNDATASIZE
0x3ff PUSH1 0x20
0x401 DUP2
0x402 LT
0x403 ISZERO
0x404 PUSH2 0x40c
0x407 JUMPI
---
0x3f6: JUMPDEST 
0x3fb: V233 = 0x40
0x3fd: V234 = M[0x40]
0x3fe: V235 = RETURNDATASIZE
0x3ff: V236 = 0x20
0x402: V237 = LT V235 0x20
0x403: V238 = ISZERO V237
0x404: V239 = 0x40c
0x407: JUMPI 0x40c V238
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V204, 0x11a09ae7, V213, V226]
Stack pops: 4
Stack additions: [V234, V235]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V234, V235]

================================

Block 0x408
[0x408:0x40b]
---
Predecessors: [0x3f6]
Successors: []
---
0x408 PUSH1 0x0
0x40a DUP1
0x40b REVERT
---
0x408: V240 = 0x0
0x40b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V234, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V234, V235]

================================

Block 0x40c
[0x40c:0x423]
---
Predecessors: [0x3f6]
Successors: [0x424]
---
0x40c JUMPDEST
0x40d DUP2
0x40e ADD
0x40f SWAP1
0x410 DUP1
0x411 DUP1
0x412 MLOAD
0x413 SWAP1
0x414 PUSH1 0x20
0x416 ADD
0x417 SWAP1
0x418 SWAP3
0x419 SWAP2
0x41a SWAP1
0x41b POP
0x41c POP
0x41d POP
0x41e SWAP2
0x41f POP
0x420 PUSH1 0x0
0x422 SWAP1
0x423 POP
---
0x40c: JUMPDEST 
0x40e: V241 = ADD V234 V235
0x412: V242 = M[V234]
0x414: V243 = 0x20
0x416: V244 = ADD 0x20 V234
0x420: V245 = 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, 0x0, 0x0, V234, V235]
Stack pops: 4
Stack additions: [V242, 0x0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V192, 0x0, 0x0, 0x0, V242, 0x0]

================================

Block 0x424
[0x424:0x42b]
---
Predecessors: [0x40c, 0x7da]
Successors: [0x42c, 0x7df]
---
0x424 JUMPDEST
0x425 DUP1
0x426 ISZERO
0x427 ISZERO
0x428 PUSH2 0x7df
0x42b JUMPI
---
0x424: JUMPDEST 
0x426: V246 = ISZERO {0x0, 0x1}
0x427: V247 = ISZERO V246
0x428: V248 = 0x7df
0x42b: JUMPI 0x7df V247
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, S2, V242, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, S2, V242, {0x0, 0x1}]

================================

Block 0x42c
[0x42c:0x497]
---
Predecessors: [0x424]
Successors: [0x498]
---
0x42c NUMBER
0x42d TIMESTAMP
0x42e DUP8
0x42f PUSH1 0x40
0x431 MLOAD
0x432 PUSH1 0x20
0x434 ADD
0x435 DUP1
0x436 DUP3
0x437 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44c AND
0x44d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x462 AND
0x463 PUSH13 0x1000000000000000000000000
0x471 MUL
0x472 DUP2
0x473 MSTORE
0x474 PUSH1 0x14
0x476 ADD
0x477 SWAP2
0x478 POP
0x479 POP
0x47a PUSH1 0x40
0x47c MLOAD
0x47d PUSH1 0x20
0x47f DUP2
0x480 DUP4
0x481 SUB
0x482 SUB
0x483 DUP2
0x484 MSTORE
0x485 SWAP1
0x486 PUSH1 0x40
0x488 MSTORE
0x489 PUSH1 0x40
0x48b MLOAD
0x48c DUP1
0x48d DUP3
0x48e DUP1
0x48f MLOAD
0x490 SWAP1
0x491 PUSH1 0x20
0x493 ADD
0x494 SWAP1
0x495 DUP1
0x496 DUP4
0x497 DUP4
---
0x42c: V249 = NUMBER
0x42d: V250 = TIMESTAMP
0x42f: V251 = 0x40
0x431: V252 = M[0x40]
0x432: V253 = 0x20
0x434: V254 = ADD 0x20 V252
0x437: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x44d: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x462: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x463: V259 = 0x1000000000000000000000000
0x471: V260 = MUL 0x1000000000000000000000000 V258
0x473: M[V254] = V260
0x474: V261 = 0x14
0x476: V262 = ADD 0x14 V254
0x47a: V263 = 0x40
0x47c: V264 = M[0x40]
0x47d: V265 = 0x20
0x481: V266 = SUB V262 V264
0x482: V267 = SUB V266 0x20
0x484: M[V264] = V267
0x486: V268 = 0x40
0x488: M[0x40] = V262
0x489: V269 = 0x40
0x48b: V270 = M[0x40]
0x48f: V271 = M[V264]
0x491: V272 = 0x20
0x493: V273 = ADD 0x20 V264
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, S2, V242, {0x0, 0x1}]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V249, V250, V264, V270, V270, V273, V271, V271, V270, V273]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, S2, V242, {0x0, 0x1}, V249, V250, V264, V270, V270, V273, V271, V271, V270, V273]

================================

Block 0x498
[0x498:0x4a2]
---
Predecessors: [0x42c, 0x4a3]
Successors: [0x4a3, 0x4bd]
---
0x498 JUMPDEST
0x499 PUSH1 0x20
0x49b DUP4
0x49c LT
0x49d ISZERO
0x49e ISZERO
0x49f PUSH2 0x4bd
0x4a2 JUMPI
---
0x498: JUMPDEST 
0x499: V274 = 0x20
0x49c: V275 = LT S2 0x20
0x49d: V276 = ISZERO V275
0x49e: V277 = ISZERO V276
0x49f: V278 = 0x4bd
0x4a2: JUMPI 0x4bd V277
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S15, S14, S13, S12, V242, {0x0, 0x1}, V249, V250, V264, V270, V270, V273, V271, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S15, S14, S13, S12, V242, {0x0, 0x1}, V249, V250, V264, V270, V270, V273, V271, S2, S1, S0]

================================

Block 0x4a3
[0x4a3:0x4bc]
---
Predecessors: [0x498]
Successors: [0x498]
---
0x4a3 DUP1
0x4a4 MLOAD
0x4a5 DUP3
0x4a6 MSTORE
0x4a7 PUSH1 0x20
0x4a9 DUP3
0x4aa ADD
0x4ab SWAP2
0x4ac POP
0x4ad PUSH1 0x20
0x4af DUP2
0x4b0 ADD
0x4b1 SWAP1
0x4b2 POP
0x4b3 PUSH1 0x20
0x4b5 DUP4
0x4b6 SUB
0x4b7 SWAP3
0x4b8 POP
0x4b9 PUSH2 0x498
0x4bc JUMP
---
0x4a4: V279 = M[S0]
0x4a6: M[S1] = V279
0x4a7: V280 = 0x20
0x4aa: V281 = ADD S1 0x20
0x4ad: V282 = 0x20
0x4b0: V283 = ADD S0 0x20
0x4b3: V284 = 0x20
0x4b6: V285 = SUB S2 0x20
0x4b9: V286 = 0x498
0x4bc: JUMP 0x498
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S15, S14, S13, S12, V242, {0x0, 0x1}, V249, V250, V264, V270, V270, V273, V271, S2, S1, S0]
Stack pops: 3
Stack additions: [V285, V281, V283]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S15, S14, S13, S12, V242, {0x0, 0x1}, V249, V250, V264, V270, V270, V273, V271, V285, V281, V283]

================================

Block 0x4bd
[0x4bd:0x4f5]
---
Predecessors: [0x498]
Successors: [0x4f6, 0x4f7]
---
0x4bd JUMPDEST
0x4be PUSH1 0x1
0x4c0 DUP4
0x4c1 PUSH1 0x20
0x4c3 SUB
0x4c4 PUSH2 0x100
0x4c7 EXP
0x4c8 SUB
0x4c9 DUP1
0x4ca NOT
0x4cb DUP3
0x4cc MLOAD
0x4cd AND
0x4ce DUP2
0x4cf DUP5
0x4d0 MLOAD
0x4d1 AND
0x4d2 DUP1
0x4d3 DUP3
0x4d4 OR
0x4d5 DUP6
0x4d6 MSTORE
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da POP
0x4db POP
0x4dc POP
0x4dd SWAP1
0x4de POP
0x4df ADD
0x4e0 SWAP2
0x4e1 POP
0x4e2 POP
0x4e3 PUSH1 0x40
0x4e5 MLOAD
0x4e6 DUP1
0x4e7 SWAP2
0x4e8 SUB
0x4e9 SWAP1
0x4ea SHA3
0x4eb PUSH1 0x1
0x4ed SWAP1
0x4ee DIV
0x4ef DUP2
0x4f0 ISZERO
0x4f1 ISZERO
0x4f2 PUSH2 0x4f7
0x4f5 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V287 = 0x1
0x4c1: V288 = 0x20
0x4c3: V289 = SUB 0x20 S2
0x4c4: V290 = 0x100
0x4c7: V291 = EXP 0x100 V289
0x4c8: V292 = SUB V291 0x1
0x4ca: V293 = NOT V292
0x4cc: V294 = M[S0]
0x4cd: V295 = AND V294 V293
0x4d0: V296 = M[S1]
0x4d1: V297 = AND V296 V292
0x4d4: V298 = OR V295 V297
0x4d6: M[S1] = V298
0x4df: V299 = ADD V271 V270
0x4e3: V300 = 0x40
0x4e5: V301 = M[0x40]
0x4e8: V302 = SUB V299 V301
0x4ea: V303 = SHA3 V301 V302
0x4eb: V304 = 0x1
0x4ee: V305 = DIV V303 0x1
0x4f0: V306 = ISZERO V250
0x4f1: V307 = ISZERO V306
0x4f2: V308 = 0x4f7
0x4f5: JUMPI 0x4f7 V307
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S15, S14, S13, S12, V242, {0x0, 0x1}, V249, V250, V264, V270, V270, V273, V271, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V305]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S15, S14, S13, S12, V242, {0x0, 0x1}, V249, V250, V305]

================================

Block 0x4f6
[0x4f6:0x4f6]
---
Predecessors: [0x4bd]
Successors: []
---
0x4f6 INVALID
---
0x4f6: INVALID 
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S8, S7, S6, S5, V242, {0x0, 0x1}, V249, V250, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S8, S7, S6, S5, V242, {0x0, 0x1}, V249, V250, V305]

================================

Block 0x4f7
[0x4f7:0x564]
---
Predecessors: [0x4bd]
Successors: [0x565]
---
0x4f7 JUMPDEST
0x4f8 DIV
0x4f9 GASLIMIT
0x4fa TIMESTAMP
0x4fb COINBASE
0x4fc PUSH1 0x40
0x4fe MLOAD
0x4ff PUSH1 0x20
0x501 ADD
0x502 DUP1
0x503 DUP3
0x504 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x519 AND
0x51a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52f AND
0x530 PUSH13 0x1000000000000000000000000
0x53e MUL
0x53f DUP2
0x540 MSTORE
0x541 PUSH1 0x14
0x543 ADD
0x544 SWAP2
0x545 POP
0x546 POP
0x547 PUSH1 0x40
0x549 MLOAD
0x54a PUSH1 0x20
0x54c DUP2
0x54d DUP4
0x54e SUB
0x54f SUB
0x550 DUP2
0x551 MSTORE
0x552 SWAP1
0x553 PUSH1 0x40
0x555 MSTORE
0x556 PUSH1 0x40
0x558 MLOAD
0x559 DUP1
0x55a DUP3
0x55b DUP1
0x55c MLOAD
0x55d SWAP1
0x55e PUSH1 0x20
0x560 ADD
0x561 SWAP1
0x562 DUP1
0x563 DUP4
0x564 DUP4
---
0x4f7: JUMPDEST 
0x4f8: V309 = DIV V305 V250
0x4f9: V310 = GASLIMIT
0x4fa: V311 = TIMESTAMP
0x4fb: V312 = COINBASE
0x4fc: V313 = 0x40
0x4fe: V314 = M[0x40]
0x4ff: V315 = 0x20
0x501: V316 = ADD 0x20 V314
0x504: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x519: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x51a: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x52f: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x530: V321 = 0x1000000000000000000000000
0x53e: V322 = MUL 0x1000000000000000000000000 V320
0x540: M[V316] = V322
0x541: V323 = 0x14
0x543: V324 = ADD 0x14 V316
0x547: V325 = 0x40
0x549: V326 = M[0x40]
0x54a: V327 = 0x20
0x54e: V328 = SUB V324 V326
0x54f: V329 = SUB V328 0x20
0x551: M[V326] = V329
0x553: V330 = 0x40
0x555: M[0x40] = V324
0x556: V331 = 0x40
0x558: V332 = M[0x40]
0x55c: V333 = M[V326]
0x55e: V334 = 0x20
0x560: V335 = ADD 0x20 V326
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S8, S7, S6, S5, V242, {0x0, 0x1}, V249, V250, V305]
Stack pops: 2
Stack additions: [V309, V310, V311, V326, V332, V332, V335, V333, V333, V332, V335]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S8, S7, S6, S5, V242, {0x0, 0x1}, V249, V309, V310, V311, V326, V332, V332, V335, V333, V333, V332, V335]

================================

Block 0x565
[0x565:0x56f]
---
Predecessors: [0x4f7, 0x570]
Successors: [0x570, 0x58a]
---
0x565 JUMPDEST
0x566 PUSH1 0x20
0x568 DUP4
0x569 LT
0x56a ISZERO
0x56b ISZERO
0x56c PUSH2 0x58a
0x56f JUMPI
---
0x565: JUMPDEST 
0x566: V336 = 0x20
0x569: V337 = LT S2 0x20
0x56a: V338 = ISZERO V337
0x56b: V339 = ISZERO V338
0x56c: V340 = 0x58a
0x56f: JUMPI 0x58a V339
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S17, S16, S15, S14, V242, {0x0, 0x1}, V249, V309, V310, V311, V326, V332, V332, V335, V333, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S17, S16, S15, S14, V242, {0x0, 0x1}, V249, V309, V310, V311, V326, V332, V332, V335, V333, S2, S1, S0]

================================

Block 0x570
[0x570:0x589]
---
Predecessors: [0x565]
Successors: [0x565]
---
0x570 DUP1
0x571 MLOAD
0x572 DUP3
0x573 MSTORE
0x574 PUSH1 0x20
0x576 DUP3
0x577 ADD
0x578 SWAP2
0x579 POP
0x57a PUSH1 0x20
0x57c DUP2
0x57d ADD
0x57e SWAP1
0x57f POP
0x580 PUSH1 0x20
0x582 DUP4
0x583 SUB
0x584 SWAP3
0x585 POP
0x586 PUSH2 0x565
0x589 JUMP
---
0x571: V341 = M[S0]
0x573: M[S1] = V341
0x574: V342 = 0x20
0x577: V343 = ADD S1 0x20
0x57a: V344 = 0x20
0x57d: V345 = ADD S0 0x20
0x580: V346 = 0x20
0x583: V347 = SUB S2 0x20
0x586: V348 = 0x565
0x589: JUMP 0x565
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S17, S16, S15, S14, V242, {0x0, 0x1}, V249, V309, V310, V311, V326, V332, V332, V335, V333, S2, S1, S0]
Stack pops: 3
Stack additions: [V347, V343, V345]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S17, S16, S15, S14, V242, {0x0, 0x1}, V249, V309, V310, V311, V326, V332, V332, V335, V333, V347, V343, V345]

================================

Block 0x58a
[0x58a:0x5c2]
---
Predecessors: [0x565]
Successors: [0x5c3, 0x5c4]
---
0x58a JUMPDEST
0x58b PUSH1 0x1
0x58d DUP4
0x58e PUSH1 0x20
0x590 SUB
0x591 PUSH2 0x100
0x594 EXP
0x595 SUB
0x596 DUP1
0x597 NOT
0x598 DUP3
0x599 MLOAD
0x59a AND
0x59b DUP2
0x59c DUP5
0x59d MLOAD
0x59e AND
0x59f DUP1
0x5a0 DUP3
0x5a1 OR
0x5a2 DUP6
0x5a3 MSTORE
0x5a4 POP
0x5a5 POP
0x5a6 POP
0x5a7 POP
0x5a8 POP
0x5a9 POP
0x5aa SWAP1
0x5ab POP
0x5ac ADD
0x5ad SWAP2
0x5ae POP
0x5af POP
0x5b0 PUSH1 0x40
0x5b2 MLOAD
0x5b3 DUP1
0x5b4 SWAP2
0x5b5 SUB
0x5b6 SWAP1
0x5b7 SHA3
0x5b8 PUSH1 0x1
0x5ba SWAP1
0x5bb DIV
0x5bc DUP2
0x5bd ISZERO
0x5be ISZERO
0x5bf PUSH2 0x5c4
0x5c2 JUMPI
---
0x58a: JUMPDEST 
0x58b: V349 = 0x1
0x58e: V350 = 0x20
0x590: V351 = SUB 0x20 S2
0x591: V352 = 0x100
0x594: V353 = EXP 0x100 V351
0x595: V354 = SUB V353 0x1
0x597: V355 = NOT V354
0x599: V356 = M[S0]
0x59a: V357 = AND V356 V355
0x59d: V358 = M[S1]
0x59e: V359 = AND V358 V354
0x5a1: V360 = OR V357 V359
0x5a3: M[S1] = V360
0x5ac: V361 = ADD V333 V332
0x5b0: V362 = 0x40
0x5b2: V363 = M[0x40]
0x5b5: V364 = SUB V361 V363
0x5b7: V365 = SHA3 V363 V364
0x5b8: V366 = 0x1
0x5bb: V367 = DIV V365 0x1
0x5bd: V368 = ISZERO V311
0x5be: V369 = ISZERO V368
0x5bf: V370 = 0x5c4
0x5c2: JUMPI 0x5c4 V369
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S17, S16, S15, S14, V242, {0x0, 0x1}, V249, V309, V310, V311, V326, V332, V332, V335, V333, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V367]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S17, S16, S15, S14, V242, {0x0, 0x1}, V249, V309, V310, V311, V367]

================================

Block 0x5c3
[0x5c3:0x5c3]
---
Predecessors: [0x58a]
Successors: []
---
0x5c3 INVALID
---
0x5c3: INVALID 
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, S7, V242, {0x0, 0x1}, V249, V309, V310, V311, V367]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, S7, V242, {0x0, 0x1}, V249, V309, V310, V311, V367]

================================

Block 0x5c4
[0x5c4:0x5fa]
---
Predecessors: [0x58a]
Successors: [0x5fb]
---
0x5c4 JUMPDEST
0x5c5 DIV
0x5c6 DIFFICULTY
0x5c7 TIMESTAMP
0x5c8 ADD
0x5c9 ADD
0x5ca ADD
0x5cb ADD
0x5cc ADD
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 PUSH1 0x20
0x5d2 ADD
0x5d3 DUP1
0x5d4 DUP3
0x5d5 DUP2
0x5d6 MSTORE
0x5d7 PUSH1 0x20
0x5d9 ADD
0x5da SWAP2
0x5db POP
0x5dc POP
0x5dd PUSH1 0x40
0x5df MLOAD
0x5e0 PUSH1 0x20
0x5e2 DUP2
0x5e3 DUP4
0x5e4 SUB
0x5e5 SUB
0x5e6 DUP2
0x5e7 MSTORE
0x5e8 SWAP1
0x5e9 PUSH1 0x40
0x5eb MSTORE
0x5ec PUSH1 0x40
0x5ee MLOAD
0x5ef DUP1
0x5f0 DUP3
0x5f1 DUP1
0x5f2 MLOAD
0x5f3 SWAP1
0x5f4 PUSH1 0x20
0x5f6 ADD
0x5f7 SWAP1
0x5f8 DUP1
0x5f9 DUP4
0x5fa DUP4
---
0x5c4: JUMPDEST 
0x5c5: V371 = DIV V367 V311
0x5c6: V372 = DIFFICULTY
0x5c7: V373 = TIMESTAMP
0x5c8: V374 = ADD V373 V372
0x5c9: V375 = ADD V374 V371
0x5ca: V376 = ADD V375 V310
0x5cb: V377 = ADD V376 V309
0x5cc: V378 = ADD V377 V249
0x5cd: V379 = 0x40
0x5cf: V380 = M[0x40]
0x5d0: V381 = 0x20
0x5d2: V382 = ADD 0x20 V380
0x5d6: M[V382] = V378
0x5d7: V383 = 0x20
0x5d9: V384 = ADD 0x20 V382
0x5dd: V385 = 0x40
0x5df: V386 = M[0x40]
0x5e0: V387 = 0x20
0x5e4: V388 = SUB V384 V386
0x5e5: V389 = SUB V388 0x20
0x5e7: M[V386] = V389
0x5e9: V390 = 0x40
0x5eb: M[0x40] = V384
0x5ec: V391 = 0x40
0x5ee: V392 = M[0x40]
0x5f2: V393 = M[V386]
0x5f4: V394 = 0x20
0x5f6: V395 = ADD 0x20 V386
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, S7, V242, {0x0, 0x1}, V249, V309, V310, V311, V367]
Stack pops: 5
Stack additions: [V386, V392, V392, V395, V393, V393, V392, V395]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, S7, V242, {0x0, 0x1}, V386, V392, V392, V395, V393, V393, V392, V395]

================================

Block 0x5fb
[0x5fb:0x605]
---
Predecessors: [0x5c4, 0x606]
Successors: [0x606, 0x620]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x20
0x5fe DUP4
0x5ff LT
0x600 ISZERO
0x601 ISZERO
0x602 PUSH2 0x620
0x605 JUMPI
---
0x5fb: JUMPDEST 
0x5fc: V396 = 0x20
0x5ff: V397 = LT S2 0x20
0x600: V398 = ISZERO V397
0x601: V399 = ISZERO V398
0x602: V400 = 0x620
0x605: JUMPI 0x620 V399
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, S10, V242, {0x0, 0x1}, V386, V392, V392, V395, V393, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, S10, V242, {0x0, 0x1}, V386, V392, V392, V395, V393, S2, S1, S0]

================================

Block 0x606
[0x606:0x61f]
---
Predecessors: [0x5fb]
Successors: [0x5fb]
---
0x606 DUP1
0x607 MLOAD
0x608 DUP3
0x609 MSTORE
0x60a PUSH1 0x20
0x60c DUP3
0x60d ADD
0x60e SWAP2
0x60f POP
0x610 PUSH1 0x20
0x612 DUP2
0x613 ADD
0x614 SWAP1
0x615 POP
0x616 PUSH1 0x20
0x618 DUP4
0x619 SUB
0x61a SWAP3
0x61b POP
0x61c PUSH2 0x5fb
0x61f JUMP
---
0x607: V401 = M[S0]
0x609: M[S1] = V401
0x60a: V402 = 0x20
0x60d: V403 = ADD S1 0x20
0x610: V404 = 0x20
0x613: V405 = ADD S0 0x20
0x616: V406 = 0x20
0x619: V407 = SUB S2 0x20
0x61c: V408 = 0x5fb
0x61f: JUMP 0x5fb
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, S10, V242, {0x0, 0x1}, V386, V392, V392, V395, V393, S2, S1, S0]
Stack pops: 3
Stack additions: [V407, V403, V405]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, S10, V242, {0x0, 0x1}, V386, V392, V392, V395, V393, V407, V403, V405]

================================

Block 0x620
[0x620:0x660]
---
Predecessors: [0x5fb]
Successors: [0x661, 0x662]
---
0x620 JUMPDEST
0x621 PUSH1 0x1
0x623 DUP4
0x624 PUSH1 0x20
0x626 SUB
0x627 PUSH2 0x100
0x62a EXP
0x62b SUB
0x62c DUP1
0x62d NOT
0x62e DUP3
0x62f MLOAD
0x630 AND
0x631 DUP2
0x632 DUP5
0x633 MLOAD
0x634 AND
0x635 DUP1
0x636 DUP3
0x637 OR
0x638 DUP6
0x639 MSTORE
0x63a POP
0x63b POP
0x63c POP
0x63d POP
0x63e POP
0x63f POP
0x640 SWAP1
0x641 POP
0x642 ADD
0x643 SWAP2
0x644 POP
0x645 POP
0x646 PUSH1 0x40
0x648 MLOAD
0x649 DUP1
0x64a SWAP2
0x64b SUB
0x64c SWAP1
0x64d SHA3
0x64e PUSH1 0x1
0x650 SWAP1
0x651 DIV
0x652 SWAP3
0x653 POP
0x654 DUP2
0x655 PUSH2 0x3e8
0x658 DUP1
0x659 DUP6
0x65a DUP2
0x65b ISZERO
0x65c ISZERO
0x65d PUSH2 0x662
0x660 JUMPI
---
0x620: JUMPDEST 
0x621: V409 = 0x1
0x624: V410 = 0x20
0x626: V411 = SUB 0x20 S2
0x627: V412 = 0x100
0x62a: V413 = EXP 0x100 V411
0x62b: V414 = SUB V413 0x1
0x62d: V415 = NOT V414
0x62f: V416 = M[S0]
0x630: V417 = AND V416 V415
0x633: V418 = M[S1]
0x634: V419 = AND V418 V414
0x637: V420 = OR V417 V419
0x639: M[S1] = V420
0x642: V421 = ADD V393 V392
0x646: V422 = 0x40
0x648: V423 = M[0x40]
0x64b: V424 = SUB V421 V423
0x64d: V425 = SHA3 V423 V424
0x64e: V426 = 0x1
0x651: V427 = DIV V425 0x1
0x655: V428 = 0x3e8
0x65b: V429 = ISZERO 0x3e8
0x65c: V430 = ISZERO 0x0
0x65d: V431 = 0x662
0x660: JUMPI 0x662 0x1
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, S10, V242, {0x0, 0x1}, V386, V392, V392, V395, V393, S2, S1, S0]
Stack pops: 11
Stack additions: [V427, S9, S8, S9, 0x3e8, 0x3e8, V427]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, V427, V242, {0x0, 0x1}, V242, 0x3e8, 0x3e8, V427]

================================

Block 0x661
[0x661:0x661]
---
Predecessors: [0x620]
Successors: []
---
0x661 INVALID
---
0x661: INVALID 
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, V427, V242, {0x0, 0x1}, V242, 0x3e8, 0x3e8, V427]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, V427, V242, {0x0, 0x1}, V242, 0x3e8, 0x3e8, V427]

================================

Block 0x662
[0x662:0x66d]
---
Predecessors: [0x620]
Successors: [0x66e, 0x7ce]
---
0x662 JUMPDEST
0x663 DIV
0x664 MUL
0x665 DUP5
0x666 SUB
0x667 LT
0x668 ISZERO
0x669 ISZERO
0x66a PUSH2 0x7ce
0x66d JUMPI
---
0x662: JUMPDEST 
0x663: V432 = DIV V427 0x3e8
0x664: V433 = MUL V432 0x3e8
0x666: V434 = SUB V427 V433
0x667: V435 = LT V434 V242
0x668: V436 = ISZERO V435
0x669: V437 = ISZERO V436
0x66a: V438 = 0x7ce
0x66d: JUMPI 0x7ce V437
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, V427, V242, {0x0, 0x1}, V242, 0x3e8, 0x3e8, V427]
Stack pops: 7
Stack additions: [S6, S5, S4]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, V427, V242, {0x0, 0x1}]

================================

Block 0x66e
[0x66e:0x761]
---
Predecessors: [0x662]
Successors: [0x762]
---
0x66e PUSH1 0xd6
0x670 PUSH1 0x94
0x672 DUP8
0x673 PUSH1 0x1
0x675 PUSH1 0x40
0x677 MLOAD
0x678 PUSH1 0x20
0x67a ADD
0x67b DUP1
0x67c DUP6
0x67d PUSH1 0xff
0x67f AND
0x680 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x6a1 MUL
0x6a2 DUP2
0x6a3 MSTORE
0x6a4 PUSH1 0x1
0x6a6 ADD
0x6a7 DUP5
0x6a8 PUSH1 0xff
0x6aa AND
0x6ab PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x6cc MUL
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x1
0x6d1 ADD
0x6d2 DUP4
0x6d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e8 AND
0x6e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fe AND
0x6ff PUSH13 0x1000000000000000000000000
0x70d MUL
0x70e DUP2
0x70f MSTORE
0x710 PUSH1 0x14
0x712 ADD
0x713 DUP3
0x714 PUSH1 0xff
0x716 AND
0x717 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x738 MUL
0x739 DUP2
0x73a MSTORE
0x73b PUSH1 0x1
0x73d ADD
0x73e SWAP5
0x73f POP
0x740 POP
0x741 POP
0x742 POP
0x743 POP
0x744 PUSH1 0x40
0x746 MLOAD
0x747 PUSH1 0x20
0x749 DUP2
0x74a DUP4
0x74b SUB
0x74c SUB
0x74d DUP2
0x74e MSTORE
0x74f SWAP1
0x750 PUSH1 0x40
0x752 MSTORE
0x753 PUSH1 0x40
0x755 MLOAD
0x756 DUP1
0x757 DUP3
0x758 DUP1
0x759 MLOAD
0x75a SWAP1
0x75b PUSH1 0x20
0x75d ADD
0x75e SWAP1
0x75f DUP1
0x760 DUP4
0x761 DUP4
---
0x66e: V439 = 0xd6
0x670: V440 = 0x94
0x673: V441 = 0x1
0x675: V442 = 0x40
0x677: V443 = M[0x40]
0x678: V444 = 0x20
0x67a: V445 = ADD 0x20 V443
0x67d: V446 = 0xff
0x67f: V447 = AND 0xff 0xd6
0x680: V448 = 0x100000000000000000000000000000000000000000000000000000000000000
0x6a1: V449 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x6a3: M[V445] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x6a4: V450 = 0x1
0x6a6: V451 = ADD 0x1 V445
0x6a8: V452 = 0xff
0x6aa: V453 = AND 0xff 0x94
0x6ab: V454 = 0x100000000000000000000000000000000000000000000000000000000000000
0x6cc: V455 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x6ce: M[V451] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x6cf: V456 = 0x1
0x6d1: V457 = ADD 0x1 V451
0x6d3: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e8: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6e9: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fe: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x6ff: V462 = 0x1000000000000000000000000
0x70d: V463 = MUL 0x1000000000000000000000000 V461
0x70f: M[V457] = V463
0x710: V464 = 0x14
0x712: V465 = ADD 0x14 V457
0x714: V466 = 0xff
0x716: V467 = AND 0xff 0x1
0x717: V468 = 0x100000000000000000000000000000000000000000000000000000000000000
0x738: V469 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x73a: M[V465] = 0x100000000000000000000000000000000000000000000000000000000000000
0x73b: V470 = 0x1
0x73d: V471 = ADD 0x1 V465
0x744: V472 = 0x40
0x746: V473 = M[0x40]
0x747: V474 = 0x20
0x74b: V475 = SUB V471 V473
0x74c: V476 = SUB V475 0x20
0x74e: M[V473] = V476
0x750: V477 = 0x40
0x752: M[0x40] = V471
0x753: V478 = 0x40
0x755: V479 = M[0x40]
0x759: V480 = M[V473]
0x75b: V481 = 0x20
0x75d: V482 = ADD 0x20 V473
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, V427, V242, {0x0, 0x1}]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V473, V479, V479, V482, V480, V480, V479, V482]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, V427, V242, {0x0, 0x1}, V473, V479, V479, V482, V480, V480, V479, V482]

================================

Block 0x762
[0x762:0x76c]
---
Predecessors: [0x66e, 0x76d]
Successors: [0x76d, 0x787]
---
0x762 JUMPDEST
0x763 PUSH1 0x20
0x765 DUP4
0x766 LT
0x767 ISZERO
0x768 ISZERO
0x769 PUSH2 0x787
0x76c JUMPI
---
0x762: JUMPDEST 
0x763: V483 = 0x20
0x766: V484 = LT S2 0x20
0x767: V485 = ISZERO V484
0x768: V486 = ISZERO V485
0x769: V487 = 0x787
0x76c: JUMPI 0x787 V486
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, V427, V242, {0x0, 0x1}, V473, V479, V479, V482, V480, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, V427, V242, {0x0, 0x1}, V473, V479, V479, V482, V480, S2, S1, S0]

================================

Block 0x76d
[0x76d:0x786]
---
Predecessors: [0x762]
Successors: [0x762]
---
0x76d DUP1
0x76e MLOAD
0x76f DUP3
0x770 MSTORE
0x771 PUSH1 0x20
0x773 DUP3
0x774 ADD
0x775 SWAP2
0x776 POP
0x777 PUSH1 0x20
0x779 DUP2
0x77a ADD
0x77b SWAP1
0x77c POP
0x77d PUSH1 0x20
0x77f DUP4
0x780 SUB
0x781 SWAP3
0x782 POP
0x783 PUSH2 0x762
0x786 JUMP
---
0x76e: V488 = M[S0]
0x770: M[S1] = V488
0x771: V489 = 0x20
0x774: V490 = ADD S1 0x20
0x777: V491 = 0x20
0x77a: V492 = ADD S0 0x20
0x77d: V493 = 0x20
0x780: V494 = SUB S2 0x20
0x783: V495 = 0x762
0x786: JUMP 0x762
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, V427, V242, {0x0, 0x1}, V473, V479, V479, V482, V480, S2, S1, S0]
Stack pops: 3
Stack additions: [V494, V490, V492]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, V427, V242, {0x0, 0x1}, V473, V479, V479, V482, V480, V494, V490, V492]

================================

Block 0x787
[0x787:0x7cd]
---
Predecessors: [0x762]
Successors: [0x7da]
---
0x787 JUMPDEST
0x788 PUSH1 0x1
0x78a DUP4
0x78b PUSH1 0x20
0x78d SUB
0x78e PUSH2 0x100
0x791 EXP
0x792 SUB
0x793 DUP1
0x794 NOT
0x795 DUP3
0x796 MLOAD
0x797 AND
0x798 DUP2
0x799 DUP5
0x79a MLOAD
0x79b AND
0x79c DUP1
0x79d DUP3
0x79e OR
0x79f DUP6
0x7a0 MSTORE
0x7a1 POP
0x7a2 POP
0x7a3 POP
0x7a4 POP
0x7a5 POP
0x7a6 POP
0x7a7 SWAP1
0x7a8 POP
0x7a9 ADD
0x7aa SWAP2
0x7ab POP
0x7ac POP
0x7ad PUSH1 0x40
0x7af MLOAD
0x7b0 DUP1
0x7b1 SWAP2
0x7b2 SUB
0x7b3 SWAP1
0x7b4 SHA3
0x7b5 PUSH1 0x1
0x7b7 SWAP1
0x7b8 DIV
0x7b9 SWAP6
0x7ba POP
0x7bb DUP5
0x7bc DUP1
0x7bd PUSH1 0x1
0x7bf ADD
0x7c0 SWAP6
0x7c1 POP
0x7c2 POP
0x7c3 PUSH1 0x6
0x7c5 SLOAD
0x7c6 DUP5
0x7c7 ADD
0x7c8 SWAP4
0x7c9 POP
0x7ca PUSH2 0x7da
0x7cd JUMP
---
0x787: JUMPDEST 
0x788: V496 = 0x1
0x78b: V497 = 0x20
0x78d: V498 = SUB 0x20 S2
0x78e: V499 = 0x100
0x791: V500 = EXP 0x100 V498
0x792: V501 = SUB V500 0x1
0x794: V502 = NOT V501
0x796: V503 = M[S0]
0x797: V504 = AND V503 V502
0x79a: V505 = M[S1]
0x79b: V506 = AND V505 V501
0x79e: V507 = OR V504 V506
0x7a0: M[S1] = V507
0x7a9: V508 = ADD V480 V479
0x7ad: V509 = 0x40
0x7af: V510 = M[0x40]
0x7b2: V511 = SUB V508 V510
0x7b4: V512 = SHA3 V510 V511
0x7b5: V513 = 0x1
0x7b8: V514 = DIV V512 0x1
0x7bd: V515 = 0x1
0x7bf: V516 = ADD 0x1 S12
0x7c3: V517 = 0x6
0x7c5: V518 = S[0x6]
0x7c7: V519 = ADD S11 V518
0x7ca: V520 = 0x7da
0x7cd: JUMP 0x7da
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S13, S12, S11, V427, V242, {0x0, 0x1}, V473, V479, V479, V482, V480, S2, S1, S0]
Stack pops: 14
Stack additions: [V514, V516, V519, S10, S9, S8]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V514, V516, V519, V427, V242, {0x0, 0x1}]

================================

Block 0x7ce
[0x7ce:0x7d9]
---
Predecessors: [0x662]
Successors: [0x7da]
---
0x7ce JUMPDEST
0x7cf PUSH1 0x1
0x7d1 SWAP1
0x7d2 POP
0x7d3 PUSH1 0x7
0x7d5 SLOAD
0x7d6 DUP5
0x7d7 ADD
0x7d8 SWAP4
0x7d9 POP
---
0x7ce: JUMPDEST 
0x7cf: V521 = 0x1
0x7d3: V522 = 0x7
0x7d5: V523 = S[0x7]
0x7d7: V524 = ADD S3 V523
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, V427, V242, {0x0, 0x1}]
Stack pops: 4
Stack additions: [V524, S2, S1, 0x1]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, V524, V427, V242, 0x1]

================================

Block 0x7da
[0x7da:0x7de]
---
Predecessors: [0x787, 0x7ce]
Successors: [0x424]
---
0x7da JUMPDEST
0x7db PUSH2 0x424
0x7de JUMP
---
0x7da: JUMPDEST 
0x7db: V525 = 0x424
0x7de: JUMP 0x424
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, V427, V242, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, V427, V242, {0x0, 0x1}]

================================

Block 0x7df
[0x7df:0x7f2]
---
Predecessors: [0x424]
Successors: [0x1c6]
---
0x7df JUMPDEST
0x7e0 DUP4
0x7e1 DUP6
0x7e2 DUP8
0x7e3 SWAP9
0x7e4 POP
0x7e5 SWAP9
0x7e6 POP
0x7e7 SWAP9
0x7e8 POP
0x7e9 POP
0x7ea POP
0x7eb POP
0x7ec POP
0x7ed POP
0x7ee POP
0x7ef SWAP1
0x7f0 SWAP2
0x7f1 SWAP3
0x7f2 JUMP
---
0x7df: JUMPDEST 
0x7f2: JUMP 0x1c6
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S5, S4, S3, S2, V242, {0x0, 0x1}]
Stack pops: 10
Stack additions: [S3, S4, S5]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, S3, S4, S5]

================================

Block 0x7f3
[0x7f3:0x7f5]
---
Predecessors: [0x1e7]
Successors: [0x7f6]
---
0x7f3 JUMPDEST
0x7f4 PUSH1 0x0
---
0x7f3: JUMPDEST 
0x7f4: V526 = 0x0
---
Entry stack: [V11, 0x7d, S5, S4, S3, 0x1f0, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x7d, S5, S4, S3, 0x1f0, S1, S0, 0x0]

================================

Block 0x7f6
[0x7f6:0x7fe]
---
Predecessors: [0x7f3, 0x88c]
Successors: [0x7ff, 0x89b]
---
0x7f6 JUMPDEST
0x7f7 DUP3
0x7f8 DUP2
0x7f9 LT
0x7fa ISZERO
0x7fb PUSH2 0x89b
0x7fe JUMPI
---
0x7f6: JUMPDEST 
0x7f9: V527 = LT S0 S2
0x7fa: V528 = ISZERO V527
0x7fb: V529 = 0x89b
0x7fe: JUMPI 0x89b V528
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]

================================

Block 0x7ff
[0x7ff:0x80c]
---
Predecessors: [0x7f6]
Successors: [0x80d, 0x868]
---
0x7ff DUP3
0x800 DUP2
0x801 DUP1
0x802 PUSH1 0x1
0x804 ADD
0x805 SWAP3
0x806 POP
0x807 EQ
0x808 ISZERO
0x809 PUSH2 0x868
0x80c JUMPI
---
0x802: V530 = 0x1
0x804: V531 = ADD 0x1 S0
0x807: V532 = EQ S0 S2
0x808: V533 = ISZERO V532
0x809: V534 = 0x868
0x80c: JUMPI 0x868 V533
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V531]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V531]

================================

Block 0x80d
[0x80d:0x848]
---
Predecessors: [0x7ff]
Successors: [0x8a0]
---
0x80d DUP2
0x80e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x823 AND
0x824 PUSH8 0x16345785d8a0000
0x82d PUSH1 0x40
0x82f MLOAD
0x830 PUSH1 0x0
0x832 PUSH1 0x40
0x834 MLOAD
0x835 DUP1
0x836 DUP4
0x837 SUB
0x838 DUP2
0x839 DUP6
0x83a DUP8
0x83b GAS
0x83c CALL
0x83d SWAP3
0x83e POP
0x83f POP
0x840 POP
0x841 POP
0x842 PUSH2 0x849
0x845 PUSH2 0x8a0
0x848 JUMP
---
0x80e: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x823: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x824: V537 = 0x16345785d8a0000
0x82d: V538 = 0x40
0x82f: V539 = M[0x40]
0x830: V540 = 0x0
0x832: V541 = 0x40
0x834: V542 = M[0x40]
0x837: V543 = SUB V539 V542
0x83b: V544 = GAS
0x83c: V545 = CALL V544 V536 0x16345785d8a0000 V542 V543 V542 0x0
0x842: V546 = 0x849
0x845: V547 = 0x8a0
0x848: JUMP 0x8a0
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V531]
Stack pops: 2
Stack additions: [S1, S0, 0x849]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V531, 0x849]

================================

Block 0x849
[0x849:0x85b]
---
Predecessors: [0x8a0]
Successors: [0x85c, 0x865]
---
0x849 JUMPDEST
0x84a PUSH1 0x40
0x84c MLOAD
0x84d DUP1
0x84e SWAP2
0x84f SUB
0x850 SWAP1
0x851 PUSH1 0x0
0x853 CREATE
0x854 DUP1
0x855 ISZERO
0x856 DUP1
0x857 ISZERO
0x858 PUSH2 0x865
0x85b JUMPI
---
0x849: JUMPDEST 
0x84a: V548 = 0x40
0x84c: V549 = M[0x40]
0x84f: V550 = SUB V581 V549
0x851: V551 = 0x0
0x853: V552 = CREATE 0x0 V549 V550
0x855: V553 = ISZERO V552
0x857: V554 = ISZERO V553
0x858: V555 = 0x865
0x85b: JUMPI 0x865 V554
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, V581]
Stack pops: 1
Stack additions: [V552, V553]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, V552, V553]

================================

Block 0x85c
[0x85c:0x864]
---
Predecessors: [0x849]
Successors: []
---
0x85c RETURNDATASIZE
0x85d PUSH1 0x0
0x85f DUP1
0x860 RETURNDATACOPY
0x861 RETURNDATASIZE
0x862 PUSH1 0x0
0x864 REVERT
---
0x85c: V556 = RETURNDATASIZE
0x85d: V557 = 0x0
0x860: RETURNDATACOPY 0x0 0x0 V556
0x861: V558 = RETURNDATASIZE
0x862: V559 = 0x0
0x864: REVERT 0x0 V558
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V531, V552, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V531, V552, V553]

================================

Block 0x865
[0x865:0x867]
---
Predecessors: [0x849]
Successors: [0x868]
---
0x865 JUMPDEST
0x866 POP
0x867 POP
---
0x865: JUMPDEST 
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V531, V552, V553]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V531]

================================

Block 0x868
[0x868:0x86f]
---
Predecessors: [0x7ff, 0x865]
Successors: [0x8b0]
---
0x868 JUMPDEST
0x869 PUSH2 0x870
0x86c PUSH2 0x8b0
0x86f JUMP
---
0x868: JUMPDEST 
0x869: V560 = 0x870
0x86c: V561 = 0x8b0
0x86f: JUMP 0x8b0
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V531]
Stack pops: 0
Stack additions: [0x870]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V531, 0x870]

================================

Block 0x870
[0x870:0x882]
---
Predecessors: [0x8b0]
Successors: [0x883, 0x88c]
---
0x870 JUMPDEST
0x871 PUSH1 0x40
0x873 MLOAD
0x874 DUP1
0x875 SWAP2
0x876 SUB
0x877 SWAP1
0x878 PUSH1 0x0
0x87a CREATE
0x87b DUP1
0x87c ISZERO
0x87d DUP1
0x87e ISZERO
0x87f PUSH2 0x88c
0x882 JUMPI
---
0x870: JUMPDEST 
0x871: V562 = 0x40
0x873: V563 = M[0x40]
0x876: V564 = SUB V586 V563
0x878: V565 = 0x0
0x87a: V566 = CREATE 0x0 V563 V564
0x87c: V567 = ISZERO V566
0x87e: V568 = ISZERO V567
0x87f: V569 = 0x88c
0x882: JUMPI 0x88c V568
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, V586]
Stack pops: 1
Stack additions: [V566, V567]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, V566, V567]

================================

Block 0x883
[0x883:0x88b]
---
Predecessors: [0x870]
Successors: []
---
0x883 RETURNDATASIZE
0x884 PUSH1 0x0
0x886 DUP1
0x887 RETURNDATACOPY
0x888 RETURNDATASIZE
0x889 PUSH1 0x0
0x88b REVERT
---
0x883: V570 = RETURNDATASIZE
0x884: V571 = 0x0
0x887: RETURNDATACOPY 0x0 0x0 V570
0x888: V572 = RETURNDATASIZE
0x889: V573 = 0x0
0x88b: REVERT 0x0 V572
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V531, V566, V567]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V531, V566, V567]

================================

Block 0x88c
[0x88c:0x89a]
---
Predecessors: [0x870]
Successors: [0x7f6]
---
0x88c JUMPDEST
0x88d POP
0x88e POP
0x88f DUP1
0x890 DUP1
0x891 PUSH1 0x1
0x893 ADD
0x894 SWAP2
0x895 POP
0x896 POP
0x897 PUSH2 0x7f6
0x89a JUMP
---
0x88c: JUMPDEST 
0x891: V574 = 0x1
0x893: V575 = ADD 0x1 V531
0x897: V576 = 0x7f6
0x89a: JUMP 0x7f6
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V531, V566, V567]
Stack pops: 3
Stack additions: [V575]
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V575]

================================

Block 0x89b
[0x89b:0x89f]
---
Predecessors: [0x7f6]
Successors: [0x1f0]
---
0x89b JUMPDEST
0x89c POP
0x89d POP
0x89e POP
0x89f JUMP
---
0x89b: JUMPDEST 
0x89f: JUMP 0x1f0
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x7d, S6, S5, S4]

================================

Block 0x8a0
[0x8a0:0x8af]
---
Predecessors: [0x80d]
Successors: [0x849]
---
0x8a0 JUMPDEST
0x8a1 PUSH1 0x40
0x8a3 MLOAD
0x8a4 PUSH2 0x1b9
0x8a7 DUP1
0x8a8 PUSH2 0x8c0
0x8ab DUP4
0x8ac CODECOPY
0x8ad ADD
0x8ae SWAP1
0x8af JUMP
---
0x8a0: JUMPDEST 
0x8a1: V577 = 0x40
0x8a3: V578 = M[0x40]
0x8a4: V579 = 0x1b9
0x8a8: V580 = 0x8c0
0x8ac: CODECOPY V578 0x8c0 0x1b9
0x8ad: V581 = ADD 0x1b9 V578
0x8af: JUMP 0x849
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, 0x849]
Stack pops: 1
Stack additions: [V581]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, V581]

================================

Block 0x8b0
[0x8b0:0x8be]
---
Predecessors: [0x868]
Successors: [0x870]
---
0x8b0 JUMPDEST
0x8b1 PUSH1 0x40
0x8b3 MLOAD
0x8b4 PUSH1 0x52
0x8b6 DUP1
0x8b7 PUSH2 0xa79
0x8ba DUP4
0x8bb CODECOPY
0x8bc ADD
0x8bd SWAP1
0x8be JUMP
---
0x8b0: JUMPDEST 
0x8b1: V582 = 0x40
0x8b3: V583 = M[0x40]
0x8b4: V584 = 0x52
0x8b7: V585 = 0xa79
0x8bb: CODECOPY V583 0xa79 0x52
0x8bc: V586 = ADD 0x52 V583
0x8be: JUMP 0x870
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, 0x870]
Stack pops: 1
Stack additions: [V586]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V531, V586]

================================

Block 0x8bf
[0x8bf:0x91f]
---
Predecessors: []
Successors: [0x920]
---
0x8bf STOP
0x8c0 PUSH1 0x80
0x8c2 PUSH1 0x40
0x8c4 MSTORE
0x8c5 PUSH20 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x8da PUSH1 0x0
0x8dc DUP1
0x8dd PUSH2 0x100
0x8e0 EXP
0x8e1 DUP2
0x8e2 SLOAD
0x8e3 DUP2
0x8e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f9 MUL
0x8fa NOT
0x8fb AND
0x8fc SWAP1
0x8fd DUP4
0x8fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x913 AND
0x914 MUL
0x915 OR
0x916 SWAP1
0x917 SSTORE
0x918 POP
0x919 CALLVALUE
0x91a DUP1
0x91b ISZERO
0x91c PUSH2 0x64
0x91f JUMPI
---
0x8bf: STOP 
0x8c0: V587 = 0x80
0x8c2: V588 = 0x40
0x8c4: M[0x40] = 0x80
0x8c5: V589 = 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x8da: V590 = 0x0
0x8dd: V591 = 0x100
0x8e0: V592 = EXP 0x100 0x0
0x8e2: V593 = S[0x0]
0x8e4: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f9: V595 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8fa: V596 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8fb: V597 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V593
0x8fe: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0x913: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x914: V600 = MUL 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c 0x1
0x915: V601 = OR 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c V597
0x917: S[0x0] = V601
0x919: V602 = CALLVALUE
0x91b: V603 = ISZERO V602
0x91c: V604 = 0x64
0x91f: THROWI V603
---
Entry stack: []
Stack pops: 0
Stack additions: [V602]
Exit stack: []

================================

Block 0x920
[0x920:0x980]
---
Predecessors: [0x8bf]
Successors: [0x981]
---
0x920 PUSH1 0x0
0x922 DUP1
0x923 REVERT
0x924 JUMPDEST
0x925 POP
0x926 PUSH1 0x0
0x928 DUP1
0x929 SWAP1
0x92a SLOAD
0x92b SWAP1
0x92c PUSH2 0x100
0x92f EXP
0x930 SWAP1
0x931 DIV
0x932 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x947 AND
0x948 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95d AND
0x95e PUSH8 0x16345785d8a0000
0x967 PUSH1 0x40
0x969 MLOAD
0x96a PUSH1 0x0
0x96c PUSH1 0x40
0x96e MLOAD
0x96f DUP1
0x970 DUP4
0x971 SUB
0x972 DUP2
0x973 DUP6
0x974 DUP8
0x975 GAS
0x976 CALL
0x977 SWAP3
0x978 POP
0x979 POP
0x97a POP
0x97b ISZERO
0x97c ISZERO
0x97d PUSH2 0x176
0x980 JUMPI
---
0x920: V605 = 0x0
0x923: REVERT 0x0 0x0
0x924: JUMPDEST 
0x926: V606 = 0x0
0x92a: V607 = S[0x0]
0x92c: V608 = 0x100
0x92f: V609 = EXP 0x100 0x0
0x931: V610 = DIV V607 0x1
0x932: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x947: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x948: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0x95d: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x95e: V615 = 0x16345785d8a0000
0x967: V616 = 0x40
0x969: V617 = M[0x40]
0x96a: V618 = 0x0
0x96c: V619 = 0x40
0x96e: V620 = M[0x40]
0x971: V621 = SUB V617 V620
0x975: V622 = GAS
0x976: V623 = CALL V622 V614 0x16345785d8a0000 V620 V621 V620 0x0
0x97b: V624 = ISZERO V623
0x97c: V625 = ISZERO V624
0x97d: V626 = 0x176
0x980: THROWI V625
---
Entry stack: [V602]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x981
[0x981:0xa00]
---
Predecessors: [0x920]
Successors: [0xa01]
---
0x981 PUSH1 0x0
0x983 DUP1
0x984 SWAP1
0x985 SLOAD
0x986 SWAP1
0x987 PUSH2 0x100
0x98a EXP
0x98b SWAP1
0x98c DIV
0x98d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a2 AND
0x9a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b8 AND
0x9b9 PUSH4 0x3ccfd60b
0x9be PUSH1 0x40
0x9c0 MLOAD
0x9c1 DUP2
0x9c2 PUSH4 0xffffffff
0x9c7 AND
0x9c8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9e6 MUL
0x9e7 DUP2
0x9e8 MSTORE
0x9e9 PUSH1 0x4
0x9eb ADD
0x9ec PUSH1 0x0
0x9ee PUSH1 0x40
0x9f0 MLOAD
0x9f1 DUP1
0x9f2 DUP4
0x9f3 SUB
0x9f4 DUP2
0x9f5 PUSH1 0x0
0x9f7 DUP8
0x9f8 DUP1
0x9f9 EXTCODESIZE
0x9fa ISZERO
0x9fb DUP1
0x9fc ISZERO
0x9fd PUSH2 0x145
0xa00 JUMPI
---
0x981: V627 = 0x0
0x985: V628 = S[0x0]
0x987: V629 = 0x100
0x98a: V630 = EXP 0x100 0x0
0x98c: V631 = DIV V628 0x1
0x98d: V632 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a2: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x9a3: V634 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b8: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0x9b9: V636 = 0x3ccfd60b
0x9be: V637 = 0x40
0x9c0: V638 = M[0x40]
0x9c2: V639 = 0xffffffff
0x9c7: V640 = AND 0xffffffff 0x3ccfd60b
0x9c8: V641 = 0x100000000000000000000000000000000000000000000000000000000
0x9e6: V642 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x9e8: M[V638] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x9e9: V643 = 0x4
0x9eb: V644 = ADD 0x4 V638
0x9ec: V645 = 0x0
0x9ee: V646 = 0x40
0x9f0: V647 = M[0x40]
0x9f3: V648 = SUB V644 V647
0x9f5: V649 = 0x0
0x9f9: V650 = EXTCODESIZE V635
0x9fa: V651 = ISZERO V650
0x9fc: V652 = ISZERO V651
0x9fd: V653 = 0x145
0xa00: THROWI V652
---
Entry stack: []
Stack pops: 0
Stack additions: [V635, 0x3ccfd60b, V644, 0x0, V647, V648, V647, 0x0, V635, V651]
Exit stack: [V635, 0x3ccfd60b, V644, 0x0, V647, V648, V647, 0x0, V635, V651]

================================

Block 0xa01
[0xa01:0xa0f]
---
Predecessors: [0x981]
Successors: [0xa10]
---
0xa01 PUSH1 0x0
0xa03 DUP1
0xa04 REVERT
0xa05 JUMPDEST
0xa06 POP
0xa07 GAS
0xa08 CALL
0xa09 ISZERO
0xa0a DUP1
0xa0b ISZERO
0xa0c PUSH2 0x159
0xa0f JUMPI
---
0xa01: V654 = 0x0
0xa04: REVERT 0x0 0x0
0xa05: JUMPDEST 
0xa07: V655 = GAS
0xa08: V656 = CALL V655 S1 S2 S3 S4 S5 S6
0xa09: V657 = ISZERO V656
0xa0b: V658 = ISZERO V657
0xa0c: V659 = 0x159
0xa0f: THROWI V658
---
Entry stack: [V635, 0x3ccfd60b, V644, 0x0, V647, V648, V647, 0x0, V635, V651]
Stack pops: 0
Stack additions: [V657]
Exit stack: []

================================

Block 0xa10
[0xa10:0xaf9]
---
Predecessors: [0xa01]
Successors: []
---
0xa10 RETURNDATASIZE
0xa11 PUSH1 0x0
0xa13 DUP1
0xa14 RETURNDATACOPY
0xa15 RETURNDATASIZE
0xa16 PUSH1 0x0
0xa18 REVERT
0xa19 JUMPDEST
0xa1a POP
0xa1b POP
0xa1c POP
0xa1d POP
0xa1e CALLER
0xa1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa34 AND
0xa35 SELFDESTRUCT
0xa36 JUMPDEST
0xa37 PUSH1 0x35
0xa39 DUP1
0xa3a PUSH2 0x184
0xa3d PUSH1 0x0
0xa3f CODECOPY
0xa40 PUSH1 0x0
0xa42 RETURN
0xa43 STOP
0xa44 PUSH1 0x80
0xa46 PUSH1 0x40
0xa48 MSTORE
0xa49 PUSH1 0x0
0xa4b DUP1
0xa4c REVERT
0xa4d STOP
0xa4e LOG1
0xa4f PUSH6 0x627a7a723058
0xa56 SHA3
0xa57 GAS
0xa58 PUSH16 0x4638a852fbcb3d04cec4a29ca812e1e
0xa69 MISSING 0xcd
0xa6a MISSING 0x5e
0xa6b MISSING 0x21
0xa6c CREATE2
0xa6d DUP9
0xa6e MISSING 0xec
0xa6f PUSH31 0x7257dd483fd6fa00296080604052348015600f57600080fd5b50603580601d
0xa8f PUSH1 0x0
0xa91 CODECOPY
0xa92 PUSH1 0x0
0xa94 RETURN
0xa95 STOP
0xa96 PUSH1 0x80
0xa98 PUSH1 0x40
0xa9a MSTORE
0xa9b PUSH1 0x0
0xa9d DUP1
0xa9e REVERT
0xa9f STOP
0xaa0 LOG1
0xaa1 PUSH6 0x627a7a723058
0xaa8 SHA3
0xaa9 LOG2
0xaaa CREATE
0xaab REVERT
0xaac PUSH21 0x136476fa74ba0c3c59e4481a30ff3663731bfcafe3
0xac2 LOG3
0xac3 PUSH25 0x8f43a1c2a50029a165627a7a723058203d58c9c35eb36b9674
0xadd DUP7
0xade EXTCODESIZE
0xadf PUSH10 0x938c03761a94ddecd855
0xaea MISSING 0xaf
0xaeb PUSH14 0xb54f50d2a436f4920029
---
0xa10: V660 = RETURNDATASIZE
0xa11: V661 = 0x0
0xa14: RETURNDATACOPY 0x0 0x0 V660
0xa15: V662 = RETURNDATASIZE
0xa16: V663 = 0x0
0xa18: REVERT 0x0 V662
0xa19: JUMPDEST 
0xa1e: V664 = CALLER
0xa1f: V665 = 0xffffffffffffffffffffffffffffffffffffffff
0xa34: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xa35: SELFDESTRUCT V666
0xa36: JUMPDEST 
0xa37: V667 = 0x35
0xa3a: V668 = 0x184
0xa3d: V669 = 0x0
0xa3f: CODECOPY 0x0 0x184 0x35
0xa40: V670 = 0x0
0xa42: RETURN 0x0 0x35
0xa43: STOP 
0xa44: V671 = 0x80
0xa46: V672 = 0x40
0xa48: M[0x40] = 0x80
0xa49: V673 = 0x0
0xa4c: REVERT 0x0 0x0
0xa4d: STOP 
0xa4e: LOG S0 S1 S2
0xa4f: V674 = 0x627a7a723058
0xa56: V675 = SHA3 0x627a7a723058 S3
0xa57: V676 = GAS
0xa58: V677 = 0x4638a852fbcb3d04cec4a29ca812e1e
0xa69: MISSING 0xcd
0xa6a: MISSING 0x5e
0xa6b: MISSING 0x21
0xa6c: V678 = CREATE2 S0 S1 S2 S3
0xa6e: MISSING 0xec
0xa6f: V679 = 0x7257dd483fd6fa00296080604052348015600f57600080fd5b50603580601d
0xa8f: V680 = 0x0
0xa91: CODECOPY 0x0 0x7257dd483fd6fa00296080604052348015600f57600080fd5b50603580601d S0
0xa92: V681 = 0x0
0xa94: RETURN 0x0 S1
0xa95: STOP 
0xa96: V682 = 0x80
0xa98: V683 = 0x40
0xa9a: M[0x40] = 0x80
0xa9b: V684 = 0x0
0xa9e: REVERT 0x0 0x0
0xa9f: STOP 
0xaa0: LOG S0 S1 S2
0xaa1: V685 = 0x627a7a723058
0xaa8: V686 = SHA3 0x627a7a723058 S3
0xaa9: LOG V686 S4 S5 S6
0xaaa: V687 = CREATE S7 S8 S9
0xaab: REVERT V687 S10
0xaac: V688 = 0x136476fa74ba0c3c59e4481a30ff3663731bfcafe3
0xac2: LOG 0x136476fa74ba0c3c59e4481a30ff3663731bfcafe3 S0 S1 S2 S3
0xac3: V689 = 0x8f43a1c2a50029a165627a7a723058203d58c9c35eb36b9674
0xade: V690 = EXTCODESIZE S9
0xadf: V691 = 0x938c03761a94ddecd855
0xaea: MISSING 0xaf
0xaeb: V692 = 0xb54f50d2a436f4920029
---
Entry stack: [V657]
Stack pops: 0
Stack additions: [0x4638a852fbcb3d04cec4a29ca812e1e, V676, V675, S11, V678, S4, S5, S6, S7, S8, S9, S10, S11, 0x938c03761a94ddecd855, V690, 0x8f43a1c2a50029a165627a7a723058203d58c9c35eb36b9674, S4, S5, S6, S7, S8, S9, 0xb54f50d2a436f4920029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0x7f, 0xd7, 0xdb, 0x151, 0x15a

Function 1:
Public function signature: 0xc2381296
Entry block: 0x68
Exit block: 0x661
Body: 0x68, 0x70, 0x74, 0x7d, 0x15d, 0x1ba, 0x1be, 0x1c6, 0x1e7, 0x1f0, 0x1f1, 0x1f6, 0x2f9, 0x304, 0x31e, 0x3de, 0x3e2, 0x3ed, 0x3f6, 0x408, 0x40c, 0x424, 0x42c, 0x498, 0x4a3, 0x4bd, 0x4f6, 0x4f7, 0x565, 0x570, 0x58a, 0x5c3, 0x5c4, 0x5fb, 0x606, 0x620, 0x661, 0x662, 0x66e, 0x762, 0x76d, 0x787, 0x7ce, 0x7da, 0x7df, 0x7f3, 0x7f6, 0x7ff, 0x80d, 0x849, 0x85c, 0x865, 0x868, 0x870, 0x883, 0x88c, 0x89b, 0x8a0, 0x8b0

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

