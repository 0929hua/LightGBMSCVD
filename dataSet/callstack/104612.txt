Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1561ae31
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1561ae31
0x3c: V13 = EQ 0x1561ae31 V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4d]
---
Predecessors: [0xd]
Successors: [0x4e, 0x52]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 DUP1
0x49 ISZERO
0x4a PUSH2 0x52
0x4d JUMPI
---
0x46: JUMPDEST 
0x47: V16 = CALLVALUE
0x49: V17 = ISZERO V16
0x4a: V18 = 0x52
0x4d: JUMPI 0x52 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V16]
Exit stack: [V11, V16]

================================

Block 0x4e
[0x4e:0x51]
---
Predecessors: [0x46]
Successors: []
---
0x4e PUSH1 0x0
0x50 DUP1
0x51 REVERT
---
0x4e: V19 = 0x0
0x51: REVERT 0x0 0x0
---
Entry stack: [V11, V16]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V16]

================================

Block 0x52
[0x52:0xf3]
---
Predecessors: [0x46]
Successors: [0x10e]
---
0x52 JUMPDEST
0x53 POP
0x54 PUSH2 0xf4
0x57 PUSH1 0x4
0x59 DUP1
0x5a CALLDATASIZE
0x5b SUB
0x5c DUP2
0x5d ADD
0x5e SWAP1
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP3
0x7e SWAP2
0x7f SWAP1
0x80 DUP1
0x81 CALLDATALOAD
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 SWAP1
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d SWAP3
0x9e SWAP2
0x9f SWAP1
0xa0 DUP1
0xa1 CALLDATALOAD
0xa2 SWAP1
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 DUP3
0xa8 ADD
0xa9 DUP1
0xaa CALLDATALOAD
0xab SWAP1
0xac PUSH1 0x20
0xae ADD
0xaf SWAP1
0xb0 DUP1
0xb1 DUP1
0xb2 PUSH1 0x20
0xb4 MUL
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 PUSH1 0x40
0xba MLOAD
0xbb SWAP1
0xbc DUP2
0xbd ADD
0xbe PUSH1 0x40
0xc0 MSTORE
0xc1 DUP1
0xc2 SWAP4
0xc3 SWAP3
0xc4 SWAP2
0xc5 SWAP1
0xc6 DUP2
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc DUP4
0xcd DUP4
0xce PUSH1 0x20
0xd0 MUL
0xd1 DUP1
0xd2 DUP3
0xd3 DUP5
0xd4 CALLDATACOPY
0xd5 DUP3
0xd6 ADD
0xd7 SWAP2
0xd8 POP
0xd9 POP
0xda POP
0xdb POP
0xdc POP
0xdd POP
0xde SWAP2
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP3
0xe2 SWAP1
0xe3 DUP1
0xe4 CALLDATALOAD
0xe5 SWAP1
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP1
0xea SWAP3
0xeb SWAP2
0xec SWAP1
0xed POP
0xee POP
0xef POP
0xf0 PUSH2 0x10e
0xf3 JUMP
---
0x52: JUMPDEST 
0x54: V20 = 0xf4
0x57: V21 = 0x4
0x5a: V22 = CALLDATASIZE
0x5b: V23 = SUB V22 0x4
0x5d: V24 = ADD 0x4 V23
0x61: V25 = CALLDATALOAD 0x4
0x62: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x79: V28 = 0x20
0x7b: V29 = ADD 0x20 0x4
0x81: V30 = CALLDATALOAD 0x24
0x82: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x99: V33 = 0x20
0x9b: V34 = ADD 0x20 0x24
0xa1: V35 = CALLDATALOAD 0x44
0xa3: V36 = 0x20
0xa5: V37 = ADD 0x20 0x44
0xa8: V38 = ADD 0x4 V35
0xaa: V39 = CALLDATALOAD V38
0xac: V40 = 0x20
0xae: V41 = ADD 0x20 V38
0xb2: V42 = 0x20
0xb4: V43 = MUL 0x20 V39
0xb5: V44 = 0x20
0xb7: V45 = ADD 0x20 V43
0xb8: V46 = 0x40
0xba: V47 = M[0x40]
0xbd: V48 = ADD V47 V45
0xbe: V49 = 0x40
0xc0: M[0x40] = V48
0xc8: M[V47] = V39
0xc9: V50 = 0x20
0xcb: V51 = ADD 0x20 V47
0xce: V52 = 0x20
0xd0: V53 = MUL 0x20 V39
0xd4: CALLDATACOPY V51 V41 V53
0xd6: V54 = ADD V51 V53
0xe4: V55 = CALLDATALOAD 0x64
0xe6: V56 = 0x20
0xe8: V57 = ADD 0x20 0x64
0xf0: V58 = 0x10e
0xf3: JUMP 0x10e
---
Entry stack: [V11, V16]
Stack pops: 1
Stack additions: [0xf4, V27, V32, V47, V55]
Exit stack: [V11, 0xf4, V27, V32, V47, V55]

================================

Block 0xf4
[0xf4:0x10d]
---
Predecessors: [0x29e]
Successors: []
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 DUP1
0xf9 DUP3
0xfa ISZERO
0xfb ISZERO
0xfc ISZERO
0xfd ISZERO
0xfe DUP2
0xff MSTORE
0x100 PUSH1 0x20
0x102 ADD
0x103 SWAP2
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 DUP1
0x10a SWAP2
0x10b SUB
0x10c SWAP1
0x10d RETURN
---
0xf4: JUMPDEST 
0xf5: V59 = 0x40
0xf7: V60 = M[0x40]
0xfa: V61 = ISZERO 0x1
0xfb: V62 = ISZERO 0x0
0xfc: V63 = ISZERO 0x1
0xfd: V64 = ISZERO 0x0
0xff: M[V60] = 0x1
0x100: V65 = 0x20
0x102: V66 = ADD 0x20 V60
0x106: V67 = 0x40
0x108: V68 = M[0x40]
0x10b: V69 = SUB V66 V68
0x10d: RETURN V68 V69
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x10e
[0x10e:0x11d]
---
Predecessors: [0x52]
Successors: [0x11e, 0x122]
---
0x10e JUMPDEST
0x10f PUSH1 0x0
0x111 DUP1
0x112 PUSH1 0x0
0x114 DUP1
0x115 DUP6
0x116 MLOAD
0x117 GT
0x118 ISZERO
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x10e: JUMPDEST 
0x10f: V70 = 0x0
0x112: V71 = 0x0
0x116: V72 = M[V47]
0x117: V73 = GT V72 0x0
0x118: V74 = ISZERO V73
0x119: V75 = ISZERO V74
0x11a: V76 = 0x122
0x11d: JUMPI 0x122 V75
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, 0x0, 0x0]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x10e]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V77 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, 0x0, 0x0]

================================

Block 0x122
[0x122:0x184]
---
Predecessors: [0x10e]
Successors: [0x185]
---
0x122 JUMPDEST
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 DUP1
0x128 PUSH32 0x7472616e7366657246726f6d28616464726573732c616464726573732c75696e
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x20
0x14d ADD
0x14e PUSH32 0x7432353629000000000000000000000000000000000000000000000000000000
0x16f DUP2
0x170 MSTORE
0x171 POP
0x172 PUSH1 0x25
0x174 ADD
0x175 SWAP1
0x176 POP
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e SHA3
0x17f SWAP2
0x180 POP
0x181 PUSH1 0x0
0x183 SWAP1
0x184 POP
---
0x122: JUMPDEST 
0x123: V78 = 0x40
0x125: V79 = M[0x40]
0x128: V80 = 0x7472616e7366657246726f6d28616464726573732c616464726573732c75696e
0x14a: M[V79] = 0x7472616e7366657246726f6d28616464726573732c616464726573732c75696e
0x14b: V81 = 0x20
0x14d: V82 = ADD 0x20 V79
0x14e: V83 = 0x7432353629000000000000000000000000000000000000000000000000000000
0x170: M[V82] = 0x7432353629000000000000000000000000000000000000000000000000000000
0x172: V84 = 0x25
0x174: V85 = ADD 0x25 V79
0x177: V86 = 0x40
0x179: V87 = M[0x40]
0x17c: V88 = SUB V85 V87
0x17e: V89 = SHA3 V87 V88
0x181: V90 = 0x0
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V89, 0x0]
Exit stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, 0x0]

================================

Block 0x185
[0x185:0x18e]
---
Predecessors: [0x122, 0x1d5]
Successors: [0x18f, 0x29e]
---
0x185 JUMPDEST
0x186 DUP5
0x187 MLOAD
0x188 DUP2
0x189 LT
0x18a ISZERO
0x18b PUSH2 0x29e
0x18e JUMPI
---
0x185: JUMPDEST 
0x187: V91 = M[V47]
0x189: V92 = LT S0 V91
0x18a: V93 = ISZERO V92
0x18b: V94 = 0x29e
0x18e: JUMPI 0x29e V93
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S0]

================================

Block 0x18f
[0x18f:0x1d3]
---
Predecessors: [0x185]
Successors: [0x1d4, 0x1d5]
---
0x18f DUP6
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 DUP3
0x1a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1c5 SWAP1
0x1c6 DIV
0x1c7 DUP9
0x1c8 DUP8
0x1c9 DUP5
0x1ca DUP2
0x1cb MLOAD
0x1cc DUP2
0x1cd LT
0x1ce ISZERO
0x1cf ISZERO
0x1d0 PUSH2 0x1d5
0x1d3 JUMPI
---
0x190: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x1a7: V97 = 0x100000000000000000000000000000000000000000000000000000000
0x1c6: V98 = DIV V89 0x100000000000000000000000000000000000000000000000000000000
0x1cb: V99 = M[V47]
0x1cd: V100 = LT S0 V99
0x1ce: V101 = ISZERO V100
0x1cf: V102 = ISZERO V101
0x1d0: V103 = 0x1d5
0x1d3: JUMPI 0x1d5 V102
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V96, V98, S6, S4, S0]
Exit stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S0, V96, V98, V27, V47, S0]

================================

Block 0x1d4
[0x1d4:0x1d4]
---
Predecessors: [0x18f]
Successors: []
---
0x1d4 INVALID
---
0x1d4: INVALID 
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S5, V96, V98, V27, V47, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S5, V96, V98, V27, V47, S0]

================================

Block 0x1d5
[0x1d5:0x29d]
---
Predecessors: [0x18f]
Successors: [0x185]
---
0x1d5 JUMPDEST
0x1d6 SWAP1
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP1
0x1db PUSH1 0x20
0x1dd MUL
0x1de ADD
0x1df MLOAD
0x1e0 DUP8
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 DUP5
0x1e5 PUSH4 0xffffffff
0x1ea AND
0x1eb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x209 MUL
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x4
0x20e ADD
0x20f DUP1
0x210 DUP5
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23c AND
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 DUP4
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 AND
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e AND
0x26f DUP2
0x270 MSTORE
0x271 PUSH1 0x20
0x273 ADD
0x274 DUP3
0x275 DUP2
0x276 MSTORE
0x277 PUSH1 0x20
0x279 ADD
0x27a SWAP4
0x27b POP
0x27c POP
0x27d POP
0x27e POP
0x27f PUSH1 0x0
0x281 PUSH1 0x40
0x283 MLOAD
0x284 DUP1
0x285 DUP4
0x286 SUB
0x287 DUP2
0x288 PUSH1 0x0
0x28a DUP8
0x28b GAS
0x28c CALL
0x28d SWAP3
0x28e POP
0x28f POP
0x290 POP
0x291 POP
0x292 DUP1
0x293 DUP1
0x294 PUSH1 0x1
0x296 ADD
0x297 SWAP2
0x298 POP
0x299 POP
0x29a PUSH2 0x185
0x29d JUMP
---
0x1d5: JUMPDEST 
0x1d7: V104 = 0x20
0x1d9: V105 = ADD 0x20 V47
0x1db: V106 = 0x20
0x1dd: V107 = MUL 0x20 S0
0x1de: V108 = ADD V107 V105
0x1df: V109 = M[V108]
0x1e1: V110 = 0x40
0x1e3: V111 = M[0x40]
0x1e5: V112 = 0xffffffff
0x1ea: V113 = AND 0xffffffff V98
0x1eb: V114 = 0x100000000000000000000000000000000000000000000000000000000
0x209: V115 = MUL 0x100000000000000000000000000000000000000000000000000000000 V113
0x20b: M[V111] = V115
0x20c: V116 = 0x4
0x20e: V117 = ADD 0x4 V111
0x211: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x227: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x23c: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x23e: M[V117] = V121
0x23f: V122 = 0x20
0x241: V123 = ADD 0x20 V117
0x243: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x259: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x270: M[V123] = V127
0x271: V128 = 0x20
0x273: V129 = ADD 0x20 V123
0x276: M[V129] = V55
0x277: V130 = 0x20
0x279: V131 = ADD 0x20 V129
0x27f: V132 = 0x0
0x281: V133 = 0x40
0x283: V134 = M[0x40]
0x286: V135 = SUB V131 V134
0x288: V136 = 0x0
0x28b: V137 = GAS
0x28c: V138 = CALL V137 V96 0x0 V134 V135 V134 0x0
0x294: V139 = 0x1
0x296: V140 = ADD 0x1 S5
0x29a: V141 = 0x185
0x29d: JUMP 0x185
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S5, V96, V98, V27, V47, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, V140]
Exit stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, V140]

================================

Block 0x29e
[0x29e:0x2ab]
---
Predecessors: [0x185]
Successors: [0xf4]
---
0x29e JUMPDEST
0x29f PUSH1 0x1
0x2a1 SWAP3
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 SWAP5
0x2a6 SWAP4
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab JUMP
---
0x29e: JUMPDEST 
0x29f: V142 = 0x1
0x2ab: JUMP 0xf4
---
Entry stack: [V11, 0xf4, V27, V32, V47, V55, 0x0, V89, S0]
Stack pops: 8
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x2ac
[0x2ac:0x2db]
---
Predecessors: []
Successors: []
---
0x2ac STOP
0x2ad LOG1
0x2ae PUSH6 0x627a7a723058
0x2b5 SHA3
0x2b6 MISSING 0xf6
0x2b7 MISSING 0xc4
0x2b8 GASPRICE
0x2b9 EXP
0x2ba ORIGIN
0x2bb MISSING 0xf
0x2bc TIMESTAMP
0x2bd SDIV
0x2be MISSING 0xca
0x2bf SWAP3
0x2c0 BYTE
0x2c1 BLOCKHASH
0x2c2 SWAP1
0x2c3 SWAP16
0x2c4 BLOCKHASH
0x2c5 MISSING 0xab
0x2c6 PUSH21 0x3e3b179817b55e945d543051cc04d40029
---
0x2ac: STOP 
0x2ad: LOG S0 S1 S2
0x2ae: V143 = 0x627a7a723058
0x2b5: V144 = SHA3 0x627a7a723058 S3
0x2b6: MISSING 0xf6
0x2b7: MISSING 0xc4
0x2b8: V145 = GASPRICE
0x2b9: V146 = EXP V145 S0
0x2ba: V147 = ORIGIN
0x2bb: MISSING 0xf
0x2bc: V148 = TIMESTAMP
0x2bd: V149 = SDIV V148 S0
0x2be: MISSING 0xca
0x2c0: V150 = BYTE S3 S1
0x2c1: V151 = BLOCKHASH V150
0x2c4: V152 = BLOCKHASH S17
0x2c5: MISSING 0xab
0x2c6: V153 = 0x3e3b179817b55e945d543051cc04d40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V144, V147, V146, V149, V152, V151, S0, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S2, 0x3e3b179817b55e945d543051cc04d40029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1561ae31
Entry block: 0x46
Exit block: 0xf4
Body: 0x46, 0x4e, 0x52, 0xf4, 0x10e, 0x11e, 0x122, 0x185, 0x18f, 0x1d4, 0x1d5, 0x29e

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

