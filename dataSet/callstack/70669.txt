Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x460900cf
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x460900cf
0x3c: V13 = EQ 0x460900cf V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc9]
---
0x41 DUP1
0x42 PUSH4 0xaffed0e0
0x47 EQ
0x48 PUSH2 0xc9
0x4b JUMPI
---
0x42: V15 = 0xaffed0e0
0x47: V16 = EQ 0xaffed0e0 V11
0x48: V17 = 0xc9
0x4b: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xfa]
---
0x4c DUP1
0x4d PUSH4 0xce7929b5
0x52 EQ
0x53 PUSH2 0xfa
0x56 JUMPI
---
0x4d: V18 = 0xce7929b5
0x52: V19 = EQ 0xce7929b5 V11
0x53: V20 = 0xfa
0x56: JUMPI 0xfa V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x111]
---
0x57 DUP1
0x58 PUSH4 0xd087d288
0x5d EQ
0x5e PUSH2 0x111
0x61 JUMPI
---
0x58: V21 = 0xd087d288
0x5d: V22 = EQ 0xd087d288 V11
0x5e: V23 = 0x111
0x61: JUMPI 0x111 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x142]
---
0x62 DUP1
0x63 PUSH4 0xe90e3ba6
0x68 EQ
0x69 PUSH2 0x142
0x6c JUMPI
---
0x63: V24 = 0xe90e3ba6
0x68: V25 = EQ 0xe90e3ba6 V11
0x69: V26 = 0x142
0x6c: JUMPI 0x142 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0xc6]
---
Predecessors: [0xd]
Successors: [0x199]
---
0x72 JUMPDEST
0x73 PUSH2 0xc7
0x76 PUSH1 0x4
0x78 DUP1
0x79 CALLDATASIZE
0x7a SUB
0x7b DUP2
0x7c ADD
0x7d SWAP1
0x7e DUP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 SWAP1
0x82 PUSH1 0x20
0x84 ADD
0x85 SWAP1
0x86 SWAP3
0x87 SWAP2
0x88 SWAP1
0x89 DUP1
0x8a CALLDATALOAD
0x8b PUSH1 0x0
0x8d SIGNEXTEND
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 SWAP3
0x94 SWAP2
0x95 SWAP1
0x96 DUP1
0x97 CALLDATALOAD
0x98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad AND
0xae SWAP1
0xaf PUSH1 0x20
0xb1 ADD
0xb2 SWAP1
0xb3 SWAP3
0xb4 SWAP2
0xb5 SWAP1
0xb6 DUP1
0xb7 CALLDATALOAD
0xb8 SWAP1
0xb9 PUSH1 0x20
0xbb ADD
0xbc SWAP1
0xbd SWAP3
0xbe SWAP2
0xbf SWAP1
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 PUSH2 0x199
0xc6 JUMP
---
0x72: JUMPDEST 
0x73: V28 = 0xc7
0x76: V29 = 0x4
0x79: V30 = CALLDATASIZE
0x7a: V31 = SUB V30 0x4
0x7c: V32 = ADD 0x4 V31
0x80: V33 = CALLDATALOAD 0x4
0x82: V34 = 0x20
0x84: V35 = ADD 0x20 0x4
0x8a: V36 = CALLDATALOAD 0x24
0x8b: V37 = 0x0
0x8d: V38 = SIGNEXTEND 0x0 V36
0x8f: V39 = 0x20
0x91: V40 = ADD 0x20 0x24
0x97: V41 = CALLDATALOAD 0x44
0x98: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xad: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xaf: V44 = 0x20
0xb1: V45 = ADD 0x20 0x44
0xb7: V46 = CALLDATALOAD 0x64
0xb9: V47 = 0x20
0xbb: V48 = ADD 0x20 0x64
0xc3: V49 = 0x199
0xc6: JUMP 0x199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7, V33, V38, V43, V46]
Exit stack: [V11, 0xc7, V33, V38, V43, V46]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: [0x282]
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: [V11, 0x197, V95, V100, V105, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x197, V95, V100, V105, S0]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x41]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V50 = CALLVALUE
0xcc: V51 = ISZERO V50
0xcd: V52 = 0xd5
0xd0: JUMPI 0xd5 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V53 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x2e2]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xde
0xda PUSH2 0x2e2
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V54 = 0xde
0xda: V55 = 0x2e2
0xdd: JUMP 0x2e2
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x2e2]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 DUP1
0xe3 DUP3
0xe4 PUSH1 0x1
0xe6 SIGNEXTEND
0xe7 PUSH1 0x1
0xe9 SIGNEXTEND
0xea DUP2
0xeb MSTORE
0xec PUSH1 0x20
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 POP
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 SWAP2
0xf7 SUB
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V56 = 0x40
0xe1: V57 = M[0x40]
0xe4: V58 = 0x1
0xe6: V59 = SIGNEXTEND 0x1 V229
0xe7: V60 = 0x1
0xe9: V61 = SIGNEXTEND 0x1 V59
0xeb: M[V57] = V61
0xec: V62 = 0x20
0xee: V63 = ADD 0x20 V57
0xf2: V64 = 0x40
0xf4: V65 = M[0x40]
0xf7: V66 = SUB V63 V65
0xf9: RETURN V65 V66
---
Entry stack: [V11, 0xde, V229]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x4c]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V67 = CALLVALUE
0xfd: V68 = ISZERO V67
0xfe: V69 = 0x106
0x101: JUMPI 0x106 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V70 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xfa]
Successors: [0x2f5]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0x10f
0x10b PUSH2 0x2f5
0x10e JUMP
---
0x106: JUMPDEST 
0x108: V71 = 0x10f
0x10b: V72 = 0x2f5
0x10e: JUMP 0x2f5
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0x10f]
Exit stack: [V11, 0x10f]

================================

Block 0x10f
[0x10f:0x110]
---
Predecessors: [0x373]
Successors: []
---
0x10f JUMPDEST
0x110 STOP
---
0x10f: JUMPDEST 
0x110: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x57]
Successors: [0x119, 0x11d]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x111: JUMPDEST 
0x112: V73 = CALLVALUE
0x114: V74 = ISZERO V73
0x115: V75 = 0x11d
0x118: JUMPI 0x11d V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, V73]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x111]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V76 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V11, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V73]

================================

Block 0x11d
[0x11d:0x125]
---
Predecessors: [0x111]
Successors: [0x376]
---
0x11d JUMPDEST
0x11e POP
0x11f PUSH2 0x126
0x122 PUSH2 0x376
0x125 JUMP
---
0x11d: JUMPDEST 
0x11f: V77 = 0x126
0x122: V78 = 0x376
0x125: JUMP 0x376
---
Entry stack: [V11, V73]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x126
[0x126:0x141]
---
Predecessors: [0x376]
Successors: []
---
0x126 JUMPDEST
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b DUP3
0x12c PUSH1 0x1
0x12e SIGNEXTEND
0x12f PUSH1 0x1
0x131 SIGNEXTEND
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP2
0x138 POP
0x139 POP
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e SWAP2
0x13f SUB
0x140 SWAP1
0x141 RETURN
---
0x126: JUMPDEST 
0x127: V79 = 0x40
0x129: V80 = M[0x40]
0x12c: V81 = 0x1
0x12e: V82 = SIGNEXTEND 0x1 V267
0x12f: V83 = 0x1
0x131: V84 = SIGNEXTEND 0x1 V82
0x133: M[V80] = V84
0x134: V85 = 0x20
0x136: V86 = ADD 0x20 V80
0x13a: V87 = 0x40
0x13c: V88 = M[0x40]
0x13f: V89 = SUB V86 V88
0x141: RETURN V88 V89
---
Entry stack: [V11, V267]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x142
[0x142:0x196]
---
Predecessors: [0x62]
Successors: [0x38c]
---
0x142 JUMPDEST
0x143 PUSH2 0x197
0x146 PUSH1 0x4
0x148 DUP1
0x149 CALLDATASIZE
0x14a SUB
0x14b DUP2
0x14c ADD
0x14d SWAP1
0x14e DUP1
0x14f DUP1
0x150 CALLDATALOAD
0x151 SWAP1
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP1
0x156 SWAP3
0x157 SWAP2
0x158 SWAP1
0x159 DUP1
0x15a CALLDATALOAD
0x15b PUSH1 0x0
0x15d SIGNEXTEND
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP3
0x164 SWAP2
0x165 SWAP1
0x166 DUP1
0x167 CALLDATALOAD
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e SWAP1
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP1
0x183 SWAP3
0x184 SWAP2
0x185 SWAP1
0x186 DUP1
0x187 CALLDATALOAD
0x188 SWAP1
0x189 PUSH1 0x20
0x18b ADD
0x18c SWAP1
0x18d SWAP3
0x18e SWAP2
0x18f SWAP1
0x190 POP
0x191 POP
0x192 POP
0x193 PUSH2 0x38c
0x196 JUMP
---
0x142: JUMPDEST 
0x143: V90 = 0x197
0x146: V91 = 0x4
0x149: V92 = CALLDATASIZE
0x14a: V93 = SUB V92 0x4
0x14c: V94 = ADD 0x4 V93
0x150: V95 = CALLDATALOAD 0x4
0x152: V96 = 0x20
0x154: V97 = ADD 0x20 0x4
0x15a: V98 = CALLDATALOAD 0x24
0x15b: V99 = 0x0
0x15d: V100 = SIGNEXTEND 0x0 V98
0x15f: V101 = 0x20
0x161: V102 = ADD 0x20 0x24
0x167: V103 = CALLDATALOAD 0x44
0x168: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x17f: V106 = 0x20
0x181: V107 = ADD 0x20 0x44
0x187: V108 = CALLDATALOAD 0x64
0x189: V109 = 0x20
0x18b: V110 = ADD 0x20 0x64
0x193: V111 = 0x38c
0x196: JUMP 0x38c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x197, V95, V100, V105, V108]
Exit stack: [V11, 0x197, V95, V100, V105, V108]

================================

Block 0x197
[0x197:0x198]
---
Predecessors: [0x398]
Successors: []
---
0x197 JUMPDEST
0x198 STOP
---
0x197: JUMPDEST 
0x198: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x19e]
---
Predecessors: [0x72, 0x38c]
Successors: [0x19f]
---
0x199 JUMPDEST
0x19a PUSH1 0x0
0x19c DUP1
0x19d SWAP1
0x19e POP
---
0x199: JUMPDEST 
0x19a: V112 = 0x0
---
Entry stack: [V11, 0x197, V95, V100, V105, S5, {0xc7, 0x398}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x197, V95, V100, V105, S5, {0xc7, 0x398}, S3, S2, S1, S0, 0x0]

================================

Block 0x19f
[0x19f:0x1a7]
---
Predecessors: [0x199, 0x1cb]
Successors: [0x1a8, 0x211]
---
0x19f JUMPDEST
0x1a0 DUP5
0x1a1 DUP2
0x1a2 LT
0x1a3 ISZERO
0x1a4 PUSH2 0x211
0x1a7 JUMPI
---
0x19f: JUMPDEST 
0x1a2: V113 = LT S0 S4
0x1a3: V114 = ISZERO V113
0x1a4: V115 = 0x211
0x1a7: JUMPI 0x211 V114
---
Entry stack: [V11, 0x197, V95, V100, V105, S6, {0xc7, 0x398}, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x197, V95, V100, V105, S6, {0xc7, 0x398}, S4, S3, S2, S1, S0]

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0x19f]
Successors: [0x39e]
---
0x1a8 PUSH2 0x1af
0x1ab PUSH2 0x39e
0x1ae JUMP
---
0x1a8: V116 = 0x1af
0x1ab: V117 = 0x39e
0x1ae: JUMP 0x39e
---
Entry stack: [V11, 0x197, V95, V100, V105, S6, {0xc7, 0x398}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x1af]
Exit stack: [V11, 0x197, V95, V100, V105, S6, {0xc7, 0x398}, S4, S3, S2, S1, S0, 0x1af]

================================

Block 0x1af
[0x1af:0x1c1]
---
Predecessors: [0x39e]
Successors: [0x1c2, 0x1cb]
---
0x1af JUMPDEST
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 PUSH1 0x0
0x1b9 CREATE
0x1ba DUP1
0x1bb ISZERO
0x1bc DUP1
0x1bd ISZERO
0x1be PUSH2 0x1cb
0x1c1 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V118 = 0x40
0x1b2: V119 = M[0x40]
0x1b5: V120 = SUB V274 V119
0x1b7: V121 = 0x0
0x1b9: V122 = CREATE 0x0 V119 V120
0x1bb: V123 = ISZERO V122
0x1bd: V124 = ISZERO V123
0x1be: V125 = 0x1cb
0x1c1: JUMPI 0x1cb V124
---
Entry stack: [V11, 0x197, V95, V100, V105, S7, {0xc7, 0x398}, S5, S4, S3, S2, S1, V274]
Stack pops: 1
Stack additions: [V122, V123]
Exit stack: [V11, 0x197, V95, V100, V105, S7, {0xc7, 0x398}, S5, S4, S3, S2, S1, V122, V123]

================================

Block 0x1c2
[0x1c2:0x1ca]
---
Predecessors: [0x1af]
Successors: []
---
0x1c2 RETURNDATASIZE
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 RETURNDATACOPY
0x1c7 RETURNDATASIZE
0x1c8 PUSH1 0x0
0x1ca REVERT
---
0x1c2: V126 = RETURNDATASIZE
0x1c3: V127 = 0x0
0x1c6: RETURNDATACOPY 0x0 0x0 V126
0x1c7: V128 = RETURNDATASIZE
0x1c8: V129 = 0x0
0x1ca: REVERT 0x0 V128
---
Entry stack: [V11, 0x197, V95, V100, V105, S8, {0xc7, 0x398}, S6, S5, S4, S3, S2, V122, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x197, V95, V100, V105, S8, {0xc7, 0x398}, S6, S5, S4, S3, S2, V122, V123]

================================

Block 0x1cb
[0x1cb:0x210]
---
Predecessors: [0x1af]
Successors: [0x19f]
---
0x1cb JUMPDEST
0x1cc POP
0x1cd POP
0x1ce PUSH1 0x0
0x1d0 PUSH1 0x14
0x1d2 DUP2
0x1d3 DUP2
0x1d4 SWAP1
0x1d5 SLOAD
0x1d6 SWAP1
0x1d7 PUSH2 0x100
0x1da EXP
0x1db SWAP1
0x1dc DIV
0x1dd PUSH1 0x1
0x1df SIGNEXTEND
0x1e0 DUP1
0x1e1 SWAP3
0x1e2 SWAP2
0x1e3 SWAP1
0x1e4 PUSH1 0x1
0x1e6 ADD
0x1e7 SWAP2
0x1e8 SWAP1
0x1e9 PUSH2 0x100
0x1ec EXP
0x1ed DUP2
0x1ee SLOAD
0x1ef DUP2
0x1f0 PUSH2 0xffff
0x1f3 MUL
0x1f4 NOT
0x1f5 AND
0x1f6 SWAP1
0x1f7 DUP4
0x1f8 PUSH1 0x1
0x1fa SIGNEXTEND
0x1fb PUSH2 0xffff
0x1fe AND
0x1ff MUL
0x200 OR
0x201 SWAP1
0x202 SSTORE
0x203 POP
0x204 POP
0x205 DUP1
0x206 DUP1
0x207 PUSH1 0x1
0x209 ADD
0x20a SWAP2
0x20b POP
0x20c POP
0x20d PUSH2 0x19f
0x210 JUMP
---
0x1cb: JUMPDEST 
0x1ce: V130 = 0x0
0x1d0: V131 = 0x14
0x1d5: V132 = S[0x0]
0x1d7: V133 = 0x100
0x1da: V134 = EXP 0x100 0x14
0x1dc: V135 = DIV V132 0x10000000000000000000000000000000000000000
0x1dd: V136 = 0x1
0x1df: V137 = SIGNEXTEND 0x1 V135
0x1e4: V138 = 0x1
0x1e6: V139 = ADD 0x1 V137
0x1e9: V140 = 0x100
0x1ec: V141 = EXP 0x100 0x14
0x1ee: V142 = S[0x0]
0x1f0: V143 = 0xffff
0x1f3: V144 = MUL 0xffff 0x10000000000000000000000000000000000000000
0x1f4: V145 = NOT 0xffff0000000000000000000000000000000000000000
0x1f5: V146 = AND 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff V142
0x1f8: V147 = 0x1
0x1fa: V148 = SIGNEXTEND 0x1 V139
0x1fb: V149 = 0xffff
0x1fe: V150 = AND 0xffff V148
0x1ff: V151 = MUL V150 0x10000000000000000000000000000000000000000
0x200: V152 = OR V151 V146
0x202: S[0x0] = V152
0x207: V153 = 0x1
0x209: V154 = ADD 0x1 S2
0x20d: V155 = 0x19f
0x210: JUMP 0x19f
---
Entry stack: [V11, 0x197, V95, V100, V105, S8, {0xc7, 0x398}, S6, S5, S4, S3, S2, V122, V123]
Stack pops: 3
Stack additions: [V154]
Exit stack: [V11, 0x197, V95, V100, V105, S8, {0xc7, 0x398}, S6, S5, S4, S3, V154]

================================

Block 0x211
[0x211:0x21c]
---
Predecessors: [0x19f]
Successors: [0x3ad]
---
0x211 JUMPDEST
0x212 CALLVALUE
0x213 DUP5
0x214 DUP5
0x215 DUP5
0x216 PUSH2 0x21d
0x219 PUSH2 0x3ad
0x21c JUMP
---
0x211: JUMPDEST 
0x212: V156 = CALLVALUE
0x216: V157 = 0x21d
0x219: V158 = 0x3ad
0x21c: JUMP 0x3ad
---
Entry stack: [V11, 0x197, V95, V100, V105, S6, {0xc7, 0x398}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V156, S3, S2, S1, 0x21d]
Exit stack: [V11, 0x197, V95, V100, V105, S6, {0xc7, 0x398}, S4, S3, S2, S1, S0, V156, S3, S2, S1, 0x21d]

================================

Block 0x21d
[0x21d:0x278]
---
Predecessors: [0x3ad]
Successors: [0x279, 0x282]
---
0x21d JUMPDEST
0x21e DUP1
0x21f DUP5
0x220 PUSH1 0x0
0x222 SIGNEXTEND
0x223 PUSH1 0x0
0x225 SIGNEXTEND
0x226 DUP2
0x227 MSTORE
0x228 PUSH1 0x20
0x22a ADD
0x22b DUP4
0x22c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x241 AND
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d DUP3
0x25e DUP2
0x25f MSTORE
0x260 PUSH1 0x20
0x262 ADD
0x263 SWAP4
0x264 POP
0x265 POP
0x266 POP
0x267 POP
0x268 PUSH1 0x40
0x26a MLOAD
0x26b DUP1
0x26c SWAP2
0x26d SUB
0x26e SWAP1
0x26f DUP3
0x270 CREATE
0x271 DUP1
0x272 ISZERO
0x273 DUP1
0x274 ISZERO
0x275 PUSH2 0x282
0x278 JUMPI
---
0x21d: JUMPDEST 
0x220: V159 = 0x0
0x222: V160 = SIGNEXTEND 0x0 S3
0x223: V161 = 0x0
0x225: V162 = SIGNEXTEND 0x0 V160
0x227: M[V279] = V162
0x228: V163 = 0x20
0x22a: V164 = ADD 0x20 V279
0x22c: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x241: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x242: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x259: M[V164] = V168
0x25a: V169 = 0x20
0x25c: V170 = ADD 0x20 V164
0x25f: M[V170] = S1
0x260: V171 = 0x20
0x262: V172 = ADD 0x20 V170
0x268: V173 = 0x40
0x26a: V174 = M[0x40]
0x26d: V175 = SUB V172 V174
0x270: V176 = CREATE S4 V174 V175
0x272: V177 = ISZERO V176
0x274: V178 = ISZERO V177
0x275: V179 = 0x282
0x278: JUMPI 0x282 V178
---
Entry stack: [V11, 0x197, V95, V100, V105, S11, {0xc7, 0x398}, S9, S8, S7, S6, S5, S4, S3, S2, S1, V279]
Stack pops: 5
Stack additions: [S4, V176, V177]
Exit stack: [V11, 0x197, V95, V100, V105, S11, {0xc7, 0x398}, S9, S8, S7, S6, S5, S4, V176, V177]

================================

Block 0x279
[0x279:0x281]
---
Predecessors: [0x21d]
Successors: []
---
0x279 RETURNDATASIZE
0x27a PUSH1 0x0
0x27c DUP1
0x27d RETURNDATACOPY
0x27e RETURNDATASIZE
0x27f PUSH1 0x0
0x281 REVERT
---
0x279: V180 = RETURNDATASIZE
0x27a: V181 = 0x0
0x27d: RETURNDATACOPY 0x0 0x0 V180
0x27e: V182 = RETURNDATASIZE
0x27f: V183 = 0x0
0x281: REVERT 0x0 V182
---
Entry stack: [V11, 0x197, V95, V100, V105, S9, {0xc7, 0x398}, S7, S6, S5, S4, S3, S2, V176, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x197, V95, V100, V105, S9, {0xc7, 0x398}, S7, S6, S5, S4, S3, S2, V176, V177]

================================

Block 0x282
[0x282:0x2e1]
---
Predecessors: [0x21d]
Successors: [0xc7, 0x398]
---
0x282 JUMPDEST
0x283 POP
0x284 SWAP1
0x285 POP
0x286 POP
0x287 PUSH1 0x0
0x289 PUSH1 0x14
0x28b DUP2
0x28c DUP2
0x28d SWAP1
0x28e SLOAD
0x28f SWAP1
0x290 PUSH2 0x100
0x293 EXP
0x294 SWAP1
0x295 DIV
0x296 PUSH1 0x1
0x298 SIGNEXTEND
0x299 DUP1
0x29a SWAP3
0x29b SWAP2
0x29c SWAP1
0x29d PUSH1 0x1
0x29f ADD
0x2a0 SWAP2
0x2a1 SWAP1
0x2a2 PUSH2 0x100
0x2a5 EXP
0x2a6 DUP2
0x2a7 SLOAD
0x2a8 DUP2
0x2a9 PUSH2 0xffff
0x2ac MUL
0x2ad NOT
0x2ae AND
0x2af SWAP1
0x2b0 DUP4
0x2b1 PUSH1 0x1
0x2b3 SIGNEXTEND
0x2b4 PUSH2 0xffff
0x2b7 AND
0x2b8 MUL
0x2b9 OR
0x2ba SWAP1
0x2bb SSTORE
0x2bc POP
0x2bd PUSH1 0x0
0x2bf PUSH1 0x14
0x2c1 PUSH2 0x100
0x2c4 EXP
0x2c5 DUP2
0x2c6 SLOAD
0x2c7 DUP2
0x2c8 PUSH2 0xffff
0x2cb MUL
0x2cc NOT
0x2cd AND
0x2ce SWAP1
0x2cf DUP4
0x2d0 PUSH1 0x1
0x2d2 SIGNEXTEND
0x2d3 PUSH2 0xffff
0x2d6 AND
0x2d7 MUL
0x2d8 OR
0x2d9 SWAP1
0x2da SSTORE
0x2db POP
0x2dc POP
0x2dd POP
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 JUMP
---
0x282: JUMPDEST 
0x287: V184 = 0x0
0x289: V185 = 0x14
0x28e: V186 = S[0x0]
0x290: V187 = 0x100
0x293: V188 = EXP 0x100 0x14
0x295: V189 = DIV V186 0x10000000000000000000000000000000000000000
0x296: V190 = 0x1
0x298: V191 = SIGNEXTEND 0x1 V189
0x29d: V192 = 0x1
0x29f: V193 = ADD 0x1 V191
0x2a2: V194 = 0x100
0x2a5: V195 = EXP 0x100 0x14
0x2a7: V196 = S[0x0]
0x2a9: V197 = 0xffff
0x2ac: V198 = MUL 0xffff 0x10000000000000000000000000000000000000000
0x2ad: V199 = NOT 0xffff0000000000000000000000000000000000000000
0x2ae: V200 = AND 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff V196
0x2b1: V201 = 0x1
0x2b3: V202 = SIGNEXTEND 0x1 V193
0x2b4: V203 = 0xffff
0x2b7: V204 = AND 0xffff V202
0x2b8: V205 = MUL V204 0x10000000000000000000000000000000000000000
0x2b9: V206 = OR V205 V200
0x2bb: S[0x0] = V206
0x2bd: V207 = 0x0
0x2bf: V208 = 0x14
0x2c1: V209 = 0x100
0x2c4: V210 = EXP 0x100 0x14
0x2c6: V211 = S[0x0]
0x2c8: V212 = 0xffff
0x2cb: V213 = MUL 0xffff 0x10000000000000000000000000000000000000000
0x2cc: V214 = NOT 0xffff0000000000000000000000000000000000000000
0x2cd: V215 = AND 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff V211
0x2d0: V216 = 0x1
0x2d2: V217 = SIGNEXTEND 0x1 V191
0x2d3: V218 = 0xffff
0x2d6: V219 = AND 0xffff V217
0x2d7: V220 = MUL V219 0x10000000000000000000000000000000000000000
0x2d8: V221 = OR V220 V215
0x2da: S[0x0] = V221
0x2e1: JUMP {0xc7, 0x398}
---
Entry stack: [V11, 0x197, V95, V100, V105, S9, {0xc7, 0x398}, S7, S6, S5, S4, S3, S2, V176, V177]
Stack pops: 9
Stack additions: []
Exit stack: [V11, 0x197, V95, V100, V105, S9]

================================

Block 0x2e2
[0x2e2:0x2f4]
---
Predecessors: [0xd5]
Successors: [0xde]
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x0
0x2e5 PUSH1 0x14
0x2e7 SWAP1
0x2e8 SLOAD
0x2e9 SWAP1
0x2ea PUSH2 0x100
0x2ed EXP
0x2ee SWAP1
0x2ef DIV
0x2f0 PUSH1 0x1
0x2f2 SIGNEXTEND
0x2f3 DUP2
0x2f4 JUMP
---
0x2e2: JUMPDEST 
0x2e3: V222 = 0x0
0x2e5: V223 = 0x14
0x2e8: V224 = S[0x0]
0x2ea: V225 = 0x100
0x2ed: V226 = EXP 0x100 0x14
0x2ef: V227 = DIV V224 0x10000000000000000000000000000000000000000
0x2f0: V228 = 0x1
0x2f2: V229 = SIGNEXTEND 0x1 V227
0x2f4: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V229]
Exit stack: [V11, 0xde, V229]

================================

Block 0x2f5
[0x2f5:0x369]
---
Predecessors: [0x106]
Successors: [0x36a, 0x373]
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x0
0x2f8 DUP1
0x2f9 SWAP1
0x2fa SLOAD
0x2fb SWAP1
0x2fc PUSH2 0x100
0x2ff EXP
0x300 SWAP1
0x301 DIV
0x302 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x317 AND
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d AND
0x32e PUSH2 0x8fc
0x331 ADDRESS
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 BALANCE
0x349 SWAP1
0x34a DUP2
0x34b ISZERO
0x34c MUL
0x34d SWAP1
0x34e PUSH1 0x40
0x350 MLOAD
0x351 PUSH1 0x0
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 DUP4
0x358 SUB
0x359 DUP2
0x35a DUP6
0x35b DUP9
0x35c DUP9
0x35d CALL
0x35e SWAP4
0x35f POP
0x360 POP
0x361 POP
0x362 POP
0x363 ISZERO
0x364 DUP1
0x365 ISZERO
0x366 PUSH2 0x373
0x369 JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V230 = 0x0
0x2fa: V231 = S[0x0]
0x2fc: V232 = 0x100
0x2ff: V233 = EXP 0x100 0x0
0x301: V234 = DIV V231 0x1
0x302: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x317: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x318: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x32e: V239 = 0x8fc
0x331: V240 = ADDRESS
0x332: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x348: V243 = BALANCE V242
0x34b: V244 = ISZERO V243
0x34c: V245 = MUL V244 0x8fc
0x34e: V246 = 0x40
0x350: V247 = M[0x40]
0x351: V248 = 0x0
0x353: V249 = 0x40
0x355: V250 = M[0x40]
0x358: V251 = SUB V247 V250
0x35d: V252 = CALL V245 V238 V243 V250 V251 V250 0x0
0x363: V253 = ISZERO V252
0x365: V254 = ISZERO V253
0x366: V255 = 0x373
0x369: JUMPI 0x373 V254
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: [V253]
Exit stack: [V11, 0x10f, V253]

================================

Block 0x36a
[0x36a:0x372]
---
Predecessors: [0x2f5]
Successors: []
---
0x36a RETURNDATASIZE
0x36b PUSH1 0x0
0x36d DUP1
0x36e RETURNDATACOPY
0x36f RETURNDATASIZE
0x370 PUSH1 0x0
0x372 REVERT
---
0x36a: V256 = RETURNDATASIZE
0x36b: V257 = 0x0
0x36e: RETURNDATACOPY 0x0 0x0 V256
0x36f: V258 = RETURNDATASIZE
0x370: V259 = 0x0
0x372: REVERT 0x0 V258
---
Entry stack: [V11, 0x10f, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V253]

================================

Block 0x373
[0x373:0x375]
---
Predecessors: [0x2f5]
Successors: [0x10f]
---
0x373 JUMPDEST
0x374 POP
0x375 JUMP
---
0x373: JUMPDEST 
0x375: JUMP 0x10f
---
Entry stack: [V11, 0x10f, V253]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x376
[0x376:0x38b]
---
Predecessors: [0x11d]
Successors: [0x126]
---
0x376 JUMPDEST
0x377 PUSH1 0x0
0x379 DUP1
0x37a PUSH1 0x14
0x37c SWAP1
0x37d SLOAD
0x37e SWAP1
0x37f PUSH2 0x100
0x382 EXP
0x383 SWAP1
0x384 DIV
0x385 PUSH1 0x1
0x387 SIGNEXTEND
0x388 SWAP1
0x389 POP
0x38a SWAP1
0x38b JUMP
---
0x376: JUMPDEST 
0x377: V260 = 0x0
0x37a: V261 = 0x14
0x37d: V262 = S[0x0]
0x37f: V263 = 0x100
0x382: V264 = EXP 0x100 0x14
0x384: V265 = DIV V262 0x10000000000000000000000000000000000000000
0x385: V266 = 0x1
0x387: V267 = SIGNEXTEND 0x1 V265
0x38b: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [V267]
Exit stack: [V11, V267]

================================

Block 0x38c
[0x38c:0x397]
---
Predecessors: [0x142]
Successors: [0x199]
---
0x38c JUMPDEST
0x38d PUSH2 0x398
0x390 DUP5
0x391 DUP5
0x392 DUP5
0x393 DUP5
0x394 PUSH2 0x199
0x397 JUMP
---
0x38c: JUMPDEST 
0x38d: V268 = 0x398
0x394: V269 = 0x199
0x397: JUMP 0x199
---
Entry stack: [V11, 0x197, V95, V100, V105, V108]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x398, S3, S2, S1, S0]
Exit stack: [V11, 0x197, V95, V100, V105, V108, 0x398, V95, V100, V105, V108]

================================

Block 0x398
[0x398:0x39d]
---
Predecessors: [0x282]
Successors: [0x197]
---
0x398 JUMPDEST
0x399 POP
0x39a POP
0x39b POP
0x39c POP
0x39d JUMP
---
0x398: JUMPDEST 
0x39d: JUMP 0x197
---
Entry stack: [V11, 0x197, V95, V100, V105, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x39e
[0x39e:0x3ac]
---
Predecessors: [0x1a8]
Successors: [0x1af]
---
0x39e JUMPDEST
0x39f PUSH1 0x40
0x3a1 MLOAD
0x3a2 PUSH1 0x52
0x3a4 DUP1
0x3a5 PUSH2 0x3be
0x3a8 DUP4
0x3a9 CODECOPY
0x3aa ADD
0x3ab SWAP1
0x3ac JUMP
---
0x39e: JUMPDEST 
0x39f: V270 = 0x40
0x3a1: V271 = M[0x40]
0x3a2: V272 = 0x52
0x3a5: V273 = 0x3be
0x3a9: CODECOPY V271 0x3be 0x52
0x3aa: V274 = ADD 0x52 V271
0x3ac: JUMP 0x1af
---
Entry stack: [V11, 0x197, V95, V100, V105, S7, {0xc7, 0x398}, S5, S4, S3, S2, S1, 0x1af]
Stack pops: 1
Stack additions: [V274]
Exit stack: [V11, 0x197, V95, V100, V105, S7, {0xc7, 0x398}, S5, S4, S3, S2, S1, V274]

================================

Block 0x3ad
[0x3ad:0x3bc]
---
Predecessors: [0x211]
Successors: [0x21d]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 PUSH2 0x1d1
0x3b4 DUP1
0x3b5 PUSH2 0x410
0x3b8 DUP4
0x3b9 CODECOPY
0x3ba ADD
0x3bb SWAP1
0x3bc JUMP
---
0x3ad: JUMPDEST 
0x3ae: V275 = 0x40
0x3b0: V276 = M[0x40]
0x3b1: V277 = 0x1d1
0x3b5: V278 = 0x410
0x3b9: CODECOPY V276 0x410 0x1d1
0x3ba: V279 = ADD 0x1d1 V276
0x3bc: JUMP 0x21d
---
Entry stack: [V11, 0x197, V95, V100, V105, S11, {0xc7, 0x398}, S9, S8, S7, S6, S5, V156, S3, S2, S1, 0x21d]
Stack pops: 1
Stack additions: [V279]
Exit stack: [V11, 0x197, V95, V100, V105, S11, {0xc7, 0x398}, S9, S8, S7, S6, S5, V156, S3, S2, S1, V279]

================================

Block 0x3bd
[0x3bd:0x3c8]
---
Predecessors: []
Successors: [0x3c9]
---
0x3bd STOP
0x3be PUSH1 0x80
0x3c0 PUSH1 0x40
0x3c2 MSTORE
0x3c3 CALLVALUE
0x3c4 DUP1
0x3c5 ISZERO
0x3c6 PUSH1 0xf
0x3c8 JUMPI
---
0x3bd: STOP 
0x3be: V280 = 0x80
0x3c0: V281 = 0x40
0x3c2: M[0x40] = 0x80
0x3c3: V282 = CALLVALUE
0x3c5: V283 = ISZERO V282
0x3c6: V284 = 0xf
0x3c8: THROWI V283
---
Entry stack: []
Stack pops: 0
Stack additions: [V282]
Exit stack: []

================================

Block 0x3c9
[0x3c9:0x4a1]
---
Predecessors: [0x3bd]
Successors: [0x4a2]
---
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc REVERT
0x3cd JUMPDEST
0x3ce POP
0x3cf PUSH1 0x35
0x3d1 DUP1
0x3d2 PUSH1 0x1d
0x3d4 PUSH1 0x0
0x3d6 CODECOPY
0x3d7 PUSH1 0x0
0x3d9 RETURN
0x3da STOP
0x3db PUSH1 0x80
0x3dd PUSH1 0x40
0x3df MSTORE
0x3e0 PUSH1 0x0
0x3e2 DUP1
0x3e3 REVERT
0x3e4 STOP
0x3e5 LOG1
0x3e6 PUSH6 0x627a7a723058
0x3ed SHA3
0x3ee MISSING 0xec
0x3ef SWAP10
0x3f0 MISSING 0x5f
0x3f1 SWAP1
0x3f2 MISSING 0xc4
0x3f3 DUP2
0x3f4 MISSING 0xeb
0x3f5 RETURN
0x3f6 PUSH30 0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052
0x415 PUSH1 0x40
0x417 MLOAD
0x418 PUSH1 0x60
0x41a DUP1
0x41b PUSH2 0x1d1
0x41e DUP4
0x41f CODECOPY
0x420 DUP2
0x421 ADD
0x422 DUP1
0x423 PUSH1 0x40
0x425 MSTORE
0x426 DUP2
0x427 ADD
0x428 SWAP1
0x429 DUP1
0x42a DUP1
0x42b MLOAD
0x42c SWAP1
0x42d PUSH1 0x20
0x42f ADD
0x430 SWAP1
0x431 SWAP3
0x432 SWAP2
0x433 SWAP1
0x434 DUP1
0x435 MLOAD
0x436 SWAP1
0x437 PUSH1 0x20
0x439 ADD
0x43a SWAP1
0x43b SWAP3
0x43c SWAP2
0x43d SWAP1
0x43e DUP1
0x43f MLOAD
0x440 SWAP1
0x441 PUSH1 0x20
0x443 ADD
0x444 SWAP1
0x445 SWAP3
0x446 SWAP2
0x447 SWAP1
0x448 POP
0x449 POP
0x44a POP
0x44b PUSH1 0x0
0x44d DUP1
0x44e PUSH1 0x0
0x450 DUP1
0x451 DUP6
0x452 SWAP4
0x453 POP
0x454 PUSH4 0x76acb5e8
0x459 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x477 MUL
0x478 SWAP3
0x479 POP
0x47a PUSH30 0x273600000000000000000000000000000000000000000000000000000000
0x499 PUSH1 0x1
0x49b MUL
0x49c SWAP2
0x49d POP
0x49e PUSH1 0x0
0x4a0 SWAP1
0x4a1 POP
---
0x3c9: V285 = 0x0
0x3cc: REVERT 0x0 0x0
0x3cd: JUMPDEST 
0x3cf: V286 = 0x35
0x3d2: V287 = 0x1d
0x3d4: V288 = 0x0
0x3d6: CODECOPY 0x0 0x1d 0x35
0x3d7: V289 = 0x0
0x3d9: RETURN 0x0 0x35
0x3da: STOP 
0x3db: V290 = 0x80
0x3dd: V291 = 0x40
0x3df: M[0x40] = 0x80
0x3e0: V292 = 0x0
0x3e3: REVERT 0x0 0x0
0x3e4: STOP 
0x3e5: LOG S0 S1 S2
0x3e6: V293 = 0x627a7a723058
0x3ed: V294 = SHA3 0x627a7a723058 S3
0x3ee: MISSING 0xec
0x3f0: MISSING 0x5f
0x3f2: MISSING 0xc4
0x3f4: MISSING 0xeb
0x3f5: RETURN S0 S1
0x3f6: V295 = 0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052
0x415: V296 = 0x40
0x417: V297 = M[0x40]
0x418: V298 = 0x60
0x41b: V299 = 0x1d1
0x41f: CODECOPY V297 0x1d1 0x60
0x421: V300 = ADD V297 0x60
0x423: V301 = 0x40
0x425: M[0x40] = V300
0x427: V302 = ADD V297 V300
0x42b: V303 = M[V297]
0x42d: V304 = 0x20
0x42f: V305 = ADD 0x20 V297
0x435: V306 = M[V305]
0x437: V307 = 0x20
0x439: V308 = ADD 0x20 V305
0x43f: V309 = M[V308]
0x441: V310 = 0x20
0x443: V311 = ADD 0x20 V308
0x44b: V312 = 0x0
0x44e: V313 = 0x0
0x454: V314 = 0x76acb5e8
0x459: V315 = 0x100000000000000000000000000000000000000000000000000000000
0x477: V316 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x76acb5e8
0x47a: V317 = 0x273600000000000000000000000000000000000000000000000000000000
0x499: V318 = 0x1
0x49b: V319 = MUL 0x1 0x273600000000000000000000000000000000000000000000000000000000
0x49e: V320 = 0x0
---
Entry stack: [V282]
Stack pops: 0
Stack additions: [V294, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, S1, S0, S1, S0, S1, 0x0, 0x273600000000000000000000000000000000000000000000000000000000, 0x76acb5e800000000000000000000000000000000000000000000000000000000, V306, V309, V306, V303, 0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052]
Exit stack: []

================================

Block 0x4a2
[0x4a2:0x4b0]
---
Predecessors: [0x3c9]
Successors: [0x4b1]
---
0x4a2 JUMPDEST
0x4a3 DUP7
0x4a4 PUSH1 0x0
0x4a6 SIGNEXTEND
0x4a7 DUP2
0x4a8 PUSH1 0x0
0x4aa SIGNEXTEND
0x4ab SLT
0x4ac ISZERO
0x4ad PUSH2 0x1b7
0x4b0 JUMPI
---
0x4a2: JUMPDEST 
0x4a4: V321 = 0x0
0x4a6: V322 = SIGNEXTEND 0x0 V303
0x4a8: V323 = 0x0
0x4aa: V324 = SIGNEXTEND 0x0 0x0
0x4ab: V325 = SLT 0x0 V322
0x4ac: V326 = ISZERO V325
0x4ad: V327 = 0x1b7
0x4b0: THROWI V326
---
Entry stack: [0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052, V303, V306, V309, V306, 0x76acb5e800000000000000000000000000000000000000000000000000000000, 0x273600000000000000000000000000000000000000000000000000000000, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052, V303, V306, V309, V306, 0x76acb5e800000000000000000000000000000000000000000000000000000000, 0x273600000000000000000000000000000000000000000000000000000000, 0x0]

================================

Block 0x4b1
[0x4b1:0x59d]
---
Predecessors: [0x4a2]
Successors: [0x59e]
---
0x4b1 DUP4
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 CALLVALUE
0x4c9 DUP5
0x4ca PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4e8 SWAP1
0x4e9 DIV
0x4ea SWAP1
0x4eb DUP5
0x4ec PUSH1 0x40
0x4ee MLOAD
0x4ef DUP4
0x4f0 PUSH4 0xffffffff
0x4f5 AND
0x4f6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x514 MUL
0x515 DUP2
0x516 MSTORE
0x517 PUSH1 0x4
0x519 ADD
0x51a DUP1
0x51b DUP3
0x51c PUSH1 0x0
0x51e NOT
0x51f AND
0x520 PUSH1 0x0
0x522 NOT
0x523 AND
0x524 DUP2
0x525 MSTORE
0x526 PUSH1 0x20
0x528 ADD
0x529 SWAP2
0x52a POP
0x52b POP
0x52c PUSH1 0x0
0x52e PUSH1 0x40
0x530 MLOAD
0x531 DUP1
0x532 DUP4
0x533 SUB
0x534 DUP2
0x535 DUP6
0x536 DUP9
0x537 GAS
0x538 CALL
0x539 SWAP4
0x53a POP
0x53b POP
0x53c POP
0x53d POP
0x53e POP
0x53f DUP4
0x540 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x555 AND
0x556 PUSH4 0x3ccfd60b
0x55b PUSH1 0x40
0x55d MLOAD
0x55e DUP2
0x55f PUSH4 0xffffffff
0x564 AND
0x565 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x583 MUL
0x584 DUP2
0x585 MSTORE
0x586 PUSH1 0x4
0x588 ADD
0x589 PUSH1 0x0
0x58b PUSH1 0x40
0x58d MLOAD
0x58e DUP1
0x58f DUP4
0x590 SUB
0x591 DUP2
0x592 PUSH1 0x0
0x594 DUP8
0x595 DUP1
0x596 EXTCODESIZE
0x597 ISZERO
0x598 DUP1
0x599 ISZERO
0x59a PUSH2 0x192
0x59d JUMPI
---
0x4b2: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x4c8: V330 = CALLVALUE
0x4ca: V331 = 0x100000000000000000000000000000000000000000000000000000000
0x4e9: V332 = DIV 0x76acb5e800000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000
0x4ec: V333 = 0x40
0x4ee: V334 = M[0x40]
0x4f0: V335 = 0xffffffff
0x4f5: V336 = AND 0xffffffff 0x76acb5e8
0x4f6: V337 = 0x100000000000000000000000000000000000000000000000000000000
0x514: V338 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x76acb5e8
0x516: M[V334] = 0x76acb5e800000000000000000000000000000000000000000000000000000000
0x517: V339 = 0x4
0x519: V340 = ADD 0x4 V334
0x51c: V341 = 0x0
0x51e: V342 = NOT 0x0
0x51f: V343 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x273600000000000000000000000000000000000000000000000000000000
0x520: V344 = 0x0
0x522: V345 = NOT 0x0
0x523: V346 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x273600000000000000000000000000000000000000000000000000000000
0x525: M[V340] = 0x273600000000000000000000000000000000000000000000000000000000
0x526: V347 = 0x20
0x528: V348 = ADD 0x20 V340
0x52c: V349 = 0x0
0x52e: V350 = 0x40
0x530: V351 = M[0x40]
0x533: V352 = SUB V348 V351
0x537: V353 = GAS
0x538: V354 = CALL V353 V329 V330 V351 V352 V351 0x0
0x540: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x555: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x556: V357 = 0x3ccfd60b
0x55b: V358 = 0x40
0x55d: V359 = M[0x40]
0x55f: V360 = 0xffffffff
0x564: V361 = AND 0xffffffff 0x3ccfd60b
0x565: V362 = 0x100000000000000000000000000000000000000000000000000000000
0x583: V363 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x585: M[V359] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x586: V364 = 0x4
0x588: V365 = ADD 0x4 V359
0x589: V366 = 0x0
0x58b: V367 = 0x40
0x58d: V368 = M[0x40]
0x590: V369 = SUB V365 V368
0x592: V370 = 0x0
0x596: V371 = EXTCODESIZE V356
0x597: V372 = ISZERO V371
0x599: V373 = ISZERO V372
0x59a: V374 = 0x192
0x59d: THROWI V373
---
Entry stack: [0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052, V303, V306, V309, V306, 0x76acb5e800000000000000000000000000000000000000000000000000000000, 0x273600000000000000000000000000000000000000000000000000000000, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V356, 0x3ccfd60b, V365, 0x0, V368, V369, V368, 0x0, V356, V372]
Exit stack: [0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052, V303, V306, V309, V306, 0x76acb5e800000000000000000000000000000000000000000000000000000000, 0x273600000000000000000000000000000000000000000000000000000000, 0x0, V356, 0x3ccfd60b, V365, 0x0, V368, V369, V368, 0x0, V356, V372]

================================

Block 0x59e
[0x59e:0x5ac]
---
Predecessors: [0x4b1]
Successors: [0x5ad]
---
0x59e PUSH1 0x0
0x5a0 DUP1
0x5a1 REVERT
0x5a2 JUMPDEST
0x5a3 POP
0x5a4 GAS
0x5a5 CALL
0x5a6 ISZERO
0x5a7 DUP1
0x5a8 ISZERO
0x5a9 PUSH2 0x1a6
0x5ac JUMPI
---
0x59e: V375 = 0x0
0x5a1: REVERT 0x0 0x0
0x5a2: JUMPDEST 
0x5a4: V376 = GAS
0x5a5: V377 = CALL V376 S1 S2 S3 S4 S5 S6
0x5a6: V378 = ISZERO V377
0x5a8: V379 = ISZERO V378
0x5a9: V380 = 0x1a6
0x5ac: THROWI V379
---
Entry stack: [0x1a541c9b44986c0b9ef355d4af0a4fbdaba2f4b6aad6ac00296080604052, V303, V306, V309, V306, 0x76acb5e800000000000000000000000000000000000000000000000000000000, 0x273600000000000000000000000000000000000000000000000000000000, 0x0, V356, 0x3ccfd60b, V365, 0x0, V368, V369, V368, 0x0, V356, V372]
Stack pops: 0
Stack additions: [V378]
Exit stack: []

================================

Block 0x5ad
[0x5ad:0x61a]
---
Predecessors: [0x59e]
Successors: []
---
0x5ad RETURNDATASIZE
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 RETURNDATACOPY
0x5b2 RETURNDATASIZE
0x5b3 PUSH1 0x0
0x5b5 REVERT
0x5b6 JUMPDEST
0x5b7 POP
0x5b8 POP
0x5b9 POP
0x5ba POP
0x5bb DUP1
0x5bc DUP1
0x5bd PUSH1 0x1
0x5bf ADD
0x5c0 SWAP2
0x5c1 POP
0x5c2 POP
0x5c3 PUSH2 0x92
0x5c6 JUMP
0x5c7 JUMPDEST
0x5c8 ORIGIN
0x5c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5de AND
0x5df SELFDESTRUCT
0x5e0 STOP
0x5e1 LOG1
0x5e2 PUSH6 0x627a7a723058
0x5e9 SHA3
0x5ea PUSH2 0xc5bd
0x5ed PUSH19 0xfbc3f83a5906709c3878fb37b49249f32a22f3
0x601 PUSH25 0x5d724124d54f5d240029
---
0x5ad: V381 = RETURNDATASIZE
0x5ae: V382 = 0x0
0x5b1: RETURNDATACOPY 0x0 0x0 V381
0x5b2: V383 = RETURNDATASIZE
0x5b3: V384 = 0x0
0x5b5: REVERT 0x0 V383
0x5b6: JUMPDEST 
0x5bd: V385 = 0x1
0x5bf: V386 = ADD 0x1 S4
0x5c3: V387 = 0x92
0x5c6: THROW 
0x5c7: JUMPDEST 
0x5c8: V388 = ORIGIN
0x5c9: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x5de: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x5df: SELFDESTRUCT V390
0x5e0: STOP 
0x5e1: LOG S0 S1 S2
0x5e2: V391 = 0x627a7a723058
0x5e9: V392 = SHA3 0x627a7a723058 S3
0x5ea: V393 = 0xc5bd
0x5ed: V394 = 0xfbc3f83a5906709c3878fb37b49249f32a22f3
0x601: V395 = 0x5d724124d54f5d240029
---
Entry stack: [V378]
Stack pops: 0
Stack additions: [V386, 0x5d724124d54f5d240029, 0xfbc3f83a5906709c3878fb37b49249f32a22f3, 0xc5bd, V392]
Exit stack: []

================================

Function 0:
Public function signature: 0x460900cf
Entry block: 0x72
Exit block: 0xc7
Body: 0x72, 0xc7

Function 1:
Public function signature: 0xaffed0e0
Entry block: 0xc9
Exit block: 0xde
Body: 0xc9, 0xd1, 0xd5, 0xde, 0x2e2

Function 2:
Public function signature: 0xce7929b5
Entry block: 0xfa
Exit block: 0x10f
Body: 0xfa, 0x102, 0x106, 0x10f, 0x2f5, 0x36a, 0x373

Function 3:
Public function signature: 0xd087d288
Entry block: 0x111
Exit block: 0x126
Body: 0x111, 0x119, 0x11d, 0x126, 0x376

Function 4:
Public function signature: 0xe90e3ba6
Entry block: 0x142
Exit block: 0x197
Body: 0x142, 0x197, 0x38c, 0x398

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

Function 6:
Private function
Entry block: 0x199
Exit block: 0x282
Body: 0x199, 0x19f, 0x1a8, 0x1af, 0x1cb, 0x211, 0x21d, 0x282, 0x39e, 0x3ad

