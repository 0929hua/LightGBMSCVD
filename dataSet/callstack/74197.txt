Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x4210ad0e
0x34 EQ
0x35 PUSH2 0x3b
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x4210ad0e
0x34: V9 = EQ 0x4210ad0e V7
0x35: V10 = 0x3b
0x38: JUMPI 0x3b V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3a]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a INVALID
---
0x39: JUMPDEST 
0x3a: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3b
[0x3b:0x6f]
---
Predecessors: [0x0]
Successors: [0xb2]
---
0x3b JUMPDEST
0x3c PUSH2 0x70
0x3f PUSH1 0x4
0x41 DUP1
0x42 DUP1
0x43 CALLDATALOAD
0x44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59 AND
0x5a SWAP1
0x5b PUSH1 0x20
0x5d ADD
0x5e SWAP1
0x5f SWAP2
0x60 SWAP1
0x61 DUP1
0x62 CALLDATALOAD
0x63 SWAP1
0x64 PUSH1 0x20
0x66 ADD
0x67 SWAP1
0x68 SWAP2
0x69 SWAP1
0x6a POP
0x6b POP
0x6c PUSH2 0xb2
0x6f JUMP
---
0x3b: JUMPDEST 
0x3c: V11 = 0x70
0x3f: V12 = 0x4
0x43: V13 = CALLDATALOAD 0x4
0x44: V14 = 0xffffffffffffffffffffffffffffffffffffffff
0x59: V15 = AND 0xffffffffffffffffffffffffffffffffffffffff V13
0x5b: V16 = 0x20
0x5d: V17 = ADD 0x20 0x4
0x62: V18 = CALLDATALOAD 0x24
0x64: V19 = 0x20
0x66: V20 = ADD 0x20 0x24
0x6c: V21 = 0xb2
0x6f: JUMP 0xb2
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x70, V15, V18]
Exit stack: [V7, 0x70, V15, V18]

================================

Block 0x70
[0x70:0xb1]
---
Predecessors: [0x113]
Successors: []
---
0x70 JUMPDEST
0x71 PUSH1 0x40
0x73 MLOAD
0x74 DUP1
0x75 DUP3
0x76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b AND
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 DUP2
0xa3 MSTORE
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP2
0xa8 POP
0xa9 POP
0xaa PUSH1 0x40
0xac MLOAD
0xad DUP1
0xae SWAP2
0xaf SUB
0xb0 SWAP1
0xb1 RETURN
---
0x70: JUMPDEST 
0x71: V22 = 0x40
0x73: V23 = M[0x40]
0x76: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x8c: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0xa3: M[V23] = V27
0xa4: V28 = 0x20
0xa6: V29 = ADD 0x20 V23
0xaa: V30 = 0x40
0xac: V31 = M[0x40]
0xaf: V32 = SUB V29 V31
0xb1: RETURN V31 V32
---
Entry stack: [V7, V48]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xb2
[0xb2:0xbe]
---
Predecessors: [0x3b]
Successors: [0x119]
---
0xb2 JUMPDEST
0xb3 PUSH1 0x0
0xb5 CALLVALUE
0xb6 DUP4
0xb7 DUP4
0xb8 PUSH2 0xbf
0xbb PUSH2 0x119
0xbe JUMP
---
0xb2: JUMPDEST 
0xb3: V33 = 0x0
0xb5: V34 = CALLVALUE
0xb8: V35 = 0xbf
0xbb: V36 = 0x119
0xbe: JUMP 0x119
---
Entry stack: [V7, 0x70, V15, V18]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V34, S1, S0, 0xbf]
Exit stack: [V7, 0x70, V15, V18, 0x0, V34, V15, V18, 0xbf]

================================

Block 0xbf
[0xbf:0x10c]
---
Predecessors: [0x119]
Successors: [0x10d, 0x10e]
---
0xbf JUMPDEST
0xc0 DUP1
0xc1 DUP4
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 DUP3
0xf4 DUP2
0xf5 MSTORE
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP3
0xfa POP
0xfb POP
0xfc POP
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 SWAP2
0x102 SUB
0x103 SWAP1
0x104 DUP3
0x105 CREATE
0x106 DUP1
0x107 ISZERO
0x108 ISZERO
0x109 PUSH2 0x10e
0x10c JUMPI
---
0xbf: JUMPDEST 
0xc2: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V15
0xd8: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xef: M[V56] = V40
0xf0: V41 = 0x20
0xf2: V42 = ADD 0x20 V56
0xf5: M[V42] = V18
0xf6: V43 = 0x20
0xf8: V44 = ADD 0x20 V42
0xfd: V45 = 0x40
0xff: V46 = M[0x40]
0x102: V47 = SUB V44 V46
0x105: V48 = CREATE V34 V46 V47
0x107: V49 = ISZERO V48
0x108: V50 = ISZERO V49
0x109: V51 = 0x10e
0x10c: JUMPI 0x10e V50
---
Entry stack: [V7, 0x70, V15, V18, 0x0, V34, V15, V18, V56]
Stack pops: 4
Stack additions: [S3, V48]
Exit stack: [V7, 0x70, V15, V18, 0x0, V34, V48]

================================

Block 0x10d
[0x10d:0x10d]
---
Predecessors: [0xbf]
Successors: []
---
0x10d INVALID
---
0x10d: INVALID 
---
Entry stack: [V7, 0x70, V15, V18, 0x0, V34, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x70, V15, V18, 0x0, V34, V48]

================================

Block 0x10e
[0x10e:0x112]
---
Predecessors: [0xbf]
Successors: [0x113]
---
0x10e JUMPDEST
0x10f SWAP1
0x110 POP
0x111 SWAP1
0x112 POP
---
0x10e: JUMPDEST 
---
Entry stack: [V7, 0x70, V15, V18, 0x0, V34, V48]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V7, 0x70, V15, V18, V48]

================================

Block 0x113
[0x113:0x118]
---
Predecessors: [0x10e]
Successors: [0x70]
---
0x113 JUMPDEST
0x114 SWAP3
0x115 SWAP2
0x116 POP
0x117 POP
0x118 JUMP
---
0x113: JUMPDEST 
0x118: JUMP 0x70
---
Entry stack: [V7, 0x70, V15, V18, V48]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V7, V48]

================================

Block 0x119
[0x119:0x128]
---
Predecessors: [0xb2]
Successors: [0xbf]
---
0x119 JUMPDEST
0x11a PUSH1 0x40
0x11c MLOAD
0x11d PUSH2 0xf5e
0x120 DUP1
0x121 PUSH2 0x12a
0x124 DUP4
0x125 CODECOPY
0x126 ADD
0x127 SWAP1
0x128 JUMP
---
0x119: JUMPDEST 
0x11a: V52 = 0x40
0x11c: V53 = M[0x40]
0x11d: V54 = 0xf5e
0x121: V55 = 0x12a
0x125: CODECOPY V53 0x12a 0xf5e
0x126: V56 = ADD 0xf5e V53
0x128: JUMP 0xbf
---
Entry stack: [V7, 0x70, V15, V18, 0x0, V34, V15, V18, 0xbf]
Stack pops: 1
Stack additions: [V56]
Exit stack: [V7, 0x70, V15, V18, 0x0, V34, V15, V18, V56]

================================

Block 0x129
[0x129:0x196]
---
Predecessors: []
Successors: [0x197]
---
0x129 STOP
0x12a PUSH1 0x60
0x12c PUSH1 0x40
0x12e MSTORE
0x12f PUSH2 0xdead
0x132 PUSH1 0x2
0x134 PUSH1 0x0
0x136 PUSH2 0x100
0x139 EXP
0x13a DUP2
0x13b SLOAD
0x13c DUP2
0x13d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x152 MUL
0x153 NOT
0x154 AND
0x155 SWAP1
0x156 DUP4
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d MUL
0x16e OR
0x16f SWAP1
0x170 SSTORE
0x171 POP
0x172 PUSH1 0x40
0x174 MLOAD
0x175 PUSH1 0x40
0x177 DUP1
0x178 PUSH2 0xf5e
0x17b DUP4
0x17c CODECOPY
0x17d DUP2
0x17e ADD
0x17f PUSH1 0x40
0x181 MSTORE
0x182 DUP1
0x183 DUP1
0x184 MLOAD
0x185 SWAP1
0x186 PUSH1 0x20
0x188 ADD
0x189 SWAP1
0x18a SWAP2
0x18b SWAP1
0x18c DUP1
0x18d MLOAD
0x18e SWAP1
0x18f PUSH1 0x20
0x191 ADD
0x192 SWAP1
0x193 SWAP2
0x194 SWAP1
0x195 POP
0x196 POP
---
0x129: STOP 
0x12a: V57 = 0x60
0x12c: V58 = 0x40
0x12e: M[0x40] = 0x60
0x12f: V59 = 0xdead
0x132: V60 = 0x2
0x134: V61 = 0x0
0x136: V62 = 0x100
0x139: V63 = EXP 0x100 0x0
0x13b: V64 = S[0x2]
0x13d: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x152: V66 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x153: V67 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x154: V68 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V64
0x157: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdead
0x16d: V71 = MUL 0xdead 0x1
0x16e: V72 = OR 0xdead V68
0x170: S[0x2] = V72
0x172: V73 = 0x40
0x174: V74 = M[0x40]
0x175: V75 = 0x40
0x178: V76 = 0xf5e
0x17c: CODECOPY V74 0xf5e 0x40
0x17e: V77 = ADD V74 0x40
0x17f: V78 = 0x40
0x181: M[0x40] = V77
0x184: V79 = M[V74]
0x186: V80 = 0x20
0x188: V81 = ADD 0x20 V74
0x18d: V82 = M[V81]
0x18f: V83 = 0x20
0x191: V84 = ADD 0x20 V81
---
Entry stack: []
Stack pops: 0
Stack additions: [V82, V79]
Exit stack: []

================================

Block 0x197
[0x197:0x1df]
---
Predecessors: [0x129]
Successors: [0x1e0]
---
0x197 JUMPDEST
0x198 DUP2
0x199 PUSH1 0x0
0x19b PUSH1 0x0
0x19d PUSH2 0x100
0x1a0 EXP
0x1a1 DUP2
0x1a2 SLOAD
0x1a3 DUP2
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 MUL
0x1ba NOT
0x1bb AND
0x1bc SWAP1
0x1bd DUP4
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 MUL
0x1d5 OR
0x1d6 SWAP1
0x1d7 SSTORE
0x1d8 POP
0x1d9 DUP1
0x1da PUSH1 0x5
0x1dc DUP2
0x1dd SWAP1
0x1de SSTORE
0x1df POP
---
0x197: JUMPDEST 
0x199: V85 = 0x0
0x19b: V86 = 0x0
0x19d: V87 = 0x100
0x1a0: V88 = EXP 0x100 0x0
0x1a2: V89 = S[0x0]
0x1a4: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V91 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1ba: V92 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V93 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V89
0x1be: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x1d4: V96 = MUL V95 0x1
0x1d5: V97 = OR V96 V93
0x1d7: S[0x0] = V97
0x1da: V98 = 0x5
0x1de: S[0x5] = V82
---
Entry stack: [V79, V82]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V79, V82]

================================

Block 0x1e0
[0x1e0:0x1e2]
---
Predecessors: [0x197, 0x37f]
Successors: [0x1e3]
---
0x1e0 JUMPDEST
0x1e1 POP
0x1e2 POP
---
0x1e0: JUMPDEST 
---
Entry stack: [V79, V82]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x1e3
[0x1e3:0x1fc]
---
Predecessors: [0x1e0]
Successors: [0x1fd]
---
0x1e3 JUMPDEST
0x1e4 PUSH2 0xe96
0x1e7 DUP1
0x1e8 PUSH2 0xc8
0x1eb PUSH1 0x0
0x1ed CODECOPY
0x1ee PUSH1 0x0
0x1f0 RETURN
0x1f1 STOP
0x1f2 PUSH1 0x60
0x1f4 PUSH1 0x40
0x1f6 MSTORE
0x1f7 CALLDATASIZE
0x1f8 ISZERO
0x1f9 PUSH2 0xe4
0x1fc JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V99 = 0xe96
0x1e8: V100 = 0xc8
0x1eb: V101 = 0x0
0x1ed: CODECOPY 0x0 0xc8 0xe96
0x1ee: V102 = 0x0
0x1f0: RETURN 0x0 0xe96
0x1f1: STOP 
0x1f2: V103 = 0x60
0x1f4: V104 = 0x40
0x1f6: M[0x40] = 0x60
0x1f7: V105 = CALLDATASIZE
0x1f8: V106 = ISZERO V105
0x1f9: V107 = 0xe4
0x1fc: THROWI V106
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fd
[0x1fd:0x230]
---
Predecessors: [0x1e3]
Successors: [0x231]
---
0x1fd PUSH1 0x0
0x1ff CALLDATALOAD
0x200 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x21e SWAP1
0x21f DIV
0x220 PUSH4 0xffffffff
0x225 AND
0x226 DUP1
0x227 PUSH4 0x1194ed46
0x22c EQ
0x22d PUSH2 0xed
0x230 JUMPI
---
0x1fd: V108 = 0x0
0x1ff: V109 = CALLDATALOAD 0x0
0x200: V110 = 0x100000000000000000000000000000000000000000000000000000000
0x21f: V111 = DIV V109 0x100000000000000000000000000000000000000000000000000000000
0x220: V112 = 0xffffffff
0x225: V113 = AND 0xffffffff V111
0x227: V114 = 0x1194ed46
0x22c: V115 = EQ 0x1194ed46 V113
0x22d: V116 = 0xed
0x230: THROWI V115
---
Entry stack: []
Stack pops: 0
Stack additions: [V113]
Exit stack: [V113]

================================

Block 0x231
[0x231:0x23b]
---
Predecessors: [0x1fd]
Successors: [0x23c]
---
0x231 DUP1
0x232 PUSH4 0x123119cd
0x237 EQ
0x238 PUSH2 0x186
0x23b JUMPI
---
0x232: V117 = 0x123119cd
0x237: V118 = EQ 0x123119cd V113
0x238: V119 = 0x186
0x23b: THROWI V118
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x23c
[0x23c:0x246]
---
Predecessors: [0x231]
Successors: [0x247]
---
0x23c DUP1
0x23d PUSH4 0x1b88094d
0x242 EQ
0x243 PUSH2 0x1d8
0x246 JUMPI
---
0x23d: V120 = 0x1b88094d
0x242: V121 = EQ 0x1b88094d V113
0x243: V122 = 0x1d8
0x246: THROWI V121
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x247
[0x247:0x251]
---
Predecessors: [0x23c]
Successors: [0x252]
---
0x247 DUP1
0x248 PUSH4 0x30aa81c6
0x24d EQ
0x24e PUSH2 0x22a
0x251 JUMPI
---
0x248: V123 = 0x30aa81c6
0x24d: V124 = EQ 0x30aa81c6 V113
0x24e: V125 = 0x22a
0x251: THROWI V124
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x252
[0x252:0x25c]
---
Predecessors: [0x247]
Successors: [0x25d]
---
0x252 DUP1
0x253 PUSH4 0x37bdc99b
0x258 EQ
0x259 PUSH2 0x27c
0x25c JUMPI
---
0x253: V126 = 0x37bdc99b
0x258: V127 = EQ 0x37bdc99b V113
0x259: V128 = 0x27c
0x25c: THROWI V127
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x25d
[0x25d:0x267]
---
Predecessors: [0x252]
Successors: [0x268]
---
0x25d DUP1
0x25e PUSH4 0x3c7a3aff
0x263 EQ
0x264 PUSH2 0x2b4
0x267 JUMPI
---
0x25e: V129 = 0x3c7a3aff
0x263: V130 = EQ 0x3c7a3aff V113
0x264: V131 = 0x2b4
0x267: THROWI V130
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x268
[0x268:0x272]
---
Predecessors: [0x25d]
Successors: [0x273]
---
0x268 DUP1
0x269 PUSH4 0x42966c68
0x26e EQ
0x26f PUSH2 0x2be
0x272 JUMPI
---
0x269: V132 = 0x42966c68
0x26e: V133 = EQ 0x42966c68 V113
0x26f: V134 = 0x2be
0x272: THROWI V133
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x273
[0x273:0x27d]
---
Predecessors: [0x268]
Successors: [0x27e]
---
0x273 DUP1
0x274 PUSH4 0x5fee8a4b
0x279 EQ
0x27a PUSH2 0x2f6
0x27d JUMPI
---
0x274: V135 = 0x5fee8a4b
0x279: V136 = EQ 0x5fee8a4b V113
0x27a: V137 = 0x2f6
0x27d: THROWI V136
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x27e
[0x27e:0x288]
---
Predecessors: [0x273]
Successors: [0x289]
---
0x27e DUP1
0x27f PUSH4 0x66d003ac
0x284 EQ
0x285 PUSH2 0x31c
0x288 JUMPI
---
0x27f: V138 = 0x66d003ac
0x284: V139 = EQ 0x66d003ac V113
0x285: V140 = 0x31c
0x288: THROWI V139
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x289
[0x289:0x293]
---
Predecessors: [0x27e]
Successors: [0x294]
---
0x289 DUP1
0x28a PUSH4 0x70d5ae05
0x28f EQ
0x290 PUSH2 0x36e
0x293 JUMPI
---
0x28a: V141 = 0x70d5ae05
0x28f: V142 = EQ 0x70d5ae05 V113
0x290: V143 = 0x36e
0x293: THROWI V142
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x294
[0x294:0x29e]
---
Predecessors: [0x289]
Successors: [0x29f]
---
0x294 DUP1
0x295 PUSH4 0x9115ca43
0x29a EQ
0x29b PUSH2 0x3c0
0x29e JUMPI
---
0x295: V144 = 0x9115ca43
0x29a: V145 = EQ 0x9115ca43 V113
0x29b: V146 = 0x3c0
0x29e: THROWI V145
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x29f
[0x29f:0x2a9]
---
Predecessors: [0x294]
Successors: [0x2aa]
---
0x29f DUP1
0x2a0 PUSH4 0x9472eb76
0x2a5 EQ
0x2a6 PUSH2 0x459
0x2a9 JUMPI
---
0x2a0: V147 = 0x9472eb76
0x2a5: V148 = EQ 0x9472eb76 V113
0x2a6: V149 = 0x459
0x2a9: THROWI V148
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2aa
[0x2aa:0x2b4]
---
Predecessors: [0x29f]
Successors: [0x2b5]
---
0x2aa DUP1
0x2ab PUSH4 0xb2e7c288
0x2b0 EQ
0x2b1 PUSH2 0x4b3
0x2b4 JUMPI
---
0x2ab: V150 = 0xb2e7c288
0x2b0: V151 = EQ 0xb2e7c288 V113
0x2b1: V152 = 0x4b3
0x2b4: THROWI V151
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2b5
[0x2b5:0x2bf]
---
Predecessors: [0x2aa]
Successors: [0x2c0]
---
0x2b5 DUP1
0x2b6 PUSH4 0xc75e8d55
0x2bb EQ
0x2bc PUSH2 0x54c
0x2bf JUMPI
---
0x2b6: V153 = 0xc75e8d55
0x2bb: V154 = EQ 0xc75e8d55 V113
0x2bc: V155 = 0x54c
0x2bf: THROWI V154
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2c0
[0x2c0:0x2ca]
---
Predecessors: [0x2b5]
Successors: [0x2cb]
---
0x2c0 DUP1
0x2c1 PUSH4 0xec1e74a7
0x2c6 EQ
0x2c7 PUSH2 0x5a6
0x2ca JUMPI
---
0x2c1: V156 = 0xec1e74a7
0x2c6: V157 = EQ 0xec1e74a7 V113
0x2c7: V158 = 0x5a6
0x2ca: THROWI V157
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2cb
[0x2cb:0x2d5]
---
Predecessors: [0x2c0]
Successors: [0x2d6]
---
0x2cb DUP1
0x2cc PUSH4 0xf41b536e
0x2d1 EQ
0x2d2 PUSH2 0x5cc
0x2d5 JUMPI
---
0x2cc: V159 = 0xf41b536e
0x2d1: V160 = EQ 0xf41b536e V113
0x2d2: V161 = 0x5cc
0x2d5: THROWI V160
---
Entry stack: [V113]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V113]

================================

Block 0x2d6
[0x2d6:0x2d9]
---
Predecessors: [0x2cb]
Successors: [0x2da]
---
0x2d6 JUMPDEST
0x2d7 PUSH2 0xeb
---
0x2d6: JUMPDEST 
0x2d7: V162 = 0xeb
---
Entry stack: [V113]
Stack pops: 0
Stack additions: [0xeb]
Exit stack: [V113, 0xeb]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x2d6]
Successors: [0x2db]
---
0x2da JUMPDEST
---
0x2da: JUMPDEST 
---
Entry stack: [V113, 0xeb]
Stack pops: 0
Stack additions: []
Exit stack: [V113, 0xeb]

================================

Block 0x2db
[0x2db:0x2e5]
---
Predecessors: [0x2da]
Successors: [0x2e6]
---
0x2db JUMPDEST
0x2dc JUMP
0x2dd JUMPDEST
0x2de STOP
0x2df JUMPDEST
0x2e0 CALLVALUE
0x2e1 ISZERO
0x2e2 PUSH2 0xf5
0x2e5 JUMPI
---
0x2db: JUMPDEST 
0x2dc: THROW 
0x2dd: JUMPDEST 
0x2de: STOP 
0x2df: JUMPDEST 
0x2e0: V163 = CALLVALUE
0x2e1: V164 = ISZERO V163
0x2e2: V165 = 0xf5
0x2e5: THROWI V164
---
Entry stack: [V113, 0xeb]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x2e6
[0x2e6:0x319]
---
Predecessors: [0x2db]
Successors: [0x31a]
---
0x2e6 INVALID
0x2e7 JUMPDEST
0x2e8 PUSH2 0xfd
0x2eb PUSH2 0x665
0x2ee JUMP
0x2ef JUMPDEST
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 DUP1
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 DUP3
0x2f9 DUP2
0x2fa SUB
0x2fb DUP3
0x2fc MSTORE
0x2fd DUP4
0x2fe DUP2
0x2ff DUP2
0x300 MLOAD
0x301 DUP2
0x302 MSTORE
0x303 PUSH1 0x20
0x305 ADD
0x306 SWAP2
0x307 POP
0x308 DUP1
0x309 MLOAD
0x30a SWAP1
0x30b PUSH1 0x20
0x30d ADD
0x30e SWAP1
0x30f DUP1
0x310 DUP4
0x311 DUP4
0x312 PUSH1 0x0
0x314 DUP4
0x315 EQ
0x316 PUSH2 0x14c
0x319 JUMPI
---
0x2e6: INVALID 
0x2e7: JUMPDEST 
0x2e8: V166 = 0xfd
0x2eb: V167 = 0x665
0x2ee: THROW 
0x2ef: JUMPDEST 
0x2f0: V168 = 0x40
0x2f2: V169 = M[0x40]
0x2f5: V170 = 0x20
0x2f7: V171 = ADD 0x20 V169
0x2fa: V172 = SUB V171 V169
0x2fc: M[V169] = V172
0x300: V173 = M[S0]
0x302: M[V171] = V173
0x303: V174 = 0x20
0x305: V175 = ADD 0x20 V171
0x309: V176 = M[S0]
0x30b: V177 = 0x20
0x30d: V178 = ADD 0x20 S0
0x312: V179 = 0x0
0x315: V180 = EQ V176 0x0
0x316: V181 = 0x14c
0x319: THROWI V180
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfd, V178, V175, V176, V176, V178, V175, V169, V169, S0]
Exit stack: []

================================

Block 0x31a
[0x31a:0x327]
---
Predecessors: [0x2e6]
Successors: [0x328]
---
0x31a JUMPDEST
0x31b DUP1
0x31c MLOAD
0x31d DUP3
0x31e MSTORE
0x31f PUSH1 0x20
0x321 DUP4
0x322 GT
0x323 ISZERO
0x324 PUSH2 0x14c
0x327 JUMPI
---
0x31a: JUMPDEST 
0x31c: V182 = M[V178]
0x31e: M[V175] = V182
0x31f: V183 = 0x20
0x322: V184 = GT V176 0x20
0x323: V185 = ISZERO V184
0x324: V186 = 0x14c
0x327: THROWI V185
---
Entry stack: [S8, V169, V169, V175, V178, V176, V176, V175, V178]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V169, V169, V175, V178, V176, V176, V175, V178]

================================

Block 0x328
[0x328:0x350]
---
Predecessors: [0x31a]
Successors: [0x351]
---
0x328 PUSH1 0x20
0x32a DUP3
0x32b ADD
0x32c SWAP2
0x32d POP
0x32e PUSH1 0x20
0x330 DUP2
0x331 ADD
0x332 SWAP1
0x333 POP
0x334 PUSH1 0x20
0x336 DUP4
0x337 SUB
0x338 SWAP3
0x339 POP
0x33a PUSH2 0x128
0x33d JUMP
0x33e JUMPDEST
0x33f POP
0x340 POP
0x341 POP
0x342 SWAP1
0x343 POP
0x344 SWAP1
0x345 DUP2
0x346 ADD
0x347 SWAP1
0x348 PUSH1 0x1f
0x34a AND
0x34b DUP1
0x34c ISZERO
0x34d PUSH2 0x178
0x350 JUMPI
---
0x328: V187 = 0x20
0x32b: V188 = ADD V175 0x20
0x32e: V189 = 0x20
0x331: V190 = ADD V178 0x20
0x334: V191 = 0x20
0x337: V192 = SUB V176 0x20
0x33a: V193 = 0x128
0x33d: THROW 
0x33e: JUMPDEST 
0x346: V194 = ADD S3 S5
0x348: V195 = 0x1f
0x34a: V196 = AND 0x1f S3
0x34c: V197 = ISZERO V196
0x34d: V198 = 0x178
0x350: THROWI V197
---
Entry stack: [S8, V169, V169, V175, V178, V176, V176, V175, V178]
Stack pops: 3
Stack additions: [V196, V194]
Exit stack: []

================================

Block 0x351
[0x351:0x369]
---
Predecessors: [0x328]
Successors: [0x36a]
---
0x351 DUP1
0x352 DUP3
0x353 SUB
0x354 DUP1
0x355 MLOAD
0x356 PUSH1 0x1
0x358 DUP4
0x359 PUSH1 0x20
0x35b SUB
0x35c PUSH2 0x100
0x35f EXP
0x360 SUB
0x361 NOT
0x362 AND
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x20
0x367 ADD
0x368 SWAP2
0x369 POP
---
0x353: V199 = SUB V194 V196
0x355: V200 = M[V199]
0x356: V201 = 0x1
0x359: V202 = 0x20
0x35b: V203 = SUB 0x20 V196
0x35c: V204 = 0x100
0x35f: V205 = EXP 0x100 V203
0x360: V206 = SUB V205 0x1
0x361: V207 = NOT V206
0x362: V208 = AND V207 V200
0x364: M[V199] = V208
0x365: V209 = 0x20
0x367: V210 = ADD 0x20 V199
---
Entry stack: [V194, V196]
Stack pops: 2
Stack additions: [V210, S0]
Exit stack: [V210, V196]

================================

Block 0x36a
[0x36a:0x37e]
---
Predecessors: [0x351]
Successors: [0x37f]
---
0x36a JUMPDEST
0x36b POP
0x36c SWAP3
0x36d POP
0x36e POP
0x36f POP
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 SWAP2
0x375 SUB
0x376 SWAP1
0x377 RETURN
0x378 JUMPDEST
0x379 CALLVALUE
0x37a ISZERO
0x37b PUSH2 0x18e
0x37e JUMPI
---
0x36a: JUMPDEST 
0x370: V211 = 0x40
0x372: V212 = M[0x40]
0x375: V213 = SUB V210 V212
0x377: RETURN V212 V213
0x378: JUMPDEST 
0x379: V214 = CALLVALUE
0x37a: V215 = ISZERO V214
0x37b: V216 = 0x18e
0x37e: THROWI V215
---
Entry stack: [V210, V196]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x3d0]
---
Predecessors: [0x36a]
Successors: [0x1e0, 0x3d1]
---
0x37f INVALID
0x380 JUMPDEST
0x381 PUSH2 0x196
0x384 PUSH2 0x703
0x387 JUMP
0x388 JUMPDEST
0x389 PUSH1 0x40
0x38b MLOAD
0x38c DUP1
0x38d DUP3
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 AND
0x3a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b9 AND
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP2
0x3c0 POP
0x3c1 POP
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 SWAP2
0x3c7 SUB
0x3c8 SWAP1
0x3c9 RETURN
0x3ca JUMPDEST
0x3cb CALLVALUE
0x3cc ISZERO
0x3cd PUSH2 0x1e0
0x3d0 JUMPI
---
0x37f: INVALID 
0x380: JUMPDEST 
0x381: V217 = 0x196
0x384: V218 = 0x703
0x387: THROW 
0x388: JUMPDEST 
0x389: V219 = 0x40
0x38b: V220 = M[0x40]
0x38e: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3a4: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b9: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3bb: M[V220] = V224
0x3bc: V225 = 0x20
0x3be: V226 = ADD 0x20 V220
0x3c2: V227 = 0x40
0x3c4: V228 = M[0x40]
0x3c7: V229 = SUB V226 V228
0x3c9: RETURN V228 V229
0x3ca: JUMPDEST 
0x3cb: V230 = CALLVALUE
0x3cc: V231 = ISZERO V230
0x3cd: V232 = 0x1e0
0x3d0: JUMPI 0x1e0 V231
---
Entry stack: []
Stack pops: 0
Stack additions: [0x196]
Exit stack: []

================================

Block 0x3d1
[0x3d1:0x422]
---
Predecessors: [0x37f]
Successors: [0x423]
---
0x3d1 INVALID
0x3d2 JUMPDEST
0x3d3 PUSH2 0x1e8
0x3d6 PUSH2 0x729
0x3d9 JUMP
0x3da JUMPDEST
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de DUP1
0x3df DUP3
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 SWAP2
0x412 POP
0x413 POP
0x414 PUSH1 0x40
0x416 MLOAD
0x417 DUP1
0x418 SWAP2
0x419 SUB
0x41a SWAP1
0x41b RETURN
0x41c JUMPDEST
0x41d CALLVALUE
0x41e ISZERO
0x41f PUSH2 0x232
0x422 JUMPI
---
0x3d1: INVALID 
0x3d2: JUMPDEST 
0x3d3: V233 = 0x1e8
0x3d6: V234 = 0x729
0x3d9: THROW 
0x3da: JUMPDEST 
0x3db: V235 = 0x40
0x3dd: V236 = M[0x40]
0x3e0: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3f6: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x40d: M[V236] = V240
0x40e: V241 = 0x20
0x410: V242 = ADD 0x20 V236
0x414: V243 = 0x40
0x416: V244 = M[0x40]
0x419: V245 = SUB V242 V244
0x41b: RETURN V244 V245
0x41c: JUMPDEST 
0x41d: V246 = CALLVALUE
0x41e: V247 = ISZERO V246
0x41f: V248 = 0x232
0x422: THROWI V247
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: []

================================

Block 0x423
[0x423:0x474]
---
Predecessors: [0x3d1]
Successors: [0x475]
---
0x423 INVALID
0x424 JUMPDEST
0x425 PUSH2 0x23a
0x428 PUSH2 0x754
0x42b JUMP
0x42c JUMPDEST
0x42d PUSH1 0x40
0x42f MLOAD
0x430 DUP1
0x431 DUP3
0x432 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x447 AND
0x448 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45d AND
0x45e DUP2
0x45f MSTORE
0x460 PUSH1 0x20
0x462 ADD
0x463 SWAP2
0x464 POP
0x465 POP
0x466 PUSH1 0x40
0x468 MLOAD
0x469 DUP1
0x46a SWAP2
0x46b SUB
0x46c SWAP1
0x46d RETURN
0x46e JUMPDEST
0x46f CALLVALUE
0x470 ISZERO
0x471 PUSH2 0x284
0x474 JUMPI
---
0x423: INVALID 
0x424: JUMPDEST 
0x425: V249 = 0x23a
0x428: V250 = 0x754
0x42b: THROW 
0x42c: JUMPDEST 
0x42d: V251 = 0x40
0x42f: V252 = M[0x40]
0x432: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x447: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x448: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x45d: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x45f: M[V252] = V256
0x460: V257 = 0x20
0x462: V258 = ADD 0x20 V252
0x466: V259 = 0x40
0x468: V260 = M[0x40]
0x46b: V261 = SUB V258 V260
0x46d: RETURN V260 V261
0x46e: JUMPDEST 
0x46f: V262 = CALLVALUE
0x470: V263 = ISZERO V262
0x471: V264 = 0x284
0x474: THROWI V263
---
Entry stack: []
Stack pops: 0
Stack additions: [0x23a]
Exit stack: []

================================

Block 0x475
[0x475:0x4b6]
---
Predecessors: [0x423]
Successors: [0x4b7]
---
0x475 INVALID
0x476 JUMPDEST
0x477 PUSH2 0x29a
0x47a PUSH1 0x4
0x47c DUP1
0x47d DUP1
0x47e CALLDATALOAD
0x47f SWAP1
0x480 PUSH1 0x20
0x482 ADD
0x483 SWAP1
0x484 SWAP2
0x485 SWAP1
0x486 POP
0x487 POP
0x488 PUSH2 0x77f
0x48b JUMP
0x48c JUMPDEST
0x48d PUSH1 0x40
0x48f MLOAD
0x490 DUP1
0x491 DUP3
0x492 ISZERO
0x493 ISZERO
0x494 ISZERO
0x495 ISZERO
0x496 DUP2
0x497 MSTORE
0x498 PUSH1 0x20
0x49a ADD
0x49b SWAP2
0x49c POP
0x49d POP
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 DUP1
0x4a2 SWAP2
0x4a3 SUB
0x4a4 SWAP1
0x4a5 RETURN
0x4a6 JUMPDEST
0x4a7 PUSH2 0x2bc
0x4aa PUSH2 0x89f
0x4ad JUMP
0x4ae JUMPDEST
0x4af STOP
0x4b0 JUMPDEST
0x4b1 CALLVALUE
0x4b2 ISZERO
0x4b3 PUSH2 0x2c6
0x4b6 JUMPI
---
0x475: INVALID 
0x476: JUMPDEST 
0x477: V265 = 0x29a
0x47a: V266 = 0x4
0x47e: V267 = CALLDATALOAD 0x4
0x480: V268 = 0x20
0x482: V269 = ADD 0x20 0x4
0x488: V270 = 0x77f
0x48b: THROW 
0x48c: JUMPDEST 
0x48d: V271 = 0x40
0x48f: V272 = M[0x40]
0x492: V273 = ISZERO S0
0x493: V274 = ISZERO V273
0x494: V275 = ISZERO V274
0x495: V276 = ISZERO V275
0x497: M[V272] = V276
0x498: V277 = 0x20
0x49a: V278 = ADD 0x20 V272
0x49e: V279 = 0x40
0x4a0: V280 = M[0x40]
0x4a3: V281 = SUB V278 V280
0x4a5: RETURN V280 V281
0x4a6: JUMPDEST 
0x4a7: V282 = 0x2bc
0x4aa: V283 = 0x89f
0x4ad: THROW 
0x4ae: JUMPDEST 
0x4af: STOP 
0x4b0: JUMPDEST 
0x4b1: V284 = CALLVALUE
0x4b2: V285 = ISZERO V284
0x4b3: V286 = 0x2c6
0x4b6: THROWI V285
---
Entry stack: []
Stack pops: 0
Stack additions: [V267, 0x29a, 0x2bc]
Exit stack: []

================================

Block 0x4b7
[0x4b7:0x4ee]
---
Predecessors: [0x475]
Successors: [0x4ef]
---
0x4b7 INVALID
0x4b8 JUMPDEST
0x4b9 PUSH2 0x2dc
0x4bc PUSH1 0x4
0x4be DUP1
0x4bf DUP1
0x4c0 CALLDATALOAD
0x4c1 SWAP1
0x4c2 PUSH1 0x20
0x4c4 ADD
0x4c5 SWAP1
0x4c6 SWAP2
0x4c7 SWAP1
0x4c8 POP
0x4c9 POP
0x4ca PUSH2 0x952
0x4cd JUMP
0x4ce JUMPDEST
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 DUP1
0x4d3 DUP3
0x4d4 ISZERO
0x4d5 ISZERO
0x4d6 ISZERO
0x4d7 ISZERO
0x4d8 DUP2
0x4d9 MSTORE
0x4da PUSH1 0x20
0x4dc ADD
0x4dd SWAP2
0x4de POP
0x4df POP
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP1
0x4e4 SWAP2
0x4e5 SUB
0x4e6 SWAP1
0x4e7 RETURN
0x4e8 JUMPDEST
0x4e9 CALLVALUE
0x4ea ISZERO
0x4eb PUSH2 0x2fe
0x4ee JUMPI
---
0x4b7: INVALID 
0x4b8: JUMPDEST 
0x4b9: V287 = 0x2dc
0x4bc: V288 = 0x4
0x4c0: V289 = CALLDATALOAD 0x4
0x4c2: V290 = 0x20
0x4c4: V291 = ADD 0x20 0x4
0x4ca: V292 = 0x952
0x4cd: THROW 
0x4ce: JUMPDEST 
0x4cf: V293 = 0x40
0x4d1: V294 = M[0x40]
0x4d4: V295 = ISZERO S0
0x4d5: V296 = ISZERO V295
0x4d6: V297 = ISZERO V296
0x4d7: V298 = ISZERO V297
0x4d9: M[V294] = V298
0x4da: V299 = 0x20
0x4dc: V300 = ADD 0x20 V294
0x4e0: V301 = 0x40
0x4e2: V302 = M[0x40]
0x4e5: V303 = SUB V300 V302
0x4e7: RETURN V302 V303
0x4e8: JUMPDEST 
0x4e9: V304 = CALLVALUE
0x4ea: V305 = ISZERO V304
0x4eb: V306 = 0x2fe
0x4ee: THROWI V305
---
Entry stack: []
Stack pops: 0
Stack additions: [V289, 0x2dc]
Exit stack: []

================================

Block 0x4ef
[0x4ef:0x514]
---
Predecessors: [0x4b7]
Successors: [0x515]
---
0x4ef INVALID
0x4f0 JUMPDEST
0x4f1 PUSH2 0x306
0x4f4 PUSH2 0xa72
0x4f7 JUMP
0x4f8 JUMPDEST
0x4f9 PUSH1 0x40
0x4fb MLOAD
0x4fc DUP1
0x4fd DUP3
0x4fe DUP2
0x4ff MSTORE
0x500 PUSH1 0x20
0x502 ADD
0x503 SWAP2
0x504 POP
0x505 POP
0x506 PUSH1 0x40
0x508 MLOAD
0x509 DUP1
0x50a SWAP2
0x50b SUB
0x50c SWAP1
0x50d RETURN
0x50e JUMPDEST
0x50f CALLVALUE
0x510 ISZERO
0x511 PUSH2 0x324
0x514 JUMPI
---
0x4ef: INVALID 
0x4f0: JUMPDEST 
0x4f1: V307 = 0x306
0x4f4: V308 = 0xa72
0x4f7: THROW 
0x4f8: JUMPDEST 
0x4f9: V309 = 0x40
0x4fb: V310 = M[0x40]
0x4ff: M[V310] = S0
0x500: V311 = 0x20
0x502: V312 = ADD 0x20 V310
0x506: V313 = 0x40
0x508: V314 = M[0x40]
0x50b: V315 = SUB V312 V314
0x50d: RETURN V314 V315
0x50e: JUMPDEST 
0x50f: V316 = CALLVALUE
0x510: V317 = ISZERO V316
0x511: V318 = 0x324
0x514: THROWI V317
---
Entry stack: []
Stack pops: 0
Stack additions: [0x306]
Exit stack: []

================================

Block 0x515
[0x515:0x566]
---
Predecessors: [0x4ef]
Successors: [0x567]
---
0x515 INVALID
0x516 JUMPDEST
0x517 PUSH2 0x32c
0x51a PUSH2 0xa7d
0x51d JUMP
0x51e JUMPDEST
0x51f PUSH1 0x40
0x521 MLOAD
0x522 DUP1
0x523 DUP3
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 AND
0x53a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54f AND
0x550 DUP2
0x551 MSTORE
0x552 PUSH1 0x20
0x554 ADD
0x555 SWAP2
0x556 POP
0x557 POP
0x558 PUSH1 0x40
0x55a MLOAD
0x55b DUP1
0x55c SWAP2
0x55d SUB
0x55e SWAP1
0x55f RETURN
0x560 JUMPDEST
0x561 CALLVALUE
0x562 ISZERO
0x563 PUSH2 0x376
0x566 JUMPI
---
0x515: INVALID 
0x516: JUMPDEST 
0x517: V319 = 0x32c
0x51a: V320 = 0xa7d
0x51d: THROW 
0x51e: JUMPDEST 
0x51f: V321 = 0x40
0x521: V322 = M[0x40]
0x524: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x539: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x53a: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x551: M[V322] = V326
0x552: V327 = 0x20
0x554: V328 = ADD 0x20 V322
0x558: V329 = 0x40
0x55a: V330 = M[0x40]
0x55d: V331 = SUB V328 V330
0x55f: RETURN V330 V331
0x560: JUMPDEST 
0x561: V332 = CALLVALUE
0x562: V333 = ISZERO V332
0x563: V334 = 0x376
0x566: THROWI V333
---
Entry stack: []
Stack pops: 0
Stack additions: [0x32c]
Exit stack: []

================================

Block 0x567
[0x567:0x5b8]
---
Predecessors: [0x515]
Successors: [0x5b9]
---
0x567 INVALID
0x568 JUMPDEST
0x569 PUSH2 0x37e
0x56c PUSH2 0xaa3
0x56f JUMP
0x570 JUMPDEST
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 DUP3
0x576 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58b AND
0x58c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a1 AND
0x5a2 DUP2
0x5a3 MSTORE
0x5a4 PUSH1 0x20
0x5a6 ADD
0x5a7 SWAP2
0x5a8 POP
0x5a9 POP
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae SWAP2
0x5af SUB
0x5b0 SWAP1
0x5b1 RETURN
0x5b2 JUMPDEST
0x5b3 CALLVALUE
0x5b4 ISZERO
0x5b5 PUSH2 0x3c8
0x5b8 JUMPI
---
0x567: INVALID 
0x568: JUMPDEST 
0x569: V335 = 0x37e
0x56c: V336 = 0xaa3
0x56f: THROW 
0x570: JUMPDEST 
0x571: V337 = 0x40
0x573: V338 = M[0x40]
0x576: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x58c: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x5a3: M[V338] = V342
0x5a4: V343 = 0x20
0x5a6: V344 = ADD 0x20 V338
0x5aa: V345 = 0x40
0x5ac: V346 = M[0x40]
0x5af: V347 = SUB V344 V346
0x5b1: RETURN V346 V347
0x5b2: JUMPDEST 
0x5b3: V348 = CALLVALUE
0x5b4: V349 = ISZERO V348
0x5b5: V350 = 0x3c8
0x5b8: THROWI V349
---
Entry stack: []
Stack pops: 0
Stack additions: [0x37e]
Exit stack: []

================================

Block 0x5b9
[0x5b9:0x5ec]
---
Predecessors: [0x567]
Successors: [0x5ed]
---
0x5b9 INVALID
0x5ba JUMPDEST
0x5bb PUSH2 0x3d0
0x5be PUSH2 0xac9
0x5c1 JUMP
0x5c2 JUMPDEST
0x5c3 PUSH1 0x40
0x5c5 MLOAD
0x5c6 DUP1
0x5c7 DUP1
0x5c8 PUSH1 0x20
0x5ca ADD
0x5cb DUP3
0x5cc DUP2
0x5cd SUB
0x5ce DUP3
0x5cf MSTORE
0x5d0 DUP4
0x5d1 DUP2
0x5d2 DUP2
0x5d3 MLOAD
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x20
0x5d8 ADD
0x5d9 SWAP2
0x5da POP
0x5db DUP1
0x5dc MLOAD
0x5dd SWAP1
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 SWAP1
0x5e2 DUP1
0x5e3 DUP4
0x5e4 DUP4
0x5e5 PUSH1 0x0
0x5e7 DUP4
0x5e8 EQ
0x5e9 PUSH2 0x41f
0x5ec JUMPI
---
0x5b9: INVALID 
0x5ba: JUMPDEST 
0x5bb: V351 = 0x3d0
0x5be: V352 = 0xac9
0x5c1: THROW 
0x5c2: JUMPDEST 
0x5c3: V353 = 0x40
0x5c5: V354 = M[0x40]
0x5c8: V355 = 0x20
0x5ca: V356 = ADD 0x20 V354
0x5cd: V357 = SUB V356 V354
0x5cf: M[V354] = V357
0x5d3: V358 = M[S0]
0x5d5: M[V356] = V358
0x5d6: V359 = 0x20
0x5d8: V360 = ADD 0x20 V356
0x5dc: V361 = M[S0]
0x5de: V362 = 0x20
0x5e0: V363 = ADD 0x20 S0
0x5e5: V364 = 0x0
0x5e8: V365 = EQ V361 0x0
0x5e9: V366 = 0x41f
0x5ec: THROWI V365
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3d0, V363, V360, V361, V361, V363, V360, V354, V354, S0]
Exit stack: []

================================

Block 0x5ed
[0x5ed:0x5fa]
---
Predecessors: [0x5b9]
Successors: [0x5fb]
---
0x5ed JUMPDEST
0x5ee DUP1
0x5ef MLOAD
0x5f0 DUP3
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 DUP4
0x5f5 GT
0x5f6 ISZERO
0x5f7 PUSH2 0x41f
0x5fa JUMPI
---
0x5ed: JUMPDEST 
0x5ef: V367 = M[V363]
0x5f1: M[V360] = V367
0x5f2: V368 = 0x20
0x5f5: V369 = GT V361 0x20
0x5f6: V370 = ISZERO V369
0x5f7: V371 = 0x41f
0x5fa: THROWI V370
---
Entry stack: [S8, V354, V354, V360, V363, V361, V361, V360, V363]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V354, V354, V360, V363, V361, V361, V360, V363]

================================

Block 0x5fb
[0x5fb:0x623]
---
Predecessors: [0x5ed]
Successors: [0x624]
---
0x5fb PUSH1 0x20
0x5fd DUP3
0x5fe ADD
0x5ff SWAP2
0x600 POP
0x601 PUSH1 0x20
0x603 DUP2
0x604 ADD
0x605 SWAP1
0x606 POP
0x607 PUSH1 0x20
0x609 DUP4
0x60a SUB
0x60b SWAP3
0x60c POP
0x60d PUSH2 0x3fb
0x610 JUMP
0x611 JUMPDEST
0x612 POP
0x613 POP
0x614 POP
0x615 SWAP1
0x616 POP
0x617 SWAP1
0x618 DUP2
0x619 ADD
0x61a SWAP1
0x61b PUSH1 0x1f
0x61d AND
0x61e DUP1
0x61f ISZERO
0x620 PUSH2 0x44b
0x623 JUMPI
---
0x5fb: V372 = 0x20
0x5fe: V373 = ADD V360 0x20
0x601: V374 = 0x20
0x604: V375 = ADD V363 0x20
0x607: V376 = 0x20
0x60a: V377 = SUB V361 0x20
0x60d: V378 = 0x3fb
0x610: THROW 
0x611: JUMPDEST 
0x619: V379 = ADD S3 S5
0x61b: V380 = 0x1f
0x61d: V381 = AND 0x1f S3
0x61f: V382 = ISZERO V381
0x620: V383 = 0x44b
0x623: THROWI V382
---
Entry stack: [S8, V354, V354, V360, V363, V361, V361, V360, V363]
Stack pops: 3
Stack additions: [V381, V379]
Exit stack: []

================================

Block 0x624
[0x624:0x63c]
---
Predecessors: [0x5fb]
Successors: [0x63d]
---
0x624 DUP1
0x625 DUP3
0x626 SUB
0x627 DUP1
0x628 MLOAD
0x629 PUSH1 0x1
0x62b DUP4
0x62c PUSH1 0x20
0x62e SUB
0x62f PUSH2 0x100
0x632 EXP
0x633 SUB
0x634 NOT
0x635 AND
0x636 DUP2
0x637 MSTORE
0x638 PUSH1 0x20
0x63a ADD
0x63b SWAP2
0x63c POP
---
0x626: V384 = SUB V379 V381
0x628: V385 = M[V384]
0x629: V386 = 0x1
0x62c: V387 = 0x20
0x62e: V388 = SUB 0x20 V381
0x62f: V389 = 0x100
0x632: V390 = EXP 0x100 V388
0x633: V391 = SUB V390 0x1
0x634: V392 = NOT V391
0x635: V393 = AND V392 V385
0x637: M[V384] = V393
0x638: V394 = 0x20
0x63a: V395 = ADD 0x20 V384
---
Entry stack: [V379, V381]
Stack pops: 2
Stack additions: [V395, S0]
Exit stack: [V395, V381]

================================

Block 0x63d
[0x63d:0x651]
---
Predecessors: [0x624]
Successors: [0x652]
---
0x63d JUMPDEST
0x63e POP
0x63f SWAP3
0x640 POP
0x641 POP
0x642 POP
0x643 PUSH1 0x40
0x645 MLOAD
0x646 DUP1
0x647 SWAP2
0x648 SUB
0x649 SWAP1
0x64a RETURN
0x64b JUMPDEST
0x64c CALLVALUE
0x64d ISZERO
0x64e PUSH2 0x461
0x651 JUMPI
---
0x63d: JUMPDEST 
0x643: V396 = 0x40
0x645: V397 = M[0x40]
0x648: V398 = SUB V395 V397
0x64a: RETURN V397 V398
0x64b: JUMPDEST 
0x64c: V399 = CALLVALUE
0x64d: V400 = ISZERO V399
0x64e: V401 = 0x461
0x651: THROWI V400
---
Entry stack: [V395, V381]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x652
[0x652:0x6ab]
---
Predecessors: [0x63d]
Successors: [0x6ac]
---
0x652 INVALID
0x653 JUMPDEST
0x654 PUSH2 0x4b1
0x657 PUSH1 0x4
0x659 DUP1
0x65a DUP1
0x65b CALLDATALOAD
0x65c SWAP1
0x65d PUSH1 0x20
0x65f ADD
0x660 SWAP1
0x661 DUP3
0x662 ADD
0x663 DUP1
0x664 CALLDATALOAD
0x665 SWAP1
0x666 PUSH1 0x20
0x668 ADD
0x669 SWAP1
0x66a DUP1
0x66b DUP1
0x66c PUSH1 0x1f
0x66e ADD
0x66f PUSH1 0x20
0x671 DUP1
0x672 SWAP2
0x673 DIV
0x674 MUL
0x675 PUSH1 0x20
0x677 ADD
0x678 PUSH1 0x40
0x67a MLOAD
0x67b SWAP1
0x67c DUP2
0x67d ADD
0x67e PUSH1 0x40
0x680 MSTORE
0x681 DUP1
0x682 SWAP4
0x683 SWAP3
0x684 SWAP2
0x685 SWAP1
0x686 DUP2
0x687 DUP2
0x688 MSTORE
0x689 PUSH1 0x20
0x68b ADD
0x68c DUP4
0x68d DUP4
0x68e DUP1
0x68f DUP3
0x690 DUP5
0x691 CALLDATACOPY
0x692 DUP3
0x693 ADD
0x694 SWAP2
0x695 POP
0x696 POP
0x697 POP
0x698 POP
0x699 POP
0x69a POP
0x69b SWAP2
0x69c SWAP1
0x69d POP
0x69e POP
0x69f PUSH2 0xb72
0x6a2 JUMP
0x6a3 JUMPDEST
0x6a4 STOP
0x6a5 JUMPDEST
0x6a6 CALLVALUE
0x6a7 ISZERO
0x6a8 PUSH2 0x4bb
0x6ab JUMPI
---
0x652: INVALID 
0x653: JUMPDEST 
0x654: V402 = 0x4b1
0x657: V403 = 0x4
0x65b: V404 = CALLDATALOAD 0x4
0x65d: V405 = 0x20
0x65f: V406 = ADD 0x20 0x4
0x662: V407 = ADD 0x4 V404
0x664: V408 = CALLDATALOAD V407
0x666: V409 = 0x20
0x668: V410 = ADD 0x20 V407
0x66c: V411 = 0x1f
0x66e: V412 = ADD 0x1f V408
0x66f: V413 = 0x20
0x673: V414 = DIV V412 0x20
0x674: V415 = MUL V414 0x20
0x675: V416 = 0x20
0x677: V417 = ADD 0x20 V415
0x678: V418 = 0x40
0x67a: V419 = M[0x40]
0x67d: V420 = ADD V419 V417
0x67e: V421 = 0x40
0x680: M[0x40] = V420
0x688: M[V419] = V408
0x689: V422 = 0x20
0x68b: V423 = ADD 0x20 V419
0x691: CALLDATACOPY V423 V410 V408
0x693: V424 = ADD V423 V408
0x69f: V425 = 0xb72
0x6a2: THROW 
0x6a3: JUMPDEST 
0x6a4: STOP 
0x6a5: JUMPDEST 
0x6a6: V426 = CALLVALUE
0x6a7: V427 = ISZERO V426
0x6a8: V428 = 0x4bb
0x6ab: THROWI V427
---
Entry stack: []
Stack pops: 0
Stack additions: [V419, 0x4b1]
Exit stack: []

================================

Block 0x6ac
[0x6ac:0x6df]
---
Predecessors: [0x652]
Successors: [0x6e0]
---
0x6ac INVALID
0x6ad JUMPDEST
0x6ae PUSH2 0x4c3
0x6b1 PUSH2 0xbeb
0x6b4 JUMP
0x6b5 JUMPDEST
0x6b6 PUSH1 0x40
0x6b8 MLOAD
0x6b9 DUP1
0x6ba DUP1
0x6bb PUSH1 0x20
0x6bd ADD
0x6be DUP3
0x6bf DUP2
0x6c0 SUB
0x6c1 DUP3
0x6c2 MSTORE
0x6c3 DUP4
0x6c4 DUP2
0x6c5 DUP2
0x6c6 MLOAD
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc SWAP2
0x6cd POP
0x6ce DUP1
0x6cf MLOAD
0x6d0 SWAP1
0x6d1 PUSH1 0x20
0x6d3 ADD
0x6d4 SWAP1
0x6d5 DUP1
0x6d6 DUP4
0x6d7 DUP4
0x6d8 PUSH1 0x0
0x6da DUP4
0x6db EQ
0x6dc PUSH2 0x512
0x6df JUMPI
---
0x6ac: INVALID 
0x6ad: JUMPDEST 
0x6ae: V429 = 0x4c3
0x6b1: V430 = 0xbeb
0x6b4: THROW 
0x6b5: JUMPDEST 
0x6b6: V431 = 0x40
0x6b8: V432 = M[0x40]
0x6bb: V433 = 0x20
0x6bd: V434 = ADD 0x20 V432
0x6c0: V435 = SUB V434 V432
0x6c2: M[V432] = V435
0x6c6: V436 = M[S0]
0x6c8: M[V434] = V436
0x6c9: V437 = 0x20
0x6cb: V438 = ADD 0x20 V434
0x6cf: V439 = M[S0]
0x6d1: V440 = 0x20
0x6d3: V441 = ADD 0x20 S0
0x6d8: V442 = 0x0
0x6db: V443 = EQ V439 0x0
0x6dc: V444 = 0x512
0x6df: THROWI V443
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4c3, V441, V438, V439, V439, V441, V438, V432, V432, S0]
Exit stack: []

================================

Block 0x6e0
[0x6e0:0x6ed]
---
Predecessors: [0x6ac]
Successors: [0x6ee]
---
0x6e0 JUMPDEST
0x6e1 DUP1
0x6e2 MLOAD
0x6e3 DUP3
0x6e4 MSTORE
0x6e5 PUSH1 0x20
0x6e7 DUP4
0x6e8 GT
0x6e9 ISZERO
0x6ea PUSH2 0x512
0x6ed JUMPI
---
0x6e0: JUMPDEST 
0x6e2: V445 = M[V441]
0x6e4: M[V438] = V445
0x6e5: V446 = 0x20
0x6e8: V447 = GT V439 0x20
0x6e9: V448 = ISZERO V447
0x6ea: V449 = 0x512
0x6ed: THROWI V448
---
Entry stack: [S8, V432, V432, V438, V441, V439, V439, V438, V441]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V432, V432, V438, V441, V439, V439, V438, V441]

================================

Block 0x6ee
[0x6ee:0x716]
---
Predecessors: [0x6e0]
Successors: [0x717]
---
0x6ee PUSH1 0x20
0x6f0 DUP3
0x6f1 ADD
0x6f2 SWAP2
0x6f3 POP
0x6f4 PUSH1 0x20
0x6f6 DUP2
0x6f7 ADD
0x6f8 SWAP1
0x6f9 POP
0x6fa PUSH1 0x20
0x6fc DUP4
0x6fd SUB
0x6fe SWAP3
0x6ff POP
0x700 PUSH2 0x4ee
0x703 JUMP
0x704 JUMPDEST
0x705 POP
0x706 POP
0x707 POP
0x708 SWAP1
0x709 POP
0x70a SWAP1
0x70b DUP2
0x70c ADD
0x70d SWAP1
0x70e PUSH1 0x1f
0x710 AND
0x711 DUP1
0x712 ISZERO
0x713 PUSH2 0x53e
0x716 JUMPI
---
0x6ee: V450 = 0x20
0x6f1: V451 = ADD V438 0x20
0x6f4: V452 = 0x20
0x6f7: V453 = ADD V441 0x20
0x6fa: V454 = 0x20
0x6fd: V455 = SUB V439 0x20
0x700: V456 = 0x4ee
0x703: THROW 
0x704: JUMPDEST 
0x70c: V457 = ADD S3 S5
0x70e: V458 = 0x1f
0x710: V459 = AND 0x1f S3
0x712: V460 = ISZERO V459
0x713: V461 = 0x53e
0x716: THROWI V460
---
Entry stack: [S8, V432, V432, V438, V441, V439, V439, V438, V441]
Stack pops: 3
Stack additions: [V459, V457]
Exit stack: []

================================

Block 0x717
[0x717:0x72f]
---
Predecessors: [0x6ee]
Successors: [0x730]
---
0x717 DUP1
0x718 DUP3
0x719 SUB
0x71a DUP1
0x71b MLOAD
0x71c PUSH1 0x1
0x71e DUP4
0x71f PUSH1 0x20
0x721 SUB
0x722 PUSH2 0x100
0x725 EXP
0x726 SUB
0x727 NOT
0x728 AND
0x729 DUP2
0x72a MSTORE
0x72b PUSH1 0x20
0x72d ADD
0x72e SWAP2
0x72f POP
---
0x719: V462 = SUB V457 V459
0x71b: V463 = M[V462]
0x71c: V464 = 0x1
0x71f: V465 = 0x20
0x721: V466 = SUB 0x20 V459
0x722: V467 = 0x100
0x725: V468 = EXP 0x100 V466
0x726: V469 = SUB V468 0x1
0x727: V470 = NOT V469
0x728: V471 = AND V470 V463
0x72a: M[V462] = V471
0x72b: V472 = 0x20
0x72d: V473 = ADD 0x20 V462
---
Entry stack: [V457, V459]
Stack pops: 2
Stack additions: [V473, S0]
Exit stack: [V473, V459]

================================

Block 0x730
[0x730:0x744]
---
Predecessors: [0x717]
Successors: [0x745]
---
0x730 JUMPDEST
0x731 POP
0x732 SWAP3
0x733 POP
0x734 POP
0x735 POP
0x736 PUSH1 0x40
0x738 MLOAD
0x739 DUP1
0x73a SWAP2
0x73b SUB
0x73c SWAP1
0x73d RETURN
0x73e JUMPDEST
0x73f CALLVALUE
0x740 ISZERO
0x741 PUSH2 0x554
0x744 JUMPI
---
0x730: JUMPDEST 
0x736: V474 = 0x40
0x738: V475 = M[0x40]
0x73b: V476 = SUB V473 V475
0x73d: RETURN V475 V476
0x73e: JUMPDEST 
0x73f: V477 = CALLVALUE
0x740: V478 = ISZERO V477
0x741: V479 = 0x554
0x744: THROWI V478
---
Entry stack: [V473, V459]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x745
[0x745:0x79e]
---
Predecessors: [0x730]
Successors: [0x79f]
---
0x745 INVALID
0x746 JUMPDEST
0x747 PUSH2 0x5a4
0x74a PUSH1 0x4
0x74c DUP1
0x74d DUP1
0x74e CALLDATALOAD
0x74f SWAP1
0x750 PUSH1 0x20
0x752 ADD
0x753 SWAP1
0x754 DUP3
0x755 ADD
0x756 DUP1
0x757 CALLDATALOAD
0x758 SWAP1
0x759 PUSH1 0x20
0x75b ADD
0x75c SWAP1
0x75d DUP1
0x75e DUP1
0x75f PUSH1 0x1f
0x761 ADD
0x762 PUSH1 0x20
0x764 DUP1
0x765 SWAP2
0x766 DIV
0x767 MUL
0x768 PUSH1 0x20
0x76a ADD
0x76b PUSH1 0x40
0x76d MLOAD
0x76e SWAP1
0x76f DUP2
0x770 ADD
0x771 PUSH1 0x40
0x773 MSTORE
0x774 DUP1
0x775 SWAP4
0x776 SWAP3
0x777 SWAP2
0x778 SWAP1
0x779 DUP2
0x77a DUP2
0x77b MSTORE
0x77c PUSH1 0x20
0x77e ADD
0x77f DUP4
0x780 DUP4
0x781 DUP1
0x782 DUP3
0x783 DUP5
0x784 CALLDATACOPY
0x785 DUP3
0x786 ADD
0x787 SWAP2
0x788 POP
0x789 POP
0x78a POP
0x78b POP
0x78c POP
0x78d POP
0x78e SWAP2
0x78f SWAP1
0x790 POP
0x791 POP
0x792 PUSH2 0xc89
0x795 JUMP
0x796 JUMPDEST
0x797 STOP
0x798 JUMPDEST
0x799 CALLVALUE
0x79a ISZERO
0x79b PUSH2 0x5ae
0x79e JUMPI
---
0x745: INVALID 
0x746: JUMPDEST 
0x747: V480 = 0x5a4
0x74a: V481 = 0x4
0x74e: V482 = CALLDATALOAD 0x4
0x750: V483 = 0x20
0x752: V484 = ADD 0x20 0x4
0x755: V485 = ADD 0x4 V482
0x757: V486 = CALLDATALOAD V485
0x759: V487 = 0x20
0x75b: V488 = ADD 0x20 V485
0x75f: V489 = 0x1f
0x761: V490 = ADD 0x1f V486
0x762: V491 = 0x20
0x766: V492 = DIV V490 0x20
0x767: V493 = MUL V492 0x20
0x768: V494 = 0x20
0x76a: V495 = ADD 0x20 V493
0x76b: V496 = 0x40
0x76d: V497 = M[0x40]
0x770: V498 = ADD V497 V495
0x771: V499 = 0x40
0x773: M[0x40] = V498
0x77b: M[V497] = V486
0x77c: V500 = 0x20
0x77e: V501 = ADD 0x20 V497
0x784: CALLDATACOPY V501 V488 V486
0x786: V502 = ADD V501 V486
0x792: V503 = 0xc89
0x795: THROW 
0x796: JUMPDEST 
0x797: STOP 
0x798: JUMPDEST 
0x799: V504 = CALLVALUE
0x79a: V505 = ISZERO V504
0x79b: V506 = 0x5ae
0x79e: THROWI V505
---
Entry stack: []
Stack pops: 0
Stack additions: [V497, 0x5a4]
Exit stack: []

================================

Block 0x79f
[0x79f:0x7c4]
---
Predecessors: [0x745]
Successors: [0x7c5]
---
0x79f INVALID
0x7a0 JUMPDEST
0x7a1 PUSH2 0x5b6
0x7a4 PUSH2 0xd02
0x7a7 JUMP
0x7a8 JUMPDEST
0x7a9 PUSH1 0x40
0x7ab MLOAD
0x7ac DUP1
0x7ad DUP3
0x7ae DUP2
0x7af MSTORE
0x7b0 PUSH1 0x20
0x7b2 ADD
0x7b3 SWAP2
0x7b4 POP
0x7b5 POP
0x7b6 PUSH1 0x40
0x7b8 MLOAD
0x7b9 DUP1
0x7ba SWAP2
0x7bb SUB
0x7bc SWAP1
0x7bd RETURN
0x7be JUMPDEST
0x7bf CALLVALUE
0x7c0 ISZERO
0x7c1 PUSH2 0x5d4
0x7c4 JUMPI
---
0x79f: INVALID 
0x7a0: JUMPDEST 
0x7a1: V507 = 0x5b6
0x7a4: V508 = 0xd02
0x7a7: THROW 
0x7a8: JUMPDEST 
0x7a9: V509 = 0x40
0x7ab: V510 = M[0x40]
0x7af: M[V510] = S0
0x7b0: V511 = 0x20
0x7b2: V512 = ADD 0x20 V510
0x7b6: V513 = 0x40
0x7b8: V514 = M[0x40]
0x7bb: V515 = SUB V512 V514
0x7bd: RETURN V514 V515
0x7be: JUMPDEST 
0x7bf: V516 = CALLVALUE
0x7c0: V517 = ISZERO V516
0x7c1: V518 = 0x5d4
0x7c4: THROWI V517
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5b6]
Exit stack: []

================================

Block 0x7c5
[0x7c5:0x7f8]
---
Predecessors: [0x79f]
Successors: [0x7f9]
---
0x7c5 INVALID
0x7c6 JUMPDEST
0x7c7 PUSH2 0x5dc
0x7ca PUSH2 0xd08
0x7cd JUMP
0x7ce JUMPDEST
0x7cf PUSH1 0x40
0x7d1 MLOAD
0x7d2 DUP1
0x7d3 DUP1
0x7d4 PUSH1 0x20
0x7d6 ADD
0x7d7 DUP3
0x7d8 DUP2
0x7d9 SUB
0x7da DUP3
0x7db MSTORE
0x7dc DUP4
0x7dd DUP2
0x7de DUP2
0x7df MLOAD
0x7e0 DUP2
0x7e1 MSTORE
0x7e2 PUSH1 0x20
0x7e4 ADD
0x7e5 SWAP2
0x7e6 POP
0x7e7 DUP1
0x7e8 MLOAD
0x7e9 SWAP1
0x7ea PUSH1 0x20
0x7ec ADD
0x7ed SWAP1
0x7ee DUP1
0x7ef DUP4
0x7f0 DUP4
0x7f1 PUSH1 0x0
0x7f3 DUP4
0x7f4 EQ
0x7f5 PUSH2 0x62b
0x7f8 JUMPI
---
0x7c5: INVALID 
0x7c6: JUMPDEST 
0x7c7: V519 = 0x5dc
0x7ca: V520 = 0xd08
0x7cd: THROW 
0x7ce: JUMPDEST 
0x7cf: V521 = 0x40
0x7d1: V522 = M[0x40]
0x7d4: V523 = 0x20
0x7d6: V524 = ADD 0x20 V522
0x7d9: V525 = SUB V524 V522
0x7db: M[V522] = V525
0x7df: V526 = M[S0]
0x7e1: M[V524] = V526
0x7e2: V527 = 0x20
0x7e4: V528 = ADD 0x20 V524
0x7e8: V529 = M[S0]
0x7ea: V530 = 0x20
0x7ec: V531 = ADD 0x20 S0
0x7f1: V532 = 0x0
0x7f4: V533 = EQ V529 0x0
0x7f5: V534 = 0x62b
0x7f8: THROWI V533
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5dc, V531, V528, V529, V529, V531, V528, V522, V522, S0]
Exit stack: []

================================

Block 0x7f9
[0x7f9:0x806]
---
Predecessors: [0x7c5]
Successors: [0x807]
---
0x7f9 JUMPDEST
0x7fa DUP1
0x7fb MLOAD
0x7fc DUP3
0x7fd MSTORE
0x7fe PUSH1 0x20
0x800 DUP4
0x801 GT
0x802 ISZERO
0x803 PUSH2 0x62b
0x806 JUMPI
---
0x7f9: JUMPDEST 
0x7fb: V535 = M[V531]
0x7fd: M[V528] = V535
0x7fe: V536 = 0x20
0x801: V537 = GT V529 0x20
0x802: V538 = ISZERO V537
0x803: V539 = 0x62b
0x806: THROWI V538
---
Entry stack: [S8, V522, V522, V528, V531, V529, V529, V528, V531]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V522, V522, V528, V531, V529, V529, V528, V531]

================================

Block 0x807
[0x807:0x82f]
---
Predecessors: [0x7f9]
Successors: [0x830]
---
0x807 PUSH1 0x20
0x809 DUP3
0x80a ADD
0x80b SWAP2
0x80c POP
0x80d PUSH1 0x20
0x80f DUP2
0x810 ADD
0x811 SWAP1
0x812 POP
0x813 PUSH1 0x20
0x815 DUP4
0x816 SUB
0x817 SWAP3
0x818 POP
0x819 PUSH2 0x607
0x81c JUMP
0x81d JUMPDEST
0x81e POP
0x81f POP
0x820 POP
0x821 SWAP1
0x822 POP
0x823 SWAP1
0x824 DUP2
0x825 ADD
0x826 SWAP1
0x827 PUSH1 0x1f
0x829 AND
0x82a DUP1
0x82b ISZERO
0x82c PUSH2 0x657
0x82f JUMPI
---
0x807: V540 = 0x20
0x80a: V541 = ADD V528 0x20
0x80d: V542 = 0x20
0x810: V543 = ADD V531 0x20
0x813: V544 = 0x20
0x816: V545 = SUB V529 0x20
0x819: V546 = 0x607
0x81c: THROW 
0x81d: JUMPDEST 
0x825: V547 = ADD S3 S5
0x827: V548 = 0x1f
0x829: V549 = AND 0x1f S3
0x82b: V550 = ISZERO V549
0x82c: V551 = 0x657
0x82f: THROWI V550
---
Entry stack: [S8, V522, V522, V528, V531, V529, V529, V528, V531]
Stack pops: 3
Stack additions: [V549, V547]
Exit stack: []

================================

Block 0x830
[0x830:0x848]
---
Predecessors: [0x807]
Successors: [0x849]
---
0x830 DUP1
0x831 DUP3
0x832 SUB
0x833 DUP1
0x834 MLOAD
0x835 PUSH1 0x1
0x837 DUP4
0x838 PUSH1 0x20
0x83a SUB
0x83b PUSH2 0x100
0x83e EXP
0x83f SUB
0x840 NOT
0x841 AND
0x842 DUP2
0x843 MSTORE
0x844 PUSH1 0x20
0x846 ADD
0x847 SWAP2
0x848 POP
---
0x832: V552 = SUB V547 V549
0x834: V553 = M[V552]
0x835: V554 = 0x1
0x838: V555 = 0x20
0x83a: V556 = SUB 0x20 V549
0x83b: V557 = 0x100
0x83e: V558 = EXP 0x100 V556
0x83f: V559 = SUB V558 0x1
0x840: V560 = NOT V559
0x841: V561 = AND V560 V553
0x843: M[V552] = V561
0x844: V562 = 0x20
0x846: V563 = ADD 0x20 V552
---
Entry stack: [V547, V549]
Stack pops: 2
Stack additions: [V563, S0]
Exit stack: [V563, V549]

================================

Block 0x849
[0x849:0x8a6]
---
Predecessors: [0x830]
Successors: [0x8a7]
---
0x849 JUMPDEST
0x84a POP
0x84b SWAP3
0x84c POP
0x84d POP
0x84e POP
0x84f PUSH1 0x40
0x851 MLOAD
0x852 DUP1
0x853 SWAP2
0x854 SUB
0x855 SWAP1
0x856 RETURN
0x857 JUMPDEST
0x858 PUSH1 0x3
0x85a DUP1
0x85b SLOAD
0x85c PUSH1 0x1
0x85e DUP2
0x85f PUSH1 0x1
0x861 AND
0x862 ISZERO
0x863 PUSH2 0x100
0x866 MUL
0x867 SUB
0x868 AND
0x869 PUSH1 0x2
0x86b SWAP1
0x86c DIV
0x86d DUP1
0x86e PUSH1 0x1f
0x870 ADD
0x871 PUSH1 0x20
0x873 DUP1
0x874 SWAP2
0x875 DIV
0x876 MUL
0x877 PUSH1 0x20
0x879 ADD
0x87a PUSH1 0x40
0x87c MLOAD
0x87d SWAP1
0x87e DUP2
0x87f ADD
0x880 PUSH1 0x40
0x882 MSTORE
0x883 DUP1
0x884 SWAP3
0x885 SWAP2
0x886 SWAP1
0x887 DUP2
0x888 DUP2
0x889 MSTORE
0x88a PUSH1 0x20
0x88c ADD
0x88d DUP3
0x88e DUP1
0x88f SLOAD
0x890 PUSH1 0x1
0x892 DUP2
0x893 PUSH1 0x1
0x895 AND
0x896 ISZERO
0x897 PUSH2 0x100
0x89a MUL
0x89b SUB
0x89c AND
0x89d PUSH1 0x2
0x89f SWAP1
0x8a0 DIV
0x8a1 DUP1
0x8a2 ISZERO
0x8a3 PUSH2 0x6fb
0x8a6 JUMPI
---
0x849: JUMPDEST 
0x84f: V564 = 0x40
0x851: V565 = M[0x40]
0x854: V566 = SUB V563 V565
0x856: RETURN V565 V566
0x857: JUMPDEST 
0x858: V567 = 0x3
0x85b: V568 = S[0x3]
0x85c: V569 = 0x1
0x85f: V570 = 0x1
0x861: V571 = AND 0x1 V568
0x862: V572 = ISZERO V571
0x863: V573 = 0x100
0x866: V574 = MUL 0x100 V572
0x867: V575 = SUB V574 0x1
0x868: V576 = AND V575 V568
0x869: V577 = 0x2
0x86c: V578 = DIV V576 0x2
0x86e: V579 = 0x1f
0x870: V580 = ADD 0x1f V578
0x871: V581 = 0x20
0x875: V582 = DIV V580 0x20
0x876: V583 = MUL V582 0x20
0x877: V584 = 0x20
0x879: V585 = ADD 0x20 V583
0x87a: V586 = 0x40
0x87c: V587 = M[0x40]
0x87f: V588 = ADD V587 V585
0x880: V589 = 0x40
0x882: M[0x40] = V588
0x889: M[V587] = V578
0x88a: V590 = 0x20
0x88c: V591 = ADD 0x20 V587
0x88f: V592 = S[0x3]
0x890: V593 = 0x1
0x893: V594 = 0x1
0x895: V595 = AND 0x1 V592
0x896: V596 = ISZERO V595
0x897: V597 = 0x100
0x89a: V598 = MUL 0x100 V596
0x89b: V599 = SUB V598 0x1
0x89c: V600 = AND V599 V592
0x89d: V601 = 0x2
0x8a0: V602 = DIV V600 0x2
0x8a2: V603 = ISZERO V602
0x8a3: V604 = 0x6fb
0x8a6: THROWI V603
---
Entry stack: [V563, V549]
Stack pops: 10
Stack additions: [V602, 0x3, V591, V578, 0x3, V587]
Exit stack: []

================================

Block 0x8a7
[0x8a7:0x8ae]
---
Predecessors: [0x849]
Successors: [0x8af]
---
0x8a7 DUP1
0x8a8 PUSH1 0x1f
0x8aa LT
0x8ab PUSH2 0x6d0
0x8ae JUMPI
---
0x8a8: V605 = 0x1f
0x8aa: V606 = LT 0x1f V602
0x8ab: V607 = 0x6d0
0x8ae: THROWI V606
---
Entry stack: [V587, 0x3, V578, V591, 0x3, V602]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V587, 0x3, V578, V591, 0x3, V602]

================================

Block 0x8af
[0x8af:0x8cf]
---
Predecessors: [0x8a7]
Successors: [0x8d0]
---
0x8af PUSH2 0x100
0x8b2 DUP1
0x8b3 DUP4
0x8b4 SLOAD
0x8b5 DIV
0x8b6 MUL
0x8b7 DUP4
0x8b8 MSTORE
0x8b9 SWAP2
0x8ba PUSH1 0x20
0x8bc ADD
0x8bd SWAP2
0x8be PUSH2 0x6fb
0x8c1 JUMP
0x8c2 JUMPDEST
0x8c3 DUP3
0x8c4 ADD
0x8c5 SWAP2
0x8c6 SWAP1
0x8c7 PUSH1 0x0
0x8c9 MSTORE
0x8ca PUSH1 0x20
0x8cc PUSH1 0x0
0x8ce SHA3
0x8cf SWAP1
---
0x8af: V608 = 0x100
0x8b4: V609 = S[0x3]
0x8b5: V610 = DIV V609 0x100
0x8b6: V611 = MUL V610 0x100
0x8b8: M[V591] = V611
0x8ba: V612 = 0x20
0x8bc: V613 = ADD 0x20 V591
0x8be: V614 = 0x6fb
0x8c1: THROW 
0x8c2: JUMPDEST 
0x8c4: V615 = ADD S2 S0
0x8c7: V616 = 0x0
0x8c9: M[0x0] = S1
0x8ca: V617 = 0x20
0x8cc: V618 = 0x0
0x8ce: V619 = SHA3 0x0 0x20
---
Entry stack: [V587, 0x3, V578, V591, 0x3, V602]
Stack pops: 3
Stack additions: [S2, V619, V615]
Exit stack: []

================================

Block 0x8d0
[0x8d0:0x8e3]
---
Predecessors: [0x8af]
Successors: [0x8e4]
---
0x8d0 JUMPDEST
0x8d1 DUP2
0x8d2 SLOAD
0x8d3 DUP2
0x8d4 MSTORE
0x8d5 SWAP1
0x8d6 PUSH1 0x1
0x8d8 ADD
0x8d9 SWAP1
0x8da PUSH1 0x20
0x8dc ADD
0x8dd DUP1
0x8de DUP4
0x8df GT
0x8e0 PUSH2 0x6de
0x8e3 JUMPI
---
0x8d0: JUMPDEST 
0x8d2: V620 = S[V619]
0x8d4: M[S0] = V620
0x8d6: V621 = 0x1
0x8d8: V622 = ADD 0x1 V619
0x8da: V623 = 0x20
0x8dc: V624 = ADD 0x20 S0
0x8df: V625 = GT V615 V624
0x8e0: V626 = 0x6de
0x8e3: THROWI V625
---
Entry stack: [V615, V619, S0]
Stack pops: 3
Stack additions: [S2, V622, V624]
Exit stack: [V615, V622, V624]

================================

Block 0x8e4
[0x8e4:0x8ec]
---
Predecessors: [0x8d0]
Successors: [0x8ed]
---
0x8e4 DUP3
0x8e5 SWAP1
0x8e6 SUB
0x8e7 PUSH1 0x1f
0x8e9 AND
0x8ea DUP3
0x8eb ADD
0x8ec SWAP2
---
0x8e6: V627 = SUB V624 V615
0x8e7: V628 = 0x1f
0x8e9: V629 = AND 0x1f V627
0x8eb: V630 = ADD V615 V629
---
Entry stack: [V615, V622, V624]
Stack pops: 3
Stack additions: [V630, S1, S2]
Exit stack: [V630, V622, V615]

================================

Block 0x8ed
[0x8ed:0x942]
---
Predecessors: [0x8e4]
Successors: [0x943]
---
0x8ed JUMPDEST
0x8ee POP
0x8ef POP
0x8f0 POP
0x8f1 POP
0x8f2 POP
0x8f3 DUP2
0x8f4 JUMP
0x8f5 JUMPDEST
0x8f6 PUSH1 0x0
0x8f8 PUSH1 0x0
0x8fa SWAP1
0x8fb SLOAD
0x8fc SWAP1
0x8fd PUSH2 0x100
0x900 EXP
0x901 SWAP1
0x902 DIV
0x903 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x918 AND
0x919 DUP2
0x91a JUMP
0x91b JUMPDEST
0x91c PUSH1 0x0
0x91e PUSH1 0x1
0x920 PUSH1 0x0
0x922 SWAP1
0x923 SLOAD
0x924 SWAP1
0x925 PUSH2 0x100
0x928 EXP
0x929 SWAP1
0x92a DIV
0x92b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x940 AND
0x941 SWAP1
0x942 POP
---
0x8ed: JUMPDEST 
0x8f4: JUMP S6
0x8f5: JUMPDEST 
0x8f6: V631 = 0x0
0x8f8: V632 = 0x0
0x8fb: V633 = S[0x0]
0x8fd: V634 = 0x100
0x900: V635 = EXP 0x100 0x0
0x902: V636 = DIV V633 0x1
0x903: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0x918: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0x91a: JUMP S0
0x91b: JUMPDEST 
0x91c: V639 = 0x0
0x91e: V640 = 0x1
0x920: V641 = 0x0
0x923: V642 = S[0x1]
0x925: V643 = 0x100
0x928: V644 = EXP 0x100 0x0
0x92a: V645 = DIV V642 0x1
0x92b: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0x940: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
---
Entry stack: [V630, V622, V615]
Stack pops: 22
Stack additions: [V647]
Exit stack: []

================================

Block 0x943
[0x943:0x96d]
---
Predecessors: [0x8ed]
Successors: [0x96e]
---
0x943 JUMPDEST
0x944 SWAP1
0x945 JUMP
0x946 JUMPDEST
0x947 PUSH1 0x0
0x949 PUSH1 0x0
0x94b PUSH1 0x0
0x94d SWAP1
0x94e SLOAD
0x94f SWAP1
0x950 PUSH2 0x100
0x953 EXP
0x954 SWAP1
0x955 DIV
0x956 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96b AND
0x96c SWAP1
0x96d POP
---
0x943: JUMPDEST 
0x945: JUMP S1
0x946: JUMPDEST 
0x947: V648 = 0x0
0x949: V649 = 0x0
0x94b: V650 = 0x0
0x94e: V651 = S[0x0]
0x950: V652 = 0x100
0x953: V653 = EXP 0x100 0x0
0x955: V654 = DIV V651 0x1
0x956: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0x96b: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
---
Entry stack: [V647]
Stack pops: 3
Stack additions: [V656]
Exit stack: []

================================

Block 0x96e
[0x96e:0x9ca]
---
Predecessors: [0x943]
Successors: [0x9cb]
---
0x96e JUMPDEST
0x96f SWAP1
0x970 JUMP
0x971 JUMPDEST
0x972 PUSH1 0x0
0x974 PUSH1 0x0
0x976 PUSH1 0x0
0x978 SWAP1
0x979 SLOAD
0x97a SWAP1
0x97b PUSH2 0x100
0x97e EXP
0x97f SWAP1
0x980 DIV
0x981 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x996 AND
0x997 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ac AND
0x9ad CALLER
0x9ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c3 AND
0x9c4 EQ
0x9c5 ISZERO
0x9c6 ISZERO
0x9c7 PUSH2 0x7de
0x9ca JUMPI
---
0x96e: JUMPDEST 
0x970: JUMP S1
0x971: JUMPDEST 
0x972: V657 = 0x0
0x974: V658 = 0x0
0x976: V659 = 0x0
0x979: V660 = S[0x0]
0x97b: V661 = 0x100
0x97e: V662 = EXP 0x100 0x0
0x980: V663 = DIV V660 0x1
0x981: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0x996: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0x997: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ac: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x9ad: V668 = CALLER
0x9ae: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c3: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0x9c4: V671 = EQ V670 V667
0x9c5: V672 = ISZERO V671
0x9c6: V673 = ISZERO V672
0x9c7: V674 = 0x7de
0x9ca: THROWI V673
---
Entry stack: [V656]
Stack pops: 3
Stack additions: [0x0]
Exit stack: []

================================

Block 0x9cb
[0x9cb:0xa27]
---
Predecessors: [0x96e]
Successors: [0xa28]
---
0x9cb PUSH1 0x0
0x9cd PUSH1 0x0
0x9cf REVERT
0x9d0 JUMPDEST
0x9d1 PUSH1 0x0
0x9d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e8 AND
0x9e9 PUSH1 0x1
0x9eb PUSH1 0x0
0x9ed SWAP1
0x9ee SLOAD
0x9ef SWAP1
0x9f0 PUSH2 0x100
0x9f3 EXP
0x9f4 SWAP1
0x9f5 DIV
0x9f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0b AND
0xa0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa21 AND
0xa22 EQ
0xa23 ISZERO
0xa24 PUSH2 0x83b
0xa27 JUMPI
---
0x9cb: V675 = 0x0
0x9cd: V676 = 0x0
0x9cf: REVERT 0x0 0x0
0x9d0: JUMPDEST 
0x9d1: V677 = 0x0
0x9d3: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e8: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x9e9: V680 = 0x1
0x9eb: V681 = 0x0
0x9ee: V682 = S[0x1]
0x9f0: V683 = 0x100
0x9f3: V684 = EXP 0x100 0x0
0x9f5: V685 = DIV V682 0x1
0x9f6: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0b: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0xa0c: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xa21: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0xa22: V690 = EQ V689 0x0
0xa23: V691 = ISZERO V690
0xa24: V692 = 0x83b
0xa27: THROWI V691
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa28
[0xa28:0xa89]
---
Predecessors: [0x9cb]
Successors: [0xa8a]
---
0xa28 PUSH1 0x0
0xa2a PUSH1 0x0
0xa2c REVERT
0xa2d JUMPDEST
0xa2e PUSH1 0x1
0xa30 PUSH1 0x0
0xa32 SWAP1
0xa33 SLOAD
0xa34 SWAP1
0xa35 PUSH2 0x100
0xa38 EXP
0xa39 SWAP1
0xa3a DIV
0xa3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa50 AND
0xa51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa66 AND
0xa67 PUSH2 0x8fc
0xa6a DUP4
0xa6b SWAP1
0xa6c DUP2
0xa6d ISZERO
0xa6e MUL
0xa6f SWAP1
0xa70 PUSH1 0x40
0xa72 MLOAD
0xa73 DUP1
0xa74 SWAP1
0xa75 POP
0xa76 PUSH1 0x0
0xa78 PUSH1 0x40
0xa7a MLOAD
0xa7b DUP1
0xa7c DUP4
0xa7d SUB
0xa7e DUP2
0xa7f DUP6
0xa80 DUP9
0xa81 DUP9
0xa82 CALL
0xa83 SWAP4
0xa84 POP
0xa85 POP
0xa86 POP
0xa87 POP
0xa88 SWAP1
0xa89 POP
---
0xa28: V693 = 0x0
0xa2a: V694 = 0x0
0xa2c: REVERT 0x0 0x0
0xa2d: JUMPDEST 
0xa2e: V695 = 0x1
0xa30: V696 = 0x0
0xa33: V697 = S[0x1]
0xa35: V698 = 0x100
0xa38: V699 = EXP 0x100 0x0
0xa3a: V700 = DIV V697 0x1
0xa3b: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xa50: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0xa51: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xa66: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0xa67: V705 = 0x8fc
0xa6d: V706 = ISZERO S1
0xa6e: V707 = MUL V706 0x8fc
0xa70: V708 = 0x40
0xa72: V709 = M[0x40]
0xa76: V710 = 0x0
0xa78: V711 = 0x40
0xa7a: V712 = M[0x40]
0xa7d: V713 = SUB V709 V712
0xa82: V714 = CALL V707 V704 S1 V712 V713 V712 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V714, S1]
Exit stack: []

================================

Block 0xa8a
[0xa8a:0xa8a]
---
Predecessors: [0xa28]
Successors: [0xa8b]
---
0xa8a JUMPDEST
---
0xa8a: JUMPDEST 
---
Entry stack: [S1, V714]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V714]

================================

Block 0xa8b
[0xa8b:0xa8b]
---
Predecessors: [0xa8a]
Successors: [0xa8c]
---
0xa8b JUMPDEST
---
0xa8b: JUMPDEST 
---
Entry stack: [S1, V714]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V714]

================================

Block 0xa8c
[0xa8c:0xae9]
---
Predecessors: [0xa8b]
Successors: [0xaea]
---
0xa8c JUMPDEST
0xa8d SWAP2
0xa8e SWAP1
0xa8f POP
0xa90 JUMP
0xa91 JUMPDEST
0xa92 PUSH1 0x0
0xa94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa9 AND
0xaaa PUSH1 0x1
0xaac PUSH1 0x0
0xaae SWAP1
0xaaf SLOAD
0xab0 SWAP1
0xab1 PUSH2 0x100
0xab4 EXP
0xab5 SWAP1
0xab6 DIV
0xab7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacc AND
0xacd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae2 AND
0xae3 EQ
0xae4 ISZERO
0xae5 ISZERO
0xae6 PUSH2 0x8fd
0xae9 JUMPI
---
0xa8c: JUMPDEST 
0xa90: JUMP S2
0xa91: JUMPDEST 
0xa92: V715 = 0x0
0xa94: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa9: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xaaa: V718 = 0x1
0xaac: V719 = 0x0
0xaaf: V720 = S[0x1]
0xab1: V721 = 0x100
0xab4: V722 = EXP 0x100 0x0
0xab6: V723 = DIV V720 0x1
0xab7: V724 = 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V723
0xacd: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xae2: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0xae3: V728 = EQ V727 0x0
0xae4: V729 = ISZERO V728
0xae5: V730 = ISZERO V729
0xae6: V731 = 0x8fd
0xae9: THROWI V730
---
Entry stack: [S1, V714]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xaea
[0xaea:0xaf9]
---
Predecessors: [0xa8c]
Successors: [0xafa]
---
0xaea PUSH1 0x0
0xaec PUSH1 0x0
0xaee REVERT
0xaef JUMPDEST
0xaf0 PUSH1 0x5
0xaf2 SLOAD
0xaf3 CALLVALUE
0xaf4 LT
0xaf5 ISZERO
0xaf6 PUSH2 0x90d
0xaf9 JUMPI
---
0xaea: V732 = 0x0
0xaec: V733 = 0x0
0xaee: REVERT 0x0 0x0
0xaef: JUMPDEST 
0xaf0: V734 = 0x5
0xaf2: V735 = S[0x5]
0xaf3: V736 = CALLVALUE
0xaf4: V737 = LT V736 V735
0xaf5: V738 = ISZERO V737
0xaf6: V739 = 0x90d
0xaf9: THROWI V738
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xafa
[0xafa:0xb40]
---
Predecessors: [0xaea]
Successors: [0xb41]
---
0xafa PUSH1 0x0
0xafc PUSH1 0x0
0xafe REVERT
0xaff JUMPDEST
0xb00 CALLER
0xb01 PUSH1 0x1
0xb03 PUSH1 0x0
0xb05 PUSH2 0x100
0xb08 EXP
0xb09 DUP2
0xb0a SLOAD
0xb0b DUP2
0xb0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb21 MUL
0xb22 NOT
0xb23 AND
0xb24 SWAP1
0xb25 DUP4
0xb26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3b AND
0xb3c MUL
0xb3d OR
0xb3e SWAP1
0xb3f SSTORE
0xb40 POP
---
0xafa: V740 = 0x0
0xafc: V741 = 0x0
0xafe: REVERT 0x0 0x0
0xaff: JUMPDEST 
0xb00: V742 = CALLER
0xb01: V743 = 0x1
0xb03: V744 = 0x0
0xb05: V745 = 0x100
0xb08: V746 = EXP 0x100 0x0
0xb0a: V747 = S[0x1]
0xb0c: V748 = 0xffffffffffffffffffffffffffffffffffffffff
0xb21: V749 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xb22: V750 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb23: V751 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V747
0xb26: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3b: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0xb3c: V754 = MUL V753 0x1
0xb3d: V755 = OR V754 V751
0xb3f: S[0x1] = V755
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb41
[0xb41:0xb41]
---
Predecessors: [0xafa]
Successors: [0xb42]
---
0xb41 JUMPDEST
---
0xb41: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb42
[0xb42:0xb9d]
---
Predecessors: [0xb41]
Successors: [0xb9e]
---
0xb42 JUMPDEST
0xb43 JUMP
0xb44 JUMPDEST
0xb45 PUSH1 0x0
0xb47 PUSH1 0x0
0xb49 PUSH1 0x0
0xb4b SWAP1
0xb4c SLOAD
0xb4d SWAP1
0xb4e PUSH2 0x100
0xb51 EXP
0xb52 SWAP1
0xb53 DIV
0xb54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb69 AND
0xb6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7f AND
0xb80 CALLER
0xb81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb96 AND
0xb97 EQ
0xb98 ISZERO
0xb99 ISZERO
0xb9a PUSH2 0x9b1
0xb9d JUMPI
---
0xb42: JUMPDEST 
0xb43: JUMP S0
0xb44: JUMPDEST 
0xb45: V756 = 0x0
0xb47: V757 = 0x0
0xb49: V758 = 0x0
0xb4c: V759 = S[0x0]
0xb4e: V760 = 0x100
0xb51: V761 = EXP 0x100 0x0
0xb53: V762 = DIV V759 0x1
0xb54: V763 = 0xffffffffffffffffffffffffffffffffffffffff
0xb69: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0xb6a: V765 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7f: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V764
0xb80: V767 = CALLER
0xb81: V768 = 0xffffffffffffffffffffffffffffffffffffffff
0xb96: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0xb97: V770 = EQ V769 V766
0xb98: V771 = ISZERO V770
0xb99: V772 = ISZERO V771
0xb9a: V773 = 0x9b1
0xb9d: THROWI V772
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0xb9e
[0xb9e:0xbfa]
---
Predecessors: [0xb42]
Successors: [0xbfb]
---
0xb9e PUSH1 0x0
0xba0 PUSH1 0x0
0xba2 REVERT
0xba3 JUMPDEST
0xba4 PUSH1 0x0
0xba6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbb AND
0xbbc PUSH1 0x1
0xbbe PUSH1 0x0
0xbc0 SWAP1
0xbc1 SLOAD
0xbc2 SWAP1
0xbc3 PUSH2 0x100
0xbc6 EXP
0xbc7 SWAP1
0xbc8 DIV
0xbc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbde AND
0xbdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf4 AND
0xbf5 EQ
0xbf6 ISZERO
0xbf7 PUSH2 0xa0e
0xbfa JUMPI
---
0xb9e: V774 = 0x0
0xba0: V775 = 0x0
0xba2: REVERT 0x0 0x0
0xba3: JUMPDEST 
0xba4: V776 = 0x0
0xba6: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbb: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xbbc: V779 = 0x1
0xbbe: V780 = 0x0
0xbc1: V781 = S[0x1]
0xbc3: V782 = 0x100
0xbc6: V783 = EXP 0x100 0x0
0xbc8: V784 = DIV V781 0x1
0xbc9: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xbde: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xbdf: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf4: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0xbf5: V789 = EQ V788 0x0
0xbf6: V790 = ISZERO V789
0xbf7: V791 = 0xa0e
0xbfa: THROWI V790
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbfb
[0xbfb:0xc5c]
---
Predecessors: [0xb9e]
Successors: [0xc5d]
---
0xbfb PUSH1 0x0
0xbfd PUSH1 0x0
0xbff REVERT
0xc00 JUMPDEST
0xc01 PUSH1 0x2
0xc03 PUSH1 0x0
0xc05 SWAP1
0xc06 SLOAD
0xc07 SWAP1
0xc08 PUSH2 0x100
0xc0b EXP
0xc0c SWAP1
0xc0d DIV
0xc0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc23 AND
0xc24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc39 AND
0xc3a PUSH2 0x8fc
0xc3d DUP4
0xc3e SWAP1
0xc3f DUP2
0xc40 ISZERO
0xc41 MUL
0xc42 SWAP1
0xc43 PUSH1 0x40
0xc45 MLOAD
0xc46 DUP1
0xc47 SWAP1
0xc48 POP
0xc49 PUSH1 0x0
0xc4b PUSH1 0x40
0xc4d MLOAD
0xc4e DUP1
0xc4f DUP4
0xc50 SUB
0xc51 DUP2
0xc52 DUP6
0xc53 DUP9
0xc54 DUP9
0xc55 CALL
0xc56 SWAP4
0xc57 POP
0xc58 POP
0xc59 POP
0xc5a POP
0xc5b SWAP1
0xc5c POP
---
0xbfb: V792 = 0x0
0xbfd: V793 = 0x0
0xbff: REVERT 0x0 0x0
0xc00: JUMPDEST 
0xc01: V794 = 0x2
0xc03: V795 = 0x0
0xc06: V796 = S[0x2]
0xc08: V797 = 0x100
0xc0b: V798 = EXP 0x100 0x0
0xc0d: V799 = DIV V796 0x1
0xc0e: V800 = 0xffffffffffffffffffffffffffffffffffffffff
0xc23: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0xc24: V802 = 0xffffffffffffffffffffffffffffffffffffffff
0xc39: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0xc3a: V804 = 0x8fc
0xc40: V805 = ISZERO S1
0xc41: V806 = MUL V805 0x8fc
0xc43: V807 = 0x40
0xc45: V808 = M[0x40]
0xc49: V809 = 0x0
0xc4b: V810 = 0x40
0xc4d: V811 = M[0x40]
0xc50: V812 = SUB V808 V811
0xc55: V813 = CALL V806 V803 S1 V811 V812 V811 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V813, S1]
Exit stack: []

================================

Block 0xc5d
[0xc5d:0xc5d]
---
Predecessors: [0xbfb]
Successors: [0xc5e]
---
0xc5d JUMPDEST
---
0xc5d: JUMPDEST 
---
Entry stack: [S1, V813]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V813]

================================

Block 0xc5e
[0xc5e:0xc5e]
---
Predecessors: [0xc5d]
Successors: [0xc5f]
---
0xc5e JUMPDEST
---
0xc5e: JUMPDEST 
---
Entry stack: [S1, V813]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V813]

================================

Block 0xc5f
[0xc5f:0xc63]
---
Predecessors: [0xc5e]
Successors: []
Has unresolved jump.
---
0xc5f JUMPDEST
0xc60 SWAP2
0xc61 SWAP1
0xc62 POP
0xc63 JUMP
---
0xc5f: JUMPDEST 
0xc63: JUMP S2
---
Entry stack: [S1, V813]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V813]

================================

Block 0xc64
[0xc64:0xc6b]
---
Predecessors: [0xe56]
Successors: [0xc6c]
---
0xc64 JUMPDEST
0xc65 PUSH1 0x0
0xc67 PUSH1 0x5
0xc69 SLOAD
0xc6a SWAP1
0xc6b POP
---
0xc64: JUMPDEST 
0xc65: V814 = 0x0
0xc67: V815 = 0x5
0xc69: V816 = S[0x5]
---
Entry stack: [V972, V979, V981]
Stack pops: 0
Stack additions: [V816]
Exit stack: [V972, V979, V981, V816]

================================

Block 0xc6c
[0xc6c:0xd12]
---
Predecessors: [0xc64]
Successors: [0xd13]
---
0xc6c JUMPDEST
0xc6d SWAP1
0xc6e JUMP
0xc6f JUMPDEST
0xc70 PUSH1 0x1
0xc72 PUSH1 0x0
0xc74 SWAP1
0xc75 SLOAD
0xc76 SWAP1
0xc77 PUSH2 0x100
0xc7a EXP
0xc7b SWAP1
0xc7c DIV
0xc7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc92 AND
0xc93 DUP2
0xc94 JUMP
0xc95 JUMPDEST
0xc96 PUSH1 0x2
0xc98 PUSH1 0x0
0xc9a SWAP1
0xc9b SLOAD
0xc9c SWAP1
0xc9d PUSH2 0x100
0xca0 EXP
0xca1 SWAP1
0xca2 DIV
0xca3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb8 AND
0xcb9 DUP2
0xcba JUMP
0xcbb JUMPDEST
0xcbc PUSH2 0xad1
0xcbf PUSH2 0xdb1
0xcc2 JUMP
0xcc3 JUMPDEST
0xcc4 PUSH1 0x3
0xcc6 DUP1
0xcc7 SLOAD
0xcc8 PUSH1 0x1
0xcca DUP2
0xccb PUSH1 0x1
0xccd AND
0xcce ISZERO
0xccf PUSH2 0x100
0xcd2 MUL
0xcd3 SUB
0xcd4 AND
0xcd5 PUSH1 0x2
0xcd7 SWAP1
0xcd8 DIV
0xcd9 DUP1
0xcda PUSH1 0x1f
0xcdc ADD
0xcdd PUSH1 0x20
0xcdf DUP1
0xce0 SWAP2
0xce1 DIV
0xce2 MUL
0xce3 PUSH1 0x20
0xce5 ADD
0xce6 PUSH1 0x40
0xce8 MLOAD
0xce9 SWAP1
0xcea DUP2
0xceb ADD
0xcec PUSH1 0x40
0xcee MSTORE
0xcef DUP1
0xcf0 SWAP3
0xcf1 SWAP2
0xcf2 SWAP1
0xcf3 DUP2
0xcf4 DUP2
0xcf5 MSTORE
0xcf6 PUSH1 0x20
0xcf8 ADD
0xcf9 DUP3
0xcfa DUP1
0xcfb SLOAD
0xcfc PUSH1 0x1
0xcfe DUP2
0xcff PUSH1 0x1
0xd01 AND
0xd02 ISZERO
0xd03 PUSH2 0x100
0xd06 MUL
0xd07 SUB
0xd08 AND
0xd09 PUSH1 0x2
0xd0b SWAP1
0xd0c DIV
0xd0d DUP1
0xd0e ISZERO
0xd0f PUSH2 0xb67
0xd12 JUMPI
---
0xc6c: JUMPDEST 
0xc6e: JUMP V981
0xc6f: JUMPDEST 
0xc70: V817 = 0x1
0xc72: V818 = 0x0
0xc75: V819 = S[0x1]
0xc77: V820 = 0x100
0xc7a: V821 = EXP 0x100 0x0
0xc7c: V822 = DIV V819 0x1
0xc7d: V823 = 0xffffffffffffffffffffffffffffffffffffffff
0xc92: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0xc94: JUMP S0
0xc95: JUMPDEST 
0xc96: V825 = 0x2
0xc98: V826 = 0x0
0xc9b: V827 = S[0x2]
0xc9d: V828 = 0x100
0xca0: V829 = EXP 0x100 0x0
0xca2: V830 = DIV V827 0x1
0xca3: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb8: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V830
0xcba: JUMP S0
0xcbb: JUMPDEST 
0xcbc: V833 = 0xad1
0xcbf: V834 = 0xdb1
0xcc2: THROW 
0xcc3: JUMPDEST 
0xcc4: V835 = 0x3
0xcc7: V836 = S[0x3]
0xcc8: V837 = 0x1
0xccb: V838 = 0x1
0xccd: V839 = AND 0x1 V836
0xcce: V840 = ISZERO V839
0xccf: V841 = 0x100
0xcd2: V842 = MUL 0x100 V840
0xcd3: V843 = SUB V842 0x1
0xcd4: V844 = AND V843 V836
0xcd5: V845 = 0x2
0xcd8: V846 = DIV V844 0x2
0xcda: V847 = 0x1f
0xcdc: V848 = ADD 0x1f V846
0xcdd: V849 = 0x20
0xce1: V850 = DIV V848 0x20
0xce2: V851 = MUL V850 0x20
0xce3: V852 = 0x20
0xce5: V853 = ADD 0x20 V851
0xce6: V854 = 0x40
0xce8: V855 = M[0x40]
0xceb: V856 = ADD V855 V853
0xcec: V857 = 0x40
0xcee: M[0x40] = V856
0xcf5: M[V855] = V846
0xcf6: V858 = 0x20
0xcf8: V859 = ADD 0x20 V855
0xcfb: V860 = S[0x3]
0xcfc: V861 = 0x1
0xcff: V862 = 0x1
0xd01: V863 = AND 0x1 V860
0xd02: V864 = ISZERO V863
0xd03: V865 = 0x100
0xd06: V866 = MUL 0x100 V864
0xd07: V867 = SUB V866 0x1
0xd08: V868 = AND V867 V860
0xd09: V869 = 0x2
0xd0c: V870 = DIV V868 0x2
0xd0e: V871 = ISZERO V870
0xd0f: V872 = 0xb67
0xd12: THROWI V871
---
Entry stack: [V972, V979, V981, V816]
Stack pops: 11
Stack additions: [V870, 0x3, V859, V846, 0x3, V855]
Exit stack: []

================================

Block 0xd13
[0xd13:0xd1a]
---
Predecessors: [0xc6c]
Successors: [0xd1b]
---
0xd13 DUP1
0xd14 PUSH1 0x1f
0xd16 LT
0xd17 PUSH2 0xb3c
0xd1a JUMPI
---
0xd14: V873 = 0x1f
0xd16: V874 = LT 0x1f V870
0xd17: V875 = 0xb3c
0xd1a: THROWI V874
---
Entry stack: [V855, 0x3, V846, V859, 0x3, V870]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V855, 0x3, V846, V859, 0x3, V870]

================================

Block 0xd1b
[0xd1b:0xd3b]
---
Predecessors: [0xd13]
Successors: [0xd3c]
---
0xd1b PUSH2 0x100
0xd1e DUP1
0xd1f DUP4
0xd20 SLOAD
0xd21 DIV
0xd22 MUL
0xd23 DUP4
0xd24 MSTORE
0xd25 SWAP2
0xd26 PUSH1 0x20
0xd28 ADD
0xd29 SWAP2
0xd2a PUSH2 0xb67
0xd2d JUMP
0xd2e JUMPDEST
0xd2f DUP3
0xd30 ADD
0xd31 SWAP2
0xd32 SWAP1
0xd33 PUSH1 0x0
0xd35 MSTORE
0xd36 PUSH1 0x20
0xd38 PUSH1 0x0
0xd3a SHA3
0xd3b SWAP1
---
0xd1b: V876 = 0x100
0xd20: V877 = S[0x3]
0xd21: V878 = DIV V877 0x100
0xd22: V879 = MUL V878 0x100
0xd24: M[V859] = V879
0xd26: V880 = 0x20
0xd28: V881 = ADD 0x20 V859
0xd2a: V882 = 0xb67
0xd2d: THROW 
0xd2e: JUMPDEST 
0xd30: V883 = ADD S2 S0
0xd33: V884 = 0x0
0xd35: M[0x0] = S1
0xd36: V885 = 0x20
0xd38: V886 = 0x0
0xd3a: V887 = SHA3 0x0 0x20
---
Entry stack: [V855, 0x3, V846, V859, 0x3, V870]
Stack pops: 3
Stack additions: [S2, V887, V883]
Exit stack: []

================================

Block 0xd3c
[0xd3c:0xd4f]
---
Predecessors: [0xd1b]
Successors: [0xd50]
---
0xd3c JUMPDEST
0xd3d DUP2
0xd3e SLOAD
0xd3f DUP2
0xd40 MSTORE
0xd41 SWAP1
0xd42 PUSH1 0x1
0xd44 ADD
0xd45 SWAP1
0xd46 PUSH1 0x20
0xd48 ADD
0xd49 DUP1
0xd4a DUP4
0xd4b GT
0xd4c PUSH2 0xb4a
0xd4f JUMPI
---
0xd3c: JUMPDEST 
0xd3e: V888 = S[V887]
0xd40: M[S0] = V888
0xd42: V889 = 0x1
0xd44: V890 = ADD 0x1 V887
0xd46: V891 = 0x20
0xd48: V892 = ADD 0x20 S0
0xd4b: V893 = GT V883 V892
0xd4c: V894 = 0xb4a
0xd4f: THROWI V893
---
Entry stack: [V883, V887, S0]
Stack pops: 3
Stack additions: [S2, V890, V892]
Exit stack: [V883, V890, V892]

================================

Block 0xd50
[0xd50:0xd58]
---
Predecessors: [0xd3c]
Successors: [0xd59]
---
0xd50 DUP3
0xd51 SWAP1
0xd52 SUB
0xd53 PUSH1 0x1f
0xd55 AND
0xd56 DUP3
0xd57 ADD
0xd58 SWAP2
---
0xd52: V895 = SUB V892 V883
0xd53: V896 = 0x1f
0xd55: V897 = AND 0x1f V895
0xd57: V898 = ADD V883 V897
---
Entry stack: [V883, V890, V892]
Stack pops: 3
Stack additions: [V898, S1, S2]
Exit stack: [V898, V890, V883]

================================

Block 0xd59
[0xd59:0xd60]
---
Predecessors: [0xd50]
Successors: [0xd61]
---
0xd59 JUMPDEST
0xd5a POP
0xd5b POP
0xd5c POP
0xd5d POP
0xd5e POP
0xd5f SWAP1
0xd60 POP
---
0xd59: JUMPDEST 
---
Entry stack: [V898, V890, V883]
Stack pops: 7
Stack additions: [S5]
Exit stack: [S2]

================================

Block 0xd61
[0xd61:0xdbb]
---
Predecessors: [0xd59]
Successors: [0xdbc]
---
0xd61 JUMPDEST
0xd62 SWAP1
0xd63 JUMP
0xd64 JUMPDEST
0xd65 PUSH1 0x0
0xd67 PUSH1 0x0
0xd69 SWAP1
0xd6a SLOAD
0xd6b SWAP1
0xd6c PUSH2 0x100
0xd6f EXP
0xd70 SWAP1
0xd71 DIV
0xd72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd87 AND
0xd88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9d AND
0xd9e CALLER
0xd9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb4 AND
0xdb5 EQ
0xdb6 ISZERO
0xdb7 ISZERO
0xdb8 PUSH2 0xbcf
0xdbb JUMPI
---
0xd61: JUMPDEST 
0xd63: JUMP S1
0xd64: JUMPDEST 
0xd65: V899 = 0x0
0xd67: V900 = 0x0
0xd6a: V901 = S[0x0]
0xd6c: V902 = 0x100
0xd6f: V903 = EXP 0x100 0x0
0xd71: V904 = DIV V901 0x1
0xd72: V905 = 0xffffffffffffffffffffffffffffffffffffffff
0xd87: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0xd88: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9d: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xd9e: V909 = CALLER
0xd9f: V910 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb4: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V909
0xdb5: V912 = EQ V911 V908
0xdb6: V913 = ISZERO V912
0xdb7: V914 = ISZERO V913
0xdb8: V915 = 0xbcf
0xdbb: THROWI V914
---
Entry stack: [S0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xdbc
[0xdbc:0xdd8]
---
Predecessors: [0xd61]
Successors: [0xdd9]
---
0xdbc PUSH1 0x0
0xdbe PUSH1 0x0
0xdc0 REVERT
0xdc1 JUMPDEST
0xdc2 DUP1
0xdc3 PUSH1 0x3
0xdc5 SWAP1
0xdc6 DUP1
0xdc7 MLOAD
0xdc8 SWAP1
0xdc9 PUSH1 0x20
0xdcb ADD
0xdcc SWAP1
0xdcd PUSH2 0xbe5
0xdd0 SWAP3
0xdd1 SWAP2
0xdd2 SWAP1
0xdd3 PUSH2 0xdc5
0xdd6 JUMP
0xdd7 JUMPDEST
0xdd8 POP
---
0xdbc: V916 = 0x0
0xdbe: V917 = 0x0
0xdc0: REVERT 0x0 0x0
0xdc1: JUMPDEST 
0xdc3: V918 = 0x3
0xdc7: V919 = M[S0]
0xdc9: V920 = 0x20
0xdcb: V921 = ADD 0x20 S0
0xdcd: V922 = 0xbe5
0xdd3: V923 = 0xdc5
0xdd6: THROW 
0xdd7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [V919, V921, 0x3, 0xbe5, S0]
Exit stack: []

================================

Block 0xdd9
[0xdd9:0xdd9]
---
Predecessors: [0xdbc]
Successors: [0xdda]
---
0xdd9 JUMPDEST
---
0xdd9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdda
[0xdda:0xe2c]
---
Predecessors: [0xdd9]
Successors: [0xe2d]
---
0xdda JUMPDEST
0xddb POP
0xddc JUMP
0xddd JUMPDEST
0xdde PUSH1 0x4
0xde0 DUP1
0xde1 SLOAD
0xde2 PUSH1 0x1
0xde4 DUP2
0xde5 PUSH1 0x1
0xde7 AND
0xde8 ISZERO
0xde9 PUSH2 0x100
0xdec MUL
0xded SUB
0xdee AND
0xdef PUSH1 0x2
0xdf1 SWAP1
0xdf2 DIV
0xdf3 DUP1
0xdf4 PUSH1 0x1f
0xdf6 ADD
0xdf7 PUSH1 0x20
0xdf9 DUP1
0xdfa SWAP2
0xdfb DIV
0xdfc MUL
0xdfd PUSH1 0x20
0xdff ADD
0xe00 PUSH1 0x40
0xe02 MLOAD
0xe03 SWAP1
0xe04 DUP2
0xe05 ADD
0xe06 PUSH1 0x40
0xe08 MSTORE
0xe09 DUP1
0xe0a SWAP3
0xe0b SWAP2
0xe0c SWAP1
0xe0d DUP2
0xe0e DUP2
0xe0f MSTORE
0xe10 PUSH1 0x20
0xe12 ADD
0xe13 DUP3
0xe14 DUP1
0xe15 SLOAD
0xe16 PUSH1 0x1
0xe18 DUP2
0xe19 PUSH1 0x1
0xe1b AND
0xe1c ISZERO
0xe1d PUSH2 0x100
0xe20 MUL
0xe21 SUB
0xe22 AND
0xe23 PUSH1 0x2
0xe25 SWAP1
0xe26 DIV
0xe27 DUP1
0xe28 ISZERO
0xe29 PUSH2 0xc81
0xe2c JUMPI
---
0xdda: JUMPDEST 
0xddc: JUMP S1
0xddd: JUMPDEST 
0xdde: V924 = 0x4
0xde1: V925 = S[0x4]
0xde2: V926 = 0x1
0xde5: V927 = 0x1
0xde7: V928 = AND 0x1 V925
0xde8: V929 = ISZERO V928
0xde9: V930 = 0x100
0xdec: V931 = MUL 0x100 V929
0xded: V932 = SUB V931 0x1
0xdee: V933 = AND V932 V925
0xdef: V934 = 0x2
0xdf2: V935 = DIV V933 0x2
0xdf4: V936 = 0x1f
0xdf6: V937 = ADD 0x1f V935
0xdf7: V938 = 0x20
0xdfb: V939 = DIV V937 0x20
0xdfc: V940 = MUL V939 0x20
0xdfd: V941 = 0x20
0xdff: V942 = ADD 0x20 V940
0xe00: V943 = 0x40
0xe02: V944 = M[0x40]
0xe05: V945 = ADD V944 V942
0xe06: V946 = 0x40
0xe08: M[0x40] = V945
0xe0f: M[V944] = V935
0xe10: V947 = 0x20
0xe12: V948 = ADD 0x20 V944
0xe15: V949 = S[0x4]
0xe16: V950 = 0x1
0xe19: V951 = 0x1
0xe1b: V952 = AND 0x1 V949
0xe1c: V953 = ISZERO V952
0xe1d: V954 = 0x100
0xe20: V955 = MUL 0x100 V953
0xe21: V956 = SUB V955 0x1
0xe22: V957 = AND V956 V949
0xe23: V958 = 0x2
0xe26: V959 = DIV V957 0x2
0xe28: V960 = ISZERO V959
0xe29: V961 = 0xc81
0xe2c: THROWI V960
---
Entry stack: []
Stack pops: 4
Stack additions: [V959, 0x4, V948, V935, 0x4, V944]
Exit stack: []

================================

Block 0xe2d
[0xe2d:0xe34]
---
Predecessors: [0xdda]
Successors: [0xe35]
---
0xe2d DUP1
0xe2e PUSH1 0x1f
0xe30 LT
0xe31 PUSH2 0xc56
0xe34 JUMPI
---
0xe2e: V962 = 0x1f
0xe30: V963 = LT 0x1f V959
0xe31: V964 = 0xc56
0xe34: THROWI V963
---
Entry stack: [V944, 0x4, V935, V948, 0x4, V959]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V944, 0x4, V935, V948, 0x4, V959]

================================

Block 0xe35
[0xe35:0xe55]
---
Predecessors: [0xe2d]
Successors: [0xe56]
---
0xe35 PUSH2 0x100
0xe38 DUP1
0xe39 DUP4
0xe3a SLOAD
0xe3b DIV
0xe3c MUL
0xe3d DUP4
0xe3e MSTORE
0xe3f SWAP2
0xe40 PUSH1 0x20
0xe42 ADD
0xe43 SWAP2
0xe44 PUSH2 0xc81
0xe47 JUMP
0xe48 JUMPDEST
0xe49 DUP3
0xe4a ADD
0xe4b SWAP2
0xe4c SWAP1
0xe4d PUSH1 0x0
0xe4f MSTORE
0xe50 PUSH1 0x20
0xe52 PUSH1 0x0
0xe54 SHA3
0xe55 SWAP1
---
0xe35: V965 = 0x100
0xe3a: V966 = S[0x4]
0xe3b: V967 = DIV V966 0x100
0xe3c: V968 = MUL V967 0x100
0xe3e: M[V948] = V968
0xe40: V969 = 0x20
0xe42: V970 = ADD 0x20 V948
0xe44: V971 = 0xc81
0xe47: THROW 
0xe48: JUMPDEST 
0xe4a: V972 = ADD S2 S0
0xe4d: V973 = 0x0
0xe4f: M[0x0] = S1
0xe50: V974 = 0x20
0xe52: V975 = 0x0
0xe54: V976 = SHA3 0x0 0x20
---
Entry stack: [V944, 0x4, V935, V948, 0x4, V959]
Stack pops: 3
Stack additions: [S2, V976, V972]
Exit stack: []

================================

Block 0xe56
[0xe56:0xe69]
---
Predecessors: [0xe35]
Successors: [0xc64, 0xe6a]
---
0xe56 JUMPDEST
0xe57 DUP2
0xe58 SLOAD
0xe59 DUP2
0xe5a MSTORE
0xe5b SWAP1
0xe5c PUSH1 0x1
0xe5e ADD
0xe5f SWAP1
0xe60 PUSH1 0x20
0xe62 ADD
0xe63 DUP1
0xe64 DUP4
0xe65 GT
0xe66 PUSH2 0xc64
0xe69 JUMPI
---
0xe56: JUMPDEST 
0xe58: V977 = S[V976]
0xe5a: M[S0] = V977
0xe5c: V978 = 0x1
0xe5e: V979 = ADD 0x1 V976
0xe60: V980 = 0x20
0xe62: V981 = ADD 0x20 S0
0xe65: V982 = GT V972 V981
0xe66: V983 = 0xc64
0xe69: JUMPI 0xc64 V982
---
Entry stack: [V972, V976, S0]
Stack pops: 3
Stack additions: [S2, V979, V981]
Exit stack: [V972, V979, V981]

================================

Block 0xe6a
[0xe6a:0xe72]
---
Predecessors: [0xe56]
Successors: [0xe73]
---
0xe6a DUP3
0xe6b SWAP1
0xe6c SUB
0xe6d PUSH1 0x1f
0xe6f AND
0xe70 DUP3
0xe71 ADD
0xe72 SWAP2
---
0xe6c: V984 = SUB V981 V972
0xe6d: V985 = 0x1f
0xe6f: V986 = AND 0x1f V984
0xe71: V987 = ADD V972 V986
---
Entry stack: [V972, V979, V981]
Stack pops: 3
Stack additions: [V987, S1, S2]
Exit stack: [V987, V979, V972]

================================

Block 0xe73
[0xe73:0xed2]
---
Predecessors: [0xe6a]
Successors: [0xed3]
---
0xe73 JUMPDEST
0xe74 POP
0xe75 POP
0xe76 POP
0xe77 POP
0xe78 POP
0xe79 DUP2
0xe7a JUMP
0xe7b JUMPDEST
0xe7c PUSH1 0x1
0xe7e PUSH1 0x0
0xe80 SWAP1
0xe81 SLOAD
0xe82 SWAP1
0xe83 PUSH2 0x100
0xe86 EXP
0xe87 SWAP1
0xe88 DIV
0xe89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9e AND
0xe9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb4 AND
0xeb5 CALLER
0xeb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xecb AND
0xecc EQ
0xecd ISZERO
0xece ISZERO
0xecf PUSH2 0xce6
0xed2 JUMPI
---
0xe73: JUMPDEST 
0xe7a: JUMP S6
0xe7b: JUMPDEST 
0xe7c: V988 = 0x1
0xe7e: V989 = 0x0
0xe81: V990 = S[0x1]
0xe83: V991 = 0x100
0xe86: V992 = EXP 0x100 0x0
0xe88: V993 = DIV V990 0x1
0xe89: V994 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9e: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0xe9f: V996 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb4: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0xeb5: V998 = CALLER
0xeb6: V999 = 0xffffffffffffffffffffffffffffffffffffffff
0xecb: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff V998
0xecc: V1001 = EQ V1000 V997
0xecd: V1002 = ISZERO V1001
0xece: V1003 = ISZERO V1002
0xecf: V1004 = 0xce6
0xed2: THROWI V1003
---
Entry stack: [V987, V979, V972]
Stack pops: 12
Stack additions: []
Exit stack: []

================================

Block 0xed3
[0xed3:0xeef]
---
Predecessors: [0xe73]
Successors: [0xef0]
---
0xed3 PUSH1 0x0
0xed5 PUSH1 0x0
0xed7 REVERT
0xed8 JUMPDEST
0xed9 DUP1
0xeda PUSH1 0x4
0xedc SWAP1
0xedd DUP1
0xede MLOAD
0xedf SWAP1
0xee0 PUSH1 0x20
0xee2 ADD
0xee3 SWAP1
0xee4 PUSH2 0xcfc
0xee7 SWAP3
0xee8 SWAP2
0xee9 SWAP1
0xeea PUSH2 0xdc5
0xeed JUMP
0xeee JUMPDEST
0xeef POP
---
0xed3: V1005 = 0x0
0xed5: V1006 = 0x0
0xed7: REVERT 0x0 0x0
0xed8: JUMPDEST 
0xeda: V1007 = 0x4
0xede: V1008 = M[S0]
0xee0: V1009 = 0x20
0xee2: V1010 = ADD 0x20 S0
0xee4: V1011 = 0xcfc
0xeea: V1012 = 0xdc5
0xeed: THROW 
0xeee: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [V1008, V1010, 0x4, 0xcfc, S0]
Exit stack: []

================================

Block 0xef0
[0xef0:0xef0]
---
Predecessors: [0xed3]
Successors: [0xef1]
---
0xef0 JUMPDEST
---
0xef0: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xef1
[0xef1:0xf51]
---
Predecessors: [0xef0]
Successors: [0xf52]
---
0xef1 JUMPDEST
0xef2 POP
0xef3 JUMP
0xef4 JUMPDEST
0xef5 PUSH1 0x5
0xef7 SLOAD
0xef8 DUP2
0xef9 JUMP
0xefa JUMPDEST
0xefb PUSH2 0xd10
0xefe PUSH2 0xdb1
0xf01 JUMP
0xf02 JUMPDEST
0xf03 PUSH1 0x4
0xf05 DUP1
0xf06 SLOAD
0xf07 PUSH1 0x1
0xf09 DUP2
0xf0a PUSH1 0x1
0xf0c AND
0xf0d ISZERO
0xf0e PUSH2 0x100
0xf11 MUL
0xf12 SUB
0xf13 AND
0xf14 PUSH1 0x2
0xf16 SWAP1
0xf17 DIV
0xf18 DUP1
0xf19 PUSH1 0x1f
0xf1b ADD
0xf1c PUSH1 0x20
0xf1e DUP1
0xf1f SWAP2
0xf20 DIV
0xf21 MUL
0xf22 PUSH1 0x20
0xf24 ADD
0xf25 PUSH1 0x40
0xf27 MLOAD
0xf28 SWAP1
0xf29 DUP2
0xf2a ADD
0xf2b PUSH1 0x40
0xf2d MSTORE
0xf2e DUP1
0xf2f SWAP3
0xf30 SWAP2
0xf31 SWAP1
0xf32 DUP2
0xf33 DUP2
0xf34 MSTORE
0xf35 PUSH1 0x20
0xf37 ADD
0xf38 DUP3
0xf39 DUP1
0xf3a SLOAD
0xf3b PUSH1 0x1
0xf3d DUP2
0xf3e PUSH1 0x1
0xf40 AND
0xf41 ISZERO
0xf42 PUSH2 0x100
0xf45 MUL
0xf46 SUB
0xf47 AND
0xf48 PUSH1 0x2
0xf4a SWAP1
0xf4b DIV
0xf4c DUP1
0xf4d ISZERO
0xf4e PUSH2 0xda6
0xf51 JUMPI
---
0xef1: JUMPDEST 
0xef3: JUMP S1
0xef4: JUMPDEST 
0xef5: V1013 = 0x5
0xef7: V1014 = S[0x5]
0xef9: JUMP S0
0xefa: JUMPDEST 
0xefb: V1015 = 0xd10
0xefe: V1016 = 0xdb1
0xf01: THROW 
0xf02: JUMPDEST 
0xf03: V1017 = 0x4
0xf06: V1018 = S[0x4]
0xf07: V1019 = 0x1
0xf0a: V1020 = 0x1
0xf0c: V1021 = AND 0x1 V1018
0xf0d: V1022 = ISZERO V1021
0xf0e: V1023 = 0x100
0xf11: V1024 = MUL 0x100 V1022
0xf12: V1025 = SUB V1024 0x1
0xf13: V1026 = AND V1025 V1018
0xf14: V1027 = 0x2
0xf17: V1028 = DIV V1026 0x2
0xf19: V1029 = 0x1f
0xf1b: V1030 = ADD 0x1f V1028
0xf1c: V1031 = 0x20
0xf20: V1032 = DIV V1030 0x20
0xf21: V1033 = MUL V1032 0x20
0xf22: V1034 = 0x20
0xf24: V1035 = ADD 0x20 V1033
0xf25: V1036 = 0x40
0xf27: V1037 = M[0x40]
0xf2a: V1038 = ADD V1037 V1035
0xf2b: V1039 = 0x40
0xf2d: M[0x40] = V1038
0xf34: M[V1037] = V1028
0xf35: V1040 = 0x20
0xf37: V1041 = ADD 0x20 V1037
0xf3a: V1042 = S[0x4]
0xf3b: V1043 = 0x1
0xf3e: V1044 = 0x1
0xf40: V1045 = AND 0x1 V1042
0xf41: V1046 = ISZERO V1045
0xf42: V1047 = 0x100
0xf45: V1048 = MUL 0x100 V1046
0xf46: V1049 = SUB V1048 0x1
0xf47: V1050 = AND V1049 V1042
0xf48: V1051 = 0x2
0xf4b: V1052 = DIV V1050 0x2
0xf4d: V1053 = ISZERO V1052
0xf4e: V1054 = 0xda6
0xf51: THROWI V1053
---
Entry stack: []
Stack pops: 11
Stack additions: [V1052, 0x4, V1041, V1028, 0x4, V1037]
Exit stack: []

================================

Block 0xf52
[0xf52:0xf59]
---
Predecessors: [0xef1]
Successors: [0xf5a]
---
0xf52 DUP1
0xf53 PUSH1 0x1f
0xf55 LT
0xf56 PUSH2 0xd7b
0xf59 JUMPI
---
0xf53: V1055 = 0x1f
0xf55: V1056 = LT 0x1f V1052
0xf56: V1057 = 0xd7b
0xf59: THROWI V1056
---
Entry stack: [V1037, 0x4, V1028, V1041, 0x4, V1052]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1037, 0x4, V1028, V1041, 0x4, V1052]

================================

Block 0xf5a
[0xf5a:0xf7a]
---
Predecessors: [0xf52]
Successors: [0xf7b]
---
0xf5a PUSH2 0x100
0xf5d DUP1
0xf5e DUP4
0xf5f SLOAD
0xf60 DIV
0xf61 MUL
0xf62 DUP4
0xf63 MSTORE
0xf64 SWAP2
0xf65 PUSH1 0x20
0xf67 ADD
0xf68 SWAP2
0xf69 PUSH2 0xda6
0xf6c JUMP
0xf6d JUMPDEST
0xf6e DUP3
0xf6f ADD
0xf70 SWAP2
0xf71 SWAP1
0xf72 PUSH1 0x0
0xf74 MSTORE
0xf75 PUSH1 0x20
0xf77 PUSH1 0x0
0xf79 SHA3
0xf7a SWAP1
---
0xf5a: V1058 = 0x100
0xf5f: V1059 = S[0x4]
0xf60: V1060 = DIV V1059 0x100
0xf61: V1061 = MUL V1060 0x100
0xf63: M[V1041] = V1061
0xf65: V1062 = 0x20
0xf67: V1063 = ADD 0x20 V1041
0xf69: V1064 = 0xda6
0xf6c: THROW 
0xf6d: JUMPDEST 
0xf6f: V1065 = ADD S2 S0
0xf72: V1066 = 0x0
0xf74: M[0x0] = S1
0xf75: V1067 = 0x20
0xf77: V1068 = 0x0
0xf79: V1069 = SHA3 0x0 0x20
---
Entry stack: [V1037, 0x4, V1028, V1041, 0x4, V1052]
Stack pops: 3
Stack additions: [S2, V1069, V1065]
Exit stack: []

================================

Block 0xf7b
[0xf7b:0xf8e]
---
Predecessors: [0xf5a]
Successors: [0xf8f]
---
0xf7b JUMPDEST
0xf7c DUP2
0xf7d SLOAD
0xf7e DUP2
0xf7f MSTORE
0xf80 SWAP1
0xf81 PUSH1 0x1
0xf83 ADD
0xf84 SWAP1
0xf85 PUSH1 0x20
0xf87 ADD
0xf88 DUP1
0xf89 DUP4
0xf8a GT
0xf8b PUSH2 0xd89
0xf8e JUMPI
---
0xf7b: JUMPDEST 
0xf7d: V1070 = S[V1069]
0xf7f: M[S0] = V1070
0xf81: V1071 = 0x1
0xf83: V1072 = ADD 0x1 V1069
0xf85: V1073 = 0x20
0xf87: V1074 = ADD 0x20 S0
0xf8a: V1075 = GT V1065 V1074
0xf8b: V1076 = 0xd89
0xf8e: THROWI V1075
---
Entry stack: [V1065, V1069, S0]
Stack pops: 3
Stack additions: [S2, V1072, V1074]
Exit stack: [V1065, V1072, V1074]

================================

Block 0xf8f
[0xf8f:0xf97]
---
Predecessors: [0xf7b]
Successors: [0xf98]
---
0xf8f DUP3
0xf90 SWAP1
0xf91 SUB
0xf92 PUSH1 0x1f
0xf94 AND
0xf95 DUP3
0xf96 ADD
0xf97 SWAP2
---
0xf91: V1077 = SUB V1074 V1065
0xf92: V1078 = 0x1f
0xf94: V1079 = AND 0x1f V1077
0xf96: V1080 = ADD V1065 V1079
---
Entry stack: [V1065, V1072, V1074]
Stack pops: 3
Stack additions: [V1080, S1, S2]
Exit stack: [V1080, V1072, V1065]

================================

Block 0xf98
[0xf98:0xf9f]
---
Predecessors: [0xf8f]
Successors: [0xfa0]
---
0xf98 JUMPDEST
0xf99 POP
0xf9a POP
0xf9b POP
0xf9c POP
0xf9d POP
0xf9e SWAP1
0xf9f POP
---
0xf98: JUMPDEST 
---
Entry stack: [V1080, V1072, V1065]
Stack pops: 7
Stack additions: [S5]
Exit stack: [S2]

================================

Block 0xfa0
[0xfa0:0xfe7]
---
Predecessors: [0xf98]
Successors: [0xfe8]
---
0xfa0 JUMPDEST
0xfa1 SWAP1
0xfa2 JUMP
0xfa3 JUMPDEST
0xfa4 PUSH1 0x20
0xfa6 PUSH1 0x40
0xfa8 MLOAD
0xfa9 SWAP1
0xfaa DUP2
0xfab ADD
0xfac PUSH1 0x40
0xfae MSTORE
0xfaf DUP1
0xfb0 PUSH1 0x0
0xfb2 DUP2
0xfb3 MSTORE
0xfb4 POP
0xfb5 SWAP1
0xfb6 JUMP
0xfb7 JUMPDEST
0xfb8 DUP3
0xfb9 DUP1
0xfba SLOAD
0xfbb PUSH1 0x1
0xfbd DUP2
0xfbe PUSH1 0x1
0xfc0 AND
0xfc1 ISZERO
0xfc2 PUSH2 0x100
0xfc5 MUL
0xfc6 SUB
0xfc7 AND
0xfc8 PUSH1 0x2
0xfca SWAP1
0xfcb DIV
0xfcc SWAP1
0xfcd PUSH1 0x0
0xfcf MSTORE
0xfd0 PUSH1 0x20
0xfd2 PUSH1 0x0
0xfd4 SHA3
0xfd5 SWAP1
0xfd6 PUSH1 0x1f
0xfd8 ADD
0xfd9 PUSH1 0x20
0xfdb SWAP1
0xfdc DIV
0xfdd DUP2
0xfde ADD
0xfdf SWAP3
0xfe0 DUP3
0xfe1 PUSH1 0x1f
0xfe3 LT
0xfe4 PUSH2 0xe06
0xfe7 JUMPI
---
0xfa0: JUMPDEST 
0xfa2: JUMP S1
0xfa3: JUMPDEST 
0xfa4: V1081 = 0x20
0xfa6: V1082 = 0x40
0xfa8: V1083 = M[0x40]
0xfab: V1084 = ADD V1083 0x20
0xfac: V1085 = 0x40
0xfae: M[0x40] = V1084
0xfb0: V1086 = 0x0
0xfb3: M[V1083] = 0x0
0xfb6: JUMP S0
0xfb7: JUMPDEST 
0xfba: V1087 = S[S2]
0xfbb: V1088 = 0x1
0xfbe: V1089 = 0x1
0xfc0: V1090 = AND 0x1 V1087
0xfc1: V1091 = ISZERO V1090
0xfc2: V1092 = 0x100
0xfc5: V1093 = MUL 0x100 V1091
0xfc6: V1094 = SUB V1093 0x1
0xfc7: V1095 = AND V1094 V1087
0xfc8: V1096 = 0x2
0xfcb: V1097 = DIV V1095 0x2
0xfcd: V1098 = 0x0
0xfcf: M[0x0] = S2
0xfd0: V1099 = 0x20
0xfd2: V1100 = 0x0
0xfd4: V1101 = SHA3 0x0 0x20
0xfd6: V1102 = 0x1f
0xfd8: V1103 = ADD 0x1f V1097
0xfd9: V1104 = 0x20
0xfdc: V1105 = DIV V1103 0x20
0xfde: V1106 = ADD V1101 V1105
0xfe1: V1107 = 0x1f
0xfe3: V1108 = LT 0x1f S0
0xfe4: V1109 = 0xe06
0xfe7: THROWI V1108
---
Entry stack: [S0]
Stack pops: 5
Stack additions: [S1, V1101, S0, V1106, S2]
Exit stack: []

================================

Block 0xfe8
[0xfe8:0x1006]
---
Predecessors: [0xfa0]
Successors: [0x1007]
---
0xfe8 DUP1
0xfe9 MLOAD
0xfea PUSH1 0xff
0xfec NOT
0xfed AND
0xfee DUP4
0xfef DUP1
0xff0 ADD
0xff1 OR
0xff2 DUP6
0xff3 SSTORE
0xff4 PUSH2 0xe34
0xff7 JUMP
0xff8 JUMPDEST
0xff9 DUP3
0xffa DUP1
0xffb ADD
0xffc PUSH1 0x1
0xffe ADD
0xfff DUP6
0x1000 SSTORE
0x1001 DUP3
0x1002 ISZERO
0x1003 PUSH2 0xe34
0x1006 JUMPI
---
0xfe9: V1110 = M[S0]
0xfea: V1111 = 0xff
0xfec: V1112 = NOT 0xff
0xfed: V1113 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1110
0xff0: V1114 = ADD S2 S2
0xff1: V1115 = OR V1114 V1113
0xff3: S[S4] = V1115
0xff4: V1116 = 0xe34
0xff7: THROW 
0xff8: JUMPDEST 
0xffb: V1117 = ADD S2 S2
0xffc: V1118 = 0x1
0xffe: V1119 = ADD 0x1 V1117
0x1000: S[S4] = V1119
0x1002: V1120 = ISZERO S2
0x1003: V1121 = 0xe34
0x1006: THROWI V1120
---
Entry stack: [S4, V1106, S2, V1101, S0]
Stack pops: 5
Stack additions: [S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x1007
[0x1007:0x1009]
---
Predecessors: [0xfe8]
Successors: [0x100a]
---
0x1007 SWAP2
0x1008 DUP3
0x1009 ADD
---
0x1009: V1122 = ADD S0 S2
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V1122]
Exit stack: [S4, S3, S0, S1, V1122]

================================

Block 0x100a
[0x100a:0x1012]
---
Predecessors: [0x1007]
Successors: [0x1013]
---
0x100a JUMPDEST
0x100b DUP3
0x100c DUP2
0x100d GT
0x100e ISZERO
0x100f PUSH2 0xe33
0x1012 JUMPI
---
0x100a: JUMPDEST 
0x100d: V1123 = GT V1122 S2
0x100e: V1124 = ISZERO V1123
0x100f: V1125 = 0xe33
0x1012: THROWI V1124
---
Entry stack: [S4, S3, S2, S1, V1122]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S4, S3, S2, S1, V1122]

================================

Block 0x1013
[0x1013:0x1025]
---
Predecessors: [0x100a]
Successors: [0x1026]
---
0x1013 DUP3
0x1014 MLOAD
0x1015 DUP3
0x1016 SSTORE
0x1017 SWAP2
0x1018 PUSH1 0x20
0x101a ADD
0x101b SWAP2
0x101c SWAP1
0x101d PUSH1 0x1
0x101f ADD
0x1020 SWAP1
0x1021 PUSH2 0xe18
0x1024 JUMP
0x1025 JUMPDEST
---
0x1014: V1126 = M[S2]
0x1016: S[S1] = V1126
0x1018: V1127 = 0x20
0x101a: V1128 = ADD 0x20 S2
0x101d: V1129 = 0x1
0x101f: V1130 = ADD 0x1 S1
0x1021: V1131 = 0xe18
0x1024: THROW 
0x1025: JUMPDEST 
---
Entry stack: [S4, S3, S2, S1, V1122]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x1026
[0x1026:0x103c]
---
Predecessors: [0x1013]
Successors: [0x103d]
---
0x1026 JUMPDEST
0x1027 POP
0x1028 SWAP1
0x1029 POP
0x102a PUSH2 0xe41
0x102d SWAP2
0x102e SWAP1
0x102f PUSH2 0xe45
0x1032 JUMP
0x1033 JUMPDEST
0x1034 POP
0x1035 SWAP1
0x1036 JUMP
0x1037 JUMPDEST
0x1038 PUSH2 0xe67
0x103b SWAP2
0x103c SWAP1
---
0x1026: JUMPDEST 
0x102a: V1132 = 0xe41
0x102f: V1133 = 0xe45
0x1032: THROW 
0x1033: JUMPDEST 
0x1036: JUMP S2
0x1037: JUMPDEST 
0x1038: V1134 = 0xe67
---
Entry stack: []
Stack pops: 9
Stack additions: [S0, S1, 0xe67]
Exit stack: []

================================

Block 0x103d
[0x103d:0x1045]
---
Predecessors: [0x1026]
Successors: [0x1046]
---
0x103d JUMPDEST
0x103e DUP1
0x103f DUP3
0x1040 GT
0x1041 ISZERO
0x1042 PUSH2 0xe63
0x1045 JUMPI
---
0x103d: JUMPDEST 
0x1040: V1135 = GT S1 S0
0x1041: V1136 = ISZERO V1135
0x1042: V1137 = 0xe63
0x1045: THROWI V1136
---
Entry stack: [0xe67, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0xe67, S1, S0]

================================

Block 0x1046
[0x1046:0x10b3]
---
Predecessors: [0x103d]
Successors: []
---
0x1046 PUSH1 0x0
0x1048 DUP2
0x1049 PUSH1 0x0
0x104b SWAP1
0x104c SSTORE
0x104d POP
0x104e PUSH1 0x1
0x1050 ADD
0x1051 PUSH2 0xe4b
0x1054 JUMP
0x1055 JUMPDEST
0x1056 POP
0x1057 SWAP1
0x1058 JUMP
0x1059 JUMPDEST
0x105a SWAP1
0x105b JUMP
0x105c STOP
0x105d LOG1
0x105e PUSH6 0x627a7a723058
0x1065 SHA3
0x1066 BALANCE
0x1067 PUSH7 0x90c5c4086137fb
0x106f ISZERO
0x1070 MISSING 0x21
0x1071 SDIV
0x1072 MULMOD
0x1073 STATICCALL
0x1074 MISSING 0x1e
0x1075 PUSH5 0xa5fdeb5e9f
0x107b MISSING 0xf8
0x107c MISSING 0xe6
0x107d MISSING 0x2c
0x107e MISSING 0x22
0x107f MISSING 0xe9
0x1080 MISSING 0xcc
0x1081 MISSING 0xb4
0x1082 DUP2
0x1083 PUSH32 0xce6d0029a165627a7a72305820c582eaa7a2fbdb77b99066f808ce404e82755a
0x10a4 DUP12
0x10a5 PUSH14 0xb0d616d1e2a4b463decae50029
---
0x1046: V1138 = 0x0
0x1049: V1139 = 0x0
0x104c: S[S0] = 0x0
0x104e: V1140 = 0x1
0x1050: V1141 = ADD 0x1 S0
0x1051: V1142 = 0xe4b
0x1054: THROW 
0x1055: JUMPDEST 
0x1058: JUMP S2
0x1059: JUMPDEST 
0x105b: JUMP S1
0x105c: STOP 
0x105d: LOG S0 S1 S2
0x105e: V1143 = 0x627a7a723058
0x1065: V1144 = SHA3 0x627a7a723058 S3
0x1066: V1145 = BALANCE V1144
0x1067: V1146 = 0x90c5c4086137fb
0x106f: V1147 = ISZERO 0x90c5c4086137fb
0x1070: MISSING 0x21
0x1071: V1148 = SDIV S0 S1
0x1072: V1149 = MULMOD V1148 S2 S3
0x1073: V1150 = STATICCALL V1149 S4 S5 S6 S7 S8
0x1074: MISSING 0x1e
0x1075: V1151 = 0xa5fdeb5e9f
0x107b: MISSING 0xf8
0x107c: MISSING 0xe6
0x107d: MISSING 0x2c
0x107e: MISSING 0x22
0x107f: MISSING 0xe9
0x1080: MISSING 0xcc
0x1081: MISSING 0xb4
0x1083: V1152 = 0xce6d0029a165627a7a72305820c582eaa7a2fbdb77b99066f808ce404e82755a
0x10a5: V1153 = 0xb0d616d1e2a4b463decae50029
---
Entry stack: [0xe67, S1, S0]
Stack pops: 320
Stack additions: [0xb0d616d1e2a4b463decae50029, S9, 0xce6d0029a165627a7a72305820c582eaa7a2fbdb77b99066f808ce404e82755a, S1, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x4210ad0e
Entry block: 0x3b
Exit block: 0x70
Body: 0x3b, 0x70, 0xb2, 0xbf, 0x10d, 0x10e, 0x113, 0x119

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

