Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x1e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x1e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x1e
0xc: JUMPI 0x1e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x1d]
---
Predecessors: [0x0]
Successors: [0x1e, 0x81]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH1 0xe0
0x12 SHR
0x13 DUP1
0x14 PUSH4 0x101e8952
0x19 EQ
0x1a PUSH2 0x81
0x1d JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0xe0
0x12: V9 = SHR 0xe0 V7
0x14: V10 = 0x101e8952
0x19: V11 = EQ 0x101e8952 V9
0x1a: V12 = 0x81
0x1d: JUMPI 0x81 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x1e
[0x1e:0x49]
---
Predecessors: [0x0, 0xd]
Successors: [0x4a, 0x6b]
---
0x1e JUMPDEST
0x1f PUSH1 0x0
0x21 DUP1
0x22 SLOAD
0x23 PUSH1 0x40
0x25 MLOAD
0x26 PUSH1 0x1
0x28 PUSH1 0x1
0x2a PUSH1 0xa0
0x2c SHL
0x2d SUB
0x2e SWAP1
0x2f SWAP2
0x30 AND
0x31 SWAP1
0x32 CALLVALUE
0x33 SWAP1
0x34 DUP4
0x35 DUP2
0x36 DUP2
0x37 DUP2
0x38 DUP6
0x39 DUP8
0x3a GAS
0x3b CALL
0x3c SWAP3
0x3d POP
0x3e POP
0x3f POP
0x40 RETURNDATASIZE
0x41 DUP1
0x42 PUSH1 0x0
0x44 DUP2
0x45 EQ
0x46 PUSH2 0x6b
0x49 JUMPI
---
0x1e: JUMPDEST 
0x1f: V13 = 0x0
0x22: V14 = S[0x0]
0x23: V15 = 0x40
0x25: V16 = M[0x40]
0x26: V17 = 0x1
0x28: V18 = 0x1
0x2a: V19 = 0xa0
0x2c: V20 = SHL 0xa0 0x1
0x2d: V21 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30: V22 = AND V14 0xffffffffffffffffffffffffffffffffffffffff
0x32: V23 = CALLVALUE
0x3a: V24 = GAS
0x3b: V25 = CALL V24 V22 V23 V16 0x0 V16 0x0
0x40: V26 = RETURNDATASIZE
0x42: V27 = 0x0
0x45: V28 = EQ V26 0x0
0x46: V29 = 0x6b
0x49: JUMPI 0x6b V28
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x0, V25, V26, V26]
Exit stack: [V9, 0x0, V25, V26, V26]

================================

Block 0x4a
[0x4a:0x6a]
---
Predecessors: [0x1e]
Successors: [0x70]
---
0x4a PUSH1 0x40
0x4c MLOAD
0x4d SWAP2
0x4e POP
0x4f PUSH1 0x1f
0x51 NOT
0x52 PUSH1 0x3f
0x54 RETURNDATASIZE
0x55 ADD
0x56 AND
0x57 DUP3
0x58 ADD
0x59 PUSH1 0x40
0x5b MSTORE
0x5c RETURNDATASIZE
0x5d DUP3
0x5e MSTORE
0x5f RETURNDATASIZE
0x60 PUSH1 0x0
0x62 PUSH1 0x20
0x64 DUP5
0x65 ADD
0x66 RETURNDATACOPY
0x67 PUSH2 0x70
0x6a JUMP
---
0x4a: V30 = 0x40
0x4c: V31 = M[0x40]
0x4f: V32 = 0x1f
0x51: V33 = NOT 0x1f
0x52: V34 = 0x3f
0x54: V35 = RETURNDATASIZE
0x55: V36 = ADD V35 0x3f
0x56: V37 = AND V36 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x58: V38 = ADD V31 V37
0x59: V39 = 0x40
0x5b: M[0x40] = V38
0x5c: V40 = RETURNDATASIZE
0x5e: M[V31] = V40
0x5f: V41 = RETURNDATASIZE
0x60: V42 = 0x0
0x62: V43 = 0x20
0x65: V44 = ADD V31 0x20
0x66: RETURNDATACOPY V44 0x0 V41
0x67: V45 = 0x70
0x6a: JUMP 0x70
---
Entry stack: [V9, 0x0, V25, V26, V26]
Stack pops: 2
Stack additions: [V31, S0]
Exit stack: [V9, 0x0, V25, V31, V26]

================================

Block 0x6b
[0x6b:0x6f]
---
Predecessors: [0x1e]
Successors: [0x70]
---
0x6b JUMPDEST
0x6c PUSH1 0x60
0x6e SWAP2
0x6f POP
---
0x6b: JUMPDEST 
0x6c: V46 = 0x60
---
Entry stack: [V9, 0x0, V25, V26, V26]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0x0, V25, 0x60, V26]

================================

Block 0x70
[0x70:0x79]
---
Predecessors: [0x4a, 0x6b]
Successors: [0x7a, 0x7e]
---
0x70 JUMPDEST
0x71 POP
0x72 POP
0x73 SWAP1
0x74 POP
0x75 DUP1
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x70: JUMPDEST 
0x76: V47 = 0x7e
0x79: JUMPI 0x7e V25
---
Entry stack: [V9, 0x0, V25, S1, V26]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V9, V25]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x70]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V48 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V9, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V25]

================================

Block 0x7e
[0x7e:0x80]
---
Predecessors: [0x70]
Successors: []
---
0x7e JUMPDEST
0x7f POP
0x80 STOP
---
0x7e: JUMPDEST 
0x80: STOP 
---
Entry stack: [V9, V25]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x81
[0x81:0x92]
---
Predecessors: [0xd]
Successors: [0x93, 0x97]
---
0x81 JUMPDEST
0x82 PUSH2 0xa7
0x85 PUSH1 0x4
0x87 DUP1
0x88 CALLDATASIZE
0x89 SUB
0x8a PUSH1 0x20
0x8c DUP2
0x8d LT
0x8e ISZERO
0x8f PUSH2 0x97
0x92 JUMPI
---
0x81: JUMPDEST 
0x82: V49 = 0xa7
0x85: V50 = 0x4
0x88: V51 = CALLDATASIZE
0x89: V52 = SUB V51 0x4
0x8a: V53 = 0x20
0x8d: V54 = LT V52 0x20
0x8e: V55 = ISZERO V54
0x8f: V56 = 0x97
0x92: JUMPI 0x97 V55
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0xa7, 0x4, V52]
Exit stack: [V9, 0xa7, 0x4, V52]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x81]
Successors: []
---
0x93 PUSH1 0x0
0x95 DUP1
0x96 REVERT
---
0x93: V57 = 0x0
0x96: REVERT 0x0 0x0
---
Entry stack: [V9, 0xa7, 0x4, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xa7, 0x4, V52]

================================

Block 0x97
[0x97:0xa6]
---
Predecessors: [0x81]
Successors: [0xa9]
---
0x97 JUMPDEST
0x98 POP
0x99 CALLDATALOAD
0x9a PUSH1 0x1
0x9c PUSH1 0x1
0x9e PUSH1 0xa0
0xa0 SHL
0xa1 SUB
0xa2 AND
0xa3 PUSH2 0xa9
0xa6 JUMP
---
0x97: JUMPDEST 
0x99: V58 = CALLDATALOAD 0x4
0x9a: V59 = 0x1
0x9c: V60 = 0x1
0x9e: V61 = 0xa0
0xa0: V62 = SHL 0xa0 0x1
0xa1: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xa3: V65 = 0xa9
0xa6: JUMP 0xa9
---
Entry stack: [V9, 0xa7, 0x4, V52]
Stack pops: 2
Stack additions: [V64]
Exit stack: [V9, 0xa7, V64]

================================

Block 0xa7
[0xa7:0xa8]
---
Predecessors: [0x107]
Successors: []
---
0xa7 JUMPDEST
0xa8 STOP
---
0xa7: JUMPDEST 
0xa8: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xa9
[0xa9:0xd2]
---
Predecessors: [0x97]
Successors: [0xd3, 0xf4]
---
0xa9 JUMPDEST
0xaa PUSH1 0x40
0xac MLOAD
0xad PUSH1 0x0
0xaf SWAP1
0xb0 PUSH1 0x1
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 SHL
0xb7 SUB
0xb8 DUP4
0xb9 AND
0xba SWAP1
0xbb CALLVALUE
0xbc SWAP1
0xbd DUP4
0xbe DUP2
0xbf DUP2
0xc0 DUP2
0xc1 DUP6
0xc2 DUP8
0xc3 GAS
0xc4 CALL
0xc5 SWAP3
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 RETURNDATASIZE
0xca DUP1
0xcb PUSH1 0x0
0xcd DUP2
0xce EQ
0xcf PUSH2 0xf4
0xd2 JUMPI
---
0xa9: JUMPDEST 
0xaa: V66 = 0x40
0xac: V67 = M[0x40]
0xad: V68 = 0x0
0xb0: V69 = 0x1
0xb2: V70 = 0x1
0xb4: V71 = 0xa0
0xb6: V72 = SHL 0xa0 0x1
0xb7: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V74 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V75 = CALLVALUE
0xc3: V76 = GAS
0xc4: V77 = CALL V76 V74 V75 V67 0x0 V67 0x0
0xc9: V78 = RETURNDATASIZE
0xcb: V79 = 0x0
0xce: V80 = EQ V78 0x0
0xcf: V81 = 0xf4
0xd2: JUMPI 0xf4 V80
---
Entry stack: [V9, 0xa7, V64]
Stack pops: 1
Stack additions: [S0, 0x0, V77, V78, V78]
Exit stack: [V9, 0xa7, V64, 0x0, V77, V78, V78]

================================

Block 0xd3
[0xd3:0xf3]
---
Predecessors: [0xa9]
Successors: [0xf9]
---
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 SWAP2
0xd7 POP
0xd8 PUSH1 0x1f
0xda NOT
0xdb PUSH1 0x3f
0xdd RETURNDATASIZE
0xde ADD
0xdf AND
0xe0 DUP3
0xe1 ADD
0xe2 PUSH1 0x40
0xe4 MSTORE
0xe5 RETURNDATASIZE
0xe6 DUP3
0xe7 MSTORE
0xe8 RETURNDATASIZE
0xe9 PUSH1 0x0
0xeb PUSH1 0x20
0xed DUP5
0xee ADD
0xef RETURNDATACOPY
0xf0 PUSH2 0xf9
0xf3 JUMP
---
0xd3: V82 = 0x40
0xd5: V83 = M[0x40]
0xd8: V84 = 0x1f
0xda: V85 = NOT 0x1f
0xdb: V86 = 0x3f
0xdd: V87 = RETURNDATASIZE
0xde: V88 = ADD V87 0x3f
0xdf: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xe1: V90 = ADD V83 V89
0xe2: V91 = 0x40
0xe4: M[0x40] = V90
0xe5: V92 = RETURNDATASIZE
0xe7: M[V83] = V92
0xe8: V93 = RETURNDATASIZE
0xe9: V94 = 0x0
0xeb: V95 = 0x20
0xee: V96 = ADD V83 0x20
0xef: RETURNDATACOPY V96 0x0 V93
0xf0: V97 = 0xf9
0xf3: JUMP 0xf9
---
Entry stack: [V9, 0xa7, V64, 0x0, V77, V78, V78]
Stack pops: 2
Stack additions: [V83, S0]
Exit stack: [V9, 0xa7, V64, 0x0, V77, V83, V78]

================================

Block 0xf4
[0xf4:0xf8]
---
Predecessors: [0xa9]
Successors: [0xf9]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x60
0xf7 SWAP2
0xf8 POP
---
0xf4: JUMPDEST 
0xf5: V98 = 0x60
---
Entry stack: [V9, 0xa7, V64, 0x0, V77, V78, V78]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0xa7, V64, 0x0, V77, 0x60, V78]

================================

Block 0xf9
[0xf9:0x102]
---
Predecessors: [0xd3, 0xf4]
Successors: [0x103, 0x107]
---
0xf9 JUMPDEST
0xfa POP
0xfb POP
0xfc SWAP1
0xfd POP
0xfe DUP1
0xff PUSH2 0x107
0x102 JUMPI
---
0xf9: JUMPDEST 
0xff: V99 = 0x107
0x102: JUMPI 0x107 V77
---
Entry stack: [V9, 0xa7, V64, 0x0, V77, S1, V78]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V9, 0xa7, V64, V77]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xf9]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V100 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V9, 0xa7, V64, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xa7, V64, V77]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0xf9]
Successors: [0xa7]
---
0x107 JUMPDEST
0x108 POP
0x109 POP
0x10a JUMP
---
0x107: JUMPDEST 
0x10a: JUMP 0xa7
---
Entry stack: [V9, 0xa7, V64, V77]
Stack pops: 3
Stack additions: []
Exit stack: [V9]

================================

Block 0x10b
[0x10b:0x116]
---
Predecessors: []
Successors: [0x117]
Has unresolved jump.
---
0x10b INVALID
0x10c LOG1
0x10d PUSH6 0x627a7a723058
0x114 SHA3
0x115 SAR
0x116 JUMPI
---
0x10b: INVALID 
0x10c: LOG S0 S1 S2
0x10d: V101 = 0x627a7a723058
0x114: V102 = SHA3 0x627a7a723058 S3
0x115: V103 = SAR V102 S4
0x116: JUMPI V103 S5
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x117
[0x117:0x136]
---
Predecessors: [0x10b]
Successors: []
---
0x117 DIFFICULTY
0x118 MISSING 0xc6
0x119 SUB
0x11a DUP3
0x11b SMOD
0x11c COINBASE
0x11d MISSING 0x1e
0x11e MISSING 0xba
0x11f SSTORE
0x120 PUSH3 0x9905b1
0x124 LOG3
0x125 MISSING 0xb8
0x126 CREATE
0x127 SSTORE
0x128 PUSH3 0x9a9b08
0x12c MISSING 0xc1
0x12d MISSING 0x21
0x12e ORIGIN
0x12f BLOCKHASH
0x130 CALLVALUE
0x131 DUP9
0x132 MISSING 0xbe
0x133 RETURN
0x134 GAS
0x135 STOP
0x136 MISSING 0x29
---
0x117: V104 = DIFFICULTY
0x118: MISSING 0xc6
0x119: V105 = SUB S0 S1
0x11b: V106 = SMOD S3 V105
0x11c: V107 = COINBASE
0x11d: MISSING 0x1e
0x11e: MISSING 0xba
0x11f: S[S0] = S1
0x120: V108 = 0x9905b1
0x124: LOG 0x9905b1 S2 S3 S4 S5
0x125: MISSING 0xb8
0x126: V109 = CREATE S0 S1 S2
0x127: S[V109] = S3
0x128: V110 = 0x9a9b08
0x12c: MISSING 0xc1
0x12d: MISSING 0x21
0x12e: V111 = ORIGIN
0x12f: V112 = BLOCKHASH V111
0x130: V113 = CALLVALUE
0x132: MISSING 0xbe
0x133: RETURN S0 S1
0x134: V114 = GAS
0x135: STOP 
0x136: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V104, V107, V106, S2, S3, 0x9a9b08, S6, V113, V112, S0, S1, S2, S3, S4, S5, S6, V114]
Exit stack: []

================================

Function 0:
Public function signature: 0x101e8952
Entry block: 0x81
Exit block: 0xa7
Body: 0x81, 0x93, 0x97, 0xa7, 0xa9, 0xd3, 0xf4, 0xf9, 0x103, 0x107

Function 1:
Public fallback function
Entry block: 0x1e
Exit block: 0x7e
Body: 0x1e, 0x4a, 0x6b, 0x70, 0x7a, 0x7e

