Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x69]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x69
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x69
0x19: JUMPI 0x69 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x47]
---
Predecessors: [0x10]
Successors: [0x48, 0x6e]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b SWAP1
0x3c DIV
0x3d DUP1
0x3e PUSH4 0x948cb719
0x43 EQ
0x44 PUSH2 0x6e
0x47 JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x3c: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x3e: V14 = 0x948cb719
0x43: V15 = EQ 0x948cb719 V13
0x44: V16 = 0x6e
0x47: JUMPI 0x6e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x1a]
Successors: [0x53, 0x12f]
---
0x48 DUP1
0x49 PUSH4 0x97107d6d
0x4e EQ
0x4f PUSH2 0x12f
0x52 JUMPI
---
0x49: V17 = 0x97107d6d
0x4e: V18 = EQ 0x97107d6d V13
0x4f: V19 = 0x12f
0x52: JUMPI 0x12f V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x173]
---
0x53 DUP1
0x54 PUSH4 0xc19d93fb
0x59 EQ
0x5a PUSH2 0x173
0x5d JUMPI
---
0x54: V20 = 0xc19d93fb
0x59: V21 = EQ 0xc19d93fb V13
0x5a: V22 = 0x173
0x5d: JUMPI 0x173 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x223]
---
0x5e DUP1
0x5f PUSH4 0xd074e535
0x64 EQ
0x65 PUSH2 0x223
0x68 JUMPI
---
0x5f: V23 = 0xd074e535
0x64: V24 = EQ 0xd074e535 V13
0x65: V25 = 0x223
0x68: JUMPI 0x223 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x6d]
---
Predecessors: [0x10, 0x5e]
Successors: []
---
0x69 JUMPDEST
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x69: JUMPDEST 
0x6a: V26 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0x1a]
Successors: [0x328]
---
0x6e JUMPDEST
0x6f PUSH2 0x76
0x72 PUSH2 0x328
0x75 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x76
0x72: V28 = 0x328
0x75: JUMP 0x328
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x76]
Exit stack: [V13, 0x76]

================================

Block 0x76
[0x76:0xd6]
---
Predecessors: [0x5d3]
Successors: [0xd7]
---
0x76 JUMPDEST
0x77 PUSH1 0x40
0x79 MLOAD
0x7a DUP1
0x7b DUP5
0x7c ISZERO
0x7d ISZERO
0x7e ISZERO
0x7f ISZERO
0x80 DUP2
0x81 MSTORE
0x82 PUSH1 0x20
0x84 ADD
0x85 DUP1
0x86 PUSH1 0x20
0x88 ADD
0x89 DUP4
0x8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f AND
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 AND
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba ADD
0xbb DUP3
0xbc DUP2
0xbd SUB
0xbe DUP3
0xbf MSTORE
0xc0 DUP5
0xc1 DUP2
0xc2 DUP2
0xc3 MLOAD
0xc4 DUP2
0xc5 MSTORE
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP2
0xca POP
0xcb DUP1
0xcc MLOAD
0xcd SWAP1
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP1
0xd2 DUP1
0xd3 DUP4
0xd4 DUP4
0xd5 PUSH1 0x0
---
0x76: JUMPDEST 
0x77: V29 = 0x40
0x79: V30 = M[0x40]
0x7c: V31 = ISZERO V320
0x7d: V32 = ISZERO V31
0x7e: V33 = ISZERO V32
0x7f: V34 = ISZERO V33
0x81: M[V30] = V34
0x82: V35 = 0x20
0x84: V36 = ADD 0x20 V30
0x86: V37 = 0x20
0x88: V38 = ADD 0x20 V36
0x8a: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0xa0: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xb7: M[V38] = V42
0xb8: V43 = 0x20
0xba: V44 = ADD 0x20 V38
0xbd: V45 = SUB V44 V30
0xbf: M[V36] = V45
0xc3: V46 = M[S1]
0xc5: M[V44] = V46
0xc6: V47 = 0x20
0xc8: V48 = ADD 0x20 V44
0xcc: V49 = M[S1]
0xce: V50 = 0x20
0xd0: V51 = ADD 0x20 S1
0xd5: V52 = 0x0
---
Entry stack: [V13, V320, S1, V352]
Stack pops: 3
Stack additions: [S2, S1, S0, V30, V36, V48, V51, V49, V49, V48, V51, 0x0]
Exit stack: [V13, V320, S1, V352, V30, V36, V48, V51, V49, V49, V48, V51, 0x0]

================================

Block 0xd7
[0xd7:0xdf]
---
Predecessors: [0x76, 0xe0]
Successors: [0xe0, 0xf2]
---
0xd7 JUMPDEST
0xd8 DUP4
0xd9 DUP2
0xda LT
0xdb ISZERO
0xdc PUSH2 0xf2
0xdf JUMPI
---
0xd7: JUMPDEST 
0xda: V53 = LT S0 V49
0xdb: V54 = ISZERO V53
0xdc: V55 = 0xf2
0xdf: JUMPI 0xf2 V54
---
Entry stack: [V13, V320, S10, V352, V30, V36, V48, V51, V49, V49, V48, V51, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V320, S10, V352, V30, V36, V48, V51, V49, V49, V48, V51, S0]

================================

Block 0xe0
[0xe0:0xf1]
---
Predecessors: [0xd7]
Successors: [0xd7]
---
0xe0 DUP1
0xe1 DUP3
0xe2 ADD
0xe3 MLOAD
0xe4 DUP2
0xe5 DUP5
0xe6 ADD
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea DUP2
0xeb ADD
0xec SWAP1
0xed POP
0xee PUSH2 0xd7
0xf1 JUMP
---
0xe2: V56 = ADD V51 S0
0xe3: V57 = M[V56]
0xe6: V58 = ADD V48 S0
0xe7: M[V58] = V57
0xe8: V59 = 0x20
0xeb: V60 = ADD S0 0x20
0xee: V61 = 0xd7
0xf1: JUMP 0xd7
---
Entry stack: [V13, V320, S10, V352, V30, V36, V48, V51, V49, V49, V48, V51, S0]
Stack pops: 3
Stack additions: [S2, S1, V60]
Exit stack: [V13, V320, S10, V352, V30, V36, V48, V51, V49, V49, V48, V51, V60]

================================

Block 0xf2
[0xf2:0x105]
---
Predecessors: [0xd7]
Successors: [0x106, 0x11f]
---
0xf2 JUMPDEST
0xf3 POP
0xf4 POP
0xf5 POP
0xf6 POP
0xf7 SWAP1
0xf8 POP
0xf9 SWAP1
0xfa DUP2
0xfb ADD
0xfc SWAP1
0xfd PUSH1 0x1f
0xff AND
0x100 DUP1
0x101 ISZERO
0x102 PUSH2 0x11f
0x105 JUMPI
---
0xf2: JUMPDEST 
0xfb: V62 = ADD V49 V48
0xfd: V63 = 0x1f
0xff: V64 = AND 0x1f V49
0x101: V65 = ISZERO V64
0x102: V66 = 0x11f
0x105: JUMPI 0x11f V65
---
Entry stack: [V13, V320, S10, V352, V30, V36, V48, V51, V49, V49, V48, V51, S0]
Stack pops: 7
Stack additions: [V62, V64]
Exit stack: [V13, V320, S10, V352, V30, V36, V62, V64]

================================

Block 0x106
[0x106:0x11e]
---
Predecessors: [0xf2]
Successors: [0x11f]
---
0x106 DUP1
0x107 DUP3
0x108 SUB
0x109 DUP1
0x10a MLOAD
0x10b PUSH1 0x1
0x10d DUP4
0x10e PUSH1 0x20
0x110 SUB
0x111 PUSH2 0x100
0x114 EXP
0x115 SUB
0x116 NOT
0x117 AND
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP2
0x11e POP
---
0x108: V67 = SUB V62 V64
0x10a: V68 = M[V67]
0x10b: V69 = 0x1
0x10e: V70 = 0x20
0x110: V71 = SUB 0x20 V64
0x111: V72 = 0x100
0x114: V73 = EXP 0x100 V71
0x115: V74 = SUB V73 0x1
0x116: V75 = NOT V74
0x117: V76 = AND V75 V68
0x119: M[V67] = V76
0x11a: V77 = 0x20
0x11c: V78 = ADD 0x20 V67
---
Entry stack: [V13, V320, S5, V352, V30, V36, V62, V64]
Stack pops: 2
Stack additions: [V78, S0]
Exit stack: [V13, V320, S5, V352, V30, V36, V78, V64]

================================

Block 0x11f
[0x11f:0x12e]
---
Predecessors: [0xf2, 0x106]
Successors: []
---
0x11f JUMPDEST
0x120 POP
0x121 SWAP5
0x122 POP
0x123 POP
0x124 POP
0x125 POP
0x126 POP
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b SWAP2
0x12c SUB
0x12d SWAP1
0x12e RETURN
---
0x11f: JUMPDEST 
0x127: V79 = 0x40
0x129: V80 = M[0x40]
0x12c: V81 = SUB S1 V80
0x12e: RETURN V80 V81
---
Entry stack: [V13, V320, S5, V352, V30, V36, S1, V64]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x12f
[0x12f:0x140]
---
Predecessors: [0x48]
Successors: [0x141, 0x145]
---
0x12f JUMPDEST
0x130 PUSH2 0x171
0x133 PUSH1 0x4
0x135 DUP1
0x136 CALLDATASIZE
0x137 SUB
0x138 PUSH1 0x20
0x13a DUP2
0x13b LT
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x12f: JUMPDEST 
0x130: V82 = 0x171
0x133: V83 = 0x4
0x136: V84 = CALLDATASIZE
0x137: V85 = SUB V84 0x4
0x138: V86 = 0x20
0x13b: V87 = LT V85 0x20
0x13c: V88 = ISZERO V87
0x13d: V89 = 0x145
0x140: JUMPI 0x145 V88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x171, 0x4, V85]
Exit stack: [V13, 0x171, 0x4, V85]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x12f]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V90 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V13, 0x171, 0x4, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x171, 0x4, V85]

================================

Block 0x145
[0x145:0x170]
---
Predecessors: [0x12f]
Successors: [0x604]
---
0x145 JUMPDEST
0x146 DUP2
0x147 ADD
0x148 SWAP1
0x149 DUP1
0x14a DUP1
0x14b CALLDATALOAD
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 AND
0x162 SWAP1
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP1
0x167 SWAP3
0x168 SWAP2
0x169 SWAP1
0x16a POP
0x16b POP
0x16c POP
0x16d PUSH2 0x604
0x170 JUMP
---
0x145: JUMPDEST 
0x147: V91 = ADD 0x4 V85
0x14b: V92 = CALLDATALOAD 0x4
0x14c: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x161: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x163: V95 = 0x20
0x165: V96 = ADD 0x20 0x4
0x16d: V97 = 0x604
0x170: JUMP 0x604
---
Entry stack: [V13, 0x171, 0x4, V85]
Stack pops: 2
Stack additions: [V94]
Exit stack: [V13, 0x171, V94]

================================

Block 0x171
[0x171:0x172]
---
Predecessors: [0x6c9]
Successors: []
---
0x171 JUMPDEST
0x172 STOP
---
0x171: JUMPDEST 
0x172: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x53]
Successors: [0x70c]
---
0x173 JUMPDEST
0x174 PUSH2 0x17b
0x177 PUSH2 0x70c
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V98 = 0x17b
0x177: V99 = 0x70c
0x17a: JUMP 0x70c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x17b]
Exit stack: [V13, 0x17b]

================================

Block 0x17b
[0x17b:0x222]
---
Predecessors: [0x70c]
Successors: []
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP5
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 DUP4
0x1b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c8 AND
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 DUP3
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 AND
0x211 DUP2
0x212 MSTORE
0x213 PUSH1 0x20
0x215 ADD
0x216 SWAP4
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f SWAP2
0x220 SUB
0x221 SWAP1
0x222 RETURN
---
0x17b: JUMPDEST 
0x17c: V100 = 0x40
0x17e: V101 = M[0x40]
0x181: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x197: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1ae: M[V101] = V105
0x1af: V106 = 0x20
0x1b1: V107 = ADD 0x20 V101
0x1b3: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x1c9: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1e0: M[V107] = V111
0x1e1: V112 = 0x20
0x1e3: V113 = ADD 0x20 V107
0x1e5: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x1fb: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x210: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x212: M[V113] = V117
0x213: V118 = 0x20
0x215: V119 = ADD 0x20 V113
0x21b: V120 = 0x40
0x21d: V121 = M[0x40]
0x220: V122 = SUB V119 V121
0x222: RETURN V121 V122
---
Entry stack: [V13, V408, V415, V423]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x223
[0x223:0x234]
---
Predecessors: [0x5e]
Successors: [0x235, 0x239]
---
0x223 JUMPDEST
0x224 PUSH2 0x26f
0x227 PUSH1 0x4
0x229 DUP1
0x22a CALLDATASIZE
0x22b SUB
0x22c PUSH1 0x40
0x22e DUP2
0x22f LT
0x230 ISZERO
0x231 PUSH2 0x239
0x234 JUMPI
---
0x223: JUMPDEST 
0x224: V123 = 0x26f
0x227: V124 = 0x4
0x22a: V125 = CALLDATASIZE
0x22b: V126 = SUB V125 0x4
0x22c: V127 = 0x40
0x22f: V128 = LT V126 0x40
0x230: V129 = ISZERO V128
0x231: V130 = 0x239
0x234: JUMPI 0x239 V129
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x26f, 0x4, V126]
Exit stack: [V13, 0x26f, 0x4, V126]

================================

Block 0x235
[0x235:0x238]
---
Predecessors: [0x223]
Successors: []
---
0x235 PUSH1 0x0
0x237 DUP1
0x238 REVERT
---
0x235: V131 = 0x0
0x238: REVERT 0x0 0x0
---
Entry stack: [V13, 0x26f, 0x4, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x26f, 0x4, V126]

================================

Block 0x239
[0x239:0x26e]
---
Predecessors: [0x223]
Successors: [0x78a]
---
0x239 JUMPDEST
0x23a DUP2
0x23b ADD
0x23c SWAP1
0x23d DUP1
0x23e DUP1
0x23f CALLDATALOAD
0x240 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x255 AND
0x256 SWAP1
0x257 PUSH1 0x20
0x259 ADD
0x25a SWAP1
0x25b SWAP3
0x25c SWAP2
0x25d SWAP1
0x25e DUP1
0x25f CALLDATALOAD
0x260 SWAP1
0x261 PUSH1 0x20
0x263 ADD
0x264 SWAP1
0x265 SWAP3
0x266 SWAP2
0x267 SWAP1
0x268 POP
0x269 POP
0x26a POP
0x26b PUSH2 0x78a
0x26e JUMP
---
0x239: JUMPDEST 
0x23b: V132 = ADD 0x4 V126
0x23f: V133 = CALLDATALOAD 0x4
0x240: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x255: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x257: V136 = 0x20
0x259: V137 = ADD 0x20 0x4
0x25f: V138 = CALLDATALOAD 0x24
0x261: V139 = 0x20
0x263: V140 = ADD 0x20 0x24
0x26b: V141 = 0x78a
0x26e: JUMP 0x78a
---
Entry stack: [V13, 0x26f, 0x4, V126]
Stack pops: 2
Stack additions: [V135, V138]
Exit stack: [V13, 0x26f, V135, V138]

================================

Block 0x26f
[0x26f:0x2cf]
---
Predecessors: [0xa57]
Successors: [0x2d0]
---
0x26f JUMPDEST
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 DUP5
0x275 ISZERO
0x276 ISZERO
0x277 ISZERO
0x278 ISZERO
0x279 DUP2
0x27a MSTORE
0x27b PUSH1 0x20
0x27d ADD
0x27e DUP1
0x27f PUSH1 0x20
0x281 ADD
0x282 DUP4
0x283 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x298 AND
0x299 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ae AND
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x20
0x2b3 ADD
0x2b4 DUP3
0x2b5 DUP2
0x2b6 SUB
0x2b7 DUP3
0x2b8 MSTORE
0x2b9 DUP5
0x2ba DUP2
0x2bb DUP2
0x2bc MLOAD
0x2bd DUP2
0x2be MSTORE
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP2
0x2c3 POP
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 SWAP1
0x2c7 PUSH1 0x20
0x2c9 ADD
0x2ca SWAP1
0x2cb DUP1
0x2cc DUP4
0x2cd DUP4
0x2ce PUSH1 0x0
---
0x26f: JUMPDEST 
0x270: V142 = 0x40
0x272: V143 = M[0x40]
0x275: V144 = ISZERO V552
0x276: V145 = ISZERO V144
0x277: V146 = ISZERO V145
0x278: V147 = ISZERO V146
0x27a: M[V143] = V147
0x27b: V148 = 0x20
0x27d: V149 = ADD 0x20 V143
0x27f: V150 = 0x20
0x281: V151 = ADD 0x20 V149
0x283: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x298: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0x299: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ae: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2b0: M[V151] = V155
0x2b1: V156 = 0x20
0x2b3: V157 = ADD 0x20 V151
0x2b6: V158 = SUB V157 V143
0x2b8: M[V149] = V158
0x2bc: V159 = M[S1]
0x2be: M[V157] = V159
0x2bf: V160 = 0x20
0x2c1: V161 = ADD 0x20 V157
0x2c5: V162 = M[S1]
0x2c7: V163 = 0x20
0x2c9: V164 = ADD 0x20 S1
0x2ce: V165 = 0x0
---
Entry stack: [V13, V552, S1, V584]
Stack pops: 3
Stack additions: [S2, S1, S0, V143, V149, V161, V164, V162, V162, V161, V164, 0x0]
Exit stack: [V13, V552, S1, V584, V143, V149, V161, V164, V162, V162, V161, V164, 0x0]

================================

Block 0x2d0
[0x2d0:0x2d8]
---
Predecessors: [0x26f, 0x2d9]
Successors: [0x2d9, 0x2eb]
---
0x2d0 JUMPDEST
0x2d1 DUP4
0x2d2 DUP2
0x2d3 LT
0x2d4 ISZERO
0x2d5 PUSH2 0x2eb
0x2d8 JUMPI
---
0x2d0: JUMPDEST 
0x2d3: V166 = LT S0 V162
0x2d4: V167 = ISZERO V166
0x2d5: V168 = 0x2eb
0x2d8: JUMPI 0x2eb V167
---
Entry stack: [V13, V552, S10, V584, V143, V149, V161, V164, V162, V162, V161, V164, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V552, S10, V584, V143, V149, V161, V164, V162, V162, V161, V164, S0]

================================

Block 0x2d9
[0x2d9:0x2ea]
---
Predecessors: [0x2d0]
Successors: [0x2d0]
---
0x2d9 DUP1
0x2da DUP3
0x2db ADD
0x2dc MLOAD
0x2dd DUP2
0x2de DUP5
0x2df ADD
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 DUP2
0x2e4 ADD
0x2e5 SWAP1
0x2e6 POP
0x2e7 PUSH2 0x2d0
0x2ea JUMP
---
0x2db: V169 = ADD V164 S0
0x2dc: V170 = M[V169]
0x2df: V171 = ADD V161 S0
0x2e0: M[V171] = V170
0x2e1: V172 = 0x20
0x2e4: V173 = ADD S0 0x20
0x2e7: V174 = 0x2d0
0x2ea: JUMP 0x2d0
---
Entry stack: [V13, V552, S10, V584, V143, V149, V161, V164, V162, V162, V161, V164, S0]
Stack pops: 3
Stack additions: [S2, S1, V173]
Exit stack: [V13, V552, S10, V584, V143, V149, V161, V164, V162, V162, V161, V164, V173]

================================

Block 0x2eb
[0x2eb:0x2fe]
---
Predecessors: [0x2d0]
Successors: [0x2ff, 0x318]
---
0x2eb JUMPDEST
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 SWAP1
0x2f1 POP
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 ADD
0x2f5 SWAP1
0x2f6 PUSH1 0x1f
0x2f8 AND
0x2f9 DUP1
0x2fa ISZERO
0x2fb PUSH2 0x318
0x2fe JUMPI
---
0x2eb: JUMPDEST 
0x2f4: V175 = ADD V162 V161
0x2f6: V176 = 0x1f
0x2f8: V177 = AND 0x1f V162
0x2fa: V178 = ISZERO V177
0x2fb: V179 = 0x318
0x2fe: JUMPI 0x318 V178
---
Entry stack: [V13, V552, S10, V584, V143, V149, V161, V164, V162, V162, V161, V164, S0]
Stack pops: 7
Stack additions: [V175, V177]
Exit stack: [V13, V552, S10, V584, V143, V149, V175, V177]

================================

Block 0x2ff
[0x2ff:0x317]
---
Predecessors: [0x2eb]
Successors: [0x318]
---
0x2ff DUP1
0x300 DUP3
0x301 SUB
0x302 DUP1
0x303 MLOAD
0x304 PUSH1 0x1
0x306 DUP4
0x307 PUSH1 0x20
0x309 SUB
0x30a PUSH2 0x100
0x30d EXP
0x30e SUB
0x30f NOT
0x310 AND
0x311 DUP2
0x312 MSTORE
0x313 PUSH1 0x20
0x315 ADD
0x316 SWAP2
0x317 POP
---
0x301: V180 = SUB V175 V177
0x303: V181 = M[V180]
0x304: V182 = 0x1
0x307: V183 = 0x20
0x309: V184 = SUB 0x20 V177
0x30a: V185 = 0x100
0x30d: V186 = EXP 0x100 V184
0x30e: V187 = SUB V186 0x1
0x30f: V188 = NOT V187
0x310: V189 = AND V188 V181
0x312: M[V180] = V189
0x313: V190 = 0x20
0x315: V191 = ADD 0x20 V180
---
Entry stack: [V13, V552, S5, V584, V143, V149, V175, V177]
Stack pops: 2
Stack additions: [V191, S0]
Exit stack: [V13, V552, S5, V584, V143, V149, V191, V177]

================================

Block 0x318
[0x318:0x327]
---
Predecessors: [0x2eb, 0x2ff]
Successors: []
---
0x318 JUMPDEST
0x319 POP
0x31a SWAP5
0x31b POP
0x31c POP
0x31d POP
0x31e POP
0x31f POP
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP1
0x324 SWAP2
0x325 SUB
0x326 SWAP1
0x327 RETURN
---
0x318: JUMPDEST 
0x320: V192 = 0x40
0x322: V193 = M[0x40]
0x325: V194 = SUB S1 V193
0x327: RETURN V193 V194
---
Entry stack: [V13, V552, S5, V584, V143, V149, S1, V177]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x328
[0x328:0x385]
---
Predecessors: [0x6e]
Successors: [0x386, 0x3f3]
---
0x328 JUMPDEST
0x329 PUSH1 0x0
0x32b PUSH1 0x60
0x32d PUSH1 0x0
0x32f CALLER
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 PUSH1 0x2
0x348 PUSH1 0x0
0x34a SWAP1
0x34b SLOAD
0x34c SWAP1
0x34d PUSH2 0x100
0x350 EXP
0x351 SWAP1
0x352 DIV
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f EQ
0x380 ISZERO
0x381 ISZERO
0x382 PUSH2 0x3f3
0x385 JUMPI
---
0x328: JUMPDEST 
0x329: V195 = 0x0
0x32b: V196 = 0x60
0x32d: V197 = 0x0
0x32f: V198 = CALLER
0x330: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x346: V201 = 0x2
0x348: V202 = 0x0
0x34b: V203 = S[0x2]
0x34d: V204 = 0x100
0x350: V205 = EXP 0x100 0x0
0x352: V206 = DIV V203 0x1
0x353: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x369: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x37f: V211 = EQ V210 V200
0x380: V212 = ISZERO V211
0x381: V213 = ISZERO V212
0x382: V214 = 0x3f3
0x385: JUMPI 0x3f3 V213
---
Entry stack: [V13, 0x76]
Stack pops: 0
Stack additions: [0x0, 0x60, 0x0]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0]

================================

Block 0x386
[0x386:0x3f2]
---
Predecessors: [0x328]
Successors: []
---
0x386 PUSH1 0x40
0x388 MLOAD
0x389 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3aa DUP2
0x3ab MSTORE
0x3ac PUSH1 0x4
0x3ae ADD
0x3af DUP1
0x3b0 DUP1
0x3b1 PUSH1 0x20
0x3b3 ADD
0x3b4 DUP3
0x3b5 DUP2
0x3b6 SUB
0x3b7 DUP3
0x3b8 MSTORE
0x3b9 PUSH1 0x10
0x3bb DUP2
0x3bc MSTORE
0x3bd PUSH1 0x20
0x3bf ADD
0x3c0 DUP1
0x3c1 PUSH32 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 POP
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 SWAP2
0x3e9 POP
0x3ea POP
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee DUP1
0x3ef SWAP2
0x3f0 SUB
0x3f1 SWAP1
0x3f2 REVERT
---
0x386: V215 = 0x40
0x388: V216 = M[0x40]
0x389: V217 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3ab: M[V216] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3ac: V218 = 0x4
0x3ae: V219 = ADD 0x4 V216
0x3b1: V220 = 0x20
0x3b3: V221 = ADD 0x20 V219
0x3b6: V222 = SUB V221 V219
0x3b8: M[V219] = V222
0x3b9: V223 = 0x10
0x3bc: M[V221] = 0x10
0x3bd: V224 = 0x20
0x3bf: V225 = ADD 0x20 V221
0x3c1: V226 = 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x3e3: M[V225] = 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x3e5: V227 = 0x20
0x3e7: V228 = ADD 0x20 V225
0x3eb: V229 = 0x40
0x3ed: V230 = M[0x40]
0x3f0: V231 = SUB V228 V230
0x3f2: REVERT V230 V231
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0]

================================

Block 0x3f3
[0x3f3:0x535]
---
Predecessors: [0x328]
Successors: [0x536]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x0
0x3f6 PUSH1 0x60
0x3f8 PUSH1 0x1
0x3fa PUSH1 0x0
0x3fc SWAP1
0x3fd SLOAD
0x3fe SWAP1
0x3ff PUSH2 0x100
0x402 EXP
0x403 SWAP1
0x404 DIV
0x405 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41a AND
0x41b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x430 AND
0x431 PUSH1 0x2
0x433 PUSH1 0x0
0x435 SWAP1
0x436 SLOAD
0x437 SWAP1
0x438 PUSH2 0x100
0x43b EXP
0x43c SWAP1
0x43d DIV
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 PUSH8 0xde0b6b3a7640000
0x45d PUSH1 0x40
0x45f MLOAD
0x460 PUSH1 0x24
0x462 ADD
0x463 DUP1
0x464 DUP4
0x465 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47a AND
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x20
0x495 ADD
0x496 DUP3
0x497 PUSH8 0xffffffffffffffff
0x4a0 AND
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 PUSH1 0x20
0x4a5 ADD
0x4a6 SWAP3
0x4a7 POP
0x4a8 POP
0x4a9 POP
0x4aa PUSH1 0x40
0x4ac MLOAD
0x4ad PUSH1 0x20
0x4af DUP2
0x4b0 DUP4
0x4b1 SUB
0x4b2 SUB
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 SWAP1
0x4b6 PUSH1 0x40
0x4b8 MSTORE
0x4b9 PUSH32 0x72e26d4700000000000000000000000000000000000000000000000000000000
0x4da PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4f7 NOT
0x4f8 AND
0x4f9 PUSH1 0x20
0x4fb DUP3
0x4fc ADD
0x4fd DUP1
0x4fe MLOAD
0x4ff PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x51c DUP4
0x51d DUP2
0x51e DUP4
0x51f AND
0x520 OR
0x521 DUP4
0x522 MSTORE
0x523 POP
0x524 POP
0x525 POP
0x526 POP
0x527 PUSH1 0x40
0x529 MLOAD
0x52a DUP1
0x52b DUP3
0x52c DUP1
0x52d MLOAD
0x52e SWAP1
0x52f PUSH1 0x20
0x531 ADD
0x532 SWAP1
0x533 DUP1
0x534 DUP4
0x535 DUP4
---
0x3f3: JUMPDEST 
0x3f4: V232 = 0x0
0x3f6: V233 = 0x60
0x3f8: V234 = 0x1
0x3fa: V235 = 0x0
0x3fd: V236 = S[0x1]
0x3ff: V237 = 0x100
0x402: V238 = EXP 0x100 0x0
0x404: V239 = DIV V236 0x1
0x405: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x41a: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x41b: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x430: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x431: V244 = 0x2
0x433: V245 = 0x0
0x436: V246 = S[0x2]
0x438: V247 = 0x100
0x43b: V248 = EXP 0x100 0x0
0x43d: V249 = DIV V246 0x1
0x43e: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x454: V252 = 0xde0b6b3a7640000
0x45d: V253 = 0x40
0x45f: V254 = M[0x40]
0x460: V255 = 0x24
0x462: V256 = ADD 0x24 V254
0x465: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x47b: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x492: M[V256] = V260
0x493: V261 = 0x20
0x495: V262 = ADD 0x20 V256
0x497: V263 = 0xffffffffffffffff
0x4a0: V264 = AND 0xffffffffffffffff 0xde0b6b3a7640000
0x4a2: M[V262] = 0xde0b6b3a7640000
0x4a3: V265 = 0x20
0x4a5: V266 = ADD 0x20 V262
0x4aa: V267 = 0x40
0x4ac: V268 = M[0x40]
0x4ad: V269 = 0x20
0x4b1: V270 = SUB V266 V268
0x4b2: V271 = SUB V270 0x20
0x4b4: M[V268] = V271
0x4b6: V272 = 0x40
0x4b8: M[0x40] = V266
0x4b9: V273 = 0x72e26d4700000000000000000000000000000000000000000000000000000000
0x4da: V274 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4f7: V275 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4f8: V276 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0x72e26d4700000000000000000000000000000000000000000000000000000000
0x4f9: V277 = 0x20
0x4fc: V278 = ADD V268 0x20
0x4fe: V279 = M[V278]
0x4ff: V280 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x51f: V281 = AND V279 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x520: V282 = OR V281 0x72e26d4700000000000000000000000000000000000000000000000000000000
0x522: M[V278] = V282
0x527: V283 = 0x40
0x529: V284 = M[0x40]
0x52d: V285 = M[V268]
0x52f: V286 = 0x20
0x531: V287 = ADD 0x20 V268
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0]
Stack pops: 0
Stack additions: [0x0, 0x60, V243, V268, V284, V284, V287, V285, V285, V284, V287]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V243, V268, V284, V284, V287, V285, V285, V284, V287]

================================

Block 0x536
[0x536:0x540]
---
Predecessors: [0x3f3, 0x541]
Successors: [0x541, 0x55b]
---
0x536 JUMPDEST
0x537 PUSH1 0x20
0x539 DUP4
0x53a LT
0x53b ISZERO
0x53c ISZERO
0x53d PUSH2 0x55b
0x540 JUMPI
---
0x536: JUMPDEST 
0x537: V288 = 0x20
0x53a: V289 = LT S2 0x20
0x53b: V290 = ISZERO V289
0x53c: V291 = ISZERO V290
0x53d: V292 = 0x55b
0x540: JUMPI 0x55b V291
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V243, V268, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V243, V268, V284, V284, V287, V285, S2, S1, S0]

================================

Block 0x541
[0x541:0x55a]
---
Predecessors: [0x536]
Successors: [0x536]
---
0x541 DUP1
0x542 MLOAD
0x543 DUP3
0x544 MSTORE
0x545 PUSH1 0x20
0x547 DUP3
0x548 ADD
0x549 SWAP2
0x54a POP
0x54b PUSH1 0x20
0x54d DUP2
0x54e ADD
0x54f SWAP1
0x550 POP
0x551 PUSH1 0x20
0x553 DUP4
0x554 SUB
0x555 SWAP3
0x556 POP
0x557 PUSH2 0x536
0x55a JUMP
---
0x542: V293 = M[S0]
0x544: M[S1] = V293
0x545: V294 = 0x20
0x548: V295 = ADD S1 0x20
0x54b: V296 = 0x20
0x54e: V297 = ADD S0 0x20
0x551: V298 = 0x20
0x554: V299 = SUB S2 0x20
0x557: V300 = 0x536
0x55a: JUMP 0x536
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V243, V268, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 3
Stack additions: [V299, V295, V297]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V243, V268, V284, V284, V287, V285, V299, V295, V297]

================================

Block 0x55b
[0x55b:0x59b]
---
Predecessors: [0x536]
Successors: [0x59c, 0x5bd]
---
0x55b JUMPDEST
0x55c PUSH1 0x1
0x55e DUP4
0x55f PUSH1 0x20
0x561 SUB
0x562 PUSH2 0x100
0x565 EXP
0x566 SUB
0x567 DUP1
0x568 NOT
0x569 DUP3
0x56a MLOAD
0x56b AND
0x56c DUP2
0x56d DUP5
0x56e MLOAD
0x56f AND
0x570 DUP1
0x571 DUP3
0x572 OR
0x573 DUP6
0x574 MSTORE
0x575 POP
0x576 POP
0x577 POP
0x578 POP
0x579 POP
0x57a POP
0x57b SWAP1
0x57c POP
0x57d ADD
0x57e SWAP2
0x57f POP
0x580 POP
0x581 PUSH1 0x0
0x583 PUSH1 0x40
0x585 MLOAD
0x586 DUP1
0x587 DUP4
0x588 SUB
0x589 DUP2
0x58a PUSH1 0x0
0x58c DUP7
0x58d GAS
0x58e CALL
0x58f SWAP2
0x590 POP
0x591 POP
0x592 RETURNDATASIZE
0x593 DUP1
0x594 PUSH1 0x0
0x596 DUP2
0x597 EQ
0x598 PUSH2 0x5bd
0x59b JUMPI
---
0x55b: JUMPDEST 
0x55c: V301 = 0x1
0x55f: V302 = 0x20
0x561: V303 = SUB 0x20 S2
0x562: V304 = 0x100
0x565: V305 = EXP 0x100 V303
0x566: V306 = SUB V305 0x1
0x568: V307 = NOT V306
0x56a: V308 = M[S0]
0x56b: V309 = AND V308 V307
0x56e: V310 = M[S1]
0x56f: V311 = AND V310 V306
0x572: V312 = OR V309 V311
0x574: M[S1] = V312
0x57d: V313 = ADD V285 V284
0x581: V314 = 0x0
0x583: V315 = 0x40
0x585: V316 = M[0x40]
0x588: V317 = SUB V313 V316
0x58a: V318 = 0x0
0x58d: V319 = GAS
0x58e: V320 = CALL V319 V243 0x0 V316 V317 V316 0x0
0x592: V321 = RETURNDATASIZE
0x594: V322 = 0x0
0x597: V323 = EQ V321 0x0
0x598: V324 = 0x5bd
0x59b: JUMPI 0x5bd V323
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V243, V268, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 9
Stack additions: [V320, V321, V321]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V320, V321, V321]

================================

Block 0x59c
[0x59c:0x5bc]
---
Predecessors: [0x55b]
Successors: [0x5c2]
---
0x59c PUSH1 0x40
0x59e MLOAD
0x59f SWAP2
0x5a0 POP
0x5a1 PUSH1 0x1f
0x5a3 NOT
0x5a4 PUSH1 0x3f
0x5a6 RETURNDATASIZE
0x5a7 ADD
0x5a8 AND
0x5a9 DUP3
0x5aa ADD
0x5ab PUSH1 0x40
0x5ad MSTORE
0x5ae RETURNDATASIZE
0x5af DUP3
0x5b0 MSTORE
0x5b1 RETURNDATASIZE
0x5b2 PUSH1 0x0
0x5b4 PUSH1 0x20
0x5b6 DUP5
0x5b7 ADD
0x5b8 RETURNDATACOPY
0x5b9 PUSH2 0x5c2
0x5bc JUMP
---
0x59c: V325 = 0x40
0x59e: V326 = M[0x40]
0x5a1: V327 = 0x1f
0x5a3: V328 = NOT 0x1f
0x5a4: V329 = 0x3f
0x5a6: V330 = RETURNDATASIZE
0x5a7: V331 = ADD V330 0x3f
0x5a8: V332 = AND V331 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x5aa: V333 = ADD V326 V332
0x5ab: V334 = 0x40
0x5ad: M[0x40] = V333
0x5ae: V335 = RETURNDATASIZE
0x5b0: M[V326] = V335
0x5b1: V336 = RETURNDATASIZE
0x5b2: V337 = 0x0
0x5b4: V338 = 0x20
0x5b7: V339 = ADD V326 0x20
0x5b8: RETURNDATACOPY V339 0x0 V336
0x5b9: V340 = 0x5c2
0x5bc: JUMP 0x5c2
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V320, V321, V321]
Stack pops: 2
Stack additions: [V326, S0]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V320, V326, V321]

================================

Block 0x5bd
[0x5bd:0x5c1]
---
Predecessors: [0x55b]
Successors: [0x5c2]
---
0x5bd JUMPDEST
0x5be PUSH1 0x60
0x5c0 SWAP2
0x5c1 POP
---
0x5bd: JUMPDEST 
0x5be: V341 = 0x60
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V320, V321, V321]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V320, 0x60, V321]

================================

Block 0x5c2
[0x5c2:0x5ce]
---
Predecessors: [0x59c, 0x5bd]
Successors: [0x5cf, 0x5d3]
---
0x5c2 JUMPDEST
0x5c3 POP
0x5c4 SWAP2
0x5c5 POP
0x5c6 SWAP2
0x5c7 POP
0x5c8 DUP2
0x5c9 ISZERO
0x5ca ISZERO
0x5cb PUSH2 0x5d3
0x5ce JUMPI
---
0x5c2: JUMPDEST 
0x5c9: V342 = ISZERO V320
0x5ca: V343 = ISZERO V342
0x5cb: V344 = 0x5d3
0x5ce: JUMPI 0x5d3 V343
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, 0x0, 0x60, V320, S1, V321]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, V320, S1]

================================

Block 0x5cf
[0x5cf:0x5d2]
---
Predecessors: [0x5c2]
Successors: []
---
0x5cf PUSH1 0x0
0x5d1 DUP1
0x5d2 REVERT
---
0x5cf: V345 = 0x0
0x5d2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, V320, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, 0x0, 0x60, 0x0, V320, S0]

================================

Block 0x5d3
[0x5d3:0x603]
---
Predecessors: [0x5c2]
Successors: [0x76]
---
0x5d3 JUMPDEST
0x5d4 DUP2
0x5d5 DUP2
0x5d6 PUSH1 0x0
0x5d8 DUP1
0x5d9 SWAP1
0x5da SLOAD
0x5db SWAP1
0x5dc PUSH2 0x100
0x5df EXP
0x5e0 SWAP1
0x5e1 DIV
0x5e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f7 AND
0x5f8 SWAP5
0x5f9 POP
0x5fa SWAP5
0x5fb POP
0x5fc SWAP5
0x5fd POP
0x5fe POP
0x5ff POP
0x600 SWAP1
0x601 SWAP2
0x602 SWAP3
0x603 JUMP
---
0x5d3: JUMPDEST 
0x5d6: V346 = 0x0
0x5da: V347 = S[0x0]
0x5dc: V348 = 0x100
0x5df: V349 = EXP 0x100 0x0
0x5e1: V350 = DIV V347 0x1
0x5e2: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f7: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x603: JUMP 0x76
---
Entry stack: [V13, 0x76, 0x0, 0x60, 0x0, V320, S0]
Stack pops: 6
Stack additions: [S1, S0, V352]
Exit stack: [V13, V320, S0, V352]

================================

Block 0x604
[0x604:0x65b]
---
Predecessors: [0x145]
Successors: [0x65c, 0x6c9]
---
0x604 JUMPDEST
0x605 CALLER
0x606 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61b AND
0x61c PUSH1 0x2
0x61e PUSH1 0x0
0x620 SWAP1
0x621 SLOAD
0x622 SWAP1
0x623 PUSH2 0x100
0x626 EXP
0x627 SWAP1
0x628 DIV
0x629 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63e AND
0x63f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x654 AND
0x655 EQ
0x656 ISZERO
0x657 ISZERO
0x658 PUSH2 0x6c9
0x65b JUMPI
---
0x604: JUMPDEST 
0x605: V353 = CALLER
0x606: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x61b: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x61c: V356 = 0x2
0x61e: V357 = 0x0
0x621: V358 = S[0x2]
0x623: V359 = 0x100
0x626: V360 = EXP 0x100 0x0
0x628: V361 = DIV V358 0x1
0x629: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x63e: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x63f: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x654: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x655: V366 = EQ V365 V355
0x656: V367 = ISZERO V366
0x657: V368 = ISZERO V367
0x658: V369 = 0x6c9
0x65b: JUMPI 0x6c9 V368
---
Entry stack: [V13, 0x171, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x171, V94]

================================

Block 0x65c
[0x65c:0x6c8]
---
Predecessors: [0x604]
Successors: []
---
0x65c PUSH1 0x40
0x65e MLOAD
0x65f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x680 DUP2
0x681 MSTORE
0x682 PUSH1 0x4
0x684 ADD
0x685 DUP1
0x686 DUP1
0x687 PUSH1 0x20
0x689 ADD
0x68a DUP3
0x68b DUP2
0x68c SUB
0x68d DUP3
0x68e MSTORE
0x68f PUSH1 0x10
0x691 DUP2
0x692 MSTORE
0x693 PUSH1 0x20
0x695 ADD
0x696 DUP1
0x697 PUSH32 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x6b8 DUP2
0x6b9 MSTORE
0x6ba POP
0x6bb PUSH1 0x20
0x6bd ADD
0x6be SWAP2
0x6bf POP
0x6c0 POP
0x6c1 PUSH1 0x40
0x6c3 MLOAD
0x6c4 DUP1
0x6c5 SWAP2
0x6c6 SUB
0x6c7 SWAP1
0x6c8 REVERT
---
0x65c: V370 = 0x40
0x65e: V371 = M[0x40]
0x65f: V372 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x681: M[V371] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x682: V373 = 0x4
0x684: V374 = ADD 0x4 V371
0x687: V375 = 0x20
0x689: V376 = ADD 0x20 V374
0x68c: V377 = SUB V376 V374
0x68e: M[V374] = V377
0x68f: V378 = 0x10
0x692: M[V376] = 0x10
0x693: V379 = 0x20
0x695: V380 = ADD 0x20 V376
0x697: V381 = 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x6b9: M[V380] = 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x6bb: V382 = 0x20
0x6bd: V383 = ADD 0x20 V380
0x6c1: V384 = 0x40
0x6c3: V385 = M[0x40]
0x6c6: V386 = SUB V383 V385
0x6c8: REVERT V385 V386
---
Entry stack: [V13, 0x171, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x171, V94]

================================

Block 0x6c9
[0x6c9:0x70b]
---
Predecessors: [0x604]
Successors: [0x171]
---
0x6c9 JUMPDEST
0x6ca DUP1
0x6cb PUSH1 0x0
0x6cd DUP1
0x6ce PUSH2 0x100
0x6d1 EXP
0x6d2 DUP2
0x6d3 SLOAD
0x6d4 DUP2
0x6d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ea MUL
0x6eb NOT
0x6ec AND
0x6ed SWAP1
0x6ee DUP4
0x6ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x704 AND
0x705 MUL
0x706 OR
0x707 SWAP1
0x708 SSTORE
0x709 POP
0x70a POP
0x70b JUMP
---
0x6c9: JUMPDEST 
0x6cb: V387 = 0x0
0x6ce: V388 = 0x100
0x6d1: V389 = EXP 0x100 0x0
0x6d3: V390 = S[0x0]
0x6d5: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ea: V392 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6eb: V393 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6ec: V394 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V390
0x6ef: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x704: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x705: V397 = MUL V396 0x1
0x706: V398 = OR V397 V394
0x708: S[0x0] = V398
0x70b: JUMP 0x171
---
Entry stack: [V13, 0x171, V94]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x70c
[0x70c:0x789]
---
Predecessors: [0x173]
Successors: [0x17b]
---
0x70c JUMPDEST
0x70d PUSH1 0x0
0x70f DUP1
0x710 PUSH1 0x0
0x712 PUSH1 0x2
0x714 PUSH1 0x0
0x716 SWAP1
0x717 SLOAD
0x718 SWAP1
0x719 PUSH2 0x100
0x71c EXP
0x71d SWAP1
0x71e DIV
0x71f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x734 AND
0x735 PUSH1 0x0
0x737 DUP1
0x738 SWAP1
0x739 SLOAD
0x73a SWAP1
0x73b PUSH2 0x100
0x73e EXP
0x73f SWAP1
0x740 DIV
0x741 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x756 AND
0x757 PUSH1 0x1
0x759 PUSH1 0x0
0x75b SWAP1
0x75c SLOAD
0x75d SWAP1
0x75e PUSH2 0x100
0x761 EXP
0x762 SWAP1
0x763 DIV
0x764 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x779 AND
0x77a DUP3
0x77b SWAP3
0x77c POP
0x77d DUP1
0x77e SWAP1
0x77f POP
0x780 SWAP3
0x781 POP
0x782 SWAP3
0x783 POP
0x784 SWAP3
0x785 POP
0x786 SWAP1
0x787 SWAP2
0x788 SWAP3
0x789 JUMP
---
0x70c: JUMPDEST 
0x70d: V399 = 0x0
0x710: V400 = 0x0
0x712: V401 = 0x2
0x714: V402 = 0x0
0x717: V403 = S[0x2]
0x719: V404 = 0x100
0x71c: V405 = EXP 0x100 0x0
0x71e: V406 = DIV V403 0x1
0x71f: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x734: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x735: V409 = 0x0
0x739: V410 = S[0x0]
0x73b: V411 = 0x100
0x73e: V412 = EXP 0x100 0x0
0x740: V413 = DIV V410 0x1
0x741: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x756: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x757: V416 = 0x1
0x759: V417 = 0x0
0x75c: V418 = S[0x1]
0x75e: V419 = 0x100
0x761: V420 = EXP 0x100 0x0
0x763: V421 = DIV V418 0x1
0x764: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x779: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x789: JUMP 0x17b
---
Entry stack: [V13, 0x17b]
Stack pops: 1
Stack additions: [V408, V415, V423]
Exit stack: [V13, V408, V415, V423]

================================

Block 0x78a
[0x78a:0x7e7]
---
Predecessors: [0x239]
Successors: [0x7e8, 0x855]
---
0x78a JUMPDEST
0x78b PUSH1 0x0
0x78d PUSH1 0x60
0x78f PUSH1 0x0
0x791 CALLER
0x792 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a7 AND
0x7a8 PUSH1 0x2
0x7aa PUSH1 0x0
0x7ac SWAP1
0x7ad SLOAD
0x7ae SWAP1
0x7af PUSH2 0x100
0x7b2 EXP
0x7b3 SWAP1
0x7b4 DIV
0x7b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ca AND
0x7cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e0 AND
0x7e1 EQ
0x7e2 ISZERO
0x7e3 ISZERO
0x7e4 PUSH2 0x855
0x7e7 JUMPI
---
0x78a: JUMPDEST 
0x78b: V424 = 0x0
0x78d: V425 = 0x60
0x78f: V426 = 0x0
0x791: V427 = CALLER
0x792: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a7: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x7a8: V430 = 0x2
0x7aa: V431 = 0x0
0x7ad: V432 = S[0x2]
0x7af: V433 = 0x100
0x7b2: V434 = EXP 0x100 0x0
0x7b4: V435 = DIV V432 0x1
0x7b5: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ca: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x7cb: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e0: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x7e1: V440 = EQ V439 V429
0x7e2: V441 = ISZERO V440
0x7e3: V442 = ISZERO V441
0x7e4: V443 = 0x855
0x7e7: JUMPI 0x855 V442
---
Entry stack: [V13, 0x26f, V135, V138]
Stack pops: 0
Stack additions: [0x0, 0x60, 0x0]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0]

================================

Block 0x7e8
[0x7e8:0x854]
---
Predecessors: [0x78a]
Successors: []
---
0x7e8 PUSH1 0x40
0x7ea MLOAD
0x7eb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x80c DUP2
0x80d MSTORE
0x80e PUSH1 0x4
0x810 ADD
0x811 DUP1
0x812 DUP1
0x813 PUSH1 0x20
0x815 ADD
0x816 DUP3
0x817 DUP2
0x818 SUB
0x819 DUP3
0x81a MSTORE
0x81b PUSH1 0x10
0x81d DUP2
0x81e MSTORE
0x81f PUSH1 0x20
0x821 ADD
0x822 DUP1
0x823 PUSH32 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x844 DUP2
0x845 MSTORE
0x846 POP
0x847 PUSH1 0x20
0x849 ADD
0x84a SWAP2
0x84b POP
0x84c POP
0x84d PUSH1 0x40
0x84f MLOAD
0x850 DUP1
0x851 SWAP2
0x852 SUB
0x853 SWAP1
0x854 REVERT
---
0x7e8: V444 = 0x40
0x7ea: V445 = M[0x40]
0x7eb: V446 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x80d: M[V445] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x80e: V447 = 0x4
0x810: V448 = ADD 0x4 V445
0x813: V449 = 0x20
0x815: V450 = ADD 0x20 V448
0x818: V451 = SUB V450 V448
0x81a: M[V448] = V451
0x81b: V452 = 0x10
0x81e: M[V450] = 0x10
0x81f: V453 = 0x20
0x821: V454 = ADD 0x20 V450
0x823: V455 = 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x845: M[V454] = 0x594f5552204953204e4f54205553455200000000000000000000000000000000
0x847: V456 = 0x20
0x849: V457 = ADD 0x20 V454
0x84d: V458 = 0x40
0x84f: V459 = M[0x40]
0x852: V460 = SUB V457 V459
0x854: REVERT V459 V460
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0]

================================

Block 0x855
[0x855:0x9b9]
---
Predecessors: [0x78a]
Successors: [0x9ba]
---
0x855 JUMPDEST
0x856 PUSH1 0x0
0x858 PUSH1 0x60
0x85a PUSH1 0x1
0x85c PUSH1 0x0
0x85e SWAP1
0x85f SLOAD
0x860 SWAP1
0x861 PUSH2 0x100
0x864 EXP
0x865 SWAP1
0x866 DIV
0x867 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87c AND
0x87d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x892 AND
0x893 PUSH1 0x2
0x895 PUSH1 0x0
0x897 SWAP1
0x898 SLOAD
0x899 SWAP1
0x89a PUSH2 0x100
0x89d EXP
0x89e SWAP1
0x89f DIV
0x8a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b5 AND
0x8b6 DUP9
0x8b7 DUP9
0x8b8 PUSH1 0x40
0x8ba MLOAD
0x8bb PUSH1 0x24
0x8bd ADD
0x8be DUP1
0x8bf DUP5
0x8c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d5 AND
0x8d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8eb AND
0x8ec DUP2
0x8ed MSTORE
0x8ee PUSH1 0x20
0x8f0 ADD
0x8f1 DUP4
0x8f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x907 AND
0x908 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91d AND
0x91e DUP2
0x91f MSTORE
0x920 PUSH1 0x20
0x922 ADD
0x923 DUP3
0x924 DUP2
0x925 MSTORE
0x926 PUSH1 0x20
0x928 ADD
0x929 SWAP4
0x92a POP
0x92b POP
0x92c POP
0x92d POP
0x92e PUSH1 0x40
0x930 MLOAD
0x931 PUSH1 0x20
0x933 DUP2
0x934 DUP4
0x935 SUB
0x936 SUB
0x937 DUP2
0x938 MSTORE
0x939 SWAP1
0x93a PUSH1 0x40
0x93c MSTORE
0x93d PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x95e PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x97b NOT
0x97c AND
0x97d PUSH1 0x20
0x97f DUP3
0x980 ADD
0x981 DUP1
0x982 MLOAD
0x983 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x9a0 DUP4
0x9a1 DUP2
0x9a2 DUP4
0x9a3 AND
0x9a4 OR
0x9a5 DUP4
0x9a6 MSTORE
0x9a7 POP
0x9a8 POP
0x9a9 POP
0x9aa POP
0x9ab PUSH1 0x40
0x9ad MLOAD
0x9ae DUP1
0x9af DUP3
0x9b0 DUP1
0x9b1 MLOAD
0x9b2 SWAP1
0x9b3 PUSH1 0x20
0x9b5 ADD
0x9b6 SWAP1
0x9b7 DUP1
0x9b8 DUP4
0x9b9 DUP4
---
0x855: JUMPDEST 
0x856: V461 = 0x0
0x858: V462 = 0x60
0x85a: V463 = 0x1
0x85c: V464 = 0x0
0x85f: V465 = S[0x1]
0x861: V466 = 0x100
0x864: V467 = EXP 0x100 0x0
0x866: V468 = DIV V465 0x1
0x867: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x87c: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x87d: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x892: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x893: V473 = 0x2
0x895: V474 = 0x0
0x898: V475 = S[0x2]
0x89a: V476 = 0x100
0x89d: V477 = EXP 0x100 0x0
0x89f: V478 = DIV V475 0x1
0x8a0: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b5: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x8b8: V481 = 0x40
0x8ba: V482 = M[0x40]
0x8bb: V483 = 0x24
0x8bd: V484 = ADD 0x24 V482
0x8c0: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d5: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x8d6: V487 = 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x8ed: M[V484] = V488
0x8ee: V489 = 0x20
0x8f0: V490 = ADD 0x20 V484
0x8f2: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x907: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x908: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x91d: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x91f: M[V490] = V494
0x920: V495 = 0x20
0x922: V496 = ADD 0x20 V490
0x925: M[V496] = V138
0x926: V497 = 0x20
0x928: V498 = ADD 0x20 V496
0x92e: V499 = 0x40
0x930: V500 = M[0x40]
0x931: V501 = 0x20
0x935: V502 = SUB V498 V500
0x936: V503 = SUB V502 0x20
0x938: M[V500] = V503
0x93a: V504 = 0x40
0x93c: M[0x40] = V498
0x93d: V505 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x95e: V506 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x97b: V507 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x97c: V508 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x97d: V509 = 0x20
0x980: V510 = ADD V500 0x20
0x982: V511 = M[V510]
0x983: V512 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x9a3: V513 = AND V511 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x9a4: V514 = OR V513 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x9a6: M[V510] = V514
0x9ab: V515 = 0x40
0x9ad: V516 = M[0x40]
0x9b1: V517 = M[V500]
0x9b3: V518 = 0x20
0x9b5: V519 = ADD 0x20 V500
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, 0x60, V472, V500, V516, V516, V519, V517, V517, V516, V519]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V472, V500, V516, V516, V519, V517, V517, V516, V519]

================================

Block 0x9ba
[0x9ba:0x9c4]
---
Predecessors: [0x855, 0x9c5]
Successors: [0x9c5, 0x9df]
---
0x9ba JUMPDEST
0x9bb PUSH1 0x20
0x9bd DUP4
0x9be LT
0x9bf ISZERO
0x9c0 ISZERO
0x9c1 PUSH2 0x9df
0x9c4 JUMPI
---
0x9ba: JUMPDEST 
0x9bb: V520 = 0x20
0x9be: V521 = LT S2 0x20
0x9bf: V522 = ISZERO V521
0x9c0: V523 = ISZERO V522
0x9c1: V524 = 0x9df
0x9c4: JUMPI 0x9df V523
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V472, V500, V516, V516, V519, V517, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V472, V500, V516, V516, V519, V517, S2, S1, S0]

================================

Block 0x9c5
[0x9c5:0x9de]
---
Predecessors: [0x9ba]
Successors: [0x9ba]
---
0x9c5 DUP1
0x9c6 MLOAD
0x9c7 DUP3
0x9c8 MSTORE
0x9c9 PUSH1 0x20
0x9cb DUP3
0x9cc ADD
0x9cd SWAP2
0x9ce POP
0x9cf PUSH1 0x20
0x9d1 DUP2
0x9d2 ADD
0x9d3 SWAP1
0x9d4 POP
0x9d5 PUSH1 0x20
0x9d7 DUP4
0x9d8 SUB
0x9d9 SWAP3
0x9da POP
0x9db PUSH2 0x9ba
0x9de JUMP
---
0x9c6: V525 = M[S0]
0x9c8: M[S1] = V525
0x9c9: V526 = 0x20
0x9cc: V527 = ADD S1 0x20
0x9cf: V528 = 0x20
0x9d2: V529 = ADD S0 0x20
0x9d5: V530 = 0x20
0x9d8: V531 = SUB S2 0x20
0x9db: V532 = 0x9ba
0x9de: JUMP 0x9ba
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V472, V500, V516, V516, V519, V517, S2, S1, S0]
Stack pops: 3
Stack additions: [V531, V527, V529]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V472, V500, V516, V516, V519, V517, V531, V527, V529]

================================

Block 0x9df
[0x9df:0xa1f]
---
Predecessors: [0x9ba]
Successors: [0xa20, 0xa41]
---
0x9df JUMPDEST
0x9e0 PUSH1 0x1
0x9e2 DUP4
0x9e3 PUSH1 0x20
0x9e5 SUB
0x9e6 PUSH2 0x100
0x9e9 EXP
0x9ea SUB
0x9eb DUP1
0x9ec NOT
0x9ed DUP3
0x9ee MLOAD
0x9ef AND
0x9f0 DUP2
0x9f1 DUP5
0x9f2 MLOAD
0x9f3 AND
0x9f4 DUP1
0x9f5 DUP3
0x9f6 OR
0x9f7 DUP6
0x9f8 MSTORE
0x9f9 POP
0x9fa POP
0x9fb POP
0x9fc POP
0x9fd POP
0x9fe POP
0x9ff SWAP1
0xa00 POP
0xa01 ADD
0xa02 SWAP2
0xa03 POP
0xa04 POP
0xa05 PUSH1 0x0
0xa07 PUSH1 0x40
0xa09 MLOAD
0xa0a DUP1
0xa0b DUP4
0xa0c SUB
0xa0d DUP2
0xa0e PUSH1 0x0
0xa10 DUP7
0xa11 GAS
0xa12 CALL
0xa13 SWAP2
0xa14 POP
0xa15 POP
0xa16 RETURNDATASIZE
0xa17 DUP1
0xa18 PUSH1 0x0
0xa1a DUP2
0xa1b EQ
0xa1c PUSH2 0xa41
0xa1f JUMPI
---
0x9df: JUMPDEST 
0x9e0: V533 = 0x1
0x9e3: V534 = 0x20
0x9e5: V535 = SUB 0x20 S2
0x9e6: V536 = 0x100
0x9e9: V537 = EXP 0x100 V535
0x9ea: V538 = SUB V537 0x1
0x9ec: V539 = NOT V538
0x9ee: V540 = M[S0]
0x9ef: V541 = AND V540 V539
0x9f2: V542 = M[S1]
0x9f3: V543 = AND V542 V538
0x9f6: V544 = OR V541 V543
0x9f8: M[S1] = V544
0xa01: V545 = ADD V517 V516
0xa05: V546 = 0x0
0xa07: V547 = 0x40
0xa09: V548 = M[0x40]
0xa0c: V549 = SUB V545 V548
0xa0e: V550 = 0x0
0xa11: V551 = GAS
0xa12: V552 = CALL V551 V472 0x0 V548 V549 V548 0x0
0xa16: V553 = RETURNDATASIZE
0xa18: V554 = 0x0
0xa1b: V555 = EQ V553 0x0
0xa1c: V556 = 0xa41
0xa1f: JUMPI 0xa41 V555
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V472, V500, V516, V516, V519, V517, S2, S1, S0]
Stack pops: 9
Stack additions: [V552, V553, V553]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V552, V553, V553]

================================

Block 0xa20
[0xa20:0xa40]
---
Predecessors: [0x9df]
Successors: [0xa46]
---
0xa20 PUSH1 0x40
0xa22 MLOAD
0xa23 SWAP2
0xa24 POP
0xa25 PUSH1 0x1f
0xa27 NOT
0xa28 PUSH1 0x3f
0xa2a RETURNDATASIZE
0xa2b ADD
0xa2c AND
0xa2d DUP3
0xa2e ADD
0xa2f PUSH1 0x40
0xa31 MSTORE
0xa32 RETURNDATASIZE
0xa33 DUP3
0xa34 MSTORE
0xa35 RETURNDATASIZE
0xa36 PUSH1 0x0
0xa38 PUSH1 0x20
0xa3a DUP5
0xa3b ADD
0xa3c RETURNDATACOPY
0xa3d PUSH2 0xa46
0xa40 JUMP
---
0xa20: V557 = 0x40
0xa22: V558 = M[0x40]
0xa25: V559 = 0x1f
0xa27: V560 = NOT 0x1f
0xa28: V561 = 0x3f
0xa2a: V562 = RETURNDATASIZE
0xa2b: V563 = ADD V562 0x3f
0xa2c: V564 = AND V563 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xa2e: V565 = ADD V558 V564
0xa2f: V566 = 0x40
0xa31: M[0x40] = V565
0xa32: V567 = RETURNDATASIZE
0xa34: M[V558] = V567
0xa35: V568 = RETURNDATASIZE
0xa36: V569 = 0x0
0xa38: V570 = 0x20
0xa3b: V571 = ADD V558 0x20
0xa3c: RETURNDATACOPY V571 0x0 V568
0xa3d: V572 = 0xa46
0xa40: JUMP 0xa46
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V552, V553, V553]
Stack pops: 2
Stack additions: [V558, S0]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V552, V558, V553]

================================

Block 0xa41
[0xa41:0xa45]
---
Predecessors: [0x9df]
Successors: [0xa46]
---
0xa41 JUMPDEST
0xa42 PUSH1 0x60
0xa44 SWAP2
0xa45 POP
---
0xa41: JUMPDEST 
0xa42: V573 = 0x60
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V552, V553, V553]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V552, 0x60, V553]

================================

Block 0xa46
[0xa46:0xa52]
---
Predecessors: [0xa20, 0xa41]
Successors: [0xa53, 0xa57]
---
0xa46 JUMPDEST
0xa47 POP
0xa48 SWAP2
0xa49 POP
0xa4a SWAP2
0xa4b POP
0xa4c DUP2
0xa4d ISZERO
0xa4e ISZERO
0xa4f PUSH2 0xa57
0xa52 JUMPI
---
0xa46: JUMPDEST 
0xa4d: V574 = ISZERO V552
0xa4e: V575 = ISZERO V574
0xa4f: V576 = 0xa57
0xa52: JUMPI 0xa57 V575
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, 0x0, 0x60, V552, S1, V553]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, V552, S1]

================================

Block 0xa53
[0xa53:0xa56]
---
Predecessors: [0xa46]
Successors: []
---
0xa53 PUSH1 0x0
0xa55 DUP1
0xa56 REVERT
---
0xa53: V577 = 0x0
0xa56: REVERT 0x0 0x0
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, V552, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, V552, S0]

================================

Block 0xa57
[0xa57:0xa89]
---
Predecessors: [0xa46]
Successors: [0x26f]
---
0xa57 JUMPDEST
0xa58 DUP2
0xa59 DUP2
0xa5a PUSH1 0x0
0xa5c DUP1
0xa5d SWAP1
0xa5e SLOAD
0xa5f SWAP1
0xa60 PUSH2 0x100
0xa63 EXP
0xa64 SWAP1
0xa65 DIV
0xa66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7b AND
0xa7c SWAP5
0xa7d POP
0xa7e SWAP5
0xa7f POP
0xa80 SWAP5
0xa81 POP
0xa82 POP
0xa83 POP
0xa84 SWAP3
0xa85 POP
0xa86 SWAP3
0xa87 POP
0xa88 SWAP3
0xa89 JUMP
---
0xa57: JUMPDEST 
0xa5a: V578 = 0x0
0xa5e: V579 = S[0x0]
0xa60: V580 = 0x100
0xa63: V581 = EXP 0x100 0x0
0xa65: V582 = DIV V579 0x1
0xa66: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7b: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0xa89: JUMP 0x26f
---
Entry stack: [V13, 0x26f, V135, V138, 0x0, 0x60, 0x0, V552, S0]
Stack pops: 8
Stack additions: [S1, S0, V584]
Exit stack: [V13, V552, S0, V584]

================================

Block 0xa8a
[0xa8a:0xab5]
---
Predecessors: []
Successors: []
---
0xa8a INVALID
0xa8b LOG1
0xa8c PUSH6 0x627a7a723058
0xa93 SHA3
0xa94 MISSING 0xdb
0xa95 PUSH29 0xf204e8bd2e4b26dde192a52615283745495eb5cbb040740be5d23747d1
0xab3 DUP5
0xab4 STOP
0xab5 MISSING 0x29
---
0xa8a: INVALID 
0xa8b: LOG S0 S1 S2
0xa8c: V585 = 0x627a7a723058
0xa93: V586 = SHA3 0x627a7a723058 S3
0xa94: MISSING 0xdb
0xa95: V587 = 0xf204e8bd2e4b26dde192a52615283745495eb5cbb040740be5d23747d1
0xab4: STOP 
0xab5: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V586, S3, 0xf204e8bd2e4b26dde192a52615283745495eb5cbb040740be5d23747d1, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x948cb719
Entry block: 0x6e
Exit block: 0x11f
Body: 0x6e, 0x76, 0xd7, 0xe0, 0xf2, 0x106, 0x11f, 0x328, 0x386, 0x3f3, 0x536, 0x541, 0x55b, 0x59c, 0x5bd, 0x5c2, 0x5cf, 0x5d3

Function 1:
Public function signature: 0x97107d6d
Entry block: 0x12f
Exit block: 0x171
Body: 0x12f, 0x141, 0x145, 0x171, 0x604, 0x65c, 0x6c9

Function 2:
Public function signature: 0xc19d93fb
Entry block: 0x173
Exit block: 0x17b
Body: 0x173, 0x17b, 0x70c

Function 3:
Public function signature: 0xd074e535
Entry block: 0x223
Exit block: 0x318
Body: 0x223, 0x235, 0x239, 0x26f, 0x2d0, 0x2d9, 0x2eb, 0x2ff, 0x318, 0x78a, 0x7e8, 0x855, 0x9ba, 0x9c5, 0x9df, 0xa20, 0xa41, 0xa46, 0xa53, 0xa57

Function 4:
Public fallback function
Entry block: 0x69
Exit block: 0x69
Body: 0x69

