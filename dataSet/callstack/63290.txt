Block 0x0
[0x0:0x4c]
---
Predecessors: []
Successors: [0x4d, 0x4e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 PUSH1 0x0
0xa DUP1
0xb SWAP1
0xc SLOAD
0xd SWAP1
0xe PUSH2 0x100
0x11 EXP
0x12 SWAP1
0x13 DIV
0x14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29 AND
0x2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f AND
0x40 PUSH2 0x8fc
0x43 PUSH1 0x5
0x45 CALLVALUE
0x46 DUP2
0x47 ISZERO
0x48 ISZERO
0x49 PUSH2 0x4e
0x4c JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x0
0x8: V3 = 0x0
0xc: V4 = S[0x0]
0xe: V5 = 0x100
0x11: V6 = EXP 0x100 0x0
0x13: V7 = DIV V4 0x1
0x14: V8 = 0xffffffffffffffffffffffffffffffffffffffff
0x29: V9 = AND 0xffffffffffffffffffffffffffffffffffffffff V7
0x2a: V10 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f: V11 = AND 0xffffffffffffffffffffffffffffffffffffffff V9
0x40: V12 = 0x8fc
0x43: V13 = 0x5
0x45: V14 = CALLVALUE
0x47: V15 = ISZERO 0x5
0x48: V16 = ISZERO 0x0
0x49: V17 = 0x4e
0x4c: JUMPI 0x4e 0x1
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, V11, 0x8fc, 0x5, V14]
Exit stack: [0x0, 0x0, V11, 0x8fc, 0x5, V14]

================================

Block 0x4d
[0x4d:0x4d]
---
Predecessors: [0x0]
Successors: []
---
0x4d INVALID
---
0x4d: INVALID 
---
Entry stack: [0x0, 0x0, V11, 0x8fc, 0x5, V14]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, 0x0, V11, 0x8fc, 0x5, V14]

================================

Block 0x4e
[0x4e:0xb3]
---
Predecessors: [0x0]
Successors: [0xb4, 0x18e]
---
0x4e JUMPDEST
0x4f DIV
0x50 SWAP1
0x51 DUP2
0x52 ISZERO
0x53 MUL
0x54 SWAP1
0x55 PUSH1 0x40
0x57 MLOAD
0x58 PUSH1 0x0
0x5a PUSH1 0x40
0x5c MLOAD
0x5d DUP1
0x5e DUP4
0x5f SUB
0x60 DUP2
0x61 DUP6
0x62 DUP9
0x63 DUP9
0x64 CALL
0x65 SWAP4
0x66 POP
0x67 POP
0x68 POP
0x69 POP
0x6a POP
0x6b PUSH1 0x0
0x6d PUSH1 0x1
0x6f PUSH1 0x0
0x71 CALLER
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d AND
0x9e DUP2
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP1
0xa4 DUP2
0xa5 MSTORE
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 PUSH1 0x0
0xab SHA3
0xac SLOAD
0xad EQ
0xae ISZERO
0xaf ISZERO
0xb0 PUSH2 0x18e
0xb3 JUMPI
---
0x4e: JUMPDEST 
0x4f: V18 = DIV V14 0x5
0x52: V19 = ISZERO V18
0x53: V20 = MUL V19 0x8fc
0x55: V21 = 0x40
0x57: V22 = M[0x40]
0x58: V23 = 0x0
0x5a: V24 = 0x40
0x5c: V25 = M[0x40]
0x5f: V26 = SUB V22 V25
0x64: V27 = CALL V20 V11 V18 V25 V26 V25 0x0
0x6b: V28 = 0x0
0x6d: V29 = 0x1
0x6f: V30 = 0x0
0x71: V31 = CALLER
0x72: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x88: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x9f: M[0x0] = V35
0xa0: V36 = 0x20
0xa2: V37 = ADD 0x20 0x0
0xa5: M[0x20] = 0x1
0xa6: V38 = 0x20
0xa8: V39 = ADD 0x20 0x20
0xa9: V40 = 0x0
0xab: V41 = SHA3 0x0 0x40
0xac: V42 = S[V41]
0xad: V43 = EQ V42 0x0
0xae: V44 = ISZERO V43
0xaf: V45 = ISZERO V44
0xb0: V46 = 0x18e
0xb3: JUMPI 0x18e V45
---
Entry stack: [0x0, 0x0, V11, 0x8fc, 0x5, V14]
Stack pops: 4
Stack additions: []
Exit stack: [0x0, 0x0]

================================

Block 0xb4
[0xb4:0x147]
---
Predecessors: [0x4e]
Successors: [0x148, 0x149]
---
0xb4 CALLER
0xb5 SWAP2
0xb6 POP
0xb7 PUSH2 0x170c
0xba PUSH1 0x2
0xbc PUSH1 0x0
0xbe CALLER
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 AND
0xd5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea AND
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP1
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 PUSH1 0x0
0xf8 SHA3
0xf9 SLOAD
0xfa NUMBER
0xfb SUB
0xfc PUSH1 0x64
0xfe PUSH1 0xa
0x100 PUSH1 0x1
0x102 PUSH1 0x0
0x104 CALLER
0x105 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a AND
0x11b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130 AND
0x131 DUP2
0x132 MSTORE
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c PUSH1 0x0
0x13e SHA3
0x13f SLOAD
0x140 MUL
0x141 DUP2
0x142 ISZERO
0x143 ISZERO
0x144 PUSH2 0x149
0x147 JUMPI
---
0xb4: V47 = CALLER
0xb7: V48 = 0x170c
0xba: V49 = 0x2
0xbc: V50 = 0x0
0xbe: V51 = CALLER
0xbf: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xd5: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xea: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xec: M[0x0] = V55
0xed: V56 = 0x20
0xef: V57 = ADD 0x20 0x0
0xf2: M[0x20] = 0x2
0xf3: V58 = 0x20
0xf5: V59 = ADD 0x20 0x20
0xf6: V60 = 0x0
0xf8: V61 = SHA3 0x0 0x40
0xf9: V62 = S[V61]
0xfa: V63 = NUMBER
0xfb: V64 = SUB V63 V62
0xfc: V65 = 0x64
0xfe: V66 = 0xa
0x100: V67 = 0x1
0x102: V68 = 0x0
0x104: V69 = CALLER
0x105: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x11b: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x130: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x132: M[0x0] = V73
0x133: V74 = 0x20
0x135: V75 = ADD 0x20 0x0
0x138: M[0x20] = 0x1
0x139: V76 = 0x20
0x13b: V77 = ADD 0x20 0x20
0x13c: V78 = 0x0
0x13e: V79 = SHA3 0x0 0x40
0x13f: V80 = S[V79]
0x140: V81 = MUL V80 0xa
0x142: V82 = ISZERO 0x64
0x143: V83 = ISZERO 0x0
0x144: V84 = 0x149
0x147: JUMPI 0x149 0x1
---
Entry stack: [0x0, 0x0]
Stack pops: 2
Stack additions: [V47, S0, 0x170c, V64, 0x64, V81]
Exit stack: [V47, 0x0, 0x170c, V64, 0x64, V81]

================================

Block 0x148
[0x148:0x148]
---
Predecessors: [0xb4]
Successors: []
---
0x148 INVALID
---
0x148: INVALID 
---
Entry stack: [V47, 0x0, 0x170c, V64, 0x64, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V47, 0x0, 0x170c, V64, 0x64, V81]

================================

Block 0x149
[0x149:0x152]
---
Predecessors: [0xb4]
Successors: [0x153, 0x154]
---
0x149 JUMPDEST
0x14a DIV
0x14b MUL
0x14c DUP2
0x14d ISZERO
0x14e ISZERO
0x14f PUSH2 0x154
0x152 JUMPI
---
0x149: JUMPDEST 
0x14a: V85 = DIV V81 0x64
0x14b: V86 = MUL V85 V64
0x14d: V87 = ISZERO 0x170c
0x14e: V88 = ISZERO 0x0
0x14f: V89 = 0x154
0x152: JUMPI 0x154 0x1
---
Entry stack: [V47, 0x0, 0x170c, V64, 0x64, V81]
Stack pops: 4
Stack additions: [S3, V86]
Exit stack: [V47, 0x0, 0x170c, V86]

================================

Block 0x153
[0x153:0x153]
---
Predecessors: [0x149]
Successors: []
---
0x153 INVALID
---
0x153: INVALID 
---
Entry stack: [V47, 0x0, 0x170c, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V47, 0x0, 0x170c, V86]

================================

Block 0x154
[0x154:0x18d]
---
Predecessors: [0x149]
Successors: [0x18e]
---
0x154 JUMPDEST
0x155 DIV
0x156 SWAP1
0x157 POP
0x158 DUP2
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f PUSH2 0x8fc
0x172 DUP3
0x173 SWAP1
0x174 DUP2
0x175 ISZERO
0x176 MUL
0x177 SWAP1
0x178 PUSH1 0x40
0x17a MLOAD
0x17b PUSH1 0x0
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 DUP4
0x182 SUB
0x183 DUP2
0x184 DUP6
0x185 DUP9
0x186 DUP9
0x187 CALL
0x188 SWAP4
0x189 POP
0x18a POP
0x18b POP
0x18c POP
0x18d POP
---
0x154: JUMPDEST 
0x155: V90 = DIV V86 0x170c
0x159: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x16f: V93 = 0x8fc
0x175: V94 = ISZERO V90
0x176: V95 = MUL V94 0x8fc
0x178: V96 = 0x40
0x17a: V97 = M[0x40]
0x17b: V98 = 0x0
0x17d: V99 = 0x40
0x17f: V100 = M[0x40]
0x182: V101 = SUB V97 V100
0x187: V102 = CALL V95 V92 V90 V100 V101 V100 0x0
---
Entry stack: [V47, 0x0, 0x170c, V86]
Stack pops: 4
Stack additions: [S3, V90]
Exit stack: [V47, V90]

================================

Block 0x18e
[0x18e:0x222]
---
Predecessors: [0x4e, 0x154]
Successors: []
---
0x18e JUMPDEST
0x18f NUMBER
0x190 PUSH1 0x2
0x192 PUSH1 0x0
0x194 CALLER
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 DUP2
0x1c2 MSTORE
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc PUSH1 0x0
0x1ce SHA3
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SSTORE
0x1d2 POP
0x1d3 CALLVALUE
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0x0
0x1d8 CALLER
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 DUP2
0x206 MSTORE
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x20
0x20f ADD
0x210 PUSH1 0x0
0x212 SHA3
0x213 PUSH1 0x0
0x215 DUP3
0x216 DUP3
0x217 SLOAD
0x218 ADD
0x219 SWAP3
0x21a POP
0x21b POP
0x21c DUP2
0x21d SWAP1
0x21e SSTORE
0x21f POP
0x220 POP
0x221 POP
0x222 STOP
---
0x18e: JUMPDEST 
0x18f: V103 = NUMBER
0x190: V104 = 0x2
0x192: V105 = 0x0
0x194: V106 = CALLER
0x195: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1ab: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1c2: M[0x0] = V110
0x1c3: V111 = 0x20
0x1c5: V112 = ADD 0x20 0x0
0x1c8: M[0x20] = 0x2
0x1c9: V113 = 0x20
0x1cb: V114 = ADD 0x20 0x20
0x1cc: V115 = 0x0
0x1ce: V116 = SHA3 0x0 0x40
0x1d1: S[V116] = V103
0x1d3: V117 = CALLVALUE
0x1d4: V118 = 0x1
0x1d6: V119 = 0x0
0x1d8: V120 = CALLER
0x1d9: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1ef: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x206: M[0x0] = V124
0x207: V125 = 0x20
0x209: V126 = ADD 0x20 0x0
0x20c: M[0x20] = 0x1
0x20d: V127 = 0x20
0x20f: V128 = ADD 0x20 0x20
0x210: V129 = 0x0
0x212: V130 = SHA3 0x0 0x40
0x213: V131 = 0x0
0x217: V132 = S[V130]
0x218: V133 = ADD V132 V117
0x21e: S[V130] = V133
0x222: STOP 
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x223
[0x223:0x24e]
---
Predecessors: []
Successors: []
---
0x223 STOP
0x224 LOG1
0x225 PUSH6 0x627a7a723058
0x22c SHA3
0x22d PUSH1 0x15
0x22f OR
0x230 PUSH12 0xce0aacc4546a0182993ee13e
0x23d LOG2
0x23e PUSH1 0x44
0x240 MISSING 0x4a
0x241 LT
0x242 EXTCODECOPY
0x243 DUP15
0x244 SWAP16
0x245 BALANCE
0x246 MISSING 0xc8
0x247 DELEGATECALL
0x248 DUP8
0x249 MISSING 0xb2
0x24a PUSH4 0xf17e0029
---
0x223: STOP 
0x224: LOG S0 S1 S2
0x225: V134 = 0x627a7a723058
0x22c: V135 = SHA3 0x627a7a723058 S3
0x22d: V136 = 0x15
0x22f: V137 = OR 0x15 V135
0x230: V138 = 0xce0aacc4546a0182993ee13e
0x23d: LOG 0xce0aacc4546a0182993ee13e V137 S4 S5
0x23e: V139 = 0x44
0x240: MISSING 0x4a
0x241: V140 = LT S0 S1
0x242: EXTCODECOPY V140 S2 S3 S4
0x245: V141 = BALANCE S20
0x246: MISSING 0xc8
0x247: V142 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x249: MISSING 0xb2
0x24a: V143 = 0xf17e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x44, V141, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S19, S12, V142, S6, S7, S8, S9, S10, S11, S12, 0xf17e0029]
Exit stack: []

================================


