Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x5bb47808
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x5bb47808
0x3c: V13 = EQ 0x5bb47808 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x9f]
---
0x41 DUP1
0x42 PUSH4 0x61461954
0x47 EQ
0x48 PUSH2 0x9f
0x4b JUMPI
---
0x42: V15 = 0x61461954
0x47: V16 = EQ 0x61461954 V11
0x48: V17 = 0x9f
0x4b: JUMPI 0x9f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xa9]
---
0x4c DUP1
0x4d PUSH4 0xc45a0155
0x52 EQ
0x53 PUSH2 0xa9
0x56 JUMPI
---
0x4d: V18 = 0xc45a0155
0x52: V19 = EQ 0xc45a0155 V11
0x53: V20 = 0xa9
0x56: JUMPI 0xa9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x9c]
---
Predecessors: [0x5c]
Successors: [0x100]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x9d
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATASIZE
0x71 SUB
0x72 DUP2
0x73 ADD
0x74 SWAP1
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 SWAP3
0x94 SWAP2
0x95 SWAP1
0x96 POP
0x97 POP
0x98 POP
0x99 PUSH2 0x100
0x9c JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x9d
0x6d: V27 = 0x4
0x70: V28 = CALLDATASIZE
0x71: V29 = SUB V28 0x4
0x73: V30 = ADD 0x4 V29
0x77: V31 = CALLDATALOAD 0x4
0x78: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x8f: V34 = 0x20
0x91: V35 = ADD 0x20 0x4
0x99: V36 = 0x100
0x9c: JUMP 0x100
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x9d, V33]
Exit stack: [V11, 0x9d, V33]

================================

Block 0x9d
[0x9d:0x9e]
---
Predecessors: [0x100]
Successors: []
---
0x9d JUMPDEST
0x9e STOP
---
0x9d: JUMPDEST 
0x9e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa6]
---
Predecessors: [0x41]
Successors: [0x143]
---
0x9f JUMPDEST
0xa0 PUSH2 0xa7
0xa3 PUSH2 0x143
0xa6 JUMP
---
0x9f: JUMPDEST 
0xa0: V37 = 0xa7
0xa3: V38 = 0x143
0xa6: JUMP 0x143
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa7]
Exit stack: [V11, 0xa7]

================================

Block 0xa7
[0xa7:0xa8]
---
Predecessors: [0x1f5]
Successors: []
---
0xa7 JUMPDEST
0xa8 STOP
---
0xa7: JUMPDEST 
0xa8: STOP 
---
Entry stack: [V271, V277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V271, V277, S0]

================================

Block 0xa9
[0xa9:0xb0]
---
Predecessors: [0x4c]
Successors: [0xb1, 0xb5]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab DUP1
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xa9: JUMPDEST 
0xaa: V39 = CALLVALUE
0xac: V40 = ISZERO V39
0xad: V41 = 0xb5
0xb0: JUMPI 0xb5 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V11, V39]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xa9]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V42 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V11, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V39]

================================

Block 0xb5
[0xb5:0xbd]
---
Predecessors: [0xa9]
Successors: [0x1fb]
---
0xb5 JUMPDEST
0xb6 POP
0xb7 PUSH2 0xbe
0xba PUSH2 0x1fb
0xbd JUMP
---
0xb5: JUMPDEST 
0xb7: V43 = 0xbe
0xba: V44 = 0x1fb
0xbd: JUMP 0x1fb
---
Entry stack: [V11, V39]
Stack pops: 1
Stack additions: [0xbe]
Exit stack: [V11, 0xbe]

================================

Block 0xbe
[0xbe:0xff]
---
Predecessors: [0x1fb]
Successors: []
---
0xbe JUMPDEST
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 DUP3
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP2
0xf6 POP
0xf7 POP
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc SWAP2
0xfd SUB
0xfe SWAP1
0xff RETURN
---
0xbe: JUMPDEST 
0xbf: V45 = 0x40
0xc1: V46 = M[0x40]
0xc4: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0xda: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xf1: M[V46] = V50
0xf2: V51 = 0x20
0xf4: V52 = ADD 0x20 V46
0xf8: V53 = 0x40
0xfa: V54 = M[0x40]
0xfd: V55 = SUB V52 V54
0xff: RETURN V54 V55
---
Entry stack: [V11, 0xbe, V109]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbe]

================================

Block 0x100
[0x100:0x142]
---
Predecessors: [0x68]
Successors: [0x9d]
---
0x100 JUMPDEST
0x101 DUP1
0x102 PUSH1 0x0
0x104 DUP1
0x105 PUSH2 0x100
0x108 EXP
0x109 DUP2
0x10a SLOAD
0x10b DUP2
0x10c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121 MUL
0x122 NOT
0x123 AND
0x124 SWAP1
0x125 DUP4
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c MUL
0x13d OR
0x13e SWAP1
0x13f SSTORE
0x140 POP
0x141 POP
0x142 JUMP
---
0x100: JUMPDEST 
0x102: V56 = 0x0
0x105: V57 = 0x100
0x108: V58 = EXP 0x100 0x0
0x10a: V59 = S[0x0]
0x10c: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x121: V61 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x122: V62 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x123: V63 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V59
0x126: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x13c: V66 = MUL V65 0x1
0x13d: V67 = OR V66 V63
0x13f: S[0x0] = V67
0x142: JUMP 0x9d
---
Entry stack: [V11, 0x9d, V33]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x16f]
---
Predecessors: [0x9f]
Successors: [0x220]
---
0x143 JUMPDEST
0x144 PUSH1 0x0
0x146 DUP1
0x147 PUSH1 0x0
0x149 SWAP1
0x14a SLOAD
0x14b SWAP1
0x14c PUSH2 0x100
0x14f EXP
0x150 SWAP1
0x151 DIV
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 CALLER
0x169 PUSH2 0x170
0x16c PUSH2 0x220
0x16f JUMP
---
0x143: JUMPDEST 
0x144: V68 = 0x0
0x147: V69 = 0x0
0x14a: V70 = S[0x0]
0x14c: V71 = 0x100
0x14f: V72 = EXP 0x100 0x0
0x151: V73 = DIV V70 0x1
0x152: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x168: V76 = CALLER
0x169: V77 = 0x170
0x16c: V78 = 0x220
0x16f: JUMP 0x220
---
Entry stack: [V11, 0xa7]
Stack pops: 0
Stack additions: [0x0, V75, V76, 0x170]
Exit stack: [V11, 0xa7, 0x0, V75, V76, 0x170]

================================

Block 0x170
[0x170:0x1eb]
---
Predecessors: [0x220]
Successors: [0x1ec, 0x1f5]
---
0x170 JUMPDEST
0x171 DUP1
0x172 DUP4
0x173 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x188 AND
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP3
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP3
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd DUP1
0x1de SWAP2
0x1df SUB
0x1e0 SWAP1
0x1e1 PUSH1 0x0
0x1e3 CREATE
0x1e4 DUP1
0x1e5 ISZERO
0x1e6 DUP1
0x1e7 ISZERO
0x1e8 PUSH2 0x1f5
0x1eb JUMPI
---
0x170: JUMPDEST 
0x173: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x188: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x189: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x1a0: M[V114] = V82
0x1a1: V83 = 0x20
0x1a3: V84 = ADD 0x20 V114
0x1a5: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1bb: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x1d2: M[V84] = V88
0x1d3: V89 = 0x20
0x1d5: V90 = ADD 0x20 V84
0x1da: V91 = 0x40
0x1dc: V92 = M[0x40]
0x1df: V93 = SUB V90 V92
0x1e1: V94 = 0x0
0x1e3: V95 = CREATE 0x0 V92 V93
0x1e5: V96 = ISZERO V95
0x1e7: V97 = ISZERO V96
0x1e8: V98 = 0x1f5
0x1eb: JUMPI 0x1f5 V97
---
Entry stack: [V271, V277, S5, S4, S3, S2, S1, V114]
Stack pops: 3
Stack additions: [V95, V96]
Exit stack: [V271, V277, S5, S4, S3, V95, V96]

================================

Block 0x1ec
[0x1ec:0x1f4]
---
Predecessors: [0x170]
Successors: []
---
0x1ec RETURNDATASIZE
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 RETURNDATACOPY
0x1f1 RETURNDATASIZE
0x1f2 PUSH1 0x0
0x1f4 REVERT
---
0x1ec: V99 = RETURNDATASIZE
0x1ed: V100 = 0x0
0x1f0: RETURNDATACOPY 0x0 0x0 V99
0x1f1: V101 = RETURNDATASIZE
0x1f2: V102 = 0x0
0x1f4: REVERT 0x0 V101
---
Entry stack: [V271, V277, S4, S3, S2, V95, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V271, V277, S4, S3, S2, V95, V96]

================================

Block 0x1f5
[0x1f5:0x1fa]
---
Predecessors: [0x170]
Successors: [0xa7]
---
0x1f5 JUMPDEST
0x1f6 POP
0x1f7 SWAP1
0x1f8 POP
0x1f9 POP
0x1fa JUMP
---
0x1f5: JUMPDEST 
0x1fa: JUMP S3
---
Entry stack: [V271, V277, S4, S3, S2, V95, V96]
Stack pops: 4
Stack additions: []
Exit stack: [V271, V277, S4]

================================

Block 0x1fb
[0x1fb:0x21f]
---
Predecessors: [0xb5]
Successors: [0xbe]
---
0x1fb JUMPDEST
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff SWAP1
0x200 SLOAD
0x201 SWAP1
0x202 PUSH2 0x100
0x205 EXP
0x206 SWAP1
0x207 DIV
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e DUP2
0x21f JUMP
---
0x1fb: JUMPDEST 
0x1fc: V103 = 0x0
0x200: V104 = S[0x0]
0x202: V105 = 0x100
0x205: V106 = EXP 0x100 0x0
0x207: V107 = DIV V104 0x1
0x208: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x21f: JUMP 0xbe
---
Entry stack: [V11, 0xbe]
Stack pops: 1
Stack additions: [S0, V109]
Exit stack: [V11, 0xbe, V109]

================================

Block 0x220
[0x220:0x22f]
---
Predecessors: [0x143, 0x45c]
Successors: [0x170]
---
0x220 JUMPDEST
0x221 PUSH1 0x40
0x223 MLOAD
0x224 PUSH2 0x4e6
0x227 DUP1
0x228 PUSH2 0x231
0x22b DUP4
0x22c CODECOPY
0x22d ADD
0x22e SWAP1
0x22f JUMP
---
0x220: JUMPDEST 
0x221: V110 = 0x40
0x223: V111 = M[0x40]
0x224: V112 = 0x4e6
0x228: V113 = 0x231
0x22c: CODECOPY V111 0x231 0x4e6
0x22d: V114 = ADD 0x4e6 V111
0x22f: JUMP S0
---
Entry stack: [V271, V277, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V114]
Exit stack: [V271, V277, S5, S4, S3, S2, S1, V114]

================================

Block 0x230
[0x230:0x2ed]
---
Predecessors: []
Successors: [0x2ee]
---
0x230 STOP
0x231 PUSH1 0x80
0x233 PUSH1 0x40
0x235 MSTORE
0x236 PUSH1 0x40
0x238 MLOAD
0x239 PUSH1 0x40
0x23b DUP1
0x23c PUSH2 0x4e6
0x23f DUP4
0x240 CODECOPY
0x241 DUP2
0x242 ADD
0x243 DUP1
0x244 PUSH1 0x40
0x246 MSTORE
0x247 DUP2
0x248 ADD
0x249 SWAP1
0x24a DUP1
0x24b DUP1
0x24c MLOAD
0x24d SWAP1
0x24e PUSH1 0x20
0x250 ADD
0x251 SWAP1
0x252 SWAP3
0x253 SWAP2
0x254 SWAP1
0x255 DUP1
0x256 MLOAD
0x257 SWAP1
0x258 PUSH1 0x20
0x25a ADD
0x25b SWAP1
0x25c SWAP3
0x25d SWAP2
0x25e SWAP1
0x25f POP
0x260 POP
0x261 POP
0x262 PUSH1 0x0
0x264 DUP1
0x265 PUSH1 0x0
0x267 DUP1
0x268 DUP6
0x269 SWAP4
0x26a POP
0x26b PUSH20 0x4e8ecf79ade5e2c49b9e30d795517a81e0bf00b8
0x280 SWAP3
0x281 POP
0x282 NUMBER
0x283 TIMESTAMP
0x284 ADDRESS
0x285 PUSH1 0x40
0x287 MLOAD
0x288 PUSH1 0x20
0x28a ADD
0x28b DUP1
0x28c DUP3
0x28d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a2 AND
0x2a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b8 AND
0x2b9 PUSH13 0x1000000000000000000000000
0x2c7 MUL
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x14
0x2cc ADD
0x2cd SWAP2
0x2ce POP
0x2cf POP
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 PUSH1 0x20
0x2d5 DUP2
0x2d6 DUP4
0x2d7 SUB
0x2d8 SUB
0x2d9 DUP2
0x2da MSTORE
0x2db SWAP1
0x2dc PUSH1 0x40
0x2de MSTORE
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 DUP3
0x2e4 DUP1
0x2e5 MLOAD
0x2e6 SWAP1
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea SWAP1
0x2eb DUP1
0x2ec DUP4
0x2ed DUP4
---
0x230: STOP 
0x231: V115 = 0x80
0x233: V116 = 0x40
0x235: M[0x40] = 0x80
0x236: V117 = 0x40
0x238: V118 = M[0x40]
0x239: V119 = 0x40
0x23c: V120 = 0x4e6
0x240: CODECOPY V118 0x4e6 0x40
0x242: V121 = ADD V118 0x40
0x244: V122 = 0x40
0x246: M[0x40] = V121
0x248: V123 = ADD V118 V121
0x24c: V124 = M[V118]
0x24e: V125 = 0x20
0x250: V126 = ADD 0x20 V118
0x256: V127 = M[V126]
0x258: V128 = 0x20
0x25a: V129 = ADD 0x20 V126
0x262: V130 = 0x0
0x265: V131 = 0x0
0x26b: V132 = 0x4e8ecf79ade5e2c49b9e30d795517a81e0bf00b8
0x282: V133 = NUMBER
0x283: V134 = TIMESTAMP
0x284: V135 = ADDRESS
0x285: V136 = 0x40
0x287: V137 = M[0x40]
0x288: V138 = 0x20
0x28a: V139 = ADD 0x20 V137
0x28d: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x2a3: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x2b9: V144 = 0x1000000000000000000000000
0x2c7: V145 = MUL 0x1000000000000000000000000 V143
0x2c9: M[V139] = V145
0x2ca: V146 = 0x14
0x2cc: V147 = ADD 0x14 V139
0x2d0: V148 = 0x40
0x2d2: V149 = M[0x40]
0x2d3: V150 = 0x20
0x2d7: V151 = SUB V147 V149
0x2d8: V152 = SUB V151 0x20
0x2da: M[V149] = V152
0x2dc: V153 = 0x40
0x2de: M[0x40] = V147
0x2df: V154 = 0x40
0x2e1: V155 = M[0x40]
0x2e5: V156 = M[V149]
0x2e7: V157 = 0x20
0x2e9: V158 = ADD 0x20 V149
---
Entry stack: []
Stack pops: 0
Stack additions: [V158, V155, V156, V156, V158, V155, V155, V149, V134, V133, 0x0, 0x0, 0x4e8ecf79ade5e2c49b9e30d795517a81e0bf00b8, V124, V127, V124]
Exit stack: []

================================

Block 0x2ee
[0x2ee:0x2f8]
---
Predecessors: [0x230]
Successors: [0x2f9]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x20
0x2f1 DUP4
0x2f2 LT
0x2f3 ISZERO
0x2f4 ISZERO
0x2f5 PUSH2 0xe2
0x2f8 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V159 = 0x20
0x2f2: V160 = LT V156 0x20
0x2f3: V161 = ISZERO V160
0x2f4: V162 = ISZERO V161
0x2f5: V163 = 0xe2
0x2f8: THROWI V162
---
Entry stack: [V124, V127, V124, 0x4e8ecf79ade5e2c49b9e30d795517a81e0bf00b8, 0x0, 0x0, V133, V134, V149, V155, V155, V158, V156, V156, V155, V158]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V124, V127, V124, 0x4e8ecf79ade5e2c49b9e30d795517a81e0bf00b8, 0x0, 0x0, V133, V134, V149, V155, V155, V158, V156, V156, V155, V158]

================================

Block 0x2f9
[0x2f9:0x34b]
---
Predecessors: [0x2ee]
Successors: [0x34c]
---
0x2f9 DUP1
0x2fa MLOAD
0x2fb DUP3
0x2fc MSTORE
0x2fd PUSH1 0x20
0x2ff DUP3
0x300 ADD
0x301 SWAP2
0x302 POP
0x303 PUSH1 0x20
0x305 DUP2
0x306 ADD
0x307 SWAP1
0x308 POP
0x309 PUSH1 0x20
0x30b DUP4
0x30c SUB
0x30d SWAP3
0x30e POP
0x30f PUSH2 0xbd
0x312 JUMP
0x313 JUMPDEST
0x314 PUSH1 0x1
0x316 DUP4
0x317 PUSH1 0x20
0x319 SUB
0x31a PUSH2 0x100
0x31d EXP
0x31e SUB
0x31f DUP1
0x320 NOT
0x321 DUP3
0x322 MLOAD
0x323 AND
0x324 DUP2
0x325 DUP5
0x326 MLOAD
0x327 AND
0x328 DUP1
0x329 DUP3
0x32a OR
0x32b DUP6
0x32c MSTORE
0x32d POP
0x32e POP
0x32f POP
0x330 POP
0x331 POP
0x332 POP
0x333 SWAP1
0x334 POP
0x335 ADD
0x336 SWAP2
0x337 POP
0x338 POP
0x339 PUSH1 0x40
0x33b MLOAD
0x33c DUP1
0x33d SWAP2
0x33e SUB
0x33f SWAP1
0x340 SHA3
0x341 PUSH1 0x1
0x343 SWAP1
0x344 DIV
0x345 DUP2
0x346 ISZERO
0x347 ISZERO
0x348 PUSH2 0x11c
0x34b JUMPI
---
0x2fa: V164 = M[V158]
0x2fc: M[V155] = V164
0x2fd: V165 = 0x20
0x300: V166 = ADD V155 0x20
0x303: V167 = 0x20
0x306: V168 = ADD V158 0x20
0x309: V169 = 0x20
0x30c: V170 = SUB V156 0x20
0x30f: V171 = 0xbd
0x312: THROW 
0x313: JUMPDEST 
0x314: V172 = 0x1
0x317: V173 = 0x20
0x319: V174 = SUB 0x20 S2
0x31a: V175 = 0x100
0x31d: V176 = EXP 0x100 V174
0x31e: V177 = SUB V176 0x1
0x320: V178 = NOT V177
0x322: V179 = M[S0]
0x323: V180 = AND V179 V178
0x326: V181 = M[S1]
0x327: V182 = AND V181 V177
0x32a: V183 = OR V180 V182
0x32c: M[S1] = V183
0x335: V184 = ADD S3 S5
0x339: V185 = 0x40
0x33b: V186 = M[0x40]
0x33e: V187 = SUB V184 V186
0x340: V188 = SHA3 V186 V187
0x341: V189 = 0x1
0x344: V190 = DIV V188 0x1
0x346: V191 = ISZERO S8
0x347: V192 = ISZERO V191
0x348: V193 = 0x11c
0x34b: THROWI V192
---
Entry stack: [V124, V127, V124, 0x4e8ecf79ade5e2c49b9e30d795517a81e0bf00b8, 0x0, 0x0, V133, V134, V149, V155, V155, V158, V156, V156, V155, V158]
Stack pops: 3
Stack additions: [V190, S8]
Exit stack: []

================================

Block 0x34c
[0x34c:0x3ba]
---
Predecessors: [0x2f9]
Successors: [0x3bb]
---
0x34c INVALID
0x34d JUMPDEST
0x34e DIV
0x34f GASLIMIT
0x350 TIMESTAMP
0x351 COINBASE
0x352 PUSH1 0x40
0x354 MLOAD
0x355 PUSH1 0x20
0x357 ADD
0x358 DUP1
0x359 DUP3
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 AND
0x386 PUSH13 0x1000000000000000000000000
0x394 MUL
0x395 DUP2
0x396 MSTORE
0x397 PUSH1 0x14
0x399 ADD
0x39a SWAP2
0x39b POP
0x39c POP
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 PUSH1 0x20
0x3a2 DUP2
0x3a3 DUP4
0x3a4 SUB
0x3a5 SUB
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 SWAP1
0x3a9 PUSH1 0x40
0x3ab MSTORE
0x3ac PUSH1 0x40
0x3ae MLOAD
0x3af DUP1
0x3b0 DUP3
0x3b1 DUP1
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP1
0x3b8 DUP1
0x3b9 DUP4
0x3ba DUP4
---
0x34c: INVALID 
0x34d: JUMPDEST 
0x34e: V194 = DIV S0 S1
0x34f: V195 = GASLIMIT
0x350: V196 = TIMESTAMP
0x351: V197 = COINBASE
0x352: V198 = 0x40
0x354: V199 = M[0x40]
0x355: V200 = 0x20
0x357: V201 = ADD 0x20 V199
0x35a: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x370: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x386: V206 = 0x1000000000000000000000000
0x394: V207 = MUL 0x1000000000000000000000000 V205
0x396: M[V201] = V207
0x397: V208 = 0x14
0x399: V209 = ADD 0x14 V201
0x39d: V210 = 0x40
0x39f: V211 = M[0x40]
0x3a0: V212 = 0x20
0x3a4: V213 = SUB V209 V211
0x3a5: V214 = SUB V213 0x20
0x3a7: M[V211] = V214
0x3a9: V215 = 0x40
0x3ab: M[0x40] = V209
0x3ac: V216 = 0x40
0x3ae: V217 = M[0x40]
0x3b2: V218 = M[V211]
0x3b4: V219 = 0x20
0x3b6: V220 = ADD 0x20 V211
---
Entry stack: [S1, V190]
Stack pops: 0
Stack additions: [V220, V217, V218, V218, V220, V217, V217, V211, V196, V195, V194]
Exit stack: []

================================

Block 0x3bb
[0x3bb:0x3c5]
---
Predecessors: [0x34c]
Successors: [0x3c6]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x20
0x3be DUP4
0x3bf LT
0x3c0 ISZERO
0x3c1 ISZERO
0x3c2 PUSH2 0x1af
0x3c5 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V221 = 0x20
0x3bf: V222 = LT V218 0x20
0x3c0: V223 = ISZERO V222
0x3c1: V224 = ISZERO V223
0x3c2: V225 = 0x1af
0x3c5: THROWI V224
---
Entry stack: [V194, V195, V196, V211, V217, V217, V220, V218, V218, V217, V220]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V194, V195, V196, V211, V217, V217, V220, V218, V218, V217, V220]

================================

Block 0x3c6
[0x3c6:0x418]
---
Predecessors: [0x3bb]
Successors: [0x419]
---
0x3c6 DUP1
0x3c7 MLOAD
0x3c8 DUP3
0x3c9 MSTORE
0x3ca PUSH1 0x20
0x3cc DUP3
0x3cd ADD
0x3ce SWAP2
0x3cf POP
0x3d0 PUSH1 0x20
0x3d2 DUP2
0x3d3 ADD
0x3d4 SWAP1
0x3d5 POP
0x3d6 PUSH1 0x20
0x3d8 DUP4
0x3d9 SUB
0x3da SWAP3
0x3db POP
0x3dc PUSH2 0x18a
0x3df JUMP
0x3e0 JUMPDEST
0x3e1 PUSH1 0x1
0x3e3 DUP4
0x3e4 PUSH1 0x20
0x3e6 SUB
0x3e7 PUSH2 0x100
0x3ea EXP
0x3eb SUB
0x3ec DUP1
0x3ed NOT
0x3ee DUP3
0x3ef MLOAD
0x3f0 AND
0x3f1 DUP2
0x3f2 DUP5
0x3f3 MLOAD
0x3f4 AND
0x3f5 DUP1
0x3f6 DUP3
0x3f7 OR
0x3f8 DUP6
0x3f9 MSTORE
0x3fa POP
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff POP
0x400 SWAP1
0x401 POP
0x402 ADD
0x403 SWAP2
0x404 POP
0x405 POP
0x406 PUSH1 0x40
0x408 MLOAD
0x409 DUP1
0x40a SWAP2
0x40b SUB
0x40c SWAP1
0x40d SHA3
0x40e PUSH1 0x1
0x410 SWAP1
0x411 DIV
0x412 DUP2
0x413 ISZERO
0x414 ISZERO
0x415 PUSH2 0x1e9
0x418 JUMPI
---
0x3c7: V226 = M[V220]
0x3c9: M[V217] = V226
0x3ca: V227 = 0x20
0x3cd: V228 = ADD V217 0x20
0x3d0: V229 = 0x20
0x3d3: V230 = ADD V220 0x20
0x3d6: V231 = 0x20
0x3d9: V232 = SUB V218 0x20
0x3dc: V233 = 0x18a
0x3df: THROW 
0x3e0: JUMPDEST 
0x3e1: V234 = 0x1
0x3e4: V235 = 0x20
0x3e6: V236 = SUB 0x20 S2
0x3e7: V237 = 0x100
0x3ea: V238 = EXP 0x100 V236
0x3eb: V239 = SUB V238 0x1
0x3ed: V240 = NOT V239
0x3ef: V241 = M[S0]
0x3f0: V242 = AND V241 V240
0x3f3: V243 = M[S1]
0x3f4: V244 = AND V243 V239
0x3f7: V245 = OR V242 V244
0x3f9: M[S1] = V245
0x402: V246 = ADD S3 S5
0x406: V247 = 0x40
0x408: V248 = M[0x40]
0x40b: V249 = SUB V246 V248
0x40d: V250 = SHA3 V248 V249
0x40e: V251 = 0x1
0x411: V252 = DIV V250 0x1
0x413: V253 = ISZERO S8
0x414: V254 = ISZERO V253
0x415: V255 = 0x1e9
0x418: THROWI V254
---
Entry stack: [V194, V195, V196, V211, V217, V217, V220, V218, V218, V217, V220]
Stack pops: 3
Stack additions: [V252, S8]
Exit stack: []

================================

Block 0x419
[0x419:0x450]
---
Predecessors: [0x3c6]
Successors: [0x451]
---
0x419 INVALID
0x41a JUMPDEST
0x41b DIV
0x41c DIFFICULTY
0x41d TIMESTAMP
0x41e ADD
0x41f ADD
0x420 ADD
0x421 ADD
0x422 ADD
0x423 PUSH1 0x40
0x425 MLOAD
0x426 PUSH1 0x20
0x428 ADD
0x429 DUP1
0x42a DUP3
0x42b DUP2
0x42c MSTORE
0x42d PUSH1 0x20
0x42f ADD
0x430 SWAP2
0x431 POP
0x432 POP
0x433 PUSH1 0x40
0x435 MLOAD
0x436 PUSH1 0x20
0x438 DUP2
0x439 DUP4
0x43a SUB
0x43b SUB
0x43c DUP2
0x43d MSTORE
0x43e SWAP1
0x43f PUSH1 0x40
0x441 MSTORE
0x442 PUSH1 0x40
0x444 MLOAD
0x445 DUP1
0x446 DUP3
0x447 DUP1
0x448 MLOAD
0x449 SWAP1
0x44a PUSH1 0x20
0x44c ADD
0x44d SWAP1
0x44e DUP1
0x44f DUP4
0x450 DUP4
---
0x419: INVALID 
0x41a: JUMPDEST 
0x41b: V256 = DIV S0 S1
0x41c: V257 = DIFFICULTY
0x41d: V258 = TIMESTAMP
0x41e: V259 = ADD V258 V257
0x41f: V260 = ADD V259 V256
0x420: V261 = ADD V260 S2
0x421: V262 = ADD V261 S3
0x422: V263 = ADD V262 S4
0x423: V264 = 0x40
0x425: V265 = M[0x40]
0x426: V266 = 0x20
0x428: V267 = ADD 0x20 V265
0x42c: M[V267] = V263
0x42d: V268 = 0x20
0x42f: V269 = ADD 0x20 V267
0x433: V270 = 0x40
0x435: V271 = M[0x40]
0x436: V272 = 0x20
0x43a: V273 = SUB V269 V271
0x43b: V274 = SUB V273 0x20
0x43d: M[V271] = V274
0x43f: V275 = 0x40
0x441: M[0x40] = V269
0x442: V276 = 0x40
0x444: V277 = M[0x40]
0x448: V278 = M[V271]
0x44a: V279 = 0x20
0x44c: V280 = ADD 0x20 V271
---
Entry stack: [S1, V252]
Stack pops: 0
Stack additions: [V280, V277, V278, V278, V280, V277, V277, V271]
Exit stack: []

================================

Block 0x451
[0x451:0x45b]
---
Predecessors: [0x419]
Successors: [0x45c]
---
0x451 JUMPDEST
0x452 PUSH1 0x20
0x454 DUP4
0x455 LT
0x456 ISZERO
0x457 ISZERO
0x458 PUSH2 0x245
0x45b JUMPI
---
0x451: JUMPDEST 
0x452: V281 = 0x20
0x455: V282 = LT V278 0x20
0x456: V283 = ISZERO V282
0x457: V284 = ISZERO V283
0x458: V285 = 0x245
0x45b: THROWI V284
---
Entry stack: [V271, V277, V277, V280, V278, V278, V277, V280]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V271, V277, V277, V280, V278, V278, V277, V280]

================================

Block 0x45c
[0x45c:0x475]
---
Predecessors: [0x451]
Successors: [0x220]
---
0x45c DUP1
0x45d MLOAD
0x45e DUP3
0x45f MSTORE
0x460 PUSH1 0x20
0x462 DUP3
0x463 ADD
0x464 SWAP2
0x465 POP
0x466 PUSH1 0x20
0x468 DUP2
0x469 ADD
0x46a SWAP1
0x46b POP
0x46c PUSH1 0x20
0x46e DUP4
0x46f SUB
0x470 SWAP3
0x471 POP
0x472 PUSH2 0x220
0x475 JUMP
---
0x45d: V286 = M[V280]
0x45f: M[V277] = V286
0x460: V287 = 0x20
0x463: V288 = ADD V277 0x20
0x466: V289 = 0x20
0x469: V290 = ADD V280 0x20
0x46c: V291 = 0x20
0x46f: V292 = SUB V278 0x20
0x472: V293 = 0x220
0x475: JUMP 0x220
---
Entry stack: [V271, V277, V277, V280, V278, V278, V277, V280]
Stack pops: 3
Stack additions: [V292, V288, V290]
Exit stack: [V271, V277, V277, V280, V278, V292, V288, V290]

================================

Block 0x476
[0x476:0x508]
---
Predecessors: []
Successors: [0x509]
---
0x476 JUMPDEST
0x477 PUSH1 0x1
0x479 DUP4
0x47a PUSH1 0x20
0x47c SUB
0x47d PUSH2 0x100
0x480 EXP
0x481 SUB
0x482 DUP1
0x483 NOT
0x484 DUP3
0x485 MLOAD
0x486 AND
0x487 DUP2
0x488 DUP5
0x489 MLOAD
0x48a AND
0x48b DUP1
0x48c DUP3
0x48d OR
0x48e DUP6
0x48f MSTORE
0x490 POP
0x491 POP
0x492 POP
0x493 POP
0x494 POP
0x495 POP
0x496 SWAP1
0x497 POP
0x498 ADD
0x499 SWAP2
0x49a POP
0x49b POP
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 SWAP2
0x4a1 SUB
0x4a2 SWAP1
0x4a3 SHA3
0x4a4 PUSH1 0x1
0x4a6 SWAP1
0x4a7 DIV
0x4a8 SWAP2
0x4a9 POP
0x4aa DUP3
0x4ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c0 AND
0x4c1 PUSH4 0x11a09ae7
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 DUP2
0x4ca PUSH4 0xffffffff
0x4cf AND
0x4d0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4ee MUL
0x4ef DUP2
0x4f0 MSTORE
0x4f1 PUSH1 0x4
0x4f3 ADD
0x4f4 PUSH1 0x20
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 DUP1
0x4fa DUP4
0x4fb SUB
0x4fc DUP2
0x4fd PUSH1 0x0
0x4ff DUP8
0x500 DUP1
0x501 EXTCODESIZE
0x502 ISZERO
0x503 DUP1
0x504 ISZERO
0x505 PUSH2 0x2dc
0x508 JUMPI
---
0x476: JUMPDEST 
0x477: V294 = 0x1
0x47a: V295 = 0x20
0x47c: V296 = SUB 0x20 S2
0x47d: V297 = 0x100
0x480: V298 = EXP 0x100 V296
0x481: V299 = SUB V298 0x1
0x483: V300 = NOT V299
0x485: V301 = M[S0]
0x486: V302 = AND V301 V300
0x489: V303 = M[S1]
0x48a: V304 = AND V303 V299
0x48d: V305 = OR V302 V304
0x48f: M[S1] = V305
0x498: V306 = ADD S3 S5
0x49c: V307 = 0x40
0x49e: V308 = M[0x40]
0x4a1: V309 = SUB V306 V308
0x4a3: V310 = SHA3 V308 V309
0x4a4: V311 = 0x1
0x4a7: V312 = DIV V310 0x1
0x4ab: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x4c1: V315 = 0x11a09ae7
0x4c6: V316 = 0x40
0x4c8: V317 = M[0x40]
0x4ca: V318 = 0xffffffff
0x4cf: V319 = AND 0xffffffff 0x11a09ae7
0x4d0: V320 = 0x100000000000000000000000000000000000000000000000000000000
0x4ee: V321 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x4f0: M[V317] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x4f1: V322 = 0x4
0x4f3: V323 = ADD 0x4 V317
0x4f4: V324 = 0x20
0x4f6: V325 = 0x40
0x4f8: V326 = M[0x40]
0x4fb: V327 = SUB V323 V326
0x4fd: V328 = 0x0
0x501: V329 = EXTCODESIZE V314
0x502: V330 = ISZERO V329
0x504: V331 = ISZERO V330
0x505: V332 = 0x2dc
0x508: THROWI V331
---
Entry stack: []
Stack pops: 11
Stack additions: [S10, V312, S8, V314, 0x11a09ae7, V323, 0x20, V326, V327, V326, 0x0, V314, V330]
Exit stack: [S10, V312, S8, V314, 0x11a09ae7, V323, 0x20, V326, V327, V326, 0x0, V314, V330]

================================

Block 0x509
[0x509:0x517]
---
Predecessors: [0x476]
Successors: [0x518]
---
0x509 PUSH1 0x0
0x50b DUP1
0x50c REVERT
0x50d JUMPDEST
0x50e POP
0x50f GAS
0x510 CALL
0x511 ISZERO
0x512 DUP1
0x513 ISZERO
0x514 PUSH2 0x2f0
0x517 JUMPI
---
0x509: V333 = 0x0
0x50c: REVERT 0x0 0x0
0x50d: JUMPDEST 
0x50f: V334 = GAS
0x510: V335 = CALL V334 S1 S2 S3 S4 S5 S6
0x511: V336 = ISZERO V335
0x513: V337 = ISZERO V336
0x514: V338 = 0x2f0
0x517: THROWI V337
---
Entry stack: [S12, V312, S10, V314, 0x11a09ae7, V323, 0x20, V326, V327, V326, 0x0, V314, V330]
Stack pops: 0
Stack additions: [V336]
Exit stack: []

================================

Block 0x518
[0x518:0x532]
---
Predecessors: [0x509]
Successors: [0x533]
---
0x518 RETURNDATASIZE
0x519 PUSH1 0x0
0x51b DUP1
0x51c RETURNDATACOPY
0x51d RETURNDATASIZE
0x51e PUSH1 0x0
0x520 REVERT
0x521 JUMPDEST
0x522 POP
0x523 POP
0x524 POP
0x525 POP
0x526 PUSH1 0x40
0x528 MLOAD
0x529 RETURNDATASIZE
0x52a PUSH1 0x20
0x52c DUP2
0x52d LT
0x52e ISZERO
0x52f PUSH2 0x306
0x532 JUMPI
---
0x518: V339 = RETURNDATASIZE
0x519: V340 = 0x0
0x51c: RETURNDATACOPY 0x0 0x0 V339
0x51d: V341 = RETURNDATASIZE
0x51e: V342 = 0x0
0x520: REVERT 0x0 V341
0x521: JUMPDEST 
0x526: V343 = 0x40
0x528: V344 = M[0x40]
0x529: V345 = RETURNDATASIZE
0x52a: V346 = 0x20
0x52d: V347 = LT V345 0x20
0x52e: V348 = ISZERO V347
0x52f: V349 = 0x306
0x532: THROWI V348
---
Entry stack: [V336]
Stack pops: 0
Stack additions: [V345, V344]
Exit stack: []

================================

Block 0x533
[0x533:0x557]
---
Predecessors: [0x518]
Successors: [0x558]
---
0x533 PUSH1 0x0
0x535 DUP1
0x536 REVERT
0x537 JUMPDEST
0x538 DUP2
0x539 ADD
0x53a SWAP1
0x53b DUP1
0x53c DUP1
0x53d MLOAD
0x53e SWAP1
0x53f PUSH1 0x20
0x541 ADD
0x542 SWAP1
0x543 SWAP3
0x544 SWAP2
0x545 SWAP1
0x546 POP
0x547 POP
0x548 POP
0x549 SWAP1
0x54a POP
0x54b DUP1
0x54c PUSH2 0x3e8
0x54f DUP1
0x550 DUP5
0x551 DUP2
0x552 ISZERO
0x553 ISZERO
0x554 PUSH2 0x328
0x557 JUMPI
---
0x533: V350 = 0x0
0x536: REVERT 0x0 0x0
0x537: JUMPDEST 
0x539: V351 = ADD S1 S0
0x53d: V352 = M[S1]
0x53f: V353 = 0x20
0x541: V354 = ADD 0x20 S1
0x54c: V355 = 0x3e8
0x552: V356 = ISZERO 0x3e8
0x553: V357 = ISZERO 0x0
0x554: V358 = 0x328
0x557: THROWI 0x1
---
Entry stack: [V344, V345]
Stack pops: 0
Stack additions: [S3, 0x3e8, 0x3e8, V352, V352, S3]
Exit stack: []

================================

Block 0x558
[0x558:0x564]
---
Predecessors: [0x533]
Successors: [0x565]
---
0x558 INVALID
0x559 JUMPDEST
0x55a DIV
0x55b MUL
0x55c DUP4
0x55d SUB
0x55e LT
0x55f ISZERO
0x560 ISZERO
0x561 PUSH2 0x423
0x564 JUMPI
---
0x558: INVALID 
0x559: JUMPDEST 
0x55a: V359 = DIV S0 S1
0x55b: V360 = MUL V359 S2
0x55d: V361 = SUB S5 V360
0x55e: V362 = LT V361 S3
0x55f: V363 = ISZERO V362
0x560: V364 = ISZERO V363
0x561: V365 = 0x423
0x564: THROWI V364
---
Entry stack: [S5, V352, V352, 0x3e8, 0x3e8, S0]
Stack pops: 0
Stack additions: [S4, S5]
Exit stack: []

================================

Block 0x565
[0x565:0x5fa]
---
Predecessors: [0x558]
Successors: [0x5fb]
---
0x565 DUP4
0x566 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57b AND
0x57c PUSH4 0xebf6af45
0x581 DUP7
0x582 PUSH1 0x40
0x584 MLOAD
0x585 DUP3
0x586 PUSH4 0xffffffff
0x58b AND
0x58c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5aa MUL
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x4
0x5af ADD
0x5b0 DUP1
0x5b1 DUP3
0x5b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c7 AND
0x5c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dd AND
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 SWAP2
0x5e4 POP
0x5e5 POP
0x5e6 PUSH1 0x20
0x5e8 PUSH1 0x40
0x5ea MLOAD
0x5eb DUP1
0x5ec DUP4
0x5ed SUB
0x5ee DUP2
0x5ef PUSH1 0x0
0x5f1 DUP8
0x5f2 DUP1
0x5f3 EXTCODESIZE
0x5f4 ISZERO
0x5f5 DUP1
0x5f6 ISZERO
0x5f7 PUSH2 0x3ce
0x5fa JUMPI
---
0x566: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x57b: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x57c: V368 = 0xebf6af45
0x582: V369 = 0x40
0x584: V370 = M[0x40]
0x586: V371 = 0xffffffff
0x58b: V372 = AND 0xffffffff 0xebf6af45
0x58c: V373 = 0x100000000000000000000000000000000000000000000000000000000
0x5aa: V374 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xebf6af45
0x5ac: M[V370] = 0xebf6af4500000000000000000000000000000000000000000000000000000000
0x5ad: V375 = 0x4
0x5af: V376 = ADD 0x4 V370
0x5b2: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x5c8: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x5df: M[V376] = V380
0x5e0: V381 = 0x20
0x5e2: V382 = ADD 0x20 V376
0x5e6: V383 = 0x20
0x5e8: V384 = 0x40
0x5ea: V385 = M[0x40]
0x5ed: V386 = SUB V382 V385
0x5ef: V387 = 0x0
0x5f3: V388 = EXTCODESIZE V367
0x5f4: V389 = ISZERO V388
0x5f6: V390 = ISZERO V389
0x5f7: V391 = 0x3ce
0x5fa: THROWI V390
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V367, 0xebf6af45, V382, 0x20, V385, V386, V385, 0x0, V367, V389]
Exit stack: [S2, S1, S0, S1, S0, V367, 0xebf6af45, V382, 0x20, V385, V386, V385, 0x0, V367, V389]

================================

Block 0x5fb
[0x5fb:0x609]
---
Predecessors: [0x565]
Successors: [0x60a]
---
0x5fb PUSH1 0x0
0x5fd DUP1
0x5fe REVERT
0x5ff JUMPDEST
0x600 POP
0x601 GAS
0x602 CALL
0x603 ISZERO
0x604 DUP1
0x605 ISZERO
0x606 PUSH2 0x3e2
0x609 JUMPI
---
0x5fb: V392 = 0x0
0x5fe: REVERT 0x0 0x0
0x5ff: JUMPDEST 
0x601: V393 = GAS
0x602: V394 = CALL V393 S1 S2 S3 S4 S5 S6
0x603: V395 = ISZERO V394
0x605: V396 = ISZERO V395
0x606: V397 = 0x3e2
0x609: THROWI V396
---
Entry stack: [S14, S13, S12, S11, S10, V367, 0xebf6af45, V382, 0x20, V385, V386, V385, 0x0, V367, V389]
Stack pops: 0
Stack additions: [V395]
Exit stack: []

================================

Block 0x60a
[0x60a:0x624]
---
Predecessors: [0x5fb]
Successors: [0x625]
---
0x60a RETURNDATASIZE
0x60b PUSH1 0x0
0x60d DUP1
0x60e RETURNDATACOPY
0x60f RETURNDATASIZE
0x610 PUSH1 0x0
0x612 REVERT
0x613 JUMPDEST
0x614 POP
0x615 POP
0x616 POP
0x617 POP
0x618 PUSH1 0x40
0x61a MLOAD
0x61b RETURNDATASIZE
0x61c PUSH1 0x20
0x61e DUP2
0x61f LT
0x620 ISZERO
0x621 PUSH2 0x3f8
0x624 JUMPI
---
0x60a: V398 = RETURNDATASIZE
0x60b: V399 = 0x0
0x60e: RETURNDATACOPY 0x0 0x0 V398
0x60f: V400 = RETURNDATASIZE
0x610: V401 = 0x0
0x612: REVERT 0x0 V400
0x613: JUMPDEST 
0x618: V402 = 0x40
0x61a: V403 = M[0x40]
0x61b: V404 = RETURNDATASIZE
0x61c: V405 = 0x20
0x61f: V406 = LT V404 0x20
0x620: V407 = ISZERO V406
0x621: V408 = 0x3f8
0x624: THROWI V407
---
Entry stack: [V395]
Stack pops: 0
Stack additions: [V404, V403]
Exit stack: []

================================

Block 0x625
[0x625:0x6e0]
---
Predecessors: [0x60a]
Successors: [0x6e1]
---
0x625 PUSH1 0x0
0x627 DUP1
0x628 REVERT
0x629 JUMPDEST
0x62a DUP2
0x62b ADD
0x62c SWAP1
0x62d DUP1
0x62e DUP1
0x62f MLOAD
0x630 SWAP1
0x631 PUSH1 0x20
0x633 ADD
0x634 SWAP1
0x635 SWAP3
0x636 SWAP2
0x637 SWAP1
0x638 POP
0x639 POP
0x63a POP
0x63b POP
0x63c DUP5
0x63d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x652 AND
0x653 SELFDESTRUCT
0x654 JUMPDEST
0x655 DUP3
0x656 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66b AND
0x66c CALLVALUE
0x66d PUSH1 0x40
0x66f MLOAD
0x670 PUSH1 0x0
0x672 PUSH1 0x40
0x674 MLOAD
0x675 DUP1
0x676 DUP4
0x677 SUB
0x678 DUP2
0x679 DUP6
0x67a DUP8
0x67b GAS
0x67c CALL
0x67d SWAP3
0x67e POP
0x67f POP
0x680 POP
0x681 POP
0x682 DUP3
0x683 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x698 AND
0x699 PUSH4 0x3ccfd60b
0x69e PUSH1 0x40
0x6a0 MLOAD
0x6a1 DUP2
0x6a2 PUSH4 0xffffffff
0x6a7 AND
0x6a8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6c6 MUL
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 PUSH1 0x4
0x6cb ADD
0x6cc PUSH1 0x0
0x6ce PUSH1 0x40
0x6d0 MLOAD
0x6d1 DUP1
0x6d2 DUP4
0x6d3 SUB
0x6d4 DUP2
0x6d5 PUSH1 0x0
0x6d7 DUP8
0x6d8 DUP1
0x6d9 EXTCODESIZE
0x6da ISZERO
0x6db DUP1
0x6dc ISZERO
0x6dd PUSH2 0x4b4
0x6e0 JUMPI
---
0x625: V409 = 0x0
0x628: REVERT 0x0 0x0
0x629: JUMPDEST 
0x62b: V410 = ADD S1 S0
0x62f: V411 = M[S1]
0x631: V412 = 0x20
0x633: V413 = ADD 0x20 S1
0x63d: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x652: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x653: SELFDESTRUCT V415
0x654: JUMPDEST 
0x656: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x66b: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x66c: V418 = CALLVALUE
0x66d: V419 = 0x40
0x66f: V420 = M[0x40]
0x670: V421 = 0x0
0x672: V422 = 0x40
0x674: V423 = M[0x40]
0x677: V424 = SUB V420 V423
0x67b: V425 = GAS
0x67c: V426 = CALL V425 V417 V418 V423 V424 V423 0x0
0x683: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x698: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x699: V429 = 0x3ccfd60b
0x69e: V430 = 0x40
0x6a0: V431 = M[0x40]
0x6a2: V432 = 0xffffffff
0x6a7: V433 = AND 0xffffffff 0x3ccfd60b
0x6a8: V434 = 0x100000000000000000000000000000000000000000000000000000000
0x6c6: V435 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x6c8: M[V431] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x6c9: V436 = 0x4
0x6cb: V437 = ADD 0x4 V431
0x6cc: V438 = 0x0
0x6ce: V439 = 0x40
0x6d0: V440 = M[0x40]
0x6d3: V441 = SUB V437 V440
0x6d5: V442 = 0x0
0x6d9: V443 = EXTCODESIZE V428
0x6da: V444 = ISZERO V443
0x6dc: V445 = ISZERO V444
0x6dd: V446 = 0x4b4
0x6e0: THROWI V445
---
Entry stack: [V403, V404]
Stack pops: 0
Stack additions: [S2, S3, S4, S5, S6, V444, V428, 0x0, V440, V441, V440, 0x0, V437, 0x3ccfd60b, V428, S0, S1, S2]
Exit stack: []

================================

Block 0x6e1
[0x6e1:0x6ef]
---
Predecessors: [0x625]
Successors: [0x6f0]
---
0x6e1 PUSH1 0x0
0x6e3 DUP1
0x6e4 REVERT
0x6e5 JUMPDEST
0x6e6 POP
0x6e7 GAS
0x6e8 CALL
0x6e9 ISZERO
0x6ea DUP1
0x6eb ISZERO
0x6ec PUSH2 0x4c8
0x6ef JUMPI
---
0x6e1: V447 = 0x0
0x6e4: REVERT 0x0 0x0
0x6e5: JUMPDEST 
0x6e7: V448 = GAS
0x6e8: V449 = CALL V448 S1 S2 S3 S4 S5 S6
0x6e9: V450 = ISZERO V449
0x6eb: V451 = ISZERO V450
0x6ec: V452 = 0x4c8
0x6ef: THROWI V451
---
Entry stack: [S12, S11, S10, V428, 0x3ccfd60b, V437, 0x0, V440, V441, V440, 0x0, V428, V444]
Stack pops: 0
Stack additions: [V450]
Exit stack: []

================================

Block 0x6f0
[0x6f0:0x74f]
---
Predecessors: [0x6e1]
Successors: []
---
0x6f0 RETURNDATASIZE
0x6f1 PUSH1 0x0
0x6f3 DUP1
0x6f4 RETURNDATACOPY
0x6f5 RETURNDATASIZE
0x6f6 PUSH1 0x0
0x6f8 REVERT
0x6f9 JUMPDEST
0x6fa POP
0x6fb POP
0x6fc POP
0x6fd POP
0x6fe DUP5
0x6ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x714 AND
0x715 SELFDESTRUCT
0x716 STOP
0x717 LOG1
0x718 PUSH6 0x627a7a723058
0x71f SHA3
0x720 PUSH28 0xb8660b07215d81f7650f55ff658e7842b1734fd5651d4577e9235fc6
0x73d MISSING 0x23
0x73e PUSH17 0x680029
---
0x6f0: V453 = RETURNDATASIZE
0x6f1: V454 = 0x0
0x6f4: RETURNDATACOPY 0x0 0x0 V453
0x6f5: V455 = RETURNDATASIZE
0x6f6: V456 = 0x0
0x6f8: REVERT 0x0 V455
0x6f9: JUMPDEST 
0x6ff: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x714: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x715: SELFDESTRUCT V458
0x716: STOP 
0x717: LOG S0 S1 S2
0x718: V459 = 0x627a7a723058
0x71f: V460 = SHA3 0x627a7a723058 S3
0x720: V461 = 0xb8660b07215d81f7650f55ff658e7842b1734fd5651d4577e9235fc6
0x73d: MISSING 0x23
0x73e: V462 = 0x680029
---
Entry stack: [V450]
Stack pops: 0
Stack additions: [S4, S5, S6, S7, S8, 0xb8660b07215d81f7650f55ff658e7842b1734fd5651d4577e9235fc6, V460, 0x680029]
Exit stack: []

================================

Function 0:
Public function signature: 0x5bb47808
Entry block: 0x5c
Exit block: 0x9d
Body: 0x5c, 0x64, 0x68, 0x9d, 0x100

Function 1:
Public function signature: 0x61461954
Entry block: 0x9f
Exit block: 0xa7
Body: 0x9f, 0xa7, 0x143, 0x170, 0x1ec, 0x1f5, 0x220

Function 2:
Public function signature: 0xc45a0155
Entry block: 0xa9
Exit block: 0xbe
Body: 0xa9, 0xb1, 0xb5, 0xbe, 0x1fb

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

