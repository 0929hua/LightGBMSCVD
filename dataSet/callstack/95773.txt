Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x4f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x3ac8f090
0x2e EQ
0x2f PUSH2 0x4f
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x3ac8f090
0x2e: V7 = EQ 0x3ac8f090 V5
0x2f: V8 = 0x4f
0x32: JUMPI 0x4f V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x88]
---
0x33 DUP1
0x34 PUSH4 0x4fbe69fe
0x39 EQ
0x3a PUSH2 0x88
0x3d JUMPI
---
0x34: V9 = 0x4fbe69fe
0x39: V10 = EQ 0x4fbe69fe V5
0x3a: V11 = 0x88
0x3d: JUMPI 0x88 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x97]
---
0x3e DUP1
0x3f PUSH4 0x70961774
0x44 EQ
0x45 PUSH2 0x97
0x48 JUMPI
---
0x3f: V12 = 0x70961774
0x44: V13 = EQ 0x70961774 V5
0x45: V14 = 0x97
0x48: JUMPI 0x97 V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x3e]
Successors: [0x4d]
---
0x49 PUSH2 0x4d
0x4c JUMP
---
0x49: V15 = 0x4d
0x4c: JUMP 0x4d
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x49]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4f
[0x4f:0x5b]
---
Predecessors: [0x0]
Successors: [0x136]
---
0x4f JUMPDEST
0x50 PUSH2 0x5c
0x53 PUSH1 0x4
0x55 DUP1
0x56 POP
0x57 POP
0x58 PUSH2 0x136
0x5b JUMP
---
0x4f: JUMPDEST 
0x50: V16 = 0x5c
0x53: V17 = 0x4
0x58: V18 = 0x136
0x5b: JUMP 0x136
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x5c]
Exit stack: [V5, 0x5c]

================================

Block 0x5c
[0x5c:0x87]
---
Predecessors: [0x162]
Successors: []
---
0x5c JUMPDEST
0x5d PUSH1 0x40
0x5f MLOAD
0x60 DUP1
0x61 DUP3
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 DUP2
0x79 MSTORE
0x7a PUSH1 0x20
0x7c ADD
0x7d SWAP2
0x7e POP
0x7f POP
0x80 PUSH1 0x40
0x82 MLOAD
0x83 DUP1
0x84 SWAP2
0x85 SUB
0x86 SWAP1
0x87 RETURN
---
0x5c: JUMPDEST 
0x5d: V19 = 0x40
0x5f: V20 = M[0x40]
0x62: V21 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x79: M[V20] = V22
0x7a: V23 = 0x20
0x7c: V24 = ADD 0x20 V20
0x80: V25 = 0x40
0x82: V26 = M[0x40]
0x85: V27 = SUB V24 V26
0x87: RETURN V26 V27
---
Entry stack: [V5, V85]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x88
[0x88:0x94]
---
Predecessors: [0x33]
Successors: [0xba]
---
0x88 JUMPDEST
0x89 PUSH2 0x95
0x8c PUSH1 0x4
0x8e DUP1
0x8f POP
0x90 POP
0x91 PUSH2 0xba
0x94 JUMP
---
0x88: JUMPDEST 
0x89: V28 = 0x95
0x8c: V29 = 0x4
0x91: V30 = 0xba
0x94: JUMP 0xba
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x95]
Exit stack: [V5, 0x95]

================================

Block 0x95
[0x95:0x96]
---
Predecessors: [0x134]
Successors: []
---
0x95 JUMPDEST
0x96 STOP
---
0x95: JUMPDEST 
0x96: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x97
[0x97:0xa3]
---
Predecessors: [0x3e]
Successors: [0x165]
---
0x97 JUMPDEST
0x98 PUSH2 0xa4
0x9b PUSH1 0x4
0x9d DUP1
0x9e POP
0x9f POP
0xa0 PUSH2 0x165
0xa3 JUMP
---
0x97: JUMPDEST 
0x98: V31 = 0xa4
0x9b: V32 = 0x4
0xa0: V33 = 0x165
0xa3: JUMP 0x165
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V5, 0xa4]

================================

Block 0xa4
[0xa4:0xb9]
---
Predecessors: [0x174]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 DUP3
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf SWAP2
0xb0 POP
0xb1 POP
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 DUP1
0xb6 SWAP2
0xb7 SUB
0xb8 SWAP1
0xb9 RETURN
---
0xa4: JUMPDEST 
0xa5: V34 = 0x40
0xa7: V35 = M[0x40]
0xab: M[V35] = V90
0xac: V36 = 0x20
0xae: V37 = ADD 0x20 V35
0xb2: V38 = 0x40
0xb4: V39 = M[0x40]
0xb7: V40 = SUB V37 V39
0xb9: RETURN V39 V40
---
Entry stack: [V5, V90]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0xba
[0xba:0x133]
---
Predecessors: [0x88]
Successors: [0x134]
---
0xba JUMPDEST
0xbb CALLER
0xbc PUSH1 0x0
0xbe PUSH1 0x0
0xc0 PUSH2 0x100
0xc3 EXP
0xc4 DUP2
0xc5 SLOAD
0xc6 DUP2
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc MUL
0xdd NOT
0xde AND
0xdf SWAP1
0xe0 DUP4
0xe1 MUL
0xe2 OR
0xe3 SWAP1
0xe4 SSTORE
0xe5 POP
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 PUSH2 0x472
0xec DUP1
0xed PUSH2 0x177
0xf0 DUP4
0xf1 CODECOPY
0xf2 ADD
0xf3 DUP1
0xf4 SWAP1
0xf5 POP
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd PUSH1 0x0
0xff CREATE
0x100 PUSH1 0x1
0x102 PUSH1 0x0
0x104 PUSH2 0x100
0x107 EXP
0x108 DUP2
0x109 SLOAD
0x10a DUP2
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 MUL
0x121 NOT
0x122 AND
0x123 SWAP1
0x124 DUP4
0x125 MUL
0x126 OR
0x127 SWAP1
0x128 SSTORE
0x129 POP
0x12a NUMBER
0x12b PUSH1 0x2
0x12d PUSH1 0x0
0x12f POP
0x130 DUP2
0x131 SWAP1
0x132 SSTORE
0x133 POP
---
0xba: JUMPDEST 
0xbb: V41 = CALLER
0xbc: V42 = 0x0
0xbe: V43 = 0x0
0xc0: V44 = 0x100
0xc3: V45 = EXP 0x100 0x0
0xc5: V46 = S[0x0]
0xc7: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V48 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xdd: V49 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xde: V50 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V46
0xe1: V51 = MUL V41 0x1
0xe2: V52 = OR V51 V50
0xe4: S[0x0] = V52
0xe6: V53 = 0x40
0xe8: V54 = M[0x40]
0xe9: V55 = 0x472
0xed: V56 = 0x177
0xf1: CODECOPY V54 0x177 0x472
0xf2: V57 = ADD 0x472 V54
0xf6: V58 = 0x40
0xf8: V59 = M[0x40]
0xfb: V60 = SUB V57 V59
0xfd: V61 = 0x0
0xff: V62 = CREATE 0x0 V59 V60
0x100: V63 = 0x1
0x102: V64 = 0x0
0x104: V65 = 0x100
0x107: V66 = EXP 0x100 0x0
0x109: V67 = S[0x1]
0x10b: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V69 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x121: V70 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x122: V71 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V67
0x125: V72 = MUL V62 0x1
0x126: V73 = OR V72 V71
0x128: S[0x1] = V73
0x12a: V74 = NUMBER
0x12b: V75 = 0x2
0x12d: V76 = 0x0
0x132: S[0x2] = V74
---
Entry stack: [V5, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x95]

================================

Block 0x134
[0x134:0x135]
---
Predecessors: [0xba]
Successors: [0x95]
---
0x134 JUMPDEST
0x135 JUMP
---
0x134: JUMPDEST 
0x135: JUMP 0x95
---
Entry stack: [V5, 0x95]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x136
[0x136:0x161]
---
Predecessors: [0x4f]
Successors: [0x162]
---
0x136 JUMPDEST
0x137 PUSH1 0x0
0x139 PUSH1 0x1
0x13b PUSH1 0x0
0x13d SWAP1
0x13e SLOAD
0x13f SWAP1
0x140 PUSH2 0x100
0x143 EXP
0x144 SWAP1
0x145 DIV
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c SWAP1
0x15d POP
0x15e PUSH2 0x162
0x161 JUMP
---
0x136: JUMPDEST 
0x137: V77 = 0x0
0x139: V78 = 0x1
0x13b: V79 = 0x0
0x13e: V80 = S[0x1]
0x140: V81 = 0x100
0x143: V82 = EXP 0x100 0x0
0x145: V83 = DIV V80 0x1
0x146: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x15e: V86 = 0x162
0x161: JUMP 0x162
---
Entry stack: [V5, 0x5c]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V5, 0x5c, V85]

================================

Block 0x162
[0x162:0x164]
---
Predecessors: [0x136]
Successors: [0x5c]
---
0x162 JUMPDEST
0x163 SWAP1
0x164 JUMP
---
0x162: JUMPDEST 
0x164: JUMP 0x5c
---
Entry stack: [V5, 0x5c, V85]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V5, V85]

================================

Block 0x165
[0x165:0x173]
---
Predecessors: [0x97]
Successors: [0x174]
---
0x165 JUMPDEST
0x166 PUSH1 0x0
0x168 PUSH1 0x2
0x16a PUSH1 0x0
0x16c POP
0x16d SLOAD
0x16e SWAP1
0x16f POP
0x170 PUSH2 0x174
0x173 JUMP
---
0x165: JUMPDEST 
0x166: V87 = 0x0
0x168: V88 = 0x2
0x16a: V89 = 0x0
0x16d: V90 = S[0x2]
0x170: V91 = 0x174
0x173: JUMP 0x174
---
Entry stack: [V5, 0xa4]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V5, 0xa4, V90]

================================

Block 0x174
[0x174:0x176]
---
Predecessors: [0x165]
Successors: [0xa4]
---
0x174 JUMPDEST
0x175 SWAP1
0x176 JUMP
---
0x174: JUMPDEST 
0x176: JUMP 0xa4
---
Entry stack: [V5, 0xa4, V90]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V5, V90]

================================

Block 0x177
[0x177:0x17b]
---
Predecessors: []
Successors: [0x17c]
---
0x177 PUSH1 0x60
0x179 PUSH1 0x40
0x17b MSTORE
---
0x177: V92 = 0x60
0x179: V93 = 0x40
0x17b: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17c
[0x17c:0x1a7]
---
Predecessors: [0x177]
Successors: [0x1a8]
---
0x17c JUMPDEST
0x17d CALLER
0x17e PUSH1 0x0
0x180 PUSH1 0x0
0x182 PUSH2 0x100
0x185 EXP
0x186 DUP2
0x187 SLOAD
0x188 DUP2
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e MUL
0x19f NOT
0x1a0 AND
0x1a1 SWAP1
0x1a2 DUP4
0x1a3 MUL
0x1a4 OR
0x1a5 SWAP1
0x1a6 SSTORE
0x1a7 POP
---
0x17c: JUMPDEST 
0x17d: V94 = CALLER
0x17e: V95 = 0x0
0x180: V96 = 0x0
0x182: V97 = 0x100
0x185: V98 = EXP 0x100 0x0
0x187: V99 = S[0x0]
0x189: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V101 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x19f: V102 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V103 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V99
0x1a3: V104 = MUL V94 0x1
0x1a4: V105 = OR V104 V103
0x1a6: S[0x0] = V105
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a8
[0x1a8:0x1c0]
---
Predecessors: [0x17c]
Successors: [0x1c1]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x433
0x1ac DUP1
0x1ad PUSH2 0x3f
0x1b0 PUSH1 0x0
0x1b2 CODECOPY
0x1b3 PUSH1 0x0
0x1b5 RETURN
0x1b6 PUSH1 0x60
0x1b8 PUSH1 0x40
0x1ba MSTORE
0x1bb CALLDATASIZE
0x1bc ISZERO
0x1bd PUSH2 0x69
0x1c0 JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V106 = 0x433
0x1ad: V107 = 0x3f
0x1b0: V108 = 0x0
0x1b2: CODECOPY 0x0 0x3f 0x433
0x1b3: V109 = 0x0
0x1b5: RETURN 0x0 0x433
0x1b6: V110 = 0x60
0x1b8: V111 = 0x40
0x1ba: M[0x40] = 0x60
0x1bb: V112 = CALLDATASIZE
0x1bc: V113 = ISZERO V112
0x1bd: V114 = 0x69
0x1c0: THROWI V113
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c1
[0x1c1:0x1ee]
---
Predecessors: [0x1a8]
Successors: [0x1ef]
---
0x1c1 PUSH1 0x0
0x1c3 CALLDATALOAD
0x1c4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1e2 SWAP1
0x1e3 DIV
0x1e4 DUP1
0x1e5 PUSH4 0x232a3060
0x1ea EQ
0x1eb PUSH2 0xd8
0x1ee JUMPI
---
0x1c1: V115 = 0x0
0x1c3: V116 = CALLDATALOAD 0x0
0x1c4: V117 = 0x100000000000000000000000000000000000000000000000000000000
0x1e3: V118 = DIV V116 0x100000000000000000000000000000000000000000000000000000000
0x1e5: V119 = 0x232a3060
0x1ea: V120 = EQ 0x232a3060 V118
0x1eb: V121 = 0xd8
0x1ee: THROWI V120
---
Entry stack: []
Stack pops: 0
Stack additions: [V118]
Exit stack: [V118]

================================

Block 0x1ef
[0x1ef:0x1f9]
---
Predecessors: [0x1c1]
Successors: [0x1fa]
---
0x1ef DUP1
0x1f0 PUSH4 0x6c7113e4
0x1f5 EQ
0x1f6 PUSH2 0xf0
0x1f9 JUMPI
---
0x1f0: V122 = 0x6c7113e4
0x1f5: V123 = EQ 0x6c7113e4 V118
0x1f6: V124 = 0xf0
0x1f9: THROWI V123
---
Entry stack: [V118]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V118]

================================

Block 0x1fa
[0x1fa:0x204]
---
Predecessors: [0x1ef]
Successors: [0x205]
---
0x1fa DUP1
0x1fb PUSH4 0x9d735286
0x200 EQ
0x201 PUSH2 0x129
0x204 JUMPI
---
0x1fb: V125 = 0x9d735286
0x200: V126 = EQ 0x9d735286 V118
0x201: V127 = 0x129
0x204: THROWI V126
---
Entry stack: [V118]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V118]

================================

Block 0x205
[0x205:0x20f]
---
Predecessors: [0x1fa]
Successors: [0x210]
---
0x205 DUP1
0x206 PUSH4 0xa6f9dae1
0x20b EQ
0x20c PUSH2 0x138
0x20f JUMPI
---
0x206: V128 = 0xa6f9dae1
0x20b: V129 = EQ 0xa6f9dae1 V118
0x20c: V130 = 0x138
0x20f: THROWI V129
---
Entry stack: [V118]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V118]

================================

Block 0x210
[0x210:0x21a]
---
Predecessors: [0x205]
Successors: [0x21b]
---
0x210 DUP1
0x211 PUSH4 0xfa89401a
0x216 EQ
0x217 PUSH2 0x150
0x21a JUMPI
---
0x211: V131 = 0xfa89401a
0x216: V132 = EQ 0xfa89401a V118
0x217: V133 = 0x150
0x21a: THROWI V132
---
Entry stack: [V118]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V118]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x210]
Successors: [0x223]
---
0x21b PUSH2 0x69
0x21e JUMP
0x21f JUMPDEST
0x220 PUSH2 0xd6
---
0x21b: V134 = 0x69
0x21e: THROW 
0x21f: JUMPDEST 
0x220: V135 = 0xd6
---
Entry stack: [V118]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: []

================================

Block 0x223
[0x223:0x289]
---
Predecessors: [0x21b]
Successors: [0x28a]
---
0x223 JUMPDEST
0x224 NUMBER
0x225 PUSH32 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x246 CALLER
0x247 CALLVALUE
0x248 TIMESTAMP
0x249 PUSH1 0x40
0x24b MLOAD
0x24c DUP1
0x24d DUP5
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 DUP2
0x265 MSTORE
0x266 PUSH1 0x20
0x268 ADD
0x269 DUP4
0x26a DUP2
0x26b MSTORE
0x26c PUSH1 0x20
0x26e ADD
0x26f DUP3
0x270 DUP2
0x271 MSTORE
0x272 PUSH1 0x20
0x274 ADD
0x275 SWAP4
0x276 POP
0x277 POP
0x278 POP
0x279 POP
0x27a PUSH1 0x40
0x27c MLOAD
0x27d DUP1
0x27e SWAP2
0x27f SUB
0x280 SWAP1
0x281 LOG2
0x282 PUSH2 0xd3
0x285 PUSH2 0x2f3
0x288 JUMP
0x289 JUMPDEST
---
0x223: JUMPDEST 
0x224: V136 = NUMBER
0x225: V137 = 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x246: V138 = CALLER
0x247: V139 = CALLVALUE
0x248: V140 = TIMESTAMP
0x249: V141 = 0x40
0x24b: V142 = M[0x40]
0x24e: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x265: M[V142] = V144
0x266: V145 = 0x20
0x268: V146 = ADD 0x20 V142
0x26b: M[V146] = V139
0x26c: V147 = 0x20
0x26e: V148 = ADD 0x20 V146
0x271: M[V148] = V140
0x272: V149 = 0x20
0x274: V150 = ADD 0x20 V148
0x27a: V151 = 0x40
0x27c: V152 = M[0x40]
0x27f: V153 = SUB V150 V152
0x281: LOG V152 V153 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db V136
0x282: V154 = 0xd3
0x285: V155 = 0x2f3
0x288: THROW 
0x289: JUMPDEST 
---
Entry stack: [0xd6]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: []

================================

Block 0x28a
[0x28a:0x374]
---
Predecessors: [0x223]
Successors: [0x375]
---
0x28a JUMPDEST
0x28b JUMP
0x28c JUMPDEST
0x28d STOP
0x28e JUMPDEST
0x28f PUSH2 0xee
0x292 PUSH1 0x4
0x294 DUP1
0x295 DUP1
0x296 CALLDATALOAD
0x297 SWAP1
0x298 PUSH1 0x20
0x29a ADD
0x29b SWAP1
0x29c SWAP2
0x29d SWAP1
0x29e POP
0x29f POP
0x2a0 PUSH2 0x168
0x2a3 JUMP
0x2a4 JUMPDEST
0x2a5 STOP
0x2a6 JUMPDEST
0x2a7 PUSH2 0xfd
0x2aa PUSH1 0x4
0x2ac DUP1
0x2ad POP
0x2ae POP
0x2af PUSH2 0x1f7
0x2b2 JUMP
0x2b3 JUMPDEST
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 DUP1
0x2b8 DUP3
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x20
0x2d3 ADD
0x2d4 SWAP2
0x2d5 POP
0x2d6 POP
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da DUP1
0x2db SWAP2
0x2dc SUB
0x2dd SWAP1
0x2de RETURN
0x2df JUMPDEST
0x2e0 PUSH2 0x136
0x2e3 PUSH1 0x4
0x2e5 DUP1
0x2e6 POP
0x2e7 POP
0x2e8 PUSH2 0x2f3
0x2eb JUMP
0x2ec JUMPDEST
0x2ed STOP
0x2ee JUMPDEST
0x2ef PUSH2 0x14e
0x2f2 PUSH1 0x4
0x2f4 DUP1
0x2f5 DUP1
0x2f6 CALLDATALOAD
0x2f7 SWAP1
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP1
0x2fc SWAP2
0x2fd SWAP1
0x2fe POP
0x2ff POP
0x300 PUSH2 0x264
0x303 JUMP
0x304 JUMPDEST
0x305 STOP
0x306 JUMPDEST
0x307 PUSH2 0x166
0x30a PUSH1 0x4
0x30c DUP1
0x30d DUP1
0x30e CALLDATALOAD
0x30f SWAP1
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP1
0x314 SWAP2
0x315 SWAP1
0x316 POP
0x317 POP
0x318 PUSH2 0x362
0x31b JUMP
0x31c JUMPDEST
0x31d STOP
0x31e JUMPDEST
0x31f PUSH1 0x0
0x321 PUSH1 0x0
0x323 SWAP1
0x324 SLOAD
0x325 SWAP1
0x326 PUSH2 0x100
0x329 EXP
0x32a SWAP1
0x32b DIV
0x32c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x341 AND
0x342 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x357 AND
0x358 CALLER
0x359 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36e AND
0x36f EQ
0x370 ISZERO
0x371 PUSH2 0x1ee
0x374 JUMPI
---
0x28a: JUMPDEST 
0x28b: JUMP S0
0x28c: JUMPDEST 
0x28d: STOP 
0x28e: JUMPDEST 
0x28f: V156 = 0xee
0x292: V157 = 0x4
0x296: V158 = CALLDATALOAD 0x4
0x298: V159 = 0x20
0x29a: V160 = ADD 0x20 0x4
0x2a0: V161 = 0x168
0x2a3: THROW 
0x2a4: JUMPDEST 
0x2a5: STOP 
0x2a6: JUMPDEST 
0x2a7: V162 = 0xfd
0x2aa: V163 = 0x4
0x2af: V164 = 0x1f7
0x2b2: THROW 
0x2b3: JUMPDEST 
0x2b4: V165 = 0x40
0x2b6: V166 = M[0x40]
0x2b9: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2d0: M[V166] = V168
0x2d1: V169 = 0x20
0x2d3: V170 = ADD 0x20 V166
0x2d7: V171 = 0x40
0x2d9: V172 = M[0x40]
0x2dc: V173 = SUB V170 V172
0x2de: RETURN V172 V173
0x2df: JUMPDEST 
0x2e0: V174 = 0x136
0x2e3: V175 = 0x4
0x2e8: V176 = 0x2f3
0x2eb: THROW 
0x2ec: JUMPDEST 
0x2ed: STOP 
0x2ee: JUMPDEST 
0x2ef: V177 = 0x14e
0x2f2: V178 = 0x4
0x2f6: V179 = CALLDATALOAD 0x4
0x2f8: V180 = 0x20
0x2fa: V181 = ADD 0x20 0x4
0x300: V182 = 0x264
0x303: THROW 
0x304: JUMPDEST 
0x305: STOP 
0x306: JUMPDEST 
0x307: V183 = 0x166
0x30a: V184 = 0x4
0x30e: V185 = CALLDATALOAD 0x4
0x310: V186 = 0x20
0x312: V187 = ADD 0x20 0x4
0x318: V188 = 0x362
0x31b: THROW 
0x31c: JUMPDEST 
0x31d: STOP 
0x31e: JUMPDEST 
0x31f: V189 = 0x0
0x321: V190 = 0x0
0x324: V191 = S[0x0]
0x326: V192 = 0x100
0x329: V193 = EXP 0x100 0x0
0x32b: V194 = DIV V191 0x1
0x32c: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x341: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x342: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x357: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x358: V199 = CALLER
0x359: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x36f: V202 = EQ V201 V198
0x370: V203 = ISZERO V202
0x371: V204 = 0x1ee
0x374: THROWI V203
---
Entry stack: []
Stack pops: 2892
Stack additions: []
Exit stack: []

================================

Block 0x375
[0x375:0x3a9]
---
Predecessors: [0x28a]
Successors: [0x3aa]
---
0x375 DUP1
0x376 PUSH1 0x1
0x378 PUSH1 0x0
0x37a PUSH2 0x100
0x37d EXP
0x37e DUP2
0x37f SLOAD
0x380 DUP2
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 MUL
0x397 NOT
0x398 AND
0x399 SWAP1
0x39a DUP4
0x39b MUL
0x39c OR
0x39d SWAP1
0x39e SSTORE
0x39f POP
0x3a0 PUSH2 0x1f3
0x3a3 JUMP
0x3a4 JUMPDEST
0x3a5 PUSH2 0x2
0x3a8 JUMP
0x3a9 JUMPDEST
---
0x376: V205 = 0x1
0x378: V206 = 0x0
0x37a: V207 = 0x100
0x37d: V208 = EXP 0x100 0x0
0x37f: V209 = S[0x1]
0x381: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V211 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x397: V212 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x398: V213 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V209
0x39b: V214 = MUL S0 0x1
0x39c: V215 = OR V214 V213
0x39e: S[0x1] = V215
0x3a0: V216 = 0x1f3
0x3a3: THROW 
0x3a4: JUMPDEST 
0x3a5: V217 = 0x2
0x3a8: THROW 
0x3a9: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x3aa
[0x3aa:0x405]
---
Predecessors: [0x375]
Successors: [0x406]
---
0x3aa JUMPDEST
0x3ab POP
0x3ac JUMP
0x3ad JUMPDEST
0x3ae PUSH1 0x0
0x3b0 PUSH1 0x0
0x3b2 PUSH1 0x0
0x3b4 SWAP1
0x3b5 SLOAD
0x3b6 SWAP1
0x3b7 PUSH2 0x100
0x3ba EXP
0x3bb SWAP1
0x3bc DIV
0x3bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d2 AND
0x3d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e8 AND
0x3e9 CALLER
0x3ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ff AND
0x400 EQ
0x401 ISZERO
0x402 PUSH2 0x25b
0x405 JUMPI
---
0x3aa: JUMPDEST 
0x3ac: JUMP S1
0x3ad: JUMPDEST 
0x3ae: V218 = 0x0
0x3b0: V219 = 0x0
0x3b2: V220 = 0x0
0x3b5: V221 = S[0x0]
0x3b7: V222 = 0x100
0x3ba: V223 = EXP 0x100 0x0
0x3bc: V224 = DIV V221 0x1
0x3bd: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3d3: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x3e9: V229 = CALLER
0x3ea: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x400: V232 = EQ V231 V228
0x401: V233 = ISZERO V232
0x402: V234 = 0x25b
0x405: THROWI V233
---
Entry stack: []
Stack pops: 4
Stack additions: [0x0]
Exit stack: []

================================

Block 0x406
[0x406:0x416]
---
Predecessors: [0x3aa]
Successors: [0x417]
---
0x406 DUP1
0x407 SWAP1
0x408 POP
0x409 PUSH2 0x261
0x40c JUMP
0x40d PUSH2 0x260
0x410 JUMP
0x411 JUMPDEST
0x412 PUSH2 0x2
0x415 JUMP
0x416 JUMPDEST
---
0x409: V235 = 0x261
0x40c: THROW 
0x40d: V236 = 0x260
0x410: THROW 
0x411: JUMPDEST 
0x412: V237 = 0x2
0x415: THROW 
0x416: JUMPDEST 
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x417
[0x417:0x470]
---
Predecessors: [0x406]
Successors: [0x471]
---
0x417 JUMPDEST
0x418 SWAP1
0x419 JUMP
0x41a JUMPDEST
0x41b PUSH1 0x0
0x41d PUSH1 0x0
0x41f SWAP1
0x420 SLOAD
0x421 SWAP1
0x422 PUSH2 0x100
0x425 EXP
0x426 SWAP1
0x427 DIV
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 CALLER
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b EQ
0x46c ISZERO
0x46d PUSH2 0x2ea
0x470 JUMPI
---
0x417: JUMPDEST 
0x419: JUMP S1
0x41a: JUMPDEST 
0x41b: V238 = 0x0
0x41d: V239 = 0x0
0x420: V240 = S[0x0]
0x422: V241 = 0x100
0x425: V242 = EXP 0x100 0x0
0x427: V243 = DIV V240 0x1
0x428: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x43e: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x454: V248 = CALLER
0x455: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x46b: V251 = EQ V250 V247
0x46c: V252 = ISZERO V251
0x46d: V253 = 0x2ea
0x470: THROWI V252
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x471
[0x471:0x4a5]
---
Predecessors: [0x417]
Successors: [0x4a6]
---
0x471 DUP1
0x472 PUSH1 0x0
0x474 PUSH1 0x0
0x476 PUSH2 0x100
0x479 EXP
0x47a DUP2
0x47b SLOAD
0x47c DUP2
0x47d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x492 MUL
0x493 NOT
0x494 AND
0x495 SWAP1
0x496 DUP4
0x497 MUL
0x498 OR
0x499 SWAP1
0x49a SSTORE
0x49b POP
0x49c PUSH2 0x2ef
0x49f JUMP
0x4a0 JUMPDEST
0x4a1 PUSH2 0x2
0x4a4 JUMP
0x4a5 JUMPDEST
---
0x472: V254 = 0x0
0x474: V255 = 0x0
0x476: V256 = 0x100
0x479: V257 = EXP 0x100 0x0
0x47b: V258 = S[0x0]
0x47d: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x492: V260 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x493: V261 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x494: V262 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V258
0x497: V263 = MUL S0 0x1
0x498: V264 = OR V263 V262
0x49a: S[0x0] = V264
0x49c: V265 = 0x2ef
0x49f: THROW 
0x4a0: JUMPDEST 
0x4a1: V266 = 0x2
0x4a4: THROW 
0x4a5: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x4a6
[0x4a6:0x515]
---
Predecessors: [0x471]
Successors: [0x516]
---
0x4a6 JUMPDEST
0x4a7 POP
0x4a8 JUMP
0x4a9 JUMPDEST
0x4aa PUSH1 0x1
0x4ac PUSH1 0x0
0x4ae SWAP1
0x4af SLOAD
0x4b0 SWAP1
0x4b1 PUSH2 0x100
0x4b4 EXP
0x4b5 SWAP1
0x4b6 DIV
0x4b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cc AND
0x4cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e2 AND
0x4e3 PUSH1 0x0
0x4e5 ADDRESS
0x4e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fb AND
0x4fc BALANCE
0x4fd PUSH1 0x40
0x4ff MLOAD
0x500 DUP1
0x501 SWAP1
0x502 POP
0x503 PUSH1 0x0
0x505 PUSH1 0x40
0x507 MLOAD
0x508 DUP1
0x509 DUP4
0x50a SUB
0x50b DUP2
0x50c DUP6
0x50d DUP9
0x50e DUP9
0x50f CALL
0x510 SWAP4
0x511 POP
0x512 POP
0x513 POP
0x514 POP
0x515 POP
---
0x4a6: JUMPDEST 
0x4a8: JUMP S1
0x4a9: JUMPDEST 
0x4aa: V267 = 0x1
0x4ac: V268 = 0x0
0x4af: V269 = S[0x1]
0x4b1: V270 = 0x100
0x4b4: V271 = EXP 0x100 0x0
0x4b6: V272 = DIV V269 0x1
0x4b7: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x4cd: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x4e3: V277 = 0x0
0x4e5: V278 = ADDRESS
0x4e6: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4fc: V281 = BALANCE V280
0x4fd: V282 = 0x40
0x4ff: V283 = M[0x40]
0x503: V284 = 0x0
0x505: V285 = 0x40
0x507: V286 = M[0x40]
0x50a: V287 = SUB V283 V286
0x50f: V288 = CALL 0x0 V276 V281 V286 V287 V286 0x0
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x516
[0x516:0x56e]
---
Predecessors: [0x4a6]
Successors: [0x56f]
---
0x516 JUMPDEST
0x517 JUMP
0x518 JUMPDEST
0x519 PUSH1 0x0
0x51b PUSH1 0x0
0x51d SWAP1
0x51e SLOAD
0x51f SWAP1
0x520 PUSH2 0x100
0x523 EXP
0x524 SWAP1
0x525 DIV
0x526 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53b AND
0x53c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x551 AND
0x552 CALLER
0x553 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x568 AND
0x569 EQ
0x56a ISZERO
0x56b PUSH2 0x42a
0x56e JUMPI
---
0x516: JUMPDEST 
0x517: JUMP S0
0x518: JUMPDEST 
0x519: V289 = 0x0
0x51b: V290 = 0x0
0x51e: V291 = S[0x0]
0x520: V292 = 0x100
0x523: V293 = EXP 0x100 0x0
0x525: V294 = DIV V291 0x1
0x526: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x53c: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x551: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x552: V299 = CALLER
0x553: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x568: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x569: V302 = EQ V301 V298
0x56a: V303 = ISZERO V302
0x56b: V304 = 0x42a
0x56e: THROWI V303
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x56f
[0x56f:0x5e5]
---
Predecessors: [0x516]
Successors: [0x5e6]
---
0x56f PUSH32 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x590 ADDRESS
0x591 TIMESTAMP
0x592 PUSH1 0x40
0x594 MLOAD
0x595 DUP1
0x596 DUP4
0x597 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ac AND
0x5ad DUP2
0x5ae MSTORE
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 DUP3
0x5b3 DUP2
0x5b4 MSTORE
0x5b5 PUSH1 0x20
0x5b7 ADD
0x5b8 SWAP3
0x5b9 POP
0x5ba POP
0x5bb POP
0x5bc PUSH1 0x40
0x5be MLOAD
0x5bf DUP1
0x5c0 SWAP2
0x5c1 SUB
0x5c2 SWAP1
0x5c3 LOG1
0x5c4 DUP1
0x5c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5da AND
0x5db SELFDESTRUCT
0x5dc PUSH2 0x42f
0x5df JUMP
0x5e0 JUMPDEST
0x5e1 PUSH2 0x2
0x5e4 JUMP
0x5e5 JUMPDEST
---
0x56f: V305 = 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x590: V306 = ADDRESS
0x591: V307 = TIMESTAMP
0x592: V308 = 0x40
0x594: V309 = M[0x40]
0x597: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x5ae: M[V309] = V311
0x5af: V312 = 0x20
0x5b1: V313 = ADD 0x20 V309
0x5b4: M[V313] = V307
0x5b5: V314 = 0x20
0x5b7: V315 = ADD 0x20 V313
0x5bc: V316 = 0x40
0x5be: V317 = M[0x40]
0x5c1: V318 = SUB V315 V317
0x5c3: LOG V317 V318 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x5c5: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x5da: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5db: SELFDESTRUCT V320
0x5dc: V321 = 0x42f
0x5df: THROW 
0x5e0: JUMPDEST 
0x5e1: V322 = 0x2
0x5e4: THROW 
0x5e5: JUMPDEST 
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x5e6
[0x5e6:0x5e8]
---
Predecessors: [0x56f]
Successors: []
Has unresolved jump.
---
0x5e6 JUMPDEST
0x5e7 POP
0x5e8 JUMP
---
0x5e6: JUMPDEST 
0x5e8: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x3ac8f090
Entry block: 0x4f
Exit block: 0x5c
Body: 0x4f, 0x5c, 0x136, 0x162

Function 1:
Public function signature: 0x4fbe69fe
Entry block: 0x88
Exit block: 0x95
Body: 0x88, 0x95, 0xba, 0x134

Function 2:
Public function signature: 0x70961774
Entry block: 0x97
Exit block: 0xa4
Body: 0x97, 0xa4, 0x165, 0x174

Function 3:
Public fallback function
Entry block: 0x49
Exit block: 0x4d
Body: 0x49, 0x4d

