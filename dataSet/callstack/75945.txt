Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3afedefc
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3afedefc
0x3c: V13 = EQ 0x3afedefc V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xda]
---
0x41 DUP1
0x42 PUSH4 0x5a463f8b
0x47 EQ
0x48 PUSH2 0xda
0x4b JUMPI
---
0x42: V15 = 0x5a463f8b
0x47: V16 = EQ 0x5a463f8b V11
0x48: V17 = 0xda
0x4b: JUMPI 0xda V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0xd7]
---
Predecessors: [0x51]
Successors: [0x11d]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0xd8
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP3
0x89 SWAP2
0x8a SWAP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 DUP3
0x93 ADD
0x94 DUP1
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b DUP1
0x9c DUP1
0x9d PUSH1 0x1f
0x9f ADD
0xa0 PUSH1 0x20
0xa2 DUP1
0xa3 SWAP2
0xa4 DIV
0xa5 MUL
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 PUSH1 0x40
0xab MLOAD
0xac SWAP1
0xad DUP2
0xae ADD
0xaf PUSH1 0x40
0xb1 MSTORE
0xb2 DUP1
0xb3 SWAP4
0xb4 SWAP3
0xb5 SWAP2
0xb6 SWAP1
0xb7 DUP2
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x20
0xbc ADD
0xbd DUP4
0xbe DUP4
0xbf DUP1
0xc0 DUP3
0xc1 DUP5
0xc2 CALLDATACOPY
0xc3 DUP3
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca POP
0xcb POP
0xcc SWAP2
0xcd SWAP3
0xce SWAP2
0xcf SWAP3
0xd0 SWAP1
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 PUSH2 0x11d
0xd7 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0xd8
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6d: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x84: V31 = 0x20
0x86: V32 = ADD 0x20 0x4
0x8c: V33 = CALLDATALOAD 0x24
0x8e: V34 = 0x20
0x90: V35 = ADD 0x20 0x24
0x93: V36 = ADD 0x4 V33
0x95: V37 = CALLDATALOAD V36
0x97: V38 = 0x20
0x99: V39 = ADD 0x20 V36
0x9d: V40 = 0x1f
0x9f: V41 = ADD 0x1f V37
0xa0: V42 = 0x20
0xa4: V43 = DIV V41 0x20
0xa5: V44 = MUL V43 0x20
0xa6: V45 = 0x20
0xa8: V46 = ADD 0x20 V44
0xa9: V47 = 0x40
0xab: V48 = M[0x40]
0xae: V49 = ADD V48 V46
0xaf: V50 = 0x40
0xb1: M[0x40] = V49
0xb9: M[V48] = V37
0xba: V51 = 0x20
0xbc: V52 = ADD 0x20 V48
0xc2: CALLDATACOPY V52 V39 V37
0xc4: V53 = ADD V52 V37
0xd4: V54 = 0x11d
0xd7: JUMP 0x11d
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0xd8, V30, V48]
Exit stack: [V11, 0xd8, V30, V48]

================================

Block 0xd8
[0xd8:0xd9]
---
Predecessors: [0x18f]
Successors: []
---
0xd8 JUMPDEST
0xd9 STOP
---
0xd8: JUMPDEST 
0xd9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x41]
Successors: [0xe2, 0xe6]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xda: JUMPDEST 
0xdb: V55 = CALLVALUE
0xdd: V56 = ISZERO V55
0xde: V57 = 0xe6
0xe1: JUMPI 0xe6 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xda]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V58 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xe6
[0xe6:0x11a]
---
Predecessors: [0xda]
Successors: [0x1a9]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 PUSH2 0x11b
0xeb PUSH1 0x4
0xed DUP1
0xee CALLDATASIZE
0xef SUB
0xf0 DUP2
0xf1 ADD
0xf2 SWAP1
0xf3 DUP1
0xf4 DUP1
0xf5 CALLDATALOAD
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 SWAP3
0x112 SWAP2
0x113 SWAP1
0x114 POP
0x115 POP
0x116 POP
0x117 PUSH2 0x1a9
0x11a JUMP
---
0xe6: JUMPDEST 
0xe8: V59 = 0x11b
0xeb: V60 = 0x4
0xee: V61 = CALLDATASIZE
0xef: V62 = SUB V61 0x4
0xf1: V63 = ADD 0x4 V62
0xf5: V64 = CALLDATALOAD 0x4
0xf6: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x10d: V67 = 0x20
0x10f: V68 = ADD 0x20 0x4
0x117: V69 = 0x1a9
0x11a: JUMP 0x1a9
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0x11b, V66]
Exit stack: [V11, 0x11b, V66]

================================

Block 0x11b
[0x11b:0x11c]
---
Predecessors: []
Successors: []
---
0x11b JUMPDEST
0x11c STOP
---
0x11b: JUMPDEST 
0x11c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11d
[0x11d:0x146]
---
Predecessors: [0x5d]
Successors: [0x147]
---
0x11d JUMPDEST
0x11e DUP2
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 DUP2
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a DUP3
0x13b DUP1
0x13c MLOAD
0x13d SWAP1
0x13e PUSH1 0x20
0x140 ADD
0x141 SWAP1
0x142 DUP1
0x143 DUP4
0x144 DUP4
0x145 PUSH1 0x0
---
0x11d: JUMPDEST 
0x11f: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x136: V72 = 0x40
0x138: V73 = M[0x40]
0x13c: V74 = M[V48]
0x13e: V75 = 0x20
0x140: V76 = ADD 0x20 V48
0x145: V77 = 0x0
---
Entry stack: [V11, 0xd8, V30, V48]
Stack pops: 2
Stack additions: [S1, S0, V71, S0, V73, V73, V76, V74, V74, V73, V76, 0x0]
Exit stack: [V11, 0xd8, V30, V48, V71, V48, V73, V73, V76, V74, V74, V73, V76, 0x0]

================================

Block 0x147
[0x147:0x14f]
---
Predecessors: [0x11d, 0x150]
Successors: [0x150, 0x162]
---
0x147 JUMPDEST
0x148 DUP4
0x149 DUP2
0x14a LT
0x14b ISZERO
0x14c PUSH2 0x162
0x14f JUMPI
---
0x147: JUMPDEST 
0x14a: V78 = LT S0 V74
0x14b: V79 = ISZERO V78
0x14c: V80 = 0x162
0x14f: JUMPI 0x162 V79
---
Entry stack: [V11, 0xd8, V30, V48, V71, V48, V73, V73, V76, V74, V74, V73, V76, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xd8, V30, V48, V71, V48, V73, V73, V76, V74, V74, V73, V76, S0]

================================

Block 0x150
[0x150:0x161]
---
Predecessors: [0x147]
Successors: [0x147]
---
0x150 DUP1
0x151 DUP3
0x152 ADD
0x153 MLOAD
0x154 DUP2
0x155 DUP5
0x156 ADD
0x157 MSTORE
0x158 PUSH1 0x20
0x15a DUP2
0x15b ADD
0x15c SWAP1
0x15d POP
0x15e PUSH2 0x147
0x161 JUMP
---
0x152: V81 = ADD V76 S0
0x153: V82 = M[V81]
0x156: V83 = ADD V73 S0
0x157: M[V83] = V82
0x158: V84 = 0x20
0x15b: V85 = ADD S0 0x20
0x15e: V86 = 0x147
0x161: JUMP 0x147
---
Entry stack: [V11, 0xd8, V30, V48, V71, V48, V73, V73, V76, V74, V74, V73, V76, S0]
Stack pops: 3
Stack additions: [S2, S1, V85]
Exit stack: [V11, 0xd8, V30, V48, V71, V48, V73, V73, V76, V74, V74, V73, V76, V85]

================================

Block 0x162
[0x162:0x175]
---
Predecessors: [0x147]
Successors: [0x176, 0x18f]
---
0x162 JUMPDEST
0x163 POP
0x164 POP
0x165 POP
0x166 POP
0x167 SWAP1
0x168 POP
0x169 SWAP1
0x16a DUP2
0x16b ADD
0x16c SWAP1
0x16d PUSH1 0x1f
0x16f AND
0x170 DUP1
0x171 ISZERO
0x172 PUSH2 0x18f
0x175 JUMPI
---
0x162: JUMPDEST 
0x16b: V87 = ADD V74 V73
0x16d: V88 = 0x1f
0x16f: V89 = AND 0x1f V74
0x171: V90 = ISZERO V89
0x172: V91 = 0x18f
0x175: JUMPI 0x18f V90
---
Entry stack: [V11, 0xd8, V30, V48, V71, V48, V73, V73, V76, V74, V74, V73, V76, S0]
Stack pops: 7
Stack additions: [V87, V89]
Exit stack: [V11, 0xd8, V30, V48, V71, V48, V73, V87, V89]

================================

Block 0x176
[0x176:0x18e]
---
Predecessors: [0x162]
Successors: [0x18f]
---
0x176 DUP1
0x177 DUP3
0x178 SUB
0x179 DUP1
0x17a MLOAD
0x17b PUSH1 0x1
0x17d DUP4
0x17e PUSH1 0x20
0x180 SUB
0x181 PUSH2 0x100
0x184 EXP
0x185 SUB
0x186 NOT
0x187 AND
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP2
0x18e POP
---
0x178: V92 = SUB V87 V89
0x17a: V93 = M[V92]
0x17b: V94 = 0x1
0x17e: V95 = 0x20
0x180: V96 = SUB 0x20 V89
0x181: V97 = 0x100
0x184: V98 = EXP 0x100 V96
0x185: V99 = SUB V98 0x1
0x186: V100 = NOT V99
0x187: V101 = AND V100 V93
0x189: M[V92] = V101
0x18a: V102 = 0x20
0x18c: V103 = ADD 0x20 V92
---
Entry stack: [V11, 0xd8, V30, V48, V71, V48, V73, V87, V89]
Stack pops: 2
Stack additions: [V103, S0]
Exit stack: [V11, 0xd8, V30, V48, V71, V48, V73, V103, V89]

================================

Block 0x18f
[0x18f:0x1a8]
---
Predecessors: [0x162, 0x176]
Successors: [0xd8]
---
0x18f JUMPDEST
0x190 POP
0x191 SWAP2
0x192 POP
0x193 POP
0x194 PUSH1 0x0
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a DUP4
0x19b SUB
0x19c DUP2
0x19d PUSH1 0x0
0x19f DUP7
0x1a0 GAS
0x1a1 CALL
0x1a2 SWAP2
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 JUMP
---
0x18f: JUMPDEST 
0x194: V104 = 0x0
0x196: V105 = 0x40
0x198: V106 = M[0x40]
0x19b: V107 = SUB S1 V106
0x19d: V108 = 0x0
0x1a0: V109 = GAS
0x1a1: V110 = CALL V109 V71 0x0 V106 V107 V106 0x0
0x1a8: JUMP 0xd8
---
Entry stack: [V11, 0xd8, V30, V48, V71, V48, V73, S1, V89]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a9
[0x1a9:0x1ff]
---
Predecessors: [0xe6]
Successors: [0x200, 0x204]
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad SWAP1
0x1ae SLOAD
0x1af SWAP1
0x1b0 PUSH2 0x100
0x1b3 EXP
0x1b4 SWAP1
0x1b5 DIV
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb AND
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 CALLER
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 EQ
0x1fa ISZERO
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V111 = 0x0
0x1ae: V112 = S[0x0]
0x1b0: V113 = 0x100
0x1b3: V114 = EXP 0x100 0x0
0x1b5: V115 = DIV V112 0x1
0x1b6: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1cc: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1e2: V120 = CALLER
0x1e3: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1f9: V123 = EQ V122 V119
0x1fa: V124 = ISZERO V123
0x1fb: V125 = ISZERO V124
0x1fc: V126 = 0x204
0x1ff: JUMPI 0x204 V125
---
Entry stack: [V11, 0x11b, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11b, V66]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1a9]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V127 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11b, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11b, V66]

================================

Block 0x204
[0x204:0x257]
---
Predecessors: [0x1a9]
Successors: [0x258, 0x261]
---
0x204 JUMPDEST
0x205 DUP1
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c PUSH2 0x8fc
0x21f ADDRESS
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 BALANCE
0x237 SWAP1
0x238 DUP2
0x239 ISZERO
0x23a MUL
0x23b SWAP1
0x23c PUSH1 0x40
0x23e MLOAD
0x23f PUSH1 0x0
0x241 PUSH1 0x40
0x243 MLOAD
0x244 DUP1
0x245 DUP4
0x246 SUB
0x247 DUP2
0x248 DUP6
0x249 DUP9
0x24a DUP9
0x24b CALL
0x24c SWAP4
0x24d POP
0x24e POP
0x24f POP
0x250 POP
0x251 ISZERO
0x252 DUP1
0x253 ISZERO
0x254 PUSH2 0x261
0x257 JUMPI
---
0x204: JUMPDEST 
0x206: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x21c: V130 = 0x8fc
0x21f: V131 = ADDRESS
0x220: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x236: V134 = BALANCE V133
0x239: V135 = ISZERO V134
0x23a: V136 = MUL V135 0x8fc
0x23c: V137 = 0x40
0x23e: V138 = M[0x40]
0x23f: V139 = 0x0
0x241: V140 = 0x40
0x243: V141 = M[0x40]
0x246: V142 = SUB V138 V141
0x24b: V143 = CALL V136 V129 V134 V141 V142 V141 0x0
0x251: V144 = ISZERO V143
0x253: V145 = ISZERO V144
0x254: V146 = 0x261
0x257: JUMPI 0x261 V145
---
Entry stack: [V11, 0x11b, V66]
Stack pops: 1
Stack additions: [S0, V144]
Exit stack: [V11, 0x11b, V66, V144]

================================

Block 0x258
[0x258:0x260]
---
Predecessors: [0x204]
Successors: []
---
0x258 RETURNDATASIZE
0x259 PUSH1 0x0
0x25b DUP1
0x25c RETURNDATACOPY
0x25d RETURNDATASIZE
0x25e PUSH1 0x0
0x260 REVERT
---
0x258: V147 = RETURNDATASIZE
0x259: V148 = 0x0
0x25c: RETURNDATACOPY 0x0 0x0 V147
0x25d: V149 = RETURNDATASIZE
0x25e: V150 = 0x0
0x260: REVERT 0x0 V149
---
Entry stack: [V11, 0x11b, V66, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11b, V66, V144]

================================

Block 0x261
[0x261:0x27a]
---
Predecessors: [0x204]
Successors: []
---
0x261 JUMPDEST
0x262 POP
0x263 DUP1
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 AND
0x27a SELFDESTRUCT
---
0x261: JUMPDEST 
0x264: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x27a: SELFDESTRUCT V152
---
Entry stack: [V11, 0x11b, V66, V144]
Stack pops: 2
Stack additions: [S1]
Exit stack: [V11, 0x11b, V66]

================================

Block 0x27b
[0x27b:0x2a6]
---
Predecessors: []
Successors: []
---
0x27b STOP
0x27c LOG1
0x27d PUSH6 0x627a7a723058
0x284 SHA3
0x285 PUSH7 0x69d0243c7e82fc
0x28d EXTCODEHASH
0x28e MISSING 0xc5
0x28f MISSING 0xc3
0x290 MISSING 0x46
0x291 GASPRICE
0x292 MISSING 0xae
0x293 MISSING 0x47
0x294 MISSING 0xb6
0x295 ADD
0x296 MISSING 0x25
0x297 CALLVALUE
0x298 MISSING 0xc5
0x299 MISSING 0xd3
0x29a MISSING 0xc1
0x29b DUP3
0x29c MISSING 0xc
0x29d EXP
0x29e MISSING 0xad
0x29f GT
0x2a0 DELEGATECALL
0x2a1 MISSING 0xda
0x2a2 DUP7
0x2a3 ADDMOD
0x2a4 COINBASE
0x2a5 STOP
0x2a6 MISSING 0x29
---
0x27b: STOP 
0x27c: LOG S0 S1 S2
0x27d: V153 = 0x627a7a723058
0x284: V154 = SHA3 0x627a7a723058 S3
0x285: V155 = 0x69d0243c7e82fc
0x28d: V156 = EXTCODEHASH 0x69d0243c7e82fc
0x28e: MISSING 0xc5
0x28f: MISSING 0xc3
0x290: MISSING 0x46
0x291: V157 = GASPRICE
0x292: MISSING 0xae
0x293: MISSING 0x47
0x294: MISSING 0xb6
0x295: V158 = ADD S0 S1
0x296: MISSING 0x25
0x297: V159 = CALLVALUE
0x298: MISSING 0xc5
0x299: MISSING 0xd3
0x29a: MISSING 0xc1
0x29c: MISSING 0xc
0x29d: V160 = EXP S0 S1
0x29e: MISSING 0xad
0x29f: V161 = GT S0 S1
0x2a0: V162 = DELEGATECALL V161 S2 S3 S4 S5 S6
0x2a1: MISSING 0xda
0x2a3: V163 = ADDMOD S6 S0 S1
0x2a4: V164 = COINBASE
0x2a5: STOP 
0x2a6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V156, V154, V157, V158, V159, S2, S0, S1, S2, V160, V162, V164, V163, S2, S3, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x3afedefc
Entry block: 0x51
Exit block: 0xd8
Body: 0x51, 0x59, 0x5d, 0xd8, 0x11d, 0x147, 0x150, 0x162, 0x176, 0x18f

Function 1:
Public function signature: 0x5a463f8b
Entry block: 0xda
Exit block: 0x258
Body: 0xda, 0xe2, 0xe6, 0x1a9, 0x200, 0x204, 0x258, 0x261

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

