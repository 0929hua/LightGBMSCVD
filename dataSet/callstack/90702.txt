Block 0x0
[0x0:0x2e]
---
Predecessors: []
Successors: [0x2f, 0x33]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 PUSH7 0x2386f26fc10000
0x10 CALLER
0x11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26 AND
0x27 LT
0x28 ISZERO
0x29 ISZERO
0x2a ISZERO
0x2b PUSH2 0x33
0x2e JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x0
0x8: V3 = 0x2386f26fc10000
0x10: V4 = CALLER
0x11: V5 = 0xffffffffffffffffffffffffffffffffffffffff
0x26: V6 = AND 0xffffffffffffffffffffffffffffffffffffffff V4
0x27: V7 = LT V6 0x2386f26fc10000
0x28: V8 = ISZERO V7
0x29: V9 = ISZERO V8
0x2a: V10 = ISZERO V9
0x2b: V11 = 0x33
0x2e: JUMPI 0x33 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [0x0, 0x0]

================================

Block 0x2f
[0x2f:0x32]
---
Predecessors: [0x0]
Successors: []
---
0x2f PUSH1 0x0
0x31 DUP1
0x32 REVERT
---
0x2f: V12 = 0x0
0x32: REVERT 0x0 0x0
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, 0x0]

================================

Block 0x33
[0x33:0x7c]
---
Predecessors: [0x0]
Successors: [0x7d, 0x7e]
---
0x33 JUMPDEST
0x34 PUSH1 0x0
0x36 DUP1
0x37 SWAP1
0x38 SLOAD
0x39 SWAP1
0x3a PUSH2 0x100
0x3d EXP
0x3e SWAP1
0x3f DIV
0x40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55 AND
0x56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b AND
0x6c PUSH2 0x8fc
0x6f PUSH1 0x32
0x71 PUSH2 0x14d
0x74 CALLVALUE
0x75 MUL
0x76 DUP2
0x77 ISZERO
0x78 ISZERO
0x79 PUSH2 0x7e
0x7c JUMPI
---
0x33: JUMPDEST 
0x34: V13 = 0x0
0x38: V14 = S[0x0]
0x3a: V15 = 0x100
0x3d: V16 = EXP 0x100 0x0
0x3f: V17 = DIV V14 0x1
0x40: V18 = 0xffffffffffffffffffffffffffffffffffffffff
0x55: V19 = AND 0xffffffffffffffffffffffffffffffffffffffff V17
0x56: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x6c: V22 = 0x8fc
0x6f: V23 = 0x32
0x71: V24 = 0x14d
0x74: V25 = CALLVALUE
0x75: V26 = MUL V25 0x14d
0x77: V27 = ISZERO 0x32
0x78: V28 = ISZERO 0x0
0x79: V29 = 0x7e
0x7c: JUMPI 0x7e 0x1
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V21, 0x8fc, 0x32, V26]
Exit stack: [0x0, 0x0, V21, 0x8fc, 0x32, V26]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x33]
Successors: []
---
0x7d INVALID
---
0x7d: INVALID 
---
Entry stack: [0x0, 0x0, V21, 0x8fc, 0x32, V26]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, 0x0, V21, 0x8fc, 0x32, V26]

================================

Block 0x7e
[0x7e:0xe3]
---
Predecessors: [0x33]
Successors: [0xe4, 0x1bf]
---
0x7e JUMPDEST
0x7f DIV
0x80 SWAP1
0x81 DUP2
0x82 ISZERO
0x83 MUL
0x84 SWAP1
0x85 PUSH1 0x40
0x87 MLOAD
0x88 PUSH1 0x0
0x8a PUSH1 0x40
0x8c MLOAD
0x8d DUP1
0x8e DUP4
0x8f SUB
0x90 DUP2
0x91 DUP6
0x92 DUP9
0x93 DUP9
0x94 CALL
0x95 SWAP4
0x96 POP
0x97 POP
0x98 POP
0x99 POP
0x9a POP
0x9b PUSH1 0x0
0x9d PUSH1 0x1
0x9f PUSH1 0x0
0xa1 CALLER
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd AND
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 PUSH1 0x0
0xdb SHA3
0xdc SLOAD
0xdd EQ
0xde ISZERO
0xdf ISZERO
0xe0 PUSH2 0x1bf
0xe3 JUMPI
---
0x7e: JUMPDEST 
0x7f: V30 = DIV V26 0x32
0x82: V31 = ISZERO V30
0x83: V32 = MUL V31 0x8fc
0x85: V33 = 0x40
0x87: V34 = M[0x40]
0x88: V35 = 0x0
0x8a: V36 = 0x40
0x8c: V37 = M[0x40]
0x8f: V38 = SUB V34 V37
0x94: V39 = CALL V32 V21 V30 V37 V38 V37 0x0
0x9b: V40 = 0x0
0x9d: V41 = 0x1
0x9f: V42 = 0x0
0xa1: V43 = CALLER
0xa2: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xb8: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xcf: M[0x0] = V47
0xd0: V48 = 0x20
0xd2: V49 = ADD 0x20 0x0
0xd5: M[0x20] = 0x1
0xd6: V50 = 0x20
0xd8: V51 = ADD 0x20 0x20
0xd9: V52 = 0x0
0xdb: V53 = SHA3 0x0 0x40
0xdc: V54 = S[V53]
0xdd: V55 = EQ V54 0x0
0xde: V56 = ISZERO V55
0xdf: V57 = ISZERO V56
0xe0: V58 = 0x1bf
0xe3: JUMPI 0x1bf V57
---
Entry stack: [0x0, 0x0, V21, 0x8fc, 0x32, V26]
Stack pops: 4
Stack additions: []
Exit stack: [0x0, 0x0]

================================

Block 0xe4
[0xe4:0x178]
---
Predecessors: [0x7e]
Successors: [0x179, 0x17a]
---
0xe4 CALLER
0xe5 SWAP2
0xe6 POP
0xe7 PUSH2 0x170c
0xea PUSH1 0x2
0xec PUSH1 0x0
0xee CALLER
0xef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104 AND
0x105 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a AND
0x11b DUP2
0x11c MSTORE
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0x20
0x125 ADD
0x126 PUSH1 0x0
0x128 SHA3
0x129 SLOAD
0x12a NUMBER
0x12b SUB
0x12c PUSH2 0x7d0
0x12f PUSH1 0x6f
0x131 PUSH1 0x1
0x133 PUSH1 0x0
0x135 CALLER
0x136 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14b AND
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 AND
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP1
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x20
0x16c ADD
0x16d PUSH1 0x0
0x16f SHA3
0x170 SLOAD
0x171 MUL
0x172 DUP2
0x173 ISZERO
0x174 ISZERO
0x175 PUSH2 0x17a
0x178 JUMPI
---
0xe4: V59 = CALLER
0xe7: V60 = 0x170c
0xea: V61 = 0x2
0xec: V62 = 0x0
0xee: V63 = CALLER
0xef: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x104: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x105: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x11c: M[0x0] = V67
0x11d: V68 = 0x20
0x11f: V69 = ADD 0x20 0x0
0x122: M[0x20] = 0x2
0x123: V70 = 0x20
0x125: V71 = ADD 0x20 0x20
0x126: V72 = 0x0
0x128: V73 = SHA3 0x0 0x40
0x129: V74 = S[V73]
0x12a: V75 = NUMBER
0x12b: V76 = SUB V75 V74
0x12c: V77 = 0x7d0
0x12f: V78 = 0x6f
0x131: V79 = 0x1
0x133: V80 = 0x0
0x135: V81 = CALLER
0x136: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x14c: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x161: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x163: M[0x0] = V85
0x164: V86 = 0x20
0x166: V87 = ADD 0x20 0x0
0x169: M[0x20] = 0x1
0x16a: V88 = 0x20
0x16c: V89 = ADD 0x20 0x20
0x16d: V90 = 0x0
0x16f: V91 = SHA3 0x0 0x40
0x170: V92 = S[V91]
0x171: V93 = MUL V92 0x6f
0x173: V94 = ISZERO 0x7d0
0x174: V95 = ISZERO 0x0
0x175: V96 = 0x17a
0x178: JUMPI 0x17a 0x1
---
Entry stack: [0x0, 0x0]
Stack pops: 2
Stack additions: [V59, S0, 0x170c, V76, 0x7d0, V93]
Exit stack: [V59, 0x0, 0x170c, V76, 0x7d0, V93]

================================

Block 0x179
[0x179:0x179]
---
Predecessors: [0xe4]
Successors: []
---
0x179 INVALID
---
0x179: INVALID 
---
Entry stack: [V59, 0x0, 0x170c, V76, 0x7d0, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V59, 0x0, 0x170c, V76, 0x7d0, V93]

================================

Block 0x17a
[0x17a:0x183]
---
Predecessors: [0xe4]
Successors: [0x184, 0x185]
---
0x17a JUMPDEST
0x17b DIV
0x17c MUL
0x17d DUP2
0x17e ISZERO
0x17f ISZERO
0x180 PUSH2 0x185
0x183 JUMPI
---
0x17a: JUMPDEST 
0x17b: V97 = DIV V93 0x7d0
0x17c: V98 = MUL V97 V76
0x17e: V99 = ISZERO 0x170c
0x17f: V100 = ISZERO 0x0
0x180: V101 = 0x185
0x183: JUMPI 0x185 0x1
---
Entry stack: [V59, 0x0, 0x170c, V76, 0x7d0, V93]
Stack pops: 4
Stack additions: [S3, V98]
Exit stack: [V59, 0x0, 0x170c, V98]

================================

Block 0x184
[0x184:0x184]
---
Predecessors: [0x17a]
Successors: []
---
0x184 INVALID
---
0x184: INVALID 
---
Entry stack: [V59, 0x0, 0x170c, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V59, 0x0, 0x170c, V98]

================================

Block 0x185
[0x185:0x1be]
---
Predecessors: [0x17a]
Successors: [0x1bf]
---
0x185 JUMPDEST
0x186 DIV
0x187 SWAP1
0x188 POP
0x189 DUP2
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 PUSH2 0x8fc
0x1a3 DUP3
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 ISZERO
0x1a7 MUL
0x1a8 SWAP1
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac PUSH1 0x0
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 DUP4
0x1b3 SUB
0x1b4 DUP2
0x1b5 DUP6
0x1b6 DUP9
0x1b7 DUP9
0x1b8 CALL
0x1b9 SWAP4
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd POP
0x1be POP
---
0x185: JUMPDEST 
0x186: V102 = DIV V98 0x170c
0x18a: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x1a0: V105 = 0x8fc
0x1a6: V106 = ISZERO V102
0x1a7: V107 = MUL V106 0x8fc
0x1a9: V108 = 0x40
0x1ab: V109 = M[0x40]
0x1ac: V110 = 0x0
0x1ae: V111 = 0x40
0x1b0: V112 = M[0x40]
0x1b3: V113 = SUB V109 V112
0x1b8: V114 = CALL V107 V104 V102 V112 V113 V112 0x0
---
Entry stack: [V59, 0x0, 0x170c, V98]
Stack pops: 4
Stack additions: [S3, V102]
Exit stack: [V59, V102]

================================

Block 0x1bf
[0x1bf:0x253]
---
Predecessors: [0x7e, 0x185]
Successors: []
---
0x1bf JUMPDEST
0x1c0 NUMBER
0x1c1 PUSH1 0x2
0x1c3 PUSH1 0x0
0x1c5 CALLER
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 DUP2
0x1f3 MSTORE
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 MSTORE
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd PUSH1 0x0
0x1ff SHA3
0x200 DUP2
0x201 SWAP1
0x202 SSTORE
0x203 POP
0x204 CALLVALUE
0x205 PUSH1 0x1
0x207 PUSH1 0x0
0x209 CALLER
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f AND
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b SWAP1
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x20
0x240 ADD
0x241 PUSH1 0x0
0x243 SHA3
0x244 PUSH1 0x0
0x246 DUP3
0x247 DUP3
0x248 SLOAD
0x249 ADD
0x24a SWAP3
0x24b POP
0x24c POP
0x24d DUP2
0x24e SWAP1
0x24f SSTORE
0x250 POP
0x251 POP
0x252 POP
0x253 STOP
---
0x1bf: JUMPDEST 
0x1c0: V115 = NUMBER
0x1c1: V116 = 0x2
0x1c3: V117 = 0x0
0x1c5: V118 = CALLER
0x1c6: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1dc: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1f3: M[0x0] = V122
0x1f4: V123 = 0x20
0x1f6: V124 = ADD 0x20 0x0
0x1f9: M[0x20] = 0x2
0x1fa: V125 = 0x20
0x1fc: V126 = ADD 0x20 0x20
0x1fd: V127 = 0x0
0x1ff: V128 = SHA3 0x0 0x40
0x202: S[V128] = V115
0x204: V129 = CALLVALUE
0x205: V130 = 0x1
0x207: V131 = 0x0
0x209: V132 = CALLER
0x20a: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x220: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x237: M[0x0] = V136
0x238: V137 = 0x20
0x23a: V138 = ADD 0x20 0x0
0x23d: M[0x20] = 0x1
0x23e: V139 = 0x20
0x240: V140 = ADD 0x20 0x20
0x241: V141 = 0x0
0x243: V142 = SHA3 0x0 0x40
0x244: V143 = 0x0
0x248: V144 = S[V142]
0x249: V145 = ADD V144 V129
0x24f: S[V142] = V145
0x253: STOP 
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x254
[0x254:0x282]
---
Predecessors: []
Successors: []
---
0x254 STOP
0x255 LOG1
0x256 PUSH6 0x627a7a723058
0x25d SHA3
0x25e RETURNDATACOPY
0x25f MISSING 0xd6
0x260 GAS
0x261 EXP
0x262 SDIV
0x263 MULMOD
0x264 DIFFICULTY
0x265 MISSING 0xee
0x266 SWAP5
0x267 MISSING 0x4a
0x268 MISSING 0xd5
0x269 AND
0x26a MISSING 0x4c
0x26b PUSH23 0xf0393094a6ca276fdffb5bcc3706c27f2ffa0029
---
0x254: STOP 
0x255: LOG S0 S1 S2
0x256: V146 = 0x627a7a723058
0x25d: V147 = SHA3 0x627a7a723058 S3
0x25e: RETURNDATACOPY V147 S4 S5
0x25f: MISSING 0xd6
0x260: V148 = GAS
0x261: V149 = EXP V148 S0
0x262: V150 = SDIV V149 S1
0x263: V151 = MULMOD V150 S2 S3
0x264: V152 = DIFFICULTY
0x265: MISSING 0xee
0x267: MISSING 0x4a
0x268: MISSING 0xd5
0x269: V153 = AND S0 S1
0x26a: MISSING 0x4c
0x26b: V154 = 0xf0393094a6ca276fdffb5bcc3706c27f2ffa0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V152, V151, S5, S1, S2, S3, S4, S0, V153, 0xf0393094a6ca276fdffb5bcc3706c27f2ffa0029]
Exit stack: []

================================


