Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x9f002c94
0x34 EQ
0x35 PUSH2 0x3e
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x9f002c94
0x34: V9 = EQ 0x9f002c94 V7
0x35: V10 = 0x3e
0x38: JUMPI 0x3e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3d]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a PUSH1 0x0
0x3c DUP1
0x3d REVERT
---
0x39: JUMPDEST 
0x3a: V11 = 0x0
0x3d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3e
[0x3e:0xbb]
---
Predecessors: [0x0]
Successors: [0xbe]
---
0x3e JUMPDEST
0x3f PUSH2 0xbc
0x42 PUSH1 0x4
0x44 DUP1
0x45 DUP1
0x46 CALLDATALOAD
0x47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c AND
0x5d SWAP1
0x5e PUSH1 0x20
0x60 ADD
0x61 SWAP1
0x62 SWAP2
0x63 SWAP1
0x64 DUP1
0x65 CALLDATALOAD
0x66 SWAP1
0x67 PUSH1 0x20
0x69 ADD
0x6a SWAP1
0x6b DUP3
0x6c ADD
0x6d DUP1
0x6e CALLDATALOAD
0x6f SWAP1
0x70 PUSH1 0x20
0x72 ADD
0x73 SWAP1
0x74 DUP1
0x75 DUP1
0x76 PUSH1 0x20
0x78 MUL
0x79 PUSH1 0x20
0x7b ADD
0x7c PUSH1 0x40
0x7e MLOAD
0x7f SWAP1
0x80 DUP2
0x81 ADD
0x82 PUSH1 0x40
0x84 MSTORE
0x85 DUP1
0x86 SWAP4
0x87 SWAP3
0x88 SWAP2
0x89 SWAP1
0x8a DUP2
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x20
0x8f ADD
0x90 DUP4
0x91 DUP4
0x92 PUSH1 0x20
0x94 MUL
0x95 DUP1
0x96 DUP3
0x97 DUP5
0x98 CALLDATACOPY
0x99 DUP3
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 SWAP2
0xa3 SWAP1
0xa4 DUP1
0xa5 CALLDATALOAD
0xa6 SWAP1
0xa7 PUSH1 0x20
0xa9 ADD
0xaa SWAP1
0xab SWAP2
0xac SWAP1
0xad DUP1
0xae CALLDATALOAD
0xaf SWAP1
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP1
0xb4 SWAP2
0xb5 SWAP1
0xb6 POP
0xb7 POP
0xb8 PUSH2 0xbe
0xbb JUMP
---
0x3e: JUMPDEST 
0x3f: V12 = 0xbc
0x42: V13 = 0x4
0x46: V14 = CALLDATALOAD 0x4
0x47: V15 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c: V16 = AND 0xffffffffffffffffffffffffffffffffffffffff V14
0x5e: V17 = 0x20
0x60: V18 = ADD 0x20 0x4
0x65: V19 = CALLDATALOAD 0x24
0x67: V20 = 0x20
0x69: V21 = ADD 0x20 0x24
0x6c: V22 = ADD 0x4 V19
0x6e: V23 = CALLDATALOAD V22
0x70: V24 = 0x20
0x72: V25 = ADD 0x20 V22
0x76: V26 = 0x20
0x78: V27 = MUL 0x20 V23
0x79: V28 = 0x20
0x7b: V29 = ADD 0x20 V27
0x7c: V30 = 0x40
0x7e: V31 = M[0x40]
0x81: V32 = ADD V31 V29
0x82: V33 = 0x40
0x84: M[0x40] = V32
0x8c: M[V31] = V23
0x8d: V34 = 0x20
0x8f: V35 = ADD 0x20 V31
0x92: V36 = 0x20
0x94: V37 = MUL 0x20 V23
0x98: CALLDATACOPY V35 V25 V37
0x9a: V38 = ADD V35 V37
0xa5: V39 = CALLDATALOAD 0x44
0xa7: V40 = 0x20
0xa9: V41 = ADD 0x20 0x44
0xae: V42 = CALLDATALOAD 0x64
0xb0: V43 = 0x20
0xb2: V44 = ADD 0x20 0x64
0xb8: V45 = 0xbe
0xbb: JUMP 0xbe
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xbc, V16, V31, V39, V42]
Exit stack: [V7, 0xbc, V16, V31, V39, V42]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x1bd]
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xbe
[0xbe:0x173]
---
Predecessors: [0x3e]
Successors: [0x174]
---
0xbe JUMPDEST
0xbf DUP4
0xc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5 AND
0xd6 PUSH2 0xbb8
0xd9 GAS
0xda SUB
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf DUP1
0xe0 PUSH32 0x696e697457616c6c65742c28616464726573735b5d2c2075696e742900000000
0x101 DUP2
0x102 MSTORE
0x103 POP
0x104 PUSH1 0x1c
0x106 ADD
0x107 SWAP1
0x108 POP
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d SWAP2
0x10e SUB
0x10f SWAP1
0x110 SHA3
0x111 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12f SWAP1
0x130 DIV
0x131 SWAP1
0x132 DUP6
0x133 DUP6
0x134 DUP6
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP6
0x139 PUSH4 0xffffffff
0x13e AND
0x13f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x15d MUL
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x4
0x162 ADD
0x163 DUP1
0x164 DUP5
0x165 DUP1
0x166 MLOAD
0x167 SWAP1
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP1
0x16c PUSH1 0x20
0x16e MUL
0x16f DUP1
0x170 DUP4
0x171 DUP4
0x172 PUSH1 0x0
---
0xbe: JUMPDEST 
0xc0: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V16
0xd6: V48 = 0xbb8
0xd9: V49 = GAS
0xda: V50 = SUB V49 0xbb8
0xdb: V51 = 0x40
0xdd: V52 = M[0x40]
0xe0: V53 = 0x696e697457616c6c65742c28616464726573735b5d2c2075696e742900000000
0x102: M[V52] = 0x696e697457616c6c65742c28616464726573735b5d2c2075696e742900000000
0x104: V54 = 0x1c
0x106: V55 = ADD 0x1c V52
0x109: V56 = 0x40
0x10b: V57 = M[0x40]
0x10e: V58 = SUB V55 V57
0x110: V59 = SHA3 V57 V58
0x111: V60 = 0x100000000000000000000000000000000000000000000000000000000
0x130: V61 = DIV V59 0x100000000000000000000000000000000000000000000000000000000
0x135: V62 = 0x40
0x137: V63 = M[0x40]
0x139: V64 = 0xffffffff
0x13e: V65 = AND 0xffffffff V61
0x13f: V66 = 0x100000000000000000000000000000000000000000000000000000000
0x15d: V67 = MUL 0x100000000000000000000000000000000000000000000000000000000 V65
0x15f: M[V63] = V67
0x160: V68 = 0x4
0x162: V69 = ADD 0x4 V63
0x166: V70 = M[V31]
0x168: V71 = 0x20
0x16a: V72 = ADD 0x20 V31
0x16c: V73 = 0x20
0x16e: V74 = MUL 0x20 V70
0x172: V75 = 0x0
---
Entry stack: [V7, 0xbc, V16, V31, V39, V42]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V47, V61, V50, S2, S1, S0, V69, V69, V72, V74, V74, V69, V72, 0x0]
Exit stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, 0x0]

================================

Block 0x174
[0x174:0x17c]
---
Predecessors: [0xbe, 0x185]
Successors: [0x17d, 0x190]
---
0x174 JUMPDEST
0x175 DUP4
0x176 DUP2
0x177 LT
0x178 ISZERO
0x179 PUSH2 0x190
0x17c JUMPI
---
0x174: JUMPDEST 
0x177: V76 = LT S0 V74
0x178: V77 = ISZERO V76
0x179: V78 = 0x190
0x17c: JUMPI 0x190 V77
---
Entry stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, S0]

================================

Block 0x17d
[0x17d:0x184]
---
Predecessors: [0x174]
Successors: [0x185]
---
0x17d DUP1
0x17e DUP3
0x17f ADD
0x180 MLOAD
0x181 DUP2
0x182 DUP5
0x183 ADD
0x184 MSTORE
---
0x17f: V79 = ADD V72 S0
0x180: V80 = M[V79]
0x183: V81 = ADD V69 S0
0x184: M[V81] = V80
---
Entry stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, S0]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0x17d]
Successors: [0x174]
---
0x185 JUMPDEST
0x186 PUSH1 0x20
0x188 DUP2
0x189 ADD
0x18a SWAP1
0x18b POP
0x18c PUSH2 0x174
0x18f JUMP
---
0x185: JUMPDEST 
0x186: V82 = 0x20
0x189: V83 = ADD S0 0x20
0x18c: V84 = 0x174
0x18f: JUMP 0x174
---
Entry stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, S0]
Stack pops: 1
Stack additions: [V83]
Exit stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, V83]

================================

Block 0x190
[0x190:0x1bc]
---
Predecessors: [0x174]
Successors: [0x1bd]
---
0x190 JUMPDEST
0x191 POP
0x192 POP
0x193 POP
0x194 POP
0x195 SWAP1
0x196 POP
0x197 ADD
0x198 DUP4
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x20
0x19d ADD
0x19e DUP3
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 SWAP4
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 PUSH1 0x0
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae DUP1
0x1af DUP4
0x1b0 SUB
0x1b1 DUP2
0x1b2 PUSH1 0x0
0x1b4 DUP9
0x1b5 DUP8
0x1b6 CALL
0x1b7 SWAP4
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc POP
---
0x190: JUMPDEST 
0x197: V85 = ADD V74 V69
0x19a: M[V85] = V39
0x19b: V86 = 0x20
0x19d: V87 = ADD 0x20 V85
0x1a0: M[V87] = V42
0x1a1: V88 = 0x20
0x1a3: V89 = ADD 0x20 V87
0x1a9: V90 = 0x0
0x1ab: V91 = 0x40
0x1ad: V92 = M[0x40]
0x1b0: V93 = SUB V89 V92
0x1b2: V94 = 0x0
0x1b6: V95 = CALL V50 V47 0x0 V92 V93 V92 0x0
---
Entry stack: [V7, 0xbc, V16, V31, V39, V42, V47, V61, V50, V31, V39, V42, V69, V69, V72, V74, V74, V69, V72, S0]
Stack pops: 14
Stack additions: []
Exit stack: [V7, 0xbc, V16, V31, V39, V42]

================================

Block 0x1bd
[0x1bd:0x1c2]
---
Predecessors: [0x190]
Successors: [0xbc]
---
0x1bd JUMPDEST
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 POP
0x1c2 JUMP
---
0x1bd: JUMPDEST 
0x1c2: JUMP 0xbc
---
Entry stack: [V7, 0xbc, V16, V31, V39, V42]
Stack pops: 5
Stack additions: []
Exit stack: [V7]

================================

Block 0x1c3
[0x1c3:0x1ee]
---
Predecessors: []
Successors: []
---
0x1c3 STOP
0x1c4 LOG1
0x1c5 PUSH6 0x627a7a723058
0x1cc SHA3
0x1cd BALANCE
0x1ce MISSING 0xc9
0x1cf MISSING 0xdc
0x1d0 PUSH28 0xbd5f08c4ea7e91b1d1f6049f89df9b60d6a8305c80cfca2c563856d4
0x1ed STOP
0x1ee MISSING 0x29
---
0x1c3: STOP 
0x1c4: LOG S0 S1 S2
0x1c5: V96 = 0x627a7a723058
0x1cc: V97 = SHA3 0x627a7a723058 S3
0x1cd: V98 = BALANCE V97
0x1ce: MISSING 0xc9
0x1cf: MISSING 0xdc
0x1d0: V99 = 0xbd5f08c4ea7e91b1d1f6049f89df9b60d6a8305c80cfca2c563856d4
0x1ed: STOP 
0x1ee: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V98, 0xbd5f08c4ea7e91b1d1f6049f89df9b60d6a8305c80cfca2c563856d4]
Exit stack: []

================================

Function 0:
Public function signature: 0x9f002c94
Entry block: 0x3e
Exit block: 0xbc
Body: 0x3e, 0xbc, 0xbe, 0x174, 0x17d, 0x185, 0x190, 0x1bd

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

