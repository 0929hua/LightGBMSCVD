Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x50]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x50
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x50
0x3f: JUMPI 0x50 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x67]
---
0x40 DUP1
0x41 PUSH4 0xc2381296
0x46 EQ
0x47 PUSH2 0x67
0x4a JUMPI
---
0x41: V15 = 0xc2381296
0x46: V16 = EQ 0xc2381296 V11
0x47: V17 = 0x67
0x4a: JUMPI 0x67 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x4f]
---
Predecessors: [0x0, 0x40]
Successors: []
---
0x4b JUMPDEST
0x4c PUSH1 0x0
0x4e DUP1
0x4f REVERT
---
0x4b: JUMPDEST 
0x4c: V18 = 0x0
0x4f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x50
[0x50:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x50 JUMPDEST
0x51 CALLVALUE
0x52 DUP1
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x50: JUMPDEST 
0x51: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x50]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5c
[0x5c:0x64]
---
Predecessors: [0x50]
Successors: [0x7c]
---
0x5c JUMPDEST
0x5d POP
0x5e PUSH2 0x65
0x61 PUSH2 0x7c
0x64 JUMP
---
0x5c: JUMPDEST 
0x5e: V23 = 0x65
0x61: V24 = 0x7c
0x64: JUMP 0x7c
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x65]
Exit stack: [V11, 0x65]

================================

Block 0x65
[0x65:0x66]
---
Predecessors: [0xcd, 0x531]
Successors: []
---
0x65 JUMPDEST
0x66 STOP
---
0x65: JUMPDEST 
0x66: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x40]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0x7b]
---
Predecessors: [0x67]
Successors: [0xd0]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0x65
0x78 PUSH2 0xd0
0x7b JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0x65
0x78: V30 = 0xd0
0x7b: JUMP 0xd0
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x65]
Exit stack: [V11, 0x65]

================================

Block 0x7c
[0x7c:0x8e]
---
Predecessors: [0x5c]
Successors: [0x8f, 0x93]
---
0x7c JUMPDEST
0x7d PUSH1 0x2
0x7f SLOAD
0x80 PUSH1 0x1
0x82 PUSH1 0xa0
0x84 PUSH1 0x2
0x86 EXP
0x87 SUB
0x88 AND
0x89 CALLER
0x8a EQ
0x8b PUSH2 0x93
0x8e JUMPI
---
0x7c: JUMPDEST 
0x7d: V31 = 0x2
0x7f: V32 = S[0x2]
0x80: V33 = 0x1
0x82: V34 = 0xa0
0x84: V35 = 0x2
0x86: V36 = EXP 0x2 0xa0
0x87: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x89: V39 = CALLER
0x8a: V40 = EQ V39 V38
0x8b: V41 = 0x93
0x8e: JUMPI 0x93 V40
---
Entry stack: [V11, 0x65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x7c]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V42 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65]

================================

Block 0x93
[0x93:0xc3]
---
Predecessors: [0x7c]
Successors: [0xc4, 0xcd]
---
0x93 JUMPDEST
0x94 PUSH1 0x2
0x96 SLOAD
0x97 PUSH1 0x40
0x99 MLOAD
0x9a PUSH1 0x1
0x9c PUSH1 0xa0
0x9e PUSH1 0x2
0xa0 EXP
0xa1 SUB
0xa2 SWAP1
0xa3 SWAP2
0xa4 AND
0xa5 SWAP1
0xa6 ADDRESS
0xa7 BALANCE
0xa8 DUP1
0xa9 ISZERO
0xaa PUSH2 0x8fc
0xad MUL
0xae SWAP2
0xaf PUSH1 0x0
0xb1 DUP2
0xb2 DUP2
0xb3 DUP2
0xb4 DUP6
0xb5 DUP9
0xb6 DUP9
0xb7 CALL
0xb8 SWAP4
0xb9 POP
0xba POP
0xbb POP
0xbc POP
0xbd ISZERO
0xbe DUP1
0xbf ISZERO
0xc0 PUSH2 0xcd
0xc3 JUMPI
---
0x93: JUMPDEST 
0x94: V43 = 0x2
0x96: V44 = S[0x2]
0x97: V45 = 0x40
0x99: V46 = M[0x40]
0x9a: V47 = 0x1
0x9c: V48 = 0xa0
0x9e: V49 = 0x2
0xa0: V50 = EXP 0x2 0xa0
0xa1: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4: V52 = AND V44 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V53 = ADDRESS
0xa7: V54 = BALANCE V53
0xa9: V55 = ISZERO V54
0xaa: V56 = 0x8fc
0xad: V57 = MUL 0x8fc V55
0xaf: V58 = 0x0
0xb7: V59 = CALL V57 V52 V54 V46 0x0 V46 0x0
0xbd: V60 = ISZERO V59
0xbf: V61 = ISZERO V60
0xc0: V62 = 0xcd
0xc3: JUMPI 0xcd V61
---
Entry stack: [V11, 0x65]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, 0x65, V60]

================================

Block 0xc4
[0xc4:0xcc]
---
Predecessors: [0x93]
Successors: []
---
0xc4 RETURNDATASIZE
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 RETURNDATACOPY
0xc9 RETURNDATASIZE
0xca PUSH1 0x0
0xcc REVERT
---
0xc4: V63 = RETURNDATASIZE
0xc5: V64 = 0x0
0xc8: RETURNDATACOPY 0x0 0x0 V63
0xc9: V65 = RETURNDATASIZE
0xca: V66 = 0x0
0xcc: REVERT 0x0 V65
---
Entry stack: [V11, 0x65, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V60]

================================

Block 0xcd
[0xcd:0xcf]
---
Predecessors: [0x93]
Successors: [0x65]
---
0xcd JUMPDEST
0xce POP
0xcf JUMP
---
0xcd: JUMPDEST 
0xcf: JUMP 0x65
---
Entry stack: [V11, 0x65, V60]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xed]
---
Predecessors: [0x73]
Successors: [0xee, 0xf2]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x2
0xd3 SLOAD
0xd4 PUSH1 0x0
0xd6 SWAP1
0xd7 DUP2
0xd8 SWAP1
0xd9 DUP2
0xda SWAP1
0xdb DUP2
0xdc SWAP1
0xdd DUP2
0xde SWAP1
0xdf PUSH1 0x1
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SUB
0xe7 AND
0xe8 CALLER
0xe9 EQ
0xea PUSH2 0xf2
0xed JUMPI
---
0xd0: JUMPDEST 
0xd1: V67 = 0x2
0xd3: V68 = S[0x2]
0xd4: V69 = 0x0
0xdf: V70 = 0x1
0xe1: V71 = 0xa0
0xe3: V72 = 0x2
0xe5: V73 = EXP 0x2 0xa0
0xe6: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xe8: V76 = CALLER
0xe9: V77 = EQ V76 V75
0xea: V78 = 0xf2
0xed: JUMPI 0xf2 V77
---
Entry stack: [V11, 0x65]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xd0]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V79 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf2
[0xf2:0x160]
---
Predecessors: [0xd0]
Successors: [0x161, 0x165]
---
0xf2 JUMPDEST
0xf3 PUSH1 0x0
0xf5 SWAP5
0xf6 POP
0xf7 PUSH1 0x0
0xf9 SWAP3
0xfa POP
0xfb PUSH1 0x0
0xfd DUP1
0xfe SWAP1
0xff SLOAD
0x100 SWAP1
0x101 PUSH2 0x100
0x104 EXP
0x105 SWAP1
0x106 DIV
0x107 PUSH1 0x1
0x109 PUSH1 0xa0
0x10b PUSH1 0x2
0x10d EXP
0x10e SUB
0x10f AND
0x110 PUSH1 0x1
0x112 PUSH1 0xa0
0x114 PUSH1 0x2
0x116 EXP
0x117 SUB
0x118 AND
0x119 PUSH4 0x11a09ae7
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP2
0x122 PUSH4 0xffffffff
0x127 AND
0x128 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x146 MUL
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x4
0x14b ADD
0x14c PUSH1 0x20
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 DUP4
0x153 SUB
0x154 DUP2
0x155 PUSH1 0x0
0x157 DUP8
0x158 DUP1
0x159 EXTCODESIZE
0x15a ISZERO
0x15b DUP1
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0xf2: JUMPDEST 
0xf3: V80 = 0x0
0xf7: V81 = 0x0
0xfb: V82 = 0x0
0xff: V83 = S[0x0]
0x101: V84 = 0x100
0x104: V85 = EXP 0x100 0x0
0x106: V86 = DIV V83 0x1
0x107: V87 = 0x1
0x109: V88 = 0xa0
0x10b: V89 = 0x2
0x10d: V90 = EXP 0x2 0xa0
0x10e: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x110: V93 = 0x1
0x112: V94 = 0xa0
0x114: V95 = 0x2
0x116: V96 = EXP 0x2 0xa0
0x117: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x118: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x119: V99 = 0x11a09ae7
0x11e: V100 = 0x40
0x120: V101 = M[0x40]
0x122: V102 = 0xffffffff
0x127: V103 = AND 0xffffffff 0x11a09ae7
0x128: V104 = 0x100000000000000000000000000000000000000000000000000000000
0x146: V105 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x148: M[V101] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x149: V106 = 0x4
0x14b: V107 = ADD 0x4 V101
0x14c: V108 = 0x20
0x14e: V109 = 0x40
0x150: V110 = M[0x40]
0x153: V111 = SUB V107 V110
0x155: V112 = 0x0
0x159: V113 = EXTCODESIZE V98
0x15a: V114 = ISZERO V113
0x15c: V115 = ISZERO V114
0x15d: V116 = 0x165
0x160: JUMPI 0x165 V115
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [0x0, S3, 0x0, S1, S0, V98, 0x11a09ae7, V107, 0x20, V110, V111, V110, 0x0, V98, V114]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, 0x20, V110, V111, V110, 0x0, V98, V114]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0xf2]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V117 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, 0x20, V110, V111, V110, 0x0, V98, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, 0x20, V110, V111, V110, 0x0, V98, V114]

================================

Block 0x165
[0x165:0x16f]
---
Predecessors: [0xf2]
Successors: [0x170, 0x179]
---
0x165 JUMPDEST
0x166 POP
0x167 GAS
0x168 CALL
0x169 ISZERO
0x16a DUP1
0x16b ISZERO
0x16c PUSH2 0x179
0x16f JUMPI
---
0x165: JUMPDEST 
0x167: V118 = GAS
0x168: V119 = CALL V118 V98 0x0 V110 V111 V110 0x20
0x169: V120 = ISZERO V119
0x16b: V121 = ISZERO V120
0x16c: V122 = 0x179
0x16f: JUMPI 0x179 V121
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, 0x20, V110, V111, V110, 0x0, V98, V114]
Stack pops: 7
Stack additions: [V120]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, V120]

================================

Block 0x170
[0x170:0x178]
---
Predecessors: [0x165]
Successors: []
---
0x170 RETURNDATASIZE
0x171 PUSH1 0x0
0x173 DUP1
0x174 RETURNDATACOPY
0x175 RETURNDATASIZE
0x176 PUSH1 0x0
0x178 REVERT
---
0x170: V123 = RETURNDATASIZE
0x171: V124 = 0x0
0x174: RETURNDATACOPY 0x0 0x0 V123
0x175: V125 = RETURNDATASIZE
0x176: V126 = 0x0
0x178: REVERT 0x0 V125
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, V120]

================================

Block 0x179
[0x179:0x18a]
---
Predecessors: [0x165]
Successors: [0x18b, 0x18f]
---
0x179 JUMPDEST
0x17a POP
0x17b POP
0x17c POP
0x17d POP
0x17e PUSH1 0x40
0x180 MLOAD
0x181 RETURNDATASIZE
0x182 PUSH1 0x20
0x184 DUP2
0x185 LT
0x186 ISZERO
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x179: JUMPDEST 
0x17e: V127 = 0x40
0x180: V128 = M[0x40]
0x181: V129 = RETURNDATASIZE
0x182: V130 = 0x20
0x185: V131 = LT V129 0x20
0x186: V132 = ISZERO V131
0x187: V133 = 0x18f
0x18a: JUMPI 0x18f V132
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V98, 0x11a09ae7, V107, V120]
Stack pops: 4
Stack additions: [V128, V129]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V128, V129]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x179]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V134 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V128, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V128, V129]

================================

Block 0x18f
[0x18f:0x193]
---
Predecessors: [0x179]
Successors: [0x194]
---
0x18f JUMPDEST
0x190 POP
0x191 MLOAD
0x192 SWAP2
0x193 POP
---
0x18f: JUMPDEST 
0x191: V135 = M[V128]
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, V128, V129]
Stack pops: 4
Stack additions: [V135, S2]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, V135, 0x0]

================================

Block 0x194
[0x194:0x19c]
---
Predecessors: [0x18f, 0x52c]
Successors: [0x19d, 0x1a3]
---
0x194 JUMPDEST
0x195 DUP5
0x196 ISZERO
0x197 DUP1
0x198 ISZERO
0x199 PUSH2 0x1a3
0x19c JUMPI
---
0x194: JUMPDEST 
0x196: V136 = ISZERO {0x0, 0x1}
0x198: V137 = ISZERO V136
0x199: V138 = 0x1a3
0x19c: JUMPI 0x1a3 V137
---
Entry stack: [V11, 0x65, {0x0, 0x1}, S3, S2, V135, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V136]
Exit stack: [V11, 0x65, {0x0, 0x1}, S3, S2, V135, S0, V136]

================================

Block 0x19d
[0x19d:0x1a2]
---
Predecessors: [0x194]
Successors: [0x1a3]
---
0x19d POP
0x19e PUSH2 0x3e8
0x1a1 DUP5
0x1a2 LT
---
0x19e: V139 = 0x3e8
0x1a2: V140 = LT S4 0x3e8
---
Entry stack: [V11, 0x65, {0x0, 0x1}, S4, S3, V135, S1, V136]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V140]
Exit stack: [V11, 0x65, {0x0, 0x1}, S4, S3, V135, S1, V140]

================================

Block 0x1a3
[0x1a3:0x1a8]
---
Predecessors: [0x194, 0x19d]
Successors: [0x1a9, 0x531]
---
0x1a3 JUMPDEST
0x1a4 ISZERO
0x1a5 PUSH2 0x531
0x1a8 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V141 = ISZERO S0
0x1a5: V142 = 0x531
0x1a8: JUMPI 0x531 V141
---
Entry stack: [V11, 0x65, {0x0, 0x1}, S4, S3, V135, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x65, {0x0, 0x1}, S4, S3, V135, S1]

================================

Block 0x1a9
[0x1a9:0x28a]
---
Predecessors: [0x1a3]
Successors: [0x28b]
---
0x1a9 PUSH1 0x1
0x1ab DUP1
0x1ac SLOAD
0x1ad DUP2
0x1ae ADD
0x1af DUP1
0x1b0 DUP3
0x1b1 SSTORE
0x1b2 PUSH1 0x40
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x1d7 PUSH1 0x20
0x1d9 DUP1
0x1da DUP4
0x1db ADD
0x1dc SWAP2
0x1dd SWAP1
0x1de SWAP2
0x1df MSTORE
0x1e0 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x201 PUSH1 0x21
0x203 DUP4
0x204 ADD
0x205 MSTORE
0x206 ADDRESS
0x207 PUSH13 0x1000000000000000000000000
0x215 MUL
0x216 PUSH1 0x22
0x218 DUP4
0x219 ADD
0x21a MSTORE
0x21b PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x23c SWAP1
0x23d SWAP4
0x23e MUL
0x23f PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x260 AND
0x261 PUSH1 0x36
0x263 DUP3
0x264 ADD
0x265 MSTORE
0x266 DUP2
0x267 MLOAD
0x268 DUP1
0x269 DUP3
0x26a SUB
0x26b PUSH1 0x17
0x26d ADD
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x37
0x272 SWAP1
0x273 SWAP2
0x274 ADD
0x275 SWAP2
0x276 DUP3
0x277 SWAP1
0x278 MSTORE
0x279 DUP1
0x27a MLOAD
0x27b SWAP8
0x27c SWAP1
0x27d SWAP4
0x27e ADD
0x27f SWAP7
0x280 SWAP1
0x281 SWAP2
0x282 DUP3
0x283 SWAP2
0x284 SWAP1
0x285 DUP5
0x286 ADD
0x287 SWAP1
0x288 DUP1
0x289 DUP4
0x28a DUP4
---
0x1a9: V143 = 0x1
0x1ac: V144 = S[0x1]
0x1ae: V145 = ADD 0x1 V144
0x1b1: S[0x1] = V145
0x1b2: V146 = 0x40
0x1b5: V147 = M[0x40]
0x1b6: V148 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x1d7: V149 = 0x20
0x1db: V150 = ADD V147 0x20
0x1df: M[V150] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x1e0: V151 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x201: V152 = 0x21
0x204: V153 = ADD V147 0x21
0x205: M[V153] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x206: V154 = ADDRESS
0x207: V155 = 0x1000000000000000000000000
0x215: V156 = MUL 0x1000000000000000000000000 V154
0x216: V157 = 0x22
0x219: V158 = ADD V147 0x22
0x21a: M[V158] = V156
0x21b: V159 = 0x100000000000000000000000000000000000000000000000000000000000000
0x23e: V160 = MUL V145 0x100000000000000000000000000000000000000000000000000000000000000
0x23f: V161 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x260: V162 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V160
0x261: V163 = 0x36
0x264: V164 = ADD V147 0x36
0x265: M[V164] = V162
0x267: V165 = M[0x40]
0x26a: V166 = SUB V147 V165
0x26b: V167 = 0x17
0x26d: V168 = ADD 0x17 V166
0x26f: M[V165] = V168
0x270: V169 = 0x37
0x274: V170 = ADD V147 0x37
0x278: M[0x40] = V170
0x27a: V171 = M[V165]
0x27e: V172 = ADD 0x1 S3
0x286: V173 = ADD V165 0x20
---
Entry stack: [V11, 0x65, {0x0, 0x1}, S3, S2, V135, S0]
Stack pops: 4
Stack additions: [V172, S2, S1, S0, V165, V170, V170, V173, V171, V171, V170, V173]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S2, V135, S0, V165, V170, V170, V173, V171, V171, V170, V173]

================================

Block 0x28b
[0x28b:0x293]
---
Predecessors: [0x1a9, 0x294]
Successors: [0x294, 0x2aa]
---
0x28b JUMPDEST
0x28c PUSH1 0x20
0x28e DUP4
0x28f LT
0x290 PUSH2 0x2aa
0x293 JUMPI
---
0x28b: JUMPDEST 
0x28c: V174 = 0x20
0x28f: V175 = LT S2 0x20
0x290: V176 = 0x2aa
0x293: JUMPI 0x2aa V175
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, S8, V165, V170, V170, V173, V171, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, S8, V165, V170, V170, V173, V171, S2, S1, S0]

================================

Block 0x294
[0x294:0x2a9]
---
Predecessors: [0x28b]
Successors: [0x28b]
---
0x294 DUP1
0x295 MLOAD
0x296 DUP3
0x297 MSTORE
0x298 PUSH1 0x1f
0x29a NOT
0x29b SWAP1
0x29c SWAP3
0x29d ADD
0x29e SWAP2
0x29f PUSH1 0x20
0x2a1 SWAP2
0x2a2 DUP3
0x2a3 ADD
0x2a4 SWAP2
0x2a5 ADD
0x2a6 PUSH2 0x28b
0x2a9 JUMP
---
0x295: V177 = M[S0]
0x297: M[S1] = V177
0x298: V178 = 0x1f
0x29a: V179 = NOT 0x1f
0x29d: V180 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x29f: V181 = 0x20
0x2a3: V182 = ADD 0x20 S1
0x2a5: V183 = ADD 0x20 S0
0x2a6: V184 = 0x28b
0x2a9: JUMP 0x28b
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, S8, V165, V170, V170, V173, V171, S2, S1, S0]
Stack pops: 3
Stack additions: [V180, V182, V183]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, S8, V165, V170, V170, V173, V171, V180, V182, V183]

================================

Block 0x2aa
[0x2aa:0x319]
---
Predecessors: [0x28b]
Successors: [0x31a]
---
0x2aa JUMPDEST
0x2ab MLOAD
0x2ac DUP2
0x2ad MLOAD
0x2ae PUSH1 0x20
0x2b0 SWAP4
0x2b1 DUP5
0x2b2 SUB
0x2b3 PUSH2 0x100
0x2b6 EXP
0x2b7 PUSH1 0x0
0x2b9 NOT
0x2ba ADD
0x2bb DUP1
0x2bc NOT
0x2bd SWAP1
0x2be SWAP3
0x2bf AND
0x2c0 SWAP2
0x2c1 AND
0x2c2 OR
0x2c3 SWAP1
0x2c4 MSTORE
0x2c5 PUSH1 0x40
0x2c7 DUP1
0x2c8 MLOAD
0x2c9 SWAP3
0x2ca SWAP1
0x2cb SWAP5
0x2cc ADD
0x2cd DUP3
0x2ce SWAP1
0x2cf SUB
0x2d0 DUP3
0x2d1 SHA3
0x2d2 PUSH1 0x1
0x2d4 PUSH1 0xa0
0x2d6 PUSH1 0x2
0x2d8 EXP
0x2d9 SUB
0x2da DUP2
0x2db AND
0x2dc PUSH13 0x1000000000000000000000000
0x2ea MUL
0x2eb DUP4
0x2ec DUP4
0x2ed ADD
0x2ee MSTORE
0x2ef DUP5
0x2f0 MLOAD
0x2f1 PUSH1 0x14
0x2f3 DUP2
0x2f4 DUP6
0x2f5 SUB
0x2f6 ADD
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 PUSH1 0x34
0x2fb SWAP1
0x2fc SWAP4
0x2fd ADD
0x2fe SWAP5
0x2ff DUP6
0x300 SWAP1
0x301 MSTORE
0x302 DUP3
0x303 MLOAD
0x304 SWAP1
0x305 SWAP8
0x306 POP
0x307 NUMBER
0x308 SWAP7
0x309 POP
0x30a TIMESTAMP
0x30b SWAP6
0x30c POP
0x30d SWAP2
0x30e SWAP4
0x30f SWAP3
0x310 POP
0x311 DUP3
0x312 SWAP2
0x313 SWAP1
0x314 DUP5
0x315 ADD
0x316 SWAP1
0x317 DUP1
0x318 DUP4
0x319 DUP4
---
0x2aa: JUMPDEST 
0x2ab: V185 = M[S0]
0x2ad: V186 = M[S1]
0x2ae: V187 = 0x20
0x2b2: V188 = SUB 0x20 S2
0x2b3: V189 = 0x100
0x2b6: V190 = EXP 0x100 V188
0x2b7: V191 = 0x0
0x2b9: V192 = NOT 0x0
0x2ba: V193 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V190
0x2bc: V194 = NOT V193
0x2bf: V195 = AND V185 V194
0x2c1: V196 = AND V193 V186
0x2c2: V197 = OR V196 V195
0x2c4: M[S1] = V197
0x2c5: V198 = 0x40
0x2c8: V199 = M[0x40]
0x2cc: V200 = ADD V170 V171
0x2cf: V201 = SUB V200 V199
0x2d1: V202 = SHA3 V199 V201
0x2d2: V203 = 0x1
0x2d4: V204 = 0xa0
0x2d6: V205 = 0x2
0x2d8: V206 = EXP 0x2 0xa0
0x2d9: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2db: V208 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V209 = 0x1000000000000000000000000
0x2ea: V210 = MUL 0x1000000000000000000000000 V208
0x2ed: V211 = ADD 0x20 V199
0x2ee: M[V211] = V210
0x2f0: V212 = M[0x40]
0x2f1: V213 = 0x14
0x2f5: V214 = SUB V199 V212
0x2f6: V215 = ADD V214 0x14
0x2f8: M[V212] = V215
0x2f9: V216 = 0x34
0x2fd: V217 = ADD V199 0x34
0x301: M[0x40] = V217
0x303: V218 = M[V212]
0x307: V219 = NUMBER
0x30a: V220 = TIMESTAMP
0x315: V221 = ADD V212 0x20
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, S8, V165, V170, V170, V173, V171, S2, S1, S0]
Stack pops: 9
Stack additions: [V202, V219, V220, V212, V217, V217, V221, V218, V218, V217, V221]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, V202, V219, V220, V212, V217, V217, V221, V218, V218, V217, V221]

================================

Block 0x31a
[0x31a:0x322]
---
Predecessors: [0x2aa, 0x323]
Successors: [0x323, 0x339]
---
0x31a JUMPDEST
0x31b PUSH1 0x20
0x31d DUP4
0x31e LT
0x31f PUSH2 0x339
0x322 JUMPI
---
0x31a: JUMPDEST 
0x31b: V222 = 0x20
0x31e: V223 = LT S2 0x20
0x31f: V224 = 0x339
0x322: JUMPI 0x339 V223
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S12, V135, V202, V219, V220, V212, V217, V217, V221, V218, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S12, V135, V202, V219, V220, V212, V217, V217, V221, V218, S2, S1, S0]

================================

Block 0x323
[0x323:0x338]
---
Predecessors: [0x31a]
Successors: [0x31a]
---
0x323 DUP1
0x324 MLOAD
0x325 DUP3
0x326 MSTORE
0x327 PUSH1 0x1f
0x329 NOT
0x32a SWAP1
0x32b SWAP3
0x32c ADD
0x32d SWAP2
0x32e PUSH1 0x20
0x330 SWAP2
0x331 DUP3
0x332 ADD
0x333 SWAP2
0x334 ADD
0x335 PUSH2 0x31a
0x338 JUMP
---
0x324: V225 = M[S0]
0x326: M[S1] = V225
0x327: V226 = 0x1f
0x329: V227 = NOT 0x1f
0x32c: V228 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x32e: V229 = 0x20
0x332: V230 = ADD 0x20 S1
0x334: V231 = ADD 0x20 S0
0x335: V232 = 0x31a
0x338: JUMP 0x31a
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S12, V135, V202, V219, V220, V212, V217, V217, V221, V218, S2, S1, S0]
Stack pops: 3
Stack additions: [V228, V230, V231]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S12, V135, V202, V219, V220, V212, V217, V217, V221, V218, V228, V230, V231]

================================

Block 0x339
[0x339:0x36d]
---
Predecessors: [0x31a]
Successors: [0x36e, 0x36f]
---
0x339 JUMPDEST
0x33a MLOAD
0x33b DUP2
0x33c MLOAD
0x33d PUSH1 0x20
0x33f SWAP4
0x340 SWAP1
0x341 SWAP4
0x342 SUB
0x343 PUSH2 0x100
0x346 EXP
0x347 PUSH1 0x0
0x349 NOT
0x34a ADD
0x34b DUP1
0x34c NOT
0x34d SWAP1
0x34e SWAP2
0x34f AND
0x350 SWAP3
0x351 AND
0x352 SWAP2
0x353 SWAP1
0x354 SWAP2
0x355 OR
0x356 SWAP1
0x357 MSTORE
0x358 PUSH1 0x40
0x35a MLOAD
0x35b SWAP3
0x35c ADD
0x35d DUP3
0x35e SWAP1
0x35f SUB
0x360 SWAP1
0x361 SWAP2
0x362 SHA3
0x363 SWAP3
0x364 POP
0x365 POP
0x366 POP
0x367 DUP2
0x368 ISZERO
0x369 ISZERO
0x36a PUSH2 0x36f
0x36d JUMPI
---
0x339: JUMPDEST 
0x33a: V233 = M[S0]
0x33c: V234 = M[S1]
0x33d: V235 = 0x20
0x342: V236 = SUB 0x20 S2
0x343: V237 = 0x100
0x346: V238 = EXP 0x100 V236
0x347: V239 = 0x0
0x349: V240 = NOT 0x0
0x34a: V241 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V238
0x34c: V242 = NOT V241
0x34f: V243 = AND V233 V242
0x351: V244 = AND V234 V241
0x355: V245 = OR V244 V243
0x357: M[S1] = V245
0x358: V246 = 0x40
0x35a: V247 = M[0x40]
0x35c: V248 = ADD V217 V218
0x35f: V249 = SUB V248 V247
0x362: V250 = SHA3 V247 V249
0x368: V251 = ISZERO V220
0x369: V252 = ISZERO V251
0x36a: V253 = 0x36f
0x36d: JUMPI 0x36f V252
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S12, V135, V202, V219, V220, V212, V217, V217, V221, V218, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V250]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S12, V135, V202, V219, V220, V250]

================================

Block 0x36e
[0x36e:0x36e]
---
Predecessors: [0x339]
Successors: []
---
0x36e INVALID
---
0x36e: INVALID 
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S5, V135, V202, V219, V220, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S5, V135, V202, V219, V220, V250]

================================

Block 0x36f
[0x36f:0x3c2]
---
Predecessors: [0x339]
Successors: [0x3c3]
---
0x36f JUMPDEST
0x370 DIV
0x371 GASLIMIT
0x372 TIMESTAMP
0x373 COINBASE
0x374 PUSH1 0x40
0x376 MLOAD
0x377 PUSH1 0x20
0x379 ADD
0x37a DUP1
0x37b DUP3
0x37c PUSH1 0x1
0x37e PUSH1 0xa0
0x380 PUSH1 0x2
0x382 EXP
0x383 SUB
0x384 AND
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d AND
0x38e PUSH13 0x1000000000000000000000000
0x39c MUL
0x39d DUP2
0x39e MSTORE
0x39f PUSH1 0x14
0x3a1 ADD
0x3a2 SWAP2
0x3a3 POP
0x3a4 POP
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 PUSH1 0x20
0x3aa DUP2
0x3ab DUP4
0x3ac SUB
0x3ad SUB
0x3ae DUP2
0x3af MSTORE
0x3b0 SWAP1
0x3b1 PUSH1 0x40
0x3b3 MSTORE
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 DUP3
0x3b9 DUP1
0x3ba MLOAD
0x3bb SWAP1
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP1
0x3c0 DUP1
0x3c1 DUP4
0x3c2 DUP4
---
0x36f: JUMPDEST 
0x370: V254 = DIV V250 V220
0x371: V255 = GASLIMIT
0x372: V256 = TIMESTAMP
0x373: V257 = COINBASE
0x374: V258 = 0x40
0x376: V259 = M[0x40]
0x377: V260 = 0x20
0x379: V261 = ADD 0x20 V259
0x37c: V262 = 0x1
0x37e: V263 = 0xa0
0x380: V264 = 0x2
0x382: V265 = EXP 0x2 0xa0
0x383: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x384: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x385: V268 = 0x1
0x387: V269 = 0xa0
0x389: V270 = 0x2
0x38b: V271 = EXP 0x2 0xa0
0x38c: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38d: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x38e: V274 = 0x1000000000000000000000000
0x39c: V275 = MUL 0x1000000000000000000000000 V273
0x39e: M[V261] = V275
0x39f: V276 = 0x14
0x3a1: V277 = ADD 0x14 V261
0x3a5: V278 = 0x40
0x3a7: V279 = M[0x40]
0x3a8: V280 = 0x20
0x3ac: V281 = SUB V277 V279
0x3ad: V282 = SUB V281 0x20
0x3af: M[V279] = V282
0x3b1: V283 = 0x40
0x3b3: M[0x40] = V277
0x3b4: V284 = 0x40
0x3b6: V285 = M[0x40]
0x3ba: V286 = M[V279]
0x3bc: V287 = 0x20
0x3be: V288 = ADD 0x20 V279
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S5, V135, V202, V219, V220, V250]
Stack pops: 2
Stack additions: [V254, V255, V256, V279, V285, V285, V288, V286, V286, V285, V288]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S5, V135, V202, V219, V254, V255, V256, V279, V285, V285, V288, V286, V286, V285, V288]

================================

Block 0x3c3
[0x3c3:0x3cb]
---
Predecessors: [0x36f, 0x3cc]
Successors: [0x3cc, 0x3e2]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x20
0x3c6 DUP4
0x3c7 LT
0x3c8 PUSH2 0x3e2
0x3cb JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V289 = 0x20
0x3c7: V290 = LT S2 0x20
0x3c8: V291 = 0x3e2
0x3cb: JUMPI 0x3e2 V290
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S14, V135, V202, V219, V254, V255, V256, V279, V285, V285, V288, V286, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S14, V135, V202, V219, V254, V255, V256, V279, V285, V285, V288, V286, S2, S1, S0]

================================

Block 0x3cc
[0x3cc:0x3e1]
---
Predecessors: [0x3c3]
Successors: [0x3c3]
---
0x3cc DUP1
0x3cd MLOAD
0x3ce DUP3
0x3cf MSTORE
0x3d0 PUSH1 0x1f
0x3d2 NOT
0x3d3 SWAP1
0x3d4 SWAP3
0x3d5 ADD
0x3d6 SWAP2
0x3d7 PUSH1 0x20
0x3d9 SWAP2
0x3da DUP3
0x3db ADD
0x3dc SWAP2
0x3dd ADD
0x3de PUSH2 0x3c3
0x3e1 JUMP
---
0x3cd: V292 = M[S0]
0x3cf: M[S1] = V292
0x3d0: V293 = 0x1f
0x3d2: V294 = NOT 0x1f
0x3d5: V295 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3d7: V296 = 0x20
0x3db: V297 = ADD 0x20 S1
0x3dd: V298 = ADD 0x20 S0
0x3de: V299 = 0x3c3
0x3e1: JUMP 0x3c3
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S14, V135, V202, V219, V254, V255, V256, V279, V285, V285, V288, V286, S2, S1, S0]
Stack pops: 3
Stack additions: [V295, V297, V298]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S14, V135, V202, V219, V254, V255, V256, V279, V285, V285, V288, V286, V295, V297, V298]

================================

Block 0x3e2
[0x3e2:0x416]
---
Predecessors: [0x3c3]
Successors: [0x417, 0x418]
---
0x3e2 JUMPDEST
0x3e3 MLOAD
0x3e4 DUP2
0x3e5 MLOAD
0x3e6 PUSH1 0x20
0x3e8 SWAP4
0x3e9 SWAP1
0x3ea SWAP4
0x3eb SUB
0x3ec PUSH2 0x100
0x3ef EXP
0x3f0 PUSH1 0x0
0x3f2 NOT
0x3f3 ADD
0x3f4 DUP1
0x3f5 NOT
0x3f6 SWAP1
0x3f7 SWAP2
0x3f8 AND
0x3f9 SWAP3
0x3fa AND
0x3fb SWAP2
0x3fc SWAP1
0x3fd SWAP2
0x3fe OR
0x3ff SWAP1
0x400 MSTORE
0x401 PUSH1 0x40
0x403 MLOAD
0x404 SWAP3
0x405 ADD
0x406 DUP3
0x407 SWAP1
0x408 SUB
0x409 SWAP1
0x40a SWAP2
0x40b SHA3
0x40c SWAP3
0x40d POP
0x40e POP
0x40f POP
0x410 DUP2
0x411 ISZERO
0x412 ISZERO
0x413 PUSH2 0x418
0x416 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V300 = M[S0]
0x3e5: V301 = M[S1]
0x3e6: V302 = 0x20
0x3eb: V303 = SUB 0x20 S2
0x3ec: V304 = 0x100
0x3ef: V305 = EXP 0x100 V303
0x3f0: V306 = 0x0
0x3f2: V307 = NOT 0x0
0x3f3: V308 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V305
0x3f5: V309 = NOT V308
0x3f8: V310 = AND V300 V309
0x3fa: V311 = AND V301 V308
0x3fe: V312 = OR V311 V310
0x400: M[S1] = V312
0x401: V313 = 0x40
0x403: V314 = M[0x40]
0x405: V315 = ADD V285 V286
0x408: V316 = SUB V315 V314
0x40b: V317 = SHA3 V314 V316
0x411: V318 = ISZERO V256
0x412: V319 = ISZERO V318
0x413: V320 = 0x418
0x416: JUMPI 0x418 V319
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S14, V135, V202, V219, V254, V255, V256, V279, V285, V285, V288, V286, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V317]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S14, V135, V202, V219, V254, V255, V256, V317]

================================

Block 0x417
[0x417:0x417]
---
Predecessors: [0x3e2]
Successors: []
---
0x417 INVALID
---
0x417: INVALID 
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S7, V135, V202, V219, V254, V255, V256, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S7, V135, V202, V219, V254, V255, V256, V317]

================================

Block 0x418
[0x418:0x44e]
---
Predecessors: [0x3e2]
Successors: [0x44f]
---
0x418 JUMPDEST
0x419 DIV
0x41a DIFFICULTY
0x41b TIMESTAMP
0x41c ADD
0x41d ADD
0x41e ADD
0x41f ADD
0x420 ADD
0x421 PUSH1 0x40
0x423 MLOAD
0x424 PUSH1 0x20
0x426 ADD
0x427 DUP1
0x428 DUP3
0x429 DUP2
0x42a MSTORE
0x42b PUSH1 0x20
0x42d ADD
0x42e SWAP2
0x42f POP
0x430 POP
0x431 PUSH1 0x40
0x433 MLOAD
0x434 PUSH1 0x20
0x436 DUP2
0x437 DUP4
0x438 SUB
0x439 SUB
0x43a DUP2
0x43b MSTORE
0x43c SWAP1
0x43d PUSH1 0x40
0x43f MSTORE
0x440 PUSH1 0x40
0x442 MLOAD
0x443 DUP1
0x444 DUP3
0x445 DUP1
0x446 MLOAD
0x447 SWAP1
0x448 PUSH1 0x20
0x44a ADD
0x44b SWAP1
0x44c DUP1
0x44d DUP4
0x44e DUP4
---
0x418: JUMPDEST 
0x419: V321 = DIV V317 V256
0x41a: V322 = DIFFICULTY
0x41b: V323 = TIMESTAMP
0x41c: V324 = ADD V323 V322
0x41d: V325 = ADD V324 V321
0x41e: V326 = ADD V325 V255
0x41f: V327 = ADD V326 V254
0x420: V328 = ADD V327 V219
0x421: V329 = 0x40
0x423: V330 = M[0x40]
0x424: V331 = 0x20
0x426: V332 = ADD 0x20 V330
0x42a: M[V332] = V328
0x42b: V333 = 0x20
0x42d: V334 = ADD 0x20 V332
0x431: V335 = 0x40
0x433: V336 = M[0x40]
0x434: V337 = 0x20
0x438: V338 = SUB V334 V336
0x439: V339 = SUB V338 0x20
0x43b: M[V336] = V339
0x43d: V340 = 0x40
0x43f: M[0x40] = V334
0x440: V341 = 0x40
0x442: V342 = M[0x40]
0x446: V343 = M[V336]
0x448: V344 = 0x20
0x44a: V345 = ADD 0x20 V336
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S7, V135, V202, V219, V254, V255, V256, V317]
Stack pops: 5
Stack additions: [V336, V342, V342, V345, V343, V343, V342, V345]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S7, V135, V202, V336, V342, V342, V345, V343, V343, V342, V345]

================================

Block 0x44f
[0x44f:0x457]
---
Predecessors: [0x418, 0x458]
Successors: [0x458, 0x46e]
---
0x44f JUMPDEST
0x450 PUSH1 0x20
0x452 DUP4
0x453 LT
0x454 PUSH2 0x46e
0x457 JUMPI
---
0x44f: JUMPDEST 
0x450: V346 = 0x20
0x453: V347 = LT S2 0x20
0x454: V348 = 0x46e
0x457: JUMPI 0x46e V347
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, V202, V336, V342, V342, V345, V343, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, V202, V336, V342, V342, V345, V343, S2, S1, S0]

================================

Block 0x458
[0x458:0x46d]
---
Predecessors: [0x44f]
Successors: [0x44f]
---
0x458 DUP1
0x459 MLOAD
0x45a DUP3
0x45b MSTORE
0x45c PUSH1 0x1f
0x45e NOT
0x45f SWAP1
0x460 SWAP3
0x461 ADD
0x462 SWAP2
0x463 PUSH1 0x20
0x465 SWAP2
0x466 DUP3
0x467 ADD
0x468 SWAP2
0x469 ADD
0x46a PUSH2 0x44f
0x46d JUMP
---
0x459: V349 = M[S0]
0x45b: M[S1] = V349
0x45c: V350 = 0x1f
0x45e: V351 = NOT 0x1f
0x461: V352 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x463: V353 = 0x20
0x467: V354 = ADD 0x20 S1
0x469: V355 = ADD 0x20 S0
0x46a: V356 = 0x44f
0x46d: JUMP 0x44f
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, V202, V336, V342, V342, V345, V343, S2, S1, S0]
Stack pops: 3
Stack additions: [V352, V354, V355]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, V202, V336, V342, V342, V345, V343, V352, V354, V355]

================================

Block 0x46e
[0x46e:0x4ab]
---
Predecessors: [0x44f]
Successors: [0x4ac, 0x4d6]
---
0x46e JUMPDEST
0x46f MLOAD
0x470 DUP2
0x471 MLOAD
0x472 PUSH1 0x20
0x474 SWAP4
0x475 SWAP1
0x476 SWAP4
0x477 SUB
0x478 PUSH2 0x100
0x47b EXP
0x47c PUSH1 0x0
0x47e NOT
0x47f ADD
0x480 DUP1
0x481 NOT
0x482 SWAP1
0x483 SWAP2
0x484 AND
0x485 SWAP3
0x486 AND
0x487 SWAP2
0x488 SWAP1
0x489 SWAP2
0x48a OR
0x48b SWAP1
0x48c MSTORE
0x48d PUSH1 0x40
0x48f MLOAD
0x490 SWAP3
0x491 ADD
0x492 DUP3
0x493 SWAP1
0x494 SUB
0x495 SWAP1
0x496 SWAP2
0x497 SHA3
0x498 SWAP6
0x499 POP
0x49a POP
0x49b POP
0x49c POP
0x49d PUSH2 0x3e8
0x4a0 DUP1
0x4a1 DUP5
0x4a2 DIV
0x4a3 MUL
0x4a4 DUP4
0x4a5 SUB
0x4a6 DUP3
0x4a7 GT
0x4a8 PUSH2 0x4d6
0x4ab JUMPI
---
0x46e: JUMPDEST 
0x46f: V357 = M[S0]
0x471: V358 = M[S1]
0x472: V359 = 0x20
0x477: V360 = SUB 0x20 S2
0x478: V361 = 0x100
0x47b: V362 = EXP 0x100 V360
0x47c: V363 = 0x0
0x47e: V364 = NOT 0x0
0x47f: V365 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V362
0x481: V366 = NOT V365
0x484: V367 = AND V357 V366
0x486: V368 = AND V358 V365
0x48a: V369 = OR V368 V367
0x48c: M[S1] = V369
0x48d: V370 = 0x40
0x48f: V371 = M[0x40]
0x491: V372 = ADD V342 V343
0x494: V373 = SUB V372 V371
0x497: V374 = SHA3 V371 V373
0x49d: V375 = 0x3e8
0x4a2: V376 = DIV V374 0x3e8
0x4a3: V377 = MUL V376 0x3e8
0x4a5: V378 = SUB V374 V377
0x4a7: V379 = GT V135 V378
0x4a8: V380 = 0x4d6
0x4ab: JUMPI 0x4d6 V379
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, S10, V135, V202, V336, V342, V342, V345, V343, S2, S1, S0]
Stack pops: 11
Stack additions: [V374, S9, S8]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202]

================================

Block 0x4ac
[0x4ac:0x4b2]
---
Predecessors: [0x46e]
Successors: [0x538]
---
0x4ac PUSH2 0x4b3
0x4af PUSH2 0x538
0x4b2 JUMP
---
0x4ac: V381 = 0x4b3
0x4af: V382 = 0x538
0x4b2: JUMP 0x538
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202]
Stack pops: 0
Stack additions: [0x4b3]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, 0x4b3]

================================

Block 0x4b3
[0x4b3:0x4c5]
---
Predecessors: [0x538]
Successors: [0x4c6, 0x4cf]
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 DUP1
0x4b8 SWAP2
0x4b9 SUB
0x4ba SWAP1
0x4bb PUSH1 0x0
0x4bd CREATE
0x4be DUP1
0x4bf ISZERO
0x4c0 DUP1
0x4c1 ISZERO
0x4c2 PUSH2 0x4cf
0x4c5 JUMPI
---
0x4b3: JUMPDEST 
0x4b4: V383 = 0x40
0x4b6: V384 = M[0x40]
0x4b9: V385 = SUB V431 V384
0x4bb: V386 = 0x0
0x4bd: V387 = CREATE 0x0 V384 V385
0x4bf: V388 = ISZERO V387
0x4c1: V389 = ISZERO V388
0x4c2: V390 = 0x4cf
0x4c5: JUMPI 0x4cf V389
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, V431]
Stack pops: 1
Stack additions: [V387, V388]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, V387, V388]

================================

Block 0x4c6
[0x4c6:0x4ce]
---
Predecessors: [0x4b3]
Successors: []
---
0x4c6 RETURNDATASIZE
0x4c7 PUSH1 0x0
0x4c9 DUP1
0x4ca RETURNDATACOPY
0x4cb RETURNDATASIZE
0x4cc PUSH1 0x0
0x4ce REVERT
---
0x4c6: V391 = RETURNDATASIZE
0x4c7: V392 = 0x0
0x4ca: RETURNDATACOPY 0x0 0x0 V391
0x4cb: V393 = RETURNDATASIZE
0x4cc: V394 = 0x0
0x4ce: REVERT 0x0 V393
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, V387, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, V387, V388]

================================

Block 0x4cf
[0x4cf:0x4d5]
---
Predecessors: [0x4b3]
Successors: [0x52c]
---
0x4cf JUMPDEST
0x4d0 POP
0x4d1 POP
0x4d2 PUSH2 0x52c
0x4d5 JUMP
---
0x4cf: JUMPDEST 
0x4d2: V395 = 0x52c
0x4d5: JUMP 0x52c
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, V387, V388]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202]

================================

Block 0x4d6
[0x4d6:0x50c]
---
Predecessors: [0x46e]
Successors: [0x547]
---
0x4d6 JUMPDEST
0x4d7 DUP1
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 AND
0x4e1 PUSH1 0x0
0x4e3 PUSH8 0x16345785d8a0000
0x4ec PUSH1 0x40
0x4ee MLOAD
0x4ef PUSH1 0x0
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 DUP1
0x4f5 DUP4
0x4f6 SUB
0x4f7 DUP2
0x4f8 DUP6
0x4f9 DUP9
0x4fa DUP9
0x4fb CALL
0x4fc SWAP4
0x4fd POP
0x4fe POP
0x4ff POP
0x500 POP
0x501 POP
0x502 PUSH1 0x1
0x504 SWAP5
0x505 POP
0x506 PUSH2 0x50d
0x509 PUSH2 0x547
0x50c JUMP
---
0x4d6: JUMPDEST 
0x4d8: V396 = 0x1
0x4da: V397 = 0xa0
0x4dc: V398 = 0x2
0x4de: V399 = EXP 0x2 0xa0
0x4df: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e0: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x4e1: V402 = 0x0
0x4e3: V403 = 0x16345785d8a0000
0x4ec: V404 = 0x40
0x4ee: V405 = M[0x40]
0x4ef: V406 = 0x0
0x4f1: V407 = 0x40
0x4f3: V408 = M[0x40]
0x4f6: V409 = SUB V405 V408
0x4fb: V410 = CALL 0x0 V401 0x16345785d8a0000 V408 V409 V408 0x0
0x502: V411 = 0x1
0x506: V412 = 0x50d
0x509: V413 = 0x547
0x50c: JUMP 0x547
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202]
Stack pops: 5
Stack additions: [0x1, S3, S2, S1, S0, 0x50d]
Exit stack: [V11, 0x65, 0x1, V172, V374, V135, V202, 0x50d]

================================

Block 0x50d
[0x50d:0x51f]
---
Predecessors: [0x547]
Successors: [0x520, 0x529]
---
0x50d JUMPDEST
0x50e PUSH1 0x40
0x510 MLOAD
0x511 DUP1
0x512 SWAP2
0x513 SUB
0x514 SWAP1
0x515 PUSH1 0x0
0x517 CREATE
0x518 DUP1
0x519 ISZERO
0x51a DUP1
0x51b ISZERO
0x51c PUSH2 0x529
0x51f JUMPI
---
0x50d: JUMPDEST 
0x50e: V414 = 0x40
0x510: V415 = M[0x40]
0x513: V416 = SUB V436 V415
0x515: V417 = 0x0
0x517: V418 = CREATE 0x0 V415 V416
0x519: V419 = ISZERO V418
0x51b: V420 = ISZERO V419
0x51c: V421 = 0x529
0x51f: JUMPI 0x529 V420
---
Entry stack: [V11, 0x65, 0x1, V172, V374, V135, V202, V436]
Stack pops: 1
Stack additions: [V418, V419]
Exit stack: [V11, 0x65, 0x1, V172, V374, V135, V202, V418, V419]

================================

Block 0x520
[0x520:0x528]
---
Predecessors: [0x50d]
Successors: []
---
0x520 RETURNDATASIZE
0x521 PUSH1 0x0
0x523 DUP1
0x524 RETURNDATACOPY
0x525 RETURNDATASIZE
0x526 PUSH1 0x0
0x528 REVERT
---
0x520: V422 = RETURNDATASIZE
0x521: V423 = 0x0
0x524: RETURNDATACOPY 0x0 0x0 V422
0x525: V424 = RETURNDATASIZE
0x526: V425 = 0x0
0x528: REVERT 0x0 V424
---
Entry stack: [V11, 0x65, 0x1, V172, V374, V135, V202, V418, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x1, V172, V374, V135, V202, V418, V419]

================================

Block 0x529
[0x529:0x52b]
---
Predecessors: [0x50d]
Successors: [0x52c]
---
0x529 JUMPDEST
0x52a POP
0x52b POP
---
0x529: JUMPDEST 
---
Entry stack: [V11, 0x65, 0x1, V172, V374, V135, V202, V418, V419]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x65, 0x1, V172, V374, V135, V202]

================================

Block 0x52c
[0x52c:0x530]
---
Predecessors: [0x4cf, 0x529]
Successors: [0x194]
---
0x52c JUMPDEST
0x52d PUSH2 0x194
0x530 JUMP
---
0x52c: JUMPDEST 
0x52d: V426 = 0x194
0x530: JUMP 0x194
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202]

================================

Block 0x531
[0x531:0x537]
---
Predecessors: [0x1a3]
Successors: [0x65]
---
0x531 JUMPDEST
0x532 POP
0x533 POP
0x534 POP
0x535 POP
0x536 POP
0x537 JUMP
---
0x531: JUMPDEST 
0x537: JUMP 0x65
---
Entry stack: [V11, 0x65, {0x0, 0x1}, S3, S2, V135, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x538
[0x538:0x546]
---
Predecessors: [0x4ac]
Successors: [0x4b3]
---
0x538 JUMPDEST
0x539 PUSH1 0x40
0x53b MLOAD
0x53c PUSH1 0x52
0x53e DUP1
0x53f PUSH2 0x558
0x542 DUP4
0x543 CODECOPY
0x544 ADD
0x545 SWAP1
0x546 JUMP
---
0x538: JUMPDEST 
0x539: V427 = 0x40
0x53b: V428 = M[0x40]
0x53c: V429 = 0x52
0x53f: V430 = 0x558
0x543: CODECOPY V428 0x558 0x52
0x544: V431 = ADD 0x52 V428
0x546: JUMP 0x4b3
---
Entry stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, 0x4b3]
Stack pops: 1
Stack additions: [V431]
Exit stack: [V11, 0x65, {0x0, 0x1}, V172, V374, V135, V202, V431]

================================

Block 0x547
[0x547:0x556]
---
Predecessors: [0x4d6]
Successors: [0x50d]
---
0x547 JUMPDEST
0x548 PUSH1 0x40
0x54a MLOAD
0x54b PUSH2 0x11d
0x54e DUP1
0x54f PUSH2 0x5aa
0x552 DUP4
0x553 CODECOPY
0x554 ADD
0x555 SWAP1
0x556 JUMP
---
0x547: JUMPDEST 
0x548: V432 = 0x40
0x54a: V433 = M[0x40]
0x54b: V434 = 0x11d
0x54f: V435 = 0x5aa
0x553: CODECOPY V433 0x5aa 0x11d
0x554: V436 = ADD 0x11d V433
0x556: JUMP 0x50d
---
Entry stack: [V11, 0x65, 0x1, V172, V374, V135, V202, 0x50d]
Stack pops: 1
Stack additions: [V436]
Exit stack: [V11, 0x65, 0x1, V172, V374, V135, V202, V436]

================================

Block 0x557
[0x557:0x562]
---
Predecessors: []
Successors: [0x563]
---
0x557 STOP
0x558 PUSH1 0x80
0x55a PUSH1 0x40
0x55c MSTORE
0x55d CALLVALUE
0x55e DUP1
0x55f ISZERO
0x560 PUSH1 0xf
0x562 JUMPI
---
0x557: STOP 
0x558: V437 = 0x80
0x55a: V438 = 0x40
0x55c: M[0x40] = 0x80
0x55d: V439 = CALLVALUE
0x55f: V440 = ISZERO V439
0x560: V441 = 0xf
0x562: THROWI V440
---
Entry stack: []
Stack pops: 0
Stack additions: [V439]
Exit stack: []

================================

Block 0x563
[0x563:0x587]
---
Predecessors: [0x557]
Successors: [0x588]
---
0x563 PUSH1 0x0
0x565 DUP1
0x566 REVERT
0x567 JUMPDEST
0x568 POP
0x569 PUSH1 0x35
0x56b DUP1
0x56c PUSH1 0x1d
0x56e PUSH1 0x0
0x570 CODECOPY
0x571 PUSH1 0x0
0x573 RETURN
0x574 STOP
0x575 PUSH1 0x80
0x577 PUSH1 0x40
0x579 MSTORE
0x57a PUSH1 0x0
0x57c DUP1
0x57d REVERT
0x57e STOP
0x57f LOG1
0x580 PUSH6 0x627a7a723058
0x587 SHA3
---
0x563: V442 = 0x0
0x566: REVERT 0x0 0x0
0x567: JUMPDEST 
0x569: V443 = 0x35
0x56c: V444 = 0x1d
0x56e: V445 = 0x0
0x570: CODECOPY 0x0 0x1d 0x35
0x571: V446 = 0x0
0x573: RETURN 0x0 0x35
0x574: STOP 
0x575: V447 = 0x80
0x577: V448 = 0x40
0x579: M[0x40] = 0x80
0x57a: V449 = 0x0
0x57d: REVERT 0x0 0x0
0x57e: STOP 
0x57f: LOG S0 S1 S2
0x580: V450 = 0x627a7a723058
0x587: V451 = SHA3 0x627a7a723058 S3
---
Entry stack: [V439]
Stack pops: 0
Stack additions: [V451]
Exit stack: []

================================

Block 0x588
[0x588:0x5da]
---
Predecessors: [0x563]
Successors: [0x5db]
---
0x588 JUMPDEST
0x589 MISSING 0x2e
0x58a MISSING 0xf8
0x58b MISSING 0xda
0x58c MISSING 0xd7
0x58d DUP5
0x58e SWAP10
0x58f MISSING 0xd7
0x590 MISSING 0xe3
0x591 MISSING 0xc7
0x592 LOG4
0x593 MISSING 0x2d
0x594 PC
0x595 ADD
0x596 DUP10
0x597 DUP7
0x598 DUP15
0x599 OR
0x59a DIFFICULTY
0x59b CODESIZE
0x59c PUSH9 0x66d96d2769e8e92ef2
0x5a6 MISSING 0x25
0x5a7 PC
0x5a8 STOP
0x5a9 MISSING 0x29
0x5aa PUSH1 0x80
0x5ac PUSH1 0x40
0x5ae MSTORE
0x5af PUSH1 0x0
0x5b1 DUP1
0x5b2 SLOAD
0x5b3 PUSH1 0x1
0x5b5 PUSH1 0xa0
0x5b7 PUSH1 0x2
0x5b9 EXP
0x5ba SUB
0x5bb NOT
0x5bc AND
0x5bd PUSH20 0xa62142888aba8370742be823c1782d17a0389da1
0x5d2 OR
0x5d3 SWAP1
0x5d4 SSTORE
0x5d5 CALLVALUE
0x5d6 DUP1
0x5d7 ISZERO
0x5d8 PUSH1 0x35
0x5da JUMPI
---
0x588: JUMPDEST 
0x589: MISSING 0x2e
0x58a: MISSING 0xf8
0x58b: MISSING 0xda
0x58c: MISSING 0xd7
0x58f: MISSING 0xd7
0x590: MISSING 0xe3
0x591: MISSING 0xc7
0x592: LOG S0 S1 S2 S3 S4 S5
0x593: MISSING 0x2d
0x594: V452 = PC
0x595: V453 = ADD V452 S0
0x599: V454 = OR S12 S5
0x59a: V455 = DIFFICULTY
0x59b: V456 = CODESIZE
0x59c: V457 = 0x66d96d2769e8e92ef2
0x5a6: MISSING 0x25
0x5a7: V458 = PC
0x5a8: STOP 
0x5a9: MISSING 0x29
0x5aa: V459 = 0x80
0x5ac: V460 = 0x40
0x5ae: M[0x40] = 0x80
0x5af: V461 = 0x0
0x5b2: V462 = S[0x0]
0x5b3: V463 = 0x1
0x5b5: V464 = 0xa0
0x5b7: V465 = 0x2
0x5b9: V466 = EXP 0x2 0xa0
0x5ba: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bb: V468 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V469 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V462
0x5bd: V470 = 0xa62142888aba8370742be823c1782d17a0389da1
0x5d2: V471 = OR 0xa62142888aba8370742be823c1782d17a0389da1 V469
0x5d4: S[0x0] = V471
0x5d5: V472 = CALLVALUE
0x5d7: V473 = ISZERO V472
0x5d8: V474 = 0x35
0x5da: THROWI V473
---
Entry stack: [V451]
Stack pops: 0
Stack additions: [S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S4, 0x66d96d2769e8e92ef2, V456, V455, V454, S9, V453, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V458, V472]
Exit stack: []

================================

Block 0x5db
[0x5db:0x610]
---
Predecessors: [0x588]
Successors: [0x611]
---
0x5db PUSH1 0x0
0x5dd DUP1
0x5de REVERT
0x5df JUMPDEST
0x5e0 POP
0x5e1 PUSH1 0x0
0x5e3 DUP1
0x5e4 SLOAD
0x5e5 PUSH1 0x40
0x5e7 MLOAD
0x5e8 PUSH1 0x1
0x5ea PUSH1 0xa0
0x5ec PUSH1 0x2
0x5ee EXP
0x5ef SUB
0x5f0 SWAP1
0x5f1 SWAP2
0x5f2 AND
0x5f3 SWAP2
0x5f4 SWAP1
0x5f5 PUSH8 0x16345785d8a0000
0x5fe SWAP1
0x5ff DUP3
0x600 DUP2
0x601 DUP2
0x602 DUP2
0x603 DUP6
0x604 DUP9
0x605 DUP4
0x606 CALL
0x607 SWAP4
0x608 POP
0x609 POP
0x60a POP
0x60b POP
0x60c ISZERO
0x60d ISZERO
0x60e PUSH1 0xda
0x610 JUMPI
---
0x5db: V475 = 0x0
0x5de: REVERT 0x0 0x0
0x5df: JUMPDEST 
0x5e1: V476 = 0x0
0x5e4: V477 = S[0x0]
0x5e5: V478 = 0x40
0x5e7: V479 = M[0x40]
0x5e8: V480 = 0x1
0x5ea: V481 = 0xa0
0x5ec: V482 = 0x2
0x5ee: V483 = EXP 0x2 0xa0
0x5ef: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f2: V485 = AND V477 0xffffffffffffffffffffffffffffffffffffffff
0x5f5: V486 = 0x16345785d8a0000
0x606: V487 = CALL 0x0 V485 0x16345785d8a0000 V479 0x0 V479 0x0
0x60c: V488 = ISZERO V487
0x60d: V489 = ISZERO V488
0x60e: V490 = 0xda
0x610: THROWI V489
---
Entry stack: [V472]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x611
[0x611:0x664]
---
Predecessors: [0x5db]
Successors: [0x665]
---
0x611 PUSH1 0x0
0x613 DUP1
0x614 SLOAD
0x615 PUSH1 0x40
0x617 DUP1
0x618 MLOAD
0x619 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x63a DUP2
0x63b MSTORE
0x63c SWAP1
0x63d MLOAD
0x63e PUSH1 0x1
0x640 PUSH1 0xa0
0x642 PUSH1 0x2
0x644 EXP
0x645 SUB
0x646 SWAP1
0x647 SWAP3
0x648 AND
0x649 SWAP3
0x64a PUSH4 0x3ccfd60b
0x64f SWAP3
0x650 PUSH1 0x4
0x652 DUP1
0x653 DUP5
0x654 ADD
0x655 SWAP4
0x656 DUP3
0x657 SWAP1
0x658 SUB
0x659 ADD
0x65a DUP2
0x65b DUP4
0x65c DUP8
0x65d DUP1
0x65e EXTCODESIZE
0x65f ISZERO
0x660 DUP1
0x661 ISZERO
0x662 PUSH1 0xbf
0x664 JUMPI
---
0x611: V491 = 0x0
0x614: V492 = S[0x0]
0x615: V493 = 0x40
0x618: V494 = M[0x40]
0x619: V495 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x63b: M[V494] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x63d: V496 = M[0x40]
0x63e: V497 = 0x1
0x640: V498 = 0xa0
0x642: V499 = 0x2
0x644: V500 = EXP 0x2 0xa0
0x645: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x648: V502 = AND V492 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V503 = 0x3ccfd60b
0x650: V504 = 0x4
0x654: V505 = ADD V494 0x4
0x658: V506 = SUB V494 V496
0x659: V507 = ADD V506 0x4
0x65e: V508 = EXTCODESIZE V502
0x65f: V509 = ISZERO V508
0x661: V510 = ISZERO V509
0x662: V511 = 0xbf
0x664: THROWI V510
---
Entry stack: []
Stack pops: 0
Stack additions: [V502, 0x3ccfd60b, V505, 0x0, V496, V507, V496, 0x0, V502, V509]
Exit stack: [V502, 0x3ccfd60b, V505, 0x0, V496, V507, V496, 0x0, V502, V509]

================================

Block 0x665
[0x665:0x672]
---
Predecessors: [0x611]
Successors: [0x673]
---
0x665 PUSH1 0x0
0x667 DUP1
0x668 REVERT
0x669 JUMPDEST
0x66a POP
0x66b GAS
0x66c CALL
0x66d ISZERO
0x66e DUP1
0x66f ISZERO
0x670 PUSH1 0xd2
0x672 JUMPI
---
0x665: V512 = 0x0
0x668: REVERT 0x0 0x0
0x669: JUMPDEST 
0x66b: V513 = GAS
0x66c: V514 = CALL V513 S1 S2 S3 S4 S5 S6
0x66d: V515 = ISZERO V514
0x66f: V516 = ISZERO V515
0x670: V517 = 0xd2
0x672: THROWI V516
---
Entry stack: [V502, 0x3ccfd60b, V505, 0x0, V496, V507, V496, 0x0, V502, V509]
Stack pops: 0
Stack additions: [V515]
Exit stack: []

================================

Block 0x673
[0x673:0x6f1]
---
Predecessors: [0x665]
Successors: []
---
0x673 RETURNDATASIZE
0x674 PUSH1 0x0
0x676 DUP1
0x677 RETURNDATACOPY
0x678 RETURNDATASIZE
0x679 PUSH1 0x0
0x67b REVERT
0x67c JUMPDEST
0x67d POP
0x67e CALLER
0x67f SWAP3
0x680 POP
0x681 POP
0x682 POP
0x683 SELFDESTRUCT
0x684 JUMPDEST
0x685 PUSH1 0x35
0x687 DUP1
0x688 PUSH2 0xe8
0x68b PUSH1 0x0
0x68d CODECOPY
0x68e PUSH1 0x0
0x690 RETURN
0x691 STOP
0x692 PUSH1 0x80
0x694 PUSH1 0x40
0x696 MSTORE
0x697 PUSH1 0x0
0x699 DUP1
0x69a REVERT
0x69b STOP
0x69c LOG1
0x69d PUSH6 0x627a7a723058
0x6a4 SHA3
0x6a5 MISSING 0xb2
0x6a6 MISSING 0xac
0x6a7 EXP
0x6a8 PUSH6 0x5d8df40b4645
0x6af MISSING 0xb3
0x6b0 MISSING 0xf8
0x6b1 MISSING 0xdc
0x6b2 MISSING 0x46
0x6b3 PUSH23 0x75af1ce29ebe6ee5f4719e496b0ee7bfca0029a165627a
0x6cb PUSH27 0x72305820df760f17b610b46fc9588fa5c6d3d3c7359aeddf4a57e0
0x6e7 PUSH2 0x412d
0x6ea MISSING 0xd9
0x6eb SWAP6
0x6ec SWAP7
0x6ed MISSING 0x24
0x6ee POP
0x6ef MISSING 0x2c
0x6f0 STOP
0x6f1 MISSING 0x29
---
0x673: V518 = RETURNDATASIZE
0x674: V519 = 0x0
0x677: RETURNDATACOPY 0x0 0x0 V518
0x678: V520 = RETURNDATASIZE
0x679: V521 = 0x0
0x67b: REVERT 0x0 V520
0x67c: JUMPDEST 
0x67e: V522 = CALLER
0x683: SELFDESTRUCT V522
0x684: JUMPDEST 
0x685: V523 = 0x35
0x688: V524 = 0xe8
0x68b: V525 = 0x0
0x68d: CODECOPY 0x0 0xe8 0x35
0x68e: V526 = 0x0
0x690: RETURN 0x0 0x35
0x691: STOP 
0x692: V527 = 0x80
0x694: V528 = 0x40
0x696: M[0x40] = 0x80
0x697: V529 = 0x0
0x69a: REVERT 0x0 0x0
0x69b: STOP 
0x69c: LOG S0 S1 S2
0x69d: V530 = 0x627a7a723058
0x6a4: V531 = SHA3 0x627a7a723058 S3
0x6a5: MISSING 0xb2
0x6a6: MISSING 0xac
0x6a7: V532 = EXP S0 S1
0x6a8: V533 = 0x5d8df40b4645
0x6af: MISSING 0xb3
0x6b0: MISSING 0xf8
0x6b1: MISSING 0xdc
0x6b2: MISSING 0x46
0x6b3: V534 = 0x75af1ce29ebe6ee5f4719e496b0ee7bfca0029a165627a
0x6cb: V535 = 0x72305820df760f17b610b46fc9588fa5c6d3d3c7359aeddf4a57e0
0x6e7: V536 = 0x412d
0x6ea: MISSING 0xd9
0x6ed: MISSING 0x24
0x6ef: MISSING 0x2c
0x6f0: STOP 
0x6f1: MISSING 0x29
---
Entry stack: [V515]
Stack pops: 0
Stack additions: [V531, 0x5d8df40b4645, V532, 0x412d, 0x72305820df760f17b610b46fc9588fa5c6d3d3c7359aeddf4a57e0, 0x75af1ce29ebe6ee5f4719e496b0ee7bfca0029a165627a, S7, S1, S2, S3, S4, S5, S0, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x50
Exit block: 0x65
Body: 0x50, 0x58, 0x5c, 0x65, 0x7c, 0x8f, 0x93, 0xc4, 0xcd

Function 1:
Public function signature: 0xc2381296
Entry block: 0x67
Exit block: 0x520
Body: 0x65, 0x67, 0x6f, 0x73, 0xd0, 0xee, 0xf2, 0x161, 0x165, 0x170, 0x179, 0x18b, 0x18f, 0x194, 0x19d, 0x1a3, 0x1a9, 0x28b, 0x294, 0x2aa, 0x31a, 0x323, 0x339, 0x36e, 0x36f, 0x3c3, 0x3cc, 0x3e2, 0x417, 0x418, 0x44f, 0x458, 0x46e, 0x4ac, 0x4b3, 0x4c6, 0x4cf, 0x4d6, 0x50d, 0x520, 0x529, 0x52c, 0x531, 0x538, 0x547

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

