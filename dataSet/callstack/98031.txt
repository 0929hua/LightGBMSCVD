Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x5d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x3d6a32bd
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x5d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x3d6a32bd
0x1a: V12 = EQ V10 0x3d6a32bd
0x1b: V13 = 0x5d
0x1e: JUMPI 0x5d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x98]
---
0x1f DUP1
0x20 PUSH4 0x5de01497
0x25 EQ
0x26 PUSH2 0x98
0x29 JUMPI
---
0x20: V14 = 0x5de01497
0x25: V15 = EQ 0x5de01497 V10
0x26: V16 = 0x98
0x29: JUMPI 0x98 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xbf]
---
0x2a DUP1
0x2b PUSH4 0x63a9c3d7
0x30 EQ
0x31 PUSH2 0xbf
0x34 JUMPI
---
0x2b: V17 = 0x63a9c3d7
0x30: V18 = EQ 0x63a9c3d7 V10
0x31: V19 = 0xbf
0x34: JUMPI 0xbf V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x120]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x120
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x120
0x3f: JUMPI 0x120 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x149]
---
0x40 DUP1
0x41 PUSH4 0xf2fde38b
0x46 EQ
0x47 PUSH2 0x149
0x4a JUMPI
---
0x41: V23 = 0xf2fde38b
0x46: V24 = EQ 0xf2fde38b V10
0x47: V25 = 0x149
0x4a: JUMPI 0x149 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x50]
---
Predecessors: [0x0, 0x40]
Successors: [0x51]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d PUSH2 0x0
0x50 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = CALLVALUE
0x4d: V27 = 0x0
0x50: THROWI V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51
[0x51:0x53]
---
Predecessors: [0x4b]
Successors: [0x54]
---
0x51 PUSH2 0x5b
---
0x51: V28 = 0x5b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b]
Exit stack: [V10, 0x5b]

================================

Block 0x54
[0x54:0x58]
---
Predecessors: [0x51]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH2 0x0
0x58 JUMP
---
0x54: JUMPDEST 
0x55: V29 = 0x0
0x58: THROW 
---
Entry stack: [V10, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x59 JUMPDEST
0x5a JUMP
---
0x59: JUMPDEST 
0x5a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x6fe]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x62]
---
Predecessors: [0xb]
Successors: [0x63]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f PUSH2 0x0
0x62 JUMPI
---
0x5d: JUMPDEST 
0x5e: V30 = CALLVALUE
0x5f: V31 = 0x0
0x62: THROWI V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x7b]
---
Predecessors: [0x5d]
Successors: [0x15b]
---
0x63 PUSH2 0x7c
0x66 PUSH1 0x4
0x68 CALLDATALOAD
0x69 PUSH1 0x24
0x6b CALLDATALOAD
0x6c PUSH1 0x44
0x6e CALLDATALOAD
0x6f PUSH1 0x64
0x71 CALLDATALOAD
0x72 PUSH1 0x84
0x74 CALLDATALOAD
0x75 PUSH1 0xa4
0x77 CALLDATALOAD
0x78 PUSH2 0x15b
0x7b JUMP
---
0x63: V32 = 0x7c
0x66: V33 = 0x4
0x68: V34 = CALLDATALOAD 0x4
0x69: V35 = 0x24
0x6b: V36 = CALLDATALOAD 0x24
0x6c: V37 = 0x44
0x6e: V38 = CALLDATALOAD 0x44
0x6f: V39 = 0x64
0x71: V40 = CALLDATALOAD 0x64
0x72: V41 = 0x84
0x74: V42 = CALLDATALOAD 0x84
0x75: V43 = 0xa4
0x77: V44 = CALLDATALOAD 0xa4
0x78: V45 = 0x15b
0x7b: JUMP 0x15b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c, V34, V36, V38, V40, V42, V44]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44]

================================

Block 0x7c
[0x7c:0x97]
---
Predecessors: [0x2e5, 0x669]
Successors: []
---
0x7c JUMPDEST
0x7d PUSH1 0x40
0x7f DUP1
0x80 MLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a SWAP3
0x8b AND
0x8c DUP3
0x8d MSTORE
0x8e MLOAD
0x8f SWAP1
0x90 DUP2
0x91 SWAP1
0x92 SUB
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 RETURN
---
0x7c: JUMPDEST 
0x7d: V46 = 0x40
0x80: V47 = M[0x40]
0x81: V48 = 0x1
0x83: V49 = 0xa0
0x85: V50 = 0x2
0x87: V51 = EXP 0x2 0xa0
0x88: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V53 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8d: M[V47] = V53
0x8e: V54 = M[0x40]
0x92: V55 = SUB V47 V54
0x93: V56 = 0x20
0x95: V57 = ADD 0x20 V55
0x97: RETURN V54 V57
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x98
[0x98:0x9d]
---
Predecessors: [0x1f]
Successors: [0x9e]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a PUSH2 0x0
0x9d JUMPI
---
0x98: JUMPDEST 
0x99: V58 = CALLVALUE
0x9a: V59 = 0x0
0x9d: THROWI V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9e
[0x9e:0xaa]
---
Predecessors: [0x98]
Successors: [0x2ef]
---
0x9e PUSH2 0xab
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 PUSH1 0x24
0xa6 CALLDATALOAD
0xa7 PUSH2 0x2ef
0xaa JUMP
---
0x9e: V60 = 0xab
0xa1: V61 = 0x4
0xa3: V62 = CALLDATALOAD 0x4
0xa4: V63 = 0x24
0xa6: V64 = CALLDATALOAD 0x24
0xa7: V65 = 0x2ef
0xaa: JUMP 0x2ef
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab, V62, V64]
Exit stack: [V10, 0xab, V62, V64]

================================

Block 0xab
[0xab:0xbe]
---
Predecessors: [0x3d4]
Successors: []
---
0xab JUMPDEST
0xac PUSH1 0x40
0xae DUP1
0xaf MLOAD
0xb0 SWAP2
0xb1 ISZERO
0xb2 ISZERO
0xb3 DUP3
0xb4 MSTORE
0xb5 MLOAD
0xb6 SWAP1
0xb7 DUP2
0xb8 SWAP1
0xb9 SUB
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe RETURN
---
0xab: JUMPDEST 
0xac: V66 = 0x40
0xaf: V67 = M[0x40]
0xb1: V68 = ISZERO V318
0xb2: V69 = ISZERO V68
0xb4: M[V67] = V69
0xb5: V70 = M[0x40]
0xb9: V71 = SUB V67 V70
0xba: V72 = 0x20
0xbc: V73 = ADD 0x20 V71
0xbe: RETURN V70 V73
---
Entry stack: [V10, V318]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xbf
[0xbf:0xc4]
---
Predecessors: [0x2a]
Successors: [0xc5]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 PUSH2 0x0
0xc4 JUMPI
---
0xbf: JUMPDEST 
0xc0: V74 = CALLVALUE
0xc1: V75 = 0x0
0xc4: THROWI V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xce]
---
Predecessors: [0xbf]
Successors: [0x3da]
---
0xc5 PUSH2 0xcf
0xc8 PUSH1 0x4
0xca CALLDATALOAD
0xcb PUSH2 0x3da
0xce JUMP
---
0xc5: V76 = 0xcf
0xc8: V77 = 0x4
0xca: V78 = CALLDATALOAD 0x4
0xcb: V79 = 0x3da
0xce: JUMP 0x3da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcf, V78]
Exit stack: [V10, 0xcf, V78]

================================

Block 0xcf
[0xcf:0x11f]
---
Predecessors: [0x65d]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 DUP1
0xd3 MLOAD
0xd4 SWAP9
0xd5 ISZERO
0xd6 ISZERO
0xd7 DUP10
0xd8 MSTORE
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 SWAP8
0xe2 DUP9
0xe3 AND
0xe4 PUSH1 0x20
0xe6 DUP11
0xe7 ADD
0xe8 MSTORE
0xe9 SWAP6
0xea SWAP1
0xeb SWAP7
0xec AND
0xed DUP8
0xee DUP7
0xef ADD
0xf0 MSTORE
0xf1 PUSH1 0x60
0xf3 DUP8
0xf4 ADD
0xf5 SWAP4
0xf6 SWAP1
0xf7 SWAP4
0xf8 MSTORE
0xf9 PUSH1 0x80
0xfb DUP7
0xfc ADD
0xfd SWAP2
0xfe SWAP1
0xff SWAP2
0x100 MSTORE
0x101 PUSH1 0xa0
0x103 DUP6
0x104 ADD
0x105 MSTORE
0x106 ISZERO
0x107 ISZERO
0x108 PUSH1 0xc0
0x10a DUP5
0x10b ADD
0x10c MSTORE
0x10d SWAP1
0x10e ISZERO
0x10f ISZERO
0x110 PUSH1 0xe0
0x112 DUP4
0x113 ADD
0x114 MSTORE
0x115 MLOAD
0x116 SWAP1
0x117 DUP2
0x118 SWAP1
0x119 SUB
0x11a PUSH2 0x100
0x11d ADD
0x11e SWAP1
0x11f RETURN
---
0xcf: JUMPDEST 
0xd0: V80 = 0x40
0xd3: V81 = M[0x40]
0xd5: V82 = ISZERO V332
0xd6: V83 = ISZERO V82
0xd8: M[V81] = V83
0xd9: V84 = 0x1
0xdb: V85 = 0xa0
0xdd: V86 = 0x2
0xdf: V87 = EXP 0x2 0xa0
0xe0: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xe4: V90 = 0x20
0xe7: V91 = ADD V81 0x20
0xe8: M[V91] = V89
0xec: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xef: V93 = ADD 0x40 V81
0xf0: M[V93] = V92
0xf1: V94 = 0x60
0xf4: V95 = ADD V81 0x60
0xf8: M[V95] = S4
0xf9: V96 = 0x80
0xfc: V97 = ADD V81 0x80
0x100: M[V97] = S3
0x101: V98 = 0xa0
0x104: V99 = ADD V81 0xa0
0x105: M[V99] = S2
0x106: V100 = ISZERO S1
0x107: V101 = ISZERO V100
0x108: V102 = 0xc0
0x10b: V103 = ADD V81 0xc0
0x10c: M[V103] = V101
0x10e: V104 = ISZERO S0
0x10f: V105 = ISZERO V104
0x110: V106 = 0xe0
0x113: V107 = ADD V81 0xe0
0x114: M[V107] = V105
0x115: V108 = M[0x40]
0x119: V109 = SUB V81 V108
0x11a: V110 = 0x100
0x11d: V111 = ADD 0x100 V109
0x11f: RETURN V108 V111
---
Entry stack: [V10, V332, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x125]
---
Predecessors: [0x35]
Successors: [0x126]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 PUSH2 0x0
0x125 JUMPI
---
0x120: JUMPDEST 
0x121: V112 = CALLVALUE
0x122: V113 = 0x0
0x125: THROWI V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x120]
Successors: [0x669]
---
0x126 PUSH2 0x7c
0x129 PUSH2 0x669
0x12c JUMP
---
0x126: V114 = 0x7c
0x129: V115 = 0x669
0x12c: JUMP 0x669
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0x12d
[0x12d:0x148]
---
Predecessors: []
Successors: []
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 DUP1
0x131 MLOAD
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a SWAP1
0x13b SWAP3
0x13c AND
0x13d DUP3
0x13e MSTORE
0x13f MLOAD
0x140 SWAP1
0x141 DUP2
0x142 SWAP1
0x143 SUB
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP1
0x148 RETURN
---
0x12d: JUMPDEST 
0x12e: V116 = 0x40
0x131: V117 = M[0x40]
0x132: V118 = 0x1
0x134: V119 = 0xa0
0x136: V120 = 0x2
0x138: V121 = EXP 0x2 0xa0
0x139: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V123 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13e: M[V117] = V123
0x13f: V124 = M[0x40]
0x143: V125 = SUB V117 V124
0x144: V126 = 0x20
0x146: V127 = ADD 0x20 V125
0x148: RETURN V124 V127
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x149
[0x149:0x14e]
---
Predecessors: [0x40]
Successors: [0x14f]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b PUSH2 0x0
0x14e JUMPI
---
0x149: JUMPDEST 
0x14a: V128 = CALLVALUE
0x14b: V129 = 0x0
0x14e: THROWI V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14f
[0x14f:0x158]
---
Predecessors: [0x149]
Successors: [0x678]
---
0x14f PUSH2 0x5b
0x152 PUSH1 0x4
0x154 CALLDATALOAD
0x155 PUSH2 0x678
0x158 JUMP
---
0x14f: V130 = 0x5b
0x152: V131 = 0x4
0x154: V132 = CALLDATALOAD 0x4
0x155: V133 = 0x678
0x158: JUMP 0x678
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b, V132]
Exit stack: [V10, 0x5b, V132]

================================

Block 0x159
[0x159:0x15a]
---
Predecessors: []
Successors: []
---
0x159 JUMPDEST
0x15a STOP
---
0x159: JUMPDEST 
0x15a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15b
[0x15b:0x166]
---
Predecessors: [0x63]
Successors: [0x167, 0x16c]
---
0x15b JUMPDEST
0x15c PUSH1 0x0
0x15e PUSH1 0x0
0x160 DUP7
0x161 LT
0x162 DUP1
0x163 PUSH2 0x16c
0x166 JUMPI
---
0x15b: JUMPDEST 
0x15c: V134 = 0x0
0x15e: V135 = 0x0
0x161: V136 = LT V36 0x0
0x163: V137 = 0x16c
0x166: JUMPI 0x16c V136
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, V136]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V136]

================================

Block 0x167
[0x167:0x16b]
---
Predecessors: [0x15b]
Successors: [0x16c]
---
0x167 POP
0x168 PUSH1 0x0
0x16a DUP6
0x16b LT
---
0x168: V138 = 0x0
0x16b: V139 = LT V38 0x0
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V136]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V139]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V139]

================================

Block 0x16c
[0x16c:0x171]
---
Predecessors: [0x15b, 0x167]
Successors: [0x172, 0x176]
---
0x16c JUMPDEST
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x16c: JUMPDEST 
0x16d: V140 = ISZERO S0
0x16e: V141 = 0x176
0x171: JUMPI 0x176 V140
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x16c]
Successors: []
---
0x172 PUSH2 0x0
0x175 JUMP
---
0x172: V142 = 0x0
0x175: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x176
[0x176:0x17e]
---
Predecessors: [0x16c, 0x887]
Successors: [0x17f, 0x183]
---
0x176 JUMPDEST
0x177 DUP5
0x178 DUP7
0x179 GT
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x176: JUMPDEST 
0x179: V143 = GT V36 V38
0x17a: V144 = ISZERO V143
0x17b: V145 = 0x183
0x17e: JUMPI 0x183 V144
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x176]
Successors: []
---
0x17f PUSH2 0x0
0x182 JUMP
---
0x17f: V146 = 0x0
0x182: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]

================================

Block 0x183
[0x183:0x18b]
---
Predecessors: [0x176]
Successors: [0x18c, 0x190]
---
0x183 JUMPDEST
0x184 PUSH1 0x0
0x186 DUP5
0x187 GT
0x188 PUSH2 0x190
0x18b JUMPI
---
0x183: JUMPDEST 
0x184: V147 = 0x0
0x187: V148 = GT V40 0x0
0x188: V149 = 0x190
0x18b: JUMPI 0x190 V148
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]

================================

Block 0x18c
[0x18c:0x18f]
---
Predecessors: [0x183]
Successors: []
---
0x18c PUSH2 0x0
0x18f JUMP
---
0x18c: V150 = 0x0
0x18f: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]

================================

Block 0x190
[0x190:0x1ed]
---
Predecessors: [0x183]
Successors: [0x1ee]
---
0x190 JUMPDEST
0x191 DUP7
0x192 DUP7
0x193 DUP7
0x194 DUP7
0x195 DUP7
0x196 DUP7
0x197 PUSH1 0x40
0x199 MLOAD
0x19a PUSH2 0xb50
0x19d DUP1
0x19e PUSH2 0x701
0x1a1 DUP4
0x1a2 CODECOPY
0x1a3 ADD
0x1a4 DUP1
0x1a5 DUP8
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae AND
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 DUP7
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba DUP6
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 DUP5
0x1c1 DUP2
0x1c2 MSTORE
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 DUP4
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce DUP3
0x1cf ISZERO
0x1d0 ISZERO
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP7
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd POP
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 SWAP2
0x1e3 SUB
0x1e4 SWAP1
0x1e5 PUSH1 0x0
0x1e7 CREATE
0x1e8 DUP1
0x1e9 ISZERO
0x1ea PUSH2 0x0
0x1ed JUMPI
---
0x190: JUMPDEST 
0x197: V151 = 0x40
0x199: V152 = M[0x40]
0x19a: V153 = 0xb50
0x19e: V154 = 0x701
0x1a2: CODECOPY V152 0x701 0xb50
0x1a3: V155 = ADD 0xb50 V152
0x1a6: V156 = 0x1
0x1a8: V157 = 0xa0
0x1aa: V158 = 0x2
0x1ac: V159 = EXP 0x2 0xa0
0x1ad: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x1b0: M[V155] = V161
0x1b1: V162 = 0x20
0x1b3: V163 = ADD 0x20 V155
0x1b6: M[V163] = V36
0x1b7: V164 = 0x20
0x1b9: V165 = ADD 0x20 V163
0x1bc: M[V165] = V38
0x1bd: V166 = 0x20
0x1bf: V167 = ADD 0x20 V165
0x1c2: M[V167] = V40
0x1c3: V168 = 0x20
0x1c5: V169 = ADD 0x20 V167
0x1c7: V170 = ISZERO V42
0x1c8: V171 = ISZERO V170
0x1ca: M[V169] = V171
0x1cb: V172 = 0x20
0x1cd: V173 = ADD 0x20 V169
0x1cf: V174 = ISZERO V44
0x1d0: V175 = ISZERO V174
0x1d2: M[V173] = V175
0x1d3: V176 = 0x20
0x1d5: V177 = ADD 0x20 V173
0x1de: V178 = 0x40
0x1e0: V179 = M[0x40]
0x1e3: V180 = SUB V177 V179
0x1e5: V181 = 0x0
0x1e7: V182 = CREATE 0x0 V179 V180
0x1e9: V183 = ISZERO V182
0x1ea: V184 = 0x0
0x1ed: THROWI V183
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V182]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S0, V182]

================================

Block 0x1ee
[0x1ee:0x265]
---
Predecessors: [0x190]
Successors: [0x266]
---
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 DUP1
0x1f7 DUP3
0x1f8 AND
0x1f9 PUSH1 0x0
0x1fb DUP2
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x1
0x200 PUSH1 0x20
0x202 DUP2
0x203 SWAP1
0x204 MSTORE
0x205 PUSH1 0x40
0x207 DUP1
0x208 DUP4
0x209 SHA3
0x20a DUP1
0x20b SLOAD
0x20c PUSH1 0xff
0x20e NOT
0x20f AND
0x210 SWAP1
0x211 SWAP3
0x212 OR
0x213 SWAP1
0x214 SWAP2
0x215 SSTORE
0x216 DUP1
0x217 MLOAD
0x218 PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x239 DUP2
0x23a MSTORE
0x23b CALLER
0x23c SWAP1
0x23d SWAP5
0x23e AND
0x23f PUSH1 0x4
0x241 DUP6
0x242 ADD
0x243 MSTORE
0x244 MLOAD
0x245 SWAP4
0x246 SWAP5
0x247 POP
0x248 SWAP1
0x249 SWAP3
0x24a PUSH4 0xf2fde38b
0x24f SWAP3
0x250 PUSH1 0x24
0x252 DUP1
0x253 DUP3
0x254 ADD
0x255 SWAP4
0x256 SWAP3
0x257 SWAP2
0x258 DUP3
0x259 SWAP1
0x25a SUB
0x25b ADD
0x25c DUP2
0x25d DUP4
0x25e DUP8
0x25f DUP1
0x260 EXTCODESIZE
0x261 ISZERO
0x262 PUSH2 0x0
0x265 JUMPI
---
0x1ee: V185 = 0x1
0x1f0: V186 = 0xa0
0x1f2: V187 = 0x2
0x1f4: V188 = EXP 0x2 0xa0
0x1f5: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f8: V190 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V191 = 0x0
0x1fd: M[0x0] = V190
0x1fe: V192 = 0x1
0x200: V193 = 0x20
0x204: M[0x20] = 0x1
0x205: V194 = 0x40
0x209: V195 = SHA3 0x0 0x40
0x20b: V196 = S[V195]
0x20c: V197 = 0xff
0x20e: V198 = NOT 0xff
0x20f: V199 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V196
0x212: V200 = OR 0x1 V199
0x215: S[V195] = V200
0x217: V201 = M[0x40]
0x218: V202 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x23a: M[V201] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x23b: V203 = CALLER
0x23e: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x23f: V205 = 0x4
0x242: V206 = ADD V201 0x4
0x243: M[V206] = V204
0x244: V207 = M[0x40]
0x24a: V208 = 0xf2fde38b
0x250: V209 = 0x24
0x254: V210 = ADD V201 0x24
0x25a: V211 = SUB V201 V207
0x25b: V212 = ADD V211 0x24
0x260: V213 = EXTCODESIZE V190
0x261: V214 = ISZERO V213
0x262: V215 = 0x0
0x265: THROWI V214
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, S1, V182]
Stack pops: 2
Stack additions: [S0, V190, 0xf2fde38b, V210, 0x0, V207, V212, V207, 0x0, V190]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V182, V190, 0xf2fde38b, V210, 0x0, V207, V212, V207, 0x0, V190]

================================

Block 0x266
[0x266:0x26f]
---
Predecessors: [0x1ee]
Successors: [0x270]
---
0x266 PUSH1 0x32
0x268 GAS
0x269 SUB
0x26a CALL
0x26b ISZERO
0x26c PUSH2 0x0
0x26f JUMPI
---
0x266: V216 = 0x32
0x268: V217 = GAS
0x269: V218 = SUB V217 0x32
0x26a: V219 = CALL V218 V190 0x0 V207 V212 V207 0x0
0x26b: V220 = ISZERO V219
0x26c: V221 = 0x0
0x26f: THROWI V220
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V182, V190, 0xf2fde38b, V210, 0x0, V207, V212, V207, 0x0, V190]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V182, V190, 0xf2fde38b, V210]

================================

Block 0x270
[0x270:0x2e4]
---
Predecessors: [0x266]
Successors: [0x2e5]
---
0x270 POP
0x271 POP
0x272 PUSH1 0x40
0x274 DUP1
0x275 MLOAD
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e CALLER
0x27f DUP2
0x280 AND
0x281 DUP3
0x282 MSTORE
0x283 DUP1
0x284 DUP6
0x285 AND
0x286 PUSH1 0x20
0x288 DUP4
0x289 ADD
0x28a MSTORE
0x28b DUP11
0x28c AND
0x28d DUP2
0x28e DUP4
0x28f ADD
0x290 MSTORE
0x291 PUSH1 0x60
0x293 DUP2
0x294 ADD
0x295 DUP10
0x296 SWAP1
0x297 MSTORE
0x298 PUSH1 0x80
0x29a DUP2
0x29b ADD
0x29c DUP9
0x29d SWAP1
0x29e MSTORE
0x29f PUSH1 0xa0
0x2a1 DUP2
0x2a2 ADD
0x2a3 DUP8
0x2a4 SWAP1
0x2a5 MSTORE
0x2a6 DUP6
0x2a7 ISZERO
0x2a8 ISZERO
0x2a9 PUSH1 0xc0
0x2ab DUP3
0x2ac ADD
0x2ad MSTORE
0x2ae DUP5
0x2af ISZERO
0x2b0 ISZERO
0x2b1 PUSH1 0xe0
0x2b3 DUP3
0x2b4 ADD
0x2b5 MSTORE
0x2b6 SWAP1
0x2b7 MLOAD
0x2b8 PUSH32 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d
0x2d9 SWAP3
0x2da POP
0x2db SWAP1
0x2dc DUP2
0x2dd SWAP1
0x2de SUB
0x2df PUSH2 0x100
0x2e2 ADD
0x2e3 SWAP1
0x2e4 LOG1
---
0x272: V222 = 0x40
0x275: V223 = M[0x40]
0x276: V224 = 0x1
0x278: V225 = 0xa0
0x27a: V226 = 0x2
0x27c: V227 = EXP 0x2 0xa0
0x27d: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V229 = CALLER
0x280: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x282: M[V223] = V230
0x285: V231 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x286: V232 = 0x20
0x289: V233 = ADD V223 0x20
0x28a: M[V233] = V231
0x28c: V234 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V235 = ADD 0x40 V223
0x290: M[V235] = V234
0x291: V236 = 0x60
0x294: V237 = ADD V223 0x60
0x297: M[V237] = V36
0x298: V238 = 0x80
0x29b: V239 = ADD V223 0x80
0x29e: M[V239] = V38
0x29f: V240 = 0xa0
0x2a2: V241 = ADD V223 0xa0
0x2a5: M[V241] = V40
0x2a7: V242 = ISZERO V42
0x2a8: V243 = ISZERO V242
0x2a9: V244 = 0xc0
0x2ac: V245 = ADD V223 0xc0
0x2ad: M[V245] = V243
0x2af: V246 = ISZERO V44
0x2b0: V247 = ISZERO V246
0x2b1: V248 = 0xe0
0x2b4: V249 = ADD V223 0xe0
0x2b5: M[V249] = V247
0x2b7: V250 = M[0x40]
0x2b8: V251 = 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d
0x2de: V252 = SUB V223 V250
0x2df: V253 = 0x100
0x2e2: V254 = ADD 0x100 V252
0x2e4: LOG V250 V254 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V182, V190, 0xf2fde38b, V210]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V182]

================================

Block 0x2e5
[0x2e5:0x2ee]
---
Predecessors: [0x270]
Successors: [0x7c]
---
0x2e5 JUMPDEST
0x2e6 SWAP7
0x2e7 SWAP6
0x2e8 POP
0x2e9 POP
0x2ea POP
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee JUMP
---
0x2e5: JUMPDEST 
0x2ee: JUMP 0x7c
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V182]
Stack pops: 8
Stack additions: [S0]
Exit stack: [V10, V182]

================================

Block 0x2ef
[0x2ef:0x306]
---
Predecessors: [0x9e]
Successors: [0x307, 0x30b]
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 SLOAD
0x2f4 CALLER
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd SWAP1
0x2fe DUP2
0x2ff AND
0x300 SWAP2
0x301 AND
0x302 EQ
0x303 PUSH2 0x30b
0x306 JUMPI
---
0x2ef: JUMPDEST 
0x2f0: V255 = 0x0
0x2f3: V256 = S[0x0]
0x2f4: V257 = CALLER
0x2f5: V258 = 0x1
0x2f7: V259 = 0xa0
0x2f9: V260 = 0x2
0x2fb: V261 = EXP 0x2 0xa0
0x2fc: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x301: V264 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x302: V265 = EQ V264 V263
0x303: V266 = 0x30b
0x306: JUMPI 0x30b V265
---
Entry stack: [V10, 0xab, V62, V64]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xab, V62, V64, 0x0]

================================

Block 0x307
[0x307:0x30a]
---
Predecessors: [0x2ef]
Successors: []
---
0x307 PUSH2 0x0
0x30a JUMP
---
0x307: V267 = 0x0
0x30a: THROW 
---
Entry stack: [V10, 0xab, V62, V64, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, 0x0]

================================

Block 0x30b
[0x30b:0x3bf]
---
Predecessors: [0x2ef]
Successors: [0x3c0]
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e DUP1
0x30f MLOAD
0x310 PUSH1 0x1
0x312 PUSH1 0xa0
0x314 PUSH1 0x2
0x316 EXP
0x317 SUB
0x318 DUP6
0x319 AND
0x31a DUP2
0x31b MSTORE
0x31c PUSH1 0x20
0x31e DUP2
0x31f ADD
0x320 DUP5
0x321 SWAP1
0x322 MSTORE
0x323 DUP2
0x324 MLOAD
0x325 PUSH32 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x346 SWAP3
0x347 SWAP2
0x348 DUP2
0x349 SWAP1
0x34a SUB
0x34b SWAP1
0x34c SWAP2
0x34d ADD
0x34e SWAP1
0x34f LOG1
0x350 PUSH1 0x0
0x352 DUP1
0x353 SLOAD
0x354 PUSH1 0x40
0x356 DUP1
0x357 MLOAD
0x358 PUSH1 0x20
0x35a SWAP1
0x35b DUP2
0x35c ADD
0x35d DUP5
0x35e SWAP1
0x35f MSTORE
0x360 DUP2
0x361 MLOAD
0x362 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x383 DUP2
0x384 MSTORE
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP4
0x38e DUP5
0x38f AND
0x390 PUSH1 0x4
0x392 DUP3
0x393 ADD
0x394 MSTORE
0x395 PUSH1 0x24
0x397 DUP2
0x398 ADD
0x399 DUP8
0x39a SWAP1
0x39b MSTORE
0x39c SWAP2
0x39d MLOAD
0x39e SWAP3
0x39f DUP8
0x3a0 AND
0x3a1 SWAP4
0x3a2 PUSH4 0xa9059cbb
0x3a7 SWAP4
0x3a8 PUSH1 0x44
0x3aa DUP1
0x3ab DUP6
0x3ac ADD
0x3ad SWAP5
0x3ae SWAP2
0x3af SWAP3
0x3b0 SWAP2
0x3b1 DUP4
0x3b2 SWAP1
0x3b3 SUB
0x3b4 ADD
0x3b5 SWAP1
0x3b6 DUP3
0x3b7 SWAP1
0x3b8 DUP8
0x3b9 DUP1
0x3ba EXTCODESIZE
0x3bb ISZERO
0x3bc PUSH2 0x0
0x3bf JUMPI
---
0x30b: JUMPDEST 
0x30c: V268 = 0x40
0x30f: V269 = M[0x40]
0x310: V270 = 0x1
0x312: V271 = 0xa0
0x314: V272 = 0x2
0x316: V273 = EXP 0x2 0xa0
0x317: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V275 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x31b: M[V269] = V275
0x31c: V276 = 0x20
0x31f: V277 = ADD V269 0x20
0x322: M[V277] = V64
0x324: V278 = M[0x40]
0x325: V279 = 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x34a: V280 = SUB V269 V278
0x34d: V281 = ADD 0x40 V280
0x34f: LOG V278 V281 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x350: V282 = 0x0
0x353: V283 = S[0x0]
0x354: V284 = 0x40
0x357: V285 = M[0x40]
0x358: V286 = 0x20
0x35c: V287 = ADD 0x20 V285
0x35f: M[V287] = 0x0
0x361: V288 = M[0x40]
0x362: V289 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x384: M[V288] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x385: V290 = 0x1
0x387: V291 = 0xa0
0x389: V292 = 0x2
0x38b: V293 = EXP 0x2 0xa0
0x38c: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x390: V296 = 0x4
0x393: V297 = ADD V288 0x4
0x394: M[V297] = V295
0x395: V298 = 0x24
0x398: V299 = ADD V288 0x24
0x39b: M[V299] = V64
0x39d: V300 = M[0x40]
0x3a0: V301 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V302 = 0xa9059cbb
0x3a8: V303 = 0x44
0x3ac: V304 = ADD V288 0x44
0x3b3: V305 = SUB V288 V300
0x3b4: V306 = ADD V305 0x44
0x3ba: V307 = EXTCODESIZE V301
0x3bb: V308 = ISZERO V307
0x3bc: V309 = 0x0
0x3bf: THROWI V308
---
Entry stack: [V10, 0xab, V62, V64, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V301, 0xa9059cbb, V304, 0x20, V300, V306, V300, 0x0, V301]
Exit stack: [V10, 0xab, V62, V64, 0x0, V301, 0xa9059cbb, V304, 0x20, V300, V306, V300, 0x0, V301]

================================

Block 0x3c0
[0x3c0:0x3c9]
---
Predecessors: [0x30b]
Successors: [0x3ca]
---
0x3c0 PUSH1 0x32
0x3c2 GAS
0x3c3 SUB
0x3c4 CALL
0x3c5 ISZERO
0x3c6 PUSH2 0x0
0x3c9 JUMPI
---
0x3c0: V310 = 0x32
0x3c2: V311 = GAS
0x3c3: V312 = SUB V311 0x32
0x3c4: V313 = CALL V312 V301 0x0 V300 V306 V300 0x20
0x3c5: V314 = ISZERO V313
0x3c6: V315 = 0x0
0x3c9: THROWI V314
---
Entry stack: [V10, 0xab, V62, V64, 0x0, V301, 0xa9059cbb, V304, 0x20, V300, V306, V300, 0x0, V301]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, 0x0, V301, 0xa9059cbb, V304]

================================

Block 0x3ca
[0x3ca:0x3d2]
---
Predecessors: [0x3c0]
Successors: [0x3d3]
---
0x3ca POP
0x3cb POP
0x3cc PUSH1 0x40
0x3ce MLOAD
0x3cf MLOAD
0x3d0 SWAP2
0x3d1 POP
0x3d2 POP
---
0x3cc: V316 = 0x40
0x3ce: V317 = M[0x40]
0x3cf: V318 = M[V317]
---
Entry stack: [V10, 0xab, V62, V64, 0x0, V301, 0xa9059cbb, V304]
Stack pops: 4
Stack additions: [V318]
Exit stack: [V10, 0xab, V62, V64, V318]

================================

Block 0x3d3
[0x3d3:0x3d3]
---
Predecessors: [0x3ca]
Successors: [0x3d4]
---
0x3d3 JUMPDEST
---
0x3d3: JUMPDEST 
---
Entry stack: [V10, 0xab, V62, V64, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, V318]

================================

Block 0x3d4
[0x3d4:0x3d9]
---
Predecessors: [0x3d3]
Successors: [0xab]
---
0x3d4 JUMPDEST
0x3d5 SWAP3
0x3d6 SWAP2
0x3d7 POP
0x3d8 POP
0x3d9 JUMP
---
0x3d4: JUMPDEST 
0x3d9: JUMP 0xab
---
Entry stack: [V10, 0xab, V62, V64, V318]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V318]

================================

Block 0x3da
[0x3da:0x404]
---
Predecessors: [0xc5]
Successors: [0x405, 0x65c]
---
0x3da JUMPDEST
0x3db PUSH1 0x1
0x3dd PUSH1 0xa0
0x3df PUSH1 0x2
0x3e1 EXP
0x3e2 SUB
0x3e3 DUP2
0x3e4 AND
0x3e5 PUSH1 0x0
0x3e7 SWAP1
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x1
0x3ec PUSH1 0x20
0x3ee MSTORE
0x3ef PUSH1 0x40
0x3f1 DUP2
0x3f2 SHA3
0x3f3 SLOAD
0x3f4 PUSH1 0xff
0x3f6 AND
0x3f7 SWAP1
0x3f8 DUP1
0x3f9 DUP1
0x3fa DUP1
0x3fb DUP1
0x3fc DUP1
0x3fd DUP1
0x3fe DUP1
0x3ff DUP9
0x400 ISZERO
0x401 PUSH2 0x65c
0x404 JUMPI
---
0x3da: JUMPDEST 
0x3db: V319 = 0x1
0x3dd: V320 = 0xa0
0x3df: V321 = 0x2
0x3e1: V322 = EXP 0x2 0xa0
0x3e2: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e4: V324 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V325 = 0x0
0x3e9: M[0x0] = V324
0x3ea: V326 = 0x1
0x3ec: V327 = 0x20
0x3ee: M[0x20] = 0x1
0x3ef: V328 = 0x40
0x3f2: V329 = SHA3 0x0 0x40
0x3f3: V330 = S[V329]
0x3f4: V331 = 0xff
0x3f6: V332 = AND 0xff V330
0x400: V333 = ISZERO V332
0x401: V334 = 0x65c
0x404: JUMPI 0x65c V333
---
Entry stack: [V10, 0xcf, V78]
Stack pops: 1
Stack additions: [S0, V332, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0xcf, V78, V332, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x405
[0x405:0x444]
---
Predecessors: [0x3da]
Successors: [0x445]
---
0x405 DUP10
0x406 SWAP1
0x407 POP
0x408 DUP1
0x409 PUSH1 0x1
0x40b PUSH1 0xa0
0x40d PUSH1 0x2
0x40f EXP
0x410 SUB
0x411 AND
0x412 PUSH4 0x8da5cb5b
0x417 PUSH1 0x0
0x419 PUSH1 0x40
0x41b MLOAD
0x41c PUSH1 0x20
0x41e ADD
0x41f MSTORE
0x420 PUSH1 0x40
0x422 MLOAD
0x423 DUP2
0x424 PUSH1 0xe0
0x426 PUSH1 0x2
0x428 EXP
0x429 MUL
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x4
0x42e ADD
0x42f DUP1
0x430 SWAP1
0x431 POP
0x432 PUSH1 0x20
0x434 PUSH1 0x40
0x436 MLOAD
0x437 DUP1
0x438 DUP4
0x439 SUB
0x43a DUP2
0x43b PUSH1 0x0
0x43d DUP8
0x43e DUP1
0x43f EXTCODESIZE
0x440 ISZERO
0x441 PUSH2 0x0
0x444 JUMPI
---
0x409: V335 = 0x1
0x40b: V336 = 0xa0
0x40d: V337 = 0x2
0x40f: V338 = EXP 0x2 0xa0
0x410: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x412: V341 = 0x8da5cb5b
0x417: V342 = 0x0
0x419: V343 = 0x40
0x41b: V344 = M[0x40]
0x41c: V345 = 0x20
0x41e: V346 = ADD 0x20 V344
0x41f: M[V346] = 0x0
0x420: V347 = 0x40
0x422: V348 = M[0x40]
0x424: V349 = 0xe0
0x426: V350 = 0x2
0x428: V351 = EXP 0x2 0xe0
0x429: V352 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x42b: M[V348] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x42c: V353 = 0x4
0x42e: V354 = ADD 0x4 V348
0x432: V355 = 0x20
0x434: V356 = 0x40
0x436: V357 = M[0x40]
0x439: V358 = SUB V354 V357
0x43b: V359 = 0x0
0x43f: V360 = EXTCODESIZE V340
0x440: V361 = ISZERO V360
0x441: V362 = 0x0
0x444: THROWI V361
---
Entry stack: [V10, 0xcf, V78, V332, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S9, V340, 0x8da5cb5b, V354, 0x20, V357, V358, V357, 0x0, V340]
Exit stack: [V10, 0xcf, V78, V332, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V340, 0x8da5cb5b, V354, 0x20, V357, V358, V357, 0x0, V340]

================================

Block 0x445
[0x445:0x44e]
---
Predecessors: [0x405]
Successors: [0x44f]
---
0x445 PUSH1 0x32
0x447 GAS
0x448 SUB
0x449 CALL
0x44a ISZERO
0x44b PUSH2 0x0
0x44e JUMPI
---
0x445: V363 = 0x32
0x447: V364 = GAS
0x448: V365 = SUB V364 0x32
0x449: V366 = CALL V365 V340 0x0 V357 V358 V357 0x20
0x44a: V367 = ISZERO V366
0x44b: V368 = 0x0
0x44e: THROWI V367
---
Entry stack: [V10, 0xcf, V78, V332, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V340, 0x8da5cb5b, V354, 0x20, V357, V358, V357, 0x0, V340]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V340, 0x8da5cb5b, V354]

================================

Block 0x44f
[0x44f:0x49a]
---
Predecessors: [0x445]
Successors: [0x49b]
---
0x44f POP
0x450 POP
0x451 POP
0x452 PUSH1 0x40
0x454 MLOAD
0x455 DUP1
0x456 MLOAD
0x457 SWAP1
0x458 PUSH1 0x20
0x45a ADD
0x45b POP
0x45c SWAP8
0x45d POP
0x45e DUP1
0x45f PUSH1 0x1
0x461 PUSH1 0xa0
0x463 PUSH1 0x2
0x465 EXP
0x466 SUB
0x467 AND
0x468 PUSH4 0x38d52e0f
0x46d PUSH1 0x0
0x46f PUSH1 0x40
0x471 MLOAD
0x472 PUSH1 0x20
0x474 ADD
0x475 MSTORE
0x476 PUSH1 0x40
0x478 MLOAD
0x479 DUP2
0x47a PUSH1 0xe0
0x47c PUSH1 0x2
0x47e EXP
0x47f MUL
0x480 DUP2
0x481 MSTORE
0x482 PUSH1 0x4
0x484 ADD
0x485 DUP1
0x486 SWAP1
0x487 POP
0x488 PUSH1 0x20
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP1
0x48e DUP4
0x48f SUB
0x490 DUP2
0x491 PUSH1 0x0
0x493 DUP8
0x494 DUP1
0x495 EXTCODESIZE
0x496 ISZERO
0x497 PUSH2 0x0
0x49a JUMPI
---
0x452: V369 = 0x40
0x454: V370 = M[0x40]
0x456: V371 = M[V370]
0x458: V372 = 0x20
0x45a: V373 = ADD 0x20 V370
0x45f: V374 = 0x1
0x461: V375 = 0xa0
0x463: V376 = 0x2
0x465: V377 = EXP 0x2 0xa0
0x466: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x468: V380 = 0x38d52e0f
0x46d: V381 = 0x0
0x46f: V382 = 0x40
0x471: V383 = M[0x40]
0x472: V384 = 0x20
0x474: V385 = ADD 0x20 V383
0x475: M[V385] = 0x0
0x476: V386 = 0x40
0x478: V387 = M[0x40]
0x47a: V388 = 0xe0
0x47c: V389 = 0x2
0x47e: V390 = EXP 0x2 0xe0
0x47f: V391 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x481: M[V387] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x482: V392 = 0x4
0x484: V393 = ADD 0x4 V387
0x488: V394 = 0x20
0x48a: V395 = 0x40
0x48c: V396 = M[0x40]
0x48f: V397 = SUB V393 V396
0x491: V398 = 0x0
0x495: V399 = EXTCODESIZE V379
0x496: V400 = ISZERO V399
0x497: V401 = 0x0
0x49a: THROWI V400
---
Entry stack: [V10, 0xcf, V78, V332, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V340, 0x8da5cb5b, V354]
Stack pops: 11
Stack additions: [V371, S9, S8, S7, S6, S5, S4, S3, V379, 0x38d52e0f, V393, 0x20, V396, V397, V396, 0x0, V379]
Exit stack: [V10, 0xcf, V78, V332, V371, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V379, 0x38d52e0f, V393, 0x20, V396, V397, V396, 0x0, V379]

================================

Block 0x49b
[0x49b:0x4a4]
---
Predecessors: [0x44f]
Successors: [0x4a5]
---
0x49b PUSH1 0x32
0x49d GAS
0x49e SUB
0x49f CALL
0x4a0 ISZERO
0x4a1 PUSH2 0x0
0x4a4 JUMPI
---
0x49b: V402 = 0x32
0x49d: V403 = GAS
0x49e: V404 = SUB V403 0x32
0x49f: V405 = CALL V404 V379 0x0 V396 V397 V396 0x20
0x4a0: V406 = ISZERO V405
0x4a1: V407 = 0x0
0x4a4: THROWI V406
---
Entry stack: [V10, 0xcf, V78, V332, V371, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V379, 0x38d52e0f, V393, 0x20, V396, V397, V396, 0x0, V379]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, V371, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V379, 0x38d52e0f, V393]

================================

Block 0x4a5
[0x4a5:0x4f0]
---
Predecessors: [0x49b]
Successors: [0x4f1]
---
0x4a5 POP
0x4a6 POP
0x4a7 POP
0x4a8 PUSH1 0x40
0x4aa MLOAD
0x4ab DUP1
0x4ac MLOAD
0x4ad SWAP1
0x4ae PUSH1 0x20
0x4b0 ADD
0x4b1 POP
0x4b2 SWAP7
0x4b3 POP
0x4b4 DUP1
0x4b5 PUSH1 0x1
0x4b7 PUSH1 0xa0
0x4b9 PUSH1 0x2
0x4bb EXP
0x4bc SUB
0x4bd AND
0x4be PUSH4 0x8620410b
0x4c3 PUSH1 0x0
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 PUSH1 0x20
0x4ca ADD
0x4cb MSTORE
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf DUP2
0x4d0 PUSH1 0xe0
0x4d2 PUSH1 0x2
0x4d4 EXP
0x4d5 MUL
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x4
0x4da ADD
0x4db DUP1
0x4dc SWAP1
0x4dd POP
0x4de PUSH1 0x20
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP1
0x4e4 DUP4
0x4e5 SUB
0x4e6 DUP2
0x4e7 PUSH1 0x0
0x4e9 DUP8
0x4ea DUP1
0x4eb EXTCODESIZE
0x4ec ISZERO
0x4ed PUSH2 0x0
0x4f0 JUMPI
---
0x4a8: V408 = 0x40
0x4aa: V409 = M[0x40]
0x4ac: V410 = M[V409]
0x4ae: V411 = 0x20
0x4b0: V412 = ADD 0x20 V409
0x4b5: V413 = 0x1
0x4b7: V414 = 0xa0
0x4b9: V415 = 0x2
0x4bb: V416 = EXP 0x2 0xa0
0x4bc: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bd: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x4be: V419 = 0x8620410b
0x4c3: V420 = 0x0
0x4c5: V421 = 0x40
0x4c7: V422 = M[0x40]
0x4c8: V423 = 0x20
0x4ca: V424 = ADD 0x20 V422
0x4cb: M[V424] = 0x0
0x4cc: V425 = 0x40
0x4ce: V426 = M[0x40]
0x4d0: V427 = 0xe0
0x4d2: V428 = 0x2
0x4d4: V429 = EXP 0x2 0xe0
0x4d5: V430 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8620410b
0x4d7: M[V426] = 0x8620410b00000000000000000000000000000000000000000000000000000000
0x4d8: V431 = 0x4
0x4da: V432 = ADD 0x4 V426
0x4de: V433 = 0x20
0x4e0: V434 = 0x40
0x4e2: V435 = M[0x40]
0x4e5: V436 = SUB V432 V435
0x4e7: V437 = 0x0
0x4eb: V438 = EXTCODESIZE V418
0x4ec: V439 = ISZERO V438
0x4ed: V440 = 0x0
0x4f0: THROWI V439
---
Entry stack: [V10, 0xcf, V78, V332, V371, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V379, 0x38d52e0f, V393]
Stack pops: 10
Stack additions: [V410, S8, S7, S6, S5, S4, S3, V418, 0x8620410b, V432, 0x20, V435, V436, V435, 0x0, V418]
Exit stack: [V10, 0xcf, V78, V332, V371, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V418, 0x8620410b, V432, 0x20, V435, V436, V435, 0x0, V418]

================================

Block 0x4f1
[0x4f1:0x4fa]
---
Predecessors: [0x4a5]
Successors: [0x4fb]
---
0x4f1 PUSH1 0x32
0x4f3 GAS
0x4f4 SUB
0x4f5 CALL
0x4f6 ISZERO
0x4f7 PUSH2 0x0
0x4fa JUMPI
---
0x4f1: V441 = 0x32
0x4f3: V442 = GAS
0x4f4: V443 = SUB V442 0x32
0x4f5: V444 = CALL V443 V418 0x0 V435 V436 V435 0x20
0x4f6: V445 = ISZERO V444
0x4f7: V446 = 0x0
0x4fa: THROWI V445
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V418, 0x8620410b, V432, 0x20, V435, V436, V435, 0x0, V418]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, V371, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V418, 0x8620410b, V432]

================================

Block 0x4fb
[0x4fb:0x546]
---
Predecessors: [0x4f1]
Successors: [0x547]
---
0x4fb POP
0x4fc POP
0x4fd POP
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 MLOAD
0x503 SWAP1
0x504 PUSH1 0x20
0x506 ADD
0x507 POP
0x508 SWAP6
0x509 POP
0x50a DUP1
0x50b PUSH1 0x1
0x50d PUSH1 0xa0
0x50f PUSH1 0x2
0x511 EXP
0x512 SUB
0x513 AND
0x514 PUSH4 0x4b750334
0x519 PUSH1 0x0
0x51b PUSH1 0x40
0x51d MLOAD
0x51e PUSH1 0x20
0x520 ADD
0x521 MSTORE
0x522 PUSH1 0x40
0x524 MLOAD
0x525 DUP2
0x526 PUSH1 0xe0
0x528 PUSH1 0x2
0x52a EXP
0x52b MUL
0x52c DUP2
0x52d MSTORE
0x52e PUSH1 0x4
0x530 ADD
0x531 DUP1
0x532 SWAP1
0x533 POP
0x534 PUSH1 0x20
0x536 PUSH1 0x40
0x538 MLOAD
0x539 DUP1
0x53a DUP4
0x53b SUB
0x53c DUP2
0x53d PUSH1 0x0
0x53f DUP8
0x540 DUP1
0x541 EXTCODESIZE
0x542 ISZERO
0x543 PUSH2 0x0
0x546 JUMPI
---
0x4fe: V447 = 0x40
0x500: V448 = M[0x40]
0x502: V449 = M[V448]
0x504: V450 = 0x20
0x506: V451 = ADD 0x20 V448
0x50b: V452 = 0x1
0x50d: V453 = 0xa0
0x50f: V454 = 0x2
0x511: V455 = EXP 0x2 0xa0
0x512: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x514: V458 = 0x4b750334
0x519: V459 = 0x0
0x51b: V460 = 0x40
0x51d: V461 = M[0x40]
0x51e: V462 = 0x20
0x520: V463 = ADD 0x20 V461
0x521: M[V463] = 0x0
0x522: V464 = 0x40
0x524: V465 = M[0x40]
0x526: V466 = 0xe0
0x528: V467 = 0x2
0x52a: V468 = EXP 0x2 0xe0
0x52b: V469 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4b750334
0x52d: M[V465] = 0x4b75033400000000000000000000000000000000000000000000000000000000
0x52e: V470 = 0x4
0x530: V471 = ADD 0x4 V465
0x534: V472 = 0x20
0x536: V473 = 0x40
0x538: V474 = M[0x40]
0x53b: V475 = SUB V471 V474
0x53d: V476 = 0x0
0x541: V477 = EXTCODESIZE V457
0x542: V478 = ISZERO V477
0x543: V479 = 0x0
0x546: THROWI V478
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V418, 0x8620410b, V432]
Stack pops: 9
Stack additions: [V449, S7, S6, S5, S4, S3, V457, 0x4b750334, V471, 0x20, V474, V475, V474, 0x0, V457]
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, 0x0, 0x0, 0x0, 0x0, V78, V457, 0x4b750334, V471, 0x20, V474, V475, V474, 0x0, V457]

================================

Block 0x547
[0x547:0x550]
---
Predecessors: [0x4fb]
Successors: [0x551]
---
0x547 PUSH1 0x32
0x549 GAS
0x54a SUB
0x54b CALL
0x54c ISZERO
0x54d PUSH2 0x0
0x550 JUMPI
---
0x547: V480 = 0x32
0x549: V481 = GAS
0x54a: V482 = SUB V481 0x32
0x54b: V483 = CALL V482 V457 0x0 V474 V475 V474 0x20
0x54c: V484 = ISZERO V483
0x54d: V485 = 0x0
0x550: THROWI V484
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, 0x0, 0x0, 0x0, 0x0, V78, V457, 0x4b750334, V471, 0x20, V474, V475, V474, 0x0, V457]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, 0x0, 0x0, 0x0, 0x0, V78, V457, 0x4b750334, V471]

================================

Block 0x551
[0x551:0x59c]
---
Predecessors: [0x547]
Successors: [0x59d]
---
0x551 POP
0x552 POP
0x553 POP
0x554 PUSH1 0x40
0x556 MLOAD
0x557 DUP1
0x558 MLOAD
0x559 SWAP1
0x55a PUSH1 0x20
0x55c ADD
0x55d POP
0x55e SWAP5
0x55f POP
0x560 DUP1
0x561 PUSH1 0x1
0x563 PUSH1 0xa0
0x565 PUSH1 0x2
0x567 EXP
0x568 SUB
0x569 AND
0x56a PUSH4 0x976a8435
0x56f PUSH1 0x0
0x571 PUSH1 0x40
0x573 MLOAD
0x574 PUSH1 0x20
0x576 ADD
0x577 MSTORE
0x578 PUSH1 0x40
0x57a MLOAD
0x57b DUP2
0x57c PUSH1 0xe0
0x57e PUSH1 0x2
0x580 EXP
0x581 MUL
0x582 DUP2
0x583 MSTORE
0x584 PUSH1 0x4
0x586 ADD
0x587 DUP1
0x588 SWAP1
0x589 POP
0x58a PUSH1 0x20
0x58c PUSH1 0x40
0x58e MLOAD
0x58f DUP1
0x590 DUP4
0x591 SUB
0x592 DUP2
0x593 PUSH1 0x0
0x595 DUP8
0x596 DUP1
0x597 EXTCODESIZE
0x598 ISZERO
0x599 PUSH2 0x0
0x59c JUMPI
---
0x554: V486 = 0x40
0x556: V487 = M[0x40]
0x558: V488 = M[V487]
0x55a: V489 = 0x20
0x55c: V490 = ADD 0x20 V487
0x561: V491 = 0x1
0x563: V492 = 0xa0
0x565: V493 = 0x2
0x567: V494 = EXP 0x2 0xa0
0x568: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x569: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x56a: V497 = 0x976a8435
0x56f: V498 = 0x0
0x571: V499 = 0x40
0x573: V500 = M[0x40]
0x574: V501 = 0x20
0x576: V502 = ADD 0x20 V500
0x577: M[V502] = 0x0
0x578: V503 = 0x40
0x57a: V504 = M[0x40]
0x57c: V505 = 0xe0
0x57e: V506 = 0x2
0x580: V507 = EXP 0x2 0xe0
0x581: V508 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x976a8435
0x583: M[V504] = 0x976a843500000000000000000000000000000000000000000000000000000000
0x584: V509 = 0x4
0x586: V510 = ADD 0x4 V504
0x58a: V511 = 0x20
0x58c: V512 = 0x40
0x58e: V513 = M[0x40]
0x591: V514 = SUB V510 V513
0x593: V515 = 0x0
0x597: V516 = EXTCODESIZE V496
0x598: V517 = ISZERO V516
0x599: V518 = 0x0
0x59c: THROWI V517
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, 0x0, 0x0, 0x0, 0x0, V78, V457, 0x4b750334, V471]
Stack pops: 8
Stack additions: [V488, S6, S5, S4, S3, V496, 0x976a8435, V510, 0x20, V513, V514, V513, 0x0, V496]
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, 0x0, 0x0, 0x0, V78, V496, 0x976a8435, V510, 0x20, V513, V514, V513, 0x0, V496]

================================

Block 0x59d
[0x59d:0x5a6]
---
Predecessors: [0x551]
Successors: [0x5a7]
---
0x59d PUSH1 0x32
0x59f GAS
0x5a0 SUB
0x5a1 CALL
0x5a2 ISZERO
0x5a3 PUSH2 0x0
0x5a6 JUMPI
---
0x59d: V519 = 0x32
0x59f: V520 = GAS
0x5a0: V521 = SUB V520 0x32
0x5a1: V522 = CALL V521 V496 0x0 V513 V514 V513 0x20
0x5a2: V523 = ISZERO V522
0x5a3: V524 = 0x0
0x5a6: THROWI V523
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, 0x0, 0x0, 0x0, V78, V496, 0x976a8435, V510, 0x20, V513, V514, V513, 0x0, V496]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, 0x0, 0x0, 0x0, V78, V496, 0x976a8435, V510]

================================

Block 0x5a7
[0x5a7:0x5f2]
---
Predecessors: [0x59d]
Successors: [0x5f3]
---
0x5a7 POP
0x5a8 POP
0x5a9 POP
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae MLOAD
0x5af SWAP1
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 POP
0x5b4 SWAP4
0x5b5 POP
0x5b6 DUP1
0x5b7 PUSH1 0x1
0x5b9 PUSH1 0xa0
0x5bb PUSH1 0x2
0x5bd EXP
0x5be SUB
0x5bf AND
0x5c0 PUSH4 0xb1099347
0x5c5 PUSH1 0x0
0x5c7 PUSH1 0x40
0x5c9 MLOAD
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd MSTORE
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 DUP2
0x5d2 PUSH1 0xe0
0x5d4 PUSH1 0x2
0x5d6 EXP
0x5d7 MUL
0x5d8 DUP2
0x5d9 MSTORE
0x5da PUSH1 0x4
0x5dc ADD
0x5dd DUP1
0x5de SWAP1
0x5df POP
0x5e0 PUSH1 0x20
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 DUP1
0x5e6 DUP4
0x5e7 SUB
0x5e8 DUP2
0x5e9 PUSH1 0x0
0x5eb DUP8
0x5ec DUP1
0x5ed EXTCODESIZE
0x5ee ISZERO
0x5ef PUSH2 0x0
0x5f2 JUMPI
---
0x5aa: V525 = 0x40
0x5ac: V526 = M[0x40]
0x5ae: V527 = M[V526]
0x5b0: V528 = 0x20
0x5b2: V529 = ADD 0x20 V526
0x5b7: V530 = 0x1
0x5b9: V531 = 0xa0
0x5bb: V532 = 0x2
0x5bd: V533 = EXP 0x2 0xa0
0x5be: V534 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bf: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x5c0: V536 = 0xb1099347
0x5c5: V537 = 0x0
0x5c7: V538 = 0x40
0x5c9: V539 = M[0x40]
0x5ca: V540 = 0x20
0x5cc: V541 = ADD 0x20 V539
0x5cd: M[V541] = 0x0
0x5ce: V542 = 0x40
0x5d0: V543 = M[0x40]
0x5d2: V544 = 0xe0
0x5d4: V545 = 0x2
0x5d6: V546 = EXP 0x2 0xe0
0x5d7: V547 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1099347
0x5d9: M[V543] = 0xb109934700000000000000000000000000000000000000000000000000000000
0x5da: V548 = 0x4
0x5dc: V549 = ADD 0x4 V543
0x5e0: V550 = 0x20
0x5e2: V551 = 0x40
0x5e4: V552 = M[0x40]
0x5e7: V553 = SUB V549 V552
0x5e9: V554 = 0x0
0x5ed: V555 = EXTCODESIZE V535
0x5ee: V556 = ISZERO V555
0x5ef: V557 = 0x0
0x5f2: THROWI V556
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, 0x0, 0x0, 0x0, V78, V496, 0x976a8435, V510]
Stack pops: 7
Stack additions: [V527, S5, S4, S3, V535, 0xb1099347, V549, 0x20, V552, V553, V552, 0x0, V535]
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, 0x0, 0x0, V78, V535, 0xb1099347, V549, 0x20, V552, V553, V552, 0x0, V535]

================================

Block 0x5f3
[0x5f3:0x5fc]
---
Predecessors: [0x5a7]
Successors: [0x5fd]
---
0x5f3 PUSH1 0x32
0x5f5 GAS
0x5f6 SUB
0x5f7 CALL
0x5f8 ISZERO
0x5f9 PUSH2 0x0
0x5fc JUMPI
---
0x5f3: V558 = 0x32
0x5f5: V559 = GAS
0x5f6: V560 = SUB V559 0x32
0x5f7: V561 = CALL V560 V535 0x0 V552 V553 V552 0x20
0x5f8: V562 = ISZERO V561
0x5f9: V563 = 0x0
0x5fc: THROWI V562
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, 0x0, 0x0, V78, V535, 0xb1099347, V549, 0x20, V552, V553, V552, 0x0, V535]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, 0x0, 0x0, V78, V535, 0xb1099347, V549]

================================

Block 0x5fd
[0x5fd:0x648]
---
Predecessors: [0x5f3]
Successors: [0x649]
---
0x5fd POP
0x5fe POP
0x5ff POP
0x600 PUSH1 0x40
0x602 MLOAD
0x603 DUP1
0x604 MLOAD
0x605 SWAP1
0x606 PUSH1 0x20
0x608 ADD
0x609 POP
0x60a SWAP3
0x60b POP
0x60c DUP1
0x60d PUSH1 0x1
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 SUB
0x615 AND
0x616 PUSH4 0x4ca50f59
0x61b PUSH1 0x0
0x61d PUSH1 0x40
0x61f MLOAD
0x620 PUSH1 0x20
0x622 ADD
0x623 MSTORE
0x624 PUSH1 0x40
0x626 MLOAD
0x627 DUP2
0x628 PUSH1 0xe0
0x62a PUSH1 0x2
0x62c EXP
0x62d MUL
0x62e DUP2
0x62f MSTORE
0x630 PUSH1 0x4
0x632 ADD
0x633 DUP1
0x634 SWAP1
0x635 POP
0x636 PUSH1 0x20
0x638 PUSH1 0x40
0x63a MLOAD
0x63b DUP1
0x63c DUP4
0x63d SUB
0x63e DUP2
0x63f PUSH1 0x0
0x641 DUP8
0x642 DUP1
0x643 EXTCODESIZE
0x644 ISZERO
0x645 PUSH2 0x0
0x648 JUMPI
---
0x600: V564 = 0x40
0x602: V565 = M[0x40]
0x604: V566 = M[V565]
0x606: V567 = 0x20
0x608: V568 = ADD 0x20 V565
0x60d: V569 = 0x1
0x60f: V570 = 0xa0
0x611: V571 = 0x2
0x613: V572 = EXP 0x2 0xa0
0x614: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x615: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x616: V575 = 0x4ca50f59
0x61b: V576 = 0x0
0x61d: V577 = 0x40
0x61f: V578 = M[0x40]
0x620: V579 = 0x20
0x622: V580 = ADD 0x20 V578
0x623: M[V580] = 0x0
0x624: V581 = 0x40
0x626: V582 = M[0x40]
0x628: V583 = 0xe0
0x62a: V584 = 0x2
0x62c: V585 = EXP 0x2 0xe0
0x62d: V586 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4ca50f59
0x62f: M[V582] = 0x4ca50f5900000000000000000000000000000000000000000000000000000000
0x630: V587 = 0x4
0x632: V588 = ADD 0x4 V582
0x636: V589 = 0x20
0x638: V590 = 0x40
0x63a: V591 = M[0x40]
0x63d: V592 = SUB V588 V591
0x63f: V593 = 0x0
0x643: V594 = EXTCODESIZE V574
0x644: V595 = ISZERO V594
0x645: V596 = 0x0
0x648: THROWI V595
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, 0x0, 0x0, V78, V535, 0xb1099347, V549]
Stack pops: 6
Stack additions: [V566, S4, S3, V574, 0x4ca50f59, V588, 0x20, V591, V592, V591, 0x0, V574]
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, V566, 0x0, V78, V574, 0x4ca50f59, V588, 0x20, V591, V592, V591, 0x0, V574]

================================

Block 0x649
[0x649:0x652]
---
Predecessors: [0x5fd]
Successors: [0x653]
---
0x649 PUSH1 0x32
0x64b GAS
0x64c SUB
0x64d CALL
0x64e ISZERO
0x64f PUSH2 0x0
0x652 JUMPI
---
0x649: V597 = 0x32
0x64b: V598 = GAS
0x64c: V599 = SUB V598 0x32
0x64d: V600 = CALL V599 V574 0x0 V591 V592 V591 0x20
0x64e: V601 = ISZERO V600
0x64f: V602 = 0x0
0x652: THROWI V601
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, V566, 0x0, V78, V574, 0x4ca50f59, V588, 0x20, V591, V592, V591, 0x0, V574]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, V566, 0x0, V78, V574, 0x4ca50f59, V588]

================================

Block 0x653
[0x653:0x65b]
---
Predecessors: [0x649]
Successors: [0x65c]
---
0x653 POP
0x654 POP
0x655 PUSH1 0x40
0x657 MLOAD
0x658 MLOAD
0x659 SWAP3
0x65a POP
0x65b POP
---
0x655: V603 = 0x40
0x657: V604 = M[0x40]
0x658: V605 = M[V604]
---
Entry stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, V566, 0x0, V78, V574, 0x4ca50f59, V588]
Stack pops: 5
Stack additions: [V605, S3]
Exit stack: [V10, 0xcf, V78, V332, V371, V410, V449, V488, V527, V566, V605, V78]

================================

Block 0x65c
[0x65c:0x65c]
---
Predecessors: [0x3da, 0x653, 0xa1f]
Successors: [0x65d]
---
0x65c JUMPDEST
---
0x65c: JUMPDEST 
---
Entry stack: [V10, 0xcf, V78, V332, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcf, V78, V332, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x65d
[0x65d:0x668]
---
Predecessors: [0x65c]
Successors: [0xcf]
---
0x65d JUMPDEST
0x65e POP
0x65f SWAP2
0x660 SWAP4
0x661 SWAP6
0x662 SWAP8
0x663 POP
0x664 SWAP2
0x665 SWAP4
0x666 SWAP6
0x667 SWAP8
0x668 JUMP
---
0x65d: JUMPDEST 
0x668: JUMP 0xcf
---
Entry stack: [V10, 0xcf, V78, V332, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1]
Exit stack: [V10, V332, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x669
[0x669:0x677]
---
Predecessors: [0x126]
Successors: [0x7c]
---
0x669 JUMPDEST
0x66a PUSH1 0x0
0x66c SLOAD
0x66d PUSH1 0x1
0x66f PUSH1 0xa0
0x671 PUSH1 0x2
0x673 EXP
0x674 SUB
0x675 AND
0x676 DUP2
0x677 JUMP
---
0x669: JUMPDEST 
0x66a: V606 = 0x0
0x66c: V607 = S[0x0]
0x66d: V608 = 0x1
0x66f: V609 = 0xa0
0x671: V610 = 0x2
0x673: V611 = EXP 0x2 0xa0
0x674: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x675: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x677: JUMP 0x7c
---
Entry stack: [V10, 0x7c]
Stack pops: 1
Stack additions: [S0, V613]
Exit stack: [V10, 0x7c, V613]

================================

Block 0x678
[0x678:0x68e]
---
Predecessors: [0x14f]
Successors: [0x68f, 0x693]
---
0x678 JUMPDEST
0x679 PUSH1 0x0
0x67b SLOAD
0x67c CALLER
0x67d PUSH1 0x1
0x67f PUSH1 0xa0
0x681 PUSH1 0x2
0x683 EXP
0x684 SUB
0x685 SWAP1
0x686 DUP2
0x687 AND
0x688 SWAP2
0x689 AND
0x68a EQ
0x68b PUSH2 0x693
0x68e JUMPI
---
0x678: JUMPDEST 
0x679: V614 = 0x0
0x67b: V615 = S[0x0]
0x67c: V616 = CALLER
0x67d: V617 = 0x1
0x67f: V618 = 0xa0
0x681: V619 = 0x2
0x683: V620 = EXP 0x2 0xa0
0x684: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x687: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x689: V623 = AND V615 0xffffffffffffffffffffffffffffffffffffffff
0x68a: V624 = EQ V623 V622
0x68b: V625 = 0x693
0x68e: JUMPI 0x693 V624
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x68f
[0x68f:0x692]
---
Predecessors: [0x678]
Successors: []
---
0x68f PUSH2 0x0
0x692 JUMP
---
0x68f: V626 = 0x0
0x692: THROW 
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x693
[0x693:0x6fc]
---
Predecessors: [0x678]
Successors: [0x6fd]
---
0x693 JUMPDEST
0x694 PUSH1 0x0
0x696 DUP1
0x697 SLOAD
0x698 PUSH1 0x40
0x69a MLOAD
0x69b PUSH1 0x1
0x69d PUSH1 0xa0
0x69f PUSH1 0x2
0x6a1 EXP
0x6a2 SUB
0x6a3 DUP1
0x6a4 DUP6
0x6a5 AND
0x6a6 SWAP4
0x6a7 SWAP3
0x6a8 AND
0x6a9 SWAP2
0x6aa PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6cb SWAP2
0x6cc LOG3
0x6cd PUSH1 0x0
0x6cf DUP1
0x6d0 SLOAD
0x6d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e6 NOT
0x6e7 AND
0x6e8 PUSH13 0x1000000000000000000000000
0x6f6 DUP4
0x6f7 DUP2
0x6f8 MUL
0x6f9 DIV
0x6fa OR
0x6fb SWAP1
0x6fc SSTORE
---
0x693: JUMPDEST 
0x694: V627 = 0x0
0x697: V628 = S[0x0]
0x698: V629 = 0x40
0x69a: V630 = M[0x40]
0x69b: V631 = 0x1
0x69d: V632 = 0xa0
0x69f: V633 = 0x2
0x6a1: V634 = EXP 0x2 0xa0
0x6a2: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a5: V636 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V637 = AND V628 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: V638 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6cc: LOG V630 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V637 V636
0x6cd: V639 = 0x0
0x6d0: V640 = S[0x0]
0x6d1: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e6: V642 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6e7: V643 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V640
0x6e8: V644 = 0x1000000000000000000000000
0x6f8: V645 = MUL 0x1000000000000000000000000 V132
0x6f9: V646 = DIV V645 0x1000000000000000000000000
0x6fa: V647 = OR V646 V643
0x6fc: S[0x0] = V647
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5b, V132]

================================

Block 0x6fd
[0x6fd:0x6fd]
---
Predecessors: [0x693]
Successors: [0x6fe]
---
0x6fd JUMPDEST
---
0x6fd: JUMPDEST 
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x6fe
[0x6fe:0x700]
---
Predecessors: [0x6fd]
Successors: [0x5b]
---
0x6fe JUMPDEST
0x6ff POP
0x700 JUMP
---
0x6fe: JUMPDEST 
0x700: JUMP 0x5b
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x701
[0x701:0x70a]
---
Predecessors: []
Successors: [0x70b]
---
0x701 PUSH1 0x60
0x703 PUSH1 0x40
0x705 MSTORE
0x706 CALLVALUE
0x707 PUSH2 0x0
0x70a JUMPI
---
0x701: V648 = 0x60
0x703: V649 = 0x40
0x705: M[0x40] = 0x60
0x706: V650 = CALLVALUE
0x707: V651 = 0x0
0x70a: THROWI V650
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x70b
[0x70b:0x73e]
---
Predecessors: [0x701]
Successors: [0x73f]
---
0x70b PUSH1 0x40
0x70d MLOAD
0x70e PUSH1 0xc0
0x710 DUP1
0x711 PUSH2 0xb50
0x714 DUP4
0x715 CODECOPY
0x716 DUP2
0x717 ADD
0x718 PUSH1 0x40
0x71a SWAP1
0x71b DUP2
0x71c MSTORE
0x71d DUP2
0x71e MLOAD
0x71f PUSH1 0x20
0x721 DUP4
0x722 ADD
0x723 MLOAD
0x724 SWAP2
0x725 DUP4
0x726 ADD
0x727 MLOAD
0x728 PUSH1 0x60
0x72a DUP5
0x72b ADD
0x72c MLOAD
0x72d PUSH1 0x80
0x72f DUP6
0x730 ADD
0x731 MLOAD
0x732 PUSH1 0xa0
0x734 SWAP1
0x735 SWAP6
0x736 ADD
0x737 MLOAD
0x738 SWAP3
0x739 SWAP5
0x73a SWAP2
0x73b SWAP3
0x73c SWAP1
0x73d SWAP2
0x73e SWAP1
---
0x70b: V652 = 0x40
0x70d: V653 = M[0x40]
0x70e: V654 = 0xc0
0x711: V655 = 0xb50
0x715: CODECOPY V653 0xb50 0xc0
0x717: V656 = ADD V653 0xc0
0x718: V657 = 0x40
0x71c: M[0x40] = V656
0x71e: V658 = M[V653]
0x71f: V659 = 0x20
0x722: V660 = ADD V653 0x20
0x723: V661 = M[V660]
0x726: V662 = ADD V653 0x40
0x727: V663 = M[V662]
0x728: V664 = 0x60
0x72b: V665 = ADD V653 0x60
0x72c: V666 = M[V665]
0x72d: V667 = 0x80
0x730: V668 = ADD V653 0x80
0x731: V669 = M[V668]
0x732: V670 = 0xa0
0x736: V671 = ADD V653 0xa0
0x737: V672 = M[V671]
---
Entry stack: []
Stack pops: 0
Stack additions: [V658, V661, V663, V666, V669, V672]
Exit stack: [V658, V661, V663, V666, V669, V672]

================================

Block 0x73f
[0x73f:0x73f]
---
Predecessors: [0x70b]
Successors: [0x740]
---
0x73f JUMPDEST
---
0x73f: JUMPDEST 
---
Entry stack: [V658, V661, V663, V666, V669, V672]
Stack pops: 0
Stack additions: []
Exit stack: [V658, V661, V663, V666, V669, V672]

================================

Block 0x740
[0x740:0x763]
---
Predecessors: [0x73f]
Successors: [0x764]
---
0x740 JUMPDEST
0x741 PUSH1 0x0
0x743 DUP1
0x744 SLOAD
0x745 PUSH1 0x1
0x747 PUSH1 0xa0
0x749 PUSH1 0x2
0x74b EXP
0x74c SUB
0x74d NOT
0x74e AND
0x74f PUSH13 0x1000000000000000000000000
0x75d CALLER
0x75e DUP2
0x75f MUL
0x760 DIV
0x761 OR
0x762 SWAP1
0x763 SSTORE
---
0x740: JUMPDEST 
0x741: V673 = 0x0
0x744: V674 = S[0x0]
0x745: V675 = 0x1
0x747: V676 = 0xa0
0x749: V677 = 0x2
0x74b: V678 = EXP 0x2 0xa0
0x74c: V679 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74d: V680 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x74e: V681 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V674
0x74f: V682 = 0x1000000000000000000000000
0x75d: V683 = CALLER
0x75f: V684 = MUL 0x1000000000000000000000000 V683
0x760: V685 = DIV V684 0x1000000000000000000000000
0x761: V686 = OR V685 V681
0x763: S[0x0] = V686
---
Entry stack: [V658, V661, V663, V666, V669, V672]
Stack pops: 0
Stack additions: []
Exit stack: [V658, V661, V663, V666, V669, V672]

================================

Block 0x764
[0x764:0x826]
---
Predecessors: [0x740]
Successors: [0x827]
---
0x764 JUMPDEST
0x765 PUSH1 0x1
0x767 DUP1
0x768 SLOAD
0x769 PUSH1 0x1
0x76b PUSH1 0xa0
0x76d PUSH1 0x2
0x76f EXP
0x770 SUB
0x771 NOT
0x772 AND
0x773 PUSH13 0x1000000000000000000000000
0x781 DUP9
0x782 DUP2
0x783 MUL
0x784 DIV
0x785 OR
0x786 SWAP1
0x787 SSTORE
0x788 PUSH1 0x2
0x78a DUP6
0x78b SWAP1
0x78c SSTORE
0x78d PUSH1 0x3
0x78f DUP5
0x790 SWAP1
0x791 SSTORE
0x792 PUSH1 0x4
0x794 DUP4
0x795 SWAP1
0x796 SSTORE
0x797 PUSH1 0x5
0x799 DUP1
0x79a SLOAD
0x79b PUSH1 0xff
0x79d NOT
0x79e AND
0x79f PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x7c0 DUP5
0x7c1 DUP2
0x7c2 MUL
0x7c3 DUP2
0x7c4 SWAP1
0x7c5 DIV
0x7c6 SWAP2
0x7c7 SWAP1
0x7c8 SWAP2
0x7c9 OR
0x7ca PUSH2 0xff00
0x7cd NOT
0x7ce AND
0x7cf PUSH2 0x100
0x7d2 DUP5
0x7d3 DUP4
0x7d4 MUL
0x7d5 SWAP3
0x7d6 SWAP1
0x7d7 SWAP3
0x7d8 DIV
0x7d9 DUP3
0x7da MUL
0x7db OR
0x7dc SWAP2
0x7dd DUP3
0x7de SWAP1
0x7df SSTORE
0x7e0 PUSH1 0x40
0x7e2 DUP1
0x7e3 MLOAD
0x7e4 PUSH1 0xff
0x7e6 DUP1
0x7e7 DUP6
0x7e8 AND
0x7e9 ISZERO
0x7ea ISZERO
0x7eb DUP3
0x7ec MSTORE
0x7ed SWAP3
0x7ee SWAP1
0x7ef SWAP4
0x7f0 DIV
0x7f1 SWAP1
0x7f2 SWAP2
0x7f3 AND
0x7f4 ISZERO
0x7f5 ISZERO
0x7f6 PUSH1 0x20
0x7f8 DUP4
0x7f9 ADD
0x7fa MSTORE
0x7fb DUP1
0x7fc MLOAD
0x7fd PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x81e SWAP3
0x81f DUP2
0x820 SWAP1
0x821 SUB
0x822 SWAP1
0x823 SWAP2
0x824 ADD
0x825 SWAP1
0x826 LOG1
---
0x764: JUMPDEST 
0x765: V687 = 0x1
0x768: V688 = S[0x1]
0x769: V689 = 0x1
0x76b: V690 = 0xa0
0x76d: V691 = 0x2
0x76f: V692 = EXP 0x2 0xa0
0x770: V693 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V694 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x772: V695 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V688
0x773: V696 = 0x1000000000000000000000000
0x783: V697 = MUL 0x1000000000000000000000000 V658
0x784: V698 = DIV V697 0x1000000000000000000000000
0x785: V699 = OR V698 V695
0x787: S[0x1] = V699
0x788: V700 = 0x2
0x78c: S[0x2] = V661
0x78d: V701 = 0x3
0x791: S[0x3] = V663
0x792: V702 = 0x4
0x796: S[0x4] = V666
0x797: V703 = 0x5
0x79a: V704 = S[0x5]
0x79b: V705 = 0xff
0x79d: V706 = NOT 0xff
0x79e: V707 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V704
0x79f: V708 = 0x100000000000000000000000000000000000000000000000000000000000000
0x7c2: V709 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V669
0x7c5: V710 = DIV V709 0x100000000000000000000000000000000000000000000000000000000000000
0x7c9: V711 = OR V710 V707
0x7ca: V712 = 0xff00
0x7cd: V713 = NOT 0xff00
0x7ce: V714 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V711
0x7cf: V715 = 0x100
0x7d4: V716 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V672
0x7d8: V717 = DIV V716 0x100000000000000000000000000000000000000000000000000000000000000
0x7da: V718 = MUL 0x100 V717
0x7db: V719 = OR V718 V714
0x7df: S[0x5] = V719
0x7e0: V720 = 0x40
0x7e3: V721 = M[0x40]
0x7e4: V722 = 0xff
0x7e8: V723 = AND V719 0xff
0x7e9: V724 = ISZERO V723
0x7ea: V725 = ISZERO V724
0x7ec: M[V721] = V725
0x7f0: V726 = DIV V719 0x100
0x7f3: V727 = AND 0xff V726
0x7f4: V728 = ISZERO V727
0x7f5: V729 = ISZERO V728
0x7f6: V730 = 0x20
0x7f9: V731 = ADD V721 0x20
0x7fa: M[V731] = V729
0x7fc: V732 = M[0x40]
0x7fd: V733 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x821: V734 = SUB V721 V732
0x824: V735 = ADD 0x40 V734
0x826: LOG V732 V735 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: [V658, V661, V663, V666, V669, V672]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V658, V661, V663, V666, V669, V672]

================================

Block 0x827
[0x827:0x82d]
---
Predecessors: [0x764]
Successors: [0x82e]
---
0x827 JUMPDEST
0x828 POP
0x829 POP
0x82a POP
0x82b POP
0x82c POP
0x82d POP
---
0x827: JUMPDEST 
---
Entry stack: [V658, V661, V663, V666, V669, V672]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x82e
[0x82e:0x846]
---
Predecessors: [0x827]
Successors: [0x847]
---
0x82e JUMPDEST
0x82f PUSH2 0xa15
0x832 DUP1
0x833 PUSH2 0x13b
0x836 PUSH1 0x0
0x838 CODECOPY
0x839 PUSH1 0x0
0x83b RETURN
0x83c PUSH1 0x60
0x83e PUSH1 0x40
0x840 MSTORE
0x841 CALLDATASIZE
0x842 ISZERO
0x843 PUSH2 0xb9
0x846 JUMPI
---
0x82e: JUMPDEST 
0x82f: V736 = 0xa15
0x833: V737 = 0x13b
0x836: V738 = 0x0
0x838: CODECOPY 0x0 0x13b 0xa15
0x839: V739 = 0x0
0x83b: RETURN 0x0 0xa15
0x83c: V740 = 0x60
0x83e: V741 = 0x40
0x840: M[0x40] = 0x60
0x841: V742 = CALLDATASIZE
0x842: V743 = ISZERO V742
0x843: V744 = 0xb9
0x846: THROWI V743
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x847
[0x847:0x85a]
---
Predecessors: [0x82e]
Successors: [0x85b]
---
0x847 PUSH1 0xe0
0x849 PUSH1 0x2
0x84b EXP
0x84c PUSH1 0x0
0x84e CALLDATALOAD
0x84f DIV
0x850 PUSH4 0x2170ebf7
0x855 DUP2
0x856 EQ
0x857 PUSH2 0xca
0x85a JUMPI
---
0x847: V745 = 0xe0
0x849: V746 = 0x2
0x84b: V747 = EXP 0x2 0xe0
0x84c: V748 = 0x0
0x84e: V749 = CALLDATALOAD 0x0
0x84f: V750 = DIV V749 0x100000000000000000000000000000000000000000000000000000000
0x850: V751 = 0x2170ebf7
0x856: V752 = EQ V750 0x2170ebf7
0x857: V753 = 0xca
0x85a: THROWI V752
---
Entry stack: []
Stack pops: 0
Stack additions: [V750]
Exit stack: [V750]

================================

Block 0x85b
[0x85b:0x865]
---
Predecessors: [0x847]
Successors: [0x866]
---
0x85b DUP1
0x85c PUSH4 0x38d52e0f
0x861 EQ
0x862 PUSH2 0xee
0x865 JUMPI
---
0x85c: V754 = 0x38d52e0f
0x861: V755 = EQ 0x38d52e0f V750
0x862: V756 = 0xee
0x865: THROWI V755
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x866
[0x866:0x870]
---
Predecessors: [0x85b]
Successors: [0x871]
---
0x866 DUP1
0x867 PUSH4 0x4b750334
0x86c EQ
0x86d PUSH2 0x117
0x870 JUMPI
---
0x867: V757 = 0x4b750334
0x86c: V758 = EQ 0x4b750334 V750
0x86d: V759 = 0x117
0x870: THROWI V758
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x871
[0x871:0x87b]
---
Predecessors: [0x866]
Successors: [0x87c]
---
0x871 DUP1
0x872 PUSH4 0x4ca50f59
0x877 EQ
0x878 PUSH2 0x136
0x87b JUMPI
---
0x872: V760 = 0x4ca50f59
0x877: V761 = EQ 0x4ca50f59 V750
0x878: V762 = 0x136
0x87b: THROWI V761
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x87c
[0x87c:0x886]
---
Predecessors: [0x871]
Successors: [0x887]
---
0x87c DUP1
0x87d PUSH4 0x8620410b
0x882 EQ
0x883 PUSH2 0x157
0x886 JUMPI
---
0x87d: V763 = 0x8620410b
0x882: V764 = EQ 0x8620410b V750
0x883: V765 = 0x157
0x886: THROWI V764
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x887
[0x887:0x891]
---
Predecessors: [0x87c]
Successors: [0x176, 0x892]
---
0x887 DUP1
0x888 PUSH4 0x8da5cb5b
0x88d EQ
0x88e PUSH2 0x176
0x891 JUMPI
---
0x888: V766 = 0x8da5cb5b
0x88d: V767 = EQ 0x8da5cb5b V750
0x88e: V768 = 0x176
0x891: JUMPI 0x176 V767
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x892
[0x892:0x89c]
---
Predecessors: [0x887]
Successors: [0x89d]
---
0x892 DUP1
0x893 PUSH4 0x919f8cfc
0x898 EQ
0x899 PUSH2 0x19f
0x89c JUMPI
---
0x893: V769 = 0x919f8cfc
0x898: V770 = EQ 0x919f8cfc V750
0x899: V771 = 0x19f
0x89c: THROWI V770
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x89d
[0x89d:0x8a7]
---
Predecessors: [0x892]
Successors: [0x8a8]
---
0x89d DUP1
0x89e PUSH4 0x976a8435
0x8a3 EQ
0x8a4 PUSH2 0x1a9
0x8a7 JUMPI
---
0x89e: V772 = 0x976a8435
0x8a3: V773 = EQ 0x976a8435 V750
0x8a4: V774 = 0x1a9
0x8a7: THROWI V773
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8a8
[0x8a8:0x8b2]
---
Predecessors: [0x89d]
Successors: [0x8b3]
---
0x8a8 DUP1
0x8a9 PUSH4 0xa7abc124
0x8ae EQ
0x8af PUSH2 0x1c8
0x8b2 JUMPI
---
0x8a9: V775 = 0xa7abc124
0x8ae: V776 = EQ 0xa7abc124 V750
0x8af: V777 = 0x1c8
0x8b2: THROWI V776
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8b3
[0x8b3:0x8bd]
---
Predecessors: [0x8a8]
Successors: [0x8be]
---
0x8b3 DUP1
0x8b4 PUSH4 0xb1099347
0x8b9 EQ
0x8ba PUSH2 0x1dd
0x8bd JUMPI
---
0x8b4: V778 = 0xb1099347
0x8b9: V779 = EQ 0xb1099347 V750
0x8ba: V780 = 0x1dd
0x8bd: THROWI V779
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8be
[0x8be:0x8c8]
---
Predecessors: [0x8b3]
Successors: [0x8c9]
---
0x8be DUP1
0x8bf PUSH4 0xc34764cf
0x8c4 EQ
0x8c5 PUSH2 0x1fe
0x8c8 JUMPI
---
0x8bf: V781 = 0xc34764cf
0x8c4: V782 = EQ 0xc34764cf V750
0x8c5: V783 = 0x1fe
0x8c8: THROWI V782
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8c9
[0x8c9:0x8d3]
---
Predecessors: [0x8be]
Successors: [0x8d4]
---
0x8c9 DUP1
0x8ca PUSH4 0xc60ccb0e
0x8cf EQ
0x8d0 PUSH2 0x225
0x8d3 JUMPI
---
0x8ca: V784 = 0xc60ccb0e
0x8cf: V785 = EQ 0xc60ccb0e V750
0x8d0: V786 = 0x225
0x8d3: THROWI V785
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8d4
[0x8d4:0x8de]
---
Predecessors: [0x8c9]
Successors: [0x8df]
---
0x8d4 DUP1
0x8d5 PUSH4 0xcd53a3b7
0x8da EQ
0x8db PUSH2 0x22f
0x8de JUMPI
---
0x8d5: V787 = 0xcd53a3b7
0x8da: V788 = EQ 0xcd53a3b7 V750
0x8db: V789 = 0x22f
0x8de: THROWI V788
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8df
[0x8df:0x8e9]
---
Predecessors: [0x8d4]
Successors: [0x8ea]
---
0x8df DUP1
0x8e0 PUSH4 0xeff883bd
0x8e5 EQ
0x8e6 PUSH2 0x253
0x8e9 JUMPI
---
0x8e0: V790 = 0xeff883bd
0x8e5: V791 = EQ 0xeff883bd V750
0x8e6: V792 = 0x253
0x8e9: THROWI V791
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8ea
[0x8ea:0x8f4]
---
Predecessors: [0x8df]
Successors: [0x8f5]
---
0x8ea DUP1
0x8eb PUSH4 0xf2fde38b
0x8f0 EQ
0x8f1 PUSH2 0x265
0x8f4 JUMPI
---
0x8eb: V793 = 0xf2fde38b
0x8f0: V794 = EQ 0xf2fde38b V750
0x8f1: V795 = 0x265
0x8f4: THROWI V794
---
Entry stack: [V750]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V750]

================================

Block 0x8f5
[0x8f5:0x8f8]
---
Predecessors: [0x8ea]
Successors: [0x8f9]
---
0x8f5 JUMPDEST
0x8f6 PUSH2 0xc8
---
0x8f5: JUMPDEST 
0x8f6: V796 = 0xc8
---
Entry stack: [V750]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V750, 0xc8]

================================

Block 0x8f9
[0x8f9:0x901]
---
Predecessors: [0x8f5]
Successors: [0x902]
---
0x8f9 JUMPDEST
0x8fa PUSH2 0xc5
0x8fd PUSH2 0x277
0x900 JUMP
0x901 JUMPDEST
---
0x8f9: JUMPDEST 
0x8fa: V797 = 0xc5
0x8fd: V798 = 0x277
0x900: THROW 
0x901: JUMPDEST 
---
Entry stack: [V750, 0xc8]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: []

================================

Block 0x902
[0x902:0x90b]
---
Predecessors: [0x8f9]
Successors: [0x90c]
---
0x902 JUMPDEST
0x903 JUMP
0x904 JUMPDEST
0x905 STOP
0x906 JUMPDEST
0x907 CALLVALUE
0x908 PUSH2 0x0
0x90b JUMPI
---
0x902: JUMPDEST 
0x903: JUMP S0
0x904: JUMPDEST 
0x905: STOP 
0x906: JUMPDEST 
0x907: V799 = CALLVALUE
0x908: V800 = 0x0
0x90b: THROWI V799
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x90c
[0x90c:0x92f]
---
Predecessors: [0x902]
Successors: [0x930]
---
0x90c PUSH2 0xda
0x90f PUSH1 0x4
0x911 CALLDATALOAD
0x912 PUSH2 0x4a5
0x915 JUMP
0x916 JUMPDEST
0x917 PUSH1 0x40
0x919 DUP1
0x91a MLOAD
0x91b SWAP2
0x91c ISZERO
0x91d ISZERO
0x91e DUP3
0x91f MSTORE
0x920 MLOAD
0x921 SWAP1
0x922 DUP2
0x923 SWAP1
0x924 SUB
0x925 PUSH1 0x20
0x927 ADD
0x928 SWAP1
0x929 RETURN
0x92a JUMPDEST
0x92b CALLVALUE
0x92c PUSH2 0x0
0x92f JUMPI
---
0x90c: V801 = 0xda
0x90f: V802 = 0x4
0x911: V803 = CALLDATALOAD 0x4
0x912: V804 = 0x4a5
0x915: THROW 
0x916: JUMPDEST 
0x917: V805 = 0x40
0x91a: V806 = M[0x40]
0x91c: V807 = ISZERO S0
0x91d: V808 = ISZERO V807
0x91f: M[V806] = V808
0x920: V809 = M[0x40]
0x924: V810 = SUB V806 V809
0x925: V811 = 0x20
0x927: V812 = ADD 0x20 V810
0x929: RETURN V809 V812
0x92a: JUMPDEST 
0x92b: V813 = CALLVALUE
0x92c: V814 = 0x0
0x92f: THROWI V813
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V803]
Exit stack: []

================================

Block 0x930
[0x930:0x958]
---
Predecessors: [0x90c]
Successors: [0x959]
---
0x930 PUSH2 0xfb
0x933 PUSH2 0x537
0x936 JUMP
0x937 JUMPDEST
0x938 PUSH1 0x40
0x93a DUP1
0x93b MLOAD
0x93c PUSH1 0x1
0x93e PUSH1 0xa0
0x940 PUSH1 0x2
0x942 EXP
0x943 SUB
0x944 SWAP1
0x945 SWAP3
0x946 AND
0x947 DUP3
0x948 MSTORE
0x949 MLOAD
0x94a SWAP1
0x94b DUP2
0x94c SWAP1
0x94d SUB
0x94e PUSH1 0x20
0x950 ADD
0x951 SWAP1
0x952 RETURN
0x953 JUMPDEST
0x954 CALLVALUE
0x955 PUSH2 0x0
0x958 JUMPI
---
0x930: V815 = 0xfb
0x933: V816 = 0x537
0x936: THROW 
0x937: JUMPDEST 
0x938: V817 = 0x40
0x93b: V818 = M[0x40]
0x93c: V819 = 0x1
0x93e: V820 = 0xa0
0x940: V821 = 0x2
0x942: V822 = EXP 0x2 0xa0
0x943: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0x946: V824 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x948: M[V818] = V824
0x949: V825 = M[0x40]
0x94d: V826 = SUB V818 V825
0x94e: V827 = 0x20
0x950: V828 = ADD 0x20 V826
0x952: RETURN V825 V828
0x953: JUMPDEST 
0x954: V829 = CALLVALUE
0x955: V830 = 0x0
0x958: THROWI V829
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfb]
Exit stack: []

================================

Block 0x959
[0x959:0x977]
---
Predecessors: [0x930]
Successors: [0x978]
---
0x959 PUSH2 0x124
0x95c PUSH2 0x546
0x95f JUMP
0x960 JUMPDEST
0x961 PUSH1 0x40
0x963 DUP1
0x964 MLOAD
0x965 SWAP2
0x966 DUP3
0x967 MSTORE
0x968 MLOAD
0x969 SWAP1
0x96a DUP2
0x96b SWAP1
0x96c SUB
0x96d PUSH1 0x20
0x96f ADD
0x970 SWAP1
0x971 RETURN
0x972 JUMPDEST
0x973 CALLVALUE
0x974 PUSH2 0x0
0x977 JUMPI
---
0x959: V831 = 0x124
0x95c: V832 = 0x546
0x95f: THROW 
0x960: JUMPDEST 
0x961: V833 = 0x40
0x964: V834 = M[0x40]
0x967: M[V834] = S0
0x968: V835 = M[0x40]
0x96c: V836 = SUB V834 V835
0x96d: V837 = 0x20
0x96f: V838 = ADD 0x20 V836
0x971: RETURN V835 V838
0x972: JUMPDEST 
0x973: V839 = CALLVALUE
0x974: V840 = 0x0
0x977: THROWI V839
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0x978
[0x978:0x998]
---
Predecessors: [0x959]
Successors: [0x999]
---
0x978 PUSH2 0xda
0x97b PUSH2 0x54c
0x97e JUMP
0x97f JUMPDEST
0x980 PUSH1 0x40
0x982 DUP1
0x983 MLOAD
0x984 SWAP2
0x985 ISZERO
0x986 ISZERO
0x987 DUP3
0x988 MSTORE
0x989 MLOAD
0x98a SWAP1
0x98b DUP2
0x98c SWAP1
0x98d SUB
0x98e PUSH1 0x20
0x990 ADD
0x991 SWAP1
0x992 RETURN
0x993 JUMPDEST
0x994 CALLVALUE
0x995 PUSH2 0x0
0x998 JUMPI
---
0x978: V841 = 0xda
0x97b: V842 = 0x54c
0x97e: THROW 
0x97f: JUMPDEST 
0x980: V843 = 0x40
0x983: V844 = M[0x40]
0x985: V845 = ISZERO S0
0x986: V846 = ISZERO V845
0x988: M[V844] = V846
0x989: V847 = M[0x40]
0x98d: V848 = SUB V844 V847
0x98e: V849 = 0x20
0x990: V850 = ADD 0x20 V848
0x992: RETURN V847 V850
0x993: JUMPDEST 
0x994: V851 = CALLVALUE
0x995: V852 = 0x0
0x998: THROWI V851
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda]
Exit stack: []

================================

Block 0x999
[0x999:0x9b7]
---
Predecessors: [0x978]
Successors: [0x9b8]
---
0x999 PUSH2 0x124
0x99c PUSH2 0x55a
0x99f JUMP
0x9a0 JUMPDEST
0x9a1 PUSH1 0x40
0x9a3 DUP1
0x9a4 MLOAD
0x9a5 SWAP2
0x9a6 DUP3
0x9a7 MSTORE
0x9a8 MLOAD
0x9a9 SWAP1
0x9aa DUP2
0x9ab SWAP1
0x9ac SUB
0x9ad PUSH1 0x20
0x9af ADD
0x9b0 SWAP1
0x9b1 RETURN
0x9b2 JUMPDEST
0x9b3 CALLVALUE
0x9b4 PUSH2 0x0
0x9b7 JUMPI
---
0x999: V853 = 0x124
0x99c: V854 = 0x55a
0x99f: THROW 
0x9a0: JUMPDEST 
0x9a1: V855 = 0x40
0x9a4: V856 = M[0x40]
0x9a7: M[V856] = S0
0x9a8: V857 = M[0x40]
0x9ac: V858 = SUB V856 V857
0x9ad: V859 = 0x20
0x9af: V860 = ADD 0x20 V858
0x9b1: RETURN V857 V860
0x9b2: JUMPDEST 
0x9b3: V861 = CALLVALUE
0x9b4: V862 = 0x0
0x9b7: THROWI V861
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0x9b8
[0x9b8:0x9ea]
---
Predecessors: [0x999]
Successors: [0x9eb]
---
0x9b8 PUSH2 0xfb
0x9bb PUSH2 0x560
0x9be JUMP
0x9bf JUMPDEST
0x9c0 PUSH1 0x40
0x9c2 DUP1
0x9c3 MLOAD
0x9c4 PUSH1 0x1
0x9c6 PUSH1 0xa0
0x9c8 PUSH1 0x2
0x9ca EXP
0x9cb SUB
0x9cc SWAP1
0x9cd SWAP3
0x9ce AND
0x9cf DUP3
0x9d0 MSTORE
0x9d1 MLOAD
0x9d2 SWAP1
0x9d3 DUP2
0x9d4 SWAP1
0x9d5 SUB
0x9d6 PUSH1 0x20
0x9d8 ADD
0x9d9 SWAP1
0x9da RETURN
0x9db JUMPDEST
0x9dc PUSH2 0xc8
0x9df PUSH2 0x56f
0x9e2 JUMP
0x9e3 JUMPDEST
0x9e4 STOP
0x9e5 JUMPDEST
0x9e6 CALLVALUE
0x9e7 PUSH2 0x0
0x9ea JUMPI
---
0x9b8: V863 = 0xfb
0x9bb: V864 = 0x560
0x9be: THROW 
0x9bf: JUMPDEST 
0x9c0: V865 = 0x40
0x9c3: V866 = M[0x40]
0x9c4: V867 = 0x1
0x9c6: V868 = 0xa0
0x9c8: V869 = 0x2
0x9ca: V870 = EXP 0x2 0xa0
0x9cb: V871 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ce: V872 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9d0: M[V866] = V872
0x9d1: V873 = M[0x40]
0x9d5: V874 = SUB V866 V873
0x9d6: V875 = 0x20
0x9d8: V876 = ADD 0x20 V874
0x9da: RETURN V873 V876
0x9db: JUMPDEST 
0x9dc: V877 = 0xc8
0x9df: V878 = 0x56f
0x9e2: THROW 
0x9e3: JUMPDEST 
0x9e4: STOP 
0x9e5: JUMPDEST 
0x9e6: V879 = CALLVALUE
0x9e7: V880 = 0x0
0x9ea: THROWI V879
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfb, 0xc8]
Exit stack: []

================================

Block 0x9eb
[0x9eb:0xa09]
---
Predecessors: [0x9b8]
Successors: [0xa0a]
---
0x9eb PUSH2 0x124
0x9ee PUSH2 0x5c1
0x9f1 JUMP
0x9f2 JUMPDEST
0x9f3 PUSH1 0x40
0x9f5 DUP1
0x9f6 MLOAD
0x9f7 SWAP2
0x9f8 DUP3
0x9f9 MSTORE
0x9fa MLOAD
0x9fb SWAP1
0x9fc DUP2
0x9fd SWAP1
0x9fe SUB
0x9ff PUSH1 0x20
0xa01 ADD
0xa02 SWAP1
0xa03 RETURN
0xa04 JUMPDEST
0xa05 CALLVALUE
0xa06 PUSH2 0x0
0xa09 JUMPI
---
0x9eb: V881 = 0x124
0x9ee: V882 = 0x5c1
0x9f1: THROW 
0x9f2: JUMPDEST 
0x9f3: V883 = 0x40
0x9f6: V884 = M[0x40]
0x9f9: M[V884] = S0
0x9fa: V885 = M[0x40]
0x9fe: V886 = SUB V884 V885
0x9ff: V887 = 0x20
0xa01: V888 = ADD 0x20 V886
0xa03: RETURN V885 V888
0xa04: JUMPDEST 
0xa05: V889 = CALLVALUE
0xa06: V890 = 0x0
0xa09: THROWI V889
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0xa0a
[0xa0a:0xa1e]
---
Predecessors: [0x9eb]
Successors: [0xa1f]
---
0xa0a PUSH2 0xc8
0xa0d PUSH1 0x4
0xa0f CALLDATALOAD
0xa10 PUSH1 0x24
0xa12 CALLDATALOAD
0xa13 PUSH2 0x5c7
0xa16 JUMP
0xa17 JUMPDEST
0xa18 STOP
0xa19 JUMPDEST
0xa1a CALLVALUE
0xa1b PUSH2 0x0
0xa1e JUMPI
---
0xa0a: V891 = 0xc8
0xa0d: V892 = 0x4
0xa0f: V893 = CALLDATALOAD 0x4
0xa10: V894 = 0x24
0xa12: V895 = CALLDATALOAD 0x24
0xa13: V896 = 0x5c7
0xa16: THROW 
0xa17: JUMPDEST 
0xa18: STOP 
0xa19: JUMPDEST 
0xa1a: V897 = CALLVALUE
0xa1b: V898 = 0x0
0xa1e: THROWI V897
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V893, V895]
Exit stack: []

================================

Block 0xa1f
[0xa1f:0xa25]
---
Predecessors: [0xa0a]
Successors: [0x65c]
---
0xa1f PUSH2 0xda
0xa22 PUSH2 0x65c
0xa25 JUMP
---
0xa1f: V899 = 0xda
0xa22: V900 = 0x65c
0xa25: JUMP 0x65c
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda]
Exit stack: [0xda]

================================

Block 0xa26
[0xa26:0xa3f]
---
Predecessors: []
Successors: [0xa40]
---
0xa26 JUMPDEST
0xa27 PUSH1 0x40
0xa29 DUP1
0xa2a MLOAD
0xa2b SWAP2
0xa2c ISZERO
0xa2d ISZERO
0xa2e DUP3
0xa2f MSTORE
0xa30 MLOAD
0xa31 SWAP1
0xa32 DUP2
0xa33 SWAP1
0xa34 SUB
0xa35 PUSH1 0x20
0xa37 ADD
0xa38 SWAP1
0xa39 RETURN
0xa3a JUMPDEST
0xa3b CALLVALUE
0xa3c PUSH2 0x0
0xa3f JUMPI
---
0xa26: JUMPDEST 
0xa27: V901 = 0x40
0xa2a: V902 = M[0x40]
0xa2c: V903 = ISZERO S0
0xa2d: V904 = ISZERO V903
0xa2f: M[V902] = V904
0xa30: V905 = M[0x40]
0xa34: V906 = SUB V902 V905
0xa35: V907 = 0x20
0xa37: V908 = ADD 0x20 V906
0xa39: RETURN V905 V908
0xa3a: JUMPDEST 
0xa3b: V909 = CALLVALUE
0xa3c: V910 = 0x0
0xa3f: THROWI V909
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xa40
[0xa40:0xa70]
---
Predecessors: [0xa26]
Successors: [0xa71]
---
0xa40 PUSH2 0xda
0xa43 PUSH1 0x4
0xa45 CALLDATALOAD
0xa46 PUSH1 0x24
0xa48 CALLDATALOAD
0xa49 PUSH2 0x665
0xa4c JUMP
0xa4d JUMPDEST
0xa4e PUSH1 0x40
0xa50 DUP1
0xa51 MLOAD
0xa52 SWAP2
0xa53 ISZERO
0xa54 ISZERO
0xa55 DUP3
0xa56 MSTORE
0xa57 MLOAD
0xa58 SWAP1
0xa59 DUP2
0xa5a SWAP1
0xa5b SUB
0xa5c PUSH1 0x20
0xa5e ADD
0xa5f SWAP1
0xa60 RETURN
0xa61 JUMPDEST
0xa62 PUSH2 0xc8
0xa65 PUSH2 0x277
0xa68 JUMP
0xa69 JUMPDEST
0xa6a STOP
0xa6b JUMPDEST
0xa6c CALLVALUE
0xa6d PUSH2 0x0
0xa70 JUMPI
---
0xa40: V911 = 0xda
0xa43: V912 = 0x4
0xa45: V913 = CALLDATALOAD 0x4
0xa46: V914 = 0x24
0xa48: V915 = CALLDATALOAD 0x24
0xa49: V916 = 0x665
0xa4c: THROW 
0xa4d: JUMPDEST 
0xa4e: V917 = 0x40
0xa51: V918 = M[0x40]
0xa53: V919 = ISZERO S0
0xa54: V920 = ISZERO V919
0xa56: M[V918] = V920
0xa57: V921 = M[0x40]
0xa5b: V922 = SUB V918 V921
0xa5c: V923 = 0x20
0xa5e: V924 = ADD 0x20 V922
0xa60: RETURN V921 V924
0xa61: JUMPDEST 
0xa62: V925 = 0xc8
0xa65: V926 = 0x277
0xa68: THROW 
0xa69: JUMPDEST 
0xa6a: STOP 
0xa6b: JUMPDEST 
0xa6c: V927 = CALLVALUE
0xa6d: V928 = 0x0
0xa70: THROWI V927
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V913, V915, 0xc8]
Exit stack: []

================================

Block 0xa71
[0xa71:0xa94]
---
Predecessors: [0xa40]
Successors: [0xa95]
---
0xa71 PUSH2 0xda
0xa74 PUSH1 0x4
0xa76 CALLDATALOAD
0xa77 PUSH2 0x73a
0xa7a JUMP
0xa7b JUMPDEST
0xa7c PUSH1 0x40
0xa7e DUP1
0xa7f MLOAD
0xa80 SWAP2
0xa81 ISZERO
0xa82 ISZERO
0xa83 DUP3
0xa84 MSTORE
0xa85 MLOAD
0xa86 SWAP1
0xa87 DUP2
0xa88 SWAP1
0xa89 SUB
0xa8a PUSH1 0x20
0xa8c ADD
0xa8d SWAP1
0xa8e RETURN
0xa8f JUMPDEST
0xa90 CALLVALUE
0xa91 PUSH2 0x0
0xa94 JUMPI
---
0xa71: V929 = 0xda
0xa74: V930 = 0x4
0xa76: V931 = CALLDATALOAD 0x4
0xa77: V932 = 0x73a
0xa7a: THROW 
0xa7b: JUMPDEST 
0xa7c: V933 = 0x40
0xa7f: V934 = M[0x40]
0xa81: V935 = ISZERO S0
0xa82: V936 = ISZERO V935
0xa84: M[V934] = V936
0xa85: V937 = M[0x40]
0xa89: V938 = SUB V934 V937
0xa8a: V939 = 0x20
0xa8c: V940 = ADD 0x20 V938
0xa8e: RETURN V937 V940
0xa8f: JUMPDEST 
0xa90: V941 = CALLVALUE
0xa91: V942 = 0x0
0xa94: THROWI V941
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V931]
Exit stack: []

================================

Block 0xa95
[0xa95:0xaa6]
---
Predecessors: [0xa71]
Successors: [0xaa7]
---
0xa95 PUSH2 0xc8
0xa98 PUSH1 0x4
0xa9a CALLDATALOAD
0xa9b PUSH2 0x800
0xa9e JUMP
0xa9f JUMPDEST
0xaa0 STOP
0xaa1 JUMPDEST
0xaa2 CALLVALUE
0xaa3 PUSH2 0x0
0xaa6 JUMPI
---
0xa95: V943 = 0xc8
0xa98: V944 = 0x4
0xa9a: V945 = CALLDATALOAD 0x4
0xa9b: V946 = 0x800
0xa9e: THROW 
0xa9f: JUMPDEST 
0xaa0: STOP 
0xaa1: JUMPDEST 
0xaa2: V947 = CALLVALUE
0xaa3: V948 = 0x0
0xaa6: THROWI V947
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V945]
Exit stack: []

================================

Block 0xaa7
[0xaa7:0xace]
---
Predecessors: [0xa95]
Successors: [0xacf]
---
0xaa7 PUSH2 0xc8
0xaaa PUSH1 0x4
0xaac CALLDATALOAD
0xaad PUSH2 0x98c
0xab0 JUMP
0xab1 JUMPDEST
0xab2 STOP
0xab3 JUMPDEST
0xab4 PUSH1 0x0
0xab6 PUSH1 0x0
0xab8 PUSH1 0x0
0xaba PUSH1 0x5
0xabc PUSH1 0x1
0xabe SWAP1
0xabf SLOAD
0xac0 SWAP1
0xac1 PUSH2 0x100
0xac4 EXP
0xac5 SWAP1
0xac6 DIV
0xac7 PUSH1 0xff
0xac9 AND
0xaca DUP1
0xacb PUSH2 0x2a6
0xace JUMPI
---
0xaa7: V949 = 0xc8
0xaaa: V950 = 0x4
0xaac: V951 = CALLDATALOAD 0x4
0xaad: V952 = 0x98c
0xab0: THROW 
0xab1: JUMPDEST 
0xab2: STOP 
0xab3: JUMPDEST 
0xab4: V953 = 0x0
0xab6: V954 = 0x0
0xab8: V955 = 0x0
0xaba: V956 = 0x5
0xabc: V957 = 0x1
0xabf: V958 = S[0x5]
0xac1: V959 = 0x100
0xac4: V960 = EXP 0x100 0x1
0xac6: V961 = DIV V958 0x100
0xac7: V962 = 0xff
0xac9: V963 = AND 0xff V961
0xacb: V964 = 0x2a6
0xace: THROWI V963
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V951, V963, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xacf
[0xacf:0xae1]
---
Predecessors: [0xaa7]
Successors: [0xae2]
---
0xacf POP
0xad0 PUSH1 0x0
0xad2 SLOAD
0xad3 CALLER
0xad4 PUSH1 0x1
0xad6 PUSH1 0xa0
0xad8 PUSH1 0x2
0xada EXP
0xadb SUB
0xadc SWAP1
0xadd DUP2
0xade AND
0xadf SWAP2
0xae0 AND
0xae1 EQ
---
0xad0: V965 = 0x0
0xad2: V966 = S[0x0]
0xad3: V967 = CALLER
0xad4: V968 = 0x1
0xad6: V969 = 0xa0
0xad8: V970 = 0x2
0xada: V971 = EXP 0x2 0xa0
0xadb: V972 = SUB 0x10000000000000000000000000000000000000000 0x1
0xade: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff V967
0xae0: V974 = AND V966 0xffffffffffffffffffffffffffffffffffffffff
0xae1: V975 = EQ V974 V973
---
Entry stack: [0x0, 0x0, 0x0, V963]
Stack pops: 1
Stack additions: [V975]
Exit stack: [0x0, 0x0, 0x0, V975]

================================

Block 0xae2
[0xae2:0xae7]
---
Predecessors: [0xacf]
Successors: [0xae8]
---
0xae2 JUMPDEST
0xae3 ISZERO
0xae4 PUSH2 0x46f
0xae7 JUMPI
---
0xae2: JUMPDEST 
0xae3: V976 = ISZERO V975
0xae4: V977 = 0x46f
0xae7: THROWI V976
---
Entry stack: [0x0, 0x0, 0x0, V975]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0, 0x0]

================================

Block 0xae8
[0xae8:0xaf1]
---
Predecessors: [0xae2]
Successors: [0xaf2]
---
0xae8 PUSH1 0x3
0xaea SLOAD
0xaeb CALLVALUE
0xaec DUP2
0xaed ISZERO
0xaee PUSH2 0x0
0xaf1 JUMPI
---
0xae8: V978 = 0x3
0xaea: V979 = S[0x3]
0xaeb: V980 = CALLVALUE
0xaed: V981 = ISZERO V979
0xaee: V982 = 0x0
0xaf1: THROWI V981
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V979, V980]
Exit stack: [0x0, 0x0, 0x0, V979, V980]

================================

Block 0xaf2
[0xaf2:0xb5a]
---
Predecessors: [0xae8]
Successors: [0xb5b]
---
0xaf2 DIV
0xaf3 SWAP3
0xaf4 POP
0xaf5 PUSH1 0x4
0xaf7 SLOAD
0xaf8 PUSH1 0x1
0xafa PUSH1 0x0
0xafc SWAP1
0xafd SLOAD
0xafe SWAP1
0xaff PUSH2 0x100
0xb02 EXP
0xb03 SWAP1
0xb04 DIV
0xb05 PUSH1 0x1
0xb07 PUSH1 0xa0
0xb09 PUSH1 0x2
0xb0b EXP
0xb0c SUB
0xb0d AND
0xb0e PUSH1 0x1
0xb10 PUSH1 0xa0
0xb12 PUSH1 0x2
0xb14 EXP
0xb15 SUB
0xb16 AND
0xb17 PUSH4 0x70a08231
0xb1c ADDRESS
0xb1d PUSH1 0x0
0xb1f PUSH1 0x40
0xb21 MLOAD
0xb22 PUSH1 0x20
0xb24 ADD
0xb25 MSTORE
0xb26 PUSH1 0x40
0xb28 MLOAD
0xb29 DUP3
0xb2a PUSH1 0xe0
0xb2c PUSH1 0x2
0xb2e EXP
0xb2f MUL
0xb30 DUP2
0xb31 MSTORE
0xb32 PUSH1 0x4
0xb34 ADD
0xb35 DUP1
0xb36 DUP3
0xb37 PUSH1 0x1
0xb39 PUSH1 0xa0
0xb3b PUSH1 0x2
0xb3d EXP
0xb3e SUB
0xb3f AND
0xb40 DUP2
0xb41 MSTORE
0xb42 PUSH1 0x20
0xb44 ADD
0xb45 SWAP2
0xb46 POP
0xb47 POP
0xb48 PUSH1 0x20
0xb4a PUSH1 0x40
0xb4c MLOAD
0xb4d DUP1
0xb4e DUP4
0xb4f SUB
0xb50 DUP2
0xb51 PUSH1 0x0
0xb53 DUP8
0xb54 DUP1
0xb55 EXTCODESIZE
0xb56 ISZERO
0xb57 PUSH2 0x0
0xb5a JUMPI
---
0xaf2: V983 = DIV V980 V979
0xaf5: V984 = 0x4
0xaf7: V985 = S[0x4]
0xaf8: V986 = 0x1
0xafa: V987 = 0x0
0xafd: V988 = S[0x1]
0xaff: V989 = 0x100
0xb02: V990 = EXP 0x100 0x0
0xb04: V991 = DIV V988 0x1
0xb05: V992 = 0x1
0xb07: V993 = 0xa0
0xb09: V994 = 0x2
0xb0b: V995 = EXP 0x2 0xa0
0xb0c: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0d: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0xb0e: V998 = 0x1
0xb10: V999 = 0xa0
0xb12: V1000 = 0x2
0xb14: V1001 = EXP 0x2 0xa0
0xb15: V1002 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb16: V1003 = AND 0xffffffffffffffffffffffffffffffffffffffff V997
0xb17: V1004 = 0x70a08231
0xb1c: V1005 = ADDRESS
0xb1d: V1006 = 0x0
0xb1f: V1007 = 0x40
0xb21: V1008 = M[0x40]
0xb22: V1009 = 0x20
0xb24: V1010 = ADD 0x20 V1008
0xb25: M[V1010] = 0x0
0xb26: V1011 = 0x40
0xb28: V1012 = M[0x40]
0xb2a: V1013 = 0xe0
0xb2c: V1014 = 0x2
0xb2e: V1015 = EXP 0x2 0xe0
0xb2f: V1016 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xb31: M[V1012] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb32: V1017 = 0x4
0xb34: V1018 = ADD 0x4 V1012
0xb37: V1019 = 0x1
0xb39: V1020 = 0xa0
0xb3b: V1021 = 0x2
0xb3d: V1022 = EXP 0x2 0xa0
0xb3e: V1023 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3f: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1005
0xb41: M[V1018] = V1024
0xb42: V1025 = 0x20
0xb44: V1026 = ADD 0x20 V1018
0xb48: V1027 = 0x20
0xb4a: V1028 = 0x40
0xb4c: V1029 = M[0x40]
0xb4f: V1030 = SUB V1026 V1029
0xb51: V1031 = 0x0
0xb55: V1032 = EXTCODESIZE V1003
0xb56: V1033 = ISZERO V1032
0xb57: V1034 = 0x0
0xb5a: THROWI V1033
---
Entry stack: [0x0, 0x0, 0x0, V979, V980]
Stack pops: 5
Stack additions: [V983, S3, S2, V985, V1003, 0x70a08231, V1026, 0x20, V1029, V1030, V1029, 0x0, V1003]
Exit stack: [V983, 0x0, 0x0, V985, V1003, 0x70a08231, V1026, 0x20, V1029, V1030, V1029, 0x0, V1003]

================================

Block 0xb5b
[0xb5b:0xb64]
---
Predecessors: [0xaf2]
Successors: [0xb65]
---
0xb5b PUSH1 0x32
0xb5d GAS
0xb5e SUB
0xb5f CALL
0xb60 ISZERO
0xb61 PUSH2 0x0
0xb64 JUMPI
---
0xb5b: V1035 = 0x32
0xb5d: V1036 = GAS
0xb5e: V1037 = SUB V1036 0x32
0xb5f: V1038 = CALL V1037 V1003 0x0 V1029 V1030 V1029 0x20
0xb60: V1039 = ISZERO V1038
0xb61: V1040 = 0x0
0xb64: THROWI V1039
---
Entry stack: [V983, 0x0, 0x0, V985, V1003, 0x70a08231, V1026, 0x20, V1029, V1030, V1029, 0x0, V1003]
Stack pops: 6
Stack additions: []
Exit stack: [V983, 0x0, 0x0, V985, V1003, 0x70a08231, V1026]

================================

Block 0xb65
[0xb65:0xb72]
---
Predecessors: [0xb5b]
Successors: [0xb73]
---
0xb65 POP
0xb66 POP
0xb67 PUSH1 0x40
0xb69 MLOAD
0xb6a MLOAD
0xb6b SWAP1
0xb6c POP
0xb6d DUP2
0xb6e ISZERO
0xb6f PUSH2 0x0
0xb72 JUMPI
---
0xb67: V1041 = 0x40
0xb69: V1042 = M[0x40]
0xb6a: V1043 = M[V1042]
0xb6e: V1044 = ISZERO V985
0xb6f: V1045 = 0x0
0xb72: THROWI V1044
---
Entry stack: [V983, 0x0, 0x0, V985, V1003, 0x70a08231, V1026]
Stack pops: 4
Stack additions: [S3, V1043]
Exit stack: [V983, 0x0, 0x0, V985, V1043]

================================

Block 0xb73
[0xb73:0xb81]
---
Predecessors: [0xb65]
Successors: [0xb82]
---
0xb73 DIV
0xb74 SWAP2
0xb75 POP
0xb76 PUSH1 0x0
0xb78 SWAP1
0xb79 POP
0xb7a DUP2
0xb7b DUP4
0xb7c GT
0xb7d ISZERO
0xb7e PUSH2 0x384
0xb81 JUMPI
---
0xb73: V1046 = DIV V1043 V985
0xb76: V1047 = 0x0
0xb7c: V1048 = GT V983 V1046
0xb7d: V1049 = ISZERO V1048
0xb7e: V1050 = 0x384
0xb81: THROWI V1049
---
Entry stack: [V983, 0x0, 0x0, V985, V1043]
Stack pops: 5
Stack additions: [S4, V1046, 0x0]
Exit stack: [V983, V1046, 0x0]

================================

Block 0xb82
[0xb82:0xbbb]
---
Predecessors: [0xb73]
Successors: [0xbbc]
---
0xb82 POP
0xb83 PUSH1 0x3
0xb85 SLOAD
0xb86 PUSH1 0x40
0xb88 MLOAD
0xb89 SWAP2
0xb8a SWAP3
0xb8b POP
0xb8c DUP3
0xb8d SWAP2
0xb8e SWAP1
0xb8f DUP3
0xb90 MUL
0xb91 CALLVALUE
0xb92 SUB
0xb93 SWAP1
0xb94 PUSH1 0x1
0xb96 PUSH1 0xa0
0xb98 PUSH1 0x2
0xb9a EXP
0xb9b SUB
0xb9c CALLER
0xb9d AND
0xb9e SWAP1
0xb9f DUP3
0xba0 ISZERO
0xba1 PUSH2 0x8fc
0xba4 MUL
0xba5 SWAP1
0xba6 DUP4
0xba7 SWAP1
0xba8 PUSH1 0x0
0xbaa DUP2
0xbab DUP2
0xbac DUP2
0xbad DUP6
0xbae DUP9
0xbaf DUP9
0xbb0 CALL
0xbb1 SWAP4
0xbb2 POP
0xbb3 POP
0xbb4 POP
0xbb5 POP
0xbb6 ISZERO
0xbb7 ISZERO
0xbb8 PUSH2 0x384
0xbbb JUMPI
---
0xb83: V1051 = 0x3
0xb85: V1052 = S[0x3]
0xb86: V1053 = 0x40
0xb88: V1054 = M[0x40]
0xb90: V1055 = MUL V1046 V1052
0xb91: V1056 = CALLVALUE
0xb92: V1057 = SUB V1056 V1055
0xb94: V1058 = 0x1
0xb96: V1059 = 0xa0
0xb98: V1060 = 0x2
0xb9a: V1061 = EXP 0x2 0xa0
0xb9b: V1062 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9c: V1063 = CALLER
0xb9d: V1064 = AND V1063 0xffffffffffffffffffffffffffffffffffffffff
0xba0: V1065 = ISZERO V1057
0xba1: V1066 = 0x8fc
0xba4: V1067 = MUL 0x8fc V1065
0xba8: V1068 = 0x0
0xbb0: V1069 = CALL V1067 V1064 V1057 V1054 0x0 V1054 0x0
0xbb6: V1070 = ISZERO V1069
0xbb7: V1071 = ISZERO V1070
0xbb8: V1072 = 0x384
0xbbb: THROWI V1071
---
Entry stack: [V983, V1046, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V1057]
Exit stack: [V1046, V1046, V1057]

================================

Block 0xbbc
[0xbbc:0xbc0]
---
Predecessors: [0xb82]
Successors: [0xbc1]
---
0xbbc PUSH2 0x0
0xbbf JUMP
0xbc0 JUMPDEST
---
0xbbc: V1073 = 0x0
0xbbf: THROW 
0xbc0: JUMPDEST 
---
Entry stack: [V1046, V1046, V1057]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbc1
[0xbc1:0xbca]
---
Predecessors: [0xbbc]
Successors: [0xbcb]
---
0xbc1 JUMPDEST
0xbc2 PUSH1 0x0
0xbc4 DUP4
0xbc5 GT
0xbc6 ISZERO
0xbc7 PUSH2 0x41a
0xbca JUMPI
---
0xbc1: JUMPDEST 
0xbc2: V1074 = 0x0
0xbc5: V1075 = GT S2 0x0
0xbc6: V1076 = ISZERO V1075
0xbc7: V1077 = 0x41a
0xbca: THROWI V1076
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0xbcb
[0xbcb:0xc39]
---
Predecessors: [0xbc1]
Successors: [0xc3a]
---
0xbcb PUSH1 0x1
0xbcd PUSH1 0x0
0xbcf SWAP1
0xbd0 SLOAD
0xbd1 SWAP1
0xbd2 PUSH2 0x100
0xbd5 EXP
0xbd6 SWAP1
0xbd7 DIV
0xbd8 PUSH1 0x1
0xbda PUSH1 0xa0
0xbdc PUSH1 0x2
0xbde EXP
0xbdf SUB
0xbe0 AND
0xbe1 PUSH1 0x1
0xbe3 PUSH1 0xa0
0xbe5 PUSH1 0x2
0xbe7 EXP
0xbe8 SUB
0xbe9 AND
0xbea PUSH4 0xa9059cbb
0xbef CALLER
0xbf0 PUSH1 0x4
0xbf2 SLOAD
0xbf3 DUP7
0xbf4 MUL
0xbf5 PUSH1 0x0
0xbf7 PUSH1 0x40
0xbf9 MLOAD
0xbfa PUSH1 0x20
0xbfc ADD
0xbfd MSTORE
0xbfe PUSH1 0x40
0xc00 MLOAD
0xc01 DUP4
0xc02 PUSH1 0xe0
0xc04 PUSH1 0x2
0xc06 EXP
0xc07 MUL
0xc08 DUP2
0xc09 MSTORE
0xc0a PUSH1 0x4
0xc0c ADD
0xc0d DUP1
0xc0e DUP4
0xc0f PUSH1 0x1
0xc11 PUSH1 0xa0
0xc13 PUSH1 0x2
0xc15 EXP
0xc16 SUB
0xc17 AND
0xc18 DUP2
0xc19 MSTORE
0xc1a PUSH1 0x20
0xc1c ADD
0xc1d DUP3
0xc1e DUP2
0xc1f MSTORE
0xc20 PUSH1 0x20
0xc22 ADD
0xc23 SWAP3
0xc24 POP
0xc25 POP
0xc26 POP
0xc27 PUSH1 0x20
0xc29 PUSH1 0x40
0xc2b MLOAD
0xc2c DUP1
0xc2d DUP4
0xc2e SUB
0xc2f DUP2
0xc30 PUSH1 0x0
0xc32 DUP8
0xc33 DUP1
0xc34 EXTCODESIZE
0xc35 ISZERO
0xc36 PUSH2 0x0
0xc39 JUMPI
---
0xbcb: V1078 = 0x1
0xbcd: V1079 = 0x0
0xbd0: V1080 = S[0x1]
0xbd2: V1081 = 0x100
0xbd5: V1082 = EXP 0x100 0x0
0xbd7: V1083 = DIV V1080 0x1
0xbd8: V1084 = 0x1
0xbda: V1085 = 0xa0
0xbdc: V1086 = 0x2
0xbde: V1087 = EXP 0x2 0xa0
0xbdf: V1088 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe0: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0xbe1: V1090 = 0x1
0xbe3: V1091 = 0xa0
0xbe5: V1092 = 0x2
0xbe7: V1093 = EXP 0x2 0xa0
0xbe8: V1094 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe9: V1095 = AND 0xffffffffffffffffffffffffffffffffffffffff V1089
0xbea: V1096 = 0xa9059cbb
0xbef: V1097 = CALLER
0xbf0: V1098 = 0x4
0xbf2: V1099 = S[0x4]
0xbf4: V1100 = MUL S2 V1099
0xbf5: V1101 = 0x0
0xbf7: V1102 = 0x40
0xbf9: V1103 = M[0x40]
0xbfa: V1104 = 0x20
0xbfc: V1105 = ADD 0x20 V1103
0xbfd: M[V1105] = 0x0
0xbfe: V1106 = 0x40
0xc00: V1107 = M[0x40]
0xc02: V1108 = 0xe0
0xc04: V1109 = 0x2
0xc06: V1110 = EXP 0x2 0xe0
0xc07: V1111 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc09: M[V1107] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc0a: V1112 = 0x4
0xc0c: V1113 = ADD 0x4 V1107
0xc0f: V1114 = 0x1
0xc11: V1115 = 0xa0
0xc13: V1116 = 0x2
0xc15: V1117 = EXP 0x2 0xa0
0xc16: V1118 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc17: V1119 = AND 0xffffffffffffffffffffffffffffffffffffffff V1097
0xc19: M[V1113] = V1119
0xc1a: V1120 = 0x20
0xc1c: V1121 = ADD 0x20 V1113
0xc1f: M[V1121] = V1100
0xc20: V1122 = 0x20
0xc22: V1123 = ADD 0x20 V1121
0xc27: V1124 = 0x20
0xc29: V1125 = 0x40
0xc2b: V1126 = M[0x40]
0xc2e: V1127 = SUB V1123 V1126
0xc30: V1128 = 0x0
0xc34: V1129 = EXTCODESIZE V1095
0xc35: V1130 = ISZERO V1129
0xc36: V1131 = 0x0
0xc39: THROWI V1130
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1095, 0xa9059cbb, V1123, 0x20, V1126, V1127, V1126, 0x0, V1095]
Exit stack: [S2, S1, S0, V1095, 0xa9059cbb, V1123, 0x20, V1126, V1127, V1126, 0x0, V1095]

================================

Block 0xc3a
[0xc3a:0xc43]
---
Predecessors: [0xbcb]
Successors: [0xc44]
---
0xc3a PUSH1 0x32
0xc3c GAS
0xc3d SUB
0xc3e CALL
0xc3f ISZERO
0xc40 PUSH2 0x0
0xc43 JUMPI
---
0xc3a: V1132 = 0x32
0xc3c: V1133 = GAS
0xc3d: V1134 = SUB V1133 0x32
0xc3e: V1135 = CALL V1134 V1095 0x0 V1126 V1127 V1126 0x20
0xc3f: V1136 = ISZERO V1135
0xc40: V1137 = 0x0
0xc43: THROWI V1136
---
Entry stack: [S11, S10, S9, V1095, 0xa9059cbb, V1123, 0x20, V1126, V1127, V1126, 0x0, V1095]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1095, 0xa9059cbb, V1123]

================================

Block 0xc44
[0xc44:0xc51]
---
Predecessors: [0xc3a]
Successors: [0xc52]
---
0xc44 POP
0xc45 POP
0xc46 PUSH1 0x40
0xc48 MLOAD
0xc49 MLOAD
0xc4a ISZERO
0xc4b ISZERO
0xc4c SWAP1
0xc4d POP
0xc4e PUSH2 0x41a
0xc51 JUMPI
---
0xc46: V1138 = 0x40
0xc48: V1139 = M[0x40]
0xc49: V1140 = M[V1139]
0xc4a: V1141 = ISZERO V1140
0xc4b: V1142 = ISZERO V1141
0xc4e: V1143 = 0x41a
0xc51: THROWI V1142
---
Entry stack: [S5, S4, S3, V1095, 0xa9059cbb, V1123]
Stack pops: 3
Stack additions: []
Exit stack: [S5, S4, S3]

================================

Block 0xc52
[0xc52:0xc56]
---
Predecessors: [0xc44]
Successors: [0xc57]
---
0xc52 PUSH2 0x0
0xc55 JUMP
0xc56 JUMPDEST
---
0xc52: V1144 = 0x0
0xc55: THROW 
0xc56: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc57
[0xc57:0xcd5]
---
Predecessors: [0xc52]
Successors: [0xcd6]
---
0xc57 JUMPDEST
0xc58 PUSH1 0x4
0xc5a SLOAD
0xc5b PUSH1 0x40
0xc5d DUP1
0xc5e MLOAD
0xc5f CALLVALUE
0xc60 DUP2
0xc61 MSTORE
0xc62 PUSH1 0x20
0xc64 DUP2
0xc65 ADD
0xc66 DUP5
0xc67 SWAP1
0xc68 MSTORE
0xc69 SWAP2
0xc6a DUP6
0xc6b MUL
0xc6c DUP3
0xc6d DUP3
0xc6e ADD
0xc6f MSTORE
0xc70 MLOAD
0xc71 PUSH1 0x1
0xc73 PUSH1 0xa0
0xc75 PUSH1 0x2
0xc77 EXP
0xc78 SUB
0xc79 CALLER
0xc7a AND
0xc7b SWAP2
0xc7c PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xc9d SWAP2
0xc9e SWAP1
0xc9f DUP2
0xca0 SWAP1
0xca1 SUB
0xca2 PUSH1 0x60
0xca4 ADD
0xca5 SWAP1
0xca6 LOG2
0xca7 PUSH2 0x49e
0xcaa JUMP
0xcab JUMPDEST
0xcac PUSH1 0x40
0xcae MLOAD
0xcaf PUSH1 0x1
0xcb1 PUSH1 0xa0
0xcb3 PUSH1 0x2
0xcb5 EXP
0xcb6 SUB
0xcb7 CALLER
0xcb8 AND
0xcb9 SWAP1
0xcba CALLVALUE
0xcbb DUP1
0xcbc ISZERO
0xcbd PUSH2 0x8fc
0xcc0 MUL
0xcc1 SWAP2
0xcc2 PUSH1 0x0
0xcc4 DUP2
0xcc5 DUP2
0xcc6 DUP2
0xcc7 DUP6
0xcc8 DUP9
0xcc9 DUP9
0xcca CALL
0xccb SWAP4
0xccc POP
0xccd POP
0xcce POP
0xccf POP
0xcd0 ISZERO
0xcd1 ISZERO
0xcd2 PUSH2 0x49e
0xcd5 JUMPI
---
0xc57: JUMPDEST 
0xc58: V1145 = 0x4
0xc5a: V1146 = S[0x4]
0xc5b: V1147 = 0x40
0xc5e: V1148 = M[0x40]
0xc5f: V1149 = CALLVALUE
0xc61: M[V1148] = V1149
0xc62: V1150 = 0x20
0xc65: V1151 = ADD V1148 0x20
0xc68: M[V1151] = S0
0xc6b: V1152 = MUL S2 V1146
0xc6e: V1153 = ADD 0x40 V1148
0xc6f: M[V1153] = V1152
0xc70: V1154 = M[0x40]
0xc71: V1155 = 0x1
0xc73: V1156 = 0xa0
0xc75: V1157 = 0x2
0xc77: V1158 = EXP 0x2 0xa0
0xc78: V1159 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc79: V1160 = CALLER
0xc7a: V1161 = AND V1160 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V1162 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xca1: V1163 = SUB V1148 V1154
0xca2: V1164 = 0x60
0xca4: V1165 = ADD 0x60 V1163
0xca6: LOG V1154 V1165 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V1161
0xca7: V1166 = 0x49e
0xcaa: THROW 
0xcab: JUMPDEST 
0xcac: V1167 = 0x40
0xcae: V1168 = M[0x40]
0xcaf: V1169 = 0x1
0xcb1: V1170 = 0xa0
0xcb3: V1171 = 0x2
0xcb5: V1172 = EXP 0x2 0xa0
0xcb6: V1173 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb7: V1174 = CALLER
0xcb8: V1175 = AND V1174 0xffffffffffffffffffffffffffffffffffffffff
0xcba: V1176 = CALLVALUE
0xcbc: V1177 = ISZERO V1176
0xcbd: V1178 = 0x8fc
0xcc0: V1179 = MUL 0x8fc V1177
0xcc2: V1180 = 0x0
0xcca: V1181 = CALL V1179 V1175 V1176 V1168 0x0 V1168 0x0
0xcd0: V1182 = ISZERO V1181
0xcd1: V1183 = ISZERO V1182
0xcd2: V1184 = 0x49e
0xcd5: THROWI V1183
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xcd6
[0xcd6:0xcda]
---
Predecessors: [0xc57]
Successors: [0xcdb]
---
0xcd6 PUSH2 0x0
0xcd9 JUMP
0xcda JUMPDEST
---
0xcd6: V1185 = 0x0
0xcd9: THROW 
0xcda: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcdb
[0xcdb:0xcdb]
---
Predecessors: [0xcd6]
Successors: [0xcdc]
---
0xcdb JUMPDEST
---
0xcdb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcdc
[0xcdc:0xcf8]
---
Predecessors: [0xcdb]
Successors: [0xcf9]
---
0xcdc JUMPDEST
0xcdd POP
0xcde POP
0xcdf POP
0xce0 JUMP
0xce1 JUMPDEST
0xce2 PUSH1 0x0
0xce4 DUP1
0xce5 SLOAD
0xce6 CALLER
0xce7 PUSH1 0x1
0xce9 PUSH1 0xa0
0xceb PUSH1 0x2
0xced EXP
0xcee SUB
0xcef SWAP1
0xcf0 DUP2
0xcf1 AND
0xcf2 SWAP2
0xcf3 AND
0xcf4 EQ
0xcf5 PUSH2 0x4c1
0xcf8 JUMPI
---
0xcdc: JUMPDEST 
0xce0: JUMP S3
0xce1: JUMPDEST 
0xce2: V1186 = 0x0
0xce5: V1187 = S[0x0]
0xce6: V1188 = CALLER
0xce7: V1189 = 0x1
0xce9: V1190 = 0xa0
0xceb: V1191 = 0x2
0xced: V1192 = EXP 0x2 0xa0
0xcee: V1193 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf1: V1194 = AND 0xffffffffffffffffffffffffffffffffffffffff V1188
0xcf3: V1195 = AND V1187 0xffffffffffffffffffffffffffffffffffffffff
0xcf4: V1196 = EQ V1195 V1194
0xcf5: V1197 = 0x4c1
0xcf8: THROWI V1196
---
Entry stack: []
Stack pops: 8
Stack additions: [0x0]
Exit stack: []

================================

Block 0xcf9
[0xcf9:0xd0f]
---
Predecessors: [0xcdc]
Successors: [0xd10]
---
0xcf9 PUSH2 0x0
0xcfc JUMP
0xcfd JUMPDEST
0xcfe PUSH1 0x1
0xd00 PUSH1 0xa0
0xd02 PUSH1 0x2
0xd04 EXP
0xd05 SUB
0xd06 ADDRESS
0xd07 AND
0xd08 BALANCE
0xd09 DUP3
0xd0a SWAP1
0xd0b LT
0xd0c PUSH2 0x530
0xd0f JUMPI
---
0xcf9: V1198 = 0x0
0xcfc: THROW 
0xcfd: JUMPDEST 
0xcfe: V1199 = 0x1
0xd00: V1200 = 0xa0
0xd02: V1201 = 0x2
0xd04: V1202 = EXP 0x2 0xa0
0xd05: V1203 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd06: V1204 = ADDRESS
0xd07: V1205 = AND V1204 0xffffffffffffffffffffffffffffffffffffffff
0xd08: V1206 = BALANCE V1205
0xd0b: V1207 = LT V1206 S1
0xd0c: V1208 = 0x530
0xd0f: THROWI V1207
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xd10
[0xd10:0xd6b]
---
Predecessors: [0xcf9]
Successors: [0xd6c]
---
0xd10 PUSH1 0x40
0xd12 DUP1
0xd13 MLOAD
0xd14 DUP4
0xd15 DUP2
0xd16 MSTORE
0xd17 SWAP1
0xd18 MLOAD
0xd19 PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd3a SWAP2
0xd3b DUP2
0xd3c SWAP1
0xd3d SUB
0xd3e PUSH1 0x20
0xd40 ADD
0xd41 SWAP1
0xd42 LOG1
0xd43 PUSH1 0x0
0xd45 DUP1
0xd46 SLOAD
0xd47 PUSH1 0x40
0xd49 MLOAD
0xd4a PUSH1 0x1
0xd4c PUSH1 0xa0
0xd4e PUSH1 0x2
0xd50 EXP
0xd51 SUB
0xd52 SWAP1
0xd53 SWAP2
0xd54 AND
0xd55 SWAP2
0xd56 DUP5
0xd57 ISZERO
0xd58 PUSH2 0x8fc
0xd5b MUL
0xd5c SWAP2
0xd5d DUP6
0xd5e SWAP2
0xd5f DUP2
0xd60 DUP2
0xd61 DUP2
0xd62 DUP6
0xd63 DUP9
0xd64 DUP9
0xd65 CALL
0xd66 SWAP5
0xd67 POP
0xd68 POP
0xd69 POP
0xd6a POP
0xd6b POP
---
0xd10: V1209 = 0x40
0xd13: V1210 = M[0x40]
0xd16: M[V1210] = S1
0xd18: V1211 = M[0x40]
0xd19: V1212 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd3d: V1213 = SUB V1210 V1211
0xd3e: V1214 = 0x20
0xd40: V1215 = ADD 0x20 V1213
0xd42: LOG V1211 V1215 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd43: V1216 = 0x0
0xd46: V1217 = S[0x0]
0xd47: V1218 = 0x40
0xd49: V1219 = M[0x40]
0xd4a: V1220 = 0x1
0xd4c: V1221 = 0xa0
0xd4e: V1222 = 0x2
0xd50: V1223 = EXP 0x2 0xa0
0xd51: V1224 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd54: V1225 = AND V1217 0xffffffffffffffffffffffffffffffffffffffff
0xd57: V1226 = ISZERO S1
0xd58: V1227 = 0x8fc
0xd5b: V1228 = MUL 0x8fc V1226
0xd65: V1229 = CALL V1228 V1225 S1 V1219 0x0 V1219 0x0
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, V1229]
Exit stack: [S1, V1229]

================================

Block 0xd6c
[0xd6c:0xd6c]
---
Predecessors: [0xd10]
Successors: [0xd6d]
---
0xd6c JUMPDEST
---
0xd6c: JUMPDEST 
---
Entry stack: [S1, V1229]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1229]

================================

Block 0xd6d
[0xd6d:0xd6d]
---
Predecessors: [0xd6c]
Successors: [0xd6e]
---
0xd6d JUMPDEST
---
0xd6d: JUMPDEST 
---
Entry stack: [S1, V1229]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1229]

================================

Block 0xd6e
[0xd6e:0xdc1]
---
Predecessors: [0xd6d]
Successors: [0xdc2]
---
0xd6e JUMPDEST
0xd6f SWAP2
0xd70 SWAP1
0xd71 POP
0xd72 JUMP
0xd73 JUMPDEST
0xd74 PUSH1 0x1
0xd76 SLOAD
0xd77 PUSH1 0x1
0xd79 PUSH1 0xa0
0xd7b PUSH1 0x2
0xd7d EXP
0xd7e SUB
0xd7f AND
0xd80 DUP2
0xd81 JUMP
0xd82 JUMPDEST
0xd83 PUSH1 0x3
0xd85 SLOAD
0xd86 DUP2
0xd87 JUMP
0xd88 JUMPDEST
0xd89 PUSH1 0x5
0xd8b SLOAD
0xd8c PUSH2 0x100
0xd8f SWAP1
0xd90 DIV
0xd91 PUSH1 0xff
0xd93 AND
0xd94 DUP2
0xd95 JUMP
0xd96 JUMPDEST
0xd97 PUSH1 0x2
0xd99 SLOAD
0xd9a DUP2
0xd9b JUMP
0xd9c JUMPDEST
0xd9d PUSH1 0x0
0xd9f SLOAD
0xda0 PUSH1 0x1
0xda2 PUSH1 0xa0
0xda4 PUSH1 0x2
0xda6 EXP
0xda7 SUB
0xda8 AND
0xda9 DUP2
0xdaa JUMP
0xdab JUMPDEST
0xdac PUSH1 0x0
0xdae SLOAD
0xdaf CALLER
0xdb0 PUSH1 0x1
0xdb2 PUSH1 0xa0
0xdb4 PUSH1 0x2
0xdb6 EXP
0xdb7 SUB
0xdb8 SWAP1
0xdb9 DUP2
0xdba AND
0xdbb SWAP2
0xdbc AND
0xdbd EQ
0xdbe PUSH2 0x58a
0xdc1 JUMPI
---
0xd6e: JUMPDEST 
0xd72: JUMP S2
0xd73: JUMPDEST 
0xd74: V1230 = 0x1
0xd76: V1231 = S[0x1]
0xd77: V1232 = 0x1
0xd79: V1233 = 0xa0
0xd7b: V1234 = 0x2
0xd7d: V1235 = EXP 0x2 0xa0
0xd7e: V1236 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7f: V1237 = AND 0xffffffffffffffffffffffffffffffffffffffff V1231
0xd81: JUMP S0
0xd82: JUMPDEST 
0xd83: V1238 = 0x3
0xd85: V1239 = S[0x3]
0xd87: JUMP S0
0xd88: JUMPDEST 
0xd89: V1240 = 0x5
0xd8b: V1241 = S[0x5]
0xd8c: V1242 = 0x100
0xd90: V1243 = DIV V1241 0x100
0xd91: V1244 = 0xff
0xd93: V1245 = AND 0xff V1243
0xd95: JUMP S0
0xd96: JUMPDEST 
0xd97: V1246 = 0x2
0xd99: V1247 = S[0x2]
0xd9b: JUMP S0
0xd9c: JUMPDEST 
0xd9d: V1248 = 0x0
0xd9f: V1249 = S[0x0]
0xda0: V1250 = 0x1
0xda2: V1251 = 0xa0
0xda4: V1252 = 0x2
0xda6: V1253 = EXP 0x2 0xa0
0xda7: V1254 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda8: V1255 = AND 0xffffffffffffffffffffffffffffffffffffffff V1249
0xdaa: JUMP S0
0xdab: JUMPDEST 
0xdac: V1256 = 0x0
0xdae: V1257 = S[0x0]
0xdaf: V1258 = CALLER
0xdb0: V1259 = 0x1
0xdb2: V1260 = 0xa0
0xdb4: V1261 = 0x2
0xdb6: V1262 = EXP 0x2 0xa0
0xdb7: V1263 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdba: V1264 = AND 0xffffffffffffffffffffffffffffffffffffffff V1258
0xdbc: V1265 = AND V1257 0xffffffffffffffffffffffffffffffffffffffff
0xdbd: V1266 = EQ V1265 V1264
0xdbe: V1267 = 0x58a
0xdc1: THROWI V1266
---
Entry stack: [S1, V1229]
Stack pops: 98
Stack additions: []
Exit stack: []

================================

Block 0xdc2
[0xdc2:0xdf9]
---
Predecessors: [0xd6e]
Successors: [0xdfa]
---
0xdc2 PUSH2 0x0
0xdc5 JUMP
0xdc6 JUMPDEST
0xdc7 PUSH1 0x40
0xdc9 DUP1
0xdca MLOAD
0xdcb CALLVALUE
0xdcc DUP2
0xdcd MSTORE
0xdce SWAP1
0xdcf MLOAD
0xdd0 PUSH32 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xdf1 SWAP2
0xdf2 DUP2
0xdf3 SWAP1
0xdf4 SUB
0xdf5 PUSH1 0x20
0xdf7 ADD
0xdf8 SWAP1
0xdf9 LOG1
---
0xdc2: V1268 = 0x0
0xdc5: THROW 
0xdc6: JUMPDEST 
0xdc7: V1269 = 0x40
0xdca: V1270 = M[0x40]
0xdcb: V1271 = CALLVALUE
0xdcd: M[V1270] = V1271
0xdcf: V1272 = M[0x40]
0xdd0: V1273 = 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xdf4: V1274 = SUB V1270 V1272
0xdf5: V1275 = 0x20
0xdf7: V1276 = ADD 0x20 V1274
0xdf9: LOG V1272 V1276 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdfa
[0xdfa:0xdfa]
---
Predecessors: [0xdc2]
Successors: [0xdfb]
---
0xdfa JUMPDEST
---
0xdfa: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdfb
[0xdfb:0xe19]
---
Predecessors: [0xdfa]
Successors: [0xe1a]
---
0xdfb JUMPDEST
0xdfc JUMP
0xdfd JUMPDEST
0xdfe PUSH1 0x4
0xe00 SLOAD
0xe01 DUP2
0xe02 JUMP
0xe03 JUMPDEST
0xe04 PUSH1 0x0
0xe06 SLOAD
0xe07 CALLER
0xe08 PUSH1 0x1
0xe0a PUSH1 0xa0
0xe0c PUSH1 0x2
0xe0e EXP
0xe0f SUB
0xe10 SWAP1
0xe11 DUP2
0xe12 AND
0xe13 SWAP2
0xe14 AND
0xe15 EQ
0xe16 PUSH2 0x5e2
0xe19 JUMPI
---
0xdfb: JUMPDEST 
0xdfc: JUMP S0
0xdfd: JUMPDEST 
0xdfe: V1277 = 0x4
0xe00: V1278 = S[0x4]
0xe02: JUMP S0
0xe03: JUMPDEST 
0xe04: V1279 = 0x0
0xe06: V1280 = S[0x0]
0xe07: V1281 = CALLER
0xe08: V1282 = 0x1
0xe0a: V1283 = 0xa0
0xe0c: V1284 = 0x2
0xe0e: V1285 = EXP 0x2 0xa0
0xe0f: V1286 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe12: V1287 = AND 0xffffffffffffffffffffffffffffffffffffffff V1281
0xe14: V1288 = AND V1280 0xffffffffffffffffffffffffffffffffffffffff
0xe15: V1289 = EQ V1288 V1287
0xe16: V1290 = 0x5e2
0xe19: THROWI V1289
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xe1a
[0xe1a:0xe92]
---
Predecessors: [0xdfb]
Successors: [0xe93]
---
0xe1a PUSH2 0x0
0xe1d JUMP
0xe1e JUMPDEST
0xe1f PUSH1 0x5
0xe21 DUP1
0xe22 SLOAD
0xe23 PUSH1 0xff
0xe25 NOT
0xe26 AND
0xe27 PUSH1 0xf8
0xe29 PUSH1 0x2
0xe2b EXP
0xe2c DUP5
0xe2d DUP2
0xe2e MUL
0xe2f DUP2
0xe30 SWAP1
0xe31 DIV
0xe32 SWAP2
0xe33 SWAP1
0xe34 SWAP2
0xe35 OR
0xe36 PUSH2 0xff00
0xe39 NOT
0xe3a AND
0xe3b PUSH2 0x100
0xe3e DUP5
0xe3f DUP4
0xe40 MUL
0xe41 SWAP3
0xe42 SWAP1
0xe43 SWAP3
0xe44 DIV
0xe45 DUP3
0xe46 MUL
0xe47 OR
0xe48 SWAP2
0xe49 DUP3
0xe4a SWAP1
0xe4b SSTORE
0xe4c PUSH1 0x40
0xe4e DUP1
0xe4f MLOAD
0xe50 PUSH1 0xff
0xe52 DUP1
0xe53 DUP6
0xe54 AND
0xe55 ISZERO
0xe56 ISZERO
0xe57 DUP3
0xe58 MSTORE
0xe59 SWAP3
0xe5a SWAP1
0xe5b SWAP4
0xe5c DIV
0xe5d SWAP1
0xe5e SWAP2
0xe5f AND
0xe60 ISZERO
0xe61 ISZERO
0xe62 PUSH1 0x20
0xe64 DUP4
0xe65 ADD
0xe66 MSTORE
0xe67 DUP1
0xe68 MLOAD
0xe69 PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0xe8a SWAP3
0xe8b DUP2
0xe8c SWAP1
0xe8d SUB
0xe8e SWAP1
0xe8f SWAP2
0xe90 ADD
0xe91 SWAP1
0xe92 LOG1
---
0xe1a: V1291 = 0x0
0xe1d: THROW 
0xe1e: JUMPDEST 
0xe1f: V1292 = 0x5
0xe22: V1293 = S[0x5]
0xe23: V1294 = 0xff
0xe25: V1295 = NOT 0xff
0xe26: V1296 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1293
0xe27: V1297 = 0xf8
0xe29: V1298 = 0x2
0xe2b: V1299 = EXP 0x2 0xf8
0xe2e: V1300 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S1
0xe31: V1301 = DIV V1300 0x100000000000000000000000000000000000000000000000000000000000000
0xe35: V1302 = OR V1301 V1296
0xe36: V1303 = 0xff00
0xe39: V1304 = NOT 0xff00
0xe3a: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1302
0xe3b: V1306 = 0x100
0xe40: V1307 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S0
0xe44: V1308 = DIV V1307 0x100000000000000000000000000000000000000000000000000000000000000
0xe46: V1309 = MUL 0x100 V1308
0xe47: V1310 = OR V1309 V1305
0xe4b: S[0x5] = V1310
0xe4c: V1311 = 0x40
0xe4f: V1312 = M[0x40]
0xe50: V1313 = 0xff
0xe54: V1314 = AND V1310 0xff
0xe55: V1315 = ISZERO V1314
0xe56: V1316 = ISZERO V1315
0xe58: M[V1312] = V1316
0xe5c: V1317 = DIV V1310 0x100
0xe5f: V1318 = AND 0xff V1317
0xe60: V1319 = ISZERO V1318
0xe61: V1320 = ISZERO V1319
0xe62: V1321 = 0x20
0xe65: V1322 = ADD V1312 0x20
0xe66: M[V1322] = V1320
0xe68: V1323 = M[0x40]
0xe69: V1324 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0xe8d: V1325 = SUB V1312 V1323
0xe90: V1326 = ADD 0x40 V1325
0xe92: LOG V1323 V1326 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xe93
[0xe93:0xe93]
---
Predecessors: [0xe1a]
Successors: [0xe94]
---
0xe93 JUMPDEST
---
0xe93: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0xe94
[0xe94:0xeb8]
---
Predecessors: [0xe93]
Successors: [0xeb9]
---
0xe94 JUMPDEST
0xe95 POP
0xe96 POP
0xe97 JUMP
0xe98 JUMPDEST
0xe99 PUSH1 0x5
0xe9b SLOAD
0xe9c PUSH1 0xff
0xe9e AND
0xe9f DUP2
0xea0 JUMP
0xea1 JUMPDEST
0xea2 PUSH1 0x0
0xea4 DUP1
0xea5 SLOAD
0xea6 CALLER
0xea7 PUSH1 0x1
0xea9 PUSH1 0xa0
0xeab PUSH1 0x2
0xead EXP
0xeae SUB
0xeaf SWAP1
0xeb0 DUP2
0xeb1 AND
0xeb2 SWAP2
0xeb3 AND
0xeb4 EQ
0xeb5 PUSH2 0x681
0xeb8 JUMPI
---
0xe94: JUMPDEST 
0xe97: JUMP S2
0xe98: JUMPDEST 
0xe99: V1327 = 0x5
0xe9b: V1328 = S[0x5]
0xe9c: V1329 = 0xff
0xe9e: V1330 = AND 0xff V1328
0xea0: JUMP S0
0xea1: JUMPDEST 
0xea2: V1331 = 0x0
0xea5: V1332 = S[0x0]
0xea6: V1333 = CALLER
0xea7: V1334 = 0x1
0xea9: V1335 = 0xa0
0xeab: V1336 = 0x2
0xead: V1337 = EXP 0x2 0xa0
0xeae: V1338 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb1: V1339 = AND 0xffffffffffffffffffffffffffffffffffffffff V1333
0xeb3: V1340 = AND V1332 0xffffffffffffffffffffffffffffffffffffffff
0xeb4: V1341 = EQ V1340 V1339
0xeb5: V1342 = 0x681
0xeb8: THROWI V1341
---
Entry stack: [S1, S0]
Stack pops: 10
Stack additions: [0x0]
Exit stack: []

================================

Block 0xeb9
[0xeb9:0xf5b]
---
Predecessors: [0xe94]
Successors: [0xf5c]
---
0xeb9 PUSH2 0x0
0xebc JUMP
0xebd JUMPDEST
0xebe PUSH1 0x40
0xec0 DUP1
0xec1 MLOAD
0xec2 PUSH1 0x1
0xec4 PUSH1 0xa0
0xec6 PUSH1 0x2
0xec8 EXP
0xec9 SUB
0xeca DUP6
0xecb AND
0xecc DUP2
0xecd MSTORE
0xece PUSH1 0x20
0xed0 DUP2
0xed1 ADD
0xed2 DUP5
0xed3 SWAP1
0xed4 MSTORE
0xed5 DUP2
0xed6 MLOAD
0xed7 PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xef8 SWAP3
0xef9 SWAP2
0xefa DUP2
0xefb SWAP1
0xefc SUB
0xefd SWAP1
0xefe SWAP2
0xeff ADD
0xf00 SWAP1
0xf01 LOG1
0xf02 PUSH1 0x0
0xf04 DUP1
0xf05 SLOAD
0xf06 PUSH1 0x40
0xf08 DUP1
0xf09 MLOAD
0xf0a PUSH1 0x20
0xf0c SWAP1
0xf0d DUP2
0xf0e ADD
0xf0f DUP5
0xf10 SWAP1
0xf11 MSTORE
0xf12 DUP2
0xf13 MLOAD
0xf14 PUSH1 0xe0
0xf16 PUSH1 0x2
0xf18 EXP
0xf19 PUSH4 0xa9059cbb
0xf1e MUL
0xf1f DUP2
0xf20 MSTORE
0xf21 PUSH1 0x1
0xf23 PUSH1 0xa0
0xf25 PUSH1 0x2
0xf27 EXP
0xf28 SUB
0xf29 SWAP4
0xf2a DUP5
0xf2b AND
0xf2c PUSH1 0x4
0xf2e DUP3
0xf2f ADD
0xf30 MSTORE
0xf31 PUSH1 0x24
0xf33 DUP2
0xf34 ADD
0xf35 DUP8
0xf36 SWAP1
0xf37 MSTORE
0xf38 SWAP2
0xf39 MLOAD
0xf3a SWAP3
0xf3b DUP8
0xf3c AND
0xf3d SWAP4
0xf3e PUSH4 0xa9059cbb
0xf43 SWAP4
0xf44 PUSH1 0x44
0xf46 DUP1
0xf47 DUP6
0xf48 ADD
0xf49 SWAP5
0xf4a SWAP2
0xf4b SWAP3
0xf4c SWAP2
0xf4d DUP4
0xf4e SWAP1
0xf4f SUB
0xf50 ADD
0xf51 SWAP1
0xf52 DUP3
0xf53 SWAP1
0xf54 DUP8
0xf55 DUP1
0xf56 EXTCODESIZE
0xf57 ISZERO
0xf58 PUSH2 0x0
0xf5b JUMPI
---
0xeb9: V1343 = 0x0
0xebc: THROW 
0xebd: JUMPDEST 
0xebe: V1344 = 0x40
0xec1: V1345 = M[0x40]
0xec2: V1346 = 0x1
0xec4: V1347 = 0xa0
0xec6: V1348 = 0x2
0xec8: V1349 = EXP 0x2 0xa0
0xec9: V1350 = SUB 0x10000000000000000000000000000000000000000 0x1
0xecb: V1351 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xecd: M[V1345] = V1351
0xece: V1352 = 0x20
0xed1: V1353 = ADD V1345 0x20
0xed4: M[V1353] = S1
0xed6: V1354 = M[0x40]
0xed7: V1355 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xefc: V1356 = SUB V1345 V1354
0xeff: V1357 = ADD 0x40 V1356
0xf01: LOG V1354 V1357 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xf02: V1358 = 0x0
0xf05: V1359 = S[0x0]
0xf06: V1360 = 0x40
0xf09: V1361 = M[0x40]
0xf0a: V1362 = 0x20
0xf0e: V1363 = ADD 0x20 V1361
0xf11: M[V1363] = 0x0
0xf13: V1364 = M[0x40]
0xf14: V1365 = 0xe0
0xf16: V1366 = 0x2
0xf18: V1367 = EXP 0x2 0xe0
0xf19: V1368 = 0xa9059cbb
0xf1e: V1369 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xf20: M[V1364] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf21: V1370 = 0x1
0xf23: V1371 = 0xa0
0xf25: V1372 = 0x2
0xf27: V1373 = EXP 0x2 0xa0
0xf28: V1374 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2b: V1375 = AND 0xffffffffffffffffffffffffffffffffffffffff V1359
0xf2c: V1376 = 0x4
0xf2f: V1377 = ADD V1364 0x4
0xf30: M[V1377] = V1375
0xf31: V1378 = 0x24
0xf34: V1379 = ADD V1364 0x24
0xf37: M[V1379] = S1
0xf39: V1380 = M[0x40]
0xf3c: V1381 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xf3e: V1382 = 0xa9059cbb
0xf44: V1383 = 0x44
0xf48: V1384 = ADD V1364 0x44
0xf4f: V1385 = SUB V1364 V1380
0xf50: V1386 = ADD V1385 0x44
0xf56: V1387 = EXTCODESIZE V1381
0xf57: V1388 = ISZERO V1387
0xf58: V1389 = 0x0
0xf5b: THROWI V1388
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1381, 0x0, V1380, V1386, V1380, 0x20, V1384, 0xa9059cbb, V1381, S0, S1, S2]
Exit stack: []

================================

Block 0xf5c
[0xf5c:0xf65]
---
Predecessors: [0xeb9]
Successors: [0xf66]
---
0xf5c PUSH1 0x32
0xf5e GAS
0xf5f SUB
0xf60 CALL
0xf61 ISZERO
0xf62 PUSH2 0x0
0xf65 JUMPI
---
0xf5c: V1390 = 0x32
0xf5e: V1391 = GAS
0xf5f: V1392 = SUB V1391 0x32
0xf60: V1393 = CALL V1392 V1381 0x0 V1380 V1386 V1380 0x20
0xf61: V1394 = ISZERO V1393
0xf62: V1395 = 0x0
0xf65: THROWI V1394
---
Entry stack: [S11, S10, S9, V1381, 0xa9059cbb, V1384, 0x20, V1380, V1386, V1380, 0x0, V1381]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1381, 0xa9059cbb, V1384]

================================

Block 0xf66
[0xf66:0xf6e]
---
Predecessors: [0xf5c]
Successors: [0xf6f]
---
0xf66 POP
0xf67 POP
0xf68 PUSH1 0x40
0xf6a MLOAD
0xf6b MLOAD
0xf6c SWAP2
0xf6d POP
0xf6e POP
---
0xf68: V1396 = 0x40
0xf6a: V1397 = M[0x40]
0xf6b: V1398 = M[V1397]
---
Entry stack: [S5, S4, S3, V1381, 0xa9059cbb, V1384]
Stack pops: 4
Stack additions: [V1398]
Exit stack: [S5, S4, V1398]

================================

Block 0xf6f
[0xf6f:0xf6f]
---
Predecessors: [0xf66]
Successors: [0xf70]
---
0xf6f JUMPDEST
---
0xf6f: JUMPDEST 
---
Entry stack: [S2, S1, V1398]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, V1398]

================================

Block 0xf70
[0xf70:0xf8d]
---
Predecessors: [0xf6f]
Successors: [0xf8e]
---
0xf70 JUMPDEST
0xf71 SWAP3
0xf72 SWAP2
0xf73 POP
0xf74 POP
0xf75 JUMP
0xf76 JUMPDEST
0xf77 PUSH1 0x0
0xf79 DUP1
0xf7a SLOAD
0xf7b CALLER
0xf7c PUSH1 0x1
0xf7e PUSH1 0xa0
0xf80 PUSH1 0x2
0xf82 EXP
0xf83 SUB
0xf84 SWAP1
0xf85 DUP2
0xf86 AND
0xf87 SWAP2
0xf88 AND
0xf89 EQ
0xf8a PUSH2 0x756
0xf8d JUMPI
---
0xf70: JUMPDEST 
0xf75: JUMP S3
0xf76: JUMPDEST 
0xf77: V1399 = 0x0
0xf7a: V1400 = S[0x0]
0xf7b: V1401 = CALLER
0xf7c: V1402 = 0x1
0xf7e: V1403 = 0xa0
0xf80: V1404 = 0x2
0xf82: V1405 = EXP 0x2 0xa0
0xf83: V1406 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf86: V1407 = AND 0xffffffffffffffffffffffffffffffffffffffff V1401
0xf88: V1408 = AND V1400 0xffffffffffffffffffffffffffffffffffffffff
0xf89: V1409 = EQ V1408 V1407
0xf8a: V1410 = 0x756
0xf8d: THROWI V1409
---
Entry stack: [S2, S1, V1398]
Stack pops: 7
Stack additions: [0x0]
Exit stack: []

================================

Block 0xf8e
[0xf8e:0x1022]
---
Predecessors: [0xf70]
Successors: [0x1023]
---
0xf8e PUSH2 0x0
0xf91 JUMP
0xf92 JUMPDEST
0xf93 PUSH1 0x40
0xf95 DUP1
0xf96 MLOAD
0xf97 DUP4
0xf98 DUP2
0xf99 MSTORE
0xf9a SWAP1
0xf9b MLOAD
0xf9c PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfbd SWAP2
0xfbe DUP2
0xfbf SWAP1
0xfc0 SUB
0xfc1 PUSH1 0x20
0xfc3 ADD
0xfc4 SWAP1
0xfc5 LOG1
0xfc6 PUSH1 0x1
0xfc8 SLOAD
0xfc9 PUSH1 0x0
0xfcb DUP1
0xfcc SLOAD
0xfcd PUSH1 0x40
0xfcf DUP1
0xfd0 MLOAD
0xfd1 PUSH1 0x20
0xfd3 SWAP1
0xfd4 DUP2
0xfd5 ADD
0xfd6 DUP5
0xfd7 SWAP1
0xfd8 MSTORE
0xfd9 DUP2
0xfda MLOAD
0xfdb PUSH1 0xe0
0xfdd PUSH1 0x2
0xfdf EXP
0xfe0 PUSH4 0xa9059cbb
0xfe5 MUL
0xfe6 DUP2
0xfe7 MSTORE
0xfe8 PUSH1 0x1
0xfea PUSH1 0xa0
0xfec PUSH1 0x2
0xfee EXP
0xfef SUB
0xff0 SWAP4
0xff1 DUP5
0xff2 AND
0xff3 PUSH1 0x4
0xff5 DUP3
0xff6 ADD
0xff7 MSTORE
0xff8 PUSH1 0x24
0xffa DUP2
0xffb ADD
0xffc DUP9
0xffd SWAP1
0xffe MSTORE
0xfff SWAP2
0x1000 MLOAD
0x1001 SWAP3
0x1002 SWAP1
0x1003 SWAP5
0x1004 AND
0x1005 SWAP4
0x1006 PUSH4 0xa9059cbb
0x100b SWAP4
0x100c PUSH1 0x44
0x100e DUP1
0x100f DUP5
0x1010 ADD
0x1011 SWAP5
0x1012 SWAP3
0x1013 SWAP4
0x1014 DUP4
0x1015 SWAP1
0x1016 SUB
0x1017 ADD
0x1018 SWAP1
0x1019 DUP3
0x101a SWAP1
0x101b DUP8
0x101c DUP1
0x101d EXTCODESIZE
0x101e ISZERO
0x101f PUSH2 0x0
0x1022 JUMPI
---
0xf8e: V1411 = 0x0
0xf91: THROW 
0xf92: JUMPDEST 
0xf93: V1412 = 0x40
0xf96: V1413 = M[0x40]
0xf99: M[V1413] = S1
0xf9b: V1414 = M[0x40]
0xf9c: V1415 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfc0: V1416 = SUB V1413 V1414
0xfc1: V1417 = 0x20
0xfc3: V1418 = ADD 0x20 V1416
0xfc5: LOG V1414 V1418 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfc6: V1419 = 0x1
0xfc8: V1420 = S[0x1]
0xfc9: V1421 = 0x0
0xfcc: V1422 = S[0x0]
0xfcd: V1423 = 0x40
0xfd0: V1424 = M[0x40]
0xfd1: V1425 = 0x20
0xfd5: V1426 = ADD 0x20 V1424
0xfd8: M[V1426] = 0x0
0xfda: V1427 = M[0x40]
0xfdb: V1428 = 0xe0
0xfdd: V1429 = 0x2
0xfdf: V1430 = EXP 0x2 0xe0
0xfe0: V1431 = 0xa9059cbb
0xfe5: V1432 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xfe7: M[V1427] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xfe8: V1433 = 0x1
0xfea: V1434 = 0xa0
0xfec: V1435 = 0x2
0xfee: V1436 = EXP 0x2 0xa0
0xfef: V1437 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff2: V1438 = AND 0xffffffffffffffffffffffffffffffffffffffff V1422
0xff3: V1439 = 0x4
0xff6: V1440 = ADD V1427 0x4
0xff7: M[V1440] = V1438
0xff8: V1441 = 0x24
0xffb: V1442 = ADD V1427 0x24
0xffe: M[V1442] = S1
0x1000: V1443 = M[0x40]
0x1004: V1444 = AND V1420 0xffffffffffffffffffffffffffffffffffffffff
0x1006: V1445 = 0xa9059cbb
0x100c: V1446 = 0x44
0x1010: V1447 = ADD V1427 0x44
0x1016: V1448 = SUB V1427 V1443
0x1017: V1449 = ADD V1448 0x44
0x101d: V1450 = EXTCODESIZE V1444
0x101e: V1451 = ISZERO V1450
0x101f: V1452 = 0x0
0x1022: THROWI V1451
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1444, 0x0, V1443, V1449, V1443, 0x20, V1447, 0xa9059cbb, V1444, S0, S1]
Exit stack: []

================================

Block 0x1023
[0x1023:0x102c]
---
Predecessors: [0xf8e]
Successors: [0x102d]
---
0x1023 PUSH1 0x32
0x1025 GAS
0x1026 SUB
0x1027 CALL
0x1028 ISZERO
0x1029 PUSH2 0x0
0x102c JUMPI
---
0x1023: V1453 = 0x32
0x1025: V1454 = GAS
0x1026: V1455 = SUB V1454 0x32
0x1027: V1456 = CALL V1455 V1444 0x0 V1443 V1449 V1443 0x20
0x1028: V1457 = ISZERO V1456
0x1029: V1458 = 0x0
0x102c: THROWI V1457
---
Entry stack: [S10, S9, V1444, 0xa9059cbb, V1447, 0x20, V1443, V1449, V1443, 0x0, V1444]
Stack pops: 6
Stack additions: []
Exit stack: [S10, S9, V1444, 0xa9059cbb, V1447]

================================

Block 0x102d
[0x102d:0x1035]
---
Predecessors: [0x1023]
Successors: [0x1036]
---
0x102d POP
0x102e POP
0x102f PUSH1 0x40
0x1031 MLOAD
0x1032 MLOAD
0x1033 SWAP2
0x1034 POP
0x1035 POP
---
0x102f: V1459 = 0x40
0x1031: V1460 = M[0x40]
0x1032: V1461 = M[V1460]
---
Entry stack: [S4, S3, V1444, 0xa9059cbb, V1447]
Stack pops: 4
Stack additions: [V1461]
Exit stack: [S4, V1461]

================================

Block 0x1036
[0x1036:0x1036]
---
Predecessors: [0x102d]
Successors: [0x1037]
---
0x1036 JUMPDEST
---
0x1036: JUMPDEST 
---
Entry stack: [S1, V1461]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1461]

================================

Block 0x1037
[0x1037:0x104c]
---
Predecessors: [0x1036]
Successors: [0x104d]
---
0x1037 JUMPDEST
0x1038 SWAP2
0x1039 SWAP1
0x103a POP
0x103b JUMP
0x103c JUMPDEST
0x103d PUSH1 0x5
0x103f SLOAD
0x1040 PUSH1 0x0
0x1042 SWAP1
0x1043 DUP2
0x1044 SWAP1
0x1045 PUSH1 0xff
0x1047 AND
0x1048 DUP1
0x1049 PUSH2 0x824
0x104c JUMPI
---
0x1037: JUMPDEST 
0x103b: JUMP S2
0x103c: JUMPDEST 
0x103d: V1462 = 0x5
0x103f: V1463 = S[0x5]
0x1040: V1464 = 0x0
0x1045: V1465 = 0xff
0x1047: V1466 = AND 0xff V1463
0x1049: V1467 = 0x824
0x104c: THROWI V1466
---
Entry stack: [S1, V1461]
Stack pops: 5
Stack additions: [V1466, 0x0, 0x0]
Exit stack: []

================================

Block 0x104d
[0x104d:0x105f]
---
Predecessors: [0x1037]
Successors: [0x1060]
---
0x104d POP
0x104e PUSH1 0x0
0x1050 SLOAD
0x1051 CALLER
0x1052 PUSH1 0x1
0x1054 PUSH1 0xa0
0x1056 PUSH1 0x2
0x1058 EXP
0x1059 SUB
0x105a SWAP1
0x105b DUP2
0x105c AND
0x105d SWAP2
0x105e AND
0x105f EQ
---
0x104e: V1468 = 0x0
0x1050: V1469 = S[0x0]
0x1051: V1470 = CALLER
0x1052: V1471 = 0x1
0x1054: V1472 = 0xa0
0x1056: V1473 = 0x2
0x1058: V1474 = EXP 0x2 0xa0
0x1059: V1475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x105c: V1476 = AND 0xffffffffffffffffffffffffffffffffffffffff V1470
0x105e: V1477 = AND V1469 0xffffffffffffffffffffffffffffffffffffffff
0x105f: V1478 = EQ V1477 V1476
---
Entry stack: [0x0, 0x0, V1466]
Stack pops: 1
Stack additions: [V1478]
Exit stack: [0x0, 0x0, V1478]

================================

Block 0x1060
[0x1060:0x1065]
---
Predecessors: [0x104d]
Successors: [0x1066]
---
0x1060 JUMPDEST
0x1061 ISZERO
0x1062 PUSH2 0x49e
0x1065 JUMPI
---
0x1060: JUMPDEST 
0x1061: V1479 = ISZERO V1478
0x1062: V1480 = 0x49e
0x1065: THROWI V1479
---
Entry stack: [0x0, 0x0, V1478]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0]

================================

Block 0x1066
[0x1066:0x1079]
---
Predecessors: [0x1060]
Successors: [0x107a]
---
0x1066 PUSH1 0x2
0x1068 SLOAD
0x1069 ADDRESS
0x106a PUSH1 0x1
0x106c PUSH1 0xa0
0x106e PUSH1 0x2
0x1070 EXP
0x1071 SUB
0x1072 AND
0x1073 BALANCE
0x1074 DUP2
0x1075 ISZERO
0x1076 PUSH2 0x0
0x1079 JUMPI
---
0x1066: V1481 = 0x2
0x1068: V1482 = S[0x2]
0x1069: V1483 = ADDRESS
0x106a: V1484 = 0x1
0x106c: V1485 = 0xa0
0x106e: V1486 = 0x2
0x1070: V1487 = EXP 0x2 0xa0
0x1071: V1488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1072: V1489 = AND 0xffffffffffffffffffffffffffffffffffffffff V1483
0x1073: V1490 = BALANCE V1489
0x1075: V1491 = ISZERO V1482
0x1076: V1492 = 0x0
0x1079: THROWI V1491
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V1482, V1490]
Exit stack: [0x0, 0x0, V1482, V1490]

================================

Block 0x107a
[0x107a:0x1086]
---
Predecessors: [0x1066]
Successors: [0x1087]
---
0x107a DIV
0x107b SWAP2
0x107c POP
0x107d PUSH1 0x4
0x107f SLOAD
0x1080 DUP4
0x1081 DUP2
0x1082 ISZERO
0x1083 PUSH2 0x0
0x1086 JUMPI
---
0x107a: V1493 = DIV V1490 V1482
0x107d: V1494 = 0x4
0x107f: V1495 = S[0x4]
0x1082: V1496 = ISZERO V1495
0x1083: V1497 = 0x0
0x1086: THROWI V1496
---
Entry stack: [0x0, 0x0, V1482, V1490]
Stack pops: 5
Stack additions: [S4, V1493, S2, V1495, S4]
Exit stack: [S0, V1493, 0x0, V1495, S0]

================================

Block 0x1087
[0x1087:0x1091]
---
Predecessors: [0x107a]
Successors: [0x1092]
---
0x1087 DIV
0x1088 SWAP1
0x1089 POP
0x108a DUP2
0x108b DUP2
0x108c GT
0x108d ISZERO
0x108e PUSH2 0x858
0x1091 JUMPI
---
0x1087: V1498 = DIV S0 V1495
0x108c: V1499 = GT V1498 V1493
0x108d: V1500 = ISZERO V1499
0x108e: V1501 = 0x858
0x1091: THROWI V1500
---
Entry stack: [S4, V1493, 0x0, V1495, S0]
Stack pops: 4
Stack additions: [S3, V1498]
Exit stack: [S4, V1493, V1498]

================================

Block 0x1092
[0x1092:0x1093]
---
Predecessors: [0x1087]
Successors: [0x1094]
---
0x1092 POP
0x1093 DUP1
---
0x1092: NOP 
---
Entry stack: [S2, V1493, V1498]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [S2, V1493, V1493]

================================

Block 0x1094
[0x1094:0x109d]
---
Predecessors: [0x1092]
Successors: [0x109e]
---
0x1094 JUMPDEST
0x1095 PUSH1 0x0
0x1097 DUP2
0x1098 GT
0x1099 ISZERO
0x109a PUSH2 0x931
0x109d JUMPI
---
0x1094: JUMPDEST 
0x1095: V1502 = 0x0
0x1098: V1503 = GT V1493 0x0
0x1099: V1504 = ISZERO V1503
0x109a: V1505 = 0x931
0x109d: THROWI V1504
---
Entry stack: [S2, V1493, V1493]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S2, V1493, V1493]

================================

Block 0x109e
[0x109e:0x111d]
---
Predecessors: [0x1094]
Successors: [0x111e]
---
0x109e PUSH1 0x1
0x10a0 PUSH1 0x0
0x10a2 SWAP1
0x10a3 SLOAD
0x10a4 SWAP1
0x10a5 PUSH2 0x100
0x10a8 EXP
0x10a9 SWAP1
0x10aa DIV
0x10ab PUSH1 0x1
0x10ad PUSH1 0xa0
0x10af PUSH1 0x2
0x10b1 EXP
0x10b2 SUB
0x10b3 AND
0x10b4 PUSH1 0x1
0x10b6 PUSH1 0xa0
0x10b8 PUSH1 0x2
0x10ba EXP
0x10bb SUB
0x10bc AND
0x10bd PUSH4 0x23b872dd
0x10c2 CALLER
0x10c3 ADDRESS
0x10c4 PUSH1 0x4
0x10c6 SLOAD
0x10c7 DUP6
0x10c8 MUL
0x10c9 PUSH1 0x0
0x10cb PUSH1 0x40
0x10cd MLOAD
0x10ce PUSH1 0x20
0x10d0 ADD
0x10d1 MSTORE
0x10d2 PUSH1 0x40
0x10d4 MLOAD
0x10d5 DUP5
0x10d6 PUSH1 0xe0
0x10d8 PUSH1 0x2
0x10da EXP
0x10db MUL
0x10dc DUP2
0x10dd MSTORE
0x10de PUSH1 0x4
0x10e0 ADD
0x10e1 DUP1
0x10e2 DUP5
0x10e3 PUSH1 0x1
0x10e5 PUSH1 0xa0
0x10e7 PUSH1 0x2
0x10e9 EXP
0x10ea SUB
0x10eb AND
0x10ec DUP2
0x10ed MSTORE
0x10ee PUSH1 0x20
0x10f0 ADD
0x10f1 DUP4
0x10f2 PUSH1 0x1
0x10f4 PUSH1 0xa0
0x10f6 PUSH1 0x2
0x10f8 EXP
0x10f9 SUB
0x10fa AND
0x10fb DUP2
0x10fc MSTORE
0x10fd PUSH1 0x20
0x10ff ADD
0x1100 DUP3
0x1101 DUP2
0x1102 MSTORE
0x1103 PUSH1 0x20
0x1105 ADD
0x1106 SWAP4
0x1107 POP
0x1108 POP
0x1109 POP
0x110a POP
0x110b PUSH1 0x20
0x110d PUSH1 0x40
0x110f MLOAD
0x1110 DUP1
0x1111 DUP4
0x1112 SUB
0x1113 DUP2
0x1114 PUSH1 0x0
0x1116 DUP8
0x1117 DUP1
0x1118 EXTCODESIZE
0x1119 ISZERO
0x111a PUSH2 0x0
0x111d JUMPI
---
0x109e: V1506 = 0x1
0x10a0: V1507 = 0x0
0x10a3: V1508 = S[0x1]
0x10a5: V1509 = 0x100
0x10a8: V1510 = EXP 0x100 0x0
0x10aa: V1511 = DIV V1508 0x1
0x10ab: V1512 = 0x1
0x10ad: V1513 = 0xa0
0x10af: V1514 = 0x2
0x10b1: V1515 = EXP 0x2 0xa0
0x10b2: V1516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b3: V1517 = AND 0xffffffffffffffffffffffffffffffffffffffff V1511
0x10b4: V1518 = 0x1
0x10b6: V1519 = 0xa0
0x10b8: V1520 = 0x2
0x10ba: V1521 = EXP 0x2 0xa0
0x10bb: V1522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10bc: V1523 = AND 0xffffffffffffffffffffffffffffffffffffffff V1517
0x10bd: V1524 = 0x23b872dd
0x10c2: V1525 = CALLER
0x10c3: V1526 = ADDRESS
0x10c4: V1527 = 0x4
0x10c6: V1528 = S[0x4]
0x10c8: V1529 = MUL V1493 V1528
0x10c9: V1530 = 0x0
0x10cb: V1531 = 0x40
0x10cd: V1532 = M[0x40]
0x10ce: V1533 = 0x20
0x10d0: V1534 = ADD 0x20 V1532
0x10d1: M[V1534] = 0x0
0x10d2: V1535 = 0x40
0x10d4: V1536 = M[0x40]
0x10d6: V1537 = 0xe0
0x10d8: V1538 = 0x2
0x10da: V1539 = EXP 0x2 0xe0
0x10db: V1540 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x10dd: M[V1536] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x10de: V1541 = 0x4
0x10e0: V1542 = ADD 0x4 V1536
0x10e3: V1543 = 0x1
0x10e5: V1544 = 0xa0
0x10e7: V1545 = 0x2
0x10e9: V1546 = EXP 0x2 0xa0
0x10ea: V1547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10eb: V1548 = AND 0xffffffffffffffffffffffffffffffffffffffff V1525
0x10ed: M[V1542] = V1548
0x10ee: V1549 = 0x20
0x10f0: V1550 = ADD 0x20 V1542
0x10f2: V1551 = 0x1
0x10f4: V1552 = 0xa0
0x10f6: V1553 = 0x2
0x10f8: V1554 = EXP 0x2 0xa0
0x10f9: V1555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10fa: V1556 = AND 0xffffffffffffffffffffffffffffffffffffffff V1526
0x10fc: M[V1550] = V1556
0x10fd: V1557 = 0x20
0x10ff: V1558 = ADD 0x20 V1550
0x1102: M[V1558] = V1529
0x1103: V1559 = 0x20
0x1105: V1560 = ADD 0x20 V1558
0x110b: V1561 = 0x20
0x110d: V1562 = 0x40
0x110f: V1563 = M[0x40]
0x1112: V1564 = SUB V1560 V1563
0x1114: V1565 = 0x0
0x1118: V1566 = EXTCODESIZE V1523
0x1119: V1567 = ISZERO V1566
0x111a: V1568 = 0x0
0x111d: THROWI V1567
---
Entry stack: [S2, V1493, V1493]
Stack pops: 1
Stack additions: [S0, V1523, 0x23b872dd, V1560, 0x20, V1563, V1564, V1563, 0x0, V1523]
Exit stack: [S2, V1493, V1493, V1523, 0x23b872dd, V1560, 0x20, V1563, V1564, V1563, 0x0, V1523]

================================

Block 0x111e
[0x111e:0x1127]
---
Predecessors: [0x109e]
Successors: [0x1128]
---
0x111e PUSH1 0x32
0x1120 GAS
0x1121 SUB
0x1122 CALL
0x1123 ISZERO
0x1124 PUSH2 0x0
0x1127 JUMPI
---
0x111e: V1569 = 0x32
0x1120: V1570 = GAS
0x1121: V1571 = SUB V1570 0x32
0x1122: V1572 = CALL V1571 V1523 0x0 V1563 V1564 V1563 0x20
0x1123: V1573 = ISZERO V1572
0x1124: V1574 = 0x0
0x1127: THROWI V1573
---
Entry stack: [S11, V1493, V1493, V1523, 0x23b872dd, V1560, 0x20, V1563, V1564, V1563, 0x0, V1523]
Stack pops: 6
Stack additions: []
Exit stack: [S11, V1493, V1493, V1523, 0x23b872dd, V1560]

================================

Block 0x1128
[0x1128:0x1135]
---
Predecessors: [0x111e]
Successors: [0x1136]
---
0x1128 POP
0x1129 POP
0x112a PUSH1 0x40
0x112c MLOAD
0x112d MLOAD
0x112e ISZERO
0x112f ISZERO
0x1130 SWAP1
0x1131 POP
0x1132 PUSH2 0x8fe
0x1135 JUMPI
---
0x112a: V1575 = 0x40
0x112c: V1576 = M[0x40]
0x112d: V1577 = M[V1576]
0x112e: V1578 = ISZERO V1577
0x112f: V1579 = ISZERO V1578
0x1132: V1580 = 0x8fe
0x1135: THROWI V1579
---
Entry stack: [S5, V1493, V1493, V1523, 0x23b872dd, V1560]
Stack pops: 3
Stack additions: []
Exit stack: [S5, V1493, V1493]

================================

Block 0x1136
[0x1136:0x1168]
---
Predecessors: [0x1128]
Successors: [0x1169]
---
0x1136 PUSH2 0x0
0x1139 JUMP
0x113a JUMPDEST
0x113b PUSH1 0x2
0x113d SLOAD
0x113e PUSH1 0x40
0x1140 MLOAD
0x1141 PUSH1 0x1
0x1143 PUSH1 0xa0
0x1145 PUSH1 0x2
0x1147 EXP
0x1148 SUB
0x1149 CALLER
0x114a AND
0x114b SWAP2
0x114c DUP4
0x114d MUL
0x114e DUP1
0x114f ISZERO
0x1150 PUSH2 0x8fc
0x1153 MUL
0x1154 SWAP2
0x1155 PUSH1 0x0
0x1157 DUP2
0x1158 DUP2
0x1159 DUP2
0x115a DUP6
0x115b DUP9
0x115c DUP9
0x115d CALL
0x115e SWAP4
0x115f POP
0x1160 POP
0x1161 POP
0x1162 POP
0x1163 ISZERO
0x1164 ISZERO
0x1165 PUSH2 0x931
0x1168 JUMPI
---
0x1136: V1581 = 0x0
0x1139: THROW 
0x113a: JUMPDEST 
0x113b: V1582 = 0x2
0x113d: V1583 = S[0x2]
0x113e: V1584 = 0x40
0x1140: V1585 = M[0x40]
0x1141: V1586 = 0x1
0x1143: V1587 = 0xa0
0x1145: V1588 = 0x2
0x1147: V1589 = EXP 0x2 0xa0
0x1148: V1590 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1149: V1591 = CALLER
0x114a: V1592 = AND V1591 0xffffffffffffffffffffffffffffffffffffffff
0x114d: V1593 = MUL S0 V1583
0x114f: V1594 = ISZERO V1593
0x1150: V1595 = 0x8fc
0x1153: V1596 = MUL 0x8fc V1594
0x1155: V1597 = 0x0
0x115d: V1598 = CALL V1596 V1592 V1593 V1585 0x0 V1585 0x0
0x1163: V1599 = ISZERO V1598
0x1164: V1600 = ISZERO V1599
0x1165: V1601 = 0x931
0x1168: THROWI V1600
---
Entry stack: [S2, V1493, V1493]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1169
[0x1169:0x116d]
---
Predecessors: [0x1136]
Successors: [0x116e]
---
0x1169 PUSH2 0x0
0x116c JUMP
0x116d JUMPDEST
---
0x1169: V1602 = 0x0
0x116c: THROW 
0x116d: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x116e
[0x116e:0x11c1]
---
Predecessors: [0x1169]
Successors: [0x11c2]
---
0x116e JUMPDEST
0x116f PUSH1 0x4
0x1171 SLOAD
0x1172 PUSH1 0x2
0x1174 SLOAD
0x1175 PUSH1 0x40
0x1177 DUP1
0x1178 MLOAD
0x1179 DUP7
0x117a DUP2
0x117b MSTORE
0x117c SWAP3
0x117d DUP5
0x117e MUL
0x117f PUSH1 0x20
0x1181 DUP5
0x1182 ADD
0x1183 MSTORE
0x1184 SWAP1
0x1185 DUP4
0x1186 MUL
0x1187 DUP3
0x1188 DUP3
0x1189 ADD
0x118a MSTORE
0x118b MLOAD
0x118c PUSH1 0x1
0x118e PUSH1 0xa0
0x1190 PUSH1 0x2
0x1192 EXP
0x1193 SUB
0x1194 CALLER
0x1195 AND
0x1196 SWAP2
0x1197 PUSH32 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x11b8 SWAP2
0x11b9 SWAP1
0x11ba DUP2
0x11bb SWAP1
0x11bc SUB
0x11bd PUSH1 0x60
0x11bf ADD
0x11c0 SWAP1
0x11c1 LOG2
---
0x116e: JUMPDEST 
0x116f: V1603 = 0x4
0x1171: V1604 = S[0x4]
0x1172: V1605 = 0x2
0x1174: V1606 = S[0x2]
0x1175: V1607 = 0x40
0x1178: V1608 = M[0x40]
0x117b: M[V1608] = S2
0x117e: V1609 = MUL S0 V1604
0x117f: V1610 = 0x20
0x1182: V1611 = ADD V1608 0x20
0x1183: M[V1611] = V1609
0x1186: V1612 = MUL S0 V1606
0x1189: V1613 = ADD 0x40 V1608
0x118a: M[V1613] = V1612
0x118b: V1614 = M[0x40]
0x118c: V1615 = 0x1
0x118e: V1616 = 0xa0
0x1190: V1617 = 0x2
0x1192: V1618 = EXP 0x2 0xa0
0x1193: V1619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1194: V1620 = CALLER
0x1195: V1621 = AND V1620 0xffffffffffffffffffffffffffffffffffffffff
0x1197: V1622 = 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x11bc: V1623 = SUB V1608 V1614
0x11bd: V1624 = 0x60
0x11bf: V1625 = ADD 0x60 V1623
0x11c1: LOG V1614 V1625 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683 V1621
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0x11c2
[0x11c2:0x11c2]
---
Predecessors: [0x116e]
Successors: [0x11c3]
---
0x11c2 JUMPDEST
---
0x11c2: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x11c3
[0x11c3:0x11de]
---
Predecessors: [0x11c2]
Successors: [0x11df]
---
0x11c3 JUMPDEST
0x11c4 POP
0x11c5 POP
0x11c6 POP
0x11c7 JUMP
0x11c8 JUMPDEST
0x11c9 PUSH1 0x0
0x11cb SLOAD
0x11cc CALLER
0x11cd PUSH1 0x1
0x11cf PUSH1 0xa0
0x11d1 PUSH1 0x2
0x11d3 EXP
0x11d4 SUB
0x11d5 SWAP1
0x11d6 DUP2
0x11d7 AND
0x11d8 SWAP2
0x11d9 AND
0x11da EQ
0x11db PUSH2 0x9a7
0x11de JUMPI
---
0x11c3: JUMPDEST 
0x11c7: JUMP S3
0x11c8: JUMPDEST 
0x11c9: V1626 = 0x0
0x11cb: V1627 = S[0x0]
0x11cc: V1628 = CALLER
0x11cd: V1629 = 0x1
0x11cf: V1630 = 0xa0
0x11d1: V1631 = 0x2
0x11d3: V1632 = EXP 0x2 0xa0
0x11d4: V1633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d7: V1634 = AND 0xffffffffffffffffffffffffffffffffffffffff V1628
0x11d9: V1635 = AND V1627 0xffffffffffffffffffffffffffffffffffffffff
0x11da: V1636 = EQ V1635 V1634
0x11db: V1637 = 0x9a7
0x11de: THROWI V1636
---
Entry stack: [S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0x11df
[0x11df:0x124c]
---
Predecessors: [0x11c3]
Successors: [0x124d]
---
0x11df PUSH2 0x0
0x11e2 JUMP
0x11e3 JUMPDEST
0x11e4 PUSH1 0x0
0x11e6 DUP1
0x11e7 SLOAD
0x11e8 PUSH1 0x40
0x11ea MLOAD
0x11eb PUSH1 0x1
0x11ed PUSH1 0xa0
0x11ef PUSH1 0x2
0x11f1 EXP
0x11f2 SUB
0x11f3 DUP1
0x11f4 DUP6
0x11f5 AND
0x11f6 SWAP4
0x11f7 SWAP3
0x11f8 AND
0x11f9 SWAP2
0x11fa PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x121b SWAP2
0x121c LOG3
0x121d PUSH1 0x0
0x121f DUP1
0x1220 SLOAD
0x1221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1236 NOT
0x1237 AND
0x1238 PUSH13 0x1000000000000000000000000
0x1246 DUP4
0x1247 DUP2
0x1248 MUL
0x1249 DIV
0x124a OR
0x124b SWAP1
0x124c SSTORE
---
0x11df: V1638 = 0x0
0x11e2: THROW 
0x11e3: JUMPDEST 
0x11e4: V1639 = 0x0
0x11e7: V1640 = S[0x0]
0x11e8: V1641 = 0x40
0x11ea: V1642 = M[0x40]
0x11eb: V1643 = 0x1
0x11ed: V1644 = 0xa0
0x11ef: V1645 = 0x2
0x11f1: V1646 = EXP 0x2 0xa0
0x11f2: V1647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11f5: V1648 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11f8: V1649 = AND V1640 0xffffffffffffffffffffffffffffffffffffffff
0x11fa: V1650 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x121c: LOG V1642 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1649 V1648
0x121d: V1651 = 0x0
0x1220: V1652 = S[0x0]
0x1221: V1653 = 0xffffffffffffffffffffffffffffffffffffffff
0x1236: V1654 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1237: V1655 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1652
0x1238: V1656 = 0x1000000000000000000000000
0x1248: V1657 = MUL 0x1000000000000000000000000 S0
0x1249: V1658 = DIV V1657 0x1000000000000000000000000
0x124a: V1659 = OR V1658 V1655
0x124c: S[0x0] = V1659
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x124d
[0x124d:0x124d]
---
Predecessors: [0x11df]
Successors: [0x124e]
---
0x124d JUMPDEST
---
0x124d: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x124e
[0x124e:0x1250]
---
Predecessors: [0x124d]
Successors: []
Has unresolved jump.
---
0x124e JUMPDEST
0x124f POP
0x1250 JUMP
---
0x124e: JUMPDEST 
0x1250: JUMP S1
---
Entry stack: [S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x3d6a32bd
Entry block: 0x5d
Exit block: 0x7c
Body: 0x5d, 0x63, 0x7c, 0x15b, 0x167, 0x16c, 0x172, 0x176, 0x17f, 0x183, 0x18c, 0x190, 0x1ee, 0x266, 0x270, 0x2e5

Function 1:
Public function signature: 0x5de01497
Entry block: 0x98
Exit block: 0xab
Body: 0x98, 0x9e, 0xab, 0x2ef, 0x307, 0x30b, 0x3c0, 0x3ca, 0x3d3, 0x3d4

Function 2:
Public function signature: 0x63a9c3d7
Entry block: 0xbf
Exit block: 0xcf
Body: 0xbf, 0xc5, 0xcf, 0x3da, 0x405, 0x445, 0x44f, 0x49b, 0x4a5, 0x4f1, 0x4fb, 0x547, 0x551, 0x59d, 0x5a7, 0x5f3, 0x5fd, 0x649, 0x653, 0x65c, 0x65d

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x120
Exit block: 0x7c
Body: 0x7c, 0x120, 0x126, 0x669

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x149
Exit block: 0x5b
Body: 0x5b, 0x149, 0x14f, 0x678, 0x68f, 0x693, 0x6fd, 0x6fe

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x54
Body: 0x4b, 0x51, 0x54

