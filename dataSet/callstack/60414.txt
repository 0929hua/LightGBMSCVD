Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x81]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x81
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x81
0xa: JUMPI 0x81 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x9a]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x7e25cec
0x3a EQ
0x3b PUSH2 0x9a
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x7e25cec
0x3a: V12 = EQ 0x7e25cec V10
0x3b: V13 = 0x9a
0x3e: JUMPI 0x9a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xd6]
---
0x3f DUP1
0x40 PUSH4 0x8da5cb5b
0x45 EQ
0x46 PUSH2 0xd6
0x49 JUMPI
---
0x40: V14 = 0x8da5cb5b
0x45: V15 = EQ 0x8da5cb5b V10
0x46: V16 = 0xd6
0x49: JUMPI 0xd6 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x128]
---
0x4a DUP1
0x4b PUSH4 0x940fbcd9
0x50 EQ
0x51 PUSH2 0x128
0x54 JUMPI
---
0x4b: V17 = 0x940fbcd9
0x50: V18 = EQ 0x940fbcd9 V10
0x51: V19 = 0x128
0x54: JUMPI 0x128 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x19a]
---
0x55 DUP1
0x56 PUSH4 0xb8b603c5
0x5b EQ
0x5c PUSH2 0x19a
0x5f JUMPI
---
0x56: V20 = 0xb8b603c5
0x5b: V21 = EQ 0xb8b603c5 V10
0x5c: V22 = 0x19a
0x5f: JUMPI 0x19a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1f4]
---
0x60 DUP1
0x61 PUSH4 0xbd637580
0x66 EQ
0x67 PUSH2 0x1f4
0x6a JUMPI
---
0x61: V23 = 0xbd637580
0x66: V24 = EQ 0xbd637580 V10
0x67: V25 = 0x1f4
0x6a: JUMPI 0x1f4 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x218]
---
0x6b DUP1
0x6c PUSH4 0xc9116b69
0x71 EQ
0x72 PUSH2 0x218
0x75 JUMPI
---
0x6c: V26 = 0xc9116b69
0x71: V27 = EQ 0xc9116b69 V10
0x72: V28 = 0x218
0x75: JUMPI 0x218 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x23e]
---
0x76 DUP1
0x77 PUSH4 0xcb22d41b
0x7c EQ
0x7d PUSH2 0x23e
0x80 JUMPI
---
0x77: V29 = 0xcb22d41b
0x7c: V30 = EQ 0xcb22d41b V10
0x7d: V31 = 0x23e
0x80: JUMPI 0x23e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x0, 0x76]
Successors: [0x85]
---
0x81 JUMPDEST
0x82 PUSH2 0x98
---
0x81: JUMPDEST 
0x82: V32 = 0x98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V10, 0x98]

================================

Block 0x85
[0x85:0x95]
---
Predecessors: [0x81]
Successors: [0x96]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 PUSH1 0x2
0x89 PUSH1 0x0
0x8b DUP3
0x8c DUP3
0x8d SLOAD
0x8e ADD
0x8f SWAP3
0x90 POP
0x91 POP
0x92 DUP2
0x93 SWAP1
0x94 SSTORE
0x95 POP
---
0x85: JUMPDEST 
0x86: V33 = CALLVALUE
0x87: V34 = 0x2
0x89: V35 = 0x0
0x8d: V36 = S[0x2]
0x8e: V37 = ADD V36 V33
0x94: S[0x2] = V37
---
Entry stack: [V10, 0x98]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x98]

================================

Block 0x96
[0x96:0x97]
---
Predecessors: [0x85]
Successors: [0x98]
---
0x96 JUMPDEST
0x97 JUMP
---
0x96: JUMPDEST 
0x97: JUMP 0x98
---
Entry stack: [V10, 0x98]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: [0x96]
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0xb]
Successors: [0xa1, 0xa2]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa2
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V38 = CALLVALUE
0x9c: V39 = ISZERO V38
0x9d: V40 = 0xa2
0xa0: JUMPI 0xa2 V39
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xa1]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 INVALID
---
0xa1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xbb]
---
Predecessors: [0x9a]
Successors: [0x264]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xbc
0xa6 PUSH1 0x4
0xa8 DUP1
0xa9 DUP1
0xaa CALLDATALOAD
0xab PUSH1 0x0
0xad NOT
0xae AND
0xaf SWAP1
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP1
0xb4 SWAP2
0xb5 SWAP1
0xb6 POP
0xb7 POP
0xb8 PUSH2 0x264
0xbb JUMP
---
0xa2: JUMPDEST 
0xa3: V41 = 0xbc
0xa6: V42 = 0x4
0xaa: V43 = CALLDATALOAD 0x4
0xab: V44 = 0x0
0xad: V45 = NOT 0x0
0xae: V46 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V43
0xb0: V47 = 0x20
0xb2: V48 = ADD 0x20 0x4
0xb8: V49 = 0x264
0xbb: JUMP 0x264
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbc, V46]
Exit stack: [V10, 0xbc, V46]

================================

Block 0xbc
[0xbc:0xd5]
---
Predecessors: [0x264]
Successors: []
---
0xbc JUMPDEST
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 DUP3
0xc2 ISZERO
0xc3 ISZERO
0xc4 ISZERO
0xc5 ISZERO
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP2
0xcc POP
0xcd POP
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP1
0xd2 SWAP2
0xd3 SUB
0xd4 SWAP1
0xd5 RETURN
---
0xbc: JUMPDEST 
0xbd: V50 = 0x40
0xbf: V51 = M[0x40]
0xc2: V52 = ISZERO V190
0xc3: V53 = ISZERO V52
0xc4: V54 = ISZERO V53
0xc5: V55 = ISZERO V54
0xc7: M[V51] = V55
0xc8: V56 = 0x20
0xca: V57 = ADD 0x20 V51
0xce: V58 = 0x40
0xd0: V59 = M[0x40]
0xd3: V60 = SUB V57 V59
0xd5: RETURN V59 V60
---
Entry stack: [V10, 0xbc, V190]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xbc]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x3f]
Successors: [0xdd, 0xde]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xde
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V61 = CALLVALUE
0xd8: V62 = ISZERO V61
0xd9: V63 = 0xde
0xdc: JUMPI 0xde V62
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdd
[0xdd:0xdd]
---
Predecessors: [0xd6]
Successors: []
---
0xdd INVALID
---
0xdd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd6]
Successors: [0x284]
---
0xde JUMPDEST
0xdf PUSH2 0xe6
0xe2 PUSH2 0x284
0xe5 JUMP
---
0xde: JUMPDEST 
0xdf: V64 = 0xe6
0xe2: V65 = 0x284
0xe5: JUMP 0x284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V10, 0xe6]

================================

Block 0xe6
[0xe6:0x127]
---
Predecessors: [0x284]
Successors: []
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb DUP3
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x117 AND
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP2
0x11e POP
0x11f POP
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP1
0x124 SWAP2
0x125 SUB
0x126 SWAP1
0x127 RETURN
---
0xe6: JUMPDEST 
0xe7: V66 = 0x40
0xe9: V67 = M[0x40]
0xec: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x102: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x117: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x119: M[V67] = V71
0x11a: V72 = 0x20
0x11c: V73 = ADD 0x20 V67
0x120: V74 = 0x40
0x122: V75 = M[0x40]
0x125: V76 = SUB V73 V75
0x127: RETURN V75 V76
---
Entry stack: [V10, 0xe6, V198]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xe6]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x4a]
Successors: [0x12f, 0x130]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x130
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V77 = CALLVALUE
0x12a: V78 = ISZERO V77
0x12b: V79 = 0x130
0x12e: JUMPI 0x130 V78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12f
[0x12f:0x12f]
---
Predecessors: [0x128]
Successors: []
---
0x12f INVALID
---
0x12f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x130
[0x130:0x17f]
---
Predecessors: [0x128]
Successors: [0x2aa]
---
0x130 JUMPDEST
0x131 PUSH2 0x180
0x134 PUSH1 0x4
0x136 DUP1
0x137 DUP1
0x138 CALLDATALOAD
0x139 SWAP1
0x13a PUSH1 0x20
0x13c ADD
0x13d SWAP1
0x13e DUP3
0x13f ADD
0x140 DUP1
0x141 CALLDATALOAD
0x142 SWAP1
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP1
0x147 DUP1
0x148 DUP1
0x149 PUSH1 0x1f
0x14b ADD
0x14c PUSH1 0x20
0x14e DUP1
0x14f SWAP2
0x150 DIV
0x151 MUL
0x152 PUSH1 0x20
0x154 ADD
0x155 PUSH1 0x40
0x157 MLOAD
0x158 SWAP1
0x159 DUP2
0x15a ADD
0x15b PUSH1 0x40
0x15d MSTORE
0x15e DUP1
0x15f SWAP4
0x160 SWAP3
0x161 SWAP2
0x162 SWAP1
0x163 DUP2
0x164 DUP2
0x165 MSTORE
0x166 PUSH1 0x20
0x168 ADD
0x169 DUP4
0x16a DUP4
0x16b DUP1
0x16c DUP3
0x16d DUP5
0x16e CALLDATACOPY
0x16f DUP3
0x170 ADD
0x171 SWAP2
0x172 POP
0x173 POP
0x174 POP
0x175 POP
0x176 POP
0x177 POP
0x178 SWAP2
0x179 SWAP1
0x17a POP
0x17b POP
0x17c PUSH2 0x2aa
0x17f JUMP
---
0x130: JUMPDEST 
0x131: V80 = 0x180
0x134: V81 = 0x4
0x138: V82 = CALLDATALOAD 0x4
0x13a: V83 = 0x20
0x13c: V84 = ADD 0x20 0x4
0x13f: V85 = ADD 0x4 V82
0x141: V86 = CALLDATALOAD V85
0x143: V87 = 0x20
0x145: V88 = ADD 0x20 V85
0x149: V89 = 0x1f
0x14b: V90 = ADD 0x1f V86
0x14c: V91 = 0x20
0x150: V92 = DIV V90 0x20
0x151: V93 = MUL V92 0x20
0x152: V94 = 0x20
0x154: V95 = ADD 0x20 V93
0x155: V96 = 0x40
0x157: V97 = M[0x40]
0x15a: V98 = ADD V97 V95
0x15b: V99 = 0x40
0x15d: M[0x40] = V98
0x165: M[V97] = V86
0x166: V100 = 0x20
0x168: V101 = ADD 0x20 V97
0x16e: CALLDATACOPY V101 V88 V86
0x170: V102 = ADD V101 V86
0x17c: V103 = 0x2aa
0x17f: JUMP 0x2aa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x180, V97]
Exit stack: [V10, 0x180, V97]

================================

Block 0x180
[0x180:0x199]
---
Predecessors: [0x338]
Successors: []
---
0x180 JUMPDEST
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 DUP3
0x186 ISZERO
0x187 ISZERO
0x188 ISZERO
0x189 ISZERO
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP2
0x190 POP
0x191 POP
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 SWAP2
0x197 SUB
0x198 SWAP1
0x199 RETURN
---
0x180: JUMPDEST 
0x181: V104 = 0x40
0x183: V105 = M[0x40]
0x186: V106 = ISZERO V253
0x187: V107 = ISZERO V106
0x188: V108 = ISZERO V107
0x189: V109 = ISZERO V108
0x18b: M[V105] = V109
0x18c: V110 = 0x20
0x18e: V111 = ADD 0x20 V105
0x192: V112 = 0x40
0x194: V113 = M[0x40]
0x197: V114 = SUB V111 V113
0x199: RETURN V113 V114
---
Entry stack: [V10, V253]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x55]
Successors: [0x1a1, 0x1a2]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a2
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V115 = CALLVALUE
0x19c: V116 = ISZERO V115
0x19d: V117 = 0x1a2
0x1a0: JUMPI 0x1a2 V116
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a1
[0x1a1:0x1a1]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 INVALID
---
0x1a1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a2
[0x1a2:0x1f1]
---
Predecessors: [0x19a]
Successors: [0x33d]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x1f2
0x1a6 PUSH1 0x4
0x1a8 DUP1
0x1a9 DUP1
0x1aa CALLDATALOAD
0x1ab SWAP1
0x1ac PUSH1 0x20
0x1ae ADD
0x1af SWAP1
0x1b0 DUP3
0x1b1 ADD
0x1b2 DUP1
0x1b3 CALLDATALOAD
0x1b4 SWAP1
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP1
0x1b9 DUP1
0x1ba DUP1
0x1bb PUSH1 0x1f
0x1bd ADD
0x1be PUSH1 0x20
0x1c0 DUP1
0x1c1 SWAP2
0x1c2 DIV
0x1c3 MUL
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca SWAP1
0x1cb DUP2
0x1cc ADD
0x1cd PUSH1 0x40
0x1cf MSTORE
0x1d0 DUP1
0x1d1 SWAP4
0x1d2 SWAP3
0x1d3 SWAP2
0x1d4 SWAP1
0x1d5 DUP2
0x1d6 DUP2
0x1d7 MSTORE
0x1d8 PUSH1 0x20
0x1da ADD
0x1db DUP4
0x1dc DUP4
0x1dd DUP1
0x1de DUP3
0x1df DUP5
0x1e0 CALLDATACOPY
0x1e1 DUP3
0x1e2 ADD
0x1e3 SWAP2
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea SWAP2
0x1eb SWAP1
0x1ec POP
0x1ed POP
0x1ee PUSH2 0x33d
0x1f1 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V118 = 0x1f2
0x1a6: V119 = 0x4
0x1aa: V120 = CALLDATALOAD 0x4
0x1ac: V121 = 0x20
0x1ae: V122 = ADD 0x20 0x4
0x1b1: V123 = ADD 0x4 V120
0x1b3: V124 = CALLDATALOAD V123
0x1b5: V125 = 0x20
0x1b7: V126 = ADD 0x20 V123
0x1bb: V127 = 0x1f
0x1bd: V128 = ADD 0x1f V124
0x1be: V129 = 0x20
0x1c2: V130 = DIV V128 0x20
0x1c3: V131 = MUL V130 0x20
0x1c4: V132 = 0x20
0x1c6: V133 = ADD 0x20 V131
0x1c7: V134 = 0x40
0x1c9: V135 = M[0x40]
0x1cc: V136 = ADD V135 V133
0x1cd: V137 = 0x40
0x1cf: M[0x40] = V136
0x1d7: M[V135] = V124
0x1d8: V138 = 0x20
0x1da: V139 = ADD 0x20 V135
0x1e0: CALLDATACOPY V139 V126 V124
0x1e2: V140 = ADD V139 V124
0x1ee: V141 = 0x33d
0x1f1: JUMP 0x33d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f2, V135]
Exit stack: [V10, 0x1f2, V135]

================================

Block 0x1f2
[0x1f2:0x1f3]
---
Predecessors: [0x4b3]
Successors: []
---
0x1f2 JUMPDEST
0x1f3 STOP
---
0x1f2: JUMPDEST 
0x1f3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f4
[0x1f4:0x1fa]
---
Predecessors: [0x60]
Successors: [0x1fb, 0x1fc]
---
0x1f4 JUMPDEST
0x1f5 CALLVALUE
0x1f6 ISZERO
0x1f7 PUSH2 0x1fc
0x1fa JUMPI
---
0x1f4: JUMPDEST 
0x1f5: V142 = CALLVALUE
0x1f6: V143 = ISZERO V142
0x1f7: V144 = 0x1fc
0x1fa: JUMPI 0x1fc V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fb
[0x1fb:0x1fb]
---
Predecessors: [0x1f4]
Successors: []
---
0x1fb INVALID
---
0x1fb: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fc
[0x1fc:0x215]
---
Predecessors: [0x1f4]
Successors: [0x4b6]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x216
0x200 PUSH1 0x4
0x202 DUP1
0x203 DUP1
0x204 CALLDATALOAD
0x205 PUSH1 0x0
0x207 NOT
0x208 AND
0x209 SWAP1
0x20a PUSH1 0x20
0x20c ADD
0x20d SWAP1
0x20e SWAP2
0x20f SWAP1
0x210 POP
0x211 POP
0x212 PUSH2 0x4b6
0x215 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V145 = 0x216
0x200: V146 = 0x4
0x204: V147 = CALLDATALOAD 0x4
0x205: V148 = 0x0
0x207: V149 = NOT 0x0
0x208: V150 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V147
0x20a: V151 = 0x20
0x20c: V152 = ADD 0x20 0x4
0x212: V153 = 0x4b6
0x215: JUMP 0x4b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x216, V150]
Exit stack: [V10, 0x216, V150]

================================

Block 0x216
[0x216:0x217]
---
Predecessors: [0x549]
Successors: []
---
0x216 JUMPDEST
0x217 STOP
---
0x216: JUMPDEST 
0x217: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x218
[0x218:0x21e]
---
Predecessors: [0x6b]
Successors: [0x21f, 0x220]
---
0x218 JUMPDEST
0x219 CALLVALUE
0x21a ISZERO
0x21b PUSH2 0x220
0x21e JUMPI
---
0x218: JUMPDEST 
0x219: V154 = CALLVALUE
0x21a: V155 = ISZERO V154
0x21b: V156 = 0x220
0x21e: JUMPI 0x220 V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21f
[0x21f:0x21f]
---
Predecessors: [0x218]
Successors: []
---
0x21f INVALID
---
0x21f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x220
[0x220:0x227]
---
Predecessors: [0x218]
Successors: [0x54c]
---
0x220 JUMPDEST
0x221 PUSH2 0x228
0x224 PUSH2 0x54c
0x227 JUMP
---
0x220: JUMPDEST 
0x221: V157 = 0x228
0x224: V158 = 0x54c
0x227: JUMP 0x54c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V10, 0x228]

================================

Block 0x228
[0x228:0x23d]
---
Predecessors: [0x54c]
Successors: []
---
0x228 JUMPDEST
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d DUP3
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 SWAP2
0x234 POP
0x235 POP
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a SWAP2
0x23b SUB
0x23c SWAP1
0x23d RETURN
---
0x228: JUMPDEST 
0x229: V159 = 0x40
0x22b: V160 = M[0x40]
0x22f: M[V160] = V441
0x230: V161 = 0x20
0x232: V162 = ADD 0x20 V160
0x236: V163 = 0x40
0x238: V164 = M[0x40]
0x23b: V165 = SUB V162 V164
0x23d: RETURN V164 V165
---
Entry stack: [V10, 0x228, V441]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x228]

================================

Block 0x23e
[0x23e:0x244]
---
Predecessors: [0x76]
Successors: [0x245, 0x246]
---
0x23e JUMPDEST
0x23f CALLVALUE
0x240 ISZERO
0x241 PUSH2 0x246
0x244 JUMPI
---
0x23e: JUMPDEST 
0x23f: V166 = CALLVALUE
0x240: V167 = ISZERO V166
0x241: V168 = 0x246
0x244: JUMPI 0x246 V167
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x245
[0x245:0x245]
---
Predecessors: [0x23e]
Successors: []
---
0x245 INVALID
---
0x245: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x24d]
---
Predecessors: [0x23e]
Successors: [0x552]
---
0x246 JUMPDEST
0x247 PUSH2 0x24e
0x24a PUSH2 0x552
0x24d JUMP
---
0x246: JUMPDEST 
0x247: V169 = 0x24e
0x24a: V170 = 0x552
0x24d: JUMP 0x552
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x24e]
Exit stack: [V10, 0x24e]

================================

Block 0x24e
[0x24e:0x263]
---
Predecessors: [0x552]
Successors: []
---
0x24e JUMPDEST
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 DUP3
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP2
0x25a POP
0x25b POP
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 SWAP2
0x261 SUB
0x262 SWAP1
0x263 RETURN
---
0x24e: JUMPDEST 
0x24f: V171 = 0x40
0x251: V172 = M[0x40]
0x255: M[V172] = V443
0x256: V173 = 0x20
0x258: V174 = ADD 0x20 V172
0x25c: V175 = 0x40
0x25e: V176 = M[0x40]
0x261: V177 = SUB V174 V176
0x263: RETURN V176 V177
---
Entry stack: [V10, 0x24e, V443]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x24e]

================================

Block 0x264
[0x264:0x283]
---
Predecessors: [0xa2]
Successors: [0xbc]
---
0x264 JUMPDEST
0x265 PUSH1 0x0
0x267 PUSH1 0x20
0x269 MSTORE
0x26a DUP1
0x26b PUSH1 0x0
0x26d MSTORE
0x26e PUSH1 0x40
0x270 PUSH1 0x0
0x272 SHA3
0x273 PUSH1 0x0
0x275 SWAP2
0x276 POP
0x277 SLOAD
0x278 SWAP1
0x279 PUSH2 0x100
0x27c EXP
0x27d SWAP1
0x27e DIV
0x27f PUSH1 0xff
0x281 AND
0x282 DUP2
0x283 JUMP
---
0x264: JUMPDEST 
0x265: V178 = 0x0
0x267: V179 = 0x20
0x269: M[0x20] = 0x0
0x26b: V180 = 0x0
0x26d: M[0x0] = V46
0x26e: V181 = 0x40
0x270: V182 = 0x0
0x272: V183 = SHA3 0x0 0x40
0x273: V184 = 0x0
0x277: V185 = S[V183]
0x279: V186 = 0x100
0x27c: V187 = EXP 0x100 0x0
0x27e: V188 = DIV V185 0x1
0x27f: V189 = 0xff
0x281: V190 = AND 0xff V188
0x283: JUMP 0xbc
---
Entry stack: [V10, 0xbc, V46]
Stack pops: 2
Stack additions: [S1, V190]
Exit stack: [V10, 0xbc, V190]

================================

Block 0x284
[0x284:0x2a9]
---
Predecessors: [0xde]
Successors: [0xe6]
---
0x284 JUMPDEST
0x285 PUSH1 0x1
0x287 PUSH1 0x0
0x289 SWAP1
0x28a SLOAD
0x28b SWAP1
0x28c PUSH2 0x100
0x28f EXP
0x290 SWAP1
0x291 DIV
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 DUP2
0x2a9 JUMP
---
0x284: JUMPDEST 
0x285: V191 = 0x1
0x287: V192 = 0x0
0x28a: V193 = S[0x1]
0x28c: V194 = 0x100
0x28f: V195 = EXP 0x100 0x0
0x291: V196 = DIV V193 0x1
0x292: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x2a9: JUMP 0xe6
---
Entry stack: [V10, 0xe6]
Stack pops: 1
Stack additions: [S0, V198]
Exit stack: [V10, 0xe6, V198]

================================

Block 0x2aa
[0x2aa:0x2c0]
---
Predecessors: [0x130]
Successors: [0x2c1]
---
0x2aa JUMPDEST
0x2ab PUSH1 0x0
0x2ad PUSH1 0x0
0x2af PUSH1 0x0
0x2b1 DUP4
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 DUP3
0x2b7 DUP1
0x2b8 MLOAD
0x2b9 SWAP1
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd SWAP1
0x2be DUP1
0x2bf DUP4
0x2c0 DUP4
---
0x2aa: JUMPDEST 
0x2ab: V199 = 0x0
0x2ad: V200 = 0x0
0x2af: V201 = 0x0
0x2b2: V202 = 0x40
0x2b4: V203 = M[0x40]
0x2b8: V204 = M[V97]
0x2ba: V205 = 0x20
0x2bc: V206 = ADD 0x20 V97
---
Entry stack: [V10, 0x180, V97]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, S0, V203, V203, V206, V204, V204, V203, V206]
Exit stack: [V10, 0x180, V97, 0x0, 0x0, 0x0, V97, V203, V203, V206, V204, V204, V203, V206]

================================

Block 0x2c1
[0x2c1:0x2c9]
---
Predecessors: [0x2aa, 0x2ca]
Successors: [0x2ca, 0x2e4]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x20
0x2c4 DUP4
0x2c5 LT
0x2c6 PUSH2 0x2e4
0x2c9 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V207 = 0x20
0x2c5: V208 = LT S2 0x20
0x2c6: V209 = 0x2e4
0x2c9: JUMPI 0x2e4 V208
---
Entry stack: [V10, 0x180, V97, 0x0, 0x0, 0x0, V97, V203, V203, V206, V204, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x180, V97, 0x0, 0x0, 0x0, V97, V203, V203, V206, V204, S2, S1, S0]

================================

Block 0x2ca
[0x2ca:0x2e3]
---
Predecessors: [0x2c1]
Successors: [0x2c1]
---
0x2ca DUP1
0x2cb MLOAD
0x2cc DUP3
0x2cd MSTORE
0x2ce PUSH1 0x20
0x2d0 DUP3
0x2d1 ADD
0x2d2 SWAP2
0x2d3 POP
0x2d4 PUSH1 0x20
0x2d6 DUP2
0x2d7 ADD
0x2d8 SWAP1
0x2d9 POP
0x2da PUSH1 0x20
0x2dc DUP4
0x2dd SUB
0x2de SWAP3
0x2df POP
0x2e0 PUSH2 0x2c1
0x2e3 JUMP
---
0x2cb: V210 = M[S0]
0x2cd: M[S1] = V210
0x2ce: V211 = 0x20
0x2d1: V212 = ADD S1 0x20
0x2d4: V213 = 0x20
0x2d7: V214 = ADD S0 0x20
0x2da: V215 = 0x20
0x2dd: V216 = SUB S2 0x20
0x2e0: V217 = 0x2c1
0x2e3: JUMP 0x2c1
---
Entry stack: [V10, 0x180, V97, 0x0, 0x0, 0x0, V97, V203, V203, V206, V204, S2, S1, S0]
Stack pops: 3
Stack additions: [V216, V212, V214]
Exit stack: [V10, 0x180, V97, 0x0, 0x0, 0x0, V97, V203, V203, V206, V204, V216, V212, V214]

================================

Block 0x2e4
[0x2e4:0x337]
---
Predecessors: [0x2c1]
Successors: [0x338]
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x1
0x2e7 DUP4
0x2e8 PUSH1 0x20
0x2ea SUB
0x2eb PUSH2 0x100
0x2ee EXP
0x2ef SUB
0x2f0 DUP1
0x2f1 NOT
0x2f2 DUP3
0x2f3 MLOAD
0x2f4 AND
0x2f5 DUP2
0x2f6 DUP5
0x2f7 MLOAD
0x2f8 AND
0x2f9 DUP1
0x2fa DUP3
0x2fb OR
0x2fc DUP6
0x2fd MSTORE
0x2fe POP
0x2ff POP
0x300 POP
0x301 POP
0x302 POP
0x303 POP
0x304 SWAP1
0x305 POP
0x306 ADD
0x307 SWAP2
0x308 POP
0x309 POP
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP1
0x30e SWAP2
0x30f SUB
0x310 SWAP1
0x311 SHA3
0x312 PUSH1 0x0
0x314 NOT
0x315 AND
0x316 PUSH1 0x0
0x318 NOT
0x319 AND
0x31a DUP2
0x31b MSTORE
0x31c PUSH1 0x20
0x31e ADD
0x31f SWAP1
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 PUSH1 0x0
0x327 SHA3
0x328 PUSH1 0x0
0x32a SWAP1
0x32b SLOAD
0x32c SWAP1
0x32d PUSH2 0x100
0x330 EXP
0x331 SWAP1
0x332 DIV
0x333 PUSH1 0xff
0x335 AND
0x336 SWAP1
0x337 POP
---
0x2e4: JUMPDEST 
0x2e5: V218 = 0x1
0x2e8: V219 = 0x20
0x2ea: V220 = SUB 0x20 S2
0x2eb: V221 = 0x100
0x2ee: V222 = EXP 0x100 V220
0x2ef: V223 = SUB V222 0x1
0x2f1: V224 = NOT V223
0x2f3: V225 = M[S0]
0x2f4: V226 = AND V225 V224
0x2f7: V227 = M[S1]
0x2f8: V228 = AND V227 V223
0x2fb: V229 = OR V226 V228
0x2fd: M[S1] = V229
0x306: V230 = ADD V204 V203
0x30a: V231 = 0x40
0x30c: V232 = M[0x40]
0x30f: V233 = SUB V230 V232
0x311: V234 = SHA3 V232 V233
0x312: V235 = 0x0
0x314: V236 = NOT 0x0
0x315: V237 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V234
0x316: V238 = 0x0
0x318: V239 = NOT 0x0
0x319: V240 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V237
0x31b: M[0x0] = V240
0x31c: V241 = 0x20
0x31e: V242 = ADD 0x20 0x0
0x321: M[0x20] = 0x0
0x322: V243 = 0x20
0x324: V244 = ADD 0x20 0x20
0x325: V245 = 0x0
0x327: V246 = SHA3 0x0 0x40
0x328: V247 = 0x0
0x32b: V248 = S[V246]
0x32d: V249 = 0x100
0x330: V250 = EXP 0x100 0x0
0x332: V251 = DIV V248 0x1
0x333: V252 = 0xff
0x335: V253 = AND 0xff V251
---
Entry stack: [V10, 0x180, V97, 0x0, 0x0, 0x0, V97, V203, V203, V206, V204, S2, S1, S0]
Stack pops: 11
Stack additions: [V253]
Exit stack: [V10, 0x180, V97, V253]

================================

Block 0x338
[0x338:0x33c]
---
Predecessors: [0x2e4]
Successors: [0x180]
---
0x338 JUMPDEST
0x339 SWAP2
0x33a SWAP1
0x33b POP
0x33c JUMP
---
0x338: JUMPDEST 
0x33c: JUMP 0x180
---
Entry stack: [V10, 0x180, V97, V253]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V253]

================================

Block 0x33d
[0x33d:0x351]
---
Predecessors: [0x1a2]
Successors: [0x352]
---
0x33d JUMPDEST
0x33e PUSH1 0x0
0x340 PUSH1 0x0
0x342 DUP3
0x343 PUSH1 0x40
0x345 MLOAD
0x346 DUP1
0x347 DUP3
0x348 DUP1
0x349 MLOAD
0x34a SWAP1
0x34b PUSH1 0x20
0x34d ADD
0x34e SWAP1
0x34f DUP1
0x350 DUP4
0x351 DUP4
---
0x33d: JUMPDEST 
0x33e: V254 = 0x0
0x340: V255 = 0x0
0x343: V256 = 0x40
0x345: V257 = M[0x40]
0x349: V258 = M[V135]
0x34b: V259 = 0x20
0x34d: V260 = ADD 0x20 V135
---
Entry stack: [V10, 0x1f2, V135]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, S0, V257, V257, V260, V258, V258, V257, V260]
Exit stack: [V10, 0x1f2, V135, 0x0, 0x0, V135, V257, V257, V260, V258, V258, V257, V260]

================================

Block 0x352
[0x352:0x35a]
---
Predecessors: [0x33d, 0x35b]
Successors: [0x35b, 0x375]
---
0x352 JUMPDEST
0x353 PUSH1 0x20
0x355 DUP4
0x356 LT
0x357 PUSH2 0x375
0x35a JUMPI
---
0x352: JUMPDEST 
0x353: V261 = 0x20
0x356: V262 = LT S2 0x20
0x357: V263 = 0x375
0x35a: JUMPI 0x375 V262
---
Entry stack: [V10, 0x1f2, V135, 0x0, 0x0, V135, V257, V257, V260, V258, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1f2, V135, 0x0, 0x0, V135, V257, V257, V260, V258, S2, S1, S0]

================================

Block 0x35b
[0x35b:0x374]
---
Predecessors: [0x352]
Successors: [0x352]
---
0x35b DUP1
0x35c MLOAD
0x35d DUP3
0x35e MSTORE
0x35f PUSH1 0x20
0x361 DUP3
0x362 ADD
0x363 SWAP2
0x364 POP
0x365 PUSH1 0x20
0x367 DUP2
0x368 ADD
0x369 SWAP1
0x36a POP
0x36b PUSH1 0x20
0x36d DUP4
0x36e SUB
0x36f SWAP3
0x370 POP
0x371 PUSH2 0x352
0x374 JUMP
---
0x35c: V264 = M[S0]
0x35e: M[S1] = V264
0x35f: V265 = 0x20
0x362: V266 = ADD S1 0x20
0x365: V267 = 0x20
0x368: V268 = ADD S0 0x20
0x36b: V269 = 0x20
0x36e: V270 = SUB S2 0x20
0x371: V271 = 0x352
0x374: JUMP 0x352
---
Entry stack: [V10, 0x1f2, V135, 0x0, 0x0, V135, V257, V257, V260, V258, S2, S1, S0]
Stack pops: 3
Stack additions: [V270, V266, V268]
Exit stack: [V10, 0x1f2, V135, 0x0, 0x0, V135, V257, V257, V260, V258, V270, V266, V268]

================================

Block 0x375
[0x375:0x3cb]
---
Predecessors: [0x352]
Successors: [0x3cc, 0x418]
---
0x375 JUMPDEST
0x376 PUSH1 0x1
0x378 DUP4
0x379 PUSH1 0x20
0x37b SUB
0x37c PUSH2 0x100
0x37f EXP
0x380 SUB
0x381 DUP1
0x382 NOT
0x383 DUP3
0x384 MLOAD
0x385 AND
0x386 DUP2
0x387 DUP5
0x388 MLOAD
0x389 AND
0x38a DUP1
0x38b DUP3
0x38c OR
0x38d DUP6
0x38e MSTORE
0x38f POP
0x390 POP
0x391 POP
0x392 POP
0x393 POP
0x394 POP
0x395 SWAP1
0x396 POP
0x397 ADD
0x398 SWAP2
0x399 POP
0x39a POP
0x39b PUSH1 0x40
0x39d MLOAD
0x39e DUP1
0x39f SWAP2
0x3a0 SUB
0x3a1 SWAP1
0x3a2 SHA3
0x3a3 PUSH1 0x0
0x3a5 NOT
0x3a6 AND
0x3a7 PUSH1 0x0
0x3a9 NOT
0x3aa AND
0x3ab DUP2
0x3ac MSTORE
0x3ad PUSH1 0x20
0x3af ADD
0x3b0 SWAP1
0x3b1 DUP2
0x3b2 MSTORE
0x3b3 PUSH1 0x20
0x3b5 ADD
0x3b6 PUSH1 0x0
0x3b8 SHA3
0x3b9 PUSH1 0x0
0x3bb SWAP1
0x3bc SLOAD
0x3bd SWAP1
0x3be PUSH2 0x100
0x3c1 EXP
0x3c2 SWAP1
0x3c3 DIV
0x3c4 PUSH1 0xff
0x3c6 AND
0x3c7 ISZERO
0x3c8 PUSH2 0x418
0x3cb JUMPI
---
0x375: JUMPDEST 
0x376: V272 = 0x1
0x379: V273 = 0x20
0x37b: V274 = SUB 0x20 S2
0x37c: V275 = 0x100
0x37f: V276 = EXP 0x100 V274
0x380: V277 = SUB V276 0x1
0x382: V278 = NOT V277
0x384: V279 = M[S0]
0x385: V280 = AND V279 V278
0x388: V281 = M[S1]
0x389: V282 = AND V281 V277
0x38c: V283 = OR V280 V282
0x38e: M[S1] = V283
0x397: V284 = ADD V258 V257
0x39b: V285 = 0x40
0x39d: V286 = M[0x40]
0x3a0: V287 = SUB V284 V286
0x3a2: V288 = SHA3 V286 V287
0x3a3: V289 = 0x0
0x3a5: V290 = NOT 0x0
0x3a6: V291 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V288
0x3a7: V292 = 0x0
0x3a9: V293 = NOT 0x0
0x3aa: V294 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V291
0x3ac: M[0x0] = V294
0x3ad: V295 = 0x20
0x3af: V296 = ADD 0x20 0x0
0x3b2: M[0x20] = 0x0
0x3b3: V297 = 0x20
0x3b5: V298 = ADD 0x20 0x20
0x3b6: V299 = 0x0
0x3b8: V300 = SHA3 0x0 0x40
0x3b9: V301 = 0x0
0x3bc: V302 = S[V300]
0x3be: V303 = 0x100
0x3c1: V304 = EXP 0x100 0x0
0x3c3: V305 = DIV V302 0x1
0x3c4: V306 = 0xff
0x3c6: V307 = AND 0xff V305
0x3c7: V308 = ISZERO V307
0x3c8: V309 = 0x418
0x3cb: JUMPI 0x418 V308
---
Entry stack: [V10, 0x1f2, V135, 0x0, 0x0, V135, V257, V257, V260, V258, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V10, 0x1f2, V135]

================================

Block 0x3cc
[0x3cc:0x3f2]
---
Predecessors: [0x375]
Successors: [0x3f3, 0x3f4]
---
0x3cc CALLER
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH2 0x8fc
0x3e6 PUSH1 0x3
0x3e8 SLOAD
0x3e9 PUSH1 0x2
0x3eb SLOAD
0x3ec DUP2
0x3ed ISZERO
0x3ee ISZERO
0x3ef PUSH2 0x3f4
0x3f2 JUMPI
---
0x3cc: V310 = CALLER
0x3cd: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x3e3: V313 = 0x8fc
0x3e6: V314 = 0x3
0x3e8: V315 = S[0x3]
0x3e9: V316 = 0x2
0x3eb: V317 = S[0x2]
0x3ed: V318 = ISZERO V315
0x3ee: V319 = ISZERO V318
0x3ef: V320 = 0x3f4
0x3f2: JUMPI 0x3f4 V319
---
Entry stack: [V10, 0x1f2, V135]
Stack pops: 0
Stack additions: [V312, 0x8fc, V315, V317]
Exit stack: [V10, 0x1f2, V135, V312, 0x8fc, V315, V317]

================================

Block 0x3f3
[0x3f3:0x3f3]
---
Predecessors: [0x3cc]
Successors: []
---
0x3f3 INVALID
---
0x3f3: INVALID 
---
Entry stack: [V10, 0x1f2, V135, V312, 0x8fc, V315, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f2, V135, V312, 0x8fc, V315, V317]

================================

Block 0x3f4
[0x3f4:0x417]
---
Predecessors: [0x3cc]
Successors: [0x41e]
---
0x3f4 JUMPDEST
0x3f5 DIV
0x3f6 SWAP1
0x3f7 DUP2
0x3f8 ISZERO
0x3f9 MUL
0x3fa SWAP1
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff SWAP1
0x400 POP
0x401 PUSH1 0x0
0x403 PUSH1 0x40
0x405 MLOAD
0x406 DUP1
0x407 DUP4
0x408 SUB
0x409 DUP2
0x40a DUP6
0x40b DUP9
0x40c DUP9
0x40d CALL
0x40e SWAP4
0x40f POP
0x410 POP
0x411 POP
0x412 POP
0x413 POP
0x414 PUSH2 0x41e
0x417 JUMP
---
0x3f4: JUMPDEST 
0x3f5: V321 = DIV V317 V315
0x3f8: V322 = ISZERO V321
0x3f9: V323 = MUL V322 0x8fc
0x3fb: V324 = 0x40
0x3fd: V325 = M[0x40]
0x401: V326 = 0x0
0x403: V327 = 0x40
0x405: V328 = M[0x40]
0x408: V329 = SUB V325 V328
0x40d: V330 = CALL V323 V312 V321 V328 V329 V328 0x0
0x414: V331 = 0x41e
0x417: JUMP 0x41e
---
Entry stack: [V10, 0x1f2, V135, V312, 0x8fc, V315, V317]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x1f2, V135]

================================

Block 0x418
[0x418:0x41d]
---
Predecessors: [0x375]
Successors: []
---
0x418 JUMPDEST
0x419 PUSH1 0x0
0x41b PUSH1 0x0
0x41d REVERT
---
0x418: JUMPDEST 
0x419: V332 = 0x0
0x41b: V333 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1f2, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f2, V135]

================================

Block 0x41e
[0x41e:0x434]
---
Predecessors: [0x3f4]
Successors: [0x435]
---
0x41e JUMPDEST
0x41f PUSH1 0x0
0x421 PUSH1 0x0
0x423 PUSH1 0x0
0x425 DUP4
0x426 PUSH1 0x40
0x428 MLOAD
0x429 DUP1
0x42a DUP3
0x42b DUP1
0x42c MLOAD
0x42d SWAP1
0x42e PUSH1 0x20
0x430 ADD
0x431 SWAP1
0x432 DUP1
0x433 DUP4
0x434 DUP4
---
0x41e: JUMPDEST 
0x41f: V334 = 0x0
0x421: V335 = 0x0
0x423: V336 = 0x0
0x426: V337 = 0x40
0x428: V338 = M[0x40]
0x42c: V339 = M[V135]
0x42e: V340 = 0x20
0x430: V341 = ADD 0x20 V135
---
Entry stack: [V10, 0x1f2, V135]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, S0, V338, V338, V341, V339, V339, V338, V341]
Exit stack: [V10, 0x1f2, V135, 0x0, 0x0, 0x0, V135, V338, V338, V341, V339, V339, V338, V341]

================================

Block 0x435
[0x435:0x43d]
---
Predecessors: [0x41e, 0x43e]
Successors: [0x43e, 0x458]
---
0x435 JUMPDEST
0x436 PUSH1 0x20
0x438 DUP4
0x439 LT
0x43a PUSH2 0x458
0x43d JUMPI
---
0x435: JUMPDEST 
0x436: V342 = 0x20
0x439: V343 = LT S2 0x20
0x43a: V344 = 0x458
0x43d: JUMPI 0x458 V343
---
Entry stack: [V10, 0x1f2, V135, 0x0, 0x0, 0x0, V135, V338, V338, V341, V339, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1f2, V135, 0x0, 0x0, 0x0, V135, V338, V338, V341, V339, S2, S1, S0]

================================

Block 0x43e
[0x43e:0x457]
---
Predecessors: [0x435]
Successors: [0x435]
---
0x43e DUP1
0x43f MLOAD
0x440 DUP3
0x441 MSTORE
0x442 PUSH1 0x20
0x444 DUP3
0x445 ADD
0x446 SWAP2
0x447 POP
0x448 PUSH1 0x20
0x44a DUP2
0x44b ADD
0x44c SWAP1
0x44d POP
0x44e PUSH1 0x20
0x450 DUP4
0x451 SUB
0x452 SWAP3
0x453 POP
0x454 PUSH2 0x435
0x457 JUMP
---
0x43f: V345 = M[S0]
0x441: M[S1] = V345
0x442: V346 = 0x20
0x445: V347 = ADD S1 0x20
0x448: V348 = 0x20
0x44b: V349 = ADD S0 0x20
0x44e: V350 = 0x20
0x451: V351 = SUB S2 0x20
0x454: V352 = 0x435
0x457: JUMP 0x435
---
Entry stack: [V10, 0x1f2, V135, 0x0, 0x0, 0x0, V135, V338, V338, V341, V339, S2, S1, S0]
Stack pops: 3
Stack additions: [V351, V347, V349]
Exit stack: [V10, 0x1f2, V135, 0x0, 0x0, 0x0, V135, V338, V338, V341, V339, V351, V347, V349]

================================

Block 0x458
[0x458:0x4b2]
---
Predecessors: [0x435]
Successors: [0x4b3]
---
0x458 JUMPDEST
0x459 PUSH1 0x1
0x45b DUP4
0x45c PUSH1 0x20
0x45e SUB
0x45f PUSH2 0x100
0x462 EXP
0x463 SUB
0x464 DUP1
0x465 NOT
0x466 DUP3
0x467 MLOAD
0x468 AND
0x469 DUP2
0x46a DUP5
0x46b MLOAD
0x46c AND
0x46d DUP1
0x46e DUP3
0x46f OR
0x470 DUP6
0x471 MSTORE
0x472 POP
0x473 POP
0x474 POP
0x475 POP
0x476 POP
0x477 POP
0x478 SWAP1
0x479 POP
0x47a ADD
0x47b SWAP2
0x47c POP
0x47d POP
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 SWAP2
0x483 SUB
0x484 SWAP1
0x485 SHA3
0x486 PUSH1 0x0
0x488 NOT
0x489 AND
0x48a PUSH1 0x0
0x48c NOT
0x48d AND
0x48e DUP2
0x48f MSTORE
0x490 PUSH1 0x20
0x492 ADD
0x493 SWAP1
0x494 DUP2
0x495 MSTORE
0x496 PUSH1 0x20
0x498 ADD
0x499 PUSH1 0x0
0x49b SHA3
0x49c PUSH1 0x0
0x49e PUSH2 0x100
0x4a1 EXP
0x4a2 DUP2
0x4a3 SLOAD
0x4a4 DUP2
0x4a5 PUSH1 0xff
0x4a7 MUL
0x4a8 NOT
0x4a9 AND
0x4aa SWAP1
0x4ab DUP4
0x4ac ISZERO
0x4ad ISZERO
0x4ae MUL
0x4af OR
0x4b0 SWAP1
0x4b1 SSTORE
0x4b2 POP
---
0x458: JUMPDEST 
0x459: V353 = 0x1
0x45c: V354 = 0x20
0x45e: V355 = SUB 0x20 S2
0x45f: V356 = 0x100
0x462: V357 = EXP 0x100 V355
0x463: V358 = SUB V357 0x1
0x465: V359 = NOT V358
0x467: V360 = M[S0]
0x468: V361 = AND V360 V359
0x46b: V362 = M[S1]
0x46c: V363 = AND V362 V358
0x46f: V364 = OR V361 V363
0x471: M[S1] = V364
0x47a: V365 = ADD V339 V338
0x47e: V366 = 0x40
0x480: V367 = M[0x40]
0x483: V368 = SUB V365 V367
0x485: V369 = SHA3 V367 V368
0x486: V370 = 0x0
0x488: V371 = NOT 0x0
0x489: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V369
0x48a: V373 = 0x0
0x48c: V374 = NOT 0x0
0x48d: V375 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V372
0x48f: M[0x0] = V375
0x490: V376 = 0x20
0x492: V377 = ADD 0x20 0x0
0x495: M[0x20] = 0x0
0x496: V378 = 0x20
0x498: V379 = ADD 0x20 0x20
0x499: V380 = 0x0
0x49b: V381 = SHA3 0x0 0x40
0x49c: V382 = 0x0
0x49e: V383 = 0x100
0x4a1: V384 = EXP 0x100 0x0
0x4a3: V385 = S[V381]
0x4a5: V386 = 0xff
0x4a7: V387 = MUL 0xff 0x1
0x4a8: V388 = NOT 0xff
0x4a9: V389 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V385
0x4ac: V390 = ISZERO 0x0
0x4ad: V391 = ISZERO 0x1
0x4ae: V392 = MUL 0x0 0x1
0x4af: V393 = OR 0x0 V389
0x4b1: S[V381] = V393
---
Entry stack: [V10, 0x1f2, V135, 0x0, 0x0, 0x0, V135, V338, V338, V341, V339, S2, S1, S0]
Stack pops: 11
Stack additions: []
Exit stack: [V10, 0x1f2, V135]

================================

Block 0x4b3
[0x4b3:0x4b5]
---
Predecessors: [0x458]
Successors: [0x1f2]
---
0x4b3 JUMPDEST
0x4b4 POP
0x4b5 JUMP
---
0x4b3: JUMPDEST 
0x4b5: JUMP 0x1f2
---
Entry stack: [V10, 0x1f2, V135]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b6
[0x4b6:0x50d]
---
Predecessors: [0x1fc]
Successors: [0x50e, 0x513]
---
0x4b6 JUMPDEST
0x4b7 PUSH1 0x1
0x4b9 PUSH1 0x0
0x4bb SWAP1
0x4bc SLOAD
0x4bd SWAP1
0x4be PUSH2 0x100
0x4c1 EXP
0x4c2 SWAP1
0x4c3 DIV
0x4c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d9 AND
0x4da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ef AND
0x4f0 CALLER
0x4f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x506 AND
0x507 EQ
0x508 ISZERO
0x509 ISZERO
0x50a PUSH2 0x513
0x50d JUMPI
---
0x4b6: JUMPDEST 
0x4b7: V394 = 0x1
0x4b9: V395 = 0x0
0x4bc: V396 = S[0x1]
0x4be: V397 = 0x100
0x4c1: V398 = EXP 0x100 0x0
0x4c3: V399 = DIV V396 0x1
0x4c4: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d9: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x4da: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x4f0: V404 = CALLER
0x4f1: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x506: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x507: V407 = EQ V406 V403
0x508: V408 = ISZERO V407
0x509: V409 = ISZERO V408
0x50a: V410 = 0x513
0x50d: JUMPI 0x513 V409
---
Entry stack: [V10, 0x216, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x216, V150]

================================

Block 0x50e
[0x50e:0x512]
---
Predecessors: [0x4b6]
Successors: []
---
0x50e PUSH1 0x0
0x510 PUSH1 0x0
0x512 REVERT
---
0x50e: V411 = 0x0
0x510: V412 = 0x0
0x512: REVERT 0x0 0x0
---
Entry stack: [V10, 0x216, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x216, V150]

================================

Block 0x513
[0x513:0x547]
---
Predecessors: [0x4b6]
Successors: [0x548]
---
0x513 JUMPDEST
0x514 PUSH1 0x1
0x516 PUSH1 0x0
0x518 PUSH1 0x0
0x51a DUP4
0x51b PUSH1 0x0
0x51d NOT
0x51e AND
0x51f PUSH1 0x0
0x521 NOT
0x522 AND
0x523 DUP2
0x524 MSTORE
0x525 PUSH1 0x20
0x527 ADD
0x528 SWAP1
0x529 DUP2
0x52a MSTORE
0x52b PUSH1 0x20
0x52d ADD
0x52e PUSH1 0x0
0x530 SHA3
0x531 PUSH1 0x0
0x533 PUSH2 0x100
0x536 EXP
0x537 DUP2
0x538 SLOAD
0x539 DUP2
0x53a PUSH1 0xff
0x53c MUL
0x53d NOT
0x53e AND
0x53f SWAP1
0x540 DUP4
0x541 ISZERO
0x542 ISZERO
0x543 MUL
0x544 OR
0x545 SWAP1
0x546 SSTORE
0x547 POP
---
0x513: JUMPDEST 
0x514: V413 = 0x1
0x516: V414 = 0x0
0x518: V415 = 0x0
0x51b: V416 = 0x0
0x51d: V417 = NOT 0x0
0x51e: V418 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V150
0x51f: V419 = 0x0
0x521: V420 = NOT 0x0
0x522: V421 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V418
0x524: M[0x0] = V421
0x525: V422 = 0x20
0x527: V423 = ADD 0x20 0x0
0x52a: M[0x20] = 0x0
0x52b: V424 = 0x20
0x52d: V425 = ADD 0x20 0x20
0x52e: V426 = 0x0
0x530: V427 = SHA3 0x0 0x40
0x531: V428 = 0x0
0x533: V429 = 0x100
0x536: V430 = EXP 0x100 0x0
0x538: V431 = S[V427]
0x53a: V432 = 0xff
0x53c: V433 = MUL 0xff 0x1
0x53d: V434 = NOT 0xff
0x53e: V435 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V431
0x541: V436 = ISZERO 0x1
0x542: V437 = ISZERO 0x0
0x543: V438 = MUL 0x1 0x1
0x544: V439 = OR 0x1 V435
0x546: S[V427] = V439
---
Entry stack: [V10, 0x216, V150]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x216, V150]

================================

Block 0x548
[0x548:0x548]
---
Predecessors: [0x513]
Successors: [0x549]
---
0x548 JUMPDEST
---
0x548: JUMPDEST 
---
Entry stack: [V10, 0x216, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x216, V150]

================================

Block 0x549
[0x549:0x54b]
---
Predecessors: [0x548]
Successors: [0x216]
---
0x549 JUMPDEST
0x54a POP
0x54b JUMP
---
0x549: JUMPDEST 
0x54b: JUMP 0x216
---
Entry stack: [V10, 0x216, V150]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x54c
[0x54c:0x551]
---
Predecessors: [0x220]
Successors: [0x228]
---
0x54c JUMPDEST
0x54d PUSH1 0x2
0x54f SLOAD
0x550 DUP2
0x551 JUMP
---
0x54c: JUMPDEST 
0x54d: V440 = 0x2
0x54f: V441 = S[0x2]
0x551: JUMP 0x228
---
Entry stack: [V10, 0x228]
Stack pops: 1
Stack additions: [S0, V441]
Exit stack: [V10, 0x228, V441]

================================

Block 0x552
[0x552:0x557]
---
Predecessors: [0x246]
Successors: [0x24e]
---
0x552 JUMPDEST
0x553 PUSH1 0x3
0x555 SLOAD
0x556 DUP2
0x557 JUMP
---
0x552: JUMPDEST 
0x553: V442 = 0x3
0x555: V443 = S[0x3]
0x557: JUMP 0x24e
---
Entry stack: [V10, 0x24e]
Stack pops: 1
Stack additions: [S0, V443]
Exit stack: [V10, 0x24e, V443]

================================

Block 0x558
[0x558:0x583]
---
Predecessors: []
Successors: []
---
0x558 STOP
0x559 LOG1
0x55a PUSH6 0x627a7a723058
0x561 SHA3
0x562 DUP15
0x563 OR
0x564 CODESIZE
0x565 DUP7
0x566 MISSING 0xbe
0x567 MISSING 0xd2
0x568 PUSH10 0xbfff76f1ae39aadfda48
0x573 PUSH4 0x4773288e
0x578 RETURNDATACOPY
0x579 EXTCODEHASH
0x57a SUB
0x57b MISSING 0xec
0x57c ORIGIN
0x57d PC
0x57e MISSING 0xcb
0x57f MISSING 0xb0
0x580 BALANCE
0x581 MISSING 0x4b
0x582 STOP
0x583 MISSING 0x29
---
0x558: STOP 
0x559: LOG S0 S1 S2
0x55a: V444 = 0x627a7a723058
0x561: V445 = SHA3 0x627a7a723058 S3
0x563: V446 = OR S17 V445
0x564: V447 = CODESIZE
0x566: MISSING 0xbe
0x567: MISSING 0xd2
0x568: V448 = 0xbfff76f1ae39aadfda48
0x573: V449 = 0x4773288e
0x578: RETURNDATACOPY 0x4773288e 0xbfff76f1ae39aadfda48 S0
0x579: V450 = EXTCODEHASH S1
0x57a: V451 = SUB V450 S2
0x57b: MISSING 0xec
0x57c: V452 = ORIGIN
0x57d: V453 = PC
0x57e: MISSING 0xcb
0x57f: MISSING 0xb0
0x580: V454 = BALANCE S0
0x581: MISSING 0x4b
0x582: STOP 
0x583: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, V447, V446, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V451, V453, V452, V454]
Exit stack: []

================================

Function 0:
Public function signature: 0x7e25cec
Entry block: 0x9a
Exit block: 0xbc
Body: 0x9a, 0xa1, 0xa2, 0xbc, 0x264

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xd6
Exit block: 0xe6
Body: 0xd6, 0xdd, 0xde, 0xe6, 0x284

Function 2:
Public function signature: 0x940fbcd9
Entry block: 0x128
Exit block: 0x180
Body: 0x128, 0x12f, 0x130, 0x180, 0x2aa, 0x2c1, 0x2ca, 0x2e4, 0x338

Function 3:
Public function signature: 0xb8b603c5
Entry block: 0x19a
Exit block: 0x1f2
Body: 0x19a, 0x1a1, 0x1a2, 0x1f2, 0x33d, 0x352, 0x35b, 0x375, 0x3cc, 0x3f3, 0x3f4, 0x418, 0x41e, 0x435, 0x43e, 0x458, 0x4b3

Function 4:
Public function signature: 0xbd637580
Entry block: 0x1f4
Exit block: 0x216
Body: 0x1f4, 0x1fb, 0x1fc, 0x216, 0x4b6, 0x50e, 0x513, 0x548, 0x549

Function 5:
Public function signature: 0xc9116b69
Entry block: 0x218
Exit block: 0x228
Body: 0x218, 0x21f, 0x220, 0x228, 0x54c

Function 6:
Public function signature: 0xcb22d41b
Entry block: 0x23e
Exit block: 0x24e
Body: 0x23e, 0x245, 0x246, 0x24e, 0x552

Function 7:
Public fallback function
Entry block: 0x81
Exit block: 0x98
Body: 0x81, 0x85, 0x96, 0x98

