Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x288]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x4469ed14
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x288
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x4469ed14
0x3b: V13 = EQ V11 0x4469ed14
0x3c: V14 = 0x288
0x3f: JUMPI 0x288 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x288]
---
0x40 DUP1
0x41 PUSH4 0x57adb295
0x46 EQ
0x47 PUSH2 0x288
0x4a JUMPI
---
0x41: V15 = 0x57adb295
0x46: V16 = EQ 0x57adb295 V11
0x47: V17 = 0x288
0x4a: JUMPI 0x288 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x2af]
---
0x4b DUP1
0x4c PUSH4 0x8a93dbdf
0x51 EQ
0x52 PUSH2 0x2af
0x55 JUMPI
---
0x4c: V18 = 0x8a93dbdf
0x51: V19 = EQ 0x8a93dbdf V11
0x52: V20 = 0x2af
0x55: JUMPI 0x2af V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x2d0]
---
0x56 DUP1
0x57 PUSH4 0xc57981b5
0x5c EQ
0x5d PUSH2 0x2d0
0x60 JUMPI
---
0x57: V21 = 0xc57981b5
0x5c: V22 = EQ 0xc57981b5 V11
0x5d: V23 = 0x2d0
0x60: JUMPI 0x2d0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x8b]
---
Predecessors: [0x0, 0x56]
Successors: [0x8c, 0xf2]
---
0x61 JUMPDEST
0x62 PUSH1 0x3
0x64 SLOAD
0x65 CALLER
0x66 SWAP1
0x67 PUSH1 0x0
0x69 SWAP1
0x6a DUP2
0x6b SWAP1
0x6c PUSH21 0x10000000000000000000000000000000000000000
0x82 SWAP1
0x83 DIV
0x84 PUSH1 0xff
0x86 AND
0x87 ISZERO
0x88 PUSH2 0xf2
0x8b JUMPI
---
0x61: JUMPDEST 
0x62: V24 = 0x3
0x64: V25 = S[0x3]
0x65: V26 = CALLER
0x67: V27 = 0x0
0x6c: V28 = 0x10000000000000000000000000000000000000000
0x83: V29 = DIV V25 0x10000000000000000000000000000000000000000
0x84: V30 = 0xff
0x86: V31 = AND 0xff V29
0x87: V32 = ISZERO V31
0x88: V33 = 0xf2
0x8b: JUMPI 0xf2 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V26, 0x0, 0x0]
Exit stack: [V11, V26, 0x0, 0x0]

================================

Block 0x8c
[0x8c:0xf1]
---
Predecessors: [0x61]
Successors: []
---
0x8c PUSH1 0x40
0x8e DUP1
0x8f MLOAD
0x90 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb1 DUP2
0xb2 MSTORE
0xb3 PUSH1 0x20
0xb5 PUSH1 0x4
0xb7 DUP3
0xb8 ADD
0xb9 MSTORE
0xba PUSH1 0xb
0xbc PUSH1 0x24
0xbe DUP3
0xbf ADD
0xc0 MSTORE
0xc1 PUSH32 0x696e766573742073746f70000000000000000000000000000000000000000000
0xe2 PUSH1 0x44
0xe4 DUP3
0xe5 ADD
0xe6 MSTORE
0xe7 SWAP1
0xe8 MLOAD
0xe9 SWAP1
0xea DUP2
0xeb SWAP1
0xec SUB
0xed PUSH1 0x64
0xef ADD
0xf0 SWAP1
0xf1 REVERT
---
0x8c: V34 = 0x40
0x8f: V35 = M[0x40]
0x90: V36 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb2: M[V35] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb3: V37 = 0x20
0xb5: V38 = 0x4
0xb8: V39 = ADD V35 0x4
0xb9: M[V39] = 0x20
0xba: V40 = 0xb
0xbc: V41 = 0x24
0xbf: V42 = ADD V35 0x24
0xc0: M[V42] = 0xb
0xc1: V43 = 0x696e766573742073746f70000000000000000000000000000000000000000000
0xe2: V44 = 0x44
0xe5: V45 = ADD V35 0x44
0xe6: M[V45] = 0x696e766573742073746f70000000000000000000000000000000000000000000
0xe8: V46 = M[0x40]
0xec: V47 = SUB V35 V46
0xed: V48 = 0x64
0xef: V49 = ADD 0x64 V47
0xf1: REVERT V46 V49
---
Entry stack: [V11, V26, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26, 0x0, 0x0]

================================

Block 0xf2
[0xf2:0x110]
---
Predecessors: [0x61]
Successors: [0x111, 0x183]
---
0xf2 JUMPDEST
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb DUP4
0xfc AND
0xfd PUSH1 0x0
0xff SWAP1
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 DUP2
0x105 SWAP1
0x106 MSTORE
0x107 PUSH1 0x40
0x109 SWAP1
0x10a SHA3
0x10b SLOAD
0x10c ISZERO
0x10d PUSH2 0x183
0x110 JUMPI
---
0xf2: JUMPDEST 
0xf3: V50 = 0x1
0xf5: V51 = 0xa0
0xf7: V52 = 0x2
0xf9: V53 = EXP 0x2 0xa0
0xfa: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V55 = AND V26 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V56 = 0x0
0x101: M[0x0] = V55
0x102: V57 = 0x20
0x106: M[0x20] = 0x0
0x107: V58 = 0x40
0x10a: V59 = SHA3 0x0 0x40
0x10b: V60 = S[V59]
0x10c: V61 = ISZERO V60
0x10d: V62 = 0x183
0x110: JUMPI 0x183 V61
---
Entry stack: [V11, V26, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V26, 0x0, 0x0]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0xf2]
Successors: [0x2e5]
---
0x111 PUSH2 0x119
0x114 DUP4
0x115 PUSH2 0x2e5
0x118 JUMP
---
0x111: V63 = 0x119
0x115: V64 = 0x2e5
0x118: JUMP 0x2e5
---
Entry stack: [V11, V26, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x119, S2]
Exit stack: [V11, V26, 0x0, 0x0, 0x119, V26]

================================

Block 0x119
[0x119:0x123]
---
Predecessors: [0x321]
Successors: [0x124, 0x15d]
---
0x119 JUMPDEST
0x11a SWAP2
0x11b POP
0x11c ADDRESS
0x11d BALANCE
0x11e DUP3
0x11f LT
0x120 PUSH2 0x15d
0x123 JUMPI
---
0x119: JUMPDEST 
0x11c: V65 = ADDRESS
0x11d: V66 = BALANCE V65
0x11f: V67 = LT V249 V66
0x120: V68 = 0x15d
0x123: JUMPI 0x15d V67
---
Entry stack: [V11, V26, 0x0, S1, V249]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V11, V26, V249, S1]

================================

Block 0x124
[0x124:0x15c]
---
Predecessors: [0x119]
Successors: [0x15d]
---
0x124 PUSH1 0x3
0x126 DUP1
0x127 SLOAD
0x128 PUSH21 0xff0000000000000000000000000000000000000000
0x13e NOT
0x13f AND
0x140 PUSH21 0x10000000000000000000000000000000000000000
0x156 OR
0x157 SWAP1
0x158 SSTORE
0x159 ADDRESS
0x15a BALANCE
0x15b SWAP2
0x15c POP
---
0x124: V69 = 0x3
0x127: V70 = S[0x3]
0x128: V71 = 0xff0000000000000000000000000000000000000000
0x13e: V72 = NOT 0xff0000000000000000000000000000000000000000
0x13f: V73 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V70
0x140: V74 = 0x10000000000000000000000000000000000000000
0x156: V75 = OR 0x10000000000000000000000000000000000000000 V73
0x158: S[0x3] = V75
0x159: V76 = ADDRESS
0x15a: V77 = BALANCE V76
---
Entry stack: [V11, V26, V249, S0]
Stack pops: 2
Stack additions: [V77, S0]
Exit stack: [V11, V26, V77, S0]

================================

Block 0x15d
[0x15d:0x182]
---
Predecessors: [0x119, 0x124]
Successors: [0x183]
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 DUP5
0x16a AND
0x16b SWAP1
0x16c DUP4
0x16d ISZERO
0x16e PUSH2 0x8fc
0x171 MUL
0x172 SWAP1
0x173 DUP5
0x174 SWAP1
0x175 PUSH1 0x0
0x177 DUP2
0x178 DUP2
0x179 DUP2
0x17a DUP6
0x17b DUP9
0x17c DUP9
0x17d CALL
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 POP
---
0x15d: JUMPDEST 
0x15e: V78 = 0x40
0x160: V79 = M[0x40]
0x161: V80 = 0x1
0x163: V81 = 0xa0
0x165: V82 = 0x2
0x167: V83 = EXP 0x2 0xa0
0x168: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V85 = AND V26 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V86 = ISZERO S1
0x16e: V87 = 0x8fc
0x171: V88 = MUL 0x8fc V86
0x175: V89 = 0x0
0x17d: V90 = CALL V88 V85 S1 V79 0x0 V79 0x0
---
Entry stack: [V11, V26, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V26, S1, S0]

================================

Block 0x183
[0x183:0x1b6]
---
Predecessors: [0xf2, 0x15d]
Successors: [0x1b7, 0x283]
---
0x183 JUMPDEST
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c DUP4
0x18d AND
0x18e PUSH1 0x0
0x190 SWAP1
0x191 DUP2
0x192 MSTORE
0x193 PUSH1 0x1
0x195 PUSH1 0x20
0x197 SWAP1
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x40
0x19c DUP1
0x19d DUP4
0x19e SHA3
0x19f TIMESTAMP
0x1a0 SWAP1
0x1a1 SSTORE
0x1a2 SWAP1
0x1a3 DUP3
0x1a4 SWAP1
0x1a5 MSTORE
0x1a6 DUP2
0x1a7 SHA3
0x1a8 DUP1
0x1a9 SLOAD
0x1aa CALLVALUE
0x1ab SWAP1
0x1ac DUP2
0x1ad ADD
0x1ae SWAP1
0x1af SWAP2
0x1b0 SSTORE
0x1b1 GT
0x1b2 ISZERO
0x1b3 PUSH2 0x283
0x1b6 JUMPI
---
0x183: JUMPDEST 
0x184: V91 = 0x1
0x186: V92 = 0xa0
0x188: V93 = 0x2
0x18a: V94 = EXP 0x2 0xa0
0x18b: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V96 = AND V26 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V97 = 0x0
0x192: M[0x0] = V96
0x193: V98 = 0x1
0x195: V99 = 0x20
0x199: M[0x20] = 0x1
0x19a: V100 = 0x40
0x19e: V101 = SHA3 0x0 0x40
0x19f: V102 = TIMESTAMP
0x1a1: S[V101] = V102
0x1a5: M[0x20] = 0x0
0x1a7: V103 = SHA3 0x0 0x40
0x1a9: V104 = S[V103]
0x1aa: V105 = CALLVALUE
0x1ad: V106 = ADD V105 V104
0x1b0: S[V103] = V106
0x1b1: V107 = GT V105 0x0
0x1b2: V108 = ISZERO V107
0x1b3: V109 = 0x283
0x1b6: JUMPI 0x283 V108
---
Entry stack: [V11, V26, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V26, S1, S0]

================================

Block 0x1b7
[0x1b7:0x1ef]
---
Predecessors: [0x183]
Successors: [0x328]
---
0x1b7 PUSH2 0x1f0
0x1ba PUSH1 0x0
0x1bc CALLDATASIZE
0x1bd DUP1
0x1be DUP1
0x1bf PUSH1 0x1f
0x1c1 ADD
0x1c2 PUSH1 0x20
0x1c4 DUP1
0x1c5 SWAP2
0x1c6 DIV
0x1c7 MUL
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce SWAP1
0x1cf DUP2
0x1d0 ADD
0x1d1 PUSH1 0x40
0x1d3 MSTORE
0x1d4 DUP1
0x1d5 SWAP4
0x1d6 SWAP3
0x1d7 SWAP2
0x1d8 SWAP1
0x1d9 DUP2
0x1da DUP2
0x1db MSTORE
0x1dc PUSH1 0x20
0x1de ADD
0x1df DUP4
0x1e0 DUP4
0x1e1 DUP1
0x1e2 DUP3
0x1e3 DUP5
0x1e4 CALLDATACOPY
0x1e5 POP
0x1e6 PUSH2 0x328
0x1e9 SWAP5
0x1ea POP
0x1eb POP
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef JUMP
---
0x1b7: V110 = 0x1f0
0x1ba: V111 = 0x0
0x1bc: V112 = CALLDATASIZE
0x1bf: V113 = 0x1f
0x1c1: V114 = ADD 0x1f V112
0x1c2: V115 = 0x20
0x1c6: V116 = DIV V114 0x20
0x1c7: V117 = MUL V116 0x20
0x1c8: V118 = 0x20
0x1ca: V119 = ADD 0x20 V117
0x1cb: V120 = 0x40
0x1cd: V121 = M[0x40]
0x1d0: V122 = ADD V121 V119
0x1d1: V123 = 0x40
0x1d3: M[0x40] = V122
0x1db: M[V121] = V112
0x1dc: V124 = 0x20
0x1de: V125 = ADD 0x20 V121
0x1e4: CALLDATACOPY V125 0x0 V112
0x1e6: V126 = 0x328
0x1ef: JUMP 0x328
---
Entry stack: [V11, V26, S1, S0]
Stack pops: 0
Stack additions: [0x1f0, V121]
Exit stack: [V11, V26, S1, S0, 0x1f0, V121]

================================

Block 0x1f0
[0x1f0:0x239]
---
Predecessors: [0x328]
Successors: [0x23a, 0x256]
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x3
0x1f3 SLOAD
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 SWAP2
0x1f8 SWAP3
0x1f9 POP
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 AND
0x203 SWAP1
0x204 PUSH1 0x64
0x206 CALLVALUE
0x207 DIV
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x8fc
0x20d MUL
0x20e SWAP2
0x20f PUSH1 0x0
0x211 DUP2
0x212 DUP2
0x213 DUP2
0x214 DUP6
0x215 DUP9
0x216 DUP9
0x217 CALL
0x218 SWAP4
0x219 POP
0x21a POP
0x21b POP
0x21c POP
0x21d POP
0x21e DUP3
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 AND
0x228 DUP2
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 AND
0x232 EQ
0x233 ISZERO
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x256
0x239 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V127 = 0x3
0x1f3: V128 = S[0x3]
0x1f4: V129 = 0x40
0x1f6: V130 = M[0x40]
0x1fa: V131 = 0x1
0x1fc: V132 = 0xa0
0x1fe: V133 = 0x2
0x200: V134 = EXP 0x2 0xa0
0x201: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x204: V137 = 0x64
0x206: V138 = CALLVALUE
0x207: V139 = DIV V138 0x64
0x209: V140 = ISZERO V139
0x20a: V141 = 0x8fc
0x20d: V142 = MUL 0x8fc V140
0x20f: V143 = 0x0
0x217: V144 = CALL V142 V136 V139 V130 0x0 V130 0x0
0x21f: V145 = 0x1
0x221: V146 = 0xa0
0x223: V147 = 0x2
0x225: V148 = EXP 0x2 0xa0
0x226: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x229: V151 = 0x1
0x22b: V152 = 0xa0
0x22d: V153 = 0x2
0x22f: V154 = EXP 0x2 0xa0
0x230: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x232: V157 = EQ V156 V150
0x233: V158 = ISZERO V157
0x235: V159 = ISZERO V158
0x236: V160 = 0x256
0x239: JUMPI 0x256 V159
---
Entry stack: [V11, V26, S2, S1, V252]
Stack pops: 4
Stack additions: [S3, S2, S0, V158]
Exit stack: [V11, V26, S2, V252, V158]

================================

Block 0x23a
[0x23a:0x255]
---
Predecessors: [0x1f0]
Successors: [0x256]
---
0x23a POP
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 DUP2
0x244 AND
0x245 PUSH1 0x0
0x247 SWAP1
0x248 DUP2
0x249 MSTORE
0x24a PUSH1 0x20
0x24c DUP2
0x24d SWAP1
0x24e MSTORE
0x24f PUSH1 0x40
0x251 SWAP1
0x252 SHA3
0x253 SLOAD
0x254 ISZERO
0x255 ISZERO
---
0x23b: V161 = 0x1
0x23d: V162 = 0xa0
0x23f: V163 = 0x2
0x241: V164 = EXP 0x2 0xa0
0x242: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V166 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x245: V167 = 0x0
0x249: M[0x0] = V166
0x24a: V168 = 0x20
0x24e: M[0x20] = 0x0
0x24f: V169 = 0x40
0x252: V170 = SHA3 0x0 0x40
0x253: V171 = S[V170]
0x254: V172 = ISZERO V171
0x255: V173 = ISZERO V172
---
Entry stack: [V11, V26, S2, V252, V158]
Stack pops: 2
Stack additions: [S1, V173]
Exit stack: [V11, V26, S2, V252, V173]

================================

Block 0x256
[0x256:0x25b]
---
Predecessors: [0x1f0, 0x23a]
Successors: [0x25c, 0x283]
---
0x256 JUMPDEST
0x257 ISZERO
0x258 PUSH2 0x283
0x25b JUMPI
---
0x256: JUMPDEST 
0x257: V174 = ISZERO S0
0x258: V175 = 0x283
0x25b: JUMPI 0x283 V174
---
Entry stack: [V11, V26, S2, V252, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, V26, S2, V252]

================================

Block 0x25c
[0x25c:0x282]
---
Predecessors: [0x256]
Successors: [0x283]
---
0x25c PUSH1 0x40
0x25e MLOAD
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 DUP3
0x268 AND
0x269 SWAP1
0x26a PUSH1 0x64
0x26c CALLVALUE
0x26d DIV
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x8fc
0x273 MUL
0x274 SWAP2
0x275 PUSH1 0x0
0x277 DUP2
0x278 DUP2
0x279 DUP2
0x27a DUP6
0x27b DUP9
0x27c DUP9
0x27d CALL
0x27e POP
0x27f POP
0x280 POP
0x281 POP
0x282 POP
---
0x25c: V176 = 0x40
0x25e: V177 = M[0x40]
0x25f: V178 = 0x1
0x261: V179 = 0xa0
0x263: V180 = 0x2
0x265: V181 = EXP 0x2 0xa0
0x266: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x268: V183 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V184 = 0x64
0x26c: V185 = CALLVALUE
0x26d: V186 = DIV V185 0x64
0x26f: V187 = ISZERO V186
0x270: V188 = 0x8fc
0x273: V189 = MUL 0x8fc V187
0x275: V190 = 0x0
0x27d: V191 = CALL V189 V183 V186 V177 0x0 V177 0x0
---
Entry stack: [V11, V26, S1, V252]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, V26, S1, V252]

================================

Block 0x283
[0x283:0x287]
---
Predecessors: [0x183, 0x256, 0x25c]
Successors: []
---
0x283 JUMPDEST
0x284 POP
0x285 POP
0x286 POP
0x287 STOP
---
0x283: JUMPDEST 
0x287: STOP 
---
Entry stack: [V11, V26, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x288
[0x288:0x28f]
---
Predecessors: [0xd, 0x40]
Successors: [0x290, 0x294]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a DUP1
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x288: JUMPDEST 
0x289: V192 = CALLVALUE
0x28b: V193 = ISZERO V192
0x28c: V194 = 0x294
0x28f: JUMPI 0x294 V193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V11, V192]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x288]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V195 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V11, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V192]

================================

Block 0x294
[0x294:0x29c]
---
Predecessors: [0x288]
Successors: [0x32f]
---
0x294 JUMPDEST
0x295 POP
0x296 PUSH2 0x29d
0x299 PUSH2 0x32f
0x29c JUMP
---
0x294: JUMPDEST 
0x296: V196 = 0x29d
0x299: V197 = 0x32f
0x29c: JUMP 0x32f
---
Entry stack: [V11, V192]
Stack pops: 1
Stack additions: [0x29d]
Exit stack: [V11, 0x29d]

================================

Block 0x29d
[0x29d:0x2ae]
---
Predecessors: [0x321, 0x32f, 0x334]
Successors: []
---
0x29d JUMPDEST
0x29e PUSH1 0x40
0x2a0 DUP1
0x2a1 MLOAD
0x2a2 SWAP2
0x2a3 DUP3
0x2a4 MSTORE
0x2a5 MLOAD
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 SWAP1
0x2a9 SUB
0x2aa PUSH1 0x20
0x2ac ADD
0x2ad SWAP1
0x2ae RETURN
---
0x29d: JUMPDEST 
0x29e: V198 = 0x40
0x2a1: V199 = M[0x40]
0x2a4: M[V199] = S0
0x2a5: V200 = M[0x40]
0x2a9: V201 = SUB V199 V200
0x2aa: V202 = 0x20
0x2ac: V203 = ADD 0x20 V201
0x2ae: RETURN V200 V203
---
Entry stack: [V11, V26, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, V26, S2, S1]

================================

Block 0x2af
[0x2af:0x2b6]
---
Predecessors: [0x4b]
Successors: [0x2b7, 0x2bb]
---
0x2af JUMPDEST
0x2b0 CALLVALUE
0x2b1 DUP1
0x2b2 ISZERO
0x2b3 PUSH2 0x2bb
0x2b6 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V204 = CALLVALUE
0x2b2: V205 = ISZERO V204
0x2b3: V206 = 0x2bb
0x2b6: JUMPI 0x2bb V205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V11, V204]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x2af]
Successors: []
---
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba REVERT
---
0x2b7: V207 = 0x0
0x2ba: REVERT 0x0 0x0
---
Entry stack: [V11, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V204]

================================

Block 0x2bb
[0x2bb:0x2cf]
---
Predecessors: [0x2af]
Successors: [0x2e5]
---
0x2bb JUMPDEST
0x2bc POP
0x2bd PUSH2 0x29d
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 PUSH1 0x4
0x2ca CALLDATALOAD
0x2cb AND
0x2cc PUSH2 0x2e5
0x2cf JUMP
---
0x2bb: JUMPDEST 
0x2bd: V208 = 0x29d
0x2c0: V209 = 0x1
0x2c2: V210 = 0xa0
0x2c4: V211 = 0x2
0x2c6: V212 = EXP 0x2 0xa0
0x2c7: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V214 = 0x4
0x2ca: V215 = CALLDATALOAD 0x4
0x2cb: V216 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V217 = 0x2e5
0x2cf: JUMP 0x2e5
---
Entry stack: [V11, V204]
Stack pops: 1
Stack additions: [0x29d, V216]
Exit stack: [V11, 0x29d, V216]

================================

Block 0x2d0
[0x2d0:0x2d7]
---
Predecessors: [0x56]
Successors: [0x2d8, 0x2dc]
---
0x2d0 JUMPDEST
0x2d1 CALLVALUE
0x2d2 DUP1
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2d0: JUMPDEST 
0x2d1: V218 = CALLVALUE
0x2d3: V219 = ISZERO V218
0x2d4: V220 = 0x2dc
0x2d7: JUMPI 0x2dc V219
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V218]
Exit stack: [V11, V218]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d0]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V221 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V11, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V218]

================================

Block 0x2dc
[0x2dc:0x2e4]
---
Predecessors: [0x2d0]
Successors: [0x334]
---
0x2dc JUMPDEST
0x2dd POP
0x2de PUSH2 0x29d
0x2e1 PUSH2 0x334
0x2e4 JUMP
---
0x2dc: JUMPDEST 
0x2de: V222 = 0x29d
0x2e1: V223 = 0x334
0x2e4: JUMP 0x334
---
Entry stack: [V11, V218]
Stack pops: 1
Stack additions: [0x29d]
Exit stack: [V11, 0x29d]

================================

Block 0x2e5
[0x2e5:0x31f]
---
Predecessors: [0x111, 0x2bb]
Successors: [0x320, 0x321]
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0xa0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed SUB
0x2ee DUP2
0x2ef AND
0x2f0 PUSH1 0x0
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0x20
0x2f9 SWAP1
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x40
0x2fe DUP1
0x2ff DUP4
0x300 SHA3
0x301 SLOAD
0x302 SWAP2
0x303 DUP4
0x304 SWAP1
0x305 MSTORE
0x306 DUP3
0x307 SHA3
0x308 SLOAD
0x309 PUSH3 0x15180
0x30d SWAP2
0x30e TIMESTAMP
0x30f SUB
0x310 SWAP1
0x311 PUSH1 0x64
0x313 SWAP1
0x314 PUSH1 0x3
0x316 MUL
0x317 DIV
0x318 MUL
0x319 DUP2
0x31a ISZERO
0x31b ISZERO
0x31c PUSH2 0x321
0x31f JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V224 = 0x1
0x2e8: V225 = 0xa0
0x2ea: V226 = 0x2
0x2ec: V227 = EXP 0x2 0xa0
0x2ed: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V229 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V230 = 0x0
0x2f4: M[0x0] = V229
0x2f5: V231 = 0x1
0x2f7: V232 = 0x20
0x2fb: M[0x20] = 0x1
0x2fc: V233 = 0x40
0x300: V234 = SHA3 0x0 0x40
0x301: V235 = S[V234]
0x305: M[0x20] = 0x0
0x307: V236 = SHA3 0x0 0x40
0x308: V237 = S[V236]
0x309: V238 = 0x15180
0x30e: V239 = TIMESTAMP
0x30f: V240 = SUB V239 V235
0x311: V241 = 0x64
0x314: V242 = 0x3
0x316: V243 = MUL 0x3 V237
0x317: V244 = DIV V243 0x64
0x318: V245 = MUL V244 V240
0x31a: V246 = ISZERO 0x15180
0x31b: V247 = ISZERO 0x0
0x31c: V248 = 0x321
0x31f: JUMPI 0x321 0x1
---
Entry stack: [V11, V26, 0x0, S2, {0x119, 0x29d}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x15180, V245]
Exit stack: [V11, V26, 0x0, S2, {0x119, 0x29d}, S0, 0x0, 0x15180, V245]

================================

Block 0x320
[0x320:0x320]
---
Predecessors: [0x2e5]
Successors: []
---
0x320 INVALID
---
0x320: INVALID 
---
Entry stack: [V11, V26, 0x0, S5, {0x119, 0x29d}, S3, 0x0, 0x15180, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26, 0x0, S5, {0x119, 0x29d}, S3, 0x0, 0x15180, V245]

================================

Block 0x321
[0x321:0x327]
---
Predecessors: [0x2e5]
Successors: [0x119, 0x29d]
---
0x321 JUMPDEST
0x322 DIV
0x323 SWAP3
0x324 SWAP2
0x325 POP
0x326 POP
0x327 JUMP
---
0x321: JUMPDEST 
0x322: V249 = DIV V245 0x15180
0x327: JUMP {0x119, 0x29d}
---
Entry stack: [V11, V26, 0x0, S5, {0x119, 0x29d}, S3, 0x0, 0x15180, V245]
Stack pops: 5
Stack additions: [V249]
Exit stack: [V11, V26, 0x0, S5, V249]

================================

Block 0x328
[0x328:0x32e]
---
Predecessors: [0x1b7]
Successors: [0x1f0]
---
0x328 JUMPDEST
0x329 PUSH1 0x14
0x32b ADD
0x32c MLOAD
0x32d SWAP1
0x32e JUMP
---
0x328: JUMPDEST 
0x329: V250 = 0x14
0x32b: V251 = ADD 0x14 V121
0x32c: V252 = M[V251]
0x32e: JUMP 0x1f0
---
Entry stack: [V11, V26, S3, S2, 0x1f0, V121]
Stack pops: 2
Stack additions: [V252]
Exit stack: [V11, V26, S3, S2, V252]

================================

Block 0x32f
[0x32f:0x333]
---
Predecessors: [0x294]
Successors: [0x29d]
---
0x32f JUMPDEST
0x330 PUSH1 0x1
0x332 DUP2
0x333 JUMP
---
0x32f: JUMPDEST 
0x330: V253 = 0x1
0x333: JUMP 0x29d
---
Entry stack: [V11, 0x29d]
Stack pops: 1
Stack additions: [S0, 0x1]
Exit stack: [V11, 0x29d, 0x1]

================================

Block 0x334
[0x334:0x338]
---
Predecessors: [0x2dc]
Successors: [0x29d]
---
0x334 JUMPDEST
0x335 PUSH1 0x3
0x337 DUP2
0x338 JUMP
---
0x334: JUMPDEST 
0x335: V254 = 0x3
0x338: JUMP 0x29d
---
Entry stack: [V11, 0x29d]
Stack pops: 1
Stack additions: [S0, 0x3]
Exit stack: [V11, 0x29d, 0x3]

================================

Block 0x339
[0x339:0x364]
---
Predecessors: []
Successors: []
---
0x339 STOP
0x33a LOG1
0x33b PUSH6 0x627a7a723058
0x342 SHA3
0x343 MISSING 0x26
0x344 PUSH11 0x4864f9544095712e75f714
0x350 MISSING 0x2b
0x351 MISSING 0xeb
0x352 MISSING 0xc2
0x353 MISSING 0xe
0x354 GT
0x355 PUSH14 0xeeb223516eadfe39da4c9bbe5300
0x364 MISSING 0x29
---
0x339: STOP 
0x33a: LOG S0 S1 S2
0x33b: V255 = 0x627a7a723058
0x342: V256 = SHA3 0x627a7a723058 S3
0x343: MISSING 0x26
0x344: V257 = 0x4864f9544095712e75f714
0x350: MISSING 0x2b
0x351: MISSING 0xeb
0x352: MISSING 0xc2
0x353: MISSING 0xe
0x354: V258 = GT S0 S1
0x355: V259 = 0xeeb223516eadfe39da4c9bbe5300
0x364: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V256, 0x4864f9544095712e75f714, 0xeeb223516eadfe39da4c9bbe5300, V258]
Exit stack: []

================================

Function 0:
Public function signature: 0x4469ed14
Entry block: 0x288
Exit block: 0x29d
Body: 0x288, 0x290, 0x294, 0x29d, 0x32f

Function 1:
Public function signature: 0x57adb295
Entry block: 0x288
Exit block: 0x29d
Body: 0x288, 0x290, 0x294, 0x29d, 0x32f

Function 2:
Public function signature: 0x8a93dbdf
Entry block: 0x2af
Exit block: 0x29d
Body: 0x29d, 0x2af, 0x2b7, 0x2bb

Function 3:
Public function signature: 0xc57981b5
Entry block: 0x2d0
Exit block: 0x29d
Body: 0x29d, 0x2d0, 0x2d8, 0x2dc, 0x334

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x283
Body: 0x61, 0x8c, 0xf2, 0x111, 0x119, 0x124, 0x15d, 0x183, 0x1b7, 0x1f0, 0x23a, 0x256, 0x25c, 0x283, 0x328

Function 5:
Private function
Entry block: 0x2e5
Exit block: 0x321
Body: 0x2e5, 0x321

