Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x3c9]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x770b80b6
0x3c EQ
0x3d PUSH2 0x3c9
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x770b80b6
0x3c: V13 = EQ 0x770b80b6 V11
0x3d: V14 = 0x3c9
0x40: JUMPI 0x3c9 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x3d3]
---
0x41 DUP1
0x42 PUSH4 0xd6cd4a02
0x47 EQ
0x48 PUSH2 0x3d3
0x4b JUMPI
---
0x42: V15 = 0xd6cd4a02
0x47: V16 = EQ 0xd6cd4a02 V11
0x48: V17 = 0x3d3
0x4b: JUMPI 0x3d3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x43d]
---
0x4c DUP1
0x4d PUSH4 0xf00e6a2a
0x52 EQ
0x53 PUSH2 0x43d
0x56 JUMPI
---
0x4d: V18 = 0xf00e6a2a
0x52: V19 = EQ 0xf00e6a2a V11
0x53: V20 = 0x43d
0x56: JUMPI 0x43d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x74]
---
Predecessors: [0x0, 0x4c]
Successors: [0x75, 0x76]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b PUSH1 0x0
0x5d DUP1
0x5e PUSH1 0x0
0x60 CALLVALUE
0x61 SWAP5
0x62 POP
0x63 PUSH8 0x16345785d8a0000
0x6c DUP6
0x6d LT
0x6e ISZERO
0x6f ISZERO
0x70 ISZERO
0x71 PUSH2 0x76
0x74 JUMPI
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: V22 = 0x0
0x5e: V23 = 0x0
0x60: V24 = CALLVALUE
0x63: V25 = 0x16345785d8a0000
0x6d: V26 = LT V24 0x16345785d8a0000
0x6e: V27 = ISZERO V26
0x6f: V28 = ISZERO V27
0x70: V29 = ISZERO V28
0x71: V30 = 0x76
0x74: JUMPI 0x76 V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x75
[0x75:0x75]
---
Predecessors: [0x57]
Successors: []
---
0x75 INVALID
---
0x75: INVALID 
---
Entry stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x76
[0x76:0x7d]
---
Predecessors: [0x57]
Successors: [0x7e]
---
0x76 JUMPDEST
0x77 CALLVALUE
0x78 SWAP4
0x79 POP
0x7a PUSH1 0x0
0x7c SWAP3
0x7d POP
---
0x76: JUMPDEST 
0x77: V31 = CALLVALUE
0x7a: V32 = 0x0
---
Entry stack: [V11, V24, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V31, 0x0, S1, S0]
Exit stack: [V11, V24, V31, 0x0, 0x0, 0x0]

================================

Block 0x7e
[0x7e:0x8b]
---
Predecessors: [0x76, 0x243]
Successors: [0x8c, 0x250]
---
0x7e JUMPDEST
0x7f PUSH1 0x3
0x81 DUP1
0x82 SLOAD
0x83 SWAP1
0x84 POP
0x85 DUP4
0x86 LT
0x87 ISZERO
0x88 PUSH2 0x250
0x8b JUMPI
---
0x7e: JUMPDEST 
0x7f: V33 = 0x3
0x82: V34 = S[0x3]
0x86: V35 = LT S2 V34
0x87: V36 = ISZERO V35
0x88: V37 = 0x250
0x8b: JUMPI 0x250 V36
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x8c
[0x8c:0x9c]
---
Predecessors: [0x7e]
Successors: [0x9d, 0x9e]
---
0x8c PUSH1 0x2
0x8e PUSH1 0x0
0x90 PUSH1 0x3
0x92 DUP6
0x93 DUP2
0x94 SLOAD
0x95 DUP2
0x96 LT
0x97 ISZERO
0x98 ISZERO
0x99 PUSH2 0x9e
0x9c JUMPI
---
0x8c: V38 = 0x2
0x8e: V39 = 0x0
0x90: V40 = 0x3
0x94: V41 = S[0x3]
0x96: V42 = LT S2 V41
0x97: V43 = ISZERO V42
0x98: V44 = ISZERO V43
0x99: V45 = 0x9e
0x9c: JUMPI 0x9e V44
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x2, 0x0, 0x3, S2]
Exit stack: [V11, V24, S3, S2, S1, S0, 0x2, 0x0, 0x3, S2]

================================

Block 0x9d
[0x9d:0x9d]
---
Predecessors: [0x8c]
Successors: []
---
0x9d INVALID
---
0x9d: INVALID 
---
Entry stack: [V11, V24, S7, S6, S5, S4, 0x2, 0x0, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S7, S6, S5, S4, 0x2, 0x0, 0x3, S0]

================================

Block 0x9e
[0x9e:0x114]
---
Predecessors: [0x8c]
Successors: [0x115, 0x116]
---
0x9e JUMPDEST
0x9f SWAP1
0xa0 PUSH1 0x0
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 PUSH1 0x0
0xa7 SHA3
0xa8 SWAP1
0xa9 ADD
0xaa PUSH1 0x0
0xac SWAP1
0xad SLOAD
0xae SWAP1
0xaf PUSH2 0x100
0xb2 EXP
0xb3 SWAP1
0xb4 DIV
0xb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca AND
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6 AND
0xf7 DUP2
0xf8 MSTORE
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP1
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x20
0x101 ADD
0x102 PUSH1 0x0
0x104 SHA3
0x105 SLOAD
0x106 SWAP2
0x107 POP
0x108 PUSH2 0x2710
0x10b DUP3
0x10c DUP7
0x10d MUL
0x10e DUP2
0x10f ISZERO
0x110 ISZERO
0x111 PUSH2 0x116
0x114 JUMPI
---
0x9e: JUMPDEST 
0xa0: V46 = 0x0
0xa2: M[0x0] = 0x3
0xa3: V47 = 0x20
0xa5: V48 = 0x0
0xa7: V49 = SHA3 0x0 0x20
0xa9: V50 = ADD S0 V49
0xaa: V51 = 0x0
0xad: V52 = S[V50]
0xaf: V53 = 0x100
0xb2: V54 = EXP 0x100 0x0
0xb4: V55 = DIV V52 0x1
0xb5: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xca: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xcb: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xe1: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xf8: M[0x0] = V61
0xf9: V62 = 0x20
0xfb: V63 = ADD 0x20 0x0
0xfe: M[0x20] = 0x2
0xff: V64 = 0x20
0x101: V65 = ADD 0x20 0x20
0x102: V66 = 0x0
0x104: V67 = SHA3 0x0 0x40
0x105: V68 = S[V67]
0x108: V69 = 0x2710
0x10d: V70 = MUL V24 V68
0x10f: V71 = ISZERO 0x2710
0x110: V72 = ISZERO 0x0
0x111: V73 = 0x116
0x114: JUMPI 0x116 0x1
---
Entry stack: [V11, V24, S7, S6, S5, S4, 0x2, 0x0, 0x3, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, V68, S4, 0x2710, V70]
Exit stack: [V11, V24, S7, S6, V68, S4, 0x2710, V70]

================================

Block 0x115
[0x115:0x115]
---
Predecessors: [0x9e]
Successors: []
---
0x115 INVALID
---
0x115: INVALID 
---
Entry stack: [V11, V24, S5, S4, V68, S2, 0x2710, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S5, S4, V68, S2, 0x2710, V70]

================================

Block 0x116
[0x116:0x12b]
---
Predecessors: [0x9e]
Successors: [0x12c, 0x12d]
---
0x116 JUMPDEST
0x117 DIV
0x118 SWAP1
0x119 POP
0x11a DUP1
0x11b DUP5
0x11c SUB
0x11d SWAP4
0x11e POP
0x11f PUSH1 0x3
0x121 DUP4
0x122 DUP2
0x123 SLOAD
0x124 DUP2
0x125 LT
0x126 ISZERO
0x127 ISZERO
0x128 PUSH2 0x12d
0x12b JUMPI
---
0x116: JUMPDEST 
0x117: V74 = DIV V70 0x2710
0x11c: V75 = SUB S5 V74
0x11f: V76 = 0x3
0x123: V77 = S[0x3]
0x125: V78 = LT S4 V77
0x126: V79 = ISZERO V78
0x127: V80 = ISZERO V79
0x128: V81 = 0x12d
0x12b: JUMPI 0x12d V80
---
Entry stack: [V11, V24, S5, S4, V68, S2, 0x2710, V70]
Stack pops: 6
Stack additions: [V75, S4, S3, V74, 0x3, S4]
Exit stack: [V11, V24, V75, S4, V68, V74, 0x3, S4]

================================

Block 0x12c
[0x12c:0x12c]
---
Predecessors: [0x116]
Successors: []
---
0x12c INVALID
---
0x12c: INVALID 
---
Entry stack: [V11, V24, V75, S4, V68, V74, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, V75, S4, V68, V74, 0x3, S0]

================================

Block 0x12d
[0x12d:0x193]
---
Predecessors: [0x116]
Successors: [0x194, 0x19d]
---
0x12d JUMPDEST
0x12e SWAP1
0x12f PUSH1 0x0
0x131 MSTORE
0x132 PUSH1 0x20
0x134 PUSH1 0x0
0x136 SHA3
0x137 SWAP1
0x138 ADD
0x139 PUSH1 0x0
0x13b SWAP1
0x13c SLOAD
0x13d SWAP1
0x13e PUSH2 0x100
0x141 EXP
0x142 SWAP1
0x143 DIV
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f AND
0x170 PUSH2 0x8fc
0x173 DUP3
0x174 SWAP1
0x175 DUP2
0x176 ISZERO
0x177 MUL
0x178 SWAP1
0x179 PUSH1 0x40
0x17b MLOAD
0x17c PUSH1 0x0
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 DUP4
0x183 SUB
0x184 DUP2
0x185 DUP6
0x186 DUP9
0x187 DUP9
0x188 CALL
0x189 SWAP4
0x18a POP
0x18b POP
0x18c POP
0x18d POP
0x18e ISZERO
0x18f ISZERO
0x190 PUSH2 0x19d
0x193 JUMPI
---
0x12d: JUMPDEST 
0x12f: V82 = 0x0
0x131: M[0x0] = 0x3
0x132: V83 = 0x20
0x134: V84 = 0x0
0x136: V85 = SHA3 0x0 0x20
0x138: V86 = ADD S0 V85
0x139: V87 = 0x0
0x13c: V88 = S[V86]
0x13e: V89 = 0x100
0x141: V90 = EXP 0x100 0x0
0x143: V91 = DIV V88 0x1
0x144: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x15a: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x170: V96 = 0x8fc
0x176: V97 = ISZERO V74
0x177: V98 = MUL V97 0x8fc
0x179: V99 = 0x40
0x17b: V100 = M[0x40]
0x17c: V101 = 0x0
0x17e: V102 = 0x40
0x180: V103 = M[0x40]
0x183: V104 = SUB V100 V103
0x188: V105 = CALL V98 V95 V74 V103 V104 V103 0x0
0x18e: V106 = ISZERO V105
0x18f: V107 = ISZERO V106
0x190: V108 = 0x19d
0x193: JUMPI 0x19d V107
---
Entry stack: [V11, V24, V75, S4, V68, V74, 0x3, S0]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V11, V24, V75, S4, V68, V74]

================================

Block 0x194
[0x194:0x19c]
---
Predecessors: [0x12d]
Successors: [0x243]
---
0x194 DUP1
0x195 DUP5
0x196 ADD
0x197 SWAP4
0x198 POP
0x199 PUSH2 0x243
0x19c JUMP
---
0x196: V109 = ADD V75 V74
0x199: V110 = 0x243
0x19c: JUMP 0x243
---
Entry stack: [V11, V24, V75, S2, V68, V74]
Stack pops: 4
Stack additions: [V109, S2, S1, S0]
Exit stack: [V11, V24, V109, S2, V68, V74]

================================

Block 0x19d
[0x19d:0x1cb]
---
Predecessors: [0x12d]
Successors: [0x1cc, 0x1cd]
---
0x19d JUMPDEST
0x19e PUSH32 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec
0x1bf PUSH1 0x3
0x1c1 DUP5
0x1c2 DUP2
0x1c3 SLOAD
0x1c4 DUP2
0x1c5 LT
0x1c6 ISZERO
0x1c7 ISZERO
0x1c8 PUSH2 0x1cd
0x1cb JUMPI
---
0x19d: JUMPDEST 
0x19e: V111 = 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec
0x1bf: V112 = 0x3
0x1c3: V113 = S[0x3]
0x1c5: V114 = LT S2 V113
0x1c6: V115 = ISZERO V114
0x1c7: V116 = ISZERO V115
0x1c8: V117 = 0x1cd
0x1cb: JUMPI 0x1cd V116
---
Entry stack: [V11, V24, V75, S2, V68, V74]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec, 0x3, S2]
Exit stack: [V11, V24, V75, S2, V68, V74, 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec, 0x3, S2]

================================

Block 0x1cc
[0x1cc:0x1cc]
---
Predecessors: [0x19d]
Successors: []
---
0x1cc INVALID
---
0x1cc: INVALID 
---
Entry stack: [V11, V24, V75, S5, V68, V74, 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, V75, S5, V68, V74, 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec, 0x3, S0]

================================

Block 0x1cd
[0x1cd:0x242]
---
Predecessors: [0x19d]
Successors: [0x243]
---
0x1cd JUMPDEST
0x1ce SWAP1
0x1cf PUSH1 0x0
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 PUSH1 0x0
0x1d6 SHA3
0x1d7 SWAP1
0x1d8 ADD
0x1d9 PUSH1 0x0
0x1db SWAP1
0x1dc SLOAD
0x1dd SWAP1
0x1de PUSH2 0x100
0x1e1 EXP
0x1e2 SWAP1
0x1e3 DIV
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa DUP3
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe DUP1
0x1ff DUP4
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 DUP3
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP3
0x238 POP
0x239 POP
0x23a POP
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f SWAP2
0x240 SUB
0x241 SWAP1
0x242 LOG1
---
0x1cd: JUMPDEST 
0x1cf: V118 = 0x0
0x1d1: M[0x0] = 0x3
0x1d2: V119 = 0x20
0x1d4: V120 = 0x0
0x1d6: V121 = SHA3 0x0 0x20
0x1d8: V122 = ADD S0 V121
0x1d9: V123 = 0x0
0x1dc: V124 = S[V122]
0x1de: V125 = 0x100
0x1e1: V126 = EXP 0x100 0x0
0x1e3: V127 = DIV V124 0x1
0x1e4: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x1fb: V130 = 0x40
0x1fd: V131 = M[0x40]
0x200: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x216: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x22d: M[V131] = V135
0x22e: V136 = 0x20
0x230: V137 = ADD 0x20 V131
0x233: M[V137] = V74
0x234: V138 = 0x20
0x236: V139 = ADD 0x20 V137
0x23b: V140 = 0x40
0x23d: V141 = M[0x40]
0x240: V142 = SUB V139 V141
0x242: LOG V141 V142 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec
---
Entry stack: [V11, V24, V75, S5, V68, V74, 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec, 0x3, S0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, V24, V75, S5, V68, V74]

================================

Block 0x243
[0x243:0x24f]
---
Predecessors: [0x194, 0x1cd]
Successors: [0x7e]
---
0x243 JUMPDEST
0x244 DUP3
0x245 DUP1
0x246 PUSH1 0x1
0x248 ADD
0x249 SWAP4
0x24a POP
0x24b POP
0x24c PUSH2 0x7e
0x24f JUMP
---
0x243: JUMPDEST 
0x246: V143 = 0x1
0x248: V144 = ADD 0x1 S2
0x24c: V145 = 0x7e
0x24f: JUMP 0x7e
---
Entry stack: [V11, V24, S3, S2, V68, V74]
Stack pops: 3
Stack additions: [V144, S1, S0]
Exit stack: [V11, V24, S3, V144, V68, V74]

================================

Block 0x250
[0x250:0x262]
---
Predecessors: [0x7e]
Successors: [0x263, 0x264]
---
0x250 JUMPDEST
0x251 PUSH8 0x16345785d8a0000
0x25a DUP5
0x25b LT
0x25c ISZERO
0x25d ISZERO
0x25e ISZERO
0x25f PUSH2 0x264
0x262 JUMPI
---
0x250: JUMPDEST 
0x251: V146 = 0x16345785d8a0000
0x25b: V147 = LT S3 0x16345785d8a0000
0x25c: V148 = ISZERO V147
0x25d: V149 = ISZERO V148
0x25e: V150 = ISZERO V149
0x25f: V151 = 0x264
0x262: JUMPI 0x264 V150
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x263
[0x263:0x263]
---
Predecessors: [0x250]
Successors: []
---
0x263 INVALID
---
0x263: INVALID 
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S3, S2, S1, S0]

================================

Block 0x264
[0x264:0x31b]
---
Predecessors: [0x250]
Successors: [0x31c, 0x320]
---
0x264 JUMPDEST
0x265 PUSH1 0x1
0x267 PUSH1 0x0
0x269 SWAP1
0x26a SLOAD
0x26b SWAP1
0x26c PUSH2 0x100
0x26f EXP
0x270 SWAP1
0x271 DIV
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d AND
0x29e PUSH4 0xec8ac4d8
0x2a3 DUP6
0x2a4 ORIGIN
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 DUP4
0x2a9 PUSH4 0xffffffff
0x2ae AND
0x2af PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2cd MUL
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x4
0x2d2 ADD
0x2d3 DUP1
0x2d4 DUP3
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x300 AND
0x301 DUP2
0x302 MSTORE
0x303 PUSH1 0x20
0x305 ADD
0x306 SWAP2
0x307 POP
0x308 POP
0x309 PUSH1 0x0
0x30b PUSH1 0x40
0x30d MLOAD
0x30e DUP1
0x30f DUP4
0x310 SUB
0x311 DUP2
0x312 DUP6
0x313 DUP9
0x314 DUP1
0x315 EXTCODESIZE
0x316 ISZERO
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x264: JUMPDEST 
0x265: V152 = 0x1
0x267: V153 = 0x0
0x26a: V154 = S[0x1]
0x26c: V155 = 0x100
0x26f: V156 = EXP 0x100 0x0
0x271: V157 = DIV V154 0x1
0x272: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x288: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x29e: V162 = 0xec8ac4d8
0x2a4: V163 = ORIGIN
0x2a5: V164 = 0x40
0x2a7: V165 = M[0x40]
0x2a9: V166 = 0xffffffff
0x2ae: V167 = AND 0xffffffff 0xec8ac4d8
0x2af: V168 = 0x100000000000000000000000000000000000000000000000000000000
0x2cd: V169 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xec8ac4d8
0x2cf: M[V165] = 0xec8ac4d800000000000000000000000000000000000000000000000000000000
0x2d0: V170 = 0x4
0x2d2: V171 = ADD 0x4 V165
0x2d5: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2eb: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x300: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x302: M[V171] = V175
0x303: V176 = 0x20
0x305: V177 = ADD 0x20 V171
0x309: V178 = 0x0
0x30b: V179 = 0x40
0x30d: V180 = M[0x40]
0x310: V181 = SUB V177 V180
0x315: V182 = EXTCODESIZE V161
0x316: V183 = ISZERO V182
0x317: V184 = ISZERO V183
0x318: V185 = 0x320
0x31b: JUMPI 0x320 V184
---
Entry stack: [V11, V24, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V161, 0xec8ac4d8, S3, V177, 0x0, V180, V181, V180, S3, V161]
Exit stack: [V11, V24, S3, S2, S1, S0, V161, 0xec8ac4d8, S3, V177, 0x0, V180, V181, V180, S3, V161]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x264]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V186 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V11, V24, S13, S12, S11, S10, V161, 0xec8ac4d8, S7, V177, 0x0, V180, V181, V180, S1, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S13, S12, S11, S10, V161, 0xec8ac4d8, S7, V177, 0x0, V180, V181, V180, S1, V161]

================================

Block 0x320
[0x320:0x32c]
---
Predecessors: [0x264]
Successors: [0x32d, 0x331]
---
0x320 JUMPDEST
0x321 PUSH2 0x25ee
0x324 GAS
0x325 SUB
0x326 CALL
0x327 ISZERO
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x320: JUMPDEST 
0x321: V187 = 0x25ee
0x324: V188 = GAS
0x325: V189 = SUB V188 0x25ee
0x326: V190 = CALL V189 V161 S1 V180 V181 V180 0x0
0x327: V191 = ISZERO V190
0x328: V192 = ISZERO V191
0x329: V193 = 0x331
0x32c: JUMPI 0x331 V192
---
Entry stack: [V11, V24, S13, S12, S11, S10, V161, 0xec8ac4d8, S7, V177, 0x0, V180, V181, V180, S1, V161]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V24, S13, S12, S11, S10, V161, 0xec8ac4d8, S7, V177]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x320]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V194 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V11, V24, S7, S6, S5, S4, V161, 0xec8ac4d8, S1, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24, S7, S6, S5, S4, V161, 0xec8ac4d8, S1, V177]

================================

Block 0x331
[0x331:0x3c8]
---
Predecessors: [0x320]
Successors: []
---
0x331 JUMPDEST
0x332 POP
0x333 POP
0x334 POP
0x335 POP
0x336 PUSH32 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec
0x357 PUSH1 0x1
0x359 PUSH1 0x0
0x35b SWAP1
0x35c SLOAD
0x35d SWAP1
0x35e PUSH2 0x100
0x361 EXP
0x362 SWAP1
0x363 DIV
0x364 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x379 AND
0x37a DUP6
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f DUP4
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 DUP3
0x3b2 DUP2
0x3b3 MSTORE
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP3
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be DUP1
0x3bf SWAP2
0x3c0 SUB
0x3c1 SWAP1
0x3c2 LOG1
0x3c3 POP
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 STOP
---
0x331: JUMPDEST 
0x336: V195 = 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec
0x357: V196 = 0x1
0x359: V197 = 0x0
0x35c: V198 = S[0x1]
0x35e: V199 = 0x100
0x361: V200 = EXP 0x100 0x0
0x363: V201 = DIV V198 0x1
0x364: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x379: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x37b: V204 = 0x40
0x37d: V205 = M[0x40]
0x380: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x396: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3ad: M[V205] = V209
0x3ae: V210 = 0x20
0x3b0: V211 = ADD 0x20 V205
0x3b3: M[V211] = S7
0x3b4: V212 = 0x20
0x3b6: V213 = ADD 0x20 V211
0x3bb: V214 = 0x40
0x3bd: V215 = M[0x40]
0x3c0: V216 = SUB V213 V215
0x3c2: LOG V215 V216 0x5cf9c3dc0403b88750b3ce5ea792cdca787ff26128f6d508b99b2d3853ae13ec
0x3c8: STOP 
---
Entry stack: [V11, V24, S7, S6, S5, S4, V161, 0xec8ac4d8, S1, V177]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c9
[0x3c9:0x3d0]
---
Predecessors: [0xd]
Successors: [0x492]
---
0x3c9 JUMPDEST
0x3ca PUSH2 0x3d1
0x3cd PUSH2 0x492
0x3d0 JUMP
---
0x3c9: JUMPDEST 
0x3ca: V217 = 0x3d1
0x3cd: V218 = 0x492
0x3d0: JUMP 0x492
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3d1]
Exit stack: [V11, 0x3d1]

================================

Block 0x3d1
[0x3d1:0x3d2]
---
Predecessors: [0x5cd]
Successors: []
---
0x3d1 JUMPDEST
0x3d2 STOP
---
0x3d1: JUMPDEST 
0x3d2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d3
[0x3d3:0x3d9]
---
Predecessors: [0x41]
Successors: [0x3da, 0x3de]
---
0x3d3 JUMPDEST
0x3d4 CALLVALUE
0x3d5 ISZERO
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x3d3: JUMPDEST 
0x3d4: V219 = CALLVALUE
0x3d5: V220 = ISZERO V219
0x3d6: V221 = 0x3de
0x3d9: JUMPI 0x3de V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x3d3]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V222 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3de
[0x3de:0x3e5]
---
Predecessors: [0x3d3]
Successors: [0x5cf]
---
0x3de JUMPDEST
0x3df PUSH2 0x3e6
0x3e2 PUSH2 0x5cf
0x3e5 JUMP
---
0x3de: JUMPDEST 
0x3df: V223 = 0x3e6
0x3e2: V224 = 0x5cf
0x3e5: JUMP 0x5cf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3e6]
Exit stack: [V11, 0x3e6]

================================

Block 0x3e6
[0x3e6:0x40d]
---
Predecessors: [0x6b1]
Successors: [0x40e]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea DUP1
0x3eb DUP1
0x3ec PUSH1 0x20
0x3ee ADD
0x3ef DUP3
0x3f0 DUP2
0x3f1 SUB
0x3f2 DUP3
0x3f3 MSTORE
0x3f4 DUP4
0x3f5 DUP2
0x3f6 DUP2
0x3f7 MLOAD
0x3f8 DUP2
0x3f9 MSTORE
0x3fa PUSH1 0x20
0x3fc ADD
0x3fd SWAP2
0x3fe POP
0x3ff DUP1
0x400 MLOAD
0x401 SWAP1
0x402 PUSH1 0x20
0x404 ADD
0x405 SWAP1
0x406 PUSH1 0x20
0x408 MUL
0x409 DUP1
0x40a DUP4
0x40b DUP4
0x40c PUSH1 0x0
---
0x3e6: JUMPDEST 
0x3e7: V225 = 0x40
0x3e9: V226 = M[0x40]
0x3ec: V227 = 0x20
0x3ee: V228 = ADD 0x20 V226
0x3f1: V229 = SUB V228 V226
0x3f3: M[V226] = V229
0x3f7: V230 = M[V360]
0x3f9: M[V228] = V230
0x3fa: V231 = 0x20
0x3fc: V232 = ADD 0x20 V228
0x400: V233 = M[V360]
0x402: V234 = 0x20
0x404: V235 = ADD 0x20 V360
0x406: V236 = 0x20
0x408: V237 = MUL 0x20 V233
0x40c: V238 = 0x0
---
Entry stack: [V11, V360]
Stack pops: 1
Stack additions: [S0, V226, V226, V232, V235, V237, V237, V232, V235, 0x0]
Exit stack: [V11, V360, V226, V226, V232, V235, V237, V237, V232, V235, 0x0]

================================

Block 0x40e
[0x40e:0x416]
---
Predecessors: [0x3e6, 0x417]
Successors: [0x417, 0x429]
---
0x40e JUMPDEST
0x40f DUP4
0x410 DUP2
0x411 LT
0x412 ISZERO
0x413 PUSH2 0x429
0x416 JUMPI
---
0x40e: JUMPDEST 
0x411: V239 = LT S0 V237
0x412: V240 = ISZERO V239
0x413: V241 = 0x429
0x416: JUMPI 0x429 V240
---
Entry stack: [V11, V360, V226, V226, V232, V235, V237, V237, V232, V235, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V360, V226, V226, V232, V235, V237, V237, V232, V235, S0]

================================

Block 0x417
[0x417:0x428]
---
Predecessors: [0x40e]
Successors: [0x40e]
---
0x417 DUP1
0x418 DUP3
0x419 ADD
0x41a MLOAD
0x41b DUP2
0x41c DUP5
0x41d ADD
0x41e MSTORE
0x41f PUSH1 0x20
0x421 DUP2
0x422 ADD
0x423 SWAP1
0x424 POP
0x425 PUSH2 0x40e
0x428 JUMP
---
0x419: V242 = ADD V235 S0
0x41a: V243 = M[V242]
0x41d: V244 = ADD V232 S0
0x41e: M[V244] = V243
0x41f: V245 = 0x20
0x422: V246 = ADD S0 0x20
0x425: V247 = 0x40e
0x428: JUMP 0x40e
---
Entry stack: [V11, V360, V226, V226, V232, V235, V237, V237, V232, V235, S0]
Stack pops: 3
Stack additions: [S2, S1, V246]
Exit stack: [V11, V360, V226, V226, V232, V235, V237, V237, V232, V235, V246]

================================

Block 0x429
[0x429:0x43c]
---
Predecessors: [0x40e]
Successors: []
---
0x429 JUMPDEST
0x42a POP
0x42b POP
0x42c POP
0x42d POP
0x42e SWAP1
0x42f POP
0x430 ADD
0x431 SWAP3
0x432 POP
0x433 POP
0x434 POP
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP1
0x439 SWAP2
0x43a SUB
0x43b SWAP1
0x43c RETURN
---
0x429: JUMPDEST 
0x430: V248 = ADD V237 V232
0x435: V249 = 0x40
0x437: V250 = M[0x40]
0x43a: V251 = SUB V248 V250
0x43c: RETURN V250 V251
---
Entry stack: [V11, V360, V226, V226, V232, V235, V237, V237, V232, V235, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x43d
[0x43d:0x443]
---
Predecessors: [0x4c]
Successors: [0x444, 0x448]
---
0x43d JUMPDEST
0x43e CALLVALUE
0x43f ISZERO
0x440 PUSH2 0x448
0x443 JUMPI
---
0x43d: JUMPDEST 
0x43e: V252 = CALLVALUE
0x43f: V253 = ISZERO V252
0x440: V254 = 0x448
0x443: JUMPI 0x448 V253
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x444
[0x444:0x447]
---
Predecessors: [0x43d]
Successors: []
---
0x444 PUSH1 0x0
0x446 DUP1
0x447 REVERT
---
0x444: V255 = 0x0
0x447: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x448
[0x448:0x44f]
---
Predecessors: [0x43d]
Successors: [0x6bb]
---
0x448 JUMPDEST
0x449 PUSH2 0x450
0x44c PUSH2 0x6bb
0x44f JUMP
---
0x448: JUMPDEST 
0x449: V256 = 0x450
0x44c: V257 = 0x6bb
0x44f: JUMP 0x6bb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x450]
Exit stack: [V11, 0x450]

================================

Block 0x450
[0x450:0x491]
---
Predecessors: [0x715]
Successors: []
---
0x450 JUMPDEST
0x451 PUSH1 0x40
0x453 MLOAD
0x454 DUP1
0x455 DUP3
0x456 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46b AND
0x46c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x481 AND
0x482 DUP2
0x483 MSTORE
0x484 PUSH1 0x20
0x486 ADD
0x487 SWAP2
0x488 POP
0x489 POP
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP1
0x48e SWAP2
0x48f SUB
0x490 SWAP1
0x491 RETURN
---
0x450: JUMPDEST 
0x451: V258 = 0x40
0x453: V259 = M[0x40]
0x456: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x46c: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x481: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x483: M[V259] = V263
0x484: V264 = 0x20
0x486: V265 = ADD 0x20 V259
0x48a: V266 = 0x40
0x48c: V267 = M[0x40]
0x48f: V268 = SUB V265 V267
0x491: RETURN V267 V268
---
Entry stack: [V11, V414]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x492
[0x492:0x4e8]
---
Predecessors: [0x3c9]
Successors: [0x4e9, 0x4ea]
---
0x492 JUMPDEST
0x493 PUSH1 0x0
0x495 DUP1
0x496 SWAP1
0x497 SLOAD
0x498 SWAP1
0x499 PUSH2 0x100
0x49c EXP
0x49d SWAP1
0x49e DIV
0x49f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b4 AND
0x4b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ca AND
0x4cb CALLER
0x4cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e1 AND
0x4e2 EQ
0x4e3 ISZERO
0x4e4 ISZERO
0x4e5 PUSH2 0x4ea
0x4e8 JUMPI
---
0x492: JUMPDEST 
0x493: V269 = 0x0
0x497: V270 = S[0x0]
0x499: V271 = 0x100
0x49c: V272 = EXP 0x100 0x0
0x49e: V273 = DIV V270 0x1
0x49f: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x4b5: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ca: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4cb: V278 = CALLER
0x4cc: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4e2: V281 = EQ V280 V277
0x4e3: V282 = ISZERO V281
0x4e4: V283 = ISZERO V282
0x4e5: V284 = 0x4ea
0x4e8: JUMPI 0x4ea V283
---
Entry stack: [V11, 0x3d1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3d1]

================================

Block 0x4e9
[0x4e9:0x4e9]
---
Predecessors: [0x492]
Successors: []
---
0x4e9 INVALID
---
0x4e9: INVALID 
---
Entry stack: [V11, 0x3d1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3d1]

================================

Block 0x4ea
[0x4ea:0x55e]
---
Predecessors: [0x492]
Successors: [0x55f, 0x5cd]
---
0x4ea JUMPDEST
0x4eb PUSH1 0x1
0x4ed PUSH1 0x0
0x4ef SWAP1
0x4f0 SLOAD
0x4f1 SWAP1
0x4f2 PUSH2 0x100
0x4f5 EXP
0x4f6 SWAP1
0x4f7 DIV
0x4f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50d AND
0x50e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x523 AND
0x524 PUSH2 0x8fc
0x527 ADDRESS
0x528 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53d AND
0x53e BALANCE
0x53f SWAP1
0x540 DUP2
0x541 ISZERO
0x542 MUL
0x543 SWAP1
0x544 PUSH1 0x40
0x546 MLOAD
0x547 PUSH1 0x0
0x549 PUSH1 0x40
0x54b MLOAD
0x54c DUP1
0x54d DUP4
0x54e SUB
0x54f DUP2
0x550 DUP6
0x551 DUP9
0x552 DUP9
0x553 CALL
0x554 SWAP4
0x555 POP
0x556 POP
0x557 POP
0x558 POP
0x559 ISZERO
0x55a ISZERO
0x55b PUSH2 0x5cd
0x55e JUMPI
---
0x4ea: JUMPDEST 
0x4eb: V285 = 0x1
0x4ed: V286 = 0x0
0x4f0: V287 = S[0x1]
0x4f2: V288 = 0x100
0x4f5: V289 = EXP 0x100 0x0
0x4f7: V290 = DIV V287 0x1
0x4f8: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x50d: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x50e: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x523: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x524: V295 = 0x8fc
0x527: V296 = ADDRESS
0x528: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x53d: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x53e: V299 = BALANCE V298
0x541: V300 = ISZERO V299
0x542: V301 = MUL V300 0x8fc
0x544: V302 = 0x40
0x546: V303 = M[0x40]
0x547: V304 = 0x0
0x549: V305 = 0x40
0x54b: V306 = M[0x40]
0x54e: V307 = SUB V303 V306
0x553: V308 = CALL V301 V294 V299 V306 V307 V306 0x0
0x559: V309 = ISZERO V308
0x55a: V310 = ISZERO V309
0x55b: V311 = 0x5cd
0x55e: JUMPI 0x5cd V310
---
Entry stack: [V11, 0x3d1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3d1]

================================

Block 0x55f
[0x55f:0x5cc]
---
Predecessors: [0x4ea]
Successors: [0x5cd]
---
0x55f PUSH1 0x0
0x561 DUP1
0x562 SWAP1
0x563 SLOAD
0x564 SWAP1
0x565 PUSH2 0x100
0x568 EXP
0x569 SWAP1
0x56a DIV
0x56b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x580 AND
0x581 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x596 AND
0x597 PUSH2 0x8fc
0x59a ADDRESS
0x59b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b0 AND
0x5b1 BALANCE
0x5b2 SWAP1
0x5b3 DUP2
0x5b4 ISZERO
0x5b5 MUL
0x5b6 SWAP1
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba PUSH1 0x0
0x5bc PUSH1 0x40
0x5be MLOAD
0x5bf DUP1
0x5c0 DUP4
0x5c1 SUB
0x5c2 DUP2
0x5c3 DUP6
0x5c4 DUP9
0x5c5 DUP9
0x5c6 CALL
0x5c7 SWAP4
0x5c8 POP
0x5c9 POP
0x5ca POP
0x5cb POP
0x5cc POP
---
0x55f: V312 = 0x0
0x563: V313 = S[0x0]
0x565: V314 = 0x100
0x568: V315 = EXP 0x100 0x0
0x56a: V316 = DIV V313 0x1
0x56b: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x580: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x581: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x596: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x597: V321 = 0x8fc
0x59a: V322 = ADDRESS
0x59b: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b0: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x5b1: V325 = BALANCE V324
0x5b4: V326 = ISZERO V325
0x5b5: V327 = MUL V326 0x8fc
0x5b7: V328 = 0x40
0x5b9: V329 = M[0x40]
0x5ba: V330 = 0x0
0x5bc: V331 = 0x40
0x5be: V332 = M[0x40]
0x5c1: V333 = SUB V329 V332
0x5c6: V334 = CALL V327 V320 V325 V332 V333 V332 0x0
---
Entry stack: [V11, 0x3d1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3d1]

================================

Block 0x5cd
[0x5cd:0x5ce]
---
Predecessors: [0x4ea, 0x55f]
Successors: [0x3d1]
---
0x5cd JUMPDEST
0x5ce JUMP
---
0x5cd: JUMPDEST 
0x5ce: JUMP 0x3d1
---
Entry stack: [V11, 0x3d1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5cf
[0x5cf:0x5d6]
---
Predecessors: [0x3de]
Successors: [0x73d]
---
0x5cf JUMPDEST
0x5d0 PUSH2 0x5d7
0x5d3 PUSH2 0x73d
0x5d6 JUMP
---
0x5cf: JUMPDEST 
0x5d0: V335 = 0x5d7
0x5d3: V336 = 0x73d
0x5d6: JUMP 0x73d
---
Entry stack: [V11, 0x3e6]
Stack pops: 0
Stack additions: [0x5d7]
Exit stack: [V11, 0x3e6, 0x5d7]

================================

Block 0x5d7
[0x5d7:0x62d]
---
Predecessors: [0x73d]
Successors: [0x62e, 0x62f]
---
0x5d7 JUMPDEST
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db SWAP1
0x5dc SLOAD
0x5dd SWAP1
0x5de PUSH2 0x100
0x5e1 EXP
0x5e2 SWAP1
0x5e3 DIV
0x5e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f9 AND
0x5fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60f AND
0x610 CALLER
0x611 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x626 AND
0x627 EQ
0x628 ISZERO
0x629 ISZERO
0x62a PUSH2 0x62f
0x62d JUMPI
---
0x5d7: JUMPDEST 
0x5d8: V337 = 0x0
0x5dc: V338 = S[0x0]
0x5de: V339 = 0x100
0x5e1: V340 = EXP 0x100 0x0
0x5e3: V341 = DIV V338 0x1
0x5e4: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x5fa: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x610: V346 = CALLER
0x611: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x626: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x627: V349 = EQ V348 V345
0x628: V350 = ISZERO V349
0x629: V351 = ISZERO V350
0x62a: V352 = 0x62f
0x62d: JUMPI 0x62f V351
---
Entry stack: [V11, 0x3e6, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3e6, V417]

================================

Block 0x62e
[0x62e:0x62e]
---
Predecessors: [0x5d7]
Successors: []
---
0x62e INVALID
---
0x62e: INVALID 
---
Entry stack: [V11, 0x3e6, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3e6, V417]

================================

Block 0x62f
[0x62f:0x656]
---
Predecessors: [0x5d7]
Successors: [0x657, 0x6b1]
---
0x62f JUMPDEST
0x630 PUSH1 0x3
0x632 DUP1
0x633 SLOAD
0x634 DUP1
0x635 PUSH1 0x20
0x637 MUL
0x638 PUSH1 0x20
0x63a ADD
0x63b PUSH1 0x40
0x63d MLOAD
0x63e SWAP1
0x63f DUP2
0x640 ADD
0x641 PUSH1 0x40
0x643 MSTORE
0x644 DUP1
0x645 SWAP3
0x646 SWAP2
0x647 SWAP1
0x648 DUP2
0x649 DUP2
0x64a MSTORE
0x64b PUSH1 0x20
0x64d ADD
0x64e DUP3
0x64f DUP1
0x650 SLOAD
0x651 DUP1
0x652 ISZERO
0x653 PUSH2 0x6b1
0x656 JUMPI
---
0x62f: JUMPDEST 
0x630: V353 = 0x3
0x633: V354 = S[0x3]
0x635: V355 = 0x20
0x637: V356 = MUL 0x20 V354
0x638: V357 = 0x20
0x63a: V358 = ADD 0x20 V356
0x63b: V359 = 0x40
0x63d: V360 = M[0x40]
0x640: V361 = ADD V360 V358
0x641: V362 = 0x40
0x643: M[0x40] = V361
0x64a: M[V360] = V354
0x64b: V363 = 0x20
0x64d: V364 = ADD 0x20 V360
0x650: V365 = S[0x3]
0x652: V366 = ISZERO V365
0x653: V367 = 0x6b1
0x656: JUMPI 0x6b1 V366
---
Entry stack: [V11, 0x3e6, V417]
Stack pops: 0
Stack additions: [V360, 0x3, V354, V364, 0x3, V365]
Exit stack: [V11, 0x3e6, V417, V360, 0x3, V354, V364, 0x3, V365]

================================

Block 0x657
[0x657:0x666]
---
Predecessors: [0x62f]
Successors: [0x667]
---
0x657 PUSH1 0x20
0x659 MUL
0x65a DUP3
0x65b ADD
0x65c SWAP2
0x65d SWAP1
0x65e PUSH1 0x0
0x660 MSTORE
0x661 PUSH1 0x20
0x663 PUSH1 0x0
0x665 SHA3
0x666 SWAP1
---
0x657: V368 = 0x20
0x659: V369 = MUL 0x20 V365
0x65b: V370 = ADD V364 V369
0x65e: V371 = 0x0
0x660: M[0x0] = 0x3
0x661: V372 = 0x20
0x663: V373 = 0x0
0x665: V374 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x3e6, V417, V360, 0x3, V354, V364, 0x3, V365]
Stack pops: 3
Stack additions: [V370, V374, S2]
Exit stack: [V11, 0x3e6, V417, V360, 0x3, V354, V370, V374, V364]

================================

Block 0x667
[0x667:0x6b0]
---
Predecessors: [0x657, 0x667]
Successors: [0x667, 0x6b1]
---
0x667 JUMPDEST
0x668 DUP2
0x669 PUSH1 0x0
0x66b SWAP1
0x66c SLOAD
0x66d SWAP1
0x66e PUSH2 0x100
0x671 EXP
0x672 SWAP1
0x673 DIV
0x674 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x689 AND
0x68a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69f AND
0x6a0 DUP2
0x6a1 MSTORE
0x6a2 PUSH1 0x20
0x6a4 ADD
0x6a5 SWAP1
0x6a6 PUSH1 0x1
0x6a8 ADD
0x6a9 SWAP1
0x6aa DUP1
0x6ab DUP4
0x6ac GT
0x6ad PUSH2 0x667
0x6b0 JUMPI
---
0x667: JUMPDEST 
0x669: V375 = 0x0
0x66c: V376 = S[S1]
0x66e: V377 = 0x100
0x671: V378 = EXP 0x100 0x0
0x673: V379 = DIV V376 0x1
0x674: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x689: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x68a: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x69f: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x6a1: M[S0] = V383
0x6a2: V384 = 0x20
0x6a4: V385 = ADD 0x20 S0
0x6a6: V386 = 0x1
0x6a8: V387 = ADD 0x1 S1
0x6ac: V388 = GT V370 V385
0x6ad: V389 = 0x667
0x6b0: JUMPI 0x667 V388
---
Entry stack: [V11, 0x3e6, V417, V360, 0x3, V354, V370, S1, S0]
Stack pops: 3
Stack additions: [S2, V387, V385]
Exit stack: [V11, 0x3e6, V417, V360, 0x3, V354, V370, V387, V385]

================================

Block 0x6b1
[0x6b1:0x6ba]
---
Predecessors: [0x62f, 0x667]
Successors: [0x3e6]
---
0x6b1 JUMPDEST
0x6b2 POP
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 POP
0x6b7 SWAP1
0x6b8 POP
0x6b9 SWAP1
0x6ba JUMP
---
0x6b1: JUMPDEST 
0x6ba: JUMP 0x3e6
---
Entry stack: [V11, 0x3e6, V417, V360, 0x3, V354, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V360]

================================

Block 0x6bb
[0x6bb:0x713]
---
Predecessors: [0x448]
Successors: [0x714, 0x715]
---
0x6bb JUMPDEST
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf PUSH1 0x0
0x6c1 SWAP1
0x6c2 SLOAD
0x6c3 SWAP1
0x6c4 PUSH2 0x100
0x6c7 EXP
0x6c8 SWAP1
0x6c9 DIV
0x6ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6df AND
0x6e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f5 AND
0x6f6 CALLER
0x6f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70c AND
0x70d EQ
0x70e ISZERO
0x70f ISZERO
0x710 PUSH2 0x715
0x713 JUMPI
---
0x6bb: JUMPDEST 
0x6bc: V390 = 0x0
0x6bf: V391 = 0x0
0x6c2: V392 = S[0x0]
0x6c4: V393 = 0x100
0x6c7: V394 = EXP 0x100 0x0
0x6c9: V395 = DIV V392 0x1
0x6ca: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x6e0: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f5: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x6f6: V400 = CALLER
0x6f7: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x70c: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x70d: V403 = EQ V402 V399
0x70e: V404 = ISZERO V403
0x70f: V405 = ISZERO V404
0x710: V406 = 0x715
0x713: JUMPI 0x715 V405
---
Entry stack: [V11, 0x450]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x450, 0x0]

================================

Block 0x714
[0x714:0x714]
---
Predecessors: [0x6bb]
Successors: []
---
0x714 INVALID
---
0x714: INVALID 
---
Entry stack: [V11, 0x450, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x450, 0x0]

================================

Block 0x715
[0x715:0x73c]
---
Predecessors: [0x6bb]
Successors: [0x450]
---
0x715 JUMPDEST
0x716 PUSH1 0x1
0x718 PUSH1 0x0
0x71a SWAP1
0x71b SLOAD
0x71c SWAP1
0x71d PUSH2 0x100
0x720 EXP
0x721 SWAP1
0x722 DIV
0x723 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x738 AND
0x739 SWAP1
0x73a POP
0x73b SWAP1
0x73c JUMP
---
0x715: JUMPDEST 
0x716: V407 = 0x1
0x718: V408 = 0x0
0x71b: V409 = S[0x1]
0x71d: V410 = 0x100
0x720: V411 = EXP 0x100 0x0
0x722: V412 = DIV V409 0x1
0x723: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x738: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x73c: JUMP 0x450
---
Entry stack: [V11, 0x450, 0x0]
Stack pops: 2
Stack additions: [V414]
Exit stack: [V11, V414]

================================

Block 0x73d
[0x73d:0x750]
---
Predecessors: [0x5cf]
Successors: [0x5d7]
---
0x73d JUMPDEST
0x73e PUSH1 0x20
0x740 PUSH1 0x40
0x742 MLOAD
0x743 SWAP1
0x744 DUP2
0x745 ADD
0x746 PUSH1 0x40
0x748 MSTORE
0x749 DUP1
0x74a PUSH1 0x0
0x74c DUP2
0x74d MSTORE
0x74e POP
0x74f SWAP1
0x750 JUMP
---
0x73d: JUMPDEST 
0x73e: V415 = 0x20
0x740: V416 = 0x40
0x742: V417 = M[0x40]
0x745: V418 = ADD V417 0x20
0x746: V419 = 0x40
0x748: M[0x40] = V418
0x74a: V420 = 0x0
0x74d: M[V417] = 0x0
0x750: JUMP 0x5d7
---
Entry stack: [V11, 0x3e6, 0x5d7]
Stack pops: 1
Stack additions: [V417]
Exit stack: [V11, 0x3e6, V417]

================================

Block 0x751
[0x751:0x77c]
---
Predecessors: []
Successors: []
---
0x751 STOP
0x752 LOG1
0x753 PUSH6 0x627a7a723058
0x75a SHA3
0x75b MISSING 0xe0
0x75c MISSING 0xba
0x75d MISSING 0x4b
0x75e PUSH2 0x64ad
0x761 MISSING 0xb2
0x762 MSTORE8
0x763 MISSING 0x4f
0x764 ADD
0x765 MISSING 0xe1
0x766 MISSING 0xc
0x767 DUP16
0x768 MISSING 0x28
0x769 MISSING 0xd2
0x76a DUP7
0x76b REVERT
0x76c ISZERO
0x76d MISSING 0x22
0x76e STATICCALL
0x76f STOP
0x770 SWAP12
0x771 MISSING 0x49
0x772 MISSING 0xe9
0x773 MISSING 0xb2
0x774 LOG4
0x775 MISSING 0xe2
0x776 MISSING 0xa7
0x777 OR
0x778 STATICCALL
0x779 MISSING 0xd1
0x77a MISSING 0xe
0x77b STOP
0x77c MISSING 0x29
---
0x751: STOP 
0x752: LOG S0 S1 S2
0x753: V421 = 0x627a7a723058
0x75a: V422 = SHA3 0x627a7a723058 S3
0x75b: MISSING 0xe0
0x75c: MISSING 0xba
0x75d: MISSING 0x4b
0x75e: V423 = 0x64ad
0x761: MISSING 0xb2
0x762: M8[S0] = S1
0x763: MISSING 0x4f
0x764: V424 = ADD S0 S1
0x765: MISSING 0xe1
0x766: MISSING 0xc
0x768: MISSING 0x28
0x769: MISSING 0xd2
0x76b: REVERT S6 S0
0x76c: V425 = ISZERO S0
0x76d: MISSING 0x22
0x76e: V426 = STATICCALL S0 S1 S2 S3 S4 S5
0x76f: STOP 
0x771: MISSING 0x49
0x772: MISSING 0xe9
0x773: MISSING 0xb2
0x774: LOG S0 S1 S2 S3 S4 S5
0x775: MISSING 0xe2
0x776: MISSING 0xa7
0x777: V427 = OR S0 S1
0x778: V428 = STATICCALL V427 S2 S3 S4 S5 S6
0x779: MISSING 0xd1
0x77a: MISSING 0xe
0x77b: STOP 
0x77c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V422, 0x64ad, V424, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S1, S2, S3, S4, S5, S6, V425, V426, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V428]
Exit stack: []

================================

Function 0:
Public function signature: 0x770b80b6
Entry block: 0x3c9
Exit block: 0x3d1
Body: 0x3c9, 0x3d1, 0x492, 0x4e9, 0x4ea, 0x55f, 0x5cd

Function 1:
Public function signature: 0xd6cd4a02
Entry block: 0x3d3
Exit block: 0x429
Body: 0x3d3, 0x3da, 0x3de, 0x3e6, 0x40e, 0x417, 0x429, 0x5cf, 0x5d7, 0x62e, 0x62f, 0x657, 0x667, 0x6b1, 0x73d

Function 2:
Public function signature: 0xf00e6a2a
Entry block: 0x43d
Exit block: 0x450
Body: 0x43d, 0x444, 0x448, 0x450, 0x6bb, 0x714, 0x715

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x1cc
Body: 0x57, 0x75, 0x76, 0x7e, 0x8c, 0x9d, 0x9e, 0x115, 0x116, 0x12c, 0x12d, 0x194, 0x19d, 0x1cc, 0x1cd, 0x243, 0x250, 0x263, 0x264, 0x31c, 0x320, 0x32d, 0x331

