Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x56
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x56
0xa: JUMPI 0x56 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x61]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x2fb0c5e
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x61
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x2fb0c5e
0x1a: V12 = EQ V10 0x2fb0c5e
0x1b: V13 = 0x61
0x1e: JUMPI 0x61 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x6a]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0x6a
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0x6a
0x29: JUMPI 0x6a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xac]
---
0x2a DUP1
0x2b PUSH4 0x41c0e1b5
0x30 EQ
0x31 PUSH2 0xac
0x34 JUMPI
---
0x2b: V17 = 0x41c0e1b5
0x30: V18 = EQ 0x41c0e1b5 V10
0x31: V19 = 0xac
0x34: JUMPI 0xac V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xdb]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0xdb
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0xdb
0x3f: JUMPI 0xdb V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xed]
---
0x40 DUP1
0x41 PUSH4 0xb69ef8a8
0x46 EQ
0x47 PUSH2 0xed
0x4a JUMPI
---
0x41: V23 = 0xb69ef8a8
0x46: V24 = EQ 0xb69ef8a8 V10
0x47: V25 = 0xed
0x4a: JUMPI 0xed V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xf6]
---
0x4b DUP1
0x4c PUSH4 0xe97dcb62
0x51 EQ
0x52 PUSH2 0xf6
0x55 JUMPI
---
0x4c: V26 = 0xe97dcb62
0x51: V27 = EQ 0xe97dcb62 V10
0x52: V28 = 0xf6
0x55: JUMPI 0xf6 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x0, 0x4b]
Successors: [0xfa]
---
0x56 JUMPDEST
0x57 PUSH2 0x133
0x5a PUSH2 0x135
0x5d PUSH2 0xfa
0x60 JUMP
---
0x56: JUMPDEST 
0x57: V29 = 0x133
0x5a: V30 = 0x135
0x5d: V31 = 0xfa
0x60: JUMP 0xfa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x133, 0x135]
Exit stack: [V10, 0x133, 0x135]

================================

Block 0x61
[0x61:0x69]
---
Predecessors: [0xb]
Successors: [0x137]
---
0x61 JUMPDEST
0x62 PUSH2 0x137
0x65 PUSH1 0x4
0x67 SLOAD
0x68 DUP2
0x69 JUMP
---
0x61: JUMPDEST 
0x62: V32 = 0x137
0x65: V33 = 0x4
0x67: V34 = S[0x4]
0x69: JUMP 0x137
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x137, V34]
Exit stack: [V10, 0x137, V34]

================================

Block 0x6a
[0x6a:0x89]
---
Predecessors: [0x1f]
Successors: [0x8a, 0xa9]
---
0x6a JUMPDEST
0x6b PUSH2 0x133
0x6e PUSH1 0x4
0x70 CALLDATALOAD
0x71 PUSH1 0x3
0x73 SLOAD
0x74 PUSH1 0x1
0x76 PUSH1 0xa0
0x78 PUSH1 0x2
0x7a EXP
0x7b SUB
0x7c SWAP1
0x7d DUP2
0x7e AND
0x7f CALLER
0x80 SWAP2
0x81 SWAP1
0x82 SWAP2
0x83 AND
0x84 EQ
0x85 ISZERO
0x86 PUSH2 0xa9
0x89 JUMPI
---
0x6a: JUMPDEST 
0x6b: V35 = 0x133
0x6e: V36 = 0x4
0x70: V37 = CALLDATALOAD 0x4
0x71: V38 = 0x3
0x73: V39 = S[0x3]
0x74: V40 = 0x1
0x76: V41 = 0xa0
0x78: V42 = 0x2
0x7a: V43 = EXP 0x2 0xa0
0x7b: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x7f: V46 = CALLER
0x83: V47 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0x84: V48 = EQ V47 V45
0x85: V49 = ISZERO V48
0x86: V50 = 0xa9
0x89: JUMPI 0xa9 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x133, V37]
Exit stack: [V10, 0x133, V37]

================================

Block 0x8a
[0x8a:0xa8]
---
Predecessors: [0x6a]
Successors: [0xa9]
---
0x8a PUSH1 0x3
0x8c DUP1
0x8d SLOAD
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 NOT
0xa4 AND
0xa5 DUP3
0xa6 OR
0xa7 SWAP1
0xa8 SSTORE
---
0x8a: V51 = 0x3
0x8d: V52 = S[0x3]
0x8e: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V54 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V55 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V52
0xa6: V56 = OR V37 V55
0xa8: S[0x3] = V56
---
Entry stack: [V10, 0x133, V37]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x133, V37]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0x6a, 0x8a]
Successors: [0x133]
---
0xa9 JUMPDEST
0xaa POP
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x133
---
Entry stack: [V10, 0x133, V37]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xc8]
---
Predecessors: [0x2a]
Successors: [0xc9, 0x135]
---
0xac JUMPDEST
0xad PUSH2 0x133
0xb0 PUSH1 0x3
0xb2 SLOAD
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb SWAP1
0xbc DUP2
0xbd AND
0xbe CALLER
0xbf SWAP2
0xc0 SWAP1
0xc1 SWAP2
0xc2 AND
0xc3 EQ
0xc4 ISZERO
0xc5 PUSH2 0x135
0xc8 JUMPI
---
0xac: JUMPDEST 
0xad: V57 = 0x133
0xb0: V58 = 0x3
0xb2: V59 = S[0x3]
0xb3: V60 = 0x1
0xb5: V61 = 0xa0
0xb7: V62 = 0x2
0xb9: V63 = EXP 0x2 0xa0
0xba: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xbe: V66 = CALLER
0xc2: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V68 = EQ V67 V65
0xc4: V69 = ISZERO V68
0xc5: V70 = 0x135
0xc8: JUMPI 0x135 V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x133]
Exit stack: [V10, 0x133]

================================

Block 0xc9
[0xc9:0xda]
---
Predecessors: [0xac]
Successors: []
---
0xc9 PUSH1 0x3
0xcb SLOAD
0xcc PUSH1 0x0
0xce PUSH1 0x4
0xd0 SSTORE
0xd1 PUSH1 0x1
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SUB
0xd9 AND
0xda SELFDESTRUCT
---
0xc9: V71 = 0x3
0xcb: V72 = S[0x3]
0xcc: V73 = 0x0
0xce: V74 = 0x4
0xd0: S[0x4] = 0x0
0xd1: V75 = 0x1
0xd3: V76 = 0xa0
0xd5: V77 = 0x2
0xd7: V78 = EXP 0x2 0xa0
0xd8: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xda: SELFDESTRUCT V80
---
Entry stack: [V10, 0x133]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x133]

================================

Block 0xdb
[0xdb:0xec]
---
Predecessors: [0x35]
Successors: [0x149]
---
0xdb JUMPDEST
0xdc PUSH2 0x149
0xdf PUSH1 0x3
0xe1 SLOAD
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea AND
0xeb DUP2
0xec JUMP
---
0xdb: JUMPDEST 
0xdc: V81 = 0x149
0xdf: V82 = 0x3
0xe1: V83 = S[0x3]
0xe2: V84 = 0x1
0xe4: V85 = 0xa0
0xe6: V86 = 0x2
0xe8: V87 = EXP 0x2 0xa0
0xe9: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xec: JUMP 0x149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x149, V89]
Exit stack: [V10, 0x149, V89]

================================

Block 0xed
[0xed:0xf5]
---
Predecessors: [0x40]
Successors: [0x137]
---
0xed JUMPDEST
0xee PUSH2 0x137
0xf1 PUSH1 0x1
0xf3 SLOAD
0xf4 DUP2
0xf5 JUMP
---
0xed: JUMPDEST 
0xee: V90 = 0x137
0xf1: V91 = 0x1
0xf3: V92 = S[0x1]
0xf5: JUMP 0x137
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x137, V92]
Exit stack: [V10, 0x137, V92]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0x4b]
Successors: [0xfa]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x133
---
0xf6: JUMPDEST 
0xf7: V93 = 0x133
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x133]
Exit stack: [V10, 0x133]

================================

Block 0xfa
[0xfa:0x10e]
---
Predecessors: [0x56, 0xf6]
Successors: [0x10f, 0x192]
---
0xfa JUMPDEST
0xfb PUSH1 0x0
0xfd PUSH1 0x0
0xff PUSH1 0x0
0x101 PUSH1 0x4
0x103 PUSH1 0x0
0x105 POP
0x106 SLOAD
0x107 PUSH1 0x0
0x109 EQ
0x10a ISZERO
0x10b PUSH2 0x192
0x10e JUMPI
---
0xfa: JUMPDEST 
0xfb: V94 = 0x0
0xfd: V95 = 0x0
0xff: V96 = 0x0
0x101: V97 = 0x4
0x103: V98 = 0x0
0x106: V99 = S[0x4]
0x107: V100 = 0x0
0x109: V101 = EQ 0x0 V99
0x10a: V102 = ISZERO V101
0x10b: V103 = 0x192
0x10e: JUMPI 0x192 V102
---
Entry stack: [V10, S1, {0x133, 0x135}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0x133, 0x135}, 0x0, 0x0, 0x0]

================================

Block 0x10f
[0x10f:0x132]
---
Predecessors: [0xfa]
Successors: [0x18d]
---
0x10f PUSH1 0x40
0x111 MLOAD
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a CALLER
0x11b AND
0x11c SWAP1
0x11d DUP3
0x11e SWAP1
0x11f CALLVALUE
0x120 SWAP1
0x121 DUP3
0x122 DUP2
0x123 DUP2
0x124 DUP2
0x125 DUP6
0x126 DUP9
0x127 DUP4
0x128 CALL
0x129 SWAP4
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e POP
0x12f PUSH2 0x18d
0x132 JUMP
---
0x10f: V104 = 0x40
0x111: V105 = M[0x40]
0x112: V106 = 0x1
0x114: V107 = 0xa0
0x116: V108 = 0x2
0x118: V109 = EXP 0x2 0xa0
0x119: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a: V111 = CALLER
0x11b: V112 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V113 = CALLVALUE
0x128: V114 = CALL 0x0 V112 V113 V105 0x0 V105 0x0
0x12f: V115 = 0x18d
0x132: JUMP 0x18d
---
Entry stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]

================================

Block 0x133
[0x133:0x134]
---
Predecessors: [0xa9, 0x135, 0x18d]
Successors: []
---
0x133 JUMPDEST
0x134 STOP
---
0x133: JUMPDEST 
0x134: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x135
[0x135:0x136]
---
Predecessors: [0xac, 0x18d]
Successors: [0x133]
---
0x135 JUMPDEST
0x136 JUMP
---
0x135: JUMPDEST 
0x136: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x137
[0x137:0x148]
---
Predecessors: [0x61, 0xed]
Successors: []
---
0x137 JUMPDEST
0x138 PUSH1 0x40
0x13a DUP1
0x13b MLOAD
0x13c SWAP2
0x13d DUP3
0x13e MSTORE
0x13f MLOAD
0x140 SWAP1
0x141 DUP2
0x142 SWAP1
0x143 SUB
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP1
0x148 RETURN
---
0x137: JUMPDEST 
0x138: V116 = 0x40
0x13b: V117 = M[0x40]
0x13e: M[V117] = S0
0x13f: V118 = M[0x40]
0x143: V119 = SUB V117 V118
0x144: V120 = 0x20
0x146: V121 = ADD 0x20 V119
0x148: RETURN V118 V121
---
Entry stack: [V10, 0x137, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x137]

================================

Block 0x149
[0x149:0x165]
---
Predecessors: [0xdb]
Successors: []
---
0x149 JUMPDEST
0x14a PUSH1 0x40
0x14c DUP1
0x14d MLOAD
0x14e PUSH1 0x1
0x150 PUSH1 0xa0
0x152 PUSH1 0x2
0x154 EXP
0x155 SUB
0x156 SWAP3
0x157 SWAP1
0x158 SWAP3
0x159 AND
0x15a DUP3
0x15b MSTORE
0x15c MLOAD
0x15d SWAP1
0x15e DUP2
0x15f SWAP1
0x160 SUB
0x161 PUSH1 0x20
0x163 ADD
0x164 SWAP1
0x165 RETURN
---
0x149: JUMPDEST 
0x14a: V122 = 0x40
0x14d: V123 = M[0x40]
0x14e: V124 = 0x1
0x150: V125 = 0xa0
0x152: V126 = 0x2
0x154: V127 = EXP 0x2 0xa0
0x155: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x15b: M[V123] = V129
0x15c: V130 = M[0x40]
0x160: V131 = SUB V123 V130
0x161: V132 = 0x20
0x163: V133 = ADD 0x20 V131
0x165: RETURN V130 V133
---
Entry stack: [V10, 0x149, V89]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x149]

================================

Block 0x166
[0x166:0x18c]
---
Predecessors: [0x25c]
Successors: [0x18d]
---
0x166 JUMPDEST
0x167 PUSH1 0x40
0x169 MLOAD
0x16a PUSH1 0x2
0x16c DUP5
0x16d MUL
0x16e SWAP3
0x16f POP
0x170 PUSH1 0x1
0x172 PUSH1 0xa0
0x174 PUSH1 0x2
0x176 EXP
0x177 SUB
0x178 CALLER
0x179 AND
0x17a SWAP1
0x17b PUSH1 0x0
0x17d SWAP1
0x17e DUP5
0x17f SWAP1
0x180 DUP3
0x181 DUP2
0x182 DUP2
0x183 DUP2
0x184 DUP6
0x185 DUP9
0x186 DUP4
0x187 CALL
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c POP
---
0x166: JUMPDEST 
0x167: V134 = 0x40
0x169: V135 = M[0x40]
0x16a: V136 = 0x2
0x16d: V137 = MUL S2 0x2
0x170: V138 = 0x1
0x172: V139 = 0xa0
0x174: V140 = 0x2
0x176: V141 = EXP 0x2 0xa0
0x177: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x178: V143 = CALLER
0x179: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V145 = 0x0
0x187: V146 = CALL 0x0 V144 V137 V135 0x0 V135 0x0
---
Entry stack: [V10, S4, {0x133, 0x135}, S2, 0x0, V241]
Stack pops: 3
Stack additions: [S2, V137, S0]
Exit stack: [V10, S4, {0x133, 0x135}, S2, V137, V241]

================================

Block 0x18d
[0x18d:0x191]
---
Predecessors: [0x10f, 0x166, 0x1b7, 0x290]
Successors: [0x133, 0x135]
---
0x18d JUMPDEST
0x18e POP
0x18f POP
0x190 POP
0x191 JUMP
---
0x18d: JUMPDEST 
0x191: JUMP {0x133, 0x135}
---
Entry stack: [V10, S4, {0x133, 0x135}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x192
[0x192:0x19d]
---
Predecessors: [0xfa]
Successors: [0x19e, 0x1a7]
---
0x192 JUMPDEST
0x193 PUSH1 0x5
0x195 SLOAD
0x196 PUSH1 0x1
0x198 EQ
0x199 ISZERO
0x19a PUSH2 0x1a7
0x19d JUMPI
---
0x192: JUMPDEST 
0x193: V147 = 0x5
0x195: V148 = S[0x5]
0x196: V149 = 0x1
0x198: V150 = EQ 0x1 V148
0x199: V151 = ISZERO V150
0x19a: V152 = 0x1a7
0x19d: JUMPI 0x1a7 V151
---
Entry stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]

================================

Block 0x19e
[0x19e:0x1a6]
---
Predecessors: [0x192]
Successors: [0x1a7]
---
0x19e CALLVALUE
0x19f PUSH1 0x1
0x1a1 SSTORE
0x1a2 PUSH1 0x0
0x1a4 PUSH1 0x5
0x1a6 SSTORE
---
0x19e: V153 = CALLVALUE
0x19f: V154 = 0x1
0x1a1: S[0x1] = V153
0x1a2: V155 = 0x0
0x1a4: V156 = 0x5
0x1a6: S[0x5] = 0x0
---
Entry stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]

================================

Block 0x1a7
[0x1a7:0x1b6]
---
Predecessors: [0x192, 0x19e]
Successors: [0x1b7, 0x1dc]
---
0x1a7 JUMPDEST
0x1a8 PUSH7 0x2386f26fc10000
0x1b0 CALLVALUE
0x1b1 LT
0x1b2 ISZERO
0x1b3 PUSH2 0x1dc
0x1b6 JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V157 = 0x2386f26fc10000
0x1b0: V158 = CALLVALUE
0x1b1: V159 = LT V158 0x2386f26fc10000
0x1b2: V160 = ISZERO V159
0x1b3: V161 = 0x1dc
0x1b6: JUMPI 0x1dc V160
---
Entry stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]

================================

Block 0x1b7
[0x1b7:0x1db]
---
Predecessors: [0x1a7]
Successors: [0x18d]
---
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 CALLER
0x1c3 AND
0x1c4 SWAP1
0x1c5 PUSH1 0x0
0x1c7 SWAP1
0x1c8 CALLVALUE
0x1c9 SWAP1
0x1ca DUP3
0x1cb DUP2
0x1cc DUP2
0x1cd DUP2
0x1ce DUP6
0x1cf DUP9
0x1d0 DUP4
0x1d1 CALL
0x1d2 SWAP4
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 PUSH2 0x18d
0x1db JUMP
---
0x1b7: V162 = 0x40
0x1b9: V163 = M[0x40]
0x1ba: V164 = 0x1
0x1bc: V165 = 0xa0
0x1be: V166 = 0x2
0x1c0: V167 = EXP 0x2 0xa0
0x1c1: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V169 = CALLER
0x1c3: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V171 = 0x0
0x1c8: V172 = CALLVALUE
0x1d1: V173 = CALL 0x0 V170 V172 V163 0x0 V163 0x0
0x1d8: V174 = 0x18d
0x1db: JUMP 0x18d
---
Entry stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]

================================

Block 0x1dc
[0x1dc:0x22a]
---
Predecessors: [0x1a7]
Successors: [0x22b, 0x25c]
---
0x1dc JUMPDEST
0x1dd PUSH1 0xa
0x1df CALLVALUE
0x1e0 DIV
0x1e1 PUSH1 0x0
0x1e3 DUP2
0x1e4 DUP2
0x1e5 SSTORE
0x1e6 PUSH1 0x3
0x1e8 SLOAD
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 SWAP2
0x1f5 SWAP1
0x1f6 SWAP2
0x1f7 AND
0x1f8 SWAP3
0x1f9 SWAP1
0x1fa DUP3
0x1fb DUP2
0x1fc DUP2
0x1fd DUP2
0x1fe DUP6
0x1ff DUP9
0x200 DUP4
0x201 CALL
0x202 POP
0x203 POP
0x204 POP
0x205 DUP1
0x206 SSTORE
0x207 POP
0x208 PUSH1 0x1
0x20a SLOAD
0x20b PUSH1 0xa
0x20d PUSH1 0x8
0x20f SWAP1
0x210 SWAP2
0x211 MUL
0x212 DUP2
0x213 SWAP1
0x214 DIV
0x215 PUSH1 0x2
0x217 DUP2
0x218 SWAP1
0x219 SSTORE
0x21a PUSH1 0x9
0x21c CALLVALUE
0x21d MUL
0x21e SWAP2
0x21f SWAP1
0x220 SWAP2
0x221 DIV
0x222 SWAP4
0x223 POP
0x224 DUP4
0x225 GT
0x226 ISZERO
0x227 PUSH2 0x25c
0x22a JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V175 = 0xa
0x1df: V176 = CALLVALUE
0x1e0: V177 = DIV V176 0xa
0x1e1: V178 = 0x0
0x1e5: S[0x0] = V177
0x1e6: V179 = 0x3
0x1e8: V180 = S[0x3]
0x1e9: V181 = 0x40
0x1eb: V182 = M[0x40]
0x1ec: V183 = 0x1
0x1ee: V184 = 0xa0
0x1f0: V185 = 0x2
0x1f2: V186 = EXP 0x2 0xa0
0x1f3: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x201: V189 = CALL 0x0 V188 V177 V182 0x0 V182 0x0
0x206: S[0x0] = 0x0
0x208: V190 = 0x1
0x20a: V191 = S[0x1]
0x20b: V192 = 0xa
0x20d: V193 = 0x8
0x211: V194 = MUL V191 0x8
0x214: V195 = DIV V194 0xa
0x215: V196 = 0x2
0x219: S[0x2] = V195
0x21a: V197 = 0x9
0x21c: V198 = CALLVALUE
0x21d: V199 = MUL V198 0x9
0x221: V200 = DIV V199 0xa
0x225: V201 = GT V200 V195
0x226: V202 = ISZERO V201
0x227: V203 = 0x25c
0x22a: JUMPI 0x25c V202
---
Entry stack: [V10, S4, {0x133, 0x135}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V200, S1, S0]
Exit stack: [V10, S4, {0x133, 0x135}, V200, 0x0, 0x0]

================================

Block 0x22b
[0x22b:0x25b]
---
Predecessors: [0x1dc]
Successors: [0x25c]
---
0x22b CALLER
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 AND
0x235 PUSH1 0x0
0x237 PUSH1 0x2
0x239 PUSH1 0x0
0x23b POP
0x23c SLOAD
0x23d DUP6
0x23e SUB
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 SWAP1
0x244 POP
0x245 PUSH1 0x0
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP4
0x24c SUB
0x24d DUP2
0x24e DUP6
0x24f DUP9
0x250 DUP9
0x251 CALL
0x252 POP
0x253 POP
0x254 PUSH1 0x2
0x256 SLOAD
0x257 SWAP6
0x258 POP
0x259 POP
0x25a POP
0x25b POP
---
0x22b: V204 = CALLER
0x22c: V205 = 0x1
0x22e: V206 = 0xa0
0x230: V207 = 0x2
0x232: V208 = EXP 0x2 0xa0
0x233: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x234: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x235: V211 = 0x0
0x237: V212 = 0x2
0x239: V213 = 0x0
0x23c: V214 = S[0x2]
0x23e: V215 = SUB V200 V214
0x23f: V216 = 0x40
0x241: V217 = M[0x40]
0x245: V218 = 0x0
0x247: V219 = 0x40
0x249: V220 = M[0x40]
0x24c: V221 = SUB V217 V220
0x251: V222 = CALL 0x0 V210 V215 V220 V221 V220 0x0
0x254: V223 = 0x2
0x256: V224 = S[0x2]
---
Entry stack: [V10, S4, {0x133, 0x135}, V200, 0x0, 0x0]
Stack pops: 3
Stack additions: [V224, S1, S0]
Exit stack: [V10, S4, {0x133, 0x135}, V224, 0x0, 0x0]

================================

Block 0x25c
[0x25c:0x28f]
---
Predecessors: [0x1dc, 0x22b]
Successors: [0x166, 0x290]
---
0x25c JUMPDEST
0x25d PUSH1 0x40
0x25f DUP1
0x260 MLOAD
0x261 TIMESTAMP
0x262 DUP2
0x263 MSTORE
0x264 SWAP1
0x265 MLOAD
0x266 SWAP1
0x267 DUP2
0x268 SWAP1
0x269 SUB
0x26a PUSH1 0x20
0x26c ADD
0x26d SWAP1
0x26e SHA3
0x26f GAS
0x270 PUSH1 0x40
0x272 DUP1
0x273 MLOAD
0x274 SWAP2
0x275 DUP3
0x276 MSTORE
0x277 MLOAD
0x278 SWAP1
0x279 DUP2
0x27a SWAP1
0x27b SUB
0x27c PUSH1 0x20
0x27e ADD
0x27f SWAP1
0x280 SHA3
0x281 ADD
0x282 SWAP1
0x283 POP
0x284 PUSH1 0x2
0x286 DUP2
0x287 MOD
0x288 PUSH1 0x0
0x28a EQ
0x28b ISZERO
0x28c PUSH2 0x166
0x28f JUMPI
---
0x25c: JUMPDEST 
0x25d: V225 = 0x40
0x260: V226 = M[0x40]
0x261: V227 = TIMESTAMP
0x263: M[V226] = V227
0x265: V228 = M[0x40]
0x269: V229 = SUB V226 V228
0x26a: V230 = 0x20
0x26c: V231 = ADD 0x20 V229
0x26e: V232 = SHA3 V228 V231
0x26f: V233 = GAS
0x270: V234 = 0x40
0x273: V235 = M[0x40]
0x276: M[V235] = V233
0x277: V236 = M[0x40]
0x27b: V237 = SUB V235 V236
0x27c: V238 = 0x20
0x27e: V239 = ADD 0x20 V237
0x280: V240 = SHA3 V236 V239
0x281: V241 = ADD V240 V232
0x284: V242 = 0x2
0x287: V243 = MOD V241 0x2
0x288: V244 = 0x0
0x28a: V245 = EQ 0x0 V243
0x28b: V246 = ISZERO V245
0x28c: V247 = 0x166
0x28f: JUMPI 0x166 V246
---
Entry stack: [V10, S4, {0x133, 0x135}, S2, 0x0, 0x0]
Stack pops: 1
Stack additions: [V241]
Exit stack: [V10, S4, {0x133, 0x135}, S2, 0x0, V241]

================================

Block 0x290
[0x290:0x29b]
---
Predecessors: [0x25c]
Successors: [0x18d]
---
0x290 PUSH1 0x1
0x292 DUP1
0x293 SLOAD
0x294 DUP5
0x295 ADD
0x296 SWAP1
0x297 SSTORE
0x298 PUSH2 0x18d
0x29b JUMP
---
0x290: V248 = 0x1
0x293: V249 = S[0x1]
0x295: V250 = ADD S2 V249
0x297: S[0x1] = V250
0x298: V251 = 0x18d
0x29b: JUMP 0x18d
---
Entry stack: [V10, S4, {0x133, 0x135}, S2, 0x0, V241]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x133, 0x135}, S2, 0x0, V241]

================================

Function 0:
Public function signature: 0x2fb0c5e
Entry block: 0x61
Exit block: 0x137
Body: 0x61, 0x137

Function 1:
Public function signature: 0x13af4035
Entry block: 0x6a
Exit block: 0x133
Body: 0x6a, 0x8a, 0xa9, 0x133

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xac
Exit block: 0x133
Body: 0xac, 0xc9, 0x133, 0x135

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xdb
Exit block: 0x149
Body: 0xdb, 0x149

Function 4:
Public function signature: 0xb69ef8a8
Entry block: 0xed
Exit block: 0x137
Body: 0xed, 0x137

Function 5:
Public function signature: 0xe97dcb62
Entry block: 0xf6
Exit block: 0x133
Body: 0xf6, 0xfa, 0x10f, 0x133, 0x135, 0x166, 0x18d, 0x192, 0x19e, 0x1a7, 0x1b7, 0x1dc, 0x22b, 0x25c, 0x290

Function 6:
Public fallback function
Entry block: 0x56
Exit block: 0x133
Body: 0x56, 0xfa, 0x10f, 0x133, 0x135, 0x166, 0x18d, 0x192, 0x19e, 0x1a7, 0x1b7, 0x1dc, 0x22b, 0x25c, 0x290

