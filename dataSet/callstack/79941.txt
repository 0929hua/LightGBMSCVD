Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x3c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x5b2329d4
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x3c
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x5b2329d4
0x14: V9 = EQ V7 0x5b2329d4
0x15: V10 = 0x3c
0x18: JUMPI 0x3c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x162]
---
0x19 DUP1
0x1a PUSH4 0x9d274eca
0x1f EQ
0x20 PUSH2 0x162
0x23 JUMPI
---
0x1a: V11 = 0x9d274eca
0x1f: V12 = EQ 0x9d274eca V7
0x20: V13 = 0x162
0x23: JUMPI 0x162 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x196]
---
0x24 DUP1
0x25 PUSH4 0xab7b1c89
0x2a EQ
0x2b PUSH2 0x196
0x2e JUMPI
---
0x25: V14 = 0xab7b1c89
0x2a: V15 = EQ 0xab7b1c89 V7
0x2b: V16 = 0x196
0x2e: JUMPI 0x196 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x196]
---
0x2f DUP1
0x30 PUSH4 0xc1cbbca7
0x35 EQ
0x36 PUSH2 0x196
0x39 JUMPI
---
0x30: V17 = 0xc1cbbca7
0x35: V18 = EQ 0xc1cbbca7 V7
0x36: V19 = 0x196
0x39: JUMPI 0x196 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x3b]
---
Predecessors: [0x2f, 0x196]
Successors: []
---
0x3a JUMPDEST
0x3b STOP
---
0x3a: JUMPDEST 
0x3b: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3c
[0x3c:0x60]
---
Predecessors: [0x0]
Successors: [0x61, 0x1f4]
---
0x3c JUMPDEST
0x3d PUSH2 0x184
0x40 PUSH1 0x4
0x42 CALLDATALOAD
0x43 PUSH1 0x0
0x45 DUP2
0x46 DUP2
0x47 MSTORE
0x48 PUSH1 0x1
0x4a PUSH1 0x20
0x4c MSTORE
0x4d PUSH1 0x40
0x4f DUP2
0x50 SHA3
0x51 PUSH1 0x2
0x53 DUP2
0x54 ADD
0x55 SLOAD
0x56 DUP3
0x57 SWAP1
0x58 DUP2
0x59 SWAP1
0x5a NUMBER
0x5b SWAP1
0x5c GT
0x5d PUSH2 0x1f4
0x60 JUMPI
---
0x3c: JUMPDEST 
0x3d: V20 = 0x184
0x40: V21 = 0x4
0x42: V22 = CALLDATALOAD 0x4
0x43: V23 = 0x0
0x47: M[0x0] = V22
0x48: V24 = 0x1
0x4a: V25 = 0x20
0x4c: M[0x20] = 0x1
0x4d: V26 = 0x40
0x50: V27 = SHA3 0x0 0x40
0x51: V28 = 0x2
0x54: V29 = ADD V27 0x2
0x55: V30 = S[V29]
0x5a: V31 = NUMBER
0x5c: V32 = GT V30 V31
0x5d: V33 = 0x1f4
0x60: JUMPI 0x1f4 V32
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x184, V22, 0x0, V27, 0x0, 0x0]
Exit stack: [V7, 0x184, V22, 0x0, V27, 0x0, 0x0]

================================

Block 0x61
[0x61:0x71]
---
Predecessors: [0x3c]
Successors: [0x72]
---
0x61 POP
0x62 DUP2
0x63 SLOAD
0x64 PUSH1 0x2
0x66 DUP4
0x67 ADD
0x68 DUP3
0x69 SWAP1
0x6a SSTORE
0x6b PUSH1 0x1
0x6d DUP4
0x6e ADD
0x6f DUP3
0x70 SWAP1
0x71 SSTORE
---
0x63: V34 = S[V27]
0x64: V35 = 0x2
0x67: V36 = ADD V27 0x2
0x6a: S[V36] = 0x0
0x6b: V37 = 0x1
0x6e: V38 = ADD V27 0x1
0x71: S[V38] = 0x0
---
Entry stack: [V7, 0x184, V22, 0x0, V27, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V34]
Exit stack: [V7, 0x184, V22, 0x0, V27, 0x0, V34]

================================

Block 0x72
[0x72:0x7b]
---
Predecessors: [0x61, 0x7c]
Successors: [0x7c, 0x1ef]
---
0x72 JUMPDEST
0x73 DUP1
0x74 DUP3
0x75 GT
0x76 ISZERO
0x77 ISZERO
0x78 PUSH2 0x1ef
0x7b JUMPI
---
0x72: JUMPDEST 
0x75: V39 = GT S1 V34
0x76: V40 = ISZERO V39
0x77: V41 = ISZERO V40
0x78: V42 = 0x1ef
0x7b: JUMPI 0x1ef V41
---
Entry stack: [V7, 0x184, V22, 0x0, V27, S1, V34]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x184, V22, 0x0, V27, S1, V34]

================================

Block 0x7c
[0x7c:0x161]
---
Predecessors: [0x72]
Successors: [0x72]
---
0x7c DUP3
0x7d PUSH1 0x3
0x7f ADD
0x80 PUSH1 0x0
0x82 POP
0x83 PUSH1 0x0
0x85 DUP4
0x86 DUP2
0x87 MSTORE
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP1
0x8c DUP2
0x8d MSTORE
0x8e PUSH1 0x20
0x90 ADD
0x91 PUSH1 0x0
0x93 SHA3
0x94 PUSH1 0x0
0x96 POP
0x97 PUSH1 0x0
0x99 ADD
0x9a PUSH1 0x0
0x9c SWAP1
0x9d SLOAD
0x9e SWAP1
0x9f PUSH2 0x100
0xa2 EXP
0xa3 SWAP1
0xa4 DIV
0xa5 PUSH1 0x1
0xa7 PUSH1 0xa0
0xa9 PUSH1 0x2
0xab EXP
0xac SUB
0xad AND
0xae PUSH1 0x1
0xb0 PUSH1 0xa0
0xb2 PUSH1 0x2
0xb4 EXP
0xb5 SUB
0xb6 AND
0xb7 PUSH1 0x0
0xb9 DUP5
0xba PUSH1 0x3
0xbc ADD
0xbd PUSH1 0x0
0xbf POP
0xc0 PUSH1 0x0
0xc2 DUP6
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP1
0xc9 DUP2
0xca MSTORE
0xcb PUSH1 0x20
0xcd ADD
0xce PUSH1 0x0
0xd0 SHA3
0xd1 PUSH1 0x0
0xd3 POP
0xd4 PUSH1 0x1
0xd6 ADD
0xd7 PUSH1 0x0
0xd9 POP
0xda SLOAD
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf SWAP1
0xe0 POP
0xe1 PUSH1 0x0
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 DUP4
0xe8 SUB
0xe9 DUP2
0xea DUP6
0xeb DUP9
0xec DUP9
0xed CALL
0xee SWAP4
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 PUSH1 0x0
0xf6 DUP4
0xf7 PUSH1 0x3
0xf9 ADD
0xfa PUSH1 0x0
0xfc POP
0xfd PUSH1 0x0
0xff DUP5
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP1
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x20
0x10a ADD
0x10b PUSH1 0x0
0x10d SHA3
0x10e PUSH1 0x0
0x110 POP
0x111 PUSH1 0x0
0x113 ADD
0x114 PUSH1 0x0
0x116 PUSH2 0x100
0x119 EXP
0x11a DUP2
0x11b SLOAD
0x11c DUP2
0x11d PUSH1 0x1
0x11f PUSH1 0xa0
0x121 PUSH1 0x2
0x123 EXP
0x124 SUB
0x125 MUL
0x126 NOT
0x127 AND
0x128 SWAP1
0x129 DUP4
0x12a MUL
0x12b OR
0x12c SWAP1
0x12d SSTORE
0x12e POP
0x12f PUSH1 0x0
0x131 DUP4
0x132 PUSH1 0x3
0x134 ADD
0x135 PUSH1 0x0
0x137 POP
0x138 PUSH1 0x0
0x13a DUP5
0x13b DUP2
0x13c MSTORE
0x13d PUSH1 0x20
0x13f ADD
0x140 SWAP1
0x141 DUP2
0x142 MSTORE
0x143 PUSH1 0x20
0x145 ADD
0x146 PUSH1 0x0
0x148 SHA3
0x149 PUSH1 0x0
0x14b POP
0x14c PUSH1 0x1
0x14e ADD
0x14f PUSH1 0x0
0x151 POP
0x152 DUP2
0x153 SWAP1
0x154 SSTORE
0x155 POP
0x156 DUP2
0x157 DUP1
0x158 PUSH1 0x1
0x15a ADD
0x15b SWAP3
0x15c POP
0x15d POP
0x15e PUSH2 0x72
0x161 JUMP
---
0x7d: V43 = 0x3
0x7f: V44 = ADD 0x3 V27
0x80: V45 = 0x0
0x83: V46 = 0x0
0x87: M[0x0] = S1
0x88: V47 = 0x20
0x8a: V48 = ADD 0x20 0x0
0x8d: M[0x20] = V44
0x8e: V49 = 0x20
0x90: V50 = ADD 0x20 0x20
0x91: V51 = 0x0
0x93: V52 = SHA3 0x0 0x40
0x94: V53 = 0x0
0x97: V54 = 0x0
0x99: V55 = ADD 0x0 V52
0x9a: V56 = 0x0
0x9d: V57 = S[V55]
0x9f: V58 = 0x100
0xa2: V59 = EXP 0x100 0x0
0xa4: V60 = DIV V57 0x1
0xa5: V61 = 0x1
0xa7: V62 = 0xa0
0xa9: V63 = 0x2
0xab: V64 = EXP 0x2 0xa0
0xac: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xae: V67 = 0x1
0xb0: V68 = 0xa0
0xb2: V69 = 0x2
0xb4: V70 = EXP 0x2 0xa0
0xb5: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xb7: V73 = 0x0
0xba: V74 = 0x3
0xbc: V75 = ADD 0x3 V27
0xbd: V76 = 0x0
0xc0: V77 = 0x0
0xc4: M[0x0] = S1
0xc5: V78 = 0x20
0xc7: V79 = ADD 0x20 0x0
0xca: M[0x20] = V75
0xcb: V80 = 0x20
0xcd: V81 = ADD 0x20 0x20
0xce: V82 = 0x0
0xd0: V83 = SHA3 0x0 0x40
0xd1: V84 = 0x0
0xd4: V85 = 0x1
0xd6: V86 = ADD 0x1 V83
0xd7: V87 = 0x0
0xda: V88 = S[V86]
0xdb: V89 = 0x40
0xdd: V90 = M[0x40]
0xe1: V91 = 0x0
0xe3: V92 = 0x40
0xe5: V93 = M[0x40]
0xe8: V94 = SUB V90 V93
0xed: V95 = CALL 0x0 V72 V88 V93 V94 V93 0x0
0xf4: V96 = 0x0
0xf7: V97 = 0x3
0xf9: V98 = ADD 0x3 V27
0xfa: V99 = 0x0
0xfd: V100 = 0x0
0x101: M[0x0] = S1
0x102: V101 = 0x20
0x104: V102 = ADD 0x20 0x0
0x107: M[0x20] = V98
0x108: V103 = 0x20
0x10a: V104 = ADD 0x20 0x20
0x10b: V105 = 0x0
0x10d: V106 = SHA3 0x0 0x40
0x10e: V107 = 0x0
0x111: V108 = 0x0
0x113: V109 = ADD 0x0 V106
0x114: V110 = 0x0
0x116: V111 = 0x100
0x119: V112 = EXP 0x100 0x0
0x11b: V113 = S[V109]
0x11d: V114 = 0x1
0x11f: V115 = 0xa0
0x121: V116 = 0x2
0x123: V117 = EXP 0x2 0xa0
0x124: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V119 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x126: V120 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x127: V121 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V113
0x12a: V122 = MUL 0x0 0x1
0x12b: V123 = OR 0x0 V121
0x12d: S[V109] = V123
0x12f: V124 = 0x0
0x132: V125 = 0x3
0x134: V126 = ADD 0x3 V27
0x135: V127 = 0x0
0x138: V128 = 0x0
0x13c: M[0x0] = S1
0x13d: V129 = 0x20
0x13f: V130 = ADD 0x20 0x0
0x142: M[0x20] = V126
0x143: V131 = 0x20
0x145: V132 = ADD 0x20 0x20
0x146: V133 = 0x0
0x148: V134 = SHA3 0x0 0x40
0x149: V135 = 0x0
0x14c: V136 = 0x1
0x14e: V137 = ADD 0x1 V134
0x14f: V138 = 0x0
0x154: S[V137] = 0x0
0x158: V139 = 0x1
0x15a: V140 = ADD 0x1 S1
0x15e: V141 = 0x72
0x161: JUMP 0x72
---
Entry stack: [V7, 0x184, V22, 0x0, V27, S1, V34]
Stack pops: 3
Stack additions: [S2, V140, S0]
Exit stack: [V7, 0x184, V22, 0x0, V27, V140, V34]

================================

Block 0x162
[0x162:0x183]
---
Predecessors: [0x19]
Successors: [0x184]
---
0x162 JUMPDEST
0x163 PUSH1 0x0
0x165 DUP1
0x166 SLOAD
0x167 PUSH1 0x1
0x169 DUP2
0x16a DUP2
0x16b ADD
0x16c DUP4
0x16d SSTORE
0x16e DUP2
0x16f DUP4
0x170 MSTORE
0x171 PUSH1 0x20
0x173 MSTORE
0x174 PUSH1 0x40
0x176 SWAP1
0x177 SWAP2
0x178 SHA3
0x179 NUMBER
0x17a PUSH1 0x4
0x17c CALLDATALOAD
0x17d ADD
0x17e PUSH1 0x2
0x180 SWAP1
0x181 SWAP2
0x182 ADD
0x183 SSTORE
---
0x162: JUMPDEST 
0x163: V142 = 0x0
0x166: V143 = S[0x0]
0x167: V144 = 0x1
0x16b: V145 = ADD 0x1 V143
0x16d: S[0x0] = V145
0x170: M[0x0] = V143
0x171: V146 = 0x20
0x173: M[0x20] = 0x1
0x174: V147 = 0x40
0x178: V148 = SHA3 0x0 0x40
0x179: V149 = NUMBER
0x17a: V150 = 0x4
0x17c: V151 = CALLDATALOAD 0x4
0x17d: V152 = ADD V151 V149
0x17e: V153 = 0x2
0x182: V154 = ADD V148 0x2
0x183: S[V154] = V152
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V7, V143]

================================

Block 0x184
[0x184:0x195]
---
Predecessors: [0x162, 0x1f4]
Successors: []
---
0x184 JUMPDEST
0x185 PUSH1 0x40
0x187 DUP1
0x188 MLOAD
0x189 SWAP2
0x18a DUP3
0x18b MSTORE
0x18c MLOAD
0x18d SWAP1
0x18e DUP2
0x18f SWAP1
0x190 SUB
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP1
0x195 RETURN
---
0x184: JUMPDEST 
0x185: V155 = 0x40
0x188: V156 = M[0x40]
0x18b: M[V156] = S0
0x18c: V157 = M[0x40]
0x190: V158 = SUB V156 V157
0x191: V159 = 0x20
0x193: V160 = ADD 0x20 V158
0x195: RETURN V157 V160
---
Entry stack: [V7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x196
[0x196:0x1ee]
---
Predecessors: [0x24, 0x2f]
Successors: [0x3a]
---
0x196 JUMPDEST
0x197 PUSH1 0x4
0x199 CALLDATALOAD
0x19a PUSH1 0x0
0x19c SWAP1
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x1
0x1a1 PUSH1 0x20
0x1a3 DUP2
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x40
0x1a8 DUP1
0x1a9 DUP5
0x1aa SHA3
0x1ab DUP1
0x1ac SLOAD
0x1ad DUP1
0x1ae DUP6
0x1af ADD
0x1b0 DUP3
0x1b1 SSTORE
0x1b2 DUP6
0x1b3 MSTORE
0x1b4 PUSH1 0x3
0x1b6 DUP2
0x1b7 ADD
0x1b8 SWAP1
0x1b9 SWAP3
0x1ba MSTORE
0x1bb SWAP1
0x1bc SWAP3
0x1bd SHA3
0x1be DUP1
0x1bf SLOAD
0x1c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d5 NOT
0x1d6 AND
0x1d7 CALLER
0x1d8 OR
0x1d9 DUP2
0x1da SSTORE
0x1db CALLVALUE
0x1dc SWAP1
0x1dd DUP3
0x1de ADD
0x1df DUP2
0x1e0 SWAP1
0x1e1 SSTORE
0x1e2 SWAP2
0x1e3 ADD
0x1e4 DUP1
0x1e5 SLOAD
0x1e6 SWAP1
0x1e7 SWAP2
0x1e8 ADD
0x1e9 SWAP1
0x1ea SSTORE
0x1eb PUSH2 0x3a
0x1ee JUMP
---
0x196: JUMPDEST 
0x197: V161 = 0x4
0x199: V162 = CALLDATALOAD 0x4
0x19a: V163 = 0x0
0x19e: M[0x0] = V162
0x19f: V164 = 0x1
0x1a1: V165 = 0x20
0x1a5: M[0x20] = 0x1
0x1a6: V166 = 0x40
0x1aa: V167 = SHA3 0x0 0x40
0x1ac: V168 = S[V167]
0x1af: V169 = ADD 0x1 V168
0x1b1: S[V167] = V169
0x1b3: M[0x0] = V168
0x1b4: V170 = 0x3
0x1b7: V171 = ADD V167 0x3
0x1ba: M[0x20] = V171
0x1bd: V172 = SHA3 0x0 0x40
0x1bf: V173 = S[V172]
0x1c0: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V175 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V176 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V173
0x1d7: V177 = CALLER
0x1d8: V178 = OR V177 V176
0x1da: S[V172] = V178
0x1db: V179 = CALLVALUE
0x1de: V180 = ADD 0x1 V172
0x1e1: S[V180] = V179
0x1e3: V181 = ADD V167 0x1
0x1e5: V182 = S[V181]
0x1e8: V183 = ADD V179 V182
0x1ea: S[V181] = V183
0x1eb: V184 = 0x3a
0x1ee: JUMP 0x3a
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x1ef
[0x1ef:0x1f3]
---
Predecessors: [0x72]
Successors: [0x1f4]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x1
0x1f2 SWAP4
0x1f3 POP
---
0x1ef: JUMPDEST 
0x1f0: V185 = 0x1
---
Entry stack: [V7, 0x184, V22, 0x0, V27, S1, V34]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V7, 0x184, V22, 0x1, V27, S1, V34]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x3c, 0x1ef]
Successors: [0x184]
---
0x1f4 JUMPDEST
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa POP
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1fb: JUMP 0x184
---
Entry stack: [V7, 0x184, V22, {0x0, 0x1}, V27, S1, S0]
Stack pops: 6
Stack additions: [S3]
Exit stack: [V7, {0x0, 0x1}]

================================

Function 0:
Public function signature: 0x5b2329d4
Entry block: 0x3c
Exit block: 0x184
Body: 0x3c, 0x61, 0x72, 0x7c, 0x184, 0x1ef, 0x1f4

Function 1:
Public function signature: 0x9d274eca
Entry block: 0x162
Exit block: 0x184
Body: 0x162, 0x184

Function 2:
Public function signature: 0xab7b1c89
Entry block: 0x196
Exit block: 0x3a
Body: 0x3a, 0x196

Function 3:
Public function signature: 0xc1cbbca7
Entry block: 0x196
Exit block: 0x3a
Body: 0x3a, 0x196

Function 4:
Public fallback function
Entry block: 0x3a
Exit block: 0x3a
Body: 0x3a

