Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x72]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x72
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x72
0xc: JUMPI 0x72 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x77]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x123501ee
0x36 EQ
0x37 PUSH2 0x77
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x123501ee
0x36: V11 = EQ 0x123501ee V9
0x37: V12 = 0x77
0x3a: JUMPI 0x77 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0x8e]
---
0x3b DUP1
0x3c PUSH4 0x3c24ca5d
0x41 EQ
0x42 PUSH2 0x8e
0x45 JUMPI
---
0x3c: V13 = 0x3c24ca5d
0x41: V14 = EQ 0x3c24ca5d V9
0x42: V15 = 0x8e
0x45: JUMPI 0x8e V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xa5]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0xa5
0x50 JUMPI
---
0x47: V16 = 0x8da5cb5b
0x4c: V17 = EQ 0x8da5cb5b V9
0x4d: V18 = 0xa5
0x50: JUMPI 0xa5 V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xfc]
---
0x51 DUP1
0x52 PUSH4 0xbb35d94c
0x57 EQ
0x58 PUSH2 0xfc
0x5b JUMPI
---
0x52: V19 = 0xbb35d94c
0x57: V20 = EQ 0xbb35d94c V9
0x58: V21 = 0xfc
0x5b: JUMPI 0xfc V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x113]
---
0x5c DUP1
0x5d PUSH4 0xc8cfa2bf
0x62 EQ
0x63 PUSH2 0x113
0x66 JUMPI
---
0x5d: V22 = 0xc8cfa2bf
0x62: V23 = EQ 0xc8cfa2bf V9
0x63: V24 = 0x113
0x66: JUMPI 0x113 V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x12a]
---
0x67 DUP1
0x68 PUSH4 0xf2fde38b
0x6d EQ
0x6e PUSH2 0x12a
0x71 JUMPI
---
0x68: V25 = 0xf2fde38b
0x6d: V26 = EQ 0xf2fde38b V9
0x6e: V27 = 0x12a
0x71: JUMPI 0x12a V26
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x72
[0x72:0x76]
---
Predecessors: [0x0, 0x67]
Successors: []
---
0x72 JUMPDEST
0x73 PUSH1 0x0
0x75 DUP1
0x76 REVERT
---
0x72: JUMPDEST 
0x73: V28 = 0x0
0x76: REVERT 0x0 0x0
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x77
[0x77:0x7e]
---
Predecessors: [0xd]
Successors: [0x7f, 0x83]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 DUP1
0x7a ISZERO
0x7b PUSH2 0x83
0x7e JUMPI
---
0x77: JUMPDEST 
0x78: V29 = CALLVALUE
0x7a: V30 = ISZERO V29
0x7b: V31 = 0x83
0x7e: JUMPI 0x83 V30
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V29]
Exit stack: [V9, V29]

================================

Block 0x7f
[0x7f:0x82]
---
Predecessors: [0x77]
Successors: []
---
0x7f PUSH1 0x0
0x81 DUP1
0x82 REVERT
---
0x7f: V32 = 0x0
0x82: REVERT 0x0 0x0
---
Entry stack: [V9, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V29]

================================

Block 0x83
[0x83:0x8b]
---
Predecessors: [0x77]
Successors: [0x17b]
---
0x83 JUMPDEST
0x84 POP
0x85 PUSH2 0x8c
0x88 PUSH2 0x17b
0x8b JUMP
---
0x83: JUMPDEST 
0x85: V33 = 0x8c
0x88: V34 = 0x17b
0x8b: JUMP 0x17b
---
Entry stack: [V9, V29]
Stack pops: 1
Stack additions: [0x8c]
Exit stack: [V9, 0x8c]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: [0x34f]
Successors: []
---
0x8c JUMPDEST
0x8d STOP
---
0x8c: JUMPDEST 
0x8d: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x8e
[0x8e:0x95]
---
Predecessors: [0x3b]
Successors: [0x96, 0x9a]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 DUP1
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8e: JUMPDEST 
0x8f: V35 = CALLVALUE
0x91: V36 = ISZERO V35
0x92: V37 = 0x9a
0x95: JUMPI 0x9a V36
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V9, V35]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8e]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V38 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V9, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V35]

================================

Block 0x9a
[0x9a:0xa2]
---
Predecessors: [0x8e]
Successors: [0x354]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH2 0xa3
0x9f PUSH2 0x354
0xa2 JUMP
---
0x9a: JUMPDEST 
0x9c: V39 = 0xa3
0x9f: V40 = 0x354
0xa2: JUMP 0x354
---
Entry stack: [V9, V35]
Stack pops: 1
Stack additions: [0xa3]
Exit stack: [V9, 0xa3]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: []
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0x46]
Successors: [0xad, 0xb1]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 DUP1
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa5: JUMPDEST 
0xa6: V41 = CALLVALUE
0xa8: V42 = ISZERO V41
0xa9: V43 = 0xb1
0xac: JUMPI 0xb1 V42
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V9, V41]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa5]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V44 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V9, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V41]

================================

Block 0xb1
[0xb1:0xb9]
---
Predecessors: [0xa5]
Successors: [0x3c8]
---
0xb1 JUMPDEST
0xb2 POP
0xb3 PUSH2 0xba
0xb6 PUSH2 0x3c8
0xb9 JUMP
---
0xb1: JUMPDEST 
0xb3: V45 = 0xba
0xb6: V46 = 0x3c8
0xb9: JUMP 0x3c8
---
Entry stack: [V9, V41]
Stack pops: 1
Stack additions: [0xba]
Exit stack: [V9, 0xba]

================================

Block 0xba
[0xba:0xfb]
---
Predecessors: [0x3c8]
Successors: []
---
0xba JUMPDEST
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf DUP3
0xc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5 AND
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb AND
0xec DUP2
0xed MSTORE
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP2
0xf2 POP
0xf3 POP
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 SWAP2
0xf9 SUB
0xfa SWAP1
0xfb RETURN
---
0xba: JUMPDEST 
0xbb: V47 = 0x40
0xbd: V48 = M[0x40]
0xc0: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0xd6: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xed: M[V48] = V52
0xee: V53 = 0x20
0xf0: V54 = ADD 0x20 V48
0xf4: V55 = 0x40
0xf6: V56 = M[0x40]
0xf9: V57 = SUB V54 V56
0xfb: RETURN V56 V57
---
Entry stack: [V9, 0xba, V224]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0xba]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0x51]
Successors: [0x104, 0x108]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe DUP1
0xff ISZERO
0x100 PUSH2 0x108
0x103 JUMPI
---
0xfc: JUMPDEST 
0xfd: V58 = CALLVALUE
0xff: V59 = ISZERO V58
0x100: V60 = 0x108
0x103: JUMPI 0x108 V59
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V9, V58]

================================

Block 0x104
[0x104:0x107]
---
Predecessors: [0xfc]
Successors: []
---
0x104 PUSH1 0x0
0x106 DUP1
0x107 REVERT
---
0x104: V61 = 0x0
0x107: REVERT 0x0 0x0
---
Entry stack: [V9, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V58]

================================

Block 0x108
[0x108:0x110]
---
Predecessors: [0xfc]
Successors: [0x3ed]
---
0x108 JUMPDEST
0x109 POP
0x10a PUSH2 0x111
0x10d PUSH2 0x3ed
0x110 JUMP
---
0x108: JUMPDEST 
0x10a: V62 = 0x111
0x10d: V63 = 0x3ed
0x110: JUMP 0x3ed
---
Entry stack: [V9, V58]
Stack pops: 1
Stack additions: [0x111]
Exit stack: [V9, 0x111]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x516]
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x5c]
Successors: [0x11b, 0x11f]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x113: JUMPDEST 
0x114: V64 = CALLVALUE
0x116: V65 = ISZERO V64
0x117: V66 = 0x11f
0x11a: JUMPI 0x11f V65
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V9, V64]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x113]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V67 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V9, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V64]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x113]
Successors: [0x52b]
---
0x11f JUMPDEST
0x120 POP
0x121 PUSH2 0x128
0x124 PUSH2 0x52b
0x127 JUMP
---
0x11f: JUMPDEST 
0x121: V68 = 0x128
0x124: V69 = 0x52b
0x127: JUMP 0x52b
---
Entry stack: [V9, V64]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V9, 0x128]

================================

Block 0x128
[0x128:0x129]
---
Predecessors: [0x615]
Successors: []
---
0x128 JUMPDEST
0x129 STOP
---
0x128: JUMPDEST 
0x129: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x12a
[0x12a:0x131]
---
Predecessors: [0x67]
Successors: [0x132, 0x136]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c DUP1
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x12a: JUMPDEST 
0x12b: V70 = CALLVALUE
0x12d: V71 = ISZERO V70
0x12e: V72 = 0x136
0x131: JUMPI 0x136 V71
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V9, V70]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x12a]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V73 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V9, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V70]

================================

Block 0x136
[0x136:0x148]
---
Predecessors: [0x12a]
Successors: [0x149, 0x14d]
---
0x136 JUMPDEST
0x137 POP
0x138 PUSH2 0x179
0x13b PUSH1 0x4
0x13d DUP1
0x13e CALLDATASIZE
0x13f SUB
0x140 PUSH1 0x20
0x142 DUP2
0x143 LT
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x136: JUMPDEST 
0x138: V74 = 0x179
0x13b: V75 = 0x4
0x13e: V76 = CALLDATASIZE
0x13f: V77 = SUB V76 0x4
0x140: V78 = 0x20
0x143: V79 = LT V77 0x20
0x144: V80 = ISZERO V79
0x145: V81 = 0x14d
0x148: JUMPI 0x14d V80
---
Entry stack: [V9, V70]
Stack pops: 1
Stack additions: [0x179, 0x4, V77]
Exit stack: [V9, 0x179, 0x4, V77]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x136]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V82 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V9, 0x179, 0x4, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x179, 0x4, V77]

================================

Block 0x14d
[0x14d:0x178]
---
Predecessors: [0x136]
Successors: [0x62f]
---
0x14d JUMPDEST
0x14e DUP2
0x14f ADD
0x150 SWAP1
0x151 DUP1
0x152 DUP1
0x153 CALLDATALOAD
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a SWAP1
0x16b PUSH1 0x20
0x16d ADD
0x16e SWAP1
0x16f SWAP3
0x170 SWAP2
0x171 SWAP1
0x172 POP
0x173 POP
0x174 POP
0x175 PUSH2 0x62f
0x178 JUMP
---
0x14d: JUMPDEST 
0x14f: V83 = ADD 0x4 V77
0x153: V84 = CALLDATALOAD 0x4
0x154: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x16b: V87 = 0x20
0x16d: V88 = ADD 0x20 0x4
0x175: V89 = 0x62f
0x178: JUMP 0x62f
---
Entry stack: [V9, 0x179, 0x4, V77]
Stack pops: 2
Stack additions: [V86]
Exit stack: [V9, 0x179, V86]

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: [0x6c6]
Successors: []
---
0x179 JUMPDEST
0x17a STOP
---
0x179: JUMPDEST 
0x17a: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x17b
[0x17b:0x2c1]
---
Predecessors: [0x83]
Successors: [0x2c2]
---
0x17b JUMPDEST
0x17c PUSH1 0x1
0x17e PUSH1 0x0
0x180 SWAP1
0x181 SLOAD
0x182 SWAP1
0x183 PUSH2 0x100
0x186 EXP
0x187 SWAP1
0x188 DIV
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH3 0x15f90
0x1b9 ADDRESS
0x1ba CALLER
0x1bb PUSH1 0x1
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 PUSH1 0x24
0x1c2 ADD
0x1c3 DUP1
0x1c4 DUP5
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da AND
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 DUP4
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 AND
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0x20
0x227 ADD
0x228 DUP3
0x229 PUSH1 0xff
0x22b AND
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP4
0x232 POP
0x233 POP
0x234 POP
0x235 POP
0x236 PUSH1 0x40
0x238 MLOAD
0x239 PUSH1 0x20
0x23b DUP2
0x23c DUP4
0x23d SUB
0x23e SUB
0x23f DUP2
0x240 MSTORE
0x241 SWAP1
0x242 PUSH1 0x40
0x244 MSTORE
0x245 PUSH32 0xb642fe5700000000000000000000000000000000000000000000000000000000
0x266 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x283 NOT
0x284 AND
0x285 PUSH1 0x20
0x287 DUP3
0x288 ADD
0x289 DUP1
0x28a MLOAD
0x28b PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2a8 DUP4
0x2a9 DUP2
0x2aa DUP4
0x2ab AND
0x2ac OR
0x2ad DUP4
0x2ae MSTORE
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 DUP3
0x2b8 DUP1
0x2b9 MLOAD
0x2ba SWAP1
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP1
0x2bf DUP1
0x2c0 DUP4
0x2c1 DUP4
---
0x17b: JUMPDEST 
0x17c: V90 = 0x1
0x17e: V91 = 0x0
0x181: V92 = S[0x1]
0x183: V93 = 0x100
0x186: V94 = EXP 0x100 0x0
0x188: V95 = DIV V92 0x1
0x189: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x19f: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1b5: V100 = 0x15f90
0x1b9: V101 = ADDRESS
0x1ba: V102 = CALLER
0x1bb: V103 = 0x1
0x1bd: V104 = 0x40
0x1bf: V105 = M[0x40]
0x1c0: V106 = 0x24
0x1c2: V107 = ADD 0x24 V105
0x1c5: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1db: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1f2: M[V107] = V111
0x1f3: V112 = 0x20
0x1f5: V113 = ADD 0x20 V107
0x1f7: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x20d: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x224: M[V113] = V117
0x225: V118 = 0x20
0x227: V119 = ADD 0x20 V113
0x229: V120 = 0xff
0x22b: V121 = AND 0xff 0x1
0x22d: M[V119] = 0x1
0x22e: V122 = 0x20
0x230: V123 = ADD 0x20 V119
0x236: V124 = 0x40
0x238: V125 = M[0x40]
0x239: V126 = 0x20
0x23d: V127 = SUB V123 V125
0x23e: V128 = SUB V127 0x20
0x240: M[V125] = V128
0x242: V129 = 0x40
0x244: M[0x40] = V123
0x245: V130 = 0xb642fe5700000000000000000000000000000000000000000000000000000000
0x266: V131 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x283: V132 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x284: V133 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0xb642fe5700000000000000000000000000000000000000000000000000000000
0x285: V134 = 0x20
0x288: V135 = ADD V125 0x20
0x28a: V136 = M[V135]
0x28b: V137 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2ab: V138 = AND V136 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2ac: V139 = OR V138 0xb642fe5700000000000000000000000000000000000000000000000000000000
0x2ae: M[V135] = V139
0x2b3: V140 = 0x40
0x2b5: V141 = M[0x40]
0x2b9: V142 = M[V125]
0x2bb: V143 = 0x20
0x2bd: V144 = ADD 0x20 V125
---
Entry stack: [V9, 0x8c]
Stack pops: 0
Stack additions: [V99, 0x15f90, V125, V141, V141, V144, V142, V142, V141, V144]
Exit stack: [V9, 0x8c, V99, 0x15f90, V125, V141, V141, V144, V142, V142, V141, V144]

================================

Block 0x2c2
[0x2c2:0x2cc]
---
Predecessors: [0x17b, 0x2cd]
Successors: [0x2cd, 0x2e7]
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x20
0x2c5 DUP4
0x2c6 LT
0x2c7 ISZERO
0x2c8 ISZERO
0x2c9 PUSH2 0x2e7
0x2cc JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V145 = 0x20
0x2c6: V146 = LT S2 0x20
0x2c7: V147 = ISZERO V146
0x2c8: V148 = ISZERO V147
0x2c9: V149 = 0x2e7
0x2cc: JUMPI 0x2e7 V148
---
Entry stack: [V9, 0x8c, V99, 0x15f90, V125, V141, V141, V144, V142, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, 0x8c, V99, 0x15f90, V125, V141, V141, V144, V142, S2, S1, S0]

================================

Block 0x2cd
[0x2cd:0x2e6]
---
Predecessors: [0x2c2]
Successors: [0x2c2]
---
0x2cd DUP1
0x2ce MLOAD
0x2cf DUP3
0x2d0 MSTORE
0x2d1 PUSH1 0x20
0x2d3 DUP3
0x2d4 ADD
0x2d5 SWAP2
0x2d6 POP
0x2d7 PUSH1 0x20
0x2d9 DUP2
0x2da ADD
0x2db SWAP1
0x2dc POP
0x2dd PUSH1 0x20
0x2df DUP4
0x2e0 SUB
0x2e1 SWAP3
0x2e2 POP
0x2e3 PUSH2 0x2c2
0x2e6 JUMP
---
0x2ce: V150 = M[S0]
0x2d0: M[S1] = V150
0x2d1: V151 = 0x20
0x2d4: V152 = ADD S1 0x20
0x2d7: V153 = 0x20
0x2da: V154 = ADD S0 0x20
0x2dd: V155 = 0x20
0x2e0: V156 = SUB S2 0x20
0x2e3: V157 = 0x2c2
0x2e6: JUMP 0x2c2
---
Entry stack: [V9, 0x8c, V99, 0x15f90, V125, V141, V141, V144, V142, S2, S1, S0]
Stack pops: 3
Stack additions: [V156, V152, V154]
Exit stack: [V9, 0x8c, V99, 0x15f90, V125, V141, V141, V144, V142, V156, V152, V154]

================================

Block 0x2e7
[0x2e7:0x328]
---
Predecessors: [0x2c2]
Successors: [0x329, 0x34a]
---
0x2e7 JUMPDEST
0x2e8 PUSH1 0x1
0x2ea DUP4
0x2eb PUSH1 0x20
0x2ed SUB
0x2ee PUSH2 0x100
0x2f1 EXP
0x2f2 SUB
0x2f3 DUP1
0x2f4 NOT
0x2f5 DUP3
0x2f6 MLOAD
0x2f7 AND
0x2f8 DUP2
0x2f9 DUP5
0x2fa MLOAD
0x2fb AND
0x2fc DUP1
0x2fd DUP3
0x2fe OR
0x2ff DUP6
0x300 MSTORE
0x301 POP
0x302 POP
0x303 POP
0x304 POP
0x305 POP
0x306 POP
0x307 SWAP1
0x308 POP
0x309 ADD
0x30a SWAP2
0x30b POP
0x30c POP
0x30d PUSH1 0x0
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 DUP4
0x314 SUB
0x315 DUP2
0x316 PUSH1 0x0
0x318 DUP8
0x319 DUP8
0x31a CALL
0x31b SWAP3
0x31c POP
0x31d POP
0x31e POP
0x31f RETURNDATASIZE
0x320 DUP1
0x321 PUSH1 0x0
0x323 DUP2
0x324 EQ
0x325 PUSH2 0x34a
0x328 JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V158 = 0x1
0x2eb: V159 = 0x20
0x2ed: V160 = SUB 0x20 S2
0x2ee: V161 = 0x100
0x2f1: V162 = EXP 0x100 V160
0x2f2: V163 = SUB V162 0x1
0x2f4: V164 = NOT V163
0x2f6: V165 = M[S0]
0x2f7: V166 = AND V165 V164
0x2fa: V167 = M[S1]
0x2fb: V168 = AND V167 V163
0x2fe: V169 = OR V166 V168
0x300: M[S1] = V169
0x309: V170 = ADD V142 V141
0x30d: V171 = 0x0
0x30f: V172 = 0x40
0x311: V173 = M[0x40]
0x314: V174 = SUB V170 V173
0x316: V175 = 0x0
0x31a: V176 = CALL 0x15f90 V99 0x0 V173 V174 V173 0x0
0x31f: V177 = RETURNDATASIZE
0x321: V178 = 0x0
0x324: V179 = EQ V177 0x0
0x325: V180 = 0x34a
0x328: JUMPI 0x34a V179
---
Entry stack: [V9, 0x8c, V99, 0x15f90, V125, V141, V141, V144, V142, S2, S1, S0]
Stack pops: 10
Stack additions: [V176, V177, V177]
Exit stack: [V9, 0x8c, V176, V177, V177]

================================

Block 0x329
[0x329:0x349]
---
Predecessors: [0x2e7]
Successors: [0x34f]
---
0x329 PUSH1 0x40
0x32b MLOAD
0x32c SWAP2
0x32d POP
0x32e PUSH1 0x1f
0x330 NOT
0x331 PUSH1 0x3f
0x333 RETURNDATASIZE
0x334 ADD
0x335 AND
0x336 DUP3
0x337 ADD
0x338 PUSH1 0x40
0x33a MSTORE
0x33b RETURNDATASIZE
0x33c DUP3
0x33d MSTORE
0x33e RETURNDATASIZE
0x33f PUSH1 0x0
0x341 PUSH1 0x20
0x343 DUP5
0x344 ADD
0x345 RETURNDATACOPY
0x346 PUSH2 0x34f
0x349 JUMP
---
0x329: V181 = 0x40
0x32b: V182 = M[0x40]
0x32e: V183 = 0x1f
0x330: V184 = NOT 0x1f
0x331: V185 = 0x3f
0x333: V186 = RETURNDATASIZE
0x334: V187 = ADD V186 0x3f
0x335: V188 = AND V187 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x337: V189 = ADD V182 V188
0x338: V190 = 0x40
0x33a: M[0x40] = V189
0x33b: V191 = RETURNDATASIZE
0x33d: M[V182] = V191
0x33e: V192 = RETURNDATASIZE
0x33f: V193 = 0x0
0x341: V194 = 0x20
0x344: V195 = ADD V182 0x20
0x345: RETURNDATACOPY V195 0x0 V192
0x346: V196 = 0x34f
0x349: JUMP 0x34f
---
Entry stack: [V9, 0x8c, V176, V177, V177]
Stack pops: 2
Stack additions: [V182, S0]
Exit stack: [V9, 0x8c, V176, V182, V177]

================================

Block 0x34a
[0x34a:0x34e]
---
Predecessors: [0x2e7]
Successors: [0x34f]
---
0x34a JUMPDEST
0x34b PUSH1 0x60
0x34d SWAP2
0x34e POP
---
0x34a: JUMPDEST 
0x34b: V197 = 0x60
---
Entry stack: [V9, 0x8c, V176, V177, V177]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0x8c, V176, 0x60, V177]

================================

Block 0x34f
[0x34f:0x353]
---
Predecessors: [0x329, 0x34a]
Successors: [0x8c]
---
0x34f JUMPDEST
0x350 POP
0x351 POP
0x352 POP
0x353 JUMP
---
0x34f: JUMPDEST 
0x353: JUMP 0x8c
---
Entry stack: [V9, 0x8c, V176, S1, V177]
Stack pops: 4
Stack additions: []
Exit stack: [V9]

================================

Block 0x354
[0x354:0x3aa]
---
Predecessors: [0x9a]
Successors: [0x3ab, 0x3af]
---
0x354 JUMPDEST
0x355 PUSH1 0x0
0x357 DUP1
0x358 SWAP1
0x359 SLOAD
0x35a SWAP1
0x35b PUSH2 0x100
0x35e EXP
0x35f SWAP1
0x360 DIV
0x361 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x376 AND
0x377 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38c AND
0x38d CALLER
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 AND
0x3a4 EQ
0x3a5 ISZERO
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x354: JUMPDEST 
0x355: V198 = 0x0
0x359: V199 = S[0x0]
0x35b: V200 = 0x100
0x35e: V201 = EXP 0x100 0x0
0x360: V202 = DIV V199 0x1
0x361: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x376: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x377: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x38c: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x38d: V207 = CALLER
0x38e: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3a4: V210 = EQ V209 V206
0x3a5: V211 = ISZERO V210
0x3a6: V212 = ISZERO V211
0x3a7: V213 = 0x3af
0x3aa: JUMPI 0x3af V212
---
Entry stack: [V9, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xa3]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x354]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V214 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V9, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xa3]

================================

Block 0x3af
[0x3af:0x3c7]
---
Predecessors: [0x354]
Successors: []
---
0x3af JUMPDEST
0x3b0 CALLER
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 SELFDESTRUCT
---
0x3af: JUMPDEST 
0x3b0: V215 = CALLER
0x3b1: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3c7: SELFDESTRUCT V217
---
Entry stack: [V9, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xa3]

================================

Block 0x3c8
[0x3c8:0x3ec]
---
Predecessors: [0xb1]
Successors: [0xba]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc SWAP1
0x3cd SLOAD
0x3ce SWAP1
0x3cf PUSH2 0x100
0x3d2 EXP
0x3d3 SWAP1
0x3d4 DIV
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb DUP2
0x3ec JUMP
---
0x3c8: JUMPDEST 
0x3c9: V218 = 0x0
0x3cd: V219 = S[0x0]
0x3cf: V220 = 0x100
0x3d2: V221 = EXP 0x100 0x0
0x3d4: V222 = DIV V219 0x1
0x3d5: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3ec: JUMP 0xba
---
Entry stack: [V9, 0xba]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V9, 0xba, V224]

================================

Block 0x3ed
[0x3ed:0x4e7]
---
Predecessors: [0x108]
Successors: [0x4e8, 0x4ec]
---
0x3ed JUMPDEST
0x3ee PUSH1 0x0
0x3f0 PUSH1 0x1
0x3f2 PUSH1 0x0
0x3f4 SWAP1
0x3f5 SLOAD
0x3f6 SWAP1
0x3f7 PUSH2 0x100
0x3fa EXP
0x3fb SWAP1
0x3fc DIV
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 SWAP1
0x414 POP
0x415 DUP1
0x416 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42b AND
0x42c PUSH4 0x23b872dd
0x431 ADDRESS
0x432 CALLER
0x433 PUSH1 0x1
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP5
0x439 PUSH4 0xffffffff
0x43e AND
0x43f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x45d MUL
0x45e DUP2
0x45f MSTORE
0x460 PUSH1 0x4
0x462 ADD
0x463 DUP1
0x464 DUP5
0x465 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47a AND
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x20
0x495 ADD
0x496 DUP4
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 AND
0x4c3 DUP2
0x4c4 MSTORE
0x4c5 PUSH1 0x20
0x4c7 ADD
0x4c8 DUP3
0x4c9 DUP2
0x4ca MSTORE
0x4cb PUSH1 0x20
0x4cd ADD
0x4ce SWAP4
0x4cf POP
0x4d0 POP
0x4d1 POP
0x4d2 POP
0x4d3 PUSH1 0x20
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 DUP4
0x4da SUB
0x4db DUP2
0x4dc PUSH1 0x0
0x4de DUP8
0x4df DUP1
0x4e0 EXTCODESIZE
0x4e1 ISZERO
0x4e2 DUP1
0x4e3 ISZERO
0x4e4 PUSH2 0x4ec
0x4e7 JUMPI
---
0x3ed: JUMPDEST 
0x3ee: V225 = 0x0
0x3f0: V226 = 0x1
0x3f2: V227 = 0x0
0x3f5: V228 = S[0x1]
0x3f7: V229 = 0x100
0x3fa: V230 = EXP 0x100 0x0
0x3fc: V231 = DIV V228 0x1
0x3fd: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x416: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x42b: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x42c: V236 = 0x23b872dd
0x431: V237 = ADDRESS
0x432: V238 = CALLER
0x433: V239 = 0x1
0x435: V240 = 0x40
0x437: V241 = M[0x40]
0x439: V242 = 0xffffffff
0x43e: V243 = AND 0xffffffff 0x23b872dd
0x43f: V244 = 0x100000000000000000000000000000000000000000000000000000000
0x45d: V245 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x45f: M[V241] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x460: V246 = 0x4
0x462: V247 = ADD 0x4 V241
0x465: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x47b: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x492: M[V247] = V251
0x493: V252 = 0x20
0x495: V253 = ADD 0x20 V247
0x497: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x4ad: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4c4: M[V253] = V257
0x4c5: V258 = 0x20
0x4c7: V259 = ADD 0x20 V253
0x4ca: M[V259] = 0x1
0x4cb: V260 = 0x20
0x4cd: V261 = ADD 0x20 V259
0x4d3: V262 = 0x20
0x4d5: V263 = 0x40
0x4d7: V264 = M[0x40]
0x4da: V265 = SUB V261 V264
0x4dc: V266 = 0x0
0x4e0: V267 = EXTCODESIZE V235
0x4e1: V268 = ISZERO V267
0x4e3: V269 = ISZERO V268
0x4e4: V270 = 0x4ec
0x4e7: JUMPI 0x4ec V269
---
Entry stack: [V9, 0x111]
Stack pops: 0
Stack additions: [V233, V235, 0x23b872dd, V261, 0x20, V264, V265, V264, 0x0, V235, V268]
Exit stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, 0x20, V264, V265, V264, 0x0, V235, V268]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x3ed]
Successors: []
---
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb REVERT
---
0x4e8: V271 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, 0x20, V264, V265, V264, 0x0, V235, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, 0x20, V264, V265, V264, 0x0, V235, V268]

================================

Block 0x4ec
[0x4ec:0x4f6]
---
Predecessors: [0x3ed]
Successors: [0x4f7, 0x500]
---
0x4ec JUMPDEST
0x4ed POP
0x4ee GAS
0x4ef CALL
0x4f0 ISZERO
0x4f1 DUP1
0x4f2 ISZERO
0x4f3 PUSH2 0x500
0x4f6 JUMPI
---
0x4ec: JUMPDEST 
0x4ee: V272 = GAS
0x4ef: V273 = CALL V272 V235 0x0 V264 V265 V264 0x20
0x4f0: V274 = ISZERO V273
0x4f2: V275 = ISZERO V274
0x4f3: V276 = 0x500
0x4f6: JUMPI 0x500 V275
---
Entry stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, 0x20, V264, V265, V264, 0x0, V235, V268]
Stack pops: 7
Stack additions: [V274]
Exit stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, V274]

================================

Block 0x4f7
[0x4f7:0x4ff]
---
Predecessors: [0x4ec]
Successors: []
---
0x4f7 RETURNDATASIZE
0x4f8 PUSH1 0x0
0x4fa DUP1
0x4fb RETURNDATACOPY
0x4fc RETURNDATASIZE
0x4fd PUSH1 0x0
0x4ff REVERT
---
0x4f7: V277 = RETURNDATASIZE
0x4f8: V278 = 0x0
0x4fb: RETURNDATACOPY 0x0 0x0 V277
0x4fc: V279 = RETURNDATASIZE
0x4fd: V280 = 0x0
0x4ff: REVERT 0x0 V279
---
Entry stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, V274]

================================

Block 0x500
[0x500:0x511]
---
Predecessors: [0x4ec]
Successors: [0x512, 0x516]
---
0x500 JUMPDEST
0x501 POP
0x502 POP
0x503 POP
0x504 POP
0x505 PUSH1 0x40
0x507 MLOAD
0x508 RETURNDATASIZE
0x509 PUSH1 0x20
0x50b DUP2
0x50c LT
0x50d ISZERO
0x50e PUSH2 0x516
0x511 JUMPI
---
0x500: JUMPDEST 
0x505: V281 = 0x40
0x507: V282 = M[0x40]
0x508: V283 = RETURNDATASIZE
0x509: V284 = 0x20
0x50c: V285 = LT V283 0x20
0x50d: V286 = ISZERO V285
0x50e: V287 = 0x516
0x511: JUMPI 0x516 V286
---
Entry stack: [V9, 0x111, V233, V235, 0x23b872dd, V261, V274]
Stack pops: 4
Stack additions: [V282, V283]
Exit stack: [V9, 0x111, V233, V282, V283]

================================

Block 0x512
[0x512:0x515]
---
Predecessors: [0x500]
Successors: []
---
0x512 PUSH1 0x0
0x514 DUP1
0x515 REVERT
---
0x512: V288 = 0x0
0x515: REVERT 0x0 0x0
---
Entry stack: [V9, 0x111, V233, V282, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x111, V233, V282, V283]

================================

Block 0x516
[0x516:0x52a]
---
Predecessors: [0x500]
Successors: [0x111]
---
0x516 JUMPDEST
0x517 DUP2
0x518 ADD
0x519 SWAP1
0x51a DUP1
0x51b DUP1
0x51c MLOAD
0x51d SWAP1
0x51e PUSH1 0x20
0x520 ADD
0x521 SWAP1
0x522 SWAP3
0x523 SWAP2
0x524 SWAP1
0x525 POP
0x526 POP
0x527 POP
0x528 POP
0x529 POP
0x52a JUMP
---
0x516: JUMPDEST 
0x518: V289 = ADD V282 V283
0x51c: V290 = M[V282]
0x51e: V291 = 0x20
0x520: V292 = ADD 0x20 V282
0x52a: JUMP 0x111
---
Entry stack: [V9, 0x111, V233, V282, V283]
Stack pops: 4
Stack additions: []
Exit stack: [V9]

================================

Block 0x52b
[0x52b:0x5e6]
---
Predecessors: [0x11f]
Successors: [0x5e7, 0x5eb]
---
0x52b JUMPDEST
0x52c PUSH1 0x0
0x52e PUSH1 0x1
0x530 PUSH1 0x0
0x532 SWAP1
0x533 SLOAD
0x534 SWAP1
0x535 PUSH2 0x100
0x538 EXP
0x539 SWAP1
0x53a DIV
0x53b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x550 AND
0x551 SWAP1
0x552 POP
0x553 DUP1
0x554 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x569 AND
0x56a PUSH4 0x70a08231
0x56f ADDRESS
0x570 PUSH1 0x40
0x572 MLOAD
0x573 DUP3
0x574 PUSH4 0xffffffff
0x579 AND
0x57a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x598 MUL
0x599 DUP2
0x59a MSTORE
0x59b PUSH1 0x4
0x59d ADD
0x59e DUP1
0x59f DUP3
0x5a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b5 AND
0x5b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cb AND
0x5cc DUP2
0x5cd MSTORE
0x5ce PUSH1 0x20
0x5d0 ADD
0x5d1 SWAP2
0x5d2 POP
0x5d3 POP
0x5d4 PUSH1 0x20
0x5d6 PUSH1 0x40
0x5d8 MLOAD
0x5d9 DUP1
0x5da DUP4
0x5db SUB
0x5dc DUP2
0x5dd DUP7
0x5de DUP1
0x5df EXTCODESIZE
0x5e0 ISZERO
0x5e1 DUP1
0x5e2 ISZERO
0x5e3 PUSH2 0x5eb
0x5e6 JUMPI
---
0x52b: JUMPDEST 
0x52c: V293 = 0x0
0x52e: V294 = 0x1
0x530: V295 = 0x0
0x533: V296 = S[0x1]
0x535: V297 = 0x100
0x538: V298 = EXP 0x100 0x0
0x53a: V299 = DIV V296 0x1
0x53b: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x550: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x554: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x569: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x56a: V304 = 0x70a08231
0x56f: V305 = ADDRESS
0x570: V306 = 0x40
0x572: V307 = M[0x40]
0x574: V308 = 0xffffffff
0x579: V309 = AND 0xffffffff 0x70a08231
0x57a: V310 = 0x100000000000000000000000000000000000000000000000000000000
0x598: V311 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x59a: M[V307] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x59b: V312 = 0x4
0x59d: V313 = ADD 0x4 V307
0x5a0: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x5b6: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x5cd: M[V313] = V317
0x5ce: V318 = 0x20
0x5d0: V319 = ADD 0x20 V313
0x5d4: V320 = 0x20
0x5d6: V321 = 0x40
0x5d8: V322 = M[0x40]
0x5db: V323 = SUB V319 V322
0x5df: V324 = EXTCODESIZE V303
0x5e0: V325 = ISZERO V324
0x5e2: V326 = ISZERO V325
0x5e3: V327 = 0x5eb
0x5e6: JUMPI 0x5eb V326
---
Entry stack: [V9, 0x128]
Stack pops: 0
Stack additions: [V301, V303, 0x70a08231, V319, 0x20, V322, V323, V322, V303, V325]
Exit stack: [V9, 0x128, V301, V303, 0x70a08231, V319, 0x20, V322, V323, V322, V303, V325]

================================

Block 0x5e7
[0x5e7:0x5ea]
---
Predecessors: [0x52b]
Successors: []
---
0x5e7 PUSH1 0x0
0x5e9 DUP1
0x5ea REVERT
---
0x5e7: V328 = 0x0
0x5ea: REVERT 0x0 0x0
---
Entry stack: [V9, 0x128, V301, V303, 0x70a08231, V319, 0x20, V322, V323, V322, V303, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x128, V301, V303, 0x70a08231, V319, 0x20, V322, V323, V322, V303, V325]

================================

Block 0x5eb
[0x5eb:0x5f5]
---
Predecessors: [0x52b]
Successors: [0x5f6, 0x5ff]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed GAS
0x5ee STATICCALL
0x5ef ISZERO
0x5f0 DUP1
0x5f1 ISZERO
0x5f2 PUSH2 0x5ff
0x5f5 JUMPI
---
0x5eb: JUMPDEST 
0x5ed: V329 = GAS
0x5ee: V330 = STATICCALL V329 V303 V322 V323 V322 0x20
0x5ef: V331 = ISZERO V330
0x5f1: V332 = ISZERO V331
0x5f2: V333 = 0x5ff
0x5f5: JUMPI 0x5ff V332
---
Entry stack: [V9, 0x128, V301, V303, 0x70a08231, V319, 0x20, V322, V323, V322, V303, V325]
Stack pops: 6
Stack additions: [V331]
Exit stack: [V9, 0x128, V301, V303, 0x70a08231, V319, V331]

================================

Block 0x5f6
[0x5f6:0x5fe]
---
Predecessors: [0x5eb]
Successors: []
---
0x5f6 RETURNDATASIZE
0x5f7 PUSH1 0x0
0x5f9 DUP1
0x5fa RETURNDATACOPY
0x5fb RETURNDATASIZE
0x5fc PUSH1 0x0
0x5fe REVERT
---
0x5f6: V334 = RETURNDATASIZE
0x5f7: V335 = 0x0
0x5fa: RETURNDATACOPY 0x0 0x0 V334
0x5fb: V336 = RETURNDATASIZE
0x5fc: V337 = 0x0
0x5fe: REVERT 0x0 V336
---
Entry stack: [V9, 0x128, V301, V303, 0x70a08231, V319, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x128, V301, V303, 0x70a08231, V319, V331]

================================

Block 0x5ff
[0x5ff:0x610]
---
Predecessors: [0x5eb]
Successors: [0x611, 0x615]
---
0x5ff JUMPDEST
0x600 POP
0x601 POP
0x602 POP
0x603 POP
0x604 PUSH1 0x40
0x606 MLOAD
0x607 RETURNDATASIZE
0x608 PUSH1 0x20
0x60a DUP2
0x60b LT
0x60c ISZERO
0x60d PUSH2 0x615
0x610 JUMPI
---
0x5ff: JUMPDEST 
0x604: V338 = 0x40
0x606: V339 = M[0x40]
0x607: V340 = RETURNDATASIZE
0x608: V341 = 0x20
0x60b: V342 = LT V340 0x20
0x60c: V343 = ISZERO V342
0x60d: V344 = 0x615
0x610: JUMPI 0x615 V343
---
Entry stack: [V9, 0x128, V301, V303, 0x70a08231, V319, V331]
Stack pops: 4
Stack additions: [V339, V340]
Exit stack: [V9, 0x128, V301, V339, V340]

================================

Block 0x611
[0x611:0x614]
---
Predecessors: [0x5ff]
Successors: []
---
0x611 PUSH1 0x0
0x613 DUP1
0x614 REVERT
---
0x611: V345 = 0x0
0x614: REVERT 0x0 0x0
---
Entry stack: [V9, 0x128, V301, V339, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x128, V301, V339, V340]

================================

Block 0x615
[0x615:0x62e]
---
Predecessors: [0x5ff]
Successors: [0x128]
---
0x615 JUMPDEST
0x616 DUP2
0x617 ADD
0x618 SWAP1
0x619 DUP1
0x61a DUP1
0x61b MLOAD
0x61c SWAP1
0x61d PUSH1 0x20
0x61f ADD
0x620 SWAP1
0x621 SWAP3
0x622 SWAP2
0x623 SWAP1
0x624 POP
0x625 POP
0x626 POP
0x627 PUSH1 0x2
0x629 DUP2
0x62a SWAP1
0x62b SSTORE
0x62c POP
0x62d POP
0x62e JUMP
---
0x615: JUMPDEST 
0x617: V346 = ADD V339 V340
0x61b: V347 = M[V339]
0x61d: V348 = 0x20
0x61f: V349 = ADD 0x20 V339
0x627: V350 = 0x2
0x62b: S[0x2] = V347
0x62e: JUMP 0x128
---
Entry stack: [V9, 0x128, V301, V339, V340]
Stack pops: 4
Stack additions: []
Exit stack: [V9]

================================

Block 0x62f
[0x62f:0x685]
---
Predecessors: [0x14d]
Successors: [0x686, 0x68a]
---
0x62f JUMPDEST
0x630 PUSH1 0x0
0x632 DUP1
0x633 SWAP1
0x634 SLOAD
0x635 SWAP1
0x636 PUSH2 0x100
0x639 EXP
0x63a SWAP1
0x63b DIV
0x63c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x651 AND
0x652 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x667 AND
0x668 CALLER
0x669 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67e AND
0x67f EQ
0x680 ISZERO
0x681 ISZERO
0x682 PUSH2 0x68a
0x685 JUMPI
---
0x62f: JUMPDEST 
0x630: V351 = 0x0
0x634: V352 = S[0x0]
0x636: V353 = 0x100
0x639: V354 = EXP 0x100 0x0
0x63b: V355 = DIV V352 0x1
0x63c: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x651: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x652: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x667: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x668: V360 = CALLER
0x669: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x67f: V363 = EQ V362 V359
0x680: V364 = ISZERO V363
0x681: V365 = ISZERO V364
0x682: V366 = 0x68a
0x685: JUMPI 0x68a V365
---
Entry stack: [V9, 0x179, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x179, V86]

================================

Block 0x686
[0x686:0x689]
---
Predecessors: [0x62f]
Successors: []
---
0x686 PUSH1 0x0
0x688 DUP1
0x689 REVERT
---
0x686: V367 = 0x0
0x689: REVERT 0x0 0x0
---
Entry stack: [V9, 0x179, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x179, V86]

================================

Block 0x68a
[0x68a:0x6c1]
---
Predecessors: [0x62f]
Successors: [0x6c2, 0x6c6]
---
0x68a JUMPDEST
0x68b PUSH1 0x0
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 AND
0x6a3 DUP2
0x6a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b9 AND
0x6ba EQ
0x6bb ISZERO
0x6bc ISZERO
0x6bd ISZERO
0x6be PUSH2 0x6c6
0x6c1 JUMPI
---
0x68a: JUMPDEST 
0x68b: V368 = 0x0
0x68d: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6a4: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b9: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x6ba: V373 = EQ V372 0x0
0x6bb: V374 = ISZERO V373
0x6bc: V375 = ISZERO V374
0x6bd: V376 = ISZERO V375
0x6be: V377 = 0x6c6
0x6c1: JUMPI 0x6c6 V376
---
Entry stack: [V9, 0x179, V86]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x179, V86]

================================

Block 0x6c2
[0x6c2:0x6c5]
---
Predecessors: [0x68a]
Successors: []
---
0x6c2 PUSH1 0x0
0x6c4 DUP1
0x6c5 REVERT
---
0x6c2: V378 = 0x0
0x6c5: REVERT 0x0 0x0
---
Entry stack: [V9, 0x179, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x179, V86]

================================

Block 0x6c6
[0x6c6:0x783]
---
Predecessors: [0x68a]
Successors: [0x179]
---
0x6c6 JUMPDEST
0x6c7 DUP1
0x6c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6dd AND
0x6de PUSH1 0x0
0x6e0 DUP1
0x6e1 SWAP1
0x6e2 SLOAD
0x6e3 SWAP1
0x6e4 PUSH2 0x100
0x6e7 EXP
0x6e8 SWAP1
0x6e9 DIV
0x6ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ff AND
0x700 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x715 AND
0x716 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x737 PUSH1 0x40
0x739 MLOAD
0x73a PUSH1 0x40
0x73c MLOAD
0x73d DUP1
0x73e SWAP2
0x73f SUB
0x740 SWAP1
0x741 LOG3
0x742 DUP1
0x743 PUSH1 0x0
0x745 DUP1
0x746 PUSH2 0x100
0x749 EXP
0x74a DUP2
0x74b SLOAD
0x74c DUP2
0x74d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x762 MUL
0x763 NOT
0x764 AND
0x765 SWAP1
0x766 DUP4
0x767 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77c AND
0x77d MUL
0x77e OR
0x77f SWAP1
0x780 SSTORE
0x781 POP
0x782 POP
0x783 JUMP
---
0x6c6: JUMPDEST 
0x6c8: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x6dd: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x6de: V381 = 0x0
0x6e2: V382 = S[0x0]
0x6e4: V383 = 0x100
0x6e7: V384 = EXP 0x100 0x0
0x6e9: V385 = DIV V382 0x1
0x6ea: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ff: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x700: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x715: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x716: V390 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x737: V391 = 0x40
0x739: V392 = M[0x40]
0x73a: V393 = 0x40
0x73c: V394 = M[0x40]
0x73f: V395 = SUB V392 V394
0x741: LOG V394 V395 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V389 V380
0x743: V396 = 0x0
0x746: V397 = 0x100
0x749: V398 = EXP 0x100 0x0
0x74b: V399 = S[0x0]
0x74d: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x762: V401 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x763: V402 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x764: V403 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V399
0x767: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x77c: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x77d: V406 = MUL V405 0x1
0x77e: V407 = OR V406 V403
0x780: S[0x0] = V407
0x783: JUMP 0x179
---
Entry stack: [V9, 0x179, V86]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x784
[0x784:0x7af]
---
Predecessors: []
Successors: []
---
0x784 INVALID
0x785 LOG1
0x786 PUSH6 0x627a7a723058
0x78d SHA3
0x78e PUSH20 0xe4d4695e02e0fd08d15dea36122b8af83276d4d4
0x7a3 MISSING 0xac
0x7a4 MISSING 0xeb
0x7a5 PUSH10 0x43412c570c27b2f70029
---
0x784: INVALID 
0x785: LOG S0 S1 S2
0x786: V408 = 0x627a7a723058
0x78d: V409 = SHA3 0x627a7a723058 S3
0x78e: V410 = 0xe4d4695e02e0fd08d15dea36122b8af83276d4d4
0x7a3: MISSING 0xac
0x7a4: MISSING 0xeb
0x7a5: V411 = 0x43412c570c27b2f70029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe4d4695e02e0fd08d15dea36122b8af83276d4d4, V409, 0x43412c570c27b2f70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x123501ee
Entry block: 0x77
Exit block: 0x8c
Body: 0x77, 0x7f, 0x83, 0x8c, 0x17b, 0x2c2, 0x2cd, 0x2e7, 0x329, 0x34a, 0x34f

Function 1:
Public function signature: 0x3c24ca5d
Entry block: 0x8e
Exit block: 0x3ab
Body: 0x8e, 0x96, 0x9a, 0x354, 0x3ab, 0x3af

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xa5
Exit block: 0xba
Body: 0xa5, 0xad, 0xb1, 0xba, 0x3c8

Function 3:
Public function signature: 0xbb35d94c
Entry block: 0xfc
Exit block: 0x111
Body: 0xfc, 0x104, 0x108, 0x111, 0x3ed, 0x4e8, 0x4ec, 0x4f7, 0x500, 0x512, 0x516

Function 4:
Public function signature: 0xc8cfa2bf
Entry block: 0x113
Exit block: 0x128
Body: 0x113, 0x11b, 0x11f, 0x128, 0x52b, 0x5e7, 0x5eb, 0x5f6, 0x5ff, 0x611, 0x615

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x12a
Exit block: 0x179
Body: 0x12a, 0x132, 0x136, 0x149, 0x14d, 0x179, 0x62f, 0x686, 0x68a, 0x6c2, 0x6c6

Function 6:
Public fallback function
Entry block: 0x72
Exit block: 0x72
Body: 0x72

