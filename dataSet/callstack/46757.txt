Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11610c25
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11610c25
0x3c: V13 = EQ 0x11610c25 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8f]
---
0x41 DUP1
0x42 PUSH4 0x1521249a
0x47 EQ
0x48 PUSH2 0x8f
0x4b JUMPI
---
0x42: V15 = 0x1521249a
0x47: V16 = EQ 0x1521249a V11
0x48: V17 = 0x8f
0x4b: JUMPI 0x8f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbc]
---
0x4c DUP1
0x4d PUSH4 0x35f46994
0x52 EQ
0x53 PUSH2 0xbc
0x56 JUMPI
---
0x4d: V18 = 0x35f46994
0x52: V19 = EQ 0x35f46994 V11
0x53: V20 = 0xbc
0x56: JUMPI 0xbc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xd3]
---
0x57 DUP1
0x58 PUSH4 0x3ccfd60b
0x5d EQ
0x5e PUSH2 0xd3
0x61 JUMPI
---
0x58: V21 = 0x3ccfd60b
0x5d: V22 = EQ 0x3ccfd60b V11
0x5e: V23 = 0xd3
0x61: JUMPI 0xd3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0xea]
---
0x62 DUP1
0x63 PUSH4 0x3d18fb54
0x68 EQ
0x69 PUSH2 0xea
0x6c JUMPI
---
0x63: V24 = 0x3d18fb54
0x68: V25 = EQ 0x3d18fb54 V11
0x69: V26 = 0xea
0x6c: JUMPI 0xea V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x10a]
---
0x6d DUP1
0x6e PUSH4 0x677bd22f
0x73 EQ
0x74 PUSH2 0x10a
0x77 JUMPI
---
0x6e: V27 = 0x677bd22f
0x73: V28 = EQ 0x677bd22f V11
0x74: V29 = 0x10a
0x77: JUMPI 0x10a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x14b]
---
0x78 DUP1
0x79 PUSH4 0xbf2fdf96
0x7e EQ
0x7f PUSH2 0x14b
0x82 JUMPI
---
0x79: V30 = 0xbf2fdf96
0x7e: V31 = EQ 0xbf2fdf96 V11
0x7f: V32 = 0x14b
0x82: JUMPI 0x14b V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0xd]
Successors: [0x18e]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x18e
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V33 = 0x8d
0x89: V34 = 0x18e
0x8c: JUMP 0x18e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x3c7]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0x41]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V35 = CALLVALUE
0x92: V36 = ISZERO V35
0x93: V37 = 0x9b
0x96: JUMPI 0x9b V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V38 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0x9b
[0x9b:0xb9]
---
Predecessors: [0x8f]
Successors: [0x3ca]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0xba
0xa0 PUSH1 0x4
0xa2 DUP1
0xa3 CALLDATASIZE
0xa4 SUB
0xa5 DUP2
0xa6 ADD
0xa7 SWAP1
0xa8 DUP1
0xa9 DUP1
0xaa CALLDATALOAD
0xab SWAP1
0xac PUSH1 0x20
0xae ADD
0xaf SWAP1
0xb0 SWAP3
0xb1 SWAP2
0xb2 SWAP1
0xb3 POP
0xb4 POP
0xb5 POP
0xb6 PUSH2 0x3ca
0xb9 JUMP
---
0x9b: JUMPDEST 
0x9d: V39 = 0xba
0xa0: V40 = 0x4
0xa3: V41 = CALLDATASIZE
0xa4: V42 = SUB V41 0x4
0xa6: V43 = ADD 0x4 V42
0xaa: V44 = CALLDATALOAD 0x4
0xac: V45 = 0x20
0xae: V46 = ADD 0x20 0x4
0xb6: V47 = 0x3ca
0xb9: JUMP 0x3ca
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0xba, V44]
Exit stack: [V11, 0xba, V44]

================================

Block 0xba
[0xba:0xbb]
---
Predecessors: [0x425]
Successors: []
---
0xba JUMPDEST
0xbb STOP
---
0xba: JUMPDEST 
0xbb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0x4c]
Successors: [0xc4, 0xc8]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe DUP1
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbc: JUMPDEST 
0xbd: V48 = CALLVALUE
0xbf: V49 = ISZERO V48
0xc0: V50 = 0xc8
0xc3: JUMPI 0xc8 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbc]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V51 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xc8
[0xc8:0xd0]
---
Predecessors: [0xbc]
Successors: [0x42f]
---
0xc8 JUMPDEST
0xc9 POP
0xca PUSH2 0xd1
0xcd PUSH2 0x42f
0xd0 JUMP
---
0xc8: JUMPDEST 
0xca: V52 = 0xd1
0xcd: V53 = 0x42f
0xd0: JUMP 0x42f
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xd1]
Exit stack: [V11, 0xd1]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: []
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd3
[0xd3:0xda]
---
Predecessors: [0x57]
Successors: [0xdb, 0xdf]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 DUP1
0xd6 ISZERO
0xd7 PUSH2 0xdf
0xda JUMPI
---
0xd3: JUMPDEST 
0xd4: V54 = CALLVALUE
0xd6: V55 = ISZERO V54
0xd7: V56 = 0xdf
0xda: JUMPI 0xdf V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xdb
[0xdb:0xde]
---
Predecessors: [0xd3]
Successors: []
---
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xdb: V57 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xdf
[0xdf:0xe7]
---
Predecessors: [0xd3]
Successors: [0x4c4]
---
0xdf JUMPDEST
0xe0 POP
0xe1 PUSH2 0xe8
0xe4 PUSH2 0x4c4
0xe7 JUMP
---
0xdf: JUMPDEST 
0xe1: V58 = 0xe8
0xe4: V59 = 0x4c4
0xe7: JUMP 0x4c4
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xe8]
Exit stack: [V11, 0xe8]

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: [0x59d]
Successors: []
---
0xe8 JUMPDEST
0xe9 STOP
---
0xe8: JUMPDEST 
0xe9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xea
[0xea:0x107]
---
Predecessors: [0x62]
Successors: [0x5a0]
---
0xea JUMPDEST
0xeb PUSH2 0x108
0xee PUSH1 0x4
0xf0 DUP1
0xf1 CALLDATASIZE
0xf2 SUB
0xf3 DUP2
0xf4 ADD
0xf5 SWAP1
0xf6 DUP1
0xf7 DUP1
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe SWAP3
0xff SWAP2
0x100 SWAP1
0x101 POP
0x102 POP
0x103 POP
0x104 PUSH2 0x5a0
0x107 JUMP
---
0xea: JUMPDEST 
0xeb: V60 = 0x108
0xee: V61 = 0x4
0xf1: V62 = CALLDATASIZE
0xf2: V63 = SUB V62 0x4
0xf4: V64 = ADD 0x4 V63
0xf8: V65 = CALLDATALOAD 0x4
0xfa: V66 = 0x20
0xfc: V67 = ADD 0x20 0x4
0x104: V68 = 0x5a0
0x107: JUMP 0x5a0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x108, V65]
Exit stack: [V11, 0x108, V65]

================================

Block 0x108
[0x108:0x109]
---
Predecessors: [0x93d]
Successors: []
---
0x108 JUMPDEST
0x109 STOP
---
0x108: JUMPDEST 
0x109: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10a
[0x10a:0x111]
---
Predecessors: [0x6d]
Successors: [0x112, 0x116]
---
0x10a JUMPDEST
0x10b CALLVALUE
0x10c DUP1
0x10d ISZERO
0x10e PUSH2 0x116
0x111 JUMPI
---
0x10a: JUMPDEST 
0x10b: V69 = CALLVALUE
0x10d: V70 = ISZERO V69
0x10e: V71 = 0x116
0x111: JUMPI 0x116 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0x112
[0x112:0x115]
---
Predecessors: [0x10a]
Successors: []
---
0x112 PUSH1 0x0
0x114 DUP1
0x115 REVERT
---
0x112: V72 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0x116
[0x116:0x148]
---
Predecessors: [0x10a]
Successors: [0x945]
---
0x116 JUMPDEST
0x117 POP
0x118 PUSH2 0x149
0x11b PUSH1 0x4
0x11d DUP1
0x11e CALLDATASIZE
0x11f SUB
0x120 DUP2
0x121 ADD
0x122 SWAP1
0x123 DUP1
0x124 DUP1
0x125 CALLDATALOAD
0x126 SWAP1
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b SWAP3
0x12c SWAP2
0x12d SWAP1
0x12e DUP1
0x12f CALLDATALOAD
0x130 SWAP1
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 SWAP3
0x136 SWAP2
0x137 SWAP1
0x138 DUP1
0x139 CALLDATALOAD
0x13a SWAP1
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP1
0x13f SWAP3
0x140 SWAP2
0x141 SWAP1
0x142 POP
0x143 POP
0x144 POP
0x145 PUSH2 0x945
0x148 JUMP
---
0x116: JUMPDEST 
0x118: V73 = 0x149
0x11b: V74 = 0x4
0x11e: V75 = CALLDATASIZE
0x11f: V76 = SUB V75 0x4
0x121: V77 = ADD 0x4 V76
0x125: V78 = CALLDATALOAD 0x4
0x127: V79 = 0x20
0x129: V80 = ADD 0x20 0x4
0x12f: V81 = CALLDATALOAD 0x24
0x131: V82 = 0x20
0x133: V83 = ADD 0x20 0x24
0x139: V84 = CALLDATALOAD 0x44
0x13b: V85 = 0x20
0x13d: V86 = ADD 0x20 0x44
0x145: V87 = 0x945
0x148: JUMP 0x945
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x149, V78, V81, V84]
Exit stack: [V11, 0x149, V78, V81, V84]

================================

Block 0x149
[0x149:0x14a]
---
Predecessors: [0x9a0]
Successors: []
---
0x149 JUMPDEST
0x14a STOP
---
0x149: JUMPDEST 
0x14a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14b
[0x14b:0x152]
---
Predecessors: [0x78]
Successors: [0x153, 0x157]
---
0x14b JUMPDEST
0x14c CALLVALUE
0x14d DUP1
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14b: JUMPDEST 
0x14c: V88 = CALLVALUE
0x14e: V89 = ISZERO V88
0x14f: V90 = 0x157
0x152: JUMPI 0x157 V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14b]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V91 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V11, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V88]

================================

Block 0x157
[0x157:0x18b]
---
Predecessors: [0x14b]
Successors: [0x9ba]
---
0x157 JUMPDEST
0x158 POP
0x159 PUSH2 0x18c
0x15c PUSH1 0x4
0x15e DUP1
0x15f CALLDATASIZE
0x160 SUB
0x161 DUP2
0x162 ADD
0x163 SWAP1
0x164 DUP1
0x165 DUP1
0x166 CALLDATALOAD
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d SWAP1
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP1
0x182 SWAP3
0x183 SWAP2
0x184 SWAP1
0x185 POP
0x186 POP
0x187 POP
0x188 PUSH2 0x9ba
0x18b JUMP
---
0x157: JUMPDEST 
0x159: V92 = 0x18c
0x15c: V93 = 0x4
0x15f: V94 = CALLDATASIZE
0x160: V95 = SUB V94 0x4
0x162: V96 = ADD 0x4 V95
0x166: V97 = CALLDATALOAD 0x4
0x167: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x17e: V100 = 0x20
0x180: V101 = ADD 0x20 0x4
0x188: V102 = 0x9ba
0x18b: JUMP 0x9ba
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: [0x18c, V99]
Exit stack: [V11, 0x18c, V99]

================================

Block 0x18c
[0x18c:0x18d]
---
Predecessors: [0xa15]
Successors: []
---
0x18c JUMPDEST
0x18d STOP
---
0x18c: JUMPDEST 
0x18d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18e
[0x18e:0x248]
---
Predecessors: [0x85]
Successors: [0x249]
---
0x18e JUMPDEST
0x18f PUSH1 0x0
0x191 ADDRESS
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 PUSH1 0x4
0x1aa SLOAD
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae PUSH1 0x24
0x1b0 ADD
0x1b1 DUP1
0x1b2 DUP3
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP2
0x1b9 POP
0x1ba POP
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be PUSH1 0x20
0x1c0 DUP2
0x1c1 DUP4
0x1c2 SUB
0x1c3 SUB
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 SWAP1
0x1c7 PUSH1 0x40
0x1c9 MSTORE
0x1ca PUSH32 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x1eb PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x208 NOT
0x209 AND
0x20a PUSH1 0x20
0x20c DUP3
0x20d ADD
0x20e DUP1
0x20f MLOAD
0x210 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x22d DUP4
0x22e DUP2
0x22f DUP4
0x230 AND
0x231 OR
0x232 DUP4
0x233 MSTORE
0x234 POP
0x235 POP
0x236 POP
0x237 POP
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP3
0x23d DUP1
0x23e MLOAD
0x23f SWAP1
0x240 PUSH1 0x20
0x242 ADD
0x243 SWAP1
0x244 DUP1
0x245 DUP4
0x246 DUP4
0x247 PUSH1 0x0
---
0x18e: JUMPDEST 
0x18f: V103 = 0x0
0x191: V104 = ADDRESS
0x192: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1a8: V107 = 0x4
0x1aa: V108 = S[0x4]
0x1ab: V109 = 0x40
0x1ad: V110 = M[0x40]
0x1ae: V111 = 0x24
0x1b0: V112 = ADD 0x24 V110
0x1b4: M[V112] = V108
0x1b5: V113 = 0x20
0x1b7: V114 = ADD 0x20 V112
0x1bb: V115 = 0x40
0x1bd: V116 = M[0x40]
0x1be: V117 = 0x20
0x1c2: V118 = SUB V114 V116
0x1c3: V119 = SUB V118 0x20
0x1c5: M[V116] = V119
0x1c7: V120 = 0x40
0x1c9: M[0x40] = V114
0x1ca: V121 = 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x1eb: V122 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x208: V123 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x209: V124 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x20a: V125 = 0x20
0x20d: V126 = ADD V116 0x20
0x20f: V127 = M[V126]
0x210: V128 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x230: V129 = AND V127 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x231: V130 = OR V129 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x233: M[V126] = V130
0x238: V131 = 0x40
0x23a: V132 = M[0x40]
0x23e: V133 = M[V116]
0x240: V134 = 0x20
0x242: V135 = ADD 0x20 V116
0x247: V136 = 0x0
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x0, V106, V116, V132, V132, V135, V133, V133, V132, V135, 0x0]
Exit stack: [V11, 0x8d, 0x0, V106, V116, V132, V132, V135, V133, V133, V132, V135, 0x0]

================================

Block 0x249
[0x249:0x251]
---
Predecessors: [0x18e, 0x252]
Successors: [0x252, 0x264]
---
0x249 JUMPDEST
0x24a DUP4
0x24b DUP2
0x24c LT
0x24d ISZERO
0x24e PUSH2 0x264
0x251 JUMPI
---
0x249: JUMPDEST 
0x24c: V137 = LT S0 V133
0x24d: V138 = ISZERO V137
0x24e: V139 = 0x264
0x251: JUMPI 0x264 V138
---
Entry stack: [V11, 0x8d, 0x0, V106, V116, V132, V132, V135, V133, V133, V132, V135, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x8d, 0x0, V106, V116, V132, V132, V135, V133, V133, V132, V135, S0]

================================

Block 0x252
[0x252:0x263]
---
Predecessors: [0x249]
Successors: [0x249]
---
0x252 DUP1
0x253 DUP3
0x254 ADD
0x255 MLOAD
0x256 DUP2
0x257 DUP5
0x258 ADD
0x259 MSTORE
0x25a PUSH1 0x20
0x25c DUP2
0x25d ADD
0x25e SWAP1
0x25f POP
0x260 PUSH2 0x249
0x263 JUMP
---
0x254: V140 = ADD V135 S0
0x255: V141 = M[V140]
0x258: V142 = ADD V132 S0
0x259: M[V142] = V141
0x25a: V143 = 0x20
0x25d: V144 = ADD S0 0x20
0x260: V145 = 0x249
0x263: JUMP 0x249
---
Entry stack: [V11, 0x8d, 0x0, V106, V116, V132, V132, V135, V133, V133, V132, V135, S0]
Stack pops: 3
Stack additions: [S2, S1, V144]
Exit stack: [V11, 0x8d, 0x0, V106, V116, V132, V132, V135, V133, V133, V132, V135, V144]

================================

Block 0x264
[0x264:0x277]
---
Predecessors: [0x249]
Successors: [0x278, 0x291]
---
0x264 JUMPDEST
0x265 POP
0x266 POP
0x267 POP
0x268 POP
0x269 SWAP1
0x26a POP
0x26b SWAP1
0x26c DUP2
0x26d ADD
0x26e SWAP1
0x26f PUSH1 0x1f
0x271 AND
0x272 DUP1
0x273 ISZERO
0x274 PUSH2 0x291
0x277 JUMPI
---
0x264: JUMPDEST 
0x26d: V146 = ADD V133 V132
0x26f: V147 = 0x1f
0x271: V148 = AND 0x1f V133
0x273: V149 = ISZERO V148
0x274: V150 = 0x291
0x277: JUMPI 0x291 V149
---
Entry stack: [V11, 0x8d, 0x0, V106, V116, V132, V132, V135, V133, V133, V132, V135, S0]
Stack pops: 7
Stack additions: [V146, V148]
Exit stack: [V11, 0x8d, 0x0, V106, V116, V132, V146, V148]

================================

Block 0x278
[0x278:0x290]
---
Predecessors: [0x264]
Successors: [0x291]
---
0x278 DUP1
0x279 DUP3
0x27a SUB
0x27b DUP1
0x27c MLOAD
0x27d PUSH1 0x1
0x27f DUP4
0x280 PUSH1 0x20
0x282 SUB
0x283 PUSH2 0x100
0x286 EXP
0x287 SUB
0x288 NOT
0x289 AND
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP2
0x290 POP
---
0x27a: V151 = SUB V146 V148
0x27c: V152 = M[V151]
0x27d: V153 = 0x1
0x280: V154 = 0x20
0x282: V155 = SUB 0x20 V148
0x283: V156 = 0x100
0x286: V157 = EXP 0x100 V155
0x287: V158 = SUB V157 0x1
0x288: V159 = NOT V158
0x289: V160 = AND V159 V152
0x28b: M[V151] = V160
0x28c: V161 = 0x20
0x28e: V162 = ADD 0x20 V151
---
Entry stack: [V11, 0x8d, 0x0, V106, V116, V132, V146, V148]
Stack pops: 2
Stack additions: [V162, S0]
Exit stack: [V11, 0x8d, 0x0, V106, V116, V132, V162, V148]

================================

Block 0x291
[0x291:0x2af]
---
Predecessors: [0x264, 0x278]
Successors: [0x2b0, 0x3c7]
---
0x291 JUMPDEST
0x292 POP
0x293 SWAP2
0x294 POP
0x295 POP
0x296 PUSH1 0x0
0x298 PUSH1 0x40
0x29a MLOAD
0x29b DUP1
0x29c DUP4
0x29d SUB
0x29e DUP2
0x29f PUSH1 0x0
0x2a1 DUP7
0x2a2 GAS
0x2a3 CALL
0x2a4 SWAP2
0x2a5 POP
0x2a6 POP
0x2a7 SWAP1
0x2a8 POP
0x2a9 DUP1
0x2aa ISZERO
0x2ab ISZERO
0x2ac PUSH2 0x3c7
0x2af JUMPI
---
0x291: JUMPDEST 
0x296: V163 = 0x0
0x298: V164 = 0x40
0x29a: V165 = M[0x40]
0x29d: V166 = SUB S1 V165
0x29f: V167 = 0x0
0x2a2: V168 = GAS
0x2a3: V169 = CALL V168 V106 0x0 V165 V166 V165 0x0
0x2aa: V170 = ISZERO V169
0x2ab: V171 = ISZERO V170
0x2ac: V172 = 0x3c7
0x2af: JUMPI 0x3c7 V171
---
Entry stack: [V11, 0x8d, 0x0, V106, V116, V132, S1, V148]
Stack pops: 6
Stack additions: [V169]
Exit stack: [V11, 0x8d, V169]

================================

Block 0x2b0
[0x2b0:0x367]
---
Predecessors: [0x291]
Successors: [0x368]
---
0x2b0 ADDRESS
0x2b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c6 AND
0x2c7 PUSH1 0x5
0x2c9 SLOAD
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd PUSH1 0x24
0x2cf ADD
0x2d0 DUP1
0x2d1 DUP3
0x2d2 DUP2
0x2d3 MSTORE
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 SWAP2
0x2d8 POP
0x2d9 POP
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd PUSH1 0x20
0x2df DUP2
0x2e0 DUP4
0x2e1 SUB
0x2e2 SUB
0x2e3 DUP2
0x2e4 MSTORE
0x2e5 SWAP1
0x2e6 PUSH1 0x40
0x2e8 MSTORE
0x2e9 PUSH32 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x30a PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x327 NOT
0x328 AND
0x329 PUSH1 0x20
0x32b DUP3
0x32c ADD
0x32d DUP1
0x32e MLOAD
0x32f PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x34c DUP4
0x34d DUP2
0x34e DUP4
0x34f AND
0x350 OR
0x351 DUP4
0x352 MSTORE
0x353 POP
0x354 POP
0x355 POP
0x356 POP
0x357 PUSH1 0x40
0x359 MLOAD
0x35a DUP1
0x35b DUP3
0x35c DUP1
0x35d MLOAD
0x35e SWAP1
0x35f PUSH1 0x20
0x361 ADD
0x362 SWAP1
0x363 DUP1
0x364 DUP4
0x365 DUP4
0x366 PUSH1 0x0
---
0x2b0: V173 = ADDRESS
0x2b1: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2c7: V176 = 0x5
0x2c9: V177 = S[0x5]
0x2ca: V178 = 0x40
0x2cc: V179 = M[0x40]
0x2cd: V180 = 0x24
0x2cf: V181 = ADD 0x24 V179
0x2d3: M[V181] = V177
0x2d4: V182 = 0x20
0x2d6: V183 = ADD 0x20 V181
0x2da: V184 = 0x40
0x2dc: V185 = M[0x40]
0x2dd: V186 = 0x20
0x2e1: V187 = SUB V183 V185
0x2e2: V188 = SUB V187 0x20
0x2e4: M[V185] = V188
0x2e6: V189 = 0x40
0x2e8: M[0x40] = V183
0x2e9: V190 = 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x30a: V191 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x327: V192 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x328: V193 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x329: V194 = 0x20
0x32c: V195 = ADD V185 0x20
0x32e: V196 = M[V195]
0x32f: V197 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x34f: V198 = AND V196 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x350: V199 = OR V198 0x3d18fb5400000000000000000000000000000000000000000000000000000000
0x352: M[V195] = V199
0x357: V200 = 0x40
0x359: V201 = M[0x40]
0x35d: V202 = M[V185]
0x35f: V203 = 0x20
0x361: V204 = ADD 0x20 V185
0x366: V205 = 0x0
---
Entry stack: [V11, 0x8d, V169]
Stack pops: 0
Stack additions: [V175, V185, V201, V201, V204, V202, V202, V201, V204, 0x0]
Exit stack: [V11, 0x8d, V169, V175, V185, V201, V201, V204, V202, V202, V201, V204, 0x0]

================================

Block 0x368
[0x368:0x370]
---
Predecessors: [0x2b0, 0x371]
Successors: [0x371, 0x383]
---
0x368 JUMPDEST
0x369 DUP4
0x36a DUP2
0x36b LT
0x36c ISZERO
0x36d PUSH2 0x383
0x370 JUMPI
---
0x368: JUMPDEST 
0x36b: V206 = LT S0 V202
0x36c: V207 = ISZERO V206
0x36d: V208 = 0x383
0x370: JUMPI 0x383 V207
---
Entry stack: [V11, 0x8d, V169, V175, V185, V201, V201, V204, V202, V202, V201, V204, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x8d, V169, V175, V185, V201, V201, V204, V202, V202, V201, V204, S0]

================================

Block 0x371
[0x371:0x382]
---
Predecessors: [0x368]
Successors: [0x368]
---
0x371 DUP1
0x372 DUP3
0x373 ADD
0x374 MLOAD
0x375 DUP2
0x376 DUP5
0x377 ADD
0x378 MSTORE
0x379 PUSH1 0x20
0x37b DUP2
0x37c ADD
0x37d SWAP1
0x37e POP
0x37f PUSH2 0x368
0x382 JUMP
---
0x373: V209 = ADD V204 S0
0x374: V210 = M[V209]
0x377: V211 = ADD V201 S0
0x378: M[V211] = V210
0x379: V212 = 0x20
0x37c: V213 = ADD S0 0x20
0x37f: V214 = 0x368
0x382: JUMP 0x368
---
Entry stack: [V11, 0x8d, V169, V175, V185, V201, V201, V204, V202, V202, V201, V204, S0]
Stack pops: 3
Stack additions: [S2, S1, V213]
Exit stack: [V11, 0x8d, V169, V175, V185, V201, V201, V204, V202, V202, V201, V204, V213]

================================

Block 0x383
[0x383:0x396]
---
Predecessors: [0x368]
Successors: [0x397, 0x3b0]
---
0x383 JUMPDEST
0x384 POP
0x385 POP
0x386 POP
0x387 POP
0x388 SWAP1
0x389 POP
0x38a SWAP1
0x38b DUP2
0x38c ADD
0x38d SWAP1
0x38e PUSH1 0x1f
0x390 AND
0x391 DUP1
0x392 ISZERO
0x393 PUSH2 0x3b0
0x396 JUMPI
---
0x383: JUMPDEST 
0x38c: V215 = ADD V202 V201
0x38e: V216 = 0x1f
0x390: V217 = AND 0x1f V202
0x392: V218 = ISZERO V217
0x393: V219 = 0x3b0
0x396: JUMPI 0x3b0 V218
---
Entry stack: [V11, 0x8d, V169, V175, V185, V201, V201, V204, V202, V202, V201, V204, S0]
Stack pops: 7
Stack additions: [V215, V217]
Exit stack: [V11, 0x8d, V169, V175, V185, V201, V215, V217]

================================

Block 0x397
[0x397:0x3af]
---
Predecessors: [0x383]
Successors: [0x3b0]
---
0x397 DUP1
0x398 DUP3
0x399 SUB
0x39a DUP1
0x39b MLOAD
0x39c PUSH1 0x1
0x39e DUP4
0x39f PUSH1 0x20
0x3a1 SUB
0x3a2 PUSH2 0x100
0x3a5 EXP
0x3a6 SUB
0x3a7 NOT
0x3a8 AND
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae SWAP2
0x3af POP
---
0x399: V220 = SUB V215 V217
0x39b: V221 = M[V220]
0x39c: V222 = 0x1
0x39f: V223 = 0x20
0x3a1: V224 = SUB 0x20 V217
0x3a2: V225 = 0x100
0x3a5: V226 = EXP 0x100 V224
0x3a6: V227 = SUB V226 0x1
0x3a7: V228 = NOT V227
0x3a8: V229 = AND V228 V221
0x3aa: M[V220] = V229
0x3ab: V230 = 0x20
0x3ad: V231 = ADD 0x20 V220
---
Entry stack: [V11, 0x8d, V169, V175, V185, V201, V215, V217]
Stack pops: 2
Stack additions: [V231, S0]
Exit stack: [V11, 0x8d, V169, V175, V185, V201, V231, V217]

================================

Block 0x3b0
[0x3b0:0x3c6]
---
Predecessors: [0x383, 0x397]
Successors: [0x3c7]
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 SWAP2
0x3b3 POP
0x3b4 POP
0x3b5 PUSH1 0x0
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba DUP1
0x3bb DUP4
0x3bc SUB
0x3bd DUP2
0x3be PUSH1 0x0
0x3c0 DUP7
0x3c1 GAS
0x3c2 CALL
0x3c3 SWAP2
0x3c4 POP
0x3c5 POP
0x3c6 POP
---
0x3b0: JUMPDEST 
0x3b5: V232 = 0x0
0x3b7: V233 = 0x40
0x3b9: V234 = M[0x40]
0x3bc: V235 = SUB S1 V234
0x3be: V236 = 0x0
0x3c1: V237 = GAS
0x3c2: V238 = CALL V237 V175 0x0 V234 V235 V234 0x0
---
Entry stack: [V11, 0x8d, V169, V175, V185, V201, S1, V217]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x8d, V169]

================================

Block 0x3c7
[0x3c7:0x3c9]
---
Predecessors: [0x291, 0x3b0]
Successors: [0x8d]
---
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 JUMP
---
0x3c7: JUMPDEST 
0x3c9: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V169]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ca
[0x3ca:0x420]
---
Predecessors: [0x9b]
Successors: [0x421, 0x425]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce SWAP1
0x3cf SLOAD
0x3d0 SWAP1
0x3d1 PUSH2 0x100
0x3d4 EXP
0x3d5 SWAP1
0x3d6 DIV
0x3d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ec AND
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 CALLER
0x404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x419 AND
0x41a EQ
0x41b ISZERO
0x41c ISZERO
0x41d PUSH2 0x425
0x420 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V239 = 0x0
0x3cf: V240 = S[0x0]
0x3d1: V241 = 0x100
0x3d4: V242 = EXP 0x100 0x0
0x3d6: V243 = DIV V240 0x1
0x3d7: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x3ed: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x403: V248 = CALLER
0x404: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x419: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x41a: V251 = EQ V250 V247
0x41b: V252 = ISZERO V251
0x41c: V253 = ISZERO V252
0x41d: V254 = 0x425
0x420: JUMPI 0x425 V253
---
Entry stack: [V11, 0xba, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba, V44]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x3ca]
Successors: []
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
---
0x421: V255 = 0x0
0x424: REVERT 0x0 0x0
---
Entry stack: [V11, 0xba, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba, V44]

================================

Block 0x425
[0x425:0x42e]
---
Predecessors: [0x3ca]
Successors: [0xba]
---
0x425 JUMPDEST
0x426 DUP1
0x427 PUSH1 0x2
0x429 DUP2
0x42a SWAP1
0x42b SSTORE
0x42c POP
0x42d POP
0x42e JUMP
---
0x425: JUMPDEST 
0x427: V256 = 0x2
0x42b: S[0x2] = V44
0x42e: JUMP 0xba
---
Entry stack: [V11, 0xba, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x42f
[0x42f:0x485]
---
Predecessors: [0xc8]
Successors: [0x486, 0x48a]
---
0x42f JUMPDEST
0x430 PUSH1 0x0
0x432 DUP1
0x433 SWAP1
0x434 SLOAD
0x435 SWAP1
0x436 PUSH2 0x100
0x439 EXP
0x43a SWAP1
0x43b DIV
0x43c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x451 AND
0x452 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x467 AND
0x468 CALLER
0x469 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47e AND
0x47f EQ
0x480 ISZERO
0x481 ISZERO
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x42f: JUMPDEST 
0x430: V257 = 0x0
0x434: V258 = S[0x0]
0x436: V259 = 0x100
0x439: V260 = EXP 0x100 0x0
0x43b: V261 = DIV V258 0x1
0x43c: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x451: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x452: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x467: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x468: V266 = CALLER
0x469: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x47f: V269 = EQ V268 V265
0x480: V270 = ISZERO V269
0x481: V271 = ISZERO V270
0x482: V272 = 0x48a
0x485: JUMPI 0x48a V271
---
Entry stack: [V11, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x42f]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V273 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1]

================================

Block 0x48a
[0x48a:0x4c3]
---
Predecessors: [0x42f]
Successors: []
---
0x48a JUMPDEST
0x48b PUSH1 0x0
0x48d DUP1
0x48e SWAP1
0x48f SLOAD
0x490 SWAP1
0x491 PUSH2 0x100
0x494 EXP
0x495 SWAP1
0x496 DIV
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 AND
0x4c3 SELFDESTRUCT
---
0x48a: JUMPDEST 
0x48b: V274 = 0x0
0x48f: V275 = S[0x0]
0x491: V276 = 0x100
0x494: V277 = EXP 0x100 0x0
0x496: V278 = DIV V275 0x1
0x497: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4ad: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x4c3: SELFDESTRUCT V282
---
Entry stack: [V11, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1]

================================

Block 0x4c4
[0x4c4:0x51a]
---
Predecessors: [0xdf]
Successors: [0x51b, 0x51f]
---
0x4c4 JUMPDEST
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 SWAP1
0x4c9 SLOAD
0x4ca SWAP1
0x4cb PUSH2 0x100
0x4ce EXP
0x4cf SWAP1
0x4d0 DIV
0x4d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e6 AND
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd CALLER
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 EQ
0x515 ISZERO
0x516 ISZERO
0x517 PUSH2 0x51f
0x51a JUMPI
---
0x4c4: JUMPDEST 
0x4c5: V283 = 0x0
0x4c9: V284 = S[0x0]
0x4cb: V285 = 0x100
0x4ce: V286 = EXP 0x100 0x0
0x4d0: V287 = DIV V284 0x1
0x4d1: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e6: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x4e7: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x4fd: V292 = CALLER
0x4fe: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x514: V295 = EQ V294 V291
0x515: V296 = ISZERO V295
0x516: V297 = ISZERO V296
0x517: V298 = 0x51f
0x51a: JUMPI 0x51f V297
---
Entry stack: [V11, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe8]

================================

Block 0x51b
[0x51b:0x51e]
---
Predecessors: [0x4c4]
Successors: []
---
0x51b PUSH1 0x0
0x51d DUP1
0x51e REVERT
---
0x51b: V299 = 0x0
0x51e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe8]

================================

Block 0x51f
[0x51f:0x593]
---
Predecessors: [0x4c4]
Successors: [0x594, 0x59d]
---
0x51f JUMPDEST
0x520 PUSH1 0x0
0x522 DUP1
0x523 SWAP1
0x524 SLOAD
0x525 SWAP1
0x526 PUSH2 0x100
0x529 EXP
0x52a SWAP1
0x52b DIV
0x52c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x541 AND
0x542 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x557 AND
0x558 PUSH2 0x8fc
0x55b ADDRESS
0x55c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x571 AND
0x572 BALANCE
0x573 SWAP1
0x574 DUP2
0x575 ISZERO
0x576 MUL
0x577 SWAP1
0x578 PUSH1 0x40
0x57a MLOAD
0x57b PUSH1 0x0
0x57d PUSH1 0x40
0x57f MLOAD
0x580 DUP1
0x581 DUP4
0x582 SUB
0x583 DUP2
0x584 DUP6
0x585 DUP9
0x586 DUP9
0x587 CALL
0x588 SWAP4
0x589 POP
0x58a POP
0x58b POP
0x58c POP
0x58d ISZERO
0x58e DUP1
0x58f ISZERO
0x590 PUSH2 0x59d
0x593 JUMPI
---
0x51f: JUMPDEST 
0x520: V300 = 0x0
0x524: V301 = S[0x0]
0x526: V302 = 0x100
0x529: V303 = EXP 0x100 0x0
0x52b: V304 = DIV V301 0x1
0x52c: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x541: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x542: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x557: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x558: V309 = 0x8fc
0x55b: V310 = ADDRESS
0x55c: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x571: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x572: V313 = BALANCE V312
0x575: V314 = ISZERO V313
0x576: V315 = MUL V314 0x8fc
0x578: V316 = 0x40
0x57a: V317 = M[0x40]
0x57b: V318 = 0x0
0x57d: V319 = 0x40
0x57f: V320 = M[0x40]
0x582: V321 = SUB V317 V320
0x587: V322 = CALL V315 V308 V313 V320 V321 V320 0x0
0x58d: V323 = ISZERO V322
0x58f: V324 = ISZERO V323
0x590: V325 = 0x59d
0x593: JUMPI 0x59d V324
---
Entry stack: [V11, 0xe8]
Stack pops: 0
Stack additions: [V323]
Exit stack: [V11, 0xe8, V323]

================================

Block 0x594
[0x594:0x59c]
---
Predecessors: [0x51f]
Successors: []
---
0x594 RETURNDATASIZE
0x595 PUSH1 0x0
0x597 DUP1
0x598 RETURNDATACOPY
0x599 RETURNDATASIZE
0x59a PUSH1 0x0
0x59c REVERT
---
0x594: V326 = RETURNDATASIZE
0x595: V327 = 0x0
0x598: RETURNDATACOPY 0x0 0x0 V326
0x599: V328 = RETURNDATASIZE
0x59a: V329 = 0x0
0x59c: REVERT 0x0 V328
---
Entry stack: [V11, 0xe8, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe8, V323]

================================

Block 0x59d
[0x59d:0x59f]
---
Predecessors: [0x51f]
Successors: [0xe8]
---
0x59d JUMPDEST
0x59e POP
0x59f JUMP
---
0x59d: JUMPDEST 
0x59f: JUMP 0xe8
---
Entry stack: [V11, 0xe8, V323]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a0
[0x5a0:0x5de]
---
Predecessors: [0xea]
Successors: [0x5df, 0x5f3]
---
0x5a0 JUMPDEST
0x5a1 PUSH1 0x0
0x5a3 PUSH1 0x60
0x5a5 DUP1
0x5a6 PUSH1 0x60
0x5a8 PUSH1 0x0
0x5aa ADDRESS
0x5ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c0 AND
0x5c1 BALANCE
0x5c2 SWAP5
0x5c3 POP
0x5c4 PUSH1 0x1
0x5c6 PUSH1 0x40
0x5c8 MLOAD
0x5c9 SWAP1
0x5ca DUP1
0x5cb DUP3
0x5cc MSTORE
0x5cd DUP1
0x5ce PUSH1 0x20
0x5d0 MUL
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 DUP3
0x5d5 ADD
0x5d6 PUSH1 0x40
0x5d8 MSTORE
0x5d9 DUP1
0x5da ISZERO
0x5db PUSH2 0x5f3
0x5de JUMPI
---
0x5a0: JUMPDEST 
0x5a1: V330 = 0x0
0x5a3: V331 = 0x60
0x5a6: V332 = 0x60
0x5a8: V333 = 0x0
0x5aa: V334 = ADDRESS
0x5ab: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c0: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x5c1: V337 = BALANCE V336
0x5c4: V338 = 0x1
0x5c6: V339 = 0x40
0x5c8: V340 = M[0x40]
0x5cc: M[V340] = 0x1
0x5ce: V341 = 0x20
0x5d0: V342 = MUL 0x20 0x1
0x5d1: V343 = 0x20
0x5d3: V344 = ADD 0x20 0x20
0x5d5: V345 = ADD V340 0x40
0x5d6: V346 = 0x40
0x5d8: M[0x40] = V345
0x5da: V347 = ISZERO 0x1
0x5db: V348 = 0x5f3
0x5de: JUMPI 0x5f3 0x0
---
Entry stack: [V11, 0x108, V65]
Stack pops: 0
Stack additions: [V337, 0x60, 0x60, 0x60, 0x0, V340, 0x1]
Exit stack: [V11, 0x108, V65, V337, 0x60, 0x60, 0x60, 0x0, V340, 0x1]

================================

Block 0x5df
[0x5df:0x5f2]
---
Predecessors: [0x5a0]
Successors: [0x5f3]
---
0x5df DUP2
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 PUSH1 0x20
0x5e5 DUP3
0x5e6 MUL
0x5e7 DUP1
0x5e8 CODESIZE
0x5e9 DUP4
0x5ea CODECOPY
0x5eb DUP1
0x5ec DUP3
0x5ed ADD
0x5ee SWAP2
0x5ef POP
0x5f0 POP
0x5f1 SWAP1
0x5f2 POP
---
0x5e0: V349 = 0x20
0x5e2: V350 = ADD 0x20 V340
0x5e3: V351 = 0x20
0x5e6: V352 = MUL 0x1 0x20
0x5e8: V353 = CODESIZE
0x5ea: CODECOPY V350 V353 0x20
0x5ed: V354 = ADD V350 0x20
---
Entry stack: [V11, 0x108, V65, V337, 0x60, 0x60, 0x60, 0x0, V340, 0x1]
Stack pops: 2
Stack additions: [S1, V354]
Exit stack: [V11, 0x108, V65, V337, 0x60, 0x60, 0x60, 0x0, V340, V354]

================================

Block 0x5f3
[0x5f3:0x606]
---
Predecessors: [0x5a0, 0x5df]
Successors: [0x607, 0x608]
---
0x5f3 JUMPDEST
0x5f4 POP
0x5f5 SWAP4
0x5f6 POP
0x5f7 PUSH1 0x3
0x5f9 SLOAD
0x5fa DUP5
0x5fb PUSH1 0x0
0x5fd DUP2
0x5fe MLOAD
0x5ff DUP2
0x600 LT
0x601 ISZERO
0x602 ISZERO
0x603 PUSH2 0x608
0x606 JUMPI
---
0x5f3: JUMPDEST 
0x5f7: V355 = 0x3
0x5f9: V356 = S[0x3]
0x5fb: V357 = 0x0
0x5fe: V358 = M[V340]
0x600: V359 = LT 0x0 V358
0x601: V360 = ISZERO V359
0x602: V361 = ISZERO V360
0x603: V362 = 0x608
0x606: JUMPI 0x608 V361
---
Entry stack: [V11, 0x108, V65, V337, 0x60, 0x60, 0x60, 0x0, V340, S0]
Stack pops: 6
Stack additions: [S1, S4, S3, S2, V356, S1, 0x0]
Exit stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V356, V340, 0x0]

================================

Block 0x607
[0x607:0x607]
---
Predecessors: [0x5f3]
Successors: []
---
0x607 INVALID
---
0x607: INVALID 
---
Entry stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V356, V340, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V356, V340, 0x0]

================================

Block 0x608
[0x608:0x631]
---
Predecessors: [0x5f3]
Successors: [0x632, 0x646]
---
0x608 JUMPDEST
0x609 SWAP1
0x60a PUSH1 0x20
0x60c ADD
0x60d SWAP1
0x60e PUSH1 0x20
0x610 MUL
0x611 ADD
0x612 DUP2
0x613 DUP2
0x614 MSTORE
0x615 POP
0x616 POP
0x617 PUSH1 0x1
0x619 PUSH1 0x40
0x61b MLOAD
0x61c SWAP1
0x61d DUP1
0x61e DUP3
0x61f MSTORE
0x620 DUP1
0x621 PUSH1 0x20
0x623 MUL
0x624 PUSH1 0x20
0x626 ADD
0x627 DUP3
0x628 ADD
0x629 PUSH1 0x40
0x62b MSTORE
0x62c DUP1
0x62d ISZERO
0x62e PUSH2 0x646
0x631 JUMPI
---
0x608: JUMPDEST 
0x60a: V363 = 0x20
0x60c: V364 = ADD 0x20 V340
0x60e: V365 = 0x20
0x610: V366 = MUL 0x20 0x0
0x611: V367 = ADD 0x0 V364
0x614: M[V367] = V356
0x617: V368 = 0x1
0x619: V369 = 0x40
0x61b: V370 = M[0x40]
0x61f: M[V370] = 0x1
0x621: V371 = 0x20
0x623: V372 = MUL 0x20 0x1
0x624: V373 = 0x20
0x626: V374 = ADD 0x20 0x20
0x628: V375 = ADD V370 0x40
0x629: V376 = 0x40
0x62b: M[0x40] = V375
0x62d: V377 = ISZERO 0x1
0x62e: V378 = 0x646
0x631: JUMPI 0x646 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V356, V340, 0x0]
Stack pops: 3
Stack additions: [V370, 0x1]
Exit stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V370, 0x1]

================================

Block 0x632
[0x632:0x645]
---
Predecessors: [0x608]
Successors: [0x646]
---
0x632 DUP2
0x633 PUSH1 0x20
0x635 ADD
0x636 PUSH1 0x20
0x638 DUP3
0x639 MUL
0x63a DUP1
0x63b CODESIZE
0x63c DUP4
0x63d CODECOPY
0x63e DUP1
0x63f DUP3
0x640 ADD
0x641 SWAP2
0x642 POP
0x643 POP
0x644 SWAP1
0x645 POP
---
0x633: V379 = 0x20
0x635: V380 = ADD 0x20 V370
0x636: V381 = 0x20
0x639: V382 = MUL 0x1 0x20
0x63b: V383 = CODESIZE
0x63d: CODECOPY V380 V383 0x20
0x640: V384 = ADD V380 0x20
---
Entry stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V370, 0x1]
Stack pops: 2
Stack additions: [S1, V384]
Exit stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V370, V384]

================================

Block 0x646
[0x646:0x659]
---
Predecessors: [0x608, 0x632]
Successors: [0x65a, 0x65b]
---
0x646 JUMPDEST
0x647 POP
0x648 SWAP3
0x649 POP
0x64a PUSH1 0x2
0x64c SLOAD
0x64d DUP4
0x64e PUSH1 0x0
0x650 DUP2
0x651 MLOAD
0x652 DUP2
0x653 LT
0x654 ISZERO
0x655 ISZERO
0x656 PUSH2 0x65b
0x659 JUMPI
---
0x646: JUMPDEST 
0x64a: V385 = 0x2
0x64c: V386 = S[0x2]
0x64e: V387 = 0x0
0x651: V388 = M[V370]
0x653: V389 = LT 0x0 V388
0x654: V390 = ISZERO V389
0x655: V391 = ISZERO V390
0x656: V392 = 0x65b
0x659: JUMPI 0x65b V391
---
Entry stack: [V11, 0x108, V65, V337, V340, 0x60, 0x60, 0x0, V370, S0]
Stack pops: 5
Stack additions: [S1, S3, S2, V386, S1, 0x0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V386, V370, 0x0]

================================

Block 0x65a
[0x65a:0x65a]
---
Predecessors: [0x646]
Successors: []
---
0x65a INVALID
---
0x65a: INVALID 
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V386, V370, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V386, V370, 0x0]

================================

Block 0x65b
[0x65b:0x684]
---
Predecessors: [0x646]
Successors: [0x685, 0x699]
---
0x65b JUMPDEST
0x65c SWAP1
0x65d PUSH1 0x20
0x65f ADD
0x660 SWAP1
0x661 PUSH1 0x20
0x663 MUL
0x664 ADD
0x665 DUP2
0x666 DUP2
0x667 MSTORE
0x668 POP
0x669 POP
0x66a PUSH1 0x1
0x66c PUSH1 0x40
0x66e MLOAD
0x66f SWAP1
0x670 DUP1
0x671 DUP3
0x672 MSTORE
0x673 DUP1
0x674 PUSH1 0x20
0x676 MUL
0x677 PUSH1 0x20
0x679 ADD
0x67a DUP3
0x67b ADD
0x67c PUSH1 0x40
0x67e MSTORE
0x67f DUP1
0x680 ISZERO
0x681 PUSH2 0x699
0x684 JUMPI
---
0x65b: JUMPDEST 
0x65d: V393 = 0x20
0x65f: V394 = ADD 0x20 V370
0x661: V395 = 0x20
0x663: V396 = MUL 0x20 0x0
0x664: V397 = ADD 0x0 V394
0x667: M[V397] = V386
0x66a: V398 = 0x1
0x66c: V399 = 0x40
0x66e: V400 = M[0x40]
0x672: M[V400] = 0x1
0x674: V401 = 0x20
0x676: V402 = MUL 0x20 0x1
0x677: V403 = 0x20
0x679: V404 = ADD 0x20 0x20
0x67b: V405 = ADD V400 0x40
0x67c: V406 = 0x40
0x67e: M[0x40] = V405
0x680: V407 = ISZERO 0x1
0x681: V408 = 0x699
0x684: JUMPI 0x699 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V386, V370, 0x0]
Stack pops: 3
Stack additions: [V400, 0x1]
Exit stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V400, 0x1]

================================

Block 0x685
[0x685:0x698]
---
Predecessors: [0x65b]
Successors: [0x699]
---
0x685 DUP2
0x686 PUSH1 0x20
0x688 ADD
0x689 PUSH1 0x20
0x68b DUP3
0x68c MUL
0x68d DUP1
0x68e CODESIZE
0x68f DUP4
0x690 CODECOPY
0x691 DUP1
0x692 DUP3
0x693 ADD
0x694 SWAP2
0x695 POP
0x696 POP
0x697 SWAP1
0x698 POP
---
0x686: V409 = 0x20
0x688: V410 = ADD 0x20 V400
0x689: V411 = 0x20
0x68c: V412 = MUL 0x1 0x20
0x68e: V413 = CODESIZE
0x690: CODECOPY V410 V413 0x20
0x693: V414 = ADD V410 0x20
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V400, 0x1]
Stack pops: 2
Stack additions: [S1, V414]
Exit stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V400, V414]

================================

Block 0x699
[0x699:0x6aa]
---
Predecessors: [0x65b, 0x685]
Successors: [0x6ab, 0x6ac]
---
0x699 JUMPDEST
0x69a POP
0x69b SWAP2
0x69c POP
0x69d DUP6
0x69e DUP3
0x69f PUSH1 0x0
0x6a1 DUP2
0x6a2 MLOAD
0x6a3 DUP2
0x6a4 LT
0x6a5 ISZERO
0x6a6 ISZERO
0x6a7 PUSH2 0x6ac
0x6aa JUMPI
---
0x699: JUMPDEST 
0x69f: V415 = 0x0
0x6a2: V416 = M[V400]
0x6a4: V417 = LT 0x0 V416
0x6a5: V418 = ISZERO V417
0x6a6: V419 = ISZERO V418
0x6a7: V420 = 0x6ac
0x6aa: JUMPI 0x6ac V419
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, 0x60, 0x0, V400, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S1, S2, S7, S1, 0x0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V65, V400, 0x0]

================================

Block 0x6ab
[0x6ab:0x6ab]
---
Predecessors: [0x699]
Successors: []
---
0x6ab INVALID
---
0x6ab: INVALID 
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V65, V400, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V65, V400, 0x0]

================================

Block 0x6ac
[0x6ac:0x760]
---
Predecessors: [0x699]
Successors: [0x761]
---
0x6ac JUMPDEST
0x6ad SWAP1
0x6ae PUSH1 0x20
0x6b0 ADD
0x6b1 SWAP1
0x6b2 PUSH1 0x20
0x6b4 MUL
0x6b5 ADD
0x6b6 DUP2
0x6b7 DUP2
0x6b8 MSTORE
0x6b9 POP
0x6ba POP
0x6bb PUSH1 0x1
0x6bd PUSH1 0x0
0x6bf SWAP1
0x6c0 SLOAD
0x6c1 SWAP1
0x6c2 PUSH2 0x100
0x6c5 EXP
0x6c6 SWAP1
0x6c7 DIV
0x6c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6dd AND
0x6de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f3 AND
0x6f4 PUSH4 0xfc223410
0x6f9 PUSH1 0x2
0x6fb SLOAD
0x6fc DUP7
0x6fd DUP7
0x6fe DUP7
0x6ff PUSH1 0x1
0x701 PUSH1 0x40
0x703 MLOAD
0x704 DUP7
0x705 PUSH4 0xffffffff
0x70a AND
0x70b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x729 MUL
0x72a DUP2
0x72b MSTORE
0x72c PUSH1 0x4
0x72e ADD
0x72f DUP1
0x730 DUP1
0x731 PUSH1 0x20
0x733 ADD
0x734 DUP1
0x735 PUSH1 0x20
0x737 ADD
0x738 DUP1
0x739 PUSH1 0x20
0x73b ADD
0x73c DUP6
0x73d DUP2
0x73e MSTORE
0x73f PUSH1 0x20
0x741 ADD
0x742 DUP5
0x743 DUP2
0x744 SUB
0x745 DUP5
0x746 MSTORE
0x747 DUP9
0x748 DUP2
0x749 DUP2
0x74a MLOAD
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x20
0x74f ADD
0x750 SWAP2
0x751 POP
0x752 DUP1
0x753 MLOAD
0x754 SWAP1
0x755 PUSH1 0x20
0x757 ADD
0x758 SWAP1
0x759 PUSH1 0x20
0x75b MUL
0x75c DUP1
0x75d DUP4
0x75e DUP4
0x75f PUSH1 0x0
---
0x6ac: JUMPDEST 
0x6ae: V421 = 0x20
0x6b0: V422 = ADD 0x20 V400
0x6b2: V423 = 0x20
0x6b4: V424 = MUL 0x20 0x0
0x6b5: V425 = ADD 0x0 V422
0x6b8: M[V425] = V65
0x6bb: V426 = 0x1
0x6bd: V427 = 0x0
0x6c0: V428 = S[0x1]
0x6c2: V429 = 0x100
0x6c5: V430 = EXP 0x100 0x0
0x6c7: V431 = DIV V428 0x1
0x6c8: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x6dd: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x6de: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f3: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x6f4: V436 = 0xfc223410
0x6f9: V437 = 0x2
0x6fb: V438 = S[0x2]
0x6ff: V439 = 0x1
0x701: V440 = 0x40
0x703: V441 = M[0x40]
0x705: V442 = 0xffffffff
0x70a: V443 = AND 0xffffffff 0xfc223410
0x70b: V444 = 0x100000000000000000000000000000000000000000000000000000000
0x729: V445 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfc223410
0x72b: M[V441] = 0xfc22341000000000000000000000000000000000000000000000000000000000
0x72c: V446 = 0x4
0x72e: V447 = ADD 0x4 V441
0x731: V448 = 0x20
0x733: V449 = ADD 0x20 V447
0x735: V450 = 0x20
0x737: V451 = ADD 0x20 V449
0x739: V452 = 0x20
0x73b: V453 = ADD 0x20 V451
0x73e: M[V453] = 0x1
0x73f: V454 = 0x20
0x741: V455 = ADD 0x20 V453
0x744: V456 = SUB V455 V447
0x746: M[V447] = V456
0x74a: V457 = M[V340]
0x74c: M[V455] = V457
0x74d: V458 = 0x20
0x74f: V459 = ADD 0x20 V455
0x753: V460 = M[V340]
0x755: V461 = 0x20
0x757: V462 = ADD 0x20 V340
0x759: V463 = 0x20
0x75b: V464 = MUL 0x20 V460
0x75f: V465 = 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V65, V400, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V435, 0xfc223410, V438, S6, S5, S4, 0x1, V447, V447, V449, V451, V459, V462, V464, V464, V459, V462, 0x0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V459, V462, V464, V464, V459, V462, 0x0]

================================

Block 0x761
[0x761:0x769]
---
Predecessors: [0x6ac, 0x76a]
Successors: [0x76a, 0x77c]
---
0x761 JUMPDEST
0x762 DUP4
0x763 DUP2
0x764 LT
0x765 ISZERO
0x766 PUSH2 0x77c
0x769 JUMPI
---
0x761: JUMPDEST 
0x764: V466 = LT S0 V464
0x765: V467 = ISZERO V466
0x766: V468 = 0x77c
0x769: JUMPI 0x77c V467
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V459, V462, V464, V464, V459, V462, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V459, V462, V464, V464, V459, V462, S0]

================================

Block 0x76a
[0x76a:0x77b]
---
Predecessors: [0x761]
Successors: [0x761]
---
0x76a DUP1
0x76b DUP3
0x76c ADD
0x76d MLOAD
0x76e DUP2
0x76f DUP5
0x770 ADD
0x771 MSTORE
0x772 PUSH1 0x20
0x774 DUP2
0x775 ADD
0x776 SWAP1
0x777 POP
0x778 PUSH2 0x761
0x77b JUMP
---
0x76c: V469 = ADD V462 S0
0x76d: V470 = M[V469]
0x770: V471 = ADD V459 S0
0x771: M[V471] = V470
0x772: V472 = 0x20
0x775: V473 = ADD S0 0x20
0x778: V474 = 0x761
0x77b: JUMP 0x761
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V459, V462, V464, V464, V459, V462, S0]
Stack pops: 3
Stack additions: [S2, S1, V473]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V459, V462, V464, V464, V459, V462, V473]

================================

Block 0x77c
[0x77c:0x7a2]
---
Predecessors: [0x761]
Successors: [0x7a3]
---
0x77c JUMPDEST
0x77d POP
0x77e POP
0x77f POP
0x780 POP
0x781 SWAP1
0x782 POP
0x783 ADD
0x784 DUP5
0x785 DUP2
0x786 SUB
0x787 DUP4
0x788 MSTORE
0x789 DUP8
0x78a DUP2
0x78b DUP2
0x78c MLOAD
0x78d DUP2
0x78e MSTORE
0x78f PUSH1 0x20
0x791 ADD
0x792 SWAP2
0x793 POP
0x794 DUP1
0x795 MLOAD
0x796 SWAP1
0x797 PUSH1 0x20
0x799 ADD
0x79a SWAP1
0x79b PUSH1 0x20
0x79d MUL
0x79e DUP1
0x79f DUP4
0x7a0 DUP4
0x7a1 PUSH1 0x0
---
0x77c: JUMPDEST 
0x783: V475 = ADD V464 V459
0x786: V476 = SUB V475 V447
0x788: M[V449] = V476
0x78c: V477 = M[V370]
0x78e: M[V475] = V477
0x78f: V478 = 0x20
0x791: V479 = ADD 0x20 V475
0x795: V480 = M[V370]
0x797: V481 = 0x20
0x799: V482 = ADD 0x20 V370
0x79b: V483 = 0x20
0x79d: V484 = MUL 0x20 V480
0x7a1: V485 = 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V459, V462, V464, V464, V459, V462, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, V479, V482, V484, V484, V479, V482, 0x0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V479, V482, V484, V484, V479, V482, 0x0]

================================

Block 0x7a3
[0x7a3:0x7ab]
---
Predecessors: [0x77c, 0x7ac]
Successors: [0x7ac, 0x7be]
---
0x7a3 JUMPDEST
0x7a4 DUP4
0x7a5 DUP2
0x7a6 LT
0x7a7 ISZERO
0x7a8 PUSH2 0x7be
0x7ab JUMPI
---
0x7a3: JUMPDEST 
0x7a6: V486 = LT S0 V484
0x7a7: V487 = ISZERO V486
0x7a8: V488 = 0x7be
0x7ab: JUMPI 0x7be V487
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V479, V482, V484, V484, V479, V482, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V479, V482, V484, V484, V479, V482, S0]

================================

Block 0x7ac
[0x7ac:0x7bd]
---
Predecessors: [0x7a3]
Successors: [0x7a3]
---
0x7ac DUP1
0x7ad DUP3
0x7ae ADD
0x7af MLOAD
0x7b0 DUP2
0x7b1 DUP5
0x7b2 ADD
0x7b3 MSTORE
0x7b4 PUSH1 0x20
0x7b6 DUP2
0x7b7 ADD
0x7b8 SWAP1
0x7b9 POP
0x7ba PUSH2 0x7a3
0x7bd JUMP
---
0x7ae: V489 = ADD V482 S0
0x7af: V490 = M[V489]
0x7b2: V491 = ADD V479 S0
0x7b3: M[V491] = V490
0x7b4: V492 = 0x20
0x7b7: V493 = ADD S0 0x20
0x7ba: V494 = 0x7a3
0x7bd: JUMP 0x7a3
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V479, V482, V484, V484, V479, V482, S0]
Stack pops: 3
Stack additions: [S2, S1, V493]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V479, V482, V484, V484, V479, V482, V493]

================================

Block 0x7be
[0x7be:0x7e4]
---
Predecessors: [0x7a3]
Successors: [0x7e5]
---
0x7be JUMPDEST
0x7bf POP
0x7c0 POP
0x7c1 POP
0x7c2 POP
0x7c3 SWAP1
0x7c4 POP
0x7c5 ADD
0x7c6 DUP5
0x7c7 DUP2
0x7c8 SUB
0x7c9 DUP3
0x7ca MSTORE
0x7cb DUP7
0x7cc DUP2
0x7cd DUP2
0x7ce MLOAD
0x7cf DUP2
0x7d0 MSTORE
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 SWAP2
0x7d5 POP
0x7d6 DUP1
0x7d7 MLOAD
0x7d8 SWAP1
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc SWAP1
0x7dd PUSH1 0x20
0x7df MUL
0x7e0 DUP1
0x7e1 DUP4
0x7e2 DUP4
0x7e3 PUSH1 0x0
---
0x7be: JUMPDEST 
0x7c5: V495 = ADD V484 V479
0x7c8: V496 = SUB V495 V447
0x7ca: M[V451] = V496
0x7ce: V497 = M[V400]
0x7d0: M[V495] = V497
0x7d1: V498 = 0x20
0x7d3: V499 = ADD 0x20 V495
0x7d7: V500 = M[V400]
0x7d9: V501 = 0x20
0x7db: V502 = ADD 0x20 V400
0x7dd: V503 = 0x20
0x7df: V504 = MUL 0x20 V500
0x7e3: V505 = 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V479, V482, V484, V484, V479, V482, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, V499, V502, V504, V504, V499, V502, 0x0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V499, V502, V504, V504, V499, V502, 0x0]

================================

Block 0x7e5
[0x7e5:0x7ed]
---
Predecessors: [0x7be, 0x7ee]
Successors: [0x7ee, 0x800]
---
0x7e5 JUMPDEST
0x7e6 DUP4
0x7e7 DUP2
0x7e8 LT
0x7e9 ISZERO
0x7ea PUSH2 0x800
0x7ed JUMPI
---
0x7e5: JUMPDEST 
0x7e8: V506 = LT S0 V504
0x7e9: V507 = ISZERO V506
0x7ea: V508 = 0x800
0x7ed: JUMPI 0x800 V507
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V499, V502, V504, V504, V499, V502, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V499, V502, V504, V504, V499, V502, S0]

================================

Block 0x7ee
[0x7ee:0x7ff]
---
Predecessors: [0x7e5]
Successors: [0x7e5]
---
0x7ee DUP1
0x7ef DUP3
0x7f0 ADD
0x7f1 MLOAD
0x7f2 DUP2
0x7f3 DUP5
0x7f4 ADD
0x7f5 MSTORE
0x7f6 PUSH1 0x20
0x7f8 DUP2
0x7f9 ADD
0x7fa SWAP1
0x7fb POP
0x7fc PUSH2 0x7e5
0x7ff JUMP
---
0x7f0: V509 = ADD V502 S0
0x7f1: V510 = M[V509]
0x7f4: V511 = ADD V499 S0
0x7f5: M[V511] = V510
0x7f6: V512 = 0x20
0x7f9: V513 = ADD S0 0x20
0x7fc: V514 = 0x7e5
0x7ff: JUMP 0x7e5
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V499, V502, V504, V504, V499, V502, S0]
Stack pops: 3
Stack additions: [S2, S1, V513]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V499, V502, V504, V504, V499, V502, V513]

================================

Block 0x800
[0x800:0x824]
---
Predecessors: [0x7e5]
Successors: [0x825, 0x829]
---
0x800 JUMPDEST
0x801 POP
0x802 POP
0x803 POP
0x804 POP
0x805 SWAP1
0x806 POP
0x807 ADD
0x808 SWAP8
0x809 POP
0x80a POP
0x80b POP
0x80c POP
0x80d POP
0x80e POP
0x80f POP
0x810 POP
0x811 PUSH1 0x20
0x813 PUSH1 0x40
0x815 MLOAD
0x816 DUP1
0x817 DUP4
0x818 SUB
0x819 DUP2
0x81a DUP6
0x81b DUP9
0x81c DUP1
0x81d EXTCODESIZE
0x81e ISZERO
0x81f DUP1
0x820 ISZERO
0x821 PUSH2 0x829
0x824 JUMPI
---
0x800: JUMPDEST 
0x807: V515 = ADD V504 V499
0x811: V516 = 0x20
0x813: V517 = 0x40
0x815: V518 = M[0x40]
0x818: V519 = SUB V515 V518
0x81d: V520 = EXTCODESIZE V435
0x81e: V521 = ISZERO V520
0x820: V522 = ISZERO V521
0x821: V523 = 0x829
0x824: JUMPI 0x829 V522
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V340, V370, V400, 0x1, V447, V447, V449, V451, V499, V502, V504, V504, V499, V502, S0]
Stack pops: 18
Stack additions: [S17, S16, S15, V515, 0x20, V518, V519, V518, S15, S17, V521]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, 0x20, V518, V519, V518, V438, V435, V521]

================================

Block 0x825
[0x825:0x828]
---
Predecessors: [0x800]
Successors: []
---
0x825 PUSH1 0x0
0x827 DUP1
0x828 REVERT
---
0x825: V524 = 0x0
0x828: REVERT 0x0 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, 0x20, V518, V519, V518, V438, V435, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, 0x20, V518, V519, V518, V438, V435, V521]

================================

Block 0x829
[0x829:0x833]
---
Predecessors: [0x800]
Successors: [0x834, 0x83d]
---
0x829 JUMPDEST
0x82a POP
0x82b GAS
0x82c CALL
0x82d ISZERO
0x82e DUP1
0x82f ISZERO
0x830 PUSH2 0x83d
0x833 JUMPI
---
0x829: JUMPDEST 
0x82b: V525 = GAS
0x82c: V526 = CALL V525 V435 V438 V518 V519 V518 0x20
0x82d: V527 = ISZERO V526
0x82f: V528 = ISZERO V527
0x830: V529 = 0x83d
0x833: JUMPI 0x83d V528
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, 0x20, V518, V519, V518, V438, V435, V521]
Stack pops: 7
Stack additions: [V527]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, V527]

================================

Block 0x834
[0x834:0x83c]
---
Predecessors: [0x829]
Successors: []
---
0x834 RETURNDATASIZE
0x835 PUSH1 0x0
0x837 DUP1
0x838 RETURNDATACOPY
0x839 RETURNDATASIZE
0x83a PUSH1 0x0
0x83c REVERT
---
0x834: V530 = RETURNDATASIZE
0x835: V531 = 0x0
0x838: RETURNDATACOPY 0x0 0x0 V530
0x839: V532 = RETURNDATASIZE
0x83a: V533 = 0x0
0x83c: REVERT 0x0 V532
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, V527]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, V527]

================================

Block 0x83d
[0x83d:0x84f]
---
Predecessors: [0x829]
Successors: [0x850, 0x854]
---
0x83d JUMPDEST
0x83e POP
0x83f POP
0x840 POP
0x841 POP
0x842 POP
0x843 PUSH1 0x40
0x845 MLOAD
0x846 RETURNDATASIZE
0x847 PUSH1 0x20
0x849 DUP2
0x84a LT
0x84b ISZERO
0x84c PUSH2 0x854
0x84f JUMPI
---
0x83d: JUMPDEST 
0x843: V534 = 0x40
0x845: V535 = M[0x40]
0x846: V536 = RETURNDATASIZE
0x847: V537 = 0x20
0x84a: V538 = LT V536 0x20
0x84b: V539 = ISZERO V538
0x84c: V540 = 0x854
0x84f: JUMPI 0x854 V539
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V435, 0xfc223410, V438, V515, V527]
Stack pops: 5
Stack additions: [V535, V536]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V535, V536]

================================

Block 0x850
[0x850:0x853]
---
Predecessors: [0x83d]
Successors: []
---
0x850 PUSH1 0x0
0x852 DUP1
0x853 REVERT
---
0x850: V541 = 0x0
0x853: REVERT 0x0 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V535, V536]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V535, V536]

================================

Block 0x854
[0x854:0x8fb]
---
Predecessors: [0x83d]
Successors: [0x8fc, 0x900]
---
0x854 JUMPDEST
0x855 DUP2
0x856 ADD
0x857 SWAP1
0x858 DUP1
0x859 DUP1
0x85a MLOAD
0x85b SWAP1
0x85c PUSH1 0x20
0x85e ADD
0x85f SWAP1
0x860 SWAP3
0x861 SWAP2
0x862 SWAP1
0x863 POP
0x864 POP
0x865 POP
0x866 SWAP1
0x867 POP
0x868 PUSH1 0x1
0x86a PUSH1 0x0
0x86c SWAP1
0x86d SLOAD
0x86e SWAP1
0x86f PUSH2 0x100
0x872 EXP
0x873 SWAP1
0x874 DIV
0x875 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88a AND
0x88b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a0 AND
0x8a1 PUSH4 0x7818e9ef
0x8a6 DUP3
0x8a7 PUSH1 0x40
0x8a9 MLOAD
0x8aa DUP3
0x8ab PUSH4 0xffffffff
0x8b0 AND
0x8b1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8cf MUL
0x8d0 DUP2
0x8d1 MSTORE
0x8d2 PUSH1 0x4
0x8d4 ADD
0x8d5 DUP1
0x8d6 DUP3
0x8d7 PUSH1 0x0
0x8d9 NOT
0x8da AND
0x8db PUSH1 0x0
0x8dd NOT
0x8de AND
0x8df DUP2
0x8e0 MSTORE
0x8e1 PUSH1 0x20
0x8e3 ADD
0x8e4 SWAP2
0x8e5 POP
0x8e6 POP
0x8e7 PUSH1 0x0
0x8e9 PUSH1 0x40
0x8eb MLOAD
0x8ec DUP1
0x8ed DUP4
0x8ee SUB
0x8ef DUP2
0x8f0 PUSH1 0x0
0x8f2 DUP8
0x8f3 DUP1
0x8f4 EXTCODESIZE
0x8f5 ISZERO
0x8f6 DUP1
0x8f7 ISZERO
0x8f8 PUSH2 0x900
0x8fb JUMPI
---
0x854: JUMPDEST 
0x856: V542 = ADD V535 V536
0x85a: V543 = M[V535]
0x85c: V544 = 0x20
0x85e: V545 = ADD 0x20 V535
0x868: V546 = 0x1
0x86a: V547 = 0x0
0x86d: V548 = S[0x1]
0x86f: V549 = 0x100
0x872: V550 = EXP 0x100 0x0
0x874: V551 = DIV V548 0x1
0x875: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x88a: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x88b: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a0: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x8a1: V556 = 0x7818e9ef
0x8a7: V557 = 0x40
0x8a9: V558 = M[0x40]
0x8ab: V559 = 0xffffffff
0x8b0: V560 = AND 0xffffffff 0x7818e9ef
0x8b1: V561 = 0x100000000000000000000000000000000000000000000000000000000
0x8cf: V562 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7818e9ef
0x8d1: M[V558] = 0x7818e9ef00000000000000000000000000000000000000000000000000000000
0x8d2: V563 = 0x4
0x8d4: V564 = ADD 0x4 V558
0x8d7: V565 = 0x0
0x8d9: V566 = NOT 0x0
0x8da: V567 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V543
0x8db: V568 = 0x0
0x8dd: V569 = NOT 0x0
0x8de: V570 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V567
0x8e0: M[V564] = V570
0x8e1: V571 = 0x20
0x8e3: V572 = ADD 0x20 V564
0x8e7: V573 = 0x0
0x8e9: V574 = 0x40
0x8eb: V575 = M[0x40]
0x8ee: V576 = SUB V572 V575
0x8f0: V577 = 0x0
0x8f4: V578 = EXTCODESIZE V555
0x8f5: V579 = ISZERO V578
0x8f7: V580 = ISZERO V579
0x8f8: V581 = 0x900
0x8fb: JUMPI 0x900 V580
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, 0x0, V535, V536]
Stack pops: 3
Stack additions: [V543, V555, 0x7818e9ef, V572, 0x0, V575, V576, V575, 0x0, V555, V579]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, 0x0, V575, V576, V575, 0x0, V555, V579]

================================

Block 0x8fc
[0x8fc:0x8ff]
---
Predecessors: [0x854]
Successors: []
---
0x8fc PUSH1 0x0
0x8fe DUP1
0x8ff REVERT
---
0x8fc: V582 = 0x0
0x8ff: REVERT 0x0 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, 0x0, V575, V576, V575, 0x0, V555, V579]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, 0x0, V575, V576, V575, 0x0, V555, V579]

================================

Block 0x900
[0x900:0x90a]
---
Predecessors: [0x854]
Successors: [0x90b, 0x914]
---
0x900 JUMPDEST
0x901 POP
0x902 GAS
0x903 CALL
0x904 ISZERO
0x905 DUP1
0x906 ISZERO
0x907 PUSH2 0x914
0x90a JUMPI
---
0x900: JUMPDEST 
0x902: V583 = GAS
0x903: V584 = CALL V583 V555 0x0 V575 V576 V575 0x0
0x904: V585 = ISZERO V584
0x906: V586 = ISZERO V585
0x907: V587 = 0x914
0x90a: JUMPI 0x914 V586
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, 0x0, V575, V576, V575, 0x0, V555, V579]
Stack pops: 7
Stack additions: [V585]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, V585]

================================

Block 0x90b
[0x90b:0x913]
---
Predecessors: [0x900]
Successors: []
---
0x90b RETURNDATASIZE
0x90c PUSH1 0x0
0x90e DUP1
0x90f RETURNDATACOPY
0x910 RETURNDATASIZE
0x911 PUSH1 0x0
0x913 REVERT
---
0x90b: V588 = RETURNDATASIZE
0x90c: V589 = 0x0
0x90f: RETURNDATACOPY 0x0 0x0 V588
0x910: V590 = RETURNDATASIZE
0x911: V591 = 0x0
0x913: REVERT 0x0 V590
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, V585]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, V585]

================================

Block 0x914
[0x914:0x938]
---
Predecessors: [0x900]
Successors: [0x939, 0x93d]
---
0x914 JUMPDEST
0x915 POP
0x916 POP
0x917 POP
0x918 POP
0x919 DUP5
0x91a ADDRESS
0x91b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x930 AND
0x931 BALANCE
0x932 GT
0x933 ISZERO
0x934 ISZERO
0x935 PUSH2 0x93d
0x938 JUMPI
---
0x914: JUMPDEST 
0x91a: V592 = ADDRESS
0x91b: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x930: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x931: V595 = BALANCE V594
0x932: V596 = GT V595 V337
0x933: V597 = ISZERO V596
0x934: V598 = ISZERO V597
0x935: V599 = 0x93d
0x938: JUMPI 0x93d V598
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, V543, V555, 0x7818e9ef, V572, V585]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4]
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, V543]

================================

Block 0x939
[0x939:0x93c]
---
Predecessors: [0x914]
Successors: []
---
0x939 PUSH1 0x0
0x93b DUP1
0x93c REVERT
---
0x939: V600 = 0x0
0x93c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x108, V65, V337, V340, V370, V400, V543]

================================

Block 0x93d
[0x93d:0x944]
---
Predecessors: [0x914]
Successors: [0x108]
---
0x93d JUMPDEST
0x93e POP
0x93f POP
0x940 POP
0x941 POP
0x942 POP
0x943 POP
0x944 JUMP
---
0x93d: JUMPDEST 
0x944: JUMP 0x108
---
Entry stack: [V11, 0x108, V65, V337, V340, V370, V400, V543]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x945
[0x945:0x99b]
---
Predecessors: [0x116]
Successors: [0x99c, 0x9a0]
---
0x945 JUMPDEST
0x946 PUSH1 0x0
0x948 DUP1
0x949 SWAP1
0x94a SLOAD
0x94b SWAP1
0x94c PUSH2 0x100
0x94f EXP
0x950 SWAP1
0x951 DIV
0x952 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x967 AND
0x968 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97d AND
0x97e CALLER
0x97f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x994 AND
0x995 EQ
0x996 ISZERO
0x997 ISZERO
0x998 PUSH2 0x9a0
0x99b JUMPI
---
0x945: JUMPDEST 
0x946: V601 = 0x0
0x94a: V602 = S[0x0]
0x94c: V603 = 0x100
0x94f: V604 = EXP 0x100 0x0
0x951: V605 = DIV V602 0x1
0x952: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0x967: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x968: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0x97d: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x97e: V610 = CALLER
0x97f: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x994: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x995: V613 = EQ V612 V609
0x996: V614 = ISZERO V613
0x997: V615 = ISZERO V614
0x998: V616 = 0x9a0
0x99b: JUMPI 0x9a0 V615
---
Entry stack: [V11, 0x149, V78, V81, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x149, V78, V81, V84]

================================

Block 0x99c
[0x99c:0x99f]
---
Predecessors: [0x945]
Successors: []
---
0x99c PUSH1 0x0
0x99e DUP1
0x99f REVERT
---
0x99c: V617 = 0x0
0x99f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x149, V78, V81, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x149, V78, V81, V84]

================================

Block 0x9a0
[0x9a0:0x9b9]
---
Predecessors: [0x945]
Successors: [0x149]
---
0x9a0 JUMPDEST
0x9a1 DUP3
0x9a2 PUSH1 0x3
0x9a4 DUP2
0x9a5 SWAP1
0x9a6 SSTORE
0x9a7 POP
0x9a8 DUP2
0x9a9 PUSH1 0x4
0x9ab DUP2
0x9ac SWAP1
0x9ad SSTORE
0x9ae POP
0x9af DUP1
0x9b0 PUSH1 0x5
0x9b2 DUP2
0x9b3 SWAP1
0x9b4 SSTORE
0x9b5 POP
0x9b6 POP
0x9b7 POP
0x9b8 POP
0x9b9 JUMP
---
0x9a0: JUMPDEST 
0x9a2: V618 = 0x3
0x9a6: S[0x3] = V78
0x9a9: V619 = 0x4
0x9ad: S[0x4] = V81
0x9b0: V620 = 0x5
0x9b4: S[0x5] = V84
0x9b9: JUMP 0x149
---
Entry stack: [V11, 0x149, V78, V81, V84]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x9ba
[0x9ba:0xa10]
---
Predecessors: [0x157]
Successors: [0xa11, 0xa15]
---
0x9ba JUMPDEST
0x9bb PUSH1 0x0
0x9bd DUP1
0x9be SWAP1
0x9bf SLOAD
0x9c0 SWAP1
0x9c1 PUSH2 0x100
0x9c4 EXP
0x9c5 SWAP1
0x9c6 DIV
0x9c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9dc AND
0x9dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f2 AND
0x9f3 CALLER
0x9f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa09 AND
0xa0a EQ
0xa0b ISZERO
0xa0c ISZERO
0xa0d PUSH2 0xa15
0xa10 JUMPI
---
0x9ba: JUMPDEST 
0x9bb: V621 = 0x0
0x9bf: V622 = S[0x0]
0x9c1: V623 = 0x100
0x9c4: V624 = EXP 0x100 0x0
0x9c6: V625 = DIV V622 0x1
0x9c7: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x9dc: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x9dd: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f2: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0x9f3: V630 = CALLER
0x9f4: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xa09: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0xa0a: V633 = EQ V632 V629
0xa0b: V634 = ISZERO V633
0xa0c: V635 = ISZERO V634
0xa0d: V636 = 0xa15
0xa10: JUMPI 0xa15 V635
---
Entry stack: [V11, 0x18c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18c, V99]

================================

Block 0xa11
[0xa11:0xa14]
---
Predecessors: [0x9ba]
Successors: []
---
0xa11 PUSH1 0x0
0xa13 DUP1
0xa14 REVERT
---
0xa11: V637 = 0x0
0xa14: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18c, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18c, V99]

================================

Block 0xa15
[0xa15:0xa58]
---
Predecessors: [0x9ba]
Successors: [0x18c]
---
0xa15 JUMPDEST
0xa16 DUP1
0xa17 PUSH1 0x1
0xa19 PUSH1 0x0
0xa1b PUSH2 0x100
0xa1e EXP
0xa1f DUP2
0xa20 SLOAD
0xa21 DUP2
0xa22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa37 MUL
0xa38 NOT
0xa39 AND
0xa3a SWAP1
0xa3b DUP4
0xa3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa51 AND
0xa52 MUL
0xa53 OR
0xa54 SWAP1
0xa55 SSTORE
0xa56 POP
0xa57 POP
0xa58 JUMP
---
0xa15: JUMPDEST 
0xa17: V638 = 0x1
0xa19: V639 = 0x0
0xa1b: V640 = 0x100
0xa1e: V641 = EXP 0x100 0x0
0xa20: V642 = S[0x1]
0xa22: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0xa37: V644 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa38: V645 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa39: V646 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V642
0xa3c: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0xa51: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0xa52: V649 = MUL V648 0x1
0xa53: V650 = OR V649 V646
0xa55: S[0x1] = V650
0xa58: JUMP 0x18c
---
Entry stack: [V11, 0x18c, V99]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa59
[0xa59:0xa84]
---
Predecessors: []
Successors: []
---
0xa59 STOP
0xa5a LOG1
0xa5b PUSH6 0x627a7a723058
0xa62 SHA3
0xa63 MISSING 0x4d
0xa64 PUSH8 0x12c03daafd2f4018
0xa6d SSTORE
0xa6e MISSING 0xd1
0xa6f SWAP16
0xa70 MISSING 0xdc
0xa71 JUMP
0xa72 MUL
0xa73 ADD
0xa74 RETURNDATASIZE
0xa75 OR
0xa76 GT
0xa77 SWAP8
0xa78 MISSING 0xe7
0xa79 MISSING 0xb3
0xa7a MISSING 0xe6
0xa7b EXTCODEHASH
0xa7c SGT
0xa7d MISSING 0xbb
0xa7e MISSING 0xf7
0xa7f CREATE
0xa80 MISSING 0xeb
0xa81 MISSING 0xa8
0xa82 DIV
0xa83 STOP
0xa84 MISSING 0x29
---
0xa59: STOP 
0xa5a: LOG S0 S1 S2
0xa5b: V651 = 0x627a7a723058
0xa62: V652 = SHA3 0x627a7a723058 S3
0xa63: MISSING 0x4d
0xa64: V653 = 0x12c03daafd2f4018
0xa6d: S[0x12c03daafd2f4018] = S0
0xa6e: MISSING 0xd1
0xa70: MISSING 0xdc
0xa71: JUMP S0
0xa72: V654 = MUL S0 S1
0xa73: V655 = ADD V654 S2
0xa74: V656 = RETURNDATASIZE
0xa75: V657 = OR V656 V655
0xa76: V658 = GT V657 S3
0xa78: MISSING 0xe7
0xa79: MISSING 0xb3
0xa7a: MISSING 0xe6
0xa7b: V659 = EXTCODEHASH S0
0xa7c: V660 = SGT V659 S1
0xa7d: MISSING 0xbb
0xa7e: MISSING 0xf7
0xa7f: V661 = CREATE S0 S1 S2
0xa80: MISSING 0xeb
0xa81: MISSING 0xa8
0xa82: V662 = DIV S0 S1
0xa83: STOP 
0xa84: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V652, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, S11, S4, S5, S6, S7, S8, S9, S10, V658, V660, V661, V662]
Exit stack: []

================================

Function 0:
Public function signature: 0x11610c25
Entry block: 0x85
Exit block: 0x8d
Body: 0x85, 0x8d, 0x18e, 0x249, 0x252, 0x264, 0x278, 0x291, 0x2b0, 0x368, 0x371, 0x383, 0x397, 0x3b0, 0x3c7

Function 1:
Public function signature: 0x1521249a
Entry block: 0x8f
Exit block: 0xba
Body: 0x8f, 0x97, 0x9b, 0xba, 0x3ca, 0x421, 0x425

Function 2:
Public function signature: 0x35f46994
Entry block: 0xbc
Exit block: 0x486
Body: 0xbc, 0xc4, 0xc8, 0x42f, 0x486, 0x48a

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0xd3
Exit block: 0xe8
Body: 0xd3, 0xdb, 0xdf, 0xe8, 0x4c4, 0x51b, 0x51f, 0x594, 0x59d

Function 4:
Public function signature: 0x3d18fb54
Entry block: 0xea
Exit block: 0x108
Body: 0xea, 0x108, 0x5a0, 0x5df, 0x5f3, 0x607, 0x608, 0x632, 0x646, 0x65a, 0x65b, 0x685, 0x699, 0x6ab, 0x6ac, 0x761, 0x76a, 0x77c, 0x7a3, 0x7ac, 0x7be, 0x7e5, 0x7ee, 0x800, 0x825, 0x829, 0x834, 0x83d, 0x850, 0x854, 0x8fc, 0x900, 0x90b, 0x914, 0x939, 0x93d

Function 5:
Public function signature: 0x677bd22f
Entry block: 0x10a
Exit block: 0x149
Body: 0x10a, 0x112, 0x116, 0x149, 0x945, 0x99c, 0x9a0

Function 6:
Public function signature: 0xbf2fdf96
Entry block: 0x14b
Exit block: 0x18c
Body: 0x14b, 0x153, 0x157, 0x18c, 0x9ba, 0xa11, 0xa15

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

