Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x45]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1f269689
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x45
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1f269689
0x3b: V13 = EQ V11 0x1f269689
0x3c: V14 = 0x45
0x3f: JUMPI 0x45 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x44]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x40 JUMPDEST
0x41 PUSH1 0x0
0x43 DUP1
0x44 REVERT
---
0x40: JUMPDEST 
0x41: V15 = 0x0
0x44: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x45
[0x45:0x71]
---
Predecessors: [0xd]
Successors: [0x74]
---
0x45 JUMPDEST
0x46 PUSH2 0x72
0x49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e PUSH1 0x4
0x60 CALLDATALOAD
0x61 DUP2
0x62 AND
0x63 SWAP1
0x64 PUSH1 0x24
0x66 CALLDATALOAD
0x67 AND
0x68 PUSH1 0x44
0x6a CALLDATALOAD
0x6b PUSH1 0x64
0x6d CALLDATALOAD
0x6e PUSH2 0x74
0x71 JUMP
---
0x45: JUMPDEST 
0x46: V16 = 0x72
0x49: V17 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e: V18 = 0x4
0x60: V19 = CALLDATALOAD 0x4
0x62: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x64: V21 = 0x24
0x66: V22 = CALLDATALOAD 0x24
0x67: V23 = AND V22 0xffffffffffffffffffffffffffffffffffffffff
0x68: V24 = 0x44
0x6a: V25 = CALLDATALOAD 0x44
0x6b: V26 = 0x64
0x6d: V27 = CALLDATALOAD 0x64
0x6e: V28 = 0x74
0x71: JUMP 0x74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x72, V20, V23, V25, V27]
Exit stack: [V11, 0x72, V20, V23, V25, V27]

================================

Block 0x72
[0x72:0x73]
---
Predecessors: [0xd3]
Successors: []
---
0x72 JUMPDEST
0x73 STOP
---
0x72: JUMPDEST 
0x73: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x74
[0x74:0x80]
---
Predecessors: [0x45]
Successors: [0xdc]
---
0x74 JUMPDEST
0x75 DUP2
0x76 DUP5
0x77 DUP5
0x78 DUP5
0x79 DUP5
0x7a PUSH2 0x81
0x7d PUSH2 0xdc
0x80 JUMP
---
0x74: JUMPDEST 
0x7a: V29 = 0x81
0x7d: V30 = 0xdc
0x80: JUMP 0xdc
---
Entry stack: [V11, 0x72, V20, V23, V25, V27]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, S3, S2, S1, S0, 0x81]
Exit stack: [V11, 0x72, V20, V23, V25, V27, V25, V20, V23, V25, V27, 0x81]

================================

Block 0x81
[0x81:0xc9]
---
Predecessors: [0xdc]
Successors: [0xca, 0xd3]
---
0x81 JUMPDEST
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 SWAP5
0x98 DUP6
0x99 AND
0x9a DUP2
0x9b MSTORE
0x9c SWAP3
0x9d SWAP1
0x9e SWAP4
0x9f AND
0xa0 PUSH1 0x20
0xa2 DUP4
0xa3 ADD
0xa4 MSTORE
0xa5 PUSH1 0x40
0xa7 DUP1
0xa8 DUP4
0xa9 ADD
0xaa SWAP2
0xab SWAP1
0xac SWAP2
0xad MSTORE
0xae PUSH1 0x60
0xb0 DUP3
0xb1 ADD
0xb2 SWAP3
0xb3 SWAP1
0xb4 SWAP3
0xb5 MSTORE
0xb6 SWAP1
0xb7 MLOAD
0xb8 SWAP1
0xb9 DUP2
0xba SWAP1
0xbb SUB
0xbc PUSH1 0x80
0xbe ADD
0xbf SWAP1
0xc0 DUP3
0xc1 CREATE
0xc2 DUP1
0xc3 ISZERO
0xc4 DUP1
0xc5 ISZERO
0xc6 PUSH2 0xd3
0xc9 JUMPI
---
0x81: JUMPDEST 
0x82: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x99: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x9b: M[V56] = V32
0x9f: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0xa0: V34 = 0x20
0xa3: V35 = ADD V56 0x20
0xa4: M[V35] = V33
0xa5: V36 = 0x40
0xa9: V37 = ADD V56 0x40
0xad: M[V37] = V25
0xae: V38 = 0x60
0xb1: V39 = ADD V56 0x60
0xb5: M[V39] = V27
0xb7: V40 = M[0x40]
0xbb: V41 = SUB V56 V40
0xbc: V42 = 0x80
0xbe: V43 = ADD 0x80 V41
0xc1: V44 = CREATE V25 V40 V43
0xc3: V45 = ISZERO V44
0xc5: V46 = ISZERO V45
0xc6: V47 = 0xd3
0xc9: JUMPI 0xd3 V46
---
Entry stack: [V11, 0x72, V20, V23, V25, V27, V25, V20, V23, V25, V27, V56]
Stack pops: 6
Stack additions: [S5, V44, V45]
Exit stack: [V11, 0x72, V20, V23, V25, V27, V25, V44, V45]

================================

Block 0xca
[0xca:0xd2]
---
Predecessors: [0x81]
Successors: []
---
0xca RETURNDATASIZE
0xcb PUSH1 0x0
0xcd DUP1
0xce RETURNDATACOPY
0xcf RETURNDATASIZE
0xd0 PUSH1 0x0
0xd2 REVERT
---
0xca: V48 = RETURNDATASIZE
0xcb: V49 = 0x0
0xce: RETURNDATACOPY 0x0 0x0 V48
0xcf: V50 = RETURNDATASIZE
0xd0: V51 = 0x0
0xd2: REVERT 0x0 V50
---
Entry stack: [V11, 0x72, V20, V23, V25, V27, V25, V44, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x72, V20, V23, V25, V27, V25, V44, V45]

================================

Block 0xd3
[0xd3:0xdb]
---
Predecessors: [0x81]
Successors: [0x72]
---
0xd3 JUMPDEST
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 POP
0xda POP
0xdb JUMP
---
0xd3: JUMPDEST 
0xdb: JUMP 0x72
---
Entry stack: [V11, 0x72, V20, V23, V25, V27, V25, V44, V45]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xeb]
---
Predecessors: [0x74]
Successors: [0x81]
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 PUSH2 0xad5
0xe3 DUP1
0xe4 PUSH2 0xed
0xe7 DUP4
0xe8 CODECOPY
0xe9 ADD
0xea SWAP1
0xeb JUMP
---
0xdc: JUMPDEST 
0xdd: V52 = 0x40
0xdf: V53 = M[0x40]
0xe0: V54 = 0xad5
0xe4: V55 = 0xed
0xe8: CODECOPY V53 0xed 0xad5
0xe9: V56 = ADD 0xad5 V53
0xeb: JUMP 0x81
---
Entry stack: [V11, 0x72, V20, V23, V25, V27, V25, V20, V23, V25, V27, 0x81]
Stack pops: 1
Stack additions: [V56]
Exit stack: [V11, 0x72, V20, V23, V25, V27, V25, V20, V23, V25, V27, V56]

================================

Block 0xec
[0xec:0x18d]
---
Predecessors: []
Successors: [0x18e]
---
0xec STOP
0xed PUSH1 0x80
0xef PUSH1 0x40
0xf1 MSTORE
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 PUSH1 0x80
0xf7 DUP1
0xf8 PUSH2 0xad5
0xfb DUP4
0xfc CODECOPY
0xfd DUP2
0xfe ADD
0xff PUSH1 0x40
0x101 SWAP1
0x102 DUP2
0x103 MSTORE
0x104 DUP2
0x105 MLOAD
0x106 PUSH1 0x20
0x108 DUP4
0x109 ADD
0x10a MLOAD
0x10b SWAP2
0x10c DUP4
0x10d ADD
0x10e MLOAD
0x10f PUSH1 0x60
0x111 SWAP1
0x112 SWAP4
0x113 ADD
0x114 MLOAD
0x115 SWAP1
0x116 SWAP3
0x117 SWAP1
0x118 PUSH2 0x3f
0x11b DUP5
0x11c DUP5
0x11d DUP5
0x11e DUP5
0x11f PUSH5 0x100000000
0x125 PUSH2 0x48
0x128 DUP2
0x129 MUL
0x12a DIV
0x12b JUMP
0x12c JUMPDEST
0x12d POP
0x12e POP
0x12f POP
0x130 POP
0x131 PUSH2 0x5da
0x134 JUMP
0x135 JUMPDEST
0x136 PUSH1 0x0
0x138 DUP1
0x139 DUP5
0x13a SWAP2
0x13b POP
0x13c DUP2
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 AND
0x146 PUSH4 0xd87574e0
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP2
0x14f PUSH4 0xffffffff
0x154 AND
0x155 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x173 MUL
0x174 DUP2
0x175 MSTORE
0x176 PUSH1 0x4
0x178 ADD
0x179 PUSH1 0x20
0x17b PUSH1 0x40
0x17d MLOAD
0x17e DUP1
0x17f DUP4
0x180 SUB
0x181 DUP2
0x182 PUSH1 0x0
0x184 DUP8
0x185 DUP1
0x186 EXTCODESIZE
0x187 ISZERO
0x188 DUP1
0x189 ISZERO
0x18a PUSH2 0xa5
0x18d JUMPI
---
0xec: STOP 
0xed: V57 = 0x80
0xef: V58 = 0x40
0xf1: M[0x40] = 0x80
0xf2: V59 = 0x40
0xf4: V60 = M[0x40]
0xf5: V61 = 0x80
0xf8: V62 = 0xad5
0xfc: CODECOPY V60 0xad5 0x80
0xfe: V63 = ADD V60 0x80
0xff: V64 = 0x40
0x103: M[0x40] = V63
0x105: V65 = M[V60]
0x106: V66 = 0x20
0x109: V67 = ADD V60 0x20
0x10a: V68 = M[V67]
0x10d: V69 = ADD V60 0x40
0x10e: V70 = M[V69]
0x10f: V71 = 0x60
0x113: V72 = ADD V60 0x60
0x114: V73 = M[V72]
0x118: V74 = 0x3f
0x11f: V75 = 0x100000000
0x125: V76 = 0x48
0x129: V77 = MUL 0x100000000 0x48
0x12a: V78 = DIV 0x4800000000 0x100000000
0x12b: THROW 
0x12c: JUMPDEST 
0x131: V79 = 0x5da
0x134: THROW 
0x135: JUMPDEST 
0x136: V80 = 0x0
0x13d: V81 = 0x1
0x13f: V82 = 0xa0
0x141: V83 = 0x2
0x143: V84 = EXP 0x2 0xa0
0x144: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x145: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x146: V87 = 0xd87574e0
0x14b: V88 = 0x40
0x14d: V89 = M[0x40]
0x14f: V90 = 0xffffffff
0x154: V91 = AND 0xffffffff 0xd87574e0
0x155: V92 = 0x100000000000000000000000000000000000000000000000000000000
0x173: V93 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x175: M[V89] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x176: V94 = 0x4
0x178: V95 = ADD 0x4 V89
0x179: V96 = 0x20
0x17b: V97 = 0x40
0x17d: V98 = M[0x40]
0x180: V99 = SUB V95 V98
0x182: V100 = 0x0
0x186: V101 = EXTCODESIZE V86
0x187: V102 = ISZERO V101
0x189: V103 = ISZERO V102
0x18a: V104 = 0xa5
0x18d: THROWI V103
---
Entry stack: []
Stack pops: 0
Stack additions: [V73, V70, V68, V65, 0x3f, V73, V70, V68, V65, V102, V86, 0x0, V98, V99, V98, 0x20, V95, 0xd87574e0, V86, 0x0, S2, S0, S1, S2]
Exit stack: []

================================

Block 0x18e
[0x18e:0x19c]
---
Predecessors: [0xec]
Successors: [0x19d]
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
0x192 JUMPDEST
0x193 POP
0x194 GAS
0x195 CALL
0x196 ISZERO
0x197 DUP1
0x198 ISZERO
0x199 PUSH2 0xb9
0x19c JUMPI
---
0x18e: V105 = 0x0
0x191: REVERT 0x0 0x0
0x192: JUMPDEST 
0x194: V106 = GAS
0x195: V107 = CALL V106 S1 S2 S3 S4 S5 S6
0x196: V108 = ISZERO V107
0x198: V109 = ISZERO V108
0x199: V110 = 0xb9
0x19c: THROWI V109
---
Entry stack: [S14, S13, S12, S11, 0x0, V86, 0xd87574e0, V95, 0x20, V98, V99, V98, 0x0, V86, V102]
Stack pops: 0
Stack additions: [V108]
Exit stack: []

================================

Block 0x19d
[0x19d:0x1b7]
---
Predecessors: [0x18e]
Successors: [0x1b8]
---
0x19d RETURNDATASIZE
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 RETURNDATACOPY
0x1a2 RETURNDATASIZE
0x1a3 PUSH1 0x0
0x1a5 REVERT
0x1a6 JUMPDEST
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa POP
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae RETURNDATASIZE
0x1af PUSH1 0x20
0x1b1 DUP2
0x1b2 LT
0x1b3 ISZERO
0x1b4 PUSH2 0xcf
0x1b7 JUMPI
---
0x19d: V111 = RETURNDATASIZE
0x19e: V112 = 0x0
0x1a1: RETURNDATACOPY 0x0 0x0 V111
0x1a2: V113 = RETURNDATASIZE
0x1a3: V114 = 0x0
0x1a5: REVERT 0x0 V113
0x1a6: JUMPDEST 
0x1ab: V115 = 0x40
0x1ad: V116 = M[0x40]
0x1ae: V117 = RETURNDATASIZE
0x1af: V118 = 0x20
0x1b2: V119 = LT V117 0x20
0x1b3: V120 = ISZERO V119
0x1b4: V121 = 0xcf
0x1b7: THROWI V120
---
Entry stack: [V108]
Stack pops: 0
Stack additions: [V117, V116]
Exit stack: []

================================

Block 0x1b8
[0x1b8:0x1d0]
---
Predecessors: [0x19d]
Successors: [0x1d1]
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
0x1bc JUMPDEST
0x1bd POP
0x1be MLOAD
0x1bf SWAP1
0x1c0 POP
0x1c1 PUSH8 0x136dcc951d8c0000
0x1ca DUP2
0x1cb GT
0x1cc ISZERO
0x1cd PUSH2 0x5ce
0x1d0 JUMPI
---
0x1b8: V122 = 0x0
0x1bb: REVERT 0x0 0x0
0x1bc: JUMPDEST 
0x1be: V123 = M[S1]
0x1c1: V124 = 0x136dcc951d8c0000
0x1cb: V125 = GT V123 0x136dcc951d8c0000
0x1cc: V126 = ISZERO V125
0x1cd: V127 = 0x5ce
0x1d0: THROWI V126
---
Entry stack: [V116, V117]
Stack pops: 0
Stack additions: [V123]
Exit stack: []

================================

Block 0x1d1
[0x1d1:0x311]
---
Predecessors: [0x1b8]
Successors: [0x312]
---
0x1d1 PUSH1 0x40
0x1d3 DUP1
0x1d4 MLOAD
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 MLOAD
0x1d9 PUSH1 0x20
0x1db PUSH2 0xab5
0x1de DUP4
0x1df CODECOPY
0x1e0 DUP2
0x1e1 MLOAD
0x1e2 SWAP2
0x1e3 MSTORE
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 DUP2
0x1e7 MLOAD
0x1e8 SWAP1
0x1e9 DUP2
0x1ea SWAP1
0x1eb SUB
0x1ec PUSH1 0x17
0x1ee ADD
0x1ef DUP2
0x1f0 SHA3
0x1f1 PUSH4 0xffffffff
0x1f6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x214 SWAP2
0x215 DUP3
0x216 SWAP1
0x217 DIV
0x218 SWAP1
0x219 DUP2
0x21a AND
0x21b SWAP1
0x21c SWAP2
0x21d MUL
0x21e DUP3
0x21f MSTORE
0x220 PUSH1 0x1
0x222 PUSH1 0x4
0x224 DUP4
0x225 ADD
0x226 DUP2
0x227 SWAP1
0x228 MSTORE
0x229 PUSH1 0x24
0x22b DUP4
0x22c ADD
0x22d MSTORE
0x22e SWAP2
0x22f MLOAD
0x230 PUSH1 0x1
0x232 PUSH1 0xa0
0x234 PUSH1 0x2
0x236 EXP
0x237 SUB
0x238 DUP9
0x239 AND
0x23a SWAP3
0x23b SWAP2
0x23c DUP8
0x23d SWAP2
0x23e PUSH1 0x44
0x240 DUP1
0x241 DUP4
0x242 ADD
0x243 SWAP3
0x244 PUSH1 0x0
0x246 SWAP3
0x247 SWAP2
0x248 SWAP1
0x249 DUP3
0x24a SWAP1
0x24b SUB
0x24c ADD
0x24d DUP2
0x24e DUP6
0x24f DUP9
0x250 GAS
0x251 CALL
0x252 SWAP4
0x253 POP
0x254 POP
0x255 POP
0x256 POP
0x257 POP
0x258 DUP5
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 AND
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 DUP1
0x267 PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0x288 DUP2
0x289 MSTORE
0x28a POP
0x28b PUSH1 0xa
0x28d ADD
0x28e SWAP1
0x28f POP
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 SWAP2
0x295 SUB
0x296 SWAP1
0x297 SHA3
0x298 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b6 SWAP1
0x2b7 DIV
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP2
0x2bc PUSH4 0xffffffff
0x2c1 AND
0x2c2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e0 MUL
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x4
0x2e5 ADD
0x2e6 PUSH1 0x0
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP4
0x2ed SUB
0x2ee DUP2
0x2ef PUSH1 0x0
0x2f1 DUP8
0x2f2 GAS
0x2f3 CALL
0x2f4 POP
0x2f5 PUSH1 0xa
0x2f7 SWAP3
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb PUSH1 0x9
0x2fd DUP3
0x2fe MUL
0x2ff DIV
0x300 SWAP1
0x301 POP
0x302 PUSH8 0x136dcc951d8c0000
0x30b DUP2
0x30c GT
0x30d ISZERO
0x30e PUSH2 0x5ce
0x311 JUMPI
---
0x1d1: V128 = 0x40
0x1d4: V129 = M[0x40]
0x1d5: V130 = 0x0
0x1d8: V131 = M[0x0]
0x1d9: V132 = 0x20
0x1db: V133 = 0xab5
0x1df: CODECOPY 0x0 0xab5 0x20
0x1e1: V134 = M[0x0]
0x1e3: M[0x0] = V131
0x1e5: M[V129] = V134
0x1e7: V135 = M[0x40]
0x1eb: V136 = SUB V129 V135
0x1ec: V137 = 0x17
0x1ee: V138 = ADD 0x17 V136
0x1f0: V139 = SHA3 V135 V138
0x1f1: V140 = 0xffffffff
0x1f6: V141 = 0x100000000000000000000000000000000000000000000000000000000
0x217: V142 = DIV V139 0x100000000000000000000000000000000000000000000000000000000
0x21a: V143 = AND V142 0xffffffff
0x21d: V144 = MUL 0x100000000000000000000000000000000000000000000000000000000 V143
0x21f: M[V135] = V144
0x220: V145 = 0x1
0x222: V146 = 0x4
0x225: V147 = ADD V135 0x4
0x228: M[V147] = 0x1
0x229: V148 = 0x24
0x22c: V149 = ADD V135 0x24
0x22d: M[V149] = 0x1
0x22f: V150 = M[0x40]
0x230: V151 = 0x1
0x232: V152 = 0xa0
0x234: V153 = 0x2
0x236: V154 = EXP 0x2 0xa0
0x237: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V156 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V157 = 0x44
0x242: V158 = ADD V135 0x44
0x244: V159 = 0x0
0x24b: V160 = SUB V135 V150
0x24c: V161 = ADD V160 0x44
0x250: V162 = GAS
0x251: V163 = CALL V162 V156 S3 V150 V161 V150 0x0
0x259: V164 = 0x1
0x25b: V165 = 0xa0
0x25d: V166 = 0x2
0x25f: V167 = EXP 0x2 0xa0
0x260: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x262: V170 = 0x40
0x264: V171 = M[0x40]
0x267: V172 = 0x7769746864726177282900000000000000000000000000000000000000000000
0x289: M[V171] = 0x7769746864726177282900000000000000000000000000000000000000000000
0x28b: V173 = 0xa
0x28d: V174 = ADD 0xa V171
0x290: V175 = 0x40
0x292: V176 = M[0x40]
0x295: V177 = SUB V174 V176
0x297: V178 = SHA3 V176 V177
0x298: V179 = 0x100000000000000000000000000000000000000000000000000000000
0x2b7: V180 = DIV V178 0x100000000000000000000000000000000000000000000000000000000
0x2b8: V181 = 0x40
0x2ba: V182 = M[0x40]
0x2bc: V183 = 0xffffffff
0x2c1: V184 = AND 0xffffffff V180
0x2c2: V185 = 0x100000000000000000000000000000000000000000000000000000000
0x2e0: V186 = MUL 0x100000000000000000000000000000000000000000000000000000000 V184
0x2e2: M[V182] = V186
0x2e3: V187 = 0x4
0x2e5: V188 = ADD 0x4 V182
0x2e6: V189 = 0x0
0x2e8: V190 = 0x40
0x2ea: V191 = M[0x40]
0x2ed: V192 = SUB V188 V191
0x2ef: V193 = 0x0
0x2f2: V194 = GAS
0x2f3: V195 = CALL V194 V169 0x0 V191 V192 V191 0x0
0x2f5: V196 = 0xa
0x2fb: V197 = 0x9
0x2fe: V198 = MUL V123 0x9
0x2ff: V199 = DIV V198 0xa
0x302: V200 = 0x136dcc951d8c0000
0x30c: V201 = GT V199 0x136dcc951d8c0000
0x30d: V202 = ISZERO V201
0x30e: V203 = 0x5ce
0x311: THROWI V202
---
Entry stack: [V123]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V199]
Exit stack: [S3, S2, S1, S0, V199]

================================

Block 0x312
[0x312:0x452]
---
Predecessors: [0x1d1]
Successors: [0x453]
---
0x312 PUSH1 0x40
0x314 DUP1
0x315 MLOAD
0x316 PUSH1 0x0
0x318 DUP1
0x319 MLOAD
0x31a PUSH1 0x20
0x31c PUSH2 0xab5
0x31f DUP4
0x320 CODECOPY
0x321 DUP2
0x322 MLOAD
0x323 SWAP2
0x324 MSTORE
0x325 DUP2
0x326 MSTORE
0x327 DUP2
0x328 MLOAD
0x329 SWAP1
0x32a DUP2
0x32b SWAP1
0x32c SUB
0x32d PUSH1 0x17
0x32f ADD
0x330 DUP2
0x331 SHA3
0x332 PUSH4 0xffffffff
0x337 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x355 SWAP2
0x356 DUP3
0x357 SWAP1
0x358 DIV
0x359 SWAP1
0x35a DUP2
0x35b AND
0x35c SWAP1
0x35d SWAP2
0x35e MUL
0x35f DUP3
0x360 MSTORE
0x361 PUSH1 0x1
0x363 PUSH1 0x4
0x365 DUP4
0x366 ADD
0x367 DUP2
0x368 SWAP1
0x369 MSTORE
0x36a PUSH1 0x24
0x36c DUP4
0x36d ADD
0x36e MSTORE
0x36f SWAP2
0x370 MLOAD
0x371 PUSH1 0x1
0x373 PUSH1 0xa0
0x375 PUSH1 0x2
0x377 EXP
0x378 SUB
0x379 DUP9
0x37a AND
0x37b SWAP3
0x37c SWAP2
0x37d DUP8
0x37e SWAP2
0x37f PUSH1 0x44
0x381 DUP1
0x382 DUP4
0x383 ADD
0x384 SWAP3
0x385 PUSH1 0x0
0x387 SWAP3
0x388 SWAP2
0x389 SWAP1
0x38a DUP3
0x38b SWAP1
0x38c SUB
0x38d ADD
0x38e DUP2
0x38f DUP6
0x390 DUP9
0x391 GAS
0x392 CALL
0x393 SWAP4
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 POP
0x399 DUP5
0x39a PUSH1 0x1
0x39c PUSH1 0xa0
0x39e PUSH1 0x2
0x3a0 EXP
0x3a1 SUB
0x3a2 AND
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 DUP1
0x3a8 PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0x3c9 DUP2
0x3ca MSTORE
0x3cb POP
0x3cc PUSH1 0xa
0x3ce ADD
0x3cf SWAP1
0x3d0 POP
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 DUP1
0x3d5 SWAP2
0x3d6 SUB
0x3d7 SWAP1
0x3d8 SHA3
0x3d9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f7 SWAP1
0x3f8 DIV
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP2
0x3fd PUSH4 0xffffffff
0x402 AND
0x403 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x421 MUL
0x422 DUP2
0x423 MSTORE
0x424 PUSH1 0x4
0x426 ADD
0x427 PUSH1 0x0
0x429 PUSH1 0x40
0x42b MLOAD
0x42c DUP1
0x42d DUP4
0x42e SUB
0x42f DUP2
0x430 PUSH1 0x0
0x432 DUP8
0x433 GAS
0x434 CALL
0x435 POP
0x436 PUSH1 0xa
0x438 SWAP3
0x439 POP
0x43a POP
0x43b POP
0x43c PUSH1 0x9
0x43e DUP3
0x43f MUL
0x440 DIV
0x441 SWAP1
0x442 POP
0x443 PUSH8 0x136dcc951d8c0000
0x44c DUP2
0x44d GT
0x44e ISZERO
0x44f PUSH2 0x5ce
0x452 JUMPI
---
0x312: V204 = 0x40
0x315: V205 = M[0x40]
0x316: V206 = 0x0
0x319: V207 = M[0x0]
0x31a: V208 = 0x20
0x31c: V209 = 0xab5
0x320: CODECOPY 0x0 0xab5 0x20
0x322: V210 = M[0x0]
0x324: M[0x0] = V207
0x326: M[V205] = V210
0x328: V211 = M[0x40]
0x32c: V212 = SUB V205 V211
0x32d: V213 = 0x17
0x32f: V214 = ADD 0x17 V212
0x331: V215 = SHA3 V211 V214
0x332: V216 = 0xffffffff
0x337: V217 = 0x100000000000000000000000000000000000000000000000000000000
0x358: V218 = DIV V215 0x100000000000000000000000000000000000000000000000000000000
0x35b: V219 = AND V218 0xffffffff
0x35e: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000 V219
0x360: M[V211] = V220
0x361: V221 = 0x1
0x363: V222 = 0x4
0x366: V223 = ADD V211 0x4
0x369: M[V223] = 0x1
0x36a: V224 = 0x24
0x36d: V225 = ADD V211 0x24
0x36e: M[V225] = 0x1
0x370: V226 = M[0x40]
0x371: V227 = 0x1
0x373: V228 = 0xa0
0x375: V229 = 0x2
0x377: V230 = EXP 0x2 0xa0
0x378: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V232 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V233 = 0x44
0x383: V234 = ADD V211 0x44
0x385: V235 = 0x0
0x38c: V236 = SUB V211 V226
0x38d: V237 = ADD V236 0x44
0x391: V238 = GAS
0x392: V239 = CALL V238 V232 S3 V226 V237 V226 0x0
0x39a: V240 = 0x1
0x39c: V241 = 0xa0
0x39e: V242 = 0x2
0x3a0: V243 = EXP 0x2 0xa0
0x3a1: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x3a3: V246 = 0x40
0x3a5: V247 = M[0x40]
0x3a8: V248 = 0x7769746864726177282900000000000000000000000000000000000000000000
0x3ca: M[V247] = 0x7769746864726177282900000000000000000000000000000000000000000000
0x3cc: V249 = 0xa
0x3ce: V250 = ADD 0xa V247
0x3d1: V251 = 0x40
0x3d3: V252 = M[0x40]
0x3d6: V253 = SUB V250 V252
0x3d8: V254 = SHA3 V252 V253
0x3d9: V255 = 0x100000000000000000000000000000000000000000000000000000000
0x3f8: V256 = DIV V254 0x100000000000000000000000000000000000000000000000000000000
0x3f9: V257 = 0x40
0x3fb: V258 = M[0x40]
0x3fd: V259 = 0xffffffff
0x402: V260 = AND 0xffffffff V256
0x403: V261 = 0x100000000000000000000000000000000000000000000000000000000
0x421: V262 = MUL 0x100000000000000000000000000000000000000000000000000000000 V260
0x423: M[V258] = V262
0x424: V263 = 0x4
0x426: V264 = ADD 0x4 V258
0x427: V265 = 0x0
0x429: V266 = 0x40
0x42b: V267 = M[0x40]
0x42e: V268 = SUB V264 V267
0x430: V269 = 0x0
0x433: V270 = GAS
0x434: V271 = CALL V270 V245 0x0 V267 V268 V267 0x0
0x436: V272 = 0xa
0x43c: V273 = 0x9
0x43f: V274 = MUL V199 0x9
0x440: V275 = DIV V274 0xa
0x443: V276 = 0x136dcc951d8c0000
0x44d: V277 = GT V275 0x136dcc951d8c0000
0x44e: V278 = ISZERO V277
0x44f: V279 = 0x5ce
0x452: THROWI V278
---
Entry stack: [S4, S3, S2, S1, V199]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V275]
Exit stack: [S4, S3, S2, S1, V275]

================================

Block 0x453
[0x453:0x593]
---
Predecessors: [0x312]
Successors: [0x594]
---
0x453 PUSH1 0x40
0x455 DUP1
0x456 MLOAD
0x457 PUSH1 0x0
0x459 DUP1
0x45a MLOAD
0x45b PUSH1 0x20
0x45d PUSH2 0xab5
0x460 DUP4
0x461 CODECOPY
0x462 DUP2
0x463 MLOAD
0x464 SWAP2
0x465 MSTORE
0x466 DUP2
0x467 MSTORE
0x468 DUP2
0x469 MLOAD
0x46a SWAP1
0x46b DUP2
0x46c SWAP1
0x46d SUB
0x46e PUSH1 0x17
0x470 ADD
0x471 DUP2
0x472 SHA3
0x473 PUSH4 0xffffffff
0x478 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x496 SWAP2
0x497 DUP3
0x498 SWAP1
0x499 DIV
0x49a SWAP1
0x49b DUP2
0x49c AND
0x49d SWAP1
0x49e SWAP2
0x49f MUL
0x4a0 DUP3
0x4a1 MSTORE
0x4a2 PUSH1 0x1
0x4a4 PUSH1 0x4
0x4a6 DUP4
0x4a7 ADD
0x4a8 DUP2
0x4a9 SWAP1
0x4aa MSTORE
0x4ab PUSH1 0x24
0x4ad DUP4
0x4ae ADD
0x4af MSTORE
0x4b0 SWAP2
0x4b1 MLOAD
0x4b2 PUSH1 0x1
0x4b4 PUSH1 0xa0
0x4b6 PUSH1 0x2
0x4b8 EXP
0x4b9 SUB
0x4ba DUP9
0x4bb AND
0x4bc SWAP3
0x4bd SWAP2
0x4be DUP8
0x4bf SWAP2
0x4c0 PUSH1 0x44
0x4c2 DUP1
0x4c3 DUP4
0x4c4 ADD
0x4c5 SWAP3
0x4c6 PUSH1 0x0
0x4c8 SWAP3
0x4c9 SWAP2
0x4ca SWAP1
0x4cb DUP3
0x4cc SWAP1
0x4cd SUB
0x4ce ADD
0x4cf DUP2
0x4d0 DUP6
0x4d1 DUP9
0x4d2 GAS
0x4d3 CALL
0x4d4 SWAP4
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da DUP5
0x4db PUSH1 0x1
0x4dd PUSH1 0xa0
0x4df PUSH1 0x2
0x4e1 EXP
0x4e2 SUB
0x4e3 AND
0x4e4 PUSH1 0x40
0x4e6 MLOAD
0x4e7 DUP1
0x4e8 DUP1
0x4e9 PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0x50a DUP2
0x50b MSTORE
0x50c POP
0x50d PUSH1 0xa
0x50f ADD
0x510 SWAP1
0x511 POP
0x512 PUSH1 0x40
0x514 MLOAD
0x515 DUP1
0x516 SWAP2
0x517 SUB
0x518 SWAP1
0x519 SHA3
0x51a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x538 SWAP1
0x539 DIV
0x53a PUSH1 0x40
0x53c MLOAD
0x53d DUP2
0x53e PUSH4 0xffffffff
0x543 AND
0x544 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x562 MUL
0x563 DUP2
0x564 MSTORE
0x565 PUSH1 0x4
0x567 ADD
0x568 PUSH1 0x0
0x56a PUSH1 0x40
0x56c MLOAD
0x56d DUP1
0x56e DUP4
0x56f SUB
0x570 DUP2
0x571 PUSH1 0x0
0x573 DUP8
0x574 GAS
0x575 CALL
0x576 POP
0x577 PUSH1 0xa
0x579 SWAP3
0x57a POP
0x57b POP
0x57c POP
0x57d PUSH1 0x9
0x57f DUP3
0x580 MUL
0x581 DIV
0x582 SWAP1
0x583 POP
0x584 PUSH8 0x136dcc951d8c0000
0x58d DUP2
0x58e GT
0x58f ISZERO
0x590 PUSH2 0x5ce
0x593 JUMPI
---
0x453: V280 = 0x40
0x456: V281 = M[0x40]
0x457: V282 = 0x0
0x45a: V283 = M[0x0]
0x45b: V284 = 0x20
0x45d: V285 = 0xab5
0x461: CODECOPY 0x0 0xab5 0x20
0x463: V286 = M[0x0]
0x465: M[0x0] = V283
0x467: M[V281] = V286
0x469: V287 = M[0x40]
0x46d: V288 = SUB V281 V287
0x46e: V289 = 0x17
0x470: V290 = ADD 0x17 V288
0x472: V291 = SHA3 V287 V290
0x473: V292 = 0xffffffff
0x478: V293 = 0x100000000000000000000000000000000000000000000000000000000
0x499: V294 = DIV V291 0x100000000000000000000000000000000000000000000000000000000
0x49c: V295 = AND V294 0xffffffff
0x49f: V296 = MUL 0x100000000000000000000000000000000000000000000000000000000 V295
0x4a1: M[V287] = V296
0x4a2: V297 = 0x1
0x4a4: V298 = 0x4
0x4a7: V299 = ADD V287 0x4
0x4aa: M[V299] = 0x1
0x4ab: V300 = 0x24
0x4ae: V301 = ADD V287 0x24
0x4af: M[V301] = 0x1
0x4b1: V302 = M[0x40]
0x4b2: V303 = 0x1
0x4b4: V304 = 0xa0
0x4b6: V305 = 0x2
0x4b8: V306 = EXP 0x2 0xa0
0x4b9: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V308 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: V309 = 0x44
0x4c4: V310 = ADD V287 0x44
0x4c6: V311 = 0x0
0x4cd: V312 = SUB V287 V302
0x4ce: V313 = ADD V312 0x44
0x4d2: V314 = GAS
0x4d3: V315 = CALL V314 V308 S3 V302 V313 V302 0x0
0x4db: V316 = 0x1
0x4dd: V317 = 0xa0
0x4df: V318 = 0x2
0x4e1: V319 = EXP 0x2 0xa0
0x4e2: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e3: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x4e4: V322 = 0x40
0x4e6: V323 = M[0x40]
0x4e9: V324 = 0x7769746864726177282900000000000000000000000000000000000000000000
0x50b: M[V323] = 0x7769746864726177282900000000000000000000000000000000000000000000
0x50d: V325 = 0xa
0x50f: V326 = ADD 0xa V323
0x512: V327 = 0x40
0x514: V328 = M[0x40]
0x517: V329 = SUB V326 V328
0x519: V330 = SHA3 V328 V329
0x51a: V331 = 0x100000000000000000000000000000000000000000000000000000000
0x539: V332 = DIV V330 0x100000000000000000000000000000000000000000000000000000000
0x53a: V333 = 0x40
0x53c: V334 = M[0x40]
0x53e: V335 = 0xffffffff
0x543: V336 = AND 0xffffffff V332
0x544: V337 = 0x100000000000000000000000000000000000000000000000000000000
0x562: V338 = MUL 0x100000000000000000000000000000000000000000000000000000000 V336
0x564: M[V334] = V338
0x565: V339 = 0x4
0x567: V340 = ADD 0x4 V334
0x568: V341 = 0x0
0x56a: V342 = 0x40
0x56c: V343 = M[0x40]
0x56f: V344 = SUB V340 V343
0x571: V345 = 0x0
0x574: V346 = GAS
0x575: V347 = CALL V346 V321 0x0 V343 V344 V343 0x0
0x577: V348 = 0xa
0x57d: V349 = 0x9
0x580: V350 = MUL V275 0x9
0x581: V351 = DIV V350 0xa
0x584: V352 = 0x136dcc951d8c0000
0x58e: V353 = GT V351 0x136dcc951d8c0000
0x58f: V354 = ISZERO V353
0x590: V355 = 0x5ce
0x593: THROWI V354
---
Entry stack: [S4, S3, S2, S1, V275]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V351]
Exit stack: [S4, S3, S2, S1, V351]

================================

Block 0x594
[0x594:0x6ba]
---
Predecessors: [0x453]
Successors: [0x6bb]
---
0x594 PUSH1 0x40
0x596 DUP1
0x597 MLOAD
0x598 PUSH1 0x0
0x59a DUP1
0x59b MLOAD
0x59c PUSH1 0x20
0x59e PUSH2 0xab5
0x5a1 DUP4
0x5a2 CODECOPY
0x5a3 DUP2
0x5a4 MLOAD
0x5a5 SWAP2
0x5a6 MSTORE
0x5a7 DUP2
0x5a8 MSTORE
0x5a9 DUP2
0x5aa MLOAD
0x5ab SWAP1
0x5ac DUP2
0x5ad SWAP1
0x5ae SUB
0x5af PUSH1 0x17
0x5b1 ADD
0x5b2 DUP2
0x5b3 SHA3
0x5b4 PUSH4 0xffffffff
0x5b9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5d7 SWAP2
0x5d8 DUP3
0x5d9 SWAP1
0x5da DIV
0x5db SWAP1
0x5dc DUP2
0x5dd AND
0x5de SWAP1
0x5df SWAP2
0x5e0 MUL
0x5e1 DUP3
0x5e2 MSTORE
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0x4
0x5e7 DUP4
0x5e8 ADD
0x5e9 DUP2
0x5ea SWAP1
0x5eb MSTORE
0x5ec PUSH1 0x24
0x5ee DUP4
0x5ef ADD
0x5f0 MSTORE
0x5f1 SWAP2
0x5f2 MLOAD
0x5f3 PUSH1 0x1
0x5f5 PUSH1 0xa0
0x5f7 PUSH1 0x2
0x5f9 EXP
0x5fa SUB
0x5fb DUP9
0x5fc AND
0x5fd SWAP3
0x5fe SWAP2
0x5ff DUP8
0x600 SWAP2
0x601 PUSH1 0x44
0x603 DUP1
0x604 DUP4
0x605 ADD
0x606 SWAP3
0x607 PUSH1 0x0
0x609 SWAP3
0x60a SWAP2
0x60b SWAP1
0x60c DUP3
0x60d SWAP1
0x60e SUB
0x60f ADD
0x610 DUP2
0x611 DUP6
0x612 DUP9
0x613 GAS
0x614 CALL
0x615 SWAP4
0x616 POP
0x617 POP
0x618 POP
0x619 POP
0x61a POP
0x61b DUP5
0x61c PUSH1 0x1
0x61e PUSH1 0xa0
0x620 PUSH1 0x2
0x622 EXP
0x623 SUB
0x624 AND
0x625 PUSH1 0x40
0x627 MLOAD
0x628 DUP1
0x629 DUP1
0x62a PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0x64b DUP2
0x64c MSTORE
0x64d POP
0x64e PUSH1 0xa
0x650 ADD
0x651 SWAP1
0x652 POP
0x653 PUSH1 0x40
0x655 MLOAD
0x656 DUP1
0x657 SWAP2
0x658 SUB
0x659 SWAP1
0x65a SHA3
0x65b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x679 SWAP1
0x67a DIV
0x67b PUSH1 0x40
0x67d MLOAD
0x67e DUP2
0x67f PUSH4 0xffffffff
0x684 AND
0x685 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6a3 MUL
0x6a4 DUP2
0x6a5 MSTORE
0x6a6 PUSH1 0x4
0x6a8 ADD
0x6a9 PUSH1 0x0
0x6ab PUSH1 0x40
0x6ad MLOAD
0x6ae DUP1
0x6af DUP4
0x6b0 SUB
0x6b1 DUP2
0x6b2 PUSH1 0x0
0x6b4 DUP8
0x6b5 GAS
0x6b6 CALL
0x6b7 POP
0x6b8 POP
0x6b9 POP
0x6ba POP
---
0x594: V356 = 0x40
0x597: V357 = M[0x40]
0x598: V358 = 0x0
0x59b: V359 = M[0x0]
0x59c: V360 = 0x20
0x59e: V361 = 0xab5
0x5a2: CODECOPY 0x0 0xab5 0x20
0x5a4: V362 = M[0x0]
0x5a6: M[0x0] = V359
0x5a8: M[V357] = V362
0x5aa: V363 = M[0x40]
0x5ae: V364 = SUB V357 V363
0x5af: V365 = 0x17
0x5b1: V366 = ADD 0x17 V364
0x5b3: V367 = SHA3 V363 V366
0x5b4: V368 = 0xffffffff
0x5b9: V369 = 0x100000000000000000000000000000000000000000000000000000000
0x5da: V370 = DIV V367 0x100000000000000000000000000000000000000000000000000000000
0x5dd: V371 = AND V370 0xffffffff
0x5e0: V372 = MUL 0x100000000000000000000000000000000000000000000000000000000 V371
0x5e2: M[V363] = V372
0x5e3: V373 = 0x1
0x5e5: V374 = 0x4
0x5e8: V375 = ADD V363 0x4
0x5eb: M[V375] = 0x1
0x5ec: V376 = 0x24
0x5ef: V377 = ADD V363 0x24
0x5f0: M[V377] = 0x1
0x5f2: V378 = M[0x40]
0x5f3: V379 = 0x1
0x5f5: V380 = 0xa0
0x5f7: V381 = 0x2
0x5f9: V382 = EXP 0x2 0xa0
0x5fa: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fc: V384 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x601: V385 = 0x44
0x605: V386 = ADD V363 0x44
0x607: V387 = 0x0
0x60e: V388 = SUB V363 V378
0x60f: V389 = ADD V388 0x44
0x613: V390 = GAS
0x614: V391 = CALL V390 V384 S3 V378 V389 V378 0x0
0x61c: V392 = 0x1
0x61e: V393 = 0xa0
0x620: V394 = 0x2
0x622: V395 = EXP 0x2 0xa0
0x623: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x625: V398 = 0x40
0x627: V399 = M[0x40]
0x62a: V400 = 0x7769746864726177282900000000000000000000000000000000000000000000
0x64c: M[V399] = 0x7769746864726177282900000000000000000000000000000000000000000000
0x64e: V401 = 0xa
0x650: V402 = ADD 0xa V399
0x653: V403 = 0x40
0x655: V404 = M[0x40]
0x658: V405 = SUB V402 V404
0x65a: V406 = SHA3 V404 V405
0x65b: V407 = 0x100000000000000000000000000000000000000000000000000000000
0x67a: V408 = DIV V406 0x100000000000000000000000000000000000000000000000000000000
0x67b: V409 = 0x40
0x67d: V410 = M[0x40]
0x67f: V411 = 0xffffffff
0x684: V412 = AND 0xffffffff V408
0x685: V413 = 0x100000000000000000000000000000000000000000000000000000000
0x6a3: V414 = MUL 0x100000000000000000000000000000000000000000000000000000000 V412
0x6a5: M[V410] = V414
0x6a6: V415 = 0x4
0x6a8: V416 = ADD 0x4 V410
0x6a9: V417 = 0x0
0x6ab: V418 = 0x40
0x6ad: V419 = M[0x40]
0x6b0: V420 = SUB V416 V419
0x6b2: V421 = 0x0
0x6b5: V422 = GAS
0x6b6: V423 = CALL V422 V397 0x0 V419 V420 V419 0x0
---
Entry stack: [S4, S3, S2, S1, V351]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S4, S3, S2, S1, V351]

================================

Block 0x6bb
[0x6bb:0x6e2]
---
Predecessors: [0x594]
Successors: [0x6e3]
---
0x6bb JUMPDEST
0x6bc DUP6
0x6bd PUSH1 0x1
0x6bf PUSH1 0xa0
0x6c1 PUSH1 0x2
0x6c3 EXP
0x6c4 SUB
0x6c5 AND
0x6c6 SELFDESTRUCT
0x6c7 JUMPDEST
0x6c8 PUSH2 0x4cc
0x6cb DUP1
0x6cc PUSH2 0x5e9
0x6cf PUSH1 0x0
0x6d1 CODECOPY
0x6d2 PUSH1 0x0
0x6d4 RETURN
0x6d5 STOP
0x6d6 PUSH1 0x80
0x6d8 PUSH1 0x40
0x6da MSTORE
0x6db PUSH1 0x4
0x6dd CALLDATASIZE
0x6de LT
0x6df PUSH2 0x27
0x6e2 JUMPI
---
0x6bb: JUMPDEST 
0x6bd: V424 = 0x1
0x6bf: V425 = 0xa0
0x6c1: V426 = 0x2
0x6c3: V427 = EXP 0x2 0xa0
0x6c4: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c5: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6c6: SELFDESTRUCT V429
0x6c7: JUMPDEST 
0x6c8: V430 = 0x4cc
0x6cc: V431 = 0x5e9
0x6cf: V432 = 0x0
0x6d1: CODECOPY 0x0 0x5e9 0x4cc
0x6d2: V433 = 0x0
0x6d4: RETURN 0x0 0x4cc
0x6d5: STOP 
0x6d6: V434 = 0x80
0x6d8: V435 = 0x40
0x6da: M[0x40] = 0x80
0x6db: V436 = 0x4
0x6dd: V437 = CALLDATASIZE
0x6de: V438 = LT V437 0x4
0x6df: V439 = 0x27
0x6e2: THROWI V438
---
Entry stack: [S4, S3, S2, S1, V351]
Stack pops: 24
Stack additions: []
Exit stack: []

================================

Block 0x6e3
[0x6e3:0x6fc]
---
Predecessors: [0x6bb]
Successors: [0x6fd]
---
0x6e3 PUSH4 0xffffffff
0x6e8 PUSH1 0xe0
0x6ea PUSH1 0x2
0x6ec EXP
0x6ed PUSH1 0x0
0x6ef CALLDATALOAD
0x6f0 DIV
0x6f1 AND
0x6f2 PUSH4 0x275cb723
0x6f7 DUP2
0x6f8 EQ
0x6f9 PUSH2 0x2c
0x6fc JUMPI
---
0x6e3: V440 = 0xffffffff
0x6e8: V441 = 0xe0
0x6ea: V442 = 0x2
0x6ec: V443 = EXP 0x2 0xe0
0x6ed: V444 = 0x0
0x6ef: V445 = CALLDATALOAD 0x0
0x6f0: V446 = DIV V445 0x100000000000000000000000000000000000000000000000000000000
0x6f1: V447 = AND V446 0xffffffff
0x6f2: V448 = 0x275cb723
0x6f8: V449 = EQ V447 0x275cb723
0x6f9: V450 = 0x2c
0x6fc: THROWI V449
---
Entry stack: []
Stack pops: 0
Stack additions: [V447]
Exit stack: [V447]

================================

Block 0x6fd
[0x6fd:0x709]
---
Predecessors: [0x6e3]
Successors: [0x70a]
---
0x6fd JUMPDEST
0x6fe PUSH1 0x0
0x700 DUP1
0x701 REVERT
0x702 JUMPDEST
0x703 CALLVALUE
0x704 DUP1
0x705 ISZERO
0x706 PUSH2 0x38
0x709 JUMPI
---
0x6fd: JUMPDEST 
0x6fe: V451 = 0x0
0x701: REVERT 0x0 0x0
0x702: JUMPDEST 
0x703: V452 = CALLVALUE
0x705: V453 = ISZERO V452
0x706: V454 = 0x38
0x709: THROWI V453
---
Entry stack: [V447]
Stack pops: 0
Stack additions: [V452]
Exit stack: []

================================

Block 0x70a
[0x70a:0x770]
---
Predecessors: [0x6fd]
Successors: [0x771]
---
0x70a PUSH1 0x0
0x70c DUP1
0x70d REVERT
0x70e JUMPDEST
0x70f POP
0x710 PUSH2 0x59
0x713 PUSH1 0x1
0x715 PUSH1 0xa0
0x717 PUSH1 0x2
0x719 EXP
0x71a SUB
0x71b PUSH1 0x4
0x71d CALLDATALOAD
0x71e DUP2
0x71f AND
0x720 SWAP1
0x721 PUSH1 0x24
0x723 CALLDATALOAD
0x724 AND
0x725 PUSH1 0x44
0x727 CALLDATALOAD
0x728 PUSH1 0x64
0x72a CALLDATALOAD
0x72b PUSH2 0x5b
0x72e JUMP
0x72f JUMPDEST
0x730 STOP
0x731 JUMPDEST
0x732 PUSH1 0x0
0x734 DUP1
0x735 DUP5
0x736 SWAP2
0x737 POP
0x738 DUP2
0x739 PUSH1 0x1
0x73b PUSH1 0xa0
0x73d PUSH1 0x2
0x73f EXP
0x740 SUB
0x741 AND
0x742 PUSH4 0xd87574e0
0x747 PUSH1 0x40
0x749 MLOAD
0x74a DUP2
0x74b PUSH4 0xffffffff
0x750 AND
0x751 PUSH1 0xe0
0x753 PUSH1 0x2
0x755 EXP
0x756 MUL
0x757 DUP2
0x758 MSTORE
0x759 PUSH1 0x4
0x75b ADD
0x75c PUSH1 0x20
0x75e PUSH1 0x40
0x760 MLOAD
0x761 DUP1
0x762 DUP4
0x763 SUB
0x764 DUP2
0x765 PUSH1 0x0
0x767 DUP8
0x768 DUP1
0x769 EXTCODESIZE
0x76a ISZERO
0x76b DUP1
0x76c ISZERO
0x76d PUSH2 0x9f
0x770 JUMPI
---
0x70a: V455 = 0x0
0x70d: REVERT 0x0 0x0
0x70e: JUMPDEST 
0x710: V456 = 0x59
0x713: V457 = 0x1
0x715: V458 = 0xa0
0x717: V459 = 0x2
0x719: V460 = EXP 0x2 0xa0
0x71a: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71b: V462 = 0x4
0x71d: V463 = CALLDATALOAD 0x4
0x71f: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x721: V465 = 0x24
0x723: V466 = CALLDATALOAD 0x24
0x724: V467 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x725: V468 = 0x44
0x727: V469 = CALLDATALOAD 0x44
0x728: V470 = 0x64
0x72a: V471 = CALLDATALOAD 0x64
0x72b: V472 = 0x5b
0x72e: THROW 
0x72f: JUMPDEST 
0x730: STOP 
0x731: JUMPDEST 
0x732: V473 = 0x0
0x739: V474 = 0x1
0x73b: V475 = 0xa0
0x73d: V476 = 0x2
0x73f: V477 = EXP 0x2 0xa0
0x740: V478 = SUB 0x10000000000000000000000000000000000000000 0x1
0x741: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x742: V480 = 0xd87574e0
0x747: V481 = 0x40
0x749: V482 = M[0x40]
0x74b: V483 = 0xffffffff
0x750: V484 = AND 0xffffffff 0xd87574e0
0x751: V485 = 0xe0
0x753: V486 = 0x2
0x755: V487 = EXP 0x2 0xe0
0x756: V488 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x758: M[V482] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x759: V489 = 0x4
0x75b: V490 = ADD 0x4 V482
0x75c: V491 = 0x20
0x75e: V492 = 0x40
0x760: V493 = M[0x40]
0x763: V494 = SUB V490 V493
0x765: V495 = 0x0
0x769: V496 = EXTCODESIZE V479
0x76a: V497 = ISZERO V496
0x76c: V498 = ISZERO V497
0x76d: V499 = 0x9f
0x770: THROWI V498
---
Entry stack: [V452]
Stack pops: 0
Stack additions: [V471, V469, V467, V464, 0x59, V497, V479, 0x0, V493, V494, V493, 0x20, V490, 0xd87574e0, V479, 0x0, S2, S0, S1, S2]
Exit stack: []

================================

Block 0x771
[0x771:0x77f]
---
Predecessors: [0x70a]
Successors: [0x780]
---
0x771 PUSH1 0x0
0x773 DUP1
0x774 REVERT
0x775 JUMPDEST
0x776 POP
0x777 GAS
0x778 CALL
0x779 ISZERO
0x77a DUP1
0x77b ISZERO
0x77c PUSH2 0xb3
0x77f JUMPI
---
0x771: V500 = 0x0
0x774: REVERT 0x0 0x0
0x775: JUMPDEST 
0x777: V501 = GAS
0x778: V502 = CALL V501 S1 S2 S3 S4 S5 S6
0x779: V503 = ISZERO V502
0x77b: V504 = ISZERO V503
0x77c: V505 = 0xb3
0x77f: THROWI V504
---
Entry stack: [S14, S13, S12, S11, 0x0, V479, 0xd87574e0, V490, 0x20, V493, V494, V493, 0x0, V479, V497]
Stack pops: 0
Stack additions: [V503]
Exit stack: []

================================

Block 0x780
[0x780:0x79a]
---
Predecessors: [0x771]
Successors: [0x79b]
---
0x780 RETURNDATASIZE
0x781 PUSH1 0x0
0x783 DUP1
0x784 RETURNDATACOPY
0x785 RETURNDATASIZE
0x786 PUSH1 0x0
0x788 REVERT
0x789 JUMPDEST
0x78a POP
0x78b POP
0x78c POP
0x78d POP
0x78e PUSH1 0x40
0x790 MLOAD
0x791 RETURNDATASIZE
0x792 PUSH1 0x20
0x794 DUP2
0x795 LT
0x796 ISZERO
0x797 PUSH2 0xc9
0x79a JUMPI
---
0x780: V506 = RETURNDATASIZE
0x781: V507 = 0x0
0x784: RETURNDATACOPY 0x0 0x0 V506
0x785: V508 = RETURNDATASIZE
0x786: V509 = 0x0
0x788: REVERT 0x0 V508
0x789: JUMPDEST 
0x78e: V510 = 0x40
0x790: V511 = M[0x40]
0x791: V512 = RETURNDATASIZE
0x792: V513 = 0x20
0x795: V514 = LT V512 0x20
0x796: V515 = ISZERO V514
0x797: V516 = 0xc9
0x79a: THROWI V515
---
Entry stack: [V503]
Stack pops: 0
Stack additions: [V512, V511]
Exit stack: []

================================

Block 0x79b
[0x79b:0x7b3]
---
Predecessors: [0x780]
Successors: [0x7b4]
---
0x79b PUSH1 0x0
0x79d DUP1
0x79e REVERT
0x79f JUMPDEST
0x7a0 POP
0x7a1 MLOAD
0x7a2 SWAP1
0x7a3 POP
0x7a4 PUSH8 0x136dcc951d8c0000
0x7ad DUP2
0x7ae GT
0x7af ISZERO
0x7b0 PUSH2 0x454
0x7b3 JUMPI
---
0x79b: V517 = 0x0
0x79e: REVERT 0x0 0x0
0x79f: JUMPDEST 
0x7a1: V518 = M[S1]
0x7a4: V519 = 0x136dcc951d8c0000
0x7ae: V520 = GT V518 0x136dcc951d8c0000
0x7af: V521 = ISZERO V520
0x7b0: V522 = 0x454
0x7b3: THROWI V521
---
Entry stack: [V511, V512]
Stack pops: 0
Stack additions: [V518]
Exit stack: []

================================

Block 0x7b4
[0x7b4:0x897]
---
Predecessors: [0x79b]
Successors: [0x898]
---
0x7b4 PUSH1 0x40
0x7b6 DUP1
0x7b7 MLOAD
0x7b8 PUSH1 0x0
0x7ba DUP1
0x7bb MLOAD
0x7bc PUSH1 0x20
0x7be PUSH2 0x481
0x7c1 DUP4
0x7c2 CODECOPY
0x7c3 DUP2
0x7c4 MLOAD
0x7c5 SWAP2
0x7c6 MSTORE
0x7c7 DUP2
0x7c8 MSTORE
0x7c9 DUP2
0x7ca MLOAD
0x7cb SWAP1
0x7cc DUP2
0x7cd SWAP1
0x7ce SUB
0x7cf PUSH1 0x17
0x7d1 ADD
0x7d2 DUP2
0x7d3 SHA3
0x7d4 PUSH4 0xffffffff
0x7d9 PUSH1 0xe0
0x7db PUSH1 0x2
0x7dd EXP
0x7de SWAP2
0x7df DUP3
0x7e0 SWAP1
0x7e1 DIV
0x7e2 SWAP1
0x7e3 DUP2
0x7e4 AND
0x7e5 SWAP1
0x7e6 SWAP2
0x7e7 MUL
0x7e8 DUP3
0x7e9 MSTORE
0x7ea PUSH1 0x1
0x7ec PUSH1 0x4
0x7ee DUP4
0x7ef ADD
0x7f0 DUP2
0x7f1 SWAP1
0x7f2 MSTORE
0x7f3 PUSH1 0x24
0x7f5 DUP4
0x7f6 ADD
0x7f7 MSTORE
0x7f8 SWAP2
0x7f9 MLOAD
0x7fa PUSH1 0x1
0x7fc PUSH1 0xa0
0x7fe PUSH1 0x2
0x800 EXP
0x801 SUB
0x802 DUP9
0x803 AND
0x804 SWAP3
0x805 SWAP2
0x806 DUP8
0x807 SWAP2
0x808 PUSH1 0x44
0x80a DUP1
0x80b DUP4
0x80c ADD
0x80d SWAP3
0x80e PUSH1 0x0
0x810 SWAP3
0x811 SWAP2
0x812 SWAP1
0x813 DUP3
0x814 SWAP1
0x815 SUB
0x816 ADD
0x817 DUP2
0x818 DUP6
0x819 DUP9
0x81a GAS
0x81b CALL
0x81c SWAP4
0x81d POP
0x81e POP
0x81f POP
0x820 POP
0x821 POP
0x822 DUP5
0x823 PUSH1 0x1
0x825 PUSH1 0xa0
0x827 PUSH1 0x2
0x829 EXP
0x82a SUB
0x82b AND
0x82c PUSH1 0x40
0x82e MLOAD
0x82f DUP1
0x830 DUP1
0x831 PUSH1 0x0
0x833 DUP1
0x834 MLOAD
0x835 PUSH1 0x20
0x837 PUSH2 0x461
0x83a DUP4
0x83b CODECOPY
0x83c DUP2
0x83d MLOAD
0x83e SWAP2
0x83f MSTORE
0x840 DUP2
0x841 MSTORE
0x842 POP
0x843 PUSH1 0xa
0x845 ADD
0x846 SWAP1
0x847 POP
0x848 PUSH1 0x40
0x84a MLOAD
0x84b DUP1
0x84c SWAP2
0x84d SUB
0x84e SWAP1
0x84f SHA3
0x850 PUSH1 0xe0
0x852 PUSH1 0x2
0x854 EXP
0x855 SWAP1
0x856 DIV
0x857 PUSH1 0x40
0x859 MLOAD
0x85a DUP2
0x85b PUSH4 0xffffffff
0x860 AND
0x861 PUSH1 0xe0
0x863 PUSH1 0x2
0x865 EXP
0x866 MUL
0x867 DUP2
0x868 MSTORE
0x869 PUSH1 0x4
0x86b ADD
0x86c PUSH1 0x0
0x86e PUSH1 0x40
0x870 MLOAD
0x871 DUP1
0x872 DUP4
0x873 SUB
0x874 DUP2
0x875 PUSH1 0x0
0x877 DUP8
0x878 GAS
0x879 CALL
0x87a POP
0x87b PUSH1 0xa
0x87d SWAP3
0x87e POP
0x87f POP
0x880 POP
0x881 PUSH1 0x9
0x883 DUP3
0x884 MUL
0x885 DIV
0x886 SWAP1
0x887 POP
0x888 PUSH8 0x136dcc951d8c0000
0x891 DUP2
0x892 GT
0x893 ISZERO
0x894 PUSH2 0x454
0x897 JUMPI
---
0x7b4: V523 = 0x40
0x7b7: V524 = M[0x40]
0x7b8: V525 = 0x0
0x7bb: V526 = M[0x0]
0x7bc: V527 = 0x20
0x7be: V528 = 0x481
0x7c2: CODECOPY 0x0 0x481 0x20
0x7c4: V529 = M[0x0]
0x7c6: M[0x0] = V526
0x7c8: M[V524] = V529
0x7ca: V530 = M[0x40]
0x7ce: V531 = SUB V524 V530
0x7cf: V532 = 0x17
0x7d1: V533 = ADD 0x17 V531
0x7d3: V534 = SHA3 V530 V533
0x7d4: V535 = 0xffffffff
0x7d9: V536 = 0xe0
0x7db: V537 = 0x2
0x7dd: V538 = EXP 0x2 0xe0
0x7e1: V539 = DIV V534 0x100000000000000000000000000000000000000000000000000000000
0x7e4: V540 = AND V539 0xffffffff
0x7e7: V541 = MUL 0x100000000000000000000000000000000000000000000000000000000 V540
0x7e9: M[V530] = V541
0x7ea: V542 = 0x1
0x7ec: V543 = 0x4
0x7ef: V544 = ADD V530 0x4
0x7f2: M[V544] = 0x1
0x7f3: V545 = 0x24
0x7f6: V546 = ADD V530 0x24
0x7f7: M[V546] = 0x1
0x7f9: V547 = M[0x40]
0x7fa: V548 = 0x1
0x7fc: V549 = 0xa0
0x7fe: V550 = 0x2
0x800: V551 = EXP 0x2 0xa0
0x801: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x803: V553 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x808: V554 = 0x44
0x80c: V555 = ADD V530 0x44
0x80e: V556 = 0x0
0x815: V557 = SUB V530 V547
0x816: V558 = ADD V557 0x44
0x81a: V559 = GAS
0x81b: V560 = CALL V559 V553 S3 V547 V558 V547 0x0
0x823: V561 = 0x1
0x825: V562 = 0xa0
0x827: V563 = 0x2
0x829: V564 = EXP 0x2 0xa0
0x82a: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82b: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x82c: V567 = 0x40
0x82e: V568 = M[0x40]
0x831: V569 = 0x0
0x834: V570 = M[0x0]
0x835: V571 = 0x20
0x837: V572 = 0x461
0x83b: CODECOPY 0x0 0x461 0x20
0x83d: V573 = M[0x0]
0x83f: M[0x0] = V570
0x841: M[V568] = V573
0x843: V574 = 0xa
0x845: V575 = ADD 0xa V568
0x848: V576 = 0x40
0x84a: V577 = M[0x40]
0x84d: V578 = SUB V575 V577
0x84f: V579 = SHA3 V577 V578
0x850: V580 = 0xe0
0x852: V581 = 0x2
0x854: V582 = EXP 0x2 0xe0
0x856: V583 = DIV V579 0x100000000000000000000000000000000000000000000000000000000
0x857: V584 = 0x40
0x859: V585 = M[0x40]
0x85b: V586 = 0xffffffff
0x860: V587 = AND 0xffffffff V583
0x861: V588 = 0xe0
0x863: V589 = 0x2
0x865: V590 = EXP 0x2 0xe0
0x866: V591 = MUL 0x100000000000000000000000000000000000000000000000000000000 V587
0x868: M[V585] = V591
0x869: V592 = 0x4
0x86b: V593 = ADD 0x4 V585
0x86c: V594 = 0x0
0x86e: V595 = 0x40
0x870: V596 = M[0x40]
0x873: V597 = SUB V593 V596
0x875: V598 = 0x0
0x878: V599 = GAS
0x879: V600 = CALL V599 V566 0x0 V596 V597 V596 0x0
0x87b: V601 = 0xa
0x881: V602 = 0x9
0x884: V603 = MUL V518 0x9
0x885: V604 = DIV V603 0xa
0x888: V605 = 0x136dcc951d8c0000
0x892: V606 = GT V604 0x136dcc951d8c0000
0x893: V607 = ISZERO V606
0x894: V608 = 0x454
0x897: THROWI V607
---
Entry stack: [V518]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V604]
Exit stack: [S3, S2, S1, S0, V604]

================================

Block 0x898
[0x898:0x97b]
---
Predecessors: [0x7b4]
Successors: [0x97c]
---
0x898 PUSH1 0x40
0x89a DUP1
0x89b MLOAD
0x89c PUSH1 0x0
0x89e DUP1
0x89f MLOAD
0x8a0 PUSH1 0x20
0x8a2 PUSH2 0x481
0x8a5 DUP4
0x8a6 CODECOPY
0x8a7 DUP2
0x8a8 MLOAD
0x8a9 SWAP2
0x8aa MSTORE
0x8ab DUP2
0x8ac MSTORE
0x8ad DUP2
0x8ae MLOAD
0x8af SWAP1
0x8b0 DUP2
0x8b1 SWAP1
0x8b2 SUB
0x8b3 PUSH1 0x17
0x8b5 ADD
0x8b6 DUP2
0x8b7 SHA3
0x8b8 PUSH4 0xffffffff
0x8bd PUSH1 0xe0
0x8bf PUSH1 0x2
0x8c1 EXP
0x8c2 SWAP2
0x8c3 DUP3
0x8c4 SWAP1
0x8c5 DIV
0x8c6 SWAP1
0x8c7 DUP2
0x8c8 AND
0x8c9 SWAP1
0x8ca SWAP2
0x8cb MUL
0x8cc DUP3
0x8cd MSTORE
0x8ce PUSH1 0x1
0x8d0 PUSH1 0x4
0x8d2 DUP4
0x8d3 ADD
0x8d4 DUP2
0x8d5 SWAP1
0x8d6 MSTORE
0x8d7 PUSH1 0x24
0x8d9 DUP4
0x8da ADD
0x8db MSTORE
0x8dc SWAP2
0x8dd MLOAD
0x8de PUSH1 0x1
0x8e0 PUSH1 0xa0
0x8e2 PUSH1 0x2
0x8e4 EXP
0x8e5 SUB
0x8e6 DUP9
0x8e7 AND
0x8e8 SWAP3
0x8e9 SWAP2
0x8ea DUP8
0x8eb SWAP2
0x8ec PUSH1 0x44
0x8ee DUP1
0x8ef DUP4
0x8f0 ADD
0x8f1 SWAP3
0x8f2 PUSH1 0x0
0x8f4 SWAP3
0x8f5 SWAP2
0x8f6 SWAP1
0x8f7 DUP3
0x8f8 SWAP1
0x8f9 SUB
0x8fa ADD
0x8fb DUP2
0x8fc DUP6
0x8fd DUP9
0x8fe GAS
0x8ff CALL
0x900 SWAP4
0x901 POP
0x902 POP
0x903 POP
0x904 POP
0x905 POP
0x906 DUP5
0x907 PUSH1 0x1
0x909 PUSH1 0xa0
0x90b PUSH1 0x2
0x90d EXP
0x90e SUB
0x90f AND
0x910 PUSH1 0x40
0x912 MLOAD
0x913 DUP1
0x914 DUP1
0x915 PUSH1 0x0
0x917 DUP1
0x918 MLOAD
0x919 PUSH1 0x20
0x91b PUSH2 0x461
0x91e DUP4
0x91f CODECOPY
0x920 DUP2
0x921 MLOAD
0x922 SWAP2
0x923 MSTORE
0x924 DUP2
0x925 MSTORE
0x926 POP
0x927 PUSH1 0xa
0x929 ADD
0x92a SWAP1
0x92b POP
0x92c PUSH1 0x40
0x92e MLOAD
0x92f DUP1
0x930 SWAP2
0x931 SUB
0x932 SWAP1
0x933 SHA3
0x934 PUSH1 0xe0
0x936 PUSH1 0x2
0x938 EXP
0x939 SWAP1
0x93a DIV
0x93b PUSH1 0x40
0x93d MLOAD
0x93e DUP2
0x93f PUSH4 0xffffffff
0x944 AND
0x945 PUSH1 0xe0
0x947 PUSH1 0x2
0x949 EXP
0x94a MUL
0x94b DUP2
0x94c MSTORE
0x94d PUSH1 0x4
0x94f ADD
0x950 PUSH1 0x0
0x952 PUSH1 0x40
0x954 MLOAD
0x955 DUP1
0x956 DUP4
0x957 SUB
0x958 DUP2
0x959 PUSH1 0x0
0x95b DUP8
0x95c GAS
0x95d CALL
0x95e POP
0x95f PUSH1 0xa
0x961 SWAP3
0x962 POP
0x963 POP
0x964 POP
0x965 PUSH1 0x9
0x967 DUP3
0x968 MUL
0x969 DIV
0x96a SWAP1
0x96b POP
0x96c PUSH8 0x136dcc951d8c0000
0x975 DUP2
0x976 GT
0x977 ISZERO
0x978 PUSH2 0x454
0x97b JUMPI
---
0x898: V609 = 0x40
0x89b: V610 = M[0x40]
0x89c: V611 = 0x0
0x89f: V612 = M[0x0]
0x8a0: V613 = 0x20
0x8a2: V614 = 0x481
0x8a6: CODECOPY 0x0 0x481 0x20
0x8a8: V615 = M[0x0]
0x8aa: M[0x0] = V612
0x8ac: M[V610] = V615
0x8ae: V616 = M[0x40]
0x8b2: V617 = SUB V610 V616
0x8b3: V618 = 0x17
0x8b5: V619 = ADD 0x17 V617
0x8b7: V620 = SHA3 V616 V619
0x8b8: V621 = 0xffffffff
0x8bd: V622 = 0xe0
0x8bf: V623 = 0x2
0x8c1: V624 = EXP 0x2 0xe0
0x8c5: V625 = DIV V620 0x100000000000000000000000000000000000000000000000000000000
0x8c8: V626 = AND V625 0xffffffff
0x8cb: V627 = MUL 0x100000000000000000000000000000000000000000000000000000000 V626
0x8cd: M[V616] = V627
0x8ce: V628 = 0x1
0x8d0: V629 = 0x4
0x8d3: V630 = ADD V616 0x4
0x8d6: M[V630] = 0x1
0x8d7: V631 = 0x24
0x8da: V632 = ADD V616 0x24
0x8db: M[V632] = 0x1
0x8dd: V633 = M[0x40]
0x8de: V634 = 0x1
0x8e0: V635 = 0xa0
0x8e2: V636 = 0x2
0x8e4: V637 = EXP 0x2 0xa0
0x8e5: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e7: V639 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: V640 = 0x44
0x8f0: V641 = ADD V616 0x44
0x8f2: V642 = 0x0
0x8f9: V643 = SUB V616 V633
0x8fa: V644 = ADD V643 0x44
0x8fe: V645 = GAS
0x8ff: V646 = CALL V645 V639 S3 V633 V644 V633 0x0
0x907: V647 = 0x1
0x909: V648 = 0xa0
0x90b: V649 = 0x2
0x90d: V650 = EXP 0x2 0xa0
0x90e: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90f: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x910: V653 = 0x40
0x912: V654 = M[0x40]
0x915: V655 = 0x0
0x918: V656 = M[0x0]
0x919: V657 = 0x20
0x91b: V658 = 0x461
0x91f: CODECOPY 0x0 0x461 0x20
0x921: V659 = M[0x0]
0x923: M[0x0] = V656
0x925: M[V654] = V659
0x927: V660 = 0xa
0x929: V661 = ADD 0xa V654
0x92c: V662 = 0x40
0x92e: V663 = M[0x40]
0x931: V664 = SUB V661 V663
0x933: V665 = SHA3 V663 V664
0x934: V666 = 0xe0
0x936: V667 = 0x2
0x938: V668 = EXP 0x2 0xe0
0x93a: V669 = DIV V665 0x100000000000000000000000000000000000000000000000000000000
0x93b: V670 = 0x40
0x93d: V671 = M[0x40]
0x93f: V672 = 0xffffffff
0x944: V673 = AND 0xffffffff V669
0x945: V674 = 0xe0
0x947: V675 = 0x2
0x949: V676 = EXP 0x2 0xe0
0x94a: V677 = MUL 0x100000000000000000000000000000000000000000000000000000000 V673
0x94c: M[V671] = V677
0x94d: V678 = 0x4
0x94f: V679 = ADD 0x4 V671
0x950: V680 = 0x0
0x952: V681 = 0x40
0x954: V682 = M[0x40]
0x957: V683 = SUB V679 V682
0x959: V684 = 0x0
0x95c: V685 = GAS
0x95d: V686 = CALL V685 V652 0x0 V682 V683 V682 0x0
0x95f: V687 = 0xa
0x965: V688 = 0x9
0x968: V689 = MUL V604 0x9
0x969: V690 = DIV V689 0xa
0x96c: V691 = 0x136dcc951d8c0000
0x976: V692 = GT V690 0x136dcc951d8c0000
0x977: V693 = ISZERO V692
0x978: V694 = 0x454
0x97b: THROWI V693
---
Entry stack: [S4, S3, S2, S1, V604]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V690]
Exit stack: [S4, S3, S2, S1, V690]

================================

Block 0x97c
[0x97c:0xa5f]
---
Predecessors: [0x898]
Successors: [0xa60]
---
0x97c PUSH1 0x40
0x97e DUP1
0x97f MLOAD
0x980 PUSH1 0x0
0x982 DUP1
0x983 MLOAD
0x984 PUSH1 0x20
0x986 PUSH2 0x481
0x989 DUP4
0x98a CODECOPY
0x98b DUP2
0x98c MLOAD
0x98d SWAP2
0x98e MSTORE
0x98f DUP2
0x990 MSTORE
0x991 DUP2
0x992 MLOAD
0x993 SWAP1
0x994 DUP2
0x995 SWAP1
0x996 SUB
0x997 PUSH1 0x17
0x999 ADD
0x99a DUP2
0x99b SHA3
0x99c PUSH4 0xffffffff
0x9a1 PUSH1 0xe0
0x9a3 PUSH1 0x2
0x9a5 EXP
0x9a6 SWAP2
0x9a7 DUP3
0x9a8 SWAP1
0x9a9 DIV
0x9aa SWAP1
0x9ab DUP2
0x9ac AND
0x9ad SWAP1
0x9ae SWAP2
0x9af MUL
0x9b0 DUP3
0x9b1 MSTORE
0x9b2 PUSH1 0x1
0x9b4 PUSH1 0x4
0x9b6 DUP4
0x9b7 ADD
0x9b8 DUP2
0x9b9 SWAP1
0x9ba MSTORE
0x9bb PUSH1 0x24
0x9bd DUP4
0x9be ADD
0x9bf MSTORE
0x9c0 SWAP2
0x9c1 MLOAD
0x9c2 PUSH1 0x1
0x9c4 PUSH1 0xa0
0x9c6 PUSH1 0x2
0x9c8 EXP
0x9c9 SUB
0x9ca DUP9
0x9cb AND
0x9cc SWAP3
0x9cd SWAP2
0x9ce DUP8
0x9cf SWAP2
0x9d0 PUSH1 0x44
0x9d2 DUP1
0x9d3 DUP4
0x9d4 ADD
0x9d5 SWAP3
0x9d6 PUSH1 0x0
0x9d8 SWAP3
0x9d9 SWAP2
0x9da SWAP1
0x9db DUP3
0x9dc SWAP1
0x9dd SUB
0x9de ADD
0x9df DUP2
0x9e0 DUP6
0x9e1 DUP9
0x9e2 GAS
0x9e3 CALL
0x9e4 SWAP4
0x9e5 POP
0x9e6 POP
0x9e7 POP
0x9e8 POP
0x9e9 POP
0x9ea DUP5
0x9eb PUSH1 0x1
0x9ed PUSH1 0xa0
0x9ef PUSH1 0x2
0x9f1 EXP
0x9f2 SUB
0x9f3 AND
0x9f4 PUSH1 0x40
0x9f6 MLOAD
0x9f7 DUP1
0x9f8 DUP1
0x9f9 PUSH1 0x0
0x9fb DUP1
0x9fc MLOAD
0x9fd PUSH1 0x20
0x9ff PUSH2 0x461
0xa02 DUP4
0xa03 CODECOPY
0xa04 DUP2
0xa05 MLOAD
0xa06 SWAP2
0xa07 MSTORE
0xa08 DUP2
0xa09 MSTORE
0xa0a POP
0xa0b PUSH1 0xa
0xa0d ADD
0xa0e SWAP1
0xa0f POP
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP1
0xa14 SWAP2
0xa15 SUB
0xa16 SWAP1
0xa17 SHA3
0xa18 PUSH1 0xe0
0xa1a PUSH1 0x2
0xa1c EXP
0xa1d SWAP1
0xa1e DIV
0xa1f PUSH1 0x40
0xa21 MLOAD
0xa22 DUP2
0xa23 PUSH4 0xffffffff
0xa28 AND
0xa29 PUSH1 0xe0
0xa2b PUSH1 0x2
0xa2d EXP
0xa2e MUL
0xa2f DUP2
0xa30 MSTORE
0xa31 PUSH1 0x4
0xa33 ADD
0xa34 PUSH1 0x0
0xa36 PUSH1 0x40
0xa38 MLOAD
0xa39 DUP1
0xa3a DUP4
0xa3b SUB
0xa3c DUP2
0xa3d PUSH1 0x0
0xa3f DUP8
0xa40 GAS
0xa41 CALL
0xa42 POP
0xa43 PUSH1 0xa
0xa45 SWAP3
0xa46 POP
0xa47 POP
0xa48 POP
0xa49 PUSH1 0x9
0xa4b DUP3
0xa4c MUL
0xa4d DIV
0xa4e SWAP1
0xa4f POP
0xa50 PUSH8 0x136dcc951d8c0000
0xa59 DUP2
0xa5a GT
0xa5b ISZERO
0xa5c PUSH2 0x454
0xa5f JUMPI
---
0x97c: V695 = 0x40
0x97f: V696 = M[0x40]
0x980: V697 = 0x0
0x983: V698 = M[0x0]
0x984: V699 = 0x20
0x986: V700 = 0x481
0x98a: CODECOPY 0x0 0x481 0x20
0x98c: V701 = M[0x0]
0x98e: M[0x0] = V698
0x990: M[V696] = V701
0x992: V702 = M[0x40]
0x996: V703 = SUB V696 V702
0x997: V704 = 0x17
0x999: V705 = ADD 0x17 V703
0x99b: V706 = SHA3 V702 V705
0x99c: V707 = 0xffffffff
0x9a1: V708 = 0xe0
0x9a3: V709 = 0x2
0x9a5: V710 = EXP 0x2 0xe0
0x9a9: V711 = DIV V706 0x100000000000000000000000000000000000000000000000000000000
0x9ac: V712 = AND V711 0xffffffff
0x9af: V713 = MUL 0x100000000000000000000000000000000000000000000000000000000 V712
0x9b1: M[V702] = V713
0x9b2: V714 = 0x1
0x9b4: V715 = 0x4
0x9b7: V716 = ADD V702 0x4
0x9ba: M[V716] = 0x1
0x9bb: V717 = 0x24
0x9be: V718 = ADD V702 0x24
0x9bf: M[V718] = 0x1
0x9c1: V719 = M[0x40]
0x9c2: V720 = 0x1
0x9c4: V721 = 0xa0
0x9c6: V722 = 0x2
0x9c8: V723 = EXP 0x2 0xa0
0x9c9: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cb: V725 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x9d0: V726 = 0x44
0x9d4: V727 = ADD V702 0x44
0x9d6: V728 = 0x0
0x9dd: V729 = SUB V702 V719
0x9de: V730 = ADD V729 0x44
0x9e2: V731 = GAS
0x9e3: V732 = CALL V731 V725 S3 V719 V730 V719 0x0
0x9eb: V733 = 0x1
0x9ed: V734 = 0xa0
0x9ef: V735 = 0x2
0x9f1: V736 = EXP 0x2 0xa0
0x9f2: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f3: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x9f4: V739 = 0x40
0x9f6: V740 = M[0x40]
0x9f9: V741 = 0x0
0x9fc: V742 = M[0x0]
0x9fd: V743 = 0x20
0x9ff: V744 = 0x461
0xa03: CODECOPY 0x0 0x461 0x20
0xa05: V745 = M[0x0]
0xa07: M[0x0] = V742
0xa09: M[V740] = V745
0xa0b: V746 = 0xa
0xa0d: V747 = ADD 0xa V740
0xa10: V748 = 0x40
0xa12: V749 = M[0x40]
0xa15: V750 = SUB V747 V749
0xa17: V751 = SHA3 V749 V750
0xa18: V752 = 0xe0
0xa1a: V753 = 0x2
0xa1c: V754 = EXP 0x2 0xe0
0xa1e: V755 = DIV V751 0x100000000000000000000000000000000000000000000000000000000
0xa1f: V756 = 0x40
0xa21: V757 = M[0x40]
0xa23: V758 = 0xffffffff
0xa28: V759 = AND 0xffffffff V755
0xa29: V760 = 0xe0
0xa2b: V761 = 0x2
0xa2d: V762 = EXP 0x2 0xe0
0xa2e: V763 = MUL 0x100000000000000000000000000000000000000000000000000000000 V759
0xa30: M[V757] = V763
0xa31: V764 = 0x4
0xa33: V765 = ADD 0x4 V757
0xa34: V766 = 0x0
0xa36: V767 = 0x40
0xa38: V768 = M[0x40]
0xa3b: V769 = SUB V765 V768
0xa3d: V770 = 0x0
0xa40: V771 = GAS
0xa41: V772 = CALL V771 V738 0x0 V768 V769 V768 0x0
0xa43: V773 = 0xa
0xa49: V774 = 0x9
0xa4c: V775 = MUL V690 0x9
0xa4d: V776 = DIV V775 0xa
0xa50: V777 = 0x136dcc951d8c0000
0xa5a: V778 = GT V776 0x136dcc951d8c0000
0xa5b: V779 = ISZERO V778
0xa5c: V780 = 0x454
0xa5f: THROWI V779
---
Entry stack: [S4, S3, S2, S1, V690]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V776]
Exit stack: [S4, S3, S2, S1, V776]

================================

Block 0xa60
[0xa60:0xb29]
---
Predecessors: [0x97c]
Successors: [0xb2a]
---
0xa60 PUSH1 0x40
0xa62 DUP1
0xa63 MLOAD
0xa64 PUSH1 0x0
0xa66 DUP1
0xa67 MLOAD
0xa68 PUSH1 0x20
0xa6a PUSH2 0x481
0xa6d DUP4
0xa6e CODECOPY
0xa6f DUP2
0xa70 MLOAD
0xa71 SWAP2
0xa72 MSTORE
0xa73 DUP2
0xa74 MSTORE
0xa75 DUP2
0xa76 MLOAD
0xa77 SWAP1
0xa78 DUP2
0xa79 SWAP1
0xa7a SUB
0xa7b PUSH1 0x17
0xa7d ADD
0xa7e DUP2
0xa7f SHA3
0xa80 PUSH4 0xffffffff
0xa85 PUSH1 0xe0
0xa87 PUSH1 0x2
0xa89 EXP
0xa8a SWAP2
0xa8b DUP3
0xa8c SWAP1
0xa8d DIV
0xa8e SWAP1
0xa8f DUP2
0xa90 AND
0xa91 SWAP1
0xa92 SWAP2
0xa93 MUL
0xa94 DUP3
0xa95 MSTORE
0xa96 PUSH1 0x1
0xa98 PUSH1 0x4
0xa9a DUP4
0xa9b ADD
0xa9c DUP2
0xa9d SWAP1
0xa9e MSTORE
0xa9f PUSH1 0x24
0xaa1 DUP4
0xaa2 ADD
0xaa3 MSTORE
0xaa4 SWAP2
0xaa5 MLOAD
0xaa6 PUSH1 0x1
0xaa8 PUSH1 0xa0
0xaaa PUSH1 0x2
0xaac EXP
0xaad SUB
0xaae DUP9
0xaaf AND
0xab0 SWAP3
0xab1 SWAP2
0xab2 DUP8
0xab3 SWAP2
0xab4 PUSH1 0x44
0xab6 DUP1
0xab7 DUP4
0xab8 ADD
0xab9 SWAP3
0xaba PUSH1 0x0
0xabc SWAP3
0xabd SWAP2
0xabe SWAP1
0xabf DUP3
0xac0 SWAP1
0xac1 SUB
0xac2 ADD
0xac3 DUP2
0xac4 DUP6
0xac5 DUP9
0xac6 GAS
0xac7 CALL
0xac8 SWAP4
0xac9 POP
0xaca POP
0xacb POP
0xacc POP
0xacd POP
0xace DUP5
0xacf PUSH1 0x1
0xad1 PUSH1 0xa0
0xad3 PUSH1 0x2
0xad5 EXP
0xad6 SUB
0xad7 AND
0xad8 PUSH1 0x40
0xada MLOAD
0xadb DUP1
0xadc DUP1
0xadd PUSH1 0x0
0xadf DUP1
0xae0 MLOAD
0xae1 PUSH1 0x20
0xae3 PUSH2 0x461
0xae6 DUP4
0xae7 CODECOPY
0xae8 DUP2
0xae9 MLOAD
0xaea SWAP2
0xaeb MSTORE
0xaec DUP2
0xaed MSTORE
0xaee POP
0xaef PUSH1 0xa
0xaf1 ADD
0xaf2 SWAP1
0xaf3 POP
0xaf4 PUSH1 0x40
0xaf6 MLOAD
0xaf7 DUP1
0xaf8 SWAP2
0xaf9 SUB
0xafa SWAP1
0xafb SHA3
0xafc PUSH1 0xe0
0xafe PUSH1 0x2
0xb00 EXP
0xb01 SWAP1
0xb02 DIV
0xb03 PUSH1 0x40
0xb05 MLOAD
0xb06 DUP2
0xb07 PUSH4 0xffffffff
0xb0c AND
0xb0d PUSH1 0xe0
0xb0f PUSH1 0x2
0xb11 EXP
0xb12 MUL
0xb13 DUP2
0xb14 MSTORE
0xb15 PUSH1 0x4
0xb17 ADD
0xb18 PUSH1 0x0
0xb1a PUSH1 0x40
0xb1c MLOAD
0xb1d DUP1
0xb1e DUP4
0xb1f SUB
0xb20 DUP2
0xb21 PUSH1 0x0
0xb23 DUP8
0xb24 GAS
0xb25 CALL
0xb26 POP
0xb27 POP
0xb28 POP
0xb29 POP
---
0xa60: V781 = 0x40
0xa63: V782 = M[0x40]
0xa64: V783 = 0x0
0xa67: V784 = M[0x0]
0xa68: V785 = 0x20
0xa6a: V786 = 0x481
0xa6e: CODECOPY 0x0 0x481 0x20
0xa70: V787 = M[0x0]
0xa72: M[0x0] = V784
0xa74: M[V782] = V787
0xa76: V788 = M[0x40]
0xa7a: V789 = SUB V782 V788
0xa7b: V790 = 0x17
0xa7d: V791 = ADD 0x17 V789
0xa7f: V792 = SHA3 V788 V791
0xa80: V793 = 0xffffffff
0xa85: V794 = 0xe0
0xa87: V795 = 0x2
0xa89: V796 = EXP 0x2 0xe0
0xa8d: V797 = DIV V792 0x100000000000000000000000000000000000000000000000000000000
0xa90: V798 = AND V797 0xffffffff
0xa93: V799 = MUL 0x100000000000000000000000000000000000000000000000000000000 V798
0xa95: M[V788] = V799
0xa96: V800 = 0x1
0xa98: V801 = 0x4
0xa9b: V802 = ADD V788 0x4
0xa9e: M[V802] = 0x1
0xa9f: V803 = 0x24
0xaa2: V804 = ADD V788 0x24
0xaa3: M[V804] = 0x1
0xaa5: V805 = M[0x40]
0xaa6: V806 = 0x1
0xaa8: V807 = 0xa0
0xaaa: V808 = 0x2
0xaac: V809 = EXP 0x2 0xa0
0xaad: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaaf: V811 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xab4: V812 = 0x44
0xab8: V813 = ADD V788 0x44
0xaba: V814 = 0x0
0xac1: V815 = SUB V788 V805
0xac2: V816 = ADD V815 0x44
0xac6: V817 = GAS
0xac7: V818 = CALL V817 V811 S3 V805 V816 V805 0x0
0xacf: V819 = 0x1
0xad1: V820 = 0xa0
0xad3: V821 = 0x2
0xad5: V822 = EXP 0x2 0xa0
0xad6: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad7: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xad8: V825 = 0x40
0xada: V826 = M[0x40]
0xadd: V827 = 0x0
0xae0: V828 = M[0x0]
0xae1: V829 = 0x20
0xae3: V830 = 0x461
0xae7: CODECOPY 0x0 0x461 0x20
0xae9: V831 = M[0x0]
0xaeb: M[0x0] = V828
0xaed: M[V826] = V831
0xaef: V832 = 0xa
0xaf1: V833 = ADD 0xa V826
0xaf4: V834 = 0x40
0xaf6: V835 = M[0x40]
0xaf9: V836 = SUB V833 V835
0xafb: V837 = SHA3 V835 V836
0xafc: V838 = 0xe0
0xafe: V839 = 0x2
0xb00: V840 = EXP 0x2 0xe0
0xb02: V841 = DIV V837 0x100000000000000000000000000000000000000000000000000000000
0xb03: V842 = 0x40
0xb05: V843 = M[0x40]
0xb07: V844 = 0xffffffff
0xb0c: V845 = AND 0xffffffff V841
0xb0d: V846 = 0xe0
0xb0f: V847 = 0x2
0xb11: V848 = EXP 0x2 0xe0
0xb12: V849 = MUL 0x100000000000000000000000000000000000000000000000000000000 V845
0xb14: M[V843] = V849
0xb15: V850 = 0x4
0xb17: V851 = ADD 0x4 V843
0xb18: V852 = 0x0
0xb1a: V853 = 0x40
0xb1c: V854 = M[0x40]
0xb1f: V855 = SUB V851 V854
0xb21: V856 = 0x0
0xb24: V857 = GAS
0xb25: V858 = CALL V857 V824 0x0 V854 V855 V854 0x0
---
Entry stack: [S4, S3, S2, S1, V776]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S4, S3, S2, S1, V776]

================================

Block 0xb2a
[0xb2a:0xbd3]
---
Predecessors: [0xa60]
Successors: [0xbd4]
Has unresolved jump.
---
0xb2a JUMPDEST
0xb2b DUP6
0xb2c PUSH1 0x1
0xb2e PUSH1 0xa0
0xb30 PUSH1 0x2
0xb32 EXP
0xb33 SUB
0xb34 AND
0xb35 SELFDESTRUCT
0xb36 STOP
0xb37 PUSH24 0x697468647261772829000000000000000000000000000000
0xb50 STOP
0xb51 STOP
0xb52 STOP
0xb53 STOP
0xb54 STOP
0xb55 STOP
0xb56 STOP
0xb57 PUSH3 0x757958
0xb5b PUSH10 0x642875696e743235362c
0xb66 PUSH22 0x696e7432353629000000000000000000a165627a7a72
0xb7d ADDRESS
0xb7e PC
0xb7f SHA3
0xb80 MISSING 0xe1
0xb81 MISSING 0xa9
0xb82 DUP2
0xb83 PUSH28 0xc9c455aaeca2bbb87a357c10f1b2fe95702064d65cdd3fc6ff2b5eca
0xba0 STOP
0xba1 MISSING 0x29
0xba2 PUSH3 0x757958
0xba6 PUSH10 0x642875696e743235362c
0xbb1 PUSH22 0x696e7432353629000000000000000000a165627a7a72
0xbc8 ADDRESS
0xbc9 PC
0xbca SHA3
0xbcb DIV
0xbcc SLOAD
0xbcd MISSING 0x24
0xbce INVALID
0xbcf RETURNDATASIZE
0xbd0 MSTORE8
0xbd1 CALLDATASIZE
0xbd2 DUP2
0xbd3 JUMPI
---
0xb2a: JUMPDEST 
0xb2c: V859 = 0x1
0xb2e: V860 = 0xa0
0xb30: V861 = 0x2
0xb32: V862 = EXP 0x2 0xa0
0xb33: V863 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb34: V864 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xb35: SELFDESTRUCT V864
0xb36: STOP 
0xb37: V865 = 0x697468647261772829000000000000000000000000000000
0xb50: STOP 
0xb51: STOP 
0xb52: STOP 
0xb53: STOP 
0xb54: STOP 
0xb55: STOP 
0xb56: STOP 
0xb57: V866 = 0x757958
0xb5b: V867 = 0x642875696e743235362c
0xb66: V868 = 0x696e7432353629000000000000000000a165627a7a72
0xb7d: V869 = ADDRESS
0xb7e: V870 = PC
0xb7f: V871 = SHA3 V870 V869
0xb80: MISSING 0xe1
0xb81: MISSING 0xa9
0xb83: V872 = 0xc9c455aaeca2bbb87a357c10f1b2fe95702064d65cdd3fc6ff2b5eca
0xba0: STOP 
0xba1: MISSING 0x29
0xba2: V873 = 0x757958
0xba6: V874 = 0x642875696e743235362c
0xbb1: V875 = 0x696e7432353629000000000000000000a165627a7a72
0xbc8: V876 = ADDRESS
0xbc9: V877 = PC
0xbca: V878 = SHA3 V877 V876
0xbcb: V879 = DIV V878 0x696e7432353629000000000000000000a165627a7a72
0xbcc: V880 = S[V879]
0xbcd: MISSING 0x24
0xbce: INVALID 
0xbcf: V881 = RETURNDATASIZE
0xbd0: M8[V881] = S0
0xbd1: V882 = CALLDATASIZE
0xbd3: JUMPI S1 V882
---
Entry stack: [S4, S3, S2, S1, V776]
Stack pops: 94042
Stack additions: [S1]
Exit stack: []

================================

Block 0xbd4
[0xbd4:0xbf1]
---
Predecessors: [0xb2a]
Successors: []
---
0xbd4 SWAP12
0xbd5 MISSING 0xf8
0xbd6 SWAP13
0xbd7 MISSING 0x28
0xbd8 MISSING 0x1f
0xbd9 SWAP2
0xbda DUP11
0xbdb RETURNDATACOPY
0xbdc MISSING 0xf7
0xbdd MISSING 0x48
0xbde SIGNEXTEND
0xbdf DUP6
0xbe0 ADDRESS
0xbe1 PUSH16 0x5110361a4e6d4457590029
---
0xbd5: MISSING 0xf8
0xbd7: MISSING 0x28
0xbd8: MISSING 0x1f
0xbdb: RETURNDATACOPY S10 S2 S1
0xbdc: MISSING 0xf7
0xbdd: MISSING 0x48
0xbde: V883 = SIGNEXTEND S0 S1
0xbe0: V884 = ADDRESS
0xbe1: V885 = 0x5110361a4e6d4457590029
---
Entry stack: [S0]
Stack pops: 82
Stack additions: [0x5110361a4e6d4457590029, V884, S6, V883, S2, S3, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f269689
Entry block: 0x45
Exit block: 0x72
Body: 0x45, 0x72, 0x74, 0x81, 0xca, 0xd3, 0xdc

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

