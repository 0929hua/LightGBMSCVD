Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4a
0xa: JUMPI 0x4a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x118]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xb93381b
0x3a EQ
0x3b PUSH2 0x118
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xb93381b
0x3a: V12 = EQ 0xb93381b V10
0x3b: V13 = 0x118
0x3e: JUMPI 0x118 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x145]
---
0x3f DUP1
0x40 PUSH4 0x8da5cb5b
0x45 EQ
0x46 PUSH2 0x145
0x49 JUMPI
---
0x40: V14 = 0x8da5cb5b
0x45: V15 = EQ 0x8da5cb5b V10
0x46: V16 = 0x145
0x49: JUMPI 0x145 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0xa1]
---
Predecessors: [0x0, 0x3f]
Successors: [0xa2, 0xa6]
---
0x4a JUMPDEST
0x4b PUSH1 0x0
0x4d DUP1
0x4e SWAP1
0x4f SLOAD
0x50 SWAP1
0x51 PUSH2 0x100
0x54 EXP
0x55 SWAP1
0x56 DIV
0x57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c AND
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 CALLER
0x84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99 AND
0x9a EQ
0x9b ISZERO
0x9c ISZERO
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x4a: JUMPDEST 
0x4b: V17 = 0x0
0x4f: V18 = S[0x0]
0x51: V19 = 0x100
0x54: V20 = EXP 0x100 0x0
0x56: V21 = DIV V18 0x1
0x57: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x6d: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x83: V26 = CALLER
0x84: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x99: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x9a: V29 = EQ V28 V25
0x9b: V30 = ISZERO V29
0x9c: V31 = ISZERO V30
0x9d: V32 = ISZERO V31
0x9e: V33 = 0xa6
0xa1: JUMPI 0xa6 V32
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x4a]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V34 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa6
[0xa6:0x117]
---
Predecessors: [0x4a]
Successors: []
---
0xa6 JUMPDEST
0xa7 PUSH20 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0xbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1 AND
0xd2 PUSH3 0xc7f9c
0xd6 PUSH1 0x0
0xd8 CALLDATASIZE
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd DUP4
0xde DUP4
0xdf DUP1
0xe0 DUP3
0xe1 DUP5
0xe2 CALLDATACOPY
0xe3 DUP3
0xe4 ADD
0xe5 SWAP2
0xe6 POP
0xe7 POP
0xe8 SWAP3
0xe9 POP
0xea POP
0xeb POP
0xec PUSH1 0x0
0xee PUSH1 0x40
0xf0 MLOAD
0xf1 DUP1
0xf2 DUP4
0xf3 SUB
0xf4 DUP2
0xf5 PUSH1 0x0
0xf7 DUP8
0xf8 DUP8
0xf9 CALL
0xfa SWAP3
0xfb POP
0xfc POP
0xfd POP
0xfe PUSH1 0x0
0x100 PUSH1 0x14
0x102 PUSH2 0x100
0x105 EXP
0x106 DUP2
0x107 SLOAD
0x108 DUP2
0x109 PUSH1 0xff
0x10b MUL
0x10c NOT
0x10d AND
0x10e SWAP1
0x10f DUP4
0x110 ISZERO
0x111 ISZERO
0x112 MUL
0x113 OR
0x114 SWAP1
0x115 SSTORE
0x116 POP
0x117 STOP
---
0xa6: JUMPDEST 
0xa7: V35 = 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0xbc: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0xd2: V38 = 0xc7f9c
0xd6: V39 = 0x0
0xd8: V40 = CALLDATASIZE
0xd9: V41 = 0x40
0xdb: V42 = M[0x40]
0xe2: CALLDATACOPY V42 0x0 V40
0xe4: V43 = ADD V42 V40
0xec: V44 = 0x0
0xee: V45 = 0x40
0xf0: V46 = M[0x40]
0xf3: V47 = SUB V43 V46
0xf5: V48 = 0x0
0xf9: V49 = CALL 0xc7f9c 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf 0x0 V46 V47 V46 0x0
0xfe: V50 = 0x0
0x100: V51 = 0x14
0x102: V52 = 0x100
0x105: V53 = EXP 0x100 0x14
0x107: V54 = S[0x0]
0x109: V55 = 0xff
0x10b: V56 = MUL 0xff 0x10000000000000000000000000000000000000000
0x10c: V57 = NOT 0xff0000000000000000000000000000000000000000
0x10d: V58 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V54
0x110: V59 = ISZERO V49
0x111: V60 = ISZERO V59
0x112: V61 = MUL V60 0x10000000000000000000000000000000000000000
0x113: V62 = OR V61 V58
0x115: S[0x0] = V62
0x117: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0xb]
Successors: [0x11f, 0x123]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x123
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V63 = CALLVALUE
0x11a: V64 = ISZERO V63
0x11b: V65 = 0x123
0x11e: JUMPI 0x123 V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11f
[0x11f:0x122]
---
Predecessors: [0x118]
Successors: []
---
0x11f PUSH1 0x0
0x121 DUP1
0x122 REVERT
---
0x11f: V66 = 0x0
0x122: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x118]
Successors: [0x19a]
---
0x123 JUMPDEST
0x124 PUSH2 0x12b
0x127 PUSH2 0x19a
0x12a JUMP
---
0x123: JUMPDEST 
0x124: V67 = 0x12b
0x127: V68 = 0x19a
0x12a: JUMP 0x19a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V10, 0x12b]

================================

Block 0x12b
[0x12b:0x144]
---
Predecessors: [0x19a]
Successors: []
---
0x12b JUMPDEST
0x12c PUSH1 0x40
0x12e MLOAD
0x12f DUP1
0x130 DUP3
0x131 ISZERO
0x132 ISZERO
0x133 ISZERO
0x134 ISZERO
0x135 DUP2
0x136 MSTORE
0x137 PUSH1 0x20
0x139 ADD
0x13a SWAP2
0x13b POP
0x13c POP
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 SWAP2
0x142 SUB
0x143 SWAP1
0x144 RETURN
---
0x12b: JUMPDEST 
0x12c: V69 = 0x40
0x12e: V70 = M[0x40]
0x131: V71 = ISZERO V104
0x132: V72 = ISZERO V71
0x133: V73 = ISZERO V72
0x134: V74 = ISZERO V73
0x136: M[V70] = V74
0x137: V75 = 0x20
0x139: V76 = ADD 0x20 V70
0x13d: V77 = 0x40
0x13f: V78 = M[0x40]
0x142: V79 = SUB V76 V78
0x144: RETURN V78 V79
---
Entry stack: [V10, 0x12b, V104]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12b]

================================

Block 0x145
[0x145:0x14b]
---
Predecessors: [0x3f]
Successors: [0x14c, 0x150]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x145: JUMPDEST 
0x146: V80 = CALLVALUE
0x147: V81 = ISZERO V80
0x148: V82 = 0x150
0x14b: JUMPI 0x150 V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x145]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V83 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x145]
Successors: [0x1ad]
---
0x150 JUMPDEST
0x151 PUSH2 0x158
0x154 PUSH2 0x1ad
0x157 JUMP
---
0x150: JUMPDEST 
0x151: V84 = 0x158
0x154: V85 = 0x1ad
0x157: JUMP 0x1ad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x158]
Exit stack: [V10, 0x158]

================================

Block 0x158
[0x158:0x199]
---
Predecessors: [0x1ad]
Successors: []
---
0x158 JUMPDEST
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d DUP3
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP2
0x190 POP
0x191 POP
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 SWAP2
0x197 SUB
0x198 SWAP1
0x199 RETURN
---
0x158: JUMPDEST 
0x159: V86 = 0x40
0x15b: V87 = M[0x40]
0x15e: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x174: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x18b: M[V87] = V91
0x18c: V92 = 0x20
0x18e: V93 = ADD 0x20 V87
0x192: V94 = 0x40
0x194: V95 = M[0x40]
0x197: V96 = SUB V93 V95
0x199: RETURN V95 V96
---
Entry stack: [V10, 0x158, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x158]

================================

Block 0x19a
[0x19a:0x1ac]
---
Predecessors: [0x123]
Successors: [0x12b]
---
0x19a JUMPDEST
0x19b PUSH1 0x0
0x19d PUSH1 0x14
0x19f SWAP1
0x1a0 SLOAD
0x1a1 SWAP1
0x1a2 PUSH2 0x100
0x1a5 EXP
0x1a6 SWAP1
0x1a7 DIV
0x1a8 PUSH1 0xff
0x1aa AND
0x1ab DUP2
0x1ac JUMP
---
0x19a: JUMPDEST 
0x19b: V97 = 0x0
0x19d: V98 = 0x14
0x1a0: V99 = S[0x0]
0x1a2: V100 = 0x100
0x1a5: V101 = EXP 0x100 0x14
0x1a7: V102 = DIV V99 0x10000000000000000000000000000000000000000
0x1a8: V103 = 0xff
0x1aa: V104 = AND 0xff V102
0x1ac: JUMP 0x12b
---
Entry stack: [V10, 0x12b]
Stack pops: 1
Stack additions: [S0, V104]
Exit stack: [V10, 0x12b, V104]

================================

Block 0x1ad
[0x1ad:0x1d1]
---
Predecessors: [0x150]
Successors: [0x158]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 SWAP1
0x1b2 SLOAD
0x1b3 SWAP1
0x1b4 PUSH2 0x100
0x1b7 EXP
0x1b8 SWAP1
0x1b9 DIV
0x1ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cf AND
0x1d0 DUP2
0x1d1 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V105 = 0x0
0x1b2: V106 = S[0x0]
0x1b4: V107 = 0x100
0x1b7: V108 = EXP 0x100 0x0
0x1b9: V109 = DIV V106 0x1
0x1ba: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cf: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1d1: JUMP 0x158
---
Entry stack: [V10, 0x158]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [V10, 0x158, V111]

================================

Block 0x1d2
[0x1d2:0x201]
---
Predecessors: []
Successors: []
---
0x1d2 STOP
0x1d3 LOG1
0x1d4 PUSH6 0x627a7a723058
0x1db SHA3
0x1dc PUSH19 0xcdbfe7e360053341d96629a3f431bd4db71b17
0x1f0 MISSING 0xbe
0x1f1 MISSING 0x4a
0x1f2 MISSING 0x24
0x1f3 MISSING 0xbc
0x1f4 PUSH13 0x51193b5961075d0029
---
0x1d2: STOP 
0x1d3: LOG S0 S1 S2
0x1d4: V112 = 0x627a7a723058
0x1db: V113 = SHA3 0x627a7a723058 S3
0x1dc: V114 = 0xcdbfe7e360053341d96629a3f431bd4db71b17
0x1f0: MISSING 0xbe
0x1f1: MISSING 0x4a
0x1f2: MISSING 0x24
0x1f3: MISSING 0xbc
0x1f4: V115 = 0x51193b5961075d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcdbfe7e360053341d96629a3f431bd4db71b17, V113, 0x51193b5961075d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xb93381b
Entry block: 0x118
Exit block: 0x12b
Body: 0x118, 0x11f, 0x123, 0x12b, 0x19a

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x145
Exit block: 0x158
Body: 0x145, 0x14c, 0x150, 0x158, 0x1ad

Function 2:
Public fallback function
Entry block: 0x4a
Exit block: 0xa2
Body: 0x4a, 0xa2, 0xa6

