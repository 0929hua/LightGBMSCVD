Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2d05d3f
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2d05d3f
0x3c: V13 = EQ 0x2d05d3f V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xae]
---
0x41 DUP1
0x42 PUSH4 0x2692f25a
0x47 EQ
0x48 PUSH2 0xae
0x4b JUMPI
---
0x42: V15 = 0x2692f25a
0x47: V16 = EQ 0x2692f25a V11
0x48: V17 = 0xae
0x4b: JUMPI 0xae V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x14b]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x14b
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x14b
0x56: JUMPI 0x14b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x59 JUMPDEST
0x5a CALLVALUE
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x59: JUMPDEST 
0x5a: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x59]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0x59]
Successors: [0x1a0]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x1a0
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V25 = 0x6c
0x68: V26 = 0x1a0
0x6b: JUMP 0x1a0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0xad]
---
Predecessors: [0x1a0]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x40
0x6f MLOAD
0x70 DUP1
0x71 DUP3
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d AND
0x9e DUP2
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP2
0xa4 POP
0xa5 POP
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad RETURN
---
0x6c: JUMPDEST 
0x6d: V27 = 0x40
0x6f: V28 = M[0x40]
0x72: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x88: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x9f: M[V28] = V32
0xa0: V33 = 0x20
0xa2: V34 = ADD 0x20 V28
0xa6: V35 = 0x40
0xa8: V36 = M[0x40]
0xab: V37 = SUB V34 V36
0xad: RETURN V36 V37
---
Entry stack: [V11, 0x6c, V109]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x41]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V38 = CALLVALUE
0xb0: V39 = ISZERO V38
0xb1: V40 = 0xb9
0xb4: JUMPI 0xb9 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V41 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0x130]
---
Predecessors: [0xae]
Successors: [0x1c6]
---
0xb9 JUMPDEST
0xba PUSH2 0x131
0xbd PUSH1 0x4
0xbf DUP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd SWAP2
0xde SWAP1
0xdf DUP1
0xe0 CALLDATALOAD
0xe1 SWAP1
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 SWAP1
0xe6 SWAP2
0xe7 SWAP1
0xe8 DUP1
0xe9 CALLDATALOAD
0xea SWAP1
0xeb PUSH1 0x20
0xed ADD
0xee SWAP1
0xef DUP3
0xf0 ADD
0xf1 DUP1
0xf2 CALLDATALOAD
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 DUP1
0xf9 DUP1
0xfa PUSH1 0x1f
0xfc ADD
0xfd PUSH1 0x20
0xff DUP1
0x100 SWAP2
0x101 DIV
0x102 MUL
0x103 PUSH1 0x20
0x105 ADD
0x106 PUSH1 0x40
0x108 MLOAD
0x109 SWAP1
0x10a DUP2
0x10b ADD
0x10c PUSH1 0x40
0x10e MSTORE
0x10f DUP1
0x110 SWAP4
0x111 SWAP3
0x112 SWAP2
0x113 SWAP1
0x114 DUP2
0x115 DUP2
0x116 MSTORE
0x117 PUSH1 0x20
0x119 ADD
0x11a DUP4
0x11b DUP4
0x11c DUP1
0x11d DUP3
0x11e DUP5
0x11f CALLDATACOPY
0x120 DUP3
0x121 ADD
0x122 SWAP2
0x123 POP
0x124 POP
0x125 POP
0x126 POP
0x127 POP
0x128 POP
0x129 SWAP2
0x12a SWAP1
0x12b POP
0x12c POP
0x12d PUSH2 0x1c6
0x130 JUMP
---
0xb9: JUMPDEST 
0xba: V42 = 0x131
0xbd: V43 = 0x4
0xc1: V44 = CALLDATALOAD 0x4
0xc2: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xd9: V47 = 0x20
0xdb: V48 = ADD 0x20 0x4
0xe0: V49 = CALLDATALOAD 0x24
0xe2: V50 = 0x20
0xe4: V51 = ADD 0x20 0x24
0xe9: V52 = CALLDATALOAD 0x44
0xeb: V53 = 0x20
0xed: V54 = ADD 0x20 0x44
0xf0: V55 = ADD 0x4 V52
0xf2: V56 = CALLDATALOAD V55
0xf4: V57 = 0x20
0xf6: V58 = ADD 0x20 V55
0xfa: V59 = 0x1f
0xfc: V60 = ADD 0x1f V56
0xfd: V61 = 0x20
0x101: V62 = DIV V60 0x20
0x102: V63 = MUL V62 0x20
0x103: V64 = 0x20
0x105: V65 = ADD 0x20 V63
0x106: V66 = 0x40
0x108: V67 = M[0x40]
0x10b: V68 = ADD V67 V65
0x10c: V69 = 0x40
0x10e: M[0x40] = V68
0x116: M[V67] = V56
0x117: V70 = 0x20
0x119: V71 = ADD 0x20 V67
0x11f: CALLDATACOPY V71 V58 V56
0x121: V72 = ADD V71 V56
0x12d: V73 = 0x1c6
0x130: JUMP 0x1c6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x131, V46, V49, V67]
Exit stack: [V11, 0x131, V46, V49, V67]

================================

Block 0x131
[0x131:0x14a]
---
Predecessors: [0x30e]
Successors: []
---
0x131 JUMPDEST
0x132 PUSH1 0x40
0x134 MLOAD
0x135 DUP1
0x136 DUP3
0x137 ISZERO
0x138 ISZERO
0x139 ISZERO
0x13a ISZERO
0x13b DUP2
0x13c MSTORE
0x13d PUSH1 0x20
0x13f ADD
0x140 SWAP2
0x141 POP
0x142 POP
0x143 PUSH1 0x40
0x145 MLOAD
0x146 DUP1
0x147 SWAP2
0x148 SUB
0x149 SWAP1
0x14a RETURN
---
0x131: JUMPDEST 
0x132: V74 = 0x40
0x134: V75 = M[0x40]
0x137: V76 = ISZERO S0
0x138: V77 = ISZERO V76
0x139: V78 = ISZERO V77
0x13a: V79 = ISZERO V78
0x13c: M[V75] = V79
0x13d: V80 = 0x20
0x13f: V81 = ADD 0x20 V75
0x143: V82 = 0x40
0x145: V83 = M[0x40]
0x148: V84 = SUB V81 V83
0x14a: RETURN V83 V84
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x14b
[0x14b:0x151]
---
Predecessors: [0x4c]
Successors: [0x152, 0x156]
---
0x14b JUMPDEST
0x14c CALLVALUE
0x14d ISZERO
0x14e PUSH2 0x156
0x151 JUMPI
---
0x14b: JUMPDEST 
0x14c: V85 = CALLVALUE
0x14d: V86 = ISZERO V85
0x14e: V87 = 0x156
0x151: JUMPI 0x156 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x14b]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V88 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x15d]
---
Predecessors: [0x14b]
Successors: [0x315]
---
0x156 JUMPDEST
0x157 PUSH2 0x15e
0x15a PUSH2 0x315
0x15d JUMP
---
0x156: JUMPDEST 
0x157: V89 = 0x15e
0x15a: V90 = 0x315
0x15d: JUMP 0x315
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15e]
Exit stack: [V11, 0x15e]

================================

Block 0x15e
[0x15e:0x19f]
---
Predecessors: [0x315]
Successors: []
---
0x15e JUMPDEST
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 DUP3
0x164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x179 AND
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f AND
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
0x197 POP
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c SWAP2
0x19d SUB
0x19e SWAP1
0x19f RETURN
---
0x15e: JUMPDEST 
0x15f: V91 = 0x40
0x161: V92 = M[0x40]
0x164: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x179: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x17a: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x191: M[V92] = V96
0x192: V97 = 0x20
0x194: V98 = ADD 0x20 V92
0x198: V99 = 0x40
0x19a: V100 = M[0x40]
0x19d: V101 = SUB V98 V100
0x19f: RETURN V100 V101
---
Entry stack: [V11, 0x15e, V192]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15e]

================================

Block 0x1a0
[0x1a0:0x1c5]
---
Predecessors: [0x64]
Successors: [0x6c]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0x0
0x1a5 SWAP1
0x1a6 SLOAD
0x1a7 SWAP1
0x1a8 PUSH2 0x100
0x1ab EXP
0x1ac SWAP1
0x1ad DIV
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 DUP2
0x1c5 JUMP
---
0x1a0: JUMPDEST 
0x1a1: V102 = 0x1
0x1a3: V103 = 0x0
0x1a6: V104 = S[0x1]
0x1a8: V105 = 0x100
0x1ab: V106 = EXP 0x100 0x0
0x1ad: V107 = DIV V104 0x1
0x1ae: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1c5: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: [S0, V109]
Exit stack: [V11, 0x6c, V109]

================================

Block 0x1c6
[0x1c6:0x21f]
---
Predecessors: [0xb9]
Successors: [0x220, 0x273]
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca PUSH1 0x0
0x1cc SWAP1
0x1cd SLOAD
0x1ce SWAP1
0x1cf PUSH2 0x100
0x1d2 EXP
0x1d3 SWAP1
0x1d4 DIV
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 CALLER
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 EQ
0x219 ISZERO
0x21a DUP1
0x21b ISZERO
0x21c PUSH2 0x273
0x21f JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V110 = 0x0
0x1ca: V111 = 0x0
0x1cd: V112 = S[0x0]
0x1cf: V113 = 0x100
0x1d2: V114 = EXP 0x100 0x0
0x1d4: V115 = DIV V112 0x1
0x1d5: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1eb: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x201: V120 = CALLER
0x202: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x218: V123 = EQ V122 V119
0x219: V124 = ISZERO V123
0x21b: V125 = ISZERO V124
0x21c: V126 = 0x273
0x21f: JUMPI 0x273 V125
---
Entry stack: [V11, 0x131, V46, V49, V67]
Stack pops: 0
Stack additions: [0x0, V124]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0, V124]

================================

Block 0x220
[0x220:0x272]
---
Predecessors: [0x1c6]
Successors: [0x273]
---
0x220 POP
0x221 PUSH1 0x1
0x223 PUSH1 0x0
0x225 SWAP1
0x226 SLOAD
0x227 SWAP1
0x228 PUSH2 0x100
0x22b EXP
0x22c SWAP1
0x22d DIV
0x22e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x243 AND
0x244 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x259 AND
0x25a CALLER
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 EQ
0x272 ISZERO
---
0x221: V127 = 0x1
0x223: V128 = 0x0
0x226: V129 = S[0x1]
0x228: V130 = 0x100
0x22b: V131 = EXP 0x100 0x0
0x22d: V132 = DIV V129 0x1
0x22e: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x243: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x244: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x259: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x25a: V137 = CALLER
0x25b: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x271: V140 = EQ V139 V136
0x272: V141 = ISZERO V140
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0, V124]
Stack pops: 1
Stack additions: [V141]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0, V141]

================================

Block 0x273
[0x273:0x278]
---
Predecessors: [0x1c6, 0x220]
Successors: [0x279, 0x281]
---
0x273 JUMPDEST
0x274 ISZERO
0x275 PUSH2 0x281
0x278 JUMPI
---
0x273: JUMPDEST 
0x274: V142 = ISZERO S0
0x275: V143 = 0x281
0x278: JUMPI 0x281 V142
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x131, V46, V49, V67, 0x0]

================================

Block 0x279
[0x279:0x280]
---
Predecessors: [0x273]
Successors: [0x30e]
---
0x279 PUSH1 0x0
0x27b SWAP1
0x27c POP
0x27d PUSH2 0x30e
0x280 JUMP
---
0x279: V144 = 0x0
0x27d: V145 = 0x30e
0x280: JUMP 0x30e
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0]

================================

Block 0x281
[0x281:0x2ac]
---
Predecessors: [0x273]
Successors: [0x2ad]
---
0x281 JUMPDEST
0x282 DUP4
0x283 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x298 AND
0x299 GAS
0x29a DUP5
0x29b DUP5
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 DUP3
0x2a1 DUP1
0x2a2 MLOAD
0x2a3 SWAP1
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 SWAP1
0x2a8 DUP1
0x2a9 DUP4
0x2aa DUP4
0x2ab PUSH1 0x0
---
0x281: JUMPDEST 
0x283: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x298: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x299: V148 = GAS
0x29c: V149 = 0x40
0x29e: V150 = M[0x40]
0x2a2: V151 = M[V67]
0x2a4: V152 = 0x20
0x2a6: V153 = ADD 0x20 V67
0x2ab: V154 = 0x0
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V147, V148, S2, S1, V150, V150, V153, V151, V151, V150, V153, 0x0]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V150, V153, V151, V151, V150, V153, 0x0]

================================

Block 0x2ad
[0x2ad:0x2b5]
---
Predecessors: [0x281, 0x2b6]
Successors: [0x2b6, 0x2c8]
---
0x2ad JUMPDEST
0x2ae DUP4
0x2af DUP2
0x2b0 LT
0x2b1 ISZERO
0x2b2 PUSH2 0x2c8
0x2b5 JUMPI
---
0x2ad: JUMPDEST 
0x2b0: V155 = LT S0 V151
0x2b1: V156 = ISZERO V155
0x2b2: V157 = 0x2c8
0x2b5: JUMPI 0x2c8 V156
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V150, V153, V151, V151, V150, V153, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V150, V153, V151, V151, V150, V153, S0]

================================

Block 0x2b6
[0x2b6:0x2c7]
---
Predecessors: [0x2ad]
Successors: [0x2ad]
---
0x2b6 DUP1
0x2b7 DUP3
0x2b8 ADD
0x2b9 MLOAD
0x2ba DUP2
0x2bb DUP5
0x2bc ADD
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 DUP2
0x2c1 ADD
0x2c2 SWAP1
0x2c3 POP
0x2c4 PUSH2 0x2ad
0x2c7 JUMP
---
0x2b8: V158 = ADD V153 S0
0x2b9: V159 = M[V158]
0x2bc: V160 = ADD V150 S0
0x2bd: M[V160] = V159
0x2be: V161 = 0x20
0x2c1: V162 = ADD S0 0x20
0x2c4: V163 = 0x2ad
0x2c7: JUMP 0x2ad
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V150, V153, V151, V151, V150, V153, S0]
Stack pops: 3
Stack additions: [S2, S1, V162]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V150, V153, V151, V151, V150, V153, V162]

================================

Block 0x2c8
[0x2c8:0x2db]
---
Predecessors: [0x2ad]
Successors: [0x2dc, 0x2f5]
---
0x2c8 JUMPDEST
0x2c9 POP
0x2ca POP
0x2cb POP
0x2cc POP
0x2cd SWAP1
0x2ce POP
0x2cf SWAP1
0x2d0 DUP2
0x2d1 ADD
0x2d2 SWAP1
0x2d3 PUSH1 0x1f
0x2d5 AND
0x2d6 DUP1
0x2d7 ISZERO
0x2d8 PUSH2 0x2f5
0x2db JUMPI
---
0x2c8: JUMPDEST 
0x2d1: V164 = ADD V151 V150
0x2d3: V165 = 0x1f
0x2d5: V166 = AND 0x1f V151
0x2d7: V167 = ISZERO V166
0x2d8: V168 = 0x2f5
0x2db: JUMPI 0x2f5 V167
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V150, V153, V151, V151, V150, V153, S0]
Stack pops: 7
Stack additions: [V164, V166]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V164, V166]

================================

Block 0x2dc
[0x2dc:0x2f4]
---
Predecessors: [0x2c8]
Successors: [0x2f5]
---
0x2dc DUP1
0x2dd DUP3
0x2de SUB
0x2df DUP1
0x2e0 MLOAD
0x2e1 PUSH1 0x1
0x2e3 DUP4
0x2e4 PUSH1 0x20
0x2e6 SUB
0x2e7 PUSH2 0x100
0x2ea EXP
0x2eb SUB
0x2ec NOT
0x2ed AND
0x2ee DUP2
0x2ef MSTORE
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 SWAP2
0x2f4 POP
---
0x2de: V169 = SUB V164 V166
0x2e0: V170 = M[V169]
0x2e1: V171 = 0x1
0x2e4: V172 = 0x20
0x2e6: V173 = SUB 0x20 V166
0x2e7: V174 = 0x100
0x2ea: V175 = EXP 0x100 V173
0x2eb: V176 = SUB V175 0x1
0x2ec: V177 = NOT V176
0x2ed: V178 = AND V177 V170
0x2ef: M[V169] = V178
0x2f0: V179 = 0x20
0x2f2: V180 = ADD 0x20 V169
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V164, V166]
Stack pops: 2
Stack additions: [V180, S0]
Exit stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, V180, V166]

================================

Block 0x2f5
[0x2f5:0x30d]
---
Predecessors: [0x2c8, 0x2dc]
Successors: [0x30e]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 SWAP2
0x2f8 POP
0x2f9 POP
0x2fa PUSH1 0x0
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff DUP1
0x300 DUP4
0x301 SUB
0x302 DUP2
0x303 DUP6
0x304 DUP9
0x305 DUP9
0x306 CALL
0x307 SWAP4
0x308 POP
0x309 POP
0x30a POP
0x30b POP
0x30c SWAP1
0x30d POP
---
0x2f5: JUMPDEST 
0x2fa: V181 = 0x0
0x2fc: V182 = 0x40
0x2fe: V183 = M[0x40]
0x301: V184 = SUB S1 V183
0x306: V185 = CALL V148 V147 V49 V183 V184 V183 0x0
---
Entry stack: [V11, 0x131, V46, V49, V67, 0x0, V147, V148, V49, V67, V150, S1, V166]
Stack pops: 8
Stack additions: [V185]
Exit stack: [V11, 0x131, V46, V49, V67, V185]

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0x279, 0x2f5]
Successors: [0x131]
---
0x30e JUMPDEST
0x30f SWAP4
0x310 SWAP3
0x311 POP
0x312 POP
0x313 POP
0x314 JUMP
---
0x30e: JUMPDEST 
0x314: JUMP 0x131
---
Entry stack: [V11, 0x131, V46, V49, V67, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x315
[0x315:0x339]
---
Predecessors: [0x156]
Successors: [0x15e]
---
0x315 JUMPDEST
0x316 PUSH1 0x0
0x318 DUP1
0x319 SWAP1
0x31a SLOAD
0x31b SWAP1
0x31c PUSH2 0x100
0x31f EXP
0x320 SWAP1
0x321 DIV
0x322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x337 AND
0x338 DUP2
0x339 JUMP
---
0x315: JUMPDEST 
0x316: V186 = 0x0
0x31a: V187 = S[0x0]
0x31c: V188 = 0x100
0x31f: V189 = EXP 0x100 0x0
0x321: V190 = DIV V187 0x1
0x322: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x337: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x339: JUMP 0x15e
---
Entry stack: [V11, 0x15e]
Stack pops: 1
Stack additions: [S0, V192]
Exit stack: [V11, 0x15e, V192]

================================

Block 0x33a
[0x33a:0x36d]
---
Predecessors: []
Successors: []
---
0x33a STOP
0x33b LOG1
0x33c PUSH6 0x627a7a723058
0x343 SHA3
0x344 TIMESTAMP
0x345 CODECOPY
0x346 MISSING 0xe6
0x347 MISSING 0xc1
0x348 MISSING 0x22
0x349 MISSING 0xe2
0x34a MISSING 0xa5
0x34b PUSH1 0x1
0x34d MISSING 0xae
0x34e PC
0x34f SWAP9
0x350 MISSING 0xbd
0x351 LOG3
0x352 MISSING 0xd1
0x353 MISSING 0x4d
0x354 REVERT
0x355 EQ
0x356 RETURNDATASIZE
0x357 PUSH22 0x5b92d09391f1a2063b0b69550029
---
0x33a: STOP 
0x33b: LOG S0 S1 S2
0x33c: V193 = 0x627a7a723058
0x343: V194 = SHA3 0x627a7a723058 S3
0x344: V195 = TIMESTAMP
0x345: CODECOPY V195 V194 S4
0x346: MISSING 0xe6
0x347: MISSING 0xc1
0x348: MISSING 0x22
0x349: MISSING 0xe2
0x34a: MISSING 0xa5
0x34b: V196 = 0x1
0x34d: MISSING 0xae
0x34e: V197 = PC
0x350: MISSING 0xbd
0x351: LOG S0 S1 S2 S3 S4
0x352: MISSING 0xd1
0x353: MISSING 0x4d
0x354: REVERT S0 S1
0x355: V198 = EQ S0 S1
0x356: V199 = RETURNDATASIZE
0x357: V200 = 0x5b92d09391f1a2063b0b69550029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1, S8, S0, S1, S2, S3, S4, S5, S6, S7, V197, 0x5b92d09391f1a2063b0b69550029, V199, V198]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x59
Exit block: 0x6c
Body: 0x59, 0x60, 0x64, 0x6c, 0x1a0

Function 1:
Public function signature: 0x2692f25a
Entry block: 0xae
Exit block: 0x131
Body: 0xae, 0xb5, 0xb9, 0x131, 0x1c6, 0x220, 0x273, 0x279, 0x281, 0x2ad, 0x2b6, 0x2c8, 0x2dc, 0x2f5, 0x30e

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x14b
Exit block: 0x15e
Body: 0x14b, 0x152, 0x156, 0x15e, 0x315

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

