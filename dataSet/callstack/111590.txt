Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1554e06d
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1554e06d
0x3c: V13 = EQ 0x1554e06d V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x80]
---
0x41 DUP1
0x42 PUSH4 0x16335280
0x47 EQ
0x48 PUSH2 0x80
0x4b JUMPI
---
0x42: V15 = 0x16335280
0x47: V16 = EQ 0x16335280 V11
0x48: V17 = 0x80
0x4b: JUMPI 0x80 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0xed]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0xed
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0xed
0x65: JUMP 0xed
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0x7f]
---
Predecessors: [0x366]
Successors: []
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 MLOAD
0x6a DUP1
0x6b DUP3
0x6c ISZERO
0x6d ISZERO
0x6e ISZERO
0x6f ISZERO
0x70 DUP2
0x71 MSTORE
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP2
0x76 POP
0x77 POP
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c SWAP2
0x7d SUB
0x7e SWAP1
0x7f RETURN
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x69: V26 = M[0x40]
0x6c: V27 = ISZERO 0x1
0x6d: V28 = ISZERO 0x0
0x6e: V29 = ISZERO 0x1
0x6f: V30 = ISZERO 0x0
0x71: M[V26] = 0x1
0x72: V31 = 0x20
0x74: V32 = ADD 0x20 V26
0x78: V33 = 0x40
0x7a: V34 = M[0x40]
0x7d: V35 = SUB V32 V34
0x7f: RETURN V34 V35
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x80
[0x80:0x87]
---
Predecessors: [0x41]
Successors: [0x88, 0x8c]
---
0x80 JUMPDEST
0x81 CALLVALUE
0x82 DUP1
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x80: JUMPDEST 
0x81: V36 = CALLVALUE
0x83: V37 = ISZERO V36
0x84: V38 = 0x8c
0x87: JUMPI 0x8c V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x80]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V39 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x8c
[0x8c:0xaa]
---
Predecessors: [0x80]
Successors: [0x370]
---
0x8c JUMPDEST
0x8d POP
0x8e PUSH2 0xab
0x91 PUSH1 0x4
0x93 DUP1
0x94 CALLDATASIZE
0x95 SUB
0x96 DUP2
0x97 ADD
0x98 SWAP1
0x99 DUP1
0x9a DUP1
0x9b CALLDATALOAD
0x9c SWAP1
0x9d PUSH1 0x20
0x9f ADD
0xa0 SWAP1
0xa1 SWAP3
0xa2 SWAP2
0xa3 SWAP1
0xa4 POP
0xa5 POP
0xa6 POP
0xa7 PUSH2 0x370
0xaa JUMP
---
0x8c: JUMPDEST 
0x8e: V40 = 0xab
0x91: V41 = 0x4
0x94: V42 = CALLDATASIZE
0x95: V43 = SUB V42 0x4
0x97: V44 = ADD 0x4 V43
0x9b: V45 = CALLDATALOAD 0x4
0x9d: V46 = 0x20
0x9f: V47 = ADD 0x20 0x4
0xa7: V48 = 0x370
0xaa: JUMP 0x370
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xab, V45]
Exit stack: [V11, 0xab, V45]

================================

Block 0xab
[0xab:0xec]
---
Predecessors: [0x37f]
Successors: []
---
0xab JUMPDEST
0xac PUSH1 0x40
0xae MLOAD
0xaf DUP1
0xb0 DUP3
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc AND
0xdd DUP2
0xde MSTORE
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP2
0xe3 POP
0xe4 POP
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 SWAP2
0xea SUB
0xeb SWAP1
0xec RETURN
---
0xab: JUMPDEST 
0xac: V49 = 0x40
0xae: V50 = M[0x40]
0xb1: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0xc7: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xde: M[V50] = V54
0xdf: V55 = 0x20
0xe1: V56 = ADD 0x20 V50
0xe5: V57 = 0x40
0xe7: V58 = M[0x40]
0xea: V59 = SUB V56 V58
0xec: RETURN V58 V59
---
Entry stack: [V11, 0xab, V215]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xab]

================================

Block 0xed
[0xed:0x101]
---
Predecessors: [0x5d]
Successors: [0x102, 0x16f]
---
0xed JUMPDEST
0xee PUSH1 0x0
0xf0 DUP1
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 DUP1
0xf8 SLOAD
0xf9 SWAP1
0xfa POP
0xfb EQ
0xfc ISZERO
0xfd ISZERO
0xfe PUSH2 0x16f
0x101 JUMPI
---
0xed: JUMPDEST 
0xee: V60 = 0x0
0xf1: V61 = 0x0
0xf4: V62 = 0x0
0xf8: V63 = S[0x0]
0xfb: V64 = EQ V63 0x0
0xfc: V65 = ISZERO V64
0xfd: V66 = ISZERO V65
0xfe: V67 = 0x16f
0x101: JUMPI 0x16f V66
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x66, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x102
[0x102:0x16e]
---
Predecessors: [0xed]
Successors: []
---
0x102 PUSH1 0x40
0x104 MLOAD
0x105 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x4
0x12a ADD
0x12b DUP1
0x12c DUP1
0x12d PUSH1 0x20
0x12f ADD
0x130 DUP3
0x131 DUP2
0x132 SUB
0x133 DUP3
0x134 MSTORE
0x135 PUSH1 0x14
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c DUP1
0x13d PUSH32 0x3320636f6e7472616374732c20706c656173652e000000000000000000000000
0x15e DUP2
0x15f MSTORE
0x160 POP
0x161 PUSH1 0x20
0x163 ADD
0x164 SWAP2
0x165 POP
0x166 POP
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b SWAP2
0x16c SUB
0x16d SWAP1
0x16e REVERT
---
0x102: V68 = 0x40
0x104: V69 = M[0x40]
0x105: V70 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x127: M[V69] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x128: V71 = 0x4
0x12a: V72 = ADD 0x4 V69
0x12d: V73 = 0x20
0x12f: V74 = ADD 0x20 V72
0x132: V75 = SUB V74 V72
0x134: M[V72] = V75
0x135: V76 = 0x14
0x138: M[V74] = 0x14
0x139: V77 = 0x20
0x13b: V78 = ADD 0x20 V74
0x13d: V79 = 0x3320636f6e7472616374732c20706c656173652e000000000000000000000000
0x15f: M[V78] = 0x3320636f6e7472616374732c20706c656173652e000000000000000000000000
0x161: V80 = 0x20
0x163: V81 = ADD 0x20 V78
0x167: V82 = 0x40
0x169: V83 = M[0x40]
0x16c: V84 = SUB V81 V83
0x16e: REVERT V83 V84
---
Entry stack: [V11, 0x66, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x16f
[0x16f:0x173]
---
Predecessors: [0xed]
Successors: [0x174]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 SWAP3
0x173 POP
---
0x16f: JUMPDEST 
0x170: V85 = 0x0
---
Entry stack: [V11, 0x66, 0x0, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, 0x66, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x174
[0x174:0x17d]
---
Predecessors: [0x16f, 0x2be]
Successors: [0x17e, 0x366]
---
0x174 JUMPDEST
0x175 PUSH1 0x3
0x177 DUP4
0x178 LT
0x179 ISZERO
0x17a PUSH2 0x366
0x17d JUMPI
---
0x174: JUMPDEST 
0x175: V86 = 0x3
0x178: V87 = LT S2 0x3
0x179: V88 = ISZERO V87
0x17a: V89 = 0x366
0x17d: JUMPI 0x366 V88
---
Entry stack: [V11, 0x66, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x66, 0x0, S2, S1, S0]

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0x174]
Successors: [0x3ae]
---
0x17e PUSH2 0x185
0x181 PUSH2 0x3ae
0x184 JUMP
---
0x17e: V90 = 0x185
0x181: V91 = 0x3ae
0x184: JUMP 0x3ae
---
Entry stack: [V11, 0x66, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: [0x185]
Exit stack: [V11, 0x66, 0x0, S2, S1, S0, 0x185]

================================

Block 0x185
[0x185:0x197]
---
Predecessors: [0x3ae]
Successors: [0x198, 0x1a1]
---
0x185 JUMPDEST
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d PUSH1 0x0
0x18f CREATE
0x190 DUP1
0x191 ISZERO
0x192 DUP1
0x193 ISZERO
0x194 PUSH2 0x1a1
0x197 JUMPI
---
0x185: JUMPDEST 
0x186: V92 = 0x40
0x188: V93 = M[0x40]
0x18b: V94 = SUB V220 V93
0x18d: V95 = 0x0
0x18f: V96 = CREATE 0x0 V93 V94
0x191: V97 = ISZERO V96
0x193: V98 = ISZERO V97
0x194: V99 = 0x1a1
0x197: JUMPI 0x1a1 V98
---
Entry stack: [V11, 0x66, 0x0, S3, S2, S1, V220]
Stack pops: 1
Stack additions: [V96, V97]
Exit stack: [V11, 0x66, 0x0, S3, S2, S1, V96, V97]

================================

Block 0x198
[0x198:0x1a0]
---
Predecessors: [0x185]
Successors: []
---
0x198 RETURNDATASIZE
0x199 PUSH1 0x0
0x19b DUP1
0x19c RETURNDATACOPY
0x19d RETURNDATASIZE
0x19e PUSH1 0x0
0x1a0 REVERT
---
0x198: V100 = RETURNDATASIZE
0x199: V101 = 0x0
0x19c: RETURNDATACOPY 0x0 0x0 V100
0x19d: V102 = RETURNDATASIZE
0x19e: V103 = 0x0
0x1a0: REVERT 0x0 V102
---
Entry stack: [V11, 0x66, 0x0, S4, S3, S2, V96, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, 0x0, S4, S3, S2, V96, V97]

================================

Block 0x1a1
[0x1a1:0x217]
---
Predecessors: [0x185]
Successors: [0x218, 0x219]
---
0x1a1 JUMPDEST
0x1a2 POP
0x1a3 SWAP2
0x1a4 POP
0x1a5 PUSH1 0x0
0x1a7 DUP3
0x1a8 SWAP1
0x1a9 DUP1
0x1aa PUSH1 0x1
0x1ac DUP2
0x1ad SLOAD
0x1ae ADD
0x1af DUP1
0x1b0 DUP3
0x1b1 SSTORE
0x1b2 DUP1
0x1b3 SWAP2
0x1b4 POP
0x1b5 POP
0x1b6 SWAP1
0x1b7 PUSH1 0x1
0x1b9 DUP3
0x1ba SUB
0x1bb SWAP1
0x1bc PUSH1 0x0
0x1be MSTORE
0x1bf PUSH1 0x20
0x1c1 PUSH1 0x0
0x1c3 SHA3
0x1c4 ADD
0x1c5 PUSH1 0x0
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 SWAP3
0x1ca SWAP1
0x1cb SWAP2
0x1cc SWAP1
0x1cd SWAP2
0x1ce PUSH2 0x100
0x1d1 EXP
0x1d2 DUP2
0x1d3 SLOAD
0x1d4 DUP2
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea MUL
0x1eb NOT
0x1ec AND
0x1ed SWAP1
0x1ee DUP4
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 MUL
0x206 OR
0x207 SWAP1
0x208 SSTORE
0x209 POP
0x20a POP
0x20b PUSH1 0x0
0x20d DUP4
0x20e DUP2
0x20f SLOAD
0x210 DUP2
0x211 LT
0x212 ISZERO
0x213 ISZERO
0x214 PUSH2 0x219
0x217 JUMPI
---
0x1a1: JUMPDEST 
0x1a5: V104 = 0x0
0x1aa: V105 = 0x1
0x1ad: V106 = S[0x0]
0x1ae: V107 = ADD V106 0x1
0x1b1: S[0x0] = V107
0x1b7: V108 = 0x1
0x1ba: V109 = SUB V107 0x1
0x1bc: V110 = 0x0
0x1be: M[0x0] = 0x0
0x1bf: V111 = 0x20
0x1c1: V112 = 0x0
0x1c3: V113 = SHA3 0x0 0x20
0x1c4: V114 = ADD V113 V109
0x1c5: V115 = 0x0
0x1ce: V116 = 0x100
0x1d1: V117 = EXP 0x100 0x0
0x1d3: V118 = S[V114]
0x1d5: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V120 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1eb: V121 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V122 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V118
0x1ef: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x205: V125 = MUL V124 0x1
0x206: V126 = OR V125 V122
0x208: S[V114] = V126
0x20b: V127 = 0x0
0x20f: V128 = S[0x0]
0x211: V129 = LT S4 V128
0x212: V130 = ISZERO V129
0x213: V131 = ISZERO V130
0x214: V132 = 0x219
0x217: JUMPI 0x219 V131
---
Entry stack: [V11, 0x66, 0x0, S4, S3, S2, V96, V97]
Stack pops: 5
Stack additions: [S4, S1, S2, 0x0, S4]
Exit stack: [V11, 0x66, 0x0, S4, V96, S2, 0x0, S4]

================================

Block 0x218
[0x218:0x218]
---
Predecessors: [0x1a1]
Successors: []
---
0x218 INVALID
---
0x218: INVALID 
---
Entry stack: [V11, 0x66, 0x0, S4, V96, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, 0x0, S4, V96, S2, 0x0, S0]

================================

Block 0x219
[0x219:0x2a5]
---
Predecessors: [0x1a1]
Successors: [0x2a6, 0x2aa]
---
0x219 JUMPDEST
0x21a SWAP1
0x21b PUSH1 0x0
0x21d MSTORE
0x21e PUSH1 0x20
0x220 PUSH1 0x0
0x222 SHA3
0x223 ADD
0x224 PUSH1 0x0
0x226 SWAP1
0x227 SLOAD
0x228 SWAP1
0x229 PUSH2 0x100
0x22c EXP
0x22d SWAP1
0x22e DIV
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 AND
0x245 SWAP1
0x246 POP
0x247 DUP1
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e PUSH4 0xed9ef7a0
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP2
0x267 PUSH4 0xffffffff
0x26c AND
0x26d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28b MUL
0x28c DUP2
0x28d MSTORE
0x28e PUSH1 0x4
0x290 ADD
0x291 PUSH1 0x0
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 DUP4
0x298 SUB
0x299 DUP2
0x29a PUSH1 0x0
0x29c DUP8
0x29d DUP1
0x29e EXTCODESIZE
0x29f ISZERO
0x2a0 DUP1
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x219: JUMPDEST 
0x21b: V133 = 0x0
0x21d: M[0x0] = 0x0
0x21e: V134 = 0x20
0x220: V135 = 0x0
0x222: V136 = SHA3 0x0 0x20
0x223: V137 = ADD V136 S0
0x224: V138 = 0x0
0x227: V139 = S[V137]
0x229: V140 = 0x100
0x22c: V141 = EXP 0x100 0x0
0x22e: V142 = DIV V139 0x1
0x22f: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x248: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x25e: V147 = 0xed9ef7a0
0x263: V148 = 0x40
0x265: V149 = M[0x40]
0x267: V150 = 0xffffffff
0x26c: V151 = AND 0xffffffff 0xed9ef7a0
0x26d: V152 = 0x100000000000000000000000000000000000000000000000000000000
0x28b: V153 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xed9ef7a0
0x28d: M[V149] = 0xed9ef7a000000000000000000000000000000000000000000000000000000000
0x28e: V154 = 0x4
0x290: V155 = ADD 0x4 V149
0x291: V156 = 0x0
0x293: V157 = 0x40
0x295: V158 = M[0x40]
0x298: V159 = SUB V155 V158
0x29a: V160 = 0x0
0x29e: V161 = EXTCODESIZE V146
0x29f: V162 = ISZERO V161
0x2a1: V163 = ISZERO V162
0x2a2: V164 = 0x2aa
0x2a5: JUMPI 0x2aa V163
---
Entry stack: [V11, 0x66, 0x0, S4, V96, S2, 0x0, S0]
Stack pops: 3
Stack additions: [V144, V146, 0xed9ef7a0, V155, 0x0, V158, V159, V158, 0x0, V146, V162]
Exit stack: [V11, 0x66, 0x0, S4, V96, V144, V146, 0xed9ef7a0, V155, 0x0, V158, V159, V158, 0x0, V146, V162]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x219]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V165 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x66, 0x0, S12, V96, V144, V146, 0xed9ef7a0, V155, 0x0, V158, V159, V158, 0x0, V146, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, 0x0, S12, V96, V144, V146, 0xed9ef7a0, V155, 0x0, V158, V159, V158, 0x0, V146, V162]

================================

Block 0x2aa
[0x2aa:0x2b4]
---
Predecessors: [0x219]
Successors: [0x2b5, 0x2be]
---
0x2aa JUMPDEST
0x2ab POP
0x2ac GAS
0x2ad CALL
0x2ae ISZERO
0x2af DUP1
0x2b0 ISZERO
0x2b1 PUSH2 0x2be
0x2b4 JUMPI
---
0x2aa: JUMPDEST 
0x2ac: V166 = GAS
0x2ad: V167 = CALL V166 V146 0x0 V158 V159 V158 0x0
0x2ae: V168 = ISZERO V167
0x2b0: V169 = ISZERO V168
0x2b1: V170 = 0x2be
0x2b4: JUMPI 0x2be V169
---
Entry stack: [V11, 0x66, 0x0, S12, V96, V144, V146, 0xed9ef7a0, V155, 0x0, V158, V159, V158, 0x0, V146, V162]
Stack pops: 7
Stack additions: [V168]
Exit stack: [V11, 0x66, 0x0, S12, V96, V144, V146, 0xed9ef7a0, V155, V168]

================================

Block 0x2b5
[0x2b5:0x2bd]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b5 RETURNDATASIZE
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 RETURNDATACOPY
0x2ba RETURNDATASIZE
0x2bb PUSH1 0x0
0x2bd REVERT
---
0x2b5: V171 = RETURNDATASIZE
0x2b6: V172 = 0x0
0x2b9: RETURNDATACOPY 0x0 0x0 V171
0x2ba: V173 = RETURNDATASIZE
0x2bb: V174 = 0x0
0x2bd: REVERT 0x0 V173
---
Entry stack: [V11, 0x66, 0x0, S6, V96, V144, V146, 0xed9ef7a0, V155, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, 0x0, S6, V96, V144, V146, 0xed9ef7a0, V155, V168]

================================

Block 0x2be
[0x2be:0x365]
---
Predecessors: [0x2aa]
Successors: [0x174]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 POP
0x2c3 PUSH32 0xc4c33d77bbcd1d9866d628ba9e041c164bbc8883b33e3c174bf7f18e8a9471d5
0x2e4 CALLER
0x2e5 DUP4
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 DUP1
0x2ea DUP4
0x2eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x300 AND
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 DUP2
0x318 MSTORE
0x319 PUSH1 0x20
0x31b ADD
0x31c DUP3
0x31d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x332 AND
0x333 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x348 AND
0x349 DUP2
0x34a MSTORE
0x34b PUSH1 0x20
0x34d ADD
0x34e SWAP3
0x34f POP
0x350 POP
0x351 POP
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 LOG1
0x35a DUP3
0x35b DUP1
0x35c PUSH1 0x1
0x35e ADD
0x35f SWAP4
0x360 POP
0x361 POP
0x362 PUSH2 0x174
0x365 JUMP
---
0x2be: JUMPDEST 
0x2c3: V175 = 0xc4c33d77bbcd1d9866d628ba9e041c164bbc8883b33e3c174bf7f18e8a9471d5
0x2e4: V176 = CALLER
0x2e6: V177 = 0x40
0x2e8: V178 = M[0x40]
0x2eb: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x300: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x301: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x318: M[V178] = V182
0x319: V183 = 0x20
0x31b: V184 = ADD 0x20 V178
0x31d: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x332: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x333: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x348: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x34a: M[V184] = V188
0x34b: V189 = 0x20
0x34d: V190 = ADD 0x20 V184
0x352: V191 = 0x40
0x354: V192 = M[0x40]
0x357: V193 = SUB V190 V192
0x359: LOG V192 V193 0xc4c33d77bbcd1d9866d628ba9e041c164bbc8883b33e3c174bf7f18e8a9471d5
0x35c: V194 = 0x1
0x35e: V195 = ADD 0x1 S6
0x362: V196 = 0x174
0x365: JUMP 0x174
---
Entry stack: [V11, 0x66, 0x0, S6, V96, V144, V146, 0xed9ef7a0, V155, V168]
Stack pops: 7
Stack additions: [V195, S5, S4]
Exit stack: [V11, 0x66, 0x0, V195, V96, V144]

================================

Block 0x366
[0x366:0x36f]
---
Predecessors: [0x174]
Successors: [0x66]
---
0x366 JUMPDEST
0x367 PUSH1 0x1
0x369 SWAP4
0x36a POP
0x36b POP
0x36c POP
0x36d POP
0x36e SWAP1
0x36f JUMP
---
0x366: JUMPDEST 
0x367: V197 = 0x1
0x36f: JUMP 0x66
---
Entry stack: [V11, 0x66, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x370
[0x370:0x37d]
---
Predecessors: [0x8c]
Successors: [0x37e, 0x37f]
---
0x370 JUMPDEST
0x371 PUSH1 0x0
0x373 DUP2
0x374 DUP2
0x375 SLOAD
0x376 DUP2
0x377 LT
0x378 ISZERO
0x379 ISZERO
0x37a PUSH2 0x37f
0x37d JUMPI
---
0x370: JUMPDEST 
0x371: V198 = 0x0
0x375: V199 = S[0x0]
0x377: V200 = LT V45 V199
0x378: V201 = ISZERO V200
0x379: V202 = ISZERO V201
0x37a: V203 = 0x37f
0x37d: JUMPI 0x37f V202
---
Entry stack: [V11, 0xab, V45]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0xab, V45, 0x0, V45]

================================

Block 0x37e
[0x37e:0x37e]
---
Predecessors: [0x370]
Successors: []
---
0x37e INVALID
---
0x37e: INVALID 
---
Entry stack: [V11, 0xab, V45, 0x0, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xab, V45, 0x0, V45]

================================

Block 0x37f
[0x37f:0x3ad]
---
Predecessors: [0x370]
Successors: [0xab]
---
0x37f JUMPDEST
0x380 SWAP1
0x381 PUSH1 0x0
0x383 MSTORE
0x384 PUSH1 0x20
0x386 PUSH1 0x0
0x388 SHA3
0x389 ADD
0x38a PUSH1 0x0
0x38c SWAP2
0x38d POP
0x38e SLOAD
0x38f SWAP1
0x390 PUSH2 0x100
0x393 EXP
0x394 SWAP1
0x395 DIV
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac DUP2
0x3ad JUMP
---
0x37f: JUMPDEST 
0x381: V204 = 0x0
0x383: M[0x0] = 0x0
0x384: V205 = 0x20
0x386: V206 = 0x0
0x388: V207 = SHA3 0x0 0x20
0x389: V208 = ADD V207 V45
0x38a: V209 = 0x0
0x38e: V210 = S[V208]
0x390: V211 = 0x100
0x393: V212 = EXP 0x100 0x0
0x395: V213 = DIV V210 0x1
0x396: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x3ad: JUMP 0xab
---
Entry stack: [V11, 0xab, V45, 0x0, V45]
Stack pops: 4
Stack additions: [S3, V215]
Exit stack: [V11, 0xab, V215]

================================

Block 0x3ae
[0x3ae:0x3bd]
---
Predecessors: [0x17e]
Successors: [0x185]
---
0x3ae JUMPDEST
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 PUSH2 0x426
0x3b5 DUP1
0x3b6 PUSH2 0x3bf
0x3b9 DUP4
0x3ba CODECOPY
0x3bb ADD
0x3bc SWAP1
0x3bd JUMP
---
0x3ae: JUMPDEST 
0x3af: V216 = 0x40
0x3b1: V217 = M[0x40]
0x3b2: V218 = 0x426
0x3b6: V219 = 0x3bf
0x3ba: CODECOPY V217 0x3bf 0x426
0x3bb: V220 = ADD 0x426 V217
0x3bd: JUMP 0x185
---
Entry stack: [V11, 0x66, 0x0, S3, S2, S1, 0x185]
Stack pops: 1
Stack additions: [V220]
Exit stack: [V11, 0x66, 0x0, S3, S2, S1, V220]

================================

Block 0x3be
[0x3be:0x45f]
---
Predecessors: []
Successors: [0x460]
---
0x3be STOP
0x3bf PUSH1 0x80
0x3c1 PUSH1 0x40
0x3c3 MSTORE
0x3c4 PUSH20 0x85448c1b648bd52eec3530e2a069ce59e1533bbb
0x3d9 PUSH1 0x0
0x3db DUP1
0x3dc PUSH2 0x100
0x3df EXP
0x3e0 DUP2
0x3e1 SLOAD
0x3e2 DUP2
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 MUL
0x3f9 NOT
0x3fa AND
0x3fb SWAP1
0x3fc DUP4
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 MUL
0x414 OR
0x415 SWAP1
0x416 SSTORE
0x417 POP
0x418 ADDRESS
0x419 PUSH1 0x1
0x41b PUSH1 0x0
0x41d PUSH2 0x100
0x420 EXP
0x421 DUP2
0x422 SLOAD
0x423 DUP2
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 MUL
0x43a NOT
0x43b AND
0x43c SWAP1
0x43d DUP4
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 MUL
0x455 OR
0x456 SWAP1
0x457 SSTORE
0x458 POP
0x459 CALLVALUE
0x45a DUP1
0x45b ISZERO
0x45c PUSH2 0xa5
0x45f JUMPI
---
0x3be: STOP 
0x3bf: V221 = 0x80
0x3c1: V222 = 0x40
0x3c3: M[0x40] = 0x80
0x3c4: V223 = 0x85448c1b648bd52eec3530e2a069ce59e1533bbb
0x3d9: V224 = 0x0
0x3dc: V225 = 0x100
0x3df: V226 = EXP 0x100 0x0
0x3e1: V227 = S[0x0]
0x3e3: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V229 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3f9: V230 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3fa: V231 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V227
0x3fd: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x85448c1b648bd52eec3530e2a069ce59e1533bbb
0x413: V234 = MUL 0x85448c1b648bd52eec3530e2a069ce59e1533bbb 0x1
0x414: V235 = OR 0x85448c1b648bd52eec3530e2a069ce59e1533bbb V231
0x416: S[0x0] = V235
0x418: V236 = ADDRESS
0x419: V237 = 0x1
0x41b: V238 = 0x0
0x41d: V239 = 0x100
0x420: V240 = EXP 0x100 0x0
0x422: V241 = S[0x1]
0x424: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V243 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x43a: V244 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V245 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V241
0x43e: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x454: V248 = MUL V247 0x1
0x455: V249 = OR V248 V245
0x457: S[0x1] = V249
0x459: V250 = CALLVALUE
0x45b: V251 = ISZERO V250
0x45c: V252 = 0xa5
0x45f: THROWI V251
---
Entry stack: []
Stack pops: 0
Stack additions: [V250]
Exit stack: []

================================

Block 0x460
[0x460:0x480]
---
Predecessors: [0x3be]
Successors: [0x481]
---
0x460 PUSH1 0x0
0x462 DUP1
0x463 REVERT
0x464 JUMPDEST
0x465 POP
0x466 PUSH2 0x371
0x469 DUP1
0x46a PUSH2 0xb5
0x46d PUSH1 0x0
0x46f CODECOPY
0x470 PUSH1 0x0
0x472 RETURN
0x473 STOP
0x474 PUSH1 0x80
0x476 PUSH1 0x40
0x478 MSTORE
0x479 PUSH1 0x4
0x47b CALLDATASIZE
0x47c LT
0x47d PUSH2 0x57
0x480 JUMPI
---
0x460: V253 = 0x0
0x463: REVERT 0x0 0x0
0x464: JUMPDEST 
0x466: V254 = 0x371
0x46a: V255 = 0xb5
0x46d: V256 = 0x0
0x46f: CODECOPY 0x0 0xb5 0x371
0x470: V257 = 0x0
0x472: RETURN 0x0 0x371
0x473: STOP 
0x474: V258 = 0x80
0x476: V259 = 0x40
0x478: M[0x40] = 0x80
0x479: V260 = 0x4
0x47b: V261 = CALLDATASIZE
0x47c: V262 = LT V261 0x4
0x47d: V263 = 0x57
0x480: THROWI V262
---
Entry stack: [V250]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x481
[0x481:0x4b4]
---
Predecessors: [0x460]
Successors: [0x4b5]
---
0x481 PUSH1 0x0
0x483 CALLDATALOAD
0x484 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4a2 SWAP1
0x4a3 DIV
0x4a4 PUSH4 0xffffffff
0x4a9 AND
0x4aa DUP1
0x4ab PUSH4 0x6cd3369a
0x4b0 EQ
0x4b1 PUSH2 0x5c
0x4b4 JUMPI
---
0x481: V264 = 0x0
0x483: V265 = CALLDATALOAD 0x0
0x484: V266 = 0x100000000000000000000000000000000000000000000000000000000
0x4a3: V267 = DIV V265 0x100000000000000000000000000000000000000000000000000000000
0x4a4: V268 = 0xffffffff
0x4a9: V269 = AND 0xffffffff V267
0x4ab: V270 = 0x6cd3369a
0x4b0: V271 = EQ 0x6cd3369a V269
0x4b1: V272 = 0x5c
0x4b4: THROWI V271
---
Entry stack: []
Stack pops: 0
Stack additions: [V269]
Exit stack: [V269]

================================

Block 0x4b5
[0x4b5:0x4bf]
---
Predecessors: [0x481]
Successors: [0x4c0]
---
0x4b5 DUP1
0x4b6 PUSH4 0xa81d22e2
0x4bb EQ
0x4bc PUSH2 0xb3
0x4bf JUMPI
---
0x4b6: V273 = 0xa81d22e2
0x4bb: V274 = EQ 0xa81d22e2 V269
0x4bc: V275 = 0xb3
0x4bf: THROWI V274
---
Entry stack: [V269]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269]

================================

Block 0x4c0
[0x4c0:0x4ca]
---
Predecessors: [0x4b5]
Successors: [0x4cb]
---
0x4c0 DUP1
0x4c1 PUSH4 0xed9ef7a0
0x4c6 EQ
0x4c7 PUSH2 0x10a
0x4ca JUMPI
---
0x4c1: V276 = 0xed9ef7a0
0x4c6: V277 = EQ 0xed9ef7a0 V269
0x4c7: V278 = 0x10a
0x4ca: THROWI V277
---
Entry stack: [V269]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V269]

================================

Block 0x4cb
[0x4cb:0x4d7]
---
Predecessors: [0x4c0]
Successors: [0x4d8]
---
0x4cb JUMPDEST
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf REVERT
0x4d0 JUMPDEST
0x4d1 CALLVALUE
0x4d2 DUP1
0x4d3 ISZERO
0x4d4 PUSH2 0x68
0x4d7 JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V279 = 0x0
0x4cf: REVERT 0x0 0x0
0x4d0: JUMPDEST 
0x4d1: V280 = CALLVALUE
0x4d3: V281 = ISZERO V280
0x4d4: V282 = 0x68
0x4d7: THROWI V281
---
Entry stack: [V269]
Stack pops: 0
Stack additions: [V280]
Exit stack: []

================================

Block 0x4d8
[0x4d8:0x52e]
---
Predecessors: [0x4cb]
Successors: [0x52f]
---
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db REVERT
0x4dc JUMPDEST
0x4dd POP
0x4de PUSH2 0x71
0x4e1 PUSH2 0x114
0x4e4 JUMP
0x4e5 JUMPDEST
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 DUP1
0x4ea DUP3
0x4eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x500 AND
0x501 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x516 AND
0x517 DUP2
0x518 MSTORE
0x519 PUSH1 0x20
0x51b ADD
0x51c SWAP2
0x51d POP
0x51e POP
0x51f PUSH1 0x40
0x521 MLOAD
0x522 DUP1
0x523 SWAP2
0x524 SUB
0x525 SWAP1
0x526 RETURN
0x527 JUMPDEST
0x528 CALLVALUE
0x529 DUP1
0x52a ISZERO
0x52b PUSH2 0xbf
0x52e JUMPI
---
0x4d8: V283 = 0x0
0x4db: REVERT 0x0 0x0
0x4dc: JUMPDEST 
0x4de: V284 = 0x71
0x4e1: V285 = 0x114
0x4e4: THROW 
0x4e5: JUMPDEST 
0x4e6: V286 = 0x40
0x4e8: V287 = M[0x40]
0x4eb: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x500: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x501: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x516: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x518: M[V287] = V291
0x519: V292 = 0x20
0x51b: V293 = ADD 0x20 V287
0x51f: V294 = 0x40
0x521: V295 = M[0x40]
0x524: V296 = SUB V293 V295
0x526: RETURN V295 V296
0x527: JUMPDEST 
0x528: V297 = CALLVALUE
0x52a: V298 = ISZERO V297
0x52b: V299 = 0xbf
0x52e: THROWI V298
---
Entry stack: [V280]
Stack pops: 0
Stack additions: [0x71, V297]
Exit stack: []

================================

Block 0x52f
[0x52f:0x75f]
---
Predecessors: [0x4d8]
Successors: [0x760]
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
0x533 JUMPDEST
0x534 POP
0x535 PUSH2 0xc8
0x538 PUSH2 0x139
0x53b JUMP
0x53c JUMPDEST
0x53d PUSH1 0x40
0x53f MLOAD
0x540 DUP1
0x541 DUP3
0x542 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x557 AND
0x558 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56d AND
0x56e DUP2
0x56f MSTORE
0x570 PUSH1 0x20
0x572 ADD
0x573 SWAP2
0x574 POP
0x575 POP
0x576 PUSH1 0x40
0x578 MLOAD
0x579 DUP1
0x57a SWAP2
0x57b SUB
0x57c SWAP1
0x57d RETURN
0x57e JUMPDEST
0x57f PUSH2 0x112
0x582 PUSH2 0x15f
0x585 JUMP
0x586 JUMPDEST
0x587 STOP
0x588 JUMPDEST
0x589 PUSH1 0x0
0x58b DUP1
0x58c SWAP1
0x58d SLOAD
0x58e SWAP1
0x58f PUSH2 0x100
0x592 EXP
0x593 SWAP1
0x594 DIV
0x595 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5aa AND
0x5ab DUP2
0x5ac JUMP
0x5ad JUMPDEST
0x5ae PUSH1 0x1
0x5b0 PUSH1 0x0
0x5b2 SWAP1
0x5b3 SLOAD
0x5b4 SWAP1
0x5b5 PUSH2 0x100
0x5b8 EXP
0x5b9 SWAP1
0x5ba DIV
0x5bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d0 AND
0x5d1 DUP2
0x5d2 JUMP
0x5d3 JUMPDEST
0x5d4 PUSH1 0x0
0x5d6 PUSH20 0x87d9ef8951de64b7246fdb7c7d5a52760677f361
0x5eb SWAP1
0x5ec POP
0x5ed DUP1
0x5ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x603 AND
0x604 PUSH3 0x186a0
0x608 PUSH1 0x0
0x60a PUSH1 0x40
0x60c MLOAD
0x60d DUP1
0x60e DUP1
0x60f PUSH32 0x676574546f6b656e7357697468526566657272616c0000000000000000000000
0x630 DUP2
0x631 MSTORE
0x632 POP
0x633 PUSH1 0x20
0x635 ADD
0x636 DUP1
0x637 PUSH32 0x3078383534343863316236343862643532656563333533306532613036396365
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x20
0x65c ADD
0x65d PUSH32 0x3539653135333362626200000000000000000000000000000000000000000000
0x67e DUP2
0x67f MSTORE
0x680 POP
0x681 PUSH1 0x40
0x683 ADD
0x684 SWAP1
0x685 POP
0x686 PUSH1 0x0
0x688 PUSH1 0x40
0x68a MLOAD
0x68b DUP1
0x68c DUP4
0x68d SUB
0x68e DUP2
0x68f DUP6
0x690 DUP9
0x691 DUP9
0x692 CALL
0x693 SWAP4
0x694 POP
0x695 POP
0x696 POP
0x697 POP
0x698 POP
0x699 DUP1
0x69a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6af AND
0x6b0 PUSH4 0xa9059cbb
0x6b5 PUSH1 0x0
0x6b7 DUP1
0x6b8 SWAP1
0x6b9 SLOAD
0x6ba SWAP1
0x6bb PUSH2 0x100
0x6be EXP
0x6bf SWAP1
0x6c0 DIV
0x6c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d6 AND
0x6d7 PUSH8 0x4563918244f40000
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 DUP4
0x6e4 PUSH4 0xffffffff
0x6e9 AND
0x6ea PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x708 MUL
0x709 DUP2
0x70a MSTORE
0x70b PUSH1 0x4
0x70d ADD
0x70e DUP1
0x70f DUP4
0x710 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x725 AND
0x726 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73b AND
0x73c DUP2
0x73d MSTORE
0x73e PUSH1 0x20
0x740 ADD
0x741 DUP3
0x742 DUP2
0x743 MSTORE
0x744 PUSH1 0x20
0x746 ADD
0x747 SWAP3
0x748 POP
0x749 POP
0x74a POP
0x74b PUSH1 0x20
0x74d PUSH1 0x40
0x74f MLOAD
0x750 DUP1
0x751 DUP4
0x752 SUB
0x753 DUP2
0x754 PUSH1 0x0
0x756 DUP8
0x757 DUP1
0x758 EXTCODESIZE
0x759 ISZERO
0x75a DUP1
0x75b ISZERO
0x75c PUSH2 0x2f0
0x75f JUMPI
---
0x52f: V300 = 0x0
0x532: REVERT 0x0 0x0
0x533: JUMPDEST 
0x535: V301 = 0xc8
0x538: V302 = 0x139
0x53b: THROW 
0x53c: JUMPDEST 
0x53d: V303 = 0x40
0x53f: V304 = M[0x40]
0x542: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x557: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x558: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x56f: M[V304] = V308
0x570: V309 = 0x20
0x572: V310 = ADD 0x20 V304
0x576: V311 = 0x40
0x578: V312 = M[0x40]
0x57b: V313 = SUB V310 V312
0x57d: RETURN V312 V313
0x57e: JUMPDEST 
0x57f: V314 = 0x112
0x582: V315 = 0x15f
0x585: THROW 
0x586: JUMPDEST 
0x587: STOP 
0x588: JUMPDEST 
0x589: V316 = 0x0
0x58d: V317 = S[0x0]
0x58f: V318 = 0x100
0x592: V319 = EXP 0x100 0x0
0x594: V320 = DIV V317 0x1
0x595: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x5aa: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x5ac: JUMP S0
0x5ad: JUMPDEST 
0x5ae: V323 = 0x1
0x5b0: V324 = 0x0
0x5b3: V325 = S[0x1]
0x5b5: V326 = 0x100
0x5b8: V327 = EXP 0x100 0x0
0x5ba: V328 = DIV V325 0x1
0x5bb: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d0: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x5d2: JUMP S0
0x5d3: JUMPDEST 
0x5d4: V331 = 0x0
0x5d6: V332 = 0x87d9ef8951de64b7246fdb7c7d5a52760677f361
0x5ee: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x603: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x87d9ef8951de64b7246fdb7c7d5a52760677f361
0x604: V335 = 0x186a0
0x608: V336 = 0x0
0x60a: V337 = 0x40
0x60c: V338 = M[0x40]
0x60f: V339 = 0x676574546f6b656e7357697468526566657272616c0000000000000000000000
0x631: M[V338] = 0x676574546f6b656e7357697468526566657272616c0000000000000000000000
0x633: V340 = 0x20
0x635: V341 = ADD 0x20 V338
0x637: V342 = 0x3078383534343863316236343862643532656563333533306532613036396365
0x659: M[V341] = 0x3078383534343863316236343862643532656563333533306532613036396365
0x65a: V343 = 0x20
0x65c: V344 = ADD 0x20 V341
0x65d: V345 = 0x3539653135333362626200000000000000000000000000000000000000000000
0x67f: M[V344] = 0x3539653135333362626200000000000000000000000000000000000000000000
0x681: V346 = 0x40
0x683: V347 = ADD 0x40 V341
0x686: V348 = 0x0
0x688: V349 = 0x40
0x68a: V350 = M[0x40]
0x68d: V351 = SUB V347 V350
0x692: V352 = CALL 0x186a0 0x87d9ef8951de64b7246fdb7c7d5a52760677f361 0x0 V350 V351 V350 0x0
0x69a: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x6af: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x87d9ef8951de64b7246fdb7c7d5a52760677f361
0x6b0: V355 = 0xa9059cbb
0x6b5: V356 = 0x0
0x6b9: V357 = S[0x0]
0x6bb: V358 = 0x100
0x6be: V359 = EXP 0x100 0x0
0x6c0: V360 = DIV V357 0x1
0x6c1: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d6: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x6d7: V363 = 0x4563918244f40000
0x6e0: V364 = 0x40
0x6e2: V365 = M[0x40]
0x6e4: V366 = 0xffffffff
0x6e9: V367 = AND 0xffffffff 0xa9059cbb
0x6ea: V368 = 0x100000000000000000000000000000000000000000000000000000000
0x708: V369 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x70a: M[V365] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x70b: V370 = 0x4
0x70d: V371 = ADD 0x4 V365
0x710: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x725: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x726: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x73b: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x73d: M[V371] = V375
0x73e: V376 = 0x20
0x740: V377 = ADD 0x20 V371
0x743: M[V377] = 0x4563918244f40000
0x744: V378 = 0x20
0x746: V379 = ADD 0x20 V377
0x74b: V380 = 0x20
0x74d: V381 = 0x40
0x74f: V382 = M[0x40]
0x752: V383 = SUB V379 V382
0x754: V384 = 0x0
0x758: V385 = EXTCODESIZE 0x87d9ef8951de64b7246fdb7c7d5a52760677f361
0x759: V386 = ISZERO V385
0x75b: V387 = ISZERO V386
0x75c: V388 = 0x2f0
0x75f: THROWI V387
---
Entry stack: [V297]
Stack pops: 0
Stack additions: [0xc8, 0x112, V322, S0, V330, S0, V386, 0x87d9ef8951de64b7246fdb7c7d5a52760677f361, 0x0, V382, V383, V382, 0x20, V379, 0xa9059cbb, 0x87d9ef8951de64b7246fdb7c7d5a52760677f361, 0x87d9ef8951de64b7246fdb7c7d5a52760677f361]
Exit stack: []

================================

Block 0x760
[0x760:0x76e]
---
Predecessors: [0x52f]
Successors: [0x76f]
---
0x760 PUSH1 0x0
0x762 DUP1
0x763 REVERT
0x764 JUMPDEST
0x765 POP
0x766 GAS
0x767 CALL
0x768 ISZERO
0x769 DUP1
0x76a ISZERO
0x76b PUSH2 0x304
0x76e JUMPI
---
0x760: V389 = 0x0
0x763: REVERT 0x0 0x0
0x764: JUMPDEST 
0x766: V390 = GAS
0x767: V391 = CALL V390 S1 S2 S3 S4 S5 S6
0x768: V392 = ISZERO V391
0x76a: V393 = ISZERO V392
0x76b: V394 = 0x304
0x76e: THROWI V393
---
Entry stack: [0x87d9ef8951de64b7246fdb7c7d5a52760677f361, 0x87d9ef8951de64b7246fdb7c7d5a52760677f361, 0xa9059cbb, V379, 0x20, V382, V383, V382, 0x0, 0x87d9ef8951de64b7246fdb7c7d5a52760677f361, V386]
Stack pops: 0
Stack additions: [V392]
Exit stack: []

================================

Block 0x76f
[0x76f:0x789]
---
Predecessors: [0x760]
Successors: [0x78a]
---
0x76f RETURNDATASIZE
0x770 PUSH1 0x0
0x772 DUP1
0x773 RETURNDATACOPY
0x774 RETURNDATASIZE
0x775 PUSH1 0x0
0x777 REVERT
0x778 JUMPDEST
0x779 POP
0x77a POP
0x77b POP
0x77c POP
0x77d PUSH1 0x40
0x77f MLOAD
0x780 RETURNDATASIZE
0x781 PUSH1 0x20
0x783 DUP2
0x784 LT
0x785 ISZERO
0x786 PUSH2 0x31a
0x789 JUMPI
---
0x76f: V395 = RETURNDATASIZE
0x770: V396 = 0x0
0x773: RETURNDATACOPY 0x0 0x0 V395
0x774: V397 = RETURNDATASIZE
0x775: V398 = 0x0
0x777: REVERT 0x0 V397
0x778: JUMPDEST 
0x77d: V399 = 0x40
0x77f: V400 = M[0x40]
0x780: V401 = RETURNDATASIZE
0x781: V402 = 0x20
0x784: V403 = LT V401 0x20
0x785: V404 = ISZERO V403
0x786: V405 = 0x31a
0x789: THROWI V404
---
Entry stack: [V392]
Stack pops: 0
Stack additions: [V401, V400]
Exit stack: []

================================

Block 0x78a
[0x78a:0x818]
---
Predecessors: [0x76f]
Successors: []
---
0x78a PUSH1 0x0
0x78c DUP1
0x78d REVERT
0x78e JUMPDEST
0x78f DUP2
0x790 ADD
0x791 SWAP1
0x792 DUP1
0x793 DUP1
0x794 MLOAD
0x795 SWAP1
0x796 PUSH1 0x20
0x798 ADD
0x799 SWAP1
0x79a SWAP3
0x79b SWAP2
0x79c SWAP1
0x79d POP
0x79e POP
0x79f POP
0x7a0 POP
0x7a1 CALLER
0x7a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b7 AND
0x7b8 SELFDESTRUCT
0x7b9 STOP
0x7ba LOG1
0x7bb PUSH6 0x627a7a723058
0x7c2 SHA3
0x7c3 SDIV
0x7c4 MISSING 0xee
0x7c5 MISSING 0xd0
0x7c6 MULMOD
0x7c7 DUP6
0x7c8 EXTCODECOPY
0x7c9 SHA3
0x7ca MISSING 0x2a
0x7cb MISSING 0xd7
0x7cc PC
0x7cd EXP
0x7ce DUP5
0x7cf MISSING 0xd4
0x7d0 GAS
0x7d1 MISSING 0xe5
0x7d2 REVERT
0x7d3 MISSING 0x25
0x7d4 XOR
0x7d5 RETURNDATACOPY
0x7d6 NUMBER
0x7d7 PUSH9 0xce58f3b69bbcca5a09
0x7e1 MISSING 0xf
0x7e2 PUSH22 0x29a165627a7a7230582035534cf81c7da7aecde6cf
0x7f9 PUSH5 0xbadbb29281
0x7ff PUSH8 0xc53bec9d2d7c60ae
0x808 MISSING 0xd7
0x809 PUSH15 0x7195790f0029
---
0x78a: V406 = 0x0
0x78d: REVERT 0x0 0x0
0x78e: JUMPDEST 
0x790: V407 = ADD S1 S0
0x794: V408 = M[S1]
0x796: V409 = 0x20
0x798: V410 = ADD 0x20 S1
0x7a1: V411 = CALLER
0x7a2: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b7: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x7b8: SELFDESTRUCT V413
0x7b9: STOP 
0x7ba: LOG S0 S1 S2
0x7bb: V414 = 0x627a7a723058
0x7c2: V415 = SHA3 0x627a7a723058 S3
0x7c3: V416 = SDIV V415 S4
0x7c4: MISSING 0xee
0x7c5: MISSING 0xd0
0x7c6: V417 = MULMOD S0 S1 S2
0x7c8: EXTCODECOPY S7 V417 S3 S4
0x7c9: V418 = SHA3 S5 S6
0x7ca: MISSING 0x2a
0x7cb: MISSING 0xd7
0x7cc: V419 = PC
0x7cd: V420 = EXP V419 S0
0x7cf: MISSING 0xd4
0x7d0: V421 = GAS
0x7d1: MISSING 0xe5
0x7d2: REVERT S0 S1
0x7d3: MISSING 0x25
0x7d4: V422 = XOR S0 S1
0x7d5: RETURNDATACOPY V422 S2 S3
0x7d6: V423 = NUMBER
0x7d7: V424 = 0xce58f3b69bbcca5a09
0x7e1: MISSING 0xf
0x7e2: V425 = 0x29a165627a7a7230582035534cf81c7da7aecde6cf
0x7f9: V426 = 0xbadbb29281
0x7ff: V427 = 0xc53bec9d2d7c60ae
0x808: MISSING 0xd7
0x809: V428 = 0x7195790f0029
---
Entry stack: [V400, V401]
Stack pops: 0
Stack additions: [V416, V418, S7, S4, V420, S1, S2, S3, S4, V421, 0xce58f3b69bbcca5a09, V423, 0xc53bec9d2d7c60ae, 0xbadbb29281, 0x29a165627a7a7230582035534cf81c7da7aecde6cf, 0x7195790f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1554e06d
Entry block: 0x51
Exit block: 0x2b5
Body: 0x51, 0x59, 0x5d, 0x66, 0xed, 0x102, 0x16f, 0x174, 0x17e, 0x185, 0x198, 0x1a1, 0x218, 0x219, 0x2a6, 0x2aa, 0x2b5, 0x2be, 0x366, 0x3ae

Function 1:
Public function signature: 0x16335280
Entry block: 0x80
Exit block: 0xab
Body: 0x80, 0x88, 0x8c, 0xab, 0x370, 0x37e, 0x37f

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

